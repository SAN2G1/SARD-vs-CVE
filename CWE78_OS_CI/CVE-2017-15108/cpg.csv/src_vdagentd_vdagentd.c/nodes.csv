command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	32644	File	data/converged/CVE-2017-15108_vd_agent/src_vdagentd_vdagentd.c								
ANR	32645	ClassDef	agent_data	51:0:1424:1572							
ANR	32646	DeclStmt									
ANR	32647	Decl							char	char *	session
ANR	32648	DeclStmt									
ANR	32649	Decl							int	int	width
ANR	32650	DeclStmt									
ANR	32651	Decl							int	int	height
ANR	32652	DeclStmt									
ANR	32653	Decl							struct vdagentd_guest_xorg_resolution	struct vdagentd_guest_xorg_resolution *	screen_info
ANR	32654	DeclStmt									
ANR	32655	Decl							int	int	screen_count
ANR	32656	DeclStmt									
ANR	32657	Decl							const char	const char *	pidfilename
ANR	32658	DeclStmt									
ANR	32659	Decl							const char	const char *	portdev
ANR	32660	DeclStmt									
ANR	32661	Decl							const char	const char *	vdagentd_socket
ANR	32662	DeclStmt									
ANR	32663	Decl							const char	const char *	uinput_device
ANR	32664	DeclStmt									
ANR	32665	Decl							int	int	debug
ANR	32666	DeclStmt									
ANR	32667	Decl							int	int	uinput_fake
ANR	32668	DeclStmt									
ANR	32669	Decl							int	int	only_once
ANR	32670	DeclStmt									
ANR	32671	Decl							struct udscs_server	struct udscs_server *	server
ANR	32672	DeclStmt									
ANR	32673	Decl							struct vdagent_virtio_port	struct vdagent_virtio_port *	virtio_port
ANR	32674	DeclStmt									
ANR	32675	Decl							GHashTable	GHashTable *	active_xfers
ANR	32676	DeclStmt									
ANR	32677	Decl							struct session_info	struct session_info *	session_info
ANR	32678	DeclStmt									
ANR	32679	Decl							struct vdagentd_uinput	struct vdagentd_uinput *	uinput
ANR	32680	DeclStmt									
ANR	32681	Decl							VDAgentMonitorsConfig	VDAgentMonitorsConfig *	mon_config
ANR	32682	DeclStmt									
ANR	32683	Decl							uint32_t	uint32_t *	capabilities
ANR	32684	DeclStmt									
ANR	32685	Decl							int	int	capabilities_size
ANR	32686	DeclStmt									
ANR	32687	Decl							const char	const char *	active_session
ANR	32688	DeclStmt									
ANR	32689	Decl							unsigned int	unsigned int	session_count
ANR	32690	DeclStmt									
ANR	32691	Decl							struct udscs_connection	struct udscs_connection *	active_session_conn
ANR	32692	DeclStmt									
ANR	32693	Decl							int	int [ 256 ]	agent_owns_clipboard
ANR	32694	DeclStmt									
ANR	32695	Decl							int	int	quit
ANR	32696	DeclStmt									
ANR	32697	Decl							int	int	retval
ANR	32698	DeclStmt									
ANR	32699	Decl							int	int	client_connected
ANR	32700	DeclStmt									
ANR	32701	Decl							int	int	max_clipboard
ANR	32702	Function	virtio_msg_uint32_to_le	85:0:2581:2871							
ANR	32703	FunctionDef	"virtio_msg_uint32_to_le (uint8_t * _msg , uint32_t size , uint32_t offset)"		32702	0					
ANR	32704	CompoundStatement		86:0:2664:2871	32702	0					
ANR	32705	IdentifierDeclStatement	"uint32_t i , * msg = ( uint32_t * ) ( _msg + offset ) ;"	87:4:2670:2716	32702	0	True				
ANR	32706	IdentifierDecl	i		32702	0					
ANR	32707	IdentifierDeclType	uint32_t		32702	0					
ANR	32708	Identifier	i		32702	1					
ANR	32709	IdentifierDecl	* msg = ( uint32_t * ) ( _msg + offset )		32702	1					
ANR	32710	IdentifierDeclType	uint32_t *		32702	0					
ANR	32711	Identifier	msg		32702	1					
ANR	32712	AssignmentExpression	* msg = ( uint32_t * ) ( _msg + offset )		32702	2		=			
ANR	32713	Identifier	msg		32702	0					
ANR	32714	CastExpression	( uint32_t * ) ( _msg + offset )		32702	1					
ANR	32715	CastTarget	uint32_t *		32702	0					
ANR	32716	AdditiveExpression	_msg + offset		32702	1		+			
ANR	32717	Identifier	_msg		32702	0					
ANR	32718	Identifier	offset		32702	1					
ANR	32719	ForStatement	for ( i = 0 ; i < ( size - offset ) / 4 ; i ++ )		32702	1					
ANR	32720	ForInit	i = 0 ;	90:9:2794:2799	32702	0	True				
ANR	32721	AssignmentExpression	i = 0		32702	0		=			
ANR	32722	Identifier	i		32702	0					
ANR	32723	PrimaryExpression	0		32702	1					
ANR	32724	Condition	i < ( size - offset ) / 4	90:16:2801:2823	32702	1	True				
ANR	32725	RelationalExpression	i < ( size - offset ) / 4		32702	0		<			
ANR	32726	Identifier	i		32702	0					
ANR	32727	MultiplicativeExpression	( size - offset ) / 4		32702	1		/			
ANR	32728	AdditiveExpression	size - offset		32702	0		-			
ANR	32729	Identifier	size		32702	0					
ANR	32730	Identifier	offset		32702	1					
ANR	32731	PrimaryExpression	4		32702	1					
ANR	32732	PostIncDecOperationExpression	i ++	90:41:2826:2828	32702	2	True				
ANR	32733	Identifier	i		32702	0					
ANR	32734	IncDec	++		32702	1					
ANR	32735	ExpressionStatement	msg [ i ] = GUINT32_TO_LE ( msg [ i ] )	91:8:2839:2869	32702	3	True				
ANR	32736	AssignmentExpression	msg [ i ] = GUINT32_TO_LE ( msg [ i ] )		32702	0		=			
ANR	32737	ArrayIndexing	msg [ i ]		32702	0					
ANR	32738	Identifier	msg		32702	0					
ANR	32739	Identifier	i		32702	1					
ANR	32740	CallExpression	GUINT32_TO_LE ( msg [ i ] )		32702	1					
ANR	32741	Callee	GUINT32_TO_LE		32702	0					
ANR	32742	Identifier	GUINT32_TO_LE		32702	0					
ANR	32743	ArgumentList	msg [ i ]		32702	1					
ANR	32744	Argument	msg [ i ]		32702	0					
ANR	32745	ArrayIndexing	msg [ i ]		32702	0					
ANR	32746	Identifier	msg		32702	0					
ANR	32747	Identifier	i		32702	1					
ANR	32748	ReturnType	static void		32702	1					
ANR	32749	Identifier	virtio_msg_uint32_to_le		32702	2					
ANR	32750	ParameterList	"uint8_t * _msg , uint32_t size , uint32_t offset"		32702	3					
ANR	32751	Parameter	uint8_t * _msg	85:36:2617:2629	32702	0	True				
ANR	32752	ParameterType	uint8_t *		32702	0					
ANR	32753	Identifier	_msg		32702	1					
ANR	32754	Parameter	uint32_t size	85:51:2632:2644	32702	1	True				
ANR	32755	ParameterType	uint32_t		32702	0					
ANR	32756	Identifier	size		32702	1					
ANR	32757	Parameter	uint32_t offset	85:66:2647:2661	32702	2	True				
ANR	32758	ParameterType	uint32_t		32702	0					
ANR	32759	Identifier	offset		32702	1					
ANR	32760	CFGEntryNode	ENTRY		32702		True				
ANR	32761	CFGExitNode	EXIT		32702		True				
ANR	32762	Symbol	msg		32702						
ANR	32763	Symbol	* i		32702						
ANR	32764	Symbol	size		32702						
ANR	32765	Symbol	offset		32702						
ANR	32766	Symbol	i		32702						
ANR	32767	Symbol	* msg		32702						
ANR	32768	Symbol	GUINT32_TO_LE		32702						
ANR	32769	Symbol	_msg		32702						
ANR	32770	Function	virtio_msg_uint32_from_le	94:0:2874:3168							
ANR	32771	FunctionDef	"virtio_msg_uint32_from_le (uint8_t * _msg , uint32_t size , uint32_t offset)"		32770	0					
ANR	32772	CompoundStatement		95:0:2959:3168	32770	0					
ANR	32773	IdentifierDeclStatement	"uint32_t i , * msg = ( uint32_t * ) ( _msg + offset ) ;"	96:4:2965:3011	32770	0	True				
ANR	32774	IdentifierDecl	i		32770	0					
ANR	32775	IdentifierDeclType	uint32_t		32770	0					
ANR	32776	Identifier	i		32770	1					
ANR	32777	IdentifierDecl	* msg = ( uint32_t * ) ( _msg + offset )		32770	1					
ANR	32778	IdentifierDeclType	uint32_t *		32770	0					
ANR	32779	Identifier	msg		32770	1					
ANR	32780	AssignmentExpression	* msg = ( uint32_t * ) ( _msg + offset )		32770	2		=			
ANR	32781	Identifier	msg		32770	0					
ANR	32782	CastExpression	( uint32_t * ) ( _msg + offset )		32770	1					
ANR	32783	CastTarget	uint32_t *		32770	0					
ANR	32784	AdditiveExpression	_msg + offset		32770	1		+			
ANR	32785	Identifier	_msg		32770	0					
ANR	32786	Identifier	offset		32770	1					
ANR	32787	ForStatement	for ( i = 0 ; i < ( size - offset ) / 4 ; i ++ )		32770	1					
ANR	32788	ForInit	i = 0 ;	99:9:3089:3094	32770	0	True				
ANR	32789	AssignmentExpression	i = 0		32770	0		=			
ANR	32790	Identifier	i		32770	0					
ANR	32791	PrimaryExpression	0		32770	1					
ANR	32792	Condition	i < ( size - offset ) / 4	99:16:3096:3118	32770	1	True				
ANR	32793	RelationalExpression	i < ( size - offset ) / 4		32770	0		<			
ANR	32794	Identifier	i		32770	0					
ANR	32795	MultiplicativeExpression	( size - offset ) / 4		32770	1		/			
ANR	32796	AdditiveExpression	size - offset		32770	0		-			
ANR	32797	Identifier	size		32770	0					
ANR	32798	Identifier	offset		32770	1					
ANR	32799	PrimaryExpression	4		32770	1					
ANR	32800	PostIncDecOperationExpression	i ++	99:41:3121:3123	32770	2	True				
ANR	32801	Identifier	i		32770	0					
ANR	32802	IncDec	++		32770	1					
ANR	32803	ExpressionStatement	msg [ i ] = GUINT32_FROM_LE ( msg [ i ] )	100:8:3134:3166	32770	3	True				
ANR	32804	AssignmentExpression	msg [ i ] = GUINT32_FROM_LE ( msg [ i ] )		32770	0		=			
ANR	32805	ArrayIndexing	msg [ i ]		32770	0					
ANR	32806	Identifier	msg		32770	0					
ANR	32807	Identifier	i		32770	1					
ANR	32808	CallExpression	GUINT32_FROM_LE ( msg [ i ] )		32770	1					
ANR	32809	Callee	GUINT32_FROM_LE		32770	0					
ANR	32810	Identifier	GUINT32_FROM_LE		32770	0					
ANR	32811	ArgumentList	msg [ i ]		32770	1					
ANR	32812	Argument	msg [ i ]		32770	0					
ANR	32813	ArrayIndexing	msg [ i ]		32770	0					
ANR	32814	Identifier	msg		32770	0					
ANR	32815	Identifier	i		32770	1					
ANR	32816	ReturnType	static void		32770	1					
ANR	32817	Identifier	virtio_msg_uint32_from_le		32770	2					
ANR	32818	ParameterList	"uint8_t * _msg , uint32_t size , uint32_t offset"		32770	3					
ANR	32819	Parameter	uint8_t * _msg	94:38:2912:2924	32770	0	True				
ANR	32820	ParameterType	uint8_t *		32770	0					
ANR	32821	Identifier	_msg		32770	1					
ANR	32822	Parameter	uint32_t size	94:53:2927:2939	32770	1	True				
ANR	32823	ParameterType	uint32_t		32770	0					
ANR	32824	Identifier	size		32770	1					
ANR	32825	Parameter	uint32_t offset	94:68:2942:2956	32770	2	True				
ANR	32826	ParameterType	uint32_t		32770	0					
ANR	32827	Identifier	offset		32770	1					
ANR	32828	CFGEntryNode	ENTRY		32770		True				
ANR	32829	CFGExitNode	EXIT		32770		True				
ANR	32830	Symbol	msg		32770						
ANR	32831	Symbol	* i		32770						
ANR	32832	Symbol	size		32770						
ANR	32833	Symbol	offset		32770						
ANR	32834	Symbol	i		32770						
ANR	32835	Symbol	* msg		32770						
ANR	32836	Symbol	GUINT32_FROM_LE		32770						
ANR	32837	Symbol	_msg		32770						
ANR	32838	Function	virtio_msg_uint16_from_le	103:0:3171:3478							
ANR	32839	FunctionDef	"virtio_msg_uint16_from_le (uint8_t * _msg , uint32_t size , uint32_t offset)"		32838	0					
ANR	32840	CompoundStatement		104:0:3256:3478	32838	0					
ANR	32841	IdentifierDeclStatement	uint32_t i ;	105:4:3262:3272	32838	0	True				
ANR	32842	IdentifierDecl	i		32838	0					
ANR	32843	IdentifierDeclType	uint32_t		32838	0					
ANR	32844	Identifier	i		32838	1					
ANR	32845	IdentifierDeclStatement	uint16_t * msg = ( uint16_t * ) ( _msg + offset ) ;	106:4:3278:3321	32838	1	True				
ANR	32846	IdentifierDecl	* msg = ( uint16_t * ) ( _msg + offset )		32838	0					
ANR	32847	IdentifierDeclType	uint16_t *		32838	0					
ANR	32848	Identifier	msg		32838	1					
ANR	32849	AssignmentExpression	* msg = ( uint16_t * ) ( _msg + offset )		32838	2		=			
ANR	32850	Identifier	msg		32838	0					
ANR	32851	CastExpression	( uint16_t * ) ( _msg + offset )		32838	1					
ANR	32852	CastTarget	uint16_t *		32838	0					
ANR	32853	AdditiveExpression	_msg + offset		32838	1		+			
ANR	32854	Identifier	_msg		32838	0					
ANR	32855	Identifier	offset		32838	1					
ANR	32856	ForStatement	for ( i = 0 ; i < ( size - offset ) / 2 ; i ++ )		32838	2					
ANR	32857	ForInit	i = 0 ;	109:9:3399:3404	32838	0	True				
ANR	32858	AssignmentExpression	i = 0		32838	0		=			
ANR	32859	Identifier	i		32838	0					
ANR	32860	PrimaryExpression	0		32838	1					
ANR	32861	Condition	i < ( size - offset ) / 2	109:16:3406:3428	32838	1	True				
ANR	32862	RelationalExpression	i < ( size - offset ) / 2		32838	0		<			
ANR	32863	Identifier	i		32838	0					
ANR	32864	MultiplicativeExpression	( size - offset ) / 2		32838	1		/			
ANR	32865	AdditiveExpression	size - offset		32838	0		-			
ANR	32866	Identifier	size		32838	0					
ANR	32867	Identifier	offset		32838	1					
ANR	32868	PrimaryExpression	2		32838	1					
ANR	32869	PostIncDecOperationExpression	i ++	109:41:3431:3433	32838	2	True				
ANR	32870	Identifier	i		32838	0					
ANR	32871	IncDec	++		32838	1					
ANR	32872	ExpressionStatement	msg [ i ] = GUINT16_FROM_LE ( msg [ i ] )	110:8:3444:3476	32838	3	True				
ANR	32873	AssignmentExpression	msg [ i ] = GUINT16_FROM_LE ( msg [ i ] )		32838	0		=			
ANR	32874	ArrayIndexing	msg [ i ]		32838	0					
ANR	32875	Identifier	msg		32838	0					
ANR	32876	Identifier	i		32838	1					
ANR	32877	CallExpression	GUINT16_FROM_LE ( msg [ i ] )		32838	1					
ANR	32878	Callee	GUINT16_FROM_LE		32838	0					
ANR	32879	Identifier	GUINT16_FROM_LE		32838	0					
ANR	32880	ArgumentList	msg [ i ]		32838	1					
ANR	32881	Argument	msg [ i ]		32838	0					
ANR	32882	ArrayIndexing	msg [ i ]		32838	0					
ANR	32883	Identifier	msg		32838	0					
ANR	32884	Identifier	i		32838	1					
ANR	32885	ReturnType	static void		32838	1					
ANR	32886	Identifier	virtio_msg_uint16_from_le		32838	2					
ANR	32887	ParameterList	"uint8_t * _msg , uint32_t size , uint32_t offset"		32838	3					
ANR	32888	Parameter	uint8_t * _msg	103:38:3209:3221	32838	0	True				
ANR	32889	ParameterType	uint8_t *		32838	0					
ANR	32890	Identifier	_msg		32838	1					
ANR	32891	Parameter	uint32_t size	103:53:3224:3236	32838	1	True				
ANR	32892	ParameterType	uint32_t		32838	0					
ANR	32893	Identifier	size		32838	1					
ANR	32894	Parameter	uint32_t offset	103:68:3239:3253	32838	2	True				
ANR	32895	ParameterType	uint32_t		32838	0					
ANR	32896	Identifier	offset		32838	1					
ANR	32897	CFGEntryNode	ENTRY		32838		True				
ANR	32898	CFGExitNode	EXIT		32838		True				
ANR	32899	Symbol	msg		32838						
ANR	32900	Symbol	* i		32838						
ANR	32901	Symbol	size		32838						
ANR	32902	Symbol	offset		32838						
ANR	32903	Symbol	GUINT16_FROM_LE		32838						
ANR	32904	Symbol	i		32838						
ANR	32905	Symbol	* msg		32838						
ANR	32906	Symbol	_msg		32838						
ANR	32907	Function	send_capabilities	114:0:3536:4795							
ANR	32908	FunctionDef	"send_capabilities (struct vdagent_virtio_port * vport , uint32_t request)"		32907	0					
ANR	32909	CompoundStatement		116:0:3623:4795	32907	0					
ANR	32910	IdentifierDeclStatement	VDAgentAnnounceCapabilities * caps ;	117:4:3629:3662	32907	0	True				
ANR	32911	IdentifierDecl	* caps		32907	0					
ANR	32912	IdentifierDeclType	VDAgentAnnounceCapabilities *		32907	0					
ANR	32913	Identifier	caps		32907	1					
ANR	32914	IdentifierDeclStatement	uint32_t size ;	118:4:3668:3681	32907	1	True				
ANR	32915	IdentifierDecl	size		32907	0					
ANR	32916	IdentifierDeclType	uint32_t		32907	0					
ANR	32917	Identifier	size		32907	1					
ANR	32918	ExpressionStatement	size = sizeof ( * caps ) + VD_AGENT_CAPS_BYTES	120:4:3688:3730	32907	2	True				
ANR	32919	AssignmentExpression	size = sizeof ( * caps ) + VD_AGENT_CAPS_BYTES		32907	0		=			
ANR	32920	Identifier	size		32907	0					
ANR	32921	AdditiveExpression	sizeof ( * caps ) + VD_AGENT_CAPS_BYTES		32907	1		+			
ANR	32922	SizeofExpression	sizeof ( * caps )		32907	0					
ANR	32923	Sizeof	sizeof		32907	0					
ANR	32924	UnaryOperationExpression	* caps		32907	1					
ANR	32925	UnaryOperator	*		32907	0					
ANR	32926	Identifier	caps		32907	1					
ANR	32927	Identifier	VD_AGENT_CAPS_BYTES		32907	1					
ANR	32928	ExpressionStatement	"caps = calloc ( 1 , size )"	121:4:3736:3758	32907	3	True				
ANR	32929	AssignmentExpression	"caps = calloc ( 1 , size )"		32907	0		=			
ANR	32930	Identifier	caps		32907	0					
ANR	32931	CallExpression	"calloc ( 1 , size )"		32907	1					
ANR	32932	Callee	calloc		32907	0					
ANR	32933	Identifier	calloc		32907	0					
ANR	32934	ArgumentList	1		32907	1					
ANR	32935	Argument	1		32907	0					
ANR	32936	PrimaryExpression	1		32907	0					
ANR	32937	Argument	size		32907	1					
ANR	32938	Identifier	size		32907	0					
ANR	32939	IfStatement	if ( ! caps )		32907	4					
ANR	32940	Condition	! caps	122:8:3768:3772	32907	0	True				
ANR	32941	UnaryOperationExpression	! caps		32907	0					
ANR	32942	UnaryOperator	!		32907	0					
ANR	32943	Identifier	caps		32907	1					
ANR	32944	CompoundStatement		7:15:151:151	32907	1					
ANR	32945	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating capabilities array (write)"" )"	123:8:3785:3855	32907	0	True				
ANR	32946	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating capabilities array (write)"" )"		32907	0					
ANR	32947	Callee	syslog		32907	0					
ANR	32948	Identifier	syslog		32907	0					
ANR	32949	ArgumentList	LOG_ERR		32907	1					
ANR	32950	Argument	LOG_ERR		32907	0					
ANR	32951	Identifier	LOG_ERR		32907	0					
ANR	32952	Argument	"""out of memory allocating capabilities array (write)"""		32907	1					
ANR	32953	PrimaryExpression	"""out of memory allocating capabilities array (write)"""		32907	0					
ANR	32954	ReturnStatement	return ;	124:8:3865:3871	32907	1	True				
ANR	32955	ExpressionStatement	caps -> request = request	127:4:3884:3907	32907	5	True				
ANR	32956	AssignmentExpression	caps -> request = request		32907	0		=			
ANR	32957	PtrMemberAccess	caps -> request		32907	0					
ANR	32958	Identifier	caps		32907	0					
ANR	32959	Identifier	request		32907	1					
ANR	32960	Identifier	request		32907	1					
ANR	32961	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MOUSE_STATE )"	128:4:3913:3974	32907	6	True				
ANR	32962	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MOUSE_STATE )"		32907	0					
ANR	32963	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32964	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32965	ArgumentList	caps -> caps		32907	1					
ANR	32966	Argument	caps -> caps		32907	0					
ANR	32967	PtrMemberAccess	caps -> caps		32907	0					
ANR	32968	Identifier	caps		32907	0					
ANR	32969	Identifier	caps		32907	1					
ANR	32970	Argument	VD_AGENT_CAP_MOUSE_STATE		32907	1					
ANR	32971	Identifier	VD_AGENT_CAP_MOUSE_STATE		32907	0					
ANR	32972	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MONITORS_CONFIG )"	129:4:3980:4045	32907	7	True				
ANR	32973	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MONITORS_CONFIG )"		32907	0					
ANR	32974	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32975	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32976	ArgumentList	caps -> caps		32907	1					
ANR	32977	Argument	caps -> caps		32907	0					
ANR	32978	PtrMemberAccess	caps -> caps		32907	0					
ANR	32979	Identifier	caps		32907	0					
ANR	32980	Identifier	caps		32907	1					
ANR	32981	Argument	VD_AGENT_CAP_MONITORS_CONFIG		32907	1					
ANR	32982	Identifier	VD_AGENT_CAP_MONITORS_CONFIG		32907	0					
ANR	32983	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_REPLY )"	130:4:4051:4106	32907	8	True				
ANR	32984	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_REPLY )"		32907	0					
ANR	32985	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32986	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32987	ArgumentList	caps -> caps		32907	1					
ANR	32988	Argument	caps -> caps		32907	0					
ANR	32989	PtrMemberAccess	caps -> caps		32907	0					
ANR	32990	Identifier	caps		32907	0					
ANR	32991	Identifier	caps		32907	1					
ANR	32992	Argument	VD_AGENT_CAP_REPLY		32907	1					
ANR	32993	Identifier	VD_AGENT_CAP_REPLY		32907	0					
ANR	32994	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"	131:4:4112:4181	32907	9	True				
ANR	32995	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"		32907	0					
ANR	32996	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32997	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	32998	ArgumentList	caps -> caps		32907	1					
ANR	32999	Argument	caps -> caps		32907	0					
ANR	33000	PtrMemberAccess	caps -> caps		32907	0					
ANR	33001	Identifier	caps		32907	0					
ANR	33002	Identifier	caps		32907	1					
ANR	33003	Argument	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		32907	1					
ANR	33004	Identifier	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		32907	0					
ANR	33005	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	132:4:4187:4256	32907	10	True				
ANR	33006	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		32907	0					
ANR	33007	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33008	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33009	ArgumentList	caps -> caps		32907	1					
ANR	33010	Argument	caps -> caps		32907	0					
ANR	33011	PtrMemberAccess	caps -> caps		32907	0					
ANR	33012	Identifier	caps		32907	0					
ANR	33013	Identifier	caps		32907	1					
ANR	33014	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		32907	1					
ANR	33015	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		32907	0					
ANR	33016	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_SPARSE_MONITORS_CONFIG )"	133:4:4262:4334	32907	11	True				
ANR	33017	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_SPARSE_MONITORS_CONFIG )"		32907	0					
ANR	33018	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33019	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33020	ArgumentList	caps -> caps		32907	1					
ANR	33021	Argument	caps -> caps		32907	0					
ANR	33022	PtrMemberAccess	caps -> caps		32907	0					
ANR	33023	Identifier	caps		32907	0					
ANR	33024	Identifier	caps		32907	1					
ANR	33025	Argument	VD_AGENT_CAP_SPARSE_MONITORS_CONFIG		32907	1					
ANR	33026	Identifier	VD_AGENT_CAP_SPARSE_MONITORS_CONFIG		32907	0					
ANR	33027	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_GUEST_LINEEND_LF )"	134:4:4340:4406	32907	12	True				
ANR	33028	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_GUEST_LINEEND_LF )"		32907	0					
ANR	33029	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33030	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33031	ArgumentList	caps -> caps		32907	1					
ANR	33032	Argument	caps -> caps		32907	0					
ANR	33033	PtrMemberAccess	caps -> caps		32907	0					
ANR	33034	Identifier	caps		32907	0					
ANR	33035	Identifier	caps		32907	1					
ANR	33036	Argument	VD_AGENT_CAP_GUEST_LINEEND_LF		32907	1					
ANR	33037	Identifier	VD_AGENT_CAP_GUEST_LINEEND_LF		32907	0					
ANR	33038	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MAX_CLIPBOARD )"	135:4:4412:4475	32907	13	True				
ANR	33039	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MAX_CLIPBOARD )"		32907	0					
ANR	33040	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33041	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33042	ArgumentList	caps -> caps		32907	1					
ANR	33043	Argument	caps -> caps		32907	0					
ANR	33044	PtrMemberAccess	caps -> caps		32907	0					
ANR	33045	Identifier	caps		32907	0					
ANR	33046	Identifier	caps		32907	1					
ANR	33047	Argument	VD_AGENT_CAP_MAX_CLIPBOARD		32907	1					
ANR	33048	Identifier	VD_AGENT_CAP_MAX_CLIPBOARD		32907	0					
ANR	33049	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_AUDIO_VOLUME_SYNC )"	136:4:4481:4548	32907	14	True				
ANR	33050	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_AUDIO_VOLUME_SYNC )"		32907	0					
ANR	33051	Callee	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33052	Identifier	VD_AGENT_SET_CAPABILITY		32907	0					
ANR	33053	ArgumentList	caps -> caps		32907	1					
ANR	33054	Argument	caps -> caps		32907	0					
ANR	33055	PtrMemberAccess	caps -> caps		32907	0					
ANR	33056	Identifier	caps		32907	0					
ANR	33057	Identifier	caps		32907	1					
ANR	33058	Argument	VD_AGENT_CAP_AUDIO_VOLUME_SYNC		32907	1					
ANR	33059	Identifier	VD_AGENT_CAP_AUDIO_VOLUME_SYNC		32907	0					
ANR	33060	ExpressionStatement	"virtio_msg_uint32_to_le ( ( uint8_t * ) caps , size , 0 )"	137:4:4554:4603	32907	15	True				
ANR	33061	CallExpression	"virtio_msg_uint32_to_le ( ( uint8_t * ) caps , size , 0 )"		32907	0					
ANR	33062	Callee	virtio_msg_uint32_to_le		32907	0					
ANR	33063	Identifier	virtio_msg_uint32_to_le		32907	0					
ANR	33064	ArgumentList	( uint8_t * ) caps		32907	1					
ANR	33065	Argument	( uint8_t * ) caps		32907	0					
ANR	33066	CastExpression	( uint8_t * ) caps		32907	0					
ANR	33067	CastTarget	uint8_t *		32907	0					
ANR	33068	Identifier	caps		32907	1					
ANR	33069	Argument	size		32907	1					
ANR	33070	Identifier	size		32907	0					
ANR	33071	Argument	0		32907	2					
ANR	33072	PrimaryExpression	0		32907	0					
ANR	33073	ExpressionStatement	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_ANNOUNCE_CAPABILITIES , 0 , ( uint8_t * ) caps , size )"	139:4:4610:4777	32907	16	True				
ANR	33074	CallExpression	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_ANNOUNCE_CAPABILITIES , 0 , ( uint8_t * ) caps , size )"		32907	0					
ANR	33075	Callee	vdagent_virtio_port_write		32907	0					
ANR	33076	Identifier	vdagent_virtio_port_write		32907	0					
ANR	33077	ArgumentList	vport		32907	1					
ANR	33078	Argument	vport		32907	0					
ANR	33079	Identifier	vport		32907	0					
ANR	33080	Argument	VDP_CLIENT_PORT		32907	1					
ANR	33081	Identifier	VDP_CLIENT_PORT		32907	0					
ANR	33082	Argument	VD_AGENT_ANNOUNCE_CAPABILITIES		32907	2					
ANR	33083	Identifier	VD_AGENT_ANNOUNCE_CAPABILITIES		32907	0					
ANR	33084	Argument	0		32907	3					
ANR	33085	PrimaryExpression	0		32907	0					
ANR	33086	Argument	( uint8_t * ) caps		32907	4					
ANR	33087	CastExpression	( uint8_t * ) caps		32907	0					
ANR	33088	CastTarget	uint8_t *		32907	0					
ANR	33089	Identifier	caps		32907	1					
ANR	33090	Argument	size		32907	5					
ANR	33091	Identifier	size		32907	0					
ANR	33092	ExpressionStatement	free ( caps )	142:4:4783:4793	32907	17	True				
ANR	33093	CallExpression	free ( caps )		32907	0					
ANR	33094	Callee	free		32907	0					
ANR	33095	Identifier	free		32907	0					
ANR	33096	ArgumentList	caps		32907	1					
ANR	33097	Argument	caps		32907	0					
ANR	33098	Identifier	caps		32907	0					
ANR	33099	ReturnType	static void		32907	1					
ANR	33100	Identifier	send_capabilities		32907	2					
ANR	33101	ParameterList	"struct vdagent_virtio_port * vport , uint32_t request"		32907	3					
ANR	33102	Parameter	struct vdagent_virtio_port * vport	114:30:3566:3598	32907	0	True				
ANR	33103	ParameterType	struct vdagent_virtio_port *		32907	0					
ANR	33104	Identifier	vport		32907	1					
ANR	33105	Parameter	uint32_t request	115:4:3605:3620	32907	1	True				
ANR	33106	ParameterType	uint32_t		32907	0					
ANR	33107	Identifier	request		32907	1					
ANR	33108	CFGEntryNode	ENTRY		32907		True				
ANR	33109	CFGExitNode	EXIT		32907		True				
ANR	33110	Symbol	VDP_CLIENT_PORT		32907						
ANR	33111	Symbol	request		32907						
ANR	33112	Symbol	VD_AGENT_ANNOUNCE_CAPABILITIES		32907						
ANR	33113	Symbol	VD_AGENT_CAP_MAX_CLIPBOARD		32907						
ANR	33114	Symbol	vport		32907						
ANR	33115	Symbol	caps -> caps		32907						
ANR	33116	Symbol	VD_AGENT_CAP_MONITORS_CONFIG		32907						
ANR	33117	Symbol	VD_AGENT_CAP_SPARSE_MONITORS_CONFIG		32907						
ANR	33118	Symbol	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		32907						
ANR	33119	Symbol	VD_AGENT_CAP_MOUSE_STATE		32907						
ANR	33120	Symbol	* caps		32907						
ANR	33121	Symbol	calloc		32907						
ANR	33122	Symbol	VD_AGENT_CAP_AUDIO_VOLUME_SYNC		32907						
ANR	33123	Symbol	caps		32907						
ANR	33124	Symbol	VD_AGENT_CAPS_BYTES		32907						
ANR	33125	Symbol	VD_AGENT_CAP_REPLY		32907						
ANR	33126	Symbol	size		32907						
ANR	33127	Symbol	caps -> request		32907						
ANR	33128	Symbol	LOG_ERR		32907						
ANR	33129	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		32907						
ANR	33130	Symbol	VD_AGENT_CAP_GUEST_LINEEND_LF		32907						
ANR	33131	Function	do_client_disconnect	145:0:4798:5019							
ANR	33132	FunctionDef	do_client_disconnect ()		33131	0					
ANR	33133	CompoundStatement		146:0:4837:5019	33131	0					
ANR	33134	IfStatement	if ( client_connected )		33131	0					
ANR	33135	Condition	client_connected	147:8:4847:4862	33131	0	True				
ANR	33136	Identifier	client_connected		33131	0					
ANR	33137	CompoundStatement		2:26:27:27	33131	1					
ANR	33138	ExpressionStatement	"udscs_server_write_all ( server , VDAGENTD_CLIENT_DISCONNECTED , 0 , 0 , NULL , 0 )"	148:8:4875:4981	33131	0	True				
ANR	33139	CallExpression	"udscs_server_write_all ( server , VDAGENTD_CLIENT_DISCONNECTED , 0 , 0 , NULL , 0 )"		33131	0					
ANR	33140	Callee	udscs_server_write_all		33131	0					
ANR	33141	Identifier	udscs_server_write_all		33131	0					
ANR	33142	ArgumentList	server		33131	1					
ANR	33143	Argument	server		33131	0					
ANR	33144	Identifier	server		33131	0					
ANR	33145	Argument	VDAGENTD_CLIENT_DISCONNECTED		33131	1					
ANR	33146	Identifier	VDAGENTD_CLIENT_DISCONNECTED		33131	0					
ANR	33147	Argument	0		33131	2					
ANR	33148	PrimaryExpression	0		33131	0					
ANR	33149	Argument	0		33131	3					
ANR	33150	PrimaryExpression	0		33131	0					
ANR	33151	Argument	NULL		33131	4					
ANR	33152	Identifier	NULL		33131	0					
ANR	33153	Argument	0		33131	5					
ANR	33154	PrimaryExpression	0		33131	0					
ANR	33155	ExpressionStatement	client_connected = 0	150:8:4991:5011	33131	1	True				
ANR	33156	AssignmentExpression	client_connected = 0		33131	0		=			
ANR	33157	Identifier	client_connected		33131	0					
ANR	33158	PrimaryExpression	0		33131	1					
ANR	33159	ReturnType	static void		33131	1					
ANR	33160	Identifier	do_client_disconnect		33131	2					
ANR	33161	ParameterList			33131	3					
ANR	33162	CFGEntryNode	ENTRY		33131		True				
ANR	33163	CFGExitNode	EXIT		33131		True				
ANR	33164	Symbol	VDAGENTD_CLIENT_DISCONNECTED		33131						
ANR	33165	Symbol	server		33131						
ANR	33166	Symbol	NULL		33131						
ANR	33167	Symbol	client_connected		33131						
ANR	33168	Function	do_client_mouse	154:0:5022:5921							
ANR	33169	FunctionDef	"do_client_mouse (struct vdagentd_uinput * * uinputp , VDAgentMouseState * mouse)"		33168	0					
ANR	33170	CompoundStatement		155:0:5103:5921	33168	0					
ANR	33171	ExpressionStatement	"vdagentd_uinput_do_mouse ( uinputp , mouse )"	156:4:5109:5149	33168	0	True				
ANR	33172	CallExpression	"vdagentd_uinput_do_mouse ( uinputp , mouse )"		33168	0					
ANR	33173	Callee	vdagentd_uinput_do_mouse		33168	0					
ANR	33174	Identifier	vdagentd_uinput_do_mouse		33168	0					
ANR	33175	ArgumentList	uinputp		33168	1					
ANR	33176	Argument	uinputp		33168	0					
ANR	33177	Identifier	uinputp		33168	0					
ANR	33178	Argument	mouse		33168	1					
ANR	33179	Identifier	mouse		33168	0					
ANR	33180	IfStatement	if ( ! * uinputp )		33168	1					
ANR	33181	Condition	! * uinputp	157:8:5159:5167	33168	0	True				
ANR	33182	UnaryOperationExpression	! * uinputp		33168	0					
ANR	33183	UnaryOperator	!		33168	0					
ANR	33184	UnaryOperationExpression	* uinputp		33168	1					
ANR	33185	UnaryOperator	*		33168	0					
ANR	33186	Identifier	uinputp		33168	1					
ANR	33187	CompoundStatement		5:8:116:200	33168	1					
ANR	33188	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( active_session_conn ) ;	159:8:5220:5304	33168	0	True				
ANR	33189	IdentifierDecl	* agent_data = udscs_get_user_data ( active_session_conn )		33168	0					
ANR	33190	IdentifierDeclType	struct agent_data *		33168	0					
ANR	33191	Identifier	agent_data		33168	1					
ANR	33192	AssignmentExpression	* agent_data = udscs_get_user_data ( active_session_conn )		33168	2		=			
ANR	33193	Identifier	agent_data		33168	0					
ANR	33194	CallExpression	udscs_get_user_data ( active_session_conn )		33168	1					
ANR	33195	Callee	udscs_get_user_data		33168	0					
ANR	33196	Identifier	udscs_get_user_data		33168	0					
ANR	33197	ArgumentList	active_session_conn		33168	1					
ANR	33198	Argument	active_session_conn		33168	0					
ANR	33199	Identifier	active_session_conn		33168	0					
ANR	33200	IfStatement	if ( agent_data )		33168	1					
ANR	33201	Condition	agent_data	161:12:5318:5327	33168	0	True				
ANR	33202	Identifier	agent_data		33168	0					
ANR	33203	ExpressionStatement	"* uinputp = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"	162:12:5342:5780	33168	1	True				
ANR	33204	AssignmentExpression	"* uinputp = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		33168	0		=			
ANR	33205	UnaryOperationExpression	* uinputp		33168	0					
ANR	33206	UnaryOperator	*		33168	0					
ANR	33207	Identifier	uinputp		33168	1					
ANR	33208	CallExpression	"vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		33168	1					
ANR	33209	Callee	vdagentd_uinput_create		33168	0					
ANR	33210	Identifier	vdagentd_uinput_create		33168	0					
ANR	33211	ArgumentList	uinput_device		33168	1					
ANR	33212	Argument	uinput_device		33168	0					
ANR	33213	Identifier	uinput_device		33168	0					
ANR	33214	Argument	agent_data -> width		33168	1					
ANR	33215	PtrMemberAccess	agent_data -> width		33168	0					
ANR	33216	Identifier	agent_data		33168	0					
ANR	33217	Identifier	width		33168	1					
ANR	33218	Argument	agent_data -> height		33168	2					
ANR	33219	PtrMemberAccess	agent_data -> height		33168	0					
ANR	33220	Identifier	agent_data		33168	0					
ANR	33221	Identifier	height		33168	1					
ANR	33222	Argument	agent_data -> screen_info		33168	3					
ANR	33223	PtrMemberAccess	agent_data -> screen_info		33168	0					
ANR	33224	Identifier	agent_data		33168	0					
ANR	33225	Identifier	screen_info		33168	1					
ANR	33226	Argument	agent_data -> screen_count		33168	4					
ANR	33227	PtrMemberAccess	agent_data -> screen_count		33168	0					
ANR	33228	Identifier	agent_data		33168	0					
ANR	33229	Identifier	screen_count		33168	1					
ANR	33230	Argument	debug > 1		33168	5					
ANR	33231	RelationalExpression	debug > 1		33168	0		>			
ANR	33232	Identifier	debug		33168	0					
ANR	33233	PrimaryExpression	1		33168	1					
ANR	33234	Argument	uinput_fake		33168	6					
ANR	33235	Identifier	uinput_fake		33168	0					
ANR	33236	IfStatement	if ( ! * uinputp )		33168	2					
ANR	33237	Condition	! * uinputp	169:12:5794:5802	33168	0	True				
ANR	33238	UnaryOperationExpression	! * uinputp		33168	0					
ANR	33239	UnaryOperator	!		33168	0					
ANR	33240	UnaryOperationExpression	* uinputp		33168	1					
ANR	33241	UnaryOperator	*		33168	0					
ANR	33242	Identifier	uinputp		33168	1					
ANR	33243	CompoundStatement		15:23:701:701	33168	1					
ANR	33244	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"	170:12:5819:5857	33168	0	True				
ANR	33245	CallExpression	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"		33168	0					
ANR	33246	Callee	syslog		33168	0					
ANR	33247	Identifier	syslog		33168	0					
ANR	33248	ArgumentList	LOG_CRIT		33168	1					
ANR	33249	Argument	LOG_CRIT		33168	0					
ANR	33250	Identifier	LOG_CRIT		33168	0					
ANR	33251	Argument	"""Fatal uinput error"""		33168	1					
ANR	33252	PrimaryExpression	"""Fatal uinput error"""		33168	0					
ANR	33253	ExpressionStatement	retval = 1	171:12:5871:5881	33168	1	True				
ANR	33254	AssignmentExpression	retval = 1		33168	0		=			
ANR	33255	Identifier	retval		33168	0					
ANR	33256	PrimaryExpression	1		33168	1					
ANR	33257	ExpressionStatement	quit = 1	172:12:5895:5903	33168	2	True				
ANR	33258	AssignmentExpression	quit = 1		33168	0		=			
ANR	33259	Identifier	quit		33168	0					
ANR	33260	PrimaryExpression	1		33168	1					
ANR	33261	ReturnType	void		33168	1					
ANR	33262	Identifier	do_client_mouse		33168	2					
ANR	33263	ParameterList	"struct vdagentd_uinput * * uinputp , VDAgentMouseState * mouse"		33168	3					
ANR	33264	Parameter	struct vdagentd_uinput * * uinputp	154:21:5043:5074	33168	0	True				
ANR	33265	ParameterType	struct vdagentd_uinput * *		33168	0					
ANR	33266	Identifier	uinputp		33168	1					
ANR	33267	Parameter	VDAgentMouseState * mouse	154:55:5077:5100	33168	1	True				
ANR	33268	ParameterType	VDAgentMouseState *		33168	0					
ANR	33269	Identifier	mouse		33168	1					
ANR	33270	CFGEntryNode	ENTRY		33168		True				
ANR	33271	CFGExitNode	EXIT		33168		True				
ANR	33272	Symbol	vdagentd_uinput_create		33168						
ANR	33273	Symbol	agent_data -> screen_count		33168						
ANR	33274	Symbol	debug		33168						
ANR	33275	Symbol	agent_data -> screen_info		33168						
ANR	33276	Symbol	agent_data -> height		33168						
ANR	33277	Symbol	* uinputp		33168						
ANR	33278	Symbol	* agent_data		33168						
ANR	33279	Symbol	agent_data -> width		33168						
ANR	33280	Symbol	retval		33168						
ANR	33281	Symbol	uinput_device		33168						
ANR	33282	Symbol	mouse		33168						
ANR	33283	Symbol	uinputp		33168						
ANR	33284	Symbol	active_session_conn		33168						
ANR	33285	Symbol	agent_data		33168						
ANR	33286	Symbol	uinput_fake		33168						
ANR	33287	Symbol	quit		33168						
ANR	33288	Symbol	udscs_get_user_data		33168						
ANR	33289	Symbol	LOG_CRIT		33168						
ANR	33290	Function	do_client_monitors	177:0:5924:7350							
ANR	33291	FunctionDef	"do_client_monitors (struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentMonitorsConfig * new_monitors)"		33290	0					
ANR	33292	CompoundStatement		179:0:6076:7350	33290	0					
ANR	33293	IdentifierDeclStatement	VDAgentReply reply ;	180:4:6082:6100	33290	0	True				
ANR	33294	IdentifierDecl	reply		33290	0					
ANR	33295	IdentifierDeclType	VDAgentReply		33290	0					
ANR	33296	Identifier	reply		33290	1					
ANR	33297	IdentifierDeclStatement	uint32_t size ;	181:4:6106:6119	33290	1	True				
ANR	33298	IdentifierDecl	size		33290	0					
ANR	33299	IdentifierDeclType	uint32_t		33290	0					
ANR	33300	Identifier	size		33290	1					
ANR	33301	ExpressionStatement	size = sizeof ( VDAgentMonitorsConfig ) + new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )	184:4:6193:6299	33290	2	True				
ANR	33302	AssignmentExpression	size = sizeof ( VDAgentMonitorsConfig ) + new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )		33290	0		=			
ANR	33303	Identifier	size		33290	0					
ANR	33304	AdditiveExpression	sizeof ( VDAgentMonitorsConfig ) + new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )		33290	1		+			
ANR	33305	SizeofExpression	sizeof ( VDAgentMonitorsConfig )		33290	0					
ANR	33306	Sizeof	sizeof		33290	0					
ANR	33307	SizeofOperand	VDAgentMonitorsConfig		33290	1					
ANR	33308	MultiplicativeExpression	new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )		33290	1		*			
ANR	33309	PtrMemberAccess	new_monitors -> num_of_monitors		33290	0					
ANR	33310	Identifier	new_monitors		33290	0					
ANR	33311	Identifier	num_of_monitors		33290	1					
ANR	33312	SizeofExpression	sizeof ( VDAgentMonConfig )		33290	1					
ANR	33313	Sizeof	sizeof		33290	0					
ANR	33314	SizeofOperand	VDAgentMonConfig		33290	1					
ANR	33315	IfStatement	if ( message_header -> size != size )		33290	3					
ANR	33316	Condition	message_header -> size != size	186:8:6309:6336	33290	0	True				
ANR	33317	EqualityExpression	message_header -> size != size		33290	0		!=			
ANR	33318	PtrMemberAccess	message_header -> size		33290	0					
ANR	33319	Identifier	message_header		33290	0					
ANR	33320	Identifier	size		33290	1					
ANR	33321	Identifier	size		33290	1					
ANR	33322	CompoundStatement		8:38:262:262	33290	1					
ANR	33323	ExpressionStatement	"syslog ( LOG_ERR , ""invalid message size for VDAgentMonitorsConfig"" )"	187:8:6349:6414	33290	0	True				
ANR	33324	CallExpression	"syslog ( LOG_ERR , ""invalid message size for VDAgentMonitorsConfig"" )"		33290	0					
ANR	33325	Callee	syslog		33290	0					
ANR	33326	Identifier	syslog		33290	0					
ANR	33327	ArgumentList	LOG_ERR		33290	1					
ANR	33328	Argument	LOG_ERR		33290	0					
ANR	33329	Identifier	LOG_ERR		33290	0					
ANR	33330	Argument	"""invalid message size for VDAgentMonitorsConfig"""		33290	1					
ANR	33331	PrimaryExpression	"""invalid message size for VDAgentMonitorsConfig"""		33290	0					
ANR	33332	ReturnStatement	return ;	188:8:6424:6430	33290	1	True				
ANR	33333	ExpressionStatement	vdagentd_write_xorg_conf ( new_monitors )	191:4:6443:6481	33290	4	True				
ANR	33334	CallExpression	vdagentd_write_xorg_conf ( new_monitors )		33290	0					
ANR	33335	Callee	vdagentd_write_xorg_conf		33290	0					
ANR	33336	Identifier	vdagentd_write_xorg_conf		33290	0					
ANR	33337	ArgumentList	new_monitors		33290	1					
ANR	33338	Argument	new_monitors		33290	0					
ANR	33339	Identifier	new_monitors		33290	0					
ANR	33340	IfStatement	if ( ! mon_config || mon_config -> num_of_monitors != new_monitors -> num_of_monitors )		33290	5					
ANR	33341	Condition	! mon_config || mon_config -> num_of_monitors != new_monitors -> num_of_monitors	193:8:6492:6578	33290	0	True				
ANR	33342	OrExpression	! mon_config || mon_config -> num_of_monitors != new_monitors -> num_of_monitors		33290	0		||			
ANR	33343	UnaryOperationExpression	! mon_config		33290	0					
ANR	33344	UnaryOperator	!		33290	0					
ANR	33345	Identifier	mon_config		33290	1					
ANR	33346	EqualityExpression	mon_config -> num_of_monitors != new_monitors -> num_of_monitors		33290	1		!=			
ANR	33347	PtrMemberAccess	mon_config -> num_of_monitors		33290	0					
ANR	33348	Identifier	mon_config		33290	0					
ANR	33349	Identifier	num_of_monitors		33290	1					
ANR	33350	PtrMemberAccess	new_monitors -> num_of_monitors		33290	1					
ANR	33351	Identifier	new_monitors		33290	0					
ANR	33352	Identifier	num_of_monitors		33290	1					
ANR	33353	CompoundStatement		16:74:504:504	33290	1					
ANR	33354	ExpressionStatement	free ( mon_config )	195:8:6591:6607	33290	0	True				
ANR	33355	CallExpression	free ( mon_config )		33290	0					
ANR	33356	Callee	free		33290	0					
ANR	33357	Identifier	free		33290	0					
ANR	33358	ArgumentList	mon_config		33290	1					
ANR	33359	Argument	mon_config		33290	0					
ANR	33360	Identifier	mon_config		33290	0					
ANR	33361	ExpressionStatement	mon_config = malloc ( size )	196:8:6617:6642	33290	1	True				
ANR	33362	AssignmentExpression	mon_config = malloc ( size )		33290	0		=			
ANR	33363	Identifier	mon_config		33290	0					
ANR	33364	CallExpression	malloc ( size )		33290	1					
ANR	33365	Callee	malloc		33290	0					
ANR	33366	Identifier	malloc		33290	0					
ANR	33367	ArgumentList	size		33290	1					
ANR	33368	Argument	size		33290	0					
ANR	33369	Identifier	size		33290	0					
ANR	33370	IfStatement	if ( ! mon_config )		33290	2					
ANR	33371	Condition	! mon_config	197:12:6656:6666	33290	0	True				
ANR	33372	UnaryOperationExpression	! mon_config		33290	0					
ANR	33373	UnaryOperator	!		33290	0					
ANR	33374	Identifier	mon_config		33290	1					
ANR	33375	CompoundStatement		19:25:592:592	33290	1					
ANR	33376	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating monitors config"" )"	198:12:6683:6742	33290	0	True				
ANR	33377	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating monitors config"" )"		33290	0					
ANR	33378	Callee	syslog		33290	0					
ANR	33379	Identifier	syslog		33290	0					
ANR	33380	ArgumentList	LOG_ERR		33290	1					
ANR	33381	Argument	LOG_ERR		33290	0					
ANR	33382	Identifier	LOG_ERR		33290	0					
ANR	33383	Argument	"""out of memory allocating monitors config"""		33290	1					
ANR	33384	PrimaryExpression	"""out of memory allocating monitors config"""		33290	0					
ANR	33385	ReturnStatement	return ;	199:12:6756:6762	33290	1	True				
ANR	33386	ExpressionStatement	"memcpy ( mon_config , new_monitors , size )"	202:4:6784:6822	33290	6	True				
ANR	33387	CallExpression	"memcpy ( mon_config , new_monitors , size )"		33290	0					
ANR	33388	Callee	memcpy		33290	0					
ANR	33389	Identifier	memcpy		33290	0					
ANR	33390	ArgumentList	mon_config		33290	1					
ANR	33391	Argument	mon_config		33290	0					
ANR	33392	Identifier	mon_config		33290	0					
ANR	33393	Argument	new_monitors		33290	1					
ANR	33394	Identifier	new_monitors		33290	0					
ANR	33395	Argument	size		33290	2					
ANR	33396	Identifier	size		33290	0					
ANR	33397	IfStatement	if ( active_session_conn )		33290	7					
ANR	33398	Condition	active_session_conn	205:8:6889:6907	33290	0	True				
ANR	33399	Identifier	active_session_conn		33290	0					
ANR	33400	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , size )"	206:8:6918:7031	33290	1	True				
ANR	33401	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , size )"		33290	0					
ANR	33402	Callee	udscs_write		33290	0					
ANR	33403	Identifier	udscs_write		33290	0					
ANR	33404	ArgumentList	active_session_conn		33290	1					
ANR	33405	Argument	active_session_conn		33290	0					
ANR	33406	Identifier	active_session_conn		33290	0					
ANR	33407	Argument	VDAGENTD_MONITORS_CONFIG		33290	1					
ANR	33408	Identifier	VDAGENTD_MONITORS_CONFIG		33290	0					
ANR	33409	Argument	0		33290	2					
ANR	33410	PrimaryExpression	0		33290	0					
ANR	33411	Argument	0		33290	3					
ANR	33412	PrimaryExpression	0		33290	0					
ANR	33413	Argument	( uint8_t * ) mon_config		33290	4					
ANR	33414	CastExpression	( uint8_t * ) mon_config		33290	0					
ANR	33415	CastTarget	uint8_t *		33290	0					
ANR	33416	Identifier	mon_config		33290	1					
ANR	33417	Argument	size		33290	5					
ANR	33418	Identifier	size		33290	0					
ANR	33419	ExpressionStatement	reply . type = GUINT32_TO_LE ( VD_AGENT_MONITORS_CONFIG )	210:4:7114:7167	33290	8	True				
ANR	33420	AssignmentExpression	reply . type = GUINT32_TO_LE ( VD_AGENT_MONITORS_CONFIG )		33290	0		=			
ANR	33421	MemberAccess	reply . type		33290	0					
ANR	33422	Identifier	reply		33290	0					
ANR	33423	Identifier	type		33290	1					
ANR	33424	CallExpression	GUINT32_TO_LE ( VD_AGENT_MONITORS_CONFIG )		33290	1					
ANR	33425	Callee	GUINT32_TO_LE		33290	0					
ANR	33426	Identifier	GUINT32_TO_LE		33290	0					
ANR	33427	ArgumentList	VD_AGENT_MONITORS_CONFIG		33290	1					
ANR	33428	Argument	VD_AGENT_MONITORS_CONFIG		33290	0					
ANR	33429	Identifier	VD_AGENT_MONITORS_CONFIG		33290	0					
ANR	33430	ExpressionStatement	reply . error = GUINT32_TO_LE ( VD_AGENT_SUCCESS )	211:4:7173:7218	33290	9	True				
ANR	33431	AssignmentExpression	reply . error = GUINT32_TO_LE ( VD_AGENT_SUCCESS )		33290	0		=			
ANR	33432	MemberAccess	reply . error		33290	0					
ANR	33433	Identifier	reply		33290	0					
ANR	33434	Identifier	error		33290	1					
ANR	33435	CallExpression	GUINT32_TO_LE ( VD_AGENT_SUCCESS )		33290	1					
ANR	33436	Callee	GUINT32_TO_LE		33290	0					
ANR	33437	Identifier	GUINT32_TO_LE		33290	0					
ANR	33438	ArgumentList	VD_AGENT_SUCCESS		33290	1					
ANR	33439	Argument	VD_AGENT_SUCCESS		33290	0					
ANR	33440	Identifier	VD_AGENT_SUCCESS		33290	0					
ANR	33441	ExpressionStatement	"vdagent_virtio_port_write ( vport , port_nr , VD_AGENT_REPLY , 0 , ( uint8_t * ) & reply , sizeof ( reply ) )"	212:4:7224:7348	33290	10	True				
ANR	33442	CallExpression	"vdagent_virtio_port_write ( vport , port_nr , VD_AGENT_REPLY , 0 , ( uint8_t * ) & reply , sizeof ( reply ) )"		33290	0					
ANR	33443	Callee	vdagent_virtio_port_write		33290	0					
ANR	33444	Identifier	vdagent_virtio_port_write		33290	0					
ANR	33445	ArgumentList	vport		33290	1					
ANR	33446	Argument	vport		33290	0					
ANR	33447	Identifier	vport		33290	0					
ANR	33448	Argument	port_nr		33290	1					
ANR	33449	Identifier	port_nr		33290	0					
ANR	33450	Argument	VD_AGENT_REPLY		33290	2					
ANR	33451	Identifier	VD_AGENT_REPLY		33290	0					
ANR	33452	Argument	0		33290	3					
ANR	33453	PrimaryExpression	0		33290	0					
ANR	33454	Argument	( uint8_t * ) & reply		33290	4					
ANR	33455	CastExpression	( uint8_t * ) & reply		33290	0					
ANR	33456	CastTarget	uint8_t *		33290	0					
ANR	33457	UnaryOperationExpression	& reply		33290	1					
ANR	33458	UnaryOperator	&		33290	0					
ANR	33459	Identifier	reply		33290	1					
ANR	33460	Argument	sizeof ( reply )		33290	5					
ANR	33461	SizeofExpression	sizeof ( reply )		33290	0					
ANR	33462	Sizeof	sizeof		33290	0					
ANR	33463	SizeofOperand	reply		33290	1					
ANR	33464	ReturnType	static void		33290	1					
ANR	33465	Identifier	do_client_monitors		33290	2					
ANR	33466	ParameterList	"struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentMonitorsConfig * new_monitors"		33290	3					
ANR	33467	Parameter	struct vdagent_virtio_port * vport	177:31:5955:5987	33290	0	True				
ANR	33468	ParameterType	struct vdagent_virtio_port *		33290	0					
ANR	33469	Identifier	vport		33290	1					
ANR	33470	Parameter	int port_nr	177:66:5990:6000	33290	1	True				
ANR	33471	ParameterType	int		33290	0					
ANR	33472	Identifier	port_nr		33290	1					
ANR	33473	Parameter	VDAgentMessage * message_header	178:4:6007:6036	33290	2	True				
ANR	33474	ParameterType	VDAgentMessage *		33290	0					
ANR	33475	Identifier	message_header		33290	1					
ANR	33476	Parameter	VDAgentMonitorsConfig * new_monitors	178:36:6039:6073	33290	3	True				
ANR	33477	ParameterType	VDAgentMonitorsConfig *		33290	0					
ANR	33478	Identifier	new_monitors		33290	1					
ANR	33479	CFGEntryNode	ENTRY		33290		True				
ANR	33480	CFGExitNode	EXIT		33290		True				
ANR	33481	Symbol	malloc		33290						
ANR	33482	Symbol	port_nr		33290						
ANR	33483	Symbol	vport		33290						
ANR	33484	Symbol	* message_header		33290						
ANR	33485	Symbol	reply . type		33290						
ANR	33486	Symbol	message_header		33290						
ANR	33487	Symbol	new_monitors		33290						
ANR	33488	Symbol	new_monitors -> num_of_monitors		33290						
ANR	33489	Symbol	VD_AGENT_MONITORS_CONFIG		33290						
ANR	33490	Symbol	* new_monitors		33290						
ANR	33491	Symbol	GUINT32_TO_LE		33290						
ANR	33492	Symbol	& reply		33290						
ANR	33493	Symbol	message_header -> size		33290						
ANR	33494	Symbol	VD_AGENT_SUCCESS		33290						
ANR	33495	Symbol	size		33290						
ANR	33496	Symbol	active_session_conn		33290						
ANR	33497	Symbol	VDAGENTD_MONITORS_CONFIG		33290						
ANR	33498	Symbol	reply . error		33290						
ANR	33499	Symbol	* mon_config		33290						
ANR	33500	Symbol	mon_config -> num_of_monitors		33290						
ANR	33501	Symbol	LOG_ERR		33290						
ANR	33502	Symbol	mon_config		33290						
ANR	33503	Symbol	VD_AGENT_REPLY		33290						
ANR	33504	Symbol	reply		33290						
ANR	33505	Function	do_client_volume_sync	216:0:7353:7762							
ANR	33506	FunctionDef	"do_client_volume_sync (struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentAudioVolumeSync * avs)"		33505	0					
ANR	33507	CompoundStatement		219:0:7504:7762	33505	0					
ANR	33508	IfStatement	if ( active_session_conn == NULL )		33505	0					
ANR	33509	Condition	active_session_conn == NULL	220:8:7514:7540	33505	0	True				
ANR	33510	EqualityExpression	active_session_conn == NULL		33505	0		==			
ANR	33511	Identifier	active_session_conn		33505	0					
ANR	33512	Identifier	NULL		33505	1					
ANR	33513	CompoundStatement		2:37:38:38	33505	1					
ANR	33514	ExpressionStatement	"syslog ( LOG_DEBUG , ""No active session - Can't volume-sync"" )"	221:8:7553:7611	33505	0	True				
ANR	33515	CallExpression	"syslog ( LOG_DEBUG , ""No active session - Can't volume-sync"" )"		33505	0					
ANR	33516	Callee	syslog		33505	0					
ANR	33517	Identifier	syslog		33505	0					
ANR	33518	ArgumentList	LOG_DEBUG		33505	1					
ANR	33519	Argument	LOG_DEBUG		33505	0					
ANR	33520	Identifier	LOG_DEBUG		33505	0					
ANR	33521	Argument	"""No active session - Can't volume-sync"""		33505	1					
ANR	33522	PrimaryExpression	"""No active session - Can't volume-sync"""		33505	0					
ANR	33523	ReturnStatement	return ;	222:8:7621:7627	33505	1	True				
ANR	33524	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_AUDIO_VOLUME_SYNC , 0 , 0 , ( uint8_t * ) avs , message_header -> size )"	225:4:7640:7760	33505	1	True				
ANR	33525	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_AUDIO_VOLUME_SYNC , 0 , 0 , ( uint8_t * ) avs , message_header -> size )"		33505	0					
ANR	33526	Callee	udscs_write		33505	0					
ANR	33527	Identifier	udscs_write		33505	0					
ANR	33528	ArgumentList	active_session_conn		33505	1					
ANR	33529	Argument	active_session_conn		33505	0					
ANR	33530	Identifier	active_session_conn		33505	0					
ANR	33531	Argument	VDAGENTD_AUDIO_VOLUME_SYNC		33505	1					
ANR	33532	Identifier	VDAGENTD_AUDIO_VOLUME_SYNC		33505	0					
ANR	33533	Argument	0		33505	2					
ANR	33534	PrimaryExpression	0		33505	0					
ANR	33535	Argument	0		33505	3					
ANR	33536	PrimaryExpression	0		33505	0					
ANR	33537	Argument	( uint8_t * ) avs		33505	4					
ANR	33538	CastExpression	( uint8_t * ) avs		33505	0					
ANR	33539	CastTarget	uint8_t *		33505	0					
ANR	33540	Identifier	avs		33505	1					
ANR	33541	Argument	message_header -> size		33505	5					
ANR	33542	PtrMemberAccess	message_header -> size		33505	0					
ANR	33543	Identifier	message_header		33505	0					
ANR	33544	Identifier	size		33505	1					
ANR	33545	ReturnType	static void		33505	1					
ANR	33546	Identifier	do_client_volume_sync		33505	2					
ANR	33547	ParameterList	"struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentAudioVolumeSync * avs"		33505	3					
ANR	33548	Parameter	struct vdagent_virtio_port * vport	216:34:7387:7419	33505	0	True				
ANR	33549	ParameterType	struct vdagent_virtio_port *		33505	0					
ANR	33550	Identifier	vport		33505	1					
ANR	33551	Parameter	int port_nr	216:69:7422:7432	33505	1	True				
ANR	33552	ParameterType	int		33505	0					
ANR	33553	Identifier	port_nr		33505	1					
ANR	33554	Parameter	VDAgentMessage * message_header	217:4:7439:7468	33505	2	True				
ANR	33555	ParameterType	VDAgentMessage *		33505	0					
ANR	33556	Identifier	message_header		33505	1					
ANR	33557	Parameter	VDAgentAudioVolumeSync * avs	218:4:7475:7501	33505	3	True				
ANR	33558	ParameterType	VDAgentAudioVolumeSync *		33505	0					
ANR	33559	Identifier	avs		33505	1					
ANR	33560	CFGEntryNode	ENTRY		33505		True				
ANR	33561	CFGExitNode	EXIT		33505		True				
ANR	33562	Symbol	message_header -> size		33505						
ANR	33563	Symbol	port_nr		33505						
ANR	33564	Symbol	VDAGENTD_AUDIO_VOLUME_SYNC		33505						
ANR	33565	Symbol	NULL		33505						
ANR	33566	Symbol	vport		33505						
ANR	33567	Symbol	active_session_conn		33505						
ANR	33568	Symbol	* message_header		33505						
ANR	33569	Symbol	message_header		33505						
ANR	33570	Symbol	LOG_DEBUG		33505						
ANR	33571	Symbol	avs		33505						
ANR	33572	Function	do_client_capabilities	229:0:7765:8676							
ANR	33573	FunctionDef	"do_client_capabilities (struct vdagent_virtio_port * vport , VDAgentMessage * message_header , VDAgentAnnounceCapabilities * caps)"		33572	0					
ANR	33574	CompoundStatement		232:0:7910:8676	33572	0					
ANR	33575	IdentifierDeclStatement	int new_size = VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size ) ;	233:4:7916:7985	33572	0	True				
ANR	33576	IdentifierDecl	new_size = VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size )		33572	0					
ANR	33577	IdentifierDeclType	int		33572	0					
ANR	33578	Identifier	new_size		33572	1					
ANR	33579	AssignmentExpression	new_size = VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size )		33572	2		=			
ANR	33580	Identifier	new_size		33572	0					
ANR	33581	CallExpression	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size )		33572	1					
ANR	33582	Callee	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE		33572	0					
ANR	33583	Identifier	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE		33572	0					
ANR	33584	ArgumentList	message_header -> size		33572	1					
ANR	33585	Argument	message_header -> size		33572	0					
ANR	33586	PtrMemberAccess	message_header -> size		33572	0					
ANR	33587	Identifier	message_header		33572	0					
ANR	33588	Identifier	size		33572	1					
ANR	33589	IfStatement	if ( capabilities_size != new_size )		33572	1					
ANR	33590	Condition	capabilities_size != new_size	235:8:7996:8024	33572	0	True				
ANR	33591	EqualityExpression	capabilities_size != new_size		33572	0		!=			
ANR	33592	Identifier	capabilities_size		33572	0					
ANR	33593	Identifier	new_size		33572	1					
ANR	33594	CompoundStatement		4:39:116:116	33572	1					
ANR	33595	ExpressionStatement	capabilities_size = new_size	236:8:8037:8065	33572	0	True				
ANR	33596	AssignmentExpression	capabilities_size = new_size		33572	0		=			
ANR	33597	Identifier	capabilities_size		33572	0					
ANR	33598	Identifier	new_size		33572	1					
ANR	33599	ExpressionStatement	free ( capabilities )	237:8:8075:8093	33572	1	True				
ANR	33600	CallExpression	free ( capabilities )		33572	0					
ANR	33601	Callee	free		33572	0					
ANR	33602	Identifier	free		33572	0					
ANR	33603	ArgumentList	capabilities		33572	1					
ANR	33604	Argument	capabilities		33572	0					
ANR	33605	Identifier	capabilities		33572	0					
ANR	33606	ExpressionStatement	capabilities = malloc ( capabilities_size * sizeof ( uint32_t ) )	238:8:8103:8162	33572	2	True				
ANR	33607	AssignmentExpression	capabilities = malloc ( capabilities_size * sizeof ( uint32_t ) )		33572	0		=			
ANR	33608	Identifier	capabilities		33572	0					
ANR	33609	CallExpression	malloc ( capabilities_size * sizeof ( uint32_t ) )		33572	1					
ANR	33610	Callee	malloc		33572	0					
ANR	33611	Identifier	malloc		33572	0					
ANR	33612	ArgumentList	capabilities_size * sizeof ( uint32_t )		33572	1					
ANR	33613	Argument	capabilities_size * sizeof ( uint32_t )		33572	0					
ANR	33614	MultiplicativeExpression	capabilities_size * sizeof ( uint32_t )		33572	0		*			
ANR	33615	Identifier	capabilities_size		33572	0					
ANR	33616	SizeofExpression	sizeof ( uint32_t )		33572	1					
ANR	33617	Sizeof	sizeof		33572	0					
ANR	33618	SizeofOperand	uint32_t		33572	1					
ANR	33619	IfStatement	if ( ! capabilities )		33572	3					
ANR	33620	Condition	! capabilities	239:12:8176:8188	33572	0	True				
ANR	33621	UnaryOperationExpression	! capabilities		33572	0					
ANR	33622	UnaryOperator	!		33572	0					
ANR	33623	Identifier	capabilities		33572	1					
ANR	33624	CompoundStatement		8:27:280:280	33572	1					
ANR	33625	ExpressionStatement	"syslog ( LOG_ERR , ""oom allocating capabilities array (read)"" )"	240:12:8205:8264	33572	0	True				
ANR	33626	CallExpression	"syslog ( LOG_ERR , ""oom allocating capabilities array (read)"" )"		33572	0					
ANR	33627	Callee	syslog		33572	0					
ANR	33628	Identifier	syslog		33572	0					
ANR	33629	ArgumentList	LOG_ERR		33572	1					
ANR	33630	Argument	LOG_ERR		33572	0					
ANR	33631	Identifier	LOG_ERR		33572	0					
ANR	33632	Argument	"""oom allocating capabilities array (read)"""		33572	1					
ANR	33633	PrimaryExpression	"""oom allocating capabilities array (read)"""		33572	0					
ANR	33634	ExpressionStatement	capabilities_size = 0	241:12:8278:8299	33572	1	True				
ANR	33635	AssignmentExpression	capabilities_size = 0		33572	0		=			
ANR	33636	Identifier	capabilities_size		33572	0					
ANR	33637	PrimaryExpression	0		33572	1					
ANR	33638	ReturnStatement	return ;	242:12:8313:8319	33572	2	True				
ANR	33639	ExpressionStatement	"memcpy ( capabilities , caps -> caps , capabilities_size * sizeof ( uint32_t ) )"	245:4:8341:8411	33572	2	True				
ANR	33640	CallExpression	"memcpy ( capabilities , caps -> caps , capabilities_size * sizeof ( uint32_t ) )"		33572	0					
ANR	33641	Callee	memcpy		33572	0					
ANR	33642	Identifier	memcpy		33572	0					
ANR	33643	ArgumentList	capabilities		33572	1					
ANR	33644	Argument	capabilities		33572	0					
ANR	33645	Identifier	capabilities		33572	0					
ANR	33646	Argument	caps -> caps		33572	1					
ANR	33647	PtrMemberAccess	caps -> caps		33572	0					
ANR	33648	Identifier	caps		33572	0					
ANR	33649	Identifier	caps		33572	1					
ANR	33650	Argument	capabilities_size * sizeof ( uint32_t )		33572	2					
ANR	33651	MultiplicativeExpression	capabilities_size * sizeof ( uint32_t )		33572	0		*			
ANR	33652	Identifier	capabilities_size		33572	0					
ANR	33653	SizeofExpression	sizeof ( uint32_t )		33572	1					
ANR	33654	Sizeof	sizeof		33572	0					
ANR	33655	SizeofOperand	uint32_t		33572	1					
ANR	33656	IfStatement	if ( caps -> request )		33572	3					
ANR	33657	Condition	caps -> request	246:8:8421:8433	33572	0	True				
ANR	33658	PtrMemberAccess	caps -> request		33572	0					
ANR	33659	Identifier	caps		33572	0					
ANR	33660	Identifier	request		33572	1					
ANR	33661	CompoundStatement		15:23:525:525	33572	1					
ANR	33662	ExpressionStatement	do_client_disconnect ( )	248:8:8505:8527	33572	0	True				
ANR	33663	CallExpression	do_client_disconnect ( )		33572	0					
ANR	33664	Callee	do_client_disconnect		33572	0					
ANR	33665	Identifier	do_client_disconnect		33572	0					
ANR	33666	ArgumentList			33572	1					
ANR	33667	IfStatement	if ( debug )		33572	1					
ANR	33668	Condition	debug	249:12:8541:8545	33572	0	True				
ANR	33669	Identifier	debug		33572	0					
ANR	33670	ExpressionStatement	"syslog ( LOG_DEBUG , ""New client connected"" )"	250:12:8560:8601	33572	1	True				
ANR	33671	CallExpression	"syslog ( LOG_DEBUG , ""New client connected"" )"		33572	0					
ANR	33672	Callee	syslog		33572	0					
ANR	33673	Identifier	syslog		33572	0					
ANR	33674	ArgumentList	LOG_DEBUG		33572	1					
ANR	33675	Argument	LOG_DEBUG		33572	0					
ANR	33676	Identifier	LOG_DEBUG		33572	0					
ANR	33677	Argument	"""New client connected"""		33572	1					
ANR	33678	PrimaryExpression	"""New client connected"""		33572	0					
ANR	33679	ExpressionStatement	client_connected = 1	251:8:8611:8631	33572	2	True				
ANR	33680	AssignmentExpression	client_connected = 1		33572	0		=			
ANR	33681	Identifier	client_connected		33572	0					
ANR	33682	PrimaryExpression	1		33572	1					
ANR	33683	ExpressionStatement	"send_capabilities ( vport , 0 )"	252:8:8641:8668	33572	3	True				
ANR	33684	CallExpression	"send_capabilities ( vport , 0 )"		33572	0					
ANR	33685	Callee	send_capabilities		33572	0					
ANR	33686	Identifier	send_capabilities		33572	0					
ANR	33687	ArgumentList	vport		33572	1					
ANR	33688	Argument	vport		33572	0					
ANR	33689	Identifier	vport		33572	0					
ANR	33690	Argument	0		33572	1					
ANR	33691	PrimaryExpression	0		33572	0					
ANR	33692	ReturnType	static void		33572	1					
ANR	33693	Identifier	do_client_capabilities		33572	2					
ANR	33694	ParameterList	"struct vdagent_virtio_port * vport , VDAgentMessage * message_header , VDAgentAnnounceCapabilities * caps"		33572	3					
ANR	33695	Parameter	struct vdagent_virtio_port * vport	229:35:7800:7832	33572	0	True				
ANR	33696	ParameterType	struct vdagent_virtio_port *		33572	0					
ANR	33697	Identifier	vport		33572	1					
ANR	33698	Parameter	VDAgentMessage * message_header	230:4:7839:7868	33572	1	True				
ANR	33699	ParameterType	VDAgentMessage *		33572	0					
ANR	33700	Identifier	message_header		33572	1					
ANR	33701	Parameter	VDAgentAnnounceCapabilities * caps	231:4:7875:7907	33572	2	True				
ANR	33702	ParameterType	VDAgentAnnounceCapabilities *		33572	0					
ANR	33703	Identifier	caps		33572	1					
ANR	33704	CFGEntryNode	ENTRY		33572		True				
ANR	33705	CFGExitNode	EXIT		33572		True				
ANR	33706	Symbol	malloc		33572						
ANR	33707	Symbol	capabilities		33572						
ANR	33708	Symbol	debug		33572						
ANR	33709	Symbol	vport		33572						
ANR	33710	Symbol	caps -> caps		33572						
ANR	33711	Symbol	* message_header		33572						
ANR	33712	Symbol	client_connected		33572						
ANR	33713	Symbol	message_header		33572						
ANR	33714	Symbol	* caps		33572						
ANR	33715	Symbol	caps		33572						
ANR	33716	Symbol	message_header -> size		33572						
ANR	33717	Symbol	capabilities_size		33572						
ANR	33718	Symbol	caps -> request		33572						
ANR	33719	Symbol	new_size		33572						
ANR	33720	Symbol	LOG_ERR		33572						
ANR	33721	Symbol	LOG_DEBUG		33572						
ANR	33722	Symbol	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE		33572						
ANR	33723	Function	do_client_clipboard	256:0:8679:10302							
ANR	33724	FunctionDef	"do_client_clipboard (struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data)"		33723	0					
ANR	33725	CompoundStatement		258:0:8797:10302	33723	0					
ANR	33726	IdentifierDeclStatement	"uint32_t msg_type = 0 , data_type = 0 , size = message_header -> size ;"	259:4:8803:8868	33723	0	True				
ANR	33727	IdentifierDecl	msg_type = 0		33723	0					
ANR	33728	IdentifierDeclType	uint32_t		33723	0					
ANR	33729	Identifier	msg_type		33723	1					
ANR	33730	AssignmentExpression	msg_type = 0		33723	2		=			
ANR	33731	Identifier	msg_type		33723	0					
ANR	33732	PrimaryExpression	0		33723	1					
ANR	33733	IdentifierDecl	data_type = 0		33723	1					
ANR	33734	IdentifierDeclType	uint32_t		33723	0					
ANR	33735	Identifier	data_type		33723	1					
ANR	33736	AssignmentExpression	data_type = 0		33723	2		=			
ANR	33737	Identifier	data_type		33723	0					
ANR	33738	PrimaryExpression	0		33723	1					
ANR	33739	IdentifierDecl	size = message_header -> size		33723	2					
ANR	33740	IdentifierDeclType	uint32_t		33723	0					
ANR	33741	Identifier	size		33723	1					
ANR	33742	AssignmentExpression	size = message_header -> size		33723	2		=			
ANR	33743	Identifier	size		33723	0					
ANR	33744	PtrMemberAccess	message_header -> size		33723	1					
ANR	33745	Identifier	message_header		33723	0					
ANR	33746	Identifier	size		33723	1					
ANR	33747	IdentifierDeclStatement	uint8_t selection = VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD ;	260:4:8874:8932	33723	1	True				
ANR	33748	IdentifierDecl	selection = VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		33723	0					
ANR	33749	IdentifierDeclType	uint8_t		33723	0					
ANR	33750	Identifier	selection		33723	1					
ANR	33751	AssignmentExpression	selection = VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		33723	2		=			
ANR	33752	Identifier	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		33723	0					
ANR	33753	Identifier	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		33723	1					
ANR	33754	IfStatement	if ( ! active_session_conn )		33723	2					
ANR	33755	Condition	! active_session_conn	262:8:8943:8962	33723	0	True				
ANR	33756	UnaryOperationExpression	! active_session_conn		33723	0					
ANR	33757	UnaryOperator	!		33723	0					
ANR	33758	Identifier	active_session_conn		33723	1					
ANR	33759	CompoundStatement		5:30:167:167	33723	1					
ANR	33760	Statement	syslog	263:8:8975:8980	33723	0	True				
ANR	33761	Statement	(	263:14:8981:8981	33723	1	True				
ANR	33762	Statement	LOG_WARNING	263:15:8982:8992	33723	2	True				
ANR	33763	Statement	","	263:26:8993:8993	33723	3	True				
ANR	33764	Statement	"""Could not find an agent connection belonging to the """	264:15:9010:9063	33723	4	True				
ANR	33765	Statement	"""active session, ignoring client clipboard request"""	265:15:9080:9130	33723	5	True				
ANR	33766	Statement	)	265:66:9131:9131	33723	6	True				
ANR	33767	ExpressionStatement		265:67:9132:9132	33723	7	True				
ANR	33768	ReturnStatement	return ;	266:8:9142:9148	33723	8	True				
ANR	33769	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		33723	3					
ANR	33770	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	269:8:9165:9286	33723	0	True				
ANR	33771	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		33723	0					
ANR	33772	Callee	VD_AGENT_HAS_CAPABILITY		33723	0					
ANR	33773	Identifier	VD_AGENT_HAS_CAPABILITY		33723	0					
ANR	33774	ArgumentList	capabilities		33723	1					
ANR	33775	Argument	capabilities		33723	0					
ANR	33776	Identifier	capabilities		33723	0					
ANR	33777	Argument	capabilities_size		33723	1					
ANR	33778	Identifier	capabilities_size		33723	0					
ANR	33779	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		33723	2					
ANR	33780	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		33723	0					
ANR	33781	CompoundStatement		13:67:491:491	33723	1					
ANR	33782	ExpressionStatement	selection = data [ 0 ]	271:6:9297:9316	33723	0	True				
ANR	33783	AssignmentExpression	selection = data [ 0 ]		33723	0		=			
ANR	33784	Identifier	selection		33723	0					
ANR	33785	ArrayIndexing	data [ 0 ]		33723	1					
ANR	33786	Identifier	data		33723	0					
ANR	33787	PrimaryExpression	0		33723	1					
ANR	33788	ExpressionStatement	data += 4	272:6:9324:9333	33723	1	True				
ANR	33789	AssignmentExpression	data += 4		33723	0		+=			
ANR	33790	Identifier	data		33723	0					
ANR	33791	PrimaryExpression	4		33723	1					
ANR	33792	ExpressionStatement	size -= 4	273:6:9341:9350	33723	2	True				
ANR	33793	AssignmentExpression	size -= 4		33723	0		-=			
ANR	33794	Identifier	size		33723	0					
ANR	33795	PrimaryExpression	4		33723	1					
ANR	33796	SwitchStatement	switch ( message_header -> type )		33723	4					
ANR	33797	Condition	message_header -> type	276:12:9371:9390	33723	0	True				
ANR	33798	PtrMemberAccess	message_header -> type		33723	0					
ANR	33799	Identifier	message_header		33723	0					
ANR	33800	Identifier	type		33723	1					
ANR	33801	CompoundStatement		19:34:595:595	33723	1					
ANR	33802	Label	case VD_AGENT_CLIPBOARD_GRAB :	277:4:9399:9427	33723	0	True				
ANR	33803	Identifier	VD_AGENT_CLIPBOARD_GRAB		33723	0					
ANR	33804	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_GRAB	278:8:9437:9471	33723	1	True				
ANR	33805	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_GRAB		33723	0		=			
ANR	33806	Identifier	msg_type		33723	0					
ANR	33807	Identifier	VDAGENTD_CLIPBOARD_GRAB		33723	1					
ANR	33808	ExpressionStatement	agent_owns_clipboard [ selection ] = 0	279:8:9481:9516	33723	2	True				
ANR	33809	AssignmentExpression	agent_owns_clipboard [ selection ] = 0		33723	0		=			
ANR	33810	ArrayIndexing	agent_owns_clipboard [ selection ]		33723	0					
ANR	33811	Identifier	agent_owns_clipboard		33723	0					
ANR	33812	Identifier	selection		33723	1					
ANR	33813	PrimaryExpression	0		33723	1					
ANR	33814	BreakStatement	break ;	280:8:9526:9531	33723	3	True				
ANR	33815	Label	case VD_AGENT_CLIPBOARD_REQUEST :	281:4:9537:9568	33723	4	True				
ANR	33816	Identifier	VD_AGENT_CLIPBOARD_REQUEST		33723	0					
ANR	33817	CompoundStatement		25:8:782:844	33723	5					
ANR	33818	IdentifierDeclStatement	VDAgentClipboardRequest * req = ( VDAgentClipboardRequest * ) data ;	282:8:9580:9642	33723	0	True				
ANR	33819	IdentifierDecl	* req = ( VDAgentClipboardRequest * ) data		33723	0					
ANR	33820	IdentifierDeclType	VDAgentClipboardRequest *		33723	0					
ANR	33821	Identifier	req		33723	1					
ANR	33822	AssignmentExpression	* req = ( VDAgentClipboardRequest * ) data		33723	2		=			
ANR	33823	Identifier	req		33723	0					
ANR	33824	CastExpression	( VDAgentClipboardRequest * ) data		33723	1					
ANR	33825	CastTarget	VDAgentClipboardRequest *		33723	0					
ANR	33826	Identifier	data		33723	1					
ANR	33827	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_REQUEST	283:8:9652:9689	33723	1	True				
ANR	33828	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_REQUEST		33723	0		=			
ANR	33829	Identifier	msg_type		33723	0					
ANR	33830	Identifier	VDAGENTD_CLIPBOARD_REQUEST		33723	1					
ANR	33831	ExpressionStatement	data_type = req -> type	284:8:9699:9720	33723	2	True				
ANR	33832	AssignmentExpression	data_type = req -> type		33723	0		=			
ANR	33833	Identifier	data_type		33723	0					
ANR	33834	PtrMemberAccess	req -> type		33723	1					
ANR	33835	Identifier	req		33723	0					
ANR	33836	Identifier	type		33723	1					
ANR	33837	ExpressionStatement	data = NULL	285:8:9730:9741	33723	3	True				
ANR	33838	AssignmentExpression	data = NULL		33723	0		=			
ANR	33839	Identifier	data		33723	0					
ANR	33840	Identifier	NULL		33723	1					
ANR	33841	ExpressionStatement	size = 0	286:8:9751:9759	33723	4	True				
ANR	33842	AssignmentExpression	size = 0		33723	0		=			
ANR	33843	Identifier	size		33723	0					
ANR	33844	PrimaryExpression	0		33723	1					
ANR	33845	BreakStatement	break ;	287:8:9769:9774	33723	5	True				
ANR	33846	Label	case VD_AGENT_CLIPBOARD :	289:4:9786:9809	33723	6	True				
ANR	33847	Identifier	VD_AGENT_CLIPBOARD		33723	0					
ANR	33848	CompoundStatement		33:8:1023:1077	33723	7					
ANR	33849	IdentifierDeclStatement	VDAgentClipboard * clipboard = ( VDAgentClipboard * ) data ;	290:8:9821:9875	33723	0	True				
ANR	33850	IdentifierDecl	* clipboard = ( VDAgentClipboard * ) data		33723	0					
ANR	33851	IdentifierDeclType	VDAgentClipboard *		33723	0					
ANR	33852	Identifier	clipboard		33723	1					
ANR	33853	AssignmentExpression	* clipboard = ( VDAgentClipboard * ) data		33723	2		=			
ANR	33854	Identifier	clipboard		33723	0					
ANR	33855	CastExpression	( VDAgentClipboard * ) data		33723	1					
ANR	33856	CastTarget	VDAgentClipboard *		33723	0					
ANR	33857	Identifier	data		33723	1					
ANR	33858	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_DATA	291:8:9885:9919	33723	1	True				
ANR	33859	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_DATA		33723	0		=			
ANR	33860	Identifier	msg_type		33723	0					
ANR	33861	Identifier	VDAGENTD_CLIPBOARD_DATA		33723	1					
ANR	33862	ExpressionStatement	data_type = clipboard -> type	292:8:9929:9956	33723	2	True				
ANR	33863	AssignmentExpression	data_type = clipboard -> type		33723	0		=			
ANR	33864	Identifier	data_type		33723	0					
ANR	33865	PtrMemberAccess	clipboard -> type		33723	1					
ANR	33866	Identifier	clipboard		33723	0					
ANR	33867	Identifier	type		33723	1					
ANR	33868	ExpressionStatement	size = size - sizeof ( VDAgentClipboard )	293:8:9966:10004	33723	3	True				
ANR	33869	AssignmentExpression	size = size - sizeof ( VDAgentClipboard )		33723	0		=			
ANR	33870	Identifier	size		33723	0					
ANR	33871	AdditiveExpression	size - sizeof ( VDAgentClipboard )		33723	1		-			
ANR	33872	Identifier	size		33723	0					
ANR	33873	SizeofExpression	sizeof ( VDAgentClipboard )		33723	1					
ANR	33874	Sizeof	sizeof		33723	0					
ANR	33875	SizeofOperand	VDAgentClipboard		33723	1					
ANR	33876	ExpressionStatement	data = clipboard -> data	294:8:10014:10036	33723	4	True				
ANR	33877	AssignmentExpression	data = clipboard -> data		33723	0		=			
ANR	33878	Identifier	data		33723	0					
ANR	33879	PtrMemberAccess	clipboard -> data		33723	1					
ANR	33880	Identifier	clipboard		33723	0					
ANR	33881	Identifier	data		33723	1					
ANR	33882	BreakStatement	break ;	295:8:10046:10051	33723	5	True				
ANR	33883	Label	case VD_AGENT_CLIPBOARD_RELEASE :	297:4:10063:10094	33723	8	True				
ANR	33884	Identifier	VD_AGENT_CLIPBOARD_RELEASE		33723	0					
ANR	33885	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_RELEASE	298:8:10104:10141	33723	9	True				
ANR	33886	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_RELEASE		33723	0		=			
ANR	33887	Identifier	msg_type		33723	0					
ANR	33888	Identifier	VDAGENTD_CLIPBOARD_RELEASE		33723	1					
ANR	33889	ExpressionStatement	data = NULL	299:8:10151:10162	33723	10	True				
ANR	33890	AssignmentExpression	data = NULL		33723	0		=			
ANR	33891	Identifier	data		33723	0					
ANR	33892	Identifier	NULL		33723	1					
ANR	33893	ExpressionStatement	size = 0	300:8:10172:10180	33723	11	True				
ANR	33894	AssignmentExpression	size = 0		33723	0		=			
ANR	33895	Identifier	size		33723	0					
ANR	33896	PrimaryExpression	0		33723	1					
ANR	33897	BreakStatement	break ;	301:8:10190:10195	33723	12	True				
ANR	33898	ExpressionStatement	"udscs_write ( active_session_conn , msg_type , selection , data_type , data , size )"	304:4:10208:10300	33723	5	True				
ANR	33899	CallExpression	"udscs_write ( active_session_conn , msg_type , selection , data_type , data , size )"		33723	0					
ANR	33900	Callee	udscs_write		33723	0					
ANR	33901	Identifier	udscs_write		33723	0					
ANR	33902	ArgumentList	active_session_conn		33723	1					
ANR	33903	Argument	active_session_conn		33723	0					
ANR	33904	Identifier	active_session_conn		33723	0					
ANR	33905	Argument	msg_type		33723	1					
ANR	33906	Identifier	msg_type		33723	0					
ANR	33907	Argument	selection		33723	2					
ANR	33908	Identifier	selection		33723	0					
ANR	33909	Argument	data_type		33723	3					
ANR	33910	Identifier	data_type		33723	0					
ANR	33911	Argument	data		33723	4					
ANR	33912	Identifier	data		33723	0					
ANR	33913	Argument	size		33723	5					
ANR	33914	Identifier	size		33723	0					
ANR	33915	ReturnType	static void		33723	1					
ANR	33916	Identifier	do_client_clipboard		33723	2					
ANR	33917	ParameterList	"struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data"		33723	3					
ANR	33918	Parameter	struct vdagent_virtio_port * vport	256:32:8711:8743	33723	0	True				
ANR	33919	ParameterType	struct vdagent_virtio_port *		33723	0					
ANR	33920	Identifier	vport		33723	1					
ANR	33921	Parameter	VDAgentMessage * message_header	257:4:8750:8779	33723	1	True				
ANR	33922	ParameterType	VDAgentMessage *		33723	0					
ANR	33923	Identifier	message_header		33723	1					
ANR	33924	Parameter	uint8_t * data	257:36:8782:8794	33723	2	True				
ANR	33925	ParameterType	uint8_t *		33723	0					
ANR	33926	Identifier	data		33723	1					
ANR	33927	CFGEntryNode	ENTRY		33723		True				
ANR	33928	CFGExitNode	EXIT		33723		True				
ANR	33929	Symbol	vport		33723						
ANR	33930	Symbol	data		33723						
ANR	33931	Symbol	message_header		33723						
ANR	33932	Symbol	message_header -> type		33723						
ANR	33933	Symbol	* req		33723						
ANR	33934	Symbol	clipboard -> data		33723						
ANR	33935	Symbol	VDAGENTD_CLIPBOARD_RELEASE		33723						
ANR	33936	Symbol	clipboard		33723						
ANR	33937	Symbol	agent_owns_clipboard		33723						
ANR	33938	Symbol	message_header -> size		33723						
ANR	33939	Symbol	active_session_conn		33723						
ANR	33940	Symbol	capabilities_size		33723						
ANR	33941	Symbol	clipboard -> type		33723						
ANR	33942	Symbol	VDAGENTD_CLIPBOARD_GRAB		33723						
ANR	33943	Symbol	VDAGENTD_CLIPBOARD_REQUEST		33723						
ANR	33944	Symbol	req		33723						
ANR	33945	Symbol	capabilities		33723						
ANR	33946	Symbol	NULL		33723						
ANR	33947	Symbol	* message_header		33723						
ANR	33948	Symbol	req -> type		33723						
ANR	33949	Symbol	* clipboard		33723						
ANR	33950	Symbol	size		33723						
ANR	33951	Symbol	selection		33723						
ANR	33952	Symbol	* agent_owns_clipboard		33723						
ANR	33953	Symbol	data_type		33723						
ANR	33954	Symbol	VDAGENTD_CLIPBOARD_DATA		33723						
ANR	33955	Symbol	msg_type		33723						
ANR	33956	Symbol	* data		33723						
ANR	33957	Symbol	* selection		33723						
ANR	33958	Symbol	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		33723						
ANR	33959	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		33723						
ANR	33960	Symbol	VD_AGENT_HAS_CAPABILITY		33723						
ANR	33961	Function	send_file_xfer_status	310:0:10446:11620							
ANR	33962	FunctionDef	"send_file_xfer_status (struct vdagent_virtio_port * vport , const char * msg , uint32_t id , uint32_t xfer_status , const uint8_t * data , uint32_t data_size)"		33961	0					
ANR	33963	CompoundStatement		313:0:10676:11620	33961	0					
ANR	33964	IdentifierDeclStatement	VDAgentFileXferStatusMessage * status ;	314:4:10682:10718	33961	0	True				
ANR	33965	IdentifierDecl	* status		33961	0					
ANR	33966	IdentifierDeclType	VDAgentFileXferStatusMessage *		33961	0					
ANR	33967	Identifier	status		33961	1					
ANR	33968	IfStatement	"if ( xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS && ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS ) )"		33961	1					
ANR	33969	Condition	"xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS && ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"	318:8:10854:11042	33961	0	True				
ANR	33970	AndExpression	"xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS && ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"		33961	0		&&			
ANR	33971	RelationalExpression	xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS		33961	0		>			
ANR	33972	Identifier	xfer_status		33961	0					
ANR	33973	Identifier	VD_AGENT_FILE_XFER_STATUS_SUCCESS		33961	1					
ANR	33974	UnaryOperationExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"		33961	1					
ANR	33975	UnaryOperator	!		33961	0					
ANR	33976	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"		33961	1					
ANR	33977	Callee	VD_AGENT_HAS_CAPABILITY		33961	0					
ANR	33978	Identifier	VD_AGENT_HAS_CAPABILITY		33961	0					
ANR	33979	ArgumentList	capabilities		33961	1					
ANR	33980	Argument	capabilities		33961	0					
ANR	33981	Identifier	capabilities		33961	0					
ANR	33982	Argument	capabilities_size		33961	1					
ANR	33983	Identifier	capabilities_size		33961	0					
ANR	33984	Argument	VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS		33961	2					
ANR	33985	Identifier	VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS		33961	0					
ANR	33986	CompoundStatement		8:74:368:368	33961	1					
ANR	33987	ExpressionStatement	xfer_status = VD_AGENT_FILE_XFER_STATUS_ERROR	321:8:11055:11100	33961	0	True				
ANR	33988	AssignmentExpression	xfer_status = VD_AGENT_FILE_XFER_STATUS_ERROR		33961	0		=			
ANR	33989	Identifier	xfer_status		33961	0					
ANR	33990	Identifier	VD_AGENT_FILE_XFER_STATUS_ERROR		33961	1					
ANR	33991	ExpressionStatement	data_size = 0	322:8:11110:11123	33961	1	True				
ANR	33992	AssignmentExpression	data_size = 0		33961	0		=			
ANR	33993	Identifier	data_size		33961	0					
ANR	33994	PrimaryExpression	0		33961	1					
ANR	33995	ExpressionStatement	status = malloc ( sizeof ( * status ) + data_size )	325:4:11136:11180	33961	2	True				
ANR	33996	AssignmentExpression	status = malloc ( sizeof ( * status ) + data_size )		33961	0		=			
ANR	33997	Identifier	status		33961	0					
ANR	33998	CallExpression	malloc ( sizeof ( * status ) + data_size )		33961	1					
ANR	33999	Callee	malloc		33961	0					
ANR	34000	Identifier	malloc		33961	0					
ANR	34001	ArgumentList	sizeof ( * status ) + data_size		33961	1					
ANR	34002	Argument	sizeof ( * status ) + data_size		33961	0					
ANR	34003	AdditiveExpression	sizeof ( * status ) + data_size		33961	0		+			
ANR	34004	SizeofExpression	sizeof ( * status )		33961	0					
ANR	34005	Sizeof	sizeof		33961	0					
ANR	34006	UnaryOperationExpression	* status		33961	1					
ANR	34007	UnaryOperator	*		33961	0					
ANR	34008	Identifier	status		33961	1					
ANR	34009	Identifier	data_size		33961	1					
ANR	34010	ExpressionStatement	status -> id = GUINT32_TO_LE ( id )	326:4:11186:11216	33961	3	True				
ANR	34011	AssignmentExpression	status -> id = GUINT32_TO_LE ( id )		33961	0		=			
ANR	34012	PtrMemberAccess	status -> id		33961	0					
ANR	34013	Identifier	status		33961	0					
ANR	34014	Identifier	id		33961	1					
ANR	34015	CallExpression	GUINT32_TO_LE ( id )		33961	1					
ANR	34016	Callee	GUINT32_TO_LE		33961	0					
ANR	34017	Identifier	GUINT32_TO_LE		33961	0					
ANR	34018	ArgumentList	id		33961	1					
ANR	34019	Argument	id		33961	0					
ANR	34020	Identifier	id		33961	0					
ANR	34021	ExpressionStatement	status -> result = GUINT32_TO_LE ( xfer_status )	327:4:11222:11265	33961	4	True				
ANR	34022	AssignmentExpression	status -> result = GUINT32_TO_LE ( xfer_status )		33961	0		=			
ANR	34023	PtrMemberAccess	status -> result		33961	0					
ANR	34024	Identifier	status		33961	0					
ANR	34025	Identifier	result		33961	1					
ANR	34026	CallExpression	GUINT32_TO_LE ( xfer_status )		33961	1					
ANR	34027	Callee	GUINT32_TO_LE		33961	0					
ANR	34028	Identifier	GUINT32_TO_LE		33961	0					
ANR	34029	ArgumentList	xfer_status		33961	1					
ANR	34030	Argument	xfer_status		33961	0					
ANR	34031	Identifier	xfer_status		33961	0					
ANR	34032	IfStatement	if ( data )		33961	5					
ANR	34033	Condition	data	328:8:11275:11278	33961	0	True				
ANR	34034	Identifier	data		33961	0					
ANR	34035	ExpressionStatement	"memcpy ( status -> data , data , data_size )"	329:8:11289:11326	33961	1	True				
ANR	34036	CallExpression	"memcpy ( status -> data , data , data_size )"		33961	0					
ANR	34037	Callee	memcpy		33961	0					
ANR	34038	Identifier	memcpy		33961	0					
ANR	34039	ArgumentList	status -> data		33961	1					
ANR	34040	Argument	status -> data		33961	0					
ANR	34041	PtrMemberAccess	status -> data		33961	0					
ANR	34042	Identifier	status		33961	0					
ANR	34043	Identifier	data		33961	1					
ANR	34044	Argument	data		33961	1					
ANR	34045	Identifier	data		33961	0					
ANR	34046	Argument	data_size		33961	2					
ANR	34047	Identifier	data_size		33961	0					
ANR	34048	IfStatement	if ( msg )		33961	6					
ANR	34049	Condition	msg	331:8:11337:11339	33961	0	True				
ANR	34050	Identifier	msg		33961	0					
ANR	34051	ExpressionStatement	"syslog ( LOG_WARNING , msg , id )"	332:8:11350:11378	33961	1	True				
ANR	34052	CallExpression	"syslog ( LOG_WARNING , msg , id )"		33961	0					
ANR	34053	Callee	syslog		33961	0					
ANR	34054	Identifier	syslog		33961	0					
ANR	34055	ArgumentList	LOG_WARNING		33961	1					
ANR	34056	Argument	LOG_WARNING		33961	0					
ANR	34057	Identifier	LOG_WARNING		33961	0					
ANR	34058	Argument	msg		33961	1					
ANR	34059	Identifier	msg		33961	0					
ANR	34060	Argument	id		33961	2					
ANR	34061	Identifier	id		33961	0					
ANR	34062	IfStatement	if ( vport )		33961	7					
ANR	34063	Condition	vport	334:8:11389:11393	33961	0	True				
ANR	34064	Identifier	vport		33961	0					
ANR	34065	ExpressionStatement	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_FILE_XFER_STATUS , 0 , ( uint8_t * ) status , sizeof ( * status ) + data_size )"	335:8:11404:11599	33961	1	True				
ANR	34066	CallExpression	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_FILE_XFER_STATUS , 0 , ( uint8_t * ) status , sizeof ( * status ) + data_size )"		33961	0					
ANR	34067	Callee	vdagent_virtio_port_write		33961	0					
ANR	34068	Identifier	vdagent_virtio_port_write		33961	0					
ANR	34069	ArgumentList	vport		33961	1					
ANR	34070	Argument	vport		33961	0					
ANR	34071	Identifier	vport		33961	0					
ANR	34072	Argument	VDP_CLIENT_PORT		33961	1					
ANR	34073	Identifier	VDP_CLIENT_PORT		33961	0					
ANR	34074	Argument	VD_AGENT_FILE_XFER_STATUS		33961	2					
ANR	34075	Identifier	VD_AGENT_FILE_XFER_STATUS		33961	0					
ANR	34076	Argument	0		33961	3					
ANR	34077	PrimaryExpression	0		33961	0					
ANR	34078	Argument	( uint8_t * ) status		33961	4					
ANR	34079	CastExpression	( uint8_t * ) status		33961	0					
ANR	34080	CastTarget	uint8_t *		33961	0					
ANR	34081	Identifier	status		33961	1					
ANR	34082	Argument	sizeof ( * status ) + data_size		33961	5					
ANR	34083	AdditiveExpression	sizeof ( * status ) + data_size		33961	0		+			
ANR	34084	SizeofExpression	sizeof ( * status )		33961	0					
ANR	34085	Sizeof	sizeof		33961	0					
ANR	34086	UnaryOperationExpression	* status		33961	1					
ANR	34087	UnaryOperator	*		33961	0					
ANR	34088	Identifier	status		33961	1					
ANR	34089	Identifier	data_size		33961	1					
ANR	34090	ExpressionStatement	free ( status )	339:4:11606:11618	33961	8	True				
ANR	34091	CallExpression	free ( status )		33961	0					
ANR	34092	Callee	free		33961	0					
ANR	34093	Identifier	free		33961	0					
ANR	34094	ArgumentList	status		33961	1					
ANR	34095	Argument	status		33961	0					
ANR	34096	Identifier	status		33961	0					
ANR	34097	ReturnType	static void		33961	1					
ANR	34098	Identifier	send_file_xfer_status		33961	2					
ANR	34099	ParameterList	"struct vdagent_virtio_port * vport , const char * msg , uint32_t id , uint32_t xfer_status , const uint8_t * data , uint32_t data_size"		33961	3					
ANR	34100	Parameter	struct vdagent_virtio_port * vport	310:34:10480:10512	33961	0	True				
ANR	34101	ParameterType	struct vdagent_virtio_port *		33961	0					
ANR	34102	Identifier	vport		33961	1					
ANR	34103	Parameter	const char * msg	311:34:10549:10563	33961	1	True				
ANR	34104	ParameterType	const char *		33961	0					
ANR	34105	Identifier	msg		33961	1					
ANR	34106	Parameter	uint32_t id	311:51:10566:10576	33961	2	True				
ANR	34107	ParameterType	uint32_t		33961	0					
ANR	34108	Identifier	id		33961	1					
ANR	34109	Parameter	uint32_t xfer_status	311:64:10579:10598	33961	3	True				
ANR	34110	ParameterType	uint32_t		33961	0					
ANR	34111	Identifier	xfer_status		33961	1					
ANR	34112	Parameter	const uint8_t * data	312:34:10635:10653	33961	4	True				
ANR	34113	ParameterType	const uint8_t *		33961	0					
ANR	34114	Identifier	data		33961	1					
ANR	34115	Parameter	uint32_t data_size	312:55:10656:10673	33961	5	True				
ANR	34116	ParameterType	uint32_t		33961	0					
ANR	34117	Identifier	data_size		33961	1					
ANR	34118	CFGEntryNode	ENTRY		33961		True				
ANR	34119	CFGExitNode	EXIT		33961		True				
ANR	34120	Symbol	msg		33961						
ANR	34121	Symbol	data_size		33961						
ANR	34122	Symbol	VDP_CLIENT_PORT		33961						
ANR	34123	Symbol	malloc		33961						
ANR	34124	Symbol	capabilities		33961						
ANR	34125	Symbol	vport		33961						
ANR	34126	Symbol	data		33961						
ANR	34127	Symbol	VD_AGENT_FILE_XFER_STATUS		33961						
ANR	34128	Symbol	status -> result		33961						
ANR	34129	Symbol	VD_AGENT_FILE_XFER_STATUS_ERROR		33961						
ANR	34130	Symbol	LOG_WARNING		33961						
ANR	34131	Symbol	xfer_status		33961						
ANR	34132	Symbol	GUINT32_TO_LE		33961						
ANR	34133	Symbol	* status		33961						
ANR	34134	Symbol	status -> id		33961						
ANR	34135	Symbol	VD_AGENT_FILE_XFER_STATUS_SUCCESS		33961						
ANR	34136	Symbol	VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS		33961						
ANR	34137	Symbol	capabilities_size		33961						
ANR	34138	Symbol	status -> data		33961						
ANR	34139	Symbol	id		33961						
ANR	34140	Symbol	status		33961						
ANR	34141	Symbol	VD_AGENT_HAS_CAPABILITY		33961						
ANR	34142	Function	do_client_file_xfer	342:0:11623:13672							
ANR	34143	FunctionDef	"do_client_file_xfer (struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data)"		34142	0					
ANR	34144	CompoundStatement		345:0:11801:13672	34142	0					
ANR	34145	IdentifierDeclStatement	"uint32_t msg_type , id ;"	346:4:11807:11828	34142	0	True				
ANR	34146	IdentifierDecl	msg_type		34142	0					
ANR	34147	IdentifierDeclType	uint32_t		34142	0					
ANR	34148	Identifier	msg_type		34142	1					
ANR	34149	IdentifierDecl	id		34142	1					
ANR	34150	IdentifierDeclType	uint32_t		34142	0					
ANR	34151	Identifier	id		34142	1					
ANR	34152	IdentifierDeclStatement	struct udscs_connection * conn ;	347:4:11834:11863	34142	1	True				
ANR	34153	IdentifierDecl	* conn		34142	0					
ANR	34154	IdentifierDeclType	struct udscs_connection *		34142	0					
ANR	34155	Identifier	conn		34142	1					
ANR	34156	SwitchStatement	switch ( message_header -> type )		34142	2					
ANR	34157	Condition	message_header -> type	349:12:11878:11897	34142	0	True				
ANR	34158	PtrMemberAccess	message_header -> type		34142	0					
ANR	34159	Identifier	message_header		34142	0					
ANR	34160	Identifier	type		34142	1					
ANR	34161	CompoundStatement		5:34:98:98	34142	1					
ANR	34162	Label	case VD_AGENT_FILE_XFER_START :	350:4:11906:11935	34142	0	True				
ANR	34163	Identifier	VD_AGENT_FILE_XFER_START		34142	0					
ANR	34164	CompoundStatement		7:8:145:213	34142	1					
ANR	34165	IdentifierDeclStatement	VDAgentFileXferStartMessage * s = ( VDAgentFileXferStartMessage * ) data ;	351:8:11947:12015	34142	0	True				
ANR	34166	IdentifierDecl	* s = ( VDAgentFileXferStartMessage * ) data		34142	0					
ANR	34167	IdentifierDeclType	VDAgentFileXferStartMessage *		34142	0					
ANR	34168	Identifier	s		34142	1					
ANR	34169	AssignmentExpression	* s = ( VDAgentFileXferStartMessage * ) data		34142	2		=			
ANR	34170	Identifier	s		34142	0					
ANR	34171	CastExpression	( VDAgentFileXferStartMessage * ) data		34142	1					
ANR	34172	CastTarget	VDAgentFileXferStartMessage *		34142	0					
ANR	34173	Identifier	data		34142	1					
ANR	34174	IfStatement	if ( ! active_session_conn )		34142	1					
ANR	34175	Condition	! active_session_conn	352:12:12029:12048	34142	0	True				
ANR	34176	UnaryOperationExpression	! active_session_conn		34142	0					
ANR	34177	UnaryOperator	!		34142	0					
ANR	34178	Identifier	active_session_conn		34142	1					
ANR	34179	CompoundStatement		8:34:249:249	34142	1					
ANR	34180	Statement	send_file_xfer_status	353:12:12065:12085	34142	0	True				
ANR	34181	Statement	(	353:33:12086:12086	34142	1	True				
ANR	34182	Statement	vport	353:34:12087:12091	34142	2	True				
ANR	34183	Statement	","	353:39:12092:12092	34142	3	True				
ANR	34184	Statement	"""Could not find an agent connection belonging to the """	354:15:12109:12162	34142	4	True				
ANR	34185	Statement	"""active session, cancelling client file-xfer request %u"""	355:15:12179:12234	34142	5	True				
ANR	34186	Statement	","	355:71:12235:12235	34142	6	True				
ANR	34187	Statement	s	356:15:12252:12252	34142	7	True				
ANR	34188	Statement	->	356:16:12253:12254	34142	8	True				
ANR	34189	Statement	id	356:18:12255:12256	34142	9	True				
ANR	34190	Statement	","	356:20:12257:12257	34142	10	True				
ANR	34191	Statement	VD_AGENT_FILE_XFER_STATUS_VDAGENT_NOT_CONNECTED	356:22:12259:12305	34142	11	True				
ANR	34192	Statement	","	356:69:12306:12306	34142	12	True				
ANR	34193	Statement	NULL	356:71:12308:12311	34142	13	True				
ANR	34194	Statement	","	356:75:12312:12312	34142	14	True				
ANR	34195	Statement	0	356:77:12314:12314	34142	15	True				
ANR	34196	Statement	)	356:78:12315:12315	34142	16	True				
ANR	34197	ExpressionStatement		356:79:12316:12316	34142	17	True				
ANR	34198	ReturnStatement	return ;	357:12:12330:12336	34142	18	True				
ANR	34199	ElseStatement	else		34142	0					
ANR	34200	IfStatement	if ( session_info_session_is_locked ( session_info ) )		34142	0					
ANR	34201	Condition	session_info_session_is_locked ( session_info )	358:19:12357:12400	34142	0	True				
ANR	34202	CallExpression	session_info_session_is_locked ( session_info )		34142	0					
ANR	34203	Callee	session_info_session_is_locked		34142	0					
ANR	34204	Identifier	session_info_session_is_locked		34142	0					
ANR	34205	ArgumentList	session_info		34142	1					
ANR	34206	Argument	session_info		34142	0					
ANR	34207	Identifier	session_info		34142	0					
ANR	34208	CompoundStatement		14:65:601:601	34142	1					
ANR	34209	ExpressionStatement	"syslog ( LOG_DEBUG , ""Session is locked, skipping file-xfer-start"" )"	359:12:12417:12481	34142	0	True				
ANR	34210	CallExpression	"syslog ( LOG_DEBUG , ""Session is locked, skipping file-xfer-start"" )"		34142	0					
ANR	34211	Callee	syslog		34142	0					
ANR	34212	Identifier	syslog		34142	0					
ANR	34213	ArgumentList	LOG_DEBUG		34142	1					
ANR	34214	Argument	LOG_DEBUG		34142	0					
ANR	34215	Identifier	LOG_DEBUG		34142	0					
ANR	34216	Argument	"""Session is locked, skipping file-xfer-start"""		34142	1					
ANR	34217	PrimaryExpression	"""Session is locked, skipping file-xfer-start"""		34142	0					
ANR	34218	Statement	send_file_xfer_status	360:12:12495:12515	34142	1	True				
ANR	34219	Statement	(	360:33:12516:12516	34142	2	True				
ANR	34220	Statement	vport	360:34:12517:12521	34142	3	True				
ANR	34221	Statement	","	360:39:12522:12522	34142	4	True				
ANR	34222	Statement	"""User's session is locked and cannot start file transfer. """	361:15:12539:12597	34142	5	True				
ANR	34223	Statement	"""Cancelling client file-xfer request %u"""	362:15:12614:12653	34142	6	True				
ANR	34224	Statement	","	362:55:12654:12654	34142	7	True				
ANR	34225	Statement	s	363:15:12671:12671	34142	8	True				
ANR	34226	Statement	->	363:16:12672:12673	34142	9	True				
ANR	34227	Statement	id	363:18:12674:12675	34142	10	True				
ANR	34228	Statement	","	363:20:12676:12676	34142	11	True				
ANR	34229	Statement	VD_AGENT_FILE_XFER_STATUS_SESSION_LOCKED	363:22:12678:12717	34142	12	True				
ANR	34230	Statement	","	363:62:12718:12718	34142	13	True				
ANR	34231	Statement	NULL	363:64:12720:12723	34142	14	True				
ANR	34232	Statement	","	363:68:12724:12724	34142	15	True				
ANR	34233	Statement	0	363:70:12726:12726	34142	16	True				
ANR	34234	Statement	)	363:71:12727:12727	34142	17	True				
ANR	34235	ExpressionStatement		363:72:12728:12728	34142	18	True				
ANR	34236	ReturnStatement	return ;	364:12:12742:12748	34142	19	True				
ANR	34237	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_START , 0 , 0 , data , message_header -> size )"	366:8:12768:12880	34142	2	True				
ANR	34238	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_START , 0 , 0 , data , message_header -> size )"		34142	0					
ANR	34239	Callee	udscs_write		34142	0					
ANR	34240	Identifier	udscs_write		34142	0					
ANR	34241	ArgumentList	active_session_conn		34142	1					
ANR	34242	Argument	active_session_conn		34142	0					
ANR	34243	Identifier	active_session_conn		34142	0					
ANR	34244	Argument	VDAGENTD_FILE_XFER_START		34142	1					
ANR	34245	Identifier	VDAGENTD_FILE_XFER_START		34142	0					
ANR	34246	Argument	0		34142	2					
ANR	34247	PrimaryExpression	0		34142	0					
ANR	34248	Argument	0		34142	3					
ANR	34249	PrimaryExpression	0		34142	0					
ANR	34250	Argument	data		34142	4					
ANR	34251	Identifier	data		34142	0					
ANR	34252	Argument	message_header -> size		34142	5					
ANR	34253	PtrMemberAccess	message_header -> size		34142	0					
ANR	34254	Identifier	message_header		34142	0					
ANR	34255	Identifier	size		34142	1					
ANR	34256	ReturnStatement	return ;	368:8:12890:12896	34142	3	True				
ANR	34257	Label	case VD_AGENT_FILE_XFER_STATUS :	370:4:12908:12938	34142	2	True				
ANR	34258	Identifier	VD_AGENT_FILE_XFER_STATUS		34142	0					
ANR	34259	CompoundStatement		27:8:1148:1218	34142	3					
ANR	34260	IdentifierDeclStatement	VDAgentFileXferStatusMessage * s = ( VDAgentFileXferStatusMessage * ) data ;	371:8:12950:13020	34142	0	True				
ANR	34261	IdentifierDecl	* s = ( VDAgentFileXferStatusMessage * ) data		34142	0					
ANR	34262	IdentifierDeclType	VDAgentFileXferStatusMessage *		34142	0					
ANR	34263	Identifier	s		34142	1					
ANR	34264	AssignmentExpression	* s = ( VDAgentFileXferStatusMessage * ) data		34142	2		=			
ANR	34265	Identifier	s		34142	0					
ANR	34266	CastExpression	( VDAgentFileXferStatusMessage * ) data		34142	1					
ANR	34267	CastTarget	VDAgentFileXferStatusMessage *		34142	0					
ANR	34268	Identifier	data		34142	1					
ANR	34269	ExpressionStatement	msg_type = VDAGENTD_FILE_XFER_STATUS	372:8:13030:13066	34142	1	True				
ANR	34270	AssignmentExpression	msg_type = VDAGENTD_FILE_XFER_STATUS		34142	0		=			
ANR	34271	Identifier	msg_type		34142	0					
ANR	34272	Identifier	VDAGENTD_FILE_XFER_STATUS		34142	1					
ANR	34273	ExpressionStatement	id = s -> id	373:8:13076:13086	34142	2	True				
ANR	34274	AssignmentExpression	id = s -> id		34142	0		=			
ANR	34275	Identifier	id		34142	0					
ANR	34276	PtrMemberAccess	s -> id		34142	1					
ANR	34277	Identifier	s		34142	0					
ANR	34278	Identifier	id		34142	1					
ANR	34279	BreakStatement	break ;	374:8:13096:13101	34142	3	True				
ANR	34280	Label	case VD_AGENT_FILE_XFER_DATA :	376:4:13113:13141	34142	4	True				
ANR	34281	Identifier	VD_AGENT_FILE_XFER_DATA		34142	0					
ANR	34282	CompoundStatement		33:8:1351:1417	34142	5					
ANR	34283	IdentifierDeclStatement	VDAgentFileXferDataMessage * d = ( VDAgentFileXferDataMessage * ) data ;	377:8:13153:13219	34142	0	True				
ANR	34284	IdentifierDecl	* d = ( VDAgentFileXferDataMessage * ) data		34142	0					
ANR	34285	IdentifierDeclType	VDAgentFileXferDataMessage *		34142	0					
ANR	34286	Identifier	d		34142	1					
ANR	34287	AssignmentExpression	* d = ( VDAgentFileXferDataMessage * ) data		34142	2		=			
ANR	34288	Identifier	d		34142	0					
ANR	34289	CastExpression	( VDAgentFileXferDataMessage * ) data		34142	1					
ANR	34290	CastTarget	VDAgentFileXferDataMessage *		34142	0					
ANR	34291	Identifier	data		34142	1					
ANR	34292	ExpressionStatement	msg_type = VDAGENTD_FILE_XFER_DATA	378:8:13229:13263	34142	1	True				
ANR	34293	AssignmentExpression	msg_type = VDAGENTD_FILE_XFER_DATA		34142	0		=			
ANR	34294	Identifier	msg_type		34142	0					
ANR	34295	Identifier	VDAGENTD_FILE_XFER_DATA		34142	1					
ANR	34296	ExpressionStatement	id = d -> id	379:8:13273:13283	34142	2	True				
ANR	34297	AssignmentExpression	id = d -> id		34142	0		=			
ANR	34298	Identifier	id		34142	0					
ANR	34299	PtrMemberAccess	d -> id		34142	1					
ANR	34300	Identifier	d		34142	0					
ANR	34301	Identifier	id		34142	1					
ANR	34302	BreakStatement	break ;	380:8:13293:13298	34142	3	True				
ANR	34303	Label	default :	382:4:13310:13317	34142	6	True				
ANR	34304	Identifier	default		34142	0					
ANR	34305	ExpressionStatement	g_return_if_reached ( )	383:8:13327:13348	34142	7	True				
ANR	34306	CallExpression	g_return_if_reached ( )		34142	0					
ANR	34307	Callee	g_return_if_reached		34142	0					
ANR	34308	Identifier	g_return_if_reached		34142	0					
ANR	34309	ArgumentList			34142	1					
ANR	34310	ExpressionStatement	"conn = g_hash_table_lookup ( active_xfers , GUINT_TO_POINTER ( id ) )"	386:4:13404:13466	34142	3	True				
ANR	34311	AssignmentExpression	"conn = g_hash_table_lookup ( active_xfers , GUINT_TO_POINTER ( id ) )"		34142	0		=			
ANR	34312	Identifier	conn		34142	0					
ANR	34313	CallExpression	"g_hash_table_lookup ( active_xfers , GUINT_TO_POINTER ( id ) )"		34142	1					
ANR	34314	Callee	g_hash_table_lookup		34142	0					
ANR	34315	Identifier	g_hash_table_lookup		34142	0					
ANR	34316	ArgumentList	active_xfers		34142	1					
ANR	34317	Argument	active_xfers		34142	0					
ANR	34318	Identifier	active_xfers		34142	0					
ANR	34319	Argument	GUINT_TO_POINTER ( id )		34142	1					
ANR	34320	CallExpression	GUINT_TO_POINTER ( id )		34142	0					
ANR	34321	Callee	GUINT_TO_POINTER		34142	0					
ANR	34322	Identifier	GUINT_TO_POINTER		34142	0					
ANR	34323	ArgumentList	id		34142	1					
ANR	34324	Argument	id		34142	0					
ANR	34325	Identifier	id		34142	0					
ANR	34326	IfStatement	if ( ! conn )		34142	4					
ANR	34327	Condition	! conn	387:8:13476:13480	34142	0	True				
ANR	34328	UnaryOperationExpression	! conn		34142	0					
ANR	34329	UnaryOperator	!		34142	0					
ANR	34330	Identifier	conn		34142	1					
ANR	34331	CompoundStatement		43:15:1681:1681	34142	1					
ANR	34332	IfStatement	if ( debug )		34142	0					
ANR	34333	Condition	debug	388:12:13497:13501	34142	0	True				
ANR	34334	Identifier	debug		34142	0					
ANR	34335	ExpressionStatement	"syslog ( LOG_DEBUG , ""Could not find file-xfer %u (cancelled?)"" , id )"	389:12:13516:13581	34142	1	True				
ANR	34336	CallExpression	"syslog ( LOG_DEBUG , ""Could not find file-xfer %u (cancelled?)"" , id )"		34142	0					
ANR	34337	Callee	syslog		34142	0					
ANR	34338	Identifier	syslog		34142	0					
ANR	34339	ArgumentList	LOG_DEBUG		34142	1					
ANR	34340	Argument	LOG_DEBUG		34142	0					
ANR	34341	Identifier	LOG_DEBUG		34142	0					
ANR	34342	Argument	"""Could not find file-xfer %u (cancelled?)"""		34142	1					
ANR	34343	PrimaryExpression	"""Could not find file-xfer %u (cancelled?)"""		34142	0					
ANR	34344	Argument	id		34142	2					
ANR	34345	Identifier	id		34142	0					
ANR	34346	ReturnStatement	return ;	390:8:13591:13597	34142	1	True				
ANR	34347	ExpressionStatement	"udscs_write ( conn , msg_type , 0 , 0 , data , message_header -> size )"	392:4:13609:13670	34142	5	True				
ANR	34348	CallExpression	"udscs_write ( conn , msg_type , 0 , 0 , data , message_header -> size )"		34142	0					
ANR	34349	Callee	udscs_write		34142	0					
ANR	34350	Identifier	udscs_write		34142	0					
ANR	34351	ArgumentList	conn		34142	1					
ANR	34352	Argument	conn		34142	0					
ANR	34353	Identifier	conn		34142	0					
ANR	34354	Argument	msg_type		34142	1					
ANR	34355	Identifier	msg_type		34142	0					
ANR	34356	Argument	0		34142	2					
ANR	34357	PrimaryExpression	0		34142	0					
ANR	34358	Argument	0		34142	3					
ANR	34359	PrimaryExpression	0		34142	0					
ANR	34360	Argument	data		34142	4					
ANR	34361	Identifier	data		34142	0					
ANR	34362	Argument	message_header -> size		34142	5					
ANR	34363	PtrMemberAccess	message_header -> size		34142	0					
ANR	34364	Identifier	message_header		34142	0					
ANR	34365	Identifier	size		34142	1					
ANR	34366	ReturnType	static void		34142	1					
ANR	34367	Identifier	do_client_file_xfer		34142	2					
ANR	34368	ParameterList	"struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data"		34142	3					
ANR	34369	Parameter	struct vdagent_virtio_port * vport	342:32:11655:11687	34142	0	True				
ANR	34370	ParameterType	struct vdagent_virtio_port *		34142	0					
ANR	34371	Identifier	vport		34142	1					
ANR	34372	Parameter	VDAgentMessage * message_header	343:32:11722:11751	34142	1	True				
ANR	34373	ParameterType	VDAgentMessage *		34142	0					
ANR	34374	Identifier	message_header		34142	1					
ANR	34375	Parameter	uint8_t * data	344:32:11786:11798	34142	2	True				
ANR	34376	ParameterType	uint8_t *		34142	0					
ANR	34377	Identifier	data		34142	1					
ANR	34378	CFGEntryNode	ENTRY		34142		True				
ANR	34379	CFGExitNode	EXIT		34142		True				
ANR	34380	Symbol	conn		34142						
ANR	34381	Symbol	g_hash_table_lookup		34142						
ANR	34382	Symbol	vport		34142						
ANR	34383	Symbol	data		34142						
ANR	34384	Symbol	message_header		34142						
ANR	34385	Symbol	message_header -> type		34142						
ANR	34386	Symbol	VDAGENTD_FILE_XFER_STATUS		34142						
ANR	34387	Symbol	d -> id		34142						
ANR	34388	Symbol	message_header -> size		34142						
ANR	34389	Symbol	active_session_conn		34142						
ANR	34390	Symbol	id		34142						
ANR	34391	Symbol	VDAGENTD_FILE_XFER_DATA		34142						
ANR	34392	Symbol	active_xfers		34142						
ANR	34393	Symbol	s -> id		34142						
ANR	34394	Symbol	debug		34142						
ANR	34395	Symbol	session_info		34142						
ANR	34396	Symbol	d		34142						
ANR	34397	Symbol	GUINT_TO_POINTER		34142						
ANR	34398	Symbol	* message_header		34142						
ANR	34399	Symbol	* d		34142						
ANR	34400	Symbol	s		34142						
ANR	34401	Symbol	VDAGENTD_FILE_XFER_START		34142						
ANR	34402	Symbol	msg_type		34142						
ANR	34403	Symbol	session_info_session_is_locked		34142						
ANR	34404	Symbol	LOG_DEBUG		34142						
ANR	34405	Symbol	* s		34142						
ANR	34406	DeclStmt									
ANR	34407	Decl							gsize	gsize [ ]	vdagent_message_min_size
ANR	34408	Function	vdagent_message_clipboard_from_le	415:0:14713:15505							
ANR	34409	FunctionDef	"vdagent_message_clipboard_from_le (VDAgentMessage * message_header , uint8_t * data)"		34408	0					
ANR	34410	CompoundStatement		417:0:14814:15505	34408	0					
ANR	34411	IdentifierDeclStatement	gsize min_size = vdagent_message_min_size [ message_header -> type ] ;	418:4:14820:14883	34408	0	True				
ANR	34412	IdentifierDecl	min_size = vdagent_message_min_size [ message_header -> type ]		34408	0					
ANR	34413	IdentifierDeclType	gsize		34408	0					
ANR	34414	Identifier	min_size		34408	1					
ANR	34415	AssignmentExpression	min_size = vdagent_message_min_size [ message_header -> type ]		34408	2		=			
ANR	34416	Identifier	min_size		34408	0					
ANR	34417	ArrayIndexing	vdagent_message_min_size [ message_header -> type ]		34408	1					
ANR	34418	Identifier	vdagent_message_min_size		34408	0					
ANR	34419	PtrMemberAccess	message_header -> type		34408	1					
ANR	34420	Identifier	message_header		34408	0					
ANR	34421	Identifier	type		34408	1					
ANR	34422	IdentifierDeclStatement	uint32_t * data_type = ( uint32_t * ) data ;	419:4:14889:14928	34408	1	True				
ANR	34423	IdentifierDecl	* data_type = ( uint32_t * ) data		34408	0					
ANR	34424	IdentifierDeclType	uint32_t *		34408	0					
ANR	34425	Identifier	data_type		34408	1					
ANR	34426	AssignmentExpression	* data_type = ( uint32_t * ) data		34408	2		=			
ANR	34427	Identifier	data_type		34408	0					
ANR	34428	CastExpression	( uint32_t * ) data		34408	1					
ANR	34429	CastTarget	uint32_t *		34408	0					
ANR	34430	Identifier	data		34408	1					
ANR	34431	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		34408	2					
ANR	34432	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	421:8:14939:15060	34408	0	True				
ANR	34433	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		34408	0					
ANR	34434	Callee	VD_AGENT_HAS_CAPABILITY		34408	0					
ANR	34435	Identifier	VD_AGENT_HAS_CAPABILITY		34408	0					
ANR	34436	ArgumentList	capabilities		34408	1					
ANR	34437	Argument	capabilities		34408	0					
ANR	34438	Identifier	capabilities		34408	0					
ANR	34439	Argument	capabilities_size		34408	1					
ANR	34440	Identifier	capabilities_size		34408	0					
ANR	34441	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		34408	2					
ANR	34442	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		34408	0					
ANR	34443	CompoundStatement		6:67:248:248	34408	1					
ANR	34444	ExpressionStatement	min_size += 4	423:8:15073:15086	34408	0	True				
ANR	34445	AssignmentExpression	min_size += 4		34408	0		+=			
ANR	34446	Identifier	min_size		34408	0					
ANR	34447	PrimaryExpression	4		34408	1					
ANR	34448	ExpressionStatement	data_type ++	424:8:15096:15107	34408	1	True				
ANR	34449	PostIncDecOperationExpression	data_type ++		34408	0					
ANR	34450	Identifier	data_type		34408	0					
ANR	34451	IncDec	++		34408	1					
ANR	34452	SwitchStatement	switch ( message_header -> type )		34408	3					
ANR	34453	Condition	message_header -> type	427:12:15128:15147	34408	0	True				
ANR	34454	PtrMemberAccess	message_header -> type		34408	0					
ANR	34455	Identifier	message_header		34408	0					
ANR	34456	Identifier	type		34408	1					
ANR	34457	CompoundStatement		11:34:335:335	34408	1					
ANR	34458	Label	case VD_AGENT_CLIPBOARD_REQUEST :	428:4:15156:15187	34408	0	True				
ANR	34459	Identifier	VD_AGENT_CLIPBOARD_REQUEST		34408	0					
ANR	34460	Label	case VD_AGENT_CLIPBOARD :	429:4:15193:15216	34408	1	True				
ANR	34461	Identifier	VD_AGENT_CLIPBOARD		34408	0					
ANR	34462	ExpressionStatement	* data_type = GUINT32_FROM_LE ( * data_type )	430:8:15226:15266	34408	2	True				
ANR	34463	AssignmentExpression	* data_type = GUINT32_FROM_LE ( * data_type )		34408	0		=			
ANR	34464	UnaryOperationExpression	* data_type		34408	0					
ANR	34465	UnaryOperator	*		34408	0					
ANR	34466	Identifier	data_type		34408	1					
ANR	34467	CallExpression	GUINT32_FROM_LE ( * data_type )		34408	1					
ANR	34468	Callee	GUINT32_FROM_LE		34408	0					
ANR	34469	Identifier	GUINT32_FROM_LE		34408	0					
ANR	34470	ArgumentList	* data_type		34408	1					
ANR	34471	Argument	* data_type		34408	0					
ANR	34472	UnaryOperationExpression	* data_type		34408	0					
ANR	34473	UnaryOperator	*		34408	0					
ANR	34474	Identifier	data_type		34408	1					
ANR	34475	BreakStatement	break ;	431:8:15276:15281	34408	3	True				
ANR	34476	Label	case VD_AGENT_CLIPBOARD_GRAB :	432:4:15287:15315	34408	4	True				
ANR	34477	Identifier	VD_AGENT_CLIPBOARD_GRAB		34408	0					
ANR	34478	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , min_size )"	433:8:15325:15388	34408	5	True				
ANR	34479	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , min_size )"		34408	0					
ANR	34480	Callee	virtio_msg_uint32_from_le		34408	0					
ANR	34481	Identifier	virtio_msg_uint32_from_le		34408	0					
ANR	34482	ArgumentList	data		34408	1					
ANR	34483	Argument	data		34408	0					
ANR	34484	Identifier	data		34408	0					
ANR	34485	Argument	message_header -> size		34408	1					
ANR	34486	PtrMemberAccess	message_header -> size		34408	0					
ANR	34487	Identifier	message_header		34408	0					
ANR	34488	Identifier	size		34408	1					
ANR	34489	Argument	min_size		34408	2					
ANR	34490	Identifier	min_size		34408	0					
ANR	34491	BreakStatement	break ;	434:8:15398:15403	34408	6	True				
ANR	34492	Label	case VD_AGENT_CLIPBOARD_RELEASE :	435:4:15409:15440	34408	7	True				
ANR	34493	Identifier	VD_AGENT_CLIPBOARD_RELEASE		34408	0					
ANR	34494	BreakStatement	break ;	436:8:15450:15455	34408	8	True				
ANR	34495	Label	default :	437:4:15461:15468	34408	9	True				
ANR	34496	Identifier	default		34408	0					
ANR	34497	ExpressionStatement	g_warn_if_reached ( )	438:8:15478:15497	34408	10	True				
ANR	34498	CallExpression	g_warn_if_reached ( )		34408	0					
ANR	34499	Callee	g_warn_if_reached		34408	0					
ANR	34500	Identifier	g_warn_if_reached		34408	0					
ANR	34501	ArgumentList			34408	1					
ANR	34502	ReturnType	static void		34408	1					
ANR	34503	Identifier	vdagent_message_clipboard_from_le		34408	2					
ANR	34504	ParameterList	"VDAgentMessage * message_header , uint8_t * data"		34408	3					
ANR	34505	Parameter	VDAgentMessage * message_header	415:46:14759:14788	34408	0	True				
ANR	34506	ParameterType	VDAgentMessage *		34408	0					
ANR	34507	Identifier	message_header		34408	1					
ANR	34508	Parameter	uint8_t * data	416:8:14799:14811	34408	1	True				
ANR	34509	ParameterType	uint8_t *		34408	0					
ANR	34510	Identifier	data		34408	1					
ANR	34511	CFGEntryNode	ENTRY		34408		True				
ANR	34512	CFGExitNode	EXIT		34408		True				
ANR	34513	Symbol	capabilities		34408						
ANR	34514	Symbol	data		34408						
ANR	34515	Symbol	* message_header		34408						
ANR	34516	Symbol	message_header		34408						
ANR	34517	Symbol	* vdagent_message_min_size		34408						
ANR	34518	Symbol	message_header -> type		34408						
ANR	34519	Symbol	message_header -> size		34408						
ANR	34520	Symbol	* data_type		34408						
ANR	34521	Symbol	capabilities_size		34408						
ANR	34522	Symbol	data_type		34408						
ANR	34523	Symbol	* * message_header		34408						
ANR	34524	Symbol	min_size		34408						
ANR	34525	Symbol	GUINT32_FROM_LE		34408						
ANR	34526	Symbol	vdagent_message_min_size		34408						
ANR	34527	Symbol	* message_header -> type		34408						
ANR	34528	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		34408						
ANR	34529	Symbol	VD_AGENT_HAS_CAPABILITY		34408						
ANR	34530	Function	vdagent_message_file_xfer_from_le	442:0:15508:16024							
ANR	34531	FunctionDef	"vdagent_message_file_xfer_from_le (VDAgentMessage * message_header , uint8_t * data)"		34530	0					
ANR	34532	CompoundStatement		444:0:15609:16024	34530	0					
ANR	34533	IdentifierDeclStatement	uint32_t * id = ( uint32_t * ) data ;	445:4:15615:15646	34530	0	True				
ANR	34534	IdentifierDecl	* id = ( uint32_t * ) data		34530	0					
ANR	34535	IdentifierDeclType	uint32_t *		34530	0					
ANR	34536	Identifier	id		34530	1					
ANR	34537	AssignmentExpression	* id = ( uint32_t * ) data		34530	2		=			
ANR	34538	Identifier	id		34530	0					
ANR	34539	CastExpression	( uint32_t * ) data		34530	1					
ANR	34540	CastTarget	uint32_t *		34530	0					
ANR	34541	Identifier	data		34530	1					
ANR	34542	ExpressionStatement	* id = GUINT32_FROM_LE ( * id )	446:4:15652:15678	34530	1	True				
ANR	34543	AssignmentExpression	* id = GUINT32_FROM_LE ( * id )		34530	0		=			
ANR	34544	UnaryOperationExpression	* id		34530	0					
ANR	34545	UnaryOperator	*		34530	0					
ANR	34546	Identifier	id		34530	1					
ANR	34547	CallExpression	GUINT32_FROM_LE ( * id )		34530	1					
ANR	34548	Callee	GUINT32_FROM_LE		34530	0					
ANR	34549	Identifier	GUINT32_FROM_LE		34530	0					
ANR	34550	ArgumentList	* id		34530	1					
ANR	34551	Argument	* id		34530	0					
ANR	34552	UnaryOperationExpression	* id		34530	0					
ANR	34553	UnaryOperator	*		34530	0					
ANR	34554	Identifier	id		34530	1					
ANR	34555	ExpressionStatement	id ++	447:4:15684:15688	34530	2	True				
ANR	34556	PostIncDecOperationExpression	id ++		34530	0					
ANR	34557	Identifier	id		34530	0					
ANR	34558	IncDec	++		34530	1					
ANR	34559	SwitchStatement	switch ( message_header -> type )		34530	3					
ANR	34560	Condition	message_header -> type	449:12:15716:15735	34530	0	True				
ANR	34561	PtrMemberAccess	message_header -> type		34530	0					
ANR	34562	Identifier	message_header		34530	0					
ANR	34563	Identifier	type		34530	1					
ANR	34564	CompoundStatement		6:34:128:128	34530	1					
ANR	34565	Label	case VD_AGENT_FILE_XFER_DATA :	450:4:15744:15772	34530	0	True				
ANR	34566	Identifier	VD_AGENT_FILE_XFER_DATA		34530	0					
ANR	34567	CompoundStatement		8:7:173:241	34530	1					
ANR	34568	IdentifierDeclStatement	VDAgentFileXferDataMessage * msg = ( VDAgentFileXferDataMessage * ) data ;	451:7:15783:15851	34530	0	True				
ANR	34569	IdentifierDecl	* msg = ( VDAgentFileXferDataMessage * ) data		34530	0					
ANR	34570	IdentifierDeclType	VDAgentFileXferDataMessage *		34530	0					
ANR	34571	Identifier	msg		34530	1					
ANR	34572	AssignmentExpression	* msg = ( VDAgentFileXferDataMessage * ) data		34530	2		=			
ANR	34573	Identifier	msg		34530	0					
ANR	34574	CastExpression	( VDAgentFileXferDataMessage * ) data		34530	1					
ANR	34575	CastTarget	VDAgentFileXferDataMessage *		34530	0					
ANR	34576	Identifier	data		34530	1					
ANR	34577	ExpressionStatement	msg -> size = GUINT64_FROM_LE ( msg -> size )	452:7:15860:15898	34530	1	True				
ANR	34578	AssignmentExpression	msg -> size = GUINT64_FROM_LE ( msg -> size )		34530	0		=			
ANR	34579	PtrMemberAccess	msg -> size		34530	0					
ANR	34580	Identifier	msg		34530	0					
ANR	34581	Identifier	size		34530	1					
ANR	34582	CallExpression	GUINT64_FROM_LE ( msg -> size )		34530	1					
ANR	34583	Callee	GUINT64_FROM_LE		34530	0					
ANR	34584	Identifier	GUINT64_FROM_LE		34530	0					
ANR	34585	ArgumentList	msg -> size		34530	1					
ANR	34586	Argument	msg -> size		34530	0					
ANR	34587	PtrMemberAccess	msg -> size		34530	0					
ANR	34588	Identifier	msg		34530	0					
ANR	34589	Identifier	size		34530	1					
ANR	34590	BreakStatement	break ;	453:7:15907:15912	34530	2	True				
ANR	34591	Label	case VD_AGENT_FILE_XFER_STATUS :	455:4:15924:15954	34530	2	True				
ANR	34592	Identifier	VD_AGENT_FILE_XFER_STATUS		34530	0					
ANR	34593	ExpressionStatement	* id = GUINT32_FROM_LE ( * id )	456:7:15963:15989	34530	3	True				
ANR	34594	AssignmentExpression	* id = GUINT32_FROM_LE ( * id )		34530	0		=			
ANR	34595	UnaryOperationExpression	* id		34530	0					
ANR	34596	UnaryOperator	*		34530	0					
ANR	34597	Identifier	id		34530	1					
ANR	34598	CallExpression	GUINT32_FROM_LE ( * id )		34530	1					
ANR	34599	Callee	GUINT32_FROM_LE		34530	0					
ANR	34600	Identifier	GUINT32_FROM_LE		34530	0					
ANR	34601	ArgumentList	* id		34530	1					
ANR	34602	Argument	* id		34530	0					
ANR	34603	UnaryOperationExpression	* id		34530	0					
ANR	34604	UnaryOperator	*		34530	0					
ANR	34605	Identifier	id		34530	1					
ANR	34606	BreakStatement	break ;	457:7:16011:16016	34530	4	True				
ANR	34607	ReturnType	static void		34530	1					
ANR	34608	Identifier	vdagent_message_file_xfer_from_le		34530	2					
ANR	34609	ParameterList	"VDAgentMessage * message_header , uint8_t * data"		34530	3					
ANR	34610	Parameter	VDAgentMessage * message_header	442:46:15554:15583	34530	0	True				
ANR	34611	ParameterType	VDAgentMessage *		34530	0					
ANR	34612	Identifier	message_header		34530	1					
ANR	34613	Parameter	uint8_t * data	443:8:15594:15606	34530	1	True				
ANR	34614	ParameterType	uint8_t *		34530	0					
ANR	34615	Identifier	data		34530	1					
ANR	34616	CFGEntryNode	ENTRY		34530		True				
ANR	34617	CFGExitNode	EXIT		34530		True				
ANR	34618	Symbol	msg		34530						
ANR	34619	Symbol	* id		34530						
ANR	34620	Symbol	data		34530						
ANR	34621	Symbol	* message_header		34530						
ANR	34622	Symbol	message_header		34530						
ANR	34623	Symbol	GUINT64_FROM_LE		34530						
ANR	34624	Symbol	message_header -> type		34530						
ANR	34625	Symbol	msg -> size		34530						
ANR	34626	Symbol	id		34530						
ANR	34627	Symbol	GUINT32_FROM_LE		34530						
ANR	34628	Symbol	* msg		34530						
ANR	34629	Function	vdagent_message_check_size	461:0:16027:18099							
ANR	34630	FunctionDef	vdagent_message_check_size (const VDAgentMessage * message_header)		34629	0					
ANR	34631	CompoundStatement		462:0:16108:18099	34629	0					
ANR	34632	IdentifierDeclStatement	uint32_t min_size = 0 ;	463:4:16114:16135	34629	0	True				
ANR	34633	IdentifierDecl	min_size = 0		34629	0					
ANR	34634	IdentifierDeclType	uint32_t		34629	0					
ANR	34635	Identifier	min_size		34629	1					
ANR	34636	AssignmentExpression	min_size = 0		34629	2		=			
ANR	34637	Identifier	min_size		34629	0					
ANR	34638	PrimaryExpression	0		34629	1					
ANR	34639	IfStatement	if ( message_header -> protocol != VD_AGENT_PROTOCOL )		34629	1					
ANR	34640	Condition	message_header -> protocol != VD_AGENT_PROTOCOL	465:8:16146:16190	34629	0	True				
ANR	34641	EqualityExpression	message_header -> protocol != VD_AGENT_PROTOCOL		34629	0		!=			
ANR	34642	PtrMemberAccess	message_header -> protocol		34629	0					
ANR	34643	Identifier	message_header		34629	0					
ANR	34644	Identifier	protocol		34629	1					
ANR	34645	Identifier	VD_AGENT_PROTOCOL		34629	1					
ANR	34646	CompoundStatement		4:55:84:84	34629	1					
ANR	34647	ExpressionStatement	"syslog ( LOG_ERR , ""message with wrong protocol version ignoring"" )"	466:8:16203:16266	34629	0	True				
ANR	34648	CallExpression	"syslog ( LOG_ERR , ""message with wrong protocol version ignoring"" )"		34629	0					
ANR	34649	Callee	syslog		34629	0					
ANR	34650	Identifier	syslog		34629	0					
ANR	34651	ArgumentList	LOG_ERR		34629	1					
ANR	34652	Argument	LOG_ERR		34629	0					
ANR	34653	Identifier	LOG_ERR		34629	0					
ANR	34654	Argument	"""message with wrong protocol version ignoring"""		34629	1					
ANR	34655	PrimaryExpression	"""message with wrong protocol version ignoring"""		34629	0					
ANR	34656	ReturnStatement	return FALSE ;	467:8:16276:16288	34629	1	True				
ANR	34657	Identifier	FALSE		34629	0					
ANR	34658	IfStatement	if ( ! message_header -> type || message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size ) )		34629	2					
ANR	34659	Condition	! message_header -> type || message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size )	470:8:16305:16399	34629	0	True				
ANR	34660	OrExpression	! message_header -> type || message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size )		34629	0		||			
ANR	34661	UnaryOperationExpression	! message_header -> type		34629	0					
ANR	34662	UnaryOperator	!		34629	0					
ANR	34663	PtrMemberAccess	message_header -> type		34629	1					
ANR	34664	Identifier	message_header		34629	0					
ANR	34665	Identifier	type		34629	1					
ANR	34666	RelationalExpression	message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size )		34629	1		>=			
ANR	34667	PtrMemberAccess	message_header -> type		34629	0					
ANR	34668	Identifier	message_header		34629	0					
ANR	34669	Identifier	type		34629	1					
ANR	34670	CallExpression	G_N_ELEMENTS ( vdagent_message_min_size )		34629	1					
ANR	34671	Callee	G_N_ELEMENTS		34629	0					
ANR	34672	Identifier	G_N_ELEMENTS		34629	0					
ANR	34673	ArgumentList	vdagent_message_min_size		34629	1					
ANR	34674	Argument	vdagent_message_min_size		34629	0					
ANR	34675	Identifier	vdagent_message_min_size		34629	0					
ANR	34676	CompoundStatement		10:72:293:293	34629	1					
ANR	34677	ExpressionStatement	"syslog ( LOG_WARNING , ""unknown message type %d, ignoring"" , message_header -> type )"	472:8:16412:16505	34629	0	True				
ANR	34678	CallExpression	"syslog ( LOG_WARNING , ""unknown message type %d, ignoring"" , message_header -> type )"		34629	0					
ANR	34679	Callee	syslog		34629	0					
ANR	34680	Identifier	syslog		34629	0					
ANR	34681	ArgumentList	LOG_WARNING		34629	1					
ANR	34682	Argument	LOG_WARNING		34629	0					
ANR	34683	Identifier	LOG_WARNING		34629	0					
ANR	34684	Argument	"""unknown message type %d, ignoring"""		34629	1					
ANR	34685	PrimaryExpression	"""unknown message type %d, ignoring"""		34629	0					
ANR	34686	Argument	message_header -> type		34629	2					
ANR	34687	PtrMemberAccess	message_header -> type		34629	0					
ANR	34688	Identifier	message_header		34629	0					
ANR	34689	Identifier	type		34629	1					
ANR	34690	ReturnStatement	return FALSE ;	474:8:16515:16527	34629	1	True				
ANR	34691	Identifier	FALSE		34629	0					
ANR	34692	ExpressionStatement	min_size = vdagent_message_min_size [ message_header -> type ]	477:4:16540:16597	34629	3	True				
ANR	34693	AssignmentExpression	min_size = vdagent_message_min_size [ message_header -> type ]		34629	0		=			
ANR	34694	Identifier	min_size		34629	0					
ANR	34695	ArrayIndexing	vdagent_message_min_size [ message_header -> type ]		34629	1					
ANR	34696	Identifier	vdagent_message_min_size		34629	0					
ANR	34697	PtrMemberAccess	message_header -> type		34629	1					
ANR	34698	Identifier	message_header		34629	0					
ANR	34699	Identifier	type		34629	1					
ANR	34700	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		34629	4					
ANR	34701	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	478:8:16607:16728	34629	0	True				
ANR	34702	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		34629	0					
ANR	34703	Callee	VD_AGENT_HAS_CAPABILITY		34629	0					
ANR	34704	Identifier	VD_AGENT_HAS_CAPABILITY		34629	0					
ANR	34705	ArgumentList	capabilities		34629	1					
ANR	34706	Argument	capabilities		34629	0					
ANR	34707	Identifier	capabilities		34629	0					
ANR	34708	Argument	capabilities_size		34629	1					
ANR	34709	Identifier	capabilities_size		34629	0					
ANR	34710	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		34629	2					
ANR	34711	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		34629	0					
ANR	34712	CompoundStatement		18:67:622:622	34629	1					
ANR	34713	SwitchStatement	switch ( message_header -> type )		34629	0					
ANR	34714	Condition	message_header -> type	480:16:16749:16768	34629	0	True				
ANR	34715	PtrMemberAccess	message_header -> type		34629	0					
ANR	34716	Identifier	message_header		34629	0					
ANR	34717	Identifier	type		34629	1					
ANR	34718	CompoundStatement		19:38:662:662	34629	1					
ANR	34719	Label	case VD_AGENT_CLIPBOARD_GRAB :	481:8:16781:16809	34629	0	True				
ANR	34720	Identifier	VD_AGENT_CLIPBOARD_GRAB		34629	0					
ANR	34721	Label	case VD_AGENT_CLIPBOARD_REQUEST :	482:8:16819:16850	34629	1	True				
ANR	34722	Identifier	VD_AGENT_CLIPBOARD_REQUEST		34629	0					
ANR	34723	Label	case VD_AGENT_CLIPBOARD :	483:8:16860:16883	34629	2	True				
ANR	34724	Identifier	VD_AGENT_CLIPBOARD		34629	0					
ANR	34725	Label	case VD_AGENT_CLIPBOARD_RELEASE :	484:8:16893:16924	34629	3	True				
ANR	34726	Identifier	VD_AGENT_CLIPBOARD_RELEASE		34629	0					
ANR	34727	ExpressionStatement	min_size += 4	485:10:16936:16949	34629	4	True				
ANR	34728	AssignmentExpression	min_size += 4		34629	0		+=			
ANR	34729	Identifier	min_size		34629	0					
ANR	34730	PrimaryExpression	4		34629	1					
ANR	34731	SwitchStatement	switch ( message_header -> type )		34629	5					
ANR	34732	Condition	message_header -> type	489:12:16980:16999	34629	0	True				
ANR	34733	PtrMemberAccess	message_header -> type		34629	0					
ANR	34734	Identifier	message_header		34629	0					
ANR	34735	Identifier	type		34629	1					
ANR	34736	CompoundStatement		28:34:893:893	34629	1					
ANR	34737	Label	case VD_AGENT_MONITORS_CONFIG :	490:4:17008:17037	34629	0	True				
ANR	34738	Identifier	VD_AGENT_MONITORS_CONFIG		34629	0					
ANR	34739	Label	case VD_AGENT_FILE_XFER_START :	491:4:17043:17072	34629	1	True				
ANR	34740	Identifier	VD_AGENT_FILE_XFER_START		34629	0					
ANR	34741	Label	case VD_AGENT_FILE_XFER_DATA :	492:4:17078:17106	34629	2	True				
ANR	34742	Identifier	VD_AGENT_FILE_XFER_DATA		34629	0					
ANR	34743	Label	case VD_AGENT_CLIPBOARD :	493:4:17112:17135	34629	3	True				
ANR	34744	Identifier	VD_AGENT_CLIPBOARD		34629	0					
ANR	34745	Label	case VD_AGENT_CLIPBOARD_GRAB :	494:4:17141:17169	34629	4	True				
ANR	34746	Identifier	VD_AGENT_CLIPBOARD_GRAB		34629	0					
ANR	34747	Label	case VD_AGENT_AUDIO_VOLUME_SYNC :	495:4:17175:17206	34629	5	True				
ANR	34748	Identifier	VD_AGENT_AUDIO_VOLUME_SYNC		34629	0					
ANR	34749	Label	case VD_AGENT_ANNOUNCE_CAPABILITIES :	496:4:17212:17247	34629	6	True				
ANR	34750	Identifier	VD_AGENT_ANNOUNCE_CAPABILITIES		34629	0					
ANR	34751	IfStatement	if ( message_header -> size < min_size )		34629	7					
ANR	34752	Condition	message_header -> size < min_size	497:12:17261:17291	34629	0	True				
ANR	34753	RelationalExpression	message_header -> size < min_size		34629	0		<			
ANR	34754	PtrMemberAccess	message_header -> size		34629	0					
ANR	34755	Identifier	message_header		34629	0					
ANR	34756	Identifier	size		34629	1					
ANR	34757	Identifier	min_size		34629	1					
ANR	34758	CompoundStatement		36:45:1185:1185	34629	1					
ANR	34759	ExpressionStatement	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"	498:12:17308:17441	34629	0	True				
ANR	34760	CallExpression	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"		34629	0					
ANR	34761	Callee	syslog		34629	0					
ANR	34762	Identifier	syslog		34629	0					
ANR	34763	ArgumentList	LOG_ERR		34629	1					
ANR	34764	Argument	LOG_ERR		34629	0					
ANR	34765	Identifier	LOG_ERR		34629	0					
ANR	34766	Argument	"""read: invalid message size: %u for message type: %u"""		34629	1					
ANR	34767	PrimaryExpression	"""read: invalid message size: %u for message type: %u"""		34629	0					
ANR	34768	Argument	message_header -> size		34629	2					
ANR	34769	PtrMemberAccess	message_header -> size		34629	0					
ANR	34770	Identifier	message_header		34629	0					
ANR	34771	Identifier	size		34629	1					
ANR	34772	Argument	message_header -> type		34629	3					
ANR	34773	PtrMemberAccess	message_header -> type		34629	0					
ANR	34774	Identifier	message_header		34629	0					
ANR	34775	Identifier	type		34629	1					
ANR	34776	ReturnStatement	return FALSE ;	500:12:17455:17467	34629	1	True				
ANR	34777	Identifier	FALSE		34629	0					
ANR	34778	BreakStatement	break ;	502:8:17487:17492	34629	8	True				
ANR	34779	Label	case VD_AGENT_MOUSE_STATE :	503:4:17498:17523	34629	9	True				
ANR	34780	Identifier	VD_AGENT_MOUSE_STATE		34629	0					
ANR	34781	Label	case VD_AGENT_FILE_XFER_STATUS :	504:4:17529:17559	34629	10	True				
ANR	34782	Identifier	VD_AGENT_FILE_XFER_STATUS		34629	0					
ANR	34783	Label	case VD_AGENT_DISPLAY_CONFIG :	505:4:17565:17593	34629	11	True				
ANR	34784	Identifier	VD_AGENT_DISPLAY_CONFIG		34629	0					
ANR	34785	Label	case VD_AGENT_REPLY :	506:4:17599:17618	34629	12	True				
ANR	34786	Identifier	VD_AGENT_REPLY		34629	0					
ANR	34787	Label	case VD_AGENT_CLIPBOARD_REQUEST :	507:4:17624:17655	34629	13	True				
ANR	34788	Identifier	VD_AGENT_CLIPBOARD_REQUEST		34629	0					
ANR	34789	Label	case VD_AGENT_CLIPBOARD_RELEASE :	508:4:17661:17692	34629	14	True				
ANR	34790	Identifier	VD_AGENT_CLIPBOARD_RELEASE		34629	0					
ANR	34791	Label	case VD_AGENT_MAX_CLIPBOARD :	509:4:17698:17725	34629	15	True				
ANR	34792	Identifier	VD_AGENT_MAX_CLIPBOARD		34629	0					
ANR	34793	Label	case VD_AGENT_CLIENT_DISCONNECTED :	510:4:17731:17764	34629	16	True				
ANR	34794	Identifier	VD_AGENT_CLIENT_DISCONNECTED		34629	0					
ANR	34795	IfStatement	if ( message_header -> size != min_size )		34629	17					
ANR	34796	Condition	message_header -> size != min_size	511:12:17778:17809	34629	0	True				
ANR	34797	EqualityExpression	message_header -> size != min_size		34629	0		!=			
ANR	34798	PtrMemberAccess	message_header -> size		34629	0					
ANR	34799	Identifier	message_header		34629	0					
ANR	34800	Identifier	size		34629	1					
ANR	34801	Identifier	min_size		34629	1					
ANR	34802	CompoundStatement		50:46:1703:1703	34629	1					
ANR	34803	ExpressionStatement	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"	512:12:17826:17959	34629	0	True				
ANR	34804	CallExpression	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"		34629	0					
ANR	34805	Callee	syslog		34629	0					
ANR	34806	Identifier	syslog		34629	0					
ANR	34807	ArgumentList	LOG_ERR		34629	1					
ANR	34808	Argument	LOG_ERR		34629	0					
ANR	34809	Identifier	LOG_ERR		34629	0					
ANR	34810	Argument	"""read: invalid message size: %u for message type: %u"""		34629	1					
ANR	34811	PrimaryExpression	"""read: invalid message size: %u for message type: %u"""		34629	0					
ANR	34812	Argument	message_header -> size		34629	2					
ANR	34813	PtrMemberAccess	message_header -> size		34629	0					
ANR	34814	Identifier	message_header		34629	0					
ANR	34815	Identifier	size		34629	1					
ANR	34816	Argument	message_header -> type		34629	3					
ANR	34817	PtrMemberAccess	message_header -> type		34629	0					
ANR	34818	Identifier	message_header		34629	0					
ANR	34819	Identifier	type		34629	1					
ANR	34820	ReturnStatement	return FALSE ;	514:12:17973:17985	34629	1	True				
ANR	34821	Identifier	FALSE		34629	0					
ANR	34822	BreakStatement	break ;	516:8:18005:18010	34629	18	True				
ANR	34823	Label	default :	517:4:18016:18023	34629	19	True				
ANR	34824	Identifier	default		34629	0					
ANR	34825	ExpressionStatement	g_warn_if_reached ( )	518:8:18033:18052	34629	20	True				
ANR	34826	CallExpression	g_warn_if_reached ( )		34629	0					
ANR	34827	Callee	g_warn_if_reached		34629	0					
ANR	34828	Identifier	g_warn_if_reached		34629	0					
ANR	34829	ArgumentList			34629	1					
ANR	34830	ReturnStatement	return FALSE ;	519:8:18062:18074	34629	21	True				
ANR	34831	Identifier	FALSE		34629	0					
ANR	34832	ReturnStatement	return TRUE ;	521:4:18086:18097	34629	6	True				
ANR	34833	Identifier	TRUE		34629	0					
ANR	34834	ReturnType	static gboolean		34629	1					
ANR	34835	Identifier	vdagent_message_check_size		34629	2					
ANR	34836	ParameterList	const VDAgentMessage * message_header		34629	3					
ANR	34837	Parameter	const VDAgentMessage * message_header	461:43:16070:16105	34629	0	True				
ANR	34838	ParameterType	const VDAgentMessage *		34629	0					
ANR	34839	Identifier	message_header		34629	1					
ANR	34840	CFGEntryNode	ENTRY		34629		True				
ANR	34841	CFGExitNode	EXIT		34629		True				
ANR	34842	Symbol	VD_AGENT_PROTOCOL		34629						
ANR	34843	Symbol	capabilities		34629						
ANR	34844	Symbol	* message_header		34629						
ANR	34845	Symbol	message_header		34629						
ANR	34846	Symbol	* vdagent_message_min_size		34629						
ANR	34847	Symbol	message_header -> type		34629						
ANR	34848	Symbol	TRUE		34629						
ANR	34849	Symbol	LOG_WARNING		34629						
ANR	34850	Symbol	message_header -> protocol		34629						
ANR	34851	Symbol	G_N_ELEMENTS		34629						
ANR	34852	Symbol	message_header -> size		34629						
ANR	34853	Symbol	capabilities_size		34629						
ANR	34854	Symbol	LOG_ERR		34629						
ANR	34855	Symbol	* * message_header		34629						
ANR	34856	Symbol	min_size		34629						
ANR	34857	Symbol	FALSE		34629						
ANR	34858	Symbol	vdagent_message_min_size		34629						
ANR	34859	Symbol	* message_header -> type		34629						
ANR	34860	Symbol	VD_AGENT_HAS_CAPABILITY		34629						
ANR	34861	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		34629						
ANR	34862	Function	virtio_port_read_complete	524:0:18102:20273							
ANR	34863	FunctionDef	"virtio_port_read_complete (struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , uint8_t * data)"		34862	0					
ANR	34864	CompoundStatement		529:0:18267:20273	34862	0					
ANR	34865	IfStatement	if ( ! vdagent_message_check_size ( message_header ) )		34862	0					
ANR	34866	Condition	! vdagent_message_check_size ( message_header )	530:8:18277:18319	34862	0	True				
ANR	34867	UnaryOperationExpression	! vdagent_message_check_size ( message_header )		34862	0					
ANR	34868	UnaryOperator	!		34862	0					
ANR	34869	CallExpression	vdagent_message_check_size ( message_header )		34862	1					
ANR	34870	Callee	vdagent_message_check_size		34862	0					
ANR	34871	Identifier	vdagent_message_check_size		34862	0					
ANR	34872	ArgumentList	message_header		34862	1					
ANR	34873	Argument	message_header		34862	0					
ANR	34874	Identifier	message_header		34862	0					
ANR	34875	ReturnStatement	return 0 ;	531:8:18330:18338	34862	1	True				
ANR	34876	PrimaryExpression	0		34862	0					
ANR	34877	SwitchStatement	switch ( message_header -> type )		34862	1					
ANR	34878	Condition	message_header -> type	533:12:18353:18372	34862	0	True				
ANR	34879	PtrMemberAccess	message_header -> type		34862	0					
ANR	34880	Identifier	message_header		34862	0					
ANR	34881	Identifier	type		34862	1					
ANR	34882	CompoundStatement		5:34:107:107	34862	1					
ANR	34883	Label	case VD_AGENT_MOUSE_STATE :	534:4:18381:18406	34862	0	True				
ANR	34884	Identifier	VD_AGENT_MOUSE_STATE		34862	0					
ANR	34885	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"	535:8:18416:18472	34862	1	True				
ANR	34886	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"		34862	0					
ANR	34887	Callee	virtio_msg_uint32_from_le		34862	0					
ANR	34888	Identifier	virtio_msg_uint32_from_le		34862	0					
ANR	34889	ArgumentList	data		34862	1					
ANR	34890	Argument	data		34862	0					
ANR	34891	Identifier	data		34862	0					
ANR	34892	Argument	message_header -> size		34862	1					
ANR	34893	PtrMemberAccess	message_header -> size		34862	0					
ANR	34894	Identifier	message_header		34862	0					
ANR	34895	Identifier	size		34862	1					
ANR	34896	Argument	0		34862	2					
ANR	34897	PrimaryExpression	0		34862	0					
ANR	34898	ExpressionStatement	"do_client_mouse ( & uinput , ( VDAgentMouseState * ) data )"	536:8:18482:18533	34862	2	True				
ANR	34899	CallExpression	"do_client_mouse ( & uinput , ( VDAgentMouseState * ) data )"		34862	0					
ANR	34900	Callee	do_client_mouse		34862	0					
ANR	34901	Identifier	do_client_mouse		34862	0					
ANR	34902	ArgumentList	& uinput		34862	1					
ANR	34903	Argument	& uinput		34862	0					
ANR	34904	UnaryOperationExpression	& uinput		34862	0					
ANR	34905	UnaryOperator	&		34862	0					
ANR	34906	Identifier	uinput		34862	1					
ANR	34907	Argument	( VDAgentMouseState * ) data		34862	1					
ANR	34908	CastExpression	( VDAgentMouseState * ) data		34862	0					
ANR	34909	CastTarget	VDAgentMouseState *		34862	0					
ANR	34910	Identifier	data		34862	1					
ANR	34911	BreakStatement	break ;	537:8:18543:18548	34862	3	True				
ANR	34912	Label	case VD_AGENT_MONITORS_CONFIG :	538:4:18554:18583	34862	4	True				
ANR	34913	Identifier	VD_AGENT_MONITORS_CONFIG		34862	0					
ANR	34914	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"	539:8:18593:18649	34862	5	True				
ANR	34915	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"		34862	0					
ANR	34916	Callee	virtio_msg_uint32_from_le		34862	0					
ANR	34917	Identifier	virtio_msg_uint32_from_le		34862	0					
ANR	34918	ArgumentList	data		34862	1					
ANR	34919	Argument	data		34862	0					
ANR	34920	Identifier	data		34862	0					
ANR	34921	Argument	message_header -> size		34862	1					
ANR	34922	PtrMemberAccess	message_header -> size		34862	0					
ANR	34923	Identifier	message_header		34862	0					
ANR	34924	Identifier	size		34862	1					
ANR	34925	Argument	0		34862	2					
ANR	34926	PrimaryExpression	0		34862	0					
ANR	34927	ExpressionStatement	"do_client_monitors ( vport , port_nr , message_header , ( VDAgentMonitorsConfig * ) data )"	540:8:18659:18760	34862	6	True				
ANR	34928	CallExpression	"do_client_monitors ( vport , port_nr , message_header , ( VDAgentMonitorsConfig * ) data )"		34862	0					
ANR	34929	Callee	do_client_monitors		34862	0					
ANR	34930	Identifier	do_client_monitors		34862	0					
ANR	34931	ArgumentList	vport		34862	1					
ANR	34932	Argument	vport		34862	0					
ANR	34933	Identifier	vport		34862	0					
ANR	34934	Argument	port_nr		34862	1					
ANR	34935	Identifier	port_nr		34862	0					
ANR	34936	Argument	message_header		34862	2					
ANR	34937	Identifier	message_header		34862	0					
ANR	34938	Argument	( VDAgentMonitorsConfig * ) data		34862	3					
ANR	34939	CastExpression	( VDAgentMonitorsConfig * ) data		34862	0					
ANR	34940	CastTarget	VDAgentMonitorsConfig *		34862	0					
ANR	34941	Identifier	data		34862	1					
ANR	34942	BreakStatement	break ;	542:8:18770:18775	34862	7	True				
ANR	34943	Label	case VD_AGENT_ANNOUNCE_CAPABILITIES :	543:4:18781:18816	34862	8	True				
ANR	34944	Identifier	VD_AGENT_ANNOUNCE_CAPABILITIES		34862	0					
ANR	34945	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"	544:8:18826:18882	34862	9	True				
ANR	34946	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"		34862	0					
ANR	34947	Callee	virtio_msg_uint32_from_le		34862	0					
ANR	34948	Identifier	virtio_msg_uint32_from_le		34862	0					
ANR	34949	ArgumentList	data		34862	1					
ANR	34950	Argument	data		34862	0					
ANR	34951	Identifier	data		34862	0					
ANR	34952	Argument	message_header -> size		34862	1					
ANR	34953	PtrMemberAccess	message_header -> size		34862	0					
ANR	34954	Identifier	message_header		34862	0					
ANR	34955	Identifier	size		34862	1					
ANR	34956	Argument	0		34862	2					
ANR	34957	PrimaryExpression	0		34862	0					
ANR	34958	ExpressionStatement	"do_client_capabilities ( vport , message_header , ( VDAgentAnnounceCapabilities * ) data )"	545:8:18892:18998	34862	10	True				
ANR	34959	CallExpression	"do_client_capabilities ( vport , message_header , ( VDAgentAnnounceCapabilities * ) data )"		34862	0					
ANR	34960	Callee	do_client_capabilities		34862	0					
ANR	34961	Identifier	do_client_capabilities		34862	0					
ANR	34962	ArgumentList	vport		34862	1					
ANR	34963	Argument	vport		34862	0					
ANR	34964	Identifier	vport		34862	0					
ANR	34965	Argument	message_header		34862	1					
ANR	34966	Identifier	message_header		34862	0					
ANR	34967	Argument	( VDAgentAnnounceCapabilities * ) data		34862	2					
ANR	34968	CastExpression	( VDAgentAnnounceCapabilities * ) data		34862	0					
ANR	34969	CastTarget	VDAgentAnnounceCapabilities *		34862	0					
ANR	34970	Identifier	data		34862	1					
ANR	34971	BreakStatement	break ;	547:8:19008:19013	34862	11	True				
ANR	34972	Label	case VD_AGENT_CLIPBOARD_GRAB :	548:4:19019:19047	34862	12	True				
ANR	34973	Identifier	VD_AGENT_CLIPBOARD_GRAB		34862	0					
ANR	34974	Label	case VD_AGENT_CLIPBOARD_REQUEST :	549:4:19053:19084	34862	13	True				
ANR	34975	Identifier	VD_AGENT_CLIPBOARD_REQUEST		34862	0					
ANR	34976	Label	case VD_AGENT_CLIPBOARD :	550:4:19090:19113	34862	14	True				
ANR	34977	Identifier	VD_AGENT_CLIPBOARD		34862	0					
ANR	34978	Label	case VD_AGENT_CLIPBOARD_RELEASE :	551:4:19119:19150	34862	15	True				
ANR	34979	Identifier	VD_AGENT_CLIPBOARD_RELEASE		34862	0					
ANR	34980	ExpressionStatement	"vdagent_message_clipboard_from_le ( message_header , data )"	552:8:19160:19215	34862	16	True				
ANR	34981	CallExpression	"vdagent_message_clipboard_from_le ( message_header , data )"		34862	0					
ANR	34982	Callee	vdagent_message_clipboard_from_le		34862	0					
ANR	34983	Identifier	vdagent_message_clipboard_from_le		34862	0					
ANR	34984	ArgumentList	message_header		34862	1					
ANR	34985	Argument	message_header		34862	0					
ANR	34986	Identifier	message_header		34862	0					
ANR	34987	Argument	data		34862	1					
ANR	34988	Identifier	data		34862	0					
ANR	34989	ExpressionStatement	"do_client_clipboard ( vport , message_header , data )"	553:8:19225:19273	34862	17	True				
ANR	34990	CallExpression	"do_client_clipboard ( vport , message_header , data )"		34862	0					
ANR	34991	Callee	do_client_clipboard		34862	0					
ANR	34992	Identifier	do_client_clipboard		34862	0					
ANR	34993	ArgumentList	vport		34862	1					
ANR	34994	Argument	vport		34862	0					
ANR	34995	Identifier	vport		34862	0					
ANR	34996	Argument	message_header		34862	1					
ANR	34997	Identifier	message_header		34862	0					
ANR	34998	Argument	data		34862	2					
ANR	34999	Identifier	data		34862	0					
ANR	35000	BreakStatement	break ;	554:8:19283:19288	34862	18	True				
ANR	35001	Label	case VD_AGENT_FILE_XFER_START :	555:4:19294:19323	34862	19	True				
ANR	35002	Identifier	VD_AGENT_FILE_XFER_START		34862	0					
ANR	35003	Label	case VD_AGENT_FILE_XFER_STATUS :	556:4:19329:19359	34862	20	True				
ANR	35004	Identifier	VD_AGENT_FILE_XFER_STATUS		34862	0					
ANR	35005	Label	case VD_AGENT_FILE_XFER_DATA :	557:4:19365:19393	34862	21	True				
ANR	35006	Identifier	VD_AGENT_FILE_XFER_DATA		34862	0					
ANR	35007	ExpressionStatement	"vdagent_message_file_xfer_from_le ( message_header , data )"	558:8:19403:19458	34862	22	True				
ANR	35008	CallExpression	"vdagent_message_file_xfer_from_le ( message_header , data )"		34862	0					
ANR	35009	Callee	vdagent_message_file_xfer_from_le		34862	0					
ANR	35010	Identifier	vdagent_message_file_xfer_from_le		34862	0					
ANR	35011	ArgumentList	message_header		34862	1					
ANR	35012	Argument	message_header		34862	0					
ANR	35013	Identifier	message_header		34862	0					
ANR	35014	Argument	data		34862	1					
ANR	35015	Identifier	data		34862	0					
ANR	35016	ExpressionStatement	"do_client_file_xfer ( vport , message_header , data )"	559:8:19468:19516	34862	23	True				
ANR	35017	CallExpression	"do_client_file_xfer ( vport , message_header , data )"		34862	0					
ANR	35018	Callee	do_client_file_xfer		34862	0					
ANR	35019	Identifier	do_client_file_xfer		34862	0					
ANR	35020	ArgumentList	vport		34862	1					
ANR	35021	Argument	vport		34862	0					
ANR	35022	Identifier	vport		34862	0					
ANR	35023	Argument	message_header		34862	1					
ANR	35024	Identifier	message_header		34862	0					
ANR	35025	Argument	data		34862	2					
ANR	35026	Identifier	data		34862	0					
ANR	35027	BreakStatement	break ;	560:8:19526:19531	34862	24	True				
ANR	35028	Label	case VD_AGENT_CLIENT_DISCONNECTED :	561:4:19537:19570	34862	25	True				
ANR	35029	Identifier	VD_AGENT_CLIENT_DISCONNECTED		34862	0					
ANR	35030	ExpressionStatement	"vdagent_virtio_port_reset ( vport , VDP_CLIENT_PORT )"	562:8:19580:19629	34862	26	True				
ANR	35031	CallExpression	"vdagent_virtio_port_reset ( vport , VDP_CLIENT_PORT )"		34862	0					
ANR	35032	Callee	vdagent_virtio_port_reset		34862	0					
ANR	35033	Identifier	vdagent_virtio_port_reset		34862	0					
ANR	35034	ArgumentList	vport		34862	1					
ANR	35035	Argument	vport		34862	0					
ANR	35036	Identifier	vport		34862	0					
ANR	35037	Argument	VDP_CLIENT_PORT		34862	1					
ANR	35038	Identifier	VDP_CLIENT_PORT		34862	0					
ANR	35039	ExpressionStatement	do_client_disconnect ( )	563:8:19639:19661	34862	27	True				
ANR	35040	CallExpression	do_client_disconnect ( )		34862	0					
ANR	35041	Callee	do_client_disconnect		34862	0					
ANR	35042	Identifier	do_client_disconnect		34862	0					
ANR	35043	ArgumentList			34862	1					
ANR	35044	BreakStatement	break ;	564:8:19671:19676	34862	28	True				
ANR	35045	Label	case VD_AGENT_MAX_CLIPBOARD :	565:4:19682:19709	34862	29	True				
ANR	35046	Identifier	VD_AGENT_MAX_CLIPBOARD		34862	0					
ANR	35047	CompoundStatement		37:33:1443:1443	34862	30					
ANR	35048	ExpressionStatement	max_clipboard = GUINT32_FROM_LE ( ( ( VDAgentMaxClipboard * ) data ) -> max )	566:8:19721:19788	34862	0	True				
ANR	35049	AssignmentExpression	max_clipboard = GUINT32_FROM_LE ( ( ( VDAgentMaxClipboard * ) data ) -> max )		34862	0		=			
ANR	35050	Identifier	max_clipboard		34862	0					
ANR	35051	CallExpression	GUINT32_FROM_LE ( ( ( VDAgentMaxClipboard * ) data ) -> max )		34862	1					
ANR	35052	Callee	GUINT32_FROM_LE		34862	0					
ANR	35053	Identifier	GUINT32_FROM_LE		34862	0					
ANR	35054	ArgumentList	( ( VDAgentMaxClipboard * ) data ) -> max		34862	1					
ANR	35055	Argument	( ( VDAgentMaxClipboard * ) data ) -> max		34862	0					
ANR	35056	PtrMemberAccess	( ( VDAgentMaxClipboard * ) data ) -> max		34862	0					
ANR	35057	CastExpression	( VDAgentMaxClipboard * ) data		34862	0					
ANR	35058	CastTarget	VDAgentMaxClipboard *		34862	0					
ANR	35059	Identifier	data		34862	1					
ANR	35060	Identifier	max		34862	1					
ANR	35061	ExpressionStatement	"syslog ( LOG_DEBUG , ""Set max clipboard: %d"" , max_clipboard )"	567:8:19798:19855	34862	1	True				
ANR	35062	CallExpression	"syslog ( LOG_DEBUG , ""Set max clipboard: %d"" , max_clipboard )"		34862	0					
ANR	35063	Callee	syslog		34862	0					
ANR	35064	Identifier	syslog		34862	0					
ANR	35065	ArgumentList	LOG_DEBUG		34862	1					
ANR	35066	Argument	LOG_DEBUG		34862	0					
ANR	35067	Identifier	LOG_DEBUG		34862	0					
ANR	35068	Argument	"""Set max clipboard: %d"""		34862	1					
ANR	35069	PrimaryExpression	"""Set max clipboard: %d"""		34862	0					
ANR	35070	Argument	max_clipboard		34862	2					
ANR	35071	Identifier	max_clipboard		34862	0					
ANR	35072	BreakStatement	break ;	568:8:19865:19870	34862	2	True				
ANR	35073	Label	case VD_AGENT_AUDIO_VOLUME_SYNC :	570:4:19882:19913	34862	31	True				
ANR	35074	Identifier	VD_AGENT_AUDIO_VOLUME_SYNC		34862	0					
ANR	35075	CompoundStatement		43:8:1657:1719	34862	32					
ANR	35076	IdentifierDeclStatement	VDAgentAudioVolumeSync * vdata = ( VDAgentAudioVolumeSync * ) data ;	571:8:19925:19987	34862	0	True				
ANR	35077	IdentifierDecl	* vdata = ( VDAgentAudioVolumeSync * ) data		34862	0					
ANR	35078	IdentifierDeclType	VDAgentAudioVolumeSync *		34862	0					
ANR	35079	Identifier	vdata		34862	1					
ANR	35080	AssignmentExpression	* vdata = ( VDAgentAudioVolumeSync * ) data		34862	2		=			
ANR	35081	Identifier	vdata		34862	0					
ANR	35082	CastExpression	( VDAgentAudioVolumeSync * ) data		34862	1					
ANR	35083	CastTarget	VDAgentAudioVolumeSync *		34862	0					
ANR	35084	Identifier	data		34862	1					
ANR	35085	ExpressionStatement	"virtio_msg_uint16_from_le ( ( uint8_t * ) vdata , message_header -> size , offsetof ( VDAgentAudioVolumeSync , volume ) )"	572:8:19997:20116	34862	1	True				
ANR	35086	CallExpression	"virtio_msg_uint16_from_le ( ( uint8_t * ) vdata , message_header -> size , offsetof ( VDAgentAudioVolumeSync , volume ) )"		34862	0					
ANR	35087	Callee	virtio_msg_uint16_from_le		34862	0					
ANR	35088	Identifier	virtio_msg_uint16_from_le		34862	0					
ANR	35089	ArgumentList	( uint8_t * ) vdata		34862	1					
ANR	35090	Argument	( uint8_t * ) vdata		34862	0					
ANR	35091	CastExpression	( uint8_t * ) vdata		34862	0					
ANR	35092	CastTarget	uint8_t *		34862	0					
ANR	35093	Identifier	vdata		34862	1					
ANR	35094	Argument	message_header -> size		34862	1					
ANR	35095	PtrMemberAccess	message_header -> size		34862	0					
ANR	35096	Identifier	message_header		34862	0					
ANR	35097	Identifier	size		34862	1					
ANR	35098	Argument	"offsetof ( VDAgentAudioVolumeSync , volume )"		34862	2					
ANR	35099	CallExpression	"offsetof ( VDAgentAudioVolumeSync , volume )"		34862	0					
ANR	35100	Callee	offsetof		34862	0					
ANR	35101	Identifier	offsetof		34862	0					
ANR	35102	ArgumentList	VDAgentAudioVolumeSync		34862	1					
ANR	35103	Argument	VDAgentAudioVolumeSync		34862	0					
ANR	35104	Identifier	VDAgentAudioVolumeSync		34862	0					
ANR	35105	Argument	volume		34862	1					
ANR	35106	Identifier	volume		34862	0					
ANR	35107	ExpressionStatement	"do_client_volume_sync ( vport , port_nr , message_header , vdata )"	575:8:20127:20187	34862	2	True				
ANR	35108	CallExpression	"do_client_volume_sync ( vport , port_nr , message_header , vdata )"		34862	0					
ANR	35109	Callee	do_client_volume_sync		34862	0					
ANR	35110	Identifier	do_client_volume_sync		34862	0					
ANR	35111	ArgumentList	vport		34862	1					
ANR	35112	Argument	vport		34862	0					
ANR	35113	Identifier	vport		34862	0					
ANR	35114	Argument	port_nr		34862	1					
ANR	35115	Identifier	port_nr		34862	0					
ANR	35116	Argument	message_header		34862	2					
ANR	35117	Identifier	message_header		34862	0					
ANR	35118	Argument	vdata		34862	3					
ANR	35119	Identifier	vdata		34862	0					
ANR	35120	BreakStatement	break ;	576:8:20197:20202	34862	3	True				
ANR	35121	Label	default :	578:4:20214:20221	34862	33	True				
ANR	35122	Identifier	default		34862	0					
ANR	35123	ExpressionStatement	g_warn_if_reached ( )	579:8:20231:20250	34862	34	True				
ANR	35124	CallExpression	g_warn_if_reached ( )		34862	0					
ANR	35125	Callee	g_warn_if_reached		34862	0					
ANR	35126	Identifier	g_warn_if_reached		34862	0					
ANR	35127	ArgumentList			34862	1					
ANR	35128	ReturnStatement	return 0 ;	582:4:20263:20271	34862	2	True				
ANR	35129	PrimaryExpression	0		34862	0					
ANR	35130	ReturnType	static int		34862	1					
ANR	35131	Identifier	virtio_port_read_complete		34862	2					
ANR	35132	ParameterList	"struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , uint8_t * data"		34862	3					
ANR	35133	Parameter	struct vdagent_virtio_port * vport	525:8:18148:18180	34862	0	True				
ANR	35134	ParameterType	struct vdagent_virtio_port *		34862	0					
ANR	35135	Identifier	vport		34862	1					
ANR	35136	Parameter	int port_nr	526:8:18191:18201	34862	1	True				
ANR	35137	ParameterType	int		34862	0					
ANR	35138	Identifier	port_nr		34862	1					
ANR	35139	Parameter	VDAgentMessage * message_header	527:8:18212:18241	34862	2	True				
ANR	35140	ParameterType	VDAgentMessage *		34862	0					
ANR	35141	Identifier	message_header		34862	1					
ANR	35142	Parameter	uint8_t * data	528:8:18252:18264	34862	3	True				
ANR	35143	ParameterType	uint8_t *		34862	0					
ANR	35144	Identifier	data		34862	1					
ANR	35145	CFGEntryNode	ENTRY		34862		True				
ANR	35146	CFGExitNode	EXIT		34862		True				
ANR	35147	Symbol	VDP_CLIENT_PORT		34862						
ANR	35148	Symbol	port_nr		34862						
ANR	35149	Symbol	vport		34862						
ANR	35150	Symbol	data		34862						
ANR	35151	Symbol	* message_header		34862						
ANR	35152	Symbol	message_header		34862						
ANR	35153	Symbol	message_header -> type		34862						
ANR	35154	Symbol	vdata		34862						
ANR	35155	Symbol	( ( VDAgentMaxClipboard * ) data ) -> max		34862						
ANR	35156	Symbol	message_header -> size		34862						
ANR	35157	Symbol	volume		34862						
ANR	35158	Symbol	max_clipboard		34862						
ANR	35159	Symbol	VDAgentAudioVolumeSync		34862						
ANR	35160	Symbol	vdagent_message_check_size		34862						
ANR	35161	Symbol	& uinput		34862						
ANR	35162	Symbol	offsetof		34862						
ANR	35163	Symbol	GUINT32_FROM_LE		34862						
ANR	35164	Symbol	LOG_DEBUG		34862						
ANR	35165	Symbol	* data		34862						
ANR	35166	Function	virtio_write_clipboard	585:0:20276:21355							
ANR	35167	FunctionDef	"virtio_write_clipboard (uint8_t selection , uint32_t msg_type , uint32_t data_type , uint8_t * data , uint32_t data_size)"		35166	0					
ANR	35168	CompoundStatement		587:0:20408:21355	35166	0					
ANR	35169	IdentifierDeclStatement	uint32_t size = data_size ;	588:4:20414:20439	35166	0	True				
ANR	35170	IdentifierDecl	size = data_size		35166	0					
ANR	35171	IdentifierDeclType	uint32_t		35166	0					
ANR	35172	Identifier	size		35166	1					
ANR	35173	AssignmentExpression	size = data_size		35166	2		=			
ANR	35174	Identifier	data_size		35166	0					
ANR	35175	Identifier	data_size		35166	1					
ANR	35176	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		35166	1					
ANR	35177	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	590:8:20450:20571	35166	0	True				
ANR	35178	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		35166	0					
ANR	35179	Callee	VD_AGENT_HAS_CAPABILITY		35166	0					
ANR	35180	Identifier	VD_AGENT_HAS_CAPABILITY		35166	0					
ANR	35181	ArgumentList	capabilities		35166	1					
ANR	35182	Argument	capabilities		35166	0					
ANR	35183	Identifier	capabilities		35166	0					
ANR	35184	Argument	capabilities_size		35166	1					
ANR	35185	Identifier	capabilities_size		35166	0					
ANR	35186	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		35166	2					
ANR	35187	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		35166	0					
ANR	35188	CompoundStatement		5:67:165:165	35166	1					
ANR	35189	ExpressionStatement	size += 4	592:8:20584:20593	35166	0	True				
ANR	35190	AssignmentExpression	size += 4		35166	0		+=			
ANR	35191	Identifier	size		35166	0					
ANR	35192	PrimaryExpression	4		35166	1					
ANR	35193	IfStatement	if ( data_type != - 1 )		35166	2					
ANR	35194	Condition	data_type != - 1	594:8:20609:20623	35166	0	True				
ANR	35195	EqualityExpression	data_type != - 1		35166	0		!=			
ANR	35196	Identifier	data_type		35166	0					
ANR	35197	UnaryOperationExpression	- 1		35166	1					
ANR	35198	UnaryOperator	-		35166	0					
ANR	35199	PrimaryExpression	1		35166	1					
ANR	35200	CompoundStatement		8:25:217:217	35166	1					
ANR	35201	ExpressionStatement	size += 4	595:8:20636:20645	35166	0	True				
ANR	35202	AssignmentExpression	size += 4		35166	0		+=			
ANR	35203	Identifier	size		35166	0					
ANR	35204	PrimaryExpression	4		35166	1					
ANR	35205	ExpressionStatement	"vdagent_virtio_port_write_start ( virtio_port , VDP_CLIENT_PORT , msg_type , 0 , size )"	598:4:20658:20774	35166	3	True				
ANR	35206	CallExpression	"vdagent_virtio_port_write_start ( virtio_port , VDP_CLIENT_PORT , msg_type , 0 , size )"		35166	0					
ANR	35207	Callee	vdagent_virtio_port_write_start		35166	0					
ANR	35208	Identifier	vdagent_virtio_port_write_start		35166	0					
ANR	35209	ArgumentList	virtio_port		35166	1					
ANR	35210	Argument	virtio_port		35166	0					
ANR	35211	Identifier	virtio_port		35166	0					
ANR	35212	Argument	VDP_CLIENT_PORT		35166	1					
ANR	35213	Identifier	VDP_CLIENT_PORT		35166	0					
ANR	35214	Argument	msg_type		35166	2					
ANR	35215	Identifier	msg_type		35166	0					
ANR	35216	Argument	0		35166	3					
ANR	35217	PrimaryExpression	0		35166	0					
ANR	35218	Argument	size		35166	4					
ANR	35219	Identifier	size		35166	0					
ANR	35220	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		35166	4					
ANR	35221	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	601:8:20785:20906	35166	0	True				
ANR	35222	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		35166	0					
ANR	35223	Callee	VD_AGENT_HAS_CAPABILITY		35166	0					
ANR	35224	Identifier	VD_AGENT_HAS_CAPABILITY		35166	0					
ANR	35225	ArgumentList	capabilities		35166	1					
ANR	35226	Argument	capabilities		35166	0					
ANR	35227	Identifier	capabilities		35166	0					
ANR	35228	Argument	capabilities_size		35166	1					
ANR	35229	Identifier	capabilities_size		35166	0					
ANR	35230	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		35166	2					
ANR	35231	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		35166	0					
ANR	35232	CompoundStatement		17:8:510:549	35166	1					
ANR	35233	IdentifierDeclStatement	"uint8_t sel [ 4 ] = { selection , 0 , 0 , 0 } ;"	603:8:20919:20958	35166	0	True				
ANR	35234	IdentifierDecl	"sel [ 4 ] = { selection , 0 , 0 , 0 }"		35166	0					
ANR	35235	IdentifierDeclType	uint8_t [ 4 ]		35166	0					
ANR	35236	Identifier	sel		35166	1					
ANR	35237	PrimaryExpression	4		35166	2					
ANR	35238	AssignmentExpression	"sel [ 4 ] = { selection , 0 , 0 , 0 }"		35166	3		=			
ANR	35239	Identifier	sel		35166	0					
ANR	35240	InitializerList	selection		35166	1					
ANR	35241	Identifier	selection		35166	0					
ANR	35242	PrimaryExpression	0		35166	1					
ANR	35243	PrimaryExpression	0		35166	2					
ANR	35244	PrimaryExpression	0		35166	3					
ANR	35245	ExpressionStatement	"vdagent_virtio_port_write_append ( virtio_port , sel , 4 )"	604:8:20968:21021	35166	1	True				
ANR	35246	CallExpression	"vdagent_virtio_port_write_append ( virtio_port , sel , 4 )"		35166	0					
ANR	35247	Callee	vdagent_virtio_port_write_append		35166	0					
ANR	35248	Identifier	vdagent_virtio_port_write_append		35166	0					
ANR	35249	ArgumentList	virtio_port		35166	1					
ANR	35250	Argument	virtio_port		35166	0					
ANR	35251	Identifier	virtio_port		35166	0					
ANR	35252	Argument	sel		35166	1					
ANR	35253	Identifier	sel		35166	0					
ANR	35254	Argument	4		35166	2					
ANR	35255	PrimaryExpression	4		35166	0					
ANR	35256	IfStatement	if ( data_type != - 1 )		35166	5					
ANR	35257	Condition	data_type != - 1	606:8:21037:21051	35166	0	True				
ANR	35258	EqualityExpression	data_type != - 1		35166	0		!=			
ANR	35259	Identifier	data_type		35166	0					
ANR	35260	UnaryOperationExpression	- 1		35166	1					
ANR	35261	UnaryOperator	-		35166	0					
ANR	35262	PrimaryExpression	1		35166	1					
ANR	35263	CompoundStatement		20:25:645:645	35166	1					
ANR	35264	ExpressionStatement	data_type = GUINT32_TO_LE ( data_type )	607:8:21064:21100	35166	0	True				
ANR	35265	AssignmentExpression	data_type = GUINT32_TO_LE ( data_type )		35166	0		=			
ANR	35266	Identifier	data_type		35166	0					
ANR	35267	CallExpression	GUINT32_TO_LE ( data_type )		35166	1					
ANR	35268	Callee	GUINT32_TO_LE		35166	0					
ANR	35269	Identifier	GUINT32_TO_LE		35166	0					
ANR	35270	ArgumentList	data_type		35166	1					
ANR	35271	Argument	data_type		35166	0					
ANR	35272	Identifier	data_type		35166	0					
ANR	35273	ExpressionStatement	"vdagent_virtio_port_write_append ( virtio_port , ( uint8_t * ) & data_type , 4 )"	608:8:21110:21180	35166	1	True				
ANR	35274	CallExpression	"vdagent_virtio_port_write_append ( virtio_port , ( uint8_t * ) & data_type , 4 )"		35166	0					
ANR	35275	Callee	vdagent_virtio_port_write_append		35166	0					
ANR	35276	Identifier	vdagent_virtio_port_write_append		35166	0					
ANR	35277	ArgumentList	virtio_port		35166	1					
ANR	35278	Argument	virtio_port		35166	0					
ANR	35279	Identifier	virtio_port		35166	0					
ANR	35280	Argument	( uint8_t * ) & data_type		35166	1					
ANR	35281	CastExpression	( uint8_t * ) & data_type		35166	0					
ANR	35282	CastTarget	uint8_t *		35166	0					
ANR	35283	UnaryOperationExpression	& data_type		35166	1					
ANR	35284	UnaryOperator	&		35166	0					
ANR	35285	Identifier	data_type		35166	1					
ANR	35286	Argument	4		35166	2					
ANR	35287	PrimaryExpression	4		35166	0					
ANR	35288	IfStatement	if ( msg_type == VD_AGENT_CLIPBOARD_GRAB )		35166	6					
ANR	35289	Condition	msg_type == VD_AGENT_CLIPBOARD_GRAB	611:8:21197:21231	35166	0	True				
ANR	35290	EqualityExpression	msg_type == VD_AGENT_CLIPBOARD_GRAB		35166	0		==			
ANR	35291	Identifier	msg_type		35166	0					
ANR	35292	Identifier	VD_AGENT_CLIPBOARD_GRAB		35166	1					
ANR	35293	ExpressionStatement	"virtio_msg_uint32_to_le ( data , data_size , 0 )"	612:8:21242:21285	35166	1	True				
ANR	35294	CallExpression	"virtio_msg_uint32_to_le ( data , data_size , 0 )"		35166	0					
ANR	35295	Callee	virtio_msg_uint32_to_le		35166	0					
ANR	35296	Identifier	virtio_msg_uint32_to_le		35166	0					
ANR	35297	ArgumentList	data		35166	1					
ANR	35298	Argument	data		35166	0					
ANR	35299	Identifier	data		35166	0					
ANR	35300	Argument	data_size		35166	1					
ANR	35301	Identifier	data_size		35166	0					
ANR	35302	Argument	0		35166	2					
ANR	35303	PrimaryExpression	0		35166	0					
ANR	35304	ExpressionStatement	"vdagent_virtio_port_write_append ( virtio_port , data , data_size )"	613:4:21291:21353	35166	7	True				
ANR	35305	CallExpression	"vdagent_virtio_port_write_append ( virtio_port , data , data_size )"		35166	0					
ANR	35306	Callee	vdagent_virtio_port_write_append		35166	0					
ANR	35307	Identifier	vdagent_virtio_port_write_append		35166	0					
ANR	35308	ArgumentList	virtio_port		35166	1					
ANR	35309	Argument	virtio_port		35166	0					
ANR	35310	Identifier	virtio_port		35166	0					
ANR	35311	Argument	data		35166	1					
ANR	35312	Identifier	data		35166	0					
ANR	35313	Argument	data_size		35166	2					
ANR	35314	Identifier	data_size		35166	0					
ANR	35315	ReturnType	static void		35166	1					
ANR	35316	Identifier	virtio_write_clipboard		35166	2					
ANR	35317	ParameterList	"uint8_t selection , uint32_t msg_type , uint32_t data_type , uint8_t * data , uint32_t data_size"		35166	3					
ANR	35318	Parameter	uint8_t selection	585:35:20311:20327	35166	0	True				
ANR	35319	ParameterType	uint8_t		35166	0					
ANR	35320	Identifier	selection		35166	1					
ANR	35321	Parameter	uint32_t msg_type	585:54:20330:20346	35166	1	True				
ANR	35322	ParameterType	uint32_t		35166	0					
ANR	35323	Identifier	msg_type		35166	1					
ANR	35324	Parameter	uint32_t data_type	586:4:20353:20370	35166	2	True				
ANR	35325	ParameterType	uint32_t		35166	0					
ANR	35326	Identifier	data_type		35166	1					
ANR	35327	Parameter	uint8_t * data	586:24:20373:20385	35166	3	True				
ANR	35328	ParameterType	uint8_t *		35166	0					
ANR	35329	Identifier	data		35166	1					
ANR	35330	Parameter	uint32_t data_size	586:39:20388:20405	35166	4	True				
ANR	35331	ParameterType	uint32_t		35166	0					
ANR	35332	Identifier	data_size		35166	1					
ANR	35333	CFGEntryNode	ENTRY		35166		True				
ANR	35334	CFGExitNode	EXIT		35166		True				
ANR	35335	Symbol	data_size		35166						
ANR	35336	Symbol	VDP_CLIENT_PORT		35166						
ANR	35337	Symbol	capabilities		35166						
ANR	35338	Symbol	data		35166						
ANR	35339	Symbol	GUINT32_TO_LE		35166						
ANR	35340	Symbol	& data_type		35166						
ANR	35341	Symbol	selection		35166						
ANR	35342	Symbol	size		35166						
ANR	35343	Symbol	capabilities_size		35166						
ANR	35344	Symbol	virtio_port		35166						
ANR	35345	Symbol	VD_AGENT_CLIPBOARD_GRAB		35166						
ANR	35346	Symbol	data_type		35166						
ANR	35347	Symbol	msg_type		35166						
ANR	35348	Symbol	sel		35166						
ANR	35349	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		35166						
ANR	35350	Symbol	VD_AGENT_HAS_CAPABILITY		35166						
ANR	35351	Function	do_agent_clipboard	617:0:21408:23943							
ANR	35352	FunctionDef	"do_agent_clipboard (struct udscs_connection * conn , struct udscs_message_header * header , uint8_t * data)"		35351	0					
ANR	35353	CompoundStatement		619:0:21529:23943	35351	0					
ANR	35354	IdentifierDeclStatement	uint8_t selection = header -> arg1 ;	620:4:21535:21567	35351	0	True				
ANR	35355	IdentifierDecl	selection = header -> arg1		35351	0					
ANR	35356	IdentifierDeclType	uint8_t		35351	0					
ANR	35357	Identifier	selection		35351	1					
ANR	35358	AssignmentExpression	selection = header -> arg1		35351	2		=			
ANR	35359	Identifier	selection		35351	0					
ANR	35360	PtrMemberAccess	header -> arg1		35351	1					
ANR	35361	Identifier	header		35351	0					
ANR	35362	Identifier	arg1		35351	1					
ANR	35363	IdentifierDeclStatement	"uint32_t msg_type = 0 , data_type = - 1 , size = header -> size ;"	621:4:21573:21631	35351	1	True				
ANR	35364	IdentifierDecl	msg_type = 0		35351	0					
ANR	35365	IdentifierDeclType	uint32_t		35351	0					
ANR	35366	Identifier	msg_type		35351	1					
ANR	35367	AssignmentExpression	msg_type = 0		35351	2		=			
ANR	35368	Identifier	msg_type		35351	0					
ANR	35369	PrimaryExpression	0		35351	1					
ANR	35370	IdentifierDecl	data_type = - 1		35351	1					
ANR	35371	IdentifierDeclType	uint32_t		35351	0					
ANR	35372	Identifier	data_type		35351	1					
ANR	35373	AssignmentExpression	data_type = - 1		35351	2		=			
ANR	35374	Identifier	data_type		35351	0					
ANR	35375	UnaryOperationExpression	- 1		35351	1					
ANR	35376	UnaryOperator	-		35351	0					
ANR	35377	PrimaryExpression	1		35351	1					
ANR	35378	IdentifierDecl	size = header -> size		35351	2					
ANR	35379	IdentifierDeclType	uint32_t		35351	0					
ANR	35380	Identifier	size		35351	1					
ANR	35381	AssignmentExpression	size = header -> size		35351	2		=			
ANR	35382	Identifier	size		35351	0					
ANR	35383	PtrMemberAccess	header -> size		35351	1					
ANR	35384	Identifier	header		35351	0					
ANR	35385	Identifier	size		35351	1					
ANR	35386	IfStatement	"if ( ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND ) )"		35351	2					
ANR	35387	Condition	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"	623:8:21642:21765	35351	0	True				
ANR	35388	UnaryOperationExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"		35351	0					
ANR	35389	UnaryOperator	!		35351	0					
ANR	35390	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"		35351	1					
ANR	35391	Callee	VD_AGENT_HAS_CAPABILITY		35351	0					
ANR	35392	Identifier	VD_AGENT_HAS_CAPABILITY		35351	0					
ANR	35393	ArgumentList	capabilities		35351	1					
ANR	35394	Argument	capabilities		35351	0					
ANR	35395	Identifier	capabilities		35351	0					
ANR	35396	Argument	capabilities_size		35351	1					
ANR	35397	Identifier	capabilities_size		35351	0					
ANR	35398	Argument	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		35351	2					
ANR	35399	Identifier	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		35351	0					
ANR	35400	GotoStatement	goto error ;	625:8:21776:21786	35351	1	True				
ANR	35401	Identifier	error		35351	0					
ANR	35402	IfStatement	if ( conn != active_session_conn )		35351	3					
ANR	35403	Condition	conn != active_session_conn	628:8:21866:21892	35351	0	True				
ANR	35404	EqualityExpression	conn != active_session_conn		35351	0		!=			
ANR	35405	Identifier	conn		35351	0					
ANR	35406	Identifier	active_session_conn		35351	1					
ANR	35407	CompoundStatement		10:37:365:365	35351	1					
ANR	35408	IfStatement	if ( debug )		35351	0					
ANR	35409	Condition	debug	629:12:21909:21913	35351	0	True				
ANR	35410	Identifier	debug		35351	0					
ANR	35411	Statement	syslog	630:12:21928:21933	35351	1	True				
ANR	35412	Statement	(	630:18:21934:21934	35351	1	True				
ANR	35413	Statement	LOG_DEBUG	630:19:21935:21943	35351	2	True				
ANR	35414	Statement	","	630:28:21944:21944	35351	3	True				
ANR	35415	Statement	"""%p clipboard req from agent which is not in """	630:30:21946:21991	35351	4	True				
ANR	35416	Statement	"""the active session?"""	631:30:22023:22043	35351	5	True				
ANR	35417	Statement	","	631:51:22044:22044	35351	6	True				
ANR	35418	Statement	conn	631:53:22046:22049	35351	7	True				
ANR	35419	Statement	)	631:57:22050:22050	35351	8	True				
ANR	35420	ExpressionStatement		631:58:22051:22051	35351	9	True				
ANR	35421	GotoStatement	goto error ;	632:8:22061:22071	35351	10	True				
ANR	35422	Identifier	error		35351	0					
ANR	35423	IfStatement	if ( ! virtio_port )		35351	4					
ANR	35424	Condition	! virtio_port	635:8:22088:22099	35351	0	True				
ANR	35425	UnaryOperationExpression	! virtio_port		35351	0					
ANR	35426	UnaryOperator	!		35351	0					
ANR	35427	Identifier	virtio_port		35351	1					
ANR	35428	CompoundStatement		17:22:572:572	35351	1					
ANR	35429	ExpressionStatement	"syslog ( LOG_ERR , ""Clipboard req from agent but no client connection"" )"	636:8:22112:22180	35351	0	True				
ANR	35430	CallExpression	"syslog ( LOG_ERR , ""Clipboard req from agent but no client connection"" )"		35351	0					
ANR	35431	Callee	syslog		35351	0					
ANR	35432	Identifier	syslog		35351	0					
ANR	35433	ArgumentList	LOG_ERR		35351	1					
ANR	35434	Argument	LOG_ERR		35351	0					
ANR	35435	Identifier	LOG_ERR		35351	0					
ANR	35436	Argument	"""Clipboard req from agent but no client connection"""		35351	1					
ANR	35437	PrimaryExpression	"""Clipboard req from agent but no client connection"""		35351	0					
ANR	35438	GotoStatement	goto error ;	637:8:22190:22200	35351	1	True				
ANR	35439	Identifier	error		35351	0					
ANR	35440	IfStatement	"if ( ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) && selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD )"		35351	5					
ANR	35441	Condition	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) && selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD"	640:8:22217:22407	35351	0	True				
ANR	35442	AndExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) && selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD"		35351	0		&&			
ANR	35443	UnaryOperationExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		35351	0					
ANR	35444	UnaryOperator	!		35351	0					
ANR	35445	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		35351	1					
ANR	35446	Callee	VD_AGENT_HAS_CAPABILITY		35351	0					
ANR	35447	Identifier	VD_AGENT_HAS_CAPABILITY		35351	0					
ANR	35448	ArgumentList	capabilities		35351	1					
ANR	35449	Argument	capabilities		35351	0					
ANR	35450	Identifier	capabilities		35351	0					
ANR	35451	Argument	capabilities_size		35351	1					
ANR	35452	Identifier	capabilities_size		35351	0					
ANR	35453	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		35351	2					
ANR	35454	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		35351	0					
ANR	35455	EqualityExpression	selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		35351	1		!=			
ANR	35456	Identifier	selection		35351	0					
ANR	35457	Identifier	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		35351	1					
ANR	35458	CompoundStatement		24:65:880:880	35351	1					
ANR	35459	GotoStatement	goto error ;	643:8:22420:22430	35351	0	True				
ANR	35460	Identifier	error		35351	0					
ANR	35461	SwitchStatement	switch ( header -> type )		35351	6					
ANR	35462	Condition	header -> type	646:12:22451:22462	35351	0	True				
ANR	35463	PtrMemberAccess	header -> type		35351	0					
ANR	35464	Identifier	header		35351	0					
ANR	35465	Identifier	type		35351	1					
ANR	35466	CompoundStatement		28:26:935:935	35351	1					
ANR	35467	Label	case VDAGENTD_CLIPBOARD_GRAB :	647:4:22471:22499	35351	0	True				
ANR	35468	Identifier	VDAGENTD_CLIPBOARD_GRAB		35351	0					
ANR	35469	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD_GRAB	648:8:22509:22543	35351	1	True				
ANR	35470	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD_GRAB		35351	0		=			
ANR	35471	Identifier	msg_type		35351	0					
ANR	35472	Identifier	VD_AGENT_CLIPBOARD_GRAB		35351	1					
ANR	35473	ExpressionStatement	agent_owns_clipboard [ selection ] = 1	649:8:22553:22588	35351	2	True				
ANR	35474	AssignmentExpression	agent_owns_clipboard [ selection ] = 1		35351	0		=			
ANR	35475	ArrayIndexing	agent_owns_clipboard [ selection ]		35351	0					
ANR	35476	Identifier	agent_owns_clipboard		35351	0					
ANR	35477	Identifier	selection		35351	1					
ANR	35478	PrimaryExpression	1		35351	1					
ANR	35479	BreakStatement	break ;	650:8:22598:22603	35351	3	True				
ANR	35480	Label	case VDAGENTD_CLIPBOARD_REQUEST :	651:4:22609:22640	35351	4	True				
ANR	35481	Identifier	VDAGENTD_CLIPBOARD_REQUEST		35351	0					
ANR	35482	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD_REQUEST	652:8:22650:22687	35351	5	True				
ANR	35483	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD_REQUEST		35351	0		=			
ANR	35484	Identifier	msg_type		35351	0					
ANR	35485	Identifier	VD_AGENT_CLIPBOARD_REQUEST		35351	1					
ANR	35486	ExpressionStatement	data_type = header -> arg2	653:8:22697:22721	35351	6	True				
ANR	35487	AssignmentExpression	data_type = header -> arg2		35351	0		=			
ANR	35488	Identifier	data_type		35351	0					
ANR	35489	PtrMemberAccess	header -> arg2		35351	1					
ANR	35490	Identifier	header		35351	0					
ANR	35491	Identifier	arg2		35351	1					
ANR	35492	ExpressionStatement	size = 0	654:8:22731:22739	35351	7	True				
ANR	35493	AssignmentExpression	size = 0		35351	0		=			
ANR	35494	Identifier	size		35351	0					
ANR	35495	PrimaryExpression	0		35351	1					
ANR	35496	BreakStatement	break ;	655:8:22749:22754	35351	8	True				
ANR	35497	Label	case VDAGENTD_CLIPBOARD_DATA :	656:4:22760:22788	35351	9	True				
ANR	35498	Identifier	VDAGENTD_CLIPBOARD_DATA		35351	0					
ANR	35499	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD	657:8:22798:22827	35351	10	True				
ANR	35500	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD		35351	0		=			
ANR	35501	Identifier	msg_type		35351	0					
ANR	35502	Identifier	VD_AGENT_CLIPBOARD		35351	1					
ANR	35503	ExpressionStatement	data_type = header -> arg2	658:8:22837:22861	35351	11	True				
ANR	35504	AssignmentExpression	data_type = header -> arg2		35351	0		=			
ANR	35505	Identifier	data_type		35351	0					
ANR	35506	PtrMemberAccess	header -> arg2		35351	1					
ANR	35507	Identifier	header		35351	0					
ANR	35508	Identifier	arg2		35351	1					
ANR	35509	IfStatement	if ( max_clipboard != - 1 && size > max_clipboard )		35351	12					
ANR	35510	Condition	max_clipboard != - 1 && size > max_clipboard	659:12:22875:22917	35351	0	True				
ANR	35511	AndExpression	max_clipboard != - 1 && size > max_clipboard		35351	0		&&			
ANR	35512	EqualityExpression	max_clipboard != - 1		35351	0		!=			
ANR	35513	Identifier	max_clipboard		35351	0					
ANR	35514	UnaryOperationExpression	- 1		35351	1					
ANR	35515	UnaryOperator	-		35351	0					
ANR	35516	PrimaryExpression	1		35351	1					
ANR	35517	RelationalExpression	size > max_clipboard		35351	1		>			
ANR	35518	Identifier	size		35351	0					
ANR	35519	Identifier	max_clipboard		35351	1					
ANR	35520	CompoundStatement		41:57:1390:1390	35351	1					
ANR	35521	ExpressionStatement	"syslog ( LOG_WARNING , ""clipboard is too large (%d > %d), discarding"" , size , max_clipboard )"	660:12:22934:23041	35351	0	True				
ANR	35522	CallExpression	"syslog ( LOG_WARNING , ""clipboard is too large (%d > %d), discarding"" , size , max_clipboard )"		35351	0					
ANR	35523	Callee	syslog		35351	0					
ANR	35524	Identifier	syslog		35351	0					
ANR	35525	ArgumentList	LOG_WARNING		35351	1					
ANR	35526	Argument	LOG_WARNING		35351	0					
ANR	35527	Identifier	LOG_WARNING		35351	0					
ANR	35528	Argument	"""clipboard is too large (%d > %d), discarding"""		35351	1					
ANR	35529	PrimaryExpression	"""clipboard is too large (%d > %d), discarding"""		35351	0					
ANR	35530	Argument	size		35351	2					
ANR	35531	Identifier	size		35351	0					
ANR	35532	Argument	max_clipboard		35351	3					
ANR	35533	Identifier	max_clipboard		35351	0					
ANR	35534	ExpressionStatement	"virtio_write_clipboard ( selection , msg_type , data_type , NULL , 0 )"	662:12:23055:23118	35351	1	True				
ANR	35535	CallExpression	"virtio_write_clipboard ( selection , msg_type , data_type , NULL , 0 )"		35351	0					
ANR	35536	Callee	virtio_write_clipboard		35351	0					
ANR	35537	Identifier	virtio_write_clipboard		35351	0					
ANR	35538	ArgumentList	selection		35351	1					
ANR	35539	Argument	selection		35351	0					
ANR	35540	Identifier	selection		35351	0					
ANR	35541	Argument	msg_type		35351	1					
ANR	35542	Identifier	msg_type		35351	0					
ANR	35543	Argument	data_type		35351	2					
ANR	35544	Identifier	data_type		35351	0					
ANR	35545	Argument	NULL		35351	3					
ANR	35546	Identifier	NULL		35351	0					
ANR	35547	Argument	0		35351	4					
ANR	35548	PrimaryExpression	0		35351	0					
ANR	35549	ReturnStatement	return 0 ;	663:12:23132:23140	35351	2	True				
ANR	35550	PrimaryExpression	0		35351	0					
ANR	35551	BreakStatement	break ;	665:8:23160:23165	35351	13	True				
ANR	35552	Label	case VDAGENTD_CLIPBOARD_RELEASE :	666:4:23171:23202	35351	14	True				
ANR	35553	Identifier	VDAGENTD_CLIPBOARD_RELEASE		35351	0					
ANR	35554	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD_RELEASE	667:8:23212:23249	35351	15	True				
ANR	35555	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD_RELEASE		35351	0		=			
ANR	35556	Identifier	msg_type		35351	0					
ANR	35557	Identifier	VD_AGENT_CLIPBOARD_RELEASE		35351	1					
ANR	35558	ExpressionStatement	size = 0	668:8:23259:23267	35351	16	True				
ANR	35559	AssignmentExpression	size = 0		35351	0		=			
ANR	35560	Identifier	size		35351	0					
ANR	35561	PrimaryExpression	0		35351	1					
ANR	35562	ExpressionStatement	agent_owns_clipboard [ selection ] = 0	669:8:23277:23312	35351	17	True				
ANR	35563	AssignmentExpression	agent_owns_clipboard [ selection ] = 0		35351	0		=			
ANR	35564	ArrayIndexing	agent_owns_clipboard [ selection ]		35351	0					
ANR	35565	Identifier	agent_owns_clipboard		35351	0					
ANR	35566	Identifier	selection		35351	1					
ANR	35567	PrimaryExpression	0		35351	1					
ANR	35568	BreakStatement	break ;	670:8:23322:23327	35351	18	True				
ANR	35569	Label	default :	671:4:23333:23340	35351	19	True				
ANR	35570	Identifier	default		35351	0					
ANR	35571	ExpressionStatement	"syslog ( LOG_WARNING , ""unexpected clipboard message type"" )"	672:8:23350:23406	35351	20	True				
ANR	35572	CallExpression	"syslog ( LOG_WARNING , ""unexpected clipboard message type"" )"		35351	0					
ANR	35573	Callee	syslog		35351	0					
ANR	35574	Identifier	syslog		35351	0					
ANR	35575	ArgumentList	LOG_WARNING		35351	1					
ANR	35576	Argument	LOG_WARNING		35351	0					
ANR	35577	Identifier	LOG_WARNING		35351	0					
ANR	35578	Argument	"""unexpected clipboard message type"""		35351	1					
ANR	35579	PrimaryExpression	"""unexpected clipboard message type"""		35351	0					
ANR	35580	GotoStatement	goto error ;	673:8:23416:23426	35351	21	True				
ANR	35581	Identifier	error		35351	0					
ANR	35582	IfStatement	if ( size != header -> size )		35351	7					
ANR	35583	Condition	size != header -> size	676:8:23443:23462	35351	0	True				
ANR	35584	EqualityExpression	size != header -> size		35351	0		!=			
ANR	35585	Identifier	size		35351	0					
ANR	35586	PtrMemberAccess	header -> size		35351	1					
ANR	35587	Identifier	header		35351	0					
ANR	35588	Identifier	size		35351	1					
ANR	35589	CompoundStatement		58:30:1935:1935	35351	1					
ANR	35590	ExpressionStatement	"syslog ( LOG_ERR , ""unexpected extra data in clipboard msg, disconnecting agent"" )"	677:8:23475:23568	35351	0	True				
ANR	35591	CallExpression	"syslog ( LOG_ERR , ""unexpected extra data in clipboard msg, disconnecting agent"" )"		35351	0					
ANR	35592	Callee	syslog		35351	0					
ANR	35593	Identifier	syslog		35351	0					
ANR	35594	ArgumentList	LOG_ERR		35351	1					
ANR	35595	Argument	LOG_ERR		35351	0					
ANR	35596	Identifier	LOG_ERR		35351	0					
ANR	35597	Argument	"""unexpected extra data in clipboard msg, disconnecting agent"""		35351	1					
ANR	35598	PrimaryExpression	"""unexpected extra data in clipboard msg, disconnecting agent"""		35351	0					
ANR	35599	ReturnStatement	return - 1 ;	679:8:23578:23587	35351	1	True				
ANR	35600	UnaryOperationExpression	- 1		35351	0					
ANR	35601	UnaryOperator	-		35351	0					
ANR	35602	PrimaryExpression	1		35351	1					
ANR	35603	ExpressionStatement	"virtio_write_clipboard ( selection , msg_type , data_type , data , header -> size )"	682:4:23600:23674	35351	8	True				
ANR	35604	CallExpression	"virtio_write_clipboard ( selection , msg_type , data_type , data , header -> size )"		35351	0					
ANR	35605	Callee	virtio_write_clipboard		35351	0					
ANR	35606	Identifier	virtio_write_clipboard		35351	0					
ANR	35607	ArgumentList	selection		35351	1					
ANR	35608	Argument	selection		35351	0					
ANR	35609	Identifier	selection		35351	0					
ANR	35610	Argument	msg_type		35351	1					
ANR	35611	Identifier	msg_type		35351	0					
ANR	35612	Argument	data_type		35351	2					
ANR	35613	Identifier	data_type		35351	0					
ANR	35614	Argument	data		35351	3					
ANR	35615	Identifier	data		35351	0					
ANR	35616	Argument	header -> size		35351	4					
ANR	35617	PtrMemberAccess	header -> size		35351	0					
ANR	35618	Identifier	header		35351	0					
ANR	35619	Identifier	size		35351	1					
ANR	35620	ReturnStatement	return 0 ;	684:4:23681:23689	35351	9	True				
ANR	35621	PrimaryExpression	0		35351	0					
ANR	35622	Label	error :	686:0:23692:23697	35351	10	True				
ANR	35623	Identifier	error		35351	0					
ANR	35624	IfStatement	if ( header -> type == VDAGENTD_CLIPBOARD_REQUEST )		35351	11					
ANR	35625	Condition	header -> type == VDAGENTD_CLIPBOARD_REQUEST	687:8:23707:23748	35351	0	True				
ANR	35626	EqualityExpression	header -> type == VDAGENTD_CLIPBOARD_REQUEST		35351	0		==			
ANR	35627	PtrMemberAccess	header -> type		35351	0					
ANR	35628	Identifier	header		35351	0					
ANR	35629	Identifier	type		35351	1					
ANR	35630	Identifier	VDAGENTD_CLIPBOARD_REQUEST		35351	1					
ANR	35631	CompoundStatement		69:52:2221:2221	35351	1					
ANR	35632	ExpressionStatement	"udscs_write ( conn , VDAGENTD_CLIPBOARD_DATA , selection , VD_AGENT_CLIPBOARD_NONE , NULL , 0 )"	689:8:23814:23921	35351	0	True				
ANR	35633	CallExpression	"udscs_write ( conn , VDAGENTD_CLIPBOARD_DATA , selection , VD_AGENT_CLIPBOARD_NONE , NULL , 0 )"		35351	0					
ANR	35634	Callee	udscs_write		35351	0					
ANR	35635	Identifier	udscs_write		35351	0					
ANR	35636	ArgumentList	conn		35351	1					
ANR	35637	Argument	conn		35351	0					
ANR	35638	Identifier	conn		35351	0					
ANR	35639	Argument	VDAGENTD_CLIPBOARD_DATA		35351	1					
ANR	35640	Identifier	VDAGENTD_CLIPBOARD_DATA		35351	0					
ANR	35641	Argument	selection		35351	2					
ANR	35642	Identifier	selection		35351	0					
ANR	35643	Argument	VD_AGENT_CLIPBOARD_NONE		35351	3					
ANR	35644	Identifier	VD_AGENT_CLIPBOARD_NONE		35351	0					
ANR	35645	Argument	NULL		35351	4					
ANR	35646	Identifier	NULL		35351	0					
ANR	35647	Argument	0		35351	5					
ANR	35648	PrimaryExpression	0		35351	0					
ANR	35649	ReturnStatement	return 0 ;	692:4:23933:23941	35351	12	True				
ANR	35650	PrimaryExpression	0		35351	0					
ANR	35651	ReturnType	static int		35351	1					
ANR	35652	Identifier	do_agent_clipboard		35351	2					
ANR	35653	ParameterList	"struct udscs_connection * conn , struct udscs_message_header * header , uint8_t * data"		35351	3					
ANR	35654	Parameter	struct udscs_connection * conn	617:30:21438:21466	35351	0	True				
ANR	35655	ParameterType	struct udscs_connection *		35351	0					
ANR	35656	Identifier	conn		35351	1					
ANR	35657	Parameter	struct udscs_message_header * header	618:8:21477:21511	35351	1	True				
ANR	35658	ParameterType	struct udscs_message_header *		35351	0					
ANR	35659	Identifier	header		35351	1					
ANR	35660	Parameter	uint8_t * data	618:45:21514:21526	35351	2	True				
ANR	35661	ParameterType	uint8_t *		35351	0					
ANR	35662	Identifier	data		35351	1					
ANR	35663	CFGEntryNode	ENTRY		35351		True				
ANR	35664	CFGExitNode	EXIT		35351		True				
ANR	35665	Symbol	conn		35351						
ANR	35666	Symbol	data		35351						
ANR	35667	Symbol	LOG_WARNING		35351						
ANR	35668	Symbol	agent_owns_clipboard		35351						
ANR	35669	Symbol	max_clipboard		35351						
ANR	35670	Symbol	capabilities_size		35351						
ANR	35671	Symbol	active_session_conn		35351						
ANR	35672	Symbol	LOG_ERR		35351						
ANR	35673	Symbol	VD_AGENT_CLIPBOARD_GRAB		35351						
ANR	35674	Symbol	VDAGENTD_CLIPBOARD_REQUEST		35351						
ANR	35675	Symbol	VD_AGENT_CLIPBOARD		35351						
ANR	35676	Symbol	VD_AGENT_CLIPBOARD_REQUEST		35351						
ANR	35677	Symbol	capabilities		35351						
ANR	35678	Symbol	debug		35351						
ANR	35679	Symbol	NULL		35351						
ANR	35680	Symbol	header -> arg2		35351						
ANR	35681	Symbol	header -> arg1		35351						
ANR	35682	Symbol	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		35351						
ANR	35683	Symbol	* header		35351						
ANR	35684	Symbol	selection		35351						
ANR	35685	Symbol	size		35351						
ANR	35686	Symbol	* agent_owns_clipboard		35351						
ANR	35687	Symbol	virtio_port		35351						
ANR	35688	Symbol	VD_AGENT_CLIPBOARD_NONE		35351						
ANR	35689	Symbol	data_type		35351						
ANR	35690	Symbol	VD_AGENT_CLIPBOARD_RELEASE		35351						
ANR	35691	Symbol	VDAGENTD_CLIPBOARD_DATA		35351						
ANR	35692	Symbol	header		35351						
ANR	35693	Symbol	msg_type		35351						
ANR	35694	Symbol	header -> size		35351						
ANR	35695	Symbol	* selection		35351						
ANR	35696	Symbol	header -> type		35351						
ANR	35697	Symbol	VD_AGENT_HAS_CAPABILITY		35351						
ANR	35698	Symbol	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		35351						
ANR	35699	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		35351						
ANR	35700	Function	check_xorg_resolution	702:0:24433:26385							
ANR	35701	FunctionDef	check_xorg_resolution ()		35700	0					
ANR	35702	CompoundStatement		703:0:24473:26385	35700	0					
ANR	35703	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( active_session_conn ) ;	704:4:24479:24551	35700	0	True				
ANR	35704	IdentifierDecl	* agent_data = udscs_get_user_data ( active_session_conn )		35700	0					
ANR	35705	IdentifierDeclType	struct agent_data *		35700	0					
ANR	35706	Identifier	agent_data		35700	1					
ANR	35707	AssignmentExpression	* agent_data = udscs_get_user_data ( active_session_conn )		35700	2		=			
ANR	35708	Identifier	agent_data		35700	0					
ANR	35709	CallExpression	udscs_get_user_data ( active_session_conn )		35700	1					
ANR	35710	Callee	udscs_get_user_data		35700	0					
ANR	35711	Identifier	udscs_get_user_data		35700	0					
ANR	35712	ArgumentList	active_session_conn		35700	1					
ANR	35713	Argument	active_session_conn		35700	0					
ANR	35714	Identifier	active_session_conn		35700	0					
ANR	35715	IfStatement	if ( agent_data && agent_data -> screen_info )		35700	1					
ANR	35716	Condition	agent_data && agent_data -> screen_info	706:8:24562:24598	35700	0	True				
ANR	35717	AndExpression	agent_data && agent_data -> screen_info		35700	0		&&			
ANR	35718	Identifier	agent_data		35700	0					
ANR	35719	PtrMemberAccess	agent_data -> screen_info		35700	1					
ANR	35720	Identifier	agent_data		35700	0					
ANR	35721	Identifier	screen_info		35700	1					
ANR	35722	CompoundStatement		4:47:127:127	35700	1					
ANR	35723	IfStatement	if ( ! uinput )		35700	0					
ANR	35724	Condition	! uinput	707:12:24615:24621	35700	0	True				
ANR	35725	UnaryOperationExpression	! uinput		35700	0					
ANR	35726	UnaryOperator	!		35700	0					
ANR	35727	Identifier	uinput		35700	1					
ANR	35728	ExpressionStatement	"uinput = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"	708:12:24636:25060	35700	1	True				
ANR	35729	AssignmentExpression	"uinput = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		35700	0		=			
ANR	35730	Identifier	uinput		35700	0					
ANR	35731	CallExpression	"vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		35700	1					
ANR	35732	Callee	vdagentd_uinput_create		35700	0					
ANR	35733	Identifier	vdagentd_uinput_create		35700	0					
ANR	35734	ArgumentList	uinput_device		35700	1					
ANR	35735	Argument	uinput_device		35700	0					
ANR	35736	Identifier	uinput_device		35700	0					
ANR	35737	Argument	agent_data -> width		35700	1					
ANR	35738	PtrMemberAccess	agent_data -> width		35700	0					
ANR	35739	Identifier	agent_data		35700	0					
ANR	35740	Identifier	width		35700	1					
ANR	35741	Argument	agent_data -> height		35700	2					
ANR	35742	PtrMemberAccess	agent_data -> height		35700	0					
ANR	35743	Identifier	agent_data		35700	0					
ANR	35744	Identifier	height		35700	1					
ANR	35745	Argument	agent_data -> screen_info		35700	3					
ANR	35746	PtrMemberAccess	agent_data -> screen_info		35700	0					
ANR	35747	Identifier	agent_data		35700	0					
ANR	35748	Identifier	screen_info		35700	1					
ANR	35749	Argument	agent_data -> screen_count		35700	4					
ANR	35750	PtrMemberAccess	agent_data -> screen_count		35700	0					
ANR	35751	Identifier	agent_data		35700	0					
ANR	35752	Identifier	screen_count		35700	1					
ANR	35753	Argument	debug > 1		35700	5					
ANR	35754	RelationalExpression	debug > 1		35700	0		>			
ANR	35755	Identifier	debug		35700	0					
ANR	35756	PrimaryExpression	1		35700	1					
ANR	35757	Argument	uinput_fake		35700	6					
ANR	35758	Identifier	uinput_fake		35700	0					
ANR	35759	ElseStatement	else		35700	0					
ANR	35760	ExpressionStatement	"vdagentd_uinput_update_size ( & uinput , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count )"	716:12:25087:25373	35700	0	True				
ANR	35761	CallExpression	"vdagentd_uinput_update_size ( & uinput , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count )"		35700	0					
ANR	35762	Callee	vdagentd_uinput_update_size		35700	0					
ANR	35763	Identifier	vdagentd_uinput_update_size		35700	0					
ANR	35764	ArgumentList	& uinput		35700	1					
ANR	35765	Argument	& uinput		35700	0					
ANR	35766	UnaryOperationExpression	& uinput		35700	0					
ANR	35767	UnaryOperator	&		35700	0					
ANR	35768	Identifier	uinput		35700	1					
ANR	35769	Argument	agent_data -> width		35700	1					
ANR	35770	PtrMemberAccess	agent_data -> width		35700	0					
ANR	35771	Identifier	agent_data		35700	0					
ANR	35772	Identifier	width		35700	1					
ANR	35773	Argument	agent_data -> height		35700	2					
ANR	35774	PtrMemberAccess	agent_data -> height		35700	0					
ANR	35775	Identifier	agent_data		35700	0					
ANR	35776	Identifier	height		35700	1					
ANR	35777	Argument	agent_data -> screen_info		35700	3					
ANR	35778	PtrMemberAccess	agent_data -> screen_info		35700	0					
ANR	35779	Identifier	agent_data		35700	0					
ANR	35780	Identifier	screen_info		35700	1					
ANR	35781	Argument	agent_data -> screen_count		35700	4					
ANR	35782	PtrMemberAccess	agent_data -> screen_count		35700	0					
ANR	35783	Identifier	agent_data		35700	0					
ANR	35784	Identifier	screen_count		35700	1					
ANR	35785	IfStatement	if ( ! uinput )		35700	1					
ANR	35786	Condition	! uinput	721:12:25387:25393	35700	0	True				
ANR	35787	UnaryOperationExpression	! uinput		35700	0					
ANR	35788	UnaryOperator	!		35700	0					
ANR	35789	Identifier	uinput		35700	1					
ANR	35790	CompoundStatement		19:21:922:922	35700	1					
ANR	35791	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"	722:12:25410:25448	35700	0	True				
ANR	35792	CallExpression	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"		35700	0					
ANR	35793	Callee	syslog		35700	0					
ANR	35794	Identifier	syslog		35700	0					
ANR	35795	ArgumentList	LOG_CRIT		35700	1					
ANR	35796	Argument	LOG_CRIT		35700	0					
ANR	35797	Identifier	LOG_CRIT		35700	0					
ANR	35798	Argument	"""Fatal uinput error"""		35700	1					
ANR	35799	PrimaryExpression	"""Fatal uinput error"""		35700	0					
ANR	35800	ExpressionStatement	retval = 1	723:12:25462:25472	35700	1	True				
ANR	35801	AssignmentExpression	retval = 1		35700	0		=			
ANR	35802	Identifier	retval		35700	0					
ANR	35803	PrimaryExpression	1		35700	1					
ANR	35804	ExpressionStatement	quit = 1	724:12:25486:25494	35700	2	True				
ANR	35805	AssignmentExpression	quit = 1		35700	0		=			
ANR	35806	Identifier	quit		35700	0					
ANR	35807	PrimaryExpression	1		35700	1					
ANR	35808	ReturnStatement	return ;	725:12:25508:25514	35700	3	True				
ANR	35809	IfStatement	if ( ! virtio_port )		35700	2					
ANR	35810	Condition	! virtio_port	728:12:25539:25550	35700	0	True				
ANR	35811	UnaryOperationExpression	! virtio_port		35700	0					
ANR	35812	UnaryOperator	!		35700	0					
ANR	35813	Identifier	virtio_port		35700	1					
ANR	35814	CompoundStatement		26:26:1079:1079	35700	1					
ANR	35815	ExpressionStatement	"syslog ( LOG_INFO , ""opening vdagent virtio channel"" )"	729:12:25567:25617	35700	0	True				
ANR	35816	CallExpression	"syslog ( LOG_INFO , ""opening vdagent virtio channel"" )"		35700	0					
ANR	35817	Callee	syslog		35700	0					
ANR	35818	Identifier	syslog		35700	0					
ANR	35819	ArgumentList	LOG_INFO		35700	1					
ANR	35820	Argument	LOG_INFO		35700	0					
ANR	35821	Identifier	LOG_INFO		35700	0					
ANR	35822	Argument	"""opening vdagent virtio channel"""		35700	1					
ANR	35823	PrimaryExpression	"""opening vdagent virtio channel"""		35700	0					
ANR	35824	ExpressionStatement	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"	730:12:25631:25819	35700	1	True				
ANR	35825	AssignmentExpression	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		35700	0		=			
ANR	35826	Identifier	virtio_port		35700	0					
ANR	35827	CallExpression	"vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		35700	1					
ANR	35828	Callee	vdagent_virtio_port_create		35700	0					
ANR	35829	Identifier	vdagent_virtio_port_create		35700	0					
ANR	35830	ArgumentList	portdev		35700	1					
ANR	35831	Argument	portdev		35700	0					
ANR	35832	Identifier	portdev		35700	0					
ANR	35833	Argument	virtio_port_read_complete		35700	1					
ANR	35834	Identifier	virtio_port_read_complete		35700	0					
ANR	35835	Argument	NULL		35700	2					
ANR	35836	Identifier	NULL		35700	0					
ANR	35837	IfStatement	if ( ! virtio_port )		35700	2					
ANR	35838	Condition	! virtio_port	733:16:25837:25848	35700	0	True				
ANR	35839	UnaryOperationExpression	! virtio_port		35700	0					
ANR	35840	UnaryOperator	!		35700	0					
ANR	35841	Identifier	virtio_port		35700	1					
ANR	35842	CompoundStatement		31:30:1377:1377	35700	1					
ANR	35843	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"	734:16:25869:25931	35700	0	True				
ANR	35844	CallExpression	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"		35700	0					
ANR	35845	Callee	syslog		35700	0					
ANR	35846	Identifier	syslog		35700	0					
ANR	35847	ArgumentList	LOG_CRIT		35700	1					
ANR	35848	Argument	LOG_CRIT		35700	0					
ANR	35849	Identifier	LOG_CRIT		35700	0					
ANR	35850	Argument	"""Fatal error opening vdagent virtio channel"""		35700	1					
ANR	35851	PrimaryExpression	"""Fatal error opening vdagent virtio channel"""		35700	0					
ANR	35852	ExpressionStatement	retval = 1	735:16:25949:25959	35700	1	True				
ANR	35853	AssignmentExpression	retval = 1		35700	0		=			
ANR	35854	Identifier	retval		35700	0					
ANR	35855	PrimaryExpression	1		35700	1					
ANR	35856	ExpressionStatement	quit = 1	736:16:25977:25985	35700	2	True				
ANR	35857	AssignmentExpression	quit = 1		35700	0		=			
ANR	35858	Identifier	quit		35700	0					
ANR	35859	PrimaryExpression	1		35700	1					
ANR	35860	ReturnStatement	return ;	737:16:26003:26009	35700	3	True				
ANR	35861	ExpressionStatement	"send_capabilities ( virtio_port , 1 )"	739:12:26037:26070	35700	3	True				
ANR	35862	CallExpression	"send_capabilities ( virtio_port , 1 )"		35700	0					
ANR	35863	Callee	send_capabilities		35700	0					
ANR	35864	Identifier	send_capabilities		35700	0					
ANR	35865	ArgumentList	virtio_port		35700	1					
ANR	35866	Argument	virtio_port		35700	0					
ANR	35867	Identifier	virtio_port		35700	0					
ANR	35868	Argument	1		35700	1					
ANR	35869	PrimaryExpression	1		35700	0					
ANR	35870	ElseStatement	else		35700	0					
ANR	35871	CompoundStatement		39:11:1619:1619	35700	0					
ANR	35872	ExpressionStatement	vdagentd_uinput_destroy ( & uinput )	743:8:26130:26162	35700	0	True				
ANR	35873	CallExpression	vdagentd_uinput_destroy ( & uinput )		35700	0					
ANR	35874	Callee	vdagentd_uinput_destroy		35700	0					
ANR	35875	Identifier	vdagentd_uinput_destroy		35700	0					
ANR	35876	ArgumentList	& uinput		35700	1					
ANR	35877	Argument	& uinput		35700	0					
ANR	35878	UnaryOperationExpression	& uinput		35700	0					
ANR	35879	UnaryOperator	&		35700	0					
ANR	35880	Identifier	uinput		35700	1					
ANR	35881	IfStatement	if ( virtio_port )		35700	1					
ANR	35882	Condition	virtio_port	745:12:26183:26193	35700	0	True				
ANR	35883	Identifier	virtio_port		35700	0					
ANR	35884	CompoundStatement		43:25:1722:1722	35700	1					
ANR	35885	ExpressionStatement	vdagent_virtio_port_flush ( & virtio_port )	746:12:26210:26249	35700	0	True				
ANR	35886	CallExpression	vdagent_virtio_port_flush ( & virtio_port )		35700	0					
ANR	35887	Callee	vdagent_virtio_port_flush		35700	0					
ANR	35888	Identifier	vdagent_virtio_port_flush		35700	0					
ANR	35889	ArgumentList	& virtio_port		35700	1					
ANR	35890	Argument	& virtio_port		35700	0					
ANR	35891	UnaryOperationExpression	& virtio_port		35700	0					
ANR	35892	UnaryOperator	&		35700	0					
ANR	35893	Identifier	virtio_port		35700	1					
ANR	35894	ExpressionStatement	vdagent_virtio_port_destroy ( & virtio_port )	747:12:26263:26304	35700	1	True				
ANR	35895	CallExpression	vdagent_virtio_port_destroy ( & virtio_port )		35700	0					
ANR	35896	Callee	vdagent_virtio_port_destroy		35700	0					
ANR	35897	Identifier	vdagent_virtio_port_destroy		35700	0					
ANR	35898	ArgumentList	& virtio_port		35700	1					
ANR	35899	Argument	& virtio_port		35700	0					
ANR	35900	UnaryOperationExpression	& virtio_port		35700	0					
ANR	35901	UnaryOperator	&		35700	0					
ANR	35902	Identifier	virtio_port		35700	1					
ANR	35903	ExpressionStatement	"syslog ( LOG_INFO , ""closed vdagent virtio channel"" )"	748:12:26318:26367	35700	2	True				
ANR	35904	CallExpression	"syslog ( LOG_INFO , ""closed vdagent virtio channel"" )"		35700	0					
ANR	35905	Callee	syslog		35700	0					
ANR	35906	Identifier	syslog		35700	0					
ANR	35907	ArgumentList	LOG_INFO		35700	1					
ANR	35908	Argument	LOG_INFO		35700	0					
ANR	35909	Identifier	LOG_INFO		35700	0					
ANR	35910	Argument	"""closed vdagent virtio channel"""		35700	1					
ANR	35911	PrimaryExpression	"""closed vdagent virtio channel"""		35700	0					
ANR	35912	ReturnType	static void		35700	1					
ANR	35913	Identifier	check_xorg_resolution		35700	2					
ANR	35914	ParameterList			35700	3					
ANR	35915	CFGEntryNode	ENTRY		35700		True				
ANR	35916	CFGExitNode	EXIT		35700		True				
ANR	35917	Symbol	vdagentd_uinput_create		35700						
ANR	35918	Symbol	vdagent_virtio_port_create		35700						
ANR	35919	Symbol	agent_data -> screen_count		35700						
ANR	35920	Symbol	debug		35700						
ANR	35921	Symbol	LOG_INFO		35700						
ANR	35922	Symbol	NULL		35700						
ANR	35923	Symbol	agent_data -> screen_info		35700						
ANR	35924	Symbol	agent_data -> height		35700						
ANR	35925	Symbol	* agent_data		35700						
ANR	35926	Symbol	agent_data -> width		35700						
ANR	35927	Symbol	retval		35700						
ANR	35928	Symbol	uinput_device		35700						
ANR	35929	Symbol	& virtio_port		35700						
ANR	35930	Symbol	active_session_conn		35700						
ANR	35931	Symbol	portdev		35700						
ANR	35932	Symbol	virtio_port		35700						
ANR	35933	Symbol	uinput		35700						
ANR	35934	Symbol	agent_data		35700						
ANR	35935	Symbol	uinput_fake		35700						
ANR	35936	Symbol	& uinput		35700						
ANR	35937	Symbol	quit		35700						
ANR	35938	Symbol	virtio_port_read_complete		35700						
ANR	35939	Symbol	udscs_get_user_data		35700						
ANR	35940	Symbol	LOG_CRIT		35700						
ANR	35941	Function	connection_matches_active_session	753:0:26388:26874							
ANR	35942	FunctionDef	"connection_matches_active_session (struct udscs_connection * * connp , void * priv)"		35941	0					
ANR	35943	CompoundStatement		755:0:26482:26874	35941	0					
ANR	35944	IdentifierDeclStatement	struct udscs_connection * * conn_ret = ( struct udscs_connection * * ) priv ;	756:4:26488:26557	35941	0	True				
ANR	35945	IdentifierDecl	* * conn_ret = ( struct udscs_connection * * ) priv		35941	0					
ANR	35946	IdentifierDeclType	struct udscs_connection * *		35941	0					
ANR	35947	Identifier	conn_ret		35941	1					
ANR	35948	AssignmentExpression	* * conn_ret = ( struct udscs_connection * * ) priv		35941	2		=			
ANR	35949	Identifier	conn_ret		35941	0					
ANR	35950	CastExpression	( struct udscs_connection * * ) priv		35941	1					
ANR	35951	CastTarget	struct udscs_connection * *		35941	0					
ANR	35952	Identifier	priv		35941	1					
ANR	35953	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( * connp ) ;	757:4:26563:26622	35941	1	True				
ANR	35954	IdentifierDecl	* agent_data = udscs_get_user_data ( * connp )		35941	0					
ANR	35955	IdentifierDeclType	struct agent_data *		35941	0					
ANR	35956	Identifier	agent_data		35941	1					
ANR	35957	AssignmentExpression	* agent_data = udscs_get_user_data ( * connp )		35941	2		=			
ANR	35958	Identifier	agent_data		35941	0					
ANR	35959	CallExpression	udscs_get_user_data ( * connp )		35941	1					
ANR	35960	Callee	udscs_get_user_data		35941	0					
ANR	35961	Identifier	udscs_get_user_data		35941	0					
ANR	35962	ArgumentList	* connp		35941	1					
ANR	35963	Argument	* connp		35941	0					
ANR	35964	UnaryOperationExpression	* connp		35941	0					
ANR	35965	UnaryOperator	*		35941	0					
ANR	35966	Identifier	connp		35941	1					
ANR	35967	IfStatement	if ( ! agent_data -> session || ! active_session )		35941	2					
ANR	35968	Condition	! agent_data -> session || ! active_session	760:8:26705:26743	35941	0	True				
ANR	35969	OrExpression	! agent_data -> session || ! active_session		35941	0		||			
ANR	35970	UnaryOperationExpression	! agent_data -> session		35941	0					
ANR	35971	UnaryOperator	!		35941	0					
ANR	35972	PtrMemberAccess	agent_data -> session		35941	1					
ANR	35973	Identifier	agent_data		35941	0					
ANR	35974	Identifier	session		35941	1					
ANR	35975	UnaryOperationExpression	! active_session		35941	1					
ANR	35976	UnaryOperator	!		35941	0					
ANR	35977	Identifier	active_session		35941	1					
ANR	35978	ReturnStatement	return 0 ;	761:8:26754:26762	35941	1	True				
ANR	35979	PrimaryExpression	0		35941	0					
ANR	35980	IfStatement	"if ( strcmp ( agent_data -> session , active_session ) )"		35941	3					
ANR	35981	Condition	"strcmp ( agent_data -> session , active_session )"	762:8:26772:26814	35941	0	True				
ANR	35982	CallExpression	"strcmp ( agent_data -> session , active_session )"		35941	0					
ANR	35983	Callee	strcmp		35941	0					
ANR	35984	Identifier	strcmp		35941	0					
ANR	35985	ArgumentList	agent_data -> session		35941	1					
ANR	35986	Argument	agent_data -> session		35941	0					
ANR	35987	PtrMemberAccess	agent_data -> session		35941	0					
ANR	35988	Identifier	agent_data		35941	0					
ANR	35989	Identifier	session		35941	1					
ANR	35990	Argument	active_session		35941	1					
ANR	35991	Identifier	active_session		35941	0					
ANR	35992	ReturnStatement	return 0 ;	763:8:26825:26833	35941	1	True				
ANR	35993	PrimaryExpression	0		35941	0					
ANR	35994	ExpressionStatement	* conn_ret = * connp	765:4:26840:26858	35941	4	True				
ANR	35995	AssignmentExpression	* conn_ret = * connp		35941	0		=			
ANR	35996	UnaryOperationExpression	* conn_ret		35941	0					
ANR	35997	UnaryOperator	*		35941	0					
ANR	35998	Identifier	conn_ret		35941	1					
ANR	35999	UnaryOperationExpression	* connp		35941	1					
ANR	36000	UnaryOperator	*		35941	0					
ANR	36001	Identifier	connp		35941	1					
ANR	36002	ReturnStatement	return 1 ;	766:4:26864:26872	35941	5	True				
ANR	36003	PrimaryExpression	1		35941	0					
ANR	36004	ReturnType	static int		35941	1					
ANR	36005	Identifier	connection_matches_active_session		35941	2					
ANR	36006	ParameterList	"struct udscs_connection * * connp , void * priv"		35941	3					
ANR	36007	Parameter	struct udscs_connection * * connp	753:45:26433:26463	35941	0	True				
ANR	36008	ParameterType	struct udscs_connection * *		35941	0					
ANR	36009	Identifier	connp		35941	1					
ANR	36010	Parameter	void * priv	754:4:26470:26479	35941	1	True				
ANR	36011	ParameterType	void *		35941	0					
ANR	36012	Identifier	priv		35941	1					
ANR	36013	CFGEntryNode	ENTRY		35941		True				
ANR	36014	CFGExitNode	EXIT		35941		True				
ANR	36015	Symbol	strcmp		35941						
ANR	36016	Symbol	connp		35941						
ANR	36017	Symbol	conn_ret		35941						
ANR	36018	Symbol	* connp		35941						
ANR	36019	Symbol	active_session		35941						
ANR	36020	Symbol	* conn_ret		35941						
ANR	36021	Symbol	agent_data		35941						
ANR	36022	Symbol	agent_data -> session		35941						
ANR	36023	Symbol	priv		35941						
ANR	36024	Symbol	udscs_get_user_data		35941						
ANR	36025	Symbol	* agent_data		35941						
ANR	36026	Function	release_clipboards	769:0:26877:27265							
ANR	36027	FunctionDef	release_clipboards ()		36026	0					
ANR	36028	CompoundStatement		770:0:26914:27265	36026	0					
ANR	36029	IdentifierDeclStatement	uint8_t sel ;	771:4:26920:26931	36026	0	True				
ANR	36030	IdentifierDecl	sel		36026	0					
ANR	36031	IdentifierDeclType	uint8_t		36026	0					
ANR	36032	Identifier	sel		36026	1					
ANR	36033	ForStatement	for ( sel = 0 ; sel < VD_AGENT_CLIPBOARD_SELECTION_SECONDARY ; ++ sel )		36026	1					
ANR	36034	ForInit	sel = 0 ;	773:9:26943:26950	36026	0	True				
ANR	36035	AssignmentExpression	sel = 0		36026	0		=			
ANR	36036	Identifier	sel		36026	0					
ANR	36037	PrimaryExpression	0		36026	1					
ANR	36038	Condition	sel < VD_AGENT_CLIPBOARD_SELECTION_SECONDARY	773:18:26952:26995	36026	1	True				
ANR	36039	RelationalExpression	sel < VD_AGENT_CLIPBOARD_SELECTION_SECONDARY		36026	0		<			
ANR	36040	Identifier	sel		36026	0					
ANR	36041	Identifier	VD_AGENT_CLIPBOARD_SELECTION_SECONDARY		36026	1					
ANR	36042	UnaryExpression	++ sel	773:64:26998:27002	36026	2	True				
ANR	36043	IncDec	++		36026	0					
ANR	36044	Identifier	sel		36026	1					
ANR	36045	CompoundStatement		4:71:90:90	36026	3					
ANR	36046	IfStatement	if ( agent_owns_clipboard [ sel ] && virtio_port )		36026	0					
ANR	36047	Condition	agent_owns_clipboard [ sel ] && virtio_port	774:12:27019:27058	36026	0	True				
ANR	36048	AndExpression	agent_owns_clipboard [ sel ] && virtio_port		36026	0		&&			
ANR	36049	ArrayIndexing	agent_owns_clipboard [ sel ]		36026	0					
ANR	36050	Identifier	agent_owns_clipboard		36026	0					
ANR	36051	Identifier	sel		36026	1					
ANR	36052	Identifier	virtio_port		36026	1					
ANR	36053	CompoundStatement		5:54:146:146	36026	1					
ANR	36054	ExpressionStatement	"vdagent_virtio_port_write ( virtio_port , VDP_CLIENT_PORT , VD_AGENT_CLIPBOARD_RELEASE , 0 , & sel , 1 )"	775:12:27075:27208	36026	0	True				
ANR	36055	CallExpression	"vdagent_virtio_port_write ( virtio_port , VDP_CLIENT_PORT , VD_AGENT_CLIPBOARD_RELEASE , 0 , & sel , 1 )"		36026	0					
ANR	36056	Callee	vdagent_virtio_port_write		36026	0					
ANR	36057	Identifier	vdagent_virtio_port_write		36026	0					
ANR	36058	ArgumentList	virtio_port		36026	1					
ANR	36059	Argument	virtio_port		36026	0					
ANR	36060	Identifier	virtio_port		36026	0					
ANR	36061	Argument	VDP_CLIENT_PORT		36026	1					
ANR	36062	Identifier	VDP_CLIENT_PORT		36026	0					
ANR	36063	Argument	VD_AGENT_CLIPBOARD_RELEASE		36026	2					
ANR	36064	Identifier	VD_AGENT_CLIPBOARD_RELEASE		36026	0					
ANR	36065	Argument	0		36026	3					
ANR	36066	PrimaryExpression	0		36026	0					
ANR	36067	Argument	& sel		36026	4					
ANR	36068	UnaryOperationExpression	& sel		36026	0					
ANR	36069	UnaryOperator	&		36026	0					
ANR	36070	Identifier	sel		36026	1					
ANR	36071	Argument	1		36026	5					
ANR	36072	PrimaryExpression	1		36026	0					
ANR	36073	ExpressionStatement	agent_owns_clipboard [ sel ] = 0	778:8:27228:27257	36026	1	True				
ANR	36074	AssignmentExpression	agent_owns_clipboard [ sel ] = 0		36026	0		=			
ANR	36075	ArrayIndexing	agent_owns_clipboard [ sel ]		36026	0					
ANR	36076	Identifier	agent_owns_clipboard		36026	0					
ANR	36077	Identifier	sel		36026	1					
ANR	36078	PrimaryExpression	0		36026	1					
ANR	36079	ReturnType	static void		36026	1					
ANR	36080	Identifier	release_clipboards		36026	2					
ANR	36081	ParameterList			36026	3					
ANR	36082	CFGEntryNode	ENTRY		36026		True				
ANR	36083	CFGExitNode	EXIT		36026		True				
ANR	36084	Symbol	VDP_CLIENT_PORT		36026						
ANR	36085	Symbol	* sel		36026						
ANR	36086	Symbol	* agent_owns_clipboard		36026						
ANR	36087	Symbol	VD_AGENT_CLIPBOARD_SELECTION_SECONDARY		36026						
ANR	36088	Symbol	virtio_port		36026						
ANR	36089	Symbol	& sel		36026						
ANR	36090	Symbol	VD_AGENT_CLIPBOARD_RELEASE		36026						
ANR	36091	Symbol	sel		36026						
ANR	36092	Symbol	agent_owns_clipboard		36026						
ANR	36093	Function	update_active_session_connection	782:0:27268:28882							
ANR	36094	FunctionDef	update_active_session_connection (struct udscs_connection * new_conn)		36093	0					
ANR	36095	CompoundStatement		783:0:27348:28882	36093	0					
ANR	36096	IfStatement	if ( session_info )		36093	0					
ANR	36097	Condition	session_info	784:8:27358:27369	36093	0	True				
ANR	36098	Identifier	session_info		36093	0					
ANR	36099	CompoundStatement		2:22:23:23	36093	1					
ANR	36100	ExpressionStatement	new_conn = NULL	785:8:27382:27397	36093	0	True				
ANR	36101	AssignmentExpression	new_conn = NULL		36093	0		=			
ANR	36102	Identifier	new_conn		36093	0					
ANR	36103	Identifier	NULL		36093	1					
ANR	36104	IfStatement	if ( ! active_session )		36093	1					
ANR	36105	Condition	! active_session	786:12:27411:27425	36093	0	True				
ANR	36106	UnaryOperationExpression	! active_session		36093	0					
ANR	36107	UnaryOperator	!		36093	0					
ANR	36108	Identifier	active_session		36093	1					
ANR	36109	ExpressionStatement	active_session = session_info_get_active_session ( session_info )	787:12:27440:27502	36093	1	True				
ANR	36110	AssignmentExpression	active_session = session_info_get_active_session ( session_info )		36093	0		=			
ANR	36111	Identifier	active_session		36093	0					
ANR	36112	CallExpression	session_info_get_active_session ( session_info )		36093	1					
ANR	36113	Callee	session_info_get_active_session		36093	0					
ANR	36114	Identifier	session_info_get_active_session		36093	0					
ANR	36115	ArgumentList	session_info		36093	1					
ANR	36116	Argument	session_info		36093	0					
ANR	36117	Identifier	session_info		36093	0					
ANR	36118	ExpressionStatement	"session_count = udscs_server_for_all_clients ( server , connection_matches_active_session , ( void * ) & new_conn )"	788:8:27512:27699	36093	2	True				
ANR	36119	AssignmentExpression	"session_count = udscs_server_for_all_clients ( server , connection_matches_active_session , ( void * ) & new_conn )"		36093	0		=			
ANR	36120	Identifier	session_count		36093	0					
ANR	36121	CallExpression	"udscs_server_for_all_clients ( server , connection_matches_active_session , ( void * ) & new_conn )"		36093	1					
ANR	36122	Callee	udscs_server_for_all_clients		36093	0					
ANR	36123	Identifier	udscs_server_for_all_clients		36093	0					
ANR	36124	ArgumentList	server		36093	1					
ANR	36125	Argument	server		36093	0					
ANR	36126	Identifier	server		36093	0					
ANR	36127	Argument	connection_matches_active_session		36093	1					
ANR	36128	Identifier	connection_matches_active_session		36093	0					
ANR	36129	Argument	( void * ) & new_conn		36093	2					
ANR	36130	CastExpression	( void * ) & new_conn		36093	0					
ANR	36131	CastTarget	void *		36093	0					
ANR	36132	UnaryOperationExpression	& new_conn		36093	1					
ANR	36133	UnaryOperator	&		36093	0					
ANR	36134	Identifier	new_conn		36093	1					
ANR	36135	ElseStatement	else		36093	0					
ANR	36136	CompoundStatement		9:11:363:363	36093	0					
ANR	36137	IfStatement	if ( new_conn )		36093	0					
ANR	36138	Condition	new_conn	792:12:27726:27733	36093	0	True				
ANR	36139	Identifier	new_conn		36093	0					
ANR	36140	ExpressionStatement	session_count ++	793:12:27748:27763	36093	1	True				
ANR	36141	PostIncDecOperationExpression	session_count ++		36093	0					
ANR	36142	Identifier	session_count		36093	0					
ANR	36143	IncDec	++		36093	1					
ANR	36144	ElseStatement	else		36093	0					
ANR	36145	ExpressionStatement	session_count --	795:12:27790:27805	36093	0	True				
ANR	36146	PostIncDecOperationExpression	session_count --		36093	0					
ANR	36147	Identifier	session_count		36093	0					
ANR	36148	IncDec	--		36093	1					
ANR	36149	IfStatement	if ( new_conn && session_count != 1 )		36093	1					
ANR	36150	Condition	new_conn && session_count != 1	798:8:27822:27851	36093	0	True				
ANR	36151	AndExpression	new_conn && session_count != 1		36093	0		&&			
ANR	36152	Identifier	new_conn		36093	0					
ANR	36153	EqualityExpression	session_count != 1		36093	1		!=			
ANR	36154	Identifier	session_count		36093	0					
ANR	36155	PrimaryExpression	1		36093	1					
ANR	36156	CompoundStatement		16:40:505:505	36093	1					
ANR	36157	Statement	syslog	799:8:27864:27869	36093	0	True				
ANR	36158	Statement	(	799:14:27870:27870	36093	1	True				
ANR	36159	Statement	LOG_ERR	799:15:27871:27877	36093	2	True				
ANR	36160	Statement	","	799:22:27878:27878	36093	3	True				
ANR	36161	Statement	"""multiple agents in one session, """	799:24:27880:27913	36093	4	True				
ANR	36162	Statement	"""disabling agent to avoid potential information leak"""	800:15:27930:27982	36093	5	True				
ANR	36163	Statement	)	800:68:27983:27983	36093	6	True				
ANR	36164	ExpressionStatement		800:69:27984:27984	36093	7	True				
ANR	36165	ExpressionStatement	new_conn = NULL	801:8:27994:28009	36093	8	True				
ANR	36166	AssignmentExpression	new_conn = NULL		36093	0		=			
ANR	36167	Identifier	new_conn		36093	0					
ANR	36168	Identifier	NULL		36093	1					
ANR	36169	IfStatement	if ( new_conn == active_session_conn )		36093	2					
ANR	36170	Condition	new_conn == active_session_conn	804:8:28026:28056	36093	0	True				
ANR	36171	EqualityExpression	new_conn == active_session_conn		36093	0		==			
ANR	36172	Identifier	new_conn		36093	0					
ANR	36173	Identifier	active_session_conn		36093	1					
ANR	36174	ReturnStatement	return ;	805:8:28067:28073	36093	1	True				
ANR	36175	ExpressionStatement	active_session_conn = new_conn	807:4:28080:28110	36093	3	True				
ANR	36176	AssignmentExpression	active_session_conn = new_conn		36093	0		=			
ANR	36177	Identifier	active_session_conn		36093	0					
ANR	36178	Identifier	new_conn		36093	1					
ANR	36179	IfStatement	if ( debug )		36093	4					
ANR	36180	Condition	debug	808:8:28120:28124	36093	0	True				
ANR	36181	Identifier	debug		36093	0					
ANR	36182	ExpressionStatement	"syslog ( LOG_DEBUG , ""%p is now the active session"" , new_conn )"	809:8:28135:28194	36093	1	True				
ANR	36183	CallExpression	"syslog ( LOG_DEBUG , ""%p is now the active session"" , new_conn )"		36093	0					
ANR	36184	Callee	syslog		36093	0					
ANR	36185	Identifier	syslog		36093	0					
ANR	36186	ArgumentList	LOG_DEBUG		36093	1					
ANR	36187	Argument	LOG_DEBUG		36093	0					
ANR	36188	Identifier	LOG_DEBUG		36093	0					
ANR	36189	Argument	"""%p is now the active session"""		36093	1					
ANR	36190	PrimaryExpression	"""%p is now the active session"""		36093	0					
ANR	36191	Argument	new_conn		36093	2					
ANR	36192	Identifier	new_conn		36093	0					
ANR	36193	IfStatement	if ( active_session_conn && session_info != NULL && ! session_info_is_user ( session_info ) )		36093	5					
ANR	36194	Condition	active_session_conn && session_info != NULL && ! session_info_is_user ( session_info )	811:8:28205:28302	36093	0	True				
ANR	36195	AndExpression	active_session_conn && session_info != NULL && ! session_info_is_user ( session_info )		36093	0		&&			
ANR	36196	Identifier	active_session_conn		36093	0					
ANR	36197	AndExpression	session_info != NULL && ! session_info_is_user ( session_info )		36093	1		&&			
ANR	36198	EqualityExpression	session_info != NULL		36093	0		!=			
ANR	36199	Identifier	session_info		36093	0					
ANR	36200	Identifier	NULL		36093	1					
ANR	36201	UnaryOperationExpression	! session_info_is_user ( session_info )		36093	1					
ANR	36202	UnaryOperator	!		36093	0					
ANR	36203	CallExpression	session_info_is_user ( session_info )		36093	1					
ANR	36204	Callee	session_info_is_user		36093	0					
ANR	36205	Identifier	session_info_is_user		36093	0					
ANR	36206	ArgumentList	session_info		36093	1					
ANR	36207	Argument	session_info		36093	0					
ANR	36208	Identifier	session_info		36093	0					
ANR	36209	CompoundStatement		31:45:956:956	36093	1					
ANR	36210	IfStatement	if ( debug )		36093	0					
ANR	36211	Condition	debug	814:12:28319:28323	36093	0	True				
ANR	36212	Identifier	debug		36093	0					
ANR	36213	Statement	syslog	815:12:28338:28343	36093	1	True				
ANR	36214	Statement	(	815:18:28344:28344	36093	1	True				
ANR	36215	Statement	LOG_DEBUG	815:19:28345:28353	36093	2	True				
ANR	36216	Statement	","	815:28:28354:28354	36093	3	True				
ANR	36217	Statement	"""New session agent does not belong to user: """	815:30:28356:28400	36093	4	True				
ANR	36218	Statement	"""disabling file-xfer"""	816:19:28421:28441	36093	5	True				
ANR	36219	Statement	)	816:40:28442:28442	36093	6	True				
ANR	36220	ExpressionStatement		816:41:28443:28443	36093	7	True				
ANR	36221	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_DISABLE , 0 , 0 , NULL , 0 )"	817:8:28453:28548	36093	8	True				
ANR	36222	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_DISABLE , 0 , 0 , NULL , 0 )"		36093	0					
ANR	36223	Callee	udscs_write		36093	0					
ANR	36224	Identifier	udscs_write		36093	0					
ANR	36225	ArgumentList	active_session_conn		36093	1					
ANR	36226	Argument	active_session_conn		36093	0					
ANR	36227	Identifier	active_session_conn		36093	0					
ANR	36228	Argument	VDAGENTD_FILE_XFER_DISABLE		36093	1					
ANR	36229	Identifier	VDAGENTD_FILE_XFER_DISABLE		36093	0					
ANR	36230	Argument	0		36093	2					
ANR	36231	PrimaryExpression	0		36093	0					
ANR	36232	Argument	0		36093	3					
ANR	36233	PrimaryExpression	0		36093	0					
ANR	36234	Argument	NULL		36093	4					
ANR	36235	Identifier	NULL		36093	0					
ANR	36236	Argument	0		36093	5					
ANR	36237	PrimaryExpression	0		36093	0					
ANR	36238	IfStatement	if ( active_session_conn && mon_config )		36093	6					
ANR	36239	Condition	active_session_conn && mon_config	821:8:28565:28597	36093	0	True				
ANR	36240	AndExpression	active_session_conn && mon_config		36093	0		&&			
ANR	36241	Identifier	active_session_conn		36093	0					
ANR	36242	Identifier	mon_config		36093	1					
ANR	36243	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig ) )"	822:8:28608:28823	36093	1	True				
ANR	36244	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig ) )"		36093	0					
ANR	36245	Callee	udscs_write		36093	0					
ANR	36246	Identifier	udscs_write		36093	0					
ANR	36247	ArgumentList	active_session_conn		36093	1					
ANR	36248	Argument	active_session_conn		36093	0					
ANR	36249	Identifier	active_session_conn		36093	0					
ANR	36250	Argument	VDAGENTD_MONITORS_CONFIG		36093	1					
ANR	36251	Identifier	VDAGENTD_MONITORS_CONFIG		36093	0					
ANR	36252	Argument	0		36093	2					
ANR	36253	PrimaryExpression	0		36093	0					
ANR	36254	Argument	0		36093	3					
ANR	36255	PrimaryExpression	0		36093	0					
ANR	36256	Argument	( uint8_t * ) mon_config		36093	4					
ANR	36257	CastExpression	( uint8_t * ) mon_config		36093	0					
ANR	36258	CastTarget	uint8_t *		36093	0					
ANR	36259	Identifier	mon_config		36093	1					
ANR	36260	Argument	sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig )		36093	5					
ANR	36261	AdditiveExpression	sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig )		36093	0		+			
ANR	36262	SizeofExpression	sizeof ( VDAgentMonitorsConfig )		36093	0					
ANR	36263	Sizeof	sizeof		36093	0					
ANR	36264	SizeofOperand	VDAgentMonitorsConfig		36093	1					
ANR	36265	MultiplicativeExpression	mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig )		36093	1		*			
ANR	36266	PtrMemberAccess	mon_config -> num_of_monitors		36093	0					
ANR	36267	Identifier	mon_config		36093	0					
ANR	36268	Identifier	num_of_monitors		36093	1					
ANR	36269	SizeofExpression	sizeof ( VDAgentMonConfig )		36093	1					
ANR	36270	Sizeof	sizeof		36093	0					
ANR	36271	SizeofOperand	VDAgentMonConfig		36093	1					
ANR	36272	ExpressionStatement	release_clipboards ( )	826:4:28830:28850	36093	7	True				
ANR	36273	CallExpression	release_clipboards ( )		36093	0					
ANR	36274	Callee	release_clipboards		36093	0					
ANR	36275	Identifier	release_clipboards		36093	0					
ANR	36276	ArgumentList			36093	1					
ANR	36277	ExpressionStatement	check_xorg_resolution ( )	828:4:28857:28880	36093	8	True				
ANR	36278	CallExpression	check_xorg_resolution ( )		36093	0					
ANR	36279	Callee	check_xorg_resolution		36093	0					
ANR	36280	Identifier	check_xorg_resolution		36093	0					
ANR	36281	ArgumentList			36093	1					
ANR	36282	ReturnType	static void		36093	1					
ANR	36283	Identifier	update_active_session_connection		36093	2					
ANR	36284	ParameterList	struct udscs_connection * new_conn		36093	3					
ANR	36285	Parameter	struct udscs_connection * new_conn	782:45:27313:27345	36093	0	True				
ANR	36286	ParameterType	struct udscs_connection *		36093	0					
ANR	36287	Identifier	new_conn		36093	1					
ANR	36288	CFGEntryNode	ENTRY		36093		True				
ANR	36289	CFGExitNode	EXIT		36093		True				
ANR	36290	Symbol	& new_conn		36093						
ANR	36291	Symbol	server		36093						
ANR	36292	Symbol	NULL		36093						
ANR	36293	Symbol	debug		36093						
ANR	36294	Symbol	session_info		36093						
ANR	36295	Symbol	active_session		36093						
ANR	36296	Symbol	session_info_get_active_session		36093						
ANR	36297	Symbol	connection_matches_active_session		36093						
ANR	36298	Symbol	udscs_server_for_all_clients		36093						
ANR	36299	Symbol	active_session_conn		36093						
ANR	36300	Symbol	VDAGENTD_FILE_XFER_DISABLE		36093						
ANR	36301	Symbol	VDAGENTD_MONITORS_CONFIG		36093						
ANR	36302	Symbol	* mon_config		36093						
ANR	36303	Symbol	mon_config -> num_of_monitors		36093						
ANR	36304	Symbol	session_count		36093						
ANR	36305	Symbol	mon_config		36093						
ANR	36306	Symbol	new_conn		36093						
ANR	36307	Symbol	LOG_DEBUG		36093						
ANR	36308	Symbol	session_info_is_user		36093						
ANR	36309	Function	remove_active_xfers	831:0:28885:29282							
ANR	36310	FunctionDef	"remove_active_xfers (gpointer key , gpointer value , gpointer conn)"		36309	0					
ANR	36311	CompoundStatement		832:0:28966:29282	36309	0					
ANR	36312	IfStatement	if ( value == conn )		36309	0					
ANR	36313	Condition	value == conn	833:8:28976:28988	36309	0	True				
ANR	36314	EqualityExpression	value == conn		36309	0		==			
ANR	36315	Identifier	value		36309	0					
ANR	36316	Identifier	conn		36309	1					
ANR	36317	CompoundStatement		2:23:24:24	36309	1					
ANR	36318	ExpressionStatement	"send_file_xfer_status ( virtio_port , ""Agent disc; cancelling file-xfer %u"" , GPOINTER_TO_UINT ( key ) , VD_AGENT_FILE_XFER_STATUS_CANCELLED , NULL , 0 )"	834:8:29001:29233	36309	0	True				
ANR	36319	CallExpression	"send_file_xfer_status ( virtio_port , ""Agent disc; cancelling file-xfer %u"" , GPOINTER_TO_UINT ( key ) , VD_AGENT_FILE_XFER_STATUS_CANCELLED , NULL , 0 )"		36309	0					
ANR	36320	Callee	send_file_xfer_status		36309	0					
ANR	36321	Identifier	send_file_xfer_status		36309	0					
ANR	36322	ArgumentList	virtio_port		36309	1					
ANR	36323	Argument	virtio_port		36309	0					
ANR	36324	Identifier	virtio_port		36309	0					
ANR	36325	Argument	"""Agent disc; cancelling file-xfer %u"""		36309	1					
ANR	36326	PrimaryExpression	"""Agent disc; cancelling file-xfer %u"""		36309	0					
ANR	36327	Argument	GPOINTER_TO_UINT ( key )		36309	2					
ANR	36328	CallExpression	GPOINTER_TO_UINT ( key )		36309	0					
ANR	36329	Callee	GPOINTER_TO_UINT		36309	0					
ANR	36330	Identifier	GPOINTER_TO_UINT		36309	0					
ANR	36331	ArgumentList	key		36309	1					
ANR	36332	Argument	key		36309	0					
ANR	36333	Identifier	key		36309	0					
ANR	36334	Argument	VD_AGENT_FILE_XFER_STATUS_CANCELLED		36309	3					
ANR	36335	Identifier	VD_AGENT_FILE_XFER_STATUS_CANCELLED		36309	0					
ANR	36336	Argument	NULL		36309	4					
ANR	36337	Identifier	NULL		36309	0					
ANR	36338	Argument	0		36309	5					
ANR	36339	PrimaryExpression	0		36309	0					
ANR	36340	ReturnStatement	return 1 ;	838:8:29243:29251	36309	1	True				
ANR	36341	PrimaryExpression	1		36309	0					
ANR	36342	ElseStatement	else		36309	0					
ANR	36343	ReturnStatement	return 0 ;	840:8:29272:29280	36309	0	True				
ANR	36344	PrimaryExpression	0		36309	0					
ANR	36345	ReturnType	static gboolean		36309	1					
ANR	36346	Identifier	remove_active_xfers		36309	2					
ANR	36347	ParameterList	"gpointer key , gpointer value , gpointer conn"		36309	3					
ANR	36348	Parameter	gpointer key	831:36:28921:28932	36309	0	True				
ANR	36349	ParameterType	gpointer		36309	0					
ANR	36350	Identifier	key		36309	1					
ANR	36351	Parameter	gpointer value	831:50:28935:28948	36309	1	True				
ANR	36352	ParameterType	gpointer		36309	0					
ANR	36353	Identifier	value		36309	1					
ANR	36354	Parameter	gpointer conn	831:66:28951:28963	36309	2	True				
ANR	36355	ParameterType	gpointer		36309	0					
ANR	36356	Identifier	conn		36309	1					
ANR	36357	CFGEntryNode	ENTRY		36309		True				
ANR	36358	CFGExitNode	EXIT		36309		True				
ANR	36359	Symbol	conn		36309						
ANR	36360	Symbol	NULL		36309						
ANR	36361	Symbol	VD_AGENT_FILE_XFER_STATUS_CANCELLED		36309						
ANR	36362	Symbol	virtio_port		36309						
ANR	36363	Symbol	GPOINTER_TO_UINT		36309						
ANR	36364	Symbol	value		36309						
ANR	36365	Symbol	key		36309						
ANR	36366	Function	agent_connect	843:0:29285:29958							
ANR	36367	FunctionDef	agent_connect (struct udscs_connection * conn)		36366	0					
ANR	36368	CompoundStatement		844:0:29342:29958	36366	0					
ANR	36369	IdentifierDeclStatement	struct agent_data * agent_data ;	845:4:29348:29377	36366	0	True				
ANR	36370	IdentifierDecl	* agent_data		36366	0					
ANR	36371	IdentifierDeclType	struct agent_data *		36366	0					
ANR	36372	Identifier	agent_data		36366	1					
ANR	36373	ExpressionStatement	"agent_data = calloc ( 1 , sizeof ( * agent_data ) )"	847:4:29384:29427	36366	1	True				
ANR	36374	AssignmentExpression	"agent_data = calloc ( 1 , sizeof ( * agent_data ) )"		36366	0		=			
ANR	36375	Identifier	agent_data		36366	0					
ANR	36376	CallExpression	"calloc ( 1 , sizeof ( * agent_data ) )"		36366	1					
ANR	36377	Callee	calloc		36366	0					
ANR	36378	Identifier	calloc		36366	0					
ANR	36379	ArgumentList	1		36366	1					
ANR	36380	Argument	1		36366	0					
ANR	36381	PrimaryExpression	1		36366	0					
ANR	36382	Argument	sizeof ( * agent_data )		36366	1					
ANR	36383	SizeofExpression	sizeof ( * agent_data )		36366	0					
ANR	36384	Sizeof	sizeof		36366	0					
ANR	36385	UnaryOperationExpression	* agent_data		36366	1					
ANR	36386	UnaryOperator	*		36366	0					
ANR	36387	Identifier	agent_data		36366	1					
ANR	36388	IfStatement	if ( ! agent_data )		36366	2					
ANR	36389	Condition	! agent_data	848:8:29437:29447	36366	0	True				
ANR	36390	UnaryOperationExpression	! agent_data		36366	0					
ANR	36391	UnaryOperator	!		36366	0					
ANR	36392	Identifier	agent_data		36366	1					
ANR	36393	CompoundStatement		5:21:107:107	36366	1					
ANR	36394	ExpressionStatement	"syslog ( LOG_ERR , ""Out of memory allocating agent data, disconnecting"" )"	849:8:29460:29529	36366	0	True				
ANR	36395	CallExpression	"syslog ( LOG_ERR , ""Out of memory allocating agent data, disconnecting"" )"		36366	0					
ANR	36396	Callee	syslog		36366	0					
ANR	36397	Identifier	syslog		36366	0					
ANR	36398	ArgumentList	LOG_ERR		36366	1					
ANR	36399	Argument	LOG_ERR		36366	0					
ANR	36400	Identifier	LOG_ERR		36366	0					
ANR	36401	Argument	"""Out of memory allocating agent data, disconnecting"""		36366	1					
ANR	36402	PrimaryExpression	"""Out of memory allocating agent data, disconnecting"""		36366	0					
ANR	36403	ExpressionStatement	udscs_destroy_connection ( & conn )	850:8:29539:29570	36366	1	True				
ANR	36404	CallExpression	udscs_destroy_connection ( & conn )		36366	0					
ANR	36405	Callee	udscs_destroy_connection		36366	0					
ANR	36406	Identifier	udscs_destroy_connection		36366	0					
ANR	36407	ArgumentList	& conn		36366	1					
ANR	36408	Argument	& conn		36366	0					
ANR	36409	UnaryOperationExpression	& conn		36366	0					
ANR	36410	UnaryOperator	&		36366	0					
ANR	36411	Identifier	conn		36366	1					
ANR	36412	ReturnStatement	return ;	851:8:29580:29586	36366	2	True				
ANR	36413	IfStatement	if ( session_info )		36366	3					
ANR	36414	Condition	session_info	854:8:29603:29614	36366	0	True				
ANR	36415	Identifier	session_info		36366	0					
ANR	36416	CompoundStatement		12:8:284:328	36366	1					
ANR	36417	IdentifierDeclStatement	uint32_t pid = udscs_get_peer_cred ( conn ) . pid ;	855:8:29627:29671	36366	0	True				
ANR	36418	IdentifierDecl	pid = udscs_get_peer_cred ( conn ) . pid		36366	0					
ANR	36419	IdentifierDeclType	uint32_t		36366	0					
ANR	36420	Identifier	pid		36366	1					
ANR	36421	AssignmentExpression	pid = udscs_get_peer_cred ( conn ) . pid		36366	2		=			
ANR	36422	Identifier	pid		36366	0					
ANR	36423	MemberAccess	udscs_get_peer_cred ( conn ) . pid		36366	1					
ANR	36424	CallExpression	udscs_get_peer_cred ( conn )		36366	0					
ANR	36425	Callee	udscs_get_peer_cred		36366	0					
ANR	36426	Identifier	udscs_get_peer_cred		36366	0					
ANR	36427	ArgumentList	conn		36366	1					
ANR	36428	Argument	conn		36366	0					
ANR	36429	Identifier	conn		36366	0					
ANR	36430	Identifier	pid		36366	1					
ANR	36431	ExpressionStatement	"agent_data -> session = session_info_session_for_pid ( session_info , pid )"	856:8:29681:29750	36366	1	True				
ANR	36432	AssignmentExpression	"agent_data -> session = session_info_session_for_pid ( session_info , pid )"		36366	0		=			
ANR	36433	PtrMemberAccess	agent_data -> session		36366	0					
ANR	36434	Identifier	agent_data		36366	0					
ANR	36435	Identifier	session		36366	1					
ANR	36436	CallExpression	"session_info_session_for_pid ( session_info , pid )"		36366	1					
ANR	36437	Callee	session_info_session_for_pid		36366	0					
ANR	36438	Identifier	session_info_session_for_pid		36366	0					
ANR	36439	ArgumentList	session_info		36366	1					
ANR	36440	Argument	session_info		36366	0					
ANR	36441	Identifier	session_info		36366	0					
ANR	36442	Argument	pid		36366	1					
ANR	36443	Identifier	pid		36366	0					
ANR	36444	ExpressionStatement	"udscs_set_user_data ( conn , ( void * ) agent_data )"	859:4:29763:29808	36366	4	True				
ANR	36445	CallExpression	"udscs_set_user_data ( conn , ( void * ) agent_data )"		36366	0					
ANR	36446	Callee	udscs_set_user_data		36366	0					
ANR	36447	Identifier	udscs_set_user_data		36366	0					
ANR	36448	ArgumentList	conn		36366	1					
ANR	36449	Argument	conn		36366	0					
ANR	36450	Identifier	conn		36366	0					
ANR	36451	Argument	( void * ) agent_data		36366	1					
ANR	36452	CastExpression	( void * ) agent_data		36366	0					
ANR	36453	CastTarget	void *		36366	0					
ANR	36454	Identifier	agent_data		36366	1					
ANR	36455	ExpressionStatement	"udscs_write ( conn , VDAGENTD_VERSION , 0 , 0 , ( uint8_t * ) VERSION , strlen ( VERSION ) + 1 )"	860:4:29814:29912	36366	5	True				
ANR	36456	CallExpression	"udscs_write ( conn , VDAGENTD_VERSION , 0 , 0 , ( uint8_t * ) VERSION , strlen ( VERSION ) + 1 )"		36366	0					
ANR	36457	Callee	udscs_write		36366	0					
ANR	36458	Identifier	udscs_write		36366	0					
ANR	36459	ArgumentList	conn		36366	1					
ANR	36460	Argument	conn		36366	0					
ANR	36461	Identifier	conn		36366	0					
ANR	36462	Argument	VDAGENTD_VERSION		36366	1					
ANR	36463	Identifier	VDAGENTD_VERSION		36366	0					
ANR	36464	Argument	0		36366	2					
ANR	36465	PrimaryExpression	0		36366	0					
ANR	36466	Argument	0		36366	3					
ANR	36467	PrimaryExpression	0		36366	0					
ANR	36468	Argument	( uint8_t * ) VERSION		36366	4					
ANR	36469	CastExpression	( uint8_t * ) VERSION		36366	0					
ANR	36470	CastTarget	uint8_t *		36366	0					
ANR	36471	Identifier	VERSION		36366	1					
ANR	36472	Argument	strlen ( VERSION ) + 1		36366	5					
ANR	36473	AdditiveExpression	strlen ( VERSION ) + 1		36366	0		+			
ANR	36474	CallExpression	strlen ( VERSION )		36366	0					
ANR	36475	Callee	strlen		36366	0					
ANR	36476	Identifier	strlen		36366	0					
ANR	36477	ArgumentList	VERSION		36366	1					
ANR	36478	Argument	VERSION		36366	0					
ANR	36479	Identifier	VERSION		36366	0					
ANR	36480	PrimaryExpression	1		36366	1					
ANR	36481	ExpressionStatement	update_active_session_connection ( conn )	862:4:29918:29956	36366	6	True				
ANR	36482	CallExpression	update_active_session_connection ( conn )		36366	0					
ANR	36483	Callee	update_active_session_connection		36366	0					
ANR	36484	Identifier	update_active_session_connection		36366	0					
ANR	36485	ArgumentList	conn		36366	1					
ANR	36486	Argument	conn		36366	0					
ANR	36487	Identifier	conn		36366	0					
ANR	36488	ReturnType	static void		36366	1					
ANR	36489	Identifier	agent_connect		36366	2					
ANR	36490	ParameterList	struct udscs_connection * conn		36366	3					
ANR	36491	Parameter	struct udscs_connection * conn	843:26:29311:29339	36366	0	True				
ANR	36492	ParameterType	struct udscs_connection *		36366	0					
ANR	36493	Identifier	conn		36366	1					
ANR	36494	CFGEntryNode	ENTRY		36366		True				
ANR	36495	CFGExitNode	EXIT		36366		True				
ANR	36496	Symbol	conn		36366						
ANR	36497	Symbol	session_info		36366						
ANR	36498	Symbol	session_info_session_for_pid		36366						
ANR	36499	Symbol	pid		36366						
ANR	36500	Symbol	agent_data -> session		36366						
ANR	36501	Symbol	calloc		36366						
ANR	36502	Symbol	* agent_data		36366						
ANR	36503	Symbol	& conn		36366						
ANR	36504	Symbol	VDAGENTD_VERSION		36366						
ANR	36505	Symbol	strlen		36366						
ANR	36506	Symbol	LOG_ERR		36366						
ANR	36507	Symbol	udscs_get_peer_cred ( conn ) . pid		36366						
ANR	36508	Symbol	agent_data		36366						
ANR	36509	Symbol	udscs_get_peer_cred		36366						
ANR	36510	Symbol	VERSION		36366						
ANR	36511	Function	agent_disconnect	865:0:29961:30327							
ANR	36512	FunctionDef	agent_disconnect (struct udscs_connection * conn)		36511	0					
ANR	36513	CompoundStatement		866:0:30021:30327	36511	0					
ANR	36514	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( conn ) ;	867:4:30027:30084	36511	0	True				
ANR	36515	IdentifierDecl	* agent_data = udscs_get_user_data ( conn )		36511	0					
ANR	36516	IdentifierDeclType	struct agent_data *		36511	0					
ANR	36517	Identifier	agent_data		36511	1					
ANR	36518	AssignmentExpression	* agent_data = udscs_get_user_data ( conn )		36511	2		=			
ANR	36519	Identifier	agent_data		36511	0					
ANR	36520	CallExpression	udscs_get_user_data ( conn )		36511	1					
ANR	36521	Callee	udscs_get_user_data		36511	0					
ANR	36522	Identifier	udscs_get_user_data		36511	0					
ANR	36523	ArgumentList	conn		36511	1					
ANR	36524	Argument	conn		36511	0					
ANR	36525	Identifier	conn		36511	0					
ANR	36526	ExpressionStatement	"g_hash_table_foreach_remove ( active_xfers , remove_active_xfers , conn )"	869:4:30091:30159	36511	1	True				
ANR	36527	CallExpression	"g_hash_table_foreach_remove ( active_xfers , remove_active_xfers , conn )"		36511	0					
ANR	36528	Callee	g_hash_table_foreach_remove		36511	0					
ANR	36529	Identifier	g_hash_table_foreach_remove		36511	0					
ANR	36530	ArgumentList	active_xfers		36511	1					
ANR	36531	Argument	active_xfers		36511	0					
ANR	36532	Identifier	active_xfers		36511	0					
ANR	36533	Argument	remove_active_xfers		36511	1					
ANR	36534	Identifier	remove_active_xfers		36511	0					
ANR	36535	Argument	conn		36511	2					
ANR	36536	Identifier	conn		36511	0					
ANR	36537	ExpressionStatement	free ( agent_data -> session )	871:4:30166:30191	36511	2	True				
ANR	36538	CallExpression	free ( agent_data -> session )		36511	0					
ANR	36539	Callee	free		36511	0					
ANR	36540	Identifier	free		36511	0					
ANR	36541	ArgumentList	agent_data -> session		36511	1					
ANR	36542	Argument	agent_data -> session		36511	0					
ANR	36543	PtrMemberAccess	agent_data -> session		36511	0					
ANR	36544	Identifier	agent_data		36511	0					
ANR	36545	Identifier	session		36511	1					
ANR	36546	ExpressionStatement	agent_data -> session = NULL	872:4:30197:30223	36511	3	True				
ANR	36547	AssignmentExpression	agent_data -> session = NULL		36511	0		=			
ANR	36548	PtrMemberAccess	agent_data -> session		36511	0					
ANR	36549	Identifier	agent_data		36511	0					
ANR	36550	Identifier	session		36511	1					
ANR	36551	Identifier	NULL		36511	1					
ANR	36552	ExpressionStatement	update_active_session_connection ( NULL )	873:4:30229:30267	36511	4	True				
ANR	36553	CallExpression	update_active_session_connection ( NULL )		36511	0					
ANR	36554	Callee	update_active_session_connection		36511	0					
ANR	36555	Identifier	update_active_session_connection		36511	0					
ANR	36556	ArgumentList	NULL		36511	1					
ANR	36557	Argument	NULL		36511	0					
ANR	36558	Identifier	NULL		36511	0					
ANR	36559	ExpressionStatement	free ( agent_data -> screen_info )	875:4:30274:30303	36511	5	True				
ANR	36560	CallExpression	free ( agent_data -> screen_info )		36511	0					
ANR	36561	Callee	free		36511	0					
ANR	36562	Identifier	free		36511	0					
ANR	36563	ArgumentList	agent_data -> screen_info		36511	1					
ANR	36564	Argument	agent_data -> screen_info		36511	0					
ANR	36565	PtrMemberAccess	agent_data -> screen_info		36511	0					
ANR	36566	Identifier	agent_data		36511	0					
ANR	36567	Identifier	screen_info		36511	1					
ANR	36568	ExpressionStatement	free ( agent_data )	876:4:30309:30325	36511	6	True				
ANR	36569	CallExpression	free ( agent_data )		36511	0					
ANR	36570	Callee	free		36511	0					
ANR	36571	Identifier	free		36511	0					
ANR	36572	ArgumentList	agent_data		36511	1					
ANR	36573	Argument	agent_data		36511	0					
ANR	36574	Identifier	agent_data		36511	0					
ANR	36575	ReturnType	static void		36511	1					
ANR	36576	Identifier	agent_disconnect		36511	2					
ANR	36577	ParameterList	struct udscs_connection * conn		36511	3					
ANR	36578	Parameter	struct udscs_connection * conn	865:29:29990:30018	36511	0	True				
ANR	36579	ParameterType	struct udscs_connection *		36511	0					
ANR	36580	Identifier	conn		36511	1					
ANR	36581	CFGEntryNode	ENTRY		36511		True				
ANR	36582	CFGExitNode	EXIT		36511		True				
ANR	36583	Symbol	conn		36511						
ANR	36584	Symbol	NULL		36511						
ANR	36585	Symbol	agent_data -> screen_info		36511						
ANR	36586	Symbol	agent_data		36511						
ANR	36587	Symbol	agent_data -> session		36511						
ANR	36588	Symbol	udscs_get_user_data		36511						
ANR	36589	Symbol	* agent_data		36511						
ANR	36590	Symbol	remove_active_xfers		36511						
ANR	36591	Symbol	active_xfers		36511						
ANR	36592	Function	agent_read_complete	879:0:30330:33487							
ANR	36593	FunctionDef	"agent_read_complete (struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data)"		36592	0					
ANR	36594	CompoundStatement		881:0:30451:33487	36592	0					
ANR	36595	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( * connp ) ;	882:4:30457:30516	36592	0	True				
ANR	36596	IdentifierDecl	* agent_data = udscs_get_user_data ( * connp )		36592	0					
ANR	36597	IdentifierDeclType	struct agent_data *		36592	0					
ANR	36598	Identifier	agent_data		36592	1					
ANR	36599	AssignmentExpression	* agent_data = udscs_get_user_data ( * connp )		36592	2		=			
ANR	36600	Identifier	agent_data		36592	0					
ANR	36601	CallExpression	udscs_get_user_data ( * connp )		36592	1					
ANR	36602	Callee	udscs_get_user_data		36592	0					
ANR	36603	Identifier	udscs_get_user_data		36592	0					
ANR	36604	ArgumentList	* connp		36592	1					
ANR	36605	Argument	* connp		36592	0					
ANR	36606	UnaryOperationExpression	* connp		36592	0					
ANR	36607	UnaryOperator	*		36592	0					
ANR	36608	Identifier	connp		36592	1					
ANR	36609	SwitchStatement	switch ( header -> type )		36592	1					
ANR	36610	Condition	header -> type	884:12:30531:30542	36592	0	True				
ANR	36611	PtrMemberAccess	header -> type		36592	0					
ANR	36612	Identifier	header		36592	0					
ANR	36613	Identifier	type		36592	1					
ANR	36614	CompoundStatement		4:26:93:93	36592	1					
ANR	36615	Label	case VDAGENTD_GUEST_XORG_RESOLUTION :	885:4:30551:30586	36592	0	True				
ANR	36616	Identifier	VDAGENTD_GUEST_XORG_RESOLUTION		36592	0					
ANR	36617	CompoundStatement		7:8:198:233	36592	1					
ANR	36618	IdentifierDeclStatement	struct vdagentd_guest_xorg_resolution * res ;	886:8:30598:30640	36592	0	True				
ANR	36619	IdentifierDecl	* res		36592	0					
ANR	36620	IdentifierDeclType	struct vdagentd_guest_xorg_resolution *		36592	0					
ANR	36621	Identifier	res		36592	1					
ANR	36622	IdentifierDeclStatement	int n = header -> size / sizeof ( * res ) ;	887:8:30650:30685	36592	1	True				
ANR	36623	IdentifierDecl	n = header -> size / sizeof ( * res )		36592	0					
ANR	36624	IdentifierDeclType	int		36592	0					
ANR	36625	Identifier	n		36592	1					
ANR	36626	AssignmentExpression	n = header -> size / sizeof ( * res )		36592	2		=			
ANR	36627	Identifier	n		36592	0					
ANR	36628	MultiplicativeExpression	header -> size / sizeof ( * res )		36592	1		/			
ANR	36629	PtrMemberAccess	header -> size		36592	0					
ANR	36630	Identifier	header		36592	0					
ANR	36631	Identifier	size		36592	1					
ANR	36632	SizeofExpression	sizeof ( * res )		36592	1					
ANR	36633	Sizeof	sizeof		36592	0					
ANR	36634	UnaryOperationExpression	* res		36592	1					
ANR	36635	UnaryOperator	*		36592	0					
ANR	36636	Identifier	res		36592	1					
ANR	36637	IfStatement	if ( header -> arg1 == 0 && header -> arg2 == 0 )		36592	2					
ANR	36638	Condition	header -> arg1 == 0 && header -> arg2 == 0	892:12:30904:30941	36592	0	True				
ANR	36639	AndExpression	header -> arg1 == 0 && header -> arg2 == 0		36592	0		&&			
ANR	36640	EqualityExpression	header -> arg1 == 0		36592	0		==			
ANR	36641	PtrMemberAccess	header -> arg1		36592	0					
ANR	36642	Identifier	header		36592	0					
ANR	36643	Identifier	arg1		36592	1					
ANR	36644	PrimaryExpression	0		36592	1					
ANR	36645	EqualityExpression	header -> arg2 == 0		36592	1		==			
ANR	36646	PtrMemberAccess	header -> arg2		36592	0					
ANR	36647	Identifier	header		36592	0					
ANR	36648	Identifier	arg2		36592	1					
ANR	36649	PrimaryExpression	0		36592	1					
ANR	36650	CompoundStatement		12:52:492:492	36592	1					
ANR	36651	Statement	syslog	893:12:30958:30963	36592	0	True				
ANR	36652	Statement	(	893:18:30964:30964	36592	1	True				
ANR	36653	Statement	LOG_INFO	893:19:30965:30972	36592	2	True				
ANR	36654	Statement	","	893:27:30973:30973	36592	3	True				
ANR	36655	Statement	"""got old session agent xorg resolution message, """	893:29:30975:31023	36592	4	True				
ANR	36656	Statement	"""ignoring"""	894:29:31054:31063	36592	5	True				
ANR	36657	Statement	)	894:39:31064:31064	36592	6	True				
ANR	36658	ExpressionStatement		894:40:31065:31065	36592	7	True				
ANR	36659	ReturnStatement	return ;	895:12:31079:31085	36592	8	True				
ANR	36660	IfStatement	if ( header -> size != n * sizeof ( * res ) )		36592	3					
ANR	36661	Condition	header -> size != n * sizeof ( * res )	898:12:31110:31141	36592	0	True				
ANR	36662	EqualityExpression	header -> size != n * sizeof ( * res )		36592	0		!=			
ANR	36663	PtrMemberAccess	header -> size		36592	0					
ANR	36664	Identifier	header		36592	0					
ANR	36665	Identifier	size		36592	1					
ANR	36666	MultiplicativeExpression	n * sizeof ( * res )		36592	1		*			
ANR	36667	Identifier	n		36592	0					
ANR	36668	SizeofExpression	sizeof ( * res )		36592	1					
ANR	36669	Sizeof	sizeof		36592	0					
ANR	36670	UnaryOperationExpression	* res		36592	1					
ANR	36671	UnaryOperator	*		36592	0					
ANR	36672	Identifier	res		36592	1					
ANR	36673	CompoundStatement		18:46:692:692	36592	1					
ANR	36674	Statement	syslog	899:12:31158:31163	36592	0	True				
ANR	36675	Statement	(	899:18:31164:31164	36592	1	True				
ANR	36676	Statement	LOG_ERR	899:19:31165:31171	36592	2	True				
ANR	36677	Statement	","	899:26:31172:31172	36592	3	True				
ANR	36678	Statement	"""guest xorg resolution message has wrong size, """	899:28:31174:31221	36592	4	True				
ANR	36679	Statement	"""disconnecting agent"""	900:28:31251:31271	36592	5	True				
ANR	36680	Statement	)	900:49:31272:31272	36592	6	True				
ANR	36681	ExpressionStatement		900:50:31273:31273	36592	7	True				
ANR	36682	ExpressionStatement	udscs_destroy_connection ( connp )	901:12:31287:31318	36592	8	True				
ANR	36683	CallExpression	udscs_destroy_connection ( connp )		36592	0					
ANR	36684	Callee	udscs_destroy_connection		36592	0					
ANR	36685	Identifier	udscs_destroy_connection		36592	0					
ANR	36686	ArgumentList	connp		36592	1					
ANR	36687	Argument	connp		36592	0					
ANR	36688	Identifier	connp		36592	0					
ANR	36689	ReturnStatement	return ;	902:12:31332:31338	36592	9	True				
ANR	36690	ExpressionStatement	free ( agent_data -> screen_info )	905:8:31359:31388	36592	4	True				
ANR	36691	CallExpression	free ( agent_data -> screen_info )		36592	0					
ANR	36692	Callee	free		36592	0					
ANR	36693	Identifier	free		36592	0					
ANR	36694	ArgumentList	agent_data -> screen_info		36592	1					
ANR	36695	Argument	agent_data -> screen_info		36592	0					
ANR	36696	PtrMemberAccess	agent_data -> screen_info		36592	0					
ANR	36697	Identifier	agent_data		36592	0					
ANR	36698	Identifier	screen_info		36592	1					
ANR	36699	ExpressionStatement	res = malloc ( n * sizeof ( * res ) )	906:8:31398:31428	36592	5	True				
ANR	36700	AssignmentExpression	res = malloc ( n * sizeof ( * res ) )		36592	0		=			
ANR	36701	Identifier	res		36592	0					
ANR	36702	CallExpression	malloc ( n * sizeof ( * res ) )		36592	1					
ANR	36703	Callee	malloc		36592	0					
ANR	36704	Identifier	malloc		36592	0					
ANR	36705	ArgumentList	n * sizeof ( * res )		36592	1					
ANR	36706	Argument	n * sizeof ( * res )		36592	0					
ANR	36707	MultiplicativeExpression	n * sizeof ( * res )		36592	0		*			
ANR	36708	Identifier	n		36592	0					
ANR	36709	SizeofExpression	sizeof ( * res )		36592	1					
ANR	36710	Sizeof	sizeof		36592	0					
ANR	36711	UnaryOperationExpression	* res		36592	1					
ANR	36712	UnaryOperator	*		36592	0					
ANR	36713	Identifier	res		36592	1					
ANR	36714	IfStatement	if ( ! res )		36592	6					
ANR	36715	Condition	! res	907:12:31442:31445	36592	0	True				
ANR	36716	UnaryOperationExpression	! res		36592	0					
ANR	36717	UnaryOperator	!		36592	0					
ANR	36718	Identifier	res		36592	1					
ANR	36719	CompoundStatement		27:18:996:996	36592	1					
ANR	36720	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating screen info"" )"	908:12:31462:31517	36592	0	True				
ANR	36721	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating screen info"" )"		36592	0					
ANR	36722	Callee	syslog		36592	0					
ANR	36723	Identifier	syslog		36592	0					
ANR	36724	ArgumentList	LOG_ERR		36592	1					
ANR	36725	Argument	LOG_ERR		36592	0					
ANR	36726	Identifier	LOG_ERR		36592	0					
ANR	36727	Argument	"""out of memory allocating screen info"""		36592	1					
ANR	36728	PrimaryExpression	"""out of memory allocating screen info"""		36592	0					
ANR	36729	ExpressionStatement	n = 0	909:12:31531:31536	36592	1	True				
ANR	36730	AssignmentExpression	n = 0		36592	0		=			
ANR	36731	Identifier	n		36592	0					
ANR	36732	PrimaryExpression	0		36592	1					
ANR	36733	ExpressionStatement	"memcpy ( res , data , n * sizeof ( * res ) )"	911:8:31556:31591	36592	7	True				
ANR	36734	CallExpression	"memcpy ( res , data , n * sizeof ( * res ) )"		36592	0					
ANR	36735	Callee	memcpy		36592	0					
ANR	36736	Identifier	memcpy		36592	0					
ANR	36737	ArgumentList	res		36592	1					
ANR	36738	Argument	res		36592	0					
ANR	36739	Identifier	res		36592	0					
ANR	36740	Argument	data		36592	1					
ANR	36741	Identifier	data		36592	0					
ANR	36742	Argument	n * sizeof ( * res )		36592	2					
ANR	36743	MultiplicativeExpression	n * sizeof ( * res )		36592	0		*			
ANR	36744	Identifier	n		36592	0					
ANR	36745	SizeofExpression	sizeof ( * res )		36592	1					
ANR	36746	Sizeof	sizeof		36592	0					
ANR	36747	UnaryOperationExpression	* res		36592	1					
ANR	36748	UnaryOperator	*		36592	0					
ANR	36749	Identifier	res		36592	1					
ANR	36750	ExpressionStatement	agent_data -> width = header -> arg1	912:8:31601:31634	36592	8	True				
ANR	36751	AssignmentExpression	agent_data -> width = header -> arg1		36592	0		=			
ANR	36752	PtrMemberAccess	agent_data -> width		36592	0					
ANR	36753	Identifier	agent_data		36592	0					
ANR	36754	Identifier	width		36592	1					
ANR	36755	PtrMemberAccess	header -> arg1		36592	1					
ANR	36756	Identifier	header		36592	0					
ANR	36757	Identifier	arg1		36592	1					
ANR	36758	ExpressionStatement	agent_data -> height = header -> arg2	913:8:31644:31677	36592	9	True				
ANR	36759	AssignmentExpression	agent_data -> height = header -> arg2		36592	0		=			
ANR	36760	PtrMemberAccess	agent_data -> height		36592	0					
ANR	36761	Identifier	agent_data		36592	0					
ANR	36762	Identifier	height		36592	1					
ANR	36763	PtrMemberAccess	header -> arg2		36592	1					
ANR	36764	Identifier	header		36592	0					
ANR	36765	Identifier	arg2		36592	1					
ANR	36766	ExpressionStatement	agent_data -> screen_info = res	914:8:31687:31717	36592	10	True				
ANR	36767	AssignmentExpression	agent_data -> screen_info = res		36592	0		=			
ANR	36768	PtrMemberAccess	agent_data -> screen_info		36592	0					
ANR	36769	Identifier	agent_data		36592	0					
ANR	36770	Identifier	screen_info		36592	1					
ANR	36771	Identifier	res		36592	1					
ANR	36772	ExpressionStatement	agent_data -> screen_count = n	915:8:31727:31755	36592	11	True				
ANR	36773	AssignmentExpression	agent_data -> screen_count = n		36592	0		=			
ANR	36774	PtrMemberAccess	agent_data -> screen_count		36592	0					
ANR	36775	Identifier	agent_data		36592	0					
ANR	36776	Identifier	screen_count		36592	1					
ANR	36777	Identifier	n		36592	1					
ANR	36778	ExpressionStatement	check_xorg_resolution ( )	917:8:31766:31789	36592	12	True				
ANR	36779	CallExpression	check_xorg_resolution ( )		36592	0					
ANR	36780	Callee	check_xorg_resolution		36592	0					
ANR	36781	Identifier	check_xorg_resolution		36592	0					
ANR	36782	ArgumentList			36592	1					
ANR	36783	BreakStatement	break ;	918:8:31799:31804	36592	13	True				
ANR	36784	Label	case VDAGENTD_CLIPBOARD_GRAB :	920:4:31816:31844	36592	2	True				
ANR	36785	Identifier	VDAGENTD_CLIPBOARD_GRAB		36592	0					
ANR	36786	Label	case VDAGENTD_CLIPBOARD_REQUEST :	921:4:31850:31881	36592	3	True				
ANR	36787	Identifier	VDAGENTD_CLIPBOARD_REQUEST		36592	0					
ANR	36788	Label	case VDAGENTD_CLIPBOARD_DATA :	922:4:31887:31915	36592	4	True				
ANR	36789	Identifier	VDAGENTD_CLIPBOARD_DATA		36592	0					
ANR	36790	Label	case VDAGENTD_CLIPBOARD_RELEASE :	923:4:31921:31952	36592	5	True				
ANR	36791	Identifier	VDAGENTD_CLIPBOARD_RELEASE		36592	0					
ANR	36792	IfStatement	"if ( do_agent_clipboard ( * connp , header , data ) )"		36592	6					
ANR	36793	Condition	"do_agent_clipboard ( * connp , header , data )"	924:12:31966:32005	36592	0	True				
ANR	36794	CallExpression	"do_agent_clipboard ( * connp , header , data )"		36592	0					
ANR	36795	Callee	do_agent_clipboard		36592	0					
ANR	36796	Identifier	do_agent_clipboard		36592	0					
ANR	36797	ArgumentList	* connp		36592	1					
ANR	36798	Argument	* connp		36592	0					
ANR	36799	UnaryOperationExpression	* connp		36592	0					
ANR	36800	UnaryOperator	*		36592	0					
ANR	36801	Identifier	connp		36592	1					
ANR	36802	Argument	header		36592	1					
ANR	36803	Identifier	header		36592	0					
ANR	36804	Argument	data		36592	2					
ANR	36805	Identifier	data		36592	0					
ANR	36806	CompoundStatement		44:54:1556:1556	36592	1					
ANR	36807	ExpressionStatement	udscs_destroy_connection ( connp )	925:12:32022:32053	36592	0	True				
ANR	36808	CallExpression	udscs_destroy_connection ( connp )		36592	0					
ANR	36809	Callee	udscs_destroy_connection		36592	0					
ANR	36810	Identifier	udscs_destroy_connection		36592	0					
ANR	36811	ArgumentList	connp		36592	1					
ANR	36812	Argument	connp		36592	0					
ANR	36813	Identifier	connp		36592	0					
ANR	36814	ReturnStatement	return ;	926:12:32067:32073	36592	1	True				
ANR	36815	BreakStatement	break ;	928:8:32093:32098	36592	7	True				
ANR	36816	Label	case VDAGENTD_FILE_XFER_STATUS :	929:4:32104:32134	36592	8	True				
ANR	36817	Identifier	VDAGENTD_FILE_XFER_STATUS		36592	0					
ANR	36818	CompoundStatement		49:35:1683:1683	36592	9					
ANR	36819	SwitchStatement	switch ( header -> arg2 )		36592	0					
ANR	36820	Condition	header -> arg2	931:16:32233:32244	36592	0	True				
ANR	36821	PtrMemberAccess	header -> arg2		36592	0					
ANR	36822	Identifier	header		36592	0					
ANR	36823	Identifier	arg2		36592	1					
ANR	36824	CompoundStatement		51:30:1795:1795	36592	1					
ANR	36825	Label	case VD_AGENT_FILE_XFER_STATUS_NOT_ENOUGH_SPACE :	932:12:32261:32308	36592	0	True				
ANR	36826	Identifier	VD_AGENT_FILE_XFER_STATUS_NOT_ENOUGH_SPACE		36592	0					
ANR	36827	CompoundStatement		53:16:1876:1931	36592	1					
ANR	36828	IdentifierDeclStatement	uint64_t free_space = GUINT64_TO_LE ( * ( ( uint64_t * ) data ) ) ;	933:16:32328:32383	36592	0	True				
ANR	36829	IdentifierDecl	free_space = GUINT64_TO_LE ( * ( ( uint64_t * ) data ) )		36592	0					
ANR	36830	IdentifierDeclType	uint64_t		36592	0					
ANR	36831	Identifier	free_space		36592	1					
ANR	36832	AssignmentExpression	free_space = GUINT64_TO_LE ( * ( ( uint64_t * ) data ) )		36592	2		=			
ANR	36833	Identifier	free_space		36592	0					
ANR	36834	CallExpression	GUINT64_TO_LE ( * ( ( uint64_t * ) data ) )		36592	1					
ANR	36835	Callee	GUINT64_TO_LE		36592	0					
ANR	36836	Identifier	GUINT64_TO_LE		36592	0					
ANR	36837	ArgumentList	* ( ( uint64_t * ) data )		36592	1					
ANR	36838	Argument	* ( ( uint64_t * ) data )		36592	0					
ANR	36839	UnaryOperationExpression	* ( ( uint64_t * ) data )		36592	0					
ANR	36840	UnaryOperator	*		36592	0					
ANR	36841	CastExpression	( uint64_t * ) data		36592	1					
ANR	36842	CastTarget	uint64_t *		36592	0					
ANR	36843	Identifier	data		36592	1					
ANR	36844	ExpressionStatement	"send_file_xfer_status ( virtio_port , ""Not enough free space. Cancelling file-xfer %u"" , header -> arg1 , header -> arg2 , ( uint8_t * ) & free_space , sizeof ( uint64_t ) )"	934:16:32401:32630	36592	1	True				
ANR	36845	CallExpression	"send_file_xfer_status ( virtio_port , ""Not enough free space. Cancelling file-xfer %u"" , header -> arg1 , header -> arg2 , ( uint8_t * ) & free_space , sizeof ( uint64_t ) )"		36592	0					
ANR	36846	Callee	send_file_xfer_status		36592	0					
ANR	36847	Identifier	send_file_xfer_status		36592	0					
ANR	36848	ArgumentList	virtio_port		36592	1					
ANR	36849	Argument	virtio_port		36592	0					
ANR	36850	Identifier	virtio_port		36592	0					
ANR	36851	Argument	"""Not enough free space. Cancelling file-xfer %u"""		36592	1					
ANR	36852	PrimaryExpression	"""Not enough free space. Cancelling file-xfer %u"""		36592	0					
ANR	36853	Argument	header -> arg1		36592	2					
ANR	36854	PtrMemberAccess	header -> arg1		36592	0					
ANR	36855	Identifier	header		36592	0					
ANR	36856	Identifier	arg1		36592	1					
ANR	36857	Argument	header -> arg2		36592	3					
ANR	36858	PtrMemberAccess	header -> arg2		36592	0					
ANR	36859	Identifier	header		36592	0					
ANR	36860	Identifier	arg2		36592	1					
ANR	36861	Argument	( uint8_t * ) & free_space		36592	4					
ANR	36862	CastExpression	( uint8_t * ) & free_space		36592	0					
ANR	36863	CastTarget	uint8_t *		36592	0					
ANR	36864	UnaryOperationExpression	& free_space		36592	1					
ANR	36865	UnaryOperator	&		36592	0					
ANR	36866	Identifier	free_space		36592	1					
ANR	36867	Argument	sizeof ( uint64_t )		36592	5					
ANR	36868	SizeofExpression	sizeof ( uint64_t )		36592	0					
ANR	36869	Sizeof	sizeof		36592	0					
ANR	36870	SizeofOperand	uint64_t		36592	1					
ANR	36871	BreakStatement	break ;	937:16:32648:32653	36592	2	True				
ANR	36872	Label	case VD_AGENT_FILE_XFER_STATUS_DISABLED :	939:12:32681:32720	36592	2	True				
ANR	36873	Identifier	VD_AGENT_FILE_XFER_STATUS_DISABLED		36592	0					
ANR	36874	ExpressionStatement	"send_file_xfer_status ( virtio_port , ""File-xfer is disabled, cancelling"" , header -> arg1 , header -> arg2 , NULL , 0 )"	940:16:32738:32884	36592	3	True				
ANR	36875	CallExpression	"send_file_xfer_status ( virtio_port , ""File-xfer is disabled, cancelling"" , header -> arg1 , header -> arg2 , NULL , 0 )"		36592	0					
ANR	36876	Callee	send_file_xfer_status		36592	0					
ANR	36877	Identifier	send_file_xfer_status		36592	0					
ANR	36878	ArgumentList	virtio_port		36592	1					
ANR	36879	Argument	virtio_port		36592	0					
ANR	36880	Identifier	virtio_port		36592	0					
ANR	36881	Argument	"""File-xfer is disabled, cancelling"""		36592	1					
ANR	36882	PrimaryExpression	"""File-xfer is disabled, cancelling"""		36592	0					
ANR	36883	Argument	header -> arg1		36592	2					
ANR	36884	PtrMemberAccess	header -> arg1		36592	0					
ANR	36885	Identifier	header		36592	0					
ANR	36886	Identifier	arg1		36592	1					
ANR	36887	Argument	header -> arg2		36592	3					
ANR	36888	PtrMemberAccess	header -> arg2		36592	0					
ANR	36889	Identifier	header		36592	0					
ANR	36890	Identifier	arg2		36592	1					
ANR	36891	Argument	NULL		36592	4					
ANR	36892	Identifier	NULL		36592	0					
ANR	36893	Argument	0		36592	5					
ANR	36894	PrimaryExpression	0		36592	0					
ANR	36895	BreakStatement	break ;	942:16:32902:32907	36592	4	True				
ANR	36896	Label	default :	943:12:32921:32928	36592	5	True				
ANR	36897	Identifier	default		36592	0					
ANR	36898	ExpressionStatement	"send_file_xfer_status ( virtio_port , NULL , header -> arg1 , header -> arg2 , NULL , 0 )"	944:16:32946:33023	36592	6	True				
ANR	36899	CallExpression	"send_file_xfer_status ( virtio_port , NULL , header -> arg1 , header -> arg2 , NULL , 0 )"		36592	0					
ANR	36900	Callee	send_file_xfer_status		36592	0					
ANR	36901	Identifier	send_file_xfer_status		36592	0					
ANR	36902	ArgumentList	virtio_port		36592	1					
ANR	36903	Argument	virtio_port		36592	0					
ANR	36904	Identifier	virtio_port		36592	0					
ANR	36905	Argument	NULL		36592	1					
ANR	36906	Identifier	NULL		36592	0					
ANR	36907	Argument	header -> arg1		36592	2					
ANR	36908	PtrMemberAccess	header -> arg1		36592	0					
ANR	36909	Identifier	header		36592	0					
ANR	36910	Identifier	arg1		36592	1					
ANR	36911	Argument	header -> arg2		36592	3					
ANR	36912	PtrMemberAccess	header -> arg2		36592	0					
ANR	36913	Identifier	header		36592	0					
ANR	36914	Identifier	arg2		36592	1					
ANR	36915	Argument	NULL		36592	4					
ANR	36916	Identifier	NULL		36592	0					
ANR	36917	Argument	0		36592	5					
ANR	36918	PrimaryExpression	0		36592	0					
ANR	36919	IfStatement	if ( header -> arg2 == VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA )		36592	1					
ANR	36920	Condition	header -> arg2 == VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA	947:12:33048:33102	36592	0	True				
ANR	36921	EqualityExpression	header -> arg2 == VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA		36592	0		==			
ANR	36922	PtrMemberAccess	header -> arg2		36592	0					
ANR	36923	Identifier	header		36592	0					
ANR	36924	Identifier	arg2		36592	1					
ANR	36925	Identifier	VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA		36592	1					
ANR	36926	ExpressionStatement	"g_hash_table_insert ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) , * connp )"	948:12:33117:33237	36592	1	True				
ANR	36927	CallExpression	"g_hash_table_insert ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) , * connp )"		36592	0					
ANR	36928	Callee	g_hash_table_insert		36592	0					
ANR	36929	Identifier	g_hash_table_insert		36592	0					
ANR	36930	ArgumentList	active_xfers		36592	1					
ANR	36931	Argument	active_xfers		36592	0					
ANR	36932	Identifier	active_xfers		36592	0					
ANR	36933	Argument	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		36592	1					
ANR	36934	CallExpression	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		36592	0					
ANR	36935	Callee	GUINT_TO_POINTER		36592	0					
ANR	36936	Identifier	GUINT_TO_POINTER		36592	0					
ANR	36937	ArgumentList	GUINT32_TO_LE ( header -> arg1 )		36592	1					
ANR	36938	Argument	GUINT32_TO_LE ( header -> arg1 )		36592	0					
ANR	36939	CallExpression	GUINT32_TO_LE ( header -> arg1 )		36592	0					
ANR	36940	Callee	GUINT32_TO_LE		36592	0					
ANR	36941	Identifier	GUINT32_TO_LE		36592	0					
ANR	36942	ArgumentList	header -> arg1		36592	1					
ANR	36943	Argument	header -> arg1		36592	0					
ANR	36944	PtrMemberAccess	header -> arg1		36592	0					
ANR	36945	Identifier	header		36592	0					
ANR	36946	Identifier	arg1		36592	1					
ANR	36947	Argument	* connp		36592	2					
ANR	36948	UnaryOperationExpression	* connp		36592	0					
ANR	36949	UnaryOperator	*		36592	0					
ANR	36950	Identifier	connp		36592	1					
ANR	36951	ElseStatement	else		36592	0					
ANR	36952	ExpressionStatement	"g_hash_table_remove ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) )"	951:12:33264:33344	36592	0	True				
ANR	36953	CallExpression	"g_hash_table_remove ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) )"		36592	0					
ANR	36954	Callee	g_hash_table_remove		36592	0					
ANR	36955	Identifier	g_hash_table_remove		36592	0					
ANR	36956	ArgumentList	active_xfers		36592	1					
ANR	36957	Argument	active_xfers		36592	0					
ANR	36958	Identifier	active_xfers		36592	0					
ANR	36959	Argument	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		36592	1					
ANR	36960	CallExpression	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		36592	0					
ANR	36961	Callee	GUINT_TO_POINTER		36592	0					
ANR	36962	Identifier	GUINT_TO_POINTER		36592	0					
ANR	36963	ArgumentList	GUINT32_TO_LE ( header -> arg1 )		36592	1					
ANR	36964	Argument	GUINT32_TO_LE ( header -> arg1 )		36592	0					
ANR	36965	CallExpression	GUINT32_TO_LE ( header -> arg1 )		36592	0					
ANR	36966	Callee	GUINT32_TO_LE		36592	0					
ANR	36967	Identifier	GUINT32_TO_LE		36592	0					
ANR	36968	ArgumentList	header -> arg1		36592	1					
ANR	36969	Argument	header -> arg1		36592	0					
ANR	36970	PtrMemberAccess	header -> arg1		36592	0					
ANR	36971	Identifier	header		36592	0					
ANR	36972	Identifier	arg1		36592	1					
ANR	36973	BreakStatement	break ;	952:8:33354:33359	36592	2	True				
ANR	36974	Label	default :	955:4:33372:33379	36592	10	True				
ANR	36975	Identifier	default		36592	0					
ANR	36976	ExpressionStatement	"syslog ( LOG_ERR , ""unknown message from vdagent: %u, ignoring"" , header -> type )"	956:8:33389:33479	36592	11	True				
ANR	36977	CallExpression	"syslog ( LOG_ERR , ""unknown message from vdagent: %u, ignoring"" , header -> type )"		36592	0					
ANR	36978	Callee	syslog		36592	0					
ANR	36979	Identifier	syslog		36592	0					
ANR	36980	ArgumentList	LOG_ERR		36592	1					
ANR	36981	Argument	LOG_ERR		36592	0					
ANR	36982	Identifier	LOG_ERR		36592	0					
ANR	36983	Argument	"""unknown message from vdagent: %u, ignoring"""		36592	1					
ANR	36984	PrimaryExpression	"""unknown message from vdagent: %u, ignoring"""		36592	0					
ANR	36985	Argument	header -> type		36592	2					
ANR	36986	PtrMemberAccess	header -> type		36592	0					
ANR	36987	Identifier	header		36592	0					
ANR	36988	Identifier	type		36592	1					
ANR	36989	ReturnType	static void		36592	1					
ANR	36990	Identifier	agent_read_complete		36592	2					
ANR	36991	ParameterList	"struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data"		36592	3					
ANR	36992	Parameter	struct udscs_connection * * connp	879:32:30362:30392	36592	0	True				
ANR	36993	ParameterType	struct udscs_connection * *		36592	0					
ANR	36994	Identifier	connp		36592	1					
ANR	36995	Parameter	struct udscs_message_header * header	880:4:30399:30433	36592	1	True				
ANR	36996	ParameterType	struct udscs_message_header *		36592	0					
ANR	36997	Identifier	header		36592	1					
ANR	36998	Parameter	uint8_t * data	880:41:30436:30448	36592	2	True				
ANR	36999	ParameterType	uint8_t *		36592	0					
ANR	37000	Identifier	data		36592	1					
ANR	37001	CFGEntryNode	ENTRY		36592		True				
ANR	37002	CFGExitNode	EXIT		36592		True				
ANR	37003	Symbol	do_agent_clipboard		36592						
ANR	37004	Symbol	data		36592						
ANR	37005	Symbol	* connp		36592						
ANR	37006	Symbol	agent_data -> screen_info		36592						
ANR	37007	Symbol	* res		36592						
ANR	37008	Symbol	agent_data -> width		36592						
ANR	37009	Symbol	LOG_ERR		36592						
ANR	37010	Symbol	agent_data		36592						
ANR	37011	Symbol	VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA		36592						
ANR	37012	Symbol	GUINT64_TO_LE		36592						
ANR	37013	Symbol	active_xfers		36592						
ANR	37014	Symbol	res		36592						
ANR	37015	Symbol	malloc		36592						
ANR	37016	Symbol	agent_data -> screen_count		36592						
ANR	37017	Symbol	* ( ( uint64_t * ) data )		36592						
ANR	37018	Symbol	connp		36592						
ANR	37019	Symbol	NULL		36592						
ANR	37020	Symbol	GUINT_TO_POINTER		36592						
ANR	37021	Symbol	header -> arg2		36592						
ANR	37022	Symbol	agent_data -> height		36592						
ANR	37023	Symbol	header -> arg1		36592						
ANR	37024	Symbol	* agent_data		36592						
ANR	37025	Symbol	GUINT32_TO_LE		36592						
ANR	37026	Symbol	* header		36592						
ANR	37027	Symbol	n		36592						
ANR	37028	Symbol	& free_space		36592						
ANR	37029	Symbol	virtio_port		36592						
ANR	37030	Symbol	header		36592						
ANR	37031	Symbol	header -> size		36592						
ANR	37032	Symbol	udscs_get_user_data		36592						
ANR	37033	Symbol	* data		36592						
ANR	37034	Symbol	header -> type		36592						
ANR	37035	Symbol	free_space		36592						
ANR	37036	Function	usage	963:0:33502:34456							
ANR	37037	FunctionDef	usage (FILE * fp)		37036	0					
ANR	37038	CompoundStatement		964:0:33530:34456	37036	0					
ANR	37039	Statement	fprintf	965:4:33536:33542	37036	0	True				
ANR	37040	Statement	(	965:11:33543:33543	37036	1	True				
ANR	37041	Statement	fp	965:12:33544:33545	37036	2	True				
ANR	37042	Statement	","	965:14:33546:33546	37036	3	True				
ANR	37043	Statement	"""Usage: spice-vdagentd [OPTIONS]\\n\\n"""	966:12:33560:33596	37036	4	True				
ANR	37044	Statement	"""Spice guest agent daemon, version %s.\\n\\n"""	967:12:33610:33652	37036	5	True				
ANR	37045	Statement	"""Options:\\n"""	968:12:33666:33677	37036	6	True				
ANR	37046	Statement	"""  -h             print this text\\n"""	969:12:33691:33726	37036	7	True				
ANR	37047	Statement	"""  -d             log debug messages (use twice for extra info)\\n"""	970:12:33740:33805	37036	8	True				
ANR	37048	Statement	"""  -s <port>      set virtio serial port  [%s]\\n"""	971:12:33819:33867	37036	9	True				
ANR	37049	Statement	"""  -S <filename>  set vdagent Unix domain socket [%s]\\n"""	972:12:33881:33936	37036	10	True				
ANR	37050	Statement	"""  -u <dev>       set uinput device       [%s]\\n"""	973:12:33950:33998	37036	11	True				
ANR	37051	Statement	"""  -f             treat uinput device as fake; no ioctls\\n"""	974:12:34012:34070	37036	12	True				
ANR	37052	Statement	"""  -x             don't daemonize\\n"""	975:12:34084:34119	37036	13	True				
ANR	37053	Statement	"""  -o             only handle one virtio serial session\\n"""	976:12:34133:34190	37036	14	True				
ANR	37054	Statement	"""  -X             disable console kit integration\\n"""	978:12:34228:34279	37036	15	True				
ANR	37055	Statement	"""  -X             disable systemd-logind integration\\n"""	981:12:34329:34383	37036	16	True				
ANR	37056	Statement	","	983:12:34404:34404	37036	17	True				
ANR	37057	Statement	VERSION	983:13:34405:34411	37036	18	True				
ANR	37058	Statement	","	983:20:34412:34412	37036	19	True				
ANR	37059	Statement	portdev	983:22:34414:34420	37036	20	True				
ANR	37060	Statement	","	983:29:34421:34421	37036	21	True				
ANR	37061	Statement	vdagentd_socket	983:31:34423:34437	37036	22	True				
ANR	37062	Statement	","	983:46:34438:34438	37036	23	True				
ANR	37063	Statement	uinput_device	983:48:34440:34452	37036	24	True				
ANR	37064	Statement	)	983:61:34453:34453	37036	25	True				
ANR	37065	ExpressionStatement		983:62:34454:34454	37036	26	True				
ANR	37066	ReturnType	static void		37036	1					
ANR	37067	Identifier	usage		37036	2					
ANR	37068	ParameterList	FILE * fp		37036	3					
ANR	37069	Parameter	FILE * fp	963:18:33520:33527	37036	0	True				
ANR	37070	ParameterType	FILE *		37036	0					
ANR	37071	Identifier	fp		37036	1					
ANR	37072	CFGEntryNode	ENTRY		37036		True				
ANR	37073	CFGExitNode	EXIT		37036		True				
ANR	37074	Symbol	fp		37036						
ANR	37075	Function	daemonize	986:0:34459:35026							
ANR	37076	FunctionDef	daemonize ()		37075	0					
ANR	37077	CompoundStatement		987:0:34487:35026	37075	0					
ANR	37078	IdentifierDeclStatement	int x ;	988:4:34493:34498	37075	0	True				
ANR	37079	IdentifierDecl	x		37075	0					
ANR	37080	IdentifierDeclType	int		37075	0					
ANR	37081	Identifier	x		37075	1					
ANR	37082	IdentifierDeclStatement	FILE * pidfile ;	989:4:34504:34517	37075	1	True				
ANR	37083	IdentifierDecl	* pidfile		37075	0					
ANR	37084	IdentifierDeclType	FILE *		37075	0					
ANR	37085	Identifier	pidfile		37075	1					
ANR	37086	SwitchStatement	switch ( fork ( ) )		37075	2					
ANR	37087	Condition	fork ( )	992:12:34563:34568	37075	0	True				
ANR	37088	CallExpression	fork ( )		37075	0					
ANR	37089	Callee	fork		37075	0					
ANR	37090	Identifier	fork		37075	0					
ANR	37091	ArgumentList			37075	1					
ANR	37092	CompoundStatement		6:20:83:83	37075	1					
ANR	37093	Label	case 0 :	993:4:34577:34583	37075	0	True				
ANR	37094	ExpressionStatement	close ( 0 )	994:8:34593:34601	37075	1	True				
ANR	37095	CallExpression	close ( 0 )		37075	0					
ANR	37096	Callee	close		37075	0					
ANR	37097	Identifier	close		37075	0					
ANR	37098	ArgumentList	0		37075	1					
ANR	37099	Argument	0		37075	0					
ANR	37100	PrimaryExpression	0		37075	0					
ANR	37101	ExpressionStatement	close ( 1 )	994:18:34603:34611	37075	2	True				
ANR	37102	CallExpression	close ( 1 )		37075	0					
ANR	37103	Callee	close		37075	0					
ANR	37104	Identifier	close		37075	0					
ANR	37105	ArgumentList	1		37075	1					
ANR	37106	Argument	1		37075	0					
ANR	37107	PrimaryExpression	1		37075	0					
ANR	37108	ExpressionStatement	close ( 2 )	994:28:34613:34621	37075	3	True				
ANR	37109	CallExpression	close ( 2 )		37075	0					
ANR	37110	Callee	close		37075	0					
ANR	37111	Identifier	close		37075	0					
ANR	37112	ArgumentList	2		37075	1					
ANR	37113	Argument	2		37075	0					
ANR	37114	PrimaryExpression	2		37075	0					
ANR	37115	ExpressionStatement	setsid ( )	995:8:34631:34639	37075	4	True				
ANR	37116	CallExpression	setsid ( )		37075	0					
ANR	37117	Callee	setsid		37075	0					
ANR	37118	Identifier	setsid		37075	0					
ANR	37119	ArgumentList			37075	1					
ANR	37120	ExpressionStatement	"x = open ( ""/dev/null"" , O_RDWR )"	996:8:34649:34678	37075	5	True				
ANR	37121	AssignmentExpression	"x = open ( ""/dev/null"" , O_RDWR )"		37075	0		=			
ANR	37122	Identifier	x		37075	0					
ANR	37123	CallExpression	"open ( ""/dev/null"" , O_RDWR )"		37075	1					
ANR	37124	Callee	open		37075	0					
ANR	37125	Identifier	open		37075	0					
ANR	37126	ArgumentList	"""/dev/null"""		37075	1					
ANR	37127	Argument	"""/dev/null"""		37075	0					
ANR	37128	PrimaryExpression	"""/dev/null"""		37075	0					
ANR	37129	Argument	O_RDWR		37075	1					
ANR	37130	Identifier	O_RDWR		37075	0					
ANR	37131	ExpressionStatement	x = dup ( x )	996:39:34680:34690	37075	6	True				
ANR	37132	AssignmentExpression	x = dup ( x )		37075	0		=			
ANR	37133	Identifier	x		37075	0					
ANR	37134	CallExpression	dup ( x )		37075	1					
ANR	37135	Callee	dup		37075	0					
ANR	37136	Identifier	dup		37075	0					
ANR	37137	ArgumentList	x		37075	1					
ANR	37138	Argument	x		37075	0					
ANR	37139	Identifier	x		37075	0					
ANR	37140	ExpressionStatement	x = dup ( x )	996:51:34692:34702	37075	7	True				
ANR	37141	AssignmentExpression	x = dup ( x )		37075	0		=			
ANR	37142	Identifier	x		37075	0					
ANR	37143	CallExpression	dup ( x )		37075	1					
ANR	37144	Callee	dup		37075	0					
ANR	37145	Identifier	dup		37075	0					
ANR	37146	ArgumentList	x		37075	1					
ANR	37147	Argument	x		37075	0					
ANR	37148	Identifier	x		37075	0					
ANR	37149	ExpressionStatement	"pidfile = fopen ( pidfilename , ""w"" )"	997:8:34712:34745	37075	8	True				
ANR	37150	AssignmentExpression	"pidfile = fopen ( pidfilename , ""w"" )"		37075	0		=			
ANR	37151	Identifier	pidfile		37075	0					
ANR	37152	CallExpression	"fopen ( pidfilename , ""w"" )"		37075	1					
ANR	37153	Callee	fopen		37075	0					
ANR	37154	Identifier	fopen		37075	0					
ANR	37155	ArgumentList	pidfilename		37075	1					
ANR	37156	Argument	pidfilename		37075	0					
ANR	37157	Identifier	pidfilename		37075	0					
ANR	37158	Argument	"""w"""		37075	1					
ANR	37159	PrimaryExpression	"""w"""		37075	0					
ANR	37160	IfStatement	if ( pidfile )		37075	9					
ANR	37161	Condition	pidfile	998:12:34759:34765	37075	0	True				
ANR	37162	Identifier	pidfile		37075	0					
ANR	37163	CompoundStatement		12:21:280:280	37075	1					
ANR	37164	ExpressionStatement	"fprintf ( pidfile , ""%d\\n"" , ( int ) getpid ( ) )"	999:12:34782:34821	37075	0	True				
ANR	37165	CallExpression	"fprintf ( pidfile , ""%d\\n"" , ( int ) getpid ( ) )"		37075	0					
ANR	37166	Callee	fprintf		37075	0					
ANR	37167	Identifier	fprintf		37075	0					
ANR	37168	ArgumentList	pidfile		37075	1					
ANR	37169	Argument	pidfile		37075	0					
ANR	37170	Identifier	pidfile		37075	0					
ANR	37171	Argument	"""%d\\n"""		37075	1					
ANR	37172	PrimaryExpression	"""%d\\n"""		37075	0					
ANR	37173	Argument	( int ) getpid ( )		37075	2					
ANR	37174	CastExpression	( int ) getpid ( )		37075	0					
ANR	37175	CastTarget	int		37075	0					
ANR	37176	CallExpression	getpid ( )		37075	1					
ANR	37177	Callee	getpid		37075	0					
ANR	37178	Identifier	getpid		37075	0					
ANR	37179	ArgumentList			37075	1					
ANR	37180	ExpressionStatement	fclose ( pidfile )	1000:12:34835:34850	37075	1	True				
ANR	37181	CallExpression	fclose ( pidfile )		37075	0					
ANR	37182	Callee	fclose		37075	0					
ANR	37183	Identifier	fclose		37075	0					
ANR	37184	ArgumentList	pidfile		37075	1					
ANR	37185	Argument	pidfile		37075	0					
ANR	37186	Identifier	pidfile		37075	0					
ANR	37187	BreakStatement	break ;	1002:8:34870:34875	37075	10	True				
ANR	37188	Statement	case	1003:4:34881:34884	37075	11	True				
ANR	37189	Statement	-	1003:9:34886:34886	37075	12	True				
ANR	37190	Label	1 :	1003:10:34887:34888	37075	13	True				
ANR	37191	ExpressionStatement	"syslog ( LOG_ERR , ""fork: %m"" )"	1004:8:34898:34925	37075	14	True				
ANR	37192	CallExpression	"syslog ( LOG_ERR , ""fork: %m"" )"		37075	0					
ANR	37193	Callee	syslog		37075	0					
ANR	37194	Identifier	syslog		37075	0					
ANR	37195	ArgumentList	LOG_ERR		37075	1					
ANR	37196	Argument	LOG_ERR		37075	0					
ANR	37197	Identifier	LOG_ERR		37075	0					
ANR	37198	Argument	"""fork: %m"""		37075	1					
ANR	37199	PrimaryExpression	"""fork: %m"""		37075	0					
ANR	37200	ExpressionStatement	retval = 1	1005:8:34935:34945	37075	15	True				
ANR	37201	AssignmentExpression	retval = 1		37075	0		=			
ANR	37202	Identifier	retval		37075	0					
ANR	37203	PrimaryExpression	1		37075	1					
ANR	37204	Label	default :	1006:4:34951:34958	37075	16	True				
ANR	37205	Identifier	default		37075	0					
ANR	37206	ExpressionStatement	udscs_destroy_server ( server )	1007:8:34968:34996	37075	17	True				
ANR	37207	CallExpression	udscs_destroy_server ( server )		37075	0					
ANR	37208	Callee	udscs_destroy_server		37075	0					
ANR	37209	Identifier	udscs_destroy_server		37075	0					
ANR	37210	ArgumentList	server		37075	1					
ANR	37211	Argument	server		37075	0					
ANR	37212	Identifier	server		37075	0					
ANR	37213	ExpressionStatement	exit ( retval )	1008:8:35006:35018	37075	18	True				
ANR	37214	CallExpression	exit ( retval )		37075	0					
ANR	37215	Callee	exit		37075	0					
ANR	37216	Identifier	exit		37075	0					
ANR	37217	ArgumentList	retval		37075	1					
ANR	37218	Argument	retval		37075	0					
ANR	37219	Identifier	retval		37075	0					
ANR	37220	ReturnType	static void		37075	1					
ANR	37221	Identifier	daemonize		37075	2					
ANR	37222	ParameterList			37075	3					
ANR	37223	CFGEntryNode	ENTRY		37075		True				
ANR	37224	CFGExitNode	EXIT		37075		True				
ANR	37225	Symbol	pidfile		37075						
ANR	37226	Symbol	fopen		37075						
ANR	37227	Symbol	server		37075						
ANR	37228	Symbol	fork		37075						
ANR	37229	Symbol	O_RDWR		37075						
ANR	37230	Symbol	LOG_ERR		37075						
ANR	37231	Symbol	x		37075						
ANR	37232	Symbol	getpid		37075						
ANR	37233	Symbol	open		37075						
ANR	37234	Symbol	dup		37075						
ANR	37235	Symbol	retval		37075						
ANR	37236	Symbol	pidfilename		37075						
ANR	37237	Function	main_loop	1012:0:35029:37148							
ANR	37238	FunctionDef	main_loop ()		37237	0					
ANR	37239	CompoundStatement		1013:0:35057:37148	37237	0					
ANR	37240	IdentifierDeclStatement	"fd_set readfds , writefds ;"	1014:4:35063:35087	37237	0	True				
ANR	37241	IdentifierDecl	readfds		37237	0					
ANR	37242	IdentifierDeclType	fd_set		37237	0					
ANR	37243	Identifier	readfds		37237	1					
ANR	37244	IdentifierDecl	writefds		37237	1					
ANR	37245	IdentifierDeclType	fd_set		37237	0					
ANR	37246	Identifier	writefds		37237	1					
ANR	37247	IdentifierDeclStatement	"int n , nfds ;"	1015:4:35093:35104	37237	1	True				
ANR	37248	IdentifierDecl	n		37237	0					
ANR	37249	IdentifierDeclType	int		37237	0					
ANR	37250	Identifier	n		37237	1					
ANR	37251	IdentifierDecl	nfds		37237	1					
ANR	37252	IdentifierDeclType	int		37237	0					
ANR	37253	Identifier	nfds		37237	1					
ANR	37254	IdentifierDeclStatement	int ck_fd = 0 ;	1016:4:35110:35123	37237	2	True				
ANR	37255	IdentifierDecl	ck_fd = 0		37237	0					
ANR	37256	IdentifierDeclType	int		37237	0					
ANR	37257	Identifier	ck_fd		37237	1					
ANR	37258	AssignmentExpression	ck_fd = 0		37237	2		=			
ANR	37259	Identifier	ck_fd		37237	0					
ANR	37260	PrimaryExpression	0		37237	1					
ANR	37261	IdentifierDeclStatement	int once = 0 ;	1017:4:35129:35141	37237	3	True				
ANR	37262	IdentifierDecl	once = 0		37237	0					
ANR	37263	IdentifierDeclType	int		37237	0					
ANR	37264	Identifier	once		37237	1					
ANR	37265	AssignmentExpression	once = 0		37237	2		=			
ANR	37266	Identifier	once		37237	0					
ANR	37267	PrimaryExpression	0		37237	1					
ANR	37268	WhileStatement	while ( ! quit )		37237	4					
ANR	37269	Condition	! quit	1019:11:35155:35159	37237	0	True				
ANR	37270	UnaryOperationExpression	! quit		37237	0					
ANR	37271	UnaryOperator	!		37237	0					
ANR	37272	Identifier	quit		37237	1					
ANR	37273	CompoundStatement		7:18:104:104	37237	1					
ANR	37274	ExpressionStatement	FD_ZERO ( & readfds )	1020:8:35172:35189	37237	0	True				
ANR	37275	CallExpression	FD_ZERO ( & readfds )		37237	0					
ANR	37276	Callee	FD_ZERO		37237	0					
ANR	37277	Identifier	FD_ZERO		37237	0					
ANR	37278	ArgumentList	& readfds		37237	1					
ANR	37279	Argument	& readfds		37237	0					
ANR	37280	UnaryOperationExpression	& readfds		37237	0					
ANR	37281	UnaryOperator	&		37237	0					
ANR	37282	Identifier	readfds		37237	1					
ANR	37283	ExpressionStatement	FD_ZERO ( & writefds )	1021:8:35199:35217	37237	1	True				
ANR	37284	CallExpression	FD_ZERO ( & writefds )		37237	0					
ANR	37285	Callee	FD_ZERO		37237	0					
ANR	37286	Identifier	FD_ZERO		37237	0					
ANR	37287	ArgumentList	& writefds		37237	1					
ANR	37288	Argument	& writefds		37237	0					
ANR	37289	UnaryOperationExpression	& writefds		37237	0					
ANR	37290	UnaryOperator	&		37237	0					
ANR	37291	Identifier	writefds		37237	1					
ANR	37292	ExpressionStatement	"nfds = udscs_server_fill_fds ( server , & readfds , & writefds )"	1023:8:35228:35285	37237	2	True				
ANR	37293	AssignmentExpression	"nfds = udscs_server_fill_fds ( server , & readfds , & writefds )"		37237	0		=			
ANR	37294	Identifier	nfds		37237	0					
ANR	37295	CallExpression	"udscs_server_fill_fds ( server , & readfds , & writefds )"		37237	1					
ANR	37296	Callee	udscs_server_fill_fds		37237	0					
ANR	37297	Identifier	udscs_server_fill_fds		37237	0					
ANR	37298	ArgumentList	server		37237	1					
ANR	37299	Argument	server		37237	0					
ANR	37300	Identifier	server		37237	0					
ANR	37301	Argument	& readfds		37237	1					
ANR	37302	UnaryOperationExpression	& readfds		37237	0					
ANR	37303	UnaryOperator	&		37237	0					
ANR	37304	Identifier	readfds		37237	1					
ANR	37305	Argument	& writefds		37237	2					
ANR	37306	UnaryOperationExpression	& writefds		37237	0					
ANR	37307	UnaryOperator	&		37237	0					
ANR	37308	Identifier	writefds		37237	1					
ANR	37309	ExpressionStatement	"n = vdagent_virtio_port_fill_fds ( virtio_port , & readfds , & writefds )"	1024:8:35295:35361	37237	3	True				
ANR	37310	AssignmentExpression	"n = vdagent_virtio_port_fill_fds ( virtio_port , & readfds , & writefds )"		37237	0		=			
ANR	37311	Identifier	n		37237	0					
ANR	37312	CallExpression	"vdagent_virtio_port_fill_fds ( virtio_port , & readfds , & writefds )"		37237	1					
ANR	37313	Callee	vdagent_virtio_port_fill_fds		37237	0					
ANR	37314	Identifier	vdagent_virtio_port_fill_fds		37237	0					
ANR	37315	ArgumentList	virtio_port		37237	1					
ANR	37316	Argument	virtio_port		37237	0					
ANR	37317	Identifier	virtio_port		37237	0					
ANR	37318	Argument	& readfds		37237	1					
ANR	37319	UnaryOperationExpression	& readfds		37237	0					
ANR	37320	UnaryOperator	&		37237	0					
ANR	37321	Identifier	readfds		37237	1					
ANR	37322	Argument	& writefds		37237	2					
ANR	37323	UnaryOperationExpression	& writefds		37237	0					
ANR	37324	UnaryOperator	&		37237	0					
ANR	37325	Identifier	writefds		37237	1					
ANR	37326	IfStatement	if ( n >= nfds )		37237	4					
ANR	37327	Condition	n >= nfds	1025:12:35375:35383	37237	0	True				
ANR	37328	RelationalExpression	n >= nfds		37237	0		>=			
ANR	37329	Identifier	n		37237	0					
ANR	37330	Identifier	nfds		37237	1					
ANR	37331	ExpressionStatement	nfds = n + 1	1026:12:35398:35410	37237	1	True				
ANR	37332	AssignmentExpression	nfds = n + 1		37237	0		=			
ANR	37333	Identifier	nfds		37237	0					
ANR	37334	AdditiveExpression	n + 1		37237	1		+			
ANR	37335	Identifier	n		37237	0					
ANR	37336	PrimaryExpression	1		37237	1					
ANR	37337	IfStatement	if ( session_info )		37237	5					
ANR	37338	Condition	session_info	1028:12:35425:35436	37237	0	True				
ANR	37339	Identifier	session_info		37237	0					
ANR	37340	CompoundStatement		16:26:381:381	37237	1					
ANR	37341	ExpressionStatement	ck_fd = session_info_get_fd ( session_info )	1029:12:35453:35494	37237	0	True				
ANR	37342	AssignmentExpression	ck_fd = session_info_get_fd ( session_info )		37237	0		=			
ANR	37343	Identifier	ck_fd		37237	0					
ANR	37344	CallExpression	session_info_get_fd ( session_info )		37237	1					
ANR	37345	Callee	session_info_get_fd		37237	0					
ANR	37346	Identifier	session_info_get_fd		37237	0					
ANR	37347	ArgumentList	session_info		37237	1					
ANR	37348	Argument	session_info		37237	0					
ANR	37349	Identifier	session_info		37237	0					
ANR	37350	ExpressionStatement	"FD_SET ( ck_fd , & readfds )"	1030:12:35508:35531	37237	1	True				
ANR	37351	CallExpression	"FD_SET ( ck_fd , & readfds )"		37237	0					
ANR	37352	Callee	FD_SET		37237	0					
ANR	37353	Identifier	FD_SET		37237	0					
ANR	37354	ArgumentList	ck_fd		37237	1					
ANR	37355	Argument	ck_fd		37237	0					
ANR	37356	Identifier	ck_fd		37237	0					
ANR	37357	Argument	& readfds		37237	1					
ANR	37358	UnaryOperationExpression	& readfds		37237	0					
ANR	37359	UnaryOperator	&		37237	0					
ANR	37360	Identifier	readfds		37237	1					
ANR	37361	IfStatement	if ( ck_fd >= nfds )		37237	2					
ANR	37362	Condition	ck_fd >= nfds	1031:16:35549:35561	37237	0	True				
ANR	37363	RelationalExpression	ck_fd >= nfds		37237	0		>=			
ANR	37364	Identifier	ck_fd		37237	0					
ANR	37365	Identifier	nfds		37237	1					
ANR	37366	ExpressionStatement	nfds = ck_fd + 1	1032:16:35580:35596	37237	1	True				
ANR	37367	AssignmentExpression	nfds = ck_fd + 1		37237	0		=			
ANR	37368	Identifier	nfds		37237	0					
ANR	37369	AdditiveExpression	ck_fd + 1		37237	1		+			
ANR	37370	Identifier	ck_fd		37237	0					
ANR	37371	PrimaryExpression	1		37237	1					
ANR	37372	ExpressionStatement	"n = select ( nfds , & readfds , & writefds , NULL , NULL )"	1035:8:35617:35666	37237	6	True				
ANR	37373	AssignmentExpression	"n = select ( nfds , & readfds , & writefds , NULL , NULL )"		37237	0		=			
ANR	37374	Identifier	n		37237	0					
ANR	37375	CallExpression	"select ( nfds , & readfds , & writefds , NULL , NULL )"		37237	1					
ANR	37376	Callee	select		37237	0					
ANR	37377	Identifier	select		37237	0					
ANR	37378	ArgumentList	nfds		37237	1					
ANR	37379	Argument	nfds		37237	0					
ANR	37380	Identifier	nfds		37237	0					
ANR	37381	Argument	& readfds		37237	1					
ANR	37382	UnaryOperationExpression	& readfds		37237	0					
ANR	37383	UnaryOperator	&		37237	0					
ANR	37384	Identifier	readfds		37237	1					
ANR	37385	Argument	& writefds		37237	2					
ANR	37386	UnaryOperationExpression	& writefds		37237	0					
ANR	37387	UnaryOperator	&		37237	0					
ANR	37388	Identifier	writefds		37237	1					
ANR	37389	Argument	NULL		37237	3					
ANR	37390	Identifier	NULL		37237	0					
ANR	37391	Argument	NULL		37237	4					
ANR	37392	Identifier	NULL		37237	0					
ANR	37393	IfStatement	if ( n == - 1 )		37237	7					
ANR	37394	Condition	n == - 1	1036:12:35680:35686	37237	0	True				
ANR	37395	EqualityExpression	n == - 1		37237	0		==			
ANR	37396	Identifier	n		37237	0					
ANR	37397	UnaryOperationExpression	- 1		37237	1					
ANR	37398	UnaryOperator	-		37237	0					
ANR	37399	PrimaryExpression	1		37237	1					
ANR	37400	CompoundStatement		24:21:631:631	37237	1					
ANR	37401	IfStatement	if ( errno == EINTR )		37237	0					
ANR	37402	Condition	errno == EINTR	1037:16:35707:35720	37237	0	True				
ANR	37403	EqualityExpression	errno == EINTR		37237	0		==			
ANR	37404	Identifier	errno		37237	0					
ANR	37405	Identifier	EINTR		37237	1					
ANR	37406	ContinueStatement	continue ;	1038:16:35739:35747	37237	1	True				
ANR	37407	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal error select: %m"" )"	1039:12:35761:35803	37237	1	True				
ANR	37408	CallExpression	"syslog ( LOG_CRIT , ""Fatal error select: %m"" )"		37237	0					
ANR	37409	Callee	syslog		37237	0					
ANR	37410	Identifier	syslog		37237	0					
ANR	37411	ArgumentList	LOG_CRIT		37237	1					
ANR	37412	Argument	LOG_CRIT		37237	0					
ANR	37413	Identifier	LOG_CRIT		37237	0					
ANR	37414	Argument	"""Fatal error select: %m"""		37237	1					
ANR	37415	PrimaryExpression	"""Fatal error select: %m"""		37237	0					
ANR	37416	ExpressionStatement	retval = 1	1040:12:35817:35827	37237	2	True				
ANR	37417	AssignmentExpression	retval = 1		37237	0		=			
ANR	37418	Identifier	retval		37237	0					
ANR	37419	PrimaryExpression	1		37237	1					
ANR	37420	BreakStatement	break ;	1041:12:35841:35846	37237	3	True				
ANR	37421	ExpressionStatement	"udscs_server_handle_fds ( server , & readfds , & writefds )"	1044:8:35867:35919	37237	8	True				
ANR	37422	CallExpression	"udscs_server_handle_fds ( server , & readfds , & writefds )"		37237	0					
ANR	37423	Callee	udscs_server_handle_fds		37237	0					
ANR	37424	Identifier	udscs_server_handle_fds		37237	0					
ANR	37425	ArgumentList	server		37237	1					
ANR	37426	Argument	server		37237	0					
ANR	37427	Identifier	server		37237	0					
ANR	37428	Argument	& readfds		37237	1					
ANR	37429	UnaryOperationExpression	& readfds		37237	0					
ANR	37430	UnaryOperator	&		37237	0					
ANR	37431	Identifier	readfds		37237	1					
ANR	37432	Argument	& writefds		37237	2					
ANR	37433	UnaryOperationExpression	& writefds		37237	0					
ANR	37434	UnaryOperator	&		37237	0					
ANR	37435	Identifier	writefds		37237	1					
ANR	37436	IfStatement	if ( virtio_port )		37237	9					
ANR	37437	Condition	virtio_port	1046:12:35934:35944	37237	0	True				
ANR	37438	Identifier	virtio_port		37237	0					
ANR	37439	CompoundStatement		34:25:889:889	37237	1					
ANR	37440	ExpressionStatement	once = 1	1047:12:35961:35969	37237	0	True				
ANR	37441	AssignmentExpression	once = 1		37237	0		=			
ANR	37442	Identifier	once		37237	0					
ANR	37443	PrimaryExpression	1		37237	1					
ANR	37444	ExpressionStatement	"vdagent_virtio_port_handle_fds ( & virtio_port , & readfds , & writefds )"	1048:12:35983:36048	37237	1	True				
ANR	37445	CallExpression	"vdagent_virtio_port_handle_fds ( & virtio_port , & readfds , & writefds )"		37237	0					
ANR	37446	Callee	vdagent_virtio_port_handle_fds		37237	0					
ANR	37447	Identifier	vdagent_virtio_port_handle_fds		37237	0					
ANR	37448	ArgumentList	& virtio_port		37237	1					
ANR	37449	Argument	& virtio_port		37237	0					
ANR	37450	UnaryOperationExpression	& virtio_port		37237	0					
ANR	37451	UnaryOperator	&		37237	0					
ANR	37452	Identifier	virtio_port		37237	1					
ANR	37453	Argument	& readfds		37237	1					
ANR	37454	UnaryOperationExpression	& readfds		37237	0					
ANR	37455	UnaryOperator	&		37237	0					
ANR	37456	Identifier	readfds		37237	1					
ANR	37457	Argument	& writefds		37237	2					
ANR	37458	UnaryOperationExpression	& writefds		37237	0					
ANR	37459	UnaryOperator	&		37237	0					
ANR	37460	Identifier	writefds		37237	1					
ANR	37461	IfStatement	if ( ! virtio_port )		37237	2					
ANR	37462	Condition	! virtio_port	1049:16:36066:36077	37237	0	True				
ANR	37463	UnaryOperationExpression	! virtio_port		37237	0					
ANR	37464	UnaryOperator	!		37237	0					
ANR	37465	Identifier	virtio_port		37237	1					
ANR	37466	CompoundStatement		38:16:1040:1083	37237	1					
ANR	37467	IdentifierDeclStatement	int old_client_connected = client_connected ;	1050:16:36098:36141	37237	0	True				
ANR	37468	IdentifierDecl	old_client_connected = client_connected		37237	0					
ANR	37469	IdentifierDeclType	int		37237	0					
ANR	37470	Identifier	old_client_connected		37237	1					
ANR	37471	AssignmentExpression	old_client_connected = client_connected		37237	2		=			
ANR	37472	Identifier	client_connected		37237	0					
ANR	37473	Identifier	client_connected		37237	1					
ANR	37474	ExpressionStatement	"syslog ( LOG_CRIT , ""AIIEEE lost spice client connection, reconnecting"" )"	1051:16:36159:36251	37237	1	True				
ANR	37475	CallExpression	"syslog ( LOG_CRIT , ""AIIEEE lost spice client connection, reconnecting"" )"		37237	0					
ANR	37476	Callee	syslog		37237	0					
ANR	37477	Identifier	syslog		37237	0					
ANR	37478	ArgumentList	LOG_CRIT		37237	1					
ANR	37479	Argument	LOG_CRIT		37237	0					
ANR	37480	Identifier	LOG_CRIT		37237	0					
ANR	37481	Argument	"""AIIEEE lost spice client connection, reconnecting"""		37237	1					
ANR	37482	PrimaryExpression	"""AIIEEE lost spice client connection, reconnecting"""		37237	0					
ANR	37483	ExpressionStatement	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"	1053:16:36269:36457	37237	2	True				
ANR	37484	AssignmentExpression	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		37237	0		=			
ANR	37485	Identifier	virtio_port		37237	0					
ANR	37486	CallExpression	"vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		37237	1					
ANR	37487	Callee	vdagent_virtio_port_create		37237	0					
ANR	37488	Identifier	vdagent_virtio_port_create		37237	0					
ANR	37489	ArgumentList	portdev		37237	1					
ANR	37490	Argument	portdev		37237	0					
ANR	37491	Identifier	portdev		37237	0					
ANR	37492	Argument	virtio_port_read_complete		37237	1					
ANR	37493	Identifier	virtio_port_read_complete		37237	0					
ANR	37494	Argument	NULL		37237	2					
ANR	37495	Identifier	NULL		37237	0					
ANR	37496	IfStatement	if ( ! virtio_port )		37237	3					
ANR	37497	Condition	! virtio_port	1056:20:36479:36490	37237	0	True				
ANR	37498	UnaryOperationExpression	! virtio_port		37237	0					
ANR	37499	UnaryOperator	!		37237	0					
ANR	37500	Identifier	virtio_port		37237	1					
ANR	37501	CompoundStatement		44:34:1435:1435	37237	1					
ANR	37502	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"	1057:20:36515:36604	37237	0	True				
ANR	37503	CallExpression	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"		37237	0					
ANR	37504	Callee	syslog		37237	0					
ANR	37505	Identifier	syslog		37237	0					
ANR	37506	ArgumentList	LOG_CRIT		37237	1					
ANR	37507	Argument	LOG_CRIT		37237	0					
ANR	37508	Identifier	LOG_CRIT		37237	0					
ANR	37509	Argument	"""Fatal error opening vdagent virtio channel"""		37237	1					
ANR	37510	PrimaryExpression	"""Fatal error opening vdagent virtio channel"""		37237	0					
ANR	37511	ExpressionStatement	retval = 1	1059:20:36626:36636	37237	1	True				
ANR	37512	AssignmentExpression	retval = 1		37237	0		=			
ANR	37513	Identifier	retval		37237	0					
ANR	37514	PrimaryExpression	1		37237	1					
ANR	37515	BreakStatement	break ;	1060:20:36658:36663	37237	2	True				
ANR	37516	ExpressionStatement	do_client_disconnect ( )	1062:16:36699:36721	37237	4	True				
ANR	37517	CallExpression	do_client_disconnect ( )		37237	0					
ANR	37518	Callee	do_client_disconnect		37237	0					
ANR	37519	Identifier	do_client_disconnect		37237	0					
ANR	37520	ArgumentList			37237	1					
ANR	37521	ExpressionStatement	client_connected = old_client_connected	1063:16:36739:36778	37237	5	True				
ANR	37522	AssignmentExpression	client_connected = old_client_connected		37237	0		=			
ANR	37523	Identifier	client_connected		37237	0					
ANR	37524	Identifier	old_client_connected		37237	1					
ANR	37525	ElseStatement	else		37237	0					
ANR	37526	IfStatement	if ( only_once && once )		37237	0					
ANR	37527	Condition	only_once && once	1066:17:36821:36837	37237	0	True				
ANR	37528	AndExpression	only_once && once		37237	0		&&			
ANR	37529	Identifier	only_once		37237	0					
ANR	37530	Identifier	once		37237	1					
ANR	37531	CompoundStatement		55:8:1790:1790	37237	1					
ANR	37532	ExpressionStatement	"syslog ( LOG_INFO , ""Exiting after one client session."" )"	1068:12:36862:36915	37237	0	True				
ANR	37533	CallExpression	"syslog ( LOG_INFO , ""Exiting after one client session."" )"		37237	0					
ANR	37534	Callee	syslog		37237	0					
ANR	37535	Identifier	syslog		37237	0					
ANR	37536	ArgumentList	LOG_INFO		37237	1					
ANR	37537	Argument	LOG_INFO		37237	0					
ANR	37538	Identifier	LOG_INFO		37237	0					
ANR	37539	Argument	"""Exiting after one client session."""		37237	1					
ANR	37540	PrimaryExpression	"""Exiting after one client session."""		37237	0					
ANR	37541	BreakStatement	break ;	1069:12:36929:36934	37237	1	True				
ANR	37542	IfStatement	"if ( session_info && FD_ISSET ( ck_fd , & readfds ) )"		37237	10					
ANR	37543	Condition	"session_info && FD_ISSET ( ck_fd , & readfds )"	1072:12:36959:36999	37237	0	True				
ANR	37544	AndExpression	"session_info && FD_ISSET ( ck_fd , & readfds )"		37237	0		&&			
ANR	37545	Identifier	session_info		37237	0					
ANR	37546	CallExpression	"FD_ISSET ( ck_fd , & readfds )"		37237	1					
ANR	37547	Callee	FD_ISSET		37237	0					
ANR	37548	Identifier	FD_ISSET		37237	0					
ANR	37549	ArgumentList	ck_fd		37237	1					
ANR	37550	Argument	ck_fd		37237	0					
ANR	37551	Identifier	ck_fd		37237	0					
ANR	37552	Argument	& readfds		37237	1					
ANR	37553	UnaryOperationExpression	& readfds		37237	0					
ANR	37554	UnaryOperator	&		37237	0					
ANR	37555	Identifier	readfds		37237	1					
ANR	37556	CompoundStatement		60:55:1944:1944	37237	1					
ANR	37557	ExpressionStatement	active_session = session_info_get_active_session ( session_info )	1073:12:37016:37078	37237	0	True				
ANR	37558	AssignmentExpression	active_session = session_info_get_active_session ( session_info )		37237	0		=			
ANR	37559	Identifier	active_session		37237	0					
ANR	37560	CallExpression	session_info_get_active_session ( session_info )		37237	1					
ANR	37561	Callee	session_info_get_active_session		37237	0					
ANR	37562	Identifier	session_info_get_active_session		37237	0					
ANR	37563	ArgumentList	session_info		37237	1					
ANR	37564	Argument	session_info		37237	0					
ANR	37565	Identifier	session_info		37237	0					
ANR	37566	ExpressionStatement	update_active_session_connection ( NULL )	1074:12:37092:37130	37237	1	True				
ANR	37567	CallExpression	update_active_session_connection ( NULL )		37237	0					
ANR	37568	Callee	update_active_session_connection		37237	0					
ANR	37569	Identifier	update_active_session_connection		37237	0					
ANR	37570	ArgumentList	NULL		37237	1					
ANR	37571	Argument	NULL		37237	0					
ANR	37572	Identifier	NULL		37237	0					
ANR	37573	ReturnType	static void		37237	1					
ANR	37574	Identifier	main_loop		37237	2					
ANR	37575	ParameterList			37237	3					
ANR	37576	CFGEntryNode	ENTRY		37237		True				
ANR	37577	CFGExitNode	EXIT		37237		True				
ANR	37578	Symbol	server		37237						
ANR	37579	Symbol	select		37237						
ANR	37580	Symbol	only_once		37237						
ANR	37581	Symbol	LOG_INFO		37237						
ANR	37582	Symbol	session_info_get_fd		37237						
ANR	37583	Symbol	EINTR		37237						
ANR	37584	Symbol	client_connected		37237						
ANR	37585	Symbol	session_info_get_active_session		37237						
ANR	37586	Symbol	writefds		37237						
ANR	37587	Symbol	vdagent_virtio_port_fill_fds		37237						
ANR	37588	Symbol	old_client_connected		37237						
ANR	37589	Symbol	ck_fd		37237						
ANR	37590	Symbol	& virtio_port		37237						
ANR	37591	Symbol	portdev		37237						
ANR	37592	Symbol	& writefds		37237						
ANR	37593	Symbol	FD_ISSET		37237						
ANR	37594	Symbol	& readfds		37237						
ANR	37595	Symbol	udscs_server_fill_fds		37237						
ANR	37596	Symbol	vdagent_virtio_port_create		37237						
ANR	37597	Symbol	errno		37237						
ANR	37598	Symbol	NULL		37237						
ANR	37599	Symbol	session_info		37237						
ANR	37600	Symbol	active_session		37237						
ANR	37601	Symbol	n		37237						
ANR	37602	Symbol	retval		37237						
ANR	37603	Symbol	nfds		37237						
ANR	37604	Symbol	once		37237						
ANR	37605	Symbol	virtio_port		37237						
ANR	37606	Symbol	readfds		37237						
ANR	37607	Symbol	quit		37237						
ANR	37608	Symbol	virtio_port_read_complete		37237						
ANR	37609	Symbol	LOG_CRIT		37237						
ANR	37610	Function	quit_handler	1079:0:37151:37201							
ANR	37611	FunctionDef	quit_handler (int sig)		37610	0					
ANR	37612	CompoundStatement		1080:0:37185:37201	37610	0					
ANR	37613	ExpressionStatement	quit = 1	1081:4:37191:37199	37610	0	True				
ANR	37614	AssignmentExpression	quit = 1		37610	0		=			
ANR	37615	Identifier	quit		37610	0					
ANR	37616	PrimaryExpression	1		37610	1					
ANR	37617	ReturnType	static void		37610	1					
ANR	37618	Identifier	quit_handler		37610	2					
ANR	37619	ParameterList	int sig		37610	3					
ANR	37620	Parameter	int sig	1079:25:37176:37182	37610	0	True				
ANR	37621	ParameterType	int		37610	0					
ANR	37622	Identifier	sig		37610	1					
ANR	37623	CFGEntryNode	ENTRY		37610		True				
ANR	37624	CFGExitNode	EXIT		37610		True				
ANR	37625	Symbol	sig		37610						
ANR	37626	Symbol	quit		37610						
ANR	37627	Function	main	1084:0:37204:41594							
ANR	37628	FunctionDef	"main (int argc , char * argv [ ])"		37627	0					
ANR	37629	CompoundStatement		1085:0:37237:41594	37627	0					
ANR	37630	IdentifierDeclStatement	int c ;	1086:4:37243:37248	37627	0	True				
ANR	37631	IdentifierDecl	c		37627	0					
ANR	37632	IdentifierDeclType	int		37627	0					
ANR	37633	Identifier	c		37627	1					
ANR	37634	IdentifierDeclStatement	int do_daemonize = 1 ;	1087:4:37254:37274	37627	1	True				
ANR	37635	IdentifierDecl	do_daemonize = 1		37627	0					
ANR	37636	IdentifierDeclType	int		37627	0					
ANR	37637	Identifier	do_daemonize		37627	1					
ANR	37638	AssignmentExpression	do_daemonize = 1		37627	2		=			
ANR	37639	Identifier	do_daemonize		37627	0					
ANR	37640	PrimaryExpression	1		37627	1					
ANR	37641	IdentifierDeclStatement	int want_session_info = 1 ;	1088:4:37280:37305	37627	2	True				
ANR	37642	IdentifierDecl	want_session_info = 1		37627	0					
ANR	37643	IdentifierDeclType	int		37627	0					
ANR	37644	Identifier	want_session_info		37627	1					
ANR	37645	AssignmentExpression	want_session_info = 1		37627	2		=			
ANR	37646	Identifier	want_session_info		37627	0					
ANR	37647	PrimaryExpression	1		37627	1					
ANR	37648	IdentifierDeclStatement	struct sigaction act ;	1089:4:37311:37331	37627	3	True				
ANR	37649	IdentifierDecl	act		37627	0					
ANR	37650	IdentifierDeclType	struct sigaction		37627	0					
ANR	37651	Identifier	act		37627	1					
ANR	37652	IdentifierDeclStatement	gboolean own_socket = TRUE ;	1090:4:37337:37363	37627	4	True				
ANR	37653	IdentifierDecl	own_socket = TRUE		37627	0					
ANR	37654	IdentifierDeclType	gboolean		37627	0					
ANR	37655	Identifier	own_socket		37627	1					
ANR	37656	AssignmentExpression	own_socket = TRUE		37627	2		=			
ANR	37657	Identifier	TRUE		37627	0					
ANR	37658	Identifier	TRUE		37627	1					
ANR	37659	ForStatement	for ( ; ; )		37627	5					
ANR	37660	CompoundStatement		8:13:141:141	37627	0					
ANR	37661	IfStatement	"if ( - 1 == ( c = getopt ( argc , argv , ""-dhxXfos:u:S:"" ) ) )"		37627	0					
ANR	37662	Condition	"- 1 == ( c = getopt ( argc , argv , ""-dhxXfos:u:S:"" ) )"	1093:12:37393:37439	37627	0	True				
ANR	37663	EqualityExpression	"- 1 == ( c = getopt ( argc , argv , ""-dhxXfos:u:S:"" ) )"		37627	0		==			
ANR	37664	UnaryOperationExpression	- 1		37627	0					
ANR	37665	UnaryOperator	-		37627	0					
ANR	37666	PrimaryExpression	1		37627	1					
ANR	37667	AssignmentExpression	"c = getopt ( argc , argv , ""-dhxXfos:u:S:"" )"		37627	1		=			
ANR	37668	Identifier	c		37627	0					
ANR	37669	CallExpression	"getopt ( argc , argv , ""-dhxXfos:u:S:"" )"		37627	1					
ANR	37670	Callee	getopt		37627	0					
ANR	37671	Identifier	getopt		37627	0					
ANR	37672	ArgumentList	argc		37627	1					
ANR	37673	Argument	argc		37627	0					
ANR	37674	Identifier	argc		37627	0					
ANR	37675	Argument	argv		37627	1					
ANR	37676	Identifier	argv		37627	0					
ANR	37677	Argument	"""-dhxXfos:u:S:"""		37627	2					
ANR	37678	PrimaryExpression	"""-dhxXfos:u:S:"""		37627	0					
ANR	37679	BreakStatement	break ;	1094:12:37454:37459	37627	1	True				
ANR	37680	SwitchStatement	switch ( c )		37627	1					
ANR	37681	Condition	c	1095:16:37477:37477	37627	0	True				
ANR	37682	Identifier	c		37627	0					
ANR	37683	CompoundStatement		11:19:242:242	37627	1					
ANR	37684	Label	case 'd' :	1096:8:37490:37498	37627	0	True				
ANR	37685	ExpressionStatement	debug ++	1097:12:37512:37519	37627	1	True				
ANR	37686	PostIncDecOperationExpression	debug ++		37627	0					
ANR	37687	Identifier	debug		37627	0					
ANR	37688	IncDec	++		37627	1					
ANR	37689	BreakStatement	break ;	1098:12:37533:37538	37627	2	True				
ANR	37690	Label	case 's' :	1099:8:37548:37556	37627	3	True				
ANR	37691	ExpressionStatement	portdev = optarg	1100:12:37570:37586	37627	4	True				
ANR	37692	AssignmentExpression	portdev = optarg		37627	0		=			
ANR	37693	Identifier	portdev		37627	0					
ANR	37694	Identifier	optarg		37627	1					
ANR	37695	BreakStatement	break ;	1101:12:37600:37605	37627	5	True				
ANR	37696	Label	case 'S' :	1102:8:37615:37623	37627	6	True				
ANR	37697	ExpressionStatement	vdagentd_socket = optarg	1103:12:37637:37661	37627	7	True				
ANR	37698	AssignmentExpression	vdagentd_socket = optarg		37627	0		=			
ANR	37699	Identifier	vdagentd_socket		37627	0					
ANR	37700	Identifier	optarg		37627	1					
ANR	37701	BreakStatement	break ;	1104:12:37675:37680	37627	8	True				
ANR	37702	Label	case 'u' :	1105:8:37690:37698	37627	9	True				
ANR	37703	ExpressionStatement	uinput_device = optarg	1106:12:37712:37734	37627	10	True				
ANR	37704	AssignmentExpression	uinput_device = optarg		37627	0		=			
ANR	37705	Identifier	uinput_device		37627	0					
ANR	37706	Identifier	optarg		37627	1					
ANR	37707	BreakStatement	break ;	1107:12:37748:37753	37627	11	True				
ANR	37708	Label	case 'f' :	1108:8:37763:37771	37627	12	True				
ANR	37709	ExpressionStatement	uinput_fake = 1	1109:12:37785:37800	37627	13	True				
ANR	37710	AssignmentExpression	uinput_fake = 1		37627	0		=			
ANR	37711	Identifier	uinput_fake		37627	0					
ANR	37712	PrimaryExpression	1		37627	1					
ANR	37713	BreakStatement	break ;	1110:12:37814:37819	37627	14	True				
ANR	37714	Label	case 'o' :	1111:8:37829:37837	37627	15	True				
ANR	37715	ExpressionStatement	only_once = 1	1112:12:37851:37864	37627	16	True				
ANR	37716	AssignmentExpression	only_once = 1		37627	0		=			
ANR	37717	Identifier	only_once		37627	0					
ANR	37718	PrimaryExpression	1		37627	1					
ANR	37719	BreakStatement	break ;	1113:12:37878:37883	37627	17	True				
ANR	37720	Label	case 'x' :	1114:8:37893:37901	37627	18	True				
ANR	37721	ExpressionStatement	do_daemonize = 0	1115:12:37915:37931	37627	19	True				
ANR	37722	AssignmentExpression	do_daemonize = 0		37627	0		=			
ANR	37723	Identifier	do_daemonize		37627	0					
ANR	37724	PrimaryExpression	0		37627	1					
ANR	37725	BreakStatement	break ;	1116:12:37945:37950	37627	20	True				
ANR	37726	Label	case 'X' :	1117:8:37960:37968	37627	21	True				
ANR	37727	ExpressionStatement	want_session_info = 0	1118:12:37982:38003	37627	22	True				
ANR	37728	AssignmentExpression	want_session_info = 0		37627	0		=			
ANR	37729	Identifier	want_session_info		37627	0					
ANR	37730	PrimaryExpression	0		37627	1					
ANR	37731	BreakStatement	break ;	1119:12:38017:38022	37627	23	True				
ANR	37732	Label	case 'h' :	1120:8:38032:38040	37627	24	True				
ANR	37733	ExpressionStatement	usage ( stdout )	1121:12:38054:38067	37627	25	True				
ANR	37734	CallExpression	usage ( stdout )		37627	0					
ANR	37735	Callee	usage		37627	0					
ANR	37736	Identifier	usage		37627	0					
ANR	37737	ArgumentList	stdout		37627	1					
ANR	37738	Argument	stdout		37627	0					
ANR	37739	Identifier	stdout		37627	0					
ANR	37740	ReturnStatement	return 0 ;	1122:12:38081:38089	37627	26	True				
ANR	37741	PrimaryExpression	0		37627	0					
ANR	37742	Label	default :	1123:8:38099:38106	37627	27	True				
ANR	37743	Identifier	default		37627	0					
ANR	37744	ExpressionStatement	"fputs ( ""\\n"" , stderr )"	1124:12:38120:38139	37627	28	True				
ANR	37745	CallExpression	"fputs ( ""\\n"" , stderr )"		37627	0					
ANR	37746	Callee	fputs		37627	0					
ANR	37747	Identifier	fputs		37627	0					
ANR	37748	ArgumentList	"""\\n"""		37627	1					
ANR	37749	Argument	"""\\n"""		37627	0					
ANR	37750	PrimaryExpression	"""\\n"""		37627	0					
ANR	37751	Argument	stderr		37627	1					
ANR	37752	Identifier	stderr		37627	0					
ANR	37753	ExpressionStatement	usage ( stderr )	1125:12:38153:38166	37627	29	True				
ANR	37754	CallExpression	usage ( stderr )		37627	0					
ANR	37755	Callee	usage		37627	0					
ANR	37756	Identifier	usage		37627	0					
ANR	37757	ArgumentList	stderr		37627	1					
ANR	37758	Argument	stderr		37627	0					
ANR	37759	Identifier	stderr		37627	0					
ANR	37760	ReturnStatement	return 1 ;	1126:12:38180:38188	37627	30	True				
ANR	37761	PrimaryExpression	1		37627	0					
ANR	37762	ExpressionStatement	"memset ( & act , 0 , sizeof ( act ) )"	1130:4:38211:38239	37627	6	True				
ANR	37763	CallExpression	"memset ( & act , 0 , sizeof ( act ) )"		37627	0					
ANR	37764	Callee	memset		37627	0					
ANR	37765	Identifier	memset		37627	0					
ANR	37766	ArgumentList	& act		37627	1					
ANR	37767	Argument	& act		37627	0					
ANR	37768	UnaryOperationExpression	& act		37627	0					
ANR	37769	UnaryOperator	&		37627	0					
ANR	37770	Identifier	act		37627	1					
ANR	37771	Argument	0		37627	1					
ANR	37772	PrimaryExpression	0		37627	0					
ANR	37773	Argument	sizeof ( act )		37627	2					
ANR	37774	SizeofExpression	sizeof ( act )		37627	0					
ANR	37775	Sizeof	sizeof		37627	0					
ANR	37776	SizeofOperand	act		37627	1					
ANR	37777	ExpressionStatement	act . sa_flags = SA_RESTART	1131:4:38245:38270	37627	7	True				
ANR	37778	AssignmentExpression	act . sa_flags = SA_RESTART		37627	0		=			
ANR	37779	MemberAccess	act . sa_flags		37627	0					
ANR	37780	Identifier	act		37627	0					
ANR	37781	Identifier	sa_flags		37627	1					
ANR	37782	Identifier	SA_RESTART		37627	1					
ANR	37783	ExpressionStatement	act . sa_handler = quit_handler	1132:4:38276:38305	37627	8	True				
ANR	37784	AssignmentExpression	act . sa_handler = quit_handler		37627	0		=			
ANR	37785	MemberAccess	act . sa_handler		37627	0					
ANR	37786	Identifier	act		37627	0					
ANR	37787	Identifier	sa_handler		37627	1					
ANR	37788	Identifier	quit_handler		37627	1					
ANR	37789	ExpressionStatement	"sigaction ( SIGINT , & act , NULL )"	1133:4:38311:38340	37627	9	True				
ANR	37790	CallExpression	"sigaction ( SIGINT , & act , NULL )"		37627	0					
ANR	37791	Callee	sigaction		37627	0					
ANR	37792	Identifier	sigaction		37627	0					
ANR	37793	ArgumentList	SIGINT		37627	1					
ANR	37794	Argument	SIGINT		37627	0					
ANR	37795	Identifier	SIGINT		37627	0					
ANR	37796	Argument	& act		37627	1					
ANR	37797	UnaryOperationExpression	& act		37627	0					
ANR	37798	UnaryOperator	&		37627	0					
ANR	37799	Identifier	act		37627	1					
ANR	37800	Argument	NULL		37627	2					
ANR	37801	Identifier	NULL		37627	0					
ANR	37802	ExpressionStatement	"sigaction ( SIGHUP , & act , NULL )"	1134:4:38346:38375	37627	10	True				
ANR	37803	CallExpression	"sigaction ( SIGHUP , & act , NULL )"		37627	0					
ANR	37804	Callee	sigaction		37627	0					
ANR	37805	Identifier	sigaction		37627	0					
ANR	37806	ArgumentList	SIGHUP		37627	1					
ANR	37807	Argument	SIGHUP		37627	0					
ANR	37808	Identifier	SIGHUP		37627	0					
ANR	37809	Argument	& act		37627	1					
ANR	37810	UnaryOperationExpression	& act		37627	0					
ANR	37811	UnaryOperator	&		37627	0					
ANR	37812	Identifier	act		37627	1					
ANR	37813	Argument	NULL		37627	2					
ANR	37814	Identifier	NULL		37627	0					
ANR	37815	ExpressionStatement	"sigaction ( SIGTERM , & act , NULL )"	1135:4:38381:38411	37627	11	True				
ANR	37816	CallExpression	"sigaction ( SIGTERM , & act , NULL )"		37627	0					
ANR	37817	Callee	sigaction		37627	0					
ANR	37818	Identifier	sigaction		37627	0					
ANR	37819	ArgumentList	SIGTERM		37627	1					
ANR	37820	Argument	SIGTERM		37627	0					
ANR	37821	Identifier	SIGTERM		37627	0					
ANR	37822	Argument	& act		37627	1					
ANR	37823	UnaryOperationExpression	& act		37627	0					
ANR	37824	UnaryOperator	&		37627	0					
ANR	37825	Identifier	act		37627	1					
ANR	37826	Argument	NULL		37627	2					
ANR	37827	Identifier	NULL		37627	0					
ANR	37828	ExpressionStatement	"sigaction ( SIGQUIT , & act , NULL )"	1136:4:38417:38447	37627	12	True				
ANR	37829	CallExpression	"sigaction ( SIGQUIT , & act , NULL )"		37627	0					
ANR	37830	Callee	sigaction		37627	0					
ANR	37831	Identifier	sigaction		37627	0					
ANR	37832	ArgumentList	SIGQUIT		37627	1					
ANR	37833	Argument	SIGQUIT		37627	0					
ANR	37834	Identifier	SIGQUIT		37627	0					
ANR	37835	Argument	& act		37627	1					
ANR	37836	UnaryOperationExpression	& act		37627	0					
ANR	37837	UnaryOperator	&		37627	0					
ANR	37838	Identifier	act		37627	1					
ANR	37839	Argument	NULL		37627	2					
ANR	37840	Identifier	NULL		37627	0					
ANR	37841	ExpressionStatement	"openlog ( ""spice-vdagentd"" , do_daemonize ? 0 : LOG_PERROR , LOG_USER )"	1138:4:38454:38520	37627	13	True				
ANR	37842	CallExpression	"openlog ( ""spice-vdagentd"" , do_daemonize ? 0 : LOG_PERROR , LOG_USER )"		37627	0					
ANR	37843	Callee	openlog		37627	0					
ANR	37844	Identifier	openlog		37627	0					
ANR	37845	ArgumentList	"""spice-vdagentd"""		37627	1					
ANR	37846	Argument	"""spice-vdagentd"""		37627	0					
ANR	37847	PrimaryExpression	"""spice-vdagentd"""		37627	0					
ANR	37848	Argument	do_daemonize ? 0 : LOG_PERROR		37627	1					
ANR	37849	ConditionalExpression	do_daemonize ? 0 : LOG_PERROR		37627	0					
ANR	37850	Condition	do_daemonize		37627	0					
ANR	37851	Identifier	do_daemonize		37627	0					
ANR	37852	PrimaryExpression	0		37627	1					
ANR	37853	Identifier	LOG_PERROR		37627	2					
ANR	37854	Argument	LOG_USER		37627	2					
ANR	37855	Identifier	LOG_USER		37627	0					
ANR	37856	IdentifierDeclStatement	int n_fds ;	1142:4:38620:38629	37627	14	True				
ANR	37857	IdentifierDecl	n_fds		37627	0					
ANR	37858	IdentifierDeclType	int		37627	0					
ANR	37859	Identifier	n_fds		37627	1					
ANR	37860	ExpressionStatement	n_fds = sd_listen_fds ( 0 )	1144:4:38697:38721	37627	15	True				
ANR	37861	AssignmentExpression	n_fds = sd_listen_fds ( 0 )		37627	0		=			
ANR	37862	Identifier	n_fds		37627	0					
ANR	37863	CallExpression	sd_listen_fds ( 0 )		37627	1					
ANR	37864	Callee	sd_listen_fds		37627	0					
ANR	37865	Identifier	sd_listen_fds		37627	0					
ANR	37866	ArgumentList	0		37627	1					
ANR	37867	Argument	0		37627	0					
ANR	37868	PrimaryExpression	0		37627	0					
ANR	37869	IfStatement	if ( n_fds > 1 )		37627	16					
ANR	37870	Condition	n_fds > 1	1145:8:38731:38739	37627	0	True				
ANR	37871	RelationalExpression	n_fds > 1		37627	0		>			
ANR	37872	Identifier	n_fds		37627	0					
ANR	37873	PrimaryExpression	1		37627	1					
ANR	37874	CompoundStatement		61:19:1504:1504	37627	1					
ANR	37875	ExpressionStatement	"syslog ( LOG_CRIT , ""Received too many sockets from systemd (%i)"" , n_fds )"	1146:8:38752:38822	37627	0	True				
ANR	37876	CallExpression	"syslog ( LOG_CRIT , ""Received too many sockets from systemd (%i)"" , n_fds )"		37627	0					
ANR	37877	Callee	syslog		37627	0					
ANR	37878	Identifier	syslog		37627	0					
ANR	37879	ArgumentList	LOG_CRIT		37627	1					
ANR	37880	Argument	LOG_CRIT		37627	0					
ANR	37881	Identifier	LOG_CRIT		37627	0					
ANR	37882	Argument	"""Received too many sockets from systemd (%i)"""		37627	1					
ANR	37883	PrimaryExpression	"""Received too many sockets from systemd (%i)"""		37627	0					
ANR	37884	Argument	n_fds		37627	2					
ANR	37885	Identifier	n_fds		37627	0					
ANR	37886	ReturnStatement	return 1 ;	1147:8:38832:38840	37627	1	True				
ANR	37887	PrimaryExpression	1		37627	0					
ANR	37888	ElseStatement	else		37627	0					
ANR	37889	IfStatement	if ( n_fds == 1 )		37627	0					
ANR	37890	Condition	n_fds == 1	1148:15:38857:38866	37627	0	True				
ANR	37891	EqualityExpression	n_fds == 1		37627	0		==			
ANR	37892	Identifier	n_fds		37627	0					
ANR	37893	PrimaryExpression	1		37627	1					
ANR	37894	CompoundStatement		64:27:1631:1631	37627	1					
ANR	37895	ExpressionStatement	"server = udscs_create_server_for_fd ( SD_LISTEN_FDS_START , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"	1149:8:38879:39213	37627	0	True				
ANR	37896	AssignmentExpression	"server = udscs_create_server_for_fd ( SD_LISTEN_FDS_START , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		37627	0		=			
ANR	37897	Identifier	server		37627	0					
ANR	37898	CallExpression	"udscs_create_server_for_fd ( SD_LISTEN_FDS_START , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		37627	1					
ANR	37899	Callee	udscs_create_server_for_fd		37627	0					
ANR	37900	Identifier	udscs_create_server_for_fd		37627	0					
ANR	37901	ArgumentList	SD_LISTEN_FDS_START		37627	1					
ANR	37902	Argument	SD_LISTEN_FDS_START		37627	0					
ANR	37903	Identifier	SD_LISTEN_FDS_START		37627	0					
ANR	37904	Argument	agent_connect		37627	1					
ANR	37905	Identifier	agent_connect		37627	0					
ANR	37906	Argument	agent_read_complete		37627	2					
ANR	37907	Identifier	agent_read_complete		37627	0					
ANR	37908	Argument	agent_disconnect		37627	3					
ANR	37909	Identifier	agent_disconnect		37627	0					
ANR	37910	Argument	vdagentd_messages		37627	4					
ANR	37911	Identifier	vdagentd_messages		37627	0					
ANR	37912	Argument	VDAGENTD_NO_MESSAGES		37627	5					
ANR	37913	Identifier	VDAGENTD_NO_MESSAGES		37627	0					
ANR	37914	Argument	debug		37627	6					
ANR	37915	Identifier	debug		37627	0					
ANR	37916	ExpressionStatement	own_socket = FALSE	1154:8:39223:39241	37627	1	True				
ANR	37917	AssignmentExpression	own_socket = FALSE		37627	0		=			
ANR	37918	Identifier	own_socket		37627	0					
ANR	37919	Identifier	FALSE		37627	1					
ANR	37920	ElseStatement	else		37627	0					
ANR	37921	CompoundStatement		74:4:2128:2128	37627	0					
ANR	37922	ExpressionStatement	"server = udscs_create_server ( vdagentd_socket , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"	1159:8:39376:39634	37627	0	True				
ANR	37923	AssignmentExpression	"server = udscs_create_server ( vdagentd_socket , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		37627	0		=			
ANR	37924	Identifier	server		37627	0					
ANR	37925	CallExpression	"udscs_create_server ( vdagentd_socket , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		37627	1					
ANR	37926	Callee	udscs_create_server		37627	0					
ANR	37927	Identifier	udscs_create_server		37627	0					
ANR	37928	ArgumentList	vdagentd_socket		37627	1					
ANR	37929	Argument	vdagentd_socket		37627	0					
ANR	37930	Identifier	vdagentd_socket		37627	0					
ANR	37931	Argument	agent_connect		37627	1					
ANR	37932	Identifier	agent_connect		37627	0					
ANR	37933	Argument	agent_read_complete		37627	2					
ANR	37934	Identifier	agent_read_complete		37627	0					
ANR	37935	Argument	agent_disconnect		37627	3					
ANR	37936	Identifier	agent_disconnect		37627	0					
ANR	37937	Argument	vdagentd_messages		37627	4					
ANR	37938	Identifier	vdagentd_messages		37627	0					
ANR	37939	Argument	VDAGENTD_NO_MESSAGES		37627	5					
ANR	37940	Identifier	VDAGENTD_NO_MESSAGES		37627	0					
ANR	37941	Argument	debug		37627	6					
ANR	37942	Identifier	debug		37627	0					
ANR	37943	IfStatement	if ( ! server )		37627	17					
ANR	37944	Condition	! server	1165:8:39651:39657	37627	0	True				
ANR	37945	UnaryOperationExpression	! server		37627	0					
ANR	37946	UnaryOperator	!		37627	0					
ANR	37947	Identifier	server		37627	1					
ANR	37948	CompoundStatement		81:17:2422:2422	37627	1					
ANR	37949	IfStatement	if ( errno == EADDRINUSE )		37627	0					
ANR	37950	Condition	errno == EADDRINUSE	1166:12:39674:39692	37627	0	True				
ANR	37951	EqualityExpression	errno == EADDRINUSE		37627	0		==			
ANR	37952	Identifier	errno		37627	0					
ANR	37953	Identifier	EADDRINUSE		37627	1					
ANR	37954	CompoundStatement		82:33:2457:2457	37627	1					
ANR	37955	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal the server socket %s exists already. Delete it?"" , vdagentd_socket )"	1167:12:39709:39818	37627	0	True				
ANR	37956	CallExpression	"syslog ( LOG_CRIT , ""Fatal the server socket %s exists already. Delete it?"" , vdagentd_socket )"		37627	0					
ANR	37957	Callee	syslog		37627	0					
ANR	37958	Identifier	syslog		37627	0					
ANR	37959	ArgumentList	LOG_CRIT		37627	1					
ANR	37960	Argument	LOG_CRIT		37627	0					
ANR	37961	Identifier	LOG_CRIT		37627	0					
ANR	37962	Argument	"""Fatal the server socket %s exists already. Delete it?"""		37627	1					
ANR	37963	PrimaryExpression	"""Fatal the server socket %s exists already. Delete it?"""		37627	0					
ANR	37964	Argument	vdagentd_socket		37627	2					
ANR	37965	Identifier	vdagentd_socket		37627	0					
ANR	37966	ElseStatement	else		37627	0					
ANR	37967	IfStatement	if ( errno == ENOMEM )		37627	0					
ANR	37968	Condition	errno == ENOMEM	1169:19:39839:39853	37627	0	True				
ANR	37969	EqualityExpression	errno == ENOMEM		37627	0		==			
ANR	37970	Identifier	errno		37627	0					
ANR	37971	Identifier	ENOMEM		37627	1					
ANR	37972	CompoundStatement		85:36:2618:2618	37627	1					
ANR	37973	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal could not allocate memory for udscs server"" )"	1170:12:39870:39938	37627	0	True				
ANR	37974	CallExpression	"syslog ( LOG_CRIT , ""Fatal could not allocate memory for udscs server"" )"		37627	0					
ANR	37975	Callee	syslog		37627	0					
ANR	37976	Identifier	syslog		37627	0					
ANR	37977	ArgumentList	LOG_CRIT		37627	1					
ANR	37978	Argument	LOG_CRIT		37627	0					
ANR	37979	Identifier	LOG_CRIT		37627	0					
ANR	37980	Argument	"""Fatal could not allocate memory for udscs server"""		37627	1					
ANR	37981	PrimaryExpression	"""Fatal could not allocate memory for udscs server"""		37627	0					
ANR	37982	ElseStatement	else		37627	0					
ANR	37983	CompoundStatement		87:15:2717:2717	37627	0					
ANR	37984	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal could not create the server socket %s: %m"" , vdagentd_socket )"	1172:12:39969:40072	37627	0	True				
ANR	37985	CallExpression	"syslog ( LOG_CRIT , ""Fatal could not create the server socket %s: %m"" , vdagentd_socket )"		37627	0					
ANR	37986	Callee	syslog		37627	0					
ANR	37987	Identifier	syslog		37627	0					
ANR	37988	ArgumentList	LOG_CRIT		37627	1					
ANR	37989	Argument	LOG_CRIT		37627	0					
ANR	37990	Identifier	LOG_CRIT		37627	0					
ANR	37991	Argument	"""Fatal could not create the server socket %s: %m"""		37627	1					
ANR	37992	PrimaryExpression	"""Fatal could not create the server socket %s: %m"""		37627	0					
ANR	37993	Argument	vdagentd_socket		37627	2					
ANR	37994	Identifier	vdagentd_socket		37627	0					
ANR	37995	ReturnStatement	return 1 ;	1175:8:40092:40100	37627	1	True				
ANR	37996	PrimaryExpression	1		37627	0					
ANR	37997	IfStatement	if ( own_socket )		37627	18					
ANR	37998	Condition	own_socket	1179:8:40195:40204	37627	0	True				
ANR	37999	Identifier	own_socket		37627	0					
ANR	38000	CompoundStatement		95:20:2969:2969	37627	1					
ANR	38001	IfStatement	"if ( chmod ( vdagentd_socket , 0666 ) )"		37627	0					
ANR	38002	Condition	"chmod ( vdagentd_socket , 0666 )"	1180:12:40221:40248	37627	0	True				
ANR	38003	CallExpression	"chmod ( vdagentd_socket , 0666 )"		37627	0					
ANR	38004	Callee	chmod		37627	0					
ANR	38005	Identifier	chmod		37627	0					
ANR	38006	ArgumentList	vdagentd_socket		37627	1					
ANR	38007	Argument	vdagentd_socket		37627	0					
ANR	38008	Identifier	vdagentd_socket		37627	0					
ANR	38009	Argument	0666		37627	1					
ANR	38010	PrimaryExpression	0666		37627	0					
ANR	38011	CompoundStatement		96:42:3013:3013	37627	1					
ANR	38012	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal could not change permissions on %s: %m"" , vdagentd_socket )"	1181:12:40265:40365	37627	0	True				
ANR	38013	CallExpression	"syslog ( LOG_CRIT , ""Fatal could not change permissions on %s: %m"" , vdagentd_socket )"		37627	0					
ANR	38014	Callee	syslog		37627	0					
ANR	38015	Identifier	syslog		37627	0					
ANR	38016	ArgumentList	LOG_CRIT		37627	1					
ANR	38017	Argument	LOG_CRIT		37627	0					
ANR	38018	Identifier	LOG_CRIT		37627	0					
ANR	38019	Argument	"""Fatal could not change permissions on %s: %m"""		37627	1					
ANR	38020	PrimaryExpression	"""Fatal could not change permissions on %s: %m"""		37627	0					
ANR	38021	Argument	vdagentd_socket		37627	2					
ANR	38022	Identifier	vdagentd_socket		37627	0					
ANR	38023	ExpressionStatement	udscs_destroy_server ( server )	1183:12:40379:40407	37627	1	True				
ANR	38024	CallExpression	udscs_destroy_server ( server )		37627	0					
ANR	38025	Callee	udscs_destroy_server		37627	0					
ANR	38026	Identifier	udscs_destroy_server		37627	0					
ANR	38027	ArgumentList	server		37627	1					
ANR	38028	Argument	server		37627	0					
ANR	38029	Identifier	server		37627	0					
ANR	38030	ReturnStatement	return 1 ;	1184:12:40421:40429	37627	2	True				
ANR	38031	PrimaryExpression	1		37627	0					
ANR	38032	IfStatement	if ( do_daemonize )		37627	19					
ANR	38033	Condition	do_daemonize	1188:8:40456:40467	37627	0	True				
ANR	38034	Identifier	do_daemonize		37627	0					
ANR	38035	ExpressionStatement	daemonize ( )	1189:8:40478:40489	37627	1	True				
ANR	38036	CallExpression	daemonize ( )		37627	0					
ANR	38037	Callee	daemonize		37627	0					
ANR	38038	Identifier	daemonize		37627	0					
ANR	38039	ArgumentList			37627	1					
ANR	38040	ExpressionStatement	"uinput = vdagentd_uinput_create ( uinput_device , 1024 , 768 , NULL , 0 , debug > 1 , uinput_fake )"	1192:4:40522:40648	37627	20	True				
ANR	38041	AssignmentExpression	"uinput = vdagentd_uinput_create ( uinput_device , 1024 , 768 , NULL , 0 , debug > 1 , uinput_fake )"		37627	0		=			
ANR	38042	Identifier	uinput		37627	0					
ANR	38043	CallExpression	"vdagentd_uinput_create ( uinput_device , 1024 , 768 , NULL , 0 , debug > 1 , uinput_fake )"		37627	1					
ANR	38044	Callee	vdagentd_uinput_create		37627	0					
ANR	38045	Identifier	vdagentd_uinput_create		37627	0					
ANR	38046	ArgumentList	uinput_device		37627	1					
ANR	38047	Argument	uinput_device		37627	0					
ANR	38048	Identifier	uinput_device		37627	0					
ANR	38049	Argument	1024		37627	1					
ANR	38050	PrimaryExpression	1024		37627	0					
ANR	38051	Argument	768		37627	2					
ANR	38052	PrimaryExpression	768		37627	0					
ANR	38053	Argument	NULL		37627	3					
ANR	38054	Identifier	NULL		37627	0					
ANR	38055	Argument	0		37627	4					
ANR	38056	PrimaryExpression	0		37627	0					
ANR	38057	Argument	debug > 1		37627	5					
ANR	38058	RelationalExpression	debug > 1		37627	0		>			
ANR	38059	Identifier	debug		37627	0					
ANR	38060	PrimaryExpression	1		37627	1					
ANR	38061	Argument	uinput_fake		37627	6					
ANR	38062	Identifier	uinput_fake		37627	0					
ANR	38063	IfStatement	if ( ! uinput )		37627	21					
ANR	38064	Condition	! uinput	1194:8:40658:40664	37627	0	True				
ANR	38065	UnaryOperationExpression	! uinput		37627	0					
ANR	38066	UnaryOperator	!		37627	0					
ANR	38067	Identifier	uinput		37627	1					
ANR	38068	CompoundStatement		110:17:3429:3429	37627	1					
ANR	38069	ExpressionStatement	udscs_destroy_server ( server )	1195:8:40677:40705	37627	0	True				
ANR	38070	CallExpression	udscs_destroy_server ( server )		37627	0					
ANR	38071	Callee	udscs_destroy_server		37627	0					
ANR	38072	Identifier	udscs_destroy_server		37627	0					
ANR	38073	ArgumentList	server		37627	1					
ANR	38074	Argument	server		37627	0					
ANR	38075	Identifier	server		37627	0					
ANR	38076	ReturnStatement	return 1 ;	1196:8:40715:40723	37627	1	True				
ANR	38077	PrimaryExpression	1		37627	0					
ANR	38078	IfStatement	if ( want_session_info )		37627	22					
ANR	38079	Condition	want_session_info	1200:8:40747:40763	37627	0	True				
ANR	38080	Identifier	want_session_info		37627	0					
ANR	38081	ExpressionStatement	session_info = session_info_create ( debug )	1201:8:40774:40815	37627	1	True				
ANR	38082	AssignmentExpression	session_info = session_info_create ( debug )		37627	0		=			
ANR	38083	Identifier	session_info		37627	0					
ANR	38084	CallExpression	session_info_create ( debug )		37627	1					
ANR	38085	Callee	session_info_create		37627	0					
ANR	38086	Identifier	session_info_create		37627	0					
ANR	38087	ArgumentList	debug		37627	1					
ANR	38088	Argument	debug		37627	0					
ANR	38089	Identifier	debug		37627	0					
ANR	38090	IfStatement	if ( ! session_info )		37627	23					
ANR	38091	Condition	! session_info	1202:8:40825:40837	37627	0	True				
ANR	38092	UnaryOperationExpression	! session_info		37627	0					
ANR	38093	UnaryOperator	!		37627	0					
ANR	38094	Identifier	session_info		37627	1					
ANR	38095	ExpressionStatement	"syslog ( LOG_WARNING , ""no session info, max 1 session agent allowed"" )"	1203:8:40848:40915	37627	1	True				
ANR	38096	CallExpression	"syslog ( LOG_WARNING , ""no session info, max 1 session agent allowed"" )"		37627	0					
ANR	38097	Callee	syslog		37627	0					
ANR	38098	Identifier	syslog		37627	0					
ANR	38099	ArgumentList	LOG_WARNING		37627	1					
ANR	38100	Argument	LOG_WARNING		37627	0					
ANR	38101	Identifier	LOG_WARNING		37627	0					
ANR	38102	Argument	"""no session info, max 1 session agent allowed"""		37627	1					
ANR	38103	PrimaryExpression	"""no session info, max 1 session agent allowed"""		37627	0					
ANR	38104	ExpressionStatement	"active_xfers = g_hash_table_new ( g_direct_hash , g_direct_equal )"	1205:4:40922:40984	37627	24	True				
ANR	38105	AssignmentExpression	"active_xfers = g_hash_table_new ( g_direct_hash , g_direct_equal )"		37627	0		=			
ANR	38106	Identifier	active_xfers		37627	0					
ANR	38107	CallExpression	"g_hash_table_new ( g_direct_hash , g_direct_equal )"		37627	1					
ANR	38108	Callee	g_hash_table_new		37627	0					
ANR	38109	Identifier	g_hash_table_new		37627	0					
ANR	38110	ArgumentList	g_direct_hash		37627	1					
ANR	38111	Argument	g_direct_hash		37627	0					
ANR	38112	Identifier	g_direct_hash		37627	0					
ANR	38113	Argument	g_direct_equal		37627	1					
ANR	38114	Identifier	g_direct_equal		37627	0					
ANR	38115	ExpressionStatement	main_loop ( )	1206:4:40990:41001	37627	25	True				
ANR	38116	CallExpression	main_loop ( )		37627	0					
ANR	38117	Callee	main_loop		37627	0					
ANR	38118	Identifier	main_loop		37627	0					
ANR	38119	ArgumentList			37627	1					
ANR	38120	ExpressionStatement	release_clipboards ( )	1208:4:41008:41028	37627	26	True				
ANR	38121	CallExpression	release_clipboards ( )		37627	0					
ANR	38122	Callee	release_clipboards		37627	0					
ANR	38123	Identifier	release_clipboards		37627	0					
ANR	38124	ArgumentList			37627	1					
ANR	38125	ExpressionStatement	vdagentd_uinput_destroy ( & uinput )	1210:4:41035:41067	37627	27	True				
ANR	38126	CallExpression	vdagentd_uinput_destroy ( & uinput )		37627	0					
ANR	38127	Callee	vdagentd_uinput_destroy		37627	0					
ANR	38128	Identifier	vdagentd_uinput_destroy		37627	0					
ANR	38129	ArgumentList	& uinput		37627	1					
ANR	38130	Argument	& uinput		37627	0					
ANR	38131	UnaryOperationExpression	& uinput		37627	0					
ANR	38132	UnaryOperator	&		37627	0					
ANR	38133	Identifier	uinput		37627	1					
ANR	38134	ExpressionStatement	vdagent_virtio_port_flush ( & virtio_port )	1211:4:41073:41112	37627	28	True				
ANR	38135	CallExpression	vdagent_virtio_port_flush ( & virtio_port )		37627	0					
ANR	38136	Callee	vdagent_virtio_port_flush		37627	0					
ANR	38137	Identifier	vdagent_virtio_port_flush		37627	0					
ANR	38138	ArgumentList	& virtio_port		37627	1					
ANR	38139	Argument	& virtio_port		37627	0					
ANR	38140	UnaryOperationExpression	& virtio_port		37627	0					
ANR	38141	UnaryOperator	&		37627	0					
ANR	38142	Identifier	virtio_port		37627	1					
ANR	38143	ExpressionStatement	vdagent_virtio_port_destroy ( & virtio_port )	1212:4:41118:41159	37627	29	True				
ANR	38144	CallExpression	vdagent_virtio_port_destroy ( & virtio_port )		37627	0					
ANR	38145	Callee	vdagent_virtio_port_destroy		37627	0					
ANR	38146	Identifier	vdagent_virtio_port_destroy		37627	0					
ANR	38147	ArgumentList	& virtio_port		37627	1					
ANR	38148	Argument	& virtio_port		37627	0					
ANR	38149	UnaryOperationExpression	& virtio_port		37627	0					
ANR	38150	UnaryOperator	&		37627	0					
ANR	38151	Identifier	virtio_port		37627	1					
ANR	38152	ExpressionStatement	session_info_destroy ( session_info )	1213:4:41165:41199	37627	30	True				
ANR	38153	CallExpression	session_info_destroy ( session_info )		37627	0					
ANR	38154	Callee	session_info_destroy		37627	0					
ANR	38155	Identifier	session_info_destroy		37627	0					
ANR	38156	ArgumentList	session_info		37627	1					
ANR	38157	Argument	session_info		37627	0					
ANR	38158	Identifier	session_info		37627	0					
ANR	38159	ExpressionStatement	udscs_destroy_server ( server )	1214:4:41205:41233	37627	31	True				
ANR	38160	CallExpression	udscs_destroy_server ( server )		37627	0					
ANR	38161	Callee	udscs_destroy_server		37627	0					
ANR	38162	Identifier	udscs_destroy_server		37627	0					
ANR	38163	ArgumentList	server		37627	1					
ANR	38164	Argument	server		37627	0					
ANR	38165	Identifier	server		37627	0					
ANR	38166	IfStatement	if ( own_socket )		37627	32					
ANR	38167	Condition	own_socket	1217:8:41308:41317	37627	0	True				
ANR	38168	Identifier	own_socket		37627	0					
ANR	38169	CompoundStatement		133:20:4082:4082	37627	1					
ANR	38170	IfStatement	if ( unlink ( vdagentd_socket ) != 0 )		37627	0					
ANR	38171	Condition	unlink ( vdagentd_socket ) != 0	1218:12:41334:41361	37627	0	True				
ANR	38172	EqualityExpression	unlink ( vdagentd_socket ) != 0		37627	0		!=			
ANR	38173	CallExpression	unlink ( vdagentd_socket )		37627	0					
ANR	38174	Callee	unlink		37627	0					
ANR	38175	Identifier	unlink		37627	0					
ANR	38176	ArgumentList	vdagentd_socket		37627	1					
ANR	38177	Argument	vdagentd_socket		37627	0					
ANR	38178	Identifier	vdagentd_socket		37627	0					
ANR	38179	PrimaryExpression	0		37627	1					
ANR	38180	ExpressionStatement	"syslog ( LOG_ERR , ""unlink %s: %s"" , vdagentd_socket , strerror ( errno ) )"	1219:12:41376:41442	37627	1	True				
ANR	38181	CallExpression	"syslog ( LOG_ERR , ""unlink %s: %s"" , vdagentd_socket , strerror ( errno ) )"		37627	0					
ANR	38182	Callee	syslog		37627	0					
ANR	38183	Identifier	syslog		37627	0					
ANR	38184	ArgumentList	LOG_ERR		37627	1					
ANR	38185	Argument	LOG_ERR		37627	0					
ANR	38186	Identifier	LOG_ERR		37627	0					
ANR	38187	Argument	"""unlink %s: %s"""		37627	1					
ANR	38188	PrimaryExpression	"""unlink %s: %s"""		37627	0					
ANR	38189	Argument	vdagentd_socket		37627	2					
ANR	38190	Identifier	vdagentd_socket		37627	0					
ANR	38191	Argument	strerror ( errno )		37627	3					
ANR	38192	CallExpression	strerror ( errno )		37627	0					
ANR	38193	Callee	strerror		37627	0					
ANR	38194	Identifier	strerror		37627	0					
ANR	38195	ArgumentList	errno		37627	1					
ANR	38196	Argument	errno		37627	0					
ANR	38197	Identifier	errno		37627	0					
ANR	38198	ExpressionStatement	"syslog ( LOG_INFO , ""vdagentd quitting, returning status %d"" , retval )"	1221:4:41454:41520	37627	33	True				
ANR	38199	CallExpression	"syslog ( LOG_INFO , ""vdagentd quitting, returning status %d"" , retval )"		37627	0					
ANR	38200	Callee	syslog		37627	0					
ANR	38201	Identifier	syslog		37627	0					
ANR	38202	ArgumentList	LOG_INFO		37627	1					
ANR	38203	Argument	LOG_INFO		37627	0					
ANR	38204	Identifier	LOG_INFO		37627	0					
ANR	38205	Argument	"""vdagentd quitting, returning status %d"""		37627	1					
ANR	38206	PrimaryExpression	"""vdagentd quitting, returning status %d"""		37627	0					
ANR	38207	Argument	retval		37627	2					
ANR	38208	Identifier	retval		37627	0					
ANR	38209	IfStatement	if ( do_daemonize )		37627	34					
ANR	38210	Condition	do_daemonize	1223:8:41531:41542	37627	0	True				
ANR	38211	Identifier	do_daemonize		37627	0					
ANR	38212	ExpressionStatement	unlink ( pidfilename )	1224:8:41553:41572	37627	1	True				
ANR	38213	CallExpression	unlink ( pidfilename )		37627	0					
ANR	38214	Callee	unlink		37627	0					
ANR	38215	Identifier	unlink		37627	0					
ANR	38216	ArgumentList	pidfilename		37627	1					
ANR	38217	Argument	pidfilename		37627	0					
ANR	38218	Identifier	pidfilename		37627	0					
ANR	38219	ReturnStatement	return retval ;	1226:4:41579:41592	37627	35	True				
ANR	38220	Identifier	retval		37627	0					
ANR	38221	ReturnType	int		37627	1					
ANR	38222	Identifier	main		37627	2					
ANR	38223	ParameterList	"int argc , char * argv [ ]"		37627	3					
ANR	38224	Parameter	int argc	1084:9:37213:37220	37627	0	True				
ANR	38225	ParameterType	int		37627	0					
ANR	38226	Identifier	argc		37627	1					
ANR	38227	Parameter	char * argv [ ]	1084:19:37223:37234	37627	1	True				
ANR	38228	ParameterType	char * [ ]		37627	0					
ANR	38229	Identifier	argv		37627	1					
ANR	38230	CFGEntryNode	ENTRY		37627		True				
ANR	38231	CFGExitNode	EXIT		37627		True				
ANR	38232	InfiniteForNode	true		37627		True				
ANR	38233	Symbol	ENOMEM		37627						
ANR	38234	Symbol	g_direct_hash		37627						
ANR	38235	Symbol	LOG_INFO		37627						
ANR	38236	Symbol	stdout		37627						
ANR	38237	Symbol	optarg		37627						
ANR	38238	Symbol	udscs_create_server		37627						
ANR	38239	Symbol	SA_RESTART		37627						
ANR	38240	Symbol	LOG_WARNING		37627						
ANR	38241	Symbol	act . sa_flags		37627						
ANR	38242	Symbol	pidfilename		37627						
ANR	38243	Symbol	SD_LISTEN_FDS_START		37627						
ANR	38244	Symbol	act . sa_handler		37627						
ANR	38245	Symbol	sd_listen_fds		37627						
ANR	38246	Symbol	act		37627						
ANR	38247	Symbol	getopt		37627						
ANR	38248	Symbol	agent_read_complete		37627						
ANR	38249	Symbol	EADDRINUSE		37627						
ANR	38250	Symbol	LOG_ERR		37627						
ANR	38251	Symbol	do_daemonize		37627						
ANR	38252	Symbol	n_fds		37627						
ANR	38253	Symbol	agent_connect		37627						
ANR	38254	Symbol	active_xfers		37627						
ANR	38255	Symbol	errno		37627						
ANR	38256	Symbol	NULL		37627						
ANR	38257	Symbol	session_info		37627						
ANR	38258	Symbol	TRUE		37627						
ANR	38259	Symbol	stderr		37627						
ANR	38260	Symbol	own_socket		37627						
ANR	38261	Symbol	retval		37627						
ANR	38262	Symbol	uinput_device		37627						
ANR	38263	Symbol	strerror		37627						
ANR	38264	Symbol	VDAGENTD_NO_MESSAGES		37627						
ANR	38265	Symbol	want_session_info		37627						
ANR	38266	Symbol	quit_handler		37627						
ANR	38267	Symbol	SIGINT		37627						
ANR	38268	Symbol	& act		37627						
ANR	38269	Symbol	g_direct_equal		37627						
ANR	38270	Symbol	vdagentd_uinput_create		37627						
ANR	38271	Symbol	server		37627						
ANR	38272	Symbol	agent_disconnect		37627						
ANR	38273	Symbol	only_once		37627						
ANR	38274	Symbol	SIGQUIT		37627						
ANR	38275	Symbol	vdagentd_messages		37627						
ANR	38276	Symbol	g_hash_table_new		37627						
ANR	38277	Symbol	argv		37627						
ANR	38278	Symbol	& virtio_port		37627						
ANR	38279	Symbol	portdev		37627						
ANR	38280	Symbol	LOG_PERROR		37627						
ANR	38281	Symbol	uinput		37627						
ANR	38282	Symbol	vdagentd_socket		37627						
ANR	38283	Symbol	chmod		37627						
ANR	38284	Symbol	SIGHUP		37627						
ANR	38285	Symbol	SIGTERM		37627						
ANR	38286	Symbol	argc		37627						
ANR	38287	Symbol	udscs_create_server_for_fd		37627						
ANR	38288	Symbol	c		37627						
ANR	38289	Symbol	debug		37627						
ANR	38290	Symbol	session_info_create		37627						
ANR	38291	Symbol	unlink		37627						
ANR	38292	Symbol	LOG_USER		37627						
ANR	38293	Symbol	uinput_fake		37627						
ANR	38294	Symbol	& uinput		37627						
ANR	38295	Symbol	FALSE		37627						
ANR	38296	Symbol	LOG_CRIT		37627						
