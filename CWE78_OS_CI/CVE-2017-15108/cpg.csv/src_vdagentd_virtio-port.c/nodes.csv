command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	38297	File	data/converged/CVE-2017-15108_vd_agent/src_vdagentd_virtio-port.c								
ANR	38298	ClassDef	vdagent_virtio_port_buf	36:0:1042:1191							
ANR	38299	DeclStmt									
ANR	38300	Decl							uint8_t	uint8_t *	buf
ANR	38301	DeclStmt									
ANR	38302	Decl							size_t	size_t	pos
ANR	38303	DeclStmt									
ANR	38304	Decl							size_t	size_t	size
ANR	38305	DeclStmt									
ANR	38306	Decl							size_t	size_t	write_pos
ANR	38307	DeclStmt									
ANR	38308	Decl							struct vdagent_virtio_port_buf	struct vdagent_virtio_port_buf *	next
ANR	38309	ClassDef	vdagent_virtio_port_chunk_port_data	47:0:1310:1472							
ANR	38310	DeclStmt									
ANR	38311	Decl							int	int	message_header_read
ANR	38312	DeclStmt									
ANR	38313	Decl							int	int	message_data_pos
ANR	38314	DeclStmt									
ANR	38315	Decl							VDAgentMessage	VDAgentMessage	message_header
ANR	38316	DeclStmt									
ANR	38317	Decl							uint8_t	uint8_t *	message_data
ANR	38318	ClassDef	vdagent_virtio_port	54:0:1476:2174							
ANR	38319	DeclStmt									
ANR	38320	Decl							int	int	fd
ANR	38321	DeclStmt									
ANR	38322	Decl							int	int	opening
ANR	38323	DeclStmt									
ANR	38324	Decl							int	int	is_uds
ANR	38325	DeclStmt									
ANR	38326	Decl							int	int	chunk_header_read
ANR	38327	DeclStmt									
ANR	38328	Decl							int	int	chunk_data_pos
ANR	38329	DeclStmt									
ANR	38330	Decl							VDIChunkHeader	VDIChunkHeader	chunk_header
ANR	38331	DeclStmt									
ANR	38332	Decl							uint8_t	uint8_t [ VD_AGENT_MAX_DATA_SIZE ]	chunk_data
ANR	38333	DeclStmt									
ANR	38334	Decl							struct vdagent_virtio_port_chunk_port_data	struct vdagent_virtio_port_chunk_port_data [ VDP_END_PORT ]	port_data
ANR	38335	DeclStmt									
ANR	38336	Decl							struct vdagent_virtio_port_buf	struct vdagent_virtio_port_buf *	write_buf
ANR	38337	DeclStmt									
ANR	38338	Decl							vdagent_virtio_port_read_callback	vdagent_virtio_port_read_callback	read_callback
ANR	38339	DeclStmt									
ANR	38340	Decl							vdagent_virtio_port_disconnect_callback	vdagent_virtio_port_disconnect_callback	disconnect_callback
ANR	38341	DeclStmt									
ANR	38342	Decl							void	void ( struct vdagent_virtio_port * * vportp )	vdagent_virtio_port_do_write
ANR	38343	DeclStmt									
ANR	38344	Decl							void	void ( struct vdagent_virtio_port * * vportp )	vdagent_virtio_port_do_read
ANR	38345	Function	vdagent_virtio_port_create	80:0:2336:3506							
ANR	38346	FunctionDef	"vdagent_virtio_port_create (const char * portname , vdagent_virtio_port_read_callback read_callback , vdagent_virtio_port_disconnect_callback disconnect_callback)"		38345	0					
ANR	38347	CompoundStatement		83:0:2531:3506	38345	0					
ANR	38348	IdentifierDeclStatement	struct vdagent_virtio_port * vport ;	84:4:2537:2570	38345	0	True				
ANR	38349	IdentifierDecl	* vport		38345	0					
ANR	38350	IdentifierDeclType	struct vdagent_virtio_port *		38345	0					
ANR	38351	Identifier	vport		38345	1					
ANR	38352	IdentifierDeclStatement	struct sockaddr_un address ;	85:4:2576:2602	38345	1	True				
ANR	38353	IdentifierDecl	address		38345	0					
ANR	38354	IdentifierDeclType	struct sockaddr_un		38345	0					
ANR	38355	Identifier	address		38345	1					
ANR	38356	IdentifierDeclStatement	int c ;	86:4:2608:2613	38345	2	True				
ANR	38357	IdentifierDecl	c		38345	0					
ANR	38358	IdentifierDeclType	int		38345	0					
ANR	38359	Identifier	c		38345	1					
ANR	38360	ExpressionStatement	"vport = calloc ( 1 , sizeof ( * vport ) )"	88:4:2620:2653	38345	3	True				
ANR	38361	AssignmentExpression	"vport = calloc ( 1 , sizeof ( * vport ) )"		38345	0		=			
ANR	38362	Identifier	vport		38345	0					
ANR	38363	CallExpression	"calloc ( 1 , sizeof ( * vport ) )"		38345	1					
ANR	38364	Callee	calloc		38345	0					
ANR	38365	Identifier	calloc		38345	0					
ANR	38366	ArgumentList	1		38345	1					
ANR	38367	Argument	1		38345	0					
ANR	38368	PrimaryExpression	1		38345	0					
ANR	38369	Argument	sizeof ( * vport )		38345	1					
ANR	38370	SizeofExpression	sizeof ( * vport )		38345	0					
ANR	38371	Sizeof	sizeof		38345	0					
ANR	38372	UnaryOperationExpression	* vport		38345	1					
ANR	38373	UnaryOperator	*		38345	0					
ANR	38374	Identifier	vport		38345	1					
ANR	38375	IfStatement	if ( ! vport )		38345	4					
ANR	38376	Condition	! vport	89:8:2663:2668	38345	0	True				
ANR	38377	UnaryOperationExpression	! vport		38345	0					
ANR	38378	UnaryOperator	!		38345	0					
ANR	38379	Identifier	vport		38345	1					
ANR	38380	ReturnStatement	return 0 ;	90:8:2679:2687	38345	1	True				
ANR	38381	PrimaryExpression	0		38345	0					
ANR	38382	ExpressionStatement	"vport -> fd = open ( portname , O_RDWR )"	92:4:2694:2728	38345	5	True				
ANR	38383	AssignmentExpression	"vport -> fd = open ( portname , O_RDWR )"		38345	0		=			
ANR	38384	PtrMemberAccess	vport -> fd		38345	0					
ANR	38385	Identifier	vport		38345	0					
ANR	38386	Identifier	fd		38345	1					
ANR	38387	CallExpression	"open ( portname , O_RDWR )"		38345	1					
ANR	38388	Callee	open		38345	0					
ANR	38389	Identifier	open		38345	0					
ANR	38390	ArgumentList	portname		38345	1					
ANR	38391	Argument	portname		38345	0					
ANR	38392	Identifier	portname		38345	0					
ANR	38393	Argument	O_RDWR		38345	1					
ANR	38394	Identifier	O_RDWR		38345	0					
ANR	38395	IfStatement	if ( vport -> fd == - 1 )		38345	6					
ANR	38396	Condition	vport -> fd == - 1	93:8:2738:2752	38345	0	True				
ANR	38397	EqualityExpression	vport -> fd == - 1		38345	0		==			
ANR	38398	PtrMemberAccess	vport -> fd		38345	0					
ANR	38399	Identifier	vport		38345	0					
ANR	38400	Identifier	fd		38345	1					
ANR	38401	UnaryOperationExpression	- 1		38345	1					
ANR	38402	UnaryOperator	-		38345	0					
ANR	38403	PrimaryExpression	1		38345	1					
ANR	38404	CompoundStatement		11:25:223:223	38345	1					
ANR	38405	ExpressionStatement	"vport -> fd = socket ( PF_UNIX , SOCK_STREAM , 0 )"	94:8:2765:2808	38345	0	True				
ANR	38406	AssignmentExpression	"vport -> fd = socket ( PF_UNIX , SOCK_STREAM , 0 )"		38345	0		=			
ANR	38407	PtrMemberAccess	vport -> fd		38345	0					
ANR	38408	Identifier	vport		38345	0					
ANR	38409	Identifier	fd		38345	1					
ANR	38410	CallExpression	"socket ( PF_UNIX , SOCK_STREAM , 0 )"		38345	1					
ANR	38411	Callee	socket		38345	0					
ANR	38412	Identifier	socket		38345	0					
ANR	38413	ArgumentList	PF_UNIX		38345	1					
ANR	38414	Argument	PF_UNIX		38345	0					
ANR	38415	Identifier	PF_UNIX		38345	0					
ANR	38416	Argument	SOCK_STREAM		38345	1					
ANR	38417	Identifier	SOCK_STREAM		38345	0					
ANR	38418	Argument	0		38345	2					
ANR	38419	PrimaryExpression	0		38345	0					
ANR	38420	IfStatement	if ( vport -> fd == - 1 )		38345	1					
ANR	38421	Condition	vport -> fd == - 1	95:12:2822:2836	38345	0	True				
ANR	38422	EqualityExpression	vport -> fd == - 1		38345	0		==			
ANR	38423	PtrMemberAccess	vport -> fd		38345	0					
ANR	38424	Identifier	vport		38345	0					
ANR	38425	Identifier	fd		38345	1					
ANR	38426	UnaryOperationExpression	- 1		38345	1					
ANR	38427	UnaryOperator	-		38345	0					
ANR	38428	PrimaryExpression	1		38345	1					
ANR	38429	CompoundStatement		13:29:307:307	38345	1					
ANR	38430	GotoStatement	goto error ;	96:12:2853:2863	38345	0	True				
ANR	38431	Identifier	error		38345	0					
ANR	38432	ExpressionStatement	address . sun_family = AF_UNIX	98:8:2883:2911	38345	2	True				
ANR	38433	AssignmentExpression	address . sun_family = AF_UNIX		38345	0		=			
ANR	38434	MemberAccess	address . sun_family		38345	0					
ANR	38435	Identifier	address		38345	0					
ANR	38436	Identifier	sun_family		38345	1					
ANR	38437	Identifier	AF_UNIX		38345	1					
ANR	38438	ExpressionStatement	"snprintf ( address . sun_path , sizeof ( address . sun_path ) , ""%s"" , portname )"	99:8:2921:2989	38345	3	True				
ANR	38439	CallExpression	"snprintf ( address . sun_path , sizeof ( address . sun_path ) , ""%s"" , portname )"		38345	0					
ANR	38440	Callee	snprintf		38345	0					
ANR	38441	Identifier	snprintf		38345	0					
ANR	38442	ArgumentList	address . sun_path		38345	1					
ANR	38443	Argument	address . sun_path		38345	0					
ANR	38444	MemberAccess	address . sun_path		38345	0					
ANR	38445	Identifier	address		38345	0					
ANR	38446	Identifier	sun_path		38345	1					
ANR	38447	Argument	sizeof ( address . sun_path )		38345	1					
ANR	38448	SizeofExpression	sizeof ( address . sun_path )		38345	0					
ANR	38449	Sizeof	sizeof		38345	0					
ANR	38450	MemberAccess	address . sun_path		38345	1					
ANR	38451	Identifier	address		38345	0					
ANR	38452	Identifier	sun_path		38345	1					
ANR	38453	Argument	"""%s"""		38345	2					
ANR	38454	PrimaryExpression	"""%s"""		38345	0					
ANR	38455	Argument	portname		38345	3					
ANR	38456	Identifier	portname		38345	0					
ANR	38457	ExpressionStatement	"c = connect ( vport -> fd , ( struct sockaddr * ) & address , sizeof ( address ) )"	100:8:2999:3067	38345	4	True				
ANR	38458	AssignmentExpression	"c = connect ( vport -> fd , ( struct sockaddr * ) & address , sizeof ( address ) )"		38345	0		=			
ANR	38459	Identifier	c		38345	0					
ANR	38460	CallExpression	"connect ( vport -> fd , ( struct sockaddr * ) & address , sizeof ( address ) )"		38345	1					
ANR	38461	Callee	connect		38345	0					
ANR	38462	Identifier	connect		38345	0					
ANR	38463	ArgumentList	vport -> fd		38345	1					
ANR	38464	Argument	vport -> fd		38345	0					
ANR	38465	PtrMemberAccess	vport -> fd		38345	0					
ANR	38466	Identifier	vport		38345	0					
ANR	38467	Identifier	fd		38345	1					
ANR	38468	Argument	( struct sockaddr * ) & address		38345	1					
ANR	38469	CastExpression	( struct sockaddr * ) & address		38345	0					
ANR	38470	CastTarget	struct sockaddr *		38345	0					
ANR	38471	UnaryOperationExpression	& address		38345	1					
ANR	38472	UnaryOperator	&		38345	0					
ANR	38473	Identifier	address		38345	1					
ANR	38474	Argument	sizeof ( address )		38345	2					
ANR	38475	SizeofExpression	sizeof ( address )		38345	0					
ANR	38476	Sizeof	sizeof		38345	0					
ANR	38477	SizeofOperand	address		38345	1					
ANR	38478	IfStatement	if ( c == 0 )		38345	5					
ANR	38479	Condition	c == 0	101:12:3081:3086	38345	0	True				
ANR	38480	EqualityExpression	c == 0		38345	0		==			
ANR	38481	Identifier	c		38345	0					
ANR	38482	PrimaryExpression	0		38345	1					
ANR	38483	CompoundStatement		19:20:557:557	38345	1					
ANR	38484	ExpressionStatement	vport -> is_uds = 1	102:12:3103:3120	38345	0	True				
ANR	38485	AssignmentExpression	vport -> is_uds = 1		38345	0		=			
ANR	38486	PtrMemberAccess	vport -> is_uds		38345	0					
ANR	38487	Identifier	vport		38345	0					
ANR	38488	Identifier	is_uds		38345	1					
ANR	38489	PrimaryExpression	1		38345	1					
ANR	38490	ElseStatement	else		38345	0					
ANR	38491	CompoundStatement		21:15:605:605	38345	0					
ANR	38492	GotoStatement	goto error ;	104:12:3151:3161	38345	0	True				
ANR	38493	Identifier	error		38345	0					
ANR	38494	ElseStatement	else		38345	0					
ANR	38495	CompoundStatement		24:11:652:652	38345	0					
ANR	38496	ExpressionStatement	vport -> is_uds = 0	107:8:3194:3211	38345	0	True				
ANR	38497	AssignmentExpression	vport -> is_uds = 0		38345	0		=			
ANR	38498	PtrMemberAccess	vport -> is_uds		38345	0					
ANR	38499	Identifier	vport		38345	0					
ANR	38500	Identifier	is_uds		38345	1					
ANR	38501	PrimaryExpression	0		38345	1					
ANR	38502	ExpressionStatement	vport -> opening = 1	109:4:3223:3241	38345	7	True				
ANR	38503	AssignmentExpression	vport -> opening = 1		38345	0		=			
ANR	38504	PtrMemberAccess	vport -> opening		38345	0					
ANR	38505	Identifier	vport		38345	0					
ANR	38506	Identifier	opening		38345	1					
ANR	38507	PrimaryExpression	1		38345	1					
ANR	38508	ExpressionStatement	vport -> read_callback = read_callback	111:4:3248:3284	38345	8	True				
ANR	38509	AssignmentExpression	vport -> read_callback = read_callback		38345	0		=			
ANR	38510	PtrMemberAccess	vport -> read_callback		38345	0					
ANR	38511	Identifier	vport		38345	0					
ANR	38512	Identifier	read_callback		38345	1					
ANR	38513	Identifier	read_callback		38345	1					
ANR	38514	ExpressionStatement	vport -> disconnect_callback = disconnect_callback	112:4:3290:3338	38345	9	True				
ANR	38515	AssignmentExpression	vport -> disconnect_callback = disconnect_callback		38345	0		=			
ANR	38516	PtrMemberAccess	vport -> disconnect_callback		38345	0					
ANR	38517	Identifier	vport		38345	0					
ANR	38518	Identifier	disconnect_callback		38345	1					
ANR	38519	Identifier	disconnect_callback		38345	1					
ANR	38520	ReturnStatement	return vport ;	114:4:3345:3357	38345	10	True				
ANR	38521	Identifier	vport		38345	0					
ANR	38522	Label	error :	116:0:3360:3365	38345	11	True				
ANR	38523	Identifier	error		38345	0					
ANR	38524	ExpressionStatement	"syslog ( LOG_ERR , ""open %s: %m"" , portname )"	117:4:3371:3411	38345	12	True				
ANR	38525	CallExpression	"syslog ( LOG_ERR , ""open %s: %m"" , portname )"		38345	0					
ANR	38526	Callee	syslog		38345	0					
ANR	38527	Identifier	syslog		38345	0					
ANR	38528	ArgumentList	LOG_ERR		38345	1					
ANR	38529	Argument	LOG_ERR		38345	0					
ANR	38530	Identifier	LOG_ERR		38345	0					
ANR	38531	Argument	"""open %s: %m"""		38345	1					
ANR	38532	PrimaryExpression	"""open %s: %m"""		38345	0					
ANR	38533	Argument	portname		38345	2					
ANR	38534	Identifier	portname		38345	0					
ANR	38535	IfStatement	if ( vport -> fd != - 1 )		38345	13					
ANR	38536	Condition	vport -> fd != - 1	118:8:3421:3435	38345	0	True				
ANR	38537	EqualityExpression	vport -> fd != - 1		38345	0		!=			
ANR	38538	PtrMemberAccess	vport -> fd		38345	0					
ANR	38539	Identifier	vport		38345	0					
ANR	38540	Identifier	fd		38345	1					
ANR	38541	UnaryOperationExpression	- 1		38345	1					
ANR	38542	UnaryOperator	-		38345	0					
ANR	38543	PrimaryExpression	1		38345	1					
ANR	38544	CompoundStatement		36:25:906:906	38345	1					
ANR	38545	ExpressionStatement	close ( vport -> fd )	119:8:3448:3464	38345	0	True				
ANR	38546	CallExpression	close ( vport -> fd )		38345	0					
ANR	38547	Callee	close		38345	0					
ANR	38548	Identifier	close		38345	0					
ANR	38549	ArgumentList	vport -> fd		38345	1					
ANR	38550	Argument	vport -> fd		38345	0					
ANR	38551	PtrMemberAccess	vport -> fd		38345	0					
ANR	38552	Identifier	vport		38345	0					
ANR	38553	Identifier	fd		38345	1					
ANR	38554	ExpressionStatement	free ( vport )	121:4:3476:3487	38345	14	True				
ANR	38555	CallExpression	free ( vport )		38345	0					
ANR	38556	Callee	free		38345	0					
ANR	38557	Identifier	free		38345	0					
ANR	38558	ArgumentList	vport		38345	1					
ANR	38559	Argument	vport		38345	0					
ANR	38560	Identifier	vport		38345	0					
ANR	38561	ReturnStatement	return NULL ;	122:4:3493:3504	38345	15	True				
ANR	38562	Identifier	NULL		38345	0					
ANR	38563	ReturnType	struct vdagent_virtio_port *		38345	1					
ANR	38564	Identifier	vdagent_virtio_port_create		38345	2					
ANR	38565	ParameterList	"const char * portname , vdagent_virtio_port_read_callback read_callback , vdagent_virtio_port_disconnect_callback disconnect_callback"		38345	3					
ANR	38566	Parameter	const char * portname	80:55:2391:2410	38345	0	True				
ANR	38567	ParameterType	const char *		38345	0					
ANR	38568	Identifier	portname		38345	1					
ANR	38569	Parameter	vdagent_virtio_port_read_callback read_callback	81:4:2417:2463	38345	1	True				
ANR	38570	ParameterType	vdagent_virtio_port_read_callback		38345	0					
ANR	38571	Identifier	read_callback		38345	1					
ANR	38572	Parameter	vdagent_virtio_port_disconnect_callback disconnect_callback	82:4:2470:2528	38345	2	True				
ANR	38573	ParameterType	vdagent_virtio_port_disconnect_callback		38345	0					
ANR	38574	Identifier	disconnect_callback		38345	1					
ANR	38575	CFGEntryNode	ENTRY		38345		True				
ANR	38576	CFGExitNode	EXIT		38345		True				
ANR	38577	Symbol	address . sun_path		38345						
ANR	38578	Symbol	vport		38345						
ANR	38579	Symbol	calloc		38345						
ANR	38580	Symbol	disconnect_callback		38345						
ANR	38581	Symbol	O_RDWR		38345						
ANR	38582	Symbol	SOCK_STREAM		38345						
ANR	38583	Symbol	* vport		38345						
ANR	38584	Symbol	LOG_ERR		38345						
ANR	38585	Symbol	vport -> opening		38345						
ANR	38586	Symbol	connect		38345						
ANR	38587	Symbol	& address		38345						
ANR	38588	Symbol	address		38345						
ANR	38589	Symbol	c		38345						
ANR	38590	Symbol	NULL		38345						
ANR	38591	Symbol	address . sun_family		38345						
ANR	38592	Symbol	read_callback		38345						
ANR	38593	Symbol	vport -> fd		38345						
ANR	38594	Symbol	vport -> disconnect_callback		38345						
ANR	38595	Symbol	AF_UNIX		38345						
ANR	38596	Symbol	vport -> read_callback		38345						
ANR	38597	Symbol	portname		38345						
ANR	38598	Symbol	PF_UNIX		38345						
ANR	38599	Symbol	socket		38345						
ANR	38600	Symbol	open		38345						
ANR	38601	Symbol	vport -> is_uds		38345						
ANR	38602	Function	vdagent_virtio_port_destroy	125:0:3509:4122							
ANR	38603	FunctionDef	vdagent_virtio_port_destroy (struct vdagent_virtio_port * * vportp)		38602	0					
ANR	38604	CompoundStatement		126:0:3579:4122	38602	0					
ANR	38605	IdentifierDeclStatement	"struct vdagent_virtio_port_buf * wbuf , * next_wbuf ;"	127:4:3585:3633	38602	0	True				
ANR	38606	IdentifierDecl	* wbuf		38602	0					
ANR	38607	IdentifierDeclType	struct vdagent_virtio_port_buf *		38602	0					
ANR	38608	Identifier	wbuf		38602	1					
ANR	38609	IdentifierDecl	* next_wbuf		38602	1					
ANR	38610	IdentifierDeclType	struct vdagent_virtio_port_buf *		38602	0					
ANR	38611	Identifier	next_wbuf		38602	1					
ANR	38612	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	128:4:3639:3682	38602	1	True				
ANR	38613	IdentifierDecl	* vport = * vportp		38602	0					
ANR	38614	IdentifierDeclType	struct vdagent_virtio_port *		38602	0					
ANR	38615	Identifier	vport		38602	1					
ANR	38616	AssignmentExpression	* vport = * vportp		38602	2		=			
ANR	38617	Identifier	vport		38602	0					
ANR	38618	UnaryOperationExpression	* vportp		38602	1					
ANR	38619	UnaryOperator	*		38602	0					
ANR	38620	Identifier	vportp		38602	1					
ANR	38621	IdentifierDeclStatement	int i ;	129:4:3688:3693	38602	2	True				
ANR	38622	IdentifierDecl	i		38602	0					
ANR	38623	IdentifierDeclType	int		38602	0					
ANR	38624	Identifier	i		38602	1					
ANR	38625	IfStatement	if ( ! vport )		38602	3					
ANR	38626	Condition	! vport	131:8:3704:3709	38602	0	True				
ANR	38627	UnaryOperationExpression	! vport		38602	0					
ANR	38628	UnaryOperator	!		38602	0					
ANR	38629	Identifier	vport		38602	1					
ANR	38630	ReturnStatement	return ;	132:8:3720:3726	38602	1	True				
ANR	38631	IfStatement	if ( vport -> disconnect_callback )		38602	4					
ANR	38632	Condition	vport -> disconnect_callback	134:8:3737:3762	38602	0	True				
ANR	38633	PtrMemberAccess	vport -> disconnect_callback		38602	0					
ANR	38634	Identifier	vport		38602	0					
ANR	38635	Identifier	disconnect_callback		38602	1					
ANR	38636	ExpressionStatement	vport -> disconnect_callback ( vport )	135:8:3773:3806	38602	1	True				
ANR	38637	CallExpression	vport -> disconnect_callback ( vport )		38602	0					
ANR	38638	Callee	vport -> disconnect_callback		38602	0					
ANR	38639	PtrMemberAccess	vport -> disconnect_callback		38602	0					
ANR	38640	Identifier	vport		38602	0					
ANR	38641	Identifier	disconnect_callback		38602	1					
ANR	38642	ArgumentList	vport		38602	1					
ANR	38643	Argument	vport		38602	0					
ANR	38644	Identifier	vport		38602	0					
ANR	38645	ExpressionStatement	wbuf = vport -> write_buf	137:4:3813:3836	38602	5	True				
ANR	38646	AssignmentExpression	wbuf = vport -> write_buf		38602	0		=			
ANR	38647	Identifier	wbuf		38602	0					
ANR	38648	PtrMemberAccess	vport -> write_buf		38602	1					
ANR	38649	Identifier	vport		38602	0					
ANR	38650	Identifier	write_buf		38602	1					
ANR	38651	WhileStatement	while ( wbuf )		38602	6					
ANR	38652	Condition	wbuf	138:11:3849:3852	38602	0	True				
ANR	38653	Identifier	wbuf		38602	0					
ANR	38654	CompoundStatement		13:17:275:275	38602	1					
ANR	38655	ExpressionStatement	next_wbuf = wbuf -> next	139:8:3865:3887	38602	0	True				
ANR	38656	AssignmentExpression	next_wbuf = wbuf -> next		38602	0		=			
ANR	38657	Identifier	next_wbuf		38602	0					
ANR	38658	PtrMemberAccess	wbuf -> next		38602	1					
ANR	38659	Identifier	wbuf		38602	0					
ANR	38660	Identifier	next		38602	1					
ANR	38661	ExpressionStatement	free ( wbuf -> buf )	140:8:3897:3912	38602	1	True				
ANR	38662	CallExpression	free ( wbuf -> buf )		38602	0					
ANR	38663	Callee	free		38602	0					
ANR	38664	Identifier	free		38602	0					
ANR	38665	ArgumentList	wbuf -> buf		38602	1					
ANR	38666	Argument	wbuf -> buf		38602	0					
ANR	38667	PtrMemberAccess	wbuf -> buf		38602	0					
ANR	38668	Identifier	wbuf		38602	0					
ANR	38669	Identifier	buf		38602	1					
ANR	38670	ExpressionStatement	free ( wbuf )	141:8:3922:3932	38602	2	True				
ANR	38671	CallExpression	free ( wbuf )		38602	0					
ANR	38672	Callee	free		38602	0					
ANR	38673	Identifier	free		38602	0					
ANR	38674	ArgumentList	wbuf		38602	1					
ANR	38675	Argument	wbuf		38602	0					
ANR	38676	Identifier	wbuf		38602	0					
ANR	38677	ExpressionStatement	wbuf = next_wbuf	142:8:3942:3958	38602	3	True				
ANR	38678	AssignmentExpression	wbuf = next_wbuf		38602	0		=			
ANR	38679	Identifier	wbuf		38602	0					
ANR	38680	Identifier	next_wbuf		38602	1					
ANR	38681	ForStatement	for ( i = 0 ; i < VDP_END_PORT ; i ++ )		38602	7					
ANR	38682	ForInit	i = 0 ;	145:9:3976:3981	38602	0	True				
ANR	38683	AssignmentExpression	i = 0		38602	0		=			
ANR	38684	Identifier	i		38602	0					
ANR	38685	PrimaryExpression	0		38602	1					
ANR	38686	Condition	i < VDP_END_PORT	145:16:3983:3998	38602	1	True				
ANR	38687	RelationalExpression	i < VDP_END_PORT		38602	0		<			
ANR	38688	Identifier	i		38602	0					
ANR	38689	Identifier	VDP_END_PORT		38602	1					
ANR	38690	PostIncDecOperationExpression	i ++	145:34:4001:4003	38602	2	True				
ANR	38691	Identifier	i		38602	0					
ANR	38692	IncDec	++		38602	1					
ANR	38693	CompoundStatement		20:39:426:426	38602	3					
ANR	38694	ExpressionStatement	free ( vport -> port_data [ i ] . message_data )	146:8:4016:4054	38602	0	True				
ANR	38695	CallExpression	free ( vport -> port_data [ i ] . message_data )		38602	0					
ANR	38696	Callee	free		38602	0					
ANR	38697	Identifier	free		38602	0					
ANR	38698	ArgumentList	vport -> port_data [ i ] . message_data		38602	1					
ANR	38699	Argument	vport -> port_data [ i ] . message_data		38602	0					
ANR	38700	MemberAccess	vport -> port_data [ i ] . message_data		38602	0					
ANR	38701	ArrayIndexing	vport -> port_data [ i ]		38602	0					
ANR	38702	PtrMemberAccess	vport -> port_data		38602	0					
ANR	38703	Identifier	vport		38602	0					
ANR	38704	Identifier	port_data		38602	1					
ANR	38705	Identifier	i		38602	1					
ANR	38706	Identifier	message_data		38602	1					
ANR	38707	ExpressionStatement	close ( vport -> fd )	149:4:4067:4083	38602	8	True				
ANR	38708	CallExpression	close ( vport -> fd )		38602	0					
ANR	38709	Callee	close		38602	0					
ANR	38710	Identifier	close		38602	0					
ANR	38711	ArgumentList	vport -> fd		38602	1					
ANR	38712	Argument	vport -> fd		38602	0					
ANR	38713	PtrMemberAccess	vport -> fd		38602	0					
ANR	38714	Identifier	vport		38602	0					
ANR	38715	Identifier	fd		38602	1					
ANR	38716	ExpressionStatement	free ( vport )	150:4:4089:4100	38602	9	True				
ANR	38717	CallExpression	free ( vport )		38602	0					
ANR	38718	Callee	free		38602	0					
ANR	38719	Identifier	free		38602	0					
ANR	38720	ArgumentList	vport		38602	1					
ANR	38721	Argument	vport		38602	0					
ANR	38722	Identifier	vport		38602	0					
ANR	38723	ExpressionStatement	* vportp = NULL	151:4:4106:4120	38602	10	True				
ANR	38724	AssignmentExpression	* vportp = NULL		38602	0		=			
ANR	38725	UnaryOperationExpression	* vportp		38602	0					
ANR	38726	UnaryOperator	*		38602	0					
ANR	38727	Identifier	vportp		38602	1					
ANR	38728	Identifier	NULL		38602	1					
ANR	38729	ReturnType	void		38602	1					
ANR	38730	Identifier	vdagent_virtio_port_destroy		38602	2					
ANR	38731	ParameterList	struct vdagent_virtio_port * * vportp		38602	3					
ANR	38732	Parameter	struct vdagent_virtio_port * * vportp	125:33:3542:3576	38602	0	True				
ANR	38733	ParameterType	struct vdagent_virtio_port * *		38602	0					
ANR	38734	Identifier	vportp		38602	1					
ANR	38735	CFGEntryNode	ENTRY		38602		True				
ANR	38736	CFGExitNode	EXIT		38602		True				
ANR	38737	Symbol	vportp		38602						
ANR	38738	Symbol	NULL		38602						
ANR	38739	Symbol	vport		38602						
ANR	38740	Symbol	VDP_END_PORT		38602						
ANR	38741	Symbol	next_wbuf		38602						
ANR	38742	Symbol	vport -> port_data		38602						
ANR	38743	Symbol	* vport -> port_data		38602						
ANR	38744	Symbol	vport -> fd		38602						
ANR	38745	Symbol	vport -> disconnect_callback		38602						
ANR	38746	Symbol	wbuf -> next		38602						
ANR	38747	Symbol	i		38602						
ANR	38748	Symbol	wbuf		38602						
ANR	38749	Symbol	vport -> write_buf		38602						
ANR	38750	Symbol	vport -> port_data [ i ] . message_data		38602						
ANR	38751	Symbol	* i		38602						
ANR	38752	Symbol	* wbuf		38602						
ANR	38753	Symbol	* vport		38602						
ANR	38754	Symbol	* vportp		38602						
ANR	38755	Symbol	wbuf -> buf		38602						
ANR	38756	Symbol	* * vport		38602						
ANR	38757	Function	vdagent_virtio_port_fill_fds	154:0:4125:4396							
ANR	38758	FunctionDef	"vdagent_virtio_port_fill_fds (struct vdagent_virtio_port * vport , fd_set * readfds , fd_set * writefds)"		38757	0					
ANR	38759	CompoundStatement		156:0:4236:4396	38757	0					
ANR	38760	IfStatement	if ( ! vport )		38757	0					
ANR	38761	Condition	! vport	157:8:4246:4251	38757	0	True				
ANR	38762	UnaryOperationExpression	! vport		38757	0					
ANR	38763	UnaryOperator	!		38757	0					
ANR	38764	Identifier	vport		38757	1					
ANR	38765	ReturnStatement	return - 1 ;	158:8:4262:4271	38757	1	True				
ANR	38766	UnaryOperationExpression	- 1		38757	0					
ANR	38767	UnaryOperator	-		38757	0					
ANR	38768	PrimaryExpression	1		38757	1					
ANR	38769	ExpressionStatement	"FD_SET ( vport -> fd , readfds )"	160:4:4278:4304	38757	1	True				
ANR	38770	CallExpression	"FD_SET ( vport -> fd , readfds )"		38757	0					
ANR	38771	Callee	FD_SET		38757	0					
ANR	38772	Identifier	FD_SET		38757	0					
ANR	38773	ArgumentList	vport -> fd		38757	1					
ANR	38774	Argument	vport -> fd		38757	0					
ANR	38775	PtrMemberAccess	vport -> fd		38757	0					
ANR	38776	Identifier	vport		38757	0					
ANR	38777	Identifier	fd		38757	1					
ANR	38778	Argument	readfds		38757	1					
ANR	38779	Identifier	readfds		38757	0					
ANR	38780	IfStatement	if ( vport -> write_buf )		38757	2					
ANR	38781	Condition	vport -> write_buf	161:8:4314:4329	38757	0	True				
ANR	38782	PtrMemberAccess	vport -> write_buf		38757	0					
ANR	38783	Identifier	vport		38757	0					
ANR	38784	Identifier	write_buf		38757	1					
ANR	38785	ExpressionStatement	"FD_SET ( vport -> fd , writefds )"	162:8:4340:4367	38757	1	True				
ANR	38786	CallExpression	"FD_SET ( vport -> fd , writefds )"		38757	0					
ANR	38787	Callee	FD_SET		38757	0					
ANR	38788	Identifier	FD_SET		38757	0					
ANR	38789	ArgumentList	vport -> fd		38757	1					
ANR	38790	Argument	vport -> fd		38757	0					
ANR	38791	PtrMemberAccess	vport -> fd		38757	0					
ANR	38792	Identifier	vport		38757	0					
ANR	38793	Identifier	fd		38757	1					
ANR	38794	Argument	writefds		38757	1					
ANR	38795	Identifier	writefds		38757	0					
ANR	38796	ReturnStatement	return vport -> fd + 1 ;	164:4:4374:4394	38757	3	True				
ANR	38797	AdditiveExpression	vport -> fd + 1		38757	0		+			
ANR	38798	PtrMemberAccess	vport -> fd		38757	0					
ANR	38799	Identifier	vport		38757	0					
ANR	38800	Identifier	fd		38757	1					
ANR	38801	PrimaryExpression	1		38757	1					
ANR	38802	ReturnType	int		38757	1					
ANR	38803	Identifier	vdagent_virtio_port_fill_fds		38757	2					
ANR	38804	ParameterList	"struct vdagent_virtio_port * vport , fd_set * readfds , fd_set * writefds"		38757	3					
ANR	38805	Parameter	struct vdagent_virtio_port * vport	154:33:4158:4190	38757	0	True				
ANR	38806	ParameterType	struct vdagent_virtio_port *		38757	0					
ANR	38807	Identifier	vport		38757	1					
ANR	38808	Parameter	fd_set * readfds	155:8:4201:4215	38757	1	True				
ANR	38809	ParameterType	fd_set *		38757	0					
ANR	38810	Identifier	readfds		38757	1					
ANR	38811	Parameter	fd_set * writefds	155:25:4218:4233	38757	2	True				
ANR	38812	ParameterType	fd_set *		38757	0					
ANR	38813	Identifier	writefds		38757	1					
ANR	38814	CFGEntryNode	ENTRY		38757		True				
ANR	38815	CFGExitNode	EXIT		38757		True				
ANR	38816	Symbol	vport		38757						
ANR	38817	Symbol	* vport		38757						
ANR	38818	Symbol	vport -> fd		38757						
ANR	38819	Symbol	writefds		38757						
ANR	38820	Symbol	readfds		38757						
ANR	38821	Symbol	vport -> write_buf		38757						
ANR	38822	Function	vdagent_virtio_port_handle_fds	167:0:4399:4740							
ANR	38823	FunctionDef	"vdagent_virtio_port_handle_fds (struct vdagent_virtio_port * * vportp , fd_set * readfds , fd_set * writefds)"		38822	0					
ANR	38824	CompoundStatement		169:0:4515:4740	38822	0					
ANR	38825	IfStatement	if ( ! * vportp )		38822	0					
ANR	38826	Condition	! * vportp	170:8:4525:4532	38822	0	True				
ANR	38827	UnaryOperationExpression	! * vportp		38822	0					
ANR	38828	UnaryOperator	!		38822	0					
ANR	38829	UnaryOperationExpression	* vportp		38822	1					
ANR	38830	UnaryOperator	*		38822	0					
ANR	38831	Identifier	vportp		38822	1					
ANR	38832	ReturnStatement	return ;	171:8:4543:4549	38822	1	True				
ANR	38833	IfStatement	"if ( FD_ISSET ( ( * vportp ) -> fd , readfds ) )"		38822	1					
ANR	38834	Condition	"FD_ISSET ( ( * vportp ) -> fd , readfds )"	173:8:4560:4591	38822	0	True				
ANR	38835	CallExpression	"FD_ISSET ( ( * vportp ) -> fd , readfds )"		38822	0					
ANR	38836	Callee	FD_ISSET		38822	0					
ANR	38837	Identifier	FD_ISSET		38822	0					
ANR	38838	ArgumentList	( * vportp ) -> fd		38822	1					
ANR	38839	Argument	( * vportp ) -> fd		38822	0					
ANR	38840	PtrMemberAccess	( * vportp ) -> fd		38822	0					
ANR	38841	UnaryOperationExpression	* vportp		38822	0					
ANR	38842	UnaryOperator	*		38822	0					
ANR	38843	Identifier	vportp		38822	1					
ANR	38844	Identifier	fd		38822	1					
ANR	38845	Argument	readfds		38822	1					
ANR	38846	Identifier	readfds		38822	0					
ANR	38847	ExpressionStatement	vdagent_virtio_port_do_read ( vportp )	174:8:4602:4637	38822	1	True				
ANR	38848	CallExpression	vdagent_virtio_port_do_read ( vportp )		38822	0					
ANR	38849	Callee	vdagent_virtio_port_do_read		38822	0					
ANR	38850	Identifier	vdagent_virtio_port_do_read		38822	0					
ANR	38851	ArgumentList	vportp		38822	1					
ANR	38852	Argument	vportp		38822	0					
ANR	38853	Identifier	vportp		38822	0					
ANR	38854	IfStatement	"if ( * vportp && FD_ISSET ( ( * vportp ) -> fd , writefds ) )"		38822	2					
ANR	38855	Condition	"* vportp && FD_ISSET ( ( * vportp ) -> fd , writefds )"	176:8:4648:4691	38822	0	True				
ANR	38856	AndExpression	"* vportp && FD_ISSET ( ( * vportp ) -> fd , writefds )"		38822	0		&&			
ANR	38857	UnaryOperationExpression	* vportp		38822	0					
ANR	38858	UnaryOperator	*		38822	0					
ANR	38859	Identifier	vportp		38822	1					
ANR	38860	CallExpression	"FD_ISSET ( ( * vportp ) -> fd , writefds )"		38822	1					
ANR	38861	Callee	FD_ISSET		38822	0					
ANR	38862	Identifier	FD_ISSET		38822	0					
ANR	38863	ArgumentList	( * vportp ) -> fd		38822	1					
ANR	38864	Argument	( * vportp ) -> fd		38822	0					
ANR	38865	PtrMemberAccess	( * vportp ) -> fd		38822	0					
ANR	38866	UnaryOperationExpression	* vportp		38822	0					
ANR	38867	UnaryOperator	*		38822	0					
ANR	38868	Identifier	vportp		38822	1					
ANR	38869	Identifier	fd		38822	1					
ANR	38870	Argument	writefds		38822	1					
ANR	38871	Identifier	writefds		38822	0					
ANR	38872	ExpressionStatement	vdagent_virtio_port_do_write ( vportp )	177:8:4702:4738	38822	1	True				
ANR	38873	CallExpression	vdagent_virtio_port_do_write ( vportp )		38822	0					
ANR	38874	Callee	vdagent_virtio_port_do_write		38822	0					
ANR	38875	Identifier	vdagent_virtio_port_do_write		38822	0					
ANR	38876	ArgumentList	vportp		38822	1					
ANR	38877	Argument	vportp		38822	0					
ANR	38878	Identifier	vportp		38822	0					
ANR	38879	ReturnType	void		38822	1					
ANR	38880	Identifier	vdagent_virtio_port_handle_fds		38822	2					
ANR	38881	ParameterList	"struct vdagent_virtio_port * * vportp , fd_set * readfds , fd_set * writefds"		38822	3					
ANR	38882	Parameter	struct vdagent_virtio_port * * vportp	167:36:4435:4469	38822	0	True				
ANR	38883	ParameterType	struct vdagent_virtio_port * *		38822	0					
ANR	38884	Identifier	vportp		38822	1					
ANR	38885	Parameter	fd_set * readfds	168:8:4480:4494	38822	1	True				
ANR	38886	ParameterType	fd_set *		38822	0					
ANR	38887	Identifier	readfds		38822	1					
ANR	38888	Parameter	fd_set * writefds	168:25:4497:4512	38822	2	True				
ANR	38889	ParameterType	fd_set *		38822	0					
ANR	38890	Identifier	writefds		38822	1					
ANR	38891	CFGEntryNode	ENTRY		38822		True				
ANR	38892	CFGExitNode	EXIT		38822		True				
ANR	38893	Symbol	( * vportp ) -> fd		38822						
ANR	38894	Symbol	vportp		38822						
ANR	38895	Symbol	FD_ISSET		38822						
ANR	38896	Symbol	writefds		38822						
ANR	38897	Symbol	* * vportp		38822						
ANR	38898	Symbol	readfds		38822						
ANR	38899	Symbol	* vportp		38822						
ANR	38900	Function	vdagent_virtio_port_get_last_wbuf	180:0:4743:5035							
ANR	38901	FunctionDef	vdagent_virtio_port_get_last_wbuf (struct vdagent_virtio_port * vport)		38900	0					
ANR	38902	CompoundStatement		182:0:4856:5035	38900	0					
ANR	38903	IdentifierDeclStatement	struct vdagent_virtio_port_buf * wbuf ;	183:4:4862:4898	38900	0	True				
ANR	38904	IdentifierDecl	* wbuf		38900	0					
ANR	38905	IdentifierDeclType	struct vdagent_virtio_port_buf *		38900	0					
ANR	38906	Identifier	wbuf		38900	1					
ANR	38907	ExpressionStatement	wbuf = vport -> write_buf	185:4:4905:4928	38900	1	True				
ANR	38908	AssignmentExpression	wbuf = vport -> write_buf		38900	0		=			
ANR	38909	Identifier	wbuf		38900	0					
ANR	38910	PtrMemberAccess	vport -> write_buf		38900	1					
ANR	38911	Identifier	vport		38900	0					
ANR	38912	Identifier	write_buf		38900	1					
ANR	38913	IfStatement	if ( ! wbuf )		38900	2					
ANR	38914	Condition	! wbuf	186:8:4938:4942	38900	0	True				
ANR	38915	UnaryOperationExpression	! wbuf		38900	0					
ANR	38916	UnaryOperator	!		38900	0					
ANR	38917	Identifier	wbuf		38900	1					
ANR	38918	ReturnStatement	return NULL ;	187:8:4953:4964	38900	1	True				
ANR	38919	Identifier	NULL		38900	0					
ANR	38920	WhileStatement	while ( wbuf -> next )		38900	3					
ANR	38921	Condition	wbuf -> next	189:11:4978:4987	38900	0	True				
ANR	38922	PtrMemberAccess	wbuf -> next		38900	0					
ANR	38923	Identifier	wbuf		38900	0					
ANR	38924	Identifier	next		38900	1					
ANR	38925	ExpressionStatement	wbuf = wbuf -> next	190:8:4998:5015	38900	1	True				
ANR	38926	AssignmentExpression	wbuf = wbuf -> next		38900	0		=			
ANR	38927	Identifier	wbuf		38900	0					
ANR	38928	PtrMemberAccess	wbuf -> next		38900	1					
ANR	38929	Identifier	wbuf		38900	0					
ANR	38930	Identifier	next		38900	1					
ANR	38931	ReturnStatement	return wbuf ;	192:4:5022:5033	38900	4	True				
ANR	38932	Identifier	wbuf		38900	0					
ANR	38933	ReturnType	static struct vdagent_virtio_port_buf *		38900	1					
ANR	38934	Identifier	vdagent_virtio_port_get_last_wbuf		38900	2					
ANR	38935	ParameterList	struct vdagent_virtio_port * vport		38900	3					
ANR	38936	Parameter	struct vdagent_virtio_port * vport	181:4:4821:4853	38900	0	True				
ANR	38937	ParameterType	struct vdagent_virtio_port *		38900	0					
ANR	38938	Identifier	vport		38900	1					
ANR	38939	CFGEntryNode	ENTRY		38900		True				
ANR	38940	CFGExitNode	EXIT		38900		True				
ANR	38941	Symbol	NULL		38900						
ANR	38942	Symbol	vport		38900						
ANR	38943	Symbol	* wbuf		38900						
ANR	38944	Symbol	* vport		38900						
ANR	38945	Symbol	wbuf -> next		38900						
ANR	38946	Symbol	wbuf		38900						
ANR	38947	Symbol	vport -> write_buf		38900						
ANR	38948	Function	vdagent_virtio_port_write_start	195:0:5038:6559							
ANR	38949	FunctionDef	"vdagent_virtio_port_write_start (struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , uint32_t data_size)"		38948	0					
ANR	38950	CompoundStatement		201:0:5236:6559	38948	0					
ANR	38951	IdentifierDeclStatement	"struct vdagent_virtio_port_buf * wbuf , * new_wbuf ;"	202:4:5242:5289	38948	0	True				
ANR	38952	IdentifierDecl	* wbuf		38948	0					
ANR	38953	IdentifierDeclType	struct vdagent_virtio_port_buf *		38948	0					
ANR	38954	Identifier	wbuf		38948	1					
ANR	38955	IdentifierDecl	* new_wbuf		38948	1					
ANR	38956	IdentifierDeclType	struct vdagent_virtio_port_buf *		38948	0					
ANR	38957	Identifier	new_wbuf		38948	1					
ANR	38958	IdentifierDeclStatement	VDIChunkHeader chunk_header ;	203:4:5295:5322	38948	1	True				
ANR	38959	IdentifierDecl	chunk_header		38948	0					
ANR	38960	IdentifierDeclType	VDIChunkHeader		38948	0					
ANR	38961	Identifier	chunk_header		38948	1					
ANR	38962	IdentifierDeclStatement	VDAgentMessage message_header ;	204:4:5328:5357	38948	2	True				
ANR	38963	IdentifierDecl	message_header		38948	0					
ANR	38964	IdentifierDeclType	VDAgentMessage		38948	0					
ANR	38965	Identifier	message_header		38948	1					
ANR	38966	ExpressionStatement	new_wbuf = malloc ( sizeof ( * new_wbuf ) )	206:4:5364:5400	38948	3	True				
ANR	38967	AssignmentExpression	new_wbuf = malloc ( sizeof ( * new_wbuf ) )		38948	0		=			
ANR	38968	Identifier	new_wbuf		38948	0					
ANR	38969	CallExpression	malloc ( sizeof ( * new_wbuf ) )		38948	1					
ANR	38970	Callee	malloc		38948	0					
ANR	38971	Identifier	malloc		38948	0					
ANR	38972	ArgumentList	sizeof ( * new_wbuf )		38948	1					
ANR	38973	Argument	sizeof ( * new_wbuf )		38948	0					
ANR	38974	SizeofExpression	sizeof ( * new_wbuf )		38948	0					
ANR	38975	Sizeof	sizeof		38948	0					
ANR	38976	UnaryOperationExpression	* new_wbuf		38948	1					
ANR	38977	UnaryOperator	*		38948	0					
ANR	38978	Identifier	new_wbuf		38948	1					
ANR	38979	IfStatement	if ( ! new_wbuf )		38948	4					
ANR	38980	Condition	! new_wbuf	207:8:5410:5418	38948	0	True				
ANR	38981	UnaryOperationExpression	! new_wbuf		38948	0					
ANR	38982	UnaryOperator	!		38948	0					
ANR	38983	Identifier	new_wbuf		38948	1					
ANR	38984	ReturnStatement	return - 1 ;	208:8:5429:5438	38948	1	True				
ANR	38985	UnaryOperationExpression	- 1		38948	0					
ANR	38986	UnaryOperator	-		38948	0					
ANR	38987	PrimaryExpression	1		38948	1					
ANR	38988	ExpressionStatement	new_wbuf -> pos = 0	210:4:5445:5462	38948	5	True				
ANR	38989	AssignmentExpression	new_wbuf -> pos = 0		38948	0		=			
ANR	38990	PtrMemberAccess	new_wbuf -> pos		38948	0					
ANR	38991	Identifier	new_wbuf		38948	0					
ANR	38992	Identifier	pos		38948	1					
ANR	38993	PrimaryExpression	0		38948	1					
ANR	38994	ExpressionStatement	new_wbuf -> write_pos = 0	211:4:5468:5491	38948	6	True				
ANR	38995	AssignmentExpression	new_wbuf -> write_pos = 0		38948	0		=			
ANR	38996	PtrMemberAccess	new_wbuf -> write_pos		38948	0					
ANR	38997	Identifier	new_wbuf		38948	0					
ANR	38998	Identifier	write_pos		38948	1					
ANR	38999	PrimaryExpression	0		38948	1					
ANR	39000	ExpressionStatement	new_wbuf -> size = sizeof ( chunk_header ) + sizeof ( message_header ) + data_size	212:4:5497:5571	38948	7	True				
ANR	39001	AssignmentExpression	new_wbuf -> size = sizeof ( chunk_header ) + sizeof ( message_header ) + data_size		38948	0		=			
ANR	39002	PtrMemberAccess	new_wbuf -> size		38948	0					
ANR	39003	Identifier	new_wbuf		38948	0					
ANR	39004	Identifier	size		38948	1					
ANR	39005	AdditiveExpression	sizeof ( chunk_header ) + sizeof ( message_header ) + data_size		38948	1		+			
ANR	39006	SizeofExpression	sizeof ( chunk_header )		38948	0					
ANR	39007	Sizeof	sizeof		38948	0					
ANR	39008	SizeofOperand	chunk_header		38948	1					
ANR	39009	AdditiveExpression	sizeof ( message_header ) + data_size		38948	1		+			
ANR	39010	SizeofExpression	sizeof ( message_header )		38948	0					
ANR	39011	Sizeof	sizeof		38948	0					
ANR	39012	SizeofOperand	message_header		38948	1					
ANR	39013	Identifier	data_size		38948	1					
ANR	39014	ExpressionStatement	new_wbuf -> next = NULL	213:4:5577:5598	38948	8	True				
ANR	39015	AssignmentExpression	new_wbuf -> next = NULL		38948	0		=			
ANR	39016	PtrMemberAccess	new_wbuf -> next		38948	0					
ANR	39017	Identifier	new_wbuf		38948	0					
ANR	39018	Identifier	next		38948	1					
ANR	39019	Identifier	NULL		38948	1					
ANR	39020	ExpressionStatement	new_wbuf -> buf = malloc ( new_wbuf -> size )	214:4:5604:5642	38948	9	True				
ANR	39021	AssignmentExpression	new_wbuf -> buf = malloc ( new_wbuf -> size )		38948	0		=			
ANR	39022	PtrMemberAccess	new_wbuf -> buf		38948	0					
ANR	39023	Identifier	new_wbuf		38948	0					
ANR	39024	Identifier	buf		38948	1					
ANR	39025	CallExpression	malloc ( new_wbuf -> size )		38948	1					
ANR	39026	Callee	malloc		38948	0					
ANR	39027	Identifier	malloc		38948	0					
ANR	39028	ArgumentList	new_wbuf -> size		38948	1					
ANR	39029	Argument	new_wbuf -> size		38948	0					
ANR	39030	PtrMemberAccess	new_wbuf -> size		38948	0					
ANR	39031	Identifier	new_wbuf		38948	0					
ANR	39032	Identifier	size		38948	1					
ANR	39033	IfStatement	if ( ! new_wbuf -> buf )		38948	10					
ANR	39034	Condition	! new_wbuf -> buf	215:8:5652:5665	38948	0	True				
ANR	39035	UnaryOperationExpression	! new_wbuf -> buf		38948	0					
ANR	39036	UnaryOperator	!		38948	0					
ANR	39037	PtrMemberAccess	new_wbuf -> buf		38948	1					
ANR	39038	Identifier	new_wbuf		38948	0					
ANR	39039	Identifier	buf		38948	1					
ANR	39040	CompoundStatement		15:24:431:431	38948	1					
ANR	39041	ExpressionStatement	free ( new_wbuf )	216:8:5678:5692	38948	0	True				
ANR	39042	CallExpression	free ( new_wbuf )		38948	0					
ANR	39043	Callee	free		38948	0					
ANR	39044	Identifier	free		38948	0					
ANR	39045	ArgumentList	new_wbuf		38948	1					
ANR	39046	Argument	new_wbuf		38948	0					
ANR	39047	Identifier	new_wbuf		38948	0					
ANR	39048	ReturnStatement	return - 1 ;	217:8:5702:5711	38948	1	True				
ANR	39049	UnaryOperationExpression	- 1		38948	0					
ANR	39050	UnaryOperator	-		38948	0					
ANR	39051	PrimaryExpression	1		38948	1					
ANR	39052	ExpressionStatement	chunk_header . port = GUINT32_TO_LE ( port_nr )	220:4:5724:5766	38948	11	True				
ANR	39053	AssignmentExpression	chunk_header . port = GUINT32_TO_LE ( port_nr )		38948	0		=			
ANR	39054	MemberAccess	chunk_header . port		38948	0					
ANR	39055	Identifier	chunk_header		38948	0					
ANR	39056	Identifier	port		38948	1					
ANR	39057	CallExpression	GUINT32_TO_LE ( port_nr )		38948	1					
ANR	39058	Callee	GUINT32_TO_LE		38948	0					
ANR	39059	Identifier	GUINT32_TO_LE		38948	0					
ANR	39060	ArgumentList	port_nr		38948	1					
ANR	39061	Argument	port_nr		38948	0					
ANR	39062	Identifier	port_nr		38948	0					
ANR	39063	ExpressionStatement	chunk_header . size = GUINT32_TO_LE ( sizeof ( message_header ) + data_size )	221:4:5772:5841	38948	12	True				
ANR	39064	AssignmentExpression	chunk_header . size = GUINT32_TO_LE ( sizeof ( message_header ) + data_size )		38948	0		=			
ANR	39065	MemberAccess	chunk_header . size		38948	0					
ANR	39066	Identifier	chunk_header		38948	0					
ANR	39067	Identifier	size		38948	1					
ANR	39068	CallExpression	GUINT32_TO_LE ( sizeof ( message_header ) + data_size )		38948	1					
ANR	39069	Callee	GUINT32_TO_LE		38948	0					
ANR	39070	Identifier	GUINT32_TO_LE		38948	0					
ANR	39071	ArgumentList	sizeof ( message_header ) + data_size		38948	1					
ANR	39072	Argument	sizeof ( message_header ) + data_size		38948	0					
ANR	39073	AdditiveExpression	sizeof ( message_header ) + data_size		38948	0		+			
ANR	39074	SizeofExpression	sizeof ( message_header )		38948	0					
ANR	39075	Sizeof	sizeof		38948	0					
ANR	39076	SizeofOperand	message_header		38948	1					
ANR	39077	Identifier	data_size		38948	1					
ANR	39078	ExpressionStatement	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & chunk_header , sizeof ( chunk_header ) )"	222:4:5847:5938	38948	13	True				
ANR	39079	CallExpression	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & chunk_header , sizeof ( chunk_header ) )"		38948	0					
ANR	39080	Callee	memcpy		38948	0					
ANR	39081	Identifier	memcpy		38948	0					
ANR	39082	ArgumentList	new_wbuf -> buf + new_wbuf -> write_pos		38948	1					
ANR	39083	Argument	new_wbuf -> buf + new_wbuf -> write_pos		38948	0					
ANR	39084	AdditiveExpression	new_wbuf -> buf + new_wbuf -> write_pos		38948	0		+			
ANR	39085	PtrMemberAccess	new_wbuf -> buf		38948	0					
ANR	39086	Identifier	new_wbuf		38948	0					
ANR	39087	Identifier	buf		38948	1					
ANR	39088	PtrMemberAccess	new_wbuf -> write_pos		38948	1					
ANR	39089	Identifier	new_wbuf		38948	0					
ANR	39090	Identifier	write_pos		38948	1					
ANR	39091	Argument	& chunk_header		38948	1					
ANR	39092	UnaryOperationExpression	& chunk_header		38948	0					
ANR	39093	UnaryOperator	&		38948	0					
ANR	39094	Identifier	chunk_header		38948	1					
ANR	39095	Argument	sizeof ( chunk_header )		38948	2					
ANR	39096	SizeofExpression	sizeof ( chunk_header )		38948	0					
ANR	39097	Sizeof	sizeof		38948	0					
ANR	39098	SizeofOperand	chunk_header		38948	1					
ANR	39099	ExpressionStatement	new_wbuf -> write_pos += sizeof ( chunk_header )	224:4:5944:5987	38948	14	True				
ANR	39100	AssignmentExpression	new_wbuf -> write_pos += sizeof ( chunk_header )		38948	0		+=			
ANR	39101	PtrMemberAccess	new_wbuf -> write_pos		38948	0					
ANR	39102	Identifier	new_wbuf		38948	0					
ANR	39103	Identifier	write_pos		38948	1					
ANR	39104	SizeofExpression	sizeof ( chunk_header )		38948	1					
ANR	39105	Sizeof	sizeof		38948	0					
ANR	39106	SizeofOperand	chunk_header		38948	1					
ANR	39107	ExpressionStatement	message_header . protocol = GUINT32_TO_LE ( VD_AGENT_PROTOCOL )	226:4:5994:6052	38948	15	True				
ANR	39108	AssignmentExpression	message_header . protocol = GUINT32_TO_LE ( VD_AGENT_PROTOCOL )		38948	0		=			
ANR	39109	MemberAccess	message_header . protocol		38948	0					
ANR	39110	Identifier	message_header		38948	0					
ANR	39111	Identifier	protocol		38948	1					
ANR	39112	CallExpression	GUINT32_TO_LE ( VD_AGENT_PROTOCOL )		38948	1					
ANR	39113	Callee	GUINT32_TO_LE		38948	0					
ANR	39114	Identifier	GUINT32_TO_LE		38948	0					
ANR	39115	ArgumentList	VD_AGENT_PROTOCOL		38948	1					
ANR	39116	Argument	VD_AGENT_PROTOCOL		38948	0					
ANR	39117	Identifier	VD_AGENT_PROTOCOL		38948	0					
ANR	39118	ExpressionStatement	message_header . type = GUINT32_TO_LE ( message_type )	227:4:6058:6107	38948	16	True				
ANR	39119	AssignmentExpression	message_header . type = GUINT32_TO_LE ( message_type )		38948	0		=			
ANR	39120	MemberAccess	message_header . type		38948	0					
ANR	39121	Identifier	message_header		38948	0					
ANR	39122	Identifier	type		38948	1					
ANR	39123	CallExpression	GUINT32_TO_LE ( message_type )		38948	1					
ANR	39124	Callee	GUINT32_TO_LE		38948	0					
ANR	39125	Identifier	GUINT32_TO_LE		38948	0					
ANR	39126	ArgumentList	message_type		38948	1					
ANR	39127	Argument	message_type		38948	0					
ANR	39128	Identifier	message_type		38948	0					
ANR	39129	ExpressionStatement	message_header . opaque = GUINT64_TO_LE ( message_opaque )	228:4:6113:6166	38948	17	True				
ANR	39130	AssignmentExpression	message_header . opaque = GUINT64_TO_LE ( message_opaque )		38948	0		=			
ANR	39131	MemberAccess	message_header . opaque		38948	0					
ANR	39132	Identifier	message_header		38948	0					
ANR	39133	Identifier	opaque		38948	1					
ANR	39134	CallExpression	GUINT64_TO_LE ( message_opaque )		38948	1					
ANR	39135	Callee	GUINT64_TO_LE		38948	0					
ANR	39136	Identifier	GUINT64_TO_LE		38948	0					
ANR	39137	ArgumentList	message_opaque		38948	1					
ANR	39138	Argument	message_opaque		38948	0					
ANR	39139	Identifier	message_opaque		38948	0					
ANR	39140	ExpressionStatement	message_header . size = GUINT32_TO_LE ( data_size )	229:4:6172:6218	38948	18	True				
ANR	39141	AssignmentExpression	message_header . size = GUINT32_TO_LE ( data_size )		38948	0		=			
ANR	39142	MemberAccess	message_header . size		38948	0					
ANR	39143	Identifier	message_header		38948	0					
ANR	39144	Identifier	size		38948	1					
ANR	39145	CallExpression	GUINT32_TO_LE ( data_size )		38948	1					
ANR	39146	Callee	GUINT32_TO_LE		38948	0					
ANR	39147	Identifier	GUINT32_TO_LE		38948	0					
ANR	39148	ArgumentList	data_size		38948	1					
ANR	39149	Argument	data_size		38948	0					
ANR	39150	Identifier	data_size		38948	0					
ANR	39151	ExpressionStatement	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & message_header , sizeof ( message_header ) )"	230:4:6224:6319	38948	19	True				
ANR	39152	CallExpression	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & message_header , sizeof ( message_header ) )"		38948	0					
ANR	39153	Callee	memcpy		38948	0					
ANR	39154	Identifier	memcpy		38948	0					
ANR	39155	ArgumentList	new_wbuf -> buf + new_wbuf -> write_pos		38948	1					
ANR	39156	Argument	new_wbuf -> buf + new_wbuf -> write_pos		38948	0					
ANR	39157	AdditiveExpression	new_wbuf -> buf + new_wbuf -> write_pos		38948	0		+			
ANR	39158	PtrMemberAccess	new_wbuf -> buf		38948	0					
ANR	39159	Identifier	new_wbuf		38948	0					
ANR	39160	Identifier	buf		38948	1					
ANR	39161	PtrMemberAccess	new_wbuf -> write_pos		38948	1					
ANR	39162	Identifier	new_wbuf		38948	0					
ANR	39163	Identifier	write_pos		38948	1					
ANR	39164	Argument	& message_header		38948	1					
ANR	39165	UnaryOperationExpression	& message_header		38948	0					
ANR	39166	UnaryOperator	&		38948	0					
ANR	39167	Identifier	message_header		38948	1					
ANR	39168	Argument	sizeof ( message_header )		38948	2					
ANR	39169	SizeofExpression	sizeof ( message_header )		38948	0					
ANR	39170	Sizeof	sizeof		38948	0					
ANR	39171	SizeofOperand	message_header		38948	1					
ANR	39172	ExpressionStatement	new_wbuf -> write_pos += sizeof ( message_header )	232:4:6325:6370	38948	20	True				
ANR	39173	AssignmentExpression	new_wbuf -> write_pos += sizeof ( message_header )		38948	0		+=			
ANR	39174	PtrMemberAccess	new_wbuf -> write_pos		38948	0					
ANR	39175	Identifier	new_wbuf		38948	0					
ANR	39176	Identifier	write_pos		38948	1					
ANR	39177	SizeofExpression	sizeof ( message_header )		38948	1					
ANR	39178	Sizeof	sizeof		38948	0					
ANR	39179	SizeofOperand	message_header		38948	1					
ANR	39180	IfStatement	if ( ! vport -> write_buf )		38948	21					
ANR	39181	Condition	! vport -> write_buf	234:8:6381:6397	38948	0	True				
ANR	39182	UnaryOperationExpression	! vport -> write_buf		38948	0					
ANR	39183	UnaryOperator	!		38948	0					
ANR	39184	PtrMemberAccess	vport -> write_buf		38948	1					
ANR	39185	Identifier	vport		38948	0					
ANR	39186	Identifier	write_buf		38948	1					
ANR	39187	CompoundStatement		34:27:1163:1163	38948	1					
ANR	39188	ExpressionStatement	vport -> write_buf = new_wbuf	235:8:6410:6437	38948	0	True				
ANR	39189	AssignmentExpression	vport -> write_buf = new_wbuf		38948	0		=			
ANR	39190	PtrMemberAccess	vport -> write_buf		38948	0					
ANR	39191	Identifier	vport		38948	0					
ANR	39192	Identifier	write_buf		38948	1					
ANR	39193	Identifier	new_wbuf		38948	1					
ANR	39194	ReturnStatement	return 0 ;	236:8:6447:6455	38948	1	True				
ANR	39195	PrimaryExpression	0		38948	0					
ANR	39196	ExpressionStatement	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )	239:4:6468:6515	38948	22	True				
ANR	39197	AssignmentExpression	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )		38948	0		=			
ANR	39198	Identifier	wbuf		38948	0					
ANR	39199	CallExpression	vdagent_virtio_port_get_last_wbuf ( vport )		38948	1					
ANR	39200	Callee	vdagent_virtio_port_get_last_wbuf		38948	0					
ANR	39201	Identifier	vdagent_virtio_port_get_last_wbuf		38948	0					
ANR	39202	ArgumentList	vport		38948	1					
ANR	39203	Argument	vport		38948	0					
ANR	39204	Identifier	vport		38948	0					
ANR	39205	ExpressionStatement	wbuf -> next = new_wbuf	240:4:6521:6542	38948	23	True				
ANR	39206	AssignmentExpression	wbuf -> next = new_wbuf		38948	0		=			
ANR	39207	PtrMemberAccess	wbuf -> next		38948	0					
ANR	39208	Identifier	wbuf		38948	0					
ANR	39209	Identifier	next		38948	1					
ANR	39210	Identifier	new_wbuf		38948	1					
ANR	39211	ReturnStatement	return 0 ;	242:4:6549:6557	38948	24	True				
ANR	39212	PrimaryExpression	0		38948	0					
ANR	39213	ReturnType	int		38948	1					
ANR	39214	Identifier	vdagent_virtio_port_write_start		38948	2					
ANR	39215	ParameterList	"struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , uint32_t data_size"		38948	3					
ANR	39216	Parameter	struct vdagent_virtio_port * vport	196:8:5083:5115	38948	0	True				
ANR	39217	ParameterType	struct vdagent_virtio_port *		38948	0					
ANR	39218	Identifier	vport		38948	1					
ANR	39219	Parameter	uint32_t port_nr	197:8:5126:5141	38948	1	True				
ANR	39220	ParameterType	uint32_t		38948	0					
ANR	39221	Identifier	port_nr		38948	1					
ANR	39222	Parameter	uint32_t message_type	198:8:5152:5172	38948	2	True				
ANR	39223	ParameterType	uint32_t		38948	0					
ANR	39224	Identifier	message_type		38948	1					
ANR	39225	Parameter	uint32_t message_opaque	199:8:5183:5205	38948	3	True				
ANR	39226	ParameterType	uint32_t		38948	0					
ANR	39227	Identifier	message_opaque		38948	1					
ANR	39228	Parameter	uint32_t data_size	200:8:5216:5233	38948	4	True				
ANR	39229	ParameterType	uint32_t		38948	0					
ANR	39230	Identifier	data_size		38948	1					
ANR	39231	CFGEntryNode	ENTRY		38948		True				
ANR	39232	CFGExitNode	EXIT		38948		True				
ANR	39233	Symbol	message_header . type		38948						
ANR	39234	Symbol	new_wbuf		38948						
ANR	39235	Symbol	VD_AGENT_PROTOCOL		38948						
ANR	39236	Symbol	vport		38948						
ANR	39237	Symbol	new_wbuf -> size		38948						
ANR	39238	Symbol	message_header		38948						
ANR	39239	Symbol	message_header . size		38948						
ANR	39240	Symbol	chunk_header		38948						
ANR	39241	Symbol	vport -> write_buf		38948						
ANR	39242	Symbol	new_wbuf -> write_pos		38948						
ANR	39243	Symbol	message_header . opaque		38948						
ANR	39244	Symbol	* vport		38948						
ANR	39245	Symbol	message_opaque		38948						
ANR	39246	Symbol	new_wbuf -> pos		38948						
ANR	39247	Symbol	GUINT64_TO_LE		38948						
ANR	39248	Symbol	data_size		38948						
ANR	39249	Symbol	malloc		38948						
ANR	39250	Symbol	port_nr		38948						
ANR	39251	Symbol	NULL		38948						
ANR	39252	Symbol	* new_wbuf		38948						
ANR	39253	Symbol	wbuf -> next		38948						
ANR	39254	Symbol	& message_header		38948						
ANR	39255	Symbol	message_type		38948						
ANR	39256	Symbol	wbuf		38948						
ANR	39257	Symbol	GUINT32_TO_LE		38948						
ANR	39258	Symbol	new_wbuf -> next		38948						
ANR	39259	Symbol	chunk_header . port		38948						
ANR	39260	Symbol	* wbuf		38948						
ANR	39261	Symbol	& chunk_header		38948						
ANR	39262	Symbol	new_wbuf -> buf		38948						
ANR	39263	Symbol	vdagent_virtio_port_get_last_wbuf		38948						
ANR	39264	Symbol	chunk_header . size		38948						
ANR	39265	Symbol	message_header . protocol		38948						
ANR	39266	Function	vdagent_virtio_port_write_append	245:0:6562:7131							
ANR	39267	FunctionDef	"vdagent_virtio_port_write_append (struct vdagent_virtio_port * vport , const uint8_t * data , uint32_t size)"		39266	0					
ANR	39268	CompoundStatement		247:0:6707:7131	39266	0					
ANR	39269	IdentifierDeclStatement	struct vdagent_virtio_port_buf * wbuf ;	248:4:6713:6749	39266	0	True				
ANR	39270	IdentifierDecl	* wbuf		39266	0					
ANR	39271	IdentifierDeclType	struct vdagent_virtio_port_buf *		39266	0					
ANR	39272	Identifier	wbuf		39266	1					
ANR	39273	ExpressionStatement	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )	250:4:6756:6803	39266	1	True				
ANR	39274	AssignmentExpression	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )		39266	0		=			
ANR	39275	Identifier	wbuf		39266	0					
ANR	39276	CallExpression	vdagent_virtio_port_get_last_wbuf ( vport )		39266	1					
ANR	39277	Callee	vdagent_virtio_port_get_last_wbuf		39266	0					
ANR	39278	Identifier	vdagent_virtio_port_get_last_wbuf		39266	0					
ANR	39279	ArgumentList	vport		39266	1					
ANR	39280	Argument	vport		39266	0					
ANR	39281	Identifier	vport		39266	0					
ANR	39282	IfStatement	if ( ! wbuf )		39266	2					
ANR	39283	Condition	! wbuf	251:8:6813:6817	39266	0	True				
ANR	39284	UnaryOperationExpression	! wbuf		39266	0					
ANR	39285	UnaryOperator	!		39266	0					
ANR	39286	Identifier	wbuf		39266	1					
ANR	39287	CompoundStatement		5:15:112:112	39266	1					
ANR	39288	ExpressionStatement	"syslog ( LOG_ERR , ""can't append without a buffer"" )"	252:8:6830:6878	39266	0	True				
ANR	39289	CallExpression	"syslog ( LOG_ERR , ""can't append without a buffer"" )"		39266	0					
ANR	39290	Callee	syslog		39266	0					
ANR	39291	Identifier	syslog		39266	0					
ANR	39292	ArgumentList	LOG_ERR		39266	1					
ANR	39293	Argument	LOG_ERR		39266	0					
ANR	39294	Identifier	LOG_ERR		39266	0					
ANR	39295	Argument	"""can't append without a buffer"""		39266	1					
ANR	39296	PrimaryExpression	"""can't append without a buffer"""		39266	0					
ANR	39297	ReturnStatement	return - 1 ;	253:8:6888:6897	39266	1	True				
ANR	39298	UnaryOperationExpression	- 1		39266	0					
ANR	39299	UnaryOperator	-		39266	0					
ANR	39300	PrimaryExpression	1		39266	1					
ANR	39301	IfStatement	if ( wbuf -> size - wbuf -> write_pos < size )		39266	3					
ANR	39302	Condition	wbuf -> size - wbuf -> write_pos < size	256:8:6914:6948	39266	0	True				
ANR	39303	RelationalExpression	wbuf -> size - wbuf -> write_pos < size		39266	0		<			
ANR	39304	AdditiveExpression	wbuf -> size - wbuf -> write_pos		39266	0		-			
ANR	39305	PtrMemberAccess	wbuf -> size		39266	0					
ANR	39306	Identifier	wbuf		39266	0					
ANR	39307	Identifier	size		39266	1					
ANR	39308	PtrMemberAccess	wbuf -> write_pos		39266	1					
ANR	39309	Identifier	wbuf		39266	0					
ANR	39310	Identifier	write_pos		39266	1					
ANR	39311	Identifier	size		39266	1					
ANR	39312	CompoundStatement		10:45:243:243	39266	1					
ANR	39313	ExpressionStatement	"syslog ( LOG_ERR , ""can't append to full buffer"" )"	257:8:6961:7007	39266	0	True				
ANR	39314	CallExpression	"syslog ( LOG_ERR , ""can't append to full buffer"" )"		39266	0					
ANR	39315	Callee	syslog		39266	0					
ANR	39316	Identifier	syslog		39266	0					
ANR	39317	ArgumentList	LOG_ERR		39266	1					
ANR	39318	Argument	LOG_ERR		39266	0					
ANR	39319	Identifier	LOG_ERR		39266	0					
ANR	39320	Argument	"""can't append to full buffer"""		39266	1					
ANR	39321	PrimaryExpression	"""can't append to full buffer"""		39266	0					
ANR	39322	ReturnStatement	return - 1 ;	258:8:7017:7026	39266	1	True				
ANR	39323	UnaryOperationExpression	- 1		39266	0					
ANR	39324	UnaryOperator	-		39266	0					
ANR	39325	PrimaryExpression	1		39266	1					
ANR	39326	ExpressionStatement	"memcpy ( wbuf -> buf + wbuf -> write_pos , data , size )"	261:4:7039:7086	39266	4	True				
ANR	39327	CallExpression	"memcpy ( wbuf -> buf + wbuf -> write_pos , data , size )"		39266	0					
ANR	39328	Callee	memcpy		39266	0					
ANR	39329	Identifier	memcpy		39266	0					
ANR	39330	ArgumentList	wbuf -> buf + wbuf -> write_pos		39266	1					
ANR	39331	Argument	wbuf -> buf + wbuf -> write_pos		39266	0					
ANR	39332	AdditiveExpression	wbuf -> buf + wbuf -> write_pos		39266	0		+			
ANR	39333	PtrMemberAccess	wbuf -> buf		39266	0					
ANR	39334	Identifier	wbuf		39266	0					
ANR	39335	Identifier	buf		39266	1					
ANR	39336	PtrMemberAccess	wbuf -> write_pos		39266	1					
ANR	39337	Identifier	wbuf		39266	0					
ANR	39338	Identifier	write_pos		39266	1					
ANR	39339	Argument	data		39266	1					
ANR	39340	Identifier	data		39266	0					
ANR	39341	Argument	size		39266	2					
ANR	39342	Identifier	size		39266	0					
ANR	39343	ExpressionStatement	wbuf -> write_pos += size	262:4:7092:7115	39266	5	True				
ANR	39344	AssignmentExpression	wbuf -> write_pos += size		39266	0		+=			
ANR	39345	PtrMemberAccess	wbuf -> write_pos		39266	0					
ANR	39346	Identifier	wbuf		39266	0					
ANR	39347	Identifier	write_pos		39266	1					
ANR	39348	Identifier	size		39266	1					
ANR	39349	ReturnStatement	return 0 ;	263:4:7121:7129	39266	6	True				
ANR	39350	PrimaryExpression	0		39266	0					
ANR	39351	ReturnType	int		39266	1					
ANR	39352	Identifier	vdagent_virtio_port_write_append		39266	2					
ANR	39353	ParameterList	"struct vdagent_virtio_port * vport , const uint8_t * data , uint32_t size"		39266	3					
ANR	39354	Parameter	struct vdagent_virtio_port * vport	245:37:6599:6631	39266	0	True				
ANR	39355	ParameterType	struct vdagent_virtio_port *		39266	0					
ANR	39356	Identifier	vport		39266	1					
ANR	39357	Parameter	const uint8_t * data	246:37:6671:6689	39266	1	True				
ANR	39358	ParameterType	const uint8_t *		39266	0					
ANR	39359	Identifier	data		39266	1					
ANR	39360	Parameter	uint32_t size	246:58:6692:6704	39266	2	True				
ANR	39361	ParameterType	uint32_t		39266	0					
ANR	39362	Identifier	size		39266	1					
ANR	39363	CFGEntryNode	ENTRY		39266		True				
ANR	39364	CFGExitNode	EXIT		39266		True				
ANR	39365	Symbol	vport		39266						
ANR	39366	Symbol	data		39266						
ANR	39367	Symbol	size		39266						
ANR	39368	Symbol	wbuf -> size		39266						
ANR	39369	Symbol	* wbuf		39266						
ANR	39370	Symbol	LOG_ERR		39266						
ANR	39371	Symbol	wbuf -> write_pos		39266						
ANR	39372	Symbol	wbuf		39266						
ANR	39373	Symbol	vdagent_virtio_port_get_last_wbuf		39266						
ANR	39374	Symbol	wbuf -> buf		39266						
ANR	39375	Function	vdagent_virtio_port_write	266:0:7134:7598							
ANR	39376	FunctionDef	"vdagent_virtio_port_write (struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , const uint8_t * data , uint32_t data_size)"		39375	0					
ANR	39377	CompoundStatement		273:0:7355:7598	39375	0					
ANR	39378	IfStatement	"if ( vdagent_virtio_port_write_start ( vport , port_nr , message_type , message_opaque , data_size ) )"		39375	0					
ANR	39379	Condition	"vdagent_virtio_port_write_start ( vport , port_nr , message_type , message_opaque , data_size )"	274:8:7365:7492	39375	0	True				
ANR	39380	CallExpression	"vdagent_virtio_port_write_start ( vport , port_nr , message_type , message_opaque , data_size )"		39375	0					
ANR	39381	Callee	vdagent_virtio_port_write_start		39375	0					
ANR	39382	Identifier	vdagent_virtio_port_write_start		39375	0					
ANR	39383	ArgumentList	vport		39375	1					
ANR	39384	Argument	vport		39375	0					
ANR	39385	Identifier	vport		39375	0					
ANR	39386	Argument	port_nr		39375	1					
ANR	39387	Identifier	port_nr		39375	0					
ANR	39388	Argument	message_type		39375	2					
ANR	39389	Identifier	message_type		39375	0					
ANR	39390	Argument	message_opaque		39375	3					
ANR	39391	Identifier	message_opaque		39375	0					
ANR	39392	Argument	data_size		39375	4					
ANR	39393	Identifier	data_size		39375	0					
ANR	39394	CompoundStatement		3:68:139:139	39375	1					
ANR	39395	ReturnStatement	return - 1 ;	276:8:7505:7514	39375	0	True				
ANR	39396	UnaryOperationExpression	- 1		39375	0					
ANR	39397	UnaryOperator	-		39375	0					
ANR	39398	PrimaryExpression	1		39375	1					
ANR	39399	ExpressionStatement	"vdagent_virtio_port_write_append ( vport , data , data_size )"	278:4:7526:7582	39375	1	True				
ANR	39400	CallExpression	"vdagent_virtio_port_write_append ( vport , data , data_size )"		39375	0					
ANR	39401	Callee	vdagent_virtio_port_write_append		39375	0					
ANR	39402	Identifier	vdagent_virtio_port_write_append		39375	0					
ANR	39403	ArgumentList	vport		39375	1					
ANR	39404	Argument	vport		39375	0					
ANR	39405	Identifier	vport		39375	0					
ANR	39406	Argument	data		39375	1					
ANR	39407	Identifier	data		39375	0					
ANR	39408	Argument	data_size		39375	2					
ANR	39409	Identifier	data_size		39375	0					
ANR	39410	ReturnStatement	return 0 ;	279:4:7588:7596	39375	2	True				
ANR	39411	PrimaryExpression	0		39375	0					
ANR	39412	ReturnType	int		39375	1					
ANR	39413	Identifier	vdagent_virtio_port_write		39375	2					
ANR	39414	ParameterList	"struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , const uint8_t * data , uint32_t data_size"		39375	3					
ANR	39415	Parameter	struct vdagent_virtio_port * vport	267:8:7173:7205	39375	0	True				
ANR	39416	ParameterType	struct vdagent_virtio_port *		39375	0					
ANR	39417	Identifier	vport		39375	1					
ANR	39418	Parameter	uint32_t port_nr	268:8:7216:7231	39375	1	True				
ANR	39419	ParameterType	uint32_t		39375	0					
ANR	39420	Identifier	port_nr		39375	1					
ANR	39421	Parameter	uint32_t message_type	269:8:7242:7262	39375	2	True				
ANR	39422	ParameterType	uint32_t		39375	0					
ANR	39423	Identifier	message_type		39375	1					
ANR	39424	Parameter	uint32_t message_opaque	270:8:7273:7295	39375	3	True				
ANR	39425	ParameterType	uint32_t		39375	0					
ANR	39426	Identifier	message_opaque		39375	1					
ANR	39427	Parameter	const uint8_t * data	271:8:7306:7324	39375	4	True				
ANR	39428	ParameterType	const uint8_t *		39375	0					
ANR	39429	Identifier	data		39375	1					
ANR	39430	Parameter	uint32_t data_size	272:8:7335:7352	39375	5	True				
ANR	39431	ParameterType	uint32_t		39375	0					
ANR	39432	Identifier	data_size		39375	1					
ANR	39433	CFGEntryNode	ENTRY		39375		True				
ANR	39434	CFGExitNode	EXIT		39375		True				
ANR	39435	Symbol	data_size		39375						
ANR	39436	Symbol	port_nr		39375						
ANR	39437	Symbol	vport		39375						
ANR	39438	Symbol	data		39375						
ANR	39439	Symbol	vdagent_virtio_port_write_start		39375						
ANR	39440	Symbol	message_opaque		39375						
ANR	39441	Symbol	message_type		39375						
ANR	39442	Function	vdagent_virtio_port_flush	282:0:7601:7761							
ANR	39443	FunctionDef	vdagent_virtio_port_flush (struct vdagent_virtio_port * * vportp)		39442	0					
ANR	39444	CompoundStatement		283:0:7669:7761	39442	0					
ANR	39445	WhileStatement	while ( * vportp && ( * vportp ) -> write_buf )		39442	0					
ANR	39446	Condition	* vportp && ( * vportp ) -> write_buf	284:11:7682:7712	39442	0	True				
ANR	39447	AndExpression	* vportp && ( * vportp ) -> write_buf		39442	0		&&			
ANR	39448	UnaryOperationExpression	* vportp		39442	0					
ANR	39449	UnaryOperator	*		39442	0					
ANR	39450	Identifier	vportp		39442	1					
ANR	39451	PtrMemberAccess	( * vportp ) -> write_buf		39442	1					
ANR	39452	UnaryOperationExpression	* vportp		39442	0					
ANR	39453	UnaryOperator	*		39442	0					
ANR	39454	Identifier	vportp		39442	1					
ANR	39455	Identifier	write_buf		39442	1					
ANR	39456	ExpressionStatement	vdagent_virtio_port_do_write ( vportp )	285:8:7723:7759	39442	1	True				
ANR	39457	CallExpression	vdagent_virtio_port_do_write ( vportp )		39442	0					
ANR	39458	Callee	vdagent_virtio_port_do_write		39442	0					
ANR	39459	Identifier	vdagent_virtio_port_do_write		39442	0					
ANR	39460	ArgumentList	vportp		39442	1					
ANR	39461	Argument	vportp		39442	0					
ANR	39462	Identifier	vportp		39442	0					
ANR	39463	ReturnType	void		39442	1					
ANR	39464	Identifier	vdagent_virtio_port_flush		39442	2					
ANR	39465	ParameterList	struct vdagent_virtio_port * * vportp		39442	3					
ANR	39466	Parameter	struct vdagent_virtio_port * * vportp	282:31:7632:7666	39442	0	True				
ANR	39467	ParameterType	struct vdagent_virtio_port * *		39442	0					
ANR	39468	Identifier	vportp		39442	1					
ANR	39469	CFGEntryNode	ENTRY		39442		True				
ANR	39470	CFGExitNode	EXIT		39442		True				
ANR	39471	Symbol	vportp		39442						
ANR	39472	Symbol	* * vportp		39442						
ANR	39473	Symbol	* vportp		39442						
ANR	39474	Symbol	( * vportp ) -> write_buf		39442						
ANR	39475	Function	vdagent_virtio_port_reset	288:0:7764:8084							
ANR	39476	FunctionDef	"vdagent_virtio_port_reset (struct vdagent_virtio_port * vport , int port)"		39475	0					
ANR	39477	CompoundStatement		289:0:7840:8084	39475	0					
ANR	39478	IfStatement	if ( port >= VDP_END_PORT )		39475	0					
ANR	39479	Condition	port >= VDP_END_PORT	290:8:7850:7869	39475	0	True				
ANR	39480	RelationalExpression	port >= VDP_END_PORT		39475	0		>=			
ANR	39481	Identifier	port		39475	0					
ANR	39482	Identifier	VDP_END_PORT		39475	1					
ANR	39483	CompoundStatement		2:30:31:31	39475	1					
ANR	39484	ExpressionStatement	"syslog ( LOG_ERR , ""vdagent_virtio_port_reset port out of range"" )"	291:8:7882:7944	39475	0	True				
ANR	39485	CallExpression	"syslog ( LOG_ERR , ""vdagent_virtio_port_reset port out of range"" )"		39475	0					
ANR	39486	Callee	syslog		39475	0					
ANR	39487	Identifier	syslog		39475	0					
ANR	39488	ArgumentList	LOG_ERR		39475	1					
ANR	39489	Argument	LOG_ERR		39475	0					
ANR	39490	Identifier	LOG_ERR		39475	0					
ANR	39491	Argument	"""vdagent_virtio_port_reset port out of range"""		39475	1					
ANR	39492	PrimaryExpression	"""vdagent_virtio_port_reset port out of range"""		39475	0					
ANR	39493	ReturnStatement	return ;	292:8:7954:7960	39475	1	True				
ANR	39494	ExpressionStatement	free ( vport -> port_data [ port ] . message_data )	294:4:7972:8013	39475	1	True				
ANR	39495	CallExpression	free ( vport -> port_data [ port ] . message_data )		39475	0					
ANR	39496	Callee	free		39475	0					
ANR	39497	Identifier	free		39475	0					
ANR	39498	ArgumentList	vport -> port_data [ port ] . message_data		39475	1					
ANR	39499	Argument	vport -> port_data [ port ] . message_data		39475	0					
ANR	39500	MemberAccess	vport -> port_data [ port ] . message_data		39475	0					
ANR	39501	ArrayIndexing	vport -> port_data [ port ]		39475	0					
ANR	39502	PtrMemberAccess	vport -> port_data		39475	0					
ANR	39503	Identifier	vport		39475	0					
ANR	39504	Identifier	port_data		39475	1					
ANR	39505	Identifier	port		39475	1					
ANR	39506	Identifier	message_data		39475	1					
ANR	39507	ExpressionStatement	"memset ( & vport -> port_data [ port ] , 0 , sizeof ( vport -> port_data [ 0 ] ) )"	295:4:8019:8082	39475	2	True				
ANR	39508	CallExpression	"memset ( & vport -> port_data [ port ] , 0 , sizeof ( vport -> port_data [ 0 ] ) )"		39475	0					
ANR	39509	Callee	memset		39475	0					
ANR	39510	Identifier	memset		39475	0					
ANR	39511	ArgumentList	& vport -> port_data [ port ]		39475	1					
ANR	39512	Argument	& vport -> port_data [ port ]		39475	0					
ANR	39513	UnaryOperationExpression	& vport -> port_data [ port ]		39475	0					
ANR	39514	UnaryOperator	&		39475	0					
ANR	39515	ArrayIndexing	vport -> port_data [ port ]		39475	1					
ANR	39516	PtrMemberAccess	vport -> port_data		39475	0					
ANR	39517	Identifier	vport		39475	0					
ANR	39518	Identifier	port_data		39475	1					
ANR	39519	Identifier	port		39475	1					
ANR	39520	Argument	0		39475	1					
ANR	39521	PrimaryExpression	0		39475	0					
ANR	39522	Argument	sizeof ( vport -> port_data [ 0 ] )		39475	2					
ANR	39523	SizeofExpression	sizeof ( vport -> port_data [ 0 ] )		39475	0					
ANR	39524	Sizeof	sizeof		39475	0					
ANR	39525	ArrayIndexing	vport -> port_data [ 0 ]		39475	1					
ANR	39526	PtrMemberAccess	vport -> port_data		39475	0					
ANR	39527	Identifier	vport		39475	0					
ANR	39528	Identifier	port_data		39475	1					
ANR	39529	PrimaryExpression	0		39475	1					
ANR	39530	ReturnType	void		39475	1					
ANR	39531	Identifier	vdagent_virtio_port_reset		39475	2					
ANR	39532	ParameterList	"struct vdagent_virtio_port * vport , int port"		39475	3					
ANR	39533	Parameter	struct vdagent_virtio_port * vport	288:31:7795:7827	39475	0	True				
ANR	39534	ParameterType	struct vdagent_virtio_port *		39475	0					
ANR	39535	Identifier	vport		39475	1					
ANR	39536	Parameter	int port	288:66:7830:7837	39475	1	True				
ANR	39537	ParameterType	int		39475	0					
ANR	39538	Identifier	port		39475	1					
ANR	39539	CFGEntryNode	ENTRY		39475		True				
ANR	39540	CFGExitNode	EXIT		39475		True				
ANR	39541	Symbol	vport		39475						
ANR	39542	Symbol	VDP_END_PORT		39475						
ANR	39543	Symbol	* port		39475						
ANR	39544	Symbol	port		39475						
ANR	39545	Symbol	* vport		39475						
ANR	39546	Symbol	* vport -> port_data		39475						
ANR	39547	Symbol	vport -> port_data		39475						
ANR	39548	Symbol	LOG_ERR		39475						
ANR	39549	Symbol	vport -> port_data [ port ] . message_data		39475						
ANR	39550	Symbol	* * vport		39475						
ANR	39551	Function	vdagent_virtio_port_do_chunk	298:0:8087:10765							
ANR	39552	FunctionDef	vdagent_virtio_port_do_chunk (struct vdagent_virtio_port * * vportp)		39551	0					
ANR	39553	CompoundStatement		299:0:8165:10765	39551	0					
ANR	39554	IdentifierDeclStatement	"int avail , read , pos = 0 ;"	300:4:8171:8195	39551	0	True				
ANR	39555	IdentifierDecl	avail		39551	0					
ANR	39556	IdentifierDeclType	int		39551	0					
ANR	39557	Identifier	avail		39551	1					
ANR	39558	IdentifierDecl	read		39551	1					
ANR	39559	IdentifierDeclType	int		39551	0					
ANR	39560	Identifier	read		39551	1					
ANR	39561	IdentifierDecl	pos = 0		39551	2					
ANR	39562	IdentifierDeclType	int		39551	0					
ANR	39563	Identifier	pos		39551	1					
ANR	39564	AssignmentExpression	pos = 0		39551	2		=			
ANR	39565	Identifier	pos		39551	0					
ANR	39566	PrimaryExpression	0		39551	1					
ANR	39567	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	301:4:8201:8244	39551	1	True				
ANR	39568	IdentifierDecl	* vport = * vportp		39551	0					
ANR	39569	IdentifierDeclType	struct vdagent_virtio_port *		39551	0					
ANR	39570	Identifier	vport		39551	1					
ANR	39571	AssignmentExpression	* vport = * vportp		39551	2		=			
ANR	39572	Identifier	vport		39551	0					
ANR	39573	UnaryOperationExpression	* vportp		39551	1					
ANR	39574	UnaryOperator	*		39551	0					
ANR	39575	Identifier	vportp		39551	1					
ANR	39576	IdentifierDeclStatement	struct vdagent_virtio_port_chunk_port_data * port = & vport -> port_data [ vport -> chunk_header . port ] ;	302:4:8250:8352	39551	2	True				
ANR	39577	IdentifierDecl	* port = & vport -> port_data [ vport -> chunk_header . port ]		39551	0					
ANR	39578	IdentifierDeclType	struct vdagent_virtio_port_chunk_port_data *		39551	0					
ANR	39579	Identifier	port		39551	1					
ANR	39580	AssignmentExpression	* port = & vport -> port_data [ vport -> chunk_header . port ]		39551	2		=			
ANR	39581	Identifier	port		39551	0					
ANR	39582	UnaryOperationExpression	& vport -> port_data [ vport -> chunk_header . port ]		39551	1					
ANR	39583	UnaryOperator	&		39551	0					
ANR	39584	ArrayIndexing	vport -> port_data [ vport -> chunk_header . port ]		39551	1					
ANR	39585	PtrMemberAccess	vport -> port_data		39551	0					
ANR	39586	Identifier	vport		39551	0					
ANR	39587	Identifier	port_data		39551	1					
ANR	39588	MemberAccess	vport -> chunk_header . port		39551	1					
ANR	39589	PtrMemberAccess	vport -> chunk_header		39551	0					
ANR	39590	Identifier	vport		39551	0					
ANR	39591	Identifier	chunk_header		39551	1					
ANR	39592	Identifier	port		39551	1					
ANR	39593	IfStatement	if ( port -> message_header_read < sizeof ( port -> message_header ) )		39551	3					
ANR	39594	Condition	port -> message_header_read < sizeof ( port -> message_header )	305:8:8363:8418	39551	0	True				
ANR	39595	RelationalExpression	port -> message_header_read < sizeof ( port -> message_header )		39551	0		<			
ANR	39596	PtrMemberAccess	port -> message_header_read		39551	0					
ANR	39597	Identifier	port		39551	0					
ANR	39598	Identifier	message_header_read		39551	1					
ANR	39599	SizeofExpression	sizeof ( port -> message_header )		39551	1					
ANR	39600	Sizeof	sizeof		39551	0					
ANR	39601	PtrMemberAccess	port -> message_header		39551	1					
ANR	39602	Identifier	port		39551	0					
ANR	39603	Identifier	message_header		39551	1					
ANR	39604	CompoundStatement		7:66:255:255	39551	1					
ANR	39605	ExpressionStatement	read = sizeof ( port -> message_header ) - port -> message_header_read	306:8:8431:8494	39551	0	True				
ANR	39606	AssignmentExpression	read = sizeof ( port -> message_header ) - port -> message_header_read		39551	0		=			
ANR	39607	Identifier	read		39551	0					
ANR	39608	AdditiveExpression	sizeof ( port -> message_header ) - port -> message_header_read		39551	1		-			
ANR	39609	SizeofExpression	sizeof ( port -> message_header )		39551	0					
ANR	39610	Sizeof	sizeof		39551	0					
ANR	39611	PtrMemberAccess	port -> message_header		39551	1					
ANR	39612	Identifier	port		39551	0					
ANR	39613	Identifier	message_header		39551	1					
ANR	39614	PtrMemberAccess	port -> message_header_read		39551	1					
ANR	39615	Identifier	port		39551	0					
ANR	39616	Identifier	message_header_read		39551	1					
ANR	39617	IfStatement	if ( read > vport -> chunk_header . size )		39551	1					
ANR	39618	Condition	read > vport -> chunk_header . size	307:12:8508:8538	39551	0	True				
ANR	39619	RelationalExpression	read > vport -> chunk_header . size		39551	0		>			
ANR	39620	Identifier	read		39551	0					
ANR	39621	MemberAccess	vport -> chunk_header . size		39551	1					
ANR	39622	PtrMemberAccess	vport -> chunk_header		39551	0					
ANR	39623	Identifier	vport		39551	0					
ANR	39624	Identifier	chunk_header		39551	1					
ANR	39625	Identifier	size		39551	1					
ANR	39626	CompoundStatement		9:45:375:375	39551	1					
ANR	39627	ExpressionStatement	read = vport -> chunk_header . size	308:12:8555:8586	39551	0	True				
ANR	39628	AssignmentExpression	read = vport -> chunk_header . size		39551	0		=			
ANR	39629	Identifier	read		39551	0					
ANR	39630	MemberAccess	vport -> chunk_header . size		39551	1					
ANR	39631	PtrMemberAccess	vport -> chunk_header		39551	0					
ANR	39632	Identifier	vport		39551	0					
ANR	39633	Identifier	chunk_header		39551	1					
ANR	39634	Identifier	size		39551	1					
ANR	39635	ExpressionStatement	"memcpy ( ( uint8_t * ) & port -> message_header + port -> message_header_read , vport -> chunk_data , read )"	310:8:8606:8714	39551	2	True				
ANR	39636	CallExpression	"memcpy ( ( uint8_t * ) & port -> message_header + port -> message_header_read , vport -> chunk_data , read )"		39551	0					
ANR	39637	Callee	memcpy		39551	0					
ANR	39638	Identifier	memcpy		39551	0					
ANR	39639	ArgumentList	( uint8_t * ) & port -> message_header + port -> message_header_read		39551	1					
ANR	39640	Argument	( uint8_t * ) & port -> message_header + port -> message_header_read		39551	0					
ANR	39641	AdditiveExpression	( uint8_t * ) & port -> message_header + port -> message_header_read		39551	0		+			
ANR	39642	CastExpression	( uint8_t * ) & port -> message_header		39551	0					
ANR	39643	CastTarget	uint8_t *		39551	0					
ANR	39644	UnaryOperationExpression	& port -> message_header		39551	1					
ANR	39645	UnaryOperator	&		39551	0					
ANR	39646	PtrMemberAccess	port -> message_header		39551	1					
ANR	39647	Identifier	port		39551	0					
ANR	39648	Identifier	message_header		39551	1					
ANR	39649	PtrMemberAccess	port -> message_header_read		39551	1					
ANR	39650	Identifier	port		39551	0					
ANR	39651	Identifier	message_header_read		39551	1					
ANR	39652	Argument	vport -> chunk_data		39551	1					
ANR	39653	PtrMemberAccess	vport -> chunk_data		39551	0					
ANR	39654	Identifier	vport		39551	0					
ANR	39655	Identifier	chunk_data		39551	1					
ANR	39656	Argument	read		39551	2					
ANR	39657	Identifier	read		39551	0					
ANR	39658	ExpressionStatement	port -> message_header_read += read	312:8:8724:8757	39551	3	True				
ANR	39659	AssignmentExpression	port -> message_header_read += read		39551	0		+=			
ANR	39660	PtrMemberAccess	port -> message_header_read		39551	0					
ANR	39661	Identifier	port		39551	0					
ANR	39662	Identifier	message_header_read		39551	1					
ANR	39663	Identifier	read		39551	1					
ANR	39664	IfStatement	if ( port -> message_header_read == sizeof ( port -> message_header ) )		39551	4					
ANR	39665	Condition	port -> message_header_read == sizeof ( port -> message_header )	313:12:8771:8827	39551	0	True				
ANR	39666	EqualityExpression	port -> message_header_read == sizeof ( port -> message_header )		39551	0		==			
ANR	39667	PtrMemberAccess	port -> message_header_read		39551	0					
ANR	39668	Identifier	port		39551	0					
ANR	39669	Identifier	message_header_read		39551	1					
ANR	39670	SizeofExpression	sizeof ( port -> message_header )		39551	1					
ANR	39671	Sizeof	sizeof		39551	0					
ANR	39672	PtrMemberAccess	port -> message_header		39551	1					
ANR	39673	Identifier	port		39551	0					
ANR	39674	Identifier	message_header		39551	1					
ANR	39675	CompoundStatement		15:71:664:664	39551	1					
ANR	39676	ExpressionStatement	port -> message_header . protocol = GUINT32_FROM_LE ( port -> message_header . protocol )	315:12:8845:8923	39551	0	True				
ANR	39677	AssignmentExpression	port -> message_header . protocol = GUINT32_FROM_LE ( port -> message_header . protocol )		39551	0		=			
ANR	39678	MemberAccess	port -> message_header . protocol		39551	0					
ANR	39679	PtrMemberAccess	port -> message_header		39551	0					
ANR	39680	Identifier	port		39551	0					
ANR	39681	Identifier	message_header		39551	1					
ANR	39682	Identifier	protocol		39551	1					
ANR	39683	CallExpression	GUINT32_FROM_LE ( port -> message_header . protocol )		39551	1					
ANR	39684	Callee	GUINT32_FROM_LE		39551	0					
ANR	39685	Identifier	GUINT32_FROM_LE		39551	0					
ANR	39686	ArgumentList	port -> message_header . protocol		39551	1					
ANR	39687	Argument	port -> message_header . protocol		39551	0					
ANR	39688	MemberAccess	port -> message_header . protocol		39551	0					
ANR	39689	PtrMemberAccess	port -> message_header		39551	0					
ANR	39690	Identifier	port		39551	0					
ANR	39691	Identifier	message_header		39551	1					
ANR	39692	Identifier	protocol		39551	1					
ANR	39693	ExpressionStatement	port -> message_header . type = GUINT32_FROM_LE ( port -> message_header . type )	316:12:8937:9007	39551	1	True				
ANR	39694	AssignmentExpression	port -> message_header . type = GUINT32_FROM_LE ( port -> message_header . type )		39551	0		=			
ANR	39695	MemberAccess	port -> message_header . type		39551	0					
ANR	39696	PtrMemberAccess	port -> message_header		39551	0					
ANR	39697	Identifier	port		39551	0					
ANR	39698	Identifier	message_header		39551	1					
ANR	39699	Identifier	type		39551	1					
ANR	39700	CallExpression	GUINT32_FROM_LE ( port -> message_header . type )		39551	1					
ANR	39701	Callee	GUINT32_FROM_LE		39551	0					
ANR	39702	Identifier	GUINT32_FROM_LE		39551	0					
ANR	39703	ArgumentList	port -> message_header . type		39551	1					
ANR	39704	Argument	port -> message_header . type		39551	0					
ANR	39705	MemberAccess	port -> message_header . type		39551	0					
ANR	39706	PtrMemberAccess	port -> message_header		39551	0					
ANR	39707	Identifier	port		39551	0					
ANR	39708	Identifier	message_header		39551	1					
ANR	39709	Identifier	type		39551	1					
ANR	39710	ExpressionStatement	port -> message_header . opaque = GUINT64_FROM_LE ( port -> message_header . opaque )	317:12:9021:9095	39551	2	True				
ANR	39711	AssignmentExpression	port -> message_header . opaque = GUINT64_FROM_LE ( port -> message_header . opaque )		39551	0		=			
ANR	39712	MemberAccess	port -> message_header . opaque		39551	0					
ANR	39713	PtrMemberAccess	port -> message_header		39551	0					
ANR	39714	Identifier	port		39551	0					
ANR	39715	Identifier	message_header		39551	1					
ANR	39716	Identifier	opaque		39551	1					
ANR	39717	CallExpression	GUINT64_FROM_LE ( port -> message_header . opaque )		39551	1					
ANR	39718	Callee	GUINT64_FROM_LE		39551	0					
ANR	39719	Identifier	GUINT64_FROM_LE		39551	0					
ANR	39720	ArgumentList	port -> message_header . opaque		39551	1					
ANR	39721	Argument	port -> message_header . opaque		39551	0					
ANR	39722	MemberAccess	port -> message_header . opaque		39551	0					
ANR	39723	PtrMemberAccess	port -> message_header		39551	0					
ANR	39724	Identifier	port		39551	0					
ANR	39725	Identifier	message_header		39551	1					
ANR	39726	Identifier	opaque		39551	1					
ANR	39727	ExpressionStatement	port -> message_header . size = GUINT32_FROM_LE ( port -> message_header . size )	318:12:9109:9179	39551	3	True				
ANR	39728	AssignmentExpression	port -> message_header . size = GUINT32_FROM_LE ( port -> message_header . size )		39551	0		=			
ANR	39729	MemberAccess	port -> message_header . size		39551	0					
ANR	39730	PtrMemberAccess	port -> message_header		39551	0					
ANR	39731	Identifier	port		39551	0					
ANR	39732	Identifier	message_header		39551	1					
ANR	39733	Identifier	size		39551	1					
ANR	39734	CallExpression	GUINT32_FROM_LE ( port -> message_header . size )		39551	1					
ANR	39735	Callee	GUINT32_FROM_LE		39551	0					
ANR	39736	Identifier	GUINT32_FROM_LE		39551	0					
ANR	39737	ArgumentList	port -> message_header . size		39551	1					
ANR	39738	Argument	port -> message_header . size		39551	0					
ANR	39739	MemberAccess	port -> message_header . size		39551	0					
ANR	39740	PtrMemberAccess	port -> message_header		39551	0					
ANR	39741	Identifier	port		39551	0					
ANR	39742	Identifier	message_header		39551	1					
ANR	39743	Identifier	size		39551	1					
ANR	39744	IfStatement	if ( port -> message_header . size )		39551	4					
ANR	39745	Condition	port -> message_header . size	320:16:9198:9222	39551	0	True				
ANR	39746	MemberAccess	port -> message_header . size		39551	0					
ANR	39747	PtrMemberAccess	port -> message_header		39551	0					
ANR	39748	Identifier	port		39551	0					
ANR	39749	Identifier	message_header		39551	1					
ANR	39750	Identifier	size		39551	1					
ANR	39751	CompoundStatement		22:43:1059:1059	39551	1					
ANR	39752	ExpressionStatement	port -> message_data = malloc ( port -> message_header . size )	321:16:9243:9297	39551	0	True				
ANR	39753	AssignmentExpression	port -> message_data = malloc ( port -> message_header . size )		39551	0		=			
ANR	39754	PtrMemberAccess	port -> message_data		39551	0					
ANR	39755	Identifier	port		39551	0					
ANR	39756	Identifier	message_data		39551	1					
ANR	39757	CallExpression	malloc ( port -> message_header . size )		39551	1					
ANR	39758	Callee	malloc		39551	0					
ANR	39759	Identifier	malloc		39551	0					
ANR	39760	ArgumentList	port -> message_header . size		39551	1					
ANR	39761	Argument	port -> message_header . size		39551	0					
ANR	39762	MemberAccess	port -> message_header . size		39551	0					
ANR	39763	PtrMemberAccess	port -> message_header		39551	0					
ANR	39764	Identifier	port		39551	0					
ANR	39765	Identifier	message_header		39551	1					
ANR	39766	Identifier	size		39551	1					
ANR	39767	IfStatement	if ( ! port -> message_data )		39551	1					
ANR	39768	Condition	! port -> message_data	322:20:9319:9337	39551	0	True				
ANR	39769	UnaryOperationExpression	! port -> message_data		39551	0					
ANR	39770	UnaryOperator	!		39551	0					
ANR	39771	PtrMemberAccess	port -> message_data		39551	1					
ANR	39772	Identifier	port		39551	0					
ANR	39773	Identifier	message_data		39551	1					
ANR	39774	CompoundStatement		24:41:1174:1174	39551	1					
ANR	39775	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory, disconnecting virtio"" )"	323:20:9362:9416	39551	0	True				
ANR	39776	CallExpression	"syslog ( LOG_ERR , ""out of memory, disconnecting virtio"" )"		39551	0					
ANR	39777	Callee	syslog		39551	0					
ANR	39778	Identifier	syslog		39551	0					
ANR	39779	ArgumentList	LOG_ERR		39551	1					
ANR	39780	Argument	LOG_ERR		39551	0					
ANR	39781	Identifier	LOG_ERR		39551	0					
ANR	39782	Argument	"""out of memory, disconnecting virtio"""		39551	1					
ANR	39783	PrimaryExpression	"""out of memory, disconnecting virtio"""		39551	0					
ANR	39784	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	324:20:9438:9473	39551	1	True				
ANR	39785	CallExpression	vdagent_virtio_port_destroy ( vportp )		39551	0					
ANR	39786	Callee	vdagent_virtio_port_destroy		39551	0					
ANR	39787	Identifier	vdagent_virtio_port_destroy		39551	0					
ANR	39788	ArgumentList	vportp		39551	1					
ANR	39789	Argument	vportp		39551	0					
ANR	39790	Identifier	vportp		39551	0					
ANR	39791	ReturnStatement	return ;	325:20:9495:9501	39551	2	True				
ANR	39792	ExpressionStatement	pos = read	329:8:9553:9563	39551	5	True				
ANR	39793	AssignmentExpression	pos = read		39551	0		=			
ANR	39794	Identifier	pos		39551	0					
ANR	39795	Identifier	read		39551	1					
ANR	39796	IfStatement	if ( port -> message_header_read == sizeof ( port -> message_header ) )		39551	4					
ANR	39797	Condition	port -> message_header_read == sizeof ( port -> message_header )	332:8:9580:9636	39551	0	True				
ANR	39798	EqualityExpression	port -> message_header_read == sizeof ( port -> message_header )		39551	0		==			
ANR	39799	PtrMemberAccess	port -> message_header_read		39551	0					
ANR	39800	Identifier	port		39551	0					
ANR	39801	Identifier	message_header_read		39551	1					
ANR	39802	SizeofExpression	sizeof ( port -> message_header )		39551	1					
ANR	39803	Sizeof	sizeof		39551	0					
ANR	39804	PtrMemberAccess	port -> message_header		39551	1					
ANR	39805	Identifier	port		39551	0					
ANR	39806	Identifier	message_header		39551	1					
ANR	39807	CompoundStatement		34:67:1473:1473	39551	1					
ANR	39808	ExpressionStatement	read = port -> message_header . size - port -> message_data_pos	333:8:9649:9707	39551	0	True				
ANR	39809	AssignmentExpression	read = port -> message_header . size - port -> message_data_pos		39551	0		=			
ANR	39810	Identifier	read		39551	0					
ANR	39811	AdditiveExpression	port -> message_header . size - port -> message_data_pos		39551	1		-			
ANR	39812	MemberAccess	port -> message_header . size		39551	0					
ANR	39813	PtrMemberAccess	port -> message_header		39551	0					
ANR	39814	Identifier	port		39551	0					
ANR	39815	Identifier	message_header		39551	1					
ANR	39816	Identifier	size		39551	1					
ANR	39817	PtrMemberAccess	port -> message_data_pos		39551	1					
ANR	39818	Identifier	port		39551	0					
ANR	39819	Identifier	message_data_pos		39551	1					
ANR	39820	ExpressionStatement	avail = vport -> chunk_header . size - pos	334:8:9717:9755	39551	1	True				
ANR	39821	AssignmentExpression	avail = vport -> chunk_header . size - pos		39551	0		=			
ANR	39822	Identifier	avail		39551	0					
ANR	39823	AdditiveExpression	vport -> chunk_header . size - pos		39551	1		-			
ANR	39824	MemberAccess	vport -> chunk_header . size		39551	0					
ANR	39825	PtrMemberAccess	vport -> chunk_header		39551	0					
ANR	39826	Identifier	vport		39551	0					
ANR	39827	Identifier	chunk_header		39551	1					
ANR	39828	Identifier	size		39551	1					
ANR	39829	Identifier	pos		39551	1					
ANR	39830	IfStatement	if ( avail > read )		39551	2					
ANR	39831	Condition	avail > read	336:12:9770:9781	39551	0	True				
ANR	39832	RelationalExpression	avail > read		39551	0		>			
ANR	39833	Identifier	avail		39551	0					
ANR	39834	Identifier	read		39551	1					
ANR	39835	CompoundStatement		38:26:1618:1618	39551	1					
ANR	39836	ExpressionStatement	"syslog ( LOG_ERR , ""chunk larger than message, lost sync?"" )"	337:12:9798:9854	39551	0	True				
ANR	39837	CallExpression	"syslog ( LOG_ERR , ""chunk larger than message, lost sync?"" )"		39551	0					
ANR	39838	Callee	syslog		39551	0					
ANR	39839	Identifier	syslog		39551	0					
ANR	39840	ArgumentList	LOG_ERR		39551	1					
ANR	39841	Argument	LOG_ERR		39551	0					
ANR	39842	Identifier	LOG_ERR		39551	0					
ANR	39843	Argument	"""chunk larger than message, lost sync?"""		39551	1					
ANR	39844	PrimaryExpression	"""chunk larger than message, lost sync?"""		39551	0					
ANR	39845	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	338:12:9868:9903	39551	1	True				
ANR	39846	CallExpression	vdagent_virtio_port_destroy ( vportp )		39551	0					
ANR	39847	Callee	vdagent_virtio_port_destroy		39551	0					
ANR	39848	Identifier	vdagent_virtio_port_destroy		39551	0					
ANR	39849	ArgumentList	vportp		39551	1					
ANR	39850	Argument	vportp		39551	0					
ANR	39851	Identifier	vportp		39551	0					
ANR	39852	ReturnStatement	return ;	339:12:9917:9923	39551	2	True				
ANR	39853	IfStatement	if ( avail < read )		39551	3					
ANR	39854	Condition	avail < read	342:12:9948:9959	39551	0	True				
ANR	39855	RelationalExpression	avail < read		39551	0		<			
ANR	39856	Identifier	avail		39551	0					
ANR	39857	Identifier	read		39551	1					
ANR	39858	ExpressionStatement	read = avail	343:12:9974:9986	39551	1	True				
ANR	39859	AssignmentExpression	read = avail		39551	0		=			
ANR	39860	Identifier	read		39551	0					
ANR	39861	Identifier	avail		39551	1					
ANR	39862	IfStatement	if ( read )		39551	4					
ANR	39863	Condition	read	345:12:10001:10004	39551	0	True				
ANR	39864	Identifier	read		39551	0					
ANR	39865	CompoundStatement		47:18:1841:1841	39551	1					
ANR	39866	ExpressionStatement	"memcpy ( port -> message_data + port -> message_data_pos , vport -> chunk_data + pos , read )"	346:12:10021:10122	39551	0	True				
ANR	39867	CallExpression	"memcpy ( port -> message_data + port -> message_data_pos , vport -> chunk_data + pos , read )"		39551	0					
ANR	39868	Callee	memcpy		39551	0					
ANR	39869	Identifier	memcpy		39551	0					
ANR	39870	ArgumentList	port -> message_data + port -> message_data_pos		39551	1					
ANR	39871	Argument	port -> message_data + port -> message_data_pos		39551	0					
ANR	39872	AdditiveExpression	port -> message_data + port -> message_data_pos		39551	0		+			
ANR	39873	PtrMemberAccess	port -> message_data		39551	0					
ANR	39874	Identifier	port		39551	0					
ANR	39875	Identifier	message_data		39551	1					
ANR	39876	PtrMemberAccess	port -> message_data_pos		39551	1					
ANR	39877	Identifier	port		39551	0					
ANR	39878	Identifier	message_data_pos		39551	1					
ANR	39879	Argument	vport -> chunk_data + pos		39551	1					
ANR	39880	AdditiveExpression	vport -> chunk_data + pos		39551	0		+			
ANR	39881	PtrMemberAccess	vport -> chunk_data		39551	0					
ANR	39882	Identifier	vport		39551	0					
ANR	39883	Identifier	chunk_data		39551	1					
ANR	39884	Identifier	pos		39551	1					
ANR	39885	Argument	read		39551	2					
ANR	39886	Identifier	read		39551	0					
ANR	39887	ExpressionStatement	port -> message_data_pos += read	348:12:10136:10166	39551	1	True				
ANR	39888	AssignmentExpression	port -> message_data_pos += read		39551	0		+=			
ANR	39889	PtrMemberAccess	port -> message_data_pos		39551	0					
ANR	39890	Identifier	port		39551	0					
ANR	39891	Identifier	message_data_pos		39551	1					
ANR	39892	Identifier	read		39551	1					
ANR	39893	IfStatement	if ( port -> message_data_pos == port -> message_header . size )		39551	5					
ANR	39894	Condition	port -> message_data_pos == port -> message_header . size	351:12:10191:10241	39551	0	True				
ANR	39895	EqualityExpression	port -> message_data_pos == port -> message_header . size		39551	0		==			
ANR	39896	PtrMemberAccess	port -> message_data_pos		39551	0					
ANR	39897	Identifier	port		39551	0					
ANR	39898	Identifier	message_data_pos		39551	1					
ANR	39899	MemberAccess	port -> message_header . size		39551	1					
ANR	39900	PtrMemberAccess	port -> message_header		39551	0					
ANR	39901	Identifier	port		39551	0					
ANR	39902	Identifier	message_header		39551	1					
ANR	39903	Identifier	size		39551	1					
ANR	39904	CompoundStatement		53:65:2078:2078	39551	1					
ANR	39905	IfStatement	if ( vport -> read_callback )		39551	0					
ANR	39906	Condition	vport -> read_callback	352:16:10262:10281	39551	0	True				
ANR	39907	PtrMemberAccess	vport -> read_callback		39551	0					
ANR	39908	Identifier	vport		39551	0					
ANR	39909	Identifier	read_callback		39551	1					
ANR	39910	CompoundStatement		55:16:2136:2273	39551	1					
ANR	39911	IdentifierDeclStatement	"int r = vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data ) ;"	353:16:10302:10439	39551	0	True				
ANR	39912	IdentifierDecl	"r = vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data )"		39551	0					
ANR	39913	IdentifierDeclType	int		39551	0					
ANR	39914	Identifier	r		39551	1					
ANR	39915	AssignmentExpression	"r = vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data )"		39551	2		=			
ANR	39916	Identifier	r		39551	0					
ANR	39917	CallExpression	"vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data )"		39551	1					
ANR	39918	Callee	vport -> read_callback		39551	0					
ANR	39919	PtrMemberAccess	vport -> read_callback		39551	0					
ANR	39920	Identifier	vport		39551	0					
ANR	39921	Identifier	read_callback		39551	1					
ANR	39922	ArgumentList	vport		39551	1					
ANR	39923	Argument	vport		39551	0					
ANR	39924	Identifier	vport		39551	0					
ANR	39925	Argument	vport -> chunk_header . port		39551	1					
ANR	39926	MemberAccess	vport -> chunk_header . port		39551	0					
ANR	39927	PtrMemberAccess	vport -> chunk_header		39551	0					
ANR	39928	Identifier	vport		39551	0					
ANR	39929	Identifier	chunk_header		39551	1					
ANR	39930	Identifier	port		39551	1					
ANR	39931	Argument	& port -> message_header		39551	2					
ANR	39932	UnaryOperationExpression	& port -> message_header		39551	0					
ANR	39933	UnaryOperator	&		39551	0					
ANR	39934	PtrMemberAccess	port -> message_header		39551	1					
ANR	39935	Identifier	port		39551	0					
ANR	39936	Identifier	message_header		39551	1					
ANR	39937	Argument	port -> message_data		39551	3					
ANR	39938	PtrMemberAccess	port -> message_data		39551	0					
ANR	39939	Identifier	port		39551	0					
ANR	39940	Identifier	message_data		39551	1					
ANR	39941	IfStatement	if ( r == - 1 )		39551	1					
ANR	39942	Condition	r == - 1	355:20:10461:10467	39551	0	True				
ANR	39943	EqualityExpression	r == - 1		39551	0		==			
ANR	39944	Identifier	r		39551	0					
ANR	39945	UnaryOperationExpression	- 1		39551	1					
ANR	39946	UnaryOperator	-		39551	0					
ANR	39947	PrimaryExpression	1		39551	1					
ANR	39948	CompoundStatement		57:29:2304:2304	39551	1					
ANR	39949	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	356:20:10492:10527	39551	0	True				
ANR	39950	CallExpression	vdagent_virtio_port_destroy ( vportp )		39551	0					
ANR	39951	Callee	vdagent_virtio_port_destroy		39551	0					
ANR	39952	Identifier	vdagent_virtio_port_destroy		39551	0					
ANR	39953	ArgumentList	vportp		39551	1					
ANR	39954	Argument	vportp		39551	0					
ANR	39955	Identifier	vportp		39551	0					
ANR	39956	ReturnStatement	return ;	357:20:10549:10555	39551	1	True				
ANR	39957	ExpressionStatement	port -> message_header_read = 0	360:12:10601:10630	39551	1	True				
ANR	39958	AssignmentExpression	port -> message_header_read = 0		39551	0		=			
ANR	39959	PtrMemberAccess	port -> message_header_read		39551	0					
ANR	39960	Identifier	port		39551	0					
ANR	39961	Identifier	message_header_read		39551	1					
ANR	39962	PrimaryExpression	0		39551	1					
ANR	39963	ExpressionStatement	port -> message_data_pos = 0	361:12:10644:10670	39551	2	True				
ANR	39964	AssignmentExpression	port -> message_data_pos = 0		39551	0		=			
ANR	39965	PtrMemberAccess	port -> message_data_pos		39551	0					
ANR	39966	Identifier	port		39551	0					
ANR	39967	Identifier	message_data_pos		39551	1					
ANR	39968	PrimaryExpression	0		39551	1					
ANR	39969	ExpressionStatement	free ( port -> message_data )	362:12:10684:10708	39551	3	True				
ANR	39970	CallExpression	free ( port -> message_data )		39551	0					
ANR	39971	Callee	free		39551	0					
ANR	39972	Identifier	free		39551	0					
ANR	39973	ArgumentList	port -> message_data		39551	1					
ANR	39974	Argument	port -> message_data		39551	0					
ANR	39975	PtrMemberAccess	port -> message_data		39551	0					
ANR	39976	Identifier	port		39551	0					
ANR	39977	Identifier	message_data		39551	1					
ANR	39978	ExpressionStatement	port -> message_data = NULL	363:12:10722:10747	39551	4	True				
ANR	39979	AssignmentExpression	port -> message_data = NULL		39551	0		=			
ANR	39980	PtrMemberAccess	port -> message_data		39551	0					
ANR	39981	Identifier	port		39551	0					
ANR	39982	Identifier	message_data		39551	1					
ANR	39983	Identifier	NULL		39551	1					
ANR	39984	ReturnType	static void		39551	1					
ANR	39985	Identifier	vdagent_virtio_port_do_chunk		39551	2					
ANR	39986	ParameterList	struct vdagent_virtio_port * * vportp		39551	3					
ANR	39987	Parameter	struct vdagent_virtio_port * * vportp	298:41:8128:8162	39551	0	True				
ANR	39988	ParameterType	struct vdagent_virtio_port * *		39551	0					
ANR	39989	Identifier	vportp		39551	1					
ANR	39990	CFGEntryNode	ENTRY		39551		True				
ANR	39991	CFGExitNode	EXIT		39551		True				
ANR	39992	Symbol	port -> message_header		39551						
ANR	39993	Symbol	port -> message_data		39551						
ANR	39994	Symbol	vport		39551						
ANR	39995	Symbol	port -> message_header_read		39551						
ANR	39996	Symbol	vport -> chunk_header . size		39551						
ANR	39997	Symbol	port -> message_header . opaque		39551						
ANR	39998	Symbol	vport -> chunk_header . port		39551						
ANR	39999	Symbol	& port -> message_header		39551						
ANR	40000	Symbol	* port		39551						
ANR	40001	Symbol	pos		39551						
ANR	40002	Symbol	* vport		39551						
ANR	40003	Symbol	GUINT64_FROM_LE		39551						
ANR	40004	Symbol	LOG_ERR		39551						
ANR	40005	Symbol	GUINT32_FROM_LE		39551						
ANR	40006	Symbol	vport -> chunk_header		39551						
ANR	40007	Symbol	port -> message_header . protocol		39551						
ANR	40008	Symbol	avail		39551						
ANR	40009	Symbol	malloc		39551						
ANR	40010	Symbol	vportp		39551						
ANR	40011	Symbol	read		39551						
ANR	40012	Symbol	NULL		39551						
ANR	40013	Symbol	vport -> port_data		39551						
ANR	40014	Symbol	port -> message_header . size		39551						
ANR	40015	Symbol	port -> message_data_pos		39551						
ANR	40016	Symbol	port -> message_header . type		39551						
ANR	40017	Symbol	vport -> chunk_data		39551						
ANR	40018	Symbol	vport -> read_callback		39551						
ANR	40019	Symbol	r		39551						
ANR	40020	Symbol	port		39551						
ANR	40021	Symbol	* vportp		39551						
ANR	40022	Function	vport_read	368:0:10768:10981							
ANR	40023	FunctionDef	"vport_read (struct vdagent_virtio_port * vport , uint8_t * buf , int len)"		40022	0					
ANR	40024	CompoundStatement		369:0:10848:10981	40022	0					
ANR	40025	IfStatement	if ( vport -> is_uds )		40022	0					
ANR	40026	Condition	vport -> is_uds	370:8:10858:10870	40022	0	True				
ANR	40027	PtrMemberAccess	vport -> is_uds		40022	0					
ANR	40028	Identifier	vport		40022	0					
ANR	40029	Identifier	is_uds		40022	1					
ANR	40030	CompoundStatement		2:23:24:24	40022	1					
ANR	40031	ReturnStatement	"return recv ( vport -> fd , buf , len , 0 ) ;"	371:8:10883:10918	40022	0	True				
ANR	40032	CallExpression	"recv ( vport -> fd , buf , len , 0 )"		40022	0					
ANR	40033	Callee	recv		40022	0					
ANR	40034	Identifier	recv		40022	0					
ANR	40035	ArgumentList	vport -> fd		40022	1					
ANR	40036	Argument	vport -> fd		40022	0					
ANR	40037	PtrMemberAccess	vport -> fd		40022	0					
ANR	40038	Identifier	vport		40022	0					
ANR	40039	Identifier	fd		40022	1					
ANR	40040	Argument	buf		40022	1					
ANR	40041	Identifier	buf		40022	0					
ANR	40042	Argument	len		40022	2					
ANR	40043	Identifier	len		40022	0					
ANR	40044	Argument	0		40022	3					
ANR	40045	PrimaryExpression	0		40022	0					
ANR	40046	ElseStatement	else		40022	0					
ANR	40047	CompoundStatement		4:11:82:82	40022	0					
ANR	40048	ReturnStatement	"return read ( vport -> fd , buf , len ) ;"	373:8:10941:10973	40022	0	True				
ANR	40049	CallExpression	"read ( vport -> fd , buf , len )"		40022	0					
ANR	40050	Callee	read		40022	0					
ANR	40051	Identifier	read		40022	0					
ANR	40052	ArgumentList	vport -> fd		40022	1					
ANR	40053	Argument	vport -> fd		40022	0					
ANR	40054	PtrMemberAccess	vport -> fd		40022	0					
ANR	40055	Identifier	vport		40022	0					
ANR	40056	Identifier	fd		40022	1					
ANR	40057	Argument	buf		40022	1					
ANR	40058	Identifier	buf		40022	0					
ANR	40059	Argument	len		40022	2					
ANR	40060	Identifier	len		40022	0					
ANR	40061	ReturnType	static int		40022	1					
ANR	40062	Identifier	vport_read		40022	2					
ANR	40063	ParameterList	"struct vdagent_virtio_port * vport , uint8_t * buf , int len"		40022	3					
ANR	40064	Parameter	struct vdagent_virtio_port * vport	368:22:10790:10822	40022	0	True				
ANR	40065	ParameterType	struct vdagent_virtio_port *		40022	0					
ANR	40066	Identifier	vport		40022	1					
ANR	40067	Parameter	uint8_t * buf	368:57:10825:10836	40022	1	True				
ANR	40068	ParameterType	uint8_t *		40022	0					
ANR	40069	Identifier	buf		40022	1					
ANR	40070	Parameter	int len	368:71:10839:10845	40022	2	True				
ANR	40071	ParameterType	int		40022	0					
ANR	40072	Identifier	len		40022	1					
ANR	40073	CFGEntryNode	ENTRY		40022		True				
ANR	40074	CFGExitNode	EXIT		40022		True				
ANR	40075	Symbol	buf		40022						
ANR	40076	Symbol	recv		40022						
ANR	40077	Symbol	read		40022						
ANR	40078	Symbol	vport		40022						
ANR	40079	Symbol	len		40022						
ANR	40080	Symbol	* vport		40022						
ANR	40081	Symbol	vport -> fd		40022						
ANR	40082	Symbol	vport -> is_uds		40022						
ANR	40083	Function	vdagent_virtio_port_do_read	377:0:10984:14328							
ANR	40084	FunctionDef	vdagent_virtio_port_do_read (struct vdagent_virtio_port * * vportp)		40083	0					
ANR	40085	CompoundStatement		378:0:11061:14328	40083	0					
ANR	40086	IdentifierDeclStatement	ssize_t n ;	379:4:11067:11076	40083	0	True				
ANR	40087	IdentifierDecl	n		40083	0					
ANR	40088	IdentifierDeclType	ssize_t		40083	0					
ANR	40089	Identifier	n		40083	1					
ANR	40090	IdentifierDeclStatement	size_t to_read ;	380:4:11082:11096	40083	1	True				
ANR	40091	IdentifierDecl	to_read		40083	0					
ANR	40092	IdentifierDeclType	size_t		40083	0					
ANR	40093	Identifier	to_read		40083	1					
ANR	40094	IdentifierDeclStatement	uint8_t * dest ;	381:4:11102:11115	40083	2	True				
ANR	40095	IdentifierDecl	* dest		40083	0					
ANR	40096	IdentifierDeclType	uint8_t *		40083	0					
ANR	40097	Identifier	dest		40083	1					
ANR	40098	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	382:4:11121:11164	40083	3	True				
ANR	40099	IdentifierDecl	* vport = * vportp		40083	0					
ANR	40100	IdentifierDeclType	struct vdagent_virtio_port *		40083	0					
ANR	40101	Identifier	vport		40083	1					
ANR	40102	AssignmentExpression	* vport = * vportp		40083	2		=			
ANR	40103	Identifier	vport		40083	0					
ANR	40104	UnaryOperationExpression	* vportp		40083	1					
ANR	40105	UnaryOperator	*		40083	0					
ANR	40106	Identifier	vportp		40083	1					
ANR	40107	IfStatement	if ( vport -> chunk_header_read < sizeof ( vport -> chunk_header ) )		40083	4					
ANR	40108	Condition	vport -> chunk_header_read < sizeof ( vport -> chunk_header )	384:8:11175:11228	40083	0	True				
ANR	40109	RelationalExpression	vport -> chunk_header_read < sizeof ( vport -> chunk_header )		40083	0		<			
ANR	40110	PtrMemberAccess	vport -> chunk_header_read		40083	0					
ANR	40111	Identifier	vport		40083	0					
ANR	40112	Identifier	chunk_header_read		40083	1					
ANR	40113	SizeofExpression	sizeof ( vport -> chunk_header )		40083	1					
ANR	40114	Sizeof	sizeof		40083	0					
ANR	40115	PtrMemberAccess	vport -> chunk_header		40083	1					
ANR	40116	Identifier	vport		40083	0					
ANR	40117	Identifier	chunk_header		40083	1					
ANR	40118	CompoundStatement		7:64:169:169	40083	1					
ANR	40119	ExpressionStatement	to_read = sizeof ( vport -> chunk_header ) - vport -> chunk_header_read	385:8:11241:11305	40083	0	True				
ANR	40120	AssignmentExpression	to_read = sizeof ( vport -> chunk_header ) - vport -> chunk_header_read		40083	0		=			
ANR	40121	Identifier	to_read		40083	0					
ANR	40122	AdditiveExpression	sizeof ( vport -> chunk_header ) - vport -> chunk_header_read		40083	1		-			
ANR	40123	SizeofExpression	sizeof ( vport -> chunk_header )		40083	0					
ANR	40124	Sizeof	sizeof		40083	0					
ANR	40125	PtrMemberAccess	vport -> chunk_header		40083	1					
ANR	40126	Identifier	vport		40083	0					
ANR	40127	Identifier	chunk_header		40083	1					
ANR	40128	PtrMemberAccess	vport -> chunk_header_read		40083	1					
ANR	40129	Identifier	vport		40083	0					
ANR	40130	Identifier	chunk_header_read		40083	1					
ANR	40131	ExpressionStatement	dest = ( uint8_t * ) & vport -> chunk_header + vport -> chunk_header_read	386:8:11315:11380	40083	1	True				
ANR	40132	AssignmentExpression	dest = ( uint8_t * ) & vport -> chunk_header + vport -> chunk_header_read		40083	0		=			
ANR	40133	Identifier	dest		40083	0					
ANR	40134	AdditiveExpression	( uint8_t * ) & vport -> chunk_header + vport -> chunk_header_read		40083	1		+			
ANR	40135	CastExpression	( uint8_t * ) & vport -> chunk_header		40083	0					
ANR	40136	CastTarget	uint8_t *		40083	0					
ANR	40137	UnaryOperationExpression	& vport -> chunk_header		40083	1					
ANR	40138	UnaryOperator	&		40083	0					
ANR	40139	PtrMemberAccess	vport -> chunk_header		40083	1					
ANR	40140	Identifier	vport		40083	0					
ANR	40141	Identifier	chunk_header		40083	1					
ANR	40142	PtrMemberAccess	vport -> chunk_header_read		40083	1					
ANR	40143	Identifier	vport		40083	0					
ANR	40144	Identifier	chunk_header_read		40083	1					
ANR	40145	ElseStatement	else		40083	0					
ANR	40146	CompoundStatement		10:11:331:331	40083	0					
ANR	40147	ExpressionStatement	to_read = vport -> chunk_header . size - vport -> chunk_data_pos	388:8:11403:11461	40083	0	True				
ANR	40148	AssignmentExpression	to_read = vport -> chunk_header . size - vport -> chunk_data_pos		40083	0		=			
ANR	40149	Identifier	to_read		40083	0					
ANR	40150	AdditiveExpression	vport -> chunk_header . size - vport -> chunk_data_pos		40083	1		-			
ANR	40151	MemberAccess	vport -> chunk_header . size		40083	0					
ANR	40152	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40153	Identifier	vport		40083	0					
ANR	40154	Identifier	chunk_header		40083	1					
ANR	40155	Identifier	size		40083	1					
ANR	40156	PtrMemberAccess	vport -> chunk_data_pos		40083	1					
ANR	40157	Identifier	vport		40083	0					
ANR	40158	Identifier	chunk_data_pos		40083	1					
ANR	40159	ExpressionStatement	dest = vport -> chunk_data + vport -> chunk_data_pos	389:8:11471:11519	40083	1	True				
ANR	40160	AssignmentExpression	dest = vport -> chunk_data + vport -> chunk_data_pos		40083	0		=			
ANR	40161	Identifier	dest		40083	0					
ANR	40162	AdditiveExpression	vport -> chunk_data + vport -> chunk_data_pos		40083	1		+			
ANR	40163	PtrMemberAccess	vport -> chunk_data		40083	0					
ANR	40164	Identifier	vport		40083	0					
ANR	40165	Identifier	chunk_data		40083	1					
ANR	40166	PtrMemberAccess	vport -> chunk_data_pos		40083	1					
ANR	40167	Identifier	vport		40083	0					
ANR	40168	Identifier	chunk_data_pos		40083	1					
ANR	40169	ExpressionStatement	"n = vport_read ( vport , dest , to_read )"	392:4:11532:11568	40083	5	True				
ANR	40170	AssignmentExpression	"n = vport_read ( vport , dest , to_read )"		40083	0		=			
ANR	40171	Identifier	n		40083	0					
ANR	40172	CallExpression	"vport_read ( vport , dest , to_read )"		40083	1					
ANR	40173	Callee	vport_read		40083	0					
ANR	40174	Identifier	vport_read		40083	0					
ANR	40175	ArgumentList	vport		40083	1					
ANR	40176	Argument	vport		40083	0					
ANR	40177	Identifier	vport		40083	0					
ANR	40178	Argument	dest		40083	1					
ANR	40179	Identifier	dest		40083	0					
ANR	40180	Argument	to_read		40083	2					
ANR	40181	Identifier	to_read		40083	0					
ANR	40182	IfStatement	if ( n < 0 )		40083	6					
ANR	40183	Condition	n < 0	393:8:11578:11582	40083	0	True				
ANR	40184	RelationalExpression	n < 0		40083	0		<			
ANR	40185	Identifier	n		40083	0					
ANR	40186	PrimaryExpression	0		40083	1					
ANR	40187	CompoundStatement		16:15:523:523	40083	1					
ANR	40188	IfStatement	if ( errno == EINTR )		40083	0					
ANR	40189	Condition	errno == EINTR	394:12:11599:11612	40083	0	True				
ANR	40190	EqualityExpression	errno == EINTR		40083	0		==			
ANR	40191	Identifier	errno		40083	0					
ANR	40192	Identifier	EINTR		40083	1					
ANR	40193	ReturnStatement	return ;	395:12:11627:11633	40083	1	True				
ANR	40194	ExpressionStatement	"syslog ( LOG_ERR , ""reading from vdagent virtio port: %m"" )"	396:8:11643:11698	40083	1	True				
ANR	40195	CallExpression	"syslog ( LOG_ERR , ""reading from vdagent virtio port: %m"" )"		40083	0					
ANR	40196	Callee	syslog		40083	0					
ANR	40197	Identifier	syslog		40083	0					
ANR	40198	ArgumentList	LOG_ERR		40083	1					
ANR	40199	Argument	LOG_ERR		40083	0					
ANR	40200	Identifier	LOG_ERR		40083	0					
ANR	40201	Argument	"""reading from vdagent virtio port: %m"""		40083	1					
ANR	40202	PrimaryExpression	"""reading from vdagent virtio port: %m"""		40083	0					
ANR	40203	IfStatement	if ( n == 0 && vport -> opening )		40083	7					
ANR	40204	Condition	n == 0 && vport -> opening	398:8:11714:11737	40083	0	True				
ANR	40205	AndExpression	n == 0 && vport -> opening		40083	0		&&			
ANR	40206	EqualityExpression	n == 0		40083	0		==			
ANR	40207	Identifier	n		40083	0					
ANR	40208	PrimaryExpression	0		40083	1					
ANR	40209	PtrMemberAccess	vport -> opening		40083	1					
ANR	40210	Identifier	vport		40083	0					
ANR	40211	Identifier	opening		40083	1					
ANR	40212	CompoundStatement		21:34:678:678	40083	1					
ANR	40213	ExpressionStatement	usleep ( 10000 )	419:8:12988:13001	40083	0	True				
ANR	40214	CallExpression	usleep ( 10000 )		40083	0					
ANR	40215	Callee	usleep		40083	0					
ANR	40216	Identifier	usleep		40083	0					
ANR	40217	ArgumentList	10000		40083	1					
ANR	40218	Argument	10000		40083	0					
ANR	40219	PrimaryExpression	10000		40083	0					
ANR	40220	ReturnStatement	return ;	420:8:13011:13017	40083	1	True				
ANR	40221	IfStatement	if ( n <= 0 )		40083	8					
ANR	40222	Condition	n <= 0	422:8:13033:13038	40083	0	True				
ANR	40223	RelationalExpression	n <= 0		40083	0		<=			
ANR	40224	Identifier	n		40083	0					
ANR	40225	PrimaryExpression	0		40083	1					
ANR	40226	CompoundStatement		45:16:1979:1979	40083	1					
ANR	40227	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	423:8:13051:13086	40083	0	True				
ANR	40228	CallExpression	vdagent_virtio_port_destroy ( vportp )		40083	0					
ANR	40229	Callee	vdagent_virtio_port_destroy		40083	0					
ANR	40230	Identifier	vdagent_virtio_port_destroy		40083	0					
ANR	40231	ArgumentList	vportp		40083	1					
ANR	40232	Argument	vportp		40083	0					
ANR	40233	Identifier	vportp		40083	0					
ANR	40234	ReturnStatement	return ;	424:8:13096:13102	40083	1	True				
ANR	40235	ExpressionStatement	vport -> opening = 0	426:4:13114:13132	40083	9	True				
ANR	40236	AssignmentExpression	vport -> opening = 0		40083	0		=			
ANR	40237	PtrMemberAccess	vport -> opening		40083	0					
ANR	40238	Identifier	vport		40083	0					
ANR	40239	Identifier	opening		40083	1					
ANR	40240	PrimaryExpression	0		40083	1					
ANR	40241	IfStatement	if ( vport -> chunk_header_read < sizeof ( vport -> chunk_header ) )		40083	10					
ANR	40242	Condition	vport -> chunk_header_read < sizeof ( vport -> chunk_header )	428:8:13143:13196	40083	0	True				
ANR	40243	RelationalExpression	vport -> chunk_header_read < sizeof ( vport -> chunk_header )		40083	0		<			
ANR	40244	PtrMemberAccess	vport -> chunk_header_read		40083	0					
ANR	40245	Identifier	vport		40083	0					
ANR	40246	Identifier	chunk_header_read		40083	1					
ANR	40247	SizeofExpression	sizeof ( vport -> chunk_header )		40083	1					
ANR	40248	Sizeof	sizeof		40083	0					
ANR	40249	PtrMemberAccess	vport -> chunk_header		40083	1					
ANR	40250	Identifier	vport		40083	0					
ANR	40251	Identifier	chunk_header		40083	1					
ANR	40252	CompoundStatement		51:64:2137:2137	40083	1					
ANR	40253	ExpressionStatement	vport -> chunk_header_read += n	429:8:13209:13238	40083	0	True				
ANR	40254	AssignmentExpression	vport -> chunk_header_read += n		40083	0		+=			
ANR	40255	PtrMemberAccess	vport -> chunk_header_read		40083	0					
ANR	40256	Identifier	vport		40083	0					
ANR	40257	Identifier	chunk_header_read		40083	1					
ANR	40258	Identifier	n		40083	1					
ANR	40259	IfStatement	if ( vport -> chunk_header_read == sizeof ( vport -> chunk_header ) )		40083	1					
ANR	40260	Condition	vport -> chunk_header_read == sizeof ( vport -> chunk_header )	430:12:13252:13306	40083	0	True				
ANR	40261	EqualityExpression	vport -> chunk_header_read == sizeof ( vport -> chunk_header )		40083	0		==			
ANR	40262	PtrMemberAccess	vport -> chunk_header_read		40083	0					
ANR	40263	Identifier	vport		40083	0					
ANR	40264	Identifier	chunk_header_read		40083	1					
ANR	40265	SizeofExpression	sizeof ( vport -> chunk_header )		40083	1					
ANR	40266	Sizeof	sizeof		40083	0					
ANR	40267	PtrMemberAccess	vport -> chunk_header		40083	1					
ANR	40268	Identifier	vport		40083	0					
ANR	40269	Identifier	chunk_header		40083	1					
ANR	40270	CompoundStatement		53:69:2247:2247	40083	1					
ANR	40271	ExpressionStatement	vport -> chunk_header . size = GUINT32_FROM_LE ( vport -> chunk_header . size )	431:12:13323:13391	40083	0	True				
ANR	40272	AssignmentExpression	vport -> chunk_header . size = GUINT32_FROM_LE ( vport -> chunk_header . size )		40083	0		=			
ANR	40273	MemberAccess	vport -> chunk_header . size		40083	0					
ANR	40274	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40275	Identifier	vport		40083	0					
ANR	40276	Identifier	chunk_header		40083	1					
ANR	40277	Identifier	size		40083	1					
ANR	40278	CallExpression	GUINT32_FROM_LE ( vport -> chunk_header . size )		40083	1					
ANR	40279	Callee	GUINT32_FROM_LE		40083	0					
ANR	40280	Identifier	GUINT32_FROM_LE		40083	0					
ANR	40281	ArgumentList	vport -> chunk_header . size		40083	1					
ANR	40282	Argument	vport -> chunk_header . size		40083	0					
ANR	40283	MemberAccess	vport -> chunk_header . size		40083	0					
ANR	40284	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40285	Identifier	vport		40083	0					
ANR	40286	Identifier	chunk_header		40083	1					
ANR	40287	Identifier	size		40083	1					
ANR	40288	ExpressionStatement	vport -> chunk_header . port = GUINT32_FROM_LE ( vport -> chunk_header . port )	432:12:13405:13473	40083	1	True				
ANR	40289	AssignmentExpression	vport -> chunk_header . port = GUINT32_FROM_LE ( vport -> chunk_header . port )		40083	0		=			
ANR	40290	MemberAccess	vport -> chunk_header . port		40083	0					
ANR	40291	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40292	Identifier	vport		40083	0					
ANR	40293	Identifier	chunk_header		40083	1					
ANR	40294	Identifier	port		40083	1					
ANR	40295	CallExpression	GUINT32_FROM_LE ( vport -> chunk_header . port )		40083	1					
ANR	40296	Callee	GUINT32_FROM_LE		40083	0					
ANR	40297	Identifier	GUINT32_FROM_LE		40083	0					
ANR	40298	ArgumentList	vport -> chunk_header . port		40083	1					
ANR	40299	Argument	vport -> chunk_header . port		40083	0					
ANR	40300	MemberAccess	vport -> chunk_header . port		40083	0					
ANR	40301	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40302	Identifier	vport		40083	0					
ANR	40303	Identifier	chunk_header		40083	1					
ANR	40304	Identifier	port		40083	1					
ANR	40305	IfStatement	if ( vport -> chunk_header . size > VD_AGENT_MAX_DATA_SIZE )		40083	2					
ANR	40306	Condition	vport -> chunk_header . size > VD_AGENT_MAX_DATA_SIZE	433:16:13491:13539	40083	0	True				
ANR	40307	RelationalExpression	vport -> chunk_header . size > VD_AGENT_MAX_DATA_SIZE		40083	0		>			
ANR	40308	MemberAccess	vport -> chunk_header . size		40083	0					
ANR	40309	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40310	Identifier	vport		40083	0					
ANR	40311	Identifier	chunk_header		40083	1					
ANR	40312	Identifier	size		40083	1					
ANR	40313	Identifier	VD_AGENT_MAX_DATA_SIZE		40083	1					
ANR	40314	CompoundStatement		56:67:2480:2480	40083	1					
ANR	40315	ExpressionStatement	"syslog ( LOG_ERR , ""chunk size %u too large"" , vport -> chunk_header . size )"	434:16:13560:13651	40083	0	True				
ANR	40316	CallExpression	"syslog ( LOG_ERR , ""chunk size %u too large"" , vport -> chunk_header . size )"		40083	0					
ANR	40317	Callee	syslog		40083	0					
ANR	40318	Identifier	syslog		40083	0					
ANR	40319	ArgumentList	LOG_ERR		40083	1					
ANR	40320	Argument	LOG_ERR		40083	0					
ANR	40321	Identifier	LOG_ERR		40083	0					
ANR	40322	Argument	"""chunk size %u too large"""		40083	1					
ANR	40323	PrimaryExpression	"""chunk size %u too large"""		40083	0					
ANR	40324	Argument	vport -> chunk_header . size		40083	2					
ANR	40325	MemberAccess	vport -> chunk_header . size		40083	0					
ANR	40326	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40327	Identifier	vport		40083	0					
ANR	40328	Identifier	chunk_header		40083	1					
ANR	40329	Identifier	size		40083	1					
ANR	40330	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	436:16:13669:13704	40083	1	True				
ANR	40331	CallExpression	vdagent_virtio_port_destroy ( vportp )		40083	0					
ANR	40332	Callee	vdagent_virtio_port_destroy		40083	0					
ANR	40333	Identifier	vdagent_virtio_port_destroy		40083	0					
ANR	40334	ArgumentList	vportp		40083	1					
ANR	40335	Argument	vportp		40083	0					
ANR	40336	Identifier	vportp		40083	0					
ANR	40337	ReturnStatement	return ;	437:16:13722:13728	40083	2	True				
ANR	40338	IfStatement	if ( vport -> chunk_header . port >= VDP_END_PORT )		40083	3					
ANR	40339	Condition	vport -> chunk_header . port >= VDP_END_PORT	439:16:13760:13799	40083	0	True				
ANR	40340	RelationalExpression	vport -> chunk_header . port >= VDP_END_PORT		40083	0		>=			
ANR	40341	MemberAccess	vport -> chunk_header . port		40083	0					
ANR	40342	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40343	Identifier	vport		40083	0					
ANR	40344	Identifier	chunk_header		40083	1					
ANR	40345	Identifier	port		40083	1					
ANR	40346	Identifier	VDP_END_PORT		40083	1					
ANR	40347	CompoundStatement		62:58:2740:2740	40083	1					
ANR	40348	ExpressionStatement	"syslog ( LOG_ERR , ""chunk port %u out of range"" , vport -> chunk_header . port )"	440:16:13820:13914	40083	0	True				
ANR	40349	CallExpression	"syslog ( LOG_ERR , ""chunk port %u out of range"" , vport -> chunk_header . port )"		40083	0					
ANR	40350	Callee	syslog		40083	0					
ANR	40351	Identifier	syslog		40083	0					
ANR	40352	ArgumentList	LOG_ERR		40083	1					
ANR	40353	Argument	LOG_ERR		40083	0					
ANR	40354	Identifier	LOG_ERR		40083	0					
ANR	40355	Argument	"""chunk port %u out of range"""		40083	1					
ANR	40356	PrimaryExpression	"""chunk port %u out of range"""		40083	0					
ANR	40357	Argument	vport -> chunk_header . port		40083	2					
ANR	40358	MemberAccess	vport -> chunk_header . port		40083	0					
ANR	40359	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40360	Identifier	vport		40083	0					
ANR	40361	Identifier	chunk_header		40083	1					
ANR	40362	Identifier	port		40083	1					
ANR	40363	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	442:16:13932:13967	40083	1	True				
ANR	40364	CallExpression	vdagent_virtio_port_destroy ( vportp )		40083	0					
ANR	40365	Callee	vdagent_virtio_port_destroy		40083	0					
ANR	40366	Identifier	vdagent_virtio_port_destroy		40083	0					
ANR	40367	ArgumentList	vportp		40083	1					
ANR	40368	Argument	vportp		40083	0					
ANR	40369	Identifier	vportp		40083	0					
ANR	40370	ReturnStatement	return ;	443:16:13985:13991	40083	2	True				
ANR	40371	ElseStatement	else		40083	0					
ANR	40372	CompoundStatement		69:11:2966:2966	40083	0					
ANR	40373	ExpressionStatement	vport -> chunk_data_pos += n	447:8:14038:14064	40083	0	True				
ANR	40374	AssignmentExpression	vport -> chunk_data_pos += n		40083	0		+=			
ANR	40375	PtrMemberAccess	vport -> chunk_data_pos		40083	0					
ANR	40376	Identifier	vport		40083	0					
ANR	40377	Identifier	chunk_data_pos		40083	1					
ANR	40378	Identifier	n		40083	1					
ANR	40379	IfStatement	if ( vport -> chunk_data_pos == vport -> chunk_header . size )		40083	1					
ANR	40380	Condition	vport -> chunk_data_pos == vport -> chunk_header . size	448:12:14078:14126	40083	0	True				
ANR	40381	EqualityExpression	vport -> chunk_data_pos == vport -> chunk_header . size		40083	0		==			
ANR	40382	PtrMemberAccess	vport -> chunk_data_pos		40083	0					
ANR	40383	Identifier	vport		40083	0					
ANR	40384	Identifier	chunk_data_pos		40083	1					
ANR	40385	MemberAccess	vport -> chunk_header . size		40083	1					
ANR	40386	PtrMemberAccess	vport -> chunk_header		40083	0					
ANR	40387	Identifier	vport		40083	0					
ANR	40388	Identifier	chunk_header		40083	1					
ANR	40389	Identifier	size		40083	1					
ANR	40390	CompoundStatement		71:63:3067:3067	40083	1					
ANR	40391	ExpressionStatement	vdagent_virtio_port_do_chunk ( vportp )	449:12:14143:14179	40083	0	True				
ANR	40392	CallExpression	vdagent_virtio_port_do_chunk ( vportp )		40083	0					
ANR	40393	Callee	vdagent_virtio_port_do_chunk		40083	0					
ANR	40394	Identifier	vdagent_virtio_port_do_chunk		40083	0					
ANR	40395	ArgumentList	vportp		40083	1					
ANR	40396	Argument	vportp		40083	0					
ANR	40397	Identifier	vportp		40083	0					
ANR	40398	IfStatement	if ( ! * vportp )		40083	1					
ANR	40399	Condition	! * vportp	450:16:14197:14204	40083	0	True				
ANR	40400	UnaryOperationExpression	! * vportp		40083	0					
ANR	40401	UnaryOperator	!		40083	0					
ANR	40402	UnaryOperationExpression	* vportp		40083	1					
ANR	40403	UnaryOperator	*		40083	0					
ANR	40404	Identifier	vportp		40083	1					
ANR	40405	ReturnStatement	return ;	451:16:14223:14229	40083	1	True				
ANR	40406	ExpressionStatement	vport -> chunk_header_read = 0	452:12:14243:14271	40083	2	True				
ANR	40407	AssignmentExpression	vport -> chunk_header_read = 0		40083	0		=			
ANR	40408	PtrMemberAccess	vport -> chunk_header_read		40083	0					
ANR	40409	Identifier	vport		40083	0					
ANR	40410	Identifier	chunk_header_read		40083	1					
ANR	40411	PrimaryExpression	0		40083	1					
ANR	40412	ExpressionStatement	vport -> chunk_data_pos = 0	453:12:14285:14310	40083	3	True				
ANR	40413	AssignmentExpression	vport -> chunk_data_pos = 0		40083	0		=			
ANR	40414	PtrMemberAccess	vport -> chunk_data_pos		40083	0					
ANR	40415	Identifier	vport		40083	0					
ANR	40416	Identifier	chunk_data_pos		40083	1					
ANR	40417	PrimaryExpression	0		40083	1					
ANR	40418	ReturnType	static void		40083	1					
ANR	40419	Identifier	vdagent_virtio_port_do_read		40083	2					
ANR	40420	ParameterList	struct vdagent_virtio_port * * vportp		40083	3					
ANR	40421	Parameter	struct vdagent_virtio_port * * vportp	377:40:11024:11058	40083	0	True				
ANR	40422	ParameterType	struct vdagent_virtio_port * *		40083	0					
ANR	40423	Identifier	vportp		40083	1					
ANR	40424	CFGEntryNode	ENTRY		40083		True				
ANR	40425	CFGExitNode	EXIT		40083		True				
ANR	40426	Symbol	VD_AGENT_MAX_DATA_SIZE		40083						
ANR	40427	Symbol	errno		40083						
ANR	40428	Symbol	vportp		40083						
ANR	40429	Symbol	vport		40083						
ANR	40430	Symbol	VDP_END_PORT		40083						
ANR	40431	Symbol	& vport -> chunk_header		40083						
ANR	40432	Symbol	EINTR		40083						
ANR	40433	Symbol	vport -> chunk_header . size		40083						
ANR	40434	Symbol	vport_read		40083						
ANR	40435	Symbol	vport -> chunk_header . port		40083						
ANR	40436	Symbol	dest		40083						
ANR	40437	Symbol	n		40083						
ANR	40438	Symbol	vport -> chunk_data		40083						
ANR	40439	Symbol	vport -> chunk_data_pos		40083						
ANR	40440	Symbol	* vport		40083						
ANR	40441	Symbol	to_read		40083						
ANR	40442	Symbol	vport -> chunk_header_read		40083						
ANR	40443	Symbol	LOG_ERR		40083						
ANR	40444	Symbol	vport -> opening		40083						
ANR	40445	Symbol	GUINT32_FROM_LE		40083						
ANR	40446	Symbol	* vportp		40083						
ANR	40447	Symbol	vport -> chunk_header		40083						
ANR	40448	Function	vport_write	458:0:14331:14546							
ANR	40449	FunctionDef	"vport_write (struct vdagent_virtio_port * vport , uint8_t * buf , int len)"		40448	0					
ANR	40450	CompoundStatement		459:0:14412:14546	40448	0					
ANR	40451	IfStatement	if ( vport -> is_uds )		40448	0					
ANR	40452	Condition	vport -> is_uds	460:8:14422:14434	40448	0	True				
ANR	40453	PtrMemberAccess	vport -> is_uds		40448	0					
ANR	40454	Identifier	vport		40448	0					
ANR	40455	Identifier	is_uds		40448	1					
ANR	40456	CompoundStatement		2:23:24:24	40448	1					
ANR	40457	ReturnStatement	"return send ( vport -> fd , buf , len , 0 ) ;"	461:8:14447:14482	40448	0	True				
ANR	40458	CallExpression	"send ( vport -> fd , buf , len , 0 )"		40448	0					
ANR	40459	Callee	send		40448	0					
ANR	40460	Identifier	send		40448	0					
ANR	40461	ArgumentList	vport -> fd		40448	1					
ANR	40462	Argument	vport -> fd		40448	0					
ANR	40463	PtrMemberAccess	vport -> fd		40448	0					
ANR	40464	Identifier	vport		40448	0					
ANR	40465	Identifier	fd		40448	1					
ANR	40466	Argument	buf		40448	1					
ANR	40467	Identifier	buf		40448	0					
ANR	40468	Argument	len		40448	2					
ANR	40469	Identifier	len		40448	0					
ANR	40470	Argument	0		40448	3					
ANR	40471	PrimaryExpression	0		40448	0					
ANR	40472	ElseStatement	else		40448	0					
ANR	40473	CompoundStatement		4:11:82:82	40448	0					
ANR	40474	ReturnStatement	"return write ( vport -> fd , buf , len ) ;"	463:8:14505:14538	40448	0	True				
ANR	40475	CallExpression	"write ( vport -> fd , buf , len )"		40448	0					
ANR	40476	Callee	write		40448	0					
ANR	40477	Identifier	write		40448	0					
ANR	40478	ArgumentList	vport -> fd		40448	1					
ANR	40479	Argument	vport -> fd		40448	0					
ANR	40480	PtrMemberAccess	vport -> fd		40448	0					
ANR	40481	Identifier	vport		40448	0					
ANR	40482	Identifier	fd		40448	1					
ANR	40483	Argument	buf		40448	1					
ANR	40484	Identifier	buf		40448	0					
ANR	40485	Argument	len		40448	2					
ANR	40486	Identifier	len		40448	0					
ANR	40487	ReturnType	static int		40448	1					
ANR	40488	Identifier	vport_write		40448	2					
ANR	40489	ParameterList	"struct vdagent_virtio_port * vport , uint8_t * buf , int len"		40448	3					
ANR	40490	Parameter	struct vdagent_virtio_port * vport	458:23:14354:14386	40448	0	True				
ANR	40491	ParameterType	struct vdagent_virtio_port *		40448	0					
ANR	40492	Identifier	vport		40448	1					
ANR	40493	Parameter	uint8_t * buf	458:58:14389:14400	40448	1	True				
ANR	40494	ParameterType	uint8_t *		40448	0					
ANR	40495	Identifier	buf		40448	1					
ANR	40496	Parameter	int len	458:72:14403:14409	40448	2	True				
ANR	40497	ParameterType	int		40448	0					
ANR	40498	Identifier	len		40448	1					
ANR	40499	CFGEntryNode	ENTRY		40448		True				
ANR	40500	CFGExitNode	EXIT		40448		True				
ANR	40501	Symbol	buf		40448						
ANR	40502	Symbol	vport		40448						
ANR	40503	Symbol	len		40448						
ANR	40504	Symbol	* vport		40448						
ANR	40505	Symbol	vport -> fd		40448						
ANR	40506	Symbol	send		40448						
ANR	40507	Symbol	write		40448						
ANR	40508	Symbol	vport -> is_uds		40448						
ANR	40509	Function	vdagent_virtio_port_do_write	467:0:14549:15502							
ANR	40510	FunctionDef	vdagent_virtio_port_do_write (struct vdagent_virtio_port * * vportp)		40509	0					
ANR	40511	CompoundStatement		468:0:14627:15502	40509	0					
ANR	40512	IdentifierDeclStatement	ssize_t n ;	469:4:14633:14642	40509	0	True				
ANR	40513	IdentifierDecl	n		40509	0					
ANR	40514	IdentifierDeclType	ssize_t		40509	0					
ANR	40515	Identifier	n		40509	1					
ANR	40516	IdentifierDeclStatement	size_t to_write ;	470:4:14648:14663	40509	1	True				
ANR	40517	IdentifierDecl	to_write		40509	0					
ANR	40518	IdentifierDeclType	size_t		40509	0					
ANR	40519	Identifier	to_write		40509	1					
ANR	40520	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	471:4:14669:14712	40509	2	True				
ANR	40521	IdentifierDecl	* vport = * vportp		40509	0					
ANR	40522	IdentifierDeclType	struct vdagent_virtio_port *		40509	0					
ANR	40523	Identifier	vport		40509	1					
ANR	40524	AssignmentExpression	* vport = * vportp		40509	2		=			
ANR	40525	Identifier	vport		40509	0					
ANR	40526	UnaryOperationExpression	* vportp		40509	1					
ANR	40527	UnaryOperator	*		40509	0					
ANR	40528	Identifier	vportp		40509	1					
ANR	40529	IdentifierDeclStatement	struct vdagent_virtio_port_buf * wbuf = vport -> write_buf ;	473:4:14719:14774	40509	3	True				
ANR	40530	IdentifierDecl	* wbuf = vport -> write_buf		40509	0					
ANR	40531	IdentifierDeclType	struct vdagent_virtio_port_buf *		40509	0					
ANR	40532	Identifier	wbuf		40509	1					
ANR	40533	AssignmentExpression	* wbuf = vport -> write_buf		40509	2		=			
ANR	40534	Identifier	wbuf		40509	0					
ANR	40535	PtrMemberAccess	vport -> write_buf		40509	1					
ANR	40536	Identifier	vport		40509	0					
ANR	40537	Identifier	write_buf		40509	1					
ANR	40538	IfStatement	if ( ! wbuf )		40509	4					
ANR	40539	Condition	! wbuf	474:8:14784:14788	40509	0	True				
ANR	40540	UnaryOperationExpression	! wbuf		40509	0					
ANR	40541	UnaryOperator	!		40509	0					
ANR	40542	Identifier	wbuf		40509	1					
ANR	40543	CompoundStatement		7:15:163:163	40509	1					
ANR	40544	ExpressionStatement	"syslog ( LOG_ERR , ""do_write called on a port without a write buf ?!"" )"	475:8:14801:14868	40509	0	True				
ANR	40545	CallExpression	"syslog ( LOG_ERR , ""do_write called on a port without a write buf ?!"" )"		40509	0					
ANR	40546	Callee	syslog		40509	0					
ANR	40547	Identifier	syslog		40509	0					
ANR	40548	ArgumentList	LOG_ERR		40509	1					
ANR	40549	Argument	LOG_ERR		40509	0					
ANR	40550	Identifier	LOG_ERR		40509	0					
ANR	40551	Argument	"""do_write called on a port without a write buf ?!"""		40509	1					
ANR	40552	PrimaryExpression	"""do_write called on a port without a write buf ?!"""		40509	0					
ANR	40553	ReturnStatement	return ;	476:8:14878:14884	40509	1	True				
ANR	40554	IfStatement	if ( wbuf -> write_pos != wbuf -> size )		40509	5					
ANR	40555	Condition	wbuf -> write_pos != wbuf -> size	479:8:14901:14929	40509	0	True				
ANR	40556	EqualityExpression	wbuf -> write_pos != wbuf -> size		40509	0		!=			
ANR	40557	PtrMemberAccess	wbuf -> write_pos		40509	0					
ANR	40558	Identifier	wbuf		40509	0					
ANR	40559	Identifier	write_pos		40509	1					
ANR	40560	PtrMemberAccess	wbuf -> size		40509	1					
ANR	40561	Identifier	wbuf		40509	0					
ANR	40562	Identifier	size		40509	1					
ANR	40563	CompoundStatement		12:39:304:304	40509	1					
ANR	40564	ExpressionStatement	"syslog ( LOG_ERR , ""do_write: buffer is incomplete!!"" )"	480:8:14942:14993	40509	0	True				
ANR	40565	CallExpression	"syslog ( LOG_ERR , ""do_write: buffer is incomplete!!"" )"		40509	0					
ANR	40566	Callee	syslog		40509	0					
ANR	40567	Identifier	syslog		40509	0					
ANR	40568	ArgumentList	LOG_ERR		40509	1					
ANR	40569	Argument	LOG_ERR		40509	0					
ANR	40570	Identifier	LOG_ERR		40509	0					
ANR	40571	Argument	"""do_write: buffer is incomplete!!"""		40509	1					
ANR	40572	PrimaryExpression	"""do_write: buffer is incomplete!!"""		40509	0					
ANR	40573	ReturnStatement	return ;	481:8:15003:15009	40509	1	True				
ANR	40574	ExpressionStatement	to_write = wbuf -> size - wbuf -> pos	484:4:15022:15055	40509	6	True				
ANR	40575	AssignmentExpression	to_write = wbuf -> size - wbuf -> pos		40509	0		=			
ANR	40576	Identifier	to_write		40509	0					
ANR	40577	AdditiveExpression	wbuf -> size - wbuf -> pos		40509	1		-			
ANR	40578	PtrMemberAccess	wbuf -> size		40509	0					
ANR	40579	Identifier	wbuf		40509	0					
ANR	40580	Identifier	size		40509	1					
ANR	40581	PtrMemberAccess	wbuf -> pos		40509	1					
ANR	40582	Identifier	wbuf		40509	0					
ANR	40583	Identifier	pos		40509	1					
ANR	40584	ExpressionStatement	"n = vport_write ( vport , wbuf -> buf + wbuf -> pos , to_write )"	485:4:15061:15116	40509	7	True				
ANR	40585	AssignmentExpression	"n = vport_write ( vport , wbuf -> buf + wbuf -> pos , to_write )"		40509	0		=			
ANR	40586	Identifier	n		40509	0					
ANR	40587	CallExpression	"vport_write ( vport , wbuf -> buf + wbuf -> pos , to_write )"		40509	1					
ANR	40588	Callee	vport_write		40509	0					
ANR	40589	Identifier	vport_write		40509	0					
ANR	40590	ArgumentList	vport		40509	1					
ANR	40591	Argument	vport		40509	0					
ANR	40592	Identifier	vport		40509	0					
ANR	40593	Argument	wbuf -> buf + wbuf -> pos		40509	1					
ANR	40594	AdditiveExpression	wbuf -> buf + wbuf -> pos		40509	0		+			
ANR	40595	PtrMemberAccess	wbuf -> buf		40509	0					
ANR	40596	Identifier	wbuf		40509	0					
ANR	40597	Identifier	buf		40509	1					
ANR	40598	PtrMemberAccess	wbuf -> pos		40509	1					
ANR	40599	Identifier	wbuf		40509	0					
ANR	40600	Identifier	pos		40509	1					
ANR	40601	Argument	to_write		40509	2					
ANR	40602	Identifier	to_write		40509	0					
ANR	40603	IfStatement	if ( n < 0 )		40509	8					
ANR	40604	Condition	n < 0	486:8:15126:15130	40509	0	True				
ANR	40605	RelationalExpression	n < 0		40509	0		<			
ANR	40606	Identifier	n		40509	0					
ANR	40607	PrimaryExpression	0		40509	1					
ANR	40608	CompoundStatement		19:15:505:505	40509	1					
ANR	40609	IfStatement	if ( errno == EINTR )		40509	0					
ANR	40610	Condition	errno == EINTR	487:12:15147:15160	40509	0	True				
ANR	40611	EqualityExpression	errno == EINTR		40509	0		==			
ANR	40612	Identifier	errno		40509	0					
ANR	40613	Identifier	EINTR		40509	1					
ANR	40614	ReturnStatement	return ;	488:12:15175:15181	40509	1	True				
ANR	40615	ExpressionStatement	"syslog ( LOG_ERR , ""writing to vdagent virtio port: %m"" )"	489:8:15191:15244	40509	1	True				
ANR	40616	CallExpression	"syslog ( LOG_ERR , ""writing to vdagent virtio port: %m"" )"		40509	0					
ANR	40617	Callee	syslog		40509	0					
ANR	40618	Identifier	syslog		40509	0					
ANR	40619	ArgumentList	LOG_ERR		40509	1					
ANR	40620	Argument	LOG_ERR		40509	0					
ANR	40621	Identifier	LOG_ERR		40509	0					
ANR	40622	Argument	"""writing to vdagent virtio port: %m"""		40509	1					
ANR	40623	PrimaryExpression	"""writing to vdagent virtio port: %m"""		40509	0					
ANR	40624	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	490:8:15254:15289	40509	2	True				
ANR	40625	CallExpression	vdagent_virtio_port_destroy ( vportp )		40509	0					
ANR	40626	Callee	vdagent_virtio_port_destroy		40509	0					
ANR	40627	Identifier	vdagent_virtio_port_destroy		40509	0					
ANR	40628	ArgumentList	vportp		40509	1					
ANR	40629	Argument	vportp		40509	0					
ANR	40630	Identifier	vportp		40509	0					
ANR	40631	ReturnStatement	return ;	491:8:15299:15305	40509	3	True				
ANR	40632	IfStatement	if ( n > 0 )		40509	9					
ANR	40633	Condition	n > 0	493:8:15321:15325	40509	0	True				
ANR	40634	RelationalExpression	n > 0		40509	0		>			
ANR	40635	Identifier	n		40509	0					
ANR	40636	PrimaryExpression	0		40509	1					
ANR	40637	ExpressionStatement	vport -> opening = 0	494:8:15336:15354	40509	1	True				
ANR	40638	AssignmentExpression	vport -> opening = 0		40509	0		=			
ANR	40639	PtrMemberAccess	vport -> opening		40509	0					
ANR	40640	Identifier	vport		40509	0					
ANR	40641	Identifier	opening		40509	1					
ANR	40642	PrimaryExpression	0		40509	1					
ANR	40643	ExpressionStatement	wbuf -> pos += n	496:4:15361:15375	40509	10	True				
ANR	40644	AssignmentExpression	wbuf -> pos += n		40509	0		+=			
ANR	40645	PtrMemberAccess	wbuf -> pos		40509	0					
ANR	40646	Identifier	wbuf		40509	0					
ANR	40647	Identifier	pos		40509	1					
ANR	40648	Identifier	n		40509	1					
ANR	40649	IfStatement	if ( wbuf -> pos == wbuf -> size )		40509	11					
ANR	40650	Condition	wbuf -> pos == wbuf -> size	497:8:15385:15407	40509	0	True				
ANR	40651	EqualityExpression	wbuf -> pos == wbuf -> size		40509	0		==			
ANR	40652	PtrMemberAccess	wbuf -> pos		40509	0					
ANR	40653	Identifier	wbuf		40509	0					
ANR	40654	Identifier	pos		40509	1					
ANR	40655	PtrMemberAccess	wbuf -> size		40509	1					
ANR	40656	Identifier	wbuf		40509	0					
ANR	40657	Identifier	size		40509	1					
ANR	40658	CompoundStatement		30:33:782:782	40509	1					
ANR	40659	ExpressionStatement	vport -> write_buf = wbuf -> next	498:8:15420:15449	40509	0	True				
ANR	40660	AssignmentExpression	vport -> write_buf = wbuf -> next		40509	0		=			
ANR	40661	PtrMemberAccess	vport -> write_buf		40509	0					
ANR	40662	Identifier	vport		40509	0					
ANR	40663	Identifier	write_buf		40509	1					
ANR	40664	PtrMemberAccess	wbuf -> next		40509	1					
ANR	40665	Identifier	wbuf		40509	0					
ANR	40666	Identifier	next		40509	1					
ANR	40667	ExpressionStatement	free ( wbuf -> buf )	499:8:15459:15474	40509	1	True				
ANR	40668	CallExpression	free ( wbuf -> buf )		40509	0					
ANR	40669	Callee	free		40509	0					
ANR	40670	Identifier	free		40509	0					
ANR	40671	ArgumentList	wbuf -> buf		40509	1					
ANR	40672	Argument	wbuf -> buf		40509	0					
ANR	40673	PtrMemberAccess	wbuf -> buf		40509	0					
ANR	40674	Identifier	wbuf		40509	0					
ANR	40675	Identifier	buf		40509	1					
ANR	40676	ExpressionStatement	free ( wbuf )	500:8:15484:15494	40509	2	True				
ANR	40677	CallExpression	free ( wbuf )		40509	0					
ANR	40678	Callee	free		40509	0					
ANR	40679	Identifier	free		40509	0					
ANR	40680	ArgumentList	wbuf		40509	1					
ANR	40681	Argument	wbuf		40509	0					
ANR	40682	Identifier	wbuf		40509	0					
ANR	40683	ReturnType	static void		40509	1					
ANR	40684	Identifier	vdagent_virtio_port_do_write		40509	2					
ANR	40685	ParameterList	struct vdagent_virtio_port * * vportp		40509	3					
ANR	40686	Parameter	struct vdagent_virtio_port * * vportp	467:41:14590:14624	40509	0	True				
ANR	40687	ParameterType	struct vdagent_virtio_port * *		40509	0					
ANR	40688	Identifier	vportp		40509	1					
ANR	40689	CFGEntryNode	ENTRY		40509		True				
ANR	40690	CFGExitNode	EXIT		40509		True				
ANR	40691	Symbol	to_write		40509						
ANR	40692	Symbol	errno		40509						
ANR	40693	Symbol	vportp		40509						
ANR	40694	Symbol	vport		40509						
ANR	40695	Symbol	EINTR		40509						
ANR	40696	Symbol	wbuf -> next		40509						
ANR	40697	Symbol	wbuf		40509						
ANR	40698	Symbol	vport -> write_buf		40509						
ANR	40699	Symbol	n		40509						
ANR	40700	Symbol	wbuf -> size		40509						
ANR	40701	Symbol	* wbuf		40509						
ANR	40702	Symbol	* vport		40509						
ANR	40703	Symbol	LOG_ERR		40509						
ANR	40704	Symbol	wbuf -> write_pos		40509						
ANR	40705	Symbol	vport_write		40509						
ANR	40706	Symbol	vport -> opening		40509						
ANR	40707	Symbol	* vportp		40509						
ANR	40708	Symbol	wbuf -> buf		40509						
ANR	40709	Symbol	wbuf -> pos		40509						
