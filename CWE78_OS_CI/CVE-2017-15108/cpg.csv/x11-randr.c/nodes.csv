command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	57192	File	data/converged/CVE-2017-15108_vd_agent/x11-randr.c								
ANR	57193	Function	error_handler	39:0:1144:1257							
ANR	57194	FunctionDef	"error_handler (Display * display , XErrorEvent * error)"		57193	0					
ANR	57195	CompoundStatement		40:0:1207:1257	57193	0					
ANR	57196	ExpressionStatement	vdagent_x11_caught_error = 1	41:4:1213:1241	57193	0	True				
ANR	57197	AssignmentExpression	vdagent_x11_caught_error = 1		57193	0		=			
ANR	57198	Identifier	vdagent_x11_caught_error		57193	0					
ANR	57199	PrimaryExpression	1		57193	1					
ANR	57200	ReturnStatement	return 0 ;	42:4:1247:1255	57193	1	True				
ANR	57201	PrimaryExpression	0		57193	0					
ANR	57202	ReturnType	static int		57193	1					
ANR	57203	Identifier	error_handler		57193	2					
ANR	57204	ParameterList	"Display * display , XErrorEvent * error"		57193	3					
ANR	57205	Parameter	Display * display	39:25:1169:1184	57193	0	True				
ANR	57206	ParameterType	Display *		57193	0					
ANR	57207	Identifier	display		57193	1					
ANR	57208	Parameter	XErrorEvent * error	39:43:1187:1204	57193	1	True				
ANR	57209	ParameterType	XErrorEvent *		57193	0					
ANR	57210	Identifier	error		57193	1					
ANR	57211	CFGEntryNode	ENTRY		57193		True				
ANR	57212	CFGExitNode	EXIT		57193		True				
ANR	57213	Symbol	vdagent_x11_caught_error		57193						
ANR	57214	Symbol	display		57193						
ANR	57215	Symbol	error		57193						
ANR	57216	Function	mode_from_id	45:0:1260:1520							
ANR	57217	FunctionDef	"mode_from_id (struct vdagent_x11 * x11 , int id)"		57216	0					
ANR	57218	CompoundStatement		46:0:1326:1520	57216	0					
ANR	57219	IdentifierDeclStatement	int i ;	47:4:1332:1337	57216	0	True				
ANR	57220	IdentifierDecl	i		57216	0					
ANR	57221	IdentifierDeclType	int		57216	0					
ANR	57222	Identifier	i		57216	1					
ANR	57223	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> nmode ; ++ i )		57216	1					
ANR	57224	ForInit	i = 0 ;	49:9:1349:1355	57216	0	True				
ANR	57225	AssignmentExpression	i = 0		57216	0		=			
ANR	57226	Identifier	i		57216	0					
ANR	57227	PrimaryExpression	0		57216	1					
ANR	57228	Condition	i < x11 -> randr . res -> nmode	49:17:1357:1381	57216	1	True				
ANR	57229	RelationalExpression	i < x11 -> randr . res -> nmode		57216	0		<			
ANR	57230	Identifier	i		57216	0					
ANR	57231	PtrMemberAccess	x11 -> randr . res -> nmode		57216	1					
ANR	57232	MemberAccess	x11 -> randr . res		57216	0					
ANR	57233	PtrMemberAccess	x11 -> randr		57216	0					
ANR	57234	Identifier	x11		57216	0					
ANR	57235	Identifier	randr		57216	1					
ANR	57236	Identifier	res		57216	1					
ANR	57237	Identifier	nmode		57216	1					
ANR	57238	UnaryExpression	++ i	49:45:1385:1387	57216	2	True				
ANR	57239	IncDec	++		57216	0					
ANR	57240	Identifier	i		57216	1					
ANR	57241	CompoundStatement		4:50:63:63	57216	3					
ANR	57242	IfStatement	if ( id == x11 -> randr . res -> modes [ i ] . id )		57216	0					
ANR	57243	Condition	id == x11 -> randr . res -> modes [ i ] . id	50:12:1404:1436	57216	0	True				
ANR	57244	EqualityExpression	id == x11 -> randr . res -> modes [ i ] . id		57216	0		==			
ANR	57245	Identifier	id		57216	0					
ANR	57246	MemberAccess	x11 -> randr . res -> modes [ i ] . id		57216	1					
ANR	57247	ArrayIndexing	x11 -> randr . res -> modes [ i ]		57216	0					
ANR	57248	PtrMemberAccess	x11 -> randr . res -> modes		57216	0					
ANR	57249	MemberAccess	x11 -> randr . res		57216	0					
ANR	57250	PtrMemberAccess	x11 -> randr		57216	0					
ANR	57251	Identifier	x11		57216	0					
ANR	57252	Identifier	randr		57216	1					
ANR	57253	Identifier	res		57216	1					
ANR	57254	Identifier	modes		57216	1					
ANR	57255	Identifier	i		57216	1					
ANR	57256	Identifier	id		57216	1					
ANR	57257	CompoundStatement		5:47:112:112	57216	1					
ANR	57258	ReturnStatement	return & x11 -> randr . res -> modes [ i ] ;	51:12:1453:1485	57216	0	True				
ANR	57259	UnaryOperationExpression	& x11 -> randr . res -> modes [ i ]		57216	0					
ANR	57260	UnaryOperator	&		57216	0					
ANR	57261	ArrayIndexing	x11 -> randr . res -> modes [ i ]		57216	1					
ANR	57262	PtrMemberAccess	x11 -> randr . res -> modes		57216	0					
ANR	57263	MemberAccess	x11 -> randr . res		57216	0					
ANR	57264	PtrMemberAccess	x11 -> randr		57216	0					
ANR	57265	Identifier	x11		57216	0					
ANR	57266	Identifier	randr		57216	1					
ANR	57267	Identifier	res		57216	1					
ANR	57268	Identifier	modes		57216	1					
ANR	57269	Identifier	i		57216	1					
ANR	57270	ReturnStatement	return NULL ;	54:4:1507:1518	57216	2	True				
ANR	57271	Identifier	NULL		57216	0					
ANR	57272	ReturnType	static XRRModeInfo *		57216	1					
ANR	57273	Identifier	mode_from_id		57216	2					
ANR	57274	ParameterList	"struct vdagent_x11 * x11 , int id"		57216	3					
ANR	57275	Parameter	struct vdagent_x11 * x11	45:33:1293:1315	57216	0	True				
ANR	57276	ParameterType	struct vdagent_x11 *		57216	0					
ANR	57277	Identifier	x11		57216	1					
ANR	57278	Parameter	int id	45:58:1318:1323	57216	1	True				
ANR	57279	ParameterType	int		57216	0					
ANR	57280	Identifier	id		57216	1					
ANR	57281	CFGEntryNode	ENTRY		57216		True				
ANR	57282	CFGExitNode	EXIT		57216		True				
ANR	57283	Symbol	* x11		57216						
ANR	57284	Symbol	NULL		57216						
ANR	57285	Symbol	x11 -> randr		57216						
ANR	57286	Symbol	x11 -> randr . res -> modes [ i ] . id		57216						
ANR	57287	Symbol	i		57216						
ANR	57288	Symbol	* * x11		57216						
ANR	57289	Symbol	* x11 -> randr . res		57216						
ANR	57290	Symbol	x11 -> randr . res -> nmode		57216						
ANR	57291	Symbol	* x11 -> randr		57216						
ANR	57292	Symbol	* i		57216						
ANR	57293	Symbol	* * * x11		57216						
ANR	57294	Symbol	* * x11 -> randr . res		57216						
ANR	57295	Symbol	* x11 -> randr . res -> modes		57216						
ANR	57296	Symbol	x11		57216						
ANR	57297	Symbol	x11 -> randr . res		57216						
ANR	57298	Symbol	id		57216						
ANR	57299	Symbol	* * x11 -> randr		57216						
ANR	57300	Symbol	x11 -> randr . res -> modes		57216						
ANR	57301	Function	crtc_from_id	57:0:1523:1774							
ANR	57302	FunctionDef	"crtc_from_id (struct vdagent_x11 * x11 , int id)"		57301	0					
ANR	57303	CompoundStatement		58:0:1589:1774	57301	0					
ANR	57304	IdentifierDeclStatement	int i ;	59:4:1595:1600	57301	0	True				
ANR	57305	IdentifierDecl	i		57301	0					
ANR	57306	IdentifierDeclType	int		57301	0					
ANR	57307	Identifier	i		57301	1					
ANR	57308	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> ncrtc ; ++ i )		57301	1					
ANR	57309	ForInit	i = 0 ;	61:9:1612:1618	57301	0	True				
ANR	57310	AssignmentExpression	i = 0		57301	0		=			
ANR	57311	Identifier	i		57301	0					
ANR	57312	PrimaryExpression	0		57301	1					
ANR	57313	Condition	i < x11 -> randr . res -> ncrtc	61:17:1620:1644	57301	1	True				
ANR	57314	RelationalExpression	i < x11 -> randr . res -> ncrtc		57301	0		<			
ANR	57315	Identifier	i		57301	0					
ANR	57316	PtrMemberAccess	x11 -> randr . res -> ncrtc		57301	1					
ANR	57317	MemberAccess	x11 -> randr . res		57301	0					
ANR	57318	PtrMemberAccess	x11 -> randr		57301	0					
ANR	57319	Identifier	x11		57301	0					
ANR	57320	Identifier	randr		57301	1					
ANR	57321	Identifier	res		57301	1					
ANR	57322	Identifier	ncrtc		57301	1					
ANR	57323	UnaryExpression	++ i	61:45:1648:1650	57301	2	True				
ANR	57324	IncDec	++		57301	0					
ANR	57325	Identifier	i		57301	1					
ANR	57326	CompoundStatement		4:50:63:63	57301	3					
ANR	57327	IfStatement	if ( id == x11 -> randr . res -> crtcs [ i ] )		57301	0					
ANR	57328	Condition	id == x11 -> randr . res -> crtcs [ i ]	62:12:1667:1696	57301	0	True				
ANR	57329	EqualityExpression	id == x11 -> randr . res -> crtcs [ i ]		57301	0		==			
ANR	57330	Identifier	id		57301	0					
ANR	57331	ArrayIndexing	x11 -> randr . res -> crtcs [ i ]		57301	1					
ANR	57332	PtrMemberAccess	x11 -> randr . res -> crtcs		57301	0					
ANR	57333	MemberAccess	x11 -> randr . res		57301	0					
ANR	57334	PtrMemberAccess	x11 -> randr		57301	0					
ANR	57335	Identifier	x11		57301	0					
ANR	57336	Identifier	randr		57301	1					
ANR	57337	Identifier	res		57301	1					
ANR	57338	Identifier	crtcs		57301	1					
ANR	57339	Identifier	i		57301	1					
ANR	57340	CompoundStatement		5:44:109:109	57301	1					
ANR	57341	ReturnStatement	return x11 -> randr . crtcs [ i ] ;	63:12:1713:1739	57301	0	True				
ANR	57342	ArrayIndexing	x11 -> randr . crtcs [ i ]		57301	0					
ANR	57343	MemberAccess	x11 -> randr . crtcs		57301	0					
ANR	57344	PtrMemberAccess	x11 -> randr		57301	0					
ANR	57345	Identifier	x11		57301	0					
ANR	57346	Identifier	randr		57301	1					
ANR	57347	Identifier	crtcs		57301	1					
ANR	57348	Identifier	i		57301	1					
ANR	57349	ReturnStatement	return NULL ;	66:4:1761:1772	57301	2	True				
ANR	57350	Identifier	NULL		57301	0					
ANR	57351	ReturnType	static XRRCrtcInfo *		57301	1					
ANR	57352	Identifier	crtc_from_id		57301	2					
ANR	57353	ParameterList	"struct vdagent_x11 * x11 , int id"		57301	3					
ANR	57354	Parameter	struct vdagent_x11 * x11	57:33:1556:1578	57301	0	True				
ANR	57355	ParameterType	struct vdagent_x11 *		57301	0					
ANR	57356	Identifier	x11		57301	1					
ANR	57357	Parameter	int id	57:58:1581:1586	57301	1	True				
ANR	57358	ParameterType	int		57301	0					
ANR	57359	Identifier	id		57301	1					
ANR	57360	CFGEntryNode	ENTRY		57301		True				
ANR	57361	CFGExitNode	EXIT		57301		True				
ANR	57362	Symbol	* x11		57301						
ANR	57363	Symbol	NULL		57301						
ANR	57364	Symbol	x11 -> randr		57301						
ANR	57365	Symbol	x11 -> randr . crtcs		57301						
ANR	57366	Symbol	i		57301						
ANR	57367	Symbol	* * x11		57301						
ANR	57368	Symbol	* x11 -> randr . res		57301						
ANR	57369	Symbol	* x11 -> randr		57301						
ANR	57370	Symbol	* x11 -> randr . crtcs		57301						
ANR	57371	Symbol	x11 -> randr . res -> ncrtc		57301						
ANR	57372	Symbol	* i		57301						
ANR	57373	Symbol	x11 -> randr . res -> crtcs		57301						
ANR	57374	Symbol	* * * x11		57301						
ANR	57375	Symbol	* * x11 -> randr . res		57301						
ANR	57376	Symbol	x11		57301						
ANR	57377	Symbol	x11 -> randr . res		57301						
ANR	57378	Symbol	id		57301						
ANR	57379	Symbol	* * x11 -> randr		57301						
ANR	57380	Symbol	* x11 -> randr . res -> crtcs		57301						
ANR	57381	Function	free_randr_resources	69:0:1777:2450							
ANR	57382	FunctionDef	free_randr_resources (struct vdagent_x11 * x11)		57381	0					
ANR	57383	CompoundStatement		70:0:1835:2450	57381	0					
ANR	57384	IdentifierDeclStatement	int i ;	71:4:1841:1846	57381	0	True				
ANR	57385	IdentifierDecl	i		57381	0					
ANR	57386	IdentifierDeclType	int		57381	0					
ANR	57387	Identifier	i		57381	1					
ANR	57388	IfStatement	if ( ! x11 -> randr . res )		57381	1					
ANR	57389	Condition	! x11 -> randr . res	73:8:1857:1871	57381	0	True				
ANR	57390	UnaryOperationExpression	! x11 -> randr . res		57381	0					
ANR	57391	UnaryOperator	!		57381	0					
ANR	57392	MemberAccess	x11 -> randr . res		57381	1					
ANR	57393	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57394	Identifier	x11		57381	0					
ANR	57395	Identifier	randr		57381	1					
ANR	57396	Identifier	res		57381	1					
ANR	57397	CompoundStatement		4:25:38:38	57381	1					
ANR	57398	ReturnStatement	return ;	74:8:1884:1890	57381	0	True				
ANR	57399	IfStatement	if ( x11 -> randr . outputs != NULL )		57381	2					
ANR	57400	Condition	x11 -> randr . outputs != NULL	76:8:1906:1931	57381	0	True				
ANR	57401	EqualityExpression	x11 -> randr . outputs != NULL		57381	0		!=			
ANR	57402	MemberAccess	x11 -> randr . outputs		57381	0					
ANR	57403	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57404	Identifier	x11		57381	0					
ANR	57405	Identifier	randr		57381	1					
ANR	57406	Identifier	outputs		57381	1					
ANR	57407	Identifier	NULL		57381	1					
ANR	57408	CompoundStatement		7:36:98:98	57381	1					
ANR	57409	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> noutput ; ++ i )		57381	0					
ANR	57410	ForInit	i = 0 ;	77:13:1949:1955	57381	0	True				
ANR	57411	AssignmentExpression	i = 0		57381	0		=			
ANR	57412	Identifier	i		57381	0					
ANR	57413	PrimaryExpression	0		57381	1					
ANR	57414	Condition	i < x11 -> randr . res -> noutput	77:21:1957:1983	57381	1	True				
ANR	57415	RelationalExpression	i < x11 -> randr . res -> noutput		57381	0		<			
ANR	57416	Identifier	i		57381	0					
ANR	57417	PtrMemberAccess	x11 -> randr . res -> noutput		57381	1					
ANR	57418	MemberAccess	x11 -> randr . res		57381	0					
ANR	57419	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57420	Identifier	x11		57381	0					
ANR	57421	Identifier	randr		57381	1					
ANR	57422	Identifier	res		57381	1					
ANR	57423	Identifier	noutput		57381	1					
ANR	57424	UnaryExpression	++ i	77:50:1986:1988	57381	2	True				
ANR	57425	IncDec	++		57381	0					
ANR	57426	Identifier	i		57381	1					
ANR	57427	CompoundStatement		8:55:155:155	57381	3					
ANR	57428	ExpressionStatement	XRRFreeOutputInfo ( x11 -> randr . outputs [ i ] )	78:12:2005:2045	57381	0	True				
ANR	57429	CallExpression	XRRFreeOutputInfo ( x11 -> randr . outputs [ i ] )		57381	0					
ANR	57430	Callee	XRRFreeOutputInfo		57381	0					
ANR	57431	Identifier	XRRFreeOutputInfo		57381	0					
ANR	57432	ArgumentList	x11 -> randr . outputs [ i ]		57381	1					
ANR	57433	Argument	x11 -> randr . outputs [ i ]		57381	0					
ANR	57434	ArrayIndexing	x11 -> randr . outputs [ i ]		57381	0					
ANR	57435	MemberAccess	x11 -> randr . outputs		57381	0					
ANR	57436	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57437	Identifier	x11		57381	0					
ANR	57438	Identifier	randr		57381	1					
ANR	57439	Identifier	outputs		57381	1					
ANR	57440	Identifier	i		57381	1					
ANR	57441	ExpressionStatement	free ( x11 -> randr . outputs )	80:8:2065:2089	57381	1	True				
ANR	57442	CallExpression	free ( x11 -> randr . outputs )		57381	0					
ANR	57443	Callee	free		57381	0					
ANR	57444	Identifier	free		57381	0					
ANR	57445	ArgumentList	x11 -> randr . outputs		57381	1					
ANR	57446	Argument	x11 -> randr . outputs		57381	0					
ANR	57447	MemberAccess	x11 -> randr . outputs		57381	0					
ANR	57448	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57449	Identifier	x11		57381	0					
ANR	57450	Identifier	randr		57381	1					
ANR	57451	Identifier	outputs		57381	1					
ANR	57452	IfStatement	if ( x11 -> randr . crtcs != NULL )		57381	3					
ANR	57453	Condition	x11 -> randr . crtcs != NULL	82:8:2105:2128	57381	0	True				
ANR	57454	EqualityExpression	x11 -> randr . crtcs != NULL		57381	0		!=			
ANR	57455	MemberAccess	x11 -> randr . crtcs		57381	0					
ANR	57456	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57457	Identifier	x11		57381	0					
ANR	57458	Identifier	randr		57381	1					
ANR	57459	Identifier	crtcs		57381	1					
ANR	57460	Identifier	NULL		57381	1					
ANR	57461	CompoundStatement		13:34:295:295	57381	1					
ANR	57462	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> ncrtc ; ++ i )		57381	0					
ANR	57463	ForInit	i = 0 ;	83:13:2146:2152	57381	0	True				
ANR	57464	AssignmentExpression	i = 0		57381	0		=			
ANR	57465	Identifier	i		57381	0					
ANR	57466	PrimaryExpression	0		57381	1					
ANR	57467	Condition	i < x11 -> randr . res -> ncrtc	83:21:2154:2178	57381	1	True				
ANR	57468	RelationalExpression	i < x11 -> randr . res -> ncrtc		57381	0		<			
ANR	57469	Identifier	i		57381	0					
ANR	57470	PtrMemberAccess	x11 -> randr . res -> ncrtc		57381	1					
ANR	57471	MemberAccess	x11 -> randr . res		57381	0					
ANR	57472	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57473	Identifier	x11		57381	0					
ANR	57474	Identifier	randr		57381	1					
ANR	57475	Identifier	res		57381	1					
ANR	57476	Identifier	ncrtc		57381	1					
ANR	57477	UnaryExpression	++ i	83:48:2181:2183	57381	2	True				
ANR	57478	IncDec	++		57381	0					
ANR	57479	Identifier	i		57381	1					
ANR	57480	CompoundStatement		14:53:350:350	57381	3					
ANR	57481	ExpressionStatement	XRRFreeCrtcInfo ( x11 -> randr . crtcs [ i ] )	84:12:2200:2236	57381	0	True				
ANR	57482	CallExpression	XRRFreeCrtcInfo ( x11 -> randr . crtcs [ i ] )		57381	0					
ANR	57483	Callee	XRRFreeCrtcInfo		57381	0					
ANR	57484	Identifier	XRRFreeCrtcInfo		57381	0					
ANR	57485	ArgumentList	x11 -> randr . crtcs [ i ]		57381	1					
ANR	57486	Argument	x11 -> randr . crtcs [ i ]		57381	0					
ANR	57487	ArrayIndexing	x11 -> randr . crtcs [ i ]		57381	0					
ANR	57488	MemberAccess	x11 -> randr . crtcs		57381	0					
ANR	57489	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57490	Identifier	x11		57381	0					
ANR	57491	Identifier	randr		57381	1					
ANR	57492	Identifier	crtcs		57381	1					
ANR	57493	Identifier	i		57381	1					
ANR	57494	ExpressionStatement	free ( x11 -> randr . crtcs )	86:8:2256:2278	57381	1	True				
ANR	57495	CallExpression	free ( x11 -> randr . crtcs )		57381	0					
ANR	57496	Callee	free		57381	0					
ANR	57497	Identifier	free		57381	0					
ANR	57498	ArgumentList	x11 -> randr . crtcs		57381	1					
ANR	57499	Argument	x11 -> randr . crtcs		57381	0					
ANR	57500	MemberAccess	x11 -> randr . crtcs		57381	0					
ANR	57501	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57502	Identifier	x11		57381	0					
ANR	57503	Identifier	randr		57381	1					
ANR	57504	Identifier	crtcs		57381	1					
ANR	57505	ExpressionStatement	XRRFreeScreenResources ( x11 -> randr . res )	88:4:2290:2328	57381	4	True				
ANR	57506	CallExpression	XRRFreeScreenResources ( x11 -> randr . res )		57381	0					
ANR	57507	Callee	XRRFreeScreenResources		57381	0					
ANR	57508	Identifier	XRRFreeScreenResources		57381	0					
ANR	57509	ArgumentList	x11 -> randr . res		57381	1					
ANR	57510	Argument	x11 -> randr . res		57381	0					
ANR	57511	MemberAccess	x11 -> randr . res		57381	0					
ANR	57512	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57513	Identifier	x11		57381	0					
ANR	57514	Identifier	randr		57381	1					
ANR	57515	Identifier	res		57381	1					
ANR	57516	ExpressionStatement	x11 -> randr . res = NULL	89:4:2334:2355	57381	5	True				
ANR	57517	AssignmentExpression	x11 -> randr . res = NULL		57381	0		=			
ANR	57518	MemberAccess	x11 -> randr . res		57381	0					
ANR	57519	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57520	Identifier	x11		57381	0					
ANR	57521	Identifier	randr		57381	1					
ANR	57522	Identifier	res		57381	1					
ANR	57523	Identifier	NULL		57381	1					
ANR	57524	ExpressionStatement	x11 -> randr . outputs = NULL	90:4:2361:2386	57381	6	True				
ANR	57525	AssignmentExpression	x11 -> randr . outputs = NULL		57381	0		=			
ANR	57526	MemberAccess	x11 -> randr . outputs		57381	0					
ANR	57527	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57528	Identifier	x11		57381	0					
ANR	57529	Identifier	randr		57381	1					
ANR	57530	Identifier	outputs		57381	1					
ANR	57531	Identifier	NULL		57381	1					
ANR	57532	ExpressionStatement	x11 -> randr . crtcs = NULL	91:4:2392:2415	57381	7	True				
ANR	57533	AssignmentExpression	x11 -> randr . crtcs = NULL		57381	0		=			
ANR	57534	MemberAccess	x11 -> randr . crtcs		57381	0					
ANR	57535	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57536	Identifier	x11		57381	0					
ANR	57537	Identifier	randr		57381	1					
ANR	57538	Identifier	crtcs		57381	1					
ANR	57539	Identifier	NULL		57381	1					
ANR	57540	ExpressionStatement	x11 -> randr . num_monitors = 0	92:4:2421:2448	57381	8	True				
ANR	57541	AssignmentExpression	x11 -> randr . num_monitors = 0		57381	0		=			
ANR	57542	MemberAccess	x11 -> randr . num_monitors		57381	0					
ANR	57543	PtrMemberAccess	x11 -> randr		57381	0					
ANR	57544	Identifier	x11		57381	0					
ANR	57545	Identifier	randr		57381	1					
ANR	57546	Identifier	num_monitors		57381	1					
ANR	57547	PrimaryExpression	0		57381	1					
ANR	57548	ReturnType	static void		57381	1					
ANR	57549	Identifier	free_randr_resources		57381	2					
ANR	57550	ParameterList	struct vdagent_x11 * x11		57381	3					
ANR	57551	Parameter	struct vdagent_x11 * x11	69:33:1810:1832	57381	0	True				
ANR	57552	ParameterType	struct vdagent_x11 *		57381	0					
ANR	57553	Identifier	x11		57381	1					
ANR	57554	CFGEntryNode	ENTRY		57381		True				
ANR	57555	CFGExitNode	EXIT		57381		True				
ANR	57556	Symbol	* x11		57381						
ANR	57557	Symbol	NULL		57381						
ANR	57558	Symbol	x11 -> randr		57381						
ANR	57559	Symbol	x11 -> randr . crtcs		57381						
ANR	57560	Symbol	x11 -> randr . num_monitors		57381						
ANR	57561	Symbol	i		57381						
ANR	57562	Symbol	* x11 -> randr . res		57381						
ANR	57563	Symbol	* * x11		57381						
ANR	57564	Symbol	* x11 -> randr		57381						
ANR	57565	Symbol	* x11 -> randr . crtcs		57381						
ANR	57566	Symbol	x11 -> randr . res -> noutput		57381						
ANR	57567	Symbol	* x11 -> randr . outputs		57381						
ANR	57568	Symbol	x11 -> randr . res -> ncrtc		57381						
ANR	57569	Symbol	* i		57381						
ANR	57570	Symbol	x11		57381						
ANR	57571	Symbol	x11 -> randr . res		57381						
ANR	57572	Symbol	x11 -> randr . outputs		57381						
ANR	57573	Function	update_randr_res	95:0:2453:3869							
ANR	57574	FunctionDef	"update_randr_res (struct vdagent_x11 * x11 , int poll)"		57573	0					
ANR	57575	CompoundStatement		96:0:2517:3869	57573	0					
ANR	57576	IdentifierDeclStatement	int i ;	97:4:2523:2528	57573	0	True				
ANR	57577	IdentifierDecl	i		57573	0					
ANR	57578	IdentifierDeclType	int		57573	0					
ANR	57579	Identifier	i		57573	1					
ANR	57580	ExpressionStatement	free_randr_resources ( x11 )	99:4:2535:2560	57573	1	True				
ANR	57581	CallExpression	free_randr_resources ( x11 )		57573	0					
ANR	57582	Callee	free_randr_resources		57573	0					
ANR	57583	Identifier	free_randr_resources		57573	0					
ANR	57584	ArgumentList	x11		57573	1					
ANR	57585	Argument	x11		57573	0					
ANR	57586	Identifier	x11		57573	0					
ANR	57587	IfStatement	if ( poll )		57573	2					
ANR	57588	Condition	poll	100:8:2570:2573	57573	0	True				
ANR	57589	Identifier	poll		57573	0					
ANR	57590	ExpressionStatement	"x11 -> randr . res = XRRGetScreenResources ( x11 -> display , x11 -> root_window [ 0 ] )"	101:8:2584:2657	57573	1	True				
ANR	57591	AssignmentExpression	"x11 -> randr . res = XRRGetScreenResources ( x11 -> display , x11 -> root_window [ 0 ] )"		57573	0		=			
ANR	57592	MemberAccess	x11 -> randr . res		57573	0					
ANR	57593	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57594	Identifier	x11		57573	0					
ANR	57595	Identifier	randr		57573	1					
ANR	57596	Identifier	res		57573	1					
ANR	57597	CallExpression	"XRRGetScreenResources ( x11 -> display , x11 -> root_window [ 0 ] )"		57573	1					
ANR	57598	Callee	XRRGetScreenResources		57573	0					
ANR	57599	Identifier	XRRGetScreenResources		57573	0					
ANR	57600	ArgumentList	x11 -> display		57573	1					
ANR	57601	Argument	x11 -> display		57573	0					
ANR	57602	PtrMemberAccess	x11 -> display		57573	0					
ANR	57603	Identifier	x11		57573	0					
ANR	57604	Identifier	display		57573	1					
ANR	57605	Argument	x11 -> root_window [ 0 ]		57573	1					
ANR	57606	ArrayIndexing	x11 -> root_window [ 0 ]		57573	0					
ANR	57607	PtrMemberAccess	x11 -> root_window		57573	0					
ANR	57608	Identifier	x11		57573	0					
ANR	57609	Identifier	root_window		57573	1					
ANR	57610	PrimaryExpression	0		57573	1					
ANR	57611	ElseStatement	else		57573	0					
ANR	57612	ExpressionStatement	"x11 -> randr . res = XRRGetScreenResourcesCurrent ( x11 -> display , x11 -> root_window [ 0 ] )"	103:8:2676:2756	57573	0	True				
ANR	57613	AssignmentExpression	"x11 -> randr . res = XRRGetScreenResourcesCurrent ( x11 -> display , x11 -> root_window [ 0 ] )"		57573	0		=			
ANR	57614	MemberAccess	x11 -> randr . res		57573	0					
ANR	57615	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57616	Identifier	x11		57573	0					
ANR	57617	Identifier	randr		57573	1					
ANR	57618	Identifier	res		57573	1					
ANR	57619	CallExpression	"XRRGetScreenResourcesCurrent ( x11 -> display , x11 -> root_window [ 0 ] )"		57573	1					
ANR	57620	Callee	XRRGetScreenResourcesCurrent		57573	0					
ANR	57621	Identifier	XRRGetScreenResourcesCurrent		57573	0					
ANR	57622	ArgumentList	x11 -> display		57573	1					
ANR	57623	Argument	x11 -> display		57573	0					
ANR	57624	PtrMemberAccess	x11 -> display		57573	0					
ANR	57625	Identifier	x11		57573	0					
ANR	57626	Identifier	display		57573	1					
ANR	57627	Argument	x11 -> root_window [ 0 ]		57573	1					
ANR	57628	ArrayIndexing	x11 -> root_window [ 0 ]		57573	0					
ANR	57629	PtrMemberAccess	x11 -> root_window		57573	0					
ANR	57630	Identifier	x11		57573	0					
ANR	57631	Identifier	root_window		57573	1					
ANR	57632	PrimaryExpression	0		57573	1					
ANR	57633	ExpressionStatement	x11 -> randr . outputs = malloc ( x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs ) )	104:4:2762:2844	57573	3	True				
ANR	57634	AssignmentExpression	x11 -> randr . outputs = malloc ( x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs ) )		57573	0		=			
ANR	57635	MemberAccess	x11 -> randr . outputs		57573	0					
ANR	57636	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57637	Identifier	x11		57573	0					
ANR	57638	Identifier	randr		57573	1					
ANR	57639	Identifier	outputs		57573	1					
ANR	57640	CallExpression	malloc ( x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs ) )		57573	1					
ANR	57641	Callee	malloc		57573	0					
ANR	57642	Identifier	malloc		57573	0					
ANR	57643	ArgumentList	x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs )		57573	1					
ANR	57644	Argument	x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs )		57573	0					
ANR	57645	MultiplicativeExpression	x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs )		57573	0		*			
ANR	57646	PtrMemberAccess	x11 -> randr . res -> noutput		57573	0					
ANR	57647	MemberAccess	x11 -> randr . res		57573	0					
ANR	57648	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57649	Identifier	x11		57573	0					
ANR	57650	Identifier	randr		57573	1					
ANR	57651	Identifier	res		57573	1					
ANR	57652	Identifier	noutput		57573	1					
ANR	57653	SizeofExpression	sizeof ( * x11 -> randr . outputs )		57573	1					
ANR	57654	Sizeof	sizeof		57573	0					
ANR	57655	UnaryOperationExpression	* x11 -> randr . outputs		57573	1					
ANR	57656	UnaryOperator	*		57573	0					
ANR	57657	MemberAccess	x11 -> randr . outputs		57573	1					
ANR	57658	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57659	Identifier	x11		57573	0					
ANR	57660	Identifier	randr		57573	1					
ANR	57661	Identifier	outputs		57573	1					
ANR	57662	ExpressionStatement	x11 -> randr . crtcs = malloc ( x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs ) )	105:4:2850:2926	57573	4	True				
ANR	57663	AssignmentExpression	x11 -> randr . crtcs = malloc ( x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs ) )		57573	0		=			
ANR	57664	MemberAccess	x11 -> randr . crtcs		57573	0					
ANR	57665	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57666	Identifier	x11		57573	0					
ANR	57667	Identifier	randr		57573	1					
ANR	57668	Identifier	crtcs		57573	1					
ANR	57669	CallExpression	malloc ( x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs ) )		57573	1					
ANR	57670	Callee	malloc		57573	0					
ANR	57671	Identifier	malloc		57573	0					
ANR	57672	ArgumentList	x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs )		57573	1					
ANR	57673	Argument	x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs )		57573	0					
ANR	57674	MultiplicativeExpression	x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs )		57573	0		*			
ANR	57675	PtrMemberAccess	x11 -> randr . res -> ncrtc		57573	0					
ANR	57676	MemberAccess	x11 -> randr . res		57573	0					
ANR	57677	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57678	Identifier	x11		57573	0					
ANR	57679	Identifier	randr		57573	1					
ANR	57680	Identifier	res		57573	1					
ANR	57681	Identifier	ncrtc		57573	1					
ANR	57682	SizeofExpression	sizeof ( * x11 -> randr . crtcs )		57573	1					
ANR	57683	Sizeof	sizeof		57573	0					
ANR	57684	UnaryOperationExpression	* x11 -> randr . crtcs		57573	1					
ANR	57685	UnaryOperator	*		57573	0					
ANR	57686	MemberAccess	x11 -> randr . crtcs		57573	1					
ANR	57687	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57688	Identifier	x11		57573	0					
ANR	57689	Identifier	randr		57573	1					
ANR	57690	Identifier	crtcs		57573	1					
ANR	57691	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> noutput ; ++ i )		57573	5					
ANR	57692	ForInit	i = 0 ;	106:9:2937:2943	57573	0	True				
ANR	57693	AssignmentExpression	i = 0		57573	0		=			
ANR	57694	Identifier	i		57573	0					
ANR	57695	PrimaryExpression	0		57573	1					
ANR	57696	Condition	i < x11 -> randr . res -> noutput	106:17:2945:2971	57573	1	True				
ANR	57697	RelationalExpression	i < x11 -> randr . res -> noutput		57573	0		<			
ANR	57698	Identifier	i		57573	0					
ANR	57699	PtrMemberAccess	x11 -> randr . res -> noutput		57573	1					
ANR	57700	MemberAccess	x11 -> randr . res		57573	0					
ANR	57701	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57702	Identifier	x11		57573	0					
ANR	57703	Identifier	randr		57573	1					
ANR	57704	Identifier	res		57573	1					
ANR	57705	Identifier	noutput		57573	1					
ANR	57706	UnaryExpression	++ i	106:46:2974:2976	57573	2	True				
ANR	57707	IncDec	++		57573	0					
ANR	57708	Identifier	i		57573	1					
ANR	57709	CompoundStatement		11:51:461:461	57573	3					
ANR	57710	ExpressionStatement	"x11 -> randr . outputs [ i ] = XRRGetOutputInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> outputs [ i ] )"	107:8:2989:3136	57573	0	True				
ANR	57711	AssignmentExpression	"x11 -> randr . outputs [ i ] = XRRGetOutputInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> outputs [ i ] )"		57573	0		=			
ANR	57712	ArrayIndexing	x11 -> randr . outputs [ i ]		57573	0					
ANR	57713	MemberAccess	x11 -> randr . outputs		57573	0					
ANR	57714	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57715	Identifier	x11		57573	0					
ANR	57716	Identifier	randr		57573	1					
ANR	57717	Identifier	outputs		57573	1					
ANR	57718	Identifier	i		57573	1					
ANR	57719	CallExpression	"XRRGetOutputInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> outputs [ i ] )"		57573	1					
ANR	57720	Callee	XRRGetOutputInfo		57573	0					
ANR	57721	Identifier	XRRGetOutputInfo		57573	0					
ANR	57722	ArgumentList	x11 -> display		57573	1					
ANR	57723	Argument	x11 -> display		57573	0					
ANR	57724	PtrMemberAccess	x11 -> display		57573	0					
ANR	57725	Identifier	x11		57573	0					
ANR	57726	Identifier	display		57573	1					
ANR	57727	Argument	x11 -> randr . res		57573	1					
ANR	57728	MemberAccess	x11 -> randr . res		57573	0					
ANR	57729	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57730	Identifier	x11		57573	0					
ANR	57731	Identifier	randr		57573	1					
ANR	57732	Identifier	res		57573	1					
ANR	57733	Argument	x11 -> randr . res -> outputs [ i ]		57573	2					
ANR	57734	ArrayIndexing	x11 -> randr . res -> outputs [ i ]		57573	0					
ANR	57735	PtrMemberAccess	x11 -> randr . res -> outputs		57573	0					
ANR	57736	MemberAccess	x11 -> randr . res		57573	0					
ANR	57737	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57738	Identifier	x11		57573	0					
ANR	57739	Identifier	randr		57573	1					
ANR	57740	Identifier	res		57573	1					
ANR	57741	Identifier	outputs		57573	1					
ANR	57742	Identifier	i		57573	1					
ANR	57743	IfStatement	if ( x11 -> randr . outputs [ i ] -> connection == RR_Connected )		57573	1					
ANR	57744	Condition	x11 -> randr . outputs [ i ] -> connection == RR_Connected	109:12:3150:3198	57573	0	True				
ANR	57745	EqualityExpression	x11 -> randr . outputs [ i ] -> connection == RR_Connected		57573	0		==			
ANR	57746	PtrMemberAccess	x11 -> randr . outputs [ i ] -> connection		57573	0					
ANR	57747	ArrayIndexing	x11 -> randr . outputs [ i ]		57573	0					
ANR	57748	MemberAccess	x11 -> randr . outputs		57573	0					
ANR	57749	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57750	Identifier	x11		57573	0					
ANR	57751	Identifier	randr		57573	1					
ANR	57752	Identifier	outputs		57573	1					
ANR	57753	Identifier	i		57573	1					
ANR	57754	Identifier	connection		57573	1					
ANR	57755	Identifier	RR_Connected		57573	1					
ANR	57756	ExpressionStatement	x11 -> randr . num_monitors ++	110:12:3213:3238	57573	1	True				
ANR	57757	PostIncDecOperationExpression	x11 -> randr . num_monitors ++		57573	0					
ANR	57758	MemberAccess	x11 -> randr . num_monitors		57573	0					
ANR	57759	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57760	Identifier	x11		57573	0					
ANR	57761	Identifier	randr		57573	1					
ANR	57762	Identifier	num_monitors		57573	1					
ANR	57763	IncDec	++		57573	1					
ANR	57764	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> ncrtc ; ++ i )		57573	6					
ANR	57765	ForInit	i = 0 ;	112:9:3255:3261	57573	0	True				
ANR	57766	AssignmentExpression	i = 0		57573	0		=			
ANR	57767	Identifier	i		57573	0					
ANR	57768	PrimaryExpression	0		57573	1					
ANR	57769	Condition	i < x11 -> randr . res -> ncrtc	112:17:3263:3287	57573	1	True				
ANR	57770	RelationalExpression	i < x11 -> randr . res -> ncrtc		57573	0		<			
ANR	57771	Identifier	i		57573	0					
ANR	57772	PtrMemberAccess	x11 -> randr . res -> ncrtc		57573	1					
ANR	57773	MemberAccess	x11 -> randr . res		57573	0					
ANR	57774	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57775	Identifier	x11		57573	0					
ANR	57776	Identifier	randr		57573	1					
ANR	57777	Identifier	res		57573	1					
ANR	57778	Identifier	ncrtc		57573	1					
ANR	57779	UnaryExpression	++ i	112:44:3290:3292	57573	2	True				
ANR	57780	IncDec	++		57573	0					
ANR	57781	Identifier	i		57573	1					
ANR	57782	CompoundStatement		17:49:777:777	57573	3					
ANR	57783	ExpressionStatement	"x11 -> randr . crtcs [ i ] = XRRGetCrtcInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ i ] )"	113:8:3305:3442	57573	0	True				
ANR	57784	AssignmentExpression	"x11 -> randr . crtcs [ i ] = XRRGetCrtcInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ i ] )"		57573	0		=			
ANR	57785	ArrayIndexing	x11 -> randr . crtcs [ i ]		57573	0					
ANR	57786	MemberAccess	x11 -> randr . crtcs		57573	0					
ANR	57787	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57788	Identifier	x11		57573	0					
ANR	57789	Identifier	randr		57573	1					
ANR	57790	Identifier	crtcs		57573	1					
ANR	57791	Identifier	i		57573	1					
ANR	57792	CallExpression	"XRRGetCrtcInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ i ] )"		57573	1					
ANR	57793	Callee	XRRGetCrtcInfo		57573	0					
ANR	57794	Identifier	XRRGetCrtcInfo		57573	0					
ANR	57795	ArgumentList	x11 -> display		57573	1					
ANR	57796	Argument	x11 -> display		57573	0					
ANR	57797	PtrMemberAccess	x11 -> display		57573	0					
ANR	57798	Identifier	x11		57573	0					
ANR	57799	Identifier	display		57573	1					
ANR	57800	Argument	x11 -> randr . res		57573	1					
ANR	57801	MemberAccess	x11 -> randr . res		57573	0					
ANR	57802	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57803	Identifier	x11		57573	0					
ANR	57804	Identifier	randr		57573	1					
ANR	57805	Identifier	res		57573	1					
ANR	57806	Argument	x11 -> randr . res -> crtcs [ i ]		57573	2					
ANR	57807	ArrayIndexing	x11 -> randr . res -> crtcs [ i ]		57573	0					
ANR	57808	PtrMemberAccess	x11 -> randr . res -> crtcs		57573	0					
ANR	57809	MemberAccess	x11 -> randr . res		57573	0					
ANR	57810	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57811	Identifier	x11		57573	0					
ANR	57812	Identifier	randr		57573	1					
ANR	57813	Identifier	res		57573	1					
ANR	57814	Identifier	crtcs		57573	1					
ANR	57815	Identifier	i		57573	1					
ANR	57816	IfStatement	"if ( XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height ) != 1 )"		57573	7					
ANR	57817	Condition	"XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height ) != 1"	117:8:3510:3784	57573	0	True				
ANR	57818	EqualityExpression	"XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height ) != 1"		57573	0		!=			
ANR	57819	CallExpression	"XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height )"		57573	0					
ANR	57820	Callee	XRRGetScreenSizeRange		57573	0					
ANR	57821	Identifier	XRRGetScreenSizeRange		57573	0					
ANR	57822	ArgumentList	x11 -> display		57573	1					
ANR	57823	Argument	x11 -> display		57573	0					
ANR	57824	PtrMemberAccess	x11 -> display		57573	0					
ANR	57825	Identifier	x11		57573	0					
ANR	57826	Identifier	display		57573	1					
ANR	57827	Argument	x11 -> root_window [ 0 ]		57573	1					
ANR	57828	ArrayIndexing	x11 -> root_window [ 0 ]		57573	0					
ANR	57829	PtrMemberAccess	x11 -> root_window		57573	0					
ANR	57830	Identifier	x11		57573	0					
ANR	57831	Identifier	root_window		57573	1					
ANR	57832	PrimaryExpression	0		57573	1					
ANR	57833	Argument	& x11 -> randr . min_width		57573	2					
ANR	57834	UnaryOperationExpression	& x11 -> randr . min_width		57573	0					
ANR	57835	UnaryOperator	&		57573	0					
ANR	57836	MemberAccess	x11 -> randr . min_width		57573	1					
ANR	57837	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57838	Identifier	x11		57573	0					
ANR	57839	Identifier	randr		57573	1					
ANR	57840	Identifier	min_width		57573	1					
ANR	57841	Argument	& x11 -> randr . min_height		57573	3					
ANR	57842	UnaryOperationExpression	& x11 -> randr . min_height		57573	0					
ANR	57843	UnaryOperator	&		57573	0					
ANR	57844	MemberAccess	x11 -> randr . min_height		57573	1					
ANR	57845	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57846	Identifier	x11		57573	0					
ANR	57847	Identifier	randr		57573	1					
ANR	57848	Identifier	min_height		57573	1					
ANR	57849	Argument	& x11 -> randr . max_width		57573	4					
ANR	57850	UnaryOperationExpression	& x11 -> randr . max_width		57573	0					
ANR	57851	UnaryOperator	&		57573	0					
ANR	57852	MemberAccess	x11 -> randr . max_width		57573	1					
ANR	57853	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57854	Identifier	x11		57573	0					
ANR	57855	Identifier	randr		57573	1					
ANR	57856	Identifier	max_width		57573	1					
ANR	57857	Argument	& x11 -> randr . max_height		57573	5					
ANR	57858	UnaryOperationExpression	& x11 -> randr . max_height		57573	0					
ANR	57859	UnaryOperator	&		57573	0					
ANR	57860	MemberAccess	x11 -> randr . max_height		57573	1					
ANR	57861	PtrMemberAccess	x11 -> randr		57573	0					
ANR	57862	Identifier	x11		57573	0					
ANR	57863	Identifier	randr		57573	1					
ANR	57864	Identifier	max_height		57573	1					
ANR	57865	PrimaryExpression	1		57573	1					
ANR	57866	CompoundStatement		26:60:1269:1269	57573	1					
ANR	57867	ExpressionStatement	"syslog ( LOG_ERR , ""update_randr_res: RRGetScreenSizeRange failed"" )"	122:8:3797:3861	57573	0	True				
ANR	57868	CallExpression	"syslog ( LOG_ERR , ""update_randr_res: RRGetScreenSizeRange failed"" )"		57573	0					
ANR	57869	Callee	syslog		57573	0					
ANR	57870	Identifier	syslog		57573	0					
ANR	57871	ArgumentList	LOG_ERR		57573	1					
ANR	57872	Argument	LOG_ERR		57573	0					
ANR	57873	Identifier	LOG_ERR		57573	0					
ANR	57874	Argument	"""update_randr_res: RRGetScreenSizeRange failed"""		57573	1					
ANR	57875	PrimaryExpression	"""update_randr_res: RRGetScreenSizeRange failed"""		57573	0					
ANR	57876	ReturnType	static void		57573	1					
ANR	57877	Identifier	update_randr_res		57573	2					
ANR	57878	ParameterList	"struct vdagent_x11 * x11 , int poll"		57573	3					
ANR	57879	Parameter	struct vdagent_x11 * x11	95:29:2482:2504	57573	0	True				
ANR	57880	ParameterType	struct vdagent_x11 *		57573	0					
ANR	57881	Identifier	x11		57573	1					
ANR	57882	Parameter	int poll	95:54:2507:2514	57573	1	True				
ANR	57883	ParameterType	int		57573	0					
ANR	57884	Identifier	poll		57573	1					
ANR	57885	CFGEntryNode	ENTRY		57573		True				
ANR	57886	CFGExitNode	EXIT		57573		True				
ANR	57887	Symbol	* x11 -> randr . res -> outputs		57573						
ANR	57888	Symbol	* x11		57573						
ANR	57889	Symbol	x11 -> randr		57573						
ANR	57890	Symbol	x11 -> randr . crtcs		57573						
ANR	57891	Symbol	x11 -> randr . num_monitors		57573						
ANR	57892	Symbol	& x11 -> randr . max_width		57573						
ANR	57893	Symbol	poll		57573						
ANR	57894	Symbol	x11 -> root_window		57573						
ANR	57895	Symbol	* x11 -> randr . res		57573						
ANR	57896	Symbol	* x11 -> randr . outputs		57573						
ANR	57897	Symbol	x11 -> randr . res -> noutput		57573						
ANR	57898	Symbol	* * x11 -> randr . outputs		57573						
ANR	57899	Symbol	* * x11 -> randr . res		57573						
ANR	57900	Symbol	* * * x11		57573						
ANR	57901	Symbol	LOG_ERR		57573						
ANR	57902	Symbol	* x11 -> root_window		57573						
ANR	57903	Symbol	x11		57573						
ANR	57904	Symbol	& x11 -> randr . min_width		57573						
ANR	57905	Symbol	& x11 -> randr		57573						
ANR	57906	Symbol	* * x11 -> randr		57573						
ANR	57907	Symbol	x11 -> randr . res -> outputs		57573						
ANR	57908	Symbol	& x11 -> randr . min_height		57573						
ANR	57909	Symbol	malloc		57573						
ANR	57910	Symbol	* * i		57573						
ANR	57911	Symbol	XRRGetScreenResourcesCurrent		57573						
ANR	57912	Symbol	i		57573						
ANR	57913	Symbol	XRRGetOutputInfo		57573						
ANR	57914	Symbol	XRRGetCrtcInfo		57573						
ANR	57915	Symbol	XRRGetScreenResources		57573						
ANR	57916	Symbol	* * x11		57573						
ANR	57917	Symbol	* x11 -> randr		57573						
ANR	57918	Symbol	* x11 -> randr . crtcs		57573						
ANR	57919	Symbol	x11 -> randr . outputs [ i ] -> connection		57573						
ANR	57920	Symbol	x11 -> randr . res -> ncrtc		57573						
ANR	57921	Symbol	XRRGetScreenSizeRange		57573						
ANR	57922	Symbol	x11 -> display		57573						
ANR	57923	Symbol	* i		57573						
ANR	57924	Symbol	& x11 -> randr . max_height		57573						
ANR	57925	Symbol	x11 -> randr . res -> crtcs		57573						
ANR	57926	Symbol	x11 -> randr . res		57573						
ANR	57927	Symbol	x11 -> randr . outputs		57573						
ANR	57928	Symbol	RR_Connected		57573						
ANR	57929	Symbol	* x11 -> randr . res -> crtcs		57573						
ANR	57930	Function	vdagent_x11_randr_init	126:0:3872:5223							
ANR	57931	FunctionDef	vdagent_x11_randr_init (struct vdagent_x11 * x11)		57930	0					
ANR	57932	CompoundStatement		127:0:3925:5223	57930	0					
ANR	57933	IdentifierDeclStatement	int i ;	128:4:3931:3936	57930	0	True				
ANR	57934	IdentifierDecl	i		57930	0					
ANR	57935	IdentifierDeclType	int		57930	0					
ANR	57936	Identifier	i		57930	1					
ANR	57937	IfStatement	if ( x11 -> screen_count > 1 )		57930	1					
ANR	57938	Condition	x11 -> screen_count > 1	130:8:3947:3967	57930	0	True				
ANR	57939	RelationalExpression	x11 -> screen_count > 1		57930	0		>			
ANR	57940	PtrMemberAccess	x11 -> screen_count		57930	0					
ANR	57941	Identifier	x11		57930	0					
ANR	57942	Identifier	screen_count		57930	1					
ANR	57943	PrimaryExpression	1		57930	1					
ANR	57944	CompoundStatement		4:31:44:44	57930	1					
ANR	57945	Statement	syslog	131:8:3980:3985	57930	0	True				
ANR	57946	Statement	(	131:14:3986:3986	57930	1	True				
ANR	57947	Statement	LOG_WARNING	131:15:3987:3997	57930	2	True				
ANR	57948	Statement	","	131:26:3998:3998	57930	3	True				
ANR	57949	Statement	"""X-server has more than 1 screen, """	131:28:4000:4034	57930	4	True				
ANR	57950	Statement	"""disabling client -> guest resolution syncing"""	132:15:4051:4096	57930	5	True				
ANR	57951	Statement	)	132:61:4097:4097	57930	6	True				
ANR	57952	ExpressionStatement		132:62:4098:4098	57930	7	True				
ANR	57953	ReturnStatement	return ;	133:8:4108:4114	57930	8	True				
ANR	57954	IfStatement	"if ( XRRQueryExtension ( x11 -> display , & x11 -> xrandr_event_base , & i ) )"		57930	2					
ANR	57955	Condition	"XRRQueryExtension ( x11 -> display , & x11 -> xrandr_event_base , & i )"	136:8:4131:4190	57930	0	True				
ANR	57956	CallExpression	"XRRQueryExtension ( x11 -> display , & x11 -> xrandr_event_base , & i )"		57930	0					
ANR	57957	Callee	XRRQueryExtension		57930	0					
ANR	57958	Identifier	XRRQueryExtension		57930	0					
ANR	57959	ArgumentList	x11 -> display		57930	1					
ANR	57960	Argument	x11 -> display		57930	0					
ANR	57961	PtrMemberAccess	x11 -> display		57930	0					
ANR	57962	Identifier	x11		57930	0					
ANR	57963	Identifier	display		57930	1					
ANR	57964	Argument	& x11 -> xrandr_event_base		57930	1					
ANR	57965	UnaryOperationExpression	& x11 -> xrandr_event_base		57930	0					
ANR	57966	UnaryOperator	&		57930	0					
ANR	57967	PtrMemberAccess	x11 -> xrandr_event_base		57930	1					
ANR	57968	Identifier	x11		57930	0					
ANR	57969	Identifier	xrandr_event_base		57930	1					
ANR	57970	Argument	& i		57930	2					
ANR	57971	UnaryOperationExpression	& i		57930	0					
ANR	57972	UnaryOperator	&		57930	0					
ANR	57973	Identifier	i		57930	1					
ANR	57974	CompoundStatement		10:70:267:267	57930	1					
ANR	57975	ExpressionStatement	"XRRQueryVersion ( x11 -> display , & x11 -> xrandr_major , & x11 -> xrandr_minor )"	137:8:4203:4272	57930	0	True				
ANR	57976	CallExpression	"XRRQueryVersion ( x11 -> display , & x11 -> xrandr_major , & x11 -> xrandr_minor )"		57930	0					
ANR	57977	Callee	XRRQueryVersion		57930	0					
ANR	57978	Identifier	XRRQueryVersion		57930	0					
ANR	57979	ArgumentList	x11 -> display		57930	1					
ANR	57980	Argument	x11 -> display		57930	0					
ANR	57981	PtrMemberAccess	x11 -> display		57930	0					
ANR	57982	Identifier	x11		57930	0					
ANR	57983	Identifier	display		57930	1					
ANR	57984	Argument	& x11 -> xrandr_major		57930	1					
ANR	57985	UnaryOperationExpression	& x11 -> xrandr_major		57930	0					
ANR	57986	UnaryOperator	&		57930	0					
ANR	57987	PtrMemberAccess	x11 -> xrandr_major		57930	1					
ANR	57988	Identifier	x11		57930	0					
ANR	57989	Identifier	xrandr_major		57930	1					
ANR	57990	Argument	& x11 -> xrandr_minor		57930	2					
ANR	57991	UnaryOperationExpression	& x11 -> xrandr_minor		57930	0					
ANR	57992	UnaryOperator	&		57930	0					
ANR	57993	PtrMemberAccess	x11 -> xrandr_minor		57930	1					
ANR	57994	Identifier	x11		57930	0					
ANR	57995	Identifier	xrandr_minor		57930	1					
ANR	57996	IfStatement	if ( x11 -> xrandr_major == 1 && x11 -> xrandr_minor >= 3 )		57930	1					
ANR	57997	Condition	x11 -> xrandr_major == 1 && x11 -> xrandr_minor >= 3	138:12:4286:4333	57930	0	True				
ANR	57998	AndExpression	x11 -> xrandr_major == 1 && x11 -> xrandr_minor >= 3		57930	0		&&			
ANR	57999	EqualityExpression	x11 -> xrandr_major == 1		57930	0		==			
ANR	58000	PtrMemberAccess	x11 -> xrandr_major		57930	0					
ANR	58001	Identifier	x11		57930	0					
ANR	58002	Identifier	xrandr_major		57930	1					
ANR	58003	PrimaryExpression	1		57930	1					
ANR	58004	RelationalExpression	x11 -> xrandr_minor >= 3		57930	1		>=			
ANR	58005	PtrMemberAccess	x11 -> xrandr_minor		57930	0					
ANR	58006	Identifier	x11		57930	0					
ANR	58007	Identifier	xrandr_minor		57930	1					
ANR	58008	PrimaryExpression	3		57930	1					
ANR	58009	ExpressionStatement	x11 -> has_xrandr = 1	139:12:4348:4367	57930	1	True				
ANR	58010	AssignmentExpression	x11 -> has_xrandr = 1		57930	0		=			
ANR	58011	PtrMemberAccess	x11 -> has_xrandr		57930	0					
ANR	58012	Identifier	x11		57930	0					
ANR	58013	Identifier	has_xrandr		57930	1					
ANR	58014	PrimaryExpression	1		57930	1					
ANR	58015	ExpressionStatement	"XRRSelectInput ( x11 -> display , x11 -> root_window [ 0 ] , RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask )"	142:4:4380:4488	57930	3	True				
ANR	58016	CallExpression	"XRRSelectInput ( x11 -> display , x11 -> root_window [ 0 ] , RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask )"		57930	0					
ANR	58017	Callee	XRRSelectInput		57930	0					
ANR	58018	Identifier	XRRSelectInput		57930	0					
ANR	58019	ArgumentList	x11 -> display		57930	1					
ANR	58020	Argument	x11 -> display		57930	0					
ANR	58021	PtrMemberAccess	x11 -> display		57930	0					
ANR	58022	Identifier	x11		57930	0					
ANR	58023	Identifier	display		57930	1					
ANR	58024	Argument	x11 -> root_window [ 0 ]		57930	1					
ANR	58025	ArrayIndexing	x11 -> root_window [ 0 ]		57930	0					
ANR	58026	PtrMemberAccess	x11 -> root_window		57930	0					
ANR	58027	Identifier	x11		57930	0					
ANR	58028	Identifier	root_window		57930	1					
ANR	58029	PrimaryExpression	0		57930	1					
ANR	58030	Argument	RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask		57930	2					
ANR	58031	InclusiveOrExpression	RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask		57930	0		|			
ANR	58032	Identifier	RRScreenChangeNotifyMask		57930	0					
ANR	58033	Identifier	RRCrtcChangeNotifyMask		57930	1					
ANR	58034	IfStatement	if ( x11 -> has_xrandr )		57930	4					
ANR	58035	Condition	x11 -> has_xrandr	145:8:4499:4513	57930	0	True				
ANR	58036	PtrMemberAccess	x11 -> has_xrandr		57930	0					
ANR	58037	Identifier	x11		57930	0					
ANR	58038	Identifier	has_xrandr		57930	1					
ANR	58039	CompoundStatement		19:25:590:590	57930	1					
ANR	58040	ExpressionStatement	"update_randr_res ( x11 , 0 )"	146:8:4526:4550	57930	0	True				
ANR	58041	CallExpression	"update_randr_res ( x11 , 0 )"		57930	0					
ANR	58042	Callee	update_randr_res		57930	0					
ANR	58043	Identifier	update_randr_res		57930	0					
ANR	58044	ArgumentList	x11		57930	1					
ANR	58045	Argument	x11		57930	0					
ANR	58046	Identifier	x11		57930	0					
ANR	58047	Argument	0		57930	1					
ANR	58048	PrimaryExpression	0		57930	0					
ANR	58049	ElseStatement	else		57930	0					
ANR	58050	CompoundStatement		21:11:637:637	57930	0					
ANR	58051	ExpressionStatement	x11 -> randr . res = NULL	148:8:4573:4594	57930	0	True				
ANR	58052	AssignmentExpression	x11 -> randr . res = NULL		57930	0		=			
ANR	58053	MemberAccess	x11 -> randr . res		57930	0					
ANR	58054	PtrMemberAccess	x11 -> randr		57930	0					
ANR	58055	Identifier	x11		57930	0					
ANR	58056	Identifier	randr		57930	1					
ANR	58057	Identifier	res		57930	1					
ANR	58058	Identifier	NULL		57930	1					
ANR	58059	IfStatement	"if ( XineramaQueryExtension ( x11 -> display , & i , & i ) )"		57930	5					
ANR	58060	Condition	"XineramaQueryExtension ( x11 -> display , & i , & i )"	151:8:4611:4654	57930	0	True				
ANR	58061	CallExpression	"XineramaQueryExtension ( x11 -> display , & i , & i )"		57930	0					
ANR	58062	Callee	XineramaQueryExtension		57930	0					
ANR	58063	Identifier	XineramaQueryExtension		57930	0					
ANR	58064	ArgumentList	x11 -> display		57930	1					
ANR	58065	Argument	x11 -> display		57930	0					
ANR	58066	PtrMemberAccess	x11 -> display		57930	0					
ANR	58067	Identifier	x11		57930	0					
ANR	58068	Identifier	display		57930	1					
ANR	58069	Argument	& i		57930	1					
ANR	58070	UnaryOperationExpression	& i		57930	0					
ANR	58071	UnaryOperator	&		57930	0					
ANR	58072	Identifier	i		57930	1					
ANR	58073	Argument	& i		57930	2					
ANR	58074	UnaryOperationExpression	& i		57930	0					
ANR	58075	UnaryOperator	&		57930	0					
ANR	58076	Identifier	i		57930	1					
ANR	58077	ExpressionStatement	x11 -> has_xinerama = 1	152:8:4665:4686	57930	1	True				
ANR	58078	AssignmentExpression	x11 -> has_xinerama = 1		57930	0		=			
ANR	58079	PtrMemberAccess	x11 -> has_xinerama		57930	0					
ANR	58080	Identifier	x11		57930	0					
ANR	58081	Identifier	has_xinerama		57930	1					
ANR	58082	PrimaryExpression	1		57930	1					
ANR	58083	SwitchStatement	switch ( x11 -> has_xrandr << 4 | x11 -> has_xinerama )		57930	6					
ANR	58084	Condition	x11 -> has_xrandr << 4 | x11 -> has_xinerama	154:12:4701:4740	57930	0	True				
ANR	58085	InclusiveOrExpression	x11 -> has_xrandr << 4 | x11 -> has_xinerama		57930	0		|			
ANR	58086	ShiftExpression	x11 -> has_xrandr << 4		57930	0		<<			
ANR	58087	PtrMemberAccess	x11 -> has_xrandr		57930	0					
ANR	58088	Identifier	x11		57930	0					
ANR	58089	Identifier	has_xrandr		57930	1					
ANR	58090	PrimaryExpression	4		57930	1					
ANR	58091	PtrMemberAccess	x11 -> has_xinerama		57930	1					
ANR	58092	Identifier	x11		57930	0					
ANR	58093	Identifier	has_xinerama		57930	1					
ANR	58094	CompoundStatement		28:54:817:817	57930	1					
ANR	58095	Label	case 0x00 :	155:4:4749:4758	57930	0	True				
ANR	58096	ExpressionStatement	"syslog ( LOG_ERR , ""Neither Xrandr nor Xinerama found, assuming single monitor setup"" )"	156:8:4768:4851	57930	1	True				
ANR	58097	CallExpression	"syslog ( LOG_ERR , ""Neither Xrandr nor Xinerama found, assuming single monitor setup"" )"		57930	0					
ANR	58098	Callee	syslog		57930	0					
ANR	58099	Identifier	syslog		57930	0					
ANR	58100	ArgumentList	LOG_ERR		57930	1					
ANR	58101	Argument	LOG_ERR		57930	0					
ANR	58102	Identifier	LOG_ERR		57930	0					
ANR	58103	Argument	"""Neither Xrandr nor Xinerama found, assuming single monitor setup"""		57930	1					
ANR	58104	PrimaryExpression	"""Neither Xrandr nor Xinerama found, assuming single monitor setup"""		57930	0					
ANR	58105	BreakStatement	break ;	157:8:4861:4866	57930	2	True				
ANR	58106	Label	case 0x01 :	158:4:4872:4881	57930	3	True				
ANR	58107	IfStatement	if ( x11 -> debug )		57930	4					
ANR	58108	Condition	x11 -> debug	159:12:4895:4904	57930	0	True				
ANR	58109	PtrMemberAccess	x11 -> debug		57930	0					
ANR	58110	Identifier	x11		57930	0					
ANR	58111	Identifier	debug		57930	1					
ANR	58112	ExpressionStatement	"syslog ( LOG_DEBUG , ""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"" )"	160:12:4919:5018	57930	1	True				
ANR	58113	CallExpression	"syslog ( LOG_DEBUG , ""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"" )"		57930	0					
ANR	58114	Callee	syslog		57930	0					
ANR	58115	Identifier	syslog		57930	0					
ANR	58116	ArgumentList	LOG_DEBUG		57930	1					
ANR	58117	Argument	LOG_DEBUG		57930	0					
ANR	58118	Identifier	LOG_DEBUG		57930	0					
ANR	58119	Argument	"""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"""		57930	1					
ANR	58120	PrimaryExpression	"""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"""		57930	0					
ANR	58121	BreakStatement	break ;	161:8:5028:5033	57930	5	True				
ANR	58122	Label	case 0x10 :	162:4:5039:5048	57930	6	True				
ANR	58123	ExpressionStatement	"syslog ( LOG_ERR , ""Found Xrandr but no Xinerama, weird!"" )"	163:8:5058:5113	57930	7	True				
ANR	58124	CallExpression	"syslog ( LOG_ERR , ""Found Xrandr but no Xinerama, weird!"" )"		57930	0					
ANR	58125	Callee	syslog		57930	0					
ANR	58126	Identifier	syslog		57930	0					
ANR	58127	ArgumentList	LOG_ERR		57930	1					
ANR	58128	Argument	LOG_ERR		57930	0					
ANR	58129	Identifier	LOG_ERR		57930	0					
ANR	58130	Argument	"""Found Xrandr but no Xinerama, weird!"""		57930	1					
ANR	58131	PrimaryExpression	"""Found Xrandr but no Xinerama, weird!"""		57930	0					
ANR	58132	BreakStatement	break ;	164:8:5123:5128	57930	8	True				
ANR	58133	Label	case 0x11 :	165:4:5134:5143	57930	9	True				
ANR	58134	BreakStatement	break ;	167:8:5210:5215	57930	10	True				
ANR	58135	ReturnType	void		57930	1					
ANR	58136	Identifier	vdagent_x11_randr_init		57930	2					
ANR	58137	ParameterList	struct vdagent_x11 * x11		57930	3					
ANR	58138	Parameter	struct vdagent_x11 * x11	126:28:3900:3922	57930	0	True				
ANR	58139	ParameterType	struct vdagent_x11 *		57930	0					
ANR	58140	Identifier	x11		57930	1					
ANR	58141	CFGEntryNode	ENTRY		57930		True				
ANR	58142	CFGExitNode	EXIT		57930		True				
ANR	58143	Symbol	* x11		57930						
ANR	58144	Symbol	XRRQueryExtension		57930						
ANR	58145	Symbol	x11 -> randr		57930						
ANR	58146	Symbol	x11 -> root_window		57930						
ANR	58147	Symbol	RRCrtcChangeNotifyMask		57930						
ANR	58148	Symbol	LOG_ERR		57930						
ANR	58149	Symbol	* x11 -> root_window		57930						
ANR	58150	Symbol	x11		57930						
ANR	58151	Symbol	NULL		57930						
ANR	58152	Symbol	RRScreenChangeNotifyMask		57930						
ANR	58153	Symbol	x11 -> xrandr_minor		57930						
ANR	58154	Symbol	x11 -> xrandr_major		57930						
ANR	58155	Symbol	x11 -> debug		57930						
ANR	58156	Symbol	i		57930						
ANR	58157	Symbol	x11 -> has_xinerama		57930						
ANR	58158	Symbol	* * x11		57930						
ANR	58159	Symbol	x11 -> screen_count		57930						
ANR	58160	Symbol	XineramaQueryExtension		57930						
ANR	58161	Symbol	& i		57930						
ANR	58162	Symbol	x11 -> display		57930						
ANR	58163	Symbol	& x11 -> xrandr_event_base		57930						
ANR	58164	Symbol	x11 -> randr . res		57930						
ANR	58165	Symbol	LOG_DEBUG		57930						
ANR	58166	Symbol	& x11 -> xrandr_major		57930						
ANR	58167	Symbol	& x11 -> xrandr_minor		57930						
ANR	58168	Symbol	x11 -> has_xrandr		57930						
ANR	58169	Function	find_mode_by_name	171:0:5226:5583							
ANR	58170	FunctionDef	"find_mode_by_name (struct vdagent_x11 * x11 , char * name)"		58169	0					
ANR	58171	CompoundStatement		173:0:5303:5583	58169	0					
ANR	58172	IdentifierDeclStatement	int m ;	174:4:5309:5322	58169	0	True				
ANR	58173	IdentifierDecl	m		58169	0					
ANR	58174	IdentifierDeclType	int		58169	0					
ANR	58175	Identifier	m		58169	1					
ANR	58176	IdentifierDeclStatement	XRRModeInfo * ret = NULL ;	175:4:5328:5358	58169	1	True				
ANR	58177	IdentifierDecl	* ret = NULL		58169	0					
ANR	58178	IdentifierDeclType	XRRModeInfo *		58169	0					
ANR	58179	Identifier	ret		58169	1					
ANR	58180	AssignmentExpression	* ret = NULL		58169	2		=			
ANR	58181	Identifier	NULL		58169	0					
ANR	58182	Identifier	NULL		58169	1					
ANR	58183	ForStatement	for ( m = 0 ; m < x11 -> randr . res -> nmode ; m ++ )		58169	2					
ANR	58184	ForInit	m = 0 ;	177:9:5370:5375	58169	0	True				
ANR	58185	AssignmentExpression	m = 0		58169	0		=			
ANR	58186	Identifier	m		58169	0					
ANR	58187	PrimaryExpression	0		58169	1					
ANR	58188	Condition	m < x11 -> randr . res -> nmode	177:16:5377:5401	58169	1	True				
ANR	58189	RelationalExpression	m < x11 -> randr . res -> nmode		58169	0		<			
ANR	58190	Identifier	m		58169	0					
ANR	58191	PtrMemberAccess	x11 -> randr . res -> nmode		58169	1					
ANR	58192	MemberAccess	x11 -> randr . res		58169	0					
ANR	58193	PtrMemberAccess	x11 -> randr		58169	0					
ANR	58194	Identifier	x11		58169	0					
ANR	58195	Identifier	randr		58169	1					
ANR	58196	Identifier	res		58169	1					
ANR	58197	Identifier	nmode		58169	1					
ANR	58198	PostIncDecOperationExpression	m ++	177:43:5404:5406	58169	2	True				
ANR	58199	Identifier	m		58169	0					
ANR	58200	IncDec	++		58169	1					
ANR	58201	CompoundStatement		6:8:115:160	58169	3					
ANR	58202	IdentifierDeclStatement	XRRModeInfo * mode = & x11 -> randr . res -> modes [ m ] ;	178:8:5419:5464	58169	0	True				
ANR	58203	IdentifierDecl	* mode = & x11 -> randr . res -> modes [ m ]		58169	0					
ANR	58204	IdentifierDeclType	XRRModeInfo *		58169	0					
ANR	58205	Identifier	mode		58169	1					
ANR	58206	AssignmentExpression	* mode = & x11 -> randr . res -> modes [ m ]		58169	2		=			
ANR	58207	Identifier	mode		58169	0					
ANR	58208	UnaryOperationExpression	& x11 -> randr . res -> modes [ m ]		58169	1					
ANR	58209	UnaryOperator	&		58169	0					
ANR	58210	ArrayIndexing	x11 -> randr . res -> modes [ m ]		58169	1					
ANR	58211	PtrMemberAccess	x11 -> randr . res -> modes		58169	0					
ANR	58212	MemberAccess	x11 -> randr . res		58169	0					
ANR	58213	PtrMemberAccess	x11 -> randr		58169	0					
ANR	58214	Identifier	x11		58169	0					
ANR	58215	Identifier	randr		58169	1					
ANR	58216	Identifier	res		58169	1					
ANR	58217	Identifier	modes		58169	1					
ANR	58218	Identifier	m		58169	1					
ANR	58219	IfStatement	"if ( ! strcmp ( name , mode -> name ) )"		58169	1					
ANR	58220	Condition	"! strcmp ( name , mode -> name )"	179:12:5478:5503	58169	0	True				
ANR	58221	UnaryOperationExpression	"! strcmp ( name , mode -> name )"		58169	0					
ANR	58222	UnaryOperator	!		58169	0					
ANR	58223	CallExpression	"strcmp ( name , mode -> name )"		58169	1					
ANR	58224	Callee	strcmp		58169	0					
ANR	58225	Identifier	strcmp		58169	0					
ANR	58226	ArgumentList	name		58169	1					
ANR	58227	Argument	name		58169	0					
ANR	58228	Identifier	name		58169	0					
ANR	58229	Argument	mode -> name		58169	1					
ANR	58230	PtrMemberAccess	mode -> name		58169	0					
ANR	58231	Identifier	mode		58169	0					
ANR	58232	Identifier	name		58169	1					
ANR	58233	CompoundStatement		7:40:202:202	58169	1					
ANR	58234	ExpressionStatement	ret = mode	180:12:5520:5530	58169	0	True				
ANR	58235	AssignmentExpression	ret = mode		58169	0		=			
ANR	58236	Identifier	ret		58169	0					
ANR	58237	Identifier	mode		58169	1					
ANR	58238	BreakStatement	break ;	181:12:5544:5549	58169	1	True				
ANR	58239	ReturnStatement	return ret ;	184:4:5571:5581	58169	3	True				
ANR	58240	Identifier	ret		58169	0					
ANR	58241	ReturnType	static XRRModeInfo *		58169	1					
ANR	58242	Identifier	find_mode_by_name		58169	2					
ANR	58243	ParameterList	"struct vdagent_x11 * x11 , char * name"		58169	3					
ANR	58244	Parameter	struct vdagent_x11 * x11	172:19:5266:5288	58169	0	True				
ANR	58245	ParameterType	struct vdagent_x11 *		58169	0					
ANR	58246	Identifier	x11		58169	1					
ANR	58247	Parameter	char * name	172:44:5291:5300	58169	1	True				
ANR	58248	ParameterType	char *		58169	0					
ANR	58249	Identifier	name		58169	1					
ANR	58250	CFGEntryNode	ENTRY		58169		True				
ANR	58251	CFGExitNode	EXIT		58169		True				
ANR	58252	Symbol	ret		58169						
ANR	58253	Symbol	strcmp		58169						
ANR	58254	Symbol	mode -> name		58169						
ANR	58255	Symbol	* x11		58169						
ANR	58256	Symbol	NULL		58169						
ANR	58257	Symbol	x11 -> randr		58169						
ANR	58258	Symbol	* * x11		58169						
ANR	58259	Symbol	* x11 -> randr . res		58169						
ANR	58260	Symbol	m		58169						
ANR	58261	Symbol	x11 -> randr . res -> nmode		58169						
ANR	58262	Symbol	* x11 -> randr		58169						
ANR	58263	Symbol	mode		58169						
ANR	58264	Symbol	name		58169						
ANR	58265	Symbol	* mode		58169						
ANR	58266	Symbol	x11		58169						
ANR	58267	Symbol	x11 -> randr . res		58169						
ANR	58268	Symbol	x11 -> randr . res -> modes		58169						
ANR	58269	Function	find_mode_by_size	187:0:5586:6077							
ANR	58270	FunctionDef	"find_mode_by_size (struct vdagent_x11 * x11 , int output , int width , int height)"		58269	0					
ANR	58271	CompoundStatement		189:0:5686:6077	58269	0					
ANR	58272	IdentifierDeclStatement	int m ;	190:4:5692:5705	58269	0	True				
ANR	58273	IdentifierDecl	m		58269	0					
ANR	58274	IdentifierDeclType	int		58269	0					
ANR	58275	Identifier	m		58269	1					
ANR	58276	IdentifierDeclStatement	XRRModeInfo * ret = NULL ;	191:4:5711:5741	58269	1	True				
ANR	58277	IdentifierDecl	* ret = NULL		58269	0					
ANR	58278	IdentifierDeclType	XRRModeInfo *		58269	0					
ANR	58279	Identifier	ret		58269	1					
ANR	58280	AssignmentExpression	* ret = NULL		58269	2		=			
ANR	58281	Identifier	NULL		58269	0					
ANR	58282	Identifier	NULL		58269	1					
ANR	58283	ForStatement	for ( m = 0 ; m < x11 -> randr . outputs [ output ] -> nmode ; m ++ )		58269	2					
ANR	58284	ForInit	m = 0 ;	193:9:5753:5758	58269	0	True				
ANR	58285	AssignmentExpression	m = 0		58269	0		=			
ANR	58286	Identifier	m		58269	0					
ANR	58287	PrimaryExpression	0		58269	1					
ANR	58288	Condition	m < x11 -> randr . outputs [ output ] -> nmode	193:16:5760:5796	58269	1	True				
ANR	58289	RelationalExpression	m < x11 -> randr . outputs [ output ] -> nmode		58269	0		<			
ANR	58290	Identifier	m		58269	0					
ANR	58291	PtrMemberAccess	x11 -> randr . outputs [ output ] -> nmode		58269	1					
ANR	58292	ArrayIndexing	x11 -> randr . outputs [ output ]		58269	0					
ANR	58293	MemberAccess	x11 -> randr . outputs		58269	0					
ANR	58294	PtrMemberAccess	x11 -> randr		58269	0					
ANR	58295	Identifier	x11		58269	0					
ANR	58296	Identifier	randr		58269	1					
ANR	58297	Identifier	outputs		58269	1					
ANR	58298	Identifier	output		58269	1					
ANR	58299	Identifier	nmode		58269	1					
ANR	58300	PostIncDecOperationExpression	m ++	193:55:5799:5801	58269	2	True				
ANR	58301	Identifier	m		58269	0					
ANR	58302	IncDec	++		58269	1					
ANR	58303	CompoundStatement		6:8:127:243	58269	3					
ANR	58304	IdentifierDeclStatement	"XRRModeInfo * mode = mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] ) ;"	194:8:5814:5930	58269	0	True				
ANR	58305	IdentifierDecl	"* mode = mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] )"		58269	0					
ANR	58306	IdentifierDeclType	XRRModeInfo *		58269	0					
ANR	58307	Identifier	mode		58269	1					
ANR	58308	AssignmentExpression	"* mode = mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] )"		58269	2		=			
ANR	58309	Identifier	mode		58269	0					
ANR	58310	CallExpression	"mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] )"		58269	1					
ANR	58311	Callee	mode_from_id		58269	0					
ANR	58312	Identifier	mode_from_id		58269	0					
ANR	58313	ArgumentList	x11		58269	1					
ANR	58314	Argument	x11		58269	0					
ANR	58315	Identifier	x11		58269	0					
ANR	58316	Argument	x11 -> randr . outputs [ output ] -> modes [ m ]		58269	1					
ANR	58317	ArrayIndexing	x11 -> randr . outputs [ output ] -> modes [ m ]		58269	0					
ANR	58318	PtrMemberAccess	x11 -> randr . outputs [ output ] -> modes		58269	0					
ANR	58319	ArrayIndexing	x11 -> randr . outputs [ output ]		58269	0					
ANR	58320	MemberAccess	x11 -> randr . outputs		58269	0					
ANR	58321	PtrMemberAccess	x11 -> randr		58269	0					
ANR	58322	Identifier	x11		58269	0					
ANR	58323	Identifier	randr		58269	1					
ANR	58324	Identifier	outputs		58269	1					
ANR	58325	Identifier	output		58269	1					
ANR	58326	Identifier	modes		58269	1					
ANR	58327	Identifier	m		58269	1					
ANR	58328	IfStatement	if ( mode && mode -> width == width && mode -> height == height )		58269	1					
ANR	58329	Condition	mode && mode -> width == width && mode -> height == height	196:12:5944:5997	58269	0	True				
ANR	58330	AndExpression	mode && mode -> width == width && mode -> height == height		58269	0		&&			
ANR	58331	Identifier	mode		58269	0					
ANR	58332	AndExpression	mode -> width == width && mode -> height == height		58269	1		&&			
ANR	58333	EqualityExpression	mode -> width == width		58269	0		==			
ANR	58334	PtrMemberAccess	mode -> width		58269	0					
ANR	58335	Identifier	mode		58269	0					
ANR	58336	Identifier	width		58269	1					
ANR	58337	Identifier	width		58269	1					
ANR	58338	EqualityExpression	mode -> height == height		58269	1		==			
ANR	58339	PtrMemberAccess	mode -> height		58269	0					
ANR	58340	Identifier	mode		58269	0					
ANR	58341	Identifier	height		58269	1					
ANR	58342	Identifier	height		58269	1					
ANR	58343	CompoundStatement		8:68:313:313	58269	1					
ANR	58344	ExpressionStatement	ret = mode	197:12:6014:6024	58269	0	True				
ANR	58345	AssignmentExpression	ret = mode		58269	0		=			
ANR	58346	Identifier	ret		58269	0					
ANR	58347	Identifier	mode		58269	1					
ANR	58348	BreakStatement	break ;	198:12:6038:6043	58269	1	True				
ANR	58349	ReturnStatement	return ret ;	201:4:6065:6075	58269	3	True				
ANR	58350	Identifier	ret		58269	0					
ANR	58351	ReturnType	static XRRModeInfo *		58269	1					
ANR	58352	Identifier	find_mode_by_size		58269	2					
ANR	58353	ParameterList	"struct vdagent_x11 * x11 , int output , int width , int height"		58269	3					
ANR	58354	Parameter	struct vdagent_x11 * x11	188:19:5626:5648	58269	0	True				
ANR	58355	ParameterType	struct vdagent_x11 *		58269	0					
ANR	58356	Identifier	x11		58269	1					
ANR	58357	Parameter	int output	188:44:5651:5660	58269	1	True				
ANR	58358	ParameterType	int		58269	0					
ANR	58359	Identifier	output		58269	1					
ANR	58360	Parameter	int width	188:56:5663:5671	58269	2	True				
ANR	58361	ParameterType	int		58269	0					
ANR	58362	Identifier	width		58269	1					
ANR	58363	Parameter	int height	188:67:5674:5683	58269	3	True				
ANR	58364	ParameterType	int		58269	0					
ANR	58365	Identifier	height		58269	1					
ANR	58366	CFGEntryNode	ENTRY		58269		True				
ANR	58367	CFGExitNode	EXIT		58269		True				
ANR	58368	Symbol	x11 -> randr . outputs [ output ] -> modes		58269						
ANR	58369	Symbol	* x11		58269						
ANR	58370	Symbol	* x11 -> randr . outputs [ output ] -> modes		58269						
ANR	58371	Symbol	x11 -> randr		58269						
ANR	58372	Symbol	* * output		58269						
ANR	58373	Symbol	output		58269						
ANR	58374	Symbol	mode		58269						
ANR	58375	Symbol	* x11 -> randr . outputs		58269						
ANR	58376	Symbol	* * x11 -> randr . outputs		58269						
ANR	58377	Symbol	* * * * x11		58269						
ANR	58378	Symbol	* * * x11		58269						
ANR	58379	Symbol	x11		58269						
ANR	58380	Symbol	* * x11 -> randr		58269						
ANR	58381	Symbol	height		58269						
ANR	58382	Symbol	ret		58269						
ANR	58383	Symbol	NULL		58269						
ANR	58384	Symbol	* * * x11 -> randr . outputs		58269						
ANR	58385	Symbol	mode -> height		58269						
ANR	58386	Symbol	mode -> width		58269						
ANR	58387	Symbol	mode_from_id		58269						
ANR	58388	Symbol	* * x11		58269						
ANR	58389	Symbol	m		58269						
ANR	58390	Symbol	* x11 -> randr		58269						
ANR	58391	Symbol	* * * x11 -> randr		58269						
ANR	58392	Symbol	x11 -> randr . outputs [ output ] -> nmode		58269						
ANR	58393	Symbol	* m		58269						
ANR	58394	Symbol	width		58269						
ANR	58395	Symbol	* mode		58269						
ANR	58396	Symbol	x11 -> randr . outputs		58269						
ANR	58397	Symbol	* * * output		58269						
ANR	58398	Symbol	* output		58269						
ANR	58399	Function	delete_mode	204:0:6080:7342							
ANR	58400	FunctionDef	"delete_mode (struct vdagent_x11 * x11 , int output_index , int width , int height)"		58399	0					
ANR	58401	CompoundStatement		206:0:6194:7342	58399	0					
ANR	58402	IdentifierDeclStatement	int m ;	207:4:6200:6205	58399	0	True				
ANR	58403	IdentifierDecl	m		58399	0					
ANR	58404	IdentifierDeclType	int		58399	0					
ANR	58405	Identifier	m		58399	1					
ANR	58406	IdentifierDeclStatement	XRRModeInfo * mode ;	208:4:6211:6228	58399	1	True				
ANR	58407	IdentifierDecl	* mode		58399	0					
ANR	58408	IdentifierDeclType	XRRModeInfo *		58399	0					
ANR	58409	Identifier	mode		58399	1					
ANR	58410	IdentifierDeclStatement	XRROutputInfo * output_info ;	209:4:6234:6260	58399	2	True				
ANR	58411	IdentifierDecl	* output_info		58399	0					
ANR	58412	IdentifierDeclType	XRROutputInfo *		58399	0					
ANR	58413	Identifier	output_info		58399	1					
ANR	58414	IdentifierDeclStatement	char name [ 20 ] ;	210:4:6266:6279	58399	3	True				
ANR	58415	IdentifierDecl	name [ 20 ]		58399	0					
ANR	58416	IdentifierDeclType	char [ 20 ]		58399	0					
ANR	58417	Identifier	name		58399	1					
ANR	58418	PrimaryExpression	20		58399	2					
ANR	58419	IfStatement	if ( width == 0 || height == 0 )		58399	4					
ANR	58420	Condition	width == 0 || height == 0	212:8:6290:6314	58399	0	True				
ANR	58421	OrExpression	width == 0 || height == 0		58399	0		||			
ANR	58422	EqualityExpression	width == 0		58399	0		==			
ANR	58423	Identifier	width		58399	0					
ANR	58424	PrimaryExpression	0		58399	1					
ANR	58425	EqualityExpression	height == 0		58399	1		==			
ANR	58426	Identifier	height		58399	0					
ANR	58427	PrimaryExpression	0		58399	1					
ANR	58428	ReturnStatement	return ;	213:8:6325:6331	58399	1	True				
ANR	58429	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""%dx%d-%d"" , width , height , output_index )"	215:4:6338:6407	58399	5	True				
ANR	58430	CallExpression	"snprintf ( name , sizeof ( name ) , ""%dx%d-%d"" , width , height , output_index )"		58399	0					
ANR	58431	Callee	snprintf		58399	0					
ANR	58432	Identifier	snprintf		58399	0					
ANR	58433	ArgumentList	name		58399	1					
ANR	58434	Argument	name		58399	0					
ANR	58435	Identifier	name		58399	0					
ANR	58436	Argument	sizeof ( name )		58399	1					
ANR	58437	SizeofExpression	sizeof ( name )		58399	0					
ANR	58438	Sizeof	sizeof		58399	0					
ANR	58439	SizeofOperand	name		58399	1					
ANR	58440	Argument	"""%dx%d-%d"""		58399	2					
ANR	58441	PrimaryExpression	"""%dx%d-%d"""		58399	0					
ANR	58442	Argument	width		58399	3					
ANR	58443	Identifier	width		58399	0					
ANR	58444	Argument	height		58399	4					
ANR	58445	Identifier	height		58399	0					
ANR	58446	Argument	output_index		58399	5					
ANR	58447	Identifier	output_index		58399	0					
ANR	58448	IfStatement	if ( x11 -> debug )		58399	6					
ANR	58449	Condition	x11 -> debug	216:8:6417:6426	58399	0	True				
ANR	58450	PtrMemberAccess	x11 -> debug		58399	0					
ANR	58451	Identifier	x11		58399	0					
ANR	58452	Identifier	debug		58399	1					
ANR	58453	ExpressionStatement	"syslog ( LOG_DEBUG , ""Deleting mode %s"" , name )"	217:8:6437:6480	58399	1	True				
ANR	58454	CallExpression	"syslog ( LOG_DEBUG , ""Deleting mode %s"" , name )"		58399	0					
ANR	58455	Callee	syslog		58399	0					
ANR	58456	Identifier	syslog		58399	0					
ANR	58457	ArgumentList	LOG_DEBUG		58399	1					
ANR	58458	Argument	LOG_DEBUG		58399	0					
ANR	58459	Identifier	LOG_DEBUG		58399	0					
ANR	58460	Argument	"""Deleting mode %s"""		58399	1					
ANR	58461	PrimaryExpression	"""Deleting mode %s"""		58399	0					
ANR	58462	Argument	name		58399	2					
ANR	58463	Identifier	name		58399	0					
ANR	58464	ExpressionStatement	output_info = x11 -> randr . outputs [ output_index ]	219:4:6487:6533	58399	7	True				
ANR	58465	AssignmentExpression	output_info = x11 -> randr . outputs [ output_index ]		58399	0		=			
ANR	58466	Identifier	output_info		58399	0					
ANR	58467	ArrayIndexing	x11 -> randr . outputs [ output_index ]		58399	1					
ANR	58468	MemberAccess	x11 -> randr . outputs		58399	0					
ANR	58469	PtrMemberAccess	x11 -> randr		58399	0					
ANR	58470	Identifier	x11		58399	0					
ANR	58471	Identifier	randr		58399	1					
ANR	58472	Identifier	outputs		58399	1					
ANR	58473	Identifier	output_index		58399	1					
ANR	58474	IfStatement	if ( output_info -> ncrtc != 1 )		58399	8					
ANR	58475	Condition	output_info -> ncrtc != 1	220:8:6543:6565	58399	0	True				
ANR	58476	EqualityExpression	output_info -> ncrtc != 1		58399	0		!=			
ANR	58477	PtrMemberAccess	output_info -> ncrtc		58399	0					
ANR	58478	Identifier	output_info		58399	0					
ANR	58479	Identifier	ncrtc		58399	1					
ANR	58480	PrimaryExpression	1		58399	1					
ANR	58481	CompoundStatement		15:33:373:373	58399	1					
ANR	58482	Statement	syslog	221:8:6578:6583	58399	0	True				
ANR	58483	Statement	(	221:14:6584:6584	58399	1	True				
ANR	58484	Statement	LOG_ERR	221:15:6585:6591	58399	2	True				
ANR	58485	Statement	","	221:22:6592:6592	58399	3	True				
ANR	58486	Statement	"""output has %d crtcs, expected exactly 1, """	221:24:6594:6636	58399	4	True				
ANR	58487	Statement	"""failed to delete mode"""	222:15:6653:6675	58399	5	True				
ANR	58488	Statement	","	222:38:6676:6676	58399	6	True				
ANR	58489	Statement	output_info	222:40:6678:6688	58399	7	True				
ANR	58490	Statement	->	222:51:6689:6690	58399	8	True				
ANR	58491	Statement	ncrtc	222:53:6691:6695	58399	9	True				
ANR	58492	Statement	)	222:58:6696:6696	58399	10	True				
ANR	58493	ExpressionStatement		222:59:6697:6697	58399	11	True				
ANR	58494	ReturnStatement	return ;	223:8:6707:6713	58399	12	True				
ANR	58495	ForStatement	for ( m = 0 ; m < x11 -> randr . res -> nmode ; ++ m )		58399	9					
ANR	58496	ForInit	m = 0 ;	225:9:6730:6736	58399	0	True				
ANR	58497	AssignmentExpression	m = 0		58399	0		=			
ANR	58498	Identifier	m		58399	0					
ANR	58499	PrimaryExpression	0		58399	1					
ANR	58500	Condition	m < x11 -> randr . res -> nmode	225:17:6738:6762	58399	1	True				
ANR	58501	RelationalExpression	m < x11 -> randr . res -> nmode		58399	0		<			
ANR	58502	Identifier	m		58399	0					
ANR	58503	PtrMemberAccess	x11 -> randr . res -> nmode		58399	1					
ANR	58504	MemberAccess	x11 -> randr . res		58399	0					
ANR	58505	PtrMemberAccess	x11 -> randr		58399	0					
ANR	58506	Identifier	x11		58399	0					
ANR	58507	Identifier	randr		58399	1					
ANR	58508	Identifier	res		58399	1					
ANR	58509	Identifier	nmode		58399	1					
ANR	58510	UnaryExpression	++ m	225:44:6765:6767	58399	2	True				
ANR	58511	IncDec	++		58399	0					
ANR	58512	Identifier	m		58399	1					
ANR	58513	CompoundStatement		20:49:575:575	58399	3					
ANR	58514	ExpressionStatement	mode = & x11 -> randr . res -> modes [ m ]	226:8:6780:6812	58399	0	True				
ANR	58515	AssignmentExpression	mode = & x11 -> randr . res -> modes [ m ]		58399	0		=			
ANR	58516	Identifier	mode		58399	0					
ANR	58517	UnaryOperationExpression	& x11 -> randr . res -> modes [ m ]		58399	1					
ANR	58518	UnaryOperator	&		58399	0					
ANR	58519	ArrayIndexing	x11 -> randr . res -> modes [ m ]		58399	1					
ANR	58520	PtrMemberAccess	x11 -> randr . res -> modes		58399	0					
ANR	58521	MemberAccess	x11 -> randr . res		58399	0					
ANR	58522	PtrMemberAccess	x11 -> randr		58399	0					
ANR	58523	Identifier	x11		58399	0					
ANR	58524	Identifier	randr		58399	1					
ANR	58525	Identifier	res		58399	1					
ANR	58526	Identifier	modes		58399	1					
ANR	58527	Identifier	m		58399	1					
ANR	58528	IfStatement	"if ( strcmp ( mode -> name , name ) == 0 )"		58399	1					
ANR	58529	Condition	"strcmp ( mode -> name , name ) == 0"	227:12:6826:6854	58399	0	True				
ANR	58530	EqualityExpression	"strcmp ( mode -> name , name ) == 0"		58399	0		==			
ANR	58531	CallExpression	"strcmp ( mode -> name , name )"		58399	0					
ANR	58532	Callee	strcmp		58399	0					
ANR	58533	Identifier	strcmp		58399	0					
ANR	58534	ArgumentList	mode -> name		58399	1					
ANR	58535	Argument	mode -> name		58399	0					
ANR	58536	PtrMemberAccess	mode -> name		58399	0					
ANR	58537	Identifier	mode		58399	0					
ANR	58538	Identifier	name		58399	1					
ANR	58539	Argument	name		58399	1					
ANR	58540	Identifier	name		58399	0					
ANR	58541	PrimaryExpression	0		58399	1					
ANR	58542	BreakStatement	break ;	228:12:6869:6874	58399	1	True				
ANR	58543	IfStatement	if ( m < x11 -> randr . res -> nmode )		58399	10					
ANR	58544	Condition	m < x11 -> randr . res -> nmode	230:8:6890:6914	58399	0	True				
ANR	58545	RelationalExpression	m < x11 -> randr . res -> nmode		58399	0		<			
ANR	58546	Identifier	m		58399	0					
ANR	58547	PtrMemberAccess	x11 -> randr . res -> nmode		58399	1					
ANR	58548	MemberAccess	x11 -> randr . res		58399	0					
ANR	58549	PtrMemberAccess	x11 -> randr		58399	0					
ANR	58550	Identifier	x11		58399	0					
ANR	58551	Identifier	randr		58399	1					
ANR	58552	Identifier	res		58399	1					
ANR	58553	Identifier	nmode		58399	1					
ANR	58554	CompoundStatement		25:35:722:722	58399	1					
ANR	58555	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	231:8:6927:6976	58399	0	True				
ANR	58556	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		58399	0					
ANR	58557	Callee	vdagent_x11_set_error_handler		58399	0					
ANR	58558	Identifier	vdagent_x11_set_error_handler		58399	0					
ANR	58559	ArgumentList	x11		58399	1					
ANR	58560	Argument	x11		58399	0					
ANR	58561	Identifier	x11		58399	0					
ANR	58562	Argument	error_handler		58399	1					
ANR	58563	Identifier	error_handler		58399	0					
ANR	58564	ExpressionStatement	"XRRDeleteOutputMode ( x11 -> display , x11 -> randr . res -> outputs [ output_index ] , mode -> id )"	232:8:6986:7098	58399	1	True				
ANR	58565	CallExpression	"XRRDeleteOutputMode ( x11 -> display , x11 -> randr . res -> outputs [ output_index ] , mode -> id )"		58399	0					
ANR	58566	Callee	XRRDeleteOutputMode		58399	0					
ANR	58567	Identifier	XRRDeleteOutputMode		58399	0					
ANR	58568	ArgumentList	x11 -> display		58399	1					
ANR	58569	Argument	x11 -> display		58399	0					
ANR	58570	PtrMemberAccess	x11 -> display		58399	0					
ANR	58571	Identifier	x11		58399	0					
ANR	58572	Identifier	display		58399	1					
ANR	58573	Argument	x11 -> randr . res -> outputs [ output_index ]		58399	1					
ANR	58574	ArrayIndexing	x11 -> randr . res -> outputs [ output_index ]		58399	0					
ANR	58575	PtrMemberAccess	x11 -> randr . res -> outputs		58399	0					
ANR	58576	MemberAccess	x11 -> randr . res		58399	0					
ANR	58577	PtrMemberAccess	x11 -> randr		58399	0					
ANR	58578	Identifier	x11		58399	0					
ANR	58579	Identifier	randr		58399	1					
ANR	58580	Identifier	res		58399	1					
ANR	58581	Identifier	outputs		58399	1					
ANR	58582	Identifier	output_index		58399	1					
ANR	58583	Argument	mode -> id		58399	2					
ANR	58584	PtrMemberAccess	mode -> id		58399	0					
ANR	58585	Identifier	mode		58399	0					
ANR	58586	Identifier	id		58399	1					
ANR	58587	ExpressionStatement	"XRRDestroyMode ( x11 -> display , mode -> id )"	234:8:7108:7147	58399	2	True				
ANR	58588	CallExpression	"XRRDestroyMode ( x11 -> display , mode -> id )"		58399	0					
ANR	58589	Callee	XRRDestroyMode		58399	0					
ANR	58590	Identifier	XRRDestroyMode		58399	0					
ANR	58591	ArgumentList	x11 -> display		58399	1					
ANR	58592	Argument	x11 -> display		58399	0					
ANR	58593	PtrMemberAccess	x11 -> display		58399	0					
ANR	58594	Identifier	x11		58399	0					
ANR	58595	Identifier	display		58399	1					
ANR	58596	Argument	mode -> id		58399	1					
ANR	58597	PtrMemberAccess	mode -> id		58399	0					
ANR	58598	Identifier	mode		58399	0					
ANR	58599	Identifier	id		58399	1					
ANR	58600	ExpressionStatement	vdagent_x11_restore_error_handler ( x11 )	236:1:7202:7240	58399	3	True				
ANR	58601	CallExpression	vdagent_x11_restore_error_handler ( x11 )		58399	0					
ANR	58602	Callee	vdagent_x11_restore_error_handler		58399	0					
ANR	58603	Identifier	vdagent_x11_restore_error_handler		58399	0					
ANR	58604	ArgumentList	x11		58399	1					
ANR	58605	Argument	x11		58399	0					
ANR	58606	Identifier	x11		58399	0					
ANR	58607	ExpressionStatement	"update_randr_res ( x11 , 0 )"	240:4:7316:7340	58399	11	True				
ANR	58608	CallExpression	"update_randr_res ( x11 , 0 )"		58399	0					
ANR	58609	Callee	update_randr_res		58399	0					
ANR	58610	Identifier	update_randr_res		58399	0					
ANR	58611	ArgumentList	x11		58399	1					
ANR	58612	Argument	x11		58399	0					
ANR	58613	Identifier	x11		58399	0					
ANR	58614	Argument	0		58399	1					
ANR	58615	PrimaryExpression	0		58399	0					
ANR	58616	ReturnType	static void		58399	1					
ANR	58617	Identifier	delete_mode		58399	2					
ANR	58618	ParameterList	"struct vdagent_x11 * x11 , int output_index , int width , int height"		58399	3					
ANR	58619	Parameter	struct vdagent_x11 * x11	204:24:6104:6126	58399	0	True				
ANR	58620	ParameterType	struct vdagent_x11 *		58399	0					
ANR	58621	Identifier	x11		58399	1					
ANR	58622	Parameter	int output_index	204:49:6129:6144	58399	1	True				
ANR	58623	ParameterType	int		58399	0					
ANR	58624	Identifier	output_index		58399	1					
ANR	58625	Parameter	int width	205:24:6171:6179	58399	2	True				
ANR	58626	ParameterType	int		58399	0					
ANR	58627	Identifier	width		58399	1					
ANR	58628	Parameter	int height	205:35:6182:6191	58399	3	True				
ANR	58629	ParameterType	int		58399	0					
ANR	58630	Identifier	height		58399	1					
ANR	58631	CFGEntryNode	ENTRY		58399		True				
ANR	58632	CFGExitNode	EXIT		58399		True				
ANR	58633	Symbol	mode -> name		58399						
ANR	58634	Symbol	* x11 -> randr . res -> outputs		58399						
ANR	58635	Symbol	* x11		58399						
ANR	58636	Symbol	error_handler		58399						
ANR	58637	Symbol	mode -> id		58399						
ANR	58638	Symbol	x11 -> randr		58399						
ANR	58639	Symbol	output_index		58399						
ANR	58640	Symbol	* x11 -> randr . res		58399						
ANR	58641	Symbol	x11 -> randr . res -> nmode		58399						
ANR	58642	Symbol	mode		58399						
ANR	58643	Symbol	* x11 -> randr . outputs		58399						
ANR	58644	Symbol	* output_index		58399						
ANR	58645	Symbol	* * * x11		58399						
ANR	58646	Symbol	* * x11 -> randr . res		58399						
ANR	58647	Symbol	x11		58399						
ANR	58648	Symbol	* * x11 -> randr		58399						
ANR	58649	Symbol	x11 -> randr . res -> outputs		58399						
ANR	58650	Symbol	height		58399						
ANR	58651	Symbol	x11 -> randr . res -> modes		58399						
ANR	58652	Symbol	strcmp		58399						
ANR	58653	Symbol	x11 -> debug		58399						
ANR	58654	Symbol	* * x11		58399						
ANR	58655	Symbol	m		58399						
ANR	58656	Symbol	* x11 -> randr		58399						
ANR	58657	Symbol	output_info -> ncrtc		58399						
ANR	58658	Symbol	x11 -> display		58399						
ANR	58659	Symbol	width		58399						
ANR	58660	Symbol	name		58399						
ANR	58661	Symbol	* mode		58399						
ANR	58662	Symbol	x11 -> randr . res		58399						
ANR	58663	Symbol	output_info		58399						
ANR	58664	Symbol	LOG_DEBUG		58399						
ANR	58665	Symbol	x11 -> randr . outputs		58399						
ANR	58666	Symbol	* output_info		58399						
ANR	58667	Function	set_reduced_cvt_mode	243:0:7345:9700							
ANR	58668	FunctionDef	"set_reduced_cvt_mode (XRRModeInfo * mode , int width , int height)"		58667	0					
ANR	58669	CompoundStatement		244:0:7420:9700	58667	0					
ANR	58670	Statement	define	250:1:7665:7670	58667	0	True				
ANR	58671	Statement	CVT_MARGIN_PERCENTAGE	250:8:7672:7692	58667	1	True				
ANR	58672	Statement	1.8	250:30:7694:7696	58667	2	True				
ANR	58673	Statement	define	253:1:7772:7777	58667	3	True				
ANR	58674	Statement	CVT_H_GRANULARITY	253:8:7779:7795	58667	4	True				
ANR	58675	Statement	8	253:26:7797:7797	58667	5	True				
ANR	58676	Statement	define	256:1:7857:7862	58667	6	True				
ANR	58677	Statement	CVT_MIN_V_PORCH	256:8:7864:7878	58667	7	True				
ANR	58678	Statement	3	256:24:7880:7880	58667	8	True				
ANR	58679	Statement	define	259:1:7953:7958	58667	9	True				
ANR	58680	Statement	CVT_MIN_V_BPORCH	259:8:7960:7975	58667	10	True				
ANR	58681	Statement	6	259:25:7977:7977	58667	11	True				
ANR	58682	Statement	define	262:1:8014:8019	58667	12	True				
ANR	58683	Statement	CVT_CLOCK_STEP	262:8:8021:8034	58667	13	True				
ANR	58684	Statement	250	262:23:8036:8038	58667	14	True				
ANR	58685	Statement	define	265:1:8112:8117	58667	15	True				
ANR	58686	Statement	CVT_RB_MIN_VBLANK	265:8:8119:8135	58667	16	True				
ANR	58687	Statement	460.0	265:26:8137:8141	58667	17	True				
ANR	58688	Statement	define	268:1:8198:8203	58667	18	True				
ANR	58689	Statement	CVT_RB_H_SYNC	268:8:8205:8217	58667	19	True				
ANR	58690	Statement	32.0	268:22:8219:8222	58667	20	True				
ANR	58691	Statement	define	271:1:8283:8288	58667	21	True				
ANR	58692	Statement	CVT_RB_H_BLANK	271:8:8290:8303	58667	22	True				
ANR	58693	Statement	160.0	271:23:8305:8309	58667	23	True				
ANR	58694	Statement	define	274:1:8382:8387	58667	24	True				
ANR	58695	Statement	CVT_RB_VFPORCH	274:8:8389:8402	58667	25	True				
ANR	58696	Statement	3	274:23:8404:8404	58667	26	True				
ANR	58697	IdentifierDeclStatement	int VBILines ;	276:4:8411:8423	58667	27	True				
ANR	58698	IdentifierDecl	VBILines		58667	0					
ANR	58699	IdentifierDeclType	int		58667	0					
ANR	58700	Identifier	VBILines		58667	1					
ANR	58701	IdentifierDeclStatement	float VFieldRate = 60.0 ;	277:4:8429:8452	58667	28	True				
ANR	58702	IdentifierDecl	VFieldRate = 60.0		58667	0					
ANR	58703	IdentifierDeclType	float		58667	0					
ANR	58704	Identifier	VFieldRate		58667	1					
ANR	58705	AssignmentExpression	VFieldRate = 60.0		58667	2		=			
ANR	58706	Identifier	VFieldRate		58667	0					
ANR	58707	PrimaryExpression	60.0		58667	1					
ANR	58708	IdentifierDeclStatement	int VSync ;	278:4:8458:8467	58667	29	True				
ANR	58709	IdentifierDecl	VSync		58667	0					
ANR	58710	IdentifierDeclType	int		58667	0					
ANR	58711	Identifier	VSync		58667	1					
ANR	58712	IdentifierDeclStatement	float HPeriod ;	279:4:8473:8486	58667	30	True				
ANR	58713	IdentifierDecl	HPeriod		58667	0					
ANR	58714	IdentifierDeclType	float		58667	0					
ANR	58715	Identifier	HPeriod		58667	1					
ANR	58716	ExpressionStatement	width = width - ( width % CVT_H_GRANULARITY )	282:4:8524:8567	58667	31	True				
ANR	58717	AssignmentExpression	width = width - ( width % CVT_H_GRANULARITY )		58667	0		=			
ANR	58718	Identifier	width		58667	0					
ANR	58719	AdditiveExpression	width - ( width % CVT_H_GRANULARITY )		58667	1		-			
ANR	58720	Identifier	width		58667	0					
ANR	58721	MultiplicativeExpression	width % CVT_H_GRANULARITY		58667	1		%			
ANR	58722	Identifier	width		58667	0					
ANR	58723	Identifier	CVT_H_GRANULARITY		58667	1					
ANR	58724	ExpressionStatement	mode -> width = width	284:4:8574:8593	58667	32	True				
ANR	58725	AssignmentExpression	mode -> width = width		58667	0		=			
ANR	58726	PtrMemberAccess	mode -> width		58667	0					
ANR	58727	Identifier	mode		58667	0					
ANR	58728	Identifier	width		58667	1					
ANR	58729	Identifier	width		58667	1					
ANR	58730	ExpressionStatement	mode -> height = height	285:4:8599:8620	58667	33	True				
ANR	58731	AssignmentExpression	mode -> height = height		58667	0		=			
ANR	58732	PtrMemberAccess	mode -> height		58667	0					
ANR	58733	Identifier	mode		58667	0					
ANR	58734	Identifier	height		58667	1					
ANR	58735	Identifier	height		58667	1					
ANR	58736	ExpressionStatement	VSync = 10	286:4:8626:8636	58667	34	True				
ANR	58737	AssignmentExpression	VSync = 10		58667	0		=			
ANR	58738	Identifier	VSync		58667	0					
ANR	58739	PrimaryExpression	10		58667	1					
ANR	58740	ExpressionStatement	HPeriod = ( ( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK ) ) / height	289:4:8684:8757	58667	35	True				
ANR	58741	AssignmentExpression	HPeriod = ( ( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK ) ) / height		58667	0		=			
ANR	58742	Identifier	HPeriod		58667	0					
ANR	58743	MultiplicativeExpression	( ( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK ) ) / height		58667	1		/			
ANR	58744	CastExpression	( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK )		58667	0					
ANR	58745	CastTarget	float		58667	0					
ANR	58746	AdditiveExpression	1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK		58667	1		-			
ANR	58747	MultiplicativeExpression	1000000.0 / VFieldRate		58667	0		/			
ANR	58748	PrimaryExpression	1000000.0		58667	0					
ANR	58749	Identifier	VFieldRate		58667	1					
ANR	58750	Identifier	CVT_RB_MIN_VBLANK		58667	1					
ANR	58751	Identifier	height		58667	1					
ANR	58752	ExpressionStatement	VBILines = ( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod + 1	292:4:8819:8871	58667	36	True				
ANR	58753	AssignmentExpression	VBILines = ( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod + 1		58667	0		=			
ANR	58754	Identifier	VBILines		58667	0					
ANR	58755	AdditiveExpression	( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod + 1		58667	1		+			
ANR	58756	MultiplicativeExpression	( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod		58667	0		/			
ANR	58757	CastExpression	( float ) CVT_RB_MIN_VBLANK		58667	0					
ANR	58758	CastTarget	float		58667	0					
ANR	58759	Identifier	CVT_RB_MIN_VBLANK		58667	1					
ANR	58760	Identifier	HPeriod		58667	1					
ANR	58761	PrimaryExpression	1		58667	1					
ANR	58762	IfStatement	if ( VBILines < ( CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH ) )		58667	37					
ANR	58763	Condition	VBILines < ( CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH )	295:8:8937:8990	58667	0	True				
ANR	58764	RelationalExpression	VBILines < ( CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH )		58667	0		<			
ANR	58765	Identifier	VBILines		58667	0					
ANR	58766	AdditiveExpression	CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH		58667	1		+			
ANR	58767	Identifier	CVT_RB_VFPORCH		58667	0					
ANR	58768	AdditiveExpression	VSync + CVT_MIN_V_BPORCH		58667	1		+			
ANR	58769	Identifier	VSync		58667	0					
ANR	58770	Identifier	CVT_MIN_V_BPORCH		58667	1					
ANR	58771	ExpressionStatement	VBILines = CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH	296:8:9001:9053	58667	1	True				
ANR	58772	AssignmentExpression	VBILines = CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH		58667	0		=			
ANR	58773	Identifier	VBILines		58667	0					
ANR	58774	AdditiveExpression	CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH		58667	1		+			
ANR	58775	Identifier	CVT_RB_VFPORCH		58667	0					
ANR	58776	AdditiveExpression	VSync + CVT_MIN_V_BPORCH		58667	1		+			
ANR	58777	Identifier	VSync		58667	0					
ANR	58778	Identifier	CVT_MIN_V_BPORCH		58667	1					
ANR	58779	ExpressionStatement	mode -> vTotal = height + VBILines	299:4:9119:9151	58667	38	True				
ANR	58780	AssignmentExpression	mode -> vTotal = height + VBILines		58667	0		=			
ANR	58781	PtrMemberAccess	mode -> vTotal		58667	0					
ANR	58782	Identifier	mode		58667	0					
ANR	58783	Identifier	vTotal		58667	1					
ANR	58784	AdditiveExpression	height + VBILines		58667	1		+			
ANR	58785	Identifier	height		58667	0					
ANR	58786	Identifier	VBILines		58667	1					
ANR	58787	ExpressionStatement	mode -> hTotal = mode -> width + CVT_RB_H_BLANK	302:4:9210:9253	58667	39	True				
ANR	58788	AssignmentExpression	mode -> hTotal = mode -> width + CVT_RB_H_BLANK		58667	0		=			
ANR	58789	PtrMemberAccess	mode -> hTotal		58667	0					
ANR	58790	Identifier	mode		58667	0					
ANR	58791	Identifier	hTotal		58667	1					
ANR	58792	AdditiveExpression	mode -> width + CVT_RB_H_BLANK		58667	1		+			
ANR	58793	PtrMemberAccess	mode -> width		58667	0					
ANR	58794	Identifier	mode		58667	0					
ANR	58795	Identifier	width		58667	1					
ANR	58796	Identifier	CVT_RB_H_BLANK		58667	1					
ANR	58797	ExpressionStatement	mode -> hSyncEnd = mode -> width + CVT_RB_H_BLANK / 2	305:4:9291:9340	58667	40	True				
ANR	58798	AssignmentExpression	mode -> hSyncEnd = mode -> width + CVT_RB_H_BLANK / 2		58667	0		=			
ANR	58799	PtrMemberAccess	mode -> hSyncEnd		58667	0					
ANR	58800	Identifier	mode		58667	0					
ANR	58801	Identifier	hSyncEnd		58667	1					
ANR	58802	AdditiveExpression	mode -> width + CVT_RB_H_BLANK / 2		58667	1		+			
ANR	58803	PtrMemberAccess	mode -> width		58667	0					
ANR	58804	Identifier	mode		58667	0					
ANR	58805	Identifier	width		58667	1					
ANR	58806	MultiplicativeExpression	CVT_RB_H_BLANK / 2		58667	1		/			
ANR	58807	Identifier	CVT_RB_H_BLANK		58667	0					
ANR	58808	PrimaryExpression	2		58667	1					
ANR	58809	ExpressionStatement	mode -> hSyncStart = mode -> hSyncEnd - CVT_RB_H_SYNC	306:4:9346:9395	58667	41	True				
ANR	58810	AssignmentExpression	mode -> hSyncStart = mode -> hSyncEnd - CVT_RB_H_SYNC		58667	0		=			
ANR	58811	PtrMemberAccess	mode -> hSyncStart		58667	0					
ANR	58812	Identifier	mode		58667	0					
ANR	58813	Identifier	hSyncStart		58667	1					
ANR	58814	AdditiveExpression	mode -> hSyncEnd - CVT_RB_H_SYNC		58667	1		-			
ANR	58815	PtrMemberAccess	mode -> hSyncEnd		58667	0					
ANR	58816	Identifier	mode		58667	0					
ANR	58817	Identifier	hSyncEnd		58667	1					
ANR	58818	Identifier	CVT_RB_H_SYNC		58667	1					
ANR	58819	ExpressionStatement	mode -> vSyncStart = mode -> height + CVT_RB_VFPORCH	309:4:9433:9481	58667	42	True				
ANR	58820	AssignmentExpression	mode -> vSyncStart = mode -> height + CVT_RB_VFPORCH		58667	0		=			
ANR	58821	PtrMemberAccess	mode -> vSyncStart		58667	0					
ANR	58822	Identifier	mode		58667	0					
ANR	58823	Identifier	vSyncStart		58667	1					
ANR	58824	AdditiveExpression	mode -> height + CVT_RB_VFPORCH		58667	1		+			
ANR	58825	PtrMemberAccess	mode -> height		58667	0					
ANR	58826	Identifier	mode		58667	0					
ANR	58827	Identifier	height		58667	1					
ANR	58828	Identifier	CVT_RB_VFPORCH		58667	1					
ANR	58829	ExpressionStatement	mode -> vSyncEnd = mode -> vSyncStart + VSync	310:4:9487:9528	58667	43	True				
ANR	58830	AssignmentExpression	mode -> vSyncEnd = mode -> vSyncStart + VSync		58667	0		=			
ANR	58831	PtrMemberAccess	mode -> vSyncEnd		58667	0					
ANR	58832	Identifier	mode		58667	0					
ANR	58833	Identifier	vSyncEnd		58667	1					
ANR	58834	AdditiveExpression	mode -> vSyncStart + VSync		58667	1		+			
ANR	58835	PtrMemberAccess	mode -> vSyncStart		58667	0					
ANR	58836	Identifier	mode		58667	0					
ANR	58837	Identifier	vSyncStart		58667	1					
ANR	58838	Identifier	VSync		58667	1					
ANR	58839	ExpressionStatement	mode -> dotClock = mode -> hTotal * 1000.0 / HPeriod	313:4:9594:9642	58667	44	True				
ANR	58840	AssignmentExpression	mode -> dotClock = mode -> hTotal * 1000.0 / HPeriod		58667	0		=			
ANR	58841	PtrMemberAccess	mode -> dotClock		58667	0					
ANR	58842	Identifier	mode		58667	0					
ANR	58843	Identifier	dotClock		58667	1					
ANR	58844	MultiplicativeExpression	mode -> hTotal * 1000.0 / HPeriod		58667	1		*			
ANR	58845	PtrMemberAccess	mode -> hTotal		58667	0					
ANR	58846	Identifier	mode		58667	0					
ANR	58847	Identifier	hTotal		58667	1					
ANR	58848	MultiplicativeExpression	1000.0 / HPeriod		58667	1		/			
ANR	58849	PrimaryExpression	1000.0		58667	0					
ANR	58850	Identifier	HPeriod		58667	1					
ANR	58851	ExpressionStatement	mode -> dotClock -= mode -> dotClock % CVT_CLOCK_STEP	314:4:9648:9697	58667	45	True				
ANR	58852	AssignmentExpression	mode -> dotClock -= mode -> dotClock % CVT_CLOCK_STEP		58667	0		-=			
ANR	58853	PtrMemberAccess	mode -> dotClock		58667	0					
ANR	58854	Identifier	mode		58667	0					
ANR	58855	Identifier	dotClock		58667	1					
ANR	58856	MultiplicativeExpression	mode -> dotClock % CVT_CLOCK_STEP		58667	1		%			
ANR	58857	PtrMemberAccess	mode -> dotClock		58667	0					
ANR	58858	Identifier	mode		58667	0					
ANR	58859	Identifier	dotClock		58667	1					
ANR	58860	Identifier	CVT_CLOCK_STEP		58667	1					
ANR	58861	ReturnType	static void		58667	1					
ANR	58862	Identifier	set_reduced_cvt_mode		58667	2					
ANR	58863	ParameterList	"XRRModeInfo * mode , int width , int height"		58667	3					
ANR	58864	Parameter	XRRModeInfo * mode	243:33:7378:7394	58667	0	True				
ANR	58865	ParameterType	XRRModeInfo *		58667	0					
ANR	58866	Identifier	mode		58667	1					
ANR	58867	Parameter	int width	243:52:7397:7405	58667	1	True				
ANR	58868	ParameterType	int		58667	0					
ANR	58869	Identifier	width		58667	1					
ANR	58870	Parameter	int height	243:63:7408:7417	58667	2	True				
ANR	58871	ParameterType	int		58667	0					
ANR	58872	Identifier	height		58667	1					
ANR	58873	CFGEntryNode	ENTRY		58667		True				
ANR	58874	CFGExitNode	EXIT		58667		True				
ANR	58875	Symbol	HPeriod		58667						
ANR	58876	Symbol	mode -> hTotal		58667						
ANR	58877	Symbol	VFieldRate		58667						
ANR	58878	Symbol	mode -> hSyncEnd		58667						
ANR	58879	Symbol	mode -> vSyncEnd		58667						
ANR	58880	Symbol	mode -> height		58667						
ANR	58881	Symbol	CVT_CLOCK_STEP		58667						
ANR	58882	Symbol	mode -> dotClock		58667						
ANR	58883	Symbol	CVT_RB_H_SYNC		58667						
ANR	58884	Symbol	mode -> vSyncStart		58667						
ANR	58885	Symbol	mode -> width		58667						
ANR	58886	Symbol	CVT_H_GRANULARITY		58667						
ANR	58887	Symbol	CVT_RB_MIN_VBLANK		58667						
ANR	58888	Symbol	mode		58667						
ANR	58889	Symbol	VBILines		58667						
ANR	58890	Symbol	VSync		58667						
ANR	58891	Symbol	mode -> vTotal		58667						
ANR	58892	Symbol	mode -> hSyncStart		58667						
ANR	58893	Symbol	width		58667						
ANR	58894	Symbol	* mode		58667						
ANR	58895	Symbol	CVT_RB_H_BLANK		58667						
ANR	58896	Symbol	CVT_RB_VFPORCH		58667						
ANR	58897	Symbol	height		58667						
ANR	58898	Symbol	CVT_MIN_V_BPORCH		58667						
ANR	58899	Function	create_new_mode	318:0:9703:10504							
ANR	58900	FunctionDef	"create_new_mode (struct vdagent_x11 * x11 , int output_index , int width , int height)"		58899	0					
ANR	58901	CompoundStatement		320:0:9841:10504	58899	0					
ANR	58902	IdentifierDeclStatement	char modename [ 20 ] ;	321:4:9847:9864	58899	0	True				
ANR	58903	IdentifierDecl	modename [ 20 ]		58899	0					
ANR	58904	IdentifierDeclType	char [ 20 ]		58899	0					
ANR	58905	Identifier	modename		58899	1					
ANR	58906	PrimaryExpression	20		58899	2					
ANR	58907	IdentifierDeclStatement	XRRModeInfo mode ;	322:4:9870:9886	58899	1	True				
ANR	58908	IdentifierDecl	mode		58899	0					
ANR	58909	IdentifierDeclType	XRRModeInfo		58899	0					
ANR	58910	Identifier	mode		58899	1					
ANR	58911	ExpressionStatement	"snprintf ( modename , sizeof ( modename ) , ""%dx%d-%d"" , width , height , output_index )"	324:4:9893:9970	58899	2	True				
ANR	58912	CallExpression	"snprintf ( modename , sizeof ( modename ) , ""%dx%d-%d"" , width , height , output_index )"		58899	0					
ANR	58913	Callee	snprintf		58899	0					
ANR	58914	Identifier	snprintf		58899	0					
ANR	58915	ArgumentList	modename		58899	1					
ANR	58916	Argument	modename		58899	0					
ANR	58917	Identifier	modename		58899	0					
ANR	58918	Argument	sizeof ( modename )		58899	1					
ANR	58919	SizeofExpression	sizeof ( modename )		58899	0					
ANR	58920	Sizeof	sizeof		58899	0					
ANR	58921	SizeofOperand	modename		58899	1					
ANR	58922	Argument	"""%dx%d-%d"""		58899	2					
ANR	58923	PrimaryExpression	"""%dx%d-%d"""		58899	0					
ANR	58924	Argument	width		58899	3					
ANR	58925	Identifier	width		58899	0					
ANR	58926	Argument	height		58899	4					
ANR	58927	Identifier	height		58899	0					
ANR	58928	Argument	output_index		58899	5					
ANR	58929	Identifier	output_index		58899	0					
ANR	58930	ExpressionStatement	mode . hSkew = 0	325:4:9976:9990	58899	3	True				
ANR	58931	AssignmentExpression	mode . hSkew = 0		58899	0		=			
ANR	58932	MemberAccess	mode . hSkew		58899	0					
ANR	58933	Identifier	mode		58899	0					
ANR	58934	Identifier	hSkew		58899	1					
ANR	58935	PrimaryExpression	0		58899	1					
ANR	58936	ExpressionStatement	mode . name = modename	326:4:9996:10016	58899	4	True				
ANR	58937	AssignmentExpression	mode . name = modename		58899	0		=			
ANR	58938	MemberAccess	mode . name		58899	0					
ANR	58939	Identifier	mode		58899	0					
ANR	58940	Identifier	name		58899	1					
ANR	58941	Identifier	modename		58899	1					
ANR	58942	ExpressionStatement	mode . nameLength = strlen ( mode . name )	327:4:10022:10057	58899	5	True				
ANR	58943	AssignmentExpression	mode . nameLength = strlen ( mode . name )		58899	0		=			
ANR	58944	MemberAccess	mode . nameLength		58899	0					
ANR	58945	Identifier	mode		58899	0					
ANR	58946	Identifier	nameLength		58899	1					
ANR	58947	CallExpression	strlen ( mode . name )		58899	1					
ANR	58948	Callee	strlen		58899	0					
ANR	58949	Identifier	strlen		58899	0					
ANR	58950	ArgumentList	mode . name		58899	1					
ANR	58951	Argument	mode . name		58899	0					
ANR	58952	MemberAccess	mode . name		58899	0					
ANR	58953	Identifier	mode		58899	0					
ANR	58954	Identifier	name		58899	1					
ANR	58955	ExpressionStatement	"set_reduced_cvt_mode ( & mode , width , height )"	328:4:10063:10105	58899	6	True				
ANR	58956	CallExpression	"set_reduced_cvt_mode ( & mode , width , height )"		58899	0					
ANR	58957	Callee	set_reduced_cvt_mode		58899	0					
ANR	58958	Identifier	set_reduced_cvt_mode		58899	0					
ANR	58959	ArgumentList	& mode		58899	1					
ANR	58960	Argument	& mode		58899	0					
ANR	58961	UnaryOperationExpression	& mode		58899	0					
ANR	58962	UnaryOperator	&		58899	0					
ANR	58963	Identifier	mode		58899	1					
ANR	58964	Argument	width		58899	1					
ANR	58965	Identifier	width		58899	0					
ANR	58966	Argument	height		58899	2					
ANR	58967	Identifier	height		58899	0					
ANR	58968	ExpressionStatement	mode . modeFlags = 0	329:4:10111:10129	58899	7	True				
ANR	58969	AssignmentExpression	mode . modeFlags = 0		58899	0		=			
ANR	58970	MemberAccess	mode . modeFlags		58899	0					
ANR	58971	Identifier	mode		58899	0					
ANR	58972	Identifier	modeFlags		58899	1					
ANR	58973	PrimaryExpression	0		58899	1					
ANR	58974	ExpressionStatement	mode . id = 0	330:4:10135:10146	58899	8	True				
ANR	58975	AssignmentExpression	mode . id = 0		58899	0		=			
ANR	58976	MemberAccess	mode . id		58899	0					
ANR	58977	Identifier	mode		58899	0					
ANR	58978	Identifier	id		58899	1					
ANR	58979	PrimaryExpression	0		58899	1					
ANR	58980	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	331:4:10152:10201	58899	9	True				
ANR	58981	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		58899	0					
ANR	58982	Callee	vdagent_x11_set_error_handler		58899	0					
ANR	58983	Identifier	vdagent_x11_set_error_handler		58899	0					
ANR	58984	ArgumentList	x11		58899	1					
ANR	58985	Argument	x11		58899	0					
ANR	58986	Identifier	x11		58899	0					
ANR	58987	Argument	error_handler		58899	1					
ANR	58988	Identifier	error_handler		58899	0					
ANR	58989	ExpressionStatement	"XRRCreateMode ( x11 -> display , x11 -> root_window [ 0 ] , & mode )"	332:4:10207:10263	58899	10	True				
ANR	58990	CallExpression	"XRRCreateMode ( x11 -> display , x11 -> root_window [ 0 ] , & mode )"		58899	0					
ANR	58991	Callee	XRRCreateMode		58899	0					
ANR	58992	Identifier	XRRCreateMode		58899	0					
ANR	58993	ArgumentList	x11 -> display		58899	1					
ANR	58994	Argument	x11 -> display		58899	0					
ANR	58995	PtrMemberAccess	x11 -> display		58899	0					
ANR	58996	Identifier	x11		58899	0					
ANR	58997	Identifier	display		58899	1					
ANR	58998	Argument	x11 -> root_window [ 0 ]		58899	1					
ANR	58999	ArrayIndexing	x11 -> root_window [ 0 ]		58899	0					
ANR	59000	PtrMemberAccess	x11 -> root_window		58899	0					
ANR	59001	Identifier	x11		58899	0					
ANR	59002	Identifier	root_window		58899	1					
ANR	59003	PrimaryExpression	0		58899	1					
ANR	59004	Argument	& mode		58899	2					
ANR	59005	UnaryOperationExpression	& mode		58899	0					
ANR	59006	UnaryOperator	&		58899	0					
ANR	59007	Identifier	mode		58899	1					
ANR	59008	ExpressionStatement	vdagent_x11_restore_error_handler ( x11 )	334:4:10324:10362	58899	11	True				
ANR	59009	CallExpression	vdagent_x11_restore_error_handler ( x11 )		58899	0					
ANR	59010	Callee	vdagent_x11_restore_error_handler		58899	0					
ANR	59011	Identifier	vdagent_x11_restore_error_handler		58899	0					
ANR	59012	ArgumentList	x11		58899	1					
ANR	59013	Argument	x11		58899	0					
ANR	59014	Identifier	x11		58899	0					
ANR	59015	ExpressionStatement	"update_randr_res ( x11 , 0 )"	337:4:10432:10456	58899	12	True				
ANR	59016	CallExpression	"update_randr_res ( x11 , 0 )"		58899	0					
ANR	59017	Callee	update_randr_res		58899	0					
ANR	59018	Identifier	update_randr_res		58899	0					
ANR	59019	ArgumentList	x11		58899	1					
ANR	59020	Argument	x11		58899	0					
ANR	59021	Identifier	x11		58899	0					
ANR	59022	Argument	0		58899	1					
ANR	59023	PrimaryExpression	0		58899	0					
ANR	59024	ReturnStatement	"return find_mode_by_name ( x11 , modename ) ;"	339:4:10463:10502	58899	13	True				
ANR	59025	CallExpression	"find_mode_by_name ( x11 , modename )"		58899	0					
ANR	59026	Callee	find_mode_by_name		58899	0					
ANR	59027	Identifier	find_mode_by_name		58899	0					
ANR	59028	ArgumentList	x11		58899	1					
ANR	59029	Argument	x11		58899	0					
ANR	59030	Identifier	x11		58899	0					
ANR	59031	Argument	modename		58899	1					
ANR	59032	Identifier	modename		58899	0					
ANR	59033	ReturnType	static XRRModeInfo *		58899	1					
ANR	59034	Identifier	create_new_mode		58899	2					
ANR	59035	ParameterList	"struct vdagent_x11 * x11 , int output_index , int width , int height"		58899	3					
ANR	59036	Parameter	struct vdagent_x11 * x11	318:36:9739:9761	58899	0	True				
ANR	59037	ParameterType	struct vdagent_x11 *		58899	0					
ANR	59038	Identifier	x11		58899	1					
ANR	59039	Parameter	int output_index	318:61:9764:9779	58899	1	True				
ANR	59040	ParameterType	int		58899	0					
ANR	59041	Identifier	output_index		58899	1					
ANR	59042	Parameter	int width	319:36:9818:9826	58899	2	True				
ANR	59043	ParameterType	int		58899	0					
ANR	59044	Identifier	width		58899	1					
ANR	59045	Parameter	int height	319:47:9829:9838	58899	3	True				
ANR	59046	ParameterType	int		58899	0					
ANR	59047	Identifier	height		58899	1					
ANR	59048	CFGEntryNode	ENTRY		58899		True				
ANR	59049	CFGExitNode	EXIT		58899		True				
ANR	59050	Symbol	error_handler		58899						
ANR	59051	Symbol	* x11		58899						
ANR	59052	Symbol	output_index		58899						
ANR	59053	Symbol	mode . id		58899						
ANR	59054	Symbol	x11 -> root_window		58899						
ANR	59055	Symbol	* * x11		58899						
ANR	59056	Symbol	mode		58899						
ANR	59057	Symbol	mode . nameLength		58899						
ANR	59058	Symbol	strlen		58899						
ANR	59059	Symbol	& mode		58899						
ANR	59060	Symbol	x11 -> display		58899						
ANR	59061	Symbol	modename		58899						
ANR	59062	Symbol	width		58899						
ANR	59063	Symbol	* x11 -> root_window		58899						
ANR	59064	Symbol	x11		58899						
ANR	59065	Symbol	find_mode_by_name		58899						
ANR	59066	Symbol	mode . name		58899						
ANR	59067	Symbol	mode . modeFlags		58899						
ANR	59068	Symbol	mode . hSkew		58899						
ANR	59069	Symbol	height		58899						
ANR	59070	Function	xrandr_add_and_set	342:0:10507:12257							
ANR	59071	FunctionDef	"xrandr_add_and_set (struct vdagent_x11 * x11 , int output , int x , int y , int width , int height)"		59070	0					
ANR	59072	CompoundStatement		344:0:10641:12257	59070	0					
ANR	59073	IdentifierDeclStatement	XRRModeInfo * mode ;	345:4:10647:10664	59070	0	True				
ANR	59074	IdentifierDecl	* mode		59070	0					
ANR	59075	IdentifierDeclType	XRRModeInfo *		59070	0					
ANR	59076	Identifier	mode		59070	1					
ANR	59077	IdentifierDeclStatement	int xid ;	346:4:10670:10677	59070	1	True				
ANR	59078	IdentifierDecl	xid		59070	0					
ANR	59079	IdentifierDeclType	int		59070	0					
ANR	59080	Identifier	xid		59070	1					
ANR	59081	IdentifierDeclStatement	Status s ;	347:4:10683:10691	59070	2	True				
ANR	59082	IdentifierDecl	s		59070	0					
ANR	59083	IdentifierDeclType	Status		59070	0					
ANR	59084	Identifier	s		59070	1					
ANR	59085	IdentifierDeclStatement	RROutput outputs [ 1 ] ;	348:4:10697:10716	59070	3	True				
ANR	59086	IdentifierDecl	outputs [ 1 ]		59070	0					
ANR	59087	IdentifierDeclType	RROutput [ 1 ]		59070	0					
ANR	59088	Identifier	outputs		59070	1					
ANR	59089	PrimaryExpression	1		59070	2					
ANR	59090	IdentifierDeclStatement	int old_width = x11 -> randr . monitor_sizes [ output ] . width ;	349:4:10722:10777	59070	4	True				
ANR	59091	IdentifierDecl	old_width = x11 -> randr . monitor_sizes [ output ] . width		59070	0					
ANR	59092	IdentifierDeclType	int		59070	0					
ANR	59093	Identifier	old_width		59070	1					
ANR	59094	AssignmentExpression	old_width = x11 -> randr . monitor_sizes [ output ] . width		59070	2		=			
ANR	59095	Identifier	old_width		59070	0					
ANR	59096	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		59070	1					
ANR	59097	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59070	0					
ANR	59098	MemberAccess	x11 -> randr . monitor_sizes		59070	0					
ANR	59099	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59100	Identifier	x11		59070	0					
ANR	59101	Identifier	randr		59070	1					
ANR	59102	Identifier	monitor_sizes		59070	1					
ANR	59103	Identifier	output		59070	1					
ANR	59104	Identifier	width		59070	1					
ANR	59105	IdentifierDeclStatement	int old_height = x11 -> randr . monitor_sizes [ output ] . height ;	350:4:10783:10839	59070	5	True				
ANR	59106	IdentifierDecl	old_height = x11 -> randr . monitor_sizes [ output ] . height		59070	0					
ANR	59107	IdentifierDeclType	int		59070	0					
ANR	59108	Identifier	old_height		59070	1					
ANR	59109	AssignmentExpression	old_height = x11 -> randr . monitor_sizes [ output ] . height		59070	2		=			
ANR	59110	Identifier	old_height		59070	0					
ANR	59111	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		59070	1					
ANR	59112	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59070	0					
ANR	59113	MemberAccess	x11 -> randr . monitor_sizes		59070	0					
ANR	59114	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59115	Identifier	x11		59070	0					
ANR	59116	Identifier	randr		59070	1					
ANR	59117	Identifier	monitor_sizes		59070	1					
ANR	59118	Identifier	output		59070	1					
ANR	59119	Identifier	height		59070	1					
ANR	59120	IfStatement	if ( ! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0 )		59070	6					
ANR	59121	Condition	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0	352:8:10850:10915	59070	0	True				
ANR	59122	OrExpression	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0		59070	0		||			
ANR	59123	UnaryOperationExpression	! x11 -> randr . res		59070	0					
ANR	59124	UnaryOperator	!		59070	0					
ANR	59125	MemberAccess	x11 -> randr . res		59070	1					
ANR	59126	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59127	Identifier	x11		59070	0					
ANR	59128	Identifier	randr		59070	1					
ANR	59129	Identifier	res		59070	1					
ANR	59130	OrExpression	output >= x11 -> randr . res -> noutput || output < 0		59070	1		||			
ANR	59131	RelationalExpression	output >= x11 -> randr . res -> noutput		59070	0		>=			
ANR	59132	Identifier	output		59070	0					
ANR	59133	PtrMemberAccess	x11 -> randr . res -> noutput		59070	1					
ANR	59134	MemberAccess	x11 -> randr . res		59070	0					
ANR	59135	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59136	Identifier	x11		59070	0					
ANR	59137	Identifier	randr		59070	1					
ANR	59138	Identifier	res		59070	1					
ANR	59139	Identifier	noutput		59070	1					
ANR	59140	RelationalExpression	output < 0		59070	1		<			
ANR	59141	Identifier	output		59070	0					
ANR	59142	PrimaryExpression	0		59070	1					
ANR	59143	CompoundStatement		9:76:276:276	59070	1					
ANR	59144	ExpressionStatement	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"	353:8:10928:11022	59070	0	True				
ANR	59145	CallExpression	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"		59070	0					
ANR	59146	Callee	syslog		59070	0					
ANR	59147	Identifier	syslog		59070	0					
ANR	59148	ArgumentList	LOG_ERR		59070	1					
ANR	59149	Argument	LOG_ERR		59070	0					
ANR	59150	Identifier	LOG_ERR		59070	0					
ANR	59151	Argument	"""%s: program error: missing RANDR or bad output"""		59070	1					
ANR	59152	PrimaryExpression	"""%s: program error: missing RANDR or bad output"""		59070	0					
ANR	59153	Argument	__FUNCTION__		59070	2					
ANR	59154	Identifier	__FUNCTION__		59070	0					
ANR	59155	ReturnStatement	return 0 ;	355:8:11032:11040	59070	1	True				
ANR	59156	PrimaryExpression	0		59070	0					
ANR	59157	IfStatement	if ( x11 -> set_crtc_config_not_functional )		59070	7					
ANR	59158	Condition	x11 -> set_crtc_config_not_functional	357:8:11056:11090	59070	0	True				
ANR	59159	PtrMemberAccess	x11 -> set_crtc_config_not_functional		59070	0					
ANR	59160	Identifier	x11		59070	0					
ANR	59161	Identifier	set_crtc_config_not_functional		59070	1					
ANR	59162	CompoundStatement		14:45:451:451	59070	1					
ANR	59163	ReturnStatement	return 0 ;	359:8:11164:11172	59070	0	True				
ANR	59164	PrimaryExpression	0		59070	0					
ANR	59165	ExpressionStatement	xid = x11 -> randr . res -> outputs [ output ]	361:4:11184:11221	59070	8	True				
ANR	59166	AssignmentExpression	xid = x11 -> randr . res -> outputs [ output ]		59070	0		=			
ANR	59167	Identifier	xid		59070	0					
ANR	59168	ArrayIndexing	x11 -> randr . res -> outputs [ output ]		59070	1					
ANR	59169	PtrMemberAccess	x11 -> randr . res -> outputs		59070	0					
ANR	59170	MemberAccess	x11 -> randr . res		59070	0					
ANR	59171	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59172	Identifier	x11		59070	0					
ANR	59173	Identifier	randr		59070	1					
ANR	59174	Identifier	res		59070	1					
ANR	59175	Identifier	outputs		59070	1					
ANR	59176	Identifier	output		59070	1					
ANR	59177	ExpressionStatement	"mode = find_mode_by_size ( x11 , output , width , height )"	362:4:11227:11279	59070	9	True				
ANR	59178	AssignmentExpression	"mode = find_mode_by_size ( x11 , output , width , height )"		59070	0		=			
ANR	59179	Identifier	mode		59070	0					
ANR	59180	CallExpression	"find_mode_by_size ( x11 , output , width , height )"		59070	1					
ANR	59181	Callee	find_mode_by_size		59070	0					
ANR	59182	Identifier	find_mode_by_size		59070	0					
ANR	59183	ArgumentList	x11		59070	1					
ANR	59184	Argument	x11		59070	0					
ANR	59185	Identifier	x11		59070	0					
ANR	59186	Argument	output		59070	1					
ANR	59187	Identifier	output		59070	0					
ANR	59188	Argument	width		59070	2					
ANR	59189	Identifier	width		59070	0					
ANR	59190	Argument	height		59070	3					
ANR	59191	Identifier	height		59070	0					
ANR	59192	IfStatement	if ( ! mode )		59070	10					
ANR	59193	Condition	! mode	363:8:11289:11293	59070	0	True				
ANR	59194	UnaryOperationExpression	! mode		59070	0					
ANR	59195	UnaryOperator	!		59070	0					
ANR	59196	Identifier	mode		59070	1					
ANR	59197	CompoundStatement		20:15:654:654	59070	1					
ANR	59198	ExpressionStatement	"mode = create_new_mode ( x11 , output , width , height )"	364:8:11306:11356	59070	0	True				
ANR	59199	AssignmentExpression	"mode = create_new_mode ( x11 , output , width , height )"		59070	0		=			
ANR	59200	Identifier	mode		59070	0					
ANR	59201	CallExpression	"create_new_mode ( x11 , output , width , height )"		59070	1					
ANR	59202	Callee	create_new_mode		59070	0					
ANR	59203	Identifier	create_new_mode		59070	0					
ANR	59204	ArgumentList	x11		59070	1					
ANR	59205	Argument	x11		59070	0					
ANR	59206	Identifier	x11		59070	0					
ANR	59207	Argument	output		59070	1					
ANR	59208	Identifier	output		59070	0					
ANR	59209	Argument	width		59070	2					
ANR	59210	Identifier	width		59070	0					
ANR	59211	Argument	height		59070	3					
ANR	59212	Identifier	height		59070	0					
ANR	59213	IfStatement	if ( ! mode )		59070	11					
ANR	59214	Condition	! mode	366:8:11372:11376	59070	0	True				
ANR	59215	UnaryOperationExpression	! mode		59070	0					
ANR	59216	UnaryOperator	!		59070	0					
ANR	59217	Identifier	mode		59070	1					
ANR	59218	CompoundStatement		23:15:737:737	59070	1					
ANR	59219	ExpressionStatement	"syslog ( LOG_ERR , ""failed to add a new mode"" )"	367:8:11389:11432	59070	0	True				
ANR	59220	CallExpression	"syslog ( LOG_ERR , ""failed to add a new mode"" )"		59070	0					
ANR	59221	Callee	syslog		59070	0					
ANR	59222	Identifier	syslog		59070	0					
ANR	59223	ArgumentList	LOG_ERR		59070	1					
ANR	59224	Argument	LOG_ERR		59070	0					
ANR	59225	Identifier	LOG_ERR		59070	0					
ANR	59226	Argument	"""failed to add a new mode"""		59070	1					
ANR	59227	PrimaryExpression	"""failed to add a new mode"""		59070	0					
ANR	59228	ReturnStatement	return 0 ;	368:8:11442:11450	59070	1	True				
ANR	59229	PrimaryExpression	0		59070	0					
ANR	59230	ExpressionStatement	"XRRAddOutputMode ( x11 -> display , xid , mode -> id )"	370:4:11462:11507	59070	12	True				
ANR	59231	CallExpression	"XRRAddOutputMode ( x11 -> display , xid , mode -> id )"		59070	0					
ANR	59232	Callee	XRRAddOutputMode		59070	0					
ANR	59233	Identifier	XRRAddOutputMode		59070	0					
ANR	59234	ArgumentList	x11 -> display		59070	1					
ANR	59235	Argument	x11 -> display		59070	0					
ANR	59236	PtrMemberAccess	x11 -> display		59070	0					
ANR	59237	Identifier	x11		59070	0					
ANR	59238	Identifier	display		59070	1					
ANR	59239	Argument	xid		59070	1					
ANR	59240	Identifier	xid		59070	0					
ANR	59241	Argument	mode -> id		59070	2					
ANR	59242	PtrMemberAccess	mode -> id		59070	0					
ANR	59243	Identifier	mode		59070	0					
ANR	59244	Identifier	id		59070	1					
ANR	59245	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . width = width	371:4:11513:11559	59070	13	True				
ANR	59246	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . width = width		59070	0		=			
ANR	59247	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		59070	0					
ANR	59248	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59070	0					
ANR	59249	MemberAccess	x11 -> randr . monitor_sizes		59070	0					
ANR	59250	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59251	Identifier	x11		59070	0					
ANR	59252	Identifier	randr		59070	1					
ANR	59253	Identifier	monitor_sizes		59070	1					
ANR	59254	Identifier	output		59070	1					
ANR	59255	Identifier	width		59070	1					
ANR	59256	Identifier	width		59070	1					
ANR	59257	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . height = height	372:4:11565:11613	59070	14	True				
ANR	59258	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . height = height		59070	0		=			
ANR	59259	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		59070	0					
ANR	59260	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59070	0					
ANR	59261	MemberAccess	x11 -> randr . monitor_sizes		59070	0					
ANR	59262	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59263	Identifier	x11		59070	0					
ANR	59264	Identifier	randr		59070	1					
ANR	59265	Identifier	monitor_sizes		59070	1					
ANR	59266	Identifier	output		59070	1					
ANR	59267	Identifier	height		59070	1					
ANR	59268	Identifier	height		59070	1					
ANR	59269	ExpressionStatement	outputs [ 0 ] = xid	373:4:11619:11635	59070	15	True				
ANR	59270	AssignmentExpression	outputs [ 0 ] = xid		59070	0		=			
ANR	59271	ArrayIndexing	outputs [ 0 ]		59070	0					
ANR	59272	Identifier	outputs		59070	0					
ANR	59273	PrimaryExpression	0		59070	1					
ANR	59274	Identifier	xid		59070	1					
ANR	59275	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	374:4:11641:11690	59070	16	True				
ANR	59276	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		59070	0					
ANR	59277	Callee	vdagent_x11_set_error_handler		59070	0					
ANR	59278	Identifier	vdagent_x11_set_error_handler		59070	0					
ANR	59279	ArgumentList	x11		59070	1					
ANR	59280	Argument	x11		59070	0					
ANR	59281	Identifier	x11		59070	0					
ANR	59282	Argument	error_handler		59070	1					
ANR	59283	Identifier	error_handler		59070	0					
ANR	59284	ExpressionStatement	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , x , y , mode -> id , RR_Rotate_0 , outputs , 1 )"	375:4:11696:11881	59070	17	True				
ANR	59285	AssignmentExpression	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , x , y , mode -> id , RR_Rotate_0 , outputs , 1 )"		59070	0		=			
ANR	59286	Identifier	s		59070	0					
ANR	59287	CallExpression	"XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , x , y , mode -> id , RR_Rotate_0 , outputs , 1 )"		59070	1					
ANR	59288	Callee	XRRSetCrtcConfig		59070	0					
ANR	59289	Identifier	XRRSetCrtcConfig		59070	0					
ANR	59290	ArgumentList	x11 -> display		59070	1					
ANR	59291	Argument	x11 -> display		59070	0					
ANR	59292	PtrMemberAccess	x11 -> display		59070	0					
ANR	59293	Identifier	x11		59070	0					
ANR	59294	Identifier	display		59070	1					
ANR	59295	Argument	x11 -> randr . res		59070	1					
ANR	59296	MemberAccess	x11 -> randr . res		59070	0					
ANR	59297	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59298	Identifier	x11		59070	0					
ANR	59299	Identifier	randr		59070	1					
ANR	59300	Identifier	res		59070	1					
ANR	59301	Argument	x11 -> randr . res -> crtcs [ output ]		59070	2					
ANR	59302	ArrayIndexing	x11 -> randr . res -> crtcs [ output ]		59070	0					
ANR	59303	PtrMemberAccess	x11 -> randr . res -> crtcs		59070	0					
ANR	59304	MemberAccess	x11 -> randr . res		59070	0					
ANR	59305	PtrMemberAccess	x11 -> randr		59070	0					
ANR	59306	Identifier	x11		59070	0					
ANR	59307	Identifier	randr		59070	1					
ANR	59308	Identifier	res		59070	1					
ANR	59309	Identifier	crtcs		59070	1					
ANR	59310	Identifier	output		59070	1					
ANR	59311	Argument	CurrentTime		59070	3					
ANR	59312	Identifier	CurrentTime		59070	0					
ANR	59313	Argument	x		59070	4					
ANR	59314	Identifier	x		59070	0					
ANR	59315	Argument	y		59070	5					
ANR	59316	Identifier	y		59070	0					
ANR	59317	Argument	mode -> id		59070	6					
ANR	59318	PtrMemberAccess	mode -> id		59070	0					
ANR	59319	Identifier	mode		59070	0					
ANR	59320	Identifier	id		59070	1					
ANR	59321	Argument	RR_Rotate_0		59070	7					
ANR	59322	Identifier	RR_Rotate_0		59070	0					
ANR	59323	Argument	outputs		59070	8					
ANR	59324	Identifier	outputs		59070	0					
ANR	59325	Argument	1		59070	9					
ANR	59326	PrimaryExpression	1		59070	0					
ANR	59327	IfStatement	if ( vdagent_x11_restore_error_handler ( x11 ) || ( s != RRSetConfigSuccess ) )		59070	18					
ANR	59328	Condition	vdagent_x11_restore_error_handler ( x11 ) || ( s != RRSetConfigSuccess )	378:8:11891:11957	59070	0	True				
ANR	59329	OrExpression	vdagent_x11_restore_error_handler ( x11 ) || ( s != RRSetConfigSuccess )		59070	0		||			
ANR	59330	CallExpression	vdagent_x11_restore_error_handler ( x11 )		59070	0					
ANR	59331	Callee	vdagent_x11_restore_error_handler		59070	0					
ANR	59332	Identifier	vdagent_x11_restore_error_handler		59070	0					
ANR	59333	ArgumentList	x11		59070	1					
ANR	59334	Argument	x11		59070	0					
ANR	59335	Identifier	x11		59070	0					
ANR	59336	EqualityExpression	s != RRSetConfigSuccess		59070	1		!=			
ANR	59337	Identifier	s		59070	0					
ANR	59338	Identifier	RRSetConfigSuccess		59070	1					
ANR	59339	CompoundStatement		35:77:1318:1318	59070	1					
ANR	59340	ExpressionStatement	"syslog ( LOG_ERR , ""failed to XRRSetCrtcConfig"" )"	379:8:11970:12015	59070	0	True				
ANR	59341	CallExpression	"syslog ( LOG_ERR , ""failed to XRRSetCrtcConfig"" )"		59070	0					
ANR	59342	Callee	syslog		59070	0					
ANR	59343	Identifier	syslog		59070	0					
ANR	59344	ArgumentList	LOG_ERR		59070	1					
ANR	59345	Argument	LOG_ERR		59070	0					
ANR	59346	Identifier	LOG_ERR		59070	0					
ANR	59347	Argument	"""failed to XRRSetCrtcConfig"""		59070	1					
ANR	59348	PrimaryExpression	"""failed to XRRSetCrtcConfig"""		59070	0					
ANR	59349	ExpressionStatement	x11 -> set_crtc_config_not_functional = 1	380:8:12025:12064	59070	1	True				
ANR	59350	AssignmentExpression	x11 -> set_crtc_config_not_functional = 1		59070	0		=			
ANR	59351	PtrMemberAccess	x11 -> set_crtc_config_not_functional		59070	0					
ANR	59352	Identifier	x11		59070	0					
ANR	59353	Identifier	set_crtc_config_not_functional		59070	1					
ANR	59354	PrimaryExpression	1		59070	1					
ANR	59355	ReturnStatement	return 0 ;	381:8:12074:12082	59070	2	True				
ANR	59356	PrimaryExpression	0		59070	0					
ANR	59357	IfStatement	if ( width != old_width || height != old_height )		59070	19					
ANR	59358	Condition	width != old_width || height != old_height	385:8:12141:12182	59070	0	True				
ANR	59359	OrExpression	width != old_width || height != old_height		59070	0		||			
ANR	59360	EqualityExpression	width != old_width		59070	0		!=			
ANR	59361	Identifier	width		59070	0					
ANR	59362	Identifier	old_width		59070	1					
ANR	59363	EqualityExpression	height != old_height		59070	1		!=			
ANR	59364	Identifier	height		59070	0					
ANR	59365	Identifier	old_height		59070	1					
ANR	59366	ExpressionStatement	"delete_mode ( x11 , output , old_width , old_height )"	386:8:12193:12240	59070	1	True				
ANR	59367	CallExpression	"delete_mode ( x11 , output , old_width , old_height )"		59070	0					
ANR	59368	Callee	delete_mode		59070	0					
ANR	59369	Identifier	delete_mode		59070	0					
ANR	59370	ArgumentList	x11		59070	1					
ANR	59371	Argument	x11		59070	0					
ANR	59372	Identifier	x11		59070	0					
ANR	59373	Argument	output		59070	1					
ANR	59374	Identifier	output		59070	0					
ANR	59375	Argument	old_width		59070	2					
ANR	59376	Identifier	old_width		59070	0					
ANR	59377	Argument	old_height		59070	3					
ANR	59378	Identifier	old_height		59070	0					
ANR	59379	ReturnStatement	return 1 ;	388:4:12247:12255	59070	20	True				
ANR	59380	PrimaryExpression	1		59070	0					
ANR	59381	ReturnType	static int		59070	1					
ANR	59382	Identifier	xrandr_add_and_set		59070	2					
ANR	59383	ParameterList	"struct vdagent_x11 * x11 , int output , int x , int y , int width , int height"		59070	3					
ANR	59384	Parameter	struct vdagent_x11 * x11	342:30:10537:10559	59070	0	True				
ANR	59385	ParameterType	struct vdagent_x11 *		59070	0					
ANR	59386	Identifier	x11		59070	1					
ANR	59387	Parameter	int output	342:55:10562:10571	59070	1	True				
ANR	59388	ParameterType	int		59070	0					
ANR	59389	Identifier	output		59070	1					
ANR	59390	Parameter	int x	342:67:10574:10578	59070	2	True				
ANR	59391	ParameterType	int		59070	0					
ANR	59392	Identifier	x		59070	1					
ANR	59393	Parameter	int y	342:74:10581:10585	59070	3	True				
ANR	59394	ParameterType	int		59070	0					
ANR	59395	Identifier	y		59070	1					
ANR	59396	Parameter	int width	343:30:10618:10626	59070	4	True				
ANR	59397	ParameterType	int		59070	0					
ANR	59398	Identifier	width		59070	1					
ANR	59399	Parameter	int height	343:41:10629:10638	59070	5	True				
ANR	59400	ParameterType	int		59070	0					
ANR	59401	Identifier	height		59070	1					
ANR	59402	CFGEntryNode	ENTRY		59070		True				
ANR	59403	CFGExitNode	EXIT		59070		True				
ANR	59404	Symbol	outputs		59070						
ANR	59405	Symbol	* x11 -> randr . res -> outputs		59070						
ANR	59406	Symbol	* x11		59070						
ANR	59407	Symbol	error_handler		59070						
ANR	59408	Symbol	x11 -> randr . monitor_sizes [ output ] . width		59070						
ANR	59409	Symbol	mode -> id		59070						
ANR	59410	Symbol	x11 -> randr		59070						
ANR	59411	Symbol	* x11 -> randr . monitor_sizes		59070						
ANR	59412	Symbol	* x11 -> randr . res		59070						
ANR	59413	Symbol	RRSetConfigSuccess		59070						
ANR	59414	Symbol	output		59070						
ANR	59415	Symbol	mode		59070						
ANR	59416	Symbol	xid		59070						
ANR	59417	Symbol	x11 -> randr . res -> noutput		59070						
ANR	59418	Symbol	* * * x11		59070						
ANR	59419	Symbol	* * x11 -> randr . res		59070						
ANR	59420	Symbol	LOG_ERR		59070						
ANR	59421	Symbol	x11		59070						
ANR	59422	Symbol	old_width		59070						
ANR	59423	Symbol	XRRSetCrtcConfig		59070						
ANR	59424	Symbol	x11 -> randr . monitor_sizes [ output ] . height		59070						
ANR	59425	Symbol	* * x11 -> randr		59070						
ANR	59426	Symbol	x11 -> randr . res -> outputs		59070						
ANR	59427	Symbol	height		59070						
ANR	59428	Symbol	x11 -> set_crtc_config_not_functional		59070						
ANR	59429	Symbol	old_height		59070						
ANR	59430	Symbol	RR_Rotate_0		59070						
ANR	59431	Symbol	x11 -> randr . monitor_sizes		59070						
ANR	59432	Symbol	* * x11		59070						
ANR	59433	Symbol	* outputs		59070						
ANR	59434	Symbol	* x11 -> randr		59070						
ANR	59435	Symbol	__FUNCTION__		59070						
ANR	59436	Symbol	create_new_mode		59070						
ANR	59437	Symbol	s		59070						
ANR	59438	Symbol	x11 -> display		59070						
ANR	59439	Symbol	find_mode_by_size		59070						
ANR	59440	Symbol	x11 -> randr . res -> crtcs		59070						
ANR	59441	Symbol	vdagent_x11_restore_error_handler		59070						
ANR	59442	Symbol	x		59070						
ANR	59443	Symbol	width		59070						
ANR	59444	Symbol	* mode		59070						
ANR	59445	Symbol	y		59070						
ANR	59446	Symbol	x11 -> randr . res		59070						
ANR	59447	Symbol	CurrentTime		59070						
ANR	59448	Symbol	* output		59070						
ANR	59449	Symbol	* x11 -> randr . res -> crtcs		59070						
ANR	59450	Function	xrandr_disable_output	391:0:12260:13089							
ANR	59451	FunctionDef	"xrandr_disable_output (struct vdagent_x11 * x11 , int output)"		59450	0					
ANR	59452	CompoundStatement		392:0:12331:13089	59450	0					
ANR	59453	IdentifierDeclStatement	Status s ;	393:4:12337:12345	59450	0	True				
ANR	59454	IdentifierDecl	s		59450	0					
ANR	59455	IdentifierDeclType	Status		59450	0					
ANR	59456	Identifier	s		59450	1					
ANR	59457	IfStatement	if ( ! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0 )		59450	1					
ANR	59458	Condition	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0	395:8:12356:12421	59450	0	True				
ANR	59459	OrExpression	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0		59450	0		||			
ANR	59460	UnaryOperationExpression	! x11 -> randr . res		59450	0					
ANR	59461	UnaryOperator	!		59450	0					
ANR	59462	MemberAccess	x11 -> randr . res		59450	1					
ANR	59463	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59464	Identifier	x11		59450	0					
ANR	59465	Identifier	randr		59450	1					
ANR	59466	Identifier	res		59450	1					
ANR	59467	OrExpression	output >= x11 -> randr . res -> noutput || output < 0		59450	1		||			
ANR	59468	RelationalExpression	output >= x11 -> randr . res -> noutput		59450	0		>=			
ANR	59469	Identifier	output		59450	0					
ANR	59470	PtrMemberAccess	x11 -> randr . res -> noutput		59450	1					
ANR	59471	MemberAccess	x11 -> randr . res		59450	0					
ANR	59472	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59473	Identifier	x11		59450	0					
ANR	59474	Identifier	randr		59450	1					
ANR	59475	Identifier	res		59450	1					
ANR	59476	Identifier	noutput		59450	1					
ANR	59477	RelationalExpression	output < 0		59450	1		<			
ANR	59478	Identifier	output		59450	0					
ANR	59479	PrimaryExpression	0		59450	1					
ANR	59480	CompoundStatement		4:76:92:92	59450	1					
ANR	59481	ExpressionStatement	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"	396:8:12434:12528	59450	0	True				
ANR	59482	CallExpression	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"		59450	0					
ANR	59483	Callee	syslog		59450	0					
ANR	59484	Identifier	syslog		59450	0					
ANR	59485	ArgumentList	LOG_ERR		59450	1					
ANR	59486	Argument	LOG_ERR		59450	0					
ANR	59487	Identifier	LOG_ERR		59450	0					
ANR	59488	Argument	"""%s: program error: missing RANDR or bad output"""		59450	1					
ANR	59489	PrimaryExpression	"""%s: program error: missing RANDR or bad output"""		59450	0					
ANR	59490	Argument	__FUNCTION__		59450	2					
ANR	59491	Identifier	__FUNCTION__		59450	0					
ANR	59492	ReturnStatement	return ;	398:8:12538:12544	59450	1	True				
ANR	59493	ExpressionStatement	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , 0 , 0 , None , RR_Rotate_0 , NULL , 0 )"	401:4:12557:12760	59450	2	True				
ANR	59494	AssignmentExpression	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , 0 , 0 , None , RR_Rotate_0 , NULL , 0 )"		59450	0		=			
ANR	59495	Identifier	s		59450	0					
ANR	59496	CallExpression	"XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , 0 , 0 , None , RR_Rotate_0 , NULL , 0 )"		59450	1					
ANR	59497	Callee	XRRSetCrtcConfig		59450	0					
ANR	59498	Identifier	XRRSetCrtcConfig		59450	0					
ANR	59499	ArgumentList	x11 -> display		59450	1					
ANR	59500	Argument	x11 -> display		59450	0					
ANR	59501	PtrMemberAccess	x11 -> display		59450	0					
ANR	59502	Identifier	x11		59450	0					
ANR	59503	Identifier	display		59450	1					
ANR	59504	Argument	x11 -> randr . res		59450	1					
ANR	59505	MemberAccess	x11 -> randr . res		59450	0					
ANR	59506	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59507	Identifier	x11		59450	0					
ANR	59508	Identifier	randr		59450	1					
ANR	59509	Identifier	res		59450	1					
ANR	59510	Argument	x11 -> randr . res -> crtcs [ output ]		59450	2					
ANR	59511	ArrayIndexing	x11 -> randr . res -> crtcs [ output ]		59450	0					
ANR	59512	PtrMemberAccess	x11 -> randr . res -> crtcs		59450	0					
ANR	59513	MemberAccess	x11 -> randr . res		59450	0					
ANR	59514	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59515	Identifier	x11		59450	0					
ANR	59516	Identifier	randr		59450	1					
ANR	59517	Identifier	res		59450	1					
ANR	59518	Identifier	crtcs		59450	1					
ANR	59519	Identifier	output		59450	1					
ANR	59520	Argument	CurrentTime		59450	3					
ANR	59521	Identifier	CurrentTime		59450	0					
ANR	59522	Argument	0		59450	4					
ANR	59523	PrimaryExpression	0		59450	0					
ANR	59524	Argument	0		59450	5					
ANR	59525	PrimaryExpression	0		59450	0					
ANR	59526	Argument	None		59450	6					
ANR	59527	Identifier	None		59450	0					
ANR	59528	Argument	RR_Rotate_0		59450	7					
ANR	59529	Identifier	RR_Rotate_0		59450	0					
ANR	59530	Argument	NULL		59450	8					
ANR	59531	Identifier	NULL		59450	0					
ANR	59532	Argument	0		59450	9					
ANR	59533	PrimaryExpression	0		59450	0					
ANR	59534	IfStatement	if ( s != RRSetConfigSuccess )		59450	3					
ANR	59535	Condition	s != RRSetConfigSuccess	406:8:12771:12793	59450	0	True				
ANR	59536	EqualityExpression	s != RRSetConfigSuccess		59450	0		!=			
ANR	59537	Identifier	s		59450	0					
ANR	59538	Identifier	RRSetConfigSuccess		59450	1					
ANR	59539	ExpressionStatement	"syslog ( LOG_ERR , ""failed to disable monitor"" )"	407:8:12804:12848	59450	1	True				
ANR	59540	CallExpression	"syslog ( LOG_ERR , ""failed to disable monitor"" )"		59450	0					
ANR	59541	Callee	syslog		59450	0					
ANR	59542	Identifier	syslog		59450	0					
ANR	59543	ArgumentList	LOG_ERR		59450	1					
ANR	59544	Argument	LOG_ERR		59450	0					
ANR	59545	Identifier	LOG_ERR		59450	0					
ANR	59546	Argument	"""failed to disable monitor"""		59450	1					
ANR	59547	PrimaryExpression	"""failed to disable monitor"""		59450	0					
ANR	59548	ExpressionStatement	"delete_mode ( x11 , output , x11 -> randr . monitor_sizes [ output ] . width , x11 -> randr . monitor_sizes [ output ] . height )"	409:4:12855:12989	59450	4	True				
ANR	59549	CallExpression	"delete_mode ( x11 , output , x11 -> randr . monitor_sizes [ output ] . width , x11 -> randr . monitor_sizes [ output ] . height )"		59450	0					
ANR	59550	Callee	delete_mode		59450	0					
ANR	59551	Identifier	delete_mode		59450	0					
ANR	59552	ArgumentList	x11		59450	1					
ANR	59553	Argument	x11		59450	0					
ANR	59554	Identifier	x11		59450	0					
ANR	59555	Argument	output		59450	1					
ANR	59556	Identifier	output		59450	0					
ANR	59557	Argument	x11 -> randr . monitor_sizes [ output ] . width		59450	2					
ANR	59558	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		59450	0					
ANR	59559	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59450	0					
ANR	59560	MemberAccess	x11 -> randr . monitor_sizes		59450	0					
ANR	59561	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59562	Identifier	x11		59450	0					
ANR	59563	Identifier	randr		59450	1					
ANR	59564	Identifier	monitor_sizes		59450	1					
ANR	59565	Identifier	output		59450	1					
ANR	59566	Identifier	width		59450	1					
ANR	59567	Argument	x11 -> randr . monitor_sizes [ output ] . height		59450	3					
ANR	59568	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		59450	0					
ANR	59569	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59450	0					
ANR	59570	MemberAccess	x11 -> randr . monitor_sizes		59450	0					
ANR	59571	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59572	Identifier	x11		59450	0					
ANR	59573	Identifier	randr		59450	1					
ANR	59574	Identifier	monitor_sizes		59450	1					
ANR	59575	Identifier	output		59450	1					
ANR	59576	Identifier	height		59450	1					
ANR	59577	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . width = 0	411:4:12995:13038	59450	5	True				
ANR	59578	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . width = 0		59450	0		=			
ANR	59579	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		59450	0					
ANR	59580	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59450	0					
ANR	59581	MemberAccess	x11 -> randr . monitor_sizes		59450	0					
ANR	59582	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59583	Identifier	x11		59450	0					
ANR	59584	Identifier	randr		59450	1					
ANR	59585	Identifier	monitor_sizes		59450	1					
ANR	59586	Identifier	output		59450	1					
ANR	59587	Identifier	width		59450	1					
ANR	59588	PrimaryExpression	0		59450	1					
ANR	59589	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . height = 0	412:4:13044:13087	59450	6	True				
ANR	59590	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . height = 0		59450	0		=			
ANR	59591	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		59450	0					
ANR	59592	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		59450	0					
ANR	59593	MemberAccess	x11 -> randr . monitor_sizes		59450	0					
ANR	59594	PtrMemberAccess	x11 -> randr		59450	0					
ANR	59595	Identifier	x11		59450	0					
ANR	59596	Identifier	randr		59450	1					
ANR	59597	Identifier	monitor_sizes		59450	1					
ANR	59598	Identifier	output		59450	1					
ANR	59599	Identifier	height		59450	1					
ANR	59600	PrimaryExpression	0		59450	1					
ANR	59601	ReturnType	static void		59450	1					
ANR	59602	Identifier	xrandr_disable_output		59450	2					
ANR	59603	ParameterList	"struct vdagent_x11 * x11 , int output"		59450	3					
ANR	59604	Parameter	struct vdagent_x11 * x11	391:34:12294:12316	59450	0	True				
ANR	59605	ParameterType	struct vdagent_x11 *		59450	0					
ANR	59606	Identifier	x11		59450	1					
ANR	59607	Parameter	int output	391:59:12319:12328	59450	1	True				
ANR	59608	ParameterType	int		59450	0					
ANR	59609	Identifier	output		59450	1					
ANR	59610	CFGEntryNode	ENTRY		59450		True				
ANR	59611	CFGExitNode	EXIT		59450		True				
ANR	59612	Symbol	* x11		59450						
ANR	59613	Symbol	x11 -> randr . monitor_sizes [ output ] . width		59450						
ANR	59614	Symbol	x11 -> randr		59450						
ANR	59615	Symbol	* x11 -> randr . monitor_sizes		59450						
ANR	59616	Symbol	* x11 -> randr . res		59450						
ANR	59617	Symbol	RRSetConfigSuccess		59450						
ANR	59618	Symbol	output		59450						
ANR	59619	Symbol	x11 -> randr . res -> noutput		59450						
ANR	59620	Symbol	* * x11 -> randr . res		59450						
ANR	59621	Symbol	* * * x11		59450						
ANR	59622	Symbol	LOG_ERR		59450						
ANR	59623	Symbol	x11		59450						
ANR	59624	Symbol	XRRSetCrtcConfig		59450						
ANR	59625	Symbol	x11 -> randr . monitor_sizes [ output ] . height		59450						
ANR	59626	Symbol	* * x11 -> randr		59450						
ANR	59627	Symbol	NULL		59450						
ANR	59628	Symbol	RR_Rotate_0		59450						
ANR	59629	Symbol	* * x11		59450						
ANR	59630	Symbol	x11 -> randr . monitor_sizes		59450						
ANR	59631	Symbol	* x11 -> randr		59450						
ANR	59632	Symbol	__FUNCTION__		59450						
ANR	59633	Symbol	s		59450						
ANR	59634	Symbol	x11 -> display		59450						
ANR	59635	Symbol	x11 -> randr . res -> crtcs		59450						
ANR	59636	Symbol	x11 -> randr . res		59450						
ANR	59637	Symbol	CurrentTime		59450						
ANR	59638	Symbol	None		59450						
ANR	59639	Symbol	* output		59450						
ANR	59640	Symbol	* x11 -> randr . res -> crtcs		59450						
ANR	59641	Function	set_screen_to_best_size	415:0:13092:14899							
ANR	59642	FunctionDef	"set_screen_to_best_size (struct vdagent_x11 * x11 , int width , int height , int * out_width , int * out_height)"		59641	0					
ANR	59643	CompoundStatement		416:67:13242:14899	59641	0					
ANR	59644	IdentifierDeclStatement	"int i , num_sizes = 0 ;"	417:4:13248:13268	59641	0	True				
ANR	59645	IdentifierDecl	i		59641	0					
ANR	59646	IdentifierDeclType	int		59641	0					
ANR	59647	Identifier	i		59641	1					
ANR	59648	IdentifierDecl	num_sizes = 0		59641	1					
ANR	59649	IdentifierDeclType	int		59641	0					
ANR	59650	Identifier	num_sizes		59641	1					
ANR	59651	AssignmentExpression	num_sizes = 0		59641	2		=			
ANR	59652	Identifier	num_sizes		59641	0					
ANR	59653	PrimaryExpression	0		59641	1					
ANR	59654	IdentifierDeclStatement	int best = - 1 ;	418:4:13274:13287	59641	1	True				
ANR	59655	IdentifierDecl	best = - 1		59641	0					
ANR	59656	IdentifierDeclType	int		59641	0					
ANR	59657	Identifier	best		59641	1					
ANR	59658	AssignmentExpression	best = - 1		59641	2		=			
ANR	59659	Identifier	best		59641	0					
ANR	59660	UnaryOperationExpression	- 1		59641	1					
ANR	59661	UnaryOperator	-		59641	0					
ANR	59662	PrimaryExpression	1		59641	1					
ANR	59663	IdentifierDeclStatement	unsigned int closest_diff = - 1 ;	419:4:13293:13323	59641	2	True				
ANR	59664	IdentifierDecl	closest_diff = - 1		59641	0					
ANR	59665	IdentifierDeclType	unsigned int		59641	0					
ANR	59666	Identifier	closest_diff		59641	1					
ANR	59667	AssignmentExpression	closest_diff = - 1		59641	2		=			
ANR	59668	Identifier	closest_diff		59641	0					
ANR	59669	UnaryOperationExpression	- 1		59641	1					
ANR	59670	UnaryOperator	-		59641	0					
ANR	59671	PrimaryExpression	1		59641	1					
ANR	59672	IdentifierDeclStatement	XRRScreenSize * sizes ;	420:4:13329:13349	59641	3	True				
ANR	59673	IdentifierDecl	* sizes		59641	0					
ANR	59674	IdentifierDeclType	XRRScreenSize *		59641	0					
ANR	59675	Identifier	sizes		59641	1					
ANR	59676	IdentifierDeclStatement	XRRScreenConfiguration * config ;	421:4:13355:13385	59641	4	True				
ANR	59677	IdentifierDecl	* config		59641	0					
ANR	59678	IdentifierDeclType	XRRScreenConfiguration *		59641	0					
ANR	59679	Identifier	config		59641	1					
ANR	59680	IdentifierDeclStatement	Rotation rotation ;	422:4:13391:13408	59641	5	True				
ANR	59681	IdentifierDecl	rotation		59641	0					
ANR	59682	IdentifierDeclType	Rotation		59641	0					
ANR	59683	Identifier	rotation		59641	1					
ANR	59684	ExpressionStatement	"sizes = XRRSizes ( x11 -> display , 0 , & num_sizes )"	424:4:13415:13460	59641	6	True				
ANR	59685	AssignmentExpression	"sizes = XRRSizes ( x11 -> display , 0 , & num_sizes )"		59641	0		=			
ANR	59686	Identifier	sizes		59641	0					
ANR	59687	CallExpression	"XRRSizes ( x11 -> display , 0 , & num_sizes )"		59641	1					
ANR	59688	Callee	XRRSizes		59641	0					
ANR	59689	Identifier	XRRSizes		59641	0					
ANR	59690	ArgumentList	x11 -> display		59641	1					
ANR	59691	Argument	x11 -> display		59641	0					
ANR	59692	PtrMemberAccess	x11 -> display		59641	0					
ANR	59693	Identifier	x11		59641	0					
ANR	59694	Identifier	display		59641	1					
ANR	59695	Argument	0		59641	1					
ANR	59696	PrimaryExpression	0		59641	0					
ANR	59697	Argument	& num_sizes		59641	2					
ANR	59698	UnaryOperationExpression	& num_sizes		59641	0					
ANR	59699	UnaryOperator	&		59641	0					
ANR	59700	Identifier	num_sizes		59641	1					
ANR	59701	IfStatement	if ( ! sizes || ! num_sizes )		59641	7					
ANR	59702	Condition	! sizes || ! num_sizes	425:8:13470:13489	59641	0	True				
ANR	59703	OrExpression	! sizes || ! num_sizes		59641	0		||			
ANR	59704	UnaryOperationExpression	! sizes		59641	0					
ANR	59705	UnaryOperator	!		59641	0					
ANR	59706	Identifier	sizes		59641	1					
ANR	59707	UnaryOperationExpression	! num_sizes		59641	1					
ANR	59708	UnaryOperator	!		59641	0					
ANR	59709	Identifier	num_sizes		59641	1					
ANR	59710	CompoundStatement		10:30:249:249	59641	1					
ANR	59711	ExpressionStatement	"syslog ( LOG_ERR , ""XRRSizes failed"" )"	426:8:13502:13536	59641	0	True				
ANR	59712	CallExpression	"syslog ( LOG_ERR , ""XRRSizes failed"" )"		59641	0					
ANR	59713	Callee	syslog		59641	0					
ANR	59714	Identifier	syslog		59641	0					
ANR	59715	ArgumentList	LOG_ERR		59641	1					
ANR	59716	Argument	LOG_ERR		59641	0					
ANR	59717	Identifier	LOG_ERR		59641	0					
ANR	59718	Argument	"""XRRSizes failed"""		59641	1					
ANR	59719	PrimaryExpression	"""XRRSizes failed"""		59641	0					
ANR	59720	ReturnStatement	return 0 ;	427:8:13546:13554	59641	1	True				
ANR	59721	PrimaryExpression	0		59641	0					
ANR	59722	IfStatement	if ( x11 -> debug )		59641	8					
ANR	59723	Condition	x11 -> debug	429:8:13570:13579	59641	0	True				
ANR	59724	PtrMemberAccess	x11 -> debug		59641	0					
ANR	59725	Identifier	x11		59641	0					
ANR	59726	Identifier	debug		59641	1					
ANR	59727	ExpressionStatement	"syslog ( LOG_DEBUG , ""set_screen_to_best_size found %d modes\\n"" , num_sizes )"	430:8:13590:13662	59641	1	True				
ANR	59728	CallExpression	"syslog ( LOG_DEBUG , ""set_screen_to_best_size found %d modes\\n"" , num_sizes )"		59641	0					
ANR	59729	Callee	syslog		59641	0					
ANR	59730	Identifier	syslog		59641	0					
ANR	59731	ArgumentList	LOG_DEBUG		59641	1					
ANR	59732	Argument	LOG_DEBUG		59641	0					
ANR	59733	Identifier	LOG_DEBUG		59641	0					
ANR	59734	Argument	"""set_screen_to_best_size found %d modes\\n"""		59641	1					
ANR	59735	PrimaryExpression	"""set_screen_to_best_size found %d modes\\n"""		59641	0					
ANR	59736	Argument	num_sizes		59641	2					
ANR	59737	Identifier	num_sizes		59641	0					
ANR	59738	ForStatement	for ( i = 0 ; i < num_sizes ; i ++ )		59641	9					
ANR	59739	ForInit	i = 0 ;	433:9:13740:13745	59641	0	True				
ANR	59740	AssignmentExpression	i = 0		59641	0		=			
ANR	59741	Identifier	i		59641	0					
ANR	59742	PrimaryExpression	0		59641	1					
ANR	59743	Condition	i < num_sizes	433:16:13747:13759	59641	1	True				
ANR	59744	RelationalExpression	i < num_sizes		59641	0		<			
ANR	59745	Identifier	i		59641	0					
ANR	59746	Identifier	num_sizes		59641	1					
ANR	59747	PostIncDecOperationExpression	i ++	433:31:13762:13764	59641	2	True				
ANR	59748	Identifier	i		59641	0					
ANR	59749	IncDec	++		59641	1					
ANR	59750	CompoundStatement		25:8:775:824	59641	3					
ANR	59751	IfStatement	if ( sizes [ i ] . width > width || sizes [ i ] . height > height )		59641	0					
ANR	59752	Condition	sizes [ i ] . width > width || sizes [ i ] . height > height	434:12:13781:13843	59641	0	True				
ANR	59753	OrExpression	sizes [ i ] . width > width || sizes [ i ] . height > height		59641	0		||			
ANR	59754	RelationalExpression	sizes [ i ] . width > width		59641	0		>			
ANR	59755	MemberAccess	sizes [ i ] . width		59641	0					
ANR	59756	ArrayIndexing	sizes [ i ]		59641	0					
ANR	59757	Identifier	sizes		59641	0					
ANR	59758	Identifier	i		59641	1					
ANR	59759	Identifier	width		59641	1					
ANR	59760	Identifier	width		59641	1					
ANR	59761	RelationalExpression	sizes [ i ] . height > height		59641	1		>			
ANR	59762	MemberAccess	sizes [ i ] . height		59641	0					
ANR	59763	ArrayIndexing	sizes [ i ]		59641	0					
ANR	59764	Identifier	sizes		59641	0					
ANR	59765	Identifier	i		59641	1					
ANR	59766	Identifier	height		59641	1					
ANR	59767	Identifier	height		59641	1					
ANR	59768	ContinueStatement	continue ;	436:12:13858:13866	59641	1	True				
ANR	59769	IdentifierDeclStatement	unsigned int wdiff = width - sizes [ i ] . width ;	438:8:13909:13953	59641	1	True				
ANR	59770	IdentifierDecl	wdiff = width - sizes [ i ] . width		59641	0					
ANR	59771	IdentifierDeclType	unsigned int		59641	0					
ANR	59772	Identifier	wdiff		59641	1					
ANR	59773	AssignmentExpression	wdiff = width - sizes [ i ] . width		59641	2		=			
ANR	59774	Identifier	wdiff		59641	0					
ANR	59775	AdditiveExpression	width - sizes [ i ] . width		59641	1		-			
ANR	59776	Identifier	width		59641	0					
ANR	59777	MemberAccess	sizes [ i ] . width		59641	1					
ANR	59778	ArrayIndexing	sizes [ i ]		59641	0					
ANR	59779	Identifier	sizes		59641	0					
ANR	59780	Identifier	i		59641	1					
ANR	59781	Identifier	width		59641	1					
ANR	59782	IdentifierDeclStatement	unsigned int hdiff = height - sizes [ i ] . height ;	439:8:13963:14008	59641	2	True				
ANR	59783	IdentifierDecl	hdiff = height - sizes [ i ] . height		59641	0					
ANR	59784	IdentifierDeclType	unsigned int		59641	0					
ANR	59785	Identifier	hdiff		59641	1					
ANR	59786	AssignmentExpression	hdiff = height - sizes [ i ] . height		59641	2		=			
ANR	59787	Identifier	hdiff		59641	0					
ANR	59788	AdditiveExpression	height - sizes [ i ] . height		59641	1		-			
ANR	59789	Identifier	height		59641	0					
ANR	59790	MemberAccess	sizes [ i ] . height		59641	1					
ANR	59791	ArrayIndexing	sizes [ i ]		59641	0					
ANR	59792	Identifier	sizes		59641	0					
ANR	59793	Identifier	i		59641	1					
ANR	59794	Identifier	height		59641	1					
ANR	59795	IdentifierDeclStatement	unsigned int diff = wdiff * wdiff + hdiff * hdiff ;	440:8:14018:14067	59641	3	True				
ANR	59796	IdentifierDecl	diff = wdiff * wdiff + hdiff * hdiff		59641	0					
ANR	59797	IdentifierDeclType	unsigned int		59641	0					
ANR	59798	Identifier	diff		59641	1					
ANR	59799	AssignmentExpression	diff = wdiff * wdiff + hdiff * hdiff		59641	2		=			
ANR	59800	Identifier	diff		59641	0					
ANR	59801	AdditiveExpression	wdiff * wdiff + hdiff * hdiff		59641	1		+			
ANR	59802	MultiplicativeExpression	wdiff * wdiff		59641	0		*			
ANR	59803	Identifier	wdiff		59641	0					
ANR	59804	Identifier	wdiff		59641	1					
ANR	59805	MultiplicativeExpression	hdiff * hdiff		59641	1		*			
ANR	59806	Identifier	hdiff		59641	0					
ANR	59807	Identifier	hdiff		59641	1					
ANR	59808	IfStatement	if ( diff < closest_diff )		59641	4					
ANR	59809	Condition	diff < closest_diff	441:12:14081:14099	59641	0	True				
ANR	59810	RelationalExpression	diff < closest_diff		59641	0		<			
ANR	59811	Identifier	diff		59641	0					
ANR	59812	Identifier	closest_diff		59641	1					
ANR	59813	CompoundStatement		26:33:859:859	59641	1					
ANR	59814	ExpressionStatement	closest_diff = diff	442:12:14116:14135	59641	0	True				
ANR	59815	AssignmentExpression	closest_diff = diff		59641	0		=			
ANR	59816	Identifier	closest_diff		59641	0					
ANR	59817	Identifier	diff		59641	1					
ANR	59818	ExpressionStatement	best = i	443:12:14149:14157	59641	1	True				
ANR	59819	AssignmentExpression	best = i		59641	0		=			
ANR	59820	Identifier	best		59641	0					
ANR	59821	Identifier	i		59641	1					
ANR	59822	IfStatement	if ( best == - 1 )		59641	10					
ANR	59823	Condition	best == - 1	447:8:14184:14193	59641	0	True				
ANR	59824	EqualityExpression	best == - 1		59641	0		==			
ANR	59825	Identifier	best		59641	0					
ANR	59826	UnaryOperationExpression	- 1		59641	1					
ANR	59827	UnaryOperator	-		59641	0					
ANR	59828	PrimaryExpression	1		59641	1					
ANR	59829	CompoundStatement		32:20:953:953	59641	1					
ANR	59830	ExpressionStatement	"syslog ( LOG_ERR , ""no suitable resolution found for monitor"" )"	448:8:14206:14265	59641	0	True				
ANR	59831	CallExpression	"syslog ( LOG_ERR , ""no suitable resolution found for monitor"" )"		59641	0					
ANR	59832	Callee	syslog		59641	0					
ANR	59833	Identifier	syslog		59641	0					
ANR	59834	ArgumentList	LOG_ERR		59641	1					
ANR	59835	Argument	LOG_ERR		59641	0					
ANR	59836	Identifier	LOG_ERR		59641	0					
ANR	59837	Argument	"""no suitable resolution found for monitor"""		59641	1					
ANR	59838	PrimaryExpression	"""no suitable resolution found for monitor"""		59641	0					
ANR	59839	ReturnStatement	return 0 ;	449:8:14275:14283	59641	1	True				
ANR	59840	PrimaryExpression	0		59641	0					
ANR	59841	ExpressionStatement	"config = XRRGetScreenInfo ( x11 -> display , x11 -> root_window [ 0 ] )"	452:4:14296:14356	59641	11	True				
ANR	59842	AssignmentExpression	"config = XRRGetScreenInfo ( x11 -> display , x11 -> root_window [ 0 ] )"		59641	0		=			
ANR	59843	Identifier	config		59641	0					
ANR	59844	CallExpression	"XRRGetScreenInfo ( x11 -> display , x11 -> root_window [ 0 ] )"		59641	1					
ANR	59845	Callee	XRRGetScreenInfo		59641	0					
ANR	59846	Identifier	XRRGetScreenInfo		59641	0					
ANR	59847	ArgumentList	x11 -> display		59641	1					
ANR	59848	Argument	x11 -> display		59641	0					
ANR	59849	PtrMemberAccess	x11 -> display		59641	0					
ANR	59850	Identifier	x11		59641	0					
ANR	59851	Identifier	display		59641	1					
ANR	59852	Argument	x11 -> root_window [ 0 ]		59641	1					
ANR	59853	ArrayIndexing	x11 -> root_window [ 0 ]		59641	0					
ANR	59854	PtrMemberAccess	x11 -> root_window		59641	0					
ANR	59855	Identifier	x11		59641	0					
ANR	59856	Identifier	root_window		59641	1					
ANR	59857	PrimaryExpression	0		59641	1					
ANR	59858	IfStatement	if ( ! config )		59641	12					
ANR	59859	Condition	! config	453:7:14365:14371	59641	0	True				
ANR	59860	UnaryOperationExpression	! config		59641	0					
ANR	59861	UnaryOperator	!		59641	0					
ANR	59862	Identifier	config		59641	1					
ANR	59863	CompoundStatement		38:16:1131:1131	59641	1					
ANR	59864	ExpressionStatement	"syslog ( LOG_ERR , ""get screen info failed"" )"	454:8:14384:14425	59641	0	True				
ANR	59865	CallExpression	"syslog ( LOG_ERR , ""get screen info failed"" )"		59641	0					
ANR	59866	Callee	syslog		59641	0					
ANR	59867	Identifier	syslog		59641	0					
ANR	59868	ArgumentList	LOG_ERR		59641	1					
ANR	59869	Argument	LOG_ERR		59641	0					
ANR	59870	Identifier	LOG_ERR		59641	0					
ANR	59871	Argument	"""get screen info failed"""		59641	1					
ANR	59872	PrimaryExpression	"""get screen info failed"""		59641	0					
ANR	59873	ReturnStatement	return 0 ;	455:8:14435:14443	59641	1	True				
ANR	59874	PrimaryExpression	0		59641	0					
ANR	59875	ExpressionStatement	"XRRConfigCurrentConfiguration ( config , & rotation )"	457:4:14455:14503	59641	13	True				
ANR	59876	CallExpression	"XRRConfigCurrentConfiguration ( config , & rotation )"		59641	0					
ANR	59877	Callee	XRRConfigCurrentConfiguration		59641	0					
ANR	59878	Identifier	XRRConfigCurrentConfiguration		59641	0					
ANR	59879	ArgumentList	config		59641	1					
ANR	59880	Argument	config		59641	0					
ANR	59881	Identifier	config		59641	0					
ANR	59882	Argument	& rotation		59641	1					
ANR	59883	UnaryOperationExpression	& rotation		59641	0					
ANR	59884	UnaryOperator	&		59641	0					
ANR	59885	Identifier	rotation		59641	1					
ANR	59886	ExpressionStatement	"XRRSetScreenConfig ( x11 -> display , config , x11 -> root_window [ 0 ] , best , rotation , CurrentTime )"	458:4:14509:14622	59641	14	True				
ANR	59887	CallExpression	"XRRSetScreenConfig ( x11 -> display , config , x11 -> root_window [ 0 ] , best , rotation , CurrentTime )"		59641	0					
ANR	59888	Callee	XRRSetScreenConfig		59641	0					
ANR	59889	Identifier	XRRSetScreenConfig		59641	0					
ANR	59890	ArgumentList	x11 -> display		59641	1					
ANR	59891	Argument	x11 -> display		59641	0					
ANR	59892	PtrMemberAccess	x11 -> display		59641	0					
ANR	59893	Identifier	x11		59641	0					
ANR	59894	Identifier	display		59641	1					
ANR	59895	Argument	config		59641	1					
ANR	59896	Identifier	config		59641	0					
ANR	59897	Argument	x11 -> root_window [ 0 ]		59641	2					
ANR	59898	ArrayIndexing	x11 -> root_window [ 0 ]		59641	0					
ANR	59899	PtrMemberAccess	x11 -> root_window		59641	0					
ANR	59900	Identifier	x11		59641	0					
ANR	59901	Identifier	root_window		59641	1					
ANR	59902	PrimaryExpression	0		59641	1					
ANR	59903	Argument	best		59641	3					
ANR	59904	Identifier	best		59641	0					
ANR	59905	Argument	rotation		59641	4					
ANR	59906	Identifier	rotation		59641	0					
ANR	59907	Argument	CurrentTime		59641	5					
ANR	59908	Identifier	CurrentTime		59641	0					
ANR	59909	ExpressionStatement	XRRFreeScreenConfigInfo ( config )	460:4:14628:14659	59641	15	True				
ANR	59910	CallExpression	XRRFreeScreenConfigInfo ( config )		59641	0					
ANR	59911	Callee	XRRFreeScreenConfigInfo		59641	0					
ANR	59912	Identifier	XRRFreeScreenConfigInfo		59641	0					
ANR	59913	ArgumentList	config		59641	1					
ANR	59914	Argument	config		59641	0					
ANR	59915	Identifier	config		59641	0					
ANR	59916	IfStatement	if ( x11 -> debug )		59641	16					
ANR	59917	Condition	x11 -> debug	462:8:14670:14679	59641	0	True				
ANR	59918	PtrMemberAccess	x11 -> debug		59641	0					
ANR	59919	Identifier	x11		59641	0					
ANR	59920	Identifier	debug		59641	1					
ANR	59921	ExpressionStatement	"syslog ( LOG_DEBUG , ""set_screen_to_best_size set size to: %dx%d\\n"" , sizes [ best ] . width , sizes [ best ] . height )"	463:8:14690:14809	59641	1	True				
ANR	59922	CallExpression	"syslog ( LOG_DEBUG , ""set_screen_to_best_size set size to: %dx%d\\n"" , sizes [ best ] . width , sizes [ best ] . height )"		59641	0					
ANR	59923	Callee	syslog		59641	0					
ANR	59924	Identifier	syslog		59641	0					
ANR	59925	ArgumentList	LOG_DEBUG		59641	1					
ANR	59926	Argument	LOG_DEBUG		59641	0					
ANR	59927	Identifier	LOG_DEBUG		59641	0					
ANR	59928	Argument	"""set_screen_to_best_size set size to: %dx%d\\n"""		59641	1					
ANR	59929	PrimaryExpression	"""set_screen_to_best_size set size to: %dx%d\\n"""		59641	0					
ANR	59930	Argument	sizes [ best ] . width		59641	2					
ANR	59931	MemberAccess	sizes [ best ] . width		59641	0					
ANR	59932	ArrayIndexing	sizes [ best ]		59641	0					
ANR	59933	Identifier	sizes		59641	0					
ANR	59934	Identifier	best		59641	1					
ANR	59935	Identifier	width		59641	1					
ANR	59936	Argument	sizes [ best ] . height		59641	3					
ANR	59937	MemberAccess	sizes [ best ] . height		59641	0					
ANR	59938	ArrayIndexing	sizes [ best ]		59641	0					
ANR	59939	Identifier	sizes		59641	0					
ANR	59940	Identifier	best		59641	1					
ANR	59941	Identifier	height		59641	1					
ANR	59942	ExpressionStatement	* out_width = sizes [ best ] . width	465:4:14815:14845	59641	17	True				
ANR	59943	AssignmentExpression	* out_width = sizes [ best ] . width		59641	0		=			
ANR	59944	UnaryOperationExpression	* out_width		59641	0					
ANR	59945	UnaryOperator	*		59641	0					
ANR	59946	Identifier	out_width		59641	1					
ANR	59947	MemberAccess	sizes [ best ] . width		59641	1					
ANR	59948	ArrayIndexing	sizes [ best ]		59641	0					
ANR	59949	Identifier	sizes		59641	0					
ANR	59950	Identifier	best		59641	1					
ANR	59951	Identifier	width		59641	1					
ANR	59952	ExpressionStatement	* out_height = sizes [ best ] . height	466:4:14851:14883	59641	18	True				
ANR	59953	AssignmentExpression	* out_height = sizes [ best ] . height		59641	0		=			
ANR	59954	UnaryOperationExpression	* out_height		59641	0					
ANR	59955	UnaryOperator	*		59641	0					
ANR	59956	Identifier	out_height		59641	1					
ANR	59957	MemberAccess	sizes [ best ] . height		59641	1					
ANR	59958	ArrayIndexing	sizes [ best ]		59641	0					
ANR	59959	Identifier	sizes		59641	0					
ANR	59960	Identifier	best		59641	1					
ANR	59961	Identifier	height		59641	1					
ANR	59962	ReturnStatement	return 1 ;	467:4:14889:14897	59641	19	True				
ANR	59963	PrimaryExpression	1		59641	0					
ANR	59964	ReturnType	static int		59641	1					
ANR	59965	Identifier	set_screen_to_best_size		59641	2					
ANR	59966	ParameterList	"struct vdagent_x11 * x11 , int width , int height , int * out_width , int * out_height"		59641	3					
ANR	59967	Parameter	struct vdagent_x11 * x11	415:35:13127:13149	59641	0	True				
ANR	59968	ParameterType	struct vdagent_x11 *		59641	0					
ANR	59969	Identifier	x11		59641	1					
ANR	59970	Parameter	int width	415:60:13152:13160	59641	1	True				
ANR	59971	ParameterType	int		59641	0					
ANR	59972	Identifier	width		59641	1					
ANR	59973	Parameter	int height	415:71:13163:13172	59641	2	True				
ANR	59974	ParameterType	int		59641	0					
ANR	59975	Identifier	height		59641	1					
ANR	59976	Parameter	int * out_width	416:35:13210:13223	59641	3	True				
ANR	59977	ParameterType	int *		59641	0					
ANR	59978	Identifier	out_width		59641	1					
ANR	59979	Parameter	int * out_height	416:51:13226:13240	59641	4	True				
ANR	59980	ParameterType	int *		59641	0					
ANR	59981	Identifier	out_height		59641	1					
ANR	59982	CFGEntryNode	ENTRY		59641		True				
ANR	59983	CFGExitNode	EXIT		59641		True				
ANR	59984	Symbol	* x11		59641						
ANR	59985	Symbol	sizes [ best ] . height		59641						
ANR	59986	Symbol	& num_sizes		59641						
ANR	59987	Symbol	hdiff		59641						
ANR	59988	Symbol	* best		59641						
ANR	59989	Symbol	wdiff		59641						
ANR	59990	Symbol	closest_diff		59641						
ANR	59991	Symbol	XRRGetScreenInfo		59641						
ANR	59992	Symbol	best		59641						
ANR	59993	Symbol	XRRSizes		59641						
ANR	59994	Symbol	x11 -> root_window		59641						
ANR	59995	Symbol	sizes		59641						
ANR	59996	Symbol	out_width		59641						
ANR	59997	Symbol	LOG_ERR		59641						
ANR	59998	Symbol	* x11 -> root_window		59641						
ANR	59999	Symbol	x11		59641						
ANR	60000	Symbol	height		59641						
ANR	60001	Symbol	sizes [ i ] . width		59641						
ANR	60002	Symbol	num_sizes		59641						
ANR	60003	Symbol	* out_height		59641						
ANR	60004	Symbol	rotation		59641						
ANR	60005	Symbol	x11 -> debug		59641						
ANR	60006	Symbol	i		59641						
ANR	60007	Symbol	* out_width		59641						
ANR	60008	Symbol	diff		59641						
ANR	60009	Symbol	sizes [ best ] . width		59641						
ANR	60010	Symbol	* * x11		59641						
ANR	60011	Symbol	x11 -> display		59641						
ANR	60012	Symbol	* i		59641						
ANR	60013	Symbol	& rotation		59641						
ANR	60014	Symbol	sizes [ i ] . height		59641						
ANR	60015	Symbol	out_height		59641						
ANR	60016	Symbol	width		59641						
ANR	60017	Symbol	CurrentTime		59641						
ANR	60018	Symbol	* sizes		59641						
ANR	60019	Symbol	LOG_DEBUG		59641						
ANR	60020	Symbol	config		59641						
ANR	60021	Function	vdagent_x11_randr_handle_root_size_change	470:0:14902:15481							
ANR	60022	FunctionDef	"vdagent_x11_randr_handle_root_size_change (struct vdagent_x11 * x11 , int screen , int width , int height)"		60021	0					
ANR	60023	CompoundStatement		472:0:15013:15481	60021	0					
ANR	60024	ExpressionStatement	"update_randr_res ( x11 , 0 )"	473:4:15019:15043	60021	0	True				
ANR	60025	CallExpression	"update_randr_res ( x11 , 0 )"		60021	0					
ANR	60026	Callee	update_randr_res		60021	0					
ANR	60027	Identifier	update_randr_res		60021	0					
ANR	60028	ArgumentList	x11		60021	1					
ANR	60029	Argument	x11		60021	0					
ANR	60030	Identifier	x11		60021	0					
ANR	60031	Argument	0		60021	1					
ANR	60032	PrimaryExpression	0		60021	0					
ANR	60033	IfStatement	if ( width == x11 -> width [ screen ] && height == x11 -> height [ screen ] )		60021	1					
ANR	60034	Condition	width == x11 -> width [ screen ] && height == x11 -> height [ screen ]	475:8:15054:15113	60021	0	True				
ANR	60035	AndExpression	width == x11 -> width [ screen ] && height == x11 -> height [ screen ]		60021	0		&&			
ANR	60036	EqualityExpression	width == x11 -> width [ screen ]		60021	0		==			
ANR	60037	Identifier	width		60021	0					
ANR	60038	ArrayIndexing	x11 -> width [ screen ]		60021	1					
ANR	60039	PtrMemberAccess	x11 -> width		60021	0					
ANR	60040	Identifier	x11		60021	0					
ANR	60041	Identifier	width		60021	1					
ANR	60042	Identifier	screen		60021	1					
ANR	60043	EqualityExpression	height == x11 -> height [ screen ]		60021	1		==			
ANR	60044	Identifier	height		60021	0					
ANR	60045	ArrayIndexing	x11 -> height [ screen ]		60021	1					
ANR	60046	PtrMemberAccess	x11 -> height		60021	0					
ANR	60047	Identifier	x11		60021	0					
ANR	60048	Identifier	height		60021	1					
ANR	60049	Identifier	screen		60021	1					
ANR	60050	CompoundStatement		4:70:102:102	60021	1					
ANR	60051	ReturnStatement	return ;	476:8:15126:15132	60021	0	True				
ANR	60052	IfStatement	if ( x11 -> debug )		60021	2					
ANR	60053	Condition	x11 -> debug	479:8:15149:15158	60021	0	True				
ANR	60054	PtrMemberAccess	x11 -> debug		60021	0					
ANR	60055	Identifier	x11		60021	0					
ANR	60056	Identifier	debug		60021	1					
ANR	60057	ExpressionStatement	"syslog ( LOG_DEBUG , ""Root size of screen %d changed to %dx%d send %d"" , screen , width , height , ! x11 -> dont_send_guest_xorg_res )"	480:8:15169:15307	60021	1	True				
ANR	60058	CallExpression	"syslog ( LOG_DEBUG , ""Root size of screen %d changed to %dx%d send %d"" , screen , width , height , ! x11 -> dont_send_guest_xorg_res )"		60021	0					
ANR	60059	Callee	syslog		60021	0					
ANR	60060	Identifier	syslog		60021	0					
ANR	60061	ArgumentList	LOG_DEBUG		60021	1					
ANR	60062	Argument	LOG_DEBUG		60021	0					
ANR	60063	Identifier	LOG_DEBUG		60021	0					
ANR	60064	Argument	"""Root size of screen %d changed to %dx%d send %d"""		60021	1					
ANR	60065	PrimaryExpression	"""Root size of screen %d changed to %dx%d send %d"""		60021	0					
ANR	60066	Argument	screen		60021	2					
ANR	60067	Identifier	screen		60021	0					
ANR	60068	Argument	width		60021	3					
ANR	60069	Identifier	width		60021	0					
ANR	60070	Argument	height		60021	4					
ANR	60071	Identifier	height		60021	0					
ANR	60072	Argument	! x11 -> dont_send_guest_xorg_res		60021	5					
ANR	60073	UnaryOperationExpression	! x11 -> dont_send_guest_xorg_res		60021	0					
ANR	60074	UnaryOperator	!		60021	0					
ANR	60075	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		60021	1					
ANR	60076	Identifier	x11		60021	0					
ANR	60077	Identifier	dont_send_guest_xorg_res		60021	1					
ANR	60078	ExpressionStatement	x11 -> width [ screen ] = width	483:4:15314:15341	60021	3	True				
ANR	60079	AssignmentExpression	x11 -> width [ screen ] = width		60021	0		=			
ANR	60080	ArrayIndexing	x11 -> width [ screen ]		60021	0					
ANR	60081	PtrMemberAccess	x11 -> width		60021	0					
ANR	60082	Identifier	x11		60021	0					
ANR	60083	Identifier	width		60021	1					
ANR	60084	Identifier	screen		60021	1					
ANR	60085	Identifier	width		60021	1					
ANR	60086	ExpressionStatement	x11 -> height [ screen ] = height	484:4:15347:15375	60021	4	True				
ANR	60087	AssignmentExpression	x11 -> height [ screen ] = height		60021	0		=			
ANR	60088	ArrayIndexing	x11 -> height [ screen ]		60021	0					
ANR	60089	PtrMemberAccess	x11 -> height		60021	0					
ANR	60090	Identifier	x11		60021	0					
ANR	60091	Identifier	height		60021	1					
ANR	60092	Identifier	screen		60021	1					
ANR	60093	Identifier	height		60021	1					
ANR	60094	IfStatement	if ( ! x11 -> dont_send_guest_xorg_res )		60021	5					
ANR	60095	Condition	! x11 -> dont_send_guest_xorg_res	485:8:15385:15414	60021	0	True				
ANR	60096	UnaryOperationExpression	! x11 -> dont_send_guest_xorg_res		60021	0					
ANR	60097	UnaryOperator	!		60021	0					
ANR	60098	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		60021	1					
ANR	60099	Identifier	x11		60021	0					
ANR	60100	Identifier	dont_send_guest_xorg_res		60021	1					
ANR	60101	CompoundStatement		14:40:403:403	60021	1					
ANR	60102	ExpressionStatement	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"	486:8:15427:15473	60021	0	True				
ANR	60103	CallExpression	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"		60021	0					
ANR	60104	Callee	vdagent_x11_send_daemon_guest_xorg_res		60021	0					
ANR	60105	Identifier	vdagent_x11_send_daemon_guest_xorg_res		60021	0					
ANR	60106	ArgumentList	x11		60021	1					
ANR	60107	Argument	x11		60021	0					
ANR	60108	Identifier	x11		60021	0					
ANR	60109	Argument	1		60021	1					
ANR	60110	PrimaryExpression	1		60021	0					
ANR	60111	ReturnType	void		60021	1					
ANR	60112	Identifier	vdagent_x11_randr_handle_root_size_change		60021	2					
ANR	60113	ParameterList	"struct vdagent_x11 * x11 , int screen , int width , int height"		60021	3					
ANR	60114	Parameter	struct vdagent_x11 * x11	470:47:14949:14971	60021	0	True				
ANR	60115	ParameterType	struct vdagent_x11 *		60021	0					
ANR	60116	Identifier	x11		60021	1					
ANR	60117	Parameter	int screen	471:4:14978:14987	60021	1	True				
ANR	60118	ParameterType	int		60021	0					
ANR	60119	Identifier	screen		60021	1					
ANR	60120	Parameter	int width	471:16:14990:14998	60021	2	True				
ANR	60121	ParameterType	int		60021	0					
ANR	60122	Identifier	width		60021	1					
ANR	60123	Parameter	int height	471:27:15001:15010	60021	3	True				
ANR	60124	ParameterType	int		60021	0					
ANR	60125	Identifier	height		60021	1					
ANR	60126	CFGEntryNode	ENTRY		60021		True				
ANR	60127	CFGExitNode	EXIT		60021		True				
ANR	60128	Symbol	* x11		60021						
ANR	60129	Symbol	x11 -> width		60021						
ANR	60130	Symbol	x11 -> debug		60021						
ANR	60131	Symbol	screen		60021						
ANR	60132	Symbol	* x11 -> width		60021						
ANR	60133	Symbol	x11 -> dont_send_guest_xorg_res		60021						
ANR	60134	Symbol	* * x11		60021						
ANR	60135	Symbol	* x11 -> height		60021						
ANR	60136	Symbol	width		60021						
ANR	60137	Symbol	x11		60021						
ANR	60138	Symbol	LOG_DEBUG		60021						
ANR	60139	Symbol	* screen		60021						
ANR	60140	Symbol	x11 -> height		60021						
ANR	60141	Symbol	height		60021						
ANR	60142	Function	vdagent_x11_randr_handle_event	490:0:15484:16207							
ANR	60143	FunctionDef	"vdagent_x11_randr_handle_event (struct vdagent_x11 * x11 , XEvent event)"		60142	0					
ANR	60144	CompoundStatement		492:0:15562:16207	60142	0					
ANR	60145	IdentifierDeclStatement	int handled = TRUE ;	493:4:15568:15586	60142	0	True				
ANR	60146	IdentifierDecl	handled = TRUE		60142	0					
ANR	60147	IdentifierDeclType	int		60142	0					
ANR	60148	Identifier	handled		60142	1					
ANR	60149	AssignmentExpression	handled = TRUE		60142	2		=			
ANR	60150	Identifier	TRUE		60142	0					
ANR	60151	Identifier	TRUE		60142	1					
ANR	60152	SwitchStatement	switch ( event . type - x11 -> xrandr_event_base )		60142	1					
ANR	60153	Condition	event . type - x11 -> xrandr_event_base	495:12:15601:15635	60142	0	True				
ANR	60154	AdditiveExpression	event . type - x11 -> xrandr_event_base		60142	0		-			
ANR	60155	MemberAccess	event . type		60142	0					
ANR	60156	Identifier	event		60142	0					
ANR	60157	Identifier	type		60142	1					
ANR	60158	PtrMemberAccess	x11 -> xrandr_event_base		60142	1					
ANR	60159	Identifier	x11		60142	0					
ANR	60160	Identifier	xrandr_event_base		60142	1					
ANR	60161	CompoundStatement		4:49:75:75	60142	1					
ANR	60162	Label	case RRScreenChangeNotify :	496:8:15648:15673	60142	0	True				
ANR	60163	Identifier	RRScreenChangeNotify		60142	0					
ANR	60164	CompoundStatement		6:12:126:213	60142	1					
ANR	60165	IdentifierDeclStatement	XRRScreenChangeNotifyEvent * sce = ( XRRScreenChangeNotifyEvent * ) & event ;	497:12:15689:15776	60142	0	True				
ANR	60166	IdentifierDecl	* sce = ( XRRScreenChangeNotifyEvent * ) & event		60142	0					
ANR	60167	IdentifierDeclType	XRRScreenChangeNotifyEvent *		60142	0					
ANR	60168	Identifier	sce		60142	1					
ANR	60169	AssignmentExpression	* sce = ( XRRScreenChangeNotifyEvent * ) & event		60142	2		=			
ANR	60170	Identifier	sce		60142	0					
ANR	60171	CastExpression	( XRRScreenChangeNotifyEvent * ) & event		60142	1					
ANR	60172	CastTarget	XRRScreenChangeNotifyEvent *		60142	0					
ANR	60173	UnaryOperationExpression	& event		60142	1					
ANR	60174	UnaryOperator	&		60142	0					
ANR	60175	Identifier	event		60142	1					
ANR	60176	ExpressionStatement	"vdagent_x11_randr_handle_root_size_change ( x11 , 0 , sce -> width , sce -> height )"	499:12:15790:15880	60142	1	True				
ANR	60177	CallExpression	"vdagent_x11_randr_handle_root_size_change ( x11 , 0 , sce -> width , sce -> height )"		60142	0					
ANR	60178	Callee	vdagent_x11_randr_handle_root_size_change		60142	0					
ANR	60179	Identifier	vdagent_x11_randr_handle_root_size_change		60142	0					
ANR	60180	ArgumentList	x11		60142	1					
ANR	60181	Argument	x11		60142	0					
ANR	60182	Identifier	x11		60142	0					
ANR	60183	Argument	0		60142	1					
ANR	60184	PrimaryExpression	0		60142	0					
ANR	60185	Argument	sce -> width		60142	2					
ANR	60186	PtrMemberAccess	sce -> width		60142	0					
ANR	60187	Identifier	sce		60142	0					
ANR	60188	Identifier	width		60142	1					
ANR	60189	Argument	sce -> height		60142	3					
ANR	60190	PtrMemberAccess	sce -> height		60142	0					
ANR	60191	Identifier	sce		60142	0					
ANR	60192	Identifier	height		60142	1					
ANR	60193	BreakStatement	break ;	501:12:15894:15899	60142	2	True				
ANR	60194	Label	case RRNotify :	503:8:15919:15932	60142	2	True				
ANR	60195	Identifier	RRNotify		60142	0					
ANR	60196	CompoundStatement		12:23:371:371	60142	3					
ANR	60197	ExpressionStatement	"update_randr_res ( x11 , 0 )"	504:12:15948:15972	60142	0	True				
ANR	60198	CallExpression	"update_randr_res ( x11 , 0 )"		60142	0					
ANR	60199	Callee	update_randr_res		60142	0					
ANR	60200	Identifier	update_randr_res		60142	0					
ANR	60201	ArgumentList	x11		60142	1					
ANR	60202	Argument	x11		60142	0					
ANR	60203	Identifier	x11		60142	0					
ANR	60204	Argument	0		60142	1					
ANR	60205	PrimaryExpression	0		60142	0					
ANR	60206	IfStatement	if ( ! x11 -> dont_send_guest_xorg_res )		60142	1					
ANR	60207	Condition	! x11 -> dont_send_guest_xorg_res	505:16:15990:16019	60142	0	True				
ANR	60208	UnaryOperationExpression	! x11 -> dont_send_guest_xorg_res		60142	0					
ANR	60209	UnaryOperator	!		60142	0					
ANR	60210	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		60142	1					
ANR	60211	Identifier	x11		60142	0					
ANR	60212	Identifier	dont_send_guest_xorg_res		60142	1					
ANR	60213	ExpressionStatement	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"	506:16:16038:16084	60142	1	True				
ANR	60214	CallExpression	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"		60142	0					
ANR	60215	Callee	vdagent_x11_send_daemon_guest_xorg_res		60142	0					
ANR	60216	Identifier	vdagent_x11_send_daemon_guest_xorg_res		60142	0					
ANR	60217	ArgumentList	x11		60142	1					
ANR	60218	Argument	x11		60142	0					
ANR	60219	Identifier	x11		60142	0					
ANR	60220	Argument	1		60142	1					
ANR	60221	PrimaryExpression	1		60142	0					
ANR	60222	BreakStatement	break ;	507:12:16098:16103	60142	2	True				
ANR	60223	Label	default :	509:8:16123:16130	60142	4	True				
ANR	60224	Identifier	default		60142	0					
ANR	60225	ExpressionStatement	handled = FALSE	510:12:16144:16159	60142	5	True				
ANR	60226	AssignmentExpression	handled = FALSE		60142	0		=			
ANR	60227	Identifier	handled		60142	0					
ANR	60228	Identifier	FALSE		60142	1					
ANR	60229	BreakStatement	break ;	511:12:16173:16178	60142	6	True				
ANR	60230	ReturnStatement	return handled ;	514:4:16191:16205	60142	2	True				
ANR	60231	Identifier	handled		60142	0					
ANR	60232	ReturnType	int		60142	1					
ANR	60233	Identifier	vdagent_x11_randr_handle_event		60142	2					
ANR	60234	ParameterList	"struct vdagent_x11 * x11 , XEvent event"		60142	3					
ANR	60235	Parameter	struct vdagent_x11 * x11	490:35:15519:15541	60142	0	True				
ANR	60236	ParameterType	struct vdagent_x11 *		60142	0					
ANR	60237	Identifier	x11		60142	1					
ANR	60238	Parameter	XEvent event	491:4:15548:15559	60142	1	True				
ANR	60239	ParameterType	XEvent		60142	0					
ANR	60240	Identifier	event		60142	1					
ANR	60241	CFGEntryNode	ENTRY		60142		True				
ANR	60242	CFGExitNode	EXIT		60142		True				
ANR	60243	Symbol	* x11		60142						
ANR	60244	Symbol	TRUE		60142						
ANR	60245	Symbol	x11 -> dont_send_guest_xorg_res		60142						
ANR	60246	Symbol	sce -> height		60142						
ANR	60247	Symbol	x11 -> xrandr_event_base		60142						
ANR	60248	Symbol	& event		60142						
ANR	60249	Symbol	sce		60142						
ANR	60250	Symbol	sce -> width		60142						
ANR	60251	Symbol	handled		60142						
ANR	60252	Symbol	event . type		60142						
ANR	60253	Symbol	x11		60142						
ANR	60254	Symbol	FALSE		60142						
ANR	60255	Symbol	event		60142						
ANR	60256	Symbol	* sce		60142						
ANR	60257	Function	min_int	517:0:16210:16271							
ANR	60258	FunctionDef	"min_int (int x , int y)"		60257	0					
ANR	60259	CompoundStatement		518:0:16243:16271	60257	0					
ANR	60260	ReturnStatement	return x > y ? y : x ;	519:4:16249:16269	60257	0	True				
ANR	60261	ConditionalExpression	x > y ? y : x		60257	0					
ANR	60262	Condition	x > y		60257	0					
ANR	60263	RelationalExpression	x > y		60257	0		>			
ANR	60264	Identifier	x		60257	0					
ANR	60265	Identifier	y		60257	1					
ANR	60266	Identifier	y		60257	1					
ANR	60267	Identifier	x		60257	2					
ANR	60268	ReturnType	static int		60257	1					
ANR	60269	Identifier	min_int		60257	2					
ANR	60270	ParameterList	"int x , int y"		60257	3					
ANR	60271	Parameter	int x	517:19:16229:16233	60257	0	True				
ANR	60272	ParameterType	int		60257	0					
ANR	60273	Identifier	x		60257	1					
ANR	60274	Parameter	int y	517:26:16236:16240	60257	1	True				
ANR	60275	ParameterType	int		60257	0					
ANR	60276	Identifier	y		60257	1					
ANR	60277	CFGEntryNode	ENTRY		60257		True				
ANR	60278	CFGExitNode	EXIT		60257		True				
ANR	60279	Symbol	x		60257						
ANR	60280	Symbol	y		60257						
ANR	60281	Function	max_int	522:0:16274:16335							
ANR	60282	FunctionDef	"max_int (int x , int y)"		60281	0					
ANR	60283	CompoundStatement		523:0:16307:16335	60281	0					
ANR	60284	ReturnStatement	return x > y ? x : y ;	524:4:16313:16333	60281	0	True				
ANR	60285	ConditionalExpression	x > y ? x : y		60281	0					
ANR	60286	Condition	x > y		60281	0					
ANR	60287	RelationalExpression	x > y		60281	0		>			
ANR	60288	Identifier	x		60281	0					
ANR	60289	Identifier	y		60281	1					
ANR	60290	Identifier	x		60281	1					
ANR	60291	Identifier	y		60281	2					
ANR	60292	ReturnType	static int		60281	1					
ANR	60293	Identifier	max_int		60281	2					
ANR	60294	ParameterList	"int x , int y"		60281	3					
ANR	60295	Parameter	int x	522:19:16293:16297	60281	0	True				
ANR	60296	ParameterType	int		60281	0					
ANR	60297	Identifier	x		60281	1					
ANR	60298	Parameter	int y	522:26:16300:16304	60281	1	True				
ANR	60299	ParameterType	int		60281	0					
ANR	60300	Identifier	y		60281	1					
ANR	60301	CFGEntryNode	ENTRY		60281		True				
ANR	60302	CFGExitNode	EXIT		60281		True				
ANR	60303	Symbol	x		60281						
ANR	60304	Symbol	y		60281						
ANR	60305	Function	constrain_to_range	527:0:16338:16574							
ANR	60306	FunctionDef	"constrain_to_range (int low , int * val , int high)"		60305	0					
ANR	60307	CompoundStatement		528:0:16397:16574	60305	0					
ANR	60308	IfStatement	if ( low <= * val && * val <= high )		60305	0					
ANR	60309	Condition	low <= * val && * val <= high	529:8:16407:16433	60305	0	True				
ANR	60310	AndExpression	low <= * val && * val <= high		60305	0		&&			
ANR	60311	RelationalExpression	low <= * val		60305	0		<=			
ANR	60312	Identifier	low		60305	0					
ANR	60313	UnaryOperationExpression	* val		60305	1					
ANR	60314	UnaryOperator	*		60305	0					
ANR	60315	Identifier	val		60305	1					
ANR	60316	RelationalExpression	* val <= high		60305	1		<=			
ANR	60317	UnaryOperationExpression	* val		60305	0					
ANR	60318	UnaryOperator	*		60305	0					
ANR	60319	Identifier	val		60305	1					
ANR	60320	Identifier	high		60305	1					
ANR	60321	CompoundStatement		2:37:38:38	60305	1					
ANR	60322	ReturnStatement	return 0 ;	530:8:16446:16454	60305	0	True				
ANR	60323	PrimaryExpression	0		60305	0					
ANR	60324	IfStatement	if ( low > * val )		60305	1					
ANR	60325	Condition	low > * val	532:8:16470:16479	60305	0	True				
ANR	60326	RelationalExpression	low > * val		60305	0		>			
ANR	60327	Identifier	low		60305	0					
ANR	60328	UnaryOperationExpression	* val		60305	1					
ANR	60329	UnaryOperator	*		60305	0					
ANR	60330	Identifier	val		60305	1					
ANR	60331	CompoundStatement		5:20:84:84	60305	1					
ANR	60332	ExpressionStatement	* val = low	533:8:16492:16502	60305	0	True				
ANR	60333	AssignmentExpression	* val = low		60305	0		=			
ANR	60334	UnaryOperationExpression	* val		60305	0					
ANR	60335	UnaryOperator	*		60305	0					
ANR	60336	Identifier	val		60305	1					
ANR	60337	Identifier	low		60305	1					
ANR	60338	IfStatement	if ( * val > high )		60305	2					
ANR	60339	Condition	* val > high	535:8:16518:16528	60305	0	True				
ANR	60340	RelationalExpression	* val > high		60305	0		>			
ANR	60341	UnaryOperationExpression	* val		60305	0					
ANR	60342	UnaryOperator	*		60305	0					
ANR	60343	Identifier	val		60305	1					
ANR	60344	Identifier	high		60305	1					
ANR	60345	CompoundStatement		8:21:133:133	60305	1					
ANR	60346	ExpressionStatement	* val = high	536:8:16541:16552	60305	0	True				
ANR	60347	AssignmentExpression	* val = high		60305	0		=			
ANR	60348	UnaryOperationExpression	* val		60305	0					
ANR	60349	UnaryOperator	*		60305	0					
ANR	60350	Identifier	val		60305	1					
ANR	60351	Identifier	high		60305	1					
ANR	60352	ReturnStatement	return 1 ;	538:4:16564:16572	60305	3	True				
ANR	60353	PrimaryExpression	1		60305	0					
ANR	60354	ReturnType	static int		60305	1					
ANR	60355	Identifier	constrain_to_range		60305	2					
ANR	60356	ParameterList	"int low , int * val , int high"		60305	3					
ANR	60357	Parameter	int low	527:30:16368:16374	60305	0	True				
ANR	60358	ParameterType	int		60305	0					
ANR	60359	Identifier	low		60305	1					
ANR	60360	Parameter	int * val	527:39:16377:16384	60305	1	True				
ANR	60361	ParameterType	int *		60305	0					
ANR	60362	Identifier	val		60305	1					
ANR	60363	Parameter	int high	527:49:16387:16394	60305	2	True				
ANR	60364	ParameterType	int		60305	0					
ANR	60365	Identifier	high		60305	1					
ANR	60366	CFGEntryNode	ENTRY		60305		True				
ANR	60367	CFGExitNode	EXIT		60305		True				
ANR	60368	Symbol	val		60305						
ANR	60369	Symbol	high		60305						
ANR	60370	Symbol	low		60305						
ANR	60371	Symbol	* val		60305						
ANR	60372	Function	constrain_to_screen	541:0:16577:17142							
ANR	60373	FunctionDef	"constrain_to_screen (struct vdagent_x11 * x11 , int * w , int * h)"		60372	0					
ANR	60374	CompoundStatement		542:0:16650:17142	60372	0					
ANR	60375	IdentifierDeclStatement	"int lx , ly , hx , hy ;"	543:4:16656:16674	60372	0	True				
ANR	60376	IdentifierDecl	lx		60372	0					
ANR	60377	IdentifierDeclType	int		60372	0					
ANR	60378	Identifier	lx		60372	1					
ANR	60379	IdentifierDecl	ly		60372	1					
ANR	60380	IdentifierDeclType	int		60372	0					
ANR	60381	Identifier	ly		60372	1					
ANR	60382	IdentifierDecl	hx		60372	2					
ANR	60383	IdentifierDeclType	int		60372	0					
ANR	60384	Identifier	hx		60372	1					
ANR	60385	IdentifierDecl	hy		60372	3					
ANR	60386	IdentifierDeclType	int		60372	0					
ANR	60387	Identifier	hy		60372	1					
ANR	60388	IdentifierDeclStatement	int orig_h = * h ;	544:4:16680:16695	60372	1	True				
ANR	60389	IdentifierDecl	orig_h = * h		60372	0					
ANR	60390	IdentifierDeclType	int		60372	0					
ANR	60391	Identifier	orig_h		60372	1					
ANR	60392	AssignmentExpression	orig_h = * h		60372	2		=			
ANR	60393	Identifier	orig_h		60372	0					
ANR	60394	UnaryOperationExpression	* h		60372	1					
ANR	60395	UnaryOperator	*		60372	0					
ANR	60396	Identifier	h		60372	1					
ANR	60397	IdentifierDeclStatement	int orig_w = * w ;	545:4:16701:16716	60372	2	True				
ANR	60398	IdentifierDecl	orig_w = * w		60372	0					
ANR	60399	IdentifierDeclType	int		60372	0					
ANR	60400	Identifier	orig_w		60372	1					
ANR	60401	AssignmentExpression	orig_w = * w		60372	2		=			
ANR	60402	Identifier	orig_w		60372	0					
ANR	60403	UnaryOperationExpression	* w		60372	1					
ANR	60404	UnaryOperator	*		60372	0					
ANR	60405	Identifier	w		60372	1					
ANR	60406	ExpressionStatement	lx = x11 -> randr . min_width	547:4:16723:16748	60372	3	True				
ANR	60407	AssignmentExpression	lx = x11 -> randr . min_width		60372	0		=			
ANR	60408	Identifier	lx		60372	0					
ANR	60409	MemberAccess	x11 -> randr . min_width		60372	1					
ANR	60410	PtrMemberAccess	x11 -> randr		60372	0					
ANR	60411	Identifier	x11		60372	0					
ANR	60412	Identifier	randr		60372	1					
ANR	60413	Identifier	min_width		60372	1					
ANR	60414	ExpressionStatement	hx = x11 -> randr . max_width	548:4:16754:16779	60372	4	True				
ANR	60415	AssignmentExpression	hx = x11 -> randr . max_width		60372	0		=			
ANR	60416	Identifier	hx		60372	0					
ANR	60417	MemberAccess	x11 -> randr . max_width		60372	1					
ANR	60418	PtrMemberAccess	x11 -> randr		60372	0					
ANR	60419	Identifier	x11		60372	0					
ANR	60420	Identifier	randr		60372	1					
ANR	60421	Identifier	max_width		60372	1					
ANR	60422	ExpressionStatement	ly = x11 -> randr . min_height	549:4:16785:16811	60372	5	True				
ANR	60423	AssignmentExpression	ly = x11 -> randr . min_height		60372	0		=			
ANR	60424	Identifier	ly		60372	0					
ANR	60425	MemberAccess	x11 -> randr . min_height		60372	1					
ANR	60426	PtrMemberAccess	x11 -> randr		60372	0					
ANR	60427	Identifier	x11		60372	0					
ANR	60428	Identifier	randr		60372	1					
ANR	60429	Identifier	min_height		60372	1					
ANR	60430	ExpressionStatement	hy = x11 -> randr . max_height	550:4:16817:16843	60372	6	True				
ANR	60431	AssignmentExpression	hy = x11 -> randr . max_height		60372	0		=			
ANR	60432	Identifier	hy		60372	0					
ANR	60433	MemberAccess	x11 -> randr . max_height		60372	1					
ANR	60434	PtrMemberAccess	x11 -> randr		60372	0					
ANR	60435	Identifier	x11		60372	0					
ANR	60436	Identifier	randr		60372	1					
ANR	60437	Identifier	max_height		60372	1					
ANR	60438	IfStatement	"if ( constrain_to_range ( lx , w , hx ) )"		60372	7					
ANR	60439	Condition	"constrain_to_range ( lx , w , hx )"	551:8:16853:16881	60372	0	True				
ANR	60440	CallExpression	"constrain_to_range ( lx , w , hx )"		60372	0					
ANR	60441	Callee	constrain_to_range		60372	0					
ANR	60442	Identifier	constrain_to_range		60372	0					
ANR	60443	ArgumentList	lx		60372	1					
ANR	60444	Argument	lx		60372	0					
ANR	60445	Identifier	lx		60372	0					
ANR	60446	Argument	w		60372	1					
ANR	60447	Identifier	w		60372	0					
ANR	60448	Argument	hx		60372	2					
ANR	60449	Identifier	hx		60372	0					
ANR	60450	CompoundStatement		10:39:233:233	60372	1					
ANR	60451	ExpressionStatement	"syslog ( LOG_ERR , ""width not in driver range: ! %d < %d < %d"" , lx , orig_w , hx )"	552:8:16894:16985	60372	0	True				
ANR	60452	CallExpression	"syslog ( LOG_ERR , ""width not in driver range: ! %d < %d < %d"" , lx , orig_w , hx )"		60372	0					
ANR	60453	Callee	syslog		60372	0					
ANR	60454	Identifier	syslog		60372	0					
ANR	60455	ArgumentList	LOG_ERR		60372	1					
ANR	60456	Argument	LOG_ERR		60372	0					
ANR	60457	Identifier	LOG_ERR		60372	0					
ANR	60458	Argument	"""width not in driver range: ! %d < %d < %d"""		60372	1					
ANR	60459	PrimaryExpression	"""width not in driver range: ! %d < %d < %d"""		60372	0					
ANR	60460	Argument	lx		60372	2					
ANR	60461	Identifier	lx		60372	0					
ANR	60462	Argument	orig_w		60372	3					
ANR	60463	Identifier	orig_w		60372	0					
ANR	60464	Argument	hx		60372	4					
ANR	60465	Identifier	hx		60372	0					
ANR	60466	IfStatement	"if ( constrain_to_range ( ly , h , hy ) )"		60372	8					
ANR	60467	Condition	"constrain_to_range ( ly , h , hy )"	555:8:17001:17029	60372	0	True				
ANR	60468	CallExpression	"constrain_to_range ( ly , h , hy )"		60372	0					
ANR	60469	Callee	constrain_to_range		60372	0					
ANR	60470	Identifier	constrain_to_range		60372	0					
ANR	60471	ArgumentList	ly		60372	1					
ANR	60472	Argument	ly		60372	0					
ANR	60473	Identifier	ly		60372	0					
ANR	60474	Argument	h		60372	1					
ANR	60475	Identifier	h		60372	0					
ANR	60476	Argument	hy		60372	2					
ANR	60477	Identifier	hy		60372	0					
ANR	60478	CompoundStatement		14:39:381:381	60372	1					
ANR	60479	ExpressionStatement	"syslog ( LOG_ERR , ""height not in driver range: ! %d < %d < %d"" , ly , orig_h , hy )"	556:8:17042:17134	60372	0	True				
ANR	60480	CallExpression	"syslog ( LOG_ERR , ""height not in driver range: ! %d < %d < %d"" , ly , orig_h , hy )"		60372	0					
ANR	60481	Callee	syslog		60372	0					
ANR	60482	Identifier	syslog		60372	0					
ANR	60483	ArgumentList	LOG_ERR		60372	1					
ANR	60484	Argument	LOG_ERR		60372	0					
ANR	60485	Identifier	LOG_ERR		60372	0					
ANR	60486	Argument	"""height not in driver range: ! %d < %d < %d"""		60372	1					
ANR	60487	PrimaryExpression	"""height not in driver range: ! %d < %d < %d"""		60372	0					
ANR	60488	Argument	ly		60372	2					
ANR	60489	Identifier	ly		60372	0					
ANR	60490	Argument	orig_h		60372	3					
ANR	60491	Identifier	orig_h		60372	0					
ANR	60492	Argument	hy		60372	4					
ANR	60493	Identifier	hy		60372	0					
ANR	60494	ReturnType	static void		60372	1					
ANR	60495	Identifier	constrain_to_screen		60372	2					
ANR	60496	ParameterList	"struct vdagent_x11 * x11 , int * w , int * h"		60372	3					
ANR	60497	Parameter	struct vdagent_x11 * x11	541:32:16609:16631	60372	0	True				
ANR	60498	ParameterType	struct vdagent_x11 *		60372	0					
ANR	60499	Identifier	x11		60372	1					
ANR	60500	Parameter	int * w	541:57:16634:16639	60372	1	True				
ANR	60501	ParameterType	int *		60372	0					
ANR	60502	Identifier	w		60372	1					
ANR	60503	Parameter	int * h	541:65:16642:16647	60372	2	True				
ANR	60504	ParameterType	int *		60372	0					
ANR	60505	Identifier	h		60372	1					
ANR	60506	CFGEntryNode	ENTRY		60372		True				
ANR	60507	CFGExitNode	EXIT		60372		True				
ANR	60508	Symbol	* w		60372						
ANR	60509	Symbol	* x11		60372						
ANR	60510	Symbol	x11 -> randr . max_height		60372						
ANR	60511	Symbol	constrain_to_range		60372						
ANR	60512	Symbol	x11 -> randr . min_height		60372						
ANR	60513	Symbol	h		60372						
ANR	60514	Symbol	x11 -> randr		60372						
ANR	60515	Symbol	orig_h		60372						
ANR	60516	Symbol	lx		60372						
ANR	60517	Symbol	ly		60372						
ANR	60518	Symbol	hx		60372						
ANR	60519	Symbol	hy		60372						
ANR	60520	Symbol	* h		60372						
ANR	60521	Symbol	w		60372						
ANR	60522	Symbol	LOG_ERR		60372						
ANR	60523	Symbol	orig_w		60372						
ANR	60524	Symbol	x11 -> randr . max_width		60372						
ANR	60525	Symbol	x11		60372						
ANR	60526	Symbol	x11 -> randr . min_width		60372						
ANR	60527	Function	monitor_enabled	561:0:17145:17245							
ANR	60528	FunctionDef	monitor_enabled (VDAgentMonConfig * mon)		60527	0					
ANR	60529	CompoundStatement		562:0:17195:17245	60527	0					
ANR	60530	ReturnStatement	return mon -> width != 0 && mon -> height != 0 ;	563:4:17201:17243	60527	0	True				
ANR	60531	AndExpression	mon -> width != 0 && mon -> height != 0		60527	0		&&			
ANR	60532	EqualityExpression	mon -> width != 0		60527	0		!=			
ANR	60533	PtrMemberAccess	mon -> width		60527	0					
ANR	60534	Identifier	mon		60527	0					
ANR	60535	Identifier	width		60527	1					
ANR	60536	PrimaryExpression	0		60527	1					
ANR	60537	EqualityExpression	mon -> height != 0		60527	1		!=			
ANR	60538	PtrMemberAccess	mon -> height		60527	0					
ANR	60539	Identifier	mon		60527	0					
ANR	60540	Identifier	height		60527	1					
ANR	60541	PrimaryExpression	0		60527	1					
ANR	60542	ReturnType	static int		60527	1					
ANR	60543	Identifier	monitor_enabled		60527	2					
ANR	60544	ParameterList	VDAgentMonConfig * mon		60527	3					
ANR	60545	Parameter	VDAgentMonConfig * mon	561:27:17172:17192	60527	0	True				
ANR	60546	ParameterType	VDAgentMonConfig *		60527	0					
ANR	60547	Identifier	mon		60527	1					
ANR	60548	CFGEntryNode	ENTRY		60527		True				
ANR	60549	CFGExitNode	EXIT		60527		True				
ANR	60550	Symbol	mon -> height		60527						
ANR	60551	Symbol	mon -> width		60527						
ANR	60552	Symbol	* mon		60527						
ANR	60553	Symbol	mon		60527						
ANR	60554	Function	zero_base_monitors	578:0:17677:19132							
ANR	60555	FunctionDef	"zero_base_monitors (struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int * width , int * height)"		60554	0					
ANR	60556	CompoundStatement		581:0:17855:19132	60554	0					
ANR	60557	IdentifierDeclStatement	"int i , min_x = INT_MAX , min_y = INT_MAX , max_x = INT_MIN , max_y = INT_MIN ;"	582:4:17861:17934	60554	0	True				
ANR	60558	IdentifierDecl	i		60554	0					
ANR	60559	IdentifierDeclType	int		60554	0					
ANR	60560	Identifier	i		60554	1					
ANR	60561	IdentifierDecl	min_x = INT_MAX		60554	1					
ANR	60562	IdentifierDeclType	int		60554	0					
ANR	60563	Identifier	min_x		60554	1					
ANR	60564	AssignmentExpression	min_x = INT_MAX		60554	2		=			
ANR	60565	Identifier	INT_MAX		60554	0					
ANR	60566	Identifier	INT_MAX		60554	1					
ANR	60567	IdentifierDecl	min_y = INT_MAX		60554	2					
ANR	60568	IdentifierDeclType	int		60554	0					
ANR	60569	Identifier	min_y		60554	1					
ANR	60570	AssignmentExpression	min_y = INT_MAX		60554	2		=			
ANR	60571	Identifier	INT_MAX		60554	0					
ANR	60572	Identifier	INT_MAX		60554	1					
ANR	60573	IdentifierDecl	max_x = INT_MIN		60554	3					
ANR	60574	IdentifierDeclType	int		60554	0					
ANR	60575	Identifier	max_x		60554	1					
ANR	60576	AssignmentExpression	max_x = INT_MIN		60554	2		=			
ANR	60577	Identifier	INT_MIN		60554	0					
ANR	60578	Identifier	INT_MIN		60554	1					
ANR	60579	IdentifierDecl	max_y = INT_MIN		60554	4					
ANR	60580	IdentifierDeclType	int		60554	0					
ANR	60581	Identifier	max_y		60554	1					
ANR	60582	AssignmentExpression	max_y = INT_MIN		60554	2		=			
ANR	60583	Identifier	INT_MIN		60554	0					
ANR	60584	Identifier	INT_MIN		60554	1					
ANR	60585	IdentifierDeclStatement	"int * mon_height , * mon_width ;"	583:4:17940:17967	60554	1	True				
ANR	60586	IdentifierDecl	* mon_height		60554	0					
ANR	60587	IdentifierDeclType	int *		60554	0					
ANR	60588	Identifier	mon_height		60554	1					
ANR	60589	IdentifierDecl	* mon_width		60554	1					
ANR	60590	IdentifierDeclType	int *		60554	0					
ANR	60591	Identifier	mon_width		60554	1					
ANR	60592	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; i ++ )		60554	2					
ANR	60593	ForInit	i = 0 ;	585:9:17979:17984	60554	0	True				
ANR	60594	AssignmentExpression	i = 0		60554	0		=			
ANR	60595	Identifier	i		60554	0					
ANR	60596	PrimaryExpression	0		60554	1					
ANR	60597	Condition	i < mon_config -> num_of_monitors	585:16:17986:18016	60554	1	True				
ANR	60598	RelationalExpression	i < mon_config -> num_of_monitors		60554	0		<			
ANR	60599	Identifier	i		60554	0					
ANR	60600	PtrMemberAccess	mon_config -> num_of_monitors		60554	1					
ANR	60601	Identifier	mon_config		60554	0					
ANR	60602	Identifier	num_of_monitors		60554	1					
ANR	60603	PostIncDecOperationExpression	i ++	585:49:18019:18021	60554	2	True				
ANR	60604	Identifier	i		60554	0					
ANR	60605	IncDec	++		60554	1					
ANR	60606	CompoundStatement		5:54:168:168	60554	3					
ANR	60607	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		60554	0					
ANR	60608	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	586:12:18038:18079	60554	0	True				
ANR	60609	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		60554	0					
ANR	60610	UnaryOperator	!		60554	0					
ANR	60611	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		60554	1					
ANR	60612	Callee	monitor_enabled		60554	0					
ANR	60613	Identifier	monitor_enabled		60554	0					
ANR	60614	ArgumentList	& mon_config -> monitors [ i ]		60554	1					
ANR	60615	Argument	& mon_config -> monitors [ i ]		60554	0					
ANR	60616	UnaryOperationExpression	& mon_config -> monitors [ i ]		60554	0					
ANR	60617	UnaryOperator	&		60554	0					
ANR	60618	ArrayIndexing	mon_config -> monitors [ i ]		60554	1					
ANR	60619	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60620	Identifier	mon_config		60554	0					
ANR	60621	Identifier	monitors		60554	1					
ANR	60622	Identifier	i		60554	1					
ANR	60623	ContinueStatement	continue ;	587:12:18094:18102	60554	1	True				
ANR	60624	ExpressionStatement	mon_config -> monitors [ i ] . x &= ~7	588:8:18112:18143	60554	1	True				
ANR	60625	AssignmentExpression	mon_config -> monitors [ i ] . x &= ~7		60554	0		&=			
ANR	60626	MemberAccess	mon_config -> monitors [ i ] . x		60554	0					
ANR	60627	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60628	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60629	Identifier	mon_config		60554	0					
ANR	60630	Identifier	monitors		60554	1					
ANR	60631	Identifier	i		60554	1					
ANR	60632	Identifier	x		60554	1					
ANR	60633	Identifier	~7		60554	1					
ANR	60634	ExpressionStatement	mon_config -> monitors [ i ] . width &= ~7	589:8:18153:18188	60554	2	True				
ANR	60635	AssignmentExpression	mon_config -> monitors [ i ] . width &= ~7		60554	0		&=			
ANR	60636	MemberAccess	mon_config -> monitors [ i ] . width		60554	0					
ANR	60637	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60638	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60639	Identifier	mon_config		60554	0					
ANR	60640	Identifier	monitors		60554	1					
ANR	60641	Identifier	i		60554	1					
ANR	60642	Identifier	width		60554	1					
ANR	60643	Identifier	~7		60554	1					
ANR	60644	ExpressionStatement	mon_width = ( int * ) & mon_config -> monitors [ i ] . width	590:8:18198:18247	60554	3	True				
ANR	60645	AssignmentExpression	mon_width = ( int * ) & mon_config -> monitors [ i ] . width		60554	0		=			
ANR	60646	Identifier	mon_width		60554	0					
ANR	60647	CastExpression	( int * ) & mon_config -> monitors [ i ] . width		60554	1					
ANR	60648	CastTarget	int *		60554	0					
ANR	60649	UnaryOperationExpression	& mon_config -> monitors [ i ] . width		60554	1					
ANR	60650	UnaryOperator	&		60554	0					
ANR	60651	MemberAccess	mon_config -> monitors [ i ] . width		60554	1					
ANR	60652	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60653	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60654	Identifier	mon_config		60554	0					
ANR	60655	Identifier	monitors		60554	1					
ANR	60656	Identifier	i		60554	1					
ANR	60657	Identifier	width		60554	1					
ANR	60658	ExpressionStatement	mon_height = ( int * ) & mon_config -> monitors [ i ] . height	591:8:18257:18308	60554	4	True				
ANR	60659	AssignmentExpression	mon_height = ( int * ) & mon_config -> monitors [ i ] . height		60554	0		=			
ANR	60660	Identifier	mon_height		60554	0					
ANR	60661	CastExpression	( int * ) & mon_config -> monitors [ i ] . height		60554	1					
ANR	60662	CastTarget	int *		60554	0					
ANR	60663	UnaryOperationExpression	& mon_config -> monitors [ i ] . height		60554	1					
ANR	60664	UnaryOperator	&		60554	0					
ANR	60665	MemberAccess	mon_config -> monitors [ i ] . height		60554	1					
ANR	60666	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60667	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60668	Identifier	mon_config		60554	0					
ANR	60669	Identifier	monitors		60554	1					
ANR	60670	Identifier	i		60554	1					
ANR	60671	Identifier	height		60554	1					
ANR	60672	ExpressionStatement	"constrain_to_screen ( x11 , mon_width , mon_height )"	592:8:18318:18365	60554	5	True				
ANR	60673	CallExpression	"constrain_to_screen ( x11 , mon_width , mon_height )"		60554	0					
ANR	60674	Callee	constrain_to_screen		60554	0					
ANR	60675	Identifier	constrain_to_screen		60554	0					
ANR	60676	ArgumentList	x11		60554	1					
ANR	60677	Argument	x11		60554	0					
ANR	60678	Identifier	x11		60554	0					
ANR	60679	Argument	mon_width		60554	1					
ANR	60680	Identifier	mon_width		60554	0					
ANR	60681	Argument	mon_height		60554	2					
ANR	60682	Identifier	mon_height		60554	0					
ANR	60683	ExpressionStatement	"min_x = min_int ( mon_config -> monitors [ i ] . x , min_x )"	593:8:18375:18424	60554	6	True				
ANR	60684	AssignmentExpression	"min_x = min_int ( mon_config -> monitors [ i ] . x , min_x )"		60554	0		=			
ANR	60685	Identifier	min_x		60554	0					
ANR	60686	CallExpression	"min_int ( mon_config -> monitors [ i ] . x , min_x )"		60554	1					
ANR	60687	Callee	min_int		60554	0					
ANR	60688	Identifier	min_int		60554	0					
ANR	60689	ArgumentList	mon_config -> monitors [ i ] . x		60554	1					
ANR	60690	Argument	mon_config -> monitors [ i ] . x		60554	0					
ANR	60691	MemberAccess	mon_config -> monitors [ i ] . x		60554	0					
ANR	60692	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60693	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60694	Identifier	mon_config		60554	0					
ANR	60695	Identifier	monitors		60554	1					
ANR	60696	Identifier	i		60554	1					
ANR	60697	Identifier	x		60554	1					
ANR	60698	Argument	min_x		60554	1					
ANR	60699	Identifier	min_x		60554	0					
ANR	60700	ExpressionStatement	"min_y = min_int ( mon_config -> monitors [ i ] . y , min_y )"	594:8:18434:18483	60554	7	True				
ANR	60701	AssignmentExpression	"min_y = min_int ( mon_config -> monitors [ i ] . y , min_y )"		60554	0		=			
ANR	60702	Identifier	min_y		60554	0					
ANR	60703	CallExpression	"min_int ( mon_config -> monitors [ i ] . y , min_y )"		60554	1					
ANR	60704	Callee	min_int		60554	0					
ANR	60705	Identifier	min_int		60554	0					
ANR	60706	ArgumentList	mon_config -> monitors [ i ] . y		60554	1					
ANR	60707	Argument	mon_config -> monitors [ i ] . y		60554	0					
ANR	60708	MemberAccess	mon_config -> monitors [ i ] . y		60554	0					
ANR	60709	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60710	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60711	Identifier	mon_config		60554	0					
ANR	60712	Identifier	monitors		60554	1					
ANR	60713	Identifier	i		60554	1					
ANR	60714	Identifier	y		60554	1					
ANR	60715	Argument	min_y		60554	1					
ANR	60716	Identifier	min_y		60554	0					
ANR	60717	ExpressionStatement	"max_x = max_int ( mon_config -> monitors [ i ] . x + * mon_width , max_x )"	595:8:18493:18555	60554	8	True				
ANR	60718	AssignmentExpression	"max_x = max_int ( mon_config -> monitors [ i ] . x + * mon_width , max_x )"		60554	0		=			
ANR	60719	Identifier	max_x		60554	0					
ANR	60720	CallExpression	"max_int ( mon_config -> monitors [ i ] . x + * mon_width , max_x )"		60554	1					
ANR	60721	Callee	max_int		60554	0					
ANR	60722	Identifier	max_int		60554	0					
ANR	60723	ArgumentList	mon_config -> monitors [ i ] . x + * mon_width		60554	1					
ANR	60724	Argument	mon_config -> monitors [ i ] . x + * mon_width		60554	0					
ANR	60725	AdditiveExpression	mon_config -> monitors [ i ] . x + * mon_width		60554	0		+			
ANR	60726	MemberAccess	mon_config -> monitors [ i ] . x		60554	0					
ANR	60727	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60728	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60729	Identifier	mon_config		60554	0					
ANR	60730	Identifier	monitors		60554	1					
ANR	60731	Identifier	i		60554	1					
ANR	60732	Identifier	x		60554	1					
ANR	60733	UnaryOperationExpression	* mon_width		60554	1					
ANR	60734	UnaryOperator	*		60554	0					
ANR	60735	Identifier	mon_width		60554	1					
ANR	60736	Argument	max_x		60554	1					
ANR	60737	Identifier	max_x		60554	0					
ANR	60738	ExpressionStatement	"max_y = max_int ( mon_config -> monitors [ i ] . y + * mon_height , max_y )"	596:8:18565:18628	60554	9	True				
ANR	60739	AssignmentExpression	"max_y = max_int ( mon_config -> monitors [ i ] . y + * mon_height , max_y )"		60554	0		=			
ANR	60740	Identifier	max_y		60554	0					
ANR	60741	CallExpression	"max_int ( mon_config -> monitors [ i ] . y + * mon_height , max_y )"		60554	1					
ANR	60742	Callee	max_int		60554	0					
ANR	60743	Identifier	max_int		60554	0					
ANR	60744	ArgumentList	mon_config -> monitors [ i ] . y + * mon_height		60554	1					
ANR	60745	Argument	mon_config -> monitors [ i ] . y + * mon_height		60554	0					
ANR	60746	AdditiveExpression	mon_config -> monitors [ i ] . y + * mon_height		60554	0		+			
ANR	60747	MemberAccess	mon_config -> monitors [ i ] . y		60554	0					
ANR	60748	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60749	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60750	Identifier	mon_config		60554	0					
ANR	60751	Identifier	monitors		60554	1					
ANR	60752	Identifier	i		60554	1					
ANR	60753	Identifier	y		60554	1					
ANR	60754	UnaryOperationExpression	* mon_height		60554	1					
ANR	60755	UnaryOperator	*		60554	0					
ANR	60756	Identifier	mon_height		60554	1					
ANR	60757	Argument	max_y		60554	1					
ANR	60758	Identifier	max_y		60554	0					
ANR	60759	IfStatement	if ( min_x != 0 || min_y != 0 )		60554	3					
ANR	60760	Condition	min_x != 0 || min_y != 0	598:8:18644:18667	60554	0	True				
ANR	60761	OrExpression	min_x != 0 || min_y != 0		60554	0		||			
ANR	60762	EqualityExpression	min_x != 0		60554	0		!=			
ANR	60763	Identifier	min_x		60554	0					
ANR	60764	PrimaryExpression	0		60554	1					
ANR	60765	EqualityExpression	min_y != 0		60554	1		!=			
ANR	60766	Identifier	min_y		60554	0					
ANR	60767	PrimaryExpression	0		60554	1					
ANR	60768	CompoundStatement		18:34:814:814	60554	1					
ANR	60769	ExpressionStatement	"syslog ( LOG_ERR , ""%s: agent config %d,%d rooted, adjusting to 0,0."" , __FUNCTION__ , min_x , min_y )"	599:8:18680:18790	60554	0	True				
ANR	60770	CallExpression	"syslog ( LOG_ERR , ""%s: agent config %d,%d rooted, adjusting to 0,0."" , __FUNCTION__ , min_x , min_y )"		60554	0					
ANR	60771	Callee	syslog		60554	0					
ANR	60772	Identifier	syslog		60554	0					
ANR	60773	ArgumentList	LOG_ERR		60554	1					
ANR	60774	Argument	LOG_ERR		60554	0					
ANR	60775	Identifier	LOG_ERR		60554	0					
ANR	60776	Argument	"""%s: agent config %d,%d rooted, adjusting to 0,0."""		60554	1					
ANR	60777	PrimaryExpression	"""%s: agent config %d,%d rooted, adjusting to 0,0."""		60554	0					
ANR	60778	Argument	__FUNCTION__		60554	2					
ANR	60779	Identifier	__FUNCTION__		60554	0					
ANR	60780	Argument	min_x		60554	3					
ANR	60781	Identifier	min_x		60554	0					
ANR	60782	Argument	min_y		60554	4					
ANR	60783	Identifier	min_y		60554	0					
ANR	60784	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		60554	1					
ANR	60785	ForInit	i = 0 ;	601:13:18805:18811	60554	0	True				
ANR	60786	AssignmentExpression	i = 0		60554	0		=			
ANR	60787	Identifier	i		60554	0					
ANR	60788	PrimaryExpression	0		60554	1					
ANR	60789	Condition	i < mon_config -> num_of_monitors	601:21:18813:18843	60554	1	True				
ANR	60790	RelationalExpression	i < mon_config -> num_of_monitors		60554	0		<			
ANR	60791	Identifier	i		60554	0					
ANR	60792	PtrMemberAccess	mon_config -> num_of_monitors		60554	1					
ANR	60793	Identifier	mon_config		60554	0					
ANR	60794	Identifier	num_of_monitors		60554	1					
ANR	60795	UnaryExpression	++ i	601:54:18846:18848	60554	2	True				
ANR	60796	IncDec	++		60554	0					
ANR	60797	Identifier	i		60554	1					
ANR	60798	CompoundStatement		21:59:995:995	60554	3					
ANR	60799	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		60554	0					
ANR	60800	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	602:16:18869:18910	60554	0	True				
ANR	60801	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		60554	0					
ANR	60802	UnaryOperator	!		60554	0					
ANR	60803	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		60554	1					
ANR	60804	Callee	monitor_enabled		60554	0					
ANR	60805	Identifier	monitor_enabled		60554	0					
ANR	60806	ArgumentList	& mon_config -> monitors [ i ]		60554	1					
ANR	60807	Argument	& mon_config -> monitors [ i ]		60554	0					
ANR	60808	UnaryOperationExpression	& mon_config -> monitors [ i ]		60554	0					
ANR	60809	UnaryOperator	&		60554	0					
ANR	60810	ArrayIndexing	mon_config -> monitors [ i ]		60554	1					
ANR	60811	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60812	Identifier	mon_config		60554	0					
ANR	60813	Identifier	monitors		60554	1					
ANR	60814	Identifier	i		60554	1					
ANR	60815	ContinueStatement	continue ;	603:16:18929:18937	60554	1	True				
ANR	60816	ExpressionStatement	mon_config -> monitors [ i ] . x -= min_x	604:12:18951:18985	60554	1	True				
ANR	60817	AssignmentExpression	mon_config -> monitors [ i ] . x -= min_x		60554	0		-=			
ANR	60818	MemberAccess	mon_config -> monitors [ i ] . x		60554	0					
ANR	60819	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60820	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60821	Identifier	mon_config		60554	0					
ANR	60822	Identifier	monitors		60554	1					
ANR	60823	Identifier	i		60554	1					
ANR	60824	Identifier	x		60554	1					
ANR	60825	Identifier	min_x		60554	1					
ANR	60826	ExpressionStatement	mon_config -> monitors [ i ] . y -= min_y	605:12:18999:19033	60554	2	True				
ANR	60827	AssignmentExpression	mon_config -> monitors [ i ] . y -= min_y		60554	0		-=			
ANR	60828	MemberAccess	mon_config -> monitors [ i ] . y		60554	0					
ANR	60829	ArrayIndexing	mon_config -> monitors [ i ]		60554	0					
ANR	60830	PtrMemberAccess	mon_config -> monitors		60554	0					
ANR	60831	Identifier	mon_config		60554	0					
ANR	60832	Identifier	monitors		60554	1					
ANR	60833	Identifier	i		60554	1					
ANR	60834	Identifier	y		60554	1					
ANR	60835	Identifier	min_y		60554	1					
ANR	60836	ExpressionStatement	max_x -= min_x	608:4:19055:19069	60554	4	True				
ANR	60837	AssignmentExpression	max_x -= min_x		60554	0		-=			
ANR	60838	Identifier	max_x		60554	0					
ANR	60839	Identifier	min_x		60554	1					
ANR	60840	ExpressionStatement	max_y -= min_y	609:4:19075:19089	60554	5	True				
ANR	60841	AssignmentExpression	max_y -= min_y		60554	0		-=			
ANR	60842	Identifier	max_y		60554	0					
ANR	60843	Identifier	min_y		60554	1					
ANR	60844	ExpressionStatement	* width = max_x	610:4:19095:19109	60554	6	True				
ANR	60845	AssignmentExpression	* width = max_x		60554	0		=			
ANR	60846	UnaryOperationExpression	* width		60554	0					
ANR	60847	UnaryOperator	*		60554	0					
ANR	60848	Identifier	width		60554	1					
ANR	60849	Identifier	max_x		60554	1					
ANR	60850	ExpressionStatement	* height = max_y	611:4:19115:19130	60554	7	True				
ANR	60851	AssignmentExpression	* height = max_y		60554	0		=			
ANR	60852	UnaryOperationExpression	* height		60554	0					
ANR	60853	UnaryOperator	*		60554	0					
ANR	60854	Identifier	height		60554	1					
ANR	60855	Identifier	max_y		60554	1					
ANR	60856	ReturnType	static void		60554	1					
ANR	60857	Identifier	zero_base_monitors		60554	2					
ANR	60858	ParameterList	"struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int * width , int * height"		60554	3					
ANR	60859	Parameter	struct vdagent_x11 * x11	578:31:17708:17730	60554	0	True				
ANR	60860	ParameterType	struct vdagent_x11 *		60554	0					
ANR	60861	Identifier	x11		60554	1					
ANR	60862	Parameter	VDAgentMonitorsConfig * mon_config	579:31:17764:17796	60554	1	True				
ANR	60863	ParameterType	VDAgentMonitorsConfig *		60554	0					
ANR	60864	Identifier	mon_config		60554	1					
ANR	60865	Parameter	int * width	580:31:17830:17839	60554	2	True				
ANR	60866	ParameterType	int *		60554	0					
ANR	60867	Identifier	width		60554	1					
ANR	60868	Parameter	int * height	580:43:17842:17852	60554	3	True				
ANR	60869	ParameterType	int *		60554	0					
ANR	60870	Identifier	height		60554	1					
ANR	60871	CFGEntryNode	ENTRY		60554		True				
ANR	60872	CFGExitNode	EXIT		60554		True				
ANR	60873	Symbol	max_int		60554						
ANR	60874	Symbol	& mon_config -> monitors [ i ] . height		60554						
ANR	60875	Symbol	monitor_enabled		60554						
ANR	60876	Symbol	INT_MIN		60554						
ANR	60877	Symbol	* width		60554						
ANR	60878	Symbol	mon_config -> monitors [ i ] . x		60554						
ANR	60879	Symbol	mon_config -> monitors [ i ] . y		60554						
ANR	60880	Symbol	mon_config -> monitors		60554						
ANR	60881	Symbol	* mon_config		60554						
ANR	60882	Symbol	mon_config -> num_of_monitors		60554						
ANR	60883	Symbol	LOG_ERR		60554						
ANR	60884	Symbol	INT_MAX		60554						
ANR	60885	Symbol	x11		60554						
ANR	60886	Symbol	* mon_width		60554						
ANR	60887	Symbol	mon_width		60554						
ANR	60888	Symbol	height		60554						
ANR	60889	Symbol	* * mon_config		60554						
ANR	60890	Symbol	mon_height		60554						
ANR	60891	Symbol	* mon_height		60554						
ANR	60892	Symbol	i		60554						
ANR	60893	Symbol	mon_config -> monitors [ i ] . width		60554						
ANR	60894	Symbol	min_int		60554						
ANR	60895	Symbol	* height		60554						
ANR	60896	Symbol	__FUNCTION__		60554						
ANR	60897	Symbol	* mon_config -> monitors		60554						
ANR	60898	Symbol	max_x		60554						
ANR	60899	Symbol	max_y		60554						
ANR	60900	Symbol	* i		60554						
ANR	60901	Symbol	& mon_config -> monitors [ i ] . width		60554						
ANR	60902	Symbol	mon_config		60554						
ANR	60903	Symbol	width		60554						
ANR	60904	Symbol	~7		60554						
ANR	60905	Symbol	min_x		60554						
ANR	60906	Symbol	min_y		60554						
ANR	60907	Function	enabled_monitors	614:0:19135:19364							
ANR	60908	FunctionDef	enabled_monitors (VDAgentMonitorsConfig * mon)		60907	0					
ANR	60909	CompoundStatement		615:0:19191:19364	60907	0					
ANR	60910	IdentifierDeclStatement	"int i , enabled = 0 ;"	616:4:19197:19215	60907	0	True				
ANR	60911	IdentifierDecl	i		60907	0					
ANR	60912	IdentifierDeclType	int		60907	0					
ANR	60913	Identifier	i		60907	1					
ANR	60914	IdentifierDecl	enabled = 0		60907	1					
ANR	60915	IdentifierDeclType	int		60907	0					
ANR	60916	Identifier	enabled		60907	1					
ANR	60917	AssignmentExpression	enabled = 0		60907	2		=			
ANR	60918	Identifier	enabled		60907	0					
ANR	60919	PrimaryExpression	0		60907	1					
ANR	60920	ForStatement	for ( i = 0 ; i < mon -> num_of_monitors ; i ++ )		60907	1					
ANR	60921	ForInit	i = 0 ;	618:9:19227:19232	60907	0	True				
ANR	60922	AssignmentExpression	i = 0		60907	0		=			
ANR	60923	Identifier	i		60907	0					
ANR	60924	PrimaryExpression	0		60907	1					
ANR	60925	Condition	i < mon -> num_of_monitors	618:16:19234:19257	60907	1	True				
ANR	60926	RelationalExpression	i < mon -> num_of_monitors		60907	0		<			
ANR	60927	Identifier	i		60907	0					
ANR	60928	PtrMemberAccess	mon -> num_of_monitors		60907	1					
ANR	60929	Identifier	mon		60907	0					
ANR	60930	Identifier	num_of_monitors		60907	1					
ANR	60931	PostIncDecOperationExpression	i ++	618:42:19260:19262	60907	2	True				
ANR	60932	Identifier	i		60907	0					
ANR	60933	IncDec	++		60907	1					
ANR	60934	CompoundStatement		4:47:73:73	60907	3					
ANR	60935	IfStatement	if ( monitor_enabled ( & mon -> monitors [ i ] ) )		60907	0					
ANR	60936	Condition	monitor_enabled ( & mon -> monitors [ i ] )	619:12:19279:19312	60907	0	True				
ANR	60937	CallExpression	monitor_enabled ( & mon -> monitors [ i ] )		60907	0					
ANR	60938	Callee	monitor_enabled		60907	0					
ANR	60939	Identifier	monitor_enabled		60907	0					
ANR	60940	ArgumentList	& mon -> monitors [ i ]		60907	1					
ANR	60941	Argument	& mon -> monitors [ i ]		60907	0					
ANR	60942	UnaryOperationExpression	& mon -> monitors [ i ]		60907	0					
ANR	60943	UnaryOperator	&		60907	0					
ANR	60944	ArrayIndexing	mon -> monitors [ i ]		60907	1					
ANR	60945	PtrMemberAccess	mon -> monitors		60907	0					
ANR	60946	Identifier	mon		60907	0					
ANR	60947	Identifier	monitors		60907	1					
ANR	60948	Identifier	i		60907	1					
ANR	60949	ExpressionStatement	enabled ++	620:12:19327:19336	60907	1	True				
ANR	60950	PostIncDecOperationExpression	enabled ++		60907	0					
ANR	60951	Identifier	enabled		60907	0					
ANR	60952	IncDec	++		60907	1					
ANR	60953	ReturnStatement	return enabled ;	622:4:19348:19362	60907	2	True				
ANR	60954	Identifier	enabled		60907	0					
ANR	60955	ReturnType	static int		60907	1					
ANR	60956	Identifier	enabled_monitors		60907	2					
ANR	60957	ParameterList	VDAgentMonitorsConfig * mon		60907	3					
ANR	60958	Parameter	VDAgentMonitorsConfig * mon	614:28:19163:19188	60907	0	True				
ANR	60959	ParameterType	VDAgentMonitorsConfig *		60907	0					
ANR	60960	Identifier	mon		60907	1					
ANR	60961	CFGEntryNode	ENTRY		60907		True				
ANR	60962	CFGExitNode	EXIT		60907		True				
ANR	60963	Symbol	* mon		60907						
ANR	60964	Symbol	i		60907						
ANR	60965	Symbol	mon -> num_of_monitors		60907						
ANR	60966	Symbol	mon		60907						
ANR	60967	Symbol	mon -> monitors		60907						
ANR	60968	Symbol	monitor_enabled		60907						
ANR	60969	Symbol	enabled		60907						
ANR	60970	Function	same_monitor_configs	625:0:19367:20004							
ANR	60971	FunctionDef	"same_monitor_configs (VDAgentMonitorsConfig * conf1 , VDAgentMonitorsConfig * conf2)"		60970	0					
ANR	60972	CompoundStatement		627:0:19491:20004	60970	0					
ANR	60973	IdentifierDeclStatement	int i ;	628:4:19497:19502	60970	0	True				
ANR	60974	IdentifierDecl	i		60970	0					
ANR	60975	IdentifierDeclType	int		60970	0					
ANR	60976	Identifier	i		60970	1					
ANR	60977	IfStatement	if ( conf1 == NULL || conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors )		60970	1					
ANR	60978	Condition	conf1 == NULL || conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors	630:8:19513:19606	60970	0	True				
ANR	60979	OrExpression	conf1 == NULL || conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors		60970	0		||			
ANR	60980	EqualityExpression	conf1 == NULL		60970	0		==			
ANR	60981	Identifier	conf1		60970	0					
ANR	60982	Identifier	NULL		60970	1					
ANR	60983	OrExpression	conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors		60970	1		||			
ANR	60984	EqualityExpression	conf2 == NULL		60970	0		==			
ANR	60985	Identifier	conf2		60970	0					
ANR	60986	Identifier	NULL		60970	1					
ANR	60987	EqualityExpression	conf1 -> num_of_monitors != conf2 -> num_of_monitors		60970	1		!=			
ANR	60988	PtrMemberAccess	conf1 -> num_of_monitors		60970	0					
ANR	60989	Identifier	conf1		60970	0					
ANR	60990	Identifier	num_of_monitors		60970	1					
ANR	60991	PtrMemberAccess	conf2 -> num_of_monitors		60970	1					
ANR	60992	Identifier	conf2		60970	0					
ANR	60993	Identifier	num_of_monitors		60970	1					
ANR	60994	ReturnStatement	return 0 ;	632:8:19617:19625	60970	1	True				
ANR	60995	PrimaryExpression	0		60970	0					
ANR	60996	ForStatement	for ( i = 0 ; i < conf1 -> num_of_monitors ; i ++ )		60970	2					
ANR	60997	ForInit	i = 0 ;	634:9:19637:19642	60970	0	True				
ANR	60998	AssignmentExpression	i = 0		60970	0		=			
ANR	60999	Identifier	i		60970	0					
ANR	61000	PrimaryExpression	0		60970	1					
ANR	61001	Condition	i < conf1 -> num_of_monitors	634:16:19644:19669	60970	1	True				
ANR	61002	RelationalExpression	i < conf1 -> num_of_monitors		60970	0		<			
ANR	61003	Identifier	i		60970	0					
ANR	61004	PtrMemberAccess	conf1 -> num_of_monitors		60970	1					
ANR	61005	Identifier	conf1		60970	0					
ANR	61006	Identifier	num_of_monitors		60970	1					
ANR	61007	PostIncDecOperationExpression	i ++	634:44:19672:19674	60970	2	True				
ANR	61008	Identifier	i		60970	0					
ANR	61009	IncDec	++		60970	1					
ANR	61010	CompoundStatement		10:8:249:293	60970	3					
ANR	61011	IdentifierDeclStatement	VDAgentMonConfig * mon1 = & conf1 -> monitors [ i ] ;	635:8:19687:19731	60970	0	True				
ANR	61012	IdentifierDecl	* mon1 = & conf1 -> monitors [ i ]		60970	0					
ANR	61013	IdentifierDeclType	VDAgentMonConfig *		60970	0					
ANR	61014	Identifier	mon1		60970	1					
ANR	61015	AssignmentExpression	* mon1 = & conf1 -> monitors [ i ]		60970	2		=			
ANR	61016	Identifier	mon1		60970	0					
ANR	61017	UnaryOperationExpression	& conf1 -> monitors [ i ]		60970	1					
ANR	61018	UnaryOperator	&		60970	0					
ANR	61019	ArrayIndexing	conf1 -> monitors [ i ]		60970	1					
ANR	61020	PtrMemberAccess	conf1 -> monitors		60970	0					
ANR	61021	Identifier	conf1		60970	0					
ANR	61022	Identifier	monitors		60970	1					
ANR	61023	Identifier	i		60970	1					
ANR	61024	IdentifierDeclStatement	VDAgentMonConfig * mon2 = & conf2 -> monitors [ i ] ;	636:8:19741:19785	60970	1	True				
ANR	61025	IdentifierDecl	* mon2 = & conf2 -> monitors [ i ]		60970	0					
ANR	61026	IdentifierDeclType	VDAgentMonConfig *		60970	0					
ANR	61027	Identifier	mon2		60970	1					
ANR	61028	AssignmentExpression	* mon2 = & conf2 -> monitors [ i ]		60970	2		=			
ANR	61029	Identifier	mon2		60970	0					
ANR	61030	UnaryOperationExpression	& conf2 -> monitors [ i ]		60970	1					
ANR	61031	UnaryOperator	&		60970	0					
ANR	61032	ArrayIndexing	conf2 -> monitors [ i ]		60970	1					
ANR	61033	PtrMemberAccess	conf2 -> monitors		60970	0					
ANR	61034	Identifier	conf2		60970	0					
ANR	61035	Identifier	monitors		60970	1					
ANR	61036	Identifier	i		60970	1					
ANR	61037	IfStatement	if ( mon1 -> x != mon2 -> x || mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height )		60970	2					
ANR	61038	Condition	mon1 -> x != mon2 -> x || mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height	638:12:19843:19959	60970	0	True				
ANR	61039	OrExpression	mon1 -> x != mon2 -> x || mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height		60970	0		||			
ANR	61040	EqualityExpression	mon1 -> x != mon2 -> x		60970	0		!=			
ANR	61041	PtrMemberAccess	mon1 -> x		60970	0					
ANR	61042	Identifier	mon1		60970	0					
ANR	61043	Identifier	x		60970	1					
ANR	61044	PtrMemberAccess	mon2 -> x		60970	1					
ANR	61045	Identifier	mon2		60970	0					
ANR	61046	Identifier	x		60970	1					
ANR	61047	OrExpression	mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height		60970	1		||			
ANR	61048	EqualityExpression	mon1 -> y != mon2 -> y		60970	0		!=			
ANR	61049	PtrMemberAccess	mon1 -> y		60970	0					
ANR	61050	Identifier	mon1		60970	0					
ANR	61051	Identifier	y		60970	1					
ANR	61052	PtrMemberAccess	mon2 -> y		60970	1					
ANR	61053	Identifier	mon2		60970	0					
ANR	61054	Identifier	y		60970	1					
ANR	61055	OrExpression	mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height		60970	1		||			
ANR	61056	EqualityExpression	mon1 -> width != mon2 -> width		60970	0		!=			
ANR	61057	PtrMemberAccess	mon1 -> width		60970	0					
ANR	61058	Identifier	mon1		60970	0					
ANR	61059	Identifier	width		60970	1					
ANR	61060	PtrMemberAccess	mon2 -> width		60970	1					
ANR	61061	Identifier	mon2		60970	0					
ANR	61062	Identifier	width		60970	1					
ANR	61063	EqualityExpression	mon1 -> height != mon2 -> height		60970	1		!=			
ANR	61064	PtrMemberAccess	mon1 -> height		60970	0					
ANR	61065	Identifier	mon1		60970	0					
ANR	61066	Identifier	height		60970	1					
ANR	61067	PtrMemberAccess	mon2 -> height		60970	1					
ANR	61068	Identifier	mon2		60970	0					
ANR	61069	Identifier	height		60970	1					
ANR	61070	ReturnStatement	return 0 ;	640:12:19974:19982	60970	1	True				
ANR	61071	PrimaryExpression	0		60970	0					
ANR	61072	ReturnStatement	return 1 ;	642:4:19994:20002	60970	3	True				
ANR	61073	PrimaryExpression	1		60970	0					
ANR	61074	ReturnType	static int		60970	1					
ANR	61075	Identifier	same_monitor_configs		60970	2					
ANR	61076	ParameterList	"VDAgentMonitorsConfig * conf1 , VDAgentMonitorsConfig * conf2"		60970	3					
ANR	61077	Parameter	VDAgentMonitorsConfig * conf1	625:32:19399:19426	60970	0	True				
ANR	61078	ParameterType	VDAgentMonitorsConfig *		60970	0					
ANR	61079	Identifier	conf1		60970	1					
ANR	61080	Parameter	VDAgentMonitorsConfig * conf2	626:32:19461:19488	60970	1	True				
ANR	61081	ParameterType	VDAgentMonitorsConfig *		60970	0					
ANR	61082	Identifier	conf2		60970	1					
ANR	61083	CFGEntryNode	ENTRY		60970		True				
ANR	61084	CFGExitNode	EXIT		60970		True				
ANR	61085	Symbol	mon2 -> height		60970						
ANR	61086	Symbol	NULL		60970						
ANR	61087	Symbol	mon1 -> height		60970						
ANR	61088	Symbol	conf1 -> monitors		60970						
ANR	61089	Symbol	conf2 -> monitors		60970						
ANR	61090	Symbol	conf2 -> num_of_monitors		60970						
ANR	61091	Symbol	conf2		60970						
ANR	61092	Symbol	i		60970						
ANR	61093	Symbol	conf1		60970						
ANR	61094	Symbol	mon1 -> x		60970						
ANR	61095	Symbol	conf1 -> num_of_monitors		60970						
ANR	61096	Symbol	mon1 -> y		60970						
ANR	61097	Symbol	* conf2		60970						
ANR	61098	Symbol	mon1 -> width		60970						
ANR	61099	Symbol	mon2		60970						
ANR	61100	Symbol	mon1		60970						
ANR	61101	Symbol	mon2 -> y		60970						
ANR	61102	Symbol	* mon1		60970						
ANR	61103	Symbol	mon2 -> width		60970						
ANR	61104	Symbol	* mon2		60970						
ANR	61105	Symbol	mon2 -> x		60970						
ANR	61106	Symbol	* conf1		60970						
ANR	61107	Function	config_size	645:0:20007:20167							
ANR	61108	FunctionDef	config_size (int num_of_monitors)		61107	0					
ANR	61109	CompoundStatement		646:0:20051:20167	61107	0					
ANR	61110	ReturnStatement	return sizeof ( VDAgentMonitorsConfig ) + num_of_monitors * sizeof ( VDAgentMonConfig ) ;	647:4:20057:20165	61107	0	True				
ANR	61111	AdditiveExpression	sizeof ( VDAgentMonitorsConfig ) + num_of_monitors * sizeof ( VDAgentMonConfig )		61107	0		+			
ANR	61112	SizeofExpression	sizeof ( VDAgentMonitorsConfig )		61107	0					
ANR	61113	Sizeof	sizeof		61107	0					
ANR	61114	SizeofOperand	VDAgentMonitorsConfig		61107	1					
ANR	61115	MultiplicativeExpression	num_of_monitors * sizeof ( VDAgentMonConfig )		61107	1		*			
ANR	61116	Identifier	num_of_monitors		61107	0					
ANR	61117	SizeofExpression	sizeof ( VDAgentMonConfig )		61107	1					
ANR	61118	Sizeof	sizeof		61107	0					
ANR	61119	SizeofOperand	VDAgentMonConfig		61107	1					
ANR	61120	ReturnType	static int		61107	1					
ANR	61121	Identifier	config_size		61107	2					
ANR	61122	ParameterList	int num_of_monitors		61107	3					
ANR	61123	Parameter	int num_of_monitors	645:23:20030:20048	61107	0	True				
ANR	61124	ParameterType	int		61107	0					
ANR	61125	Identifier	num_of_monitors		61107	1					
ANR	61126	CFGEntryNode	ENTRY		61107		True				
ANR	61127	CFGExitNode	EXIT		61107		True				
ANR	61128	Symbol	num_of_monitors		61107						
ANR	61129	Function	get_current_mon_config	651:0:20170:21575							
ANR	61130	FunctionDef	get_current_mon_config (struct vdagent_x11 * x11)		61129	0					
ANR	61131	CompoundStatement		652:0:20248:21575	61129	0					
ANR	61132	IdentifierDeclStatement	"int i , num_of_monitors = 0 ;"	653:4:20254:20280	61129	0	True				
ANR	61133	IdentifierDecl	i		61129	0					
ANR	61134	IdentifierDeclType	int		61129	0					
ANR	61135	Identifier	i		61129	1					
ANR	61136	IdentifierDecl	num_of_monitors = 0		61129	1					
ANR	61137	IdentifierDeclType	int		61129	0					
ANR	61138	Identifier	num_of_monitors		61129	1					
ANR	61139	AssignmentExpression	num_of_monitors = 0		61129	2		=			
ANR	61140	Identifier	num_of_monitors		61129	0					
ANR	61141	PrimaryExpression	0		61129	1					
ANR	61142	IdentifierDeclStatement	XRRModeInfo * mode ;	654:4:20286:20303	61129	1	True				
ANR	61143	IdentifierDecl	* mode		61129	0					
ANR	61144	IdentifierDeclType	XRRModeInfo *		61129	0					
ANR	61145	Identifier	mode		61129	1					
ANR	61146	IdentifierDeclStatement	XRRCrtcInfo * crtc ;	655:4:20309:20326	61129	2	True				
ANR	61147	IdentifierDecl	* crtc		61129	0					
ANR	61148	IdentifierDeclType	XRRCrtcInfo *		61129	0					
ANR	61149	Identifier	crtc		61129	1					
ANR	61150	IdentifierDeclStatement	XRRScreenResources * res = x11 -> randr . res ;	656:4:20332:20372	61129	3	True				
ANR	61151	IdentifierDecl	* res = x11 -> randr . res		61129	0					
ANR	61152	IdentifierDeclType	XRRScreenResources *		61129	0					
ANR	61153	Identifier	res		61129	1					
ANR	61154	AssignmentExpression	* res = x11 -> randr . res		61129	2		=			
ANR	61155	Identifier	res		61129	0					
ANR	61156	MemberAccess	x11 -> randr . res		61129	1					
ANR	61157	PtrMemberAccess	x11 -> randr		61129	0					
ANR	61158	Identifier	x11		61129	0					
ANR	61159	Identifier	randr		61129	1					
ANR	61160	Identifier	res		61129	1					
ANR	61161	IdentifierDeclStatement	VDAgentMonitorsConfig * mon_config ;	657:4:20378:20411	61129	4	True				
ANR	61162	IdentifierDecl	* mon_config		61129	0					
ANR	61163	IdentifierDeclType	VDAgentMonitorsConfig *		61129	0					
ANR	61164	Identifier	mon_config		61129	1					
ANR	61165	ExpressionStatement	"mon_config = calloc ( 1 , config_size ( res -> noutput ) )"	659:4:20418:20467	61129	5	True				
ANR	61166	AssignmentExpression	"mon_config = calloc ( 1 , config_size ( res -> noutput ) )"		61129	0		=			
ANR	61167	Identifier	mon_config		61129	0					
ANR	61168	CallExpression	"calloc ( 1 , config_size ( res -> noutput ) )"		61129	1					
ANR	61169	Callee	calloc		61129	0					
ANR	61170	Identifier	calloc		61129	0					
ANR	61171	ArgumentList	1		61129	1					
ANR	61172	Argument	1		61129	0					
ANR	61173	PrimaryExpression	1		61129	0					
ANR	61174	Argument	config_size ( res -> noutput )		61129	1					
ANR	61175	CallExpression	config_size ( res -> noutput )		61129	0					
ANR	61176	Callee	config_size		61129	0					
ANR	61177	Identifier	config_size		61129	0					
ANR	61178	ArgumentList	res -> noutput		61129	1					
ANR	61179	Argument	res -> noutput		61129	0					
ANR	61180	PtrMemberAccess	res -> noutput		61129	0					
ANR	61181	Identifier	res		61129	0					
ANR	61182	Identifier	noutput		61129	1					
ANR	61183	IfStatement	if ( ! mon_config )		61129	6					
ANR	61184	Condition	! mon_config	660:8:20477:20487	61129	0	True				
ANR	61185	UnaryOperationExpression	! mon_config		61129	0					
ANR	61186	UnaryOperator	!		61129	0					
ANR	61187	Identifier	mon_config		61129	1					
ANR	61188	CompoundStatement		9:21:241:241	61129	1					
ANR	61189	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating current monitor config"" )"	661:8:20500:20566	61129	0	True				
ANR	61190	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating current monitor config"" )"		61129	0					
ANR	61191	Callee	syslog		61129	0					
ANR	61192	Identifier	syslog		61129	0					
ANR	61193	ArgumentList	LOG_ERR		61129	1					
ANR	61194	Argument	LOG_ERR		61129	0					
ANR	61195	Identifier	LOG_ERR		61129	0					
ANR	61196	Argument	"""out of memory allocating current monitor config"""		61129	1					
ANR	61197	PrimaryExpression	"""out of memory allocating current monitor config"""		61129	0					
ANR	61198	ReturnStatement	return NULL ;	662:8:20576:20587	61129	1	True				
ANR	61199	Identifier	NULL		61129	0					
ANR	61200	ForStatement	for ( i = 0 ; i < res -> noutput ; i ++ )		61129	7					
ANR	61201	ForInit	i = 0 ;	665:9:20605:20611	61129	0	True				
ANR	61202	AssignmentExpression	i = 0		61129	0		=			
ANR	61203	Identifier	i		61129	0					
ANR	61204	PrimaryExpression	0		61129	1					
ANR	61205	Condition	i < res -> noutput	665:17:20613:20628	61129	1	True				
ANR	61206	RelationalExpression	i < res -> noutput		61129	0		<			
ANR	61207	Identifier	i		61129	0					
ANR	61208	PtrMemberAccess	res -> noutput		61129	1					
ANR	61209	Identifier	res		61129	0					
ANR	61210	Identifier	noutput		61129	1					
ANR	61211	PostIncDecOperationExpression	i ++	665:35:20631:20633	61129	2	True				
ANR	61212	Identifier	i		61129	0					
ANR	61213	IncDec	++		61129	1					
ANR	61214	CompoundStatement		14:40:387:387	61129	3					
ANR	61215	IfStatement	if ( x11 -> randr . outputs [ i ] -> ncrtc == 0 )		61129	0					
ANR	61216	Condition	x11 -> randr . outputs [ i ] -> ncrtc == 0	666:12:20650:20682	61129	0	True				
ANR	61217	EqualityExpression	x11 -> randr . outputs [ i ] -> ncrtc == 0		61129	0		==			
ANR	61218	PtrMemberAccess	x11 -> randr . outputs [ i ] -> ncrtc		61129	0					
ANR	61219	ArrayIndexing	x11 -> randr . outputs [ i ]		61129	0					
ANR	61220	MemberAccess	x11 -> randr . outputs		61129	0					
ANR	61221	PtrMemberAccess	x11 -> randr		61129	0					
ANR	61222	Identifier	x11		61129	0					
ANR	61223	Identifier	randr		61129	1					
ANR	61224	Identifier	outputs		61129	1					
ANR	61225	Identifier	i		61129	1					
ANR	61226	Identifier	ncrtc		61129	1					
ANR	61227	PrimaryExpression	0		61129	1					
ANR	61228	ContinueStatement	continue ;	667:12:20697:20705	61129	1	True				
ANR	61229	IfStatement	if ( x11 -> randr . outputs [ i ] -> ncrtc != 1 )		61129	1					
ANR	61230	Condition	x11 -> randr . outputs [ i ] -> ncrtc != 1	668:12:20769:20801	61129	0	True				
ANR	61231	EqualityExpression	x11 -> randr . outputs [ i ] -> ncrtc != 1		61129	0		!=			
ANR	61232	PtrMemberAccess	x11 -> randr . outputs [ i ] -> ncrtc		61129	0					
ANR	61233	ArrayIndexing	x11 -> randr . outputs [ i ]		61129	0					
ANR	61234	MemberAccess	x11 -> randr . outputs		61129	0					
ANR	61235	PtrMemberAccess	x11 -> randr		61129	0					
ANR	61236	Identifier	x11		61129	0					
ANR	61237	Identifier	randr		61129	1					
ANR	61238	Identifier	outputs		61129	1					
ANR	61239	Identifier	i		61129	1					
ANR	61240	Identifier	ncrtc		61129	1					
ANR	61241	PrimaryExpression	1		61129	1					
ANR	61242	GotoStatement	goto error ;	669:12:20816:20826	61129	1	True				
ANR	61243	Identifier	error		61129	0					
ANR	61244	ExpressionStatement	"crtc = crtc_from_id ( x11 , x11 -> randr . outputs [ i ] -> crtcs [ 0 ] )"	671:8:20837:20894	61129	2	True				
ANR	61245	AssignmentExpression	"crtc = crtc_from_id ( x11 , x11 -> randr . outputs [ i ] -> crtcs [ 0 ] )"		61129	0		=			
ANR	61246	Identifier	crtc		61129	0					
ANR	61247	CallExpression	"crtc_from_id ( x11 , x11 -> randr . outputs [ i ] -> crtcs [ 0 ] )"		61129	1					
ANR	61248	Callee	crtc_from_id		61129	0					
ANR	61249	Identifier	crtc_from_id		61129	0					
ANR	61250	ArgumentList	x11		61129	1					
ANR	61251	Argument	x11		61129	0					
ANR	61252	Identifier	x11		61129	0					
ANR	61253	Argument	x11 -> randr . outputs [ i ] -> crtcs [ 0 ]		61129	1					
ANR	61254	ArrayIndexing	x11 -> randr . outputs [ i ] -> crtcs [ 0 ]		61129	0					
ANR	61255	PtrMemberAccess	x11 -> randr . outputs [ i ] -> crtcs		61129	0					
ANR	61256	ArrayIndexing	x11 -> randr . outputs [ i ]		61129	0					
ANR	61257	MemberAccess	x11 -> randr . outputs		61129	0					
ANR	61258	PtrMemberAccess	x11 -> randr		61129	0					
ANR	61259	Identifier	x11		61129	0					
ANR	61260	Identifier	randr		61129	1					
ANR	61261	Identifier	outputs		61129	1					
ANR	61262	Identifier	i		61129	1					
ANR	61263	Identifier	crtcs		61129	1					
ANR	61264	PrimaryExpression	0		61129	1					
ANR	61265	IfStatement	if ( ! crtc )		61129	3					
ANR	61266	Condition	! crtc	672:12:20908:20912	61129	0	True				
ANR	61267	UnaryOperationExpression	! crtc		61129	0					
ANR	61268	UnaryOperator	!		61129	0					
ANR	61269	Identifier	crtc		61129	1					
ANR	61270	GotoStatement	goto error ;	673:12:20927:20937	61129	1	True				
ANR	61271	Identifier	error		61129	0					
ANR	61272	ExpressionStatement	"mode = mode_from_id ( x11 , crtc -> mode )"	675:8:20948:20984	61129	4	True				
ANR	61273	AssignmentExpression	"mode = mode_from_id ( x11 , crtc -> mode )"		61129	0		=			
ANR	61274	Identifier	mode		61129	0					
ANR	61275	CallExpression	"mode_from_id ( x11 , crtc -> mode )"		61129	1					
ANR	61276	Callee	mode_from_id		61129	0					
ANR	61277	Identifier	mode_from_id		61129	0					
ANR	61278	ArgumentList	x11		61129	1					
ANR	61279	Argument	x11		61129	0					
ANR	61280	Identifier	x11		61129	0					
ANR	61281	Argument	crtc -> mode		61129	1					
ANR	61282	PtrMemberAccess	crtc -> mode		61129	0					
ANR	61283	Identifier	crtc		61129	0					
ANR	61284	Identifier	mode		61129	1					
ANR	61285	IfStatement	if ( ! mode )		61129	5					
ANR	61286	Condition	! mode	676:12:20998:21002	61129	0	True				
ANR	61287	UnaryOperationExpression	! mode		61129	0					
ANR	61288	UnaryOperator	!		61129	0					
ANR	61289	Identifier	mode		61129	1					
ANR	61290	ContinueStatement	continue ;	677:12:21017:21025	61129	1	True				
ANR	61291	ExpressionStatement	mon_config -> monitors [ i ] . x = crtc -> x	679:8:21086:21126	61129	6	True				
ANR	61292	AssignmentExpression	mon_config -> monitors [ i ] . x = crtc -> x		61129	0		=			
ANR	61293	MemberAccess	mon_config -> monitors [ i ] . x		61129	0					
ANR	61294	ArrayIndexing	mon_config -> monitors [ i ]		61129	0					
ANR	61295	PtrMemberAccess	mon_config -> monitors		61129	0					
ANR	61296	Identifier	mon_config		61129	0					
ANR	61297	Identifier	monitors		61129	1					
ANR	61298	Identifier	i		61129	1					
ANR	61299	Identifier	x		61129	1					
ANR	61300	PtrMemberAccess	crtc -> x		61129	1					
ANR	61301	Identifier	crtc		61129	0					
ANR	61302	Identifier	x		61129	1					
ANR	61303	ExpressionStatement	mon_config -> monitors [ i ] . y = crtc -> y	680:8:21136:21176	61129	7	True				
ANR	61304	AssignmentExpression	mon_config -> monitors [ i ] . y = crtc -> y		61129	0		=			
ANR	61305	MemberAccess	mon_config -> monitors [ i ] . y		61129	0					
ANR	61306	ArrayIndexing	mon_config -> monitors [ i ]		61129	0					
ANR	61307	PtrMemberAccess	mon_config -> monitors		61129	0					
ANR	61308	Identifier	mon_config		61129	0					
ANR	61309	Identifier	monitors		61129	1					
ANR	61310	Identifier	i		61129	1					
ANR	61311	Identifier	y		61129	1					
ANR	61312	PtrMemberAccess	crtc -> y		61129	1					
ANR	61313	Identifier	crtc		61129	0					
ANR	61314	Identifier	y		61129	1					
ANR	61315	ExpressionStatement	mon_config -> monitors [ i ] . width = mode -> width	681:8:21186:21230	61129	8	True				
ANR	61316	AssignmentExpression	mon_config -> monitors [ i ] . width = mode -> width		61129	0		=			
ANR	61317	MemberAccess	mon_config -> monitors [ i ] . width		61129	0					
ANR	61318	ArrayIndexing	mon_config -> monitors [ i ]		61129	0					
ANR	61319	PtrMemberAccess	mon_config -> monitors		61129	0					
ANR	61320	Identifier	mon_config		61129	0					
ANR	61321	Identifier	monitors		61129	1					
ANR	61322	Identifier	i		61129	1					
ANR	61323	Identifier	width		61129	1					
ANR	61324	PtrMemberAccess	mode -> width		61129	1					
ANR	61325	Identifier	mode		61129	0					
ANR	61326	Identifier	width		61129	1					
ANR	61327	ExpressionStatement	mon_config -> monitors [ i ] . height = mode -> height	682:8:21240:21285	61129	9	True				
ANR	61328	AssignmentExpression	mon_config -> monitors [ i ] . height = mode -> height		61129	0		=			
ANR	61329	MemberAccess	mon_config -> monitors [ i ] . height		61129	0					
ANR	61330	ArrayIndexing	mon_config -> monitors [ i ]		61129	0					
ANR	61331	PtrMemberAccess	mon_config -> monitors		61129	0					
ANR	61332	Identifier	mon_config		61129	0					
ANR	61333	Identifier	monitors		61129	1					
ANR	61334	Identifier	i		61129	1					
ANR	61335	Identifier	height		61129	1					
ANR	61336	PtrMemberAccess	mode -> height		61129	1					
ANR	61337	Identifier	mode		61129	0					
ANR	61338	Identifier	height		61129	1					
ANR	61339	ExpressionStatement	num_of_monitors = i + 1	683:8:21295:21318	61129	10	True				
ANR	61340	AssignmentExpression	num_of_monitors = i + 1		61129	0		=			
ANR	61341	Identifier	num_of_monitors		61129	0					
ANR	61342	AdditiveExpression	i + 1		61129	1		+			
ANR	61343	Identifier	i		61129	0					
ANR	61344	PrimaryExpression	1		61129	1					
ANR	61345	ExpressionStatement	mon_config -> num_of_monitors = num_of_monitors	685:4:21330:21375	61129	8	True				
ANR	61346	AssignmentExpression	mon_config -> num_of_monitors = num_of_monitors		61129	0		=			
ANR	61347	PtrMemberAccess	mon_config -> num_of_monitors		61129	0					
ANR	61348	Identifier	mon_config		61129	0					
ANR	61349	Identifier	num_of_monitors		61129	1					
ANR	61350	Identifier	num_of_monitors		61129	1					
ANR	61351	ExpressionStatement	mon_config -> flags = VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS	686:4:21381:21438	61129	9	True				
ANR	61352	AssignmentExpression	mon_config -> flags = VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS		61129	0		=			
ANR	61353	PtrMemberAccess	mon_config -> flags		61129	0					
ANR	61354	Identifier	mon_config		61129	0					
ANR	61355	Identifier	flags		61129	1					
ANR	61356	Identifier	VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS		61129	1					
ANR	61357	ReturnStatement	return mon_config ;	687:4:21444:21461	61129	10	True				
ANR	61358	Identifier	mon_config		61129	0					
ANR	61359	Label	error :	689:0:21464:21469	61129	11	True				
ANR	61360	Identifier	error		61129	0					
ANR	61361	ExpressionStatement	"syslog ( LOG_ERR , ""error: inconsistent or stale data from X"" )"	690:4:21475:21534	61129	12	True				
ANR	61362	CallExpression	"syslog ( LOG_ERR , ""error: inconsistent or stale data from X"" )"		61129	0					
ANR	61363	Callee	syslog		61129	0					
ANR	61364	Identifier	syslog		61129	0					
ANR	61365	ArgumentList	LOG_ERR		61129	1					
ANR	61366	Argument	LOG_ERR		61129	0					
ANR	61367	Identifier	LOG_ERR		61129	0					
ANR	61368	Argument	"""error: inconsistent or stale data from X"""		61129	1					
ANR	61369	PrimaryExpression	"""error: inconsistent or stale data from X"""		61129	0					
ANR	61370	ExpressionStatement	free ( mon_config )	691:4:21540:21556	61129	13	True				
ANR	61371	CallExpression	free ( mon_config )		61129	0					
ANR	61372	Callee	free		61129	0					
ANR	61373	Identifier	free		61129	0					
ANR	61374	ArgumentList	mon_config		61129	1					
ANR	61375	Argument	mon_config		61129	0					
ANR	61376	Identifier	mon_config		61129	0					
ANR	61377	ReturnStatement	return NULL ;	692:4:21562:21573	61129	14	True				
ANR	61378	Identifier	NULL		61129	0					
ANR	61379	ReturnType	static VDAgentMonitorsConfig *		61129	1					
ANR	61380	Identifier	get_current_mon_config		61129	2					
ANR	61381	ParameterList	struct vdagent_x11 * x11		61129	3					
ANR	61382	Parameter	struct vdagent_x11 * x11	651:53:20223:20245	61129	0	True				
ANR	61383	ParameterType	struct vdagent_x11 *		61129	0					
ANR	61384	Identifier	x11		61129	1					
ANR	61385	CFGEntryNode	ENTRY		61129		True				
ANR	61386	CFGExitNode	EXIT		61129		True				
ANR	61387	Symbol	mode		61129						
ANR	61388	Symbol	* x11 -> randr . outputs [ i ] -> crtcs		61129						
ANR	61389	Symbol	* * * * x11		61129						
ANR	61390	Symbol	mon_config -> monitors		61129						
ANR	61391	Symbol	* * * x11		61129						
ANR	61392	Symbol	* mon_config		61129						
ANR	61393	Symbol	mon_config -> num_of_monitors		61129						
ANR	61394	Symbol	LOG_ERR		61129						
ANR	61395	Symbol	x11		61129						
ANR	61396	Symbol	crtc -> mode		61129						
ANR	61397	Symbol	num_of_monitors		61129						
ANR	61398	Symbol	* * x11 -> randr		61129						
ANR	61399	Symbol	* * mon_config		61129						
ANR	61400	Symbol	res		61129						
ANR	61401	Symbol	x11 -> randr . outputs [ i ] -> crtcs		61129						
ANR	61402	Symbol	* * i		61129						
ANR	61403	Symbol	NULL		61129						
ANR	61404	Symbol	* * * x11 -> randr . outputs		61129						
ANR	61405	Symbol	mode -> height		61129						
ANR	61406	Symbol	mode -> width		61129						
ANR	61407	Symbol	mode_from_id		61129						
ANR	61408	Symbol	* x11 -> randr		61129						
ANR	61409	Symbol	* mon_config -> monitors		61129						
ANR	61410	Symbol	crtc		61129						
ANR	61411	Symbol	* * * x11 -> randr		61129						
ANR	61412	Symbol	mon_config		61129						
ANR	61413	Symbol	* * * i		61129						
ANR	61414	Symbol	x11 -> randr . res		61129						
ANR	61415	Symbol	* x11		61129						
ANR	61416	Symbol	x11 -> randr . outputs [ i ] -> ncrtc		61129						
ANR	61417	Symbol	crtc_from_id		61129						
ANR	61418	Symbol	x11 -> randr		61129						
ANR	61419	Symbol	* crtc		61129						
ANR	61420	Symbol	* res		61129						
ANR	61421	Symbol	calloc		61129						
ANR	61422	Symbol	VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS		61129						
ANR	61423	Symbol	mon_config -> monitors [ i ] . x		61129						
ANR	61424	Symbol	mon_config -> monitors [ i ] . y		61129						
ANR	61425	Symbol	* * x11 -> randr . outputs		61129						
ANR	61426	Symbol	* x11 -> randr . outputs		61129						
ANR	61427	Symbol	config_size		61129						
ANR	61428	Symbol	crtc -> y		61129						
ANR	61429	Symbol	crtc -> x		61129						
ANR	61430	Symbol	i		61129						
ANR	61431	Symbol	mon_config -> monitors [ i ] . width		61129						
ANR	61432	Symbol	* * x11		61129						
ANR	61433	Symbol	mon_config -> flags		61129						
ANR	61434	Symbol	* i		61129						
ANR	61435	Symbol	mon_config -> monitors [ i ] . height		61129						
ANR	61436	Symbol	res -> noutput		61129						
ANR	61437	Symbol	* mode		61129						
ANR	61438	Symbol	x11 -> randr . outputs		61129						
ANR	61439	Function	dump_monitors_config	695:0:21578:22176							
ANR	61440	FunctionDef	"dump_monitors_config (struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , const char * prefix)"		61439	0					
ANR	61441	CompoundStatement		698:0:21757:22176	61439	0					
ANR	61442	IdentifierDeclStatement	int i ;	699:4:21763:21768	61439	0	True				
ANR	61443	IdentifierDecl	i		61439	0					
ANR	61444	IdentifierDeclType	int		61439	0					
ANR	61445	Identifier	i		61439	1					
ANR	61446	IdentifierDeclStatement	VDAgentMonConfig * m ;	700:4:21774:21793	61439	1	True				
ANR	61447	IdentifierDecl	* m		61439	0					
ANR	61448	IdentifierDeclType	VDAgentMonConfig *		61439	0					
ANR	61449	Identifier	m		61439	1					
ANR	61450	ExpressionStatement	"syslog ( LOG_DEBUG , ""%s: %d, %x"" , prefix , mon_config -> num_of_monitors , mon_config -> flags )"	702:4:21800:21898	61439	2	True				
ANR	61451	CallExpression	"syslog ( LOG_DEBUG , ""%s: %d, %x"" , prefix , mon_config -> num_of_monitors , mon_config -> flags )"		61439	0					
ANR	61452	Callee	syslog		61439	0					
ANR	61453	Identifier	syslog		61439	0					
ANR	61454	ArgumentList	LOG_DEBUG		61439	1					
ANR	61455	Argument	LOG_DEBUG		61439	0					
ANR	61456	Identifier	LOG_DEBUG		61439	0					
ANR	61457	Argument	"""%s: %d, %x"""		61439	1					
ANR	61458	PrimaryExpression	"""%s: %d, %x"""		61439	0					
ANR	61459	Argument	prefix		61439	2					
ANR	61460	Identifier	prefix		61439	0					
ANR	61461	Argument	mon_config -> num_of_monitors		61439	3					
ANR	61462	PtrMemberAccess	mon_config -> num_of_monitors		61439	0					
ANR	61463	Identifier	mon_config		61439	0					
ANR	61464	Identifier	num_of_monitors		61439	1					
ANR	61465	Argument	mon_config -> flags		61439	4					
ANR	61466	PtrMemberAccess	mon_config -> flags		61439	0					
ANR	61467	Identifier	mon_config		61439	0					
ANR	61468	Identifier	flags		61439	1					
ANR	61469	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		61439	3					
ANR	61470	ForInit	i = 0 ;	704:9:21909:21915	61439	0	True				
ANR	61471	AssignmentExpression	i = 0		61439	0		=			
ANR	61472	Identifier	i		61439	0					
ANR	61473	PrimaryExpression	0		61439	1					
ANR	61474	Condition	i < mon_config -> num_of_monitors	704:17:21917:21947	61439	1	True				
ANR	61475	RelationalExpression	i < mon_config -> num_of_monitors		61439	0		<			
ANR	61476	Identifier	i		61439	0					
ANR	61477	PtrMemberAccess	mon_config -> num_of_monitors		61439	1					
ANR	61478	Identifier	mon_config		61439	0					
ANR	61479	Identifier	num_of_monitors		61439	1					
ANR	61480	UnaryExpression	++ i	704:50:21950:21952	61439	2	True				
ANR	61481	IncDec	++		61439	0					
ANR	61482	Identifier	i		61439	1					
ANR	61483	CompoundStatement		7:55:197:197	61439	3					
ANR	61484	ExpressionStatement	m = & mon_config -> monitors [ i ]	705:8:21965:21993	61439	0	True				
ANR	61485	AssignmentExpression	m = & mon_config -> monitors [ i ]		61439	0		=			
ANR	61486	Identifier	m		61439	0					
ANR	61487	UnaryOperationExpression	& mon_config -> monitors [ i ]		61439	1					
ANR	61488	UnaryOperator	&		61439	0					
ANR	61489	ArrayIndexing	mon_config -> monitors [ i ]		61439	1					
ANR	61490	PtrMemberAccess	mon_config -> monitors		61439	0					
ANR	61491	Identifier	mon_config		61439	0					
ANR	61492	Identifier	monitors		61439	1					
ANR	61493	Identifier	i		61439	1					
ANR	61494	IfStatement	if ( ! monitor_enabled ( m ) )		61439	1					
ANR	61495	Condition	! monitor_enabled ( m )	706:12:22007:22025	61439	0	True				
ANR	61496	UnaryOperationExpression	! monitor_enabled ( m )		61439	0					
ANR	61497	UnaryOperator	!		61439	0					
ANR	61498	CallExpression	monitor_enabled ( m )		61439	1					
ANR	61499	Callee	monitor_enabled		61439	0					
ANR	61500	Identifier	monitor_enabled		61439	0					
ANR	61501	ArgumentList	m		61439	1					
ANR	61502	Argument	m		61439	0					
ANR	61503	Identifier	m		61439	0					
ANR	61504	ContinueStatement	continue ;	707:12:22040:22048	61439	1	True				
ANR	61505	ExpressionStatement	"syslog ( LOG_DEBUG , ""received monitor %d config %dx%d+%d+%d"" , i , m -> width , m -> height , m -> x , m -> y )"	708:8:22058:22168	61439	2	True				
ANR	61506	CallExpression	"syslog ( LOG_DEBUG , ""received monitor %d config %dx%d+%d+%d"" , i , m -> width , m -> height , m -> x , m -> y )"		61439	0					
ANR	61507	Callee	syslog		61439	0					
ANR	61508	Identifier	syslog		61439	0					
ANR	61509	ArgumentList	LOG_DEBUG		61439	1					
ANR	61510	Argument	LOG_DEBUG		61439	0					
ANR	61511	Identifier	LOG_DEBUG		61439	0					
ANR	61512	Argument	"""received monitor %d config %dx%d+%d+%d"""		61439	1					
ANR	61513	PrimaryExpression	"""received monitor %d config %dx%d+%d+%d"""		61439	0					
ANR	61514	Argument	i		61439	2					
ANR	61515	Identifier	i		61439	0					
ANR	61516	Argument	m -> width		61439	3					
ANR	61517	PtrMemberAccess	m -> width		61439	0					
ANR	61518	Identifier	m		61439	0					
ANR	61519	Identifier	width		61439	1					
ANR	61520	Argument	m -> height		61439	4					
ANR	61521	PtrMemberAccess	m -> height		61439	0					
ANR	61522	Identifier	m		61439	0					
ANR	61523	Identifier	height		61439	1					
ANR	61524	Argument	m -> x		61439	5					
ANR	61525	PtrMemberAccess	m -> x		61439	0					
ANR	61526	Identifier	m		61439	0					
ANR	61527	Identifier	x		61439	1					
ANR	61528	Argument	m -> y		61439	6					
ANR	61529	PtrMemberAccess	m -> y		61439	0					
ANR	61530	Identifier	m		61439	0					
ANR	61531	Identifier	y		61439	1					
ANR	61532	ReturnType	static void		61439	1					
ANR	61533	Identifier	dump_monitors_config		61439	2					
ANR	61534	ParameterList	"struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , const char * prefix"		61439	3					
ANR	61535	Parameter	struct vdagent_x11 * x11	695:33:21611:21633	61439	0	True				
ANR	61536	ParameterType	struct vdagent_x11 *		61439	0					
ANR	61537	Identifier	x11		61439	1					
ANR	61538	Parameter	VDAgentMonitorsConfig * mon_config	696:33:21669:21701	61439	1	True				
ANR	61539	ParameterType	VDAgentMonitorsConfig *		61439	0					
ANR	61540	Identifier	mon_config		61439	1					
ANR	61541	Parameter	const char * prefix	697:33:21737:21754	61439	2	True				
ANR	61542	ParameterType	const char *		61439	0					
ANR	61543	Identifier	prefix		61439	1					
ANR	61544	CFGEntryNode	ENTRY		61439		True				
ANR	61545	CFGExitNode	EXIT		61439		True				
ANR	61546	Symbol	m -> x		61439						
ANR	61547	Symbol	m -> y		61439						
ANR	61548	Symbol	prefix		61439						
ANR	61549	Symbol	i		61439						
ANR	61550	Symbol	m -> width		61439						
ANR	61551	Symbol	m		61439						
ANR	61552	Symbol	mon_config -> flags		61439						
ANR	61553	Symbol	monitor_enabled		61439						
ANR	61554	Symbol	mon_config -> monitors		61439						
ANR	61555	Symbol	mon_config -> num_of_monitors		61439						
ANR	61556	Symbol	* mon_config		61439						
ANR	61557	Symbol	mon_config		61439						
ANR	61558	Symbol	* m		61439						
ANR	61559	Symbol	x11		61439						
ANR	61560	Symbol	LOG_DEBUG		61439						
ANR	61561	Symbol	m -> height		61439						
ANR	61562	Function	vdagent_x11_set_monitor_config	723:0:22499:28622							
ANR	61563	FunctionDef	"vdagent_x11_set_monitor_config (struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int fallback)"		61562	0					
ANR	61564	CompoundStatement		726:0:22681:28622	61562	0					
ANR	61565	IdentifierDeclStatement	"int primary_w , primary_h ;"	727:4:22687:22711	61562	0	True				
ANR	61566	IdentifierDecl	primary_w		61562	0					
ANR	61567	IdentifierDeclType	int		61562	0					
ANR	61568	Identifier	primary_w		61562	1					
ANR	61569	IdentifierDecl	primary_h		61562	1					
ANR	61570	IdentifierDeclType	int		61562	0					
ANR	61571	Identifier	primary_h		61562	1					
ANR	61572	IdentifierDeclStatement	"int i , real_num_of_monitors = 0 ;"	728:4:22717:22748	61562	1	True				
ANR	61573	IdentifierDecl	i		61562	0					
ANR	61574	IdentifierDeclType	int		61562	0					
ANR	61575	Identifier	i		61562	1					
ANR	61576	IdentifierDecl	real_num_of_monitors = 0		61562	1					
ANR	61577	IdentifierDeclType	int		61562	0					
ANR	61578	Identifier	real_num_of_monitors		61562	1					
ANR	61579	AssignmentExpression	real_num_of_monitors = 0		61562	2		=			
ANR	61580	Identifier	real_num_of_monitors		61562	0					
ANR	61581	PrimaryExpression	0		61562	1					
ANR	61582	IdentifierDeclStatement	VDAgentMonitorsConfig * curr = NULL ;	729:4:22754:22788	61562	2	True				
ANR	61583	IdentifierDecl	* curr = NULL		61562	0					
ANR	61584	IdentifierDeclType	VDAgentMonitorsConfig *		61562	0					
ANR	61585	Identifier	curr		61562	1					
ANR	61586	AssignmentExpression	* curr = NULL		61562	2		=			
ANR	61587	Identifier	NULL		61562	0					
ANR	61588	Identifier	NULL		61562	1					
ANR	61589	IfStatement	if ( ! x11 -> has_xrandr )		61562	3					
ANR	61590	Condition	! x11 -> has_xrandr	731:8:22799:22814	61562	0	True				
ANR	61591	UnaryOperationExpression	! x11 -> has_xrandr		61562	0					
ANR	61592	UnaryOperator	!		61562	0					
ANR	61593	PtrMemberAccess	x11 -> has_xrandr		61562	1					
ANR	61594	Identifier	x11		61562	0					
ANR	61595	Identifier	has_xrandr		61562	1					
ANR	61596	GotoStatement	goto exit ;	732:8:22825:22834	61562	1	True				
ANR	61597	Identifier	exit		61562	0					
ANR	61598	IfStatement	if ( enabled_monitors ( mon_config ) < 1 )		61562	4					
ANR	61599	Condition	enabled_monitors ( mon_config ) < 1	734:8:22845:22876	61562	0	True				
ANR	61600	RelationalExpression	enabled_monitors ( mon_config ) < 1		61562	0		<			
ANR	61601	CallExpression	enabled_monitors ( mon_config )		61562	0					
ANR	61602	Callee	enabled_monitors		61562	0					
ANR	61603	Identifier	enabled_monitors		61562	0					
ANR	61604	ArgumentList	mon_config		61562	1					
ANR	61605	Argument	mon_config		61562	0					
ANR	61606	Identifier	mon_config		61562	0					
ANR	61607	PrimaryExpression	1		61562	1					
ANR	61608	CompoundStatement		9:42:197:197	61562	1					
ANR	61609	ExpressionStatement	"syslog ( LOG_ERR , ""client sent config with all monitors disabled"" )"	735:8:22889:22953	61562	0	True				
ANR	61610	CallExpression	"syslog ( LOG_ERR , ""client sent config with all monitors disabled"" )"		61562	0					
ANR	61611	Callee	syslog		61562	0					
ANR	61612	Identifier	syslog		61562	0					
ANR	61613	ArgumentList	LOG_ERR		61562	1					
ANR	61614	Argument	LOG_ERR		61562	0					
ANR	61615	Identifier	LOG_ERR		61562	0					
ANR	61616	Argument	"""client sent config with all monitors disabled"""		61562	1					
ANR	61617	PrimaryExpression	"""client sent config with all monitors disabled"""		61562	0					
ANR	61618	GotoStatement	goto exit ;	736:8:22963:22972	61562	1	True				
ANR	61619	Identifier	exit		61562	0					
ANR	61620	IfStatement	if ( x11 -> debug )		61562	5					
ANR	61621	Condition	x11 -> debug	739:8:22989:22998	61562	0	True				
ANR	61622	PtrMemberAccess	x11 -> debug		61562	0					
ANR	61623	Identifier	x11		61562	0					
ANR	61624	Identifier	debug		61562	1					
ANR	61625	CompoundStatement		14:20:319:319	61562	1					
ANR	61626	ExpressionStatement	"dump_monitors_config ( x11 , mon_config , ""from guest"" )"	740:8:23011:23062	61562	0	True				
ANR	61627	CallExpression	"dump_monitors_config ( x11 , mon_config , ""from guest"" )"		61562	0					
ANR	61628	Callee	dump_monitors_config		61562	0					
ANR	61629	Identifier	dump_monitors_config		61562	0					
ANR	61630	ArgumentList	x11		61562	1					
ANR	61631	Argument	x11		61562	0					
ANR	61632	Identifier	x11		61562	0					
ANR	61633	Argument	mon_config		61562	1					
ANR	61634	Identifier	mon_config		61562	0					
ANR	61635	Argument	"""from guest"""		61562	2					
ANR	61636	PrimaryExpression	"""from guest"""		61562	0					
ANR	61637	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; i ++ )		61562	6					
ANR	61638	ForInit	i = 0 ;	743:9:23080:23085	61562	0	True				
ANR	61639	AssignmentExpression	i = 0		61562	0		=			
ANR	61640	Identifier	i		61562	0					
ANR	61641	PrimaryExpression	0		61562	1					
ANR	61642	Condition	i < mon_config -> num_of_monitors	743:16:23087:23117	61562	1	True				
ANR	61643	RelationalExpression	i < mon_config -> num_of_monitors		61562	0		<			
ANR	61644	Identifier	i		61562	0					
ANR	61645	PtrMemberAccess	mon_config -> num_of_monitors		61562	1					
ANR	61646	Identifier	mon_config		61562	0					
ANR	61647	Identifier	num_of_monitors		61562	1					
ANR	61648	PostIncDecOperationExpression	i ++	743:49:23120:23122	61562	2	True				
ANR	61649	Identifier	i		61562	0					
ANR	61650	IncDec	++		61562	1					
ANR	61651	CompoundStatement		18:54:443:443	61562	3					
ANR	61652	IfStatement	if ( monitor_enabled ( & mon_config -> monitors [ i ] ) )		61562	0					
ANR	61653	Condition	monitor_enabled ( & mon_config -> monitors [ i ] )	744:12:23139:23179	61562	0	True				
ANR	61654	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		61562	0					
ANR	61655	Callee	monitor_enabled		61562	0					
ANR	61656	Identifier	monitor_enabled		61562	0					
ANR	61657	ArgumentList	& mon_config -> monitors [ i ]		61562	1					
ANR	61658	Argument	& mon_config -> monitors [ i ]		61562	0					
ANR	61659	UnaryOperationExpression	& mon_config -> monitors [ i ]		61562	0					
ANR	61660	UnaryOperator	&		61562	0					
ANR	61661	ArrayIndexing	mon_config -> monitors [ i ]		61562	1					
ANR	61662	PtrMemberAccess	mon_config -> monitors		61562	0					
ANR	61663	Identifier	mon_config		61562	0					
ANR	61664	Identifier	monitors		61562	1					
ANR	61665	Identifier	i		61562	1					
ANR	61666	ExpressionStatement	real_num_of_monitors = i + 1	745:12:23194:23222	61562	1	True				
ANR	61667	AssignmentExpression	real_num_of_monitors = i + 1		61562	0		=			
ANR	61668	Identifier	real_num_of_monitors		61562	0					
ANR	61669	AdditiveExpression	i + 1		61562	1		+			
ANR	61670	Identifier	i		61562	0					
ANR	61671	PrimaryExpression	1		61562	1					
ANR	61672	ExpressionStatement	mon_config -> num_of_monitors = real_num_of_monitors	747:4:23234:23284	61562	7	True				
ANR	61673	AssignmentExpression	mon_config -> num_of_monitors = real_num_of_monitors		61562	0		=			
ANR	61674	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	61675	Identifier	mon_config		61562	0					
ANR	61676	Identifier	num_of_monitors		61562	1					
ANR	61677	Identifier	real_num_of_monitors		61562	1					
ANR	61678	ExpressionStatement	"update_randr_res ( x11 , 0 )"	749:4:23291:23315	61562	8	True				
ANR	61679	CallExpression	"update_randr_res ( x11 , 0 )"		61562	0					
ANR	61680	Callee	update_randr_res		61562	0					
ANR	61681	Identifier	update_randr_res		61562	0					
ANR	61682	ArgumentList	x11		61562	1					
ANR	61683	Argument	x11		61562	0					
ANR	61684	Identifier	x11		61562	0					
ANR	61685	Argument	0		61562	1					
ANR	61686	PrimaryExpression	0		61562	0					
ANR	61687	IfStatement	if ( mon_config -> num_of_monitors > x11 -> randr . res -> noutput )		61562	9					
ANR	61688	Condition	mon_config -> num_of_monitors > x11 -> randr . res -> noutput	750:8:23325:23377	61562	0	True				
ANR	61689	RelationalExpression	mon_config -> num_of_monitors > x11 -> randr . res -> noutput		61562	0		>			
ANR	61690	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	61691	Identifier	mon_config		61562	0					
ANR	61692	Identifier	num_of_monitors		61562	1					
ANR	61693	PtrMemberAccess	x11 -> randr . res -> noutput		61562	1					
ANR	61694	MemberAccess	x11 -> randr . res		61562	0					
ANR	61695	PtrMemberAccess	x11 -> randr		61562	0					
ANR	61696	Identifier	x11		61562	0					
ANR	61697	Identifier	randr		61562	1					
ANR	61698	Identifier	res		61562	1					
ANR	61699	Identifier	noutput		61562	1					
ANR	61700	CompoundStatement		25:63:698:698	61562	1					
ANR	61701	ExpressionStatement	"syslog ( LOG_WARNING , ""warning unexpected client request: #mon %d > driver output %d"" , mon_config -> num_of_monitors , x11 -> randr . res -> noutput )"	751:8:23390:23558	61562	0	True				
ANR	61702	CallExpression	"syslog ( LOG_WARNING , ""warning unexpected client request: #mon %d > driver output %d"" , mon_config -> num_of_monitors , x11 -> randr . res -> noutput )"		61562	0					
ANR	61703	Callee	syslog		61562	0					
ANR	61704	Identifier	syslog		61562	0					
ANR	61705	ArgumentList	LOG_WARNING		61562	1					
ANR	61706	Argument	LOG_WARNING		61562	0					
ANR	61707	Identifier	LOG_WARNING		61562	0					
ANR	61708	Argument	"""warning unexpected client request: #mon %d > driver output %d"""		61562	1					
ANR	61709	PrimaryExpression	"""warning unexpected client request: #mon %d > driver output %d"""		61562	0					
ANR	61710	Argument	mon_config -> num_of_monitors		61562	2					
ANR	61711	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	61712	Identifier	mon_config		61562	0					
ANR	61713	Identifier	num_of_monitors		61562	1					
ANR	61714	Argument	x11 -> randr . res -> noutput		61562	3					
ANR	61715	PtrMemberAccess	x11 -> randr . res -> noutput		61562	0					
ANR	61716	MemberAccess	x11 -> randr . res		61562	0					
ANR	61717	PtrMemberAccess	x11 -> randr		61562	0					
ANR	61718	Identifier	x11		61562	0					
ANR	61719	Identifier	randr		61562	1					
ANR	61720	Identifier	res		61562	1					
ANR	61721	Identifier	noutput		61562	1					
ANR	61722	ExpressionStatement	mon_config -> num_of_monitors = x11 -> randr . res -> noutput	754:8:23568:23621	61562	1	True				
ANR	61723	AssignmentExpression	mon_config -> num_of_monitors = x11 -> randr . res -> noutput		61562	0		=			
ANR	61724	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	61725	Identifier	mon_config		61562	0					
ANR	61726	Identifier	num_of_monitors		61562	1					
ANR	61727	PtrMemberAccess	x11 -> randr . res -> noutput		61562	1					
ANR	61728	MemberAccess	x11 -> randr . res		61562	0					
ANR	61729	PtrMemberAccess	x11 -> randr		61562	0					
ANR	61730	Identifier	x11		61562	0					
ANR	61731	Identifier	randr		61562	1					
ANR	61732	Identifier	res		61562	1					
ANR	61733	Identifier	noutput		61562	1					
ANR	61734	IfStatement	if ( mon_config -> num_of_monitors > MONITOR_SIZE_COUNT )		61562	10					
ANR	61735	Condition	mon_config -> num_of_monitors > MONITOR_SIZE_COUNT	757:8:23638:23685	61562	0	True				
ANR	61736	RelationalExpression	mon_config -> num_of_monitors > MONITOR_SIZE_COUNT		61562	0		>			
ANR	61737	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	61738	Identifier	mon_config		61562	0					
ANR	61739	Identifier	num_of_monitors		61562	1					
ANR	61740	Identifier	MONITOR_SIZE_COUNT		61562	1					
ANR	61741	CompoundStatement		32:58:1006:1006	61562	1					
ANR	61742	ExpressionStatement	"syslog ( LOG_WARNING , ""warning: client send %d monitors, capping at %d"" , mon_config -> num_of_monitors , MONITOR_SIZE_COUNT )"	758:8:23698:23832	61562	0	True				
ANR	61743	CallExpression	"syslog ( LOG_WARNING , ""warning: client send %d monitors, capping at %d"" , mon_config -> num_of_monitors , MONITOR_SIZE_COUNT )"		61562	0					
ANR	61744	Callee	syslog		61562	0					
ANR	61745	Identifier	syslog		61562	0					
ANR	61746	ArgumentList	LOG_WARNING		61562	1					
ANR	61747	Argument	LOG_WARNING		61562	0					
ANR	61748	Identifier	LOG_WARNING		61562	0					
ANR	61749	Argument	"""warning: client send %d monitors, capping at %d"""		61562	1					
ANR	61750	PrimaryExpression	"""warning: client send %d monitors, capping at %d"""		61562	0					
ANR	61751	Argument	mon_config -> num_of_monitors		61562	2					
ANR	61752	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	61753	Identifier	mon_config		61562	0					
ANR	61754	Identifier	num_of_monitors		61562	1					
ANR	61755	Argument	MONITOR_SIZE_COUNT		61562	3					
ANR	61756	Identifier	MONITOR_SIZE_COUNT		61562	0					
ANR	61757	ExpressionStatement	mon_config -> num_of_monitors = MONITOR_SIZE_COUNT	760:8:23842:23890	61562	1	True				
ANR	61758	AssignmentExpression	mon_config -> num_of_monitors = MONITOR_SIZE_COUNT		61562	0		=			
ANR	61759	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	61760	Identifier	mon_config		61562	0					
ANR	61761	Identifier	num_of_monitors		61562	1					
ANR	61762	Identifier	MONITOR_SIZE_COUNT		61562	1					
ANR	61763	ExpressionStatement	"zero_base_monitors ( x11 , mon_config , & primary_w , & primary_h )"	763:4:23903:23962	61562	11	True				
ANR	61764	CallExpression	"zero_base_monitors ( x11 , mon_config , & primary_w , & primary_h )"		61562	0					
ANR	61765	Callee	zero_base_monitors		61562	0					
ANR	61766	Identifier	zero_base_monitors		61562	0					
ANR	61767	ArgumentList	x11		61562	1					
ANR	61768	Argument	x11		61562	0					
ANR	61769	Identifier	x11		61562	0					
ANR	61770	Argument	mon_config		61562	1					
ANR	61771	Identifier	mon_config		61562	0					
ANR	61772	Argument	& primary_w		61562	2					
ANR	61773	UnaryOperationExpression	& primary_w		61562	0					
ANR	61774	UnaryOperator	&		61562	0					
ANR	61775	Identifier	primary_w		61562	1					
ANR	61776	Argument	& primary_h		61562	3					
ANR	61777	UnaryOperationExpression	& primary_h		61562	0					
ANR	61778	UnaryOperator	&		61562	0					
ANR	61779	Identifier	primary_h		61562	1					
ANR	61780	ExpressionStatement	"constrain_to_screen ( x11 , & primary_w , & primary_h )"	765:4:23969:24017	61562	12	True				
ANR	61781	CallExpression	"constrain_to_screen ( x11 , & primary_w , & primary_h )"		61562	0					
ANR	61782	Callee	constrain_to_screen		61562	0					
ANR	61783	Identifier	constrain_to_screen		61562	0					
ANR	61784	ArgumentList	x11		61562	1					
ANR	61785	Argument	x11		61562	0					
ANR	61786	Identifier	x11		61562	0					
ANR	61787	Argument	& primary_w		61562	1					
ANR	61788	UnaryOperationExpression	& primary_w		61562	0					
ANR	61789	UnaryOperator	&		61562	0					
ANR	61790	Identifier	primary_w		61562	1					
ANR	61791	Argument	& primary_h		61562	2					
ANR	61792	UnaryOperationExpression	& primary_h		61562	0					
ANR	61793	UnaryOperator	&		61562	0					
ANR	61794	Identifier	primary_h		61562	1					
ANR	61795	IfStatement	if ( x11 -> debug )		61562	13					
ANR	61796	Condition	x11 -> debug	767:8:24028:24037	61562	0	True				
ANR	61797	PtrMemberAccess	x11 -> debug		61562	0					
ANR	61798	Identifier	x11		61562	0					
ANR	61799	Identifier	debug		61562	1					
ANR	61800	CompoundStatement		42:20:1358:1358	61562	1					
ANR	61801	ExpressionStatement	"dump_monitors_config ( x11 , mon_config , ""after zeroing"" )"	768:8:24050:24104	61562	0	True				
ANR	61802	CallExpression	"dump_monitors_config ( x11 , mon_config , ""after zeroing"" )"		61562	0					
ANR	61803	Callee	dump_monitors_config		61562	0					
ANR	61804	Identifier	dump_monitors_config		61562	0					
ANR	61805	ArgumentList	x11		61562	1					
ANR	61806	Argument	x11		61562	0					
ANR	61807	Identifier	x11		61562	0					
ANR	61808	Argument	mon_config		61562	1					
ANR	61809	Identifier	mon_config		61562	0					
ANR	61810	Argument	"""after zeroing"""		61562	2					
ANR	61811	PrimaryExpression	"""after zeroing"""		61562	0					
ANR	61812	ExpressionStatement	curr = get_current_mon_config ( x11 )	771:4:24117:24151	61562	14	True				
ANR	61813	AssignmentExpression	curr = get_current_mon_config ( x11 )		61562	0		=			
ANR	61814	Identifier	curr		61562	0					
ANR	61815	CallExpression	get_current_mon_config ( x11 )		61562	1					
ANR	61816	Callee	get_current_mon_config		61562	0					
ANR	61817	Identifier	get_current_mon_config		61562	0					
ANR	61818	ArgumentList	x11		61562	1					
ANR	61819	Argument	x11		61562	0					
ANR	61820	Identifier	x11		61562	0					
ANR	61821	IfStatement	if ( ! curr )		61562	15					
ANR	61822	Condition	! curr	772:8:24161:24165	61562	0	True				
ANR	61823	UnaryOperationExpression	! curr		61562	0					
ANR	61824	UnaryOperator	!		61562	0					
ANR	61825	Identifier	curr		61562	1					
ANR	61826	GotoStatement	goto exit ;	773:8:24176:24185	61562	1	True				
ANR	61827	Identifier	exit		61562	0					
ANR	61828	IfStatement	"if ( same_monitor_configs ( mon_config , curr ) && x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h )"		61562	16					
ANR	61829	Condition	"same_monitor_configs ( mon_config , curr ) && x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h"	774:8:24195:24304	61562	0	True				
ANR	61830	AndExpression	"same_monitor_configs ( mon_config , curr ) && x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h"		61562	0		&&			
ANR	61831	CallExpression	"same_monitor_configs ( mon_config , curr )"		61562	0					
ANR	61832	Callee	same_monitor_configs		61562	0					
ANR	61833	Identifier	same_monitor_configs		61562	0					
ANR	61834	ArgumentList	mon_config		61562	1					
ANR	61835	Argument	mon_config		61562	0					
ANR	61836	Identifier	mon_config		61562	0					
ANR	61837	Argument	curr		61562	1					
ANR	61838	Identifier	curr		61562	0					
ANR	61839	AndExpression	x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h		61562	1		&&			
ANR	61840	EqualityExpression	x11 -> width [ 0 ] == primary_w		61562	0		==			
ANR	61841	ArrayIndexing	x11 -> width [ 0 ]		61562	0					
ANR	61842	PtrMemberAccess	x11 -> width		61562	0					
ANR	61843	Identifier	x11		61562	0					
ANR	61844	Identifier	width		61562	1					
ANR	61845	PrimaryExpression	0		61562	1					
ANR	61846	Identifier	primary_w		61562	1					
ANR	61847	EqualityExpression	x11 -> height [ 0 ] == primary_h		61562	1		==			
ANR	61848	ArrayIndexing	x11 -> height [ 0 ]		61562	0					
ANR	61849	PtrMemberAccess	x11 -> height		61562	0					
ANR	61850	Identifier	x11		61562	0					
ANR	61851	Identifier	height		61562	1					
ANR	61852	PrimaryExpression	0		61562	1					
ANR	61853	Identifier	primary_h		61562	1					
ANR	61854	CompoundStatement		50:70:1625:1625	61562	1					
ANR	61855	GotoStatement	goto exit ;	776:8:24317:24326	61562	0	True				
ANR	61856	Identifier	exit		61562	0					
ANR	61857	IfStatement	"if ( same_monitor_configs ( mon_config , x11 -> randr . failed_conf ) )"		61562	17					
ANR	61858	Condition	"same_monitor_configs ( mon_config , x11 -> randr . failed_conf )"	779:8:24343:24398	61562	0	True				
ANR	61859	CallExpression	"same_monitor_configs ( mon_config , x11 -> randr . failed_conf )"		61562	0					
ANR	61860	Callee	same_monitor_configs		61562	0					
ANR	61861	Identifier	same_monitor_configs		61562	0					
ANR	61862	ArgumentList	mon_config		61562	1					
ANR	61863	Argument	mon_config		61562	0					
ANR	61864	Identifier	mon_config		61562	0					
ANR	61865	Argument	x11 -> randr . failed_conf		61562	1					
ANR	61866	MemberAccess	x11 -> randr . failed_conf		61562	0					
ANR	61867	PtrMemberAccess	x11 -> randr		61562	0					
ANR	61868	Identifier	x11		61562	0					
ANR	61869	Identifier	randr		61562	1					
ANR	61870	Identifier	failed_conf		61562	1					
ANR	61871	CompoundStatement		54:66:1719:1719	61562	1					
ANR	61872	ExpressionStatement	"syslog ( LOG_WARNING , ""Ignoring previous failed client monitor config"" )"	780:8:24411:24480	61562	0	True				
ANR	61873	CallExpression	"syslog ( LOG_WARNING , ""Ignoring previous failed client monitor config"" )"		61562	0					
ANR	61874	Callee	syslog		61562	0					
ANR	61875	Identifier	syslog		61562	0					
ANR	61876	ArgumentList	LOG_WARNING		61562	1					
ANR	61877	Argument	LOG_WARNING		61562	0					
ANR	61878	Identifier	LOG_WARNING		61562	0					
ANR	61879	Argument	"""Ignoring previous failed client monitor config"""		61562	1					
ANR	61880	PrimaryExpression	"""Ignoring previous failed client monitor config"""		61562	0					
ANR	61881	GotoStatement	goto exit ;	781:8:24490:24499	61562	1	True				
ANR	61882	Identifier	exit		61562	0					
ANR	61883	IdentifierDeclStatement	"gchar * config = g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL ) ;"	784:4:24512:24593	61562	18	True				
ANR	61884	IdentifierDecl	"* config = g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL )"		61562	0					
ANR	61885	IdentifierDeclType	gchar *		61562	0					
ANR	61886	Identifier	config		61562	1					
ANR	61887	AssignmentExpression	"* config = g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL )"		61562	2		=			
ANR	61888	Identifier	config		61562	0					
ANR	61889	CallExpression	"g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL )"		61562	1					
ANR	61890	Callee	g_build_filename		61562	0					
ANR	61891	Identifier	g_build_filename		61562	0					
ANR	61892	ArgumentList	g_get_user_config_dir ( )		61562	1					
ANR	61893	Argument	g_get_user_config_dir ( )		61562	0					
ANR	61894	CallExpression	g_get_user_config_dir ( )		61562	0					
ANR	61895	Callee	g_get_user_config_dir		61562	0					
ANR	61896	Identifier	g_get_user_config_dir		61562	0					
ANR	61897	ArgumentList			61562	1					
ANR	61898	Argument	"""monitors.xml"""		61562	1					
ANR	61899	PrimaryExpression	"""monitors.xml"""		61562	0					
ANR	61900	Argument	NULL		61562	2					
ANR	61901	Identifier	NULL		61562	0					
ANR	61902	ExpressionStatement	g_unlink ( config )	785:4:24599:24615	61562	19	True				
ANR	61903	CallExpression	g_unlink ( config )		61562	0					
ANR	61904	Callee	g_unlink		61562	0					
ANR	61905	Identifier	g_unlink		61562	0					
ANR	61906	ArgumentList	config		61562	1					
ANR	61907	Argument	config		61562	0					
ANR	61908	Identifier	config		61562	0					
ANR	61909	ExpressionStatement	g_free ( config )	786:4:24621:24635	61562	20	True				
ANR	61910	CallExpression	g_free ( config )		61562	0					
ANR	61911	Callee	g_free		61562	0					
ANR	61912	Identifier	g_free		61562	0					
ANR	61913	ArgumentList	config		61562	1					
ANR	61914	Argument	config		61562	0					
ANR	61915	Identifier	config		61562	0					
ANR	61916	ForStatement	for ( i = mon_config -> num_of_monitors ; i < x11 -> randr . res -> noutput ; i ++ )		61562	21					
ANR	61917	ForInit	i = mon_config -> num_of_monitors ;	788:9:24647:24678	61562	0	True				
ANR	61918	AssignmentExpression	i = mon_config -> num_of_monitors		61562	0		=			
ANR	61919	Identifier	i		61562	0					
ANR	61920	PtrMemberAccess	mon_config -> num_of_monitors		61562	1					
ANR	61921	Identifier	mon_config		61562	0					
ANR	61922	Identifier	num_of_monitors		61562	1					
ANR	61923	Condition	i < x11 -> randr . res -> noutput	788:42:24680:24706	61562	1	True				
ANR	61924	RelationalExpression	i < x11 -> randr . res -> noutput		61562	0		<			
ANR	61925	Identifier	i		61562	0					
ANR	61926	PtrMemberAccess	x11 -> randr . res -> noutput		61562	1					
ANR	61927	MemberAccess	x11 -> randr . res		61562	0					
ANR	61928	PtrMemberAccess	x11 -> randr		61562	0					
ANR	61929	Identifier	x11		61562	0					
ANR	61930	Identifier	randr		61562	1					
ANR	61931	Identifier	res		61562	1					
ANR	61932	Identifier	noutput		61562	1					
ANR	61933	PostIncDecOperationExpression	i ++	788:71:24709:24711	61562	2	True				
ANR	61934	Identifier	i		61562	0					
ANR	61935	IncDec	++		61562	1					
ANR	61936	ExpressionStatement	"xrandr_disable_output ( x11 , i )"	789:8:24722:24751	61562	3	True				
ANR	61937	CallExpression	"xrandr_disable_output ( x11 , i )"		61562	0					
ANR	61938	Callee	xrandr_disable_output		61562	0					
ANR	61939	Identifier	xrandr_disable_output		61562	0					
ANR	61940	ArgumentList	x11		61562	1					
ANR	61941	Argument	x11		61562	0					
ANR	61942	Identifier	x11		61562	0					
ANR	61943	Argument	i		61562	1					
ANR	61944	Identifier	i		61562	0					
ANR	61945	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		61562	22					
ANR	61946	ForInit	i = 0 ;	792:9:24806:24811	61562	0	True				
ANR	61947	AssignmentExpression	i = 0		61562	0		=			
ANR	61948	Identifier	i		61562	0					
ANR	61949	PrimaryExpression	0		61562	1					
ANR	61950	Condition	i < mon_config -> num_of_monitors	792:16:24813:24843	61562	1	True				
ANR	61951	RelationalExpression	i < mon_config -> num_of_monitors		61562	0		<			
ANR	61952	Identifier	i		61562	0					
ANR	61953	PtrMemberAccess	mon_config -> num_of_monitors		61562	1					
ANR	61954	Identifier	mon_config		61562	0					
ANR	61955	Identifier	num_of_monitors		61562	1					
ANR	61956	UnaryExpression	++ i	792:49:24846:24848	61562	2	True				
ANR	61957	IncDec	++		61562	0					
ANR	61958	Identifier	i		61562	1					
ANR	61959	CompoundStatement		67:54:2169:2169	61562	3					
ANR	61960	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		61562	0					
ANR	61961	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	793:12:24865:24906	61562	0	True				
ANR	61962	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		61562	0					
ANR	61963	UnaryOperator	!		61562	0					
ANR	61964	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		61562	1					
ANR	61965	Callee	monitor_enabled		61562	0					
ANR	61966	Identifier	monitor_enabled		61562	0					
ANR	61967	ArgumentList	& mon_config -> monitors [ i ]		61562	1					
ANR	61968	Argument	& mon_config -> monitors [ i ]		61562	0					
ANR	61969	UnaryOperationExpression	& mon_config -> monitors [ i ]		61562	0					
ANR	61970	UnaryOperator	&		61562	0					
ANR	61971	ArrayIndexing	mon_config -> monitors [ i ]		61562	1					
ANR	61972	PtrMemberAccess	mon_config -> monitors		61562	0					
ANR	61973	Identifier	mon_config		61562	0					
ANR	61974	Identifier	monitors		61562	1					
ANR	61975	Identifier	i		61562	1					
ANR	61976	CompoundStatement		68:56:2227:2227	61562	1					
ANR	61977	ExpressionStatement	"xrandr_disable_output ( x11 , i )"	794:12:24923:24952	61562	0	True				
ANR	61978	CallExpression	"xrandr_disable_output ( x11 , i )"		61562	0					
ANR	61979	Callee	xrandr_disable_output		61562	0					
ANR	61980	Identifier	xrandr_disable_output		61562	0					
ANR	61981	ArgumentList	x11		61562	1					
ANR	61982	Argument	x11		61562	0					
ANR	61983	Identifier	x11		61562	0					
ANR	61984	Argument	i		61562	1					
ANR	61985	Identifier	i		61562	0					
ANR	61986	ForStatement	for ( i = 0 ; i < curr -> num_of_monitors ; ++ i )		61562	23					
ANR	61987	ForInit	i = 0 ;	803:9:25234:25239	61562	0	True				
ANR	61988	AssignmentExpression	i = 0		61562	0		=			
ANR	61989	Identifier	i		61562	0					
ANR	61990	PrimaryExpression	0		61562	1					
ANR	61991	Condition	i < curr -> num_of_monitors	803:16:25241:25265	61562	1	True				
ANR	61992	RelationalExpression	i < curr -> num_of_monitors		61562	0		<			
ANR	61993	Identifier	i		61562	0					
ANR	61994	PtrMemberAccess	curr -> num_of_monitors		61562	1					
ANR	61995	Identifier	curr		61562	0					
ANR	61996	Identifier	num_of_monitors		61562	1					
ANR	61997	UnaryExpression	++ i	803:43:25268:25270	61562	2	True				
ANR	61998	IncDec	++		61562	0					
ANR	61999	Identifier	i		61562	1					
ANR	62000	CompoundStatement		80:8:2628:2636	61562	3					
ANR	62001	IdentifierDeclStatement	"int width , height ;"	804:8:25283:25300	61562	0	True				
ANR	62002	IdentifierDecl	width		61562	0					
ANR	62003	IdentifierDeclType	int		61562	0					
ANR	62004	Identifier	width		61562	1					
ANR	62005	IdentifierDecl	height		61562	1					
ANR	62006	IdentifierDeclType	int		61562	0					
ANR	62007	Identifier	height		61562	1					
ANR	62008	IdentifierDeclStatement	"int x , y ;"	805:8:25310:25318	61562	1	True				
ANR	62009	IdentifierDecl	x		61562	0					
ANR	62010	IdentifierDeclType	int		61562	0					
ANR	62011	Identifier	x		61562	1					
ANR	62012	IdentifierDecl	y		61562	1					
ANR	62013	IdentifierDeclType	int		61562	0					
ANR	62014	Identifier	y		61562	1					
ANR	62015	ExpressionStatement	width = curr -> monitors [ i ] . width	807:8:25329:25360	61562	2	True				
ANR	62016	AssignmentExpression	width = curr -> monitors [ i ] . width		61562	0		=			
ANR	62017	Identifier	width		61562	0					
ANR	62018	MemberAccess	curr -> monitors [ i ] . width		61562	1					
ANR	62019	ArrayIndexing	curr -> monitors [ i ]		61562	0					
ANR	62020	PtrMemberAccess	curr -> monitors		61562	0					
ANR	62021	Identifier	curr		61562	0					
ANR	62022	Identifier	monitors		61562	1					
ANR	62023	Identifier	i		61562	1					
ANR	62024	Identifier	width		61562	1					
ANR	62025	ExpressionStatement	height = curr -> monitors [ i ] . height	808:8:25370:25403	61562	3	True				
ANR	62026	AssignmentExpression	height = curr -> monitors [ i ] . height		61562	0		=			
ANR	62027	Identifier	height		61562	0					
ANR	62028	MemberAccess	curr -> monitors [ i ] . height		61562	1					
ANR	62029	ArrayIndexing	curr -> monitors [ i ]		61562	0					
ANR	62030	PtrMemberAccess	curr -> monitors		61562	0					
ANR	62031	Identifier	curr		61562	0					
ANR	62032	Identifier	monitors		61562	1					
ANR	62033	Identifier	i		61562	1					
ANR	62034	Identifier	height		61562	1					
ANR	62035	ExpressionStatement	x = curr -> monitors [ i ] . x	809:8:25413:25436	61562	4	True				
ANR	62036	AssignmentExpression	x = curr -> monitors [ i ] . x		61562	0		=			
ANR	62037	Identifier	x		61562	0					
ANR	62038	MemberAccess	curr -> monitors [ i ] . x		61562	1					
ANR	62039	ArrayIndexing	curr -> monitors [ i ]		61562	0					
ANR	62040	PtrMemberAccess	curr -> monitors		61562	0					
ANR	62041	Identifier	curr		61562	0					
ANR	62042	Identifier	monitors		61562	1					
ANR	62043	Identifier	i		61562	1					
ANR	62044	Identifier	x		61562	1					
ANR	62045	ExpressionStatement	y = curr -> monitors [ i ] . y	810:8:25446:25469	61562	5	True				
ANR	62046	AssignmentExpression	y = curr -> monitors [ i ] . y		61562	0		=			
ANR	62047	Identifier	y		61562	0					
ANR	62048	MemberAccess	curr -> monitors [ i ] . y		61562	1					
ANR	62049	ArrayIndexing	curr -> monitors [ i ]		61562	0					
ANR	62050	PtrMemberAccess	curr -> monitors		61562	0					
ANR	62051	Identifier	curr		61562	0					
ANR	62052	Identifier	monitors		61562	1					
ANR	62053	Identifier	i		61562	1					
ANR	62054	Identifier	y		61562	1					
ANR	62055	IfStatement	if ( ( x + width > primary_w ) || ( y + height > primary_h ) )		61562	6					
ANR	62056	Condition	( x + width > primary_w ) || ( y + height > primary_h )	812:12:25484:25534	61562	0	True				
ANR	62057	OrExpression	( x + width > primary_w ) || ( y + height > primary_h )		61562	0		||			
ANR	62058	RelationalExpression	x + width > primary_w		61562	0		>			
ANR	62059	AdditiveExpression	x + width		61562	0		+			
ANR	62060	Identifier	x		61562	0					
ANR	62061	Identifier	width		61562	1					
ANR	62062	Identifier	primary_w		61562	1					
ANR	62063	RelationalExpression	y + height > primary_h		61562	1		>			
ANR	62064	AdditiveExpression	y + height		61562	0		+			
ANR	62065	Identifier	y		61562	0					
ANR	62066	Identifier	height		61562	1					
ANR	62067	Identifier	primary_h		61562	1					
ANR	62068	CompoundStatement		87:65:2855:2855	61562	1					
ANR	62069	IfStatement	if ( x11 -> debug )		61562	0					
ANR	62070	Condition	x11 -> debug	813:16:25555:25564	61562	0	True				
ANR	62071	PtrMemberAccess	x11 -> debug		61562	0					
ANR	62072	Identifier	x11		61562	0					
ANR	62073	Identifier	debug		61562	1					
ANR	62074	Statement	syslog	814:16:25583:25588	61562	1	True				
ANR	62075	Statement	(	814:22:25589:25589	61562	1	True				
ANR	62076	Statement	LOG_DEBUG	814:23:25590:25598	61562	2	True				
ANR	62077	Statement	","	814:32:25599:25599	61562	3	True				
ANR	62078	Statement	"""Disabling monitor %d: """	814:34:25601:25624	61562	4	True				
ANR	62079	Statement	"""%dx%d+%d+%d > (%d,%d)"""	815:23:25649:25671	61562	5	True				
ANR	62080	Statement	","	815:46:25672:25672	61562	6	True				
ANR	62081	Statement	i	816:23:25697:25697	61562	7	True				
ANR	62082	Statement	","	816:24:25698:25698	61562	8	True				
ANR	62083	Statement	width	816:26:25700:25704	61562	9	True				
ANR	62084	Statement	","	816:31:25705:25705	61562	10	True				
ANR	62085	Statement	height	816:33:25707:25712	61562	11	True				
ANR	62086	Statement	","	816:39:25713:25713	61562	12	True				
ANR	62087	Statement	x	816:41:25715:25715	61562	13	True				
ANR	62088	Statement	","	816:42:25716:25716	61562	14	True				
ANR	62089	Statement	y	816:44:25718:25718	61562	15	True				
ANR	62090	Statement	","	816:45:25719:25719	61562	16	True				
ANR	62091	Statement	primary_w	816:47:25721:25729	61562	17	True				
ANR	62092	Statement	","	816:56:25730:25730	61562	18	True				
ANR	62093	Statement	primary_h	816:58:25732:25740	61562	19	True				
ANR	62094	Statement	)	816:67:25741:25741	61562	20	True				
ANR	62095	ExpressionStatement		816:68:25742:25742	61562	21	True				
ANR	62096	ExpressionStatement	"xrandr_disable_output ( x11 , i )"	818:12:25757:25786	61562	22	True				
ANR	62097	CallExpression	"xrandr_disable_output ( x11 , i )"		61562	0					
ANR	62098	Callee	xrandr_disable_output		61562	0					
ANR	62099	Identifier	xrandr_disable_output		61562	0					
ANR	62100	ArgumentList	x11		61562	1					
ANR	62101	Argument	x11		61562	0					
ANR	62102	Identifier	x11		61562	0					
ANR	62103	Argument	i		61562	1					
ANR	62104	Identifier	i		61562	0					
ANR	62105	IfStatement	if ( primary_w != x11 -> width [ 0 ] || primary_h != x11 -> height [ 0 ] )		61562	24					
ANR	62106	Condition	primary_w != x11 -> width [ 0 ] || primary_h != x11 -> height [ 0 ]	823:8:25860:25916	61562	0	True				
ANR	62107	OrExpression	primary_w != x11 -> width [ 0 ] || primary_h != x11 -> height [ 0 ]		61562	0		||			
ANR	62108	EqualityExpression	primary_w != x11 -> width [ 0 ]		61562	0		!=			
ANR	62109	Identifier	primary_w		61562	0					
ANR	62110	ArrayIndexing	x11 -> width [ 0 ]		61562	1					
ANR	62111	PtrMemberAccess	x11 -> width		61562	0					
ANR	62112	Identifier	x11		61562	0					
ANR	62113	Identifier	width		61562	1					
ANR	62114	PrimaryExpression	0		61562	1					
ANR	62115	EqualityExpression	primary_h != x11 -> height [ 0 ]		61562	1		!=			
ANR	62116	Identifier	primary_h		61562	0					
ANR	62117	ArrayIndexing	x11 -> height [ 0 ]		61562	1					
ANR	62118	PtrMemberAccess	x11 -> height		61562	0					
ANR	62119	Identifier	x11		61562	0					
ANR	62120	Identifier	height		61562	1					
ANR	62121	PrimaryExpression	0		61562	1					
ANR	62122	CompoundStatement		101:8:3395:3442	61562	1					
ANR	62123	IdentifierDeclStatement	const int dpi = 96 ;	824:8:25929:25947	61562	0	True				
ANR	62124	IdentifierDecl	dpi = 96		61562	0					
ANR	62125	IdentifierDeclType	const int		61562	0					
ANR	62126	Identifier	dpi		61562	1					
ANR	62127	AssignmentExpression	dpi = 96		61562	2		=			
ANR	62128	Identifier	dpi		61562	0					
ANR	62129	PrimaryExpression	96		61562	1					
ANR	62130	IdentifierDeclStatement	int width_mm = ( MM_PER_INCH * primary_w ) / dpi ;	825:8:26021:26067	61562	1	True				
ANR	62131	IdentifierDecl	width_mm = ( MM_PER_INCH * primary_w ) / dpi		61562	0					
ANR	62132	IdentifierDeclType	int		61562	0					
ANR	62133	Identifier	width_mm		61562	1					
ANR	62134	AssignmentExpression	width_mm = ( MM_PER_INCH * primary_w ) / dpi		61562	2		=			
ANR	62135	Identifier	width_mm		61562	0					
ANR	62136	MultiplicativeExpression	( MM_PER_INCH * primary_w ) / dpi		61562	1		/			
ANR	62137	MultiplicativeExpression	MM_PER_INCH * primary_w		61562	0		*			
ANR	62138	Identifier	MM_PER_INCH		61562	0					
ANR	62139	Identifier	primary_w		61562	1					
ANR	62140	Identifier	dpi		61562	1					
ANR	62141	IdentifierDeclStatement	int height_mm = ( MM_PER_INCH * primary_h ) / dpi ;	826:8:26077:26124	61562	2	True				
ANR	62142	IdentifierDecl	height_mm = ( MM_PER_INCH * primary_h ) / dpi		61562	0					
ANR	62143	IdentifierDeclType	int		61562	0					
ANR	62144	Identifier	height_mm		61562	1					
ANR	62145	AssignmentExpression	height_mm = ( MM_PER_INCH * primary_h ) / dpi		61562	2		=			
ANR	62146	Identifier	height_mm		61562	0					
ANR	62147	MultiplicativeExpression	( MM_PER_INCH * primary_h ) / dpi		61562	1		/			
ANR	62148	MultiplicativeExpression	MM_PER_INCH * primary_h		61562	0		*			
ANR	62149	Identifier	MM_PER_INCH		61562	0					
ANR	62150	Identifier	primary_h		61562	1					
ANR	62151	Identifier	dpi		61562	1					
ANR	62152	IfStatement	if ( x11 -> debug )		61562	3					
ANR	62153	Condition	x11 -> debug	828:12:26139:26148	61562	0	True				
ANR	62154	PtrMemberAccess	x11 -> debug		61562	0					
ANR	62155	Identifier	x11		61562	0					
ANR	62156	Identifier	debug		61562	1					
ANR	62157	ExpressionStatement	"syslog ( LOG_DEBUG , ""Changing screen size to %dx%d"" , primary_w , primary_h )"	829:12:26163:26254	61562	1	True				
ANR	62158	CallExpression	"syslog ( LOG_DEBUG , ""Changing screen size to %dx%d"" , primary_w , primary_h )"		61562	0					
ANR	62159	Callee	syslog		61562	0					
ANR	62160	Identifier	syslog		61562	0					
ANR	62161	ArgumentList	LOG_DEBUG		61562	1					
ANR	62162	Argument	LOG_DEBUG		61562	0					
ANR	62163	Identifier	LOG_DEBUG		61562	0					
ANR	62164	Argument	"""Changing screen size to %dx%d"""		61562	1					
ANR	62165	PrimaryExpression	"""Changing screen size to %dx%d"""		61562	0					
ANR	62166	Argument	primary_w		61562	2					
ANR	62167	Identifier	primary_w		61562	0					
ANR	62168	Argument	primary_h		61562	3					
ANR	62169	Identifier	primary_h		61562	0					
ANR	62170	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	831:8:26264:26313	61562	4	True				
ANR	62171	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		61562	0					
ANR	62172	Callee	vdagent_x11_set_error_handler		61562	0					
ANR	62173	Identifier	vdagent_x11_set_error_handler		61562	0					
ANR	62174	ArgumentList	x11		61562	1					
ANR	62175	Argument	x11		61562	0					
ANR	62176	Identifier	x11		61562	0					
ANR	62177	Argument	error_handler		61562	1					
ANR	62178	Identifier	error_handler		61562	0					
ANR	62179	ExpressionStatement	"XRRSetScreenSize ( x11 -> display , x11 -> root_window [ 0 ] , primary_w , primary_h , width_mm , height_mm )"	832:8:26323:26442	61562	5	True				
ANR	62180	CallExpression	"XRRSetScreenSize ( x11 -> display , x11 -> root_window [ 0 ] , primary_w , primary_h , width_mm , height_mm )"		61562	0					
ANR	62181	Callee	XRRSetScreenSize		61562	0					
ANR	62182	Identifier	XRRSetScreenSize		61562	0					
ANR	62183	ArgumentList	x11 -> display		61562	1					
ANR	62184	Argument	x11 -> display		61562	0					
ANR	62185	PtrMemberAccess	x11 -> display		61562	0					
ANR	62186	Identifier	x11		61562	0					
ANR	62187	Identifier	display		61562	1					
ANR	62188	Argument	x11 -> root_window [ 0 ]		61562	1					
ANR	62189	ArrayIndexing	x11 -> root_window [ 0 ]		61562	0					
ANR	62190	PtrMemberAccess	x11 -> root_window		61562	0					
ANR	62191	Identifier	x11		61562	0					
ANR	62192	Identifier	root_window		61562	1					
ANR	62193	PrimaryExpression	0		61562	1					
ANR	62194	Argument	primary_w		61562	2					
ANR	62195	Identifier	primary_w		61562	0					
ANR	62196	Argument	primary_h		61562	3					
ANR	62197	Identifier	primary_h		61562	0					
ANR	62198	Argument	width_mm		61562	4					
ANR	62199	Identifier	width_mm		61562	0					
ANR	62200	Argument	height_mm		61562	5					
ANR	62201	Identifier	height_mm		61562	0					
ANR	62202	IfStatement	if ( vdagent_x11_restore_error_handler ( x11 ) )		61562	6					
ANR	62203	Condition	vdagent_x11_restore_error_handler ( x11 )	834:12:26456:26493	61562	0	True				
ANR	62204	CallExpression	vdagent_x11_restore_error_handler ( x11 )		61562	0					
ANR	62205	Callee	vdagent_x11_restore_error_handler		61562	0					
ANR	62206	Identifier	vdagent_x11_restore_error_handler		61562	0					
ANR	62207	ArgumentList	x11		61562	1					
ANR	62208	Argument	x11		61562	0					
ANR	62209	Identifier	x11		61562	0					
ANR	62210	CompoundStatement		109:52:3814:3814	61562	1					
ANR	62211	ExpressionStatement	"syslog ( LOG_ERR , ""XRRSetScreenSize failed, not enough mem?"" )"	835:12:26510:26569	61562	0	True				
ANR	62212	CallExpression	"syslog ( LOG_ERR , ""XRRSetScreenSize failed, not enough mem?"" )"		61562	0					
ANR	62213	Callee	syslog		61562	0					
ANR	62214	Identifier	syslog		61562	0					
ANR	62215	ArgumentList	LOG_ERR		61562	1					
ANR	62216	Argument	LOG_ERR		61562	0					
ANR	62217	Identifier	LOG_ERR		61562	0					
ANR	62218	Argument	"""XRRSetScreenSize failed, not enough mem?"""		61562	1					
ANR	62219	PrimaryExpression	"""XRRSetScreenSize failed, not enough mem?"""		61562	0					
ANR	62220	IfStatement	if ( ! fallback )		61562	1					
ANR	62221	Condition	! fallback	836:16:26587:26595	61562	0	True				
ANR	62222	UnaryOperationExpression	! fallback		61562	0					
ANR	62223	UnaryOperator	!		61562	0					
ANR	62224	Identifier	fallback		61562	1					
ANR	62225	CompoundStatement		111:27:3916:3916	61562	1					
ANR	62226	ExpressionStatement	"syslog ( LOG_WARNING , ""Restoring previous config"" )"	837:16:26616:26664	61562	0	True				
ANR	62227	CallExpression	"syslog ( LOG_WARNING , ""Restoring previous config"" )"		61562	0					
ANR	62228	Callee	syslog		61562	0					
ANR	62229	Identifier	syslog		61562	0					
ANR	62230	ArgumentList	LOG_WARNING		61562	1					
ANR	62231	Argument	LOG_WARNING		61562	0					
ANR	62232	Identifier	LOG_WARNING		61562	0					
ANR	62233	Argument	"""Restoring previous config"""		61562	1					
ANR	62234	PrimaryExpression	"""Restoring previous config"""		61562	0					
ANR	62235	ExpressionStatement	"vdagent_x11_set_monitor_config ( x11 , curr , 1 )"	838:16:26682:26726	61562	1	True				
ANR	62236	CallExpression	"vdagent_x11_set_monitor_config ( x11 , curr , 1 )"		61562	0					
ANR	62237	Callee	vdagent_x11_set_monitor_config		61562	0					
ANR	62238	Identifier	vdagent_x11_set_monitor_config		61562	0					
ANR	62239	ArgumentList	x11		61562	1					
ANR	62240	Argument	x11		61562	0					
ANR	62241	Identifier	x11		61562	0					
ANR	62242	Argument	curr		61562	1					
ANR	62243	Identifier	curr		61562	0					
ANR	62244	Argument	1		61562	2					
ANR	62245	PrimaryExpression	1		61562	0					
ANR	62246	ExpressionStatement	free ( curr )	839:16:26744:26754	61562	2	True				
ANR	62247	CallExpression	free ( curr )		61562	0					
ANR	62248	Callee	free		61562	0					
ANR	62249	Identifier	free		61562	0					
ANR	62250	ArgumentList	curr		61562	1					
ANR	62251	Argument	curr		61562	0					
ANR	62252	Identifier	curr		61562	0					
ANR	62253	ExpressionStatement	free ( x11 -> randr . failed_conf )	842:16:26924:26952	61562	3	True				
ANR	62254	CallExpression	free ( x11 -> randr . failed_conf )		61562	0					
ANR	62255	Callee	free		61562	0					
ANR	62256	Identifier	free		61562	0					
ANR	62257	ArgumentList	x11 -> randr . failed_conf		61562	1					
ANR	62258	Argument	x11 -> randr . failed_conf		61562	0					
ANR	62259	MemberAccess	x11 -> randr . failed_conf		61562	0					
ANR	62260	PtrMemberAccess	x11 -> randr		61562	0					
ANR	62261	Identifier	x11		61562	0					
ANR	62262	Identifier	randr		61562	1					
ANR	62263	Identifier	failed_conf		61562	1					
ANR	62264	ExpressionStatement	x11 -> randr . failed_conf = malloc ( config_size ( mon_config -> num_of_monitors ) )	843:16:26970:27063	61562	4	True				
ANR	62265	AssignmentExpression	x11 -> randr . failed_conf = malloc ( config_size ( mon_config -> num_of_monitors ) )		61562	0		=			
ANR	62266	MemberAccess	x11 -> randr . failed_conf		61562	0					
ANR	62267	PtrMemberAccess	x11 -> randr		61562	0					
ANR	62268	Identifier	x11		61562	0					
ANR	62269	Identifier	randr		61562	1					
ANR	62270	Identifier	failed_conf		61562	1					
ANR	62271	CallExpression	malloc ( config_size ( mon_config -> num_of_monitors ) )		61562	1					
ANR	62272	Callee	malloc		61562	0					
ANR	62273	Identifier	malloc		61562	0					
ANR	62274	ArgumentList	config_size ( mon_config -> num_of_monitors )		61562	1					
ANR	62275	Argument	config_size ( mon_config -> num_of_monitors )		61562	0					
ANR	62276	CallExpression	config_size ( mon_config -> num_of_monitors )		61562	0					
ANR	62277	Callee	config_size		61562	0					
ANR	62278	Identifier	config_size		61562	0					
ANR	62279	ArgumentList	mon_config -> num_of_monitors		61562	1					
ANR	62280	Argument	mon_config -> num_of_monitors		61562	0					
ANR	62281	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	62282	Identifier	mon_config		61562	0					
ANR	62283	Identifier	num_of_monitors		61562	1					
ANR	62284	IfStatement	if ( x11 -> randr . failed_conf )		61562	5					
ANR	62285	Condition	x11 -> randr . failed_conf	845:20:27085:27106	61562	0	True				
ANR	62286	MemberAccess	x11 -> randr . failed_conf		61562	0					
ANR	62287	PtrMemberAccess	x11 -> randr		61562	0					
ANR	62288	Identifier	x11		61562	0					
ANR	62289	Identifier	randr		61562	1					
ANR	62290	Identifier	failed_conf		61562	1					
ANR	62291	ExpressionStatement	"memcpy ( x11 -> randr . failed_conf , mon_config , config_size ( mon_config -> num_of_monitors ) )"	846:20:27129:27240	61562	1	True				
ANR	62292	CallExpression	"memcpy ( x11 -> randr . failed_conf , mon_config , config_size ( mon_config -> num_of_monitors ) )"		61562	0					
ANR	62293	Callee	memcpy		61562	0					
ANR	62294	Identifier	memcpy		61562	0					
ANR	62295	ArgumentList	x11 -> randr . failed_conf		61562	1					
ANR	62296	Argument	x11 -> randr . failed_conf		61562	0					
ANR	62297	MemberAccess	x11 -> randr . failed_conf		61562	0					
ANR	62298	PtrMemberAccess	x11 -> randr		61562	0					
ANR	62299	Identifier	x11		61562	0					
ANR	62300	Identifier	randr		61562	1					
ANR	62301	Identifier	failed_conf		61562	1					
ANR	62302	Argument	mon_config		61562	1					
ANR	62303	Identifier	mon_config		61562	0					
ANR	62304	Argument	config_size ( mon_config -> num_of_monitors )		61562	2					
ANR	62305	CallExpression	config_size ( mon_config -> num_of_monitors )		61562	0					
ANR	62306	Callee	config_size		61562	0					
ANR	62307	Identifier	config_size		61562	0					
ANR	62308	ArgumentList	mon_config -> num_of_monitors		61562	1					
ANR	62309	Argument	mon_config -> num_of_monitors		61562	0					
ANR	62310	PtrMemberAccess	mon_config -> num_of_monitors		61562	0					
ANR	62311	Identifier	mon_config		61562	0					
ANR	62312	Identifier	num_of_monitors		61562	1					
ANR	62313	ReturnStatement	return ;	848:16:27258:27264	61562	6	True				
ANR	62314	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		61562	25					
ANR	62315	ForInit	i = 0 ;	855:9:27430:27435	61562	0	True				
ANR	62316	AssignmentExpression	i = 0		61562	0		=			
ANR	62317	Identifier	i		61562	0					
ANR	62318	PrimaryExpression	0		61562	1					
ANR	62319	Condition	i < mon_config -> num_of_monitors	855:16:27437:27467	61562	1	True				
ANR	62320	RelationalExpression	i < mon_config -> num_of_monitors		61562	0		<			
ANR	62321	Identifier	i		61562	0					
ANR	62322	PtrMemberAccess	mon_config -> num_of_monitors		61562	1					
ANR	62323	Identifier	mon_config		61562	0					
ANR	62324	Identifier	num_of_monitors		61562	1					
ANR	62325	UnaryExpression	++ i	855:49:27470:27472	61562	2	True				
ANR	62326	IncDec	++		61562	0					
ANR	62327	Identifier	i		61562	1					
ANR	62328	CompoundStatement		132:8:4830:4838	61562	3					
ANR	62329	IdentifierDeclStatement	"int width , height ;"	856:8:27485:27502	61562	0	True				
ANR	62330	IdentifierDecl	width		61562	0					
ANR	62331	IdentifierDeclType	int		61562	0					
ANR	62332	Identifier	width		61562	1					
ANR	62333	IdentifierDecl	height		61562	1					
ANR	62334	IdentifierDeclType	int		61562	0					
ANR	62335	Identifier	height		61562	1					
ANR	62336	IdentifierDeclStatement	"int x , y ;"	857:8:27512:27520	61562	1	True				
ANR	62337	IdentifierDecl	x		61562	0					
ANR	62338	IdentifierDeclType	int		61562	0					
ANR	62339	Identifier	x		61562	1					
ANR	62340	IdentifierDecl	y		61562	1					
ANR	62341	IdentifierDeclType	int		61562	0					
ANR	62342	Identifier	y		61562	1					
ANR	62343	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		61562	2					
ANR	62344	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	859:12:27535:27576	61562	0	True				
ANR	62345	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		61562	0					
ANR	62346	UnaryOperator	!		61562	0					
ANR	62347	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		61562	1					
ANR	62348	Callee	monitor_enabled		61562	0					
ANR	62349	Identifier	monitor_enabled		61562	0					
ANR	62350	ArgumentList	& mon_config -> monitors [ i ]		61562	1					
ANR	62351	Argument	& mon_config -> monitors [ i ]		61562	0					
ANR	62352	UnaryOperationExpression	& mon_config -> monitors [ i ]		61562	0					
ANR	62353	UnaryOperator	&		61562	0					
ANR	62354	ArrayIndexing	mon_config -> monitors [ i ]		61562	1					
ANR	62355	PtrMemberAccess	mon_config -> monitors		61562	0					
ANR	62356	Identifier	mon_config		61562	0					
ANR	62357	Identifier	monitors		61562	1					
ANR	62358	Identifier	i		61562	1					
ANR	62359	CompoundStatement		134:56:4897:4897	61562	1					
ANR	62360	ContinueStatement	continue ;	860:12:27593:27601	61562	0	True				
ANR	62361	ExpressionStatement	width = mon_config -> monitors [ i ] . width	863:8:27674:27711	61562	3	True				
ANR	62362	AssignmentExpression	width = mon_config -> monitors [ i ] . width		61562	0		=			
ANR	62363	Identifier	width		61562	0					
ANR	62364	MemberAccess	mon_config -> monitors [ i ] . width		61562	1					
ANR	62365	ArrayIndexing	mon_config -> monitors [ i ]		61562	0					
ANR	62366	PtrMemberAccess	mon_config -> monitors		61562	0					
ANR	62367	Identifier	mon_config		61562	0					
ANR	62368	Identifier	monitors		61562	1					
ANR	62369	Identifier	i		61562	1					
ANR	62370	Identifier	width		61562	1					
ANR	62371	ExpressionStatement	height = mon_config -> monitors [ i ] . height	864:8:27721:27760	61562	4	True				
ANR	62372	AssignmentExpression	height = mon_config -> monitors [ i ] . height		61562	0		=			
ANR	62373	Identifier	height		61562	0					
ANR	62374	MemberAccess	mon_config -> monitors [ i ] . height		61562	1					
ANR	62375	ArrayIndexing	mon_config -> monitors [ i ]		61562	0					
ANR	62376	PtrMemberAccess	mon_config -> monitors		61562	0					
ANR	62377	Identifier	mon_config		61562	0					
ANR	62378	Identifier	monitors		61562	1					
ANR	62379	Identifier	i		61562	1					
ANR	62380	Identifier	height		61562	1					
ANR	62381	ExpressionStatement	x = mon_config -> monitors [ i ] . x	865:8:27770:27799	61562	5	True				
ANR	62382	AssignmentExpression	x = mon_config -> monitors [ i ] . x		61562	0		=			
ANR	62383	Identifier	x		61562	0					
ANR	62384	MemberAccess	mon_config -> monitors [ i ] . x		61562	1					
ANR	62385	ArrayIndexing	mon_config -> monitors [ i ]		61562	0					
ANR	62386	PtrMemberAccess	mon_config -> monitors		61562	0					
ANR	62387	Identifier	mon_config		61562	0					
ANR	62388	Identifier	monitors		61562	1					
ANR	62389	Identifier	i		61562	1					
ANR	62390	Identifier	x		61562	1					
ANR	62391	ExpressionStatement	y = mon_config -> monitors [ i ] . y	866:8:27809:27838	61562	6	True				
ANR	62392	AssignmentExpression	y = mon_config -> monitors [ i ] . y		61562	0		=			
ANR	62393	Identifier	y		61562	0					
ANR	62394	MemberAccess	mon_config -> monitors [ i ] . y		61562	1					
ANR	62395	ArrayIndexing	mon_config -> monitors [ i ]		61562	0					
ANR	62396	PtrMemberAccess	mon_config -> monitors		61562	0					
ANR	62397	Identifier	mon_config		61562	0					
ANR	62398	Identifier	monitors		61562	1					
ANR	62399	Identifier	i		61562	1					
ANR	62400	Identifier	y		61562	1					
ANR	62401	IfStatement	"if ( ! xrandr_add_and_set ( x11 , i , x , y , width , height ) && enabled_monitors ( mon_config ) == 1 )"		61562	7					
ANR	62402	Condition	"! xrandr_add_and_set ( x11 , i , x , y , width , height ) && enabled_monitors ( mon_config ) == 1"	867:12:27852:27952	61562	0	True				
ANR	62403	AndExpression	"! xrandr_add_and_set ( x11 , i , x , y , width , height ) && enabled_monitors ( mon_config ) == 1"		61562	0		&&			
ANR	62404	UnaryOperationExpression	"! xrandr_add_and_set ( x11 , i , x , y , width , height )"		61562	0					
ANR	62405	UnaryOperator	!		61562	0					
ANR	62406	CallExpression	"xrandr_add_and_set ( x11 , i , x , y , width , height )"		61562	1					
ANR	62407	Callee	xrandr_add_and_set		61562	0					
ANR	62408	Identifier	xrandr_add_and_set		61562	0					
ANR	62409	ArgumentList	x11		61562	1					
ANR	62410	Argument	x11		61562	0					
ANR	62411	Identifier	x11		61562	0					
ANR	62412	Argument	i		61562	1					
ANR	62413	Identifier	i		61562	0					
ANR	62414	Argument	x		61562	2					
ANR	62415	Identifier	x		61562	0					
ANR	62416	Argument	y		61562	3					
ANR	62417	Identifier	y		61562	0					
ANR	62418	Argument	width		61562	4					
ANR	62419	Identifier	width		61562	0					
ANR	62420	Argument	height		61562	5					
ANR	62421	Identifier	height		61562	0					
ANR	62422	EqualityExpression	enabled_monitors ( mon_config ) == 1		61562	1		==			
ANR	62423	CallExpression	enabled_monitors ( mon_config )		61562	0					
ANR	62424	Callee	enabled_monitors		61562	0					
ANR	62425	Identifier	enabled_monitors		61562	0					
ANR	62426	ArgumentList	mon_config		61562	1					
ANR	62427	Argument	mon_config		61562	0					
ANR	62428	Identifier	mon_config		61562	0					
ANR	62429	PrimaryExpression	1		61562	1					
ANR	62430	CompoundStatement		143:51:5273:5273	61562	1					
ANR	62431	ExpressionStatement	"set_screen_to_best_size ( x11 , width , height , & primary_w , & primary_h )"	869:12:27969:28072	61562	0	True				
ANR	62432	CallExpression	"set_screen_to_best_size ( x11 , width , height , & primary_w , & primary_h )"		61562	0					
ANR	62433	Callee	set_screen_to_best_size		61562	0					
ANR	62434	Identifier	set_screen_to_best_size		61562	0					
ANR	62435	ArgumentList	x11		61562	1					
ANR	62436	Argument	x11		61562	0					
ANR	62437	Identifier	x11		61562	0					
ANR	62438	Argument	width		61562	1					
ANR	62439	Identifier	width		61562	0					
ANR	62440	Argument	height		61562	2					
ANR	62441	Identifier	height		61562	0					
ANR	62442	Argument	& primary_w		61562	3					
ANR	62443	UnaryOperationExpression	& primary_w		61562	0					
ANR	62444	UnaryOperator	&		61562	0					
ANR	62445	Identifier	primary_w		61562	1					
ANR	62446	Argument	& primary_h		61562	4					
ANR	62447	UnaryOperationExpression	& primary_h		61562	0					
ANR	62448	UnaryOperator	&		61562	0					
ANR	62449	Identifier	primary_h		61562	1					
ANR	62450	BreakStatement	break ;	871:12:28086:28091	61562	1	True				
ANR	62451	ExpressionStatement	"update_randr_res ( x11 , x11 -> randr . num_monitors != enabled_monitors ( mon_config ) )"	875:4:28114:28200	61562	26	True				
ANR	62452	CallExpression	"update_randr_res ( x11 , x11 -> randr . num_monitors != enabled_monitors ( mon_config ) )"		61562	0					
ANR	62453	Callee	update_randr_res		61562	0					
ANR	62454	Identifier	update_randr_res		61562	0					
ANR	62455	ArgumentList	x11		61562	1					
ANR	62456	Argument	x11		61562	0					
ANR	62457	Identifier	x11		61562	0					
ANR	62458	Argument	x11 -> randr . num_monitors != enabled_monitors ( mon_config )		61562	1					
ANR	62459	EqualityExpression	x11 -> randr . num_monitors != enabled_monitors ( mon_config )		61562	0		!=			
ANR	62460	MemberAccess	x11 -> randr . num_monitors		61562	0					
ANR	62461	PtrMemberAccess	x11 -> randr		61562	0					
ANR	62462	Identifier	x11		61562	0					
ANR	62463	Identifier	randr		61562	1					
ANR	62464	Identifier	num_monitors		61562	1					
ANR	62465	CallExpression	enabled_monitors ( mon_config )		61562	1					
ANR	62466	Callee	enabled_monitors		61562	0					
ANR	62467	Identifier	enabled_monitors		61562	0					
ANR	62468	ArgumentList	mon_config		61562	1					
ANR	62469	Argument	mon_config		61562	0					
ANR	62470	Identifier	mon_config		61562	0					
ANR	62471	ExpressionStatement	x11 -> width [ 0 ] = primary_w	877:4:28206:28231	61562	27	True				
ANR	62472	AssignmentExpression	x11 -> width [ 0 ] = primary_w		61562	0		=			
ANR	62473	ArrayIndexing	x11 -> width [ 0 ]		61562	0					
ANR	62474	PtrMemberAccess	x11 -> width		61562	0					
ANR	62475	Identifier	x11		61562	0					
ANR	62476	Identifier	width		61562	1					
ANR	62477	PrimaryExpression	0		61562	1					
ANR	62478	Identifier	primary_w		61562	1					
ANR	62479	ExpressionStatement	x11 -> height [ 0 ] = primary_h	878:4:28237:28263	61562	28	True				
ANR	62480	AssignmentExpression	x11 -> height [ 0 ] = primary_h		61562	0		=			
ANR	62481	ArrayIndexing	x11 -> height [ 0 ]		61562	0					
ANR	62482	PtrMemberAccess	x11 -> height		61562	0					
ANR	62483	Identifier	x11		61562	0					
ANR	62484	Identifier	height		61562	1					
ANR	62485	PrimaryExpression	0		61562	1					
ANR	62486	Identifier	primary_h		61562	1					
ANR	62487	ExpressionStatement	x11 -> dont_send_guest_xorg_res = 1	881:4:28350:28383	61562	29	True				
ANR	62488	AssignmentExpression	x11 -> dont_send_guest_xorg_res = 1		61562	0		=			
ANR	62489	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		61562	0					
ANR	62490	Identifier	x11		61562	0					
ANR	62491	Identifier	dont_send_guest_xorg_res		61562	1					
ANR	62492	PrimaryExpression	1		61562	1					
ANR	62493	ExpressionStatement	vdagent_x11_do_read ( x11 )	882:4:28389:28413	61562	30	True				
ANR	62494	CallExpression	vdagent_x11_do_read ( x11 )		61562	0					
ANR	62495	Callee	vdagent_x11_do_read		61562	0					
ANR	62496	Identifier	vdagent_x11_do_read		61562	0					
ANR	62497	ArgumentList	x11		61562	1					
ANR	62498	Argument	x11		61562	0					
ANR	62499	Identifier	x11		61562	0					
ANR	62500	ExpressionStatement	x11 -> dont_send_guest_xorg_res = 0	883:4:28419:28452	61562	31	True				
ANR	62501	AssignmentExpression	x11 -> dont_send_guest_xorg_res = 0		61562	0		=			
ANR	62502	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		61562	0					
ANR	62503	Identifier	x11		61562	0					
ANR	62504	Identifier	dont_send_guest_xorg_res		61562	1					
ANR	62505	PrimaryExpression	0		61562	1					
ANR	62506	Label	exit :	885:0:28455:28459	61562	32	True				
ANR	62507	Identifier	exit		61562	0					
ANR	62508	ExpressionStatement	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 0 )"	886:4:28465:28511	61562	33	True				
ANR	62509	CallExpression	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 0 )"		61562	0					
ANR	62510	Callee	vdagent_x11_send_daemon_guest_xorg_res		61562	0					
ANR	62511	Identifier	vdagent_x11_send_daemon_guest_xorg_res		61562	0					
ANR	62512	ArgumentList	x11		61562	1					
ANR	62513	Argument	x11		61562	0					
ANR	62514	Identifier	x11		61562	0					
ANR	62515	Argument	0		61562	1					
ANR	62516	PrimaryExpression	0		61562	0					
ANR	62517	ExpressionStatement	vdagent_x11_do_read ( x11 )	889:4:28580:28604	61562	34	True				
ANR	62518	CallExpression	vdagent_x11_do_read ( x11 )		61562	0					
ANR	62519	Callee	vdagent_x11_do_read		61562	0					
ANR	62520	Identifier	vdagent_x11_do_read		61562	0					
ANR	62521	ArgumentList	x11		61562	1					
ANR	62522	Argument	x11		61562	0					
ANR	62523	Identifier	x11		61562	0					
ANR	62524	ExpressionStatement	free ( curr )	890:4:28610:28620	61562	35	True				
ANR	62525	CallExpression	free ( curr )		61562	0					
ANR	62526	Callee	free		61562	0					
ANR	62527	Identifier	free		61562	0					
ANR	62528	ArgumentList	curr		61562	1					
ANR	62529	Argument	curr		61562	0					
ANR	62530	Identifier	curr		61562	0					
ANR	62531	ReturnType	void		61562	1					
ANR	62532	Identifier	vdagent_x11_set_monitor_config		61562	2					
ANR	62533	ParameterList	"struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int fallback"		61562	3					
ANR	62534	Parameter	struct vdagent_x11 * x11	723:36:22535:22557	61562	0	True				
ANR	62535	ParameterType	struct vdagent_x11 *		61562	0					
ANR	62536	Identifier	x11		61562	1					
ANR	62537	Parameter	VDAgentMonitorsConfig * mon_config	724:36:22596:22628	61562	1	True				
ANR	62538	ParameterType	VDAgentMonitorsConfig *		61562	0					
ANR	62539	Identifier	mon_config		61562	1					
ANR	62540	Parameter	int fallback	725:36:22667:22678	61562	2	True				
ANR	62541	ParameterType	int		61562	0					
ANR	62542	Identifier	fallback		61562	1					
ANR	62543	CFGEntryNode	ENTRY		61562		True				
ANR	62544	CFGExitNode	EXIT		61562		True				
ANR	62545	Symbol	x11 -> randr . failed_conf		61562						
ANR	62546	Symbol	real_num_of_monitors		61562						
ANR	62547	Symbol	curr -> monitors		61562						
ANR	62548	Symbol	x11 -> dont_send_guest_xorg_res		61562						
ANR	62549	Symbol	LOG_WARNING		61562						
ANR	62550	Symbol	x11 -> root_window		61562						
ANR	62551	Symbol	monitor_enabled		61562						
ANR	62552	Symbol	MONITOR_SIZE_COUNT		61562						
ANR	62553	Symbol	mon_config -> monitors		61562						
ANR	62554	Symbol	curr -> monitors [ i ] . x		61562						
ANR	62555	Symbol	* mon_config		61562						
ANR	62556	Symbol	mon_config -> num_of_monitors		61562						
ANR	62557	Symbol	curr -> monitors [ i ] . y		61562						
ANR	62558	Symbol	LOG_ERR		61562						
ANR	62559	Symbol	g_build_filename		61562						
ANR	62560	Symbol	curr -> num_of_monitors		61562						
ANR	62561	Symbol	x11		61562						
ANR	62562	Symbol	curr		61562						
ANR	62563	Symbol	get_current_mon_config		61562						
ANR	62564	Symbol	x11 -> height		61562						
ANR	62565	Symbol	height		61562						
ANR	62566	Symbol	* * mon_config		61562						
ANR	62567	Symbol	NULL		61562						
ANR	62568	Symbol	& primary_h		61562						
ANR	62569	Symbol	curr -> monitors [ i ] . height		61562						
ANR	62570	Symbol	xrandr_add_and_set		61562						
ANR	62571	Symbol	* x11 -> randr		61562						
ANR	62572	Symbol	* curr -> monitors		61562						
ANR	62573	Symbol	* mon_config -> monitors		61562						
ANR	62574	Symbol	x11 -> display		61562						
ANR	62575	Symbol	mon_config		61562						
ANR	62576	Symbol	vdagent_x11_restore_error_handler		61562						
ANR	62577	Symbol	enabled_monitors		61562						
ANR	62578	Symbol	x11 -> randr . res		61562						
ANR	62579	Symbol	g_get_user_config_dir		61562						
ANR	62580	Symbol	fallback		61562						
ANR	62581	Symbol	* x11		61562						
ANR	62582	Symbol	error_handler		61562						
ANR	62583	Symbol	x11 -> width		61562						
ANR	62584	Symbol	x11 -> randr		61562						
ANR	62585	Symbol	* * curr		61562						
ANR	62586	Symbol	x11 -> randr . num_monitors		61562						
ANR	62587	Symbol	* x11 -> width		61562						
ANR	62588	Symbol	primary_w		61562						
ANR	62589	Symbol	same_monitor_configs		61562						
ANR	62590	Symbol	* x11 -> randr . res		61562						
ANR	62591	Symbol	curr -> monitors [ i ] . width		61562						
ANR	62592	Symbol	mon_config -> monitors [ i ] . x		61562						
ANR	62593	Symbol	* x11 -> height		61562						
ANR	62594	Symbol	mon_config -> monitors [ i ] . y		61562						
ANR	62595	Symbol	x11 -> randr . res -> noutput		61562						
ANR	62596	Symbol	& primary_w		61562						
ANR	62597	Symbol	config_size		61562						
ANR	62598	Symbol	* x11 -> root_window		61562						
ANR	62599	Symbol	primary_h		61562						
ANR	62600	Symbol	dpi		61562						
ANR	62601	Symbol	malloc		61562						
ANR	62602	Symbol	x11 -> debug		61562						
ANR	62603	Symbol	i		61562						
ANR	62604	Symbol	mon_config -> monitors [ i ] . width		61562						
ANR	62605	Symbol	width_mm		61562						
ANR	62606	Symbol	* * x11		61562						
ANR	62607	Symbol	* i		61562						
ANR	62608	Symbol	* curr		61562						
ANR	62609	Symbol	mon_config -> monitors [ i ] . height		61562						
ANR	62610	Symbol	MM_PER_INCH		61562						
ANR	62611	Symbol	width		61562						
ANR	62612	Symbol	x		61562						
ANR	62613	Symbol	y		61562						
ANR	62614	Symbol	LOG_DEBUG		61562						
ANR	62615	Symbol	x11 -> has_xrandr		61562						
ANR	62616	Symbol	height_mm		61562						
ANR	62617	Symbol	config		61562						
ANR	62618	Function	vdagent_x11_send_daemon_guest_xorg_res	893:0:28625:31682							
ANR	62619	FunctionDef	"vdagent_x11_send_daemon_guest_xorg_res (struct vdagent_x11 * x11 , int update)"		62618	0					
ANR	62620	CompoundStatement		894:0:28706:31682	62618	0					
ANR	62621	IdentifierDeclStatement	struct vdagentd_guest_xorg_resolution * res = NULL ;	895:4:28712:28761	62618	0	True				
ANR	62622	IdentifierDecl	* res = NULL		62618	0					
ANR	62623	IdentifierDeclType	struct vdagentd_guest_xorg_resolution *		62618	0					
ANR	62624	Identifier	res		62618	1					
ANR	62625	AssignmentExpression	* res = NULL		62618	2		=			
ANR	62626	Identifier	NULL		62618	0					
ANR	62627	Identifier	NULL		62618	1					
ANR	62628	IdentifierDeclStatement	"int i , width = 0 , height = 0 , screen_count = 0 ;"	896:4:28767:28813	62618	1	True				
ANR	62629	IdentifierDecl	i		62618	0					
ANR	62630	IdentifierDeclType	int		62618	0					
ANR	62631	Identifier	i		62618	1					
ANR	62632	IdentifierDecl	width = 0		62618	1					
ANR	62633	IdentifierDeclType	int		62618	0					
ANR	62634	Identifier	width		62618	1					
ANR	62635	AssignmentExpression	width = 0		62618	2		=			
ANR	62636	Identifier	width		62618	0					
ANR	62637	PrimaryExpression	0		62618	1					
ANR	62638	IdentifierDecl	height = 0		62618	2					
ANR	62639	IdentifierDeclType	int		62618	0					
ANR	62640	Identifier	height		62618	1					
ANR	62641	AssignmentExpression	height = 0		62618	2		=			
ANR	62642	Identifier	height		62618	0					
ANR	62643	PrimaryExpression	0		62618	1					
ANR	62644	IdentifierDecl	screen_count = 0		62618	3					
ANR	62645	IdentifierDeclType	int		62618	0					
ANR	62646	Identifier	screen_count		62618	1					
ANR	62647	AssignmentExpression	screen_count = 0		62618	2		=			
ANR	62648	Identifier	screen_count		62618	0					
ANR	62649	PrimaryExpression	0		62618	1					
ANR	62650	IfStatement	if ( x11 -> has_xrandr )		62618	2					
ANR	62651	Condition	x11 -> has_xrandr	898:8:28824:28838	62618	0	True				
ANR	62652	PtrMemberAccess	x11 -> has_xrandr		62618	0					
ANR	62653	Identifier	x11		62618	0					
ANR	62654	Identifier	has_xrandr		62618	1					
ANR	62655	CompoundStatement		6:8:144:171	62618	1					
ANR	62656	IdentifierDeclStatement	VDAgentMonitorsConfig * curr ;	899:8:28851:28878	62618	0	True				
ANR	62657	IdentifierDecl	* curr		62618	0					
ANR	62658	IdentifierDeclType	VDAgentMonitorsConfig *		62618	0					
ANR	62659	Identifier	curr		62618	1					
ANR	62660	IfStatement	if ( update )		62618	1					
ANR	62661	Condition	update	901:12:28893:28898	62618	0	True				
ANR	62662	Identifier	update		62618	0					
ANR	62663	ExpressionStatement	"update_randr_res ( x11 , 0 )"	902:12:28913:28937	62618	1	True				
ANR	62664	CallExpression	"update_randr_res ( x11 , 0 )"		62618	0					
ANR	62665	Callee	update_randr_res		62618	0					
ANR	62666	Identifier	update_randr_res		62618	0					
ANR	62667	ArgumentList	x11		62618	1					
ANR	62668	Argument	x11		62618	0					
ANR	62669	Identifier	x11		62618	0					
ANR	62670	Argument	0		62618	1					
ANR	62671	PrimaryExpression	0		62618	0					
ANR	62672	ExpressionStatement	curr = get_current_mon_config ( x11 )	904:8:28948:28982	62618	2	True				
ANR	62673	AssignmentExpression	curr = get_current_mon_config ( x11 )		62618	0		=			
ANR	62674	Identifier	curr		62618	0					
ANR	62675	CallExpression	get_current_mon_config ( x11 )		62618	1					
ANR	62676	Callee	get_current_mon_config		62618	0					
ANR	62677	Identifier	get_current_mon_config		62618	0					
ANR	62678	ArgumentList	x11		62618	1					
ANR	62679	Argument	x11		62618	0					
ANR	62680	Identifier	x11		62618	0					
ANR	62681	IfStatement	if ( ! curr )		62618	3					
ANR	62682	Condition	! curr	905:12:28996:29000	62618	0	True				
ANR	62683	UnaryOperationExpression	! curr		62618	0					
ANR	62684	UnaryOperator	!		62618	0					
ANR	62685	Identifier	curr		62618	1					
ANR	62686	GotoStatement	goto no_info ;	906:12:29015:29027	62618	1	True				
ANR	62687	Identifier	no_info		62618	0					
ANR	62688	ExpressionStatement	screen_count = curr -> num_of_monitors	908:8:29038:29074	62618	4	True				
ANR	62689	AssignmentExpression	screen_count = curr -> num_of_monitors		62618	0		=			
ANR	62690	Identifier	screen_count		62618	0					
ANR	62691	PtrMemberAccess	curr -> num_of_monitors		62618	1					
ANR	62692	Identifier	curr		62618	0					
ANR	62693	Identifier	num_of_monitors		62618	1					
ANR	62694	ExpressionStatement	res = malloc ( screen_count * sizeof ( * res ) )	909:8:29084:29125	62618	5	True				
ANR	62695	AssignmentExpression	res = malloc ( screen_count * sizeof ( * res ) )		62618	0		=			
ANR	62696	Identifier	res		62618	0					
ANR	62697	CallExpression	malloc ( screen_count * sizeof ( * res ) )		62618	1					
ANR	62698	Callee	malloc		62618	0					
ANR	62699	Identifier	malloc		62618	0					
ANR	62700	ArgumentList	screen_count * sizeof ( * res )		62618	1					
ANR	62701	Argument	screen_count * sizeof ( * res )		62618	0					
ANR	62702	MultiplicativeExpression	screen_count * sizeof ( * res )		62618	0		*			
ANR	62703	Identifier	screen_count		62618	0					
ANR	62704	SizeofExpression	sizeof ( * res )		62618	1					
ANR	62705	Sizeof	sizeof		62618	0					
ANR	62706	UnaryOperationExpression	* res		62618	1					
ANR	62707	UnaryOperator	*		62618	0					
ANR	62708	Identifier	res		62618	1					
ANR	62709	IfStatement	if ( ! res )		62618	6					
ANR	62710	Condition	! res	910:12:29139:29142	62618	0	True				
ANR	62711	UnaryOperationExpression	! res		62618	0					
ANR	62712	UnaryOperator	!		62618	0					
ANR	62713	Identifier	res		62618	1					
ANR	62714	CompoundStatement		17:18:438:438	62618	1					
ANR	62715	ExpressionStatement	free ( curr )	911:12:29159:29169	62618	0	True				
ANR	62716	CallExpression	free ( curr )		62618	0					
ANR	62717	Callee	free		62618	0					
ANR	62718	Identifier	free		62618	0					
ANR	62719	ArgumentList	curr		62618	1					
ANR	62720	Argument	curr		62618	0					
ANR	62721	Identifier	curr		62618	0					
ANR	62722	GotoStatement	goto no_mem ;	912:12:29183:29194	62618	1	True				
ANR	62723	Identifier	no_mem		62618	0					
ANR	62724	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		62618	7					
ANR	62725	ForInit	i = 0 ;	915:13:29220:29225	62618	0	True				
ANR	62726	AssignmentExpression	i = 0		62618	0		=			
ANR	62727	Identifier	i		62618	0					
ANR	62728	PrimaryExpression	0		62618	1					
ANR	62729	Condition	i < screen_count	915:20:29227:29242	62618	1	True				
ANR	62730	RelationalExpression	i < screen_count		62618	0		<			
ANR	62731	Identifier	i		62618	0					
ANR	62732	Identifier	screen_count		62618	1					
ANR	62733	PostIncDecOperationExpression	i ++	915:38:29245:29247	62618	2	True				
ANR	62734	Identifier	i		62618	0					
ANR	62735	IncDec	++		62618	1					
ANR	62736	CompoundStatement		22:43:543:543	62618	3					
ANR	62737	ExpressionStatement	res [ i ] . width = curr -> monitors [ i ] . width	916:12:29264:29303	62618	0	True				
ANR	62738	AssignmentExpression	res [ i ] . width = curr -> monitors [ i ] . width		62618	0		=			
ANR	62739	MemberAccess	res [ i ] . width		62618	0					
ANR	62740	ArrayIndexing	res [ i ]		62618	0					
ANR	62741	Identifier	res		62618	0					
ANR	62742	Identifier	i		62618	1					
ANR	62743	Identifier	width		62618	1					
ANR	62744	MemberAccess	curr -> monitors [ i ] . width		62618	1					
ANR	62745	ArrayIndexing	curr -> monitors [ i ]		62618	0					
ANR	62746	PtrMemberAccess	curr -> monitors		62618	0					
ANR	62747	Identifier	curr		62618	0					
ANR	62748	Identifier	monitors		62618	1					
ANR	62749	Identifier	i		62618	1					
ANR	62750	Identifier	width		62618	1					
ANR	62751	ExpressionStatement	res [ i ] . height = curr -> monitors [ i ] . height	917:12:29317:29357	62618	1	True				
ANR	62752	AssignmentExpression	res [ i ] . height = curr -> monitors [ i ] . height		62618	0		=			
ANR	62753	MemberAccess	res [ i ] . height		62618	0					
ANR	62754	ArrayIndexing	res [ i ]		62618	0					
ANR	62755	Identifier	res		62618	0					
ANR	62756	Identifier	i		62618	1					
ANR	62757	Identifier	height		62618	1					
ANR	62758	MemberAccess	curr -> monitors [ i ] . height		62618	1					
ANR	62759	ArrayIndexing	curr -> monitors [ i ]		62618	0					
ANR	62760	PtrMemberAccess	curr -> monitors		62618	0					
ANR	62761	Identifier	curr		62618	0					
ANR	62762	Identifier	monitors		62618	1					
ANR	62763	Identifier	i		62618	1					
ANR	62764	Identifier	height		62618	1					
ANR	62765	ExpressionStatement	res [ i ] . x = curr -> monitors [ i ] . x	918:12:29371:29401	62618	2	True				
ANR	62766	AssignmentExpression	res [ i ] . x = curr -> monitors [ i ] . x		62618	0		=			
ANR	62767	MemberAccess	res [ i ] . x		62618	0					
ANR	62768	ArrayIndexing	res [ i ]		62618	0					
ANR	62769	Identifier	res		62618	0					
ANR	62770	Identifier	i		62618	1					
ANR	62771	Identifier	x		62618	1					
ANR	62772	MemberAccess	curr -> monitors [ i ] . x		62618	1					
ANR	62773	ArrayIndexing	curr -> monitors [ i ]		62618	0					
ANR	62774	PtrMemberAccess	curr -> monitors		62618	0					
ANR	62775	Identifier	curr		62618	0					
ANR	62776	Identifier	monitors		62618	1					
ANR	62777	Identifier	i		62618	1					
ANR	62778	Identifier	x		62618	1					
ANR	62779	ExpressionStatement	res [ i ] . y = curr -> monitors [ i ] . y	919:12:29415:29445	62618	3	True				
ANR	62780	AssignmentExpression	res [ i ] . y = curr -> monitors [ i ] . y		62618	0		=			
ANR	62781	MemberAccess	res [ i ] . y		62618	0					
ANR	62782	ArrayIndexing	res [ i ]		62618	0					
ANR	62783	Identifier	res		62618	0					
ANR	62784	Identifier	i		62618	1					
ANR	62785	Identifier	y		62618	1					
ANR	62786	MemberAccess	curr -> monitors [ i ] . y		62618	1					
ANR	62787	ArrayIndexing	curr -> monitors [ i ]		62618	0					
ANR	62788	PtrMemberAccess	curr -> monitors		62618	0					
ANR	62789	Identifier	curr		62618	0					
ANR	62790	Identifier	monitors		62618	1					
ANR	62791	Identifier	i		62618	1					
ANR	62792	Identifier	y		62618	1					
ANR	62793	ExpressionStatement	free ( curr )	921:8:29465:29475	62618	8	True				
ANR	62794	CallExpression	free ( curr )		62618	0					
ANR	62795	Callee	free		62618	0					
ANR	62796	Identifier	free		62618	0					
ANR	62797	ArgumentList	curr		62618	1					
ANR	62798	Argument	curr		62618	0					
ANR	62799	Identifier	curr		62618	0					
ANR	62800	ExpressionStatement	width = x11 -> width [ 0 ]	922:8:29485:29507	62618	9	True				
ANR	62801	AssignmentExpression	width = x11 -> width [ 0 ]		62618	0		=			
ANR	62802	Identifier	width		62618	0					
ANR	62803	ArrayIndexing	x11 -> width [ 0 ]		62618	1					
ANR	62804	PtrMemberAccess	x11 -> width		62618	0					
ANR	62805	Identifier	x11		62618	0					
ANR	62806	Identifier	width		62618	1					
ANR	62807	PrimaryExpression	0		62618	1					
ANR	62808	ExpressionStatement	height = x11 -> height [ 0 ]	923:8:29517:29540	62618	10	True				
ANR	62809	AssignmentExpression	height = x11 -> height [ 0 ]		62618	0		=			
ANR	62810	Identifier	height		62618	0					
ANR	62811	ArrayIndexing	x11 -> height [ 0 ]		62618	1					
ANR	62812	PtrMemberAccess	x11 -> height		62618	0					
ANR	62813	Identifier	x11		62618	0					
ANR	62814	Identifier	height		62618	1					
ANR	62815	PrimaryExpression	0		62618	1					
ANR	62816	ElseStatement	else		62618	0					
ANR	62817	IfStatement	if ( x11 -> has_xinerama )		62618	0					
ANR	62818	Condition	x11 -> has_xinerama	924:15:29557:29573	62618	0	True				
ANR	62819	PtrMemberAccess	x11 -> has_xinerama		62618	0					
ANR	62820	Identifier	x11		62618	0					
ANR	62821	Identifier	has_xinerama		62618	1					
ANR	62822	CompoundStatement		32:8:879:917	62618	1					
ANR	62823	IdentifierDeclStatement	XineramaScreenInfo * screen_info = NULL ;	925:8:29586:29624	62618	0	True				
ANR	62824	IdentifierDecl	* screen_info = NULL		62618	0					
ANR	62825	IdentifierDeclType	XineramaScreenInfo *		62618	0					
ANR	62826	Identifier	screen_info		62618	1					
ANR	62827	AssignmentExpression	* screen_info = NULL		62618	2		=			
ANR	62828	Identifier	NULL		62618	0					
ANR	62829	Identifier	NULL		62618	1					
ANR	62830	ExpressionStatement	"screen_info = XineramaQueryScreens ( x11 -> display , & screen_count )"	927:8:29635:29698	62618	1	True				
ANR	62831	AssignmentExpression	"screen_info = XineramaQueryScreens ( x11 -> display , & screen_count )"		62618	0		=			
ANR	62832	Identifier	screen_info		62618	0					
ANR	62833	CallExpression	"XineramaQueryScreens ( x11 -> display , & screen_count )"		62618	1					
ANR	62834	Callee	XineramaQueryScreens		62618	0					
ANR	62835	Identifier	XineramaQueryScreens		62618	0					
ANR	62836	ArgumentList	x11 -> display		62618	1					
ANR	62837	Argument	x11 -> display		62618	0					
ANR	62838	PtrMemberAccess	x11 -> display		62618	0					
ANR	62839	Identifier	x11		62618	0					
ANR	62840	Identifier	display		62618	1					
ANR	62841	Argument	& screen_count		62618	1					
ANR	62842	UnaryOperationExpression	& screen_count		62618	0					
ANR	62843	UnaryOperator	&		62618	0					
ANR	62844	Identifier	screen_count		62618	1					
ANR	62845	IfStatement	if ( ! screen_info )		62618	2					
ANR	62846	Condition	! screen_info	928:12:29712:29723	62618	0	True				
ANR	62847	UnaryOperationExpression	! screen_info		62618	0					
ANR	62848	UnaryOperator	!		62618	0					
ANR	62849	Identifier	screen_info		62618	1					
ANR	62850	GotoStatement	goto no_info ;	929:12:29738:29750	62618	1	True				
ANR	62851	Identifier	no_info		62618	0					
ANR	62852	ExpressionStatement	res = malloc ( screen_count * sizeof ( * res ) )	930:8:29760:29801	62618	3	True				
ANR	62853	AssignmentExpression	res = malloc ( screen_count * sizeof ( * res ) )		62618	0		=			
ANR	62854	Identifier	res		62618	0					
ANR	62855	CallExpression	malloc ( screen_count * sizeof ( * res ) )		62618	1					
ANR	62856	Callee	malloc		62618	0					
ANR	62857	Identifier	malloc		62618	0					
ANR	62858	ArgumentList	screen_count * sizeof ( * res )		62618	1					
ANR	62859	Argument	screen_count * sizeof ( * res )		62618	0					
ANR	62860	MultiplicativeExpression	screen_count * sizeof ( * res )		62618	0		*			
ANR	62861	Identifier	screen_count		62618	0					
ANR	62862	SizeofExpression	sizeof ( * res )		62618	1					
ANR	62863	Sizeof	sizeof		62618	0					
ANR	62864	UnaryOperationExpression	* res		62618	1					
ANR	62865	UnaryOperator	*		62618	0					
ANR	62866	Identifier	res		62618	1					
ANR	62867	IfStatement	if ( ! res )		62618	4					
ANR	62868	Condition	! res	931:12:29815:29818	62618	0	True				
ANR	62869	UnaryOperationExpression	! res		62618	0					
ANR	62870	UnaryOperator	!		62618	0					
ANR	62871	Identifier	res		62618	1					
ANR	62872	CompoundStatement		38:18:1114:1114	62618	1					
ANR	62873	ExpressionStatement	XFree ( screen_info )	932:12:29835:29853	62618	0	True				
ANR	62874	CallExpression	XFree ( screen_info )		62618	0					
ANR	62875	Callee	XFree		62618	0					
ANR	62876	Identifier	XFree		62618	0					
ANR	62877	ArgumentList	screen_info		62618	1					
ANR	62878	Argument	screen_info		62618	0					
ANR	62879	Identifier	screen_info		62618	0					
ANR	62880	GotoStatement	goto no_mem ;	933:12:29867:29878	62618	1	True				
ANR	62881	Identifier	no_mem		62618	0					
ANR	62882	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		62618	5					
ANR	62883	ForInit	i = 0 ;	935:13:29903:29908	62618	0	True				
ANR	62884	AssignmentExpression	i = 0		62618	0		=			
ANR	62885	Identifier	i		62618	0					
ANR	62886	PrimaryExpression	0		62618	1					
ANR	62887	Condition	i < screen_count	935:20:29910:29925	62618	1	True				
ANR	62888	RelationalExpression	i < screen_count		62618	0		<			
ANR	62889	Identifier	i		62618	0					
ANR	62890	Identifier	screen_count		62618	1					
ANR	62891	PostIncDecOperationExpression	i ++	935:38:29928:29930	62618	2	True				
ANR	62892	Identifier	i		62618	0					
ANR	62893	IncDec	++		62618	1					
ANR	62894	CompoundStatement		42:43:1226:1226	62618	3					
ANR	62895	IfStatement	if ( screen_info [ i ] . screen_number >= screen_count )		62618	0					
ANR	62896	Condition	screen_info [ i ] . screen_number >= screen_count	936:16:29951:29994	62618	0	True				
ANR	62897	RelationalExpression	screen_info [ i ] . screen_number >= screen_count		62618	0		>=			
ANR	62898	MemberAccess	screen_info [ i ] . screen_number		62618	0					
ANR	62899	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62900	Identifier	screen_info		62618	0					
ANR	62901	Identifier	i		62618	1					
ANR	62902	Identifier	screen_number		62618	1					
ANR	62903	Identifier	screen_count		62618	1					
ANR	62904	CompoundStatement		43:62:1290:1290	62618	1					
ANR	62905	ExpressionStatement	"syslog ( LOG_ERR , ""Invalid screen number in xinerama screen info (%d >= %d)"" , screen_info [ i ] . screen_number , screen_count )"	937:16:30015:30157	62618	0	True				
ANR	62906	CallExpression	"syslog ( LOG_ERR , ""Invalid screen number in xinerama screen info (%d >= %d)"" , screen_info [ i ] . screen_number , screen_count )"		62618	0					
ANR	62907	Callee	syslog		62618	0					
ANR	62908	Identifier	syslog		62618	0					
ANR	62909	ArgumentList	LOG_ERR		62618	1					
ANR	62910	Argument	LOG_ERR		62618	0					
ANR	62911	Identifier	LOG_ERR		62618	0					
ANR	62912	Argument	"""Invalid screen number in xinerama screen info (%d >= %d)"""		62618	1					
ANR	62913	PrimaryExpression	"""Invalid screen number in xinerama screen info (%d >= %d)"""		62618	0					
ANR	62914	Argument	screen_info [ i ] . screen_number		62618	2					
ANR	62915	MemberAccess	screen_info [ i ] . screen_number		62618	0					
ANR	62916	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62917	Identifier	screen_info		62618	0					
ANR	62918	Identifier	i		62618	1					
ANR	62919	Identifier	screen_number		62618	1					
ANR	62920	Argument	screen_count		62618	3					
ANR	62921	Identifier	screen_count		62618	0					
ANR	62922	ExpressionStatement	XFree ( screen_info )	939:16:30175:30193	62618	1	True				
ANR	62923	CallExpression	XFree ( screen_info )		62618	0					
ANR	62924	Callee	XFree		62618	0					
ANR	62925	Identifier	XFree		62618	0					
ANR	62926	ArgumentList	screen_info		62618	1					
ANR	62927	Argument	screen_info		62618	0					
ANR	62928	Identifier	screen_info		62618	0					
ANR	62929	ExpressionStatement	free ( res )	940:16:30211:30220	62618	2	True				
ANR	62930	CallExpression	free ( res )		62618	0					
ANR	62931	Callee	free		62618	0					
ANR	62932	Identifier	free		62618	0					
ANR	62933	ArgumentList	res		62618	1					
ANR	62934	Argument	res		62618	0					
ANR	62935	Identifier	res		62618	0					
ANR	62936	ReturnStatement	return ;	941:16:30238:30244	62618	3	True				
ANR	62937	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . width = screen_info [ i ] . width	943:12:30272:30334	62618	1	True				
ANR	62938	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . width = screen_info [ i ] . width		62618	0		=			
ANR	62939	MemberAccess	res [ screen_info [ i ] . screen_number ] . width		62618	0					
ANR	62940	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		62618	0					
ANR	62941	Identifier	res		62618	0					
ANR	62942	MemberAccess	screen_info [ i ] . screen_number		62618	1					
ANR	62943	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62944	Identifier	screen_info		62618	0					
ANR	62945	Identifier	i		62618	1					
ANR	62946	Identifier	screen_number		62618	1					
ANR	62947	Identifier	width		62618	1					
ANR	62948	MemberAccess	screen_info [ i ] . width		62618	1					
ANR	62949	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62950	Identifier	screen_info		62618	0					
ANR	62951	Identifier	i		62618	1					
ANR	62952	Identifier	width		62618	1					
ANR	62953	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . height = screen_info [ i ] . height	944:12:30348:30412	62618	2	True				
ANR	62954	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . height = screen_info [ i ] . height		62618	0		=			
ANR	62955	MemberAccess	res [ screen_info [ i ] . screen_number ] . height		62618	0					
ANR	62956	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		62618	0					
ANR	62957	Identifier	res		62618	0					
ANR	62958	MemberAccess	screen_info [ i ] . screen_number		62618	1					
ANR	62959	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62960	Identifier	screen_info		62618	0					
ANR	62961	Identifier	i		62618	1					
ANR	62962	Identifier	screen_number		62618	1					
ANR	62963	Identifier	height		62618	1					
ANR	62964	MemberAccess	screen_info [ i ] . height		62618	1					
ANR	62965	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62966	Identifier	screen_info		62618	0					
ANR	62967	Identifier	i		62618	1					
ANR	62968	Identifier	height		62618	1					
ANR	62969	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . x = screen_info [ i ] . x_org	945:12:30426:30484	62618	3	True				
ANR	62970	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . x = screen_info [ i ] . x_org		62618	0		=			
ANR	62971	MemberAccess	res [ screen_info [ i ] . screen_number ] . x		62618	0					
ANR	62972	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		62618	0					
ANR	62973	Identifier	res		62618	0					
ANR	62974	MemberAccess	screen_info [ i ] . screen_number		62618	1					
ANR	62975	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62976	Identifier	screen_info		62618	0					
ANR	62977	Identifier	i		62618	1					
ANR	62978	Identifier	screen_number		62618	1					
ANR	62979	Identifier	x		62618	1					
ANR	62980	MemberAccess	screen_info [ i ] . x_org		62618	1					
ANR	62981	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62982	Identifier	screen_info		62618	0					
ANR	62983	Identifier	i		62618	1					
ANR	62984	Identifier	x_org		62618	1					
ANR	62985	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . y = screen_info [ i ] . y_org	946:12:30498:30556	62618	4	True				
ANR	62986	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . y = screen_info [ i ] . y_org		62618	0		=			
ANR	62987	MemberAccess	res [ screen_info [ i ] . screen_number ] . y		62618	0					
ANR	62988	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		62618	0					
ANR	62989	Identifier	res		62618	0					
ANR	62990	MemberAccess	screen_info [ i ] . screen_number		62618	1					
ANR	62991	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62992	Identifier	screen_info		62618	0					
ANR	62993	Identifier	i		62618	1					
ANR	62994	Identifier	screen_number		62618	1					
ANR	62995	Identifier	y		62618	1					
ANR	62996	MemberAccess	screen_info [ i ] . y_org		62618	1					
ANR	62997	ArrayIndexing	screen_info [ i ]		62618	0					
ANR	62998	Identifier	screen_info		62618	0					
ANR	62999	Identifier	i		62618	1					
ANR	63000	Identifier	y_org		62618	1					
ANR	63001	ExpressionStatement	XFree ( screen_info )	948:8:30576:30594	62618	6	True				
ANR	63002	CallExpression	XFree ( screen_info )		62618	0					
ANR	63003	Callee	XFree		62618	0					
ANR	63004	Identifier	XFree		62618	0					
ANR	63005	ArgumentList	screen_info		62618	1					
ANR	63006	Argument	screen_info		62618	0					
ANR	63007	Identifier	screen_info		62618	0					
ANR	63008	ExpressionStatement	width = x11 -> width [ 0 ]	949:8:30604:30626	62618	7	True				
ANR	63009	AssignmentExpression	width = x11 -> width [ 0 ]		62618	0		=			
ANR	63010	Identifier	width		62618	0					
ANR	63011	ArrayIndexing	x11 -> width [ 0 ]		62618	1					
ANR	63012	PtrMemberAccess	x11 -> width		62618	0					
ANR	63013	Identifier	x11		62618	0					
ANR	63014	Identifier	width		62618	1					
ANR	63015	PrimaryExpression	0		62618	1					
ANR	63016	ExpressionStatement	height = x11 -> height [ 0 ]	950:8:30636:30659	62618	8	True				
ANR	63017	AssignmentExpression	height = x11 -> height [ 0 ]		62618	0		=			
ANR	63018	Identifier	height		62618	0					
ANR	63019	ArrayIndexing	x11 -> height [ 0 ]		62618	1					
ANR	63020	PtrMemberAccess	x11 -> height		62618	0					
ANR	63021	Identifier	x11		62618	0					
ANR	63022	Identifier	height		62618	1					
ANR	63023	PrimaryExpression	0		62618	1					
ANR	63024	ElseStatement	else		62618	0					
ANR	63025	CompoundStatement		58:11:1965:1965	62618	0					
ANR	63026	Label	no_info :	952:0:30674:30681	62618	0	True				
ANR	63027	Identifier	no_info		62618	0					
ANR	63028	ExpressionStatement	screen_count = x11 -> screen_count	953:8:30691:30723	62618	1	True				
ANR	63029	AssignmentExpression	screen_count = x11 -> screen_count		62618	0		=			
ANR	63030	Identifier	screen_count		62618	0					
ANR	63031	PtrMemberAccess	x11 -> screen_count		62618	1					
ANR	63032	Identifier	x11		62618	0					
ANR	63033	Identifier	screen_count		62618	1					
ANR	63034	ExpressionStatement	res = malloc ( screen_count * sizeof ( * res ) )	954:8:30733:30774	62618	2	True				
ANR	63035	AssignmentExpression	res = malloc ( screen_count * sizeof ( * res ) )		62618	0		=			
ANR	63036	Identifier	res		62618	0					
ANR	63037	CallExpression	malloc ( screen_count * sizeof ( * res ) )		62618	1					
ANR	63038	Callee	malloc		62618	0					
ANR	63039	Identifier	malloc		62618	0					
ANR	63040	ArgumentList	screen_count * sizeof ( * res )		62618	1					
ANR	63041	Argument	screen_count * sizeof ( * res )		62618	0					
ANR	63042	MultiplicativeExpression	screen_count * sizeof ( * res )		62618	0		*			
ANR	63043	Identifier	screen_count		62618	0					
ANR	63044	SizeofExpression	sizeof ( * res )		62618	1					
ANR	63045	Sizeof	sizeof		62618	0					
ANR	63046	UnaryOperationExpression	* res		62618	1					
ANR	63047	UnaryOperator	*		62618	0					
ANR	63048	Identifier	res		62618	1					
ANR	63049	IfStatement	if ( ! res )		62618	3					
ANR	63050	Condition	! res	955:12:30788:30791	62618	0	True				
ANR	63051	UnaryOperationExpression	! res		62618	0					
ANR	63052	UnaryOperator	!		62618	0					
ANR	63053	Identifier	res		62618	1					
ANR	63054	GotoStatement	goto no_mem ;	956:12:30806:30817	62618	1	True				
ANR	63055	Identifier	no_mem		62618	0					
ANR	63056	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		62618	4					
ANR	63057	ForInit	i = 0 ;	957:13:30832:30837	62618	0	True				
ANR	63058	AssignmentExpression	i = 0		62618	0		=			
ANR	63059	Identifier	i		62618	0					
ANR	63060	PrimaryExpression	0		62618	1					
ANR	63061	Condition	i < screen_count	957:20:30839:30854	62618	1	True				
ANR	63062	RelationalExpression	i < screen_count		62618	0		<			
ANR	63063	Identifier	i		62618	0					
ANR	63064	Identifier	screen_count		62618	1					
ANR	63065	PostIncDecOperationExpression	i ++	957:38:30857:30859	62618	2	True				
ANR	63066	Identifier	i		62618	0					
ANR	63067	IncDec	++		62618	1					
ANR	63068	CompoundStatement		64:43:2155:2155	62618	3					
ANR	63069	ExpressionStatement	res [ i ] . width = x11 -> width [ i ]	958:12:30876:30905	62618	0	True				
ANR	63070	AssignmentExpression	res [ i ] . width = x11 -> width [ i ]		62618	0		=			
ANR	63071	MemberAccess	res [ i ] . width		62618	0					
ANR	63072	ArrayIndexing	res [ i ]		62618	0					
ANR	63073	Identifier	res		62618	0					
ANR	63074	Identifier	i		62618	1					
ANR	63075	Identifier	width		62618	1					
ANR	63076	ArrayIndexing	x11 -> width [ i ]		62618	1					
ANR	63077	PtrMemberAccess	x11 -> width		62618	0					
ANR	63078	Identifier	x11		62618	0					
ANR	63079	Identifier	width		62618	1					
ANR	63080	Identifier	i		62618	1					
ANR	63081	ExpressionStatement	res [ i ] . height = x11 -> height [ i ]	959:12:30919:30949	62618	1	True				
ANR	63082	AssignmentExpression	res [ i ] . height = x11 -> height [ i ]		62618	0		=			
ANR	63083	MemberAccess	res [ i ] . height		62618	0					
ANR	63084	ArrayIndexing	res [ i ]		62618	0					
ANR	63085	Identifier	res		62618	0					
ANR	63086	Identifier	i		62618	1					
ANR	63087	Identifier	height		62618	1					
ANR	63088	ArrayIndexing	x11 -> height [ i ]		62618	1					
ANR	63089	PtrMemberAccess	x11 -> height		62618	0					
ANR	63090	Identifier	x11		62618	0					
ANR	63091	Identifier	height		62618	1					
ANR	63092	Identifier	i		62618	1					
ANR	63093	ExpressionStatement	res [ i ] . x = width	961:12:31032:31048	62618	2	True				
ANR	63094	AssignmentExpression	res [ i ] . x = width		62618	0		=			
ANR	63095	MemberAccess	res [ i ] . x		62618	0					
ANR	63096	ArrayIndexing	res [ i ]		62618	0					
ANR	63097	Identifier	res		62618	0					
ANR	63098	Identifier	i		62618	1					
ANR	63099	Identifier	x		62618	1					
ANR	63100	Identifier	width		62618	1					
ANR	63101	ExpressionStatement	res [ i ] . y = 0	962:12:31062:31074	62618	3	True				
ANR	63102	AssignmentExpression	res [ i ] . y = 0		62618	0		=			
ANR	63103	MemberAccess	res [ i ] . y		62618	0					
ANR	63104	ArrayIndexing	res [ i ]		62618	0					
ANR	63105	Identifier	res		62618	0					
ANR	63106	Identifier	i		62618	1					
ANR	63107	Identifier	y		62618	1					
ANR	63108	PrimaryExpression	0		62618	1					
ANR	63109	ExpressionStatement	width += x11 -> width [ i ]	963:12:31088:31110	62618	4	True				
ANR	63110	AssignmentExpression	width += x11 -> width [ i ]		62618	0		+=			
ANR	63111	Identifier	width		62618	0					
ANR	63112	ArrayIndexing	x11 -> width [ i ]		62618	1					
ANR	63113	PtrMemberAccess	x11 -> width		62618	0					
ANR	63114	Identifier	x11		62618	0					
ANR	63115	Identifier	width		62618	1					
ANR	63116	Identifier	i		62618	1					
ANR	63117	IfStatement	if ( x11 -> height [ i ] > height )		62618	5					
ANR	63118	Condition	x11 -> height [ i ] > height	964:16:31128:31150	62618	0	True				
ANR	63119	RelationalExpression	x11 -> height [ i ] > height		62618	0		>			
ANR	63120	ArrayIndexing	x11 -> height [ i ]		62618	0					
ANR	63121	PtrMemberAccess	x11 -> height		62618	0					
ANR	63122	Identifier	x11		62618	0					
ANR	63123	Identifier	height		62618	1					
ANR	63124	Identifier	i		62618	1					
ANR	63125	Identifier	height		62618	1					
ANR	63126	ExpressionStatement	height = x11 -> height [ i ]	965:16:31169:31192	62618	1	True				
ANR	63127	AssignmentExpression	height = x11 -> height [ i ]		62618	0		=			
ANR	63128	Identifier	height		62618	0					
ANR	63129	ArrayIndexing	x11 -> height [ i ]		62618	1					
ANR	63130	PtrMemberAccess	x11 -> height		62618	0					
ANR	63131	Identifier	x11		62618	0					
ANR	63132	Identifier	height		62618	1					
ANR	63133	Identifier	i		62618	1					
ANR	63134	IfStatement	if ( x11 -> debug )		62618	3					
ANR	63135	Condition	x11 -> debug	969:8:31219:31228	62618	0	True				
ANR	63136	PtrMemberAccess	x11 -> debug		62618	0					
ANR	63137	Identifier	x11		62618	0					
ANR	63138	Identifier	debug		62618	1					
ANR	63139	CompoundStatement		76:20:2524:2524	62618	1					
ANR	63140	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		62618	0					
ANR	63141	ForInit	i = 0 ;	970:13:31246:31251	62618	0	True				
ANR	63142	AssignmentExpression	i = 0		62618	0		=			
ANR	63143	Identifier	i		62618	0					
ANR	63144	PrimaryExpression	0		62618	1					
ANR	63145	Condition	i < screen_count	970:20:31253:31268	62618	1	True				
ANR	63146	RelationalExpression	i < screen_count		62618	0		<			
ANR	63147	Identifier	i		62618	0					
ANR	63148	Identifier	screen_count		62618	1					
ANR	63149	PostIncDecOperationExpression	i ++	970:38:31271:31273	62618	2	True				
ANR	63150	Identifier	i		62618	0					
ANR	63151	IncDec	++		62618	1					
ANR	63152	ExpressionStatement	"syslog ( LOG_DEBUG , ""Screen %d %dx%d%+d%+d"" , i , res [ i ] . width , res [ i ] . height , res [ i ] . x , res [ i ] . y )"	971:12:31288:31401	62618	3	True				
ANR	63153	CallExpression	"syslog ( LOG_DEBUG , ""Screen %d %dx%d%+d%+d"" , i , res [ i ] . width , res [ i ] . height , res [ i ] . x , res [ i ] . y )"		62618	0					
ANR	63154	Callee	syslog		62618	0					
ANR	63155	Identifier	syslog		62618	0					
ANR	63156	ArgumentList	LOG_DEBUG		62618	1					
ANR	63157	Argument	LOG_DEBUG		62618	0					
ANR	63158	Identifier	LOG_DEBUG		62618	0					
ANR	63159	Argument	"""Screen %d %dx%d%+d%+d"""		62618	1					
ANR	63160	PrimaryExpression	"""Screen %d %dx%d%+d%+d"""		62618	0					
ANR	63161	Argument	i		62618	2					
ANR	63162	Identifier	i		62618	0					
ANR	63163	Argument	res [ i ] . width		62618	3					
ANR	63164	MemberAccess	res [ i ] . width		62618	0					
ANR	63165	ArrayIndexing	res [ i ]		62618	0					
ANR	63166	Identifier	res		62618	0					
ANR	63167	Identifier	i		62618	1					
ANR	63168	Identifier	width		62618	1					
ANR	63169	Argument	res [ i ] . height		62618	4					
ANR	63170	MemberAccess	res [ i ] . height		62618	0					
ANR	63171	ArrayIndexing	res [ i ]		62618	0					
ANR	63172	Identifier	res		62618	0					
ANR	63173	Identifier	i		62618	1					
ANR	63174	Identifier	height		62618	1					
ANR	63175	Argument	res [ i ] . x		62618	5					
ANR	63176	MemberAccess	res [ i ] . x		62618	0					
ANR	63177	ArrayIndexing	res [ i ]		62618	0					
ANR	63178	Identifier	res		62618	0					
ANR	63179	Identifier	i		62618	1					
ANR	63180	Identifier	x		62618	1					
ANR	63181	Argument	res [ i ] . y		62618	6					
ANR	63182	MemberAccess	res [ i ] . y		62618	0					
ANR	63183	ArrayIndexing	res [ i ]		62618	0					
ANR	63184	Identifier	res		62618	0					
ANR	63185	Identifier	i		62618	1					
ANR	63186	Identifier	y		62618	1					
ANR	63187	ExpressionStatement	"udscs_write ( x11 -> vdagentd , VDAGENTD_GUEST_XORG_RESOLUTION , width , height , ( uint8_t * ) res , screen_count * sizeof ( * res ) )"	975:4:31414:31548	62618	4	True				
ANR	63188	CallExpression	"udscs_write ( x11 -> vdagentd , VDAGENTD_GUEST_XORG_RESOLUTION , width , height , ( uint8_t * ) res , screen_count * sizeof ( * res ) )"		62618	0					
ANR	63189	Callee	udscs_write		62618	0					
ANR	63190	Identifier	udscs_write		62618	0					
ANR	63191	ArgumentList	x11 -> vdagentd		62618	1					
ANR	63192	Argument	x11 -> vdagentd		62618	0					
ANR	63193	PtrMemberAccess	x11 -> vdagentd		62618	0					
ANR	63194	Identifier	x11		62618	0					
ANR	63195	Identifier	vdagentd		62618	1					
ANR	63196	Argument	VDAGENTD_GUEST_XORG_RESOLUTION		62618	1					
ANR	63197	Identifier	VDAGENTD_GUEST_XORG_RESOLUTION		62618	0					
ANR	63198	Argument	width		62618	2					
ANR	63199	Identifier	width		62618	0					
ANR	63200	Argument	height		62618	3					
ANR	63201	Identifier	height		62618	0					
ANR	63202	Argument	( uint8_t * ) res		62618	4					
ANR	63203	CastExpression	( uint8_t * ) res		62618	0					
ANR	63204	CastTarget	uint8_t *		62618	0					
ANR	63205	Identifier	res		62618	1					
ANR	63206	Argument	screen_count * sizeof ( * res )		62618	5					
ANR	63207	MultiplicativeExpression	screen_count * sizeof ( * res )		62618	0		*			
ANR	63208	Identifier	screen_count		62618	0					
ANR	63209	SizeofExpression	sizeof ( * res )		62618	1					
ANR	63210	Sizeof	sizeof		62618	0					
ANR	63211	UnaryOperationExpression	* res		62618	1					
ANR	63212	UnaryOperator	*		62618	0					
ANR	63213	Identifier	res		62618	1					
ANR	63214	ExpressionStatement	free ( res )	977:4:31554:31563	62618	5	True				
ANR	63215	CallExpression	free ( res )		62618	0					
ANR	63216	Callee	free		62618	0					
ANR	63217	Identifier	free		62618	0					
ANR	63218	ArgumentList	res		62618	1					
ANR	63219	Argument	res		62618	0					
ANR	63220	Identifier	res		62618	0					
ANR	63221	ReturnStatement	return ;	978:4:31569:31575	62618	6	True				
ANR	63222	Label	no_mem :	979:0:31577:31583	62618	7	True				
ANR	63223	Identifier	no_mem		62618	0					
ANR	63224	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory while trying to send resolutions, not sending resolutions."" )"	980:4:31589:31680	62618	8	True				
ANR	63225	CallExpression	"syslog ( LOG_ERR , ""out of memory while trying to send resolutions, not sending resolutions."" )"		62618	0					
ANR	63226	Callee	syslog		62618	0					
ANR	63227	Identifier	syslog		62618	0					
ANR	63228	ArgumentList	LOG_ERR		62618	1					
ANR	63229	Argument	LOG_ERR		62618	0					
ANR	63230	Identifier	LOG_ERR		62618	0					
ANR	63231	Argument	"""out of memory while trying to send resolutions, not sending resolutions."""		62618	1					
ANR	63232	PrimaryExpression	"""out of memory while trying to send resolutions, not sending resolutions."""		62618	0					
ANR	63233	ReturnType	void		62618	1					
ANR	63234	Identifier	vdagent_x11_send_daemon_guest_xorg_res		62618	2					
ANR	63235	ParameterList	"struct vdagent_x11 * x11 , int update"		62618	3					
ANR	63236	Parameter	struct vdagent_x11 * x11	893:44:28669:28691	62618	0	True				
ANR	63237	ParameterType	struct vdagent_x11 *		62618	0					
ANR	63238	Identifier	x11		62618	1					
ANR	63239	Parameter	int update	893:69:28694:28703	62618	1	True				
ANR	63240	ParameterType	int		62618	0					
ANR	63241	Identifier	update		62618	1					
ANR	63242	CFGEntryNode	ENTRY		62618		True				
ANR	63243	CFGExitNode	EXIT		62618		True				
ANR	63244	Symbol	res [ i ] . y		62618						
ANR	63245	Symbol	screen_count		62618						
ANR	63246	Symbol	curr -> monitors		62618						
ANR	63247	Symbol	res [ i ] . x		62618						
ANR	63248	Symbol	res [ screen_info [ i ] . screen_number ] . height		62618						
ANR	63249	Symbol	x11 -> vdagentd		62618						
ANR	63250	Symbol	* screen_info [ i ] . screen_number		62618						
ANR	63251	Symbol	curr -> monitors [ i ] . x		62618						
ANR	63252	Symbol	curr -> monitors [ i ] . y		62618						
ANR	63253	Symbol	LOG_ERR		62618						
ANR	63254	Symbol	curr -> num_of_monitors		62618						
ANR	63255	Symbol	screen_info [ i ] . width		62618						
ANR	63256	Symbol	x11		62618						
ANR	63257	Symbol	curr		62618						
ANR	63258	Symbol	get_current_mon_config		62618						
ANR	63259	Symbol	x11 -> height		62618						
ANR	63260	Symbol	height		62618						
ANR	63261	Symbol	res		62618						
ANR	63262	Symbol	* * i		62618						
ANR	63263	Symbol	NULL		62618						
ANR	63264	Symbol	res [ screen_info [ i ] . screen_number ] . width		62618						
ANR	63265	Symbol	x11 -> has_xinerama		62618						
ANR	63266	Symbol	curr -> monitors [ i ] . height		62618						
ANR	63267	Symbol	res [ i ] . width		62618						
ANR	63268	Symbol	* curr -> monitors		62618						
ANR	63269	Symbol	x11 -> screen_count		62618						
ANR	63270	Symbol	res [ i ] . height		62618						
ANR	63271	Symbol	x11 -> display		62618						
ANR	63272	Symbol	screen_info [ i ] . height		62618						
ANR	63273	Symbol	* screen_info		62618						
ANR	63274	Symbol	XineramaQueryScreens		62618						
ANR	63275	Symbol	* x11		62618						
ANR	63276	Symbol	x11 -> width		62618						
ANR	63277	Symbol	* * curr		62618						
ANR	63278	Symbol	screen_info		62618						
ANR	63279	Symbol	update		62618						
ANR	63280	Symbol	* x11 -> width		62618						
ANR	63281	Symbol	* res		62618						
ANR	63282	Symbol	screen_info [ i ] . y_org		62618						
ANR	63283	Symbol	curr -> monitors [ i ] . width		62618						
ANR	63284	Symbol	* x11 -> height		62618						
ANR	63285	Symbol	malloc		62618						
ANR	63286	Symbol	VDAGENTD_GUEST_XORG_RESOLUTION		62618						
ANR	63287	Symbol	res [ screen_info [ i ] . screen_number ] . y		62618						
ANR	63288	Symbol	* * screen_info		62618						
ANR	63289	Symbol	res [ screen_info [ i ] . screen_number ] . x		62618						
ANR	63290	Symbol	x11 -> debug		62618						
ANR	63291	Symbol	i		62618						
ANR	63292	Symbol	* * x11		62618						
ANR	63293	Symbol	screen_info [ i ] . screen_number		62618						
ANR	63294	Symbol	& screen_count		62618						
ANR	63295	Symbol	* i		62618						
ANR	63296	Symbol	* curr		62618						
ANR	63297	Symbol	width		62618						
ANR	63298	Symbol	screen_info [ i ] . x_org		62618						
ANR	63299	Symbol	LOG_DEBUG		62618						
ANR	63300	Symbol	x11 -> has_xrandr		62618						
