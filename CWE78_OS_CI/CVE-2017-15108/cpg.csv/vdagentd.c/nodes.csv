command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	48948	File	data/converged/CVE-2017-15108_vd_agent/vdagentd.c								
ANR	48949	ClassDef	agent_data	51:0:1424:1572							
ANR	48950	DeclStmt									
ANR	48951	Decl							char	char *	session
ANR	48952	DeclStmt									
ANR	48953	Decl							int	int	width
ANR	48954	DeclStmt									
ANR	48955	Decl							int	int	height
ANR	48956	DeclStmt									
ANR	48957	Decl							struct vdagentd_guest_xorg_resolution	struct vdagentd_guest_xorg_resolution *	screen_info
ANR	48958	DeclStmt									
ANR	48959	Decl							int	int	screen_count
ANR	48960	DeclStmt									
ANR	48961	Decl							const char	const char *	pidfilename
ANR	48962	DeclStmt									
ANR	48963	Decl							const char	const char *	portdev
ANR	48964	DeclStmt									
ANR	48965	Decl							const char	const char *	vdagentd_socket
ANR	48966	DeclStmt									
ANR	48967	Decl							const char	const char *	uinput_device
ANR	48968	DeclStmt									
ANR	48969	Decl							int	int	debug
ANR	48970	DeclStmt									
ANR	48971	Decl							int	int	uinput_fake
ANR	48972	DeclStmt									
ANR	48973	Decl							int	int	only_once
ANR	48974	DeclStmt									
ANR	48975	Decl							struct udscs_server	struct udscs_server *	server
ANR	48976	DeclStmt									
ANR	48977	Decl							struct vdagent_virtio_port	struct vdagent_virtio_port *	virtio_port
ANR	48978	DeclStmt									
ANR	48979	Decl							GHashTable	GHashTable *	active_xfers
ANR	48980	DeclStmt									
ANR	48981	Decl							struct session_info	struct session_info *	session_info
ANR	48982	DeclStmt									
ANR	48983	Decl							struct vdagentd_uinput	struct vdagentd_uinput *	uinput
ANR	48984	DeclStmt									
ANR	48985	Decl							VDAgentMonitorsConfig	VDAgentMonitorsConfig *	mon_config
ANR	48986	DeclStmt									
ANR	48987	Decl							uint32_t	uint32_t *	capabilities
ANR	48988	DeclStmt									
ANR	48989	Decl							int	int	capabilities_size
ANR	48990	DeclStmt									
ANR	48991	Decl							const char	const char *	active_session
ANR	48992	DeclStmt									
ANR	48993	Decl							unsigned int	unsigned int	session_count
ANR	48994	DeclStmt									
ANR	48995	Decl							struct udscs_connection	struct udscs_connection *	active_session_conn
ANR	48996	DeclStmt									
ANR	48997	Decl							int	int [ 256 ]	agent_owns_clipboard
ANR	48998	DeclStmt									
ANR	48999	Decl							int	int	quit
ANR	49000	DeclStmt									
ANR	49001	Decl							int	int	retval
ANR	49002	DeclStmt									
ANR	49003	Decl							int	int	client_connected
ANR	49004	DeclStmt									
ANR	49005	Decl							int	int	max_clipboard
ANR	49006	Function	virtio_msg_uint32_to_le	85:0:2581:2871							
ANR	49007	FunctionDef	"virtio_msg_uint32_to_le (uint8_t * _msg , uint32_t size , uint32_t offset)"		49006	0					
ANR	49008	CompoundStatement		86:0:2664:2871	49006	0					
ANR	49009	IdentifierDeclStatement	"uint32_t i , * msg = ( uint32_t * ) ( _msg + offset ) ;"	87:4:2670:2716	49006	0	True				
ANR	49010	IdentifierDecl	i		49006	0					
ANR	49011	IdentifierDeclType	uint32_t		49006	0					
ANR	49012	Identifier	i		49006	1					
ANR	49013	IdentifierDecl	* msg = ( uint32_t * ) ( _msg + offset )		49006	1					
ANR	49014	IdentifierDeclType	uint32_t *		49006	0					
ANR	49015	Identifier	msg		49006	1					
ANR	49016	AssignmentExpression	* msg = ( uint32_t * ) ( _msg + offset )		49006	2		=			
ANR	49017	Identifier	msg		49006	0					
ANR	49018	CastExpression	( uint32_t * ) ( _msg + offset )		49006	1					
ANR	49019	CastTarget	uint32_t *		49006	0					
ANR	49020	AdditiveExpression	_msg + offset		49006	1		+			
ANR	49021	Identifier	_msg		49006	0					
ANR	49022	Identifier	offset		49006	1					
ANR	49023	ForStatement	for ( i = 0 ; i < ( size - offset ) / 4 ; i ++ )		49006	1					
ANR	49024	ForInit	i = 0 ;	90:9:2794:2799	49006	0	True				
ANR	49025	AssignmentExpression	i = 0		49006	0		=			
ANR	49026	Identifier	i		49006	0					
ANR	49027	PrimaryExpression	0		49006	1					
ANR	49028	Condition	i < ( size - offset ) / 4	90:16:2801:2823	49006	1	True				
ANR	49029	RelationalExpression	i < ( size - offset ) / 4		49006	0		<			
ANR	49030	Identifier	i		49006	0					
ANR	49031	MultiplicativeExpression	( size - offset ) / 4		49006	1		/			
ANR	49032	AdditiveExpression	size - offset		49006	0		-			
ANR	49033	Identifier	size		49006	0					
ANR	49034	Identifier	offset		49006	1					
ANR	49035	PrimaryExpression	4		49006	1					
ANR	49036	PostIncDecOperationExpression	i ++	90:41:2826:2828	49006	2	True				
ANR	49037	Identifier	i		49006	0					
ANR	49038	IncDec	++		49006	1					
ANR	49039	ExpressionStatement	msg [ i ] = GUINT32_TO_LE ( msg [ i ] )	91:8:2839:2869	49006	3	True				
ANR	49040	AssignmentExpression	msg [ i ] = GUINT32_TO_LE ( msg [ i ] )		49006	0		=			
ANR	49041	ArrayIndexing	msg [ i ]		49006	0					
ANR	49042	Identifier	msg		49006	0					
ANR	49043	Identifier	i		49006	1					
ANR	49044	CallExpression	GUINT32_TO_LE ( msg [ i ] )		49006	1					
ANR	49045	Callee	GUINT32_TO_LE		49006	0					
ANR	49046	Identifier	GUINT32_TO_LE		49006	0					
ANR	49047	ArgumentList	msg [ i ]		49006	1					
ANR	49048	Argument	msg [ i ]		49006	0					
ANR	49049	ArrayIndexing	msg [ i ]		49006	0					
ANR	49050	Identifier	msg		49006	0					
ANR	49051	Identifier	i		49006	1					
ANR	49052	ReturnType	static void		49006	1					
ANR	49053	Identifier	virtio_msg_uint32_to_le		49006	2					
ANR	49054	ParameterList	"uint8_t * _msg , uint32_t size , uint32_t offset"		49006	3					
ANR	49055	Parameter	uint8_t * _msg	85:36:2617:2629	49006	0	True				
ANR	49056	ParameterType	uint8_t *		49006	0					
ANR	49057	Identifier	_msg		49006	1					
ANR	49058	Parameter	uint32_t size	85:51:2632:2644	49006	1	True				
ANR	49059	ParameterType	uint32_t		49006	0					
ANR	49060	Identifier	size		49006	1					
ANR	49061	Parameter	uint32_t offset	85:66:2647:2661	49006	2	True				
ANR	49062	ParameterType	uint32_t		49006	0					
ANR	49063	Identifier	offset		49006	1					
ANR	49064	CFGEntryNode	ENTRY		49006		True				
ANR	49065	CFGExitNode	EXIT		49006		True				
ANR	49066	Symbol	msg		49006						
ANR	49067	Symbol	* i		49006						
ANR	49068	Symbol	size		49006						
ANR	49069	Symbol	offset		49006						
ANR	49070	Symbol	i		49006						
ANR	49071	Symbol	* msg		49006						
ANR	49072	Symbol	GUINT32_TO_LE		49006						
ANR	49073	Symbol	_msg		49006						
ANR	49074	Function	virtio_msg_uint32_from_le	94:0:2874:3168							
ANR	49075	FunctionDef	"virtio_msg_uint32_from_le (uint8_t * _msg , uint32_t size , uint32_t offset)"		49074	0					
ANR	49076	CompoundStatement		95:0:2959:3168	49074	0					
ANR	49077	IdentifierDeclStatement	"uint32_t i , * msg = ( uint32_t * ) ( _msg + offset ) ;"	96:4:2965:3011	49074	0	True				
ANR	49078	IdentifierDecl	i		49074	0					
ANR	49079	IdentifierDeclType	uint32_t		49074	0					
ANR	49080	Identifier	i		49074	1					
ANR	49081	IdentifierDecl	* msg = ( uint32_t * ) ( _msg + offset )		49074	1					
ANR	49082	IdentifierDeclType	uint32_t *		49074	0					
ANR	49083	Identifier	msg		49074	1					
ANR	49084	AssignmentExpression	* msg = ( uint32_t * ) ( _msg + offset )		49074	2		=			
ANR	49085	Identifier	msg		49074	0					
ANR	49086	CastExpression	( uint32_t * ) ( _msg + offset )		49074	1					
ANR	49087	CastTarget	uint32_t *		49074	0					
ANR	49088	AdditiveExpression	_msg + offset		49074	1		+			
ANR	49089	Identifier	_msg		49074	0					
ANR	49090	Identifier	offset		49074	1					
ANR	49091	ForStatement	for ( i = 0 ; i < ( size - offset ) / 4 ; i ++ )		49074	1					
ANR	49092	ForInit	i = 0 ;	99:9:3089:3094	49074	0	True				
ANR	49093	AssignmentExpression	i = 0		49074	0		=			
ANR	49094	Identifier	i		49074	0					
ANR	49095	PrimaryExpression	0		49074	1					
ANR	49096	Condition	i < ( size - offset ) / 4	99:16:3096:3118	49074	1	True				
ANR	49097	RelationalExpression	i < ( size - offset ) / 4		49074	0		<			
ANR	49098	Identifier	i		49074	0					
ANR	49099	MultiplicativeExpression	( size - offset ) / 4		49074	1		/			
ANR	49100	AdditiveExpression	size - offset		49074	0		-			
ANR	49101	Identifier	size		49074	0					
ANR	49102	Identifier	offset		49074	1					
ANR	49103	PrimaryExpression	4		49074	1					
ANR	49104	PostIncDecOperationExpression	i ++	99:41:3121:3123	49074	2	True				
ANR	49105	Identifier	i		49074	0					
ANR	49106	IncDec	++		49074	1					
ANR	49107	ExpressionStatement	msg [ i ] = GUINT32_FROM_LE ( msg [ i ] )	100:8:3134:3166	49074	3	True				
ANR	49108	AssignmentExpression	msg [ i ] = GUINT32_FROM_LE ( msg [ i ] )		49074	0		=			
ANR	49109	ArrayIndexing	msg [ i ]		49074	0					
ANR	49110	Identifier	msg		49074	0					
ANR	49111	Identifier	i		49074	1					
ANR	49112	CallExpression	GUINT32_FROM_LE ( msg [ i ] )		49074	1					
ANR	49113	Callee	GUINT32_FROM_LE		49074	0					
ANR	49114	Identifier	GUINT32_FROM_LE		49074	0					
ANR	49115	ArgumentList	msg [ i ]		49074	1					
ANR	49116	Argument	msg [ i ]		49074	0					
ANR	49117	ArrayIndexing	msg [ i ]		49074	0					
ANR	49118	Identifier	msg		49074	0					
ANR	49119	Identifier	i		49074	1					
ANR	49120	ReturnType	static void		49074	1					
ANR	49121	Identifier	virtio_msg_uint32_from_le		49074	2					
ANR	49122	ParameterList	"uint8_t * _msg , uint32_t size , uint32_t offset"		49074	3					
ANR	49123	Parameter	uint8_t * _msg	94:38:2912:2924	49074	0	True				
ANR	49124	ParameterType	uint8_t *		49074	0					
ANR	49125	Identifier	_msg		49074	1					
ANR	49126	Parameter	uint32_t size	94:53:2927:2939	49074	1	True				
ANR	49127	ParameterType	uint32_t		49074	0					
ANR	49128	Identifier	size		49074	1					
ANR	49129	Parameter	uint32_t offset	94:68:2942:2956	49074	2	True				
ANR	49130	ParameterType	uint32_t		49074	0					
ANR	49131	Identifier	offset		49074	1					
ANR	49132	CFGEntryNode	ENTRY		49074		True				
ANR	49133	CFGExitNode	EXIT		49074		True				
ANR	49134	Symbol	msg		49074						
ANR	49135	Symbol	* i		49074						
ANR	49136	Symbol	size		49074						
ANR	49137	Symbol	offset		49074						
ANR	49138	Symbol	i		49074						
ANR	49139	Symbol	GUINT32_FROM_LE		49074						
ANR	49140	Symbol	* msg		49074						
ANR	49141	Symbol	_msg		49074						
ANR	49142	Function	virtio_msg_uint16_from_le	103:0:3171:3478							
ANR	49143	FunctionDef	"virtio_msg_uint16_from_le (uint8_t * _msg , uint32_t size , uint32_t offset)"		49142	0					
ANR	49144	CompoundStatement		104:0:3256:3478	49142	0					
ANR	49145	IdentifierDeclStatement	uint32_t i ;	105:4:3262:3272	49142	0	True				
ANR	49146	IdentifierDecl	i		49142	0					
ANR	49147	IdentifierDeclType	uint32_t		49142	0					
ANR	49148	Identifier	i		49142	1					
ANR	49149	IdentifierDeclStatement	uint16_t * msg = ( uint16_t * ) ( _msg + offset ) ;	106:4:3278:3321	49142	1	True				
ANR	49150	IdentifierDecl	* msg = ( uint16_t * ) ( _msg + offset )		49142	0					
ANR	49151	IdentifierDeclType	uint16_t *		49142	0					
ANR	49152	Identifier	msg		49142	1					
ANR	49153	AssignmentExpression	* msg = ( uint16_t * ) ( _msg + offset )		49142	2		=			
ANR	49154	Identifier	msg		49142	0					
ANR	49155	CastExpression	( uint16_t * ) ( _msg + offset )		49142	1					
ANR	49156	CastTarget	uint16_t *		49142	0					
ANR	49157	AdditiveExpression	_msg + offset		49142	1		+			
ANR	49158	Identifier	_msg		49142	0					
ANR	49159	Identifier	offset		49142	1					
ANR	49160	ForStatement	for ( i = 0 ; i < ( size - offset ) / 2 ; i ++ )		49142	2					
ANR	49161	ForInit	i = 0 ;	109:9:3399:3404	49142	0	True				
ANR	49162	AssignmentExpression	i = 0		49142	0		=			
ANR	49163	Identifier	i		49142	0					
ANR	49164	PrimaryExpression	0		49142	1					
ANR	49165	Condition	i < ( size - offset ) / 2	109:16:3406:3428	49142	1	True				
ANR	49166	RelationalExpression	i < ( size - offset ) / 2		49142	0		<			
ANR	49167	Identifier	i		49142	0					
ANR	49168	MultiplicativeExpression	( size - offset ) / 2		49142	1		/			
ANR	49169	AdditiveExpression	size - offset		49142	0		-			
ANR	49170	Identifier	size		49142	0					
ANR	49171	Identifier	offset		49142	1					
ANR	49172	PrimaryExpression	2		49142	1					
ANR	49173	PostIncDecOperationExpression	i ++	109:41:3431:3433	49142	2	True				
ANR	49174	Identifier	i		49142	0					
ANR	49175	IncDec	++		49142	1					
ANR	49176	ExpressionStatement	msg [ i ] = GUINT16_FROM_LE ( msg [ i ] )	110:8:3444:3476	49142	3	True				
ANR	49177	AssignmentExpression	msg [ i ] = GUINT16_FROM_LE ( msg [ i ] )		49142	0		=			
ANR	49178	ArrayIndexing	msg [ i ]		49142	0					
ANR	49179	Identifier	msg		49142	0					
ANR	49180	Identifier	i		49142	1					
ANR	49181	CallExpression	GUINT16_FROM_LE ( msg [ i ] )		49142	1					
ANR	49182	Callee	GUINT16_FROM_LE		49142	0					
ANR	49183	Identifier	GUINT16_FROM_LE		49142	0					
ANR	49184	ArgumentList	msg [ i ]		49142	1					
ANR	49185	Argument	msg [ i ]		49142	0					
ANR	49186	ArrayIndexing	msg [ i ]		49142	0					
ANR	49187	Identifier	msg		49142	0					
ANR	49188	Identifier	i		49142	1					
ANR	49189	ReturnType	static void		49142	1					
ANR	49190	Identifier	virtio_msg_uint16_from_le		49142	2					
ANR	49191	ParameterList	"uint8_t * _msg , uint32_t size , uint32_t offset"		49142	3					
ANR	49192	Parameter	uint8_t * _msg	103:38:3209:3221	49142	0	True				
ANR	49193	ParameterType	uint8_t *		49142	0					
ANR	49194	Identifier	_msg		49142	1					
ANR	49195	Parameter	uint32_t size	103:53:3224:3236	49142	1	True				
ANR	49196	ParameterType	uint32_t		49142	0					
ANR	49197	Identifier	size		49142	1					
ANR	49198	Parameter	uint32_t offset	103:68:3239:3253	49142	2	True				
ANR	49199	ParameterType	uint32_t		49142	0					
ANR	49200	Identifier	offset		49142	1					
ANR	49201	CFGEntryNode	ENTRY		49142		True				
ANR	49202	CFGExitNode	EXIT		49142		True				
ANR	49203	Symbol	msg		49142						
ANR	49204	Symbol	* i		49142						
ANR	49205	Symbol	size		49142						
ANR	49206	Symbol	offset		49142						
ANR	49207	Symbol	GUINT16_FROM_LE		49142						
ANR	49208	Symbol	i		49142						
ANR	49209	Symbol	* msg		49142						
ANR	49210	Symbol	_msg		49142						
ANR	49211	Function	send_capabilities	114:0:3536:4795							
ANR	49212	FunctionDef	"send_capabilities (struct vdagent_virtio_port * vport , uint32_t request)"		49211	0					
ANR	49213	CompoundStatement		116:0:3623:4795	49211	0					
ANR	49214	IdentifierDeclStatement	VDAgentAnnounceCapabilities * caps ;	117:4:3629:3662	49211	0	True				
ANR	49215	IdentifierDecl	* caps		49211	0					
ANR	49216	IdentifierDeclType	VDAgentAnnounceCapabilities *		49211	0					
ANR	49217	Identifier	caps		49211	1					
ANR	49218	IdentifierDeclStatement	uint32_t size ;	118:4:3668:3681	49211	1	True				
ANR	49219	IdentifierDecl	size		49211	0					
ANR	49220	IdentifierDeclType	uint32_t		49211	0					
ANR	49221	Identifier	size		49211	1					
ANR	49222	ExpressionStatement	size = sizeof ( * caps ) + VD_AGENT_CAPS_BYTES	120:4:3688:3730	49211	2	True				
ANR	49223	AssignmentExpression	size = sizeof ( * caps ) + VD_AGENT_CAPS_BYTES		49211	0		=			
ANR	49224	Identifier	size		49211	0					
ANR	49225	AdditiveExpression	sizeof ( * caps ) + VD_AGENT_CAPS_BYTES		49211	1		+			
ANR	49226	SizeofExpression	sizeof ( * caps )		49211	0					
ANR	49227	Sizeof	sizeof		49211	0					
ANR	49228	UnaryOperationExpression	* caps		49211	1					
ANR	49229	UnaryOperator	*		49211	0					
ANR	49230	Identifier	caps		49211	1					
ANR	49231	Identifier	VD_AGENT_CAPS_BYTES		49211	1					
ANR	49232	ExpressionStatement	"caps = calloc ( 1 , size )"	121:4:3736:3758	49211	3	True				
ANR	49233	AssignmentExpression	"caps = calloc ( 1 , size )"		49211	0		=			
ANR	49234	Identifier	caps		49211	0					
ANR	49235	CallExpression	"calloc ( 1 , size )"		49211	1					
ANR	49236	Callee	calloc		49211	0					
ANR	49237	Identifier	calloc		49211	0					
ANR	49238	ArgumentList	1		49211	1					
ANR	49239	Argument	1		49211	0					
ANR	49240	PrimaryExpression	1		49211	0					
ANR	49241	Argument	size		49211	1					
ANR	49242	Identifier	size		49211	0					
ANR	49243	IfStatement	if ( ! caps )		49211	4					
ANR	49244	Condition	! caps	122:8:3768:3772	49211	0	True				
ANR	49245	UnaryOperationExpression	! caps		49211	0					
ANR	49246	UnaryOperator	!		49211	0					
ANR	49247	Identifier	caps		49211	1					
ANR	49248	CompoundStatement		7:15:151:151	49211	1					
ANR	49249	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating capabilities array (write)"" )"	123:8:3785:3855	49211	0	True				
ANR	49250	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating capabilities array (write)"" )"		49211	0					
ANR	49251	Callee	syslog		49211	0					
ANR	49252	Identifier	syslog		49211	0					
ANR	49253	ArgumentList	LOG_ERR		49211	1					
ANR	49254	Argument	LOG_ERR		49211	0					
ANR	49255	Identifier	LOG_ERR		49211	0					
ANR	49256	Argument	"""out of memory allocating capabilities array (write)"""		49211	1					
ANR	49257	PrimaryExpression	"""out of memory allocating capabilities array (write)"""		49211	0					
ANR	49258	ReturnStatement	return ;	124:8:3865:3871	49211	1	True				
ANR	49259	ExpressionStatement	caps -> request = request	127:4:3884:3907	49211	5	True				
ANR	49260	AssignmentExpression	caps -> request = request		49211	0		=			
ANR	49261	PtrMemberAccess	caps -> request		49211	0					
ANR	49262	Identifier	caps		49211	0					
ANR	49263	Identifier	request		49211	1					
ANR	49264	Identifier	request		49211	1					
ANR	49265	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MOUSE_STATE )"	128:4:3913:3974	49211	6	True				
ANR	49266	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MOUSE_STATE )"		49211	0					
ANR	49267	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49268	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49269	ArgumentList	caps -> caps		49211	1					
ANR	49270	Argument	caps -> caps		49211	0					
ANR	49271	PtrMemberAccess	caps -> caps		49211	0					
ANR	49272	Identifier	caps		49211	0					
ANR	49273	Identifier	caps		49211	1					
ANR	49274	Argument	VD_AGENT_CAP_MOUSE_STATE		49211	1					
ANR	49275	Identifier	VD_AGENT_CAP_MOUSE_STATE		49211	0					
ANR	49276	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MONITORS_CONFIG )"	129:4:3980:4045	49211	7	True				
ANR	49277	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MONITORS_CONFIG )"		49211	0					
ANR	49278	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49279	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49280	ArgumentList	caps -> caps		49211	1					
ANR	49281	Argument	caps -> caps		49211	0					
ANR	49282	PtrMemberAccess	caps -> caps		49211	0					
ANR	49283	Identifier	caps		49211	0					
ANR	49284	Identifier	caps		49211	1					
ANR	49285	Argument	VD_AGENT_CAP_MONITORS_CONFIG		49211	1					
ANR	49286	Identifier	VD_AGENT_CAP_MONITORS_CONFIG		49211	0					
ANR	49287	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_REPLY )"	130:4:4051:4106	49211	8	True				
ANR	49288	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_REPLY )"		49211	0					
ANR	49289	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49290	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49291	ArgumentList	caps -> caps		49211	1					
ANR	49292	Argument	caps -> caps		49211	0					
ANR	49293	PtrMemberAccess	caps -> caps		49211	0					
ANR	49294	Identifier	caps		49211	0					
ANR	49295	Identifier	caps		49211	1					
ANR	49296	Argument	VD_AGENT_CAP_REPLY		49211	1					
ANR	49297	Identifier	VD_AGENT_CAP_REPLY		49211	0					
ANR	49298	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"	131:4:4112:4181	49211	9	True				
ANR	49299	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"		49211	0					
ANR	49300	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49301	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49302	ArgumentList	caps -> caps		49211	1					
ANR	49303	Argument	caps -> caps		49211	0					
ANR	49304	PtrMemberAccess	caps -> caps		49211	0					
ANR	49305	Identifier	caps		49211	0					
ANR	49306	Identifier	caps		49211	1					
ANR	49307	Argument	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		49211	1					
ANR	49308	Identifier	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		49211	0					
ANR	49309	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	132:4:4187:4256	49211	10	True				
ANR	49310	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		49211	0					
ANR	49311	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49312	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49313	ArgumentList	caps -> caps		49211	1					
ANR	49314	Argument	caps -> caps		49211	0					
ANR	49315	PtrMemberAccess	caps -> caps		49211	0					
ANR	49316	Identifier	caps		49211	0					
ANR	49317	Identifier	caps		49211	1					
ANR	49318	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		49211	1					
ANR	49319	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		49211	0					
ANR	49320	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_SPARSE_MONITORS_CONFIG )"	133:4:4262:4334	49211	11	True				
ANR	49321	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_SPARSE_MONITORS_CONFIG )"		49211	0					
ANR	49322	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49323	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49324	ArgumentList	caps -> caps		49211	1					
ANR	49325	Argument	caps -> caps		49211	0					
ANR	49326	PtrMemberAccess	caps -> caps		49211	0					
ANR	49327	Identifier	caps		49211	0					
ANR	49328	Identifier	caps		49211	1					
ANR	49329	Argument	VD_AGENT_CAP_SPARSE_MONITORS_CONFIG		49211	1					
ANR	49330	Identifier	VD_AGENT_CAP_SPARSE_MONITORS_CONFIG		49211	0					
ANR	49331	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_GUEST_LINEEND_LF )"	134:4:4340:4406	49211	12	True				
ANR	49332	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_GUEST_LINEEND_LF )"		49211	0					
ANR	49333	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49334	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49335	ArgumentList	caps -> caps		49211	1					
ANR	49336	Argument	caps -> caps		49211	0					
ANR	49337	PtrMemberAccess	caps -> caps		49211	0					
ANR	49338	Identifier	caps		49211	0					
ANR	49339	Identifier	caps		49211	1					
ANR	49340	Argument	VD_AGENT_CAP_GUEST_LINEEND_LF		49211	1					
ANR	49341	Identifier	VD_AGENT_CAP_GUEST_LINEEND_LF		49211	0					
ANR	49342	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MAX_CLIPBOARD )"	135:4:4412:4475	49211	13	True				
ANR	49343	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_MAX_CLIPBOARD )"		49211	0					
ANR	49344	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49345	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49346	ArgumentList	caps -> caps		49211	1					
ANR	49347	Argument	caps -> caps		49211	0					
ANR	49348	PtrMemberAccess	caps -> caps		49211	0					
ANR	49349	Identifier	caps		49211	0					
ANR	49350	Identifier	caps		49211	1					
ANR	49351	Argument	VD_AGENT_CAP_MAX_CLIPBOARD		49211	1					
ANR	49352	Identifier	VD_AGENT_CAP_MAX_CLIPBOARD		49211	0					
ANR	49353	ExpressionStatement	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_AUDIO_VOLUME_SYNC )"	136:4:4481:4548	49211	14	True				
ANR	49354	CallExpression	"VD_AGENT_SET_CAPABILITY ( caps -> caps , VD_AGENT_CAP_AUDIO_VOLUME_SYNC )"		49211	0					
ANR	49355	Callee	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49356	Identifier	VD_AGENT_SET_CAPABILITY		49211	0					
ANR	49357	ArgumentList	caps -> caps		49211	1					
ANR	49358	Argument	caps -> caps		49211	0					
ANR	49359	PtrMemberAccess	caps -> caps		49211	0					
ANR	49360	Identifier	caps		49211	0					
ANR	49361	Identifier	caps		49211	1					
ANR	49362	Argument	VD_AGENT_CAP_AUDIO_VOLUME_SYNC		49211	1					
ANR	49363	Identifier	VD_AGENT_CAP_AUDIO_VOLUME_SYNC		49211	0					
ANR	49364	ExpressionStatement	"virtio_msg_uint32_to_le ( ( uint8_t * ) caps , size , 0 )"	137:4:4554:4603	49211	15	True				
ANR	49365	CallExpression	"virtio_msg_uint32_to_le ( ( uint8_t * ) caps , size , 0 )"		49211	0					
ANR	49366	Callee	virtio_msg_uint32_to_le		49211	0					
ANR	49367	Identifier	virtio_msg_uint32_to_le		49211	0					
ANR	49368	ArgumentList	( uint8_t * ) caps		49211	1					
ANR	49369	Argument	( uint8_t * ) caps		49211	0					
ANR	49370	CastExpression	( uint8_t * ) caps		49211	0					
ANR	49371	CastTarget	uint8_t *		49211	0					
ANR	49372	Identifier	caps		49211	1					
ANR	49373	Argument	size		49211	1					
ANR	49374	Identifier	size		49211	0					
ANR	49375	Argument	0		49211	2					
ANR	49376	PrimaryExpression	0		49211	0					
ANR	49377	ExpressionStatement	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_ANNOUNCE_CAPABILITIES , 0 , ( uint8_t * ) caps , size )"	139:4:4610:4777	49211	16	True				
ANR	49378	CallExpression	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_ANNOUNCE_CAPABILITIES , 0 , ( uint8_t * ) caps , size )"		49211	0					
ANR	49379	Callee	vdagent_virtio_port_write		49211	0					
ANR	49380	Identifier	vdagent_virtio_port_write		49211	0					
ANR	49381	ArgumentList	vport		49211	1					
ANR	49382	Argument	vport		49211	0					
ANR	49383	Identifier	vport		49211	0					
ANR	49384	Argument	VDP_CLIENT_PORT		49211	1					
ANR	49385	Identifier	VDP_CLIENT_PORT		49211	0					
ANR	49386	Argument	VD_AGENT_ANNOUNCE_CAPABILITIES		49211	2					
ANR	49387	Identifier	VD_AGENT_ANNOUNCE_CAPABILITIES		49211	0					
ANR	49388	Argument	0		49211	3					
ANR	49389	PrimaryExpression	0		49211	0					
ANR	49390	Argument	( uint8_t * ) caps		49211	4					
ANR	49391	CastExpression	( uint8_t * ) caps		49211	0					
ANR	49392	CastTarget	uint8_t *		49211	0					
ANR	49393	Identifier	caps		49211	1					
ANR	49394	Argument	size		49211	5					
ANR	49395	Identifier	size		49211	0					
ANR	49396	ExpressionStatement	free ( caps )	142:4:4783:4793	49211	17	True				
ANR	49397	CallExpression	free ( caps )		49211	0					
ANR	49398	Callee	free		49211	0					
ANR	49399	Identifier	free		49211	0					
ANR	49400	ArgumentList	caps		49211	1					
ANR	49401	Argument	caps		49211	0					
ANR	49402	Identifier	caps		49211	0					
ANR	49403	ReturnType	static void		49211	1					
ANR	49404	Identifier	send_capabilities		49211	2					
ANR	49405	ParameterList	"struct vdagent_virtio_port * vport , uint32_t request"		49211	3					
ANR	49406	Parameter	struct vdagent_virtio_port * vport	114:30:3566:3598	49211	0	True				
ANR	49407	ParameterType	struct vdagent_virtio_port *		49211	0					
ANR	49408	Identifier	vport		49211	1					
ANR	49409	Parameter	uint32_t request	115:4:3605:3620	49211	1	True				
ANR	49410	ParameterType	uint32_t		49211	0					
ANR	49411	Identifier	request		49211	1					
ANR	49412	CFGEntryNode	ENTRY		49211		True				
ANR	49413	CFGExitNode	EXIT		49211		True				
ANR	49414	Symbol	VDP_CLIENT_PORT		49211						
ANR	49415	Symbol	request		49211						
ANR	49416	Symbol	VD_AGENT_ANNOUNCE_CAPABILITIES		49211						
ANR	49417	Symbol	VD_AGENT_CAP_MAX_CLIPBOARD		49211						
ANR	49418	Symbol	vport		49211						
ANR	49419	Symbol	caps -> caps		49211						
ANR	49420	Symbol	VD_AGENT_CAP_MONITORS_CONFIG		49211						
ANR	49421	Symbol	VD_AGENT_CAP_SPARSE_MONITORS_CONFIG		49211						
ANR	49422	Symbol	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		49211						
ANR	49423	Symbol	VD_AGENT_CAP_MOUSE_STATE		49211						
ANR	49424	Symbol	* caps		49211						
ANR	49425	Symbol	calloc		49211						
ANR	49426	Symbol	VD_AGENT_CAP_AUDIO_VOLUME_SYNC		49211						
ANR	49427	Symbol	caps		49211						
ANR	49428	Symbol	VD_AGENT_CAPS_BYTES		49211						
ANR	49429	Symbol	VD_AGENT_CAP_REPLY		49211						
ANR	49430	Symbol	size		49211						
ANR	49431	Symbol	caps -> request		49211						
ANR	49432	Symbol	LOG_ERR		49211						
ANR	49433	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		49211						
ANR	49434	Symbol	VD_AGENT_CAP_GUEST_LINEEND_LF		49211						
ANR	49435	Function	do_client_disconnect	145:0:4798:5019							
ANR	49436	FunctionDef	do_client_disconnect ()		49435	0					
ANR	49437	CompoundStatement		146:0:4837:5019	49435	0					
ANR	49438	IfStatement	if ( client_connected )		49435	0					
ANR	49439	Condition	client_connected	147:8:4847:4862	49435	0	True				
ANR	49440	Identifier	client_connected		49435	0					
ANR	49441	CompoundStatement		2:26:27:27	49435	1					
ANR	49442	ExpressionStatement	"udscs_server_write_all ( server , VDAGENTD_CLIENT_DISCONNECTED , 0 , 0 , NULL , 0 )"	148:8:4875:4981	49435	0	True				
ANR	49443	CallExpression	"udscs_server_write_all ( server , VDAGENTD_CLIENT_DISCONNECTED , 0 , 0 , NULL , 0 )"		49435	0					
ANR	49444	Callee	udscs_server_write_all		49435	0					
ANR	49445	Identifier	udscs_server_write_all		49435	0					
ANR	49446	ArgumentList	server		49435	1					
ANR	49447	Argument	server		49435	0					
ANR	49448	Identifier	server		49435	0					
ANR	49449	Argument	VDAGENTD_CLIENT_DISCONNECTED		49435	1					
ANR	49450	Identifier	VDAGENTD_CLIENT_DISCONNECTED		49435	0					
ANR	49451	Argument	0		49435	2					
ANR	49452	PrimaryExpression	0		49435	0					
ANR	49453	Argument	0		49435	3					
ANR	49454	PrimaryExpression	0		49435	0					
ANR	49455	Argument	NULL		49435	4					
ANR	49456	Identifier	NULL		49435	0					
ANR	49457	Argument	0		49435	5					
ANR	49458	PrimaryExpression	0		49435	0					
ANR	49459	ExpressionStatement	client_connected = 0	150:8:4991:5011	49435	1	True				
ANR	49460	AssignmentExpression	client_connected = 0		49435	0		=			
ANR	49461	Identifier	client_connected		49435	0					
ANR	49462	PrimaryExpression	0		49435	1					
ANR	49463	ReturnType	static void		49435	1					
ANR	49464	Identifier	do_client_disconnect		49435	2					
ANR	49465	ParameterList			49435	3					
ANR	49466	CFGEntryNode	ENTRY		49435		True				
ANR	49467	CFGExitNode	EXIT		49435		True				
ANR	49468	Symbol	VDAGENTD_CLIENT_DISCONNECTED		49435						
ANR	49469	Symbol	server		49435						
ANR	49470	Symbol	NULL		49435						
ANR	49471	Symbol	client_connected		49435						
ANR	49472	Function	do_client_mouse	154:0:5022:5921							
ANR	49473	FunctionDef	"do_client_mouse (struct vdagentd_uinput * * uinputp , VDAgentMouseState * mouse)"		49472	0					
ANR	49474	CompoundStatement		155:0:5103:5921	49472	0					
ANR	49475	ExpressionStatement	"vdagentd_uinput_do_mouse ( uinputp , mouse )"	156:4:5109:5149	49472	0	True				
ANR	49476	CallExpression	"vdagentd_uinput_do_mouse ( uinputp , mouse )"		49472	0					
ANR	49477	Callee	vdagentd_uinput_do_mouse		49472	0					
ANR	49478	Identifier	vdagentd_uinput_do_mouse		49472	0					
ANR	49479	ArgumentList	uinputp		49472	1					
ANR	49480	Argument	uinputp		49472	0					
ANR	49481	Identifier	uinputp		49472	0					
ANR	49482	Argument	mouse		49472	1					
ANR	49483	Identifier	mouse		49472	0					
ANR	49484	IfStatement	if ( ! * uinputp )		49472	1					
ANR	49485	Condition	! * uinputp	157:8:5159:5167	49472	0	True				
ANR	49486	UnaryOperationExpression	! * uinputp		49472	0					
ANR	49487	UnaryOperator	!		49472	0					
ANR	49488	UnaryOperationExpression	* uinputp		49472	1					
ANR	49489	UnaryOperator	*		49472	0					
ANR	49490	Identifier	uinputp		49472	1					
ANR	49491	CompoundStatement		5:8:116:200	49472	1					
ANR	49492	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( active_session_conn ) ;	159:8:5220:5304	49472	0	True				
ANR	49493	IdentifierDecl	* agent_data = udscs_get_user_data ( active_session_conn )		49472	0					
ANR	49494	IdentifierDeclType	struct agent_data *		49472	0					
ANR	49495	Identifier	agent_data		49472	1					
ANR	49496	AssignmentExpression	* agent_data = udscs_get_user_data ( active_session_conn )		49472	2		=			
ANR	49497	Identifier	agent_data		49472	0					
ANR	49498	CallExpression	udscs_get_user_data ( active_session_conn )		49472	1					
ANR	49499	Callee	udscs_get_user_data		49472	0					
ANR	49500	Identifier	udscs_get_user_data		49472	0					
ANR	49501	ArgumentList	active_session_conn		49472	1					
ANR	49502	Argument	active_session_conn		49472	0					
ANR	49503	Identifier	active_session_conn		49472	0					
ANR	49504	IfStatement	if ( agent_data )		49472	1					
ANR	49505	Condition	agent_data	161:12:5318:5327	49472	0	True				
ANR	49506	Identifier	agent_data		49472	0					
ANR	49507	ExpressionStatement	"* uinputp = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"	162:12:5342:5780	49472	1	True				
ANR	49508	AssignmentExpression	"* uinputp = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		49472	0		=			
ANR	49509	UnaryOperationExpression	* uinputp		49472	0					
ANR	49510	UnaryOperator	*		49472	0					
ANR	49511	Identifier	uinputp		49472	1					
ANR	49512	CallExpression	"vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		49472	1					
ANR	49513	Callee	vdagentd_uinput_create		49472	0					
ANR	49514	Identifier	vdagentd_uinput_create		49472	0					
ANR	49515	ArgumentList	uinput_device		49472	1					
ANR	49516	Argument	uinput_device		49472	0					
ANR	49517	Identifier	uinput_device		49472	0					
ANR	49518	Argument	agent_data -> width		49472	1					
ANR	49519	PtrMemberAccess	agent_data -> width		49472	0					
ANR	49520	Identifier	agent_data		49472	0					
ANR	49521	Identifier	width		49472	1					
ANR	49522	Argument	agent_data -> height		49472	2					
ANR	49523	PtrMemberAccess	agent_data -> height		49472	0					
ANR	49524	Identifier	agent_data		49472	0					
ANR	49525	Identifier	height		49472	1					
ANR	49526	Argument	agent_data -> screen_info		49472	3					
ANR	49527	PtrMemberAccess	agent_data -> screen_info		49472	0					
ANR	49528	Identifier	agent_data		49472	0					
ANR	49529	Identifier	screen_info		49472	1					
ANR	49530	Argument	agent_data -> screen_count		49472	4					
ANR	49531	PtrMemberAccess	agent_data -> screen_count		49472	0					
ANR	49532	Identifier	agent_data		49472	0					
ANR	49533	Identifier	screen_count		49472	1					
ANR	49534	Argument	debug > 1		49472	5					
ANR	49535	RelationalExpression	debug > 1		49472	0		>			
ANR	49536	Identifier	debug		49472	0					
ANR	49537	PrimaryExpression	1		49472	1					
ANR	49538	Argument	uinput_fake		49472	6					
ANR	49539	Identifier	uinput_fake		49472	0					
ANR	49540	IfStatement	if ( ! * uinputp )		49472	2					
ANR	49541	Condition	! * uinputp	169:12:5794:5802	49472	0	True				
ANR	49542	UnaryOperationExpression	! * uinputp		49472	0					
ANR	49543	UnaryOperator	!		49472	0					
ANR	49544	UnaryOperationExpression	* uinputp		49472	1					
ANR	49545	UnaryOperator	*		49472	0					
ANR	49546	Identifier	uinputp		49472	1					
ANR	49547	CompoundStatement		15:23:701:701	49472	1					
ANR	49548	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"	170:12:5819:5857	49472	0	True				
ANR	49549	CallExpression	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"		49472	0					
ANR	49550	Callee	syslog		49472	0					
ANR	49551	Identifier	syslog		49472	0					
ANR	49552	ArgumentList	LOG_CRIT		49472	1					
ANR	49553	Argument	LOG_CRIT		49472	0					
ANR	49554	Identifier	LOG_CRIT		49472	0					
ANR	49555	Argument	"""Fatal uinput error"""		49472	1					
ANR	49556	PrimaryExpression	"""Fatal uinput error"""		49472	0					
ANR	49557	ExpressionStatement	retval = 1	171:12:5871:5881	49472	1	True				
ANR	49558	AssignmentExpression	retval = 1		49472	0		=			
ANR	49559	Identifier	retval		49472	0					
ANR	49560	PrimaryExpression	1		49472	1					
ANR	49561	ExpressionStatement	quit = 1	172:12:5895:5903	49472	2	True				
ANR	49562	AssignmentExpression	quit = 1		49472	0		=			
ANR	49563	Identifier	quit		49472	0					
ANR	49564	PrimaryExpression	1		49472	1					
ANR	49565	ReturnType	void		49472	1					
ANR	49566	Identifier	do_client_mouse		49472	2					
ANR	49567	ParameterList	"struct vdagentd_uinput * * uinputp , VDAgentMouseState * mouse"		49472	3					
ANR	49568	Parameter	struct vdagentd_uinput * * uinputp	154:21:5043:5074	49472	0	True				
ANR	49569	ParameterType	struct vdagentd_uinput * *		49472	0					
ANR	49570	Identifier	uinputp		49472	1					
ANR	49571	Parameter	VDAgentMouseState * mouse	154:55:5077:5100	49472	1	True				
ANR	49572	ParameterType	VDAgentMouseState *		49472	0					
ANR	49573	Identifier	mouse		49472	1					
ANR	49574	CFGEntryNode	ENTRY		49472		True				
ANR	49575	CFGExitNode	EXIT		49472		True				
ANR	49576	Symbol	vdagentd_uinput_create		49472						
ANR	49577	Symbol	agent_data -> screen_count		49472						
ANR	49578	Symbol	debug		49472						
ANR	49579	Symbol	agent_data -> height		49472						
ANR	49580	Symbol	agent_data -> screen_info		49472						
ANR	49581	Symbol	* uinputp		49472						
ANR	49582	Symbol	* agent_data		49472						
ANR	49583	Symbol	agent_data -> width		49472						
ANR	49584	Symbol	retval		49472						
ANR	49585	Symbol	uinput_device		49472						
ANR	49586	Symbol	mouse		49472						
ANR	49587	Symbol	uinputp		49472						
ANR	49588	Symbol	active_session_conn		49472						
ANR	49589	Symbol	agent_data		49472						
ANR	49590	Symbol	uinput_fake		49472						
ANR	49591	Symbol	quit		49472						
ANR	49592	Symbol	udscs_get_user_data		49472						
ANR	49593	Symbol	LOG_CRIT		49472						
ANR	49594	Function	do_client_monitors	177:0:5924:7350							
ANR	49595	FunctionDef	"do_client_monitors (struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentMonitorsConfig * new_monitors)"		49594	0					
ANR	49596	CompoundStatement		179:0:6076:7350	49594	0					
ANR	49597	IdentifierDeclStatement	VDAgentReply reply ;	180:4:6082:6100	49594	0	True				
ANR	49598	IdentifierDecl	reply		49594	0					
ANR	49599	IdentifierDeclType	VDAgentReply		49594	0					
ANR	49600	Identifier	reply		49594	1					
ANR	49601	IdentifierDeclStatement	uint32_t size ;	181:4:6106:6119	49594	1	True				
ANR	49602	IdentifierDecl	size		49594	0					
ANR	49603	IdentifierDeclType	uint32_t		49594	0					
ANR	49604	Identifier	size		49594	1					
ANR	49605	ExpressionStatement	size = sizeof ( VDAgentMonitorsConfig ) + new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )	184:4:6193:6299	49594	2	True				
ANR	49606	AssignmentExpression	size = sizeof ( VDAgentMonitorsConfig ) + new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )		49594	0		=			
ANR	49607	Identifier	size		49594	0					
ANR	49608	AdditiveExpression	sizeof ( VDAgentMonitorsConfig ) + new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )		49594	1		+			
ANR	49609	SizeofExpression	sizeof ( VDAgentMonitorsConfig )		49594	0					
ANR	49610	Sizeof	sizeof		49594	0					
ANR	49611	SizeofOperand	VDAgentMonitorsConfig		49594	1					
ANR	49612	MultiplicativeExpression	new_monitors -> num_of_monitors * sizeof ( VDAgentMonConfig )		49594	1		*			
ANR	49613	PtrMemberAccess	new_monitors -> num_of_monitors		49594	0					
ANR	49614	Identifier	new_monitors		49594	0					
ANR	49615	Identifier	num_of_monitors		49594	1					
ANR	49616	SizeofExpression	sizeof ( VDAgentMonConfig )		49594	1					
ANR	49617	Sizeof	sizeof		49594	0					
ANR	49618	SizeofOperand	VDAgentMonConfig		49594	1					
ANR	49619	IfStatement	if ( message_header -> size != size )		49594	3					
ANR	49620	Condition	message_header -> size != size	186:8:6309:6336	49594	0	True				
ANR	49621	EqualityExpression	message_header -> size != size		49594	0		!=			
ANR	49622	PtrMemberAccess	message_header -> size		49594	0					
ANR	49623	Identifier	message_header		49594	0					
ANR	49624	Identifier	size		49594	1					
ANR	49625	Identifier	size		49594	1					
ANR	49626	CompoundStatement		8:38:262:262	49594	1					
ANR	49627	ExpressionStatement	"syslog ( LOG_ERR , ""invalid message size for VDAgentMonitorsConfig"" )"	187:8:6349:6414	49594	0	True				
ANR	49628	CallExpression	"syslog ( LOG_ERR , ""invalid message size for VDAgentMonitorsConfig"" )"		49594	0					
ANR	49629	Callee	syslog		49594	0					
ANR	49630	Identifier	syslog		49594	0					
ANR	49631	ArgumentList	LOG_ERR		49594	1					
ANR	49632	Argument	LOG_ERR		49594	0					
ANR	49633	Identifier	LOG_ERR		49594	0					
ANR	49634	Argument	"""invalid message size for VDAgentMonitorsConfig"""		49594	1					
ANR	49635	PrimaryExpression	"""invalid message size for VDAgentMonitorsConfig"""		49594	0					
ANR	49636	ReturnStatement	return ;	188:8:6424:6430	49594	1	True				
ANR	49637	ExpressionStatement	vdagentd_write_xorg_conf ( new_monitors )	191:4:6443:6481	49594	4	True				
ANR	49638	CallExpression	vdagentd_write_xorg_conf ( new_monitors )		49594	0					
ANR	49639	Callee	vdagentd_write_xorg_conf		49594	0					
ANR	49640	Identifier	vdagentd_write_xorg_conf		49594	0					
ANR	49641	ArgumentList	new_monitors		49594	1					
ANR	49642	Argument	new_monitors		49594	0					
ANR	49643	Identifier	new_monitors		49594	0					
ANR	49644	IfStatement	if ( ! mon_config || mon_config -> num_of_monitors != new_monitors -> num_of_monitors )		49594	5					
ANR	49645	Condition	! mon_config || mon_config -> num_of_monitors != new_monitors -> num_of_monitors	193:8:6492:6578	49594	0	True				
ANR	49646	OrExpression	! mon_config || mon_config -> num_of_monitors != new_monitors -> num_of_monitors		49594	0		||			
ANR	49647	UnaryOperationExpression	! mon_config		49594	0					
ANR	49648	UnaryOperator	!		49594	0					
ANR	49649	Identifier	mon_config		49594	1					
ANR	49650	EqualityExpression	mon_config -> num_of_monitors != new_monitors -> num_of_monitors		49594	1		!=			
ANR	49651	PtrMemberAccess	mon_config -> num_of_monitors		49594	0					
ANR	49652	Identifier	mon_config		49594	0					
ANR	49653	Identifier	num_of_monitors		49594	1					
ANR	49654	PtrMemberAccess	new_monitors -> num_of_monitors		49594	1					
ANR	49655	Identifier	new_monitors		49594	0					
ANR	49656	Identifier	num_of_monitors		49594	1					
ANR	49657	CompoundStatement		16:74:504:504	49594	1					
ANR	49658	ExpressionStatement	free ( mon_config )	195:8:6591:6607	49594	0	True				
ANR	49659	CallExpression	free ( mon_config )		49594	0					
ANR	49660	Callee	free		49594	0					
ANR	49661	Identifier	free		49594	0					
ANR	49662	ArgumentList	mon_config		49594	1					
ANR	49663	Argument	mon_config		49594	0					
ANR	49664	Identifier	mon_config		49594	0					
ANR	49665	ExpressionStatement	mon_config = malloc ( size )	196:8:6617:6642	49594	1	True				
ANR	49666	AssignmentExpression	mon_config = malloc ( size )		49594	0		=			
ANR	49667	Identifier	mon_config		49594	0					
ANR	49668	CallExpression	malloc ( size )		49594	1					
ANR	49669	Callee	malloc		49594	0					
ANR	49670	Identifier	malloc		49594	0					
ANR	49671	ArgumentList	size		49594	1					
ANR	49672	Argument	size		49594	0					
ANR	49673	Identifier	size		49594	0					
ANR	49674	IfStatement	if ( ! mon_config )		49594	2					
ANR	49675	Condition	! mon_config	197:12:6656:6666	49594	0	True				
ANR	49676	UnaryOperationExpression	! mon_config		49594	0					
ANR	49677	UnaryOperator	!		49594	0					
ANR	49678	Identifier	mon_config		49594	1					
ANR	49679	CompoundStatement		19:25:592:592	49594	1					
ANR	49680	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating monitors config"" )"	198:12:6683:6742	49594	0	True				
ANR	49681	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating monitors config"" )"		49594	0					
ANR	49682	Callee	syslog		49594	0					
ANR	49683	Identifier	syslog		49594	0					
ANR	49684	ArgumentList	LOG_ERR		49594	1					
ANR	49685	Argument	LOG_ERR		49594	0					
ANR	49686	Identifier	LOG_ERR		49594	0					
ANR	49687	Argument	"""out of memory allocating monitors config"""		49594	1					
ANR	49688	PrimaryExpression	"""out of memory allocating monitors config"""		49594	0					
ANR	49689	ReturnStatement	return ;	199:12:6756:6762	49594	1	True				
ANR	49690	ExpressionStatement	"memcpy ( mon_config , new_monitors , size )"	202:4:6784:6822	49594	6	True				
ANR	49691	CallExpression	"memcpy ( mon_config , new_monitors , size )"		49594	0					
ANR	49692	Callee	memcpy		49594	0					
ANR	49693	Identifier	memcpy		49594	0					
ANR	49694	ArgumentList	mon_config		49594	1					
ANR	49695	Argument	mon_config		49594	0					
ANR	49696	Identifier	mon_config		49594	0					
ANR	49697	Argument	new_monitors		49594	1					
ANR	49698	Identifier	new_monitors		49594	0					
ANR	49699	Argument	size		49594	2					
ANR	49700	Identifier	size		49594	0					
ANR	49701	IfStatement	if ( active_session_conn )		49594	7					
ANR	49702	Condition	active_session_conn	205:8:6889:6907	49594	0	True				
ANR	49703	Identifier	active_session_conn		49594	0					
ANR	49704	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , size )"	206:8:6918:7031	49594	1	True				
ANR	49705	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , size )"		49594	0					
ANR	49706	Callee	udscs_write		49594	0					
ANR	49707	Identifier	udscs_write		49594	0					
ANR	49708	ArgumentList	active_session_conn		49594	1					
ANR	49709	Argument	active_session_conn		49594	0					
ANR	49710	Identifier	active_session_conn		49594	0					
ANR	49711	Argument	VDAGENTD_MONITORS_CONFIG		49594	1					
ANR	49712	Identifier	VDAGENTD_MONITORS_CONFIG		49594	0					
ANR	49713	Argument	0		49594	2					
ANR	49714	PrimaryExpression	0		49594	0					
ANR	49715	Argument	0		49594	3					
ANR	49716	PrimaryExpression	0		49594	0					
ANR	49717	Argument	( uint8_t * ) mon_config		49594	4					
ANR	49718	CastExpression	( uint8_t * ) mon_config		49594	0					
ANR	49719	CastTarget	uint8_t *		49594	0					
ANR	49720	Identifier	mon_config		49594	1					
ANR	49721	Argument	size		49594	5					
ANR	49722	Identifier	size		49594	0					
ANR	49723	ExpressionStatement	reply . type = GUINT32_TO_LE ( VD_AGENT_MONITORS_CONFIG )	210:4:7114:7167	49594	8	True				
ANR	49724	AssignmentExpression	reply . type = GUINT32_TO_LE ( VD_AGENT_MONITORS_CONFIG )		49594	0		=			
ANR	49725	MemberAccess	reply . type		49594	0					
ANR	49726	Identifier	reply		49594	0					
ANR	49727	Identifier	type		49594	1					
ANR	49728	CallExpression	GUINT32_TO_LE ( VD_AGENT_MONITORS_CONFIG )		49594	1					
ANR	49729	Callee	GUINT32_TO_LE		49594	0					
ANR	49730	Identifier	GUINT32_TO_LE		49594	0					
ANR	49731	ArgumentList	VD_AGENT_MONITORS_CONFIG		49594	1					
ANR	49732	Argument	VD_AGENT_MONITORS_CONFIG		49594	0					
ANR	49733	Identifier	VD_AGENT_MONITORS_CONFIG		49594	0					
ANR	49734	ExpressionStatement	reply . error = GUINT32_TO_LE ( VD_AGENT_SUCCESS )	211:4:7173:7218	49594	9	True				
ANR	49735	AssignmentExpression	reply . error = GUINT32_TO_LE ( VD_AGENT_SUCCESS )		49594	0		=			
ANR	49736	MemberAccess	reply . error		49594	0					
ANR	49737	Identifier	reply		49594	0					
ANR	49738	Identifier	error		49594	1					
ANR	49739	CallExpression	GUINT32_TO_LE ( VD_AGENT_SUCCESS )		49594	1					
ANR	49740	Callee	GUINT32_TO_LE		49594	0					
ANR	49741	Identifier	GUINT32_TO_LE		49594	0					
ANR	49742	ArgumentList	VD_AGENT_SUCCESS		49594	1					
ANR	49743	Argument	VD_AGENT_SUCCESS		49594	0					
ANR	49744	Identifier	VD_AGENT_SUCCESS		49594	0					
ANR	49745	ExpressionStatement	"vdagent_virtio_port_write ( vport , port_nr , VD_AGENT_REPLY , 0 , ( uint8_t * ) & reply , sizeof ( reply ) )"	212:4:7224:7348	49594	10	True				
ANR	49746	CallExpression	"vdagent_virtio_port_write ( vport , port_nr , VD_AGENT_REPLY , 0 , ( uint8_t * ) & reply , sizeof ( reply ) )"		49594	0					
ANR	49747	Callee	vdagent_virtio_port_write		49594	0					
ANR	49748	Identifier	vdagent_virtio_port_write		49594	0					
ANR	49749	ArgumentList	vport		49594	1					
ANR	49750	Argument	vport		49594	0					
ANR	49751	Identifier	vport		49594	0					
ANR	49752	Argument	port_nr		49594	1					
ANR	49753	Identifier	port_nr		49594	0					
ANR	49754	Argument	VD_AGENT_REPLY		49594	2					
ANR	49755	Identifier	VD_AGENT_REPLY		49594	0					
ANR	49756	Argument	0		49594	3					
ANR	49757	PrimaryExpression	0		49594	0					
ANR	49758	Argument	( uint8_t * ) & reply		49594	4					
ANR	49759	CastExpression	( uint8_t * ) & reply		49594	0					
ANR	49760	CastTarget	uint8_t *		49594	0					
ANR	49761	UnaryOperationExpression	& reply		49594	1					
ANR	49762	UnaryOperator	&		49594	0					
ANR	49763	Identifier	reply		49594	1					
ANR	49764	Argument	sizeof ( reply )		49594	5					
ANR	49765	SizeofExpression	sizeof ( reply )		49594	0					
ANR	49766	Sizeof	sizeof		49594	0					
ANR	49767	SizeofOperand	reply		49594	1					
ANR	49768	ReturnType	static void		49594	1					
ANR	49769	Identifier	do_client_monitors		49594	2					
ANR	49770	ParameterList	"struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentMonitorsConfig * new_monitors"		49594	3					
ANR	49771	Parameter	struct vdagent_virtio_port * vport	177:31:5955:5987	49594	0	True				
ANR	49772	ParameterType	struct vdagent_virtio_port *		49594	0					
ANR	49773	Identifier	vport		49594	1					
ANR	49774	Parameter	int port_nr	177:66:5990:6000	49594	1	True				
ANR	49775	ParameterType	int		49594	0					
ANR	49776	Identifier	port_nr		49594	1					
ANR	49777	Parameter	VDAgentMessage * message_header	178:4:6007:6036	49594	2	True				
ANR	49778	ParameterType	VDAgentMessage *		49594	0					
ANR	49779	Identifier	message_header		49594	1					
ANR	49780	Parameter	VDAgentMonitorsConfig * new_monitors	178:36:6039:6073	49594	3	True				
ANR	49781	ParameterType	VDAgentMonitorsConfig *		49594	0					
ANR	49782	Identifier	new_monitors		49594	1					
ANR	49783	CFGEntryNode	ENTRY		49594		True				
ANR	49784	CFGExitNode	EXIT		49594		True				
ANR	49785	Symbol	malloc		49594						
ANR	49786	Symbol	port_nr		49594						
ANR	49787	Symbol	vport		49594						
ANR	49788	Symbol	* message_header		49594						
ANR	49789	Symbol	reply . type		49594						
ANR	49790	Symbol	message_header		49594						
ANR	49791	Symbol	new_monitors		49594						
ANR	49792	Symbol	new_monitors -> num_of_monitors		49594						
ANR	49793	Symbol	VD_AGENT_MONITORS_CONFIG		49594						
ANR	49794	Symbol	* new_monitors		49594						
ANR	49795	Symbol	GUINT32_TO_LE		49594						
ANR	49796	Symbol	& reply		49594						
ANR	49797	Symbol	message_header -> size		49594						
ANR	49798	Symbol	VD_AGENT_SUCCESS		49594						
ANR	49799	Symbol	size		49594						
ANR	49800	Symbol	active_session_conn		49594						
ANR	49801	Symbol	VDAGENTD_MONITORS_CONFIG		49594						
ANR	49802	Symbol	reply . error		49594						
ANR	49803	Symbol	mon_config -> num_of_monitors		49594						
ANR	49804	Symbol	* mon_config		49594						
ANR	49805	Symbol	LOG_ERR		49594						
ANR	49806	Symbol	mon_config		49594						
ANR	49807	Symbol	VD_AGENT_REPLY		49594						
ANR	49808	Symbol	reply		49594						
ANR	49809	Function	do_client_volume_sync	216:0:7353:7762							
ANR	49810	FunctionDef	"do_client_volume_sync (struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentAudioVolumeSync * avs)"		49809	0					
ANR	49811	CompoundStatement		219:0:7504:7762	49809	0					
ANR	49812	IfStatement	if ( active_session_conn == NULL )		49809	0					
ANR	49813	Condition	active_session_conn == NULL	220:8:7514:7540	49809	0	True				
ANR	49814	EqualityExpression	active_session_conn == NULL		49809	0		==			
ANR	49815	Identifier	active_session_conn		49809	0					
ANR	49816	Identifier	NULL		49809	1					
ANR	49817	CompoundStatement		2:37:38:38	49809	1					
ANR	49818	ExpressionStatement	"syslog ( LOG_DEBUG , ""No active session - Can't volume-sync"" )"	221:8:7553:7611	49809	0	True				
ANR	49819	CallExpression	"syslog ( LOG_DEBUG , ""No active session - Can't volume-sync"" )"		49809	0					
ANR	49820	Callee	syslog		49809	0					
ANR	49821	Identifier	syslog		49809	0					
ANR	49822	ArgumentList	LOG_DEBUG		49809	1					
ANR	49823	Argument	LOG_DEBUG		49809	0					
ANR	49824	Identifier	LOG_DEBUG		49809	0					
ANR	49825	Argument	"""No active session - Can't volume-sync"""		49809	1					
ANR	49826	PrimaryExpression	"""No active session - Can't volume-sync"""		49809	0					
ANR	49827	ReturnStatement	return ;	222:8:7621:7627	49809	1	True				
ANR	49828	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_AUDIO_VOLUME_SYNC , 0 , 0 , ( uint8_t * ) avs , message_header -> size )"	225:4:7640:7760	49809	1	True				
ANR	49829	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_AUDIO_VOLUME_SYNC , 0 , 0 , ( uint8_t * ) avs , message_header -> size )"		49809	0					
ANR	49830	Callee	udscs_write		49809	0					
ANR	49831	Identifier	udscs_write		49809	0					
ANR	49832	ArgumentList	active_session_conn		49809	1					
ANR	49833	Argument	active_session_conn		49809	0					
ANR	49834	Identifier	active_session_conn		49809	0					
ANR	49835	Argument	VDAGENTD_AUDIO_VOLUME_SYNC		49809	1					
ANR	49836	Identifier	VDAGENTD_AUDIO_VOLUME_SYNC		49809	0					
ANR	49837	Argument	0		49809	2					
ANR	49838	PrimaryExpression	0		49809	0					
ANR	49839	Argument	0		49809	3					
ANR	49840	PrimaryExpression	0		49809	0					
ANR	49841	Argument	( uint8_t * ) avs		49809	4					
ANR	49842	CastExpression	( uint8_t * ) avs		49809	0					
ANR	49843	CastTarget	uint8_t *		49809	0					
ANR	49844	Identifier	avs		49809	1					
ANR	49845	Argument	message_header -> size		49809	5					
ANR	49846	PtrMemberAccess	message_header -> size		49809	0					
ANR	49847	Identifier	message_header		49809	0					
ANR	49848	Identifier	size		49809	1					
ANR	49849	ReturnType	static void		49809	1					
ANR	49850	Identifier	do_client_volume_sync		49809	2					
ANR	49851	ParameterList	"struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , VDAgentAudioVolumeSync * avs"		49809	3					
ANR	49852	Parameter	struct vdagent_virtio_port * vport	216:34:7387:7419	49809	0	True				
ANR	49853	ParameterType	struct vdagent_virtio_port *		49809	0					
ANR	49854	Identifier	vport		49809	1					
ANR	49855	Parameter	int port_nr	216:69:7422:7432	49809	1	True				
ANR	49856	ParameterType	int		49809	0					
ANR	49857	Identifier	port_nr		49809	1					
ANR	49858	Parameter	VDAgentMessage * message_header	217:4:7439:7468	49809	2	True				
ANR	49859	ParameterType	VDAgentMessage *		49809	0					
ANR	49860	Identifier	message_header		49809	1					
ANR	49861	Parameter	VDAgentAudioVolumeSync * avs	218:4:7475:7501	49809	3	True				
ANR	49862	ParameterType	VDAgentAudioVolumeSync *		49809	0					
ANR	49863	Identifier	avs		49809	1					
ANR	49864	CFGEntryNode	ENTRY		49809		True				
ANR	49865	CFGExitNode	EXIT		49809		True				
ANR	49866	Symbol	message_header -> size		49809						
ANR	49867	Symbol	port_nr		49809						
ANR	49868	Symbol	VDAGENTD_AUDIO_VOLUME_SYNC		49809						
ANR	49869	Symbol	NULL		49809						
ANR	49870	Symbol	vport		49809						
ANR	49871	Symbol	active_session_conn		49809						
ANR	49872	Symbol	* message_header		49809						
ANR	49873	Symbol	message_header		49809						
ANR	49874	Symbol	LOG_DEBUG		49809						
ANR	49875	Symbol	avs		49809						
ANR	49876	Function	do_client_capabilities	229:0:7765:8676							
ANR	49877	FunctionDef	"do_client_capabilities (struct vdagent_virtio_port * vport , VDAgentMessage * message_header , VDAgentAnnounceCapabilities * caps)"		49876	0					
ANR	49878	CompoundStatement		232:0:7910:8676	49876	0					
ANR	49879	IdentifierDeclStatement	int new_size = VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size ) ;	233:4:7916:7985	49876	0	True				
ANR	49880	IdentifierDecl	new_size = VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size )		49876	0					
ANR	49881	IdentifierDeclType	int		49876	0					
ANR	49882	Identifier	new_size		49876	1					
ANR	49883	AssignmentExpression	new_size = VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size )		49876	2		=			
ANR	49884	Identifier	new_size		49876	0					
ANR	49885	CallExpression	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE ( message_header -> size )		49876	1					
ANR	49886	Callee	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE		49876	0					
ANR	49887	Identifier	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE		49876	0					
ANR	49888	ArgumentList	message_header -> size		49876	1					
ANR	49889	Argument	message_header -> size		49876	0					
ANR	49890	PtrMemberAccess	message_header -> size		49876	0					
ANR	49891	Identifier	message_header		49876	0					
ANR	49892	Identifier	size		49876	1					
ANR	49893	IfStatement	if ( capabilities_size != new_size )		49876	1					
ANR	49894	Condition	capabilities_size != new_size	235:8:7996:8024	49876	0	True				
ANR	49895	EqualityExpression	capabilities_size != new_size		49876	0		!=			
ANR	49896	Identifier	capabilities_size		49876	0					
ANR	49897	Identifier	new_size		49876	1					
ANR	49898	CompoundStatement		4:39:116:116	49876	1					
ANR	49899	ExpressionStatement	capabilities_size = new_size	236:8:8037:8065	49876	0	True				
ANR	49900	AssignmentExpression	capabilities_size = new_size		49876	0		=			
ANR	49901	Identifier	capabilities_size		49876	0					
ANR	49902	Identifier	new_size		49876	1					
ANR	49903	ExpressionStatement	free ( capabilities )	237:8:8075:8093	49876	1	True				
ANR	49904	CallExpression	free ( capabilities )		49876	0					
ANR	49905	Callee	free		49876	0					
ANR	49906	Identifier	free		49876	0					
ANR	49907	ArgumentList	capabilities		49876	1					
ANR	49908	Argument	capabilities		49876	0					
ANR	49909	Identifier	capabilities		49876	0					
ANR	49910	ExpressionStatement	capabilities = malloc ( capabilities_size * sizeof ( uint32_t ) )	238:8:8103:8162	49876	2	True				
ANR	49911	AssignmentExpression	capabilities = malloc ( capabilities_size * sizeof ( uint32_t ) )		49876	0		=			
ANR	49912	Identifier	capabilities		49876	0					
ANR	49913	CallExpression	malloc ( capabilities_size * sizeof ( uint32_t ) )		49876	1					
ANR	49914	Callee	malloc		49876	0					
ANR	49915	Identifier	malloc		49876	0					
ANR	49916	ArgumentList	capabilities_size * sizeof ( uint32_t )		49876	1					
ANR	49917	Argument	capabilities_size * sizeof ( uint32_t )		49876	0					
ANR	49918	MultiplicativeExpression	capabilities_size * sizeof ( uint32_t )		49876	0		*			
ANR	49919	Identifier	capabilities_size		49876	0					
ANR	49920	SizeofExpression	sizeof ( uint32_t )		49876	1					
ANR	49921	Sizeof	sizeof		49876	0					
ANR	49922	SizeofOperand	uint32_t		49876	1					
ANR	49923	IfStatement	if ( ! capabilities )		49876	3					
ANR	49924	Condition	! capabilities	239:12:8176:8188	49876	0	True				
ANR	49925	UnaryOperationExpression	! capabilities		49876	0					
ANR	49926	UnaryOperator	!		49876	0					
ANR	49927	Identifier	capabilities		49876	1					
ANR	49928	CompoundStatement		8:27:280:280	49876	1					
ANR	49929	ExpressionStatement	"syslog ( LOG_ERR , ""oom allocating capabilities array (read)"" )"	240:12:8205:8264	49876	0	True				
ANR	49930	CallExpression	"syslog ( LOG_ERR , ""oom allocating capabilities array (read)"" )"		49876	0					
ANR	49931	Callee	syslog		49876	0					
ANR	49932	Identifier	syslog		49876	0					
ANR	49933	ArgumentList	LOG_ERR		49876	1					
ANR	49934	Argument	LOG_ERR		49876	0					
ANR	49935	Identifier	LOG_ERR		49876	0					
ANR	49936	Argument	"""oom allocating capabilities array (read)"""		49876	1					
ANR	49937	PrimaryExpression	"""oom allocating capabilities array (read)"""		49876	0					
ANR	49938	ExpressionStatement	capabilities_size = 0	241:12:8278:8299	49876	1	True				
ANR	49939	AssignmentExpression	capabilities_size = 0		49876	0		=			
ANR	49940	Identifier	capabilities_size		49876	0					
ANR	49941	PrimaryExpression	0		49876	1					
ANR	49942	ReturnStatement	return ;	242:12:8313:8319	49876	2	True				
ANR	49943	ExpressionStatement	"memcpy ( capabilities , caps -> caps , capabilities_size * sizeof ( uint32_t ) )"	245:4:8341:8411	49876	2	True				
ANR	49944	CallExpression	"memcpy ( capabilities , caps -> caps , capabilities_size * sizeof ( uint32_t ) )"		49876	0					
ANR	49945	Callee	memcpy		49876	0					
ANR	49946	Identifier	memcpy		49876	0					
ANR	49947	ArgumentList	capabilities		49876	1					
ANR	49948	Argument	capabilities		49876	0					
ANR	49949	Identifier	capabilities		49876	0					
ANR	49950	Argument	caps -> caps		49876	1					
ANR	49951	PtrMemberAccess	caps -> caps		49876	0					
ANR	49952	Identifier	caps		49876	0					
ANR	49953	Identifier	caps		49876	1					
ANR	49954	Argument	capabilities_size * sizeof ( uint32_t )		49876	2					
ANR	49955	MultiplicativeExpression	capabilities_size * sizeof ( uint32_t )		49876	0		*			
ANR	49956	Identifier	capabilities_size		49876	0					
ANR	49957	SizeofExpression	sizeof ( uint32_t )		49876	1					
ANR	49958	Sizeof	sizeof		49876	0					
ANR	49959	SizeofOperand	uint32_t		49876	1					
ANR	49960	IfStatement	if ( caps -> request )		49876	3					
ANR	49961	Condition	caps -> request	246:8:8421:8433	49876	0	True				
ANR	49962	PtrMemberAccess	caps -> request		49876	0					
ANR	49963	Identifier	caps		49876	0					
ANR	49964	Identifier	request		49876	1					
ANR	49965	CompoundStatement		15:23:525:525	49876	1					
ANR	49966	ExpressionStatement	do_client_disconnect ( )	248:8:8505:8527	49876	0	True				
ANR	49967	CallExpression	do_client_disconnect ( )		49876	0					
ANR	49968	Callee	do_client_disconnect		49876	0					
ANR	49969	Identifier	do_client_disconnect		49876	0					
ANR	49970	ArgumentList			49876	1					
ANR	49971	IfStatement	if ( debug )		49876	1					
ANR	49972	Condition	debug	249:12:8541:8545	49876	0	True				
ANR	49973	Identifier	debug		49876	0					
ANR	49974	ExpressionStatement	"syslog ( LOG_DEBUG , ""New client connected"" )"	250:12:8560:8601	49876	1	True				
ANR	49975	CallExpression	"syslog ( LOG_DEBUG , ""New client connected"" )"		49876	0					
ANR	49976	Callee	syslog		49876	0					
ANR	49977	Identifier	syslog		49876	0					
ANR	49978	ArgumentList	LOG_DEBUG		49876	1					
ANR	49979	Argument	LOG_DEBUG		49876	0					
ANR	49980	Identifier	LOG_DEBUG		49876	0					
ANR	49981	Argument	"""New client connected"""		49876	1					
ANR	49982	PrimaryExpression	"""New client connected"""		49876	0					
ANR	49983	ExpressionStatement	client_connected = 1	251:8:8611:8631	49876	2	True				
ANR	49984	AssignmentExpression	client_connected = 1		49876	0		=			
ANR	49985	Identifier	client_connected		49876	0					
ANR	49986	PrimaryExpression	1		49876	1					
ANR	49987	ExpressionStatement	"send_capabilities ( vport , 0 )"	252:8:8641:8668	49876	3	True				
ANR	49988	CallExpression	"send_capabilities ( vport , 0 )"		49876	0					
ANR	49989	Callee	send_capabilities		49876	0					
ANR	49990	Identifier	send_capabilities		49876	0					
ANR	49991	ArgumentList	vport		49876	1					
ANR	49992	Argument	vport		49876	0					
ANR	49993	Identifier	vport		49876	0					
ANR	49994	Argument	0		49876	1					
ANR	49995	PrimaryExpression	0		49876	0					
ANR	49996	ReturnType	static void		49876	1					
ANR	49997	Identifier	do_client_capabilities		49876	2					
ANR	49998	ParameterList	"struct vdagent_virtio_port * vport , VDAgentMessage * message_header , VDAgentAnnounceCapabilities * caps"		49876	3					
ANR	49999	Parameter	struct vdagent_virtio_port * vport	229:35:7800:7832	49876	0	True				
ANR	50000	ParameterType	struct vdagent_virtio_port *		49876	0					
ANR	50001	Identifier	vport		49876	1					
ANR	50002	Parameter	VDAgentMessage * message_header	230:4:7839:7868	49876	1	True				
ANR	50003	ParameterType	VDAgentMessage *		49876	0					
ANR	50004	Identifier	message_header		49876	1					
ANR	50005	Parameter	VDAgentAnnounceCapabilities * caps	231:4:7875:7907	49876	2	True				
ANR	50006	ParameterType	VDAgentAnnounceCapabilities *		49876	0					
ANR	50007	Identifier	caps		49876	1					
ANR	50008	CFGEntryNode	ENTRY		49876		True				
ANR	50009	CFGExitNode	EXIT		49876		True				
ANR	50010	Symbol	malloc		49876						
ANR	50011	Symbol	capabilities		49876						
ANR	50012	Symbol	debug		49876						
ANR	50013	Symbol	vport		49876						
ANR	50014	Symbol	caps -> caps		49876						
ANR	50015	Symbol	* message_header		49876						
ANR	50016	Symbol	client_connected		49876						
ANR	50017	Symbol	message_header		49876						
ANR	50018	Symbol	* caps		49876						
ANR	50019	Symbol	caps		49876						
ANR	50020	Symbol	message_header -> size		49876						
ANR	50021	Symbol	capabilities_size		49876						
ANR	50022	Symbol	caps -> request		49876						
ANR	50023	Symbol	new_size		49876						
ANR	50024	Symbol	LOG_ERR		49876						
ANR	50025	Symbol	LOG_DEBUG		49876						
ANR	50026	Symbol	VD_AGENT_CAPS_SIZE_FROM_MSG_SIZE		49876						
ANR	50027	Function	do_client_clipboard	256:0:8679:10302							
ANR	50028	FunctionDef	"do_client_clipboard (struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data)"		50027	0					
ANR	50029	CompoundStatement		258:0:8797:10302	50027	0					
ANR	50030	IdentifierDeclStatement	"uint32_t msg_type = 0 , data_type = 0 , size = message_header -> size ;"	259:4:8803:8868	50027	0	True				
ANR	50031	IdentifierDecl	msg_type = 0		50027	0					
ANR	50032	IdentifierDeclType	uint32_t		50027	0					
ANR	50033	Identifier	msg_type		50027	1					
ANR	50034	AssignmentExpression	msg_type = 0		50027	2		=			
ANR	50035	Identifier	msg_type		50027	0					
ANR	50036	PrimaryExpression	0		50027	1					
ANR	50037	IdentifierDecl	data_type = 0		50027	1					
ANR	50038	IdentifierDeclType	uint32_t		50027	0					
ANR	50039	Identifier	data_type		50027	1					
ANR	50040	AssignmentExpression	data_type = 0		50027	2		=			
ANR	50041	Identifier	data_type		50027	0					
ANR	50042	PrimaryExpression	0		50027	1					
ANR	50043	IdentifierDecl	size = message_header -> size		50027	2					
ANR	50044	IdentifierDeclType	uint32_t		50027	0					
ANR	50045	Identifier	size		50027	1					
ANR	50046	AssignmentExpression	size = message_header -> size		50027	2		=			
ANR	50047	Identifier	size		50027	0					
ANR	50048	PtrMemberAccess	message_header -> size		50027	1					
ANR	50049	Identifier	message_header		50027	0					
ANR	50050	Identifier	size		50027	1					
ANR	50051	IdentifierDeclStatement	uint8_t selection = VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD ;	260:4:8874:8932	50027	1	True				
ANR	50052	IdentifierDecl	selection = VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		50027	0					
ANR	50053	IdentifierDeclType	uint8_t		50027	0					
ANR	50054	Identifier	selection		50027	1					
ANR	50055	AssignmentExpression	selection = VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		50027	2		=			
ANR	50056	Identifier	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		50027	0					
ANR	50057	Identifier	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		50027	1					
ANR	50058	IfStatement	if ( ! active_session_conn )		50027	2					
ANR	50059	Condition	! active_session_conn	262:8:8943:8962	50027	0	True				
ANR	50060	UnaryOperationExpression	! active_session_conn		50027	0					
ANR	50061	UnaryOperator	!		50027	0					
ANR	50062	Identifier	active_session_conn		50027	1					
ANR	50063	CompoundStatement		5:30:167:167	50027	1					
ANR	50064	Statement	syslog	263:8:8975:8980	50027	0	True				
ANR	50065	Statement	(	263:14:8981:8981	50027	1	True				
ANR	50066	Statement	LOG_WARNING	263:15:8982:8992	50027	2	True				
ANR	50067	Statement	","	263:26:8993:8993	50027	3	True				
ANR	50068	Statement	"""Could not find an agent connection belonging to the """	264:15:9010:9063	50027	4	True				
ANR	50069	Statement	"""active session, ignoring client clipboard request"""	265:15:9080:9130	50027	5	True				
ANR	50070	Statement	)	265:66:9131:9131	50027	6	True				
ANR	50071	ExpressionStatement		265:67:9132:9132	50027	7	True				
ANR	50072	ReturnStatement	return ;	266:8:9142:9148	50027	8	True				
ANR	50073	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		50027	3					
ANR	50074	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	269:8:9165:9286	50027	0	True				
ANR	50075	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		50027	0					
ANR	50076	Callee	VD_AGENT_HAS_CAPABILITY		50027	0					
ANR	50077	Identifier	VD_AGENT_HAS_CAPABILITY		50027	0					
ANR	50078	ArgumentList	capabilities		50027	1					
ANR	50079	Argument	capabilities		50027	0					
ANR	50080	Identifier	capabilities		50027	0					
ANR	50081	Argument	capabilities_size		50027	1					
ANR	50082	Identifier	capabilities_size		50027	0					
ANR	50083	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		50027	2					
ANR	50084	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		50027	0					
ANR	50085	CompoundStatement		13:67:491:491	50027	1					
ANR	50086	ExpressionStatement	selection = data [ 0 ]	271:6:9297:9316	50027	0	True				
ANR	50087	AssignmentExpression	selection = data [ 0 ]		50027	0		=			
ANR	50088	Identifier	selection		50027	0					
ANR	50089	ArrayIndexing	data [ 0 ]		50027	1					
ANR	50090	Identifier	data		50027	0					
ANR	50091	PrimaryExpression	0		50027	1					
ANR	50092	ExpressionStatement	data += 4	272:6:9324:9333	50027	1	True				
ANR	50093	AssignmentExpression	data += 4		50027	0		+=			
ANR	50094	Identifier	data		50027	0					
ANR	50095	PrimaryExpression	4		50027	1					
ANR	50096	ExpressionStatement	size -= 4	273:6:9341:9350	50027	2	True				
ANR	50097	AssignmentExpression	size -= 4		50027	0		-=			
ANR	50098	Identifier	size		50027	0					
ANR	50099	PrimaryExpression	4		50027	1					
ANR	50100	SwitchStatement	switch ( message_header -> type )		50027	4					
ANR	50101	Condition	message_header -> type	276:12:9371:9390	50027	0	True				
ANR	50102	PtrMemberAccess	message_header -> type		50027	0					
ANR	50103	Identifier	message_header		50027	0					
ANR	50104	Identifier	type		50027	1					
ANR	50105	CompoundStatement		19:34:595:595	50027	1					
ANR	50106	Label	case VD_AGENT_CLIPBOARD_GRAB :	277:4:9399:9427	50027	0	True				
ANR	50107	Identifier	VD_AGENT_CLIPBOARD_GRAB		50027	0					
ANR	50108	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_GRAB	278:8:9437:9471	50027	1	True				
ANR	50109	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_GRAB		50027	0		=			
ANR	50110	Identifier	msg_type		50027	0					
ANR	50111	Identifier	VDAGENTD_CLIPBOARD_GRAB		50027	1					
ANR	50112	ExpressionStatement	agent_owns_clipboard [ selection ] = 0	279:8:9481:9516	50027	2	True				
ANR	50113	AssignmentExpression	agent_owns_clipboard [ selection ] = 0		50027	0		=			
ANR	50114	ArrayIndexing	agent_owns_clipboard [ selection ]		50027	0					
ANR	50115	Identifier	agent_owns_clipboard		50027	0					
ANR	50116	Identifier	selection		50027	1					
ANR	50117	PrimaryExpression	0		50027	1					
ANR	50118	BreakStatement	break ;	280:8:9526:9531	50027	3	True				
ANR	50119	Label	case VD_AGENT_CLIPBOARD_REQUEST :	281:4:9537:9568	50027	4	True				
ANR	50120	Identifier	VD_AGENT_CLIPBOARD_REQUEST		50027	0					
ANR	50121	CompoundStatement		25:8:782:844	50027	5					
ANR	50122	IdentifierDeclStatement	VDAgentClipboardRequest * req = ( VDAgentClipboardRequest * ) data ;	282:8:9580:9642	50027	0	True				
ANR	50123	IdentifierDecl	* req = ( VDAgentClipboardRequest * ) data		50027	0					
ANR	50124	IdentifierDeclType	VDAgentClipboardRequest *		50027	0					
ANR	50125	Identifier	req		50027	1					
ANR	50126	AssignmentExpression	* req = ( VDAgentClipboardRequest * ) data		50027	2		=			
ANR	50127	Identifier	req		50027	0					
ANR	50128	CastExpression	( VDAgentClipboardRequest * ) data		50027	1					
ANR	50129	CastTarget	VDAgentClipboardRequest *		50027	0					
ANR	50130	Identifier	data		50027	1					
ANR	50131	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_REQUEST	283:8:9652:9689	50027	1	True				
ANR	50132	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_REQUEST		50027	0		=			
ANR	50133	Identifier	msg_type		50027	0					
ANR	50134	Identifier	VDAGENTD_CLIPBOARD_REQUEST		50027	1					
ANR	50135	ExpressionStatement	data_type = req -> type	284:8:9699:9720	50027	2	True				
ANR	50136	AssignmentExpression	data_type = req -> type		50027	0		=			
ANR	50137	Identifier	data_type		50027	0					
ANR	50138	PtrMemberAccess	req -> type		50027	1					
ANR	50139	Identifier	req		50027	0					
ANR	50140	Identifier	type		50027	1					
ANR	50141	ExpressionStatement	data = NULL	285:8:9730:9741	50027	3	True				
ANR	50142	AssignmentExpression	data = NULL		50027	0		=			
ANR	50143	Identifier	data		50027	0					
ANR	50144	Identifier	NULL		50027	1					
ANR	50145	ExpressionStatement	size = 0	286:8:9751:9759	50027	4	True				
ANR	50146	AssignmentExpression	size = 0		50027	0		=			
ANR	50147	Identifier	size		50027	0					
ANR	50148	PrimaryExpression	0		50027	1					
ANR	50149	BreakStatement	break ;	287:8:9769:9774	50027	5	True				
ANR	50150	Label	case VD_AGENT_CLIPBOARD :	289:4:9786:9809	50027	6	True				
ANR	50151	Identifier	VD_AGENT_CLIPBOARD		50027	0					
ANR	50152	CompoundStatement		33:8:1023:1077	50027	7					
ANR	50153	IdentifierDeclStatement	VDAgentClipboard * clipboard = ( VDAgentClipboard * ) data ;	290:8:9821:9875	50027	0	True				
ANR	50154	IdentifierDecl	* clipboard = ( VDAgentClipboard * ) data		50027	0					
ANR	50155	IdentifierDeclType	VDAgentClipboard *		50027	0					
ANR	50156	Identifier	clipboard		50027	1					
ANR	50157	AssignmentExpression	* clipboard = ( VDAgentClipboard * ) data		50027	2		=			
ANR	50158	Identifier	clipboard		50027	0					
ANR	50159	CastExpression	( VDAgentClipboard * ) data		50027	1					
ANR	50160	CastTarget	VDAgentClipboard *		50027	0					
ANR	50161	Identifier	data		50027	1					
ANR	50162	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_DATA	291:8:9885:9919	50027	1	True				
ANR	50163	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_DATA		50027	0		=			
ANR	50164	Identifier	msg_type		50027	0					
ANR	50165	Identifier	VDAGENTD_CLIPBOARD_DATA		50027	1					
ANR	50166	ExpressionStatement	data_type = clipboard -> type	292:8:9929:9956	50027	2	True				
ANR	50167	AssignmentExpression	data_type = clipboard -> type		50027	0		=			
ANR	50168	Identifier	data_type		50027	0					
ANR	50169	PtrMemberAccess	clipboard -> type		50027	1					
ANR	50170	Identifier	clipboard		50027	0					
ANR	50171	Identifier	type		50027	1					
ANR	50172	ExpressionStatement	size = size - sizeof ( VDAgentClipboard )	293:8:9966:10004	50027	3	True				
ANR	50173	AssignmentExpression	size = size - sizeof ( VDAgentClipboard )		50027	0		=			
ANR	50174	Identifier	size		50027	0					
ANR	50175	AdditiveExpression	size - sizeof ( VDAgentClipboard )		50027	1		-			
ANR	50176	Identifier	size		50027	0					
ANR	50177	SizeofExpression	sizeof ( VDAgentClipboard )		50027	1					
ANR	50178	Sizeof	sizeof		50027	0					
ANR	50179	SizeofOperand	VDAgentClipboard		50027	1					
ANR	50180	ExpressionStatement	data = clipboard -> data	294:8:10014:10036	50027	4	True				
ANR	50181	AssignmentExpression	data = clipboard -> data		50027	0		=			
ANR	50182	Identifier	data		50027	0					
ANR	50183	PtrMemberAccess	clipboard -> data		50027	1					
ANR	50184	Identifier	clipboard		50027	0					
ANR	50185	Identifier	data		50027	1					
ANR	50186	BreakStatement	break ;	295:8:10046:10051	50027	5	True				
ANR	50187	Label	case VD_AGENT_CLIPBOARD_RELEASE :	297:4:10063:10094	50027	8	True				
ANR	50188	Identifier	VD_AGENT_CLIPBOARD_RELEASE		50027	0					
ANR	50189	ExpressionStatement	msg_type = VDAGENTD_CLIPBOARD_RELEASE	298:8:10104:10141	50027	9	True				
ANR	50190	AssignmentExpression	msg_type = VDAGENTD_CLIPBOARD_RELEASE		50027	0		=			
ANR	50191	Identifier	msg_type		50027	0					
ANR	50192	Identifier	VDAGENTD_CLIPBOARD_RELEASE		50027	1					
ANR	50193	ExpressionStatement	data = NULL	299:8:10151:10162	50027	10	True				
ANR	50194	AssignmentExpression	data = NULL		50027	0		=			
ANR	50195	Identifier	data		50027	0					
ANR	50196	Identifier	NULL		50027	1					
ANR	50197	ExpressionStatement	size = 0	300:8:10172:10180	50027	11	True				
ANR	50198	AssignmentExpression	size = 0		50027	0		=			
ANR	50199	Identifier	size		50027	0					
ANR	50200	PrimaryExpression	0		50027	1					
ANR	50201	BreakStatement	break ;	301:8:10190:10195	50027	12	True				
ANR	50202	ExpressionStatement	"udscs_write ( active_session_conn , msg_type , selection , data_type , data , size )"	304:4:10208:10300	50027	5	True				
ANR	50203	CallExpression	"udscs_write ( active_session_conn , msg_type , selection , data_type , data , size )"		50027	0					
ANR	50204	Callee	udscs_write		50027	0					
ANR	50205	Identifier	udscs_write		50027	0					
ANR	50206	ArgumentList	active_session_conn		50027	1					
ANR	50207	Argument	active_session_conn		50027	0					
ANR	50208	Identifier	active_session_conn		50027	0					
ANR	50209	Argument	msg_type		50027	1					
ANR	50210	Identifier	msg_type		50027	0					
ANR	50211	Argument	selection		50027	2					
ANR	50212	Identifier	selection		50027	0					
ANR	50213	Argument	data_type		50027	3					
ANR	50214	Identifier	data_type		50027	0					
ANR	50215	Argument	data		50027	4					
ANR	50216	Identifier	data		50027	0					
ANR	50217	Argument	size		50027	5					
ANR	50218	Identifier	size		50027	0					
ANR	50219	ReturnType	static void		50027	1					
ANR	50220	Identifier	do_client_clipboard		50027	2					
ANR	50221	ParameterList	"struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data"		50027	3					
ANR	50222	Parameter	struct vdagent_virtio_port * vport	256:32:8711:8743	50027	0	True				
ANR	50223	ParameterType	struct vdagent_virtio_port *		50027	0					
ANR	50224	Identifier	vport		50027	1					
ANR	50225	Parameter	VDAgentMessage * message_header	257:4:8750:8779	50027	1	True				
ANR	50226	ParameterType	VDAgentMessage *		50027	0					
ANR	50227	Identifier	message_header		50027	1					
ANR	50228	Parameter	uint8_t * data	257:36:8782:8794	50027	2	True				
ANR	50229	ParameterType	uint8_t *		50027	0					
ANR	50230	Identifier	data		50027	1					
ANR	50231	CFGEntryNode	ENTRY		50027		True				
ANR	50232	CFGExitNode	EXIT		50027		True				
ANR	50233	Symbol	vport		50027						
ANR	50234	Symbol	data		50027						
ANR	50235	Symbol	message_header		50027						
ANR	50236	Symbol	message_header -> type		50027						
ANR	50237	Symbol	* req		50027						
ANR	50238	Symbol	clipboard -> data		50027						
ANR	50239	Symbol	VDAGENTD_CLIPBOARD_RELEASE		50027						
ANR	50240	Symbol	clipboard		50027						
ANR	50241	Symbol	agent_owns_clipboard		50027						
ANR	50242	Symbol	message_header -> size		50027						
ANR	50243	Symbol	active_session_conn		50027						
ANR	50244	Symbol	capabilities_size		50027						
ANR	50245	Symbol	clipboard -> type		50027						
ANR	50246	Symbol	VDAGENTD_CLIPBOARD_GRAB		50027						
ANR	50247	Symbol	VDAGENTD_CLIPBOARD_REQUEST		50027						
ANR	50248	Symbol	req		50027						
ANR	50249	Symbol	capabilities		50027						
ANR	50250	Symbol	NULL		50027						
ANR	50251	Symbol	* message_header		50027						
ANR	50252	Symbol	req -> type		50027						
ANR	50253	Symbol	* clipboard		50027						
ANR	50254	Symbol	size		50027						
ANR	50255	Symbol	selection		50027						
ANR	50256	Symbol	* agent_owns_clipboard		50027						
ANR	50257	Symbol	data_type		50027						
ANR	50258	Symbol	VDAGENTD_CLIPBOARD_DATA		50027						
ANR	50259	Symbol	msg_type		50027						
ANR	50260	Symbol	* data		50027						
ANR	50261	Symbol	* selection		50027						
ANR	50262	Symbol	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		50027						
ANR	50263	Symbol	VD_AGENT_HAS_CAPABILITY		50027						
ANR	50264	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		50027						
ANR	50265	Function	send_file_xfer_status	310:0:10446:11620							
ANR	50266	FunctionDef	"send_file_xfer_status (struct vdagent_virtio_port * vport , const char * msg , uint32_t id , uint32_t xfer_status , const uint8_t * data , uint32_t data_size)"		50265	0					
ANR	50267	CompoundStatement		313:0:10676:11620	50265	0					
ANR	50268	IdentifierDeclStatement	VDAgentFileXferStatusMessage * status ;	314:4:10682:10718	50265	0	True				
ANR	50269	IdentifierDecl	* status		50265	0					
ANR	50270	IdentifierDeclType	VDAgentFileXferStatusMessage *		50265	0					
ANR	50271	Identifier	status		50265	1					
ANR	50272	IfStatement	"if ( xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS && ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS ) )"		50265	1					
ANR	50273	Condition	"xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS && ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"	318:8:10854:11042	50265	0	True				
ANR	50274	AndExpression	"xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS && ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"		50265	0		&&			
ANR	50275	RelationalExpression	xfer_status > VD_AGENT_FILE_XFER_STATUS_SUCCESS		50265	0		>			
ANR	50276	Identifier	xfer_status		50265	0					
ANR	50277	Identifier	VD_AGENT_FILE_XFER_STATUS_SUCCESS		50265	1					
ANR	50278	UnaryOperationExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"		50265	1					
ANR	50279	UnaryOperator	!		50265	0					
ANR	50280	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS )"		50265	1					
ANR	50281	Callee	VD_AGENT_HAS_CAPABILITY		50265	0					
ANR	50282	Identifier	VD_AGENT_HAS_CAPABILITY		50265	0					
ANR	50283	ArgumentList	capabilities		50265	1					
ANR	50284	Argument	capabilities		50265	0					
ANR	50285	Identifier	capabilities		50265	0					
ANR	50286	Argument	capabilities_size		50265	1					
ANR	50287	Identifier	capabilities_size		50265	0					
ANR	50288	Argument	VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS		50265	2					
ANR	50289	Identifier	VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS		50265	0					
ANR	50290	CompoundStatement		8:74:368:368	50265	1					
ANR	50291	ExpressionStatement	xfer_status = VD_AGENT_FILE_XFER_STATUS_ERROR	321:8:11055:11100	50265	0	True				
ANR	50292	AssignmentExpression	xfer_status = VD_AGENT_FILE_XFER_STATUS_ERROR		50265	0		=			
ANR	50293	Identifier	xfer_status		50265	0					
ANR	50294	Identifier	VD_AGENT_FILE_XFER_STATUS_ERROR		50265	1					
ANR	50295	ExpressionStatement	data_size = 0	322:8:11110:11123	50265	1	True				
ANR	50296	AssignmentExpression	data_size = 0		50265	0		=			
ANR	50297	Identifier	data_size		50265	0					
ANR	50298	PrimaryExpression	0		50265	1					
ANR	50299	ExpressionStatement	status = malloc ( sizeof ( * status ) + data_size )	325:4:11136:11180	50265	2	True				
ANR	50300	AssignmentExpression	status = malloc ( sizeof ( * status ) + data_size )		50265	0		=			
ANR	50301	Identifier	status		50265	0					
ANR	50302	CallExpression	malloc ( sizeof ( * status ) + data_size )		50265	1					
ANR	50303	Callee	malloc		50265	0					
ANR	50304	Identifier	malloc		50265	0					
ANR	50305	ArgumentList	sizeof ( * status ) + data_size		50265	1					
ANR	50306	Argument	sizeof ( * status ) + data_size		50265	0					
ANR	50307	AdditiveExpression	sizeof ( * status ) + data_size		50265	0		+			
ANR	50308	SizeofExpression	sizeof ( * status )		50265	0					
ANR	50309	Sizeof	sizeof		50265	0					
ANR	50310	UnaryOperationExpression	* status		50265	1					
ANR	50311	UnaryOperator	*		50265	0					
ANR	50312	Identifier	status		50265	1					
ANR	50313	Identifier	data_size		50265	1					
ANR	50314	ExpressionStatement	status -> id = GUINT32_TO_LE ( id )	326:4:11186:11216	50265	3	True				
ANR	50315	AssignmentExpression	status -> id = GUINT32_TO_LE ( id )		50265	0		=			
ANR	50316	PtrMemberAccess	status -> id		50265	0					
ANR	50317	Identifier	status		50265	0					
ANR	50318	Identifier	id		50265	1					
ANR	50319	CallExpression	GUINT32_TO_LE ( id )		50265	1					
ANR	50320	Callee	GUINT32_TO_LE		50265	0					
ANR	50321	Identifier	GUINT32_TO_LE		50265	0					
ANR	50322	ArgumentList	id		50265	1					
ANR	50323	Argument	id		50265	0					
ANR	50324	Identifier	id		50265	0					
ANR	50325	ExpressionStatement	status -> result = GUINT32_TO_LE ( xfer_status )	327:4:11222:11265	50265	4	True				
ANR	50326	AssignmentExpression	status -> result = GUINT32_TO_LE ( xfer_status )		50265	0		=			
ANR	50327	PtrMemberAccess	status -> result		50265	0					
ANR	50328	Identifier	status		50265	0					
ANR	50329	Identifier	result		50265	1					
ANR	50330	CallExpression	GUINT32_TO_LE ( xfer_status )		50265	1					
ANR	50331	Callee	GUINT32_TO_LE		50265	0					
ANR	50332	Identifier	GUINT32_TO_LE		50265	0					
ANR	50333	ArgumentList	xfer_status		50265	1					
ANR	50334	Argument	xfer_status		50265	0					
ANR	50335	Identifier	xfer_status		50265	0					
ANR	50336	IfStatement	if ( data )		50265	5					
ANR	50337	Condition	data	328:8:11275:11278	50265	0	True				
ANR	50338	Identifier	data		50265	0					
ANR	50339	ExpressionStatement	"memcpy ( status -> data , data , data_size )"	329:8:11289:11326	50265	1	True				
ANR	50340	CallExpression	"memcpy ( status -> data , data , data_size )"		50265	0					
ANR	50341	Callee	memcpy		50265	0					
ANR	50342	Identifier	memcpy		50265	0					
ANR	50343	ArgumentList	status -> data		50265	1					
ANR	50344	Argument	status -> data		50265	0					
ANR	50345	PtrMemberAccess	status -> data		50265	0					
ANR	50346	Identifier	status		50265	0					
ANR	50347	Identifier	data		50265	1					
ANR	50348	Argument	data		50265	1					
ANR	50349	Identifier	data		50265	0					
ANR	50350	Argument	data_size		50265	2					
ANR	50351	Identifier	data_size		50265	0					
ANR	50352	IfStatement	if ( msg )		50265	6					
ANR	50353	Condition	msg	331:8:11337:11339	50265	0	True				
ANR	50354	Identifier	msg		50265	0					
ANR	50355	ExpressionStatement	"syslog ( LOG_WARNING , msg , id )"	332:8:11350:11378	50265	1	True				
ANR	50356	CallExpression	"syslog ( LOG_WARNING , msg , id )"		50265	0					
ANR	50357	Callee	syslog		50265	0					
ANR	50358	Identifier	syslog		50265	0					
ANR	50359	ArgumentList	LOG_WARNING		50265	1					
ANR	50360	Argument	LOG_WARNING		50265	0					
ANR	50361	Identifier	LOG_WARNING		50265	0					
ANR	50362	Argument	msg		50265	1					
ANR	50363	Identifier	msg		50265	0					
ANR	50364	Argument	id		50265	2					
ANR	50365	Identifier	id		50265	0					
ANR	50366	IfStatement	if ( vport )		50265	7					
ANR	50367	Condition	vport	334:8:11389:11393	50265	0	True				
ANR	50368	Identifier	vport		50265	0					
ANR	50369	ExpressionStatement	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_FILE_XFER_STATUS , 0 , ( uint8_t * ) status , sizeof ( * status ) + data_size )"	335:8:11404:11599	50265	1	True				
ANR	50370	CallExpression	"vdagent_virtio_port_write ( vport , VDP_CLIENT_PORT , VD_AGENT_FILE_XFER_STATUS , 0 , ( uint8_t * ) status , sizeof ( * status ) + data_size )"		50265	0					
ANR	50371	Callee	vdagent_virtio_port_write		50265	0					
ANR	50372	Identifier	vdagent_virtio_port_write		50265	0					
ANR	50373	ArgumentList	vport		50265	1					
ANR	50374	Argument	vport		50265	0					
ANR	50375	Identifier	vport		50265	0					
ANR	50376	Argument	VDP_CLIENT_PORT		50265	1					
ANR	50377	Identifier	VDP_CLIENT_PORT		50265	0					
ANR	50378	Argument	VD_AGENT_FILE_XFER_STATUS		50265	2					
ANR	50379	Identifier	VD_AGENT_FILE_XFER_STATUS		50265	0					
ANR	50380	Argument	0		50265	3					
ANR	50381	PrimaryExpression	0		50265	0					
ANR	50382	Argument	( uint8_t * ) status		50265	4					
ANR	50383	CastExpression	( uint8_t * ) status		50265	0					
ANR	50384	CastTarget	uint8_t *		50265	0					
ANR	50385	Identifier	status		50265	1					
ANR	50386	Argument	sizeof ( * status ) + data_size		50265	5					
ANR	50387	AdditiveExpression	sizeof ( * status ) + data_size		50265	0		+			
ANR	50388	SizeofExpression	sizeof ( * status )		50265	0					
ANR	50389	Sizeof	sizeof		50265	0					
ANR	50390	UnaryOperationExpression	* status		50265	1					
ANR	50391	UnaryOperator	*		50265	0					
ANR	50392	Identifier	status		50265	1					
ANR	50393	Identifier	data_size		50265	1					
ANR	50394	ExpressionStatement	free ( status )	339:4:11606:11618	50265	8	True				
ANR	50395	CallExpression	free ( status )		50265	0					
ANR	50396	Callee	free		50265	0					
ANR	50397	Identifier	free		50265	0					
ANR	50398	ArgumentList	status		50265	1					
ANR	50399	Argument	status		50265	0					
ANR	50400	Identifier	status		50265	0					
ANR	50401	ReturnType	static void		50265	1					
ANR	50402	Identifier	send_file_xfer_status		50265	2					
ANR	50403	ParameterList	"struct vdagent_virtio_port * vport , const char * msg , uint32_t id , uint32_t xfer_status , const uint8_t * data , uint32_t data_size"		50265	3					
ANR	50404	Parameter	struct vdagent_virtio_port * vport	310:34:10480:10512	50265	0	True				
ANR	50405	ParameterType	struct vdagent_virtio_port *		50265	0					
ANR	50406	Identifier	vport		50265	1					
ANR	50407	Parameter	const char * msg	311:34:10549:10563	50265	1	True				
ANR	50408	ParameterType	const char *		50265	0					
ANR	50409	Identifier	msg		50265	1					
ANR	50410	Parameter	uint32_t id	311:51:10566:10576	50265	2	True				
ANR	50411	ParameterType	uint32_t		50265	0					
ANR	50412	Identifier	id		50265	1					
ANR	50413	Parameter	uint32_t xfer_status	311:64:10579:10598	50265	3	True				
ANR	50414	ParameterType	uint32_t		50265	0					
ANR	50415	Identifier	xfer_status		50265	1					
ANR	50416	Parameter	const uint8_t * data	312:34:10635:10653	50265	4	True				
ANR	50417	ParameterType	const uint8_t *		50265	0					
ANR	50418	Identifier	data		50265	1					
ANR	50419	Parameter	uint32_t data_size	312:55:10656:10673	50265	5	True				
ANR	50420	ParameterType	uint32_t		50265	0					
ANR	50421	Identifier	data_size		50265	1					
ANR	50422	CFGEntryNode	ENTRY		50265		True				
ANR	50423	CFGExitNode	EXIT		50265		True				
ANR	50424	Symbol	msg		50265						
ANR	50425	Symbol	data_size		50265						
ANR	50426	Symbol	VDP_CLIENT_PORT		50265						
ANR	50427	Symbol	malloc		50265						
ANR	50428	Symbol	capabilities		50265						
ANR	50429	Symbol	vport		50265						
ANR	50430	Symbol	data		50265						
ANR	50431	Symbol	VD_AGENT_FILE_XFER_STATUS		50265						
ANR	50432	Symbol	status -> result		50265						
ANR	50433	Symbol	VD_AGENT_FILE_XFER_STATUS_ERROR		50265						
ANR	50434	Symbol	LOG_WARNING		50265						
ANR	50435	Symbol	xfer_status		50265						
ANR	50436	Symbol	GUINT32_TO_LE		50265						
ANR	50437	Symbol	* status		50265						
ANR	50438	Symbol	status -> id		50265						
ANR	50439	Symbol	VD_AGENT_FILE_XFER_STATUS_SUCCESS		50265						
ANR	50440	Symbol	VD_AGENT_CAP_FILE_XFER_DETAILED_ERRORS		50265						
ANR	50441	Symbol	capabilities_size		50265						
ANR	50442	Symbol	status -> data		50265						
ANR	50443	Symbol	id		50265						
ANR	50444	Symbol	status		50265						
ANR	50445	Symbol	VD_AGENT_HAS_CAPABILITY		50265						
ANR	50446	Function	do_client_file_xfer	342:0:11623:13672							
ANR	50447	FunctionDef	"do_client_file_xfer (struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data)"		50446	0					
ANR	50448	CompoundStatement		345:0:11801:13672	50446	0					
ANR	50449	IdentifierDeclStatement	"uint32_t msg_type , id ;"	346:4:11807:11828	50446	0	True				
ANR	50450	IdentifierDecl	msg_type		50446	0					
ANR	50451	IdentifierDeclType	uint32_t		50446	0					
ANR	50452	Identifier	msg_type		50446	1					
ANR	50453	IdentifierDecl	id		50446	1					
ANR	50454	IdentifierDeclType	uint32_t		50446	0					
ANR	50455	Identifier	id		50446	1					
ANR	50456	IdentifierDeclStatement	struct udscs_connection * conn ;	347:4:11834:11863	50446	1	True				
ANR	50457	IdentifierDecl	* conn		50446	0					
ANR	50458	IdentifierDeclType	struct udscs_connection *		50446	0					
ANR	50459	Identifier	conn		50446	1					
ANR	50460	SwitchStatement	switch ( message_header -> type )		50446	2					
ANR	50461	Condition	message_header -> type	349:12:11878:11897	50446	0	True				
ANR	50462	PtrMemberAccess	message_header -> type		50446	0					
ANR	50463	Identifier	message_header		50446	0					
ANR	50464	Identifier	type		50446	1					
ANR	50465	CompoundStatement		5:34:98:98	50446	1					
ANR	50466	Label	case VD_AGENT_FILE_XFER_START :	350:4:11906:11935	50446	0	True				
ANR	50467	Identifier	VD_AGENT_FILE_XFER_START		50446	0					
ANR	50468	CompoundStatement		7:8:145:213	50446	1					
ANR	50469	IdentifierDeclStatement	VDAgentFileXferStartMessage * s = ( VDAgentFileXferStartMessage * ) data ;	351:8:11947:12015	50446	0	True				
ANR	50470	IdentifierDecl	* s = ( VDAgentFileXferStartMessage * ) data		50446	0					
ANR	50471	IdentifierDeclType	VDAgentFileXferStartMessage *		50446	0					
ANR	50472	Identifier	s		50446	1					
ANR	50473	AssignmentExpression	* s = ( VDAgentFileXferStartMessage * ) data		50446	2		=			
ANR	50474	Identifier	s		50446	0					
ANR	50475	CastExpression	( VDAgentFileXferStartMessage * ) data		50446	1					
ANR	50476	CastTarget	VDAgentFileXferStartMessage *		50446	0					
ANR	50477	Identifier	data		50446	1					
ANR	50478	IfStatement	if ( ! active_session_conn )		50446	1					
ANR	50479	Condition	! active_session_conn	352:12:12029:12048	50446	0	True				
ANR	50480	UnaryOperationExpression	! active_session_conn		50446	0					
ANR	50481	UnaryOperator	!		50446	0					
ANR	50482	Identifier	active_session_conn		50446	1					
ANR	50483	CompoundStatement		8:34:249:249	50446	1					
ANR	50484	Statement	send_file_xfer_status	353:12:12065:12085	50446	0	True				
ANR	50485	Statement	(	353:33:12086:12086	50446	1	True				
ANR	50486	Statement	vport	353:34:12087:12091	50446	2	True				
ANR	50487	Statement	","	353:39:12092:12092	50446	3	True				
ANR	50488	Statement	"""Could not find an agent connection belonging to the """	354:15:12109:12162	50446	4	True				
ANR	50489	Statement	"""active session, cancelling client file-xfer request %u"""	355:15:12179:12234	50446	5	True				
ANR	50490	Statement	","	355:71:12235:12235	50446	6	True				
ANR	50491	Statement	s	356:15:12252:12252	50446	7	True				
ANR	50492	Statement	->	356:16:12253:12254	50446	8	True				
ANR	50493	Statement	id	356:18:12255:12256	50446	9	True				
ANR	50494	Statement	","	356:20:12257:12257	50446	10	True				
ANR	50495	Statement	VD_AGENT_FILE_XFER_STATUS_VDAGENT_NOT_CONNECTED	356:22:12259:12305	50446	11	True				
ANR	50496	Statement	","	356:69:12306:12306	50446	12	True				
ANR	50497	Statement	NULL	356:71:12308:12311	50446	13	True				
ANR	50498	Statement	","	356:75:12312:12312	50446	14	True				
ANR	50499	Statement	0	356:77:12314:12314	50446	15	True				
ANR	50500	Statement	)	356:78:12315:12315	50446	16	True				
ANR	50501	ExpressionStatement		356:79:12316:12316	50446	17	True				
ANR	50502	ReturnStatement	return ;	357:12:12330:12336	50446	18	True				
ANR	50503	ElseStatement	else		50446	0					
ANR	50504	IfStatement	if ( session_info_session_is_locked ( session_info ) )		50446	0					
ANR	50505	Condition	session_info_session_is_locked ( session_info )	358:19:12357:12400	50446	0	True				
ANR	50506	CallExpression	session_info_session_is_locked ( session_info )		50446	0					
ANR	50507	Callee	session_info_session_is_locked		50446	0					
ANR	50508	Identifier	session_info_session_is_locked		50446	0					
ANR	50509	ArgumentList	session_info		50446	1					
ANR	50510	Argument	session_info		50446	0					
ANR	50511	Identifier	session_info		50446	0					
ANR	50512	CompoundStatement		14:65:601:601	50446	1					
ANR	50513	ExpressionStatement	"syslog ( LOG_DEBUG , ""Session is locked, skipping file-xfer-start"" )"	359:12:12417:12481	50446	0	True				
ANR	50514	CallExpression	"syslog ( LOG_DEBUG , ""Session is locked, skipping file-xfer-start"" )"		50446	0					
ANR	50515	Callee	syslog		50446	0					
ANR	50516	Identifier	syslog		50446	0					
ANR	50517	ArgumentList	LOG_DEBUG		50446	1					
ANR	50518	Argument	LOG_DEBUG		50446	0					
ANR	50519	Identifier	LOG_DEBUG		50446	0					
ANR	50520	Argument	"""Session is locked, skipping file-xfer-start"""		50446	1					
ANR	50521	PrimaryExpression	"""Session is locked, skipping file-xfer-start"""		50446	0					
ANR	50522	Statement	send_file_xfer_status	360:12:12495:12515	50446	1	True				
ANR	50523	Statement	(	360:33:12516:12516	50446	2	True				
ANR	50524	Statement	vport	360:34:12517:12521	50446	3	True				
ANR	50525	Statement	","	360:39:12522:12522	50446	4	True				
ANR	50526	Statement	"""User's session is locked and cannot start file transfer. """	361:15:12539:12597	50446	5	True				
ANR	50527	Statement	"""Cancelling client file-xfer request %u"""	362:15:12614:12653	50446	6	True				
ANR	50528	Statement	","	362:55:12654:12654	50446	7	True				
ANR	50529	Statement	s	363:15:12671:12671	50446	8	True				
ANR	50530	Statement	->	363:16:12672:12673	50446	9	True				
ANR	50531	Statement	id	363:18:12674:12675	50446	10	True				
ANR	50532	Statement	","	363:20:12676:12676	50446	11	True				
ANR	50533	Statement	VD_AGENT_FILE_XFER_STATUS_SESSION_LOCKED	363:22:12678:12717	50446	12	True				
ANR	50534	Statement	","	363:62:12718:12718	50446	13	True				
ANR	50535	Statement	NULL	363:64:12720:12723	50446	14	True				
ANR	50536	Statement	","	363:68:12724:12724	50446	15	True				
ANR	50537	Statement	0	363:70:12726:12726	50446	16	True				
ANR	50538	Statement	)	363:71:12727:12727	50446	17	True				
ANR	50539	ExpressionStatement		363:72:12728:12728	50446	18	True				
ANR	50540	ReturnStatement	return ;	364:12:12742:12748	50446	19	True				
ANR	50541	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_START , 0 , 0 , data , message_header -> size )"	366:8:12768:12880	50446	2	True				
ANR	50542	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_START , 0 , 0 , data , message_header -> size )"		50446	0					
ANR	50543	Callee	udscs_write		50446	0					
ANR	50544	Identifier	udscs_write		50446	0					
ANR	50545	ArgumentList	active_session_conn		50446	1					
ANR	50546	Argument	active_session_conn		50446	0					
ANR	50547	Identifier	active_session_conn		50446	0					
ANR	50548	Argument	VDAGENTD_FILE_XFER_START		50446	1					
ANR	50549	Identifier	VDAGENTD_FILE_XFER_START		50446	0					
ANR	50550	Argument	0		50446	2					
ANR	50551	PrimaryExpression	0		50446	0					
ANR	50552	Argument	0		50446	3					
ANR	50553	PrimaryExpression	0		50446	0					
ANR	50554	Argument	data		50446	4					
ANR	50555	Identifier	data		50446	0					
ANR	50556	Argument	message_header -> size		50446	5					
ANR	50557	PtrMemberAccess	message_header -> size		50446	0					
ANR	50558	Identifier	message_header		50446	0					
ANR	50559	Identifier	size		50446	1					
ANR	50560	ReturnStatement	return ;	368:8:12890:12896	50446	3	True				
ANR	50561	Label	case VD_AGENT_FILE_XFER_STATUS :	370:4:12908:12938	50446	2	True				
ANR	50562	Identifier	VD_AGENT_FILE_XFER_STATUS		50446	0					
ANR	50563	CompoundStatement		27:8:1148:1218	50446	3					
ANR	50564	IdentifierDeclStatement	VDAgentFileXferStatusMessage * s = ( VDAgentFileXferStatusMessage * ) data ;	371:8:12950:13020	50446	0	True				
ANR	50565	IdentifierDecl	* s = ( VDAgentFileXferStatusMessage * ) data		50446	0					
ANR	50566	IdentifierDeclType	VDAgentFileXferStatusMessage *		50446	0					
ANR	50567	Identifier	s		50446	1					
ANR	50568	AssignmentExpression	* s = ( VDAgentFileXferStatusMessage * ) data		50446	2		=			
ANR	50569	Identifier	s		50446	0					
ANR	50570	CastExpression	( VDAgentFileXferStatusMessage * ) data		50446	1					
ANR	50571	CastTarget	VDAgentFileXferStatusMessage *		50446	0					
ANR	50572	Identifier	data		50446	1					
ANR	50573	ExpressionStatement	msg_type = VDAGENTD_FILE_XFER_STATUS	372:8:13030:13066	50446	1	True				
ANR	50574	AssignmentExpression	msg_type = VDAGENTD_FILE_XFER_STATUS		50446	0		=			
ANR	50575	Identifier	msg_type		50446	0					
ANR	50576	Identifier	VDAGENTD_FILE_XFER_STATUS		50446	1					
ANR	50577	ExpressionStatement	id = s -> id	373:8:13076:13086	50446	2	True				
ANR	50578	AssignmentExpression	id = s -> id		50446	0		=			
ANR	50579	Identifier	id		50446	0					
ANR	50580	PtrMemberAccess	s -> id		50446	1					
ANR	50581	Identifier	s		50446	0					
ANR	50582	Identifier	id		50446	1					
ANR	50583	BreakStatement	break ;	374:8:13096:13101	50446	3	True				
ANR	50584	Label	case VD_AGENT_FILE_XFER_DATA :	376:4:13113:13141	50446	4	True				
ANR	50585	Identifier	VD_AGENT_FILE_XFER_DATA		50446	0					
ANR	50586	CompoundStatement		33:8:1351:1417	50446	5					
ANR	50587	IdentifierDeclStatement	VDAgentFileXferDataMessage * d = ( VDAgentFileXferDataMessage * ) data ;	377:8:13153:13219	50446	0	True				
ANR	50588	IdentifierDecl	* d = ( VDAgentFileXferDataMessage * ) data		50446	0					
ANR	50589	IdentifierDeclType	VDAgentFileXferDataMessage *		50446	0					
ANR	50590	Identifier	d		50446	1					
ANR	50591	AssignmentExpression	* d = ( VDAgentFileXferDataMessage * ) data		50446	2		=			
ANR	50592	Identifier	d		50446	0					
ANR	50593	CastExpression	( VDAgentFileXferDataMessage * ) data		50446	1					
ANR	50594	CastTarget	VDAgentFileXferDataMessage *		50446	0					
ANR	50595	Identifier	data		50446	1					
ANR	50596	ExpressionStatement	msg_type = VDAGENTD_FILE_XFER_DATA	378:8:13229:13263	50446	1	True				
ANR	50597	AssignmentExpression	msg_type = VDAGENTD_FILE_XFER_DATA		50446	0		=			
ANR	50598	Identifier	msg_type		50446	0					
ANR	50599	Identifier	VDAGENTD_FILE_XFER_DATA		50446	1					
ANR	50600	ExpressionStatement	id = d -> id	379:8:13273:13283	50446	2	True				
ANR	50601	AssignmentExpression	id = d -> id		50446	0		=			
ANR	50602	Identifier	id		50446	0					
ANR	50603	PtrMemberAccess	d -> id		50446	1					
ANR	50604	Identifier	d		50446	0					
ANR	50605	Identifier	id		50446	1					
ANR	50606	BreakStatement	break ;	380:8:13293:13298	50446	3	True				
ANR	50607	Label	default :	382:4:13310:13317	50446	6	True				
ANR	50608	Identifier	default		50446	0					
ANR	50609	ExpressionStatement	g_return_if_reached ( )	383:8:13327:13348	50446	7	True				
ANR	50610	CallExpression	g_return_if_reached ( )		50446	0					
ANR	50611	Callee	g_return_if_reached		50446	0					
ANR	50612	Identifier	g_return_if_reached		50446	0					
ANR	50613	ArgumentList			50446	1					
ANR	50614	ExpressionStatement	"conn = g_hash_table_lookup ( active_xfers , GUINT_TO_POINTER ( id ) )"	386:4:13404:13466	50446	3	True				
ANR	50615	AssignmentExpression	"conn = g_hash_table_lookup ( active_xfers , GUINT_TO_POINTER ( id ) )"		50446	0		=			
ANR	50616	Identifier	conn		50446	0					
ANR	50617	CallExpression	"g_hash_table_lookup ( active_xfers , GUINT_TO_POINTER ( id ) )"		50446	1					
ANR	50618	Callee	g_hash_table_lookup		50446	0					
ANR	50619	Identifier	g_hash_table_lookup		50446	0					
ANR	50620	ArgumentList	active_xfers		50446	1					
ANR	50621	Argument	active_xfers		50446	0					
ANR	50622	Identifier	active_xfers		50446	0					
ANR	50623	Argument	GUINT_TO_POINTER ( id )		50446	1					
ANR	50624	CallExpression	GUINT_TO_POINTER ( id )		50446	0					
ANR	50625	Callee	GUINT_TO_POINTER		50446	0					
ANR	50626	Identifier	GUINT_TO_POINTER		50446	0					
ANR	50627	ArgumentList	id		50446	1					
ANR	50628	Argument	id		50446	0					
ANR	50629	Identifier	id		50446	0					
ANR	50630	IfStatement	if ( ! conn )		50446	4					
ANR	50631	Condition	! conn	387:8:13476:13480	50446	0	True				
ANR	50632	UnaryOperationExpression	! conn		50446	0					
ANR	50633	UnaryOperator	!		50446	0					
ANR	50634	Identifier	conn		50446	1					
ANR	50635	CompoundStatement		43:15:1681:1681	50446	1					
ANR	50636	IfStatement	if ( debug )		50446	0					
ANR	50637	Condition	debug	388:12:13497:13501	50446	0	True				
ANR	50638	Identifier	debug		50446	0					
ANR	50639	ExpressionStatement	"syslog ( LOG_DEBUG , ""Could not find file-xfer %u (cancelled?)"" , id )"	389:12:13516:13581	50446	1	True				
ANR	50640	CallExpression	"syslog ( LOG_DEBUG , ""Could not find file-xfer %u (cancelled?)"" , id )"		50446	0					
ANR	50641	Callee	syslog		50446	0					
ANR	50642	Identifier	syslog		50446	0					
ANR	50643	ArgumentList	LOG_DEBUG		50446	1					
ANR	50644	Argument	LOG_DEBUG		50446	0					
ANR	50645	Identifier	LOG_DEBUG		50446	0					
ANR	50646	Argument	"""Could not find file-xfer %u (cancelled?)"""		50446	1					
ANR	50647	PrimaryExpression	"""Could not find file-xfer %u (cancelled?)"""		50446	0					
ANR	50648	Argument	id		50446	2					
ANR	50649	Identifier	id		50446	0					
ANR	50650	ReturnStatement	return ;	390:8:13591:13597	50446	1	True				
ANR	50651	ExpressionStatement	"udscs_write ( conn , msg_type , 0 , 0 , data , message_header -> size )"	392:4:13609:13670	50446	5	True				
ANR	50652	CallExpression	"udscs_write ( conn , msg_type , 0 , 0 , data , message_header -> size )"		50446	0					
ANR	50653	Callee	udscs_write		50446	0					
ANR	50654	Identifier	udscs_write		50446	0					
ANR	50655	ArgumentList	conn		50446	1					
ANR	50656	Argument	conn		50446	0					
ANR	50657	Identifier	conn		50446	0					
ANR	50658	Argument	msg_type		50446	1					
ANR	50659	Identifier	msg_type		50446	0					
ANR	50660	Argument	0		50446	2					
ANR	50661	PrimaryExpression	0		50446	0					
ANR	50662	Argument	0		50446	3					
ANR	50663	PrimaryExpression	0		50446	0					
ANR	50664	Argument	data		50446	4					
ANR	50665	Identifier	data		50446	0					
ANR	50666	Argument	message_header -> size		50446	5					
ANR	50667	PtrMemberAccess	message_header -> size		50446	0					
ANR	50668	Identifier	message_header		50446	0					
ANR	50669	Identifier	size		50446	1					
ANR	50670	ReturnType	static void		50446	1					
ANR	50671	Identifier	do_client_file_xfer		50446	2					
ANR	50672	ParameterList	"struct vdagent_virtio_port * vport , VDAgentMessage * message_header , uint8_t * data"		50446	3					
ANR	50673	Parameter	struct vdagent_virtio_port * vport	342:32:11655:11687	50446	0	True				
ANR	50674	ParameterType	struct vdagent_virtio_port *		50446	0					
ANR	50675	Identifier	vport		50446	1					
ANR	50676	Parameter	VDAgentMessage * message_header	343:32:11722:11751	50446	1	True				
ANR	50677	ParameterType	VDAgentMessage *		50446	0					
ANR	50678	Identifier	message_header		50446	1					
ANR	50679	Parameter	uint8_t * data	344:32:11786:11798	50446	2	True				
ANR	50680	ParameterType	uint8_t *		50446	0					
ANR	50681	Identifier	data		50446	1					
ANR	50682	CFGEntryNode	ENTRY		50446		True				
ANR	50683	CFGExitNode	EXIT		50446		True				
ANR	50684	Symbol	conn		50446						
ANR	50685	Symbol	g_hash_table_lookup		50446						
ANR	50686	Symbol	vport		50446						
ANR	50687	Symbol	data		50446						
ANR	50688	Symbol	message_header		50446						
ANR	50689	Symbol	message_header -> type		50446						
ANR	50690	Symbol	VDAGENTD_FILE_XFER_STATUS		50446						
ANR	50691	Symbol	d -> id		50446						
ANR	50692	Symbol	message_header -> size		50446						
ANR	50693	Symbol	active_session_conn		50446						
ANR	50694	Symbol	id		50446						
ANR	50695	Symbol	VDAGENTD_FILE_XFER_DATA		50446						
ANR	50696	Symbol	active_xfers		50446						
ANR	50697	Symbol	s -> id		50446						
ANR	50698	Symbol	debug		50446						
ANR	50699	Symbol	session_info		50446						
ANR	50700	Symbol	d		50446						
ANR	50701	Symbol	GUINT_TO_POINTER		50446						
ANR	50702	Symbol	* message_header		50446						
ANR	50703	Symbol	* d		50446						
ANR	50704	Symbol	s		50446						
ANR	50705	Symbol	VDAGENTD_FILE_XFER_START		50446						
ANR	50706	Symbol	msg_type		50446						
ANR	50707	Symbol	session_info_session_is_locked		50446						
ANR	50708	Symbol	LOG_DEBUG		50446						
ANR	50709	Symbol	* s		50446						
ANR	50710	DeclStmt									
ANR	50711	Decl							gsize	gsize [ ]	vdagent_message_min_size
ANR	50712	Function	vdagent_message_clipboard_from_le	415:0:14713:15505							
ANR	50713	FunctionDef	"vdagent_message_clipboard_from_le (VDAgentMessage * message_header , uint8_t * data)"		50712	0					
ANR	50714	CompoundStatement		417:0:14814:15505	50712	0					
ANR	50715	IdentifierDeclStatement	gsize min_size = vdagent_message_min_size [ message_header -> type ] ;	418:4:14820:14883	50712	0	True				
ANR	50716	IdentifierDecl	min_size = vdagent_message_min_size [ message_header -> type ]		50712	0					
ANR	50717	IdentifierDeclType	gsize		50712	0					
ANR	50718	Identifier	min_size		50712	1					
ANR	50719	AssignmentExpression	min_size = vdagent_message_min_size [ message_header -> type ]		50712	2		=			
ANR	50720	Identifier	min_size		50712	0					
ANR	50721	ArrayIndexing	vdagent_message_min_size [ message_header -> type ]		50712	1					
ANR	50722	Identifier	vdagent_message_min_size		50712	0					
ANR	50723	PtrMemberAccess	message_header -> type		50712	1					
ANR	50724	Identifier	message_header		50712	0					
ANR	50725	Identifier	type		50712	1					
ANR	50726	IdentifierDeclStatement	uint32_t * data_type = ( uint32_t * ) data ;	419:4:14889:14928	50712	1	True				
ANR	50727	IdentifierDecl	* data_type = ( uint32_t * ) data		50712	0					
ANR	50728	IdentifierDeclType	uint32_t *		50712	0					
ANR	50729	Identifier	data_type		50712	1					
ANR	50730	AssignmentExpression	* data_type = ( uint32_t * ) data		50712	2		=			
ANR	50731	Identifier	data_type		50712	0					
ANR	50732	CastExpression	( uint32_t * ) data		50712	1					
ANR	50733	CastTarget	uint32_t *		50712	0					
ANR	50734	Identifier	data		50712	1					
ANR	50735	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		50712	2					
ANR	50736	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	421:8:14939:15060	50712	0	True				
ANR	50737	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		50712	0					
ANR	50738	Callee	VD_AGENT_HAS_CAPABILITY		50712	0					
ANR	50739	Identifier	VD_AGENT_HAS_CAPABILITY		50712	0					
ANR	50740	ArgumentList	capabilities		50712	1					
ANR	50741	Argument	capabilities		50712	0					
ANR	50742	Identifier	capabilities		50712	0					
ANR	50743	Argument	capabilities_size		50712	1					
ANR	50744	Identifier	capabilities_size		50712	0					
ANR	50745	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		50712	2					
ANR	50746	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		50712	0					
ANR	50747	CompoundStatement		6:67:248:248	50712	1					
ANR	50748	ExpressionStatement	min_size += 4	423:8:15073:15086	50712	0	True				
ANR	50749	AssignmentExpression	min_size += 4		50712	0		+=			
ANR	50750	Identifier	min_size		50712	0					
ANR	50751	PrimaryExpression	4		50712	1					
ANR	50752	ExpressionStatement	data_type ++	424:8:15096:15107	50712	1	True				
ANR	50753	PostIncDecOperationExpression	data_type ++		50712	0					
ANR	50754	Identifier	data_type		50712	0					
ANR	50755	IncDec	++		50712	1					
ANR	50756	SwitchStatement	switch ( message_header -> type )		50712	3					
ANR	50757	Condition	message_header -> type	427:12:15128:15147	50712	0	True				
ANR	50758	PtrMemberAccess	message_header -> type		50712	0					
ANR	50759	Identifier	message_header		50712	0					
ANR	50760	Identifier	type		50712	1					
ANR	50761	CompoundStatement		11:34:335:335	50712	1					
ANR	50762	Label	case VD_AGENT_CLIPBOARD_REQUEST :	428:4:15156:15187	50712	0	True				
ANR	50763	Identifier	VD_AGENT_CLIPBOARD_REQUEST		50712	0					
ANR	50764	Label	case VD_AGENT_CLIPBOARD :	429:4:15193:15216	50712	1	True				
ANR	50765	Identifier	VD_AGENT_CLIPBOARD		50712	0					
ANR	50766	ExpressionStatement	* data_type = GUINT32_FROM_LE ( * data_type )	430:8:15226:15266	50712	2	True				
ANR	50767	AssignmentExpression	* data_type = GUINT32_FROM_LE ( * data_type )		50712	0		=			
ANR	50768	UnaryOperationExpression	* data_type		50712	0					
ANR	50769	UnaryOperator	*		50712	0					
ANR	50770	Identifier	data_type		50712	1					
ANR	50771	CallExpression	GUINT32_FROM_LE ( * data_type )		50712	1					
ANR	50772	Callee	GUINT32_FROM_LE		50712	0					
ANR	50773	Identifier	GUINT32_FROM_LE		50712	0					
ANR	50774	ArgumentList	* data_type		50712	1					
ANR	50775	Argument	* data_type		50712	0					
ANR	50776	UnaryOperationExpression	* data_type		50712	0					
ANR	50777	UnaryOperator	*		50712	0					
ANR	50778	Identifier	data_type		50712	1					
ANR	50779	BreakStatement	break ;	431:8:15276:15281	50712	3	True				
ANR	50780	Label	case VD_AGENT_CLIPBOARD_GRAB :	432:4:15287:15315	50712	4	True				
ANR	50781	Identifier	VD_AGENT_CLIPBOARD_GRAB		50712	0					
ANR	50782	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , min_size )"	433:8:15325:15388	50712	5	True				
ANR	50783	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , min_size )"		50712	0					
ANR	50784	Callee	virtio_msg_uint32_from_le		50712	0					
ANR	50785	Identifier	virtio_msg_uint32_from_le		50712	0					
ANR	50786	ArgumentList	data		50712	1					
ANR	50787	Argument	data		50712	0					
ANR	50788	Identifier	data		50712	0					
ANR	50789	Argument	message_header -> size		50712	1					
ANR	50790	PtrMemberAccess	message_header -> size		50712	0					
ANR	50791	Identifier	message_header		50712	0					
ANR	50792	Identifier	size		50712	1					
ANR	50793	Argument	min_size		50712	2					
ANR	50794	Identifier	min_size		50712	0					
ANR	50795	BreakStatement	break ;	434:8:15398:15403	50712	6	True				
ANR	50796	Label	case VD_AGENT_CLIPBOARD_RELEASE :	435:4:15409:15440	50712	7	True				
ANR	50797	Identifier	VD_AGENT_CLIPBOARD_RELEASE		50712	0					
ANR	50798	BreakStatement	break ;	436:8:15450:15455	50712	8	True				
ANR	50799	Label	default :	437:4:15461:15468	50712	9	True				
ANR	50800	Identifier	default		50712	0					
ANR	50801	ExpressionStatement	g_warn_if_reached ( )	438:8:15478:15497	50712	10	True				
ANR	50802	CallExpression	g_warn_if_reached ( )		50712	0					
ANR	50803	Callee	g_warn_if_reached		50712	0					
ANR	50804	Identifier	g_warn_if_reached		50712	0					
ANR	50805	ArgumentList			50712	1					
ANR	50806	ReturnType	static void		50712	1					
ANR	50807	Identifier	vdagent_message_clipboard_from_le		50712	2					
ANR	50808	ParameterList	"VDAgentMessage * message_header , uint8_t * data"		50712	3					
ANR	50809	Parameter	VDAgentMessage * message_header	415:46:14759:14788	50712	0	True				
ANR	50810	ParameterType	VDAgentMessage *		50712	0					
ANR	50811	Identifier	message_header		50712	1					
ANR	50812	Parameter	uint8_t * data	416:8:14799:14811	50712	1	True				
ANR	50813	ParameterType	uint8_t *		50712	0					
ANR	50814	Identifier	data		50712	1					
ANR	50815	CFGEntryNode	ENTRY		50712		True				
ANR	50816	CFGExitNode	EXIT		50712		True				
ANR	50817	Symbol	capabilities		50712						
ANR	50818	Symbol	data		50712						
ANR	50819	Symbol	* message_header		50712						
ANR	50820	Symbol	message_header		50712						
ANR	50821	Symbol	* vdagent_message_min_size		50712						
ANR	50822	Symbol	message_header -> type		50712						
ANR	50823	Symbol	message_header -> size		50712						
ANR	50824	Symbol	* data_type		50712						
ANR	50825	Symbol	capabilities_size		50712						
ANR	50826	Symbol	data_type		50712						
ANR	50827	Symbol	* * message_header		50712						
ANR	50828	Symbol	min_size		50712						
ANR	50829	Symbol	GUINT32_FROM_LE		50712						
ANR	50830	Symbol	vdagent_message_min_size		50712						
ANR	50831	Symbol	* message_header -> type		50712						
ANR	50832	Symbol	VD_AGENT_HAS_CAPABILITY		50712						
ANR	50833	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		50712						
ANR	50834	Function	vdagent_message_file_xfer_from_le	442:0:15508:16024							
ANR	50835	FunctionDef	"vdagent_message_file_xfer_from_le (VDAgentMessage * message_header , uint8_t * data)"		50834	0					
ANR	50836	CompoundStatement		444:0:15609:16024	50834	0					
ANR	50837	IdentifierDeclStatement	uint32_t * id = ( uint32_t * ) data ;	445:4:15615:15646	50834	0	True				
ANR	50838	IdentifierDecl	* id = ( uint32_t * ) data		50834	0					
ANR	50839	IdentifierDeclType	uint32_t *		50834	0					
ANR	50840	Identifier	id		50834	1					
ANR	50841	AssignmentExpression	* id = ( uint32_t * ) data		50834	2		=			
ANR	50842	Identifier	id		50834	0					
ANR	50843	CastExpression	( uint32_t * ) data		50834	1					
ANR	50844	CastTarget	uint32_t *		50834	0					
ANR	50845	Identifier	data		50834	1					
ANR	50846	ExpressionStatement	* id = GUINT32_FROM_LE ( * id )	446:4:15652:15678	50834	1	True				
ANR	50847	AssignmentExpression	* id = GUINT32_FROM_LE ( * id )		50834	0		=			
ANR	50848	UnaryOperationExpression	* id		50834	0					
ANR	50849	UnaryOperator	*		50834	0					
ANR	50850	Identifier	id		50834	1					
ANR	50851	CallExpression	GUINT32_FROM_LE ( * id )		50834	1					
ANR	50852	Callee	GUINT32_FROM_LE		50834	0					
ANR	50853	Identifier	GUINT32_FROM_LE		50834	0					
ANR	50854	ArgumentList	* id		50834	1					
ANR	50855	Argument	* id		50834	0					
ANR	50856	UnaryOperationExpression	* id		50834	0					
ANR	50857	UnaryOperator	*		50834	0					
ANR	50858	Identifier	id		50834	1					
ANR	50859	ExpressionStatement	id ++	447:4:15684:15688	50834	2	True				
ANR	50860	PostIncDecOperationExpression	id ++		50834	0					
ANR	50861	Identifier	id		50834	0					
ANR	50862	IncDec	++		50834	1					
ANR	50863	SwitchStatement	switch ( message_header -> type )		50834	3					
ANR	50864	Condition	message_header -> type	449:12:15716:15735	50834	0	True				
ANR	50865	PtrMemberAccess	message_header -> type		50834	0					
ANR	50866	Identifier	message_header		50834	0					
ANR	50867	Identifier	type		50834	1					
ANR	50868	CompoundStatement		6:34:128:128	50834	1					
ANR	50869	Label	case VD_AGENT_FILE_XFER_DATA :	450:4:15744:15772	50834	0	True				
ANR	50870	Identifier	VD_AGENT_FILE_XFER_DATA		50834	0					
ANR	50871	CompoundStatement		8:7:173:241	50834	1					
ANR	50872	IdentifierDeclStatement	VDAgentFileXferDataMessage * msg = ( VDAgentFileXferDataMessage * ) data ;	451:7:15783:15851	50834	0	True				
ANR	50873	IdentifierDecl	* msg = ( VDAgentFileXferDataMessage * ) data		50834	0					
ANR	50874	IdentifierDeclType	VDAgentFileXferDataMessage *		50834	0					
ANR	50875	Identifier	msg		50834	1					
ANR	50876	AssignmentExpression	* msg = ( VDAgentFileXferDataMessage * ) data		50834	2		=			
ANR	50877	Identifier	msg		50834	0					
ANR	50878	CastExpression	( VDAgentFileXferDataMessage * ) data		50834	1					
ANR	50879	CastTarget	VDAgentFileXferDataMessage *		50834	0					
ANR	50880	Identifier	data		50834	1					
ANR	50881	ExpressionStatement	msg -> size = GUINT64_FROM_LE ( msg -> size )	452:7:15860:15898	50834	1	True				
ANR	50882	AssignmentExpression	msg -> size = GUINT64_FROM_LE ( msg -> size )		50834	0		=			
ANR	50883	PtrMemberAccess	msg -> size		50834	0					
ANR	50884	Identifier	msg		50834	0					
ANR	50885	Identifier	size		50834	1					
ANR	50886	CallExpression	GUINT64_FROM_LE ( msg -> size )		50834	1					
ANR	50887	Callee	GUINT64_FROM_LE		50834	0					
ANR	50888	Identifier	GUINT64_FROM_LE		50834	0					
ANR	50889	ArgumentList	msg -> size		50834	1					
ANR	50890	Argument	msg -> size		50834	0					
ANR	50891	PtrMemberAccess	msg -> size		50834	0					
ANR	50892	Identifier	msg		50834	0					
ANR	50893	Identifier	size		50834	1					
ANR	50894	BreakStatement	break ;	453:7:15907:15912	50834	2	True				
ANR	50895	Label	case VD_AGENT_FILE_XFER_STATUS :	455:4:15924:15954	50834	2	True				
ANR	50896	Identifier	VD_AGENT_FILE_XFER_STATUS		50834	0					
ANR	50897	ExpressionStatement	* id = GUINT32_FROM_LE ( * id )	456:7:15963:15989	50834	3	True				
ANR	50898	AssignmentExpression	* id = GUINT32_FROM_LE ( * id )		50834	0		=			
ANR	50899	UnaryOperationExpression	* id		50834	0					
ANR	50900	UnaryOperator	*		50834	0					
ANR	50901	Identifier	id		50834	1					
ANR	50902	CallExpression	GUINT32_FROM_LE ( * id )		50834	1					
ANR	50903	Callee	GUINT32_FROM_LE		50834	0					
ANR	50904	Identifier	GUINT32_FROM_LE		50834	0					
ANR	50905	ArgumentList	* id		50834	1					
ANR	50906	Argument	* id		50834	0					
ANR	50907	UnaryOperationExpression	* id		50834	0					
ANR	50908	UnaryOperator	*		50834	0					
ANR	50909	Identifier	id		50834	1					
ANR	50910	BreakStatement	break ;	457:7:16011:16016	50834	4	True				
ANR	50911	ReturnType	static void		50834	1					
ANR	50912	Identifier	vdagent_message_file_xfer_from_le		50834	2					
ANR	50913	ParameterList	"VDAgentMessage * message_header , uint8_t * data"		50834	3					
ANR	50914	Parameter	VDAgentMessage * message_header	442:46:15554:15583	50834	0	True				
ANR	50915	ParameterType	VDAgentMessage *		50834	0					
ANR	50916	Identifier	message_header		50834	1					
ANR	50917	Parameter	uint8_t * data	443:8:15594:15606	50834	1	True				
ANR	50918	ParameterType	uint8_t *		50834	0					
ANR	50919	Identifier	data		50834	1					
ANR	50920	CFGEntryNode	ENTRY		50834		True				
ANR	50921	CFGExitNode	EXIT		50834		True				
ANR	50922	Symbol	msg		50834						
ANR	50923	Symbol	* id		50834						
ANR	50924	Symbol	data		50834						
ANR	50925	Symbol	* message_header		50834						
ANR	50926	Symbol	message_header		50834						
ANR	50927	Symbol	GUINT64_FROM_LE		50834						
ANR	50928	Symbol	message_header -> type		50834						
ANR	50929	Symbol	msg -> size		50834						
ANR	50930	Symbol	id		50834						
ANR	50931	Symbol	GUINT32_FROM_LE		50834						
ANR	50932	Symbol	* msg		50834						
ANR	50933	Function	vdagent_message_check_size	461:0:16027:18099							
ANR	50934	FunctionDef	vdagent_message_check_size (const VDAgentMessage * message_header)		50933	0					
ANR	50935	CompoundStatement		462:0:16108:18099	50933	0					
ANR	50936	IdentifierDeclStatement	uint32_t min_size = 0 ;	463:4:16114:16135	50933	0	True				
ANR	50937	IdentifierDecl	min_size = 0		50933	0					
ANR	50938	IdentifierDeclType	uint32_t		50933	0					
ANR	50939	Identifier	min_size		50933	1					
ANR	50940	AssignmentExpression	min_size = 0		50933	2		=			
ANR	50941	Identifier	min_size		50933	0					
ANR	50942	PrimaryExpression	0		50933	1					
ANR	50943	IfStatement	if ( message_header -> protocol != VD_AGENT_PROTOCOL )		50933	1					
ANR	50944	Condition	message_header -> protocol != VD_AGENT_PROTOCOL	465:8:16146:16190	50933	0	True				
ANR	50945	EqualityExpression	message_header -> protocol != VD_AGENT_PROTOCOL		50933	0		!=			
ANR	50946	PtrMemberAccess	message_header -> protocol		50933	0					
ANR	50947	Identifier	message_header		50933	0					
ANR	50948	Identifier	protocol		50933	1					
ANR	50949	Identifier	VD_AGENT_PROTOCOL		50933	1					
ANR	50950	CompoundStatement		4:55:84:84	50933	1					
ANR	50951	ExpressionStatement	"syslog ( LOG_ERR , ""message with wrong protocol version ignoring"" )"	466:8:16203:16266	50933	0	True				
ANR	50952	CallExpression	"syslog ( LOG_ERR , ""message with wrong protocol version ignoring"" )"		50933	0					
ANR	50953	Callee	syslog		50933	0					
ANR	50954	Identifier	syslog		50933	0					
ANR	50955	ArgumentList	LOG_ERR		50933	1					
ANR	50956	Argument	LOG_ERR		50933	0					
ANR	50957	Identifier	LOG_ERR		50933	0					
ANR	50958	Argument	"""message with wrong protocol version ignoring"""		50933	1					
ANR	50959	PrimaryExpression	"""message with wrong protocol version ignoring"""		50933	0					
ANR	50960	ReturnStatement	return FALSE ;	467:8:16276:16288	50933	1	True				
ANR	50961	Identifier	FALSE		50933	0					
ANR	50962	IfStatement	if ( ! message_header -> type || message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size ) )		50933	2					
ANR	50963	Condition	! message_header -> type || message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size )	470:8:16305:16399	50933	0	True				
ANR	50964	OrExpression	! message_header -> type || message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size )		50933	0		||			
ANR	50965	UnaryOperationExpression	! message_header -> type		50933	0					
ANR	50966	UnaryOperator	!		50933	0					
ANR	50967	PtrMemberAccess	message_header -> type		50933	1					
ANR	50968	Identifier	message_header		50933	0					
ANR	50969	Identifier	type		50933	1					
ANR	50970	RelationalExpression	message_header -> type >= G_N_ELEMENTS ( vdagent_message_min_size )		50933	1		>=			
ANR	50971	PtrMemberAccess	message_header -> type		50933	0					
ANR	50972	Identifier	message_header		50933	0					
ANR	50973	Identifier	type		50933	1					
ANR	50974	CallExpression	G_N_ELEMENTS ( vdagent_message_min_size )		50933	1					
ANR	50975	Callee	G_N_ELEMENTS		50933	0					
ANR	50976	Identifier	G_N_ELEMENTS		50933	0					
ANR	50977	ArgumentList	vdagent_message_min_size		50933	1					
ANR	50978	Argument	vdagent_message_min_size		50933	0					
ANR	50979	Identifier	vdagent_message_min_size		50933	0					
ANR	50980	CompoundStatement		10:72:293:293	50933	1					
ANR	50981	ExpressionStatement	"syslog ( LOG_WARNING , ""unknown message type %d, ignoring"" , message_header -> type )"	472:8:16412:16505	50933	0	True				
ANR	50982	CallExpression	"syslog ( LOG_WARNING , ""unknown message type %d, ignoring"" , message_header -> type )"		50933	0					
ANR	50983	Callee	syslog		50933	0					
ANR	50984	Identifier	syslog		50933	0					
ANR	50985	ArgumentList	LOG_WARNING		50933	1					
ANR	50986	Argument	LOG_WARNING		50933	0					
ANR	50987	Identifier	LOG_WARNING		50933	0					
ANR	50988	Argument	"""unknown message type %d, ignoring"""		50933	1					
ANR	50989	PrimaryExpression	"""unknown message type %d, ignoring"""		50933	0					
ANR	50990	Argument	message_header -> type		50933	2					
ANR	50991	PtrMemberAccess	message_header -> type		50933	0					
ANR	50992	Identifier	message_header		50933	0					
ANR	50993	Identifier	type		50933	1					
ANR	50994	ReturnStatement	return FALSE ;	474:8:16515:16527	50933	1	True				
ANR	50995	Identifier	FALSE		50933	0					
ANR	50996	ExpressionStatement	min_size = vdagent_message_min_size [ message_header -> type ]	477:4:16540:16597	50933	3	True				
ANR	50997	AssignmentExpression	min_size = vdagent_message_min_size [ message_header -> type ]		50933	0		=			
ANR	50998	Identifier	min_size		50933	0					
ANR	50999	ArrayIndexing	vdagent_message_min_size [ message_header -> type ]		50933	1					
ANR	51000	Identifier	vdagent_message_min_size		50933	0					
ANR	51001	PtrMemberAccess	message_header -> type		50933	1					
ANR	51002	Identifier	message_header		50933	0					
ANR	51003	Identifier	type		50933	1					
ANR	51004	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		50933	4					
ANR	51005	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	478:8:16607:16728	50933	0	True				
ANR	51006	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		50933	0					
ANR	51007	Callee	VD_AGENT_HAS_CAPABILITY		50933	0					
ANR	51008	Identifier	VD_AGENT_HAS_CAPABILITY		50933	0					
ANR	51009	ArgumentList	capabilities		50933	1					
ANR	51010	Argument	capabilities		50933	0					
ANR	51011	Identifier	capabilities		50933	0					
ANR	51012	Argument	capabilities_size		50933	1					
ANR	51013	Identifier	capabilities_size		50933	0					
ANR	51014	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		50933	2					
ANR	51015	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		50933	0					
ANR	51016	CompoundStatement		18:67:622:622	50933	1					
ANR	51017	SwitchStatement	switch ( message_header -> type )		50933	0					
ANR	51018	Condition	message_header -> type	480:16:16749:16768	50933	0	True				
ANR	51019	PtrMemberAccess	message_header -> type		50933	0					
ANR	51020	Identifier	message_header		50933	0					
ANR	51021	Identifier	type		50933	1					
ANR	51022	CompoundStatement		19:38:662:662	50933	1					
ANR	51023	Label	case VD_AGENT_CLIPBOARD_GRAB :	481:8:16781:16809	50933	0	True				
ANR	51024	Identifier	VD_AGENT_CLIPBOARD_GRAB		50933	0					
ANR	51025	Label	case VD_AGENT_CLIPBOARD_REQUEST :	482:8:16819:16850	50933	1	True				
ANR	51026	Identifier	VD_AGENT_CLIPBOARD_REQUEST		50933	0					
ANR	51027	Label	case VD_AGENT_CLIPBOARD :	483:8:16860:16883	50933	2	True				
ANR	51028	Identifier	VD_AGENT_CLIPBOARD		50933	0					
ANR	51029	Label	case VD_AGENT_CLIPBOARD_RELEASE :	484:8:16893:16924	50933	3	True				
ANR	51030	Identifier	VD_AGENT_CLIPBOARD_RELEASE		50933	0					
ANR	51031	ExpressionStatement	min_size += 4	485:10:16936:16949	50933	4	True				
ANR	51032	AssignmentExpression	min_size += 4		50933	0		+=			
ANR	51033	Identifier	min_size		50933	0					
ANR	51034	PrimaryExpression	4		50933	1					
ANR	51035	SwitchStatement	switch ( message_header -> type )		50933	5					
ANR	51036	Condition	message_header -> type	489:12:16980:16999	50933	0	True				
ANR	51037	PtrMemberAccess	message_header -> type		50933	0					
ANR	51038	Identifier	message_header		50933	0					
ANR	51039	Identifier	type		50933	1					
ANR	51040	CompoundStatement		28:34:893:893	50933	1					
ANR	51041	Label	case VD_AGENT_MONITORS_CONFIG :	490:4:17008:17037	50933	0	True				
ANR	51042	Identifier	VD_AGENT_MONITORS_CONFIG		50933	0					
ANR	51043	Label	case VD_AGENT_FILE_XFER_START :	491:4:17043:17072	50933	1	True				
ANR	51044	Identifier	VD_AGENT_FILE_XFER_START		50933	0					
ANR	51045	Label	case VD_AGENT_FILE_XFER_DATA :	492:4:17078:17106	50933	2	True				
ANR	51046	Identifier	VD_AGENT_FILE_XFER_DATA		50933	0					
ANR	51047	Label	case VD_AGENT_CLIPBOARD :	493:4:17112:17135	50933	3	True				
ANR	51048	Identifier	VD_AGENT_CLIPBOARD		50933	0					
ANR	51049	Label	case VD_AGENT_CLIPBOARD_GRAB :	494:4:17141:17169	50933	4	True				
ANR	51050	Identifier	VD_AGENT_CLIPBOARD_GRAB		50933	0					
ANR	51051	Label	case VD_AGENT_AUDIO_VOLUME_SYNC :	495:4:17175:17206	50933	5	True				
ANR	51052	Identifier	VD_AGENT_AUDIO_VOLUME_SYNC		50933	0					
ANR	51053	Label	case VD_AGENT_ANNOUNCE_CAPABILITIES :	496:4:17212:17247	50933	6	True				
ANR	51054	Identifier	VD_AGENT_ANNOUNCE_CAPABILITIES		50933	0					
ANR	51055	IfStatement	if ( message_header -> size < min_size )		50933	7					
ANR	51056	Condition	message_header -> size < min_size	497:12:17261:17291	50933	0	True				
ANR	51057	RelationalExpression	message_header -> size < min_size		50933	0		<			
ANR	51058	PtrMemberAccess	message_header -> size		50933	0					
ANR	51059	Identifier	message_header		50933	0					
ANR	51060	Identifier	size		50933	1					
ANR	51061	Identifier	min_size		50933	1					
ANR	51062	CompoundStatement		36:45:1185:1185	50933	1					
ANR	51063	ExpressionStatement	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"	498:12:17308:17441	50933	0	True				
ANR	51064	CallExpression	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"		50933	0					
ANR	51065	Callee	syslog		50933	0					
ANR	51066	Identifier	syslog		50933	0					
ANR	51067	ArgumentList	LOG_ERR		50933	1					
ANR	51068	Argument	LOG_ERR		50933	0					
ANR	51069	Identifier	LOG_ERR		50933	0					
ANR	51070	Argument	"""read: invalid message size: %u for message type: %u"""		50933	1					
ANR	51071	PrimaryExpression	"""read: invalid message size: %u for message type: %u"""		50933	0					
ANR	51072	Argument	message_header -> size		50933	2					
ANR	51073	PtrMemberAccess	message_header -> size		50933	0					
ANR	51074	Identifier	message_header		50933	0					
ANR	51075	Identifier	size		50933	1					
ANR	51076	Argument	message_header -> type		50933	3					
ANR	51077	PtrMemberAccess	message_header -> type		50933	0					
ANR	51078	Identifier	message_header		50933	0					
ANR	51079	Identifier	type		50933	1					
ANR	51080	ReturnStatement	return FALSE ;	500:12:17455:17467	50933	1	True				
ANR	51081	Identifier	FALSE		50933	0					
ANR	51082	BreakStatement	break ;	502:8:17487:17492	50933	8	True				
ANR	51083	Label	case VD_AGENT_MOUSE_STATE :	503:4:17498:17523	50933	9	True				
ANR	51084	Identifier	VD_AGENT_MOUSE_STATE		50933	0					
ANR	51085	Label	case VD_AGENT_FILE_XFER_STATUS :	504:4:17529:17559	50933	10	True				
ANR	51086	Identifier	VD_AGENT_FILE_XFER_STATUS		50933	0					
ANR	51087	Label	case VD_AGENT_DISPLAY_CONFIG :	505:4:17565:17593	50933	11	True				
ANR	51088	Identifier	VD_AGENT_DISPLAY_CONFIG		50933	0					
ANR	51089	Label	case VD_AGENT_REPLY :	506:4:17599:17618	50933	12	True				
ANR	51090	Identifier	VD_AGENT_REPLY		50933	0					
ANR	51091	Label	case VD_AGENT_CLIPBOARD_REQUEST :	507:4:17624:17655	50933	13	True				
ANR	51092	Identifier	VD_AGENT_CLIPBOARD_REQUEST		50933	0					
ANR	51093	Label	case VD_AGENT_CLIPBOARD_RELEASE :	508:4:17661:17692	50933	14	True				
ANR	51094	Identifier	VD_AGENT_CLIPBOARD_RELEASE		50933	0					
ANR	51095	Label	case VD_AGENT_MAX_CLIPBOARD :	509:4:17698:17725	50933	15	True				
ANR	51096	Identifier	VD_AGENT_MAX_CLIPBOARD		50933	0					
ANR	51097	Label	case VD_AGENT_CLIENT_DISCONNECTED :	510:4:17731:17764	50933	16	True				
ANR	51098	Identifier	VD_AGENT_CLIENT_DISCONNECTED		50933	0					
ANR	51099	IfStatement	if ( message_header -> size != min_size )		50933	17					
ANR	51100	Condition	message_header -> size != min_size	511:12:17778:17809	50933	0	True				
ANR	51101	EqualityExpression	message_header -> size != min_size		50933	0		!=			
ANR	51102	PtrMemberAccess	message_header -> size		50933	0					
ANR	51103	Identifier	message_header		50933	0					
ANR	51104	Identifier	size		50933	1					
ANR	51105	Identifier	min_size		50933	1					
ANR	51106	CompoundStatement		50:46:1703:1703	50933	1					
ANR	51107	ExpressionStatement	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"	512:12:17826:17959	50933	0	True				
ANR	51108	CallExpression	"syslog ( LOG_ERR , ""read: invalid message size: %u for message type: %u"" , message_header -> size , message_header -> type )"		50933	0					
ANR	51109	Callee	syslog		50933	0					
ANR	51110	Identifier	syslog		50933	0					
ANR	51111	ArgumentList	LOG_ERR		50933	1					
ANR	51112	Argument	LOG_ERR		50933	0					
ANR	51113	Identifier	LOG_ERR		50933	0					
ANR	51114	Argument	"""read: invalid message size: %u for message type: %u"""		50933	1					
ANR	51115	PrimaryExpression	"""read: invalid message size: %u for message type: %u"""		50933	0					
ANR	51116	Argument	message_header -> size		50933	2					
ANR	51117	PtrMemberAccess	message_header -> size		50933	0					
ANR	51118	Identifier	message_header		50933	0					
ANR	51119	Identifier	size		50933	1					
ANR	51120	Argument	message_header -> type		50933	3					
ANR	51121	PtrMemberAccess	message_header -> type		50933	0					
ANR	51122	Identifier	message_header		50933	0					
ANR	51123	Identifier	type		50933	1					
ANR	51124	ReturnStatement	return FALSE ;	514:12:17973:17985	50933	1	True				
ANR	51125	Identifier	FALSE		50933	0					
ANR	51126	BreakStatement	break ;	516:8:18005:18010	50933	18	True				
ANR	51127	Label	default :	517:4:18016:18023	50933	19	True				
ANR	51128	Identifier	default		50933	0					
ANR	51129	ExpressionStatement	g_warn_if_reached ( )	518:8:18033:18052	50933	20	True				
ANR	51130	CallExpression	g_warn_if_reached ( )		50933	0					
ANR	51131	Callee	g_warn_if_reached		50933	0					
ANR	51132	Identifier	g_warn_if_reached		50933	0					
ANR	51133	ArgumentList			50933	1					
ANR	51134	ReturnStatement	return FALSE ;	519:8:18062:18074	50933	21	True				
ANR	51135	Identifier	FALSE		50933	0					
ANR	51136	ReturnStatement	return TRUE ;	521:4:18086:18097	50933	6	True				
ANR	51137	Identifier	TRUE		50933	0					
ANR	51138	ReturnType	static gboolean		50933	1					
ANR	51139	Identifier	vdagent_message_check_size		50933	2					
ANR	51140	ParameterList	const VDAgentMessage * message_header		50933	3					
ANR	51141	Parameter	const VDAgentMessage * message_header	461:43:16070:16105	50933	0	True				
ANR	51142	ParameterType	const VDAgentMessage *		50933	0					
ANR	51143	Identifier	message_header		50933	1					
ANR	51144	CFGEntryNode	ENTRY		50933		True				
ANR	51145	CFGExitNode	EXIT		50933		True				
ANR	51146	Symbol	VD_AGENT_PROTOCOL		50933						
ANR	51147	Symbol	capabilities		50933						
ANR	51148	Symbol	* message_header		50933						
ANR	51149	Symbol	message_header		50933						
ANR	51150	Symbol	* vdagent_message_min_size		50933						
ANR	51151	Symbol	message_header -> type		50933						
ANR	51152	Symbol	TRUE		50933						
ANR	51153	Symbol	LOG_WARNING		50933						
ANR	51154	Symbol	message_header -> protocol		50933						
ANR	51155	Symbol	G_N_ELEMENTS		50933						
ANR	51156	Symbol	message_header -> size		50933						
ANR	51157	Symbol	capabilities_size		50933						
ANR	51158	Symbol	LOG_ERR		50933						
ANR	51159	Symbol	* * message_header		50933						
ANR	51160	Symbol	min_size		50933						
ANR	51161	Symbol	FALSE		50933						
ANR	51162	Symbol	vdagent_message_min_size		50933						
ANR	51163	Symbol	* message_header -> type		50933						
ANR	51164	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		50933						
ANR	51165	Symbol	VD_AGENT_HAS_CAPABILITY		50933						
ANR	51166	Function	virtio_port_read_complete	524:0:18102:20273							
ANR	51167	FunctionDef	"virtio_port_read_complete (struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , uint8_t * data)"		51166	0					
ANR	51168	CompoundStatement		529:0:18267:20273	51166	0					
ANR	51169	IfStatement	if ( ! vdagent_message_check_size ( message_header ) )		51166	0					
ANR	51170	Condition	! vdagent_message_check_size ( message_header )	530:8:18277:18319	51166	0	True				
ANR	51171	UnaryOperationExpression	! vdagent_message_check_size ( message_header )		51166	0					
ANR	51172	UnaryOperator	!		51166	0					
ANR	51173	CallExpression	vdagent_message_check_size ( message_header )		51166	1					
ANR	51174	Callee	vdagent_message_check_size		51166	0					
ANR	51175	Identifier	vdagent_message_check_size		51166	0					
ANR	51176	ArgumentList	message_header		51166	1					
ANR	51177	Argument	message_header		51166	0					
ANR	51178	Identifier	message_header		51166	0					
ANR	51179	ReturnStatement	return 0 ;	531:8:18330:18338	51166	1	True				
ANR	51180	PrimaryExpression	0		51166	0					
ANR	51181	SwitchStatement	switch ( message_header -> type )		51166	1					
ANR	51182	Condition	message_header -> type	533:12:18353:18372	51166	0	True				
ANR	51183	PtrMemberAccess	message_header -> type		51166	0					
ANR	51184	Identifier	message_header		51166	0					
ANR	51185	Identifier	type		51166	1					
ANR	51186	CompoundStatement		5:34:107:107	51166	1					
ANR	51187	Label	case VD_AGENT_MOUSE_STATE :	534:4:18381:18406	51166	0	True				
ANR	51188	Identifier	VD_AGENT_MOUSE_STATE		51166	0					
ANR	51189	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"	535:8:18416:18472	51166	1	True				
ANR	51190	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"		51166	0					
ANR	51191	Callee	virtio_msg_uint32_from_le		51166	0					
ANR	51192	Identifier	virtio_msg_uint32_from_le		51166	0					
ANR	51193	ArgumentList	data		51166	1					
ANR	51194	Argument	data		51166	0					
ANR	51195	Identifier	data		51166	0					
ANR	51196	Argument	message_header -> size		51166	1					
ANR	51197	PtrMemberAccess	message_header -> size		51166	0					
ANR	51198	Identifier	message_header		51166	0					
ANR	51199	Identifier	size		51166	1					
ANR	51200	Argument	0		51166	2					
ANR	51201	PrimaryExpression	0		51166	0					
ANR	51202	ExpressionStatement	"do_client_mouse ( & uinput , ( VDAgentMouseState * ) data )"	536:8:18482:18533	51166	2	True				
ANR	51203	CallExpression	"do_client_mouse ( & uinput , ( VDAgentMouseState * ) data )"		51166	0					
ANR	51204	Callee	do_client_mouse		51166	0					
ANR	51205	Identifier	do_client_mouse		51166	0					
ANR	51206	ArgumentList	& uinput		51166	1					
ANR	51207	Argument	& uinput		51166	0					
ANR	51208	UnaryOperationExpression	& uinput		51166	0					
ANR	51209	UnaryOperator	&		51166	0					
ANR	51210	Identifier	uinput		51166	1					
ANR	51211	Argument	( VDAgentMouseState * ) data		51166	1					
ANR	51212	CastExpression	( VDAgentMouseState * ) data		51166	0					
ANR	51213	CastTarget	VDAgentMouseState *		51166	0					
ANR	51214	Identifier	data		51166	1					
ANR	51215	BreakStatement	break ;	537:8:18543:18548	51166	3	True				
ANR	51216	Label	case VD_AGENT_MONITORS_CONFIG :	538:4:18554:18583	51166	4	True				
ANR	51217	Identifier	VD_AGENT_MONITORS_CONFIG		51166	0					
ANR	51218	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"	539:8:18593:18649	51166	5	True				
ANR	51219	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"		51166	0					
ANR	51220	Callee	virtio_msg_uint32_from_le		51166	0					
ANR	51221	Identifier	virtio_msg_uint32_from_le		51166	0					
ANR	51222	ArgumentList	data		51166	1					
ANR	51223	Argument	data		51166	0					
ANR	51224	Identifier	data		51166	0					
ANR	51225	Argument	message_header -> size		51166	1					
ANR	51226	PtrMemberAccess	message_header -> size		51166	0					
ANR	51227	Identifier	message_header		51166	0					
ANR	51228	Identifier	size		51166	1					
ANR	51229	Argument	0		51166	2					
ANR	51230	PrimaryExpression	0		51166	0					
ANR	51231	ExpressionStatement	"do_client_monitors ( vport , port_nr , message_header , ( VDAgentMonitorsConfig * ) data )"	540:8:18659:18760	51166	6	True				
ANR	51232	CallExpression	"do_client_monitors ( vport , port_nr , message_header , ( VDAgentMonitorsConfig * ) data )"		51166	0					
ANR	51233	Callee	do_client_monitors		51166	0					
ANR	51234	Identifier	do_client_monitors		51166	0					
ANR	51235	ArgumentList	vport		51166	1					
ANR	51236	Argument	vport		51166	0					
ANR	51237	Identifier	vport		51166	0					
ANR	51238	Argument	port_nr		51166	1					
ANR	51239	Identifier	port_nr		51166	0					
ANR	51240	Argument	message_header		51166	2					
ANR	51241	Identifier	message_header		51166	0					
ANR	51242	Argument	( VDAgentMonitorsConfig * ) data		51166	3					
ANR	51243	CastExpression	( VDAgentMonitorsConfig * ) data		51166	0					
ANR	51244	CastTarget	VDAgentMonitorsConfig *		51166	0					
ANR	51245	Identifier	data		51166	1					
ANR	51246	BreakStatement	break ;	542:8:18770:18775	51166	7	True				
ANR	51247	Label	case VD_AGENT_ANNOUNCE_CAPABILITIES :	543:4:18781:18816	51166	8	True				
ANR	51248	Identifier	VD_AGENT_ANNOUNCE_CAPABILITIES		51166	0					
ANR	51249	ExpressionStatement	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"	544:8:18826:18882	51166	9	True				
ANR	51250	CallExpression	"virtio_msg_uint32_from_le ( data , message_header -> size , 0 )"		51166	0					
ANR	51251	Callee	virtio_msg_uint32_from_le		51166	0					
ANR	51252	Identifier	virtio_msg_uint32_from_le		51166	0					
ANR	51253	ArgumentList	data		51166	1					
ANR	51254	Argument	data		51166	0					
ANR	51255	Identifier	data		51166	0					
ANR	51256	Argument	message_header -> size		51166	1					
ANR	51257	PtrMemberAccess	message_header -> size		51166	0					
ANR	51258	Identifier	message_header		51166	0					
ANR	51259	Identifier	size		51166	1					
ANR	51260	Argument	0		51166	2					
ANR	51261	PrimaryExpression	0		51166	0					
ANR	51262	ExpressionStatement	"do_client_capabilities ( vport , message_header , ( VDAgentAnnounceCapabilities * ) data )"	545:8:18892:18998	51166	10	True				
ANR	51263	CallExpression	"do_client_capabilities ( vport , message_header , ( VDAgentAnnounceCapabilities * ) data )"		51166	0					
ANR	51264	Callee	do_client_capabilities		51166	0					
ANR	51265	Identifier	do_client_capabilities		51166	0					
ANR	51266	ArgumentList	vport		51166	1					
ANR	51267	Argument	vport		51166	0					
ANR	51268	Identifier	vport		51166	0					
ANR	51269	Argument	message_header		51166	1					
ANR	51270	Identifier	message_header		51166	0					
ANR	51271	Argument	( VDAgentAnnounceCapabilities * ) data		51166	2					
ANR	51272	CastExpression	( VDAgentAnnounceCapabilities * ) data		51166	0					
ANR	51273	CastTarget	VDAgentAnnounceCapabilities *		51166	0					
ANR	51274	Identifier	data		51166	1					
ANR	51275	BreakStatement	break ;	547:8:19008:19013	51166	11	True				
ANR	51276	Label	case VD_AGENT_CLIPBOARD_GRAB :	548:4:19019:19047	51166	12	True				
ANR	51277	Identifier	VD_AGENT_CLIPBOARD_GRAB		51166	0					
ANR	51278	Label	case VD_AGENT_CLIPBOARD_REQUEST :	549:4:19053:19084	51166	13	True				
ANR	51279	Identifier	VD_AGENT_CLIPBOARD_REQUEST		51166	0					
ANR	51280	Label	case VD_AGENT_CLIPBOARD :	550:4:19090:19113	51166	14	True				
ANR	51281	Identifier	VD_AGENT_CLIPBOARD		51166	0					
ANR	51282	Label	case VD_AGENT_CLIPBOARD_RELEASE :	551:4:19119:19150	51166	15	True				
ANR	51283	Identifier	VD_AGENT_CLIPBOARD_RELEASE		51166	0					
ANR	51284	ExpressionStatement	"vdagent_message_clipboard_from_le ( message_header , data )"	552:8:19160:19215	51166	16	True				
ANR	51285	CallExpression	"vdagent_message_clipboard_from_le ( message_header , data )"		51166	0					
ANR	51286	Callee	vdagent_message_clipboard_from_le		51166	0					
ANR	51287	Identifier	vdagent_message_clipboard_from_le		51166	0					
ANR	51288	ArgumentList	message_header		51166	1					
ANR	51289	Argument	message_header		51166	0					
ANR	51290	Identifier	message_header		51166	0					
ANR	51291	Argument	data		51166	1					
ANR	51292	Identifier	data		51166	0					
ANR	51293	ExpressionStatement	"do_client_clipboard ( vport , message_header , data )"	553:8:19225:19273	51166	17	True				
ANR	51294	CallExpression	"do_client_clipboard ( vport , message_header , data )"		51166	0					
ANR	51295	Callee	do_client_clipboard		51166	0					
ANR	51296	Identifier	do_client_clipboard		51166	0					
ANR	51297	ArgumentList	vport		51166	1					
ANR	51298	Argument	vport		51166	0					
ANR	51299	Identifier	vport		51166	0					
ANR	51300	Argument	message_header		51166	1					
ANR	51301	Identifier	message_header		51166	0					
ANR	51302	Argument	data		51166	2					
ANR	51303	Identifier	data		51166	0					
ANR	51304	BreakStatement	break ;	554:8:19283:19288	51166	18	True				
ANR	51305	Label	case VD_AGENT_FILE_XFER_START :	555:4:19294:19323	51166	19	True				
ANR	51306	Identifier	VD_AGENT_FILE_XFER_START		51166	0					
ANR	51307	Label	case VD_AGENT_FILE_XFER_STATUS :	556:4:19329:19359	51166	20	True				
ANR	51308	Identifier	VD_AGENT_FILE_XFER_STATUS		51166	0					
ANR	51309	Label	case VD_AGENT_FILE_XFER_DATA :	557:4:19365:19393	51166	21	True				
ANR	51310	Identifier	VD_AGENT_FILE_XFER_DATA		51166	0					
ANR	51311	ExpressionStatement	"vdagent_message_file_xfer_from_le ( message_header , data )"	558:8:19403:19458	51166	22	True				
ANR	51312	CallExpression	"vdagent_message_file_xfer_from_le ( message_header , data )"		51166	0					
ANR	51313	Callee	vdagent_message_file_xfer_from_le		51166	0					
ANR	51314	Identifier	vdagent_message_file_xfer_from_le		51166	0					
ANR	51315	ArgumentList	message_header		51166	1					
ANR	51316	Argument	message_header		51166	0					
ANR	51317	Identifier	message_header		51166	0					
ANR	51318	Argument	data		51166	1					
ANR	51319	Identifier	data		51166	0					
ANR	51320	ExpressionStatement	"do_client_file_xfer ( vport , message_header , data )"	559:8:19468:19516	51166	23	True				
ANR	51321	CallExpression	"do_client_file_xfer ( vport , message_header , data )"		51166	0					
ANR	51322	Callee	do_client_file_xfer		51166	0					
ANR	51323	Identifier	do_client_file_xfer		51166	0					
ANR	51324	ArgumentList	vport		51166	1					
ANR	51325	Argument	vport		51166	0					
ANR	51326	Identifier	vport		51166	0					
ANR	51327	Argument	message_header		51166	1					
ANR	51328	Identifier	message_header		51166	0					
ANR	51329	Argument	data		51166	2					
ANR	51330	Identifier	data		51166	0					
ANR	51331	BreakStatement	break ;	560:8:19526:19531	51166	24	True				
ANR	51332	Label	case VD_AGENT_CLIENT_DISCONNECTED :	561:4:19537:19570	51166	25	True				
ANR	51333	Identifier	VD_AGENT_CLIENT_DISCONNECTED		51166	0					
ANR	51334	ExpressionStatement	"vdagent_virtio_port_reset ( vport , VDP_CLIENT_PORT )"	562:8:19580:19629	51166	26	True				
ANR	51335	CallExpression	"vdagent_virtio_port_reset ( vport , VDP_CLIENT_PORT )"		51166	0					
ANR	51336	Callee	vdagent_virtio_port_reset		51166	0					
ANR	51337	Identifier	vdagent_virtio_port_reset		51166	0					
ANR	51338	ArgumentList	vport		51166	1					
ANR	51339	Argument	vport		51166	0					
ANR	51340	Identifier	vport		51166	0					
ANR	51341	Argument	VDP_CLIENT_PORT		51166	1					
ANR	51342	Identifier	VDP_CLIENT_PORT		51166	0					
ANR	51343	ExpressionStatement	do_client_disconnect ( )	563:8:19639:19661	51166	27	True				
ANR	51344	CallExpression	do_client_disconnect ( )		51166	0					
ANR	51345	Callee	do_client_disconnect		51166	0					
ANR	51346	Identifier	do_client_disconnect		51166	0					
ANR	51347	ArgumentList			51166	1					
ANR	51348	BreakStatement	break ;	564:8:19671:19676	51166	28	True				
ANR	51349	Label	case VD_AGENT_MAX_CLIPBOARD :	565:4:19682:19709	51166	29	True				
ANR	51350	Identifier	VD_AGENT_MAX_CLIPBOARD		51166	0					
ANR	51351	CompoundStatement		37:33:1443:1443	51166	30					
ANR	51352	ExpressionStatement	max_clipboard = GUINT32_FROM_LE ( ( ( VDAgentMaxClipboard * ) data ) -> max )	566:8:19721:19788	51166	0	True				
ANR	51353	AssignmentExpression	max_clipboard = GUINT32_FROM_LE ( ( ( VDAgentMaxClipboard * ) data ) -> max )		51166	0		=			
ANR	51354	Identifier	max_clipboard		51166	0					
ANR	51355	CallExpression	GUINT32_FROM_LE ( ( ( VDAgentMaxClipboard * ) data ) -> max )		51166	1					
ANR	51356	Callee	GUINT32_FROM_LE		51166	0					
ANR	51357	Identifier	GUINT32_FROM_LE		51166	0					
ANR	51358	ArgumentList	( ( VDAgentMaxClipboard * ) data ) -> max		51166	1					
ANR	51359	Argument	( ( VDAgentMaxClipboard * ) data ) -> max		51166	0					
ANR	51360	PtrMemberAccess	( ( VDAgentMaxClipboard * ) data ) -> max		51166	0					
ANR	51361	CastExpression	( VDAgentMaxClipboard * ) data		51166	0					
ANR	51362	CastTarget	VDAgentMaxClipboard *		51166	0					
ANR	51363	Identifier	data		51166	1					
ANR	51364	Identifier	max		51166	1					
ANR	51365	ExpressionStatement	"syslog ( LOG_DEBUG , ""Set max clipboard: %d"" , max_clipboard )"	567:8:19798:19855	51166	1	True				
ANR	51366	CallExpression	"syslog ( LOG_DEBUG , ""Set max clipboard: %d"" , max_clipboard )"		51166	0					
ANR	51367	Callee	syslog		51166	0					
ANR	51368	Identifier	syslog		51166	0					
ANR	51369	ArgumentList	LOG_DEBUG		51166	1					
ANR	51370	Argument	LOG_DEBUG		51166	0					
ANR	51371	Identifier	LOG_DEBUG		51166	0					
ANR	51372	Argument	"""Set max clipboard: %d"""		51166	1					
ANR	51373	PrimaryExpression	"""Set max clipboard: %d"""		51166	0					
ANR	51374	Argument	max_clipboard		51166	2					
ANR	51375	Identifier	max_clipboard		51166	0					
ANR	51376	BreakStatement	break ;	568:8:19865:19870	51166	2	True				
ANR	51377	Label	case VD_AGENT_AUDIO_VOLUME_SYNC :	570:4:19882:19913	51166	31	True				
ANR	51378	Identifier	VD_AGENT_AUDIO_VOLUME_SYNC		51166	0					
ANR	51379	CompoundStatement		43:8:1657:1719	51166	32					
ANR	51380	IdentifierDeclStatement	VDAgentAudioVolumeSync * vdata = ( VDAgentAudioVolumeSync * ) data ;	571:8:19925:19987	51166	0	True				
ANR	51381	IdentifierDecl	* vdata = ( VDAgentAudioVolumeSync * ) data		51166	0					
ANR	51382	IdentifierDeclType	VDAgentAudioVolumeSync *		51166	0					
ANR	51383	Identifier	vdata		51166	1					
ANR	51384	AssignmentExpression	* vdata = ( VDAgentAudioVolumeSync * ) data		51166	2		=			
ANR	51385	Identifier	vdata		51166	0					
ANR	51386	CastExpression	( VDAgentAudioVolumeSync * ) data		51166	1					
ANR	51387	CastTarget	VDAgentAudioVolumeSync *		51166	0					
ANR	51388	Identifier	data		51166	1					
ANR	51389	ExpressionStatement	"virtio_msg_uint16_from_le ( ( uint8_t * ) vdata , message_header -> size , offsetof ( VDAgentAudioVolumeSync , volume ) )"	572:8:19997:20116	51166	1	True				
ANR	51390	CallExpression	"virtio_msg_uint16_from_le ( ( uint8_t * ) vdata , message_header -> size , offsetof ( VDAgentAudioVolumeSync , volume ) )"		51166	0					
ANR	51391	Callee	virtio_msg_uint16_from_le		51166	0					
ANR	51392	Identifier	virtio_msg_uint16_from_le		51166	0					
ANR	51393	ArgumentList	( uint8_t * ) vdata		51166	1					
ANR	51394	Argument	( uint8_t * ) vdata		51166	0					
ANR	51395	CastExpression	( uint8_t * ) vdata		51166	0					
ANR	51396	CastTarget	uint8_t *		51166	0					
ANR	51397	Identifier	vdata		51166	1					
ANR	51398	Argument	message_header -> size		51166	1					
ANR	51399	PtrMemberAccess	message_header -> size		51166	0					
ANR	51400	Identifier	message_header		51166	0					
ANR	51401	Identifier	size		51166	1					
ANR	51402	Argument	"offsetof ( VDAgentAudioVolumeSync , volume )"		51166	2					
ANR	51403	CallExpression	"offsetof ( VDAgentAudioVolumeSync , volume )"		51166	0					
ANR	51404	Callee	offsetof		51166	0					
ANR	51405	Identifier	offsetof		51166	0					
ANR	51406	ArgumentList	VDAgentAudioVolumeSync		51166	1					
ANR	51407	Argument	VDAgentAudioVolumeSync		51166	0					
ANR	51408	Identifier	VDAgentAudioVolumeSync		51166	0					
ANR	51409	Argument	volume		51166	1					
ANR	51410	Identifier	volume		51166	0					
ANR	51411	ExpressionStatement	"do_client_volume_sync ( vport , port_nr , message_header , vdata )"	575:8:20127:20187	51166	2	True				
ANR	51412	CallExpression	"do_client_volume_sync ( vport , port_nr , message_header , vdata )"		51166	0					
ANR	51413	Callee	do_client_volume_sync		51166	0					
ANR	51414	Identifier	do_client_volume_sync		51166	0					
ANR	51415	ArgumentList	vport		51166	1					
ANR	51416	Argument	vport		51166	0					
ANR	51417	Identifier	vport		51166	0					
ANR	51418	Argument	port_nr		51166	1					
ANR	51419	Identifier	port_nr		51166	0					
ANR	51420	Argument	message_header		51166	2					
ANR	51421	Identifier	message_header		51166	0					
ANR	51422	Argument	vdata		51166	3					
ANR	51423	Identifier	vdata		51166	0					
ANR	51424	BreakStatement	break ;	576:8:20197:20202	51166	3	True				
ANR	51425	Label	default :	578:4:20214:20221	51166	33	True				
ANR	51426	Identifier	default		51166	0					
ANR	51427	ExpressionStatement	g_warn_if_reached ( )	579:8:20231:20250	51166	34	True				
ANR	51428	CallExpression	g_warn_if_reached ( )		51166	0					
ANR	51429	Callee	g_warn_if_reached		51166	0					
ANR	51430	Identifier	g_warn_if_reached		51166	0					
ANR	51431	ArgumentList			51166	1					
ANR	51432	ReturnStatement	return 0 ;	582:4:20263:20271	51166	2	True				
ANR	51433	PrimaryExpression	0		51166	0					
ANR	51434	ReturnType	static int		51166	1					
ANR	51435	Identifier	virtio_port_read_complete		51166	2					
ANR	51436	ParameterList	"struct vdagent_virtio_port * vport , int port_nr , VDAgentMessage * message_header , uint8_t * data"		51166	3					
ANR	51437	Parameter	struct vdagent_virtio_port * vport	525:8:18148:18180	51166	0	True				
ANR	51438	ParameterType	struct vdagent_virtio_port *		51166	0					
ANR	51439	Identifier	vport		51166	1					
ANR	51440	Parameter	int port_nr	526:8:18191:18201	51166	1	True				
ANR	51441	ParameterType	int		51166	0					
ANR	51442	Identifier	port_nr		51166	1					
ANR	51443	Parameter	VDAgentMessage * message_header	527:8:18212:18241	51166	2	True				
ANR	51444	ParameterType	VDAgentMessage *		51166	0					
ANR	51445	Identifier	message_header		51166	1					
ANR	51446	Parameter	uint8_t * data	528:8:18252:18264	51166	3	True				
ANR	51447	ParameterType	uint8_t *		51166	0					
ANR	51448	Identifier	data		51166	1					
ANR	51449	CFGEntryNode	ENTRY		51166		True				
ANR	51450	CFGExitNode	EXIT		51166		True				
ANR	51451	Symbol	VDP_CLIENT_PORT		51166						
ANR	51452	Symbol	port_nr		51166						
ANR	51453	Symbol	vport		51166						
ANR	51454	Symbol	data		51166						
ANR	51455	Symbol	* message_header		51166						
ANR	51456	Symbol	message_header		51166						
ANR	51457	Symbol	message_header -> type		51166						
ANR	51458	Symbol	vdata		51166						
ANR	51459	Symbol	( ( VDAgentMaxClipboard * ) data ) -> max		51166						
ANR	51460	Symbol	message_header -> size		51166						
ANR	51461	Symbol	volume		51166						
ANR	51462	Symbol	max_clipboard		51166						
ANR	51463	Symbol	VDAgentAudioVolumeSync		51166						
ANR	51464	Symbol	vdagent_message_check_size		51166						
ANR	51465	Symbol	& uinput		51166						
ANR	51466	Symbol	offsetof		51166						
ANR	51467	Symbol	GUINT32_FROM_LE		51166						
ANR	51468	Symbol	LOG_DEBUG		51166						
ANR	51469	Symbol	* data		51166						
ANR	51470	Function	virtio_write_clipboard	585:0:20276:21355							
ANR	51471	FunctionDef	"virtio_write_clipboard (uint8_t selection , uint32_t msg_type , uint32_t data_type , uint8_t * data , uint32_t data_size)"		51470	0					
ANR	51472	CompoundStatement		587:0:20408:21355	51470	0					
ANR	51473	IdentifierDeclStatement	uint32_t size = data_size ;	588:4:20414:20439	51470	0	True				
ANR	51474	IdentifierDecl	size = data_size		51470	0					
ANR	51475	IdentifierDeclType	uint32_t		51470	0					
ANR	51476	Identifier	size		51470	1					
ANR	51477	AssignmentExpression	size = data_size		51470	2		=			
ANR	51478	Identifier	data_size		51470	0					
ANR	51479	Identifier	data_size		51470	1					
ANR	51480	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		51470	1					
ANR	51481	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	590:8:20450:20571	51470	0	True				
ANR	51482	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		51470	0					
ANR	51483	Callee	VD_AGENT_HAS_CAPABILITY		51470	0					
ANR	51484	Identifier	VD_AGENT_HAS_CAPABILITY		51470	0					
ANR	51485	ArgumentList	capabilities		51470	1					
ANR	51486	Argument	capabilities		51470	0					
ANR	51487	Identifier	capabilities		51470	0					
ANR	51488	Argument	capabilities_size		51470	1					
ANR	51489	Identifier	capabilities_size		51470	0					
ANR	51490	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		51470	2					
ANR	51491	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		51470	0					
ANR	51492	CompoundStatement		5:67:165:165	51470	1					
ANR	51493	ExpressionStatement	size += 4	592:8:20584:20593	51470	0	True				
ANR	51494	AssignmentExpression	size += 4		51470	0		+=			
ANR	51495	Identifier	size		51470	0					
ANR	51496	PrimaryExpression	4		51470	1					
ANR	51497	IfStatement	if ( data_type != - 1 )		51470	2					
ANR	51498	Condition	data_type != - 1	594:8:20609:20623	51470	0	True				
ANR	51499	EqualityExpression	data_type != - 1		51470	0		!=			
ANR	51500	Identifier	data_type		51470	0					
ANR	51501	UnaryOperationExpression	- 1		51470	1					
ANR	51502	UnaryOperator	-		51470	0					
ANR	51503	PrimaryExpression	1		51470	1					
ANR	51504	CompoundStatement		8:25:217:217	51470	1					
ANR	51505	ExpressionStatement	size += 4	595:8:20636:20645	51470	0	True				
ANR	51506	AssignmentExpression	size += 4		51470	0		+=			
ANR	51507	Identifier	size		51470	0					
ANR	51508	PrimaryExpression	4		51470	1					
ANR	51509	ExpressionStatement	"vdagent_virtio_port_write_start ( virtio_port , VDP_CLIENT_PORT , msg_type , 0 , size )"	598:4:20658:20774	51470	3	True				
ANR	51510	CallExpression	"vdagent_virtio_port_write_start ( virtio_port , VDP_CLIENT_PORT , msg_type , 0 , size )"		51470	0					
ANR	51511	Callee	vdagent_virtio_port_write_start		51470	0					
ANR	51512	Identifier	vdagent_virtio_port_write_start		51470	0					
ANR	51513	ArgumentList	virtio_port		51470	1					
ANR	51514	Argument	virtio_port		51470	0					
ANR	51515	Identifier	virtio_port		51470	0					
ANR	51516	Argument	VDP_CLIENT_PORT		51470	1					
ANR	51517	Identifier	VDP_CLIENT_PORT		51470	0					
ANR	51518	Argument	msg_type		51470	2					
ANR	51519	Identifier	msg_type		51470	0					
ANR	51520	Argument	0		51470	3					
ANR	51521	PrimaryExpression	0		51470	0					
ANR	51522	Argument	size		51470	4					
ANR	51523	Identifier	size		51470	0					
ANR	51524	IfStatement	"if ( VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) )"		51470	4					
ANR	51525	Condition	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"	601:8:20785:20906	51470	0	True				
ANR	51526	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		51470	0					
ANR	51527	Callee	VD_AGENT_HAS_CAPABILITY		51470	0					
ANR	51528	Identifier	VD_AGENT_HAS_CAPABILITY		51470	0					
ANR	51529	ArgumentList	capabilities		51470	1					
ANR	51530	Argument	capabilities		51470	0					
ANR	51531	Identifier	capabilities		51470	0					
ANR	51532	Argument	capabilities_size		51470	1					
ANR	51533	Identifier	capabilities_size		51470	0					
ANR	51534	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		51470	2					
ANR	51535	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		51470	0					
ANR	51536	CompoundStatement		17:8:510:549	51470	1					
ANR	51537	IdentifierDeclStatement	"uint8_t sel [ 4 ] = { selection , 0 , 0 , 0 } ;"	603:8:20919:20958	51470	0	True				
ANR	51538	IdentifierDecl	"sel [ 4 ] = { selection , 0 , 0 , 0 }"		51470	0					
ANR	51539	IdentifierDeclType	uint8_t [ 4 ]		51470	0					
ANR	51540	Identifier	sel		51470	1					
ANR	51541	PrimaryExpression	4		51470	2					
ANR	51542	AssignmentExpression	"sel [ 4 ] = { selection , 0 , 0 , 0 }"		51470	3		=			
ANR	51543	Identifier	sel		51470	0					
ANR	51544	InitializerList	selection		51470	1					
ANR	51545	Identifier	selection		51470	0					
ANR	51546	PrimaryExpression	0		51470	1					
ANR	51547	PrimaryExpression	0		51470	2					
ANR	51548	PrimaryExpression	0		51470	3					
ANR	51549	ExpressionStatement	"vdagent_virtio_port_write_append ( virtio_port , sel , 4 )"	604:8:20968:21021	51470	1	True				
ANR	51550	CallExpression	"vdagent_virtio_port_write_append ( virtio_port , sel , 4 )"		51470	0					
ANR	51551	Callee	vdagent_virtio_port_write_append		51470	0					
ANR	51552	Identifier	vdagent_virtio_port_write_append		51470	0					
ANR	51553	ArgumentList	virtio_port		51470	1					
ANR	51554	Argument	virtio_port		51470	0					
ANR	51555	Identifier	virtio_port		51470	0					
ANR	51556	Argument	sel		51470	1					
ANR	51557	Identifier	sel		51470	0					
ANR	51558	Argument	4		51470	2					
ANR	51559	PrimaryExpression	4		51470	0					
ANR	51560	IfStatement	if ( data_type != - 1 )		51470	5					
ANR	51561	Condition	data_type != - 1	606:8:21037:21051	51470	0	True				
ANR	51562	EqualityExpression	data_type != - 1		51470	0		!=			
ANR	51563	Identifier	data_type		51470	0					
ANR	51564	UnaryOperationExpression	- 1		51470	1					
ANR	51565	UnaryOperator	-		51470	0					
ANR	51566	PrimaryExpression	1		51470	1					
ANR	51567	CompoundStatement		20:25:645:645	51470	1					
ANR	51568	ExpressionStatement	data_type = GUINT32_TO_LE ( data_type )	607:8:21064:21100	51470	0	True				
ANR	51569	AssignmentExpression	data_type = GUINT32_TO_LE ( data_type )		51470	0		=			
ANR	51570	Identifier	data_type		51470	0					
ANR	51571	CallExpression	GUINT32_TO_LE ( data_type )		51470	1					
ANR	51572	Callee	GUINT32_TO_LE		51470	0					
ANR	51573	Identifier	GUINT32_TO_LE		51470	0					
ANR	51574	ArgumentList	data_type		51470	1					
ANR	51575	Argument	data_type		51470	0					
ANR	51576	Identifier	data_type		51470	0					
ANR	51577	ExpressionStatement	"vdagent_virtio_port_write_append ( virtio_port , ( uint8_t * ) & data_type , 4 )"	608:8:21110:21180	51470	1	True				
ANR	51578	CallExpression	"vdagent_virtio_port_write_append ( virtio_port , ( uint8_t * ) & data_type , 4 )"		51470	0					
ANR	51579	Callee	vdagent_virtio_port_write_append		51470	0					
ANR	51580	Identifier	vdagent_virtio_port_write_append		51470	0					
ANR	51581	ArgumentList	virtio_port		51470	1					
ANR	51582	Argument	virtio_port		51470	0					
ANR	51583	Identifier	virtio_port		51470	0					
ANR	51584	Argument	( uint8_t * ) & data_type		51470	1					
ANR	51585	CastExpression	( uint8_t * ) & data_type		51470	0					
ANR	51586	CastTarget	uint8_t *		51470	0					
ANR	51587	UnaryOperationExpression	& data_type		51470	1					
ANR	51588	UnaryOperator	&		51470	0					
ANR	51589	Identifier	data_type		51470	1					
ANR	51590	Argument	4		51470	2					
ANR	51591	PrimaryExpression	4		51470	0					
ANR	51592	IfStatement	if ( msg_type == VD_AGENT_CLIPBOARD_GRAB )		51470	6					
ANR	51593	Condition	msg_type == VD_AGENT_CLIPBOARD_GRAB	611:8:21197:21231	51470	0	True				
ANR	51594	EqualityExpression	msg_type == VD_AGENT_CLIPBOARD_GRAB		51470	0		==			
ANR	51595	Identifier	msg_type		51470	0					
ANR	51596	Identifier	VD_AGENT_CLIPBOARD_GRAB		51470	1					
ANR	51597	ExpressionStatement	"virtio_msg_uint32_to_le ( data , data_size , 0 )"	612:8:21242:21285	51470	1	True				
ANR	51598	CallExpression	"virtio_msg_uint32_to_le ( data , data_size , 0 )"		51470	0					
ANR	51599	Callee	virtio_msg_uint32_to_le		51470	0					
ANR	51600	Identifier	virtio_msg_uint32_to_le		51470	0					
ANR	51601	ArgumentList	data		51470	1					
ANR	51602	Argument	data		51470	0					
ANR	51603	Identifier	data		51470	0					
ANR	51604	Argument	data_size		51470	1					
ANR	51605	Identifier	data_size		51470	0					
ANR	51606	Argument	0		51470	2					
ANR	51607	PrimaryExpression	0		51470	0					
ANR	51608	ExpressionStatement	"vdagent_virtio_port_write_append ( virtio_port , data , data_size )"	613:4:21291:21353	51470	7	True				
ANR	51609	CallExpression	"vdagent_virtio_port_write_append ( virtio_port , data , data_size )"		51470	0					
ANR	51610	Callee	vdagent_virtio_port_write_append		51470	0					
ANR	51611	Identifier	vdagent_virtio_port_write_append		51470	0					
ANR	51612	ArgumentList	virtio_port		51470	1					
ANR	51613	Argument	virtio_port		51470	0					
ANR	51614	Identifier	virtio_port		51470	0					
ANR	51615	Argument	data		51470	1					
ANR	51616	Identifier	data		51470	0					
ANR	51617	Argument	data_size		51470	2					
ANR	51618	Identifier	data_size		51470	0					
ANR	51619	ReturnType	static void		51470	1					
ANR	51620	Identifier	virtio_write_clipboard		51470	2					
ANR	51621	ParameterList	"uint8_t selection , uint32_t msg_type , uint32_t data_type , uint8_t * data , uint32_t data_size"		51470	3					
ANR	51622	Parameter	uint8_t selection	585:35:20311:20327	51470	0	True				
ANR	51623	ParameterType	uint8_t		51470	0					
ANR	51624	Identifier	selection		51470	1					
ANR	51625	Parameter	uint32_t msg_type	585:54:20330:20346	51470	1	True				
ANR	51626	ParameterType	uint32_t		51470	0					
ANR	51627	Identifier	msg_type		51470	1					
ANR	51628	Parameter	uint32_t data_type	586:4:20353:20370	51470	2	True				
ANR	51629	ParameterType	uint32_t		51470	0					
ANR	51630	Identifier	data_type		51470	1					
ANR	51631	Parameter	uint8_t * data	586:24:20373:20385	51470	3	True				
ANR	51632	ParameterType	uint8_t *		51470	0					
ANR	51633	Identifier	data		51470	1					
ANR	51634	Parameter	uint32_t data_size	586:39:20388:20405	51470	4	True				
ANR	51635	ParameterType	uint32_t		51470	0					
ANR	51636	Identifier	data_size		51470	1					
ANR	51637	CFGEntryNode	ENTRY		51470		True				
ANR	51638	CFGExitNode	EXIT		51470		True				
ANR	51639	Symbol	data_size		51470						
ANR	51640	Symbol	VDP_CLIENT_PORT		51470						
ANR	51641	Symbol	capabilities		51470						
ANR	51642	Symbol	data		51470						
ANR	51643	Symbol	GUINT32_TO_LE		51470						
ANR	51644	Symbol	& data_type		51470						
ANR	51645	Symbol	selection		51470						
ANR	51646	Symbol	size		51470						
ANR	51647	Symbol	capabilities_size		51470						
ANR	51648	Symbol	virtio_port		51470						
ANR	51649	Symbol	VD_AGENT_CLIPBOARD_GRAB		51470						
ANR	51650	Symbol	data_type		51470						
ANR	51651	Symbol	msg_type		51470						
ANR	51652	Symbol	sel		51470						
ANR	51653	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		51470						
ANR	51654	Symbol	VD_AGENT_HAS_CAPABILITY		51470						
ANR	51655	Function	do_agent_clipboard	617:0:21408:23943							
ANR	51656	FunctionDef	"do_agent_clipboard (struct udscs_connection * conn , struct udscs_message_header * header , uint8_t * data)"		51655	0					
ANR	51657	CompoundStatement		619:0:21529:23943	51655	0					
ANR	51658	IdentifierDeclStatement	uint8_t selection = header -> arg1 ;	620:4:21535:21567	51655	0	True				
ANR	51659	IdentifierDecl	selection = header -> arg1		51655	0					
ANR	51660	IdentifierDeclType	uint8_t		51655	0					
ANR	51661	Identifier	selection		51655	1					
ANR	51662	AssignmentExpression	selection = header -> arg1		51655	2		=			
ANR	51663	Identifier	selection		51655	0					
ANR	51664	PtrMemberAccess	header -> arg1		51655	1					
ANR	51665	Identifier	header		51655	0					
ANR	51666	Identifier	arg1		51655	1					
ANR	51667	IdentifierDeclStatement	"uint32_t msg_type = 0 , data_type = - 1 , size = header -> size ;"	621:4:21573:21631	51655	1	True				
ANR	51668	IdentifierDecl	msg_type = 0		51655	0					
ANR	51669	IdentifierDeclType	uint32_t		51655	0					
ANR	51670	Identifier	msg_type		51655	1					
ANR	51671	AssignmentExpression	msg_type = 0		51655	2		=			
ANR	51672	Identifier	msg_type		51655	0					
ANR	51673	PrimaryExpression	0		51655	1					
ANR	51674	IdentifierDecl	data_type = - 1		51655	1					
ANR	51675	IdentifierDeclType	uint32_t		51655	0					
ANR	51676	Identifier	data_type		51655	1					
ANR	51677	AssignmentExpression	data_type = - 1		51655	2		=			
ANR	51678	Identifier	data_type		51655	0					
ANR	51679	UnaryOperationExpression	- 1		51655	1					
ANR	51680	UnaryOperator	-		51655	0					
ANR	51681	PrimaryExpression	1		51655	1					
ANR	51682	IdentifierDecl	size = header -> size		51655	2					
ANR	51683	IdentifierDeclType	uint32_t		51655	0					
ANR	51684	Identifier	size		51655	1					
ANR	51685	AssignmentExpression	size = header -> size		51655	2		=			
ANR	51686	Identifier	size		51655	0					
ANR	51687	PtrMemberAccess	header -> size		51655	1					
ANR	51688	Identifier	header		51655	0					
ANR	51689	Identifier	size		51655	1					
ANR	51690	IfStatement	"if ( ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND ) )"		51655	2					
ANR	51691	Condition	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"	623:8:21642:21765	51655	0	True				
ANR	51692	UnaryOperationExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"		51655	0					
ANR	51693	UnaryOperator	!		51655	0					
ANR	51694	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_BY_DEMAND )"		51655	1					
ANR	51695	Callee	VD_AGENT_HAS_CAPABILITY		51655	0					
ANR	51696	Identifier	VD_AGENT_HAS_CAPABILITY		51655	0					
ANR	51697	ArgumentList	capabilities		51655	1					
ANR	51698	Argument	capabilities		51655	0					
ANR	51699	Identifier	capabilities		51655	0					
ANR	51700	Argument	capabilities_size		51655	1					
ANR	51701	Identifier	capabilities_size		51655	0					
ANR	51702	Argument	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		51655	2					
ANR	51703	Identifier	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		51655	0					
ANR	51704	GotoStatement	goto error ;	625:8:21776:21786	51655	1	True				
ANR	51705	Identifier	error		51655	0					
ANR	51706	IfStatement	if ( conn != active_session_conn )		51655	3					
ANR	51707	Condition	conn != active_session_conn	628:8:21866:21892	51655	0	True				
ANR	51708	EqualityExpression	conn != active_session_conn		51655	0		!=			
ANR	51709	Identifier	conn		51655	0					
ANR	51710	Identifier	active_session_conn		51655	1					
ANR	51711	CompoundStatement		10:37:365:365	51655	1					
ANR	51712	IfStatement	if ( debug )		51655	0					
ANR	51713	Condition	debug	629:12:21909:21913	51655	0	True				
ANR	51714	Identifier	debug		51655	0					
ANR	51715	Statement	syslog	630:12:21928:21933	51655	1	True				
ANR	51716	Statement	(	630:18:21934:21934	51655	1	True				
ANR	51717	Statement	LOG_DEBUG	630:19:21935:21943	51655	2	True				
ANR	51718	Statement	","	630:28:21944:21944	51655	3	True				
ANR	51719	Statement	"""%p clipboard req from agent which is not in """	630:30:21946:21991	51655	4	True				
ANR	51720	Statement	"""the active session?"""	631:30:22023:22043	51655	5	True				
ANR	51721	Statement	","	631:51:22044:22044	51655	6	True				
ANR	51722	Statement	conn	631:53:22046:22049	51655	7	True				
ANR	51723	Statement	)	631:57:22050:22050	51655	8	True				
ANR	51724	ExpressionStatement		631:58:22051:22051	51655	9	True				
ANR	51725	GotoStatement	goto error ;	632:8:22061:22071	51655	10	True				
ANR	51726	Identifier	error		51655	0					
ANR	51727	IfStatement	if ( ! virtio_port )		51655	4					
ANR	51728	Condition	! virtio_port	635:8:22088:22099	51655	0	True				
ANR	51729	UnaryOperationExpression	! virtio_port		51655	0					
ANR	51730	UnaryOperator	!		51655	0					
ANR	51731	Identifier	virtio_port		51655	1					
ANR	51732	CompoundStatement		17:22:572:572	51655	1					
ANR	51733	ExpressionStatement	"syslog ( LOG_ERR , ""Clipboard req from agent but no client connection"" )"	636:8:22112:22180	51655	0	True				
ANR	51734	CallExpression	"syslog ( LOG_ERR , ""Clipboard req from agent but no client connection"" )"		51655	0					
ANR	51735	Callee	syslog		51655	0					
ANR	51736	Identifier	syslog		51655	0					
ANR	51737	ArgumentList	LOG_ERR		51655	1					
ANR	51738	Argument	LOG_ERR		51655	0					
ANR	51739	Identifier	LOG_ERR		51655	0					
ANR	51740	Argument	"""Clipboard req from agent but no client connection"""		51655	1					
ANR	51741	PrimaryExpression	"""Clipboard req from agent but no client connection"""		51655	0					
ANR	51742	GotoStatement	goto error ;	637:8:22190:22200	51655	1	True				
ANR	51743	Identifier	error		51655	0					
ANR	51744	IfStatement	"if ( ! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) && selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD )"		51655	5					
ANR	51745	Condition	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) && selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD"	640:8:22217:22407	51655	0	True				
ANR	51746	AndExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION ) && selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD"		51655	0		&&			
ANR	51747	UnaryOperationExpression	"! VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		51655	0					
ANR	51748	UnaryOperator	!		51655	0					
ANR	51749	CallExpression	"VD_AGENT_HAS_CAPABILITY ( capabilities , capabilities_size , VD_AGENT_CAP_CLIPBOARD_SELECTION )"		51655	1					
ANR	51750	Callee	VD_AGENT_HAS_CAPABILITY		51655	0					
ANR	51751	Identifier	VD_AGENT_HAS_CAPABILITY		51655	0					
ANR	51752	ArgumentList	capabilities		51655	1					
ANR	51753	Argument	capabilities		51655	0					
ANR	51754	Identifier	capabilities		51655	0					
ANR	51755	Argument	capabilities_size		51655	1					
ANR	51756	Identifier	capabilities_size		51655	0					
ANR	51757	Argument	VD_AGENT_CAP_CLIPBOARD_SELECTION		51655	2					
ANR	51758	Identifier	VD_AGENT_CAP_CLIPBOARD_SELECTION		51655	0					
ANR	51759	EqualityExpression	selection != VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		51655	1		!=			
ANR	51760	Identifier	selection		51655	0					
ANR	51761	Identifier	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		51655	1					
ANR	51762	CompoundStatement		24:65:880:880	51655	1					
ANR	51763	GotoStatement	goto error ;	643:8:22420:22430	51655	0	True				
ANR	51764	Identifier	error		51655	0					
ANR	51765	SwitchStatement	switch ( header -> type )		51655	6					
ANR	51766	Condition	header -> type	646:12:22451:22462	51655	0	True				
ANR	51767	PtrMemberAccess	header -> type		51655	0					
ANR	51768	Identifier	header		51655	0					
ANR	51769	Identifier	type		51655	1					
ANR	51770	CompoundStatement		28:26:935:935	51655	1					
ANR	51771	Label	case VDAGENTD_CLIPBOARD_GRAB :	647:4:22471:22499	51655	0	True				
ANR	51772	Identifier	VDAGENTD_CLIPBOARD_GRAB		51655	0					
ANR	51773	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD_GRAB	648:8:22509:22543	51655	1	True				
ANR	51774	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD_GRAB		51655	0		=			
ANR	51775	Identifier	msg_type		51655	0					
ANR	51776	Identifier	VD_AGENT_CLIPBOARD_GRAB		51655	1					
ANR	51777	ExpressionStatement	agent_owns_clipboard [ selection ] = 1	649:8:22553:22588	51655	2	True				
ANR	51778	AssignmentExpression	agent_owns_clipboard [ selection ] = 1		51655	0		=			
ANR	51779	ArrayIndexing	agent_owns_clipboard [ selection ]		51655	0					
ANR	51780	Identifier	agent_owns_clipboard		51655	0					
ANR	51781	Identifier	selection		51655	1					
ANR	51782	PrimaryExpression	1		51655	1					
ANR	51783	BreakStatement	break ;	650:8:22598:22603	51655	3	True				
ANR	51784	Label	case VDAGENTD_CLIPBOARD_REQUEST :	651:4:22609:22640	51655	4	True				
ANR	51785	Identifier	VDAGENTD_CLIPBOARD_REQUEST		51655	0					
ANR	51786	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD_REQUEST	652:8:22650:22687	51655	5	True				
ANR	51787	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD_REQUEST		51655	0		=			
ANR	51788	Identifier	msg_type		51655	0					
ANR	51789	Identifier	VD_AGENT_CLIPBOARD_REQUEST		51655	1					
ANR	51790	ExpressionStatement	data_type = header -> arg2	653:8:22697:22721	51655	6	True				
ANR	51791	AssignmentExpression	data_type = header -> arg2		51655	0		=			
ANR	51792	Identifier	data_type		51655	0					
ANR	51793	PtrMemberAccess	header -> arg2		51655	1					
ANR	51794	Identifier	header		51655	0					
ANR	51795	Identifier	arg2		51655	1					
ANR	51796	ExpressionStatement	size = 0	654:8:22731:22739	51655	7	True				
ANR	51797	AssignmentExpression	size = 0		51655	0		=			
ANR	51798	Identifier	size		51655	0					
ANR	51799	PrimaryExpression	0		51655	1					
ANR	51800	BreakStatement	break ;	655:8:22749:22754	51655	8	True				
ANR	51801	Label	case VDAGENTD_CLIPBOARD_DATA :	656:4:22760:22788	51655	9	True				
ANR	51802	Identifier	VDAGENTD_CLIPBOARD_DATA		51655	0					
ANR	51803	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD	657:8:22798:22827	51655	10	True				
ANR	51804	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD		51655	0		=			
ANR	51805	Identifier	msg_type		51655	0					
ANR	51806	Identifier	VD_AGENT_CLIPBOARD		51655	1					
ANR	51807	ExpressionStatement	data_type = header -> arg2	658:8:22837:22861	51655	11	True				
ANR	51808	AssignmentExpression	data_type = header -> arg2		51655	0		=			
ANR	51809	Identifier	data_type		51655	0					
ANR	51810	PtrMemberAccess	header -> arg2		51655	1					
ANR	51811	Identifier	header		51655	0					
ANR	51812	Identifier	arg2		51655	1					
ANR	51813	IfStatement	if ( max_clipboard != - 1 && size > max_clipboard )		51655	12					
ANR	51814	Condition	max_clipboard != - 1 && size > max_clipboard	659:12:22875:22917	51655	0	True				
ANR	51815	AndExpression	max_clipboard != - 1 && size > max_clipboard		51655	0		&&			
ANR	51816	EqualityExpression	max_clipboard != - 1		51655	0		!=			
ANR	51817	Identifier	max_clipboard		51655	0					
ANR	51818	UnaryOperationExpression	- 1		51655	1					
ANR	51819	UnaryOperator	-		51655	0					
ANR	51820	PrimaryExpression	1		51655	1					
ANR	51821	RelationalExpression	size > max_clipboard		51655	1		>			
ANR	51822	Identifier	size		51655	0					
ANR	51823	Identifier	max_clipboard		51655	1					
ANR	51824	CompoundStatement		41:57:1390:1390	51655	1					
ANR	51825	ExpressionStatement	"syslog ( LOG_WARNING , ""clipboard is too large (%d > %d), discarding"" , size , max_clipboard )"	660:12:22934:23041	51655	0	True				
ANR	51826	CallExpression	"syslog ( LOG_WARNING , ""clipboard is too large (%d > %d), discarding"" , size , max_clipboard )"		51655	0					
ANR	51827	Callee	syslog		51655	0					
ANR	51828	Identifier	syslog		51655	0					
ANR	51829	ArgumentList	LOG_WARNING		51655	1					
ANR	51830	Argument	LOG_WARNING		51655	0					
ANR	51831	Identifier	LOG_WARNING		51655	0					
ANR	51832	Argument	"""clipboard is too large (%d > %d), discarding"""		51655	1					
ANR	51833	PrimaryExpression	"""clipboard is too large (%d > %d), discarding"""		51655	0					
ANR	51834	Argument	size		51655	2					
ANR	51835	Identifier	size		51655	0					
ANR	51836	Argument	max_clipboard		51655	3					
ANR	51837	Identifier	max_clipboard		51655	0					
ANR	51838	ExpressionStatement	"virtio_write_clipboard ( selection , msg_type , data_type , NULL , 0 )"	662:12:23055:23118	51655	1	True				
ANR	51839	CallExpression	"virtio_write_clipboard ( selection , msg_type , data_type , NULL , 0 )"		51655	0					
ANR	51840	Callee	virtio_write_clipboard		51655	0					
ANR	51841	Identifier	virtio_write_clipboard		51655	0					
ANR	51842	ArgumentList	selection		51655	1					
ANR	51843	Argument	selection		51655	0					
ANR	51844	Identifier	selection		51655	0					
ANR	51845	Argument	msg_type		51655	1					
ANR	51846	Identifier	msg_type		51655	0					
ANR	51847	Argument	data_type		51655	2					
ANR	51848	Identifier	data_type		51655	0					
ANR	51849	Argument	NULL		51655	3					
ANR	51850	Identifier	NULL		51655	0					
ANR	51851	Argument	0		51655	4					
ANR	51852	PrimaryExpression	0		51655	0					
ANR	51853	ReturnStatement	return 0 ;	663:12:23132:23140	51655	2	True				
ANR	51854	PrimaryExpression	0		51655	0					
ANR	51855	BreakStatement	break ;	665:8:23160:23165	51655	13	True				
ANR	51856	Label	case VDAGENTD_CLIPBOARD_RELEASE :	666:4:23171:23202	51655	14	True				
ANR	51857	Identifier	VDAGENTD_CLIPBOARD_RELEASE		51655	0					
ANR	51858	ExpressionStatement	msg_type = VD_AGENT_CLIPBOARD_RELEASE	667:8:23212:23249	51655	15	True				
ANR	51859	AssignmentExpression	msg_type = VD_AGENT_CLIPBOARD_RELEASE		51655	0		=			
ANR	51860	Identifier	msg_type		51655	0					
ANR	51861	Identifier	VD_AGENT_CLIPBOARD_RELEASE		51655	1					
ANR	51862	ExpressionStatement	size = 0	668:8:23259:23267	51655	16	True				
ANR	51863	AssignmentExpression	size = 0		51655	0		=			
ANR	51864	Identifier	size		51655	0					
ANR	51865	PrimaryExpression	0		51655	1					
ANR	51866	ExpressionStatement	agent_owns_clipboard [ selection ] = 0	669:8:23277:23312	51655	17	True				
ANR	51867	AssignmentExpression	agent_owns_clipboard [ selection ] = 0		51655	0		=			
ANR	51868	ArrayIndexing	agent_owns_clipboard [ selection ]		51655	0					
ANR	51869	Identifier	agent_owns_clipboard		51655	0					
ANR	51870	Identifier	selection		51655	1					
ANR	51871	PrimaryExpression	0		51655	1					
ANR	51872	BreakStatement	break ;	670:8:23322:23327	51655	18	True				
ANR	51873	Label	default :	671:4:23333:23340	51655	19	True				
ANR	51874	Identifier	default		51655	0					
ANR	51875	ExpressionStatement	"syslog ( LOG_WARNING , ""unexpected clipboard message type"" )"	672:8:23350:23406	51655	20	True				
ANR	51876	CallExpression	"syslog ( LOG_WARNING , ""unexpected clipboard message type"" )"		51655	0					
ANR	51877	Callee	syslog		51655	0					
ANR	51878	Identifier	syslog		51655	0					
ANR	51879	ArgumentList	LOG_WARNING		51655	1					
ANR	51880	Argument	LOG_WARNING		51655	0					
ANR	51881	Identifier	LOG_WARNING		51655	0					
ANR	51882	Argument	"""unexpected clipboard message type"""		51655	1					
ANR	51883	PrimaryExpression	"""unexpected clipboard message type"""		51655	0					
ANR	51884	GotoStatement	goto error ;	673:8:23416:23426	51655	21	True				
ANR	51885	Identifier	error		51655	0					
ANR	51886	IfStatement	if ( size != header -> size )		51655	7					
ANR	51887	Condition	size != header -> size	676:8:23443:23462	51655	0	True				
ANR	51888	EqualityExpression	size != header -> size		51655	0		!=			
ANR	51889	Identifier	size		51655	0					
ANR	51890	PtrMemberAccess	header -> size		51655	1					
ANR	51891	Identifier	header		51655	0					
ANR	51892	Identifier	size		51655	1					
ANR	51893	CompoundStatement		58:30:1935:1935	51655	1					
ANR	51894	ExpressionStatement	"syslog ( LOG_ERR , ""unexpected extra data in clipboard msg, disconnecting agent"" )"	677:8:23475:23568	51655	0	True				
ANR	51895	CallExpression	"syslog ( LOG_ERR , ""unexpected extra data in clipboard msg, disconnecting agent"" )"		51655	0					
ANR	51896	Callee	syslog		51655	0					
ANR	51897	Identifier	syslog		51655	0					
ANR	51898	ArgumentList	LOG_ERR		51655	1					
ANR	51899	Argument	LOG_ERR		51655	0					
ANR	51900	Identifier	LOG_ERR		51655	0					
ANR	51901	Argument	"""unexpected extra data in clipboard msg, disconnecting agent"""		51655	1					
ANR	51902	PrimaryExpression	"""unexpected extra data in clipboard msg, disconnecting agent"""		51655	0					
ANR	51903	ReturnStatement	return - 1 ;	679:8:23578:23587	51655	1	True				
ANR	51904	UnaryOperationExpression	- 1		51655	0					
ANR	51905	UnaryOperator	-		51655	0					
ANR	51906	PrimaryExpression	1		51655	1					
ANR	51907	ExpressionStatement	"virtio_write_clipboard ( selection , msg_type , data_type , data , header -> size )"	682:4:23600:23674	51655	8	True				
ANR	51908	CallExpression	"virtio_write_clipboard ( selection , msg_type , data_type , data , header -> size )"		51655	0					
ANR	51909	Callee	virtio_write_clipboard		51655	0					
ANR	51910	Identifier	virtio_write_clipboard		51655	0					
ANR	51911	ArgumentList	selection		51655	1					
ANR	51912	Argument	selection		51655	0					
ANR	51913	Identifier	selection		51655	0					
ANR	51914	Argument	msg_type		51655	1					
ANR	51915	Identifier	msg_type		51655	0					
ANR	51916	Argument	data_type		51655	2					
ANR	51917	Identifier	data_type		51655	0					
ANR	51918	Argument	data		51655	3					
ANR	51919	Identifier	data		51655	0					
ANR	51920	Argument	header -> size		51655	4					
ANR	51921	PtrMemberAccess	header -> size		51655	0					
ANR	51922	Identifier	header		51655	0					
ANR	51923	Identifier	size		51655	1					
ANR	51924	ReturnStatement	return 0 ;	684:4:23681:23689	51655	9	True				
ANR	51925	PrimaryExpression	0		51655	0					
ANR	51926	Label	error :	686:0:23692:23697	51655	10	True				
ANR	51927	Identifier	error		51655	0					
ANR	51928	IfStatement	if ( header -> type == VDAGENTD_CLIPBOARD_REQUEST )		51655	11					
ANR	51929	Condition	header -> type == VDAGENTD_CLIPBOARD_REQUEST	687:8:23707:23748	51655	0	True				
ANR	51930	EqualityExpression	header -> type == VDAGENTD_CLIPBOARD_REQUEST		51655	0		==			
ANR	51931	PtrMemberAccess	header -> type		51655	0					
ANR	51932	Identifier	header		51655	0					
ANR	51933	Identifier	type		51655	1					
ANR	51934	Identifier	VDAGENTD_CLIPBOARD_REQUEST		51655	1					
ANR	51935	CompoundStatement		69:52:2221:2221	51655	1					
ANR	51936	ExpressionStatement	"udscs_write ( conn , VDAGENTD_CLIPBOARD_DATA , selection , VD_AGENT_CLIPBOARD_NONE , NULL , 0 )"	689:8:23814:23921	51655	0	True				
ANR	51937	CallExpression	"udscs_write ( conn , VDAGENTD_CLIPBOARD_DATA , selection , VD_AGENT_CLIPBOARD_NONE , NULL , 0 )"		51655	0					
ANR	51938	Callee	udscs_write		51655	0					
ANR	51939	Identifier	udscs_write		51655	0					
ANR	51940	ArgumentList	conn		51655	1					
ANR	51941	Argument	conn		51655	0					
ANR	51942	Identifier	conn		51655	0					
ANR	51943	Argument	VDAGENTD_CLIPBOARD_DATA		51655	1					
ANR	51944	Identifier	VDAGENTD_CLIPBOARD_DATA		51655	0					
ANR	51945	Argument	selection		51655	2					
ANR	51946	Identifier	selection		51655	0					
ANR	51947	Argument	VD_AGENT_CLIPBOARD_NONE		51655	3					
ANR	51948	Identifier	VD_AGENT_CLIPBOARD_NONE		51655	0					
ANR	51949	Argument	NULL		51655	4					
ANR	51950	Identifier	NULL		51655	0					
ANR	51951	Argument	0		51655	5					
ANR	51952	PrimaryExpression	0		51655	0					
ANR	51953	ReturnStatement	return 0 ;	692:4:23933:23941	51655	12	True				
ANR	51954	PrimaryExpression	0		51655	0					
ANR	51955	ReturnType	static int		51655	1					
ANR	51956	Identifier	do_agent_clipboard		51655	2					
ANR	51957	ParameterList	"struct udscs_connection * conn , struct udscs_message_header * header , uint8_t * data"		51655	3					
ANR	51958	Parameter	struct udscs_connection * conn	617:30:21438:21466	51655	0	True				
ANR	51959	ParameterType	struct udscs_connection *		51655	0					
ANR	51960	Identifier	conn		51655	1					
ANR	51961	Parameter	struct udscs_message_header * header	618:8:21477:21511	51655	1	True				
ANR	51962	ParameterType	struct udscs_message_header *		51655	0					
ANR	51963	Identifier	header		51655	1					
ANR	51964	Parameter	uint8_t * data	618:45:21514:21526	51655	2	True				
ANR	51965	ParameterType	uint8_t *		51655	0					
ANR	51966	Identifier	data		51655	1					
ANR	51967	CFGEntryNode	ENTRY		51655		True				
ANR	51968	CFGExitNode	EXIT		51655		True				
ANR	51969	Symbol	conn		51655						
ANR	51970	Symbol	data		51655						
ANR	51971	Symbol	LOG_WARNING		51655						
ANR	51972	Symbol	agent_owns_clipboard		51655						
ANR	51973	Symbol	max_clipboard		51655						
ANR	51974	Symbol	capabilities_size		51655						
ANR	51975	Symbol	active_session_conn		51655						
ANR	51976	Symbol	LOG_ERR		51655						
ANR	51977	Symbol	VD_AGENT_CLIPBOARD_GRAB		51655						
ANR	51978	Symbol	VDAGENTD_CLIPBOARD_REQUEST		51655						
ANR	51979	Symbol	VD_AGENT_CLIPBOARD		51655						
ANR	51980	Symbol	VD_AGENT_CLIPBOARD_REQUEST		51655						
ANR	51981	Symbol	capabilities		51655						
ANR	51982	Symbol	debug		51655						
ANR	51983	Symbol	NULL		51655						
ANR	51984	Symbol	header -> arg2		51655						
ANR	51985	Symbol	header -> arg1		51655						
ANR	51986	Symbol	VD_AGENT_CAP_CLIPBOARD_BY_DEMAND		51655						
ANR	51987	Symbol	* header		51655						
ANR	51988	Symbol	selection		51655						
ANR	51989	Symbol	size		51655						
ANR	51990	Symbol	* agent_owns_clipboard		51655						
ANR	51991	Symbol	virtio_port		51655						
ANR	51992	Symbol	VD_AGENT_CLIPBOARD_NONE		51655						
ANR	51993	Symbol	data_type		51655						
ANR	51994	Symbol	VD_AGENT_CLIPBOARD_RELEASE		51655						
ANR	51995	Symbol	VDAGENTD_CLIPBOARD_DATA		51655						
ANR	51996	Symbol	header		51655						
ANR	51997	Symbol	msg_type		51655						
ANR	51998	Symbol	header -> size		51655						
ANR	51999	Symbol	* selection		51655						
ANR	52000	Symbol	header -> type		51655						
ANR	52001	Symbol	VD_AGENT_HAS_CAPABILITY		51655						
ANR	52002	Symbol	VD_AGENT_CAP_CLIPBOARD_SELECTION		51655						
ANR	52003	Symbol	VD_AGENT_CLIPBOARD_SELECTION_CLIPBOARD		51655						
ANR	52004	Function	check_xorg_resolution	702:0:24433:26385							
ANR	52005	FunctionDef	check_xorg_resolution ()		52004	0					
ANR	52006	CompoundStatement		703:0:24473:26385	52004	0					
ANR	52007	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( active_session_conn ) ;	704:4:24479:24551	52004	0	True				
ANR	52008	IdentifierDecl	* agent_data = udscs_get_user_data ( active_session_conn )		52004	0					
ANR	52009	IdentifierDeclType	struct agent_data *		52004	0					
ANR	52010	Identifier	agent_data		52004	1					
ANR	52011	AssignmentExpression	* agent_data = udscs_get_user_data ( active_session_conn )		52004	2		=			
ANR	52012	Identifier	agent_data		52004	0					
ANR	52013	CallExpression	udscs_get_user_data ( active_session_conn )		52004	1					
ANR	52014	Callee	udscs_get_user_data		52004	0					
ANR	52015	Identifier	udscs_get_user_data		52004	0					
ANR	52016	ArgumentList	active_session_conn		52004	1					
ANR	52017	Argument	active_session_conn		52004	0					
ANR	52018	Identifier	active_session_conn		52004	0					
ANR	52019	IfStatement	if ( agent_data && agent_data -> screen_info )		52004	1					
ANR	52020	Condition	agent_data && agent_data -> screen_info	706:8:24562:24598	52004	0	True				
ANR	52021	AndExpression	agent_data && agent_data -> screen_info		52004	0		&&			
ANR	52022	Identifier	agent_data		52004	0					
ANR	52023	PtrMemberAccess	agent_data -> screen_info		52004	1					
ANR	52024	Identifier	agent_data		52004	0					
ANR	52025	Identifier	screen_info		52004	1					
ANR	52026	CompoundStatement		4:47:127:127	52004	1					
ANR	52027	IfStatement	if ( ! uinput )		52004	0					
ANR	52028	Condition	! uinput	707:12:24615:24621	52004	0	True				
ANR	52029	UnaryOperationExpression	! uinput		52004	0					
ANR	52030	UnaryOperator	!		52004	0					
ANR	52031	Identifier	uinput		52004	1					
ANR	52032	ExpressionStatement	"uinput = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"	708:12:24636:25060	52004	1	True				
ANR	52033	AssignmentExpression	"uinput = vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		52004	0		=			
ANR	52034	Identifier	uinput		52004	0					
ANR	52035	CallExpression	"vdagentd_uinput_create ( uinput_device , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count , debug > 1 , uinput_fake )"		52004	1					
ANR	52036	Callee	vdagentd_uinput_create		52004	0					
ANR	52037	Identifier	vdagentd_uinput_create		52004	0					
ANR	52038	ArgumentList	uinput_device		52004	1					
ANR	52039	Argument	uinput_device		52004	0					
ANR	52040	Identifier	uinput_device		52004	0					
ANR	52041	Argument	agent_data -> width		52004	1					
ANR	52042	PtrMemberAccess	agent_data -> width		52004	0					
ANR	52043	Identifier	agent_data		52004	0					
ANR	52044	Identifier	width		52004	1					
ANR	52045	Argument	agent_data -> height		52004	2					
ANR	52046	PtrMemberAccess	agent_data -> height		52004	0					
ANR	52047	Identifier	agent_data		52004	0					
ANR	52048	Identifier	height		52004	1					
ANR	52049	Argument	agent_data -> screen_info		52004	3					
ANR	52050	PtrMemberAccess	agent_data -> screen_info		52004	0					
ANR	52051	Identifier	agent_data		52004	0					
ANR	52052	Identifier	screen_info		52004	1					
ANR	52053	Argument	agent_data -> screen_count		52004	4					
ANR	52054	PtrMemberAccess	agent_data -> screen_count		52004	0					
ANR	52055	Identifier	agent_data		52004	0					
ANR	52056	Identifier	screen_count		52004	1					
ANR	52057	Argument	debug > 1		52004	5					
ANR	52058	RelationalExpression	debug > 1		52004	0		>			
ANR	52059	Identifier	debug		52004	0					
ANR	52060	PrimaryExpression	1		52004	1					
ANR	52061	Argument	uinput_fake		52004	6					
ANR	52062	Identifier	uinput_fake		52004	0					
ANR	52063	ElseStatement	else		52004	0					
ANR	52064	ExpressionStatement	"vdagentd_uinput_update_size ( & uinput , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count )"	716:12:25087:25373	52004	0	True				
ANR	52065	CallExpression	"vdagentd_uinput_update_size ( & uinput , agent_data -> width , agent_data -> height , agent_data -> screen_info , agent_data -> screen_count )"		52004	0					
ANR	52066	Callee	vdagentd_uinput_update_size		52004	0					
ANR	52067	Identifier	vdagentd_uinput_update_size		52004	0					
ANR	52068	ArgumentList	& uinput		52004	1					
ANR	52069	Argument	& uinput		52004	0					
ANR	52070	UnaryOperationExpression	& uinput		52004	0					
ANR	52071	UnaryOperator	&		52004	0					
ANR	52072	Identifier	uinput		52004	1					
ANR	52073	Argument	agent_data -> width		52004	1					
ANR	52074	PtrMemberAccess	agent_data -> width		52004	0					
ANR	52075	Identifier	agent_data		52004	0					
ANR	52076	Identifier	width		52004	1					
ANR	52077	Argument	agent_data -> height		52004	2					
ANR	52078	PtrMemberAccess	agent_data -> height		52004	0					
ANR	52079	Identifier	agent_data		52004	0					
ANR	52080	Identifier	height		52004	1					
ANR	52081	Argument	agent_data -> screen_info		52004	3					
ANR	52082	PtrMemberAccess	agent_data -> screen_info		52004	0					
ANR	52083	Identifier	agent_data		52004	0					
ANR	52084	Identifier	screen_info		52004	1					
ANR	52085	Argument	agent_data -> screen_count		52004	4					
ANR	52086	PtrMemberAccess	agent_data -> screen_count		52004	0					
ANR	52087	Identifier	agent_data		52004	0					
ANR	52088	Identifier	screen_count		52004	1					
ANR	52089	IfStatement	if ( ! uinput )		52004	1					
ANR	52090	Condition	! uinput	721:12:25387:25393	52004	0	True				
ANR	52091	UnaryOperationExpression	! uinput		52004	0					
ANR	52092	UnaryOperator	!		52004	0					
ANR	52093	Identifier	uinput		52004	1					
ANR	52094	CompoundStatement		19:21:922:922	52004	1					
ANR	52095	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"	722:12:25410:25448	52004	0	True				
ANR	52096	CallExpression	"syslog ( LOG_CRIT , ""Fatal uinput error"" )"		52004	0					
ANR	52097	Callee	syslog		52004	0					
ANR	52098	Identifier	syslog		52004	0					
ANR	52099	ArgumentList	LOG_CRIT		52004	1					
ANR	52100	Argument	LOG_CRIT		52004	0					
ANR	52101	Identifier	LOG_CRIT		52004	0					
ANR	52102	Argument	"""Fatal uinput error"""		52004	1					
ANR	52103	PrimaryExpression	"""Fatal uinput error"""		52004	0					
ANR	52104	ExpressionStatement	retval = 1	723:12:25462:25472	52004	1	True				
ANR	52105	AssignmentExpression	retval = 1		52004	0		=			
ANR	52106	Identifier	retval		52004	0					
ANR	52107	PrimaryExpression	1		52004	1					
ANR	52108	ExpressionStatement	quit = 1	724:12:25486:25494	52004	2	True				
ANR	52109	AssignmentExpression	quit = 1		52004	0		=			
ANR	52110	Identifier	quit		52004	0					
ANR	52111	PrimaryExpression	1		52004	1					
ANR	52112	ReturnStatement	return ;	725:12:25508:25514	52004	3	True				
ANR	52113	IfStatement	if ( ! virtio_port )		52004	2					
ANR	52114	Condition	! virtio_port	728:12:25539:25550	52004	0	True				
ANR	52115	UnaryOperationExpression	! virtio_port		52004	0					
ANR	52116	UnaryOperator	!		52004	0					
ANR	52117	Identifier	virtio_port		52004	1					
ANR	52118	CompoundStatement		26:26:1079:1079	52004	1					
ANR	52119	ExpressionStatement	"syslog ( LOG_INFO , ""opening vdagent virtio channel"" )"	729:12:25567:25617	52004	0	True				
ANR	52120	CallExpression	"syslog ( LOG_INFO , ""opening vdagent virtio channel"" )"		52004	0					
ANR	52121	Callee	syslog		52004	0					
ANR	52122	Identifier	syslog		52004	0					
ANR	52123	ArgumentList	LOG_INFO		52004	1					
ANR	52124	Argument	LOG_INFO		52004	0					
ANR	52125	Identifier	LOG_INFO		52004	0					
ANR	52126	Argument	"""opening vdagent virtio channel"""		52004	1					
ANR	52127	PrimaryExpression	"""opening vdagent virtio channel"""		52004	0					
ANR	52128	ExpressionStatement	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"	730:12:25631:25819	52004	1	True				
ANR	52129	AssignmentExpression	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		52004	0		=			
ANR	52130	Identifier	virtio_port		52004	0					
ANR	52131	CallExpression	"vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		52004	1					
ANR	52132	Callee	vdagent_virtio_port_create		52004	0					
ANR	52133	Identifier	vdagent_virtio_port_create		52004	0					
ANR	52134	ArgumentList	portdev		52004	1					
ANR	52135	Argument	portdev		52004	0					
ANR	52136	Identifier	portdev		52004	0					
ANR	52137	Argument	virtio_port_read_complete		52004	1					
ANR	52138	Identifier	virtio_port_read_complete		52004	0					
ANR	52139	Argument	NULL		52004	2					
ANR	52140	Identifier	NULL		52004	0					
ANR	52141	IfStatement	if ( ! virtio_port )		52004	2					
ANR	52142	Condition	! virtio_port	733:16:25837:25848	52004	0	True				
ANR	52143	UnaryOperationExpression	! virtio_port		52004	0					
ANR	52144	UnaryOperator	!		52004	0					
ANR	52145	Identifier	virtio_port		52004	1					
ANR	52146	CompoundStatement		31:30:1377:1377	52004	1					
ANR	52147	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"	734:16:25869:25931	52004	0	True				
ANR	52148	CallExpression	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"		52004	0					
ANR	52149	Callee	syslog		52004	0					
ANR	52150	Identifier	syslog		52004	0					
ANR	52151	ArgumentList	LOG_CRIT		52004	1					
ANR	52152	Argument	LOG_CRIT		52004	0					
ANR	52153	Identifier	LOG_CRIT		52004	0					
ANR	52154	Argument	"""Fatal error opening vdagent virtio channel"""		52004	1					
ANR	52155	PrimaryExpression	"""Fatal error opening vdagent virtio channel"""		52004	0					
ANR	52156	ExpressionStatement	retval = 1	735:16:25949:25959	52004	1	True				
ANR	52157	AssignmentExpression	retval = 1		52004	0		=			
ANR	52158	Identifier	retval		52004	0					
ANR	52159	PrimaryExpression	1		52004	1					
ANR	52160	ExpressionStatement	quit = 1	736:16:25977:25985	52004	2	True				
ANR	52161	AssignmentExpression	quit = 1		52004	0		=			
ANR	52162	Identifier	quit		52004	0					
ANR	52163	PrimaryExpression	1		52004	1					
ANR	52164	ReturnStatement	return ;	737:16:26003:26009	52004	3	True				
ANR	52165	ExpressionStatement	"send_capabilities ( virtio_port , 1 )"	739:12:26037:26070	52004	3	True				
ANR	52166	CallExpression	"send_capabilities ( virtio_port , 1 )"		52004	0					
ANR	52167	Callee	send_capabilities		52004	0					
ANR	52168	Identifier	send_capabilities		52004	0					
ANR	52169	ArgumentList	virtio_port		52004	1					
ANR	52170	Argument	virtio_port		52004	0					
ANR	52171	Identifier	virtio_port		52004	0					
ANR	52172	Argument	1		52004	1					
ANR	52173	PrimaryExpression	1		52004	0					
ANR	52174	ElseStatement	else		52004	0					
ANR	52175	CompoundStatement		39:11:1619:1619	52004	0					
ANR	52176	ExpressionStatement	vdagentd_uinput_destroy ( & uinput )	743:8:26130:26162	52004	0	True				
ANR	52177	CallExpression	vdagentd_uinput_destroy ( & uinput )		52004	0					
ANR	52178	Callee	vdagentd_uinput_destroy		52004	0					
ANR	52179	Identifier	vdagentd_uinput_destroy		52004	0					
ANR	52180	ArgumentList	& uinput		52004	1					
ANR	52181	Argument	& uinput		52004	0					
ANR	52182	UnaryOperationExpression	& uinput		52004	0					
ANR	52183	UnaryOperator	&		52004	0					
ANR	52184	Identifier	uinput		52004	1					
ANR	52185	IfStatement	if ( virtio_port )		52004	1					
ANR	52186	Condition	virtio_port	745:12:26183:26193	52004	0	True				
ANR	52187	Identifier	virtio_port		52004	0					
ANR	52188	CompoundStatement		43:25:1722:1722	52004	1					
ANR	52189	ExpressionStatement	vdagent_virtio_port_flush ( & virtio_port )	746:12:26210:26249	52004	0	True				
ANR	52190	CallExpression	vdagent_virtio_port_flush ( & virtio_port )		52004	0					
ANR	52191	Callee	vdagent_virtio_port_flush		52004	0					
ANR	52192	Identifier	vdagent_virtio_port_flush		52004	0					
ANR	52193	ArgumentList	& virtio_port		52004	1					
ANR	52194	Argument	& virtio_port		52004	0					
ANR	52195	UnaryOperationExpression	& virtio_port		52004	0					
ANR	52196	UnaryOperator	&		52004	0					
ANR	52197	Identifier	virtio_port		52004	1					
ANR	52198	ExpressionStatement	vdagent_virtio_port_destroy ( & virtio_port )	747:12:26263:26304	52004	1	True				
ANR	52199	CallExpression	vdagent_virtio_port_destroy ( & virtio_port )		52004	0					
ANR	52200	Callee	vdagent_virtio_port_destroy		52004	0					
ANR	52201	Identifier	vdagent_virtio_port_destroy		52004	0					
ANR	52202	ArgumentList	& virtio_port		52004	1					
ANR	52203	Argument	& virtio_port		52004	0					
ANR	52204	UnaryOperationExpression	& virtio_port		52004	0					
ANR	52205	UnaryOperator	&		52004	0					
ANR	52206	Identifier	virtio_port		52004	1					
ANR	52207	ExpressionStatement	"syslog ( LOG_INFO , ""closed vdagent virtio channel"" )"	748:12:26318:26367	52004	2	True				
ANR	52208	CallExpression	"syslog ( LOG_INFO , ""closed vdagent virtio channel"" )"		52004	0					
ANR	52209	Callee	syslog		52004	0					
ANR	52210	Identifier	syslog		52004	0					
ANR	52211	ArgumentList	LOG_INFO		52004	1					
ANR	52212	Argument	LOG_INFO		52004	0					
ANR	52213	Identifier	LOG_INFO		52004	0					
ANR	52214	Argument	"""closed vdagent virtio channel"""		52004	1					
ANR	52215	PrimaryExpression	"""closed vdagent virtio channel"""		52004	0					
ANR	52216	ReturnType	static void		52004	1					
ANR	52217	Identifier	check_xorg_resolution		52004	2					
ANR	52218	ParameterList			52004	3					
ANR	52219	CFGEntryNode	ENTRY		52004		True				
ANR	52220	CFGExitNode	EXIT		52004		True				
ANR	52221	Symbol	vdagentd_uinput_create		52004						
ANR	52222	Symbol	vdagent_virtio_port_create		52004						
ANR	52223	Symbol	agent_data -> screen_count		52004						
ANR	52224	Symbol	debug		52004						
ANR	52225	Symbol	LOG_INFO		52004						
ANR	52226	Symbol	NULL		52004						
ANR	52227	Symbol	agent_data -> screen_info		52004						
ANR	52228	Symbol	agent_data -> height		52004						
ANR	52229	Symbol	* agent_data		52004						
ANR	52230	Symbol	agent_data -> width		52004						
ANR	52231	Symbol	retval		52004						
ANR	52232	Symbol	uinput_device		52004						
ANR	52233	Symbol	& virtio_port		52004						
ANR	52234	Symbol	active_session_conn		52004						
ANR	52235	Symbol	portdev		52004						
ANR	52236	Symbol	virtio_port		52004						
ANR	52237	Symbol	uinput		52004						
ANR	52238	Symbol	agent_data		52004						
ANR	52239	Symbol	uinput_fake		52004						
ANR	52240	Symbol	& uinput		52004						
ANR	52241	Symbol	quit		52004						
ANR	52242	Symbol	virtio_port_read_complete		52004						
ANR	52243	Symbol	udscs_get_user_data		52004						
ANR	52244	Symbol	LOG_CRIT		52004						
ANR	52245	Function	connection_matches_active_session	753:0:26388:26874							
ANR	52246	FunctionDef	"connection_matches_active_session (struct udscs_connection * * connp , void * priv)"		52245	0					
ANR	52247	CompoundStatement		755:0:26482:26874	52245	0					
ANR	52248	IdentifierDeclStatement	struct udscs_connection * * conn_ret = ( struct udscs_connection * * ) priv ;	756:4:26488:26557	52245	0	True				
ANR	52249	IdentifierDecl	* * conn_ret = ( struct udscs_connection * * ) priv		52245	0					
ANR	52250	IdentifierDeclType	struct udscs_connection * *		52245	0					
ANR	52251	Identifier	conn_ret		52245	1					
ANR	52252	AssignmentExpression	* * conn_ret = ( struct udscs_connection * * ) priv		52245	2		=			
ANR	52253	Identifier	conn_ret		52245	0					
ANR	52254	CastExpression	( struct udscs_connection * * ) priv		52245	1					
ANR	52255	CastTarget	struct udscs_connection * *		52245	0					
ANR	52256	Identifier	priv		52245	1					
ANR	52257	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( * connp ) ;	757:4:26563:26622	52245	1	True				
ANR	52258	IdentifierDecl	* agent_data = udscs_get_user_data ( * connp )		52245	0					
ANR	52259	IdentifierDeclType	struct agent_data *		52245	0					
ANR	52260	Identifier	agent_data		52245	1					
ANR	52261	AssignmentExpression	* agent_data = udscs_get_user_data ( * connp )		52245	2		=			
ANR	52262	Identifier	agent_data		52245	0					
ANR	52263	CallExpression	udscs_get_user_data ( * connp )		52245	1					
ANR	52264	Callee	udscs_get_user_data		52245	0					
ANR	52265	Identifier	udscs_get_user_data		52245	0					
ANR	52266	ArgumentList	* connp		52245	1					
ANR	52267	Argument	* connp		52245	0					
ANR	52268	UnaryOperationExpression	* connp		52245	0					
ANR	52269	UnaryOperator	*		52245	0					
ANR	52270	Identifier	connp		52245	1					
ANR	52271	IfStatement	if ( ! agent_data -> session || ! active_session )		52245	2					
ANR	52272	Condition	! agent_data -> session || ! active_session	760:8:26705:26743	52245	0	True				
ANR	52273	OrExpression	! agent_data -> session || ! active_session		52245	0		||			
ANR	52274	UnaryOperationExpression	! agent_data -> session		52245	0					
ANR	52275	UnaryOperator	!		52245	0					
ANR	52276	PtrMemberAccess	agent_data -> session		52245	1					
ANR	52277	Identifier	agent_data		52245	0					
ANR	52278	Identifier	session		52245	1					
ANR	52279	UnaryOperationExpression	! active_session		52245	1					
ANR	52280	UnaryOperator	!		52245	0					
ANR	52281	Identifier	active_session		52245	1					
ANR	52282	ReturnStatement	return 0 ;	761:8:26754:26762	52245	1	True				
ANR	52283	PrimaryExpression	0		52245	0					
ANR	52284	IfStatement	"if ( strcmp ( agent_data -> session , active_session ) )"		52245	3					
ANR	52285	Condition	"strcmp ( agent_data -> session , active_session )"	762:8:26772:26814	52245	0	True				
ANR	52286	CallExpression	"strcmp ( agent_data -> session , active_session )"		52245	0					
ANR	52287	Callee	strcmp		52245	0					
ANR	52288	Identifier	strcmp		52245	0					
ANR	52289	ArgumentList	agent_data -> session		52245	1					
ANR	52290	Argument	agent_data -> session		52245	0					
ANR	52291	PtrMemberAccess	agent_data -> session		52245	0					
ANR	52292	Identifier	agent_data		52245	0					
ANR	52293	Identifier	session		52245	1					
ANR	52294	Argument	active_session		52245	1					
ANR	52295	Identifier	active_session		52245	0					
ANR	52296	ReturnStatement	return 0 ;	763:8:26825:26833	52245	1	True				
ANR	52297	PrimaryExpression	0		52245	0					
ANR	52298	ExpressionStatement	* conn_ret = * connp	765:4:26840:26858	52245	4	True				
ANR	52299	AssignmentExpression	* conn_ret = * connp		52245	0		=			
ANR	52300	UnaryOperationExpression	* conn_ret		52245	0					
ANR	52301	UnaryOperator	*		52245	0					
ANR	52302	Identifier	conn_ret		52245	1					
ANR	52303	UnaryOperationExpression	* connp		52245	1					
ANR	52304	UnaryOperator	*		52245	0					
ANR	52305	Identifier	connp		52245	1					
ANR	52306	ReturnStatement	return 1 ;	766:4:26864:26872	52245	5	True				
ANR	52307	PrimaryExpression	1		52245	0					
ANR	52308	ReturnType	static int		52245	1					
ANR	52309	Identifier	connection_matches_active_session		52245	2					
ANR	52310	ParameterList	"struct udscs_connection * * connp , void * priv"		52245	3					
ANR	52311	Parameter	struct udscs_connection * * connp	753:45:26433:26463	52245	0	True				
ANR	52312	ParameterType	struct udscs_connection * *		52245	0					
ANR	52313	Identifier	connp		52245	1					
ANR	52314	Parameter	void * priv	754:4:26470:26479	52245	1	True				
ANR	52315	ParameterType	void *		52245	0					
ANR	52316	Identifier	priv		52245	1					
ANR	52317	CFGEntryNode	ENTRY		52245		True				
ANR	52318	CFGExitNode	EXIT		52245		True				
ANR	52319	Symbol	strcmp		52245						
ANR	52320	Symbol	connp		52245						
ANR	52321	Symbol	conn_ret		52245						
ANR	52322	Symbol	* connp		52245						
ANR	52323	Symbol	active_session		52245						
ANR	52324	Symbol	* conn_ret		52245						
ANR	52325	Symbol	agent_data		52245						
ANR	52326	Symbol	agent_data -> session		52245						
ANR	52327	Symbol	priv		52245						
ANR	52328	Symbol	udscs_get_user_data		52245						
ANR	52329	Symbol	* agent_data		52245						
ANR	52330	Function	release_clipboards	769:0:26877:27265							
ANR	52331	FunctionDef	release_clipboards ()		52330	0					
ANR	52332	CompoundStatement		770:0:26914:27265	52330	0					
ANR	52333	IdentifierDeclStatement	uint8_t sel ;	771:4:26920:26931	52330	0	True				
ANR	52334	IdentifierDecl	sel		52330	0					
ANR	52335	IdentifierDeclType	uint8_t		52330	0					
ANR	52336	Identifier	sel		52330	1					
ANR	52337	ForStatement	for ( sel = 0 ; sel < VD_AGENT_CLIPBOARD_SELECTION_SECONDARY ; ++ sel )		52330	1					
ANR	52338	ForInit	sel = 0 ;	773:9:26943:26950	52330	0	True				
ANR	52339	AssignmentExpression	sel = 0		52330	0		=			
ANR	52340	Identifier	sel		52330	0					
ANR	52341	PrimaryExpression	0		52330	1					
ANR	52342	Condition	sel < VD_AGENT_CLIPBOARD_SELECTION_SECONDARY	773:18:26952:26995	52330	1	True				
ANR	52343	RelationalExpression	sel < VD_AGENT_CLIPBOARD_SELECTION_SECONDARY		52330	0		<			
ANR	52344	Identifier	sel		52330	0					
ANR	52345	Identifier	VD_AGENT_CLIPBOARD_SELECTION_SECONDARY		52330	1					
ANR	52346	UnaryExpression	++ sel	773:64:26998:27002	52330	2	True				
ANR	52347	IncDec	++		52330	0					
ANR	52348	Identifier	sel		52330	1					
ANR	52349	CompoundStatement		4:71:90:90	52330	3					
ANR	52350	IfStatement	if ( agent_owns_clipboard [ sel ] && virtio_port )		52330	0					
ANR	52351	Condition	agent_owns_clipboard [ sel ] && virtio_port	774:12:27019:27058	52330	0	True				
ANR	52352	AndExpression	agent_owns_clipboard [ sel ] && virtio_port		52330	0		&&			
ANR	52353	ArrayIndexing	agent_owns_clipboard [ sel ]		52330	0					
ANR	52354	Identifier	agent_owns_clipboard		52330	0					
ANR	52355	Identifier	sel		52330	1					
ANR	52356	Identifier	virtio_port		52330	1					
ANR	52357	CompoundStatement		5:54:146:146	52330	1					
ANR	52358	ExpressionStatement	"vdagent_virtio_port_write ( virtio_port , VDP_CLIENT_PORT , VD_AGENT_CLIPBOARD_RELEASE , 0 , & sel , 1 )"	775:12:27075:27208	52330	0	True				
ANR	52359	CallExpression	"vdagent_virtio_port_write ( virtio_port , VDP_CLIENT_PORT , VD_AGENT_CLIPBOARD_RELEASE , 0 , & sel , 1 )"		52330	0					
ANR	52360	Callee	vdagent_virtio_port_write		52330	0					
ANR	52361	Identifier	vdagent_virtio_port_write		52330	0					
ANR	52362	ArgumentList	virtio_port		52330	1					
ANR	52363	Argument	virtio_port		52330	0					
ANR	52364	Identifier	virtio_port		52330	0					
ANR	52365	Argument	VDP_CLIENT_PORT		52330	1					
ANR	52366	Identifier	VDP_CLIENT_PORT		52330	0					
ANR	52367	Argument	VD_AGENT_CLIPBOARD_RELEASE		52330	2					
ANR	52368	Identifier	VD_AGENT_CLIPBOARD_RELEASE		52330	0					
ANR	52369	Argument	0		52330	3					
ANR	52370	PrimaryExpression	0		52330	0					
ANR	52371	Argument	& sel		52330	4					
ANR	52372	UnaryOperationExpression	& sel		52330	0					
ANR	52373	UnaryOperator	&		52330	0					
ANR	52374	Identifier	sel		52330	1					
ANR	52375	Argument	1		52330	5					
ANR	52376	PrimaryExpression	1		52330	0					
ANR	52377	ExpressionStatement	agent_owns_clipboard [ sel ] = 0	778:8:27228:27257	52330	1	True				
ANR	52378	AssignmentExpression	agent_owns_clipboard [ sel ] = 0		52330	0		=			
ANR	52379	ArrayIndexing	agent_owns_clipboard [ sel ]		52330	0					
ANR	52380	Identifier	agent_owns_clipboard		52330	0					
ANR	52381	Identifier	sel		52330	1					
ANR	52382	PrimaryExpression	0		52330	1					
ANR	52383	ReturnType	static void		52330	1					
ANR	52384	Identifier	release_clipboards		52330	2					
ANR	52385	ParameterList			52330	3					
ANR	52386	CFGEntryNode	ENTRY		52330		True				
ANR	52387	CFGExitNode	EXIT		52330		True				
ANR	52388	Symbol	VDP_CLIENT_PORT		52330						
ANR	52389	Symbol	* sel		52330						
ANR	52390	Symbol	* agent_owns_clipboard		52330						
ANR	52391	Symbol	VD_AGENT_CLIPBOARD_SELECTION_SECONDARY		52330						
ANR	52392	Symbol	virtio_port		52330						
ANR	52393	Symbol	& sel		52330						
ANR	52394	Symbol	VD_AGENT_CLIPBOARD_RELEASE		52330						
ANR	52395	Symbol	sel		52330						
ANR	52396	Symbol	agent_owns_clipboard		52330						
ANR	52397	Function	update_active_session_connection	782:0:27268:28882							
ANR	52398	FunctionDef	update_active_session_connection (struct udscs_connection * new_conn)		52397	0					
ANR	52399	CompoundStatement		783:0:27348:28882	52397	0					
ANR	52400	IfStatement	if ( session_info )		52397	0					
ANR	52401	Condition	session_info	784:8:27358:27369	52397	0	True				
ANR	52402	Identifier	session_info		52397	0					
ANR	52403	CompoundStatement		2:22:23:23	52397	1					
ANR	52404	ExpressionStatement	new_conn = NULL	785:8:27382:27397	52397	0	True				
ANR	52405	AssignmentExpression	new_conn = NULL		52397	0		=			
ANR	52406	Identifier	new_conn		52397	0					
ANR	52407	Identifier	NULL		52397	1					
ANR	52408	IfStatement	if ( ! active_session )		52397	1					
ANR	52409	Condition	! active_session	786:12:27411:27425	52397	0	True				
ANR	52410	UnaryOperationExpression	! active_session		52397	0					
ANR	52411	UnaryOperator	!		52397	0					
ANR	52412	Identifier	active_session		52397	1					
ANR	52413	ExpressionStatement	active_session = session_info_get_active_session ( session_info )	787:12:27440:27502	52397	1	True				
ANR	52414	AssignmentExpression	active_session = session_info_get_active_session ( session_info )		52397	0		=			
ANR	52415	Identifier	active_session		52397	0					
ANR	52416	CallExpression	session_info_get_active_session ( session_info )		52397	1					
ANR	52417	Callee	session_info_get_active_session		52397	0					
ANR	52418	Identifier	session_info_get_active_session		52397	0					
ANR	52419	ArgumentList	session_info		52397	1					
ANR	52420	Argument	session_info		52397	0					
ANR	52421	Identifier	session_info		52397	0					
ANR	52422	ExpressionStatement	"session_count = udscs_server_for_all_clients ( server , connection_matches_active_session , ( void * ) & new_conn )"	788:8:27512:27699	52397	2	True				
ANR	52423	AssignmentExpression	"session_count = udscs_server_for_all_clients ( server , connection_matches_active_session , ( void * ) & new_conn )"		52397	0		=			
ANR	52424	Identifier	session_count		52397	0					
ANR	52425	CallExpression	"udscs_server_for_all_clients ( server , connection_matches_active_session , ( void * ) & new_conn )"		52397	1					
ANR	52426	Callee	udscs_server_for_all_clients		52397	0					
ANR	52427	Identifier	udscs_server_for_all_clients		52397	0					
ANR	52428	ArgumentList	server		52397	1					
ANR	52429	Argument	server		52397	0					
ANR	52430	Identifier	server		52397	0					
ANR	52431	Argument	connection_matches_active_session		52397	1					
ANR	52432	Identifier	connection_matches_active_session		52397	0					
ANR	52433	Argument	( void * ) & new_conn		52397	2					
ANR	52434	CastExpression	( void * ) & new_conn		52397	0					
ANR	52435	CastTarget	void *		52397	0					
ANR	52436	UnaryOperationExpression	& new_conn		52397	1					
ANR	52437	UnaryOperator	&		52397	0					
ANR	52438	Identifier	new_conn		52397	1					
ANR	52439	ElseStatement	else		52397	0					
ANR	52440	CompoundStatement		9:11:363:363	52397	0					
ANR	52441	IfStatement	if ( new_conn )		52397	0					
ANR	52442	Condition	new_conn	792:12:27726:27733	52397	0	True				
ANR	52443	Identifier	new_conn		52397	0					
ANR	52444	ExpressionStatement	session_count ++	793:12:27748:27763	52397	1	True				
ANR	52445	PostIncDecOperationExpression	session_count ++		52397	0					
ANR	52446	Identifier	session_count		52397	0					
ANR	52447	IncDec	++		52397	1					
ANR	52448	ElseStatement	else		52397	0					
ANR	52449	ExpressionStatement	session_count --	795:12:27790:27805	52397	0	True				
ANR	52450	PostIncDecOperationExpression	session_count --		52397	0					
ANR	52451	Identifier	session_count		52397	0					
ANR	52452	IncDec	--		52397	1					
ANR	52453	IfStatement	if ( new_conn && session_count != 1 )		52397	1					
ANR	52454	Condition	new_conn && session_count != 1	798:8:27822:27851	52397	0	True				
ANR	52455	AndExpression	new_conn && session_count != 1		52397	0		&&			
ANR	52456	Identifier	new_conn		52397	0					
ANR	52457	EqualityExpression	session_count != 1		52397	1		!=			
ANR	52458	Identifier	session_count		52397	0					
ANR	52459	PrimaryExpression	1		52397	1					
ANR	52460	CompoundStatement		16:40:505:505	52397	1					
ANR	52461	Statement	syslog	799:8:27864:27869	52397	0	True				
ANR	52462	Statement	(	799:14:27870:27870	52397	1	True				
ANR	52463	Statement	LOG_ERR	799:15:27871:27877	52397	2	True				
ANR	52464	Statement	","	799:22:27878:27878	52397	3	True				
ANR	52465	Statement	"""multiple agents in one session, """	799:24:27880:27913	52397	4	True				
ANR	52466	Statement	"""disabling agent to avoid potential information leak"""	800:15:27930:27982	52397	5	True				
ANR	52467	Statement	)	800:68:27983:27983	52397	6	True				
ANR	52468	ExpressionStatement		800:69:27984:27984	52397	7	True				
ANR	52469	ExpressionStatement	new_conn = NULL	801:8:27994:28009	52397	8	True				
ANR	52470	AssignmentExpression	new_conn = NULL		52397	0		=			
ANR	52471	Identifier	new_conn		52397	0					
ANR	52472	Identifier	NULL		52397	1					
ANR	52473	IfStatement	if ( new_conn == active_session_conn )		52397	2					
ANR	52474	Condition	new_conn == active_session_conn	804:8:28026:28056	52397	0	True				
ANR	52475	EqualityExpression	new_conn == active_session_conn		52397	0		==			
ANR	52476	Identifier	new_conn		52397	0					
ANR	52477	Identifier	active_session_conn		52397	1					
ANR	52478	ReturnStatement	return ;	805:8:28067:28073	52397	1	True				
ANR	52479	ExpressionStatement	active_session_conn = new_conn	807:4:28080:28110	52397	3	True				
ANR	52480	AssignmentExpression	active_session_conn = new_conn		52397	0		=			
ANR	52481	Identifier	active_session_conn		52397	0					
ANR	52482	Identifier	new_conn		52397	1					
ANR	52483	IfStatement	if ( debug )		52397	4					
ANR	52484	Condition	debug	808:8:28120:28124	52397	0	True				
ANR	52485	Identifier	debug		52397	0					
ANR	52486	ExpressionStatement	"syslog ( LOG_DEBUG , ""%p is now the active session"" , new_conn )"	809:8:28135:28194	52397	1	True				
ANR	52487	CallExpression	"syslog ( LOG_DEBUG , ""%p is now the active session"" , new_conn )"		52397	0					
ANR	52488	Callee	syslog		52397	0					
ANR	52489	Identifier	syslog		52397	0					
ANR	52490	ArgumentList	LOG_DEBUG		52397	1					
ANR	52491	Argument	LOG_DEBUG		52397	0					
ANR	52492	Identifier	LOG_DEBUG		52397	0					
ANR	52493	Argument	"""%p is now the active session"""		52397	1					
ANR	52494	PrimaryExpression	"""%p is now the active session"""		52397	0					
ANR	52495	Argument	new_conn		52397	2					
ANR	52496	Identifier	new_conn		52397	0					
ANR	52497	IfStatement	if ( active_session_conn && session_info != NULL && ! session_info_is_user ( session_info ) )		52397	5					
ANR	52498	Condition	active_session_conn && session_info != NULL && ! session_info_is_user ( session_info )	811:8:28205:28302	52397	0	True				
ANR	52499	AndExpression	active_session_conn && session_info != NULL && ! session_info_is_user ( session_info )		52397	0		&&			
ANR	52500	Identifier	active_session_conn		52397	0					
ANR	52501	AndExpression	session_info != NULL && ! session_info_is_user ( session_info )		52397	1		&&			
ANR	52502	EqualityExpression	session_info != NULL		52397	0		!=			
ANR	52503	Identifier	session_info		52397	0					
ANR	52504	Identifier	NULL		52397	1					
ANR	52505	UnaryOperationExpression	! session_info_is_user ( session_info )		52397	1					
ANR	52506	UnaryOperator	!		52397	0					
ANR	52507	CallExpression	session_info_is_user ( session_info )		52397	1					
ANR	52508	Callee	session_info_is_user		52397	0					
ANR	52509	Identifier	session_info_is_user		52397	0					
ANR	52510	ArgumentList	session_info		52397	1					
ANR	52511	Argument	session_info		52397	0					
ANR	52512	Identifier	session_info		52397	0					
ANR	52513	CompoundStatement		31:45:956:956	52397	1					
ANR	52514	IfStatement	if ( debug )		52397	0					
ANR	52515	Condition	debug	814:12:28319:28323	52397	0	True				
ANR	52516	Identifier	debug		52397	0					
ANR	52517	Statement	syslog	815:12:28338:28343	52397	1	True				
ANR	52518	Statement	(	815:18:28344:28344	52397	1	True				
ANR	52519	Statement	LOG_DEBUG	815:19:28345:28353	52397	2	True				
ANR	52520	Statement	","	815:28:28354:28354	52397	3	True				
ANR	52521	Statement	"""New session agent does not belong to user: """	815:30:28356:28400	52397	4	True				
ANR	52522	Statement	"""disabling file-xfer"""	816:19:28421:28441	52397	5	True				
ANR	52523	Statement	)	816:40:28442:28442	52397	6	True				
ANR	52524	ExpressionStatement		816:41:28443:28443	52397	7	True				
ANR	52525	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_DISABLE , 0 , 0 , NULL , 0 )"	817:8:28453:28548	52397	8	True				
ANR	52526	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_FILE_XFER_DISABLE , 0 , 0 , NULL , 0 )"		52397	0					
ANR	52527	Callee	udscs_write		52397	0					
ANR	52528	Identifier	udscs_write		52397	0					
ANR	52529	ArgumentList	active_session_conn		52397	1					
ANR	52530	Argument	active_session_conn		52397	0					
ANR	52531	Identifier	active_session_conn		52397	0					
ANR	52532	Argument	VDAGENTD_FILE_XFER_DISABLE		52397	1					
ANR	52533	Identifier	VDAGENTD_FILE_XFER_DISABLE		52397	0					
ANR	52534	Argument	0		52397	2					
ANR	52535	PrimaryExpression	0		52397	0					
ANR	52536	Argument	0		52397	3					
ANR	52537	PrimaryExpression	0		52397	0					
ANR	52538	Argument	NULL		52397	4					
ANR	52539	Identifier	NULL		52397	0					
ANR	52540	Argument	0		52397	5					
ANR	52541	PrimaryExpression	0		52397	0					
ANR	52542	IfStatement	if ( active_session_conn && mon_config )		52397	6					
ANR	52543	Condition	active_session_conn && mon_config	821:8:28565:28597	52397	0	True				
ANR	52544	AndExpression	active_session_conn && mon_config		52397	0		&&			
ANR	52545	Identifier	active_session_conn		52397	0					
ANR	52546	Identifier	mon_config		52397	1					
ANR	52547	ExpressionStatement	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig ) )"	822:8:28608:28823	52397	1	True				
ANR	52548	CallExpression	"udscs_write ( active_session_conn , VDAGENTD_MONITORS_CONFIG , 0 , 0 , ( uint8_t * ) mon_config , sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig ) )"		52397	0					
ANR	52549	Callee	udscs_write		52397	0					
ANR	52550	Identifier	udscs_write		52397	0					
ANR	52551	ArgumentList	active_session_conn		52397	1					
ANR	52552	Argument	active_session_conn		52397	0					
ANR	52553	Identifier	active_session_conn		52397	0					
ANR	52554	Argument	VDAGENTD_MONITORS_CONFIG		52397	1					
ANR	52555	Identifier	VDAGENTD_MONITORS_CONFIG		52397	0					
ANR	52556	Argument	0		52397	2					
ANR	52557	PrimaryExpression	0		52397	0					
ANR	52558	Argument	0		52397	3					
ANR	52559	PrimaryExpression	0		52397	0					
ANR	52560	Argument	( uint8_t * ) mon_config		52397	4					
ANR	52561	CastExpression	( uint8_t * ) mon_config		52397	0					
ANR	52562	CastTarget	uint8_t *		52397	0					
ANR	52563	Identifier	mon_config		52397	1					
ANR	52564	Argument	sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig )		52397	5					
ANR	52565	AdditiveExpression	sizeof ( VDAgentMonitorsConfig ) + mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig )		52397	0		+			
ANR	52566	SizeofExpression	sizeof ( VDAgentMonitorsConfig )		52397	0					
ANR	52567	Sizeof	sizeof		52397	0					
ANR	52568	SizeofOperand	VDAgentMonitorsConfig		52397	1					
ANR	52569	MultiplicativeExpression	mon_config -> num_of_monitors * sizeof ( VDAgentMonConfig )		52397	1		*			
ANR	52570	PtrMemberAccess	mon_config -> num_of_monitors		52397	0					
ANR	52571	Identifier	mon_config		52397	0					
ANR	52572	Identifier	num_of_monitors		52397	1					
ANR	52573	SizeofExpression	sizeof ( VDAgentMonConfig )		52397	1					
ANR	52574	Sizeof	sizeof		52397	0					
ANR	52575	SizeofOperand	VDAgentMonConfig		52397	1					
ANR	52576	ExpressionStatement	release_clipboards ( )	826:4:28830:28850	52397	7	True				
ANR	52577	CallExpression	release_clipboards ( )		52397	0					
ANR	52578	Callee	release_clipboards		52397	0					
ANR	52579	Identifier	release_clipboards		52397	0					
ANR	52580	ArgumentList			52397	1					
ANR	52581	ExpressionStatement	check_xorg_resolution ( )	828:4:28857:28880	52397	8	True				
ANR	52582	CallExpression	check_xorg_resolution ( )		52397	0					
ANR	52583	Callee	check_xorg_resolution		52397	0					
ANR	52584	Identifier	check_xorg_resolution		52397	0					
ANR	52585	ArgumentList			52397	1					
ANR	52586	ReturnType	static void		52397	1					
ANR	52587	Identifier	update_active_session_connection		52397	2					
ANR	52588	ParameterList	struct udscs_connection * new_conn		52397	3					
ANR	52589	Parameter	struct udscs_connection * new_conn	782:45:27313:27345	52397	0	True				
ANR	52590	ParameterType	struct udscs_connection *		52397	0					
ANR	52591	Identifier	new_conn		52397	1					
ANR	52592	CFGEntryNode	ENTRY		52397		True				
ANR	52593	CFGExitNode	EXIT		52397		True				
ANR	52594	Symbol	& new_conn		52397						
ANR	52595	Symbol	server		52397						
ANR	52596	Symbol	NULL		52397						
ANR	52597	Symbol	debug		52397						
ANR	52598	Symbol	session_info		52397						
ANR	52599	Symbol	active_session		52397						
ANR	52600	Symbol	session_info_get_active_session		52397						
ANR	52601	Symbol	connection_matches_active_session		52397						
ANR	52602	Symbol	udscs_server_for_all_clients		52397						
ANR	52603	Symbol	active_session_conn		52397						
ANR	52604	Symbol	VDAGENTD_FILE_XFER_DISABLE		52397						
ANR	52605	Symbol	VDAGENTD_MONITORS_CONFIG		52397						
ANR	52606	Symbol	mon_config -> num_of_monitors		52397						
ANR	52607	Symbol	* mon_config		52397						
ANR	52608	Symbol	session_count		52397						
ANR	52609	Symbol	mon_config		52397						
ANR	52610	Symbol	new_conn		52397						
ANR	52611	Symbol	LOG_DEBUG		52397						
ANR	52612	Symbol	session_info_is_user		52397						
ANR	52613	Function	remove_active_xfers	831:0:28885:29282							
ANR	52614	FunctionDef	"remove_active_xfers (gpointer key , gpointer value , gpointer conn)"		52613	0					
ANR	52615	CompoundStatement		832:0:28966:29282	52613	0					
ANR	52616	IfStatement	if ( value == conn )		52613	0					
ANR	52617	Condition	value == conn	833:8:28976:28988	52613	0	True				
ANR	52618	EqualityExpression	value == conn		52613	0		==			
ANR	52619	Identifier	value		52613	0					
ANR	52620	Identifier	conn		52613	1					
ANR	52621	CompoundStatement		2:23:24:24	52613	1					
ANR	52622	ExpressionStatement	"send_file_xfer_status ( virtio_port , ""Agent disc; cancelling file-xfer %u"" , GPOINTER_TO_UINT ( key ) , VD_AGENT_FILE_XFER_STATUS_CANCELLED , NULL , 0 )"	834:8:29001:29233	52613	0	True				
ANR	52623	CallExpression	"send_file_xfer_status ( virtio_port , ""Agent disc; cancelling file-xfer %u"" , GPOINTER_TO_UINT ( key ) , VD_AGENT_FILE_XFER_STATUS_CANCELLED , NULL , 0 )"		52613	0					
ANR	52624	Callee	send_file_xfer_status		52613	0					
ANR	52625	Identifier	send_file_xfer_status		52613	0					
ANR	52626	ArgumentList	virtio_port		52613	1					
ANR	52627	Argument	virtio_port		52613	0					
ANR	52628	Identifier	virtio_port		52613	0					
ANR	52629	Argument	"""Agent disc; cancelling file-xfer %u"""		52613	1					
ANR	52630	PrimaryExpression	"""Agent disc; cancelling file-xfer %u"""		52613	0					
ANR	52631	Argument	GPOINTER_TO_UINT ( key )		52613	2					
ANR	52632	CallExpression	GPOINTER_TO_UINT ( key )		52613	0					
ANR	52633	Callee	GPOINTER_TO_UINT		52613	0					
ANR	52634	Identifier	GPOINTER_TO_UINT		52613	0					
ANR	52635	ArgumentList	key		52613	1					
ANR	52636	Argument	key		52613	0					
ANR	52637	Identifier	key		52613	0					
ANR	52638	Argument	VD_AGENT_FILE_XFER_STATUS_CANCELLED		52613	3					
ANR	52639	Identifier	VD_AGENT_FILE_XFER_STATUS_CANCELLED		52613	0					
ANR	52640	Argument	NULL		52613	4					
ANR	52641	Identifier	NULL		52613	0					
ANR	52642	Argument	0		52613	5					
ANR	52643	PrimaryExpression	0		52613	0					
ANR	52644	ReturnStatement	return 1 ;	838:8:29243:29251	52613	1	True				
ANR	52645	PrimaryExpression	1		52613	0					
ANR	52646	ElseStatement	else		52613	0					
ANR	52647	ReturnStatement	return 0 ;	840:8:29272:29280	52613	0	True				
ANR	52648	PrimaryExpression	0		52613	0					
ANR	52649	ReturnType	static gboolean		52613	1					
ANR	52650	Identifier	remove_active_xfers		52613	2					
ANR	52651	ParameterList	"gpointer key , gpointer value , gpointer conn"		52613	3					
ANR	52652	Parameter	gpointer key	831:36:28921:28932	52613	0	True				
ANR	52653	ParameterType	gpointer		52613	0					
ANR	52654	Identifier	key		52613	1					
ANR	52655	Parameter	gpointer value	831:50:28935:28948	52613	1	True				
ANR	52656	ParameterType	gpointer		52613	0					
ANR	52657	Identifier	value		52613	1					
ANR	52658	Parameter	gpointer conn	831:66:28951:28963	52613	2	True				
ANR	52659	ParameterType	gpointer		52613	0					
ANR	52660	Identifier	conn		52613	1					
ANR	52661	CFGEntryNode	ENTRY		52613		True				
ANR	52662	CFGExitNode	EXIT		52613		True				
ANR	52663	Symbol	conn		52613						
ANR	52664	Symbol	NULL		52613						
ANR	52665	Symbol	VD_AGENT_FILE_XFER_STATUS_CANCELLED		52613						
ANR	52666	Symbol	virtio_port		52613						
ANR	52667	Symbol	GPOINTER_TO_UINT		52613						
ANR	52668	Symbol	value		52613						
ANR	52669	Symbol	key		52613						
ANR	52670	Function	agent_connect	843:0:29285:29958							
ANR	52671	FunctionDef	agent_connect (struct udscs_connection * conn)		52670	0					
ANR	52672	CompoundStatement		844:0:29342:29958	52670	0					
ANR	52673	IdentifierDeclStatement	struct agent_data * agent_data ;	845:4:29348:29377	52670	0	True				
ANR	52674	IdentifierDecl	* agent_data		52670	0					
ANR	52675	IdentifierDeclType	struct agent_data *		52670	0					
ANR	52676	Identifier	agent_data		52670	1					
ANR	52677	ExpressionStatement	"agent_data = calloc ( 1 , sizeof ( * agent_data ) )"	847:4:29384:29427	52670	1	True				
ANR	52678	AssignmentExpression	"agent_data = calloc ( 1 , sizeof ( * agent_data ) )"		52670	0		=			
ANR	52679	Identifier	agent_data		52670	0					
ANR	52680	CallExpression	"calloc ( 1 , sizeof ( * agent_data ) )"		52670	1					
ANR	52681	Callee	calloc		52670	0					
ANR	52682	Identifier	calloc		52670	0					
ANR	52683	ArgumentList	1		52670	1					
ANR	52684	Argument	1		52670	0					
ANR	52685	PrimaryExpression	1		52670	0					
ANR	52686	Argument	sizeof ( * agent_data )		52670	1					
ANR	52687	SizeofExpression	sizeof ( * agent_data )		52670	0					
ANR	52688	Sizeof	sizeof		52670	0					
ANR	52689	UnaryOperationExpression	* agent_data		52670	1					
ANR	52690	UnaryOperator	*		52670	0					
ANR	52691	Identifier	agent_data		52670	1					
ANR	52692	IfStatement	if ( ! agent_data )		52670	2					
ANR	52693	Condition	! agent_data	848:8:29437:29447	52670	0	True				
ANR	52694	UnaryOperationExpression	! agent_data		52670	0					
ANR	52695	UnaryOperator	!		52670	0					
ANR	52696	Identifier	agent_data		52670	1					
ANR	52697	CompoundStatement		5:21:107:107	52670	1					
ANR	52698	ExpressionStatement	"syslog ( LOG_ERR , ""Out of memory allocating agent data, disconnecting"" )"	849:8:29460:29529	52670	0	True				
ANR	52699	CallExpression	"syslog ( LOG_ERR , ""Out of memory allocating agent data, disconnecting"" )"		52670	0					
ANR	52700	Callee	syslog		52670	0					
ANR	52701	Identifier	syslog		52670	0					
ANR	52702	ArgumentList	LOG_ERR		52670	1					
ANR	52703	Argument	LOG_ERR		52670	0					
ANR	52704	Identifier	LOG_ERR		52670	0					
ANR	52705	Argument	"""Out of memory allocating agent data, disconnecting"""		52670	1					
ANR	52706	PrimaryExpression	"""Out of memory allocating agent data, disconnecting"""		52670	0					
ANR	52707	ExpressionStatement	udscs_destroy_connection ( & conn )	850:8:29539:29570	52670	1	True				
ANR	52708	CallExpression	udscs_destroy_connection ( & conn )		52670	0					
ANR	52709	Callee	udscs_destroy_connection		52670	0					
ANR	52710	Identifier	udscs_destroy_connection		52670	0					
ANR	52711	ArgumentList	& conn		52670	1					
ANR	52712	Argument	& conn		52670	0					
ANR	52713	UnaryOperationExpression	& conn		52670	0					
ANR	52714	UnaryOperator	&		52670	0					
ANR	52715	Identifier	conn		52670	1					
ANR	52716	ReturnStatement	return ;	851:8:29580:29586	52670	2	True				
ANR	52717	IfStatement	if ( session_info )		52670	3					
ANR	52718	Condition	session_info	854:8:29603:29614	52670	0	True				
ANR	52719	Identifier	session_info		52670	0					
ANR	52720	CompoundStatement		12:8:284:328	52670	1					
ANR	52721	IdentifierDeclStatement	uint32_t pid = udscs_get_peer_cred ( conn ) . pid ;	855:8:29627:29671	52670	0	True				
ANR	52722	IdentifierDecl	pid = udscs_get_peer_cred ( conn ) . pid		52670	0					
ANR	52723	IdentifierDeclType	uint32_t		52670	0					
ANR	52724	Identifier	pid		52670	1					
ANR	52725	AssignmentExpression	pid = udscs_get_peer_cred ( conn ) . pid		52670	2		=			
ANR	52726	Identifier	pid		52670	0					
ANR	52727	MemberAccess	udscs_get_peer_cred ( conn ) . pid		52670	1					
ANR	52728	CallExpression	udscs_get_peer_cred ( conn )		52670	0					
ANR	52729	Callee	udscs_get_peer_cred		52670	0					
ANR	52730	Identifier	udscs_get_peer_cred		52670	0					
ANR	52731	ArgumentList	conn		52670	1					
ANR	52732	Argument	conn		52670	0					
ANR	52733	Identifier	conn		52670	0					
ANR	52734	Identifier	pid		52670	1					
ANR	52735	ExpressionStatement	"agent_data -> session = session_info_session_for_pid ( session_info , pid )"	856:8:29681:29750	52670	1	True				
ANR	52736	AssignmentExpression	"agent_data -> session = session_info_session_for_pid ( session_info , pid )"		52670	0		=			
ANR	52737	PtrMemberAccess	agent_data -> session		52670	0					
ANR	52738	Identifier	agent_data		52670	0					
ANR	52739	Identifier	session		52670	1					
ANR	52740	CallExpression	"session_info_session_for_pid ( session_info , pid )"		52670	1					
ANR	52741	Callee	session_info_session_for_pid		52670	0					
ANR	52742	Identifier	session_info_session_for_pid		52670	0					
ANR	52743	ArgumentList	session_info		52670	1					
ANR	52744	Argument	session_info		52670	0					
ANR	52745	Identifier	session_info		52670	0					
ANR	52746	Argument	pid		52670	1					
ANR	52747	Identifier	pid		52670	0					
ANR	52748	ExpressionStatement	"udscs_set_user_data ( conn , ( void * ) agent_data )"	859:4:29763:29808	52670	4	True				
ANR	52749	CallExpression	"udscs_set_user_data ( conn , ( void * ) agent_data )"		52670	0					
ANR	52750	Callee	udscs_set_user_data		52670	0					
ANR	52751	Identifier	udscs_set_user_data		52670	0					
ANR	52752	ArgumentList	conn		52670	1					
ANR	52753	Argument	conn		52670	0					
ANR	52754	Identifier	conn		52670	0					
ANR	52755	Argument	( void * ) agent_data		52670	1					
ANR	52756	CastExpression	( void * ) agent_data		52670	0					
ANR	52757	CastTarget	void *		52670	0					
ANR	52758	Identifier	agent_data		52670	1					
ANR	52759	ExpressionStatement	"udscs_write ( conn , VDAGENTD_VERSION , 0 , 0 , ( uint8_t * ) VERSION , strlen ( VERSION ) + 1 )"	860:4:29814:29912	52670	5	True				
ANR	52760	CallExpression	"udscs_write ( conn , VDAGENTD_VERSION , 0 , 0 , ( uint8_t * ) VERSION , strlen ( VERSION ) + 1 )"		52670	0					
ANR	52761	Callee	udscs_write		52670	0					
ANR	52762	Identifier	udscs_write		52670	0					
ANR	52763	ArgumentList	conn		52670	1					
ANR	52764	Argument	conn		52670	0					
ANR	52765	Identifier	conn		52670	0					
ANR	52766	Argument	VDAGENTD_VERSION		52670	1					
ANR	52767	Identifier	VDAGENTD_VERSION		52670	0					
ANR	52768	Argument	0		52670	2					
ANR	52769	PrimaryExpression	0		52670	0					
ANR	52770	Argument	0		52670	3					
ANR	52771	PrimaryExpression	0		52670	0					
ANR	52772	Argument	( uint8_t * ) VERSION		52670	4					
ANR	52773	CastExpression	( uint8_t * ) VERSION		52670	0					
ANR	52774	CastTarget	uint8_t *		52670	0					
ANR	52775	Identifier	VERSION		52670	1					
ANR	52776	Argument	strlen ( VERSION ) + 1		52670	5					
ANR	52777	AdditiveExpression	strlen ( VERSION ) + 1		52670	0		+			
ANR	52778	CallExpression	strlen ( VERSION )		52670	0					
ANR	52779	Callee	strlen		52670	0					
ANR	52780	Identifier	strlen		52670	0					
ANR	52781	ArgumentList	VERSION		52670	1					
ANR	52782	Argument	VERSION		52670	0					
ANR	52783	Identifier	VERSION		52670	0					
ANR	52784	PrimaryExpression	1		52670	1					
ANR	52785	ExpressionStatement	update_active_session_connection ( conn )	862:4:29918:29956	52670	6	True				
ANR	52786	CallExpression	update_active_session_connection ( conn )		52670	0					
ANR	52787	Callee	update_active_session_connection		52670	0					
ANR	52788	Identifier	update_active_session_connection		52670	0					
ANR	52789	ArgumentList	conn		52670	1					
ANR	52790	Argument	conn		52670	0					
ANR	52791	Identifier	conn		52670	0					
ANR	52792	ReturnType	static void		52670	1					
ANR	52793	Identifier	agent_connect		52670	2					
ANR	52794	ParameterList	struct udscs_connection * conn		52670	3					
ANR	52795	Parameter	struct udscs_connection * conn	843:26:29311:29339	52670	0	True				
ANR	52796	ParameterType	struct udscs_connection *		52670	0					
ANR	52797	Identifier	conn		52670	1					
ANR	52798	CFGEntryNode	ENTRY		52670		True				
ANR	52799	CFGExitNode	EXIT		52670		True				
ANR	52800	Symbol	conn		52670						
ANR	52801	Symbol	session_info		52670						
ANR	52802	Symbol	session_info_session_for_pid		52670						
ANR	52803	Symbol	pid		52670						
ANR	52804	Symbol	agent_data -> session		52670						
ANR	52805	Symbol	calloc		52670						
ANR	52806	Symbol	* agent_data		52670						
ANR	52807	Symbol	& conn		52670						
ANR	52808	Symbol	VDAGENTD_VERSION		52670						
ANR	52809	Symbol	strlen		52670						
ANR	52810	Symbol	LOG_ERR		52670						
ANR	52811	Symbol	udscs_get_peer_cred ( conn ) . pid		52670						
ANR	52812	Symbol	agent_data		52670						
ANR	52813	Symbol	udscs_get_peer_cred		52670						
ANR	52814	Symbol	VERSION		52670						
ANR	52815	Function	agent_disconnect	865:0:29961:30327							
ANR	52816	FunctionDef	agent_disconnect (struct udscs_connection * conn)		52815	0					
ANR	52817	CompoundStatement		866:0:30021:30327	52815	0					
ANR	52818	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( conn ) ;	867:4:30027:30084	52815	0	True				
ANR	52819	IdentifierDecl	* agent_data = udscs_get_user_data ( conn )		52815	0					
ANR	52820	IdentifierDeclType	struct agent_data *		52815	0					
ANR	52821	Identifier	agent_data		52815	1					
ANR	52822	AssignmentExpression	* agent_data = udscs_get_user_data ( conn )		52815	2		=			
ANR	52823	Identifier	agent_data		52815	0					
ANR	52824	CallExpression	udscs_get_user_data ( conn )		52815	1					
ANR	52825	Callee	udscs_get_user_data		52815	0					
ANR	52826	Identifier	udscs_get_user_data		52815	0					
ANR	52827	ArgumentList	conn		52815	1					
ANR	52828	Argument	conn		52815	0					
ANR	52829	Identifier	conn		52815	0					
ANR	52830	ExpressionStatement	"g_hash_table_foreach_remove ( active_xfers , remove_active_xfers , conn )"	869:4:30091:30159	52815	1	True				
ANR	52831	CallExpression	"g_hash_table_foreach_remove ( active_xfers , remove_active_xfers , conn )"		52815	0					
ANR	52832	Callee	g_hash_table_foreach_remove		52815	0					
ANR	52833	Identifier	g_hash_table_foreach_remove		52815	0					
ANR	52834	ArgumentList	active_xfers		52815	1					
ANR	52835	Argument	active_xfers		52815	0					
ANR	52836	Identifier	active_xfers		52815	0					
ANR	52837	Argument	remove_active_xfers		52815	1					
ANR	52838	Identifier	remove_active_xfers		52815	0					
ANR	52839	Argument	conn		52815	2					
ANR	52840	Identifier	conn		52815	0					
ANR	52841	ExpressionStatement	free ( agent_data -> session )	871:4:30166:30191	52815	2	True				
ANR	52842	CallExpression	free ( agent_data -> session )		52815	0					
ANR	52843	Callee	free		52815	0					
ANR	52844	Identifier	free		52815	0					
ANR	52845	ArgumentList	agent_data -> session		52815	1					
ANR	52846	Argument	agent_data -> session		52815	0					
ANR	52847	PtrMemberAccess	agent_data -> session		52815	0					
ANR	52848	Identifier	agent_data		52815	0					
ANR	52849	Identifier	session		52815	1					
ANR	52850	ExpressionStatement	agent_data -> session = NULL	872:4:30197:30223	52815	3	True				
ANR	52851	AssignmentExpression	agent_data -> session = NULL		52815	0		=			
ANR	52852	PtrMemberAccess	agent_data -> session		52815	0					
ANR	52853	Identifier	agent_data		52815	0					
ANR	52854	Identifier	session		52815	1					
ANR	52855	Identifier	NULL		52815	1					
ANR	52856	ExpressionStatement	update_active_session_connection ( NULL )	873:4:30229:30267	52815	4	True				
ANR	52857	CallExpression	update_active_session_connection ( NULL )		52815	0					
ANR	52858	Callee	update_active_session_connection		52815	0					
ANR	52859	Identifier	update_active_session_connection		52815	0					
ANR	52860	ArgumentList	NULL		52815	1					
ANR	52861	Argument	NULL		52815	0					
ANR	52862	Identifier	NULL		52815	0					
ANR	52863	ExpressionStatement	free ( agent_data -> screen_info )	875:4:30274:30303	52815	5	True				
ANR	52864	CallExpression	free ( agent_data -> screen_info )		52815	0					
ANR	52865	Callee	free		52815	0					
ANR	52866	Identifier	free		52815	0					
ANR	52867	ArgumentList	agent_data -> screen_info		52815	1					
ANR	52868	Argument	agent_data -> screen_info		52815	0					
ANR	52869	PtrMemberAccess	agent_data -> screen_info		52815	0					
ANR	52870	Identifier	agent_data		52815	0					
ANR	52871	Identifier	screen_info		52815	1					
ANR	52872	ExpressionStatement	free ( agent_data )	876:4:30309:30325	52815	6	True				
ANR	52873	CallExpression	free ( agent_data )		52815	0					
ANR	52874	Callee	free		52815	0					
ANR	52875	Identifier	free		52815	0					
ANR	52876	ArgumentList	agent_data		52815	1					
ANR	52877	Argument	agent_data		52815	0					
ANR	52878	Identifier	agent_data		52815	0					
ANR	52879	ReturnType	static void		52815	1					
ANR	52880	Identifier	agent_disconnect		52815	2					
ANR	52881	ParameterList	struct udscs_connection * conn		52815	3					
ANR	52882	Parameter	struct udscs_connection * conn	865:29:29990:30018	52815	0	True				
ANR	52883	ParameterType	struct udscs_connection *		52815	0					
ANR	52884	Identifier	conn		52815	1					
ANR	52885	CFGEntryNode	ENTRY		52815		True				
ANR	52886	CFGExitNode	EXIT		52815		True				
ANR	52887	Symbol	conn		52815						
ANR	52888	Symbol	NULL		52815						
ANR	52889	Symbol	agent_data -> screen_info		52815						
ANR	52890	Symbol	agent_data		52815						
ANR	52891	Symbol	agent_data -> session		52815						
ANR	52892	Symbol	udscs_get_user_data		52815						
ANR	52893	Symbol	* agent_data		52815						
ANR	52894	Symbol	remove_active_xfers		52815						
ANR	52895	Symbol	active_xfers		52815						
ANR	52896	Function	agent_read_complete	879:0:30330:33487							
ANR	52897	FunctionDef	"agent_read_complete (struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data)"		52896	0					
ANR	52898	CompoundStatement		881:0:30451:33487	52896	0					
ANR	52899	IdentifierDeclStatement	struct agent_data * agent_data = udscs_get_user_data ( * connp ) ;	882:4:30457:30516	52896	0	True				
ANR	52900	IdentifierDecl	* agent_data = udscs_get_user_data ( * connp )		52896	0					
ANR	52901	IdentifierDeclType	struct agent_data *		52896	0					
ANR	52902	Identifier	agent_data		52896	1					
ANR	52903	AssignmentExpression	* agent_data = udscs_get_user_data ( * connp )		52896	2		=			
ANR	52904	Identifier	agent_data		52896	0					
ANR	52905	CallExpression	udscs_get_user_data ( * connp )		52896	1					
ANR	52906	Callee	udscs_get_user_data		52896	0					
ANR	52907	Identifier	udscs_get_user_data		52896	0					
ANR	52908	ArgumentList	* connp		52896	1					
ANR	52909	Argument	* connp		52896	0					
ANR	52910	UnaryOperationExpression	* connp		52896	0					
ANR	52911	UnaryOperator	*		52896	0					
ANR	52912	Identifier	connp		52896	1					
ANR	52913	SwitchStatement	switch ( header -> type )		52896	1					
ANR	52914	Condition	header -> type	884:12:30531:30542	52896	0	True				
ANR	52915	PtrMemberAccess	header -> type		52896	0					
ANR	52916	Identifier	header		52896	0					
ANR	52917	Identifier	type		52896	1					
ANR	52918	CompoundStatement		4:26:93:93	52896	1					
ANR	52919	Label	case VDAGENTD_GUEST_XORG_RESOLUTION :	885:4:30551:30586	52896	0	True				
ANR	52920	Identifier	VDAGENTD_GUEST_XORG_RESOLUTION		52896	0					
ANR	52921	CompoundStatement		7:8:198:233	52896	1					
ANR	52922	IdentifierDeclStatement	struct vdagentd_guest_xorg_resolution * res ;	886:8:30598:30640	52896	0	True				
ANR	52923	IdentifierDecl	* res		52896	0					
ANR	52924	IdentifierDeclType	struct vdagentd_guest_xorg_resolution *		52896	0					
ANR	52925	Identifier	res		52896	1					
ANR	52926	IdentifierDeclStatement	int n = header -> size / sizeof ( * res ) ;	887:8:30650:30685	52896	1	True				
ANR	52927	IdentifierDecl	n = header -> size / sizeof ( * res )		52896	0					
ANR	52928	IdentifierDeclType	int		52896	0					
ANR	52929	Identifier	n		52896	1					
ANR	52930	AssignmentExpression	n = header -> size / sizeof ( * res )		52896	2		=			
ANR	52931	Identifier	n		52896	0					
ANR	52932	MultiplicativeExpression	header -> size / sizeof ( * res )		52896	1		/			
ANR	52933	PtrMemberAccess	header -> size		52896	0					
ANR	52934	Identifier	header		52896	0					
ANR	52935	Identifier	size		52896	1					
ANR	52936	SizeofExpression	sizeof ( * res )		52896	1					
ANR	52937	Sizeof	sizeof		52896	0					
ANR	52938	UnaryOperationExpression	* res		52896	1					
ANR	52939	UnaryOperator	*		52896	0					
ANR	52940	Identifier	res		52896	1					
ANR	52941	IfStatement	if ( header -> arg1 == 0 && header -> arg2 == 0 )		52896	2					
ANR	52942	Condition	header -> arg1 == 0 && header -> arg2 == 0	892:12:30904:30941	52896	0	True				
ANR	52943	AndExpression	header -> arg1 == 0 && header -> arg2 == 0		52896	0		&&			
ANR	52944	EqualityExpression	header -> arg1 == 0		52896	0		==			
ANR	52945	PtrMemberAccess	header -> arg1		52896	0					
ANR	52946	Identifier	header		52896	0					
ANR	52947	Identifier	arg1		52896	1					
ANR	52948	PrimaryExpression	0		52896	1					
ANR	52949	EqualityExpression	header -> arg2 == 0		52896	1		==			
ANR	52950	PtrMemberAccess	header -> arg2		52896	0					
ANR	52951	Identifier	header		52896	0					
ANR	52952	Identifier	arg2		52896	1					
ANR	52953	PrimaryExpression	0		52896	1					
ANR	52954	CompoundStatement		12:52:492:492	52896	1					
ANR	52955	Statement	syslog	893:12:30958:30963	52896	0	True				
ANR	52956	Statement	(	893:18:30964:30964	52896	1	True				
ANR	52957	Statement	LOG_INFO	893:19:30965:30972	52896	2	True				
ANR	52958	Statement	","	893:27:30973:30973	52896	3	True				
ANR	52959	Statement	"""got old session agent xorg resolution message, """	893:29:30975:31023	52896	4	True				
ANR	52960	Statement	"""ignoring"""	894:29:31054:31063	52896	5	True				
ANR	52961	Statement	)	894:39:31064:31064	52896	6	True				
ANR	52962	ExpressionStatement		894:40:31065:31065	52896	7	True				
ANR	52963	ReturnStatement	return ;	895:12:31079:31085	52896	8	True				
ANR	52964	IfStatement	if ( header -> size != n * sizeof ( * res ) )		52896	3					
ANR	52965	Condition	header -> size != n * sizeof ( * res )	898:12:31110:31141	52896	0	True				
ANR	52966	EqualityExpression	header -> size != n * sizeof ( * res )		52896	0		!=			
ANR	52967	PtrMemberAccess	header -> size		52896	0					
ANR	52968	Identifier	header		52896	0					
ANR	52969	Identifier	size		52896	1					
ANR	52970	MultiplicativeExpression	n * sizeof ( * res )		52896	1		*			
ANR	52971	Identifier	n		52896	0					
ANR	52972	SizeofExpression	sizeof ( * res )		52896	1					
ANR	52973	Sizeof	sizeof		52896	0					
ANR	52974	UnaryOperationExpression	* res		52896	1					
ANR	52975	UnaryOperator	*		52896	0					
ANR	52976	Identifier	res		52896	1					
ANR	52977	CompoundStatement		18:46:692:692	52896	1					
ANR	52978	Statement	syslog	899:12:31158:31163	52896	0	True				
ANR	52979	Statement	(	899:18:31164:31164	52896	1	True				
ANR	52980	Statement	LOG_ERR	899:19:31165:31171	52896	2	True				
ANR	52981	Statement	","	899:26:31172:31172	52896	3	True				
ANR	52982	Statement	"""guest xorg resolution message has wrong size, """	899:28:31174:31221	52896	4	True				
ANR	52983	Statement	"""disconnecting agent"""	900:28:31251:31271	52896	5	True				
ANR	52984	Statement	)	900:49:31272:31272	52896	6	True				
ANR	52985	ExpressionStatement		900:50:31273:31273	52896	7	True				
ANR	52986	ExpressionStatement	udscs_destroy_connection ( connp )	901:12:31287:31318	52896	8	True				
ANR	52987	CallExpression	udscs_destroy_connection ( connp )		52896	0					
ANR	52988	Callee	udscs_destroy_connection		52896	0					
ANR	52989	Identifier	udscs_destroy_connection		52896	0					
ANR	52990	ArgumentList	connp		52896	1					
ANR	52991	Argument	connp		52896	0					
ANR	52992	Identifier	connp		52896	0					
ANR	52993	ReturnStatement	return ;	902:12:31332:31338	52896	9	True				
ANR	52994	ExpressionStatement	free ( agent_data -> screen_info )	905:8:31359:31388	52896	4	True				
ANR	52995	CallExpression	free ( agent_data -> screen_info )		52896	0					
ANR	52996	Callee	free		52896	0					
ANR	52997	Identifier	free		52896	0					
ANR	52998	ArgumentList	agent_data -> screen_info		52896	1					
ANR	52999	Argument	agent_data -> screen_info		52896	0					
ANR	53000	PtrMemberAccess	agent_data -> screen_info		52896	0					
ANR	53001	Identifier	agent_data		52896	0					
ANR	53002	Identifier	screen_info		52896	1					
ANR	53003	ExpressionStatement	res = malloc ( n * sizeof ( * res ) )	906:8:31398:31428	52896	5	True				
ANR	53004	AssignmentExpression	res = malloc ( n * sizeof ( * res ) )		52896	0		=			
ANR	53005	Identifier	res		52896	0					
ANR	53006	CallExpression	malloc ( n * sizeof ( * res ) )		52896	1					
ANR	53007	Callee	malloc		52896	0					
ANR	53008	Identifier	malloc		52896	0					
ANR	53009	ArgumentList	n * sizeof ( * res )		52896	1					
ANR	53010	Argument	n * sizeof ( * res )		52896	0					
ANR	53011	MultiplicativeExpression	n * sizeof ( * res )		52896	0		*			
ANR	53012	Identifier	n		52896	0					
ANR	53013	SizeofExpression	sizeof ( * res )		52896	1					
ANR	53014	Sizeof	sizeof		52896	0					
ANR	53015	UnaryOperationExpression	* res		52896	1					
ANR	53016	UnaryOperator	*		52896	0					
ANR	53017	Identifier	res		52896	1					
ANR	53018	IfStatement	if ( ! res )		52896	6					
ANR	53019	Condition	! res	907:12:31442:31445	52896	0	True				
ANR	53020	UnaryOperationExpression	! res		52896	0					
ANR	53021	UnaryOperator	!		52896	0					
ANR	53022	Identifier	res		52896	1					
ANR	53023	CompoundStatement		27:18:996:996	52896	1					
ANR	53024	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating screen info"" )"	908:12:31462:31517	52896	0	True				
ANR	53025	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating screen info"" )"		52896	0					
ANR	53026	Callee	syslog		52896	0					
ANR	53027	Identifier	syslog		52896	0					
ANR	53028	ArgumentList	LOG_ERR		52896	1					
ANR	53029	Argument	LOG_ERR		52896	0					
ANR	53030	Identifier	LOG_ERR		52896	0					
ANR	53031	Argument	"""out of memory allocating screen info"""		52896	1					
ANR	53032	PrimaryExpression	"""out of memory allocating screen info"""		52896	0					
ANR	53033	ExpressionStatement	n = 0	909:12:31531:31536	52896	1	True				
ANR	53034	AssignmentExpression	n = 0		52896	0		=			
ANR	53035	Identifier	n		52896	0					
ANR	53036	PrimaryExpression	0		52896	1					
ANR	53037	ExpressionStatement	"memcpy ( res , data , n * sizeof ( * res ) )"	911:8:31556:31591	52896	7	True				
ANR	53038	CallExpression	"memcpy ( res , data , n * sizeof ( * res ) )"		52896	0					
ANR	53039	Callee	memcpy		52896	0					
ANR	53040	Identifier	memcpy		52896	0					
ANR	53041	ArgumentList	res		52896	1					
ANR	53042	Argument	res		52896	0					
ANR	53043	Identifier	res		52896	0					
ANR	53044	Argument	data		52896	1					
ANR	53045	Identifier	data		52896	0					
ANR	53046	Argument	n * sizeof ( * res )		52896	2					
ANR	53047	MultiplicativeExpression	n * sizeof ( * res )		52896	0		*			
ANR	53048	Identifier	n		52896	0					
ANR	53049	SizeofExpression	sizeof ( * res )		52896	1					
ANR	53050	Sizeof	sizeof		52896	0					
ANR	53051	UnaryOperationExpression	* res		52896	1					
ANR	53052	UnaryOperator	*		52896	0					
ANR	53053	Identifier	res		52896	1					
ANR	53054	ExpressionStatement	agent_data -> width = header -> arg1	912:8:31601:31634	52896	8	True				
ANR	53055	AssignmentExpression	agent_data -> width = header -> arg1		52896	0		=			
ANR	53056	PtrMemberAccess	agent_data -> width		52896	0					
ANR	53057	Identifier	agent_data		52896	0					
ANR	53058	Identifier	width		52896	1					
ANR	53059	PtrMemberAccess	header -> arg1		52896	1					
ANR	53060	Identifier	header		52896	0					
ANR	53061	Identifier	arg1		52896	1					
ANR	53062	ExpressionStatement	agent_data -> height = header -> arg2	913:8:31644:31677	52896	9	True				
ANR	53063	AssignmentExpression	agent_data -> height = header -> arg2		52896	0		=			
ANR	53064	PtrMemberAccess	agent_data -> height		52896	0					
ANR	53065	Identifier	agent_data		52896	0					
ANR	53066	Identifier	height		52896	1					
ANR	53067	PtrMemberAccess	header -> arg2		52896	1					
ANR	53068	Identifier	header		52896	0					
ANR	53069	Identifier	arg2		52896	1					
ANR	53070	ExpressionStatement	agent_data -> screen_info = res	914:8:31687:31717	52896	10	True				
ANR	53071	AssignmentExpression	agent_data -> screen_info = res		52896	0		=			
ANR	53072	PtrMemberAccess	agent_data -> screen_info		52896	0					
ANR	53073	Identifier	agent_data		52896	0					
ANR	53074	Identifier	screen_info		52896	1					
ANR	53075	Identifier	res		52896	1					
ANR	53076	ExpressionStatement	agent_data -> screen_count = n	915:8:31727:31755	52896	11	True				
ANR	53077	AssignmentExpression	agent_data -> screen_count = n		52896	0		=			
ANR	53078	PtrMemberAccess	agent_data -> screen_count		52896	0					
ANR	53079	Identifier	agent_data		52896	0					
ANR	53080	Identifier	screen_count		52896	1					
ANR	53081	Identifier	n		52896	1					
ANR	53082	ExpressionStatement	check_xorg_resolution ( )	917:8:31766:31789	52896	12	True				
ANR	53083	CallExpression	check_xorg_resolution ( )		52896	0					
ANR	53084	Callee	check_xorg_resolution		52896	0					
ANR	53085	Identifier	check_xorg_resolution		52896	0					
ANR	53086	ArgumentList			52896	1					
ANR	53087	BreakStatement	break ;	918:8:31799:31804	52896	13	True				
ANR	53088	Label	case VDAGENTD_CLIPBOARD_GRAB :	920:4:31816:31844	52896	2	True				
ANR	53089	Identifier	VDAGENTD_CLIPBOARD_GRAB		52896	0					
ANR	53090	Label	case VDAGENTD_CLIPBOARD_REQUEST :	921:4:31850:31881	52896	3	True				
ANR	53091	Identifier	VDAGENTD_CLIPBOARD_REQUEST		52896	0					
ANR	53092	Label	case VDAGENTD_CLIPBOARD_DATA :	922:4:31887:31915	52896	4	True				
ANR	53093	Identifier	VDAGENTD_CLIPBOARD_DATA		52896	0					
ANR	53094	Label	case VDAGENTD_CLIPBOARD_RELEASE :	923:4:31921:31952	52896	5	True				
ANR	53095	Identifier	VDAGENTD_CLIPBOARD_RELEASE		52896	0					
ANR	53096	IfStatement	"if ( do_agent_clipboard ( * connp , header , data ) )"		52896	6					
ANR	53097	Condition	"do_agent_clipboard ( * connp , header , data )"	924:12:31966:32005	52896	0	True				
ANR	53098	CallExpression	"do_agent_clipboard ( * connp , header , data )"		52896	0					
ANR	53099	Callee	do_agent_clipboard		52896	0					
ANR	53100	Identifier	do_agent_clipboard		52896	0					
ANR	53101	ArgumentList	* connp		52896	1					
ANR	53102	Argument	* connp		52896	0					
ANR	53103	UnaryOperationExpression	* connp		52896	0					
ANR	53104	UnaryOperator	*		52896	0					
ANR	53105	Identifier	connp		52896	1					
ANR	53106	Argument	header		52896	1					
ANR	53107	Identifier	header		52896	0					
ANR	53108	Argument	data		52896	2					
ANR	53109	Identifier	data		52896	0					
ANR	53110	CompoundStatement		44:54:1556:1556	52896	1					
ANR	53111	ExpressionStatement	udscs_destroy_connection ( connp )	925:12:32022:32053	52896	0	True				
ANR	53112	CallExpression	udscs_destroy_connection ( connp )		52896	0					
ANR	53113	Callee	udscs_destroy_connection		52896	0					
ANR	53114	Identifier	udscs_destroy_connection		52896	0					
ANR	53115	ArgumentList	connp		52896	1					
ANR	53116	Argument	connp		52896	0					
ANR	53117	Identifier	connp		52896	0					
ANR	53118	ReturnStatement	return ;	926:12:32067:32073	52896	1	True				
ANR	53119	BreakStatement	break ;	928:8:32093:32098	52896	7	True				
ANR	53120	Label	case VDAGENTD_FILE_XFER_STATUS :	929:4:32104:32134	52896	8	True				
ANR	53121	Identifier	VDAGENTD_FILE_XFER_STATUS		52896	0					
ANR	53122	CompoundStatement		49:35:1683:1683	52896	9					
ANR	53123	SwitchStatement	switch ( header -> arg2 )		52896	0					
ANR	53124	Condition	header -> arg2	931:16:32233:32244	52896	0	True				
ANR	53125	PtrMemberAccess	header -> arg2		52896	0					
ANR	53126	Identifier	header		52896	0					
ANR	53127	Identifier	arg2		52896	1					
ANR	53128	CompoundStatement		51:30:1795:1795	52896	1					
ANR	53129	Label	case VD_AGENT_FILE_XFER_STATUS_NOT_ENOUGH_SPACE :	932:12:32261:32308	52896	0	True				
ANR	53130	Identifier	VD_AGENT_FILE_XFER_STATUS_NOT_ENOUGH_SPACE		52896	0					
ANR	53131	CompoundStatement		53:16:1876:1931	52896	1					
ANR	53132	IdentifierDeclStatement	uint64_t free_space = GUINT64_TO_LE ( * ( ( uint64_t * ) data ) ) ;	933:16:32328:32383	52896	0	True				
ANR	53133	IdentifierDecl	free_space = GUINT64_TO_LE ( * ( ( uint64_t * ) data ) )		52896	0					
ANR	53134	IdentifierDeclType	uint64_t		52896	0					
ANR	53135	Identifier	free_space		52896	1					
ANR	53136	AssignmentExpression	free_space = GUINT64_TO_LE ( * ( ( uint64_t * ) data ) )		52896	2		=			
ANR	53137	Identifier	free_space		52896	0					
ANR	53138	CallExpression	GUINT64_TO_LE ( * ( ( uint64_t * ) data ) )		52896	1					
ANR	53139	Callee	GUINT64_TO_LE		52896	0					
ANR	53140	Identifier	GUINT64_TO_LE		52896	0					
ANR	53141	ArgumentList	* ( ( uint64_t * ) data )		52896	1					
ANR	53142	Argument	* ( ( uint64_t * ) data )		52896	0					
ANR	53143	UnaryOperationExpression	* ( ( uint64_t * ) data )		52896	0					
ANR	53144	UnaryOperator	*		52896	0					
ANR	53145	CastExpression	( uint64_t * ) data		52896	1					
ANR	53146	CastTarget	uint64_t *		52896	0					
ANR	53147	Identifier	data		52896	1					
ANR	53148	ExpressionStatement	"send_file_xfer_status ( virtio_port , ""Not enough free space. Cancelling file-xfer %u"" , header -> arg1 , header -> arg2 , ( uint8_t * ) & free_space , sizeof ( uint64_t ) )"	934:16:32401:32630	52896	1	True				
ANR	53149	CallExpression	"send_file_xfer_status ( virtio_port , ""Not enough free space. Cancelling file-xfer %u"" , header -> arg1 , header -> arg2 , ( uint8_t * ) & free_space , sizeof ( uint64_t ) )"		52896	0					
ANR	53150	Callee	send_file_xfer_status		52896	0					
ANR	53151	Identifier	send_file_xfer_status		52896	0					
ANR	53152	ArgumentList	virtio_port		52896	1					
ANR	53153	Argument	virtio_port		52896	0					
ANR	53154	Identifier	virtio_port		52896	0					
ANR	53155	Argument	"""Not enough free space. Cancelling file-xfer %u"""		52896	1					
ANR	53156	PrimaryExpression	"""Not enough free space. Cancelling file-xfer %u"""		52896	0					
ANR	53157	Argument	header -> arg1		52896	2					
ANR	53158	PtrMemberAccess	header -> arg1		52896	0					
ANR	53159	Identifier	header		52896	0					
ANR	53160	Identifier	arg1		52896	1					
ANR	53161	Argument	header -> arg2		52896	3					
ANR	53162	PtrMemberAccess	header -> arg2		52896	0					
ANR	53163	Identifier	header		52896	0					
ANR	53164	Identifier	arg2		52896	1					
ANR	53165	Argument	( uint8_t * ) & free_space		52896	4					
ANR	53166	CastExpression	( uint8_t * ) & free_space		52896	0					
ANR	53167	CastTarget	uint8_t *		52896	0					
ANR	53168	UnaryOperationExpression	& free_space		52896	1					
ANR	53169	UnaryOperator	&		52896	0					
ANR	53170	Identifier	free_space		52896	1					
ANR	53171	Argument	sizeof ( uint64_t )		52896	5					
ANR	53172	SizeofExpression	sizeof ( uint64_t )		52896	0					
ANR	53173	Sizeof	sizeof		52896	0					
ANR	53174	SizeofOperand	uint64_t		52896	1					
ANR	53175	BreakStatement	break ;	937:16:32648:32653	52896	2	True				
ANR	53176	Label	case VD_AGENT_FILE_XFER_STATUS_DISABLED :	939:12:32681:32720	52896	2	True				
ANR	53177	Identifier	VD_AGENT_FILE_XFER_STATUS_DISABLED		52896	0					
ANR	53178	ExpressionStatement	"send_file_xfer_status ( virtio_port , ""File-xfer is disabled, cancelling"" , header -> arg1 , header -> arg2 , NULL , 0 )"	940:16:32738:32884	52896	3	True				
ANR	53179	CallExpression	"send_file_xfer_status ( virtio_port , ""File-xfer is disabled, cancelling"" , header -> arg1 , header -> arg2 , NULL , 0 )"		52896	0					
ANR	53180	Callee	send_file_xfer_status		52896	0					
ANR	53181	Identifier	send_file_xfer_status		52896	0					
ANR	53182	ArgumentList	virtio_port		52896	1					
ANR	53183	Argument	virtio_port		52896	0					
ANR	53184	Identifier	virtio_port		52896	0					
ANR	53185	Argument	"""File-xfer is disabled, cancelling"""		52896	1					
ANR	53186	PrimaryExpression	"""File-xfer is disabled, cancelling"""		52896	0					
ANR	53187	Argument	header -> arg1		52896	2					
ANR	53188	PtrMemberAccess	header -> arg1		52896	0					
ANR	53189	Identifier	header		52896	0					
ANR	53190	Identifier	arg1		52896	1					
ANR	53191	Argument	header -> arg2		52896	3					
ANR	53192	PtrMemberAccess	header -> arg2		52896	0					
ANR	53193	Identifier	header		52896	0					
ANR	53194	Identifier	arg2		52896	1					
ANR	53195	Argument	NULL		52896	4					
ANR	53196	Identifier	NULL		52896	0					
ANR	53197	Argument	0		52896	5					
ANR	53198	PrimaryExpression	0		52896	0					
ANR	53199	BreakStatement	break ;	942:16:32902:32907	52896	4	True				
ANR	53200	Label	default :	943:12:32921:32928	52896	5	True				
ANR	53201	Identifier	default		52896	0					
ANR	53202	ExpressionStatement	"send_file_xfer_status ( virtio_port , NULL , header -> arg1 , header -> arg2 , NULL , 0 )"	944:16:32946:33023	52896	6	True				
ANR	53203	CallExpression	"send_file_xfer_status ( virtio_port , NULL , header -> arg1 , header -> arg2 , NULL , 0 )"		52896	0					
ANR	53204	Callee	send_file_xfer_status		52896	0					
ANR	53205	Identifier	send_file_xfer_status		52896	0					
ANR	53206	ArgumentList	virtio_port		52896	1					
ANR	53207	Argument	virtio_port		52896	0					
ANR	53208	Identifier	virtio_port		52896	0					
ANR	53209	Argument	NULL		52896	1					
ANR	53210	Identifier	NULL		52896	0					
ANR	53211	Argument	header -> arg1		52896	2					
ANR	53212	PtrMemberAccess	header -> arg1		52896	0					
ANR	53213	Identifier	header		52896	0					
ANR	53214	Identifier	arg1		52896	1					
ANR	53215	Argument	header -> arg2		52896	3					
ANR	53216	PtrMemberAccess	header -> arg2		52896	0					
ANR	53217	Identifier	header		52896	0					
ANR	53218	Identifier	arg2		52896	1					
ANR	53219	Argument	NULL		52896	4					
ANR	53220	Identifier	NULL		52896	0					
ANR	53221	Argument	0		52896	5					
ANR	53222	PrimaryExpression	0		52896	0					
ANR	53223	IfStatement	if ( header -> arg2 == VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA )		52896	1					
ANR	53224	Condition	header -> arg2 == VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA	947:12:33048:33102	52896	0	True				
ANR	53225	EqualityExpression	header -> arg2 == VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA		52896	0		==			
ANR	53226	PtrMemberAccess	header -> arg2		52896	0					
ANR	53227	Identifier	header		52896	0					
ANR	53228	Identifier	arg2		52896	1					
ANR	53229	Identifier	VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA		52896	1					
ANR	53230	ExpressionStatement	"g_hash_table_insert ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) , * connp )"	948:12:33117:33237	52896	1	True				
ANR	53231	CallExpression	"g_hash_table_insert ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) , * connp )"		52896	0					
ANR	53232	Callee	g_hash_table_insert		52896	0					
ANR	53233	Identifier	g_hash_table_insert		52896	0					
ANR	53234	ArgumentList	active_xfers		52896	1					
ANR	53235	Argument	active_xfers		52896	0					
ANR	53236	Identifier	active_xfers		52896	0					
ANR	53237	Argument	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		52896	1					
ANR	53238	CallExpression	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		52896	0					
ANR	53239	Callee	GUINT_TO_POINTER		52896	0					
ANR	53240	Identifier	GUINT_TO_POINTER		52896	0					
ANR	53241	ArgumentList	GUINT32_TO_LE ( header -> arg1 )		52896	1					
ANR	53242	Argument	GUINT32_TO_LE ( header -> arg1 )		52896	0					
ANR	53243	CallExpression	GUINT32_TO_LE ( header -> arg1 )		52896	0					
ANR	53244	Callee	GUINT32_TO_LE		52896	0					
ANR	53245	Identifier	GUINT32_TO_LE		52896	0					
ANR	53246	ArgumentList	header -> arg1		52896	1					
ANR	53247	Argument	header -> arg1		52896	0					
ANR	53248	PtrMemberAccess	header -> arg1		52896	0					
ANR	53249	Identifier	header		52896	0					
ANR	53250	Identifier	arg1		52896	1					
ANR	53251	Argument	* connp		52896	2					
ANR	53252	UnaryOperationExpression	* connp		52896	0					
ANR	53253	UnaryOperator	*		52896	0					
ANR	53254	Identifier	connp		52896	1					
ANR	53255	ElseStatement	else		52896	0					
ANR	53256	ExpressionStatement	"g_hash_table_remove ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) )"	951:12:33264:33344	52896	0	True				
ANR	53257	CallExpression	"g_hash_table_remove ( active_xfers , GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) ) )"		52896	0					
ANR	53258	Callee	g_hash_table_remove		52896	0					
ANR	53259	Identifier	g_hash_table_remove		52896	0					
ANR	53260	ArgumentList	active_xfers		52896	1					
ANR	53261	Argument	active_xfers		52896	0					
ANR	53262	Identifier	active_xfers		52896	0					
ANR	53263	Argument	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		52896	1					
ANR	53264	CallExpression	GUINT_TO_POINTER ( GUINT32_TO_LE ( header -> arg1 ) )		52896	0					
ANR	53265	Callee	GUINT_TO_POINTER		52896	0					
ANR	53266	Identifier	GUINT_TO_POINTER		52896	0					
ANR	53267	ArgumentList	GUINT32_TO_LE ( header -> arg1 )		52896	1					
ANR	53268	Argument	GUINT32_TO_LE ( header -> arg1 )		52896	0					
ANR	53269	CallExpression	GUINT32_TO_LE ( header -> arg1 )		52896	0					
ANR	53270	Callee	GUINT32_TO_LE		52896	0					
ANR	53271	Identifier	GUINT32_TO_LE		52896	0					
ANR	53272	ArgumentList	header -> arg1		52896	1					
ANR	53273	Argument	header -> arg1		52896	0					
ANR	53274	PtrMemberAccess	header -> arg1		52896	0					
ANR	53275	Identifier	header		52896	0					
ANR	53276	Identifier	arg1		52896	1					
ANR	53277	BreakStatement	break ;	952:8:33354:33359	52896	2	True				
ANR	53278	Label	default :	955:4:33372:33379	52896	10	True				
ANR	53279	Identifier	default		52896	0					
ANR	53280	ExpressionStatement	"syslog ( LOG_ERR , ""unknown message from vdagent: %u, ignoring"" , header -> type )"	956:8:33389:33479	52896	11	True				
ANR	53281	CallExpression	"syslog ( LOG_ERR , ""unknown message from vdagent: %u, ignoring"" , header -> type )"		52896	0					
ANR	53282	Callee	syslog		52896	0					
ANR	53283	Identifier	syslog		52896	0					
ANR	53284	ArgumentList	LOG_ERR		52896	1					
ANR	53285	Argument	LOG_ERR		52896	0					
ANR	53286	Identifier	LOG_ERR		52896	0					
ANR	53287	Argument	"""unknown message from vdagent: %u, ignoring"""		52896	1					
ANR	53288	PrimaryExpression	"""unknown message from vdagent: %u, ignoring"""		52896	0					
ANR	53289	Argument	header -> type		52896	2					
ANR	53290	PtrMemberAccess	header -> type		52896	0					
ANR	53291	Identifier	header		52896	0					
ANR	53292	Identifier	type		52896	1					
ANR	53293	ReturnType	static void		52896	1					
ANR	53294	Identifier	agent_read_complete		52896	2					
ANR	53295	ParameterList	"struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data"		52896	3					
ANR	53296	Parameter	struct udscs_connection * * connp	879:32:30362:30392	52896	0	True				
ANR	53297	ParameterType	struct udscs_connection * *		52896	0					
ANR	53298	Identifier	connp		52896	1					
ANR	53299	Parameter	struct udscs_message_header * header	880:4:30399:30433	52896	1	True				
ANR	53300	ParameterType	struct udscs_message_header *		52896	0					
ANR	53301	Identifier	header		52896	1					
ANR	53302	Parameter	uint8_t * data	880:41:30436:30448	52896	2	True				
ANR	53303	ParameterType	uint8_t *		52896	0					
ANR	53304	Identifier	data		52896	1					
ANR	53305	CFGEntryNode	ENTRY		52896		True				
ANR	53306	CFGExitNode	EXIT		52896		True				
ANR	53307	Symbol	do_agent_clipboard		52896						
ANR	53308	Symbol	data		52896						
ANR	53309	Symbol	* connp		52896						
ANR	53310	Symbol	agent_data -> screen_info		52896						
ANR	53311	Symbol	* res		52896						
ANR	53312	Symbol	agent_data -> width		52896						
ANR	53313	Symbol	LOG_ERR		52896						
ANR	53314	Symbol	agent_data		52896						
ANR	53315	Symbol	VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA		52896						
ANR	53316	Symbol	GUINT64_TO_LE		52896						
ANR	53317	Symbol	active_xfers		52896						
ANR	53318	Symbol	res		52896						
ANR	53319	Symbol	malloc		52896						
ANR	53320	Symbol	agent_data -> screen_count		52896						
ANR	53321	Symbol	* ( ( uint64_t * ) data )		52896						
ANR	53322	Symbol	connp		52896						
ANR	53323	Symbol	NULL		52896						
ANR	53324	Symbol	GUINT_TO_POINTER		52896						
ANR	53325	Symbol	header -> arg2		52896						
ANR	53326	Symbol	agent_data -> height		52896						
ANR	53327	Symbol	header -> arg1		52896						
ANR	53328	Symbol	* agent_data		52896						
ANR	53329	Symbol	GUINT32_TO_LE		52896						
ANR	53330	Symbol	* header		52896						
ANR	53331	Symbol	n		52896						
ANR	53332	Symbol	& free_space		52896						
ANR	53333	Symbol	virtio_port		52896						
ANR	53334	Symbol	header		52896						
ANR	53335	Symbol	header -> size		52896						
ANR	53336	Symbol	udscs_get_user_data		52896						
ANR	53337	Symbol	* data		52896						
ANR	53338	Symbol	header -> type		52896						
ANR	53339	Symbol	free_space		52896						
ANR	53340	Function	usage	963:0:33502:34456							
ANR	53341	FunctionDef	usage (FILE * fp)		53340	0					
ANR	53342	CompoundStatement		964:0:33530:34456	53340	0					
ANR	53343	Statement	fprintf	965:4:33536:33542	53340	0	True				
ANR	53344	Statement	(	965:11:33543:33543	53340	1	True				
ANR	53345	Statement	fp	965:12:33544:33545	53340	2	True				
ANR	53346	Statement	","	965:14:33546:33546	53340	3	True				
ANR	53347	Statement	"""Usage: spice-vdagentd [OPTIONS]\\n\\n"""	966:12:33560:33596	53340	4	True				
ANR	53348	Statement	"""Spice guest agent daemon, version %s.\\n\\n"""	967:12:33610:33652	53340	5	True				
ANR	53349	Statement	"""Options:\\n"""	968:12:33666:33677	53340	6	True				
ANR	53350	Statement	"""  -h             print this text\\n"""	969:12:33691:33726	53340	7	True				
ANR	53351	Statement	"""  -d             log debug messages (use twice for extra info)\\n"""	970:12:33740:33805	53340	8	True				
ANR	53352	Statement	"""  -s <port>      set virtio serial port  [%s]\\n"""	971:12:33819:33867	53340	9	True				
ANR	53353	Statement	"""  -S <filename>  set vdagent Unix domain socket [%s]\\n"""	972:12:33881:33936	53340	10	True				
ANR	53354	Statement	"""  -u <dev>       set uinput device       [%s]\\n"""	973:12:33950:33998	53340	11	True				
ANR	53355	Statement	"""  -f             treat uinput device as fake; no ioctls\\n"""	974:12:34012:34070	53340	12	True				
ANR	53356	Statement	"""  -x             don't daemonize\\n"""	975:12:34084:34119	53340	13	True				
ANR	53357	Statement	"""  -o             only handle one virtio serial session\\n"""	976:12:34133:34190	53340	14	True				
ANR	53358	Statement	"""  -X             disable console kit integration\\n"""	978:12:34228:34279	53340	15	True				
ANR	53359	Statement	"""  -X             disable systemd-logind integration\\n"""	981:12:34329:34383	53340	16	True				
ANR	53360	Statement	","	983:12:34404:34404	53340	17	True				
ANR	53361	Statement	VERSION	983:13:34405:34411	53340	18	True				
ANR	53362	Statement	","	983:20:34412:34412	53340	19	True				
ANR	53363	Statement	portdev	983:22:34414:34420	53340	20	True				
ANR	53364	Statement	","	983:29:34421:34421	53340	21	True				
ANR	53365	Statement	vdagentd_socket	983:31:34423:34437	53340	22	True				
ANR	53366	Statement	","	983:46:34438:34438	53340	23	True				
ANR	53367	Statement	uinput_device	983:48:34440:34452	53340	24	True				
ANR	53368	Statement	)	983:61:34453:34453	53340	25	True				
ANR	53369	ExpressionStatement		983:62:34454:34454	53340	26	True				
ANR	53370	ReturnType	static void		53340	1					
ANR	53371	Identifier	usage		53340	2					
ANR	53372	ParameterList	FILE * fp		53340	3					
ANR	53373	Parameter	FILE * fp	963:18:33520:33527	53340	0	True				
ANR	53374	ParameterType	FILE *		53340	0					
ANR	53375	Identifier	fp		53340	1					
ANR	53376	CFGEntryNode	ENTRY		53340		True				
ANR	53377	CFGExitNode	EXIT		53340		True				
ANR	53378	Symbol	fp		53340						
ANR	53379	Function	daemonize	986:0:34459:35026							
ANR	53380	FunctionDef	daemonize ()		53379	0					
ANR	53381	CompoundStatement		987:0:34487:35026	53379	0					
ANR	53382	IdentifierDeclStatement	int x ;	988:4:34493:34498	53379	0	True				
ANR	53383	IdentifierDecl	x		53379	0					
ANR	53384	IdentifierDeclType	int		53379	0					
ANR	53385	Identifier	x		53379	1					
ANR	53386	IdentifierDeclStatement	FILE * pidfile ;	989:4:34504:34517	53379	1	True				
ANR	53387	IdentifierDecl	* pidfile		53379	0					
ANR	53388	IdentifierDeclType	FILE *		53379	0					
ANR	53389	Identifier	pidfile		53379	1					
ANR	53390	SwitchStatement	switch ( fork ( ) )		53379	2					
ANR	53391	Condition	fork ( )	992:12:34563:34568	53379	0	True				
ANR	53392	CallExpression	fork ( )		53379	0					
ANR	53393	Callee	fork		53379	0					
ANR	53394	Identifier	fork		53379	0					
ANR	53395	ArgumentList			53379	1					
ANR	53396	CompoundStatement		6:20:83:83	53379	1					
ANR	53397	Label	case 0 :	993:4:34577:34583	53379	0	True				
ANR	53398	ExpressionStatement	close ( 0 )	994:8:34593:34601	53379	1	True				
ANR	53399	CallExpression	close ( 0 )		53379	0					
ANR	53400	Callee	close		53379	0					
ANR	53401	Identifier	close		53379	0					
ANR	53402	ArgumentList	0		53379	1					
ANR	53403	Argument	0		53379	0					
ANR	53404	PrimaryExpression	0		53379	0					
ANR	53405	ExpressionStatement	close ( 1 )	994:18:34603:34611	53379	2	True				
ANR	53406	CallExpression	close ( 1 )		53379	0					
ANR	53407	Callee	close		53379	0					
ANR	53408	Identifier	close		53379	0					
ANR	53409	ArgumentList	1		53379	1					
ANR	53410	Argument	1		53379	0					
ANR	53411	PrimaryExpression	1		53379	0					
ANR	53412	ExpressionStatement	close ( 2 )	994:28:34613:34621	53379	3	True				
ANR	53413	CallExpression	close ( 2 )		53379	0					
ANR	53414	Callee	close		53379	0					
ANR	53415	Identifier	close		53379	0					
ANR	53416	ArgumentList	2		53379	1					
ANR	53417	Argument	2		53379	0					
ANR	53418	PrimaryExpression	2		53379	0					
ANR	53419	ExpressionStatement	setsid ( )	995:8:34631:34639	53379	4	True				
ANR	53420	CallExpression	setsid ( )		53379	0					
ANR	53421	Callee	setsid		53379	0					
ANR	53422	Identifier	setsid		53379	0					
ANR	53423	ArgumentList			53379	1					
ANR	53424	ExpressionStatement	"x = open ( ""/dev/null"" , O_RDWR )"	996:8:34649:34678	53379	5	True				
ANR	53425	AssignmentExpression	"x = open ( ""/dev/null"" , O_RDWR )"		53379	0		=			
ANR	53426	Identifier	x		53379	0					
ANR	53427	CallExpression	"open ( ""/dev/null"" , O_RDWR )"		53379	1					
ANR	53428	Callee	open		53379	0					
ANR	53429	Identifier	open		53379	0					
ANR	53430	ArgumentList	"""/dev/null"""		53379	1					
ANR	53431	Argument	"""/dev/null"""		53379	0					
ANR	53432	PrimaryExpression	"""/dev/null"""		53379	0					
ANR	53433	Argument	O_RDWR		53379	1					
ANR	53434	Identifier	O_RDWR		53379	0					
ANR	53435	ExpressionStatement	x = dup ( x )	996:39:34680:34690	53379	6	True				
ANR	53436	AssignmentExpression	x = dup ( x )		53379	0		=			
ANR	53437	Identifier	x		53379	0					
ANR	53438	CallExpression	dup ( x )		53379	1					
ANR	53439	Callee	dup		53379	0					
ANR	53440	Identifier	dup		53379	0					
ANR	53441	ArgumentList	x		53379	1					
ANR	53442	Argument	x		53379	0					
ANR	53443	Identifier	x		53379	0					
ANR	53444	ExpressionStatement	x = dup ( x )	996:51:34692:34702	53379	7	True				
ANR	53445	AssignmentExpression	x = dup ( x )		53379	0		=			
ANR	53446	Identifier	x		53379	0					
ANR	53447	CallExpression	dup ( x )		53379	1					
ANR	53448	Callee	dup		53379	0					
ANR	53449	Identifier	dup		53379	0					
ANR	53450	ArgumentList	x		53379	1					
ANR	53451	Argument	x		53379	0					
ANR	53452	Identifier	x		53379	0					
ANR	53453	ExpressionStatement	"pidfile = fopen ( pidfilename , ""w"" )"	997:8:34712:34745	53379	8	True				
ANR	53454	AssignmentExpression	"pidfile = fopen ( pidfilename , ""w"" )"		53379	0		=			
ANR	53455	Identifier	pidfile		53379	0					
ANR	53456	CallExpression	"fopen ( pidfilename , ""w"" )"		53379	1					
ANR	53457	Callee	fopen		53379	0					
ANR	53458	Identifier	fopen		53379	0					
ANR	53459	ArgumentList	pidfilename		53379	1					
ANR	53460	Argument	pidfilename		53379	0					
ANR	53461	Identifier	pidfilename		53379	0					
ANR	53462	Argument	"""w"""		53379	1					
ANR	53463	PrimaryExpression	"""w"""		53379	0					
ANR	53464	IfStatement	if ( pidfile )		53379	9					
ANR	53465	Condition	pidfile	998:12:34759:34765	53379	0	True				
ANR	53466	Identifier	pidfile		53379	0					
ANR	53467	CompoundStatement		12:21:280:280	53379	1					
ANR	53468	ExpressionStatement	"fprintf ( pidfile , ""%d\\n"" , ( int ) getpid ( ) )"	999:12:34782:34821	53379	0	True				
ANR	53469	CallExpression	"fprintf ( pidfile , ""%d\\n"" , ( int ) getpid ( ) )"		53379	0					
ANR	53470	Callee	fprintf		53379	0					
ANR	53471	Identifier	fprintf		53379	0					
ANR	53472	ArgumentList	pidfile		53379	1					
ANR	53473	Argument	pidfile		53379	0					
ANR	53474	Identifier	pidfile		53379	0					
ANR	53475	Argument	"""%d\\n"""		53379	1					
ANR	53476	PrimaryExpression	"""%d\\n"""		53379	0					
ANR	53477	Argument	( int ) getpid ( )		53379	2					
ANR	53478	CastExpression	( int ) getpid ( )		53379	0					
ANR	53479	CastTarget	int		53379	0					
ANR	53480	CallExpression	getpid ( )		53379	1					
ANR	53481	Callee	getpid		53379	0					
ANR	53482	Identifier	getpid		53379	0					
ANR	53483	ArgumentList			53379	1					
ANR	53484	ExpressionStatement	fclose ( pidfile )	1000:12:34835:34850	53379	1	True				
ANR	53485	CallExpression	fclose ( pidfile )		53379	0					
ANR	53486	Callee	fclose		53379	0					
ANR	53487	Identifier	fclose		53379	0					
ANR	53488	ArgumentList	pidfile		53379	1					
ANR	53489	Argument	pidfile		53379	0					
ANR	53490	Identifier	pidfile		53379	0					
ANR	53491	BreakStatement	break ;	1002:8:34870:34875	53379	10	True				
ANR	53492	Statement	case	1003:4:34881:34884	53379	11	True				
ANR	53493	Statement	-	1003:9:34886:34886	53379	12	True				
ANR	53494	Label	1 :	1003:10:34887:34888	53379	13	True				
ANR	53495	ExpressionStatement	"syslog ( LOG_ERR , ""fork: %m"" )"	1004:8:34898:34925	53379	14	True				
ANR	53496	CallExpression	"syslog ( LOG_ERR , ""fork: %m"" )"		53379	0					
ANR	53497	Callee	syslog		53379	0					
ANR	53498	Identifier	syslog		53379	0					
ANR	53499	ArgumentList	LOG_ERR		53379	1					
ANR	53500	Argument	LOG_ERR		53379	0					
ANR	53501	Identifier	LOG_ERR		53379	0					
ANR	53502	Argument	"""fork: %m"""		53379	1					
ANR	53503	PrimaryExpression	"""fork: %m"""		53379	0					
ANR	53504	ExpressionStatement	retval = 1	1005:8:34935:34945	53379	15	True				
ANR	53505	AssignmentExpression	retval = 1		53379	0		=			
ANR	53506	Identifier	retval		53379	0					
ANR	53507	PrimaryExpression	1		53379	1					
ANR	53508	Label	default :	1006:4:34951:34958	53379	16	True				
ANR	53509	Identifier	default		53379	0					
ANR	53510	ExpressionStatement	udscs_destroy_server ( server )	1007:8:34968:34996	53379	17	True				
ANR	53511	CallExpression	udscs_destroy_server ( server )		53379	0					
ANR	53512	Callee	udscs_destroy_server		53379	0					
ANR	53513	Identifier	udscs_destroy_server		53379	0					
ANR	53514	ArgumentList	server		53379	1					
ANR	53515	Argument	server		53379	0					
ANR	53516	Identifier	server		53379	0					
ANR	53517	ExpressionStatement	exit ( retval )	1008:8:35006:35018	53379	18	True				
ANR	53518	CallExpression	exit ( retval )		53379	0					
ANR	53519	Callee	exit		53379	0					
ANR	53520	Identifier	exit		53379	0					
ANR	53521	ArgumentList	retval		53379	1					
ANR	53522	Argument	retval		53379	0					
ANR	53523	Identifier	retval		53379	0					
ANR	53524	ReturnType	static void		53379	1					
ANR	53525	Identifier	daemonize		53379	2					
ANR	53526	ParameterList			53379	3					
ANR	53527	CFGEntryNode	ENTRY		53379		True				
ANR	53528	CFGExitNode	EXIT		53379		True				
ANR	53529	Symbol	pidfile		53379						
ANR	53530	Symbol	fopen		53379						
ANR	53531	Symbol	server		53379						
ANR	53532	Symbol	fork		53379						
ANR	53533	Symbol	O_RDWR		53379						
ANR	53534	Symbol	LOG_ERR		53379						
ANR	53535	Symbol	x		53379						
ANR	53536	Symbol	getpid		53379						
ANR	53537	Symbol	open		53379						
ANR	53538	Symbol	dup		53379						
ANR	53539	Symbol	retval		53379						
ANR	53540	Symbol	pidfilename		53379						
ANR	53541	Function	main_loop	1012:0:35029:37148							
ANR	53542	FunctionDef	main_loop ()		53541	0					
ANR	53543	CompoundStatement		1013:0:35057:37148	53541	0					
ANR	53544	IdentifierDeclStatement	"fd_set readfds , writefds ;"	1014:4:35063:35087	53541	0	True				
ANR	53545	IdentifierDecl	readfds		53541	0					
ANR	53546	IdentifierDeclType	fd_set		53541	0					
ANR	53547	Identifier	readfds		53541	1					
ANR	53548	IdentifierDecl	writefds		53541	1					
ANR	53549	IdentifierDeclType	fd_set		53541	0					
ANR	53550	Identifier	writefds		53541	1					
ANR	53551	IdentifierDeclStatement	"int n , nfds ;"	1015:4:35093:35104	53541	1	True				
ANR	53552	IdentifierDecl	n		53541	0					
ANR	53553	IdentifierDeclType	int		53541	0					
ANR	53554	Identifier	n		53541	1					
ANR	53555	IdentifierDecl	nfds		53541	1					
ANR	53556	IdentifierDeclType	int		53541	0					
ANR	53557	Identifier	nfds		53541	1					
ANR	53558	IdentifierDeclStatement	int ck_fd = 0 ;	1016:4:35110:35123	53541	2	True				
ANR	53559	IdentifierDecl	ck_fd = 0		53541	0					
ANR	53560	IdentifierDeclType	int		53541	0					
ANR	53561	Identifier	ck_fd		53541	1					
ANR	53562	AssignmentExpression	ck_fd = 0		53541	2		=			
ANR	53563	Identifier	ck_fd		53541	0					
ANR	53564	PrimaryExpression	0		53541	1					
ANR	53565	IdentifierDeclStatement	int once = 0 ;	1017:4:35129:35141	53541	3	True				
ANR	53566	IdentifierDecl	once = 0		53541	0					
ANR	53567	IdentifierDeclType	int		53541	0					
ANR	53568	Identifier	once		53541	1					
ANR	53569	AssignmentExpression	once = 0		53541	2		=			
ANR	53570	Identifier	once		53541	0					
ANR	53571	PrimaryExpression	0		53541	1					
ANR	53572	WhileStatement	while ( ! quit )		53541	4					
ANR	53573	Condition	! quit	1019:11:35155:35159	53541	0	True				
ANR	53574	UnaryOperationExpression	! quit		53541	0					
ANR	53575	UnaryOperator	!		53541	0					
ANR	53576	Identifier	quit		53541	1					
ANR	53577	CompoundStatement		7:18:104:104	53541	1					
ANR	53578	ExpressionStatement	FD_ZERO ( & readfds )	1020:8:35172:35189	53541	0	True				
ANR	53579	CallExpression	FD_ZERO ( & readfds )		53541	0					
ANR	53580	Callee	FD_ZERO		53541	0					
ANR	53581	Identifier	FD_ZERO		53541	0					
ANR	53582	ArgumentList	& readfds		53541	1					
ANR	53583	Argument	& readfds		53541	0					
ANR	53584	UnaryOperationExpression	& readfds		53541	0					
ANR	53585	UnaryOperator	&		53541	0					
ANR	53586	Identifier	readfds		53541	1					
ANR	53587	ExpressionStatement	FD_ZERO ( & writefds )	1021:8:35199:35217	53541	1	True				
ANR	53588	CallExpression	FD_ZERO ( & writefds )		53541	0					
ANR	53589	Callee	FD_ZERO		53541	0					
ANR	53590	Identifier	FD_ZERO		53541	0					
ANR	53591	ArgumentList	& writefds		53541	1					
ANR	53592	Argument	& writefds		53541	0					
ANR	53593	UnaryOperationExpression	& writefds		53541	0					
ANR	53594	UnaryOperator	&		53541	0					
ANR	53595	Identifier	writefds		53541	1					
ANR	53596	ExpressionStatement	"nfds = udscs_server_fill_fds ( server , & readfds , & writefds )"	1023:8:35228:35285	53541	2	True				
ANR	53597	AssignmentExpression	"nfds = udscs_server_fill_fds ( server , & readfds , & writefds )"		53541	0		=			
ANR	53598	Identifier	nfds		53541	0					
ANR	53599	CallExpression	"udscs_server_fill_fds ( server , & readfds , & writefds )"		53541	1					
ANR	53600	Callee	udscs_server_fill_fds		53541	0					
ANR	53601	Identifier	udscs_server_fill_fds		53541	0					
ANR	53602	ArgumentList	server		53541	1					
ANR	53603	Argument	server		53541	0					
ANR	53604	Identifier	server		53541	0					
ANR	53605	Argument	& readfds		53541	1					
ANR	53606	UnaryOperationExpression	& readfds		53541	0					
ANR	53607	UnaryOperator	&		53541	0					
ANR	53608	Identifier	readfds		53541	1					
ANR	53609	Argument	& writefds		53541	2					
ANR	53610	UnaryOperationExpression	& writefds		53541	0					
ANR	53611	UnaryOperator	&		53541	0					
ANR	53612	Identifier	writefds		53541	1					
ANR	53613	ExpressionStatement	"n = vdagent_virtio_port_fill_fds ( virtio_port , & readfds , & writefds )"	1024:8:35295:35361	53541	3	True				
ANR	53614	AssignmentExpression	"n = vdagent_virtio_port_fill_fds ( virtio_port , & readfds , & writefds )"		53541	0		=			
ANR	53615	Identifier	n		53541	0					
ANR	53616	CallExpression	"vdagent_virtio_port_fill_fds ( virtio_port , & readfds , & writefds )"		53541	1					
ANR	53617	Callee	vdagent_virtio_port_fill_fds		53541	0					
ANR	53618	Identifier	vdagent_virtio_port_fill_fds		53541	0					
ANR	53619	ArgumentList	virtio_port		53541	1					
ANR	53620	Argument	virtio_port		53541	0					
ANR	53621	Identifier	virtio_port		53541	0					
ANR	53622	Argument	& readfds		53541	1					
ANR	53623	UnaryOperationExpression	& readfds		53541	0					
ANR	53624	UnaryOperator	&		53541	0					
ANR	53625	Identifier	readfds		53541	1					
ANR	53626	Argument	& writefds		53541	2					
ANR	53627	UnaryOperationExpression	& writefds		53541	0					
ANR	53628	UnaryOperator	&		53541	0					
ANR	53629	Identifier	writefds		53541	1					
ANR	53630	IfStatement	if ( n >= nfds )		53541	4					
ANR	53631	Condition	n >= nfds	1025:12:35375:35383	53541	0	True				
ANR	53632	RelationalExpression	n >= nfds		53541	0		>=			
ANR	53633	Identifier	n		53541	0					
ANR	53634	Identifier	nfds		53541	1					
ANR	53635	ExpressionStatement	nfds = n + 1	1026:12:35398:35410	53541	1	True				
ANR	53636	AssignmentExpression	nfds = n + 1		53541	0		=			
ANR	53637	Identifier	nfds		53541	0					
ANR	53638	AdditiveExpression	n + 1		53541	1		+			
ANR	53639	Identifier	n		53541	0					
ANR	53640	PrimaryExpression	1		53541	1					
ANR	53641	IfStatement	if ( session_info )		53541	5					
ANR	53642	Condition	session_info	1028:12:35425:35436	53541	0	True				
ANR	53643	Identifier	session_info		53541	0					
ANR	53644	CompoundStatement		16:26:381:381	53541	1					
ANR	53645	ExpressionStatement	ck_fd = session_info_get_fd ( session_info )	1029:12:35453:35494	53541	0	True				
ANR	53646	AssignmentExpression	ck_fd = session_info_get_fd ( session_info )		53541	0		=			
ANR	53647	Identifier	ck_fd		53541	0					
ANR	53648	CallExpression	session_info_get_fd ( session_info )		53541	1					
ANR	53649	Callee	session_info_get_fd		53541	0					
ANR	53650	Identifier	session_info_get_fd		53541	0					
ANR	53651	ArgumentList	session_info		53541	1					
ANR	53652	Argument	session_info		53541	0					
ANR	53653	Identifier	session_info		53541	0					
ANR	53654	ExpressionStatement	"FD_SET ( ck_fd , & readfds )"	1030:12:35508:35531	53541	1	True				
ANR	53655	CallExpression	"FD_SET ( ck_fd , & readfds )"		53541	0					
ANR	53656	Callee	FD_SET		53541	0					
ANR	53657	Identifier	FD_SET		53541	0					
ANR	53658	ArgumentList	ck_fd		53541	1					
ANR	53659	Argument	ck_fd		53541	0					
ANR	53660	Identifier	ck_fd		53541	0					
ANR	53661	Argument	& readfds		53541	1					
ANR	53662	UnaryOperationExpression	& readfds		53541	0					
ANR	53663	UnaryOperator	&		53541	0					
ANR	53664	Identifier	readfds		53541	1					
ANR	53665	IfStatement	if ( ck_fd >= nfds )		53541	2					
ANR	53666	Condition	ck_fd >= nfds	1031:16:35549:35561	53541	0	True				
ANR	53667	RelationalExpression	ck_fd >= nfds		53541	0		>=			
ANR	53668	Identifier	ck_fd		53541	0					
ANR	53669	Identifier	nfds		53541	1					
ANR	53670	ExpressionStatement	nfds = ck_fd + 1	1032:16:35580:35596	53541	1	True				
ANR	53671	AssignmentExpression	nfds = ck_fd + 1		53541	0		=			
ANR	53672	Identifier	nfds		53541	0					
ANR	53673	AdditiveExpression	ck_fd + 1		53541	1		+			
ANR	53674	Identifier	ck_fd		53541	0					
ANR	53675	PrimaryExpression	1		53541	1					
ANR	53676	ExpressionStatement	"n = select ( nfds , & readfds , & writefds , NULL , NULL )"	1035:8:35617:35666	53541	6	True				
ANR	53677	AssignmentExpression	"n = select ( nfds , & readfds , & writefds , NULL , NULL )"		53541	0		=			
ANR	53678	Identifier	n		53541	0					
ANR	53679	CallExpression	"select ( nfds , & readfds , & writefds , NULL , NULL )"		53541	1					
ANR	53680	Callee	select		53541	0					
ANR	53681	Identifier	select		53541	0					
ANR	53682	ArgumentList	nfds		53541	1					
ANR	53683	Argument	nfds		53541	0					
ANR	53684	Identifier	nfds		53541	0					
ANR	53685	Argument	& readfds		53541	1					
ANR	53686	UnaryOperationExpression	& readfds		53541	0					
ANR	53687	UnaryOperator	&		53541	0					
ANR	53688	Identifier	readfds		53541	1					
ANR	53689	Argument	& writefds		53541	2					
ANR	53690	UnaryOperationExpression	& writefds		53541	0					
ANR	53691	UnaryOperator	&		53541	0					
ANR	53692	Identifier	writefds		53541	1					
ANR	53693	Argument	NULL		53541	3					
ANR	53694	Identifier	NULL		53541	0					
ANR	53695	Argument	NULL		53541	4					
ANR	53696	Identifier	NULL		53541	0					
ANR	53697	IfStatement	if ( n == - 1 )		53541	7					
ANR	53698	Condition	n == - 1	1036:12:35680:35686	53541	0	True				
ANR	53699	EqualityExpression	n == - 1		53541	0		==			
ANR	53700	Identifier	n		53541	0					
ANR	53701	UnaryOperationExpression	- 1		53541	1					
ANR	53702	UnaryOperator	-		53541	0					
ANR	53703	PrimaryExpression	1		53541	1					
ANR	53704	CompoundStatement		24:21:631:631	53541	1					
ANR	53705	IfStatement	if ( errno == EINTR )		53541	0					
ANR	53706	Condition	errno == EINTR	1037:16:35707:35720	53541	0	True				
ANR	53707	EqualityExpression	errno == EINTR		53541	0		==			
ANR	53708	Identifier	errno		53541	0					
ANR	53709	Identifier	EINTR		53541	1					
ANR	53710	ContinueStatement	continue ;	1038:16:35739:35747	53541	1	True				
ANR	53711	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal error select: %m"" )"	1039:12:35761:35803	53541	1	True				
ANR	53712	CallExpression	"syslog ( LOG_CRIT , ""Fatal error select: %m"" )"		53541	0					
ANR	53713	Callee	syslog		53541	0					
ANR	53714	Identifier	syslog		53541	0					
ANR	53715	ArgumentList	LOG_CRIT		53541	1					
ANR	53716	Argument	LOG_CRIT		53541	0					
ANR	53717	Identifier	LOG_CRIT		53541	0					
ANR	53718	Argument	"""Fatal error select: %m"""		53541	1					
ANR	53719	PrimaryExpression	"""Fatal error select: %m"""		53541	0					
ANR	53720	ExpressionStatement	retval = 1	1040:12:35817:35827	53541	2	True				
ANR	53721	AssignmentExpression	retval = 1		53541	0		=			
ANR	53722	Identifier	retval		53541	0					
ANR	53723	PrimaryExpression	1		53541	1					
ANR	53724	BreakStatement	break ;	1041:12:35841:35846	53541	3	True				
ANR	53725	ExpressionStatement	"udscs_server_handle_fds ( server , & readfds , & writefds )"	1044:8:35867:35919	53541	8	True				
ANR	53726	CallExpression	"udscs_server_handle_fds ( server , & readfds , & writefds )"		53541	0					
ANR	53727	Callee	udscs_server_handle_fds		53541	0					
ANR	53728	Identifier	udscs_server_handle_fds		53541	0					
ANR	53729	ArgumentList	server		53541	1					
ANR	53730	Argument	server		53541	0					
ANR	53731	Identifier	server		53541	0					
ANR	53732	Argument	& readfds		53541	1					
ANR	53733	UnaryOperationExpression	& readfds		53541	0					
ANR	53734	UnaryOperator	&		53541	0					
ANR	53735	Identifier	readfds		53541	1					
ANR	53736	Argument	& writefds		53541	2					
ANR	53737	UnaryOperationExpression	& writefds		53541	0					
ANR	53738	UnaryOperator	&		53541	0					
ANR	53739	Identifier	writefds		53541	1					
ANR	53740	IfStatement	if ( virtio_port )		53541	9					
ANR	53741	Condition	virtio_port	1046:12:35934:35944	53541	0	True				
ANR	53742	Identifier	virtio_port		53541	0					
ANR	53743	CompoundStatement		34:25:889:889	53541	1					
ANR	53744	ExpressionStatement	once = 1	1047:12:35961:35969	53541	0	True				
ANR	53745	AssignmentExpression	once = 1		53541	0		=			
ANR	53746	Identifier	once		53541	0					
ANR	53747	PrimaryExpression	1		53541	1					
ANR	53748	ExpressionStatement	"vdagent_virtio_port_handle_fds ( & virtio_port , & readfds , & writefds )"	1048:12:35983:36048	53541	1	True				
ANR	53749	CallExpression	"vdagent_virtio_port_handle_fds ( & virtio_port , & readfds , & writefds )"		53541	0					
ANR	53750	Callee	vdagent_virtio_port_handle_fds		53541	0					
ANR	53751	Identifier	vdagent_virtio_port_handle_fds		53541	0					
ANR	53752	ArgumentList	& virtio_port		53541	1					
ANR	53753	Argument	& virtio_port		53541	0					
ANR	53754	UnaryOperationExpression	& virtio_port		53541	0					
ANR	53755	UnaryOperator	&		53541	0					
ANR	53756	Identifier	virtio_port		53541	1					
ANR	53757	Argument	& readfds		53541	1					
ANR	53758	UnaryOperationExpression	& readfds		53541	0					
ANR	53759	UnaryOperator	&		53541	0					
ANR	53760	Identifier	readfds		53541	1					
ANR	53761	Argument	& writefds		53541	2					
ANR	53762	UnaryOperationExpression	& writefds		53541	0					
ANR	53763	UnaryOperator	&		53541	0					
ANR	53764	Identifier	writefds		53541	1					
ANR	53765	IfStatement	if ( ! virtio_port )		53541	2					
ANR	53766	Condition	! virtio_port	1049:16:36066:36077	53541	0	True				
ANR	53767	UnaryOperationExpression	! virtio_port		53541	0					
ANR	53768	UnaryOperator	!		53541	0					
ANR	53769	Identifier	virtio_port		53541	1					
ANR	53770	CompoundStatement		38:16:1040:1083	53541	1					
ANR	53771	IdentifierDeclStatement	int old_client_connected = client_connected ;	1050:16:36098:36141	53541	0	True				
ANR	53772	IdentifierDecl	old_client_connected = client_connected		53541	0					
ANR	53773	IdentifierDeclType	int		53541	0					
ANR	53774	Identifier	old_client_connected		53541	1					
ANR	53775	AssignmentExpression	old_client_connected = client_connected		53541	2		=			
ANR	53776	Identifier	client_connected		53541	0					
ANR	53777	Identifier	client_connected		53541	1					
ANR	53778	ExpressionStatement	"syslog ( LOG_CRIT , ""AIIEEE lost spice client connection, reconnecting"" )"	1051:16:36159:36251	53541	1	True				
ANR	53779	CallExpression	"syslog ( LOG_CRIT , ""AIIEEE lost spice client connection, reconnecting"" )"		53541	0					
ANR	53780	Callee	syslog		53541	0					
ANR	53781	Identifier	syslog		53541	0					
ANR	53782	ArgumentList	LOG_CRIT		53541	1					
ANR	53783	Argument	LOG_CRIT		53541	0					
ANR	53784	Identifier	LOG_CRIT		53541	0					
ANR	53785	Argument	"""AIIEEE lost spice client connection, reconnecting"""		53541	1					
ANR	53786	PrimaryExpression	"""AIIEEE lost spice client connection, reconnecting"""		53541	0					
ANR	53787	ExpressionStatement	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"	1053:16:36269:36457	53541	2	True				
ANR	53788	AssignmentExpression	"virtio_port = vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		53541	0		=			
ANR	53789	Identifier	virtio_port		53541	0					
ANR	53790	CallExpression	"vdagent_virtio_port_create ( portdev , virtio_port_read_complete , NULL )"		53541	1					
ANR	53791	Callee	vdagent_virtio_port_create		53541	0					
ANR	53792	Identifier	vdagent_virtio_port_create		53541	0					
ANR	53793	ArgumentList	portdev		53541	1					
ANR	53794	Argument	portdev		53541	0					
ANR	53795	Identifier	portdev		53541	0					
ANR	53796	Argument	virtio_port_read_complete		53541	1					
ANR	53797	Identifier	virtio_port_read_complete		53541	0					
ANR	53798	Argument	NULL		53541	2					
ANR	53799	Identifier	NULL		53541	0					
ANR	53800	IfStatement	if ( ! virtio_port )		53541	3					
ANR	53801	Condition	! virtio_port	1056:20:36479:36490	53541	0	True				
ANR	53802	UnaryOperationExpression	! virtio_port		53541	0					
ANR	53803	UnaryOperator	!		53541	0					
ANR	53804	Identifier	virtio_port		53541	1					
ANR	53805	CompoundStatement		44:34:1435:1435	53541	1					
ANR	53806	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"	1057:20:36515:36604	53541	0	True				
ANR	53807	CallExpression	"syslog ( LOG_CRIT , ""Fatal error opening vdagent virtio channel"" )"		53541	0					
ANR	53808	Callee	syslog		53541	0					
ANR	53809	Identifier	syslog		53541	0					
ANR	53810	ArgumentList	LOG_CRIT		53541	1					
ANR	53811	Argument	LOG_CRIT		53541	0					
ANR	53812	Identifier	LOG_CRIT		53541	0					
ANR	53813	Argument	"""Fatal error opening vdagent virtio channel"""		53541	1					
ANR	53814	PrimaryExpression	"""Fatal error opening vdagent virtio channel"""		53541	0					
ANR	53815	ExpressionStatement	retval = 1	1059:20:36626:36636	53541	1	True				
ANR	53816	AssignmentExpression	retval = 1		53541	0		=			
ANR	53817	Identifier	retval		53541	0					
ANR	53818	PrimaryExpression	1		53541	1					
ANR	53819	BreakStatement	break ;	1060:20:36658:36663	53541	2	True				
ANR	53820	ExpressionStatement	do_client_disconnect ( )	1062:16:36699:36721	53541	4	True				
ANR	53821	CallExpression	do_client_disconnect ( )		53541	0					
ANR	53822	Callee	do_client_disconnect		53541	0					
ANR	53823	Identifier	do_client_disconnect		53541	0					
ANR	53824	ArgumentList			53541	1					
ANR	53825	ExpressionStatement	client_connected = old_client_connected	1063:16:36739:36778	53541	5	True				
ANR	53826	AssignmentExpression	client_connected = old_client_connected		53541	0		=			
ANR	53827	Identifier	client_connected		53541	0					
ANR	53828	Identifier	old_client_connected		53541	1					
ANR	53829	ElseStatement	else		53541	0					
ANR	53830	IfStatement	if ( only_once && once )		53541	0					
ANR	53831	Condition	only_once && once	1066:17:36821:36837	53541	0	True				
ANR	53832	AndExpression	only_once && once		53541	0		&&			
ANR	53833	Identifier	only_once		53541	0					
ANR	53834	Identifier	once		53541	1					
ANR	53835	CompoundStatement		55:8:1790:1790	53541	1					
ANR	53836	ExpressionStatement	"syslog ( LOG_INFO , ""Exiting after one client session."" )"	1068:12:36862:36915	53541	0	True				
ANR	53837	CallExpression	"syslog ( LOG_INFO , ""Exiting after one client session."" )"		53541	0					
ANR	53838	Callee	syslog		53541	0					
ANR	53839	Identifier	syslog		53541	0					
ANR	53840	ArgumentList	LOG_INFO		53541	1					
ANR	53841	Argument	LOG_INFO		53541	0					
ANR	53842	Identifier	LOG_INFO		53541	0					
ANR	53843	Argument	"""Exiting after one client session."""		53541	1					
ANR	53844	PrimaryExpression	"""Exiting after one client session."""		53541	0					
ANR	53845	BreakStatement	break ;	1069:12:36929:36934	53541	1	True				
ANR	53846	IfStatement	"if ( session_info && FD_ISSET ( ck_fd , & readfds ) )"		53541	10					
ANR	53847	Condition	"session_info && FD_ISSET ( ck_fd , & readfds )"	1072:12:36959:36999	53541	0	True				
ANR	53848	AndExpression	"session_info && FD_ISSET ( ck_fd , & readfds )"		53541	0		&&			
ANR	53849	Identifier	session_info		53541	0					
ANR	53850	CallExpression	"FD_ISSET ( ck_fd , & readfds )"		53541	1					
ANR	53851	Callee	FD_ISSET		53541	0					
ANR	53852	Identifier	FD_ISSET		53541	0					
ANR	53853	ArgumentList	ck_fd		53541	1					
ANR	53854	Argument	ck_fd		53541	0					
ANR	53855	Identifier	ck_fd		53541	0					
ANR	53856	Argument	& readfds		53541	1					
ANR	53857	UnaryOperationExpression	& readfds		53541	0					
ANR	53858	UnaryOperator	&		53541	0					
ANR	53859	Identifier	readfds		53541	1					
ANR	53860	CompoundStatement		60:55:1944:1944	53541	1					
ANR	53861	ExpressionStatement	active_session = session_info_get_active_session ( session_info )	1073:12:37016:37078	53541	0	True				
ANR	53862	AssignmentExpression	active_session = session_info_get_active_session ( session_info )		53541	0		=			
ANR	53863	Identifier	active_session		53541	0					
ANR	53864	CallExpression	session_info_get_active_session ( session_info )		53541	1					
ANR	53865	Callee	session_info_get_active_session		53541	0					
ANR	53866	Identifier	session_info_get_active_session		53541	0					
ANR	53867	ArgumentList	session_info		53541	1					
ANR	53868	Argument	session_info		53541	0					
ANR	53869	Identifier	session_info		53541	0					
ANR	53870	ExpressionStatement	update_active_session_connection ( NULL )	1074:12:37092:37130	53541	1	True				
ANR	53871	CallExpression	update_active_session_connection ( NULL )		53541	0					
ANR	53872	Callee	update_active_session_connection		53541	0					
ANR	53873	Identifier	update_active_session_connection		53541	0					
ANR	53874	ArgumentList	NULL		53541	1					
ANR	53875	Argument	NULL		53541	0					
ANR	53876	Identifier	NULL		53541	0					
ANR	53877	ReturnType	static void		53541	1					
ANR	53878	Identifier	main_loop		53541	2					
ANR	53879	ParameterList			53541	3					
ANR	53880	CFGEntryNode	ENTRY		53541		True				
ANR	53881	CFGExitNode	EXIT		53541		True				
ANR	53882	Symbol	server		53541						
ANR	53883	Symbol	select		53541						
ANR	53884	Symbol	only_once		53541						
ANR	53885	Symbol	LOG_INFO		53541						
ANR	53886	Symbol	session_info_get_fd		53541						
ANR	53887	Symbol	EINTR		53541						
ANR	53888	Symbol	client_connected		53541						
ANR	53889	Symbol	session_info_get_active_session		53541						
ANR	53890	Symbol	writefds		53541						
ANR	53891	Symbol	vdagent_virtio_port_fill_fds		53541						
ANR	53892	Symbol	old_client_connected		53541						
ANR	53893	Symbol	ck_fd		53541						
ANR	53894	Symbol	& virtio_port		53541						
ANR	53895	Symbol	portdev		53541						
ANR	53896	Symbol	& writefds		53541						
ANR	53897	Symbol	FD_ISSET		53541						
ANR	53898	Symbol	& readfds		53541						
ANR	53899	Symbol	udscs_server_fill_fds		53541						
ANR	53900	Symbol	vdagent_virtio_port_create		53541						
ANR	53901	Symbol	errno		53541						
ANR	53902	Symbol	NULL		53541						
ANR	53903	Symbol	session_info		53541						
ANR	53904	Symbol	active_session		53541						
ANR	53905	Symbol	n		53541						
ANR	53906	Symbol	retval		53541						
ANR	53907	Symbol	nfds		53541						
ANR	53908	Symbol	once		53541						
ANR	53909	Symbol	virtio_port		53541						
ANR	53910	Symbol	readfds		53541						
ANR	53911	Symbol	quit		53541						
ANR	53912	Symbol	virtio_port_read_complete		53541						
ANR	53913	Symbol	LOG_CRIT		53541						
ANR	53914	Function	quit_handler	1079:0:37151:37201							
ANR	53915	FunctionDef	quit_handler (int sig)		53914	0					
ANR	53916	CompoundStatement		1080:0:37185:37201	53914	0					
ANR	53917	ExpressionStatement	quit = 1	1081:4:37191:37199	53914	0	True				
ANR	53918	AssignmentExpression	quit = 1		53914	0		=			
ANR	53919	Identifier	quit		53914	0					
ANR	53920	PrimaryExpression	1		53914	1					
ANR	53921	ReturnType	static void		53914	1					
ANR	53922	Identifier	quit_handler		53914	2					
ANR	53923	ParameterList	int sig		53914	3					
ANR	53924	Parameter	int sig	1079:25:37176:37182	53914	0	True				
ANR	53925	ParameterType	int		53914	0					
ANR	53926	Identifier	sig		53914	1					
ANR	53927	CFGEntryNode	ENTRY		53914		True				
ANR	53928	CFGExitNode	EXIT		53914		True				
ANR	53929	Symbol	sig		53914						
ANR	53930	Symbol	quit		53914						
ANR	53931	Function	main	1084:0:37204:41594							
ANR	53932	FunctionDef	"main (int argc , char * argv [ ])"		53931	0					
ANR	53933	CompoundStatement		1085:0:37237:41594	53931	0					
ANR	53934	IdentifierDeclStatement	int c ;	1086:4:37243:37248	53931	0	True				
ANR	53935	IdentifierDecl	c		53931	0					
ANR	53936	IdentifierDeclType	int		53931	0					
ANR	53937	Identifier	c		53931	1					
ANR	53938	IdentifierDeclStatement	int do_daemonize = 1 ;	1087:4:37254:37274	53931	1	True				
ANR	53939	IdentifierDecl	do_daemonize = 1		53931	0					
ANR	53940	IdentifierDeclType	int		53931	0					
ANR	53941	Identifier	do_daemonize		53931	1					
ANR	53942	AssignmentExpression	do_daemonize = 1		53931	2		=			
ANR	53943	Identifier	do_daemonize		53931	0					
ANR	53944	PrimaryExpression	1		53931	1					
ANR	53945	IdentifierDeclStatement	int want_session_info = 1 ;	1088:4:37280:37305	53931	2	True				
ANR	53946	IdentifierDecl	want_session_info = 1		53931	0					
ANR	53947	IdentifierDeclType	int		53931	0					
ANR	53948	Identifier	want_session_info		53931	1					
ANR	53949	AssignmentExpression	want_session_info = 1		53931	2		=			
ANR	53950	Identifier	want_session_info		53931	0					
ANR	53951	PrimaryExpression	1		53931	1					
ANR	53952	IdentifierDeclStatement	struct sigaction act ;	1089:4:37311:37331	53931	3	True				
ANR	53953	IdentifierDecl	act		53931	0					
ANR	53954	IdentifierDeclType	struct sigaction		53931	0					
ANR	53955	Identifier	act		53931	1					
ANR	53956	IdentifierDeclStatement	gboolean own_socket = TRUE ;	1090:4:37337:37363	53931	4	True				
ANR	53957	IdentifierDecl	own_socket = TRUE		53931	0					
ANR	53958	IdentifierDeclType	gboolean		53931	0					
ANR	53959	Identifier	own_socket		53931	1					
ANR	53960	AssignmentExpression	own_socket = TRUE		53931	2		=			
ANR	53961	Identifier	TRUE		53931	0					
ANR	53962	Identifier	TRUE		53931	1					
ANR	53963	ForStatement	for ( ; ; )		53931	5					
ANR	53964	CompoundStatement		8:13:141:141	53931	0					
ANR	53965	IfStatement	"if ( - 1 == ( c = getopt ( argc , argv , ""-dhxXfos:u:S:"" ) ) )"		53931	0					
ANR	53966	Condition	"- 1 == ( c = getopt ( argc , argv , ""-dhxXfos:u:S:"" ) )"	1093:12:37393:37439	53931	0	True				
ANR	53967	EqualityExpression	"- 1 == ( c = getopt ( argc , argv , ""-dhxXfos:u:S:"" ) )"		53931	0		==			
ANR	53968	UnaryOperationExpression	- 1		53931	0					
ANR	53969	UnaryOperator	-		53931	0					
ANR	53970	PrimaryExpression	1		53931	1					
ANR	53971	AssignmentExpression	"c = getopt ( argc , argv , ""-dhxXfos:u:S:"" )"		53931	1		=			
ANR	53972	Identifier	c		53931	0					
ANR	53973	CallExpression	"getopt ( argc , argv , ""-dhxXfos:u:S:"" )"		53931	1					
ANR	53974	Callee	getopt		53931	0					
ANR	53975	Identifier	getopt		53931	0					
ANR	53976	ArgumentList	argc		53931	1					
ANR	53977	Argument	argc		53931	0					
ANR	53978	Identifier	argc		53931	0					
ANR	53979	Argument	argv		53931	1					
ANR	53980	Identifier	argv		53931	0					
ANR	53981	Argument	"""-dhxXfos:u:S:"""		53931	2					
ANR	53982	PrimaryExpression	"""-dhxXfos:u:S:"""		53931	0					
ANR	53983	BreakStatement	break ;	1094:12:37454:37459	53931	1	True				
ANR	53984	SwitchStatement	switch ( c )		53931	1					
ANR	53985	Condition	c	1095:16:37477:37477	53931	0	True				
ANR	53986	Identifier	c		53931	0					
ANR	53987	CompoundStatement		11:19:242:242	53931	1					
ANR	53988	Label	case 'd' :	1096:8:37490:37498	53931	0	True				
ANR	53989	ExpressionStatement	debug ++	1097:12:37512:37519	53931	1	True				
ANR	53990	PostIncDecOperationExpression	debug ++		53931	0					
ANR	53991	Identifier	debug		53931	0					
ANR	53992	IncDec	++		53931	1					
ANR	53993	BreakStatement	break ;	1098:12:37533:37538	53931	2	True				
ANR	53994	Label	case 's' :	1099:8:37548:37556	53931	3	True				
ANR	53995	ExpressionStatement	portdev = optarg	1100:12:37570:37586	53931	4	True				
ANR	53996	AssignmentExpression	portdev = optarg		53931	0		=			
ANR	53997	Identifier	portdev		53931	0					
ANR	53998	Identifier	optarg		53931	1					
ANR	53999	BreakStatement	break ;	1101:12:37600:37605	53931	5	True				
ANR	54000	Label	case 'S' :	1102:8:37615:37623	53931	6	True				
ANR	54001	ExpressionStatement	vdagentd_socket = optarg	1103:12:37637:37661	53931	7	True				
ANR	54002	AssignmentExpression	vdagentd_socket = optarg		53931	0		=			
ANR	54003	Identifier	vdagentd_socket		53931	0					
ANR	54004	Identifier	optarg		53931	1					
ANR	54005	BreakStatement	break ;	1104:12:37675:37680	53931	8	True				
ANR	54006	Label	case 'u' :	1105:8:37690:37698	53931	9	True				
ANR	54007	ExpressionStatement	uinput_device = optarg	1106:12:37712:37734	53931	10	True				
ANR	54008	AssignmentExpression	uinput_device = optarg		53931	0		=			
ANR	54009	Identifier	uinput_device		53931	0					
ANR	54010	Identifier	optarg		53931	1					
ANR	54011	BreakStatement	break ;	1107:12:37748:37753	53931	11	True				
ANR	54012	Label	case 'f' :	1108:8:37763:37771	53931	12	True				
ANR	54013	ExpressionStatement	uinput_fake = 1	1109:12:37785:37800	53931	13	True				
ANR	54014	AssignmentExpression	uinput_fake = 1		53931	0		=			
ANR	54015	Identifier	uinput_fake		53931	0					
ANR	54016	PrimaryExpression	1		53931	1					
ANR	54017	BreakStatement	break ;	1110:12:37814:37819	53931	14	True				
ANR	54018	Label	case 'o' :	1111:8:37829:37837	53931	15	True				
ANR	54019	ExpressionStatement	only_once = 1	1112:12:37851:37864	53931	16	True				
ANR	54020	AssignmentExpression	only_once = 1		53931	0		=			
ANR	54021	Identifier	only_once		53931	0					
ANR	54022	PrimaryExpression	1		53931	1					
ANR	54023	BreakStatement	break ;	1113:12:37878:37883	53931	17	True				
ANR	54024	Label	case 'x' :	1114:8:37893:37901	53931	18	True				
ANR	54025	ExpressionStatement	do_daemonize = 0	1115:12:37915:37931	53931	19	True				
ANR	54026	AssignmentExpression	do_daemonize = 0		53931	0		=			
ANR	54027	Identifier	do_daemonize		53931	0					
ANR	54028	PrimaryExpression	0		53931	1					
ANR	54029	BreakStatement	break ;	1116:12:37945:37950	53931	20	True				
ANR	54030	Label	case 'X' :	1117:8:37960:37968	53931	21	True				
ANR	54031	ExpressionStatement	want_session_info = 0	1118:12:37982:38003	53931	22	True				
ANR	54032	AssignmentExpression	want_session_info = 0		53931	0		=			
ANR	54033	Identifier	want_session_info		53931	0					
ANR	54034	PrimaryExpression	0		53931	1					
ANR	54035	BreakStatement	break ;	1119:12:38017:38022	53931	23	True				
ANR	54036	Label	case 'h' :	1120:8:38032:38040	53931	24	True				
ANR	54037	ExpressionStatement	usage ( stdout )	1121:12:38054:38067	53931	25	True				
ANR	54038	CallExpression	usage ( stdout )		53931	0					
ANR	54039	Callee	usage		53931	0					
ANR	54040	Identifier	usage		53931	0					
ANR	54041	ArgumentList	stdout		53931	1					
ANR	54042	Argument	stdout		53931	0					
ANR	54043	Identifier	stdout		53931	0					
ANR	54044	ReturnStatement	return 0 ;	1122:12:38081:38089	53931	26	True				
ANR	54045	PrimaryExpression	0		53931	0					
ANR	54046	Label	default :	1123:8:38099:38106	53931	27	True				
ANR	54047	Identifier	default		53931	0					
ANR	54048	ExpressionStatement	"fputs ( ""\\n"" , stderr )"	1124:12:38120:38139	53931	28	True				
ANR	54049	CallExpression	"fputs ( ""\\n"" , stderr )"		53931	0					
ANR	54050	Callee	fputs		53931	0					
ANR	54051	Identifier	fputs		53931	0					
ANR	54052	ArgumentList	"""\\n"""		53931	1					
ANR	54053	Argument	"""\\n"""		53931	0					
ANR	54054	PrimaryExpression	"""\\n"""		53931	0					
ANR	54055	Argument	stderr		53931	1					
ANR	54056	Identifier	stderr		53931	0					
ANR	54057	ExpressionStatement	usage ( stderr )	1125:12:38153:38166	53931	29	True				
ANR	54058	CallExpression	usage ( stderr )		53931	0					
ANR	54059	Callee	usage		53931	0					
ANR	54060	Identifier	usage		53931	0					
ANR	54061	ArgumentList	stderr		53931	1					
ANR	54062	Argument	stderr		53931	0					
ANR	54063	Identifier	stderr		53931	0					
ANR	54064	ReturnStatement	return 1 ;	1126:12:38180:38188	53931	30	True				
ANR	54065	PrimaryExpression	1		53931	0					
ANR	54066	ExpressionStatement	"memset ( & act , 0 , sizeof ( act ) )"	1130:4:38211:38239	53931	6	True				
ANR	54067	CallExpression	"memset ( & act , 0 , sizeof ( act ) )"		53931	0					
ANR	54068	Callee	memset		53931	0					
ANR	54069	Identifier	memset		53931	0					
ANR	54070	ArgumentList	& act		53931	1					
ANR	54071	Argument	& act		53931	0					
ANR	54072	UnaryOperationExpression	& act		53931	0					
ANR	54073	UnaryOperator	&		53931	0					
ANR	54074	Identifier	act		53931	1					
ANR	54075	Argument	0		53931	1					
ANR	54076	PrimaryExpression	0		53931	0					
ANR	54077	Argument	sizeof ( act )		53931	2					
ANR	54078	SizeofExpression	sizeof ( act )		53931	0					
ANR	54079	Sizeof	sizeof		53931	0					
ANR	54080	SizeofOperand	act		53931	1					
ANR	54081	ExpressionStatement	act . sa_flags = SA_RESTART	1131:4:38245:38270	53931	7	True				
ANR	54082	AssignmentExpression	act . sa_flags = SA_RESTART		53931	0		=			
ANR	54083	MemberAccess	act . sa_flags		53931	0					
ANR	54084	Identifier	act		53931	0					
ANR	54085	Identifier	sa_flags		53931	1					
ANR	54086	Identifier	SA_RESTART		53931	1					
ANR	54087	ExpressionStatement	act . sa_handler = quit_handler	1132:4:38276:38305	53931	8	True				
ANR	54088	AssignmentExpression	act . sa_handler = quit_handler		53931	0		=			
ANR	54089	MemberAccess	act . sa_handler		53931	0					
ANR	54090	Identifier	act		53931	0					
ANR	54091	Identifier	sa_handler		53931	1					
ANR	54092	Identifier	quit_handler		53931	1					
ANR	54093	ExpressionStatement	"sigaction ( SIGINT , & act , NULL )"	1133:4:38311:38340	53931	9	True				
ANR	54094	CallExpression	"sigaction ( SIGINT , & act , NULL )"		53931	0					
ANR	54095	Callee	sigaction		53931	0					
ANR	54096	Identifier	sigaction		53931	0					
ANR	54097	ArgumentList	SIGINT		53931	1					
ANR	54098	Argument	SIGINT		53931	0					
ANR	54099	Identifier	SIGINT		53931	0					
ANR	54100	Argument	& act		53931	1					
ANR	54101	UnaryOperationExpression	& act		53931	0					
ANR	54102	UnaryOperator	&		53931	0					
ANR	54103	Identifier	act		53931	1					
ANR	54104	Argument	NULL		53931	2					
ANR	54105	Identifier	NULL		53931	0					
ANR	54106	ExpressionStatement	"sigaction ( SIGHUP , & act , NULL )"	1134:4:38346:38375	53931	10	True				
ANR	54107	CallExpression	"sigaction ( SIGHUP , & act , NULL )"		53931	0					
ANR	54108	Callee	sigaction		53931	0					
ANR	54109	Identifier	sigaction		53931	0					
ANR	54110	ArgumentList	SIGHUP		53931	1					
ANR	54111	Argument	SIGHUP		53931	0					
ANR	54112	Identifier	SIGHUP		53931	0					
ANR	54113	Argument	& act		53931	1					
ANR	54114	UnaryOperationExpression	& act		53931	0					
ANR	54115	UnaryOperator	&		53931	0					
ANR	54116	Identifier	act		53931	1					
ANR	54117	Argument	NULL		53931	2					
ANR	54118	Identifier	NULL		53931	0					
ANR	54119	ExpressionStatement	"sigaction ( SIGTERM , & act , NULL )"	1135:4:38381:38411	53931	11	True				
ANR	54120	CallExpression	"sigaction ( SIGTERM , & act , NULL )"		53931	0					
ANR	54121	Callee	sigaction		53931	0					
ANR	54122	Identifier	sigaction		53931	0					
ANR	54123	ArgumentList	SIGTERM		53931	1					
ANR	54124	Argument	SIGTERM		53931	0					
ANR	54125	Identifier	SIGTERM		53931	0					
ANR	54126	Argument	& act		53931	1					
ANR	54127	UnaryOperationExpression	& act		53931	0					
ANR	54128	UnaryOperator	&		53931	0					
ANR	54129	Identifier	act		53931	1					
ANR	54130	Argument	NULL		53931	2					
ANR	54131	Identifier	NULL		53931	0					
ANR	54132	ExpressionStatement	"sigaction ( SIGQUIT , & act , NULL )"	1136:4:38417:38447	53931	12	True				
ANR	54133	CallExpression	"sigaction ( SIGQUIT , & act , NULL )"		53931	0					
ANR	54134	Callee	sigaction		53931	0					
ANR	54135	Identifier	sigaction		53931	0					
ANR	54136	ArgumentList	SIGQUIT		53931	1					
ANR	54137	Argument	SIGQUIT		53931	0					
ANR	54138	Identifier	SIGQUIT		53931	0					
ANR	54139	Argument	& act		53931	1					
ANR	54140	UnaryOperationExpression	& act		53931	0					
ANR	54141	UnaryOperator	&		53931	0					
ANR	54142	Identifier	act		53931	1					
ANR	54143	Argument	NULL		53931	2					
ANR	54144	Identifier	NULL		53931	0					
ANR	54145	ExpressionStatement	"openlog ( ""spice-vdagentd"" , do_daemonize ? 0 : LOG_PERROR , LOG_USER )"	1138:4:38454:38520	53931	13	True				
ANR	54146	CallExpression	"openlog ( ""spice-vdagentd"" , do_daemonize ? 0 : LOG_PERROR , LOG_USER )"		53931	0					
ANR	54147	Callee	openlog		53931	0					
ANR	54148	Identifier	openlog		53931	0					
ANR	54149	ArgumentList	"""spice-vdagentd"""		53931	1					
ANR	54150	Argument	"""spice-vdagentd"""		53931	0					
ANR	54151	PrimaryExpression	"""spice-vdagentd"""		53931	0					
ANR	54152	Argument	do_daemonize ? 0 : LOG_PERROR		53931	1					
ANR	54153	ConditionalExpression	do_daemonize ? 0 : LOG_PERROR		53931	0					
ANR	54154	Condition	do_daemonize		53931	0					
ANR	54155	Identifier	do_daemonize		53931	0					
ANR	54156	PrimaryExpression	0		53931	1					
ANR	54157	Identifier	LOG_PERROR		53931	2					
ANR	54158	Argument	LOG_USER		53931	2					
ANR	54159	Identifier	LOG_USER		53931	0					
ANR	54160	IdentifierDeclStatement	int n_fds ;	1142:4:38620:38629	53931	14	True				
ANR	54161	IdentifierDecl	n_fds		53931	0					
ANR	54162	IdentifierDeclType	int		53931	0					
ANR	54163	Identifier	n_fds		53931	1					
ANR	54164	ExpressionStatement	n_fds = sd_listen_fds ( 0 )	1144:4:38697:38721	53931	15	True				
ANR	54165	AssignmentExpression	n_fds = sd_listen_fds ( 0 )		53931	0		=			
ANR	54166	Identifier	n_fds		53931	0					
ANR	54167	CallExpression	sd_listen_fds ( 0 )		53931	1					
ANR	54168	Callee	sd_listen_fds		53931	0					
ANR	54169	Identifier	sd_listen_fds		53931	0					
ANR	54170	ArgumentList	0		53931	1					
ANR	54171	Argument	0		53931	0					
ANR	54172	PrimaryExpression	0		53931	0					
ANR	54173	IfStatement	if ( n_fds > 1 )		53931	16					
ANR	54174	Condition	n_fds > 1	1145:8:38731:38739	53931	0	True				
ANR	54175	RelationalExpression	n_fds > 1		53931	0		>			
ANR	54176	Identifier	n_fds		53931	0					
ANR	54177	PrimaryExpression	1		53931	1					
ANR	54178	CompoundStatement		61:19:1504:1504	53931	1					
ANR	54179	ExpressionStatement	"syslog ( LOG_CRIT , ""Received too many sockets from systemd (%i)"" , n_fds )"	1146:8:38752:38822	53931	0	True				
ANR	54180	CallExpression	"syslog ( LOG_CRIT , ""Received too many sockets from systemd (%i)"" , n_fds )"		53931	0					
ANR	54181	Callee	syslog		53931	0					
ANR	54182	Identifier	syslog		53931	0					
ANR	54183	ArgumentList	LOG_CRIT		53931	1					
ANR	54184	Argument	LOG_CRIT		53931	0					
ANR	54185	Identifier	LOG_CRIT		53931	0					
ANR	54186	Argument	"""Received too many sockets from systemd (%i)"""		53931	1					
ANR	54187	PrimaryExpression	"""Received too many sockets from systemd (%i)"""		53931	0					
ANR	54188	Argument	n_fds		53931	2					
ANR	54189	Identifier	n_fds		53931	0					
ANR	54190	ReturnStatement	return 1 ;	1147:8:38832:38840	53931	1	True				
ANR	54191	PrimaryExpression	1		53931	0					
ANR	54192	ElseStatement	else		53931	0					
ANR	54193	IfStatement	if ( n_fds == 1 )		53931	0					
ANR	54194	Condition	n_fds == 1	1148:15:38857:38866	53931	0	True				
ANR	54195	EqualityExpression	n_fds == 1		53931	0		==			
ANR	54196	Identifier	n_fds		53931	0					
ANR	54197	PrimaryExpression	1		53931	1					
ANR	54198	CompoundStatement		64:27:1631:1631	53931	1					
ANR	54199	ExpressionStatement	"server = udscs_create_server_for_fd ( SD_LISTEN_FDS_START , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"	1149:8:38879:39213	53931	0	True				
ANR	54200	AssignmentExpression	"server = udscs_create_server_for_fd ( SD_LISTEN_FDS_START , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		53931	0		=			
ANR	54201	Identifier	server		53931	0					
ANR	54202	CallExpression	"udscs_create_server_for_fd ( SD_LISTEN_FDS_START , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		53931	1					
ANR	54203	Callee	udscs_create_server_for_fd		53931	0					
ANR	54204	Identifier	udscs_create_server_for_fd		53931	0					
ANR	54205	ArgumentList	SD_LISTEN_FDS_START		53931	1					
ANR	54206	Argument	SD_LISTEN_FDS_START		53931	0					
ANR	54207	Identifier	SD_LISTEN_FDS_START		53931	0					
ANR	54208	Argument	agent_connect		53931	1					
ANR	54209	Identifier	agent_connect		53931	0					
ANR	54210	Argument	agent_read_complete		53931	2					
ANR	54211	Identifier	agent_read_complete		53931	0					
ANR	54212	Argument	agent_disconnect		53931	3					
ANR	54213	Identifier	agent_disconnect		53931	0					
ANR	54214	Argument	vdagentd_messages		53931	4					
ANR	54215	Identifier	vdagentd_messages		53931	0					
ANR	54216	Argument	VDAGENTD_NO_MESSAGES		53931	5					
ANR	54217	Identifier	VDAGENTD_NO_MESSAGES		53931	0					
ANR	54218	Argument	debug		53931	6					
ANR	54219	Identifier	debug		53931	0					
ANR	54220	ExpressionStatement	own_socket = FALSE	1154:8:39223:39241	53931	1	True				
ANR	54221	AssignmentExpression	own_socket = FALSE		53931	0		=			
ANR	54222	Identifier	own_socket		53931	0					
ANR	54223	Identifier	FALSE		53931	1					
ANR	54224	ElseStatement	else		53931	0					
ANR	54225	CompoundStatement		74:4:2128:2128	53931	0					
ANR	54226	ExpressionStatement	"server = udscs_create_server ( vdagentd_socket , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"	1159:8:39376:39634	53931	0	True				
ANR	54227	AssignmentExpression	"server = udscs_create_server ( vdagentd_socket , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		53931	0		=			
ANR	54228	Identifier	server		53931	0					
ANR	54229	CallExpression	"udscs_create_server ( vdagentd_socket , agent_connect , agent_read_complete , agent_disconnect , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		53931	1					
ANR	54230	Callee	udscs_create_server		53931	0					
ANR	54231	Identifier	udscs_create_server		53931	0					
ANR	54232	ArgumentList	vdagentd_socket		53931	1					
ANR	54233	Argument	vdagentd_socket		53931	0					
ANR	54234	Identifier	vdagentd_socket		53931	0					
ANR	54235	Argument	agent_connect		53931	1					
ANR	54236	Identifier	agent_connect		53931	0					
ANR	54237	Argument	agent_read_complete		53931	2					
ANR	54238	Identifier	agent_read_complete		53931	0					
ANR	54239	Argument	agent_disconnect		53931	3					
ANR	54240	Identifier	agent_disconnect		53931	0					
ANR	54241	Argument	vdagentd_messages		53931	4					
ANR	54242	Identifier	vdagentd_messages		53931	0					
ANR	54243	Argument	VDAGENTD_NO_MESSAGES		53931	5					
ANR	54244	Identifier	VDAGENTD_NO_MESSAGES		53931	0					
ANR	54245	Argument	debug		53931	6					
ANR	54246	Identifier	debug		53931	0					
ANR	54247	IfStatement	if ( ! server )		53931	17					
ANR	54248	Condition	! server	1165:8:39651:39657	53931	0	True				
ANR	54249	UnaryOperationExpression	! server		53931	0					
ANR	54250	UnaryOperator	!		53931	0					
ANR	54251	Identifier	server		53931	1					
ANR	54252	CompoundStatement		81:17:2422:2422	53931	1					
ANR	54253	IfStatement	if ( errno == EADDRINUSE )		53931	0					
ANR	54254	Condition	errno == EADDRINUSE	1166:12:39674:39692	53931	0	True				
ANR	54255	EqualityExpression	errno == EADDRINUSE		53931	0		==			
ANR	54256	Identifier	errno		53931	0					
ANR	54257	Identifier	EADDRINUSE		53931	1					
ANR	54258	CompoundStatement		82:33:2457:2457	53931	1					
ANR	54259	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal the server socket %s exists already. Delete it?"" , vdagentd_socket )"	1167:12:39709:39818	53931	0	True				
ANR	54260	CallExpression	"syslog ( LOG_CRIT , ""Fatal the server socket %s exists already. Delete it?"" , vdagentd_socket )"		53931	0					
ANR	54261	Callee	syslog		53931	0					
ANR	54262	Identifier	syslog		53931	0					
ANR	54263	ArgumentList	LOG_CRIT		53931	1					
ANR	54264	Argument	LOG_CRIT		53931	0					
ANR	54265	Identifier	LOG_CRIT		53931	0					
ANR	54266	Argument	"""Fatal the server socket %s exists already. Delete it?"""		53931	1					
ANR	54267	PrimaryExpression	"""Fatal the server socket %s exists already. Delete it?"""		53931	0					
ANR	54268	Argument	vdagentd_socket		53931	2					
ANR	54269	Identifier	vdagentd_socket		53931	0					
ANR	54270	ElseStatement	else		53931	0					
ANR	54271	IfStatement	if ( errno == ENOMEM )		53931	0					
ANR	54272	Condition	errno == ENOMEM	1169:19:39839:39853	53931	0	True				
ANR	54273	EqualityExpression	errno == ENOMEM		53931	0		==			
ANR	54274	Identifier	errno		53931	0					
ANR	54275	Identifier	ENOMEM		53931	1					
ANR	54276	CompoundStatement		85:36:2618:2618	53931	1					
ANR	54277	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal could not allocate memory for udscs server"" )"	1170:12:39870:39938	53931	0	True				
ANR	54278	CallExpression	"syslog ( LOG_CRIT , ""Fatal could not allocate memory for udscs server"" )"		53931	0					
ANR	54279	Callee	syslog		53931	0					
ANR	54280	Identifier	syslog		53931	0					
ANR	54281	ArgumentList	LOG_CRIT		53931	1					
ANR	54282	Argument	LOG_CRIT		53931	0					
ANR	54283	Identifier	LOG_CRIT		53931	0					
ANR	54284	Argument	"""Fatal could not allocate memory for udscs server"""		53931	1					
ANR	54285	PrimaryExpression	"""Fatal could not allocate memory for udscs server"""		53931	0					
ANR	54286	ElseStatement	else		53931	0					
ANR	54287	CompoundStatement		87:15:2717:2717	53931	0					
ANR	54288	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal could not create the server socket %s: %m"" , vdagentd_socket )"	1172:12:39969:40072	53931	0	True				
ANR	54289	CallExpression	"syslog ( LOG_CRIT , ""Fatal could not create the server socket %s: %m"" , vdagentd_socket )"		53931	0					
ANR	54290	Callee	syslog		53931	0					
ANR	54291	Identifier	syslog		53931	0					
ANR	54292	ArgumentList	LOG_CRIT		53931	1					
ANR	54293	Argument	LOG_CRIT		53931	0					
ANR	54294	Identifier	LOG_CRIT		53931	0					
ANR	54295	Argument	"""Fatal could not create the server socket %s: %m"""		53931	1					
ANR	54296	PrimaryExpression	"""Fatal could not create the server socket %s: %m"""		53931	0					
ANR	54297	Argument	vdagentd_socket		53931	2					
ANR	54298	Identifier	vdagentd_socket		53931	0					
ANR	54299	ReturnStatement	return 1 ;	1175:8:40092:40100	53931	1	True				
ANR	54300	PrimaryExpression	1		53931	0					
ANR	54301	IfStatement	if ( own_socket )		53931	18					
ANR	54302	Condition	own_socket	1179:8:40195:40204	53931	0	True				
ANR	54303	Identifier	own_socket		53931	0					
ANR	54304	CompoundStatement		95:20:2969:2969	53931	1					
ANR	54305	IfStatement	"if ( chmod ( vdagentd_socket , 0666 ) )"		53931	0					
ANR	54306	Condition	"chmod ( vdagentd_socket , 0666 )"	1180:12:40221:40248	53931	0	True				
ANR	54307	CallExpression	"chmod ( vdagentd_socket , 0666 )"		53931	0					
ANR	54308	Callee	chmod		53931	0					
ANR	54309	Identifier	chmod		53931	0					
ANR	54310	ArgumentList	vdagentd_socket		53931	1					
ANR	54311	Argument	vdagentd_socket		53931	0					
ANR	54312	Identifier	vdagentd_socket		53931	0					
ANR	54313	Argument	0666		53931	1					
ANR	54314	PrimaryExpression	0666		53931	0					
ANR	54315	CompoundStatement		96:42:3013:3013	53931	1					
ANR	54316	ExpressionStatement	"syslog ( LOG_CRIT , ""Fatal could not change permissions on %s: %m"" , vdagentd_socket )"	1181:12:40265:40365	53931	0	True				
ANR	54317	CallExpression	"syslog ( LOG_CRIT , ""Fatal could not change permissions on %s: %m"" , vdagentd_socket )"		53931	0					
ANR	54318	Callee	syslog		53931	0					
ANR	54319	Identifier	syslog		53931	0					
ANR	54320	ArgumentList	LOG_CRIT		53931	1					
ANR	54321	Argument	LOG_CRIT		53931	0					
ANR	54322	Identifier	LOG_CRIT		53931	0					
ANR	54323	Argument	"""Fatal could not change permissions on %s: %m"""		53931	1					
ANR	54324	PrimaryExpression	"""Fatal could not change permissions on %s: %m"""		53931	0					
ANR	54325	Argument	vdagentd_socket		53931	2					
ANR	54326	Identifier	vdagentd_socket		53931	0					
ANR	54327	ExpressionStatement	udscs_destroy_server ( server )	1183:12:40379:40407	53931	1	True				
ANR	54328	CallExpression	udscs_destroy_server ( server )		53931	0					
ANR	54329	Callee	udscs_destroy_server		53931	0					
ANR	54330	Identifier	udscs_destroy_server		53931	0					
ANR	54331	ArgumentList	server		53931	1					
ANR	54332	Argument	server		53931	0					
ANR	54333	Identifier	server		53931	0					
ANR	54334	ReturnStatement	return 1 ;	1184:12:40421:40429	53931	2	True				
ANR	54335	PrimaryExpression	1		53931	0					
ANR	54336	IfStatement	if ( do_daemonize )		53931	19					
ANR	54337	Condition	do_daemonize	1188:8:40456:40467	53931	0	True				
ANR	54338	Identifier	do_daemonize		53931	0					
ANR	54339	ExpressionStatement	daemonize ( )	1189:8:40478:40489	53931	1	True				
ANR	54340	CallExpression	daemonize ( )		53931	0					
ANR	54341	Callee	daemonize		53931	0					
ANR	54342	Identifier	daemonize		53931	0					
ANR	54343	ArgumentList			53931	1					
ANR	54344	ExpressionStatement	"uinput = vdagentd_uinput_create ( uinput_device , 1024 , 768 , NULL , 0 , debug > 1 , uinput_fake )"	1192:4:40522:40648	53931	20	True				
ANR	54345	AssignmentExpression	"uinput = vdagentd_uinput_create ( uinput_device , 1024 , 768 , NULL , 0 , debug > 1 , uinput_fake )"		53931	0		=			
ANR	54346	Identifier	uinput		53931	0					
ANR	54347	CallExpression	"vdagentd_uinput_create ( uinput_device , 1024 , 768 , NULL , 0 , debug > 1 , uinput_fake )"		53931	1					
ANR	54348	Callee	vdagentd_uinput_create		53931	0					
ANR	54349	Identifier	vdagentd_uinput_create		53931	0					
ANR	54350	ArgumentList	uinput_device		53931	1					
ANR	54351	Argument	uinput_device		53931	0					
ANR	54352	Identifier	uinput_device		53931	0					
ANR	54353	Argument	1024		53931	1					
ANR	54354	PrimaryExpression	1024		53931	0					
ANR	54355	Argument	768		53931	2					
ANR	54356	PrimaryExpression	768		53931	0					
ANR	54357	Argument	NULL		53931	3					
ANR	54358	Identifier	NULL		53931	0					
ANR	54359	Argument	0		53931	4					
ANR	54360	PrimaryExpression	0		53931	0					
ANR	54361	Argument	debug > 1		53931	5					
ANR	54362	RelationalExpression	debug > 1		53931	0		>			
ANR	54363	Identifier	debug		53931	0					
ANR	54364	PrimaryExpression	1		53931	1					
ANR	54365	Argument	uinput_fake		53931	6					
ANR	54366	Identifier	uinput_fake		53931	0					
ANR	54367	IfStatement	if ( ! uinput )		53931	21					
ANR	54368	Condition	! uinput	1194:8:40658:40664	53931	0	True				
ANR	54369	UnaryOperationExpression	! uinput		53931	0					
ANR	54370	UnaryOperator	!		53931	0					
ANR	54371	Identifier	uinput		53931	1					
ANR	54372	CompoundStatement		110:17:3429:3429	53931	1					
ANR	54373	ExpressionStatement	udscs_destroy_server ( server )	1195:8:40677:40705	53931	0	True				
ANR	54374	CallExpression	udscs_destroy_server ( server )		53931	0					
ANR	54375	Callee	udscs_destroy_server		53931	0					
ANR	54376	Identifier	udscs_destroy_server		53931	0					
ANR	54377	ArgumentList	server		53931	1					
ANR	54378	Argument	server		53931	0					
ANR	54379	Identifier	server		53931	0					
ANR	54380	ReturnStatement	return 1 ;	1196:8:40715:40723	53931	1	True				
ANR	54381	PrimaryExpression	1		53931	0					
ANR	54382	IfStatement	if ( want_session_info )		53931	22					
ANR	54383	Condition	want_session_info	1200:8:40747:40763	53931	0	True				
ANR	54384	Identifier	want_session_info		53931	0					
ANR	54385	ExpressionStatement	session_info = session_info_create ( debug )	1201:8:40774:40815	53931	1	True				
ANR	54386	AssignmentExpression	session_info = session_info_create ( debug )		53931	0		=			
ANR	54387	Identifier	session_info		53931	0					
ANR	54388	CallExpression	session_info_create ( debug )		53931	1					
ANR	54389	Callee	session_info_create		53931	0					
ANR	54390	Identifier	session_info_create		53931	0					
ANR	54391	ArgumentList	debug		53931	1					
ANR	54392	Argument	debug		53931	0					
ANR	54393	Identifier	debug		53931	0					
ANR	54394	IfStatement	if ( ! session_info )		53931	23					
ANR	54395	Condition	! session_info	1202:8:40825:40837	53931	0	True				
ANR	54396	UnaryOperationExpression	! session_info		53931	0					
ANR	54397	UnaryOperator	!		53931	0					
ANR	54398	Identifier	session_info		53931	1					
ANR	54399	ExpressionStatement	"syslog ( LOG_WARNING , ""no session info, max 1 session agent allowed"" )"	1203:8:40848:40915	53931	1	True				
ANR	54400	CallExpression	"syslog ( LOG_WARNING , ""no session info, max 1 session agent allowed"" )"		53931	0					
ANR	54401	Callee	syslog		53931	0					
ANR	54402	Identifier	syslog		53931	0					
ANR	54403	ArgumentList	LOG_WARNING		53931	1					
ANR	54404	Argument	LOG_WARNING		53931	0					
ANR	54405	Identifier	LOG_WARNING		53931	0					
ANR	54406	Argument	"""no session info, max 1 session agent allowed"""		53931	1					
ANR	54407	PrimaryExpression	"""no session info, max 1 session agent allowed"""		53931	0					
ANR	54408	ExpressionStatement	"active_xfers = g_hash_table_new ( g_direct_hash , g_direct_equal )"	1205:4:40922:40984	53931	24	True				
ANR	54409	AssignmentExpression	"active_xfers = g_hash_table_new ( g_direct_hash , g_direct_equal )"		53931	0		=			
ANR	54410	Identifier	active_xfers		53931	0					
ANR	54411	CallExpression	"g_hash_table_new ( g_direct_hash , g_direct_equal )"		53931	1					
ANR	54412	Callee	g_hash_table_new		53931	0					
ANR	54413	Identifier	g_hash_table_new		53931	0					
ANR	54414	ArgumentList	g_direct_hash		53931	1					
ANR	54415	Argument	g_direct_hash		53931	0					
ANR	54416	Identifier	g_direct_hash		53931	0					
ANR	54417	Argument	g_direct_equal		53931	1					
ANR	54418	Identifier	g_direct_equal		53931	0					
ANR	54419	ExpressionStatement	main_loop ( )	1206:4:40990:41001	53931	25	True				
ANR	54420	CallExpression	main_loop ( )		53931	0					
ANR	54421	Callee	main_loop		53931	0					
ANR	54422	Identifier	main_loop		53931	0					
ANR	54423	ArgumentList			53931	1					
ANR	54424	ExpressionStatement	release_clipboards ( )	1208:4:41008:41028	53931	26	True				
ANR	54425	CallExpression	release_clipboards ( )		53931	0					
ANR	54426	Callee	release_clipboards		53931	0					
ANR	54427	Identifier	release_clipboards		53931	0					
ANR	54428	ArgumentList			53931	1					
ANR	54429	ExpressionStatement	vdagentd_uinput_destroy ( & uinput )	1210:4:41035:41067	53931	27	True				
ANR	54430	CallExpression	vdagentd_uinput_destroy ( & uinput )		53931	0					
ANR	54431	Callee	vdagentd_uinput_destroy		53931	0					
ANR	54432	Identifier	vdagentd_uinput_destroy		53931	0					
ANR	54433	ArgumentList	& uinput		53931	1					
ANR	54434	Argument	& uinput		53931	0					
ANR	54435	UnaryOperationExpression	& uinput		53931	0					
ANR	54436	UnaryOperator	&		53931	0					
ANR	54437	Identifier	uinput		53931	1					
ANR	54438	ExpressionStatement	vdagent_virtio_port_flush ( & virtio_port )	1211:4:41073:41112	53931	28	True				
ANR	54439	CallExpression	vdagent_virtio_port_flush ( & virtio_port )		53931	0					
ANR	54440	Callee	vdagent_virtio_port_flush		53931	0					
ANR	54441	Identifier	vdagent_virtio_port_flush		53931	0					
ANR	54442	ArgumentList	& virtio_port		53931	1					
ANR	54443	Argument	& virtio_port		53931	0					
ANR	54444	UnaryOperationExpression	& virtio_port		53931	0					
ANR	54445	UnaryOperator	&		53931	0					
ANR	54446	Identifier	virtio_port		53931	1					
ANR	54447	ExpressionStatement	vdagent_virtio_port_destroy ( & virtio_port )	1212:4:41118:41159	53931	29	True				
ANR	54448	CallExpression	vdagent_virtio_port_destroy ( & virtio_port )		53931	0					
ANR	54449	Callee	vdagent_virtio_port_destroy		53931	0					
ANR	54450	Identifier	vdagent_virtio_port_destroy		53931	0					
ANR	54451	ArgumentList	& virtio_port		53931	1					
ANR	54452	Argument	& virtio_port		53931	0					
ANR	54453	UnaryOperationExpression	& virtio_port		53931	0					
ANR	54454	UnaryOperator	&		53931	0					
ANR	54455	Identifier	virtio_port		53931	1					
ANR	54456	ExpressionStatement	session_info_destroy ( session_info )	1213:4:41165:41199	53931	30	True				
ANR	54457	CallExpression	session_info_destroy ( session_info )		53931	0					
ANR	54458	Callee	session_info_destroy		53931	0					
ANR	54459	Identifier	session_info_destroy		53931	0					
ANR	54460	ArgumentList	session_info		53931	1					
ANR	54461	Argument	session_info		53931	0					
ANR	54462	Identifier	session_info		53931	0					
ANR	54463	ExpressionStatement	udscs_destroy_server ( server )	1214:4:41205:41233	53931	31	True				
ANR	54464	CallExpression	udscs_destroy_server ( server )		53931	0					
ANR	54465	Callee	udscs_destroy_server		53931	0					
ANR	54466	Identifier	udscs_destroy_server		53931	0					
ANR	54467	ArgumentList	server		53931	1					
ANR	54468	Argument	server		53931	0					
ANR	54469	Identifier	server		53931	0					
ANR	54470	IfStatement	if ( own_socket )		53931	32					
ANR	54471	Condition	own_socket	1217:8:41308:41317	53931	0	True				
ANR	54472	Identifier	own_socket		53931	0					
ANR	54473	CompoundStatement		133:20:4082:4082	53931	1					
ANR	54474	IfStatement	if ( unlink ( vdagentd_socket ) != 0 )		53931	0					
ANR	54475	Condition	unlink ( vdagentd_socket ) != 0	1218:12:41334:41361	53931	0	True				
ANR	54476	EqualityExpression	unlink ( vdagentd_socket ) != 0		53931	0		!=			
ANR	54477	CallExpression	unlink ( vdagentd_socket )		53931	0					
ANR	54478	Callee	unlink		53931	0					
ANR	54479	Identifier	unlink		53931	0					
ANR	54480	ArgumentList	vdagentd_socket		53931	1					
ANR	54481	Argument	vdagentd_socket		53931	0					
ANR	54482	Identifier	vdagentd_socket		53931	0					
ANR	54483	PrimaryExpression	0		53931	1					
ANR	54484	ExpressionStatement	"syslog ( LOG_ERR , ""unlink %s: %s"" , vdagentd_socket , strerror ( errno ) )"	1219:12:41376:41442	53931	1	True				
ANR	54485	CallExpression	"syslog ( LOG_ERR , ""unlink %s: %s"" , vdagentd_socket , strerror ( errno ) )"		53931	0					
ANR	54486	Callee	syslog		53931	0					
ANR	54487	Identifier	syslog		53931	0					
ANR	54488	ArgumentList	LOG_ERR		53931	1					
ANR	54489	Argument	LOG_ERR		53931	0					
ANR	54490	Identifier	LOG_ERR		53931	0					
ANR	54491	Argument	"""unlink %s: %s"""		53931	1					
ANR	54492	PrimaryExpression	"""unlink %s: %s"""		53931	0					
ANR	54493	Argument	vdagentd_socket		53931	2					
ANR	54494	Identifier	vdagentd_socket		53931	0					
ANR	54495	Argument	strerror ( errno )		53931	3					
ANR	54496	CallExpression	strerror ( errno )		53931	0					
ANR	54497	Callee	strerror		53931	0					
ANR	54498	Identifier	strerror		53931	0					
ANR	54499	ArgumentList	errno		53931	1					
ANR	54500	Argument	errno		53931	0					
ANR	54501	Identifier	errno		53931	0					
ANR	54502	ExpressionStatement	"syslog ( LOG_INFO , ""vdagentd quitting, returning status %d"" , retval )"	1221:4:41454:41520	53931	33	True				
ANR	54503	CallExpression	"syslog ( LOG_INFO , ""vdagentd quitting, returning status %d"" , retval )"		53931	0					
ANR	54504	Callee	syslog		53931	0					
ANR	54505	Identifier	syslog		53931	0					
ANR	54506	ArgumentList	LOG_INFO		53931	1					
ANR	54507	Argument	LOG_INFO		53931	0					
ANR	54508	Identifier	LOG_INFO		53931	0					
ANR	54509	Argument	"""vdagentd quitting, returning status %d"""		53931	1					
ANR	54510	PrimaryExpression	"""vdagentd quitting, returning status %d"""		53931	0					
ANR	54511	Argument	retval		53931	2					
ANR	54512	Identifier	retval		53931	0					
ANR	54513	IfStatement	if ( do_daemonize )		53931	34					
ANR	54514	Condition	do_daemonize	1223:8:41531:41542	53931	0	True				
ANR	54515	Identifier	do_daemonize		53931	0					
ANR	54516	ExpressionStatement	unlink ( pidfilename )	1224:8:41553:41572	53931	1	True				
ANR	54517	CallExpression	unlink ( pidfilename )		53931	0					
ANR	54518	Callee	unlink		53931	0					
ANR	54519	Identifier	unlink		53931	0					
ANR	54520	ArgumentList	pidfilename		53931	1					
ANR	54521	Argument	pidfilename		53931	0					
ANR	54522	Identifier	pidfilename		53931	0					
ANR	54523	ReturnStatement	return retval ;	1226:4:41579:41592	53931	35	True				
ANR	54524	Identifier	retval		53931	0					
ANR	54525	ReturnType	int		53931	1					
ANR	54526	Identifier	main		53931	2					
ANR	54527	ParameterList	"int argc , char * argv [ ]"		53931	3					
ANR	54528	Parameter	int argc	1084:9:37213:37220	53931	0	True				
ANR	54529	ParameterType	int		53931	0					
ANR	54530	Identifier	argc		53931	1					
ANR	54531	Parameter	char * argv [ ]	1084:19:37223:37234	53931	1	True				
ANR	54532	ParameterType	char * [ ]		53931	0					
ANR	54533	Identifier	argv		53931	1					
ANR	54534	CFGEntryNode	ENTRY		53931		True				
ANR	54535	CFGExitNode	EXIT		53931		True				
ANR	54536	InfiniteForNode	true		53931		True				
ANR	54537	Symbol	ENOMEM		53931						
ANR	54538	Symbol	g_direct_hash		53931						
ANR	54539	Symbol	LOG_INFO		53931						
ANR	54540	Symbol	stdout		53931						
ANR	54541	Symbol	optarg		53931						
ANR	54542	Symbol	udscs_create_server		53931						
ANR	54543	Symbol	SA_RESTART		53931						
ANR	54544	Symbol	LOG_WARNING		53931						
ANR	54545	Symbol	act . sa_flags		53931						
ANR	54546	Symbol	pidfilename		53931						
ANR	54547	Symbol	SD_LISTEN_FDS_START		53931						
ANR	54548	Symbol	act . sa_handler		53931						
ANR	54549	Symbol	sd_listen_fds		53931						
ANR	54550	Symbol	act		53931						
ANR	54551	Symbol	getopt		53931						
ANR	54552	Symbol	agent_read_complete		53931						
ANR	54553	Symbol	EADDRINUSE		53931						
ANR	54554	Symbol	LOG_ERR		53931						
ANR	54555	Symbol	do_daemonize		53931						
ANR	54556	Symbol	n_fds		53931						
ANR	54557	Symbol	agent_connect		53931						
ANR	54558	Symbol	active_xfers		53931						
ANR	54559	Symbol	errno		53931						
ANR	54560	Symbol	NULL		53931						
ANR	54561	Symbol	session_info		53931						
ANR	54562	Symbol	TRUE		53931						
ANR	54563	Symbol	stderr		53931						
ANR	54564	Symbol	own_socket		53931						
ANR	54565	Symbol	retval		53931						
ANR	54566	Symbol	uinput_device		53931						
ANR	54567	Symbol	strerror		53931						
ANR	54568	Symbol	VDAGENTD_NO_MESSAGES		53931						
ANR	54569	Symbol	want_session_info		53931						
ANR	54570	Symbol	quit_handler		53931						
ANR	54571	Symbol	SIGINT		53931						
ANR	54572	Symbol	& act		53931						
ANR	54573	Symbol	g_direct_equal		53931						
ANR	54574	Symbol	vdagentd_uinput_create		53931						
ANR	54575	Symbol	server		53931						
ANR	54576	Symbol	agent_disconnect		53931						
ANR	54577	Symbol	only_once		53931						
ANR	54578	Symbol	SIGQUIT		53931						
ANR	54579	Symbol	vdagentd_messages		53931						
ANR	54580	Symbol	g_hash_table_new		53931						
ANR	54581	Symbol	argv		53931						
ANR	54582	Symbol	& virtio_port		53931						
ANR	54583	Symbol	portdev		53931						
ANR	54584	Symbol	LOG_PERROR		53931						
ANR	54585	Symbol	uinput		53931						
ANR	54586	Symbol	vdagentd_socket		53931						
ANR	54587	Symbol	chmod		53931						
ANR	54588	Symbol	SIGHUP		53931						
ANR	54589	Symbol	SIGTERM		53931						
ANR	54590	Symbol	argc		53931						
ANR	54591	Symbol	udscs_create_server_for_fd		53931						
ANR	54592	Symbol	c		53931						
ANR	54593	Symbol	debug		53931						
ANR	54594	Symbol	session_info_create		53931						
ANR	54595	Symbol	unlink		53931						
ANR	54596	Symbol	LOG_USER		53931						
ANR	54597	Symbol	uinput_fake		53931						
ANR	54598	Symbol	& uinput		53931						
ANR	54599	Symbol	FALSE		53931						
ANR	54600	Symbol	LOG_CRIT		53931						
