command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	45529	File	data/converged/CVE-2017-15108_vd_agent/uinput.c								
ANR	45530	ClassDef	vdagentd_uinput	36:0:1094:1322							
ANR	45531	DeclStmt									
ANR	45532	Decl							const char	const char *	devname
ANR	45533	DeclStmt									
ANR	45534	Decl							int	int	fd
ANR	45535	DeclStmt									
ANR	45536	Decl							int	int	debug
ANR	45537	DeclStmt									
ANR	45538	Decl							int	int	width
ANR	45539	DeclStmt									
ANR	45540	Decl							int	int	height
ANR	45541	DeclStmt									
ANR	45542	Decl							struct vdagentd_guest_xorg_resolution	struct vdagentd_guest_xorg_resolution *	screen_info
ANR	45543	DeclStmt									
ANR	45544	Decl							int	int	screen_count
ANR	45545	DeclStmt									
ANR	45546	Decl							VDAgentMouseState	VDAgentMouseState	last
ANR	45547	DeclStmt									
ANR	45548	Decl							int	int	fake
ANR	45549	Function	vdagentd_uinput_create	48:0:1326:1941							
ANR	45550	FunctionDef	"vdagentd_uinput_create (const char * devname , int width , int height , struct vdagentd_guest_xorg_resolution * screen_info , int screen_count , int debug , int fake)"		45549	0					
ANR	45551	CompoundStatement		52:0:1520:1941	45549	0					
ANR	45552	IdentifierDeclStatement	struct vdagentd_uinput * uinput ;	53:4:1526:1556	45549	0	True				
ANR	45553	IdentifierDecl	* uinput		45549	0					
ANR	45554	IdentifierDeclType	struct vdagentd_uinput *		45549	0					
ANR	45555	Identifier	uinput		45549	1					
ANR	45556	ExpressionStatement	"uinput = calloc ( 1 , sizeof ( * uinput ) )"	55:4:1563:1598	45549	1	True				
ANR	45557	AssignmentExpression	"uinput = calloc ( 1 , sizeof ( * uinput ) )"		45549	0		=			
ANR	45558	Identifier	uinput		45549	0					
ANR	45559	CallExpression	"calloc ( 1 , sizeof ( * uinput ) )"		45549	1					
ANR	45560	Callee	calloc		45549	0					
ANR	45561	Identifier	calloc		45549	0					
ANR	45562	ArgumentList	1		45549	1					
ANR	45563	Argument	1		45549	0					
ANR	45564	PrimaryExpression	1		45549	0					
ANR	45565	Argument	sizeof ( * uinput )		45549	1					
ANR	45566	SizeofExpression	sizeof ( * uinput )		45549	0					
ANR	45567	Sizeof	sizeof		45549	0					
ANR	45568	UnaryOperationExpression	* uinput		45549	1					
ANR	45569	UnaryOperator	*		45549	0					
ANR	45570	Identifier	uinput		45549	1					
ANR	45571	IfStatement	if ( ! uinput )		45549	2					
ANR	45572	Condition	! uinput	56:8:1608:1614	45549	0	True				
ANR	45573	UnaryOperationExpression	! uinput		45549	0					
ANR	45574	UnaryOperator	!		45549	0					
ANR	45575	Identifier	uinput		45549	1					
ANR	45576	ReturnStatement	return NULL ;	57:8:1625:1636	45549	1	True				
ANR	45577	Identifier	NULL		45549	0					
ANR	45578	ExpressionStatement	uinput -> devname = devname	59:4:1643:1668	45549	3	True				
ANR	45579	AssignmentExpression	uinput -> devname = devname		45549	0		=			
ANR	45580	PtrMemberAccess	uinput -> devname		45549	0					
ANR	45581	Identifier	uinput		45549	0					
ANR	45582	Identifier	devname		45549	1					
ANR	45583	Identifier	devname		45549	1					
ANR	45584	ExpressionStatement	uinput -> fd = - 1	60:4:1674:1694	45549	4	True				
ANR	45585	AssignmentExpression	uinput -> fd = - 1		45549	0		=			
ANR	45586	PtrMemberAccess	uinput -> fd		45549	0					
ANR	45587	Identifier	uinput		45549	0					
ANR	45588	Identifier	fd		45549	1					
ANR	45589	UnaryOperationExpression	- 1		45549	1					
ANR	45590	UnaryOperator	-		45549	0					
ANR	45591	PrimaryExpression	1		45549	1					
ANR	45592	ExpressionStatement	uinput -> debug = debug	61:4:1751:1774	45549	5	True				
ANR	45593	AssignmentExpression	uinput -> debug = debug		45549	0		=			
ANR	45594	PtrMemberAccess	uinput -> debug		45549	0					
ANR	45595	Identifier	uinput		45549	0					
ANR	45596	Identifier	debug		45549	1					
ANR	45597	Identifier	debug		45549	1					
ANR	45598	ExpressionStatement	uinput -> fake = fake	62:4:1780:1802	45549	6	True				
ANR	45599	AssignmentExpression	uinput -> fake = fake		45549	0		=			
ANR	45600	PtrMemberAccess	uinput -> fake		45549	0					
ANR	45601	Identifier	uinput		45549	0					
ANR	45602	Identifier	fake		45549	1					
ANR	45603	Identifier	fake		45549	1					
ANR	45604	ExpressionStatement	"vdagentd_uinput_update_size ( & uinput , width , height , screen_info , screen_count )"	64:4:1809:1919	45549	7	True				
ANR	45605	CallExpression	"vdagentd_uinput_update_size ( & uinput , width , height , screen_info , screen_count )"		45549	0					
ANR	45606	Callee	vdagentd_uinput_update_size		45549	0					
ANR	45607	Identifier	vdagentd_uinput_update_size		45549	0					
ANR	45608	ArgumentList	& uinput		45549	1					
ANR	45609	Argument	& uinput		45549	0					
ANR	45610	UnaryOperationExpression	& uinput		45549	0					
ANR	45611	UnaryOperator	&		45549	0					
ANR	45612	Identifier	uinput		45549	1					
ANR	45613	Argument	width		45549	1					
ANR	45614	Identifier	width		45549	0					
ANR	45615	Argument	height		45549	2					
ANR	45616	Identifier	height		45549	0					
ANR	45617	Argument	screen_info		45549	3					
ANR	45618	Identifier	screen_info		45549	0					
ANR	45619	Argument	screen_count		45549	4					
ANR	45620	Identifier	screen_count		45549	0					
ANR	45621	ReturnStatement	return uinput ;	67:4:1926:1939	45549	8	True				
ANR	45622	Identifier	uinput		45549	0					
ANR	45623	ReturnType	struct vdagentd_uinput *		45549	1					
ANR	45624	Identifier	vdagentd_uinput_create		45549	2					
ANR	45625	ParameterList	"const char * devname , int width , int height , struct vdagentd_guest_xorg_resolution * screen_info , int screen_count , int debug , int fake"		45549	3					
ANR	45626	Parameter	const char * devname	48:47:1373:1391	45549	0	True				
ANR	45627	ParameterType	const char *		45549	0					
ANR	45628	Identifier	devname		45549	1					
ANR	45629	Parameter	int width	49:4:1398:1406	45549	1	True				
ANR	45630	ParameterType	int		45549	0					
ANR	45631	Identifier	width		45549	1					
ANR	45632	Parameter	int height	49:15:1409:1418	45549	2	True				
ANR	45633	ParameterType	int		45549	0					
ANR	45634	Identifier	height		45549	1					
ANR	45635	Parameter	struct vdagentd_guest_xorg_resolution * screen_info	50:4:1425:1474	45549	3	True				
ANR	45636	ParameterType	struct vdagentd_guest_xorg_resolution *		45549	0					
ANR	45637	Identifier	screen_info		45549	1					
ANR	45638	Parameter	int screen_count	50:56:1477:1492	45549	4	True				
ANR	45639	ParameterType	int		45549	0					
ANR	45640	Identifier	screen_count		45549	1					
ANR	45641	Parameter	int debug	51:4:1499:1507	45549	5	True				
ANR	45642	ParameterType	int		45549	0					
ANR	45643	Identifier	debug		45549	1					
ANR	45644	Parameter	int fake	51:15:1510:1517	45549	6	True				
ANR	45645	ParameterType	int		45549	0					
ANR	45646	Identifier	fake		45549	1					
ANR	45647	CFGEntryNode	ENTRY		45549		True				
ANR	45648	CFGExitNode	EXIT		45549		True				
ANR	45649	Symbol	debug		45549						
ANR	45650	Symbol	NULL		45549						
ANR	45651	Symbol	uinput -> devname		45549						
ANR	45652	Symbol	screen_count		45549						
ANR	45653	Symbol	screen_info		45549						
ANR	45654	Symbol	uinput -> fd		45549						
ANR	45655	Symbol	calloc		45549						
ANR	45656	Symbol	uinput -> debug		45549						
ANR	45657	Symbol	* uinput		45549						
ANR	45658	Symbol	uinput		45549						
ANR	45659	Symbol	uinput -> fake		45549						
ANR	45660	Symbol	width		45549						
ANR	45661	Symbol	& uinput		45549						
ANR	45662	Symbol	devname		45549						
ANR	45663	Symbol	fake		45549						
ANR	45664	Symbol	height		45549						
ANR	45665	Function	vdagentd_uinput_destroy	70:0:1944:2183							
ANR	45666	FunctionDef	vdagentd_uinput_destroy (struct vdagentd_uinput * * uinputp)		45665	0					
ANR	45667	CompoundStatement		71:0:2007:2183	45665	0					
ANR	45668	IdentifierDeclStatement	struct vdagentd_uinput * uinput = * uinputp ;	72:4:2013:2054	45665	0	True				
ANR	45669	IdentifierDecl	* uinput = * uinputp		45665	0					
ANR	45670	IdentifierDeclType	struct vdagentd_uinput *		45665	0					
ANR	45671	Identifier	uinput		45665	1					
ANR	45672	AssignmentExpression	* uinput = * uinputp		45665	2		=			
ANR	45673	Identifier	uinput		45665	0					
ANR	45674	UnaryOperationExpression	* uinputp		45665	1					
ANR	45675	UnaryOperator	*		45665	0					
ANR	45676	Identifier	uinputp		45665	1					
ANR	45677	IfStatement	if ( ! uinput )		45665	1					
ANR	45678	Condition	! uinput	74:8:2065:2071	45665	0	True				
ANR	45679	UnaryOperationExpression	! uinput		45665	0					
ANR	45680	UnaryOperator	!		45665	0					
ANR	45681	Identifier	uinput		45665	1					
ANR	45682	ReturnStatement	return ;	75:8:2082:2088	45665	1	True				
ANR	45683	IfStatement	if ( uinput -> fd != - 1 )		45665	2					
ANR	45684	Condition	uinput -> fd != - 1	77:8:2099:2114	45665	0	True				
ANR	45685	EqualityExpression	uinput -> fd != - 1		45665	0		!=			
ANR	45686	PtrMemberAccess	uinput -> fd		45665	0					
ANR	45687	Identifier	uinput		45665	0					
ANR	45688	Identifier	fd		45665	1					
ANR	45689	UnaryOperationExpression	- 1		45665	1					
ANR	45690	UnaryOperator	-		45665	0					
ANR	45691	PrimaryExpression	1		45665	1					
ANR	45692	ExpressionStatement	close ( uinput -> fd )	78:8:2125:2142	45665	1	True				
ANR	45693	CallExpression	close ( uinput -> fd )		45665	0					
ANR	45694	Callee	close		45665	0					
ANR	45695	Identifier	close		45665	0					
ANR	45696	ArgumentList	uinput -> fd		45665	1					
ANR	45697	Argument	uinput -> fd		45665	0					
ANR	45698	PtrMemberAccess	uinput -> fd		45665	0					
ANR	45699	Identifier	uinput		45665	0					
ANR	45700	Identifier	fd		45665	1					
ANR	45701	ExpressionStatement	free ( uinput )	79:4:2148:2160	45665	3	True				
ANR	45702	CallExpression	free ( uinput )		45665	0					
ANR	45703	Callee	free		45665	0					
ANR	45704	Identifier	free		45665	0					
ANR	45705	ArgumentList	uinput		45665	1					
ANR	45706	Argument	uinput		45665	0					
ANR	45707	Identifier	uinput		45665	0					
ANR	45708	ExpressionStatement	* uinputp = NULL	80:4:2166:2181	45665	4	True				
ANR	45709	AssignmentExpression	* uinputp = NULL		45665	0		=			
ANR	45710	UnaryOperationExpression	* uinputp		45665	0					
ANR	45711	UnaryOperator	*		45665	0					
ANR	45712	Identifier	uinputp		45665	1					
ANR	45713	Identifier	NULL		45665	1					
ANR	45714	ReturnType	void		45665	1					
ANR	45715	Identifier	vdagentd_uinput_destroy		45665	2					
ANR	45716	ParameterList	struct vdagentd_uinput * * uinputp		45665	3					
ANR	45717	Parameter	struct vdagentd_uinput * * uinputp	70:29:1973:2004	45665	0	True				
ANR	45718	ParameterType	struct vdagentd_uinput * *		45665	0					
ANR	45719	Identifier	uinputp		45665	1					
ANR	45720	CFGEntryNode	ENTRY		45665		True				
ANR	45721	CFGExitNode	EXIT		45665		True				
ANR	45722	Symbol	* uinput		45665						
ANR	45723	Symbol	uinputp		45665						
ANR	45724	Symbol	NULL		45665						
ANR	45725	Symbol	uinput		45665						
ANR	45726	Symbol	uinput -> fd		45665						
ANR	45727	Symbol	* uinputp		45665						
ANR	45728	Function	vdagentd_uinput_update_size	83:0:2186:4497							
ANR	45729	FunctionDef	"vdagentd_uinput_update_size (struct vdagentd_uinput * * uinputp , int width , int height , struct vdagentd_guest_xorg_resolution * screen_info , int screen_count)"		45728	0					
ANR	45730	CompoundStatement		87:0:2370:4497	45728	0					
ANR	45731	IdentifierDeclStatement	struct vdagentd_uinput * uinput = * uinputp ;	88:4:2376:2417	45728	0	True				
ANR	45732	IdentifierDecl	* uinput = * uinputp		45728	0					
ANR	45733	IdentifierDeclType	struct vdagentd_uinput *		45728	0					
ANR	45734	Identifier	uinput		45728	1					
ANR	45735	AssignmentExpression	* uinput = * uinputp		45728	2		=			
ANR	45736	Identifier	uinput		45728	0					
ANR	45737	UnaryOperationExpression	* uinputp		45728	1					
ANR	45738	UnaryOperator	*		45728	0					
ANR	45739	Identifier	uinputp		45728	1					
ANR	45740	Statement	struct	89:4:2423:2428	45728	1	True				
ANR	45741	Statement	uinput_user_dev	89:11:2430:2444	45728	2	True				
ANR	45742	Statement	device	89:27:2446:2451	45728	3	True				
ANR	45743	Statement	=	89:34:2453:2453	45728	4	True				
ANR	45744	CompoundStatement		3:36:84:84	45728	5					
ANR	45745	Statement	.	90:8:2465:2465	45728	0	True				
ANR	45746	Statement	name	90:9:2466:2469	45728	1	True				
ANR	45747	Statement	=	90:14:2471:2471	45728	2	True				
ANR	45748	Statement	"""spice vdagent tablet"""	90:16:2473:2494	45728	3	True				
ANR	45749	Statement	","	90:38:2495:2495	45728	4	True				
ANR	45750	Statement	.	92:8:2531:2531	45728	5	True				
ANR	45751	Statement	absmax	92:9:2532:2537	45728	6	True				
ANR	45752	Statement	[	92:17:2540:2540	45728	7	True				
ANR	45753	Statement	ABS_X	92:19:2542:2546	45728	8	True				
ANR	45754	Statement	]	92:25:2548:2548	45728	9	True				
ANR	45755	Statement	=	92:27:2550:2550	45728	10	True				
ANR	45756	Statement	32767	92:29:2552:2556	45728	11	True				
ANR	45757	Statement	","	92:34:2557:2557	45728	12	True				
ANR	45758	Statement	.	93:8:2567:2567	45728	13	True				
ANR	45759	Statement	absmax	93:9:2568:2573	45728	14	True				
ANR	45760	Statement	[	93:17:2576:2576	45728	15	True				
ANR	45761	Statement	ABS_Y	93:19:2578:2582	45728	16	True				
ANR	45762	Statement	]	93:25:2584:2584	45728	17	True				
ANR	45763	Statement	=	93:27:2586:2586	45728	18	True				
ANR	45764	Statement	32767	93:29:2588:2592	45728	19	True				
ANR	45765	Statement	","	93:34:2593:2593	45728	20	True				
ANR	45766	ExpressionStatement		98:5:2694:2694	45728	6	True				
ANR	45767	IdentifierDeclStatement	"int i , rc ;"	99:4:2700:2709	45728	7	True				
ANR	45768	IdentifierDecl	i		45728	0					
ANR	45769	IdentifierDeclType	int		45728	0					
ANR	45770	Identifier	i		45728	1					
ANR	45771	IdentifierDecl	rc		45728	1					
ANR	45772	IdentifierDeclType	int		45728	0					
ANR	45773	Identifier	rc		45728	1					
ANR	45774	IfStatement	if ( uinput -> debug )		45728	8					
ANR	45775	Condition	uinput -> debug	101:8:2720:2732	45728	0	True				
ANR	45776	PtrMemberAccess	uinput -> debug		45728	0					
ANR	45777	Identifier	uinput		45728	0					
ANR	45778	Identifier	debug		45728	1					
ANR	45779	CompoundStatement		15:23:364:364	45728	1					
ANR	45780	ExpressionStatement	"syslog ( LOG_DEBUG , ""uinput-update-size: %dx%d"" , width , height )"	102:8:2745:2806	45728	0	True				
ANR	45781	CallExpression	"syslog ( LOG_DEBUG , ""uinput-update-size: %dx%d"" , width , height )"		45728	0					
ANR	45782	Callee	syslog		45728	0					
ANR	45783	Identifier	syslog		45728	0					
ANR	45784	ArgumentList	LOG_DEBUG		45728	1					
ANR	45785	Argument	LOG_DEBUG		45728	0					
ANR	45786	Identifier	LOG_DEBUG		45728	0					
ANR	45787	Argument	"""uinput-update-size: %dx%d"""		45728	1					
ANR	45788	PrimaryExpression	"""uinput-update-size: %dx%d"""		45728	0					
ANR	45789	Argument	width		45728	2					
ANR	45790	Identifier	width		45728	0					
ANR	45791	Argument	height		45728	3					
ANR	45792	Identifier	height		45728	0					
ANR	45793	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		45728	1					
ANR	45794	ForInit	i = 0 ;	103:13:2821:2826	45728	0	True				
ANR	45795	AssignmentExpression	i = 0		45728	0		=			
ANR	45796	Identifier	i		45728	0					
ANR	45797	PrimaryExpression	0		45728	1					
ANR	45798	Condition	i < screen_count	103:20:2828:2843	45728	1	True				
ANR	45799	RelationalExpression	i < screen_count		45728	0		<			
ANR	45800	Identifier	i		45728	0					
ANR	45801	Identifier	screen_count		45728	1					
ANR	45802	PostIncDecOperationExpression	i ++	103:38:2846:2848	45728	2	True				
ANR	45803	Identifier	i		45728	0					
ANR	45804	IncDec	++		45728	1					
ANR	45805	ExpressionStatement	"syslog ( LOG_DEBUG , ""screen %d: +%d+%d"" , i , screen_info [ i ] . x , screen_info [ i ] . y )"	104:12:2863:2959	45728	3	True				
ANR	45806	CallExpression	"syslog ( LOG_DEBUG , ""screen %d: +%d+%d"" , i , screen_info [ i ] . x , screen_info [ i ] . y )"		45728	0					
ANR	45807	Callee	syslog		45728	0					
ANR	45808	Identifier	syslog		45728	0					
ANR	45809	ArgumentList	LOG_DEBUG		45728	1					
ANR	45810	Argument	LOG_DEBUG		45728	0					
ANR	45811	Identifier	LOG_DEBUG		45728	0					
ANR	45812	Argument	"""screen %d: +%d+%d"""		45728	1					
ANR	45813	PrimaryExpression	"""screen %d: +%d+%d"""		45728	0					
ANR	45814	Argument	i		45728	2					
ANR	45815	Identifier	i		45728	0					
ANR	45816	Argument	screen_info [ i ] . x		45728	3					
ANR	45817	MemberAccess	screen_info [ i ] . x		45728	0					
ANR	45818	ArrayIndexing	screen_info [ i ]		45728	0					
ANR	45819	Identifier	screen_info		45728	0					
ANR	45820	Identifier	i		45728	1					
ANR	45821	Identifier	x		45728	1					
ANR	45822	Argument	screen_info [ i ] . y		45728	4					
ANR	45823	MemberAccess	screen_info [ i ] . y		45728	0					
ANR	45824	ArrayIndexing	screen_info [ i ]		45728	0					
ANR	45825	Identifier	screen_info		45728	0					
ANR	45826	Identifier	i		45728	1					
ANR	45827	Identifier	y		45728	1					
ANR	45828	ExpressionStatement	uinput -> screen_info = screen_info	108:4:2972:3006	45728	9	True				
ANR	45829	AssignmentExpression	uinput -> screen_info = screen_info		45728	0		=			
ANR	45830	PtrMemberAccess	uinput -> screen_info		45728	0					
ANR	45831	Identifier	uinput		45728	0					
ANR	45832	Identifier	screen_info		45728	1					
ANR	45833	Identifier	screen_info		45728	1					
ANR	45834	ExpressionStatement	uinput -> screen_count = screen_count	109:4:3012:3047	45728	10	True				
ANR	45835	AssignmentExpression	uinput -> screen_count = screen_count		45728	0		=			
ANR	45836	PtrMemberAccess	uinput -> screen_count		45728	0					
ANR	45837	Identifier	uinput		45728	0					
ANR	45838	Identifier	screen_count		45728	1					
ANR	45839	Identifier	screen_count		45728	1					
ANR	45840	IfStatement	if ( uinput -> width == width && uinput -> height == height )		45728	11					
ANR	45841	Condition	uinput -> width == width && uinput -> height == height	111:8:3058:3107	45728	0	True				
ANR	45842	AndExpression	uinput -> width == width && uinput -> height == height		45728	0		&&			
ANR	45843	EqualityExpression	uinput -> width == width		45728	0		==			
ANR	45844	PtrMemberAccess	uinput -> width		45728	0					
ANR	45845	Identifier	uinput		45728	0					
ANR	45846	Identifier	width		45728	1					
ANR	45847	Identifier	width		45728	1					
ANR	45848	EqualityExpression	uinput -> height == height		45728	1		==			
ANR	45849	PtrMemberAccess	uinput -> height		45728	0					
ANR	45850	Identifier	uinput		45728	0					
ANR	45851	Identifier	height		45728	1					
ANR	45852	Identifier	height		45728	1					
ANR	45853	ReturnStatement	return ;	112:8:3118:3124	45728	1	True				
ANR	45854	ExpressionStatement	uinput -> width = width	114:4:3131:3153	45728	12	True				
ANR	45855	AssignmentExpression	uinput -> width = width		45728	0		=			
ANR	45856	PtrMemberAccess	uinput -> width		45728	0					
ANR	45857	Identifier	uinput		45728	0					
ANR	45858	Identifier	width		45728	1					
ANR	45859	Identifier	width		45728	1					
ANR	45860	ExpressionStatement	uinput -> height = height	115:4:3159:3182	45728	13	True				
ANR	45861	AssignmentExpression	uinput -> height = height		45728	0		=			
ANR	45862	PtrMemberAccess	uinput -> height		45728	0					
ANR	45863	Identifier	uinput		45728	0					
ANR	45864	Identifier	height		45728	1					
ANR	45865	Identifier	height		45728	1					
ANR	45866	IfStatement	if ( uinput -> fd != - 1 )		45728	14					
ANR	45867	Condition	uinput -> fd != - 1	117:8:3193:3208	45728	0	True				
ANR	45868	EqualityExpression	uinput -> fd != - 1		45728	0		!=			
ANR	45869	PtrMemberAccess	uinput -> fd		45728	0					
ANR	45870	Identifier	uinput		45728	0					
ANR	45871	Identifier	fd		45728	1					
ANR	45872	UnaryOperationExpression	- 1		45728	1					
ANR	45873	UnaryOperator	-		45728	0					
ANR	45874	PrimaryExpression	1		45728	1					
ANR	45875	ExpressionStatement	close ( uinput -> fd )	119:8:3246:3263	45728	1	True				
ANR	45876	CallExpression	close ( uinput -> fd )		45728	0					
ANR	45877	Callee	close		45728	0					
ANR	45878	Identifier	close		45728	0					
ANR	45879	ArgumentList	uinput -> fd		45728	1					
ANR	45880	Argument	uinput -> fd		45728	0					
ANR	45881	PtrMemberAccess	uinput -> fd		45728	0					
ANR	45882	Identifier	uinput		45728	0					
ANR	45883	Identifier	fd		45728	1					
ANR	45884	ExpressionStatement	"uinput -> fd = open ( uinput -> devname , uinput -> fake ? O_WRONLY : O_RDWR )"	124:4:3299:3367	45728	15	True				
ANR	45885	AssignmentExpression	"uinput -> fd = open ( uinput -> devname , uinput -> fake ? O_WRONLY : O_RDWR )"		45728	0		=			
ANR	45886	PtrMemberAccess	uinput -> fd		45728	0					
ANR	45887	Identifier	uinput		45728	0					
ANR	45888	Identifier	fd		45728	1					
ANR	45889	CallExpression	"open ( uinput -> devname , uinput -> fake ? O_WRONLY : O_RDWR )"		45728	1					
ANR	45890	Callee	open		45728	0					
ANR	45891	Identifier	open		45728	0					
ANR	45892	ArgumentList	uinput -> devname		45728	1					
ANR	45893	Argument	uinput -> devname		45728	0					
ANR	45894	PtrMemberAccess	uinput -> devname		45728	0					
ANR	45895	Identifier	uinput		45728	0					
ANR	45896	Identifier	devname		45728	1					
ANR	45897	Argument	uinput -> fake ? O_WRONLY : O_RDWR		45728	1					
ANR	45898	ConditionalExpression	uinput -> fake ? O_WRONLY : O_RDWR		45728	0					
ANR	45899	Condition	uinput -> fake		45728	0					
ANR	45900	PtrMemberAccess	uinput -> fake		45728	0					
ANR	45901	Identifier	uinput		45728	0					
ANR	45902	Identifier	fake		45728	1					
ANR	45903	Identifier	O_WRONLY		45728	1					
ANR	45904	Identifier	O_RDWR		45728	2					
ANR	45905	IfStatement	if ( uinput -> fd == - 1 )		45728	16					
ANR	45906	Condition	uinput -> fd == - 1	125:8:3377:3392	45728	0	True				
ANR	45907	EqualityExpression	uinput -> fd == - 1		45728	0		==			
ANR	45908	PtrMemberAccess	uinput -> fd		45728	0					
ANR	45909	Identifier	uinput		45728	0					
ANR	45910	Identifier	fd		45728	1					
ANR	45911	UnaryOperationExpression	- 1		45728	1					
ANR	45912	UnaryOperator	-		45728	0					
ANR	45913	PrimaryExpression	1		45728	1					
ANR	45914	CompoundStatement		39:26:1024:1024	45728	1					
ANR	45915	ExpressionStatement	"syslog ( LOG_ERR , ""open %s: %m"" , uinput -> devname )"	126:8:3405:3452	45728	0	True				
ANR	45916	CallExpression	"syslog ( LOG_ERR , ""open %s: %m"" , uinput -> devname )"		45728	0					
ANR	45917	Callee	syslog		45728	0					
ANR	45918	Identifier	syslog		45728	0					
ANR	45919	ArgumentList	LOG_ERR		45728	1					
ANR	45920	Argument	LOG_ERR		45728	0					
ANR	45921	Identifier	LOG_ERR		45728	0					
ANR	45922	Argument	"""open %s: %m"""		45728	1					
ANR	45923	PrimaryExpression	"""open %s: %m"""		45728	0					
ANR	45924	Argument	uinput -> devname		45728	2					
ANR	45925	PtrMemberAccess	uinput -> devname		45728	0					
ANR	45926	Identifier	uinput		45728	0					
ANR	45927	Identifier	devname		45728	1					
ANR	45928	ExpressionStatement	vdagentd_uinput_destroy ( uinputp )	127:8:3462:3494	45728	1	True				
ANR	45929	CallExpression	vdagentd_uinput_destroy ( uinputp )		45728	0					
ANR	45930	Callee	vdagentd_uinput_destroy		45728	0					
ANR	45931	Identifier	vdagentd_uinput_destroy		45728	0					
ANR	45932	ArgumentList	uinputp		45728	1					
ANR	45933	Argument	uinputp		45728	0					
ANR	45934	Identifier	uinputp		45728	0					
ANR	45935	ReturnStatement	return ;	128:8:3504:3510	45728	2	True				
ANR	45936	IfStatement	if ( uinput -> fake )		45728	17					
ANR	45937	Condition	uinput -> fake	131:8:3527:3538	45728	0	True				
ANR	45938	PtrMemberAccess	uinput -> fake		45728	0					
ANR	45939	Identifier	uinput		45728	0					
ANR	45940	Identifier	fake		45728	1					
ANR	45941	CompoundStatement		45:22:1170:1170	45728	1					
ANR	45942	ReturnStatement	return ;	133:8:3630:3636	45728	0	True				
ANR	45943	ExpressionStatement	"rc = write ( uinput -> fd , & device , sizeof ( device ) )"	136:4:3649:3696	45728	18	True				
ANR	45944	AssignmentExpression	"rc = write ( uinput -> fd , & device , sizeof ( device ) )"		45728	0		=			
ANR	45945	Identifier	rc		45728	0					
ANR	45946	CallExpression	"write ( uinput -> fd , & device , sizeof ( device ) )"		45728	1					
ANR	45947	Callee	write		45728	0					
ANR	45948	Identifier	write		45728	0					
ANR	45949	ArgumentList	uinput -> fd		45728	1					
ANR	45950	Argument	uinput -> fd		45728	0					
ANR	45951	PtrMemberAccess	uinput -> fd		45728	0					
ANR	45952	Identifier	uinput		45728	0					
ANR	45953	Identifier	fd		45728	1					
ANR	45954	Argument	& device		45728	1					
ANR	45955	UnaryOperationExpression	& device		45728	0					
ANR	45956	UnaryOperator	&		45728	0					
ANR	45957	Identifier	device		45728	1					
ANR	45958	Argument	sizeof ( device )		45728	2					
ANR	45959	SizeofExpression	sizeof ( device )		45728	0					
ANR	45960	Sizeof	sizeof		45728	0					
ANR	45961	SizeofOperand	device		45728	1					
ANR	45962	IfStatement	if ( rc != sizeof ( device ) )		45728	19					
ANR	45963	Condition	rc != sizeof ( device )	137:8:3706:3725	45728	0	True				
ANR	45964	EqualityExpression	rc != sizeof ( device )		45728	0		!=			
ANR	45965	Identifier	rc		45728	0					
ANR	45966	SizeofExpression	sizeof ( device )		45728	1					
ANR	45967	Sizeof	sizeof		45728	0					
ANR	45968	SizeofOperand	device		45728	1					
ANR	45969	CompoundStatement		51:30:1357:1357	45728	1					
ANR	45970	ExpressionStatement	"syslog ( LOG_ERR , ""write %s: %m"" , uinput -> devname )"	138:8:3738:3786	45728	0	True				
ANR	45971	CallExpression	"syslog ( LOG_ERR , ""write %s: %m"" , uinput -> devname )"		45728	0					
ANR	45972	Callee	syslog		45728	0					
ANR	45973	Identifier	syslog		45728	0					
ANR	45974	ArgumentList	LOG_ERR		45728	1					
ANR	45975	Argument	LOG_ERR		45728	0					
ANR	45976	Identifier	LOG_ERR		45728	0					
ANR	45977	Argument	"""write %s: %m"""		45728	1					
ANR	45978	PrimaryExpression	"""write %s: %m"""		45728	0					
ANR	45979	Argument	uinput -> devname		45728	2					
ANR	45980	PtrMemberAccess	uinput -> devname		45728	0					
ANR	45981	Identifier	uinput		45728	0					
ANR	45982	Identifier	devname		45728	1					
ANR	45983	ExpressionStatement	vdagentd_uinput_destroy ( uinputp )	139:8:3796:3828	45728	1	True				
ANR	45984	CallExpression	vdagentd_uinput_destroy ( uinputp )		45728	0					
ANR	45985	Callee	vdagentd_uinput_destroy		45728	0					
ANR	45986	Identifier	vdagentd_uinput_destroy		45728	0					
ANR	45987	ArgumentList	uinputp		45728	1					
ANR	45988	Argument	uinputp		45728	0					
ANR	45989	Identifier	uinputp		45728	0					
ANR	45990	ReturnStatement	return ;	140:8:3838:3844	45728	2	True				
ANR	45991	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_EVBIT , EV_KEY )"	144:4:3875:3914	45728	20	True				
ANR	45992	CallExpression	"ioctl ( uinput -> fd , UI_SET_EVBIT , EV_KEY )"		45728	0					
ANR	45993	Callee	ioctl		45728	0					
ANR	45994	Identifier	ioctl		45728	0					
ANR	45995	ArgumentList	uinput -> fd		45728	1					
ANR	45996	Argument	uinput -> fd		45728	0					
ANR	45997	PtrMemberAccess	uinput -> fd		45728	0					
ANR	45998	Identifier	uinput		45728	0					
ANR	45999	Identifier	fd		45728	1					
ANR	46000	Argument	UI_SET_EVBIT		45728	1					
ANR	46001	Identifier	UI_SET_EVBIT		45728	0					
ANR	46002	Argument	EV_KEY		45728	2					
ANR	46003	Identifier	EV_KEY		45728	0					
ANR	46004	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_KEYBIT , BTN_LEFT )"	145:4:3920:3962	45728	21	True				
ANR	46005	CallExpression	"ioctl ( uinput -> fd , UI_SET_KEYBIT , BTN_LEFT )"		45728	0					
ANR	46006	Callee	ioctl		45728	0					
ANR	46007	Identifier	ioctl		45728	0					
ANR	46008	ArgumentList	uinput -> fd		45728	1					
ANR	46009	Argument	uinput -> fd		45728	0					
ANR	46010	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46011	Identifier	uinput		45728	0					
ANR	46012	Identifier	fd		45728	1					
ANR	46013	Argument	UI_SET_KEYBIT		45728	1					
ANR	46014	Identifier	UI_SET_KEYBIT		45728	0					
ANR	46015	Argument	BTN_LEFT		45728	2					
ANR	46016	Identifier	BTN_LEFT		45728	0					
ANR	46017	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_KEYBIT , BTN_MIDDLE )"	146:4:3968:4012	45728	22	True				
ANR	46018	CallExpression	"ioctl ( uinput -> fd , UI_SET_KEYBIT , BTN_MIDDLE )"		45728	0					
ANR	46019	Callee	ioctl		45728	0					
ANR	46020	Identifier	ioctl		45728	0					
ANR	46021	ArgumentList	uinput -> fd		45728	1					
ANR	46022	Argument	uinput -> fd		45728	0					
ANR	46023	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46024	Identifier	uinput		45728	0					
ANR	46025	Identifier	fd		45728	1					
ANR	46026	Argument	UI_SET_KEYBIT		45728	1					
ANR	46027	Identifier	UI_SET_KEYBIT		45728	0					
ANR	46028	Argument	BTN_MIDDLE		45728	2					
ANR	46029	Identifier	BTN_MIDDLE		45728	0					
ANR	46030	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_KEYBIT , BTN_RIGHT )"	147:4:4018:4061	45728	23	True				
ANR	46031	CallExpression	"ioctl ( uinput -> fd , UI_SET_KEYBIT , BTN_RIGHT )"		45728	0					
ANR	46032	Callee	ioctl		45728	0					
ANR	46033	Identifier	ioctl		45728	0					
ANR	46034	ArgumentList	uinput -> fd		45728	1					
ANR	46035	Argument	uinput -> fd		45728	0					
ANR	46036	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46037	Identifier	uinput		45728	0					
ANR	46038	Identifier	fd		45728	1					
ANR	46039	Argument	UI_SET_KEYBIT		45728	1					
ANR	46040	Identifier	UI_SET_KEYBIT		45728	0					
ANR	46041	Argument	BTN_RIGHT		45728	2					
ANR	46042	Identifier	BTN_RIGHT		45728	0					
ANR	46043	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_EVBIT , EV_REL )"	150:4:4084:4123	45728	24	True				
ANR	46044	CallExpression	"ioctl ( uinput -> fd , UI_SET_EVBIT , EV_REL )"		45728	0					
ANR	46045	Callee	ioctl		45728	0					
ANR	46046	Identifier	ioctl		45728	0					
ANR	46047	ArgumentList	uinput -> fd		45728	1					
ANR	46048	Argument	uinput -> fd		45728	0					
ANR	46049	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46050	Identifier	uinput		45728	0					
ANR	46051	Identifier	fd		45728	1					
ANR	46052	Argument	UI_SET_EVBIT		45728	1					
ANR	46053	Identifier	UI_SET_EVBIT		45728	0					
ANR	46054	Argument	EV_REL		45728	2					
ANR	46055	Identifier	EV_REL		45728	0					
ANR	46056	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_RELBIT , REL_WHEEL )"	151:4:4129:4172	45728	25	True				
ANR	46057	CallExpression	"ioctl ( uinput -> fd , UI_SET_RELBIT , REL_WHEEL )"		45728	0					
ANR	46058	Callee	ioctl		45728	0					
ANR	46059	Identifier	ioctl		45728	0					
ANR	46060	ArgumentList	uinput -> fd		45728	1					
ANR	46061	Argument	uinput -> fd		45728	0					
ANR	46062	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46063	Identifier	uinput		45728	0					
ANR	46064	Identifier	fd		45728	1					
ANR	46065	Argument	UI_SET_RELBIT		45728	1					
ANR	46066	Identifier	UI_SET_RELBIT		45728	0					
ANR	46067	Argument	REL_WHEEL		45728	2					
ANR	46068	Identifier	REL_WHEEL		45728	0					
ANR	46069	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_EVBIT , EV_ABS )"	154:4:4197:4236	45728	26	True				
ANR	46070	CallExpression	"ioctl ( uinput -> fd , UI_SET_EVBIT , EV_ABS )"		45728	0					
ANR	46071	Callee	ioctl		45728	0					
ANR	46072	Identifier	ioctl		45728	0					
ANR	46073	ArgumentList	uinput -> fd		45728	1					
ANR	46074	Argument	uinput -> fd		45728	0					
ANR	46075	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46076	Identifier	uinput		45728	0					
ANR	46077	Identifier	fd		45728	1					
ANR	46078	Argument	UI_SET_EVBIT		45728	1					
ANR	46079	Identifier	UI_SET_EVBIT		45728	0					
ANR	46080	Argument	EV_ABS		45728	2					
ANR	46081	Identifier	EV_ABS		45728	0					
ANR	46082	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_ABSBIT , ABS_X )"	155:4:4242:4281	45728	27	True				
ANR	46083	CallExpression	"ioctl ( uinput -> fd , UI_SET_ABSBIT , ABS_X )"		45728	0					
ANR	46084	Callee	ioctl		45728	0					
ANR	46085	Identifier	ioctl		45728	0					
ANR	46086	ArgumentList	uinput -> fd		45728	1					
ANR	46087	Argument	uinput -> fd		45728	0					
ANR	46088	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46089	Identifier	uinput		45728	0					
ANR	46090	Identifier	fd		45728	1					
ANR	46091	Argument	UI_SET_ABSBIT		45728	1					
ANR	46092	Identifier	UI_SET_ABSBIT		45728	0					
ANR	46093	Argument	ABS_X		45728	2					
ANR	46094	Identifier	ABS_X		45728	0					
ANR	46095	ExpressionStatement	"ioctl ( uinput -> fd , UI_SET_ABSBIT , ABS_Y )"	156:4:4287:4326	45728	28	True				
ANR	46096	CallExpression	"ioctl ( uinput -> fd , UI_SET_ABSBIT , ABS_Y )"		45728	0					
ANR	46097	Callee	ioctl		45728	0					
ANR	46098	Identifier	ioctl		45728	0					
ANR	46099	ArgumentList	uinput -> fd		45728	1					
ANR	46100	Argument	uinput -> fd		45728	0					
ANR	46101	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46102	Identifier	uinput		45728	0					
ANR	46103	Identifier	fd		45728	1					
ANR	46104	Argument	UI_SET_ABSBIT		45728	1					
ANR	46105	Identifier	UI_SET_ABSBIT		45728	0					
ANR	46106	Argument	ABS_Y		45728	2					
ANR	46107	Identifier	ABS_Y		45728	0					
ANR	46108	ExpressionStatement	"rc = ioctl ( uinput -> fd , UI_DEV_CREATE )"	158:4:4333:4370	45728	29	True				
ANR	46109	AssignmentExpression	"rc = ioctl ( uinput -> fd , UI_DEV_CREATE )"		45728	0		=			
ANR	46110	Identifier	rc		45728	0					
ANR	46111	CallExpression	"ioctl ( uinput -> fd , UI_DEV_CREATE )"		45728	1					
ANR	46112	Callee	ioctl		45728	0					
ANR	46113	Identifier	ioctl		45728	0					
ANR	46114	ArgumentList	uinput -> fd		45728	1					
ANR	46115	Argument	uinput -> fd		45728	0					
ANR	46116	PtrMemberAccess	uinput -> fd		45728	0					
ANR	46117	Identifier	uinput		45728	0					
ANR	46118	Identifier	fd		45728	1					
ANR	46119	Argument	UI_DEV_CREATE		45728	1					
ANR	46120	Identifier	UI_DEV_CREATE		45728	0					
ANR	46121	IfStatement	if ( rc < 0 )		45728	30					
ANR	46122	Condition	rc < 0	159:8:4380:4385	45728	0	True				
ANR	46123	RelationalExpression	rc < 0		45728	0		<			
ANR	46124	Identifier	rc		45728	0					
ANR	46125	PrimaryExpression	0		45728	1					
ANR	46126	CompoundStatement		73:16:2017:2017	45728	1					
ANR	46127	ExpressionStatement	"syslog ( LOG_ERR , ""create %s: %m"" , uinput -> devname )"	160:8:4398:4447	45728	0	True				
ANR	46128	CallExpression	"syslog ( LOG_ERR , ""create %s: %m"" , uinput -> devname )"		45728	0					
ANR	46129	Callee	syslog		45728	0					
ANR	46130	Identifier	syslog		45728	0					
ANR	46131	ArgumentList	LOG_ERR		45728	1					
ANR	46132	Argument	LOG_ERR		45728	0					
ANR	46133	Identifier	LOG_ERR		45728	0					
ANR	46134	Argument	"""create %s: %m"""		45728	1					
ANR	46135	PrimaryExpression	"""create %s: %m"""		45728	0					
ANR	46136	Argument	uinput -> devname		45728	2					
ANR	46137	PtrMemberAccess	uinput -> devname		45728	0					
ANR	46138	Identifier	uinput		45728	0					
ANR	46139	Identifier	devname		45728	1					
ANR	46140	ExpressionStatement	vdagentd_uinput_destroy ( uinputp )	161:8:4457:4489	45728	1	True				
ANR	46141	CallExpression	vdagentd_uinput_destroy ( uinputp )		45728	0					
ANR	46142	Callee	vdagentd_uinput_destroy		45728	0					
ANR	46143	Identifier	vdagentd_uinput_destroy		45728	0					
ANR	46144	ArgumentList	uinputp		45728	1					
ANR	46145	Argument	uinputp		45728	0					
ANR	46146	Identifier	uinputp		45728	0					
ANR	46147	ReturnType	void		45728	1					
ANR	46148	Identifier	vdagentd_uinput_update_size		45728	2					
ANR	46149	ParameterList	"struct vdagentd_uinput * * uinputp , int width , int height , struct vdagentd_guest_xorg_resolution * screen_info , int screen_count"		45728	3					
ANR	46150	Parameter	struct vdagentd_uinput * * uinputp	83:33:2219:2250	45728	0	True				
ANR	46151	ParameterType	struct vdagentd_uinput * *		45728	0					
ANR	46152	Identifier	uinputp		45728	1					
ANR	46153	Parameter	int width	84:8:2261:2269	45728	1	True				
ANR	46154	ParameterType	int		45728	0					
ANR	46155	Identifier	width		45728	1					
ANR	46156	Parameter	int height	84:19:2272:2281	45728	2	True				
ANR	46157	ParameterType	int		45728	0					
ANR	46158	Identifier	height		45728	1					
ANR	46159	Parameter	struct vdagentd_guest_xorg_resolution * screen_info	85:8:2292:2341	45728	3	True				
ANR	46160	ParameterType	struct vdagentd_guest_xorg_resolution *		45728	0					
ANR	46161	Identifier	screen_info		45728	1					
ANR	46162	Parameter	int screen_count	86:8:2352:2367	45728	4	True				
ANR	46163	ParameterType	int		45728	0					
ANR	46164	Identifier	screen_count		45728	1					
ANR	46165	CFGEntryNode	ENTRY		45728		True				
ANR	46166	CFGExitNode	EXIT		45728		True				
ANR	46167	Symbol	BTN_MIDDLE		45728						
ANR	46168	Symbol	UI_SET_EVBIT		45728						
ANR	46169	Symbol	UI_SET_RELBIT		45728						
ANR	46170	Symbol	screen_count		45728						
ANR	46171	Symbol	screen_info		45728						
ANR	46172	Symbol	uinput -> fd		45728						
ANR	46173	Symbol	REL_WHEEL		45728						
ANR	46174	Symbol	UI_SET_ABSBIT		45728						
ANR	46175	Symbol	EV_REL		45728						
ANR	46176	Symbol	ioctl		45728						
ANR	46177	Symbol	& device		45728						
ANR	46178	Symbol	O_RDWR		45728						
ANR	46179	Symbol	uinput -> height		45728						
ANR	46180	Symbol	uinput -> screen_count		45728						
ANR	46181	Symbol	BTN_RIGHT		45728						
ANR	46182	Symbol	uinput		45728						
ANR	46183	Symbol	uinput -> fake		45728						
ANR	46184	Symbol	LOG_ERR		45728						
ANR	46185	Symbol	EV_KEY		45728						
ANR	46186	Symbol	ABS_X		45728						
ANR	46187	Symbol	UI_DEV_CREATE		45728						
ANR	46188	Symbol	write		45728						
ANR	46189	Symbol	height		45728						
ANR	46190	Symbol	ABS_Y		45728						
ANR	46191	Symbol	EV_ABS		45728						
ANR	46192	Symbol	screen_info [ i ] . x		45728						
ANR	46193	Symbol	screen_info [ i ] . y		45728						
ANR	46194	Symbol	uinput -> devname		45728						
ANR	46195	Symbol	i		45728						
ANR	46196	Symbol	* uinputp		45728						
ANR	46197	Symbol	uinput -> debug		45728						
ANR	46198	Symbol	uinput -> screen_info		45728						
ANR	46199	Symbol	uinput -> width		45728						
ANR	46200	Symbol	* uinput		45728						
ANR	46201	Symbol	rc		45728						
ANR	46202	Symbol	uinputp		45728						
ANR	46203	Symbol	* i		45728						
ANR	46204	Symbol	* screen_info		45728						
ANR	46205	Symbol	width		45728						
ANR	46206	Symbol	LOG_DEBUG		45728						
ANR	46207	Symbol	UI_SET_KEYBIT		45728						
ANR	46208	Symbol	BTN_LEFT		45728						
ANR	46209	Symbol	O_WRONLY		45728						
ANR	46210	Symbol	open		45728						
ANR	46211	Function	uinput_send_event	165:0:4500:4965							
ANR	46212	FunctionDef	"uinput_send_event (struct vdagentd_uinput * * uinputp , __u16 type , __u16 code , __s32 value)"		46211	0					
ANR	46213	CompoundStatement		167:0:4605:4965	46211	0					
ANR	46214	IdentifierDeclStatement	struct vdagentd_uinput * uinput = * uinputp ;	168:4:4611:4652	46211	0	True				
ANR	46215	IdentifierDecl	* uinput = * uinputp		46211	0					
ANR	46216	IdentifierDeclType	struct vdagentd_uinput *		46211	0					
ANR	46217	Identifier	uinput		46211	1					
ANR	46218	AssignmentExpression	* uinput = * uinputp		46211	2		=			
ANR	46219	Identifier	uinput		46211	0					
ANR	46220	UnaryOperationExpression	* uinputp		46211	1					
ANR	46221	UnaryOperator	*		46211	0					
ANR	46222	Identifier	uinputp		46211	1					
ANR	46223	Statement	struct	169:4:4658:4663	46211	1	True				
ANR	46224	Statement	input_event	169:11:4665:4675	46211	2	True				
ANR	46225	Statement	event	169:23:4677:4681	46211	3	True				
ANR	46226	Statement	=	169:29:4683:4683	46211	4	True				
ANR	46227	CompoundStatement		3:31:79:79	46211	5					
ANR	46228	Statement	.	170:8:4695:4695	46211	0	True				
ANR	46229	Statement	type	170:9:4696:4699	46211	1	True				
ANR	46230	Statement	=	170:15:4702:4702	46211	2	True				
ANR	46231	Statement	type	170:17:4704:4707	46211	3	True				
ANR	46232	Statement	","	170:21:4708:4708	46211	4	True				
ANR	46233	Statement	.	171:8:4718:4718	46211	5	True				
ANR	46234	Statement	code	171:9:4719:4722	46211	6	True				
ANR	46235	Statement	=	171:15:4725:4725	46211	7	True				
ANR	46236	Statement	code	171:17:4727:4730	46211	8	True				
ANR	46237	Statement	","	171:21:4731:4731	46211	9	True				
ANR	46238	Statement	.	172:8:4741:4741	46211	10	True				
ANR	46239	Statement	value	172:9:4742:4746	46211	11	True				
ANR	46240	Statement	=	172:15:4748:4748	46211	12	True				
ANR	46241	Statement	value	172:17:4750:4754	46211	13	True				
ANR	46242	Statement	","	172:22:4755:4755	46211	14	True				
ANR	46243	ExpressionStatement		173:5:4762:4762	46211	6	True				
ANR	46244	IdentifierDeclStatement	int rc ;	174:4:4768:4774	46211	7	True				
ANR	46245	IdentifierDecl	rc		46211	0					
ANR	46246	IdentifierDeclType	int		46211	0					
ANR	46247	Identifier	rc		46211	1					
ANR	46248	ExpressionStatement	"rc = write ( uinput -> fd , & event , sizeof ( event ) )"	176:4:4781:4826	46211	8	True				
ANR	46249	AssignmentExpression	"rc = write ( uinput -> fd , & event , sizeof ( event ) )"		46211	0		=			
ANR	46250	Identifier	rc		46211	0					
ANR	46251	CallExpression	"write ( uinput -> fd , & event , sizeof ( event ) )"		46211	1					
ANR	46252	Callee	write		46211	0					
ANR	46253	Identifier	write		46211	0					
ANR	46254	ArgumentList	uinput -> fd		46211	1					
ANR	46255	Argument	uinput -> fd		46211	0					
ANR	46256	PtrMemberAccess	uinput -> fd		46211	0					
ANR	46257	Identifier	uinput		46211	0					
ANR	46258	Identifier	fd		46211	1					
ANR	46259	Argument	& event		46211	1					
ANR	46260	UnaryOperationExpression	& event		46211	0					
ANR	46261	UnaryOperator	&		46211	0					
ANR	46262	Identifier	event		46211	1					
ANR	46263	Argument	sizeof ( event )		46211	2					
ANR	46264	SizeofExpression	sizeof ( event )		46211	0					
ANR	46265	Sizeof	sizeof		46211	0					
ANR	46266	SizeofOperand	event		46211	1					
ANR	46267	IfStatement	if ( rc != sizeof ( event ) )		46211	9					
ANR	46268	Condition	rc != sizeof ( event )	177:8:4836:4854	46211	0	True				
ANR	46269	EqualityExpression	rc != sizeof ( event )		46211	0		!=			
ANR	46270	Identifier	rc		46211	0					
ANR	46271	SizeofExpression	sizeof ( event )		46211	1					
ANR	46272	Sizeof	sizeof		46211	0					
ANR	46273	SizeofOperand	event		46211	1					
ANR	46274	CompoundStatement		11:29:251:251	46211	1					
ANR	46275	ExpressionStatement	"syslog ( LOG_ERR , ""write %s: %m"" , uinput -> devname )"	178:8:4867:4915	46211	0	True				
ANR	46276	CallExpression	"syslog ( LOG_ERR , ""write %s: %m"" , uinput -> devname )"		46211	0					
ANR	46277	Callee	syslog		46211	0					
ANR	46278	Identifier	syslog		46211	0					
ANR	46279	ArgumentList	LOG_ERR		46211	1					
ANR	46280	Argument	LOG_ERR		46211	0					
ANR	46281	Identifier	LOG_ERR		46211	0					
ANR	46282	Argument	"""write %s: %m"""		46211	1					
ANR	46283	PrimaryExpression	"""write %s: %m"""		46211	0					
ANR	46284	Argument	uinput -> devname		46211	2					
ANR	46285	PtrMemberAccess	uinput -> devname		46211	0					
ANR	46286	Identifier	uinput		46211	0					
ANR	46287	Identifier	devname		46211	1					
ANR	46288	ExpressionStatement	vdagentd_uinput_destroy ( uinputp )	179:8:4925:4957	46211	1	True				
ANR	46289	CallExpression	vdagentd_uinput_destroy ( uinputp )		46211	0					
ANR	46290	Callee	vdagentd_uinput_destroy		46211	0					
ANR	46291	Identifier	vdagentd_uinput_destroy		46211	0					
ANR	46292	ArgumentList	uinputp		46211	1					
ANR	46293	Argument	uinputp		46211	0					
ANR	46294	Identifier	uinputp		46211	0					
ANR	46295	ReturnType	static void		46211	1					
ANR	46296	Identifier	uinput_send_event		46211	2					
ANR	46297	ParameterList	"struct vdagentd_uinput * * uinputp , __u16 type , __u16 code , __s32 value"		46211	3					
ANR	46298	Parameter	struct vdagentd_uinput * * uinputp	165:30:4530:4561	46211	0	True				
ANR	46299	ParameterType	struct vdagentd_uinput * *		46211	0					
ANR	46300	Identifier	uinputp		46211	1					
ANR	46301	Parameter	__u16 type	166:4:4568:4577	46211	1	True				
ANR	46302	ParameterType	__u16		46211	0					
ANR	46303	Identifier	type		46211	1					
ANR	46304	Parameter	__u16 code	166:16:4580:4589	46211	2	True				
ANR	46305	ParameterType	__u16		46211	0					
ANR	46306	Identifier	code		46211	1					
ANR	46307	Parameter	__s32 value	166:28:4592:4602	46211	3	True				
ANR	46308	ParameterType	__s32		46211	0					
ANR	46309	Identifier	value		46211	1					
ANR	46310	CFGEntryNode	ENTRY		46211		True				
ANR	46311	CFGExitNode	EXIT		46211		True				
ANR	46312	Symbol	code		46211						
ANR	46313	Symbol	uinput -> devname		46211						
ANR	46314	Symbol	uinput -> fd		46211						
ANR	46315	Symbol	type		46211						
ANR	46316	Symbol	* uinputp		46211						
ANR	46317	Symbol	& event		46211						
ANR	46318	Symbol	* uinput		46211						
ANR	46319	Symbol	rc		46211						
ANR	46320	Symbol	uinputp		46211						
ANR	46321	Symbol	uinput		46211						
ANR	46322	Symbol	LOG_ERR		46211						
ANR	46323	Symbol	value		46211						
ANR	46324	Symbol	write		46211						
ANR	46325	Function	vdagentd_uinput_do_mouse	183:0:4968:7892							
ANR	46326	FunctionDef	"vdagentd_uinput_do_mouse (struct vdagentd_uinput * * uinputp , VDAgentMouseState * mouse)"		46325	0					
ANR	46327	CompoundStatement		185:0:5066:7892	46325	0					
ANR	46328	IdentifierDeclStatement	struct vdagentd_uinput * uinput = * uinputp ;	186:4:5072:5113	46325	0	True				
ANR	46329	IdentifierDecl	* uinput = * uinputp		46325	0					
ANR	46330	IdentifierDeclType	struct vdagentd_uinput *		46325	0					
ANR	46331	Identifier	uinput		46325	1					
ANR	46332	AssignmentExpression	* uinput = * uinputp		46325	2		=			
ANR	46333	Identifier	uinput		46325	0					
ANR	46334	UnaryOperationExpression	* uinputp		46325	1					
ANR	46335	UnaryOperator	*		46325	0					
ANR	46336	Identifier	uinputp		46325	1					
ANR	46337	ClassDefStatement	struct button_s { const char * name ; int mask ; int btn ; }	187:4:5119:5202	46325	1	True				
ANR	46338	Identifier	button_s		46325	0					
ANR	46339	ExpressionStatement		191:5:5203:5203	46325	2	True				
ANR	46340	Statement	static	192:4:5209:5214	46325	3	True				
ANR	46341	Statement	const	192:11:5216:5220	46325	4	True				
ANR	46342	Statement	struct	192:17:5222:5227	46325	5	True				
ANR	46343	Statement	button_s	192:24:5229:5236	46325	6	True				
ANR	46344	Statement	btns	192:33:5238:5241	46325	7	True				
ANR	46345	Statement	[	192:37:5242:5242	46325	8	True				
ANR	46346	Statement	]	192:38:5243:5243	46325	9	True				
ANR	46347	Statement	=	192:40:5245:5245	46325	10	True				
ANR	46348	CompoundStatement		8:42:180:180	46325	11					
ANR	46349	CompoundStatement		9:8:190:190	46325	0					
ANR	46350	Statement	.	193:10:5259:5259	46325	0	True				
ANR	46351	Statement	name	193:11:5260:5263	46325	1	True				
ANR	46352	Statement	=	193:16:5265:5265	46325	2	True				
ANR	46353	Statement	"""left"""	193:18:5267:5272	46325	3	True				
ANR	46354	Statement	","	193:24:5273:5273	46325	4	True				
ANR	46355	Statement	.	193:28:5277:5277	46325	5	True				
ANR	46356	Statement	mask	193:29:5278:5281	46325	6	True				
ANR	46357	Statement	=	193:34:5283:5283	46325	7	True				
ANR	46358	Statement	VD_AGENT_LBUTTON_MASK	193:37:5286:5306	46325	8	True				
ANR	46359	Statement	","	193:58:5307:5307	46325	9	True				
ANR	46360	Statement	.	193:60:5309:5309	46325	10	True				
ANR	46361	Statement	btn	193:61:5310:5312	46325	11	True				
ANR	46362	Statement	=	193:65:5314:5314	46325	12	True				
ANR	46363	Statement	BTN_LEFT	193:67:5316:5323	46325	13	True				
ANR	46364	Statement	","	193:82:5331:5331	46325	1	True				
ANR	46365	CompoundStatement		10:8:274:274	46325	2					
ANR	46366	Statement	.	194:10:5343:5343	46325	0	True				
ANR	46367	Statement	name	194:11:5344:5347	46325	1	True				
ANR	46368	Statement	=	194:16:5349:5349	46325	2	True				
ANR	46369	Statement	"""middle"""	194:18:5351:5358	46325	3	True				
ANR	46370	Statement	","	194:26:5359:5359	46325	4	True				
ANR	46371	Statement	.	194:28:5361:5361	46325	5	True				
ANR	46372	Statement	mask	194:29:5362:5365	46325	6	True				
ANR	46373	Statement	=	194:34:5367:5367	46325	7	True				
ANR	46374	Statement	VD_AGENT_MBUTTON_MASK	194:37:5370:5390	46325	8	True				
ANR	46375	Statement	","	194:58:5391:5391	46325	9	True				
ANR	46376	Statement	.	194:60:5393:5393	46325	10	True				
ANR	46377	Statement	btn	194:61:5394:5396	46325	11	True				
ANR	46378	Statement	=	194:65:5398:5398	46325	12	True				
ANR	46379	Statement	BTN_MIDDLE	194:67:5400:5409	46325	13	True				
ANR	46380	Statement	","	194:82:5415:5415	46325	3	True				
ANR	46381	CompoundStatement		11:8:358:358	46325	4					
ANR	46382	Statement	.	195:10:5427:5427	46325	0	True				
ANR	46383	Statement	name	195:11:5428:5431	46325	1	True				
ANR	46384	Statement	=	195:16:5433:5433	46325	2	True				
ANR	46385	Statement	"""right"""	195:18:5435:5441	46325	3	True				
ANR	46386	Statement	","	195:25:5442:5442	46325	4	True				
ANR	46387	Statement	.	195:28:5445:5445	46325	5	True				
ANR	46388	Statement	mask	195:29:5446:5449	46325	6	True				
ANR	46389	Statement	=	195:34:5451:5451	46325	7	True				
ANR	46390	Statement	VD_AGENT_RBUTTON_MASK	195:37:5454:5474	46325	8	True				
ANR	46391	Statement	","	195:58:5475:5475	46325	9	True				
ANR	46392	Statement	.	195:60:5477:5477	46325	10	True				
ANR	46393	Statement	btn	195:61:5478:5480	46325	11	True				
ANR	46394	Statement	=	195:65:5482:5482	46325	12	True				
ANR	46395	Statement	BTN_RIGHT	195:67:5484:5492	46325	13	True				
ANR	46396	Statement	","	195:82:5499:5499	46325	5	True				
ANR	46397	ExpressionStatement		196:5:5506:5506	46325	12	True				
ANR	46398	Statement	static	197:4:5512:5517	46325	13	True				
ANR	46399	Statement	const	197:11:5519:5523	46325	14	True				
ANR	46400	Statement	struct	197:17:5525:5530	46325	15	True				
ANR	46401	Statement	button_s	197:24:5532:5539	46325	16	True				
ANR	46402	Statement	wheel	197:33:5541:5545	46325	17	True				
ANR	46403	Statement	[	197:38:5546:5546	46325	18	True				
ANR	46404	Statement	]	197:39:5547:5547	46325	19	True				
ANR	46405	Statement	=	197:41:5549:5549	46325	20	True				
ANR	46406	CompoundStatement		13:43:484:484	46325	21					
ANR	46407	CompoundStatement		14:8:494:494	46325	0					
ANR	46408	Statement	.	198:10:5563:5563	46325	0	True				
ANR	46409	Statement	name	198:11:5564:5567	46325	1	True				
ANR	46410	Statement	=	198:16:5569:5569	46325	2	True				
ANR	46411	Statement	"""up"""	198:18:5571:5574	46325	3	True				
ANR	46412	Statement	","	198:22:5575:5575	46325	4	True				
ANR	46413	Statement	.	198:28:5581:5581	46325	5	True				
ANR	46414	Statement	mask	198:29:5582:5585	46325	6	True				
ANR	46415	Statement	=	198:34:5587:5587	46325	7	True				
ANR	46416	Statement	VD_AGENT_UBUTTON_MASK	198:37:5590:5610	46325	8	True				
ANR	46417	Statement	","	198:58:5611:5611	46325	9	True				
ANR	46418	Statement	.	198:60:5613:5613	46325	10	True				
ANR	46419	Statement	btn	198:61:5614:5616	46325	11	True				
ANR	46420	Statement	=	198:65:5618:5618	46325	12	True				
ANR	46421	Statement	1	198:67:5620:5620	46325	13	True				
ANR	46422	Statement	","	198:71:5624:5624	46325	1	True				
ANR	46423	CompoundStatement		15:8:567:567	46325	2					
ANR	46424	Statement	.	199:10:5636:5636	46325	0	True				
ANR	46425	Statement	name	199:11:5637:5640	46325	1	True				
ANR	46426	Statement	=	199:16:5642:5642	46325	2	True				
ANR	46427	Statement	"""down"""	199:18:5644:5649	46325	3	True				
ANR	46428	Statement	","	199:24:5650:5650	46325	4	True				
ANR	46429	Statement	.	199:28:5654:5654	46325	5	True				
ANR	46430	Statement	mask	199:29:5655:5658	46325	6	True				
ANR	46431	Statement	=	199:34:5660:5660	46325	7	True				
ANR	46432	Statement	VD_AGENT_DBUTTON_MASK	199:37:5663:5683	46325	8	True				
ANR	46433	Statement	","	199:58:5684:5684	46325	9	True				
ANR	46434	Statement	.	199:60:5686:5686	46325	10	True				
ANR	46435	Statement	btn	199:61:5687:5689	46325	11	True				
ANR	46436	Statement	=	199:65:5691:5691	46325	12	True				
ANR	46437	Statement	-	199:67:5693:5693	46325	13	True				
ANR	46438	Statement	1	199:68:5694:5694	46325	14	True				
ANR	46439	Statement	","	199:71:5697:5697	46325	3	True				
ANR	46440	ExpressionStatement		200:5:5704:5704	46325	22	True				
ANR	46441	IdentifierDeclStatement	"int i , down ;"	201:4:5710:5721	46325	23	True				
ANR	46442	IdentifierDecl	i		46325	0					
ANR	46443	IdentifierDeclType	int		46325	0					
ANR	46444	Identifier	i		46325	1					
ANR	46445	IdentifierDecl	down		46325	1					
ANR	46446	IdentifierDeclType	int		46325	0					
ANR	46447	Identifier	down		46325	1					
ANR	46448	IfStatement	if ( * uinputp )		46325	24					
ANR	46449	Condition	* uinputp	203:8:5732:5739	46325	0	True				
ANR	46450	UnaryOperationExpression	* uinputp		46325	0					
ANR	46451	UnaryOperator	*		46325	0					
ANR	46452	Identifier	uinputp		46325	1					
ANR	46453	CompoundStatement		19:18:675:675	46325	1					
ANR	46454	IfStatement	if ( mouse -> display_id >= uinput -> screen_count )		46325	0					
ANR	46455	Condition	mouse -> display_id >= uinput -> screen_count	204:12:5756:5796	46325	0	True				
ANR	46456	RelationalExpression	mouse -> display_id >= uinput -> screen_count		46325	0		>=			
ANR	46457	PtrMemberAccess	mouse -> display_id		46325	0					
ANR	46458	Identifier	mouse		46325	0					
ANR	46459	Identifier	display_id		46325	1					
ANR	46460	PtrMemberAccess	uinput -> screen_count		46325	1					
ANR	46461	Identifier	uinput		46325	0					
ANR	46462	Identifier	screen_count		46325	1					
ANR	46463	CompoundStatement		20:55:732:732	46325	1					
ANR	46464	ExpressionStatement	"syslog ( LOG_WARNING , ""mouse event for unknown monitor (%d >= %d)"" , mouse -> display_id , uinput -> screen_count )"	205:12:5813:5938	46325	0	True				
ANR	46465	CallExpression	"syslog ( LOG_WARNING , ""mouse event for unknown monitor (%d >= %d)"" , mouse -> display_id , uinput -> screen_count )"		46325	0					
ANR	46466	Callee	syslog		46325	0					
ANR	46467	Identifier	syslog		46325	0					
ANR	46468	ArgumentList	LOG_WARNING		46325	1					
ANR	46469	Argument	LOG_WARNING		46325	0					
ANR	46470	Identifier	LOG_WARNING		46325	0					
ANR	46471	Argument	"""mouse event for unknown monitor (%d >= %d)"""		46325	1					
ANR	46472	PrimaryExpression	"""mouse event for unknown monitor (%d >= %d)"""		46325	0					
ANR	46473	Argument	mouse -> display_id		46325	2					
ANR	46474	PtrMemberAccess	mouse -> display_id		46325	0					
ANR	46475	Identifier	mouse		46325	0					
ANR	46476	Identifier	display_id		46325	1					
ANR	46477	Argument	uinput -> screen_count		46325	3					
ANR	46478	PtrMemberAccess	uinput -> screen_count		46325	0					
ANR	46479	Identifier	uinput		46325	0					
ANR	46480	Identifier	screen_count		46325	1					
ANR	46481	ReturnStatement	return ;	207:12:5952:5958	46325	1	True				
ANR	46482	IfStatement	if ( uinput -> debug )		46325	1					
ANR	46483	Condition	uinput -> debug	209:12:5982:5994	46325	0	True				
ANR	46484	PtrMemberAccess	uinput -> debug		46325	0					
ANR	46485	Identifier	uinput		46325	0					
ANR	46486	Identifier	debug		46325	1					
ANR	46487	ExpressionStatement	"syslog ( LOG_DEBUG , ""mouse-event: mon %d %dx%d"" , mouse -> display_id , mouse -> x , mouse -> y )"	210:12:6009:6113	46325	1	True				
ANR	46488	CallExpression	"syslog ( LOG_DEBUG , ""mouse-event: mon %d %dx%d"" , mouse -> display_id , mouse -> x , mouse -> y )"		46325	0					
ANR	46489	Callee	syslog		46325	0					
ANR	46490	Identifier	syslog		46325	0					
ANR	46491	ArgumentList	LOG_DEBUG		46325	1					
ANR	46492	Argument	LOG_DEBUG		46325	0					
ANR	46493	Identifier	LOG_DEBUG		46325	0					
ANR	46494	Argument	"""mouse-event: mon %d %dx%d"""		46325	1					
ANR	46495	PrimaryExpression	"""mouse-event: mon %d %dx%d"""		46325	0					
ANR	46496	Argument	mouse -> display_id		46325	2					
ANR	46497	PtrMemberAccess	mouse -> display_id		46325	0					
ANR	46498	Identifier	mouse		46325	0					
ANR	46499	Identifier	display_id		46325	1					
ANR	46500	Argument	mouse -> x		46325	3					
ANR	46501	PtrMemberAccess	mouse -> x		46325	0					
ANR	46502	Identifier	mouse		46325	0					
ANR	46503	Identifier	x		46325	1					
ANR	46504	Argument	mouse -> y		46325	4					
ANR	46505	PtrMemberAccess	mouse -> y		46325	0					
ANR	46506	Identifier	mouse		46325	0					
ANR	46507	Identifier	y		46325	1					
ANR	46508	ExpressionStatement	mouse -> x += uinput -> screen_info [ mouse -> display_id ] . x	212:8:6123:6175	46325	2	True				
ANR	46509	AssignmentExpression	mouse -> x += uinput -> screen_info [ mouse -> display_id ] . x		46325	0		+=			
ANR	46510	PtrMemberAccess	mouse -> x		46325	0					
ANR	46511	Identifier	mouse		46325	0					
ANR	46512	Identifier	x		46325	1					
ANR	46513	MemberAccess	uinput -> screen_info [ mouse -> display_id ] . x		46325	1					
ANR	46514	ArrayIndexing	uinput -> screen_info [ mouse -> display_id ]		46325	0					
ANR	46515	PtrMemberAccess	uinput -> screen_info		46325	0					
ANR	46516	Identifier	uinput		46325	0					
ANR	46517	Identifier	screen_info		46325	1					
ANR	46518	PtrMemberAccess	mouse -> display_id		46325	1					
ANR	46519	Identifier	mouse		46325	0					
ANR	46520	Identifier	display_id		46325	1					
ANR	46521	Identifier	x		46325	1					
ANR	46522	ExpressionStatement	mouse -> y += uinput -> screen_info [ mouse -> display_id ] . y	213:8:6185:6237	46325	3	True				
ANR	46523	AssignmentExpression	mouse -> y += uinput -> screen_info [ mouse -> display_id ] . y		46325	0		+=			
ANR	46524	PtrMemberAccess	mouse -> y		46325	0					
ANR	46525	Identifier	mouse		46325	0					
ANR	46526	Identifier	y		46325	1					
ANR	46527	MemberAccess	uinput -> screen_info [ mouse -> display_id ] . y		46325	1					
ANR	46528	ArrayIndexing	uinput -> screen_info [ mouse -> display_id ]		46325	0					
ANR	46529	PtrMemberAccess	uinput -> screen_info		46325	0					
ANR	46530	Identifier	uinput		46325	0					
ANR	46531	Identifier	screen_info		46325	1					
ANR	46532	PtrMemberAccess	mouse -> display_id		46325	1					
ANR	46533	Identifier	mouse		46325	0					
ANR	46534	Identifier	display_id		46325	1					
ANR	46535	Identifier	y		46325	1					
ANR	46536	ExpressionStatement	mouse -> x = mouse -> x * 32767 / ( uinput -> width - 1 )	215:8:6273:6322	46325	4	True				
ANR	46537	AssignmentExpression	mouse -> x = mouse -> x * 32767 / ( uinput -> width - 1 )		46325	0		=			
ANR	46538	PtrMemberAccess	mouse -> x		46325	0					
ANR	46539	Identifier	mouse		46325	0					
ANR	46540	Identifier	x		46325	1					
ANR	46541	MultiplicativeExpression	mouse -> x * 32767 / ( uinput -> width - 1 )		46325	1		*			
ANR	46542	PtrMemberAccess	mouse -> x		46325	0					
ANR	46543	Identifier	mouse		46325	0					
ANR	46544	Identifier	x		46325	1					
ANR	46545	MultiplicativeExpression	32767 / ( uinput -> width - 1 )		46325	1		/			
ANR	46546	PrimaryExpression	32767		46325	0					
ANR	46547	AdditiveExpression	uinput -> width - 1		46325	1		-			
ANR	46548	PtrMemberAccess	uinput -> width		46325	0					
ANR	46549	Identifier	uinput		46325	0					
ANR	46550	Identifier	width		46325	1					
ANR	46551	PrimaryExpression	1		46325	1					
ANR	46552	ExpressionStatement	mouse -> y = mouse -> y * 32767 / ( uinput -> height - 1 )	216:8:6332:6382	46325	5	True				
ANR	46553	AssignmentExpression	mouse -> y = mouse -> y * 32767 / ( uinput -> height - 1 )		46325	0		=			
ANR	46554	PtrMemberAccess	mouse -> y		46325	0					
ANR	46555	Identifier	mouse		46325	0					
ANR	46556	Identifier	y		46325	1					
ANR	46557	MultiplicativeExpression	mouse -> y * 32767 / ( uinput -> height - 1 )		46325	1		*			
ANR	46558	PtrMemberAccess	mouse -> y		46325	0					
ANR	46559	Identifier	mouse		46325	0					
ANR	46560	Identifier	y		46325	1					
ANR	46561	MultiplicativeExpression	32767 / ( uinput -> height - 1 )		46325	1		/			
ANR	46562	PrimaryExpression	32767		46325	0					
ANR	46563	AdditiveExpression	uinput -> height - 1		46325	1		-			
ANR	46564	PtrMemberAccess	uinput -> height		46325	0					
ANR	46565	Identifier	uinput		46325	0					
ANR	46566	Identifier	height		46325	1					
ANR	46567	PrimaryExpression	1		46325	1					
ANR	46568	IfStatement	if ( * uinputp && uinput -> last . x != mouse -> x )		46325	25					
ANR	46569	Condition	* uinputp && uinput -> last . x != mouse -> x	220:8:6406:6443	46325	0	True				
ANR	46570	AndExpression	* uinputp && uinput -> last . x != mouse -> x		46325	0		&&			
ANR	46571	UnaryOperationExpression	* uinputp		46325	0					
ANR	46572	UnaryOperator	*		46325	0					
ANR	46573	Identifier	uinputp		46325	1					
ANR	46574	EqualityExpression	uinput -> last . x != mouse -> x		46325	1		!=			
ANR	46575	MemberAccess	uinput -> last . x		46325	0					
ANR	46576	PtrMemberAccess	uinput -> last		46325	0					
ANR	46577	Identifier	uinput		46325	0					
ANR	46578	Identifier	last		46325	1					
ANR	46579	Identifier	x		46325	1					
ANR	46580	PtrMemberAccess	mouse -> x		46325	1					
ANR	46581	Identifier	mouse		46325	0					
ANR	46582	Identifier	x		46325	1					
ANR	46583	CompoundStatement		36:48:1379:1379	46325	1					
ANR	46584	IfStatement	if ( uinput -> debug )		46325	0					
ANR	46585	Condition	uinput -> debug	221:12:6460:6472	46325	0	True				
ANR	46586	PtrMemberAccess	uinput -> debug		46325	0					
ANR	46587	Identifier	uinput		46325	0					
ANR	46588	Identifier	debug		46325	1					
ANR	46589	ExpressionStatement	"syslog ( LOG_DEBUG , ""mouse: abs-x %d"" , mouse -> x )"	222:12:6487:6533	46325	1	True				
ANR	46590	CallExpression	"syslog ( LOG_DEBUG , ""mouse: abs-x %d"" , mouse -> x )"		46325	0					
ANR	46591	Callee	syslog		46325	0					
ANR	46592	Identifier	syslog		46325	0					
ANR	46593	ArgumentList	LOG_DEBUG		46325	1					
ANR	46594	Argument	LOG_DEBUG		46325	0					
ANR	46595	Identifier	LOG_DEBUG		46325	0					
ANR	46596	Argument	"""mouse: abs-x %d"""		46325	1					
ANR	46597	PrimaryExpression	"""mouse: abs-x %d"""		46325	0					
ANR	46598	Argument	mouse -> x		46325	2					
ANR	46599	PtrMemberAccess	mouse -> x		46325	0					
ANR	46600	Identifier	mouse		46325	0					
ANR	46601	Identifier	x		46325	1					
ANR	46602	ExpressionStatement	"uinput_send_event ( uinputp , EV_ABS , ABS_X , mouse -> x )"	223:8:6543:6594	46325	1	True				
ANR	46603	CallExpression	"uinput_send_event ( uinputp , EV_ABS , ABS_X , mouse -> x )"		46325	0					
ANR	46604	Callee	uinput_send_event		46325	0					
ANR	46605	Identifier	uinput_send_event		46325	0					
ANR	46606	ArgumentList	uinputp		46325	1					
ANR	46607	Argument	uinputp		46325	0					
ANR	46608	Identifier	uinputp		46325	0					
ANR	46609	Argument	EV_ABS		46325	1					
ANR	46610	Identifier	EV_ABS		46325	0					
ANR	46611	Argument	ABS_X		46325	2					
ANR	46612	Identifier	ABS_X		46325	0					
ANR	46613	Argument	mouse -> x		46325	3					
ANR	46614	PtrMemberAccess	mouse -> x		46325	0					
ANR	46615	Identifier	mouse		46325	0					
ANR	46616	Identifier	x		46325	1					
ANR	46617	IfStatement	if ( * uinputp && uinput -> last . y != mouse -> y )		46325	26					
ANR	46618	Condition	* uinputp && uinput -> last . y != mouse -> y	225:8:6610:6647	46325	0	True				
ANR	46619	AndExpression	* uinputp && uinput -> last . y != mouse -> y		46325	0		&&			
ANR	46620	UnaryOperationExpression	* uinputp		46325	0					
ANR	46621	UnaryOperator	*		46325	0					
ANR	46622	Identifier	uinputp		46325	1					
ANR	46623	EqualityExpression	uinput -> last . y != mouse -> y		46325	1		!=			
ANR	46624	MemberAccess	uinput -> last . y		46325	0					
ANR	46625	PtrMemberAccess	uinput -> last		46325	0					
ANR	46626	Identifier	uinput		46325	0					
ANR	46627	Identifier	last		46325	1					
ANR	46628	Identifier	y		46325	1					
ANR	46629	PtrMemberAccess	mouse -> y		46325	1					
ANR	46630	Identifier	mouse		46325	0					
ANR	46631	Identifier	y		46325	1					
ANR	46632	CompoundStatement		41:48:1583:1583	46325	1					
ANR	46633	IfStatement	if ( uinput -> debug )		46325	0					
ANR	46634	Condition	uinput -> debug	226:12:6664:6676	46325	0	True				
ANR	46635	PtrMemberAccess	uinput -> debug		46325	0					
ANR	46636	Identifier	uinput		46325	0					
ANR	46637	Identifier	debug		46325	1					
ANR	46638	ExpressionStatement	"syslog ( LOG_DEBUG , ""mouse: abs-y %d"" , mouse -> y )"	227:12:6691:6737	46325	1	True				
ANR	46639	CallExpression	"syslog ( LOG_DEBUG , ""mouse: abs-y %d"" , mouse -> y )"		46325	0					
ANR	46640	Callee	syslog		46325	0					
ANR	46641	Identifier	syslog		46325	0					
ANR	46642	ArgumentList	LOG_DEBUG		46325	1					
ANR	46643	Argument	LOG_DEBUG		46325	0					
ANR	46644	Identifier	LOG_DEBUG		46325	0					
ANR	46645	Argument	"""mouse: abs-y %d"""		46325	1					
ANR	46646	PrimaryExpression	"""mouse: abs-y %d"""		46325	0					
ANR	46647	Argument	mouse -> y		46325	2					
ANR	46648	PtrMemberAccess	mouse -> y		46325	0					
ANR	46649	Identifier	mouse		46325	0					
ANR	46650	Identifier	y		46325	1					
ANR	46651	ExpressionStatement	"uinput_send_event ( uinputp , EV_ABS , ABS_Y , mouse -> y )"	228:8:6747:6798	46325	1	True				
ANR	46652	CallExpression	"uinput_send_event ( uinputp , EV_ABS , ABS_Y , mouse -> y )"		46325	0					
ANR	46653	Callee	uinput_send_event		46325	0					
ANR	46654	Identifier	uinput_send_event		46325	0					
ANR	46655	ArgumentList	uinputp		46325	1					
ANR	46656	Argument	uinputp		46325	0					
ANR	46657	Identifier	uinputp		46325	0					
ANR	46658	Argument	EV_ABS		46325	1					
ANR	46659	Identifier	EV_ABS		46325	0					
ANR	46660	Argument	ABS_Y		46325	2					
ANR	46661	Identifier	ABS_Y		46325	0					
ANR	46662	Argument	mouse -> y		46325	3					
ANR	46663	PtrMemberAccess	mouse -> y		46325	0					
ANR	46664	Identifier	mouse		46325	0					
ANR	46665	Identifier	y		46325	1					
ANR	46666	ForStatement	for ( i = 0 ; i < sizeof ( btns ) / sizeof ( btns [ 0 ] ) && * uinputp ; i ++ )		46325	27					
ANR	46667	ForInit	i = 0 ;	230:9:6815:6820	46325	0	True				
ANR	46668	AssignmentExpression	i = 0		46325	0		=			
ANR	46669	Identifier	i		46325	0					
ANR	46670	PrimaryExpression	0		46325	1					
ANR	46671	Condition	i < sizeof ( btns ) / sizeof ( btns [ 0 ] ) && * uinputp	230:16:6822:6865	46325	1	True				
ANR	46672	AndExpression	i < sizeof ( btns ) / sizeof ( btns [ 0 ] ) && * uinputp		46325	0		&&			
ANR	46673	RelationalExpression	i < sizeof ( btns ) / sizeof ( btns [ 0 ] )		46325	0		<			
ANR	46674	Identifier	i		46325	0					
ANR	46675	MultiplicativeExpression	sizeof ( btns ) / sizeof ( btns [ 0 ] )		46325	1		/			
ANR	46676	SizeofExpression	sizeof ( btns )		46325	0					
ANR	46677	Sizeof	sizeof		46325	0					
ANR	46678	SizeofOperand	btns		46325	1					
ANR	46679	SizeofExpression	sizeof ( btns [ 0 ] )		46325	1					
ANR	46680	Sizeof	sizeof		46325	0					
ANR	46681	ArrayIndexing	btns [ 0 ]		46325	1					
ANR	46682	Identifier	btns		46325	0					
ANR	46683	PrimaryExpression	0		46325	1					
ANR	46684	UnaryOperationExpression	* uinputp		46325	1					
ANR	46685	UnaryOperator	*		46325	0					
ANR	46686	Identifier	uinputp		46325	1					
ANR	46687	PostIncDecOperationExpression	i ++	230:62:6868:6870	46325	2	True				
ANR	46688	Identifier	i		46325	0					
ANR	46689	IncDec	++		46325	1					
ANR	46690	CompoundStatement		46:67:1806:1806	46325	3					
ANR	46691	IfStatement	if ( ( uinput -> last . buttons & btns [ i ] . mask ) == ( mouse -> buttons & btns [ i ] . mask ) )		46325	0					
ANR	46692	Condition	( uinput -> last . buttons & btns [ i ] . mask ) == ( mouse -> buttons & btns [ i ] . mask )	231:12:6887:6974	46325	0	True				
ANR	46693	EqualityExpression	( uinput -> last . buttons & btns [ i ] . mask ) == ( mouse -> buttons & btns [ i ] . mask )		46325	0		==			
ANR	46694	BitAndExpression	uinput -> last . buttons & btns [ i ] . mask		46325	0		&			
ANR	46695	MemberAccess	uinput -> last . buttons		46325	0					
ANR	46696	PtrMemberAccess	uinput -> last		46325	0					
ANR	46697	Identifier	uinput		46325	0					
ANR	46698	Identifier	last		46325	1					
ANR	46699	Identifier	buttons		46325	1					
ANR	46700	MemberAccess	btns [ i ] . mask		46325	1					
ANR	46701	ArrayIndexing	btns [ i ]		46325	0					
ANR	46702	Identifier	btns		46325	0					
ANR	46703	Identifier	i		46325	1					
ANR	46704	Identifier	mask		46325	1					
ANR	46705	BitAndExpression	mouse -> buttons & btns [ i ] . mask		46325	1		&			
ANR	46706	PtrMemberAccess	mouse -> buttons		46325	0					
ANR	46707	Identifier	mouse		46325	0					
ANR	46708	Identifier	buttons		46325	1					
ANR	46709	MemberAccess	btns [ i ] . mask		46325	1					
ANR	46710	ArrayIndexing	btns [ i ]		46325	0					
ANR	46711	Identifier	btns		46325	0					
ANR	46712	Identifier	i		46325	1					
ANR	46713	Identifier	mask		46325	1					
ANR	46714	ContinueStatement	continue ;	233:12:6989:6997	46325	1	True				
ANR	46715	ExpressionStatement	down = ! ! ( mouse -> buttons & btns [ i ] . mask )	234:8:7007:7047	46325	1	True				
ANR	46716	AssignmentExpression	down = ! ! ( mouse -> buttons & btns [ i ] . mask )		46325	0		=			
ANR	46717	Identifier	down		46325	0					
ANR	46718	UnaryOperationExpression	! ! ( mouse -> buttons & btns [ i ] . mask )		46325	1					
ANR	46719	UnaryOperator	!		46325	0					
ANR	46720	UnaryOperationExpression	! ( mouse -> buttons & btns [ i ] . mask )		46325	1					
ANR	46721	UnaryOperator	!		46325	0					
ANR	46722	BitAndExpression	mouse -> buttons & btns [ i ] . mask		46325	1		&			
ANR	46723	PtrMemberAccess	mouse -> buttons		46325	0					
ANR	46724	Identifier	mouse		46325	0					
ANR	46725	Identifier	buttons		46325	1					
ANR	46726	MemberAccess	btns [ i ] . mask		46325	1					
ANR	46727	ArrayIndexing	btns [ i ]		46325	0					
ANR	46728	Identifier	btns		46325	0					
ANR	46729	Identifier	i		46325	1					
ANR	46730	Identifier	mask		46325	1					
ANR	46731	IfStatement	if ( uinput -> debug )		46325	2					
ANR	46732	Condition	uinput -> debug	235:12:7061:7073	46325	0	True				
ANR	46733	PtrMemberAccess	uinput -> debug		46325	0					
ANR	46734	Identifier	uinput		46325	0					
ANR	46735	Identifier	debug		46325	1					
ANR	46736	ExpressionStatement	"syslog ( LOG_DEBUG , ""mouse: btn-%s %s"" , btns [ i ] . name , down ? ""down"" : ""up"" )"	236:12:7088:7181	46325	1	True				
ANR	46737	CallExpression	"syslog ( LOG_DEBUG , ""mouse: btn-%s %s"" , btns [ i ] . name , down ? ""down"" : ""up"" )"		46325	0					
ANR	46738	Callee	syslog		46325	0					
ANR	46739	Identifier	syslog		46325	0					
ANR	46740	ArgumentList	LOG_DEBUG		46325	1					
ANR	46741	Argument	LOG_DEBUG		46325	0					
ANR	46742	Identifier	LOG_DEBUG		46325	0					
ANR	46743	Argument	"""mouse: btn-%s %s"""		46325	1					
ANR	46744	PrimaryExpression	"""mouse: btn-%s %s"""		46325	0					
ANR	46745	Argument	btns [ i ] . name		46325	2					
ANR	46746	MemberAccess	btns [ i ] . name		46325	0					
ANR	46747	ArrayIndexing	btns [ i ]		46325	0					
ANR	46748	Identifier	btns		46325	0					
ANR	46749	Identifier	i		46325	1					
ANR	46750	Identifier	name		46325	1					
ANR	46751	Argument	"down ? ""down"" : ""up"""		46325	3					
ANR	46752	ConditionalExpression	"down ? ""down"" : ""up"""		46325	0					
ANR	46753	Condition	down		46325	0					
ANR	46754	Identifier	down		46325	0					
ANR	46755	PrimaryExpression	"""down"""		46325	1					
ANR	46756	PrimaryExpression	"""up"""		46325	2					
ANR	46757	ExpressionStatement	"uinput_send_event ( uinputp , EV_KEY , btns [ i ] . btn , down )"	238:8:7191:7244	46325	3	True				
ANR	46758	CallExpression	"uinput_send_event ( uinputp , EV_KEY , btns [ i ] . btn , down )"		46325	0					
ANR	46759	Callee	uinput_send_event		46325	0					
ANR	46760	Identifier	uinput_send_event		46325	0					
ANR	46761	ArgumentList	uinputp		46325	1					
ANR	46762	Argument	uinputp		46325	0					
ANR	46763	Identifier	uinputp		46325	0					
ANR	46764	Argument	EV_KEY		46325	1					
ANR	46765	Identifier	EV_KEY		46325	0					
ANR	46766	Argument	btns [ i ] . btn		46325	2					
ANR	46767	MemberAccess	btns [ i ] . btn		46325	0					
ANR	46768	ArrayIndexing	btns [ i ]		46325	0					
ANR	46769	Identifier	btns		46325	0					
ANR	46770	Identifier	i		46325	1					
ANR	46771	Identifier	btn		46325	1					
ANR	46772	Argument	down		46325	3					
ANR	46773	Identifier	down		46325	0					
ANR	46774	ForStatement	for ( i = 0 ; i < sizeof ( wheel ) / sizeof ( wheel [ 0 ] ) && * uinputp ; i ++ )		46325	28					
ANR	46775	ForInit	i = 0 ;	240:9:7261:7266	46325	0	True				
ANR	46776	AssignmentExpression	i = 0		46325	0		=			
ANR	46777	Identifier	i		46325	0					
ANR	46778	PrimaryExpression	0		46325	1					
ANR	46779	Condition	i < sizeof ( wheel ) / sizeof ( wheel [ 0 ] ) && * uinputp	240:16:7268:7313	46325	1	True				
ANR	46780	AndExpression	i < sizeof ( wheel ) / sizeof ( wheel [ 0 ] ) && * uinputp		46325	0		&&			
ANR	46781	RelationalExpression	i < sizeof ( wheel ) / sizeof ( wheel [ 0 ] )		46325	0		<			
ANR	46782	Identifier	i		46325	0					
ANR	46783	MultiplicativeExpression	sizeof ( wheel ) / sizeof ( wheel [ 0 ] )		46325	1		/			
ANR	46784	SizeofExpression	sizeof ( wheel )		46325	0					
ANR	46785	Sizeof	sizeof		46325	0					
ANR	46786	SizeofOperand	wheel		46325	1					
ANR	46787	SizeofExpression	sizeof ( wheel [ 0 ] )		46325	1					
ANR	46788	Sizeof	sizeof		46325	0					
ANR	46789	ArrayIndexing	wheel [ 0 ]		46325	1					
ANR	46790	Identifier	wheel		46325	0					
ANR	46791	PrimaryExpression	0		46325	1					
ANR	46792	UnaryOperationExpression	* uinputp		46325	1					
ANR	46793	UnaryOperator	*		46325	0					
ANR	46794	Identifier	uinputp		46325	1					
ANR	46795	PostIncDecOperationExpression	i ++	240:64:7316:7318	46325	2	True				
ANR	46796	Identifier	i		46325	0					
ANR	46797	IncDec	++		46325	1					
ANR	46798	CompoundStatement		56:69:2254:2254	46325	3					
ANR	46799	IfStatement	if ( ( uinput -> last . buttons & wheel [ i ] . mask ) == ( mouse -> buttons & wheel [ i ] . mask ) )		46325	0					
ANR	46800	Condition	( uinput -> last . buttons & wheel [ i ] . mask ) == ( mouse -> buttons & wheel [ i ] . mask )	241:12:7335:7424	46325	0	True				
ANR	46801	EqualityExpression	( uinput -> last . buttons & wheel [ i ] . mask ) == ( mouse -> buttons & wheel [ i ] . mask )		46325	0		==			
ANR	46802	BitAndExpression	uinput -> last . buttons & wheel [ i ] . mask		46325	0		&			
ANR	46803	MemberAccess	uinput -> last . buttons		46325	0					
ANR	46804	PtrMemberAccess	uinput -> last		46325	0					
ANR	46805	Identifier	uinput		46325	0					
ANR	46806	Identifier	last		46325	1					
ANR	46807	Identifier	buttons		46325	1					
ANR	46808	MemberAccess	wheel [ i ] . mask		46325	1					
ANR	46809	ArrayIndexing	wheel [ i ]		46325	0					
ANR	46810	Identifier	wheel		46325	0					
ANR	46811	Identifier	i		46325	1					
ANR	46812	Identifier	mask		46325	1					
ANR	46813	BitAndExpression	mouse -> buttons & wheel [ i ] . mask		46325	1		&			
ANR	46814	PtrMemberAccess	mouse -> buttons		46325	0					
ANR	46815	Identifier	mouse		46325	0					
ANR	46816	Identifier	buttons		46325	1					
ANR	46817	MemberAccess	wheel [ i ] . mask		46325	1					
ANR	46818	ArrayIndexing	wheel [ i ]		46325	0					
ANR	46819	Identifier	wheel		46325	0					
ANR	46820	Identifier	i		46325	1					
ANR	46821	Identifier	mask		46325	1					
ANR	46822	ContinueStatement	continue ;	243:12:7439:7447	46325	1	True				
ANR	46823	IfStatement	if ( mouse -> buttons & wheel [ i ] . mask )		46325	1					
ANR	46824	Condition	mouse -> buttons & wheel [ i ] . mask	244:12:7461:7490	46325	0	True				
ANR	46825	BitAndExpression	mouse -> buttons & wheel [ i ] . mask		46325	0		&			
ANR	46826	PtrMemberAccess	mouse -> buttons		46325	0					
ANR	46827	Identifier	mouse		46325	0					
ANR	46828	Identifier	buttons		46325	1					
ANR	46829	MemberAccess	wheel [ i ] . mask		46325	1					
ANR	46830	ArrayIndexing	wheel [ i ]		46325	0					
ANR	46831	Identifier	wheel		46325	0					
ANR	46832	Identifier	i		46325	1					
ANR	46833	Identifier	mask		46325	1					
ANR	46834	CompoundStatement		60:44:2426:2426	46325	1					
ANR	46835	IfStatement	if ( uinput -> debug )		46325	0					
ANR	46836	Condition	uinput -> debug	245:16:7511:7523	46325	0	True				
ANR	46837	PtrMemberAccess	uinput -> debug		46325	0					
ANR	46838	Identifier	uinput		46325	0					
ANR	46839	Identifier	debug		46325	1					
ANR	46840	ExpressionStatement	"syslog ( LOG_DEBUG , ""mouse: wheel-%s"" , wheel [ i ] . name )"	246:16:7542:7593	46325	1	True				
ANR	46841	CallExpression	"syslog ( LOG_DEBUG , ""mouse: wheel-%s"" , wheel [ i ] . name )"		46325	0					
ANR	46842	Callee	syslog		46325	0					
ANR	46843	Identifier	syslog		46325	0					
ANR	46844	ArgumentList	LOG_DEBUG		46325	1					
ANR	46845	Argument	LOG_DEBUG		46325	0					
ANR	46846	Identifier	LOG_DEBUG		46325	0					
ANR	46847	Argument	"""mouse: wheel-%s"""		46325	1					
ANR	46848	PrimaryExpression	"""mouse: wheel-%s"""		46325	0					
ANR	46849	Argument	wheel [ i ] . name		46325	2					
ANR	46850	MemberAccess	wheel [ i ] . name		46325	0					
ANR	46851	ArrayIndexing	wheel [ i ]		46325	0					
ANR	46852	Identifier	wheel		46325	0					
ANR	46853	Identifier	i		46325	1					
ANR	46854	Identifier	name		46325	1					
ANR	46855	ExpressionStatement	"uinput_send_event ( uinputp , EV_REL , REL_WHEEL , wheel [ i ] . btn )"	247:12:7607:7666	46325	1	True				
ANR	46856	CallExpression	"uinput_send_event ( uinputp , EV_REL , REL_WHEEL , wheel [ i ] . btn )"		46325	0					
ANR	46857	Callee	uinput_send_event		46325	0					
ANR	46858	Identifier	uinput_send_event		46325	0					
ANR	46859	ArgumentList	uinputp		46325	1					
ANR	46860	Argument	uinputp		46325	0					
ANR	46861	Identifier	uinputp		46325	0					
ANR	46862	Argument	EV_REL		46325	1					
ANR	46863	Identifier	EV_REL		46325	0					
ANR	46864	Argument	REL_WHEEL		46325	2					
ANR	46865	Identifier	REL_WHEEL		46325	0					
ANR	46866	Argument	wheel [ i ] . btn		46325	3					
ANR	46867	MemberAccess	wheel [ i ] . btn		46325	0					
ANR	46868	ArrayIndexing	wheel [ i ]		46325	0					
ANR	46869	Identifier	wheel		46325	0					
ANR	46870	Identifier	i		46325	1					
ANR	46871	Identifier	btn		46325	1					
ANR	46872	IfStatement	if ( * uinputp )		46325	29					
ANR	46873	Condition	* uinputp	251:8:7693:7700	46325	0	True				
ANR	46874	UnaryOperationExpression	* uinputp		46325	0					
ANR	46875	UnaryOperator	*		46325	0					
ANR	46876	Identifier	uinputp		46325	1					
ANR	46877	CompoundStatement		67:18:2636:2636	46325	1					
ANR	46878	IfStatement	if ( uinput -> debug )		46325	0					
ANR	46879	Condition	uinput -> debug	252:12:7717:7729	46325	0	True				
ANR	46880	PtrMemberAccess	uinput -> debug		46325	0					
ANR	46881	Identifier	uinput		46325	0					
ANR	46882	Identifier	debug		46325	1					
ANR	46883	ExpressionStatement	"syslog ( LOG_DEBUG , ""mouse: syn"" )"	253:12:7744:7775	46325	1	True				
ANR	46884	CallExpression	"syslog ( LOG_DEBUG , ""mouse: syn"" )"		46325	0					
ANR	46885	Callee	syslog		46325	0					
ANR	46886	Identifier	syslog		46325	0					
ANR	46887	ArgumentList	LOG_DEBUG		46325	1					
ANR	46888	Argument	LOG_DEBUG		46325	0					
ANR	46889	Identifier	LOG_DEBUG		46325	0					
ANR	46890	Argument	"""mouse: syn"""		46325	1					
ANR	46891	PrimaryExpression	"""mouse: syn"""		46325	0					
ANR	46892	ExpressionStatement	"uinput_send_event ( uinputp , EV_SYN , SYN_REPORT , 0 )"	254:8:7785:7834	46325	1	True				
ANR	46893	CallExpression	"uinput_send_event ( uinputp , EV_SYN , SYN_REPORT , 0 )"		46325	0					
ANR	46894	Callee	uinput_send_event		46325	0					
ANR	46895	Identifier	uinput_send_event		46325	0					
ANR	46896	ArgumentList	uinputp		46325	1					
ANR	46897	Argument	uinputp		46325	0					
ANR	46898	Identifier	uinputp		46325	0					
ANR	46899	Argument	EV_SYN		46325	1					
ANR	46900	Identifier	EV_SYN		46325	0					
ANR	46901	Argument	SYN_REPORT		46325	2					
ANR	46902	Identifier	SYN_REPORT		46325	0					
ANR	46903	Argument	0		46325	3					
ANR	46904	PrimaryExpression	0		46325	0					
ANR	46905	IfStatement	if ( * uinputp )		46325	30					
ANR	46906	Condition	* uinputp	257:8:7851:7858	46325	0	True				
ANR	46907	UnaryOperationExpression	* uinputp		46325	0					
ANR	46908	UnaryOperator	*		46325	0					
ANR	46909	Identifier	uinputp		46325	1					
ANR	46910	ExpressionStatement	uinput -> last = * mouse	258:8:7869:7890	46325	1	True				
ANR	46911	AssignmentExpression	uinput -> last = * mouse		46325	0		=			
ANR	46912	PtrMemberAccess	uinput -> last		46325	0					
ANR	46913	Identifier	uinput		46325	0					
ANR	46914	Identifier	last		46325	1					
ANR	46915	UnaryOperationExpression	* mouse		46325	1					
ANR	46916	UnaryOperator	*		46325	0					
ANR	46917	Identifier	mouse		46325	1					
ANR	46918	ReturnType	void		46325	1					
ANR	46919	Identifier	vdagentd_uinput_do_mouse		46325	2					
ANR	46920	ParameterList	"struct vdagentd_uinput * * uinputp , VDAgentMouseState * mouse"		46325	3					
ANR	46921	Parameter	struct vdagentd_uinput * * uinputp	183:30:4998:5029	46325	0	True				
ANR	46922	ParameterType	struct vdagentd_uinput * *		46325	0					
ANR	46923	Identifier	uinputp		46325	1					
ANR	46924	Parameter	VDAgentMouseState * mouse	184:8:5040:5063	46325	1	True				
ANR	46925	ParameterType	VDAgentMouseState *		46325	0					
ANR	46926	Identifier	mouse		46325	1					
ANR	46927	CFGEntryNode	ENTRY		46325		True				
ANR	46928	CFGExitNode	EXIT		46325		True				
ANR	46929	Symbol	mouse -> buttons		46325						
ANR	46930	Symbol	btns [ i ] . btn		46325						
ANR	46931	Symbol	uinput -> last . x		46325						
ANR	46932	Symbol	LOG_WARNING		46325						
ANR	46933	Symbol	uinput -> last		46325						
ANR	46934	Symbol	uinput -> last . y		46325						
ANR	46935	Symbol	REL_WHEEL		46325						
ANR	46936	Symbol	down		46325						
ANR	46937	Symbol	* * mouse		46325						
ANR	46938	Symbol	EV_REL		46325						
ANR	46939	Symbol	mouse		46325						
ANR	46940	Symbol	* btns		46325						
ANR	46941	Symbol	uinput -> height		46325						
ANR	46942	Symbol	uinput -> screen_count		46325						
ANR	46943	Symbol	* * uinput		46325						
ANR	46944	Symbol	wheel [ i ] . name		46325						
ANR	46945	Symbol	uinput -> screen_info [ mouse -> display_id ] . x		46325						
ANR	46946	Symbol	uinput		46325						
ANR	46947	Symbol	EV_KEY		46325						
ANR	46948	Symbol	ABS_X		46325						
ANR	46949	Symbol	btns [ i ] . name		46325						
ANR	46950	Symbol	uinput -> screen_info [ mouse -> display_id ] . y		46325						
ANR	46951	Symbol	mouse -> y		46325						
ANR	46952	Symbol	mouse -> x		46325						
ANR	46953	Symbol	ABS_Y		46325						
ANR	46954	Symbol	EV_ABS		46325						
ANR	46955	Symbol	* mouse -> display_id		46325						
ANR	46956	Symbol	wheel		46325						
ANR	46957	Symbol	i		46325						
ANR	46958	Symbol	wheel [ i ] . btn		46325						
ANR	46959	Symbol	* uinput -> screen_info		46325						
ANR	46960	Symbol	* uinputp		46325						
ANR	46961	Symbol	mouse -> display_id		46325						
ANR	46962	Symbol	uinput -> debug		46325						
ANR	46963	Symbol	uinput -> screen_info		46325						
ANR	46964	Symbol	uinput -> width		46325						
ANR	46965	Symbol	SYN_REPORT		46325						
ANR	46966	Symbol	* uinput		46325						
ANR	46967	Symbol	uinput -> last . buttons		46325						
ANR	46968	Symbol	uinputp		46325						
ANR	46969	Symbol	* i		46325						
ANR	46970	Symbol	wheel [ i ] . mask		46325						
ANR	46971	Symbol	btns		46325						
ANR	46972	Symbol	* mouse		46325						
ANR	46973	Symbol	btns [ i ] . mask		46325						
ANR	46974	Symbol	LOG_DEBUG		46325						
ANR	46975	Symbol	* wheel		46325						
ANR	46976	Symbol	EV_SYN		46325						
