command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	54601	File	data/converged/CVE-2017-15108_vd_agent/virtio-port.c								
ANR	54602	ClassDef	vdagent_virtio_port_buf	36:0:1042:1191							
ANR	54603	DeclStmt									
ANR	54604	Decl							uint8_t	uint8_t *	buf
ANR	54605	DeclStmt									
ANR	54606	Decl							size_t	size_t	pos
ANR	54607	DeclStmt									
ANR	54608	Decl							size_t	size_t	size
ANR	54609	DeclStmt									
ANR	54610	Decl							size_t	size_t	write_pos
ANR	54611	DeclStmt									
ANR	54612	Decl							struct vdagent_virtio_port_buf	struct vdagent_virtio_port_buf *	next
ANR	54613	ClassDef	vdagent_virtio_port_chunk_port_data	47:0:1310:1472							
ANR	54614	DeclStmt									
ANR	54615	Decl							int	int	message_header_read
ANR	54616	DeclStmt									
ANR	54617	Decl							int	int	message_data_pos
ANR	54618	DeclStmt									
ANR	54619	Decl							VDAgentMessage	VDAgentMessage	message_header
ANR	54620	DeclStmt									
ANR	54621	Decl							uint8_t	uint8_t *	message_data
ANR	54622	ClassDef	vdagent_virtio_port	54:0:1476:2174							
ANR	54623	DeclStmt									
ANR	54624	Decl							int	int	fd
ANR	54625	DeclStmt									
ANR	54626	Decl							int	int	opening
ANR	54627	DeclStmt									
ANR	54628	Decl							int	int	is_uds
ANR	54629	DeclStmt									
ANR	54630	Decl							int	int	chunk_header_read
ANR	54631	DeclStmt									
ANR	54632	Decl							int	int	chunk_data_pos
ANR	54633	DeclStmt									
ANR	54634	Decl							VDIChunkHeader	VDIChunkHeader	chunk_header
ANR	54635	DeclStmt									
ANR	54636	Decl							uint8_t	uint8_t [ VD_AGENT_MAX_DATA_SIZE ]	chunk_data
ANR	54637	DeclStmt									
ANR	54638	Decl							struct vdagent_virtio_port_chunk_port_data	struct vdagent_virtio_port_chunk_port_data [ VDP_END_PORT ]	port_data
ANR	54639	DeclStmt									
ANR	54640	Decl							struct vdagent_virtio_port_buf	struct vdagent_virtio_port_buf *	write_buf
ANR	54641	DeclStmt									
ANR	54642	Decl							vdagent_virtio_port_read_callback	vdagent_virtio_port_read_callback	read_callback
ANR	54643	DeclStmt									
ANR	54644	Decl							vdagent_virtio_port_disconnect_callback	vdagent_virtio_port_disconnect_callback	disconnect_callback
ANR	54645	DeclStmt									
ANR	54646	Decl							void	void ( struct vdagent_virtio_port * * vportp )	vdagent_virtio_port_do_write
ANR	54647	DeclStmt									
ANR	54648	Decl							void	void ( struct vdagent_virtio_port * * vportp )	vdagent_virtio_port_do_read
ANR	54649	Function	vdagent_virtio_port_create	80:0:2336:3506							
ANR	54650	FunctionDef	"vdagent_virtio_port_create (const char * portname , vdagent_virtio_port_read_callback read_callback , vdagent_virtio_port_disconnect_callback disconnect_callback)"		54649	0					
ANR	54651	CompoundStatement		83:0:2531:3506	54649	0					
ANR	54652	IdentifierDeclStatement	struct vdagent_virtio_port * vport ;	84:4:2537:2570	54649	0	True				
ANR	54653	IdentifierDecl	* vport		54649	0					
ANR	54654	IdentifierDeclType	struct vdagent_virtio_port *		54649	0					
ANR	54655	Identifier	vport		54649	1					
ANR	54656	IdentifierDeclStatement	struct sockaddr_un address ;	85:4:2576:2602	54649	1	True				
ANR	54657	IdentifierDecl	address		54649	0					
ANR	54658	IdentifierDeclType	struct sockaddr_un		54649	0					
ANR	54659	Identifier	address		54649	1					
ANR	54660	IdentifierDeclStatement	int c ;	86:4:2608:2613	54649	2	True				
ANR	54661	IdentifierDecl	c		54649	0					
ANR	54662	IdentifierDeclType	int		54649	0					
ANR	54663	Identifier	c		54649	1					
ANR	54664	ExpressionStatement	"vport = calloc ( 1 , sizeof ( * vport ) )"	88:4:2620:2653	54649	3	True				
ANR	54665	AssignmentExpression	"vport = calloc ( 1 , sizeof ( * vport ) )"		54649	0		=			
ANR	54666	Identifier	vport		54649	0					
ANR	54667	CallExpression	"calloc ( 1 , sizeof ( * vport ) )"		54649	1					
ANR	54668	Callee	calloc		54649	0					
ANR	54669	Identifier	calloc		54649	0					
ANR	54670	ArgumentList	1		54649	1					
ANR	54671	Argument	1		54649	0					
ANR	54672	PrimaryExpression	1		54649	0					
ANR	54673	Argument	sizeof ( * vport )		54649	1					
ANR	54674	SizeofExpression	sizeof ( * vport )		54649	0					
ANR	54675	Sizeof	sizeof		54649	0					
ANR	54676	UnaryOperationExpression	* vport		54649	1					
ANR	54677	UnaryOperator	*		54649	0					
ANR	54678	Identifier	vport		54649	1					
ANR	54679	IfStatement	if ( ! vport )		54649	4					
ANR	54680	Condition	! vport	89:8:2663:2668	54649	0	True				
ANR	54681	UnaryOperationExpression	! vport		54649	0					
ANR	54682	UnaryOperator	!		54649	0					
ANR	54683	Identifier	vport		54649	1					
ANR	54684	ReturnStatement	return 0 ;	90:8:2679:2687	54649	1	True				
ANR	54685	PrimaryExpression	0		54649	0					
ANR	54686	ExpressionStatement	"vport -> fd = open ( portname , O_RDWR )"	92:4:2694:2728	54649	5	True				
ANR	54687	AssignmentExpression	"vport -> fd = open ( portname , O_RDWR )"		54649	0		=			
ANR	54688	PtrMemberAccess	vport -> fd		54649	0					
ANR	54689	Identifier	vport		54649	0					
ANR	54690	Identifier	fd		54649	1					
ANR	54691	CallExpression	"open ( portname , O_RDWR )"		54649	1					
ANR	54692	Callee	open		54649	0					
ANR	54693	Identifier	open		54649	0					
ANR	54694	ArgumentList	portname		54649	1					
ANR	54695	Argument	portname		54649	0					
ANR	54696	Identifier	portname		54649	0					
ANR	54697	Argument	O_RDWR		54649	1					
ANR	54698	Identifier	O_RDWR		54649	0					
ANR	54699	IfStatement	if ( vport -> fd == - 1 )		54649	6					
ANR	54700	Condition	vport -> fd == - 1	93:8:2738:2752	54649	0	True				
ANR	54701	EqualityExpression	vport -> fd == - 1		54649	0		==			
ANR	54702	PtrMemberAccess	vport -> fd		54649	0					
ANR	54703	Identifier	vport		54649	0					
ANR	54704	Identifier	fd		54649	1					
ANR	54705	UnaryOperationExpression	- 1		54649	1					
ANR	54706	UnaryOperator	-		54649	0					
ANR	54707	PrimaryExpression	1		54649	1					
ANR	54708	CompoundStatement		11:25:223:223	54649	1					
ANR	54709	ExpressionStatement	"vport -> fd = socket ( PF_UNIX , SOCK_STREAM , 0 )"	94:8:2765:2808	54649	0	True				
ANR	54710	AssignmentExpression	"vport -> fd = socket ( PF_UNIX , SOCK_STREAM , 0 )"		54649	0		=			
ANR	54711	PtrMemberAccess	vport -> fd		54649	0					
ANR	54712	Identifier	vport		54649	0					
ANR	54713	Identifier	fd		54649	1					
ANR	54714	CallExpression	"socket ( PF_UNIX , SOCK_STREAM , 0 )"		54649	1					
ANR	54715	Callee	socket		54649	0					
ANR	54716	Identifier	socket		54649	0					
ANR	54717	ArgumentList	PF_UNIX		54649	1					
ANR	54718	Argument	PF_UNIX		54649	0					
ANR	54719	Identifier	PF_UNIX		54649	0					
ANR	54720	Argument	SOCK_STREAM		54649	1					
ANR	54721	Identifier	SOCK_STREAM		54649	0					
ANR	54722	Argument	0		54649	2					
ANR	54723	PrimaryExpression	0		54649	0					
ANR	54724	IfStatement	if ( vport -> fd == - 1 )		54649	1					
ANR	54725	Condition	vport -> fd == - 1	95:12:2822:2836	54649	0	True				
ANR	54726	EqualityExpression	vport -> fd == - 1		54649	0		==			
ANR	54727	PtrMemberAccess	vport -> fd		54649	0					
ANR	54728	Identifier	vport		54649	0					
ANR	54729	Identifier	fd		54649	1					
ANR	54730	UnaryOperationExpression	- 1		54649	1					
ANR	54731	UnaryOperator	-		54649	0					
ANR	54732	PrimaryExpression	1		54649	1					
ANR	54733	CompoundStatement		13:29:307:307	54649	1					
ANR	54734	GotoStatement	goto error ;	96:12:2853:2863	54649	0	True				
ANR	54735	Identifier	error		54649	0					
ANR	54736	ExpressionStatement	address . sun_family = AF_UNIX	98:8:2883:2911	54649	2	True				
ANR	54737	AssignmentExpression	address . sun_family = AF_UNIX		54649	0		=			
ANR	54738	MemberAccess	address . sun_family		54649	0					
ANR	54739	Identifier	address		54649	0					
ANR	54740	Identifier	sun_family		54649	1					
ANR	54741	Identifier	AF_UNIX		54649	1					
ANR	54742	ExpressionStatement	"snprintf ( address . sun_path , sizeof ( address . sun_path ) , ""%s"" , portname )"	99:8:2921:2989	54649	3	True				
ANR	54743	CallExpression	"snprintf ( address . sun_path , sizeof ( address . sun_path ) , ""%s"" , portname )"		54649	0					
ANR	54744	Callee	snprintf		54649	0					
ANR	54745	Identifier	snprintf		54649	0					
ANR	54746	ArgumentList	address . sun_path		54649	1					
ANR	54747	Argument	address . sun_path		54649	0					
ANR	54748	MemberAccess	address . sun_path		54649	0					
ANR	54749	Identifier	address		54649	0					
ANR	54750	Identifier	sun_path		54649	1					
ANR	54751	Argument	sizeof ( address . sun_path )		54649	1					
ANR	54752	SizeofExpression	sizeof ( address . sun_path )		54649	0					
ANR	54753	Sizeof	sizeof		54649	0					
ANR	54754	MemberAccess	address . sun_path		54649	1					
ANR	54755	Identifier	address		54649	0					
ANR	54756	Identifier	sun_path		54649	1					
ANR	54757	Argument	"""%s"""		54649	2					
ANR	54758	PrimaryExpression	"""%s"""		54649	0					
ANR	54759	Argument	portname		54649	3					
ANR	54760	Identifier	portname		54649	0					
ANR	54761	ExpressionStatement	"c = connect ( vport -> fd , ( struct sockaddr * ) & address , sizeof ( address ) )"	100:8:2999:3067	54649	4	True				
ANR	54762	AssignmentExpression	"c = connect ( vport -> fd , ( struct sockaddr * ) & address , sizeof ( address ) )"		54649	0		=			
ANR	54763	Identifier	c		54649	0					
ANR	54764	CallExpression	"connect ( vport -> fd , ( struct sockaddr * ) & address , sizeof ( address ) )"		54649	1					
ANR	54765	Callee	connect		54649	0					
ANR	54766	Identifier	connect		54649	0					
ANR	54767	ArgumentList	vport -> fd		54649	1					
ANR	54768	Argument	vport -> fd		54649	0					
ANR	54769	PtrMemberAccess	vport -> fd		54649	0					
ANR	54770	Identifier	vport		54649	0					
ANR	54771	Identifier	fd		54649	1					
ANR	54772	Argument	( struct sockaddr * ) & address		54649	1					
ANR	54773	CastExpression	( struct sockaddr * ) & address		54649	0					
ANR	54774	CastTarget	struct sockaddr *		54649	0					
ANR	54775	UnaryOperationExpression	& address		54649	1					
ANR	54776	UnaryOperator	&		54649	0					
ANR	54777	Identifier	address		54649	1					
ANR	54778	Argument	sizeof ( address )		54649	2					
ANR	54779	SizeofExpression	sizeof ( address )		54649	0					
ANR	54780	Sizeof	sizeof		54649	0					
ANR	54781	SizeofOperand	address		54649	1					
ANR	54782	IfStatement	if ( c == 0 )		54649	5					
ANR	54783	Condition	c == 0	101:12:3081:3086	54649	0	True				
ANR	54784	EqualityExpression	c == 0		54649	0		==			
ANR	54785	Identifier	c		54649	0					
ANR	54786	PrimaryExpression	0		54649	1					
ANR	54787	CompoundStatement		19:20:557:557	54649	1					
ANR	54788	ExpressionStatement	vport -> is_uds = 1	102:12:3103:3120	54649	0	True				
ANR	54789	AssignmentExpression	vport -> is_uds = 1		54649	0		=			
ANR	54790	PtrMemberAccess	vport -> is_uds		54649	0					
ANR	54791	Identifier	vport		54649	0					
ANR	54792	Identifier	is_uds		54649	1					
ANR	54793	PrimaryExpression	1		54649	1					
ANR	54794	ElseStatement	else		54649	0					
ANR	54795	CompoundStatement		21:15:605:605	54649	0					
ANR	54796	GotoStatement	goto error ;	104:12:3151:3161	54649	0	True				
ANR	54797	Identifier	error		54649	0					
ANR	54798	ElseStatement	else		54649	0					
ANR	54799	CompoundStatement		24:11:652:652	54649	0					
ANR	54800	ExpressionStatement	vport -> is_uds = 0	107:8:3194:3211	54649	0	True				
ANR	54801	AssignmentExpression	vport -> is_uds = 0		54649	0		=			
ANR	54802	PtrMemberAccess	vport -> is_uds		54649	0					
ANR	54803	Identifier	vport		54649	0					
ANR	54804	Identifier	is_uds		54649	1					
ANR	54805	PrimaryExpression	0		54649	1					
ANR	54806	ExpressionStatement	vport -> opening = 1	109:4:3223:3241	54649	7	True				
ANR	54807	AssignmentExpression	vport -> opening = 1		54649	0		=			
ANR	54808	PtrMemberAccess	vport -> opening		54649	0					
ANR	54809	Identifier	vport		54649	0					
ANR	54810	Identifier	opening		54649	1					
ANR	54811	PrimaryExpression	1		54649	1					
ANR	54812	ExpressionStatement	vport -> read_callback = read_callback	111:4:3248:3284	54649	8	True				
ANR	54813	AssignmentExpression	vport -> read_callback = read_callback		54649	0		=			
ANR	54814	PtrMemberAccess	vport -> read_callback		54649	0					
ANR	54815	Identifier	vport		54649	0					
ANR	54816	Identifier	read_callback		54649	1					
ANR	54817	Identifier	read_callback		54649	1					
ANR	54818	ExpressionStatement	vport -> disconnect_callback = disconnect_callback	112:4:3290:3338	54649	9	True				
ANR	54819	AssignmentExpression	vport -> disconnect_callback = disconnect_callback		54649	0		=			
ANR	54820	PtrMemberAccess	vport -> disconnect_callback		54649	0					
ANR	54821	Identifier	vport		54649	0					
ANR	54822	Identifier	disconnect_callback		54649	1					
ANR	54823	Identifier	disconnect_callback		54649	1					
ANR	54824	ReturnStatement	return vport ;	114:4:3345:3357	54649	10	True				
ANR	54825	Identifier	vport		54649	0					
ANR	54826	Label	error :	116:0:3360:3365	54649	11	True				
ANR	54827	Identifier	error		54649	0					
ANR	54828	ExpressionStatement	"syslog ( LOG_ERR , ""open %s: %m"" , portname )"	117:4:3371:3411	54649	12	True				
ANR	54829	CallExpression	"syslog ( LOG_ERR , ""open %s: %m"" , portname )"		54649	0					
ANR	54830	Callee	syslog		54649	0					
ANR	54831	Identifier	syslog		54649	0					
ANR	54832	ArgumentList	LOG_ERR		54649	1					
ANR	54833	Argument	LOG_ERR		54649	0					
ANR	54834	Identifier	LOG_ERR		54649	0					
ANR	54835	Argument	"""open %s: %m"""		54649	1					
ANR	54836	PrimaryExpression	"""open %s: %m"""		54649	0					
ANR	54837	Argument	portname		54649	2					
ANR	54838	Identifier	portname		54649	0					
ANR	54839	IfStatement	if ( vport -> fd != - 1 )		54649	13					
ANR	54840	Condition	vport -> fd != - 1	118:8:3421:3435	54649	0	True				
ANR	54841	EqualityExpression	vport -> fd != - 1		54649	0		!=			
ANR	54842	PtrMemberAccess	vport -> fd		54649	0					
ANR	54843	Identifier	vport		54649	0					
ANR	54844	Identifier	fd		54649	1					
ANR	54845	UnaryOperationExpression	- 1		54649	1					
ANR	54846	UnaryOperator	-		54649	0					
ANR	54847	PrimaryExpression	1		54649	1					
ANR	54848	CompoundStatement		36:25:906:906	54649	1					
ANR	54849	ExpressionStatement	close ( vport -> fd )	119:8:3448:3464	54649	0	True				
ANR	54850	CallExpression	close ( vport -> fd )		54649	0					
ANR	54851	Callee	close		54649	0					
ANR	54852	Identifier	close		54649	0					
ANR	54853	ArgumentList	vport -> fd		54649	1					
ANR	54854	Argument	vport -> fd		54649	0					
ANR	54855	PtrMemberAccess	vport -> fd		54649	0					
ANR	54856	Identifier	vport		54649	0					
ANR	54857	Identifier	fd		54649	1					
ANR	54858	ExpressionStatement	free ( vport )	121:4:3476:3487	54649	14	True				
ANR	54859	CallExpression	free ( vport )		54649	0					
ANR	54860	Callee	free		54649	0					
ANR	54861	Identifier	free		54649	0					
ANR	54862	ArgumentList	vport		54649	1					
ANR	54863	Argument	vport		54649	0					
ANR	54864	Identifier	vport		54649	0					
ANR	54865	ReturnStatement	return NULL ;	122:4:3493:3504	54649	15	True				
ANR	54866	Identifier	NULL		54649	0					
ANR	54867	ReturnType	struct vdagent_virtio_port *		54649	1					
ANR	54868	Identifier	vdagent_virtio_port_create		54649	2					
ANR	54869	ParameterList	"const char * portname , vdagent_virtio_port_read_callback read_callback , vdagent_virtio_port_disconnect_callback disconnect_callback"		54649	3					
ANR	54870	Parameter	const char * portname	80:55:2391:2410	54649	0	True				
ANR	54871	ParameterType	const char *		54649	0					
ANR	54872	Identifier	portname		54649	1					
ANR	54873	Parameter	vdagent_virtio_port_read_callback read_callback	81:4:2417:2463	54649	1	True				
ANR	54874	ParameterType	vdagent_virtio_port_read_callback		54649	0					
ANR	54875	Identifier	read_callback		54649	1					
ANR	54876	Parameter	vdagent_virtio_port_disconnect_callback disconnect_callback	82:4:2470:2528	54649	2	True				
ANR	54877	ParameterType	vdagent_virtio_port_disconnect_callback		54649	0					
ANR	54878	Identifier	disconnect_callback		54649	1					
ANR	54879	CFGEntryNode	ENTRY		54649		True				
ANR	54880	CFGExitNode	EXIT		54649		True				
ANR	54881	Symbol	address . sun_path		54649						
ANR	54882	Symbol	vport		54649						
ANR	54883	Symbol	calloc		54649						
ANR	54884	Symbol	disconnect_callback		54649						
ANR	54885	Symbol	O_RDWR		54649						
ANR	54886	Symbol	SOCK_STREAM		54649						
ANR	54887	Symbol	* vport		54649						
ANR	54888	Symbol	LOG_ERR		54649						
ANR	54889	Symbol	vport -> opening		54649						
ANR	54890	Symbol	connect		54649						
ANR	54891	Symbol	& address		54649						
ANR	54892	Symbol	address		54649						
ANR	54893	Symbol	c		54649						
ANR	54894	Symbol	NULL		54649						
ANR	54895	Symbol	address . sun_family		54649						
ANR	54896	Symbol	read_callback		54649						
ANR	54897	Symbol	vport -> fd		54649						
ANR	54898	Symbol	vport -> disconnect_callback		54649						
ANR	54899	Symbol	AF_UNIX		54649						
ANR	54900	Symbol	vport -> read_callback		54649						
ANR	54901	Symbol	portname		54649						
ANR	54902	Symbol	PF_UNIX		54649						
ANR	54903	Symbol	socket		54649						
ANR	54904	Symbol	open		54649						
ANR	54905	Symbol	vport -> is_uds		54649						
ANR	54906	Function	vdagent_virtio_port_destroy	125:0:3509:4122							
ANR	54907	FunctionDef	vdagent_virtio_port_destroy (struct vdagent_virtio_port * * vportp)		54906	0					
ANR	54908	CompoundStatement		126:0:3579:4122	54906	0					
ANR	54909	IdentifierDeclStatement	"struct vdagent_virtio_port_buf * wbuf , * next_wbuf ;"	127:4:3585:3633	54906	0	True				
ANR	54910	IdentifierDecl	* wbuf		54906	0					
ANR	54911	IdentifierDeclType	struct vdagent_virtio_port_buf *		54906	0					
ANR	54912	Identifier	wbuf		54906	1					
ANR	54913	IdentifierDecl	* next_wbuf		54906	1					
ANR	54914	IdentifierDeclType	struct vdagent_virtio_port_buf *		54906	0					
ANR	54915	Identifier	next_wbuf		54906	1					
ANR	54916	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	128:4:3639:3682	54906	1	True				
ANR	54917	IdentifierDecl	* vport = * vportp		54906	0					
ANR	54918	IdentifierDeclType	struct vdagent_virtio_port *		54906	0					
ANR	54919	Identifier	vport		54906	1					
ANR	54920	AssignmentExpression	* vport = * vportp		54906	2		=			
ANR	54921	Identifier	vport		54906	0					
ANR	54922	UnaryOperationExpression	* vportp		54906	1					
ANR	54923	UnaryOperator	*		54906	0					
ANR	54924	Identifier	vportp		54906	1					
ANR	54925	IdentifierDeclStatement	int i ;	129:4:3688:3693	54906	2	True				
ANR	54926	IdentifierDecl	i		54906	0					
ANR	54927	IdentifierDeclType	int		54906	0					
ANR	54928	Identifier	i		54906	1					
ANR	54929	IfStatement	if ( ! vport )		54906	3					
ANR	54930	Condition	! vport	131:8:3704:3709	54906	0	True				
ANR	54931	UnaryOperationExpression	! vport		54906	0					
ANR	54932	UnaryOperator	!		54906	0					
ANR	54933	Identifier	vport		54906	1					
ANR	54934	ReturnStatement	return ;	132:8:3720:3726	54906	1	True				
ANR	54935	IfStatement	if ( vport -> disconnect_callback )		54906	4					
ANR	54936	Condition	vport -> disconnect_callback	134:8:3737:3762	54906	0	True				
ANR	54937	PtrMemberAccess	vport -> disconnect_callback		54906	0					
ANR	54938	Identifier	vport		54906	0					
ANR	54939	Identifier	disconnect_callback		54906	1					
ANR	54940	ExpressionStatement	vport -> disconnect_callback ( vport )	135:8:3773:3806	54906	1	True				
ANR	54941	CallExpression	vport -> disconnect_callback ( vport )		54906	0					
ANR	54942	Callee	vport -> disconnect_callback		54906	0					
ANR	54943	PtrMemberAccess	vport -> disconnect_callback		54906	0					
ANR	54944	Identifier	vport		54906	0					
ANR	54945	Identifier	disconnect_callback		54906	1					
ANR	54946	ArgumentList	vport		54906	1					
ANR	54947	Argument	vport		54906	0					
ANR	54948	Identifier	vport		54906	0					
ANR	54949	ExpressionStatement	wbuf = vport -> write_buf	137:4:3813:3836	54906	5	True				
ANR	54950	AssignmentExpression	wbuf = vport -> write_buf		54906	0		=			
ANR	54951	Identifier	wbuf		54906	0					
ANR	54952	PtrMemberAccess	vport -> write_buf		54906	1					
ANR	54953	Identifier	vport		54906	0					
ANR	54954	Identifier	write_buf		54906	1					
ANR	54955	WhileStatement	while ( wbuf )		54906	6					
ANR	54956	Condition	wbuf	138:11:3849:3852	54906	0	True				
ANR	54957	Identifier	wbuf		54906	0					
ANR	54958	CompoundStatement		13:17:275:275	54906	1					
ANR	54959	ExpressionStatement	next_wbuf = wbuf -> next	139:8:3865:3887	54906	0	True				
ANR	54960	AssignmentExpression	next_wbuf = wbuf -> next		54906	0		=			
ANR	54961	Identifier	next_wbuf		54906	0					
ANR	54962	PtrMemberAccess	wbuf -> next		54906	1					
ANR	54963	Identifier	wbuf		54906	0					
ANR	54964	Identifier	next		54906	1					
ANR	54965	ExpressionStatement	free ( wbuf -> buf )	140:8:3897:3912	54906	1	True				
ANR	54966	CallExpression	free ( wbuf -> buf )		54906	0					
ANR	54967	Callee	free		54906	0					
ANR	54968	Identifier	free		54906	0					
ANR	54969	ArgumentList	wbuf -> buf		54906	1					
ANR	54970	Argument	wbuf -> buf		54906	0					
ANR	54971	PtrMemberAccess	wbuf -> buf		54906	0					
ANR	54972	Identifier	wbuf		54906	0					
ANR	54973	Identifier	buf		54906	1					
ANR	54974	ExpressionStatement	free ( wbuf )	141:8:3922:3932	54906	2	True				
ANR	54975	CallExpression	free ( wbuf )		54906	0					
ANR	54976	Callee	free		54906	0					
ANR	54977	Identifier	free		54906	0					
ANR	54978	ArgumentList	wbuf		54906	1					
ANR	54979	Argument	wbuf		54906	0					
ANR	54980	Identifier	wbuf		54906	0					
ANR	54981	ExpressionStatement	wbuf = next_wbuf	142:8:3942:3958	54906	3	True				
ANR	54982	AssignmentExpression	wbuf = next_wbuf		54906	0		=			
ANR	54983	Identifier	wbuf		54906	0					
ANR	54984	Identifier	next_wbuf		54906	1					
ANR	54985	ForStatement	for ( i = 0 ; i < VDP_END_PORT ; i ++ )		54906	7					
ANR	54986	ForInit	i = 0 ;	145:9:3976:3981	54906	0	True				
ANR	54987	AssignmentExpression	i = 0		54906	0		=			
ANR	54988	Identifier	i		54906	0					
ANR	54989	PrimaryExpression	0		54906	1					
ANR	54990	Condition	i < VDP_END_PORT	145:16:3983:3998	54906	1	True				
ANR	54991	RelationalExpression	i < VDP_END_PORT		54906	0		<			
ANR	54992	Identifier	i		54906	0					
ANR	54993	Identifier	VDP_END_PORT		54906	1					
ANR	54994	PostIncDecOperationExpression	i ++	145:34:4001:4003	54906	2	True				
ANR	54995	Identifier	i		54906	0					
ANR	54996	IncDec	++		54906	1					
ANR	54997	CompoundStatement		20:39:426:426	54906	3					
ANR	54998	ExpressionStatement	free ( vport -> port_data [ i ] . message_data )	146:8:4016:4054	54906	0	True				
ANR	54999	CallExpression	free ( vport -> port_data [ i ] . message_data )		54906	0					
ANR	55000	Callee	free		54906	0					
ANR	55001	Identifier	free		54906	0					
ANR	55002	ArgumentList	vport -> port_data [ i ] . message_data		54906	1					
ANR	55003	Argument	vport -> port_data [ i ] . message_data		54906	0					
ANR	55004	MemberAccess	vport -> port_data [ i ] . message_data		54906	0					
ANR	55005	ArrayIndexing	vport -> port_data [ i ]		54906	0					
ANR	55006	PtrMemberAccess	vport -> port_data		54906	0					
ANR	55007	Identifier	vport		54906	0					
ANR	55008	Identifier	port_data		54906	1					
ANR	55009	Identifier	i		54906	1					
ANR	55010	Identifier	message_data		54906	1					
ANR	55011	ExpressionStatement	close ( vport -> fd )	149:4:4067:4083	54906	8	True				
ANR	55012	CallExpression	close ( vport -> fd )		54906	0					
ANR	55013	Callee	close		54906	0					
ANR	55014	Identifier	close		54906	0					
ANR	55015	ArgumentList	vport -> fd		54906	1					
ANR	55016	Argument	vport -> fd		54906	0					
ANR	55017	PtrMemberAccess	vport -> fd		54906	0					
ANR	55018	Identifier	vport		54906	0					
ANR	55019	Identifier	fd		54906	1					
ANR	55020	ExpressionStatement	free ( vport )	150:4:4089:4100	54906	9	True				
ANR	55021	CallExpression	free ( vport )		54906	0					
ANR	55022	Callee	free		54906	0					
ANR	55023	Identifier	free		54906	0					
ANR	55024	ArgumentList	vport		54906	1					
ANR	55025	Argument	vport		54906	0					
ANR	55026	Identifier	vport		54906	0					
ANR	55027	ExpressionStatement	* vportp = NULL	151:4:4106:4120	54906	10	True				
ANR	55028	AssignmentExpression	* vportp = NULL		54906	0		=			
ANR	55029	UnaryOperationExpression	* vportp		54906	0					
ANR	55030	UnaryOperator	*		54906	0					
ANR	55031	Identifier	vportp		54906	1					
ANR	55032	Identifier	NULL		54906	1					
ANR	55033	ReturnType	void		54906	1					
ANR	55034	Identifier	vdagent_virtio_port_destroy		54906	2					
ANR	55035	ParameterList	struct vdagent_virtio_port * * vportp		54906	3					
ANR	55036	Parameter	struct vdagent_virtio_port * * vportp	125:33:3542:3576	54906	0	True				
ANR	55037	ParameterType	struct vdagent_virtio_port * *		54906	0					
ANR	55038	Identifier	vportp		54906	1					
ANR	55039	CFGEntryNode	ENTRY		54906		True				
ANR	55040	CFGExitNode	EXIT		54906		True				
ANR	55041	Symbol	vportp		54906						
ANR	55042	Symbol	NULL		54906						
ANR	55043	Symbol	vport		54906						
ANR	55044	Symbol	VDP_END_PORT		54906						
ANR	55045	Symbol	next_wbuf		54906						
ANR	55046	Symbol	vport -> port_data		54906						
ANR	55047	Symbol	* vport -> port_data		54906						
ANR	55048	Symbol	vport -> fd		54906						
ANR	55049	Symbol	vport -> disconnect_callback		54906						
ANR	55050	Symbol	wbuf -> next		54906						
ANR	55051	Symbol	i		54906						
ANR	55052	Symbol	wbuf		54906						
ANR	55053	Symbol	vport -> write_buf		54906						
ANR	55054	Symbol	vport -> port_data [ i ] . message_data		54906						
ANR	55055	Symbol	* i		54906						
ANR	55056	Symbol	* wbuf		54906						
ANR	55057	Symbol	* vport		54906						
ANR	55058	Symbol	* vportp		54906						
ANR	55059	Symbol	wbuf -> buf		54906						
ANR	55060	Symbol	* * vport		54906						
ANR	55061	Function	vdagent_virtio_port_fill_fds	154:0:4125:4396							
ANR	55062	FunctionDef	"vdagent_virtio_port_fill_fds (struct vdagent_virtio_port * vport , fd_set * readfds , fd_set * writefds)"		55061	0					
ANR	55063	CompoundStatement		156:0:4236:4396	55061	0					
ANR	55064	IfStatement	if ( ! vport )		55061	0					
ANR	55065	Condition	! vport	157:8:4246:4251	55061	0	True				
ANR	55066	UnaryOperationExpression	! vport		55061	0					
ANR	55067	UnaryOperator	!		55061	0					
ANR	55068	Identifier	vport		55061	1					
ANR	55069	ReturnStatement	return - 1 ;	158:8:4262:4271	55061	1	True				
ANR	55070	UnaryOperationExpression	- 1		55061	0					
ANR	55071	UnaryOperator	-		55061	0					
ANR	55072	PrimaryExpression	1		55061	1					
ANR	55073	ExpressionStatement	"FD_SET ( vport -> fd , readfds )"	160:4:4278:4304	55061	1	True				
ANR	55074	CallExpression	"FD_SET ( vport -> fd , readfds )"		55061	0					
ANR	55075	Callee	FD_SET		55061	0					
ANR	55076	Identifier	FD_SET		55061	0					
ANR	55077	ArgumentList	vport -> fd		55061	1					
ANR	55078	Argument	vport -> fd		55061	0					
ANR	55079	PtrMemberAccess	vport -> fd		55061	0					
ANR	55080	Identifier	vport		55061	0					
ANR	55081	Identifier	fd		55061	1					
ANR	55082	Argument	readfds		55061	1					
ANR	55083	Identifier	readfds		55061	0					
ANR	55084	IfStatement	if ( vport -> write_buf )		55061	2					
ANR	55085	Condition	vport -> write_buf	161:8:4314:4329	55061	0	True				
ANR	55086	PtrMemberAccess	vport -> write_buf		55061	0					
ANR	55087	Identifier	vport		55061	0					
ANR	55088	Identifier	write_buf		55061	1					
ANR	55089	ExpressionStatement	"FD_SET ( vport -> fd , writefds )"	162:8:4340:4367	55061	1	True				
ANR	55090	CallExpression	"FD_SET ( vport -> fd , writefds )"		55061	0					
ANR	55091	Callee	FD_SET		55061	0					
ANR	55092	Identifier	FD_SET		55061	0					
ANR	55093	ArgumentList	vport -> fd		55061	1					
ANR	55094	Argument	vport -> fd		55061	0					
ANR	55095	PtrMemberAccess	vport -> fd		55061	0					
ANR	55096	Identifier	vport		55061	0					
ANR	55097	Identifier	fd		55061	1					
ANR	55098	Argument	writefds		55061	1					
ANR	55099	Identifier	writefds		55061	0					
ANR	55100	ReturnStatement	return vport -> fd + 1 ;	164:4:4374:4394	55061	3	True				
ANR	55101	AdditiveExpression	vport -> fd + 1		55061	0		+			
ANR	55102	PtrMemberAccess	vport -> fd		55061	0					
ANR	55103	Identifier	vport		55061	0					
ANR	55104	Identifier	fd		55061	1					
ANR	55105	PrimaryExpression	1		55061	1					
ANR	55106	ReturnType	int		55061	1					
ANR	55107	Identifier	vdagent_virtio_port_fill_fds		55061	2					
ANR	55108	ParameterList	"struct vdagent_virtio_port * vport , fd_set * readfds , fd_set * writefds"		55061	3					
ANR	55109	Parameter	struct vdagent_virtio_port * vport	154:33:4158:4190	55061	0	True				
ANR	55110	ParameterType	struct vdagent_virtio_port *		55061	0					
ANR	55111	Identifier	vport		55061	1					
ANR	55112	Parameter	fd_set * readfds	155:8:4201:4215	55061	1	True				
ANR	55113	ParameterType	fd_set *		55061	0					
ANR	55114	Identifier	readfds		55061	1					
ANR	55115	Parameter	fd_set * writefds	155:25:4218:4233	55061	2	True				
ANR	55116	ParameterType	fd_set *		55061	0					
ANR	55117	Identifier	writefds		55061	1					
ANR	55118	CFGEntryNode	ENTRY		55061		True				
ANR	55119	CFGExitNode	EXIT		55061		True				
ANR	55120	Symbol	vport		55061						
ANR	55121	Symbol	* vport		55061						
ANR	55122	Symbol	vport -> fd		55061						
ANR	55123	Symbol	writefds		55061						
ANR	55124	Symbol	readfds		55061						
ANR	55125	Symbol	vport -> write_buf		55061						
ANR	55126	Function	vdagent_virtio_port_handle_fds	167:0:4399:4740							
ANR	55127	FunctionDef	"vdagent_virtio_port_handle_fds (struct vdagent_virtio_port * * vportp , fd_set * readfds , fd_set * writefds)"		55126	0					
ANR	55128	CompoundStatement		169:0:4515:4740	55126	0					
ANR	55129	IfStatement	if ( ! * vportp )		55126	0					
ANR	55130	Condition	! * vportp	170:8:4525:4532	55126	0	True				
ANR	55131	UnaryOperationExpression	! * vportp		55126	0					
ANR	55132	UnaryOperator	!		55126	0					
ANR	55133	UnaryOperationExpression	* vportp		55126	1					
ANR	55134	UnaryOperator	*		55126	0					
ANR	55135	Identifier	vportp		55126	1					
ANR	55136	ReturnStatement	return ;	171:8:4543:4549	55126	1	True				
ANR	55137	IfStatement	"if ( FD_ISSET ( ( * vportp ) -> fd , readfds ) )"		55126	1					
ANR	55138	Condition	"FD_ISSET ( ( * vportp ) -> fd , readfds )"	173:8:4560:4591	55126	0	True				
ANR	55139	CallExpression	"FD_ISSET ( ( * vportp ) -> fd , readfds )"		55126	0					
ANR	55140	Callee	FD_ISSET		55126	0					
ANR	55141	Identifier	FD_ISSET		55126	0					
ANR	55142	ArgumentList	( * vportp ) -> fd		55126	1					
ANR	55143	Argument	( * vportp ) -> fd		55126	0					
ANR	55144	PtrMemberAccess	( * vportp ) -> fd		55126	0					
ANR	55145	UnaryOperationExpression	* vportp		55126	0					
ANR	55146	UnaryOperator	*		55126	0					
ANR	55147	Identifier	vportp		55126	1					
ANR	55148	Identifier	fd		55126	1					
ANR	55149	Argument	readfds		55126	1					
ANR	55150	Identifier	readfds		55126	0					
ANR	55151	ExpressionStatement	vdagent_virtio_port_do_read ( vportp )	174:8:4602:4637	55126	1	True				
ANR	55152	CallExpression	vdagent_virtio_port_do_read ( vportp )		55126	0					
ANR	55153	Callee	vdagent_virtio_port_do_read		55126	0					
ANR	55154	Identifier	vdagent_virtio_port_do_read		55126	0					
ANR	55155	ArgumentList	vportp		55126	1					
ANR	55156	Argument	vportp		55126	0					
ANR	55157	Identifier	vportp		55126	0					
ANR	55158	IfStatement	"if ( * vportp && FD_ISSET ( ( * vportp ) -> fd , writefds ) )"		55126	2					
ANR	55159	Condition	"* vportp && FD_ISSET ( ( * vportp ) -> fd , writefds )"	176:8:4648:4691	55126	0	True				
ANR	55160	AndExpression	"* vportp && FD_ISSET ( ( * vportp ) -> fd , writefds )"		55126	0		&&			
ANR	55161	UnaryOperationExpression	* vportp		55126	0					
ANR	55162	UnaryOperator	*		55126	0					
ANR	55163	Identifier	vportp		55126	1					
ANR	55164	CallExpression	"FD_ISSET ( ( * vportp ) -> fd , writefds )"		55126	1					
ANR	55165	Callee	FD_ISSET		55126	0					
ANR	55166	Identifier	FD_ISSET		55126	0					
ANR	55167	ArgumentList	( * vportp ) -> fd		55126	1					
ANR	55168	Argument	( * vportp ) -> fd		55126	0					
ANR	55169	PtrMemberAccess	( * vportp ) -> fd		55126	0					
ANR	55170	UnaryOperationExpression	* vportp		55126	0					
ANR	55171	UnaryOperator	*		55126	0					
ANR	55172	Identifier	vportp		55126	1					
ANR	55173	Identifier	fd		55126	1					
ANR	55174	Argument	writefds		55126	1					
ANR	55175	Identifier	writefds		55126	0					
ANR	55176	ExpressionStatement	vdagent_virtio_port_do_write ( vportp )	177:8:4702:4738	55126	1	True				
ANR	55177	CallExpression	vdagent_virtio_port_do_write ( vportp )		55126	0					
ANR	55178	Callee	vdagent_virtio_port_do_write		55126	0					
ANR	55179	Identifier	vdagent_virtio_port_do_write		55126	0					
ANR	55180	ArgumentList	vportp		55126	1					
ANR	55181	Argument	vportp		55126	0					
ANR	55182	Identifier	vportp		55126	0					
ANR	55183	ReturnType	void		55126	1					
ANR	55184	Identifier	vdagent_virtio_port_handle_fds		55126	2					
ANR	55185	ParameterList	"struct vdagent_virtio_port * * vportp , fd_set * readfds , fd_set * writefds"		55126	3					
ANR	55186	Parameter	struct vdagent_virtio_port * * vportp	167:36:4435:4469	55126	0	True				
ANR	55187	ParameterType	struct vdagent_virtio_port * *		55126	0					
ANR	55188	Identifier	vportp		55126	1					
ANR	55189	Parameter	fd_set * readfds	168:8:4480:4494	55126	1	True				
ANR	55190	ParameterType	fd_set *		55126	0					
ANR	55191	Identifier	readfds		55126	1					
ANR	55192	Parameter	fd_set * writefds	168:25:4497:4512	55126	2	True				
ANR	55193	ParameterType	fd_set *		55126	0					
ANR	55194	Identifier	writefds		55126	1					
ANR	55195	CFGEntryNode	ENTRY		55126		True				
ANR	55196	CFGExitNode	EXIT		55126		True				
ANR	55197	Symbol	( * vportp ) -> fd		55126						
ANR	55198	Symbol	vportp		55126						
ANR	55199	Symbol	FD_ISSET		55126						
ANR	55200	Symbol	writefds		55126						
ANR	55201	Symbol	* * vportp		55126						
ANR	55202	Symbol	readfds		55126						
ANR	55203	Symbol	* vportp		55126						
ANR	55204	Function	vdagent_virtio_port_get_last_wbuf	180:0:4743:5035							
ANR	55205	FunctionDef	vdagent_virtio_port_get_last_wbuf (struct vdagent_virtio_port * vport)		55204	0					
ANR	55206	CompoundStatement		182:0:4856:5035	55204	0					
ANR	55207	IdentifierDeclStatement	struct vdagent_virtio_port_buf * wbuf ;	183:4:4862:4898	55204	0	True				
ANR	55208	IdentifierDecl	* wbuf		55204	0					
ANR	55209	IdentifierDeclType	struct vdagent_virtio_port_buf *		55204	0					
ANR	55210	Identifier	wbuf		55204	1					
ANR	55211	ExpressionStatement	wbuf = vport -> write_buf	185:4:4905:4928	55204	1	True				
ANR	55212	AssignmentExpression	wbuf = vport -> write_buf		55204	0		=			
ANR	55213	Identifier	wbuf		55204	0					
ANR	55214	PtrMemberAccess	vport -> write_buf		55204	1					
ANR	55215	Identifier	vport		55204	0					
ANR	55216	Identifier	write_buf		55204	1					
ANR	55217	IfStatement	if ( ! wbuf )		55204	2					
ANR	55218	Condition	! wbuf	186:8:4938:4942	55204	0	True				
ANR	55219	UnaryOperationExpression	! wbuf		55204	0					
ANR	55220	UnaryOperator	!		55204	0					
ANR	55221	Identifier	wbuf		55204	1					
ANR	55222	ReturnStatement	return NULL ;	187:8:4953:4964	55204	1	True				
ANR	55223	Identifier	NULL		55204	0					
ANR	55224	WhileStatement	while ( wbuf -> next )		55204	3					
ANR	55225	Condition	wbuf -> next	189:11:4978:4987	55204	0	True				
ANR	55226	PtrMemberAccess	wbuf -> next		55204	0					
ANR	55227	Identifier	wbuf		55204	0					
ANR	55228	Identifier	next		55204	1					
ANR	55229	ExpressionStatement	wbuf = wbuf -> next	190:8:4998:5015	55204	1	True				
ANR	55230	AssignmentExpression	wbuf = wbuf -> next		55204	0		=			
ANR	55231	Identifier	wbuf		55204	0					
ANR	55232	PtrMemberAccess	wbuf -> next		55204	1					
ANR	55233	Identifier	wbuf		55204	0					
ANR	55234	Identifier	next		55204	1					
ANR	55235	ReturnStatement	return wbuf ;	192:4:5022:5033	55204	4	True				
ANR	55236	Identifier	wbuf		55204	0					
ANR	55237	ReturnType	static struct vdagent_virtio_port_buf *		55204	1					
ANR	55238	Identifier	vdagent_virtio_port_get_last_wbuf		55204	2					
ANR	55239	ParameterList	struct vdagent_virtio_port * vport		55204	3					
ANR	55240	Parameter	struct vdagent_virtio_port * vport	181:4:4821:4853	55204	0	True				
ANR	55241	ParameterType	struct vdagent_virtio_port *		55204	0					
ANR	55242	Identifier	vport		55204	1					
ANR	55243	CFGEntryNode	ENTRY		55204		True				
ANR	55244	CFGExitNode	EXIT		55204		True				
ANR	55245	Symbol	NULL		55204						
ANR	55246	Symbol	vport		55204						
ANR	55247	Symbol	* wbuf		55204						
ANR	55248	Symbol	* vport		55204						
ANR	55249	Symbol	wbuf -> next		55204						
ANR	55250	Symbol	wbuf		55204						
ANR	55251	Symbol	vport -> write_buf		55204						
ANR	55252	Function	vdagent_virtio_port_write_start	195:0:5038:6559							
ANR	55253	FunctionDef	"vdagent_virtio_port_write_start (struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , uint32_t data_size)"		55252	0					
ANR	55254	CompoundStatement		201:0:5236:6559	55252	0					
ANR	55255	IdentifierDeclStatement	"struct vdagent_virtio_port_buf * wbuf , * new_wbuf ;"	202:4:5242:5289	55252	0	True				
ANR	55256	IdentifierDecl	* wbuf		55252	0					
ANR	55257	IdentifierDeclType	struct vdagent_virtio_port_buf *		55252	0					
ANR	55258	Identifier	wbuf		55252	1					
ANR	55259	IdentifierDecl	* new_wbuf		55252	1					
ANR	55260	IdentifierDeclType	struct vdagent_virtio_port_buf *		55252	0					
ANR	55261	Identifier	new_wbuf		55252	1					
ANR	55262	IdentifierDeclStatement	VDIChunkHeader chunk_header ;	203:4:5295:5322	55252	1	True				
ANR	55263	IdentifierDecl	chunk_header		55252	0					
ANR	55264	IdentifierDeclType	VDIChunkHeader		55252	0					
ANR	55265	Identifier	chunk_header		55252	1					
ANR	55266	IdentifierDeclStatement	VDAgentMessage message_header ;	204:4:5328:5357	55252	2	True				
ANR	55267	IdentifierDecl	message_header		55252	0					
ANR	55268	IdentifierDeclType	VDAgentMessage		55252	0					
ANR	55269	Identifier	message_header		55252	1					
ANR	55270	ExpressionStatement	new_wbuf = malloc ( sizeof ( * new_wbuf ) )	206:4:5364:5400	55252	3	True				
ANR	55271	AssignmentExpression	new_wbuf = malloc ( sizeof ( * new_wbuf ) )		55252	0		=			
ANR	55272	Identifier	new_wbuf		55252	0					
ANR	55273	CallExpression	malloc ( sizeof ( * new_wbuf ) )		55252	1					
ANR	55274	Callee	malloc		55252	0					
ANR	55275	Identifier	malloc		55252	0					
ANR	55276	ArgumentList	sizeof ( * new_wbuf )		55252	1					
ANR	55277	Argument	sizeof ( * new_wbuf )		55252	0					
ANR	55278	SizeofExpression	sizeof ( * new_wbuf )		55252	0					
ANR	55279	Sizeof	sizeof		55252	0					
ANR	55280	UnaryOperationExpression	* new_wbuf		55252	1					
ANR	55281	UnaryOperator	*		55252	0					
ANR	55282	Identifier	new_wbuf		55252	1					
ANR	55283	IfStatement	if ( ! new_wbuf )		55252	4					
ANR	55284	Condition	! new_wbuf	207:8:5410:5418	55252	0	True				
ANR	55285	UnaryOperationExpression	! new_wbuf		55252	0					
ANR	55286	UnaryOperator	!		55252	0					
ANR	55287	Identifier	new_wbuf		55252	1					
ANR	55288	ReturnStatement	return - 1 ;	208:8:5429:5438	55252	1	True				
ANR	55289	UnaryOperationExpression	- 1		55252	0					
ANR	55290	UnaryOperator	-		55252	0					
ANR	55291	PrimaryExpression	1		55252	1					
ANR	55292	ExpressionStatement	new_wbuf -> pos = 0	210:4:5445:5462	55252	5	True				
ANR	55293	AssignmentExpression	new_wbuf -> pos = 0		55252	0		=			
ANR	55294	PtrMemberAccess	new_wbuf -> pos		55252	0					
ANR	55295	Identifier	new_wbuf		55252	0					
ANR	55296	Identifier	pos		55252	1					
ANR	55297	PrimaryExpression	0		55252	1					
ANR	55298	ExpressionStatement	new_wbuf -> write_pos = 0	211:4:5468:5491	55252	6	True				
ANR	55299	AssignmentExpression	new_wbuf -> write_pos = 0		55252	0		=			
ANR	55300	PtrMemberAccess	new_wbuf -> write_pos		55252	0					
ANR	55301	Identifier	new_wbuf		55252	0					
ANR	55302	Identifier	write_pos		55252	1					
ANR	55303	PrimaryExpression	0		55252	1					
ANR	55304	ExpressionStatement	new_wbuf -> size = sizeof ( chunk_header ) + sizeof ( message_header ) + data_size	212:4:5497:5571	55252	7	True				
ANR	55305	AssignmentExpression	new_wbuf -> size = sizeof ( chunk_header ) + sizeof ( message_header ) + data_size		55252	0		=			
ANR	55306	PtrMemberAccess	new_wbuf -> size		55252	0					
ANR	55307	Identifier	new_wbuf		55252	0					
ANR	55308	Identifier	size		55252	1					
ANR	55309	AdditiveExpression	sizeof ( chunk_header ) + sizeof ( message_header ) + data_size		55252	1		+			
ANR	55310	SizeofExpression	sizeof ( chunk_header )		55252	0					
ANR	55311	Sizeof	sizeof		55252	0					
ANR	55312	SizeofOperand	chunk_header		55252	1					
ANR	55313	AdditiveExpression	sizeof ( message_header ) + data_size		55252	1		+			
ANR	55314	SizeofExpression	sizeof ( message_header )		55252	0					
ANR	55315	Sizeof	sizeof		55252	0					
ANR	55316	SizeofOperand	message_header		55252	1					
ANR	55317	Identifier	data_size		55252	1					
ANR	55318	ExpressionStatement	new_wbuf -> next = NULL	213:4:5577:5598	55252	8	True				
ANR	55319	AssignmentExpression	new_wbuf -> next = NULL		55252	0		=			
ANR	55320	PtrMemberAccess	new_wbuf -> next		55252	0					
ANR	55321	Identifier	new_wbuf		55252	0					
ANR	55322	Identifier	next		55252	1					
ANR	55323	Identifier	NULL		55252	1					
ANR	55324	ExpressionStatement	new_wbuf -> buf = malloc ( new_wbuf -> size )	214:4:5604:5642	55252	9	True				
ANR	55325	AssignmentExpression	new_wbuf -> buf = malloc ( new_wbuf -> size )		55252	0		=			
ANR	55326	PtrMemberAccess	new_wbuf -> buf		55252	0					
ANR	55327	Identifier	new_wbuf		55252	0					
ANR	55328	Identifier	buf		55252	1					
ANR	55329	CallExpression	malloc ( new_wbuf -> size )		55252	1					
ANR	55330	Callee	malloc		55252	0					
ANR	55331	Identifier	malloc		55252	0					
ANR	55332	ArgumentList	new_wbuf -> size		55252	1					
ANR	55333	Argument	new_wbuf -> size		55252	0					
ANR	55334	PtrMemberAccess	new_wbuf -> size		55252	0					
ANR	55335	Identifier	new_wbuf		55252	0					
ANR	55336	Identifier	size		55252	1					
ANR	55337	IfStatement	if ( ! new_wbuf -> buf )		55252	10					
ANR	55338	Condition	! new_wbuf -> buf	215:8:5652:5665	55252	0	True				
ANR	55339	UnaryOperationExpression	! new_wbuf -> buf		55252	0					
ANR	55340	UnaryOperator	!		55252	0					
ANR	55341	PtrMemberAccess	new_wbuf -> buf		55252	1					
ANR	55342	Identifier	new_wbuf		55252	0					
ANR	55343	Identifier	buf		55252	1					
ANR	55344	CompoundStatement		15:24:431:431	55252	1					
ANR	55345	ExpressionStatement	free ( new_wbuf )	216:8:5678:5692	55252	0	True				
ANR	55346	CallExpression	free ( new_wbuf )		55252	0					
ANR	55347	Callee	free		55252	0					
ANR	55348	Identifier	free		55252	0					
ANR	55349	ArgumentList	new_wbuf		55252	1					
ANR	55350	Argument	new_wbuf		55252	0					
ANR	55351	Identifier	new_wbuf		55252	0					
ANR	55352	ReturnStatement	return - 1 ;	217:8:5702:5711	55252	1	True				
ANR	55353	UnaryOperationExpression	- 1		55252	0					
ANR	55354	UnaryOperator	-		55252	0					
ANR	55355	PrimaryExpression	1		55252	1					
ANR	55356	ExpressionStatement	chunk_header . port = GUINT32_TO_LE ( port_nr )	220:4:5724:5766	55252	11	True				
ANR	55357	AssignmentExpression	chunk_header . port = GUINT32_TO_LE ( port_nr )		55252	0		=			
ANR	55358	MemberAccess	chunk_header . port		55252	0					
ANR	55359	Identifier	chunk_header		55252	0					
ANR	55360	Identifier	port		55252	1					
ANR	55361	CallExpression	GUINT32_TO_LE ( port_nr )		55252	1					
ANR	55362	Callee	GUINT32_TO_LE		55252	0					
ANR	55363	Identifier	GUINT32_TO_LE		55252	0					
ANR	55364	ArgumentList	port_nr		55252	1					
ANR	55365	Argument	port_nr		55252	0					
ANR	55366	Identifier	port_nr		55252	0					
ANR	55367	ExpressionStatement	chunk_header . size = GUINT32_TO_LE ( sizeof ( message_header ) + data_size )	221:4:5772:5841	55252	12	True				
ANR	55368	AssignmentExpression	chunk_header . size = GUINT32_TO_LE ( sizeof ( message_header ) + data_size )		55252	0		=			
ANR	55369	MemberAccess	chunk_header . size		55252	0					
ANR	55370	Identifier	chunk_header		55252	0					
ANR	55371	Identifier	size		55252	1					
ANR	55372	CallExpression	GUINT32_TO_LE ( sizeof ( message_header ) + data_size )		55252	1					
ANR	55373	Callee	GUINT32_TO_LE		55252	0					
ANR	55374	Identifier	GUINT32_TO_LE		55252	0					
ANR	55375	ArgumentList	sizeof ( message_header ) + data_size		55252	1					
ANR	55376	Argument	sizeof ( message_header ) + data_size		55252	0					
ANR	55377	AdditiveExpression	sizeof ( message_header ) + data_size		55252	0		+			
ANR	55378	SizeofExpression	sizeof ( message_header )		55252	0					
ANR	55379	Sizeof	sizeof		55252	0					
ANR	55380	SizeofOperand	message_header		55252	1					
ANR	55381	Identifier	data_size		55252	1					
ANR	55382	ExpressionStatement	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & chunk_header , sizeof ( chunk_header ) )"	222:4:5847:5938	55252	13	True				
ANR	55383	CallExpression	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & chunk_header , sizeof ( chunk_header ) )"		55252	0					
ANR	55384	Callee	memcpy		55252	0					
ANR	55385	Identifier	memcpy		55252	0					
ANR	55386	ArgumentList	new_wbuf -> buf + new_wbuf -> write_pos		55252	1					
ANR	55387	Argument	new_wbuf -> buf + new_wbuf -> write_pos		55252	0					
ANR	55388	AdditiveExpression	new_wbuf -> buf + new_wbuf -> write_pos		55252	0		+			
ANR	55389	PtrMemberAccess	new_wbuf -> buf		55252	0					
ANR	55390	Identifier	new_wbuf		55252	0					
ANR	55391	Identifier	buf		55252	1					
ANR	55392	PtrMemberAccess	new_wbuf -> write_pos		55252	1					
ANR	55393	Identifier	new_wbuf		55252	0					
ANR	55394	Identifier	write_pos		55252	1					
ANR	55395	Argument	& chunk_header		55252	1					
ANR	55396	UnaryOperationExpression	& chunk_header		55252	0					
ANR	55397	UnaryOperator	&		55252	0					
ANR	55398	Identifier	chunk_header		55252	1					
ANR	55399	Argument	sizeof ( chunk_header )		55252	2					
ANR	55400	SizeofExpression	sizeof ( chunk_header )		55252	0					
ANR	55401	Sizeof	sizeof		55252	0					
ANR	55402	SizeofOperand	chunk_header		55252	1					
ANR	55403	ExpressionStatement	new_wbuf -> write_pos += sizeof ( chunk_header )	224:4:5944:5987	55252	14	True				
ANR	55404	AssignmentExpression	new_wbuf -> write_pos += sizeof ( chunk_header )		55252	0		+=			
ANR	55405	PtrMemberAccess	new_wbuf -> write_pos		55252	0					
ANR	55406	Identifier	new_wbuf		55252	0					
ANR	55407	Identifier	write_pos		55252	1					
ANR	55408	SizeofExpression	sizeof ( chunk_header )		55252	1					
ANR	55409	Sizeof	sizeof		55252	0					
ANR	55410	SizeofOperand	chunk_header		55252	1					
ANR	55411	ExpressionStatement	message_header . protocol = GUINT32_TO_LE ( VD_AGENT_PROTOCOL )	226:4:5994:6052	55252	15	True				
ANR	55412	AssignmentExpression	message_header . protocol = GUINT32_TO_LE ( VD_AGENT_PROTOCOL )		55252	0		=			
ANR	55413	MemberAccess	message_header . protocol		55252	0					
ANR	55414	Identifier	message_header		55252	0					
ANR	55415	Identifier	protocol		55252	1					
ANR	55416	CallExpression	GUINT32_TO_LE ( VD_AGENT_PROTOCOL )		55252	1					
ANR	55417	Callee	GUINT32_TO_LE		55252	0					
ANR	55418	Identifier	GUINT32_TO_LE		55252	0					
ANR	55419	ArgumentList	VD_AGENT_PROTOCOL		55252	1					
ANR	55420	Argument	VD_AGENT_PROTOCOL		55252	0					
ANR	55421	Identifier	VD_AGENT_PROTOCOL		55252	0					
ANR	55422	ExpressionStatement	message_header . type = GUINT32_TO_LE ( message_type )	227:4:6058:6107	55252	16	True				
ANR	55423	AssignmentExpression	message_header . type = GUINT32_TO_LE ( message_type )		55252	0		=			
ANR	55424	MemberAccess	message_header . type		55252	0					
ANR	55425	Identifier	message_header		55252	0					
ANR	55426	Identifier	type		55252	1					
ANR	55427	CallExpression	GUINT32_TO_LE ( message_type )		55252	1					
ANR	55428	Callee	GUINT32_TO_LE		55252	0					
ANR	55429	Identifier	GUINT32_TO_LE		55252	0					
ANR	55430	ArgumentList	message_type		55252	1					
ANR	55431	Argument	message_type		55252	0					
ANR	55432	Identifier	message_type		55252	0					
ANR	55433	ExpressionStatement	message_header . opaque = GUINT64_TO_LE ( message_opaque )	228:4:6113:6166	55252	17	True				
ANR	55434	AssignmentExpression	message_header . opaque = GUINT64_TO_LE ( message_opaque )		55252	0		=			
ANR	55435	MemberAccess	message_header . opaque		55252	0					
ANR	55436	Identifier	message_header		55252	0					
ANR	55437	Identifier	opaque		55252	1					
ANR	55438	CallExpression	GUINT64_TO_LE ( message_opaque )		55252	1					
ANR	55439	Callee	GUINT64_TO_LE		55252	0					
ANR	55440	Identifier	GUINT64_TO_LE		55252	0					
ANR	55441	ArgumentList	message_opaque		55252	1					
ANR	55442	Argument	message_opaque		55252	0					
ANR	55443	Identifier	message_opaque		55252	0					
ANR	55444	ExpressionStatement	message_header . size = GUINT32_TO_LE ( data_size )	229:4:6172:6218	55252	18	True				
ANR	55445	AssignmentExpression	message_header . size = GUINT32_TO_LE ( data_size )		55252	0		=			
ANR	55446	MemberAccess	message_header . size		55252	0					
ANR	55447	Identifier	message_header		55252	0					
ANR	55448	Identifier	size		55252	1					
ANR	55449	CallExpression	GUINT32_TO_LE ( data_size )		55252	1					
ANR	55450	Callee	GUINT32_TO_LE		55252	0					
ANR	55451	Identifier	GUINT32_TO_LE		55252	0					
ANR	55452	ArgumentList	data_size		55252	1					
ANR	55453	Argument	data_size		55252	0					
ANR	55454	Identifier	data_size		55252	0					
ANR	55455	ExpressionStatement	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & message_header , sizeof ( message_header ) )"	230:4:6224:6319	55252	19	True				
ANR	55456	CallExpression	"memcpy ( new_wbuf -> buf + new_wbuf -> write_pos , & message_header , sizeof ( message_header ) )"		55252	0					
ANR	55457	Callee	memcpy		55252	0					
ANR	55458	Identifier	memcpy		55252	0					
ANR	55459	ArgumentList	new_wbuf -> buf + new_wbuf -> write_pos		55252	1					
ANR	55460	Argument	new_wbuf -> buf + new_wbuf -> write_pos		55252	0					
ANR	55461	AdditiveExpression	new_wbuf -> buf + new_wbuf -> write_pos		55252	0		+			
ANR	55462	PtrMemberAccess	new_wbuf -> buf		55252	0					
ANR	55463	Identifier	new_wbuf		55252	0					
ANR	55464	Identifier	buf		55252	1					
ANR	55465	PtrMemberAccess	new_wbuf -> write_pos		55252	1					
ANR	55466	Identifier	new_wbuf		55252	0					
ANR	55467	Identifier	write_pos		55252	1					
ANR	55468	Argument	& message_header		55252	1					
ANR	55469	UnaryOperationExpression	& message_header		55252	0					
ANR	55470	UnaryOperator	&		55252	0					
ANR	55471	Identifier	message_header		55252	1					
ANR	55472	Argument	sizeof ( message_header )		55252	2					
ANR	55473	SizeofExpression	sizeof ( message_header )		55252	0					
ANR	55474	Sizeof	sizeof		55252	0					
ANR	55475	SizeofOperand	message_header		55252	1					
ANR	55476	ExpressionStatement	new_wbuf -> write_pos += sizeof ( message_header )	232:4:6325:6370	55252	20	True				
ANR	55477	AssignmentExpression	new_wbuf -> write_pos += sizeof ( message_header )		55252	0		+=			
ANR	55478	PtrMemberAccess	new_wbuf -> write_pos		55252	0					
ANR	55479	Identifier	new_wbuf		55252	0					
ANR	55480	Identifier	write_pos		55252	1					
ANR	55481	SizeofExpression	sizeof ( message_header )		55252	1					
ANR	55482	Sizeof	sizeof		55252	0					
ANR	55483	SizeofOperand	message_header		55252	1					
ANR	55484	IfStatement	if ( ! vport -> write_buf )		55252	21					
ANR	55485	Condition	! vport -> write_buf	234:8:6381:6397	55252	0	True				
ANR	55486	UnaryOperationExpression	! vport -> write_buf		55252	0					
ANR	55487	UnaryOperator	!		55252	0					
ANR	55488	PtrMemberAccess	vport -> write_buf		55252	1					
ANR	55489	Identifier	vport		55252	0					
ANR	55490	Identifier	write_buf		55252	1					
ANR	55491	CompoundStatement		34:27:1163:1163	55252	1					
ANR	55492	ExpressionStatement	vport -> write_buf = new_wbuf	235:8:6410:6437	55252	0	True				
ANR	55493	AssignmentExpression	vport -> write_buf = new_wbuf		55252	0		=			
ANR	55494	PtrMemberAccess	vport -> write_buf		55252	0					
ANR	55495	Identifier	vport		55252	0					
ANR	55496	Identifier	write_buf		55252	1					
ANR	55497	Identifier	new_wbuf		55252	1					
ANR	55498	ReturnStatement	return 0 ;	236:8:6447:6455	55252	1	True				
ANR	55499	PrimaryExpression	0		55252	0					
ANR	55500	ExpressionStatement	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )	239:4:6468:6515	55252	22	True				
ANR	55501	AssignmentExpression	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )		55252	0		=			
ANR	55502	Identifier	wbuf		55252	0					
ANR	55503	CallExpression	vdagent_virtio_port_get_last_wbuf ( vport )		55252	1					
ANR	55504	Callee	vdagent_virtio_port_get_last_wbuf		55252	0					
ANR	55505	Identifier	vdagent_virtio_port_get_last_wbuf		55252	0					
ANR	55506	ArgumentList	vport		55252	1					
ANR	55507	Argument	vport		55252	0					
ANR	55508	Identifier	vport		55252	0					
ANR	55509	ExpressionStatement	wbuf -> next = new_wbuf	240:4:6521:6542	55252	23	True				
ANR	55510	AssignmentExpression	wbuf -> next = new_wbuf		55252	0		=			
ANR	55511	PtrMemberAccess	wbuf -> next		55252	0					
ANR	55512	Identifier	wbuf		55252	0					
ANR	55513	Identifier	next		55252	1					
ANR	55514	Identifier	new_wbuf		55252	1					
ANR	55515	ReturnStatement	return 0 ;	242:4:6549:6557	55252	24	True				
ANR	55516	PrimaryExpression	0		55252	0					
ANR	55517	ReturnType	int		55252	1					
ANR	55518	Identifier	vdagent_virtio_port_write_start		55252	2					
ANR	55519	ParameterList	"struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , uint32_t data_size"		55252	3					
ANR	55520	Parameter	struct vdagent_virtio_port * vport	196:8:5083:5115	55252	0	True				
ANR	55521	ParameterType	struct vdagent_virtio_port *		55252	0					
ANR	55522	Identifier	vport		55252	1					
ANR	55523	Parameter	uint32_t port_nr	197:8:5126:5141	55252	1	True				
ANR	55524	ParameterType	uint32_t		55252	0					
ANR	55525	Identifier	port_nr		55252	1					
ANR	55526	Parameter	uint32_t message_type	198:8:5152:5172	55252	2	True				
ANR	55527	ParameterType	uint32_t		55252	0					
ANR	55528	Identifier	message_type		55252	1					
ANR	55529	Parameter	uint32_t message_opaque	199:8:5183:5205	55252	3	True				
ANR	55530	ParameterType	uint32_t		55252	0					
ANR	55531	Identifier	message_opaque		55252	1					
ANR	55532	Parameter	uint32_t data_size	200:8:5216:5233	55252	4	True				
ANR	55533	ParameterType	uint32_t		55252	0					
ANR	55534	Identifier	data_size		55252	1					
ANR	55535	CFGEntryNode	ENTRY		55252		True				
ANR	55536	CFGExitNode	EXIT		55252		True				
ANR	55537	Symbol	message_header . type		55252						
ANR	55538	Symbol	new_wbuf		55252						
ANR	55539	Symbol	VD_AGENT_PROTOCOL		55252						
ANR	55540	Symbol	vport		55252						
ANR	55541	Symbol	new_wbuf -> size		55252						
ANR	55542	Symbol	message_header		55252						
ANR	55543	Symbol	message_header . size		55252						
ANR	55544	Symbol	chunk_header		55252						
ANR	55545	Symbol	vport -> write_buf		55252						
ANR	55546	Symbol	new_wbuf -> write_pos		55252						
ANR	55547	Symbol	message_header . opaque		55252						
ANR	55548	Symbol	* vport		55252						
ANR	55549	Symbol	message_opaque		55252						
ANR	55550	Symbol	new_wbuf -> pos		55252						
ANR	55551	Symbol	GUINT64_TO_LE		55252						
ANR	55552	Symbol	data_size		55252						
ANR	55553	Symbol	malloc		55252						
ANR	55554	Symbol	port_nr		55252						
ANR	55555	Symbol	NULL		55252						
ANR	55556	Symbol	* new_wbuf		55252						
ANR	55557	Symbol	wbuf -> next		55252						
ANR	55558	Symbol	& message_header		55252						
ANR	55559	Symbol	message_type		55252						
ANR	55560	Symbol	wbuf		55252						
ANR	55561	Symbol	GUINT32_TO_LE		55252						
ANR	55562	Symbol	new_wbuf -> next		55252						
ANR	55563	Symbol	chunk_header . port		55252						
ANR	55564	Symbol	* wbuf		55252						
ANR	55565	Symbol	& chunk_header		55252						
ANR	55566	Symbol	new_wbuf -> buf		55252						
ANR	55567	Symbol	vdagent_virtio_port_get_last_wbuf		55252						
ANR	55568	Symbol	chunk_header . size		55252						
ANR	55569	Symbol	message_header . protocol		55252						
ANR	55570	Function	vdagent_virtio_port_write_append	245:0:6562:7131							
ANR	55571	FunctionDef	"vdagent_virtio_port_write_append (struct vdagent_virtio_port * vport , const uint8_t * data , uint32_t size)"		55570	0					
ANR	55572	CompoundStatement		247:0:6707:7131	55570	0					
ANR	55573	IdentifierDeclStatement	struct vdagent_virtio_port_buf * wbuf ;	248:4:6713:6749	55570	0	True				
ANR	55574	IdentifierDecl	* wbuf		55570	0					
ANR	55575	IdentifierDeclType	struct vdagent_virtio_port_buf *		55570	0					
ANR	55576	Identifier	wbuf		55570	1					
ANR	55577	ExpressionStatement	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )	250:4:6756:6803	55570	1	True				
ANR	55578	AssignmentExpression	wbuf = vdagent_virtio_port_get_last_wbuf ( vport )		55570	0		=			
ANR	55579	Identifier	wbuf		55570	0					
ANR	55580	CallExpression	vdagent_virtio_port_get_last_wbuf ( vport )		55570	1					
ANR	55581	Callee	vdagent_virtio_port_get_last_wbuf		55570	0					
ANR	55582	Identifier	vdagent_virtio_port_get_last_wbuf		55570	0					
ANR	55583	ArgumentList	vport		55570	1					
ANR	55584	Argument	vport		55570	0					
ANR	55585	Identifier	vport		55570	0					
ANR	55586	IfStatement	if ( ! wbuf )		55570	2					
ANR	55587	Condition	! wbuf	251:8:6813:6817	55570	0	True				
ANR	55588	UnaryOperationExpression	! wbuf		55570	0					
ANR	55589	UnaryOperator	!		55570	0					
ANR	55590	Identifier	wbuf		55570	1					
ANR	55591	CompoundStatement		5:15:112:112	55570	1					
ANR	55592	ExpressionStatement	"syslog ( LOG_ERR , ""can't append without a buffer"" )"	252:8:6830:6878	55570	0	True				
ANR	55593	CallExpression	"syslog ( LOG_ERR , ""can't append without a buffer"" )"		55570	0					
ANR	55594	Callee	syslog		55570	0					
ANR	55595	Identifier	syslog		55570	0					
ANR	55596	ArgumentList	LOG_ERR		55570	1					
ANR	55597	Argument	LOG_ERR		55570	0					
ANR	55598	Identifier	LOG_ERR		55570	0					
ANR	55599	Argument	"""can't append without a buffer"""		55570	1					
ANR	55600	PrimaryExpression	"""can't append without a buffer"""		55570	0					
ANR	55601	ReturnStatement	return - 1 ;	253:8:6888:6897	55570	1	True				
ANR	55602	UnaryOperationExpression	- 1		55570	0					
ANR	55603	UnaryOperator	-		55570	0					
ANR	55604	PrimaryExpression	1		55570	1					
ANR	55605	IfStatement	if ( wbuf -> size - wbuf -> write_pos < size )		55570	3					
ANR	55606	Condition	wbuf -> size - wbuf -> write_pos < size	256:8:6914:6948	55570	0	True				
ANR	55607	RelationalExpression	wbuf -> size - wbuf -> write_pos < size		55570	0		<			
ANR	55608	AdditiveExpression	wbuf -> size - wbuf -> write_pos		55570	0		-			
ANR	55609	PtrMemberAccess	wbuf -> size		55570	0					
ANR	55610	Identifier	wbuf		55570	0					
ANR	55611	Identifier	size		55570	1					
ANR	55612	PtrMemberAccess	wbuf -> write_pos		55570	1					
ANR	55613	Identifier	wbuf		55570	0					
ANR	55614	Identifier	write_pos		55570	1					
ANR	55615	Identifier	size		55570	1					
ANR	55616	CompoundStatement		10:45:243:243	55570	1					
ANR	55617	ExpressionStatement	"syslog ( LOG_ERR , ""can't append to full buffer"" )"	257:8:6961:7007	55570	0	True				
ANR	55618	CallExpression	"syslog ( LOG_ERR , ""can't append to full buffer"" )"		55570	0					
ANR	55619	Callee	syslog		55570	0					
ANR	55620	Identifier	syslog		55570	0					
ANR	55621	ArgumentList	LOG_ERR		55570	1					
ANR	55622	Argument	LOG_ERR		55570	0					
ANR	55623	Identifier	LOG_ERR		55570	0					
ANR	55624	Argument	"""can't append to full buffer"""		55570	1					
ANR	55625	PrimaryExpression	"""can't append to full buffer"""		55570	0					
ANR	55626	ReturnStatement	return - 1 ;	258:8:7017:7026	55570	1	True				
ANR	55627	UnaryOperationExpression	- 1		55570	0					
ANR	55628	UnaryOperator	-		55570	0					
ANR	55629	PrimaryExpression	1		55570	1					
ANR	55630	ExpressionStatement	"memcpy ( wbuf -> buf + wbuf -> write_pos , data , size )"	261:4:7039:7086	55570	4	True				
ANR	55631	CallExpression	"memcpy ( wbuf -> buf + wbuf -> write_pos , data , size )"		55570	0					
ANR	55632	Callee	memcpy		55570	0					
ANR	55633	Identifier	memcpy		55570	0					
ANR	55634	ArgumentList	wbuf -> buf + wbuf -> write_pos		55570	1					
ANR	55635	Argument	wbuf -> buf + wbuf -> write_pos		55570	0					
ANR	55636	AdditiveExpression	wbuf -> buf + wbuf -> write_pos		55570	0		+			
ANR	55637	PtrMemberAccess	wbuf -> buf		55570	0					
ANR	55638	Identifier	wbuf		55570	0					
ANR	55639	Identifier	buf		55570	1					
ANR	55640	PtrMemberAccess	wbuf -> write_pos		55570	1					
ANR	55641	Identifier	wbuf		55570	0					
ANR	55642	Identifier	write_pos		55570	1					
ANR	55643	Argument	data		55570	1					
ANR	55644	Identifier	data		55570	0					
ANR	55645	Argument	size		55570	2					
ANR	55646	Identifier	size		55570	0					
ANR	55647	ExpressionStatement	wbuf -> write_pos += size	262:4:7092:7115	55570	5	True				
ANR	55648	AssignmentExpression	wbuf -> write_pos += size		55570	0		+=			
ANR	55649	PtrMemberAccess	wbuf -> write_pos		55570	0					
ANR	55650	Identifier	wbuf		55570	0					
ANR	55651	Identifier	write_pos		55570	1					
ANR	55652	Identifier	size		55570	1					
ANR	55653	ReturnStatement	return 0 ;	263:4:7121:7129	55570	6	True				
ANR	55654	PrimaryExpression	0		55570	0					
ANR	55655	ReturnType	int		55570	1					
ANR	55656	Identifier	vdagent_virtio_port_write_append		55570	2					
ANR	55657	ParameterList	"struct vdagent_virtio_port * vport , const uint8_t * data , uint32_t size"		55570	3					
ANR	55658	Parameter	struct vdagent_virtio_port * vport	245:37:6599:6631	55570	0	True				
ANR	55659	ParameterType	struct vdagent_virtio_port *		55570	0					
ANR	55660	Identifier	vport		55570	1					
ANR	55661	Parameter	const uint8_t * data	246:37:6671:6689	55570	1	True				
ANR	55662	ParameterType	const uint8_t *		55570	0					
ANR	55663	Identifier	data		55570	1					
ANR	55664	Parameter	uint32_t size	246:58:6692:6704	55570	2	True				
ANR	55665	ParameterType	uint32_t		55570	0					
ANR	55666	Identifier	size		55570	1					
ANR	55667	CFGEntryNode	ENTRY		55570		True				
ANR	55668	CFGExitNode	EXIT		55570		True				
ANR	55669	Symbol	vport		55570						
ANR	55670	Symbol	data		55570						
ANR	55671	Symbol	size		55570						
ANR	55672	Symbol	wbuf -> size		55570						
ANR	55673	Symbol	* wbuf		55570						
ANR	55674	Symbol	LOG_ERR		55570						
ANR	55675	Symbol	wbuf -> write_pos		55570						
ANR	55676	Symbol	wbuf		55570						
ANR	55677	Symbol	vdagent_virtio_port_get_last_wbuf		55570						
ANR	55678	Symbol	wbuf -> buf		55570						
ANR	55679	Function	vdagent_virtio_port_write	266:0:7134:7598							
ANR	55680	FunctionDef	"vdagent_virtio_port_write (struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , const uint8_t * data , uint32_t data_size)"		55679	0					
ANR	55681	CompoundStatement		273:0:7355:7598	55679	0					
ANR	55682	IfStatement	"if ( vdagent_virtio_port_write_start ( vport , port_nr , message_type , message_opaque , data_size ) )"		55679	0					
ANR	55683	Condition	"vdagent_virtio_port_write_start ( vport , port_nr , message_type , message_opaque , data_size )"	274:8:7365:7492	55679	0	True				
ANR	55684	CallExpression	"vdagent_virtio_port_write_start ( vport , port_nr , message_type , message_opaque , data_size )"		55679	0					
ANR	55685	Callee	vdagent_virtio_port_write_start		55679	0					
ANR	55686	Identifier	vdagent_virtio_port_write_start		55679	0					
ANR	55687	ArgumentList	vport		55679	1					
ANR	55688	Argument	vport		55679	0					
ANR	55689	Identifier	vport		55679	0					
ANR	55690	Argument	port_nr		55679	1					
ANR	55691	Identifier	port_nr		55679	0					
ANR	55692	Argument	message_type		55679	2					
ANR	55693	Identifier	message_type		55679	0					
ANR	55694	Argument	message_opaque		55679	3					
ANR	55695	Identifier	message_opaque		55679	0					
ANR	55696	Argument	data_size		55679	4					
ANR	55697	Identifier	data_size		55679	0					
ANR	55698	CompoundStatement		3:68:139:139	55679	1					
ANR	55699	ReturnStatement	return - 1 ;	276:8:7505:7514	55679	0	True				
ANR	55700	UnaryOperationExpression	- 1		55679	0					
ANR	55701	UnaryOperator	-		55679	0					
ANR	55702	PrimaryExpression	1		55679	1					
ANR	55703	ExpressionStatement	"vdagent_virtio_port_write_append ( vport , data , data_size )"	278:4:7526:7582	55679	1	True				
ANR	55704	CallExpression	"vdagent_virtio_port_write_append ( vport , data , data_size )"		55679	0					
ANR	55705	Callee	vdagent_virtio_port_write_append		55679	0					
ANR	55706	Identifier	vdagent_virtio_port_write_append		55679	0					
ANR	55707	ArgumentList	vport		55679	1					
ANR	55708	Argument	vport		55679	0					
ANR	55709	Identifier	vport		55679	0					
ANR	55710	Argument	data		55679	1					
ANR	55711	Identifier	data		55679	0					
ANR	55712	Argument	data_size		55679	2					
ANR	55713	Identifier	data_size		55679	0					
ANR	55714	ReturnStatement	return 0 ;	279:4:7588:7596	55679	2	True				
ANR	55715	PrimaryExpression	0		55679	0					
ANR	55716	ReturnType	int		55679	1					
ANR	55717	Identifier	vdagent_virtio_port_write		55679	2					
ANR	55718	ParameterList	"struct vdagent_virtio_port * vport , uint32_t port_nr , uint32_t message_type , uint32_t message_opaque , const uint8_t * data , uint32_t data_size"		55679	3					
ANR	55719	Parameter	struct vdagent_virtio_port * vport	267:8:7173:7205	55679	0	True				
ANR	55720	ParameterType	struct vdagent_virtio_port *		55679	0					
ANR	55721	Identifier	vport		55679	1					
ANR	55722	Parameter	uint32_t port_nr	268:8:7216:7231	55679	1	True				
ANR	55723	ParameterType	uint32_t		55679	0					
ANR	55724	Identifier	port_nr		55679	1					
ANR	55725	Parameter	uint32_t message_type	269:8:7242:7262	55679	2	True				
ANR	55726	ParameterType	uint32_t		55679	0					
ANR	55727	Identifier	message_type		55679	1					
ANR	55728	Parameter	uint32_t message_opaque	270:8:7273:7295	55679	3	True				
ANR	55729	ParameterType	uint32_t		55679	0					
ANR	55730	Identifier	message_opaque		55679	1					
ANR	55731	Parameter	const uint8_t * data	271:8:7306:7324	55679	4	True				
ANR	55732	ParameterType	const uint8_t *		55679	0					
ANR	55733	Identifier	data		55679	1					
ANR	55734	Parameter	uint32_t data_size	272:8:7335:7352	55679	5	True				
ANR	55735	ParameterType	uint32_t		55679	0					
ANR	55736	Identifier	data_size		55679	1					
ANR	55737	CFGEntryNode	ENTRY		55679		True				
ANR	55738	CFGExitNode	EXIT		55679		True				
ANR	55739	Symbol	data_size		55679						
ANR	55740	Symbol	port_nr		55679						
ANR	55741	Symbol	vport		55679						
ANR	55742	Symbol	data		55679						
ANR	55743	Symbol	vdagent_virtio_port_write_start		55679						
ANR	55744	Symbol	message_opaque		55679						
ANR	55745	Symbol	message_type		55679						
ANR	55746	Function	vdagent_virtio_port_flush	282:0:7601:7761							
ANR	55747	FunctionDef	vdagent_virtio_port_flush (struct vdagent_virtio_port * * vportp)		55746	0					
ANR	55748	CompoundStatement		283:0:7669:7761	55746	0					
ANR	55749	WhileStatement	while ( * vportp && ( * vportp ) -> write_buf )		55746	0					
ANR	55750	Condition	* vportp && ( * vportp ) -> write_buf	284:11:7682:7712	55746	0	True				
ANR	55751	AndExpression	* vportp && ( * vportp ) -> write_buf		55746	0		&&			
ANR	55752	UnaryOperationExpression	* vportp		55746	0					
ANR	55753	UnaryOperator	*		55746	0					
ANR	55754	Identifier	vportp		55746	1					
ANR	55755	PtrMemberAccess	( * vportp ) -> write_buf		55746	1					
ANR	55756	UnaryOperationExpression	* vportp		55746	0					
ANR	55757	UnaryOperator	*		55746	0					
ANR	55758	Identifier	vportp		55746	1					
ANR	55759	Identifier	write_buf		55746	1					
ANR	55760	ExpressionStatement	vdagent_virtio_port_do_write ( vportp )	285:8:7723:7759	55746	1	True				
ANR	55761	CallExpression	vdagent_virtio_port_do_write ( vportp )		55746	0					
ANR	55762	Callee	vdagent_virtio_port_do_write		55746	0					
ANR	55763	Identifier	vdagent_virtio_port_do_write		55746	0					
ANR	55764	ArgumentList	vportp		55746	1					
ANR	55765	Argument	vportp		55746	0					
ANR	55766	Identifier	vportp		55746	0					
ANR	55767	ReturnType	void		55746	1					
ANR	55768	Identifier	vdagent_virtio_port_flush		55746	2					
ANR	55769	ParameterList	struct vdagent_virtio_port * * vportp		55746	3					
ANR	55770	Parameter	struct vdagent_virtio_port * * vportp	282:31:7632:7666	55746	0	True				
ANR	55771	ParameterType	struct vdagent_virtio_port * *		55746	0					
ANR	55772	Identifier	vportp		55746	1					
ANR	55773	CFGEntryNode	ENTRY		55746		True				
ANR	55774	CFGExitNode	EXIT		55746		True				
ANR	55775	Symbol	vportp		55746						
ANR	55776	Symbol	* * vportp		55746						
ANR	55777	Symbol	* vportp		55746						
ANR	55778	Symbol	( * vportp ) -> write_buf		55746						
ANR	55779	Function	vdagent_virtio_port_reset	288:0:7764:8084							
ANR	55780	FunctionDef	"vdagent_virtio_port_reset (struct vdagent_virtio_port * vport , int port)"		55779	0					
ANR	55781	CompoundStatement		289:0:7840:8084	55779	0					
ANR	55782	IfStatement	if ( port >= VDP_END_PORT )		55779	0					
ANR	55783	Condition	port >= VDP_END_PORT	290:8:7850:7869	55779	0	True				
ANR	55784	RelationalExpression	port >= VDP_END_PORT		55779	0		>=			
ANR	55785	Identifier	port		55779	0					
ANR	55786	Identifier	VDP_END_PORT		55779	1					
ANR	55787	CompoundStatement		2:30:31:31	55779	1					
ANR	55788	ExpressionStatement	"syslog ( LOG_ERR , ""vdagent_virtio_port_reset port out of range"" )"	291:8:7882:7944	55779	0	True				
ANR	55789	CallExpression	"syslog ( LOG_ERR , ""vdagent_virtio_port_reset port out of range"" )"		55779	0					
ANR	55790	Callee	syslog		55779	0					
ANR	55791	Identifier	syslog		55779	0					
ANR	55792	ArgumentList	LOG_ERR		55779	1					
ANR	55793	Argument	LOG_ERR		55779	0					
ANR	55794	Identifier	LOG_ERR		55779	0					
ANR	55795	Argument	"""vdagent_virtio_port_reset port out of range"""		55779	1					
ANR	55796	PrimaryExpression	"""vdagent_virtio_port_reset port out of range"""		55779	0					
ANR	55797	ReturnStatement	return ;	292:8:7954:7960	55779	1	True				
ANR	55798	ExpressionStatement	free ( vport -> port_data [ port ] . message_data )	294:4:7972:8013	55779	1	True				
ANR	55799	CallExpression	free ( vport -> port_data [ port ] . message_data )		55779	0					
ANR	55800	Callee	free		55779	0					
ANR	55801	Identifier	free		55779	0					
ANR	55802	ArgumentList	vport -> port_data [ port ] . message_data		55779	1					
ANR	55803	Argument	vport -> port_data [ port ] . message_data		55779	0					
ANR	55804	MemberAccess	vport -> port_data [ port ] . message_data		55779	0					
ANR	55805	ArrayIndexing	vport -> port_data [ port ]		55779	0					
ANR	55806	PtrMemberAccess	vport -> port_data		55779	0					
ANR	55807	Identifier	vport		55779	0					
ANR	55808	Identifier	port_data		55779	1					
ANR	55809	Identifier	port		55779	1					
ANR	55810	Identifier	message_data		55779	1					
ANR	55811	ExpressionStatement	"memset ( & vport -> port_data [ port ] , 0 , sizeof ( vport -> port_data [ 0 ] ) )"	295:4:8019:8082	55779	2	True				
ANR	55812	CallExpression	"memset ( & vport -> port_data [ port ] , 0 , sizeof ( vport -> port_data [ 0 ] ) )"		55779	0					
ANR	55813	Callee	memset		55779	0					
ANR	55814	Identifier	memset		55779	0					
ANR	55815	ArgumentList	& vport -> port_data [ port ]		55779	1					
ANR	55816	Argument	& vport -> port_data [ port ]		55779	0					
ANR	55817	UnaryOperationExpression	& vport -> port_data [ port ]		55779	0					
ANR	55818	UnaryOperator	&		55779	0					
ANR	55819	ArrayIndexing	vport -> port_data [ port ]		55779	1					
ANR	55820	PtrMemberAccess	vport -> port_data		55779	0					
ANR	55821	Identifier	vport		55779	0					
ANR	55822	Identifier	port_data		55779	1					
ANR	55823	Identifier	port		55779	1					
ANR	55824	Argument	0		55779	1					
ANR	55825	PrimaryExpression	0		55779	0					
ANR	55826	Argument	sizeof ( vport -> port_data [ 0 ] )		55779	2					
ANR	55827	SizeofExpression	sizeof ( vport -> port_data [ 0 ] )		55779	0					
ANR	55828	Sizeof	sizeof		55779	0					
ANR	55829	ArrayIndexing	vport -> port_data [ 0 ]		55779	1					
ANR	55830	PtrMemberAccess	vport -> port_data		55779	0					
ANR	55831	Identifier	vport		55779	0					
ANR	55832	Identifier	port_data		55779	1					
ANR	55833	PrimaryExpression	0		55779	1					
ANR	55834	ReturnType	void		55779	1					
ANR	55835	Identifier	vdagent_virtio_port_reset		55779	2					
ANR	55836	ParameterList	"struct vdagent_virtio_port * vport , int port"		55779	3					
ANR	55837	Parameter	struct vdagent_virtio_port * vport	288:31:7795:7827	55779	0	True				
ANR	55838	ParameterType	struct vdagent_virtio_port *		55779	0					
ANR	55839	Identifier	vport		55779	1					
ANR	55840	Parameter	int port	288:66:7830:7837	55779	1	True				
ANR	55841	ParameterType	int		55779	0					
ANR	55842	Identifier	port		55779	1					
ANR	55843	CFGEntryNode	ENTRY		55779		True				
ANR	55844	CFGExitNode	EXIT		55779		True				
ANR	55845	Symbol	vport		55779						
ANR	55846	Symbol	VDP_END_PORT		55779						
ANR	55847	Symbol	* port		55779						
ANR	55848	Symbol	port		55779						
ANR	55849	Symbol	* vport		55779						
ANR	55850	Symbol	* vport -> port_data		55779						
ANR	55851	Symbol	vport -> port_data		55779						
ANR	55852	Symbol	LOG_ERR		55779						
ANR	55853	Symbol	vport -> port_data [ port ] . message_data		55779						
ANR	55854	Symbol	* * vport		55779						
ANR	55855	Function	vdagent_virtio_port_do_chunk	298:0:8087:10765							
ANR	55856	FunctionDef	vdagent_virtio_port_do_chunk (struct vdagent_virtio_port * * vportp)		55855	0					
ANR	55857	CompoundStatement		299:0:8165:10765	55855	0					
ANR	55858	IdentifierDeclStatement	"int avail , read , pos = 0 ;"	300:4:8171:8195	55855	0	True				
ANR	55859	IdentifierDecl	avail		55855	0					
ANR	55860	IdentifierDeclType	int		55855	0					
ANR	55861	Identifier	avail		55855	1					
ANR	55862	IdentifierDecl	read		55855	1					
ANR	55863	IdentifierDeclType	int		55855	0					
ANR	55864	Identifier	read		55855	1					
ANR	55865	IdentifierDecl	pos = 0		55855	2					
ANR	55866	IdentifierDeclType	int		55855	0					
ANR	55867	Identifier	pos		55855	1					
ANR	55868	AssignmentExpression	pos = 0		55855	2		=			
ANR	55869	Identifier	pos		55855	0					
ANR	55870	PrimaryExpression	0		55855	1					
ANR	55871	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	301:4:8201:8244	55855	1	True				
ANR	55872	IdentifierDecl	* vport = * vportp		55855	0					
ANR	55873	IdentifierDeclType	struct vdagent_virtio_port *		55855	0					
ANR	55874	Identifier	vport		55855	1					
ANR	55875	AssignmentExpression	* vport = * vportp		55855	2		=			
ANR	55876	Identifier	vport		55855	0					
ANR	55877	UnaryOperationExpression	* vportp		55855	1					
ANR	55878	UnaryOperator	*		55855	0					
ANR	55879	Identifier	vportp		55855	1					
ANR	55880	IdentifierDeclStatement	struct vdagent_virtio_port_chunk_port_data * port = & vport -> port_data [ vport -> chunk_header . port ] ;	302:4:8250:8352	55855	2	True				
ANR	55881	IdentifierDecl	* port = & vport -> port_data [ vport -> chunk_header . port ]		55855	0					
ANR	55882	IdentifierDeclType	struct vdagent_virtio_port_chunk_port_data *		55855	0					
ANR	55883	Identifier	port		55855	1					
ANR	55884	AssignmentExpression	* port = & vport -> port_data [ vport -> chunk_header . port ]		55855	2		=			
ANR	55885	Identifier	port		55855	0					
ANR	55886	UnaryOperationExpression	& vport -> port_data [ vport -> chunk_header . port ]		55855	1					
ANR	55887	UnaryOperator	&		55855	0					
ANR	55888	ArrayIndexing	vport -> port_data [ vport -> chunk_header . port ]		55855	1					
ANR	55889	PtrMemberAccess	vport -> port_data		55855	0					
ANR	55890	Identifier	vport		55855	0					
ANR	55891	Identifier	port_data		55855	1					
ANR	55892	MemberAccess	vport -> chunk_header . port		55855	1					
ANR	55893	PtrMemberAccess	vport -> chunk_header		55855	0					
ANR	55894	Identifier	vport		55855	0					
ANR	55895	Identifier	chunk_header		55855	1					
ANR	55896	Identifier	port		55855	1					
ANR	55897	IfStatement	if ( port -> message_header_read < sizeof ( port -> message_header ) )		55855	3					
ANR	55898	Condition	port -> message_header_read < sizeof ( port -> message_header )	305:8:8363:8418	55855	0	True				
ANR	55899	RelationalExpression	port -> message_header_read < sizeof ( port -> message_header )		55855	0		<			
ANR	55900	PtrMemberAccess	port -> message_header_read		55855	0					
ANR	55901	Identifier	port		55855	0					
ANR	55902	Identifier	message_header_read		55855	1					
ANR	55903	SizeofExpression	sizeof ( port -> message_header )		55855	1					
ANR	55904	Sizeof	sizeof		55855	0					
ANR	55905	PtrMemberAccess	port -> message_header		55855	1					
ANR	55906	Identifier	port		55855	0					
ANR	55907	Identifier	message_header		55855	1					
ANR	55908	CompoundStatement		7:66:255:255	55855	1					
ANR	55909	ExpressionStatement	read = sizeof ( port -> message_header ) - port -> message_header_read	306:8:8431:8494	55855	0	True				
ANR	55910	AssignmentExpression	read = sizeof ( port -> message_header ) - port -> message_header_read		55855	0		=			
ANR	55911	Identifier	read		55855	0					
ANR	55912	AdditiveExpression	sizeof ( port -> message_header ) - port -> message_header_read		55855	1		-			
ANR	55913	SizeofExpression	sizeof ( port -> message_header )		55855	0					
ANR	55914	Sizeof	sizeof		55855	0					
ANR	55915	PtrMemberAccess	port -> message_header		55855	1					
ANR	55916	Identifier	port		55855	0					
ANR	55917	Identifier	message_header		55855	1					
ANR	55918	PtrMemberAccess	port -> message_header_read		55855	1					
ANR	55919	Identifier	port		55855	0					
ANR	55920	Identifier	message_header_read		55855	1					
ANR	55921	IfStatement	if ( read > vport -> chunk_header . size )		55855	1					
ANR	55922	Condition	read > vport -> chunk_header . size	307:12:8508:8538	55855	0	True				
ANR	55923	RelationalExpression	read > vport -> chunk_header . size		55855	0		>			
ANR	55924	Identifier	read		55855	0					
ANR	55925	MemberAccess	vport -> chunk_header . size		55855	1					
ANR	55926	PtrMemberAccess	vport -> chunk_header		55855	0					
ANR	55927	Identifier	vport		55855	0					
ANR	55928	Identifier	chunk_header		55855	1					
ANR	55929	Identifier	size		55855	1					
ANR	55930	CompoundStatement		9:45:375:375	55855	1					
ANR	55931	ExpressionStatement	read = vport -> chunk_header . size	308:12:8555:8586	55855	0	True				
ANR	55932	AssignmentExpression	read = vport -> chunk_header . size		55855	0		=			
ANR	55933	Identifier	read		55855	0					
ANR	55934	MemberAccess	vport -> chunk_header . size		55855	1					
ANR	55935	PtrMemberAccess	vport -> chunk_header		55855	0					
ANR	55936	Identifier	vport		55855	0					
ANR	55937	Identifier	chunk_header		55855	1					
ANR	55938	Identifier	size		55855	1					
ANR	55939	ExpressionStatement	"memcpy ( ( uint8_t * ) & port -> message_header + port -> message_header_read , vport -> chunk_data , read )"	310:8:8606:8714	55855	2	True				
ANR	55940	CallExpression	"memcpy ( ( uint8_t * ) & port -> message_header + port -> message_header_read , vport -> chunk_data , read )"		55855	0					
ANR	55941	Callee	memcpy		55855	0					
ANR	55942	Identifier	memcpy		55855	0					
ANR	55943	ArgumentList	( uint8_t * ) & port -> message_header + port -> message_header_read		55855	1					
ANR	55944	Argument	( uint8_t * ) & port -> message_header + port -> message_header_read		55855	0					
ANR	55945	AdditiveExpression	( uint8_t * ) & port -> message_header + port -> message_header_read		55855	0		+			
ANR	55946	CastExpression	( uint8_t * ) & port -> message_header		55855	0					
ANR	55947	CastTarget	uint8_t *		55855	0					
ANR	55948	UnaryOperationExpression	& port -> message_header		55855	1					
ANR	55949	UnaryOperator	&		55855	0					
ANR	55950	PtrMemberAccess	port -> message_header		55855	1					
ANR	55951	Identifier	port		55855	0					
ANR	55952	Identifier	message_header		55855	1					
ANR	55953	PtrMemberAccess	port -> message_header_read		55855	1					
ANR	55954	Identifier	port		55855	0					
ANR	55955	Identifier	message_header_read		55855	1					
ANR	55956	Argument	vport -> chunk_data		55855	1					
ANR	55957	PtrMemberAccess	vport -> chunk_data		55855	0					
ANR	55958	Identifier	vport		55855	0					
ANR	55959	Identifier	chunk_data		55855	1					
ANR	55960	Argument	read		55855	2					
ANR	55961	Identifier	read		55855	0					
ANR	55962	ExpressionStatement	port -> message_header_read += read	312:8:8724:8757	55855	3	True				
ANR	55963	AssignmentExpression	port -> message_header_read += read		55855	0		+=			
ANR	55964	PtrMemberAccess	port -> message_header_read		55855	0					
ANR	55965	Identifier	port		55855	0					
ANR	55966	Identifier	message_header_read		55855	1					
ANR	55967	Identifier	read		55855	1					
ANR	55968	IfStatement	if ( port -> message_header_read == sizeof ( port -> message_header ) )		55855	4					
ANR	55969	Condition	port -> message_header_read == sizeof ( port -> message_header )	313:12:8771:8827	55855	0	True				
ANR	55970	EqualityExpression	port -> message_header_read == sizeof ( port -> message_header )		55855	0		==			
ANR	55971	PtrMemberAccess	port -> message_header_read		55855	0					
ANR	55972	Identifier	port		55855	0					
ANR	55973	Identifier	message_header_read		55855	1					
ANR	55974	SizeofExpression	sizeof ( port -> message_header )		55855	1					
ANR	55975	Sizeof	sizeof		55855	0					
ANR	55976	PtrMemberAccess	port -> message_header		55855	1					
ANR	55977	Identifier	port		55855	0					
ANR	55978	Identifier	message_header		55855	1					
ANR	55979	CompoundStatement		15:71:664:664	55855	1					
ANR	55980	ExpressionStatement	port -> message_header . protocol = GUINT32_FROM_LE ( port -> message_header . protocol )	315:12:8845:8923	55855	0	True				
ANR	55981	AssignmentExpression	port -> message_header . protocol = GUINT32_FROM_LE ( port -> message_header . protocol )		55855	0		=			
ANR	55982	MemberAccess	port -> message_header . protocol		55855	0					
ANR	55983	PtrMemberAccess	port -> message_header		55855	0					
ANR	55984	Identifier	port		55855	0					
ANR	55985	Identifier	message_header		55855	1					
ANR	55986	Identifier	protocol		55855	1					
ANR	55987	CallExpression	GUINT32_FROM_LE ( port -> message_header . protocol )		55855	1					
ANR	55988	Callee	GUINT32_FROM_LE		55855	0					
ANR	55989	Identifier	GUINT32_FROM_LE		55855	0					
ANR	55990	ArgumentList	port -> message_header . protocol		55855	1					
ANR	55991	Argument	port -> message_header . protocol		55855	0					
ANR	55992	MemberAccess	port -> message_header . protocol		55855	0					
ANR	55993	PtrMemberAccess	port -> message_header		55855	0					
ANR	55994	Identifier	port		55855	0					
ANR	55995	Identifier	message_header		55855	1					
ANR	55996	Identifier	protocol		55855	1					
ANR	55997	ExpressionStatement	port -> message_header . type = GUINT32_FROM_LE ( port -> message_header . type )	316:12:8937:9007	55855	1	True				
ANR	55998	AssignmentExpression	port -> message_header . type = GUINT32_FROM_LE ( port -> message_header . type )		55855	0		=			
ANR	55999	MemberAccess	port -> message_header . type		55855	0					
ANR	56000	PtrMemberAccess	port -> message_header		55855	0					
ANR	56001	Identifier	port		55855	0					
ANR	56002	Identifier	message_header		55855	1					
ANR	56003	Identifier	type		55855	1					
ANR	56004	CallExpression	GUINT32_FROM_LE ( port -> message_header . type )		55855	1					
ANR	56005	Callee	GUINT32_FROM_LE		55855	0					
ANR	56006	Identifier	GUINT32_FROM_LE		55855	0					
ANR	56007	ArgumentList	port -> message_header . type		55855	1					
ANR	56008	Argument	port -> message_header . type		55855	0					
ANR	56009	MemberAccess	port -> message_header . type		55855	0					
ANR	56010	PtrMemberAccess	port -> message_header		55855	0					
ANR	56011	Identifier	port		55855	0					
ANR	56012	Identifier	message_header		55855	1					
ANR	56013	Identifier	type		55855	1					
ANR	56014	ExpressionStatement	port -> message_header . opaque = GUINT64_FROM_LE ( port -> message_header . opaque )	317:12:9021:9095	55855	2	True				
ANR	56015	AssignmentExpression	port -> message_header . opaque = GUINT64_FROM_LE ( port -> message_header . opaque )		55855	0		=			
ANR	56016	MemberAccess	port -> message_header . opaque		55855	0					
ANR	56017	PtrMemberAccess	port -> message_header		55855	0					
ANR	56018	Identifier	port		55855	0					
ANR	56019	Identifier	message_header		55855	1					
ANR	56020	Identifier	opaque		55855	1					
ANR	56021	CallExpression	GUINT64_FROM_LE ( port -> message_header . opaque )		55855	1					
ANR	56022	Callee	GUINT64_FROM_LE		55855	0					
ANR	56023	Identifier	GUINT64_FROM_LE		55855	0					
ANR	56024	ArgumentList	port -> message_header . opaque		55855	1					
ANR	56025	Argument	port -> message_header . opaque		55855	0					
ANR	56026	MemberAccess	port -> message_header . opaque		55855	0					
ANR	56027	PtrMemberAccess	port -> message_header		55855	0					
ANR	56028	Identifier	port		55855	0					
ANR	56029	Identifier	message_header		55855	1					
ANR	56030	Identifier	opaque		55855	1					
ANR	56031	ExpressionStatement	port -> message_header . size = GUINT32_FROM_LE ( port -> message_header . size )	318:12:9109:9179	55855	3	True				
ANR	56032	AssignmentExpression	port -> message_header . size = GUINT32_FROM_LE ( port -> message_header . size )		55855	0		=			
ANR	56033	MemberAccess	port -> message_header . size		55855	0					
ANR	56034	PtrMemberAccess	port -> message_header		55855	0					
ANR	56035	Identifier	port		55855	0					
ANR	56036	Identifier	message_header		55855	1					
ANR	56037	Identifier	size		55855	1					
ANR	56038	CallExpression	GUINT32_FROM_LE ( port -> message_header . size )		55855	1					
ANR	56039	Callee	GUINT32_FROM_LE		55855	0					
ANR	56040	Identifier	GUINT32_FROM_LE		55855	0					
ANR	56041	ArgumentList	port -> message_header . size		55855	1					
ANR	56042	Argument	port -> message_header . size		55855	0					
ANR	56043	MemberAccess	port -> message_header . size		55855	0					
ANR	56044	PtrMemberAccess	port -> message_header		55855	0					
ANR	56045	Identifier	port		55855	0					
ANR	56046	Identifier	message_header		55855	1					
ANR	56047	Identifier	size		55855	1					
ANR	56048	IfStatement	if ( port -> message_header . size )		55855	4					
ANR	56049	Condition	port -> message_header . size	320:16:9198:9222	55855	0	True				
ANR	56050	MemberAccess	port -> message_header . size		55855	0					
ANR	56051	PtrMemberAccess	port -> message_header		55855	0					
ANR	56052	Identifier	port		55855	0					
ANR	56053	Identifier	message_header		55855	1					
ANR	56054	Identifier	size		55855	1					
ANR	56055	CompoundStatement		22:43:1059:1059	55855	1					
ANR	56056	ExpressionStatement	port -> message_data = malloc ( port -> message_header . size )	321:16:9243:9297	55855	0	True				
ANR	56057	AssignmentExpression	port -> message_data = malloc ( port -> message_header . size )		55855	0		=			
ANR	56058	PtrMemberAccess	port -> message_data		55855	0					
ANR	56059	Identifier	port		55855	0					
ANR	56060	Identifier	message_data		55855	1					
ANR	56061	CallExpression	malloc ( port -> message_header . size )		55855	1					
ANR	56062	Callee	malloc		55855	0					
ANR	56063	Identifier	malloc		55855	0					
ANR	56064	ArgumentList	port -> message_header . size		55855	1					
ANR	56065	Argument	port -> message_header . size		55855	0					
ANR	56066	MemberAccess	port -> message_header . size		55855	0					
ANR	56067	PtrMemberAccess	port -> message_header		55855	0					
ANR	56068	Identifier	port		55855	0					
ANR	56069	Identifier	message_header		55855	1					
ANR	56070	Identifier	size		55855	1					
ANR	56071	IfStatement	if ( ! port -> message_data )		55855	1					
ANR	56072	Condition	! port -> message_data	322:20:9319:9337	55855	0	True				
ANR	56073	UnaryOperationExpression	! port -> message_data		55855	0					
ANR	56074	UnaryOperator	!		55855	0					
ANR	56075	PtrMemberAccess	port -> message_data		55855	1					
ANR	56076	Identifier	port		55855	0					
ANR	56077	Identifier	message_data		55855	1					
ANR	56078	CompoundStatement		24:41:1174:1174	55855	1					
ANR	56079	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory, disconnecting virtio"" )"	323:20:9362:9416	55855	0	True				
ANR	56080	CallExpression	"syslog ( LOG_ERR , ""out of memory, disconnecting virtio"" )"		55855	0					
ANR	56081	Callee	syslog		55855	0					
ANR	56082	Identifier	syslog		55855	0					
ANR	56083	ArgumentList	LOG_ERR		55855	1					
ANR	56084	Argument	LOG_ERR		55855	0					
ANR	56085	Identifier	LOG_ERR		55855	0					
ANR	56086	Argument	"""out of memory, disconnecting virtio"""		55855	1					
ANR	56087	PrimaryExpression	"""out of memory, disconnecting virtio"""		55855	0					
ANR	56088	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	324:20:9438:9473	55855	1	True				
ANR	56089	CallExpression	vdagent_virtio_port_destroy ( vportp )		55855	0					
ANR	56090	Callee	vdagent_virtio_port_destroy		55855	0					
ANR	56091	Identifier	vdagent_virtio_port_destroy		55855	0					
ANR	56092	ArgumentList	vportp		55855	1					
ANR	56093	Argument	vportp		55855	0					
ANR	56094	Identifier	vportp		55855	0					
ANR	56095	ReturnStatement	return ;	325:20:9495:9501	55855	2	True				
ANR	56096	ExpressionStatement	pos = read	329:8:9553:9563	55855	5	True				
ANR	56097	AssignmentExpression	pos = read		55855	0		=			
ANR	56098	Identifier	pos		55855	0					
ANR	56099	Identifier	read		55855	1					
ANR	56100	IfStatement	if ( port -> message_header_read == sizeof ( port -> message_header ) )		55855	4					
ANR	56101	Condition	port -> message_header_read == sizeof ( port -> message_header )	332:8:9580:9636	55855	0	True				
ANR	56102	EqualityExpression	port -> message_header_read == sizeof ( port -> message_header )		55855	0		==			
ANR	56103	PtrMemberAccess	port -> message_header_read		55855	0					
ANR	56104	Identifier	port		55855	0					
ANR	56105	Identifier	message_header_read		55855	1					
ANR	56106	SizeofExpression	sizeof ( port -> message_header )		55855	1					
ANR	56107	Sizeof	sizeof		55855	0					
ANR	56108	PtrMemberAccess	port -> message_header		55855	1					
ANR	56109	Identifier	port		55855	0					
ANR	56110	Identifier	message_header		55855	1					
ANR	56111	CompoundStatement		34:67:1473:1473	55855	1					
ANR	56112	ExpressionStatement	read = port -> message_header . size - port -> message_data_pos	333:8:9649:9707	55855	0	True				
ANR	56113	AssignmentExpression	read = port -> message_header . size - port -> message_data_pos		55855	0		=			
ANR	56114	Identifier	read		55855	0					
ANR	56115	AdditiveExpression	port -> message_header . size - port -> message_data_pos		55855	1		-			
ANR	56116	MemberAccess	port -> message_header . size		55855	0					
ANR	56117	PtrMemberAccess	port -> message_header		55855	0					
ANR	56118	Identifier	port		55855	0					
ANR	56119	Identifier	message_header		55855	1					
ANR	56120	Identifier	size		55855	1					
ANR	56121	PtrMemberAccess	port -> message_data_pos		55855	1					
ANR	56122	Identifier	port		55855	0					
ANR	56123	Identifier	message_data_pos		55855	1					
ANR	56124	ExpressionStatement	avail = vport -> chunk_header . size - pos	334:8:9717:9755	55855	1	True				
ANR	56125	AssignmentExpression	avail = vport -> chunk_header . size - pos		55855	0		=			
ANR	56126	Identifier	avail		55855	0					
ANR	56127	AdditiveExpression	vport -> chunk_header . size - pos		55855	1		-			
ANR	56128	MemberAccess	vport -> chunk_header . size		55855	0					
ANR	56129	PtrMemberAccess	vport -> chunk_header		55855	0					
ANR	56130	Identifier	vport		55855	0					
ANR	56131	Identifier	chunk_header		55855	1					
ANR	56132	Identifier	size		55855	1					
ANR	56133	Identifier	pos		55855	1					
ANR	56134	IfStatement	if ( avail > read )		55855	2					
ANR	56135	Condition	avail > read	336:12:9770:9781	55855	0	True				
ANR	56136	RelationalExpression	avail > read		55855	0		>			
ANR	56137	Identifier	avail		55855	0					
ANR	56138	Identifier	read		55855	1					
ANR	56139	CompoundStatement		38:26:1618:1618	55855	1					
ANR	56140	ExpressionStatement	"syslog ( LOG_ERR , ""chunk larger than message, lost sync?"" )"	337:12:9798:9854	55855	0	True				
ANR	56141	CallExpression	"syslog ( LOG_ERR , ""chunk larger than message, lost sync?"" )"		55855	0					
ANR	56142	Callee	syslog		55855	0					
ANR	56143	Identifier	syslog		55855	0					
ANR	56144	ArgumentList	LOG_ERR		55855	1					
ANR	56145	Argument	LOG_ERR		55855	0					
ANR	56146	Identifier	LOG_ERR		55855	0					
ANR	56147	Argument	"""chunk larger than message, lost sync?"""		55855	1					
ANR	56148	PrimaryExpression	"""chunk larger than message, lost sync?"""		55855	0					
ANR	56149	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	338:12:9868:9903	55855	1	True				
ANR	56150	CallExpression	vdagent_virtio_port_destroy ( vportp )		55855	0					
ANR	56151	Callee	vdagent_virtio_port_destroy		55855	0					
ANR	56152	Identifier	vdagent_virtio_port_destroy		55855	0					
ANR	56153	ArgumentList	vportp		55855	1					
ANR	56154	Argument	vportp		55855	0					
ANR	56155	Identifier	vportp		55855	0					
ANR	56156	ReturnStatement	return ;	339:12:9917:9923	55855	2	True				
ANR	56157	IfStatement	if ( avail < read )		55855	3					
ANR	56158	Condition	avail < read	342:12:9948:9959	55855	0	True				
ANR	56159	RelationalExpression	avail < read		55855	0		<			
ANR	56160	Identifier	avail		55855	0					
ANR	56161	Identifier	read		55855	1					
ANR	56162	ExpressionStatement	read = avail	343:12:9974:9986	55855	1	True				
ANR	56163	AssignmentExpression	read = avail		55855	0		=			
ANR	56164	Identifier	read		55855	0					
ANR	56165	Identifier	avail		55855	1					
ANR	56166	IfStatement	if ( read )		55855	4					
ANR	56167	Condition	read	345:12:10001:10004	55855	0	True				
ANR	56168	Identifier	read		55855	0					
ANR	56169	CompoundStatement		47:18:1841:1841	55855	1					
ANR	56170	ExpressionStatement	"memcpy ( port -> message_data + port -> message_data_pos , vport -> chunk_data + pos , read )"	346:12:10021:10122	55855	0	True				
ANR	56171	CallExpression	"memcpy ( port -> message_data + port -> message_data_pos , vport -> chunk_data + pos , read )"		55855	0					
ANR	56172	Callee	memcpy		55855	0					
ANR	56173	Identifier	memcpy		55855	0					
ANR	56174	ArgumentList	port -> message_data + port -> message_data_pos		55855	1					
ANR	56175	Argument	port -> message_data + port -> message_data_pos		55855	0					
ANR	56176	AdditiveExpression	port -> message_data + port -> message_data_pos		55855	0		+			
ANR	56177	PtrMemberAccess	port -> message_data		55855	0					
ANR	56178	Identifier	port		55855	0					
ANR	56179	Identifier	message_data		55855	1					
ANR	56180	PtrMemberAccess	port -> message_data_pos		55855	1					
ANR	56181	Identifier	port		55855	0					
ANR	56182	Identifier	message_data_pos		55855	1					
ANR	56183	Argument	vport -> chunk_data + pos		55855	1					
ANR	56184	AdditiveExpression	vport -> chunk_data + pos		55855	0		+			
ANR	56185	PtrMemberAccess	vport -> chunk_data		55855	0					
ANR	56186	Identifier	vport		55855	0					
ANR	56187	Identifier	chunk_data		55855	1					
ANR	56188	Identifier	pos		55855	1					
ANR	56189	Argument	read		55855	2					
ANR	56190	Identifier	read		55855	0					
ANR	56191	ExpressionStatement	port -> message_data_pos += read	348:12:10136:10166	55855	1	True				
ANR	56192	AssignmentExpression	port -> message_data_pos += read		55855	0		+=			
ANR	56193	PtrMemberAccess	port -> message_data_pos		55855	0					
ANR	56194	Identifier	port		55855	0					
ANR	56195	Identifier	message_data_pos		55855	1					
ANR	56196	Identifier	read		55855	1					
ANR	56197	IfStatement	if ( port -> message_data_pos == port -> message_header . size )		55855	5					
ANR	56198	Condition	port -> message_data_pos == port -> message_header . size	351:12:10191:10241	55855	0	True				
ANR	56199	EqualityExpression	port -> message_data_pos == port -> message_header . size		55855	0		==			
ANR	56200	PtrMemberAccess	port -> message_data_pos		55855	0					
ANR	56201	Identifier	port		55855	0					
ANR	56202	Identifier	message_data_pos		55855	1					
ANR	56203	MemberAccess	port -> message_header . size		55855	1					
ANR	56204	PtrMemberAccess	port -> message_header		55855	0					
ANR	56205	Identifier	port		55855	0					
ANR	56206	Identifier	message_header		55855	1					
ANR	56207	Identifier	size		55855	1					
ANR	56208	CompoundStatement		53:65:2078:2078	55855	1					
ANR	56209	IfStatement	if ( vport -> read_callback )		55855	0					
ANR	56210	Condition	vport -> read_callback	352:16:10262:10281	55855	0	True				
ANR	56211	PtrMemberAccess	vport -> read_callback		55855	0					
ANR	56212	Identifier	vport		55855	0					
ANR	56213	Identifier	read_callback		55855	1					
ANR	56214	CompoundStatement		55:16:2136:2273	55855	1					
ANR	56215	IdentifierDeclStatement	"int r = vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data ) ;"	353:16:10302:10439	55855	0	True				
ANR	56216	IdentifierDecl	"r = vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data )"		55855	0					
ANR	56217	IdentifierDeclType	int		55855	0					
ANR	56218	Identifier	r		55855	1					
ANR	56219	AssignmentExpression	"r = vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data )"		55855	2		=			
ANR	56220	Identifier	r		55855	0					
ANR	56221	CallExpression	"vport -> read_callback ( vport , vport -> chunk_header . port , & port -> message_header , port -> message_data )"		55855	1					
ANR	56222	Callee	vport -> read_callback		55855	0					
ANR	56223	PtrMemberAccess	vport -> read_callback		55855	0					
ANR	56224	Identifier	vport		55855	0					
ANR	56225	Identifier	read_callback		55855	1					
ANR	56226	ArgumentList	vport		55855	1					
ANR	56227	Argument	vport		55855	0					
ANR	56228	Identifier	vport		55855	0					
ANR	56229	Argument	vport -> chunk_header . port		55855	1					
ANR	56230	MemberAccess	vport -> chunk_header . port		55855	0					
ANR	56231	PtrMemberAccess	vport -> chunk_header		55855	0					
ANR	56232	Identifier	vport		55855	0					
ANR	56233	Identifier	chunk_header		55855	1					
ANR	56234	Identifier	port		55855	1					
ANR	56235	Argument	& port -> message_header		55855	2					
ANR	56236	UnaryOperationExpression	& port -> message_header		55855	0					
ANR	56237	UnaryOperator	&		55855	0					
ANR	56238	PtrMemberAccess	port -> message_header		55855	1					
ANR	56239	Identifier	port		55855	0					
ANR	56240	Identifier	message_header		55855	1					
ANR	56241	Argument	port -> message_data		55855	3					
ANR	56242	PtrMemberAccess	port -> message_data		55855	0					
ANR	56243	Identifier	port		55855	0					
ANR	56244	Identifier	message_data		55855	1					
ANR	56245	IfStatement	if ( r == - 1 )		55855	1					
ANR	56246	Condition	r == - 1	355:20:10461:10467	55855	0	True				
ANR	56247	EqualityExpression	r == - 1		55855	0		==			
ANR	56248	Identifier	r		55855	0					
ANR	56249	UnaryOperationExpression	- 1		55855	1					
ANR	56250	UnaryOperator	-		55855	0					
ANR	56251	PrimaryExpression	1		55855	1					
ANR	56252	CompoundStatement		57:29:2304:2304	55855	1					
ANR	56253	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	356:20:10492:10527	55855	0	True				
ANR	56254	CallExpression	vdagent_virtio_port_destroy ( vportp )		55855	0					
ANR	56255	Callee	vdagent_virtio_port_destroy		55855	0					
ANR	56256	Identifier	vdagent_virtio_port_destroy		55855	0					
ANR	56257	ArgumentList	vportp		55855	1					
ANR	56258	Argument	vportp		55855	0					
ANR	56259	Identifier	vportp		55855	0					
ANR	56260	ReturnStatement	return ;	357:20:10549:10555	55855	1	True				
ANR	56261	ExpressionStatement	port -> message_header_read = 0	360:12:10601:10630	55855	1	True				
ANR	56262	AssignmentExpression	port -> message_header_read = 0		55855	0		=			
ANR	56263	PtrMemberAccess	port -> message_header_read		55855	0					
ANR	56264	Identifier	port		55855	0					
ANR	56265	Identifier	message_header_read		55855	1					
ANR	56266	PrimaryExpression	0		55855	1					
ANR	56267	ExpressionStatement	port -> message_data_pos = 0	361:12:10644:10670	55855	2	True				
ANR	56268	AssignmentExpression	port -> message_data_pos = 0		55855	0		=			
ANR	56269	PtrMemberAccess	port -> message_data_pos		55855	0					
ANR	56270	Identifier	port		55855	0					
ANR	56271	Identifier	message_data_pos		55855	1					
ANR	56272	PrimaryExpression	0		55855	1					
ANR	56273	ExpressionStatement	free ( port -> message_data )	362:12:10684:10708	55855	3	True				
ANR	56274	CallExpression	free ( port -> message_data )		55855	0					
ANR	56275	Callee	free		55855	0					
ANR	56276	Identifier	free		55855	0					
ANR	56277	ArgumentList	port -> message_data		55855	1					
ANR	56278	Argument	port -> message_data		55855	0					
ANR	56279	PtrMemberAccess	port -> message_data		55855	0					
ANR	56280	Identifier	port		55855	0					
ANR	56281	Identifier	message_data		55855	1					
ANR	56282	ExpressionStatement	port -> message_data = NULL	363:12:10722:10747	55855	4	True				
ANR	56283	AssignmentExpression	port -> message_data = NULL		55855	0		=			
ANR	56284	PtrMemberAccess	port -> message_data		55855	0					
ANR	56285	Identifier	port		55855	0					
ANR	56286	Identifier	message_data		55855	1					
ANR	56287	Identifier	NULL		55855	1					
ANR	56288	ReturnType	static void		55855	1					
ANR	56289	Identifier	vdagent_virtio_port_do_chunk		55855	2					
ANR	56290	ParameterList	struct vdagent_virtio_port * * vportp		55855	3					
ANR	56291	Parameter	struct vdagent_virtio_port * * vportp	298:41:8128:8162	55855	0	True				
ANR	56292	ParameterType	struct vdagent_virtio_port * *		55855	0					
ANR	56293	Identifier	vportp		55855	1					
ANR	56294	CFGEntryNode	ENTRY		55855		True				
ANR	56295	CFGExitNode	EXIT		55855		True				
ANR	56296	Symbol	port -> message_header		55855						
ANR	56297	Symbol	port -> message_data		55855						
ANR	56298	Symbol	vport		55855						
ANR	56299	Symbol	port -> message_header_read		55855						
ANR	56300	Symbol	vport -> chunk_header . size		55855						
ANR	56301	Symbol	port -> message_header . opaque		55855						
ANR	56302	Symbol	vport -> chunk_header . port		55855						
ANR	56303	Symbol	& port -> message_header		55855						
ANR	56304	Symbol	* port		55855						
ANR	56305	Symbol	pos		55855						
ANR	56306	Symbol	* vport		55855						
ANR	56307	Symbol	GUINT64_FROM_LE		55855						
ANR	56308	Symbol	LOG_ERR		55855						
ANR	56309	Symbol	GUINT32_FROM_LE		55855						
ANR	56310	Symbol	vport -> chunk_header		55855						
ANR	56311	Symbol	port -> message_header . protocol		55855						
ANR	56312	Symbol	avail		55855						
ANR	56313	Symbol	malloc		55855						
ANR	56314	Symbol	vportp		55855						
ANR	56315	Symbol	read		55855						
ANR	56316	Symbol	NULL		55855						
ANR	56317	Symbol	vport -> port_data		55855						
ANR	56318	Symbol	port -> message_header . size		55855						
ANR	56319	Symbol	port -> message_data_pos		55855						
ANR	56320	Symbol	port -> message_header . type		55855						
ANR	56321	Symbol	vport -> chunk_data		55855						
ANR	56322	Symbol	vport -> read_callback		55855						
ANR	56323	Symbol	r		55855						
ANR	56324	Symbol	port		55855						
ANR	56325	Symbol	* vportp		55855						
ANR	56326	Function	vport_read	368:0:10768:10981							
ANR	56327	FunctionDef	"vport_read (struct vdagent_virtio_port * vport , uint8_t * buf , int len)"		56326	0					
ANR	56328	CompoundStatement		369:0:10848:10981	56326	0					
ANR	56329	IfStatement	if ( vport -> is_uds )		56326	0					
ANR	56330	Condition	vport -> is_uds	370:8:10858:10870	56326	0	True				
ANR	56331	PtrMemberAccess	vport -> is_uds		56326	0					
ANR	56332	Identifier	vport		56326	0					
ANR	56333	Identifier	is_uds		56326	1					
ANR	56334	CompoundStatement		2:23:24:24	56326	1					
ANR	56335	ReturnStatement	"return recv ( vport -> fd , buf , len , 0 ) ;"	371:8:10883:10918	56326	0	True				
ANR	56336	CallExpression	"recv ( vport -> fd , buf , len , 0 )"		56326	0					
ANR	56337	Callee	recv		56326	0					
ANR	56338	Identifier	recv		56326	0					
ANR	56339	ArgumentList	vport -> fd		56326	1					
ANR	56340	Argument	vport -> fd		56326	0					
ANR	56341	PtrMemberAccess	vport -> fd		56326	0					
ANR	56342	Identifier	vport		56326	0					
ANR	56343	Identifier	fd		56326	1					
ANR	56344	Argument	buf		56326	1					
ANR	56345	Identifier	buf		56326	0					
ANR	56346	Argument	len		56326	2					
ANR	56347	Identifier	len		56326	0					
ANR	56348	Argument	0		56326	3					
ANR	56349	PrimaryExpression	0		56326	0					
ANR	56350	ElseStatement	else		56326	0					
ANR	56351	CompoundStatement		4:11:82:82	56326	0					
ANR	56352	ReturnStatement	"return read ( vport -> fd , buf , len ) ;"	373:8:10941:10973	56326	0	True				
ANR	56353	CallExpression	"read ( vport -> fd , buf , len )"		56326	0					
ANR	56354	Callee	read		56326	0					
ANR	56355	Identifier	read		56326	0					
ANR	56356	ArgumentList	vport -> fd		56326	1					
ANR	56357	Argument	vport -> fd		56326	0					
ANR	56358	PtrMemberAccess	vport -> fd		56326	0					
ANR	56359	Identifier	vport		56326	0					
ANR	56360	Identifier	fd		56326	1					
ANR	56361	Argument	buf		56326	1					
ANR	56362	Identifier	buf		56326	0					
ANR	56363	Argument	len		56326	2					
ANR	56364	Identifier	len		56326	0					
ANR	56365	ReturnType	static int		56326	1					
ANR	56366	Identifier	vport_read		56326	2					
ANR	56367	ParameterList	"struct vdagent_virtio_port * vport , uint8_t * buf , int len"		56326	3					
ANR	56368	Parameter	struct vdagent_virtio_port * vport	368:22:10790:10822	56326	0	True				
ANR	56369	ParameterType	struct vdagent_virtio_port *		56326	0					
ANR	56370	Identifier	vport		56326	1					
ANR	56371	Parameter	uint8_t * buf	368:57:10825:10836	56326	1	True				
ANR	56372	ParameterType	uint8_t *		56326	0					
ANR	56373	Identifier	buf		56326	1					
ANR	56374	Parameter	int len	368:71:10839:10845	56326	2	True				
ANR	56375	ParameterType	int		56326	0					
ANR	56376	Identifier	len		56326	1					
ANR	56377	CFGEntryNode	ENTRY		56326		True				
ANR	56378	CFGExitNode	EXIT		56326		True				
ANR	56379	Symbol	buf		56326						
ANR	56380	Symbol	recv		56326						
ANR	56381	Symbol	read		56326						
ANR	56382	Symbol	vport		56326						
ANR	56383	Symbol	len		56326						
ANR	56384	Symbol	* vport		56326						
ANR	56385	Symbol	vport -> fd		56326						
ANR	56386	Symbol	vport -> is_uds		56326						
ANR	56387	Function	vdagent_virtio_port_do_read	377:0:10984:14328							
ANR	56388	FunctionDef	vdagent_virtio_port_do_read (struct vdagent_virtio_port * * vportp)		56387	0					
ANR	56389	CompoundStatement		378:0:11061:14328	56387	0					
ANR	56390	IdentifierDeclStatement	ssize_t n ;	379:4:11067:11076	56387	0	True				
ANR	56391	IdentifierDecl	n		56387	0					
ANR	56392	IdentifierDeclType	ssize_t		56387	0					
ANR	56393	Identifier	n		56387	1					
ANR	56394	IdentifierDeclStatement	size_t to_read ;	380:4:11082:11096	56387	1	True				
ANR	56395	IdentifierDecl	to_read		56387	0					
ANR	56396	IdentifierDeclType	size_t		56387	0					
ANR	56397	Identifier	to_read		56387	1					
ANR	56398	IdentifierDeclStatement	uint8_t * dest ;	381:4:11102:11115	56387	2	True				
ANR	56399	IdentifierDecl	* dest		56387	0					
ANR	56400	IdentifierDeclType	uint8_t *		56387	0					
ANR	56401	Identifier	dest		56387	1					
ANR	56402	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	382:4:11121:11164	56387	3	True				
ANR	56403	IdentifierDecl	* vport = * vportp		56387	0					
ANR	56404	IdentifierDeclType	struct vdagent_virtio_port *		56387	0					
ANR	56405	Identifier	vport		56387	1					
ANR	56406	AssignmentExpression	* vport = * vportp		56387	2		=			
ANR	56407	Identifier	vport		56387	0					
ANR	56408	UnaryOperationExpression	* vportp		56387	1					
ANR	56409	UnaryOperator	*		56387	0					
ANR	56410	Identifier	vportp		56387	1					
ANR	56411	IfStatement	if ( vport -> chunk_header_read < sizeof ( vport -> chunk_header ) )		56387	4					
ANR	56412	Condition	vport -> chunk_header_read < sizeof ( vport -> chunk_header )	384:8:11175:11228	56387	0	True				
ANR	56413	RelationalExpression	vport -> chunk_header_read < sizeof ( vport -> chunk_header )		56387	0		<			
ANR	56414	PtrMemberAccess	vport -> chunk_header_read		56387	0					
ANR	56415	Identifier	vport		56387	0					
ANR	56416	Identifier	chunk_header_read		56387	1					
ANR	56417	SizeofExpression	sizeof ( vport -> chunk_header )		56387	1					
ANR	56418	Sizeof	sizeof		56387	0					
ANR	56419	PtrMemberAccess	vport -> chunk_header		56387	1					
ANR	56420	Identifier	vport		56387	0					
ANR	56421	Identifier	chunk_header		56387	1					
ANR	56422	CompoundStatement		7:64:169:169	56387	1					
ANR	56423	ExpressionStatement	to_read = sizeof ( vport -> chunk_header ) - vport -> chunk_header_read	385:8:11241:11305	56387	0	True				
ANR	56424	AssignmentExpression	to_read = sizeof ( vport -> chunk_header ) - vport -> chunk_header_read		56387	0		=			
ANR	56425	Identifier	to_read		56387	0					
ANR	56426	AdditiveExpression	sizeof ( vport -> chunk_header ) - vport -> chunk_header_read		56387	1		-			
ANR	56427	SizeofExpression	sizeof ( vport -> chunk_header )		56387	0					
ANR	56428	Sizeof	sizeof		56387	0					
ANR	56429	PtrMemberAccess	vport -> chunk_header		56387	1					
ANR	56430	Identifier	vport		56387	0					
ANR	56431	Identifier	chunk_header		56387	1					
ANR	56432	PtrMemberAccess	vport -> chunk_header_read		56387	1					
ANR	56433	Identifier	vport		56387	0					
ANR	56434	Identifier	chunk_header_read		56387	1					
ANR	56435	ExpressionStatement	dest = ( uint8_t * ) & vport -> chunk_header + vport -> chunk_header_read	386:8:11315:11380	56387	1	True				
ANR	56436	AssignmentExpression	dest = ( uint8_t * ) & vport -> chunk_header + vport -> chunk_header_read		56387	0		=			
ANR	56437	Identifier	dest		56387	0					
ANR	56438	AdditiveExpression	( uint8_t * ) & vport -> chunk_header + vport -> chunk_header_read		56387	1		+			
ANR	56439	CastExpression	( uint8_t * ) & vport -> chunk_header		56387	0					
ANR	56440	CastTarget	uint8_t *		56387	0					
ANR	56441	UnaryOperationExpression	& vport -> chunk_header		56387	1					
ANR	56442	UnaryOperator	&		56387	0					
ANR	56443	PtrMemberAccess	vport -> chunk_header		56387	1					
ANR	56444	Identifier	vport		56387	0					
ANR	56445	Identifier	chunk_header		56387	1					
ANR	56446	PtrMemberAccess	vport -> chunk_header_read		56387	1					
ANR	56447	Identifier	vport		56387	0					
ANR	56448	Identifier	chunk_header_read		56387	1					
ANR	56449	ElseStatement	else		56387	0					
ANR	56450	CompoundStatement		10:11:331:331	56387	0					
ANR	56451	ExpressionStatement	to_read = vport -> chunk_header . size - vport -> chunk_data_pos	388:8:11403:11461	56387	0	True				
ANR	56452	AssignmentExpression	to_read = vport -> chunk_header . size - vport -> chunk_data_pos		56387	0		=			
ANR	56453	Identifier	to_read		56387	0					
ANR	56454	AdditiveExpression	vport -> chunk_header . size - vport -> chunk_data_pos		56387	1		-			
ANR	56455	MemberAccess	vport -> chunk_header . size		56387	0					
ANR	56456	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56457	Identifier	vport		56387	0					
ANR	56458	Identifier	chunk_header		56387	1					
ANR	56459	Identifier	size		56387	1					
ANR	56460	PtrMemberAccess	vport -> chunk_data_pos		56387	1					
ANR	56461	Identifier	vport		56387	0					
ANR	56462	Identifier	chunk_data_pos		56387	1					
ANR	56463	ExpressionStatement	dest = vport -> chunk_data + vport -> chunk_data_pos	389:8:11471:11519	56387	1	True				
ANR	56464	AssignmentExpression	dest = vport -> chunk_data + vport -> chunk_data_pos		56387	0		=			
ANR	56465	Identifier	dest		56387	0					
ANR	56466	AdditiveExpression	vport -> chunk_data + vport -> chunk_data_pos		56387	1		+			
ANR	56467	PtrMemberAccess	vport -> chunk_data		56387	0					
ANR	56468	Identifier	vport		56387	0					
ANR	56469	Identifier	chunk_data		56387	1					
ANR	56470	PtrMemberAccess	vport -> chunk_data_pos		56387	1					
ANR	56471	Identifier	vport		56387	0					
ANR	56472	Identifier	chunk_data_pos		56387	1					
ANR	56473	ExpressionStatement	"n = vport_read ( vport , dest , to_read )"	392:4:11532:11568	56387	5	True				
ANR	56474	AssignmentExpression	"n = vport_read ( vport , dest , to_read )"		56387	0		=			
ANR	56475	Identifier	n		56387	0					
ANR	56476	CallExpression	"vport_read ( vport , dest , to_read )"		56387	1					
ANR	56477	Callee	vport_read		56387	0					
ANR	56478	Identifier	vport_read		56387	0					
ANR	56479	ArgumentList	vport		56387	1					
ANR	56480	Argument	vport		56387	0					
ANR	56481	Identifier	vport		56387	0					
ANR	56482	Argument	dest		56387	1					
ANR	56483	Identifier	dest		56387	0					
ANR	56484	Argument	to_read		56387	2					
ANR	56485	Identifier	to_read		56387	0					
ANR	56486	IfStatement	if ( n < 0 )		56387	6					
ANR	56487	Condition	n < 0	393:8:11578:11582	56387	0	True				
ANR	56488	RelationalExpression	n < 0		56387	0		<			
ANR	56489	Identifier	n		56387	0					
ANR	56490	PrimaryExpression	0		56387	1					
ANR	56491	CompoundStatement		16:15:523:523	56387	1					
ANR	56492	IfStatement	if ( errno == EINTR )		56387	0					
ANR	56493	Condition	errno == EINTR	394:12:11599:11612	56387	0	True				
ANR	56494	EqualityExpression	errno == EINTR		56387	0		==			
ANR	56495	Identifier	errno		56387	0					
ANR	56496	Identifier	EINTR		56387	1					
ANR	56497	ReturnStatement	return ;	395:12:11627:11633	56387	1	True				
ANR	56498	ExpressionStatement	"syslog ( LOG_ERR , ""reading from vdagent virtio port: %m"" )"	396:8:11643:11698	56387	1	True				
ANR	56499	CallExpression	"syslog ( LOG_ERR , ""reading from vdagent virtio port: %m"" )"		56387	0					
ANR	56500	Callee	syslog		56387	0					
ANR	56501	Identifier	syslog		56387	0					
ANR	56502	ArgumentList	LOG_ERR		56387	1					
ANR	56503	Argument	LOG_ERR		56387	0					
ANR	56504	Identifier	LOG_ERR		56387	0					
ANR	56505	Argument	"""reading from vdagent virtio port: %m"""		56387	1					
ANR	56506	PrimaryExpression	"""reading from vdagent virtio port: %m"""		56387	0					
ANR	56507	IfStatement	if ( n == 0 && vport -> opening )		56387	7					
ANR	56508	Condition	n == 0 && vport -> opening	398:8:11714:11737	56387	0	True				
ANR	56509	AndExpression	n == 0 && vport -> opening		56387	0		&&			
ANR	56510	EqualityExpression	n == 0		56387	0		==			
ANR	56511	Identifier	n		56387	0					
ANR	56512	PrimaryExpression	0		56387	1					
ANR	56513	PtrMemberAccess	vport -> opening		56387	1					
ANR	56514	Identifier	vport		56387	0					
ANR	56515	Identifier	opening		56387	1					
ANR	56516	CompoundStatement		21:34:678:678	56387	1					
ANR	56517	ExpressionStatement	usleep ( 10000 )	419:8:12988:13001	56387	0	True				
ANR	56518	CallExpression	usleep ( 10000 )		56387	0					
ANR	56519	Callee	usleep		56387	0					
ANR	56520	Identifier	usleep		56387	0					
ANR	56521	ArgumentList	10000		56387	1					
ANR	56522	Argument	10000		56387	0					
ANR	56523	PrimaryExpression	10000		56387	0					
ANR	56524	ReturnStatement	return ;	420:8:13011:13017	56387	1	True				
ANR	56525	IfStatement	if ( n <= 0 )		56387	8					
ANR	56526	Condition	n <= 0	422:8:13033:13038	56387	0	True				
ANR	56527	RelationalExpression	n <= 0		56387	0		<=			
ANR	56528	Identifier	n		56387	0					
ANR	56529	PrimaryExpression	0		56387	1					
ANR	56530	CompoundStatement		45:16:1979:1979	56387	1					
ANR	56531	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	423:8:13051:13086	56387	0	True				
ANR	56532	CallExpression	vdagent_virtio_port_destroy ( vportp )		56387	0					
ANR	56533	Callee	vdagent_virtio_port_destroy		56387	0					
ANR	56534	Identifier	vdagent_virtio_port_destroy		56387	0					
ANR	56535	ArgumentList	vportp		56387	1					
ANR	56536	Argument	vportp		56387	0					
ANR	56537	Identifier	vportp		56387	0					
ANR	56538	ReturnStatement	return ;	424:8:13096:13102	56387	1	True				
ANR	56539	ExpressionStatement	vport -> opening = 0	426:4:13114:13132	56387	9	True				
ANR	56540	AssignmentExpression	vport -> opening = 0		56387	0		=			
ANR	56541	PtrMemberAccess	vport -> opening		56387	0					
ANR	56542	Identifier	vport		56387	0					
ANR	56543	Identifier	opening		56387	1					
ANR	56544	PrimaryExpression	0		56387	1					
ANR	56545	IfStatement	if ( vport -> chunk_header_read < sizeof ( vport -> chunk_header ) )		56387	10					
ANR	56546	Condition	vport -> chunk_header_read < sizeof ( vport -> chunk_header )	428:8:13143:13196	56387	0	True				
ANR	56547	RelationalExpression	vport -> chunk_header_read < sizeof ( vport -> chunk_header )		56387	0		<			
ANR	56548	PtrMemberAccess	vport -> chunk_header_read		56387	0					
ANR	56549	Identifier	vport		56387	0					
ANR	56550	Identifier	chunk_header_read		56387	1					
ANR	56551	SizeofExpression	sizeof ( vport -> chunk_header )		56387	1					
ANR	56552	Sizeof	sizeof		56387	0					
ANR	56553	PtrMemberAccess	vport -> chunk_header		56387	1					
ANR	56554	Identifier	vport		56387	0					
ANR	56555	Identifier	chunk_header		56387	1					
ANR	56556	CompoundStatement		51:64:2137:2137	56387	1					
ANR	56557	ExpressionStatement	vport -> chunk_header_read += n	429:8:13209:13238	56387	0	True				
ANR	56558	AssignmentExpression	vport -> chunk_header_read += n		56387	0		+=			
ANR	56559	PtrMemberAccess	vport -> chunk_header_read		56387	0					
ANR	56560	Identifier	vport		56387	0					
ANR	56561	Identifier	chunk_header_read		56387	1					
ANR	56562	Identifier	n		56387	1					
ANR	56563	IfStatement	if ( vport -> chunk_header_read == sizeof ( vport -> chunk_header ) )		56387	1					
ANR	56564	Condition	vport -> chunk_header_read == sizeof ( vport -> chunk_header )	430:12:13252:13306	56387	0	True				
ANR	56565	EqualityExpression	vport -> chunk_header_read == sizeof ( vport -> chunk_header )		56387	0		==			
ANR	56566	PtrMemberAccess	vport -> chunk_header_read		56387	0					
ANR	56567	Identifier	vport		56387	0					
ANR	56568	Identifier	chunk_header_read		56387	1					
ANR	56569	SizeofExpression	sizeof ( vport -> chunk_header )		56387	1					
ANR	56570	Sizeof	sizeof		56387	0					
ANR	56571	PtrMemberAccess	vport -> chunk_header		56387	1					
ANR	56572	Identifier	vport		56387	0					
ANR	56573	Identifier	chunk_header		56387	1					
ANR	56574	CompoundStatement		53:69:2247:2247	56387	1					
ANR	56575	ExpressionStatement	vport -> chunk_header . size = GUINT32_FROM_LE ( vport -> chunk_header . size )	431:12:13323:13391	56387	0	True				
ANR	56576	AssignmentExpression	vport -> chunk_header . size = GUINT32_FROM_LE ( vport -> chunk_header . size )		56387	0		=			
ANR	56577	MemberAccess	vport -> chunk_header . size		56387	0					
ANR	56578	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56579	Identifier	vport		56387	0					
ANR	56580	Identifier	chunk_header		56387	1					
ANR	56581	Identifier	size		56387	1					
ANR	56582	CallExpression	GUINT32_FROM_LE ( vport -> chunk_header . size )		56387	1					
ANR	56583	Callee	GUINT32_FROM_LE		56387	0					
ANR	56584	Identifier	GUINT32_FROM_LE		56387	0					
ANR	56585	ArgumentList	vport -> chunk_header . size		56387	1					
ANR	56586	Argument	vport -> chunk_header . size		56387	0					
ANR	56587	MemberAccess	vport -> chunk_header . size		56387	0					
ANR	56588	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56589	Identifier	vport		56387	0					
ANR	56590	Identifier	chunk_header		56387	1					
ANR	56591	Identifier	size		56387	1					
ANR	56592	ExpressionStatement	vport -> chunk_header . port = GUINT32_FROM_LE ( vport -> chunk_header . port )	432:12:13405:13473	56387	1	True				
ANR	56593	AssignmentExpression	vport -> chunk_header . port = GUINT32_FROM_LE ( vport -> chunk_header . port )		56387	0		=			
ANR	56594	MemberAccess	vport -> chunk_header . port		56387	0					
ANR	56595	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56596	Identifier	vport		56387	0					
ANR	56597	Identifier	chunk_header		56387	1					
ANR	56598	Identifier	port		56387	1					
ANR	56599	CallExpression	GUINT32_FROM_LE ( vport -> chunk_header . port )		56387	1					
ANR	56600	Callee	GUINT32_FROM_LE		56387	0					
ANR	56601	Identifier	GUINT32_FROM_LE		56387	0					
ANR	56602	ArgumentList	vport -> chunk_header . port		56387	1					
ANR	56603	Argument	vport -> chunk_header . port		56387	0					
ANR	56604	MemberAccess	vport -> chunk_header . port		56387	0					
ANR	56605	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56606	Identifier	vport		56387	0					
ANR	56607	Identifier	chunk_header		56387	1					
ANR	56608	Identifier	port		56387	1					
ANR	56609	IfStatement	if ( vport -> chunk_header . size > VD_AGENT_MAX_DATA_SIZE )		56387	2					
ANR	56610	Condition	vport -> chunk_header . size > VD_AGENT_MAX_DATA_SIZE	433:16:13491:13539	56387	0	True				
ANR	56611	RelationalExpression	vport -> chunk_header . size > VD_AGENT_MAX_DATA_SIZE		56387	0		>			
ANR	56612	MemberAccess	vport -> chunk_header . size		56387	0					
ANR	56613	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56614	Identifier	vport		56387	0					
ANR	56615	Identifier	chunk_header		56387	1					
ANR	56616	Identifier	size		56387	1					
ANR	56617	Identifier	VD_AGENT_MAX_DATA_SIZE		56387	1					
ANR	56618	CompoundStatement		56:67:2480:2480	56387	1					
ANR	56619	ExpressionStatement	"syslog ( LOG_ERR , ""chunk size %u too large"" , vport -> chunk_header . size )"	434:16:13560:13651	56387	0	True				
ANR	56620	CallExpression	"syslog ( LOG_ERR , ""chunk size %u too large"" , vport -> chunk_header . size )"		56387	0					
ANR	56621	Callee	syslog		56387	0					
ANR	56622	Identifier	syslog		56387	0					
ANR	56623	ArgumentList	LOG_ERR		56387	1					
ANR	56624	Argument	LOG_ERR		56387	0					
ANR	56625	Identifier	LOG_ERR		56387	0					
ANR	56626	Argument	"""chunk size %u too large"""		56387	1					
ANR	56627	PrimaryExpression	"""chunk size %u too large"""		56387	0					
ANR	56628	Argument	vport -> chunk_header . size		56387	2					
ANR	56629	MemberAccess	vport -> chunk_header . size		56387	0					
ANR	56630	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56631	Identifier	vport		56387	0					
ANR	56632	Identifier	chunk_header		56387	1					
ANR	56633	Identifier	size		56387	1					
ANR	56634	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	436:16:13669:13704	56387	1	True				
ANR	56635	CallExpression	vdagent_virtio_port_destroy ( vportp )		56387	0					
ANR	56636	Callee	vdagent_virtio_port_destroy		56387	0					
ANR	56637	Identifier	vdagent_virtio_port_destroy		56387	0					
ANR	56638	ArgumentList	vportp		56387	1					
ANR	56639	Argument	vportp		56387	0					
ANR	56640	Identifier	vportp		56387	0					
ANR	56641	ReturnStatement	return ;	437:16:13722:13728	56387	2	True				
ANR	56642	IfStatement	if ( vport -> chunk_header . port >= VDP_END_PORT )		56387	3					
ANR	56643	Condition	vport -> chunk_header . port >= VDP_END_PORT	439:16:13760:13799	56387	0	True				
ANR	56644	RelationalExpression	vport -> chunk_header . port >= VDP_END_PORT		56387	0		>=			
ANR	56645	MemberAccess	vport -> chunk_header . port		56387	0					
ANR	56646	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56647	Identifier	vport		56387	0					
ANR	56648	Identifier	chunk_header		56387	1					
ANR	56649	Identifier	port		56387	1					
ANR	56650	Identifier	VDP_END_PORT		56387	1					
ANR	56651	CompoundStatement		62:58:2740:2740	56387	1					
ANR	56652	ExpressionStatement	"syslog ( LOG_ERR , ""chunk port %u out of range"" , vport -> chunk_header . port )"	440:16:13820:13914	56387	0	True				
ANR	56653	CallExpression	"syslog ( LOG_ERR , ""chunk port %u out of range"" , vport -> chunk_header . port )"		56387	0					
ANR	56654	Callee	syslog		56387	0					
ANR	56655	Identifier	syslog		56387	0					
ANR	56656	ArgumentList	LOG_ERR		56387	1					
ANR	56657	Argument	LOG_ERR		56387	0					
ANR	56658	Identifier	LOG_ERR		56387	0					
ANR	56659	Argument	"""chunk port %u out of range"""		56387	1					
ANR	56660	PrimaryExpression	"""chunk port %u out of range"""		56387	0					
ANR	56661	Argument	vport -> chunk_header . port		56387	2					
ANR	56662	MemberAccess	vport -> chunk_header . port		56387	0					
ANR	56663	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56664	Identifier	vport		56387	0					
ANR	56665	Identifier	chunk_header		56387	1					
ANR	56666	Identifier	port		56387	1					
ANR	56667	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	442:16:13932:13967	56387	1	True				
ANR	56668	CallExpression	vdagent_virtio_port_destroy ( vportp )		56387	0					
ANR	56669	Callee	vdagent_virtio_port_destroy		56387	0					
ANR	56670	Identifier	vdagent_virtio_port_destroy		56387	0					
ANR	56671	ArgumentList	vportp		56387	1					
ANR	56672	Argument	vportp		56387	0					
ANR	56673	Identifier	vportp		56387	0					
ANR	56674	ReturnStatement	return ;	443:16:13985:13991	56387	2	True				
ANR	56675	ElseStatement	else		56387	0					
ANR	56676	CompoundStatement		69:11:2966:2966	56387	0					
ANR	56677	ExpressionStatement	vport -> chunk_data_pos += n	447:8:14038:14064	56387	0	True				
ANR	56678	AssignmentExpression	vport -> chunk_data_pos += n		56387	0		+=			
ANR	56679	PtrMemberAccess	vport -> chunk_data_pos		56387	0					
ANR	56680	Identifier	vport		56387	0					
ANR	56681	Identifier	chunk_data_pos		56387	1					
ANR	56682	Identifier	n		56387	1					
ANR	56683	IfStatement	if ( vport -> chunk_data_pos == vport -> chunk_header . size )		56387	1					
ANR	56684	Condition	vport -> chunk_data_pos == vport -> chunk_header . size	448:12:14078:14126	56387	0	True				
ANR	56685	EqualityExpression	vport -> chunk_data_pos == vport -> chunk_header . size		56387	0		==			
ANR	56686	PtrMemberAccess	vport -> chunk_data_pos		56387	0					
ANR	56687	Identifier	vport		56387	0					
ANR	56688	Identifier	chunk_data_pos		56387	1					
ANR	56689	MemberAccess	vport -> chunk_header . size		56387	1					
ANR	56690	PtrMemberAccess	vport -> chunk_header		56387	0					
ANR	56691	Identifier	vport		56387	0					
ANR	56692	Identifier	chunk_header		56387	1					
ANR	56693	Identifier	size		56387	1					
ANR	56694	CompoundStatement		71:63:3067:3067	56387	1					
ANR	56695	ExpressionStatement	vdagent_virtio_port_do_chunk ( vportp )	449:12:14143:14179	56387	0	True				
ANR	56696	CallExpression	vdagent_virtio_port_do_chunk ( vportp )		56387	0					
ANR	56697	Callee	vdagent_virtio_port_do_chunk		56387	0					
ANR	56698	Identifier	vdagent_virtio_port_do_chunk		56387	0					
ANR	56699	ArgumentList	vportp		56387	1					
ANR	56700	Argument	vportp		56387	0					
ANR	56701	Identifier	vportp		56387	0					
ANR	56702	IfStatement	if ( ! * vportp )		56387	1					
ANR	56703	Condition	! * vportp	450:16:14197:14204	56387	0	True				
ANR	56704	UnaryOperationExpression	! * vportp		56387	0					
ANR	56705	UnaryOperator	!		56387	0					
ANR	56706	UnaryOperationExpression	* vportp		56387	1					
ANR	56707	UnaryOperator	*		56387	0					
ANR	56708	Identifier	vportp		56387	1					
ANR	56709	ReturnStatement	return ;	451:16:14223:14229	56387	1	True				
ANR	56710	ExpressionStatement	vport -> chunk_header_read = 0	452:12:14243:14271	56387	2	True				
ANR	56711	AssignmentExpression	vport -> chunk_header_read = 0		56387	0		=			
ANR	56712	PtrMemberAccess	vport -> chunk_header_read		56387	0					
ANR	56713	Identifier	vport		56387	0					
ANR	56714	Identifier	chunk_header_read		56387	1					
ANR	56715	PrimaryExpression	0		56387	1					
ANR	56716	ExpressionStatement	vport -> chunk_data_pos = 0	453:12:14285:14310	56387	3	True				
ANR	56717	AssignmentExpression	vport -> chunk_data_pos = 0		56387	0		=			
ANR	56718	PtrMemberAccess	vport -> chunk_data_pos		56387	0					
ANR	56719	Identifier	vport		56387	0					
ANR	56720	Identifier	chunk_data_pos		56387	1					
ANR	56721	PrimaryExpression	0		56387	1					
ANR	56722	ReturnType	static void		56387	1					
ANR	56723	Identifier	vdagent_virtio_port_do_read		56387	2					
ANR	56724	ParameterList	struct vdagent_virtio_port * * vportp		56387	3					
ANR	56725	Parameter	struct vdagent_virtio_port * * vportp	377:40:11024:11058	56387	0	True				
ANR	56726	ParameterType	struct vdagent_virtio_port * *		56387	0					
ANR	56727	Identifier	vportp		56387	1					
ANR	56728	CFGEntryNode	ENTRY		56387		True				
ANR	56729	CFGExitNode	EXIT		56387		True				
ANR	56730	Symbol	VD_AGENT_MAX_DATA_SIZE		56387						
ANR	56731	Symbol	errno		56387						
ANR	56732	Symbol	vportp		56387						
ANR	56733	Symbol	vport		56387						
ANR	56734	Symbol	VDP_END_PORT		56387						
ANR	56735	Symbol	& vport -> chunk_header		56387						
ANR	56736	Symbol	EINTR		56387						
ANR	56737	Symbol	vport -> chunk_header . size		56387						
ANR	56738	Symbol	vport_read		56387						
ANR	56739	Symbol	vport -> chunk_header . port		56387						
ANR	56740	Symbol	dest		56387						
ANR	56741	Symbol	n		56387						
ANR	56742	Symbol	vport -> chunk_data		56387						
ANR	56743	Symbol	vport -> chunk_data_pos		56387						
ANR	56744	Symbol	* vport		56387						
ANR	56745	Symbol	to_read		56387						
ANR	56746	Symbol	vport -> chunk_header_read		56387						
ANR	56747	Symbol	LOG_ERR		56387						
ANR	56748	Symbol	vport -> opening		56387						
ANR	56749	Symbol	GUINT32_FROM_LE		56387						
ANR	56750	Symbol	* vportp		56387						
ANR	56751	Symbol	vport -> chunk_header		56387						
ANR	56752	Function	vport_write	458:0:14331:14546							
ANR	56753	FunctionDef	"vport_write (struct vdagent_virtio_port * vport , uint8_t * buf , int len)"		56752	0					
ANR	56754	CompoundStatement		459:0:14412:14546	56752	0					
ANR	56755	IfStatement	if ( vport -> is_uds )		56752	0					
ANR	56756	Condition	vport -> is_uds	460:8:14422:14434	56752	0	True				
ANR	56757	PtrMemberAccess	vport -> is_uds		56752	0					
ANR	56758	Identifier	vport		56752	0					
ANR	56759	Identifier	is_uds		56752	1					
ANR	56760	CompoundStatement		2:23:24:24	56752	1					
ANR	56761	ReturnStatement	"return send ( vport -> fd , buf , len , 0 ) ;"	461:8:14447:14482	56752	0	True				
ANR	56762	CallExpression	"send ( vport -> fd , buf , len , 0 )"		56752	0					
ANR	56763	Callee	send		56752	0					
ANR	56764	Identifier	send		56752	0					
ANR	56765	ArgumentList	vport -> fd		56752	1					
ANR	56766	Argument	vport -> fd		56752	0					
ANR	56767	PtrMemberAccess	vport -> fd		56752	0					
ANR	56768	Identifier	vport		56752	0					
ANR	56769	Identifier	fd		56752	1					
ANR	56770	Argument	buf		56752	1					
ANR	56771	Identifier	buf		56752	0					
ANR	56772	Argument	len		56752	2					
ANR	56773	Identifier	len		56752	0					
ANR	56774	Argument	0		56752	3					
ANR	56775	PrimaryExpression	0		56752	0					
ANR	56776	ElseStatement	else		56752	0					
ANR	56777	CompoundStatement		4:11:82:82	56752	0					
ANR	56778	ReturnStatement	"return write ( vport -> fd , buf , len ) ;"	463:8:14505:14538	56752	0	True				
ANR	56779	CallExpression	"write ( vport -> fd , buf , len )"		56752	0					
ANR	56780	Callee	write		56752	0					
ANR	56781	Identifier	write		56752	0					
ANR	56782	ArgumentList	vport -> fd		56752	1					
ANR	56783	Argument	vport -> fd		56752	0					
ANR	56784	PtrMemberAccess	vport -> fd		56752	0					
ANR	56785	Identifier	vport		56752	0					
ANR	56786	Identifier	fd		56752	1					
ANR	56787	Argument	buf		56752	1					
ANR	56788	Identifier	buf		56752	0					
ANR	56789	Argument	len		56752	2					
ANR	56790	Identifier	len		56752	0					
ANR	56791	ReturnType	static int		56752	1					
ANR	56792	Identifier	vport_write		56752	2					
ANR	56793	ParameterList	"struct vdagent_virtio_port * vport , uint8_t * buf , int len"		56752	3					
ANR	56794	Parameter	struct vdagent_virtio_port * vport	458:23:14354:14386	56752	0	True				
ANR	56795	ParameterType	struct vdagent_virtio_port *		56752	0					
ANR	56796	Identifier	vport		56752	1					
ANR	56797	Parameter	uint8_t * buf	458:58:14389:14400	56752	1	True				
ANR	56798	ParameterType	uint8_t *		56752	0					
ANR	56799	Identifier	buf		56752	1					
ANR	56800	Parameter	int len	458:72:14403:14409	56752	2	True				
ANR	56801	ParameterType	int		56752	0					
ANR	56802	Identifier	len		56752	1					
ANR	56803	CFGEntryNode	ENTRY		56752		True				
ANR	56804	CFGExitNode	EXIT		56752		True				
ANR	56805	Symbol	buf		56752						
ANR	56806	Symbol	vport		56752						
ANR	56807	Symbol	len		56752						
ANR	56808	Symbol	* vport		56752						
ANR	56809	Symbol	vport -> fd		56752						
ANR	56810	Symbol	send		56752						
ANR	56811	Symbol	write		56752						
ANR	56812	Symbol	vport -> is_uds		56752						
ANR	56813	Function	vdagent_virtio_port_do_write	467:0:14549:15502							
ANR	56814	FunctionDef	vdagent_virtio_port_do_write (struct vdagent_virtio_port * * vportp)		56813	0					
ANR	56815	CompoundStatement		468:0:14627:15502	56813	0					
ANR	56816	IdentifierDeclStatement	ssize_t n ;	469:4:14633:14642	56813	0	True				
ANR	56817	IdentifierDecl	n		56813	0					
ANR	56818	IdentifierDeclType	ssize_t		56813	0					
ANR	56819	Identifier	n		56813	1					
ANR	56820	IdentifierDeclStatement	size_t to_write ;	470:4:14648:14663	56813	1	True				
ANR	56821	IdentifierDecl	to_write		56813	0					
ANR	56822	IdentifierDeclType	size_t		56813	0					
ANR	56823	Identifier	to_write		56813	1					
ANR	56824	IdentifierDeclStatement	struct vdagent_virtio_port * vport = * vportp ;	471:4:14669:14712	56813	2	True				
ANR	56825	IdentifierDecl	* vport = * vportp		56813	0					
ANR	56826	IdentifierDeclType	struct vdagent_virtio_port *		56813	0					
ANR	56827	Identifier	vport		56813	1					
ANR	56828	AssignmentExpression	* vport = * vportp		56813	2		=			
ANR	56829	Identifier	vport		56813	0					
ANR	56830	UnaryOperationExpression	* vportp		56813	1					
ANR	56831	UnaryOperator	*		56813	0					
ANR	56832	Identifier	vportp		56813	1					
ANR	56833	IdentifierDeclStatement	struct vdagent_virtio_port_buf * wbuf = vport -> write_buf ;	473:4:14719:14774	56813	3	True				
ANR	56834	IdentifierDecl	* wbuf = vport -> write_buf		56813	0					
ANR	56835	IdentifierDeclType	struct vdagent_virtio_port_buf *		56813	0					
ANR	56836	Identifier	wbuf		56813	1					
ANR	56837	AssignmentExpression	* wbuf = vport -> write_buf		56813	2		=			
ANR	56838	Identifier	wbuf		56813	0					
ANR	56839	PtrMemberAccess	vport -> write_buf		56813	1					
ANR	56840	Identifier	vport		56813	0					
ANR	56841	Identifier	write_buf		56813	1					
ANR	56842	IfStatement	if ( ! wbuf )		56813	4					
ANR	56843	Condition	! wbuf	474:8:14784:14788	56813	0	True				
ANR	56844	UnaryOperationExpression	! wbuf		56813	0					
ANR	56845	UnaryOperator	!		56813	0					
ANR	56846	Identifier	wbuf		56813	1					
ANR	56847	CompoundStatement		7:15:163:163	56813	1					
ANR	56848	ExpressionStatement	"syslog ( LOG_ERR , ""do_write called on a port without a write buf ?!"" )"	475:8:14801:14868	56813	0	True				
ANR	56849	CallExpression	"syslog ( LOG_ERR , ""do_write called on a port without a write buf ?!"" )"		56813	0					
ANR	56850	Callee	syslog		56813	0					
ANR	56851	Identifier	syslog		56813	0					
ANR	56852	ArgumentList	LOG_ERR		56813	1					
ANR	56853	Argument	LOG_ERR		56813	0					
ANR	56854	Identifier	LOG_ERR		56813	0					
ANR	56855	Argument	"""do_write called on a port without a write buf ?!"""		56813	1					
ANR	56856	PrimaryExpression	"""do_write called on a port without a write buf ?!"""		56813	0					
ANR	56857	ReturnStatement	return ;	476:8:14878:14884	56813	1	True				
ANR	56858	IfStatement	if ( wbuf -> write_pos != wbuf -> size )		56813	5					
ANR	56859	Condition	wbuf -> write_pos != wbuf -> size	479:8:14901:14929	56813	0	True				
ANR	56860	EqualityExpression	wbuf -> write_pos != wbuf -> size		56813	0		!=			
ANR	56861	PtrMemberAccess	wbuf -> write_pos		56813	0					
ANR	56862	Identifier	wbuf		56813	0					
ANR	56863	Identifier	write_pos		56813	1					
ANR	56864	PtrMemberAccess	wbuf -> size		56813	1					
ANR	56865	Identifier	wbuf		56813	0					
ANR	56866	Identifier	size		56813	1					
ANR	56867	CompoundStatement		12:39:304:304	56813	1					
ANR	56868	ExpressionStatement	"syslog ( LOG_ERR , ""do_write: buffer is incomplete!!"" )"	480:8:14942:14993	56813	0	True				
ANR	56869	CallExpression	"syslog ( LOG_ERR , ""do_write: buffer is incomplete!!"" )"		56813	0					
ANR	56870	Callee	syslog		56813	0					
ANR	56871	Identifier	syslog		56813	0					
ANR	56872	ArgumentList	LOG_ERR		56813	1					
ANR	56873	Argument	LOG_ERR		56813	0					
ANR	56874	Identifier	LOG_ERR		56813	0					
ANR	56875	Argument	"""do_write: buffer is incomplete!!"""		56813	1					
ANR	56876	PrimaryExpression	"""do_write: buffer is incomplete!!"""		56813	0					
ANR	56877	ReturnStatement	return ;	481:8:15003:15009	56813	1	True				
ANR	56878	ExpressionStatement	to_write = wbuf -> size - wbuf -> pos	484:4:15022:15055	56813	6	True				
ANR	56879	AssignmentExpression	to_write = wbuf -> size - wbuf -> pos		56813	0		=			
ANR	56880	Identifier	to_write		56813	0					
ANR	56881	AdditiveExpression	wbuf -> size - wbuf -> pos		56813	1		-			
ANR	56882	PtrMemberAccess	wbuf -> size		56813	0					
ANR	56883	Identifier	wbuf		56813	0					
ANR	56884	Identifier	size		56813	1					
ANR	56885	PtrMemberAccess	wbuf -> pos		56813	1					
ANR	56886	Identifier	wbuf		56813	0					
ANR	56887	Identifier	pos		56813	1					
ANR	56888	ExpressionStatement	"n = vport_write ( vport , wbuf -> buf + wbuf -> pos , to_write )"	485:4:15061:15116	56813	7	True				
ANR	56889	AssignmentExpression	"n = vport_write ( vport , wbuf -> buf + wbuf -> pos , to_write )"		56813	0		=			
ANR	56890	Identifier	n		56813	0					
ANR	56891	CallExpression	"vport_write ( vport , wbuf -> buf + wbuf -> pos , to_write )"		56813	1					
ANR	56892	Callee	vport_write		56813	0					
ANR	56893	Identifier	vport_write		56813	0					
ANR	56894	ArgumentList	vport		56813	1					
ANR	56895	Argument	vport		56813	0					
ANR	56896	Identifier	vport		56813	0					
ANR	56897	Argument	wbuf -> buf + wbuf -> pos		56813	1					
ANR	56898	AdditiveExpression	wbuf -> buf + wbuf -> pos		56813	0		+			
ANR	56899	PtrMemberAccess	wbuf -> buf		56813	0					
ANR	56900	Identifier	wbuf		56813	0					
ANR	56901	Identifier	buf		56813	1					
ANR	56902	PtrMemberAccess	wbuf -> pos		56813	1					
ANR	56903	Identifier	wbuf		56813	0					
ANR	56904	Identifier	pos		56813	1					
ANR	56905	Argument	to_write		56813	2					
ANR	56906	Identifier	to_write		56813	0					
ANR	56907	IfStatement	if ( n < 0 )		56813	8					
ANR	56908	Condition	n < 0	486:8:15126:15130	56813	0	True				
ANR	56909	RelationalExpression	n < 0		56813	0		<			
ANR	56910	Identifier	n		56813	0					
ANR	56911	PrimaryExpression	0		56813	1					
ANR	56912	CompoundStatement		19:15:505:505	56813	1					
ANR	56913	IfStatement	if ( errno == EINTR )		56813	0					
ANR	56914	Condition	errno == EINTR	487:12:15147:15160	56813	0	True				
ANR	56915	EqualityExpression	errno == EINTR		56813	0		==			
ANR	56916	Identifier	errno		56813	0					
ANR	56917	Identifier	EINTR		56813	1					
ANR	56918	ReturnStatement	return ;	488:12:15175:15181	56813	1	True				
ANR	56919	ExpressionStatement	"syslog ( LOG_ERR , ""writing to vdagent virtio port: %m"" )"	489:8:15191:15244	56813	1	True				
ANR	56920	CallExpression	"syslog ( LOG_ERR , ""writing to vdagent virtio port: %m"" )"		56813	0					
ANR	56921	Callee	syslog		56813	0					
ANR	56922	Identifier	syslog		56813	0					
ANR	56923	ArgumentList	LOG_ERR		56813	1					
ANR	56924	Argument	LOG_ERR		56813	0					
ANR	56925	Identifier	LOG_ERR		56813	0					
ANR	56926	Argument	"""writing to vdagent virtio port: %m"""		56813	1					
ANR	56927	PrimaryExpression	"""writing to vdagent virtio port: %m"""		56813	0					
ANR	56928	ExpressionStatement	vdagent_virtio_port_destroy ( vportp )	490:8:15254:15289	56813	2	True				
ANR	56929	CallExpression	vdagent_virtio_port_destroy ( vportp )		56813	0					
ANR	56930	Callee	vdagent_virtio_port_destroy		56813	0					
ANR	56931	Identifier	vdagent_virtio_port_destroy		56813	0					
ANR	56932	ArgumentList	vportp		56813	1					
ANR	56933	Argument	vportp		56813	0					
ANR	56934	Identifier	vportp		56813	0					
ANR	56935	ReturnStatement	return ;	491:8:15299:15305	56813	3	True				
ANR	56936	IfStatement	if ( n > 0 )		56813	9					
ANR	56937	Condition	n > 0	493:8:15321:15325	56813	0	True				
ANR	56938	RelationalExpression	n > 0		56813	0		>			
ANR	56939	Identifier	n		56813	0					
ANR	56940	PrimaryExpression	0		56813	1					
ANR	56941	ExpressionStatement	vport -> opening = 0	494:8:15336:15354	56813	1	True				
ANR	56942	AssignmentExpression	vport -> opening = 0		56813	0		=			
ANR	56943	PtrMemberAccess	vport -> opening		56813	0					
ANR	56944	Identifier	vport		56813	0					
ANR	56945	Identifier	opening		56813	1					
ANR	56946	PrimaryExpression	0		56813	1					
ANR	56947	ExpressionStatement	wbuf -> pos += n	496:4:15361:15375	56813	10	True				
ANR	56948	AssignmentExpression	wbuf -> pos += n		56813	0		+=			
ANR	56949	PtrMemberAccess	wbuf -> pos		56813	0					
ANR	56950	Identifier	wbuf		56813	0					
ANR	56951	Identifier	pos		56813	1					
ANR	56952	Identifier	n		56813	1					
ANR	56953	IfStatement	if ( wbuf -> pos == wbuf -> size )		56813	11					
ANR	56954	Condition	wbuf -> pos == wbuf -> size	497:8:15385:15407	56813	0	True				
ANR	56955	EqualityExpression	wbuf -> pos == wbuf -> size		56813	0		==			
ANR	56956	PtrMemberAccess	wbuf -> pos		56813	0					
ANR	56957	Identifier	wbuf		56813	0					
ANR	56958	Identifier	pos		56813	1					
ANR	56959	PtrMemberAccess	wbuf -> size		56813	1					
ANR	56960	Identifier	wbuf		56813	0					
ANR	56961	Identifier	size		56813	1					
ANR	56962	CompoundStatement		30:33:782:782	56813	1					
ANR	56963	ExpressionStatement	vport -> write_buf = wbuf -> next	498:8:15420:15449	56813	0	True				
ANR	56964	AssignmentExpression	vport -> write_buf = wbuf -> next		56813	0		=			
ANR	56965	PtrMemberAccess	vport -> write_buf		56813	0					
ANR	56966	Identifier	vport		56813	0					
ANR	56967	Identifier	write_buf		56813	1					
ANR	56968	PtrMemberAccess	wbuf -> next		56813	1					
ANR	56969	Identifier	wbuf		56813	0					
ANR	56970	Identifier	next		56813	1					
ANR	56971	ExpressionStatement	free ( wbuf -> buf )	499:8:15459:15474	56813	1	True				
ANR	56972	CallExpression	free ( wbuf -> buf )		56813	0					
ANR	56973	Callee	free		56813	0					
ANR	56974	Identifier	free		56813	0					
ANR	56975	ArgumentList	wbuf -> buf		56813	1					
ANR	56976	Argument	wbuf -> buf		56813	0					
ANR	56977	PtrMemberAccess	wbuf -> buf		56813	0					
ANR	56978	Identifier	wbuf		56813	0					
ANR	56979	Identifier	buf		56813	1					
ANR	56980	ExpressionStatement	free ( wbuf )	500:8:15484:15494	56813	2	True				
ANR	56981	CallExpression	free ( wbuf )		56813	0					
ANR	56982	Callee	free		56813	0					
ANR	56983	Identifier	free		56813	0					
ANR	56984	ArgumentList	wbuf		56813	1					
ANR	56985	Argument	wbuf		56813	0					
ANR	56986	Identifier	wbuf		56813	0					
ANR	56987	ReturnType	static void		56813	1					
ANR	56988	Identifier	vdagent_virtio_port_do_write		56813	2					
ANR	56989	ParameterList	struct vdagent_virtio_port * * vportp		56813	3					
ANR	56990	Parameter	struct vdagent_virtio_port * * vportp	467:41:14590:14624	56813	0	True				
ANR	56991	ParameterType	struct vdagent_virtio_port * *		56813	0					
ANR	56992	Identifier	vportp		56813	1					
ANR	56993	CFGEntryNode	ENTRY		56813		True				
ANR	56994	CFGExitNode	EXIT		56813		True				
ANR	56995	Symbol	to_write		56813						
ANR	56996	Symbol	errno		56813						
ANR	56997	Symbol	vportp		56813						
ANR	56998	Symbol	vport		56813						
ANR	56999	Symbol	EINTR		56813						
ANR	57000	Symbol	wbuf -> next		56813						
ANR	57001	Symbol	wbuf		56813						
ANR	57002	Symbol	vport -> write_buf		56813						
ANR	57003	Symbol	n		56813						
ANR	57004	Symbol	wbuf -> size		56813						
ANR	57005	Symbol	* wbuf		56813						
ANR	57006	Symbol	* vport		56813						
ANR	57007	Symbol	LOG_ERR		56813						
ANR	57008	Symbol	wbuf -> write_pos		56813						
ANR	57009	Symbol	vport_write		56813						
ANR	57010	Symbol	vport -> opening		56813						
ANR	57011	Symbol	* vportp		56813						
ANR	57012	Symbol	wbuf -> buf		56813						
ANR	57013	Symbol	wbuf -> pos		56813						
