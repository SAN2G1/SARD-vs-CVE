command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11014	File	data/converged/CVE-2017-15108_vd_agent/src_vdagent_vdagent.c								
ANR	11015	ClassDef	VDAgent	47:8:1281:1460							
ANR	11016	DeclStmt									
ANR	11017	Decl							struct vdagent_x11	struct vdagent_x11 *	x11
ANR	11018	DeclStmt									
ANR	11019	Decl							struct vdagent_file_xfers	struct vdagent_file_xfers *	xfers
ANR	11020	DeclStmt									
ANR	11021	Decl							struct udscs_connection	struct udscs_connection *	conn
ANR	11022	DeclStmt									
ANR	11023	Decl							GIOChannel	GIOChannel *	x11_channel
ANR	11024	DeclStmt									
ANR	11025	Decl							GMainLoop	GMainLoop *	loop
ANR	11026	DeclStmt									
ANR	11027	Decl							VDAgent	VDAgent	VDAgent
ANR	11028	DeclStmt									
ANR	11029	Decl							int	int	quit
ANR	11030	DeclStmt									
ANR	11031	Decl							int	int	parent_socket
ANR	11032	DeclStmt									
ANR	11033	Decl							int	int	version_mismatch
ANR	11034	DeclStmt									
ANR	11035	Decl							gboolean	gboolean	debug
ANR	11036	DeclStmt									
ANR	11037	Decl							gboolean	gboolean	x11_sync
ANR	11038	DeclStmt									
ANR	11039	Decl							gboolean	gboolean	do_daemonize
ANR	11040	DeclStmt									
ANR	11041	Decl							gint	gint	fx_open_dir
ANR	11042	DeclStmt									
ANR	11043	Decl							gchar	gchar *	fx_dir
ANR	11044	DeclStmt									
ANR	11045	Decl							gchar	gchar *	portdev
ANR	11046	DeclStmt									
ANR	11047	Decl							gchar	gchar *	vdagentd_socket
ANR	11048	DeclStmt									
ANR	11049	Decl							GOptionEntry	GOptionEntry [ ]	entries
ANR	11050	Function	xfer_get_download_directory	100:0:2954:3509							
ANR	11051	FunctionDef	xfer_get_download_directory (VDAgent * agent)		11050	0					
ANR	11052	CompoundStatement		101:0:3018:3509	11050	0					
ANR	11053	IfStatement	if ( fx_dir != NULL )		11050	0					
ANR	11054	Condition	fx_dir != NULL	102:8:3028:3041	11050	0	True				
ANR	11055	EqualityExpression	fx_dir != NULL		11050	0		!=			
ANR	11056	Identifier	fx_dir		11050	0					
ANR	11057	Identifier	NULL		11050	1					
ANR	11058	CompoundStatement		2:24:25:25	11050	1					
ANR	11059	IfStatement	"if ( ! strcmp ( fx_dir , ""xdg-desktop"" ) )"		11050	0					
ANR	11060	Condition	"! strcmp ( fx_dir , ""xdg-desktop"" )"	103:12:3058:3087	11050	0	True				
ANR	11061	UnaryOperationExpression	"! strcmp ( fx_dir , ""xdg-desktop"" )"		11050	0					
ANR	11062	UnaryOperator	!		11050	0					
ANR	11063	CallExpression	"strcmp ( fx_dir , ""xdg-desktop"" )"		11050	1					
ANR	11064	Callee	strcmp		11050	0					
ANR	11065	Identifier	strcmp		11050	0					
ANR	11066	ArgumentList	fx_dir		11050	1					
ANR	11067	Argument	fx_dir		11050	0					
ANR	11068	Identifier	fx_dir		11050	0					
ANR	11069	Argument	"""xdg-desktop"""		11050	1					
ANR	11070	PrimaryExpression	"""xdg-desktop"""		11050	0					
ANR	11071	ReturnStatement	return g_get_user_special_dir ( G_USER_DIRECTORY_DESKTOP ) ;	104:12:3102:3157	11050	1	True				
ANR	11072	CallExpression	g_get_user_special_dir ( G_USER_DIRECTORY_DESKTOP )		11050	0					
ANR	11073	Callee	g_get_user_special_dir		11050	0					
ANR	11074	Identifier	g_get_user_special_dir		11050	0					
ANR	11075	ArgumentList	G_USER_DIRECTORY_DESKTOP		11050	1					
ANR	11076	Argument	G_USER_DIRECTORY_DESKTOP		11050	0					
ANR	11077	Identifier	G_USER_DIRECTORY_DESKTOP		11050	0					
ANR	11078	IfStatement	"if ( ! strcmp ( fx_dir , ""xdg-download"" ) )"		11050	1					
ANR	11079	Condition	"! strcmp ( fx_dir , ""xdg-download"" )"	105:12:3171:3201	11050	0	True				
ANR	11080	UnaryOperationExpression	"! strcmp ( fx_dir , ""xdg-download"" )"		11050	0					
ANR	11081	UnaryOperator	!		11050	0					
ANR	11082	CallExpression	"strcmp ( fx_dir , ""xdg-download"" )"		11050	1					
ANR	11083	Callee	strcmp		11050	0					
ANR	11084	Identifier	strcmp		11050	0					
ANR	11085	ArgumentList	fx_dir		11050	1					
ANR	11086	Argument	fx_dir		11050	0					
ANR	11087	Identifier	fx_dir		11050	0					
ANR	11088	Argument	"""xdg-download"""		11050	1					
ANR	11089	PrimaryExpression	"""xdg-download"""		11050	0					
ANR	11090	ReturnStatement	return g_get_user_special_dir ( G_USER_DIRECTORY_DOWNLOAD ) ;	106:12:3216:3272	11050	1	True				
ANR	11091	CallExpression	g_get_user_special_dir ( G_USER_DIRECTORY_DOWNLOAD )		11050	0					
ANR	11092	Callee	g_get_user_special_dir		11050	0					
ANR	11093	Identifier	g_get_user_special_dir		11050	0					
ANR	11094	ArgumentList	G_USER_DIRECTORY_DOWNLOAD		11050	1					
ANR	11095	Argument	G_USER_DIRECTORY_DOWNLOAD		11050	0					
ANR	11096	Identifier	G_USER_DIRECTORY_DOWNLOAD		11050	0					
ANR	11097	ReturnStatement	return fx_dir ;	108:8:3283:3296	11050	2	True				
ANR	11098	Identifier	fx_dir		11050	0					
ANR	11099	ReturnStatement	return g_get_user_special_dir ( vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD ) ;	111:4:3309:3507	11050	1	True				
ANR	11100	CallExpression	g_get_user_special_dir ( vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD )		11050	0					
ANR	11101	Callee	g_get_user_special_dir		11050	0					
ANR	11102	Identifier	g_get_user_special_dir		11050	0					
ANR	11103	ArgumentList	vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD		11050	1					
ANR	11104	Argument	vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD		11050	0					
ANR	11105	ConditionalExpression	vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD		11050	0					
ANR	11106	Condition	vdagent_x11_has_icons_on_desktop ( agent -> x11 )		11050	0					
ANR	11107	CallExpression	vdagent_x11_has_icons_on_desktop ( agent -> x11 )		11050	0					
ANR	11108	Callee	vdagent_x11_has_icons_on_desktop		11050	0					
ANR	11109	Identifier	vdagent_x11_has_icons_on_desktop		11050	0					
ANR	11110	ArgumentList	agent -> x11		11050	1					
ANR	11111	Argument	agent -> x11		11050	0					
ANR	11112	PtrMemberAccess	agent -> x11		11050	0					
ANR	11113	Identifier	agent		11050	0					
ANR	11114	Identifier	x11		11050	1					
ANR	11115	Identifier	G_USER_DIRECTORY_DESKTOP		11050	1					
ANR	11116	Identifier	G_USER_DIRECTORY_DOWNLOAD		11050	2					
ANR	11117	ReturnType	static const gchar *		11050	1					
ANR	11118	Identifier	xfer_get_download_directory		11050	2					
ANR	11119	ParameterList	VDAgent * agent		11050	3					
ANR	11120	Parameter	VDAgent * agent	100:48:3002:3015	11050	0	True				
ANR	11121	ParameterType	VDAgent *		11050	0					
ANR	11122	Identifier	agent		11050	1					
ANR	11123	CFGEntryNode	ENTRY		11050		True				
ANR	11124	CFGExitNode	EXIT		11050		True				
ANR	11125	Symbol	strcmp		11050						
ANR	11126	Symbol	agent		11050						
ANR	11127	Symbol	NULL		11050						
ANR	11128	Symbol	vdagent_x11_has_icons_on_desktop		11050						
ANR	11129	Symbol	g_get_user_special_dir		11050						
ANR	11130	Symbol	fx_dir		11050						
ANR	11131	Symbol	G_USER_DIRECTORY_DOWNLOAD		11050						
ANR	11132	Symbol	* agent		11050						
ANR	11133	Symbol	G_USER_DIRECTORY_DESKTOP		11050						
ANR	11134	Symbol	agent -> x11		11050						
ANR	11135	Function	vdagent_init_file_xfer	122:0:3641:4359							
ANR	11136	FunctionDef	vdagent_init_file_xfer (VDAgent * agent)		11135	0					
ANR	11137	CompoundStatement		123:0:3696:4359	11135	0					
ANR	11138	IdentifierDeclStatement	const gchar * xfer_dir ;	124:4:3702:3723	11135	0	True				
ANR	11139	IdentifierDecl	* xfer_dir		11135	0					
ANR	11140	IdentifierDeclType	const gchar *		11135	0					
ANR	11141	Identifier	xfer_dir		11135	1					
ANR	11142	IfStatement	if ( agent -> xfers != NULL )		11135	1					
ANR	11143	Condition	agent -> xfers != NULL	126:8:3734:3753	11135	0	True				
ANR	11144	EqualityExpression	agent -> xfers != NULL		11135	0		!=			
ANR	11145	PtrMemberAccess	agent -> xfers		11135	0					
ANR	11146	Identifier	agent		11135	0					
ANR	11147	Identifier	xfers		11135	1					
ANR	11148	Identifier	NULL		11135	1					
ANR	11149	CompoundStatement		4:30:59:59	11135	1					
ANR	11150	ExpressionStatement	"syslog ( LOG_DEBUG , ""File-xfer already initialized"" )"	127:8:3766:3816	11135	0	True				
ANR	11151	CallExpression	"syslog ( LOG_DEBUG , ""File-xfer already initialized"" )"		11135	0					
ANR	11152	Callee	syslog		11135	0					
ANR	11153	Identifier	syslog		11135	0					
ANR	11154	ArgumentList	LOG_DEBUG		11135	1					
ANR	11155	Argument	LOG_DEBUG		11135	0					
ANR	11156	Identifier	LOG_DEBUG		11135	0					
ANR	11157	Argument	"""File-xfer already initialized"""		11135	1					
ANR	11158	PrimaryExpression	"""File-xfer already initialized"""		11135	0					
ANR	11159	ReturnStatement	return TRUE ;	128:8:3826:3837	11135	1	True				
ANR	11160	Identifier	TRUE		11135	0					
ANR	11161	ExpressionStatement	xfer_dir = xfer_get_download_directory ( agent )	131:4:3850:3895	11135	2	True				
ANR	11162	AssignmentExpression	xfer_dir = xfer_get_download_directory ( agent )		11135	0		=			
ANR	11163	Identifier	xfer_dir		11135	0					
ANR	11164	CallExpression	xfer_get_download_directory ( agent )		11135	1					
ANR	11165	Callee	xfer_get_download_directory		11135	0					
ANR	11166	Identifier	xfer_get_download_directory		11135	0					
ANR	11167	ArgumentList	agent		11135	1					
ANR	11168	Argument	agent		11135	0					
ANR	11169	Identifier	agent		11135	0					
ANR	11170	IfStatement	if ( xfer_dir == NULL )		11135	3					
ANR	11171	Condition	xfer_dir == NULL	132:8:3905:3920	11135	0	True				
ANR	11172	EqualityExpression	xfer_dir == NULL		11135	0		==			
ANR	11173	Identifier	xfer_dir		11135	0					
ANR	11174	Identifier	NULL		11135	1					
ANR	11175	CompoundStatement		10:26:226:226	11135	1					
ANR	11176	Statement	syslog	133:8:3933:3938	11135	0	True				
ANR	11177	Statement	(	133:14:3939:3939	11135	1	True				
ANR	11178	Statement	LOG_WARNING	133:15:3940:3950	11135	2	True				
ANR	11179	Statement	","	133:26:3951:3951	11135	3	True				
ANR	11180	Statement	"""warning could not get file xfer save dir, """	134:15:3968:4011	11135	4	True				
ANR	11181	Statement	"""file transfers will be disabled"""	135:15:4028:4060	11135	5	True				
ANR	11182	Statement	)	135:48:4061:4061	11135	6	True				
ANR	11183	ExpressionStatement		135:49:4062:4062	11135	7	True				
ANR	11184	ReturnStatement	return FALSE ;	136:8:4072:4084	11135	8	True				
ANR	11185	Identifier	FALSE		11135	0					
ANR	11186	IfStatement	if ( fx_open_dir == - 1 )		11135	4					
ANR	11187	Condition	fx_open_dir == - 1	139:8:4101:4117	11135	0	True				
ANR	11188	EqualityExpression	fx_open_dir == - 1		11135	0		==			
ANR	11189	Identifier	fx_open_dir		11135	0					
ANR	11190	UnaryOperationExpression	- 1		11135	1					
ANR	11191	UnaryOperator	-		11135	0					
ANR	11192	PrimaryExpression	1		11135	1					
ANR	11193	ExpressionStatement	fx_open_dir = ! vdagent_x11_has_icons_on_desktop ( agent -> x11 )	140:8:4128:4187	11135	1	True				
ANR	11194	AssignmentExpression	fx_open_dir = ! vdagent_x11_has_icons_on_desktop ( agent -> x11 )		11135	0		=			
ANR	11195	Identifier	fx_open_dir		11135	0					
ANR	11196	UnaryOperationExpression	! vdagent_x11_has_icons_on_desktop ( agent -> x11 )		11135	1					
ANR	11197	UnaryOperator	!		11135	0					
ANR	11198	CallExpression	vdagent_x11_has_icons_on_desktop ( agent -> x11 )		11135	1					
ANR	11199	Callee	vdagent_x11_has_icons_on_desktop		11135	0					
ANR	11200	Identifier	vdagent_x11_has_icons_on_desktop		11135	0					
ANR	11201	ArgumentList	agent -> x11		11135	1					
ANR	11202	Argument	agent -> x11		11135	0					
ANR	11203	PtrMemberAccess	agent -> x11		11135	0					
ANR	11204	Identifier	agent		11135	0					
ANR	11205	Identifier	x11		11135	1					
ANR	11206	ExpressionStatement	"agent -> xfers = vdagent_file_xfers_create ( agent -> conn , xfer_dir , fx_open_dir , debug )"	142:4:4194:4322	11135	5	True				
ANR	11207	AssignmentExpression	"agent -> xfers = vdagent_file_xfers_create ( agent -> conn , xfer_dir , fx_open_dir , debug )"		11135	0		=			
ANR	11208	PtrMemberAccess	agent -> xfers		11135	0					
ANR	11209	Identifier	agent		11135	0					
ANR	11210	Identifier	xfers		11135	1					
ANR	11211	CallExpression	"vdagent_file_xfers_create ( agent -> conn , xfer_dir , fx_open_dir , debug )"		11135	1					
ANR	11212	Callee	vdagent_file_xfers_create		11135	0					
ANR	11213	Identifier	vdagent_file_xfers_create		11135	0					
ANR	11214	ArgumentList	agent -> conn		11135	1					
ANR	11215	Argument	agent -> conn		11135	0					
ANR	11216	PtrMemberAccess	agent -> conn		11135	0					
ANR	11217	Identifier	agent		11135	0					
ANR	11218	Identifier	conn		11135	1					
ANR	11219	Argument	xfer_dir		11135	1					
ANR	11220	Identifier	xfer_dir		11135	0					
ANR	11221	Argument	fx_open_dir		11135	2					
ANR	11222	Identifier	fx_open_dir		11135	0					
ANR	11223	Argument	debug		11135	3					
ANR	11224	Identifier	debug		11135	0					
ANR	11225	ReturnStatement	return ( agent -> xfers != NULL ) ;	144:4:4328:4357	11135	6	True				
ANR	11226	EqualityExpression	agent -> xfers != NULL		11135	0		!=			
ANR	11227	PtrMemberAccess	agent -> xfers		11135	0					
ANR	11228	Identifier	agent		11135	0					
ANR	11229	Identifier	xfers		11135	1					
ANR	11230	Identifier	NULL		11135	1					
ANR	11231	ReturnType	static gboolean		11135	1					
ANR	11232	Identifier	vdagent_init_file_xfer		11135	2					
ANR	11233	ParameterList	VDAgent * agent		11135	3					
ANR	11234	Parameter	VDAgent * agent	122:39:3680:3693	11135	0	True				
ANR	11235	ParameterType	VDAgent *		11135	0					
ANR	11236	Identifier	agent		11135	1					
ANR	11237	CFGEntryNode	ENTRY		11135		True				
ANR	11238	CFGExitNode	EXIT		11135		True				
ANR	11239	Symbol	agent		11135						
ANR	11240	Symbol	NULL		11135						
ANR	11241	Symbol	vdagent_x11_has_icons_on_desktop		11135						
ANR	11242	Symbol	debug		11135						
ANR	11243	Symbol	vdagent_file_xfers_create		11135						
ANR	11244	Symbol	agent -> conn		11135						
ANR	11245	Symbol	* agent		11135						
ANR	11246	Symbol	fx_open_dir		11135						
ANR	11247	Symbol	TRUE		11135						
ANR	11248	Symbol	agent -> xfers		11135						
ANR	11249	Symbol	agent -> x11		11135						
ANR	11250	Symbol	xfer_get_download_directory		11135						
ANR	11251	Symbol	FALSE		11135						
ANR	11252	Symbol	LOG_DEBUG		11135						
ANR	11253	Symbol	xfer_dir		11135						
ANR	11254	Function	vdagent_finalize_file_xfer	147:0:4362:4557							
ANR	11255	FunctionDef	vdagent_finalize_file_xfer (VDAgent * agent)		11254	0					
ANR	11256	CompoundStatement		148:0:4421:4557	11254	0					
ANR	11257	IfStatement	if ( agent -> xfers == NULL )		11254	0					
ANR	11258	Condition	agent -> xfers == NULL	149:8:4431:4450	11254	0	True				
ANR	11259	EqualityExpression	agent -> xfers == NULL		11254	0		==			
ANR	11260	PtrMemberAccess	agent -> xfers		11254	0					
ANR	11261	Identifier	agent		11254	0					
ANR	11262	Identifier	xfers		11254	1					
ANR	11263	Identifier	NULL		11254	1					
ANR	11264	ReturnStatement	return FALSE ;	150:8:4461:4473	11254	1	True				
ANR	11265	Identifier	FALSE		11254	0					
ANR	11266	ExpressionStatement	"g_clear_pointer ( & agent -> xfers , vdagent_file_xfers_destroy )"	152:4:4480:4538	11254	1	True				
ANR	11267	CallExpression	"g_clear_pointer ( & agent -> xfers , vdagent_file_xfers_destroy )"		11254	0					
ANR	11268	Callee	g_clear_pointer		11254	0					
ANR	11269	Identifier	g_clear_pointer		11254	0					
ANR	11270	ArgumentList	& agent -> xfers		11254	1					
ANR	11271	Argument	& agent -> xfers		11254	0					
ANR	11272	UnaryOperationExpression	& agent -> xfers		11254	0					
ANR	11273	UnaryOperator	&		11254	0					
ANR	11274	PtrMemberAccess	agent -> xfers		11254	1					
ANR	11275	Identifier	agent		11254	0					
ANR	11276	Identifier	xfers		11254	1					
ANR	11277	Argument	vdagent_file_xfers_destroy		11254	1					
ANR	11278	Identifier	vdagent_file_xfers_destroy		11254	0					
ANR	11279	ReturnStatement	return TRUE ;	153:4:4544:4555	11254	2	True				
ANR	11280	Identifier	TRUE		11254	0					
ANR	11281	ReturnType	static gboolean		11254	1					
ANR	11282	Identifier	vdagent_finalize_file_xfer		11254	2					
ANR	11283	ParameterList	VDAgent * agent		11254	3					
ANR	11284	Parameter	VDAgent * agent	147:43:4405:4418	11254	0	True				
ANR	11285	ParameterType	VDAgent *		11254	0					
ANR	11286	Identifier	agent		11254	1					
ANR	11287	CFGEntryNode	ENTRY		11254		True				
ANR	11288	CFGExitNode	EXIT		11254		True				
ANR	11289	Symbol	vdagent_file_xfers_destroy		11254						
ANR	11290	Symbol	agent		11254						
ANR	11291	Symbol	NULL		11254						
ANR	11292	Symbol	* agent		11254						
ANR	11293	Symbol	TRUE		11254						
ANR	11294	Symbol	agent -> xfers		11254						
ANR	11295	Symbol	FALSE		11254						
ANR	11296	Symbol	& agent -> xfers		11254						
ANR	11297	Function	daemon_read_complete	156:0:4560:7818							
ANR	11298	FunctionDef	"daemon_read_complete (struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data)"		11297	0					
ANR	11299	CompoundStatement		158:0:4682:7818	11297	0					
ANR	11300	IdentifierDeclStatement	VDAgent * agent = udscs_get_user_data ( * connp ) ;	159:4:4688:4732	11297	0	True				
ANR	11301	IdentifierDecl	* agent = udscs_get_user_data ( * connp )		11297	0					
ANR	11302	IdentifierDeclType	VDAgent *		11297	0					
ANR	11303	Identifier	agent		11297	1					
ANR	11304	AssignmentExpression	* agent = udscs_get_user_data ( * connp )		11297	2		=			
ANR	11305	Identifier	agent		11297	0					
ANR	11306	CallExpression	udscs_get_user_data ( * connp )		11297	1					
ANR	11307	Callee	udscs_get_user_data		11297	0					
ANR	11308	Identifier	udscs_get_user_data		11297	0					
ANR	11309	ArgumentList	* connp		11297	1					
ANR	11310	Argument	* connp		11297	0					
ANR	11311	UnaryOperationExpression	* connp		11297	0					
ANR	11312	UnaryOperator	*		11297	0					
ANR	11313	Identifier	connp		11297	1					
ANR	11314	SwitchStatement	switch ( header -> type )		11297	1					
ANR	11315	Condition	header -> type	161:12:4747:4758	11297	0	True				
ANR	11316	PtrMemberAccess	header -> type		11297	0					
ANR	11317	Identifier	header		11297	0					
ANR	11318	Identifier	type		11297	1					
ANR	11319	CompoundStatement		4:26:78:78	11297	1					
ANR	11320	Label	case VDAGENTD_MONITORS_CONFIG :	162:4:4767:4796	11297	0	True				
ANR	11321	Identifier	VDAGENTD_MONITORS_CONFIG		11297	0					
ANR	11322	ExpressionStatement	"vdagent_x11_set_monitor_config ( agent -> x11 , ( VDAgentMonitorsConfig * ) data , 0 )"	163:8:4806:4882	11297	1	True				
ANR	11323	CallExpression	"vdagent_x11_set_monitor_config ( agent -> x11 , ( VDAgentMonitorsConfig * ) data , 0 )"		11297	0					
ANR	11324	Callee	vdagent_x11_set_monitor_config		11297	0					
ANR	11325	Identifier	vdagent_x11_set_monitor_config		11297	0					
ANR	11326	ArgumentList	agent -> x11		11297	1					
ANR	11327	Argument	agent -> x11		11297	0					
ANR	11328	PtrMemberAccess	agent -> x11		11297	0					
ANR	11329	Identifier	agent		11297	0					
ANR	11330	Identifier	x11		11297	1					
ANR	11331	Argument	( VDAgentMonitorsConfig * ) data		11297	1					
ANR	11332	CastExpression	( VDAgentMonitorsConfig * ) data		11297	0					
ANR	11333	CastTarget	VDAgentMonitorsConfig *		11297	0					
ANR	11334	Identifier	data		11297	1					
ANR	11335	Argument	0		11297	2					
ANR	11336	PrimaryExpression	0		11297	0					
ANR	11337	BreakStatement	break ;	164:8:4892:4897	11297	2	True				
ANR	11338	Label	case VDAGENTD_CLIPBOARD_REQUEST :	165:4:4903:4934	11297	3	True				
ANR	11339	Identifier	VDAGENTD_CLIPBOARD_REQUEST		11297	0					
ANR	11340	ExpressionStatement	"vdagent_x11_clipboard_request ( agent -> x11 , header -> arg1 , header -> arg2 )"	166:8:4944:5013	11297	4	True				
ANR	11341	CallExpression	"vdagent_x11_clipboard_request ( agent -> x11 , header -> arg1 , header -> arg2 )"		11297	0					
ANR	11342	Callee	vdagent_x11_clipboard_request		11297	0					
ANR	11343	Identifier	vdagent_x11_clipboard_request		11297	0					
ANR	11344	ArgumentList	agent -> x11		11297	1					
ANR	11345	Argument	agent -> x11		11297	0					
ANR	11346	PtrMemberAccess	agent -> x11		11297	0					
ANR	11347	Identifier	agent		11297	0					
ANR	11348	Identifier	x11		11297	1					
ANR	11349	Argument	header -> arg1		11297	1					
ANR	11350	PtrMemberAccess	header -> arg1		11297	0					
ANR	11351	Identifier	header		11297	0					
ANR	11352	Identifier	arg1		11297	1					
ANR	11353	Argument	header -> arg2		11297	2					
ANR	11354	PtrMemberAccess	header -> arg2		11297	0					
ANR	11355	Identifier	header		11297	0					
ANR	11356	Identifier	arg2		11297	1					
ANR	11357	BreakStatement	break ;	167:8:5023:5028	11297	5	True				
ANR	11358	Label	case VDAGENTD_CLIPBOARD_GRAB :	168:4:5034:5062	11297	6	True				
ANR	11359	Identifier	VDAGENTD_CLIPBOARD_GRAB		11297	0					
ANR	11360	ExpressionStatement	"vdagent_x11_clipboard_grab ( agent -> x11 , header -> arg1 , ( uint32_t * ) data , header -> size / sizeof ( uint32_t ) )"	169:8:5072:5210	11297	7	True				
ANR	11361	CallExpression	"vdagent_x11_clipboard_grab ( agent -> x11 , header -> arg1 , ( uint32_t * ) data , header -> size / sizeof ( uint32_t ) )"		11297	0					
ANR	11362	Callee	vdagent_x11_clipboard_grab		11297	0					
ANR	11363	Identifier	vdagent_x11_clipboard_grab		11297	0					
ANR	11364	ArgumentList	agent -> x11		11297	1					
ANR	11365	Argument	agent -> x11		11297	0					
ANR	11366	PtrMemberAccess	agent -> x11		11297	0					
ANR	11367	Identifier	agent		11297	0					
ANR	11368	Identifier	x11		11297	1					
ANR	11369	Argument	header -> arg1		11297	1					
ANR	11370	PtrMemberAccess	header -> arg1		11297	0					
ANR	11371	Identifier	header		11297	0					
ANR	11372	Identifier	arg1		11297	1					
ANR	11373	Argument	( uint32_t * ) data		11297	2					
ANR	11374	CastExpression	( uint32_t * ) data		11297	0					
ANR	11375	CastTarget	uint32_t *		11297	0					
ANR	11376	Identifier	data		11297	1					
ANR	11377	Argument	header -> size / sizeof ( uint32_t )		11297	3					
ANR	11378	MultiplicativeExpression	header -> size / sizeof ( uint32_t )		11297	0		/			
ANR	11379	PtrMemberAccess	header -> size		11297	0					
ANR	11380	Identifier	header		11297	0					
ANR	11381	Identifier	size		11297	1					
ANR	11382	SizeofExpression	sizeof ( uint32_t )		11297	1					
ANR	11383	Sizeof	sizeof		11297	0					
ANR	11384	SizeofOperand	uint32_t		11297	1					
ANR	11385	BreakStatement	break ;	171:8:5220:5225	11297	8	True				
ANR	11386	Label	case VDAGENTD_CLIPBOARD_DATA :	172:4:5231:5259	11297	9	True				
ANR	11387	Identifier	VDAGENTD_CLIPBOARD_DATA		11297	0					
ANR	11388	ExpressionStatement	"vdagent_x11_clipboard_data ( agent -> x11 , header -> arg1 , header -> arg2 , data , header -> size )"	173:8:5269:5390	11297	10	True				
ANR	11389	CallExpression	"vdagent_x11_clipboard_data ( agent -> x11 , header -> arg1 , header -> arg2 , data , header -> size )"		11297	0					
ANR	11390	Callee	vdagent_x11_clipboard_data		11297	0					
ANR	11391	Identifier	vdagent_x11_clipboard_data		11297	0					
ANR	11392	ArgumentList	agent -> x11		11297	1					
ANR	11393	Argument	agent -> x11		11297	0					
ANR	11394	PtrMemberAccess	agent -> x11		11297	0					
ANR	11395	Identifier	agent		11297	0					
ANR	11396	Identifier	x11		11297	1					
ANR	11397	Argument	header -> arg1		11297	1					
ANR	11398	PtrMemberAccess	header -> arg1		11297	0					
ANR	11399	Identifier	header		11297	0					
ANR	11400	Identifier	arg1		11297	1					
ANR	11401	Argument	header -> arg2		11297	2					
ANR	11402	PtrMemberAccess	header -> arg2		11297	0					
ANR	11403	Identifier	header		11297	0					
ANR	11404	Identifier	arg2		11297	1					
ANR	11405	Argument	data		11297	3					
ANR	11406	Identifier	data		11297	0					
ANR	11407	Argument	header -> size		11297	4					
ANR	11408	PtrMemberAccess	header -> size		11297	0					
ANR	11409	Identifier	header		11297	0					
ANR	11410	Identifier	size		11297	1					
ANR	11411	BreakStatement	break ;	175:8:5400:5405	11297	11	True				
ANR	11412	Label	case VDAGENTD_CLIPBOARD_RELEASE :	176:4:5411:5442	11297	12	True				
ANR	11413	Identifier	VDAGENTD_CLIPBOARD_RELEASE		11297	0					
ANR	11414	ExpressionStatement	"vdagent_x11_clipboard_release ( agent -> x11 , header -> arg1 )"	177:8:5452:5507	11297	13	True				
ANR	11415	CallExpression	"vdagent_x11_clipboard_release ( agent -> x11 , header -> arg1 )"		11297	0					
ANR	11416	Callee	vdagent_x11_clipboard_release		11297	0					
ANR	11417	Identifier	vdagent_x11_clipboard_release		11297	0					
ANR	11418	ArgumentList	agent -> x11		11297	1					
ANR	11419	Argument	agent -> x11		11297	0					
ANR	11420	PtrMemberAccess	agent -> x11		11297	0					
ANR	11421	Identifier	agent		11297	0					
ANR	11422	Identifier	x11		11297	1					
ANR	11423	Argument	header -> arg1		11297	1					
ANR	11424	PtrMemberAccess	header -> arg1		11297	0					
ANR	11425	Identifier	header		11297	0					
ANR	11426	Identifier	arg1		11297	1					
ANR	11427	BreakStatement	break ;	178:8:5517:5522	11297	14	True				
ANR	11428	Label	case VDAGENTD_VERSION :	179:4:5528:5549	11297	15	True				
ANR	11429	Identifier	VDAGENTD_VERSION		11297	0					
ANR	11430	IfStatement	"if ( strcmp ( ( char * ) data , VERSION ) != 0 )"		11297	16					
ANR	11431	Condition	"strcmp ( ( char * ) data , VERSION ) != 0"	180:12:5563:5596	11297	0	True				
ANR	11432	EqualityExpression	"strcmp ( ( char * ) data , VERSION ) != 0"		11297	0		!=			
ANR	11433	CallExpression	"strcmp ( ( char * ) data , VERSION )"		11297	0					
ANR	11434	Callee	strcmp		11297	0					
ANR	11435	Identifier	strcmp		11297	0					
ANR	11436	ArgumentList	( char * ) data		11297	1					
ANR	11437	Argument	( char * ) data		11297	0					
ANR	11438	CastExpression	( char * ) data		11297	0					
ANR	11439	CastTarget	char *		11297	0					
ANR	11440	Identifier	data		11297	1					
ANR	11441	Argument	VERSION		11297	1					
ANR	11442	Identifier	VERSION		11297	0					
ANR	11443	PrimaryExpression	0		11297	1					
ANR	11444	CompoundStatement		23:48:916:916	11297	1					
ANR	11445	ExpressionStatement	"syslog ( LOG_INFO , ""vdagentd version mismatch: got %s expected %s"" , data , VERSION )"	181:12:5613:5712	11297	0	True				
ANR	11446	CallExpression	"syslog ( LOG_INFO , ""vdagentd version mismatch: got %s expected %s"" , data , VERSION )"		11297	0					
ANR	11447	Callee	syslog		11297	0					
ANR	11448	Identifier	syslog		11297	0					
ANR	11449	ArgumentList	LOG_INFO		11297	1					
ANR	11450	Argument	LOG_INFO		11297	0					
ANR	11451	Identifier	LOG_INFO		11297	0					
ANR	11452	Argument	"""vdagentd version mismatch: got %s expected %s"""		11297	1					
ANR	11453	PrimaryExpression	"""vdagentd version mismatch: got %s expected %s"""		11297	0					
ANR	11454	Argument	data		11297	2					
ANR	11455	Identifier	data		11297	0					
ANR	11456	Argument	VERSION		11297	3					
ANR	11457	Identifier	VERSION		11297	0					
ANR	11458	ExpressionStatement	g_main_loop_quit ( agent -> loop )	183:12:5726:5755	11297	1	True				
ANR	11459	CallExpression	g_main_loop_quit ( agent -> loop )		11297	0					
ANR	11460	Callee	g_main_loop_quit		11297	0					
ANR	11461	Identifier	g_main_loop_quit		11297	0					
ANR	11462	ArgumentList	agent -> loop		11297	1					
ANR	11463	Argument	agent -> loop		11297	0					
ANR	11464	PtrMemberAccess	agent -> loop		11297	0					
ANR	11465	Identifier	agent		11297	0					
ANR	11466	Identifier	loop		11297	1					
ANR	11467	ExpressionStatement	version_mismatch = 1	184:12:5769:5789	11297	2	True				
ANR	11468	AssignmentExpression	version_mismatch = 1		11297	0		=			
ANR	11469	Identifier	version_mismatch		11297	0					
ANR	11470	PrimaryExpression	1		11297	1					
ANR	11471	BreakStatement	break ;	186:8:5809:5814	11297	17	True				
ANR	11472	Label	case VDAGENTD_FILE_XFER_START :	187:4:5820:5849	11297	18	True				
ANR	11473	Identifier	VDAGENTD_FILE_XFER_START		11297	0					
ANR	11474	IfStatement	if ( agent -> xfers != NULL )		11297	19					
ANR	11475	Condition	agent -> xfers != NULL	188:12:5863:5882	11297	0	True				
ANR	11476	EqualityExpression	agent -> xfers != NULL		11297	0		!=			
ANR	11477	PtrMemberAccess	agent -> xfers		11297	0					
ANR	11478	Identifier	agent		11297	0					
ANR	11479	Identifier	xfers		11297	1					
ANR	11480	Identifier	NULL		11297	1					
ANR	11481	CompoundStatement		31:34:1202:1202	11297	1					
ANR	11482	ExpressionStatement	"vdagent_file_xfers_start ( agent -> xfers , ( VDAgentFileXferStartMessage * ) data )"	189:12:5899:6011	11297	0	True				
ANR	11483	CallExpression	"vdagent_file_xfers_start ( agent -> xfers , ( VDAgentFileXferStartMessage * ) data )"		11297	0					
ANR	11484	Callee	vdagent_file_xfers_start		11297	0					
ANR	11485	Identifier	vdagent_file_xfers_start		11297	0					
ANR	11486	ArgumentList	agent -> xfers		11297	1					
ANR	11487	Argument	agent -> xfers		11297	0					
ANR	11488	PtrMemberAccess	agent -> xfers		11297	0					
ANR	11489	Identifier	agent		11297	0					
ANR	11490	Identifier	xfers		11297	1					
ANR	11491	Argument	( VDAgentFileXferStartMessage * ) data		11297	1					
ANR	11492	CastExpression	( VDAgentFileXferStartMessage * ) data		11297	0					
ANR	11493	CastTarget	VDAgentFileXferStartMessage *		11297	0					
ANR	11494	Identifier	data		11297	1					
ANR	11495	ElseStatement	else		11297	0					
ANR	11496	CompoundStatement		34:15:1345:1345	11297	0					
ANR	11497	ExpressionStatement	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStartMessage * ) data ) -> id )"	192:12:6042:6172	11297	0	True				
ANR	11498	CallExpression	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStartMessage * ) data ) -> id )"		11297	0					
ANR	11499	Callee	vdagent_file_xfers_error_disabled		11297	0					
ANR	11500	Identifier	vdagent_file_xfers_error_disabled		11297	0					
ANR	11501	ArgumentList	* connp		11297	1					
ANR	11502	Argument	* connp		11297	0					
ANR	11503	UnaryOperationExpression	* connp		11297	0					
ANR	11504	UnaryOperator	*		11297	0					
ANR	11505	Identifier	connp		11297	1					
ANR	11506	Argument	( ( VDAgentFileXferStartMessage * ) data ) -> id		11297	1					
ANR	11507	PtrMemberAccess	( ( VDAgentFileXferStartMessage * ) data ) -> id		11297	0					
ANR	11508	CastExpression	( VDAgentFileXferStartMessage * ) data		11297	0					
ANR	11509	CastTarget	VDAgentFileXferStartMessage *		11297	0					
ANR	11510	Identifier	data		11297	1					
ANR	11511	Identifier	id		11297	1					
ANR	11512	BreakStatement	break ;	195:8:6192:6197	11297	20	True				
ANR	11513	Label	case VDAGENTD_FILE_XFER_STATUS :	196:4:6203:6233	11297	21	True				
ANR	11514	Identifier	VDAGENTD_FILE_XFER_STATUS		11297	0					
ANR	11515	IfStatement	if ( agent -> xfers != NULL )		11297	22					
ANR	11516	Condition	agent -> xfers != NULL	197:12:6247:6266	11297	0	True				
ANR	11517	EqualityExpression	agent -> xfers != NULL		11297	0		!=			
ANR	11518	PtrMemberAccess	agent -> xfers		11297	0					
ANR	11519	Identifier	agent		11297	0					
ANR	11520	Identifier	xfers		11297	1					
ANR	11521	Identifier	NULL		11297	1					
ANR	11522	CompoundStatement		40:34:1586:1586	11297	1					
ANR	11523	ExpressionStatement	"vdagent_file_xfers_status ( agent -> xfers , ( VDAgentFileXferStatusMessage * ) data )"	198:12:6283:6398	11297	0	True				
ANR	11524	CallExpression	"vdagent_file_xfers_status ( agent -> xfers , ( VDAgentFileXferStatusMessage * ) data )"		11297	0					
ANR	11525	Callee	vdagent_file_xfers_status		11297	0					
ANR	11526	Identifier	vdagent_file_xfers_status		11297	0					
ANR	11527	ArgumentList	agent -> xfers		11297	1					
ANR	11528	Argument	agent -> xfers		11297	0					
ANR	11529	PtrMemberAccess	agent -> xfers		11297	0					
ANR	11530	Identifier	agent		11297	0					
ANR	11531	Identifier	xfers		11297	1					
ANR	11532	Argument	( VDAgentFileXferStatusMessage * ) data		11297	1					
ANR	11533	CastExpression	( VDAgentFileXferStatusMessage * ) data		11297	0					
ANR	11534	CastTarget	VDAgentFileXferStatusMessage *		11297	0					
ANR	11535	Identifier	data		11297	1					
ANR	11536	ElseStatement	else		11297	0					
ANR	11537	CompoundStatement		43:15:1732:1732	11297	0					
ANR	11538	ExpressionStatement	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStatusMessage * ) data ) -> id )"	201:12:6429:6560	11297	0	True				
ANR	11539	CallExpression	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStatusMessage * ) data ) -> id )"		11297	0					
ANR	11540	Callee	vdagent_file_xfers_error_disabled		11297	0					
ANR	11541	Identifier	vdagent_file_xfers_error_disabled		11297	0					
ANR	11542	ArgumentList	* connp		11297	1					
ANR	11543	Argument	* connp		11297	0					
ANR	11544	UnaryOperationExpression	* connp		11297	0					
ANR	11545	UnaryOperator	*		11297	0					
ANR	11546	Identifier	connp		11297	1					
ANR	11547	Argument	( ( VDAgentFileXferStatusMessage * ) data ) -> id		11297	1					
ANR	11548	PtrMemberAccess	( ( VDAgentFileXferStatusMessage * ) data ) -> id		11297	0					
ANR	11549	CastExpression	( VDAgentFileXferStatusMessage * ) data		11297	0					
ANR	11550	CastTarget	VDAgentFileXferStatusMessage *		11297	0					
ANR	11551	Identifier	data		11297	1					
ANR	11552	Identifier	id		11297	1					
ANR	11553	BreakStatement	break ;	204:8:6580:6585	11297	23	True				
ANR	11554	Label	case VDAGENTD_FILE_XFER_DISABLE :	205:4:6591:6622	11297	24	True				
ANR	11555	Identifier	VDAGENTD_FILE_XFER_DISABLE		11297	0					
ANR	11556	IfStatement	if ( debug )		11297	25					
ANR	11557	Condition	debug	206:12:6636:6640	11297	0	True				
ANR	11558	Identifier	debug		11297	0					
ANR	11559	ExpressionStatement	"syslog ( LOG_DEBUG , ""Disabling file-xfers"" )"	207:12:6655:6696	11297	1	True				
ANR	11560	CallExpression	"syslog ( LOG_DEBUG , ""Disabling file-xfers"" )"		11297	0					
ANR	11561	Callee	syslog		11297	0					
ANR	11562	Identifier	syslog		11297	0					
ANR	11563	ArgumentList	LOG_DEBUG		11297	1					
ANR	11564	Argument	LOG_DEBUG		11297	0					
ANR	11565	Identifier	LOG_DEBUG		11297	0					
ANR	11566	Argument	"""Disabling file-xfers"""		11297	1					
ANR	11567	PrimaryExpression	"""Disabling file-xfers"""		11297	0					
ANR	11568	ExpressionStatement	vdagent_finalize_file_xfer ( agent )	209:8:6707:6740	11297	26	True				
ANR	11569	CallExpression	vdagent_finalize_file_xfer ( agent )		11297	0					
ANR	11570	Callee	vdagent_finalize_file_xfer		11297	0					
ANR	11571	Identifier	vdagent_finalize_file_xfer		11297	0					
ANR	11572	ArgumentList	agent		11297	1					
ANR	11573	Argument	agent		11297	0					
ANR	11574	Identifier	agent		11297	0					
ANR	11575	BreakStatement	break ;	210:8:6750:6755	11297	27	True				
ANR	11576	Label	case VDAGENTD_AUDIO_VOLUME_SYNC :	211:4:6761:6792	11297	28	True				
ANR	11577	Identifier	VDAGENTD_AUDIO_VOLUME_SYNC		11297	0					
ANR	11578	CompoundStatement		55:8:2121:2181	11297	29					
ANR	11579	IdentifierDeclStatement	VDAgentAudioVolumeSync * avs = ( VDAgentAudioVolumeSync * ) data ;	212:8:6804:6864	11297	0	True				
ANR	11580	IdentifierDecl	* avs = ( VDAgentAudioVolumeSync * ) data		11297	0					
ANR	11581	IdentifierDeclType	VDAgentAudioVolumeSync *		11297	0					
ANR	11582	Identifier	avs		11297	1					
ANR	11583	AssignmentExpression	* avs = ( VDAgentAudioVolumeSync * ) data		11297	2		=			
ANR	11584	Identifier	avs		11297	0					
ANR	11585	CastExpression	( VDAgentAudioVolumeSync * ) data		11297	1					
ANR	11586	CastTarget	VDAgentAudioVolumeSync *		11297	0					
ANR	11587	Identifier	data		11297	1					
ANR	11588	IfStatement	if ( avs -> is_playback )		11297	1					
ANR	11589	Condition	avs -> is_playback	213:12:6878:6893	11297	0	True				
ANR	11590	PtrMemberAccess	avs -> is_playback		11297	0					
ANR	11591	Identifier	avs		11297	0					
ANR	11592	Identifier	is_playback		11297	1					
ANR	11593	CompoundStatement		56:30:2213:2213	11297	1					
ANR	11594	ExpressionStatement	"vdagent_audio_playback_sync ( avs -> mute , avs -> nchannels , avs -> volume )"	214:12:6910:6977	11297	0	True				
ANR	11595	CallExpression	"vdagent_audio_playback_sync ( avs -> mute , avs -> nchannels , avs -> volume )"		11297	0					
ANR	11596	Callee	vdagent_audio_playback_sync		11297	0					
ANR	11597	Identifier	vdagent_audio_playback_sync		11297	0					
ANR	11598	ArgumentList	avs -> mute		11297	1					
ANR	11599	Argument	avs -> mute		11297	0					
ANR	11600	PtrMemberAccess	avs -> mute		11297	0					
ANR	11601	Identifier	avs		11297	0					
ANR	11602	Identifier	mute		11297	1					
ANR	11603	Argument	avs -> nchannels		11297	1					
ANR	11604	PtrMemberAccess	avs -> nchannels		11297	0					
ANR	11605	Identifier	avs		11297	0					
ANR	11606	Identifier	nchannels		11297	1					
ANR	11607	Argument	avs -> volume		11297	2					
ANR	11608	PtrMemberAccess	avs -> volume		11297	0					
ANR	11609	Identifier	avs		11297	0					
ANR	11610	Identifier	volume		11297	1					
ANR	11611	ElseStatement	else		11297	0					
ANR	11612	CompoundStatement		58:15:2311:2311	11297	0					
ANR	11613	ExpressionStatement	"vdagent_audio_record_sync ( avs -> mute , avs -> nchannels , avs -> volume )"	216:12:7008:7073	11297	0	True				
ANR	11614	CallExpression	"vdagent_audio_record_sync ( avs -> mute , avs -> nchannels , avs -> volume )"		11297	0					
ANR	11615	Callee	vdagent_audio_record_sync		11297	0					
ANR	11616	Identifier	vdagent_audio_record_sync		11297	0					
ANR	11617	ArgumentList	avs -> mute		11297	1					
ANR	11618	Argument	avs -> mute		11297	0					
ANR	11619	PtrMemberAccess	avs -> mute		11297	0					
ANR	11620	Identifier	avs		11297	0					
ANR	11621	Identifier	mute		11297	1					
ANR	11622	Argument	avs -> nchannels		11297	1					
ANR	11623	PtrMemberAccess	avs -> nchannels		11297	0					
ANR	11624	Identifier	avs		11297	0					
ANR	11625	Identifier	nchannels		11297	1					
ANR	11626	Argument	avs -> volume		11297	2					
ANR	11627	PtrMemberAccess	avs -> volume		11297	0					
ANR	11628	Identifier	avs		11297	0					
ANR	11629	Identifier	volume		11297	1					
ANR	11630	BreakStatement	break ;	218:8:7093:7098	11297	2	True				
ANR	11631	Label	case VDAGENTD_FILE_XFER_DATA :	220:4:7110:7138	11297	30	True				
ANR	11632	Identifier	VDAGENTD_FILE_XFER_DATA		11297	0					
ANR	11633	IfStatement	if ( agent -> xfers != NULL )		11297	31					
ANR	11634	Condition	agent -> xfers != NULL	221:12:7152:7171	11297	0	True				
ANR	11635	EqualityExpression	agent -> xfers != NULL		11297	0		!=			
ANR	11636	PtrMemberAccess	agent -> xfers		11297	0					
ANR	11637	Identifier	agent		11297	0					
ANR	11638	Identifier	xfers		11297	1					
ANR	11639	Identifier	NULL		11297	1					
ANR	11640	CompoundStatement		64:34:2491:2491	11297	1					
ANR	11641	ExpressionStatement	"vdagent_file_xfers_data ( agent -> xfers , ( VDAgentFileXferDataMessage * ) data )"	222:12:7188:7297	11297	0	True				
ANR	11642	CallExpression	"vdagent_file_xfers_data ( agent -> xfers , ( VDAgentFileXferDataMessage * ) data )"		11297	0					
ANR	11643	Callee	vdagent_file_xfers_data		11297	0					
ANR	11644	Identifier	vdagent_file_xfers_data		11297	0					
ANR	11645	ArgumentList	agent -> xfers		11297	1					
ANR	11646	Argument	agent -> xfers		11297	0					
ANR	11647	PtrMemberAccess	agent -> xfers		11297	0					
ANR	11648	Identifier	agent		11297	0					
ANR	11649	Identifier	xfers		11297	1					
ANR	11650	Argument	( VDAgentFileXferDataMessage * ) data		11297	1					
ANR	11651	CastExpression	( VDAgentFileXferDataMessage * ) data		11297	0					
ANR	11652	CastTarget	VDAgentFileXferDataMessage *		11297	0					
ANR	11653	Identifier	data		11297	1					
ANR	11654	ElseStatement	else		11297	0					
ANR	11655	CompoundStatement		67:15:2631:2631	11297	0					
ANR	11656	ExpressionStatement	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferDataMessage * ) data ) -> id )"	225:12:7328:7457	11297	0	True				
ANR	11657	CallExpression	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferDataMessage * ) data ) -> id )"		11297	0					
ANR	11658	Callee	vdagent_file_xfers_error_disabled		11297	0					
ANR	11659	Identifier	vdagent_file_xfers_error_disabled		11297	0					
ANR	11660	ArgumentList	* connp		11297	1					
ANR	11661	Argument	* connp		11297	0					
ANR	11662	UnaryOperationExpression	* connp		11297	0					
ANR	11663	UnaryOperator	*		11297	0					
ANR	11664	Identifier	connp		11297	1					
ANR	11665	Argument	( ( VDAgentFileXferDataMessage * ) data ) -> id		11297	1					
ANR	11666	PtrMemberAccess	( ( VDAgentFileXferDataMessage * ) data ) -> id		11297	0					
ANR	11667	CastExpression	( VDAgentFileXferDataMessage * ) data		11297	0					
ANR	11668	CastTarget	VDAgentFileXferDataMessage *		11297	0					
ANR	11669	Identifier	data		11297	1					
ANR	11670	Identifier	id		11297	1					
ANR	11671	BreakStatement	break ;	228:8:7477:7482	11297	32	True				
ANR	11672	Label	case VDAGENTD_CLIENT_DISCONNECTED :	229:4:7488:7521	11297	33	True				
ANR	11673	Identifier	VDAGENTD_CLIENT_DISCONNECTED		11297	0					
ANR	11674	ExpressionStatement	vdagent_x11_client_disconnected ( agent -> x11 )	230:8:7531:7574	11297	34	True				
ANR	11675	CallExpression	vdagent_x11_client_disconnected ( agent -> x11 )		11297	0					
ANR	11676	Callee	vdagent_x11_client_disconnected		11297	0					
ANR	11677	Identifier	vdagent_x11_client_disconnected		11297	0					
ANR	11678	ArgumentList	agent -> x11		11297	1					
ANR	11679	Argument	agent -> x11		11297	0					
ANR	11680	PtrMemberAccess	agent -> x11		11297	0					
ANR	11681	Identifier	agent		11297	0					
ANR	11682	Identifier	x11		11297	1					
ANR	11683	IfStatement	if ( vdagent_finalize_file_xfer ( agent ) )		11297	35					
ANR	11684	Condition	vdagent_finalize_file_xfer ( agent )	231:12:7588:7620	11297	0	True				
ANR	11685	CallExpression	vdagent_finalize_file_xfer ( agent )		11297	0					
ANR	11686	Callee	vdagent_finalize_file_xfer		11297	0					
ANR	11687	Identifier	vdagent_finalize_file_xfer		11297	0					
ANR	11688	ArgumentList	agent		11297	1					
ANR	11689	Argument	agent		11297	0					
ANR	11690	Identifier	agent		11297	0					
ANR	11691	CompoundStatement		74:47:2940:2940	11297	1					
ANR	11692	ExpressionStatement	vdagent_init_file_xfer ( agent )	232:12:7637:7666	11297	0	True				
ANR	11693	CallExpression	vdagent_init_file_xfer ( agent )		11297	0					
ANR	11694	Callee	vdagent_init_file_xfer		11297	0					
ANR	11695	Identifier	vdagent_init_file_xfer		11297	0					
ANR	11696	ArgumentList	agent		11297	1					
ANR	11697	Argument	agent		11297	0					
ANR	11698	Identifier	agent		11297	0					
ANR	11699	BreakStatement	break ;	234:8:7686:7691	11297	36	True				
ANR	11700	Label	default :	235:4:7697:7704	11297	37	True				
ANR	11701	Identifier	default		11297	0					
ANR	11702	ExpressionStatement	"syslog ( LOG_ERR , ""Unknown message from vdagentd type: %d, ignoring"" , header -> type )"	236:8:7714:7810	11297	38	True				
ANR	11703	CallExpression	"syslog ( LOG_ERR , ""Unknown message from vdagentd type: %d, ignoring"" , header -> type )"		11297	0					
ANR	11704	Callee	syslog		11297	0					
ANR	11705	Identifier	syslog		11297	0					
ANR	11706	ArgumentList	LOG_ERR		11297	1					
ANR	11707	Argument	LOG_ERR		11297	0					
ANR	11708	Identifier	LOG_ERR		11297	0					
ANR	11709	Argument	"""Unknown message from vdagentd type: %d, ignoring"""		11297	1					
ANR	11710	PrimaryExpression	"""Unknown message from vdagentd type: %d, ignoring"""		11297	0					
ANR	11711	Argument	header -> type		11297	2					
ANR	11712	PtrMemberAccess	header -> type		11297	0					
ANR	11713	Identifier	header		11297	0					
ANR	11714	Identifier	type		11297	1					
ANR	11715	ReturnType	static void		11297	1					
ANR	11716	Identifier	daemon_read_complete		11297	2					
ANR	11717	ParameterList	"struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data"		11297	3					
ANR	11718	Parameter	struct udscs_connection * * connp	156:33:4593:4623	11297	0	True				
ANR	11719	ParameterType	struct udscs_connection * *		11297	0					
ANR	11720	Identifier	connp		11297	1					
ANR	11721	Parameter	struct udscs_message_header * header	157:4:4630:4664	11297	1	True				
ANR	11722	ParameterType	struct udscs_message_header *		11297	0					
ANR	11723	Identifier	header		11297	1					
ANR	11724	Parameter	uint8_t * data	157:41:4667:4679	11297	2	True				
ANR	11725	ParameterType	uint8_t *		11297	0					
ANR	11726	Identifier	data		11297	1					
ANR	11727	CFGEntryNode	ENTRY		11297		True				
ANR	11728	CFGExitNode	EXIT		11297		True				
ANR	11729	Symbol	agent		11297						
ANR	11730	Symbol	LOG_INFO		11297						
ANR	11731	Symbol	data		11297						
ANR	11732	Symbol	* connp		11297						
ANR	11733	Symbol	avs -> is_playback		11297						
ANR	11734	Symbol	avs -> mute		11297						
ANR	11735	Symbol	avs -> nchannels		11297						
ANR	11736	Symbol	agent -> loop		11297						
ANR	11737	Symbol	avs -> volume		11297						
ANR	11738	Symbol	( ( VDAgentFileXferStatusMessage * ) data ) -> id		11297						
ANR	11739	Symbol	LOG_ERR		11297						
ANR	11740	Symbol	avs		11297						
ANR	11741	Symbol	strcmp		11297						
ANR	11742	Symbol	( ( VDAgentFileXferDataMessage * ) data ) -> id		11297						
ANR	11743	Symbol	connp		11297						
ANR	11744	Symbol	NULL		11297						
ANR	11745	Symbol	debug		11297						
ANR	11746	Symbol	* agent		11297						
ANR	11747	Symbol	header -> arg2		11297						
ANR	11748	Symbol	header -> arg1		11297						
ANR	11749	Symbol	agent -> xfers		11297						
ANR	11750	Symbol	( ( VDAgentFileXferStartMessage * ) data ) -> id		11297						
ANR	11751	Symbol	agent -> x11		11297						
ANR	11752	Symbol	* header		11297						
ANR	11753	Symbol	version_mismatch		11297						
ANR	11754	Symbol	* avs		11297						
ANR	11755	Symbol	VERSION		11297						
ANR	11756	Symbol	header		11297						
ANR	11757	Symbol	header -> size		11297						
ANR	11758	Symbol	LOG_DEBUG		11297						
ANR	11759	Symbol	vdagent_finalize_file_xfer		11297						
ANR	11760	Symbol	udscs_get_user_data		11297						
ANR	11761	Symbol	* data		11297						
ANR	11762	Symbol	header -> type		11297						
ANR	11763	Function	daemon_disconnect_cb	241:0:7821:8019							
ANR	11764	FunctionDef	daemon_disconnect_cb (struct udscs_connection * conn)		11763	0					
ANR	11765	CompoundStatement		242:0:7885:8019	11763	0					
ANR	11766	IdentifierDeclStatement	VDAgent * agent = udscs_get_user_data ( conn ) ;	243:4:7891:7933	11763	0	True				
ANR	11767	IdentifierDecl	* agent = udscs_get_user_data ( conn )		11763	0					
ANR	11768	IdentifierDeclType	VDAgent *		11763	0					
ANR	11769	Identifier	agent		11763	1					
ANR	11770	AssignmentExpression	* agent = udscs_get_user_data ( conn )		11763	2		=			
ANR	11771	Identifier	agent		11763	0					
ANR	11772	CallExpression	udscs_get_user_data ( conn )		11763	1					
ANR	11773	Callee	udscs_get_user_data		11763	0					
ANR	11774	Identifier	udscs_get_user_data		11763	0					
ANR	11775	ArgumentList	conn		11763	1					
ANR	11776	Argument	conn		11763	0					
ANR	11777	Identifier	conn		11763	0					
ANR	11778	ExpressionStatement	agent -> conn = NULL	244:4:7939:7957	11763	1	True				
ANR	11779	AssignmentExpression	agent -> conn = NULL		11763	0		=			
ANR	11780	PtrMemberAccess	agent -> conn		11763	0					
ANR	11781	Identifier	agent		11763	0					
ANR	11782	Identifier	conn		11763	1					
ANR	11783	Identifier	NULL		11763	1					
ANR	11784	IfStatement	if ( agent -> loop )		11763	2					
ANR	11785	Condition	agent -> loop	245:8:7967:7977	11763	0	True				
ANR	11786	PtrMemberAccess	agent -> loop		11763	0					
ANR	11787	Identifier	agent		11763	0					
ANR	11788	Identifier	loop		11763	1					
ANR	11789	ExpressionStatement	g_main_loop_quit ( agent -> loop )	246:8:7988:8017	11763	1	True				
ANR	11790	CallExpression	g_main_loop_quit ( agent -> loop )		11763	0					
ANR	11791	Callee	g_main_loop_quit		11763	0					
ANR	11792	Identifier	g_main_loop_quit		11763	0					
ANR	11793	ArgumentList	agent -> loop		11763	1					
ANR	11794	Argument	agent -> loop		11763	0					
ANR	11795	PtrMemberAccess	agent -> loop		11763	0					
ANR	11796	Identifier	agent		11763	0					
ANR	11797	Identifier	loop		11763	1					
ANR	11798	ReturnType	static void		11763	1					
ANR	11799	Identifier	daemon_disconnect_cb		11763	2					
ANR	11800	ParameterList	struct udscs_connection * conn		11763	3					
ANR	11801	Parameter	struct udscs_connection * conn	241:33:7854:7882	11763	0	True				
ANR	11802	ParameterType	struct udscs_connection *		11763	0					
ANR	11803	Identifier	conn		11763	1					
ANR	11804	CFGEntryNode	ENTRY		11763		True				
ANR	11805	CFGExitNode	EXIT		11763		True				
ANR	11806	Symbol	conn		11763						
ANR	11807	Symbol	agent		11763						
ANR	11808	Symbol	agent -> loop		11763						
ANR	11809	Symbol	NULL		11763						
ANR	11810	Symbol	agent -> conn		11763						
ANR	11811	Symbol	* agent		11763						
ANR	11812	Symbol	udscs_get_user_data		11763						
ANR	11813	Function	wait_and_exit	254:0:8299:8520							
ANR	11814	FunctionDef	wait_and_exit (int s)		11813	0					
ANR	11815	CompoundStatement		255:0:8332:8520	11813	0					
ANR	11816	IdentifierDeclStatement	char buf [ 4 ] ;	256:4:8338:8349	11813	0	True				
ANR	11817	IdentifierDecl	buf [ 4 ]		11813	0					
ANR	11818	IdentifierDeclType	char [ 4 ]		11813	0					
ANR	11819	Identifier	buf		11813	1					
ANR	11820	PrimaryExpression	4		11813	2					
ANR	11821	IdentifierDeclStatement	struct pollfd p ;	257:4:8355:8370	11813	1	True				
ANR	11822	IdentifierDecl	p		11813	0					
ANR	11823	IdentifierDeclType	struct pollfd		11813	0					
ANR	11824	Identifier	p		11813	1					
ANR	11825	ExpressionStatement	p . fd = s	258:4:8376:8384	11813	2	True				
ANR	11826	AssignmentExpression	p . fd = s		11813	0		=			
ANR	11827	MemberAccess	p . fd		11813	0					
ANR	11828	Identifier	p		11813	0					
ANR	11829	Identifier	fd		11813	1					
ANR	11830	Identifier	s		11813	1					
ANR	11831	ExpressionStatement	p . events = POLLIN	259:4:8390:8407	11813	3	True				
ANR	11832	AssignmentExpression	p . events = POLLIN		11813	0		=			
ANR	11833	MemberAccess	p . events		11813	0					
ANR	11834	Identifier	p		11813	0					
ANR	11835	Identifier	events		11813	1					
ANR	11836	Identifier	POLLIN		11813	1					
ANR	11837	IfStatement	"if ( poll ( & p , 1 , 10000 ) > 0 )"		11813	4					
ANR	11838	Condition	"poll ( & p , 1 , 10000 ) > 0"	261:8:8418:8439	11813	0	True				
ANR	11839	RelationalExpression	"poll ( & p , 1 , 10000 ) > 0"		11813	0		>			
ANR	11840	CallExpression	"poll ( & p , 1 , 10000 )"		11813	0					
ANR	11841	Callee	poll		11813	0					
ANR	11842	Identifier	poll		11813	0					
ANR	11843	ArgumentList	& p		11813	1					
ANR	11844	Argument	& p		11813	0					
ANR	11845	UnaryOperationExpression	& p		11813	0					
ANR	11846	UnaryOperator	&		11813	0					
ANR	11847	Identifier	p		11813	1					
ANR	11848	Argument	1		11813	1					
ANR	11849	PrimaryExpression	1		11813	0					
ANR	11850	Argument	10000		11813	2					
ANR	11851	PrimaryExpression	10000		11813	0					
ANR	11852	PrimaryExpression	0		11813	1					
ANR	11853	IfStatement	"if ( read ( s , buf , sizeof ( buf ) ) > 0 )"		11813	1					
ANR	11854	Condition	"read ( s , buf , sizeof ( buf ) ) > 0"	262:12:8454:8482	11813	0	True				
ANR	11855	RelationalExpression	"read ( s , buf , sizeof ( buf ) ) > 0"		11813	0		>			
ANR	11856	CallExpression	"read ( s , buf , sizeof ( buf ) )"		11813	0					
ANR	11857	Callee	read		11813	0					
ANR	11858	Identifier	read		11813	0					
ANR	11859	ArgumentList	s		11813	1					
ANR	11860	Argument	s		11813	0					
ANR	11861	Identifier	s		11813	0					
ANR	11862	Argument	buf		11813	1					
ANR	11863	Identifier	buf		11813	0					
ANR	11864	Argument	sizeof ( buf )		11813	2					
ANR	11865	SizeofExpression	sizeof ( buf )		11813	0					
ANR	11866	Sizeof	sizeof		11813	0					
ANR	11867	SizeofOperand	buf		11813	1					
ANR	11868	PrimaryExpression	0		11813	1					
ANR	11869	ExpressionStatement	exit ( 0 )	263:12:8497:8504	11813	1	True				
ANR	11870	CallExpression	exit ( 0 )		11813	0					
ANR	11871	Callee	exit		11813	0					
ANR	11872	Identifier	exit		11813	0					
ANR	11873	ArgumentList	0		11813	1					
ANR	11874	Argument	0		11813	0					
ANR	11875	PrimaryExpression	0		11813	0					
ANR	11876	ExpressionStatement	exit ( 1 )	265:4:8511:8518	11813	5	True				
ANR	11877	CallExpression	exit ( 1 )		11813	0					
ANR	11878	Callee	exit		11813	0					
ANR	11879	Identifier	exit		11813	0					
ANR	11880	ArgumentList	1		11813	1					
ANR	11881	Argument	1		11813	0					
ANR	11882	PrimaryExpression	1		11813	0					
ANR	11883	ReturnType	static void		11813	1					
ANR	11884	Identifier	wait_and_exit		11813	2					
ANR	11885	ParameterList	int s		11813	3					
ANR	11886	Parameter	int s	254:26:8325:8329	11813	0	True				
ANR	11887	ParameterType	int		11813	0					
ANR	11888	Identifier	s		11813	1					
ANR	11889	CFGEntryNode	ENTRY		11813		True				
ANR	11890	CFGExitNode	EXIT		11813		True				
ANR	11891	Symbol	p		11813						
ANR	11892	Symbol	buf		11813						
ANR	11893	Symbol	s		11813						
ANR	11894	Symbol	read		11813						
ANR	11895	Symbol	POLLIN		11813						
ANR	11896	Symbol	& p		11813						
ANR	11897	Symbol	p . fd		11813						
ANR	11898	Symbol	poll		11813						
ANR	11899	Symbol	p . events		11813						
ANR	11900	Function	daemonize	268:0:8523:9114							
ANR	11901	FunctionDef	daemonize ()		11900	0					
ANR	11902	CompoundStatement		269:0:8550:9114	11900	0					
ANR	11903	IdentifierDeclStatement	int x ;	270:4:8556:8561	11900	0	True				
ANR	11904	IdentifierDecl	x		11900	0					
ANR	11905	IdentifierDeclType	int		11900	0					
ANR	11906	Identifier	x		11900	1					
ANR	11907	IdentifierDeclStatement	int fd [ 2 ] ;	271:4:8567:8576	11900	1	True				
ANR	11908	IdentifierDecl	fd [ 2 ]		11900	0					
ANR	11909	IdentifierDeclType	int [ 2 ]		11900	0					
ANR	11910	Identifier	fd		11900	1					
ANR	11911	PrimaryExpression	2		11900	2					
ANR	11912	IfStatement	"if ( socketpair ( PF_LOCAL , SOCK_STREAM , 0 , fd ) )"		11900	2					
ANR	11913	Condition	"socketpair ( PF_LOCAL , SOCK_STREAM , 0 , fd )"	273:8:8587:8626	11900	0	True				
ANR	11914	CallExpression	"socketpair ( PF_LOCAL , SOCK_STREAM , 0 , fd )"		11900	0					
ANR	11915	Callee	socketpair		11900	0					
ANR	11916	Identifier	socketpair		11900	0					
ANR	11917	ArgumentList	PF_LOCAL		11900	1					
ANR	11918	Argument	PF_LOCAL		11900	0					
ANR	11919	Identifier	PF_LOCAL		11900	0					
ANR	11920	Argument	SOCK_STREAM		11900	1					
ANR	11921	Identifier	SOCK_STREAM		11900	0					
ANR	11922	Argument	0		11900	2					
ANR	11923	PrimaryExpression	0		11900	0					
ANR	11924	Argument	fd		11900	3					
ANR	11925	Identifier	fd		11900	0					
ANR	11926	CompoundStatement		5:50:78:78	11900	1					
ANR	11927	ExpressionStatement	"syslog ( LOG_ERR , ""socketpair : %s"" , strerror ( errno ) )"	274:8:8639:8690	11900	0	True				
ANR	11928	CallExpression	"syslog ( LOG_ERR , ""socketpair : %s"" , strerror ( errno ) )"		11900	0					
ANR	11929	Callee	syslog		11900	0					
ANR	11930	Identifier	syslog		11900	0					
ANR	11931	ArgumentList	LOG_ERR		11900	1					
ANR	11932	Argument	LOG_ERR		11900	0					
ANR	11933	Identifier	LOG_ERR		11900	0					
ANR	11934	Argument	"""socketpair : %s"""		11900	1					
ANR	11935	PrimaryExpression	"""socketpair : %s"""		11900	0					
ANR	11936	Argument	strerror ( errno )		11900	2					
ANR	11937	CallExpression	strerror ( errno )		11900	0					
ANR	11938	Callee	strerror		11900	0					
ANR	11939	Identifier	strerror		11900	0					
ANR	11940	ArgumentList	errno		11900	1					
ANR	11941	Argument	errno		11900	0					
ANR	11942	Identifier	errno		11900	0					
ANR	11943	ExpressionStatement	exit ( 1 )	275:8:8700:8707	11900	1	True				
ANR	11944	CallExpression	exit ( 1 )		11900	0					
ANR	11945	Callee	exit		11900	0					
ANR	11946	Identifier	exit		11900	0					
ANR	11947	ArgumentList	1		11900	1					
ANR	11948	Argument	1		11900	0					
ANR	11949	PrimaryExpression	1		11900	0					
ANR	11950	SwitchStatement	switch ( fork ( ) )		11900	3					
ANR	11951	Condition	fork ( )	279:12:8759:8764	11900	0	True				
ANR	11952	CallExpression	fork ( )		11900	0					
ANR	11953	Callee	fork		11900	0					
ANR	11954	Identifier	fork		11900	0					
ANR	11955	ArgumentList			11900	1					
ANR	11956	CompoundStatement		11:20:216:216	11900	1					
ANR	11957	Label	case 0 :	280:4:8773:8779	11900	0	True				
ANR	11958	ExpressionStatement	close ( 0 )	281:8:8789:8797	11900	1	True				
ANR	11959	CallExpression	close ( 0 )		11900	0					
ANR	11960	Callee	close		11900	0					
ANR	11961	Identifier	close		11900	0					
ANR	11962	ArgumentList	0		11900	1					
ANR	11963	Argument	0		11900	0					
ANR	11964	PrimaryExpression	0		11900	0					
ANR	11965	ExpressionStatement	close ( 1 )	281:18:8799:8807	11900	2	True				
ANR	11966	CallExpression	close ( 1 )		11900	0					
ANR	11967	Callee	close		11900	0					
ANR	11968	Identifier	close		11900	0					
ANR	11969	ArgumentList	1		11900	1					
ANR	11970	Argument	1		11900	0					
ANR	11971	PrimaryExpression	1		11900	0					
ANR	11972	ExpressionStatement	close ( 2 )	281:28:8809:8817	11900	3	True				
ANR	11973	CallExpression	close ( 2 )		11900	0					
ANR	11974	Callee	close		11900	0					
ANR	11975	Identifier	close		11900	0					
ANR	11976	ArgumentList	2		11900	1					
ANR	11977	Argument	2		11900	0					
ANR	11978	PrimaryExpression	2		11900	0					
ANR	11979	ExpressionStatement	setsid ( )	282:8:8827:8835	11900	4	True				
ANR	11980	CallExpression	setsid ( )		11900	0					
ANR	11981	Callee	setsid		11900	0					
ANR	11982	Identifier	setsid		11900	0					
ANR	11983	ArgumentList			11900	1					
ANR	11984	ExpressionStatement	"x = open ( ""/dev/null"" , O_RDWR )"	283:8:8845:8874	11900	5	True				
ANR	11985	AssignmentExpression	"x = open ( ""/dev/null"" , O_RDWR )"		11900	0		=			
ANR	11986	Identifier	x		11900	0					
ANR	11987	CallExpression	"open ( ""/dev/null"" , O_RDWR )"		11900	1					
ANR	11988	Callee	open		11900	0					
ANR	11989	Identifier	open		11900	0					
ANR	11990	ArgumentList	"""/dev/null"""		11900	1					
ANR	11991	Argument	"""/dev/null"""		11900	0					
ANR	11992	PrimaryExpression	"""/dev/null"""		11900	0					
ANR	11993	Argument	O_RDWR		11900	1					
ANR	11994	Identifier	O_RDWR		11900	0					
ANR	11995	ExpressionStatement	x = dup ( x )	283:39:8876:8886	11900	6	True				
ANR	11996	AssignmentExpression	x = dup ( x )		11900	0		=			
ANR	11997	Identifier	x		11900	0					
ANR	11998	CallExpression	dup ( x )		11900	1					
ANR	11999	Callee	dup		11900	0					
ANR	12000	Identifier	dup		11900	0					
ANR	12001	ArgumentList	x		11900	1					
ANR	12002	Argument	x		11900	0					
ANR	12003	Identifier	x		11900	0					
ANR	12004	ExpressionStatement	x = dup ( x )	283:51:8888:8898	11900	7	True				
ANR	12005	AssignmentExpression	x = dup ( x )		11900	0		=			
ANR	12006	Identifier	x		11900	0					
ANR	12007	CallExpression	dup ( x )		11900	1					
ANR	12008	Callee	dup		11900	0					
ANR	12009	Identifier	dup		11900	0					
ANR	12010	ArgumentList	x		11900	1					
ANR	12011	Argument	x		11900	0					
ANR	12012	Identifier	x		11900	0					
ANR	12013	ExpressionStatement	close ( fd [ 0 ] )	284:8:8908:8920	11900	8	True				
ANR	12014	CallExpression	close ( fd [ 0 ] )		11900	0					
ANR	12015	Callee	close		11900	0					
ANR	12016	Identifier	close		11900	0					
ANR	12017	ArgumentList	fd [ 0 ]		11900	1					
ANR	12018	Argument	fd [ 0 ]		11900	0					
ANR	12019	ArrayIndexing	fd [ 0 ]		11900	0					
ANR	12020	Identifier	fd		11900	0					
ANR	12021	PrimaryExpression	0		11900	1					
ANR	12022	ReturnStatement	return fd [ 1 ] ;	285:8:8930:8942	11900	9	True				
ANR	12023	ArrayIndexing	fd [ 1 ]		11900	0					
ANR	12024	Identifier	fd		11900	0					
ANR	12025	PrimaryExpression	1		11900	1					
ANR	12026	Statement	case	286:4:8948:8951	11900	10	True				
ANR	12027	Statement	-	286:9:8953:8953	11900	11	True				
ANR	12028	Label	1 :	286:10:8954:8955	11900	12	True				
ANR	12029	ExpressionStatement	"syslog ( LOG_ERR , ""fork: %s"" , strerror ( errno ) )"	287:8:8965:9009	11900	13	True				
ANR	12030	CallExpression	"syslog ( LOG_ERR , ""fork: %s"" , strerror ( errno ) )"		11900	0					
ANR	12031	Callee	syslog		11900	0					
ANR	12032	Identifier	syslog		11900	0					
ANR	12033	ArgumentList	LOG_ERR		11900	1					
ANR	12034	Argument	LOG_ERR		11900	0					
ANR	12035	Identifier	LOG_ERR		11900	0					
ANR	12036	Argument	"""fork: %s"""		11900	1					
ANR	12037	PrimaryExpression	"""fork: %s"""		11900	0					
ANR	12038	Argument	strerror ( errno )		11900	2					
ANR	12039	CallExpression	strerror ( errno )		11900	0					
ANR	12040	Callee	strerror		11900	0					
ANR	12041	Identifier	strerror		11900	0					
ANR	12042	ArgumentList	errno		11900	1					
ANR	12043	Argument	errno		11900	0					
ANR	12044	Identifier	errno		11900	0					
ANR	12045	ExpressionStatement	exit ( 1 )	288:8:9019:9026	11900	14	True				
ANR	12046	CallExpression	exit ( 1 )		11900	0					
ANR	12047	Callee	exit		11900	0					
ANR	12048	Identifier	exit		11900	0					
ANR	12049	ArgumentList	1		11900	1					
ANR	12050	Argument	1		11900	0					
ANR	12051	PrimaryExpression	1		11900	0					
ANR	12052	Label	default :	289:4:9032:9039	11900	15	True				
ANR	12053	Identifier	default		11900	0					
ANR	12054	ExpressionStatement	close ( fd [ 1 ] )	290:8:9049:9061	11900	16	True				
ANR	12055	CallExpression	close ( fd [ 1 ] )		11900	0					
ANR	12056	Callee	close		11900	0					
ANR	12057	Identifier	close		11900	0					
ANR	12058	ArgumentList	fd [ 1 ]		11900	1					
ANR	12059	Argument	fd [ 1 ]		11900	0					
ANR	12060	ArrayIndexing	fd [ 1 ]		11900	0					
ANR	12061	Identifier	fd		11900	0					
ANR	12062	PrimaryExpression	1		11900	1					
ANR	12063	ExpressionStatement	wait_and_exit ( fd [ 0 ] )	291:8:9071:9091	11900	17	True				
ANR	12064	CallExpression	wait_and_exit ( fd [ 0 ] )		11900	0					
ANR	12065	Callee	wait_and_exit		11900	0					
ANR	12066	Identifier	wait_and_exit		11900	0					
ANR	12067	ArgumentList	fd [ 0 ]		11900	1					
ANR	12068	Argument	fd [ 0 ]		11900	0					
ANR	12069	ArrayIndexing	fd [ 0 ]		11900	0					
ANR	12070	Identifier	fd		11900	0					
ANR	12071	PrimaryExpression	0		11900	1					
ANR	12072	ReturnStatement	return 0 ;	294:4:9104:9112	11900	4	True				
ANR	12073	PrimaryExpression	0		11900	0					
ANR	12074	ReturnType	static int		11900	1					
ANR	12075	Identifier	daemonize		11900	2					
ANR	12076	ParameterList			11900	3					
ANR	12077	CFGEntryNode	ENTRY		11900		True				
ANR	12078	CFGExitNode	EXIT		11900		True				
ANR	12079	Symbol	PF_LOCAL		11900						
ANR	12080	Symbol	errno		11900						
ANR	12081	Symbol	socketpair		11900						
ANR	12082	Symbol	* fd		11900						
ANR	12083	Symbol	strerror		11900						
ANR	12084	Symbol	SOCK_STREAM		11900						
ANR	12085	Symbol	fork		11900						
ANR	12086	Symbol	O_RDWR		11900						
ANR	12087	Symbol	LOG_ERR		11900						
ANR	12088	Symbol	x		11900						
ANR	12089	Symbol	fd		11900						
ANR	12090	Symbol	open		11900						
ANR	12091	Symbol	dup		11900						
ANR	12092	Function	file_test	297:0:9117:9215							
ANR	12093	FunctionDef	file_test (const char * path)		12092	0					
ANR	12094	CompoundStatement		298:0:9156:9215	12092	0					
ANR	12095	IdentifierDeclStatement	struct stat buffer ;	299:4:9162:9180	12092	0	True				
ANR	12096	IdentifierDecl	buffer		12092	0					
ANR	12097	IdentifierDeclType	struct stat		12092	0					
ANR	12098	Identifier	buffer		12092	1					
ANR	12099	ReturnStatement	"return stat ( path , & buffer ) ;"	301:4:9187:9213	12092	1	True				
ANR	12100	CallExpression	"stat ( path , & buffer )"		12092	0					
ANR	12101	Callee	stat		12092	0					
ANR	12102	Identifier	stat		12092	0					
ANR	12103	ArgumentList	path		12092	1					
ANR	12104	Argument	path		12092	0					
ANR	12105	Identifier	path		12092	0					
ANR	12106	Argument	& buffer		12092	1					
ANR	12107	UnaryOperationExpression	& buffer		12092	0					
ANR	12108	UnaryOperator	&		12092	0					
ANR	12109	Identifier	buffer		12092	1					
ANR	12110	ReturnType	static int		12092	1					
ANR	12111	Identifier	file_test		12092	2					
ANR	12112	ParameterList	const char * path		12092	3					
ANR	12113	Parameter	const char * path	297:21:9138:9153	12092	0	True				
ANR	12114	ParameterType	const char *		12092	0					
ANR	12115	Identifier	path		12092	1					
ANR	12116	CFGEntryNode	ENTRY		12092		True				
ANR	12117	CFGExitNode	EXIT		12092		True				
ANR	12118	Symbol	path		12092						
ANR	12119	Symbol	stat		12092						
ANR	12120	Symbol	& buffer		12092						
ANR	12121	Symbol	buffer		12092						
ANR	12122	Function	x11_io_channel_cb	304:0:9218:9476							
ANR	12123	FunctionDef	"x11_io_channel_cb (GIOChannel * source , GIOCondition condition , gpointer data)"		12122	0					
ANR	12124	CompoundStatement		307:0:9379:9476	12122	0					
ANR	12125	IdentifierDeclStatement	VDAgent * agent = data ;	308:4:9385:9406	12122	0	True				
ANR	12126	IdentifierDecl	* agent = data		12122	0					
ANR	12127	IdentifierDeclType	VDAgent *		12122	0					
ANR	12128	Identifier	agent		12122	1					
ANR	12129	AssignmentExpression	* agent = data		12122	2		=			
ANR	12130	Identifier	data		12122	0					
ANR	12131	Identifier	data		12122	1					
ANR	12132	ExpressionStatement	vdagent_x11_do_read ( agent -> x11 )	309:4:9412:9443	12122	1	True				
ANR	12133	CallExpression	vdagent_x11_do_read ( agent -> x11 )		12122	0					
ANR	12134	Callee	vdagent_x11_do_read		12122	0					
ANR	12135	Identifier	vdagent_x11_do_read		12122	0					
ANR	12136	ArgumentList	agent -> x11		12122	1					
ANR	12137	Argument	agent -> x11		12122	0					
ANR	12138	PtrMemberAccess	agent -> x11		12122	0					
ANR	12139	Identifier	agent		12122	0					
ANR	12140	Identifier	x11		12122	1					
ANR	12141	ReturnStatement	return G_SOURCE_CONTINUE ;	311:4:9450:9474	12122	2	True				
ANR	12142	Identifier	G_SOURCE_CONTINUE		12122	0					
ANR	12143	ReturnType	static gboolean		12122	1					
ANR	12144	Identifier	x11_io_channel_cb		12122	2					
ANR	12145	ParameterList	"GIOChannel * source , GIOCondition condition , gpointer data"		12122	3					
ANR	12146	Parameter	GIOChannel * source	304:34:9252:9269	12122	0	True				
ANR	12147	ParameterType	GIOChannel *		12122	0					
ANR	12148	Identifier	source		12122	1					
ANR	12149	Parameter	GIOCondition condition	305:34:9306:9327	12122	1	True				
ANR	12150	ParameterType	GIOCondition		12122	0					
ANR	12151	Identifier	condition		12122	1					
ANR	12152	Parameter	gpointer data	306:34:9364:9376	12122	2	True				
ANR	12153	ParameterType	gpointer		12122	0					
ANR	12154	Identifier	data		12122	1					
ANR	12155	CFGEntryNode	ENTRY		12122		True				
ANR	12156	CFGExitNode	EXIT		12122		True				
ANR	12157	Symbol	condition		12122						
ANR	12158	Symbol	agent		12122						
ANR	12159	Symbol	data		12122						
ANR	12160	Symbol	* agent		12122						
ANR	12161	Symbol	source		12122						
ANR	12162	Symbol	agent -> x11		12122						
ANR	12163	Symbol	G_SOURCE_CONTINUE		12122						
ANR	12164	Function	vdagent_signal_handler	314:0:9479:9645							
ANR	12165	FunctionDef	vdagent_signal_handler (gpointer user_data)		12164	0					
ANR	12166	CompoundStatement		315:0:9531:9645	12164	0					
ANR	12167	IdentifierDeclStatement	VDAgent * agent = user_data ;	316:4:9537:9563	12164	0	True				
ANR	12168	IdentifierDecl	* agent = user_data		12164	0					
ANR	12169	IdentifierDeclType	VDAgent *		12164	0					
ANR	12170	Identifier	agent		12164	1					
ANR	12171	AssignmentExpression	* agent = user_data		12164	2		=			
ANR	12172	Identifier	user_data		12164	0					
ANR	12173	Identifier	user_data		12164	1					
ANR	12174	ExpressionStatement	quit = TRUE	317:4:9569:9580	12164	1	True				
ANR	12175	AssignmentExpression	quit = TRUE		12164	0		=			
ANR	12176	Identifier	quit		12164	0					
ANR	12177	Identifier	TRUE		12164	1					
ANR	12178	ExpressionStatement	g_main_loop_quit ( agent -> loop )	318:4:9586:9615	12164	2	True				
ANR	12179	CallExpression	g_main_loop_quit ( agent -> loop )		12164	0					
ANR	12180	Callee	g_main_loop_quit		12164	0					
ANR	12181	Identifier	g_main_loop_quit		12164	0					
ANR	12182	ArgumentList	agent -> loop		12164	1					
ANR	12183	Argument	agent -> loop		12164	0					
ANR	12184	PtrMemberAccess	agent -> loop		12164	0					
ANR	12185	Identifier	agent		12164	0					
ANR	12186	Identifier	loop		12164	1					
ANR	12187	ReturnStatement	return G_SOURCE_REMOVE ;	319:4:9621:9643	12164	3	True				
ANR	12188	Identifier	G_SOURCE_REMOVE		12164	0					
ANR	12189	ReturnType	gboolean		12164	1					
ANR	12190	Identifier	vdagent_signal_handler		12164	2					
ANR	12191	ParameterList	gpointer user_data		12164	3					
ANR	12192	Parameter	gpointer user_data	314:32:9511:9528	12164	0	True				
ANR	12193	ParameterType	gpointer		12164	0					
ANR	12194	Identifier	user_data		12164	1					
ANR	12195	CFGEntryNode	ENTRY		12164		True				
ANR	12196	CFGExitNode	EXIT		12164		True				
ANR	12197	Symbol	agent		12164						
ANR	12198	Symbol	agent -> loop		12164						
ANR	12199	Symbol	G_SOURCE_REMOVE		12164						
ANR	12200	Symbol	* agent		12164						
ANR	12201	Symbol	TRUE		12164						
ANR	12202	Symbol	quit		12164						
ANR	12203	Symbol	user_data		12164						
ANR	12204	Function	vdagent_new	322:0:9648:9981							
ANR	12205	FunctionDef	vdagent_new ()		12204	0					
ANR	12206	CompoundStatement		323:0:9682:9981	12204	0					
ANR	12207	IdentifierDeclStatement	"VDAgent * agent = g_new0 ( VDAgent , 1 ) ;"	324:4:9688:9723	12204	0	True				
ANR	12208	IdentifierDecl	"* agent = g_new0 ( VDAgent , 1 )"		12204	0					
ANR	12209	IdentifierDeclType	VDAgent *		12204	0					
ANR	12210	Identifier	agent		12204	1					
ANR	12211	AssignmentExpression	"* agent = g_new0 ( VDAgent , 1 )"		12204	2		=			
ANR	12212	Identifier	agent		12204	0					
ANR	12213	CallExpression	"g_new0 ( VDAgent , 1 )"		12204	1					
ANR	12214	Callee	g_new0		12204	0					
ANR	12215	Identifier	g_new0		12204	0					
ANR	12216	ArgumentList	VDAgent		12204	1					
ANR	12217	Argument	VDAgent		12204	0					
ANR	12218	Identifier	VDAgent		12204	0					
ANR	12219	Argument	1		12204	1					
ANR	12220	PrimaryExpression	1		12204	0					
ANR	12221	ExpressionStatement	"agent -> loop = g_main_loop_new ( NULL , FALSE )"	326:4:9730:9772	12204	1	True				
ANR	12222	AssignmentExpression	"agent -> loop = g_main_loop_new ( NULL , FALSE )"		12204	0		=			
ANR	12223	PtrMemberAccess	agent -> loop		12204	0					
ANR	12224	Identifier	agent		12204	0					
ANR	12225	Identifier	loop		12204	1					
ANR	12226	CallExpression	"g_main_loop_new ( NULL , FALSE )"		12204	1					
ANR	12227	Callee	g_main_loop_new		12204	0					
ANR	12228	Identifier	g_main_loop_new		12204	0					
ANR	12229	ArgumentList	NULL		12204	1					
ANR	12230	Argument	NULL		12204	0					
ANR	12231	Identifier	NULL		12204	0					
ANR	12232	Argument	FALSE		12204	1					
ANR	12233	Identifier	FALSE		12204	0					
ANR	12234	ExpressionStatement	"g_unix_signal_add ( SIGINT , vdagent_signal_handler , agent )"	328:4:9779:9835	12204	2	True				
ANR	12235	CallExpression	"g_unix_signal_add ( SIGINT , vdagent_signal_handler , agent )"		12204	0					
ANR	12236	Callee	g_unix_signal_add		12204	0					
ANR	12237	Identifier	g_unix_signal_add		12204	0					
ANR	12238	ArgumentList	SIGINT		12204	1					
ANR	12239	Argument	SIGINT		12204	0					
ANR	12240	Identifier	SIGINT		12204	0					
ANR	12241	Argument	vdagent_signal_handler		12204	1					
ANR	12242	Identifier	vdagent_signal_handler		12204	0					
ANR	12243	Argument	agent		12204	2					
ANR	12244	Identifier	agent		12204	0					
ANR	12245	ExpressionStatement	"g_unix_signal_add ( SIGHUP , vdagent_signal_handler , agent )"	329:4:9841:9897	12204	3	True				
ANR	12246	CallExpression	"g_unix_signal_add ( SIGHUP , vdagent_signal_handler , agent )"		12204	0					
ANR	12247	Callee	g_unix_signal_add		12204	0					
ANR	12248	Identifier	g_unix_signal_add		12204	0					
ANR	12249	ArgumentList	SIGHUP		12204	1					
ANR	12250	Argument	SIGHUP		12204	0					
ANR	12251	Identifier	SIGHUP		12204	0					
ANR	12252	Argument	vdagent_signal_handler		12204	1					
ANR	12253	Identifier	vdagent_signal_handler		12204	0					
ANR	12254	Argument	agent		12204	2					
ANR	12255	Identifier	agent		12204	0					
ANR	12256	ExpressionStatement	"g_unix_signal_add ( SIGTERM , vdagent_signal_handler , agent )"	330:4:9903:9960	12204	4	True				
ANR	12257	CallExpression	"g_unix_signal_add ( SIGTERM , vdagent_signal_handler , agent )"		12204	0					
ANR	12258	Callee	g_unix_signal_add		12204	0					
ANR	12259	Identifier	g_unix_signal_add		12204	0					
ANR	12260	ArgumentList	SIGTERM		12204	1					
ANR	12261	Argument	SIGTERM		12204	0					
ANR	12262	Identifier	SIGTERM		12204	0					
ANR	12263	Argument	vdagent_signal_handler		12204	1					
ANR	12264	Identifier	vdagent_signal_handler		12204	0					
ANR	12265	Argument	agent		12204	2					
ANR	12266	Identifier	agent		12204	0					
ANR	12267	ReturnStatement	return agent ;	332:4:9967:9979	12204	5	True				
ANR	12268	Identifier	agent		12204	0					
ANR	12269	ReturnType	static VDAgent *		12204	1					
ANR	12270	Identifier	vdagent_new		12204	2					
ANR	12271	ParameterList			12204	3					
ANR	12272	CFGEntryNode	ENTRY		12204		True				
ANR	12273	CFGExitNode	EXIT		12204		True				
ANR	12274	Symbol	g_main_loop_new		12204						
ANR	12275	Symbol	VDAgent		12204						
ANR	12276	Symbol	agent		12204						
ANR	12277	Symbol	agent -> loop		12204						
ANR	12278	Symbol	NULL		12204						
ANR	12279	Symbol	vdagent_signal_handler		12204						
ANR	12280	Symbol	SIGINT		12204						
ANR	12281	Symbol	* agent		12204						
ANR	12282	Symbol	g_new0		12204						
ANR	12283	Symbol	FALSE		12204						
ANR	12284	Symbol	SIGHUP		12204						
ANR	12285	Symbol	SIGTERM		12204						
ANR	12286	Function	vdagent_destroy	335:0:9984:10374							
ANR	12287	FunctionDef	vdagent_destroy (VDAgent * agent)		12286	0					
ANR	12288	CompoundStatement		336:0:10028:10374	12286	0					
ANR	12289	ExpressionStatement	vdagent_finalize_file_xfer ( agent )	337:4:10034:10067	12286	0	True				
ANR	12290	CallExpression	vdagent_finalize_file_xfer ( agent )		12286	0					
ANR	12291	Callee	vdagent_finalize_file_xfer		12286	0					
ANR	12292	Identifier	vdagent_finalize_file_xfer		12286	0					
ANR	12293	ArgumentList	agent		12286	1					
ANR	12294	Argument	agent		12286	0					
ANR	12295	Identifier	agent		12286	0					
ANR	12296	ExpressionStatement	"vdagent_x11_destroy ( agent -> x11 , agent -> conn == NULL )"	338:4:10073:10125	12286	1	True				
ANR	12297	CallExpression	"vdagent_x11_destroy ( agent -> x11 , agent -> conn == NULL )"		12286	0					
ANR	12298	Callee	vdagent_x11_destroy		12286	0					
ANR	12299	Identifier	vdagent_x11_destroy		12286	0					
ANR	12300	ArgumentList	agent -> x11		12286	1					
ANR	12301	Argument	agent -> x11		12286	0					
ANR	12302	PtrMemberAccess	agent -> x11		12286	0					
ANR	12303	Identifier	agent		12286	0					
ANR	12304	Identifier	x11		12286	1					
ANR	12305	Argument	agent -> conn == NULL		12286	1					
ANR	12306	EqualityExpression	agent -> conn == NULL		12286	0		==			
ANR	12307	PtrMemberAccess	agent -> conn		12286	0					
ANR	12308	Identifier	agent		12286	0					
ANR	12309	Identifier	conn		12286	1					
ANR	12310	Identifier	NULL		12286	1					
ANR	12311	ExpressionStatement	udscs_destroy_connection ( & agent -> conn )	339:4:10131:10169	12286	2	True				
ANR	12312	CallExpression	udscs_destroy_connection ( & agent -> conn )		12286	0					
ANR	12313	Callee	udscs_destroy_connection		12286	0					
ANR	12314	Identifier	udscs_destroy_connection		12286	0					
ANR	12315	ArgumentList	& agent -> conn		12286	1					
ANR	12316	Argument	& agent -> conn		12286	0					
ANR	12317	UnaryOperationExpression	& agent -> conn		12286	0					
ANR	12318	UnaryOperator	&		12286	0					
ANR	12319	PtrMemberAccess	agent -> conn		12286	1					
ANR	12320	Identifier	agent		12286	0					
ANR	12321	Identifier	conn		12286	1					
ANR	12322	WhileStatement	while ( g_source_remove_by_user_data ( agent ) )		12286	3					
ANR	12323	Condition	g_source_remove_by_user_data ( agent )	341:11:10183:10217	12286	0	True				
ANR	12324	CallExpression	g_source_remove_by_user_data ( agent )		12286	0					
ANR	12325	Callee	g_source_remove_by_user_data		12286	0					
ANR	12326	Identifier	g_source_remove_by_user_data		12286	0					
ANR	12327	ArgumentList	agent		12286	1					
ANR	12328	Argument	agent		12286	0					
ANR	12329	Identifier	agent		12286	0					
ANR	12330	ContinueStatement	continue ;	342:8:10228:10236	12286	1	True				
ANR	12331	ExpressionStatement	"g_clear_pointer ( & agent -> x11_channel , g_io_channel_unref )"	344:4:10243:10299	12286	4	True				
ANR	12332	CallExpression	"g_clear_pointer ( & agent -> x11_channel , g_io_channel_unref )"		12286	0					
ANR	12333	Callee	g_clear_pointer		12286	0					
ANR	12334	Identifier	g_clear_pointer		12286	0					
ANR	12335	ArgumentList	& agent -> x11_channel		12286	1					
ANR	12336	Argument	& agent -> x11_channel		12286	0					
ANR	12337	UnaryOperationExpression	& agent -> x11_channel		12286	0					
ANR	12338	UnaryOperator	&		12286	0					
ANR	12339	PtrMemberAccess	agent -> x11_channel		12286	1					
ANR	12340	Identifier	agent		12286	0					
ANR	12341	Identifier	x11_channel		12286	1					
ANR	12342	Argument	g_io_channel_unref		12286	1					
ANR	12343	Identifier	g_io_channel_unref		12286	0					
ANR	12344	ExpressionStatement	"g_clear_pointer ( & agent -> loop , g_main_loop_unref )"	345:4:10305:10353	12286	5	True				
ANR	12345	CallExpression	"g_clear_pointer ( & agent -> loop , g_main_loop_unref )"		12286	0					
ANR	12346	Callee	g_clear_pointer		12286	0					
ANR	12347	Identifier	g_clear_pointer		12286	0					
ANR	12348	ArgumentList	& agent -> loop		12286	1					
ANR	12349	Argument	& agent -> loop		12286	0					
ANR	12350	UnaryOperationExpression	& agent -> loop		12286	0					
ANR	12351	UnaryOperator	&		12286	0					
ANR	12352	PtrMemberAccess	agent -> loop		12286	1					
ANR	12353	Identifier	agent		12286	0					
ANR	12354	Identifier	loop		12286	1					
ANR	12355	Argument	g_main_loop_unref		12286	1					
ANR	12356	Identifier	g_main_loop_unref		12286	0					
ANR	12357	ExpressionStatement	g_free ( agent )	346:4:10359:10372	12286	6	True				
ANR	12358	CallExpression	g_free ( agent )		12286	0					
ANR	12359	Callee	g_free		12286	0					
ANR	12360	Identifier	g_free		12286	0					
ANR	12361	ArgumentList	agent		12286	1					
ANR	12362	Argument	agent		12286	0					
ANR	12363	Identifier	agent		12286	0					
ANR	12364	ReturnType	static void		12286	1					
ANR	12365	Identifier	vdagent_destroy		12286	2					
ANR	12366	ParameterList	VDAgent * agent		12286	3					
ANR	12367	Parameter	VDAgent * agent	335:28:10012:10025	12286	0	True				
ANR	12368	ParameterType	VDAgent *		12286	0					
ANR	12369	Identifier	agent		12286	1					
ANR	12370	CFGEntryNode	ENTRY		12286		True				
ANR	12371	CFGExitNode	EXIT		12286		True				
ANR	12372	Symbol	g_io_channel_unref		12286						
ANR	12373	Symbol	agent		12286						
ANR	12374	Symbol	NULL		12286						
ANR	12375	Symbol	agent -> conn		12286						
ANR	12376	Symbol	* agent		12286						
ANR	12377	Symbol	& agent -> conn		12286						
ANR	12378	Symbol	g_main_loop_unref		12286						
ANR	12379	Symbol	g_source_remove_by_user_data		12286						
ANR	12380	Symbol	& agent -> loop		12286						
ANR	12381	Symbol	agent -> x11		12286						
ANR	12382	Symbol	& agent -> x11_channel		12286						
ANR	12383	Function	vdagent_init_async_cb	349:0:10377:11665							
ANR	12384	FunctionDef	vdagent_init_async_cb (gpointer user_data)		12383	0					
ANR	12385	CompoundStatement		350:0:10435:11665	12383	0					
ANR	12386	IdentifierDeclStatement	VDAgent * agent = user_data ;	351:4:10441:10467	12383	0	True				
ANR	12387	IdentifierDecl	* agent = user_data		12383	0					
ANR	12388	IdentifierDeclType	VDAgent *		12383	0					
ANR	12389	Identifier	agent		12383	1					
ANR	12390	AssignmentExpression	* agent = user_data		12383	2		=			
ANR	12391	Identifier	user_data		12383	0					
ANR	12392	Identifier	user_data		12383	1					
ANR	12393	ExpressionStatement	"agent -> conn = udscs_connect ( vdagentd_socket , daemon_read_complete , daemon_disconnect_cb , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"	353:4:10474:10674	12383	1	True				
ANR	12394	AssignmentExpression	"agent -> conn = udscs_connect ( vdagentd_socket , daemon_read_complete , daemon_disconnect_cb , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		12383	0		=			
ANR	12395	PtrMemberAccess	agent -> conn		12383	0					
ANR	12396	Identifier	agent		12383	0					
ANR	12397	Identifier	conn		12383	1					
ANR	12398	CallExpression	"udscs_connect ( vdagentd_socket , daemon_read_complete , daemon_disconnect_cb , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		12383	1					
ANR	12399	Callee	udscs_connect		12383	0					
ANR	12400	Identifier	udscs_connect		12383	0					
ANR	12401	ArgumentList	vdagentd_socket		12383	1					
ANR	12402	Argument	vdagentd_socket		12383	0					
ANR	12403	Identifier	vdagentd_socket		12383	0					
ANR	12404	Argument	daemon_read_complete		12383	1					
ANR	12405	Identifier	daemon_read_complete		12383	0					
ANR	12406	Argument	daemon_disconnect_cb		12383	2					
ANR	12407	Identifier	daemon_disconnect_cb		12383	0					
ANR	12408	Argument	vdagentd_messages		12383	3					
ANR	12409	Identifier	vdagentd_messages		12383	0					
ANR	12410	Argument	VDAGENTD_NO_MESSAGES		12383	4					
ANR	12411	Identifier	VDAGENTD_NO_MESSAGES		12383	0					
ANR	12412	Argument	debug		12383	5					
ANR	12413	Identifier	debug		12383	0					
ANR	12414	IfStatement	if ( agent -> conn == NULL )		12383	2					
ANR	12415	Condition	agent -> conn == NULL	356:8:10684:10702	12383	0	True				
ANR	12416	EqualityExpression	agent -> conn == NULL		12383	0		==			
ANR	12417	PtrMemberAccess	agent -> conn		12383	0					
ANR	12418	Identifier	agent		12383	0					
ANR	12419	Identifier	conn		12383	1					
ANR	12420	Identifier	NULL		12383	1					
ANR	12421	CompoundStatement		7:29:269:269	12383	1					
ANR	12422	ExpressionStatement	"g_timeout_add_seconds ( 1 , vdagent_init_async_cb , agent )"	357:8:10715:10769	12383	0	True				
ANR	12423	CallExpression	"g_timeout_add_seconds ( 1 , vdagent_init_async_cb , agent )"		12383	0					
ANR	12424	Callee	g_timeout_add_seconds		12383	0					
ANR	12425	Identifier	g_timeout_add_seconds		12383	0					
ANR	12426	ArgumentList	1		12383	1					
ANR	12427	Argument	1		12383	0					
ANR	12428	PrimaryExpression	1		12383	0					
ANR	12429	Argument	vdagent_init_async_cb		12383	1					
ANR	12430	Identifier	vdagent_init_async_cb		12383	0					
ANR	12431	Argument	agent		12383	2					
ANR	12432	Identifier	agent		12383	0					
ANR	12433	ReturnStatement	return G_SOURCE_REMOVE ;	358:8:10779:10801	12383	1	True				
ANR	12434	Identifier	G_SOURCE_REMOVE		12383	0					
ANR	12435	ExpressionStatement	"udscs_set_user_data ( agent -> conn , agent )"	360:4:10813:10852	12383	3	True				
ANR	12436	CallExpression	"udscs_set_user_data ( agent -> conn , agent )"		12383	0					
ANR	12437	Callee	udscs_set_user_data		12383	0					
ANR	12438	Identifier	udscs_set_user_data		12383	0					
ANR	12439	ArgumentList	agent -> conn		12383	1					
ANR	12440	Argument	agent -> conn		12383	0					
ANR	12441	PtrMemberAccess	agent -> conn		12383	0					
ANR	12442	Identifier	agent		12383	0					
ANR	12443	Identifier	conn		12383	1					
ANR	12444	Argument	agent		12383	1					
ANR	12445	Identifier	agent		12383	0					
ANR	12446	ExpressionStatement	"agent -> x11 = vdagent_x11_create ( agent -> conn , debug , x11_sync )"	362:4:10859:10920	12383	4	True				
ANR	12447	AssignmentExpression	"agent -> x11 = vdagent_x11_create ( agent -> conn , debug , x11_sync )"		12383	0		=			
ANR	12448	PtrMemberAccess	agent -> x11		12383	0					
ANR	12449	Identifier	agent		12383	0					
ANR	12450	Identifier	x11		12383	1					
ANR	12451	CallExpression	"vdagent_x11_create ( agent -> conn , debug , x11_sync )"		12383	1					
ANR	12452	Callee	vdagent_x11_create		12383	0					
ANR	12453	Identifier	vdagent_x11_create		12383	0					
ANR	12454	ArgumentList	agent -> conn		12383	1					
ANR	12455	Argument	agent -> conn		12383	0					
ANR	12456	PtrMemberAccess	agent -> conn		12383	0					
ANR	12457	Identifier	agent		12383	0					
ANR	12458	Identifier	conn		12383	1					
ANR	12459	Argument	debug		12383	1					
ANR	12460	Identifier	debug		12383	0					
ANR	12461	Argument	x11_sync		12383	2					
ANR	12462	Identifier	x11_sync		12383	0					
ANR	12463	IfStatement	if ( agent -> x11 == NULL )		12383	5					
ANR	12464	Condition	agent -> x11 == NULL	363:8:10930:10947	12383	0	True				
ANR	12465	EqualityExpression	agent -> x11 == NULL		12383	0		==			
ANR	12466	PtrMemberAccess	agent -> x11		12383	0					
ANR	12467	Identifier	agent		12383	0					
ANR	12468	Identifier	x11		12383	1					
ANR	12469	Identifier	NULL		12383	1					
ANR	12470	GotoStatement	goto err_init ;	364:8:10958:10971	12383	1	True				
ANR	12471	Identifier	err_init		12383	0					
ANR	12472	ExpressionStatement	agent -> x11_channel = g_io_channel_unix_new ( vdagent_x11_get_fd ( agent -> x11 ) )	365:4:10977:11051	12383	6	True				
ANR	12473	AssignmentExpression	agent -> x11_channel = g_io_channel_unix_new ( vdagent_x11_get_fd ( agent -> x11 ) )		12383	0		=			
ANR	12474	PtrMemberAccess	agent -> x11_channel		12383	0					
ANR	12475	Identifier	agent		12383	0					
ANR	12476	Identifier	x11_channel		12383	1					
ANR	12477	CallExpression	g_io_channel_unix_new ( vdagent_x11_get_fd ( agent -> x11 ) )		12383	1					
ANR	12478	Callee	g_io_channel_unix_new		12383	0					
ANR	12479	Identifier	g_io_channel_unix_new		12383	0					
ANR	12480	ArgumentList	vdagent_x11_get_fd ( agent -> x11 )		12383	1					
ANR	12481	Argument	vdagent_x11_get_fd ( agent -> x11 )		12383	0					
ANR	12482	CallExpression	vdagent_x11_get_fd ( agent -> x11 )		12383	0					
ANR	12483	Callee	vdagent_x11_get_fd		12383	0					
ANR	12484	Identifier	vdagent_x11_get_fd		12383	0					
ANR	12485	ArgumentList	agent -> x11		12383	1					
ANR	12486	Argument	agent -> x11		12383	0					
ANR	12487	PtrMemberAccess	agent -> x11		12383	0					
ANR	12488	Identifier	agent		12383	0					
ANR	12489	Identifier	x11		12383	1					
ANR	12490	IfStatement	if ( agent -> x11_channel == NULL )		12383	7					
ANR	12491	Condition	agent -> x11_channel == NULL	366:8:11061:11086	12383	0	True				
ANR	12492	EqualityExpression	agent -> x11_channel == NULL		12383	0		==			
ANR	12493	PtrMemberAccess	agent -> x11_channel		12383	0					
ANR	12494	Identifier	agent		12383	0					
ANR	12495	Identifier	x11_channel		12383	1					
ANR	12496	Identifier	NULL		12383	1					
ANR	12497	GotoStatement	goto err_init ;	367:8:11097:11110	12383	1	True				
ANR	12498	Identifier	err_init		12383	0					
ANR	12499	ExpressionStatement	"g_io_add_watch ( agent -> x11_channel , G_IO_IN , x11_io_channel_cb , agent )"	369:4:11117:11243	12383	8	True				
ANR	12500	CallExpression	"g_io_add_watch ( agent -> x11_channel , G_IO_IN , x11_io_channel_cb , agent )"		12383	0					
ANR	12501	Callee	g_io_add_watch		12383	0					
ANR	12502	Identifier	g_io_add_watch		12383	0					
ANR	12503	ArgumentList	agent -> x11_channel		12383	1					
ANR	12504	Argument	agent -> x11_channel		12383	0					
ANR	12505	PtrMemberAccess	agent -> x11_channel		12383	0					
ANR	12506	Identifier	agent		12383	0					
ANR	12507	Identifier	x11_channel		12383	1					
ANR	12508	Argument	G_IO_IN		12383	1					
ANR	12509	Identifier	G_IO_IN		12383	0					
ANR	12510	Argument	x11_io_channel_cb		12383	2					
ANR	12511	Identifier	x11_io_channel_cb		12383	0					
ANR	12512	Argument	agent		12383	3					
ANR	12513	Identifier	agent		12383	0					
ANR	12514	IfStatement	if ( ! vdagent_init_file_xfer ( agent ) )		12383	9					
ANR	12515	Condition	! vdagent_init_file_xfer ( agent )	374:8:11254:11283	12383	0	True				
ANR	12516	UnaryOperationExpression	! vdagent_init_file_xfer ( agent )		12383	0					
ANR	12517	UnaryOperator	!		12383	0					
ANR	12518	CallExpression	vdagent_init_file_xfer ( agent )		12383	1					
ANR	12519	Callee	vdagent_init_file_xfer		12383	0					
ANR	12520	Identifier	vdagent_init_file_xfer		12383	0					
ANR	12521	ArgumentList	agent		12383	1					
ANR	12522	Argument	agent		12383	0					
ANR	12523	Identifier	agent		12383	0					
ANR	12524	ExpressionStatement	"syslog ( LOG_WARNING , ""File transfer is disabled"" )"	375:8:11294:11342	12383	1	True				
ANR	12525	CallExpression	"syslog ( LOG_WARNING , ""File transfer is disabled"" )"		12383	0					
ANR	12526	Callee	syslog		12383	0					
ANR	12527	Identifier	syslog		12383	0					
ANR	12528	ArgumentList	LOG_WARNING		12383	1					
ANR	12529	Argument	LOG_WARNING		12383	0					
ANR	12530	Identifier	LOG_WARNING		12383	0					
ANR	12531	Argument	"""File transfer is disabled"""		12383	1					
ANR	12532	PrimaryExpression	"""File transfer is disabled"""		12383	0					
ANR	12533	IfStatement	if ( parent_socket != - 1 )		12383	10					
ANR	12534	Condition	parent_socket != - 1	377:8:11353:11371	12383	0	True				
ANR	12535	EqualityExpression	parent_socket != - 1		12383	0		!=			
ANR	12536	Identifier	parent_socket		12383	0					
ANR	12537	UnaryOperationExpression	- 1		12383	1					
ANR	12538	UnaryOperator	-		12383	0					
ANR	12539	PrimaryExpression	1		12383	1					
ANR	12540	CompoundStatement		28:29:938:938	12383	1					
ANR	12541	IfStatement	"if ( write ( parent_socket , ""OK"" , 2 ) != 2 )"		12383	0					
ANR	12542	Condition	"write ( parent_socket , ""OK"" , 2 ) != 2"	378:12:11388:11421	12383	0	True				
ANR	12543	EqualityExpression	"write ( parent_socket , ""OK"" , 2 ) != 2"		12383	0		!=			
ANR	12544	CallExpression	"write ( parent_socket , ""OK"" , 2 )"		12383	0					
ANR	12545	Callee	write		12383	0					
ANR	12546	Identifier	write		12383	0					
ANR	12547	ArgumentList	parent_socket		12383	1					
ANR	12548	Argument	parent_socket		12383	0					
ANR	12549	Identifier	parent_socket		12383	0					
ANR	12550	Argument	"""OK"""		12383	1					
ANR	12551	PrimaryExpression	"""OK"""		12383	0					
ANR	12552	Argument	2		12383	2					
ANR	12553	PrimaryExpression	2		12383	0					
ANR	12554	PrimaryExpression	2		12383	1					
ANR	12555	ExpressionStatement	"syslog ( LOG_WARNING , ""Parent already gone."" )"	379:12:11436:11479	12383	1	True				
ANR	12556	CallExpression	"syslog ( LOG_WARNING , ""Parent already gone."" )"		12383	0					
ANR	12557	Callee	syslog		12383	0					
ANR	12558	Identifier	syslog		12383	0					
ANR	12559	ArgumentList	LOG_WARNING		12383	1					
ANR	12560	Argument	LOG_WARNING		12383	0					
ANR	12561	Identifier	LOG_WARNING		12383	0					
ANR	12562	Argument	"""Parent already gone."""		12383	1					
ANR	12563	PrimaryExpression	"""Parent already gone."""		12383	0					
ANR	12564	ExpressionStatement	close ( parent_socket )	380:8:11489:11509	12383	1	True				
ANR	12565	CallExpression	close ( parent_socket )		12383	0					
ANR	12566	Callee	close		12383	0					
ANR	12567	Identifier	close		12383	0					
ANR	12568	ArgumentList	parent_socket		12383	1					
ANR	12569	Argument	parent_socket		12383	0					
ANR	12570	Identifier	parent_socket		12383	0					
ANR	12571	ExpressionStatement	parent_socket = - 1	381:8:11519:11537	12383	2	True				
ANR	12572	AssignmentExpression	parent_socket = - 1		12383	0		=			
ANR	12573	Identifier	parent_socket		12383	0					
ANR	12574	UnaryOperationExpression	- 1		12383	1					
ANR	12575	UnaryOperator	-		12383	0					
ANR	12576	PrimaryExpression	1		12383	1					
ANR	12577	ReturnStatement	return G_SOURCE_REMOVE ;	384:4:11550:11572	12383	11	True				
ANR	12578	Identifier	G_SOURCE_REMOVE		12383	0					
ANR	12579	Label	err_init :	386:0:11575:11583	12383	12	True				
ANR	12580	Identifier	err_init		12383	0					
ANR	12581	ExpressionStatement	g_main_loop_quit ( agent -> loop )	387:4:11589:11618	12383	13	True				
ANR	12582	CallExpression	g_main_loop_quit ( agent -> loop )		12383	0					
ANR	12583	Callee	g_main_loop_quit		12383	0					
ANR	12584	Identifier	g_main_loop_quit		12383	0					
ANR	12585	ArgumentList	agent -> loop		12383	1					
ANR	12586	Argument	agent -> loop		12383	0					
ANR	12587	PtrMemberAccess	agent -> loop		12383	0					
ANR	12588	Identifier	agent		12383	0					
ANR	12589	Identifier	loop		12383	1					
ANR	12590	ExpressionStatement	quit = TRUE	388:4:11624:11635	12383	14	True				
ANR	12591	AssignmentExpression	quit = TRUE		12383	0		=			
ANR	12592	Identifier	quit		12383	0					
ANR	12593	Identifier	TRUE		12383	1					
ANR	12594	ReturnStatement	return G_SOURCE_REMOVE ;	389:4:11641:11663	12383	15	True				
ANR	12595	Identifier	G_SOURCE_REMOVE		12383	0					
ANR	12596	ReturnType	static gboolean		12383	1					
ANR	12597	Identifier	vdagent_init_async_cb		12383	2					
ANR	12598	ParameterList	gpointer user_data		12383	3					
ANR	12599	Parameter	gpointer user_data	349:38:10415:10432	12383	0	True				
ANR	12600	ParameterType	gpointer		12383	0					
ANR	12601	Identifier	user_data		12383	1					
ANR	12602	CFGEntryNode	ENTRY		12383		True				
ANR	12603	CFGExitNode	EXIT		12383		True				
ANR	12604	Symbol	agent		12383						
ANR	12605	Symbol	vdagentd_messages		12383						
ANR	12606	Symbol	G_IO_IN		12383						
ANR	12607	Symbol	x11_io_channel_cb		12383						
ANR	12608	Symbol	LOG_WARNING		12383						
ANR	12609	Symbol	vdagent_init_async_cb		12383						
ANR	12610	Symbol	x11_sync		12383						
ANR	12611	Symbol	agent -> loop		12383						
ANR	12612	Symbol	vdagent_init_file_xfer		12383						
ANR	12613	Symbol	vdagentd_socket		12383						
ANR	12614	Symbol	write		12383						
ANR	12615	Symbol	vdagent_x11_get_fd		12383						
ANR	12616	Symbol	g_io_channel_unix_new		12383						
ANR	12617	Symbol	debug		12383						
ANR	12618	Symbol	NULL		12383						
ANR	12619	Symbol	G_SOURCE_REMOVE		12383						
ANR	12620	Symbol	agent -> conn		12383						
ANR	12621	Symbol	* agent		12383						
ANR	12622	Symbol	daemon_read_complete		12383						
ANR	12623	Symbol	TRUE		12383						
ANR	12624	Symbol	user_data		12383						
ANR	12625	Symbol	agent -> x11		12383						
ANR	12626	Symbol	daemon_disconnect_cb		12383						
ANR	12627	Symbol	vdagent_x11_create		12383						
ANR	12628	Symbol	VDAGENTD_NO_MESSAGES		12383						
ANR	12629	Symbol	parent_socket		12383						
ANR	12630	Symbol	udscs_connect		12383						
ANR	12631	Symbol	quit		12383						
ANR	12632	Symbol	agent -> x11_channel		12383						
ANR	12633	Function	main	392:0:11668:13266							
ANR	12634	FunctionDef	"main (int argc , char * argv [ ])"		12633	0					
ANR	12635	CompoundStatement		393:0:11701:13266	12633	0					
ANR	12636	IdentifierDeclStatement	GOptionContext * context ;	394:4:11707:11730	12633	0	True				
ANR	12637	IdentifierDecl	* context		12633	0					
ANR	12638	IdentifierDeclType	GOptionContext *		12633	0					
ANR	12639	Identifier	context		12633	1					
ANR	12640	IdentifierDeclStatement	GError * error = NULL ;	395:4:11736:11756	12633	1	True				
ANR	12641	IdentifierDecl	* error = NULL		12633	0					
ANR	12642	IdentifierDeclType	GError *		12633	0					
ANR	12643	Identifier	error		12633	1					
ANR	12644	AssignmentExpression	* error = NULL		12633	2		=			
ANR	12645	Identifier	NULL		12633	0					
ANR	12646	Identifier	NULL		12633	1					
ANR	12647	IdentifierDeclStatement	VDAgent * agent ;	396:4:11762:11776	12633	2	True				
ANR	12648	IdentifierDecl	* agent		12633	0					
ANR	12649	IdentifierDeclType	VDAgent *		12633	0					
ANR	12650	Identifier	agent		12633	1					
ANR	12651	ExpressionStatement	context = g_option_context_new ( NULL )	398:4:11783:11819	12633	3	True				
ANR	12652	AssignmentExpression	context = g_option_context_new ( NULL )		12633	0		=			
ANR	12653	Identifier	context		12633	0					
ANR	12654	CallExpression	g_option_context_new ( NULL )		12633	1					
ANR	12655	Callee	g_option_context_new		12633	0					
ANR	12656	Identifier	g_option_context_new		12633	0					
ANR	12657	ArgumentList	NULL		12633	1					
ANR	12658	Argument	NULL		12633	0					
ANR	12659	Identifier	NULL		12633	0					
ANR	12660	ExpressionStatement	"g_option_context_add_main_entries ( context , entries , NULL )"	399:4:11825:11882	12633	4	True				
ANR	12661	CallExpression	"g_option_context_add_main_entries ( context , entries , NULL )"		12633	0					
ANR	12662	Callee	g_option_context_add_main_entries		12633	0					
ANR	12663	Identifier	g_option_context_add_main_entries		12633	0					
ANR	12664	ArgumentList	context		12633	1					
ANR	12665	Argument	context		12633	0					
ANR	12666	Identifier	context		12633	0					
ANR	12667	Argument	entries		12633	1					
ANR	12668	Identifier	entries		12633	0					
ANR	12669	Argument	NULL		12633	2					
ANR	12670	Identifier	NULL		12633	0					
ANR	12671	Statement	g_option_context_set_summary	400:4:11888:11915	12633	5	True				
ANR	12672	Statement	(	400:32:11916:11916	12633	6	True				
ANR	12673	Statement	context	400:33:11917:11923	12633	7	True				
ANR	12674	Statement	","	400:40:11924:11924	12633	8	True				
ANR	12675	Statement	"""\\tSpice session guest agent: X11\\n"""	401:33:11959:11994	12633	9	True				
ANR	12676	Statement	"""\\tVersion: """	402:33:12029:12041	12633	10	True				
ANR	12677	Statement	VERSION	402:47:12043:12049	12633	11	True				
ANR	12678	Statement	)	402:54:12050:12050	12633	12	True				
ANR	12679	ExpressionStatement		402:55:12051:12051	12633	13	True				
ANR	12680	ExpressionStatement	"g_option_context_parse ( context , & argc , & argv , & error )"	403:4:12057:12110	12633	14	True				
ANR	12681	CallExpression	"g_option_context_parse ( context , & argc , & argv , & error )"		12633	0					
ANR	12682	Callee	g_option_context_parse		12633	0					
ANR	12683	Identifier	g_option_context_parse		12633	0					
ANR	12684	ArgumentList	context		12633	1					
ANR	12685	Argument	context		12633	0					
ANR	12686	Identifier	context		12633	0					
ANR	12687	Argument	& argc		12633	1					
ANR	12688	UnaryOperationExpression	& argc		12633	0					
ANR	12689	UnaryOperator	&		12633	0					
ANR	12690	Identifier	argc		12633	1					
ANR	12691	Argument	& argv		12633	2					
ANR	12692	UnaryOperationExpression	& argv		12633	0					
ANR	12693	UnaryOperator	&		12633	0					
ANR	12694	Identifier	argv		12633	1					
ANR	12695	Argument	& error		12633	3					
ANR	12696	UnaryOperationExpression	& error		12633	0					
ANR	12697	UnaryOperator	&		12633	0					
ANR	12698	Identifier	error		12633	1					
ANR	12699	ExpressionStatement	g_option_context_free ( context )	404:4:12116:12146	12633	15	True				
ANR	12700	CallExpression	g_option_context_free ( context )		12633	0					
ANR	12701	Callee	g_option_context_free		12633	0					
ANR	12702	Identifier	g_option_context_free		12633	0					
ANR	12703	ArgumentList	context		12633	1					
ANR	12704	Argument	context		12633	0					
ANR	12705	Identifier	context		12633	0					
ANR	12706	IfStatement	if ( error != NULL )		12633	16					
ANR	12707	Condition	error != NULL	406:8:12157:12169	12633	0	True				
ANR	12708	EqualityExpression	error != NULL		12633	0		!=			
ANR	12709	Identifier	error		12633	0					
ANR	12710	Identifier	NULL		12633	1					
ANR	12711	CompoundStatement		14:23:470:470	12633	1					
ANR	12712	ExpressionStatement	"g_printerr ( ""Invalid arguments, %s\\n"" , error -> message )"	407:8:12182:12235	12633	0	True				
ANR	12713	CallExpression	"g_printerr ( ""Invalid arguments, %s\\n"" , error -> message )"		12633	0					
ANR	12714	Callee	g_printerr		12633	0					
ANR	12715	Identifier	g_printerr		12633	0					
ANR	12716	ArgumentList	"""Invalid arguments, %s\\n"""		12633	1					
ANR	12717	Argument	"""Invalid arguments, %s\\n"""		12633	0					
ANR	12718	PrimaryExpression	"""Invalid arguments, %s\\n"""		12633	0					
ANR	12719	Argument	error -> message		12633	1					
ANR	12720	PtrMemberAccess	error -> message		12633	0					
ANR	12721	Identifier	error		12633	0					
ANR	12722	Identifier	message		12633	1					
ANR	12723	ExpressionStatement	g_clear_error ( & error )	408:8:12245:12266	12633	1	True				
ANR	12724	CallExpression	g_clear_error ( & error )		12633	0					
ANR	12725	Callee	g_clear_error		12633	0					
ANR	12726	Identifier	g_clear_error		12633	0					
ANR	12727	ArgumentList	& error		12633	1					
ANR	12728	Argument	& error		12633	0					
ANR	12729	UnaryOperationExpression	& error		12633	0					
ANR	12730	UnaryOperator	&		12633	0					
ANR	12731	Identifier	error		12633	1					
ANR	12732	ReturnStatement	return - 1 ;	409:8:12276:12285	12633	2	True				
ANR	12733	UnaryOperationExpression	- 1		12633	0					
ANR	12734	UnaryOperator	-		12633	0					
ANR	12735	PrimaryExpression	1		12633	1					
ANR	12736	IfStatement	if ( portdev == NULL )		12633	17					
ANR	12737	Condition	portdev == NULL	413:8:12351:12365	12633	0	True				
ANR	12738	EqualityExpression	portdev == NULL		12633	0		==			
ANR	12739	Identifier	portdev		12633	0					
ANR	12740	Identifier	NULL		12633	1					
ANR	12741	ExpressionStatement	portdev = g_strdup ( DEFAULT_VIRTIO_PORT_PATH )	414:8:12376:12420	12633	1	True				
ANR	12742	AssignmentExpression	portdev = g_strdup ( DEFAULT_VIRTIO_PORT_PATH )		12633	0		=			
ANR	12743	Identifier	portdev		12633	0					
ANR	12744	CallExpression	g_strdup ( DEFAULT_VIRTIO_PORT_PATH )		12633	1					
ANR	12745	Callee	g_strdup		12633	0					
ANR	12746	Identifier	g_strdup		12633	0					
ANR	12747	ArgumentList	DEFAULT_VIRTIO_PORT_PATH		12633	1					
ANR	12748	Argument	DEFAULT_VIRTIO_PORT_PATH		12633	0					
ANR	12749	Identifier	DEFAULT_VIRTIO_PORT_PATH		12633	0					
ANR	12750	IfStatement	if ( vdagentd_socket == NULL )		12633	18					
ANR	12751	Condition	vdagentd_socket == NULL	416:8:12431:12453	12633	0	True				
ANR	12752	EqualityExpression	vdagentd_socket == NULL		12633	0		==			
ANR	12753	Identifier	vdagentd_socket		12633	0					
ANR	12754	Identifier	NULL		12633	1					
ANR	12755	ExpressionStatement	vdagentd_socket = g_strdup ( VDAGENTD_SOCKET )	417:8:12464:12507	12633	1	True				
ANR	12756	AssignmentExpression	vdagentd_socket = g_strdup ( VDAGENTD_SOCKET )		12633	0		=			
ANR	12757	Identifier	vdagentd_socket		12633	0					
ANR	12758	CallExpression	g_strdup ( VDAGENTD_SOCKET )		12633	1					
ANR	12759	Callee	g_strdup		12633	0					
ANR	12760	Identifier	g_strdup		12633	0					
ANR	12761	ArgumentList	VDAGENTD_SOCKET		12633	1					
ANR	12762	Argument	VDAGENTD_SOCKET		12633	0					
ANR	12763	Identifier	VDAGENTD_SOCKET		12633	0					
ANR	12764	ExpressionStatement	"openlog ( ""spice-vdagent"" , do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR ) , LOG_USER )"	419:4:12514:12609	12633	19	True				
ANR	12765	CallExpression	"openlog ( ""spice-vdagent"" , do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR ) , LOG_USER )"		12633	0					
ANR	12766	Callee	openlog		12633	0					
ANR	12767	Identifier	openlog		12633	0					
ANR	12768	ArgumentList	"""spice-vdagent"""		12633	1					
ANR	12769	Argument	"""spice-vdagent"""		12633	0					
ANR	12770	PrimaryExpression	"""spice-vdagent"""		12633	0					
ANR	12771	Argument	do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR )		12633	1					
ANR	12772	ConditionalExpression	do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR )		12633	0					
ANR	12773	Condition	do_daemonize		12633	0					
ANR	12774	Identifier	do_daemonize		12633	0					
ANR	12775	Identifier	LOG_PID		12633	1					
ANR	12776	InclusiveOrExpression	LOG_PID | LOG_PERROR		12633	2		|			
ANR	12777	Identifier	LOG_PID		12633	0					
ANR	12778	Identifier	LOG_PERROR		12633	1					
ANR	12779	Argument	LOG_USER		12633	2					
ANR	12780	Identifier	LOG_USER		12633	0					
ANR	12781	IfStatement	if ( file_test ( portdev ) != 0 )		12633	20					
ANR	12782	Condition	file_test ( portdev ) != 0	422:8:12620:12642	12633	0	True				
ANR	12783	EqualityExpression	file_test ( portdev ) != 0		12633	0		!=			
ANR	12784	CallExpression	file_test ( portdev )		12633	0					
ANR	12785	Callee	file_test		12633	0					
ANR	12786	Identifier	file_test		12633	0					
ANR	12787	ArgumentList	portdev		12633	1					
ANR	12788	Argument	portdev		12633	0					
ANR	12789	Identifier	portdev		12633	0					
ANR	12790	PrimaryExpression	0		12633	1					
ANR	12791	CompoundStatement		30:33:943:943	12633	1					
ANR	12792	ExpressionStatement	"syslog ( LOG_ERR , ""Cannot access vdagent virtio channel %s"" , portdev )"	423:8:12655:12722	12633	0	True				
ANR	12793	CallExpression	"syslog ( LOG_ERR , ""Cannot access vdagent virtio channel %s"" , portdev )"		12633	0					
ANR	12794	Callee	syslog		12633	0					
ANR	12795	Identifier	syslog		12633	0					
ANR	12796	ArgumentList	LOG_ERR		12633	1					
ANR	12797	Argument	LOG_ERR		12633	0					
ANR	12798	Identifier	LOG_ERR		12633	0					
ANR	12799	Argument	"""Cannot access vdagent virtio channel %s"""		12633	1					
ANR	12800	PrimaryExpression	"""Cannot access vdagent virtio channel %s"""		12633	0					
ANR	12801	Argument	portdev		12633	2					
ANR	12802	Identifier	portdev		12633	0					
ANR	12803	ReturnStatement	return 1 ;	424:8:12732:12740	12633	1	True				
ANR	12804	PrimaryExpression	1		12633	0					
ANR	12805	IfStatement	if ( do_daemonize )		12633	21					
ANR	12806	Condition	do_daemonize	427:8:12757:12768	12633	0	True				
ANR	12807	Identifier	do_daemonize		12633	0					
ANR	12808	ExpressionStatement	parent_socket = daemonize ( )	428:8:12779:12806	12633	1	True				
ANR	12809	AssignmentExpression	parent_socket = daemonize ( )		12633	0		=			
ANR	12810	Identifier	parent_socket		12633	0					
ANR	12811	CallExpression	daemonize ( )		12633	1					
ANR	12812	Callee	daemonize		12633	0					
ANR	12813	Identifier	daemonize		12633	0					
ANR	12814	ArgumentList			12633	1					
ANR	12815	Label	reconnect :	430:0:12809:12818	12633	22	True				
ANR	12816	Identifier	reconnect		12633	0					
ANR	12817	IfStatement	if ( version_mismatch )		12633	23					
ANR	12818	Condition	version_mismatch	431:8:12828:12843	12633	0	True				
ANR	12819	Identifier	version_mismatch		12633	0					
ANR	12820	CompoundStatement		39:26:1144:1144	12633	1					
ANR	12821	ExpressionStatement	"syslog ( LOG_INFO , ""Version mismatch, restarting"" )"	432:8:12856:12904	12633	0	True				
ANR	12822	CallExpression	"syslog ( LOG_INFO , ""Version mismatch, restarting"" )"		12633	0					
ANR	12823	Callee	syslog		12633	0					
ANR	12824	Identifier	syslog		12633	0					
ANR	12825	ArgumentList	LOG_INFO		12633	1					
ANR	12826	Argument	LOG_INFO		12633	0					
ANR	12827	Identifier	LOG_INFO		12633	0					
ANR	12828	Argument	"""Version mismatch, restarting"""		12633	1					
ANR	12829	PrimaryExpression	"""Version mismatch, restarting"""		12633	0					
ANR	12830	ExpressionStatement	sleep ( 1 )	433:8:12914:12922	12633	1	True				
ANR	12831	CallExpression	sleep ( 1 )		12633	0					
ANR	12832	Callee	sleep		12633	0					
ANR	12833	Identifier	sleep		12633	0					
ANR	12834	ArgumentList	1		12633	1					
ANR	12835	Argument	1		12633	0					
ANR	12836	PrimaryExpression	1		12633	0					
ANR	12837	ExpressionStatement	"execvp ( argv [ 0 ] , argv )"	434:8:12932:12953	12633	2	True				
ANR	12838	CallExpression	"execvp ( argv [ 0 ] , argv )"		12633	0					
ANR	12839	Callee	execvp		12633	0					
ANR	12840	Identifier	execvp		12633	0					
ANR	12841	ArgumentList	argv [ 0 ]		12633	1					
ANR	12842	Argument	argv [ 0 ]		12633	0					
ANR	12843	ArrayIndexing	argv [ 0 ]		12633	0					
ANR	12844	Identifier	argv		12633	0					
ANR	12845	PrimaryExpression	0		12633	1					
ANR	12846	Argument	argv		12633	1					
ANR	12847	Identifier	argv		12633	0					
ANR	12848	ExpressionStatement	agent = vdagent_new ( )	437:4:12966:12987	12633	24	True				
ANR	12849	AssignmentExpression	agent = vdagent_new ( )		12633	0		=			
ANR	12850	Identifier	agent		12633	0					
ANR	12851	CallExpression	vdagent_new ( )		12633	1					
ANR	12852	Callee	vdagent_new		12633	0					
ANR	12853	Identifier	vdagent_new		12633	0					
ANR	12854	ArgumentList			12633	1					
ANR	12855	ExpressionStatement	"g_timeout_add ( 0 , vdagent_init_async_cb , agent )"	439:4:12994:13040	12633	25	True				
ANR	12856	CallExpression	"g_timeout_add ( 0 , vdagent_init_async_cb , agent )"		12633	0					
ANR	12857	Callee	g_timeout_add		12633	0					
ANR	12858	Identifier	g_timeout_add		12633	0					
ANR	12859	ArgumentList	0		12633	1					
ANR	12860	Argument	0		12633	0					
ANR	12861	PrimaryExpression	0		12633	0					
ANR	12862	Argument	vdagent_init_async_cb		12633	1					
ANR	12863	Identifier	vdagent_init_async_cb		12633	0					
ANR	12864	Argument	agent		12633	2					
ANR	12865	Identifier	agent		12633	0					
ANR	12866	ExpressionStatement	g_main_loop_run ( agent -> loop )	441:4:13047:13075	12633	26	True				
ANR	12867	CallExpression	g_main_loop_run ( agent -> loop )		12633	0					
ANR	12868	Callee	g_main_loop_run		12633	0					
ANR	12869	Identifier	g_main_loop_run		12633	0					
ANR	12870	ArgumentList	agent -> loop		12633	1					
ANR	12871	Argument	agent -> loop		12633	0					
ANR	12872	PtrMemberAccess	agent -> loop		12633	0					
ANR	12873	Identifier	agent		12633	0					
ANR	12874	Identifier	loop		12633	1					
ANR	12875	ExpressionStatement	vdagent_destroy ( agent )	443:4:13082:13104	12633	27	True				
ANR	12876	CallExpression	vdagent_destroy ( agent )		12633	0					
ANR	12877	Callee	vdagent_destroy		12633	0					
ANR	12878	Identifier	vdagent_destroy		12633	0					
ANR	12879	ArgumentList	agent		12633	1					
ANR	12880	Argument	agent		12633	0					
ANR	12881	Identifier	agent		12633	0					
ANR	12882	ExpressionStatement	agent = NULL	444:4:13110:13122	12633	28	True				
ANR	12883	AssignmentExpression	agent = NULL		12633	0		=			
ANR	12884	Identifier	agent		12633	0					
ANR	12885	Identifier	NULL		12633	1					
ANR	12886	IfStatement	if ( ! quit && do_daemonize )		12633	29					
ANR	12887	Condition	! quit && do_daemonize	446:8:13133:13153	12633	0	True				
ANR	12888	AndExpression	! quit && do_daemonize		12633	0		&&			
ANR	12889	UnaryOperationExpression	! quit		12633	0					
ANR	12890	UnaryOperator	!		12633	0					
ANR	12891	Identifier	quit		12633	1					
ANR	12892	Identifier	do_daemonize		12633	1					
ANR	12893	GotoStatement	goto reconnect ;	447:8:13164:13178	12633	1	True				
ANR	12894	Identifier	reconnect		12633	0					
ANR	12895	ExpressionStatement	g_free ( fx_dir )	449:4:13185:13199	12633	30	True				
ANR	12896	CallExpression	g_free ( fx_dir )		12633	0					
ANR	12897	Callee	g_free		12633	0					
ANR	12898	Identifier	g_free		12633	0					
ANR	12899	ArgumentList	fx_dir		12633	1					
ANR	12900	Argument	fx_dir		12633	0					
ANR	12901	Identifier	fx_dir		12633	0					
ANR	12902	ExpressionStatement	g_free ( portdev )	450:4:13205:13220	12633	31	True				
ANR	12903	CallExpression	g_free ( portdev )		12633	0					
ANR	12904	Callee	g_free		12633	0					
ANR	12905	Identifier	g_free		12633	0					
ANR	12906	ArgumentList	portdev		12633	1					
ANR	12907	Argument	portdev		12633	0					
ANR	12908	Identifier	portdev		12633	0					
ANR	12909	ExpressionStatement	g_free ( vdagentd_socket )	451:4:13226:13249	12633	32	True				
ANR	12910	CallExpression	g_free ( vdagentd_socket )		12633	0					
ANR	12911	Callee	g_free		12633	0					
ANR	12912	Identifier	g_free		12633	0					
ANR	12913	ArgumentList	vdagentd_socket		12633	1					
ANR	12914	Argument	vdagentd_socket		12633	0					
ANR	12915	Identifier	vdagentd_socket		12633	0					
ANR	12916	ReturnStatement	return 0 ;	453:4:13256:13264	12633	33	True				
ANR	12917	PrimaryExpression	0		12633	0					
ANR	12918	ReturnType	int		12633	1					
ANR	12919	Identifier	main		12633	2					
ANR	12920	ParameterList	"int argc , char * argv [ ]"		12633	3					
ANR	12921	Parameter	int argc	392:9:11677:11684	12633	0	True				
ANR	12922	ParameterType	int		12633	0					
ANR	12923	Identifier	argc		12633	1					
ANR	12924	Parameter	char * argv [ ]	392:19:11687:11698	12633	1	True				
ANR	12925	ParameterType	char * [ ]		12633	0					
ANR	12926	Identifier	argv		12633	1					
ANR	12927	CFGEntryNode	ENTRY		12633		True				
ANR	12928	CFGExitNode	EXIT		12633		True				
ANR	12929	Symbol	agent		12633						
ANR	12930	Symbol	& error		12633						
ANR	12931	Symbol	LOG_INFO		12633						
ANR	12932	Symbol	vdagent_new		12633						
ANR	12933	Symbol	DEFAULT_VIRTIO_PORT_PATH		12633						
ANR	12934	Symbol	* argv		12633						
ANR	12935	Symbol	error		12633						
ANR	12936	Symbol	argv		12633						
ANR	12937	Symbol	vdagent_init_async_cb		12633						
ANR	12938	Symbol	& argc		12633						
ANR	12939	Symbol	& argv		12633						
ANR	12940	Symbol	agent -> loop		12633						
ANR	12941	Symbol	portdev		12633						
ANR	12942	Symbol	g_option_context_new		12633						
ANR	12943	Symbol	LOG_PERROR		12633						
ANR	12944	Symbol	LOG_ERR		12633						
ANR	12945	Symbol	context		12633						
ANR	12946	Symbol	g_strdup		12633						
ANR	12947	Symbol	vdagentd_socket		12633						
ANR	12948	Symbol	do_daemonize		12633						
ANR	12949	Symbol	argc		12633						
ANR	12950	Symbol	daemonize		12633						
ANR	12951	Symbol	NULL		12633						
ANR	12952	Symbol	error -> message		12633						
ANR	12953	Symbol	* agent		12633						
ANR	12954	Symbol	LOG_PID		12633						
ANR	12955	Symbol	entries		12633						
ANR	12956	Symbol	parent_socket		12633						
ANR	12957	Symbol	version_mismatch		12633						
ANR	12958	Symbol	LOG_USER		12633						
ANR	12959	Symbol	fx_dir		12633						
ANR	12960	Symbol	* error		12633						
ANR	12961	Symbol	VDAGENTD_SOCKET		12633						
ANR	12962	Symbol	quit		12633						
ANR	12963	Symbol	file_test		12633						
