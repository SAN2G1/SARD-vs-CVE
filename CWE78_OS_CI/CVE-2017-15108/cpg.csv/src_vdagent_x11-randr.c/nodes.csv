command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	13119	File	data/converged/CVE-2017-15108_vd_agent/src_vdagent_x11-randr.c								
ANR	13120	Function	error_handler	39:0:1144:1257							
ANR	13121	FunctionDef	"error_handler (Display * display , XErrorEvent * error)"		13120	0					
ANR	13122	CompoundStatement		40:0:1207:1257	13120	0					
ANR	13123	ExpressionStatement	vdagent_x11_caught_error = 1	41:4:1213:1241	13120	0	True				
ANR	13124	AssignmentExpression	vdagent_x11_caught_error = 1		13120	0		=			
ANR	13125	Identifier	vdagent_x11_caught_error		13120	0					
ANR	13126	PrimaryExpression	1		13120	1					
ANR	13127	ReturnStatement	return 0 ;	42:4:1247:1255	13120	1	True				
ANR	13128	PrimaryExpression	0		13120	0					
ANR	13129	ReturnType	static int		13120	1					
ANR	13130	Identifier	error_handler		13120	2					
ANR	13131	ParameterList	"Display * display , XErrorEvent * error"		13120	3					
ANR	13132	Parameter	Display * display	39:25:1169:1184	13120	0	True				
ANR	13133	ParameterType	Display *		13120	0					
ANR	13134	Identifier	display		13120	1					
ANR	13135	Parameter	XErrorEvent * error	39:43:1187:1204	13120	1	True				
ANR	13136	ParameterType	XErrorEvent *		13120	0					
ANR	13137	Identifier	error		13120	1					
ANR	13138	CFGEntryNode	ENTRY		13120		True				
ANR	13139	CFGExitNode	EXIT		13120		True				
ANR	13140	Symbol	vdagent_x11_caught_error		13120						
ANR	13141	Symbol	display		13120						
ANR	13142	Symbol	error		13120						
ANR	13143	Function	mode_from_id	45:0:1260:1520							
ANR	13144	FunctionDef	"mode_from_id (struct vdagent_x11 * x11 , int id)"		13143	0					
ANR	13145	CompoundStatement		46:0:1326:1520	13143	0					
ANR	13146	IdentifierDeclStatement	int i ;	47:4:1332:1337	13143	0	True				
ANR	13147	IdentifierDecl	i		13143	0					
ANR	13148	IdentifierDeclType	int		13143	0					
ANR	13149	Identifier	i		13143	1					
ANR	13150	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> nmode ; ++ i )		13143	1					
ANR	13151	ForInit	i = 0 ;	49:9:1349:1355	13143	0	True				
ANR	13152	AssignmentExpression	i = 0		13143	0		=			
ANR	13153	Identifier	i		13143	0					
ANR	13154	PrimaryExpression	0		13143	1					
ANR	13155	Condition	i < x11 -> randr . res -> nmode	49:17:1357:1381	13143	1	True				
ANR	13156	RelationalExpression	i < x11 -> randr . res -> nmode		13143	0		<			
ANR	13157	Identifier	i		13143	0					
ANR	13158	PtrMemberAccess	x11 -> randr . res -> nmode		13143	1					
ANR	13159	MemberAccess	x11 -> randr . res		13143	0					
ANR	13160	PtrMemberAccess	x11 -> randr		13143	0					
ANR	13161	Identifier	x11		13143	0					
ANR	13162	Identifier	randr		13143	1					
ANR	13163	Identifier	res		13143	1					
ANR	13164	Identifier	nmode		13143	1					
ANR	13165	UnaryExpression	++ i	49:45:1385:1387	13143	2	True				
ANR	13166	IncDec	++		13143	0					
ANR	13167	Identifier	i		13143	1					
ANR	13168	CompoundStatement		4:50:63:63	13143	3					
ANR	13169	IfStatement	if ( id == x11 -> randr . res -> modes [ i ] . id )		13143	0					
ANR	13170	Condition	id == x11 -> randr . res -> modes [ i ] . id	50:12:1404:1436	13143	0	True				
ANR	13171	EqualityExpression	id == x11 -> randr . res -> modes [ i ] . id		13143	0		==			
ANR	13172	Identifier	id		13143	0					
ANR	13173	MemberAccess	x11 -> randr . res -> modes [ i ] . id		13143	1					
ANR	13174	ArrayIndexing	x11 -> randr . res -> modes [ i ]		13143	0					
ANR	13175	PtrMemberAccess	x11 -> randr . res -> modes		13143	0					
ANR	13176	MemberAccess	x11 -> randr . res		13143	0					
ANR	13177	PtrMemberAccess	x11 -> randr		13143	0					
ANR	13178	Identifier	x11		13143	0					
ANR	13179	Identifier	randr		13143	1					
ANR	13180	Identifier	res		13143	1					
ANR	13181	Identifier	modes		13143	1					
ANR	13182	Identifier	i		13143	1					
ANR	13183	Identifier	id		13143	1					
ANR	13184	CompoundStatement		5:47:112:112	13143	1					
ANR	13185	ReturnStatement	return & x11 -> randr . res -> modes [ i ] ;	51:12:1453:1485	13143	0	True				
ANR	13186	UnaryOperationExpression	& x11 -> randr . res -> modes [ i ]		13143	0					
ANR	13187	UnaryOperator	&		13143	0					
ANR	13188	ArrayIndexing	x11 -> randr . res -> modes [ i ]		13143	1					
ANR	13189	PtrMemberAccess	x11 -> randr . res -> modes		13143	0					
ANR	13190	MemberAccess	x11 -> randr . res		13143	0					
ANR	13191	PtrMemberAccess	x11 -> randr		13143	0					
ANR	13192	Identifier	x11		13143	0					
ANR	13193	Identifier	randr		13143	1					
ANR	13194	Identifier	res		13143	1					
ANR	13195	Identifier	modes		13143	1					
ANR	13196	Identifier	i		13143	1					
ANR	13197	ReturnStatement	return NULL ;	54:4:1507:1518	13143	2	True				
ANR	13198	Identifier	NULL		13143	0					
ANR	13199	ReturnType	static XRRModeInfo *		13143	1					
ANR	13200	Identifier	mode_from_id		13143	2					
ANR	13201	ParameterList	"struct vdagent_x11 * x11 , int id"		13143	3					
ANR	13202	Parameter	struct vdagent_x11 * x11	45:33:1293:1315	13143	0	True				
ANR	13203	ParameterType	struct vdagent_x11 *		13143	0					
ANR	13204	Identifier	x11		13143	1					
ANR	13205	Parameter	int id	45:58:1318:1323	13143	1	True				
ANR	13206	ParameterType	int		13143	0					
ANR	13207	Identifier	id		13143	1					
ANR	13208	CFGEntryNode	ENTRY		13143		True				
ANR	13209	CFGExitNode	EXIT		13143		True				
ANR	13210	Symbol	* x11		13143						
ANR	13211	Symbol	NULL		13143						
ANR	13212	Symbol	x11 -> randr		13143						
ANR	13213	Symbol	x11 -> randr . res -> modes [ i ] . id		13143						
ANR	13214	Symbol	i		13143						
ANR	13215	Symbol	* * x11		13143						
ANR	13216	Symbol	* x11 -> randr . res		13143						
ANR	13217	Symbol	* x11 -> randr		13143						
ANR	13218	Symbol	x11 -> randr . res -> nmode		13143						
ANR	13219	Symbol	* i		13143						
ANR	13220	Symbol	* * x11 -> randr . res		13143						
ANR	13221	Symbol	* * * x11		13143						
ANR	13222	Symbol	* x11 -> randr . res -> modes		13143						
ANR	13223	Symbol	x11		13143						
ANR	13224	Symbol	x11 -> randr . res		13143						
ANR	13225	Symbol	id		13143						
ANR	13226	Symbol	* * x11 -> randr		13143						
ANR	13227	Symbol	x11 -> randr . res -> modes		13143						
ANR	13228	Function	crtc_from_id	57:0:1523:1774							
ANR	13229	FunctionDef	"crtc_from_id (struct vdagent_x11 * x11 , int id)"		13228	0					
ANR	13230	CompoundStatement		58:0:1589:1774	13228	0					
ANR	13231	IdentifierDeclStatement	int i ;	59:4:1595:1600	13228	0	True				
ANR	13232	IdentifierDecl	i		13228	0					
ANR	13233	IdentifierDeclType	int		13228	0					
ANR	13234	Identifier	i		13228	1					
ANR	13235	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> ncrtc ; ++ i )		13228	1					
ANR	13236	ForInit	i = 0 ;	61:9:1612:1618	13228	0	True				
ANR	13237	AssignmentExpression	i = 0		13228	0		=			
ANR	13238	Identifier	i		13228	0					
ANR	13239	PrimaryExpression	0		13228	1					
ANR	13240	Condition	i < x11 -> randr . res -> ncrtc	61:17:1620:1644	13228	1	True				
ANR	13241	RelationalExpression	i < x11 -> randr . res -> ncrtc		13228	0		<			
ANR	13242	Identifier	i		13228	0					
ANR	13243	PtrMemberAccess	x11 -> randr . res -> ncrtc		13228	1					
ANR	13244	MemberAccess	x11 -> randr . res		13228	0					
ANR	13245	PtrMemberAccess	x11 -> randr		13228	0					
ANR	13246	Identifier	x11		13228	0					
ANR	13247	Identifier	randr		13228	1					
ANR	13248	Identifier	res		13228	1					
ANR	13249	Identifier	ncrtc		13228	1					
ANR	13250	UnaryExpression	++ i	61:45:1648:1650	13228	2	True				
ANR	13251	IncDec	++		13228	0					
ANR	13252	Identifier	i		13228	1					
ANR	13253	CompoundStatement		4:50:63:63	13228	3					
ANR	13254	IfStatement	if ( id == x11 -> randr . res -> crtcs [ i ] )		13228	0					
ANR	13255	Condition	id == x11 -> randr . res -> crtcs [ i ]	62:12:1667:1696	13228	0	True				
ANR	13256	EqualityExpression	id == x11 -> randr . res -> crtcs [ i ]		13228	0		==			
ANR	13257	Identifier	id		13228	0					
ANR	13258	ArrayIndexing	x11 -> randr . res -> crtcs [ i ]		13228	1					
ANR	13259	PtrMemberAccess	x11 -> randr . res -> crtcs		13228	0					
ANR	13260	MemberAccess	x11 -> randr . res		13228	0					
ANR	13261	PtrMemberAccess	x11 -> randr		13228	0					
ANR	13262	Identifier	x11		13228	0					
ANR	13263	Identifier	randr		13228	1					
ANR	13264	Identifier	res		13228	1					
ANR	13265	Identifier	crtcs		13228	1					
ANR	13266	Identifier	i		13228	1					
ANR	13267	CompoundStatement		5:44:109:109	13228	1					
ANR	13268	ReturnStatement	return x11 -> randr . crtcs [ i ] ;	63:12:1713:1739	13228	0	True				
ANR	13269	ArrayIndexing	x11 -> randr . crtcs [ i ]		13228	0					
ANR	13270	MemberAccess	x11 -> randr . crtcs		13228	0					
ANR	13271	PtrMemberAccess	x11 -> randr		13228	0					
ANR	13272	Identifier	x11		13228	0					
ANR	13273	Identifier	randr		13228	1					
ANR	13274	Identifier	crtcs		13228	1					
ANR	13275	Identifier	i		13228	1					
ANR	13276	ReturnStatement	return NULL ;	66:4:1761:1772	13228	2	True				
ANR	13277	Identifier	NULL		13228	0					
ANR	13278	ReturnType	static XRRCrtcInfo *		13228	1					
ANR	13279	Identifier	crtc_from_id		13228	2					
ANR	13280	ParameterList	"struct vdagent_x11 * x11 , int id"		13228	3					
ANR	13281	Parameter	struct vdagent_x11 * x11	57:33:1556:1578	13228	0	True				
ANR	13282	ParameterType	struct vdagent_x11 *		13228	0					
ANR	13283	Identifier	x11		13228	1					
ANR	13284	Parameter	int id	57:58:1581:1586	13228	1	True				
ANR	13285	ParameterType	int		13228	0					
ANR	13286	Identifier	id		13228	1					
ANR	13287	CFGEntryNode	ENTRY		13228		True				
ANR	13288	CFGExitNode	EXIT		13228		True				
ANR	13289	Symbol	* x11		13228						
ANR	13290	Symbol	NULL		13228						
ANR	13291	Symbol	x11 -> randr		13228						
ANR	13292	Symbol	x11 -> randr . crtcs		13228						
ANR	13293	Symbol	i		13228						
ANR	13294	Symbol	* x11 -> randr . res		13228						
ANR	13295	Symbol	* * x11		13228						
ANR	13296	Symbol	* x11 -> randr		13228						
ANR	13297	Symbol	* x11 -> randr . crtcs		13228						
ANR	13298	Symbol	x11 -> randr . res -> ncrtc		13228						
ANR	13299	Symbol	* i		13228						
ANR	13300	Symbol	x11 -> randr . res -> crtcs		13228						
ANR	13301	Symbol	* * x11 -> randr . res		13228						
ANR	13302	Symbol	* * * x11		13228						
ANR	13303	Symbol	x11		13228						
ANR	13304	Symbol	x11 -> randr . res		13228						
ANR	13305	Symbol	id		13228						
ANR	13306	Symbol	* * x11 -> randr		13228						
ANR	13307	Symbol	* x11 -> randr . res -> crtcs		13228						
ANR	13308	Function	free_randr_resources	69:0:1777:2450							
ANR	13309	FunctionDef	free_randr_resources (struct vdagent_x11 * x11)		13308	0					
ANR	13310	CompoundStatement		70:0:1835:2450	13308	0					
ANR	13311	IdentifierDeclStatement	int i ;	71:4:1841:1846	13308	0	True				
ANR	13312	IdentifierDecl	i		13308	0					
ANR	13313	IdentifierDeclType	int		13308	0					
ANR	13314	Identifier	i		13308	1					
ANR	13315	IfStatement	if ( ! x11 -> randr . res )		13308	1					
ANR	13316	Condition	! x11 -> randr . res	73:8:1857:1871	13308	0	True				
ANR	13317	UnaryOperationExpression	! x11 -> randr . res		13308	0					
ANR	13318	UnaryOperator	!		13308	0					
ANR	13319	MemberAccess	x11 -> randr . res		13308	1					
ANR	13320	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13321	Identifier	x11		13308	0					
ANR	13322	Identifier	randr		13308	1					
ANR	13323	Identifier	res		13308	1					
ANR	13324	CompoundStatement		4:25:38:38	13308	1					
ANR	13325	ReturnStatement	return ;	74:8:1884:1890	13308	0	True				
ANR	13326	IfStatement	if ( x11 -> randr . outputs != NULL )		13308	2					
ANR	13327	Condition	x11 -> randr . outputs != NULL	76:8:1906:1931	13308	0	True				
ANR	13328	EqualityExpression	x11 -> randr . outputs != NULL		13308	0		!=			
ANR	13329	MemberAccess	x11 -> randr . outputs		13308	0					
ANR	13330	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13331	Identifier	x11		13308	0					
ANR	13332	Identifier	randr		13308	1					
ANR	13333	Identifier	outputs		13308	1					
ANR	13334	Identifier	NULL		13308	1					
ANR	13335	CompoundStatement		7:36:98:98	13308	1					
ANR	13336	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> noutput ; ++ i )		13308	0					
ANR	13337	ForInit	i = 0 ;	77:13:1949:1955	13308	0	True				
ANR	13338	AssignmentExpression	i = 0		13308	0		=			
ANR	13339	Identifier	i		13308	0					
ANR	13340	PrimaryExpression	0		13308	1					
ANR	13341	Condition	i < x11 -> randr . res -> noutput	77:21:1957:1983	13308	1	True				
ANR	13342	RelationalExpression	i < x11 -> randr . res -> noutput		13308	0		<			
ANR	13343	Identifier	i		13308	0					
ANR	13344	PtrMemberAccess	x11 -> randr . res -> noutput		13308	1					
ANR	13345	MemberAccess	x11 -> randr . res		13308	0					
ANR	13346	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13347	Identifier	x11		13308	0					
ANR	13348	Identifier	randr		13308	1					
ANR	13349	Identifier	res		13308	1					
ANR	13350	Identifier	noutput		13308	1					
ANR	13351	UnaryExpression	++ i	77:50:1986:1988	13308	2	True				
ANR	13352	IncDec	++		13308	0					
ANR	13353	Identifier	i		13308	1					
ANR	13354	CompoundStatement		8:55:155:155	13308	3					
ANR	13355	ExpressionStatement	XRRFreeOutputInfo ( x11 -> randr . outputs [ i ] )	78:12:2005:2045	13308	0	True				
ANR	13356	CallExpression	XRRFreeOutputInfo ( x11 -> randr . outputs [ i ] )		13308	0					
ANR	13357	Callee	XRRFreeOutputInfo		13308	0					
ANR	13358	Identifier	XRRFreeOutputInfo		13308	0					
ANR	13359	ArgumentList	x11 -> randr . outputs [ i ]		13308	1					
ANR	13360	Argument	x11 -> randr . outputs [ i ]		13308	0					
ANR	13361	ArrayIndexing	x11 -> randr . outputs [ i ]		13308	0					
ANR	13362	MemberAccess	x11 -> randr . outputs		13308	0					
ANR	13363	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13364	Identifier	x11		13308	0					
ANR	13365	Identifier	randr		13308	1					
ANR	13366	Identifier	outputs		13308	1					
ANR	13367	Identifier	i		13308	1					
ANR	13368	ExpressionStatement	free ( x11 -> randr . outputs )	80:8:2065:2089	13308	1	True				
ANR	13369	CallExpression	free ( x11 -> randr . outputs )		13308	0					
ANR	13370	Callee	free		13308	0					
ANR	13371	Identifier	free		13308	0					
ANR	13372	ArgumentList	x11 -> randr . outputs		13308	1					
ANR	13373	Argument	x11 -> randr . outputs		13308	0					
ANR	13374	MemberAccess	x11 -> randr . outputs		13308	0					
ANR	13375	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13376	Identifier	x11		13308	0					
ANR	13377	Identifier	randr		13308	1					
ANR	13378	Identifier	outputs		13308	1					
ANR	13379	IfStatement	if ( x11 -> randr . crtcs != NULL )		13308	3					
ANR	13380	Condition	x11 -> randr . crtcs != NULL	82:8:2105:2128	13308	0	True				
ANR	13381	EqualityExpression	x11 -> randr . crtcs != NULL		13308	0		!=			
ANR	13382	MemberAccess	x11 -> randr . crtcs		13308	0					
ANR	13383	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13384	Identifier	x11		13308	0					
ANR	13385	Identifier	randr		13308	1					
ANR	13386	Identifier	crtcs		13308	1					
ANR	13387	Identifier	NULL		13308	1					
ANR	13388	CompoundStatement		13:34:295:295	13308	1					
ANR	13389	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> ncrtc ; ++ i )		13308	0					
ANR	13390	ForInit	i = 0 ;	83:13:2146:2152	13308	0	True				
ANR	13391	AssignmentExpression	i = 0		13308	0		=			
ANR	13392	Identifier	i		13308	0					
ANR	13393	PrimaryExpression	0		13308	1					
ANR	13394	Condition	i < x11 -> randr . res -> ncrtc	83:21:2154:2178	13308	1	True				
ANR	13395	RelationalExpression	i < x11 -> randr . res -> ncrtc		13308	0		<			
ANR	13396	Identifier	i		13308	0					
ANR	13397	PtrMemberAccess	x11 -> randr . res -> ncrtc		13308	1					
ANR	13398	MemberAccess	x11 -> randr . res		13308	0					
ANR	13399	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13400	Identifier	x11		13308	0					
ANR	13401	Identifier	randr		13308	1					
ANR	13402	Identifier	res		13308	1					
ANR	13403	Identifier	ncrtc		13308	1					
ANR	13404	UnaryExpression	++ i	83:48:2181:2183	13308	2	True				
ANR	13405	IncDec	++		13308	0					
ANR	13406	Identifier	i		13308	1					
ANR	13407	CompoundStatement		14:53:350:350	13308	3					
ANR	13408	ExpressionStatement	XRRFreeCrtcInfo ( x11 -> randr . crtcs [ i ] )	84:12:2200:2236	13308	0	True				
ANR	13409	CallExpression	XRRFreeCrtcInfo ( x11 -> randr . crtcs [ i ] )		13308	0					
ANR	13410	Callee	XRRFreeCrtcInfo		13308	0					
ANR	13411	Identifier	XRRFreeCrtcInfo		13308	0					
ANR	13412	ArgumentList	x11 -> randr . crtcs [ i ]		13308	1					
ANR	13413	Argument	x11 -> randr . crtcs [ i ]		13308	0					
ANR	13414	ArrayIndexing	x11 -> randr . crtcs [ i ]		13308	0					
ANR	13415	MemberAccess	x11 -> randr . crtcs		13308	0					
ANR	13416	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13417	Identifier	x11		13308	0					
ANR	13418	Identifier	randr		13308	1					
ANR	13419	Identifier	crtcs		13308	1					
ANR	13420	Identifier	i		13308	1					
ANR	13421	ExpressionStatement	free ( x11 -> randr . crtcs )	86:8:2256:2278	13308	1	True				
ANR	13422	CallExpression	free ( x11 -> randr . crtcs )		13308	0					
ANR	13423	Callee	free		13308	0					
ANR	13424	Identifier	free		13308	0					
ANR	13425	ArgumentList	x11 -> randr . crtcs		13308	1					
ANR	13426	Argument	x11 -> randr . crtcs		13308	0					
ANR	13427	MemberAccess	x11 -> randr . crtcs		13308	0					
ANR	13428	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13429	Identifier	x11		13308	0					
ANR	13430	Identifier	randr		13308	1					
ANR	13431	Identifier	crtcs		13308	1					
ANR	13432	ExpressionStatement	XRRFreeScreenResources ( x11 -> randr . res )	88:4:2290:2328	13308	4	True				
ANR	13433	CallExpression	XRRFreeScreenResources ( x11 -> randr . res )		13308	0					
ANR	13434	Callee	XRRFreeScreenResources		13308	0					
ANR	13435	Identifier	XRRFreeScreenResources		13308	0					
ANR	13436	ArgumentList	x11 -> randr . res		13308	1					
ANR	13437	Argument	x11 -> randr . res		13308	0					
ANR	13438	MemberAccess	x11 -> randr . res		13308	0					
ANR	13439	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13440	Identifier	x11		13308	0					
ANR	13441	Identifier	randr		13308	1					
ANR	13442	Identifier	res		13308	1					
ANR	13443	ExpressionStatement	x11 -> randr . res = NULL	89:4:2334:2355	13308	5	True				
ANR	13444	AssignmentExpression	x11 -> randr . res = NULL		13308	0		=			
ANR	13445	MemberAccess	x11 -> randr . res		13308	0					
ANR	13446	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13447	Identifier	x11		13308	0					
ANR	13448	Identifier	randr		13308	1					
ANR	13449	Identifier	res		13308	1					
ANR	13450	Identifier	NULL		13308	1					
ANR	13451	ExpressionStatement	x11 -> randr . outputs = NULL	90:4:2361:2386	13308	6	True				
ANR	13452	AssignmentExpression	x11 -> randr . outputs = NULL		13308	0		=			
ANR	13453	MemberAccess	x11 -> randr . outputs		13308	0					
ANR	13454	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13455	Identifier	x11		13308	0					
ANR	13456	Identifier	randr		13308	1					
ANR	13457	Identifier	outputs		13308	1					
ANR	13458	Identifier	NULL		13308	1					
ANR	13459	ExpressionStatement	x11 -> randr . crtcs = NULL	91:4:2392:2415	13308	7	True				
ANR	13460	AssignmentExpression	x11 -> randr . crtcs = NULL		13308	0		=			
ANR	13461	MemberAccess	x11 -> randr . crtcs		13308	0					
ANR	13462	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13463	Identifier	x11		13308	0					
ANR	13464	Identifier	randr		13308	1					
ANR	13465	Identifier	crtcs		13308	1					
ANR	13466	Identifier	NULL		13308	1					
ANR	13467	ExpressionStatement	x11 -> randr . num_monitors = 0	92:4:2421:2448	13308	8	True				
ANR	13468	AssignmentExpression	x11 -> randr . num_monitors = 0		13308	0		=			
ANR	13469	MemberAccess	x11 -> randr . num_monitors		13308	0					
ANR	13470	PtrMemberAccess	x11 -> randr		13308	0					
ANR	13471	Identifier	x11		13308	0					
ANR	13472	Identifier	randr		13308	1					
ANR	13473	Identifier	num_monitors		13308	1					
ANR	13474	PrimaryExpression	0		13308	1					
ANR	13475	ReturnType	static void		13308	1					
ANR	13476	Identifier	free_randr_resources		13308	2					
ANR	13477	ParameterList	struct vdagent_x11 * x11		13308	3					
ANR	13478	Parameter	struct vdagent_x11 * x11	69:33:1810:1832	13308	0	True				
ANR	13479	ParameterType	struct vdagent_x11 *		13308	0					
ANR	13480	Identifier	x11		13308	1					
ANR	13481	CFGEntryNode	ENTRY		13308		True				
ANR	13482	CFGExitNode	EXIT		13308		True				
ANR	13483	Symbol	* x11		13308						
ANR	13484	Symbol	NULL		13308						
ANR	13485	Symbol	x11 -> randr		13308						
ANR	13486	Symbol	x11 -> randr . crtcs		13308						
ANR	13487	Symbol	x11 -> randr . num_monitors		13308						
ANR	13488	Symbol	i		13308						
ANR	13489	Symbol	* * x11		13308						
ANR	13490	Symbol	* x11 -> randr . res		13308						
ANR	13491	Symbol	* x11 -> randr		13308						
ANR	13492	Symbol	* x11 -> randr . crtcs		13308						
ANR	13493	Symbol	x11 -> randr . res -> noutput		13308						
ANR	13494	Symbol	* x11 -> randr . outputs		13308						
ANR	13495	Symbol	x11 -> randr . res -> ncrtc		13308						
ANR	13496	Symbol	* i		13308						
ANR	13497	Symbol	x11		13308						
ANR	13498	Symbol	x11 -> randr . res		13308						
ANR	13499	Symbol	x11 -> randr . outputs		13308						
ANR	13500	Function	update_randr_res	95:0:2453:3869							
ANR	13501	FunctionDef	"update_randr_res (struct vdagent_x11 * x11 , int poll)"		13500	0					
ANR	13502	CompoundStatement		96:0:2517:3869	13500	0					
ANR	13503	IdentifierDeclStatement	int i ;	97:4:2523:2528	13500	0	True				
ANR	13504	IdentifierDecl	i		13500	0					
ANR	13505	IdentifierDeclType	int		13500	0					
ANR	13506	Identifier	i		13500	1					
ANR	13507	ExpressionStatement	free_randr_resources ( x11 )	99:4:2535:2560	13500	1	True				
ANR	13508	CallExpression	free_randr_resources ( x11 )		13500	0					
ANR	13509	Callee	free_randr_resources		13500	0					
ANR	13510	Identifier	free_randr_resources		13500	0					
ANR	13511	ArgumentList	x11		13500	1					
ANR	13512	Argument	x11		13500	0					
ANR	13513	Identifier	x11		13500	0					
ANR	13514	IfStatement	if ( poll )		13500	2					
ANR	13515	Condition	poll	100:8:2570:2573	13500	0	True				
ANR	13516	Identifier	poll		13500	0					
ANR	13517	ExpressionStatement	"x11 -> randr . res = XRRGetScreenResources ( x11 -> display , x11 -> root_window [ 0 ] )"	101:8:2584:2657	13500	1	True				
ANR	13518	AssignmentExpression	"x11 -> randr . res = XRRGetScreenResources ( x11 -> display , x11 -> root_window [ 0 ] )"		13500	0		=			
ANR	13519	MemberAccess	x11 -> randr . res		13500	0					
ANR	13520	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13521	Identifier	x11		13500	0					
ANR	13522	Identifier	randr		13500	1					
ANR	13523	Identifier	res		13500	1					
ANR	13524	CallExpression	"XRRGetScreenResources ( x11 -> display , x11 -> root_window [ 0 ] )"		13500	1					
ANR	13525	Callee	XRRGetScreenResources		13500	0					
ANR	13526	Identifier	XRRGetScreenResources		13500	0					
ANR	13527	ArgumentList	x11 -> display		13500	1					
ANR	13528	Argument	x11 -> display		13500	0					
ANR	13529	PtrMemberAccess	x11 -> display		13500	0					
ANR	13530	Identifier	x11		13500	0					
ANR	13531	Identifier	display		13500	1					
ANR	13532	Argument	x11 -> root_window [ 0 ]		13500	1					
ANR	13533	ArrayIndexing	x11 -> root_window [ 0 ]		13500	0					
ANR	13534	PtrMemberAccess	x11 -> root_window		13500	0					
ANR	13535	Identifier	x11		13500	0					
ANR	13536	Identifier	root_window		13500	1					
ANR	13537	PrimaryExpression	0		13500	1					
ANR	13538	ElseStatement	else		13500	0					
ANR	13539	ExpressionStatement	"x11 -> randr . res = XRRGetScreenResourcesCurrent ( x11 -> display , x11 -> root_window [ 0 ] )"	103:8:2676:2756	13500	0	True				
ANR	13540	AssignmentExpression	"x11 -> randr . res = XRRGetScreenResourcesCurrent ( x11 -> display , x11 -> root_window [ 0 ] )"		13500	0		=			
ANR	13541	MemberAccess	x11 -> randr . res		13500	0					
ANR	13542	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13543	Identifier	x11		13500	0					
ANR	13544	Identifier	randr		13500	1					
ANR	13545	Identifier	res		13500	1					
ANR	13546	CallExpression	"XRRGetScreenResourcesCurrent ( x11 -> display , x11 -> root_window [ 0 ] )"		13500	1					
ANR	13547	Callee	XRRGetScreenResourcesCurrent		13500	0					
ANR	13548	Identifier	XRRGetScreenResourcesCurrent		13500	0					
ANR	13549	ArgumentList	x11 -> display		13500	1					
ANR	13550	Argument	x11 -> display		13500	0					
ANR	13551	PtrMemberAccess	x11 -> display		13500	0					
ANR	13552	Identifier	x11		13500	0					
ANR	13553	Identifier	display		13500	1					
ANR	13554	Argument	x11 -> root_window [ 0 ]		13500	1					
ANR	13555	ArrayIndexing	x11 -> root_window [ 0 ]		13500	0					
ANR	13556	PtrMemberAccess	x11 -> root_window		13500	0					
ANR	13557	Identifier	x11		13500	0					
ANR	13558	Identifier	root_window		13500	1					
ANR	13559	PrimaryExpression	0		13500	1					
ANR	13560	ExpressionStatement	x11 -> randr . outputs = malloc ( x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs ) )	104:4:2762:2844	13500	3	True				
ANR	13561	AssignmentExpression	x11 -> randr . outputs = malloc ( x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs ) )		13500	0		=			
ANR	13562	MemberAccess	x11 -> randr . outputs		13500	0					
ANR	13563	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13564	Identifier	x11		13500	0					
ANR	13565	Identifier	randr		13500	1					
ANR	13566	Identifier	outputs		13500	1					
ANR	13567	CallExpression	malloc ( x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs ) )		13500	1					
ANR	13568	Callee	malloc		13500	0					
ANR	13569	Identifier	malloc		13500	0					
ANR	13570	ArgumentList	x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs )		13500	1					
ANR	13571	Argument	x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs )		13500	0					
ANR	13572	MultiplicativeExpression	x11 -> randr . res -> noutput * sizeof ( * x11 -> randr . outputs )		13500	0		*			
ANR	13573	PtrMemberAccess	x11 -> randr . res -> noutput		13500	0					
ANR	13574	MemberAccess	x11 -> randr . res		13500	0					
ANR	13575	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13576	Identifier	x11		13500	0					
ANR	13577	Identifier	randr		13500	1					
ANR	13578	Identifier	res		13500	1					
ANR	13579	Identifier	noutput		13500	1					
ANR	13580	SizeofExpression	sizeof ( * x11 -> randr . outputs )		13500	1					
ANR	13581	Sizeof	sizeof		13500	0					
ANR	13582	UnaryOperationExpression	* x11 -> randr . outputs		13500	1					
ANR	13583	UnaryOperator	*		13500	0					
ANR	13584	MemberAccess	x11 -> randr . outputs		13500	1					
ANR	13585	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13586	Identifier	x11		13500	0					
ANR	13587	Identifier	randr		13500	1					
ANR	13588	Identifier	outputs		13500	1					
ANR	13589	ExpressionStatement	x11 -> randr . crtcs = malloc ( x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs ) )	105:4:2850:2926	13500	4	True				
ANR	13590	AssignmentExpression	x11 -> randr . crtcs = malloc ( x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs ) )		13500	0		=			
ANR	13591	MemberAccess	x11 -> randr . crtcs		13500	0					
ANR	13592	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13593	Identifier	x11		13500	0					
ANR	13594	Identifier	randr		13500	1					
ANR	13595	Identifier	crtcs		13500	1					
ANR	13596	CallExpression	malloc ( x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs ) )		13500	1					
ANR	13597	Callee	malloc		13500	0					
ANR	13598	Identifier	malloc		13500	0					
ANR	13599	ArgumentList	x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs )		13500	1					
ANR	13600	Argument	x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs )		13500	0					
ANR	13601	MultiplicativeExpression	x11 -> randr . res -> ncrtc * sizeof ( * x11 -> randr . crtcs )		13500	0		*			
ANR	13602	PtrMemberAccess	x11 -> randr . res -> ncrtc		13500	0					
ANR	13603	MemberAccess	x11 -> randr . res		13500	0					
ANR	13604	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13605	Identifier	x11		13500	0					
ANR	13606	Identifier	randr		13500	1					
ANR	13607	Identifier	res		13500	1					
ANR	13608	Identifier	ncrtc		13500	1					
ANR	13609	SizeofExpression	sizeof ( * x11 -> randr . crtcs )		13500	1					
ANR	13610	Sizeof	sizeof		13500	0					
ANR	13611	UnaryOperationExpression	* x11 -> randr . crtcs		13500	1					
ANR	13612	UnaryOperator	*		13500	0					
ANR	13613	MemberAccess	x11 -> randr . crtcs		13500	1					
ANR	13614	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13615	Identifier	x11		13500	0					
ANR	13616	Identifier	randr		13500	1					
ANR	13617	Identifier	crtcs		13500	1					
ANR	13618	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> noutput ; ++ i )		13500	5					
ANR	13619	ForInit	i = 0 ;	106:9:2937:2943	13500	0	True				
ANR	13620	AssignmentExpression	i = 0		13500	0		=			
ANR	13621	Identifier	i		13500	0					
ANR	13622	PrimaryExpression	0		13500	1					
ANR	13623	Condition	i < x11 -> randr . res -> noutput	106:17:2945:2971	13500	1	True				
ANR	13624	RelationalExpression	i < x11 -> randr . res -> noutput		13500	0		<			
ANR	13625	Identifier	i		13500	0					
ANR	13626	PtrMemberAccess	x11 -> randr . res -> noutput		13500	1					
ANR	13627	MemberAccess	x11 -> randr . res		13500	0					
ANR	13628	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13629	Identifier	x11		13500	0					
ANR	13630	Identifier	randr		13500	1					
ANR	13631	Identifier	res		13500	1					
ANR	13632	Identifier	noutput		13500	1					
ANR	13633	UnaryExpression	++ i	106:46:2974:2976	13500	2	True				
ANR	13634	IncDec	++		13500	0					
ANR	13635	Identifier	i		13500	1					
ANR	13636	CompoundStatement		11:51:461:461	13500	3					
ANR	13637	ExpressionStatement	"x11 -> randr . outputs [ i ] = XRRGetOutputInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> outputs [ i ] )"	107:8:2989:3136	13500	0	True				
ANR	13638	AssignmentExpression	"x11 -> randr . outputs [ i ] = XRRGetOutputInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> outputs [ i ] )"		13500	0		=			
ANR	13639	ArrayIndexing	x11 -> randr . outputs [ i ]		13500	0					
ANR	13640	MemberAccess	x11 -> randr . outputs		13500	0					
ANR	13641	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13642	Identifier	x11		13500	0					
ANR	13643	Identifier	randr		13500	1					
ANR	13644	Identifier	outputs		13500	1					
ANR	13645	Identifier	i		13500	1					
ANR	13646	CallExpression	"XRRGetOutputInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> outputs [ i ] )"		13500	1					
ANR	13647	Callee	XRRGetOutputInfo		13500	0					
ANR	13648	Identifier	XRRGetOutputInfo		13500	0					
ANR	13649	ArgumentList	x11 -> display		13500	1					
ANR	13650	Argument	x11 -> display		13500	0					
ANR	13651	PtrMemberAccess	x11 -> display		13500	0					
ANR	13652	Identifier	x11		13500	0					
ANR	13653	Identifier	display		13500	1					
ANR	13654	Argument	x11 -> randr . res		13500	1					
ANR	13655	MemberAccess	x11 -> randr . res		13500	0					
ANR	13656	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13657	Identifier	x11		13500	0					
ANR	13658	Identifier	randr		13500	1					
ANR	13659	Identifier	res		13500	1					
ANR	13660	Argument	x11 -> randr . res -> outputs [ i ]		13500	2					
ANR	13661	ArrayIndexing	x11 -> randr . res -> outputs [ i ]		13500	0					
ANR	13662	PtrMemberAccess	x11 -> randr . res -> outputs		13500	0					
ANR	13663	MemberAccess	x11 -> randr . res		13500	0					
ANR	13664	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13665	Identifier	x11		13500	0					
ANR	13666	Identifier	randr		13500	1					
ANR	13667	Identifier	res		13500	1					
ANR	13668	Identifier	outputs		13500	1					
ANR	13669	Identifier	i		13500	1					
ANR	13670	IfStatement	if ( x11 -> randr . outputs [ i ] -> connection == RR_Connected )		13500	1					
ANR	13671	Condition	x11 -> randr . outputs [ i ] -> connection == RR_Connected	109:12:3150:3198	13500	0	True				
ANR	13672	EqualityExpression	x11 -> randr . outputs [ i ] -> connection == RR_Connected		13500	0		==			
ANR	13673	PtrMemberAccess	x11 -> randr . outputs [ i ] -> connection		13500	0					
ANR	13674	ArrayIndexing	x11 -> randr . outputs [ i ]		13500	0					
ANR	13675	MemberAccess	x11 -> randr . outputs		13500	0					
ANR	13676	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13677	Identifier	x11		13500	0					
ANR	13678	Identifier	randr		13500	1					
ANR	13679	Identifier	outputs		13500	1					
ANR	13680	Identifier	i		13500	1					
ANR	13681	Identifier	connection		13500	1					
ANR	13682	Identifier	RR_Connected		13500	1					
ANR	13683	ExpressionStatement	x11 -> randr . num_monitors ++	110:12:3213:3238	13500	1	True				
ANR	13684	PostIncDecOperationExpression	x11 -> randr . num_monitors ++		13500	0					
ANR	13685	MemberAccess	x11 -> randr . num_monitors		13500	0					
ANR	13686	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13687	Identifier	x11		13500	0					
ANR	13688	Identifier	randr		13500	1					
ANR	13689	Identifier	num_monitors		13500	1					
ANR	13690	IncDec	++		13500	1					
ANR	13691	ForStatement	for ( i = 0 ; i < x11 -> randr . res -> ncrtc ; ++ i )		13500	6					
ANR	13692	ForInit	i = 0 ;	112:9:3255:3261	13500	0	True				
ANR	13693	AssignmentExpression	i = 0		13500	0		=			
ANR	13694	Identifier	i		13500	0					
ANR	13695	PrimaryExpression	0		13500	1					
ANR	13696	Condition	i < x11 -> randr . res -> ncrtc	112:17:3263:3287	13500	1	True				
ANR	13697	RelationalExpression	i < x11 -> randr . res -> ncrtc		13500	0		<			
ANR	13698	Identifier	i		13500	0					
ANR	13699	PtrMemberAccess	x11 -> randr . res -> ncrtc		13500	1					
ANR	13700	MemberAccess	x11 -> randr . res		13500	0					
ANR	13701	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13702	Identifier	x11		13500	0					
ANR	13703	Identifier	randr		13500	1					
ANR	13704	Identifier	res		13500	1					
ANR	13705	Identifier	ncrtc		13500	1					
ANR	13706	UnaryExpression	++ i	112:44:3290:3292	13500	2	True				
ANR	13707	IncDec	++		13500	0					
ANR	13708	Identifier	i		13500	1					
ANR	13709	CompoundStatement		17:49:777:777	13500	3					
ANR	13710	ExpressionStatement	"x11 -> randr . crtcs [ i ] = XRRGetCrtcInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ i ] )"	113:8:3305:3442	13500	0	True				
ANR	13711	AssignmentExpression	"x11 -> randr . crtcs [ i ] = XRRGetCrtcInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ i ] )"		13500	0		=			
ANR	13712	ArrayIndexing	x11 -> randr . crtcs [ i ]		13500	0					
ANR	13713	MemberAccess	x11 -> randr . crtcs		13500	0					
ANR	13714	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13715	Identifier	x11		13500	0					
ANR	13716	Identifier	randr		13500	1					
ANR	13717	Identifier	crtcs		13500	1					
ANR	13718	Identifier	i		13500	1					
ANR	13719	CallExpression	"XRRGetCrtcInfo ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ i ] )"		13500	1					
ANR	13720	Callee	XRRGetCrtcInfo		13500	0					
ANR	13721	Identifier	XRRGetCrtcInfo		13500	0					
ANR	13722	ArgumentList	x11 -> display		13500	1					
ANR	13723	Argument	x11 -> display		13500	0					
ANR	13724	PtrMemberAccess	x11 -> display		13500	0					
ANR	13725	Identifier	x11		13500	0					
ANR	13726	Identifier	display		13500	1					
ANR	13727	Argument	x11 -> randr . res		13500	1					
ANR	13728	MemberAccess	x11 -> randr . res		13500	0					
ANR	13729	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13730	Identifier	x11		13500	0					
ANR	13731	Identifier	randr		13500	1					
ANR	13732	Identifier	res		13500	1					
ANR	13733	Argument	x11 -> randr . res -> crtcs [ i ]		13500	2					
ANR	13734	ArrayIndexing	x11 -> randr . res -> crtcs [ i ]		13500	0					
ANR	13735	PtrMemberAccess	x11 -> randr . res -> crtcs		13500	0					
ANR	13736	MemberAccess	x11 -> randr . res		13500	0					
ANR	13737	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13738	Identifier	x11		13500	0					
ANR	13739	Identifier	randr		13500	1					
ANR	13740	Identifier	res		13500	1					
ANR	13741	Identifier	crtcs		13500	1					
ANR	13742	Identifier	i		13500	1					
ANR	13743	IfStatement	"if ( XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height ) != 1 )"		13500	7					
ANR	13744	Condition	"XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height ) != 1"	117:8:3510:3784	13500	0	True				
ANR	13745	EqualityExpression	"XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height ) != 1"		13500	0		!=			
ANR	13746	CallExpression	"XRRGetScreenSizeRange ( x11 -> display , x11 -> root_window [ 0 ] , & x11 -> randr . min_width , & x11 -> randr . min_height , & x11 -> randr . max_width , & x11 -> randr . max_height )"		13500	0					
ANR	13747	Callee	XRRGetScreenSizeRange		13500	0					
ANR	13748	Identifier	XRRGetScreenSizeRange		13500	0					
ANR	13749	ArgumentList	x11 -> display		13500	1					
ANR	13750	Argument	x11 -> display		13500	0					
ANR	13751	PtrMemberAccess	x11 -> display		13500	0					
ANR	13752	Identifier	x11		13500	0					
ANR	13753	Identifier	display		13500	1					
ANR	13754	Argument	x11 -> root_window [ 0 ]		13500	1					
ANR	13755	ArrayIndexing	x11 -> root_window [ 0 ]		13500	0					
ANR	13756	PtrMemberAccess	x11 -> root_window		13500	0					
ANR	13757	Identifier	x11		13500	0					
ANR	13758	Identifier	root_window		13500	1					
ANR	13759	PrimaryExpression	0		13500	1					
ANR	13760	Argument	& x11 -> randr . min_width		13500	2					
ANR	13761	UnaryOperationExpression	& x11 -> randr . min_width		13500	0					
ANR	13762	UnaryOperator	&		13500	0					
ANR	13763	MemberAccess	x11 -> randr . min_width		13500	1					
ANR	13764	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13765	Identifier	x11		13500	0					
ANR	13766	Identifier	randr		13500	1					
ANR	13767	Identifier	min_width		13500	1					
ANR	13768	Argument	& x11 -> randr . min_height		13500	3					
ANR	13769	UnaryOperationExpression	& x11 -> randr . min_height		13500	0					
ANR	13770	UnaryOperator	&		13500	0					
ANR	13771	MemberAccess	x11 -> randr . min_height		13500	1					
ANR	13772	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13773	Identifier	x11		13500	0					
ANR	13774	Identifier	randr		13500	1					
ANR	13775	Identifier	min_height		13500	1					
ANR	13776	Argument	& x11 -> randr . max_width		13500	4					
ANR	13777	UnaryOperationExpression	& x11 -> randr . max_width		13500	0					
ANR	13778	UnaryOperator	&		13500	0					
ANR	13779	MemberAccess	x11 -> randr . max_width		13500	1					
ANR	13780	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13781	Identifier	x11		13500	0					
ANR	13782	Identifier	randr		13500	1					
ANR	13783	Identifier	max_width		13500	1					
ANR	13784	Argument	& x11 -> randr . max_height		13500	5					
ANR	13785	UnaryOperationExpression	& x11 -> randr . max_height		13500	0					
ANR	13786	UnaryOperator	&		13500	0					
ANR	13787	MemberAccess	x11 -> randr . max_height		13500	1					
ANR	13788	PtrMemberAccess	x11 -> randr		13500	0					
ANR	13789	Identifier	x11		13500	0					
ANR	13790	Identifier	randr		13500	1					
ANR	13791	Identifier	max_height		13500	1					
ANR	13792	PrimaryExpression	1		13500	1					
ANR	13793	CompoundStatement		26:60:1269:1269	13500	1					
ANR	13794	ExpressionStatement	"syslog ( LOG_ERR , ""update_randr_res: RRGetScreenSizeRange failed"" )"	122:8:3797:3861	13500	0	True				
ANR	13795	CallExpression	"syslog ( LOG_ERR , ""update_randr_res: RRGetScreenSizeRange failed"" )"		13500	0					
ANR	13796	Callee	syslog		13500	0					
ANR	13797	Identifier	syslog		13500	0					
ANR	13798	ArgumentList	LOG_ERR		13500	1					
ANR	13799	Argument	LOG_ERR		13500	0					
ANR	13800	Identifier	LOG_ERR		13500	0					
ANR	13801	Argument	"""update_randr_res: RRGetScreenSizeRange failed"""		13500	1					
ANR	13802	PrimaryExpression	"""update_randr_res: RRGetScreenSizeRange failed"""		13500	0					
ANR	13803	ReturnType	static void		13500	1					
ANR	13804	Identifier	update_randr_res		13500	2					
ANR	13805	ParameterList	"struct vdagent_x11 * x11 , int poll"		13500	3					
ANR	13806	Parameter	struct vdagent_x11 * x11	95:29:2482:2504	13500	0	True				
ANR	13807	ParameterType	struct vdagent_x11 *		13500	0					
ANR	13808	Identifier	x11		13500	1					
ANR	13809	Parameter	int poll	95:54:2507:2514	13500	1	True				
ANR	13810	ParameterType	int		13500	0					
ANR	13811	Identifier	poll		13500	1					
ANR	13812	CFGEntryNode	ENTRY		13500		True				
ANR	13813	CFGExitNode	EXIT		13500		True				
ANR	13814	Symbol	* x11 -> randr . res -> outputs		13500						
ANR	13815	Symbol	* x11		13500						
ANR	13816	Symbol	x11 -> randr		13500						
ANR	13817	Symbol	x11 -> randr . crtcs		13500						
ANR	13818	Symbol	x11 -> randr . num_monitors		13500						
ANR	13819	Symbol	& x11 -> randr . max_width		13500						
ANR	13820	Symbol	poll		13500						
ANR	13821	Symbol	x11 -> root_window		13500						
ANR	13822	Symbol	* x11 -> randr . res		13500						
ANR	13823	Symbol	x11 -> randr . res -> noutput		13500						
ANR	13824	Symbol	* x11 -> randr . outputs		13500						
ANR	13825	Symbol	* * x11 -> randr . outputs		13500						
ANR	13826	Symbol	* * x11 -> randr . res		13500						
ANR	13827	Symbol	* * * x11		13500						
ANR	13828	Symbol	LOG_ERR		13500						
ANR	13829	Symbol	* x11 -> root_window		13500						
ANR	13830	Symbol	x11		13500						
ANR	13831	Symbol	& x11 -> randr . min_width		13500						
ANR	13832	Symbol	& x11 -> randr		13500						
ANR	13833	Symbol	* * x11 -> randr		13500						
ANR	13834	Symbol	x11 -> randr . res -> outputs		13500						
ANR	13835	Symbol	& x11 -> randr . min_height		13500						
ANR	13836	Symbol	malloc		13500						
ANR	13837	Symbol	* * i		13500						
ANR	13838	Symbol	XRRGetScreenResourcesCurrent		13500						
ANR	13839	Symbol	i		13500						
ANR	13840	Symbol	XRRGetOutputInfo		13500						
ANR	13841	Symbol	XRRGetCrtcInfo		13500						
ANR	13842	Symbol	XRRGetScreenResources		13500						
ANR	13843	Symbol	* * x11		13500						
ANR	13844	Symbol	* x11 -> randr		13500						
ANR	13845	Symbol	* x11 -> randr . crtcs		13500						
ANR	13846	Symbol	x11 -> randr . outputs [ i ] -> connection		13500						
ANR	13847	Symbol	x11 -> randr . res -> ncrtc		13500						
ANR	13848	Symbol	XRRGetScreenSizeRange		13500						
ANR	13849	Symbol	x11 -> display		13500						
ANR	13850	Symbol	* i		13500						
ANR	13851	Symbol	& x11 -> randr . max_height		13500						
ANR	13852	Symbol	x11 -> randr . res -> crtcs		13500						
ANR	13853	Symbol	x11 -> randr . res		13500						
ANR	13854	Symbol	x11 -> randr . outputs		13500						
ANR	13855	Symbol	RR_Connected		13500						
ANR	13856	Symbol	* x11 -> randr . res -> crtcs		13500						
ANR	13857	Function	vdagent_x11_randr_init	126:0:3872:5223							
ANR	13858	FunctionDef	vdagent_x11_randr_init (struct vdagent_x11 * x11)		13857	0					
ANR	13859	CompoundStatement		127:0:3925:5223	13857	0					
ANR	13860	IdentifierDeclStatement	int i ;	128:4:3931:3936	13857	0	True				
ANR	13861	IdentifierDecl	i		13857	0					
ANR	13862	IdentifierDeclType	int		13857	0					
ANR	13863	Identifier	i		13857	1					
ANR	13864	IfStatement	if ( x11 -> screen_count > 1 )		13857	1					
ANR	13865	Condition	x11 -> screen_count > 1	130:8:3947:3967	13857	0	True				
ANR	13866	RelationalExpression	x11 -> screen_count > 1		13857	0		>			
ANR	13867	PtrMemberAccess	x11 -> screen_count		13857	0					
ANR	13868	Identifier	x11		13857	0					
ANR	13869	Identifier	screen_count		13857	1					
ANR	13870	PrimaryExpression	1		13857	1					
ANR	13871	CompoundStatement		4:31:44:44	13857	1					
ANR	13872	Statement	syslog	131:8:3980:3985	13857	0	True				
ANR	13873	Statement	(	131:14:3986:3986	13857	1	True				
ANR	13874	Statement	LOG_WARNING	131:15:3987:3997	13857	2	True				
ANR	13875	Statement	","	131:26:3998:3998	13857	3	True				
ANR	13876	Statement	"""X-server has more than 1 screen, """	131:28:4000:4034	13857	4	True				
ANR	13877	Statement	"""disabling client -> guest resolution syncing"""	132:15:4051:4096	13857	5	True				
ANR	13878	Statement	)	132:61:4097:4097	13857	6	True				
ANR	13879	ExpressionStatement		132:62:4098:4098	13857	7	True				
ANR	13880	ReturnStatement	return ;	133:8:4108:4114	13857	8	True				
ANR	13881	IfStatement	"if ( XRRQueryExtension ( x11 -> display , & x11 -> xrandr_event_base , & i ) )"		13857	2					
ANR	13882	Condition	"XRRQueryExtension ( x11 -> display , & x11 -> xrandr_event_base , & i )"	136:8:4131:4190	13857	0	True				
ANR	13883	CallExpression	"XRRQueryExtension ( x11 -> display , & x11 -> xrandr_event_base , & i )"		13857	0					
ANR	13884	Callee	XRRQueryExtension		13857	0					
ANR	13885	Identifier	XRRQueryExtension		13857	0					
ANR	13886	ArgumentList	x11 -> display		13857	1					
ANR	13887	Argument	x11 -> display		13857	0					
ANR	13888	PtrMemberAccess	x11 -> display		13857	0					
ANR	13889	Identifier	x11		13857	0					
ANR	13890	Identifier	display		13857	1					
ANR	13891	Argument	& x11 -> xrandr_event_base		13857	1					
ANR	13892	UnaryOperationExpression	& x11 -> xrandr_event_base		13857	0					
ANR	13893	UnaryOperator	&		13857	0					
ANR	13894	PtrMemberAccess	x11 -> xrandr_event_base		13857	1					
ANR	13895	Identifier	x11		13857	0					
ANR	13896	Identifier	xrandr_event_base		13857	1					
ANR	13897	Argument	& i		13857	2					
ANR	13898	UnaryOperationExpression	& i		13857	0					
ANR	13899	UnaryOperator	&		13857	0					
ANR	13900	Identifier	i		13857	1					
ANR	13901	CompoundStatement		10:70:267:267	13857	1					
ANR	13902	ExpressionStatement	"XRRQueryVersion ( x11 -> display , & x11 -> xrandr_major , & x11 -> xrandr_minor )"	137:8:4203:4272	13857	0	True				
ANR	13903	CallExpression	"XRRQueryVersion ( x11 -> display , & x11 -> xrandr_major , & x11 -> xrandr_minor )"		13857	0					
ANR	13904	Callee	XRRQueryVersion		13857	0					
ANR	13905	Identifier	XRRQueryVersion		13857	0					
ANR	13906	ArgumentList	x11 -> display		13857	1					
ANR	13907	Argument	x11 -> display		13857	0					
ANR	13908	PtrMemberAccess	x11 -> display		13857	0					
ANR	13909	Identifier	x11		13857	0					
ANR	13910	Identifier	display		13857	1					
ANR	13911	Argument	& x11 -> xrandr_major		13857	1					
ANR	13912	UnaryOperationExpression	& x11 -> xrandr_major		13857	0					
ANR	13913	UnaryOperator	&		13857	0					
ANR	13914	PtrMemberAccess	x11 -> xrandr_major		13857	1					
ANR	13915	Identifier	x11		13857	0					
ANR	13916	Identifier	xrandr_major		13857	1					
ANR	13917	Argument	& x11 -> xrandr_minor		13857	2					
ANR	13918	UnaryOperationExpression	& x11 -> xrandr_minor		13857	0					
ANR	13919	UnaryOperator	&		13857	0					
ANR	13920	PtrMemberAccess	x11 -> xrandr_minor		13857	1					
ANR	13921	Identifier	x11		13857	0					
ANR	13922	Identifier	xrandr_minor		13857	1					
ANR	13923	IfStatement	if ( x11 -> xrandr_major == 1 && x11 -> xrandr_minor >= 3 )		13857	1					
ANR	13924	Condition	x11 -> xrandr_major == 1 && x11 -> xrandr_minor >= 3	138:12:4286:4333	13857	0	True				
ANR	13925	AndExpression	x11 -> xrandr_major == 1 && x11 -> xrandr_minor >= 3		13857	0		&&			
ANR	13926	EqualityExpression	x11 -> xrandr_major == 1		13857	0		==			
ANR	13927	PtrMemberAccess	x11 -> xrandr_major		13857	0					
ANR	13928	Identifier	x11		13857	0					
ANR	13929	Identifier	xrandr_major		13857	1					
ANR	13930	PrimaryExpression	1		13857	1					
ANR	13931	RelationalExpression	x11 -> xrandr_minor >= 3		13857	1		>=			
ANR	13932	PtrMemberAccess	x11 -> xrandr_minor		13857	0					
ANR	13933	Identifier	x11		13857	0					
ANR	13934	Identifier	xrandr_minor		13857	1					
ANR	13935	PrimaryExpression	3		13857	1					
ANR	13936	ExpressionStatement	x11 -> has_xrandr = 1	139:12:4348:4367	13857	1	True				
ANR	13937	AssignmentExpression	x11 -> has_xrandr = 1		13857	0		=			
ANR	13938	PtrMemberAccess	x11 -> has_xrandr		13857	0					
ANR	13939	Identifier	x11		13857	0					
ANR	13940	Identifier	has_xrandr		13857	1					
ANR	13941	PrimaryExpression	1		13857	1					
ANR	13942	ExpressionStatement	"XRRSelectInput ( x11 -> display , x11 -> root_window [ 0 ] , RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask )"	142:4:4380:4488	13857	3	True				
ANR	13943	CallExpression	"XRRSelectInput ( x11 -> display , x11 -> root_window [ 0 ] , RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask )"		13857	0					
ANR	13944	Callee	XRRSelectInput		13857	0					
ANR	13945	Identifier	XRRSelectInput		13857	0					
ANR	13946	ArgumentList	x11 -> display		13857	1					
ANR	13947	Argument	x11 -> display		13857	0					
ANR	13948	PtrMemberAccess	x11 -> display		13857	0					
ANR	13949	Identifier	x11		13857	0					
ANR	13950	Identifier	display		13857	1					
ANR	13951	Argument	x11 -> root_window [ 0 ]		13857	1					
ANR	13952	ArrayIndexing	x11 -> root_window [ 0 ]		13857	0					
ANR	13953	PtrMemberAccess	x11 -> root_window		13857	0					
ANR	13954	Identifier	x11		13857	0					
ANR	13955	Identifier	root_window		13857	1					
ANR	13956	PrimaryExpression	0		13857	1					
ANR	13957	Argument	RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask		13857	2					
ANR	13958	InclusiveOrExpression	RRScreenChangeNotifyMask | RRCrtcChangeNotifyMask		13857	0		|			
ANR	13959	Identifier	RRScreenChangeNotifyMask		13857	0					
ANR	13960	Identifier	RRCrtcChangeNotifyMask		13857	1					
ANR	13961	IfStatement	if ( x11 -> has_xrandr )		13857	4					
ANR	13962	Condition	x11 -> has_xrandr	145:8:4499:4513	13857	0	True				
ANR	13963	PtrMemberAccess	x11 -> has_xrandr		13857	0					
ANR	13964	Identifier	x11		13857	0					
ANR	13965	Identifier	has_xrandr		13857	1					
ANR	13966	CompoundStatement		19:25:590:590	13857	1					
ANR	13967	ExpressionStatement	"update_randr_res ( x11 , 0 )"	146:8:4526:4550	13857	0	True				
ANR	13968	CallExpression	"update_randr_res ( x11 , 0 )"		13857	0					
ANR	13969	Callee	update_randr_res		13857	0					
ANR	13970	Identifier	update_randr_res		13857	0					
ANR	13971	ArgumentList	x11		13857	1					
ANR	13972	Argument	x11		13857	0					
ANR	13973	Identifier	x11		13857	0					
ANR	13974	Argument	0		13857	1					
ANR	13975	PrimaryExpression	0		13857	0					
ANR	13976	ElseStatement	else		13857	0					
ANR	13977	CompoundStatement		21:11:637:637	13857	0					
ANR	13978	ExpressionStatement	x11 -> randr . res = NULL	148:8:4573:4594	13857	0	True				
ANR	13979	AssignmentExpression	x11 -> randr . res = NULL		13857	0		=			
ANR	13980	MemberAccess	x11 -> randr . res		13857	0					
ANR	13981	PtrMemberAccess	x11 -> randr		13857	0					
ANR	13982	Identifier	x11		13857	0					
ANR	13983	Identifier	randr		13857	1					
ANR	13984	Identifier	res		13857	1					
ANR	13985	Identifier	NULL		13857	1					
ANR	13986	IfStatement	"if ( XineramaQueryExtension ( x11 -> display , & i , & i ) )"		13857	5					
ANR	13987	Condition	"XineramaQueryExtension ( x11 -> display , & i , & i )"	151:8:4611:4654	13857	0	True				
ANR	13988	CallExpression	"XineramaQueryExtension ( x11 -> display , & i , & i )"		13857	0					
ANR	13989	Callee	XineramaQueryExtension		13857	0					
ANR	13990	Identifier	XineramaQueryExtension		13857	0					
ANR	13991	ArgumentList	x11 -> display		13857	1					
ANR	13992	Argument	x11 -> display		13857	0					
ANR	13993	PtrMemberAccess	x11 -> display		13857	0					
ANR	13994	Identifier	x11		13857	0					
ANR	13995	Identifier	display		13857	1					
ANR	13996	Argument	& i		13857	1					
ANR	13997	UnaryOperationExpression	& i		13857	0					
ANR	13998	UnaryOperator	&		13857	0					
ANR	13999	Identifier	i		13857	1					
ANR	14000	Argument	& i		13857	2					
ANR	14001	UnaryOperationExpression	& i		13857	0					
ANR	14002	UnaryOperator	&		13857	0					
ANR	14003	Identifier	i		13857	1					
ANR	14004	ExpressionStatement	x11 -> has_xinerama = 1	152:8:4665:4686	13857	1	True				
ANR	14005	AssignmentExpression	x11 -> has_xinerama = 1		13857	0		=			
ANR	14006	PtrMemberAccess	x11 -> has_xinerama		13857	0					
ANR	14007	Identifier	x11		13857	0					
ANR	14008	Identifier	has_xinerama		13857	1					
ANR	14009	PrimaryExpression	1		13857	1					
ANR	14010	SwitchStatement	switch ( x11 -> has_xrandr << 4 | x11 -> has_xinerama )		13857	6					
ANR	14011	Condition	x11 -> has_xrandr << 4 | x11 -> has_xinerama	154:12:4701:4740	13857	0	True				
ANR	14012	InclusiveOrExpression	x11 -> has_xrandr << 4 | x11 -> has_xinerama		13857	0		|			
ANR	14013	ShiftExpression	x11 -> has_xrandr << 4		13857	0		<<			
ANR	14014	PtrMemberAccess	x11 -> has_xrandr		13857	0					
ANR	14015	Identifier	x11		13857	0					
ANR	14016	Identifier	has_xrandr		13857	1					
ANR	14017	PrimaryExpression	4		13857	1					
ANR	14018	PtrMemberAccess	x11 -> has_xinerama		13857	1					
ANR	14019	Identifier	x11		13857	0					
ANR	14020	Identifier	has_xinerama		13857	1					
ANR	14021	CompoundStatement		28:54:817:817	13857	1					
ANR	14022	Label	case 0x00 :	155:4:4749:4758	13857	0	True				
ANR	14023	ExpressionStatement	"syslog ( LOG_ERR , ""Neither Xrandr nor Xinerama found, assuming single monitor setup"" )"	156:8:4768:4851	13857	1	True				
ANR	14024	CallExpression	"syslog ( LOG_ERR , ""Neither Xrandr nor Xinerama found, assuming single monitor setup"" )"		13857	0					
ANR	14025	Callee	syslog		13857	0					
ANR	14026	Identifier	syslog		13857	0					
ANR	14027	ArgumentList	LOG_ERR		13857	1					
ANR	14028	Argument	LOG_ERR		13857	0					
ANR	14029	Identifier	LOG_ERR		13857	0					
ANR	14030	Argument	"""Neither Xrandr nor Xinerama found, assuming single monitor setup"""		13857	1					
ANR	14031	PrimaryExpression	"""Neither Xrandr nor Xinerama found, assuming single monitor setup"""		13857	0					
ANR	14032	BreakStatement	break ;	157:8:4861:4866	13857	2	True				
ANR	14033	Label	case 0x01 :	158:4:4872:4881	13857	3	True				
ANR	14034	IfStatement	if ( x11 -> debug )		13857	4					
ANR	14035	Condition	x11 -> debug	159:12:4895:4904	13857	0	True				
ANR	14036	PtrMemberAccess	x11 -> debug		13857	0					
ANR	14037	Identifier	x11		13857	0					
ANR	14038	Identifier	debug		13857	1					
ANR	14039	ExpressionStatement	"syslog ( LOG_DEBUG , ""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"" )"	160:12:4919:5018	13857	1	True				
ANR	14040	CallExpression	"syslog ( LOG_DEBUG , ""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"" )"		13857	0					
ANR	14041	Callee	syslog		13857	0					
ANR	14042	Identifier	syslog		13857	0					
ANR	14043	ArgumentList	LOG_DEBUG		13857	1					
ANR	14044	Argument	LOG_DEBUG		13857	0					
ANR	14045	Identifier	LOG_DEBUG		13857	0					
ANR	14046	Argument	"""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"""		13857	1					
ANR	14047	PrimaryExpression	"""Found Xinerama extension without Xrandr, assuming Xinerama multi monitor setup"""		13857	0					
ANR	14048	BreakStatement	break ;	161:8:5028:5033	13857	5	True				
ANR	14049	Label	case 0x10 :	162:4:5039:5048	13857	6	True				
ANR	14050	ExpressionStatement	"syslog ( LOG_ERR , ""Found Xrandr but no Xinerama, weird!"" )"	163:8:5058:5113	13857	7	True				
ANR	14051	CallExpression	"syslog ( LOG_ERR , ""Found Xrandr but no Xinerama, weird!"" )"		13857	0					
ANR	14052	Callee	syslog		13857	0					
ANR	14053	Identifier	syslog		13857	0					
ANR	14054	ArgumentList	LOG_ERR		13857	1					
ANR	14055	Argument	LOG_ERR		13857	0					
ANR	14056	Identifier	LOG_ERR		13857	0					
ANR	14057	Argument	"""Found Xrandr but no Xinerama, weird!"""		13857	1					
ANR	14058	PrimaryExpression	"""Found Xrandr but no Xinerama, weird!"""		13857	0					
ANR	14059	BreakStatement	break ;	164:8:5123:5128	13857	8	True				
ANR	14060	Label	case 0x11 :	165:4:5134:5143	13857	9	True				
ANR	14061	BreakStatement	break ;	167:8:5210:5215	13857	10	True				
ANR	14062	ReturnType	void		13857	1					
ANR	14063	Identifier	vdagent_x11_randr_init		13857	2					
ANR	14064	ParameterList	struct vdagent_x11 * x11		13857	3					
ANR	14065	Parameter	struct vdagent_x11 * x11	126:28:3900:3922	13857	0	True				
ANR	14066	ParameterType	struct vdagent_x11 *		13857	0					
ANR	14067	Identifier	x11		13857	1					
ANR	14068	CFGEntryNode	ENTRY		13857		True				
ANR	14069	CFGExitNode	EXIT		13857		True				
ANR	14070	Symbol	* x11		13857						
ANR	14071	Symbol	XRRQueryExtension		13857						
ANR	14072	Symbol	x11 -> randr		13857						
ANR	14073	Symbol	x11 -> root_window		13857						
ANR	14074	Symbol	RRCrtcChangeNotifyMask		13857						
ANR	14075	Symbol	LOG_ERR		13857						
ANR	14076	Symbol	* x11 -> root_window		13857						
ANR	14077	Symbol	x11		13857						
ANR	14078	Symbol	NULL		13857						
ANR	14079	Symbol	RRScreenChangeNotifyMask		13857						
ANR	14080	Symbol	x11 -> xrandr_minor		13857						
ANR	14081	Symbol	x11 -> xrandr_major		13857						
ANR	14082	Symbol	x11 -> debug		13857						
ANR	14083	Symbol	i		13857						
ANR	14084	Symbol	x11 -> has_xinerama		13857						
ANR	14085	Symbol	* * x11		13857						
ANR	14086	Symbol	x11 -> screen_count		13857						
ANR	14087	Symbol	XineramaQueryExtension		13857						
ANR	14088	Symbol	& i		13857						
ANR	14089	Symbol	x11 -> display		13857						
ANR	14090	Symbol	& x11 -> xrandr_event_base		13857						
ANR	14091	Symbol	x11 -> randr . res		13857						
ANR	14092	Symbol	LOG_DEBUG		13857						
ANR	14093	Symbol	& x11 -> xrandr_minor		13857						
ANR	14094	Symbol	& x11 -> xrandr_major		13857						
ANR	14095	Symbol	x11 -> has_xrandr		13857						
ANR	14096	Function	find_mode_by_name	171:0:5226:5583							
ANR	14097	FunctionDef	"find_mode_by_name (struct vdagent_x11 * x11 , char * name)"		14096	0					
ANR	14098	CompoundStatement		173:0:5303:5583	14096	0					
ANR	14099	IdentifierDeclStatement	int m ;	174:4:5309:5322	14096	0	True				
ANR	14100	IdentifierDecl	m		14096	0					
ANR	14101	IdentifierDeclType	int		14096	0					
ANR	14102	Identifier	m		14096	1					
ANR	14103	IdentifierDeclStatement	XRRModeInfo * ret = NULL ;	175:4:5328:5358	14096	1	True				
ANR	14104	IdentifierDecl	* ret = NULL		14096	0					
ANR	14105	IdentifierDeclType	XRRModeInfo *		14096	0					
ANR	14106	Identifier	ret		14096	1					
ANR	14107	AssignmentExpression	* ret = NULL		14096	2		=			
ANR	14108	Identifier	NULL		14096	0					
ANR	14109	Identifier	NULL		14096	1					
ANR	14110	ForStatement	for ( m = 0 ; m < x11 -> randr . res -> nmode ; m ++ )		14096	2					
ANR	14111	ForInit	m = 0 ;	177:9:5370:5375	14096	0	True				
ANR	14112	AssignmentExpression	m = 0		14096	0		=			
ANR	14113	Identifier	m		14096	0					
ANR	14114	PrimaryExpression	0		14096	1					
ANR	14115	Condition	m < x11 -> randr . res -> nmode	177:16:5377:5401	14096	1	True				
ANR	14116	RelationalExpression	m < x11 -> randr . res -> nmode		14096	0		<			
ANR	14117	Identifier	m		14096	0					
ANR	14118	PtrMemberAccess	x11 -> randr . res -> nmode		14096	1					
ANR	14119	MemberAccess	x11 -> randr . res		14096	0					
ANR	14120	PtrMemberAccess	x11 -> randr		14096	0					
ANR	14121	Identifier	x11		14096	0					
ANR	14122	Identifier	randr		14096	1					
ANR	14123	Identifier	res		14096	1					
ANR	14124	Identifier	nmode		14096	1					
ANR	14125	PostIncDecOperationExpression	m ++	177:43:5404:5406	14096	2	True				
ANR	14126	Identifier	m		14096	0					
ANR	14127	IncDec	++		14096	1					
ANR	14128	CompoundStatement		6:8:115:160	14096	3					
ANR	14129	IdentifierDeclStatement	XRRModeInfo * mode = & x11 -> randr . res -> modes [ m ] ;	178:8:5419:5464	14096	0	True				
ANR	14130	IdentifierDecl	* mode = & x11 -> randr . res -> modes [ m ]		14096	0					
ANR	14131	IdentifierDeclType	XRRModeInfo *		14096	0					
ANR	14132	Identifier	mode		14096	1					
ANR	14133	AssignmentExpression	* mode = & x11 -> randr . res -> modes [ m ]		14096	2		=			
ANR	14134	Identifier	mode		14096	0					
ANR	14135	UnaryOperationExpression	& x11 -> randr . res -> modes [ m ]		14096	1					
ANR	14136	UnaryOperator	&		14096	0					
ANR	14137	ArrayIndexing	x11 -> randr . res -> modes [ m ]		14096	1					
ANR	14138	PtrMemberAccess	x11 -> randr . res -> modes		14096	0					
ANR	14139	MemberAccess	x11 -> randr . res		14096	0					
ANR	14140	PtrMemberAccess	x11 -> randr		14096	0					
ANR	14141	Identifier	x11		14096	0					
ANR	14142	Identifier	randr		14096	1					
ANR	14143	Identifier	res		14096	1					
ANR	14144	Identifier	modes		14096	1					
ANR	14145	Identifier	m		14096	1					
ANR	14146	IfStatement	"if ( ! strcmp ( name , mode -> name ) )"		14096	1					
ANR	14147	Condition	"! strcmp ( name , mode -> name )"	179:12:5478:5503	14096	0	True				
ANR	14148	UnaryOperationExpression	"! strcmp ( name , mode -> name )"		14096	0					
ANR	14149	UnaryOperator	!		14096	0					
ANR	14150	CallExpression	"strcmp ( name , mode -> name )"		14096	1					
ANR	14151	Callee	strcmp		14096	0					
ANR	14152	Identifier	strcmp		14096	0					
ANR	14153	ArgumentList	name		14096	1					
ANR	14154	Argument	name		14096	0					
ANR	14155	Identifier	name		14096	0					
ANR	14156	Argument	mode -> name		14096	1					
ANR	14157	PtrMemberAccess	mode -> name		14096	0					
ANR	14158	Identifier	mode		14096	0					
ANR	14159	Identifier	name		14096	1					
ANR	14160	CompoundStatement		7:40:202:202	14096	1					
ANR	14161	ExpressionStatement	ret = mode	180:12:5520:5530	14096	0	True				
ANR	14162	AssignmentExpression	ret = mode		14096	0		=			
ANR	14163	Identifier	ret		14096	0					
ANR	14164	Identifier	mode		14096	1					
ANR	14165	BreakStatement	break ;	181:12:5544:5549	14096	1	True				
ANR	14166	ReturnStatement	return ret ;	184:4:5571:5581	14096	3	True				
ANR	14167	Identifier	ret		14096	0					
ANR	14168	ReturnType	static XRRModeInfo *		14096	1					
ANR	14169	Identifier	find_mode_by_name		14096	2					
ANR	14170	ParameterList	"struct vdagent_x11 * x11 , char * name"		14096	3					
ANR	14171	Parameter	struct vdagent_x11 * x11	172:19:5266:5288	14096	0	True				
ANR	14172	ParameterType	struct vdagent_x11 *		14096	0					
ANR	14173	Identifier	x11		14096	1					
ANR	14174	Parameter	char * name	172:44:5291:5300	14096	1	True				
ANR	14175	ParameterType	char *		14096	0					
ANR	14176	Identifier	name		14096	1					
ANR	14177	CFGEntryNode	ENTRY		14096		True				
ANR	14178	CFGExitNode	EXIT		14096		True				
ANR	14179	Symbol	ret		14096						
ANR	14180	Symbol	strcmp		14096						
ANR	14181	Symbol	mode -> name		14096						
ANR	14182	Symbol	* x11		14096						
ANR	14183	Symbol	NULL		14096						
ANR	14184	Symbol	x11 -> randr		14096						
ANR	14185	Symbol	* * x11		14096						
ANR	14186	Symbol	* x11 -> randr . res		14096						
ANR	14187	Symbol	m		14096						
ANR	14188	Symbol	* x11 -> randr		14096						
ANR	14189	Symbol	x11 -> randr . res -> nmode		14096						
ANR	14190	Symbol	mode		14096						
ANR	14191	Symbol	name		14096						
ANR	14192	Symbol	* mode		14096						
ANR	14193	Symbol	x11		14096						
ANR	14194	Symbol	x11 -> randr . res		14096						
ANR	14195	Symbol	x11 -> randr . res -> modes		14096						
ANR	14196	Function	find_mode_by_size	187:0:5586:6077							
ANR	14197	FunctionDef	"find_mode_by_size (struct vdagent_x11 * x11 , int output , int width , int height)"		14196	0					
ANR	14198	CompoundStatement		189:0:5686:6077	14196	0					
ANR	14199	IdentifierDeclStatement	int m ;	190:4:5692:5705	14196	0	True				
ANR	14200	IdentifierDecl	m		14196	0					
ANR	14201	IdentifierDeclType	int		14196	0					
ANR	14202	Identifier	m		14196	1					
ANR	14203	IdentifierDeclStatement	XRRModeInfo * ret = NULL ;	191:4:5711:5741	14196	1	True				
ANR	14204	IdentifierDecl	* ret = NULL		14196	0					
ANR	14205	IdentifierDeclType	XRRModeInfo *		14196	0					
ANR	14206	Identifier	ret		14196	1					
ANR	14207	AssignmentExpression	* ret = NULL		14196	2		=			
ANR	14208	Identifier	NULL		14196	0					
ANR	14209	Identifier	NULL		14196	1					
ANR	14210	ForStatement	for ( m = 0 ; m < x11 -> randr . outputs [ output ] -> nmode ; m ++ )		14196	2					
ANR	14211	ForInit	m = 0 ;	193:9:5753:5758	14196	0	True				
ANR	14212	AssignmentExpression	m = 0		14196	0		=			
ANR	14213	Identifier	m		14196	0					
ANR	14214	PrimaryExpression	0		14196	1					
ANR	14215	Condition	m < x11 -> randr . outputs [ output ] -> nmode	193:16:5760:5796	14196	1	True				
ANR	14216	RelationalExpression	m < x11 -> randr . outputs [ output ] -> nmode		14196	0		<			
ANR	14217	Identifier	m		14196	0					
ANR	14218	PtrMemberAccess	x11 -> randr . outputs [ output ] -> nmode		14196	1					
ANR	14219	ArrayIndexing	x11 -> randr . outputs [ output ]		14196	0					
ANR	14220	MemberAccess	x11 -> randr . outputs		14196	0					
ANR	14221	PtrMemberAccess	x11 -> randr		14196	0					
ANR	14222	Identifier	x11		14196	0					
ANR	14223	Identifier	randr		14196	1					
ANR	14224	Identifier	outputs		14196	1					
ANR	14225	Identifier	output		14196	1					
ANR	14226	Identifier	nmode		14196	1					
ANR	14227	PostIncDecOperationExpression	m ++	193:55:5799:5801	14196	2	True				
ANR	14228	Identifier	m		14196	0					
ANR	14229	IncDec	++		14196	1					
ANR	14230	CompoundStatement		6:8:127:243	14196	3					
ANR	14231	IdentifierDeclStatement	"XRRModeInfo * mode = mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] ) ;"	194:8:5814:5930	14196	0	True				
ANR	14232	IdentifierDecl	"* mode = mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] )"		14196	0					
ANR	14233	IdentifierDeclType	XRRModeInfo *		14196	0					
ANR	14234	Identifier	mode		14196	1					
ANR	14235	AssignmentExpression	"* mode = mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] )"		14196	2		=			
ANR	14236	Identifier	mode		14196	0					
ANR	14237	CallExpression	"mode_from_id ( x11 , x11 -> randr . outputs [ output ] -> modes [ m ] )"		14196	1					
ANR	14238	Callee	mode_from_id		14196	0					
ANR	14239	Identifier	mode_from_id		14196	0					
ANR	14240	ArgumentList	x11		14196	1					
ANR	14241	Argument	x11		14196	0					
ANR	14242	Identifier	x11		14196	0					
ANR	14243	Argument	x11 -> randr . outputs [ output ] -> modes [ m ]		14196	1					
ANR	14244	ArrayIndexing	x11 -> randr . outputs [ output ] -> modes [ m ]		14196	0					
ANR	14245	PtrMemberAccess	x11 -> randr . outputs [ output ] -> modes		14196	0					
ANR	14246	ArrayIndexing	x11 -> randr . outputs [ output ]		14196	0					
ANR	14247	MemberAccess	x11 -> randr . outputs		14196	0					
ANR	14248	PtrMemberAccess	x11 -> randr		14196	0					
ANR	14249	Identifier	x11		14196	0					
ANR	14250	Identifier	randr		14196	1					
ANR	14251	Identifier	outputs		14196	1					
ANR	14252	Identifier	output		14196	1					
ANR	14253	Identifier	modes		14196	1					
ANR	14254	Identifier	m		14196	1					
ANR	14255	IfStatement	if ( mode && mode -> width == width && mode -> height == height )		14196	1					
ANR	14256	Condition	mode && mode -> width == width && mode -> height == height	196:12:5944:5997	14196	0	True				
ANR	14257	AndExpression	mode && mode -> width == width && mode -> height == height		14196	0		&&			
ANR	14258	Identifier	mode		14196	0					
ANR	14259	AndExpression	mode -> width == width && mode -> height == height		14196	1		&&			
ANR	14260	EqualityExpression	mode -> width == width		14196	0		==			
ANR	14261	PtrMemberAccess	mode -> width		14196	0					
ANR	14262	Identifier	mode		14196	0					
ANR	14263	Identifier	width		14196	1					
ANR	14264	Identifier	width		14196	1					
ANR	14265	EqualityExpression	mode -> height == height		14196	1		==			
ANR	14266	PtrMemberAccess	mode -> height		14196	0					
ANR	14267	Identifier	mode		14196	0					
ANR	14268	Identifier	height		14196	1					
ANR	14269	Identifier	height		14196	1					
ANR	14270	CompoundStatement		8:68:313:313	14196	1					
ANR	14271	ExpressionStatement	ret = mode	197:12:6014:6024	14196	0	True				
ANR	14272	AssignmentExpression	ret = mode		14196	0		=			
ANR	14273	Identifier	ret		14196	0					
ANR	14274	Identifier	mode		14196	1					
ANR	14275	BreakStatement	break ;	198:12:6038:6043	14196	1	True				
ANR	14276	ReturnStatement	return ret ;	201:4:6065:6075	14196	3	True				
ANR	14277	Identifier	ret		14196	0					
ANR	14278	ReturnType	static XRRModeInfo *		14196	1					
ANR	14279	Identifier	find_mode_by_size		14196	2					
ANR	14280	ParameterList	"struct vdagent_x11 * x11 , int output , int width , int height"		14196	3					
ANR	14281	Parameter	struct vdagent_x11 * x11	188:19:5626:5648	14196	0	True				
ANR	14282	ParameterType	struct vdagent_x11 *		14196	0					
ANR	14283	Identifier	x11		14196	1					
ANR	14284	Parameter	int output	188:44:5651:5660	14196	1	True				
ANR	14285	ParameterType	int		14196	0					
ANR	14286	Identifier	output		14196	1					
ANR	14287	Parameter	int width	188:56:5663:5671	14196	2	True				
ANR	14288	ParameterType	int		14196	0					
ANR	14289	Identifier	width		14196	1					
ANR	14290	Parameter	int height	188:67:5674:5683	14196	3	True				
ANR	14291	ParameterType	int		14196	0					
ANR	14292	Identifier	height		14196	1					
ANR	14293	CFGEntryNode	ENTRY		14196		True				
ANR	14294	CFGExitNode	EXIT		14196		True				
ANR	14295	Symbol	x11 -> randr . outputs [ output ] -> modes		14196						
ANR	14296	Symbol	* x11		14196						
ANR	14297	Symbol	* x11 -> randr . outputs [ output ] -> modes		14196						
ANR	14298	Symbol	x11 -> randr		14196						
ANR	14299	Symbol	* * output		14196						
ANR	14300	Symbol	output		14196						
ANR	14301	Symbol	mode		14196						
ANR	14302	Symbol	* * x11 -> randr . outputs		14196						
ANR	14303	Symbol	* x11 -> randr . outputs		14196						
ANR	14304	Symbol	* * * * x11		14196						
ANR	14305	Symbol	* * * x11		14196						
ANR	14306	Symbol	x11		14196						
ANR	14307	Symbol	* * x11 -> randr		14196						
ANR	14308	Symbol	height		14196						
ANR	14309	Symbol	ret		14196						
ANR	14310	Symbol	NULL		14196						
ANR	14311	Symbol	* * * x11 -> randr . outputs		14196						
ANR	14312	Symbol	mode -> height		14196						
ANR	14313	Symbol	mode -> width		14196						
ANR	14314	Symbol	mode_from_id		14196						
ANR	14315	Symbol	* * x11		14196						
ANR	14316	Symbol	m		14196						
ANR	14317	Symbol	* x11 -> randr		14196						
ANR	14318	Symbol	* * * x11 -> randr		14196						
ANR	14319	Symbol	x11 -> randr . outputs [ output ] -> nmode		14196						
ANR	14320	Symbol	* m		14196						
ANR	14321	Symbol	width		14196						
ANR	14322	Symbol	* mode		14196						
ANR	14323	Symbol	x11 -> randr . outputs		14196						
ANR	14324	Symbol	* * * output		14196						
ANR	14325	Symbol	* output		14196						
ANR	14326	Function	delete_mode	204:0:6080:7342							
ANR	14327	FunctionDef	"delete_mode (struct vdagent_x11 * x11 , int output_index , int width , int height)"		14326	0					
ANR	14328	CompoundStatement		206:0:6194:7342	14326	0					
ANR	14329	IdentifierDeclStatement	int m ;	207:4:6200:6205	14326	0	True				
ANR	14330	IdentifierDecl	m		14326	0					
ANR	14331	IdentifierDeclType	int		14326	0					
ANR	14332	Identifier	m		14326	1					
ANR	14333	IdentifierDeclStatement	XRRModeInfo * mode ;	208:4:6211:6228	14326	1	True				
ANR	14334	IdentifierDecl	* mode		14326	0					
ANR	14335	IdentifierDeclType	XRRModeInfo *		14326	0					
ANR	14336	Identifier	mode		14326	1					
ANR	14337	IdentifierDeclStatement	XRROutputInfo * output_info ;	209:4:6234:6260	14326	2	True				
ANR	14338	IdentifierDecl	* output_info		14326	0					
ANR	14339	IdentifierDeclType	XRROutputInfo *		14326	0					
ANR	14340	Identifier	output_info		14326	1					
ANR	14341	IdentifierDeclStatement	char name [ 20 ] ;	210:4:6266:6279	14326	3	True				
ANR	14342	IdentifierDecl	name [ 20 ]		14326	0					
ANR	14343	IdentifierDeclType	char [ 20 ]		14326	0					
ANR	14344	Identifier	name		14326	1					
ANR	14345	PrimaryExpression	20		14326	2					
ANR	14346	IfStatement	if ( width == 0 || height == 0 )		14326	4					
ANR	14347	Condition	width == 0 || height == 0	212:8:6290:6314	14326	0	True				
ANR	14348	OrExpression	width == 0 || height == 0		14326	0		||			
ANR	14349	EqualityExpression	width == 0		14326	0		==			
ANR	14350	Identifier	width		14326	0					
ANR	14351	PrimaryExpression	0		14326	1					
ANR	14352	EqualityExpression	height == 0		14326	1		==			
ANR	14353	Identifier	height		14326	0					
ANR	14354	PrimaryExpression	0		14326	1					
ANR	14355	ReturnStatement	return ;	213:8:6325:6331	14326	1	True				
ANR	14356	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""%dx%d-%d"" , width , height , output_index )"	215:4:6338:6407	14326	5	True				
ANR	14357	CallExpression	"snprintf ( name , sizeof ( name ) , ""%dx%d-%d"" , width , height , output_index )"		14326	0					
ANR	14358	Callee	snprintf		14326	0					
ANR	14359	Identifier	snprintf		14326	0					
ANR	14360	ArgumentList	name		14326	1					
ANR	14361	Argument	name		14326	0					
ANR	14362	Identifier	name		14326	0					
ANR	14363	Argument	sizeof ( name )		14326	1					
ANR	14364	SizeofExpression	sizeof ( name )		14326	0					
ANR	14365	Sizeof	sizeof		14326	0					
ANR	14366	SizeofOperand	name		14326	1					
ANR	14367	Argument	"""%dx%d-%d"""		14326	2					
ANR	14368	PrimaryExpression	"""%dx%d-%d"""		14326	0					
ANR	14369	Argument	width		14326	3					
ANR	14370	Identifier	width		14326	0					
ANR	14371	Argument	height		14326	4					
ANR	14372	Identifier	height		14326	0					
ANR	14373	Argument	output_index		14326	5					
ANR	14374	Identifier	output_index		14326	0					
ANR	14375	IfStatement	if ( x11 -> debug )		14326	6					
ANR	14376	Condition	x11 -> debug	216:8:6417:6426	14326	0	True				
ANR	14377	PtrMemberAccess	x11 -> debug		14326	0					
ANR	14378	Identifier	x11		14326	0					
ANR	14379	Identifier	debug		14326	1					
ANR	14380	ExpressionStatement	"syslog ( LOG_DEBUG , ""Deleting mode %s"" , name )"	217:8:6437:6480	14326	1	True				
ANR	14381	CallExpression	"syslog ( LOG_DEBUG , ""Deleting mode %s"" , name )"		14326	0					
ANR	14382	Callee	syslog		14326	0					
ANR	14383	Identifier	syslog		14326	0					
ANR	14384	ArgumentList	LOG_DEBUG		14326	1					
ANR	14385	Argument	LOG_DEBUG		14326	0					
ANR	14386	Identifier	LOG_DEBUG		14326	0					
ANR	14387	Argument	"""Deleting mode %s"""		14326	1					
ANR	14388	PrimaryExpression	"""Deleting mode %s"""		14326	0					
ANR	14389	Argument	name		14326	2					
ANR	14390	Identifier	name		14326	0					
ANR	14391	ExpressionStatement	output_info = x11 -> randr . outputs [ output_index ]	219:4:6487:6533	14326	7	True				
ANR	14392	AssignmentExpression	output_info = x11 -> randr . outputs [ output_index ]		14326	0		=			
ANR	14393	Identifier	output_info		14326	0					
ANR	14394	ArrayIndexing	x11 -> randr . outputs [ output_index ]		14326	1					
ANR	14395	MemberAccess	x11 -> randr . outputs		14326	0					
ANR	14396	PtrMemberAccess	x11 -> randr		14326	0					
ANR	14397	Identifier	x11		14326	0					
ANR	14398	Identifier	randr		14326	1					
ANR	14399	Identifier	outputs		14326	1					
ANR	14400	Identifier	output_index		14326	1					
ANR	14401	IfStatement	if ( output_info -> ncrtc != 1 )		14326	8					
ANR	14402	Condition	output_info -> ncrtc != 1	220:8:6543:6565	14326	0	True				
ANR	14403	EqualityExpression	output_info -> ncrtc != 1		14326	0		!=			
ANR	14404	PtrMemberAccess	output_info -> ncrtc		14326	0					
ANR	14405	Identifier	output_info		14326	0					
ANR	14406	Identifier	ncrtc		14326	1					
ANR	14407	PrimaryExpression	1		14326	1					
ANR	14408	CompoundStatement		15:33:373:373	14326	1					
ANR	14409	Statement	syslog	221:8:6578:6583	14326	0	True				
ANR	14410	Statement	(	221:14:6584:6584	14326	1	True				
ANR	14411	Statement	LOG_ERR	221:15:6585:6591	14326	2	True				
ANR	14412	Statement	","	221:22:6592:6592	14326	3	True				
ANR	14413	Statement	"""output has %d crtcs, expected exactly 1, """	221:24:6594:6636	14326	4	True				
ANR	14414	Statement	"""failed to delete mode"""	222:15:6653:6675	14326	5	True				
ANR	14415	Statement	","	222:38:6676:6676	14326	6	True				
ANR	14416	Statement	output_info	222:40:6678:6688	14326	7	True				
ANR	14417	Statement	->	222:51:6689:6690	14326	8	True				
ANR	14418	Statement	ncrtc	222:53:6691:6695	14326	9	True				
ANR	14419	Statement	)	222:58:6696:6696	14326	10	True				
ANR	14420	ExpressionStatement		222:59:6697:6697	14326	11	True				
ANR	14421	ReturnStatement	return ;	223:8:6707:6713	14326	12	True				
ANR	14422	ForStatement	for ( m = 0 ; m < x11 -> randr . res -> nmode ; ++ m )		14326	9					
ANR	14423	ForInit	m = 0 ;	225:9:6730:6736	14326	0	True				
ANR	14424	AssignmentExpression	m = 0		14326	0		=			
ANR	14425	Identifier	m		14326	0					
ANR	14426	PrimaryExpression	0		14326	1					
ANR	14427	Condition	m < x11 -> randr . res -> nmode	225:17:6738:6762	14326	1	True				
ANR	14428	RelationalExpression	m < x11 -> randr . res -> nmode		14326	0		<			
ANR	14429	Identifier	m		14326	0					
ANR	14430	PtrMemberAccess	x11 -> randr . res -> nmode		14326	1					
ANR	14431	MemberAccess	x11 -> randr . res		14326	0					
ANR	14432	PtrMemberAccess	x11 -> randr		14326	0					
ANR	14433	Identifier	x11		14326	0					
ANR	14434	Identifier	randr		14326	1					
ANR	14435	Identifier	res		14326	1					
ANR	14436	Identifier	nmode		14326	1					
ANR	14437	UnaryExpression	++ m	225:44:6765:6767	14326	2	True				
ANR	14438	IncDec	++		14326	0					
ANR	14439	Identifier	m		14326	1					
ANR	14440	CompoundStatement		20:49:575:575	14326	3					
ANR	14441	ExpressionStatement	mode = & x11 -> randr . res -> modes [ m ]	226:8:6780:6812	14326	0	True				
ANR	14442	AssignmentExpression	mode = & x11 -> randr . res -> modes [ m ]		14326	0		=			
ANR	14443	Identifier	mode		14326	0					
ANR	14444	UnaryOperationExpression	& x11 -> randr . res -> modes [ m ]		14326	1					
ANR	14445	UnaryOperator	&		14326	0					
ANR	14446	ArrayIndexing	x11 -> randr . res -> modes [ m ]		14326	1					
ANR	14447	PtrMemberAccess	x11 -> randr . res -> modes		14326	0					
ANR	14448	MemberAccess	x11 -> randr . res		14326	0					
ANR	14449	PtrMemberAccess	x11 -> randr		14326	0					
ANR	14450	Identifier	x11		14326	0					
ANR	14451	Identifier	randr		14326	1					
ANR	14452	Identifier	res		14326	1					
ANR	14453	Identifier	modes		14326	1					
ANR	14454	Identifier	m		14326	1					
ANR	14455	IfStatement	"if ( strcmp ( mode -> name , name ) == 0 )"		14326	1					
ANR	14456	Condition	"strcmp ( mode -> name , name ) == 0"	227:12:6826:6854	14326	0	True				
ANR	14457	EqualityExpression	"strcmp ( mode -> name , name ) == 0"		14326	0		==			
ANR	14458	CallExpression	"strcmp ( mode -> name , name )"		14326	0					
ANR	14459	Callee	strcmp		14326	0					
ANR	14460	Identifier	strcmp		14326	0					
ANR	14461	ArgumentList	mode -> name		14326	1					
ANR	14462	Argument	mode -> name		14326	0					
ANR	14463	PtrMemberAccess	mode -> name		14326	0					
ANR	14464	Identifier	mode		14326	0					
ANR	14465	Identifier	name		14326	1					
ANR	14466	Argument	name		14326	1					
ANR	14467	Identifier	name		14326	0					
ANR	14468	PrimaryExpression	0		14326	1					
ANR	14469	BreakStatement	break ;	228:12:6869:6874	14326	1	True				
ANR	14470	IfStatement	if ( m < x11 -> randr . res -> nmode )		14326	10					
ANR	14471	Condition	m < x11 -> randr . res -> nmode	230:8:6890:6914	14326	0	True				
ANR	14472	RelationalExpression	m < x11 -> randr . res -> nmode		14326	0		<			
ANR	14473	Identifier	m		14326	0					
ANR	14474	PtrMemberAccess	x11 -> randr . res -> nmode		14326	1					
ANR	14475	MemberAccess	x11 -> randr . res		14326	0					
ANR	14476	PtrMemberAccess	x11 -> randr		14326	0					
ANR	14477	Identifier	x11		14326	0					
ANR	14478	Identifier	randr		14326	1					
ANR	14479	Identifier	res		14326	1					
ANR	14480	Identifier	nmode		14326	1					
ANR	14481	CompoundStatement		25:35:722:722	14326	1					
ANR	14482	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	231:8:6927:6976	14326	0	True				
ANR	14483	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		14326	0					
ANR	14484	Callee	vdagent_x11_set_error_handler		14326	0					
ANR	14485	Identifier	vdagent_x11_set_error_handler		14326	0					
ANR	14486	ArgumentList	x11		14326	1					
ANR	14487	Argument	x11		14326	0					
ANR	14488	Identifier	x11		14326	0					
ANR	14489	Argument	error_handler		14326	1					
ANR	14490	Identifier	error_handler		14326	0					
ANR	14491	ExpressionStatement	"XRRDeleteOutputMode ( x11 -> display , x11 -> randr . res -> outputs [ output_index ] , mode -> id )"	232:8:6986:7098	14326	1	True				
ANR	14492	CallExpression	"XRRDeleteOutputMode ( x11 -> display , x11 -> randr . res -> outputs [ output_index ] , mode -> id )"		14326	0					
ANR	14493	Callee	XRRDeleteOutputMode		14326	0					
ANR	14494	Identifier	XRRDeleteOutputMode		14326	0					
ANR	14495	ArgumentList	x11 -> display		14326	1					
ANR	14496	Argument	x11 -> display		14326	0					
ANR	14497	PtrMemberAccess	x11 -> display		14326	0					
ANR	14498	Identifier	x11		14326	0					
ANR	14499	Identifier	display		14326	1					
ANR	14500	Argument	x11 -> randr . res -> outputs [ output_index ]		14326	1					
ANR	14501	ArrayIndexing	x11 -> randr . res -> outputs [ output_index ]		14326	0					
ANR	14502	PtrMemberAccess	x11 -> randr . res -> outputs		14326	0					
ANR	14503	MemberAccess	x11 -> randr . res		14326	0					
ANR	14504	PtrMemberAccess	x11 -> randr		14326	0					
ANR	14505	Identifier	x11		14326	0					
ANR	14506	Identifier	randr		14326	1					
ANR	14507	Identifier	res		14326	1					
ANR	14508	Identifier	outputs		14326	1					
ANR	14509	Identifier	output_index		14326	1					
ANR	14510	Argument	mode -> id		14326	2					
ANR	14511	PtrMemberAccess	mode -> id		14326	0					
ANR	14512	Identifier	mode		14326	0					
ANR	14513	Identifier	id		14326	1					
ANR	14514	ExpressionStatement	"XRRDestroyMode ( x11 -> display , mode -> id )"	234:8:7108:7147	14326	2	True				
ANR	14515	CallExpression	"XRRDestroyMode ( x11 -> display , mode -> id )"		14326	0					
ANR	14516	Callee	XRRDestroyMode		14326	0					
ANR	14517	Identifier	XRRDestroyMode		14326	0					
ANR	14518	ArgumentList	x11 -> display		14326	1					
ANR	14519	Argument	x11 -> display		14326	0					
ANR	14520	PtrMemberAccess	x11 -> display		14326	0					
ANR	14521	Identifier	x11		14326	0					
ANR	14522	Identifier	display		14326	1					
ANR	14523	Argument	mode -> id		14326	1					
ANR	14524	PtrMemberAccess	mode -> id		14326	0					
ANR	14525	Identifier	mode		14326	0					
ANR	14526	Identifier	id		14326	1					
ANR	14527	ExpressionStatement	vdagent_x11_restore_error_handler ( x11 )	236:1:7202:7240	14326	3	True				
ANR	14528	CallExpression	vdagent_x11_restore_error_handler ( x11 )		14326	0					
ANR	14529	Callee	vdagent_x11_restore_error_handler		14326	0					
ANR	14530	Identifier	vdagent_x11_restore_error_handler		14326	0					
ANR	14531	ArgumentList	x11		14326	1					
ANR	14532	Argument	x11		14326	0					
ANR	14533	Identifier	x11		14326	0					
ANR	14534	ExpressionStatement	"update_randr_res ( x11 , 0 )"	240:4:7316:7340	14326	11	True				
ANR	14535	CallExpression	"update_randr_res ( x11 , 0 )"		14326	0					
ANR	14536	Callee	update_randr_res		14326	0					
ANR	14537	Identifier	update_randr_res		14326	0					
ANR	14538	ArgumentList	x11		14326	1					
ANR	14539	Argument	x11		14326	0					
ANR	14540	Identifier	x11		14326	0					
ANR	14541	Argument	0		14326	1					
ANR	14542	PrimaryExpression	0		14326	0					
ANR	14543	ReturnType	static void		14326	1					
ANR	14544	Identifier	delete_mode		14326	2					
ANR	14545	ParameterList	"struct vdagent_x11 * x11 , int output_index , int width , int height"		14326	3					
ANR	14546	Parameter	struct vdagent_x11 * x11	204:24:6104:6126	14326	0	True				
ANR	14547	ParameterType	struct vdagent_x11 *		14326	0					
ANR	14548	Identifier	x11		14326	1					
ANR	14549	Parameter	int output_index	204:49:6129:6144	14326	1	True				
ANR	14550	ParameterType	int		14326	0					
ANR	14551	Identifier	output_index		14326	1					
ANR	14552	Parameter	int width	205:24:6171:6179	14326	2	True				
ANR	14553	ParameterType	int		14326	0					
ANR	14554	Identifier	width		14326	1					
ANR	14555	Parameter	int height	205:35:6182:6191	14326	3	True				
ANR	14556	ParameterType	int		14326	0					
ANR	14557	Identifier	height		14326	1					
ANR	14558	CFGEntryNode	ENTRY		14326		True				
ANR	14559	CFGExitNode	EXIT		14326		True				
ANR	14560	Symbol	mode -> name		14326						
ANR	14561	Symbol	* x11 -> randr . res -> outputs		14326						
ANR	14562	Symbol	* x11		14326						
ANR	14563	Symbol	error_handler		14326						
ANR	14564	Symbol	mode -> id		14326						
ANR	14565	Symbol	x11 -> randr		14326						
ANR	14566	Symbol	output_index		14326						
ANR	14567	Symbol	* x11 -> randr . res		14326						
ANR	14568	Symbol	x11 -> randr . res -> nmode		14326						
ANR	14569	Symbol	mode		14326						
ANR	14570	Symbol	* x11 -> randr . outputs		14326						
ANR	14571	Symbol	* output_index		14326						
ANR	14572	Symbol	* * x11 -> randr . res		14326						
ANR	14573	Symbol	* * * x11		14326						
ANR	14574	Symbol	x11		14326						
ANR	14575	Symbol	* * x11 -> randr		14326						
ANR	14576	Symbol	x11 -> randr . res -> outputs		14326						
ANR	14577	Symbol	height		14326						
ANR	14578	Symbol	x11 -> randr . res -> modes		14326						
ANR	14579	Symbol	strcmp		14326						
ANR	14580	Symbol	x11 -> debug		14326						
ANR	14581	Symbol	* * x11		14326						
ANR	14582	Symbol	m		14326						
ANR	14583	Symbol	* x11 -> randr		14326						
ANR	14584	Symbol	output_info -> ncrtc		14326						
ANR	14585	Symbol	x11 -> display		14326						
ANR	14586	Symbol	width		14326						
ANR	14587	Symbol	name		14326						
ANR	14588	Symbol	* mode		14326						
ANR	14589	Symbol	x11 -> randr . res		14326						
ANR	14590	Symbol	output_info		14326						
ANR	14591	Symbol	LOG_DEBUG		14326						
ANR	14592	Symbol	x11 -> randr . outputs		14326						
ANR	14593	Symbol	* output_info		14326						
ANR	14594	Function	set_reduced_cvt_mode	243:0:7345:9700							
ANR	14595	FunctionDef	"set_reduced_cvt_mode (XRRModeInfo * mode , int width , int height)"		14594	0					
ANR	14596	CompoundStatement		244:0:7420:9700	14594	0					
ANR	14597	Statement	define	250:1:7665:7670	14594	0	True				
ANR	14598	Statement	CVT_MARGIN_PERCENTAGE	250:8:7672:7692	14594	1	True				
ANR	14599	Statement	1.8	250:30:7694:7696	14594	2	True				
ANR	14600	Statement	define	253:1:7772:7777	14594	3	True				
ANR	14601	Statement	CVT_H_GRANULARITY	253:8:7779:7795	14594	4	True				
ANR	14602	Statement	8	253:26:7797:7797	14594	5	True				
ANR	14603	Statement	define	256:1:7857:7862	14594	6	True				
ANR	14604	Statement	CVT_MIN_V_PORCH	256:8:7864:7878	14594	7	True				
ANR	14605	Statement	3	256:24:7880:7880	14594	8	True				
ANR	14606	Statement	define	259:1:7953:7958	14594	9	True				
ANR	14607	Statement	CVT_MIN_V_BPORCH	259:8:7960:7975	14594	10	True				
ANR	14608	Statement	6	259:25:7977:7977	14594	11	True				
ANR	14609	Statement	define	262:1:8014:8019	14594	12	True				
ANR	14610	Statement	CVT_CLOCK_STEP	262:8:8021:8034	14594	13	True				
ANR	14611	Statement	250	262:23:8036:8038	14594	14	True				
ANR	14612	Statement	define	265:1:8112:8117	14594	15	True				
ANR	14613	Statement	CVT_RB_MIN_VBLANK	265:8:8119:8135	14594	16	True				
ANR	14614	Statement	460.0	265:26:8137:8141	14594	17	True				
ANR	14615	Statement	define	268:1:8198:8203	14594	18	True				
ANR	14616	Statement	CVT_RB_H_SYNC	268:8:8205:8217	14594	19	True				
ANR	14617	Statement	32.0	268:22:8219:8222	14594	20	True				
ANR	14618	Statement	define	271:1:8283:8288	14594	21	True				
ANR	14619	Statement	CVT_RB_H_BLANK	271:8:8290:8303	14594	22	True				
ANR	14620	Statement	160.0	271:23:8305:8309	14594	23	True				
ANR	14621	Statement	define	274:1:8382:8387	14594	24	True				
ANR	14622	Statement	CVT_RB_VFPORCH	274:8:8389:8402	14594	25	True				
ANR	14623	Statement	3	274:23:8404:8404	14594	26	True				
ANR	14624	IdentifierDeclStatement	int VBILines ;	276:4:8411:8423	14594	27	True				
ANR	14625	IdentifierDecl	VBILines		14594	0					
ANR	14626	IdentifierDeclType	int		14594	0					
ANR	14627	Identifier	VBILines		14594	1					
ANR	14628	IdentifierDeclStatement	float VFieldRate = 60.0 ;	277:4:8429:8452	14594	28	True				
ANR	14629	IdentifierDecl	VFieldRate = 60.0		14594	0					
ANR	14630	IdentifierDeclType	float		14594	0					
ANR	14631	Identifier	VFieldRate		14594	1					
ANR	14632	AssignmentExpression	VFieldRate = 60.0		14594	2		=			
ANR	14633	Identifier	VFieldRate		14594	0					
ANR	14634	PrimaryExpression	60.0		14594	1					
ANR	14635	IdentifierDeclStatement	int VSync ;	278:4:8458:8467	14594	29	True				
ANR	14636	IdentifierDecl	VSync		14594	0					
ANR	14637	IdentifierDeclType	int		14594	0					
ANR	14638	Identifier	VSync		14594	1					
ANR	14639	IdentifierDeclStatement	float HPeriod ;	279:4:8473:8486	14594	30	True				
ANR	14640	IdentifierDecl	HPeriod		14594	0					
ANR	14641	IdentifierDeclType	float		14594	0					
ANR	14642	Identifier	HPeriod		14594	1					
ANR	14643	ExpressionStatement	width = width - ( width % CVT_H_GRANULARITY )	282:4:8524:8567	14594	31	True				
ANR	14644	AssignmentExpression	width = width - ( width % CVT_H_GRANULARITY )		14594	0		=			
ANR	14645	Identifier	width		14594	0					
ANR	14646	AdditiveExpression	width - ( width % CVT_H_GRANULARITY )		14594	1		-			
ANR	14647	Identifier	width		14594	0					
ANR	14648	MultiplicativeExpression	width % CVT_H_GRANULARITY		14594	1		%			
ANR	14649	Identifier	width		14594	0					
ANR	14650	Identifier	CVT_H_GRANULARITY		14594	1					
ANR	14651	ExpressionStatement	mode -> width = width	284:4:8574:8593	14594	32	True				
ANR	14652	AssignmentExpression	mode -> width = width		14594	0		=			
ANR	14653	PtrMemberAccess	mode -> width		14594	0					
ANR	14654	Identifier	mode		14594	0					
ANR	14655	Identifier	width		14594	1					
ANR	14656	Identifier	width		14594	1					
ANR	14657	ExpressionStatement	mode -> height = height	285:4:8599:8620	14594	33	True				
ANR	14658	AssignmentExpression	mode -> height = height		14594	0		=			
ANR	14659	PtrMemberAccess	mode -> height		14594	0					
ANR	14660	Identifier	mode		14594	0					
ANR	14661	Identifier	height		14594	1					
ANR	14662	Identifier	height		14594	1					
ANR	14663	ExpressionStatement	VSync = 10	286:4:8626:8636	14594	34	True				
ANR	14664	AssignmentExpression	VSync = 10		14594	0		=			
ANR	14665	Identifier	VSync		14594	0					
ANR	14666	PrimaryExpression	10		14594	1					
ANR	14667	ExpressionStatement	HPeriod = ( ( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK ) ) / height	289:4:8684:8757	14594	35	True				
ANR	14668	AssignmentExpression	HPeriod = ( ( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK ) ) / height		14594	0		=			
ANR	14669	Identifier	HPeriod		14594	0					
ANR	14670	MultiplicativeExpression	( ( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK ) ) / height		14594	1		/			
ANR	14671	CastExpression	( float ) ( 1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK )		14594	0					
ANR	14672	CastTarget	float		14594	0					
ANR	14673	AdditiveExpression	1000000.0 / VFieldRate - CVT_RB_MIN_VBLANK		14594	1		-			
ANR	14674	MultiplicativeExpression	1000000.0 / VFieldRate		14594	0		/			
ANR	14675	PrimaryExpression	1000000.0		14594	0					
ANR	14676	Identifier	VFieldRate		14594	1					
ANR	14677	Identifier	CVT_RB_MIN_VBLANK		14594	1					
ANR	14678	Identifier	height		14594	1					
ANR	14679	ExpressionStatement	VBILines = ( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod + 1	292:4:8819:8871	14594	36	True				
ANR	14680	AssignmentExpression	VBILines = ( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod + 1		14594	0		=			
ANR	14681	Identifier	VBILines		14594	0					
ANR	14682	AdditiveExpression	( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod + 1		14594	1		+			
ANR	14683	MultiplicativeExpression	( ( float ) CVT_RB_MIN_VBLANK ) / HPeriod		14594	0		/			
ANR	14684	CastExpression	( float ) CVT_RB_MIN_VBLANK		14594	0					
ANR	14685	CastTarget	float		14594	0					
ANR	14686	Identifier	CVT_RB_MIN_VBLANK		14594	1					
ANR	14687	Identifier	HPeriod		14594	1					
ANR	14688	PrimaryExpression	1		14594	1					
ANR	14689	IfStatement	if ( VBILines < ( CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH ) )		14594	37					
ANR	14690	Condition	VBILines < ( CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH )	295:8:8937:8990	14594	0	True				
ANR	14691	RelationalExpression	VBILines < ( CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH )		14594	0		<			
ANR	14692	Identifier	VBILines		14594	0					
ANR	14693	AdditiveExpression	CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH		14594	1		+			
ANR	14694	Identifier	CVT_RB_VFPORCH		14594	0					
ANR	14695	AdditiveExpression	VSync + CVT_MIN_V_BPORCH		14594	1		+			
ANR	14696	Identifier	VSync		14594	0					
ANR	14697	Identifier	CVT_MIN_V_BPORCH		14594	1					
ANR	14698	ExpressionStatement	VBILines = CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH	296:8:9001:9053	14594	1	True				
ANR	14699	AssignmentExpression	VBILines = CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH		14594	0		=			
ANR	14700	Identifier	VBILines		14594	0					
ANR	14701	AdditiveExpression	CVT_RB_VFPORCH + VSync + CVT_MIN_V_BPORCH		14594	1		+			
ANR	14702	Identifier	CVT_RB_VFPORCH		14594	0					
ANR	14703	AdditiveExpression	VSync + CVT_MIN_V_BPORCH		14594	1		+			
ANR	14704	Identifier	VSync		14594	0					
ANR	14705	Identifier	CVT_MIN_V_BPORCH		14594	1					
ANR	14706	ExpressionStatement	mode -> vTotal = height + VBILines	299:4:9119:9151	14594	38	True				
ANR	14707	AssignmentExpression	mode -> vTotal = height + VBILines		14594	0		=			
ANR	14708	PtrMemberAccess	mode -> vTotal		14594	0					
ANR	14709	Identifier	mode		14594	0					
ANR	14710	Identifier	vTotal		14594	1					
ANR	14711	AdditiveExpression	height + VBILines		14594	1		+			
ANR	14712	Identifier	height		14594	0					
ANR	14713	Identifier	VBILines		14594	1					
ANR	14714	ExpressionStatement	mode -> hTotal = mode -> width + CVT_RB_H_BLANK	302:4:9210:9253	14594	39	True				
ANR	14715	AssignmentExpression	mode -> hTotal = mode -> width + CVT_RB_H_BLANK		14594	0		=			
ANR	14716	PtrMemberAccess	mode -> hTotal		14594	0					
ANR	14717	Identifier	mode		14594	0					
ANR	14718	Identifier	hTotal		14594	1					
ANR	14719	AdditiveExpression	mode -> width + CVT_RB_H_BLANK		14594	1		+			
ANR	14720	PtrMemberAccess	mode -> width		14594	0					
ANR	14721	Identifier	mode		14594	0					
ANR	14722	Identifier	width		14594	1					
ANR	14723	Identifier	CVT_RB_H_BLANK		14594	1					
ANR	14724	ExpressionStatement	mode -> hSyncEnd = mode -> width + CVT_RB_H_BLANK / 2	305:4:9291:9340	14594	40	True				
ANR	14725	AssignmentExpression	mode -> hSyncEnd = mode -> width + CVT_RB_H_BLANK / 2		14594	0		=			
ANR	14726	PtrMemberAccess	mode -> hSyncEnd		14594	0					
ANR	14727	Identifier	mode		14594	0					
ANR	14728	Identifier	hSyncEnd		14594	1					
ANR	14729	AdditiveExpression	mode -> width + CVT_RB_H_BLANK / 2		14594	1		+			
ANR	14730	PtrMemberAccess	mode -> width		14594	0					
ANR	14731	Identifier	mode		14594	0					
ANR	14732	Identifier	width		14594	1					
ANR	14733	MultiplicativeExpression	CVT_RB_H_BLANK / 2		14594	1		/			
ANR	14734	Identifier	CVT_RB_H_BLANK		14594	0					
ANR	14735	PrimaryExpression	2		14594	1					
ANR	14736	ExpressionStatement	mode -> hSyncStart = mode -> hSyncEnd - CVT_RB_H_SYNC	306:4:9346:9395	14594	41	True				
ANR	14737	AssignmentExpression	mode -> hSyncStart = mode -> hSyncEnd - CVT_RB_H_SYNC		14594	0		=			
ANR	14738	PtrMemberAccess	mode -> hSyncStart		14594	0					
ANR	14739	Identifier	mode		14594	0					
ANR	14740	Identifier	hSyncStart		14594	1					
ANR	14741	AdditiveExpression	mode -> hSyncEnd - CVT_RB_H_SYNC		14594	1		-			
ANR	14742	PtrMemberAccess	mode -> hSyncEnd		14594	0					
ANR	14743	Identifier	mode		14594	0					
ANR	14744	Identifier	hSyncEnd		14594	1					
ANR	14745	Identifier	CVT_RB_H_SYNC		14594	1					
ANR	14746	ExpressionStatement	mode -> vSyncStart = mode -> height + CVT_RB_VFPORCH	309:4:9433:9481	14594	42	True				
ANR	14747	AssignmentExpression	mode -> vSyncStart = mode -> height + CVT_RB_VFPORCH		14594	0		=			
ANR	14748	PtrMemberAccess	mode -> vSyncStart		14594	0					
ANR	14749	Identifier	mode		14594	0					
ANR	14750	Identifier	vSyncStart		14594	1					
ANR	14751	AdditiveExpression	mode -> height + CVT_RB_VFPORCH		14594	1		+			
ANR	14752	PtrMemberAccess	mode -> height		14594	0					
ANR	14753	Identifier	mode		14594	0					
ANR	14754	Identifier	height		14594	1					
ANR	14755	Identifier	CVT_RB_VFPORCH		14594	1					
ANR	14756	ExpressionStatement	mode -> vSyncEnd = mode -> vSyncStart + VSync	310:4:9487:9528	14594	43	True				
ANR	14757	AssignmentExpression	mode -> vSyncEnd = mode -> vSyncStart + VSync		14594	0		=			
ANR	14758	PtrMemberAccess	mode -> vSyncEnd		14594	0					
ANR	14759	Identifier	mode		14594	0					
ANR	14760	Identifier	vSyncEnd		14594	1					
ANR	14761	AdditiveExpression	mode -> vSyncStart + VSync		14594	1		+			
ANR	14762	PtrMemberAccess	mode -> vSyncStart		14594	0					
ANR	14763	Identifier	mode		14594	0					
ANR	14764	Identifier	vSyncStart		14594	1					
ANR	14765	Identifier	VSync		14594	1					
ANR	14766	ExpressionStatement	mode -> dotClock = mode -> hTotal * 1000.0 / HPeriod	313:4:9594:9642	14594	44	True				
ANR	14767	AssignmentExpression	mode -> dotClock = mode -> hTotal * 1000.0 / HPeriod		14594	0		=			
ANR	14768	PtrMemberAccess	mode -> dotClock		14594	0					
ANR	14769	Identifier	mode		14594	0					
ANR	14770	Identifier	dotClock		14594	1					
ANR	14771	MultiplicativeExpression	mode -> hTotal * 1000.0 / HPeriod		14594	1		*			
ANR	14772	PtrMemberAccess	mode -> hTotal		14594	0					
ANR	14773	Identifier	mode		14594	0					
ANR	14774	Identifier	hTotal		14594	1					
ANR	14775	MultiplicativeExpression	1000.0 / HPeriod		14594	1		/			
ANR	14776	PrimaryExpression	1000.0		14594	0					
ANR	14777	Identifier	HPeriod		14594	1					
ANR	14778	ExpressionStatement	mode -> dotClock -= mode -> dotClock % CVT_CLOCK_STEP	314:4:9648:9697	14594	45	True				
ANR	14779	AssignmentExpression	mode -> dotClock -= mode -> dotClock % CVT_CLOCK_STEP		14594	0		-=			
ANR	14780	PtrMemberAccess	mode -> dotClock		14594	0					
ANR	14781	Identifier	mode		14594	0					
ANR	14782	Identifier	dotClock		14594	1					
ANR	14783	MultiplicativeExpression	mode -> dotClock % CVT_CLOCK_STEP		14594	1		%			
ANR	14784	PtrMemberAccess	mode -> dotClock		14594	0					
ANR	14785	Identifier	mode		14594	0					
ANR	14786	Identifier	dotClock		14594	1					
ANR	14787	Identifier	CVT_CLOCK_STEP		14594	1					
ANR	14788	ReturnType	static void		14594	1					
ANR	14789	Identifier	set_reduced_cvt_mode		14594	2					
ANR	14790	ParameterList	"XRRModeInfo * mode , int width , int height"		14594	3					
ANR	14791	Parameter	XRRModeInfo * mode	243:33:7378:7394	14594	0	True				
ANR	14792	ParameterType	XRRModeInfo *		14594	0					
ANR	14793	Identifier	mode		14594	1					
ANR	14794	Parameter	int width	243:52:7397:7405	14594	1	True				
ANR	14795	ParameterType	int		14594	0					
ANR	14796	Identifier	width		14594	1					
ANR	14797	Parameter	int height	243:63:7408:7417	14594	2	True				
ANR	14798	ParameterType	int		14594	0					
ANR	14799	Identifier	height		14594	1					
ANR	14800	CFGEntryNode	ENTRY		14594		True				
ANR	14801	CFGExitNode	EXIT		14594		True				
ANR	14802	Symbol	HPeriod		14594						
ANR	14803	Symbol	mode -> hTotal		14594						
ANR	14804	Symbol	VFieldRate		14594						
ANR	14805	Symbol	mode -> hSyncEnd		14594						
ANR	14806	Symbol	mode -> vSyncEnd		14594						
ANR	14807	Symbol	mode -> height		14594						
ANR	14808	Symbol	CVT_CLOCK_STEP		14594						
ANR	14809	Symbol	mode -> dotClock		14594						
ANR	14810	Symbol	CVT_RB_H_SYNC		14594						
ANR	14811	Symbol	mode -> vSyncStart		14594						
ANR	14812	Symbol	mode -> width		14594						
ANR	14813	Symbol	CVT_H_GRANULARITY		14594						
ANR	14814	Symbol	CVT_RB_MIN_VBLANK		14594						
ANR	14815	Symbol	mode		14594						
ANR	14816	Symbol	VBILines		14594						
ANR	14817	Symbol	VSync		14594						
ANR	14818	Symbol	mode -> vTotal		14594						
ANR	14819	Symbol	mode -> hSyncStart		14594						
ANR	14820	Symbol	width		14594						
ANR	14821	Symbol	* mode		14594						
ANR	14822	Symbol	CVT_RB_H_BLANK		14594						
ANR	14823	Symbol	CVT_RB_VFPORCH		14594						
ANR	14824	Symbol	height		14594						
ANR	14825	Symbol	CVT_MIN_V_BPORCH		14594						
ANR	14826	Function	create_new_mode	318:0:9703:10504							
ANR	14827	FunctionDef	"create_new_mode (struct vdagent_x11 * x11 , int output_index , int width , int height)"		14826	0					
ANR	14828	CompoundStatement		320:0:9841:10504	14826	0					
ANR	14829	IdentifierDeclStatement	char modename [ 20 ] ;	321:4:9847:9864	14826	0	True				
ANR	14830	IdentifierDecl	modename [ 20 ]		14826	0					
ANR	14831	IdentifierDeclType	char [ 20 ]		14826	0					
ANR	14832	Identifier	modename		14826	1					
ANR	14833	PrimaryExpression	20		14826	2					
ANR	14834	IdentifierDeclStatement	XRRModeInfo mode ;	322:4:9870:9886	14826	1	True				
ANR	14835	IdentifierDecl	mode		14826	0					
ANR	14836	IdentifierDeclType	XRRModeInfo		14826	0					
ANR	14837	Identifier	mode		14826	1					
ANR	14838	ExpressionStatement	"snprintf ( modename , sizeof ( modename ) , ""%dx%d-%d"" , width , height , output_index )"	324:4:9893:9970	14826	2	True				
ANR	14839	CallExpression	"snprintf ( modename , sizeof ( modename ) , ""%dx%d-%d"" , width , height , output_index )"		14826	0					
ANR	14840	Callee	snprintf		14826	0					
ANR	14841	Identifier	snprintf		14826	0					
ANR	14842	ArgumentList	modename		14826	1					
ANR	14843	Argument	modename		14826	0					
ANR	14844	Identifier	modename		14826	0					
ANR	14845	Argument	sizeof ( modename )		14826	1					
ANR	14846	SizeofExpression	sizeof ( modename )		14826	0					
ANR	14847	Sizeof	sizeof		14826	0					
ANR	14848	SizeofOperand	modename		14826	1					
ANR	14849	Argument	"""%dx%d-%d"""		14826	2					
ANR	14850	PrimaryExpression	"""%dx%d-%d"""		14826	0					
ANR	14851	Argument	width		14826	3					
ANR	14852	Identifier	width		14826	0					
ANR	14853	Argument	height		14826	4					
ANR	14854	Identifier	height		14826	0					
ANR	14855	Argument	output_index		14826	5					
ANR	14856	Identifier	output_index		14826	0					
ANR	14857	ExpressionStatement	mode . hSkew = 0	325:4:9976:9990	14826	3	True				
ANR	14858	AssignmentExpression	mode . hSkew = 0		14826	0		=			
ANR	14859	MemberAccess	mode . hSkew		14826	0					
ANR	14860	Identifier	mode		14826	0					
ANR	14861	Identifier	hSkew		14826	1					
ANR	14862	PrimaryExpression	0		14826	1					
ANR	14863	ExpressionStatement	mode . name = modename	326:4:9996:10016	14826	4	True				
ANR	14864	AssignmentExpression	mode . name = modename		14826	0		=			
ANR	14865	MemberAccess	mode . name		14826	0					
ANR	14866	Identifier	mode		14826	0					
ANR	14867	Identifier	name		14826	1					
ANR	14868	Identifier	modename		14826	1					
ANR	14869	ExpressionStatement	mode . nameLength = strlen ( mode . name )	327:4:10022:10057	14826	5	True				
ANR	14870	AssignmentExpression	mode . nameLength = strlen ( mode . name )		14826	0		=			
ANR	14871	MemberAccess	mode . nameLength		14826	0					
ANR	14872	Identifier	mode		14826	0					
ANR	14873	Identifier	nameLength		14826	1					
ANR	14874	CallExpression	strlen ( mode . name )		14826	1					
ANR	14875	Callee	strlen		14826	0					
ANR	14876	Identifier	strlen		14826	0					
ANR	14877	ArgumentList	mode . name		14826	1					
ANR	14878	Argument	mode . name		14826	0					
ANR	14879	MemberAccess	mode . name		14826	0					
ANR	14880	Identifier	mode		14826	0					
ANR	14881	Identifier	name		14826	1					
ANR	14882	ExpressionStatement	"set_reduced_cvt_mode ( & mode , width , height )"	328:4:10063:10105	14826	6	True				
ANR	14883	CallExpression	"set_reduced_cvt_mode ( & mode , width , height )"		14826	0					
ANR	14884	Callee	set_reduced_cvt_mode		14826	0					
ANR	14885	Identifier	set_reduced_cvt_mode		14826	0					
ANR	14886	ArgumentList	& mode		14826	1					
ANR	14887	Argument	& mode		14826	0					
ANR	14888	UnaryOperationExpression	& mode		14826	0					
ANR	14889	UnaryOperator	&		14826	0					
ANR	14890	Identifier	mode		14826	1					
ANR	14891	Argument	width		14826	1					
ANR	14892	Identifier	width		14826	0					
ANR	14893	Argument	height		14826	2					
ANR	14894	Identifier	height		14826	0					
ANR	14895	ExpressionStatement	mode . modeFlags = 0	329:4:10111:10129	14826	7	True				
ANR	14896	AssignmentExpression	mode . modeFlags = 0		14826	0		=			
ANR	14897	MemberAccess	mode . modeFlags		14826	0					
ANR	14898	Identifier	mode		14826	0					
ANR	14899	Identifier	modeFlags		14826	1					
ANR	14900	PrimaryExpression	0		14826	1					
ANR	14901	ExpressionStatement	mode . id = 0	330:4:10135:10146	14826	8	True				
ANR	14902	AssignmentExpression	mode . id = 0		14826	0		=			
ANR	14903	MemberAccess	mode . id		14826	0					
ANR	14904	Identifier	mode		14826	0					
ANR	14905	Identifier	id		14826	1					
ANR	14906	PrimaryExpression	0		14826	1					
ANR	14907	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	331:4:10152:10201	14826	9	True				
ANR	14908	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		14826	0					
ANR	14909	Callee	vdagent_x11_set_error_handler		14826	0					
ANR	14910	Identifier	vdagent_x11_set_error_handler		14826	0					
ANR	14911	ArgumentList	x11		14826	1					
ANR	14912	Argument	x11		14826	0					
ANR	14913	Identifier	x11		14826	0					
ANR	14914	Argument	error_handler		14826	1					
ANR	14915	Identifier	error_handler		14826	0					
ANR	14916	ExpressionStatement	"XRRCreateMode ( x11 -> display , x11 -> root_window [ 0 ] , & mode )"	332:4:10207:10263	14826	10	True				
ANR	14917	CallExpression	"XRRCreateMode ( x11 -> display , x11 -> root_window [ 0 ] , & mode )"		14826	0					
ANR	14918	Callee	XRRCreateMode		14826	0					
ANR	14919	Identifier	XRRCreateMode		14826	0					
ANR	14920	ArgumentList	x11 -> display		14826	1					
ANR	14921	Argument	x11 -> display		14826	0					
ANR	14922	PtrMemberAccess	x11 -> display		14826	0					
ANR	14923	Identifier	x11		14826	0					
ANR	14924	Identifier	display		14826	1					
ANR	14925	Argument	x11 -> root_window [ 0 ]		14826	1					
ANR	14926	ArrayIndexing	x11 -> root_window [ 0 ]		14826	0					
ANR	14927	PtrMemberAccess	x11 -> root_window		14826	0					
ANR	14928	Identifier	x11		14826	0					
ANR	14929	Identifier	root_window		14826	1					
ANR	14930	PrimaryExpression	0		14826	1					
ANR	14931	Argument	& mode		14826	2					
ANR	14932	UnaryOperationExpression	& mode		14826	0					
ANR	14933	UnaryOperator	&		14826	0					
ANR	14934	Identifier	mode		14826	1					
ANR	14935	ExpressionStatement	vdagent_x11_restore_error_handler ( x11 )	334:4:10324:10362	14826	11	True				
ANR	14936	CallExpression	vdagent_x11_restore_error_handler ( x11 )		14826	0					
ANR	14937	Callee	vdagent_x11_restore_error_handler		14826	0					
ANR	14938	Identifier	vdagent_x11_restore_error_handler		14826	0					
ANR	14939	ArgumentList	x11		14826	1					
ANR	14940	Argument	x11		14826	0					
ANR	14941	Identifier	x11		14826	0					
ANR	14942	ExpressionStatement	"update_randr_res ( x11 , 0 )"	337:4:10432:10456	14826	12	True				
ANR	14943	CallExpression	"update_randr_res ( x11 , 0 )"		14826	0					
ANR	14944	Callee	update_randr_res		14826	0					
ANR	14945	Identifier	update_randr_res		14826	0					
ANR	14946	ArgumentList	x11		14826	1					
ANR	14947	Argument	x11		14826	0					
ANR	14948	Identifier	x11		14826	0					
ANR	14949	Argument	0		14826	1					
ANR	14950	PrimaryExpression	0		14826	0					
ANR	14951	ReturnStatement	"return find_mode_by_name ( x11 , modename ) ;"	339:4:10463:10502	14826	13	True				
ANR	14952	CallExpression	"find_mode_by_name ( x11 , modename )"		14826	0					
ANR	14953	Callee	find_mode_by_name		14826	0					
ANR	14954	Identifier	find_mode_by_name		14826	0					
ANR	14955	ArgumentList	x11		14826	1					
ANR	14956	Argument	x11		14826	0					
ANR	14957	Identifier	x11		14826	0					
ANR	14958	Argument	modename		14826	1					
ANR	14959	Identifier	modename		14826	0					
ANR	14960	ReturnType	static XRRModeInfo *		14826	1					
ANR	14961	Identifier	create_new_mode		14826	2					
ANR	14962	ParameterList	"struct vdagent_x11 * x11 , int output_index , int width , int height"		14826	3					
ANR	14963	Parameter	struct vdagent_x11 * x11	318:36:9739:9761	14826	0	True				
ANR	14964	ParameterType	struct vdagent_x11 *		14826	0					
ANR	14965	Identifier	x11		14826	1					
ANR	14966	Parameter	int output_index	318:61:9764:9779	14826	1	True				
ANR	14967	ParameterType	int		14826	0					
ANR	14968	Identifier	output_index		14826	1					
ANR	14969	Parameter	int width	319:36:9818:9826	14826	2	True				
ANR	14970	ParameterType	int		14826	0					
ANR	14971	Identifier	width		14826	1					
ANR	14972	Parameter	int height	319:47:9829:9838	14826	3	True				
ANR	14973	ParameterType	int		14826	0					
ANR	14974	Identifier	height		14826	1					
ANR	14975	CFGEntryNode	ENTRY		14826		True				
ANR	14976	CFGExitNode	EXIT		14826		True				
ANR	14977	Symbol	error_handler		14826						
ANR	14978	Symbol	* x11		14826						
ANR	14979	Symbol	output_index		14826						
ANR	14980	Symbol	mode . id		14826						
ANR	14981	Symbol	x11 -> root_window		14826						
ANR	14982	Symbol	* * x11		14826						
ANR	14983	Symbol	mode		14826						
ANR	14984	Symbol	mode . nameLength		14826						
ANR	14985	Symbol	strlen		14826						
ANR	14986	Symbol	& mode		14826						
ANR	14987	Symbol	x11 -> display		14826						
ANR	14988	Symbol	modename		14826						
ANR	14989	Symbol	width		14826						
ANR	14990	Symbol	* x11 -> root_window		14826						
ANR	14991	Symbol	x11		14826						
ANR	14992	Symbol	find_mode_by_name		14826						
ANR	14993	Symbol	mode . name		14826						
ANR	14994	Symbol	mode . modeFlags		14826						
ANR	14995	Symbol	mode . hSkew		14826						
ANR	14996	Symbol	height		14826						
ANR	14997	Function	xrandr_add_and_set	342:0:10507:12257							
ANR	14998	FunctionDef	"xrandr_add_and_set (struct vdagent_x11 * x11 , int output , int x , int y , int width , int height)"		14997	0					
ANR	14999	CompoundStatement		344:0:10641:12257	14997	0					
ANR	15000	IdentifierDeclStatement	XRRModeInfo * mode ;	345:4:10647:10664	14997	0	True				
ANR	15001	IdentifierDecl	* mode		14997	0					
ANR	15002	IdentifierDeclType	XRRModeInfo *		14997	0					
ANR	15003	Identifier	mode		14997	1					
ANR	15004	IdentifierDeclStatement	int xid ;	346:4:10670:10677	14997	1	True				
ANR	15005	IdentifierDecl	xid		14997	0					
ANR	15006	IdentifierDeclType	int		14997	0					
ANR	15007	Identifier	xid		14997	1					
ANR	15008	IdentifierDeclStatement	Status s ;	347:4:10683:10691	14997	2	True				
ANR	15009	IdentifierDecl	s		14997	0					
ANR	15010	IdentifierDeclType	Status		14997	0					
ANR	15011	Identifier	s		14997	1					
ANR	15012	IdentifierDeclStatement	RROutput outputs [ 1 ] ;	348:4:10697:10716	14997	3	True				
ANR	15013	IdentifierDecl	outputs [ 1 ]		14997	0					
ANR	15014	IdentifierDeclType	RROutput [ 1 ]		14997	0					
ANR	15015	Identifier	outputs		14997	1					
ANR	15016	PrimaryExpression	1		14997	2					
ANR	15017	IdentifierDeclStatement	int old_width = x11 -> randr . monitor_sizes [ output ] . width ;	349:4:10722:10777	14997	4	True				
ANR	15018	IdentifierDecl	old_width = x11 -> randr . monitor_sizes [ output ] . width		14997	0					
ANR	15019	IdentifierDeclType	int		14997	0					
ANR	15020	Identifier	old_width		14997	1					
ANR	15021	AssignmentExpression	old_width = x11 -> randr . monitor_sizes [ output ] . width		14997	2		=			
ANR	15022	Identifier	old_width		14997	0					
ANR	15023	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		14997	1					
ANR	15024	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		14997	0					
ANR	15025	MemberAccess	x11 -> randr . monitor_sizes		14997	0					
ANR	15026	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15027	Identifier	x11		14997	0					
ANR	15028	Identifier	randr		14997	1					
ANR	15029	Identifier	monitor_sizes		14997	1					
ANR	15030	Identifier	output		14997	1					
ANR	15031	Identifier	width		14997	1					
ANR	15032	IdentifierDeclStatement	int old_height = x11 -> randr . monitor_sizes [ output ] . height ;	350:4:10783:10839	14997	5	True				
ANR	15033	IdentifierDecl	old_height = x11 -> randr . monitor_sizes [ output ] . height		14997	0					
ANR	15034	IdentifierDeclType	int		14997	0					
ANR	15035	Identifier	old_height		14997	1					
ANR	15036	AssignmentExpression	old_height = x11 -> randr . monitor_sizes [ output ] . height		14997	2		=			
ANR	15037	Identifier	old_height		14997	0					
ANR	15038	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		14997	1					
ANR	15039	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		14997	0					
ANR	15040	MemberAccess	x11 -> randr . monitor_sizes		14997	0					
ANR	15041	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15042	Identifier	x11		14997	0					
ANR	15043	Identifier	randr		14997	1					
ANR	15044	Identifier	monitor_sizes		14997	1					
ANR	15045	Identifier	output		14997	1					
ANR	15046	Identifier	height		14997	1					
ANR	15047	IfStatement	if ( ! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0 )		14997	6					
ANR	15048	Condition	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0	352:8:10850:10915	14997	0	True				
ANR	15049	OrExpression	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0		14997	0		||			
ANR	15050	UnaryOperationExpression	! x11 -> randr . res		14997	0					
ANR	15051	UnaryOperator	!		14997	0					
ANR	15052	MemberAccess	x11 -> randr . res		14997	1					
ANR	15053	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15054	Identifier	x11		14997	0					
ANR	15055	Identifier	randr		14997	1					
ANR	15056	Identifier	res		14997	1					
ANR	15057	OrExpression	output >= x11 -> randr . res -> noutput || output < 0		14997	1		||			
ANR	15058	RelationalExpression	output >= x11 -> randr . res -> noutput		14997	0		>=			
ANR	15059	Identifier	output		14997	0					
ANR	15060	PtrMemberAccess	x11 -> randr . res -> noutput		14997	1					
ANR	15061	MemberAccess	x11 -> randr . res		14997	0					
ANR	15062	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15063	Identifier	x11		14997	0					
ANR	15064	Identifier	randr		14997	1					
ANR	15065	Identifier	res		14997	1					
ANR	15066	Identifier	noutput		14997	1					
ANR	15067	RelationalExpression	output < 0		14997	1		<			
ANR	15068	Identifier	output		14997	0					
ANR	15069	PrimaryExpression	0		14997	1					
ANR	15070	CompoundStatement		9:76:276:276	14997	1					
ANR	15071	ExpressionStatement	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"	353:8:10928:11022	14997	0	True				
ANR	15072	CallExpression	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"		14997	0					
ANR	15073	Callee	syslog		14997	0					
ANR	15074	Identifier	syslog		14997	0					
ANR	15075	ArgumentList	LOG_ERR		14997	1					
ANR	15076	Argument	LOG_ERR		14997	0					
ANR	15077	Identifier	LOG_ERR		14997	0					
ANR	15078	Argument	"""%s: program error: missing RANDR or bad output"""		14997	1					
ANR	15079	PrimaryExpression	"""%s: program error: missing RANDR or bad output"""		14997	0					
ANR	15080	Argument	__FUNCTION__		14997	2					
ANR	15081	Identifier	__FUNCTION__		14997	0					
ANR	15082	ReturnStatement	return 0 ;	355:8:11032:11040	14997	1	True				
ANR	15083	PrimaryExpression	0		14997	0					
ANR	15084	IfStatement	if ( x11 -> set_crtc_config_not_functional )		14997	7					
ANR	15085	Condition	x11 -> set_crtc_config_not_functional	357:8:11056:11090	14997	0	True				
ANR	15086	PtrMemberAccess	x11 -> set_crtc_config_not_functional		14997	0					
ANR	15087	Identifier	x11		14997	0					
ANR	15088	Identifier	set_crtc_config_not_functional		14997	1					
ANR	15089	CompoundStatement		14:45:451:451	14997	1					
ANR	15090	ReturnStatement	return 0 ;	359:8:11164:11172	14997	0	True				
ANR	15091	PrimaryExpression	0		14997	0					
ANR	15092	ExpressionStatement	xid = x11 -> randr . res -> outputs [ output ]	361:4:11184:11221	14997	8	True				
ANR	15093	AssignmentExpression	xid = x11 -> randr . res -> outputs [ output ]		14997	0		=			
ANR	15094	Identifier	xid		14997	0					
ANR	15095	ArrayIndexing	x11 -> randr . res -> outputs [ output ]		14997	1					
ANR	15096	PtrMemberAccess	x11 -> randr . res -> outputs		14997	0					
ANR	15097	MemberAccess	x11 -> randr . res		14997	0					
ANR	15098	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15099	Identifier	x11		14997	0					
ANR	15100	Identifier	randr		14997	1					
ANR	15101	Identifier	res		14997	1					
ANR	15102	Identifier	outputs		14997	1					
ANR	15103	Identifier	output		14997	1					
ANR	15104	ExpressionStatement	"mode = find_mode_by_size ( x11 , output , width , height )"	362:4:11227:11279	14997	9	True				
ANR	15105	AssignmentExpression	"mode = find_mode_by_size ( x11 , output , width , height )"		14997	0		=			
ANR	15106	Identifier	mode		14997	0					
ANR	15107	CallExpression	"find_mode_by_size ( x11 , output , width , height )"		14997	1					
ANR	15108	Callee	find_mode_by_size		14997	0					
ANR	15109	Identifier	find_mode_by_size		14997	0					
ANR	15110	ArgumentList	x11		14997	1					
ANR	15111	Argument	x11		14997	0					
ANR	15112	Identifier	x11		14997	0					
ANR	15113	Argument	output		14997	1					
ANR	15114	Identifier	output		14997	0					
ANR	15115	Argument	width		14997	2					
ANR	15116	Identifier	width		14997	0					
ANR	15117	Argument	height		14997	3					
ANR	15118	Identifier	height		14997	0					
ANR	15119	IfStatement	if ( ! mode )		14997	10					
ANR	15120	Condition	! mode	363:8:11289:11293	14997	0	True				
ANR	15121	UnaryOperationExpression	! mode		14997	0					
ANR	15122	UnaryOperator	!		14997	0					
ANR	15123	Identifier	mode		14997	1					
ANR	15124	CompoundStatement		20:15:654:654	14997	1					
ANR	15125	ExpressionStatement	"mode = create_new_mode ( x11 , output , width , height )"	364:8:11306:11356	14997	0	True				
ANR	15126	AssignmentExpression	"mode = create_new_mode ( x11 , output , width , height )"		14997	0		=			
ANR	15127	Identifier	mode		14997	0					
ANR	15128	CallExpression	"create_new_mode ( x11 , output , width , height )"		14997	1					
ANR	15129	Callee	create_new_mode		14997	0					
ANR	15130	Identifier	create_new_mode		14997	0					
ANR	15131	ArgumentList	x11		14997	1					
ANR	15132	Argument	x11		14997	0					
ANR	15133	Identifier	x11		14997	0					
ANR	15134	Argument	output		14997	1					
ANR	15135	Identifier	output		14997	0					
ANR	15136	Argument	width		14997	2					
ANR	15137	Identifier	width		14997	0					
ANR	15138	Argument	height		14997	3					
ANR	15139	Identifier	height		14997	0					
ANR	15140	IfStatement	if ( ! mode )		14997	11					
ANR	15141	Condition	! mode	366:8:11372:11376	14997	0	True				
ANR	15142	UnaryOperationExpression	! mode		14997	0					
ANR	15143	UnaryOperator	!		14997	0					
ANR	15144	Identifier	mode		14997	1					
ANR	15145	CompoundStatement		23:15:737:737	14997	1					
ANR	15146	ExpressionStatement	"syslog ( LOG_ERR , ""failed to add a new mode"" )"	367:8:11389:11432	14997	0	True				
ANR	15147	CallExpression	"syslog ( LOG_ERR , ""failed to add a new mode"" )"		14997	0					
ANR	15148	Callee	syslog		14997	0					
ANR	15149	Identifier	syslog		14997	0					
ANR	15150	ArgumentList	LOG_ERR		14997	1					
ANR	15151	Argument	LOG_ERR		14997	0					
ANR	15152	Identifier	LOG_ERR		14997	0					
ANR	15153	Argument	"""failed to add a new mode"""		14997	1					
ANR	15154	PrimaryExpression	"""failed to add a new mode"""		14997	0					
ANR	15155	ReturnStatement	return 0 ;	368:8:11442:11450	14997	1	True				
ANR	15156	PrimaryExpression	0		14997	0					
ANR	15157	ExpressionStatement	"XRRAddOutputMode ( x11 -> display , xid , mode -> id )"	370:4:11462:11507	14997	12	True				
ANR	15158	CallExpression	"XRRAddOutputMode ( x11 -> display , xid , mode -> id )"		14997	0					
ANR	15159	Callee	XRRAddOutputMode		14997	0					
ANR	15160	Identifier	XRRAddOutputMode		14997	0					
ANR	15161	ArgumentList	x11 -> display		14997	1					
ANR	15162	Argument	x11 -> display		14997	0					
ANR	15163	PtrMemberAccess	x11 -> display		14997	0					
ANR	15164	Identifier	x11		14997	0					
ANR	15165	Identifier	display		14997	1					
ANR	15166	Argument	xid		14997	1					
ANR	15167	Identifier	xid		14997	0					
ANR	15168	Argument	mode -> id		14997	2					
ANR	15169	PtrMemberAccess	mode -> id		14997	0					
ANR	15170	Identifier	mode		14997	0					
ANR	15171	Identifier	id		14997	1					
ANR	15172	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . width = width	371:4:11513:11559	14997	13	True				
ANR	15173	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . width = width		14997	0		=			
ANR	15174	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		14997	0					
ANR	15175	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		14997	0					
ANR	15176	MemberAccess	x11 -> randr . monitor_sizes		14997	0					
ANR	15177	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15178	Identifier	x11		14997	0					
ANR	15179	Identifier	randr		14997	1					
ANR	15180	Identifier	monitor_sizes		14997	1					
ANR	15181	Identifier	output		14997	1					
ANR	15182	Identifier	width		14997	1					
ANR	15183	Identifier	width		14997	1					
ANR	15184	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . height = height	372:4:11565:11613	14997	14	True				
ANR	15185	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . height = height		14997	0		=			
ANR	15186	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		14997	0					
ANR	15187	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		14997	0					
ANR	15188	MemberAccess	x11 -> randr . monitor_sizes		14997	0					
ANR	15189	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15190	Identifier	x11		14997	0					
ANR	15191	Identifier	randr		14997	1					
ANR	15192	Identifier	monitor_sizes		14997	1					
ANR	15193	Identifier	output		14997	1					
ANR	15194	Identifier	height		14997	1					
ANR	15195	Identifier	height		14997	1					
ANR	15196	ExpressionStatement	outputs [ 0 ] = xid	373:4:11619:11635	14997	15	True				
ANR	15197	AssignmentExpression	outputs [ 0 ] = xid		14997	0		=			
ANR	15198	ArrayIndexing	outputs [ 0 ]		14997	0					
ANR	15199	Identifier	outputs		14997	0					
ANR	15200	PrimaryExpression	0		14997	1					
ANR	15201	Identifier	xid		14997	1					
ANR	15202	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	374:4:11641:11690	14997	16	True				
ANR	15203	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		14997	0					
ANR	15204	Callee	vdagent_x11_set_error_handler		14997	0					
ANR	15205	Identifier	vdagent_x11_set_error_handler		14997	0					
ANR	15206	ArgumentList	x11		14997	1					
ANR	15207	Argument	x11		14997	0					
ANR	15208	Identifier	x11		14997	0					
ANR	15209	Argument	error_handler		14997	1					
ANR	15210	Identifier	error_handler		14997	0					
ANR	15211	ExpressionStatement	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , x , y , mode -> id , RR_Rotate_0 , outputs , 1 )"	375:4:11696:11881	14997	17	True				
ANR	15212	AssignmentExpression	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , x , y , mode -> id , RR_Rotate_0 , outputs , 1 )"		14997	0		=			
ANR	15213	Identifier	s		14997	0					
ANR	15214	CallExpression	"XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , x , y , mode -> id , RR_Rotate_0 , outputs , 1 )"		14997	1					
ANR	15215	Callee	XRRSetCrtcConfig		14997	0					
ANR	15216	Identifier	XRRSetCrtcConfig		14997	0					
ANR	15217	ArgumentList	x11 -> display		14997	1					
ANR	15218	Argument	x11 -> display		14997	0					
ANR	15219	PtrMemberAccess	x11 -> display		14997	0					
ANR	15220	Identifier	x11		14997	0					
ANR	15221	Identifier	display		14997	1					
ANR	15222	Argument	x11 -> randr . res		14997	1					
ANR	15223	MemberAccess	x11 -> randr . res		14997	0					
ANR	15224	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15225	Identifier	x11		14997	0					
ANR	15226	Identifier	randr		14997	1					
ANR	15227	Identifier	res		14997	1					
ANR	15228	Argument	x11 -> randr . res -> crtcs [ output ]		14997	2					
ANR	15229	ArrayIndexing	x11 -> randr . res -> crtcs [ output ]		14997	0					
ANR	15230	PtrMemberAccess	x11 -> randr . res -> crtcs		14997	0					
ANR	15231	MemberAccess	x11 -> randr . res		14997	0					
ANR	15232	PtrMemberAccess	x11 -> randr		14997	0					
ANR	15233	Identifier	x11		14997	0					
ANR	15234	Identifier	randr		14997	1					
ANR	15235	Identifier	res		14997	1					
ANR	15236	Identifier	crtcs		14997	1					
ANR	15237	Identifier	output		14997	1					
ANR	15238	Argument	CurrentTime		14997	3					
ANR	15239	Identifier	CurrentTime		14997	0					
ANR	15240	Argument	x		14997	4					
ANR	15241	Identifier	x		14997	0					
ANR	15242	Argument	y		14997	5					
ANR	15243	Identifier	y		14997	0					
ANR	15244	Argument	mode -> id		14997	6					
ANR	15245	PtrMemberAccess	mode -> id		14997	0					
ANR	15246	Identifier	mode		14997	0					
ANR	15247	Identifier	id		14997	1					
ANR	15248	Argument	RR_Rotate_0		14997	7					
ANR	15249	Identifier	RR_Rotate_0		14997	0					
ANR	15250	Argument	outputs		14997	8					
ANR	15251	Identifier	outputs		14997	0					
ANR	15252	Argument	1		14997	9					
ANR	15253	PrimaryExpression	1		14997	0					
ANR	15254	IfStatement	if ( vdagent_x11_restore_error_handler ( x11 ) || ( s != RRSetConfigSuccess ) )		14997	18					
ANR	15255	Condition	vdagent_x11_restore_error_handler ( x11 ) || ( s != RRSetConfigSuccess )	378:8:11891:11957	14997	0	True				
ANR	15256	OrExpression	vdagent_x11_restore_error_handler ( x11 ) || ( s != RRSetConfigSuccess )		14997	0		||			
ANR	15257	CallExpression	vdagent_x11_restore_error_handler ( x11 )		14997	0					
ANR	15258	Callee	vdagent_x11_restore_error_handler		14997	0					
ANR	15259	Identifier	vdagent_x11_restore_error_handler		14997	0					
ANR	15260	ArgumentList	x11		14997	1					
ANR	15261	Argument	x11		14997	0					
ANR	15262	Identifier	x11		14997	0					
ANR	15263	EqualityExpression	s != RRSetConfigSuccess		14997	1		!=			
ANR	15264	Identifier	s		14997	0					
ANR	15265	Identifier	RRSetConfigSuccess		14997	1					
ANR	15266	CompoundStatement		35:77:1318:1318	14997	1					
ANR	15267	ExpressionStatement	"syslog ( LOG_ERR , ""failed to XRRSetCrtcConfig"" )"	379:8:11970:12015	14997	0	True				
ANR	15268	CallExpression	"syslog ( LOG_ERR , ""failed to XRRSetCrtcConfig"" )"		14997	0					
ANR	15269	Callee	syslog		14997	0					
ANR	15270	Identifier	syslog		14997	0					
ANR	15271	ArgumentList	LOG_ERR		14997	1					
ANR	15272	Argument	LOG_ERR		14997	0					
ANR	15273	Identifier	LOG_ERR		14997	0					
ANR	15274	Argument	"""failed to XRRSetCrtcConfig"""		14997	1					
ANR	15275	PrimaryExpression	"""failed to XRRSetCrtcConfig"""		14997	0					
ANR	15276	ExpressionStatement	x11 -> set_crtc_config_not_functional = 1	380:8:12025:12064	14997	1	True				
ANR	15277	AssignmentExpression	x11 -> set_crtc_config_not_functional = 1		14997	0		=			
ANR	15278	PtrMemberAccess	x11 -> set_crtc_config_not_functional		14997	0					
ANR	15279	Identifier	x11		14997	0					
ANR	15280	Identifier	set_crtc_config_not_functional		14997	1					
ANR	15281	PrimaryExpression	1		14997	1					
ANR	15282	ReturnStatement	return 0 ;	381:8:12074:12082	14997	2	True				
ANR	15283	PrimaryExpression	0		14997	0					
ANR	15284	IfStatement	if ( width != old_width || height != old_height )		14997	19					
ANR	15285	Condition	width != old_width || height != old_height	385:8:12141:12182	14997	0	True				
ANR	15286	OrExpression	width != old_width || height != old_height		14997	0		||			
ANR	15287	EqualityExpression	width != old_width		14997	0		!=			
ANR	15288	Identifier	width		14997	0					
ANR	15289	Identifier	old_width		14997	1					
ANR	15290	EqualityExpression	height != old_height		14997	1		!=			
ANR	15291	Identifier	height		14997	0					
ANR	15292	Identifier	old_height		14997	1					
ANR	15293	ExpressionStatement	"delete_mode ( x11 , output , old_width , old_height )"	386:8:12193:12240	14997	1	True				
ANR	15294	CallExpression	"delete_mode ( x11 , output , old_width , old_height )"		14997	0					
ANR	15295	Callee	delete_mode		14997	0					
ANR	15296	Identifier	delete_mode		14997	0					
ANR	15297	ArgumentList	x11		14997	1					
ANR	15298	Argument	x11		14997	0					
ANR	15299	Identifier	x11		14997	0					
ANR	15300	Argument	output		14997	1					
ANR	15301	Identifier	output		14997	0					
ANR	15302	Argument	old_width		14997	2					
ANR	15303	Identifier	old_width		14997	0					
ANR	15304	Argument	old_height		14997	3					
ANR	15305	Identifier	old_height		14997	0					
ANR	15306	ReturnStatement	return 1 ;	388:4:12247:12255	14997	20	True				
ANR	15307	PrimaryExpression	1		14997	0					
ANR	15308	ReturnType	static int		14997	1					
ANR	15309	Identifier	xrandr_add_and_set		14997	2					
ANR	15310	ParameterList	"struct vdagent_x11 * x11 , int output , int x , int y , int width , int height"		14997	3					
ANR	15311	Parameter	struct vdagent_x11 * x11	342:30:10537:10559	14997	0	True				
ANR	15312	ParameterType	struct vdagent_x11 *		14997	0					
ANR	15313	Identifier	x11		14997	1					
ANR	15314	Parameter	int output	342:55:10562:10571	14997	1	True				
ANR	15315	ParameterType	int		14997	0					
ANR	15316	Identifier	output		14997	1					
ANR	15317	Parameter	int x	342:67:10574:10578	14997	2	True				
ANR	15318	ParameterType	int		14997	0					
ANR	15319	Identifier	x		14997	1					
ANR	15320	Parameter	int y	342:74:10581:10585	14997	3	True				
ANR	15321	ParameterType	int		14997	0					
ANR	15322	Identifier	y		14997	1					
ANR	15323	Parameter	int width	343:30:10618:10626	14997	4	True				
ANR	15324	ParameterType	int		14997	0					
ANR	15325	Identifier	width		14997	1					
ANR	15326	Parameter	int height	343:41:10629:10638	14997	5	True				
ANR	15327	ParameterType	int		14997	0					
ANR	15328	Identifier	height		14997	1					
ANR	15329	CFGEntryNode	ENTRY		14997		True				
ANR	15330	CFGExitNode	EXIT		14997		True				
ANR	15331	Symbol	outputs		14997						
ANR	15332	Symbol	* x11 -> randr . res -> outputs		14997						
ANR	15333	Symbol	* x11		14997						
ANR	15334	Symbol	error_handler		14997						
ANR	15335	Symbol	x11 -> randr . monitor_sizes [ output ] . width		14997						
ANR	15336	Symbol	mode -> id		14997						
ANR	15337	Symbol	x11 -> randr		14997						
ANR	15338	Symbol	* x11 -> randr . monitor_sizes		14997						
ANR	15339	Symbol	* x11 -> randr . res		14997						
ANR	15340	Symbol	RRSetConfigSuccess		14997						
ANR	15341	Symbol	output		14997						
ANR	15342	Symbol	mode		14997						
ANR	15343	Symbol	xid		14997						
ANR	15344	Symbol	x11 -> randr . res -> noutput		14997						
ANR	15345	Symbol	* * * x11		14997						
ANR	15346	Symbol	* * x11 -> randr . res		14997						
ANR	15347	Symbol	LOG_ERR		14997						
ANR	15348	Symbol	x11		14997						
ANR	15349	Symbol	old_width		14997						
ANR	15350	Symbol	XRRSetCrtcConfig		14997						
ANR	15351	Symbol	x11 -> randr . monitor_sizes [ output ] . height		14997						
ANR	15352	Symbol	* * x11 -> randr		14997						
ANR	15353	Symbol	x11 -> randr . res -> outputs		14997						
ANR	15354	Symbol	height		14997						
ANR	15355	Symbol	x11 -> set_crtc_config_not_functional		14997						
ANR	15356	Symbol	old_height		14997						
ANR	15357	Symbol	RR_Rotate_0		14997						
ANR	15358	Symbol	x11 -> randr . monitor_sizes		14997						
ANR	15359	Symbol	* * x11		14997						
ANR	15360	Symbol	* outputs		14997						
ANR	15361	Symbol	* x11 -> randr		14997						
ANR	15362	Symbol	__FUNCTION__		14997						
ANR	15363	Symbol	create_new_mode		14997						
ANR	15364	Symbol	s		14997						
ANR	15365	Symbol	x11 -> display		14997						
ANR	15366	Symbol	find_mode_by_size		14997						
ANR	15367	Symbol	x11 -> randr . res -> crtcs		14997						
ANR	15368	Symbol	vdagent_x11_restore_error_handler		14997						
ANR	15369	Symbol	x		14997						
ANR	15370	Symbol	width		14997						
ANR	15371	Symbol	* mode		14997						
ANR	15372	Symbol	y		14997						
ANR	15373	Symbol	x11 -> randr . res		14997						
ANR	15374	Symbol	CurrentTime		14997						
ANR	15375	Symbol	* output		14997						
ANR	15376	Symbol	* x11 -> randr . res -> crtcs		14997						
ANR	15377	Function	xrandr_disable_output	391:0:12260:13089							
ANR	15378	FunctionDef	"xrandr_disable_output (struct vdagent_x11 * x11 , int output)"		15377	0					
ANR	15379	CompoundStatement		392:0:12331:13089	15377	0					
ANR	15380	IdentifierDeclStatement	Status s ;	393:4:12337:12345	15377	0	True				
ANR	15381	IdentifierDecl	s		15377	0					
ANR	15382	IdentifierDeclType	Status		15377	0					
ANR	15383	Identifier	s		15377	1					
ANR	15384	IfStatement	if ( ! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0 )		15377	1					
ANR	15385	Condition	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0	395:8:12356:12421	15377	0	True				
ANR	15386	OrExpression	! x11 -> randr . res || output >= x11 -> randr . res -> noutput || output < 0		15377	0		||			
ANR	15387	UnaryOperationExpression	! x11 -> randr . res		15377	0					
ANR	15388	UnaryOperator	!		15377	0					
ANR	15389	MemberAccess	x11 -> randr . res		15377	1					
ANR	15390	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15391	Identifier	x11		15377	0					
ANR	15392	Identifier	randr		15377	1					
ANR	15393	Identifier	res		15377	1					
ANR	15394	OrExpression	output >= x11 -> randr . res -> noutput || output < 0		15377	1		||			
ANR	15395	RelationalExpression	output >= x11 -> randr . res -> noutput		15377	0		>=			
ANR	15396	Identifier	output		15377	0					
ANR	15397	PtrMemberAccess	x11 -> randr . res -> noutput		15377	1					
ANR	15398	MemberAccess	x11 -> randr . res		15377	0					
ANR	15399	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15400	Identifier	x11		15377	0					
ANR	15401	Identifier	randr		15377	1					
ANR	15402	Identifier	res		15377	1					
ANR	15403	Identifier	noutput		15377	1					
ANR	15404	RelationalExpression	output < 0		15377	1		<			
ANR	15405	Identifier	output		15377	0					
ANR	15406	PrimaryExpression	0		15377	1					
ANR	15407	CompoundStatement		4:76:92:92	15377	1					
ANR	15408	ExpressionStatement	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"	396:8:12434:12528	15377	0	True				
ANR	15409	CallExpression	"syslog ( LOG_ERR , ""%s: program error: missing RANDR or bad output"" , __FUNCTION__ )"		15377	0					
ANR	15410	Callee	syslog		15377	0					
ANR	15411	Identifier	syslog		15377	0					
ANR	15412	ArgumentList	LOG_ERR		15377	1					
ANR	15413	Argument	LOG_ERR		15377	0					
ANR	15414	Identifier	LOG_ERR		15377	0					
ANR	15415	Argument	"""%s: program error: missing RANDR or bad output"""		15377	1					
ANR	15416	PrimaryExpression	"""%s: program error: missing RANDR or bad output"""		15377	0					
ANR	15417	Argument	__FUNCTION__		15377	2					
ANR	15418	Identifier	__FUNCTION__		15377	0					
ANR	15419	ReturnStatement	return ;	398:8:12538:12544	15377	1	True				
ANR	15420	ExpressionStatement	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , 0 , 0 , None , RR_Rotate_0 , NULL , 0 )"	401:4:12557:12760	15377	2	True				
ANR	15421	AssignmentExpression	"s = XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , 0 , 0 , None , RR_Rotate_0 , NULL , 0 )"		15377	0		=			
ANR	15422	Identifier	s		15377	0					
ANR	15423	CallExpression	"XRRSetCrtcConfig ( x11 -> display , x11 -> randr . res , x11 -> randr . res -> crtcs [ output ] , CurrentTime , 0 , 0 , None , RR_Rotate_0 , NULL , 0 )"		15377	1					
ANR	15424	Callee	XRRSetCrtcConfig		15377	0					
ANR	15425	Identifier	XRRSetCrtcConfig		15377	0					
ANR	15426	ArgumentList	x11 -> display		15377	1					
ANR	15427	Argument	x11 -> display		15377	0					
ANR	15428	PtrMemberAccess	x11 -> display		15377	0					
ANR	15429	Identifier	x11		15377	0					
ANR	15430	Identifier	display		15377	1					
ANR	15431	Argument	x11 -> randr . res		15377	1					
ANR	15432	MemberAccess	x11 -> randr . res		15377	0					
ANR	15433	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15434	Identifier	x11		15377	0					
ANR	15435	Identifier	randr		15377	1					
ANR	15436	Identifier	res		15377	1					
ANR	15437	Argument	x11 -> randr . res -> crtcs [ output ]		15377	2					
ANR	15438	ArrayIndexing	x11 -> randr . res -> crtcs [ output ]		15377	0					
ANR	15439	PtrMemberAccess	x11 -> randr . res -> crtcs		15377	0					
ANR	15440	MemberAccess	x11 -> randr . res		15377	0					
ANR	15441	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15442	Identifier	x11		15377	0					
ANR	15443	Identifier	randr		15377	1					
ANR	15444	Identifier	res		15377	1					
ANR	15445	Identifier	crtcs		15377	1					
ANR	15446	Identifier	output		15377	1					
ANR	15447	Argument	CurrentTime		15377	3					
ANR	15448	Identifier	CurrentTime		15377	0					
ANR	15449	Argument	0		15377	4					
ANR	15450	PrimaryExpression	0		15377	0					
ANR	15451	Argument	0		15377	5					
ANR	15452	PrimaryExpression	0		15377	0					
ANR	15453	Argument	None		15377	6					
ANR	15454	Identifier	None		15377	0					
ANR	15455	Argument	RR_Rotate_0		15377	7					
ANR	15456	Identifier	RR_Rotate_0		15377	0					
ANR	15457	Argument	NULL		15377	8					
ANR	15458	Identifier	NULL		15377	0					
ANR	15459	Argument	0		15377	9					
ANR	15460	PrimaryExpression	0		15377	0					
ANR	15461	IfStatement	if ( s != RRSetConfigSuccess )		15377	3					
ANR	15462	Condition	s != RRSetConfigSuccess	406:8:12771:12793	15377	0	True				
ANR	15463	EqualityExpression	s != RRSetConfigSuccess		15377	0		!=			
ANR	15464	Identifier	s		15377	0					
ANR	15465	Identifier	RRSetConfigSuccess		15377	1					
ANR	15466	ExpressionStatement	"syslog ( LOG_ERR , ""failed to disable monitor"" )"	407:8:12804:12848	15377	1	True				
ANR	15467	CallExpression	"syslog ( LOG_ERR , ""failed to disable monitor"" )"		15377	0					
ANR	15468	Callee	syslog		15377	0					
ANR	15469	Identifier	syslog		15377	0					
ANR	15470	ArgumentList	LOG_ERR		15377	1					
ANR	15471	Argument	LOG_ERR		15377	0					
ANR	15472	Identifier	LOG_ERR		15377	0					
ANR	15473	Argument	"""failed to disable monitor"""		15377	1					
ANR	15474	PrimaryExpression	"""failed to disable monitor"""		15377	0					
ANR	15475	ExpressionStatement	"delete_mode ( x11 , output , x11 -> randr . monitor_sizes [ output ] . width , x11 -> randr . monitor_sizes [ output ] . height )"	409:4:12855:12989	15377	4	True				
ANR	15476	CallExpression	"delete_mode ( x11 , output , x11 -> randr . monitor_sizes [ output ] . width , x11 -> randr . monitor_sizes [ output ] . height )"		15377	0					
ANR	15477	Callee	delete_mode		15377	0					
ANR	15478	Identifier	delete_mode		15377	0					
ANR	15479	ArgumentList	x11		15377	1					
ANR	15480	Argument	x11		15377	0					
ANR	15481	Identifier	x11		15377	0					
ANR	15482	Argument	output		15377	1					
ANR	15483	Identifier	output		15377	0					
ANR	15484	Argument	x11 -> randr . monitor_sizes [ output ] . width		15377	2					
ANR	15485	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		15377	0					
ANR	15486	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		15377	0					
ANR	15487	MemberAccess	x11 -> randr . monitor_sizes		15377	0					
ANR	15488	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15489	Identifier	x11		15377	0					
ANR	15490	Identifier	randr		15377	1					
ANR	15491	Identifier	monitor_sizes		15377	1					
ANR	15492	Identifier	output		15377	1					
ANR	15493	Identifier	width		15377	1					
ANR	15494	Argument	x11 -> randr . monitor_sizes [ output ] . height		15377	3					
ANR	15495	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		15377	0					
ANR	15496	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		15377	0					
ANR	15497	MemberAccess	x11 -> randr . monitor_sizes		15377	0					
ANR	15498	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15499	Identifier	x11		15377	0					
ANR	15500	Identifier	randr		15377	1					
ANR	15501	Identifier	monitor_sizes		15377	1					
ANR	15502	Identifier	output		15377	1					
ANR	15503	Identifier	height		15377	1					
ANR	15504	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . width = 0	411:4:12995:13038	15377	5	True				
ANR	15505	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . width = 0		15377	0		=			
ANR	15506	MemberAccess	x11 -> randr . monitor_sizes [ output ] . width		15377	0					
ANR	15507	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		15377	0					
ANR	15508	MemberAccess	x11 -> randr . monitor_sizes		15377	0					
ANR	15509	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15510	Identifier	x11		15377	0					
ANR	15511	Identifier	randr		15377	1					
ANR	15512	Identifier	monitor_sizes		15377	1					
ANR	15513	Identifier	output		15377	1					
ANR	15514	Identifier	width		15377	1					
ANR	15515	PrimaryExpression	0		15377	1					
ANR	15516	ExpressionStatement	x11 -> randr . monitor_sizes [ output ] . height = 0	412:4:13044:13087	15377	6	True				
ANR	15517	AssignmentExpression	x11 -> randr . monitor_sizes [ output ] . height = 0		15377	0		=			
ANR	15518	MemberAccess	x11 -> randr . monitor_sizes [ output ] . height		15377	0					
ANR	15519	ArrayIndexing	x11 -> randr . monitor_sizes [ output ]		15377	0					
ANR	15520	MemberAccess	x11 -> randr . monitor_sizes		15377	0					
ANR	15521	PtrMemberAccess	x11 -> randr		15377	0					
ANR	15522	Identifier	x11		15377	0					
ANR	15523	Identifier	randr		15377	1					
ANR	15524	Identifier	monitor_sizes		15377	1					
ANR	15525	Identifier	output		15377	1					
ANR	15526	Identifier	height		15377	1					
ANR	15527	PrimaryExpression	0		15377	1					
ANR	15528	ReturnType	static void		15377	1					
ANR	15529	Identifier	xrandr_disable_output		15377	2					
ANR	15530	ParameterList	"struct vdagent_x11 * x11 , int output"		15377	3					
ANR	15531	Parameter	struct vdagent_x11 * x11	391:34:12294:12316	15377	0	True				
ANR	15532	ParameterType	struct vdagent_x11 *		15377	0					
ANR	15533	Identifier	x11		15377	1					
ANR	15534	Parameter	int output	391:59:12319:12328	15377	1	True				
ANR	15535	ParameterType	int		15377	0					
ANR	15536	Identifier	output		15377	1					
ANR	15537	CFGEntryNode	ENTRY		15377		True				
ANR	15538	CFGExitNode	EXIT		15377		True				
ANR	15539	Symbol	* x11		15377						
ANR	15540	Symbol	x11 -> randr . monitor_sizes [ output ] . width		15377						
ANR	15541	Symbol	x11 -> randr		15377						
ANR	15542	Symbol	* x11 -> randr . monitor_sizes		15377						
ANR	15543	Symbol	* x11 -> randr . res		15377						
ANR	15544	Symbol	RRSetConfigSuccess		15377						
ANR	15545	Symbol	output		15377						
ANR	15546	Symbol	x11 -> randr . res -> noutput		15377						
ANR	15547	Symbol	* * * x11		15377						
ANR	15548	Symbol	* * x11 -> randr . res		15377						
ANR	15549	Symbol	LOG_ERR		15377						
ANR	15550	Symbol	x11		15377						
ANR	15551	Symbol	XRRSetCrtcConfig		15377						
ANR	15552	Symbol	x11 -> randr . monitor_sizes [ output ] . height		15377						
ANR	15553	Symbol	* * x11 -> randr		15377						
ANR	15554	Symbol	NULL		15377						
ANR	15555	Symbol	RR_Rotate_0		15377						
ANR	15556	Symbol	* * x11		15377						
ANR	15557	Symbol	x11 -> randr . monitor_sizes		15377						
ANR	15558	Symbol	* x11 -> randr		15377						
ANR	15559	Symbol	__FUNCTION__		15377						
ANR	15560	Symbol	s		15377						
ANR	15561	Symbol	x11 -> display		15377						
ANR	15562	Symbol	x11 -> randr . res -> crtcs		15377						
ANR	15563	Symbol	x11 -> randr . res		15377						
ANR	15564	Symbol	CurrentTime		15377						
ANR	15565	Symbol	None		15377						
ANR	15566	Symbol	* output		15377						
ANR	15567	Symbol	* x11 -> randr . res -> crtcs		15377						
ANR	15568	Function	set_screen_to_best_size	415:0:13092:14899							
ANR	15569	FunctionDef	"set_screen_to_best_size (struct vdagent_x11 * x11 , int width , int height , int * out_width , int * out_height)"		15568	0					
ANR	15570	CompoundStatement		416:67:13242:14899	15568	0					
ANR	15571	IdentifierDeclStatement	"int i , num_sizes = 0 ;"	417:4:13248:13268	15568	0	True				
ANR	15572	IdentifierDecl	i		15568	0					
ANR	15573	IdentifierDeclType	int		15568	0					
ANR	15574	Identifier	i		15568	1					
ANR	15575	IdentifierDecl	num_sizes = 0		15568	1					
ANR	15576	IdentifierDeclType	int		15568	0					
ANR	15577	Identifier	num_sizes		15568	1					
ANR	15578	AssignmentExpression	num_sizes = 0		15568	2		=			
ANR	15579	Identifier	num_sizes		15568	0					
ANR	15580	PrimaryExpression	0		15568	1					
ANR	15581	IdentifierDeclStatement	int best = - 1 ;	418:4:13274:13287	15568	1	True				
ANR	15582	IdentifierDecl	best = - 1		15568	0					
ANR	15583	IdentifierDeclType	int		15568	0					
ANR	15584	Identifier	best		15568	1					
ANR	15585	AssignmentExpression	best = - 1		15568	2		=			
ANR	15586	Identifier	best		15568	0					
ANR	15587	UnaryOperationExpression	- 1		15568	1					
ANR	15588	UnaryOperator	-		15568	0					
ANR	15589	PrimaryExpression	1		15568	1					
ANR	15590	IdentifierDeclStatement	unsigned int closest_diff = - 1 ;	419:4:13293:13323	15568	2	True				
ANR	15591	IdentifierDecl	closest_diff = - 1		15568	0					
ANR	15592	IdentifierDeclType	unsigned int		15568	0					
ANR	15593	Identifier	closest_diff		15568	1					
ANR	15594	AssignmentExpression	closest_diff = - 1		15568	2		=			
ANR	15595	Identifier	closest_diff		15568	0					
ANR	15596	UnaryOperationExpression	- 1		15568	1					
ANR	15597	UnaryOperator	-		15568	0					
ANR	15598	PrimaryExpression	1		15568	1					
ANR	15599	IdentifierDeclStatement	XRRScreenSize * sizes ;	420:4:13329:13349	15568	3	True				
ANR	15600	IdentifierDecl	* sizes		15568	0					
ANR	15601	IdentifierDeclType	XRRScreenSize *		15568	0					
ANR	15602	Identifier	sizes		15568	1					
ANR	15603	IdentifierDeclStatement	XRRScreenConfiguration * config ;	421:4:13355:13385	15568	4	True				
ANR	15604	IdentifierDecl	* config		15568	0					
ANR	15605	IdentifierDeclType	XRRScreenConfiguration *		15568	0					
ANR	15606	Identifier	config		15568	1					
ANR	15607	IdentifierDeclStatement	Rotation rotation ;	422:4:13391:13408	15568	5	True				
ANR	15608	IdentifierDecl	rotation		15568	0					
ANR	15609	IdentifierDeclType	Rotation		15568	0					
ANR	15610	Identifier	rotation		15568	1					
ANR	15611	ExpressionStatement	"sizes = XRRSizes ( x11 -> display , 0 , & num_sizes )"	424:4:13415:13460	15568	6	True				
ANR	15612	AssignmentExpression	"sizes = XRRSizes ( x11 -> display , 0 , & num_sizes )"		15568	0		=			
ANR	15613	Identifier	sizes		15568	0					
ANR	15614	CallExpression	"XRRSizes ( x11 -> display , 0 , & num_sizes )"		15568	1					
ANR	15615	Callee	XRRSizes		15568	0					
ANR	15616	Identifier	XRRSizes		15568	0					
ANR	15617	ArgumentList	x11 -> display		15568	1					
ANR	15618	Argument	x11 -> display		15568	0					
ANR	15619	PtrMemberAccess	x11 -> display		15568	0					
ANR	15620	Identifier	x11		15568	0					
ANR	15621	Identifier	display		15568	1					
ANR	15622	Argument	0		15568	1					
ANR	15623	PrimaryExpression	0		15568	0					
ANR	15624	Argument	& num_sizes		15568	2					
ANR	15625	UnaryOperationExpression	& num_sizes		15568	0					
ANR	15626	UnaryOperator	&		15568	0					
ANR	15627	Identifier	num_sizes		15568	1					
ANR	15628	IfStatement	if ( ! sizes || ! num_sizes )		15568	7					
ANR	15629	Condition	! sizes || ! num_sizes	425:8:13470:13489	15568	0	True				
ANR	15630	OrExpression	! sizes || ! num_sizes		15568	0		||			
ANR	15631	UnaryOperationExpression	! sizes		15568	0					
ANR	15632	UnaryOperator	!		15568	0					
ANR	15633	Identifier	sizes		15568	1					
ANR	15634	UnaryOperationExpression	! num_sizes		15568	1					
ANR	15635	UnaryOperator	!		15568	0					
ANR	15636	Identifier	num_sizes		15568	1					
ANR	15637	CompoundStatement		10:30:249:249	15568	1					
ANR	15638	ExpressionStatement	"syslog ( LOG_ERR , ""XRRSizes failed"" )"	426:8:13502:13536	15568	0	True				
ANR	15639	CallExpression	"syslog ( LOG_ERR , ""XRRSizes failed"" )"		15568	0					
ANR	15640	Callee	syslog		15568	0					
ANR	15641	Identifier	syslog		15568	0					
ANR	15642	ArgumentList	LOG_ERR		15568	1					
ANR	15643	Argument	LOG_ERR		15568	0					
ANR	15644	Identifier	LOG_ERR		15568	0					
ANR	15645	Argument	"""XRRSizes failed"""		15568	1					
ANR	15646	PrimaryExpression	"""XRRSizes failed"""		15568	0					
ANR	15647	ReturnStatement	return 0 ;	427:8:13546:13554	15568	1	True				
ANR	15648	PrimaryExpression	0		15568	0					
ANR	15649	IfStatement	if ( x11 -> debug )		15568	8					
ANR	15650	Condition	x11 -> debug	429:8:13570:13579	15568	0	True				
ANR	15651	PtrMemberAccess	x11 -> debug		15568	0					
ANR	15652	Identifier	x11		15568	0					
ANR	15653	Identifier	debug		15568	1					
ANR	15654	ExpressionStatement	"syslog ( LOG_DEBUG , ""set_screen_to_best_size found %d modes\\n"" , num_sizes )"	430:8:13590:13662	15568	1	True				
ANR	15655	CallExpression	"syslog ( LOG_DEBUG , ""set_screen_to_best_size found %d modes\\n"" , num_sizes )"		15568	0					
ANR	15656	Callee	syslog		15568	0					
ANR	15657	Identifier	syslog		15568	0					
ANR	15658	ArgumentList	LOG_DEBUG		15568	1					
ANR	15659	Argument	LOG_DEBUG		15568	0					
ANR	15660	Identifier	LOG_DEBUG		15568	0					
ANR	15661	Argument	"""set_screen_to_best_size found %d modes\\n"""		15568	1					
ANR	15662	PrimaryExpression	"""set_screen_to_best_size found %d modes\\n"""		15568	0					
ANR	15663	Argument	num_sizes		15568	2					
ANR	15664	Identifier	num_sizes		15568	0					
ANR	15665	ForStatement	for ( i = 0 ; i < num_sizes ; i ++ )		15568	9					
ANR	15666	ForInit	i = 0 ;	433:9:13740:13745	15568	0	True				
ANR	15667	AssignmentExpression	i = 0		15568	0		=			
ANR	15668	Identifier	i		15568	0					
ANR	15669	PrimaryExpression	0		15568	1					
ANR	15670	Condition	i < num_sizes	433:16:13747:13759	15568	1	True				
ANR	15671	RelationalExpression	i < num_sizes		15568	0		<			
ANR	15672	Identifier	i		15568	0					
ANR	15673	Identifier	num_sizes		15568	1					
ANR	15674	PostIncDecOperationExpression	i ++	433:31:13762:13764	15568	2	True				
ANR	15675	Identifier	i		15568	0					
ANR	15676	IncDec	++		15568	1					
ANR	15677	CompoundStatement		25:8:775:824	15568	3					
ANR	15678	IfStatement	if ( sizes [ i ] . width > width || sizes [ i ] . height > height )		15568	0					
ANR	15679	Condition	sizes [ i ] . width > width || sizes [ i ] . height > height	434:12:13781:13843	15568	0	True				
ANR	15680	OrExpression	sizes [ i ] . width > width || sizes [ i ] . height > height		15568	0		||			
ANR	15681	RelationalExpression	sizes [ i ] . width > width		15568	0		>			
ANR	15682	MemberAccess	sizes [ i ] . width		15568	0					
ANR	15683	ArrayIndexing	sizes [ i ]		15568	0					
ANR	15684	Identifier	sizes		15568	0					
ANR	15685	Identifier	i		15568	1					
ANR	15686	Identifier	width		15568	1					
ANR	15687	Identifier	width		15568	1					
ANR	15688	RelationalExpression	sizes [ i ] . height > height		15568	1		>			
ANR	15689	MemberAccess	sizes [ i ] . height		15568	0					
ANR	15690	ArrayIndexing	sizes [ i ]		15568	0					
ANR	15691	Identifier	sizes		15568	0					
ANR	15692	Identifier	i		15568	1					
ANR	15693	Identifier	height		15568	1					
ANR	15694	Identifier	height		15568	1					
ANR	15695	ContinueStatement	continue ;	436:12:13858:13866	15568	1	True				
ANR	15696	IdentifierDeclStatement	unsigned int wdiff = width - sizes [ i ] . width ;	438:8:13909:13953	15568	1	True				
ANR	15697	IdentifierDecl	wdiff = width - sizes [ i ] . width		15568	0					
ANR	15698	IdentifierDeclType	unsigned int		15568	0					
ANR	15699	Identifier	wdiff		15568	1					
ANR	15700	AssignmentExpression	wdiff = width - sizes [ i ] . width		15568	2		=			
ANR	15701	Identifier	wdiff		15568	0					
ANR	15702	AdditiveExpression	width - sizes [ i ] . width		15568	1		-			
ANR	15703	Identifier	width		15568	0					
ANR	15704	MemberAccess	sizes [ i ] . width		15568	1					
ANR	15705	ArrayIndexing	sizes [ i ]		15568	0					
ANR	15706	Identifier	sizes		15568	0					
ANR	15707	Identifier	i		15568	1					
ANR	15708	Identifier	width		15568	1					
ANR	15709	IdentifierDeclStatement	unsigned int hdiff = height - sizes [ i ] . height ;	439:8:13963:14008	15568	2	True				
ANR	15710	IdentifierDecl	hdiff = height - sizes [ i ] . height		15568	0					
ANR	15711	IdentifierDeclType	unsigned int		15568	0					
ANR	15712	Identifier	hdiff		15568	1					
ANR	15713	AssignmentExpression	hdiff = height - sizes [ i ] . height		15568	2		=			
ANR	15714	Identifier	hdiff		15568	0					
ANR	15715	AdditiveExpression	height - sizes [ i ] . height		15568	1		-			
ANR	15716	Identifier	height		15568	0					
ANR	15717	MemberAccess	sizes [ i ] . height		15568	1					
ANR	15718	ArrayIndexing	sizes [ i ]		15568	0					
ANR	15719	Identifier	sizes		15568	0					
ANR	15720	Identifier	i		15568	1					
ANR	15721	Identifier	height		15568	1					
ANR	15722	IdentifierDeclStatement	unsigned int diff = wdiff * wdiff + hdiff * hdiff ;	440:8:14018:14067	15568	3	True				
ANR	15723	IdentifierDecl	diff = wdiff * wdiff + hdiff * hdiff		15568	0					
ANR	15724	IdentifierDeclType	unsigned int		15568	0					
ANR	15725	Identifier	diff		15568	1					
ANR	15726	AssignmentExpression	diff = wdiff * wdiff + hdiff * hdiff		15568	2		=			
ANR	15727	Identifier	diff		15568	0					
ANR	15728	AdditiveExpression	wdiff * wdiff + hdiff * hdiff		15568	1		+			
ANR	15729	MultiplicativeExpression	wdiff * wdiff		15568	0		*			
ANR	15730	Identifier	wdiff		15568	0					
ANR	15731	Identifier	wdiff		15568	1					
ANR	15732	MultiplicativeExpression	hdiff * hdiff		15568	1		*			
ANR	15733	Identifier	hdiff		15568	0					
ANR	15734	Identifier	hdiff		15568	1					
ANR	15735	IfStatement	if ( diff < closest_diff )		15568	4					
ANR	15736	Condition	diff < closest_diff	441:12:14081:14099	15568	0	True				
ANR	15737	RelationalExpression	diff < closest_diff		15568	0		<			
ANR	15738	Identifier	diff		15568	0					
ANR	15739	Identifier	closest_diff		15568	1					
ANR	15740	CompoundStatement		26:33:859:859	15568	1					
ANR	15741	ExpressionStatement	closest_diff = diff	442:12:14116:14135	15568	0	True				
ANR	15742	AssignmentExpression	closest_diff = diff		15568	0		=			
ANR	15743	Identifier	closest_diff		15568	0					
ANR	15744	Identifier	diff		15568	1					
ANR	15745	ExpressionStatement	best = i	443:12:14149:14157	15568	1	True				
ANR	15746	AssignmentExpression	best = i		15568	0		=			
ANR	15747	Identifier	best		15568	0					
ANR	15748	Identifier	i		15568	1					
ANR	15749	IfStatement	if ( best == - 1 )		15568	10					
ANR	15750	Condition	best == - 1	447:8:14184:14193	15568	0	True				
ANR	15751	EqualityExpression	best == - 1		15568	0		==			
ANR	15752	Identifier	best		15568	0					
ANR	15753	UnaryOperationExpression	- 1		15568	1					
ANR	15754	UnaryOperator	-		15568	0					
ANR	15755	PrimaryExpression	1		15568	1					
ANR	15756	CompoundStatement		32:20:953:953	15568	1					
ANR	15757	ExpressionStatement	"syslog ( LOG_ERR , ""no suitable resolution found for monitor"" )"	448:8:14206:14265	15568	0	True				
ANR	15758	CallExpression	"syslog ( LOG_ERR , ""no suitable resolution found for monitor"" )"		15568	0					
ANR	15759	Callee	syslog		15568	0					
ANR	15760	Identifier	syslog		15568	0					
ANR	15761	ArgumentList	LOG_ERR		15568	1					
ANR	15762	Argument	LOG_ERR		15568	0					
ANR	15763	Identifier	LOG_ERR		15568	0					
ANR	15764	Argument	"""no suitable resolution found for monitor"""		15568	1					
ANR	15765	PrimaryExpression	"""no suitable resolution found for monitor"""		15568	0					
ANR	15766	ReturnStatement	return 0 ;	449:8:14275:14283	15568	1	True				
ANR	15767	PrimaryExpression	0		15568	0					
ANR	15768	ExpressionStatement	"config = XRRGetScreenInfo ( x11 -> display , x11 -> root_window [ 0 ] )"	452:4:14296:14356	15568	11	True				
ANR	15769	AssignmentExpression	"config = XRRGetScreenInfo ( x11 -> display , x11 -> root_window [ 0 ] )"		15568	0		=			
ANR	15770	Identifier	config		15568	0					
ANR	15771	CallExpression	"XRRGetScreenInfo ( x11 -> display , x11 -> root_window [ 0 ] )"		15568	1					
ANR	15772	Callee	XRRGetScreenInfo		15568	0					
ANR	15773	Identifier	XRRGetScreenInfo		15568	0					
ANR	15774	ArgumentList	x11 -> display		15568	1					
ANR	15775	Argument	x11 -> display		15568	0					
ANR	15776	PtrMemberAccess	x11 -> display		15568	0					
ANR	15777	Identifier	x11		15568	0					
ANR	15778	Identifier	display		15568	1					
ANR	15779	Argument	x11 -> root_window [ 0 ]		15568	1					
ANR	15780	ArrayIndexing	x11 -> root_window [ 0 ]		15568	0					
ANR	15781	PtrMemberAccess	x11 -> root_window		15568	0					
ANR	15782	Identifier	x11		15568	0					
ANR	15783	Identifier	root_window		15568	1					
ANR	15784	PrimaryExpression	0		15568	1					
ANR	15785	IfStatement	if ( ! config )		15568	12					
ANR	15786	Condition	! config	453:7:14365:14371	15568	0	True				
ANR	15787	UnaryOperationExpression	! config		15568	0					
ANR	15788	UnaryOperator	!		15568	0					
ANR	15789	Identifier	config		15568	1					
ANR	15790	CompoundStatement		38:16:1131:1131	15568	1					
ANR	15791	ExpressionStatement	"syslog ( LOG_ERR , ""get screen info failed"" )"	454:8:14384:14425	15568	0	True				
ANR	15792	CallExpression	"syslog ( LOG_ERR , ""get screen info failed"" )"		15568	0					
ANR	15793	Callee	syslog		15568	0					
ANR	15794	Identifier	syslog		15568	0					
ANR	15795	ArgumentList	LOG_ERR		15568	1					
ANR	15796	Argument	LOG_ERR		15568	0					
ANR	15797	Identifier	LOG_ERR		15568	0					
ANR	15798	Argument	"""get screen info failed"""		15568	1					
ANR	15799	PrimaryExpression	"""get screen info failed"""		15568	0					
ANR	15800	ReturnStatement	return 0 ;	455:8:14435:14443	15568	1	True				
ANR	15801	PrimaryExpression	0		15568	0					
ANR	15802	ExpressionStatement	"XRRConfigCurrentConfiguration ( config , & rotation )"	457:4:14455:14503	15568	13	True				
ANR	15803	CallExpression	"XRRConfigCurrentConfiguration ( config , & rotation )"		15568	0					
ANR	15804	Callee	XRRConfigCurrentConfiguration		15568	0					
ANR	15805	Identifier	XRRConfigCurrentConfiguration		15568	0					
ANR	15806	ArgumentList	config		15568	1					
ANR	15807	Argument	config		15568	0					
ANR	15808	Identifier	config		15568	0					
ANR	15809	Argument	& rotation		15568	1					
ANR	15810	UnaryOperationExpression	& rotation		15568	0					
ANR	15811	UnaryOperator	&		15568	0					
ANR	15812	Identifier	rotation		15568	1					
ANR	15813	ExpressionStatement	"XRRSetScreenConfig ( x11 -> display , config , x11 -> root_window [ 0 ] , best , rotation , CurrentTime )"	458:4:14509:14622	15568	14	True				
ANR	15814	CallExpression	"XRRSetScreenConfig ( x11 -> display , config , x11 -> root_window [ 0 ] , best , rotation , CurrentTime )"		15568	0					
ANR	15815	Callee	XRRSetScreenConfig		15568	0					
ANR	15816	Identifier	XRRSetScreenConfig		15568	0					
ANR	15817	ArgumentList	x11 -> display		15568	1					
ANR	15818	Argument	x11 -> display		15568	0					
ANR	15819	PtrMemberAccess	x11 -> display		15568	0					
ANR	15820	Identifier	x11		15568	0					
ANR	15821	Identifier	display		15568	1					
ANR	15822	Argument	config		15568	1					
ANR	15823	Identifier	config		15568	0					
ANR	15824	Argument	x11 -> root_window [ 0 ]		15568	2					
ANR	15825	ArrayIndexing	x11 -> root_window [ 0 ]		15568	0					
ANR	15826	PtrMemberAccess	x11 -> root_window		15568	0					
ANR	15827	Identifier	x11		15568	0					
ANR	15828	Identifier	root_window		15568	1					
ANR	15829	PrimaryExpression	0		15568	1					
ANR	15830	Argument	best		15568	3					
ANR	15831	Identifier	best		15568	0					
ANR	15832	Argument	rotation		15568	4					
ANR	15833	Identifier	rotation		15568	0					
ANR	15834	Argument	CurrentTime		15568	5					
ANR	15835	Identifier	CurrentTime		15568	0					
ANR	15836	ExpressionStatement	XRRFreeScreenConfigInfo ( config )	460:4:14628:14659	15568	15	True				
ANR	15837	CallExpression	XRRFreeScreenConfigInfo ( config )		15568	0					
ANR	15838	Callee	XRRFreeScreenConfigInfo		15568	0					
ANR	15839	Identifier	XRRFreeScreenConfigInfo		15568	0					
ANR	15840	ArgumentList	config		15568	1					
ANR	15841	Argument	config		15568	0					
ANR	15842	Identifier	config		15568	0					
ANR	15843	IfStatement	if ( x11 -> debug )		15568	16					
ANR	15844	Condition	x11 -> debug	462:8:14670:14679	15568	0	True				
ANR	15845	PtrMemberAccess	x11 -> debug		15568	0					
ANR	15846	Identifier	x11		15568	0					
ANR	15847	Identifier	debug		15568	1					
ANR	15848	ExpressionStatement	"syslog ( LOG_DEBUG , ""set_screen_to_best_size set size to: %dx%d\\n"" , sizes [ best ] . width , sizes [ best ] . height )"	463:8:14690:14809	15568	1	True				
ANR	15849	CallExpression	"syslog ( LOG_DEBUG , ""set_screen_to_best_size set size to: %dx%d\\n"" , sizes [ best ] . width , sizes [ best ] . height )"		15568	0					
ANR	15850	Callee	syslog		15568	0					
ANR	15851	Identifier	syslog		15568	0					
ANR	15852	ArgumentList	LOG_DEBUG		15568	1					
ANR	15853	Argument	LOG_DEBUG		15568	0					
ANR	15854	Identifier	LOG_DEBUG		15568	0					
ANR	15855	Argument	"""set_screen_to_best_size set size to: %dx%d\\n"""		15568	1					
ANR	15856	PrimaryExpression	"""set_screen_to_best_size set size to: %dx%d\\n"""		15568	0					
ANR	15857	Argument	sizes [ best ] . width		15568	2					
ANR	15858	MemberAccess	sizes [ best ] . width		15568	0					
ANR	15859	ArrayIndexing	sizes [ best ]		15568	0					
ANR	15860	Identifier	sizes		15568	0					
ANR	15861	Identifier	best		15568	1					
ANR	15862	Identifier	width		15568	1					
ANR	15863	Argument	sizes [ best ] . height		15568	3					
ANR	15864	MemberAccess	sizes [ best ] . height		15568	0					
ANR	15865	ArrayIndexing	sizes [ best ]		15568	0					
ANR	15866	Identifier	sizes		15568	0					
ANR	15867	Identifier	best		15568	1					
ANR	15868	Identifier	height		15568	1					
ANR	15869	ExpressionStatement	* out_width = sizes [ best ] . width	465:4:14815:14845	15568	17	True				
ANR	15870	AssignmentExpression	* out_width = sizes [ best ] . width		15568	0		=			
ANR	15871	UnaryOperationExpression	* out_width		15568	0					
ANR	15872	UnaryOperator	*		15568	0					
ANR	15873	Identifier	out_width		15568	1					
ANR	15874	MemberAccess	sizes [ best ] . width		15568	1					
ANR	15875	ArrayIndexing	sizes [ best ]		15568	0					
ANR	15876	Identifier	sizes		15568	0					
ANR	15877	Identifier	best		15568	1					
ANR	15878	Identifier	width		15568	1					
ANR	15879	ExpressionStatement	* out_height = sizes [ best ] . height	466:4:14851:14883	15568	18	True				
ANR	15880	AssignmentExpression	* out_height = sizes [ best ] . height		15568	0		=			
ANR	15881	UnaryOperationExpression	* out_height		15568	0					
ANR	15882	UnaryOperator	*		15568	0					
ANR	15883	Identifier	out_height		15568	1					
ANR	15884	MemberAccess	sizes [ best ] . height		15568	1					
ANR	15885	ArrayIndexing	sizes [ best ]		15568	0					
ANR	15886	Identifier	sizes		15568	0					
ANR	15887	Identifier	best		15568	1					
ANR	15888	Identifier	height		15568	1					
ANR	15889	ReturnStatement	return 1 ;	467:4:14889:14897	15568	19	True				
ANR	15890	PrimaryExpression	1		15568	0					
ANR	15891	ReturnType	static int		15568	1					
ANR	15892	Identifier	set_screen_to_best_size		15568	2					
ANR	15893	ParameterList	"struct vdagent_x11 * x11 , int width , int height , int * out_width , int * out_height"		15568	3					
ANR	15894	Parameter	struct vdagent_x11 * x11	415:35:13127:13149	15568	0	True				
ANR	15895	ParameterType	struct vdagent_x11 *		15568	0					
ANR	15896	Identifier	x11		15568	1					
ANR	15897	Parameter	int width	415:60:13152:13160	15568	1	True				
ANR	15898	ParameterType	int		15568	0					
ANR	15899	Identifier	width		15568	1					
ANR	15900	Parameter	int height	415:71:13163:13172	15568	2	True				
ANR	15901	ParameterType	int		15568	0					
ANR	15902	Identifier	height		15568	1					
ANR	15903	Parameter	int * out_width	416:35:13210:13223	15568	3	True				
ANR	15904	ParameterType	int *		15568	0					
ANR	15905	Identifier	out_width		15568	1					
ANR	15906	Parameter	int * out_height	416:51:13226:13240	15568	4	True				
ANR	15907	ParameterType	int *		15568	0					
ANR	15908	Identifier	out_height		15568	1					
ANR	15909	CFGEntryNode	ENTRY		15568		True				
ANR	15910	CFGExitNode	EXIT		15568		True				
ANR	15911	Symbol	* x11		15568						
ANR	15912	Symbol	sizes [ best ] . height		15568						
ANR	15913	Symbol	& num_sizes		15568						
ANR	15914	Symbol	hdiff		15568						
ANR	15915	Symbol	* best		15568						
ANR	15916	Symbol	wdiff		15568						
ANR	15917	Symbol	closest_diff		15568						
ANR	15918	Symbol	XRRGetScreenInfo		15568						
ANR	15919	Symbol	best		15568						
ANR	15920	Symbol	XRRSizes		15568						
ANR	15921	Symbol	x11 -> root_window		15568						
ANR	15922	Symbol	sizes		15568						
ANR	15923	Symbol	out_width		15568						
ANR	15924	Symbol	LOG_ERR		15568						
ANR	15925	Symbol	* x11 -> root_window		15568						
ANR	15926	Symbol	x11		15568						
ANR	15927	Symbol	height		15568						
ANR	15928	Symbol	sizes [ i ] . width		15568						
ANR	15929	Symbol	num_sizes		15568						
ANR	15930	Symbol	* out_height		15568						
ANR	15931	Symbol	rotation		15568						
ANR	15932	Symbol	x11 -> debug		15568						
ANR	15933	Symbol	i		15568						
ANR	15934	Symbol	* out_width		15568						
ANR	15935	Symbol	diff		15568						
ANR	15936	Symbol	sizes [ best ] . width		15568						
ANR	15937	Symbol	* * x11		15568						
ANR	15938	Symbol	x11 -> display		15568						
ANR	15939	Symbol	* i		15568						
ANR	15940	Symbol	& rotation		15568						
ANR	15941	Symbol	sizes [ i ] . height		15568						
ANR	15942	Symbol	out_height		15568						
ANR	15943	Symbol	width		15568						
ANR	15944	Symbol	CurrentTime		15568						
ANR	15945	Symbol	* sizes		15568						
ANR	15946	Symbol	LOG_DEBUG		15568						
ANR	15947	Symbol	config		15568						
ANR	15948	Function	vdagent_x11_randr_handle_root_size_change	470:0:14902:15481							
ANR	15949	FunctionDef	"vdagent_x11_randr_handle_root_size_change (struct vdagent_x11 * x11 , int screen , int width , int height)"		15948	0					
ANR	15950	CompoundStatement		472:0:15013:15481	15948	0					
ANR	15951	ExpressionStatement	"update_randr_res ( x11 , 0 )"	473:4:15019:15043	15948	0	True				
ANR	15952	CallExpression	"update_randr_res ( x11 , 0 )"		15948	0					
ANR	15953	Callee	update_randr_res		15948	0					
ANR	15954	Identifier	update_randr_res		15948	0					
ANR	15955	ArgumentList	x11		15948	1					
ANR	15956	Argument	x11		15948	0					
ANR	15957	Identifier	x11		15948	0					
ANR	15958	Argument	0		15948	1					
ANR	15959	PrimaryExpression	0		15948	0					
ANR	15960	IfStatement	if ( width == x11 -> width [ screen ] && height == x11 -> height [ screen ] )		15948	1					
ANR	15961	Condition	width == x11 -> width [ screen ] && height == x11 -> height [ screen ]	475:8:15054:15113	15948	0	True				
ANR	15962	AndExpression	width == x11 -> width [ screen ] && height == x11 -> height [ screen ]		15948	0		&&			
ANR	15963	EqualityExpression	width == x11 -> width [ screen ]		15948	0		==			
ANR	15964	Identifier	width		15948	0					
ANR	15965	ArrayIndexing	x11 -> width [ screen ]		15948	1					
ANR	15966	PtrMemberAccess	x11 -> width		15948	0					
ANR	15967	Identifier	x11		15948	0					
ANR	15968	Identifier	width		15948	1					
ANR	15969	Identifier	screen		15948	1					
ANR	15970	EqualityExpression	height == x11 -> height [ screen ]		15948	1		==			
ANR	15971	Identifier	height		15948	0					
ANR	15972	ArrayIndexing	x11 -> height [ screen ]		15948	1					
ANR	15973	PtrMemberAccess	x11 -> height		15948	0					
ANR	15974	Identifier	x11		15948	0					
ANR	15975	Identifier	height		15948	1					
ANR	15976	Identifier	screen		15948	1					
ANR	15977	CompoundStatement		4:70:102:102	15948	1					
ANR	15978	ReturnStatement	return ;	476:8:15126:15132	15948	0	True				
ANR	15979	IfStatement	if ( x11 -> debug )		15948	2					
ANR	15980	Condition	x11 -> debug	479:8:15149:15158	15948	0	True				
ANR	15981	PtrMemberAccess	x11 -> debug		15948	0					
ANR	15982	Identifier	x11		15948	0					
ANR	15983	Identifier	debug		15948	1					
ANR	15984	ExpressionStatement	"syslog ( LOG_DEBUG , ""Root size of screen %d changed to %dx%d send %d"" , screen , width , height , ! x11 -> dont_send_guest_xorg_res )"	480:8:15169:15307	15948	1	True				
ANR	15985	CallExpression	"syslog ( LOG_DEBUG , ""Root size of screen %d changed to %dx%d send %d"" , screen , width , height , ! x11 -> dont_send_guest_xorg_res )"		15948	0					
ANR	15986	Callee	syslog		15948	0					
ANR	15987	Identifier	syslog		15948	0					
ANR	15988	ArgumentList	LOG_DEBUG		15948	1					
ANR	15989	Argument	LOG_DEBUG		15948	0					
ANR	15990	Identifier	LOG_DEBUG		15948	0					
ANR	15991	Argument	"""Root size of screen %d changed to %dx%d send %d"""		15948	1					
ANR	15992	PrimaryExpression	"""Root size of screen %d changed to %dx%d send %d"""		15948	0					
ANR	15993	Argument	screen		15948	2					
ANR	15994	Identifier	screen		15948	0					
ANR	15995	Argument	width		15948	3					
ANR	15996	Identifier	width		15948	0					
ANR	15997	Argument	height		15948	4					
ANR	15998	Identifier	height		15948	0					
ANR	15999	Argument	! x11 -> dont_send_guest_xorg_res		15948	5					
ANR	16000	UnaryOperationExpression	! x11 -> dont_send_guest_xorg_res		15948	0					
ANR	16001	UnaryOperator	!		15948	0					
ANR	16002	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		15948	1					
ANR	16003	Identifier	x11		15948	0					
ANR	16004	Identifier	dont_send_guest_xorg_res		15948	1					
ANR	16005	ExpressionStatement	x11 -> width [ screen ] = width	483:4:15314:15341	15948	3	True				
ANR	16006	AssignmentExpression	x11 -> width [ screen ] = width		15948	0		=			
ANR	16007	ArrayIndexing	x11 -> width [ screen ]		15948	0					
ANR	16008	PtrMemberAccess	x11 -> width		15948	0					
ANR	16009	Identifier	x11		15948	0					
ANR	16010	Identifier	width		15948	1					
ANR	16011	Identifier	screen		15948	1					
ANR	16012	Identifier	width		15948	1					
ANR	16013	ExpressionStatement	x11 -> height [ screen ] = height	484:4:15347:15375	15948	4	True				
ANR	16014	AssignmentExpression	x11 -> height [ screen ] = height		15948	0		=			
ANR	16015	ArrayIndexing	x11 -> height [ screen ]		15948	0					
ANR	16016	PtrMemberAccess	x11 -> height		15948	0					
ANR	16017	Identifier	x11		15948	0					
ANR	16018	Identifier	height		15948	1					
ANR	16019	Identifier	screen		15948	1					
ANR	16020	Identifier	height		15948	1					
ANR	16021	IfStatement	if ( ! x11 -> dont_send_guest_xorg_res )		15948	5					
ANR	16022	Condition	! x11 -> dont_send_guest_xorg_res	485:8:15385:15414	15948	0	True				
ANR	16023	UnaryOperationExpression	! x11 -> dont_send_guest_xorg_res		15948	0					
ANR	16024	UnaryOperator	!		15948	0					
ANR	16025	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		15948	1					
ANR	16026	Identifier	x11		15948	0					
ANR	16027	Identifier	dont_send_guest_xorg_res		15948	1					
ANR	16028	CompoundStatement		14:40:403:403	15948	1					
ANR	16029	ExpressionStatement	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"	486:8:15427:15473	15948	0	True				
ANR	16030	CallExpression	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"		15948	0					
ANR	16031	Callee	vdagent_x11_send_daemon_guest_xorg_res		15948	0					
ANR	16032	Identifier	vdagent_x11_send_daemon_guest_xorg_res		15948	0					
ANR	16033	ArgumentList	x11		15948	1					
ANR	16034	Argument	x11		15948	0					
ANR	16035	Identifier	x11		15948	0					
ANR	16036	Argument	1		15948	1					
ANR	16037	PrimaryExpression	1		15948	0					
ANR	16038	ReturnType	void		15948	1					
ANR	16039	Identifier	vdagent_x11_randr_handle_root_size_change		15948	2					
ANR	16040	ParameterList	"struct vdagent_x11 * x11 , int screen , int width , int height"		15948	3					
ANR	16041	Parameter	struct vdagent_x11 * x11	470:47:14949:14971	15948	0	True				
ANR	16042	ParameterType	struct vdagent_x11 *		15948	0					
ANR	16043	Identifier	x11		15948	1					
ANR	16044	Parameter	int screen	471:4:14978:14987	15948	1	True				
ANR	16045	ParameterType	int		15948	0					
ANR	16046	Identifier	screen		15948	1					
ANR	16047	Parameter	int width	471:16:14990:14998	15948	2	True				
ANR	16048	ParameterType	int		15948	0					
ANR	16049	Identifier	width		15948	1					
ANR	16050	Parameter	int height	471:27:15001:15010	15948	3	True				
ANR	16051	ParameterType	int		15948	0					
ANR	16052	Identifier	height		15948	1					
ANR	16053	CFGEntryNode	ENTRY		15948		True				
ANR	16054	CFGExitNode	EXIT		15948		True				
ANR	16055	Symbol	* x11		15948						
ANR	16056	Symbol	x11 -> width		15948						
ANR	16057	Symbol	x11 -> debug		15948						
ANR	16058	Symbol	screen		15948						
ANR	16059	Symbol	* x11 -> width		15948						
ANR	16060	Symbol	x11 -> dont_send_guest_xorg_res		15948						
ANR	16061	Symbol	* * x11		15948						
ANR	16062	Symbol	* x11 -> height		15948						
ANR	16063	Symbol	width		15948						
ANR	16064	Symbol	x11		15948						
ANR	16065	Symbol	LOG_DEBUG		15948						
ANR	16066	Symbol	* screen		15948						
ANR	16067	Symbol	x11 -> height		15948						
ANR	16068	Symbol	height		15948						
ANR	16069	Function	vdagent_x11_randr_handle_event	490:0:15484:16207							
ANR	16070	FunctionDef	"vdagent_x11_randr_handle_event (struct vdagent_x11 * x11 , XEvent event)"		16069	0					
ANR	16071	CompoundStatement		492:0:15562:16207	16069	0					
ANR	16072	IdentifierDeclStatement	int handled = TRUE ;	493:4:15568:15586	16069	0	True				
ANR	16073	IdentifierDecl	handled = TRUE		16069	0					
ANR	16074	IdentifierDeclType	int		16069	0					
ANR	16075	Identifier	handled		16069	1					
ANR	16076	AssignmentExpression	handled = TRUE		16069	2		=			
ANR	16077	Identifier	TRUE		16069	0					
ANR	16078	Identifier	TRUE		16069	1					
ANR	16079	SwitchStatement	switch ( event . type - x11 -> xrandr_event_base )		16069	1					
ANR	16080	Condition	event . type - x11 -> xrandr_event_base	495:12:15601:15635	16069	0	True				
ANR	16081	AdditiveExpression	event . type - x11 -> xrandr_event_base		16069	0		-			
ANR	16082	MemberAccess	event . type		16069	0					
ANR	16083	Identifier	event		16069	0					
ANR	16084	Identifier	type		16069	1					
ANR	16085	PtrMemberAccess	x11 -> xrandr_event_base		16069	1					
ANR	16086	Identifier	x11		16069	0					
ANR	16087	Identifier	xrandr_event_base		16069	1					
ANR	16088	CompoundStatement		4:49:75:75	16069	1					
ANR	16089	Label	case RRScreenChangeNotify :	496:8:15648:15673	16069	0	True				
ANR	16090	Identifier	RRScreenChangeNotify		16069	0					
ANR	16091	CompoundStatement		6:12:126:213	16069	1					
ANR	16092	IdentifierDeclStatement	XRRScreenChangeNotifyEvent * sce = ( XRRScreenChangeNotifyEvent * ) & event ;	497:12:15689:15776	16069	0	True				
ANR	16093	IdentifierDecl	* sce = ( XRRScreenChangeNotifyEvent * ) & event		16069	0					
ANR	16094	IdentifierDeclType	XRRScreenChangeNotifyEvent *		16069	0					
ANR	16095	Identifier	sce		16069	1					
ANR	16096	AssignmentExpression	* sce = ( XRRScreenChangeNotifyEvent * ) & event		16069	2		=			
ANR	16097	Identifier	sce		16069	0					
ANR	16098	CastExpression	( XRRScreenChangeNotifyEvent * ) & event		16069	1					
ANR	16099	CastTarget	XRRScreenChangeNotifyEvent *		16069	0					
ANR	16100	UnaryOperationExpression	& event		16069	1					
ANR	16101	UnaryOperator	&		16069	0					
ANR	16102	Identifier	event		16069	1					
ANR	16103	ExpressionStatement	"vdagent_x11_randr_handle_root_size_change ( x11 , 0 , sce -> width , sce -> height )"	499:12:15790:15880	16069	1	True				
ANR	16104	CallExpression	"vdagent_x11_randr_handle_root_size_change ( x11 , 0 , sce -> width , sce -> height )"		16069	0					
ANR	16105	Callee	vdagent_x11_randr_handle_root_size_change		16069	0					
ANR	16106	Identifier	vdagent_x11_randr_handle_root_size_change		16069	0					
ANR	16107	ArgumentList	x11		16069	1					
ANR	16108	Argument	x11		16069	0					
ANR	16109	Identifier	x11		16069	0					
ANR	16110	Argument	0		16069	1					
ANR	16111	PrimaryExpression	0		16069	0					
ANR	16112	Argument	sce -> width		16069	2					
ANR	16113	PtrMemberAccess	sce -> width		16069	0					
ANR	16114	Identifier	sce		16069	0					
ANR	16115	Identifier	width		16069	1					
ANR	16116	Argument	sce -> height		16069	3					
ANR	16117	PtrMemberAccess	sce -> height		16069	0					
ANR	16118	Identifier	sce		16069	0					
ANR	16119	Identifier	height		16069	1					
ANR	16120	BreakStatement	break ;	501:12:15894:15899	16069	2	True				
ANR	16121	Label	case RRNotify :	503:8:15919:15932	16069	2	True				
ANR	16122	Identifier	RRNotify		16069	0					
ANR	16123	CompoundStatement		12:23:371:371	16069	3					
ANR	16124	ExpressionStatement	"update_randr_res ( x11 , 0 )"	504:12:15948:15972	16069	0	True				
ANR	16125	CallExpression	"update_randr_res ( x11 , 0 )"		16069	0					
ANR	16126	Callee	update_randr_res		16069	0					
ANR	16127	Identifier	update_randr_res		16069	0					
ANR	16128	ArgumentList	x11		16069	1					
ANR	16129	Argument	x11		16069	0					
ANR	16130	Identifier	x11		16069	0					
ANR	16131	Argument	0		16069	1					
ANR	16132	PrimaryExpression	0		16069	0					
ANR	16133	IfStatement	if ( ! x11 -> dont_send_guest_xorg_res )		16069	1					
ANR	16134	Condition	! x11 -> dont_send_guest_xorg_res	505:16:15990:16019	16069	0	True				
ANR	16135	UnaryOperationExpression	! x11 -> dont_send_guest_xorg_res		16069	0					
ANR	16136	UnaryOperator	!		16069	0					
ANR	16137	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		16069	1					
ANR	16138	Identifier	x11		16069	0					
ANR	16139	Identifier	dont_send_guest_xorg_res		16069	1					
ANR	16140	ExpressionStatement	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"	506:16:16038:16084	16069	1	True				
ANR	16141	CallExpression	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 1 )"		16069	0					
ANR	16142	Callee	vdagent_x11_send_daemon_guest_xorg_res		16069	0					
ANR	16143	Identifier	vdagent_x11_send_daemon_guest_xorg_res		16069	0					
ANR	16144	ArgumentList	x11		16069	1					
ANR	16145	Argument	x11		16069	0					
ANR	16146	Identifier	x11		16069	0					
ANR	16147	Argument	1		16069	1					
ANR	16148	PrimaryExpression	1		16069	0					
ANR	16149	BreakStatement	break ;	507:12:16098:16103	16069	2	True				
ANR	16150	Label	default :	509:8:16123:16130	16069	4	True				
ANR	16151	Identifier	default		16069	0					
ANR	16152	ExpressionStatement	handled = FALSE	510:12:16144:16159	16069	5	True				
ANR	16153	AssignmentExpression	handled = FALSE		16069	0		=			
ANR	16154	Identifier	handled		16069	0					
ANR	16155	Identifier	FALSE		16069	1					
ANR	16156	BreakStatement	break ;	511:12:16173:16178	16069	6	True				
ANR	16157	ReturnStatement	return handled ;	514:4:16191:16205	16069	2	True				
ANR	16158	Identifier	handled		16069	0					
ANR	16159	ReturnType	int		16069	1					
ANR	16160	Identifier	vdagent_x11_randr_handle_event		16069	2					
ANR	16161	ParameterList	"struct vdagent_x11 * x11 , XEvent event"		16069	3					
ANR	16162	Parameter	struct vdagent_x11 * x11	490:35:15519:15541	16069	0	True				
ANR	16163	ParameterType	struct vdagent_x11 *		16069	0					
ANR	16164	Identifier	x11		16069	1					
ANR	16165	Parameter	XEvent event	491:4:15548:15559	16069	1	True				
ANR	16166	ParameterType	XEvent		16069	0					
ANR	16167	Identifier	event		16069	1					
ANR	16168	CFGEntryNode	ENTRY		16069		True				
ANR	16169	CFGExitNode	EXIT		16069		True				
ANR	16170	Symbol	* x11		16069						
ANR	16171	Symbol	TRUE		16069						
ANR	16172	Symbol	x11 -> dont_send_guest_xorg_res		16069						
ANR	16173	Symbol	sce -> height		16069						
ANR	16174	Symbol	x11 -> xrandr_event_base		16069						
ANR	16175	Symbol	& event		16069						
ANR	16176	Symbol	sce		16069						
ANR	16177	Symbol	sce -> width		16069						
ANR	16178	Symbol	handled		16069						
ANR	16179	Symbol	event . type		16069						
ANR	16180	Symbol	x11		16069						
ANR	16181	Symbol	FALSE		16069						
ANR	16182	Symbol	event		16069						
ANR	16183	Symbol	* sce		16069						
ANR	16184	Function	min_int	517:0:16210:16271							
ANR	16185	FunctionDef	"min_int (int x , int y)"		16184	0					
ANR	16186	CompoundStatement		518:0:16243:16271	16184	0					
ANR	16187	ReturnStatement	return x > y ? y : x ;	519:4:16249:16269	16184	0	True				
ANR	16188	ConditionalExpression	x > y ? y : x		16184	0					
ANR	16189	Condition	x > y		16184	0					
ANR	16190	RelationalExpression	x > y		16184	0		>			
ANR	16191	Identifier	x		16184	0					
ANR	16192	Identifier	y		16184	1					
ANR	16193	Identifier	y		16184	1					
ANR	16194	Identifier	x		16184	2					
ANR	16195	ReturnType	static int		16184	1					
ANR	16196	Identifier	min_int		16184	2					
ANR	16197	ParameterList	"int x , int y"		16184	3					
ANR	16198	Parameter	int x	517:19:16229:16233	16184	0	True				
ANR	16199	ParameterType	int		16184	0					
ANR	16200	Identifier	x		16184	1					
ANR	16201	Parameter	int y	517:26:16236:16240	16184	1	True				
ANR	16202	ParameterType	int		16184	0					
ANR	16203	Identifier	y		16184	1					
ANR	16204	CFGEntryNode	ENTRY		16184		True				
ANR	16205	CFGExitNode	EXIT		16184		True				
ANR	16206	Symbol	x		16184						
ANR	16207	Symbol	y		16184						
ANR	16208	Function	max_int	522:0:16274:16335							
ANR	16209	FunctionDef	"max_int (int x , int y)"		16208	0					
ANR	16210	CompoundStatement		523:0:16307:16335	16208	0					
ANR	16211	ReturnStatement	return x > y ? x : y ;	524:4:16313:16333	16208	0	True				
ANR	16212	ConditionalExpression	x > y ? x : y		16208	0					
ANR	16213	Condition	x > y		16208	0					
ANR	16214	RelationalExpression	x > y		16208	0		>			
ANR	16215	Identifier	x		16208	0					
ANR	16216	Identifier	y		16208	1					
ANR	16217	Identifier	x		16208	1					
ANR	16218	Identifier	y		16208	2					
ANR	16219	ReturnType	static int		16208	1					
ANR	16220	Identifier	max_int		16208	2					
ANR	16221	ParameterList	"int x , int y"		16208	3					
ANR	16222	Parameter	int x	522:19:16293:16297	16208	0	True				
ANR	16223	ParameterType	int		16208	0					
ANR	16224	Identifier	x		16208	1					
ANR	16225	Parameter	int y	522:26:16300:16304	16208	1	True				
ANR	16226	ParameterType	int		16208	0					
ANR	16227	Identifier	y		16208	1					
ANR	16228	CFGEntryNode	ENTRY		16208		True				
ANR	16229	CFGExitNode	EXIT		16208		True				
ANR	16230	Symbol	x		16208						
ANR	16231	Symbol	y		16208						
ANR	16232	Function	constrain_to_range	527:0:16338:16574							
ANR	16233	FunctionDef	"constrain_to_range (int low , int * val , int high)"		16232	0					
ANR	16234	CompoundStatement		528:0:16397:16574	16232	0					
ANR	16235	IfStatement	if ( low <= * val && * val <= high )		16232	0					
ANR	16236	Condition	low <= * val && * val <= high	529:8:16407:16433	16232	0	True				
ANR	16237	AndExpression	low <= * val && * val <= high		16232	0		&&			
ANR	16238	RelationalExpression	low <= * val		16232	0		<=			
ANR	16239	Identifier	low		16232	0					
ANR	16240	UnaryOperationExpression	* val		16232	1					
ANR	16241	UnaryOperator	*		16232	0					
ANR	16242	Identifier	val		16232	1					
ANR	16243	RelationalExpression	* val <= high		16232	1		<=			
ANR	16244	UnaryOperationExpression	* val		16232	0					
ANR	16245	UnaryOperator	*		16232	0					
ANR	16246	Identifier	val		16232	1					
ANR	16247	Identifier	high		16232	1					
ANR	16248	CompoundStatement		2:37:38:38	16232	1					
ANR	16249	ReturnStatement	return 0 ;	530:8:16446:16454	16232	0	True				
ANR	16250	PrimaryExpression	0		16232	0					
ANR	16251	IfStatement	if ( low > * val )		16232	1					
ANR	16252	Condition	low > * val	532:8:16470:16479	16232	0	True				
ANR	16253	RelationalExpression	low > * val		16232	0		>			
ANR	16254	Identifier	low		16232	0					
ANR	16255	UnaryOperationExpression	* val		16232	1					
ANR	16256	UnaryOperator	*		16232	0					
ANR	16257	Identifier	val		16232	1					
ANR	16258	CompoundStatement		5:20:84:84	16232	1					
ANR	16259	ExpressionStatement	* val = low	533:8:16492:16502	16232	0	True				
ANR	16260	AssignmentExpression	* val = low		16232	0		=			
ANR	16261	UnaryOperationExpression	* val		16232	0					
ANR	16262	UnaryOperator	*		16232	0					
ANR	16263	Identifier	val		16232	1					
ANR	16264	Identifier	low		16232	1					
ANR	16265	IfStatement	if ( * val > high )		16232	2					
ANR	16266	Condition	* val > high	535:8:16518:16528	16232	0	True				
ANR	16267	RelationalExpression	* val > high		16232	0		>			
ANR	16268	UnaryOperationExpression	* val		16232	0					
ANR	16269	UnaryOperator	*		16232	0					
ANR	16270	Identifier	val		16232	1					
ANR	16271	Identifier	high		16232	1					
ANR	16272	CompoundStatement		8:21:133:133	16232	1					
ANR	16273	ExpressionStatement	* val = high	536:8:16541:16552	16232	0	True				
ANR	16274	AssignmentExpression	* val = high		16232	0		=			
ANR	16275	UnaryOperationExpression	* val		16232	0					
ANR	16276	UnaryOperator	*		16232	0					
ANR	16277	Identifier	val		16232	1					
ANR	16278	Identifier	high		16232	1					
ANR	16279	ReturnStatement	return 1 ;	538:4:16564:16572	16232	3	True				
ANR	16280	PrimaryExpression	1		16232	0					
ANR	16281	ReturnType	static int		16232	1					
ANR	16282	Identifier	constrain_to_range		16232	2					
ANR	16283	ParameterList	"int low , int * val , int high"		16232	3					
ANR	16284	Parameter	int low	527:30:16368:16374	16232	0	True				
ANR	16285	ParameterType	int		16232	0					
ANR	16286	Identifier	low		16232	1					
ANR	16287	Parameter	int * val	527:39:16377:16384	16232	1	True				
ANR	16288	ParameterType	int *		16232	0					
ANR	16289	Identifier	val		16232	1					
ANR	16290	Parameter	int high	527:49:16387:16394	16232	2	True				
ANR	16291	ParameterType	int		16232	0					
ANR	16292	Identifier	high		16232	1					
ANR	16293	CFGEntryNode	ENTRY		16232		True				
ANR	16294	CFGExitNode	EXIT		16232		True				
ANR	16295	Symbol	val		16232						
ANR	16296	Symbol	high		16232						
ANR	16297	Symbol	low		16232						
ANR	16298	Symbol	* val		16232						
ANR	16299	Function	constrain_to_screen	541:0:16577:17142							
ANR	16300	FunctionDef	"constrain_to_screen (struct vdagent_x11 * x11 , int * w , int * h)"		16299	0					
ANR	16301	CompoundStatement		542:0:16650:17142	16299	0					
ANR	16302	IdentifierDeclStatement	"int lx , ly , hx , hy ;"	543:4:16656:16674	16299	0	True				
ANR	16303	IdentifierDecl	lx		16299	0					
ANR	16304	IdentifierDeclType	int		16299	0					
ANR	16305	Identifier	lx		16299	1					
ANR	16306	IdentifierDecl	ly		16299	1					
ANR	16307	IdentifierDeclType	int		16299	0					
ANR	16308	Identifier	ly		16299	1					
ANR	16309	IdentifierDecl	hx		16299	2					
ANR	16310	IdentifierDeclType	int		16299	0					
ANR	16311	Identifier	hx		16299	1					
ANR	16312	IdentifierDecl	hy		16299	3					
ANR	16313	IdentifierDeclType	int		16299	0					
ANR	16314	Identifier	hy		16299	1					
ANR	16315	IdentifierDeclStatement	int orig_h = * h ;	544:4:16680:16695	16299	1	True				
ANR	16316	IdentifierDecl	orig_h = * h		16299	0					
ANR	16317	IdentifierDeclType	int		16299	0					
ANR	16318	Identifier	orig_h		16299	1					
ANR	16319	AssignmentExpression	orig_h = * h		16299	2		=			
ANR	16320	Identifier	orig_h		16299	0					
ANR	16321	UnaryOperationExpression	* h		16299	1					
ANR	16322	UnaryOperator	*		16299	0					
ANR	16323	Identifier	h		16299	1					
ANR	16324	IdentifierDeclStatement	int orig_w = * w ;	545:4:16701:16716	16299	2	True				
ANR	16325	IdentifierDecl	orig_w = * w		16299	0					
ANR	16326	IdentifierDeclType	int		16299	0					
ANR	16327	Identifier	orig_w		16299	1					
ANR	16328	AssignmentExpression	orig_w = * w		16299	2		=			
ANR	16329	Identifier	orig_w		16299	0					
ANR	16330	UnaryOperationExpression	* w		16299	1					
ANR	16331	UnaryOperator	*		16299	0					
ANR	16332	Identifier	w		16299	1					
ANR	16333	ExpressionStatement	lx = x11 -> randr . min_width	547:4:16723:16748	16299	3	True				
ANR	16334	AssignmentExpression	lx = x11 -> randr . min_width		16299	0		=			
ANR	16335	Identifier	lx		16299	0					
ANR	16336	MemberAccess	x11 -> randr . min_width		16299	1					
ANR	16337	PtrMemberAccess	x11 -> randr		16299	0					
ANR	16338	Identifier	x11		16299	0					
ANR	16339	Identifier	randr		16299	1					
ANR	16340	Identifier	min_width		16299	1					
ANR	16341	ExpressionStatement	hx = x11 -> randr . max_width	548:4:16754:16779	16299	4	True				
ANR	16342	AssignmentExpression	hx = x11 -> randr . max_width		16299	0		=			
ANR	16343	Identifier	hx		16299	0					
ANR	16344	MemberAccess	x11 -> randr . max_width		16299	1					
ANR	16345	PtrMemberAccess	x11 -> randr		16299	0					
ANR	16346	Identifier	x11		16299	0					
ANR	16347	Identifier	randr		16299	1					
ANR	16348	Identifier	max_width		16299	1					
ANR	16349	ExpressionStatement	ly = x11 -> randr . min_height	549:4:16785:16811	16299	5	True				
ANR	16350	AssignmentExpression	ly = x11 -> randr . min_height		16299	0		=			
ANR	16351	Identifier	ly		16299	0					
ANR	16352	MemberAccess	x11 -> randr . min_height		16299	1					
ANR	16353	PtrMemberAccess	x11 -> randr		16299	0					
ANR	16354	Identifier	x11		16299	0					
ANR	16355	Identifier	randr		16299	1					
ANR	16356	Identifier	min_height		16299	1					
ANR	16357	ExpressionStatement	hy = x11 -> randr . max_height	550:4:16817:16843	16299	6	True				
ANR	16358	AssignmentExpression	hy = x11 -> randr . max_height		16299	0		=			
ANR	16359	Identifier	hy		16299	0					
ANR	16360	MemberAccess	x11 -> randr . max_height		16299	1					
ANR	16361	PtrMemberAccess	x11 -> randr		16299	0					
ANR	16362	Identifier	x11		16299	0					
ANR	16363	Identifier	randr		16299	1					
ANR	16364	Identifier	max_height		16299	1					
ANR	16365	IfStatement	"if ( constrain_to_range ( lx , w , hx ) )"		16299	7					
ANR	16366	Condition	"constrain_to_range ( lx , w , hx )"	551:8:16853:16881	16299	0	True				
ANR	16367	CallExpression	"constrain_to_range ( lx , w , hx )"		16299	0					
ANR	16368	Callee	constrain_to_range		16299	0					
ANR	16369	Identifier	constrain_to_range		16299	0					
ANR	16370	ArgumentList	lx		16299	1					
ANR	16371	Argument	lx		16299	0					
ANR	16372	Identifier	lx		16299	0					
ANR	16373	Argument	w		16299	1					
ANR	16374	Identifier	w		16299	0					
ANR	16375	Argument	hx		16299	2					
ANR	16376	Identifier	hx		16299	0					
ANR	16377	CompoundStatement		10:39:233:233	16299	1					
ANR	16378	ExpressionStatement	"syslog ( LOG_ERR , ""width not in driver range: ! %d < %d < %d"" , lx , orig_w , hx )"	552:8:16894:16985	16299	0	True				
ANR	16379	CallExpression	"syslog ( LOG_ERR , ""width not in driver range: ! %d < %d < %d"" , lx , orig_w , hx )"		16299	0					
ANR	16380	Callee	syslog		16299	0					
ANR	16381	Identifier	syslog		16299	0					
ANR	16382	ArgumentList	LOG_ERR		16299	1					
ANR	16383	Argument	LOG_ERR		16299	0					
ANR	16384	Identifier	LOG_ERR		16299	0					
ANR	16385	Argument	"""width not in driver range: ! %d < %d < %d"""		16299	1					
ANR	16386	PrimaryExpression	"""width not in driver range: ! %d < %d < %d"""		16299	0					
ANR	16387	Argument	lx		16299	2					
ANR	16388	Identifier	lx		16299	0					
ANR	16389	Argument	orig_w		16299	3					
ANR	16390	Identifier	orig_w		16299	0					
ANR	16391	Argument	hx		16299	4					
ANR	16392	Identifier	hx		16299	0					
ANR	16393	IfStatement	"if ( constrain_to_range ( ly , h , hy ) )"		16299	8					
ANR	16394	Condition	"constrain_to_range ( ly , h , hy )"	555:8:17001:17029	16299	0	True				
ANR	16395	CallExpression	"constrain_to_range ( ly , h , hy )"		16299	0					
ANR	16396	Callee	constrain_to_range		16299	0					
ANR	16397	Identifier	constrain_to_range		16299	0					
ANR	16398	ArgumentList	ly		16299	1					
ANR	16399	Argument	ly		16299	0					
ANR	16400	Identifier	ly		16299	0					
ANR	16401	Argument	h		16299	1					
ANR	16402	Identifier	h		16299	0					
ANR	16403	Argument	hy		16299	2					
ANR	16404	Identifier	hy		16299	0					
ANR	16405	CompoundStatement		14:39:381:381	16299	1					
ANR	16406	ExpressionStatement	"syslog ( LOG_ERR , ""height not in driver range: ! %d < %d < %d"" , ly , orig_h , hy )"	556:8:17042:17134	16299	0	True				
ANR	16407	CallExpression	"syslog ( LOG_ERR , ""height not in driver range: ! %d < %d < %d"" , ly , orig_h , hy )"		16299	0					
ANR	16408	Callee	syslog		16299	0					
ANR	16409	Identifier	syslog		16299	0					
ANR	16410	ArgumentList	LOG_ERR		16299	1					
ANR	16411	Argument	LOG_ERR		16299	0					
ANR	16412	Identifier	LOG_ERR		16299	0					
ANR	16413	Argument	"""height not in driver range: ! %d < %d < %d"""		16299	1					
ANR	16414	PrimaryExpression	"""height not in driver range: ! %d < %d < %d"""		16299	0					
ANR	16415	Argument	ly		16299	2					
ANR	16416	Identifier	ly		16299	0					
ANR	16417	Argument	orig_h		16299	3					
ANR	16418	Identifier	orig_h		16299	0					
ANR	16419	Argument	hy		16299	4					
ANR	16420	Identifier	hy		16299	0					
ANR	16421	ReturnType	static void		16299	1					
ANR	16422	Identifier	constrain_to_screen		16299	2					
ANR	16423	ParameterList	"struct vdagent_x11 * x11 , int * w , int * h"		16299	3					
ANR	16424	Parameter	struct vdagent_x11 * x11	541:32:16609:16631	16299	0	True				
ANR	16425	ParameterType	struct vdagent_x11 *		16299	0					
ANR	16426	Identifier	x11		16299	1					
ANR	16427	Parameter	int * w	541:57:16634:16639	16299	1	True				
ANR	16428	ParameterType	int *		16299	0					
ANR	16429	Identifier	w		16299	1					
ANR	16430	Parameter	int * h	541:65:16642:16647	16299	2	True				
ANR	16431	ParameterType	int *		16299	0					
ANR	16432	Identifier	h		16299	1					
ANR	16433	CFGEntryNode	ENTRY		16299		True				
ANR	16434	CFGExitNode	EXIT		16299		True				
ANR	16435	Symbol	* w		16299						
ANR	16436	Symbol	* x11		16299						
ANR	16437	Symbol	x11 -> randr . max_height		16299						
ANR	16438	Symbol	constrain_to_range		16299						
ANR	16439	Symbol	x11 -> randr . min_height		16299						
ANR	16440	Symbol	h		16299						
ANR	16441	Symbol	x11 -> randr		16299						
ANR	16442	Symbol	orig_h		16299						
ANR	16443	Symbol	lx		16299						
ANR	16444	Symbol	ly		16299						
ANR	16445	Symbol	hx		16299						
ANR	16446	Symbol	hy		16299						
ANR	16447	Symbol	* h		16299						
ANR	16448	Symbol	w		16299						
ANR	16449	Symbol	LOG_ERR		16299						
ANR	16450	Symbol	orig_w		16299						
ANR	16451	Symbol	x11 -> randr . max_width		16299						
ANR	16452	Symbol	x11		16299						
ANR	16453	Symbol	x11 -> randr . min_width		16299						
ANR	16454	Function	monitor_enabled	561:0:17145:17245							
ANR	16455	FunctionDef	monitor_enabled (VDAgentMonConfig * mon)		16454	0					
ANR	16456	CompoundStatement		562:0:17195:17245	16454	0					
ANR	16457	ReturnStatement	return mon -> width != 0 && mon -> height != 0 ;	563:4:17201:17243	16454	0	True				
ANR	16458	AndExpression	mon -> width != 0 && mon -> height != 0		16454	0		&&			
ANR	16459	EqualityExpression	mon -> width != 0		16454	0		!=			
ANR	16460	PtrMemberAccess	mon -> width		16454	0					
ANR	16461	Identifier	mon		16454	0					
ANR	16462	Identifier	width		16454	1					
ANR	16463	PrimaryExpression	0		16454	1					
ANR	16464	EqualityExpression	mon -> height != 0		16454	1		!=			
ANR	16465	PtrMemberAccess	mon -> height		16454	0					
ANR	16466	Identifier	mon		16454	0					
ANR	16467	Identifier	height		16454	1					
ANR	16468	PrimaryExpression	0		16454	1					
ANR	16469	ReturnType	static int		16454	1					
ANR	16470	Identifier	monitor_enabled		16454	2					
ANR	16471	ParameterList	VDAgentMonConfig * mon		16454	3					
ANR	16472	Parameter	VDAgentMonConfig * mon	561:27:17172:17192	16454	0	True				
ANR	16473	ParameterType	VDAgentMonConfig *		16454	0					
ANR	16474	Identifier	mon		16454	1					
ANR	16475	CFGEntryNode	ENTRY		16454		True				
ANR	16476	CFGExitNode	EXIT		16454		True				
ANR	16477	Symbol	mon -> height		16454						
ANR	16478	Symbol	mon -> width		16454						
ANR	16479	Symbol	* mon		16454						
ANR	16480	Symbol	mon		16454						
ANR	16481	Function	zero_base_monitors	578:0:17677:19132							
ANR	16482	FunctionDef	"zero_base_monitors (struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int * width , int * height)"		16481	0					
ANR	16483	CompoundStatement		581:0:17855:19132	16481	0					
ANR	16484	IdentifierDeclStatement	"int i , min_x = INT_MAX , min_y = INT_MAX , max_x = INT_MIN , max_y = INT_MIN ;"	582:4:17861:17934	16481	0	True				
ANR	16485	IdentifierDecl	i		16481	0					
ANR	16486	IdentifierDeclType	int		16481	0					
ANR	16487	Identifier	i		16481	1					
ANR	16488	IdentifierDecl	min_x = INT_MAX		16481	1					
ANR	16489	IdentifierDeclType	int		16481	0					
ANR	16490	Identifier	min_x		16481	1					
ANR	16491	AssignmentExpression	min_x = INT_MAX		16481	2		=			
ANR	16492	Identifier	INT_MAX		16481	0					
ANR	16493	Identifier	INT_MAX		16481	1					
ANR	16494	IdentifierDecl	min_y = INT_MAX		16481	2					
ANR	16495	IdentifierDeclType	int		16481	0					
ANR	16496	Identifier	min_y		16481	1					
ANR	16497	AssignmentExpression	min_y = INT_MAX		16481	2		=			
ANR	16498	Identifier	INT_MAX		16481	0					
ANR	16499	Identifier	INT_MAX		16481	1					
ANR	16500	IdentifierDecl	max_x = INT_MIN		16481	3					
ANR	16501	IdentifierDeclType	int		16481	0					
ANR	16502	Identifier	max_x		16481	1					
ANR	16503	AssignmentExpression	max_x = INT_MIN		16481	2		=			
ANR	16504	Identifier	INT_MIN		16481	0					
ANR	16505	Identifier	INT_MIN		16481	1					
ANR	16506	IdentifierDecl	max_y = INT_MIN		16481	4					
ANR	16507	IdentifierDeclType	int		16481	0					
ANR	16508	Identifier	max_y		16481	1					
ANR	16509	AssignmentExpression	max_y = INT_MIN		16481	2		=			
ANR	16510	Identifier	INT_MIN		16481	0					
ANR	16511	Identifier	INT_MIN		16481	1					
ANR	16512	IdentifierDeclStatement	"int * mon_height , * mon_width ;"	583:4:17940:17967	16481	1	True				
ANR	16513	IdentifierDecl	* mon_height		16481	0					
ANR	16514	IdentifierDeclType	int *		16481	0					
ANR	16515	Identifier	mon_height		16481	1					
ANR	16516	IdentifierDecl	* mon_width		16481	1					
ANR	16517	IdentifierDeclType	int *		16481	0					
ANR	16518	Identifier	mon_width		16481	1					
ANR	16519	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; i ++ )		16481	2					
ANR	16520	ForInit	i = 0 ;	585:9:17979:17984	16481	0	True				
ANR	16521	AssignmentExpression	i = 0		16481	0		=			
ANR	16522	Identifier	i		16481	0					
ANR	16523	PrimaryExpression	0		16481	1					
ANR	16524	Condition	i < mon_config -> num_of_monitors	585:16:17986:18016	16481	1	True				
ANR	16525	RelationalExpression	i < mon_config -> num_of_monitors		16481	0		<			
ANR	16526	Identifier	i		16481	0					
ANR	16527	PtrMemberAccess	mon_config -> num_of_monitors		16481	1					
ANR	16528	Identifier	mon_config		16481	0					
ANR	16529	Identifier	num_of_monitors		16481	1					
ANR	16530	PostIncDecOperationExpression	i ++	585:49:18019:18021	16481	2	True				
ANR	16531	Identifier	i		16481	0					
ANR	16532	IncDec	++		16481	1					
ANR	16533	CompoundStatement		5:54:168:168	16481	3					
ANR	16534	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		16481	0					
ANR	16535	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	586:12:18038:18079	16481	0	True				
ANR	16536	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		16481	0					
ANR	16537	UnaryOperator	!		16481	0					
ANR	16538	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		16481	1					
ANR	16539	Callee	monitor_enabled		16481	0					
ANR	16540	Identifier	monitor_enabled		16481	0					
ANR	16541	ArgumentList	& mon_config -> monitors [ i ]		16481	1					
ANR	16542	Argument	& mon_config -> monitors [ i ]		16481	0					
ANR	16543	UnaryOperationExpression	& mon_config -> monitors [ i ]		16481	0					
ANR	16544	UnaryOperator	&		16481	0					
ANR	16545	ArrayIndexing	mon_config -> monitors [ i ]		16481	1					
ANR	16546	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16547	Identifier	mon_config		16481	0					
ANR	16548	Identifier	monitors		16481	1					
ANR	16549	Identifier	i		16481	1					
ANR	16550	ContinueStatement	continue ;	587:12:18094:18102	16481	1	True				
ANR	16551	ExpressionStatement	mon_config -> monitors [ i ] . x &= ~7	588:8:18112:18143	16481	1	True				
ANR	16552	AssignmentExpression	mon_config -> monitors [ i ] . x &= ~7		16481	0		&=			
ANR	16553	MemberAccess	mon_config -> monitors [ i ] . x		16481	0					
ANR	16554	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16555	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16556	Identifier	mon_config		16481	0					
ANR	16557	Identifier	monitors		16481	1					
ANR	16558	Identifier	i		16481	1					
ANR	16559	Identifier	x		16481	1					
ANR	16560	Identifier	~7		16481	1					
ANR	16561	ExpressionStatement	mon_config -> monitors [ i ] . width &= ~7	589:8:18153:18188	16481	2	True				
ANR	16562	AssignmentExpression	mon_config -> monitors [ i ] . width &= ~7		16481	0		&=			
ANR	16563	MemberAccess	mon_config -> monitors [ i ] . width		16481	0					
ANR	16564	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16565	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16566	Identifier	mon_config		16481	0					
ANR	16567	Identifier	monitors		16481	1					
ANR	16568	Identifier	i		16481	1					
ANR	16569	Identifier	width		16481	1					
ANR	16570	Identifier	~7		16481	1					
ANR	16571	ExpressionStatement	mon_width = ( int * ) & mon_config -> monitors [ i ] . width	590:8:18198:18247	16481	3	True				
ANR	16572	AssignmentExpression	mon_width = ( int * ) & mon_config -> monitors [ i ] . width		16481	0		=			
ANR	16573	Identifier	mon_width		16481	0					
ANR	16574	CastExpression	( int * ) & mon_config -> monitors [ i ] . width		16481	1					
ANR	16575	CastTarget	int *		16481	0					
ANR	16576	UnaryOperationExpression	& mon_config -> monitors [ i ] . width		16481	1					
ANR	16577	UnaryOperator	&		16481	0					
ANR	16578	MemberAccess	mon_config -> monitors [ i ] . width		16481	1					
ANR	16579	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16580	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16581	Identifier	mon_config		16481	0					
ANR	16582	Identifier	monitors		16481	1					
ANR	16583	Identifier	i		16481	1					
ANR	16584	Identifier	width		16481	1					
ANR	16585	ExpressionStatement	mon_height = ( int * ) & mon_config -> monitors [ i ] . height	591:8:18257:18308	16481	4	True				
ANR	16586	AssignmentExpression	mon_height = ( int * ) & mon_config -> monitors [ i ] . height		16481	0		=			
ANR	16587	Identifier	mon_height		16481	0					
ANR	16588	CastExpression	( int * ) & mon_config -> monitors [ i ] . height		16481	1					
ANR	16589	CastTarget	int *		16481	0					
ANR	16590	UnaryOperationExpression	& mon_config -> monitors [ i ] . height		16481	1					
ANR	16591	UnaryOperator	&		16481	0					
ANR	16592	MemberAccess	mon_config -> monitors [ i ] . height		16481	1					
ANR	16593	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16594	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16595	Identifier	mon_config		16481	0					
ANR	16596	Identifier	monitors		16481	1					
ANR	16597	Identifier	i		16481	1					
ANR	16598	Identifier	height		16481	1					
ANR	16599	ExpressionStatement	"constrain_to_screen ( x11 , mon_width , mon_height )"	592:8:18318:18365	16481	5	True				
ANR	16600	CallExpression	"constrain_to_screen ( x11 , mon_width , mon_height )"		16481	0					
ANR	16601	Callee	constrain_to_screen		16481	0					
ANR	16602	Identifier	constrain_to_screen		16481	0					
ANR	16603	ArgumentList	x11		16481	1					
ANR	16604	Argument	x11		16481	0					
ANR	16605	Identifier	x11		16481	0					
ANR	16606	Argument	mon_width		16481	1					
ANR	16607	Identifier	mon_width		16481	0					
ANR	16608	Argument	mon_height		16481	2					
ANR	16609	Identifier	mon_height		16481	0					
ANR	16610	ExpressionStatement	"min_x = min_int ( mon_config -> monitors [ i ] . x , min_x )"	593:8:18375:18424	16481	6	True				
ANR	16611	AssignmentExpression	"min_x = min_int ( mon_config -> monitors [ i ] . x , min_x )"		16481	0		=			
ANR	16612	Identifier	min_x		16481	0					
ANR	16613	CallExpression	"min_int ( mon_config -> monitors [ i ] . x , min_x )"		16481	1					
ANR	16614	Callee	min_int		16481	0					
ANR	16615	Identifier	min_int		16481	0					
ANR	16616	ArgumentList	mon_config -> monitors [ i ] . x		16481	1					
ANR	16617	Argument	mon_config -> monitors [ i ] . x		16481	0					
ANR	16618	MemberAccess	mon_config -> monitors [ i ] . x		16481	0					
ANR	16619	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16620	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16621	Identifier	mon_config		16481	0					
ANR	16622	Identifier	monitors		16481	1					
ANR	16623	Identifier	i		16481	1					
ANR	16624	Identifier	x		16481	1					
ANR	16625	Argument	min_x		16481	1					
ANR	16626	Identifier	min_x		16481	0					
ANR	16627	ExpressionStatement	"min_y = min_int ( mon_config -> monitors [ i ] . y , min_y )"	594:8:18434:18483	16481	7	True				
ANR	16628	AssignmentExpression	"min_y = min_int ( mon_config -> monitors [ i ] . y , min_y )"		16481	0		=			
ANR	16629	Identifier	min_y		16481	0					
ANR	16630	CallExpression	"min_int ( mon_config -> monitors [ i ] . y , min_y )"		16481	1					
ANR	16631	Callee	min_int		16481	0					
ANR	16632	Identifier	min_int		16481	0					
ANR	16633	ArgumentList	mon_config -> monitors [ i ] . y		16481	1					
ANR	16634	Argument	mon_config -> monitors [ i ] . y		16481	0					
ANR	16635	MemberAccess	mon_config -> monitors [ i ] . y		16481	0					
ANR	16636	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16637	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16638	Identifier	mon_config		16481	0					
ANR	16639	Identifier	monitors		16481	1					
ANR	16640	Identifier	i		16481	1					
ANR	16641	Identifier	y		16481	1					
ANR	16642	Argument	min_y		16481	1					
ANR	16643	Identifier	min_y		16481	0					
ANR	16644	ExpressionStatement	"max_x = max_int ( mon_config -> monitors [ i ] . x + * mon_width , max_x )"	595:8:18493:18555	16481	8	True				
ANR	16645	AssignmentExpression	"max_x = max_int ( mon_config -> monitors [ i ] . x + * mon_width , max_x )"		16481	0		=			
ANR	16646	Identifier	max_x		16481	0					
ANR	16647	CallExpression	"max_int ( mon_config -> monitors [ i ] . x + * mon_width , max_x )"		16481	1					
ANR	16648	Callee	max_int		16481	0					
ANR	16649	Identifier	max_int		16481	0					
ANR	16650	ArgumentList	mon_config -> monitors [ i ] . x + * mon_width		16481	1					
ANR	16651	Argument	mon_config -> monitors [ i ] . x + * mon_width		16481	0					
ANR	16652	AdditiveExpression	mon_config -> monitors [ i ] . x + * mon_width		16481	0		+			
ANR	16653	MemberAccess	mon_config -> monitors [ i ] . x		16481	0					
ANR	16654	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16655	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16656	Identifier	mon_config		16481	0					
ANR	16657	Identifier	monitors		16481	1					
ANR	16658	Identifier	i		16481	1					
ANR	16659	Identifier	x		16481	1					
ANR	16660	UnaryOperationExpression	* mon_width		16481	1					
ANR	16661	UnaryOperator	*		16481	0					
ANR	16662	Identifier	mon_width		16481	1					
ANR	16663	Argument	max_x		16481	1					
ANR	16664	Identifier	max_x		16481	0					
ANR	16665	ExpressionStatement	"max_y = max_int ( mon_config -> monitors [ i ] . y + * mon_height , max_y )"	596:8:18565:18628	16481	9	True				
ANR	16666	AssignmentExpression	"max_y = max_int ( mon_config -> monitors [ i ] . y + * mon_height , max_y )"		16481	0		=			
ANR	16667	Identifier	max_y		16481	0					
ANR	16668	CallExpression	"max_int ( mon_config -> monitors [ i ] . y + * mon_height , max_y )"		16481	1					
ANR	16669	Callee	max_int		16481	0					
ANR	16670	Identifier	max_int		16481	0					
ANR	16671	ArgumentList	mon_config -> monitors [ i ] . y + * mon_height		16481	1					
ANR	16672	Argument	mon_config -> monitors [ i ] . y + * mon_height		16481	0					
ANR	16673	AdditiveExpression	mon_config -> monitors [ i ] . y + * mon_height		16481	0		+			
ANR	16674	MemberAccess	mon_config -> monitors [ i ] . y		16481	0					
ANR	16675	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16676	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16677	Identifier	mon_config		16481	0					
ANR	16678	Identifier	monitors		16481	1					
ANR	16679	Identifier	i		16481	1					
ANR	16680	Identifier	y		16481	1					
ANR	16681	UnaryOperationExpression	* mon_height		16481	1					
ANR	16682	UnaryOperator	*		16481	0					
ANR	16683	Identifier	mon_height		16481	1					
ANR	16684	Argument	max_y		16481	1					
ANR	16685	Identifier	max_y		16481	0					
ANR	16686	IfStatement	if ( min_x != 0 || min_y != 0 )		16481	3					
ANR	16687	Condition	min_x != 0 || min_y != 0	598:8:18644:18667	16481	0	True				
ANR	16688	OrExpression	min_x != 0 || min_y != 0		16481	0		||			
ANR	16689	EqualityExpression	min_x != 0		16481	0		!=			
ANR	16690	Identifier	min_x		16481	0					
ANR	16691	PrimaryExpression	0		16481	1					
ANR	16692	EqualityExpression	min_y != 0		16481	1		!=			
ANR	16693	Identifier	min_y		16481	0					
ANR	16694	PrimaryExpression	0		16481	1					
ANR	16695	CompoundStatement		18:34:814:814	16481	1					
ANR	16696	ExpressionStatement	"syslog ( LOG_ERR , ""%s: agent config %d,%d rooted, adjusting to 0,0."" , __FUNCTION__ , min_x , min_y )"	599:8:18680:18790	16481	0	True				
ANR	16697	CallExpression	"syslog ( LOG_ERR , ""%s: agent config %d,%d rooted, adjusting to 0,0."" , __FUNCTION__ , min_x , min_y )"		16481	0					
ANR	16698	Callee	syslog		16481	0					
ANR	16699	Identifier	syslog		16481	0					
ANR	16700	ArgumentList	LOG_ERR		16481	1					
ANR	16701	Argument	LOG_ERR		16481	0					
ANR	16702	Identifier	LOG_ERR		16481	0					
ANR	16703	Argument	"""%s: agent config %d,%d rooted, adjusting to 0,0."""		16481	1					
ANR	16704	PrimaryExpression	"""%s: agent config %d,%d rooted, adjusting to 0,0."""		16481	0					
ANR	16705	Argument	__FUNCTION__		16481	2					
ANR	16706	Identifier	__FUNCTION__		16481	0					
ANR	16707	Argument	min_x		16481	3					
ANR	16708	Identifier	min_x		16481	0					
ANR	16709	Argument	min_y		16481	4					
ANR	16710	Identifier	min_y		16481	0					
ANR	16711	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		16481	1					
ANR	16712	ForInit	i = 0 ;	601:13:18805:18811	16481	0	True				
ANR	16713	AssignmentExpression	i = 0		16481	0		=			
ANR	16714	Identifier	i		16481	0					
ANR	16715	PrimaryExpression	0		16481	1					
ANR	16716	Condition	i < mon_config -> num_of_monitors	601:21:18813:18843	16481	1	True				
ANR	16717	RelationalExpression	i < mon_config -> num_of_monitors		16481	0		<			
ANR	16718	Identifier	i		16481	0					
ANR	16719	PtrMemberAccess	mon_config -> num_of_monitors		16481	1					
ANR	16720	Identifier	mon_config		16481	0					
ANR	16721	Identifier	num_of_monitors		16481	1					
ANR	16722	UnaryExpression	++ i	601:54:18846:18848	16481	2	True				
ANR	16723	IncDec	++		16481	0					
ANR	16724	Identifier	i		16481	1					
ANR	16725	CompoundStatement		21:59:995:995	16481	3					
ANR	16726	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		16481	0					
ANR	16727	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	602:16:18869:18910	16481	0	True				
ANR	16728	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		16481	0					
ANR	16729	UnaryOperator	!		16481	0					
ANR	16730	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		16481	1					
ANR	16731	Callee	monitor_enabled		16481	0					
ANR	16732	Identifier	monitor_enabled		16481	0					
ANR	16733	ArgumentList	& mon_config -> monitors [ i ]		16481	1					
ANR	16734	Argument	& mon_config -> monitors [ i ]		16481	0					
ANR	16735	UnaryOperationExpression	& mon_config -> monitors [ i ]		16481	0					
ANR	16736	UnaryOperator	&		16481	0					
ANR	16737	ArrayIndexing	mon_config -> monitors [ i ]		16481	1					
ANR	16738	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16739	Identifier	mon_config		16481	0					
ANR	16740	Identifier	monitors		16481	1					
ANR	16741	Identifier	i		16481	1					
ANR	16742	ContinueStatement	continue ;	603:16:18929:18937	16481	1	True				
ANR	16743	ExpressionStatement	mon_config -> monitors [ i ] . x -= min_x	604:12:18951:18985	16481	1	True				
ANR	16744	AssignmentExpression	mon_config -> monitors [ i ] . x -= min_x		16481	0		-=			
ANR	16745	MemberAccess	mon_config -> monitors [ i ] . x		16481	0					
ANR	16746	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16747	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16748	Identifier	mon_config		16481	0					
ANR	16749	Identifier	monitors		16481	1					
ANR	16750	Identifier	i		16481	1					
ANR	16751	Identifier	x		16481	1					
ANR	16752	Identifier	min_x		16481	1					
ANR	16753	ExpressionStatement	mon_config -> monitors [ i ] . y -= min_y	605:12:18999:19033	16481	2	True				
ANR	16754	AssignmentExpression	mon_config -> monitors [ i ] . y -= min_y		16481	0		-=			
ANR	16755	MemberAccess	mon_config -> monitors [ i ] . y		16481	0					
ANR	16756	ArrayIndexing	mon_config -> monitors [ i ]		16481	0					
ANR	16757	PtrMemberAccess	mon_config -> monitors		16481	0					
ANR	16758	Identifier	mon_config		16481	0					
ANR	16759	Identifier	monitors		16481	1					
ANR	16760	Identifier	i		16481	1					
ANR	16761	Identifier	y		16481	1					
ANR	16762	Identifier	min_y		16481	1					
ANR	16763	ExpressionStatement	max_x -= min_x	608:4:19055:19069	16481	4	True				
ANR	16764	AssignmentExpression	max_x -= min_x		16481	0		-=			
ANR	16765	Identifier	max_x		16481	0					
ANR	16766	Identifier	min_x		16481	1					
ANR	16767	ExpressionStatement	max_y -= min_y	609:4:19075:19089	16481	5	True				
ANR	16768	AssignmentExpression	max_y -= min_y		16481	0		-=			
ANR	16769	Identifier	max_y		16481	0					
ANR	16770	Identifier	min_y		16481	1					
ANR	16771	ExpressionStatement	* width = max_x	610:4:19095:19109	16481	6	True				
ANR	16772	AssignmentExpression	* width = max_x		16481	0		=			
ANR	16773	UnaryOperationExpression	* width		16481	0					
ANR	16774	UnaryOperator	*		16481	0					
ANR	16775	Identifier	width		16481	1					
ANR	16776	Identifier	max_x		16481	1					
ANR	16777	ExpressionStatement	* height = max_y	611:4:19115:19130	16481	7	True				
ANR	16778	AssignmentExpression	* height = max_y		16481	0		=			
ANR	16779	UnaryOperationExpression	* height		16481	0					
ANR	16780	UnaryOperator	*		16481	0					
ANR	16781	Identifier	height		16481	1					
ANR	16782	Identifier	max_y		16481	1					
ANR	16783	ReturnType	static void		16481	1					
ANR	16784	Identifier	zero_base_monitors		16481	2					
ANR	16785	ParameterList	"struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int * width , int * height"		16481	3					
ANR	16786	Parameter	struct vdagent_x11 * x11	578:31:17708:17730	16481	0	True				
ANR	16787	ParameterType	struct vdagent_x11 *		16481	0					
ANR	16788	Identifier	x11		16481	1					
ANR	16789	Parameter	VDAgentMonitorsConfig * mon_config	579:31:17764:17796	16481	1	True				
ANR	16790	ParameterType	VDAgentMonitorsConfig *		16481	0					
ANR	16791	Identifier	mon_config		16481	1					
ANR	16792	Parameter	int * width	580:31:17830:17839	16481	2	True				
ANR	16793	ParameterType	int *		16481	0					
ANR	16794	Identifier	width		16481	1					
ANR	16795	Parameter	int * height	580:43:17842:17852	16481	3	True				
ANR	16796	ParameterType	int *		16481	0					
ANR	16797	Identifier	height		16481	1					
ANR	16798	CFGEntryNode	ENTRY		16481		True				
ANR	16799	CFGExitNode	EXIT		16481		True				
ANR	16800	Symbol	max_int		16481						
ANR	16801	Symbol	& mon_config -> monitors [ i ] . height		16481						
ANR	16802	Symbol	monitor_enabled		16481						
ANR	16803	Symbol	INT_MIN		16481						
ANR	16804	Symbol	* width		16481						
ANR	16805	Symbol	mon_config -> monitors [ i ] . x		16481						
ANR	16806	Symbol	mon_config -> monitors [ i ] . y		16481						
ANR	16807	Symbol	mon_config -> monitors		16481						
ANR	16808	Symbol	mon_config -> num_of_monitors		16481						
ANR	16809	Symbol	* mon_config		16481						
ANR	16810	Symbol	LOG_ERR		16481						
ANR	16811	Symbol	INT_MAX		16481						
ANR	16812	Symbol	x11		16481						
ANR	16813	Symbol	* mon_width		16481						
ANR	16814	Symbol	mon_width		16481						
ANR	16815	Symbol	height		16481						
ANR	16816	Symbol	* * mon_config		16481						
ANR	16817	Symbol	mon_height		16481						
ANR	16818	Symbol	* mon_height		16481						
ANR	16819	Symbol	i		16481						
ANR	16820	Symbol	mon_config -> monitors [ i ] . width		16481						
ANR	16821	Symbol	min_int		16481						
ANR	16822	Symbol	* height		16481						
ANR	16823	Symbol	__FUNCTION__		16481						
ANR	16824	Symbol	* mon_config -> monitors		16481						
ANR	16825	Symbol	max_x		16481						
ANR	16826	Symbol	max_y		16481						
ANR	16827	Symbol	* i		16481						
ANR	16828	Symbol	& mon_config -> monitors [ i ] . width		16481						
ANR	16829	Symbol	mon_config		16481						
ANR	16830	Symbol	width		16481						
ANR	16831	Symbol	~7		16481						
ANR	16832	Symbol	min_x		16481						
ANR	16833	Symbol	min_y		16481						
ANR	16834	Function	enabled_monitors	614:0:19135:19364							
ANR	16835	FunctionDef	enabled_monitors (VDAgentMonitorsConfig * mon)		16834	0					
ANR	16836	CompoundStatement		615:0:19191:19364	16834	0					
ANR	16837	IdentifierDeclStatement	"int i , enabled = 0 ;"	616:4:19197:19215	16834	0	True				
ANR	16838	IdentifierDecl	i		16834	0					
ANR	16839	IdentifierDeclType	int		16834	0					
ANR	16840	Identifier	i		16834	1					
ANR	16841	IdentifierDecl	enabled = 0		16834	1					
ANR	16842	IdentifierDeclType	int		16834	0					
ANR	16843	Identifier	enabled		16834	1					
ANR	16844	AssignmentExpression	enabled = 0		16834	2		=			
ANR	16845	Identifier	enabled		16834	0					
ANR	16846	PrimaryExpression	0		16834	1					
ANR	16847	ForStatement	for ( i = 0 ; i < mon -> num_of_monitors ; i ++ )		16834	1					
ANR	16848	ForInit	i = 0 ;	618:9:19227:19232	16834	0	True				
ANR	16849	AssignmentExpression	i = 0		16834	0		=			
ANR	16850	Identifier	i		16834	0					
ANR	16851	PrimaryExpression	0		16834	1					
ANR	16852	Condition	i < mon -> num_of_monitors	618:16:19234:19257	16834	1	True				
ANR	16853	RelationalExpression	i < mon -> num_of_monitors		16834	0		<			
ANR	16854	Identifier	i		16834	0					
ANR	16855	PtrMemberAccess	mon -> num_of_monitors		16834	1					
ANR	16856	Identifier	mon		16834	0					
ANR	16857	Identifier	num_of_monitors		16834	1					
ANR	16858	PostIncDecOperationExpression	i ++	618:42:19260:19262	16834	2	True				
ANR	16859	Identifier	i		16834	0					
ANR	16860	IncDec	++		16834	1					
ANR	16861	CompoundStatement		4:47:73:73	16834	3					
ANR	16862	IfStatement	if ( monitor_enabled ( & mon -> monitors [ i ] ) )		16834	0					
ANR	16863	Condition	monitor_enabled ( & mon -> monitors [ i ] )	619:12:19279:19312	16834	0	True				
ANR	16864	CallExpression	monitor_enabled ( & mon -> monitors [ i ] )		16834	0					
ANR	16865	Callee	monitor_enabled		16834	0					
ANR	16866	Identifier	monitor_enabled		16834	0					
ANR	16867	ArgumentList	& mon -> monitors [ i ]		16834	1					
ANR	16868	Argument	& mon -> monitors [ i ]		16834	0					
ANR	16869	UnaryOperationExpression	& mon -> monitors [ i ]		16834	0					
ANR	16870	UnaryOperator	&		16834	0					
ANR	16871	ArrayIndexing	mon -> monitors [ i ]		16834	1					
ANR	16872	PtrMemberAccess	mon -> monitors		16834	0					
ANR	16873	Identifier	mon		16834	0					
ANR	16874	Identifier	monitors		16834	1					
ANR	16875	Identifier	i		16834	1					
ANR	16876	ExpressionStatement	enabled ++	620:12:19327:19336	16834	1	True				
ANR	16877	PostIncDecOperationExpression	enabled ++		16834	0					
ANR	16878	Identifier	enabled		16834	0					
ANR	16879	IncDec	++		16834	1					
ANR	16880	ReturnStatement	return enabled ;	622:4:19348:19362	16834	2	True				
ANR	16881	Identifier	enabled		16834	0					
ANR	16882	ReturnType	static int		16834	1					
ANR	16883	Identifier	enabled_monitors		16834	2					
ANR	16884	ParameterList	VDAgentMonitorsConfig * mon		16834	3					
ANR	16885	Parameter	VDAgentMonitorsConfig * mon	614:28:19163:19188	16834	0	True				
ANR	16886	ParameterType	VDAgentMonitorsConfig *		16834	0					
ANR	16887	Identifier	mon		16834	1					
ANR	16888	CFGEntryNode	ENTRY		16834		True				
ANR	16889	CFGExitNode	EXIT		16834		True				
ANR	16890	Symbol	* mon		16834						
ANR	16891	Symbol	i		16834						
ANR	16892	Symbol	mon -> num_of_monitors		16834						
ANR	16893	Symbol	mon		16834						
ANR	16894	Symbol	mon -> monitors		16834						
ANR	16895	Symbol	monitor_enabled		16834						
ANR	16896	Symbol	enabled		16834						
ANR	16897	Function	same_monitor_configs	625:0:19367:20004							
ANR	16898	FunctionDef	"same_monitor_configs (VDAgentMonitorsConfig * conf1 , VDAgentMonitorsConfig * conf2)"		16897	0					
ANR	16899	CompoundStatement		627:0:19491:20004	16897	0					
ANR	16900	IdentifierDeclStatement	int i ;	628:4:19497:19502	16897	0	True				
ANR	16901	IdentifierDecl	i		16897	0					
ANR	16902	IdentifierDeclType	int		16897	0					
ANR	16903	Identifier	i		16897	1					
ANR	16904	IfStatement	if ( conf1 == NULL || conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors )		16897	1					
ANR	16905	Condition	conf1 == NULL || conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors	630:8:19513:19606	16897	0	True				
ANR	16906	OrExpression	conf1 == NULL || conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors		16897	0		||			
ANR	16907	EqualityExpression	conf1 == NULL		16897	0		==			
ANR	16908	Identifier	conf1		16897	0					
ANR	16909	Identifier	NULL		16897	1					
ANR	16910	OrExpression	conf2 == NULL || conf1 -> num_of_monitors != conf2 -> num_of_monitors		16897	1		||			
ANR	16911	EqualityExpression	conf2 == NULL		16897	0		==			
ANR	16912	Identifier	conf2		16897	0					
ANR	16913	Identifier	NULL		16897	1					
ANR	16914	EqualityExpression	conf1 -> num_of_monitors != conf2 -> num_of_monitors		16897	1		!=			
ANR	16915	PtrMemberAccess	conf1 -> num_of_monitors		16897	0					
ANR	16916	Identifier	conf1		16897	0					
ANR	16917	Identifier	num_of_monitors		16897	1					
ANR	16918	PtrMemberAccess	conf2 -> num_of_monitors		16897	1					
ANR	16919	Identifier	conf2		16897	0					
ANR	16920	Identifier	num_of_monitors		16897	1					
ANR	16921	ReturnStatement	return 0 ;	632:8:19617:19625	16897	1	True				
ANR	16922	PrimaryExpression	0		16897	0					
ANR	16923	ForStatement	for ( i = 0 ; i < conf1 -> num_of_monitors ; i ++ )		16897	2					
ANR	16924	ForInit	i = 0 ;	634:9:19637:19642	16897	0	True				
ANR	16925	AssignmentExpression	i = 0		16897	0		=			
ANR	16926	Identifier	i		16897	0					
ANR	16927	PrimaryExpression	0		16897	1					
ANR	16928	Condition	i < conf1 -> num_of_monitors	634:16:19644:19669	16897	1	True				
ANR	16929	RelationalExpression	i < conf1 -> num_of_monitors		16897	0		<			
ANR	16930	Identifier	i		16897	0					
ANR	16931	PtrMemberAccess	conf1 -> num_of_monitors		16897	1					
ANR	16932	Identifier	conf1		16897	0					
ANR	16933	Identifier	num_of_monitors		16897	1					
ANR	16934	PostIncDecOperationExpression	i ++	634:44:19672:19674	16897	2	True				
ANR	16935	Identifier	i		16897	0					
ANR	16936	IncDec	++		16897	1					
ANR	16937	CompoundStatement		10:8:249:293	16897	3					
ANR	16938	IdentifierDeclStatement	VDAgentMonConfig * mon1 = & conf1 -> monitors [ i ] ;	635:8:19687:19731	16897	0	True				
ANR	16939	IdentifierDecl	* mon1 = & conf1 -> monitors [ i ]		16897	0					
ANR	16940	IdentifierDeclType	VDAgentMonConfig *		16897	0					
ANR	16941	Identifier	mon1		16897	1					
ANR	16942	AssignmentExpression	* mon1 = & conf1 -> monitors [ i ]		16897	2		=			
ANR	16943	Identifier	mon1		16897	0					
ANR	16944	UnaryOperationExpression	& conf1 -> monitors [ i ]		16897	1					
ANR	16945	UnaryOperator	&		16897	0					
ANR	16946	ArrayIndexing	conf1 -> monitors [ i ]		16897	1					
ANR	16947	PtrMemberAccess	conf1 -> monitors		16897	0					
ANR	16948	Identifier	conf1		16897	0					
ANR	16949	Identifier	monitors		16897	1					
ANR	16950	Identifier	i		16897	1					
ANR	16951	IdentifierDeclStatement	VDAgentMonConfig * mon2 = & conf2 -> monitors [ i ] ;	636:8:19741:19785	16897	1	True				
ANR	16952	IdentifierDecl	* mon2 = & conf2 -> monitors [ i ]		16897	0					
ANR	16953	IdentifierDeclType	VDAgentMonConfig *		16897	0					
ANR	16954	Identifier	mon2		16897	1					
ANR	16955	AssignmentExpression	* mon2 = & conf2 -> monitors [ i ]		16897	2		=			
ANR	16956	Identifier	mon2		16897	0					
ANR	16957	UnaryOperationExpression	& conf2 -> monitors [ i ]		16897	1					
ANR	16958	UnaryOperator	&		16897	0					
ANR	16959	ArrayIndexing	conf2 -> monitors [ i ]		16897	1					
ANR	16960	PtrMemberAccess	conf2 -> monitors		16897	0					
ANR	16961	Identifier	conf2		16897	0					
ANR	16962	Identifier	monitors		16897	1					
ANR	16963	Identifier	i		16897	1					
ANR	16964	IfStatement	if ( mon1 -> x != mon2 -> x || mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height )		16897	2					
ANR	16965	Condition	mon1 -> x != mon2 -> x || mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height	638:12:19843:19959	16897	0	True				
ANR	16966	OrExpression	mon1 -> x != mon2 -> x || mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height		16897	0		||			
ANR	16967	EqualityExpression	mon1 -> x != mon2 -> x		16897	0		!=			
ANR	16968	PtrMemberAccess	mon1 -> x		16897	0					
ANR	16969	Identifier	mon1		16897	0					
ANR	16970	Identifier	x		16897	1					
ANR	16971	PtrMemberAccess	mon2 -> x		16897	1					
ANR	16972	Identifier	mon2		16897	0					
ANR	16973	Identifier	x		16897	1					
ANR	16974	OrExpression	mon1 -> y != mon2 -> y || mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height		16897	1		||			
ANR	16975	EqualityExpression	mon1 -> y != mon2 -> y		16897	0		!=			
ANR	16976	PtrMemberAccess	mon1 -> y		16897	0					
ANR	16977	Identifier	mon1		16897	0					
ANR	16978	Identifier	y		16897	1					
ANR	16979	PtrMemberAccess	mon2 -> y		16897	1					
ANR	16980	Identifier	mon2		16897	0					
ANR	16981	Identifier	y		16897	1					
ANR	16982	OrExpression	mon1 -> width != mon2 -> width || mon1 -> height != mon2 -> height		16897	1		||			
ANR	16983	EqualityExpression	mon1 -> width != mon2 -> width		16897	0		!=			
ANR	16984	PtrMemberAccess	mon1 -> width		16897	0					
ANR	16985	Identifier	mon1		16897	0					
ANR	16986	Identifier	width		16897	1					
ANR	16987	PtrMemberAccess	mon2 -> width		16897	1					
ANR	16988	Identifier	mon2		16897	0					
ANR	16989	Identifier	width		16897	1					
ANR	16990	EqualityExpression	mon1 -> height != mon2 -> height		16897	1		!=			
ANR	16991	PtrMemberAccess	mon1 -> height		16897	0					
ANR	16992	Identifier	mon1		16897	0					
ANR	16993	Identifier	height		16897	1					
ANR	16994	PtrMemberAccess	mon2 -> height		16897	1					
ANR	16995	Identifier	mon2		16897	0					
ANR	16996	Identifier	height		16897	1					
ANR	16997	ReturnStatement	return 0 ;	640:12:19974:19982	16897	1	True				
ANR	16998	PrimaryExpression	0		16897	0					
ANR	16999	ReturnStatement	return 1 ;	642:4:19994:20002	16897	3	True				
ANR	17000	PrimaryExpression	1		16897	0					
ANR	17001	ReturnType	static int		16897	1					
ANR	17002	Identifier	same_monitor_configs		16897	2					
ANR	17003	ParameterList	"VDAgentMonitorsConfig * conf1 , VDAgentMonitorsConfig * conf2"		16897	3					
ANR	17004	Parameter	VDAgentMonitorsConfig * conf1	625:32:19399:19426	16897	0	True				
ANR	17005	ParameterType	VDAgentMonitorsConfig *		16897	0					
ANR	17006	Identifier	conf1		16897	1					
ANR	17007	Parameter	VDAgentMonitorsConfig * conf2	626:32:19461:19488	16897	1	True				
ANR	17008	ParameterType	VDAgentMonitorsConfig *		16897	0					
ANR	17009	Identifier	conf2		16897	1					
ANR	17010	CFGEntryNode	ENTRY		16897		True				
ANR	17011	CFGExitNode	EXIT		16897		True				
ANR	17012	Symbol	mon2 -> height		16897						
ANR	17013	Symbol	NULL		16897						
ANR	17014	Symbol	mon1 -> height		16897						
ANR	17015	Symbol	conf1 -> monitors		16897						
ANR	17016	Symbol	conf2 -> monitors		16897						
ANR	17017	Symbol	conf2 -> num_of_monitors		16897						
ANR	17018	Symbol	conf2		16897						
ANR	17019	Symbol	i		16897						
ANR	17020	Symbol	conf1		16897						
ANR	17021	Symbol	mon1 -> x		16897						
ANR	17022	Symbol	conf1 -> num_of_monitors		16897						
ANR	17023	Symbol	mon1 -> y		16897						
ANR	17024	Symbol	* conf2		16897						
ANR	17025	Symbol	mon1 -> width		16897						
ANR	17026	Symbol	mon2		16897						
ANR	17027	Symbol	mon1		16897						
ANR	17028	Symbol	mon2 -> y		16897						
ANR	17029	Symbol	mon2 -> width		16897						
ANR	17030	Symbol	* mon1		16897						
ANR	17031	Symbol	* mon2		16897						
ANR	17032	Symbol	mon2 -> x		16897						
ANR	17033	Symbol	* conf1		16897						
ANR	17034	Function	config_size	645:0:20007:20167							
ANR	17035	FunctionDef	config_size (int num_of_monitors)		17034	0					
ANR	17036	CompoundStatement		646:0:20051:20167	17034	0					
ANR	17037	ReturnStatement	return sizeof ( VDAgentMonitorsConfig ) + num_of_monitors * sizeof ( VDAgentMonConfig ) ;	647:4:20057:20165	17034	0	True				
ANR	17038	AdditiveExpression	sizeof ( VDAgentMonitorsConfig ) + num_of_monitors * sizeof ( VDAgentMonConfig )		17034	0		+			
ANR	17039	SizeofExpression	sizeof ( VDAgentMonitorsConfig )		17034	0					
ANR	17040	Sizeof	sizeof		17034	0					
ANR	17041	SizeofOperand	VDAgentMonitorsConfig		17034	1					
ANR	17042	MultiplicativeExpression	num_of_monitors * sizeof ( VDAgentMonConfig )		17034	1		*			
ANR	17043	Identifier	num_of_monitors		17034	0					
ANR	17044	SizeofExpression	sizeof ( VDAgentMonConfig )		17034	1					
ANR	17045	Sizeof	sizeof		17034	0					
ANR	17046	SizeofOperand	VDAgentMonConfig		17034	1					
ANR	17047	ReturnType	static int		17034	1					
ANR	17048	Identifier	config_size		17034	2					
ANR	17049	ParameterList	int num_of_monitors		17034	3					
ANR	17050	Parameter	int num_of_monitors	645:23:20030:20048	17034	0	True				
ANR	17051	ParameterType	int		17034	0					
ANR	17052	Identifier	num_of_monitors		17034	1					
ANR	17053	CFGEntryNode	ENTRY		17034		True				
ANR	17054	CFGExitNode	EXIT		17034		True				
ANR	17055	Symbol	num_of_monitors		17034						
ANR	17056	Function	get_current_mon_config	651:0:20170:21575							
ANR	17057	FunctionDef	get_current_mon_config (struct vdagent_x11 * x11)		17056	0					
ANR	17058	CompoundStatement		652:0:20248:21575	17056	0					
ANR	17059	IdentifierDeclStatement	"int i , num_of_monitors = 0 ;"	653:4:20254:20280	17056	0	True				
ANR	17060	IdentifierDecl	i		17056	0					
ANR	17061	IdentifierDeclType	int		17056	0					
ANR	17062	Identifier	i		17056	1					
ANR	17063	IdentifierDecl	num_of_monitors = 0		17056	1					
ANR	17064	IdentifierDeclType	int		17056	0					
ANR	17065	Identifier	num_of_monitors		17056	1					
ANR	17066	AssignmentExpression	num_of_monitors = 0		17056	2		=			
ANR	17067	Identifier	num_of_monitors		17056	0					
ANR	17068	PrimaryExpression	0		17056	1					
ANR	17069	IdentifierDeclStatement	XRRModeInfo * mode ;	654:4:20286:20303	17056	1	True				
ANR	17070	IdentifierDecl	* mode		17056	0					
ANR	17071	IdentifierDeclType	XRRModeInfo *		17056	0					
ANR	17072	Identifier	mode		17056	1					
ANR	17073	IdentifierDeclStatement	XRRCrtcInfo * crtc ;	655:4:20309:20326	17056	2	True				
ANR	17074	IdentifierDecl	* crtc		17056	0					
ANR	17075	IdentifierDeclType	XRRCrtcInfo *		17056	0					
ANR	17076	Identifier	crtc		17056	1					
ANR	17077	IdentifierDeclStatement	XRRScreenResources * res = x11 -> randr . res ;	656:4:20332:20372	17056	3	True				
ANR	17078	IdentifierDecl	* res = x11 -> randr . res		17056	0					
ANR	17079	IdentifierDeclType	XRRScreenResources *		17056	0					
ANR	17080	Identifier	res		17056	1					
ANR	17081	AssignmentExpression	* res = x11 -> randr . res		17056	2		=			
ANR	17082	Identifier	res		17056	0					
ANR	17083	MemberAccess	x11 -> randr . res		17056	1					
ANR	17084	PtrMemberAccess	x11 -> randr		17056	0					
ANR	17085	Identifier	x11		17056	0					
ANR	17086	Identifier	randr		17056	1					
ANR	17087	Identifier	res		17056	1					
ANR	17088	IdentifierDeclStatement	VDAgentMonitorsConfig * mon_config ;	657:4:20378:20411	17056	4	True				
ANR	17089	IdentifierDecl	* mon_config		17056	0					
ANR	17090	IdentifierDeclType	VDAgentMonitorsConfig *		17056	0					
ANR	17091	Identifier	mon_config		17056	1					
ANR	17092	ExpressionStatement	"mon_config = calloc ( 1 , config_size ( res -> noutput ) )"	659:4:20418:20467	17056	5	True				
ANR	17093	AssignmentExpression	"mon_config = calloc ( 1 , config_size ( res -> noutput ) )"		17056	0		=			
ANR	17094	Identifier	mon_config		17056	0					
ANR	17095	CallExpression	"calloc ( 1 , config_size ( res -> noutput ) )"		17056	1					
ANR	17096	Callee	calloc		17056	0					
ANR	17097	Identifier	calloc		17056	0					
ANR	17098	ArgumentList	1		17056	1					
ANR	17099	Argument	1		17056	0					
ANR	17100	PrimaryExpression	1		17056	0					
ANR	17101	Argument	config_size ( res -> noutput )		17056	1					
ANR	17102	CallExpression	config_size ( res -> noutput )		17056	0					
ANR	17103	Callee	config_size		17056	0					
ANR	17104	Identifier	config_size		17056	0					
ANR	17105	ArgumentList	res -> noutput		17056	1					
ANR	17106	Argument	res -> noutput		17056	0					
ANR	17107	PtrMemberAccess	res -> noutput		17056	0					
ANR	17108	Identifier	res		17056	0					
ANR	17109	Identifier	noutput		17056	1					
ANR	17110	IfStatement	if ( ! mon_config )		17056	6					
ANR	17111	Condition	! mon_config	660:8:20477:20487	17056	0	True				
ANR	17112	UnaryOperationExpression	! mon_config		17056	0					
ANR	17113	UnaryOperator	!		17056	0					
ANR	17114	Identifier	mon_config		17056	1					
ANR	17115	CompoundStatement		9:21:241:241	17056	1					
ANR	17116	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory allocating current monitor config"" )"	661:8:20500:20566	17056	0	True				
ANR	17117	CallExpression	"syslog ( LOG_ERR , ""out of memory allocating current monitor config"" )"		17056	0					
ANR	17118	Callee	syslog		17056	0					
ANR	17119	Identifier	syslog		17056	0					
ANR	17120	ArgumentList	LOG_ERR		17056	1					
ANR	17121	Argument	LOG_ERR		17056	0					
ANR	17122	Identifier	LOG_ERR		17056	0					
ANR	17123	Argument	"""out of memory allocating current monitor config"""		17056	1					
ANR	17124	PrimaryExpression	"""out of memory allocating current monitor config"""		17056	0					
ANR	17125	ReturnStatement	return NULL ;	662:8:20576:20587	17056	1	True				
ANR	17126	Identifier	NULL		17056	0					
ANR	17127	ForStatement	for ( i = 0 ; i < res -> noutput ; i ++ )		17056	7					
ANR	17128	ForInit	i = 0 ;	665:9:20605:20611	17056	0	True				
ANR	17129	AssignmentExpression	i = 0		17056	0		=			
ANR	17130	Identifier	i		17056	0					
ANR	17131	PrimaryExpression	0		17056	1					
ANR	17132	Condition	i < res -> noutput	665:17:20613:20628	17056	1	True				
ANR	17133	RelationalExpression	i < res -> noutput		17056	0		<			
ANR	17134	Identifier	i		17056	0					
ANR	17135	PtrMemberAccess	res -> noutput		17056	1					
ANR	17136	Identifier	res		17056	0					
ANR	17137	Identifier	noutput		17056	1					
ANR	17138	PostIncDecOperationExpression	i ++	665:35:20631:20633	17056	2	True				
ANR	17139	Identifier	i		17056	0					
ANR	17140	IncDec	++		17056	1					
ANR	17141	CompoundStatement		14:40:387:387	17056	3					
ANR	17142	IfStatement	if ( x11 -> randr . outputs [ i ] -> ncrtc == 0 )		17056	0					
ANR	17143	Condition	x11 -> randr . outputs [ i ] -> ncrtc == 0	666:12:20650:20682	17056	0	True				
ANR	17144	EqualityExpression	x11 -> randr . outputs [ i ] -> ncrtc == 0		17056	0		==			
ANR	17145	PtrMemberAccess	x11 -> randr . outputs [ i ] -> ncrtc		17056	0					
ANR	17146	ArrayIndexing	x11 -> randr . outputs [ i ]		17056	0					
ANR	17147	MemberAccess	x11 -> randr . outputs		17056	0					
ANR	17148	PtrMemberAccess	x11 -> randr		17056	0					
ANR	17149	Identifier	x11		17056	0					
ANR	17150	Identifier	randr		17056	1					
ANR	17151	Identifier	outputs		17056	1					
ANR	17152	Identifier	i		17056	1					
ANR	17153	Identifier	ncrtc		17056	1					
ANR	17154	PrimaryExpression	0		17056	1					
ANR	17155	ContinueStatement	continue ;	667:12:20697:20705	17056	1	True				
ANR	17156	IfStatement	if ( x11 -> randr . outputs [ i ] -> ncrtc != 1 )		17056	1					
ANR	17157	Condition	x11 -> randr . outputs [ i ] -> ncrtc != 1	668:12:20769:20801	17056	0	True				
ANR	17158	EqualityExpression	x11 -> randr . outputs [ i ] -> ncrtc != 1		17056	0		!=			
ANR	17159	PtrMemberAccess	x11 -> randr . outputs [ i ] -> ncrtc		17056	0					
ANR	17160	ArrayIndexing	x11 -> randr . outputs [ i ]		17056	0					
ANR	17161	MemberAccess	x11 -> randr . outputs		17056	0					
ANR	17162	PtrMemberAccess	x11 -> randr		17056	0					
ANR	17163	Identifier	x11		17056	0					
ANR	17164	Identifier	randr		17056	1					
ANR	17165	Identifier	outputs		17056	1					
ANR	17166	Identifier	i		17056	1					
ANR	17167	Identifier	ncrtc		17056	1					
ANR	17168	PrimaryExpression	1		17056	1					
ANR	17169	GotoStatement	goto error ;	669:12:20816:20826	17056	1	True				
ANR	17170	Identifier	error		17056	0					
ANR	17171	ExpressionStatement	"crtc = crtc_from_id ( x11 , x11 -> randr . outputs [ i ] -> crtcs [ 0 ] )"	671:8:20837:20894	17056	2	True				
ANR	17172	AssignmentExpression	"crtc = crtc_from_id ( x11 , x11 -> randr . outputs [ i ] -> crtcs [ 0 ] )"		17056	0		=			
ANR	17173	Identifier	crtc		17056	0					
ANR	17174	CallExpression	"crtc_from_id ( x11 , x11 -> randr . outputs [ i ] -> crtcs [ 0 ] )"		17056	1					
ANR	17175	Callee	crtc_from_id		17056	0					
ANR	17176	Identifier	crtc_from_id		17056	0					
ANR	17177	ArgumentList	x11		17056	1					
ANR	17178	Argument	x11		17056	0					
ANR	17179	Identifier	x11		17056	0					
ANR	17180	Argument	x11 -> randr . outputs [ i ] -> crtcs [ 0 ]		17056	1					
ANR	17181	ArrayIndexing	x11 -> randr . outputs [ i ] -> crtcs [ 0 ]		17056	0					
ANR	17182	PtrMemberAccess	x11 -> randr . outputs [ i ] -> crtcs		17056	0					
ANR	17183	ArrayIndexing	x11 -> randr . outputs [ i ]		17056	0					
ANR	17184	MemberAccess	x11 -> randr . outputs		17056	0					
ANR	17185	PtrMemberAccess	x11 -> randr		17056	0					
ANR	17186	Identifier	x11		17056	0					
ANR	17187	Identifier	randr		17056	1					
ANR	17188	Identifier	outputs		17056	1					
ANR	17189	Identifier	i		17056	1					
ANR	17190	Identifier	crtcs		17056	1					
ANR	17191	PrimaryExpression	0		17056	1					
ANR	17192	IfStatement	if ( ! crtc )		17056	3					
ANR	17193	Condition	! crtc	672:12:20908:20912	17056	0	True				
ANR	17194	UnaryOperationExpression	! crtc		17056	0					
ANR	17195	UnaryOperator	!		17056	0					
ANR	17196	Identifier	crtc		17056	1					
ANR	17197	GotoStatement	goto error ;	673:12:20927:20937	17056	1	True				
ANR	17198	Identifier	error		17056	0					
ANR	17199	ExpressionStatement	"mode = mode_from_id ( x11 , crtc -> mode )"	675:8:20948:20984	17056	4	True				
ANR	17200	AssignmentExpression	"mode = mode_from_id ( x11 , crtc -> mode )"		17056	0		=			
ANR	17201	Identifier	mode		17056	0					
ANR	17202	CallExpression	"mode_from_id ( x11 , crtc -> mode )"		17056	1					
ANR	17203	Callee	mode_from_id		17056	0					
ANR	17204	Identifier	mode_from_id		17056	0					
ANR	17205	ArgumentList	x11		17056	1					
ANR	17206	Argument	x11		17056	0					
ANR	17207	Identifier	x11		17056	0					
ANR	17208	Argument	crtc -> mode		17056	1					
ANR	17209	PtrMemberAccess	crtc -> mode		17056	0					
ANR	17210	Identifier	crtc		17056	0					
ANR	17211	Identifier	mode		17056	1					
ANR	17212	IfStatement	if ( ! mode )		17056	5					
ANR	17213	Condition	! mode	676:12:20998:21002	17056	0	True				
ANR	17214	UnaryOperationExpression	! mode		17056	0					
ANR	17215	UnaryOperator	!		17056	0					
ANR	17216	Identifier	mode		17056	1					
ANR	17217	ContinueStatement	continue ;	677:12:21017:21025	17056	1	True				
ANR	17218	ExpressionStatement	mon_config -> monitors [ i ] . x = crtc -> x	679:8:21086:21126	17056	6	True				
ANR	17219	AssignmentExpression	mon_config -> monitors [ i ] . x = crtc -> x		17056	0		=			
ANR	17220	MemberAccess	mon_config -> monitors [ i ] . x		17056	0					
ANR	17221	ArrayIndexing	mon_config -> monitors [ i ]		17056	0					
ANR	17222	PtrMemberAccess	mon_config -> monitors		17056	0					
ANR	17223	Identifier	mon_config		17056	0					
ANR	17224	Identifier	monitors		17056	1					
ANR	17225	Identifier	i		17056	1					
ANR	17226	Identifier	x		17056	1					
ANR	17227	PtrMemberAccess	crtc -> x		17056	1					
ANR	17228	Identifier	crtc		17056	0					
ANR	17229	Identifier	x		17056	1					
ANR	17230	ExpressionStatement	mon_config -> monitors [ i ] . y = crtc -> y	680:8:21136:21176	17056	7	True				
ANR	17231	AssignmentExpression	mon_config -> monitors [ i ] . y = crtc -> y		17056	0		=			
ANR	17232	MemberAccess	mon_config -> monitors [ i ] . y		17056	0					
ANR	17233	ArrayIndexing	mon_config -> monitors [ i ]		17056	0					
ANR	17234	PtrMemberAccess	mon_config -> monitors		17056	0					
ANR	17235	Identifier	mon_config		17056	0					
ANR	17236	Identifier	monitors		17056	1					
ANR	17237	Identifier	i		17056	1					
ANR	17238	Identifier	y		17056	1					
ANR	17239	PtrMemberAccess	crtc -> y		17056	1					
ANR	17240	Identifier	crtc		17056	0					
ANR	17241	Identifier	y		17056	1					
ANR	17242	ExpressionStatement	mon_config -> monitors [ i ] . width = mode -> width	681:8:21186:21230	17056	8	True				
ANR	17243	AssignmentExpression	mon_config -> monitors [ i ] . width = mode -> width		17056	0		=			
ANR	17244	MemberAccess	mon_config -> monitors [ i ] . width		17056	0					
ANR	17245	ArrayIndexing	mon_config -> monitors [ i ]		17056	0					
ANR	17246	PtrMemberAccess	mon_config -> monitors		17056	0					
ANR	17247	Identifier	mon_config		17056	0					
ANR	17248	Identifier	monitors		17056	1					
ANR	17249	Identifier	i		17056	1					
ANR	17250	Identifier	width		17056	1					
ANR	17251	PtrMemberAccess	mode -> width		17056	1					
ANR	17252	Identifier	mode		17056	0					
ANR	17253	Identifier	width		17056	1					
ANR	17254	ExpressionStatement	mon_config -> monitors [ i ] . height = mode -> height	682:8:21240:21285	17056	9	True				
ANR	17255	AssignmentExpression	mon_config -> monitors [ i ] . height = mode -> height		17056	0		=			
ANR	17256	MemberAccess	mon_config -> monitors [ i ] . height		17056	0					
ANR	17257	ArrayIndexing	mon_config -> monitors [ i ]		17056	0					
ANR	17258	PtrMemberAccess	mon_config -> monitors		17056	0					
ANR	17259	Identifier	mon_config		17056	0					
ANR	17260	Identifier	monitors		17056	1					
ANR	17261	Identifier	i		17056	1					
ANR	17262	Identifier	height		17056	1					
ANR	17263	PtrMemberAccess	mode -> height		17056	1					
ANR	17264	Identifier	mode		17056	0					
ANR	17265	Identifier	height		17056	1					
ANR	17266	ExpressionStatement	num_of_monitors = i + 1	683:8:21295:21318	17056	10	True				
ANR	17267	AssignmentExpression	num_of_monitors = i + 1		17056	0		=			
ANR	17268	Identifier	num_of_monitors		17056	0					
ANR	17269	AdditiveExpression	i + 1		17056	1		+			
ANR	17270	Identifier	i		17056	0					
ANR	17271	PrimaryExpression	1		17056	1					
ANR	17272	ExpressionStatement	mon_config -> num_of_monitors = num_of_monitors	685:4:21330:21375	17056	8	True				
ANR	17273	AssignmentExpression	mon_config -> num_of_monitors = num_of_monitors		17056	0		=			
ANR	17274	PtrMemberAccess	mon_config -> num_of_monitors		17056	0					
ANR	17275	Identifier	mon_config		17056	0					
ANR	17276	Identifier	num_of_monitors		17056	1					
ANR	17277	Identifier	num_of_monitors		17056	1					
ANR	17278	ExpressionStatement	mon_config -> flags = VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS	686:4:21381:21438	17056	9	True				
ANR	17279	AssignmentExpression	mon_config -> flags = VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS		17056	0		=			
ANR	17280	PtrMemberAccess	mon_config -> flags		17056	0					
ANR	17281	Identifier	mon_config		17056	0					
ANR	17282	Identifier	flags		17056	1					
ANR	17283	Identifier	VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS		17056	1					
ANR	17284	ReturnStatement	return mon_config ;	687:4:21444:21461	17056	10	True				
ANR	17285	Identifier	mon_config		17056	0					
ANR	17286	Label	error :	689:0:21464:21469	17056	11	True				
ANR	17287	Identifier	error		17056	0					
ANR	17288	ExpressionStatement	"syslog ( LOG_ERR , ""error: inconsistent or stale data from X"" )"	690:4:21475:21534	17056	12	True				
ANR	17289	CallExpression	"syslog ( LOG_ERR , ""error: inconsistent or stale data from X"" )"		17056	0					
ANR	17290	Callee	syslog		17056	0					
ANR	17291	Identifier	syslog		17056	0					
ANR	17292	ArgumentList	LOG_ERR		17056	1					
ANR	17293	Argument	LOG_ERR		17056	0					
ANR	17294	Identifier	LOG_ERR		17056	0					
ANR	17295	Argument	"""error: inconsistent or stale data from X"""		17056	1					
ANR	17296	PrimaryExpression	"""error: inconsistent or stale data from X"""		17056	0					
ANR	17297	ExpressionStatement	free ( mon_config )	691:4:21540:21556	17056	13	True				
ANR	17298	CallExpression	free ( mon_config )		17056	0					
ANR	17299	Callee	free		17056	0					
ANR	17300	Identifier	free		17056	0					
ANR	17301	ArgumentList	mon_config		17056	1					
ANR	17302	Argument	mon_config		17056	0					
ANR	17303	Identifier	mon_config		17056	0					
ANR	17304	ReturnStatement	return NULL ;	692:4:21562:21573	17056	14	True				
ANR	17305	Identifier	NULL		17056	0					
ANR	17306	ReturnType	static VDAgentMonitorsConfig *		17056	1					
ANR	17307	Identifier	get_current_mon_config		17056	2					
ANR	17308	ParameterList	struct vdagent_x11 * x11		17056	3					
ANR	17309	Parameter	struct vdagent_x11 * x11	651:53:20223:20245	17056	0	True				
ANR	17310	ParameterType	struct vdagent_x11 *		17056	0					
ANR	17311	Identifier	x11		17056	1					
ANR	17312	CFGEntryNode	ENTRY		17056		True				
ANR	17313	CFGExitNode	EXIT		17056		True				
ANR	17314	Symbol	mode		17056						
ANR	17315	Symbol	* x11 -> randr . outputs [ i ] -> crtcs		17056						
ANR	17316	Symbol	* * * * x11		17056						
ANR	17317	Symbol	mon_config -> monitors		17056						
ANR	17318	Symbol	* * * x11		17056						
ANR	17319	Symbol	* mon_config		17056						
ANR	17320	Symbol	mon_config -> num_of_monitors		17056						
ANR	17321	Symbol	LOG_ERR		17056						
ANR	17322	Symbol	x11		17056						
ANR	17323	Symbol	crtc -> mode		17056						
ANR	17324	Symbol	num_of_monitors		17056						
ANR	17325	Symbol	* * x11 -> randr		17056						
ANR	17326	Symbol	* * mon_config		17056						
ANR	17327	Symbol	res		17056						
ANR	17328	Symbol	x11 -> randr . outputs [ i ] -> crtcs		17056						
ANR	17329	Symbol	* * i		17056						
ANR	17330	Symbol	NULL		17056						
ANR	17331	Symbol	* * * x11 -> randr . outputs		17056						
ANR	17332	Symbol	mode -> height		17056						
ANR	17333	Symbol	mode -> width		17056						
ANR	17334	Symbol	mode_from_id		17056						
ANR	17335	Symbol	* x11 -> randr		17056						
ANR	17336	Symbol	* mon_config -> monitors		17056						
ANR	17337	Symbol	crtc		17056						
ANR	17338	Symbol	* * * x11 -> randr		17056						
ANR	17339	Symbol	mon_config		17056						
ANR	17340	Symbol	* * * i		17056						
ANR	17341	Symbol	x11 -> randr . res		17056						
ANR	17342	Symbol	* x11		17056						
ANR	17343	Symbol	x11 -> randr . outputs [ i ] -> ncrtc		17056						
ANR	17344	Symbol	crtc_from_id		17056						
ANR	17345	Symbol	x11 -> randr		17056						
ANR	17346	Symbol	* crtc		17056						
ANR	17347	Symbol	* res		17056						
ANR	17348	Symbol	calloc		17056						
ANR	17349	Symbol	VD_AGENT_CONFIG_MONITORS_FLAG_USE_POS		17056						
ANR	17350	Symbol	mon_config -> monitors [ i ] . x		17056						
ANR	17351	Symbol	mon_config -> monitors [ i ] . y		17056						
ANR	17352	Symbol	* x11 -> randr . outputs		17056						
ANR	17353	Symbol	* * x11 -> randr . outputs		17056						
ANR	17354	Symbol	config_size		17056						
ANR	17355	Symbol	crtc -> y		17056						
ANR	17356	Symbol	crtc -> x		17056						
ANR	17357	Symbol	i		17056						
ANR	17358	Symbol	mon_config -> monitors [ i ] . width		17056						
ANR	17359	Symbol	* * x11		17056						
ANR	17360	Symbol	mon_config -> flags		17056						
ANR	17361	Symbol	* i		17056						
ANR	17362	Symbol	mon_config -> monitors [ i ] . height		17056						
ANR	17363	Symbol	res -> noutput		17056						
ANR	17364	Symbol	* mode		17056						
ANR	17365	Symbol	x11 -> randr . outputs		17056						
ANR	17366	Function	dump_monitors_config	695:0:21578:22176							
ANR	17367	FunctionDef	"dump_monitors_config (struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , const char * prefix)"		17366	0					
ANR	17368	CompoundStatement		698:0:21757:22176	17366	0					
ANR	17369	IdentifierDeclStatement	int i ;	699:4:21763:21768	17366	0	True				
ANR	17370	IdentifierDecl	i		17366	0					
ANR	17371	IdentifierDeclType	int		17366	0					
ANR	17372	Identifier	i		17366	1					
ANR	17373	IdentifierDeclStatement	VDAgentMonConfig * m ;	700:4:21774:21793	17366	1	True				
ANR	17374	IdentifierDecl	* m		17366	0					
ANR	17375	IdentifierDeclType	VDAgentMonConfig *		17366	0					
ANR	17376	Identifier	m		17366	1					
ANR	17377	ExpressionStatement	"syslog ( LOG_DEBUG , ""%s: %d, %x"" , prefix , mon_config -> num_of_monitors , mon_config -> flags )"	702:4:21800:21898	17366	2	True				
ANR	17378	CallExpression	"syslog ( LOG_DEBUG , ""%s: %d, %x"" , prefix , mon_config -> num_of_monitors , mon_config -> flags )"		17366	0					
ANR	17379	Callee	syslog		17366	0					
ANR	17380	Identifier	syslog		17366	0					
ANR	17381	ArgumentList	LOG_DEBUG		17366	1					
ANR	17382	Argument	LOG_DEBUG		17366	0					
ANR	17383	Identifier	LOG_DEBUG		17366	0					
ANR	17384	Argument	"""%s: %d, %x"""		17366	1					
ANR	17385	PrimaryExpression	"""%s: %d, %x"""		17366	0					
ANR	17386	Argument	prefix		17366	2					
ANR	17387	Identifier	prefix		17366	0					
ANR	17388	Argument	mon_config -> num_of_monitors		17366	3					
ANR	17389	PtrMemberAccess	mon_config -> num_of_monitors		17366	0					
ANR	17390	Identifier	mon_config		17366	0					
ANR	17391	Identifier	num_of_monitors		17366	1					
ANR	17392	Argument	mon_config -> flags		17366	4					
ANR	17393	PtrMemberAccess	mon_config -> flags		17366	0					
ANR	17394	Identifier	mon_config		17366	0					
ANR	17395	Identifier	flags		17366	1					
ANR	17396	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		17366	3					
ANR	17397	ForInit	i = 0 ;	704:9:21909:21915	17366	0	True				
ANR	17398	AssignmentExpression	i = 0		17366	0		=			
ANR	17399	Identifier	i		17366	0					
ANR	17400	PrimaryExpression	0		17366	1					
ANR	17401	Condition	i < mon_config -> num_of_monitors	704:17:21917:21947	17366	1	True				
ANR	17402	RelationalExpression	i < mon_config -> num_of_monitors		17366	0		<			
ANR	17403	Identifier	i		17366	0					
ANR	17404	PtrMemberAccess	mon_config -> num_of_monitors		17366	1					
ANR	17405	Identifier	mon_config		17366	0					
ANR	17406	Identifier	num_of_monitors		17366	1					
ANR	17407	UnaryExpression	++ i	704:50:21950:21952	17366	2	True				
ANR	17408	IncDec	++		17366	0					
ANR	17409	Identifier	i		17366	1					
ANR	17410	CompoundStatement		7:55:197:197	17366	3					
ANR	17411	ExpressionStatement	m = & mon_config -> monitors [ i ]	705:8:21965:21993	17366	0	True				
ANR	17412	AssignmentExpression	m = & mon_config -> monitors [ i ]		17366	0		=			
ANR	17413	Identifier	m		17366	0					
ANR	17414	UnaryOperationExpression	& mon_config -> monitors [ i ]		17366	1					
ANR	17415	UnaryOperator	&		17366	0					
ANR	17416	ArrayIndexing	mon_config -> monitors [ i ]		17366	1					
ANR	17417	PtrMemberAccess	mon_config -> monitors		17366	0					
ANR	17418	Identifier	mon_config		17366	0					
ANR	17419	Identifier	monitors		17366	1					
ANR	17420	Identifier	i		17366	1					
ANR	17421	IfStatement	if ( ! monitor_enabled ( m ) )		17366	1					
ANR	17422	Condition	! monitor_enabled ( m )	706:12:22007:22025	17366	0	True				
ANR	17423	UnaryOperationExpression	! monitor_enabled ( m )		17366	0					
ANR	17424	UnaryOperator	!		17366	0					
ANR	17425	CallExpression	monitor_enabled ( m )		17366	1					
ANR	17426	Callee	monitor_enabled		17366	0					
ANR	17427	Identifier	monitor_enabled		17366	0					
ANR	17428	ArgumentList	m		17366	1					
ANR	17429	Argument	m		17366	0					
ANR	17430	Identifier	m		17366	0					
ANR	17431	ContinueStatement	continue ;	707:12:22040:22048	17366	1	True				
ANR	17432	ExpressionStatement	"syslog ( LOG_DEBUG , ""received monitor %d config %dx%d+%d+%d"" , i , m -> width , m -> height , m -> x , m -> y )"	708:8:22058:22168	17366	2	True				
ANR	17433	CallExpression	"syslog ( LOG_DEBUG , ""received monitor %d config %dx%d+%d+%d"" , i , m -> width , m -> height , m -> x , m -> y )"		17366	0					
ANR	17434	Callee	syslog		17366	0					
ANR	17435	Identifier	syslog		17366	0					
ANR	17436	ArgumentList	LOG_DEBUG		17366	1					
ANR	17437	Argument	LOG_DEBUG		17366	0					
ANR	17438	Identifier	LOG_DEBUG		17366	0					
ANR	17439	Argument	"""received monitor %d config %dx%d+%d+%d"""		17366	1					
ANR	17440	PrimaryExpression	"""received monitor %d config %dx%d+%d+%d"""		17366	0					
ANR	17441	Argument	i		17366	2					
ANR	17442	Identifier	i		17366	0					
ANR	17443	Argument	m -> width		17366	3					
ANR	17444	PtrMemberAccess	m -> width		17366	0					
ANR	17445	Identifier	m		17366	0					
ANR	17446	Identifier	width		17366	1					
ANR	17447	Argument	m -> height		17366	4					
ANR	17448	PtrMemberAccess	m -> height		17366	0					
ANR	17449	Identifier	m		17366	0					
ANR	17450	Identifier	height		17366	1					
ANR	17451	Argument	m -> x		17366	5					
ANR	17452	PtrMemberAccess	m -> x		17366	0					
ANR	17453	Identifier	m		17366	0					
ANR	17454	Identifier	x		17366	1					
ANR	17455	Argument	m -> y		17366	6					
ANR	17456	PtrMemberAccess	m -> y		17366	0					
ANR	17457	Identifier	m		17366	0					
ANR	17458	Identifier	y		17366	1					
ANR	17459	ReturnType	static void		17366	1					
ANR	17460	Identifier	dump_monitors_config		17366	2					
ANR	17461	ParameterList	"struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , const char * prefix"		17366	3					
ANR	17462	Parameter	struct vdagent_x11 * x11	695:33:21611:21633	17366	0	True				
ANR	17463	ParameterType	struct vdagent_x11 *		17366	0					
ANR	17464	Identifier	x11		17366	1					
ANR	17465	Parameter	VDAgentMonitorsConfig * mon_config	696:33:21669:21701	17366	1	True				
ANR	17466	ParameterType	VDAgentMonitorsConfig *		17366	0					
ANR	17467	Identifier	mon_config		17366	1					
ANR	17468	Parameter	const char * prefix	697:33:21737:21754	17366	2	True				
ANR	17469	ParameterType	const char *		17366	0					
ANR	17470	Identifier	prefix		17366	1					
ANR	17471	CFGEntryNode	ENTRY		17366		True				
ANR	17472	CFGExitNode	EXIT		17366		True				
ANR	17473	Symbol	m -> x		17366						
ANR	17474	Symbol	m -> y		17366						
ANR	17475	Symbol	prefix		17366						
ANR	17476	Symbol	i		17366						
ANR	17477	Symbol	m -> width		17366						
ANR	17478	Symbol	m		17366						
ANR	17479	Symbol	mon_config -> flags		17366						
ANR	17480	Symbol	monitor_enabled		17366						
ANR	17481	Symbol	mon_config -> monitors		17366						
ANR	17482	Symbol	mon_config -> num_of_monitors		17366						
ANR	17483	Symbol	* mon_config		17366						
ANR	17484	Symbol	mon_config		17366						
ANR	17485	Symbol	* m		17366						
ANR	17486	Symbol	x11		17366						
ANR	17487	Symbol	LOG_DEBUG		17366						
ANR	17488	Symbol	m -> height		17366						
ANR	17489	Function	vdagent_x11_set_monitor_config	723:0:22499:28622							
ANR	17490	FunctionDef	"vdagent_x11_set_monitor_config (struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int fallback)"		17489	0					
ANR	17491	CompoundStatement		726:0:22681:28622	17489	0					
ANR	17492	IdentifierDeclStatement	"int primary_w , primary_h ;"	727:4:22687:22711	17489	0	True				
ANR	17493	IdentifierDecl	primary_w		17489	0					
ANR	17494	IdentifierDeclType	int		17489	0					
ANR	17495	Identifier	primary_w		17489	1					
ANR	17496	IdentifierDecl	primary_h		17489	1					
ANR	17497	IdentifierDeclType	int		17489	0					
ANR	17498	Identifier	primary_h		17489	1					
ANR	17499	IdentifierDeclStatement	"int i , real_num_of_monitors = 0 ;"	728:4:22717:22748	17489	1	True				
ANR	17500	IdentifierDecl	i		17489	0					
ANR	17501	IdentifierDeclType	int		17489	0					
ANR	17502	Identifier	i		17489	1					
ANR	17503	IdentifierDecl	real_num_of_monitors = 0		17489	1					
ANR	17504	IdentifierDeclType	int		17489	0					
ANR	17505	Identifier	real_num_of_monitors		17489	1					
ANR	17506	AssignmentExpression	real_num_of_monitors = 0		17489	2		=			
ANR	17507	Identifier	real_num_of_monitors		17489	0					
ANR	17508	PrimaryExpression	0		17489	1					
ANR	17509	IdentifierDeclStatement	VDAgentMonitorsConfig * curr = NULL ;	729:4:22754:22788	17489	2	True				
ANR	17510	IdentifierDecl	* curr = NULL		17489	0					
ANR	17511	IdentifierDeclType	VDAgentMonitorsConfig *		17489	0					
ANR	17512	Identifier	curr		17489	1					
ANR	17513	AssignmentExpression	* curr = NULL		17489	2		=			
ANR	17514	Identifier	NULL		17489	0					
ANR	17515	Identifier	NULL		17489	1					
ANR	17516	IfStatement	if ( ! x11 -> has_xrandr )		17489	3					
ANR	17517	Condition	! x11 -> has_xrandr	731:8:22799:22814	17489	0	True				
ANR	17518	UnaryOperationExpression	! x11 -> has_xrandr		17489	0					
ANR	17519	UnaryOperator	!		17489	0					
ANR	17520	PtrMemberAccess	x11 -> has_xrandr		17489	1					
ANR	17521	Identifier	x11		17489	0					
ANR	17522	Identifier	has_xrandr		17489	1					
ANR	17523	GotoStatement	goto exit ;	732:8:22825:22834	17489	1	True				
ANR	17524	Identifier	exit		17489	0					
ANR	17525	IfStatement	if ( enabled_monitors ( mon_config ) < 1 )		17489	4					
ANR	17526	Condition	enabled_monitors ( mon_config ) < 1	734:8:22845:22876	17489	0	True				
ANR	17527	RelationalExpression	enabled_monitors ( mon_config ) < 1		17489	0		<			
ANR	17528	CallExpression	enabled_monitors ( mon_config )		17489	0					
ANR	17529	Callee	enabled_monitors		17489	0					
ANR	17530	Identifier	enabled_monitors		17489	0					
ANR	17531	ArgumentList	mon_config		17489	1					
ANR	17532	Argument	mon_config		17489	0					
ANR	17533	Identifier	mon_config		17489	0					
ANR	17534	PrimaryExpression	1		17489	1					
ANR	17535	CompoundStatement		9:42:197:197	17489	1					
ANR	17536	ExpressionStatement	"syslog ( LOG_ERR , ""client sent config with all monitors disabled"" )"	735:8:22889:22953	17489	0	True				
ANR	17537	CallExpression	"syslog ( LOG_ERR , ""client sent config with all monitors disabled"" )"		17489	0					
ANR	17538	Callee	syslog		17489	0					
ANR	17539	Identifier	syslog		17489	0					
ANR	17540	ArgumentList	LOG_ERR		17489	1					
ANR	17541	Argument	LOG_ERR		17489	0					
ANR	17542	Identifier	LOG_ERR		17489	0					
ANR	17543	Argument	"""client sent config with all monitors disabled"""		17489	1					
ANR	17544	PrimaryExpression	"""client sent config with all monitors disabled"""		17489	0					
ANR	17545	GotoStatement	goto exit ;	736:8:22963:22972	17489	1	True				
ANR	17546	Identifier	exit		17489	0					
ANR	17547	IfStatement	if ( x11 -> debug )		17489	5					
ANR	17548	Condition	x11 -> debug	739:8:22989:22998	17489	0	True				
ANR	17549	PtrMemberAccess	x11 -> debug		17489	0					
ANR	17550	Identifier	x11		17489	0					
ANR	17551	Identifier	debug		17489	1					
ANR	17552	CompoundStatement		14:20:319:319	17489	1					
ANR	17553	ExpressionStatement	"dump_monitors_config ( x11 , mon_config , ""from guest"" )"	740:8:23011:23062	17489	0	True				
ANR	17554	CallExpression	"dump_monitors_config ( x11 , mon_config , ""from guest"" )"		17489	0					
ANR	17555	Callee	dump_monitors_config		17489	0					
ANR	17556	Identifier	dump_monitors_config		17489	0					
ANR	17557	ArgumentList	x11		17489	1					
ANR	17558	Argument	x11		17489	0					
ANR	17559	Identifier	x11		17489	0					
ANR	17560	Argument	mon_config		17489	1					
ANR	17561	Identifier	mon_config		17489	0					
ANR	17562	Argument	"""from guest"""		17489	2					
ANR	17563	PrimaryExpression	"""from guest"""		17489	0					
ANR	17564	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; i ++ )		17489	6					
ANR	17565	ForInit	i = 0 ;	743:9:23080:23085	17489	0	True				
ANR	17566	AssignmentExpression	i = 0		17489	0		=			
ANR	17567	Identifier	i		17489	0					
ANR	17568	PrimaryExpression	0		17489	1					
ANR	17569	Condition	i < mon_config -> num_of_monitors	743:16:23087:23117	17489	1	True				
ANR	17570	RelationalExpression	i < mon_config -> num_of_monitors		17489	0		<			
ANR	17571	Identifier	i		17489	0					
ANR	17572	PtrMemberAccess	mon_config -> num_of_monitors		17489	1					
ANR	17573	Identifier	mon_config		17489	0					
ANR	17574	Identifier	num_of_monitors		17489	1					
ANR	17575	PostIncDecOperationExpression	i ++	743:49:23120:23122	17489	2	True				
ANR	17576	Identifier	i		17489	0					
ANR	17577	IncDec	++		17489	1					
ANR	17578	CompoundStatement		18:54:443:443	17489	3					
ANR	17579	IfStatement	if ( monitor_enabled ( & mon_config -> monitors [ i ] ) )		17489	0					
ANR	17580	Condition	monitor_enabled ( & mon_config -> monitors [ i ] )	744:12:23139:23179	17489	0	True				
ANR	17581	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		17489	0					
ANR	17582	Callee	monitor_enabled		17489	0					
ANR	17583	Identifier	monitor_enabled		17489	0					
ANR	17584	ArgumentList	& mon_config -> monitors [ i ]		17489	1					
ANR	17585	Argument	& mon_config -> monitors [ i ]		17489	0					
ANR	17586	UnaryOperationExpression	& mon_config -> monitors [ i ]		17489	0					
ANR	17587	UnaryOperator	&		17489	0					
ANR	17588	ArrayIndexing	mon_config -> monitors [ i ]		17489	1					
ANR	17589	PtrMemberAccess	mon_config -> monitors		17489	0					
ANR	17590	Identifier	mon_config		17489	0					
ANR	17591	Identifier	monitors		17489	1					
ANR	17592	Identifier	i		17489	1					
ANR	17593	ExpressionStatement	real_num_of_monitors = i + 1	745:12:23194:23222	17489	1	True				
ANR	17594	AssignmentExpression	real_num_of_monitors = i + 1		17489	0		=			
ANR	17595	Identifier	real_num_of_monitors		17489	0					
ANR	17596	AdditiveExpression	i + 1		17489	1		+			
ANR	17597	Identifier	i		17489	0					
ANR	17598	PrimaryExpression	1		17489	1					
ANR	17599	ExpressionStatement	mon_config -> num_of_monitors = real_num_of_monitors	747:4:23234:23284	17489	7	True				
ANR	17600	AssignmentExpression	mon_config -> num_of_monitors = real_num_of_monitors		17489	0		=			
ANR	17601	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	17602	Identifier	mon_config		17489	0					
ANR	17603	Identifier	num_of_monitors		17489	1					
ANR	17604	Identifier	real_num_of_monitors		17489	1					
ANR	17605	ExpressionStatement	"update_randr_res ( x11 , 0 )"	749:4:23291:23315	17489	8	True				
ANR	17606	CallExpression	"update_randr_res ( x11 , 0 )"		17489	0					
ANR	17607	Callee	update_randr_res		17489	0					
ANR	17608	Identifier	update_randr_res		17489	0					
ANR	17609	ArgumentList	x11		17489	1					
ANR	17610	Argument	x11		17489	0					
ANR	17611	Identifier	x11		17489	0					
ANR	17612	Argument	0		17489	1					
ANR	17613	PrimaryExpression	0		17489	0					
ANR	17614	IfStatement	if ( mon_config -> num_of_monitors > x11 -> randr . res -> noutput )		17489	9					
ANR	17615	Condition	mon_config -> num_of_monitors > x11 -> randr . res -> noutput	750:8:23325:23377	17489	0	True				
ANR	17616	RelationalExpression	mon_config -> num_of_monitors > x11 -> randr . res -> noutput		17489	0		>			
ANR	17617	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	17618	Identifier	mon_config		17489	0					
ANR	17619	Identifier	num_of_monitors		17489	1					
ANR	17620	PtrMemberAccess	x11 -> randr . res -> noutput		17489	1					
ANR	17621	MemberAccess	x11 -> randr . res		17489	0					
ANR	17622	PtrMemberAccess	x11 -> randr		17489	0					
ANR	17623	Identifier	x11		17489	0					
ANR	17624	Identifier	randr		17489	1					
ANR	17625	Identifier	res		17489	1					
ANR	17626	Identifier	noutput		17489	1					
ANR	17627	CompoundStatement		25:63:698:698	17489	1					
ANR	17628	ExpressionStatement	"syslog ( LOG_WARNING , ""warning unexpected client request: #mon %d > driver output %d"" , mon_config -> num_of_monitors , x11 -> randr . res -> noutput )"	751:8:23390:23558	17489	0	True				
ANR	17629	CallExpression	"syslog ( LOG_WARNING , ""warning unexpected client request: #mon %d > driver output %d"" , mon_config -> num_of_monitors , x11 -> randr . res -> noutput )"		17489	0					
ANR	17630	Callee	syslog		17489	0					
ANR	17631	Identifier	syslog		17489	0					
ANR	17632	ArgumentList	LOG_WARNING		17489	1					
ANR	17633	Argument	LOG_WARNING		17489	0					
ANR	17634	Identifier	LOG_WARNING		17489	0					
ANR	17635	Argument	"""warning unexpected client request: #mon %d > driver output %d"""		17489	1					
ANR	17636	PrimaryExpression	"""warning unexpected client request: #mon %d > driver output %d"""		17489	0					
ANR	17637	Argument	mon_config -> num_of_monitors		17489	2					
ANR	17638	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	17639	Identifier	mon_config		17489	0					
ANR	17640	Identifier	num_of_monitors		17489	1					
ANR	17641	Argument	x11 -> randr . res -> noutput		17489	3					
ANR	17642	PtrMemberAccess	x11 -> randr . res -> noutput		17489	0					
ANR	17643	MemberAccess	x11 -> randr . res		17489	0					
ANR	17644	PtrMemberAccess	x11 -> randr		17489	0					
ANR	17645	Identifier	x11		17489	0					
ANR	17646	Identifier	randr		17489	1					
ANR	17647	Identifier	res		17489	1					
ANR	17648	Identifier	noutput		17489	1					
ANR	17649	ExpressionStatement	mon_config -> num_of_monitors = x11 -> randr . res -> noutput	754:8:23568:23621	17489	1	True				
ANR	17650	AssignmentExpression	mon_config -> num_of_monitors = x11 -> randr . res -> noutput		17489	0		=			
ANR	17651	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	17652	Identifier	mon_config		17489	0					
ANR	17653	Identifier	num_of_monitors		17489	1					
ANR	17654	PtrMemberAccess	x11 -> randr . res -> noutput		17489	1					
ANR	17655	MemberAccess	x11 -> randr . res		17489	0					
ANR	17656	PtrMemberAccess	x11 -> randr		17489	0					
ANR	17657	Identifier	x11		17489	0					
ANR	17658	Identifier	randr		17489	1					
ANR	17659	Identifier	res		17489	1					
ANR	17660	Identifier	noutput		17489	1					
ANR	17661	IfStatement	if ( mon_config -> num_of_monitors > MONITOR_SIZE_COUNT )		17489	10					
ANR	17662	Condition	mon_config -> num_of_monitors > MONITOR_SIZE_COUNT	757:8:23638:23685	17489	0	True				
ANR	17663	RelationalExpression	mon_config -> num_of_monitors > MONITOR_SIZE_COUNT		17489	0		>			
ANR	17664	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	17665	Identifier	mon_config		17489	0					
ANR	17666	Identifier	num_of_monitors		17489	1					
ANR	17667	Identifier	MONITOR_SIZE_COUNT		17489	1					
ANR	17668	CompoundStatement		32:58:1006:1006	17489	1					
ANR	17669	ExpressionStatement	"syslog ( LOG_WARNING , ""warning: client send %d monitors, capping at %d"" , mon_config -> num_of_monitors , MONITOR_SIZE_COUNT )"	758:8:23698:23832	17489	0	True				
ANR	17670	CallExpression	"syslog ( LOG_WARNING , ""warning: client send %d monitors, capping at %d"" , mon_config -> num_of_monitors , MONITOR_SIZE_COUNT )"		17489	0					
ANR	17671	Callee	syslog		17489	0					
ANR	17672	Identifier	syslog		17489	0					
ANR	17673	ArgumentList	LOG_WARNING		17489	1					
ANR	17674	Argument	LOG_WARNING		17489	0					
ANR	17675	Identifier	LOG_WARNING		17489	0					
ANR	17676	Argument	"""warning: client send %d monitors, capping at %d"""		17489	1					
ANR	17677	PrimaryExpression	"""warning: client send %d monitors, capping at %d"""		17489	0					
ANR	17678	Argument	mon_config -> num_of_monitors		17489	2					
ANR	17679	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	17680	Identifier	mon_config		17489	0					
ANR	17681	Identifier	num_of_monitors		17489	1					
ANR	17682	Argument	MONITOR_SIZE_COUNT		17489	3					
ANR	17683	Identifier	MONITOR_SIZE_COUNT		17489	0					
ANR	17684	ExpressionStatement	mon_config -> num_of_monitors = MONITOR_SIZE_COUNT	760:8:23842:23890	17489	1	True				
ANR	17685	AssignmentExpression	mon_config -> num_of_monitors = MONITOR_SIZE_COUNT		17489	0		=			
ANR	17686	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	17687	Identifier	mon_config		17489	0					
ANR	17688	Identifier	num_of_monitors		17489	1					
ANR	17689	Identifier	MONITOR_SIZE_COUNT		17489	1					
ANR	17690	ExpressionStatement	"zero_base_monitors ( x11 , mon_config , & primary_w , & primary_h )"	763:4:23903:23962	17489	11	True				
ANR	17691	CallExpression	"zero_base_monitors ( x11 , mon_config , & primary_w , & primary_h )"		17489	0					
ANR	17692	Callee	zero_base_monitors		17489	0					
ANR	17693	Identifier	zero_base_monitors		17489	0					
ANR	17694	ArgumentList	x11		17489	1					
ANR	17695	Argument	x11		17489	0					
ANR	17696	Identifier	x11		17489	0					
ANR	17697	Argument	mon_config		17489	1					
ANR	17698	Identifier	mon_config		17489	0					
ANR	17699	Argument	& primary_w		17489	2					
ANR	17700	UnaryOperationExpression	& primary_w		17489	0					
ANR	17701	UnaryOperator	&		17489	0					
ANR	17702	Identifier	primary_w		17489	1					
ANR	17703	Argument	& primary_h		17489	3					
ANR	17704	UnaryOperationExpression	& primary_h		17489	0					
ANR	17705	UnaryOperator	&		17489	0					
ANR	17706	Identifier	primary_h		17489	1					
ANR	17707	ExpressionStatement	"constrain_to_screen ( x11 , & primary_w , & primary_h )"	765:4:23969:24017	17489	12	True				
ANR	17708	CallExpression	"constrain_to_screen ( x11 , & primary_w , & primary_h )"		17489	0					
ANR	17709	Callee	constrain_to_screen		17489	0					
ANR	17710	Identifier	constrain_to_screen		17489	0					
ANR	17711	ArgumentList	x11		17489	1					
ANR	17712	Argument	x11		17489	0					
ANR	17713	Identifier	x11		17489	0					
ANR	17714	Argument	& primary_w		17489	1					
ANR	17715	UnaryOperationExpression	& primary_w		17489	0					
ANR	17716	UnaryOperator	&		17489	0					
ANR	17717	Identifier	primary_w		17489	1					
ANR	17718	Argument	& primary_h		17489	2					
ANR	17719	UnaryOperationExpression	& primary_h		17489	0					
ANR	17720	UnaryOperator	&		17489	0					
ANR	17721	Identifier	primary_h		17489	1					
ANR	17722	IfStatement	if ( x11 -> debug )		17489	13					
ANR	17723	Condition	x11 -> debug	767:8:24028:24037	17489	0	True				
ANR	17724	PtrMemberAccess	x11 -> debug		17489	0					
ANR	17725	Identifier	x11		17489	0					
ANR	17726	Identifier	debug		17489	1					
ANR	17727	CompoundStatement		42:20:1358:1358	17489	1					
ANR	17728	ExpressionStatement	"dump_monitors_config ( x11 , mon_config , ""after zeroing"" )"	768:8:24050:24104	17489	0	True				
ANR	17729	CallExpression	"dump_monitors_config ( x11 , mon_config , ""after zeroing"" )"		17489	0					
ANR	17730	Callee	dump_monitors_config		17489	0					
ANR	17731	Identifier	dump_monitors_config		17489	0					
ANR	17732	ArgumentList	x11		17489	1					
ANR	17733	Argument	x11		17489	0					
ANR	17734	Identifier	x11		17489	0					
ANR	17735	Argument	mon_config		17489	1					
ANR	17736	Identifier	mon_config		17489	0					
ANR	17737	Argument	"""after zeroing"""		17489	2					
ANR	17738	PrimaryExpression	"""after zeroing"""		17489	0					
ANR	17739	ExpressionStatement	curr = get_current_mon_config ( x11 )	771:4:24117:24151	17489	14	True				
ANR	17740	AssignmentExpression	curr = get_current_mon_config ( x11 )		17489	0		=			
ANR	17741	Identifier	curr		17489	0					
ANR	17742	CallExpression	get_current_mon_config ( x11 )		17489	1					
ANR	17743	Callee	get_current_mon_config		17489	0					
ANR	17744	Identifier	get_current_mon_config		17489	0					
ANR	17745	ArgumentList	x11		17489	1					
ANR	17746	Argument	x11		17489	0					
ANR	17747	Identifier	x11		17489	0					
ANR	17748	IfStatement	if ( ! curr )		17489	15					
ANR	17749	Condition	! curr	772:8:24161:24165	17489	0	True				
ANR	17750	UnaryOperationExpression	! curr		17489	0					
ANR	17751	UnaryOperator	!		17489	0					
ANR	17752	Identifier	curr		17489	1					
ANR	17753	GotoStatement	goto exit ;	773:8:24176:24185	17489	1	True				
ANR	17754	Identifier	exit		17489	0					
ANR	17755	IfStatement	"if ( same_monitor_configs ( mon_config , curr ) && x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h )"		17489	16					
ANR	17756	Condition	"same_monitor_configs ( mon_config , curr ) && x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h"	774:8:24195:24304	17489	0	True				
ANR	17757	AndExpression	"same_monitor_configs ( mon_config , curr ) && x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h"		17489	0		&&			
ANR	17758	CallExpression	"same_monitor_configs ( mon_config , curr )"		17489	0					
ANR	17759	Callee	same_monitor_configs		17489	0					
ANR	17760	Identifier	same_monitor_configs		17489	0					
ANR	17761	ArgumentList	mon_config		17489	1					
ANR	17762	Argument	mon_config		17489	0					
ANR	17763	Identifier	mon_config		17489	0					
ANR	17764	Argument	curr		17489	1					
ANR	17765	Identifier	curr		17489	0					
ANR	17766	AndExpression	x11 -> width [ 0 ] == primary_w && x11 -> height [ 0 ] == primary_h		17489	1		&&			
ANR	17767	EqualityExpression	x11 -> width [ 0 ] == primary_w		17489	0		==			
ANR	17768	ArrayIndexing	x11 -> width [ 0 ]		17489	0					
ANR	17769	PtrMemberAccess	x11 -> width		17489	0					
ANR	17770	Identifier	x11		17489	0					
ANR	17771	Identifier	width		17489	1					
ANR	17772	PrimaryExpression	0		17489	1					
ANR	17773	Identifier	primary_w		17489	1					
ANR	17774	EqualityExpression	x11 -> height [ 0 ] == primary_h		17489	1		==			
ANR	17775	ArrayIndexing	x11 -> height [ 0 ]		17489	0					
ANR	17776	PtrMemberAccess	x11 -> height		17489	0					
ANR	17777	Identifier	x11		17489	0					
ANR	17778	Identifier	height		17489	1					
ANR	17779	PrimaryExpression	0		17489	1					
ANR	17780	Identifier	primary_h		17489	1					
ANR	17781	CompoundStatement		50:70:1625:1625	17489	1					
ANR	17782	GotoStatement	goto exit ;	776:8:24317:24326	17489	0	True				
ANR	17783	Identifier	exit		17489	0					
ANR	17784	IfStatement	"if ( same_monitor_configs ( mon_config , x11 -> randr . failed_conf ) )"		17489	17					
ANR	17785	Condition	"same_monitor_configs ( mon_config , x11 -> randr . failed_conf )"	779:8:24343:24398	17489	0	True				
ANR	17786	CallExpression	"same_monitor_configs ( mon_config , x11 -> randr . failed_conf )"		17489	0					
ANR	17787	Callee	same_monitor_configs		17489	0					
ANR	17788	Identifier	same_monitor_configs		17489	0					
ANR	17789	ArgumentList	mon_config		17489	1					
ANR	17790	Argument	mon_config		17489	0					
ANR	17791	Identifier	mon_config		17489	0					
ANR	17792	Argument	x11 -> randr . failed_conf		17489	1					
ANR	17793	MemberAccess	x11 -> randr . failed_conf		17489	0					
ANR	17794	PtrMemberAccess	x11 -> randr		17489	0					
ANR	17795	Identifier	x11		17489	0					
ANR	17796	Identifier	randr		17489	1					
ANR	17797	Identifier	failed_conf		17489	1					
ANR	17798	CompoundStatement		54:66:1719:1719	17489	1					
ANR	17799	ExpressionStatement	"syslog ( LOG_WARNING , ""Ignoring previous failed client monitor config"" )"	780:8:24411:24480	17489	0	True				
ANR	17800	CallExpression	"syslog ( LOG_WARNING , ""Ignoring previous failed client monitor config"" )"		17489	0					
ANR	17801	Callee	syslog		17489	0					
ANR	17802	Identifier	syslog		17489	0					
ANR	17803	ArgumentList	LOG_WARNING		17489	1					
ANR	17804	Argument	LOG_WARNING		17489	0					
ANR	17805	Identifier	LOG_WARNING		17489	0					
ANR	17806	Argument	"""Ignoring previous failed client monitor config"""		17489	1					
ANR	17807	PrimaryExpression	"""Ignoring previous failed client monitor config"""		17489	0					
ANR	17808	GotoStatement	goto exit ;	781:8:24490:24499	17489	1	True				
ANR	17809	Identifier	exit		17489	0					
ANR	17810	IdentifierDeclStatement	"gchar * config = g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL ) ;"	784:4:24512:24593	17489	18	True				
ANR	17811	IdentifierDecl	"* config = g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL )"		17489	0					
ANR	17812	IdentifierDeclType	gchar *		17489	0					
ANR	17813	Identifier	config		17489	1					
ANR	17814	AssignmentExpression	"* config = g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL )"		17489	2		=			
ANR	17815	Identifier	config		17489	0					
ANR	17816	CallExpression	"g_build_filename ( g_get_user_config_dir ( ) , ""monitors.xml"" , NULL )"		17489	1					
ANR	17817	Callee	g_build_filename		17489	0					
ANR	17818	Identifier	g_build_filename		17489	0					
ANR	17819	ArgumentList	g_get_user_config_dir ( )		17489	1					
ANR	17820	Argument	g_get_user_config_dir ( )		17489	0					
ANR	17821	CallExpression	g_get_user_config_dir ( )		17489	0					
ANR	17822	Callee	g_get_user_config_dir		17489	0					
ANR	17823	Identifier	g_get_user_config_dir		17489	0					
ANR	17824	ArgumentList			17489	1					
ANR	17825	Argument	"""monitors.xml"""		17489	1					
ANR	17826	PrimaryExpression	"""monitors.xml"""		17489	0					
ANR	17827	Argument	NULL		17489	2					
ANR	17828	Identifier	NULL		17489	0					
ANR	17829	ExpressionStatement	g_unlink ( config )	785:4:24599:24615	17489	19	True				
ANR	17830	CallExpression	g_unlink ( config )		17489	0					
ANR	17831	Callee	g_unlink		17489	0					
ANR	17832	Identifier	g_unlink		17489	0					
ANR	17833	ArgumentList	config		17489	1					
ANR	17834	Argument	config		17489	0					
ANR	17835	Identifier	config		17489	0					
ANR	17836	ExpressionStatement	g_free ( config )	786:4:24621:24635	17489	20	True				
ANR	17837	CallExpression	g_free ( config )		17489	0					
ANR	17838	Callee	g_free		17489	0					
ANR	17839	Identifier	g_free		17489	0					
ANR	17840	ArgumentList	config		17489	1					
ANR	17841	Argument	config		17489	0					
ANR	17842	Identifier	config		17489	0					
ANR	17843	ForStatement	for ( i = mon_config -> num_of_monitors ; i < x11 -> randr . res -> noutput ; i ++ )		17489	21					
ANR	17844	ForInit	i = mon_config -> num_of_monitors ;	788:9:24647:24678	17489	0	True				
ANR	17845	AssignmentExpression	i = mon_config -> num_of_monitors		17489	0		=			
ANR	17846	Identifier	i		17489	0					
ANR	17847	PtrMemberAccess	mon_config -> num_of_monitors		17489	1					
ANR	17848	Identifier	mon_config		17489	0					
ANR	17849	Identifier	num_of_monitors		17489	1					
ANR	17850	Condition	i < x11 -> randr . res -> noutput	788:42:24680:24706	17489	1	True				
ANR	17851	RelationalExpression	i < x11 -> randr . res -> noutput		17489	0		<			
ANR	17852	Identifier	i		17489	0					
ANR	17853	PtrMemberAccess	x11 -> randr . res -> noutput		17489	1					
ANR	17854	MemberAccess	x11 -> randr . res		17489	0					
ANR	17855	PtrMemberAccess	x11 -> randr		17489	0					
ANR	17856	Identifier	x11		17489	0					
ANR	17857	Identifier	randr		17489	1					
ANR	17858	Identifier	res		17489	1					
ANR	17859	Identifier	noutput		17489	1					
ANR	17860	PostIncDecOperationExpression	i ++	788:71:24709:24711	17489	2	True				
ANR	17861	Identifier	i		17489	0					
ANR	17862	IncDec	++		17489	1					
ANR	17863	ExpressionStatement	"xrandr_disable_output ( x11 , i )"	789:8:24722:24751	17489	3	True				
ANR	17864	CallExpression	"xrandr_disable_output ( x11 , i )"		17489	0					
ANR	17865	Callee	xrandr_disable_output		17489	0					
ANR	17866	Identifier	xrandr_disable_output		17489	0					
ANR	17867	ArgumentList	x11		17489	1					
ANR	17868	Argument	x11		17489	0					
ANR	17869	Identifier	x11		17489	0					
ANR	17870	Argument	i		17489	1					
ANR	17871	Identifier	i		17489	0					
ANR	17872	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		17489	22					
ANR	17873	ForInit	i = 0 ;	792:9:24806:24811	17489	0	True				
ANR	17874	AssignmentExpression	i = 0		17489	0		=			
ANR	17875	Identifier	i		17489	0					
ANR	17876	PrimaryExpression	0		17489	1					
ANR	17877	Condition	i < mon_config -> num_of_monitors	792:16:24813:24843	17489	1	True				
ANR	17878	RelationalExpression	i < mon_config -> num_of_monitors		17489	0		<			
ANR	17879	Identifier	i		17489	0					
ANR	17880	PtrMemberAccess	mon_config -> num_of_monitors		17489	1					
ANR	17881	Identifier	mon_config		17489	0					
ANR	17882	Identifier	num_of_monitors		17489	1					
ANR	17883	UnaryExpression	++ i	792:49:24846:24848	17489	2	True				
ANR	17884	IncDec	++		17489	0					
ANR	17885	Identifier	i		17489	1					
ANR	17886	CompoundStatement		67:54:2169:2169	17489	3					
ANR	17887	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		17489	0					
ANR	17888	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	793:12:24865:24906	17489	0	True				
ANR	17889	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		17489	0					
ANR	17890	UnaryOperator	!		17489	0					
ANR	17891	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		17489	1					
ANR	17892	Callee	monitor_enabled		17489	0					
ANR	17893	Identifier	monitor_enabled		17489	0					
ANR	17894	ArgumentList	& mon_config -> monitors [ i ]		17489	1					
ANR	17895	Argument	& mon_config -> monitors [ i ]		17489	0					
ANR	17896	UnaryOperationExpression	& mon_config -> monitors [ i ]		17489	0					
ANR	17897	UnaryOperator	&		17489	0					
ANR	17898	ArrayIndexing	mon_config -> monitors [ i ]		17489	1					
ANR	17899	PtrMemberAccess	mon_config -> monitors		17489	0					
ANR	17900	Identifier	mon_config		17489	0					
ANR	17901	Identifier	monitors		17489	1					
ANR	17902	Identifier	i		17489	1					
ANR	17903	CompoundStatement		68:56:2227:2227	17489	1					
ANR	17904	ExpressionStatement	"xrandr_disable_output ( x11 , i )"	794:12:24923:24952	17489	0	True				
ANR	17905	CallExpression	"xrandr_disable_output ( x11 , i )"		17489	0					
ANR	17906	Callee	xrandr_disable_output		17489	0					
ANR	17907	Identifier	xrandr_disable_output		17489	0					
ANR	17908	ArgumentList	x11		17489	1					
ANR	17909	Argument	x11		17489	0					
ANR	17910	Identifier	x11		17489	0					
ANR	17911	Argument	i		17489	1					
ANR	17912	Identifier	i		17489	0					
ANR	17913	ForStatement	for ( i = 0 ; i < curr -> num_of_monitors ; ++ i )		17489	23					
ANR	17914	ForInit	i = 0 ;	803:9:25234:25239	17489	0	True				
ANR	17915	AssignmentExpression	i = 0		17489	0		=			
ANR	17916	Identifier	i		17489	0					
ANR	17917	PrimaryExpression	0		17489	1					
ANR	17918	Condition	i < curr -> num_of_monitors	803:16:25241:25265	17489	1	True				
ANR	17919	RelationalExpression	i < curr -> num_of_monitors		17489	0		<			
ANR	17920	Identifier	i		17489	0					
ANR	17921	PtrMemberAccess	curr -> num_of_monitors		17489	1					
ANR	17922	Identifier	curr		17489	0					
ANR	17923	Identifier	num_of_monitors		17489	1					
ANR	17924	UnaryExpression	++ i	803:43:25268:25270	17489	2	True				
ANR	17925	IncDec	++		17489	0					
ANR	17926	Identifier	i		17489	1					
ANR	17927	CompoundStatement		80:8:2628:2636	17489	3					
ANR	17928	IdentifierDeclStatement	"int width , height ;"	804:8:25283:25300	17489	0	True				
ANR	17929	IdentifierDecl	width		17489	0					
ANR	17930	IdentifierDeclType	int		17489	0					
ANR	17931	Identifier	width		17489	1					
ANR	17932	IdentifierDecl	height		17489	1					
ANR	17933	IdentifierDeclType	int		17489	0					
ANR	17934	Identifier	height		17489	1					
ANR	17935	IdentifierDeclStatement	"int x , y ;"	805:8:25310:25318	17489	1	True				
ANR	17936	IdentifierDecl	x		17489	0					
ANR	17937	IdentifierDeclType	int		17489	0					
ANR	17938	Identifier	x		17489	1					
ANR	17939	IdentifierDecl	y		17489	1					
ANR	17940	IdentifierDeclType	int		17489	0					
ANR	17941	Identifier	y		17489	1					
ANR	17942	ExpressionStatement	width = curr -> monitors [ i ] . width	807:8:25329:25360	17489	2	True				
ANR	17943	AssignmentExpression	width = curr -> monitors [ i ] . width		17489	0		=			
ANR	17944	Identifier	width		17489	0					
ANR	17945	MemberAccess	curr -> monitors [ i ] . width		17489	1					
ANR	17946	ArrayIndexing	curr -> monitors [ i ]		17489	0					
ANR	17947	PtrMemberAccess	curr -> monitors		17489	0					
ANR	17948	Identifier	curr		17489	0					
ANR	17949	Identifier	monitors		17489	1					
ANR	17950	Identifier	i		17489	1					
ANR	17951	Identifier	width		17489	1					
ANR	17952	ExpressionStatement	height = curr -> monitors [ i ] . height	808:8:25370:25403	17489	3	True				
ANR	17953	AssignmentExpression	height = curr -> monitors [ i ] . height		17489	0		=			
ANR	17954	Identifier	height		17489	0					
ANR	17955	MemberAccess	curr -> monitors [ i ] . height		17489	1					
ANR	17956	ArrayIndexing	curr -> monitors [ i ]		17489	0					
ANR	17957	PtrMemberAccess	curr -> monitors		17489	0					
ANR	17958	Identifier	curr		17489	0					
ANR	17959	Identifier	monitors		17489	1					
ANR	17960	Identifier	i		17489	1					
ANR	17961	Identifier	height		17489	1					
ANR	17962	ExpressionStatement	x = curr -> monitors [ i ] . x	809:8:25413:25436	17489	4	True				
ANR	17963	AssignmentExpression	x = curr -> monitors [ i ] . x		17489	0		=			
ANR	17964	Identifier	x		17489	0					
ANR	17965	MemberAccess	curr -> monitors [ i ] . x		17489	1					
ANR	17966	ArrayIndexing	curr -> monitors [ i ]		17489	0					
ANR	17967	PtrMemberAccess	curr -> monitors		17489	0					
ANR	17968	Identifier	curr		17489	0					
ANR	17969	Identifier	monitors		17489	1					
ANR	17970	Identifier	i		17489	1					
ANR	17971	Identifier	x		17489	1					
ANR	17972	ExpressionStatement	y = curr -> monitors [ i ] . y	810:8:25446:25469	17489	5	True				
ANR	17973	AssignmentExpression	y = curr -> monitors [ i ] . y		17489	0		=			
ANR	17974	Identifier	y		17489	0					
ANR	17975	MemberAccess	curr -> monitors [ i ] . y		17489	1					
ANR	17976	ArrayIndexing	curr -> monitors [ i ]		17489	0					
ANR	17977	PtrMemberAccess	curr -> monitors		17489	0					
ANR	17978	Identifier	curr		17489	0					
ANR	17979	Identifier	monitors		17489	1					
ANR	17980	Identifier	i		17489	1					
ANR	17981	Identifier	y		17489	1					
ANR	17982	IfStatement	if ( ( x + width > primary_w ) || ( y + height > primary_h ) )		17489	6					
ANR	17983	Condition	( x + width > primary_w ) || ( y + height > primary_h )	812:12:25484:25534	17489	0	True				
ANR	17984	OrExpression	( x + width > primary_w ) || ( y + height > primary_h )		17489	0		||			
ANR	17985	RelationalExpression	x + width > primary_w		17489	0		>			
ANR	17986	AdditiveExpression	x + width		17489	0		+			
ANR	17987	Identifier	x		17489	0					
ANR	17988	Identifier	width		17489	1					
ANR	17989	Identifier	primary_w		17489	1					
ANR	17990	RelationalExpression	y + height > primary_h		17489	1		>			
ANR	17991	AdditiveExpression	y + height		17489	0		+			
ANR	17992	Identifier	y		17489	0					
ANR	17993	Identifier	height		17489	1					
ANR	17994	Identifier	primary_h		17489	1					
ANR	17995	CompoundStatement		87:65:2855:2855	17489	1					
ANR	17996	IfStatement	if ( x11 -> debug )		17489	0					
ANR	17997	Condition	x11 -> debug	813:16:25555:25564	17489	0	True				
ANR	17998	PtrMemberAccess	x11 -> debug		17489	0					
ANR	17999	Identifier	x11		17489	0					
ANR	18000	Identifier	debug		17489	1					
ANR	18001	Statement	syslog	814:16:25583:25588	17489	1	True				
ANR	18002	Statement	(	814:22:25589:25589	17489	1	True				
ANR	18003	Statement	LOG_DEBUG	814:23:25590:25598	17489	2	True				
ANR	18004	Statement	","	814:32:25599:25599	17489	3	True				
ANR	18005	Statement	"""Disabling monitor %d: """	814:34:25601:25624	17489	4	True				
ANR	18006	Statement	"""%dx%d+%d+%d > (%d,%d)"""	815:23:25649:25671	17489	5	True				
ANR	18007	Statement	","	815:46:25672:25672	17489	6	True				
ANR	18008	Statement	i	816:23:25697:25697	17489	7	True				
ANR	18009	Statement	","	816:24:25698:25698	17489	8	True				
ANR	18010	Statement	width	816:26:25700:25704	17489	9	True				
ANR	18011	Statement	","	816:31:25705:25705	17489	10	True				
ANR	18012	Statement	height	816:33:25707:25712	17489	11	True				
ANR	18013	Statement	","	816:39:25713:25713	17489	12	True				
ANR	18014	Statement	x	816:41:25715:25715	17489	13	True				
ANR	18015	Statement	","	816:42:25716:25716	17489	14	True				
ANR	18016	Statement	y	816:44:25718:25718	17489	15	True				
ANR	18017	Statement	","	816:45:25719:25719	17489	16	True				
ANR	18018	Statement	primary_w	816:47:25721:25729	17489	17	True				
ANR	18019	Statement	","	816:56:25730:25730	17489	18	True				
ANR	18020	Statement	primary_h	816:58:25732:25740	17489	19	True				
ANR	18021	Statement	)	816:67:25741:25741	17489	20	True				
ANR	18022	ExpressionStatement		816:68:25742:25742	17489	21	True				
ANR	18023	ExpressionStatement	"xrandr_disable_output ( x11 , i )"	818:12:25757:25786	17489	22	True				
ANR	18024	CallExpression	"xrandr_disable_output ( x11 , i )"		17489	0					
ANR	18025	Callee	xrandr_disable_output		17489	0					
ANR	18026	Identifier	xrandr_disable_output		17489	0					
ANR	18027	ArgumentList	x11		17489	1					
ANR	18028	Argument	x11		17489	0					
ANR	18029	Identifier	x11		17489	0					
ANR	18030	Argument	i		17489	1					
ANR	18031	Identifier	i		17489	0					
ANR	18032	IfStatement	if ( primary_w != x11 -> width [ 0 ] || primary_h != x11 -> height [ 0 ] )		17489	24					
ANR	18033	Condition	primary_w != x11 -> width [ 0 ] || primary_h != x11 -> height [ 0 ]	823:8:25860:25916	17489	0	True				
ANR	18034	OrExpression	primary_w != x11 -> width [ 0 ] || primary_h != x11 -> height [ 0 ]		17489	0		||			
ANR	18035	EqualityExpression	primary_w != x11 -> width [ 0 ]		17489	0		!=			
ANR	18036	Identifier	primary_w		17489	0					
ANR	18037	ArrayIndexing	x11 -> width [ 0 ]		17489	1					
ANR	18038	PtrMemberAccess	x11 -> width		17489	0					
ANR	18039	Identifier	x11		17489	0					
ANR	18040	Identifier	width		17489	1					
ANR	18041	PrimaryExpression	0		17489	1					
ANR	18042	EqualityExpression	primary_h != x11 -> height [ 0 ]		17489	1		!=			
ANR	18043	Identifier	primary_h		17489	0					
ANR	18044	ArrayIndexing	x11 -> height [ 0 ]		17489	1					
ANR	18045	PtrMemberAccess	x11 -> height		17489	0					
ANR	18046	Identifier	x11		17489	0					
ANR	18047	Identifier	height		17489	1					
ANR	18048	PrimaryExpression	0		17489	1					
ANR	18049	CompoundStatement		101:8:3395:3442	17489	1					
ANR	18050	IdentifierDeclStatement	const int dpi = 96 ;	824:8:25929:25947	17489	0	True				
ANR	18051	IdentifierDecl	dpi = 96		17489	0					
ANR	18052	IdentifierDeclType	const int		17489	0					
ANR	18053	Identifier	dpi		17489	1					
ANR	18054	AssignmentExpression	dpi = 96		17489	2		=			
ANR	18055	Identifier	dpi		17489	0					
ANR	18056	PrimaryExpression	96		17489	1					
ANR	18057	IdentifierDeclStatement	int width_mm = ( MM_PER_INCH * primary_w ) / dpi ;	825:8:26021:26067	17489	1	True				
ANR	18058	IdentifierDecl	width_mm = ( MM_PER_INCH * primary_w ) / dpi		17489	0					
ANR	18059	IdentifierDeclType	int		17489	0					
ANR	18060	Identifier	width_mm		17489	1					
ANR	18061	AssignmentExpression	width_mm = ( MM_PER_INCH * primary_w ) / dpi		17489	2		=			
ANR	18062	Identifier	width_mm		17489	0					
ANR	18063	MultiplicativeExpression	( MM_PER_INCH * primary_w ) / dpi		17489	1		/			
ANR	18064	MultiplicativeExpression	MM_PER_INCH * primary_w		17489	0		*			
ANR	18065	Identifier	MM_PER_INCH		17489	0					
ANR	18066	Identifier	primary_w		17489	1					
ANR	18067	Identifier	dpi		17489	1					
ANR	18068	IdentifierDeclStatement	int height_mm = ( MM_PER_INCH * primary_h ) / dpi ;	826:8:26077:26124	17489	2	True				
ANR	18069	IdentifierDecl	height_mm = ( MM_PER_INCH * primary_h ) / dpi		17489	0					
ANR	18070	IdentifierDeclType	int		17489	0					
ANR	18071	Identifier	height_mm		17489	1					
ANR	18072	AssignmentExpression	height_mm = ( MM_PER_INCH * primary_h ) / dpi		17489	2		=			
ANR	18073	Identifier	height_mm		17489	0					
ANR	18074	MultiplicativeExpression	( MM_PER_INCH * primary_h ) / dpi		17489	1		/			
ANR	18075	MultiplicativeExpression	MM_PER_INCH * primary_h		17489	0		*			
ANR	18076	Identifier	MM_PER_INCH		17489	0					
ANR	18077	Identifier	primary_h		17489	1					
ANR	18078	Identifier	dpi		17489	1					
ANR	18079	IfStatement	if ( x11 -> debug )		17489	3					
ANR	18080	Condition	x11 -> debug	828:12:26139:26148	17489	0	True				
ANR	18081	PtrMemberAccess	x11 -> debug		17489	0					
ANR	18082	Identifier	x11		17489	0					
ANR	18083	Identifier	debug		17489	1					
ANR	18084	ExpressionStatement	"syslog ( LOG_DEBUG , ""Changing screen size to %dx%d"" , primary_w , primary_h )"	829:12:26163:26254	17489	1	True				
ANR	18085	CallExpression	"syslog ( LOG_DEBUG , ""Changing screen size to %dx%d"" , primary_w , primary_h )"		17489	0					
ANR	18086	Callee	syslog		17489	0					
ANR	18087	Identifier	syslog		17489	0					
ANR	18088	ArgumentList	LOG_DEBUG		17489	1					
ANR	18089	Argument	LOG_DEBUG		17489	0					
ANR	18090	Identifier	LOG_DEBUG		17489	0					
ANR	18091	Argument	"""Changing screen size to %dx%d"""		17489	1					
ANR	18092	PrimaryExpression	"""Changing screen size to %dx%d"""		17489	0					
ANR	18093	Argument	primary_w		17489	2					
ANR	18094	Identifier	primary_w		17489	0					
ANR	18095	Argument	primary_h		17489	3					
ANR	18096	Identifier	primary_h		17489	0					
ANR	18097	ExpressionStatement	"vdagent_x11_set_error_handler ( x11 , error_handler )"	831:8:26264:26313	17489	4	True				
ANR	18098	CallExpression	"vdagent_x11_set_error_handler ( x11 , error_handler )"		17489	0					
ANR	18099	Callee	vdagent_x11_set_error_handler		17489	0					
ANR	18100	Identifier	vdagent_x11_set_error_handler		17489	0					
ANR	18101	ArgumentList	x11		17489	1					
ANR	18102	Argument	x11		17489	0					
ANR	18103	Identifier	x11		17489	0					
ANR	18104	Argument	error_handler		17489	1					
ANR	18105	Identifier	error_handler		17489	0					
ANR	18106	ExpressionStatement	"XRRSetScreenSize ( x11 -> display , x11 -> root_window [ 0 ] , primary_w , primary_h , width_mm , height_mm )"	832:8:26323:26442	17489	5	True				
ANR	18107	CallExpression	"XRRSetScreenSize ( x11 -> display , x11 -> root_window [ 0 ] , primary_w , primary_h , width_mm , height_mm )"		17489	0					
ANR	18108	Callee	XRRSetScreenSize		17489	0					
ANR	18109	Identifier	XRRSetScreenSize		17489	0					
ANR	18110	ArgumentList	x11 -> display		17489	1					
ANR	18111	Argument	x11 -> display		17489	0					
ANR	18112	PtrMemberAccess	x11 -> display		17489	0					
ANR	18113	Identifier	x11		17489	0					
ANR	18114	Identifier	display		17489	1					
ANR	18115	Argument	x11 -> root_window [ 0 ]		17489	1					
ANR	18116	ArrayIndexing	x11 -> root_window [ 0 ]		17489	0					
ANR	18117	PtrMemberAccess	x11 -> root_window		17489	0					
ANR	18118	Identifier	x11		17489	0					
ANR	18119	Identifier	root_window		17489	1					
ANR	18120	PrimaryExpression	0		17489	1					
ANR	18121	Argument	primary_w		17489	2					
ANR	18122	Identifier	primary_w		17489	0					
ANR	18123	Argument	primary_h		17489	3					
ANR	18124	Identifier	primary_h		17489	0					
ANR	18125	Argument	width_mm		17489	4					
ANR	18126	Identifier	width_mm		17489	0					
ANR	18127	Argument	height_mm		17489	5					
ANR	18128	Identifier	height_mm		17489	0					
ANR	18129	IfStatement	if ( vdagent_x11_restore_error_handler ( x11 ) )		17489	6					
ANR	18130	Condition	vdagent_x11_restore_error_handler ( x11 )	834:12:26456:26493	17489	0	True				
ANR	18131	CallExpression	vdagent_x11_restore_error_handler ( x11 )		17489	0					
ANR	18132	Callee	vdagent_x11_restore_error_handler		17489	0					
ANR	18133	Identifier	vdagent_x11_restore_error_handler		17489	0					
ANR	18134	ArgumentList	x11		17489	1					
ANR	18135	Argument	x11		17489	0					
ANR	18136	Identifier	x11		17489	0					
ANR	18137	CompoundStatement		109:52:3814:3814	17489	1					
ANR	18138	ExpressionStatement	"syslog ( LOG_ERR , ""XRRSetScreenSize failed, not enough mem?"" )"	835:12:26510:26569	17489	0	True				
ANR	18139	CallExpression	"syslog ( LOG_ERR , ""XRRSetScreenSize failed, not enough mem?"" )"		17489	0					
ANR	18140	Callee	syslog		17489	0					
ANR	18141	Identifier	syslog		17489	0					
ANR	18142	ArgumentList	LOG_ERR		17489	1					
ANR	18143	Argument	LOG_ERR		17489	0					
ANR	18144	Identifier	LOG_ERR		17489	0					
ANR	18145	Argument	"""XRRSetScreenSize failed, not enough mem?"""		17489	1					
ANR	18146	PrimaryExpression	"""XRRSetScreenSize failed, not enough mem?"""		17489	0					
ANR	18147	IfStatement	if ( ! fallback )		17489	1					
ANR	18148	Condition	! fallback	836:16:26587:26595	17489	0	True				
ANR	18149	UnaryOperationExpression	! fallback		17489	0					
ANR	18150	UnaryOperator	!		17489	0					
ANR	18151	Identifier	fallback		17489	1					
ANR	18152	CompoundStatement		111:27:3916:3916	17489	1					
ANR	18153	ExpressionStatement	"syslog ( LOG_WARNING , ""Restoring previous config"" )"	837:16:26616:26664	17489	0	True				
ANR	18154	CallExpression	"syslog ( LOG_WARNING , ""Restoring previous config"" )"		17489	0					
ANR	18155	Callee	syslog		17489	0					
ANR	18156	Identifier	syslog		17489	0					
ANR	18157	ArgumentList	LOG_WARNING		17489	1					
ANR	18158	Argument	LOG_WARNING		17489	0					
ANR	18159	Identifier	LOG_WARNING		17489	0					
ANR	18160	Argument	"""Restoring previous config"""		17489	1					
ANR	18161	PrimaryExpression	"""Restoring previous config"""		17489	0					
ANR	18162	ExpressionStatement	"vdagent_x11_set_monitor_config ( x11 , curr , 1 )"	838:16:26682:26726	17489	1	True				
ANR	18163	CallExpression	"vdagent_x11_set_monitor_config ( x11 , curr , 1 )"		17489	0					
ANR	18164	Callee	vdagent_x11_set_monitor_config		17489	0					
ANR	18165	Identifier	vdagent_x11_set_monitor_config		17489	0					
ANR	18166	ArgumentList	x11		17489	1					
ANR	18167	Argument	x11		17489	0					
ANR	18168	Identifier	x11		17489	0					
ANR	18169	Argument	curr		17489	1					
ANR	18170	Identifier	curr		17489	0					
ANR	18171	Argument	1		17489	2					
ANR	18172	PrimaryExpression	1		17489	0					
ANR	18173	ExpressionStatement	free ( curr )	839:16:26744:26754	17489	2	True				
ANR	18174	CallExpression	free ( curr )		17489	0					
ANR	18175	Callee	free		17489	0					
ANR	18176	Identifier	free		17489	0					
ANR	18177	ArgumentList	curr		17489	1					
ANR	18178	Argument	curr		17489	0					
ANR	18179	Identifier	curr		17489	0					
ANR	18180	ExpressionStatement	free ( x11 -> randr . failed_conf )	842:16:26924:26952	17489	3	True				
ANR	18181	CallExpression	free ( x11 -> randr . failed_conf )		17489	0					
ANR	18182	Callee	free		17489	0					
ANR	18183	Identifier	free		17489	0					
ANR	18184	ArgumentList	x11 -> randr . failed_conf		17489	1					
ANR	18185	Argument	x11 -> randr . failed_conf		17489	0					
ANR	18186	MemberAccess	x11 -> randr . failed_conf		17489	0					
ANR	18187	PtrMemberAccess	x11 -> randr		17489	0					
ANR	18188	Identifier	x11		17489	0					
ANR	18189	Identifier	randr		17489	1					
ANR	18190	Identifier	failed_conf		17489	1					
ANR	18191	ExpressionStatement	x11 -> randr . failed_conf = malloc ( config_size ( mon_config -> num_of_monitors ) )	843:16:26970:27063	17489	4	True				
ANR	18192	AssignmentExpression	x11 -> randr . failed_conf = malloc ( config_size ( mon_config -> num_of_monitors ) )		17489	0		=			
ANR	18193	MemberAccess	x11 -> randr . failed_conf		17489	0					
ANR	18194	PtrMemberAccess	x11 -> randr		17489	0					
ANR	18195	Identifier	x11		17489	0					
ANR	18196	Identifier	randr		17489	1					
ANR	18197	Identifier	failed_conf		17489	1					
ANR	18198	CallExpression	malloc ( config_size ( mon_config -> num_of_monitors ) )		17489	1					
ANR	18199	Callee	malloc		17489	0					
ANR	18200	Identifier	malloc		17489	0					
ANR	18201	ArgumentList	config_size ( mon_config -> num_of_monitors )		17489	1					
ANR	18202	Argument	config_size ( mon_config -> num_of_monitors )		17489	0					
ANR	18203	CallExpression	config_size ( mon_config -> num_of_monitors )		17489	0					
ANR	18204	Callee	config_size		17489	0					
ANR	18205	Identifier	config_size		17489	0					
ANR	18206	ArgumentList	mon_config -> num_of_monitors		17489	1					
ANR	18207	Argument	mon_config -> num_of_monitors		17489	0					
ANR	18208	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	18209	Identifier	mon_config		17489	0					
ANR	18210	Identifier	num_of_monitors		17489	1					
ANR	18211	IfStatement	if ( x11 -> randr . failed_conf )		17489	5					
ANR	18212	Condition	x11 -> randr . failed_conf	845:20:27085:27106	17489	0	True				
ANR	18213	MemberAccess	x11 -> randr . failed_conf		17489	0					
ANR	18214	PtrMemberAccess	x11 -> randr		17489	0					
ANR	18215	Identifier	x11		17489	0					
ANR	18216	Identifier	randr		17489	1					
ANR	18217	Identifier	failed_conf		17489	1					
ANR	18218	ExpressionStatement	"memcpy ( x11 -> randr . failed_conf , mon_config , config_size ( mon_config -> num_of_monitors ) )"	846:20:27129:27240	17489	1	True				
ANR	18219	CallExpression	"memcpy ( x11 -> randr . failed_conf , mon_config , config_size ( mon_config -> num_of_monitors ) )"		17489	0					
ANR	18220	Callee	memcpy		17489	0					
ANR	18221	Identifier	memcpy		17489	0					
ANR	18222	ArgumentList	x11 -> randr . failed_conf		17489	1					
ANR	18223	Argument	x11 -> randr . failed_conf		17489	0					
ANR	18224	MemberAccess	x11 -> randr . failed_conf		17489	0					
ANR	18225	PtrMemberAccess	x11 -> randr		17489	0					
ANR	18226	Identifier	x11		17489	0					
ANR	18227	Identifier	randr		17489	1					
ANR	18228	Identifier	failed_conf		17489	1					
ANR	18229	Argument	mon_config		17489	1					
ANR	18230	Identifier	mon_config		17489	0					
ANR	18231	Argument	config_size ( mon_config -> num_of_monitors )		17489	2					
ANR	18232	CallExpression	config_size ( mon_config -> num_of_monitors )		17489	0					
ANR	18233	Callee	config_size		17489	0					
ANR	18234	Identifier	config_size		17489	0					
ANR	18235	ArgumentList	mon_config -> num_of_monitors		17489	1					
ANR	18236	Argument	mon_config -> num_of_monitors		17489	0					
ANR	18237	PtrMemberAccess	mon_config -> num_of_monitors		17489	0					
ANR	18238	Identifier	mon_config		17489	0					
ANR	18239	Identifier	num_of_monitors		17489	1					
ANR	18240	ReturnStatement	return ;	848:16:27258:27264	17489	6	True				
ANR	18241	ForStatement	for ( i = 0 ; i < mon_config -> num_of_monitors ; ++ i )		17489	25					
ANR	18242	ForInit	i = 0 ;	855:9:27430:27435	17489	0	True				
ANR	18243	AssignmentExpression	i = 0		17489	0		=			
ANR	18244	Identifier	i		17489	0					
ANR	18245	PrimaryExpression	0		17489	1					
ANR	18246	Condition	i < mon_config -> num_of_monitors	855:16:27437:27467	17489	1	True				
ANR	18247	RelationalExpression	i < mon_config -> num_of_monitors		17489	0		<			
ANR	18248	Identifier	i		17489	0					
ANR	18249	PtrMemberAccess	mon_config -> num_of_monitors		17489	1					
ANR	18250	Identifier	mon_config		17489	0					
ANR	18251	Identifier	num_of_monitors		17489	1					
ANR	18252	UnaryExpression	++ i	855:49:27470:27472	17489	2	True				
ANR	18253	IncDec	++		17489	0					
ANR	18254	Identifier	i		17489	1					
ANR	18255	CompoundStatement		132:8:4830:4838	17489	3					
ANR	18256	IdentifierDeclStatement	"int width , height ;"	856:8:27485:27502	17489	0	True				
ANR	18257	IdentifierDecl	width		17489	0					
ANR	18258	IdentifierDeclType	int		17489	0					
ANR	18259	Identifier	width		17489	1					
ANR	18260	IdentifierDecl	height		17489	1					
ANR	18261	IdentifierDeclType	int		17489	0					
ANR	18262	Identifier	height		17489	1					
ANR	18263	IdentifierDeclStatement	"int x , y ;"	857:8:27512:27520	17489	1	True				
ANR	18264	IdentifierDecl	x		17489	0					
ANR	18265	IdentifierDeclType	int		17489	0					
ANR	18266	Identifier	x		17489	1					
ANR	18267	IdentifierDecl	y		17489	1					
ANR	18268	IdentifierDeclType	int		17489	0					
ANR	18269	Identifier	y		17489	1					
ANR	18270	IfStatement	if ( ! monitor_enabled ( & mon_config -> monitors [ i ] ) )		17489	2					
ANR	18271	Condition	! monitor_enabled ( & mon_config -> monitors [ i ] )	859:12:27535:27576	17489	0	True				
ANR	18272	UnaryOperationExpression	! monitor_enabled ( & mon_config -> monitors [ i ] )		17489	0					
ANR	18273	UnaryOperator	!		17489	0					
ANR	18274	CallExpression	monitor_enabled ( & mon_config -> monitors [ i ] )		17489	1					
ANR	18275	Callee	monitor_enabled		17489	0					
ANR	18276	Identifier	monitor_enabled		17489	0					
ANR	18277	ArgumentList	& mon_config -> monitors [ i ]		17489	1					
ANR	18278	Argument	& mon_config -> monitors [ i ]		17489	0					
ANR	18279	UnaryOperationExpression	& mon_config -> monitors [ i ]		17489	0					
ANR	18280	UnaryOperator	&		17489	0					
ANR	18281	ArrayIndexing	mon_config -> monitors [ i ]		17489	1					
ANR	18282	PtrMemberAccess	mon_config -> monitors		17489	0					
ANR	18283	Identifier	mon_config		17489	0					
ANR	18284	Identifier	monitors		17489	1					
ANR	18285	Identifier	i		17489	1					
ANR	18286	CompoundStatement		134:56:4897:4897	17489	1					
ANR	18287	ContinueStatement	continue ;	860:12:27593:27601	17489	0	True				
ANR	18288	ExpressionStatement	width = mon_config -> monitors [ i ] . width	863:8:27674:27711	17489	3	True				
ANR	18289	AssignmentExpression	width = mon_config -> monitors [ i ] . width		17489	0		=			
ANR	18290	Identifier	width		17489	0					
ANR	18291	MemberAccess	mon_config -> monitors [ i ] . width		17489	1					
ANR	18292	ArrayIndexing	mon_config -> monitors [ i ]		17489	0					
ANR	18293	PtrMemberAccess	mon_config -> monitors		17489	0					
ANR	18294	Identifier	mon_config		17489	0					
ANR	18295	Identifier	monitors		17489	1					
ANR	18296	Identifier	i		17489	1					
ANR	18297	Identifier	width		17489	1					
ANR	18298	ExpressionStatement	height = mon_config -> monitors [ i ] . height	864:8:27721:27760	17489	4	True				
ANR	18299	AssignmentExpression	height = mon_config -> monitors [ i ] . height		17489	0		=			
ANR	18300	Identifier	height		17489	0					
ANR	18301	MemberAccess	mon_config -> monitors [ i ] . height		17489	1					
ANR	18302	ArrayIndexing	mon_config -> monitors [ i ]		17489	0					
ANR	18303	PtrMemberAccess	mon_config -> monitors		17489	0					
ANR	18304	Identifier	mon_config		17489	0					
ANR	18305	Identifier	monitors		17489	1					
ANR	18306	Identifier	i		17489	1					
ANR	18307	Identifier	height		17489	1					
ANR	18308	ExpressionStatement	x = mon_config -> monitors [ i ] . x	865:8:27770:27799	17489	5	True				
ANR	18309	AssignmentExpression	x = mon_config -> monitors [ i ] . x		17489	0		=			
ANR	18310	Identifier	x		17489	0					
ANR	18311	MemberAccess	mon_config -> monitors [ i ] . x		17489	1					
ANR	18312	ArrayIndexing	mon_config -> monitors [ i ]		17489	0					
ANR	18313	PtrMemberAccess	mon_config -> monitors		17489	0					
ANR	18314	Identifier	mon_config		17489	0					
ANR	18315	Identifier	monitors		17489	1					
ANR	18316	Identifier	i		17489	1					
ANR	18317	Identifier	x		17489	1					
ANR	18318	ExpressionStatement	y = mon_config -> monitors [ i ] . y	866:8:27809:27838	17489	6	True				
ANR	18319	AssignmentExpression	y = mon_config -> monitors [ i ] . y		17489	0		=			
ANR	18320	Identifier	y		17489	0					
ANR	18321	MemberAccess	mon_config -> monitors [ i ] . y		17489	1					
ANR	18322	ArrayIndexing	mon_config -> monitors [ i ]		17489	0					
ANR	18323	PtrMemberAccess	mon_config -> monitors		17489	0					
ANR	18324	Identifier	mon_config		17489	0					
ANR	18325	Identifier	monitors		17489	1					
ANR	18326	Identifier	i		17489	1					
ANR	18327	Identifier	y		17489	1					
ANR	18328	IfStatement	"if ( ! xrandr_add_and_set ( x11 , i , x , y , width , height ) && enabled_monitors ( mon_config ) == 1 )"		17489	7					
ANR	18329	Condition	"! xrandr_add_and_set ( x11 , i , x , y , width , height ) && enabled_monitors ( mon_config ) == 1"	867:12:27852:27952	17489	0	True				
ANR	18330	AndExpression	"! xrandr_add_and_set ( x11 , i , x , y , width , height ) && enabled_monitors ( mon_config ) == 1"		17489	0		&&			
ANR	18331	UnaryOperationExpression	"! xrandr_add_and_set ( x11 , i , x , y , width , height )"		17489	0					
ANR	18332	UnaryOperator	!		17489	0					
ANR	18333	CallExpression	"xrandr_add_and_set ( x11 , i , x , y , width , height )"		17489	1					
ANR	18334	Callee	xrandr_add_and_set		17489	0					
ANR	18335	Identifier	xrandr_add_and_set		17489	0					
ANR	18336	ArgumentList	x11		17489	1					
ANR	18337	Argument	x11		17489	0					
ANR	18338	Identifier	x11		17489	0					
ANR	18339	Argument	i		17489	1					
ANR	18340	Identifier	i		17489	0					
ANR	18341	Argument	x		17489	2					
ANR	18342	Identifier	x		17489	0					
ANR	18343	Argument	y		17489	3					
ANR	18344	Identifier	y		17489	0					
ANR	18345	Argument	width		17489	4					
ANR	18346	Identifier	width		17489	0					
ANR	18347	Argument	height		17489	5					
ANR	18348	Identifier	height		17489	0					
ANR	18349	EqualityExpression	enabled_monitors ( mon_config ) == 1		17489	1		==			
ANR	18350	CallExpression	enabled_monitors ( mon_config )		17489	0					
ANR	18351	Callee	enabled_monitors		17489	0					
ANR	18352	Identifier	enabled_monitors		17489	0					
ANR	18353	ArgumentList	mon_config		17489	1					
ANR	18354	Argument	mon_config		17489	0					
ANR	18355	Identifier	mon_config		17489	0					
ANR	18356	PrimaryExpression	1		17489	1					
ANR	18357	CompoundStatement		143:51:5273:5273	17489	1					
ANR	18358	ExpressionStatement	"set_screen_to_best_size ( x11 , width , height , & primary_w , & primary_h )"	869:12:27969:28072	17489	0	True				
ANR	18359	CallExpression	"set_screen_to_best_size ( x11 , width , height , & primary_w , & primary_h )"		17489	0					
ANR	18360	Callee	set_screen_to_best_size		17489	0					
ANR	18361	Identifier	set_screen_to_best_size		17489	0					
ANR	18362	ArgumentList	x11		17489	1					
ANR	18363	Argument	x11		17489	0					
ANR	18364	Identifier	x11		17489	0					
ANR	18365	Argument	width		17489	1					
ANR	18366	Identifier	width		17489	0					
ANR	18367	Argument	height		17489	2					
ANR	18368	Identifier	height		17489	0					
ANR	18369	Argument	& primary_w		17489	3					
ANR	18370	UnaryOperationExpression	& primary_w		17489	0					
ANR	18371	UnaryOperator	&		17489	0					
ANR	18372	Identifier	primary_w		17489	1					
ANR	18373	Argument	& primary_h		17489	4					
ANR	18374	UnaryOperationExpression	& primary_h		17489	0					
ANR	18375	UnaryOperator	&		17489	0					
ANR	18376	Identifier	primary_h		17489	1					
ANR	18377	BreakStatement	break ;	871:12:28086:28091	17489	1	True				
ANR	18378	ExpressionStatement	"update_randr_res ( x11 , x11 -> randr . num_monitors != enabled_monitors ( mon_config ) )"	875:4:28114:28200	17489	26	True				
ANR	18379	CallExpression	"update_randr_res ( x11 , x11 -> randr . num_monitors != enabled_monitors ( mon_config ) )"		17489	0					
ANR	18380	Callee	update_randr_res		17489	0					
ANR	18381	Identifier	update_randr_res		17489	0					
ANR	18382	ArgumentList	x11		17489	1					
ANR	18383	Argument	x11		17489	0					
ANR	18384	Identifier	x11		17489	0					
ANR	18385	Argument	x11 -> randr . num_monitors != enabled_monitors ( mon_config )		17489	1					
ANR	18386	EqualityExpression	x11 -> randr . num_monitors != enabled_monitors ( mon_config )		17489	0		!=			
ANR	18387	MemberAccess	x11 -> randr . num_monitors		17489	0					
ANR	18388	PtrMemberAccess	x11 -> randr		17489	0					
ANR	18389	Identifier	x11		17489	0					
ANR	18390	Identifier	randr		17489	1					
ANR	18391	Identifier	num_monitors		17489	1					
ANR	18392	CallExpression	enabled_monitors ( mon_config )		17489	1					
ANR	18393	Callee	enabled_monitors		17489	0					
ANR	18394	Identifier	enabled_monitors		17489	0					
ANR	18395	ArgumentList	mon_config		17489	1					
ANR	18396	Argument	mon_config		17489	0					
ANR	18397	Identifier	mon_config		17489	0					
ANR	18398	ExpressionStatement	x11 -> width [ 0 ] = primary_w	877:4:28206:28231	17489	27	True				
ANR	18399	AssignmentExpression	x11 -> width [ 0 ] = primary_w		17489	0		=			
ANR	18400	ArrayIndexing	x11 -> width [ 0 ]		17489	0					
ANR	18401	PtrMemberAccess	x11 -> width		17489	0					
ANR	18402	Identifier	x11		17489	0					
ANR	18403	Identifier	width		17489	1					
ANR	18404	PrimaryExpression	0		17489	1					
ANR	18405	Identifier	primary_w		17489	1					
ANR	18406	ExpressionStatement	x11 -> height [ 0 ] = primary_h	878:4:28237:28263	17489	28	True				
ANR	18407	AssignmentExpression	x11 -> height [ 0 ] = primary_h		17489	0		=			
ANR	18408	ArrayIndexing	x11 -> height [ 0 ]		17489	0					
ANR	18409	PtrMemberAccess	x11 -> height		17489	0					
ANR	18410	Identifier	x11		17489	0					
ANR	18411	Identifier	height		17489	1					
ANR	18412	PrimaryExpression	0		17489	1					
ANR	18413	Identifier	primary_h		17489	1					
ANR	18414	ExpressionStatement	x11 -> dont_send_guest_xorg_res = 1	881:4:28350:28383	17489	29	True				
ANR	18415	AssignmentExpression	x11 -> dont_send_guest_xorg_res = 1		17489	0		=			
ANR	18416	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		17489	0					
ANR	18417	Identifier	x11		17489	0					
ANR	18418	Identifier	dont_send_guest_xorg_res		17489	1					
ANR	18419	PrimaryExpression	1		17489	1					
ANR	18420	ExpressionStatement	vdagent_x11_do_read ( x11 )	882:4:28389:28413	17489	30	True				
ANR	18421	CallExpression	vdagent_x11_do_read ( x11 )		17489	0					
ANR	18422	Callee	vdagent_x11_do_read		17489	0					
ANR	18423	Identifier	vdagent_x11_do_read		17489	0					
ANR	18424	ArgumentList	x11		17489	1					
ANR	18425	Argument	x11		17489	0					
ANR	18426	Identifier	x11		17489	0					
ANR	18427	ExpressionStatement	x11 -> dont_send_guest_xorg_res = 0	883:4:28419:28452	17489	31	True				
ANR	18428	AssignmentExpression	x11 -> dont_send_guest_xorg_res = 0		17489	0		=			
ANR	18429	PtrMemberAccess	x11 -> dont_send_guest_xorg_res		17489	0					
ANR	18430	Identifier	x11		17489	0					
ANR	18431	Identifier	dont_send_guest_xorg_res		17489	1					
ANR	18432	PrimaryExpression	0		17489	1					
ANR	18433	Label	exit :	885:0:28455:28459	17489	32	True				
ANR	18434	Identifier	exit		17489	0					
ANR	18435	ExpressionStatement	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 0 )"	886:4:28465:28511	17489	33	True				
ANR	18436	CallExpression	"vdagent_x11_send_daemon_guest_xorg_res ( x11 , 0 )"		17489	0					
ANR	18437	Callee	vdagent_x11_send_daemon_guest_xorg_res		17489	0					
ANR	18438	Identifier	vdagent_x11_send_daemon_guest_xorg_res		17489	0					
ANR	18439	ArgumentList	x11		17489	1					
ANR	18440	Argument	x11		17489	0					
ANR	18441	Identifier	x11		17489	0					
ANR	18442	Argument	0		17489	1					
ANR	18443	PrimaryExpression	0		17489	0					
ANR	18444	ExpressionStatement	vdagent_x11_do_read ( x11 )	889:4:28580:28604	17489	34	True				
ANR	18445	CallExpression	vdagent_x11_do_read ( x11 )		17489	0					
ANR	18446	Callee	vdagent_x11_do_read		17489	0					
ANR	18447	Identifier	vdagent_x11_do_read		17489	0					
ANR	18448	ArgumentList	x11		17489	1					
ANR	18449	Argument	x11		17489	0					
ANR	18450	Identifier	x11		17489	0					
ANR	18451	ExpressionStatement	free ( curr )	890:4:28610:28620	17489	35	True				
ANR	18452	CallExpression	free ( curr )		17489	0					
ANR	18453	Callee	free		17489	0					
ANR	18454	Identifier	free		17489	0					
ANR	18455	ArgumentList	curr		17489	1					
ANR	18456	Argument	curr		17489	0					
ANR	18457	Identifier	curr		17489	0					
ANR	18458	ReturnType	void		17489	1					
ANR	18459	Identifier	vdagent_x11_set_monitor_config		17489	2					
ANR	18460	ParameterList	"struct vdagent_x11 * x11 , VDAgentMonitorsConfig * mon_config , int fallback"		17489	3					
ANR	18461	Parameter	struct vdagent_x11 * x11	723:36:22535:22557	17489	0	True				
ANR	18462	ParameterType	struct vdagent_x11 *		17489	0					
ANR	18463	Identifier	x11		17489	1					
ANR	18464	Parameter	VDAgentMonitorsConfig * mon_config	724:36:22596:22628	17489	1	True				
ANR	18465	ParameterType	VDAgentMonitorsConfig *		17489	0					
ANR	18466	Identifier	mon_config		17489	1					
ANR	18467	Parameter	int fallback	725:36:22667:22678	17489	2	True				
ANR	18468	ParameterType	int		17489	0					
ANR	18469	Identifier	fallback		17489	1					
ANR	18470	CFGEntryNode	ENTRY		17489		True				
ANR	18471	CFGExitNode	EXIT		17489		True				
ANR	18472	Symbol	x11 -> randr . failed_conf		17489						
ANR	18473	Symbol	real_num_of_monitors		17489						
ANR	18474	Symbol	curr -> monitors		17489						
ANR	18475	Symbol	x11 -> dont_send_guest_xorg_res		17489						
ANR	18476	Symbol	LOG_WARNING		17489						
ANR	18477	Symbol	x11 -> root_window		17489						
ANR	18478	Symbol	monitor_enabled		17489						
ANR	18479	Symbol	MONITOR_SIZE_COUNT		17489						
ANR	18480	Symbol	mon_config -> monitors		17489						
ANR	18481	Symbol	curr -> monitors [ i ] . x		17489						
ANR	18482	Symbol	* mon_config		17489						
ANR	18483	Symbol	mon_config -> num_of_monitors		17489						
ANR	18484	Symbol	curr -> monitors [ i ] . y		17489						
ANR	18485	Symbol	LOG_ERR		17489						
ANR	18486	Symbol	g_build_filename		17489						
ANR	18487	Symbol	curr -> num_of_monitors		17489						
ANR	18488	Symbol	x11		17489						
ANR	18489	Symbol	curr		17489						
ANR	18490	Symbol	get_current_mon_config		17489						
ANR	18491	Symbol	x11 -> height		17489						
ANR	18492	Symbol	height		17489						
ANR	18493	Symbol	* * mon_config		17489						
ANR	18494	Symbol	NULL		17489						
ANR	18495	Symbol	& primary_h		17489						
ANR	18496	Symbol	curr -> monitors [ i ] . height		17489						
ANR	18497	Symbol	xrandr_add_and_set		17489						
ANR	18498	Symbol	* x11 -> randr		17489						
ANR	18499	Symbol	* curr -> monitors		17489						
ANR	18500	Symbol	* mon_config -> monitors		17489						
ANR	18501	Symbol	x11 -> display		17489						
ANR	18502	Symbol	mon_config		17489						
ANR	18503	Symbol	vdagent_x11_restore_error_handler		17489						
ANR	18504	Symbol	enabled_monitors		17489						
ANR	18505	Symbol	x11 -> randr . res		17489						
ANR	18506	Symbol	g_get_user_config_dir		17489						
ANR	18507	Symbol	fallback		17489						
ANR	18508	Symbol	* x11		17489						
ANR	18509	Symbol	error_handler		17489						
ANR	18510	Symbol	x11 -> width		17489						
ANR	18511	Symbol	x11 -> randr		17489						
ANR	18512	Symbol	* * curr		17489						
ANR	18513	Symbol	x11 -> randr . num_monitors		17489						
ANR	18514	Symbol	* x11 -> width		17489						
ANR	18515	Symbol	primary_w		17489						
ANR	18516	Symbol	same_monitor_configs		17489						
ANR	18517	Symbol	* x11 -> randr . res		17489						
ANR	18518	Symbol	curr -> monitors [ i ] . width		17489						
ANR	18519	Symbol	mon_config -> monitors [ i ] . x		17489						
ANR	18520	Symbol	* x11 -> height		17489						
ANR	18521	Symbol	mon_config -> monitors [ i ] . y		17489						
ANR	18522	Symbol	x11 -> randr . res -> noutput		17489						
ANR	18523	Symbol	& primary_w		17489						
ANR	18524	Symbol	config_size		17489						
ANR	18525	Symbol	* x11 -> root_window		17489						
ANR	18526	Symbol	primary_h		17489						
ANR	18527	Symbol	dpi		17489						
ANR	18528	Symbol	malloc		17489						
ANR	18529	Symbol	x11 -> debug		17489						
ANR	18530	Symbol	i		17489						
ANR	18531	Symbol	mon_config -> monitors [ i ] . width		17489						
ANR	18532	Symbol	width_mm		17489						
ANR	18533	Symbol	* * x11		17489						
ANR	18534	Symbol	* i		17489						
ANR	18535	Symbol	* curr		17489						
ANR	18536	Symbol	mon_config -> monitors [ i ] . height		17489						
ANR	18537	Symbol	MM_PER_INCH		17489						
ANR	18538	Symbol	width		17489						
ANR	18539	Symbol	x		17489						
ANR	18540	Symbol	y		17489						
ANR	18541	Symbol	LOG_DEBUG		17489						
ANR	18542	Symbol	x11 -> has_xrandr		17489						
ANR	18543	Symbol	height_mm		17489						
ANR	18544	Symbol	config		17489						
ANR	18545	Function	vdagent_x11_send_daemon_guest_xorg_res	893:0:28625:31682							
ANR	18546	FunctionDef	"vdagent_x11_send_daemon_guest_xorg_res (struct vdagent_x11 * x11 , int update)"		18545	0					
ANR	18547	CompoundStatement		894:0:28706:31682	18545	0					
ANR	18548	IdentifierDeclStatement	struct vdagentd_guest_xorg_resolution * res = NULL ;	895:4:28712:28761	18545	0	True				
ANR	18549	IdentifierDecl	* res = NULL		18545	0					
ANR	18550	IdentifierDeclType	struct vdagentd_guest_xorg_resolution *		18545	0					
ANR	18551	Identifier	res		18545	1					
ANR	18552	AssignmentExpression	* res = NULL		18545	2		=			
ANR	18553	Identifier	NULL		18545	0					
ANR	18554	Identifier	NULL		18545	1					
ANR	18555	IdentifierDeclStatement	"int i , width = 0 , height = 0 , screen_count = 0 ;"	896:4:28767:28813	18545	1	True				
ANR	18556	IdentifierDecl	i		18545	0					
ANR	18557	IdentifierDeclType	int		18545	0					
ANR	18558	Identifier	i		18545	1					
ANR	18559	IdentifierDecl	width = 0		18545	1					
ANR	18560	IdentifierDeclType	int		18545	0					
ANR	18561	Identifier	width		18545	1					
ANR	18562	AssignmentExpression	width = 0		18545	2		=			
ANR	18563	Identifier	width		18545	0					
ANR	18564	PrimaryExpression	0		18545	1					
ANR	18565	IdentifierDecl	height = 0		18545	2					
ANR	18566	IdentifierDeclType	int		18545	0					
ANR	18567	Identifier	height		18545	1					
ANR	18568	AssignmentExpression	height = 0		18545	2		=			
ANR	18569	Identifier	height		18545	0					
ANR	18570	PrimaryExpression	0		18545	1					
ANR	18571	IdentifierDecl	screen_count = 0		18545	3					
ANR	18572	IdentifierDeclType	int		18545	0					
ANR	18573	Identifier	screen_count		18545	1					
ANR	18574	AssignmentExpression	screen_count = 0		18545	2		=			
ANR	18575	Identifier	screen_count		18545	0					
ANR	18576	PrimaryExpression	0		18545	1					
ANR	18577	IfStatement	if ( x11 -> has_xrandr )		18545	2					
ANR	18578	Condition	x11 -> has_xrandr	898:8:28824:28838	18545	0	True				
ANR	18579	PtrMemberAccess	x11 -> has_xrandr		18545	0					
ANR	18580	Identifier	x11		18545	0					
ANR	18581	Identifier	has_xrandr		18545	1					
ANR	18582	CompoundStatement		6:8:144:171	18545	1					
ANR	18583	IdentifierDeclStatement	VDAgentMonitorsConfig * curr ;	899:8:28851:28878	18545	0	True				
ANR	18584	IdentifierDecl	* curr		18545	0					
ANR	18585	IdentifierDeclType	VDAgentMonitorsConfig *		18545	0					
ANR	18586	Identifier	curr		18545	1					
ANR	18587	IfStatement	if ( update )		18545	1					
ANR	18588	Condition	update	901:12:28893:28898	18545	0	True				
ANR	18589	Identifier	update		18545	0					
ANR	18590	ExpressionStatement	"update_randr_res ( x11 , 0 )"	902:12:28913:28937	18545	1	True				
ANR	18591	CallExpression	"update_randr_res ( x11 , 0 )"		18545	0					
ANR	18592	Callee	update_randr_res		18545	0					
ANR	18593	Identifier	update_randr_res		18545	0					
ANR	18594	ArgumentList	x11		18545	1					
ANR	18595	Argument	x11		18545	0					
ANR	18596	Identifier	x11		18545	0					
ANR	18597	Argument	0		18545	1					
ANR	18598	PrimaryExpression	0		18545	0					
ANR	18599	ExpressionStatement	curr = get_current_mon_config ( x11 )	904:8:28948:28982	18545	2	True				
ANR	18600	AssignmentExpression	curr = get_current_mon_config ( x11 )		18545	0		=			
ANR	18601	Identifier	curr		18545	0					
ANR	18602	CallExpression	get_current_mon_config ( x11 )		18545	1					
ANR	18603	Callee	get_current_mon_config		18545	0					
ANR	18604	Identifier	get_current_mon_config		18545	0					
ANR	18605	ArgumentList	x11		18545	1					
ANR	18606	Argument	x11		18545	0					
ANR	18607	Identifier	x11		18545	0					
ANR	18608	IfStatement	if ( ! curr )		18545	3					
ANR	18609	Condition	! curr	905:12:28996:29000	18545	0	True				
ANR	18610	UnaryOperationExpression	! curr		18545	0					
ANR	18611	UnaryOperator	!		18545	0					
ANR	18612	Identifier	curr		18545	1					
ANR	18613	GotoStatement	goto no_info ;	906:12:29015:29027	18545	1	True				
ANR	18614	Identifier	no_info		18545	0					
ANR	18615	ExpressionStatement	screen_count = curr -> num_of_monitors	908:8:29038:29074	18545	4	True				
ANR	18616	AssignmentExpression	screen_count = curr -> num_of_monitors		18545	0		=			
ANR	18617	Identifier	screen_count		18545	0					
ANR	18618	PtrMemberAccess	curr -> num_of_monitors		18545	1					
ANR	18619	Identifier	curr		18545	0					
ANR	18620	Identifier	num_of_monitors		18545	1					
ANR	18621	ExpressionStatement	res = malloc ( screen_count * sizeof ( * res ) )	909:8:29084:29125	18545	5	True				
ANR	18622	AssignmentExpression	res = malloc ( screen_count * sizeof ( * res ) )		18545	0		=			
ANR	18623	Identifier	res		18545	0					
ANR	18624	CallExpression	malloc ( screen_count * sizeof ( * res ) )		18545	1					
ANR	18625	Callee	malloc		18545	0					
ANR	18626	Identifier	malloc		18545	0					
ANR	18627	ArgumentList	screen_count * sizeof ( * res )		18545	1					
ANR	18628	Argument	screen_count * sizeof ( * res )		18545	0					
ANR	18629	MultiplicativeExpression	screen_count * sizeof ( * res )		18545	0		*			
ANR	18630	Identifier	screen_count		18545	0					
ANR	18631	SizeofExpression	sizeof ( * res )		18545	1					
ANR	18632	Sizeof	sizeof		18545	0					
ANR	18633	UnaryOperationExpression	* res		18545	1					
ANR	18634	UnaryOperator	*		18545	0					
ANR	18635	Identifier	res		18545	1					
ANR	18636	IfStatement	if ( ! res )		18545	6					
ANR	18637	Condition	! res	910:12:29139:29142	18545	0	True				
ANR	18638	UnaryOperationExpression	! res		18545	0					
ANR	18639	UnaryOperator	!		18545	0					
ANR	18640	Identifier	res		18545	1					
ANR	18641	CompoundStatement		17:18:438:438	18545	1					
ANR	18642	ExpressionStatement	free ( curr )	911:12:29159:29169	18545	0	True				
ANR	18643	CallExpression	free ( curr )		18545	0					
ANR	18644	Callee	free		18545	0					
ANR	18645	Identifier	free		18545	0					
ANR	18646	ArgumentList	curr		18545	1					
ANR	18647	Argument	curr		18545	0					
ANR	18648	Identifier	curr		18545	0					
ANR	18649	GotoStatement	goto no_mem ;	912:12:29183:29194	18545	1	True				
ANR	18650	Identifier	no_mem		18545	0					
ANR	18651	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		18545	7					
ANR	18652	ForInit	i = 0 ;	915:13:29220:29225	18545	0	True				
ANR	18653	AssignmentExpression	i = 0		18545	0		=			
ANR	18654	Identifier	i		18545	0					
ANR	18655	PrimaryExpression	0		18545	1					
ANR	18656	Condition	i < screen_count	915:20:29227:29242	18545	1	True				
ANR	18657	RelationalExpression	i < screen_count		18545	0		<			
ANR	18658	Identifier	i		18545	0					
ANR	18659	Identifier	screen_count		18545	1					
ANR	18660	PostIncDecOperationExpression	i ++	915:38:29245:29247	18545	2	True				
ANR	18661	Identifier	i		18545	0					
ANR	18662	IncDec	++		18545	1					
ANR	18663	CompoundStatement		22:43:543:543	18545	3					
ANR	18664	ExpressionStatement	res [ i ] . width = curr -> monitors [ i ] . width	916:12:29264:29303	18545	0	True				
ANR	18665	AssignmentExpression	res [ i ] . width = curr -> monitors [ i ] . width		18545	0		=			
ANR	18666	MemberAccess	res [ i ] . width		18545	0					
ANR	18667	ArrayIndexing	res [ i ]		18545	0					
ANR	18668	Identifier	res		18545	0					
ANR	18669	Identifier	i		18545	1					
ANR	18670	Identifier	width		18545	1					
ANR	18671	MemberAccess	curr -> monitors [ i ] . width		18545	1					
ANR	18672	ArrayIndexing	curr -> monitors [ i ]		18545	0					
ANR	18673	PtrMemberAccess	curr -> monitors		18545	0					
ANR	18674	Identifier	curr		18545	0					
ANR	18675	Identifier	monitors		18545	1					
ANR	18676	Identifier	i		18545	1					
ANR	18677	Identifier	width		18545	1					
ANR	18678	ExpressionStatement	res [ i ] . height = curr -> monitors [ i ] . height	917:12:29317:29357	18545	1	True				
ANR	18679	AssignmentExpression	res [ i ] . height = curr -> monitors [ i ] . height		18545	0		=			
ANR	18680	MemberAccess	res [ i ] . height		18545	0					
ANR	18681	ArrayIndexing	res [ i ]		18545	0					
ANR	18682	Identifier	res		18545	0					
ANR	18683	Identifier	i		18545	1					
ANR	18684	Identifier	height		18545	1					
ANR	18685	MemberAccess	curr -> monitors [ i ] . height		18545	1					
ANR	18686	ArrayIndexing	curr -> monitors [ i ]		18545	0					
ANR	18687	PtrMemberAccess	curr -> monitors		18545	0					
ANR	18688	Identifier	curr		18545	0					
ANR	18689	Identifier	monitors		18545	1					
ANR	18690	Identifier	i		18545	1					
ANR	18691	Identifier	height		18545	1					
ANR	18692	ExpressionStatement	res [ i ] . x = curr -> monitors [ i ] . x	918:12:29371:29401	18545	2	True				
ANR	18693	AssignmentExpression	res [ i ] . x = curr -> monitors [ i ] . x		18545	0		=			
ANR	18694	MemberAccess	res [ i ] . x		18545	0					
ANR	18695	ArrayIndexing	res [ i ]		18545	0					
ANR	18696	Identifier	res		18545	0					
ANR	18697	Identifier	i		18545	1					
ANR	18698	Identifier	x		18545	1					
ANR	18699	MemberAccess	curr -> monitors [ i ] . x		18545	1					
ANR	18700	ArrayIndexing	curr -> monitors [ i ]		18545	0					
ANR	18701	PtrMemberAccess	curr -> monitors		18545	0					
ANR	18702	Identifier	curr		18545	0					
ANR	18703	Identifier	monitors		18545	1					
ANR	18704	Identifier	i		18545	1					
ANR	18705	Identifier	x		18545	1					
ANR	18706	ExpressionStatement	res [ i ] . y = curr -> monitors [ i ] . y	919:12:29415:29445	18545	3	True				
ANR	18707	AssignmentExpression	res [ i ] . y = curr -> monitors [ i ] . y		18545	0		=			
ANR	18708	MemberAccess	res [ i ] . y		18545	0					
ANR	18709	ArrayIndexing	res [ i ]		18545	0					
ANR	18710	Identifier	res		18545	0					
ANR	18711	Identifier	i		18545	1					
ANR	18712	Identifier	y		18545	1					
ANR	18713	MemberAccess	curr -> monitors [ i ] . y		18545	1					
ANR	18714	ArrayIndexing	curr -> monitors [ i ]		18545	0					
ANR	18715	PtrMemberAccess	curr -> monitors		18545	0					
ANR	18716	Identifier	curr		18545	0					
ANR	18717	Identifier	monitors		18545	1					
ANR	18718	Identifier	i		18545	1					
ANR	18719	Identifier	y		18545	1					
ANR	18720	ExpressionStatement	free ( curr )	921:8:29465:29475	18545	8	True				
ANR	18721	CallExpression	free ( curr )		18545	0					
ANR	18722	Callee	free		18545	0					
ANR	18723	Identifier	free		18545	0					
ANR	18724	ArgumentList	curr		18545	1					
ANR	18725	Argument	curr		18545	0					
ANR	18726	Identifier	curr		18545	0					
ANR	18727	ExpressionStatement	width = x11 -> width [ 0 ]	922:8:29485:29507	18545	9	True				
ANR	18728	AssignmentExpression	width = x11 -> width [ 0 ]		18545	0		=			
ANR	18729	Identifier	width		18545	0					
ANR	18730	ArrayIndexing	x11 -> width [ 0 ]		18545	1					
ANR	18731	PtrMemberAccess	x11 -> width		18545	0					
ANR	18732	Identifier	x11		18545	0					
ANR	18733	Identifier	width		18545	1					
ANR	18734	PrimaryExpression	0		18545	1					
ANR	18735	ExpressionStatement	height = x11 -> height [ 0 ]	923:8:29517:29540	18545	10	True				
ANR	18736	AssignmentExpression	height = x11 -> height [ 0 ]		18545	0		=			
ANR	18737	Identifier	height		18545	0					
ANR	18738	ArrayIndexing	x11 -> height [ 0 ]		18545	1					
ANR	18739	PtrMemberAccess	x11 -> height		18545	0					
ANR	18740	Identifier	x11		18545	0					
ANR	18741	Identifier	height		18545	1					
ANR	18742	PrimaryExpression	0		18545	1					
ANR	18743	ElseStatement	else		18545	0					
ANR	18744	IfStatement	if ( x11 -> has_xinerama )		18545	0					
ANR	18745	Condition	x11 -> has_xinerama	924:15:29557:29573	18545	0	True				
ANR	18746	PtrMemberAccess	x11 -> has_xinerama		18545	0					
ANR	18747	Identifier	x11		18545	0					
ANR	18748	Identifier	has_xinerama		18545	1					
ANR	18749	CompoundStatement		32:8:879:917	18545	1					
ANR	18750	IdentifierDeclStatement	XineramaScreenInfo * screen_info = NULL ;	925:8:29586:29624	18545	0	True				
ANR	18751	IdentifierDecl	* screen_info = NULL		18545	0					
ANR	18752	IdentifierDeclType	XineramaScreenInfo *		18545	0					
ANR	18753	Identifier	screen_info		18545	1					
ANR	18754	AssignmentExpression	* screen_info = NULL		18545	2		=			
ANR	18755	Identifier	NULL		18545	0					
ANR	18756	Identifier	NULL		18545	1					
ANR	18757	ExpressionStatement	"screen_info = XineramaQueryScreens ( x11 -> display , & screen_count )"	927:8:29635:29698	18545	1	True				
ANR	18758	AssignmentExpression	"screen_info = XineramaQueryScreens ( x11 -> display , & screen_count )"		18545	0		=			
ANR	18759	Identifier	screen_info		18545	0					
ANR	18760	CallExpression	"XineramaQueryScreens ( x11 -> display , & screen_count )"		18545	1					
ANR	18761	Callee	XineramaQueryScreens		18545	0					
ANR	18762	Identifier	XineramaQueryScreens		18545	0					
ANR	18763	ArgumentList	x11 -> display		18545	1					
ANR	18764	Argument	x11 -> display		18545	0					
ANR	18765	PtrMemberAccess	x11 -> display		18545	0					
ANR	18766	Identifier	x11		18545	0					
ANR	18767	Identifier	display		18545	1					
ANR	18768	Argument	& screen_count		18545	1					
ANR	18769	UnaryOperationExpression	& screen_count		18545	0					
ANR	18770	UnaryOperator	&		18545	0					
ANR	18771	Identifier	screen_count		18545	1					
ANR	18772	IfStatement	if ( ! screen_info )		18545	2					
ANR	18773	Condition	! screen_info	928:12:29712:29723	18545	0	True				
ANR	18774	UnaryOperationExpression	! screen_info		18545	0					
ANR	18775	UnaryOperator	!		18545	0					
ANR	18776	Identifier	screen_info		18545	1					
ANR	18777	GotoStatement	goto no_info ;	929:12:29738:29750	18545	1	True				
ANR	18778	Identifier	no_info		18545	0					
ANR	18779	ExpressionStatement	res = malloc ( screen_count * sizeof ( * res ) )	930:8:29760:29801	18545	3	True				
ANR	18780	AssignmentExpression	res = malloc ( screen_count * sizeof ( * res ) )		18545	0		=			
ANR	18781	Identifier	res		18545	0					
ANR	18782	CallExpression	malloc ( screen_count * sizeof ( * res ) )		18545	1					
ANR	18783	Callee	malloc		18545	0					
ANR	18784	Identifier	malloc		18545	0					
ANR	18785	ArgumentList	screen_count * sizeof ( * res )		18545	1					
ANR	18786	Argument	screen_count * sizeof ( * res )		18545	0					
ANR	18787	MultiplicativeExpression	screen_count * sizeof ( * res )		18545	0		*			
ANR	18788	Identifier	screen_count		18545	0					
ANR	18789	SizeofExpression	sizeof ( * res )		18545	1					
ANR	18790	Sizeof	sizeof		18545	0					
ANR	18791	UnaryOperationExpression	* res		18545	1					
ANR	18792	UnaryOperator	*		18545	0					
ANR	18793	Identifier	res		18545	1					
ANR	18794	IfStatement	if ( ! res )		18545	4					
ANR	18795	Condition	! res	931:12:29815:29818	18545	0	True				
ANR	18796	UnaryOperationExpression	! res		18545	0					
ANR	18797	UnaryOperator	!		18545	0					
ANR	18798	Identifier	res		18545	1					
ANR	18799	CompoundStatement		38:18:1114:1114	18545	1					
ANR	18800	ExpressionStatement	XFree ( screen_info )	932:12:29835:29853	18545	0	True				
ANR	18801	CallExpression	XFree ( screen_info )		18545	0					
ANR	18802	Callee	XFree		18545	0					
ANR	18803	Identifier	XFree		18545	0					
ANR	18804	ArgumentList	screen_info		18545	1					
ANR	18805	Argument	screen_info		18545	0					
ANR	18806	Identifier	screen_info		18545	0					
ANR	18807	GotoStatement	goto no_mem ;	933:12:29867:29878	18545	1	True				
ANR	18808	Identifier	no_mem		18545	0					
ANR	18809	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		18545	5					
ANR	18810	ForInit	i = 0 ;	935:13:29903:29908	18545	0	True				
ANR	18811	AssignmentExpression	i = 0		18545	0		=			
ANR	18812	Identifier	i		18545	0					
ANR	18813	PrimaryExpression	0		18545	1					
ANR	18814	Condition	i < screen_count	935:20:29910:29925	18545	1	True				
ANR	18815	RelationalExpression	i < screen_count		18545	0		<			
ANR	18816	Identifier	i		18545	0					
ANR	18817	Identifier	screen_count		18545	1					
ANR	18818	PostIncDecOperationExpression	i ++	935:38:29928:29930	18545	2	True				
ANR	18819	Identifier	i		18545	0					
ANR	18820	IncDec	++		18545	1					
ANR	18821	CompoundStatement		42:43:1226:1226	18545	3					
ANR	18822	IfStatement	if ( screen_info [ i ] . screen_number >= screen_count )		18545	0					
ANR	18823	Condition	screen_info [ i ] . screen_number >= screen_count	936:16:29951:29994	18545	0	True				
ANR	18824	RelationalExpression	screen_info [ i ] . screen_number >= screen_count		18545	0		>=			
ANR	18825	MemberAccess	screen_info [ i ] . screen_number		18545	0					
ANR	18826	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18827	Identifier	screen_info		18545	0					
ANR	18828	Identifier	i		18545	1					
ANR	18829	Identifier	screen_number		18545	1					
ANR	18830	Identifier	screen_count		18545	1					
ANR	18831	CompoundStatement		43:62:1290:1290	18545	1					
ANR	18832	ExpressionStatement	"syslog ( LOG_ERR , ""Invalid screen number in xinerama screen info (%d >= %d)"" , screen_info [ i ] . screen_number , screen_count )"	937:16:30015:30157	18545	0	True				
ANR	18833	CallExpression	"syslog ( LOG_ERR , ""Invalid screen number in xinerama screen info (%d >= %d)"" , screen_info [ i ] . screen_number , screen_count )"		18545	0					
ANR	18834	Callee	syslog		18545	0					
ANR	18835	Identifier	syslog		18545	0					
ANR	18836	ArgumentList	LOG_ERR		18545	1					
ANR	18837	Argument	LOG_ERR		18545	0					
ANR	18838	Identifier	LOG_ERR		18545	0					
ANR	18839	Argument	"""Invalid screen number in xinerama screen info (%d >= %d)"""		18545	1					
ANR	18840	PrimaryExpression	"""Invalid screen number in xinerama screen info (%d >= %d)"""		18545	0					
ANR	18841	Argument	screen_info [ i ] . screen_number		18545	2					
ANR	18842	MemberAccess	screen_info [ i ] . screen_number		18545	0					
ANR	18843	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18844	Identifier	screen_info		18545	0					
ANR	18845	Identifier	i		18545	1					
ANR	18846	Identifier	screen_number		18545	1					
ANR	18847	Argument	screen_count		18545	3					
ANR	18848	Identifier	screen_count		18545	0					
ANR	18849	ExpressionStatement	XFree ( screen_info )	939:16:30175:30193	18545	1	True				
ANR	18850	CallExpression	XFree ( screen_info )		18545	0					
ANR	18851	Callee	XFree		18545	0					
ANR	18852	Identifier	XFree		18545	0					
ANR	18853	ArgumentList	screen_info		18545	1					
ANR	18854	Argument	screen_info		18545	0					
ANR	18855	Identifier	screen_info		18545	0					
ANR	18856	ExpressionStatement	free ( res )	940:16:30211:30220	18545	2	True				
ANR	18857	CallExpression	free ( res )		18545	0					
ANR	18858	Callee	free		18545	0					
ANR	18859	Identifier	free		18545	0					
ANR	18860	ArgumentList	res		18545	1					
ANR	18861	Argument	res		18545	0					
ANR	18862	Identifier	res		18545	0					
ANR	18863	ReturnStatement	return ;	941:16:30238:30244	18545	3	True				
ANR	18864	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . width = screen_info [ i ] . width	943:12:30272:30334	18545	1	True				
ANR	18865	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . width = screen_info [ i ] . width		18545	0		=			
ANR	18866	MemberAccess	res [ screen_info [ i ] . screen_number ] . width		18545	0					
ANR	18867	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		18545	0					
ANR	18868	Identifier	res		18545	0					
ANR	18869	MemberAccess	screen_info [ i ] . screen_number		18545	1					
ANR	18870	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18871	Identifier	screen_info		18545	0					
ANR	18872	Identifier	i		18545	1					
ANR	18873	Identifier	screen_number		18545	1					
ANR	18874	Identifier	width		18545	1					
ANR	18875	MemberAccess	screen_info [ i ] . width		18545	1					
ANR	18876	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18877	Identifier	screen_info		18545	0					
ANR	18878	Identifier	i		18545	1					
ANR	18879	Identifier	width		18545	1					
ANR	18880	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . height = screen_info [ i ] . height	944:12:30348:30412	18545	2	True				
ANR	18881	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . height = screen_info [ i ] . height		18545	0		=			
ANR	18882	MemberAccess	res [ screen_info [ i ] . screen_number ] . height		18545	0					
ANR	18883	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		18545	0					
ANR	18884	Identifier	res		18545	0					
ANR	18885	MemberAccess	screen_info [ i ] . screen_number		18545	1					
ANR	18886	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18887	Identifier	screen_info		18545	0					
ANR	18888	Identifier	i		18545	1					
ANR	18889	Identifier	screen_number		18545	1					
ANR	18890	Identifier	height		18545	1					
ANR	18891	MemberAccess	screen_info [ i ] . height		18545	1					
ANR	18892	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18893	Identifier	screen_info		18545	0					
ANR	18894	Identifier	i		18545	1					
ANR	18895	Identifier	height		18545	1					
ANR	18896	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . x = screen_info [ i ] . x_org	945:12:30426:30484	18545	3	True				
ANR	18897	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . x = screen_info [ i ] . x_org		18545	0		=			
ANR	18898	MemberAccess	res [ screen_info [ i ] . screen_number ] . x		18545	0					
ANR	18899	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		18545	0					
ANR	18900	Identifier	res		18545	0					
ANR	18901	MemberAccess	screen_info [ i ] . screen_number		18545	1					
ANR	18902	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18903	Identifier	screen_info		18545	0					
ANR	18904	Identifier	i		18545	1					
ANR	18905	Identifier	screen_number		18545	1					
ANR	18906	Identifier	x		18545	1					
ANR	18907	MemberAccess	screen_info [ i ] . x_org		18545	1					
ANR	18908	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18909	Identifier	screen_info		18545	0					
ANR	18910	Identifier	i		18545	1					
ANR	18911	Identifier	x_org		18545	1					
ANR	18912	ExpressionStatement	res [ screen_info [ i ] . screen_number ] . y = screen_info [ i ] . y_org	946:12:30498:30556	18545	4	True				
ANR	18913	AssignmentExpression	res [ screen_info [ i ] . screen_number ] . y = screen_info [ i ] . y_org		18545	0		=			
ANR	18914	MemberAccess	res [ screen_info [ i ] . screen_number ] . y		18545	0					
ANR	18915	ArrayIndexing	res [ screen_info [ i ] . screen_number ]		18545	0					
ANR	18916	Identifier	res		18545	0					
ANR	18917	MemberAccess	screen_info [ i ] . screen_number		18545	1					
ANR	18918	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18919	Identifier	screen_info		18545	0					
ANR	18920	Identifier	i		18545	1					
ANR	18921	Identifier	screen_number		18545	1					
ANR	18922	Identifier	y		18545	1					
ANR	18923	MemberAccess	screen_info [ i ] . y_org		18545	1					
ANR	18924	ArrayIndexing	screen_info [ i ]		18545	0					
ANR	18925	Identifier	screen_info		18545	0					
ANR	18926	Identifier	i		18545	1					
ANR	18927	Identifier	y_org		18545	1					
ANR	18928	ExpressionStatement	XFree ( screen_info )	948:8:30576:30594	18545	6	True				
ANR	18929	CallExpression	XFree ( screen_info )		18545	0					
ANR	18930	Callee	XFree		18545	0					
ANR	18931	Identifier	XFree		18545	0					
ANR	18932	ArgumentList	screen_info		18545	1					
ANR	18933	Argument	screen_info		18545	0					
ANR	18934	Identifier	screen_info		18545	0					
ANR	18935	ExpressionStatement	width = x11 -> width [ 0 ]	949:8:30604:30626	18545	7	True				
ANR	18936	AssignmentExpression	width = x11 -> width [ 0 ]		18545	0		=			
ANR	18937	Identifier	width		18545	0					
ANR	18938	ArrayIndexing	x11 -> width [ 0 ]		18545	1					
ANR	18939	PtrMemberAccess	x11 -> width		18545	0					
ANR	18940	Identifier	x11		18545	0					
ANR	18941	Identifier	width		18545	1					
ANR	18942	PrimaryExpression	0		18545	1					
ANR	18943	ExpressionStatement	height = x11 -> height [ 0 ]	950:8:30636:30659	18545	8	True				
ANR	18944	AssignmentExpression	height = x11 -> height [ 0 ]		18545	0		=			
ANR	18945	Identifier	height		18545	0					
ANR	18946	ArrayIndexing	x11 -> height [ 0 ]		18545	1					
ANR	18947	PtrMemberAccess	x11 -> height		18545	0					
ANR	18948	Identifier	x11		18545	0					
ANR	18949	Identifier	height		18545	1					
ANR	18950	PrimaryExpression	0		18545	1					
ANR	18951	ElseStatement	else		18545	0					
ANR	18952	CompoundStatement		58:11:1965:1965	18545	0					
ANR	18953	Label	no_info :	952:0:30674:30681	18545	0	True				
ANR	18954	Identifier	no_info		18545	0					
ANR	18955	ExpressionStatement	screen_count = x11 -> screen_count	953:8:30691:30723	18545	1	True				
ANR	18956	AssignmentExpression	screen_count = x11 -> screen_count		18545	0		=			
ANR	18957	Identifier	screen_count		18545	0					
ANR	18958	PtrMemberAccess	x11 -> screen_count		18545	1					
ANR	18959	Identifier	x11		18545	0					
ANR	18960	Identifier	screen_count		18545	1					
ANR	18961	ExpressionStatement	res = malloc ( screen_count * sizeof ( * res ) )	954:8:30733:30774	18545	2	True				
ANR	18962	AssignmentExpression	res = malloc ( screen_count * sizeof ( * res ) )		18545	0		=			
ANR	18963	Identifier	res		18545	0					
ANR	18964	CallExpression	malloc ( screen_count * sizeof ( * res ) )		18545	1					
ANR	18965	Callee	malloc		18545	0					
ANR	18966	Identifier	malloc		18545	0					
ANR	18967	ArgumentList	screen_count * sizeof ( * res )		18545	1					
ANR	18968	Argument	screen_count * sizeof ( * res )		18545	0					
ANR	18969	MultiplicativeExpression	screen_count * sizeof ( * res )		18545	0		*			
ANR	18970	Identifier	screen_count		18545	0					
ANR	18971	SizeofExpression	sizeof ( * res )		18545	1					
ANR	18972	Sizeof	sizeof		18545	0					
ANR	18973	UnaryOperationExpression	* res		18545	1					
ANR	18974	UnaryOperator	*		18545	0					
ANR	18975	Identifier	res		18545	1					
ANR	18976	IfStatement	if ( ! res )		18545	3					
ANR	18977	Condition	! res	955:12:30788:30791	18545	0	True				
ANR	18978	UnaryOperationExpression	! res		18545	0					
ANR	18979	UnaryOperator	!		18545	0					
ANR	18980	Identifier	res		18545	1					
ANR	18981	GotoStatement	goto no_mem ;	956:12:30806:30817	18545	1	True				
ANR	18982	Identifier	no_mem		18545	0					
ANR	18983	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		18545	4					
ANR	18984	ForInit	i = 0 ;	957:13:30832:30837	18545	0	True				
ANR	18985	AssignmentExpression	i = 0		18545	0		=			
ANR	18986	Identifier	i		18545	0					
ANR	18987	PrimaryExpression	0		18545	1					
ANR	18988	Condition	i < screen_count	957:20:30839:30854	18545	1	True				
ANR	18989	RelationalExpression	i < screen_count		18545	0		<			
ANR	18990	Identifier	i		18545	0					
ANR	18991	Identifier	screen_count		18545	1					
ANR	18992	PostIncDecOperationExpression	i ++	957:38:30857:30859	18545	2	True				
ANR	18993	Identifier	i		18545	0					
ANR	18994	IncDec	++		18545	1					
ANR	18995	CompoundStatement		64:43:2155:2155	18545	3					
ANR	18996	ExpressionStatement	res [ i ] . width = x11 -> width [ i ]	958:12:30876:30905	18545	0	True				
ANR	18997	AssignmentExpression	res [ i ] . width = x11 -> width [ i ]		18545	0		=			
ANR	18998	MemberAccess	res [ i ] . width		18545	0					
ANR	18999	ArrayIndexing	res [ i ]		18545	0					
ANR	19000	Identifier	res		18545	0					
ANR	19001	Identifier	i		18545	1					
ANR	19002	Identifier	width		18545	1					
ANR	19003	ArrayIndexing	x11 -> width [ i ]		18545	1					
ANR	19004	PtrMemberAccess	x11 -> width		18545	0					
ANR	19005	Identifier	x11		18545	0					
ANR	19006	Identifier	width		18545	1					
ANR	19007	Identifier	i		18545	1					
ANR	19008	ExpressionStatement	res [ i ] . height = x11 -> height [ i ]	959:12:30919:30949	18545	1	True				
ANR	19009	AssignmentExpression	res [ i ] . height = x11 -> height [ i ]		18545	0		=			
ANR	19010	MemberAccess	res [ i ] . height		18545	0					
ANR	19011	ArrayIndexing	res [ i ]		18545	0					
ANR	19012	Identifier	res		18545	0					
ANR	19013	Identifier	i		18545	1					
ANR	19014	Identifier	height		18545	1					
ANR	19015	ArrayIndexing	x11 -> height [ i ]		18545	1					
ANR	19016	PtrMemberAccess	x11 -> height		18545	0					
ANR	19017	Identifier	x11		18545	0					
ANR	19018	Identifier	height		18545	1					
ANR	19019	Identifier	i		18545	1					
ANR	19020	ExpressionStatement	res [ i ] . x = width	961:12:31032:31048	18545	2	True				
ANR	19021	AssignmentExpression	res [ i ] . x = width		18545	0		=			
ANR	19022	MemberAccess	res [ i ] . x		18545	0					
ANR	19023	ArrayIndexing	res [ i ]		18545	0					
ANR	19024	Identifier	res		18545	0					
ANR	19025	Identifier	i		18545	1					
ANR	19026	Identifier	x		18545	1					
ANR	19027	Identifier	width		18545	1					
ANR	19028	ExpressionStatement	res [ i ] . y = 0	962:12:31062:31074	18545	3	True				
ANR	19029	AssignmentExpression	res [ i ] . y = 0		18545	0		=			
ANR	19030	MemberAccess	res [ i ] . y		18545	0					
ANR	19031	ArrayIndexing	res [ i ]		18545	0					
ANR	19032	Identifier	res		18545	0					
ANR	19033	Identifier	i		18545	1					
ANR	19034	Identifier	y		18545	1					
ANR	19035	PrimaryExpression	0		18545	1					
ANR	19036	ExpressionStatement	width += x11 -> width [ i ]	963:12:31088:31110	18545	4	True				
ANR	19037	AssignmentExpression	width += x11 -> width [ i ]		18545	0		+=			
ANR	19038	Identifier	width		18545	0					
ANR	19039	ArrayIndexing	x11 -> width [ i ]		18545	1					
ANR	19040	PtrMemberAccess	x11 -> width		18545	0					
ANR	19041	Identifier	x11		18545	0					
ANR	19042	Identifier	width		18545	1					
ANR	19043	Identifier	i		18545	1					
ANR	19044	IfStatement	if ( x11 -> height [ i ] > height )		18545	5					
ANR	19045	Condition	x11 -> height [ i ] > height	964:16:31128:31150	18545	0	True				
ANR	19046	RelationalExpression	x11 -> height [ i ] > height		18545	0		>			
ANR	19047	ArrayIndexing	x11 -> height [ i ]		18545	0					
ANR	19048	PtrMemberAccess	x11 -> height		18545	0					
ANR	19049	Identifier	x11		18545	0					
ANR	19050	Identifier	height		18545	1					
ANR	19051	Identifier	i		18545	1					
ANR	19052	Identifier	height		18545	1					
ANR	19053	ExpressionStatement	height = x11 -> height [ i ]	965:16:31169:31192	18545	1	True				
ANR	19054	AssignmentExpression	height = x11 -> height [ i ]		18545	0		=			
ANR	19055	Identifier	height		18545	0					
ANR	19056	ArrayIndexing	x11 -> height [ i ]		18545	1					
ANR	19057	PtrMemberAccess	x11 -> height		18545	0					
ANR	19058	Identifier	x11		18545	0					
ANR	19059	Identifier	height		18545	1					
ANR	19060	Identifier	i		18545	1					
ANR	19061	IfStatement	if ( x11 -> debug )		18545	3					
ANR	19062	Condition	x11 -> debug	969:8:31219:31228	18545	0	True				
ANR	19063	PtrMemberAccess	x11 -> debug		18545	0					
ANR	19064	Identifier	x11		18545	0					
ANR	19065	Identifier	debug		18545	1					
ANR	19066	CompoundStatement		76:20:2524:2524	18545	1					
ANR	19067	ForStatement	for ( i = 0 ; i < screen_count ; i ++ )		18545	0					
ANR	19068	ForInit	i = 0 ;	970:13:31246:31251	18545	0	True				
ANR	19069	AssignmentExpression	i = 0		18545	0		=			
ANR	19070	Identifier	i		18545	0					
ANR	19071	PrimaryExpression	0		18545	1					
ANR	19072	Condition	i < screen_count	970:20:31253:31268	18545	1	True				
ANR	19073	RelationalExpression	i < screen_count		18545	0		<			
ANR	19074	Identifier	i		18545	0					
ANR	19075	Identifier	screen_count		18545	1					
ANR	19076	PostIncDecOperationExpression	i ++	970:38:31271:31273	18545	2	True				
ANR	19077	Identifier	i		18545	0					
ANR	19078	IncDec	++		18545	1					
ANR	19079	ExpressionStatement	"syslog ( LOG_DEBUG , ""Screen %d %dx%d%+d%+d"" , i , res [ i ] . width , res [ i ] . height , res [ i ] . x , res [ i ] . y )"	971:12:31288:31401	18545	3	True				
ANR	19080	CallExpression	"syslog ( LOG_DEBUG , ""Screen %d %dx%d%+d%+d"" , i , res [ i ] . width , res [ i ] . height , res [ i ] . x , res [ i ] . y )"		18545	0					
ANR	19081	Callee	syslog		18545	0					
ANR	19082	Identifier	syslog		18545	0					
ANR	19083	ArgumentList	LOG_DEBUG		18545	1					
ANR	19084	Argument	LOG_DEBUG		18545	0					
ANR	19085	Identifier	LOG_DEBUG		18545	0					
ANR	19086	Argument	"""Screen %d %dx%d%+d%+d"""		18545	1					
ANR	19087	PrimaryExpression	"""Screen %d %dx%d%+d%+d"""		18545	0					
ANR	19088	Argument	i		18545	2					
ANR	19089	Identifier	i		18545	0					
ANR	19090	Argument	res [ i ] . width		18545	3					
ANR	19091	MemberAccess	res [ i ] . width		18545	0					
ANR	19092	ArrayIndexing	res [ i ]		18545	0					
ANR	19093	Identifier	res		18545	0					
ANR	19094	Identifier	i		18545	1					
ANR	19095	Identifier	width		18545	1					
ANR	19096	Argument	res [ i ] . height		18545	4					
ANR	19097	MemberAccess	res [ i ] . height		18545	0					
ANR	19098	ArrayIndexing	res [ i ]		18545	0					
ANR	19099	Identifier	res		18545	0					
ANR	19100	Identifier	i		18545	1					
ANR	19101	Identifier	height		18545	1					
ANR	19102	Argument	res [ i ] . x		18545	5					
ANR	19103	MemberAccess	res [ i ] . x		18545	0					
ANR	19104	ArrayIndexing	res [ i ]		18545	0					
ANR	19105	Identifier	res		18545	0					
ANR	19106	Identifier	i		18545	1					
ANR	19107	Identifier	x		18545	1					
ANR	19108	Argument	res [ i ] . y		18545	6					
ANR	19109	MemberAccess	res [ i ] . y		18545	0					
ANR	19110	ArrayIndexing	res [ i ]		18545	0					
ANR	19111	Identifier	res		18545	0					
ANR	19112	Identifier	i		18545	1					
ANR	19113	Identifier	y		18545	1					
ANR	19114	ExpressionStatement	"udscs_write ( x11 -> vdagentd , VDAGENTD_GUEST_XORG_RESOLUTION , width , height , ( uint8_t * ) res , screen_count * sizeof ( * res ) )"	975:4:31414:31548	18545	4	True				
ANR	19115	CallExpression	"udscs_write ( x11 -> vdagentd , VDAGENTD_GUEST_XORG_RESOLUTION , width , height , ( uint8_t * ) res , screen_count * sizeof ( * res ) )"		18545	0					
ANR	19116	Callee	udscs_write		18545	0					
ANR	19117	Identifier	udscs_write		18545	0					
ANR	19118	ArgumentList	x11 -> vdagentd		18545	1					
ANR	19119	Argument	x11 -> vdagentd		18545	0					
ANR	19120	PtrMemberAccess	x11 -> vdagentd		18545	0					
ANR	19121	Identifier	x11		18545	0					
ANR	19122	Identifier	vdagentd		18545	1					
ANR	19123	Argument	VDAGENTD_GUEST_XORG_RESOLUTION		18545	1					
ANR	19124	Identifier	VDAGENTD_GUEST_XORG_RESOLUTION		18545	0					
ANR	19125	Argument	width		18545	2					
ANR	19126	Identifier	width		18545	0					
ANR	19127	Argument	height		18545	3					
ANR	19128	Identifier	height		18545	0					
ANR	19129	Argument	( uint8_t * ) res		18545	4					
ANR	19130	CastExpression	( uint8_t * ) res		18545	0					
ANR	19131	CastTarget	uint8_t *		18545	0					
ANR	19132	Identifier	res		18545	1					
ANR	19133	Argument	screen_count * sizeof ( * res )		18545	5					
ANR	19134	MultiplicativeExpression	screen_count * sizeof ( * res )		18545	0		*			
ANR	19135	Identifier	screen_count		18545	0					
ANR	19136	SizeofExpression	sizeof ( * res )		18545	1					
ANR	19137	Sizeof	sizeof		18545	0					
ANR	19138	UnaryOperationExpression	* res		18545	1					
ANR	19139	UnaryOperator	*		18545	0					
ANR	19140	Identifier	res		18545	1					
ANR	19141	ExpressionStatement	free ( res )	977:4:31554:31563	18545	5	True				
ANR	19142	CallExpression	free ( res )		18545	0					
ANR	19143	Callee	free		18545	0					
ANR	19144	Identifier	free		18545	0					
ANR	19145	ArgumentList	res		18545	1					
ANR	19146	Argument	res		18545	0					
ANR	19147	Identifier	res		18545	0					
ANR	19148	ReturnStatement	return ;	978:4:31569:31575	18545	6	True				
ANR	19149	Label	no_mem :	979:0:31577:31583	18545	7	True				
ANR	19150	Identifier	no_mem		18545	0					
ANR	19151	ExpressionStatement	"syslog ( LOG_ERR , ""out of memory while trying to send resolutions, not sending resolutions."" )"	980:4:31589:31680	18545	8	True				
ANR	19152	CallExpression	"syslog ( LOG_ERR , ""out of memory while trying to send resolutions, not sending resolutions."" )"		18545	0					
ANR	19153	Callee	syslog		18545	0					
ANR	19154	Identifier	syslog		18545	0					
ANR	19155	ArgumentList	LOG_ERR		18545	1					
ANR	19156	Argument	LOG_ERR		18545	0					
ANR	19157	Identifier	LOG_ERR		18545	0					
ANR	19158	Argument	"""out of memory while trying to send resolutions, not sending resolutions."""		18545	1					
ANR	19159	PrimaryExpression	"""out of memory while trying to send resolutions, not sending resolutions."""		18545	0					
ANR	19160	ReturnType	void		18545	1					
ANR	19161	Identifier	vdagent_x11_send_daemon_guest_xorg_res		18545	2					
ANR	19162	ParameterList	"struct vdagent_x11 * x11 , int update"		18545	3					
ANR	19163	Parameter	struct vdagent_x11 * x11	893:44:28669:28691	18545	0	True				
ANR	19164	ParameterType	struct vdagent_x11 *		18545	0					
ANR	19165	Identifier	x11		18545	1					
ANR	19166	Parameter	int update	893:69:28694:28703	18545	1	True				
ANR	19167	ParameterType	int		18545	0					
ANR	19168	Identifier	update		18545	1					
ANR	19169	CFGEntryNode	ENTRY		18545		True				
ANR	19170	CFGExitNode	EXIT		18545		True				
ANR	19171	Symbol	res [ i ] . y		18545						
ANR	19172	Symbol	screen_count		18545						
ANR	19173	Symbol	curr -> monitors		18545						
ANR	19174	Symbol	res [ i ] . x		18545						
ANR	19175	Symbol	res [ screen_info [ i ] . screen_number ] . height		18545						
ANR	19176	Symbol	x11 -> vdagentd		18545						
ANR	19177	Symbol	* screen_info [ i ] . screen_number		18545						
ANR	19178	Symbol	curr -> monitors [ i ] . x		18545						
ANR	19179	Symbol	curr -> monitors [ i ] . y		18545						
ANR	19180	Symbol	LOG_ERR		18545						
ANR	19181	Symbol	curr -> num_of_monitors		18545						
ANR	19182	Symbol	screen_info [ i ] . width		18545						
ANR	19183	Symbol	x11		18545						
ANR	19184	Symbol	curr		18545						
ANR	19185	Symbol	get_current_mon_config		18545						
ANR	19186	Symbol	x11 -> height		18545						
ANR	19187	Symbol	height		18545						
ANR	19188	Symbol	res		18545						
ANR	19189	Symbol	* * i		18545						
ANR	19190	Symbol	NULL		18545						
ANR	19191	Symbol	res [ screen_info [ i ] . screen_number ] . width		18545						
ANR	19192	Symbol	x11 -> has_xinerama		18545						
ANR	19193	Symbol	curr -> monitors [ i ] . height		18545						
ANR	19194	Symbol	res [ i ] . width		18545						
ANR	19195	Symbol	* curr -> monitors		18545						
ANR	19196	Symbol	x11 -> screen_count		18545						
ANR	19197	Symbol	res [ i ] . height		18545						
ANR	19198	Symbol	x11 -> display		18545						
ANR	19199	Symbol	screen_info [ i ] . height		18545						
ANR	19200	Symbol	* screen_info		18545						
ANR	19201	Symbol	XineramaQueryScreens		18545						
ANR	19202	Symbol	* x11		18545						
ANR	19203	Symbol	x11 -> width		18545						
ANR	19204	Symbol	* * curr		18545						
ANR	19205	Symbol	screen_info		18545						
ANR	19206	Symbol	update		18545						
ANR	19207	Symbol	* x11 -> width		18545						
ANR	19208	Symbol	* res		18545						
ANR	19209	Symbol	screen_info [ i ] . y_org		18545						
ANR	19210	Symbol	curr -> monitors [ i ] . width		18545						
ANR	19211	Symbol	* x11 -> height		18545						
ANR	19212	Symbol	malloc		18545						
ANR	19213	Symbol	VDAGENTD_GUEST_XORG_RESOLUTION		18545						
ANR	19214	Symbol	res [ screen_info [ i ] . screen_number ] . y		18545						
ANR	19215	Symbol	* * screen_info		18545						
ANR	19216	Symbol	res [ screen_info [ i ] . screen_number ] . x		18545						
ANR	19217	Symbol	x11 -> debug		18545						
ANR	19218	Symbol	i		18545						
ANR	19219	Symbol	* * x11		18545						
ANR	19220	Symbol	screen_info [ i ] . screen_number		18545						
ANR	19221	Symbol	& screen_count		18545						
ANR	19222	Symbol	* i		18545						
ANR	19223	Symbol	* curr		18545						
ANR	19224	Symbol	width		18545						
ANR	19225	Symbol	screen_info [ i ] . x_org		18545						
ANR	19226	Symbol	LOG_DEBUG		18545						
ANR	19227	Symbol	x11 -> has_xrandr		18545						
