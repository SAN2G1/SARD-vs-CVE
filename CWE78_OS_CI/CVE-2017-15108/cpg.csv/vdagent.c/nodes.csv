command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	46986	File	data/converged/CVE-2017-15108_vd_agent/vdagent.c								
ANR	46987	ClassDef	VDAgent	47:8:1281:1460							
ANR	46988	DeclStmt									
ANR	46989	Decl							struct vdagent_x11	struct vdagent_x11 *	x11
ANR	46990	DeclStmt									
ANR	46991	Decl							struct vdagent_file_xfers	struct vdagent_file_xfers *	xfers
ANR	46992	DeclStmt									
ANR	46993	Decl							struct udscs_connection	struct udscs_connection *	conn
ANR	46994	DeclStmt									
ANR	46995	Decl							GIOChannel	GIOChannel *	x11_channel
ANR	46996	DeclStmt									
ANR	46997	Decl							GMainLoop	GMainLoop *	loop
ANR	46998	DeclStmt									
ANR	46999	Decl							VDAgent	VDAgent	VDAgent
ANR	47000	DeclStmt									
ANR	47001	Decl							int	int	quit
ANR	47002	DeclStmt									
ANR	47003	Decl							int	int	parent_socket
ANR	47004	DeclStmt									
ANR	47005	Decl							int	int	version_mismatch
ANR	47006	DeclStmt									
ANR	47007	Decl							gboolean	gboolean	debug
ANR	47008	DeclStmt									
ANR	47009	Decl							gboolean	gboolean	x11_sync
ANR	47010	DeclStmt									
ANR	47011	Decl							gboolean	gboolean	do_daemonize
ANR	47012	DeclStmt									
ANR	47013	Decl							gint	gint	fx_open_dir
ANR	47014	DeclStmt									
ANR	47015	Decl							gchar	gchar *	fx_dir
ANR	47016	DeclStmt									
ANR	47017	Decl							gchar	gchar *	portdev
ANR	47018	DeclStmt									
ANR	47019	Decl							gchar	gchar *	vdagentd_socket
ANR	47020	DeclStmt									
ANR	47021	Decl							GOptionEntry	GOptionEntry [ ]	entries
ANR	47022	Function	xfer_get_download_directory	100:0:2954:3509							
ANR	47023	FunctionDef	xfer_get_download_directory (VDAgent * agent)		47022	0					
ANR	47024	CompoundStatement		101:0:3018:3509	47022	0					
ANR	47025	IfStatement	if ( fx_dir != NULL )		47022	0					
ANR	47026	Condition	fx_dir != NULL	102:8:3028:3041	47022	0	True				
ANR	47027	EqualityExpression	fx_dir != NULL		47022	0		!=			
ANR	47028	Identifier	fx_dir		47022	0					
ANR	47029	Identifier	NULL		47022	1					
ANR	47030	CompoundStatement		2:24:25:25	47022	1					
ANR	47031	IfStatement	"if ( ! strcmp ( fx_dir , ""xdg-desktop"" ) )"		47022	0					
ANR	47032	Condition	"! strcmp ( fx_dir , ""xdg-desktop"" )"	103:12:3058:3087	47022	0	True				
ANR	47033	UnaryOperationExpression	"! strcmp ( fx_dir , ""xdg-desktop"" )"		47022	0					
ANR	47034	UnaryOperator	!		47022	0					
ANR	47035	CallExpression	"strcmp ( fx_dir , ""xdg-desktop"" )"		47022	1					
ANR	47036	Callee	strcmp		47022	0					
ANR	47037	Identifier	strcmp		47022	0					
ANR	47038	ArgumentList	fx_dir		47022	1					
ANR	47039	Argument	fx_dir		47022	0					
ANR	47040	Identifier	fx_dir		47022	0					
ANR	47041	Argument	"""xdg-desktop"""		47022	1					
ANR	47042	PrimaryExpression	"""xdg-desktop"""		47022	0					
ANR	47043	ReturnStatement	return g_get_user_special_dir ( G_USER_DIRECTORY_DESKTOP ) ;	104:12:3102:3157	47022	1	True				
ANR	47044	CallExpression	g_get_user_special_dir ( G_USER_DIRECTORY_DESKTOP )		47022	0					
ANR	47045	Callee	g_get_user_special_dir		47022	0					
ANR	47046	Identifier	g_get_user_special_dir		47022	0					
ANR	47047	ArgumentList	G_USER_DIRECTORY_DESKTOP		47022	1					
ANR	47048	Argument	G_USER_DIRECTORY_DESKTOP		47022	0					
ANR	47049	Identifier	G_USER_DIRECTORY_DESKTOP		47022	0					
ANR	47050	IfStatement	"if ( ! strcmp ( fx_dir , ""xdg-download"" ) )"		47022	1					
ANR	47051	Condition	"! strcmp ( fx_dir , ""xdg-download"" )"	105:12:3171:3201	47022	0	True				
ANR	47052	UnaryOperationExpression	"! strcmp ( fx_dir , ""xdg-download"" )"		47022	0					
ANR	47053	UnaryOperator	!		47022	0					
ANR	47054	CallExpression	"strcmp ( fx_dir , ""xdg-download"" )"		47022	1					
ANR	47055	Callee	strcmp		47022	0					
ANR	47056	Identifier	strcmp		47022	0					
ANR	47057	ArgumentList	fx_dir		47022	1					
ANR	47058	Argument	fx_dir		47022	0					
ANR	47059	Identifier	fx_dir		47022	0					
ANR	47060	Argument	"""xdg-download"""		47022	1					
ANR	47061	PrimaryExpression	"""xdg-download"""		47022	0					
ANR	47062	ReturnStatement	return g_get_user_special_dir ( G_USER_DIRECTORY_DOWNLOAD ) ;	106:12:3216:3272	47022	1	True				
ANR	47063	CallExpression	g_get_user_special_dir ( G_USER_DIRECTORY_DOWNLOAD )		47022	0					
ANR	47064	Callee	g_get_user_special_dir		47022	0					
ANR	47065	Identifier	g_get_user_special_dir		47022	0					
ANR	47066	ArgumentList	G_USER_DIRECTORY_DOWNLOAD		47022	1					
ANR	47067	Argument	G_USER_DIRECTORY_DOWNLOAD		47022	0					
ANR	47068	Identifier	G_USER_DIRECTORY_DOWNLOAD		47022	0					
ANR	47069	ReturnStatement	return fx_dir ;	108:8:3283:3296	47022	2	True				
ANR	47070	Identifier	fx_dir		47022	0					
ANR	47071	ReturnStatement	return g_get_user_special_dir ( vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD ) ;	111:4:3309:3507	47022	1	True				
ANR	47072	CallExpression	g_get_user_special_dir ( vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD )		47022	0					
ANR	47073	Callee	g_get_user_special_dir		47022	0					
ANR	47074	Identifier	g_get_user_special_dir		47022	0					
ANR	47075	ArgumentList	vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD		47022	1					
ANR	47076	Argument	vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD		47022	0					
ANR	47077	ConditionalExpression	vdagent_x11_has_icons_on_desktop ( agent -> x11 ) ? G_USER_DIRECTORY_DESKTOP : G_USER_DIRECTORY_DOWNLOAD		47022	0					
ANR	47078	Condition	vdagent_x11_has_icons_on_desktop ( agent -> x11 )		47022	0					
ANR	47079	CallExpression	vdagent_x11_has_icons_on_desktop ( agent -> x11 )		47022	0					
ANR	47080	Callee	vdagent_x11_has_icons_on_desktop		47022	0					
ANR	47081	Identifier	vdagent_x11_has_icons_on_desktop		47022	0					
ANR	47082	ArgumentList	agent -> x11		47022	1					
ANR	47083	Argument	agent -> x11		47022	0					
ANR	47084	PtrMemberAccess	agent -> x11		47022	0					
ANR	47085	Identifier	agent		47022	0					
ANR	47086	Identifier	x11		47022	1					
ANR	47087	Identifier	G_USER_DIRECTORY_DESKTOP		47022	1					
ANR	47088	Identifier	G_USER_DIRECTORY_DOWNLOAD		47022	2					
ANR	47089	ReturnType	static const gchar *		47022	1					
ANR	47090	Identifier	xfer_get_download_directory		47022	2					
ANR	47091	ParameterList	VDAgent * agent		47022	3					
ANR	47092	Parameter	VDAgent * agent	100:48:3002:3015	47022	0	True				
ANR	47093	ParameterType	VDAgent *		47022	0					
ANR	47094	Identifier	agent		47022	1					
ANR	47095	CFGEntryNode	ENTRY		47022		True				
ANR	47096	CFGExitNode	EXIT		47022		True				
ANR	47097	Symbol	strcmp		47022						
ANR	47098	Symbol	agent		47022						
ANR	47099	Symbol	NULL		47022						
ANR	47100	Symbol	vdagent_x11_has_icons_on_desktop		47022						
ANR	47101	Symbol	g_get_user_special_dir		47022						
ANR	47102	Symbol	fx_dir		47022						
ANR	47103	Symbol	G_USER_DIRECTORY_DOWNLOAD		47022						
ANR	47104	Symbol	* agent		47022						
ANR	47105	Symbol	G_USER_DIRECTORY_DESKTOP		47022						
ANR	47106	Symbol	agent -> x11		47022						
ANR	47107	Function	vdagent_init_file_xfer	122:0:3641:4359							
ANR	47108	FunctionDef	vdagent_init_file_xfer (VDAgent * agent)		47107	0					
ANR	47109	CompoundStatement		123:0:3696:4359	47107	0					
ANR	47110	IdentifierDeclStatement	const gchar * xfer_dir ;	124:4:3702:3723	47107	0	True				
ANR	47111	IdentifierDecl	* xfer_dir		47107	0					
ANR	47112	IdentifierDeclType	const gchar *		47107	0					
ANR	47113	Identifier	xfer_dir		47107	1					
ANR	47114	IfStatement	if ( agent -> xfers != NULL )		47107	1					
ANR	47115	Condition	agent -> xfers != NULL	126:8:3734:3753	47107	0	True				
ANR	47116	EqualityExpression	agent -> xfers != NULL		47107	0		!=			
ANR	47117	PtrMemberAccess	agent -> xfers		47107	0					
ANR	47118	Identifier	agent		47107	0					
ANR	47119	Identifier	xfers		47107	1					
ANR	47120	Identifier	NULL		47107	1					
ANR	47121	CompoundStatement		4:30:59:59	47107	1					
ANR	47122	ExpressionStatement	"syslog ( LOG_DEBUG , ""File-xfer already initialized"" )"	127:8:3766:3816	47107	0	True				
ANR	47123	CallExpression	"syslog ( LOG_DEBUG , ""File-xfer already initialized"" )"		47107	0					
ANR	47124	Callee	syslog		47107	0					
ANR	47125	Identifier	syslog		47107	0					
ANR	47126	ArgumentList	LOG_DEBUG		47107	1					
ANR	47127	Argument	LOG_DEBUG		47107	0					
ANR	47128	Identifier	LOG_DEBUG		47107	0					
ANR	47129	Argument	"""File-xfer already initialized"""		47107	1					
ANR	47130	PrimaryExpression	"""File-xfer already initialized"""		47107	0					
ANR	47131	ReturnStatement	return TRUE ;	128:8:3826:3837	47107	1	True				
ANR	47132	Identifier	TRUE		47107	0					
ANR	47133	ExpressionStatement	xfer_dir = xfer_get_download_directory ( agent )	131:4:3850:3895	47107	2	True				
ANR	47134	AssignmentExpression	xfer_dir = xfer_get_download_directory ( agent )		47107	0		=			
ANR	47135	Identifier	xfer_dir		47107	0					
ANR	47136	CallExpression	xfer_get_download_directory ( agent )		47107	1					
ANR	47137	Callee	xfer_get_download_directory		47107	0					
ANR	47138	Identifier	xfer_get_download_directory		47107	0					
ANR	47139	ArgumentList	agent		47107	1					
ANR	47140	Argument	agent		47107	0					
ANR	47141	Identifier	agent		47107	0					
ANR	47142	IfStatement	if ( xfer_dir == NULL )		47107	3					
ANR	47143	Condition	xfer_dir == NULL	132:8:3905:3920	47107	0	True				
ANR	47144	EqualityExpression	xfer_dir == NULL		47107	0		==			
ANR	47145	Identifier	xfer_dir		47107	0					
ANR	47146	Identifier	NULL		47107	1					
ANR	47147	CompoundStatement		10:26:226:226	47107	1					
ANR	47148	Statement	syslog	133:8:3933:3938	47107	0	True				
ANR	47149	Statement	(	133:14:3939:3939	47107	1	True				
ANR	47150	Statement	LOG_WARNING	133:15:3940:3950	47107	2	True				
ANR	47151	Statement	","	133:26:3951:3951	47107	3	True				
ANR	47152	Statement	"""warning could not get file xfer save dir, """	134:15:3968:4011	47107	4	True				
ANR	47153	Statement	"""file transfers will be disabled"""	135:15:4028:4060	47107	5	True				
ANR	47154	Statement	)	135:48:4061:4061	47107	6	True				
ANR	47155	ExpressionStatement		135:49:4062:4062	47107	7	True				
ANR	47156	ReturnStatement	return FALSE ;	136:8:4072:4084	47107	8	True				
ANR	47157	Identifier	FALSE		47107	0					
ANR	47158	IfStatement	if ( fx_open_dir == - 1 )		47107	4					
ANR	47159	Condition	fx_open_dir == - 1	139:8:4101:4117	47107	0	True				
ANR	47160	EqualityExpression	fx_open_dir == - 1		47107	0		==			
ANR	47161	Identifier	fx_open_dir		47107	0					
ANR	47162	UnaryOperationExpression	- 1		47107	1					
ANR	47163	UnaryOperator	-		47107	0					
ANR	47164	PrimaryExpression	1		47107	1					
ANR	47165	ExpressionStatement	fx_open_dir = ! vdagent_x11_has_icons_on_desktop ( agent -> x11 )	140:8:4128:4187	47107	1	True				
ANR	47166	AssignmentExpression	fx_open_dir = ! vdagent_x11_has_icons_on_desktop ( agent -> x11 )		47107	0		=			
ANR	47167	Identifier	fx_open_dir		47107	0					
ANR	47168	UnaryOperationExpression	! vdagent_x11_has_icons_on_desktop ( agent -> x11 )		47107	1					
ANR	47169	UnaryOperator	!		47107	0					
ANR	47170	CallExpression	vdagent_x11_has_icons_on_desktop ( agent -> x11 )		47107	1					
ANR	47171	Callee	vdagent_x11_has_icons_on_desktop		47107	0					
ANR	47172	Identifier	vdagent_x11_has_icons_on_desktop		47107	0					
ANR	47173	ArgumentList	agent -> x11		47107	1					
ANR	47174	Argument	agent -> x11		47107	0					
ANR	47175	PtrMemberAccess	agent -> x11		47107	0					
ANR	47176	Identifier	agent		47107	0					
ANR	47177	Identifier	x11		47107	1					
ANR	47178	ExpressionStatement	"agent -> xfers = vdagent_file_xfers_create ( agent -> conn , xfer_dir , fx_open_dir , debug )"	142:4:4194:4322	47107	5	True				
ANR	47179	AssignmentExpression	"agent -> xfers = vdagent_file_xfers_create ( agent -> conn , xfer_dir , fx_open_dir , debug )"		47107	0		=			
ANR	47180	PtrMemberAccess	agent -> xfers		47107	0					
ANR	47181	Identifier	agent		47107	0					
ANR	47182	Identifier	xfers		47107	1					
ANR	47183	CallExpression	"vdagent_file_xfers_create ( agent -> conn , xfer_dir , fx_open_dir , debug )"		47107	1					
ANR	47184	Callee	vdagent_file_xfers_create		47107	0					
ANR	47185	Identifier	vdagent_file_xfers_create		47107	0					
ANR	47186	ArgumentList	agent -> conn		47107	1					
ANR	47187	Argument	agent -> conn		47107	0					
ANR	47188	PtrMemberAccess	agent -> conn		47107	0					
ANR	47189	Identifier	agent		47107	0					
ANR	47190	Identifier	conn		47107	1					
ANR	47191	Argument	xfer_dir		47107	1					
ANR	47192	Identifier	xfer_dir		47107	0					
ANR	47193	Argument	fx_open_dir		47107	2					
ANR	47194	Identifier	fx_open_dir		47107	0					
ANR	47195	Argument	debug		47107	3					
ANR	47196	Identifier	debug		47107	0					
ANR	47197	ReturnStatement	return ( agent -> xfers != NULL ) ;	144:4:4328:4357	47107	6	True				
ANR	47198	EqualityExpression	agent -> xfers != NULL		47107	0		!=			
ANR	47199	PtrMemberAccess	agent -> xfers		47107	0					
ANR	47200	Identifier	agent		47107	0					
ANR	47201	Identifier	xfers		47107	1					
ANR	47202	Identifier	NULL		47107	1					
ANR	47203	ReturnType	static gboolean		47107	1					
ANR	47204	Identifier	vdagent_init_file_xfer		47107	2					
ANR	47205	ParameterList	VDAgent * agent		47107	3					
ANR	47206	Parameter	VDAgent * agent	122:39:3680:3693	47107	0	True				
ANR	47207	ParameterType	VDAgent *		47107	0					
ANR	47208	Identifier	agent		47107	1					
ANR	47209	CFGEntryNode	ENTRY		47107		True				
ANR	47210	CFGExitNode	EXIT		47107		True				
ANR	47211	Symbol	agent		47107						
ANR	47212	Symbol	NULL		47107						
ANR	47213	Symbol	vdagent_x11_has_icons_on_desktop		47107						
ANR	47214	Symbol	debug		47107						
ANR	47215	Symbol	vdagent_file_xfers_create		47107						
ANR	47216	Symbol	agent -> conn		47107						
ANR	47217	Symbol	* agent		47107						
ANR	47218	Symbol	fx_open_dir		47107						
ANR	47219	Symbol	TRUE		47107						
ANR	47220	Symbol	agent -> xfers		47107						
ANR	47221	Symbol	agent -> x11		47107						
ANR	47222	Symbol	xfer_get_download_directory		47107						
ANR	47223	Symbol	FALSE		47107						
ANR	47224	Symbol	LOG_DEBUG		47107						
ANR	47225	Symbol	xfer_dir		47107						
ANR	47226	Function	vdagent_finalize_file_xfer	147:0:4362:4557							
ANR	47227	FunctionDef	vdagent_finalize_file_xfer (VDAgent * agent)		47226	0					
ANR	47228	CompoundStatement		148:0:4421:4557	47226	0					
ANR	47229	IfStatement	if ( agent -> xfers == NULL )		47226	0					
ANR	47230	Condition	agent -> xfers == NULL	149:8:4431:4450	47226	0	True				
ANR	47231	EqualityExpression	agent -> xfers == NULL		47226	0		==			
ANR	47232	PtrMemberAccess	agent -> xfers		47226	0					
ANR	47233	Identifier	agent		47226	0					
ANR	47234	Identifier	xfers		47226	1					
ANR	47235	Identifier	NULL		47226	1					
ANR	47236	ReturnStatement	return FALSE ;	150:8:4461:4473	47226	1	True				
ANR	47237	Identifier	FALSE		47226	0					
ANR	47238	ExpressionStatement	"g_clear_pointer ( & agent -> xfers , vdagent_file_xfers_destroy )"	152:4:4480:4538	47226	1	True				
ANR	47239	CallExpression	"g_clear_pointer ( & agent -> xfers , vdagent_file_xfers_destroy )"		47226	0					
ANR	47240	Callee	g_clear_pointer		47226	0					
ANR	47241	Identifier	g_clear_pointer		47226	0					
ANR	47242	ArgumentList	& agent -> xfers		47226	1					
ANR	47243	Argument	& agent -> xfers		47226	0					
ANR	47244	UnaryOperationExpression	& agent -> xfers		47226	0					
ANR	47245	UnaryOperator	&		47226	0					
ANR	47246	PtrMemberAccess	agent -> xfers		47226	1					
ANR	47247	Identifier	agent		47226	0					
ANR	47248	Identifier	xfers		47226	1					
ANR	47249	Argument	vdagent_file_xfers_destroy		47226	1					
ANR	47250	Identifier	vdagent_file_xfers_destroy		47226	0					
ANR	47251	ReturnStatement	return TRUE ;	153:4:4544:4555	47226	2	True				
ANR	47252	Identifier	TRUE		47226	0					
ANR	47253	ReturnType	static gboolean		47226	1					
ANR	47254	Identifier	vdagent_finalize_file_xfer		47226	2					
ANR	47255	ParameterList	VDAgent * agent		47226	3					
ANR	47256	Parameter	VDAgent * agent	147:43:4405:4418	47226	0	True				
ANR	47257	ParameterType	VDAgent *		47226	0					
ANR	47258	Identifier	agent		47226	1					
ANR	47259	CFGEntryNode	ENTRY		47226		True				
ANR	47260	CFGExitNode	EXIT		47226		True				
ANR	47261	Symbol	vdagent_file_xfers_destroy		47226						
ANR	47262	Symbol	agent		47226						
ANR	47263	Symbol	NULL		47226						
ANR	47264	Symbol	* agent		47226						
ANR	47265	Symbol	TRUE		47226						
ANR	47266	Symbol	agent -> xfers		47226						
ANR	47267	Symbol	FALSE		47226						
ANR	47268	Symbol	& agent -> xfers		47226						
ANR	47269	Function	daemon_read_complete	156:0:4560:7818							
ANR	47270	FunctionDef	"daemon_read_complete (struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data)"		47269	0					
ANR	47271	CompoundStatement		158:0:4682:7818	47269	0					
ANR	47272	IdentifierDeclStatement	VDAgent * agent = udscs_get_user_data ( * connp ) ;	159:4:4688:4732	47269	0	True				
ANR	47273	IdentifierDecl	* agent = udscs_get_user_data ( * connp )		47269	0					
ANR	47274	IdentifierDeclType	VDAgent *		47269	0					
ANR	47275	Identifier	agent		47269	1					
ANR	47276	AssignmentExpression	* agent = udscs_get_user_data ( * connp )		47269	2		=			
ANR	47277	Identifier	agent		47269	0					
ANR	47278	CallExpression	udscs_get_user_data ( * connp )		47269	1					
ANR	47279	Callee	udscs_get_user_data		47269	0					
ANR	47280	Identifier	udscs_get_user_data		47269	0					
ANR	47281	ArgumentList	* connp		47269	1					
ANR	47282	Argument	* connp		47269	0					
ANR	47283	UnaryOperationExpression	* connp		47269	0					
ANR	47284	UnaryOperator	*		47269	0					
ANR	47285	Identifier	connp		47269	1					
ANR	47286	SwitchStatement	switch ( header -> type )		47269	1					
ANR	47287	Condition	header -> type	161:12:4747:4758	47269	0	True				
ANR	47288	PtrMemberAccess	header -> type		47269	0					
ANR	47289	Identifier	header		47269	0					
ANR	47290	Identifier	type		47269	1					
ANR	47291	CompoundStatement		4:26:78:78	47269	1					
ANR	47292	Label	case VDAGENTD_MONITORS_CONFIG :	162:4:4767:4796	47269	0	True				
ANR	47293	Identifier	VDAGENTD_MONITORS_CONFIG		47269	0					
ANR	47294	ExpressionStatement	"vdagent_x11_set_monitor_config ( agent -> x11 , ( VDAgentMonitorsConfig * ) data , 0 )"	163:8:4806:4882	47269	1	True				
ANR	47295	CallExpression	"vdagent_x11_set_monitor_config ( agent -> x11 , ( VDAgentMonitorsConfig * ) data , 0 )"		47269	0					
ANR	47296	Callee	vdagent_x11_set_monitor_config		47269	0					
ANR	47297	Identifier	vdagent_x11_set_monitor_config		47269	0					
ANR	47298	ArgumentList	agent -> x11		47269	1					
ANR	47299	Argument	agent -> x11		47269	0					
ANR	47300	PtrMemberAccess	agent -> x11		47269	0					
ANR	47301	Identifier	agent		47269	0					
ANR	47302	Identifier	x11		47269	1					
ANR	47303	Argument	( VDAgentMonitorsConfig * ) data		47269	1					
ANR	47304	CastExpression	( VDAgentMonitorsConfig * ) data		47269	0					
ANR	47305	CastTarget	VDAgentMonitorsConfig *		47269	0					
ANR	47306	Identifier	data		47269	1					
ANR	47307	Argument	0		47269	2					
ANR	47308	PrimaryExpression	0		47269	0					
ANR	47309	BreakStatement	break ;	164:8:4892:4897	47269	2	True				
ANR	47310	Label	case VDAGENTD_CLIPBOARD_REQUEST :	165:4:4903:4934	47269	3	True				
ANR	47311	Identifier	VDAGENTD_CLIPBOARD_REQUEST		47269	0					
ANR	47312	ExpressionStatement	"vdagent_x11_clipboard_request ( agent -> x11 , header -> arg1 , header -> arg2 )"	166:8:4944:5013	47269	4	True				
ANR	47313	CallExpression	"vdagent_x11_clipboard_request ( agent -> x11 , header -> arg1 , header -> arg2 )"		47269	0					
ANR	47314	Callee	vdagent_x11_clipboard_request		47269	0					
ANR	47315	Identifier	vdagent_x11_clipboard_request		47269	0					
ANR	47316	ArgumentList	agent -> x11		47269	1					
ANR	47317	Argument	agent -> x11		47269	0					
ANR	47318	PtrMemberAccess	agent -> x11		47269	0					
ANR	47319	Identifier	agent		47269	0					
ANR	47320	Identifier	x11		47269	1					
ANR	47321	Argument	header -> arg1		47269	1					
ANR	47322	PtrMemberAccess	header -> arg1		47269	0					
ANR	47323	Identifier	header		47269	0					
ANR	47324	Identifier	arg1		47269	1					
ANR	47325	Argument	header -> arg2		47269	2					
ANR	47326	PtrMemberAccess	header -> arg2		47269	0					
ANR	47327	Identifier	header		47269	0					
ANR	47328	Identifier	arg2		47269	1					
ANR	47329	BreakStatement	break ;	167:8:5023:5028	47269	5	True				
ANR	47330	Label	case VDAGENTD_CLIPBOARD_GRAB :	168:4:5034:5062	47269	6	True				
ANR	47331	Identifier	VDAGENTD_CLIPBOARD_GRAB		47269	0					
ANR	47332	ExpressionStatement	"vdagent_x11_clipboard_grab ( agent -> x11 , header -> arg1 , ( uint32_t * ) data , header -> size / sizeof ( uint32_t ) )"	169:8:5072:5210	47269	7	True				
ANR	47333	CallExpression	"vdagent_x11_clipboard_grab ( agent -> x11 , header -> arg1 , ( uint32_t * ) data , header -> size / sizeof ( uint32_t ) )"		47269	0					
ANR	47334	Callee	vdagent_x11_clipboard_grab		47269	0					
ANR	47335	Identifier	vdagent_x11_clipboard_grab		47269	0					
ANR	47336	ArgumentList	agent -> x11		47269	1					
ANR	47337	Argument	agent -> x11		47269	0					
ANR	47338	PtrMemberAccess	agent -> x11		47269	0					
ANR	47339	Identifier	agent		47269	0					
ANR	47340	Identifier	x11		47269	1					
ANR	47341	Argument	header -> arg1		47269	1					
ANR	47342	PtrMemberAccess	header -> arg1		47269	0					
ANR	47343	Identifier	header		47269	0					
ANR	47344	Identifier	arg1		47269	1					
ANR	47345	Argument	( uint32_t * ) data		47269	2					
ANR	47346	CastExpression	( uint32_t * ) data		47269	0					
ANR	47347	CastTarget	uint32_t *		47269	0					
ANR	47348	Identifier	data		47269	1					
ANR	47349	Argument	header -> size / sizeof ( uint32_t )		47269	3					
ANR	47350	MultiplicativeExpression	header -> size / sizeof ( uint32_t )		47269	0		/			
ANR	47351	PtrMemberAccess	header -> size		47269	0					
ANR	47352	Identifier	header		47269	0					
ANR	47353	Identifier	size		47269	1					
ANR	47354	SizeofExpression	sizeof ( uint32_t )		47269	1					
ANR	47355	Sizeof	sizeof		47269	0					
ANR	47356	SizeofOperand	uint32_t		47269	1					
ANR	47357	BreakStatement	break ;	171:8:5220:5225	47269	8	True				
ANR	47358	Label	case VDAGENTD_CLIPBOARD_DATA :	172:4:5231:5259	47269	9	True				
ANR	47359	Identifier	VDAGENTD_CLIPBOARD_DATA		47269	0					
ANR	47360	ExpressionStatement	"vdagent_x11_clipboard_data ( agent -> x11 , header -> arg1 , header -> arg2 , data , header -> size )"	173:8:5269:5390	47269	10	True				
ANR	47361	CallExpression	"vdagent_x11_clipboard_data ( agent -> x11 , header -> arg1 , header -> arg2 , data , header -> size )"		47269	0					
ANR	47362	Callee	vdagent_x11_clipboard_data		47269	0					
ANR	47363	Identifier	vdagent_x11_clipboard_data		47269	0					
ANR	47364	ArgumentList	agent -> x11		47269	1					
ANR	47365	Argument	agent -> x11		47269	0					
ANR	47366	PtrMemberAccess	agent -> x11		47269	0					
ANR	47367	Identifier	agent		47269	0					
ANR	47368	Identifier	x11		47269	1					
ANR	47369	Argument	header -> arg1		47269	1					
ANR	47370	PtrMemberAccess	header -> arg1		47269	0					
ANR	47371	Identifier	header		47269	0					
ANR	47372	Identifier	arg1		47269	1					
ANR	47373	Argument	header -> arg2		47269	2					
ANR	47374	PtrMemberAccess	header -> arg2		47269	0					
ANR	47375	Identifier	header		47269	0					
ANR	47376	Identifier	arg2		47269	1					
ANR	47377	Argument	data		47269	3					
ANR	47378	Identifier	data		47269	0					
ANR	47379	Argument	header -> size		47269	4					
ANR	47380	PtrMemberAccess	header -> size		47269	0					
ANR	47381	Identifier	header		47269	0					
ANR	47382	Identifier	size		47269	1					
ANR	47383	BreakStatement	break ;	175:8:5400:5405	47269	11	True				
ANR	47384	Label	case VDAGENTD_CLIPBOARD_RELEASE :	176:4:5411:5442	47269	12	True				
ANR	47385	Identifier	VDAGENTD_CLIPBOARD_RELEASE		47269	0					
ANR	47386	ExpressionStatement	"vdagent_x11_clipboard_release ( agent -> x11 , header -> arg1 )"	177:8:5452:5507	47269	13	True				
ANR	47387	CallExpression	"vdagent_x11_clipboard_release ( agent -> x11 , header -> arg1 )"		47269	0					
ANR	47388	Callee	vdagent_x11_clipboard_release		47269	0					
ANR	47389	Identifier	vdagent_x11_clipboard_release		47269	0					
ANR	47390	ArgumentList	agent -> x11		47269	1					
ANR	47391	Argument	agent -> x11		47269	0					
ANR	47392	PtrMemberAccess	agent -> x11		47269	0					
ANR	47393	Identifier	agent		47269	0					
ANR	47394	Identifier	x11		47269	1					
ANR	47395	Argument	header -> arg1		47269	1					
ANR	47396	PtrMemberAccess	header -> arg1		47269	0					
ANR	47397	Identifier	header		47269	0					
ANR	47398	Identifier	arg1		47269	1					
ANR	47399	BreakStatement	break ;	178:8:5517:5522	47269	14	True				
ANR	47400	Label	case VDAGENTD_VERSION :	179:4:5528:5549	47269	15	True				
ANR	47401	Identifier	VDAGENTD_VERSION		47269	0					
ANR	47402	IfStatement	"if ( strcmp ( ( char * ) data , VERSION ) != 0 )"		47269	16					
ANR	47403	Condition	"strcmp ( ( char * ) data , VERSION ) != 0"	180:12:5563:5596	47269	0	True				
ANR	47404	EqualityExpression	"strcmp ( ( char * ) data , VERSION ) != 0"		47269	0		!=			
ANR	47405	CallExpression	"strcmp ( ( char * ) data , VERSION )"		47269	0					
ANR	47406	Callee	strcmp		47269	0					
ANR	47407	Identifier	strcmp		47269	0					
ANR	47408	ArgumentList	( char * ) data		47269	1					
ANR	47409	Argument	( char * ) data		47269	0					
ANR	47410	CastExpression	( char * ) data		47269	0					
ANR	47411	CastTarget	char *		47269	0					
ANR	47412	Identifier	data		47269	1					
ANR	47413	Argument	VERSION		47269	1					
ANR	47414	Identifier	VERSION		47269	0					
ANR	47415	PrimaryExpression	0		47269	1					
ANR	47416	CompoundStatement		23:48:916:916	47269	1					
ANR	47417	ExpressionStatement	"syslog ( LOG_INFO , ""vdagentd version mismatch: got %s expected %s"" , data , VERSION )"	181:12:5613:5712	47269	0	True				
ANR	47418	CallExpression	"syslog ( LOG_INFO , ""vdagentd version mismatch: got %s expected %s"" , data , VERSION )"		47269	0					
ANR	47419	Callee	syslog		47269	0					
ANR	47420	Identifier	syslog		47269	0					
ANR	47421	ArgumentList	LOG_INFO		47269	1					
ANR	47422	Argument	LOG_INFO		47269	0					
ANR	47423	Identifier	LOG_INFO		47269	0					
ANR	47424	Argument	"""vdagentd version mismatch: got %s expected %s"""		47269	1					
ANR	47425	PrimaryExpression	"""vdagentd version mismatch: got %s expected %s"""		47269	0					
ANR	47426	Argument	data		47269	2					
ANR	47427	Identifier	data		47269	0					
ANR	47428	Argument	VERSION		47269	3					
ANR	47429	Identifier	VERSION		47269	0					
ANR	47430	ExpressionStatement	g_main_loop_quit ( agent -> loop )	183:12:5726:5755	47269	1	True				
ANR	47431	CallExpression	g_main_loop_quit ( agent -> loop )		47269	0					
ANR	47432	Callee	g_main_loop_quit		47269	0					
ANR	47433	Identifier	g_main_loop_quit		47269	0					
ANR	47434	ArgumentList	agent -> loop		47269	1					
ANR	47435	Argument	agent -> loop		47269	0					
ANR	47436	PtrMemberAccess	agent -> loop		47269	0					
ANR	47437	Identifier	agent		47269	0					
ANR	47438	Identifier	loop		47269	1					
ANR	47439	ExpressionStatement	version_mismatch = 1	184:12:5769:5789	47269	2	True				
ANR	47440	AssignmentExpression	version_mismatch = 1		47269	0		=			
ANR	47441	Identifier	version_mismatch		47269	0					
ANR	47442	PrimaryExpression	1		47269	1					
ANR	47443	BreakStatement	break ;	186:8:5809:5814	47269	17	True				
ANR	47444	Label	case VDAGENTD_FILE_XFER_START :	187:4:5820:5849	47269	18	True				
ANR	47445	Identifier	VDAGENTD_FILE_XFER_START		47269	0					
ANR	47446	IfStatement	if ( agent -> xfers != NULL )		47269	19					
ANR	47447	Condition	agent -> xfers != NULL	188:12:5863:5882	47269	0	True				
ANR	47448	EqualityExpression	agent -> xfers != NULL		47269	0		!=			
ANR	47449	PtrMemberAccess	agent -> xfers		47269	0					
ANR	47450	Identifier	agent		47269	0					
ANR	47451	Identifier	xfers		47269	1					
ANR	47452	Identifier	NULL		47269	1					
ANR	47453	CompoundStatement		31:34:1202:1202	47269	1					
ANR	47454	ExpressionStatement	"vdagent_file_xfers_start ( agent -> xfers , ( VDAgentFileXferStartMessage * ) data )"	189:12:5899:6011	47269	0	True				
ANR	47455	CallExpression	"vdagent_file_xfers_start ( agent -> xfers , ( VDAgentFileXferStartMessage * ) data )"		47269	0					
ANR	47456	Callee	vdagent_file_xfers_start		47269	0					
ANR	47457	Identifier	vdagent_file_xfers_start		47269	0					
ANR	47458	ArgumentList	agent -> xfers		47269	1					
ANR	47459	Argument	agent -> xfers		47269	0					
ANR	47460	PtrMemberAccess	agent -> xfers		47269	0					
ANR	47461	Identifier	agent		47269	0					
ANR	47462	Identifier	xfers		47269	1					
ANR	47463	Argument	( VDAgentFileXferStartMessage * ) data		47269	1					
ANR	47464	CastExpression	( VDAgentFileXferStartMessage * ) data		47269	0					
ANR	47465	CastTarget	VDAgentFileXferStartMessage *		47269	0					
ANR	47466	Identifier	data		47269	1					
ANR	47467	ElseStatement	else		47269	0					
ANR	47468	CompoundStatement		34:15:1345:1345	47269	0					
ANR	47469	ExpressionStatement	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStartMessage * ) data ) -> id )"	192:12:6042:6172	47269	0	True				
ANR	47470	CallExpression	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStartMessage * ) data ) -> id )"		47269	0					
ANR	47471	Callee	vdagent_file_xfers_error_disabled		47269	0					
ANR	47472	Identifier	vdagent_file_xfers_error_disabled		47269	0					
ANR	47473	ArgumentList	* connp		47269	1					
ANR	47474	Argument	* connp		47269	0					
ANR	47475	UnaryOperationExpression	* connp		47269	0					
ANR	47476	UnaryOperator	*		47269	0					
ANR	47477	Identifier	connp		47269	1					
ANR	47478	Argument	( ( VDAgentFileXferStartMessage * ) data ) -> id		47269	1					
ANR	47479	PtrMemberAccess	( ( VDAgentFileXferStartMessage * ) data ) -> id		47269	0					
ANR	47480	CastExpression	( VDAgentFileXferStartMessage * ) data		47269	0					
ANR	47481	CastTarget	VDAgentFileXferStartMessage *		47269	0					
ANR	47482	Identifier	data		47269	1					
ANR	47483	Identifier	id		47269	1					
ANR	47484	BreakStatement	break ;	195:8:6192:6197	47269	20	True				
ANR	47485	Label	case VDAGENTD_FILE_XFER_STATUS :	196:4:6203:6233	47269	21	True				
ANR	47486	Identifier	VDAGENTD_FILE_XFER_STATUS		47269	0					
ANR	47487	IfStatement	if ( agent -> xfers != NULL )		47269	22					
ANR	47488	Condition	agent -> xfers != NULL	197:12:6247:6266	47269	0	True				
ANR	47489	EqualityExpression	agent -> xfers != NULL		47269	0		!=			
ANR	47490	PtrMemberAccess	agent -> xfers		47269	0					
ANR	47491	Identifier	agent		47269	0					
ANR	47492	Identifier	xfers		47269	1					
ANR	47493	Identifier	NULL		47269	1					
ANR	47494	CompoundStatement		40:34:1586:1586	47269	1					
ANR	47495	ExpressionStatement	"vdagent_file_xfers_status ( agent -> xfers , ( VDAgentFileXferStatusMessage * ) data )"	198:12:6283:6398	47269	0	True				
ANR	47496	CallExpression	"vdagent_file_xfers_status ( agent -> xfers , ( VDAgentFileXferStatusMessage * ) data )"		47269	0					
ANR	47497	Callee	vdagent_file_xfers_status		47269	0					
ANR	47498	Identifier	vdagent_file_xfers_status		47269	0					
ANR	47499	ArgumentList	agent -> xfers		47269	1					
ANR	47500	Argument	agent -> xfers		47269	0					
ANR	47501	PtrMemberAccess	agent -> xfers		47269	0					
ANR	47502	Identifier	agent		47269	0					
ANR	47503	Identifier	xfers		47269	1					
ANR	47504	Argument	( VDAgentFileXferStatusMessage * ) data		47269	1					
ANR	47505	CastExpression	( VDAgentFileXferStatusMessage * ) data		47269	0					
ANR	47506	CastTarget	VDAgentFileXferStatusMessage *		47269	0					
ANR	47507	Identifier	data		47269	1					
ANR	47508	ElseStatement	else		47269	0					
ANR	47509	CompoundStatement		43:15:1732:1732	47269	0					
ANR	47510	ExpressionStatement	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStatusMessage * ) data ) -> id )"	201:12:6429:6560	47269	0	True				
ANR	47511	CallExpression	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferStatusMessage * ) data ) -> id )"		47269	0					
ANR	47512	Callee	vdagent_file_xfers_error_disabled		47269	0					
ANR	47513	Identifier	vdagent_file_xfers_error_disabled		47269	0					
ANR	47514	ArgumentList	* connp		47269	1					
ANR	47515	Argument	* connp		47269	0					
ANR	47516	UnaryOperationExpression	* connp		47269	0					
ANR	47517	UnaryOperator	*		47269	0					
ANR	47518	Identifier	connp		47269	1					
ANR	47519	Argument	( ( VDAgentFileXferStatusMessage * ) data ) -> id		47269	1					
ANR	47520	PtrMemberAccess	( ( VDAgentFileXferStatusMessage * ) data ) -> id		47269	0					
ANR	47521	CastExpression	( VDAgentFileXferStatusMessage * ) data		47269	0					
ANR	47522	CastTarget	VDAgentFileXferStatusMessage *		47269	0					
ANR	47523	Identifier	data		47269	1					
ANR	47524	Identifier	id		47269	1					
ANR	47525	BreakStatement	break ;	204:8:6580:6585	47269	23	True				
ANR	47526	Label	case VDAGENTD_FILE_XFER_DISABLE :	205:4:6591:6622	47269	24	True				
ANR	47527	Identifier	VDAGENTD_FILE_XFER_DISABLE		47269	0					
ANR	47528	IfStatement	if ( debug )		47269	25					
ANR	47529	Condition	debug	206:12:6636:6640	47269	0	True				
ANR	47530	Identifier	debug		47269	0					
ANR	47531	ExpressionStatement	"syslog ( LOG_DEBUG , ""Disabling file-xfers"" )"	207:12:6655:6696	47269	1	True				
ANR	47532	CallExpression	"syslog ( LOG_DEBUG , ""Disabling file-xfers"" )"		47269	0					
ANR	47533	Callee	syslog		47269	0					
ANR	47534	Identifier	syslog		47269	0					
ANR	47535	ArgumentList	LOG_DEBUG		47269	1					
ANR	47536	Argument	LOG_DEBUG		47269	0					
ANR	47537	Identifier	LOG_DEBUG		47269	0					
ANR	47538	Argument	"""Disabling file-xfers"""		47269	1					
ANR	47539	PrimaryExpression	"""Disabling file-xfers"""		47269	0					
ANR	47540	ExpressionStatement	vdagent_finalize_file_xfer ( agent )	209:8:6707:6740	47269	26	True				
ANR	47541	CallExpression	vdagent_finalize_file_xfer ( agent )		47269	0					
ANR	47542	Callee	vdagent_finalize_file_xfer		47269	0					
ANR	47543	Identifier	vdagent_finalize_file_xfer		47269	0					
ANR	47544	ArgumentList	agent		47269	1					
ANR	47545	Argument	agent		47269	0					
ANR	47546	Identifier	agent		47269	0					
ANR	47547	BreakStatement	break ;	210:8:6750:6755	47269	27	True				
ANR	47548	Label	case VDAGENTD_AUDIO_VOLUME_SYNC :	211:4:6761:6792	47269	28	True				
ANR	47549	Identifier	VDAGENTD_AUDIO_VOLUME_SYNC		47269	0					
ANR	47550	CompoundStatement		55:8:2121:2181	47269	29					
ANR	47551	IdentifierDeclStatement	VDAgentAudioVolumeSync * avs = ( VDAgentAudioVolumeSync * ) data ;	212:8:6804:6864	47269	0	True				
ANR	47552	IdentifierDecl	* avs = ( VDAgentAudioVolumeSync * ) data		47269	0					
ANR	47553	IdentifierDeclType	VDAgentAudioVolumeSync *		47269	0					
ANR	47554	Identifier	avs		47269	1					
ANR	47555	AssignmentExpression	* avs = ( VDAgentAudioVolumeSync * ) data		47269	2		=			
ANR	47556	Identifier	avs		47269	0					
ANR	47557	CastExpression	( VDAgentAudioVolumeSync * ) data		47269	1					
ANR	47558	CastTarget	VDAgentAudioVolumeSync *		47269	0					
ANR	47559	Identifier	data		47269	1					
ANR	47560	IfStatement	if ( avs -> is_playback )		47269	1					
ANR	47561	Condition	avs -> is_playback	213:12:6878:6893	47269	0	True				
ANR	47562	PtrMemberAccess	avs -> is_playback		47269	0					
ANR	47563	Identifier	avs		47269	0					
ANR	47564	Identifier	is_playback		47269	1					
ANR	47565	CompoundStatement		56:30:2213:2213	47269	1					
ANR	47566	ExpressionStatement	"vdagent_audio_playback_sync ( avs -> mute , avs -> nchannels , avs -> volume )"	214:12:6910:6977	47269	0	True				
ANR	47567	CallExpression	"vdagent_audio_playback_sync ( avs -> mute , avs -> nchannels , avs -> volume )"		47269	0					
ANR	47568	Callee	vdagent_audio_playback_sync		47269	0					
ANR	47569	Identifier	vdagent_audio_playback_sync		47269	0					
ANR	47570	ArgumentList	avs -> mute		47269	1					
ANR	47571	Argument	avs -> mute		47269	0					
ANR	47572	PtrMemberAccess	avs -> mute		47269	0					
ANR	47573	Identifier	avs		47269	0					
ANR	47574	Identifier	mute		47269	1					
ANR	47575	Argument	avs -> nchannels		47269	1					
ANR	47576	PtrMemberAccess	avs -> nchannels		47269	0					
ANR	47577	Identifier	avs		47269	0					
ANR	47578	Identifier	nchannels		47269	1					
ANR	47579	Argument	avs -> volume		47269	2					
ANR	47580	PtrMemberAccess	avs -> volume		47269	0					
ANR	47581	Identifier	avs		47269	0					
ANR	47582	Identifier	volume		47269	1					
ANR	47583	ElseStatement	else		47269	0					
ANR	47584	CompoundStatement		58:15:2311:2311	47269	0					
ANR	47585	ExpressionStatement	"vdagent_audio_record_sync ( avs -> mute , avs -> nchannels , avs -> volume )"	216:12:7008:7073	47269	0	True				
ANR	47586	CallExpression	"vdagent_audio_record_sync ( avs -> mute , avs -> nchannels , avs -> volume )"		47269	0					
ANR	47587	Callee	vdagent_audio_record_sync		47269	0					
ANR	47588	Identifier	vdagent_audio_record_sync		47269	0					
ANR	47589	ArgumentList	avs -> mute		47269	1					
ANR	47590	Argument	avs -> mute		47269	0					
ANR	47591	PtrMemberAccess	avs -> mute		47269	0					
ANR	47592	Identifier	avs		47269	0					
ANR	47593	Identifier	mute		47269	1					
ANR	47594	Argument	avs -> nchannels		47269	1					
ANR	47595	PtrMemberAccess	avs -> nchannels		47269	0					
ANR	47596	Identifier	avs		47269	0					
ANR	47597	Identifier	nchannels		47269	1					
ANR	47598	Argument	avs -> volume		47269	2					
ANR	47599	PtrMemberAccess	avs -> volume		47269	0					
ANR	47600	Identifier	avs		47269	0					
ANR	47601	Identifier	volume		47269	1					
ANR	47602	BreakStatement	break ;	218:8:7093:7098	47269	2	True				
ANR	47603	Label	case VDAGENTD_FILE_XFER_DATA :	220:4:7110:7138	47269	30	True				
ANR	47604	Identifier	VDAGENTD_FILE_XFER_DATA		47269	0					
ANR	47605	IfStatement	if ( agent -> xfers != NULL )		47269	31					
ANR	47606	Condition	agent -> xfers != NULL	221:12:7152:7171	47269	0	True				
ANR	47607	EqualityExpression	agent -> xfers != NULL		47269	0		!=			
ANR	47608	PtrMemberAccess	agent -> xfers		47269	0					
ANR	47609	Identifier	agent		47269	0					
ANR	47610	Identifier	xfers		47269	1					
ANR	47611	Identifier	NULL		47269	1					
ANR	47612	CompoundStatement		64:34:2491:2491	47269	1					
ANR	47613	ExpressionStatement	"vdagent_file_xfers_data ( agent -> xfers , ( VDAgentFileXferDataMessage * ) data )"	222:12:7188:7297	47269	0	True				
ANR	47614	CallExpression	"vdagent_file_xfers_data ( agent -> xfers , ( VDAgentFileXferDataMessage * ) data )"		47269	0					
ANR	47615	Callee	vdagent_file_xfers_data		47269	0					
ANR	47616	Identifier	vdagent_file_xfers_data		47269	0					
ANR	47617	ArgumentList	agent -> xfers		47269	1					
ANR	47618	Argument	agent -> xfers		47269	0					
ANR	47619	PtrMemberAccess	agent -> xfers		47269	0					
ANR	47620	Identifier	agent		47269	0					
ANR	47621	Identifier	xfers		47269	1					
ANR	47622	Argument	( VDAgentFileXferDataMessage * ) data		47269	1					
ANR	47623	CastExpression	( VDAgentFileXferDataMessage * ) data		47269	0					
ANR	47624	CastTarget	VDAgentFileXferDataMessage *		47269	0					
ANR	47625	Identifier	data		47269	1					
ANR	47626	ElseStatement	else		47269	0					
ANR	47627	CompoundStatement		67:15:2631:2631	47269	0					
ANR	47628	ExpressionStatement	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferDataMessage * ) data ) -> id )"	225:12:7328:7457	47269	0	True				
ANR	47629	CallExpression	"vdagent_file_xfers_error_disabled ( * connp , ( ( VDAgentFileXferDataMessage * ) data ) -> id )"		47269	0					
ANR	47630	Callee	vdagent_file_xfers_error_disabled		47269	0					
ANR	47631	Identifier	vdagent_file_xfers_error_disabled		47269	0					
ANR	47632	ArgumentList	* connp		47269	1					
ANR	47633	Argument	* connp		47269	0					
ANR	47634	UnaryOperationExpression	* connp		47269	0					
ANR	47635	UnaryOperator	*		47269	0					
ANR	47636	Identifier	connp		47269	1					
ANR	47637	Argument	( ( VDAgentFileXferDataMessage * ) data ) -> id		47269	1					
ANR	47638	PtrMemberAccess	( ( VDAgentFileXferDataMessage * ) data ) -> id		47269	0					
ANR	47639	CastExpression	( VDAgentFileXferDataMessage * ) data		47269	0					
ANR	47640	CastTarget	VDAgentFileXferDataMessage *		47269	0					
ANR	47641	Identifier	data		47269	1					
ANR	47642	Identifier	id		47269	1					
ANR	47643	BreakStatement	break ;	228:8:7477:7482	47269	32	True				
ANR	47644	Label	case VDAGENTD_CLIENT_DISCONNECTED :	229:4:7488:7521	47269	33	True				
ANR	47645	Identifier	VDAGENTD_CLIENT_DISCONNECTED		47269	0					
ANR	47646	ExpressionStatement	vdagent_x11_client_disconnected ( agent -> x11 )	230:8:7531:7574	47269	34	True				
ANR	47647	CallExpression	vdagent_x11_client_disconnected ( agent -> x11 )		47269	0					
ANR	47648	Callee	vdagent_x11_client_disconnected		47269	0					
ANR	47649	Identifier	vdagent_x11_client_disconnected		47269	0					
ANR	47650	ArgumentList	agent -> x11		47269	1					
ANR	47651	Argument	agent -> x11		47269	0					
ANR	47652	PtrMemberAccess	agent -> x11		47269	0					
ANR	47653	Identifier	agent		47269	0					
ANR	47654	Identifier	x11		47269	1					
ANR	47655	IfStatement	if ( vdagent_finalize_file_xfer ( agent ) )		47269	35					
ANR	47656	Condition	vdagent_finalize_file_xfer ( agent )	231:12:7588:7620	47269	0	True				
ANR	47657	CallExpression	vdagent_finalize_file_xfer ( agent )		47269	0					
ANR	47658	Callee	vdagent_finalize_file_xfer		47269	0					
ANR	47659	Identifier	vdagent_finalize_file_xfer		47269	0					
ANR	47660	ArgumentList	agent		47269	1					
ANR	47661	Argument	agent		47269	0					
ANR	47662	Identifier	agent		47269	0					
ANR	47663	CompoundStatement		74:47:2940:2940	47269	1					
ANR	47664	ExpressionStatement	vdagent_init_file_xfer ( agent )	232:12:7637:7666	47269	0	True				
ANR	47665	CallExpression	vdagent_init_file_xfer ( agent )		47269	0					
ANR	47666	Callee	vdagent_init_file_xfer		47269	0					
ANR	47667	Identifier	vdagent_init_file_xfer		47269	0					
ANR	47668	ArgumentList	agent		47269	1					
ANR	47669	Argument	agent		47269	0					
ANR	47670	Identifier	agent		47269	0					
ANR	47671	BreakStatement	break ;	234:8:7686:7691	47269	36	True				
ANR	47672	Label	default :	235:4:7697:7704	47269	37	True				
ANR	47673	Identifier	default		47269	0					
ANR	47674	ExpressionStatement	"syslog ( LOG_ERR , ""Unknown message from vdagentd type: %d, ignoring"" , header -> type )"	236:8:7714:7810	47269	38	True				
ANR	47675	CallExpression	"syslog ( LOG_ERR , ""Unknown message from vdagentd type: %d, ignoring"" , header -> type )"		47269	0					
ANR	47676	Callee	syslog		47269	0					
ANR	47677	Identifier	syslog		47269	0					
ANR	47678	ArgumentList	LOG_ERR		47269	1					
ANR	47679	Argument	LOG_ERR		47269	0					
ANR	47680	Identifier	LOG_ERR		47269	0					
ANR	47681	Argument	"""Unknown message from vdagentd type: %d, ignoring"""		47269	1					
ANR	47682	PrimaryExpression	"""Unknown message from vdagentd type: %d, ignoring"""		47269	0					
ANR	47683	Argument	header -> type		47269	2					
ANR	47684	PtrMemberAccess	header -> type		47269	0					
ANR	47685	Identifier	header		47269	0					
ANR	47686	Identifier	type		47269	1					
ANR	47687	ReturnType	static void		47269	1					
ANR	47688	Identifier	daemon_read_complete		47269	2					
ANR	47689	ParameterList	"struct udscs_connection * * connp , struct udscs_message_header * header , uint8_t * data"		47269	3					
ANR	47690	Parameter	struct udscs_connection * * connp	156:33:4593:4623	47269	0	True				
ANR	47691	ParameterType	struct udscs_connection * *		47269	0					
ANR	47692	Identifier	connp		47269	1					
ANR	47693	Parameter	struct udscs_message_header * header	157:4:4630:4664	47269	1	True				
ANR	47694	ParameterType	struct udscs_message_header *		47269	0					
ANR	47695	Identifier	header		47269	1					
ANR	47696	Parameter	uint8_t * data	157:41:4667:4679	47269	2	True				
ANR	47697	ParameterType	uint8_t *		47269	0					
ANR	47698	Identifier	data		47269	1					
ANR	47699	CFGEntryNode	ENTRY		47269		True				
ANR	47700	CFGExitNode	EXIT		47269		True				
ANR	47701	Symbol	agent		47269						
ANR	47702	Symbol	LOG_INFO		47269						
ANR	47703	Symbol	data		47269						
ANR	47704	Symbol	* connp		47269						
ANR	47705	Symbol	avs -> is_playback		47269						
ANR	47706	Symbol	avs -> mute		47269						
ANR	47707	Symbol	avs -> nchannels		47269						
ANR	47708	Symbol	agent -> loop		47269						
ANR	47709	Symbol	avs -> volume		47269						
ANR	47710	Symbol	( ( VDAgentFileXferStatusMessage * ) data ) -> id		47269						
ANR	47711	Symbol	LOG_ERR		47269						
ANR	47712	Symbol	avs		47269						
ANR	47713	Symbol	strcmp		47269						
ANR	47714	Symbol	( ( VDAgentFileXferDataMessage * ) data ) -> id		47269						
ANR	47715	Symbol	connp		47269						
ANR	47716	Symbol	NULL		47269						
ANR	47717	Symbol	debug		47269						
ANR	47718	Symbol	* agent		47269						
ANR	47719	Symbol	header -> arg2		47269						
ANR	47720	Symbol	header -> arg1		47269						
ANR	47721	Symbol	agent -> xfers		47269						
ANR	47722	Symbol	( ( VDAgentFileXferStartMessage * ) data ) -> id		47269						
ANR	47723	Symbol	agent -> x11		47269						
ANR	47724	Symbol	* header		47269						
ANR	47725	Symbol	version_mismatch		47269						
ANR	47726	Symbol	* avs		47269						
ANR	47727	Symbol	VERSION		47269						
ANR	47728	Symbol	header		47269						
ANR	47729	Symbol	header -> size		47269						
ANR	47730	Symbol	LOG_DEBUG		47269						
ANR	47731	Symbol	vdagent_finalize_file_xfer		47269						
ANR	47732	Symbol	udscs_get_user_data		47269						
ANR	47733	Symbol	* data		47269						
ANR	47734	Symbol	header -> type		47269						
ANR	47735	Function	daemon_disconnect_cb	241:0:7821:8019							
ANR	47736	FunctionDef	daemon_disconnect_cb (struct udscs_connection * conn)		47735	0					
ANR	47737	CompoundStatement		242:0:7885:8019	47735	0					
ANR	47738	IdentifierDeclStatement	VDAgent * agent = udscs_get_user_data ( conn ) ;	243:4:7891:7933	47735	0	True				
ANR	47739	IdentifierDecl	* agent = udscs_get_user_data ( conn )		47735	0					
ANR	47740	IdentifierDeclType	VDAgent *		47735	0					
ANR	47741	Identifier	agent		47735	1					
ANR	47742	AssignmentExpression	* agent = udscs_get_user_data ( conn )		47735	2		=			
ANR	47743	Identifier	agent		47735	0					
ANR	47744	CallExpression	udscs_get_user_data ( conn )		47735	1					
ANR	47745	Callee	udscs_get_user_data		47735	0					
ANR	47746	Identifier	udscs_get_user_data		47735	0					
ANR	47747	ArgumentList	conn		47735	1					
ANR	47748	Argument	conn		47735	0					
ANR	47749	Identifier	conn		47735	0					
ANR	47750	ExpressionStatement	agent -> conn = NULL	244:4:7939:7957	47735	1	True				
ANR	47751	AssignmentExpression	agent -> conn = NULL		47735	0		=			
ANR	47752	PtrMemberAccess	agent -> conn		47735	0					
ANR	47753	Identifier	agent		47735	0					
ANR	47754	Identifier	conn		47735	1					
ANR	47755	Identifier	NULL		47735	1					
ANR	47756	IfStatement	if ( agent -> loop )		47735	2					
ANR	47757	Condition	agent -> loop	245:8:7967:7977	47735	0	True				
ANR	47758	PtrMemberAccess	agent -> loop		47735	0					
ANR	47759	Identifier	agent		47735	0					
ANR	47760	Identifier	loop		47735	1					
ANR	47761	ExpressionStatement	g_main_loop_quit ( agent -> loop )	246:8:7988:8017	47735	1	True				
ANR	47762	CallExpression	g_main_loop_quit ( agent -> loop )		47735	0					
ANR	47763	Callee	g_main_loop_quit		47735	0					
ANR	47764	Identifier	g_main_loop_quit		47735	0					
ANR	47765	ArgumentList	agent -> loop		47735	1					
ANR	47766	Argument	agent -> loop		47735	0					
ANR	47767	PtrMemberAccess	agent -> loop		47735	0					
ANR	47768	Identifier	agent		47735	0					
ANR	47769	Identifier	loop		47735	1					
ANR	47770	ReturnType	static void		47735	1					
ANR	47771	Identifier	daemon_disconnect_cb		47735	2					
ANR	47772	ParameterList	struct udscs_connection * conn		47735	3					
ANR	47773	Parameter	struct udscs_connection * conn	241:33:7854:7882	47735	0	True				
ANR	47774	ParameterType	struct udscs_connection *		47735	0					
ANR	47775	Identifier	conn		47735	1					
ANR	47776	CFGEntryNode	ENTRY		47735		True				
ANR	47777	CFGExitNode	EXIT		47735		True				
ANR	47778	Symbol	conn		47735						
ANR	47779	Symbol	agent		47735						
ANR	47780	Symbol	agent -> loop		47735						
ANR	47781	Symbol	NULL		47735						
ANR	47782	Symbol	agent -> conn		47735						
ANR	47783	Symbol	* agent		47735						
ANR	47784	Symbol	udscs_get_user_data		47735						
ANR	47785	Function	wait_and_exit	254:0:8299:8520							
ANR	47786	FunctionDef	wait_and_exit (int s)		47785	0					
ANR	47787	CompoundStatement		255:0:8332:8520	47785	0					
ANR	47788	IdentifierDeclStatement	char buf [ 4 ] ;	256:4:8338:8349	47785	0	True				
ANR	47789	IdentifierDecl	buf [ 4 ]		47785	0					
ANR	47790	IdentifierDeclType	char [ 4 ]		47785	0					
ANR	47791	Identifier	buf		47785	1					
ANR	47792	PrimaryExpression	4		47785	2					
ANR	47793	IdentifierDeclStatement	struct pollfd p ;	257:4:8355:8370	47785	1	True				
ANR	47794	IdentifierDecl	p		47785	0					
ANR	47795	IdentifierDeclType	struct pollfd		47785	0					
ANR	47796	Identifier	p		47785	1					
ANR	47797	ExpressionStatement	p . fd = s	258:4:8376:8384	47785	2	True				
ANR	47798	AssignmentExpression	p . fd = s		47785	0		=			
ANR	47799	MemberAccess	p . fd		47785	0					
ANR	47800	Identifier	p		47785	0					
ANR	47801	Identifier	fd		47785	1					
ANR	47802	Identifier	s		47785	1					
ANR	47803	ExpressionStatement	p . events = POLLIN	259:4:8390:8407	47785	3	True				
ANR	47804	AssignmentExpression	p . events = POLLIN		47785	0		=			
ANR	47805	MemberAccess	p . events		47785	0					
ANR	47806	Identifier	p		47785	0					
ANR	47807	Identifier	events		47785	1					
ANR	47808	Identifier	POLLIN		47785	1					
ANR	47809	IfStatement	"if ( poll ( & p , 1 , 10000 ) > 0 )"		47785	4					
ANR	47810	Condition	"poll ( & p , 1 , 10000 ) > 0"	261:8:8418:8439	47785	0	True				
ANR	47811	RelationalExpression	"poll ( & p , 1 , 10000 ) > 0"		47785	0		>			
ANR	47812	CallExpression	"poll ( & p , 1 , 10000 )"		47785	0					
ANR	47813	Callee	poll		47785	0					
ANR	47814	Identifier	poll		47785	0					
ANR	47815	ArgumentList	& p		47785	1					
ANR	47816	Argument	& p		47785	0					
ANR	47817	UnaryOperationExpression	& p		47785	0					
ANR	47818	UnaryOperator	&		47785	0					
ANR	47819	Identifier	p		47785	1					
ANR	47820	Argument	1		47785	1					
ANR	47821	PrimaryExpression	1		47785	0					
ANR	47822	Argument	10000		47785	2					
ANR	47823	PrimaryExpression	10000		47785	0					
ANR	47824	PrimaryExpression	0		47785	1					
ANR	47825	IfStatement	"if ( read ( s , buf , sizeof ( buf ) ) > 0 )"		47785	1					
ANR	47826	Condition	"read ( s , buf , sizeof ( buf ) ) > 0"	262:12:8454:8482	47785	0	True				
ANR	47827	RelationalExpression	"read ( s , buf , sizeof ( buf ) ) > 0"		47785	0		>			
ANR	47828	CallExpression	"read ( s , buf , sizeof ( buf ) )"		47785	0					
ANR	47829	Callee	read		47785	0					
ANR	47830	Identifier	read		47785	0					
ANR	47831	ArgumentList	s		47785	1					
ANR	47832	Argument	s		47785	0					
ANR	47833	Identifier	s		47785	0					
ANR	47834	Argument	buf		47785	1					
ANR	47835	Identifier	buf		47785	0					
ANR	47836	Argument	sizeof ( buf )		47785	2					
ANR	47837	SizeofExpression	sizeof ( buf )		47785	0					
ANR	47838	Sizeof	sizeof		47785	0					
ANR	47839	SizeofOperand	buf		47785	1					
ANR	47840	PrimaryExpression	0		47785	1					
ANR	47841	ExpressionStatement	exit ( 0 )	263:12:8497:8504	47785	1	True				
ANR	47842	CallExpression	exit ( 0 )		47785	0					
ANR	47843	Callee	exit		47785	0					
ANR	47844	Identifier	exit		47785	0					
ANR	47845	ArgumentList	0		47785	1					
ANR	47846	Argument	0		47785	0					
ANR	47847	PrimaryExpression	0		47785	0					
ANR	47848	ExpressionStatement	exit ( 1 )	265:4:8511:8518	47785	5	True				
ANR	47849	CallExpression	exit ( 1 )		47785	0					
ANR	47850	Callee	exit		47785	0					
ANR	47851	Identifier	exit		47785	0					
ANR	47852	ArgumentList	1		47785	1					
ANR	47853	Argument	1		47785	0					
ANR	47854	PrimaryExpression	1		47785	0					
ANR	47855	ReturnType	static void		47785	1					
ANR	47856	Identifier	wait_and_exit		47785	2					
ANR	47857	ParameterList	int s		47785	3					
ANR	47858	Parameter	int s	254:26:8325:8329	47785	0	True				
ANR	47859	ParameterType	int		47785	0					
ANR	47860	Identifier	s		47785	1					
ANR	47861	CFGEntryNode	ENTRY		47785		True				
ANR	47862	CFGExitNode	EXIT		47785		True				
ANR	47863	Symbol	p		47785						
ANR	47864	Symbol	buf		47785						
ANR	47865	Symbol	s		47785						
ANR	47866	Symbol	read		47785						
ANR	47867	Symbol	POLLIN		47785						
ANR	47868	Symbol	& p		47785						
ANR	47869	Symbol	p . fd		47785						
ANR	47870	Symbol	poll		47785						
ANR	47871	Symbol	p . events		47785						
ANR	47872	Function	daemonize	268:0:8523:9114							
ANR	47873	FunctionDef	daemonize ()		47872	0					
ANR	47874	CompoundStatement		269:0:8550:9114	47872	0					
ANR	47875	IdentifierDeclStatement	int x ;	270:4:8556:8561	47872	0	True				
ANR	47876	IdentifierDecl	x		47872	0					
ANR	47877	IdentifierDeclType	int		47872	0					
ANR	47878	Identifier	x		47872	1					
ANR	47879	IdentifierDeclStatement	int fd [ 2 ] ;	271:4:8567:8576	47872	1	True				
ANR	47880	IdentifierDecl	fd [ 2 ]		47872	0					
ANR	47881	IdentifierDeclType	int [ 2 ]		47872	0					
ANR	47882	Identifier	fd		47872	1					
ANR	47883	PrimaryExpression	2		47872	2					
ANR	47884	IfStatement	"if ( socketpair ( PF_LOCAL , SOCK_STREAM , 0 , fd ) )"		47872	2					
ANR	47885	Condition	"socketpair ( PF_LOCAL , SOCK_STREAM , 0 , fd )"	273:8:8587:8626	47872	0	True				
ANR	47886	CallExpression	"socketpair ( PF_LOCAL , SOCK_STREAM , 0 , fd )"		47872	0					
ANR	47887	Callee	socketpair		47872	0					
ANR	47888	Identifier	socketpair		47872	0					
ANR	47889	ArgumentList	PF_LOCAL		47872	1					
ANR	47890	Argument	PF_LOCAL		47872	0					
ANR	47891	Identifier	PF_LOCAL		47872	0					
ANR	47892	Argument	SOCK_STREAM		47872	1					
ANR	47893	Identifier	SOCK_STREAM		47872	0					
ANR	47894	Argument	0		47872	2					
ANR	47895	PrimaryExpression	0		47872	0					
ANR	47896	Argument	fd		47872	3					
ANR	47897	Identifier	fd		47872	0					
ANR	47898	CompoundStatement		5:50:78:78	47872	1					
ANR	47899	ExpressionStatement	"syslog ( LOG_ERR , ""socketpair : %s"" , strerror ( errno ) )"	274:8:8639:8690	47872	0	True				
ANR	47900	CallExpression	"syslog ( LOG_ERR , ""socketpair : %s"" , strerror ( errno ) )"		47872	0					
ANR	47901	Callee	syslog		47872	0					
ANR	47902	Identifier	syslog		47872	0					
ANR	47903	ArgumentList	LOG_ERR		47872	1					
ANR	47904	Argument	LOG_ERR		47872	0					
ANR	47905	Identifier	LOG_ERR		47872	0					
ANR	47906	Argument	"""socketpair : %s"""		47872	1					
ANR	47907	PrimaryExpression	"""socketpair : %s"""		47872	0					
ANR	47908	Argument	strerror ( errno )		47872	2					
ANR	47909	CallExpression	strerror ( errno )		47872	0					
ANR	47910	Callee	strerror		47872	0					
ANR	47911	Identifier	strerror		47872	0					
ANR	47912	ArgumentList	errno		47872	1					
ANR	47913	Argument	errno		47872	0					
ANR	47914	Identifier	errno		47872	0					
ANR	47915	ExpressionStatement	exit ( 1 )	275:8:8700:8707	47872	1	True				
ANR	47916	CallExpression	exit ( 1 )		47872	0					
ANR	47917	Callee	exit		47872	0					
ANR	47918	Identifier	exit		47872	0					
ANR	47919	ArgumentList	1		47872	1					
ANR	47920	Argument	1		47872	0					
ANR	47921	PrimaryExpression	1		47872	0					
ANR	47922	SwitchStatement	switch ( fork ( ) )		47872	3					
ANR	47923	Condition	fork ( )	279:12:8759:8764	47872	0	True				
ANR	47924	CallExpression	fork ( )		47872	0					
ANR	47925	Callee	fork		47872	0					
ANR	47926	Identifier	fork		47872	0					
ANR	47927	ArgumentList			47872	1					
ANR	47928	CompoundStatement		11:20:216:216	47872	1					
ANR	47929	Label	case 0 :	280:4:8773:8779	47872	0	True				
ANR	47930	ExpressionStatement	close ( 0 )	281:8:8789:8797	47872	1	True				
ANR	47931	CallExpression	close ( 0 )		47872	0					
ANR	47932	Callee	close		47872	0					
ANR	47933	Identifier	close		47872	0					
ANR	47934	ArgumentList	0		47872	1					
ANR	47935	Argument	0		47872	0					
ANR	47936	PrimaryExpression	0		47872	0					
ANR	47937	ExpressionStatement	close ( 1 )	281:18:8799:8807	47872	2	True				
ANR	47938	CallExpression	close ( 1 )		47872	0					
ANR	47939	Callee	close		47872	0					
ANR	47940	Identifier	close		47872	0					
ANR	47941	ArgumentList	1		47872	1					
ANR	47942	Argument	1		47872	0					
ANR	47943	PrimaryExpression	1		47872	0					
ANR	47944	ExpressionStatement	close ( 2 )	281:28:8809:8817	47872	3	True				
ANR	47945	CallExpression	close ( 2 )		47872	0					
ANR	47946	Callee	close		47872	0					
ANR	47947	Identifier	close		47872	0					
ANR	47948	ArgumentList	2		47872	1					
ANR	47949	Argument	2		47872	0					
ANR	47950	PrimaryExpression	2		47872	0					
ANR	47951	ExpressionStatement	setsid ( )	282:8:8827:8835	47872	4	True				
ANR	47952	CallExpression	setsid ( )		47872	0					
ANR	47953	Callee	setsid		47872	0					
ANR	47954	Identifier	setsid		47872	0					
ANR	47955	ArgumentList			47872	1					
ANR	47956	ExpressionStatement	"x = open ( ""/dev/null"" , O_RDWR )"	283:8:8845:8874	47872	5	True				
ANR	47957	AssignmentExpression	"x = open ( ""/dev/null"" , O_RDWR )"		47872	0		=			
ANR	47958	Identifier	x		47872	0					
ANR	47959	CallExpression	"open ( ""/dev/null"" , O_RDWR )"		47872	1					
ANR	47960	Callee	open		47872	0					
ANR	47961	Identifier	open		47872	0					
ANR	47962	ArgumentList	"""/dev/null"""		47872	1					
ANR	47963	Argument	"""/dev/null"""		47872	0					
ANR	47964	PrimaryExpression	"""/dev/null"""		47872	0					
ANR	47965	Argument	O_RDWR		47872	1					
ANR	47966	Identifier	O_RDWR		47872	0					
ANR	47967	ExpressionStatement	x = dup ( x )	283:39:8876:8886	47872	6	True				
ANR	47968	AssignmentExpression	x = dup ( x )		47872	0		=			
ANR	47969	Identifier	x		47872	0					
ANR	47970	CallExpression	dup ( x )		47872	1					
ANR	47971	Callee	dup		47872	0					
ANR	47972	Identifier	dup		47872	0					
ANR	47973	ArgumentList	x		47872	1					
ANR	47974	Argument	x		47872	0					
ANR	47975	Identifier	x		47872	0					
ANR	47976	ExpressionStatement	x = dup ( x )	283:51:8888:8898	47872	7	True				
ANR	47977	AssignmentExpression	x = dup ( x )		47872	0		=			
ANR	47978	Identifier	x		47872	0					
ANR	47979	CallExpression	dup ( x )		47872	1					
ANR	47980	Callee	dup		47872	0					
ANR	47981	Identifier	dup		47872	0					
ANR	47982	ArgumentList	x		47872	1					
ANR	47983	Argument	x		47872	0					
ANR	47984	Identifier	x		47872	0					
ANR	47985	ExpressionStatement	close ( fd [ 0 ] )	284:8:8908:8920	47872	8	True				
ANR	47986	CallExpression	close ( fd [ 0 ] )		47872	0					
ANR	47987	Callee	close		47872	0					
ANR	47988	Identifier	close		47872	0					
ANR	47989	ArgumentList	fd [ 0 ]		47872	1					
ANR	47990	Argument	fd [ 0 ]		47872	0					
ANR	47991	ArrayIndexing	fd [ 0 ]		47872	0					
ANR	47992	Identifier	fd		47872	0					
ANR	47993	PrimaryExpression	0		47872	1					
ANR	47994	ReturnStatement	return fd [ 1 ] ;	285:8:8930:8942	47872	9	True				
ANR	47995	ArrayIndexing	fd [ 1 ]		47872	0					
ANR	47996	Identifier	fd		47872	0					
ANR	47997	PrimaryExpression	1		47872	1					
ANR	47998	Statement	case	286:4:8948:8951	47872	10	True				
ANR	47999	Statement	-	286:9:8953:8953	47872	11	True				
ANR	48000	Label	1 :	286:10:8954:8955	47872	12	True				
ANR	48001	ExpressionStatement	"syslog ( LOG_ERR , ""fork: %s"" , strerror ( errno ) )"	287:8:8965:9009	47872	13	True				
ANR	48002	CallExpression	"syslog ( LOG_ERR , ""fork: %s"" , strerror ( errno ) )"		47872	0					
ANR	48003	Callee	syslog		47872	0					
ANR	48004	Identifier	syslog		47872	0					
ANR	48005	ArgumentList	LOG_ERR		47872	1					
ANR	48006	Argument	LOG_ERR		47872	0					
ANR	48007	Identifier	LOG_ERR		47872	0					
ANR	48008	Argument	"""fork: %s"""		47872	1					
ANR	48009	PrimaryExpression	"""fork: %s"""		47872	0					
ANR	48010	Argument	strerror ( errno )		47872	2					
ANR	48011	CallExpression	strerror ( errno )		47872	0					
ANR	48012	Callee	strerror		47872	0					
ANR	48013	Identifier	strerror		47872	0					
ANR	48014	ArgumentList	errno		47872	1					
ANR	48015	Argument	errno		47872	0					
ANR	48016	Identifier	errno		47872	0					
ANR	48017	ExpressionStatement	exit ( 1 )	288:8:9019:9026	47872	14	True				
ANR	48018	CallExpression	exit ( 1 )		47872	0					
ANR	48019	Callee	exit		47872	0					
ANR	48020	Identifier	exit		47872	0					
ANR	48021	ArgumentList	1		47872	1					
ANR	48022	Argument	1		47872	0					
ANR	48023	PrimaryExpression	1		47872	0					
ANR	48024	Label	default :	289:4:9032:9039	47872	15	True				
ANR	48025	Identifier	default		47872	0					
ANR	48026	ExpressionStatement	close ( fd [ 1 ] )	290:8:9049:9061	47872	16	True				
ANR	48027	CallExpression	close ( fd [ 1 ] )		47872	0					
ANR	48028	Callee	close		47872	0					
ANR	48029	Identifier	close		47872	0					
ANR	48030	ArgumentList	fd [ 1 ]		47872	1					
ANR	48031	Argument	fd [ 1 ]		47872	0					
ANR	48032	ArrayIndexing	fd [ 1 ]		47872	0					
ANR	48033	Identifier	fd		47872	0					
ANR	48034	PrimaryExpression	1		47872	1					
ANR	48035	ExpressionStatement	wait_and_exit ( fd [ 0 ] )	291:8:9071:9091	47872	17	True				
ANR	48036	CallExpression	wait_and_exit ( fd [ 0 ] )		47872	0					
ANR	48037	Callee	wait_and_exit		47872	0					
ANR	48038	Identifier	wait_and_exit		47872	0					
ANR	48039	ArgumentList	fd [ 0 ]		47872	1					
ANR	48040	Argument	fd [ 0 ]		47872	0					
ANR	48041	ArrayIndexing	fd [ 0 ]		47872	0					
ANR	48042	Identifier	fd		47872	0					
ANR	48043	PrimaryExpression	0		47872	1					
ANR	48044	ReturnStatement	return 0 ;	294:4:9104:9112	47872	4	True				
ANR	48045	PrimaryExpression	0		47872	0					
ANR	48046	ReturnType	static int		47872	1					
ANR	48047	Identifier	daemonize		47872	2					
ANR	48048	ParameterList			47872	3					
ANR	48049	CFGEntryNode	ENTRY		47872		True				
ANR	48050	CFGExitNode	EXIT		47872		True				
ANR	48051	Symbol	PF_LOCAL		47872						
ANR	48052	Symbol	errno		47872						
ANR	48053	Symbol	socketpair		47872						
ANR	48054	Symbol	* fd		47872						
ANR	48055	Symbol	strerror		47872						
ANR	48056	Symbol	SOCK_STREAM		47872						
ANR	48057	Symbol	fork		47872						
ANR	48058	Symbol	O_RDWR		47872						
ANR	48059	Symbol	LOG_ERR		47872						
ANR	48060	Symbol	x		47872						
ANR	48061	Symbol	fd		47872						
ANR	48062	Symbol	open		47872						
ANR	48063	Symbol	dup		47872						
ANR	48064	Function	file_test	297:0:9117:9215							
ANR	48065	FunctionDef	file_test (const char * path)		48064	0					
ANR	48066	CompoundStatement		298:0:9156:9215	48064	0					
ANR	48067	IdentifierDeclStatement	struct stat buffer ;	299:4:9162:9180	48064	0	True				
ANR	48068	IdentifierDecl	buffer		48064	0					
ANR	48069	IdentifierDeclType	struct stat		48064	0					
ANR	48070	Identifier	buffer		48064	1					
ANR	48071	ReturnStatement	"return stat ( path , & buffer ) ;"	301:4:9187:9213	48064	1	True				
ANR	48072	CallExpression	"stat ( path , & buffer )"		48064	0					
ANR	48073	Callee	stat		48064	0					
ANR	48074	Identifier	stat		48064	0					
ANR	48075	ArgumentList	path		48064	1					
ANR	48076	Argument	path		48064	0					
ANR	48077	Identifier	path		48064	0					
ANR	48078	Argument	& buffer		48064	1					
ANR	48079	UnaryOperationExpression	& buffer		48064	0					
ANR	48080	UnaryOperator	&		48064	0					
ANR	48081	Identifier	buffer		48064	1					
ANR	48082	ReturnType	static int		48064	1					
ANR	48083	Identifier	file_test		48064	2					
ANR	48084	ParameterList	const char * path		48064	3					
ANR	48085	Parameter	const char * path	297:21:9138:9153	48064	0	True				
ANR	48086	ParameterType	const char *		48064	0					
ANR	48087	Identifier	path		48064	1					
ANR	48088	CFGEntryNode	ENTRY		48064		True				
ANR	48089	CFGExitNode	EXIT		48064		True				
ANR	48090	Symbol	path		48064						
ANR	48091	Symbol	stat		48064						
ANR	48092	Symbol	& buffer		48064						
ANR	48093	Symbol	buffer		48064						
ANR	48094	Function	x11_io_channel_cb	304:0:9218:9476							
ANR	48095	FunctionDef	"x11_io_channel_cb (GIOChannel * source , GIOCondition condition , gpointer data)"		48094	0					
ANR	48096	CompoundStatement		307:0:9379:9476	48094	0					
ANR	48097	IdentifierDeclStatement	VDAgent * agent = data ;	308:4:9385:9406	48094	0	True				
ANR	48098	IdentifierDecl	* agent = data		48094	0					
ANR	48099	IdentifierDeclType	VDAgent *		48094	0					
ANR	48100	Identifier	agent		48094	1					
ANR	48101	AssignmentExpression	* agent = data		48094	2		=			
ANR	48102	Identifier	data		48094	0					
ANR	48103	Identifier	data		48094	1					
ANR	48104	ExpressionStatement	vdagent_x11_do_read ( agent -> x11 )	309:4:9412:9443	48094	1	True				
ANR	48105	CallExpression	vdagent_x11_do_read ( agent -> x11 )		48094	0					
ANR	48106	Callee	vdagent_x11_do_read		48094	0					
ANR	48107	Identifier	vdagent_x11_do_read		48094	0					
ANR	48108	ArgumentList	agent -> x11		48094	1					
ANR	48109	Argument	agent -> x11		48094	0					
ANR	48110	PtrMemberAccess	agent -> x11		48094	0					
ANR	48111	Identifier	agent		48094	0					
ANR	48112	Identifier	x11		48094	1					
ANR	48113	ReturnStatement	return G_SOURCE_CONTINUE ;	311:4:9450:9474	48094	2	True				
ANR	48114	Identifier	G_SOURCE_CONTINUE		48094	0					
ANR	48115	ReturnType	static gboolean		48094	1					
ANR	48116	Identifier	x11_io_channel_cb		48094	2					
ANR	48117	ParameterList	"GIOChannel * source , GIOCondition condition , gpointer data"		48094	3					
ANR	48118	Parameter	GIOChannel * source	304:34:9252:9269	48094	0	True				
ANR	48119	ParameterType	GIOChannel *		48094	0					
ANR	48120	Identifier	source		48094	1					
ANR	48121	Parameter	GIOCondition condition	305:34:9306:9327	48094	1	True				
ANR	48122	ParameterType	GIOCondition		48094	0					
ANR	48123	Identifier	condition		48094	1					
ANR	48124	Parameter	gpointer data	306:34:9364:9376	48094	2	True				
ANR	48125	ParameterType	gpointer		48094	0					
ANR	48126	Identifier	data		48094	1					
ANR	48127	CFGEntryNode	ENTRY		48094		True				
ANR	48128	CFGExitNode	EXIT		48094		True				
ANR	48129	Symbol	condition		48094						
ANR	48130	Symbol	agent		48094						
ANR	48131	Symbol	data		48094						
ANR	48132	Symbol	* agent		48094						
ANR	48133	Symbol	source		48094						
ANR	48134	Symbol	agent -> x11		48094						
ANR	48135	Symbol	G_SOURCE_CONTINUE		48094						
ANR	48136	Function	vdagent_signal_handler	314:0:9479:9645							
ANR	48137	FunctionDef	vdagent_signal_handler (gpointer user_data)		48136	0					
ANR	48138	CompoundStatement		315:0:9531:9645	48136	0					
ANR	48139	IdentifierDeclStatement	VDAgent * agent = user_data ;	316:4:9537:9563	48136	0	True				
ANR	48140	IdentifierDecl	* agent = user_data		48136	0					
ANR	48141	IdentifierDeclType	VDAgent *		48136	0					
ANR	48142	Identifier	agent		48136	1					
ANR	48143	AssignmentExpression	* agent = user_data		48136	2		=			
ANR	48144	Identifier	user_data		48136	0					
ANR	48145	Identifier	user_data		48136	1					
ANR	48146	ExpressionStatement	quit = TRUE	317:4:9569:9580	48136	1	True				
ANR	48147	AssignmentExpression	quit = TRUE		48136	0		=			
ANR	48148	Identifier	quit		48136	0					
ANR	48149	Identifier	TRUE		48136	1					
ANR	48150	ExpressionStatement	g_main_loop_quit ( agent -> loop )	318:4:9586:9615	48136	2	True				
ANR	48151	CallExpression	g_main_loop_quit ( agent -> loop )		48136	0					
ANR	48152	Callee	g_main_loop_quit		48136	0					
ANR	48153	Identifier	g_main_loop_quit		48136	0					
ANR	48154	ArgumentList	agent -> loop		48136	1					
ANR	48155	Argument	agent -> loop		48136	0					
ANR	48156	PtrMemberAccess	agent -> loop		48136	0					
ANR	48157	Identifier	agent		48136	0					
ANR	48158	Identifier	loop		48136	1					
ANR	48159	ReturnStatement	return G_SOURCE_REMOVE ;	319:4:9621:9643	48136	3	True				
ANR	48160	Identifier	G_SOURCE_REMOVE		48136	0					
ANR	48161	ReturnType	gboolean		48136	1					
ANR	48162	Identifier	vdagent_signal_handler		48136	2					
ANR	48163	ParameterList	gpointer user_data		48136	3					
ANR	48164	Parameter	gpointer user_data	314:32:9511:9528	48136	0	True				
ANR	48165	ParameterType	gpointer		48136	0					
ANR	48166	Identifier	user_data		48136	1					
ANR	48167	CFGEntryNode	ENTRY		48136		True				
ANR	48168	CFGExitNode	EXIT		48136		True				
ANR	48169	Symbol	agent		48136						
ANR	48170	Symbol	agent -> loop		48136						
ANR	48171	Symbol	G_SOURCE_REMOVE		48136						
ANR	48172	Symbol	* agent		48136						
ANR	48173	Symbol	TRUE		48136						
ANR	48174	Symbol	quit		48136						
ANR	48175	Symbol	user_data		48136						
ANR	48176	Function	vdagent_new	322:0:9648:9981							
ANR	48177	FunctionDef	vdagent_new ()		48176	0					
ANR	48178	CompoundStatement		323:0:9682:9981	48176	0					
ANR	48179	IdentifierDeclStatement	"VDAgent * agent = g_new0 ( VDAgent , 1 ) ;"	324:4:9688:9723	48176	0	True				
ANR	48180	IdentifierDecl	"* agent = g_new0 ( VDAgent , 1 )"		48176	0					
ANR	48181	IdentifierDeclType	VDAgent *		48176	0					
ANR	48182	Identifier	agent		48176	1					
ANR	48183	AssignmentExpression	"* agent = g_new0 ( VDAgent , 1 )"		48176	2		=			
ANR	48184	Identifier	agent		48176	0					
ANR	48185	CallExpression	"g_new0 ( VDAgent , 1 )"		48176	1					
ANR	48186	Callee	g_new0		48176	0					
ANR	48187	Identifier	g_new0		48176	0					
ANR	48188	ArgumentList	VDAgent		48176	1					
ANR	48189	Argument	VDAgent		48176	0					
ANR	48190	Identifier	VDAgent		48176	0					
ANR	48191	Argument	1		48176	1					
ANR	48192	PrimaryExpression	1		48176	0					
ANR	48193	ExpressionStatement	"agent -> loop = g_main_loop_new ( NULL , FALSE )"	326:4:9730:9772	48176	1	True				
ANR	48194	AssignmentExpression	"agent -> loop = g_main_loop_new ( NULL , FALSE )"		48176	0		=			
ANR	48195	PtrMemberAccess	agent -> loop		48176	0					
ANR	48196	Identifier	agent		48176	0					
ANR	48197	Identifier	loop		48176	1					
ANR	48198	CallExpression	"g_main_loop_new ( NULL , FALSE )"		48176	1					
ANR	48199	Callee	g_main_loop_new		48176	0					
ANR	48200	Identifier	g_main_loop_new		48176	0					
ANR	48201	ArgumentList	NULL		48176	1					
ANR	48202	Argument	NULL		48176	0					
ANR	48203	Identifier	NULL		48176	0					
ANR	48204	Argument	FALSE		48176	1					
ANR	48205	Identifier	FALSE		48176	0					
ANR	48206	ExpressionStatement	"g_unix_signal_add ( SIGINT , vdagent_signal_handler , agent )"	328:4:9779:9835	48176	2	True				
ANR	48207	CallExpression	"g_unix_signal_add ( SIGINT , vdagent_signal_handler , agent )"		48176	0					
ANR	48208	Callee	g_unix_signal_add		48176	0					
ANR	48209	Identifier	g_unix_signal_add		48176	0					
ANR	48210	ArgumentList	SIGINT		48176	1					
ANR	48211	Argument	SIGINT		48176	0					
ANR	48212	Identifier	SIGINT		48176	0					
ANR	48213	Argument	vdagent_signal_handler		48176	1					
ANR	48214	Identifier	vdagent_signal_handler		48176	0					
ANR	48215	Argument	agent		48176	2					
ANR	48216	Identifier	agent		48176	0					
ANR	48217	ExpressionStatement	"g_unix_signal_add ( SIGHUP , vdagent_signal_handler , agent )"	329:4:9841:9897	48176	3	True				
ANR	48218	CallExpression	"g_unix_signal_add ( SIGHUP , vdagent_signal_handler , agent )"		48176	0					
ANR	48219	Callee	g_unix_signal_add		48176	0					
ANR	48220	Identifier	g_unix_signal_add		48176	0					
ANR	48221	ArgumentList	SIGHUP		48176	1					
ANR	48222	Argument	SIGHUP		48176	0					
ANR	48223	Identifier	SIGHUP		48176	0					
ANR	48224	Argument	vdagent_signal_handler		48176	1					
ANR	48225	Identifier	vdagent_signal_handler		48176	0					
ANR	48226	Argument	agent		48176	2					
ANR	48227	Identifier	agent		48176	0					
ANR	48228	ExpressionStatement	"g_unix_signal_add ( SIGTERM , vdagent_signal_handler , agent )"	330:4:9903:9960	48176	4	True				
ANR	48229	CallExpression	"g_unix_signal_add ( SIGTERM , vdagent_signal_handler , agent )"		48176	0					
ANR	48230	Callee	g_unix_signal_add		48176	0					
ANR	48231	Identifier	g_unix_signal_add		48176	0					
ANR	48232	ArgumentList	SIGTERM		48176	1					
ANR	48233	Argument	SIGTERM		48176	0					
ANR	48234	Identifier	SIGTERM		48176	0					
ANR	48235	Argument	vdagent_signal_handler		48176	1					
ANR	48236	Identifier	vdagent_signal_handler		48176	0					
ANR	48237	Argument	agent		48176	2					
ANR	48238	Identifier	agent		48176	0					
ANR	48239	ReturnStatement	return agent ;	332:4:9967:9979	48176	5	True				
ANR	48240	Identifier	agent		48176	0					
ANR	48241	ReturnType	static VDAgent *		48176	1					
ANR	48242	Identifier	vdagent_new		48176	2					
ANR	48243	ParameterList			48176	3					
ANR	48244	CFGEntryNode	ENTRY		48176		True				
ANR	48245	CFGExitNode	EXIT		48176		True				
ANR	48246	Symbol	g_main_loop_new		48176						
ANR	48247	Symbol	agent		48176						
ANR	48248	Symbol	VDAgent		48176						
ANR	48249	Symbol	agent -> loop		48176						
ANR	48250	Symbol	NULL		48176						
ANR	48251	Symbol	vdagent_signal_handler		48176						
ANR	48252	Symbol	SIGINT		48176						
ANR	48253	Symbol	* agent		48176						
ANR	48254	Symbol	g_new0		48176						
ANR	48255	Symbol	FALSE		48176						
ANR	48256	Symbol	SIGHUP		48176						
ANR	48257	Symbol	SIGTERM		48176						
ANR	48258	Function	vdagent_destroy	335:0:9984:10374							
ANR	48259	FunctionDef	vdagent_destroy (VDAgent * agent)		48258	0					
ANR	48260	CompoundStatement		336:0:10028:10374	48258	0					
ANR	48261	ExpressionStatement	vdagent_finalize_file_xfer ( agent )	337:4:10034:10067	48258	0	True				
ANR	48262	CallExpression	vdagent_finalize_file_xfer ( agent )		48258	0					
ANR	48263	Callee	vdagent_finalize_file_xfer		48258	0					
ANR	48264	Identifier	vdagent_finalize_file_xfer		48258	0					
ANR	48265	ArgumentList	agent		48258	1					
ANR	48266	Argument	agent		48258	0					
ANR	48267	Identifier	agent		48258	0					
ANR	48268	ExpressionStatement	"vdagent_x11_destroy ( agent -> x11 , agent -> conn == NULL )"	338:4:10073:10125	48258	1	True				
ANR	48269	CallExpression	"vdagent_x11_destroy ( agent -> x11 , agent -> conn == NULL )"		48258	0					
ANR	48270	Callee	vdagent_x11_destroy		48258	0					
ANR	48271	Identifier	vdagent_x11_destroy		48258	0					
ANR	48272	ArgumentList	agent -> x11		48258	1					
ANR	48273	Argument	agent -> x11		48258	0					
ANR	48274	PtrMemberAccess	agent -> x11		48258	0					
ANR	48275	Identifier	agent		48258	0					
ANR	48276	Identifier	x11		48258	1					
ANR	48277	Argument	agent -> conn == NULL		48258	1					
ANR	48278	EqualityExpression	agent -> conn == NULL		48258	0		==			
ANR	48279	PtrMemberAccess	agent -> conn		48258	0					
ANR	48280	Identifier	agent		48258	0					
ANR	48281	Identifier	conn		48258	1					
ANR	48282	Identifier	NULL		48258	1					
ANR	48283	ExpressionStatement	udscs_destroy_connection ( & agent -> conn )	339:4:10131:10169	48258	2	True				
ANR	48284	CallExpression	udscs_destroy_connection ( & agent -> conn )		48258	0					
ANR	48285	Callee	udscs_destroy_connection		48258	0					
ANR	48286	Identifier	udscs_destroy_connection		48258	0					
ANR	48287	ArgumentList	& agent -> conn		48258	1					
ANR	48288	Argument	& agent -> conn		48258	0					
ANR	48289	UnaryOperationExpression	& agent -> conn		48258	0					
ANR	48290	UnaryOperator	&		48258	0					
ANR	48291	PtrMemberAccess	agent -> conn		48258	1					
ANR	48292	Identifier	agent		48258	0					
ANR	48293	Identifier	conn		48258	1					
ANR	48294	WhileStatement	while ( g_source_remove_by_user_data ( agent ) )		48258	3					
ANR	48295	Condition	g_source_remove_by_user_data ( agent )	341:11:10183:10217	48258	0	True				
ANR	48296	CallExpression	g_source_remove_by_user_data ( agent )		48258	0					
ANR	48297	Callee	g_source_remove_by_user_data		48258	0					
ANR	48298	Identifier	g_source_remove_by_user_data		48258	0					
ANR	48299	ArgumentList	agent		48258	1					
ANR	48300	Argument	agent		48258	0					
ANR	48301	Identifier	agent		48258	0					
ANR	48302	ContinueStatement	continue ;	342:8:10228:10236	48258	1	True				
ANR	48303	ExpressionStatement	"g_clear_pointer ( & agent -> x11_channel , g_io_channel_unref )"	344:4:10243:10299	48258	4	True				
ANR	48304	CallExpression	"g_clear_pointer ( & agent -> x11_channel , g_io_channel_unref )"		48258	0					
ANR	48305	Callee	g_clear_pointer		48258	0					
ANR	48306	Identifier	g_clear_pointer		48258	0					
ANR	48307	ArgumentList	& agent -> x11_channel		48258	1					
ANR	48308	Argument	& agent -> x11_channel		48258	0					
ANR	48309	UnaryOperationExpression	& agent -> x11_channel		48258	0					
ANR	48310	UnaryOperator	&		48258	0					
ANR	48311	PtrMemberAccess	agent -> x11_channel		48258	1					
ANR	48312	Identifier	agent		48258	0					
ANR	48313	Identifier	x11_channel		48258	1					
ANR	48314	Argument	g_io_channel_unref		48258	1					
ANR	48315	Identifier	g_io_channel_unref		48258	0					
ANR	48316	ExpressionStatement	"g_clear_pointer ( & agent -> loop , g_main_loop_unref )"	345:4:10305:10353	48258	5	True				
ANR	48317	CallExpression	"g_clear_pointer ( & agent -> loop , g_main_loop_unref )"		48258	0					
ANR	48318	Callee	g_clear_pointer		48258	0					
ANR	48319	Identifier	g_clear_pointer		48258	0					
ANR	48320	ArgumentList	& agent -> loop		48258	1					
ANR	48321	Argument	& agent -> loop		48258	0					
ANR	48322	UnaryOperationExpression	& agent -> loop		48258	0					
ANR	48323	UnaryOperator	&		48258	0					
ANR	48324	PtrMemberAccess	agent -> loop		48258	1					
ANR	48325	Identifier	agent		48258	0					
ANR	48326	Identifier	loop		48258	1					
ANR	48327	Argument	g_main_loop_unref		48258	1					
ANR	48328	Identifier	g_main_loop_unref		48258	0					
ANR	48329	ExpressionStatement	g_free ( agent )	346:4:10359:10372	48258	6	True				
ANR	48330	CallExpression	g_free ( agent )		48258	0					
ANR	48331	Callee	g_free		48258	0					
ANR	48332	Identifier	g_free		48258	0					
ANR	48333	ArgumentList	agent		48258	1					
ANR	48334	Argument	agent		48258	0					
ANR	48335	Identifier	agent		48258	0					
ANR	48336	ReturnType	static void		48258	1					
ANR	48337	Identifier	vdagent_destroy		48258	2					
ANR	48338	ParameterList	VDAgent * agent		48258	3					
ANR	48339	Parameter	VDAgent * agent	335:28:10012:10025	48258	0	True				
ANR	48340	ParameterType	VDAgent *		48258	0					
ANR	48341	Identifier	agent		48258	1					
ANR	48342	CFGEntryNode	ENTRY		48258		True				
ANR	48343	CFGExitNode	EXIT		48258		True				
ANR	48344	Symbol	g_io_channel_unref		48258						
ANR	48345	Symbol	agent		48258						
ANR	48346	Symbol	NULL		48258						
ANR	48347	Symbol	agent -> conn		48258						
ANR	48348	Symbol	* agent		48258						
ANR	48349	Symbol	& agent -> conn		48258						
ANR	48350	Symbol	g_main_loop_unref		48258						
ANR	48351	Symbol	g_source_remove_by_user_data		48258						
ANR	48352	Symbol	& agent -> loop		48258						
ANR	48353	Symbol	agent -> x11		48258						
ANR	48354	Symbol	& agent -> x11_channel		48258						
ANR	48355	Function	vdagent_init_async_cb	349:0:10377:11665							
ANR	48356	FunctionDef	vdagent_init_async_cb (gpointer user_data)		48355	0					
ANR	48357	CompoundStatement		350:0:10435:11665	48355	0					
ANR	48358	IdentifierDeclStatement	VDAgent * agent = user_data ;	351:4:10441:10467	48355	0	True				
ANR	48359	IdentifierDecl	* agent = user_data		48355	0					
ANR	48360	IdentifierDeclType	VDAgent *		48355	0					
ANR	48361	Identifier	agent		48355	1					
ANR	48362	AssignmentExpression	* agent = user_data		48355	2		=			
ANR	48363	Identifier	user_data		48355	0					
ANR	48364	Identifier	user_data		48355	1					
ANR	48365	ExpressionStatement	"agent -> conn = udscs_connect ( vdagentd_socket , daemon_read_complete , daemon_disconnect_cb , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"	353:4:10474:10674	48355	1	True				
ANR	48366	AssignmentExpression	"agent -> conn = udscs_connect ( vdagentd_socket , daemon_read_complete , daemon_disconnect_cb , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		48355	0		=			
ANR	48367	PtrMemberAccess	agent -> conn		48355	0					
ANR	48368	Identifier	agent		48355	0					
ANR	48369	Identifier	conn		48355	1					
ANR	48370	CallExpression	"udscs_connect ( vdagentd_socket , daemon_read_complete , daemon_disconnect_cb , vdagentd_messages , VDAGENTD_NO_MESSAGES , debug )"		48355	1					
ANR	48371	Callee	udscs_connect		48355	0					
ANR	48372	Identifier	udscs_connect		48355	0					
ANR	48373	ArgumentList	vdagentd_socket		48355	1					
ANR	48374	Argument	vdagentd_socket		48355	0					
ANR	48375	Identifier	vdagentd_socket		48355	0					
ANR	48376	Argument	daemon_read_complete		48355	1					
ANR	48377	Identifier	daemon_read_complete		48355	0					
ANR	48378	Argument	daemon_disconnect_cb		48355	2					
ANR	48379	Identifier	daemon_disconnect_cb		48355	0					
ANR	48380	Argument	vdagentd_messages		48355	3					
ANR	48381	Identifier	vdagentd_messages		48355	0					
ANR	48382	Argument	VDAGENTD_NO_MESSAGES		48355	4					
ANR	48383	Identifier	VDAGENTD_NO_MESSAGES		48355	0					
ANR	48384	Argument	debug		48355	5					
ANR	48385	Identifier	debug		48355	0					
ANR	48386	IfStatement	if ( agent -> conn == NULL )		48355	2					
ANR	48387	Condition	agent -> conn == NULL	356:8:10684:10702	48355	0	True				
ANR	48388	EqualityExpression	agent -> conn == NULL		48355	0		==			
ANR	48389	PtrMemberAccess	agent -> conn		48355	0					
ANR	48390	Identifier	agent		48355	0					
ANR	48391	Identifier	conn		48355	1					
ANR	48392	Identifier	NULL		48355	1					
ANR	48393	CompoundStatement		7:29:269:269	48355	1					
ANR	48394	ExpressionStatement	"g_timeout_add_seconds ( 1 , vdagent_init_async_cb , agent )"	357:8:10715:10769	48355	0	True				
ANR	48395	CallExpression	"g_timeout_add_seconds ( 1 , vdagent_init_async_cb , agent )"		48355	0					
ANR	48396	Callee	g_timeout_add_seconds		48355	0					
ANR	48397	Identifier	g_timeout_add_seconds		48355	0					
ANR	48398	ArgumentList	1		48355	1					
ANR	48399	Argument	1		48355	0					
ANR	48400	PrimaryExpression	1		48355	0					
ANR	48401	Argument	vdagent_init_async_cb		48355	1					
ANR	48402	Identifier	vdagent_init_async_cb		48355	0					
ANR	48403	Argument	agent		48355	2					
ANR	48404	Identifier	agent		48355	0					
ANR	48405	ReturnStatement	return G_SOURCE_REMOVE ;	358:8:10779:10801	48355	1	True				
ANR	48406	Identifier	G_SOURCE_REMOVE		48355	0					
ANR	48407	ExpressionStatement	"udscs_set_user_data ( agent -> conn , agent )"	360:4:10813:10852	48355	3	True				
ANR	48408	CallExpression	"udscs_set_user_data ( agent -> conn , agent )"		48355	0					
ANR	48409	Callee	udscs_set_user_data		48355	0					
ANR	48410	Identifier	udscs_set_user_data		48355	0					
ANR	48411	ArgumentList	agent -> conn		48355	1					
ANR	48412	Argument	agent -> conn		48355	0					
ANR	48413	PtrMemberAccess	agent -> conn		48355	0					
ANR	48414	Identifier	agent		48355	0					
ANR	48415	Identifier	conn		48355	1					
ANR	48416	Argument	agent		48355	1					
ANR	48417	Identifier	agent		48355	0					
ANR	48418	ExpressionStatement	"agent -> x11 = vdagent_x11_create ( agent -> conn , debug , x11_sync )"	362:4:10859:10920	48355	4	True				
ANR	48419	AssignmentExpression	"agent -> x11 = vdagent_x11_create ( agent -> conn , debug , x11_sync )"		48355	0		=			
ANR	48420	PtrMemberAccess	agent -> x11		48355	0					
ANR	48421	Identifier	agent		48355	0					
ANR	48422	Identifier	x11		48355	1					
ANR	48423	CallExpression	"vdagent_x11_create ( agent -> conn , debug , x11_sync )"		48355	1					
ANR	48424	Callee	vdagent_x11_create		48355	0					
ANR	48425	Identifier	vdagent_x11_create		48355	0					
ANR	48426	ArgumentList	agent -> conn		48355	1					
ANR	48427	Argument	agent -> conn		48355	0					
ANR	48428	PtrMemberAccess	agent -> conn		48355	0					
ANR	48429	Identifier	agent		48355	0					
ANR	48430	Identifier	conn		48355	1					
ANR	48431	Argument	debug		48355	1					
ANR	48432	Identifier	debug		48355	0					
ANR	48433	Argument	x11_sync		48355	2					
ANR	48434	Identifier	x11_sync		48355	0					
ANR	48435	IfStatement	if ( agent -> x11 == NULL )		48355	5					
ANR	48436	Condition	agent -> x11 == NULL	363:8:10930:10947	48355	0	True				
ANR	48437	EqualityExpression	agent -> x11 == NULL		48355	0		==			
ANR	48438	PtrMemberAccess	agent -> x11		48355	0					
ANR	48439	Identifier	agent		48355	0					
ANR	48440	Identifier	x11		48355	1					
ANR	48441	Identifier	NULL		48355	1					
ANR	48442	GotoStatement	goto err_init ;	364:8:10958:10971	48355	1	True				
ANR	48443	Identifier	err_init		48355	0					
ANR	48444	ExpressionStatement	agent -> x11_channel = g_io_channel_unix_new ( vdagent_x11_get_fd ( agent -> x11 ) )	365:4:10977:11051	48355	6	True				
ANR	48445	AssignmentExpression	agent -> x11_channel = g_io_channel_unix_new ( vdagent_x11_get_fd ( agent -> x11 ) )		48355	0		=			
ANR	48446	PtrMemberAccess	agent -> x11_channel		48355	0					
ANR	48447	Identifier	agent		48355	0					
ANR	48448	Identifier	x11_channel		48355	1					
ANR	48449	CallExpression	g_io_channel_unix_new ( vdagent_x11_get_fd ( agent -> x11 ) )		48355	1					
ANR	48450	Callee	g_io_channel_unix_new		48355	0					
ANR	48451	Identifier	g_io_channel_unix_new		48355	0					
ANR	48452	ArgumentList	vdagent_x11_get_fd ( agent -> x11 )		48355	1					
ANR	48453	Argument	vdagent_x11_get_fd ( agent -> x11 )		48355	0					
ANR	48454	CallExpression	vdagent_x11_get_fd ( agent -> x11 )		48355	0					
ANR	48455	Callee	vdagent_x11_get_fd		48355	0					
ANR	48456	Identifier	vdagent_x11_get_fd		48355	0					
ANR	48457	ArgumentList	agent -> x11		48355	1					
ANR	48458	Argument	agent -> x11		48355	0					
ANR	48459	PtrMemberAccess	agent -> x11		48355	0					
ANR	48460	Identifier	agent		48355	0					
ANR	48461	Identifier	x11		48355	1					
ANR	48462	IfStatement	if ( agent -> x11_channel == NULL )		48355	7					
ANR	48463	Condition	agent -> x11_channel == NULL	366:8:11061:11086	48355	0	True				
ANR	48464	EqualityExpression	agent -> x11_channel == NULL		48355	0		==			
ANR	48465	PtrMemberAccess	agent -> x11_channel		48355	0					
ANR	48466	Identifier	agent		48355	0					
ANR	48467	Identifier	x11_channel		48355	1					
ANR	48468	Identifier	NULL		48355	1					
ANR	48469	GotoStatement	goto err_init ;	367:8:11097:11110	48355	1	True				
ANR	48470	Identifier	err_init		48355	0					
ANR	48471	ExpressionStatement	"g_io_add_watch ( agent -> x11_channel , G_IO_IN , x11_io_channel_cb , agent )"	369:4:11117:11243	48355	8	True				
ANR	48472	CallExpression	"g_io_add_watch ( agent -> x11_channel , G_IO_IN , x11_io_channel_cb , agent )"		48355	0					
ANR	48473	Callee	g_io_add_watch		48355	0					
ANR	48474	Identifier	g_io_add_watch		48355	0					
ANR	48475	ArgumentList	agent -> x11_channel		48355	1					
ANR	48476	Argument	agent -> x11_channel		48355	0					
ANR	48477	PtrMemberAccess	agent -> x11_channel		48355	0					
ANR	48478	Identifier	agent		48355	0					
ANR	48479	Identifier	x11_channel		48355	1					
ANR	48480	Argument	G_IO_IN		48355	1					
ANR	48481	Identifier	G_IO_IN		48355	0					
ANR	48482	Argument	x11_io_channel_cb		48355	2					
ANR	48483	Identifier	x11_io_channel_cb		48355	0					
ANR	48484	Argument	agent		48355	3					
ANR	48485	Identifier	agent		48355	0					
ANR	48486	IfStatement	if ( ! vdagent_init_file_xfer ( agent ) )		48355	9					
ANR	48487	Condition	! vdagent_init_file_xfer ( agent )	374:8:11254:11283	48355	0	True				
ANR	48488	UnaryOperationExpression	! vdagent_init_file_xfer ( agent )		48355	0					
ANR	48489	UnaryOperator	!		48355	0					
ANR	48490	CallExpression	vdagent_init_file_xfer ( agent )		48355	1					
ANR	48491	Callee	vdagent_init_file_xfer		48355	0					
ANR	48492	Identifier	vdagent_init_file_xfer		48355	0					
ANR	48493	ArgumentList	agent		48355	1					
ANR	48494	Argument	agent		48355	0					
ANR	48495	Identifier	agent		48355	0					
ANR	48496	ExpressionStatement	"syslog ( LOG_WARNING , ""File transfer is disabled"" )"	375:8:11294:11342	48355	1	True				
ANR	48497	CallExpression	"syslog ( LOG_WARNING , ""File transfer is disabled"" )"		48355	0					
ANR	48498	Callee	syslog		48355	0					
ANR	48499	Identifier	syslog		48355	0					
ANR	48500	ArgumentList	LOG_WARNING		48355	1					
ANR	48501	Argument	LOG_WARNING		48355	0					
ANR	48502	Identifier	LOG_WARNING		48355	0					
ANR	48503	Argument	"""File transfer is disabled"""		48355	1					
ANR	48504	PrimaryExpression	"""File transfer is disabled"""		48355	0					
ANR	48505	IfStatement	if ( parent_socket != - 1 )		48355	10					
ANR	48506	Condition	parent_socket != - 1	377:8:11353:11371	48355	0	True				
ANR	48507	EqualityExpression	parent_socket != - 1		48355	0		!=			
ANR	48508	Identifier	parent_socket		48355	0					
ANR	48509	UnaryOperationExpression	- 1		48355	1					
ANR	48510	UnaryOperator	-		48355	0					
ANR	48511	PrimaryExpression	1		48355	1					
ANR	48512	CompoundStatement		28:29:938:938	48355	1					
ANR	48513	IfStatement	"if ( write ( parent_socket , ""OK"" , 2 ) != 2 )"		48355	0					
ANR	48514	Condition	"write ( parent_socket , ""OK"" , 2 ) != 2"	378:12:11388:11421	48355	0	True				
ANR	48515	EqualityExpression	"write ( parent_socket , ""OK"" , 2 ) != 2"		48355	0		!=			
ANR	48516	CallExpression	"write ( parent_socket , ""OK"" , 2 )"		48355	0					
ANR	48517	Callee	write		48355	0					
ANR	48518	Identifier	write		48355	0					
ANR	48519	ArgumentList	parent_socket		48355	1					
ANR	48520	Argument	parent_socket		48355	0					
ANR	48521	Identifier	parent_socket		48355	0					
ANR	48522	Argument	"""OK"""		48355	1					
ANR	48523	PrimaryExpression	"""OK"""		48355	0					
ANR	48524	Argument	2		48355	2					
ANR	48525	PrimaryExpression	2		48355	0					
ANR	48526	PrimaryExpression	2		48355	1					
ANR	48527	ExpressionStatement	"syslog ( LOG_WARNING , ""Parent already gone."" )"	379:12:11436:11479	48355	1	True				
ANR	48528	CallExpression	"syslog ( LOG_WARNING , ""Parent already gone."" )"		48355	0					
ANR	48529	Callee	syslog		48355	0					
ANR	48530	Identifier	syslog		48355	0					
ANR	48531	ArgumentList	LOG_WARNING		48355	1					
ANR	48532	Argument	LOG_WARNING		48355	0					
ANR	48533	Identifier	LOG_WARNING		48355	0					
ANR	48534	Argument	"""Parent already gone."""		48355	1					
ANR	48535	PrimaryExpression	"""Parent already gone."""		48355	0					
ANR	48536	ExpressionStatement	close ( parent_socket )	380:8:11489:11509	48355	1	True				
ANR	48537	CallExpression	close ( parent_socket )		48355	0					
ANR	48538	Callee	close		48355	0					
ANR	48539	Identifier	close		48355	0					
ANR	48540	ArgumentList	parent_socket		48355	1					
ANR	48541	Argument	parent_socket		48355	0					
ANR	48542	Identifier	parent_socket		48355	0					
ANR	48543	ExpressionStatement	parent_socket = - 1	381:8:11519:11537	48355	2	True				
ANR	48544	AssignmentExpression	parent_socket = - 1		48355	0		=			
ANR	48545	Identifier	parent_socket		48355	0					
ANR	48546	UnaryOperationExpression	- 1		48355	1					
ANR	48547	UnaryOperator	-		48355	0					
ANR	48548	PrimaryExpression	1		48355	1					
ANR	48549	ReturnStatement	return G_SOURCE_REMOVE ;	384:4:11550:11572	48355	11	True				
ANR	48550	Identifier	G_SOURCE_REMOVE		48355	0					
ANR	48551	Label	err_init :	386:0:11575:11583	48355	12	True				
ANR	48552	Identifier	err_init		48355	0					
ANR	48553	ExpressionStatement	g_main_loop_quit ( agent -> loop )	387:4:11589:11618	48355	13	True				
ANR	48554	CallExpression	g_main_loop_quit ( agent -> loop )		48355	0					
ANR	48555	Callee	g_main_loop_quit		48355	0					
ANR	48556	Identifier	g_main_loop_quit		48355	0					
ANR	48557	ArgumentList	agent -> loop		48355	1					
ANR	48558	Argument	agent -> loop		48355	0					
ANR	48559	PtrMemberAccess	agent -> loop		48355	0					
ANR	48560	Identifier	agent		48355	0					
ANR	48561	Identifier	loop		48355	1					
ANR	48562	ExpressionStatement	quit = TRUE	388:4:11624:11635	48355	14	True				
ANR	48563	AssignmentExpression	quit = TRUE		48355	0		=			
ANR	48564	Identifier	quit		48355	0					
ANR	48565	Identifier	TRUE		48355	1					
ANR	48566	ReturnStatement	return G_SOURCE_REMOVE ;	389:4:11641:11663	48355	15	True				
ANR	48567	Identifier	G_SOURCE_REMOVE		48355	0					
ANR	48568	ReturnType	static gboolean		48355	1					
ANR	48569	Identifier	vdagent_init_async_cb		48355	2					
ANR	48570	ParameterList	gpointer user_data		48355	3					
ANR	48571	Parameter	gpointer user_data	349:38:10415:10432	48355	0	True				
ANR	48572	ParameterType	gpointer		48355	0					
ANR	48573	Identifier	user_data		48355	1					
ANR	48574	CFGEntryNode	ENTRY		48355		True				
ANR	48575	CFGExitNode	EXIT		48355		True				
ANR	48576	Symbol	agent		48355						
ANR	48577	Symbol	vdagentd_messages		48355						
ANR	48578	Symbol	G_IO_IN		48355						
ANR	48579	Symbol	x11_io_channel_cb		48355						
ANR	48580	Symbol	LOG_WARNING		48355						
ANR	48581	Symbol	vdagent_init_async_cb		48355						
ANR	48582	Symbol	x11_sync		48355						
ANR	48583	Symbol	agent -> loop		48355						
ANR	48584	Symbol	vdagent_init_file_xfer		48355						
ANR	48585	Symbol	vdagentd_socket		48355						
ANR	48586	Symbol	write		48355						
ANR	48587	Symbol	vdagent_x11_get_fd		48355						
ANR	48588	Symbol	g_io_channel_unix_new		48355						
ANR	48589	Symbol	debug		48355						
ANR	48590	Symbol	NULL		48355						
ANR	48591	Symbol	G_SOURCE_REMOVE		48355						
ANR	48592	Symbol	agent -> conn		48355						
ANR	48593	Symbol	* agent		48355						
ANR	48594	Symbol	daemon_read_complete		48355						
ANR	48595	Symbol	TRUE		48355						
ANR	48596	Symbol	user_data		48355						
ANR	48597	Symbol	agent -> x11		48355						
ANR	48598	Symbol	daemon_disconnect_cb		48355						
ANR	48599	Symbol	vdagent_x11_create		48355						
ANR	48600	Symbol	VDAGENTD_NO_MESSAGES		48355						
ANR	48601	Symbol	parent_socket		48355						
ANR	48602	Symbol	udscs_connect		48355						
ANR	48603	Symbol	quit		48355						
ANR	48604	Symbol	agent -> x11_channel		48355						
ANR	48605	Function	main	392:0:11668:13266							
ANR	48606	FunctionDef	"main (int argc , char * argv [ ])"		48605	0					
ANR	48607	CompoundStatement		393:0:11701:13266	48605	0					
ANR	48608	IdentifierDeclStatement	GOptionContext * context ;	394:4:11707:11730	48605	0	True				
ANR	48609	IdentifierDecl	* context		48605	0					
ANR	48610	IdentifierDeclType	GOptionContext *		48605	0					
ANR	48611	Identifier	context		48605	1					
ANR	48612	IdentifierDeclStatement	GError * error = NULL ;	395:4:11736:11756	48605	1	True				
ANR	48613	IdentifierDecl	* error = NULL		48605	0					
ANR	48614	IdentifierDeclType	GError *		48605	0					
ANR	48615	Identifier	error		48605	1					
ANR	48616	AssignmentExpression	* error = NULL		48605	2		=			
ANR	48617	Identifier	NULL		48605	0					
ANR	48618	Identifier	NULL		48605	1					
ANR	48619	IdentifierDeclStatement	VDAgent * agent ;	396:4:11762:11776	48605	2	True				
ANR	48620	IdentifierDecl	* agent		48605	0					
ANR	48621	IdentifierDeclType	VDAgent *		48605	0					
ANR	48622	Identifier	agent		48605	1					
ANR	48623	ExpressionStatement	context = g_option_context_new ( NULL )	398:4:11783:11819	48605	3	True				
ANR	48624	AssignmentExpression	context = g_option_context_new ( NULL )		48605	0		=			
ANR	48625	Identifier	context		48605	0					
ANR	48626	CallExpression	g_option_context_new ( NULL )		48605	1					
ANR	48627	Callee	g_option_context_new		48605	0					
ANR	48628	Identifier	g_option_context_new		48605	0					
ANR	48629	ArgumentList	NULL		48605	1					
ANR	48630	Argument	NULL		48605	0					
ANR	48631	Identifier	NULL		48605	0					
ANR	48632	ExpressionStatement	"g_option_context_add_main_entries ( context , entries , NULL )"	399:4:11825:11882	48605	4	True				
ANR	48633	CallExpression	"g_option_context_add_main_entries ( context , entries , NULL )"		48605	0					
ANR	48634	Callee	g_option_context_add_main_entries		48605	0					
ANR	48635	Identifier	g_option_context_add_main_entries		48605	0					
ANR	48636	ArgumentList	context		48605	1					
ANR	48637	Argument	context		48605	0					
ANR	48638	Identifier	context		48605	0					
ANR	48639	Argument	entries		48605	1					
ANR	48640	Identifier	entries		48605	0					
ANR	48641	Argument	NULL		48605	2					
ANR	48642	Identifier	NULL		48605	0					
ANR	48643	Statement	g_option_context_set_summary	400:4:11888:11915	48605	5	True				
ANR	48644	Statement	(	400:32:11916:11916	48605	6	True				
ANR	48645	Statement	context	400:33:11917:11923	48605	7	True				
ANR	48646	Statement	","	400:40:11924:11924	48605	8	True				
ANR	48647	Statement	"""\\tSpice session guest agent: X11\\n"""	401:33:11959:11994	48605	9	True				
ANR	48648	Statement	"""\\tVersion: """	402:33:12029:12041	48605	10	True				
ANR	48649	Statement	VERSION	402:47:12043:12049	48605	11	True				
ANR	48650	Statement	)	402:54:12050:12050	48605	12	True				
ANR	48651	ExpressionStatement		402:55:12051:12051	48605	13	True				
ANR	48652	ExpressionStatement	"g_option_context_parse ( context , & argc , & argv , & error )"	403:4:12057:12110	48605	14	True				
ANR	48653	CallExpression	"g_option_context_parse ( context , & argc , & argv , & error )"		48605	0					
ANR	48654	Callee	g_option_context_parse		48605	0					
ANR	48655	Identifier	g_option_context_parse		48605	0					
ANR	48656	ArgumentList	context		48605	1					
ANR	48657	Argument	context		48605	0					
ANR	48658	Identifier	context		48605	0					
ANR	48659	Argument	& argc		48605	1					
ANR	48660	UnaryOperationExpression	& argc		48605	0					
ANR	48661	UnaryOperator	&		48605	0					
ANR	48662	Identifier	argc		48605	1					
ANR	48663	Argument	& argv		48605	2					
ANR	48664	UnaryOperationExpression	& argv		48605	0					
ANR	48665	UnaryOperator	&		48605	0					
ANR	48666	Identifier	argv		48605	1					
ANR	48667	Argument	& error		48605	3					
ANR	48668	UnaryOperationExpression	& error		48605	0					
ANR	48669	UnaryOperator	&		48605	0					
ANR	48670	Identifier	error		48605	1					
ANR	48671	ExpressionStatement	g_option_context_free ( context )	404:4:12116:12146	48605	15	True				
ANR	48672	CallExpression	g_option_context_free ( context )		48605	0					
ANR	48673	Callee	g_option_context_free		48605	0					
ANR	48674	Identifier	g_option_context_free		48605	0					
ANR	48675	ArgumentList	context		48605	1					
ANR	48676	Argument	context		48605	0					
ANR	48677	Identifier	context		48605	0					
ANR	48678	IfStatement	if ( error != NULL )		48605	16					
ANR	48679	Condition	error != NULL	406:8:12157:12169	48605	0	True				
ANR	48680	EqualityExpression	error != NULL		48605	0		!=			
ANR	48681	Identifier	error		48605	0					
ANR	48682	Identifier	NULL		48605	1					
ANR	48683	CompoundStatement		14:23:470:470	48605	1					
ANR	48684	ExpressionStatement	"g_printerr ( ""Invalid arguments, %s\\n"" , error -> message )"	407:8:12182:12235	48605	0	True				
ANR	48685	CallExpression	"g_printerr ( ""Invalid arguments, %s\\n"" , error -> message )"		48605	0					
ANR	48686	Callee	g_printerr		48605	0					
ANR	48687	Identifier	g_printerr		48605	0					
ANR	48688	ArgumentList	"""Invalid arguments, %s\\n"""		48605	1					
ANR	48689	Argument	"""Invalid arguments, %s\\n"""		48605	0					
ANR	48690	PrimaryExpression	"""Invalid arguments, %s\\n"""		48605	0					
ANR	48691	Argument	error -> message		48605	1					
ANR	48692	PtrMemberAccess	error -> message		48605	0					
ANR	48693	Identifier	error		48605	0					
ANR	48694	Identifier	message		48605	1					
ANR	48695	ExpressionStatement	g_clear_error ( & error )	408:8:12245:12266	48605	1	True				
ANR	48696	CallExpression	g_clear_error ( & error )		48605	0					
ANR	48697	Callee	g_clear_error		48605	0					
ANR	48698	Identifier	g_clear_error		48605	0					
ANR	48699	ArgumentList	& error		48605	1					
ANR	48700	Argument	& error		48605	0					
ANR	48701	UnaryOperationExpression	& error		48605	0					
ANR	48702	UnaryOperator	&		48605	0					
ANR	48703	Identifier	error		48605	1					
ANR	48704	ReturnStatement	return - 1 ;	409:8:12276:12285	48605	2	True				
ANR	48705	UnaryOperationExpression	- 1		48605	0					
ANR	48706	UnaryOperator	-		48605	0					
ANR	48707	PrimaryExpression	1		48605	1					
ANR	48708	IfStatement	if ( portdev == NULL )		48605	17					
ANR	48709	Condition	portdev == NULL	413:8:12351:12365	48605	0	True				
ANR	48710	EqualityExpression	portdev == NULL		48605	0		==			
ANR	48711	Identifier	portdev		48605	0					
ANR	48712	Identifier	NULL		48605	1					
ANR	48713	ExpressionStatement	portdev = g_strdup ( DEFAULT_VIRTIO_PORT_PATH )	414:8:12376:12420	48605	1	True				
ANR	48714	AssignmentExpression	portdev = g_strdup ( DEFAULT_VIRTIO_PORT_PATH )		48605	0		=			
ANR	48715	Identifier	portdev		48605	0					
ANR	48716	CallExpression	g_strdup ( DEFAULT_VIRTIO_PORT_PATH )		48605	1					
ANR	48717	Callee	g_strdup		48605	0					
ANR	48718	Identifier	g_strdup		48605	0					
ANR	48719	ArgumentList	DEFAULT_VIRTIO_PORT_PATH		48605	1					
ANR	48720	Argument	DEFAULT_VIRTIO_PORT_PATH		48605	0					
ANR	48721	Identifier	DEFAULT_VIRTIO_PORT_PATH		48605	0					
ANR	48722	IfStatement	if ( vdagentd_socket == NULL )		48605	18					
ANR	48723	Condition	vdagentd_socket == NULL	416:8:12431:12453	48605	0	True				
ANR	48724	EqualityExpression	vdagentd_socket == NULL		48605	0		==			
ANR	48725	Identifier	vdagentd_socket		48605	0					
ANR	48726	Identifier	NULL		48605	1					
ANR	48727	ExpressionStatement	vdagentd_socket = g_strdup ( VDAGENTD_SOCKET )	417:8:12464:12507	48605	1	True				
ANR	48728	AssignmentExpression	vdagentd_socket = g_strdup ( VDAGENTD_SOCKET )		48605	0		=			
ANR	48729	Identifier	vdagentd_socket		48605	0					
ANR	48730	CallExpression	g_strdup ( VDAGENTD_SOCKET )		48605	1					
ANR	48731	Callee	g_strdup		48605	0					
ANR	48732	Identifier	g_strdup		48605	0					
ANR	48733	ArgumentList	VDAGENTD_SOCKET		48605	1					
ANR	48734	Argument	VDAGENTD_SOCKET		48605	0					
ANR	48735	Identifier	VDAGENTD_SOCKET		48605	0					
ANR	48736	ExpressionStatement	"openlog ( ""spice-vdagent"" , do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR ) , LOG_USER )"	419:4:12514:12609	48605	19	True				
ANR	48737	CallExpression	"openlog ( ""spice-vdagent"" , do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR ) , LOG_USER )"		48605	0					
ANR	48738	Callee	openlog		48605	0					
ANR	48739	Identifier	openlog		48605	0					
ANR	48740	ArgumentList	"""spice-vdagent"""		48605	1					
ANR	48741	Argument	"""spice-vdagent"""		48605	0					
ANR	48742	PrimaryExpression	"""spice-vdagent"""		48605	0					
ANR	48743	Argument	do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR )		48605	1					
ANR	48744	ConditionalExpression	do_daemonize ? LOG_PID : ( LOG_PID | LOG_PERROR )		48605	0					
ANR	48745	Condition	do_daemonize		48605	0					
ANR	48746	Identifier	do_daemonize		48605	0					
ANR	48747	Identifier	LOG_PID		48605	1					
ANR	48748	InclusiveOrExpression	LOG_PID | LOG_PERROR		48605	2		|			
ANR	48749	Identifier	LOG_PID		48605	0					
ANR	48750	Identifier	LOG_PERROR		48605	1					
ANR	48751	Argument	LOG_USER		48605	2					
ANR	48752	Identifier	LOG_USER		48605	0					
ANR	48753	IfStatement	if ( file_test ( portdev ) != 0 )		48605	20					
ANR	48754	Condition	file_test ( portdev ) != 0	422:8:12620:12642	48605	0	True				
ANR	48755	EqualityExpression	file_test ( portdev ) != 0		48605	0		!=			
ANR	48756	CallExpression	file_test ( portdev )		48605	0					
ANR	48757	Callee	file_test		48605	0					
ANR	48758	Identifier	file_test		48605	0					
ANR	48759	ArgumentList	portdev		48605	1					
ANR	48760	Argument	portdev		48605	0					
ANR	48761	Identifier	portdev		48605	0					
ANR	48762	PrimaryExpression	0		48605	1					
ANR	48763	CompoundStatement		30:33:943:943	48605	1					
ANR	48764	ExpressionStatement	"syslog ( LOG_ERR , ""Cannot access vdagent virtio channel %s"" , portdev )"	423:8:12655:12722	48605	0	True				
ANR	48765	CallExpression	"syslog ( LOG_ERR , ""Cannot access vdagent virtio channel %s"" , portdev )"		48605	0					
ANR	48766	Callee	syslog		48605	0					
ANR	48767	Identifier	syslog		48605	0					
ANR	48768	ArgumentList	LOG_ERR		48605	1					
ANR	48769	Argument	LOG_ERR		48605	0					
ANR	48770	Identifier	LOG_ERR		48605	0					
ANR	48771	Argument	"""Cannot access vdagent virtio channel %s"""		48605	1					
ANR	48772	PrimaryExpression	"""Cannot access vdagent virtio channel %s"""		48605	0					
ANR	48773	Argument	portdev		48605	2					
ANR	48774	Identifier	portdev		48605	0					
ANR	48775	ReturnStatement	return 1 ;	424:8:12732:12740	48605	1	True				
ANR	48776	PrimaryExpression	1		48605	0					
ANR	48777	IfStatement	if ( do_daemonize )		48605	21					
ANR	48778	Condition	do_daemonize	427:8:12757:12768	48605	0	True				
ANR	48779	Identifier	do_daemonize		48605	0					
ANR	48780	ExpressionStatement	parent_socket = daemonize ( )	428:8:12779:12806	48605	1	True				
ANR	48781	AssignmentExpression	parent_socket = daemonize ( )		48605	0		=			
ANR	48782	Identifier	parent_socket		48605	0					
ANR	48783	CallExpression	daemonize ( )		48605	1					
ANR	48784	Callee	daemonize		48605	0					
ANR	48785	Identifier	daemonize		48605	0					
ANR	48786	ArgumentList			48605	1					
ANR	48787	Label	reconnect :	430:0:12809:12818	48605	22	True				
ANR	48788	Identifier	reconnect		48605	0					
ANR	48789	IfStatement	if ( version_mismatch )		48605	23					
ANR	48790	Condition	version_mismatch	431:8:12828:12843	48605	0	True				
ANR	48791	Identifier	version_mismatch		48605	0					
ANR	48792	CompoundStatement		39:26:1144:1144	48605	1					
ANR	48793	ExpressionStatement	"syslog ( LOG_INFO , ""Version mismatch, restarting"" )"	432:8:12856:12904	48605	0	True				
ANR	48794	CallExpression	"syslog ( LOG_INFO , ""Version mismatch, restarting"" )"		48605	0					
ANR	48795	Callee	syslog		48605	0					
ANR	48796	Identifier	syslog		48605	0					
ANR	48797	ArgumentList	LOG_INFO		48605	1					
ANR	48798	Argument	LOG_INFO		48605	0					
ANR	48799	Identifier	LOG_INFO		48605	0					
ANR	48800	Argument	"""Version mismatch, restarting"""		48605	1					
ANR	48801	PrimaryExpression	"""Version mismatch, restarting"""		48605	0					
ANR	48802	ExpressionStatement	sleep ( 1 )	433:8:12914:12922	48605	1	True				
ANR	48803	CallExpression	sleep ( 1 )		48605	0					
ANR	48804	Callee	sleep		48605	0					
ANR	48805	Identifier	sleep		48605	0					
ANR	48806	ArgumentList	1		48605	1					
ANR	48807	Argument	1		48605	0					
ANR	48808	PrimaryExpression	1		48605	0					
ANR	48809	ExpressionStatement	"execvp ( argv [ 0 ] , argv )"	434:8:12932:12953	48605	2	True				
ANR	48810	CallExpression	"execvp ( argv [ 0 ] , argv )"		48605	0					
ANR	48811	Callee	execvp		48605	0					
ANR	48812	Identifier	execvp		48605	0					
ANR	48813	ArgumentList	argv [ 0 ]		48605	1					
ANR	48814	Argument	argv [ 0 ]		48605	0					
ANR	48815	ArrayIndexing	argv [ 0 ]		48605	0					
ANR	48816	Identifier	argv		48605	0					
ANR	48817	PrimaryExpression	0		48605	1					
ANR	48818	Argument	argv		48605	1					
ANR	48819	Identifier	argv		48605	0					
ANR	48820	ExpressionStatement	agent = vdagent_new ( )	437:4:12966:12987	48605	24	True				
ANR	48821	AssignmentExpression	agent = vdagent_new ( )		48605	0		=			
ANR	48822	Identifier	agent		48605	0					
ANR	48823	CallExpression	vdagent_new ( )		48605	1					
ANR	48824	Callee	vdagent_new		48605	0					
ANR	48825	Identifier	vdagent_new		48605	0					
ANR	48826	ArgumentList			48605	1					
ANR	48827	ExpressionStatement	"g_timeout_add ( 0 , vdagent_init_async_cb , agent )"	439:4:12994:13040	48605	25	True				
ANR	48828	CallExpression	"g_timeout_add ( 0 , vdagent_init_async_cb , agent )"		48605	0					
ANR	48829	Callee	g_timeout_add		48605	0					
ANR	48830	Identifier	g_timeout_add		48605	0					
ANR	48831	ArgumentList	0		48605	1					
ANR	48832	Argument	0		48605	0					
ANR	48833	PrimaryExpression	0		48605	0					
ANR	48834	Argument	vdagent_init_async_cb		48605	1					
ANR	48835	Identifier	vdagent_init_async_cb		48605	0					
ANR	48836	Argument	agent		48605	2					
ANR	48837	Identifier	agent		48605	0					
ANR	48838	ExpressionStatement	g_main_loop_run ( agent -> loop )	441:4:13047:13075	48605	26	True				
ANR	48839	CallExpression	g_main_loop_run ( agent -> loop )		48605	0					
ANR	48840	Callee	g_main_loop_run		48605	0					
ANR	48841	Identifier	g_main_loop_run		48605	0					
ANR	48842	ArgumentList	agent -> loop		48605	1					
ANR	48843	Argument	agent -> loop		48605	0					
ANR	48844	PtrMemberAccess	agent -> loop		48605	0					
ANR	48845	Identifier	agent		48605	0					
ANR	48846	Identifier	loop		48605	1					
ANR	48847	ExpressionStatement	vdagent_destroy ( agent )	443:4:13082:13104	48605	27	True				
ANR	48848	CallExpression	vdagent_destroy ( agent )		48605	0					
ANR	48849	Callee	vdagent_destroy		48605	0					
ANR	48850	Identifier	vdagent_destroy		48605	0					
ANR	48851	ArgumentList	agent		48605	1					
ANR	48852	Argument	agent		48605	0					
ANR	48853	Identifier	agent		48605	0					
ANR	48854	ExpressionStatement	agent = NULL	444:4:13110:13122	48605	28	True				
ANR	48855	AssignmentExpression	agent = NULL		48605	0		=			
ANR	48856	Identifier	agent		48605	0					
ANR	48857	Identifier	NULL		48605	1					
ANR	48858	IfStatement	if ( ! quit && do_daemonize )		48605	29					
ANR	48859	Condition	! quit && do_daemonize	446:8:13133:13153	48605	0	True				
ANR	48860	AndExpression	! quit && do_daemonize		48605	0		&&			
ANR	48861	UnaryOperationExpression	! quit		48605	0					
ANR	48862	UnaryOperator	!		48605	0					
ANR	48863	Identifier	quit		48605	1					
ANR	48864	Identifier	do_daemonize		48605	1					
ANR	48865	GotoStatement	goto reconnect ;	447:8:13164:13178	48605	1	True				
ANR	48866	Identifier	reconnect		48605	0					
ANR	48867	ExpressionStatement	g_free ( fx_dir )	449:4:13185:13199	48605	30	True				
ANR	48868	CallExpression	g_free ( fx_dir )		48605	0					
ANR	48869	Callee	g_free		48605	0					
ANR	48870	Identifier	g_free		48605	0					
ANR	48871	ArgumentList	fx_dir		48605	1					
ANR	48872	Argument	fx_dir		48605	0					
ANR	48873	Identifier	fx_dir		48605	0					
ANR	48874	ExpressionStatement	g_free ( portdev )	450:4:13205:13220	48605	31	True				
ANR	48875	CallExpression	g_free ( portdev )		48605	0					
ANR	48876	Callee	g_free		48605	0					
ANR	48877	Identifier	g_free		48605	0					
ANR	48878	ArgumentList	portdev		48605	1					
ANR	48879	Argument	portdev		48605	0					
ANR	48880	Identifier	portdev		48605	0					
ANR	48881	ExpressionStatement	g_free ( vdagentd_socket )	451:4:13226:13249	48605	32	True				
ANR	48882	CallExpression	g_free ( vdagentd_socket )		48605	0					
ANR	48883	Callee	g_free		48605	0					
ANR	48884	Identifier	g_free		48605	0					
ANR	48885	ArgumentList	vdagentd_socket		48605	1					
ANR	48886	Argument	vdagentd_socket		48605	0					
ANR	48887	Identifier	vdagentd_socket		48605	0					
ANR	48888	ReturnStatement	return 0 ;	453:4:13256:13264	48605	33	True				
ANR	48889	PrimaryExpression	0		48605	0					
ANR	48890	ReturnType	int		48605	1					
ANR	48891	Identifier	main		48605	2					
ANR	48892	ParameterList	"int argc , char * argv [ ]"		48605	3					
ANR	48893	Parameter	int argc	392:9:11677:11684	48605	0	True				
ANR	48894	ParameterType	int		48605	0					
ANR	48895	Identifier	argc		48605	1					
ANR	48896	Parameter	char * argv [ ]	392:19:11687:11698	48605	1	True				
ANR	48897	ParameterType	char * [ ]		48605	0					
ANR	48898	Identifier	argv		48605	1					
ANR	48899	CFGEntryNode	ENTRY		48605		True				
ANR	48900	CFGExitNode	EXIT		48605		True				
ANR	48901	Symbol	agent		48605						
ANR	48902	Symbol	& error		48605						
ANR	48903	Symbol	LOG_INFO		48605						
ANR	48904	Symbol	vdagent_new		48605						
ANR	48905	Symbol	DEFAULT_VIRTIO_PORT_PATH		48605						
ANR	48906	Symbol	* argv		48605						
ANR	48907	Symbol	error		48605						
ANR	48908	Symbol	argv		48605						
ANR	48909	Symbol	vdagent_init_async_cb		48605						
ANR	48910	Symbol	& argc		48605						
ANR	48911	Symbol	& argv		48605						
ANR	48912	Symbol	agent -> loop		48605						
ANR	48913	Symbol	portdev		48605						
ANR	48914	Symbol	g_option_context_new		48605						
ANR	48915	Symbol	LOG_PERROR		48605						
ANR	48916	Symbol	LOG_ERR		48605						
ANR	48917	Symbol	context		48605						
ANR	48918	Symbol	g_strdup		48605						
ANR	48919	Symbol	vdagentd_socket		48605						
ANR	48920	Symbol	do_daemonize		48605						
ANR	48921	Symbol	argc		48605						
ANR	48922	Symbol	daemonize		48605						
ANR	48923	Symbol	NULL		48605						
ANR	48924	Symbol	error -> message		48605						
ANR	48925	Symbol	* agent		48605						
ANR	48926	Symbol	LOG_PID		48605						
ANR	48927	Symbol	entries		48605						
ANR	48928	Symbol	parent_socket		48605						
ANR	48929	Symbol	version_mismatch		48605						
ANR	48930	Symbol	LOG_USER		48605						
ANR	48931	Symbol	fx_dir		48605						
ANR	48932	Symbol	* error		48605						
ANR	48933	Symbol	VDAGENTD_SOCKET		48605						
ANR	48934	Symbol	quit		48605						
ANR	48935	Symbol	file_test		48605						
