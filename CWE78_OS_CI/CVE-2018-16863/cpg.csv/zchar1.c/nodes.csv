command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10964426	File	data/converged/CVE-2018-16863_ghostpdl/zchar1.c								
ANR	10964427	Function	font_uses_charstrings	78:0:2591:2791							
ANR	10964428	FunctionDef	font_uses_charstrings (const gs_font * pfont)		10964427	0					
ANR	10964429	CompoundStatement		80:0:2647:2791	10964427	0					
ANR	10964430	ReturnStatement	return ( pfont -> FontType == ft_encrypted || pfont -> FontType == ft_encrypted2 || pfont -> FontType == ft_disk_based ) ;	81:4:2653:2789	10964427	0	True				
ANR	10964431	OrExpression	pfont -> FontType == ft_encrypted || pfont -> FontType == ft_encrypted2 || pfont -> FontType == ft_disk_based		10964427	0		||			
ANR	10964432	EqualityExpression	pfont -> FontType == ft_encrypted		10964427	0		==			
ANR	10964433	PtrMemberAccess	pfont -> FontType		10964427	0					
ANR	10964434	Identifier	pfont		10964427	0					
ANR	10964435	Identifier	FontType		10964427	1					
ANR	10964436	Identifier	ft_encrypted		10964427	1					
ANR	10964437	OrExpression	pfont -> FontType == ft_encrypted2 || pfont -> FontType == ft_disk_based		10964427	1		||			
ANR	10964438	EqualityExpression	pfont -> FontType == ft_encrypted2		10964427	0		==			
ANR	10964439	PtrMemberAccess	pfont -> FontType		10964427	0					
ANR	10964440	Identifier	pfont		10964427	0					
ANR	10964441	Identifier	FontType		10964427	1					
ANR	10964442	Identifier	ft_encrypted2		10964427	1					
ANR	10964443	EqualityExpression	pfont -> FontType == ft_disk_based		10964427	1		==			
ANR	10964444	PtrMemberAccess	pfont -> FontType		10964427	0					
ANR	10964445	Identifier	pfont		10964427	0					
ANR	10964446	Identifier	FontType		10964427	1					
ANR	10964447	Identifier	ft_disk_based		10964427	1					
ANR	10964448	ReturnType	static bool		10964427	1					
ANR	10964449	Identifier	font_uses_charstrings		10964427	2					
ANR	10964450	ParameterList	const gs_font * pfont		10964427	3					
ANR	10964451	Parameter	const gs_font * pfont	79:22:2625:2644	10964427	0	True				
ANR	10964452	ParameterType	const gs_font *		10964427	0					
ANR	10964453	Identifier	pfont		10964427	1					
ANR	10964454	CFGEntryNode	ENTRY		10964427		True				
ANR	10964455	CFGExitNode	EXIT		10964427		True				
ANR	10964456	Symbol	* pfont		10964427						
ANR	10964457	Symbol	pfont -> FontType		10964427						
ANR	10964458	Symbol	pfont		10964427						
ANR	10964459	Symbol	ft_disk_based		10964427						
ANR	10964460	Symbol	ft_encrypted2		10964427						
ANR	10964461	Symbol	ft_encrypted		10964427						
ANR	10964462	Function	type1_exec_init	87:0:2833:4104							
ANR	10964463	FunctionDef	"type1_exec_init (gs_type1_state * pcis , gs_text_enum_t * penum , gs_gstate * pgs , gs_font_type1 * pfont1)"		10964462	0					
ANR	10964464	CompoundStatement		90:0:2960:4104	10964462	0					
ANR	10964465	IdentifierDeclStatement	int alpha_bits = 1 ;	97:4:3155:3173	10964462	0	True				
ANR	10964466	IdentifierDecl	alpha_bits = 1		10964462	0					
ANR	10964467	IdentifierDeclType	int		10964462	0					
ANR	10964468	Identifier	alpha_bits		10964462	1					
ANR	10964469	AssignmentExpression	alpha_bits = 1		10964462	2		=			
ANR	10964470	Identifier	alpha_bits		10964462	0					
ANR	10964471	PrimaryExpression	1		10964462	1					
ANR	10964472	IdentifierDeclStatement	gs_log2_scale_point log2_subpixels ;	98:4:3179:3213	10964462	1	True				
ANR	10964473	IdentifierDecl	log2_subpixels		10964462	0					
ANR	10964474	IdentifierDeclType	gs_log2_scale_point		10964462	0					
ANR	10964475	Identifier	log2_subpixels		10964462	1					
ANR	10964476	IfStatement	if ( color_is_pure ( gs_currentdevicecolor_inline ( pgs ) ) )		10964462	2					
ANR	10964477	Condition	color_is_pure ( gs_currentdevicecolor_inline ( pgs ) )	100:8:3224:3271	10964462	0	True				
ANR	10964478	CallExpression	color_is_pure ( gs_currentdevicecolor_inline ( pgs ) )		10964462	0					
ANR	10964479	Callee	color_is_pure		10964462	0					
ANR	10964480	Identifier	color_is_pure		10964462	0					
ANR	10964481	ArgumentList	gs_currentdevicecolor_inline ( pgs )		10964462	1					
ANR	10964482	Argument	gs_currentdevicecolor_inline ( pgs )		10964462	0					
ANR	10964483	CallExpression	gs_currentdevicecolor_inline ( pgs )		10964462	0					
ANR	10964484	Callee	gs_currentdevicecolor_inline		10964462	0					
ANR	10964485	Identifier	gs_currentdevicecolor_inline		10964462	0					
ANR	10964486	ArgumentList	pgs		10964462	1					
ANR	10964487	Argument	pgs		10964462	0					
ANR	10964488	Identifier	pgs		10964462	0					
ANR	10964489	ExpressionStatement	"alpha_bits = ( * dev_proc ( pgs -> device , get_alpha_bits ) ) ( pgs -> device , go_text )"	101:8:3330:3406	10964462	1	True				
ANR	10964490	AssignmentExpression	"alpha_bits = ( * dev_proc ( pgs -> device , get_alpha_bits ) ) ( pgs -> device , go_text )"		10964462	0		=			
ANR	10964491	Identifier	alpha_bits		10964462	0					
ANR	10964492	CallExpression	"( * dev_proc ( pgs -> device , get_alpha_bits ) ) ( pgs -> device , go_text )"		10964462	1					
ANR	10964493	Callee	"* dev_proc ( pgs -> device , get_alpha_bits )"		10964462	0					
ANR	10964494	UnaryOperationExpression	"* dev_proc ( pgs -> device , get_alpha_bits )"		10964462	0					
ANR	10964495	UnaryOperator	*		10964462	0					
ANR	10964496	CallExpression	"dev_proc ( pgs -> device , get_alpha_bits )"		10964462	1					
ANR	10964497	Callee	dev_proc		10964462	0					
ANR	10964498	Identifier	dev_proc		10964462	0					
ANR	10964499	ArgumentList	pgs -> device		10964462	1					
ANR	10964500	Argument	pgs -> device		10964462	0					
ANR	10964501	PtrMemberAccess	pgs -> device		10964462	0					
ANR	10964502	Identifier	pgs		10964462	0					
ANR	10964503	Identifier	device		10964462	1					
ANR	10964504	Argument	get_alpha_bits		10964462	1					
ANR	10964505	Identifier	get_alpha_bits		10964462	0					
ANR	10964506	ArgumentList	pgs -> device		10964462	1					
ANR	10964507	Argument	pgs -> device		10964462	0					
ANR	10964508	PtrMemberAccess	pgs -> device		10964462	0					
ANR	10964509	Identifier	pgs		10964462	0					
ANR	10964510	Identifier	device		10964462	1					
ANR	10964511	Argument	go_text		10964462	1					
ANR	10964512	Identifier	go_text		10964462	0					
ANR	10964513	IfStatement	if ( alpha_bits <= 1 )		10964462	3					
ANR	10964514	Condition	alpha_bits <= 1	102:8:3416:3430	10964462	0	True				
ANR	10964515	RelationalExpression	alpha_bits <= 1		10964462	0		<=			
ANR	10964516	Identifier	alpha_bits		10964462	0					
ANR	10964517	PrimaryExpression	1		10964462	1					
ANR	10964518	CompoundStatement		13:25:472:472	10964462	1					
ANR	10964519	ExpressionStatement	log2_subpixels = penum -> log2_scale	104:8:3523:3557	10964462	0	True				
ANR	10964520	AssignmentExpression	log2_subpixels = penum -> log2_scale		10964462	0		=			
ANR	10964521	Identifier	log2_subpixels		10964462	0					
ANR	10964522	PtrMemberAccess	penum -> log2_scale		10964462	1					
ANR	10964523	Identifier	penum		10964462	0					
ANR	10964524	Identifier	log2_scale		10964462	1					
ANR	10964525	ElseStatement	else		10964462	0					
ANR	10964526	CompoundStatement		16:11:609:609	10964462	0					
ANR	10964527	ExpressionStatement	log2_subpixels . x = log2_subpixels . y = ilog2 ( alpha_bits )	108:8:3702:3757	10964462	0	True				
ANR	10964528	AssignmentExpression	log2_subpixels . x = log2_subpixels . y = ilog2 ( alpha_bits )		10964462	0		=			
ANR	10964529	MemberAccess	log2_subpixels . x		10964462	0					
ANR	10964530	Identifier	log2_subpixels		10964462	0					
ANR	10964531	Identifier	x		10964462	1					
ANR	10964532	AssignmentExpression	log2_subpixels . y = ilog2 ( alpha_bits )		10964462	1		=			
ANR	10964533	MemberAccess	log2_subpixels . y		10964462	0					
ANR	10964534	Identifier	log2_subpixels		10964462	0					
ANR	10964535	Identifier	y		10964462	1					
ANR	10964536	CallExpression	ilog2 ( alpha_bits )		10964462	1					
ANR	10964537	Callee	ilog2		10964462	0					
ANR	10964538	Identifier	ilog2		10964462	0					
ANR	10964539	ArgumentList	alpha_bits		10964462	1					
ANR	10964540	Argument	alpha_bits		10964462	0					
ANR	10964541	Identifier	alpha_bits		10964462	0					
ANR	10964542	ReturnStatement	"return gs_type1_interp_init ( pcis , pgs , pgs -> path , & penum -> log2_scale , & log2_subpixels , ( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0 || penum -> device_disabled_grid_fitting , pfont1 -> PaintType , pfont1 ) ;"	110:4:3769:4102	10964462	4	True				
ANR	10964543	CallExpression	"gs_type1_interp_init ( pcis , pgs , pgs -> path , & penum -> log2_scale , & log2_subpixels , ( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0 || penum -> device_disabled_grid_fitting , pfont1 -> PaintType , pfont1 )"		10964462	0					
ANR	10964544	Callee	gs_type1_interp_init		10964462	0					
ANR	10964545	Identifier	gs_type1_interp_init		10964462	0					
ANR	10964546	ArgumentList	pcis		10964462	1					
ANR	10964547	Argument	pcis		10964462	0					
ANR	10964548	Identifier	pcis		10964462	0					
ANR	10964549	Argument	pgs		10964462	1					
ANR	10964550	Identifier	pgs		10964462	0					
ANR	10964551	Argument	pgs -> path		10964462	2					
ANR	10964552	PtrMemberAccess	pgs -> path		10964462	0					
ANR	10964553	Identifier	pgs		10964462	0					
ANR	10964554	Identifier	path		10964462	1					
ANR	10964555	Argument	& penum -> log2_scale		10964462	3					
ANR	10964556	UnaryOperationExpression	& penum -> log2_scale		10964462	0					
ANR	10964557	UnaryOperator	&		10964462	0					
ANR	10964558	PtrMemberAccess	penum -> log2_scale		10964462	1					
ANR	10964559	Identifier	penum		10964462	0					
ANR	10964560	Identifier	log2_scale		10964462	1					
ANR	10964561	Argument	& log2_subpixels		10964462	4					
ANR	10964562	UnaryOperationExpression	& log2_subpixels		10964462	0					
ANR	10964563	UnaryOperator	&		10964462	0					
ANR	10964564	Identifier	log2_subpixels		10964462	1					
ANR	10964565	Argument	( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0 || penum -> device_disabled_grid_fitting		10964462	5					
ANR	10964566	OrExpression	( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0 || penum -> device_disabled_grid_fitting		10964462	0		||			
ANR	10964567	EqualityExpression	( penum -> text . operation & TEXT_DO_ANY_CHARPATH ) != 0		10964462	0		!=			
ANR	10964568	BitAndExpression	penum -> text . operation & TEXT_DO_ANY_CHARPATH		10964462	0		&			
ANR	10964569	MemberAccess	penum -> text . operation		10964462	0					
ANR	10964570	PtrMemberAccess	penum -> text		10964462	0					
ANR	10964571	Identifier	penum		10964462	0					
ANR	10964572	Identifier	text		10964462	1					
ANR	10964573	Identifier	operation		10964462	1					
ANR	10964574	Identifier	TEXT_DO_ANY_CHARPATH		10964462	1					
ANR	10964575	PrimaryExpression	0		10964462	1					
ANR	10964576	PtrMemberAccess	penum -> device_disabled_grid_fitting		10964462	1					
ANR	10964577	Identifier	penum		10964462	0					
ANR	10964578	Identifier	device_disabled_grid_fitting		10964462	1					
ANR	10964579	Argument	pfont1 -> PaintType		10964462	6					
ANR	10964580	PtrMemberAccess	pfont1 -> PaintType		10964462	0					
ANR	10964581	Identifier	pfont1		10964462	0					
ANR	10964582	Identifier	PaintType		10964462	1					
ANR	10964583	Argument	pfont1		10964462	7					
ANR	10964584	Identifier	pfont1		10964462	0					
ANR	10964585	ReturnType	static int		10964462	1					
ANR	10964586	Identifier	type1_exec_init		10964462	2					
ANR	10964587	ParameterList	"gs_type1_state * pcis , gs_text_enum_t * penum , gs_gstate * pgs , gs_font_type1 * pfont1"		10964462	3					
ANR	10964588	Parameter	gs_type1_state * pcis	88:16:2860:2879	10964462	0	True				
ANR	10964589	ParameterType	gs_type1_state *		10964462	0					
ANR	10964590	Identifier	pcis		10964462	1					
ANR	10964591	Parameter	gs_text_enum_t * penum	88:38:2882:2902	10964462	1	True				
ANR	10964592	ParameterType	gs_text_enum_t *		10964462	0					
ANR	10964593	Identifier	penum		10964462	1					
ANR	10964594	Parameter	gs_gstate * pgs	89:16:2921:2934	10964462	2	True				
ANR	10964595	ParameterType	gs_gstate *		10964462	0					
ANR	10964596	Identifier	pgs		10964462	1					
ANR	10964597	Parameter	gs_font_type1 * pfont1	89:32:2937:2957	10964462	3	True				
ANR	10964598	ParameterType	gs_font_type1 *		10964462	0					
ANR	10964599	Identifier	pfont1		10964462	1					
ANR	10964600	CFGEntryNode	ENTRY		10964462		True				
ANR	10964601	CFGExitNode	EXIT		10964462		True				
ANR	10964602	Symbol	* penum		10964462						
ANR	10964603	Symbol	"* dev_proc ( pgs -> device , get_alpha_bits )"		10964462						
ANR	10964604	Symbol	penum -> text . operation		10964462						
ANR	10964605	Symbol	* pgs		10964462						
ANR	10964606	Symbol	* dev_proc		10964462						
ANR	10964607	Symbol	penum -> text		10964462						
ANR	10964608	Symbol	pgs -> path		10964462						
ANR	10964609	Symbol	& penum -> log2_scale		10964462						
ANR	10964610	Symbol	gs_currentdevicecolor_inline		10964462						
ANR	10964611	Symbol	& log2_subpixels		10964462						
ANR	10964612	Symbol	dev_proc		10964462						
ANR	10964613	Symbol	go_text		10964462						
ANR	10964614	Symbol	pgs -> device		10964462						
ANR	10964615	Symbol	pfont1 -> PaintType		10964462						
ANR	10964616	Symbol	pgs		10964462						
ANR	10964617	Symbol	* pfont1		10964462						
ANR	10964618	Symbol	pfont1		10964462						
ANR	10964619	Symbol	penum		10964462						
ANR	10964620	Symbol	get_alpha_bits		10964462						
ANR	10964621	Symbol	pcis		10964462						
ANR	10964622	Symbol	alpha_bits		10964462						
ANR	10964623	Symbol	log2_subpixels . y		10964462						
ANR	10964624	Symbol	log2_subpixels . x		10964462						
ANR	10964625	Symbol	ilog2		10964462						
ANR	10964626	Symbol	TEXT_DO_ANY_CHARPATH		10964462						
ANR	10964627	Symbol	log2_subpixels		10964462						
ANR	10964628	Symbol	color_is_pure		10964462						
ANR	10964629	Symbol	gs_type1_interp_init		10964462						
ANR	10964630	Symbol	penum -> log2_scale		10964462						
ANR	10964631	Symbol	penum -> device_disabled_grid_fitting		10964462						
ANR	10964632	ClassDef	gs_type1exec_state_s	129:8:4519:5032							
ANR	10964633	DeclStmt									
ANR	10964634	Decl							gs_type1_state	gs_type1_state	cis
ANR	10964635	DeclStmt									
ANR	10964636	Decl							i_ctx_t	i_ctx_t *	i_ctx_p
ANR	10964637	DeclStmt									
ANR	10964638	Decl							double	double [ 4 ]	sbw
ANR	10964639	DeclStmt									
ANR	10964640	Decl							int	int	present
ANR	10964641	DeclStmt									
ANR	10964642	Decl							gs_rect	gs_rect	char_bbox
ANR	10964643	DeclStmt									
ANR	10964644	Decl							bool	bool	use_FontBBox_as_Metrics2
ANR	10964645	DeclStmt									
ANR	10964646	Decl							ref	ref [ 6 ]	save_args
ANR	10964647	DeclStmt									
ANR	10964648	Decl							int	int	num_args
ANR	10964649	DeclStmt									
ANR	10964650	Decl							bool	bool	AlignToPixels
ANR	10964651	DeclStmt									
ANR	10964652	Decl							gs_type1exec_state_s	gs_type1exec_state_s	gs_type1exec_state
ANR	10964653	DeclStmt									
ANR	10964654	Decl							int	int ( i_ctx_t * )	bbox_continue
ANR	10964655	DeclStmt									
ANR	10964656	Decl							int	int ( i_ctx_t * )	nobbox_continue
ANR	10964657	DeclStmt									
ANR	10964658	Decl							int	"int ( i_ctx_t * , const gs_type1exec_state * , int ( * ) ( i_ctx_t * ) , const ref * )"	type1_push_OtherSubr
ANR	10964659	DeclStmt									
ANR	10964660	Decl							int	"int ( i_ctx_t * , const gs_type1exec_state * , int ( * ) ( i_ctx_t * ) , const ref * )"	type1_call_OtherSubr
ANR	10964661	DeclStmt									
ANR	10964662	Decl							int	"int ( i_ctx_t * , int ( * ) ( i_ctx_t * ) , int )"	type1_callout_dispatch
ANR	10964663	DeclStmt									
ANR	10964664	Decl							int	"int ( i_ctx_t * , gs_type1exec_state * , const ref * , ref * , int )"	type1_continue_dispatch
ANR	10964665	DeclStmt									
ANR	10964666	Decl							int	int ( i_ctx_t * )	op_type1_cleanup
ANR	10964667	DeclStmt									
ANR	10964668	Decl							void	void ( i_ctx_t * )	op_type1_free
ANR	10964669	DeclStmt									
ANR	10964670	Decl							int	int ( i_ctx_t * )	bbox_getsbw_continue
ANR	10964671	DeclStmt									
ANR	10964672	Decl							int	"int ( i_ctx_t * , gs_text_enum_t * , gs_type1exec_state * , gs_font * , op_proc_t * exec_cont )"	type1exec_bbox
ANR	10964673	DeclStmt									
ANR	10964674	Decl							int	int ( i_ctx_t * )	bbox_finish_fill
ANR	10964675	DeclStmt									
ANR	10964676	Decl							int	int ( i_ctx_t * )	bbox_finish_stroke
ANR	10964677	DeclStmt									
ANR	10964678	Decl							int	int ( i_ctx_t * )	bbox_fill
ANR	10964679	DeclStmt									
ANR	10964680	Decl							int	int ( i_ctx_t * )	bbox_stroke
ANR	10964681	DeclStmt									
ANR	10964682	Decl							int	"int ( i_ctx_t * , gs_type1exec_state * )"	nobbox_finish
ANR	10964683	DeclStmt									
ANR	10964684	Decl							int	"int ( i_ctx_t * , int ( * ) ( gs_gstate * ) )"	nobbox_draw
ANR	10964685	DeclStmt									
ANR	10964686	Decl							int	int ( i_ctx_t * )	nobbox_fill
ANR	10964687	DeclStmt									
ANR	10964688	Decl							int	int ( i_ctx_t * )	nobbox_stroke
ANR	10964689	Function	ztype1execchar	175:0:6507:6679							
ANR	10964690	FunctionDef	ztype1execchar (i_ctx_t * i_ctx_p)		10964689	0					
ANR	10964691	CompoundStatement		177:0:6551:6679	10964689	0					
ANR	10964692	ReturnStatement	"return charstring_execchar ( i_ctx_p , ( 1 << ( int ) ft_encrypted ) | ( 1 << ( int ) ft_disk_based ) ) ;"	178:4:6557:6677	10964689	0	True				
ANR	10964693	CallExpression	"charstring_execchar ( i_ctx_p , ( 1 << ( int ) ft_encrypted ) | ( 1 << ( int ) ft_disk_based ) )"		10964689	0					
ANR	10964694	Callee	charstring_execchar		10964689	0					
ANR	10964695	Identifier	charstring_execchar		10964689	0					
ANR	10964696	ArgumentList	i_ctx_p		10964689	1					
ANR	10964697	Argument	i_ctx_p		10964689	0					
ANR	10964698	Identifier	i_ctx_p		10964689	0					
ANR	10964699	Argument	( 1 << ( int ) ft_encrypted ) | ( 1 << ( int ) ft_disk_based )		10964689	1					
ANR	10964700	InclusiveOrExpression	( 1 << ( int ) ft_encrypted ) | ( 1 << ( int ) ft_disk_based )		10964689	0		|			
ANR	10964701	ShiftExpression	1 << ( int ) ft_encrypted		10964689	0		<<			
ANR	10964702	PrimaryExpression	1		10964689	0					
ANR	10964703	CastExpression	( int ) ft_encrypted		10964689	1					
ANR	10964704	CastTarget	int		10964689	0					
ANR	10964705	Identifier	ft_encrypted		10964689	1					
ANR	10964706	ShiftExpression	1 << ( int ) ft_disk_based		10964689	1		<<			
ANR	10964707	PrimaryExpression	1		10964689	0					
ANR	10964708	CastExpression	( int ) ft_disk_based		10964689	1					
ANR	10964709	CastTarget	int		10964689	0					
ANR	10964710	Identifier	ft_disk_based		10964689	1					
ANR	10964711	ReturnType	static int		10964689	1					
ANR	10964712	Identifier	ztype1execchar		10964689	2					
ANR	10964713	ParameterList	i_ctx_t * i_ctx_p		10964689	3					
ANR	10964714	Parameter	i_ctx_t * i_ctx_p	176:15:6533:6548	10964689	0	True				
ANR	10964715	ParameterType	i_ctx_t *		10964689	0					
ANR	10964716	Identifier	i_ctx_p		10964689	1					
ANR	10964717	CFGEntryNode	ENTRY		10964689		True				
ANR	10964718	CFGExitNode	EXIT		10964689		True				
ANR	10964719	Symbol	i_ctx_p		10964689						
ANR	10964720	Symbol	ft_disk_based		10964689						
ANR	10964721	Symbol	ft_encrypted		10964689						
ANR	10964722	Symbol	charstring_execchar		10964689						
ANR	10964723	Function	charstring_execchar_aux	181:0:6681:12438							
ANR	10964724	FunctionDef	"charstring_execchar_aux (i_ctx_t * i_ctx_p , gs_text_enum_t * penum , gs_font * pfont)"		10964723	0					
ANR	10964725	CompoundStatement		183:0:6773:12438	10964723	0					
ANR	10964726	IdentifierDeclStatement	os_ptr op = osp ;	184:4:6779:6794	10964723	0	True				
ANR	10964727	IdentifierDecl	op = osp		10964723	0					
ANR	10964728	IdentifierDeclType	os_ptr		10964723	0					
ANR	10964729	Identifier	op		10964723	1					
ANR	10964730	AssignmentExpression	op = osp		10964723	2		=			
ANR	10964731	Identifier	osp		10964723	0					
ANR	10964732	Identifier	osp		10964723	1					
ANR	10964733	Statement	gs_font_base	185:4:6800:6811	10964723	1	True				
ANR	10964734	Statement	*	185:17:6813:6813	10964723	2	True				
ANR	10964735	Statement	const	185:18:6814:6818	10964723	3	True				
ANR	10964736	ExpressionStatement	pbfont = ( gs_font_base * ) pfont	185:24:6820:6851	10964723	4	True				
ANR	10964737	AssignmentExpression	pbfont = ( gs_font_base * ) pfont		10964723	0		=			
ANR	10964738	Identifier	pbfont		10964723	0					
ANR	10964739	CastExpression	( gs_font_base * ) pfont		10964723	1					
ANR	10964740	CastTarget	gs_font_base *		10964723	0					
ANR	10964741	Identifier	pfont		10964723	1					
ANR	10964742	Statement	gs_font_type1	186:4:6857:6869	10964723	5	True				
ANR	10964743	Statement	*	186:18:6871:6871	10964723	6	True				
ANR	10964744	Statement	const	186:19:6872:6876	10964723	7	True				
ANR	10964745	ExpressionStatement	pfont1 = ( gs_font_type1 * ) pfont	186:25:6878:6910	10964723	8	True				
ANR	10964746	AssignmentExpression	pfont1 = ( gs_font_type1 * ) pfont		10964723	0		=			
ANR	10964747	Identifier	pfont1		10964723	0					
ANR	10964748	CastExpression	( gs_font_type1 * ) pfont		10964723	1					
ANR	10964749	CastTarget	gs_font_type1 *		10964723	0					
ANR	10964750	Identifier	pfont		10964723	1					
ANR	10964751	IdentifierDeclStatement	const gs_type1_data * pdata ;	187:4:6916:6942	10964723	9	True				
ANR	10964752	IdentifierDecl	* pdata		10964723	0					
ANR	10964753	IdentifierDeclType	const gs_type1_data *		10964723	0					
ANR	10964754	Identifier	pdata		10964723	1					
ANR	10964755	IdentifierDeclStatement	gs_type1exec_state cxs ;	188:4:6948:6970	10964723	10	True				
ANR	10964756	IdentifierDecl	cxs		10964723	0					
ANR	10964757	IdentifierDeclType	gs_type1exec_state		10964723	0					
ANR	10964758	Identifier	cxs		10964723	1					
ANR	10964759	Statement	gs_type1_state	189:4:6976:6989	10964723	11	True				
ANR	10964760	Statement	*	189:19:6991:6991	10964723	12	True				
ANR	10964761	Statement	const	189:20:6992:6996	10964723	13	True				
ANR	10964762	ExpressionStatement	pcis = & cxs . cis	189:26:6998:7013	10964723	14	True				
ANR	10964763	AssignmentExpression	pcis = & cxs . cis		10964723	0		=			
ANR	10964764	Identifier	pcis		10964723	0					
ANR	10964765	UnaryOperationExpression	& cxs . cis		10964723	1					
ANR	10964766	UnaryOperator	&		10964723	0					
ANR	10964767	MemberAccess	cxs . cis		10964723	1					
ANR	10964768	Identifier	cxs		10964723	0					
ANR	10964769	Identifier	cis		10964723	1					
ANR	10964770	IdentifierDeclStatement	gs_rect FontBBox = pfont1 -> FontBBox ;	190:4:7019:7054	10964723	15	True				
ANR	10964771	IdentifierDecl	FontBBox = pfont1 -> FontBBox		10964723	0					
ANR	10964772	IdentifierDeclType	gs_rect		10964723	0					
ANR	10964773	Identifier	FontBBox		10964723	1					
ANR	10964774	AssignmentExpression	FontBBox = pfont1 -> FontBBox		10964723	2		=			
ANR	10964775	Identifier	FontBBox		10964723	0					
ANR	10964776	PtrMemberAccess	pfont1 -> FontBBox		10964723	1					
ANR	10964777	Identifier	pfont1		10964723	0					
ANR	10964778	Identifier	FontBBox		10964723	1					
ANR	10964779	IdentifierDeclStatement	int code ;	191:4:7060:7068	10964723	16	True				
ANR	10964780	IdentifierDecl	code		10964723	0					
ANR	10964781	IdentifierDeclType	int		10964723	0					
ANR	10964782	Identifier	code		10964723	1					
ANR	10964783	IfStatement	if ( penum -> current_font -> FontType == ft_CID_encrypted )		10964723	17					
ANR	10964784	Condition	penum -> current_font -> FontType == ft_CID_encrypted	193:8:7079:7127	10964723	0	True				
ANR	10964785	EqualityExpression	penum -> current_font -> FontType == ft_CID_encrypted		10964723	0		==			
ANR	10964786	PtrMemberAccess	penum -> current_font -> FontType		10964723	0					
ANR	10964787	PtrMemberAccess	penum -> current_font		10964723	0					
ANR	10964788	Identifier	penum		10964723	0					
ANR	10964789	Identifier	current_font		10964723	1					
ANR	10964790	Identifier	FontType		10964723	1					
ANR	10964791	Identifier	ft_CID_encrypted		10964723	1					
ANR	10964792	CompoundStatement		11:59:356:356	10964723	1					
ANR	10964793	IfStatement	if ( FontBBox . q . x <= FontBBox . p . x && FontBBox . q . y <= FontBBox . p . y )		10964723	0					
ANR	10964794	Condition	FontBBox . q . x <= FontBBox . p . x && FontBBox . q . y <= FontBBox . p . y	194:12:7144:7203	10964723	0	True				
ANR	10964795	AndExpression	FontBBox . q . x <= FontBBox . p . x && FontBBox . q . y <= FontBBox . p . y		10964723	0		&&			
ANR	10964796	RelationalExpression	FontBBox . q . x <= FontBBox . p . x		10964723	0		<=			
ANR	10964797	MemberAccess	FontBBox . q . x		10964723	0					
ANR	10964798	MemberAccess	FontBBox . q		10964723	0					
ANR	10964799	Identifier	FontBBox		10964723	0					
ANR	10964800	Identifier	q		10964723	1					
ANR	10964801	Identifier	x		10964723	1					
ANR	10964802	MemberAccess	FontBBox . p . x		10964723	1					
ANR	10964803	MemberAccess	FontBBox . p		10964723	0					
ANR	10964804	Identifier	FontBBox		10964723	0					
ANR	10964805	Identifier	p		10964723	1					
ANR	10964806	Identifier	x		10964723	1					
ANR	10964807	RelationalExpression	FontBBox . q . y <= FontBBox . p . y		10964723	1		<=			
ANR	10964808	MemberAccess	FontBBox . q . y		10964723	0					
ANR	10964809	MemberAccess	FontBBox . q		10964723	0					
ANR	10964810	Identifier	FontBBox		10964723	0					
ANR	10964811	Identifier	q		10964723	1					
ANR	10964812	Identifier	y		10964723	1					
ANR	10964813	MemberAccess	FontBBox . p . y		10964723	1					
ANR	10964814	MemberAccess	FontBBox . p		10964723	0					
ANR	10964815	Identifier	FontBBox		10964723	0					
ANR	10964816	Identifier	p		10964723	1					
ANR	10964817	Identifier	y		10964723	1					
ANR	10964818	CompoundStatement		13:12:446:504	10964723	1					
ANR	10964819	IdentifierDeclStatement	gs_font_cid0 * pfcid0 = ( gs_font_cid0 * ) penum -> current_font ;	195:12:7220:7278	10964723	0	True				
ANR	10964820	IdentifierDecl	* pfcid0 = ( gs_font_cid0 * ) penum -> current_font		10964723	0					
ANR	10964821	IdentifierDeclType	gs_font_cid0 *		10964723	0					
ANR	10964822	Identifier	pfcid0		10964723	1					
ANR	10964823	AssignmentExpression	* pfcid0 = ( gs_font_cid0 * ) penum -> current_font		10964723	2		=			
ANR	10964824	Identifier	pfcid0		10964723	0					
ANR	10964825	CastExpression	( gs_font_cid0 * ) penum -> current_font		10964723	1					
ANR	10964826	CastTarget	gs_font_cid0 *		10964723	0					
ANR	10964827	PtrMemberAccess	penum -> current_font		10964723	1					
ANR	10964828	Identifier	penum		10964723	0					
ANR	10964829	Identifier	current_font		10964723	1					
ANR	10964830	ExpressionStatement	FontBBox = pfcid0 -> FontBBox	197:12:7293:7320	10964723	1	True				
ANR	10964831	AssignmentExpression	FontBBox = pfcid0 -> FontBBox		10964723	0		=			
ANR	10964832	Identifier	FontBBox		10964723	0					
ANR	10964833	PtrMemberAccess	pfcid0 -> FontBBox		10964723	1					
ANR	10964834	Identifier	pfcid0		10964723	0					
ANR	10964835	Identifier	FontBBox		10964723	1					
ANR	10964836	ExpressionStatement	pdata = & pfont1 -> data	201:4:7343:7364	10964723	18	True				
ANR	10964837	AssignmentExpression	pdata = & pfont1 -> data		10964723	0		=			
ANR	10964838	Identifier	pdata		10964723	0					
ANR	10964839	UnaryOperationExpression	& pfont1 -> data		10964723	1					
ANR	10964840	UnaryOperator	&		10964723	0					
ANR	10964841	PtrMemberAccess	pfont1 -> data		10964723	1					
ANR	10964842	Identifier	pfont1		10964723	0					
ANR	10964843	Identifier	data		10964723	1					
ANR	10964844	IfStatement	if ( pfont -> PaintType )		10964723	19					
ANR	10964845	Condition	pfont -> PaintType	209:8:7621:7636	10964723	0	True				
ANR	10964846	PtrMemberAccess	pfont -> PaintType		10964723	0					
ANR	10964847	Identifier	pfont		10964723	0					
ANR	10964848	Identifier	PaintType		10964723	1					
ANR	10964849	ExpressionStatement	"gs_setlinewidth ( igs , pfont -> StrokeWidth )"	210:8:7647:7687	10964723	1	True				
ANR	10964850	CallExpression	"gs_setlinewidth ( igs , pfont -> StrokeWidth )"		10964723	0					
ANR	10964851	Callee	gs_setlinewidth		10964723	0					
ANR	10964852	Identifier	gs_setlinewidth		10964723	0					
ANR	10964853	ArgumentList	igs		10964723	1					
ANR	10964854	Argument	igs		10964723	0					
ANR	10964855	Identifier	igs		10964723	0					
ANR	10964856	Argument	pfont -> StrokeWidth		10964723	1					
ANR	10964857	PtrMemberAccess	pfont -> StrokeWidth		10964723	0					
ANR	10964858	Identifier	pfont		10964723	0					
ANR	10964859	Identifier	StrokeWidth		10964723	1					
ANR	10964860	ExpressionStatement	check_estack ( 3 )	211:4:7693:7708	10964723	20	True				
ANR	10964861	CallExpression	check_estack ( 3 )		10964723	0					
ANR	10964862	Callee	check_estack		10964723	0					
ANR	10964863	Identifier	check_estack		10964723	0					
ANR	10964864	ArgumentList	3		10964723	1					
ANR	10964865	Argument	3		10964723	0					
ANR	10964866	PrimaryExpression	3		10964723	0					
ANR	10964867	IfStatement	if ( r_is_proc ( op ) )		10964723	21					
ANR	10964868	Condition	r_is_proc ( op )	215:8:7806:7818	10964723	0	True				
ANR	10964869	CallExpression	r_is_proc ( op )		10964723	0					
ANR	10964870	Callee	r_is_proc		10964723	0					
ANR	10964871	Identifier	r_is_proc		10964723	0					
ANR	10964872	ArgumentList	op		10964723	1					
ANR	10964873	Argument	op		10964723	0					
ANR	10964874	Identifier	op		10964723	0					
ANR	10964875	ReturnStatement	return zchar_exec_char_proc ( i_ctx_p ) ;	216:8:7829:7865	10964723	1	True				
ANR	10964876	CallExpression	zchar_exec_char_proc ( i_ctx_p )		10964723	0					
ANR	10964877	Callee	zchar_exec_char_proc		10964723	0					
ANR	10964878	Identifier	zchar_exec_char_proc		10964723	0					
ANR	10964879	ArgumentList	i_ctx_p		10964723	1					
ANR	10964880	Argument	i_ctx_p		10964723	0					
ANR	10964881	Identifier	i_ctx_p		10964723	0					
ANR	10964882	ExpressionStatement	"check_type ( * op , t_string )"	221:4:8005:8030	10964723	22	True				
ANR	10964883	CallExpression	"check_type ( * op , t_string )"		10964723	0					
ANR	10964884	Callee	check_type		10964723	0					
ANR	10964885	Identifier	check_type		10964723	0					
ANR	10964886	ArgumentList	* op		10964723	1					
ANR	10964887	Argument	* op		10964723	0					
ANR	10964888	UnaryOperationExpression	* op		10964723	0					
ANR	10964889	UnaryOperator	*		10964723	0					
ANR	10964890	Identifier	op		10964723	1					
ANR	10964891	Argument	t_string		10964723	1					
ANR	10964892	Identifier	t_string		10964723	0					
ANR	10964893	IfStatement	"if ( r_size ( op ) <= max ( pdata -> lenIV , 0 ) )"		10964723	23					
ANR	10964894	Condition	"r_size ( op ) <= max ( pdata -> lenIV , 0 )"	222:8:8040:8073	10964723	0	True				
ANR	10964895	RelationalExpression	"r_size ( op ) <= max ( pdata -> lenIV , 0 )"		10964723	0		<=			
ANR	10964896	CallExpression	r_size ( op )		10964723	0					
ANR	10964897	Callee	r_size		10964723	0					
ANR	10964898	Identifier	r_size		10964723	0					
ANR	10964899	ArgumentList	op		10964723	1					
ANR	10964900	Argument	op		10964723	0					
ANR	10964901	Identifier	op		10964723	0					
ANR	10964902	CallExpression	"max ( pdata -> lenIV , 0 )"		10964723	1					
ANR	10964903	Callee	max		10964723	0					
ANR	10964904	Identifier	max		10964723	0					
ANR	10964905	ArgumentList	pdata -> lenIV		10964723	1					
ANR	10964906	Argument	pdata -> lenIV		10964723	0					
ANR	10964907	PtrMemberAccess	pdata -> lenIV		10964723	0					
ANR	10964908	Identifier	pdata		10964723	0					
ANR	10964909	Identifier	lenIV		10964723	1					
ANR	10964910	Argument	0		10964723	1					
ANR	10964911	PrimaryExpression	0		10964723	0					
ANR	10964912	ExpressionStatement	return_error ( gs_error_invalidfont )	223:8:8084:8118	10964723	1	True				
ANR	10964913	CallExpression	return_error ( gs_error_invalidfont )		10964723	0					
ANR	10964914	Callee	return_error		10964723	0					
ANR	10964915	Identifier	return_error		10964723	0					
ANR	10964916	ArgumentList	gs_error_invalidfont		10964723	1					
ANR	10964917	Argument	gs_error_invalidfont		10964723	0					
ANR	10964918	Identifier	gs_error_invalidfont		10964723	0					
ANR	10964919	IfStatement	if ( ( penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0 ) || gs_rootfont ( igs ) -> WMode == 0 )		10964723	24					
ANR	10964920	Condition	( penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0 ) || gs_rootfont ( igs ) -> WMode == 0	232:8:8444:8566	10964723	0	True				
ANR	10964921	OrExpression	( penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0 ) || gs_rootfont ( igs ) -> WMode == 0		10964723	0		||			
ANR	10964922	AndExpression	penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0		10964723	0		&&			
ANR	10964923	EqualityExpression	penum -> FontBBox_as_Metrics2 . x == 0		10964723	0		==			
ANR	10964924	MemberAccess	penum -> FontBBox_as_Metrics2 . x		10964723	0					
ANR	10964925	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10964723	0					
ANR	10964926	Identifier	penum		10964723	0					
ANR	10964927	Identifier	FontBBox_as_Metrics2		10964723	1					
ANR	10964928	Identifier	x		10964723	1					
ANR	10964929	PrimaryExpression	0		10964723	1					
ANR	10964930	EqualityExpression	penum -> FontBBox_as_Metrics2 . y == 0		10964723	1		==			
ANR	10964931	MemberAccess	penum -> FontBBox_as_Metrics2 . y		10964723	0					
ANR	10964932	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10964723	0					
ANR	10964933	Identifier	penum		10964723	0					
ANR	10964934	Identifier	FontBBox_as_Metrics2		10964723	1					
ANR	10964935	Identifier	y		10964723	1					
ANR	10964936	PrimaryExpression	0		10964723	1					
ANR	10964937	EqualityExpression	gs_rootfont ( igs ) -> WMode == 0		10964723	1		==			
ANR	10964938	PtrMemberAccess	gs_rootfont ( igs ) -> WMode		10964723	0					
ANR	10964939	CallExpression	gs_rootfont ( igs )		10964723	0					
ANR	10964940	Callee	gs_rootfont		10964723	0					
ANR	10964941	Identifier	gs_rootfont		10964723	0					
ANR	10964942	ArgumentList	igs		10964723	1					
ANR	10964943	Argument	igs		10964723	0					
ANR	10964944	Identifier	igs		10964723	0					
ANR	10964945	Identifier	WMode		10964723	1					
ANR	10964946	PrimaryExpression	0		10964723	1					
ANR	10964947	CompoundStatement		52:39:1796:1796	10964723	1					
ANR	10964948	ExpressionStatement	"code = zchar_get_metrics ( pbfont , op - 1 , cxs . sbw )"	235:8:8580:8629	10964723	0	True				
ANR	10964949	AssignmentExpression	"code = zchar_get_metrics ( pbfont , op - 1 , cxs . sbw )"		10964723	0		=			
ANR	10964950	Identifier	code		10964723	0					
ANR	10964951	CallExpression	"zchar_get_metrics ( pbfont , op - 1 , cxs . sbw )"		10964723	1					
ANR	10964952	Callee	zchar_get_metrics		10964723	0					
ANR	10964953	Identifier	zchar_get_metrics		10964723	0					
ANR	10964954	ArgumentList	pbfont		10964723	1					
ANR	10964955	Argument	pbfont		10964723	0					
ANR	10964956	Identifier	pbfont		10964723	0					
ANR	10964957	Argument	op - 1		10964723	1					
ANR	10964958	AdditiveExpression	op - 1		10964723	0		-			
ANR	10964959	Identifier	op		10964723	0					
ANR	10964960	PrimaryExpression	1		10964723	1					
ANR	10964961	Argument	cxs . sbw		10964723	2					
ANR	10964962	MemberAccess	cxs . sbw		10964723	0					
ANR	10964963	Identifier	cxs		10964723	0					
ANR	10964964	Identifier	sbw		10964723	1					
ANR	10964965	IfStatement	if ( code < 0 )		10964723	1					
ANR	10964966	Condition	code < 0	236:12:8643:8650	10964723	0	True				
ANR	10964967	RelationalExpression	code < 0		10964723	0		<			
ANR	10964968	Identifier	code		10964723	0					
ANR	10964969	PrimaryExpression	0		10964723	1					
ANR	10964970	ReturnStatement	return code ;	237:12:8665:8676	10964723	1	True				
ANR	10964971	Identifier	code		10964723	0					
ANR	10964972	ExpressionStatement	cxs . present = code	238:8:8686:8704	10964723	2	True				
ANR	10964973	AssignmentExpression	cxs . present = code		10964723	0		=			
ANR	10964974	MemberAccess	cxs . present		10964723	0					
ANR	10964975	Identifier	cxs		10964723	0					
ANR	10964976	Identifier	present		10964723	1					
ANR	10964977	Identifier	code		10964723	1					
ANR	10964978	ExpressionStatement	cxs . use_FontBBox_as_Metrics2 = false	239:8:8714:8750	10964723	3	True				
ANR	10964979	AssignmentExpression	cxs . use_FontBBox_as_Metrics2 = false		10964723	0		=			
ANR	10964980	MemberAccess	cxs . use_FontBBox_as_Metrics2		10964723	0					
ANR	10964981	Identifier	cxs		10964723	0					
ANR	10964982	Identifier	use_FontBBox_as_Metrics2		10964723	1					
ANR	10964983	Identifier	false		10964723	1					
ANR	10964984	ElseStatement	else		10964723	0					
ANR	10964985	CompoundStatement		58:12:1990:1990	10964723	0					
ANR	10964986	ExpressionStatement	cxs . sbw [ 0 ] = penum -> FontBBox_as_Metrics2 . x / 2	241:8:8820:8866	10964723	0	True				
ANR	10964987	AssignmentExpression	cxs . sbw [ 0 ] = penum -> FontBBox_as_Metrics2 . x / 2		10964723	0		=			
ANR	10964988	ArrayIndexing	cxs . sbw [ 0 ]		10964723	0					
ANR	10964989	MemberAccess	cxs . sbw		10964723	0					
ANR	10964990	Identifier	cxs		10964723	0					
ANR	10964991	Identifier	sbw		10964723	1					
ANR	10964992	PrimaryExpression	0		10964723	1					
ANR	10964993	MultiplicativeExpression	penum -> FontBBox_as_Metrics2 . x / 2		10964723	1		/			
ANR	10964994	MemberAccess	penum -> FontBBox_as_Metrics2 . x		10964723	0					
ANR	10964995	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10964723	0					
ANR	10964996	Identifier	penum		10964723	0					
ANR	10964997	Identifier	FontBBox_as_Metrics2		10964723	1					
ANR	10964998	Identifier	x		10964723	1					
ANR	10964999	PrimaryExpression	2		10964723	1					
ANR	10965000	ExpressionStatement	cxs . sbw [ 1 ] = penum -> FontBBox_as_Metrics2 . y	242:8:8876:8918	10964723	1	True				
ANR	10965001	AssignmentExpression	cxs . sbw [ 1 ] = penum -> FontBBox_as_Metrics2 . y		10964723	0		=			
ANR	10965002	ArrayIndexing	cxs . sbw [ 1 ]		10964723	0					
ANR	10965003	MemberAccess	cxs . sbw		10964723	0					
ANR	10965004	Identifier	cxs		10964723	0					
ANR	10965005	Identifier	sbw		10964723	1					
ANR	10965006	PrimaryExpression	1		10964723	1					
ANR	10965007	MemberAccess	penum -> FontBBox_as_Metrics2 . y		10964723	1					
ANR	10965008	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10964723	0					
ANR	10965009	Identifier	penum		10964723	0					
ANR	10965010	Identifier	FontBBox_as_Metrics2		10964723	1					
ANR	10965011	Identifier	y		10964723	1					
ANR	10965012	ExpressionStatement	cxs . sbw [ 2 ] = 0	243:8:8928:8942	10964723	2	True				
ANR	10965013	AssignmentExpression	cxs . sbw [ 2 ] = 0		10964723	0		=			
ANR	10965014	ArrayIndexing	cxs . sbw [ 2 ]		10964723	0					
ANR	10965015	MemberAccess	cxs . sbw		10964723	0					
ANR	10965016	Identifier	cxs		10964723	0					
ANR	10965017	Identifier	sbw		10964723	1					
ANR	10965018	PrimaryExpression	2		10964723	1					
ANR	10965019	PrimaryExpression	0		10964723	1					
ANR	10965020	ExpressionStatement	cxs . sbw [ 3 ] = - penum -> FontBBox_as_Metrics2 . x	244:8:8952:8995	10964723	3	True				
ANR	10965021	AssignmentExpression	cxs . sbw [ 3 ] = - penum -> FontBBox_as_Metrics2 . x		10964723	0		=			
ANR	10965022	ArrayIndexing	cxs . sbw [ 3 ]		10964723	0					
ANR	10965023	MemberAccess	cxs . sbw		10964723	0					
ANR	10965024	Identifier	cxs		10964723	0					
ANR	10965025	Identifier	sbw		10964723	1					
ANR	10965026	PrimaryExpression	3		10964723	1					
ANR	10965027	UnaryOperationExpression	- penum -> FontBBox_as_Metrics2 . x		10964723	1					
ANR	10965028	UnaryOperator	-		10964723	0					
ANR	10965029	MemberAccess	penum -> FontBBox_as_Metrics2 . x		10964723	1					
ANR	10965030	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10964723	0					
ANR	10965031	Identifier	penum		10964723	0					
ANR	10965032	Identifier	FontBBox_as_Metrics2		10964723	1					
ANR	10965033	Identifier	x		10964723	1					
ANR	10965034	ExpressionStatement	cxs . use_FontBBox_as_Metrics2 = true	245:8:9016:9051	10964723	4	True				
ANR	10965035	AssignmentExpression	cxs . use_FontBBox_as_Metrics2 = true		10964723	0		=			
ANR	10965036	MemberAccess	cxs . use_FontBBox_as_Metrics2		10964723	0					
ANR	10965037	Identifier	cxs		10964723	0					
ANR	10965038	Identifier	use_FontBBox_as_Metrics2		10964723	1					
ANR	10965039	Identifier	true		10964723	1					
ANR	10965040	ExpressionStatement	cxs . present = metricsNone	246:8:9061:9086	10964723	5	True				
ANR	10965041	AssignmentExpression	cxs . present = metricsNone		10964723	0		=			
ANR	10965042	MemberAccess	cxs . present		10964723	0					
ANR	10965043	Identifier	cxs		10964723	0					
ANR	10965044	Identifier	present		10964723	1					
ANR	10965045	Identifier	metricsNone		10964723	1					
ANR	10965046	ExpressionStatement	"code = gs_moveto ( igs , 0.0 , 0.0 )"	249:4:9135:9166	10964723	25	True				
ANR	10965047	AssignmentExpression	"code = gs_moveto ( igs , 0.0 , 0.0 )"		10964723	0		=			
ANR	10965048	Identifier	code		10964723	0					
ANR	10965049	CallExpression	"gs_moveto ( igs , 0.0 , 0.0 )"		10964723	1					
ANR	10965050	Callee	gs_moveto		10964723	0					
ANR	10965051	Identifier	gs_moveto		10964723	0					
ANR	10965052	ArgumentList	igs		10964723	1					
ANR	10965053	Argument	igs		10964723	0					
ANR	10965054	Identifier	igs		10964723	0					
ANR	10965055	Argument	0.0		10964723	1					
ANR	10965056	PrimaryExpression	0.0		10964723	0					
ANR	10965057	Argument	0.0		10964723	2					
ANR	10965058	PrimaryExpression	0.0		10964723	0					
ANR	10965059	IfStatement	if ( code < 0 )		10964723	26					
ANR	10965060	Condition	code < 0	250:8:9176:9183	10964723	0	True				
ANR	10965061	RelationalExpression	code < 0		10964723	0		<			
ANR	10965062	Identifier	code		10964723	0					
ANR	10965063	PrimaryExpression	0		10964723	1					
ANR	10965064	ReturnStatement	return code ;	251:8:9194:9205	10964723	1	True				
ANR	10965065	Identifier	code		10964723	0					
ANR	10965066	ExpressionStatement	"code = type1_exec_init ( pcis , penum , igs , pfont1 )"	252:4:9211:9259	10964723	27	True				
ANR	10965067	AssignmentExpression	"code = type1_exec_init ( pcis , penum , igs , pfont1 )"		10964723	0		=			
ANR	10965068	Identifier	code		10964723	0					
ANR	10965069	CallExpression	"type1_exec_init ( pcis , penum , igs , pfont1 )"		10964723	1					
ANR	10965070	Callee	type1_exec_init		10964723	0					
ANR	10965071	Identifier	type1_exec_init		10964723	0					
ANR	10965072	ArgumentList	pcis		10964723	1					
ANR	10965073	Argument	pcis		10964723	0					
ANR	10965074	Identifier	pcis		10964723	0					
ANR	10965075	Argument	penum		10964723	1					
ANR	10965076	Identifier	penum		10964723	0					
ANR	10965077	Argument	igs		10964723	2					
ANR	10965078	Identifier	igs		10964723	0					
ANR	10965079	Argument	pfont1		10964723	3					
ANR	10965080	Identifier	pfont1		10964723	0					
ANR	10965081	IfStatement	if ( code < 0 )		10964723	28					
ANR	10965082	Condition	code < 0	253:8:9269:9276	10964723	0	True				
ANR	10965083	RelationalExpression	code < 0		10964723	0		<			
ANR	10965084	Identifier	code		10964723	0					
ANR	10965085	PrimaryExpression	0		10964723	1					
ANR	10965086	ReturnStatement	return code ;	254:8:9287:9298	10964723	1	True				
ANR	10965087	Identifier	code		10964723	0					
ANR	10965088	ExpressionStatement	"gs_type1_set_callback_data ( pcis , & cxs )"	255:4:9304:9342	10964723	29	True				
ANR	10965089	CallExpression	"gs_type1_set_callback_data ( pcis , & cxs )"		10964723	0					
ANR	10965090	Callee	gs_type1_set_callback_data		10964723	0					
ANR	10965091	Identifier	gs_type1_set_callback_data		10964723	0					
ANR	10965092	ArgumentList	pcis		10964723	1					
ANR	10965093	Argument	pcis		10964723	0					
ANR	10965094	Identifier	pcis		10964723	0					
ANR	10965095	Argument	& cxs		10964723	1					
ANR	10965096	UnaryOperationExpression	& cxs		10964723	0					
ANR	10965097	UnaryOperator	&		10964723	0					
ANR	10965098	Identifier	cxs		10964723	1					
ANR	10965099	IfStatement	if ( FontBBox . q . x > FontBBox . p . x && FontBBox . q . y > FontBBox . p . y )		10964723	30					
ANR	10965100	Condition	FontBBox . q . x > FontBBox . p . x && FontBBox . q . y > FontBBox . p . y	256:8:9352:9417	10964723	0	True				
ANR	10965101	AndExpression	FontBBox . q . x > FontBBox . p . x && FontBBox . q . y > FontBBox . p . y		10964723	0		&&			
ANR	10965102	RelationalExpression	FontBBox . q . x > FontBBox . p . x		10964723	0		>			
ANR	10965103	MemberAccess	FontBBox . q . x		10964723	0					
ANR	10965104	MemberAccess	FontBBox . q		10964723	0					
ANR	10965105	Identifier	FontBBox		10964723	0					
ANR	10965106	Identifier	q		10964723	1					
ANR	10965107	Identifier	x		10964723	1					
ANR	10965108	MemberAccess	FontBBox . p . x		10964723	1					
ANR	10965109	MemberAccess	FontBBox . p		10964723	0					
ANR	10965110	Identifier	FontBBox		10964723	0					
ANR	10965111	Identifier	p		10964723	1					
ANR	10965112	Identifier	x		10964723	1					
ANR	10965113	RelationalExpression	FontBBox . q . y > FontBBox . p . y		10964723	1		>			
ANR	10965114	MemberAccess	FontBBox . q . y		10964723	0					
ANR	10965115	MemberAccess	FontBBox . q		10964723	0					
ANR	10965116	Identifier	FontBBox		10964723	0					
ANR	10965117	Identifier	q		10964723	1					
ANR	10965118	Identifier	y		10964723	1					
ANR	10965119	MemberAccess	FontBBox . p . y		10964723	1					
ANR	10965120	MemberAccess	FontBBox . p		10964723	0					
ANR	10965121	Identifier	FontBBox		10964723	0					
ANR	10965122	Identifier	p		10964723	1					
ANR	10965123	Identifier	y		10964723	1					
ANR	10965124	CompoundStatement		78:8:2713:2736	10964723	1					
ANR	10965125	IdentifierDeclStatement	op_proc_t exec_cont = 0 ;	260:8:9487:9510	10964723	0	True				
ANR	10965126	IdentifierDecl	exec_cont = 0		10964723	0					
ANR	10965127	IdentifierDeclType	op_proc_t		10964723	0					
ANR	10965128	Identifier	exec_cont		10964723	1					
ANR	10965129	AssignmentExpression	exec_cont = 0		10964723	2		=			
ANR	10965130	Identifier	exec_cont		10964723	0					
ANR	10965131	PrimaryExpression	0		10964723	1					
ANR	10965132	ExpressionStatement	cxs . char_bbox = pfont1 -> FontBBox	262:8:9521:9553	10964723	1	True				
ANR	10965133	AssignmentExpression	cxs . char_bbox = pfont1 -> FontBBox		10964723	0		=			
ANR	10965134	MemberAccess	cxs . char_bbox		10964723	0					
ANR	10965135	Identifier	cxs		10964723	0					
ANR	10965136	Identifier	char_bbox		10964723	1					
ANR	10965137	PtrMemberAccess	pfont1 -> FontBBox		10964723	1					
ANR	10965138	Identifier	pfont1		10964723	0					
ANR	10965139	Identifier	FontBBox		10964723	1					
ANR	10965140	ExpressionStatement	"code = type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , & exec_cont )"	263:8:9563:9625	10964723	2	True				
ANR	10965141	AssignmentExpression	"code = type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , & exec_cont )"		10964723	0		=			
ANR	10965142	Identifier	code		10964723	0					
ANR	10965143	CallExpression	"type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , & exec_cont )"		10964723	1					
ANR	10965144	Callee	type1exec_bbox		10964723	0					
ANR	10965145	Identifier	type1exec_bbox		10964723	0					
ANR	10965146	ArgumentList	i_ctx_p		10964723	1					
ANR	10965147	Argument	i_ctx_p		10964723	0					
ANR	10965148	Identifier	i_ctx_p		10964723	0					
ANR	10965149	Argument	penum		10964723	1					
ANR	10965150	Identifier	penum		10964723	0					
ANR	10965151	Argument	& cxs		10964723	2					
ANR	10965152	UnaryOperationExpression	& cxs		10964723	0					
ANR	10965153	UnaryOperator	&		10964723	0					
ANR	10965154	Identifier	cxs		10964723	1					
ANR	10965155	Argument	pfont		10964723	3					
ANR	10965156	Identifier	pfont		10964723	0					
ANR	10965157	Argument	& exec_cont		10964723	4					
ANR	10965158	UnaryOperationExpression	& exec_cont		10964723	0					
ANR	10965159	UnaryOperator	&		10964723	0					
ANR	10965160	Identifier	exec_cont		10964723	1					
ANR	10965161	IfStatement	if ( code >= 0 && exec_cont != 0 )		10964723	3					
ANR	10965162	Condition	code >= 0 && exec_cont != 0	264:12:9639:9665	10964723	0	True				
ANR	10965163	AndExpression	code >= 0 && exec_cont != 0		10964723	0		&&			
ANR	10965164	RelationalExpression	code >= 0		10964723	0		>=			
ANR	10965165	Identifier	code		10964723	0					
ANR	10965166	PrimaryExpression	0		10964723	1					
ANR	10965167	EqualityExpression	exec_cont != 0		10964723	1		!=			
ANR	10965168	Identifier	exec_cont		10964723	0					
ANR	10965169	PrimaryExpression	0		10964723	1					
ANR	10965170	ExpressionStatement	code = ( * exec_cont ) ( i_ctx_p )	265:12:9680:9708	10964723	1	True				
ANR	10965171	AssignmentExpression	code = ( * exec_cont ) ( i_ctx_p )		10964723	0		=			
ANR	10965172	Identifier	code		10964723	0					
ANR	10965173	CallExpression	( * exec_cont ) ( i_ctx_p )		10964723	1					
ANR	10965174	Callee	* exec_cont		10964723	0					
ANR	10965175	UnaryOperationExpression	* exec_cont		10964723	0					
ANR	10965176	UnaryOperator	*		10964723	0					
ANR	10965177	Identifier	exec_cont		10964723	1					
ANR	10965178	ArgumentList	i_ctx_p		10964723	1					
ANR	10965179	Argument	i_ctx_p		10964723	0					
ANR	10965180	Identifier	i_ctx_p		10964723	0					
ANR	10965181	ReturnStatement	return code ;	266:8:9718:9729	10964723	4	True				
ANR	10965182	Identifier	code		10964723	0					
ANR	10965183	ElseStatement	else		10964723	0					
ANR	10965184	CompoundStatement		89:8:3073:3112	10964723	0					
ANR	10965185	IdentifierDeclStatement	const ref * opstr = op ;	269:8:9792:9813	10964723	0	True				
ANR	10965186	IdentifierDecl	* opstr = op		10964723	0					
ANR	10965187	IdentifierDeclType	const ref *		10964723	0					
ANR	10965188	Identifier	opstr		10964723	1					
ANR	10965189	AssignmentExpression	* opstr = op		10964723	2		=			
ANR	10965190	Identifier	op		10964723	0					
ANR	10965191	Identifier	op		10964723	1					
ANR	10965192	IdentifierDeclStatement	ref other_subr ;	270:8:9823:9837	10964723	1	True				
ANR	10965193	IdentifierDecl	other_subr		10964723	0					
ANR	10965194	IdentifierDeclType	ref		10964723	0					
ANR	10965195	Identifier	other_subr		10964723	1					
ANR	10965196	IdentifierDeclStatement	const gs_matrix * pctm = & ctm_only ( igs ) ;	271:8:9847:9886	10964723	2	True				
ANR	10965197	IdentifierDecl	* pctm = & ctm_only ( igs )		10964723	0					
ANR	10965198	IdentifierDeclType	const gs_matrix *		10964723	0					
ANR	10965199	Identifier	pctm		10964723	1					
ANR	10965200	AssignmentExpression	* pctm = & ctm_only ( igs )		10964723	2		=			
ANR	10965201	Identifier	pctm		10964723	0					
ANR	10965202	UnaryOperationExpression	& ctm_only ( igs )		10964723	1					
ANR	10965203	UnaryOperator	&		10964723	0					
ANR	10965204	CallExpression	ctm_only ( igs )		10964723	1					
ANR	10965205	Callee	ctm_only		10964723	0					
ANR	10965206	Identifier	ctm_only		10964723	0					
ANR	10965207	ArgumentList	igs		10964723	1					
ANR	10965208	Argument	igs		10964723	0					
ANR	10965209	Identifier	igs		10964723	0					
ANR	10965210	IfStatement	if ( pctm -> xx * pctm -> yy == pctm -> xy * pctm -> yx )		10964723	3					
ANR	10965211	Condition	pctm -> xx * pctm -> yy == pctm -> xy * pctm -> yx	274:12:9945:9986	10964723	0	True				
ANR	10965212	EqualityExpression	pctm -> xx * pctm -> yy == pctm -> xy * pctm -> yx		10964723	0		==			
ANR	10965213	MultiplicativeExpression	pctm -> xx * pctm -> yy		10964723	0		*			
ANR	10965214	PtrMemberAccess	pctm -> xx		10964723	0					
ANR	10965215	Identifier	pctm		10964723	0					
ANR	10965216	Identifier	xx		10964723	1					
ANR	10965217	PtrMemberAccess	pctm -> yy		10964723	1					
ANR	10965218	Identifier	pctm		10964723	0					
ANR	10965219	Identifier	yy		10964723	1					
ANR	10965220	MultiplicativeExpression	pctm -> xy * pctm -> yx		10964723	1		*			
ANR	10965221	PtrMemberAccess	pctm -> xy		10964723	0					
ANR	10965222	Identifier	pctm		10964723	0					
ANR	10965223	Identifier	xy		10964723	1					
ANR	10965224	PtrMemberAccess	pctm -> yx		10964723	1					
ANR	10965225	Identifier	pctm		10964723	0					
ANR	10965226	Identifier	yx		10964723	1					
ANR	10965227	CompoundStatement		96:12:3391:3414	10964723	1					
ANR	10965228	IdentifierDeclStatement	op_proc_t exec_cont = 0 ;	278:12:10165:10188	10964723	0	True				
ANR	10965229	IdentifierDecl	exec_cont = 0		10964723	0					
ANR	10965230	IdentifierDeclType	op_proc_t		10964723	0					
ANR	10965231	Identifier	exec_cont		10964723	1					
ANR	10965232	AssignmentExpression	exec_cont = 0		10964723	2		=			
ANR	10965233	Identifier	exec_cont		10964723	0					
ANR	10965234	PrimaryExpression	0		10964723	1					
ANR	10965235	ExpressionStatement	cxs . char_bbox . p . x = 0	280:12:10203:10224	10964723	1	True				
ANR	10965236	AssignmentExpression	cxs . char_bbox . p . x = 0		10964723	0		=			
ANR	10965237	MemberAccess	cxs . char_bbox . p . x		10964723	0					
ANR	10965238	MemberAccess	cxs . char_bbox . p		10964723	0					
ANR	10965239	MemberAccess	cxs . char_bbox		10964723	0					
ANR	10965240	Identifier	cxs		10964723	0					
ANR	10965241	Identifier	char_bbox		10964723	1					
ANR	10965242	Identifier	p		10964723	1					
ANR	10965243	Identifier	x		10964723	1					
ANR	10965244	PrimaryExpression	0		10964723	1					
ANR	10965245	ExpressionStatement	cxs . char_bbox . p . y = 0	281:12:10238:10259	10964723	2	True				
ANR	10965246	AssignmentExpression	cxs . char_bbox . p . y = 0		10964723	0		=			
ANR	10965247	MemberAccess	cxs . char_bbox . p . y		10964723	0					
ANR	10965248	MemberAccess	cxs . char_bbox . p		10964723	0					
ANR	10965249	MemberAccess	cxs . char_bbox		10964723	0					
ANR	10965250	Identifier	cxs		10964723	0					
ANR	10965251	Identifier	char_bbox		10964723	1					
ANR	10965252	Identifier	p		10964723	1					
ANR	10965253	Identifier	y		10964723	1					
ANR	10965254	PrimaryExpression	0		10964723	1					
ANR	10965255	ExpressionStatement	cxs . char_bbox . q . x = 0	282:12:10273:10294	10964723	3	True				
ANR	10965256	AssignmentExpression	cxs . char_bbox . q . x = 0		10964723	0		=			
ANR	10965257	MemberAccess	cxs . char_bbox . q . x		10964723	0					
ANR	10965258	MemberAccess	cxs . char_bbox . q		10964723	0					
ANR	10965259	MemberAccess	cxs . char_bbox		10964723	0					
ANR	10965260	Identifier	cxs		10964723	0					
ANR	10965261	Identifier	char_bbox		10964723	1					
ANR	10965262	Identifier	q		10964723	1					
ANR	10965263	Identifier	x		10964723	1					
ANR	10965264	PrimaryExpression	0		10964723	1					
ANR	10965265	ExpressionStatement	cxs . char_bbox . q . y = 0	283:12:10308:10329	10964723	4	True				
ANR	10965266	AssignmentExpression	cxs . char_bbox . q . y = 0		10964723	0		=			
ANR	10965267	MemberAccess	cxs . char_bbox . q . y		10964723	0					
ANR	10965268	MemberAccess	cxs . char_bbox . q		10964723	0					
ANR	10965269	MemberAccess	cxs . char_bbox		10964723	0					
ANR	10965270	Identifier	cxs		10964723	0					
ANR	10965271	Identifier	char_bbox		10964723	1					
ANR	10965272	Identifier	q		10964723	1					
ANR	10965273	Identifier	y		10964723	1					
ANR	10965274	PrimaryExpression	0		10964723	1					
ANR	10965275	ExpressionStatement	"code = type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , & exec_cont )"	284:12:10343:10405	10964723	5	True				
ANR	10965276	AssignmentExpression	"code = type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , & exec_cont )"		10964723	0		=			
ANR	10965277	Identifier	code		10964723	0					
ANR	10965278	CallExpression	"type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , & exec_cont )"		10964723	1					
ANR	10965279	Callee	type1exec_bbox		10964723	0					
ANR	10965280	Identifier	type1exec_bbox		10964723	0					
ANR	10965281	ArgumentList	i_ctx_p		10964723	1					
ANR	10965282	Argument	i_ctx_p		10964723	0					
ANR	10965283	Identifier	i_ctx_p		10964723	0					
ANR	10965284	Argument	penum		10964723	1					
ANR	10965285	Identifier	penum		10964723	0					
ANR	10965286	Argument	& cxs		10964723	2					
ANR	10965287	UnaryOperationExpression	& cxs		10964723	0					
ANR	10965288	UnaryOperator	&		10964723	0					
ANR	10965289	Identifier	cxs		10964723	1					
ANR	10965290	Argument	pfont		10964723	3					
ANR	10965291	Identifier	pfont		10964723	0					
ANR	10965292	Argument	& exec_cont		10964723	4					
ANR	10965293	UnaryOperationExpression	& exec_cont		10964723	0					
ANR	10965294	UnaryOperator	&		10964723	0					
ANR	10965295	Identifier	exec_cont		10964723	1					
ANR	10965296	IfStatement	if ( code >= 0 && exec_cont != 0 )		10964723	6					
ANR	10965297	Condition	code >= 0 && exec_cont != 0	285:16:10423:10449	10964723	0	True				
ANR	10965298	AndExpression	code >= 0 && exec_cont != 0		10964723	0		&&			
ANR	10965299	RelationalExpression	code >= 0		10964723	0		>=			
ANR	10965300	Identifier	code		10964723	0					
ANR	10965301	PrimaryExpression	0		10964723	1					
ANR	10965302	EqualityExpression	exec_cont != 0		10964723	1		!=			
ANR	10965303	Identifier	exec_cont		10964723	0					
ANR	10965304	PrimaryExpression	0		10964723	1					
ANR	10965305	ExpressionStatement	code = ( * exec_cont ) ( i_ctx_p )	286:16:10468:10496	10964723	1	True				
ANR	10965306	AssignmentExpression	code = ( * exec_cont ) ( i_ctx_p )		10964723	0		=			
ANR	10965307	Identifier	code		10964723	0					
ANR	10965308	CallExpression	( * exec_cont ) ( i_ctx_p )		10964723	1					
ANR	10965309	Callee	* exec_cont		10964723	0					
ANR	10965310	UnaryOperationExpression	* exec_cont		10964723	0					
ANR	10965311	UnaryOperator	*		10964723	0					
ANR	10965312	Identifier	exec_cont		10964723	1					
ANR	10965313	ArgumentList	i_ctx_p		10964723	1					
ANR	10965314	Argument	i_ctx_p		10964723	0					
ANR	10965315	Identifier	i_ctx_p		10964723	0					
ANR	10965316	ReturnStatement	return code ;	287:12:10510:10521	10964723	7	True				
ANR	10965317	Identifier	code		10964723	0					
ANR	10965318	SwitchStatement	switch ( cxs . present )		10964723	4					
ANR	10965319	Condition	cxs . present	295:16:10873:10883	10964723	0	True				
ANR	10965320	MemberAccess	cxs . present		10964723	0					
ANR	10965321	Identifier	cxs		10964723	0					
ANR	10965322	Identifier	present		10964723	1					
ANR	10965323	CompoundStatement		113:29:4112:4112	10964723	1					
ANR	10965324	Label	case metricsSideBearingAndWidth :	296:12:10900:10931	10964723	0	True				
ANR	10965325	Identifier	metricsSideBearingAndWidth		10964723	0					
ANR	10965326	CompoundStatement		115:16:4177:4188	10964723	1					
ANR	10965327	IdentifierDeclStatement	gs_point pt ;	297:16:10951:10962	10964723	0	True				
ANR	10965328	IdentifierDecl	pt		10964723	0					
ANR	10965329	IdentifierDeclType	gs_point		10964723	0					
ANR	10965330	Identifier	pt		10964723	1					
ANR	10965331	ExpressionStatement	"pt . x = cxs . sbw [ 0 ] , pt . y = cxs . sbw [ 1 ]"	299:16:10981:11017	10964723	1	True				
ANR	10965332	Expression	"pt . x = cxs . sbw [ 0 ] , pt . y = cxs . sbw [ 1 ]"		10964723	0					
ANR	10965333	AssignmentExpression	pt . x = cxs . sbw [ 0 ]		10964723	0		=			
ANR	10965334	MemberAccess	pt . x		10964723	0					
ANR	10965335	Identifier	pt		10964723	0					
ANR	10965336	Identifier	x		10964723	1					
ANR	10965337	ArrayIndexing	cxs . sbw [ 0 ]		10964723	1					
ANR	10965338	MemberAccess	cxs . sbw		10964723	0					
ANR	10965339	Identifier	cxs		10964723	0					
ANR	10965340	Identifier	sbw		10964723	1					
ANR	10965341	PrimaryExpression	0		10964723	1					
ANR	10965342	AssignmentExpression	pt . y = cxs . sbw [ 1 ]		10964723	1		=			
ANR	10965343	MemberAccess	pt . y		10964723	0					
ANR	10965344	Identifier	pt		10964723	0					
ANR	10965345	Identifier	y		10964723	1					
ANR	10965346	ArrayIndexing	cxs . sbw [ 1 ]		10964723	1					
ANR	10965347	MemberAccess	cxs . sbw		10964723	0					
ANR	10965348	Identifier	cxs		10964723	0					
ANR	10965349	Identifier	sbw		10964723	1					
ANR	10965350	PrimaryExpression	1		10964723	1					
ANR	10965351	ExpressionStatement	"gs_type1_set_lsb ( pcis , & pt )"	300:16:11035:11062	10964723	2	True				
ANR	10965352	CallExpression	"gs_type1_set_lsb ( pcis , & pt )"		10964723	0					
ANR	10965353	Callee	gs_type1_set_lsb		10964723	0					
ANR	10965354	Identifier	gs_type1_set_lsb		10964723	0					
ANR	10965355	ArgumentList	pcis		10964723	1					
ANR	10965356	Argument	pcis		10964723	0					
ANR	10965357	Identifier	pcis		10964723	0					
ANR	10965358	Argument	& pt		10964723	1					
ANR	10965359	UnaryOperationExpression	& pt		10964723	0					
ANR	10965360	UnaryOperator	&		10964723	0					
ANR	10965361	Identifier	pt		10964723	1					
ANR	10965362	Label	case metricsWidthOnly :	303:12:11121:11142	10964723	2	True				
ANR	10965363	Identifier	metricsWidthOnly		10964723	0					
ANR	10965364	CompoundStatement		122:16:4388:4399	10964723	3					
ANR	10965365	IdentifierDeclStatement	gs_point pt ;	304:16:11162:11173	10964723	0	True				
ANR	10965366	IdentifierDecl	pt		10964723	0					
ANR	10965367	IdentifierDeclType	gs_point		10964723	0					
ANR	10965368	Identifier	pt		10964723	1					
ANR	10965369	ExpressionStatement	"pt . x = cxs . sbw [ 2 ] , pt . y = cxs . sbw [ 3 ]"	306:16:11192:11228	10964723	1	True				
ANR	10965370	Expression	"pt . x = cxs . sbw [ 2 ] , pt . y = cxs . sbw [ 3 ]"		10964723	0					
ANR	10965371	AssignmentExpression	pt . x = cxs . sbw [ 2 ]		10964723	0		=			
ANR	10965372	MemberAccess	pt . x		10964723	0					
ANR	10965373	Identifier	pt		10964723	0					
ANR	10965374	Identifier	x		10964723	1					
ANR	10965375	ArrayIndexing	cxs . sbw [ 2 ]		10964723	1					
ANR	10965376	MemberAccess	cxs . sbw		10964723	0					
ANR	10965377	Identifier	cxs		10964723	0					
ANR	10965378	Identifier	sbw		10964723	1					
ANR	10965379	PrimaryExpression	2		10964723	1					
ANR	10965380	AssignmentExpression	pt . y = cxs . sbw [ 3 ]		10964723	1		=			
ANR	10965381	MemberAccess	pt . y		10964723	0					
ANR	10965382	Identifier	pt		10964723	0					
ANR	10965383	Identifier	y		10964723	1					
ANR	10965384	ArrayIndexing	cxs . sbw [ 3 ]		10964723	1					
ANR	10965385	MemberAccess	cxs . sbw		10964723	0					
ANR	10965386	Identifier	cxs		10964723	0					
ANR	10965387	Identifier	sbw		10964723	1					
ANR	10965388	PrimaryExpression	3		10964723	1					
ANR	10965389	ExpressionStatement	"gs_type1_set_width ( pcis , & pt )"	307:16:11246:11275	10964723	2	True				
ANR	10965390	CallExpression	"gs_type1_set_width ( pcis , & pt )"		10964723	0					
ANR	10965391	Callee	gs_type1_set_width		10964723	0					
ANR	10965392	Identifier	gs_type1_set_width		10964723	0					
ANR	10965393	ArgumentList	pcis		10964723	1					
ANR	10965394	Argument	pcis		10964723	0					
ANR	10965395	Identifier	pcis		10964723	0					
ANR	10965396	Argument	& pt		10964723	1					
ANR	10965397	UnaryOperationExpression	& pt		10964723	0					
ANR	10965398	UnaryOperator	&		10964723	0					
ANR	10965399	Identifier	pt		10964723	1					
ANR	10965400	Label	icont :	312:6:11345:11350	10964723	5	True				
ANR	10965401	Identifier	icont		10964723	0					
ANR	10965402	ExpressionStatement	"code = type1_continue_dispatch ( i_ctx_p , & cxs , opstr , & other_subr , 4 )"	313:8:11360:11428	10964723	6	True				
ANR	10965403	AssignmentExpression	"code = type1_continue_dispatch ( i_ctx_p , & cxs , opstr , & other_subr , 4 )"		10964723	0		=			
ANR	10965404	Identifier	code		10964723	0					
ANR	10965405	CallExpression	"type1_continue_dispatch ( i_ctx_p , & cxs , opstr , & other_subr , 4 )"		10964723	1					
ANR	10965406	Callee	type1_continue_dispatch		10964723	0					
ANR	10965407	Identifier	type1_continue_dispatch		10964723	0					
ANR	10965408	ArgumentList	i_ctx_p		10964723	1					
ANR	10965409	Argument	i_ctx_p		10964723	0					
ANR	10965410	Identifier	i_ctx_p		10964723	0					
ANR	10965411	Argument	& cxs		10964723	1					
ANR	10965412	UnaryOperationExpression	& cxs		10964723	0					
ANR	10965413	UnaryOperator	&		10964723	0					
ANR	10965414	Identifier	cxs		10964723	1					
ANR	10965415	Argument	opstr		10964723	2					
ANR	10965416	Identifier	opstr		10964723	0					
ANR	10965417	Argument	& other_subr		10964723	3					
ANR	10965418	UnaryOperationExpression	& other_subr		10964723	0					
ANR	10965419	UnaryOperator	&		10964723	0					
ANR	10965420	Identifier	other_subr		10964723	1					
ANR	10965421	Argument	4		10964723	4					
ANR	10965422	PrimaryExpression	4		10964723	0					
ANR	10965423	ExpressionStatement	op = osp	314:8:11438:11446	10964723	7	True				
ANR	10965424	AssignmentExpression	op = osp		10964723	0		=			
ANR	10965425	Identifier	op		10964723	0					
ANR	10965426	Identifier	osp		10964723	1					
ANR	10965427	SwitchStatement	switch ( code )		10964723	8					
ANR	10965428	Condition	code	315:16:11498:11501	10964723	0	True				
ANR	10965429	Identifier	code		10964723	0					
ANR	10965430	CompoundStatement		133:22:4730:4730	10964723	1					
ANR	10965431	Label	case 0 :	316:12:11518:11524	10964723	0	True				
ANR	10965432	ReturnStatement	"return nobbox_finish ( i_ctx_p , & cxs ) ;"	317:16:11558:11593	10964723	1	True				
ANR	10965433	CallExpression	"nobbox_finish ( i_ctx_p , & cxs )"		10964723	0					
ANR	10965434	Callee	nobbox_finish		10964723	0					
ANR	10965435	Identifier	nobbox_finish		10964723	0					
ANR	10965436	ArgumentList	i_ctx_p		10964723	1					
ANR	10965437	Argument	i_ctx_p		10964723	0					
ANR	10965438	Identifier	i_ctx_p		10964723	0					
ANR	10965439	Argument	& cxs		10964723	1					
ANR	10965440	UnaryOperationExpression	& cxs		10964723	0					
ANR	10965441	UnaryOperator	&		10964723	0					
ANR	10965442	Identifier	cxs		10964723	1					
ANR	10965443	Label	default :	318:12:11607:11614	10964723	2	True				
ANR	10965444	Identifier	default		10964723	0					
ANR	10965445	ReturnStatement	return code ;	319:16:11655:11666	10964723	3	True				
ANR	10965446	Identifier	code		10964723	0					
ANR	10965447	Label	case type1_result_callothersubr :	320:12:11680:11711	10964723	4	True				
ANR	10965448	Identifier	type1_result_callothersubr		10964723	0					
ANR	10965449	ReturnStatement	"return type1_call_OtherSubr ( i_ctx_p , & cxs , nobbox_continue , & other_subr ) ;"	321:16:11753:11869	10964723	5	True				
ANR	10965450	CallExpression	"type1_call_OtherSubr ( i_ctx_p , & cxs , nobbox_continue , & other_subr )"		10964723	0					
ANR	10965451	Callee	type1_call_OtherSubr		10964723	0					
ANR	10965452	Identifier	type1_call_OtherSubr		10964723	0					
ANR	10965453	ArgumentList	i_ctx_p		10964723	1					
ANR	10965454	Argument	i_ctx_p		10964723	0					
ANR	10965455	Identifier	i_ctx_p		10964723	0					
ANR	10965456	Argument	& cxs		10964723	1					
ANR	10965457	UnaryOperationExpression	& cxs		10964723	0					
ANR	10965458	UnaryOperator	&		10964723	0					
ANR	10965459	Identifier	cxs		10964723	1					
ANR	10965460	Argument	nobbox_continue		10964723	2					
ANR	10965461	Identifier	nobbox_continue		10964723	0					
ANR	10965462	Argument	& other_subr		10964723	3					
ANR	10965463	UnaryOperationExpression	& other_subr		10964723	0					
ANR	10965464	UnaryOperator	&		10964723	0					
ANR	10965465	Identifier	other_subr		10964723	1					
ANR	10965466	Label	case type1_result_sbw :	323:12:11883:11904	10964723	6	True				
ANR	10965467	Identifier	type1_result_sbw		10964723	0					
ANR	10965468	SwitchStatement	switch ( cxs . present )		10964723	7					
ANR	10965469	Condition	cxs . present	324:24:11958:11968	10964723	0	True				
ANR	10965470	MemberAccess	cxs . present		10964723	0					
ANR	10965471	Identifier	cxs		10964723	0					
ANR	10965472	Identifier	present		10964723	1					
ANR	10965473	CompoundStatement		142:37:5197:5197	10964723	1					
ANR	10965474	Label	case metricsNone :	325:20:11993:12009	10964723	0	True				
ANR	10965475	Identifier	metricsNone		10964723	0					
ANR	10965476	ExpressionStatement	cxs . sbw [ 0 ] = fixed2float ( pcis -> lsb . x )	326:24:12035:12072	10964723	1	True				
ANR	10965477	AssignmentExpression	cxs . sbw [ 0 ] = fixed2float ( pcis -> lsb . x )		10964723	0		=			
ANR	10965478	ArrayIndexing	cxs . sbw [ 0 ]		10964723	0					
ANR	10965479	MemberAccess	cxs . sbw		10964723	0					
ANR	10965480	Identifier	cxs		10964723	0					
ANR	10965481	Identifier	sbw		10964723	1					
ANR	10965482	PrimaryExpression	0		10964723	1					
ANR	10965483	CallExpression	fixed2float ( pcis -> lsb . x )		10964723	1					
ANR	10965484	Callee	fixed2float		10964723	0					
ANR	10965485	Identifier	fixed2float		10964723	0					
ANR	10965486	ArgumentList	pcis -> lsb . x		10964723	1					
ANR	10965487	Argument	pcis -> lsb . x		10964723	0					
ANR	10965488	MemberAccess	pcis -> lsb . x		10964723	0					
ANR	10965489	PtrMemberAccess	pcis -> lsb		10964723	0					
ANR	10965490	Identifier	pcis		10964723	0					
ANR	10965491	Identifier	lsb		10964723	1					
ANR	10965492	Identifier	x		10964723	1					
ANR	10965493	ExpressionStatement	cxs . sbw [ 1 ] = fixed2float ( pcis -> lsb . y )	327:24:12098:12135	10964723	2	True				
ANR	10965494	AssignmentExpression	cxs . sbw [ 1 ] = fixed2float ( pcis -> lsb . y )		10964723	0		=			
ANR	10965495	ArrayIndexing	cxs . sbw [ 1 ]		10964723	0					
ANR	10965496	MemberAccess	cxs . sbw		10964723	0					
ANR	10965497	Identifier	cxs		10964723	0					
ANR	10965498	Identifier	sbw		10964723	1					
ANR	10965499	PrimaryExpression	1		10964723	1					
ANR	10965500	CallExpression	fixed2float ( pcis -> lsb . y )		10964723	1					
ANR	10965501	Callee	fixed2float		10964723	0					
ANR	10965502	Identifier	fixed2float		10964723	0					
ANR	10965503	ArgumentList	pcis -> lsb . y		10964723	1					
ANR	10965504	Argument	pcis -> lsb . y		10964723	0					
ANR	10965505	MemberAccess	pcis -> lsb . y		10964723	0					
ANR	10965506	PtrMemberAccess	pcis -> lsb		10964723	0					
ANR	10965507	Identifier	pcis		10964723	0					
ANR	10965508	Identifier	lsb		10964723	1					
ANR	10965509	Identifier	y		10964723	1					
ANR	10965510	Label	case metricsWidthOnly :	329:20:12196:12217	10964723	3	True				
ANR	10965511	Identifier	metricsWidthOnly		10964723	0					
ANR	10965512	ExpressionStatement	cxs . sbw [ 2 ] = fixed2float ( pcis -> width . x )	330:24:12243:12282	10964723	4	True				
ANR	10965513	AssignmentExpression	cxs . sbw [ 2 ] = fixed2float ( pcis -> width . x )		10964723	0		=			
ANR	10965514	ArrayIndexing	cxs . sbw [ 2 ]		10964723	0					
ANR	10965515	MemberAccess	cxs . sbw		10964723	0					
ANR	10965516	Identifier	cxs		10964723	0					
ANR	10965517	Identifier	sbw		10964723	1					
ANR	10965518	PrimaryExpression	2		10964723	1					
ANR	10965519	CallExpression	fixed2float ( pcis -> width . x )		10964723	1					
ANR	10965520	Callee	fixed2float		10964723	0					
ANR	10965521	Identifier	fixed2float		10964723	0					
ANR	10965522	ArgumentList	pcis -> width . x		10964723	1					
ANR	10965523	Argument	pcis -> width . x		10964723	0					
ANR	10965524	MemberAccess	pcis -> width . x		10964723	0					
ANR	10965525	PtrMemberAccess	pcis -> width		10964723	0					
ANR	10965526	Identifier	pcis		10964723	0					
ANR	10965527	Identifier	width		10964723	1					
ANR	10965528	Identifier	x		10964723	1					
ANR	10965529	ExpressionStatement	cxs . sbw [ 3 ] = fixed2float ( pcis -> width . y )	331:24:12308:12347	10964723	5	True				
ANR	10965530	AssignmentExpression	cxs . sbw [ 3 ] = fixed2float ( pcis -> width . y )		10964723	0		=			
ANR	10965531	ArrayIndexing	cxs . sbw [ 3 ]		10964723	0					
ANR	10965532	MemberAccess	cxs . sbw		10964723	0					
ANR	10965533	Identifier	cxs		10964723	0					
ANR	10965534	Identifier	sbw		10964723	1					
ANR	10965535	PrimaryExpression	3		10964723	1					
ANR	10965536	CallExpression	fixed2float ( pcis -> width . y )		10964723	1					
ANR	10965537	Callee	fixed2float		10964723	0					
ANR	10965538	Identifier	fixed2float		10964723	0					
ANR	10965539	ArgumentList	pcis -> width . y		10964723	1					
ANR	10965540	Argument	pcis -> width . y		10964723	0					
ANR	10965541	MemberAccess	pcis -> width . y		10964723	0					
ANR	10965542	PtrMemberAccess	pcis -> width		10964723	0					
ANR	10965543	Identifier	pcis		10964723	0					
ANR	10965544	Identifier	width		10964723	1					
ANR	10965545	Identifier	y		10964723	1					
ANR	10965546	ExpressionStatement	opstr = 0	333:16:12383:12392	10964723	8	True				
ANR	10965547	AssignmentExpression	opstr = 0		10964723	0		=			
ANR	10965548	Identifier	opstr		10964723	0					
ANR	10965549	PrimaryExpression	0		10964723	1					
ANR	10965550	GotoStatement	goto icont ;	334:16:12410:12420	10964723	9	True				
ANR	10965551	Identifier	icont		10964723	0					
ANR	10965552	ReturnType	static int		10964723	1					
ANR	10965553	Identifier	charstring_execchar_aux		10964723	2					
ANR	10965554	ParameterList	"i_ctx_t * i_ctx_p , gs_text_enum_t * penum , gs_font * pfont"		10964723	3					
ANR	10965555	Parameter	i_ctx_t * i_ctx_p	182:24:6716:6731	10964723	0	True				
ANR	10965556	ParameterType	i_ctx_t *		10964723	0					
ANR	10965557	Identifier	i_ctx_p		10964723	1					
ANR	10965558	Parameter	gs_text_enum_t * penum	182:42:6734:6754	10964723	1	True				
ANR	10965559	ParameterType	gs_text_enum_t *		10964723	0					
ANR	10965560	Identifier	penum		10964723	1					
ANR	10965561	Parameter	gs_font * pfont	182:65:6757:6770	10964723	2	True				
ANR	10965562	ParameterType	gs_font *		10964723	0					
ANR	10965563	Identifier	pfont		10964723	1					
ANR	10965564	CFGEntryNode	ENTRY		10964723		True				
ANR	10965565	CFGExitNode	EXIT		10964723		True				
ANR	10965566	Symbol	pt		10964723						
ANR	10965567	Symbol	osp		10964723						
ANR	10965568	Symbol	pcis -> lsb . x		10964723						
ANR	10965569	Symbol	pcis -> lsb . y		10964723						
ANR	10965570	Symbol	penum -> current_font -> FontType		10964723						
ANR	10965571	Symbol	igs		10964723						
ANR	10965572	Symbol	nobbox_continue		10964723						
ANR	10965573	Symbol	penum -> FontBBox_as_Metrics2		10964723						
ANR	10965574	Symbol	* pdata		10964723						
ANR	10965575	Symbol	* gs_rootfont		10964723						
ANR	10965576	Symbol	* * penum		10964723						
ANR	10965577	Symbol	zchar_exec_char_proc		10964723						
ANR	10965578	Symbol	other_subr		10964723						
ANR	10965579	Symbol	& other_subr		10964723						
ANR	10965580	Symbol	penum		10964723						
ANR	10965581	Symbol	pfont1 -> FontBBox		10964723						
ANR	10965582	Symbol	& pt		10964723						
ANR	10965583	Symbol	* pcis		10964723						
ANR	10965584	Symbol	type1_call_OtherSubr		10964723						
ANR	10965585	Symbol	i_ctx_p		10964723						
ANR	10965586	Symbol	cxs . char_bbox		10964723						
ANR	10965587	Symbol	FontBBox . p		10964723						
ANR	10965588	Symbol	FontBBox . q		10964723						
ANR	10965589	Symbol	* pctm		10964723						
ANR	10965590	Symbol	* penum		10964723						
ANR	10965591	Symbol	pdata		10964723						
ANR	10965592	Symbol	ft_CID_encrypted		10964723						
ANR	10965593	Symbol	r_size		10964723						
ANR	10965594	Symbol	pcis -> lsb		10964723						
ANR	10965595	Symbol	gs_rootfont		10964723						
ANR	10965596	Symbol	r_is_proc		10964723						
ANR	10965597	Symbol	gs_error_invalidfont		10964723						
ANR	10965598	Symbol	FontBBox . p . x		10964723						
ANR	10965599	Symbol	FontBBox . p . y		10964723						
ANR	10965600	Symbol	max		10964723						
ANR	10965601	Symbol	pcis		10964723						
ANR	10965602	Symbol	t_string		10964723						
ANR	10965603	Symbol	penum -> FontBBox_as_Metrics2 . x		10964723						
ANR	10965604	Symbol	penum -> FontBBox_as_Metrics2 . y		10964723						
ANR	10965605	Symbol	& exec_cont		10964723						
ANR	10965606	Symbol	pt . x		10964723						
ANR	10965607	Symbol	gs_rootfont ( igs ) -> WMode		10964723						
ANR	10965608	Symbol	pt . y		10964723						
ANR	10965609	Symbol	& pfont1 -> data		10964723						
ANR	10965610	Symbol	* pfcid0		10964723						
ANR	10965611	Symbol	* penum -> current_font		10964723						
ANR	10965612	Symbol	pctm -> xx		10964723						
ANR	10965613	Symbol	& cxs		10964723						
ANR	10965614	Symbol	FontBBox		10964723						
ANR	10965615	Symbol	* op		10964723						
ANR	10965616	Symbol	pdata -> lenIV		10964723						
ANR	10965617	Symbol	pctm -> xy		10964723						
ANR	10965618	Symbol	cxs . present		10964723						
ANR	10965619	Symbol	type1_exec_init		10964723						
ANR	10965620	Symbol	pctm		10964723						
ANR	10965621	Symbol	FontBBox . q . y		10964723						
ANR	10965622	Symbol	FontBBox . q . x		10964723						
ANR	10965623	Symbol	pfont -> StrokeWidth		10964723						
ANR	10965624	Symbol	& cxs . cis		10964723						
ANR	10965625	Symbol	exec_cont		10964723						
ANR	10965626	Symbol	cxs		10964723						
ANR	10965627	Symbol	* pfont1		10964723						
ANR	10965628	Symbol	pfont1		10964723						
ANR	10965629	Symbol	pctm -> yy		10964723						
ANR	10965630	Symbol	pctm -> yx		10964723						
ANR	10965631	Symbol	cxs . char_bbox . p		10964723						
ANR	10965632	Symbol	cxs . char_bbox . q		10964723						
ANR	10965633	Symbol	nobbox_finish		10964723						
ANR	10965634	Symbol	cxs . sbw		10964723						
ANR	10965635	Symbol	cxs . use_FontBBox_as_Metrics2		10964723						
ANR	10965636	Symbol	cxs . char_bbox . p . x		10964723						
ANR	10965637	Symbol	cxs . char_bbox . p . y		10964723						
ANR	10965638	Symbol	true		10964723						
ANR	10965639	Symbol	pcis -> width . y		10964723						
ANR	10965640	Symbol	pcis -> width . x		10964723						
ANR	10965641	Symbol	pfont -> PaintType		10964723						
ANR	10965642	Symbol	zchar_get_metrics		10964723						
ANR	10965643	Symbol	cxs . char_bbox . q . x		10964723						
ANR	10965644	Symbol	pfcid0		10964723						
ANR	10965645	Symbol	code		10964723						
ANR	10965646	Symbol	* exec_cont		10964723						
ANR	10965647	Symbol	cxs . char_bbox . q . y		10964723						
ANR	10965648	Symbol	* cxs . sbw		10964723						
ANR	10965649	Symbol	gs_moveto		10964723						
ANR	10965650	Symbol	type1_continue_dispatch		10964723						
ANR	10965651	Symbol	penum -> current_font		10964723						
ANR	10965652	Symbol	pfcid0 -> FontBBox		10964723						
ANR	10965653	Symbol	opstr		10964723						
ANR	10965654	Symbol	op		10964723						
ANR	10965655	Symbol	metricsNone		10964723						
ANR	10965656	Symbol	& ctm_only		10964723						
ANR	10965657	Symbol	fixed2float		10964723						
ANR	10965658	Symbol	pfont		10964723						
ANR	10965659	Symbol	false		10964723						
ANR	10965660	Symbol	type1exec_bbox		10964723						
ANR	10965661	Symbol	pbfont		10964723						
ANR	10965662	Symbol	* pfont		10964723						
ANR	10965663	Symbol	pcis -> width		10964723						
ANR	10965664	Symbol	* cxs		10964723						
ANR	10965665	Function	charstring_execchar	339:0:12441:13472							
ANR	10965666	FunctionDef	"charstring_execchar (i_ctx_t * i_ctx_p , int font_type_mask)"		10965665	0					
ANR	10965667	CompoundStatement		341:0:12503:13472	10965665	0					
ANR	10965668	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	342:4:12509:12554	10965665	0	True				
ANR	10965669	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		10965665	0					
ANR	10965670	IdentifierDeclType	gs_text_enum_t *		10965665	0					
ANR	10965671	Identifier	penum		10965665	1					
ANR	10965672	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		10965665	2		=			
ANR	10965673	Identifier	penum		10965665	0					
ANR	10965674	CallExpression	op_show_find ( i_ctx_p )		10965665	1					
ANR	10965675	Callee	op_show_find		10965665	0					
ANR	10965676	Identifier	op_show_find		10965665	0					
ANR	10965677	ArgumentList	i_ctx_p		10965665	1					
ANR	10965678	Argument	i_ctx_p		10965665	0					
ANR	10965679	Identifier	i_ctx_p		10965665	0					
ANR	10965680	IdentifierDeclStatement	gs_font * pfont ;	343:4:12560:12574	10965665	1	True				
ANR	10965681	IdentifierDecl	* pfont		10965665	0					
ANR	10965682	IdentifierDeclType	gs_font *		10965665	0					
ANR	10965683	Identifier	pfont		10965665	1					
ANR	10965684	IdentifierDeclStatement	os_ptr op = osp ;	344:4:12580:12595	10965665	2	True				
ANR	10965685	IdentifierDecl	op = osp		10965665	0					
ANR	10965686	IdentifierDeclType	os_ptr		10965665	0					
ANR	10965687	Identifier	op		10965665	1					
ANR	10965688	AssignmentExpression	op = osp		10965665	2		=			
ANR	10965689	Identifier	osp		10965665	0					
ANR	10965690	Identifier	osp		10965665	1					
ANR	10965691	IdentifierDeclStatement	"int code = font_param ( op - 3 , & pfont ) ;"	345:4:12601:12638	10965665	3	True				
ANR	10965692	IdentifierDecl	"code = font_param ( op - 3 , & pfont )"		10965665	0					
ANR	10965693	IdentifierDeclType	int		10965665	0					
ANR	10965694	Identifier	code		10965665	1					
ANR	10965695	AssignmentExpression	"code = font_param ( op - 3 , & pfont )"		10965665	2		=			
ANR	10965696	Identifier	code		10965665	0					
ANR	10965697	CallExpression	"font_param ( op - 3 , & pfont )"		10965665	1					
ANR	10965698	Callee	font_param		10965665	0					
ANR	10965699	Identifier	font_param		10965665	0					
ANR	10965700	ArgumentList	op - 3		10965665	1					
ANR	10965701	Argument	op - 3		10965665	0					
ANR	10965702	AdditiveExpression	op - 3		10965665	0		-			
ANR	10965703	Identifier	op		10965665	0					
ANR	10965704	PrimaryExpression	3		10965665	1					
ANR	10965705	Argument	& pfont		10965665	1					
ANR	10965706	UnaryOperationExpression	& pfont		10965665	0					
ANR	10965707	UnaryOperator	&		10965665	0					
ANR	10965708	Identifier	pfont		10965665	1					
ANR	10965709	IfStatement	if ( code < 0 )		10965665	4					
ANR	10965710	Condition	code < 0	347:8:12649:12656	10965665	0	True				
ANR	10965711	RelationalExpression	code < 0		10965665	0		<			
ANR	10965712	Identifier	code		10965665	0					
ANR	10965713	PrimaryExpression	0		10965665	1					
ANR	10965714	ReturnStatement	return code ;	348:8:12667:12678	10965665	1	True				
ANR	10965715	Identifier	code		10965665	0					
ANR	10965716	IfStatement	if ( penum == 0 || pfont -> FontType >= sizeof ( font_type_mask ) * 8 || ! ( font_type_mask & ( 1 << ( int ) pfont -> FontType ) ) )		10965665	5					
ANR	10965717	Condition	penum == 0 || pfont -> FontType >= sizeof ( font_type_mask ) * 8 || ! ( font_type_mask & ( 1 << ( int ) pfont -> FontType ) )	349:8:12688:12813	10965665	0	True				
ANR	10965718	OrExpression	penum == 0 || pfont -> FontType >= sizeof ( font_type_mask ) * 8 || ! ( font_type_mask & ( 1 << ( int ) pfont -> FontType ) )		10965665	0		||			
ANR	10965719	EqualityExpression	penum == 0		10965665	0		==			
ANR	10965720	Identifier	penum		10965665	0					
ANR	10965721	PrimaryExpression	0		10965665	1					
ANR	10965722	OrExpression	pfont -> FontType >= sizeof ( font_type_mask ) * 8 || ! ( font_type_mask & ( 1 << ( int ) pfont -> FontType ) )		10965665	1		||			
ANR	10965723	RelationalExpression	pfont -> FontType >= sizeof ( font_type_mask ) * 8		10965665	0		>=			
ANR	10965724	PtrMemberAccess	pfont -> FontType		10965665	0					
ANR	10965725	Identifier	pfont		10965665	0					
ANR	10965726	Identifier	FontType		10965665	1					
ANR	10965727	MultiplicativeExpression	sizeof ( font_type_mask ) * 8		10965665	1		*			
ANR	10965728	SizeofExpression	sizeof ( font_type_mask )		10965665	0					
ANR	10965729	Sizeof	sizeof		10965665	0					
ANR	10965730	SizeofOperand	font_type_mask		10965665	1					
ANR	10965731	PrimaryExpression	8		10965665	1					
ANR	10965732	UnaryOperationExpression	! ( font_type_mask & ( 1 << ( int ) pfont -> FontType ) )		10965665	1					
ANR	10965733	UnaryOperator	!		10965665	0					
ANR	10965734	BitAndExpression	font_type_mask & ( 1 << ( int ) pfont -> FontType )		10965665	1		&			
ANR	10965735	Identifier	font_type_mask		10965665	0					
ANR	10965736	ShiftExpression	1 << ( int ) pfont -> FontType		10965665	1		<<			
ANR	10965737	PrimaryExpression	1		10965665	0					
ANR	10965738	CastExpression	( int ) pfont -> FontType		10965665	1					
ANR	10965739	CastTarget	int		10965665	0					
ANR	10965740	PtrMemberAccess	pfont -> FontType		10965665	1					
ANR	10965741	Identifier	pfont		10965665	0					
ANR	10965742	Identifier	FontType		10965665	1					
ANR	10965743	ExpressionStatement	return_error ( gs_error_undefined )	352:8:12824:12856	10965665	1	True				
ANR	10965744	CallExpression	return_error ( gs_error_undefined )		10965665	0					
ANR	10965745	Callee	return_error		10965665	0					
ANR	10965746	Identifier	return_error		10965665	0					
ANR	10965747	ArgumentList	gs_error_undefined		10965665	1					
ANR	10965748	Argument	gs_error_undefined		10965665	0					
ANR	10965749	Identifier	gs_error_undefined		10965665	0					
ANR	10965750	ExpressionStatement	"code = charstring_execchar_aux ( i_ctx_p , penum , pfont )"	353:4:12862:12915	10965665	6	True				
ANR	10965751	AssignmentExpression	"code = charstring_execchar_aux ( i_ctx_p , penum , pfont )"		10965665	0		=			
ANR	10965752	Identifier	code		10965665	0					
ANR	10965753	CallExpression	"charstring_execchar_aux ( i_ctx_p , penum , pfont )"		10965665	1					
ANR	10965754	Callee	charstring_execchar_aux		10965665	0					
ANR	10965755	Identifier	charstring_execchar_aux		10965665	0					
ANR	10965756	ArgumentList	i_ctx_p		10965665	1					
ANR	10965757	Argument	i_ctx_p		10965665	0					
ANR	10965758	Identifier	i_ctx_p		10965665	0					
ANR	10965759	Argument	penum		10965665	1					
ANR	10965760	Identifier	penum		10965665	0					
ANR	10965761	Argument	pfont		10965665	2					
ANR	10965762	Identifier	pfont		10965665	0					
ANR	10965763	IfStatement	if ( code < 0 && igs -> in_cachedevice == CACHE_DEVICE_CACHING )		10965665	7					
ANR	10965764	Condition	code < 0 && igs -> in_cachedevice == CACHE_DEVICE_CACHING	354:8:12925:12979	10965665	0	True				
ANR	10965765	AndExpression	code < 0 && igs -> in_cachedevice == CACHE_DEVICE_CACHING		10965665	0		&&			
ANR	10965766	RelationalExpression	code < 0		10965665	0		<			
ANR	10965767	Identifier	code		10965665	0					
ANR	10965768	PrimaryExpression	0		10965665	1					
ANR	10965769	EqualityExpression	igs -> in_cachedevice == CACHE_DEVICE_CACHING		10965665	1		==			
ANR	10965770	PtrMemberAccess	igs -> in_cachedevice		10965665	0					
ANR	10965771	Identifier	igs		10965665	0					
ANR	10965772	Identifier	in_cachedevice		10965665	1					
ANR	10965773	Identifier	CACHE_DEVICE_CACHING		10965665	1					
ANR	10965774	CompoundStatement		14:65:478:478	10965665	1					
ANR	10965775	Statement	gs_show_enum	360:8:13260:13271	10965665	0	True				
ANR	10965776	Statement	*	360:21:13273:13273	10965665	1	True				
ANR	10965777	Statement	const	360:22:13274:13278	10965665	2	True				
ANR	10965778	ExpressionStatement	penum_s = ( gs_show_enum * ) penum	360:28:13280:13311	10965665	3	True				
ANR	10965779	AssignmentExpression	penum_s = ( gs_show_enum * ) penum		10965665	0		=			
ANR	10965780	Identifier	penum_s		10965665	0					
ANR	10965781	CastExpression	( gs_show_enum * ) penum		10965665	1					
ANR	10965782	CastTarget	gs_show_enum *		10965665	0					
ANR	10965783	Identifier	penum		10965665	1					
ANR	10965784	IfStatement	if ( penum_s -> cc != NULL )		10965665	4					
ANR	10965785	Condition	penum_s -> cc != NULL	362:12:13326:13344	10965665	0	True				
ANR	10965786	EqualityExpression	penum_s -> cc != NULL		10965665	0		!=			
ANR	10965787	PtrMemberAccess	penum_s -> cc		10965665	0					
ANR	10965788	Identifier	penum_s		10965665	0					
ANR	10965789	Identifier	cc		10965665	1					
ANR	10965790	Identifier	NULL		10965665	1					
ANR	10965791	CompoundStatement		22:33:843:843	10965665	1					
ANR	10965792	ExpressionStatement	"gx_free_cached_char ( pfont -> dir , penum_s -> cc )"	363:12:13361:13405	10965665	0	True				
ANR	10965793	CallExpression	"gx_free_cached_char ( pfont -> dir , penum_s -> cc )"		10965665	0					
ANR	10965794	Callee	gx_free_cached_char		10965665	0					
ANR	10965795	Identifier	gx_free_cached_char		10965665	0					
ANR	10965796	ArgumentList	pfont -> dir		10965665	1					
ANR	10965797	Argument	pfont -> dir		10965665	0					
ANR	10965798	PtrMemberAccess	pfont -> dir		10965665	0					
ANR	10965799	Identifier	pfont		10965665	0					
ANR	10965800	Identifier	dir		10965665	1					
ANR	10965801	Argument	penum_s -> cc		10965665	1					
ANR	10965802	PtrMemberAccess	penum_s -> cc		10965665	0					
ANR	10965803	Identifier	penum_s		10965665	0					
ANR	10965804	Identifier	cc		10965665	1					
ANR	10965805	ExpressionStatement	penum_s -> cc = NULL	364:12:13419:13437	10965665	1	True				
ANR	10965806	AssignmentExpression	penum_s -> cc = NULL		10965665	0		=			
ANR	10965807	PtrMemberAccess	penum_s -> cc		10965665	0					
ANR	10965808	Identifier	penum_s		10965665	0					
ANR	10965809	Identifier	cc		10965665	1					
ANR	10965810	Identifier	NULL		10965665	1					
ANR	10965811	ReturnStatement	return code ;	367:4:13459:13470	10965665	8	True				
ANR	10965812	Identifier	code		10965665	0					
ANR	10965813	ReturnType	int		10965665	1					
ANR	10965814	Identifier	charstring_execchar		10965665	2					
ANR	10965815	ParameterList	"i_ctx_t * i_ctx_p , int font_type_mask"		10965665	3					
ANR	10965816	Parameter	i_ctx_t * i_ctx_p	340:20:12465:12480	10965665	0	True				
ANR	10965817	ParameterType	i_ctx_t *		10965665	0					
ANR	10965818	Identifier	i_ctx_p		10965665	1					
ANR	10965819	Parameter	int font_type_mask	340:38:12483:12500	10965665	1	True				
ANR	10965820	ParameterType	int		10965665	0					
ANR	10965821	Identifier	font_type_mask		10965665	1					
ANR	10965822	CFGEntryNode	ENTRY		10965665		True				
ANR	10965823	CFGExitNode	EXIT		10965665		True				
ANR	10965824	Symbol	op_show_find		10965665						
ANR	10965825	Symbol	* igs		10965665						
ANR	10965826	Symbol	op		10965665						
ANR	10965827	Symbol	code		10965665						
ANR	10965828	Symbol	NULL		10965665						
ANR	10965829	Symbol	penum_s -> cc		10965665						
ANR	10965830	Symbol	pfont		10965665						
ANR	10965831	Symbol	igs -> in_cachedevice		10965665						
ANR	10965832	Symbol	& pfont		10965665						
ANR	10965833	Symbol	penum		10965665						
ANR	10965834	Symbol	gs_error_undefined		10965665						
ANR	10965835	Symbol	font_param		10965665						
ANR	10965836	Symbol	osp		10965665						
ANR	10965837	Symbol	* pfont		10965665						
ANR	10965838	Symbol	pfont -> FontType		10965665						
ANR	10965839	Symbol	CACHE_DEVICE_CACHING		10965665						
ANR	10965840	Symbol	igs		10965665						
ANR	10965841	Symbol	pfont -> dir		10965665						
ANR	10965842	Symbol	i_ctx_p		10965665						
ANR	10965843	Symbol	font_type_mask		10965665						
ANR	10965844	Symbol	* penum_s		10965665						
ANR	10965845	Symbol	charstring_execchar_aux		10965665						
ANR	10965846	Symbol	penum_s		10965665						
ANR	10965847	Function	type1exec_bbox	374:0:13665:16852							
ANR	10965848	FunctionDef	"type1exec_bbox (i_ctx_t * i_ctx_p , gs_text_enum_t * penum , gs_type1exec_state * pcxs , gs_font * pfont , op_proc_t * exec_cont)"		10965847	0					
ANR	10965849	CompoundStatement		377:0:13813:16852	10965847	0					
ANR	10965850	IdentifierDeclStatement	os_ptr op = osp ;	378:4:13819:13834	10965847	0	True				
ANR	10965851	IdentifierDecl	op = osp		10965847	0					
ANR	10965852	IdentifierDeclType	os_ptr		10965847	0					
ANR	10965853	Identifier	op		10965847	1					
ANR	10965854	AssignmentExpression	op = osp		10965847	2		=			
ANR	10965855	Identifier	osp		10965847	0					
ANR	10965856	Identifier	osp		10965847	1					
ANR	10965857	Statement	gs_type1_state	379:4:13840:13853	10965847	1	True				
ANR	10965858	Statement	*	379:19:13855:13855	10965847	2	True				
ANR	10965859	Statement	const	379:20:13856:13860	10965847	3	True				
ANR	10965860	ExpressionStatement	pcis = & pcxs -> cis	379:26:13862:13879	10965847	4	True				
ANR	10965861	AssignmentExpression	pcis = & pcxs -> cis		10965847	0		=			
ANR	10965862	Identifier	pcis		10965847	0					
ANR	10965863	UnaryOperationExpression	& pcxs -> cis		10965847	1					
ANR	10965864	UnaryOperator	&		10965847	0					
ANR	10965865	PtrMemberAccess	pcxs -> cis		10965847	1					
ANR	10965866	Identifier	pcxs		10965847	0					
ANR	10965867	Identifier	cis		10965847	1					
ANR	10965868	Statement	gs_font_base	380:4:13885:13896	10965847	5	True				
ANR	10965869	Statement	*	380:17:13898:13898	10965847	6	True				
ANR	10965870	Statement	const	380:18:13899:13903	10965847	7	True				
ANR	10965871	ExpressionStatement	pbfont = ( gs_font_base * ) pfont	380:24:13905:13936	10965847	8	True				
ANR	10965872	AssignmentExpression	pbfont = ( gs_font_base * ) pfont		10965847	0		=			
ANR	10965873	Identifier	pbfont		10965847	0					
ANR	10965874	CastExpression	( gs_font_base * ) pfont		10965847	1					
ANR	10965875	CastTarget	gs_font_base *		10965847	0					
ANR	10965876	Identifier	pfont		10965847	1					
ANR	10965877	IdentifierDeclStatement	op_proc_t cont = ( pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke ) ;	381:4:13942:14083	10965847	9	True				
ANR	10965878	IdentifierDecl	cont = ( pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke )		10965847	0					
ANR	10965879	IdentifierDeclType	op_proc_t		10965847	0					
ANR	10965880	Identifier	cont		10965847	1					
ANR	10965881	AssignmentExpression	cont = ( pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke )		10965847	2		=			
ANR	10965882	Identifier	cont		10965847	0					
ANR	10965883	ConditionalExpression	pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke		10965847	1					
ANR	10965884	Condition	pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0		10965847	0					
ANR	10965885	AndExpression	pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0		10965847	0		&&			
ANR	10965886	EqualityExpression	pbfont -> PaintType == 0		10965847	0		==			
ANR	10965887	PtrMemberAccess	pbfont -> PaintType		10965847	0					
ANR	10965888	Identifier	pbfont		10965847	0					
ANR	10965889	Identifier	PaintType		10965847	1					
ANR	10965890	PrimaryExpression	0		10965847	1					
ANR	10965891	EqualityExpression	penum -> orig_font -> PaintType == 0		10965847	1		==			
ANR	10965892	PtrMemberAccess	penum -> orig_font -> PaintType		10965847	0					
ANR	10965893	PtrMemberAccess	penum -> orig_font		10965847	0					
ANR	10965894	Identifier	penum		10965847	0					
ANR	10965895	Identifier	orig_font		10965847	1					
ANR	10965896	Identifier	PaintType		10965847	1					
ANR	10965897	PrimaryExpression	0		10965847	1					
ANR	10965898	Identifier	bbox_finish_fill		10965847	1					
ANR	10965899	Identifier	bbox_finish_stroke		10965847	2					
ANR	10965900	IdentifierDeclStatement	ref * pcdevproc ;	383:4:14089:14103	10965847	10	True				
ANR	10965901	IdentifierDecl	* pcdevproc		10965847	0					
ANR	10965902	IdentifierDeclType	ref *		10965847	0					
ANR	10965903	Identifier	pcdevproc		10965847	1					
ANR	10965904	IfStatement	"if ( ( pcxs -> present == metricsNone && ! pcxs -> use_FontBBox_as_Metrics2 ) || ( penum -> orig_font -> WMode && zchar_get_CDevProc ( pbfont , & pcdevproc ) ) )"		10965847	11					
ANR	10965905	Condition	"( pcxs -> present == metricsNone && ! pcxs -> use_FontBBox_as_Metrics2 ) || ( penum -> orig_font -> WMode && zchar_get_CDevProc ( pbfont , & pcdevproc ) )"	390:8:14342:14486	10965847	0	True				
ANR	10965906	OrExpression	"( pcxs -> present == metricsNone && ! pcxs -> use_FontBBox_as_Metrics2 ) || ( penum -> orig_font -> WMode && zchar_get_CDevProc ( pbfont , & pcdevproc ) )"		10965847	0		||			
ANR	10965907	AndExpression	pcxs -> present == metricsNone && ! pcxs -> use_FontBBox_as_Metrics2		10965847	0		&&			
ANR	10965908	EqualityExpression	pcxs -> present == metricsNone		10965847	0		==			
ANR	10965909	PtrMemberAccess	pcxs -> present		10965847	0					
ANR	10965910	Identifier	pcxs		10965847	0					
ANR	10965911	Identifier	present		10965847	1					
ANR	10965912	Identifier	metricsNone		10965847	1					
ANR	10965913	UnaryOperationExpression	! pcxs -> use_FontBBox_as_Metrics2		10965847	1					
ANR	10965914	UnaryOperator	!		10965847	0					
ANR	10965915	PtrMemberAccess	pcxs -> use_FontBBox_as_Metrics2		10965847	1					
ANR	10965916	Identifier	pcxs		10965847	0					
ANR	10965917	Identifier	use_FontBBox_as_Metrics2		10965847	1					
ANR	10965918	AndExpression	"penum -> orig_font -> WMode && zchar_get_CDevProc ( pbfont , & pcdevproc )"		10965847	1		&&			
ANR	10965919	PtrMemberAccess	penum -> orig_font -> WMode		10965847	0					
ANR	10965920	PtrMemberAccess	penum -> orig_font		10965847	0					
ANR	10965921	Identifier	penum		10965847	0					
ANR	10965922	Identifier	orig_font		10965847	1					
ANR	10965923	Identifier	WMode		10965847	1					
ANR	10965924	CallExpression	"zchar_get_CDevProc ( pbfont , & pcdevproc )"		10965847	1					
ANR	10965925	Callee	zchar_get_CDevProc		10965847	0					
ANR	10965926	Identifier	zchar_get_CDevProc		10965847	0					
ANR	10965927	ArgumentList	pbfont		10965847	1					
ANR	10965928	Argument	pbfont		10965847	0					
ANR	10965929	Identifier	pbfont		10965847	0					
ANR	10965930	Argument	& pcdevproc		10965847	1					
ANR	10965931	UnaryOperationExpression	& pcdevproc		10965847	0					
ANR	10965932	UnaryOperator	&		10965847	0					
ANR	10965933	Identifier	pcdevproc		10965847	1					
ANR	10965934	CompoundStatement		28:8:1388:1396	10965847	1					
ANR	10965935	IdentifierDeclStatement	ref cnref ;	402:8:15159:15168	10965847	0	True				
ANR	10965936	IdentifierDecl	cnref		10965847	0					
ANR	10965937	IdentifierDeclType	ref		10965847	0					
ANR	10965938	Identifier	cnref		10965847	1					
ANR	10965939	IdentifierDeclStatement	ref other_subr ;	403:8:15178:15192	10965847	1	True				
ANR	10965940	IdentifierDecl	other_subr		10965847	0					
ANR	10965941	IdentifierDeclType	ref		10965847	0					
ANR	10965942	Identifier	other_subr		10965847	1					
ANR	10965943	IdentifierDeclStatement	int code ;	404:8:15202:15210	10965847	2	True				
ANR	10965944	IdentifierDecl	code		10965847	0					
ANR	10965945	IdentifierDeclType	int		10965847	0					
ANR	10965946	Identifier	code		10965847	1					
ANR	10965947	ExpressionStatement	"ref_assign ( & cnref , op - 1 )"	408:8:15323:15349	10965847	3	True				
ANR	10965948	CallExpression	"ref_assign ( & cnref , op - 1 )"		10965847	0					
ANR	10965949	Callee	ref_assign		10965847	0					
ANR	10965950	Identifier	ref_assign		10965847	0					
ANR	10965951	ArgumentList	& cnref		10965847	1					
ANR	10965952	Argument	& cnref		10965847	0					
ANR	10965953	UnaryOperationExpression	& cnref		10965847	0					
ANR	10965954	UnaryOperator	&		10965847	0					
ANR	10965955	Identifier	cnref		10965847	1					
ANR	10965956	Argument	op - 1		10965847	1					
ANR	10965957	AdditiveExpression	op - 1		10965847	0		-			
ANR	10965958	Identifier	op		10965847	0					
ANR	10965959	PrimaryExpression	1		10965847	1					
ANR	10965960	ExpressionStatement	"code = type1_continue_dispatch ( i_ctx_p , pcxs , op , & other_subr , 4 )"	409:8:15359:15424	10965847	4	True				
ANR	10965961	AssignmentExpression	"code = type1_continue_dispatch ( i_ctx_p , pcxs , op , & other_subr , 4 )"		10965847	0		=			
ANR	10965962	Identifier	code		10965847	0					
ANR	10965963	CallExpression	"type1_continue_dispatch ( i_ctx_p , pcxs , op , & other_subr , 4 )"		10965847	1					
ANR	10965964	Callee	type1_continue_dispatch		10965847	0					
ANR	10965965	Identifier	type1_continue_dispatch		10965847	0					
ANR	10965966	ArgumentList	i_ctx_p		10965847	1					
ANR	10965967	Argument	i_ctx_p		10965847	0					
ANR	10965968	Identifier	i_ctx_p		10965847	0					
ANR	10965969	Argument	pcxs		10965847	1					
ANR	10965970	Identifier	pcxs		10965847	0					
ANR	10965971	Argument	op		10965847	2					
ANR	10965972	Identifier	op		10965847	0					
ANR	10965973	Argument	& other_subr		10965847	3					
ANR	10965974	UnaryOperationExpression	& other_subr		10965847	0					
ANR	10965975	UnaryOperator	&		10965847	0					
ANR	10965976	Identifier	other_subr		10965847	1					
ANR	10965977	Argument	4		10965847	4					
ANR	10965978	PrimaryExpression	4		10965847	0					
ANR	10965979	ExpressionStatement	op = osp	410:8:15434:15442	10965847	5	True				
ANR	10965980	AssignmentExpression	op = osp		10965847	0		=			
ANR	10965981	Identifier	op		10965847	0					
ANR	10965982	Identifier	osp		10965847	1					
ANR	10965983	SwitchStatement	switch ( code )		10965847	6					
ANR	10965984	Condition	code	411:16:15494:15497	10965847	0	True				
ANR	10965985	Identifier	code		10965847	0					
ANR	10965986	CompoundStatement		35:22:1686:1686	10965847	1					
ANR	10965987	Label	default :	412:12:15514:15521	10965847	0	True				
ANR	10965988	Identifier	default		10965847	0					
ANR	10965989	ReturnStatement	return ( ( code < 0 ? code : gs_note_error ( gs_error_invalidfont ) ) ) ;	413:16:15570:15659	10965847	1	True				
ANR	10965990	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_invalidfont )		10965847	0					
ANR	10965991	Condition	code < 0		10965847	0					
ANR	10965992	RelationalExpression	code < 0		10965847	0		<			
ANR	10965993	Identifier	code		10965847	0					
ANR	10965994	PrimaryExpression	0		10965847	1					
ANR	10965995	Identifier	code		10965847	1					
ANR	10965996	CallExpression	gs_note_error ( gs_error_invalidfont )		10965847	2					
ANR	10965997	Callee	gs_note_error		10965847	0					
ANR	10965998	Identifier	gs_note_error		10965847	0					
ANR	10965999	ArgumentList	gs_error_invalidfont		10965847	1					
ANR	10966000	Argument	gs_error_invalidfont		10965847	0					
ANR	10966001	Identifier	gs_error_invalidfont		10965847	0					
ANR	10966002	Label	case type1_result_callothersubr :	415:12:15673:15704	10965847	2	True				
ANR	10966003	Identifier	type1_result_callothersubr		10965847	0					
ANR	10966004	ReturnStatement	"return type1_call_OtherSubr ( i_ctx_p , pcxs , bbox_getsbw_continue , & other_subr ) ;"	416:16:15746:15911	10965847	3	True				
ANR	10966005	CallExpression	"type1_call_OtherSubr ( i_ctx_p , pcxs , bbox_getsbw_continue , & other_subr )"		10965847	0					
ANR	10966006	Callee	type1_call_OtherSubr		10965847	0					
ANR	10966007	Identifier	type1_call_OtherSubr		10965847	0					
ANR	10966008	ArgumentList	i_ctx_p		10965847	1					
ANR	10966009	Argument	i_ctx_p		10965847	0					
ANR	10966010	Identifier	i_ctx_p		10965847	0					
ANR	10966011	Argument	pcxs		10965847	1					
ANR	10966012	Identifier	pcxs		10965847	0					
ANR	10966013	Argument	bbox_getsbw_continue		10965847	2					
ANR	10966014	Identifier	bbox_getsbw_continue		10965847	0					
ANR	10966015	Argument	& other_subr		10965847	3					
ANR	10966016	UnaryOperationExpression	& other_subr		10965847	0					
ANR	10966017	UnaryOperator	&		10965847	0					
ANR	10966018	Identifier	other_subr		10965847	1					
ANR	10966019	Label	case type1_result_sbw :	419:12:15925:15946	10965847	4	True				
ANR	10966020	Identifier	type1_result_sbw		10965847	0					
ANR	10966021	BreakStatement	break ;	420:16:15983:15988	10965847	5	True				
ANR	10966022	ExpressionStatement	"type1_cis_get_metrics ( pcis , pcxs -> sbw )"	422:8:16008:16046	10965847	7	True				
ANR	10966023	CallExpression	"type1_cis_get_metrics ( pcis , pcxs -> sbw )"		10965847	0					
ANR	10966024	Callee	type1_cis_get_metrics		10965847	0					
ANR	10966025	Identifier	type1_cis_get_metrics		10965847	0					
ANR	10966026	ArgumentList	pcis		10965847	1					
ANR	10966027	Argument	pcis		10965847	0					
ANR	10966028	Identifier	pcis		10965847	0					
ANR	10966029	Argument	pcxs -> sbw		10965847	1					
ANR	10966030	PtrMemberAccess	pcxs -> sbw		10965847	0					
ANR	10966031	Identifier	pcxs		10965847	0					
ANR	10966032	Identifier	sbw		10965847	1					
ANR	10966033	ReturnStatement	"return zchar_set_cache ( i_ctx_p , pbfont , & cnref , NULL , pcxs -> sbw + 2 , & pcxs -> char_bbox , cont , exec_cont , NULL ) ;"	423:8:16056:16258	10965847	8	True				
ANR	10966034	CallExpression	"zchar_set_cache ( i_ctx_p , pbfont , & cnref , NULL , pcxs -> sbw + 2 , & pcxs -> char_bbox , cont , exec_cont , NULL )"		10965847	0					
ANR	10966035	Callee	zchar_set_cache		10965847	0					
ANR	10966036	Identifier	zchar_set_cache		10965847	0					
ANR	10966037	ArgumentList	i_ctx_p		10965847	1					
ANR	10966038	Argument	i_ctx_p		10965847	0					
ANR	10966039	Identifier	i_ctx_p		10965847	0					
ANR	10966040	Argument	pbfont		10965847	1					
ANR	10966041	Identifier	pbfont		10965847	0					
ANR	10966042	Argument	& cnref		10965847	2					
ANR	10966043	UnaryOperationExpression	& cnref		10965847	0					
ANR	10966044	UnaryOperator	&		10965847	0					
ANR	10966045	Identifier	cnref		10965847	1					
ANR	10966046	Argument	NULL		10965847	3					
ANR	10966047	Identifier	NULL		10965847	0					
ANR	10966048	Argument	pcxs -> sbw + 2		10965847	4					
ANR	10966049	AdditiveExpression	pcxs -> sbw + 2		10965847	0		+			
ANR	10966050	PtrMemberAccess	pcxs -> sbw		10965847	0					
ANR	10966051	Identifier	pcxs		10965847	0					
ANR	10966052	Identifier	sbw		10965847	1					
ANR	10966053	PrimaryExpression	2		10965847	1					
ANR	10966054	Argument	& pcxs -> char_bbox		10965847	5					
ANR	10966055	UnaryOperationExpression	& pcxs -> char_bbox		10965847	0					
ANR	10966056	UnaryOperator	&		10965847	0					
ANR	10966057	PtrMemberAccess	pcxs -> char_bbox		10965847	1					
ANR	10966058	Identifier	pcxs		10965847	0					
ANR	10966059	Identifier	char_bbox		10965847	1					
ANR	10966060	Argument	cont		10965847	6					
ANR	10966061	Identifier	cont		10965847	0					
ANR	10966062	Argument	exec_cont		10965847	7					
ANR	10966063	Identifier	exec_cont		10965847	0					
ANR	10966064	Argument	NULL		10965847	8					
ANR	10966065	Identifier	NULL		10965847	0					
ANR	10966066	ElseStatement	else		10965847	0					
ANR	10966067	CompoundStatement		51:11:2457:2457	10965847	0					
ANR	10966068	ReturnStatement	"return zchar_set_cache ( i_ctx_p , pbfont , op - 1 , ( pcxs -> present == metricsSideBearingAndWidth && ! pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL ) , pcxs -> sbw + 2 , & pcxs -> char_bbox , cont , exec_cont , ( pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL ) ) ;"	430:8:16374:16844	10965847	0	True				
ANR	10966069	CallExpression	"zchar_set_cache ( i_ctx_p , pbfont , op - 1 , ( pcxs -> present == metricsSideBearingAndWidth && ! pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL ) , pcxs -> sbw + 2 , & pcxs -> char_bbox , cont , exec_cont , ( pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL ) )"		10965847	0					
ANR	10966070	Callee	zchar_set_cache		10965847	0					
ANR	10966071	Identifier	zchar_set_cache		10965847	0					
ANR	10966072	ArgumentList	i_ctx_p		10965847	1					
ANR	10966073	Argument	i_ctx_p		10965847	0					
ANR	10966074	Identifier	i_ctx_p		10965847	0					
ANR	10966075	Argument	pbfont		10965847	1					
ANR	10966076	Identifier	pbfont		10965847	0					
ANR	10966077	Argument	op - 1		10965847	2					
ANR	10966078	AdditiveExpression	op - 1		10965847	0		-			
ANR	10966079	Identifier	op		10965847	0					
ANR	10966080	PrimaryExpression	1		10965847	1					
ANR	10966081	Argument	pcxs -> present == metricsSideBearingAndWidth && ! pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL		10965847	3					
ANR	10966082	ConditionalExpression	pcxs -> present == metricsSideBearingAndWidth && ! pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL		10965847	0					
ANR	10966083	Condition	pcxs -> present == metricsSideBearingAndWidth && ! pcxs -> use_FontBBox_as_Metrics2		10965847	0					
ANR	10966084	AndExpression	pcxs -> present == metricsSideBearingAndWidth && ! pcxs -> use_FontBBox_as_Metrics2		10965847	0		&&			
ANR	10966085	EqualityExpression	pcxs -> present == metricsSideBearingAndWidth		10965847	0		==			
ANR	10966086	PtrMemberAccess	pcxs -> present		10965847	0					
ANR	10966087	Identifier	pcxs		10965847	0					
ANR	10966088	Identifier	present		10965847	1					
ANR	10966089	Identifier	metricsSideBearingAndWidth		10965847	1					
ANR	10966090	UnaryOperationExpression	! pcxs -> use_FontBBox_as_Metrics2		10965847	1					
ANR	10966091	UnaryOperator	!		10965847	0					
ANR	10966092	PtrMemberAccess	pcxs -> use_FontBBox_as_Metrics2		10965847	1					
ANR	10966093	Identifier	pcxs		10965847	0					
ANR	10966094	Identifier	use_FontBBox_as_Metrics2		10965847	1					
ANR	10966095	PtrMemberAccess	pcxs -> sbw		10965847	1					
ANR	10966096	Identifier	pcxs		10965847	0					
ANR	10966097	Identifier	sbw		10965847	1					
ANR	10966098	Identifier	NULL		10965847	2					
ANR	10966099	Argument	pcxs -> sbw + 2		10965847	4					
ANR	10966100	AdditiveExpression	pcxs -> sbw + 2		10965847	0		+			
ANR	10966101	PtrMemberAccess	pcxs -> sbw		10965847	0					
ANR	10966102	Identifier	pcxs		10965847	0					
ANR	10966103	Identifier	sbw		10965847	1					
ANR	10966104	PrimaryExpression	2		10965847	1					
ANR	10966105	Argument	& pcxs -> char_bbox		10965847	5					
ANR	10966106	UnaryOperationExpression	& pcxs -> char_bbox		10965847	0					
ANR	10966107	UnaryOperator	&		10965847	0					
ANR	10966108	PtrMemberAccess	pcxs -> char_bbox		10965847	1					
ANR	10966109	Identifier	pcxs		10965847	0					
ANR	10966110	Identifier	char_bbox		10965847	1					
ANR	10966111	Argument	cont		10965847	6					
ANR	10966112	Identifier	cont		10965847	0					
ANR	10966113	Argument	exec_cont		10965847	7					
ANR	10966114	Identifier	exec_cont		10965847	0					
ANR	10966115	Argument	pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL		10965847	8					
ANR	10966116	ConditionalExpression	pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL		10965847	0					
ANR	10966117	Condition	pcxs -> use_FontBBox_as_Metrics2		10965847	0					
ANR	10966118	PtrMemberAccess	pcxs -> use_FontBBox_as_Metrics2		10965847	0					
ANR	10966119	Identifier	pcxs		10965847	0					
ANR	10966120	Identifier	use_FontBBox_as_Metrics2		10965847	1					
ANR	10966121	PtrMemberAccess	pcxs -> sbw		10965847	1					
ANR	10966122	Identifier	pcxs		10965847	0					
ANR	10966123	Identifier	sbw		10965847	1					
ANR	10966124	Identifier	NULL		10965847	2					
ANR	10966125	ReturnType	static int		10965847	1					
ANR	10966126	Identifier	type1exec_bbox		10965847	2					
ANR	10966127	ParameterList	"i_ctx_t * i_ctx_p , gs_text_enum_t * penum , gs_type1exec_state * pcxs , gs_font * pfont , op_proc_t * exec_cont"		10965847	3					
ANR	10966128	Parameter	i_ctx_t * i_ctx_p	375:15:13691:13706	10965847	0	True				
ANR	10966129	ParameterType	i_ctx_t *		10965847	0					
ANR	10966130	Identifier	i_ctx_p		10965847	1					
ANR	10966131	Parameter	gs_text_enum_t * penum	375:33:13709:13729	10965847	1	True				
ANR	10966132	ParameterType	gs_text_enum_t *		10965847	0					
ANR	10966133	Identifier	penum		10965847	1					
ANR	10966134	Parameter	gs_type1exec_state * pcxs	375:56:13732:13756	10965847	2	True				
ANR	10966135	ParameterType	gs_type1exec_state *		10965847	0					
ANR	10966136	Identifier	pcxs		10965847	1					
ANR	10966137	Parameter	gs_font * pfont	376:15:13774:13788	10965847	3	True				
ANR	10966138	ParameterType	gs_font *		10965847	0					
ANR	10966139	Identifier	pfont		10965847	1					
ANR	10966140	Parameter	op_proc_t * exec_cont	376:32:13791:13810	10965847	4	True				
ANR	10966141	ParameterType	op_proc_t *		10965847	0					
ANR	10966142	Identifier	exec_cont		10965847	1					
ANR	10966143	CFGEntryNode	ENTRY		10965847		True				
ANR	10966144	CFGExitNode	EXIT		10965847		True				
ANR	10966145	Symbol	* penum		10965847						
ANR	10966146	Symbol	code		10965847						
ANR	10966147	Symbol	pcxs -> present		10965847						
ANR	10966148	Symbol	* pcxs		10965847						
ANR	10966149	Symbol	pcxs -> use_FontBBox_as_Metrics2		10965847						
ANR	10966150	Symbol	osp		10965847						
ANR	10966151	Symbol	pbfont -> PaintType		10965847						
ANR	10966152	Symbol	type1_continue_dispatch		10965847						
ANR	10966153	Symbol	zchar_get_CDevProc		10965847						
ANR	10966154	Symbol	bbox_getsbw_continue		10965847						
ANR	10966155	Symbol	penum -> orig_font -> WMode		10965847						
ANR	10966156	Symbol	penum -> orig_font		10965847						
ANR	10966157	Symbol	pcdevproc		10965847						
ANR	10966158	Symbol	pcxs		10965847						
ANR	10966159	Symbol	exec_cont		10965847						
ANR	10966160	Symbol	* pbfont		10965847						
ANR	10966161	Symbol	cont		10965847						
ANR	10966162	Symbol	gs_error_invalidfont		10965847						
ANR	10966163	Symbol	* * penum		10965847						
ANR	10966164	Symbol	& cnref		10965847						
ANR	10966165	Symbol	op		10965847						
ANR	10966166	Symbol	metricsNone		10965847						
ANR	10966167	Symbol	other_subr		10965847						
ANR	10966168	Symbol	metricsSideBearingAndWidth		10965847						
ANR	10966169	Symbol	& other_subr		10965847						
ANR	10966170	Symbol	NULL		10965847						
ANR	10966171	Symbol	pfont		10965847						
ANR	10966172	Symbol	penum		10965847						
ANR	10966173	Symbol	pcis		10965847						
ANR	10966174	Symbol	zchar_set_cache		10965847						
ANR	10966175	Symbol	* penum -> orig_font		10965847						
ANR	10966176	Symbol	cnref		10965847						
ANR	10966177	Symbol	pcxs -> sbw		10965847						
ANR	10966178	Symbol	bbox_finish_fill		10965847						
ANR	10966179	Symbol	pbfont		10965847						
ANR	10966180	Symbol	gs_note_error		10965847						
ANR	10966181	Symbol	type1_call_OtherSubr		10965847						
ANR	10966182	Symbol	& pcxs -> cis		10965847						
ANR	10966183	Symbol	i_ctx_p		10965847						
ANR	10966184	Symbol	bbox_finish_stroke		10965847						
ANR	10966185	Symbol	& pcxs -> char_bbox		10965847						
ANR	10966186	Symbol	penum -> orig_font -> PaintType		10965847						
ANR	10966187	Symbol	& pcdevproc		10965847						
ANR	10966188	Function	bbox_getsbw_continue	442:0:16919:18409							
ANR	10966189	FunctionDef	bbox_getsbw_continue (i_ctx_t * i_ctx_p)		10966188	0					
ANR	10966190	CompoundStatement		444:0:16969:18409	10966188	0					
ANR	10966191	IdentifierDeclStatement	os_ptr op = osp ;	445:4:16975:16990	10966188	0	True				
ANR	10966192	IdentifierDecl	op = osp		10966188	0					
ANR	10966193	IdentifierDeclType	os_ptr		10966188	0					
ANR	10966194	Identifier	op		10966188	1					
ANR	10966195	AssignmentExpression	op = osp		10966188	2		=			
ANR	10966196	Identifier	osp		10966188	0					
ANR	10966197	Identifier	osp		10966188	1					
ANR	10966198	IdentifierDeclStatement	ref other_subr ;	446:4:16996:17010	10966188	1	True				
ANR	10966199	IdentifierDecl	other_subr		10966188	0					
ANR	10966200	IdentifierDeclType	ref		10966188	0					
ANR	10966201	Identifier	other_subr		10966188	1					
ANR	10966202	IdentifierDeclStatement	"gs_type1exec_state * pcxs = r_ptr ( esp , gs_type1exec_state ) ;"	447:4:17016:17073	10966188	2	True				
ANR	10966203	IdentifierDecl	"* pcxs = r_ptr ( esp , gs_type1exec_state )"		10966188	0					
ANR	10966204	IdentifierDeclType	gs_type1exec_state *		10966188	0					
ANR	10966205	Identifier	pcxs		10966188	1					
ANR	10966206	AssignmentExpression	"* pcxs = r_ptr ( esp , gs_type1exec_state )"		10966188	2		=			
ANR	10966207	Identifier	pcxs		10966188	0					
ANR	10966208	CallExpression	"r_ptr ( esp , gs_type1exec_state )"		10966188	1					
ANR	10966209	Callee	r_ptr		10966188	0					
ANR	10966210	Identifier	r_ptr		10966188	0					
ANR	10966211	ArgumentList	esp		10966188	1					
ANR	10966212	Argument	esp		10966188	0					
ANR	10966213	Identifier	esp		10966188	0					
ANR	10966214	Argument	gs_type1exec_state		10966188	1					
ANR	10966215	Identifier	gs_type1exec_state		10966188	0					
ANR	10966216	Statement	gs_type1_state	448:4:17079:17092	10966188	3	True				
ANR	10966217	Statement	*	448:19:17094:17094	10966188	4	True				
ANR	10966218	Statement	const	448:20:17095:17099	10966188	5	True				
ANR	10966219	ExpressionStatement	pcis = & pcxs -> cis	448:26:17101:17118	10966188	6	True				
ANR	10966220	AssignmentExpression	pcis = & pcxs -> cis		10966188	0		=			
ANR	10966221	Identifier	pcis		10966188	0					
ANR	10966222	UnaryOperationExpression	& pcxs -> cis		10966188	1					
ANR	10966223	UnaryOperator	&		10966188	0					
ANR	10966224	PtrMemberAccess	pcxs -> cis		10966188	1					
ANR	10966225	Identifier	pcxs		10966188	0					
ANR	10966226	Identifier	cis		10966188	1					
ANR	10966227	IdentifierDeclStatement	int code ;	449:4:17124:17132	10966188	7	True				
ANR	10966228	IdentifierDecl	code		10966188	0					
ANR	10966229	IdentifierDeclType	int		10966188	0					
ANR	10966230	Identifier	code		10966188	1					
ANR	10966231	ExpressionStatement	"code = type1_continue_dispatch ( i_ctx_p , pcxs , NULL , & other_subr , 4 )"	451:4:17139:17206	10966188	8	True				
ANR	10966232	AssignmentExpression	"code = type1_continue_dispatch ( i_ctx_p , pcxs , NULL , & other_subr , 4 )"		10966188	0		=			
ANR	10966233	Identifier	code		10966188	0					
ANR	10966234	CallExpression	"type1_continue_dispatch ( i_ctx_p , pcxs , NULL , & other_subr , 4 )"		10966188	1					
ANR	10966235	Callee	type1_continue_dispatch		10966188	0					
ANR	10966236	Identifier	type1_continue_dispatch		10966188	0					
ANR	10966237	ArgumentList	i_ctx_p		10966188	1					
ANR	10966238	Argument	i_ctx_p		10966188	0					
ANR	10966239	Identifier	i_ctx_p		10966188	0					
ANR	10966240	Argument	pcxs		10966188	1					
ANR	10966241	Identifier	pcxs		10966188	0					
ANR	10966242	Argument	NULL		10966188	2					
ANR	10966243	Identifier	NULL		10966188	0					
ANR	10966244	Argument	& other_subr		10966188	3					
ANR	10966245	UnaryOperationExpression	& other_subr		10966188	0					
ANR	10966246	UnaryOperator	&		10966188	0					
ANR	10966247	Identifier	other_subr		10966188	1					
ANR	10966248	Argument	4		10966188	4					
ANR	10966249	PrimaryExpression	4		10966188	0					
ANR	10966250	ExpressionStatement	op = osp	452:4:17212:17220	10966188	9	True				
ANR	10966251	AssignmentExpression	op = osp		10966188	0		=			
ANR	10966252	Identifier	op		10966188	0					
ANR	10966253	Identifier	osp		10966188	1					
ANR	10966254	SwitchStatement	switch ( code )		10966188	10					
ANR	10966255	Condition	code	453:12:17278:17281	10966188	0	True				
ANR	10966256	Identifier	code		10966188	0					
ANR	10966257	CompoundStatement		10:18:314:314	10966188	1					
ANR	10966258	Label	default :	454:8:17294:17301	10966188	0	True				
ANR	10966259	Identifier	default		10966188	0					
ANR	10966260	ExpressionStatement	op_type1_free ( i_ctx_p )	455:12:17346:17368	10966188	1	True				
ANR	10966261	CallExpression	op_type1_free ( i_ctx_p )		10966188	0					
ANR	10966262	Callee	op_type1_free		10966188	0					
ANR	10966263	Identifier	op_type1_free		10966188	0					
ANR	10966264	ArgumentList	i_ctx_p		10966188	1					
ANR	10966265	Argument	i_ctx_p		10966188	0					
ANR	10966266	Identifier	i_ctx_p		10966188	0					
ANR	10966267	ReturnStatement	return ( ( code < 0 ? code : gs_note_error ( gs_error_invalidfont ) ) ) ;	456:12:17382:17446	10966188	2	True				
ANR	10966268	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_invalidfont )		10966188	0					
ANR	10966269	Condition	code < 0		10966188	0					
ANR	10966270	RelationalExpression	code < 0		10966188	0		<			
ANR	10966271	Identifier	code		10966188	0					
ANR	10966272	PrimaryExpression	0		10966188	1					
ANR	10966273	Identifier	code		10966188	1					
ANR	10966274	CallExpression	gs_note_error ( gs_error_invalidfont )		10966188	2					
ANR	10966275	Callee	gs_note_error		10966188	0					
ANR	10966276	Identifier	gs_note_error		10966188	0					
ANR	10966277	ArgumentList	gs_error_invalidfont		10966188	1					
ANR	10966278	Argument	gs_error_invalidfont		10966188	0					
ANR	10966279	Identifier	gs_error_invalidfont		10966188	0					
ANR	10966280	Label	case type1_result_callothersubr :	457:8:17456:17487	10966188	3	True				
ANR	10966281	Identifier	type1_result_callothersubr		10966188	0					
ANR	10966282	ReturnStatement	"return type1_push_OtherSubr ( i_ctx_p , pcxs , bbox_getsbw_continue , & other_subr ) ;"	458:12:17525:17642	10966188	4	True				
ANR	10966283	CallExpression	"type1_push_OtherSubr ( i_ctx_p , pcxs , bbox_getsbw_continue , & other_subr )"		10966188	0					
ANR	10966284	Callee	type1_push_OtherSubr		10966188	0					
ANR	10966285	Identifier	type1_push_OtherSubr		10966188	0					
ANR	10966286	ArgumentList	i_ctx_p		10966188	1					
ANR	10966287	Argument	i_ctx_p		10966188	0					
ANR	10966288	Identifier	i_ctx_p		10966188	0					
ANR	10966289	Argument	pcxs		10966188	1					
ANR	10966290	Identifier	pcxs		10966188	0					
ANR	10966291	Argument	bbox_getsbw_continue		10966188	2					
ANR	10966292	Identifier	bbox_getsbw_continue		10966188	0					
ANR	10966293	Argument	& other_subr		10966188	3					
ANR	10966294	UnaryOperationExpression	& other_subr		10966188	0					
ANR	10966295	UnaryOperator	&		10966188	0					
ANR	10966296	Identifier	other_subr		10966188	1					
ANR	10966297	Label	case type1_result_sbw :	460:8:17652:17673	10966188	5	True				
ANR	10966298	Identifier	type1_result_sbw		10966188	0					
ANR	10966299	CompoundStatement		22:12:889:985	10966188	6					
ANR	10966300	IdentifierDeclStatement	double sbw [ 4 ] ;	461:12:17708:17721	10966188	0	True				
ANR	10966301	IdentifierDecl	sbw [ 4 ]		10966188	0					
ANR	10966302	IdentifierDeclType	double [ 4 ]		10966188	0					
ANR	10966303	Identifier	sbw		10966188	1					
ANR	10966304	PrimaryExpression	4		10966188	2					
ANR	10966305	Statement	const	462:12:17735:17739	10966188	1	True				
ANR	10966306	Statement	gs_font_base	462:18:17741:17752	10966188	2	True				
ANR	10966307	Statement	*	462:31:17754:17754	10966188	3	True				
ANR	10966308	Statement	const	462:32:17755:17759	10966188	4	True				
ANR	10966309	ExpressionStatement	pbfont = ( const gs_font_base * ) pcis -> pfont	462:38:17761:17819	10966188	5	True				
ANR	10966310	AssignmentExpression	pbfont = ( const gs_font_base * ) pcis -> pfont		10966188	0		=			
ANR	10966311	Identifier	pbfont		10966188	0					
ANR	10966312	CastExpression	( const gs_font_base * ) pcis -> pfont		10966188	1					
ANR	10966313	CastTarget	const gs_font_base *		10966188	0					
ANR	10966314	PtrMemberAccess	pcis -> pfont		10966188	1					
ANR	10966315	Identifier	pcis		10966188	0					
ANR	10966316	Identifier	pfont		10966188	1					
ANR	10966317	IdentifierDeclStatement	gs_rect bbox ;	464:12:17833:17845	10966188	6	True				
ANR	10966318	IdentifierDecl	bbox		10966188	0					
ANR	10966319	IdentifierDeclType	gs_rect		10966188	0					
ANR	10966320	Identifier	bbox		10966188	1					
ANR	10966321	IdentifierDeclStatement	"op_proc_t cont = ( pbfont -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke ) , exec_cont = 0 ;"	465:12:17859:17955	10966188	7	True				
ANR	10966322	IdentifierDecl	cont = ( pbfont -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke )		10966188	0					
ANR	10966323	IdentifierDeclType	op_proc_t		10966188	0					
ANR	10966324	Identifier	cont		10966188	1					
ANR	10966325	AssignmentExpression	cont = ( pbfont -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke )		10966188	2		=			
ANR	10966326	Identifier	cont		10966188	0					
ANR	10966327	ConditionalExpression	pbfont -> PaintType == 0 ? bbox_finish_fill : bbox_finish_stroke		10966188	1					
ANR	10966328	Condition	pbfont -> PaintType == 0		10966188	0					
ANR	10966329	EqualityExpression	pbfont -> PaintType == 0		10966188	0		==			
ANR	10966330	PtrMemberAccess	pbfont -> PaintType		10966188	0					
ANR	10966331	Identifier	pbfont		10966188	0					
ANR	10966332	Identifier	PaintType		10966188	1					
ANR	10966333	PrimaryExpression	0		10966188	1					
ANR	10966334	Identifier	bbox_finish_fill		10966188	1					
ANR	10966335	Identifier	bbox_finish_stroke		10966188	2					
ANR	10966336	IdentifierDecl	exec_cont = 0		10966188	1					
ANR	10966337	IdentifierDeclType	op_proc_t		10966188	0					
ANR	10966338	Identifier	exec_cont		10966188	1					
ANR	10966339	AssignmentExpression	exec_cont = 0		10966188	2		=			
ANR	10966340	Identifier	exec_cont		10966188	0					
ANR	10966341	PrimaryExpression	0		10966188	1					
ANR	10966342	ExpressionStatement	"type1_cis_get_metrics ( pcis , sbw )"	468:12:18030:18062	10966188	8	True				
ANR	10966343	CallExpression	"type1_cis_get_metrics ( pcis , sbw )"		10966188	0					
ANR	10966344	Callee	type1_cis_get_metrics		10966188	0					
ANR	10966345	Identifier	type1_cis_get_metrics		10966188	0					
ANR	10966346	ArgumentList	pcis		10966188	1					
ANR	10966347	Argument	pcis		10966188	0					
ANR	10966348	Identifier	pcis		10966188	0					
ANR	10966349	Argument	sbw		10966188	1					
ANR	10966350	Identifier	sbw		10966188	0					
ANR	10966351	ExpressionStatement	bbox = pcxs -> char_bbox	469:12:18076:18098	10966188	9	True				
ANR	10966352	AssignmentExpression	bbox = pcxs -> char_bbox		10966188	0		=			
ANR	10966353	Identifier	bbox		10966188	0					
ANR	10966354	PtrMemberAccess	pcxs -> char_bbox		10966188	1					
ANR	10966355	Identifier	pcxs		10966188	0					
ANR	10966356	Identifier	char_bbox		10966188	1					
ANR	10966357	ExpressionStatement	op_type1_free ( i_ctx_p )	470:12:18112:18134	10966188	10	True				
ANR	10966358	CallExpression	op_type1_free ( i_ctx_p )		10966188	0					
ANR	10966359	Callee	op_type1_free		10966188	0					
ANR	10966360	Identifier	op_type1_free		10966188	0					
ANR	10966361	ArgumentList	i_ctx_p		10966188	1					
ANR	10966362	Argument	i_ctx_p		10966188	0					
ANR	10966363	Identifier	i_ctx_p		10966188	0					
ANR	10966364	ExpressionStatement	"code = zchar_set_cache ( i_ctx_p , pbfont , op - 1 , sbw , sbw + 2 , & bbox , cont , & exec_cont , NULL )"	471:12:18148:18275	10966188	11	True				
ANR	10966365	AssignmentExpression	"code = zchar_set_cache ( i_ctx_p , pbfont , op - 1 , sbw , sbw + 2 , & bbox , cont , & exec_cont , NULL )"		10966188	0		=			
ANR	10966366	Identifier	code		10966188	0					
ANR	10966367	CallExpression	"zchar_set_cache ( i_ctx_p , pbfont , op - 1 , sbw , sbw + 2 , & bbox , cont , & exec_cont , NULL )"		10966188	1					
ANR	10966368	Callee	zchar_set_cache		10966188	0					
ANR	10966369	Identifier	zchar_set_cache		10966188	0					
ANR	10966370	ArgumentList	i_ctx_p		10966188	1					
ANR	10966371	Argument	i_ctx_p		10966188	0					
ANR	10966372	Identifier	i_ctx_p		10966188	0					
ANR	10966373	Argument	pbfont		10966188	1					
ANR	10966374	Identifier	pbfont		10966188	0					
ANR	10966375	Argument	op - 1		10966188	2					
ANR	10966376	AdditiveExpression	op - 1		10966188	0		-			
ANR	10966377	Identifier	op		10966188	0					
ANR	10966378	PrimaryExpression	1		10966188	1					
ANR	10966379	Argument	sbw		10966188	3					
ANR	10966380	Identifier	sbw		10966188	0					
ANR	10966381	Argument	sbw + 2		10966188	4					
ANR	10966382	AdditiveExpression	sbw + 2		10966188	0		+			
ANR	10966383	Identifier	sbw		10966188	0					
ANR	10966384	PrimaryExpression	2		10966188	1					
ANR	10966385	Argument	& bbox		10966188	5					
ANR	10966386	UnaryOperationExpression	& bbox		10966188	0					
ANR	10966387	UnaryOperator	&		10966188	0					
ANR	10966388	Identifier	bbox		10966188	1					
ANR	10966389	Argument	cont		10966188	6					
ANR	10966390	Identifier	cont		10966188	0					
ANR	10966391	Argument	& exec_cont		10966188	7					
ANR	10966392	UnaryOperationExpression	& exec_cont		10966188	0					
ANR	10966393	UnaryOperator	&		10966188	0					
ANR	10966394	Identifier	exec_cont		10966188	1					
ANR	10966395	Argument	NULL		10966188	8					
ANR	10966396	Identifier	NULL		10966188	0					
ANR	10966397	IfStatement	if ( code >= 0 && exec_cont != 0 )		10966188	12					
ANR	10966398	Condition	code >= 0 && exec_cont != 0	473:16:18293:18319	10966188	0	True				
ANR	10966399	AndExpression	code >= 0 && exec_cont != 0		10966188	0		&&			
ANR	10966400	RelationalExpression	code >= 0		10966188	0		>=			
ANR	10966401	Identifier	code		10966188	0					
ANR	10966402	PrimaryExpression	0		10966188	1					
ANR	10966403	EqualityExpression	exec_cont != 0		10966188	1		!=			
ANR	10966404	Identifier	exec_cont		10966188	0					
ANR	10966405	PrimaryExpression	0		10966188	1					
ANR	10966406	ExpressionStatement	code = ( * exec_cont ) ( i_ctx_p )	474:16:18338:18366	10966188	1	True				
ANR	10966407	AssignmentExpression	code = ( * exec_cont ) ( i_ctx_p )		10966188	0		=			
ANR	10966408	Identifier	code		10966188	0					
ANR	10966409	CallExpression	( * exec_cont ) ( i_ctx_p )		10966188	1					
ANR	10966410	Callee	* exec_cont		10966188	0					
ANR	10966411	UnaryOperationExpression	* exec_cont		10966188	0					
ANR	10966412	UnaryOperator	*		10966188	0					
ANR	10966413	Identifier	exec_cont		10966188	1					
ANR	10966414	ArgumentList	i_ctx_p		10966188	1					
ANR	10966415	Argument	i_ctx_p		10966188	0					
ANR	10966416	Identifier	i_ctx_p		10966188	0					
ANR	10966417	ReturnStatement	return code ;	475:12:18380:18391	10966188	13	True				
ANR	10966418	Identifier	code		10966188	0					
ANR	10966419	ReturnType	static int		10966188	1					
ANR	10966420	Identifier	bbox_getsbw_continue		10966188	2					
ANR	10966421	ParameterList	i_ctx_t * i_ctx_p		10966188	3					
ANR	10966422	Parameter	i_ctx_t * i_ctx_p	443:21:16951:16966	10966188	0	True				
ANR	10966423	ParameterType	i_ctx_t *		10966188	0					
ANR	10966424	Identifier	i_ctx_p		10966188	1					
ANR	10966425	CFGEntryNode	ENTRY		10966188		True				
ANR	10966426	CFGExitNode	EXIT		10966188		True				
ANR	10966427	Symbol	esp		10966188						
ANR	10966428	Symbol	code		10966188						
ANR	10966429	Symbol	* exec_cont		10966188						
ANR	10966430	Symbol	type1_push_OtherSubr		10966188						
ANR	10966431	Symbol	* pcxs		10966188						
ANR	10966432	Symbol	bbox		10966188						
ANR	10966433	Symbol	sbw		10966188						
ANR	10966434	Symbol	osp		10966188						
ANR	10966435	Symbol	pbfont -> PaintType		10966188						
ANR	10966436	Symbol	type1_continue_dispatch		10966188						
ANR	10966437	Symbol	r_ptr		10966188						
ANR	10966438	Symbol	bbox_getsbw_continue		10966188						
ANR	10966439	Symbol	pcis -> pfont		10966188						
ANR	10966440	Symbol	pcxs		10966188						
ANR	10966441	Symbol	* pbfont		10966188						
ANR	10966442	Symbol	exec_cont		10966188						
ANR	10966443	Symbol	gs_error_invalidfont		10966188						
ANR	10966444	Symbol	cont		10966188						
ANR	10966445	Symbol	op		10966188						
ANR	10966446	Symbol	gs_type1exec_state		10966188						
ANR	10966447	Symbol	other_subr		10966188						
ANR	10966448	Symbol	& other_subr		10966188						
ANR	10966449	Symbol	NULL		10966188						
ANR	10966450	Symbol	pcis		10966188						
ANR	10966451	Symbol	& bbox		10966188						
ANR	10966452	Symbol	zchar_set_cache		10966188						
ANR	10966453	Symbol	* pcis		10966188						
ANR	10966454	Symbol	bbox_finish_fill		10966188						
ANR	10966455	Symbol	gs_note_error		10966188						
ANR	10966456	Symbol	pbfont		10966188						
ANR	10966457	Symbol	& pcxs -> cis		10966188						
ANR	10966458	Symbol	pcxs -> char_bbox		10966188						
ANR	10966459	Symbol	i_ctx_p		10966188						
ANR	10966460	Symbol	bbox_finish_stroke		10966188						
ANR	10966461	Symbol	& exec_cont		10966188						
ANR	10966462	DeclStmt									
ANR	10966463	Decl							int	"int ( i_ctx_t * i_ctx_p , op_proc_t cont , op_proc_t * exec_cont )"	bbox_finish
ANR	10966464	Function	bbox_finish_fill	483:0:18638:18875							
ANR	10966465	FunctionDef	bbox_finish_fill (i_ctx_t * i_ctx_p)		10966464	0					
ANR	10966466	CompoundStatement		485:0:18684:18875	10966464	0					
ANR	10966467	IdentifierDeclStatement	op_proc_t exec_cont = 0 ;	486:4:18690:18713	10966464	0	True				
ANR	10966468	IdentifierDecl	exec_cont = 0		10966464	0					
ANR	10966469	IdentifierDeclType	op_proc_t		10966464	0					
ANR	10966470	Identifier	exec_cont		10966464	1					
ANR	10966471	AssignmentExpression	exec_cont = 0		10966464	2		=			
ANR	10966472	Identifier	exec_cont		10966464	0					
ANR	10966473	PrimaryExpression	0		10966464	1					
ANR	10966474	IdentifierDeclStatement	int code ;	487:4:18719:18727	10966464	1	True				
ANR	10966475	IdentifierDecl	code		10966464	0					
ANR	10966476	IdentifierDeclType	int		10966464	0					
ANR	10966477	Identifier	code		10966464	1					
ANR	10966478	ExpressionStatement	"code = bbox_finish ( i_ctx_p , bbox_fill , & exec_cont )"	489:4:18734:18784	10966464	2	True				
ANR	10966479	AssignmentExpression	"code = bbox_finish ( i_ctx_p , bbox_fill , & exec_cont )"		10966464	0		=			
ANR	10966480	Identifier	code		10966464	0					
ANR	10966481	CallExpression	"bbox_finish ( i_ctx_p , bbox_fill , & exec_cont )"		10966464	1					
ANR	10966482	Callee	bbox_finish		10966464	0					
ANR	10966483	Identifier	bbox_finish		10966464	0					
ANR	10966484	ArgumentList	i_ctx_p		10966464	1					
ANR	10966485	Argument	i_ctx_p		10966464	0					
ANR	10966486	Identifier	i_ctx_p		10966464	0					
ANR	10966487	Argument	bbox_fill		10966464	1					
ANR	10966488	Identifier	bbox_fill		10966464	0					
ANR	10966489	Argument	& exec_cont		10966464	2					
ANR	10966490	UnaryOperationExpression	& exec_cont		10966464	0					
ANR	10966491	UnaryOperator	&		10966464	0					
ANR	10966492	Identifier	exec_cont		10966464	1					
ANR	10966493	IfStatement	if ( code >= 0 && exec_cont != 0 )		10966464	3					
ANR	10966494	Condition	code >= 0 && exec_cont != 0	490:8:18794:18820	10966464	0	True				
ANR	10966495	AndExpression	code >= 0 && exec_cont != 0		10966464	0		&&			
ANR	10966496	RelationalExpression	code >= 0		10966464	0		>=			
ANR	10966497	Identifier	code		10966464	0					
ANR	10966498	PrimaryExpression	0		10966464	1					
ANR	10966499	EqualityExpression	exec_cont != 0		10966464	1		!=			
ANR	10966500	Identifier	exec_cont		10966464	0					
ANR	10966501	PrimaryExpression	0		10966464	1					
ANR	10966502	ExpressionStatement	code = exec_cont ( i_ctx_p )	491:8:18831:18856	10966464	1	True				
ANR	10966503	AssignmentExpression	code = exec_cont ( i_ctx_p )		10966464	0		=			
ANR	10966504	Identifier	code		10966464	0					
ANR	10966505	CallExpression	exec_cont ( i_ctx_p )		10966464	1					
ANR	10966506	Callee	exec_cont		10966464	0					
ANR	10966507	Identifier	exec_cont		10966464	0					
ANR	10966508	ArgumentList	i_ctx_p		10966464	1					
ANR	10966509	Argument	i_ctx_p		10966464	0					
ANR	10966510	Identifier	i_ctx_p		10966464	0					
ANR	10966511	ReturnStatement	return code ;	492:4:18862:18873	10966464	4	True				
ANR	10966512	Identifier	code		10966464	0					
ANR	10966513	ReturnType	static int		10966464	1					
ANR	10966514	Identifier	bbox_finish_fill		10966464	2					
ANR	10966515	ParameterList	i_ctx_t * i_ctx_p		10966464	3					
ANR	10966516	Parameter	i_ctx_t * i_ctx_p	484:17:18666:18681	10966464	0	True				
ANR	10966517	ParameterType	i_ctx_t *		10966464	0					
ANR	10966518	Identifier	i_ctx_p		10966464	1					
ANR	10966519	CFGEntryNode	ENTRY		10966464		True				
ANR	10966520	CFGExitNode	EXIT		10966464		True				
ANR	10966521	Symbol	bbox_fill		10966464						
ANR	10966522	Symbol	code		10966464						
ANR	10966523	Symbol	bbox_finish		10966464						
ANR	10966524	Symbol	i_ctx_p		10966464						
ANR	10966525	Symbol	& exec_cont		10966464						
ANR	10966526	Symbol	exec_cont		10966464						
ANR	10966527	Function	bbox_finish_stroke	494:0:18877:19118							
ANR	10966528	FunctionDef	bbox_finish_stroke (i_ctx_t * i_ctx_p)		10966527	0					
ANR	10966529	CompoundStatement		496:0:18925:19118	10966527	0					
ANR	10966530	IdentifierDeclStatement	op_proc_t exec_cont = 0 ;	497:4:18931:18954	10966527	0	True				
ANR	10966531	IdentifierDecl	exec_cont = 0		10966527	0					
ANR	10966532	IdentifierDeclType	op_proc_t		10966527	0					
ANR	10966533	Identifier	exec_cont		10966527	1					
ANR	10966534	AssignmentExpression	exec_cont = 0		10966527	2		=			
ANR	10966535	Identifier	exec_cont		10966527	0					
ANR	10966536	PrimaryExpression	0		10966527	1					
ANR	10966537	IdentifierDeclStatement	int code ;	498:4:18960:18968	10966527	1	True				
ANR	10966538	IdentifierDecl	code		10966527	0					
ANR	10966539	IdentifierDeclType	int		10966527	0					
ANR	10966540	Identifier	code		10966527	1					
ANR	10966541	ExpressionStatement	"code = bbox_finish ( i_ctx_p , bbox_stroke , & exec_cont )"	500:4:18975:19027	10966527	2	True				
ANR	10966542	AssignmentExpression	"code = bbox_finish ( i_ctx_p , bbox_stroke , & exec_cont )"		10966527	0		=			
ANR	10966543	Identifier	code		10966527	0					
ANR	10966544	CallExpression	"bbox_finish ( i_ctx_p , bbox_stroke , & exec_cont )"		10966527	1					
ANR	10966545	Callee	bbox_finish		10966527	0					
ANR	10966546	Identifier	bbox_finish		10966527	0					
ANR	10966547	ArgumentList	i_ctx_p		10966527	1					
ANR	10966548	Argument	i_ctx_p		10966527	0					
ANR	10966549	Identifier	i_ctx_p		10966527	0					
ANR	10966550	Argument	bbox_stroke		10966527	1					
ANR	10966551	Identifier	bbox_stroke		10966527	0					
ANR	10966552	Argument	& exec_cont		10966527	2					
ANR	10966553	UnaryOperationExpression	& exec_cont		10966527	0					
ANR	10966554	UnaryOperator	&		10966527	0					
ANR	10966555	Identifier	exec_cont		10966527	1					
ANR	10966556	IfStatement	if ( code >= 0 && exec_cont != 0 )		10966527	3					
ANR	10966557	Condition	code >= 0 && exec_cont != 0	501:8:19037:19063	10966527	0	True				
ANR	10966558	AndExpression	code >= 0 && exec_cont != 0		10966527	0		&&			
ANR	10966559	RelationalExpression	code >= 0		10966527	0		>=			
ANR	10966560	Identifier	code		10966527	0					
ANR	10966561	PrimaryExpression	0		10966527	1					
ANR	10966562	EqualityExpression	exec_cont != 0		10966527	1		!=			
ANR	10966563	Identifier	exec_cont		10966527	0					
ANR	10966564	PrimaryExpression	0		10966527	1					
ANR	10966565	ExpressionStatement	code = exec_cont ( i_ctx_p )	502:8:19074:19099	10966527	1	True				
ANR	10966566	AssignmentExpression	code = exec_cont ( i_ctx_p )		10966527	0		=			
ANR	10966567	Identifier	code		10966527	0					
ANR	10966568	CallExpression	exec_cont ( i_ctx_p )		10966527	1					
ANR	10966569	Callee	exec_cont		10966527	0					
ANR	10966570	Identifier	exec_cont		10966527	0					
ANR	10966571	ArgumentList	i_ctx_p		10966527	1					
ANR	10966572	Argument	i_ctx_p		10966527	0					
ANR	10966573	Identifier	i_ctx_p		10966527	0					
ANR	10966574	ReturnStatement	return code ;	503:4:19105:19116	10966527	4	True				
ANR	10966575	Identifier	code		10966527	0					
ANR	10966576	ReturnType	static int		10966527	1					
ANR	10966577	Identifier	bbox_finish_stroke		10966527	2					
ANR	10966578	ParameterList	i_ctx_t * i_ctx_p		10966527	3					
ANR	10966579	Parameter	i_ctx_t * i_ctx_p	495:19:18907:18922	10966527	0	True				
ANR	10966580	ParameterType	i_ctx_t *		10966527	0					
ANR	10966581	Identifier	i_ctx_p		10966527	1					
ANR	10966582	CFGEntryNode	ENTRY		10966527		True				
ANR	10966583	CFGExitNode	EXIT		10966527		True				
ANR	10966584	Symbol	code		10966527						
ANR	10966585	Symbol	bbox_finish		10966527						
ANR	10966586	Symbol	i_ctx_p		10966527						
ANR	10966587	Symbol	bbox_stroke		10966527						
ANR	10966588	Symbol	& exec_cont		10966527						
ANR	10966589	Symbol	exec_cont		10966527						
ANR	10966590	Function	bbox_finish	506:0:19121:21351							
ANR	10966591	FunctionDef	"bbox_finish (i_ctx_t * i_ctx_p , op_proc_t cont , op_proc_t * exec_cont)"		10966590	0					
ANR	10966592	CompoundStatement		508:0:19200:21351	10966590	0					
ANR	10966593	IdentifierDeclStatement	os_ptr op = osp ;	509:4:19298:19313	10966590	0	True				
ANR	10966594	IdentifierDecl	op = osp		10966590	0					
ANR	10966595	IdentifierDeclType	os_ptr		10966590	0					
ANR	10966596	Identifier	op		10966590	1					
ANR	10966597	AssignmentExpression	op = osp		10966590	2		=			
ANR	10966598	Identifier	osp		10966590	0					
ANR	10966599	Identifier	osp		10966590	1					
ANR	10966600	IdentifierDeclStatement	gs_font * pfont ;	510:4:19319:19333	10966590	1	True				
ANR	10966601	IdentifierDecl	* pfont		10966590	0					
ANR	10966602	IdentifierDeclType	gs_font *		10966590	0					
ANR	10966603	Identifier	pfont		10966590	1					
ANR	10966604	IdentifierDeclStatement	int code ;	511:4:19339:19347	10966590	2	True				
ANR	10966605	IdentifierDecl	code		10966590	0					
ANR	10966606	IdentifierDeclType	int		10966590	0					
ANR	10966607	Identifier	code		10966590	1					
ANR	10966608	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	512:4:19353:19398	10966590	3	True				
ANR	10966609	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		10966590	0					
ANR	10966610	IdentifierDeclType	gs_text_enum_t *		10966590	0					
ANR	10966611	Identifier	penum		10966590	1					
ANR	10966612	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		10966590	2		=			
ANR	10966613	Identifier	penum		10966590	0					
ANR	10966614	CallExpression	op_show_find ( i_ctx_p )		10966590	1					
ANR	10966615	Callee	op_show_find		10966590	0					
ANR	10966616	Identifier	op_show_find		10966590	0					
ANR	10966617	ArgumentList	i_ctx_p		10966590	1					
ANR	10966618	Argument	i_ctx_p		10966590	0					
ANR	10966619	Identifier	i_ctx_p		10966590	0					
ANR	10966620	IdentifierDeclStatement	gs_type1exec_state cxs ;	513:4:19404:19426	10966590	4	True				
ANR	10966621	IdentifierDecl	cxs		10966590	0					
ANR	10966622	IdentifierDeclType	gs_type1exec_state		10966590	0					
ANR	10966623	Identifier	cxs		10966590	1					
ANR	10966624	Statement	gs_type1_state	514:4:19471:19484	10966590	5	True				
ANR	10966625	Statement	*	514:19:19486:19486	10966590	6	True				
ANR	10966626	Statement	const	514:20:19487:19491	10966590	7	True				
ANR	10966627	ExpressionStatement	pcis = & cxs . cis	514:26:19493:19508	10966590	8	True				
ANR	10966628	AssignmentExpression	pcis = & cxs . cis		10966590	0		=			
ANR	10966629	Identifier	pcis		10966590	0					
ANR	10966630	UnaryOperationExpression	& cxs . cis		10966590	1					
ANR	10966631	UnaryOperator	&		10966590	0					
ANR	10966632	MemberAccess	cxs . cis		10966590	1					
ANR	10966633	Identifier	cxs		10966590	0					
ANR	10966634	Identifier	cis		10966590	1					
ANR	10966635	IdentifierDeclStatement	double sbxy [ 2 ] ;	515:4:19514:19528	10966590	9	True				
ANR	10966636	IdentifierDecl	sbxy [ 2 ]		10966590	0					
ANR	10966637	IdentifierDeclType	double [ 2 ]		10966590	0					
ANR	10966638	Identifier	sbxy		10966590	1					
ANR	10966639	PrimaryExpression	2		10966590	2					
ANR	10966640	IdentifierDeclStatement	gs_point sbpt ;	516:4:19534:19547	10966590	10	True				
ANR	10966641	IdentifierDecl	sbpt		10966590	0					
ANR	10966642	IdentifierDeclType	gs_point		10966590	0					
ANR	10966643	Identifier	sbpt		10966590	1					
ANR	10966644	IdentifierDeclStatement	gs_point * psbpt = 0 ;	517:4:19553:19572	10966590	11	True				
ANR	10966645	IdentifierDecl	* psbpt = 0		10966590	0					
ANR	10966646	IdentifierDeclType	gs_point *		10966590	0					
ANR	10966647	Identifier	psbpt		10966590	1					
ANR	10966648	AssignmentExpression	* psbpt = 0		10966590	2		=			
ANR	10966649	Identifier	psbpt		10966590	0					
ANR	10966650	PrimaryExpression	0		10966590	1					
ANR	10966651	IdentifierDeclStatement	os_ptr opc = op ;	518:4:19578:19593	10966590	12	True				
ANR	10966652	IdentifierDecl	opc = op		10966590	0					
ANR	10966653	IdentifierDeclType	os_ptr		10966590	0					
ANR	10966654	Identifier	opc		10966590	1					
ANR	10966655	AssignmentExpression	opc = op		10966590	2		=			
ANR	10966656	Identifier	op		10966590	0					
ANR	10966657	Identifier	op		10966590	1					
ANR	10966658	IdentifierDeclStatement	const ref * opstr ;	519:4:19599:19615	10966590	13	True				
ANR	10966659	IdentifierDecl	* opstr		10966590	0					
ANR	10966660	IdentifierDeclType	const ref *		10966590	0					
ANR	10966661	Identifier	opstr		10966590	1					
ANR	10966662	IdentifierDeclStatement	ref other_subr ;	520:4:19621:19635	10966590	14	True				
ANR	10966663	IdentifierDecl	other_subr		10966590	0					
ANR	10966664	IdentifierDeclType	ref		10966590	0					
ANR	10966665	Identifier	other_subr		10966590	1					
ANR	10966666	IfStatement	"if ( ! r_has_type ( opc , t_string ) )"		10966590	15					
ANR	10966667	Condition	"! r_has_type ( opc , t_string )"	522:8:19646:19671	10966590	0	True				
ANR	10966668	UnaryOperationExpression	"! r_has_type ( opc , t_string )"		10966590	0					
ANR	10966669	UnaryOperator	!		10966590	0					
ANR	10966670	CallExpression	"r_has_type ( opc , t_string )"		10966590	1					
ANR	10966671	Callee	r_has_type		10966590	0					
ANR	10966672	Identifier	r_has_type		10966590	0					
ANR	10966673	ArgumentList	opc		10966590	1					
ANR	10966674	Argument	opc		10966590	0					
ANR	10966675	Identifier	opc		10966590	0					
ANR	10966676	Argument	t_string		10966590	1					
ANR	10966677	Identifier	t_string		10966590	0					
ANR	10966678	CompoundStatement		15:36:473:473	10966590	1					
ANR	10966679	ExpressionStatement	check_op ( 3 )	523:8:19684:19695	10966590	0	True				
ANR	10966680	CallExpression	check_op ( 3 )		10966590	0					
ANR	10966681	Callee	check_op		10966590	0					
ANR	10966682	Identifier	check_op		10966590	0					
ANR	10966683	ArgumentList	3		10966590	1					
ANR	10966684	Argument	3		10966590	0					
ANR	10966685	PrimaryExpression	3		10966590	0					
ANR	10966686	ExpressionStatement	"code = num_params ( op , 2 , sbxy )"	524:8:19705:19735	10966590	1	True				
ANR	10966687	AssignmentExpression	"code = num_params ( op , 2 , sbxy )"		10966590	0		=			
ANR	10966688	Identifier	code		10966590	0					
ANR	10966689	CallExpression	"num_params ( op , 2 , sbxy )"		10966590	1					
ANR	10966690	Callee	num_params		10966590	0					
ANR	10966691	Identifier	num_params		10966590	0					
ANR	10966692	ArgumentList	op		10966590	1					
ANR	10966693	Argument	op		10966590	0					
ANR	10966694	Identifier	op		10966590	0					
ANR	10966695	Argument	2		10966590	1					
ANR	10966696	PrimaryExpression	2		10966590	0					
ANR	10966697	Argument	sbxy		10966590	2					
ANR	10966698	Identifier	sbxy		10966590	0					
ANR	10966699	IfStatement	if ( code < 0 )		10966590	2					
ANR	10966700	Condition	code < 0	525:12:19749:19756	10966590	0	True				
ANR	10966701	RelationalExpression	code < 0		10966590	0		<			
ANR	10966702	Identifier	code		10966590	0					
ANR	10966703	PrimaryExpression	0		10966590	1					
ANR	10966704	ReturnStatement	return code ;	526:12:19771:19782	10966590	1	True				
ANR	10966705	Identifier	code		10966590	0					
ANR	10966706	ExpressionStatement	sbpt . x = sbxy [ 0 ]	527:8:19792:19808	10966590	3	True				
ANR	10966707	AssignmentExpression	sbpt . x = sbxy [ 0 ]		10966590	0		=			
ANR	10966708	MemberAccess	sbpt . x		10966590	0					
ANR	10966709	Identifier	sbpt		10966590	0					
ANR	10966710	Identifier	x		10966590	1					
ANR	10966711	ArrayIndexing	sbxy [ 0 ]		10966590	1					
ANR	10966712	Identifier	sbxy		10966590	0					
ANR	10966713	PrimaryExpression	0		10966590	1					
ANR	10966714	ExpressionStatement	sbpt . y = sbxy [ 1 ]	528:8:19818:19834	10966590	4	True				
ANR	10966715	AssignmentExpression	sbpt . y = sbxy [ 1 ]		10966590	0		=			
ANR	10966716	MemberAccess	sbpt . y		10966590	0					
ANR	10966717	Identifier	sbpt		10966590	0					
ANR	10966718	Identifier	y		10966590	1					
ANR	10966719	ArrayIndexing	sbxy [ 1 ]		10966590	1					
ANR	10966720	Identifier	sbxy		10966590	0					
ANR	10966721	PrimaryExpression	1		10966590	1					
ANR	10966722	ExpressionStatement	psbpt = & sbpt	529:8:19844:19857	10966590	5	True				
ANR	10966723	AssignmentExpression	psbpt = & sbpt		10966590	0		=			
ANR	10966724	Identifier	psbpt		10966590	0					
ANR	10966725	UnaryOperationExpression	& sbpt		10966590	1					
ANR	10966726	UnaryOperator	&		10966590	0					
ANR	10966727	Identifier	sbpt		10966590	1					
ANR	10966728	ExpressionStatement	opc -= 2	530:8:19867:19875	10966590	6	True				
ANR	10966729	AssignmentExpression	opc -= 2		10966590	0		-=			
ANR	10966730	Identifier	opc		10966590	0					
ANR	10966731	PrimaryExpression	2		10966590	1					
ANR	10966732	ExpressionStatement	"check_type ( * opc , t_string )"	531:8:19885:19911	10966590	7	True				
ANR	10966733	CallExpression	"check_type ( * opc , t_string )"		10966590	0					
ANR	10966734	Callee	check_type		10966590	0					
ANR	10966735	Identifier	check_type		10966590	0					
ANR	10966736	ArgumentList	* opc		10966590	1					
ANR	10966737	Argument	* opc		10966590	0					
ANR	10966738	UnaryOperationExpression	* opc		10966590	0					
ANR	10966739	UnaryOperator	*		10966590	0					
ANR	10966740	Identifier	opc		10966590	1					
ANR	10966741	Argument	t_string		10966590	1					
ANR	10966742	Identifier	t_string		10966590	0					
ANR	10966743	ExpressionStatement	"code = font_param ( opc - 3 , & pfont )"	533:4:19923:19957	10966590	16	True				
ANR	10966744	AssignmentExpression	"code = font_param ( opc - 3 , & pfont )"		10966590	0		=			
ANR	10966745	Identifier	code		10966590	0					
ANR	10966746	CallExpression	"font_param ( opc - 3 , & pfont )"		10966590	1					
ANR	10966747	Callee	font_param		10966590	0					
ANR	10966748	Identifier	font_param		10966590	0					
ANR	10966749	ArgumentList	opc - 3		10966590	1					
ANR	10966750	Argument	opc - 3		10966590	0					
ANR	10966751	AdditiveExpression	opc - 3		10966590	0		-			
ANR	10966752	Identifier	opc		10966590	0					
ANR	10966753	PrimaryExpression	3		10966590	1					
ANR	10966754	Argument	& pfont		10966590	1					
ANR	10966755	UnaryOperationExpression	& pfont		10966590	0					
ANR	10966756	UnaryOperator	&		10966590	0					
ANR	10966757	Identifier	pfont		10966590	1					
ANR	10966758	IfStatement	if ( code < 0 )		10966590	17					
ANR	10966759	Condition	code < 0	534:8:19967:19974	10966590	0	True				
ANR	10966760	RelationalExpression	code < 0		10966590	0		<			
ANR	10966761	Identifier	code		10966590	0					
ANR	10966762	PrimaryExpression	0		10966590	1					
ANR	10966763	ReturnStatement	return code ;	535:8:19985:19996	10966590	1	True				
ANR	10966764	Identifier	code		10966590	0					
ANR	10966765	IfStatement	if ( penum == 0 || ! font_uses_charstrings ( pfont ) )		10966590	18					
ANR	10966766	Condition	penum == 0 || ! font_uses_charstrings ( pfont )	536:8:20006:20048	10966590	0	True				
ANR	10966767	OrExpression	penum == 0 || ! font_uses_charstrings ( pfont )		10966590	0		||			
ANR	10966768	EqualityExpression	penum == 0		10966590	0		==			
ANR	10966769	Identifier	penum		10966590	0					
ANR	10966770	PrimaryExpression	0		10966590	1					
ANR	10966771	UnaryOperationExpression	! font_uses_charstrings ( pfont )		10966590	1					
ANR	10966772	UnaryOperator	!		10966590	0					
ANR	10966773	CallExpression	font_uses_charstrings ( pfont )		10966590	1					
ANR	10966774	Callee	font_uses_charstrings		10966590	0					
ANR	10966775	Identifier	font_uses_charstrings		10966590	0					
ANR	10966776	ArgumentList	pfont		10966590	1					
ANR	10966777	Argument	pfont		10966590	0					
ANR	10966778	Identifier	pfont		10966590	0					
ANR	10966779	ExpressionStatement	return_error ( gs_error_undefined )	537:8:20059:20091	10966590	1	True				
ANR	10966780	CallExpression	return_error ( gs_error_undefined )		10966590	0					
ANR	10966781	Callee	return_error		10966590	0					
ANR	10966782	Identifier	return_error		10966590	0					
ANR	10966783	ArgumentList	gs_error_undefined		10966590	1					
ANR	10966784	Argument	gs_error_undefined		10966590	0					
ANR	10966785	Identifier	gs_error_undefined		10966590	0					
ANR	10966786	CompoundStatement		33:8:969:999	10966590	19					
ANR	10966787	Statement	gs_font_type1	539:8:20107:20119	10966590	0	True				
ANR	10966788	Statement	*	539:22:20121:20121	10966590	1	True				
ANR	10966789	Statement	const	539:23:20122:20126	10966590	2	True				
ANR	10966790	ExpressionStatement	pfont1 = ( gs_font_type1 * ) pfont	539:29:20128:20160	10966590	3	True				
ANR	10966791	AssignmentExpression	pfont1 = ( gs_font_type1 * ) pfont		10966590	0		=			
ANR	10966792	Identifier	pfont1		10966590	0					
ANR	10966793	CastExpression	( gs_font_type1 * ) pfont		10966590	1					
ANR	10966794	CastTarget	gs_font_type1 *		10966590	0					
ANR	10966795	Identifier	pfont		10966590	1					
ANR	10966796	IdentifierDeclStatement	int lenIV = pfont1 -> data . lenIV ;	540:8:20170:20200	10966590	4	True				
ANR	10966797	IdentifierDecl	lenIV = pfont1 -> data . lenIV		10966590	0					
ANR	10966798	IdentifierDeclType	int		10966590	0					
ANR	10966799	Identifier	lenIV		10966590	1					
ANR	10966800	AssignmentExpression	lenIV = pfont1 -> data . lenIV		10966590	2		=			
ANR	10966801	Identifier	lenIV		10966590	0					
ANR	10966802	MemberAccess	pfont1 -> data . lenIV		10966590	1					
ANR	10966803	PtrMemberAccess	pfont1 -> data		10966590	0					
ANR	10966804	Identifier	pfont1		10966590	0					
ANR	10966805	Identifier	data		10966590	1					
ANR	10966806	Identifier	lenIV		10966590	1					
ANR	10966807	IfStatement	if ( lenIV > 0 && r_size ( opc ) <= lenIV )		10966590	5					
ANR	10966808	Condition	lenIV > 0 && r_size ( opc ) <= lenIV	542:12:20215:20247	10966590	0	True				
ANR	10966809	AndExpression	lenIV > 0 && r_size ( opc ) <= lenIV		10966590	0		&&			
ANR	10966810	RelationalExpression	lenIV > 0		10966590	0		>			
ANR	10966811	Identifier	lenIV		10966590	0					
ANR	10966812	PrimaryExpression	0		10966590	1					
ANR	10966813	RelationalExpression	r_size ( opc ) <= lenIV		10966590	1		<=			
ANR	10966814	CallExpression	r_size ( opc )		10966590	0					
ANR	10966815	Callee	r_size		10966590	0					
ANR	10966816	Identifier	r_size		10966590	0					
ANR	10966817	ArgumentList	opc		10966590	1					
ANR	10966818	Argument	opc		10966590	0					
ANR	10966819	Identifier	opc		10966590	0					
ANR	10966820	Identifier	lenIV		10966590	1					
ANR	10966821	ExpressionStatement	return_error ( gs_error_invalidfont )	543:12:20262:20296	10966590	1	True				
ANR	10966822	CallExpression	return_error ( gs_error_invalidfont )		10966590	0					
ANR	10966823	Callee	return_error		10966590	0					
ANR	10966824	Identifier	return_error		10966590	0					
ANR	10966825	ArgumentList	gs_error_invalidfont		10966590	1					
ANR	10966826	Argument	gs_error_invalidfont		10966590	0					
ANR	10966827	Identifier	gs_error_invalidfont		10966590	0					
ANR	10966828	ExpressionStatement	check_estack ( 5 )	544:8:20306:20321	10966590	6	True				
ANR	10966829	CallExpression	check_estack ( 5 )		10966590	0					
ANR	10966830	Callee	check_estack		10966590	0					
ANR	10966831	Identifier	check_estack		10966590	0					
ANR	10966832	ArgumentList	5		10966590	1					
ANR	10966833	Argument	5		10966590	0					
ANR	10966834	PrimaryExpression	5		10966590	0					
ANR	10966835	ExpressionStatement	"code = type1_exec_init ( pcis , penum , igs , pfont1 )"	545:8:20369:20417	10966590	7	True				
ANR	10966836	AssignmentExpression	"code = type1_exec_init ( pcis , penum , igs , pfont1 )"		10966590	0		=			
ANR	10966837	Identifier	code		10966590	0					
ANR	10966838	CallExpression	"type1_exec_init ( pcis , penum , igs , pfont1 )"		10966590	1					
ANR	10966839	Callee	type1_exec_init		10966590	0					
ANR	10966840	Identifier	type1_exec_init		10966590	0					
ANR	10966841	ArgumentList	pcis		10966590	1					
ANR	10966842	Argument	pcis		10966590	0					
ANR	10966843	Identifier	pcis		10966590	0					
ANR	10966844	Argument	penum		10966590	1					
ANR	10966845	Identifier	penum		10966590	0					
ANR	10966846	Argument	igs		10966590	2					
ANR	10966847	Identifier	igs		10966590	0					
ANR	10966848	Argument	pfont1		10966590	3					
ANR	10966849	Identifier	pfont1		10966590	0					
ANR	10966850	IfStatement	if ( code < 0 )		10966590	8					
ANR	10966851	Condition	code < 0	546:12:20431:20438	10966590	0	True				
ANR	10966852	RelationalExpression	code < 0		10966590	0		<			
ANR	10966853	Identifier	code		10966590	0					
ANR	10966854	PrimaryExpression	0		10966590	1					
ANR	10966855	ReturnStatement	return code ;	547:12:20453:20464	10966590	1	True				
ANR	10966856	Identifier	code		10966590	0					
ANR	10966857	IfStatement	if ( psbpt )		10966590	9					
ANR	10966858	Condition	psbpt	548:12:20478:20482	10966590	0	True				
ANR	10966859	Identifier	psbpt		10966590	0					
ANR	10966860	ExpressionStatement	"gs_type1_set_lsb ( pcis , psbpt )"	549:12:20497:20526	10966590	1	True				
ANR	10966861	CallExpression	"gs_type1_set_lsb ( pcis , psbpt )"		10966590	0					
ANR	10966862	Callee	gs_type1_set_lsb		10966590	0					
ANR	10966863	Identifier	gs_type1_set_lsb		10966590	0					
ANR	10966864	ArgumentList	pcis		10966590	1					
ANR	10966865	Argument	pcis		10966590	0					
ANR	10966866	Identifier	pcis		10966590	0					
ANR	10966867	Argument	psbpt		10966590	1					
ANR	10966868	Identifier	psbpt		10966590	0					
ANR	10966869	ExpressionStatement	opstr = opc	551:4:20538:20549	10966590	20	True				
ANR	10966870	AssignmentExpression	opstr = opc		10966590	0		=			
ANR	10966871	Identifier	opstr		10966590	0					
ANR	10966872	Identifier	opc		10966590	1					
ANR	10966873	Label	icont :	552:2:20553:20558	10966590	21	True				
ANR	10966874	Identifier	icont		10966590	0					
ANR	10966875	ExpressionStatement	"code = type1_continue_dispatch ( i_ctx_p , & cxs , opstr , & other_subr , ( psbpt ? 6 : 4 ) )"	553:4:20564:20681	10966590	22	True				
ANR	10966876	AssignmentExpression	"code = type1_continue_dispatch ( i_ctx_p , & cxs , opstr , & other_subr , ( psbpt ? 6 : 4 ) )"		10966590	0		=			
ANR	10966877	Identifier	code		10966590	0					
ANR	10966878	CallExpression	"type1_continue_dispatch ( i_ctx_p , & cxs , opstr , & other_subr , ( psbpt ? 6 : 4 ) )"		10966590	1					
ANR	10966879	Callee	type1_continue_dispatch		10966590	0					
ANR	10966880	Identifier	type1_continue_dispatch		10966590	0					
ANR	10966881	ArgumentList	i_ctx_p		10966590	1					
ANR	10966882	Argument	i_ctx_p		10966590	0					
ANR	10966883	Identifier	i_ctx_p		10966590	0					
ANR	10966884	Argument	& cxs		10966590	1					
ANR	10966885	UnaryOperationExpression	& cxs		10966590	0					
ANR	10966886	UnaryOperator	&		10966590	0					
ANR	10966887	Identifier	cxs		10966590	1					
ANR	10966888	Argument	opstr		10966590	2					
ANR	10966889	Identifier	opstr		10966590	0					
ANR	10966890	Argument	& other_subr		10966590	3					
ANR	10966891	UnaryOperationExpression	& other_subr		10966590	0					
ANR	10966892	UnaryOperator	&		10966590	0					
ANR	10966893	Identifier	other_subr		10966590	1					
ANR	10966894	Argument	psbpt ? 6 : 4		10966590	4					
ANR	10966895	ConditionalExpression	psbpt ? 6 : 4		10966590	0					
ANR	10966896	Condition	psbpt		10966590	0					
ANR	10966897	Identifier	psbpt		10966590	0					
ANR	10966898	PrimaryExpression	6		10966590	1					
ANR	10966899	PrimaryExpression	4		10966590	2					
ANR	10966900	ExpressionStatement	op = osp	555:4:20687:20695	10966590	23	True				
ANR	10966901	AssignmentExpression	op = osp		10966590	0		=			
ANR	10966902	Identifier	op		10966590	0					
ANR	10966903	Identifier	osp		10966590	1					
ANR	10966904	SwitchStatement	switch ( code )		10966590	24					
ANR	10966905	Condition	code	556:12:20749:20752	10966590	0	True				
ANR	10966906	Identifier	code		10966590	0					
ANR	10966907	CompoundStatement		49:18:1554:1554	10966590	1					
ANR	10966908	Label	case 0 :	557:8:20765:20771	10966590	0	True				
ANR	10966909	IfStatement	if ( psbpt )		10966590	1					
ANR	10966910	Condition	psbpt	559:16:20850:20854	10966590	0	True				
ANR	10966911	Identifier	psbpt		10966590	0					
ANR	10966912	ExpressionStatement	pop ( 2 )	560:16:20873:20879	10966590	1	True				
ANR	10966913	CallExpression	pop ( 2 )		10966590	0					
ANR	10966914	Callee	pop		10966590	0					
ANR	10966915	Identifier	pop		10966590	0					
ANR	10966916	ArgumentList	2		10966590	1					
ANR	10966917	Argument	2		10966590	0					
ANR	10966918	PrimaryExpression	2		10966590	0					
ANR	10966919	ExpressionStatement	* exec_cont = cont	561:12:20893:20910	10966590	2	True				
ANR	10966920	AssignmentExpression	* exec_cont = cont		10966590	0		=			
ANR	10966921	UnaryOperationExpression	* exec_cont		10966590	0					
ANR	10966922	UnaryOperator	*		10966590	0					
ANR	10966923	Identifier	exec_cont		10966590	1					
ANR	10966924	Identifier	cont		10966590	1					
ANR	10966925	ReturnStatement	return 0 ;	562:12:20924:20932	10966590	3	True				
ANR	10966926	PrimaryExpression	0		10966590	0					
ANR	10966927	Label	case type1_result_callothersubr :	563:8:20942:20973	10966590	4	True				
ANR	10966928	Identifier	type1_result_callothersubr		10966590	0					
ANR	10966929	ExpressionStatement	push_op_estack ( cont )	564:12:21011:21031	10966590	5	True				
ANR	10966930	CallExpression	push_op_estack ( cont )		10966590	0					
ANR	10966931	Callee	push_op_estack		10966590	0					
ANR	10966932	Identifier	push_op_estack		10966590	0					
ANR	10966933	ArgumentList	cont		10966590	1					
ANR	10966934	Argument	cont		10966590	0					
ANR	10966935	Identifier	cont		10966590	0					
ANR	10966936	ReturnStatement	"return type1_call_OtherSubr ( i_ctx_p , & cxs , bbox_continue , & other_subr ) ;"	565:12:21062:21172	10966590	6	True				
ANR	10966937	CallExpression	"type1_call_OtherSubr ( i_ctx_p , & cxs , bbox_continue , & other_subr )"		10966590	0					
ANR	10966938	Callee	type1_call_OtherSubr		10966590	0					
ANR	10966939	Identifier	type1_call_OtherSubr		10966590	0					
ANR	10966940	ArgumentList	i_ctx_p		10966590	1					
ANR	10966941	Argument	i_ctx_p		10966590	0					
ANR	10966942	Identifier	i_ctx_p		10966590	0					
ANR	10966943	Argument	& cxs		10966590	1					
ANR	10966944	UnaryOperationExpression	& cxs		10966590	0					
ANR	10966945	UnaryOperator	&		10966590	0					
ANR	10966946	Identifier	cxs		10966590	1					
ANR	10966947	Argument	bbox_continue		10966590	2					
ANR	10966948	Identifier	bbox_continue		10966590	0					
ANR	10966949	Argument	& other_subr		10966590	3					
ANR	10966950	UnaryOperationExpression	& other_subr		10966590	0					
ANR	10966951	UnaryOperator	&		10966590	0					
ANR	10966952	Identifier	other_subr		10966590	1					
ANR	10966953	Label	case type1_result_sbw :	567:8:21182:21203	10966590	7	True				
ANR	10966954	Identifier	type1_result_sbw		10966590	0					
ANR	10966955	ExpressionStatement	opstr = 0	568:12:21245:21254	10966590	8	True				
ANR	10966956	AssignmentExpression	opstr = 0		10966590	0		=			
ANR	10966957	Identifier	opstr		10966590	0					
ANR	10966958	PrimaryExpression	0		10966590	1					
ANR	10966959	GotoStatement	goto icont ;	569:12:21268:21278	10966590	9	True				
ANR	10966960	Identifier	icont		10966590	0					
ANR	10966961	Label	default :	570:8:21288:21295	10966590	10	True				
ANR	10966962	Identifier	default		10966590	0					
ANR	10966963	ReturnStatement	return code ;	571:12:21332:21343	10966590	11	True				
ANR	10966964	Identifier	code		10966590	0					
ANR	10966965	ReturnType	static int		10966590	1					
ANR	10966966	Identifier	bbox_finish		10966590	2					
ANR	10966967	ParameterList	"i_ctx_t * i_ctx_p , op_proc_t cont , op_proc_t * exec_cont"		10966590	3					
ANR	10966968	Parameter	i_ctx_t * i_ctx_p	507:12:19144:19159	10966590	0	True				
ANR	10966969	ParameterType	i_ctx_t *		10966590	0					
ANR	10966970	Identifier	i_ctx_p		10966590	1					
ANR	10966971	Parameter	op_proc_t cont	507:30:19162:19175	10966590	1	True				
ANR	10966972	ParameterType	op_proc_t		10966590	0					
ANR	10966973	Identifier	cont		10966590	1					
ANR	10966974	Parameter	op_proc_t * exec_cont	507:46:19178:19197	10966590	2	True				
ANR	10966975	ParameterType	op_proc_t *		10966590	0					
ANR	10966976	Identifier	exec_cont		10966590	1					
ANR	10966977	CFGEntryNode	ENTRY		10966590		True				
ANR	10966978	CFGExitNode	EXIT		10966590		True				
ANR	10966979	Symbol	op_show_find		10966590						
ANR	10966980	Symbol	pfont1 -> data . lenIV		10966590						
ANR	10966981	Symbol	code		10966590						
ANR	10966982	Symbol	& cxs		10966590						
ANR	10966983	Symbol	* exec_cont		10966590						
ANR	10966984	Symbol	gs_error_undefined		10966590						
ANR	10966985	Symbol	* opc		10966590						
ANR	10966986	Symbol	osp		10966590						
ANR	10966987	Symbol	num_params		10966590						
ANR	10966988	Symbol	type1_continue_dispatch		10966590						
ANR	10966989	Symbol	r_has_type		10966590						
ANR	10966990	Symbol	igs		10966590						
ANR	10966991	Symbol	r_size		10966590						
ANR	10966992	Symbol	type1_exec_init		10966590						
ANR	10966993	Symbol	exec_cont		10966590						
ANR	10966994	Symbol	& cxs . cis		10966590						
ANR	10966995	Symbol	cont		10966590						
ANR	10966996	Symbol	gs_error_invalidfont		10966590						
ANR	10966997	Symbol	& sbpt		10966590						
ANR	10966998	Symbol	cxs		10966590						
ANR	10966999	Symbol	opstr		10966590						
ANR	10967000	Symbol	sbpt . y		10966590						
ANR	10967001	Symbol	op		10966590						
ANR	10967002	Symbol	* pfont1		10966590						
ANR	10967003	Symbol	other_subr		10966590						
ANR	10967004	Symbol	* sbxy		10966590						
ANR	10967005	Symbol	pfont1		10966590						
ANR	10967006	Symbol	psbpt		10966590						
ANR	10967007	Symbol	opc		10966590						
ANR	10967008	Symbol	sbpt . x		10966590						
ANR	10967009	Symbol	lenIV		10966590						
ANR	10967010	Symbol	& other_subr		10966590						
ANR	10967011	Symbol	font_uses_charstrings		10966590						
ANR	10967012	Symbol	pfont		10966590						
ANR	10967013	Symbol	sbxy		10966590						
ANR	10967014	Symbol	sbpt		10966590						
ANR	10967015	Symbol	& pfont		10966590						
ANR	10967016	Symbol	penum		10966590						
ANR	10967017	Symbol	pcis		10966590						
ANR	10967018	Symbol	font_param		10966590						
ANR	10967019	Symbol	bbox_continue		10966590						
ANR	10967020	Symbol	pfont1 -> data		10966590						
ANR	10967021	Symbol	t_string		10966590						
ANR	10967022	Symbol	type1_call_OtherSubr		10966590						
ANR	10967023	Symbol	i_ctx_p		10966590						
ANR	10967024	Function	bbox_continue	575:0:21354:21776							
ANR	10967025	FunctionDef	bbox_continue (i_ctx_t * i_ctx_p)		10967024	0					
ANR	10967026	CompoundStatement		577:0:21397:21776	10967024	0					
ANR	10967027	IdentifierDeclStatement	os_ptr op = osp ;	578:4:21403:21418	10967024	0	True				
ANR	10967028	IdentifierDecl	op = osp		10967024	0					
ANR	10967029	IdentifierDeclType	os_ptr		10967024	0					
ANR	10967030	Identifier	op		10967024	1					
ANR	10967031	AssignmentExpression	op = osp		10967024	2		=			
ANR	10967032	Identifier	osp		10967024	0					
ANR	10967033	Identifier	osp		10967024	1					
ANR	10967034	IdentifierDeclStatement	"int npop = ( r_has_type ( op , t_string ) ? 4 : 6 ) ;"	579:4:21424:21469	10967024	1	True				
ANR	10967035	IdentifierDecl	"npop = ( r_has_type ( op , t_string ) ? 4 : 6 )"		10967024	0					
ANR	10967036	IdentifierDeclType	int		10967024	0					
ANR	10967037	Identifier	npop		10967024	1					
ANR	10967038	AssignmentExpression	"npop = ( r_has_type ( op , t_string ) ? 4 : 6 )"		10967024	2		=			
ANR	10967039	Identifier	npop		10967024	0					
ANR	10967040	ConditionalExpression	"r_has_type ( op , t_string ) ? 4 : 6"		10967024	1					
ANR	10967041	Condition	"r_has_type ( op , t_string )"		10967024	0					
ANR	10967042	CallExpression	"r_has_type ( op , t_string )"		10967024	0					
ANR	10967043	Callee	r_has_type		10967024	0					
ANR	10967044	Identifier	r_has_type		10967024	0					
ANR	10967045	ArgumentList	op		10967024	1					
ANR	10967046	Argument	op		10967024	0					
ANR	10967047	Identifier	op		10967024	0					
ANR	10967048	Argument	t_string		10967024	1					
ANR	10967049	Identifier	t_string		10967024	0					
ANR	10967050	PrimaryExpression	4		10967024	1					
ANR	10967051	PrimaryExpression	6		10967024	2					
ANR	10967052	IdentifierDeclStatement	"int code = type1_callout_dispatch ( i_ctx_p , bbox_continue , npop ) ;"	580:4:21475:21538	10967024	2	True				
ANR	10967053	IdentifierDecl	"code = type1_callout_dispatch ( i_ctx_p , bbox_continue , npop )"		10967024	0					
ANR	10967054	IdentifierDeclType	int		10967024	0					
ANR	10967055	Identifier	code		10967024	1					
ANR	10967056	AssignmentExpression	"code = type1_callout_dispatch ( i_ctx_p , bbox_continue , npop )"		10967024	2		=			
ANR	10967057	Identifier	code		10967024	0					
ANR	10967058	CallExpression	"type1_callout_dispatch ( i_ctx_p , bbox_continue , npop )"		10967024	1					
ANR	10967059	Callee	type1_callout_dispatch		10967024	0					
ANR	10967060	Identifier	type1_callout_dispatch		10967024	0					
ANR	10967061	ArgumentList	i_ctx_p		10967024	1					
ANR	10967062	Argument	i_ctx_p		10967024	0					
ANR	10967063	Identifier	i_ctx_p		10967024	0					
ANR	10967064	Argument	bbox_continue		10967024	1					
ANR	10967065	Identifier	bbox_continue		10967024	0					
ANR	10967066	Argument	npop		10967024	2					
ANR	10967067	Identifier	npop		10967024	0					
ANR	10967068	IfStatement	if ( code == 0 )		10967024	3					
ANR	10967069	Condition	code == 0	582:8:21549:21557	10967024	0	True				
ANR	10967070	EqualityExpression	code == 0		10967024	0		==			
ANR	10967071	Identifier	code		10967024	0					
ANR	10967072	PrimaryExpression	0		10967024	1					
ANR	10967073	CompoundStatement		6:19:162:162	10967024	1					
ANR	10967074	ExpressionStatement	op = osp	583:8:21570:21578	10967024	0	True				
ANR	10967075	AssignmentExpression	op = osp		10967024	0		=			
ANR	10967076	Identifier	op		10967024	0					
ANR	10967077	Identifier	osp		10967024	1					
ANR	10967078	ExpressionStatement	npop -= 4	584:8:21628:21637	10967024	1	True				
ANR	10967079	AssignmentExpression	npop -= 4		10967024	0		-=			
ANR	10967080	Identifier	npop		10967024	0					
ANR	10967081	PrimaryExpression	4		10967024	1					
ANR	10967082	ExpressionStatement	pop ( npop )	585:8:21690:21699	10967024	2	True				
ANR	10967083	CallExpression	pop ( npop )		10967024	0					
ANR	10967084	Callee	pop		10967024	0					
ANR	10967085	Identifier	pop		10967024	0					
ANR	10967086	ArgumentList	npop		10967024	1					
ANR	10967087	Argument	npop		10967024	0					
ANR	10967088	Identifier	npop		10967024	0					
ANR	10967089	ExpressionStatement	op -= npop	586:8:21709:21719	10967024	3	True				
ANR	10967090	AssignmentExpression	op -= npop		10967024	0		-=			
ANR	10967091	Identifier	op		10967024	0					
ANR	10967092	Identifier	npop		10967024	1					
ANR	10967093	ExpressionStatement	op_type1_free ( i_ctx_p )	587:8:21729:21751	10967024	4	True				
ANR	10967094	CallExpression	op_type1_free ( i_ctx_p )		10967024	0					
ANR	10967095	Callee	op_type1_free		10967024	0					
ANR	10967096	Identifier	op_type1_free		10967024	0					
ANR	10967097	ArgumentList	i_ctx_p		10967024	1					
ANR	10967098	Argument	i_ctx_p		10967024	0					
ANR	10967099	Identifier	i_ctx_p		10967024	0					
ANR	10967100	ReturnStatement	return code ;	589:4:21763:21774	10967024	4	True				
ANR	10967101	Identifier	code		10967024	0					
ANR	10967102	ReturnType	static int		10967024	1					
ANR	10967103	Identifier	bbox_continue		10967024	2					
ANR	10967104	ParameterList	i_ctx_t * i_ctx_p		10967024	3					
ANR	10967105	Parameter	i_ctx_t * i_ctx_p	576:14:21379:21394	10967024	0	True				
ANR	10967106	ParameterType	i_ctx_t *		10967024	0					
ANR	10967107	Identifier	i_ctx_p		10967024	1					
ANR	10967108	CFGEntryNode	ENTRY		10967024		True				
ANR	10967109	CFGExitNode	EXIT		10967024		True				
ANR	10967110	Symbol	npop		10967024						
ANR	10967111	Symbol	op		10967024						
ANR	10967112	Symbol	t_string		10967024						
ANR	10967113	Symbol	r_has_type		10967024						
ANR	10967114	Symbol	code		10967024						
ANR	10967115	Symbol	i_ctx_p		10967024						
ANR	10967116	Symbol	type1_callout_dispatch		10967024						
ANR	10967117	Symbol	bbox_continue		10967024						
ANR	10967118	Symbol	osp		10967024						
ANR	10967119	Function	bbox_draw	597:0:21993:24384							
ANR	10967120	FunctionDef	"bbox_draw (i_ctx_t * i_ctx_p , int ( * draw ) ( gs_gstate * ) , op_proc_t * exec_cont)"		10967119	0					
ANR	10967121	CompoundStatement		599:0:22080:24384	10967119	0					
ANR	10967122	IdentifierDeclStatement	os_ptr op = osp ;	600:4:22086:22101	10967119	0	True				
ANR	10967123	IdentifierDecl	op = osp		10967119	0					
ANR	10967124	IdentifierDeclType	os_ptr		10967119	0					
ANR	10967125	Identifier	op		10967119	1					
ANR	10967126	AssignmentExpression	op = osp		10967119	2		=			
ANR	10967127	Identifier	osp		10967119	0					
ANR	10967128	Identifier	osp		10967119	1					
ANR	10967129	IdentifierDeclStatement	gs_rect bbox ;	601:4:22107:22119	10967119	1	True				
ANR	10967130	IdentifierDecl	bbox		10967119	0					
ANR	10967131	IdentifierDeclType	gs_rect		10967119	0					
ANR	10967132	Identifier	bbox		10967119	1					
ANR	10967133	IdentifierDeclStatement	gs_font * pfont ;	602:4:22125:22139	10967119	2	True				
ANR	10967134	IdentifierDecl	* pfont		10967119	0					
ANR	10967135	IdentifierDeclType	gs_font *		10967119	0					
ANR	10967136	Identifier	pfont		10967119	1					
ANR	10967137	IdentifierDeclStatement	gs_text_enum_t * penum ;	603:4:22145:22166	10967119	3	True				
ANR	10967138	IdentifierDecl	* penum		10967119	0					
ANR	10967139	IdentifierDeclType	gs_text_enum_t *		10967119	0					
ANR	10967140	Identifier	penum		10967119	1					
ANR	10967141	IdentifierDeclStatement	gs_font_base * pbfont ;	604:4:22172:22193	10967119	4	True				
ANR	10967142	IdentifierDecl	* pbfont		10967119	0					
ANR	10967143	IdentifierDeclType	gs_font_base *		10967119	0					
ANR	10967144	Identifier	pbfont		10967119	1					
ANR	10967145	IdentifierDeclStatement	gs_font_type1 * pfont1 ;	605:4:22199:22221	10967119	5	True				
ANR	10967146	IdentifierDecl	* pfont1		10967119	0					
ANR	10967147	IdentifierDeclType	gs_font_type1 *		10967119	0					
ANR	10967148	Identifier	pfont1		10967119	1					
ANR	10967149	IdentifierDeclStatement	gs_type1exec_state cxs ;	606:4:22227:22249	10967119	6	True				
ANR	10967150	IdentifierDecl	cxs		10967119	0					
ANR	10967151	IdentifierDeclType	gs_type1exec_state		10967119	0					
ANR	10967152	Identifier	cxs		10967119	1					
ANR	10967153	IdentifierDeclStatement	int code ;	607:4:22255:22263	10967119	7	True				
ANR	10967154	IdentifierDecl	code		10967119	0					
ANR	10967155	IdentifierDeclType	int		10967119	0					
ANR	10967156	Identifier	code		10967119	1					
ANR	10967157	IfStatement	if ( igs -> in_cachedevice < 2 )		10967119	8					
ANR	10967158	Condition	igs -> in_cachedevice < 2	609:8:22274:22296	10967119	0	True				
ANR	10967159	RelationalExpression	igs -> in_cachedevice < 2		10967119	0		<			
ANR	10967160	PtrMemberAccess	igs -> in_cachedevice		10967119	0					
ANR	10967161	Identifier	igs		10967119	0					
ANR	10967162	Identifier	in_cachedevice		10967119	1					
ANR	10967163	PrimaryExpression	2		10967119	1					
ANR	10967164	ReturnStatement	"return nobbox_draw ( i_ctx_p , draw ) ;"	610:8:22325:22358	10967119	1	True				
ANR	10967165	CallExpression	"nobbox_draw ( i_ctx_p , draw )"		10967119	0					
ANR	10967166	Callee	nobbox_draw		10967119	0					
ANR	10967167	Identifier	nobbox_draw		10967119	0					
ANR	10967168	ArgumentList	i_ctx_p		10967119	1					
ANR	10967169	Argument	i_ctx_p		10967119	0					
ANR	10967170	Identifier	i_ctx_p		10967119	0					
ANR	10967171	Argument	draw		10967119	1					
ANR	10967172	Identifier	draw		10967119	0					
ANR	10967173	IfStatement	"if ( ( code = font_param ( op - 3 , & pfont ) ) < 0 )"		10967119	9					
ANR	10967174	Condition	"( code = font_param ( op - 3 , & pfont ) ) < 0"	611:8:22368:22406	10967119	0	True				
ANR	10967175	RelationalExpression	"( code = font_param ( op - 3 , & pfont ) ) < 0"		10967119	0		<			
ANR	10967176	AssignmentExpression	"code = font_param ( op - 3 , & pfont )"		10967119	0		=			
ANR	10967177	Identifier	code		10967119	0					
ANR	10967178	CallExpression	"font_param ( op - 3 , & pfont )"		10967119	1					
ANR	10967179	Callee	font_param		10967119	0					
ANR	10967180	Identifier	font_param		10967119	0					
ANR	10967181	ArgumentList	op - 3		10967119	1					
ANR	10967182	Argument	op - 3		10967119	0					
ANR	10967183	AdditiveExpression	op - 3		10967119	0		-			
ANR	10967184	Identifier	op		10967119	0					
ANR	10967185	PrimaryExpression	3		10967119	1					
ANR	10967186	Argument	& pfont		10967119	1					
ANR	10967187	UnaryOperationExpression	& pfont		10967119	0					
ANR	10967188	UnaryOperator	&		10967119	0					
ANR	10967189	Identifier	pfont		10967119	1					
ANR	10967190	PrimaryExpression	0		10967119	1					
ANR	10967191	ReturnStatement	return code ;	612:8:22417:22428	10967119	1	True				
ANR	10967192	Identifier	code		10967119	0					
ANR	10967193	ExpressionStatement	penum = op_show_find ( i_ctx_p )	613:4:22434:22463	10967119	10	True				
ANR	10967194	AssignmentExpression	penum = op_show_find ( i_ctx_p )		10967119	0		=			
ANR	10967195	Identifier	penum		10967119	0					
ANR	10967196	CallExpression	op_show_find ( i_ctx_p )		10967119	1					
ANR	10967197	Callee	op_show_find		10967119	0					
ANR	10967198	Identifier	op_show_find		10967119	0					
ANR	10967199	ArgumentList	i_ctx_p		10967119	1					
ANR	10967200	Argument	i_ctx_p		10967119	0					
ANR	10967201	Identifier	i_ctx_p		10967119	0					
ANR	10967202	IfStatement	if ( penum == 0 || ! font_uses_charstrings ( pfont ) )		10967119	11					
ANR	10967203	Condition	penum == 0 || ! font_uses_charstrings ( pfont )	614:8:22473:22515	10967119	0	True				
ANR	10967204	OrExpression	penum == 0 || ! font_uses_charstrings ( pfont )		10967119	0		||			
ANR	10967205	EqualityExpression	penum == 0		10967119	0		==			
ANR	10967206	Identifier	penum		10967119	0					
ANR	10967207	PrimaryExpression	0		10967119	1					
ANR	10967208	UnaryOperationExpression	! font_uses_charstrings ( pfont )		10967119	1					
ANR	10967209	UnaryOperator	!		10967119	0					
ANR	10967210	CallExpression	font_uses_charstrings ( pfont )		10967119	1					
ANR	10967211	Callee	font_uses_charstrings		10967119	0					
ANR	10967212	Identifier	font_uses_charstrings		10967119	0					
ANR	10967213	ArgumentList	pfont		10967119	1					
ANR	10967214	Argument	pfont		10967119	0					
ANR	10967215	Identifier	pfont		10967119	0					
ANR	10967216	ExpressionStatement	return_error ( gs_error_undefined )	615:8:22526:22558	10967119	1	True				
ANR	10967217	CallExpression	return_error ( gs_error_undefined )		10967119	0					
ANR	10967218	Callee	return_error		10967119	0					
ANR	10967219	Identifier	return_error		10967119	0					
ANR	10967220	ArgumentList	gs_error_undefined		10967119	1					
ANR	10967221	Argument	gs_error_undefined		10967119	0					
ANR	10967222	Identifier	gs_error_undefined		10967119	0					
ANR	10967223	IfStatement	"if ( ( code = gs_pathbbox ( igs , & bbox ) ) < 0 )"		10967119	12					
ANR	10967224	Condition	"( code = gs_pathbbox ( igs , & bbox ) ) < 0"	616:8:22568:22603	10967119	0	True				
ANR	10967225	RelationalExpression	"( code = gs_pathbbox ( igs , & bbox ) ) < 0"		10967119	0		<			
ANR	10967226	AssignmentExpression	"code = gs_pathbbox ( igs , & bbox )"		10967119	0		=			
ANR	10967227	Identifier	code		10967119	0					
ANR	10967228	CallExpression	"gs_pathbbox ( igs , & bbox )"		10967119	1					
ANR	10967229	Callee	gs_pathbbox		10967119	0					
ANR	10967230	Identifier	gs_pathbbox		10967119	0					
ANR	10967231	ArgumentList	igs		10967119	1					
ANR	10967232	Argument	igs		10967119	0					
ANR	10967233	Identifier	igs		10967119	0					
ANR	10967234	Argument	& bbox		10967119	1					
ANR	10967235	UnaryOperationExpression	& bbox		10967119	0					
ANR	10967236	UnaryOperator	&		10967119	0					
ANR	10967237	Identifier	bbox		10967119	1					
ANR	10967238	PrimaryExpression	0		10967119	1					
ANR	10967239	CompoundStatement		18:46:525:525	10967119	1					
ANR	10967240	IfStatement	if ( code == gs_error_undefinedresult )		10967119	0					
ANR	10967241	Condition	code == gs_error_undefinedresult	621:12:22785:22816	10967119	0	True				
ANR	10967242	EqualityExpression	code == gs_error_undefinedresult		10967119	0		==			
ANR	10967243	Identifier	code		10967119	0					
ANR	10967244	Identifier	gs_error_undefinedresult		10967119	1					
ANR	10967245	CompoundStatement		23:46:738:738	10967119	1					
ANR	10967246	ExpressionStatement	pop ( 4 )	622:12:22833:22839	10967119	0	True				
ANR	10967247	CallExpression	pop ( 4 )		10967119	0					
ANR	10967248	Callee	pop		10967119	0					
ANR	10967249	Identifier	pop		10967119	0					
ANR	10967250	ArgumentList	4		10967119	1					
ANR	10967251	Argument	4		10967119	0					
ANR	10967252	PrimaryExpression	4		10967119	0					
ANR	10967253	ExpressionStatement	gs_newpath ( igs )	623:12:22853:22868	10967119	1	True				
ANR	10967254	CallExpression	gs_newpath ( igs )		10967119	0					
ANR	10967255	Callee	gs_newpath		10967119	0					
ANR	10967256	Identifier	gs_newpath		10967119	0					
ANR	10967257	ArgumentList	igs		10967119	1					
ANR	10967258	Argument	igs		10967119	0					
ANR	10967259	Identifier	igs		10967119	0					
ANR	10967260	ReturnStatement	return 0 ;	624:12:22882:22890	10967119	2	True				
ANR	10967261	PrimaryExpression	0		10967119	0					
ANR	10967262	ReturnStatement	return code ;	626:8:22910:22921	10967119	1	True				
ANR	10967263	Identifier	code		10967119	0					
ANR	10967264	IfStatement	if ( draw == gs_stroke )		10967119	13					
ANR	10967265	Condition	draw == gs_stroke	628:8:22937:22953	10967119	0	True				
ANR	10967266	EqualityExpression	draw == gs_stroke		10967119	0		==			
ANR	10967267	Identifier	draw		10967119	0					
ANR	10967268	Identifier	gs_stroke		10967119	1					
ANR	10967269	CompoundStatement		32:8:942:990	10967119	1					
ANR	10967270	IdentifierDeclStatement	float width = gs_currentlinewidth ( igs ) * 1.41422 ;	630:8:23023:23071	10967119	0	True				
ANR	10967271	IdentifierDecl	width = gs_currentlinewidth ( igs ) * 1.41422		10967119	0					
ANR	10967272	IdentifierDeclType	float		10967119	0					
ANR	10967273	Identifier	width		10967119	1					
ANR	10967274	AssignmentExpression	width = gs_currentlinewidth ( igs ) * 1.41422		10967119	2		=			
ANR	10967275	Identifier	width		10967119	0					
ANR	10967276	MultiplicativeExpression	gs_currentlinewidth ( igs ) * 1.41422		10967119	1		*			
ANR	10967277	CallExpression	gs_currentlinewidth ( igs )		10967119	0					
ANR	10967278	Callee	gs_currentlinewidth		10967119	0					
ANR	10967279	Identifier	gs_currentlinewidth		10967119	0					
ANR	10967280	ArgumentList	igs		10967119	1					
ANR	10967281	Argument	igs		10967119	0					
ANR	10967282	Identifier	igs		10967119	0					
ANR	10967283	PrimaryExpression	1.41422		10967119	1					
ANR	10967284	ExpressionStatement	"bbox . p . x -= width , bbox . p . y -= width"	632:8:23082:23118	10967119	1	True				
ANR	10967285	Expression	"bbox . p . x -= width , bbox . p . y -= width"		10967119	0					
ANR	10967286	AssignmentExpression	bbox . p . x -= width		10967119	0		-=			
ANR	10967287	MemberAccess	bbox . p . x		10967119	0					
ANR	10967288	MemberAccess	bbox . p		10967119	0					
ANR	10967289	Identifier	bbox		10967119	0					
ANR	10967290	Identifier	p		10967119	1					
ANR	10967291	Identifier	x		10967119	1					
ANR	10967292	Identifier	width		10967119	1					
ANR	10967293	AssignmentExpression	bbox . p . y -= width		10967119	1		-=			
ANR	10967294	MemberAccess	bbox . p . y		10967119	0					
ANR	10967295	MemberAccess	bbox . p		10967119	0					
ANR	10967296	Identifier	bbox		10967119	0					
ANR	10967297	Identifier	p		10967119	1					
ANR	10967298	Identifier	y		10967119	1					
ANR	10967299	Identifier	width		10967119	1					
ANR	10967300	ExpressionStatement	"bbox . q . x += width , bbox . q . y += width"	633:8:23128:23164	10967119	2	True				
ANR	10967301	Expression	"bbox . q . x += width , bbox . q . y += width"		10967119	0					
ANR	10967302	AssignmentExpression	bbox . q . x += width		10967119	0		+=			
ANR	10967303	MemberAccess	bbox . q . x		10967119	0					
ANR	10967304	MemberAccess	bbox . q		10967119	0					
ANR	10967305	Identifier	bbox		10967119	0					
ANR	10967306	Identifier	q		10967119	1					
ANR	10967307	Identifier	x		10967119	1					
ANR	10967308	Identifier	width		10967119	1					
ANR	10967309	AssignmentExpression	bbox . q . y += width		10967119	1		+=			
ANR	10967310	MemberAccess	bbox . q . y		10967119	0					
ANR	10967311	MemberAccess	bbox . q		10967119	0					
ANR	10967312	Identifier	bbox		10967119	0					
ANR	10967313	Identifier	q		10967119	1					
ANR	10967314	Identifier	y		10967119	1					
ANR	10967315	Identifier	width		10967119	1					
ANR	10967316	ExpressionStatement	pbfont = ( gs_font_base * ) pfont	635:4:23176:23206	10967119	14	True				
ANR	10967317	AssignmentExpression	pbfont = ( gs_font_base * ) pfont		10967119	0		=			
ANR	10967318	Identifier	pbfont		10967119	0					
ANR	10967319	CastExpression	( gs_font_base * ) pfont		10967119	1					
ANR	10967320	CastTarget	gs_font_base *		10967119	0					
ANR	10967321	Identifier	pfont		10967119	1					
ANR	10967322	IfStatement	"if ( rect_within ( bbox , pbfont -> FontBBox ) )"		10967119	15					
ANR	10967323	Condition	"rect_within ( bbox , pbfont -> FontBBox )"	636:8:23216:23250	10967119	0	True				
ANR	10967324	CallExpression	"rect_within ( bbox , pbfont -> FontBBox )"		10967119	0					
ANR	10967325	Callee	rect_within		10967119	0					
ANR	10967326	Identifier	rect_within		10967119	0					
ANR	10967327	ArgumentList	bbox		10967119	1					
ANR	10967328	Argument	bbox		10967119	0					
ANR	10967329	Identifier	bbox		10967119	0					
ANR	10967330	Argument	pbfont -> FontBBox		10967119	1					
ANR	10967331	PtrMemberAccess	pbfont -> FontBBox		10967119	0					
ANR	10967332	Identifier	pbfont		10967119	0					
ANR	10967333	Identifier	FontBBox		10967119	1					
ANR	10967334	ReturnStatement	"return nobbox_draw ( i_ctx_p , draw ) ;"	637:8:23281:23314	10967119	1	True				
ANR	10967335	CallExpression	"nobbox_draw ( i_ctx_p , draw )"		10967119	0					
ANR	10967336	Callee	nobbox_draw		10967119	0					
ANR	10967337	Identifier	nobbox_draw		10967119	0					
ANR	10967338	ArgumentList	i_ctx_p		10967119	1					
ANR	10967339	Argument	i_ctx_p		10967119	0					
ANR	10967340	Identifier	i_ctx_p		10967119	0					
ANR	10967341	Argument	draw		10967119	1					
ANR	10967342	Identifier	draw		10967119	0					
ANR	10967343	ExpressionStatement	"rect_merge ( pbfont -> FontBBox , bbox )"	639:4:23379:23413	10967119	16	True				
ANR	10967344	CallExpression	"rect_merge ( pbfont -> FontBBox , bbox )"		10967119	0					
ANR	10967345	Callee	rect_merge		10967119	0					
ANR	10967346	Identifier	rect_merge		10967119	0					
ANR	10967347	ArgumentList	pbfont -> FontBBox		10967119	1					
ANR	10967348	Argument	pbfont -> FontBBox		10967119	0					
ANR	10967349	PtrMemberAccess	pbfont -> FontBBox		10967119	0					
ANR	10967350	Identifier	pbfont		10967119	0					
ANR	10967351	Identifier	FontBBox		10967119	1					
ANR	10967352	Argument	bbox		10967119	1					
ANR	10967353	Identifier	bbox		10967119	0					
ANR	10967354	ExpressionStatement	gs_text_retry ( penum )	641:4:23478:23498	10967119	17	True				
ANR	10967355	CallExpression	gs_text_retry ( penum )		10967119	0					
ANR	10967356	Callee	gs_text_retry		10967119	0					
ANR	10967357	Identifier	gs_text_retry		10967119	0					
ANR	10967358	ArgumentList	penum		10967119	1					
ANR	10967359	Argument	penum		10967119	0					
ANR	10967360	Identifier	penum		10967119	0					
ANR	10967361	ExpressionStatement	pfont1 = ( gs_font_type1 * ) pfont	642:4:23504:23536	10967119	18	True				
ANR	10967362	AssignmentExpression	pfont1 = ( gs_font_type1 * ) pfont		10967119	0		=			
ANR	10967363	Identifier	pfont1		10967119	0					
ANR	10967364	CastExpression	( gs_font_type1 * ) pfont		10967119	1					
ANR	10967365	CastTarget	gs_font_type1 *		10967119	0					
ANR	10967366	Identifier	pfont		10967119	1					
ANR	10967367	IfStatement	if ( ( penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0 ) || gs_rootfont ( igs ) -> WMode == 0 )		10967119	19					
ANR	10967368	Condition	( penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0 ) || gs_rootfont ( igs ) -> WMode == 0	643:8:23546:23668	10967119	0	True				
ANR	10967369	OrExpression	( penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0 ) || gs_rootfont ( igs ) -> WMode == 0		10967119	0		||			
ANR	10967370	AndExpression	penum -> FontBBox_as_Metrics2 . x == 0 && penum -> FontBBox_as_Metrics2 . y == 0		10967119	0		&&			
ANR	10967371	EqualityExpression	penum -> FontBBox_as_Metrics2 . x == 0		10967119	0		==			
ANR	10967372	MemberAccess	penum -> FontBBox_as_Metrics2 . x		10967119	0					
ANR	10967373	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10967119	0					
ANR	10967374	Identifier	penum		10967119	0					
ANR	10967375	Identifier	FontBBox_as_Metrics2		10967119	1					
ANR	10967376	Identifier	x		10967119	1					
ANR	10967377	PrimaryExpression	0		10967119	1					
ANR	10967378	EqualityExpression	penum -> FontBBox_as_Metrics2 . y == 0		10967119	1		==			
ANR	10967379	MemberAccess	penum -> FontBBox_as_Metrics2 . y		10967119	0					
ANR	10967380	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10967119	0					
ANR	10967381	Identifier	penum		10967119	0					
ANR	10967382	Identifier	FontBBox_as_Metrics2		10967119	1					
ANR	10967383	Identifier	y		10967119	1					
ANR	10967384	PrimaryExpression	0		10967119	1					
ANR	10967385	EqualityExpression	gs_rootfont ( igs ) -> WMode == 0		10967119	1		==			
ANR	10967386	PtrMemberAccess	gs_rootfont ( igs ) -> WMode		10967119	0					
ANR	10967387	CallExpression	gs_rootfont ( igs )		10967119	0					
ANR	10967388	Callee	gs_rootfont		10967119	0					
ANR	10967389	Identifier	gs_rootfont		10967119	0					
ANR	10967390	ArgumentList	igs		10967119	1					
ANR	10967391	Argument	igs		10967119	0					
ANR	10967392	Identifier	igs		10967119	0					
ANR	10967393	Identifier	WMode		10967119	1					
ANR	10967394	PrimaryExpression	0		10967119	1					
ANR	10967395	CompoundStatement		47:39:1591:1591	10967119	1					
ANR	10967396	ExpressionStatement	"code = zchar_get_metrics ( pbfont , op - 1 , cxs . sbw )"	646:8:23682:23731	10967119	0	True				
ANR	10967397	AssignmentExpression	"code = zchar_get_metrics ( pbfont , op - 1 , cxs . sbw )"		10967119	0		=			
ANR	10967398	Identifier	code		10967119	0					
ANR	10967399	CallExpression	"zchar_get_metrics ( pbfont , op - 1 , cxs . sbw )"		10967119	1					
ANR	10967400	Callee	zchar_get_metrics		10967119	0					
ANR	10967401	Identifier	zchar_get_metrics		10967119	0					
ANR	10967402	ArgumentList	pbfont		10967119	1					
ANR	10967403	Argument	pbfont		10967119	0					
ANR	10967404	Identifier	pbfont		10967119	0					
ANR	10967405	Argument	op - 1		10967119	1					
ANR	10967406	AdditiveExpression	op - 1		10967119	0		-			
ANR	10967407	Identifier	op		10967119	0					
ANR	10967408	PrimaryExpression	1		10967119	1					
ANR	10967409	Argument	cxs . sbw		10967119	2					
ANR	10967410	MemberAccess	cxs . sbw		10967119	0					
ANR	10967411	Identifier	cxs		10967119	0					
ANR	10967412	Identifier	sbw		10967119	1					
ANR	10967413	IfStatement	if ( code < 0 )		10967119	1					
ANR	10967414	Condition	code < 0	647:12:23745:23752	10967119	0	True				
ANR	10967415	RelationalExpression	code < 0		10967119	0		<			
ANR	10967416	Identifier	code		10967119	0					
ANR	10967417	PrimaryExpression	0		10967119	1					
ANR	10967418	ReturnStatement	return code ;	648:12:23767:23778	10967119	1	True				
ANR	10967419	Identifier	code		10967119	0					
ANR	10967420	ExpressionStatement	cxs . present = code	649:8:23788:23806	10967119	2	True				
ANR	10967421	AssignmentExpression	cxs . present = code		10967119	0		=			
ANR	10967422	MemberAccess	cxs . present		10967119	0					
ANR	10967423	Identifier	cxs		10967119	0					
ANR	10967424	Identifier	present		10967119	1					
ANR	10967425	Identifier	code		10967119	1					
ANR	10967426	ExpressionStatement	cxs . use_FontBBox_as_Metrics2 = false	650:8:23816:23852	10967119	3	True				
ANR	10967427	AssignmentExpression	cxs . use_FontBBox_as_Metrics2 = false		10967119	0		=			
ANR	10967428	MemberAccess	cxs . use_FontBBox_as_Metrics2		10967119	0					
ANR	10967429	Identifier	cxs		10967119	0					
ANR	10967430	Identifier	use_FontBBox_as_Metrics2		10967119	1					
ANR	10967431	Identifier	false		10967119	1					
ANR	10967432	ElseStatement	else		10967119	0					
ANR	10967433	CompoundStatement		53:12:1785:1785	10967119	0					
ANR	10967434	ExpressionStatement	cxs . sbw [ 0 ] = penum -> FontBBox_as_Metrics2 . x / 2	652:8:23876:23922	10967119	0	True				
ANR	10967435	AssignmentExpression	cxs . sbw [ 0 ] = penum -> FontBBox_as_Metrics2 . x / 2		10967119	0		=			
ANR	10967436	ArrayIndexing	cxs . sbw [ 0 ]		10967119	0					
ANR	10967437	MemberAccess	cxs . sbw		10967119	0					
ANR	10967438	Identifier	cxs		10967119	0					
ANR	10967439	Identifier	sbw		10967119	1					
ANR	10967440	PrimaryExpression	0		10967119	1					
ANR	10967441	MultiplicativeExpression	penum -> FontBBox_as_Metrics2 . x / 2		10967119	1		/			
ANR	10967442	MemberAccess	penum -> FontBBox_as_Metrics2 . x		10967119	0					
ANR	10967443	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10967119	0					
ANR	10967444	Identifier	penum		10967119	0					
ANR	10967445	Identifier	FontBBox_as_Metrics2		10967119	1					
ANR	10967446	Identifier	x		10967119	1					
ANR	10967447	PrimaryExpression	2		10967119	1					
ANR	10967448	ExpressionStatement	cxs . sbw [ 1 ] = penum -> FontBBox_as_Metrics2 . y	653:8:23932:23974	10967119	1	True				
ANR	10967449	AssignmentExpression	cxs . sbw [ 1 ] = penum -> FontBBox_as_Metrics2 . y		10967119	0		=			
ANR	10967450	ArrayIndexing	cxs . sbw [ 1 ]		10967119	0					
ANR	10967451	MemberAccess	cxs . sbw		10967119	0					
ANR	10967452	Identifier	cxs		10967119	0					
ANR	10967453	Identifier	sbw		10967119	1					
ANR	10967454	PrimaryExpression	1		10967119	1					
ANR	10967455	MemberAccess	penum -> FontBBox_as_Metrics2 . y		10967119	1					
ANR	10967456	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10967119	0					
ANR	10967457	Identifier	penum		10967119	0					
ANR	10967458	Identifier	FontBBox_as_Metrics2		10967119	1					
ANR	10967459	Identifier	y		10967119	1					
ANR	10967460	ExpressionStatement	cxs . sbw [ 2 ] = 0	654:8:23984:23998	10967119	2	True				
ANR	10967461	AssignmentExpression	cxs . sbw [ 2 ] = 0		10967119	0		=			
ANR	10967462	ArrayIndexing	cxs . sbw [ 2 ]		10967119	0					
ANR	10967463	MemberAccess	cxs . sbw		10967119	0					
ANR	10967464	Identifier	cxs		10967119	0					
ANR	10967465	Identifier	sbw		10967119	1					
ANR	10967466	PrimaryExpression	2		10967119	1					
ANR	10967467	PrimaryExpression	0		10967119	1					
ANR	10967468	ExpressionStatement	cxs . sbw [ 3 ] = - penum -> FontBBox_as_Metrics2 . x	655:8:24008:24051	10967119	3	True				
ANR	10967469	AssignmentExpression	cxs . sbw [ 3 ] = - penum -> FontBBox_as_Metrics2 . x		10967119	0		=			
ANR	10967470	ArrayIndexing	cxs . sbw [ 3 ]		10967119	0					
ANR	10967471	MemberAccess	cxs . sbw		10967119	0					
ANR	10967472	Identifier	cxs		10967119	0					
ANR	10967473	Identifier	sbw		10967119	1					
ANR	10967474	PrimaryExpression	3		10967119	1					
ANR	10967475	UnaryOperationExpression	- penum -> FontBBox_as_Metrics2 . x		10967119	1					
ANR	10967476	UnaryOperator	-		10967119	0					
ANR	10967477	MemberAccess	penum -> FontBBox_as_Metrics2 . x		10967119	1					
ANR	10967478	PtrMemberAccess	penum -> FontBBox_as_Metrics2		10967119	0					
ANR	10967479	Identifier	penum		10967119	0					
ANR	10967480	Identifier	FontBBox_as_Metrics2		10967119	1					
ANR	10967481	Identifier	x		10967119	1					
ANR	10967482	ExpressionStatement	cxs . use_FontBBox_as_Metrics2 = true	656:8:24072:24107	10967119	4	True				
ANR	10967483	AssignmentExpression	cxs . use_FontBBox_as_Metrics2 = true		10967119	0		=			
ANR	10967484	MemberAccess	cxs . use_FontBBox_as_Metrics2		10967119	0					
ANR	10967485	Identifier	cxs		10967119	0					
ANR	10967486	Identifier	use_FontBBox_as_Metrics2		10967119	1					
ANR	10967487	Identifier	true		10967119	1					
ANR	10967488	ExpressionStatement	cxs . present = metricsSideBearingAndWidth	657:8:24117:24157	10967119	5	True				
ANR	10967489	AssignmentExpression	cxs . present = metricsSideBearingAndWidth		10967119	0		=			
ANR	10967490	MemberAccess	cxs . present		10967119	0					
ANR	10967491	Identifier	cxs		10967119	0					
ANR	10967492	Identifier	present		10967119	1					
ANR	10967493	Identifier	metricsSideBearingAndWidth		10967119	1					
ANR	10967494	ExpressionStatement	"code = type1_exec_init ( & cxs . cis , penum , igs , pfont1 )"	659:4:24169:24221	10967119	20	True				
ANR	10967495	AssignmentExpression	"code = type1_exec_init ( & cxs . cis , penum , igs , pfont1 )"		10967119	0		=			
ANR	10967496	Identifier	code		10967119	0					
ANR	10967497	CallExpression	"type1_exec_init ( & cxs . cis , penum , igs , pfont1 )"		10967119	1					
ANR	10967498	Callee	type1_exec_init		10967119	0					
ANR	10967499	Identifier	type1_exec_init		10967119	0					
ANR	10967500	ArgumentList	& cxs . cis		10967119	1					
ANR	10967501	Argument	& cxs . cis		10967119	0					
ANR	10967502	UnaryOperationExpression	& cxs . cis		10967119	0					
ANR	10967503	UnaryOperator	&		10967119	0					
ANR	10967504	MemberAccess	cxs . cis		10967119	1					
ANR	10967505	Identifier	cxs		10967119	0					
ANR	10967506	Identifier	cis		10967119	1					
ANR	10967507	Argument	penum		10967119	1					
ANR	10967508	Identifier	penum		10967119	0					
ANR	10967509	Argument	igs		10967119	2					
ANR	10967510	Identifier	igs		10967119	0					
ANR	10967511	Argument	pfont1		10967119	3					
ANR	10967512	Identifier	pfont1		10967119	0					
ANR	10967513	IfStatement	if ( code < 0 )		10967119	21					
ANR	10967514	Condition	code < 0	660:8:24231:24238	10967119	0	True				
ANR	10967515	RelationalExpression	code < 0		10967119	0		<			
ANR	10967516	Identifier	code		10967119	0					
ANR	10967517	PrimaryExpression	0		10967119	1					
ANR	10967518	ReturnStatement	return code ;	661:8:24249:24260	10967119	1	True				
ANR	10967519	Identifier	code		10967119	0					
ANR	10967520	ExpressionStatement	cxs . char_bbox = pfont1 -> FontBBox	662:4:24266:24298	10967119	22	True				
ANR	10967521	AssignmentExpression	cxs . char_bbox = pfont1 -> FontBBox		10967119	0		=			
ANR	10967522	MemberAccess	cxs . char_bbox		10967119	0					
ANR	10967523	Identifier	cxs		10967119	0					
ANR	10967524	Identifier	char_bbox		10967119	1					
ANR	10967525	PtrMemberAccess	pfont1 -> FontBBox		10967119	1					
ANR	10967526	Identifier	pfont1		10967119	0					
ANR	10967527	Identifier	FontBBox		10967119	1					
ANR	10967528	ExpressionStatement	"code = type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , exec_cont )"	663:4:24304:24365	10967119	23	True				
ANR	10967529	AssignmentExpression	"code = type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , exec_cont )"		10967119	0		=			
ANR	10967530	Identifier	code		10967119	0					
ANR	10967531	CallExpression	"type1exec_bbox ( i_ctx_p , penum , & cxs , pfont , exec_cont )"		10967119	1					
ANR	10967532	Callee	type1exec_bbox		10967119	0					
ANR	10967533	Identifier	type1exec_bbox		10967119	0					
ANR	10967534	ArgumentList	i_ctx_p		10967119	1					
ANR	10967535	Argument	i_ctx_p		10967119	0					
ANR	10967536	Identifier	i_ctx_p		10967119	0					
ANR	10967537	Argument	penum		10967119	1					
ANR	10967538	Identifier	penum		10967119	0					
ANR	10967539	Argument	& cxs		10967119	2					
ANR	10967540	UnaryOperationExpression	& cxs		10967119	0					
ANR	10967541	UnaryOperator	&		10967119	0					
ANR	10967542	Identifier	cxs		10967119	1					
ANR	10967543	Argument	pfont		10967119	3					
ANR	10967544	Identifier	pfont		10967119	0					
ANR	10967545	Argument	exec_cont		10967119	4					
ANR	10967546	Identifier	exec_cont		10967119	0					
ANR	10967547	ReturnStatement	return code ;	664:4:24371:24382	10967119	24	True				
ANR	10967548	Identifier	code		10967119	0					
ANR	10967549	ReturnType	static int		10967119	1					
ANR	10967550	Identifier	bbox_draw		10967119	2					
ANR	10967551	ParameterList	"i_ctx_t * i_ctx_p , int ( * draw ) ( gs_gstate * ) , op_proc_t * exec_cont"		10967119	3					
ANR	10967552	Parameter	i_ctx_t * i_ctx_p	598:10:22014:22029	10967119	0	True				
ANR	10967553	ParameterType	i_ctx_t *		10967119	0					
ANR	10967554	Identifier	i_ctx_p		10967119	1					
ANR	10967555	Parameter	int ( * draw ) ( gs_gstate * )	598:28:22032:22055	10967119	1	True				
ANR	10967556	ParameterType	(( gs_gstate * ) int) *		10967119	0					
ANR	10967557	Identifier	draw		10967119	1					
ANR	10967558	Parameter	op_proc_t * exec_cont	598:54:22058:22077	10967119	2	True				
ANR	10967559	ParameterType	op_proc_t *		10967119	0					
ANR	10967560	Identifier	exec_cont		10967119	1					
ANR	10967561	CFGEntryNode	ENTRY		10967119		True				
ANR	10967562	CFGExitNode	EXIT		10967119		True				
ANR	10967563	Symbol	op_show_find		10967119						
ANR	10967564	Symbol	& cxs		10967119						
ANR	10967565	Symbol	bbox		10967119						
ANR	10967566	Symbol	gs_error_undefined		10967119						
ANR	10967567	Symbol	osp		10967119						
ANR	10967568	Symbol	bbox . q . x		10967119						
ANR	10967569	Symbol	bbox . q . y		10967119						
ANR	10967570	Symbol	cxs . present		10967119						
ANR	10967571	Symbol	igs		10967119						
ANR	10967572	Symbol	type1_exec_init		10967119						
ANR	10967573	Symbol	penum -> FontBBox_as_Metrics2		10967119						
ANR	10967574	Symbol	exec_cont		10967119						
ANR	10967575	Symbol	* pbfont		10967119						
ANR	10967576	Symbol	& cxs . cis		10967119						
ANR	10967577	Symbol	gs_stroke		10967119						
ANR	10967578	Symbol	* gs_rootfont		10967119						
ANR	10967579	Symbol	cxs		10967119						
ANR	10967580	Symbol	gs_currentlinewidth		10967119						
ANR	10967581	Symbol	* pfont1		10967119						
ANR	10967582	Symbol	pfont1		10967119						
ANR	10967583	Symbol	font_uses_charstrings		10967119						
ANR	10967584	Symbol	igs -> in_cachedevice		10967119						
ANR	10967585	Symbol	penum		10967119						
ANR	10967586	Symbol	& bbox		10967119						
ANR	10967587	Symbol	pfont1 -> FontBBox		10967119						
ANR	10967588	Symbol	cxs . sbw		10967119						
ANR	10967589	Symbol	i_ctx_p		10967119						
ANR	10967590	Symbol	cxs . use_FontBBox_as_Metrics2		10967119						
ANR	10967591	Symbol	true		10967119						
ANR	10967592	Symbol	cxs . char_bbox		10967119						
ANR	10967593	Symbol	bbox . p . y		10967119						
ANR	10967594	Symbol	zchar_get_metrics		10967119						
ANR	10967595	Symbol	bbox . p . x		10967119						
ANR	10967596	Symbol	* igs		10967119						
ANR	10967597	Symbol	gs_pathbbox		10967119						
ANR	10967598	Symbol	* penum		10967119						
ANR	10967599	Symbol	code		10967119						
ANR	10967600	Symbol	* cxs . sbw		10967119						
ANR	10967601	Symbol	gs_error_undefinedresult		10967119						
ANR	10967602	Symbol	gs_rootfont		10967119						
ANR	10967603	Symbol	op		10967119						
ANR	10967604	Symbol	bbox . q		10967119						
ANR	10967605	Symbol	metricsSideBearingAndWidth		10967119						
ANR	10967606	Symbol	pfont		10967119						
ANR	10967607	Symbol	& pfont		10967119						
ANR	10967608	Symbol	false		10967119						
ANR	10967609	Symbol	rect_within		10967119						
ANR	10967610	Symbol	type1exec_bbox		10967119						
ANR	10967611	Symbol	font_param		10967119						
ANR	10967612	Symbol	draw		10967119						
ANR	10967613	Symbol	pbfont -> FontBBox		10967119						
ANR	10967614	Symbol	bbox . p		10967119						
ANR	10967615	Symbol	pbfont		10967119						
ANR	10967616	Symbol	penum -> FontBBox_as_Metrics2 . x		10967119						
ANR	10967617	Symbol	penum -> FontBBox_as_Metrics2 . y		10967119						
ANR	10967618	Symbol	* cxs		10967119						
ANR	10967619	Symbol	width		10967119						
ANR	10967620	Symbol	gs_rootfont ( igs ) -> WMode		10967119						
ANR	10967621	Symbol	nobbox_draw		10967119						
ANR	10967622	Function	bbox_fill	666:0:24386:24657							
ANR	10967623	FunctionDef	bbox_fill (i_ctx_t * i_ctx_p)		10967622	0					
ANR	10967624	CompoundStatement		668:0:24425:24657	10967622	0					
ANR	10967625	IdentifierDeclStatement	op_proc_t exec_cont = 0 ;	669:4:24431:24454	10967622	0	True				
ANR	10967626	IdentifierDecl	exec_cont = 0		10967622	0					
ANR	10967627	IdentifierDeclType	op_proc_t		10967622	0					
ANR	10967628	Identifier	exec_cont		10967622	1					
ANR	10967629	AssignmentExpression	exec_cont = 0		10967622	2		=			
ANR	10967630	Identifier	exec_cont		10967622	0					
ANR	10967631	PrimaryExpression	0		10967622	1					
ANR	10967632	IdentifierDeclStatement	int code ;	670:4:24460:24468	10967622	1	True				
ANR	10967633	IdentifierDecl	code		10967622	0					
ANR	10967634	IdentifierDeclType	int		10967622	0					
ANR	10967635	Identifier	code		10967622	1					
ANR	10967636	ExpressionStatement	"code = bbox_draw ( i_ctx_p , GS_CHAR_FILL , & exec_cont )"	673:4:24512:24563	10967622	2	True				
ANR	10967637	AssignmentExpression	"code = bbox_draw ( i_ctx_p , GS_CHAR_FILL , & exec_cont )"		10967622	0		=			
ANR	10967638	Identifier	code		10967622	0					
ANR	10967639	CallExpression	"bbox_draw ( i_ctx_p , GS_CHAR_FILL , & exec_cont )"		10967622	1					
ANR	10967640	Callee	bbox_draw		10967622	0					
ANR	10967641	Identifier	bbox_draw		10967622	0					
ANR	10967642	ArgumentList	i_ctx_p		10967622	1					
ANR	10967643	Argument	i_ctx_p		10967622	0					
ANR	10967644	Identifier	i_ctx_p		10967622	0					
ANR	10967645	Argument	GS_CHAR_FILL		10967622	1					
ANR	10967646	Identifier	GS_CHAR_FILL		10967622	0					
ANR	10967647	Argument	& exec_cont		10967622	2					
ANR	10967648	UnaryOperationExpression	& exec_cont		10967622	0					
ANR	10967649	UnaryOperator	&		10967622	0					
ANR	10967650	Identifier	exec_cont		10967622	1					
ANR	10967651	IfStatement	if ( code >= 0 && exec_cont != 0 )		10967622	3					
ANR	10967652	Condition	code >= 0 && exec_cont != 0	674:8:24573:24599	10967622	0	True				
ANR	10967653	AndExpression	code >= 0 && exec_cont != 0		10967622	0		&&			
ANR	10967654	RelationalExpression	code >= 0		10967622	0		>=			
ANR	10967655	Identifier	code		10967622	0					
ANR	10967656	PrimaryExpression	0		10967622	1					
ANR	10967657	EqualityExpression	exec_cont != 0		10967622	1		!=			
ANR	10967658	Identifier	exec_cont		10967622	0					
ANR	10967659	PrimaryExpression	0		10967622	1					
ANR	10967660	ExpressionStatement	code = ( * exec_cont ) ( i_ctx_p )	675:8:24610:24638	10967622	1	True				
ANR	10967661	AssignmentExpression	code = ( * exec_cont ) ( i_ctx_p )		10967622	0		=			
ANR	10967662	Identifier	code		10967622	0					
ANR	10967663	CallExpression	( * exec_cont ) ( i_ctx_p )		10967622	1					
ANR	10967664	Callee	* exec_cont		10967622	0					
ANR	10967665	UnaryOperationExpression	* exec_cont		10967622	0					
ANR	10967666	UnaryOperator	*		10967622	0					
ANR	10967667	Identifier	exec_cont		10967622	1					
ANR	10967668	ArgumentList	i_ctx_p		10967622	1					
ANR	10967669	Argument	i_ctx_p		10967622	0					
ANR	10967670	Identifier	i_ctx_p		10967622	0					
ANR	10967671	ReturnStatement	return code ;	676:4:24644:24655	10967622	4	True				
ANR	10967672	Identifier	code		10967622	0					
ANR	10967673	ReturnType	static int		10967622	1					
ANR	10967674	Identifier	bbox_fill		10967622	2					
ANR	10967675	ParameterList	i_ctx_t * i_ctx_p		10967622	3					
ANR	10967676	Parameter	i_ctx_t * i_ctx_p	667:10:24407:24422	10967622	0	True				
ANR	10967677	ParameterType	i_ctx_t *		10967622	0					
ANR	10967678	Identifier	i_ctx_p		10967622	1					
ANR	10967679	CFGEntryNode	ENTRY		10967622		True				
ANR	10967680	CFGExitNode	EXIT		10967622		True				
ANR	10967681	Symbol	bbox_draw		10967622						
ANR	10967682	Symbol	code		10967622						
ANR	10967683	Symbol	* exec_cont		10967622						
ANR	10967684	Symbol	i_ctx_p		10967622						
ANR	10967685	Symbol	& exec_cont		10967622						
ANR	10967686	Symbol	exec_cont		10967622						
ANR	10967687	Symbol	GS_CHAR_FILL		10967622						
ANR	10967688	Function	bbox_stroke	678:0:24659:24892							
ANR	10967689	FunctionDef	bbox_stroke (i_ctx_t * i_ctx_p)		10967688	0					
ANR	10967690	CompoundStatement		680:0:24700:24892	10967688	0					
ANR	10967691	IdentifierDeclStatement	op_proc_t exec_cont = 0 ;	681:4:24706:24729	10967688	0	True				
ANR	10967692	IdentifierDecl	exec_cont = 0		10967688	0					
ANR	10967693	IdentifierDeclType	op_proc_t		10967688	0					
ANR	10967694	Identifier	exec_cont		10967688	1					
ANR	10967695	AssignmentExpression	exec_cont = 0		10967688	2		=			
ANR	10967696	Identifier	exec_cont		10967688	0					
ANR	10967697	PrimaryExpression	0		10967688	1					
ANR	10967698	IdentifierDeclStatement	int code ;	682:4:24735:24743	10967688	1	True				
ANR	10967699	IdentifierDecl	code		10967688	0					
ANR	10967700	IdentifierDeclType	int		10967688	0					
ANR	10967701	Identifier	code		10967688	1					
ANR	10967702	ExpressionStatement	"code = bbox_draw ( i_ctx_p , gs_stroke , & exec_cont )"	684:4:24750:24798	10967688	2	True				
ANR	10967703	AssignmentExpression	"code = bbox_draw ( i_ctx_p , gs_stroke , & exec_cont )"		10967688	0		=			
ANR	10967704	Identifier	code		10967688	0					
ANR	10967705	CallExpression	"bbox_draw ( i_ctx_p , gs_stroke , & exec_cont )"		10967688	1					
ANR	10967706	Callee	bbox_draw		10967688	0					
ANR	10967707	Identifier	bbox_draw		10967688	0					
ANR	10967708	ArgumentList	i_ctx_p		10967688	1					
ANR	10967709	Argument	i_ctx_p		10967688	0					
ANR	10967710	Identifier	i_ctx_p		10967688	0					
ANR	10967711	Argument	gs_stroke		10967688	1					
ANR	10967712	Identifier	gs_stroke		10967688	0					
ANR	10967713	Argument	& exec_cont		10967688	2					
ANR	10967714	UnaryOperationExpression	& exec_cont		10967688	0					
ANR	10967715	UnaryOperator	&		10967688	0					
ANR	10967716	Identifier	exec_cont		10967688	1					
ANR	10967717	IfStatement	if ( code >= 0 && exec_cont != 0 )		10967688	3					
ANR	10967718	Condition	code >= 0 && exec_cont != 0	685:8:24808:24834	10967688	0	True				
ANR	10967719	AndExpression	code >= 0 && exec_cont != 0		10967688	0		&&			
ANR	10967720	RelationalExpression	code >= 0		10967688	0		>=			
ANR	10967721	Identifier	code		10967688	0					
ANR	10967722	PrimaryExpression	0		10967688	1					
ANR	10967723	EqualityExpression	exec_cont != 0		10967688	1		!=			
ANR	10967724	Identifier	exec_cont		10967688	0					
ANR	10967725	PrimaryExpression	0		10967688	1					
ANR	10967726	ExpressionStatement	code = ( * exec_cont ) ( i_ctx_p )	686:8:24845:24873	10967688	1	True				
ANR	10967727	AssignmentExpression	code = ( * exec_cont ) ( i_ctx_p )		10967688	0		=			
ANR	10967728	Identifier	code		10967688	0					
ANR	10967729	CallExpression	( * exec_cont ) ( i_ctx_p )		10967688	1					
ANR	10967730	Callee	* exec_cont		10967688	0					
ANR	10967731	UnaryOperationExpression	* exec_cont		10967688	0					
ANR	10967732	UnaryOperator	*		10967688	0					
ANR	10967733	Identifier	exec_cont		10967688	1					
ANR	10967734	ArgumentList	i_ctx_p		10967688	1					
ANR	10967735	Argument	i_ctx_p		10967688	0					
ANR	10967736	Identifier	i_ctx_p		10967688	0					
ANR	10967737	ReturnStatement	return code ;	687:4:24879:24890	10967688	4	True				
ANR	10967738	Identifier	code		10967688	0					
ANR	10967739	ReturnType	static int		10967688	1					
ANR	10967740	Identifier	bbox_stroke		10967688	2					
ANR	10967741	ParameterList	i_ctx_t * i_ctx_p		10967688	3					
ANR	10967742	Parameter	i_ctx_t * i_ctx_p	679:12:24682:24697	10967688	0	True				
ANR	10967743	ParameterType	i_ctx_t *		10967688	0					
ANR	10967744	Identifier	i_ctx_p		10967688	1					
ANR	10967745	CFGEntryNode	ENTRY		10967688		True				
ANR	10967746	CFGExitNode	EXIT		10967688		True				
ANR	10967747	Symbol	bbox_draw		10967688						
ANR	10967748	Symbol	code		10967688						
ANR	10967749	Symbol	* exec_cont		10967688						
ANR	10967750	Symbol	i_ctx_p		10967688						
ANR	10967751	Symbol	& exec_cont		10967688						
ANR	10967752	Symbol	exec_cont		10967688						
ANR	10967753	Symbol	gs_stroke		10967688						
ANR	10967754	Function	type1_continue_dispatch	694:0:25027:26744							
ANR	10967755	FunctionDef	"type1_continue_dispatch (i_ctx_t * i_ctx_p , gs_type1exec_state * pcxs , const ref * pcref , ref * pos , int num_args)"		10967754	0					
ANR	10967756	CompoundStatement		697:0:25173:26744	10967754	0					
ANR	10967757	IdentifierDeclStatement	int value ;	698:4:25179:25188	10967754	0	True				
ANR	10967758	IdentifierDecl	value		10967754	0					
ANR	10967759	IdentifierDeclType	int		10967754	0					
ANR	10967760	Identifier	value		10967754	1					
ANR	10967761	IdentifierDeclStatement	int code ;	699:4:25194:25202	10967754	1	True				
ANR	10967762	IdentifierDecl	code		10967754	0					
ANR	10967763	IdentifierDeclType	int		10967754	0					
ANR	10967764	Identifier	code		10967754	1					
ANR	10967765	IdentifierDeclStatement	gs_glyph_data_t cs_data ;	700:4:25208:25231	10967754	2	True				
ANR	10967766	IdentifierDecl	cs_data		10967754	0					
ANR	10967767	IdentifierDeclType	gs_glyph_data_t		10967754	0					
ANR	10967768	Identifier	cs_data		10967754	1					
ANR	10967769	IdentifierDeclStatement	gs_glyph_data_t * pcsd ;	701:4:25237:25258	10967754	3	True				
ANR	10967770	IdentifierDecl	* pcsd		10967754	0					
ANR	10967771	IdentifierDeclType	gs_glyph_data_t *		10967754	0					
ANR	10967772	Identifier	pcsd		10967754	1					
ANR	10967773	ExpressionStatement	cs_data . memory = imemory	703:4:25265:25289	10967754	4	True				
ANR	10967774	AssignmentExpression	cs_data . memory = imemory		10967754	0		=			
ANR	10967775	MemberAccess	cs_data . memory		10967754	0					
ANR	10967776	Identifier	cs_data		10967754	0					
ANR	10967777	Identifier	memory		10967754	1					
ANR	10967778	Identifier	imemory		10967754	1					
ANR	10967779	IfStatement	if ( pcref == 0 )		10967754	5					
ANR	10967780	Condition	pcref == 0	704:8:25299:25308	10967754	0	True				
ANR	10967781	EqualityExpression	pcref == 0		10967754	0		==			
ANR	10967782	Identifier	pcref		10967754	0					
ANR	10967783	PrimaryExpression	0		10967754	1					
ANR	10967784	CompoundStatement		8:20:137:137	10967754	1					
ANR	10967785	ExpressionStatement	pcsd = 0	705:8:25321:25329	10967754	0	True				
ANR	10967786	AssignmentExpression	pcsd = 0		10967754	0		=			
ANR	10967787	Identifier	pcsd		10967754	0					
ANR	10967788	PrimaryExpression	0		10967754	1					
ANR	10967789	ElseStatement	else		10967754	0					
ANR	10967790	CompoundStatement		10:11:168:168	10967754	0					
ANR	10967791	ExpressionStatement	"gs_glyph_data_from_string ( & cs_data , pcref -> value . const_bytes , r_size ( pcref ) , NULL )"	707:8:25352:25468	10967754	0	True				
ANR	10967792	CallExpression	"gs_glyph_data_from_string ( & cs_data , pcref -> value . const_bytes , r_size ( pcref ) , NULL )"		10967754	0					
ANR	10967793	Callee	gs_glyph_data_from_string		10967754	0					
ANR	10967794	Identifier	gs_glyph_data_from_string		10967754	0					
ANR	10967795	ArgumentList	& cs_data		10967754	1					
ANR	10967796	Argument	& cs_data		10967754	0					
ANR	10967797	UnaryOperationExpression	& cs_data		10967754	0					
ANR	10967798	UnaryOperator	&		10967754	0					
ANR	10967799	Identifier	cs_data		10967754	1					
ANR	10967800	Argument	pcref -> value . const_bytes		10967754	1					
ANR	10967801	MemberAccess	pcref -> value . const_bytes		10967754	0					
ANR	10967802	PtrMemberAccess	pcref -> value		10967754	0					
ANR	10967803	Identifier	pcref		10967754	0					
ANR	10967804	Identifier	value		10967754	1					
ANR	10967805	Identifier	const_bytes		10967754	1					
ANR	10967806	Argument	r_size ( pcref )		10967754	2					
ANR	10967807	CallExpression	r_size ( pcref )		10967754	0					
ANR	10967808	Callee	r_size		10967754	0					
ANR	10967809	Identifier	r_size		10967754	0					
ANR	10967810	ArgumentList	pcref		10967754	1					
ANR	10967811	Argument	pcref		10967754	0					
ANR	10967812	Identifier	pcref		10967754	0					
ANR	10967813	Argument	NULL		10967754	3					
ANR	10967814	Identifier	NULL		10967754	0					
ANR	10967815	ExpressionStatement	pcsd = & cs_data	709:8:25478:25493	10967754	1	True				
ANR	10967816	AssignmentExpression	pcsd = & cs_data		10967754	0		=			
ANR	10967817	Identifier	pcsd		10967754	0					
ANR	10967818	UnaryOperationExpression	& cs_data		10967754	1					
ANR	10967819	UnaryOperator	&		10967754	0					
ANR	10967820	Identifier	cs_data		10967754	1					
ANR	10967821	ExpressionStatement	pcxs -> i_ctx_p = i_ctx_p	718:4:25863:25886	10967754	6	True				
ANR	10967822	AssignmentExpression	pcxs -> i_ctx_p = i_ctx_p		10967754	0		=			
ANR	10967823	PtrMemberAccess	pcxs -> i_ctx_p		10967754	0					
ANR	10967824	Identifier	pcxs		10967754	0					
ANR	10967825	Identifier	i_ctx_p		10967754	1					
ANR	10967826	Identifier	i_ctx_p		10967754	1					
ANR	10967827	ExpressionStatement	pcxs -> num_args = num_args	719:4:25892:25917	10967754	7	True				
ANR	10967828	AssignmentExpression	pcxs -> num_args = num_args		10967754	0		=			
ANR	10967829	PtrMemberAccess	pcxs -> num_args		10967754	0					
ANR	10967830	Identifier	pcxs		10967754	0					
ANR	10967831	Identifier	num_args		10967754	1					
ANR	10967832	Identifier	num_args		10967754	1					
ANR	10967833	ExpressionStatement	"memcpy ( pcxs -> save_args , osp - ( num_args - 1 ) , num_args * sizeof ( ref ) )"	720:4:25923:25992	10967754	8	True				
ANR	10967834	CallExpression	"memcpy ( pcxs -> save_args , osp - ( num_args - 1 ) , num_args * sizeof ( ref ) )"		10967754	0					
ANR	10967835	Callee	memcpy		10967754	0					
ANR	10967836	Identifier	memcpy		10967754	0					
ANR	10967837	ArgumentList	pcxs -> save_args		10967754	1					
ANR	10967838	Argument	pcxs -> save_args		10967754	0					
ANR	10967839	PtrMemberAccess	pcxs -> save_args		10967754	0					
ANR	10967840	Identifier	pcxs		10967754	0					
ANR	10967841	Identifier	save_args		10967754	1					
ANR	10967842	Argument	osp - ( num_args - 1 )		10967754	1					
ANR	10967843	AdditiveExpression	osp - ( num_args - 1 )		10967754	0		-			
ANR	10967844	Identifier	osp		10967754	0					
ANR	10967845	AdditiveExpression	num_args - 1		10967754	1		-			
ANR	10967846	Identifier	num_args		10967754	0					
ANR	10967847	PrimaryExpression	1		10967754	1					
ANR	10967848	Argument	num_args * sizeof ( ref )		10967754	2					
ANR	10967849	MultiplicativeExpression	num_args * sizeof ( ref )		10967754	0		*			
ANR	10967850	Identifier	num_args		10967754	0					
ANR	10967851	SizeofExpression	sizeof ( ref )		10967754	1					
ANR	10967852	Sizeof	sizeof		10967754	0					
ANR	10967853	SizeofOperand	ref		10967754	1					
ANR	10967854	ExpressionStatement	osp -= num_args	721:4:25998:26013	10967754	9	True				
ANR	10967855	AssignmentExpression	osp -= num_args		10967754	0		-=			
ANR	10967856	Identifier	osp		10967754	0					
ANR	10967857	Identifier	num_args		10967754	1					
ANR	10967858	ExpressionStatement	"gs_type1_set_callback_data ( & pcxs -> cis , pcxs )"	722:4:26019:26063	10967754	10	True				
ANR	10967859	CallExpression	"gs_type1_set_callback_data ( & pcxs -> cis , pcxs )"		10967754	0					
ANR	10967860	Callee	gs_type1_set_callback_data		10967754	0					
ANR	10967861	Identifier	gs_type1_set_callback_data		10967754	0					
ANR	10967862	ArgumentList	& pcxs -> cis		10967754	1					
ANR	10967863	Argument	& pcxs -> cis		10967754	0					
ANR	10967864	UnaryOperationExpression	& pcxs -> cis		10967754	0					
ANR	10967865	UnaryOperator	&		10967754	0					
ANR	10967866	PtrMemberAccess	pcxs -> cis		10967754	1					
ANR	10967867	Identifier	pcxs		10967754	0					
ANR	10967868	Identifier	cis		10967754	1					
ANR	10967869	Argument	pcxs		10967754	1					
ANR	10967870	Identifier	pcxs		10967754	0					
ANR	10967871	ExpressionStatement	"code = pcxs -> cis . pfont -> data . interpret ( & pcxs -> cis , pcsd , & value )"	723:4:26069:26133	10967754	11	True				
ANR	10967872	AssignmentExpression	"code = pcxs -> cis . pfont -> data . interpret ( & pcxs -> cis , pcsd , & value )"		10967754	0		=			
ANR	10967873	Identifier	code		10967754	0					
ANR	10967874	CallExpression	"pcxs -> cis . pfont -> data . interpret ( & pcxs -> cis , pcsd , & value )"		10967754	1					
ANR	10967875	Callee	pcxs -> cis . pfont -> data . interpret		10967754	0					
ANR	10967876	MemberAccess	pcxs -> cis . pfont -> data . interpret		10967754	0					
ANR	10967877	PtrMemberAccess	pcxs -> cis . pfont -> data		10967754	0					
ANR	10967878	MemberAccess	pcxs -> cis . pfont		10967754	0					
ANR	10967879	PtrMemberAccess	pcxs -> cis		10967754	0					
ANR	10967880	Identifier	pcxs		10967754	0					
ANR	10967881	Identifier	cis		10967754	1					
ANR	10967882	Identifier	pfont		10967754	1					
ANR	10967883	Identifier	data		10967754	1					
ANR	10967884	Identifier	interpret		10967754	1					
ANR	10967885	ArgumentList	& pcxs -> cis		10967754	1					
ANR	10967886	Argument	& pcxs -> cis		10967754	0					
ANR	10967887	UnaryOperationExpression	& pcxs -> cis		10967754	0					
ANR	10967888	UnaryOperator	&		10967754	0					
ANR	10967889	PtrMemberAccess	pcxs -> cis		10967754	1					
ANR	10967890	Identifier	pcxs		10967754	0					
ANR	10967891	Identifier	cis		10967754	1					
ANR	10967892	Argument	pcsd		10967754	1					
ANR	10967893	Identifier	pcsd		10967754	0					
ANR	10967894	Argument	& value		10967754	2					
ANR	10967895	UnaryOperationExpression	& value		10967754	0					
ANR	10967896	UnaryOperator	&		10967754	0					
ANR	10967897	Identifier	value		10967754	1					
ANR	10967898	SwitchStatement	switch ( code )		10967754	12					
ANR	10967899	Condition	code	724:12:26147:26150	10967754	0	True				
ANR	10967900	Identifier	code		10967754	0					
ANR	10967901	CompoundStatement		28:18:979:979	10967754	1					
ANR	10967902	Label	case type1_result_callothersubr :	725:8:26163:26194	10967754	0	True				
ANR	10967903	Identifier	type1_result_callothersubr		10967754	0					
ANR	10967904	CompoundStatement		34:12:1182:1239	10967754	1					
ANR	10967905	IdentifierDeclStatement	const font_data * pfdata = pfont_data ( gs_currentfont ( igs ) ) ;	730:12:26356:26413	10967754	0	True				
ANR	10967906	IdentifierDecl	* pfdata = pfont_data ( gs_currentfont ( igs ) )		10967754	0					
ANR	10967907	IdentifierDeclType	const font_data *		10967754	0					
ANR	10967908	Identifier	pfdata		10967754	1					
ANR	10967909	AssignmentExpression	* pfdata = pfont_data ( gs_currentfont ( igs ) )		10967754	2		=			
ANR	10967910	Identifier	pfdata		10967754	0					
ANR	10967911	CallExpression	pfont_data ( gs_currentfont ( igs ) )		10967754	1					
ANR	10967912	Callee	pfont_data		10967754	0					
ANR	10967913	Identifier	pfont_data		10967754	0					
ANR	10967914	ArgumentList	gs_currentfont ( igs )		10967754	1					
ANR	10967915	Argument	gs_currentfont ( igs )		10967754	0					
ANR	10967916	CallExpression	gs_currentfont ( igs )		10967754	0					
ANR	10967917	Callee	gs_currentfont		10967754	0					
ANR	10967918	Identifier	gs_currentfont		10967754	0					
ANR	10967919	ArgumentList	igs		10967754	1					
ANR	10967920	Argument	igs		10967754	0					
ANR	10967921	Identifier	igs		10967754	0					
ANR	10967922	ExpressionStatement	"code = array_get ( imemory , & pfdata -> u . type1 . OtherSubrs , ( long ) value , pos )"	732:12:26428:26500	10967754	1	True				
ANR	10967923	AssignmentExpression	"code = array_get ( imemory , & pfdata -> u . type1 . OtherSubrs , ( long ) value , pos )"		10967754	0		=			
ANR	10967924	Identifier	code		10967754	0					
ANR	10967925	CallExpression	"array_get ( imemory , & pfdata -> u . type1 . OtherSubrs , ( long ) value , pos )"		10967754	1					
ANR	10967926	Callee	array_get		10967754	0					
ANR	10967927	Identifier	array_get		10967754	0					
ANR	10967928	ArgumentList	imemory		10967754	1					
ANR	10967929	Argument	imemory		10967754	0					
ANR	10967930	Identifier	imemory		10967754	0					
ANR	10967931	Argument	& pfdata -> u . type1 . OtherSubrs		10967754	1					
ANR	10967932	UnaryOperationExpression	& pfdata -> u . type1 . OtherSubrs		10967754	0					
ANR	10967933	UnaryOperator	&		10967754	0					
ANR	10967934	MemberAccess	pfdata -> u . type1 . OtherSubrs		10967754	1					
ANR	10967935	MemberAccess	pfdata -> u . type1		10967754	0					
ANR	10967936	PtrMemberAccess	pfdata -> u		10967754	0					
ANR	10967937	Identifier	pfdata		10967754	0					
ANR	10967938	Identifier	u		10967754	1					
ANR	10967939	Identifier	type1		10967754	1					
ANR	10967940	Identifier	OtherSubrs		10967754	1					
ANR	10967941	Argument	( long ) value		10967754	2					
ANR	10967942	CastExpression	( long ) value		10967754	0					
ANR	10967943	CastTarget	long		10967754	0					
ANR	10967944	Identifier	value		10967754	1					
ANR	10967945	Argument	pos		10967754	3					
ANR	10967946	Identifier	pos		10967754	0					
ANR	10967947	IfStatement	if ( code >= 0 )		10967754	2					
ANR	10967948	Condition	code >= 0	733:16:26518:26526	10967754	0	True				
ANR	10967949	RelationalExpression	code >= 0		10967754	0		>=			
ANR	10967950	Identifier	code		10967754	0					
ANR	10967951	PrimaryExpression	0		10967754	1					
ANR	10967952	ReturnStatement	return type1_result_callothersubr ;	734:16:26545:26578	10967754	1	True				
ANR	10967953	Identifier	type1_result_callothersubr		10967754	0					
ANR	10967954	ExpressionStatement	"memcpy ( osp + 1 , pcxs -> save_args , num_args * sizeof ( ref ) )"	738:4:26648:26704	10967754	13	True				
ANR	10967955	CallExpression	"memcpy ( osp + 1 , pcxs -> save_args , num_args * sizeof ( ref ) )"		10967754	0					
ANR	10967956	Callee	memcpy		10967754	0					
ANR	10967957	Identifier	memcpy		10967754	0					
ANR	10967958	ArgumentList	osp + 1		10967754	1					
ANR	10967959	Argument	osp + 1		10967754	0					
ANR	10967960	AdditiveExpression	osp + 1		10967754	0		+			
ANR	10967961	Identifier	osp		10967754	0					
ANR	10967962	PrimaryExpression	1		10967754	1					
ANR	10967963	Argument	pcxs -> save_args		10967754	1					
ANR	10967964	PtrMemberAccess	pcxs -> save_args		10967754	0					
ANR	10967965	Identifier	pcxs		10967754	0					
ANR	10967966	Identifier	save_args		10967754	1					
ANR	10967967	Argument	num_args * sizeof ( ref )		10967754	2					
ANR	10967968	MultiplicativeExpression	num_args * sizeof ( ref )		10967754	0		*			
ANR	10967969	Identifier	num_args		10967754	0					
ANR	10967970	SizeofExpression	sizeof ( ref )		10967754	1					
ANR	10967971	Sizeof	sizeof		10967754	0					
ANR	10967972	SizeofOperand	ref		10967754	1					
ANR	10967973	ExpressionStatement	osp += num_args	739:4:26710:26725	10967754	14	True				
ANR	10967974	AssignmentExpression	osp += num_args		10967754	0		+=			
ANR	10967975	Identifier	osp		10967754	0					
ANR	10967976	Identifier	num_args		10967754	1					
ANR	10967977	ReturnStatement	return code ;	740:4:26731:26742	10967754	15	True				
ANR	10967978	Identifier	code		10967754	0					
ANR	10967979	ReturnType	static int		10967754	1					
ANR	10967980	Identifier	type1_continue_dispatch		10967754	2					
ANR	10967981	ParameterList	"i_ctx_t * i_ctx_p , gs_type1exec_state * pcxs , const ref * pcref , ref * pos , int num_args"		10967754	3					
ANR	10967982	Parameter	i_ctx_t * i_ctx_p	695:24:25062:25077	10967754	0	True				
ANR	10967983	ParameterType	i_ctx_t *		10967754	0					
ANR	10967984	Identifier	i_ctx_p		10967754	1					
ANR	10967985	Parameter	gs_type1exec_state * pcxs	695:42:25080:25103	10967754	1	True				
ANR	10967986	ParameterType	gs_type1exec_state *		10967754	0					
ANR	10967987	Identifier	pcxs		10967754	1					
ANR	10967988	Parameter	const ref * pcref	696:24:25130:25146	10967754	2	True				
ANR	10967989	ParameterType	const ref *		10967754	0					
ANR	10967990	Identifier	pcref		10967754	1					
ANR	10967991	Parameter	ref * pos	696:43:25149:25156	10967754	3	True				
ANR	10967992	ParameterType	ref *		10967754	0					
ANR	10967993	Identifier	pos		10967754	1					
ANR	10967994	Parameter	int num_args	696:53:25159:25170	10967754	4	True				
ANR	10967995	ParameterType	int		10967754	0					
ANR	10967996	Identifier	num_args		10967754	1					
ANR	10967997	CFGEntryNode	ENTRY		10967754		True				
ANR	10967998	CFGExitNode	EXIT		10967754		True				
ANR	10967999	Symbol	pcxs -> cis . pfont		10967754						
ANR	10968000	Symbol	* * pcxs		10967754						
ANR	10968001	Symbol	code		10967754						
ANR	10968002	Symbol	& value		10967754						
ANR	10968003	Symbol	* pcxs		10967754						
ANR	10968004	Symbol	& pfdata -> u . type1 . OtherSubrs		10967754						
ANR	10968005	Symbol	pfdata -> u . type1		10967754						
ANR	10968006	Symbol	pfdata -> u		10967754						
ANR	10968007	Symbol	pfdata		10967754						
ANR	10968008	Symbol	osp		10967754						
ANR	10968009	Symbol	pcref -> value . const_bytes		10967754						
ANR	10968010	Symbol	cs_data . memory		10967754						
ANR	10968011	Symbol	igs		10967754						
ANR	10968012	Symbol	pos		10967754						
ANR	10968013	Symbol	num_args		10967754						
ANR	10968014	Symbol	* pcxs -> cis . pfont		10967754						
ANR	10968015	Symbol	r_size		10967754						
ANR	10968016	Symbol	gs_currentfont		10967754						
ANR	10968017	Symbol	pcref		10967754						
ANR	10968018	Symbol	pcxs		10967754						
ANR	10968019	Symbol	imemory		10967754						
ANR	10968020	Symbol	pcref -> value		10967754						
ANR	10968021	Symbol	value		10967754						
ANR	10968022	Symbol	& cs_data		10967754						
ANR	10968023	Symbol	pcxs -> i_ctx_p		10967754						
ANR	10968024	Symbol	NULL		10967754						
ANR	10968025	Symbol	pcxs -> cis . pfont -> data		10967754						
ANR	10968026	Symbol	array_get		10967754						
ANR	10968027	Symbol	pcxs -> cis		10967754						
ANR	10968028	Symbol	pcxs -> cis . pfont -> data . interpret		10967754						
ANR	10968029	Symbol	& pfdata -> u . type1		10967754						
ANR	10968030	Symbol	type1_result_callothersubr		10967754						
ANR	10968031	Symbol	pcsd		10967754						
ANR	10968032	Symbol	pcxs -> save_args		10967754						
ANR	10968033	Symbol	* pcref		10967754						
ANR	10968034	Symbol	pcxs -> num_args		10967754						
ANR	10968035	Symbol	& pcxs -> cis		10967754						
ANR	10968036	Symbol	* pcxs -> cis		10967754						
ANR	10968037	Symbol	* pfdata		10967754						
ANR	10968038	Symbol	i_ctx_p		10967754						
ANR	10968039	Symbol	cs_data		10967754						
ANR	10968040	Symbol	pfont_data		10967754						
ANR	10968041	Symbol	& pfdata -> u		10967754						
ANR	10968042	Function	type1_push_OtherSubr	747:0:26851:27401							
ANR	10968043	FunctionDef	"type1_push_OtherSubr (i_ctx_t * i_ctx_p , const gs_type1exec_state * pcxs , int ( * cont ) ( i_ctx_t * ) , const ref * pos)"		10968042	0					
ANR	10968044	CompoundStatement		750:0:26994:27401	10968042	0					
ANR	10968045	IdentifierDeclStatement	"int i , n = pcxs -> num_args ;"	751:4:27000:27025	10968042	0	True				
ANR	10968046	IdentifierDecl	i		10968042	0					
ANR	10968047	IdentifierDeclType	int		10968042	0					
ANR	10968048	Identifier	i		10968042	1					
ANR	10968049	IdentifierDecl	n = pcxs -> num_args		10968042	1					
ANR	10968050	IdentifierDeclType	int		10968042	0					
ANR	10968051	Identifier	n		10968042	1					
ANR	10968052	AssignmentExpression	n = pcxs -> num_args		10968042	2		=			
ANR	10968053	Identifier	n		10968042	0					
ANR	10968054	PtrMemberAccess	pcxs -> num_args		10968042	1					
ANR	10968055	Identifier	pcxs		10968042	0					
ANR	10968056	Identifier	num_args		10968042	1					
ANR	10968057	ExpressionStatement	push_op_estack ( cont )	753:4:27032:27052	10968042	1	True				
ANR	10968058	CallExpression	push_op_estack ( cont )		10968042	0					
ANR	10968059	Callee	push_op_estack		10968042	0					
ANR	10968060	Identifier	push_op_estack		10968042	0					
ANR	10968061	ArgumentList	cont		10968042	1					
ANR	10968062	Argument	cont		10968042	0					
ANR	10968063	Identifier	cont		10968042	0					
ANR	10968064	ForStatement	for ( i = n ; -- i >= 0 ; )		10968042	2					
ANR	10968065	ForInit	i = n ;	758:9:27221:27226	10968042	0	True				
ANR	10968066	AssignmentExpression	i = n		10968042	0		=			
ANR	10968067	Identifier	i		10968042	0					
ANR	10968068	Identifier	n		10968042	1					
ANR	10968069	Condition	-- i >= 0	758:16:27228:27235	10968042	1	True				
ANR	10968070	RelationalExpression	-- i >= 0		10968042	0		>=			
ANR	10968071	UnaryExpression	-- i		10968042	0					
ANR	10968072	IncDec	--		10968042	0					
ANR	10968073	Identifier	i		10968042	1					
ANR	10968074	PrimaryExpression	0		10968042	1					
ANR	10968075	CompoundStatement		9:28:245:245	10968042	2					
ANR	10968076	ExpressionStatement	* ++ esp = pcxs -> save_args [ i ]	759:8:27250:27277	10968042	0	True				
ANR	10968077	AssignmentExpression	* ++ esp = pcxs -> save_args [ i ]		10968042	0		=			
ANR	10968078	UnaryOperationExpression	* ++ esp		10968042	0					
ANR	10968079	UnaryOperator	*		10968042	0					
ANR	10968080	UnaryExpression	++ esp		10968042	1					
ANR	10968081	IncDec	++		10968042	0					
ANR	10968082	Identifier	esp		10968042	1					
ANR	10968083	ArrayIndexing	pcxs -> save_args [ i ]		10968042	1					
ANR	10968084	PtrMemberAccess	pcxs -> save_args		10968042	0					
ANR	10968085	Identifier	pcxs		10968042	0					
ANR	10968086	Identifier	save_args		10968042	1					
ANR	10968087	Identifier	i		10968042	1					
ANR	10968088	ExpressionStatement	"r_clear_attrs ( esp , a_executable )"	760:8:27287:27319	10968042	1	True				
ANR	10968089	CallExpression	"r_clear_attrs ( esp , a_executable )"		10968042	0					
ANR	10968090	Callee	r_clear_attrs		10968042	0					
ANR	10968091	Identifier	r_clear_attrs		10968042	0					
ANR	10968092	ArgumentList	esp		10968042	1					
ANR	10968093	Argument	esp		10968042	0					
ANR	10968094	Identifier	esp		10968042	0					
ANR	10968095	Argument	a_executable		10968042	1					
ANR	10968096	Identifier	a_executable		10968042	0					
ANR	10968097	ExpressionStatement	++ esp	762:4:27351:27356	10968042	3	True				
ANR	10968098	UnaryExpression	++ esp		10968042	0					
ANR	10968099	IncDec	++		10968042	0					
ANR	10968100	Identifier	esp		10968042	1					
ANR	10968101	ExpressionStatement	* esp = * pos	763:4:27362:27373	10968042	4	True				
ANR	10968102	AssignmentExpression	* esp = * pos		10968042	0		=			
ANR	10968103	UnaryOperationExpression	* esp		10968042	0					
ANR	10968104	UnaryOperator	*		10968042	0					
ANR	10968105	Identifier	esp		10968042	1					
ANR	10968106	UnaryOperationExpression	* pos		10968042	1					
ANR	10968107	UnaryOperator	*		10968042	0					
ANR	10968108	Identifier	pos		10968042	1					
ANR	10968109	ReturnStatement	return o_push_estack ;	764:4:27379:27399	10968042	5	True				
ANR	10968110	Identifier	o_push_estack		10968042	0					
ANR	10968111	ReturnType	static int		10968042	1					
ANR	10968112	Identifier	type1_push_OtherSubr		10968042	2					
ANR	10968113	ParameterList	"i_ctx_t * i_ctx_p , const gs_type1exec_state * pcxs , int ( * cont ) ( i_ctx_t * ) , const ref * pos"		10968042	3					
ANR	10968114	Parameter	i_ctx_t * i_ctx_p	748:21:26883:26898	10968042	0	True				
ANR	10968115	ParameterType	i_ctx_t *		10968042	0					
ANR	10968116	Identifier	i_ctx_p		10968042	1					
ANR	10968117	Parameter	const gs_type1exec_state * pcxs	748:39:26901:26930	10968042	1	True				
ANR	10968118	ParameterType	const gs_type1exec_state *		10968042	0					
ANR	10968119	Identifier	pcxs		10968042	1					
ANR	10968120	Parameter	int ( * cont ) ( i_ctx_t * )	749:21:26954:26975	10968042	2	True				
ANR	10968121	ParameterType	(( i_ctx_t * ) int) *		10968042	0					
ANR	10968122	Identifier	cont		10968042	1					
ANR	10968123	Parameter	const ref * pos	749:45:26978:26991	10968042	3	True				
ANR	10968124	ParameterType	const ref *		10968042	0					
ANR	10968125	Identifier	pos		10968042	1					
ANR	10968126	CFGEntryNode	ENTRY		10968042		True				
ANR	10968127	CFGExitNode	EXIT		10968042		True				
ANR	10968128	Symbol	* * pcxs		10968042						
ANR	10968129	Symbol	esp		10968042						
ANR	10968130	Symbol	* pcxs		10968042						
ANR	10968131	Symbol	i		10968042						
ANR	10968132	Symbol	n		10968042						
ANR	10968133	Symbol	* pcxs -> save_args		10968042						
ANR	10968134	Symbol	pcxs -> save_args		10968042						
ANR	10968135	Symbol	pcxs -> num_args		10968042						
ANR	10968136	Symbol	* i		10968042						
ANR	10968137	Symbol	* esp		10968042						
ANR	10968138	Symbol	pos		10968042						
ANR	10968139	Symbol	i_ctx_p		10968042						
ANR	10968140	Symbol	pcxs		10968042						
ANR	10968141	Symbol	a_executable		10968042						
ANR	10968142	Symbol	cont		10968042						
ANR	10968143	Symbol	* pos		10968042						
ANR	10968144	Symbol	* ++ esp		10968042						
ANR	10968145	Symbol	o_push_estack		10968042						
ANR	10968146	Function	type1_call_OtherSubr	771:0:27529:28185							
ANR	10968147	FunctionDef	"type1_call_OtherSubr (i_ctx_t * i_ctx_p , const gs_type1exec_state * pcxs , int ( * cont ) ( i_ctx_t * ) , const ref * pos)"		10968146	0					
ANR	10968148	CompoundStatement		775:0:27696:28185	10968146	0					
ANR	10968149	IdentifierDeclStatement	"gs_type1exec_state * hpcxs = ialloc_struct ( gs_type1exec_state , & st_gs_type1exec_state , ""type1_call_OtherSubr"" ) ;"	777:4:27759:27898	10968146	0	True				
ANR	10968150	IdentifierDecl	"* hpcxs = ialloc_struct ( gs_type1exec_state , & st_gs_type1exec_state , ""type1_call_OtherSubr"" )"		10968146	0					
ANR	10968151	IdentifierDeclType	gs_type1exec_state *		10968146	0					
ANR	10968152	Identifier	hpcxs		10968146	1					
ANR	10968153	AssignmentExpression	"* hpcxs = ialloc_struct ( gs_type1exec_state , & st_gs_type1exec_state , ""type1_call_OtherSubr"" )"		10968146	2		=			
ANR	10968154	Identifier	hpcxs		10968146	0					
ANR	10968155	CallExpression	"ialloc_struct ( gs_type1exec_state , & st_gs_type1exec_state , ""type1_call_OtherSubr"" )"		10968146	1					
ANR	10968156	Callee	ialloc_struct		10968146	0					
ANR	10968157	Identifier	ialloc_struct		10968146	0					
ANR	10968158	ArgumentList	gs_type1exec_state		10968146	1					
ANR	10968159	Argument	gs_type1exec_state		10968146	0					
ANR	10968160	Identifier	gs_type1exec_state		10968146	0					
ANR	10968161	Argument	& st_gs_type1exec_state		10968146	1					
ANR	10968162	UnaryOperationExpression	& st_gs_type1exec_state		10968146	0					
ANR	10968163	UnaryOperator	&		10968146	0					
ANR	10968164	Identifier	st_gs_type1exec_state		10968146	1					
ANR	10968165	Argument	"""type1_call_OtherSubr"""		10968146	2					
ANR	10968166	PrimaryExpression	"""type1_call_OtherSubr"""		10968146	0					
ANR	10968167	IfStatement	if ( hpcxs == 0 )		10968146	1					
ANR	10968168	Condition	hpcxs == 0	781:8:27909:27918	10968146	0	True				
ANR	10968169	EqualityExpression	hpcxs == 0		10968146	0		==			
ANR	10968170	Identifier	hpcxs		10968146	0					
ANR	10968171	PrimaryExpression	0		10968146	1					
ANR	10968172	ExpressionStatement	return_error ( gs_error_VMerror )	782:8:27929:27959	10968146	1	True				
ANR	10968173	CallExpression	return_error ( gs_error_VMerror )		10968146	0					
ANR	10968174	Callee	return_error		10968146	0					
ANR	10968175	Identifier	return_error		10968146	0					
ANR	10968176	ArgumentList	gs_error_VMerror		10968146	1					
ANR	10968177	Argument	gs_error_VMerror		10968146	0					
ANR	10968178	Identifier	gs_error_VMerror		10968146	0					
ANR	10968179	ExpressionStatement	* hpcxs = * pcxs	783:4:27965:27979	10968146	2	True				
ANR	10968180	AssignmentExpression	* hpcxs = * pcxs		10968146	0		=			
ANR	10968181	UnaryOperationExpression	* hpcxs		10968146	0					
ANR	10968182	UnaryOperator	*		10968146	0					
ANR	10968183	Identifier	hpcxs		10968146	1					
ANR	10968184	UnaryOperationExpression	* pcxs		10968146	1					
ANR	10968185	UnaryOperator	*		10968146	0					
ANR	10968186	Identifier	pcxs		10968146	1					
ANR	10968187	ExpressionStatement	"gs_type1_set_callback_data ( & hpcxs -> cis , hpcxs )"	784:4:27985:28031	10968146	3	True				
ANR	10968188	CallExpression	"gs_type1_set_callback_data ( & hpcxs -> cis , hpcxs )"		10968146	0					
ANR	10968189	Callee	gs_type1_set_callback_data		10968146	0					
ANR	10968190	Identifier	gs_type1_set_callback_data		10968146	0					
ANR	10968191	ArgumentList	& hpcxs -> cis		10968146	1					
ANR	10968192	Argument	& hpcxs -> cis		10968146	0					
ANR	10968193	UnaryOperationExpression	& hpcxs -> cis		10968146	0					
ANR	10968194	UnaryOperator	&		10968146	0					
ANR	10968195	PtrMemberAccess	hpcxs -> cis		10968146	1					
ANR	10968196	Identifier	hpcxs		10968146	0					
ANR	10968197	Identifier	cis		10968146	1					
ANR	10968198	Argument	hpcxs		10968146	1					
ANR	10968199	Identifier	hpcxs		10968146	0					
ANR	10968200	ExpressionStatement	"push_mark_estack ( es_show , op_type1_cleanup )"	785:4:28037:28080	10968146	4	True				
ANR	10968201	CallExpression	"push_mark_estack ( es_show , op_type1_cleanup )"		10968146	0					
ANR	10968202	Callee	push_mark_estack		10968146	0					
ANR	10968203	Identifier	push_mark_estack		10968146	0					
ANR	10968204	ArgumentList	es_show		10968146	1					
ANR	10968205	Argument	es_show		10968146	0					
ANR	10968206	Identifier	es_show		10968146	0					
ANR	10968207	Argument	op_type1_cleanup		10968146	1					
ANR	10968208	Identifier	op_type1_cleanup		10968146	0					
ANR	10968209	ExpressionStatement	++ esp	786:4:28086:28091	10968146	5	True				
ANR	10968210	UnaryExpression	++ esp		10968146	0					
ANR	10968211	IncDec	++		10968146	0					
ANR	10968212	Identifier	esp		10968146	1					
ANR	10968213	ExpressionStatement	"make_istruct ( esp , 0 , hpcxs )"	787:4:28097:28124	10968146	6	True				
ANR	10968214	CallExpression	"make_istruct ( esp , 0 , hpcxs )"		10968146	0					
ANR	10968215	Callee	make_istruct		10968146	0					
ANR	10968216	Identifier	make_istruct		10968146	0					
ANR	10968217	ArgumentList	esp		10968146	1					
ANR	10968218	Argument	esp		10968146	0					
ANR	10968219	Identifier	esp		10968146	0					
ANR	10968220	Argument	0		10968146	1					
ANR	10968221	PrimaryExpression	0		10968146	0					
ANR	10968222	Argument	hpcxs		10968146	2					
ANR	10968223	Identifier	hpcxs		10968146	0					
ANR	10968224	ReturnStatement	"return type1_push_OtherSubr ( i_ctx_p , pcxs , cont , pos ) ;"	788:4:28130:28183	10968146	7	True				
ANR	10968225	CallExpression	"type1_push_OtherSubr ( i_ctx_p , pcxs , cont , pos )"		10968146	0					
ANR	10968226	Callee	type1_push_OtherSubr		10968146	0					
ANR	10968227	Identifier	type1_push_OtherSubr		10968146	0					
ANR	10968228	ArgumentList	i_ctx_p		10968146	1					
ANR	10968229	Argument	i_ctx_p		10968146	0					
ANR	10968230	Identifier	i_ctx_p		10968146	0					
ANR	10968231	Argument	pcxs		10968146	1					
ANR	10968232	Identifier	pcxs		10968146	0					
ANR	10968233	Argument	cont		10968146	2					
ANR	10968234	Identifier	cont		10968146	0					
ANR	10968235	Argument	pos		10968146	3					
ANR	10968236	Identifier	pos		10968146	0					
ANR	10968237	ReturnType	static int		10968146	1					
ANR	10968238	Identifier	type1_call_OtherSubr		10968146	2					
ANR	10968239	ParameterList	"i_ctx_t * i_ctx_p , const gs_type1exec_state * pcxs , int ( * cont ) ( i_ctx_t * ) , const ref * pos"		10968146	3					
ANR	10968240	Parameter	i_ctx_t * i_ctx_p	772:21:27561:27576	10968146	0	True				
ANR	10968241	ParameterType	i_ctx_t *		10968146	0					
ANR	10968242	Identifier	i_ctx_p		10968146	1					
ANR	10968243	Parameter	const gs_type1exec_state * pcxs	772:39:27579:27609	10968146	1	True				
ANR	10968244	ParameterType	const gs_type1exec_state *		10968146	0					
ANR	10968245	Identifier	pcxs		10968146	1					
ANR	10968246	Parameter	int ( * cont ) ( i_ctx_t * )	773:21:27633:27655	10968146	2	True				
ANR	10968247	ParameterType	(( i_ctx_t * ) int) *		10968146	0					
ANR	10968248	Identifier	cont		10968146	1					
ANR	10968249	Parameter	const ref * pos	774:21:27679:27693	10968146	3	True				
ANR	10968250	ParameterType	const ref *		10968146	0					
ANR	10968251	Identifier	pos		10968146	1					
ANR	10968252	CFGEntryNode	ENTRY		10968146		True				
ANR	10968253	CFGExitNode	EXIT		10968146		True				
ANR	10968254	Symbol	gs_type1exec_state		10968146						
ANR	10968255	Symbol	ialloc_struct		10968146						
ANR	10968256	Symbol	esp		10968146						
ANR	10968257	Symbol	* pcxs		10968146						
ANR	10968258	Symbol	type1_push_OtherSubr		10968146						
ANR	10968259	Symbol	es_show		10968146						
ANR	10968260	Symbol	* hpcxs		10968146						
ANR	10968261	Symbol	gs_error_VMerror		10968146						
ANR	10968262	Symbol	& hpcxs -> cis		10968146						
ANR	10968263	Symbol	& st_gs_type1exec_state		10968146						
ANR	10968264	Symbol	pos		10968146						
ANR	10968265	Symbol	i_ctx_p		10968146						
ANR	10968266	Symbol	pcxs		10968146						
ANR	10968267	Symbol	hpcxs		10968146						
ANR	10968268	Symbol	cont		10968146						
ANR	10968269	Symbol	op_type1_cleanup		10968146						
ANR	10968270	Function	type1_callout_dispatch	792:0:28254:29080							
ANR	10968271	FunctionDef	"type1_callout_dispatch (i_ctx_t * i_ctx_p , int ( * cont ) ( i_ctx_t * ) , int num_args)"		10968270	0					
ANR	10968272	CompoundStatement		795:0:28367:29080	10968270	0					
ANR	10968273	IdentifierDeclStatement	ref other_subr ;	796:4:28373:28387	10968270	0	True				
ANR	10968274	IdentifierDecl	other_subr		10968270	0					
ANR	10968275	IdentifierDeclType	ref		10968270	0					
ANR	10968276	Identifier	other_subr		10968270	1					
ANR	10968277	IdentifierDeclStatement	"gs_type1exec_state * pcxs = r_ptr ( esp , gs_type1exec_state ) ;"	797:4:28393:28450	10968270	1	True				
ANR	10968278	IdentifierDecl	"* pcxs = r_ptr ( esp , gs_type1exec_state )"		10968270	0					
ANR	10968279	IdentifierDeclType	gs_type1exec_state *		10968270	0					
ANR	10968280	Identifier	pcxs		10968270	1					
ANR	10968281	AssignmentExpression	"* pcxs = r_ptr ( esp , gs_type1exec_state )"		10968270	2		=			
ANR	10968282	Identifier	pcxs		10968270	0					
ANR	10968283	CallExpression	"r_ptr ( esp , gs_type1exec_state )"		10968270	1					
ANR	10968284	Callee	r_ptr		10968270	0					
ANR	10968285	Identifier	r_ptr		10968270	0					
ANR	10968286	ArgumentList	esp		10968270	1					
ANR	10968287	Argument	esp		10968270	0					
ANR	10968288	Identifier	esp		10968270	0					
ANR	10968289	Argument	gs_type1exec_state		10968270	1					
ANR	10968290	Identifier	gs_type1exec_state		10968270	0					
ANR	10968291	IdentifierDeclStatement	int code ;	798:4:28456:28464	10968270	2	True				
ANR	10968292	IdentifierDecl	code		10968270	0					
ANR	10968293	IdentifierDeclType	int		10968270	0					
ANR	10968294	Identifier	code		10968270	1					
ANR	10968295	Label	icont :	800:2:28469:28474	10968270	3	True				
ANR	10968296	Identifier	icont		10968270	0					
ANR	10968297	ExpressionStatement	"code = type1_continue_dispatch ( i_ctx_p , pcxs , NULL , & other_subr , num_args )"	801:4:28480:28589	10968270	4	True				
ANR	10968298	AssignmentExpression	"code = type1_continue_dispatch ( i_ctx_p , pcxs , NULL , & other_subr , num_args )"		10968270	0		=			
ANR	10968299	Identifier	code		10968270	0					
ANR	10968300	CallExpression	"type1_continue_dispatch ( i_ctx_p , pcxs , NULL , & other_subr , num_args )"		10968270	1					
ANR	10968301	Callee	type1_continue_dispatch		10968270	0					
ANR	10968302	Identifier	type1_continue_dispatch		10968270	0					
ANR	10968303	ArgumentList	i_ctx_p		10968270	1					
ANR	10968304	Argument	i_ctx_p		10968270	0					
ANR	10968305	Identifier	i_ctx_p		10968270	0					
ANR	10968306	Argument	pcxs		10968270	1					
ANR	10968307	Identifier	pcxs		10968270	0					
ANR	10968308	Argument	NULL		10968270	2					
ANR	10968309	Identifier	NULL		10968270	0					
ANR	10968310	Argument	& other_subr		10968270	3					
ANR	10968311	UnaryOperationExpression	& other_subr		10968270	0					
ANR	10968312	UnaryOperator	&		10968270	0					
ANR	10968313	Identifier	other_subr		10968270	1					
ANR	10968314	Argument	num_args		10968270	4					
ANR	10968315	Identifier	num_args		10968270	0					
ANR	10968316	SwitchStatement	switch ( code )		10968270	5					
ANR	10968317	Condition	code	803:12:28603:28606	10968270	0	True				
ANR	10968318	Identifier	code		10968270	0					
ANR	10968319	CompoundStatement		9:18:241:241	10968270	1					
ANR	10968320	Label	case 0 :	804:8:28619:28625	10968270	0	True				
ANR	10968321	ReturnStatement	return 0 ;	805:12:28679:28687	10968270	1	True				
ANR	10968322	PrimaryExpression	0		10968270	0					
ANR	10968323	Label	default :	806:8:28697:28704	10968270	2	True				
ANR	10968324	Identifier	default		10968270	0					
ANR	10968325	ExpressionStatement	op_type1_free ( i_ctx_p )	807:12:28749:28771	10968270	3	True				
ANR	10968326	CallExpression	op_type1_free ( i_ctx_p )		10968270	0					
ANR	10968327	Callee	op_type1_free		10968270	0					
ANR	10968328	Identifier	op_type1_free		10968270	0					
ANR	10968329	ArgumentList	i_ctx_p		10968270	1					
ANR	10968330	Argument	i_ctx_p		10968270	0					
ANR	10968331	Identifier	i_ctx_p		10968270	0					
ANR	10968332	ReturnStatement	return ( ( code < 0 ? code : gs_note_error ( gs_error_invalidfont ) ) ) ;	808:12:28785:28849	10968270	4	True				
ANR	10968333	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_invalidfont )		10968270	0					
ANR	10968334	Condition	code < 0		10968270	0					
ANR	10968335	RelationalExpression	code < 0		10968270	0		<			
ANR	10968336	Identifier	code		10968270	0					
ANR	10968337	PrimaryExpression	0		10968270	1					
ANR	10968338	Identifier	code		10968270	1					
ANR	10968339	CallExpression	gs_note_error ( gs_error_invalidfont )		10968270	2					
ANR	10968340	Callee	gs_note_error		10968270	0					
ANR	10968341	Identifier	gs_note_error		10968270	0					
ANR	10968342	ArgumentList	gs_error_invalidfont		10968270	1					
ANR	10968343	Argument	gs_error_invalidfont		10968270	0					
ANR	10968344	Identifier	gs_error_invalidfont		10968270	0					
ANR	10968345	Label	case type1_result_callothersubr :	809:8:28859:28890	10968270	5	True				
ANR	10968346	Identifier	type1_result_callothersubr		10968270	0					
ANR	10968347	ReturnStatement	"return type1_push_OtherSubr ( i_ctx_p , pcxs , cont , & other_subr ) ;"	810:12:28928:28989	10968270	6	True				
ANR	10968348	CallExpression	"type1_push_OtherSubr ( i_ctx_p , pcxs , cont , & other_subr )"		10968270	0					
ANR	10968349	Callee	type1_push_OtherSubr		10968270	0					
ANR	10968350	Identifier	type1_push_OtherSubr		10968270	0					
ANR	10968351	ArgumentList	i_ctx_p		10968270	1					
ANR	10968352	Argument	i_ctx_p		10968270	0					
ANR	10968353	Identifier	i_ctx_p		10968270	0					
ANR	10968354	Argument	pcxs		10968270	1					
ANR	10968355	Identifier	pcxs		10968270	0					
ANR	10968356	Argument	cont		10968270	2					
ANR	10968357	Identifier	cont		10968270	0					
ANR	10968358	Argument	& other_subr		10968270	3					
ANR	10968359	UnaryOperationExpression	& other_subr		10968270	0					
ANR	10968360	UnaryOperator	&		10968270	0					
ANR	10968361	Identifier	other_subr		10968270	1					
ANR	10968362	Label	case type1_result_sbw :	811:8:28999:29020	10968270	7	True				
ANR	10968363	Identifier	type1_result_sbw		10968270	0					
ANR	10968364	GotoStatement	goto icont ;	812:12:29062:29072	10968270	8	True				
ANR	10968365	Identifier	icont		10968270	0					
ANR	10968366	ReturnType	static int		10968270	1					
ANR	10968367	Identifier	type1_callout_dispatch		10968270	2					
ANR	10968368	ParameterList	"i_ctx_t * i_ctx_p , int ( * cont ) ( i_ctx_t * ) , int num_args"		10968270	3					
ANR	10968369	Parameter	i_ctx_t * i_ctx_p	793:23:28288:28303	10968270	0	True				
ANR	10968370	ParameterType	i_ctx_t *		10968270	0					
ANR	10968371	Identifier	i_ctx_p		10968270	1					
ANR	10968372	Parameter	int ( * cont ) ( i_ctx_t * )	793:41:28306:28327	10968270	1	True				
ANR	10968373	ParameterType	(( i_ctx_t * ) int) *		10968270	0					
ANR	10968374	Identifier	cont		10968270	1					
ANR	10968375	Parameter	int num_args	794:23:28353:28364	10968270	2	True				
ANR	10968376	ParameterType	int		10968270	0					
ANR	10968377	Identifier	num_args		10968270	1					
ANR	10968378	CFGEntryNode	ENTRY		10968270		True				
ANR	10968379	CFGExitNode	EXIT		10968270		True				
ANR	10968380	Symbol	gs_type1exec_state		10968270						
ANR	10968381	Symbol	other_subr		10968270						
ANR	10968382	Symbol	esp		10968270						
ANR	10968383	Symbol	code		10968270						
ANR	10968384	Symbol	& other_subr		10968270						
ANR	10968385	Symbol	NULL		10968270						
ANR	10968386	Symbol	type1_push_OtherSubr		10968270						
ANR	10968387	Symbol	type1_continue_dispatch		10968270						
ANR	10968388	Symbol	r_ptr		10968270						
ANR	10968389	Symbol	gs_note_error		10968270						
ANR	10968390	Symbol	num_args		10968270						
ANR	10968391	Symbol	i_ctx_p		10968270						
ANR	10968392	Symbol	pcxs		10968270						
ANR	10968393	Symbol	cont		10968270						
ANR	10968394	Symbol	gs_error_invalidfont		10968270						
ANR	10968395	Function	op_type1_cleanup	817:0:29122:29244							
ANR	10968396	FunctionDef	op_type1_cleanup (i_ctx_t * i_ctx_p)		10968395	0					
ANR	10968397	CompoundStatement		819:0:29168:29244	10968395	0					
ANR	10968398	Statement	ifree_object	820:4:29174:29185	10968395	0	True				
ANR	10968399	Statement	(	820:16:29186:29186	10968395	1	True				
ANR	10968400	Statement	r_ptr	820:17:29187:29191	10968395	2	True				
ANR	10968401	Statement	(	820:22:29192:29192	10968395	3	True				
ANR	10968402	Statement	esp	820:23:29193:29195	10968395	4	True				
ANR	10968403	Statement	+	820:27:29197:29197	10968395	5	True				
ANR	10968404	Statement	2	820:29:29199:29199	10968395	6	True				
ANR	10968405	Statement	","	820:30:29200:29200	10968395	7	True				
ANR	10968406	Statement	void	820:32:29202:29205	10968395	8	True				
ANR	10968407	Statement	)	820:36:29206:29206	10968395	9	True				
ANR	10968408	Statement	","	820:37:29207:29207	10968395	10	True				
ANR	10968409	Statement	"""op_type1_cleanup"""	820:39:29209:29226	10968395	11	True				
ANR	10968410	Statement	)	820:57:29227:29227	10968395	12	True				
ANR	10968411	ExpressionStatement		820:58:29228:29228	10968395	13	True				
ANR	10968412	ReturnStatement	return 0 ;	821:4:29234:29242	10968395	14	True				
ANR	10968413	PrimaryExpression	0		10968395	0					
ANR	10968414	ReturnType	static int		10968395	1					
ANR	10968415	Identifier	op_type1_cleanup		10968395	2					
ANR	10968416	ParameterList	i_ctx_t * i_ctx_p		10968395	3					
ANR	10968417	Parameter	i_ctx_t * i_ctx_p	818:17:29150:29165	10968395	0	True				
ANR	10968418	ParameterType	i_ctx_t *		10968395	0					
ANR	10968419	Identifier	i_ctx_p		10968395	1					
ANR	10968420	CFGEntryNode	ENTRY		10968395		True				
ANR	10968421	CFGExitNode	EXIT		10968395		True				
ANR	10968422	Symbol	i_ctx_p		10968395						
ANR	10968423	Function	op_type1_free	823:0:29246:29741							
ANR	10968424	FunctionDef	op_type1_free (i_ctx_t * i_ctx_p)		10968423	0					
ANR	10968425	CompoundStatement		825:0:29290:29741	10968423	0					
ANR	10968426	Statement	ifree_object	826:4:29296:29307	10968423	0	True				
ANR	10968427	Statement	(	826:16:29308:29308	10968423	1	True				
ANR	10968428	Statement	r_ptr	826:17:29309:29313	10968423	2	True				
ANR	10968429	Statement	(	826:22:29314:29314	10968423	3	True				
ANR	10968430	Statement	esp	826:23:29315:29317	10968423	4	True				
ANR	10968431	Statement	","	826:26:29318:29318	10968423	5	True				
ANR	10968432	Statement	void	826:28:29320:29323	10968423	6	True				
ANR	10968433	Statement	)	826:32:29324:29324	10968423	7	True				
ANR	10968434	Statement	","	826:33:29325:29325	10968423	8	True				
ANR	10968435	Statement	"""op_type1_free"""	826:35:29327:29341	10968423	9	True				
ANR	10968436	Statement	)	826:50:29342:29342	10968423	10	True				
ANR	10968437	ExpressionStatement		826:51:29343:29343	10968423	11	True				
ANR	10968438	ExpressionStatement	"make_empty_const_array ( esp - 1 , a_readonly + a_executable )"	833:4:29621:29679	10968423	12	True				
ANR	10968439	CallExpression	"make_empty_const_array ( esp - 1 , a_readonly + a_executable )"		10968423	0					
ANR	10968440	Callee	make_empty_const_array		10968423	0					
ANR	10968441	Identifier	make_empty_const_array		10968423	0					
ANR	10968442	ArgumentList	esp - 1		10968423	1					
ANR	10968443	Argument	esp - 1		10968423	0					
ANR	10968444	AdditiveExpression	esp - 1		10968423	0		-			
ANR	10968445	Identifier	esp		10968423	0					
ANR	10968446	PrimaryExpression	1		10968423	1					
ANR	10968447	Argument	a_readonly + a_executable		10968423	1					
ANR	10968448	AdditiveExpression	a_readonly + a_executable		10968423	0		+			
ANR	10968449	Identifier	a_readonly		10968423	0					
ANR	10968450	Identifier	a_executable		10968423	1					
ANR	10968451	ExpressionStatement	"make_empty_const_array ( esp , a_readonly + a_executable )"	834:4:29685:29739	10968423	13	True				
ANR	10968452	CallExpression	"make_empty_const_array ( esp , a_readonly + a_executable )"		10968423	0					
ANR	10968453	Callee	make_empty_const_array		10968423	0					
ANR	10968454	Identifier	make_empty_const_array		10968423	0					
ANR	10968455	ArgumentList	esp		10968423	1					
ANR	10968456	Argument	esp		10968423	0					
ANR	10968457	Identifier	esp		10968423	0					
ANR	10968458	Argument	a_readonly + a_executable		10968423	1					
ANR	10968459	AdditiveExpression	a_readonly + a_executable		10968423	0		+			
ANR	10968460	Identifier	a_readonly		10968423	0					
ANR	10968461	Identifier	a_executable		10968423	1					
ANR	10968462	ReturnType	static void		10968423	1					
ANR	10968463	Identifier	op_type1_free		10968423	2					
ANR	10968464	ParameterList	i_ctx_t * i_ctx_p		10968423	3					
ANR	10968465	Parameter	i_ctx_t * i_ctx_p	824:14:29272:29287	10968423	0	True				
ANR	10968466	ParameterType	i_ctx_t *		10968423	0					
ANR	10968467	Identifier	i_ctx_p		10968423	1					
ANR	10968468	CFGEntryNode	ENTRY		10968423		True				
ANR	10968469	CFGExitNode	EXIT		10968423		True				
ANR	10968470	Symbol	esp		10968423						
ANR	10968471	Symbol	i_ctx_p		10968423						
ANR	10968472	Symbol	a_executable		10968423						
ANR	10968473	Symbol	a_readonly		10968423						
ANR	10968474	Function	nobbox_continue	839:0:29782:30195							
ANR	10968475	FunctionDef	nobbox_continue (i_ctx_t * i_ctx_p)		10968474	0					
ANR	10968476	CompoundStatement		841:0:29827:30195	10968474	0					
ANR	10968477	IdentifierDeclStatement	"int code = type1_callout_dispatch ( i_ctx_p , nobbox_continue , 4 ) ;"	842:4:29833:29895	10968474	0	True				
ANR	10968478	IdentifierDecl	"code = type1_callout_dispatch ( i_ctx_p , nobbox_continue , 4 )"		10968474	0					
ANR	10968479	IdentifierDeclType	int		10968474	0					
ANR	10968480	Identifier	code		10968474	1					
ANR	10968481	AssignmentExpression	"code = type1_callout_dispatch ( i_ctx_p , nobbox_continue , 4 )"		10968474	2		=			
ANR	10968482	Identifier	code		10968474	0					
ANR	10968483	CallExpression	"type1_callout_dispatch ( i_ctx_p , nobbox_continue , 4 )"		10968474	1					
ANR	10968484	Callee	type1_callout_dispatch		10968474	0					
ANR	10968485	Identifier	type1_callout_dispatch		10968474	0					
ANR	10968486	ArgumentList	i_ctx_p		10968474	1					
ANR	10968487	Argument	i_ctx_p		10968474	0					
ANR	10968488	Identifier	i_ctx_p		10968474	0					
ANR	10968489	Argument	nobbox_continue		10968474	1					
ANR	10968490	Identifier	nobbox_continue		10968474	0					
ANR	10968491	Argument	4		10968474	2					
ANR	10968492	PrimaryExpression	4		10968474	0					
ANR	10968493	IfStatement	if ( code )		10968474	1					
ANR	10968494	Condition	code	844:8:29906:29909	10968474	0	True				
ANR	10968495	Identifier	code		10968474	0					
ANR	10968496	ReturnStatement	return code ;	845:8:29920:29931	10968474	1	True				
ANR	10968497	Identifier	code		10968474	0					
ANR	10968498	CompoundStatement		8:8:186:208	10968474	2					
ANR	10968499	IdentifierDeclStatement	"gs_type1exec_state * pcxs = r_ptr ( esp , gs_type1exec_state ) ;"	847:8:29947:30004	10968474	0	True				
ANR	10968500	IdentifierDecl	"* pcxs = r_ptr ( esp , gs_type1exec_state )"		10968474	0					
ANR	10968501	IdentifierDeclType	gs_type1exec_state *		10968474	0					
ANR	10968502	Identifier	pcxs		10968474	1					
ANR	10968503	AssignmentExpression	"* pcxs = r_ptr ( esp , gs_type1exec_state )"		10968474	2		=			
ANR	10968504	Identifier	pcxs		10968474	0					
ANR	10968505	CallExpression	"r_ptr ( esp , gs_type1exec_state )"		10968474	1					
ANR	10968506	Callee	r_ptr		10968474	0					
ANR	10968507	Identifier	r_ptr		10968474	0					
ANR	10968508	ArgumentList	esp		10968474	1					
ANR	10968509	Argument	esp		10968474	0					
ANR	10968510	Identifier	esp		10968474	0					
ANR	10968511	Argument	gs_type1exec_state		10968474	1					
ANR	10968512	Identifier	gs_type1exec_state		10968474	0					
ANR	10968513	IdentifierDeclStatement	gs_type1exec_state cxs ;	848:8:30014:30036	10968474	1	True				
ANR	10968514	IdentifierDecl	cxs		10968474	0					
ANR	10968515	IdentifierDeclType	gs_type1exec_state		10968474	0					
ANR	10968516	Identifier	cxs		10968474	1					
ANR	10968517	ExpressionStatement	cxs = * pcxs	850:8:30047:30058	10968474	2	True				
ANR	10968518	AssignmentExpression	cxs = * pcxs		10968474	0		=			
ANR	10968519	Identifier	cxs		10968474	0					
ANR	10968520	UnaryOperationExpression	* pcxs		10968474	1					
ANR	10968521	UnaryOperator	*		10968474	0					
ANR	10968522	Identifier	pcxs		10968474	1					
ANR	10968523	ExpressionStatement	"gs_type1_set_callback_data ( & cxs . cis , & cxs )"	851:8:30068:30110	10968474	3	True				
ANR	10968524	CallExpression	"gs_type1_set_callback_data ( & cxs . cis , & cxs )"		10968474	0					
ANR	10968525	Callee	gs_type1_set_callback_data		10968474	0					
ANR	10968526	Identifier	gs_type1_set_callback_data		10968474	0					
ANR	10968527	ArgumentList	& cxs . cis		10968474	1					
ANR	10968528	Argument	& cxs . cis		10968474	0					
ANR	10968529	UnaryOperationExpression	& cxs . cis		10968474	0					
ANR	10968530	UnaryOperator	&		10968474	0					
ANR	10968531	MemberAccess	cxs . cis		10968474	1					
ANR	10968532	Identifier	cxs		10968474	0					
ANR	10968533	Identifier	cis		10968474	1					
ANR	10968534	Argument	& cxs		10968474	1					
ANR	10968535	UnaryOperationExpression	& cxs		10968474	0					
ANR	10968536	UnaryOperator	&		10968474	0					
ANR	10968537	Identifier	cxs		10968474	1					
ANR	10968538	ExpressionStatement	op_type1_free ( i_ctx_p )	852:8:30120:30142	10968474	4	True				
ANR	10968539	CallExpression	op_type1_free ( i_ctx_p )		10968474	0					
ANR	10968540	Callee	op_type1_free		10968474	0					
ANR	10968541	Identifier	op_type1_free		10968474	0					
ANR	10968542	ArgumentList	i_ctx_p		10968474	1					
ANR	10968543	Argument	i_ctx_p		10968474	0					
ANR	10968544	Identifier	i_ctx_p		10968474	0					
ANR	10968545	ReturnStatement	"return nobbox_finish ( i_ctx_p , & cxs ) ;"	853:8:30152:30187	10968474	5	True				
ANR	10968546	CallExpression	"nobbox_finish ( i_ctx_p , & cxs )"		10968474	0					
ANR	10968547	Callee	nobbox_finish		10968474	0					
ANR	10968548	Identifier	nobbox_finish		10968474	0					
ANR	10968549	ArgumentList	i_ctx_p		10968474	1					
ANR	10968550	Argument	i_ctx_p		10968474	0					
ANR	10968551	Identifier	i_ctx_p		10968474	0					
ANR	10968552	Argument	& cxs		10968474	1					
ANR	10968553	UnaryOperationExpression	& cxs		10968474	0					
ANR	10968554	UnaryOperator	&		10968474	0					
ANR	10968555	Identifier	cxs		10968474	1					
ANR	10968556	ReturnType	static int		10968474	1					
ANR	10968557	Identifier	nobbox_continue		10968474	2					
ANR	10968558	ParameterList	i_ctx_t * i_ctx_p		10968474	3					
ANR	10968559	Parameter	i_ctx_t * i_ctx_p	840:16:29809:29824	10968474	0	True				
ANR	10968560	ParameterType	i_ctx_t *		10968474	0					
ANR	10968561	Identifier	i_ctx_p		10968474	1					
ANR	10968562	CFGEntryNode	ENTRY		10968474		True				
ANR	10968563	CFGExitNode	EXIT		10968474		True				
ANR	10968564	Symbol	gs_type1exec_state		10968474						
ANR	10968565	Symbol	code		10968474						
ANR	10968566	Symbol	esp		10968474						
ANR	10968567	Symbol	& cxs		10968474						
ANR	10968568	Symbol	* pcxs		10968474						
ANR	10968569	Symbol	type1_callout_dispatch		10968474						
ANR	10968570	Symbol	nobbox_finish		10968474						
ANR	10968571	Symbol	r_ptr		10968474						
ANR	10968572	Symbol	nobbox_continue		10968474						
ANR	10968573	Symbol	i_ctx_p		10968474						
ANR	10968574	Symbol	pcxs		10968474						
ANR	10968575	Symbol	& cxs . cis		10968474						
ANR	10968576	Symbol	cxs		10968474						
ANR	10968577	Function	nobbox_finish	860:0:30401:32374							
ANR	10968578	FunctionDef	"nobbox_finish (i_ctx_t * i_ctx_p , gs_type1exec_state * pcxs)"		10968577	0					
ANR	10968579	CompoundStatement		862:0:30471:32374	10968577	0					
ANR	10968580	IdentifierDeclStatement	os_ptr op = osp ;	863:4:30477:30492	10968577	0	True				
ANR	10968581	IdentifierDecl	op = osp		10968577	0					
ANR	10968582	IdentifierDeclType	os_ptr		10968577	0					
ANR	10968583	Identifier	op		10968577	1					
ANR	10968584	AssignmentExpression	op = osp		10968577	2		=			
ANR	10968585	Identifier	osp		10968577	0					
ANR	10968586	Identifier	osp		10968577	1					
ANR	10968587	IdentifierDeclStatement	int code ;	864:4:30498:30506	10968577	1	True				
ANR	10968588	IdentifierDecl	code		10968577	0					
ANR	10968589	IdentifierDeclType	int		10968577	0					
ANR	10968590	Identifier	code		10968577	1					
ANR	10968591	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	865:4:30512:30557	10968577	2	True				
ANR	10968592	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		10968577	0					
ANR	10968593	IdentifierDeclType	gs_text_enum_t *		10968577	0					
ANR	10968594	Identifier	penum		10968577	1					
ANR	10968595	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		10968577	2		=			
ANR	10968596	Identifier	penum		10968577	0					
ANR	10968597	CallExpression	op_show_find ( i_ctx_p )		10968577	1					
ANR	10968598	Callee	op_show_find		10968577	0					
ANR	10968599	Identifier	op_show_find		10968577	0					
ANR	10968600	ArgumentList	i_ctx_p		10968577	1					
ANR	10968601	Argument	i_ctx_p		10968577	0					
ANR	10968602	Identifier	i_ctx_p		10968577	0					
ANR	10968603	IdentifierDeclStatement	gs_font * pfont ;	866:4:30563:30577	10968577	3	True				
ANR	10968604	IdentifierDecl	* pfont		10968577	0					
ANR	10968605	IdentifierDeclType	gs_font *		10968577	0					
ANR	10968606	Identifier	pfont		10968577	1					
ANR	10968607	IfStatement	"if ( ( code = gs_pathbbox ( igs , & pcxs -> char_bbox ) ) < 0 || ( code = font_param ( op - 3 , & pfont ) ) < 0 )"		10968577	4					
ANR	10968608	Condition	"( code = gs_pathbbox ( igs , & pcxs -> char_bbox ) ) < 0 || ( code = font_param ( op - 3 , & pfont ) ) < 0"	868:8:30588:30685	10968577	0	True				
ANR	10968609	OrExpression	"( code = gs_pathbbox ( igs , & pcxs -> char_bbox ) ) < 0 || ( code = font_param ( op - 3 , & pfont ) ) < 0"		10968577	0		||			
ANR	10968610	RelationalExpression	"( code = gs_pathbbox ( igs , & pcxs -> char_bbox ) ) < 0"		10968577	0		<			
ANR	10968611	AssignmentExpression	"code = gs_pathbbox ( igs , & pcxs -> char_bbox )"		10968577	0		=			
ANR	10968612	Identifier	code		10968577	0					
ANR	10968613	CallExpression	"gs_pathbbox ( igs , & pcxs -> char_bbox )"		10968577	1					
ANR	10968614	Callee	gs_pathbbox		10968577	0					
ANR	10968615	Identifier	gs_pathbbox		10968577	0					
ANR	10968616	ArgumentList	igs		10968577	1					
ANR	10968617	Argument	igs		10968577	0					
ANR	10968618	Identifier	igs		10968577	0					
ANR	10968619	Argument	& pcxs -> char_bbox		10968577	1					
ANR	10968620	UnaryOperationExpression	& pcxs -> char_bbox		10968577	0					
ANR	10968621	UnaryOperator	&		10968577	0					
ANR	10968622	PtrMemberAccess	pcxs -> char_bbox		10968577	1					
ANR	10968623	Identifier	pcxs		10968577	0					
ANR	10968624	Identifier	char_bbox		10968577	1					
ANR	10968625	PrimaryExpression	0		10968577	1					
ANR	10968626	RelationalExpression	"( code = font_param ( op - 3 , & pfont ) ) < 0"		10968577	1		<			
ANR	10968627	AssignmentExpression	"code = font_param ( op - 3 , & pfont )"		10968577	0		=			
ANR	10968628	Identifier	code		10968577	0					
ANR	10968629	CallExpression	"font_param ( op - 3 , & pfont )"		10968577	1					
ANR	10968630	Callee	font_param		10968577	0					
ANR	10968631	Identifier	font_param		10968577	0					
ANR	10968632	ArgumentList	op - 3		10968577	1					
ANR	10968633	Argument	op - 3		10968577	0					
ANR	10968634	AdditiveExpression	op - 3		10968577	0		-			
ANR	10968635	Identifier	op		10968577	0					
ANR	10968636	PrimaryExpression	3		10968577	1					
ANR	10968637	Argument	& pfont		10968577	1					
ANR	10968638	UnaryOperationExpression	& pfont		10968577	0					
ANR	10968639	UnaryOperator	&		10968577	0					
ANR	10968640	Identifier	pfont		10968577	1					
ANR	10968641	PrimaryExpression	0		10968577	1					
ANR	10968642	ReturnStatement	return code ;	871:8:30705:30716	10968577	1	True				
ANR	10968643	Identifier	code		10968577	0					
ANR	10968644	IfStatement	if ( penum == 0 || ! font_uses_charstrings ( pfont ) )		10968577	5					
ANR	10968645	Condition	penum == 0 || ! font_uses_charstrings ( pfont )	872:8:30726:30768	10968577	0	True				
ANR	10968646	OrExpression	penum == 0 || ! font_uses_charstrings ( pfont )		10968577	0		||			
ANR	10968647	EqualityExpression	penum == 0		10968577	0		==			
ANR	10968648	Identifier	penum		10968577	0					
ANR	10968649	PrimaryExpression	0		10968577	1					
ANR	10968650	UnaryOperationExpression	! font_uses_charstrings ( pfont )		10968577	1					
ANR	10968651	UnaryOperator	!		10968577	0					
ANR	10968652	CallExpression	font_uses_charstrings ( pfont )		10968577	1					
ANR	10968653	Callee	font_uses_charstrings		10968577	0					
ANR	10968654	Identifier	font_uses_charstrings		10968577	0					
ANR	10968655	ArgumentList	pfont		10968577	1					
ANR	10968656	Argument	pfont		10968577	0					
ANR	10968657	Identifier	pfont		10968577	0					
ANR	10968658	ExpressionStatement	return_error ( gs_error_undefined )	873:8:30779:30811	10968577	1	True				
ANR	10968659	CallExpression	return_error ( gs_error_undefined )		10968577	0					
ANR	10968660	Callee	return_error		10968577	0					
ANR	10968661	Identifier	return_error		10968577	0					
ANR	10968662	ArgumentList	gs_error_undefined		10968577	1					
ANR	10968663	Argument	gs_error_undefined		10968577	0					
ANR	10968664	Identifier	gs_error_undefined		10968577	0					
ANR	10968665	CompoundStatement		16:8:479:508	10968577	6					
ANR	10968666	Statement	gs_font_base	875:8:30827:30838	10968577	0	True				
ANR	10968667	Statement	*	875:21:30840:30840	10968577	1	True				
ANR	10968668	Statement	const	875:22:30841:30845	10968577	2	True				
ANR	10968669	ExpressionStatement	pbfont = ( gs_font_base * ) pfont	875:28:30847:30878	10968577	3	True				
ANR	10968670	AssignmentExpression	pbfont = ( gs_font_base * ) pfont		10968577	0		=			
ANR	10968671	Identifier	pbfont		10968577	0					
ANR	10968672	CastExpression	( gs_font_base * ) pfont		10968577	1					
ANR	10968673	CastTarget	gs_font_base *		10968577	0					
ANR	10968674	Identifier	pfont		10968577	1					
ANR	10968675	Statement	gs_font_type1	876:8:30888:30900	10968577	4	True				
ANR	10968676	Statement	*	876:22:30902:30902	10968577	5	True				
ANR	10968677	Statement	const	876:23:30903:30907	10968577	6	True				
ANR	10968678	ExpressionStatement	pfont1 = ( gs_font_type1 * ) pfont	876:29:30909:30941	10968577	7	True				
ANR	10968679	AssignmentExpression	pfont1 = ( gs_font_type1 * ) pfont		10968577	0		=			
ANR	10968680	Identifier	pfont1		10968577	0					
ANR	10968681	CastExpression	( gs_font_type1 * ) pfont		10968577	1					
ANR	10968682	CastTarget	gs_font_type1 *		10968577	0					
ANR	10968683	Identifier	pfont		10968577	1					
ANR	10968684	IdentifierDeclStatement	"op_proc_t cont , exec_cont = 0 ;"	877:8:30951:30980	10968577	8	True				
ANR	10968685	IdentifierDecl	cont		10968577	0					
ANR	10968686	IdentifierDeclType	op_proc_t		10968577	0					
ANR	10968687	Identifier	cont		10968577	1					
ANR	10968688	IdentifierDecl	exec_cont = 0		10968577	1					
ANR	10968689	IdentifierDeclType	op_proc_t		10968577	0					
ANR	10968690	Identifier	exec_cont		10968577	1					
ANR	10968691	AssignmentExpression	exec_cont = 0		10968577	2		=			
ANR	10968692	Identifier	exec_cont		10968577	0					
ANR	10968693	PrimaryExpression	0		10968577	1					
ANR	10968694	IfStatement	if ( pcxs -> present == metricsNone )		10968577	9					
ANR	10968695	Condition	pcxs -> present == metricsNone	879:12:30995:31022	10968577	0	True				
ANR	10968696	EqualityExpression	pcxs -> present == metricsNone		10968577	0		==			
ANR	10968697	PtrMemberAccess	pcxs -> present		10968577	0					
ANR	10968698	Identifier	pcxs		10968577	0					
ANR	10968699	Identifier	present		10968577	1					
ANR	10968700	Identifier	metricsNone		10968577	1					
ANR	10968701	CompoundStatement		19:12:567:581	10968577	1					
ANR	10968702	IdentifierDeclStatement	gs_point endpt ;	880:12:31039:31053	10968577	0	True				
ANR	10968703	IdentifierDecl	endpt		10968577	0					
ANR	10968704	IdentifierDeclType	gs_point		10968577	0					
ANR	10968705	Identifier	endpt		10968577	1					
ANR	10968706	IfStatement	"if ( ( code = gs_currentpoint ( igs , & endpt ) ) < 0 )"		10968577	1					
ANR	10968707	Condition	"( code = gs_currentpoint ( igs , & endpt ) ) < 0"	882:16:31072:31112	10968577	0	True				
ANR	10968708	RelationalExpression	"( code = gs_currentpoint ( igs , & endpt ) ) < 0"		10968577	0		<			
ANR	10968709	AssignmentExpression	"code = gs_currentpoint ( igs , & endpt )"		10968577	0		=			
ANR	10968710	Identifier	code		10968577	0					
ANR	10968711	CallExpression	"gs_currentpoint ( igs , & endpt )"		10968577	1					
ANR	10968712	Callee	gs_currentpoint		10968577	0					
ANR	10968713	Identifier	gs_currentpoint		10968577	0					
ANR	10968714	ArgumentList	igs		10968577	1					
ANR	10968715	Argument	igs		10968577	0					
ANR	10968716	Identifier	igs		10968577	0					
ANR	10968717	Argument	& endpt		10968577	1					
ANR	10968718	UnaryOperationExpression	& endpt		10968577	0					
ANR	10968719	UnaryOperator	&		10968577	0					
ANR	10968720	Identifier	endpt		10968577	1					
ANR	10968721	PrimaryExpression	0		10968577	1					
ANR	10968722	ReturnStatement	return code ;	883:16:31131:31142	10968577	1	True				
ANR	10968723	Identifier	code		10968577	0					
ANR	10968724	ExpressionStatement	"pcxs -> sbw [ 2 ] = endpt . x , pcxs -> sbw [ 3 ] = endpt . y"	884:12:31156:31202	10968577	2	True				
ANR	10968725	Expression	"pcxs -> sbw [ 2 ] = endpt . x , pcxs -> sbw [ 3 ] = endpt . y"		10968577	0					
ANR	10968726	AssignmentExpression	pcxs -> sbw [ 2 ] = endpt . x		10968577	0		=			
ANR	10968727	ArrayIndexing	pcxs -> sbw [ 2 ]		10968577	0					
ANR	10968728	PtrMemberAccess	pcxs -> sbw		10968577	0					
ANR	10968729	Identifier	pcxs		10968577	0					
ANR	10968730	Identifier	sbw		10968577	1					
ANR	10968731	PrimaryExpression	2		10968577	1					
ANR	10968732	MemberAccess	endpt . x		10968577	1					
ANR	10968733	Identifier	endpt		10968577	0					
ANR	10968734	Identifier	x		10968577	1					
ANR	10968735	AssignmentExpression	pcxs -> sbw [ 3 ] = endpt . y		10968577	1		=			
ANR	10968736	ArrayIndexing	pcxs -> sbw [ 3 ]		10968577	0					
ANR	10968737	PtrMemberAccess	pcxs -> sbw		10968577	0					
ANR	10968738	Identifier	pcxs		10968577	0					
ANR	10968739	Identifier	sbw		10968577	1					
ANR	10968740	PrimaryExpression	3		10968577	1					
ANR	10968741	MemberAccess	endpt . y		10968577	1					
ANR	10968742	Identifier	endpt		10968577	0					
ANR	10968743	Identifier	y		10968577	1					
ANR	10968744	ExpressionStatement	pcxs -> present = metricsSideBearingAndWidth	885:12:31216:31258	10968577	3	True				
ANR	10968745	AssignmentExpression	pcxs -> present = metricsSideBearingAndWidth		10968577	0		=			
ANR	10968746	PtrMemberAccess	pcxs -> present		10968577	0					
ANR	10968747	Identifier	pcxs		10968577	0					
ANR	10968748	Identifier	present		10968577	1					
ANR	10968749	Identifier	metricsSideBearingAndWidth		10968577	1					
ANR	10968750	IfStatement	"if ( ( * dev_proc ( igs -> device , get_alpha_bits ) ) ( igs -> device , go_text ) > 1 )"		10968577	10					
ANR	10968751	Condition	"( * dev_proc ( igs -> device , get_alpha_bits ) ) ( igs -> device , go_text ) > 1"	891:12:31415:31480	10968577	0	True				
ANR	10968752	RelationalExpression	"( * dev_proc ( igs -> device , get_alpha_bits ) ) ( igs -> device , go_text ) > 1"		10968577	0		>			
ANR	10968753	CallExpression	"( * dev_proc ( igs -> device , get_alpha_bits ) ) ( igs -> device , go_text )"		10968577	0					
ANR	10968754	Callee	"* dev_proc ( igs -> device , get_alpha_bits )"		10968577	0					
ANR	10968755	UnaryOperationExpression	"* dev_proc ( igs -> device , get_alpha_bits )"		10968577	0					
ANR	10968756	UnaryOperator	*		10968577	0					
ANR	10968757	CallExpression	"dev_proc ( igs -> device , get_alpha_bits )"		10968577	1					
ANR	10968758	Callee	dev_proc		10968577	0					
ANR	10968759	Identifier	dev_proc		10968577	0					
ANR	10968760	ArgumentList	igs -> device		10968577	1					
ANR	10968761	Argument	igs -> device		10968577	0					
ANR	10968762	PtrMemberAccess	igs -> device		10968577	0					
ANR	10968763	Identifier	igs		10968577	0					
ANR	10968764	Identifier	device		10968577	1					
ANR	10968765	Argument	get_alpha_bits		10968577	1					
ANR	10968766	Identifier	get_alpha_bits		10968577	0					
ANR	10968767	ArgumentList	igs -> device		10968577	1					
ANR	10968768	Argument	igs -> device		10968577	0					
ANR	10968769	PtrMemberAccess	igs -> device		10968577	0					
ANR	10968770	Identifier	igs		10968577	0					
ANR	10968771	Identifier	device		10968577	1					
ANR	10968772	Argument	go_text		10968577	1					
ANR	10968773	Identifier	go_text		10968577	0					
ANR	10968774	PrimaryExpression	1		10968577	1					
ANR	10968775	CompoundStatement		31:14:1024:1024	10968577	1					
ANR	10968776	ExpressionStatement	gs_newpath ( igs )	893:12:31510:31525	10968577	0	True				
ANR	10968777	CallExpression	gs_newpath ( igs )		10968577	0					
ANR	10968778	Callee	gs_newpath		10968577	0					
ANR	10968779	Identifier	gs_newpath		10968577	0					
ANR	10968780	ArgumentList	igs		10968577	1					
ANR	10968781	Argument	igs		10968577	0					
ANR	10968782	Identifier	igs		10968577	0					
ANR	10968783	ExpressionStatement	"gs_moveto ( igs , 0.0 , 0.0 )"	894:12:31539:31563	10968577	1	True				
ANR	10968784	CallExpression	"gs_moveto ( igs , 0.0 , 0.0 )"		10968577	0					
ANR	10968785	Callee	gs_moveto		10968577	0					
ANR	10968786	Identifier	gs_moveto		10968577	0					
ANR	10968787	ArgumentList	igs		10968577	1					
ANR	10968788	Argument	igs		10968577	0					
ANR	10968789	Identifier	igs		10968577	0					
ANR	10968790	Argument	0.0		10968577	1					
ANR	10968791	PrimaryExpression	0.0		10968577	0					
ANR	10968792	Argument	0.0		10968577	2					
ANR	10968793	PrimaryExpression	0.0		10968577	0					
ANR	10968794	ExpressionStatement	"code = type1_exec_init ( & pcxs -> cis , penum , igs , pfont1 )"	895:12:31577:31631	10968577	2	True				
ANR	10968795	AssignmentExpression	"code = type1_exec_init ( & pcxs -> cis , penum , igs , pfont1 )"		10968577	0		=			
ANR	10968796	Identifier	code		10968577	0					
ANR	10968797	CallExpression	"type1_exec_init ( & pcxs -> cis , penum , igs , pfont1 )"		10968577	1					
ANR	10968798	Callee	type1_exec_init		10968577	0					
ANR	10968799	Identifier	type1_exec_init		10968577	0					
ANR	10968800	ArgumentList	& pcxs -> cis		10968577	1					
ANR	10968801	Argument	& pcxs -> cis		10968577	0					
ANR	10968802	UnaryOperationExpression	& pcxs -> cis		10968577	0					
ANR	10968803	UnaryOperator	&		10968577	0					
ANR	10968804	PtrMemberAccess	pcxs -> cis		10968577	1					
ANR	10968805	Identifier	pcxs		10968577	0					
ANR	10968806	Identifier	cis		10968577	1					
ANR	10968807	Argument	penum		10968577	1					
ANR	10968808	Identifier	penum		10968577	0					
ANR	10968809	Argument	igs		10968577	2					
ANR	10968810	Identifier	igs		10968577	0					
ANR	10968811	Argument	pfont1		10968577	3					
ANR	10968812	Identifier	pfont1		10968577	0					
ANR	10968813	IfStatement	if ( code < 0 )		10968577	3					
ANR	10968814	Condition	code < 0	896:16:31649:31656	10968577	0	True				
ANR	10968815	RelationalExpression	code < 0		10968577	0		<			
ANR	10968816	Identifier	code		10968577	0					
ANR	10968817	PrimaryExpression	0		10968577	1					
ANR	10968818	ReturnStatement	return code ;	897:16:31675:31686	10968577	1	True				
ANR	10968819	Identifier	code		10968577	0					
ANR	10968820	ExpressionStatement	"code = type1exec_bbox ( i_ctx_p , penum , pcxs , pfont , & exec_cont )"	898:12:31700:31762	10968577	4	True				
ANR	10968821	AssignmentExpression	"code = type1exec_bbox ( i_ctx_p , penum , pcxs , pfont , & exec_cont )"		10968577	0		=			
ANR	10968822	Identifier	code		10968577	0					
ANR	10968823	CallExpression	"type1exec_bbox ( i_ctx_p , penum , pcxs , pfont , & exec_cont )"		10968577	1					
ANR	10968824	Callee	type1exec_bbox		10968577	0					
ANR	10968825	Identifier	type1exec_bbox		10968577	0					
ANR	10968826	ArgumentList	i_ctx_p		10968577	1					
ANR	10968827	Argument	i_ctx_p		10968577	0					
ANR	10968828	Identifier	i_ctx_p		10968577	0					
ANR	10968829	Argument	penum		10968577	1					
ANR	10968830	Identifier	penum		10968577	0					
ANR	10968831	Argument	pcxs		10968577	2					
ANR	10968832	Identifier	pcxs		10968577	0					
ANR	10968833	Argument	pfont		10968577	3					
ANR	10968834	Identifier	pfont		10968577	0					
ANR	10968835	Argument	& exec_cont		10968577	4					
ANR	10968836	UnaryOperationExpression	& exec_cont		10968577	0					
ANR	10968837	UnaryOperator	&		10968577	0					
ANR	10968838	Identifier	exec_cont		10968577	1					
ANR	10968839	ElseStatement	else		10968577	0					
ANR	10968840	CompoundStatement		38:15:1307:1307	10968577	0					
ANR	10968841	ExpressionStatement	cont = ( pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0 ? nobbox_fill : nobbox_stroke )	900:12:31793:31914	10968577	0	True				
ANR	10968842	AssignmentExpression	cont = ( pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0 ? nobbox_fill : nobbox_stroke )		10968577	0		=			
ANR	10968843	Identifier	cont		10968577	0					
ANR	10968844	ConditionalExpression	pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0 ? nobbox_fill : nobbox_stroke		10968577	1					
ANR	10968845	Condition	pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0		10968577	0					
ANR	10968846	AndExpression	pbfont -> PaintType == 0 && penum -> orig_font -> PaintType == 0		10968577	0		&&			
ANR	10968847	EqualityExpression	pbfont -> PaintType == 0		10968577	0		==			
ANR	10968848	PtrMemberAccess	pbfont -> PaintType		10968577	0					
ANR	10968849	Identifier	pbfont		10968577	0					
ANR	10968850	Identifier	PaintType		10968577	1					
ANR	10968851	PrimaryExpression	0		10968577	1					
ANR	10968852	EqualityExpression	penum -> orig_font -> PaintType == 0		10968577	1		==			
ANR	10968853	PtrMemberAccess	penum -> orig_font -> PaintType		10968577	0					
ANR	10968854	PtrMemberAccess	penum -> orig_font		10968577	0					
ANR	10968855	Identifier	penum		10968577	0					
ANR	10968856	Identifier	orig_font		10968577	1					
ANR	10968857	Identifier	PaintType		10968577	1					
ANR	10968858	PrimaryExpression	0		10968577	1					
ANR	10968859	Identifier	nobbox_fill		10968577	1					
ANR	10968860	Identifier	nobbox_stroke		10968577	2					
ANR	10968861	ExpressionStatement	exec_cont = 0	902:12:31928:31941	10968577	1	True				
ANR	10968862	AssignmentExpression	exec_cont = 0		10968577	0		=			
ANR	10968863	Identifier	exec_cont		10968577	0					
ANR	10968864	PrimaryExpression	0		10968577	1					
ANR	10968865	ExpressionStatement	"code = zchar_set_cache ( i_ctx_p , pbfont , op - 1 , NULL , pcxs -> sbw + 2 , & pcxs -> char_bbox , cont , & exec_cont , ( pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL ) )"	903:12:31955:32252	10968577	2	True				
ANR	10968866	AssignmentExpression	"code = zchar_set_cache ( i_ctx_p , pbfont , op - 1 , NULL , pcxs -> sbw + 2 , & pcxs -> char_bbox , cont , & exec_cont , ( pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL ) )"		10968577	0		=			
ANR	10968867	Identifier	code		10968577	0					
ANR	10968868	CallExpression	"zchar_set_cache ( i_ctx_p , pbfont , op - 1 , NULL , pcxs -> sbw + 2 , & pcxs -> char_bbox , cont , & exec_cont , ( pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL ) )"		10968577	1					
ANR	10968869	Callee	zchar_set_cache		10968577	0					
ANR	10968870	Identifier	zchar_set_cache		10968577	0					
ANR	10968871	ArgumentList	i_ctx_p		10968577	1					
ANR	10968872	Argument	i_ctx_p		10968577	0					
ANR	10968873	Identifier	i_ctx_p		10968577	0					
ANR	10968874	Argument	pbfont		10968577	1					
ANR	10968875	Identifier	pbfont		10968577	0					
ANR	10968876	Argument	op - 1		10968577	2					
ANR	10968877	AdditiveExpression	op - 1		10968577	0		-			
ANR	10968878	Identifier	op		10968577	0					
ANR	10968879	PrimaryExpression	1		10968577	1					
ANR	10968880	Argument	NULL		10968577	3					
ANR	10968881	Identifier	NULL		10968577	0					
ANR	10968882	Argument	pcxs -> sbw + 2		10968577	4					
ANR	10968883	AdditiveExpression	pcxs -> sbw + 2		10968577	0		+			
ANR	10968884	PtrMemberAccess	pcxs -> sbw		10968577	0					
ANR	10968885	Identifier	pcxs		10968577	0					
ANR	10968886	Identifier	sbw		10968577	1					
ANR	10968887	PrimaryExpression	2		10968577	1					
ANR	10968888	Argument	& pcxs -> char_bbox		10968577	5					
ANR	10968889	UnaryOperationExpression	& pcxs -> char_bbox		10968577	0					
ANR	10968890	UnaryOperator	&		10968577	0					
ANR	10968891	PtrMemberAccess	pcxs -> char_bbox		10968577	1					
ANR	10968892	Identifier	pcxs		10968577	0					
ANR	10968893	Identifier	char_bbox		10968577	1					
ANR	10968894	Argument	cont		10968577	6					
ANR	10968895	Identifier	cont		10968577	0					
ANR	10968896	Argument	& exec_cont		10968577	7					
ANR	10968897	UnaryOperationExpression	& exec_cont		10968577	0					
ANR	10968898	UnaryOperator	&		10968577	0					
ANR	10968899	Identifier	exec_cont		10968577	1					
ANR	10968900	Argument	pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL		10968577	8					
ANR	10968901	ConditionalExpression	pcxs -> use_FontBBox_as_Metrics2 ? pcxs -> sbw : NULL		10968577	0					
ANR	10968902	Condition	pcxs -> use_FontBBox_as_Metrics2		10968577	0					
ANR	10968903	PtrMemberAccess	pcxs -> use_FontBBox_as_Metrics2		10968577	0					
ANR	10968904	Identifier	pcxs		10968577	0					
ANR	10968905	Identifier	use_FontBBox_as_Metrics2		10968577	1					
ANR	10968906	PtrMemberAccess	pcxs -> sbw		10968577	1					
ANR	10968907	Identifier	pcxs		10968577	0					
ANR	10968908	Identifier	sbw		10968577	1					
ANR	10968909	Identifier	NULL		10968577	2					
ANR	10968910	IfStatement	if ( code >= 0 && exec_cont != 0 )		10968577	11					
ANR	10968911	Condition	code >= 0 && exec_cont != 0	909:12:32276:32302	10968577	0	True				
ANR	10968912	AndExpression	code >= 0 && exec_cont != 0		10968577	0		&&			
ANR	10968913	RelationalExpression	code >= 0		10968577	0		>=			
ANR	10968914	Identifier	code		10968577	0					
ANR	10968915	PrimaryExpression	0		10968577	1					
ANR	10968916	EqualityExpression	exec_cont != 0		10968577	1		!=			
ANR	10968917	Identifier	exec_cont		10968577	0					
ANR	10968918	PrimaryExpression	0		10968577	1					
ANR	10968919	ExpressionStatement	code = ( * exec_cont ) ( i_ctx_p )	910:12:32317:32345	10968577	1	True				
ANR	10968920	AssignmentExpression	code = ( * exec_cont ) ( i_ctx_p )		10968577	0		=			
ANR	10968921	Identifier	code		10968577	0					
ANR	10968922	CallExpression	( * exec_cont ) ( i_ctx_p )		10968577	1					
ANR	10968923	Callee	* exec_cont		10968577	0					
ANR	10968924	UnaryOperationExpression	* exec_cont		10968577	0					
ANR	10968925	UnaryOperator	*		10968577	0					
ANR	10968926	Identifier	exec_cont		10968577	1					
ANR	10968927	ArgumentList	i_ctx_p		10968577	1					
ANR	10968928	Argument	i_ctx_p		10968577	0					
ANR	10968929	Identifier	i_ctx_p		10968577	0					
ANR	10968930	ReturnStatement	return code ;	911:8:32355:32366	10968577	12	True				
ANR	10968931	Identifier	code		10968577	0					
ANR	10968932	ReturnType	static int		10968577	1					
ANR	10968933	Identifier	nobbox_finish		10968577	2					
ANR	10968934	ParameterList	"i_ctx_t * i_ctx_p , gs_type1exec_state * pcxs"		10968577	3					
ANR	10968935	Parameter	i_ctx_t * i_ctx_p	861:14:30426:30441	10968577	0	True				
ANR	10968936	ParameterType	i_ctx_t *		10968577	0					
ANR	10968937	Identifier	i_ctx_p		10968577	1					
ANR	10968938	Parameter	gs_type1exec_state * pcxs	861:32:30444:30468	10968577	1	True				
ANR	10968939	ParameterType	gs_type1exec_state *		10968577	0					
ANR	10968940	Identifier	pcxs		10968577	1					
ANR	10968941	CFGEntryNode	ENTRY		10968577		True				
ANR	10968942	CFGExitNode	EXIT		10968577		True				
ANR	10968943	Symbol	op_show_find		10968577						
ANR	10968944	Symbol	gs_error_undefined		10968577						
ANR	10968945	Symbol	pcxs -> use_FontBBox_as_Metrics2		10968577						
ANR	10968946	Symbol	osp		10968577						
ANR	10968947	Symbol	"* dev_proc ( igs -> device , get_alpha_bits )"		10968577						
ANR	10968948	Symbol	igs		10968577						
ANR	10968949	Symbol	type1_exec_init		10968577						
ANR	10968950	Symbol	pcxs		10968577						
ANR	10968951	Symbol	exec_cont		10968577						
ANR	10968952	Symbol	* pbfont		10968577						
ANR	10968953	Symbol	cont		10968577						
ANR	10968954	Symbol	* * penum		10968577						
ANR	10968955	Symbol	pfont1		10968577						
ANR	10968956	Symbol	NULL		10968577						
ANR	10968957	Symbol	font_uses_charstrings		10968577						
ANR	10968958	Symbol	penum		10968577						
ANR	10968959	Symbol	get_alpha_bits		10968577						
ANR	10968960	Symbol	gs_currentpoint		10968577						
ANR	10968961	Symbol	zchar_set_cache		10968577						
ANR	10968962	Symbol	* penum -> orig_font		10968577						
ANR	10968963	Symbol	& endpt		10968577						
ANR	10968964	Symbol	i_ctx_p		10968577						
ANR	10968965	Symbol	* pcxs -> sbw		10968577						
ANR	10968966	Symbol	igs -> device		10968577						
ANR	10968967	Symbol	nobbox_fill		10968577						
ANR	10968968	Symbol	* igs		10968577						
ANR	10968969	Symbol	gs_pathbbox		10968577						
ANR	10968970	Symbol	* * pcxs		10968577						
ANR	10968971	Symbol	* penum		10968577						
ANR	10968972	Symbol	code		10968577						
ANR	10968973	Symbol	pcxs -> present		10968577						
ANR	10968974	Symbol	* exec_cont		10968577						
ANR	10968975	Symbol	endpt . x		10968577						
ANR	10968976	Symbol	* pcxs		10968577						
ANR	10968977	Symbol	endpt . y		10968577						
ANR	10968978	Symbol	* dev_proc		10968577						
ANR	10968979	Symbol	pbfont -> PaintType		10968577						
ANR	10968980	Symbol	dev_proc		10968577						
ANR	10968981	Symbol	nobbox_stroke		10968577						
ANR	10968982	Symbol	go_text		10968577						
ANR	10968983	Symbol	penum -> orig_font		10968577						
ANR	10968984	Symbol	endpt		10968577						
ANR	10968985	Symbol	op		10968577						
ANR	10968986	Symbol	metricsNone		10968577						
ANR	10968987	Symbol	metricsSideBearingAndWidth		10968577						
ANR	10968988	Symbol	pfont		10968577						
ANR	10968989	Symbol	& pfont		10968577						
ANR	10968990	Symbol	type1exec_bbox		10968577						
ANR	10968991	Symbol	font_param		10968577						
ANR	10968992	Symbol	pcxs -> sbw		10968577						
ANR	10968993	Symbol	pbfont		10968577						
ANR	10968994	Symbol	& pcxs -> cis		10968577						
ANR	10968995	Symbol	& exec_cont		10968577						
ANR	10968996	Symbol	& pcxs -> char_bbox		10968577						
ANR	10968997	Symbol	penum -> orig_font -> PaintType		10968577						
ANR	10968998	Function	nobbox_draw	915:0:32438:32586							
ANR	10968999	FunctionDef	"nobbox_draw (i_ctx_t * i_ctx_p , int ( * draw ) ( gs_gstate * ))"		10968998	0					
ANR	10969000	CompoundStatement		917:0:32505:32586	10968998	0					
ANR	10969001	IdentifierDeclStatement	int code = draw ( igs ) ;	918:4:32511:32531	10968998	0	True				
ANR	10969002	IdentifierDecl	code = draw ( igs )		10968998	0					
ANR	10969003	IdentifierDeclType	int		10968998	0					
ANR	10969004	Identifier	code		10968998	1					
ANR	10969005	AssignmentExpression	code = draw ( igs )		10968998	2		=			
ANR	10969006	Identifier	code		10968998	0					
ANR	10969007	CallExpression	draw ( igs )		10968998	1					
ANR	10969008	Callee	draw		10968998	0					
ANR	10969009	Identifier	draw		10968998	0					
ANR	10969010	ArgumentList	igs		10968998	1					
ANR	10969011	Argument	igs		10968998	0					
ANR	10969012	Identifier	igs		10968998	0					
ANR	10969013	IfStatement	if ( code >= 0 )		10968998	1					
ANR	10969014	Condition	code >= 0	920:8:32542:32550	10968998	0	True				
ANR	10969015	RelationalExpression	code >= 0		10968998	0		>=			
ANR	10969016	Identifier	code		10968998	0					
ANR	10969017	PrimaryExpression	0		10968998	1					
ANR	10969018	ExpressionStatement	pop ( 4 )	921:8:32561:32567	10968998	1	True				
ANR	10969019	CallExpression	pop ( 4 )		10968998	0					
ANR	10969020	Callee	pop		10968998	0					
ANR	10969021	Identifier	pop		10968998	0					
ANR	10969022	ArgumentList	4		10968998	1					
ANR	10969023	Argument	4		10968998	0					
ANR	10969024	PrimaryExpression	4		10968998	0					
ANR	10969025	ReturnStatement	return code ;	922:4:32573:32584	10968998	2	True				
ANR	10969026	Identifier	code		10968998	0					
ANR	10969027	ReturnType	static int		10968998	1					
ANR	10969028	Identifier	nobbox_draw		10968998	2					
ANR	10969029	ParameterList	"i_ctx_t * i_ctx_p , int ( * draw ) ( gs_gstate * )"		10968998	3					
ANR	10969030	Parameter	i_ctx_t * i_ctx_p	916:12:32461:32476	10968998	0	True				
ANR	10969031	ParameterType	i_ctx_t *		10968998	0					
ANR	10969032	Identifier	i_ctx_p		10968998	1					
ANR	10969033	Parameter	int ( * draw ) ( gs_gstate * )	916:30:32479:32502	10968998	1	True				
ANR	10969034	ParameterType	(( gs_gstate * ) int) *		10968998	0					
ANR	10969035	Identifier	draw		10968998	1					
ANR	10969036	CFGEntryNode	ENTRY		10968998		True				
ANR	10969037	CFGExitNode	EXIT		10968998		True				
ANR	10969038	Symbol	code		10968998						
ANR	10969039	Symbol	igs		10968998						
ANR	10969040	Symbol	i_ctx_p		10968998						
ANR	10969041	Symbol	draw		10968998						
ANR	10969042	Function	nobbox_fill	924:0:32588:32715							
ANR	10969043	FunctionDef	nobbox_fill (i_ctx_t * i_ctx_p)		10969042	0					
ANR	10969044	CompoundStatement		926:0:32629:32715	10969042	0					
ANR	10969045	ReturnStatement	"return nobbox_draw ( i_ctx_p , GS_CHAR_FILL ) ;"	928:4:32672:32713	10969042	0	True				
ANR	10969046	CallExpression	"nobbox_draw ( i_ctx_p , GS_CHAR_FILL )"		10969042	0					
ANR	10969047	Callee	nobbox_draw		10969042	0					
ANR	10969048	Identifier	nobbox_draw		10969042	0					
ANR	10969049	ArgumentList	i_ctx_p		10969042	1					
ANR	10969050	Argument	i_ctx_p		10969042	0					
ANR	10969051	Identifier	i_ctx_p		10969042	0					
ANR	10969052	Argument	GS_CHAR_FILL		10969042	1					
ANR	10969053	Identifier	GS_CHAR_FILL		10969042	0					
ANR	10969054	ReturnType	static int		10969042	1					
ANR	10969055	Identifier	nobbox_fill		10969042	2					
ANR	10969056	ParameterList	i_ctx_t * i_ctx_p		10969042	3					
ANR	10969057	Parameter	i_ctx_t * i_ctx_p	925:12:32611:32626	10969042	0	True				
ANR	10969058	ParameterType	i_ctx_t *		10969042	0					
ANR	10969059	Identifier	i_ctx_p		10969042	1					
ANR	10969060	CFGEntryNode	ENTRY		10969042		True				
ANR	10969061	CFGExitNode	EXIT		10969042		True				
ANR	10969062	Symbol	i_ctx_p		10969042						
ANR	10969063	Symbol	nobbox_draw		10969042						
ANR	10969064	Symbol	GS_CHAR_FILL		10969042						
ANR	10969065	Function	nobbox_stroke	930:0:32717:33095							
ANR	10969066	FunctionDef	nobbox_stroke (i_ctx_t * i_ctx_p)		10969065	0					
ANR	10969067	CompoundStatement		932:0:32760:33095	10969065	0					
ANR	10969068	IdentifierDeclStatement	int code ;	935:4:32869:32877	10969065	0	True				
ANR	10969069	IdentifierDecl	code		10969065	0					
ANR	10969070	IdentifierDeclType	int		10969065	0					
ANR	10969071	Identifier	code		10969065	1					
ANR	10969072	IdentifierDeclStatement	gs_fixed_point fa = i_ctx_p -> pgs -> fill_adjust ;	936:4:32883:32928	10969065	1	True				
ANR	10969073	IdentifierDecl	fa = i_ctx_p -> pgs -> fill_adjust		10969065	0					
ANR	10969074	IdentifierDeclType	gs_fixed_point		10969065	0					
ANR	10969075	Identifier	fa		10969065	1					
ANR	10969076	AssignmentExpression	fa = i_ctx_p -> pgs -> fill_adjust		10969065	2		=			
ANR	10969077	Identifier	fa		10969065	0					
ANR	10969078	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		10969065	1					
ANR	10969079	PtrMemberAccess	i_ctx_p -> pgs		10969065	0					
ANR	10969080	Identifier	i_ctx_p		10969065	0					
ANR	10969081	Identifier	pgs		10969065	1					
ANR	10969082	Identifier	fill_adjust		10969065	1					
ANR	10969083	ExpressionStatement	i_ctx_p -> pgs -> fill_adjust . x = i_ctx_p -> pgs -> fill_adjust . y = 0	938:4:32935:32996	10969065	2	True				
ANR	10969084	AssignmentExpression	i_ctx_p -> pgs -> fill_adjust . x = i_ctx_p -> pgs -> fill_adjust . y = 0		10969065	0		=			
ANR	10969085	MemberAccess	i_ctx_p -> pgs -> fill_adjust . x		10969065	0					
ANR	10969086	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		10969065	0					
ANR	10969087	PtrMemberAccess	i_ctx_p -> pgs		10969065	0					
ANR	10969088	Identifier	i_ctx_p		10969065	0					
ANR	10969089	Identifier	pgs		10969065	1					
ANR	10969090	Identifier	fill_adjust		10969065	1					
ANR	10969091	Identifier	x		10969065	1					
ANR	10969092	AssignmentExpression	i_ctx_p -> pgs -> fill_adjust . y = 0		10969065	1		=			
ANR	10969093	MemberAccess	i_ctx_p -> pgs -> fill_adjust . y		10969065	0					
ANR	10969094	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		10969065	0					
ANR	10969095	PtrMemberAccess	i_ctx_p -> pgs		10969065	0					
ANR	10969096	Identifier	i_ctx_p		10969065	0					
ANR	10969097	Identifier	pgs		10969065	1					
ANR	10969098	Identifier	fill_adjust		10969065	1					
ANR	10969099	Identifier	y		10969065	1					
ANR	10969100	PrimaryExpression	0		10969065	1					
ANR	10969101	ExpressionStatement	"code = nobbox_draw ( i_ctx_p , gs_stroke )"	939:4:33002:33040	10969065	3	True				
ANR	10969102	AssignmentExpression	"code = nobbox_draw ( i_ctx_p , gs_stroke )"		10969065	0		=			
ANR	10969103	Identifier	code		10969065	0					
ANR	10969104	CallExpression	"nobbox_draw ( i_ctx_p , gs_stroke )"		10969065	1					
ANR	10969105	Callee	nobbox_draw		10969065	0					
ANR	10969106	Identifier	nobbox_draw		10969065	0					
ANR	10969107	ArgumentList	i_ctx_p		10969065	1					
ANR	10969108	Argument	i_ctx_p		10969065	0					
ANR	10969109	Identifier	i_ctx_p		10969065	0					
ANR	10969110	Argument	gs_stroke		10969065	1					
ANR	10969111	Identifier	gs_stroke		10969065	0					
ANR	10969112	ExpressionStatement	i_ctx_p -> pgs -> fill_adjust = fa	940:4:33046:33076	10969065	4	True				
ANR	10969113	AssignmentExpression	i_ctx_p -> pgs -> fill_adjust = fa		10969065	0		=			
ANR	10969114	PtrMemberAccess	i_ctx_p -> pgs -> fill_adjust		10969065	0					
ANR	10969115	PtrMemberAccess	i_ctx_p -> pgs		10969065	0					
ANR	10969116	Identifier	i_ctx_p		10969065	0					
ANR	10969117	Identifier	pgs		10969065	1					
ANR	10969118	Identifier	fill_adjust		10969065	1					
ANR	10969119	Identifier	fa		10969065	1					
ANR	10969120	ReturnStatement	return code ;	941:4:33082:33093	10969065	5	True				
ANR	10969121	Identifier	code		10969065	0					
ANR	10969122	ReturnType	static int		10969065	1					
ANR	10969123	Identifier	nobbox_stroke		10969065	2					
ANR	10969124	ParameterList	i_ctx_t * i_ctx_p		10969065	3					
ANR	10969125	Parameter	i_ctx_t * i_ctx_p	931:14:32742:32757	10969065	0	True				
ANR	10969126	ParameterType	i_ctx_t *		10969065	0					
ANR	10969127	Identifier	i_ctx_p		10969065	1					
ANR	10969128	CFGEntryNode	ENTRY		10969065		True				
ANR	10969129	CFGExitNode	EXIT		10969065		True				
ANR	10969130	Symbol	* * i_ctx_p		10969065						
ANR	10969131	Symbol	code		10969065						
ANR	10969132	Symbol	i_ctx_p		10969065						
ANR	10969133	Symbol	i_ctx_p -> pgs -> fill_adjust . y		10969065						
ANR	10969134	Symbol	i_ctx_p -> pgs		10969065						
ANR	10969135	Symbol	* i_ctx_p		10969065						
ANR	10969136	Symbol	* i_ctx_p -> pgs		10969065						
ANR	10969137	Symbol	i_ctx_p -> pgs -> fill_adjust . x		10969065						
ANR	10969138	Symbol	fa		10969065						
ANR	10969139	Symbol	nobbox_draw		10969065						
ANR	10969140	Symbol	gs_stroke		10969065						
ANR	10969141	Symbol	i_ctx_p -> pgs -> fill_adjust		10969065						
ANR	10969142	Function	zsetweightvector	945:0:33138:34122							
ANR	10969143	FunctionDef	zsetweightvector (i_ctx_t * i_ctx_p)		10969142	0					
ANR	10969144	CompoundStatement		947:0:33184:34122	10969142	0					
ANR	10969145	IdentifierDeclStatement	os_ptr op = osp ;	948:4:33190:33205	10969142	0	True				
ANR	10969146	IdentifierDecl	op = osp		10969142	0					
ANR	10969147	IdentifierDeclType	os_ptr		10969142	0					
ANR	10969148	Identifier	op		10969142	1					
ANR	10969149	AssignmentExpression	op = osp		10969142	2		=			
ANR	10969150	Identifier	osp		10969142	0					
ANR	10969151	Identifier	osp		10969142	1					
ANR	10969152	IdentifierDeclStatement	gs_font * pfont ;	949:4:33211:33225	10969142	1	True				
ANR	10969153	IdentifierDecl	* pfont		10969142	0					
ANR	10969154	IdentifierDeclType	gs_font *		10969142	0					
ANR	10969155	Identifier	pfont		10969142	1					
ANR	10969156	IdentifierDeclStatement	"int code = font_param ( op - 1 , & pfont ) ;"	950:4:33231:33268	10969142	2	True				
ANR	10969157	IdentifierDecl	"code = font_param ( op - 1 , & pfont )"		10969142	0					
ANR	10969158	IdentifierDeclType	int		10969142	0					
ANR	10969159	Identifier	code		10969142	1					
ANR	10969160	AssignmentExpression	"code = font_param ( op - 1 , & pfont )"		10969142	2		=			
ANR	10969161	Identifier	code		10969142	0					
ANR	10969162	CallExpression	"font_param ( op - 1 , & pfont )"		10969142	1					
ANR	10969163	Callee	font_param		10969142	0					
ANR	10969164	Identifier	font_param		10969142	0					
ANR	10969165	ArgumentList	op - 1		10969142	1					
ANR	10969166	Argument	op - 1		10969142	0					
ANR	10969167	AdditiveExpression	op - 1		10969142	0		-			
ANR	10969168	Identifier	op		10969142	0					
ANR	10969169	PrimaryExpression	1		10969142	1					
ANR	10969170	Argument	& pfont		10969142	1					
ANR	10969171	UnaryOperationExpression	& pfont		10969142	0					
ANR	10969172	UnaryOperator	&		10969142	0					
ANR	10969173	Identifier	pfont		10969142	1					
ANR	10969174	IdentifierDeclStatement	gs_font_type1 * pfont1 ;	951:4:33274:33295	10969142	3	True				
ANR	10969175	IdentifierDecl	* pfont1		10969142	0					
ANR	10969176	IdentifierDeclType	gs_font_type1 *		10969142	0					
ANR	10969177	Identifier	pfont1		10969142	1					
ANR	10969178	IdentifierDeclStatement	int size ;	952:4:33301:33309	10969142	4	True				
ANR	10969179	IdentifierDecl	size		10969142	0					
ANR	10969180	IdentifierDeclType	int		10969142	0					
ANR	10969181	Identifier	size		10969142	1					
ANR	10969182	IdentifierDeclStatement	float wv [ max_WeightVector ] ;	953:4:33315:33341	10969142	5	True				
ANR	10969183	IdentifierDecl	wv [ max_WeightVector ]		10969142	0					
ANR	10969184	IdentifierDeclType	float [ max_WeightVector ]		10969142	0					
ANR	10969185	Identifier	wv		10969142	1					
ANR	10969186	Identifier	max_WeightVector		10969142	2					
ANR	10969187	IfStatement	if ( code < 0 )		10969142	6					
ANR	10969188	Condition	code < 0	955:8:33352:33359	10969142	0	True				
ANR	10969189	RelationalExpression	code < 0		10969142	0		<			
ANR	10969190	Identifier	code		10969142	0					
ANR	10969191	PrimaryExpression	0		10969142	1					
ANR	10969192	CompoundStatement		9:18:177:177	10969142	1					
ANR	10969193	ExpressionStatement	pop ( 2 )	957:8:33451:33457	10969142	0	True				
ANR	10969194	CallExpression	pop ( 2 )		10969142	0					
ANR	10969195	Callee	pop		10969142	0					
ANR	10969196	Identifier	pop		10969142	0					
ANR	10969197	ArgumentList	2		10969142	1					
ANR	10969198	Argument	2		10969142	0					
ANR	10969199	PrimaryExpression	2		10969142	0					
ANR	10969200	ReturnStatement	return 0 ;	958:8:33467:33475	10969142	1	True				
ANR	10969201	PrimaryExpression	0		10969142	0					
ANR	10969202	IfStatement	if ( pfont -> FontType != ft_encrypted && pfont -> FontType != ft_encrypted2 )		10969142	7					
ANR	10969203	Condition	pfont -> FontType != ft_encrypted && pfont -> FontType != ft_encrypted2	960:8:33491:33557	10969142	0	True				
ANR	10969204	AndExpression	pfont -> FontType != ft_encrypted && pfont -> FontType != ft_encrypted2		10969142	0		&&			
ANR	10969205	EqualityExpression	pfont -> FontType != ft_encrypted		10969142	0		!=			
ANR	10969206	PtrMemberAccess	pfont -> FontType		10969142	0					
ANR	10969207	Identifier	pfont		10969142	0					
ANR	10969208	Identifier	FontType		10969142	1					
ANR	10969209	Identifier	ft_encrypted		10969142	1					
ANR	10969210	EqualityExpression	pfont -> FontType != ft_encrypted2		10969142	1		!=			
ANR	10969211	PtrMemberAccess	pfont -> FontType		10969142	0					
ANR	10969212	Identifier	pfont		10969142	0					
ANR	10969213	Identifier	FontType		10969142	1					
ANR	10969214	Identifier	ft_encrypted2		10969142	1					
ANR	10969215	ExpressionStatement	return_error ( gs_error_invalidfont )	961:8:33568:33602	10969142	1	True				
ANR	10969216	CallExpression	return_error ( gs_error_invalidfont )		10969142	0					
ANR	10969217	Callee	return_error		10969142	0					
ANR	10969218	Identifier	return_error		10969142	0					
ANR	10969219	ArgumentList	gs_error_invalidfont		10969142	1					
ANR	10969220	Argument	gs_error_invalidfont		10969142	0					
ANR	10969221	Identifier	gs_error_invalidfont		10969142	0					
ANR	10969222	ExpressionStatement	pfont1 = ( gs_font_type1 * ) pfont	962:4:33608:33639	10969142	8	True				
ANR	10969223	AssignmentExpression	pfont1 = ( gs_font_type1 * ) pfont		10969142	0		=			
ANR	10969224	Identifier	pfont1		10969142	0					
ANR	10969225	CastExpression	( gs_font_type1 * ) pfont		10969142	1					
ANR	10969226	CastTarget	gs_font_type1 *		10969142	0					
ANR	10969227	Identifier	pfont		10969142	1					
ANR	10969228	ExpressionStatement	size = r_size ( op )	963:4:33645:33662	10969142	9	True				
ANR	10969229	AssignmentExpression	size = r_size ( op )		10969142	0		=			
ANR	10969230	Identifier	size		10969142	0					
ANR	10969231	CallExpression	r_size ( op )		10969142	1					
ANR	10969232	Callee	r_size		10969142	0					
ANR	10969233	Identifier	r_size		10969142	0					
ANR	10969234	ArgumentList	op		10969142	1					
ANR	10969235	Argument	op		10969142	0					
ANR	10969236	Identifier	op		10969142	0					
ANR	10969237	IfStatement	if ( size != pfont1 -> data . WeightVector . count )		10969142	10					
ANR	10969238	Condition	size != pfont1 -> data . WeightVector . count	964:8:33672:33710	10969142	0	True				
ANR	10969239	EqualityExpression	size != pfont1 -> data . WeightVector . count		10969142	0		!=			
ANR	10969240	Identifier	size		10969142	0					
ANR	10969241	MemberAccess	pfont1 -> data . WeightVector . count		10969142	1					
ANR	10969242	MemberAccess	pfont1 -> data . WeightVector		10969142	0					
ANR	10969243	PtrMemberAccess	pfont1 -> data		10969142	0					
ANR	10969244	Identifier	pfont1		10969142	0					
ANR	10969245	Identifier	data		10969142	1					
ANR	10969246	Identifier	WeightVector		10969142	1					
ANR	10969247	Identifier	count		10969142	1					
ANR	10969248	ExpressionStatement	return_error ( gs_error_invalidfont )	965:8:33721:33755	10969142	1	True				
ANR	10969249	CallExpression	return_error ( gs_error_invalidfont )		10969142	0					
ANR	10969250	Callee	return_error		10969142	0					
ANR	10969251	Identifier	return_error		10969142	0					
ANR	10969252	ArgumentList	gs_error_invalidfont		10969142	1					
ANR	10969253	Argument	gs_error_invalidfont		10969142	0					
ANR	10969254	Identifier	gs_error_invalidfont		10969142	0					
ANR	10969255	ExpressionStatement	"code = process_float_array ( imemory , op , size , wv )"	966:4:33761:33810	10969142	11	True				
ANR	10969256	AssignmentExpression	"code = process_float_array ( imemory , op , size , wv )"		10969142	0		=			
ANR	10969257	Identifier	code		10969142	0					
ANR	10969258	CallExpression	"process_float_array ( imemory , op , size , wv )"		10969142	1					
ANR	10969259	Callee	process_float_array		10969142	0					
ANR	10969260	Identifier	process_float_array		10969142	0					
ANR	10969261	ArgumentList	imemory		10969142	1					
ANR	10969262	Argument	imemory		10969142	0					
ANR	10969263	Identifier	imemory		10969142	0					
ANR	10969264	Argument	op		10969142	1					
ANR	10969265	Identifier	op		10969142	0					
ANR	10969266	Argument	size		10969142	2					
ANR	10969267	Identifier	size		10969142	0					
ANR	10969268	Argument	wv		10969142	3					
ANR	10969269	Identifier	wv		10969142	0					
ANR	10969270	IfStatement	if ( code < 0 )		10969142	12					
ANR	10969271	Condition	code < 0	967:8:33820:33827	10969142	0	True				
ANR	10969272	RelationalExpression	code < 0		10969142	0		<			
ANR	10969273	Identifier	code		10969142	0					
ANR	10969274	PrimaryExpression	0		10969142	1					
ANR	10969275	ReturnStatement	return code ;	968:8:33838:33849	10969142	1	True				
ANR	10969276	Identifier	code		10969142	0					
ANR	10969277	IfStatement	"if ( memcmp ( wv , pfont1 -> data . WeightVector . values , sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) * size ) != 0 )"		10969142	13					
ANR	10969278	Condition	"memcmp ( wv , pfont1 -> data . WeightVector . values , sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) * size ) != 0"	969:8:33859:33967	10969142	0	True				
ANR	10969279	EqualityExpression	"memcmp ( wv , pfont1 -> data . WeightVector . values , sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) * size ) != 0"		10969142	0		!=			
ANR	10969280	CallExpression	"memcmp ( wv , pfont1 -> data . WeightVector . values , sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) * size )"		10969142	0					
ANR	10969281	Callee	memcmp		10969142	0					
ANR	10969282	Identifier	memcmp		10969142	0					
ANR	10969283	ArgumentList	wv		10969142	1					
ANR	10969284	Argument	wv		10969142	0					
ANR	10969285	Identifier	wv		10969142	0					
ANR	10969286	Argument	pfont1 -> data . WeightVector . values		10969142	1					
ANR	10969287	MemberAccess	pfont1 -> data . WeightVector . values		10969142	0					
ANR	10969288	MemberAccess	pfont1 -> data . WeightVector		10969142	0					
ANR	10969289	PtrMemberAccess	pfont1 -> data		10969142	0					
ANR	10969290	Identifier	pfont1		10969142	0					
ANR	10969291	Identifier	data		10969142	1					
ANR	10969292	Identifier	WeightVector		10969142	1					
ANR	10969293	Identifier	values		10969142	1					
ANR	10969294	Argument	sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) * size		10969142	2					
ANR	10969295	MultiplicativeExpression	sizeof ( pfont1 -> data . WeightVector . values [ 0 ] ) * size		10969142	0		*			
ANR	10969296	SizeofExpression	sizeof ( pfont1 -> data . WeightVector . values [ 0 ] )		10969142	0					
ANR	10969297	Sizeof	sizeof		10969142	0					
ANR	10969298	ArrayIndexing	pfont1 -> data . WeightVector . values [ 0 ]		10969142	1					
ANR	10969299	MemberAccess	pfont1 -> data . WeightVector . values		10969142	0					
ANR	10969300	MemberAccess	pfont1 -> data . WeightVector		10969142	0					
ANR	10969301	PtrMemberAccess	pfont1 -> data		10969142	0					
ANR	10969302	Identifier	pfont1		10969142	0					
ANR	10969303	Identifier	data		10969142	1					
ANR	10969304	Identifier	WeightVector		10969142	1					
ANR	10969305	Identifier	values		10969142	1					
ANR	10969306	PrimaryExpression	0		10969142	1					
ANR	10969307	Identifier	size		10969142	1					
ANR	10969308	PrimaryExpression	0		10969142	1					
ANR	10969309	CompoundStatement		24:66:785:785	10969142	1					
ANR	10969310	ExpressionStatement	"memcpy ( pfont1 -> data . WeightVector . values , wv , size )"	971:8:33980:34030	10969142	0	True				
ANR	10969311	CallExpression	"memcpy ( pfont1 -> data . WeightVector . values , wv , size )"		10969142	0					
ANR	10969312	Callee	memcpy		10969142	0					
ANR	10969313	Identifier	memcpy		10969142	0					
ANR	10969314	ArgumentList	pfont1 -> data . WeightVector . values		10969142	1					
ANR	10969315	Argument	pfont1 -> data . WeightVector . values		10969142	0					
ANR	10969316	MemberAccess	pfont1 -> data . WeightVector . values		10969142	0					
ANR	10969317	MemberAccess	pfont1 -> data . WeightVector		10969142	0					
ANR	10969318	PtrMemberAccess	pfont1 -> data		10969142	0					
ANR	10969319	Identifier	pfont1		10969142	0					
ANR	10969320	Identifier	data		10969142	1					
ANR	10969321	Identifier	WeightVector		10969142	1					
ANR	10969322	Identifier	values		10969142	1					
ANR	10969323	Argument	wv		10969142	1					
ANR	10969324	Identifier	wv		10969142	0					
ANR	10969325	Argument	size		10969142	2					
ANR	10969326	Identifier	size		10969142	0					
ANR	10969327	ExpressionStatement	gs_purge_font_from_char_caches_completely ( pfont )	972:8:34040:34088	10969142	1	True				
ANR	10969328	CallExpression	gs_purge_font_from_char_caches_completely ( pfont )		10969142	0					
ANR	10969329	Callee	gs_purge_font_from_char_caches_completely		10969142	0					
ANR	10969330	Identifier	gs_purge_font_from_char_caches_completely		10969142	0					
ANR	10969331	ArgumentList	pfont		10969142	1					
ANR	10969332	Argument	pfont		10969142	0					
ANR	10969333	Identifier	pfont		10969142	0					
ANR	10969334	ExpressionStatement	pop ( 2 )	974:4:34100:34106	10969142	14	True				
ANR	10969335	CallExpression	pop ( 2 )		10969142	0					
ANR	10969336	Callee	pop		10969142	0					
ANR	10969337	Identifier	pop		10969142	0					
ANR	10969338	ArgumentList	2		10969142	1					
ANR	10969339	Argument	2		10969142	0					
ANR	10969340	PrimaryExpression	2		10969142	0					
ANR	10969341	ReturnStatement	return 0 ;	975:4:34112:34120	10969142	15	True				
ANR	10969342	PrimaryExpression	0		10969142	0					
ANR	10969343	ReturnType	static int		10969142	1					
ANR	10969344	Identifier	zsetweightvector		10969142	2					
ANR	10969345	ParameterList	i_ctx_t * i_ctx_p		10969142	3					
ANR	10969346	Parameter	i_ctx_t * i_ctx_p	946:17:33166:33181	10969142	0	True				
ANR	10969347	ParameterType	i_ctx_t *		10969142	0					
ANR	10969348	Identifier	i_ctx_p		10969142	1					
ANR	10969349	CFGEntryNode	ENTRY		10969142		True				
ANR	10969350	CFGExitNode	EXIT		10969142		True				
ANR	10969351	Symbol	* pfont1 -> data		10969142						
ANR	10969352	Symbol	code		10969142						
ANR	10969353	Symbol	process_float_array		10969142						
ANR	10969354	Symbol	ft_encrypted		10969142						
ANR	10969355	Symbol	pfont1 -> data . WeightVector . count		10969142						
ANR	10969356	Symbol	osp		10969142						
ANR	10969357	Symbol	memcmp		10969142						
ANR	10969358	Symbol	pfont -> FontType		10969142						
ANR	10969359	Symbol	ft_encrypted2		10969142						
ANR	10969360	Symbol	r_size		10969142						
ANR	10969361	Symbol	pfont1 -> data . WeightVector . values		10969142						
ANR	10969362	Symbol	imemory		10969142						
ANR	10969363	Symbol	* pfont1 -> data . WeightVector . values		10969142						
ANR	10969364	Symbol	gs_error_invalidfont		10969142						
ANR	10969365	Symbol	wv		10969142						
ANR	10969366	Symbol	op		10969142						
ANR	10969367	Symbol	* pfont1		10969142						
ANR	10969368	Symbol	pfont1		10969142						
ANR	10969369	Symbol	pfont		10969142						
ANR	10969370	Symbol	& pfont		10969142						
ANR	10969371	Symbol	font_param		10969142						
ANR	10969372	Symbol	pfont1 -> data		10969142						
ANR	10969373	Symbol	* pfont		10969142						
ANR	10969374	Symbol	* pfont1 -> data . WeightVector		10969142						
ANR	10969375	Symbol	size		10969142						
ANR	10969376	Symbol	pfont1 -> data . WeightVector		10969142						
ANR	10969377	Symbol	i_ctx_p		10969142						
ANR	10969378	Symbol	* * pfont1		10969142						
ANR	10969379	DeclStmt									
ANR	10969380	Decl							const op_def	const op_def [ ]	zchar1_op_defs
ANR	10969381	Function	z1_glyph_data	997:0:34723:34934							
ANR	10969382	FunctionDef	"z1_glyph_data (gs_font_type1 * pfont , gs_glyph glyph , gs_glyph_data_t * pgd)"		10969381	0					
ANR	10969383	CompoundStatement		999:0:34809:34934	10969381	0					
ANR	10969384	IdentifierDeclStatement	ref gref ;	1000:4:34815:34823	10969381	0	True				
ANR	10969385	IdentifierDecl	gref		10969381	0					
ANR	10969386	IdentifierDeclType	ref		10969381	0					
ANR	10969387	Identifier	gref		10969381	1					
ANR	10969388	ExpressionStatement	"glyph_ref ( pfont -> memory , glyph , & gref )"	1002:4:34830:34868	10969381	1	True				
ANR	10969389	CallExpression	"glyph_ref ( pfont -> memory , glyph , & gref )"		10969381	0					
ANR	10969390	Callee	glyph_ref		10969381	0					
ANR	10969391	Identifier	glyph_ref		10969381	0					
ANR	10969392	ArgumentList	pfont -> memory		10969381	1					
ANR	10969393	Argument	pfont -> memory		10969381	0					
ANR	10969394	PtrMemberAccess	pfont -> memory		10969381	0					
ANR	10969395	Identifier	pfont		10969381	0					
ANR	10969396	Identifier	memory		10969381	1					
ANR	10969397	Argument	glyph		10969381	1					
ANR	10969398	Identifier	glyph		10969381	0					
ANR	10969399	Argument	& gref		10969381	2					
ANR	10969400	UnaryOperationExpression	& gref		10969381	0					
ANR	10969401	UnaryOperator	&		10969381	0					
ANR	10969402	Identifier	gref		10969381	1					
ANR	10969403	ReturnStatement	"return zchar_charstring_data ( ( gs_font * ) pfont , & gref , pgd ) ;"	1003:4:34874:34932	10969381	2	True				
ANR	10969404	CallExpression	"zchar_charstring_data ( ( gs_font * ) pfont , & gref , pgd )"		10969381	0					
ANR	10969405	Callee	zchar_charstring_data		10969381	0					
ANR	10969406	Identifier	zchar_charstring_data		10969381	0					
ANR	10969407	ArgumentList	( gs_font * ) pfont		10969381	1					
ANR	10969408	Argument	( gs_font * ) pfont		10969381	0					
ANR	10969409	CastExpression	( gs_font * ) pfont		10969381	0					
ANR	10969410	CastTarget	gs_font *		10969381	0					
ANR	10969411	Identifier	pfont		10969381	1					
ANR	10969412	Argument	& gref		10969381	1					
ANR	10969413	UnaryOperationExpression	& gref		10969381	0					
ANR	10969414	UnaryOperator	&		10969381	0					
ANR	10969415	Identifier	gref		10969381	1					
ANR	10969416	Argument	pgd		10969381	2					
ANR	10969417	Identifier	pgd		10969381	0					
ANR	10969418	ReturnType	static int		10969381	1					
ANR	10969419	Identifier	z1_glyph_data		10969381	2					
ANR	10969420	ParameterList	"gs_font_type1 * pfont , gs_glyph glyph , gs_glyph_data_t * pgd"		10969381	3					
ANR	10969421	Parameter	gs_font_type1 * pfont	998:14:34748:34768	10969381	0	True				
ANR	10969422	ParameterType	gs_font_type1 *		10969381	0					
ANR	10969423	Identifier	pfont		10969381	1					
ANR	10969424	Parameter	gs_glyph glyph	998:37:34771:34784	10969381	1	True				
ANR	10969425	ParameterType	gs_glyph		10969381	0					
ANR	10969426	Identifier	glyph		10969381	1					
ANR	10969427	Parameter	gs_glyph_data_t * pgd	998:53:34787:34806	10969381	2	True				
ANR	10969428	ParameterType	gs_glyph_data_t *		10969381	0					
ANR	10969429	Identifier	pgd		10969381	1					
ANR	10969430	CFGEntryNode	ENTRY		10969381		True				
ANR	10969431	CFGExitNode	EXIT		10969381		True				
ANR	10969432	Symbol	glyph		10969381						
ANR	10969433	Symbol	* pfont		10969381						
ANR	10969434	Symbol	pfont -> memory		10969381						
ANR	10969435	Symbol	zchar_charstring_data		10969381						
ANR	10969436	Symbol	pfont		10969381						
ANR	10969437	Symbol	pgd		10969381						
ANR	10969438	Symbol	gref		10969381						
ANR	10969439	Symbol	& gref		10969381						
ANR	10969440	Function	z1_subr_data	1006:0:34937:35484							
ANR	10969441	FunctionDef	"z1_subr_data (gs_font_type1 * pfont , int index , bool global , gs_glyph_data_t * pgd)"		10969440	0					
ANR	10969442	CompoundStatement		1009:0:35043:35484	10969440	0					
ANR	10969443	IdentifierDeclStatement	const font_data * pfdata = pfont_data ( pfont ) ;	1010:4:35049:35092	10969440	0	True				
ANR	10969444	IdentifierDecl	* pfdata = pfont_data ( pfont )		10969440	0					
ANR	10969445	IdentifierDeclType	const font_data *		10969440	0					
ANR	10969446	Identifier	pfdata		10969440	1					
ANR	10969447	AssignmentExpression	* pfdata = pfont_data ( pfont )		10969440	2		=			
ANR	10969448	Identifier	pfdata		10969440	0					
ANR	10969449	CallExpression	pfont_data ( pfont )		10969440	1					
ANR	10969450	Callee	pfont_data		10969440	0					
ANR	10969451	Identifier	pfont_data		10969440	0					
ANR	10969452	ArgumentList	pfont		10969440	1					
ANR	10969453	Argument	pfont		10969440	0					
ANR	10969454	Identifier	pfont		10969440	0					
ANR	10969455	IdentifierDeclStatement	ref subr ;	1011:4:35098:35106	10969440	1	True				
ANR	10969456	IdentifierDecl	subr		10969440	0					
ANR	10969457	IdentifierDeclType	ref		10969440	0					
ANR	10969458	Identifier	subr		10969440	1					
ANR	10969459	IdentifierDeclStatement	int code ;	1012:4:35112:35120	10969440	2	True				
ANR	10969460	IdentifierDecl	code		10969440	0					
ANR	10969461	IdentifierDeclType	int		10969440	0					
ANR	10969462	Identifier	code		10969440	1					
ANR	10969463	ExpressionStatement	"code = array_get ( pfont -> memory , ( global ? & pfdata -> u . type1 . GlobalSubrs : & pfdata -> u . type1 . Subrs ) , index , & subr )"	1014:4:35127:35281	10969440	3	True				
ANR	10969464	AssignmentExpression	"code = array_get ( pfont -> memory , ( global ? & pfdata -> u . type1 . GlobalSubrs : & pfdata -> u . type1 . Subrs ) , index , & subr )"		10969440	0		=			
ANR	10969465	Identifier	code		10969440	0					
ANR	10969466	CallExpression	"array_get ( pfont -> memory , ( global ? & pfdata -> u . type1 . GlobalSubrs : & pfdata -> u . type1 . Subrs ) , index , & subr )"		10969440	1					
ANR	10969467	Callee	array_get		10969440	0					
ANR	10969468	Identifier	array_get		10969440	0					
ANR	10969469	ArgumentList	pfont -> memory		10969440	1					
ANR	10969470	Argument	pfont -> memory		10969440	0					
ANR	10969471	PtrMemberAccess	pfont -> memory		10969440	0					
ANR	10969472	Identifier	pfont		10969440	0					
ANR	10969473	Identifier	memory		10969440	1					
ANR	10969474	Argument	global ? & pfdata -> u . type1 . GlobalSubrs : & pfdata -> u . type1 . Subrs		10969440	1					
ANR	10969475	ConditionalExpression	global ? & pfdata -> u . type1 . GlobalSubrs : & pfdata -> u . type1 . Subrs		10969440	0					
ANR	10969476	Condition	global		10969440	0					
ANR	10969477	Identifier	global		10969440	0					
ANR	10969478	UnaryOperationExpression	& pfdata -> u . type1 . GlobalSubrs		10969440	1					
ANR	10969479	UnaryOperator	&		10969440	0					
ANR	10969480	MemberAccess	pfdata -> u . type1 . GlobalSubrs		10969440	1					
ANR	10969481	MemberAccess	pfdata -> u . type1		10969440	0					
ANR	10969482	PtrMemberAccess	pfdata -> u		10969440	0					
ANR	10969483	Identifier	pfdata		10969440	0					
ANR	10969484	Identifier	u		10969440	1					
ANR	10969485	Identifier	type1		10969440	1					
ANR	10969486	Identifier	GlobalSubrs		10969440	1					
ANR	10969487	UnaryOperationExpression	& pfdata -> u . type1 . Subrs		10969440	2					
ANR	10969488	UnaryOperator	&		10969440	0					
ANR	10969489	MemberAccess	pfdata -> u . type1 . Subrs		10969440	1					
ANR	10969490	MemberAccess	pfdata -> u . type1		10969440	0					
ANR	10969491	PtrMemberAccess	pfdata -> u		10969440	0					
ANR	10969492	Identifier	pfdata		10969440	0					
ANR	10969493	Identifier	u		10969440	1					
ANR	10969494	Identifier	type1		10969440	1					
ANR	10969495	Identifier	Subrs		10969440	1					
ANR	10969496	Argument	index		10969440	2					
ANR	10969497	Identifier	index		10969440	0					
ANR	10969498	Argument	& subr		10969440	3					
ANR	10969499	UnaryOperationExpression	& subr		10969440	0					
ANR	10969500	UnaryOperator	&		10969440	0					
ANR	10969501	Identifier	subr		10969440	1					
ANR	10969502	IfStatement	if ( code < 0 )		10969440	4					
ANR	10969503	Condition	code < 0	1017:8:35291:35298	10969440	0	True				
ANR	10969504	RelationalExpression	code < 0		10969440	0		<			
ANR	10969505	Identifier	code		10969440	0					
ANR	10969506	PrimaryExpression	0		10969440	1					
ANR	10969507	ReturnStatement	return code ;	1018:8:35309:35320	10969440	1	True				
ANR	10969508	Identifier	code		10969440	0					
ANR	10969509	ExpressionStatement	"check_type_only ( subr , t_string )"	1019:4:35326:35357	10969440	5	True				
ANR	10969510	CallExpression	"check_type_only ( subr , t_string )"		10969440	0					
ANR	10969511	Callee	check_type_only		10969440	0					
ANR	10969512	Identifier	check_type_only		10969440	0					
ANR	10969513	ArgumentList	subr		10969440	1					
ANR	10969514	Argument	subr		10969440	0					
ANR	10969515	Identifier	subr		10969440	0					
ANR	10969516	Argument	t_string		10969440	1					
ANR	10969517	Identifier	t_string		10969440	0					
ANR	10969518	ExpressionStatement	"gs_glyph_data_from_string ( pgd , subr . value . const_bytes , r_size ( & subr ) , NULL )"	1020:4:35363:35468	10969440	6	True				
ANR	10969519	CallExpression	"gs_glyph_data_from_string ( pgd , subr . value . const_bytes , r_size ( & subr ) , NULL )"		10969440	0					
ANR	10969520	Callee	gs_glyph_data_from_string		10969440	0					
ANR	10969521	Identifier	gs_glyph_data_from_string		10969440	0					
ANR	10969522	ArgumentList	pgd		10969440	1					
ANR	10969523	Argument	pgd		10969440	0					
ANR	10969524	Identifier	pgd		10969440	0					
ANR	10969525	Argument	subr . value . const_bytes		10969440	1					
ANR	10969526	MemberAccess	subr . value . const_bytes		10969440	0					
ANR	10969527	MemberAccess	subr . value		10969440	0					
ANR	10969528	Identifier	subr		10969440	0					
ANR	10969529	Identifier	value		10969440	1					
ANR	10969530	Identifier	const_bytes		10969440	1					
ANR	10969531	Argument	r_size ( & subr )		10969440	2					
ANR	10969532	CallExpression	r_size ( & subr )		10969440	0					
ANR	10969533	Callee	r_size		10969440	0					
ANR	10969534	Identifier	r_size		10969440	0					
ANR	10969535	ArgumentList	& subr		10969440	1					
ANR	10969536	Argument	& subr		10969440	0					
ANR	10969537	UnaryOperationExpression	& subr		10969440	0					
ANR	10969538	UnaryOperator	&		10969440	0					
ANR	10969539	Identifier	subr		10969440	1					
ANR	10969540	Argument	NULL		10969440	3					
ANR	10969541	Identifier	NULL		10969440	0					
ANR	10969542	ReturnStatement	return 0 ;	1022:4:35474:35482	10969440	7	True				
ANR	10969543	PrimaryExpression	0		10969440	0					
ANR	10969544	ReturnType	static int		10969440	1					
ANR	10969545	Identifier	z1_subr_data		10969440	2					
ANR	10969546	ParameterList	"gs_font_type1 * pfont , int index , bool global , gs_glyph_data_t * pgd"		10969440	3					
ANR	10969547	Parameter	gs_font_type1 * pfont	1007:13:34961:34981	10969440	0	True				
ANR	10969548	ParameterType	gs_font_type1 *		10969440	0					
ANR	10969549	Identifier	pfont		10969440	1					
ANR	10969550	Parameter	int index	1007:36:34984:34992	10969440	1	True				
ANR	10969551	ParameterType	int		10969440	0					
ANR	10969552	Identifier	index		10969440	1					
ANR	10969553	Parameter	bool global	1007:47:34995:35005	10969440	2	True				
ANR	10969554	ParameterType	bool		10969440	0					
ANR	10969555	Identifier	global		10969440	1					
ANR	10969556	Parameter	gs_glyph_data_t * pgd	1008:13:35021:35040	10969440	3	True				
ANR	10969557	ParameterType	gs_glyph_data_t *		10969440	0					
ANR	10969558	Identifier	pgd		10969440	1					
ANR	10969559	CFGEntryNode	ENTRY		10969440		True				
ANR	10969560	CFGExitNode	EXIT		10969440		True				
ANR	10969561	Symbol	code		10969440						
ANR	10969562	Symbol	NULL		10969440						
ANR	10969563	Symbol	subr		10969440						
ANR	10969564	Symbol	pfont -> memory		10969440						
ANR	10969565	Symbol	subr . value		10969440						
ANR	10969566	Symbol	pfont		10969440						
ANR	10969567	Symbol	pfdata -> u . type1		10969440						
ANR	10969568	Symbol	array_get		10969440						
ANR	10969569	Symbol	index		10969440						
ANR	10969570	Symbol	pfdata -> u		10969440						
ANR	10969571	Symbol	global		10969440						
ANR	10969572	Symbol	pfdata		10969440						
ANR	10969573	Symbol	pgd		10969440						
ANR	10969574	Symbol	& pfdata -> u . type1		10969440						
ANR	10969575	Symbol	subr . value . const_bytes		10969440						
ANR	10969576	Symbol	& pfdata -> u . type1 . GlobalSubrs		10969440						
ANR	10969577	Symbol	t_string		10969440						
ANR	10969578	Symbol	* pfont		10969440						
ANR	10969579	Symbol	* pfdata		10969440						
ANR	10969580	Symbol	r_size		10969440						
ANR	10969581	Symbol	& pfdata -> u . type1 . Subrs		10969440						
ANR	10969582	Symbol	pfont_data		10969440						
ANR	10969583	Symbol	& pfdata -> u		10969440						
ANR	10969584	Symbol	& subr		10969440						
ANR	10969585	Function	z1_seac_data	1025:0:35487:36181							
ANR	10969586	FunctionDef	"z1_seac_data (gs_font_type1 * pfont , int ccode , gs_glyph * pglyph , gs_const_string * gstr , gs_glyph_data_t * pgd)"		10969585	0					
ANR	10969587	CompoundStatement		1028:0:35620:36181	10969585	0					
ANR	10969588	IdentifierDeclStatement	"gs_glyph glyph = gs_c_known_encode ( ( gs_char ) ccode , ENCODING_INDEX_STANDARD ) ;"	1029:4:35626:35740	10969585	0	True				
ANR	10969589	IdentifierDecl	"glyph = gs_c_known_encode ( ( gs_char ) ccode , ENCODING_INDEX_STANDARD )"		10969585	0					
ANR	10969590	IdentifierDeclType	gs_glyph		10969585	0					
ANR	10969591	Identifier	glyph		10969585	1					
ANR	10969592	AssignmentExpression	"glyph = gs_c_known_encode ( ( gs_char ) ccode , ENCODING_INDEX_STANDARD )"		10969585	2		=			
ANR	10969593	Identifier	glyph		10969585	0					
ANR	10969594	CallExpression	"gs_c_known_encode ( ( gs_char ) ccode , ENCODING_INDEX_STANDARD )"		10969585	1					
ANR	10969595	Callee	gs_c_known_encode		10969585	0					
ANR	10969596	Identifier	gs_c_known_encode		10969585	0					
ANR	10969597	ArgumentList	( gs_char ) ccode		10969585	1					
ANR	10969598	Argument	( gs_char ) ccode		10969585	0					
ANR	10969599	CastExpression	( gs_char ) ccode		10969585	0					
ANR	10969600	CastTarget	gs_char		10969585	0					
ANR	10969601	Identifier	ccode		10969585	1					
ANR	10969602	Argument	ENCODING_INDEX_STANDARD		10969585	1					
ANR	10969603	Identifier	ENCODING_INDEX_STANDARD		10969585	0					
ANR	10969604	IdentifierDeclStatement	int code ;	1031:4:35746:35754	10969585	1	True				
ANR	10969605	IdentifierDecl	code		10969585	0					
ANR	10969606	IdentifierDeclType	int		10969585	0					
ANR	10969607	Identifier	code		10969585	1					
ANR	10969608	IdentifierDeclStatement	ref rglyph ;	1032:4:35760:35770	10969585	2	True				
ANR	10969609	IdentifierDecl	rglyph		10969585	0					
ANR	10969610	IdentifierDeclType	ref		10969585	0					
ANR	10969611	Identifier	rglyph		10969585	1					
ANR	10969612	IfStatement	if ( glyph == GS_NO_GLYPH )		10969585	3					
ANR	10969613	Condition	glyph == GS_NO_GLYPH	1034:8:35781:35800	10969585	0	True				
ANR	10969614	EqualityExpression	glyph == GS_NO_GLYPH		10969585	0		==			
ANR	10969615	Identifier	glyph		10969585	0					
ANR	10969616	Identifier	GS_NO_GLYPH		10969585	1					
ANR	10969617	ExpressionStatement	return_error ( gs_error_rangecheck )	1035:8:35811:35844	10969585	1	True				
ANR	10969618	CallExpression	return_error ( gs_error_rangecheck )		10969585	0					
ANR	10969619	Callee	return_error		10969585	0					
ANR	10969620	Identifier	return_error		10969585	0					
ANR	10969621	ArgumentList	gs_error_rangecheck		10969585	1					
ANR	10969622	Argument	gs_error_rangecheck		10969585	0					
ANR	10969623	Identifier	gs_error_rangecheck		10969585	0					
ANR	10969624	IfStatement	"if ( ( code = gs_c_glyph_name ( glyph , gstr ) ) < 0 || ( code = name_ref ( pfont -> memory , gstr -> data , gstr -> size , & rglyph , 0 ) ) < 0 )"		10969585	4					
ANR	10969625	Condition	"( code = gs_c_glyph_name ( glyph , gstr ) ) < 0 || ( code = name_ref ( pfont -> memory , gstr -> data , gstr -> size , & rglyph , 0 ) ) < 0"	1036:8:35854:35978	10969585	0	True				
ANR	10969626	OrExpression	"( code = gs_c_glyph_name ( glyph , gstr ) ) < 0 || ( code = name_ref ( pfont -> memory , gstr -> data , gstr -> size , & rglyph , 0 ) ) < 0"		10969585	0		||			
ANR	10969627	RelationalExpression	"( code = gs_c_glyph_name ( glyph , gstr ) ) < 0"		10969585	0		<			
ANR	10969628	AssignmentExpression	"code = gs_c_glyph_name ( glyph , gstr )"		10969585	0		=			
ANR	10969629	Identifier	code		10969585	0					
ANR	10969630	CallExpression	"gs_c_glyph_name ( glyph , gstr )"		10969585	1					
ANR	10969631	Callee	gs_c_glyph_name		10969585	0					
ANR	10969632	Identifier	gs_c_glyph_name		10969585	0					
ANR	10969633	ArgumentList	glyph		10969585	1					
ANR	10969634	Argument	glyph		10969585	0					
ANR	10969635	Identifier	glyph		10969585	0					
ANR	10969636	Argument	gstr		10969585	1					
ANR	10969637	Identifier	gstr		10969585	0					
ANR	10969638	PrimaryExpression	0		10969585	1					
ANR	10969639	RelationalExpression	"( code = name_ref ( pfont -> memory , gstr -> data , gstr -> size , & rglyph , 0 ) ) < 0"		10969585	1		<			
ANR	10969640	AssignmentExpression	"code = name_ref ( pfont -> memory , gstr -> data , gstr -> size , & rglyph , 0 )"		10969585	0		=			
ANR	10969641	Identifier	code		10969585	0					
ANR	10969642	CallExpression	"name_ref ( pfont -> memory , gstr -> data , gstr -> size , & rglyph , 0 )"		10969585	1					
ANR	10969643	Callee	name_ref		10969585	0					
ANR	10969644	Identifier	name_ref		10969585	0					
ANR	10969645	ArgumentList	pfont -> memory		10969585	1					
ANR	10969646	Argument	pfont -> memory		10969585	0					
ANR	10969647	PtrMemberAccess	pfont -> memory		10969585	0					
ANR	10969648	Identifier	pfont		10969585	0					
ANR	10969649	Identifier	memory		10969585	1					
ANR	10969650	Argument	gstr -> data		10969585	1					
ANR	10969651	PtrMemberAccess	gstr -> data		10969585	0					
ANR	10969652	Identifier	gstr		10969585	0					
ANR	10969653	Identifier	data		10969585	1					
ANR	10969654	Argument	gstr -> size		10969585	2					
ANR	10969655	PtrMemberAccess	gstr -> size		10969585	0					
ANR	10969656	Identifier	gstr		10969585	0					
ANR	10969657	Identifier	size		10969585	1					
ANR	10969658	Argument	& rglyph		10969585	3					
ANR	10969659	UnaryOperationExpression	& rglyph		10969585	0					
ANR	10969660	UnaryOperator	&		10969585	0					
ANR	10969661	Identifier	rglyph		10969585	1					
ANR	10969662	Argument	0		10969585	4					
ANR	10969663	PrimaryExpression	0		10969585	0					
ANR	10969664	PrimaryExpression	0		10969585	1					
ANR	10969665	ReturnStatement	return code ;	1039:8:35998:36009	10969585	1	True				
ANR	10969666	Identifier	code		10969585	0					
ANR	10969667	IfStatement	if ( pglyph )		10969585	5					
ANR	10969668	Condition	pglyph	1040:8:36019:36024	10969585	0	True				
ANR	10969669	Identifier	pglyph		10969585	0					
ANR	10969670	ExpressionStatement	"* pglyph = name_index ( pfont -> memory , & rglyph )"	1041:8:36035:36079	10969585	1	True				
ANR	10969671	AssignmentExpression	"* pglyph = name_index ( pfont -> memory , & rglyph )"		10969585	0		=			
ANR	10969672	UnaryOperationExpression	* pglyph		10969585	0					
ANR	10969673	UnaryOperator	*		10969585	0					
ANR	10969674	Identifier	pglyph		10969585	1					
ANR	10969675	CallExpression	"name_index ( pfont -> memory , & rglyph )"		10969585	1					
ANR	10969676	Callee	name_index		10969585	0					
ANR	10969677	Identifier	name_index		10969585	0					
ANR	10969678	ArgumentList	pfont -> memory		10969585	1					
ANR	10969679	Argument	pfont -> memory		10969585	0					
ANR	10969680	PtrMemberAccess	pfont -> memory		10969585	0					
ANR	10969681	Identifier	pfont		10969585	0					
ANR	10969682	Identifier	memory		10969585	1					
ANR	10969683	Argument	& rglyph		10969585	1					
ANR	10969684	UnaryOperationExpression	& rglyph		10969585	0					
ANR	10969685	UnaryOperator	&		10969585	0					
ANR	10969686	Identifier	rglyph		10969585	1					
ANR	10969687	IfStatement	if ( pgd )		10969585	6					
ANR	10969688	Condition	pgd	1042:8:36089:36091	10969585	0	True				
ANR	10969689	Identifier	pgd		10969585	0					
ANR	10969690	ExpressionStatement	"code = zchar_charstring_data ( ( gs_font * ) pfont , & rglyph , pgd )"	1043:8:36102:36162	10969585	1	True				
ANR	10969691	AssignmentExpression	"code = zchar_charstring_data ( ( gs_font * ) pfont , & rglyph , pgd )"		10969585	0		=			
ANR	10969692	Identifier	code		10969585	0					
ANR	10969693	CallExpression	"zchar_charstring_data ( ( gs_font * ) pfont , & rglyph , pgd )"		10969585	1					
ANR	10969694	Callee	zchar_charstring_data		10969585	0					
ANR	10969695	Identifier	zchar_charstring_data		10969585	0					
ANR	10969696	ArgumentList	( gs_font * ) pfont		10969585	1					
ANR	10969697	Argument	( gs_font * ) pfont		10969585	0					
ANR	10969698	CastExpression	( gs_font * ) pfont		10969585	0					
ANR	10969699	CastTarget	gs_font *		10969585	0					
ANR	10969700	Identifier	pfont		10969585	1					
ANR	10969701	Argument	& rglyph		10969585	1					
ANR	10969702	UnaryOperationExpression	& rglyph		10969585	0					
ANR	10969703	UnaryOperator	&		10969585	0					
ANR	10969704	Identifier	rglyph		10969585	1					
ANR	10969705	Argument	pgd		10969585	2					
ANR	10969706	Identifier	pgd		10969585	0					
ANR	10969707	ReturnStatement	return code ;	1044:4:36168:36179	10969585	7	True				
ANR	10969708	Identifier	code		10969585	0					
ANR	10969709	ReturnType	static int		10969585	1					
ANR	10969710	Identifier	z1_seac_data		10969585	2					
ANR	10969711	ParameterList	"gs_font_type1 * pfont , int ccode , gs_glyph * pglyph , gs_const_string * gstr , gs_glyph_data_t * pgd"		10969585	3					
ANR	10969712	Parameter	gs_font_type1 * pfont	1026:13:35511:35530	10969585	0	True				
ANR	10969713	ParameterType	gs_font_type1 *		10969585	0					
ANR	10969714	Identifier	pfont		10969585	1					
ANR	10969715	Parameter	int ccode	1026:35:35533:35541	10969585	1	True				
ANR	10969716	ParameterType	int		10969585	0					
ANR	10969717	Identifier	ccode		10969585	1					
ANR	10969718	Parameter	gs_glyph * pglyph	1026:46:35544:35559	10969585	2	True				
ANR	10969719	ParameterType	gs_glyph *		10969585	0					
ANR	10969720	Identifier	pglyph		10969585	1					
ANR	10969721	Parameter	gs_const_string * gstr	1027:13:35575:35595	10969585	3	True				
ANR	10969722	ParameterType	gs_const_string *		10969585	0					
ANR	10969723	Identifier	gstr		10969585	1					
ANR	10969724	Parameter	gs_glyph_data_t * pgd	1027:36:35598:35617	10969585	4	True				
ANR	10969725	ParameterType	gs_glyph_data_t *		10969585	0					
ANR	10969726	Identifier	pgd		10969585	1					
ANR	10969727	CFGEntryNode	ENTRY		10969585		True				
ANR	10969728	CFGExitNode	EXIT		10969585		True				
ANR	10969729	Symbol	pglyph		10969585						
ANR	10969730	Symbol	gs_c_known_encode		10969585						
ANR	10969731	Symbol	code		10969585						
ANR	10969732	Symbol	gstr -> size		10969585						
ANR	10969733	Symbol	gs_error_rangecheck		10969585						
ANR	10969734	Symbol	pfont -> memory		10969585						
ANR	10969735	Symbol	pfont		10969585						
ANR	10969736	Symbol	name_ref		10969585						
ANR	10969737	Symbol	* pglyph		10969585						
ANR	10969738	Symbol	pgd		10969585						
ANR	10969739	Symbol	ENCODING_INDEX_STANDARD		10969585						
ANR	10969740	Symbol	& rglyph		10969585						
ANR	10969741	Symbol	ccode		10969585						
ANR	10969742	Symbol	gstr -> data		10969585						
ANR	10969743	Symbol	glyph		10969585						
ANR	10969744	Symbol	GS_NO_GLYPH		10969585						
ANR	10969745	Symbol	* pfont		10969585						
ANR	10969746	Symbol	zchar_charstring_data		10969585						
ANR	10969747	Symbol	name_index		10969585						
ANR	10969748	Symbol	gstr		10969585						
ANR	10969749	Symbol	rglyph		10969585						
ANR	10969750	Symbol	gs_c_glyph_name		10969585						
ANR	10969751	Symbol	* gstr		10969585						
ANR	10969752	Function	z1_push	1047:0:36184:36528							
ANR	10969753	FunctionDef	"z1_push (void * callback_data , const fixed * pf , int count)"		10969752	0					
ANR	10969754	CompoundStatement		1049:0:36253:36528	10969752	0					
ANR	10969755	IdentifierDeclStatement	gs_type1exec_state * pcxs = callback_data ;	1050:4:36259:36299	10969752	0	True				
ANR	10969756	IdentifierDecl	* pcxs = callback_data		10969752	0					
ANR	10969757	IdentifierDeclType	gs_type1exec_state *		10969752	0					
ANR	10969758	Identifier	pcxs		10969752	1					
ANR	10969759	AssignmentExpression	* pcxs = callback_data		10969752	2		=			
ANR	10969760	Identifier	callback_data		10969752	0					
ANR	10969761	Identifier	callback_data		10969752	1					
ANR	10969762	IdentifierDeclStatement	i_ctx_t * i_ctx_p = pcxs -> i_ctx_p ;	1051:4:36305:36337	10969752	1	True				
ANR	10969763	IdentifierDecl	* i_ctx_p = pcxs -> i_ctx_p		10969752	0					
ANR	10969764	IdentifierDeclType	i_ctx_t *		10969752	0					
ANR	10969765	Identifier	i_ctx_p		10969752	1					
ANR	10969766	AssignmentExpression	* i_ctx_p = pcxs -> i_ctx_p		10969752	2		=			
ANR	10969767	Identifier	i_ctx_p		10969752	0					
ANR	10969768	PtrMemberAccess	pcxs -> i_ctx_p		10969752	1					
ANR	10969769	Identifier	pcxs		10969752	0					
ANR	10969770	Identifier	i_ctx_p		10969752	1					
ANR	10969771	IdentifierDeclStatement	const fixed * p = pf + count - 1 ;	1052:4:36343:36374	10969752	2	True				
ANR	10969772	IdentifierDecl	* p = pf + count - 1		10969752	0					
ANR	10969773	IdentifierDeclType	const fixed *		10969752	0					
ANR	10969774	Identifier	p		10969752	1					
ANR	10969775	AssignmentExpression	* p = pf + count - 1		10969752	2		=			
ANR	10969776	Identifier	p		10969752	0					
ANR	10969777	AdditiveExpression	pf + count - 1		10969752	1		+			
ANR	10969778	Identifier	pf		10969752	0					
ANR	10969779	AdditiveExpression	count - 1		10969752	1		-			
ANR	10969780	Identifier	count		10969752	0					
ANR	10969781	PrimaryExpression	1		10969752	1					
ANR	10969782	IdentifierDeclStatement	int i ;	1053:4:36380:36385	10969752	3	True				
ANR	10969783	IdentifierDecl	i		10969752	0					
ANR	10969784	IdentifierDeclType	int		10969752	0					
ANR	10969785	Identifier	i		10969752	1					
ANR	10969786	ExpressionStatement	check_ostack ( count )	1055:4:36392:36411	10969752	4	True				
ANR	10969787	CallExpression	check_ostack ( count )		10969752	0					
ANR	10969788	Callee	check_ostack		10969752	0					
ANR	10969789	Identifier	check_ostack		10969752	0					
ANR	10969790	ArgumentList	count		10969752	1					
ANR	10969791	Argument	count		10969752	0					
ANR	10969792	Identifier	count		10969752	0					
ANR	10969793	ForStatement	"for ( i = 0 ; i < count ; i ++ , p -- )"		10969752	5					
ANR	10969794	ForInit	i = 0 ;	1056:9:36422:36427	10969752	0	True				
ANR	10969795	AssignmentExpression	i = 0		10969752	0		=			
ANR	10969796	Identifier	i		10969752	0					
ANR	10969797	PrimaryExpression	0		10969752	1					
ANR	10969798	Condition	i < count	1056:16:36429:36437	10969752	1	True				
ANR	10969799	RelationalExpression	i < count		10969752	0		<			
ANR	10969800	Identifier	i		10969752	0					
ANR	10969801	Identifier	count		10969752	1					
ANR	10969802	Expression	"i ++ , p --"	1056:27:36440:36447	10969752	2	True				
ANR	10969803	PostIncDecOperationExpression	i ++		10969752	0					
ANR	10969804	Identifier	i		10969752	0					
ANR	10969805	IncDec	++		10969752	1					
ANR	10969806	PostIncDecOperationExpression	p --		10969752	1					
ANR	10969807	Identifier	p		10969752	0					
ANR	10969808	IncDec	--		10969752	1					
ANR	10969809	CompoundStatement		8:37:196:196	10969752	3					
ANR	10969810	ExpressionStatement	osp ++	1057:8:36460:36465	10969752	0	True				
ANR	10969811	PostIncDecOperationExpression	osp ++		10969752	0					
ANR	10969812	Identifier	osp		10969752	0					
ANR	10969813	IncDec	++		10969752	1					
ANR	10969814	ExpressionStatement	"make_real ( osp , fixed2float ( * p ) )"	1058:8:36475:36506	10969752	1	True				
ANR	10969815	CallExpression	"make_real ( osp , fixed2float ( * p ) )"		10969752	0					
ANR	10969816	Callee	make_real		10969752	0					
ANR	10969817	Identifier	make_real		10969752	0					
ANR	10969818	ArgumentList	osp		10969752	1					
ANR	10969819	Argument	osp		10969752	0					
ANR	10969820	Identifier	osp		10969752	0					
ANR	10969821	Argument	fixed2float ( * p )		10969752	1					
ANR	10969822	CallExpression	fixed2float ( * p )		10969752	0					
ANR	10969823	Callee	fixed2float		10969752	0					
ANR	10969824	Identifier	fixed2float		10969752	0					
ANR	10969825	ArgumentList	* p		10969752	1					
ANR	10969826	Argument	* p		10969752	0					
ANR	10969827	UnaryOperationExpression	* p		10969752	0					
ANR	10969828	UnaryOperator	*		10969752	0					
ANR	10969829	Identifier	p		10969752	1					
ANR	10969830	ReturnStatement	return 0 ;	1060:4:36518:36526	10969752	6	True				
ANR	10969831	PrimaryExpression	0		10969752	0					
ANR	10969832	ReturnType	static int		10969752	1					
ANR	10969833	Identifier	z1_push		10969752	2					
ANR	10969834	ParameterList	"void * callback_data , const fixed * pf , int count"		10969752	3					
ANR	10969835	Parameter	void * callback_data	1048:8:36203:36221	10969752	0	True				
ANR	10969836	ParameterType	void *		10969752	0					
ANR	10969837	Identifier	callback_data		10969752	1					
ANR	10969838	Parameter	const fixed * pf	1048:29:36224:36239	10969752	1	True				
ANR	10969839	ParameterType	const fixed *		10969752	0					
ANR	10969840	Identifier	pf		10969752	1					
ANR	10969841	Parameter	int count	1048:47:36242:36250	10969752	2	True				
ANR	10969842	ParameterType	int		10969752	0					
ANR	10969843	Identifier	count		10969752	1					
ANR	10969844	CFGEntryNode	ENTRY		10969752		True				
ANR	10969845	CFGExitNode	EXIT		10969752		True				
ANR	10969846	Symbol	p		10969752						
ANR	10969847	Symbol	pcxs -> i_ctx_p		10969752						
ANR	10969848	Symbol	fixed2float		10969752						
ANR	10969849	Symbol	pf		10969752						
ANR	10969850	Symbol	i_ctx_p		10969752						
ANR	10969851	Symbol	* pcxs		10969752						
ANR	10969852	Symbol	count		10969752						
ANR	10969853	Symbol	i		10969752						
ANR	10969854	Symbol	pcxs		10969752						
ANR	10969855	Symbol	* p		10969752						
ANR	10969856	Symbol	callback_data		10969752						
ANR	10969857	Symbol	osp		10969752						
ANR	10969858	Function	z1_pop	1063:0:36531:36815							
ANR	10969859	FunctionDef	"z1_pop (void * callback_data , fixed * pf)"		10969858	0					
ANR	10969860	CompoundStatement		1065:0:36582:36815	10969858	0					
ANR	10969861	IdentifierDeclStatement	gs_type1exec_state * pcxs = callback_data ;	1066:4:36588:36628	10969858	0	True				
ANR	10969862	IdentifierDecl	* pcxs = callback_data		10969858	0					
ANR	10969863	IdentifierDeclType	gs_type1exec_state *		10969858	0					
ANR	10969864	Identifier	pcxs		10969858	1					
ANR	10969865	AssignmentExpression	* pcxs = callback_data		10969858	2		=			
ANR	10969866	Identifier	callback_data		10969858	0					
ANR	10969867	Identifier	callback_data		10969858	1					
ANR	10969868	IdentifierDeclStatement	i_ctx_t * i_ctx_p = pcxs -> i_ctx_p ;	1067:4:36634:36666	10969858	1	True				
ANR	10969869	IdentifierDecl	* i_ctx_p = pcxs -> i_ctx_p		10969858	0					
ANR	10969870	IdentifierDeclType	i_ctx_t *		10969858	0					
ANR	10969871	Identifier	i_ctx_p		10969858	1					
ANR	10969872	AssignmentExpression	* i_ctx_p = pcxs -> i_ctx_p		10969858	2		=			
ANR	10969873	Identifier	i_ctx_p		10969858	0					
ANR	10969874	PtrMemberAccess	pcxs -> i_ctx_p		10969858	1					
ANR	10969875	Identifier	pcxs		10969858	0					
ANR	10969876	Identifier	i_ctx_p		10969858	1					
ANR	10969877	IdentifierDeclStatement	double val ;	1068:4:36672:36682	10969858	2	True				
ANR	10969878	IdentifierDecl	val		10969858	0					
ANR	10969879	IdentifierDeclType	double		10969858	0					
ANR	10969880	Identifier	val		10969858	1					
ANR	10969881	IdentifierDeclStatement	"int code = real_param ( osp , & val ) ;"	1069:4:36688:36720	10969858	3	True				
ANR	10969882	IdentifierDecl	"code = real_param ( osp , & val )"		10969858	0					
ANR	10969883	IdentifierDeclType	int		10969858	0					
ANR	10969884	Identifier	code		10969858	1					
ANR	10969885	AssignmentExpression	"code = real_param ( osp , & val )"		10969858	2		=			
ANR	10969886	Identifier	code		10969858	0					
ANR	10969887	CallExpression	"real_param ( osp , & val )"		10969858	1					
ANR	10969888	Callee	real_param		10969858	0					
ANR	10969889	Identifier	real_param		10969858	0					
ANR	10969890	ArgumentList	osp		10969858	1					
ANR	10969891	Argument	osp		10969858	0					
ANR	10969892	Identifier	osp		10969858	0					
ANR	10969893	Argument	& val		10969858	1					
ANR	10969894	UnaryOperationExpression	& val		10969858	0					
ANR	10969895	UnaryOperator	&		10969858	0					
ANR	10969896	Identifier	val		10969858	1					
ANR	10969897	IfStatement	if ( code < 0 )		10969858	4					
ANR	10969898	Condition	code < 0	1071:8:36731:36738	10969858	0	True				
ANR	10969899	RelationalExpression	code < 0		10969858	0		<			
ANR	10969900	Identifier	code		10969858	0					
ANR	10969901	PrimaryExpression	0		10969858	1					
ANR	10969902	ReturnStatement	return code ;	1072:8:36749:36760	10969858	1	True				
ANR	10969903	Identifier	code		10969858	0					
ANR	10969904	ExpressionStatement	* pf = float2fixed ( val )	1073:4:36766:36788	10969858	5	True				
ANR	10969905	AssignmentExpression	* pf = float2fixed ( val )		10969858	0		=			
ANR	10969906	UnaryOperationExpression	* pf		10969858	0					
ANR	10969907	UnaryOperator	*		10969858	0					
ANR	10969908	Identifier	pf		10969858	1					
ANR	10969909	CallExpression	float2fixed ( val )		10969858	1					
ANR	10969910	Callee	float2fixed		10969858	0					
ANR	10969911	Identifier	float2fixed		10969858	0					
ANR	10969912	ArgumentList	val		10969858	1					
ANR	10969913	Argument	val		10969858	0					
ANR	10969914	Identifier	val		10969858	0					
ANR	10969915	ExpressionStatement	osp --	1074:4:36794:36799	10969858	6	True				
ANR	10969916	PostIncDecOperationExpression	osp --		10969858	0					
ANR	10969917	Identifier	osp		10969858	0					
ANR	10969918	IncDec	--		10969858	1					
ANR	10969919	ReturnStatement	return 0 ;	1075:4:36805:36813	10969858	7	True				
ANR	10969920	PrimaryExpression	0		10969858	0					
ANR	10969921	ReturnType	static int		10969858	1					
ANR	10969922	Identifier	z1_pop		10969858	2					
ANR	10969923	ParameterList	"void * callback_data , fixed * pf"		10969858	3					
ANR	10969924	Parameter	void * callback_data	1064:7:36549:36567	10969858	0	True				
ANR	10969925	ParameterType	void *		10969858	0					
ANR	10969926	Identifier	callback_data		10969858	1					
ANR	10969927	Parameter	fixed * pf	1064:28:36570:36579	10969858	1	True				
ANR	10969928	ParameterType	fixed *		10969858	0					
ANR	10969929	Identifier	pf		10969858	1					
ANR	10969930	CFGEntryNode	ENTRY		10969858		True				
ANR	10969931	CFGExitNode	EXIT		10969858		True				
ANR	10969932	Symbol	val		10969858						
ANR	10969933	Symbol	& val		10969858						
ANR	10969934	Symbol	pcxs -> i_ctx_p		10969858						
ANR	10969935	Symbol	code		10969858						
ANR	10969936	Symbol	* pcxs		10969858						
ANR	10969937	Symbol	osp		10969858						
ANR	10969938	Symbol	float2fixed		10969858						
ANR	10969939	Symbol	pf		10969858						
ANR	10969940	Symbol	i_ctx_p		10969858						
ANR	10969941	Symbol	real_param		10969858						
ANR	10969942	Symbol	pcxs		10969858						
ANR	10969943	Symbol	callback_data		10969858						
ANR	10969944	Symbol	* pf		10969858						
ANR	10969945	DeclStmt									
ANR	10969946	Decl							const gs_type1_data_procs_t	const gs_type1_data_procs_t	z1_data_procs
ANR	10969947	Function	zchar1_glyph_outline	1089:0:37129:37636							
ANR	10969948	FunctionDef	"zchar1_glyph_outline (gs_font * font , int WMode , gs_glyph glyph , const gs_matrix * pmat , gx_path * ppath , double sbw [ 4 ])"		10969947	0					
ANR	10969949	CompoundStatement		1092:0:37271:37636	10969947	0					
ANR	10969950	Statement	gs_font_type1	1093:4:37277:37289	10969947	0	True				
ANR	10969951	Statement	*	1093:18:37291:37291	10969947	1	True				
ANR	10969952	Statement	const	1093:19:37292:37296	10969947	2	True				
ANR	10969953	ExpressionStatement	pfont1 = ( gs_font_type1 * ) font	1093:25:37298:37328	10969947	3	True				
ANR	10969954	AssignmentExpression	pfont1 = ( gs_font_type1 * ) font		10969947	0		=			
ANR	10969955	Identifier	pfont1		10969947	0					
ANR	10969956	CastExpression	( gs_font_type1 * ) font		10969947	1					
ANR	10969957	CastTarget	gs_font_type1 *		10969947	0					
ANR	10969958	Identifier	font		10969947	1					
ANR	10969959	IdentifierDeclStatement	ref gref ;	1094:4:37334:37342	10969947	4	True				
ANR	10969960	IdentifierDecl	gref		10969947	0					
ANR	10969961	IdentifierDeclType	ref		10969947	0					
ANR	10969962	Identifier	gref		10969947	1					
ANR	10969963	IdentifierDeclStatement	gs_glyph_data_t gdata ;	1095:4:37348:37369	10969947	5	True				
ANR	10969964	IdentifierDecl	gdata		10969947	0					
ANR	10969965	IdentifierDeclType	gs_glyph_data_t		10969947	0					
ANR	10969966	Identifier	gdata		10969947	1					
ANR	10969967	IdentifierDeclStatement	int code ;	1096:4:37375:37383	10969947	6	True				
ANR	10969968	IdentifierDecl	code		10969947	0					
ANR	10969969	IdentifierDeclType	int		10969947	0					
ANR	10969970	Identifier	code		10969947	1					
ANR	10969971	ExpressionStatement	"glyph_ref ( font -> memory , glyph , & gref )"	1098:4:37390:37427	10969947	7	True				
ANR	10969972	CallExpression	"glyph_ref ( font -> memory , glyph , & gref )"		10969947	0					
ANR	10969973	Callee	glyph_ref		10969947	0					
ANR	10969974	Identifier	glyph_ref		10969947	0					
ANR	10969975	ArgumentList	font -> memory		10969947	1					
ANR	10969976	Argument	font -> memory		10969947	0					
ANR	10969977	PtrMemberAccess	font -> memory		10969947	0					
ANR	10969978	Identifier	font		10969947	0					
ANR	10969979	Identifier	memory		10969947	1					
ANR	10969980	Argument	glyph		10969947	1					
ANR	10969981	Identifier	glyph		10969947	0					
ANR	10969982	Argument	& gref		10969947	2					
ANR	10969983	UnaryOperationExpression	& gref		10969947	0					
ANR	10969984	UnaryOperator	&		10969947	0					
ANR	10969985	Identifier	gref		10969947	1					
ANR	10969986	ExpressionStatement	gdata . memory = font -> memory	1099:4:37433:37460	10969947	8	True				
ANR	10969987	AssignmentExpression	gdata . memory = font -> memory		10969947	0		=			
ANR	10969988	MemberAccess	gdata . memory		10969947	0					
ANR	10969989	Identifier	gdata		10969947	0					
ANR	10969990	Identifier	memory		10969947	1					
ANR	10969991	PtrMemberAccess	font -> memory		10969947	1					
ANR	10969992	Identifier	font		10969947	0					
ANR	10969993	Identifier	memory		10969947	1					
ANR	10969994	ExpressionStatement	"code = zchar_charstring_data ( font , & gref , & gdata )"	1100:4:37466:37515	10969947	9	True				
ANR	10969995	AssignmentExpression	"code = zchar_charstring_data ( font , & gref , & gdata )"		10969947	0		=			
ANR	10969996	Identifier	code		10969947	0					
ANR	10969997	CallExpression	"zchar_charstring_data ( font , & gref , & gdata )"		10969947	1					
ANR	10969998	Callee	zchar_charstring_data		10969947	0					
ANR	10969999	Identifier	zchar_charstring_data		10969947	0					
ANR	10970000	ArgumentList	font		10969947	1					
ANR	10970001	Argument	font		10969947	0					
ANR	10970002	Identifier	font		10969947	0					
ANR	10970003	Argument	& gref		10969947	1					
ANR	10970004	UnaryOperationExpression	& gref		10969947	0					
ANR	10970005	UnaryOperator	&		10969947	0					
ANR	10970006	Identifier	gref		10969947	1					
ANR	10970007	Argument	& gdata		10969947	2					
ANR	10970008	UnaryOperationExpression	& gdata		10969947	0					
ANR	10970009	UnaryOperator	&		10969947	0					
ANR	10970010	Identifier	gdata		10969947	1					
ANR	10970011	IfStatement	if ( code < 0 )		10969947	10					
ANR	10970012	Condition	code < 0	1101:8:37525:37532	10969947	0	True				
ANR	10970013	RelationalExpression	code < 0		10969947	0		<			
ANR	10970014	Identifier	code		10969947	0					
ANR	10970015	PrimaryExpression	0		10969947	1					
ANR	10970016	ReturnStatement	return code ;	1102:8:37543:37554	10969947	1	True				
ANR	10970017	Identifier	code		10969947	0					
ANR	10970018	ReturnStatement	"return zcharstring_outline ( pfont1 , WMode , & gref , & gdata , pmat , ppath , sbw ) ;"	1103:4:37560:37634	10969947	11	True				
ANR	10970019	CallExpression	"zcharstring_outline ( pfont1 , WMode , & gref , & gdata , pmat , ppath , sbw )"		10969947	0					
ANR	10970020	Callee	zcharstring_outline		10969947	0					
ANR	10970021	Identifier	zcharstring_outline		10969947	0					
ANR	10970022	ArgumentList	pfont1		10969947	1					
ANR	10970023	Argument	pfont1		10969947	0					
ANR	10970024	Identifier	pfont1		10969947	0					
ANR	10970025	Argument	WMode		10969947	1					
ANR	10970026	Identifier	WMode		10969947	0					
ANR	10970027	Argument	& gref		10969947	2					
ANR	10970028	UnaryOperationExpression	& gref		10969947	0					
ANR	10970029	UnaryOperator	&		10969947	0					
ANR	10970030	Identifier	gref		10969947	1					
ANR	10970031	Argument	& gdata		10969947	3					
ANR	10970032	UnaryOperationExpression	& gdata		10969947	0					
ANR	10970033	UnaryOperator	&		10969947	0					
ANR	10970034	Identifier	gdata		10969947	1					
ANR	10970035	Argument	pmat		10969947	4					
ANR	10970036	Identifier	pmat		10969947	0					
ANR	10970037	Argument	ppath		10969947	5					
ANR	10970038	Identifier	ppath		10969947	0					
ANR	10970039	Argument	sbw		10969947	6					
ANR	10970040	Identifier	sbw		10969947	0					
ANR	10970041	ReturnType	int		10969947	1					
ANR	10970042	Identifier	zchar1_glyph_outline		10969947	2					
ANR	10970043	ParameterList	"gs_font * font , int WMode , gs_glyph glyph , const gs_matrix * pmat , gx_path * ppath , double sbw [ 4 ]"		10969947	3					
ANR	10970044	Parameter	gs_font * font	1090:21:37154:37166	10969947	0	True				
ANR	10970045	ParameterType	gs_font *		10969947	0					
ANR	10970046	Identifier	font		10969947	1					
ANR	10970047	Parameter	int WMode	1090:36:37169:37177	10969947	1	True				
ANR	10970048	ParameterType	int		10969947	0					
ANR	10970049	Identifier	WMode		10969947	1					
ANR	10970050	Parameter	gs_glyph glyph	1090:47:37180:37193	10969947	2	True				
ANR	10970051	ParameterType	gs_glyph		10969947	0					
ANR	10970052	Identifier	glyph		10969947	1					
ANR	10970053	Parameter	const gs_matrix * pmat	1090:63:37196:37216	10969947	3	True				
ANR	10970054	ParameterType	const gs_matrix *		10969947	0					
ANR	10970055	Identifier	pmat		10969947	1					
ANR	10970056	Parameter	gx_path * ppath	1091:21:37240:37253	10969947	4	True				
ANR	10970057	ParameterType	gx_path *		10969947	0					
ANR	10970058	Identifier	ppath		10969947	1					
ANR	10970059	Parameter	double sbw [ 4 ]	1091:37:37256:37268	10969947	5	True				
ANR	10970060	ParameterType	double [ 4 ]		10969947	0					
ANR	10970061	Identifier	sbw		10969947	1					
ANR	10970062	CFGEntryNode	ENTRY		10969947		True				
ANR	10970063	CFGExitNode	EXIT		10969947		True				
ANR	10970064	Symbol	pfont1		10969947						
ANR	10970065	Symbol	code		10969947						
ANR	10970066	Symbol	pmat		10969947						
ANR	10970067	Symbol	sbw		10969947						
ANR	10970068	Symbol	ppath		10969947						
ANR	10970069	Symbol	gdata		10969947						
ANR	10970070	Symbol	& gref		10969947						
ANR	10970071	Symbol	glyph		10969947						
ANR	10970072	Symbol	font -> memory		10969947						
ANR	10970073	Symbol	WMode		10969947						
ANR	10970074	Symbol	zchar_charstring_data		10969947						
ANR	10970075	Symbol	& gdata		10969947						
ANR	10970076	Symbol	* font		10969947						
ANR	10970077	Symbol	gref		10969947						
ANR	10970078	Symbol	zcharstring_outline		10969947						
ANR	10970079	Symbol	font		10969947						
ANR	10970080	Symbol	gdata . memory		10969947						
ANR	10970081	Function	zcharstring_outline	1109:0:37755:40304							
ANR	10970082	FunctionDef	"zcharstring_outline (gs_font_type1 * pfont1 , int WMode , const ref * pgref , const gs_glyph_data_t * pgd_orig , const gs_matrix * pmat , gx_path * ppath , double sbw [ 4 ])"		10970081	0					
ANR	10970083	CompoundStatement		1113:0:37958:40304	10970081	0					
ANR	10970084	IdentifierDeclStatement	const gs_glyph_data_t * pgd = pgd_orig ;	1114:4:37964:38001	10970081	0	True				
ANR	10970085	IdentifierDecl	* pgd = pgd_orig		10970081	0					
ANR	10970086	IdentifierDeclType	const gs_glyph_data_t *		10970081	0					
ANR	10970087	Identifier	pgd		10970081	1					
ANR	10970088	AssignmentExpression	* pgd = pgd_orig		10970081	2		=			
ANR	10970089	Identifier	pgd_orig		10970081	0					
ANR	10970090	Identifier	pgd_orig		10970081	1					
ANR	10970091	IdentifierDeclStatement	int code ;	1115:4:38007:38015	10970081	1	True				
ANR	10970092	IdentifierDecl	code		10970081	0					
ANR	10970093	IdentifierDeclType	int		10970081	0					
ANR	10970094	Identifier	code		10970081	1					
ANR	10970095	IdentifierDeclStatement	gs_type1exec_state cxs ;	1116:4:38021:38043	10970081	2	True				
ANR	10970096	IdentifierDecl	cxs		10970081	0					
ANR	10970097	IdentifierDeclType	gs_type1exec_state		10970081	0					
ANR	10970098	Identifier	cxs		10970081	1					
ANR	10970099	Statement	gs_type1_state	1117:4:38049:38062	10970081	3	True				
ANR	10970100	Statement	*	1117:19:38064:38064	10970081	4	True				
ANR	10970101	Statement	const	1117:20:38065:38069	10970081	5	True				
ANR	10970102	ExpressionStatement	pcis = & cxs . cis	1117:26:38071:38086	10970081	6	True				
ANR	10970103	AssignmentExpression	pcis = & cxs . cis		10970081	0		=			
ANR	10970104	Identifier	pcis		10970081	0					
ANR	10970105	UnaryOperationExpression	& cxs . cis		10970081	1					
ANR	10970106	UnaryOperator	&		10970081	0					
ANR	10970107	MemberAccess	cxs . cis		10970081	1					
ANR	10970108	Identifier	cxs		10970081	0					
ANR	10970109	Identifier	cis		10970081	1					
ANR	10970110	IdentifierDeclStatement	const gs_type1_data * pdata ;	1118:4:38092:38118	10970081	7	True				
ANR	10970111	IdentifierDecl	* pdata		10970081	0					
ANR	10970112	IdentifierDeclType	const gs_type1_data *		10970081	0					
ANR	10970113	Identifier	pdata		10970081	1					
ANR	10970114	IdentifierDeclStatement	int value ;	1119:4:38124:38133	10970081	8	True				
ANR	10970115	IdentifierDecl	value		10970081	0					
ANR	10970116	IdentifierDeclType	int		10970081	0					
ANR	10970117	Identifier	value		10970081	1					
ANR	10970118	IdentifierDeclStatement	gs_gstate gs ;	1120:4:38139:38151	10970081	9	True				
ANR	10970119	IdentifierDecl	gs		10970081	0					
ANR	10970120	IdentifierDeclType	gs_gstate		10970081	0					
ANR	10970121	Identifier	gs		10970081	1					
ANR	10970122	IdentifierDeclStatement	double wv [ 4 ] ;	1121:4:38157:38169	10970081	10	True				
ANR	10970123	IdentifierDecl	wv [ 4 ]		10970081	0					
ANR	10970124	IdentifierDeclType	double [ 4 ]		10970081	0					
ANR	10970125	Identifier	wv		10970081	1					
ANR	10970126	PrimaryExpression	4		10970081	2					
ANR	10970127	IdentifierDeclStatement	gs_point mpt ;	1122:4:38175:38187	10970081	11	True				
ANR	10970128	IdentifierDecl	mpt		10970081	0					
ANR	10970129	IdentifierDeclType	gs_point		10970081	0					
ANR	10970130	Identifier	mpt		10970081	1					
ANR	10970131	ExpressionStatement	pdata = & pfont1 -> data	1124:4:38194:38215	10970081	12	True				
ANR	10970132	AssignmentExpression	pdata = & pfont1 -> data		10970081	0		=			
ANR	10970133	Identifier	pdata		10970081	0					
ANR	10970134	UnaryOperationExpression	& pfont1 -> data		10970081	1					
ANR	10970135	UnaryOperator	&		10970081	0					
ANR	10970136	PtrMemberAccess	pfont1 -> data		10970081	1					
ANR	10970137	Identifier	pfont1		10970081	0					
ANR	10970138	Identifier	data		10970081	1					
ANR	10970139	IfStatement	"if ( pgd -> bits . size <= max ( pdata -> lenIV , 0 ) )"		10970081	13					
ANR	10970140	Condition	"pgd -> bits . size <= max ( pdata -> lenIV , 0 )"	1125:8:38225:38262	10970081	0	True				
ANR	10970141	RelationalExpression	"pgd -> bits . size <= max ( pdata -> lenIV , 0 )"		10970081	0		<=			
ANR	10970142	MemberAccess	pgd -> bits . size		10970081	0					
ANR	10970143	PtrMemberAccess	pgd -> bits		10970081	0					
ANR	10970144	Identifier	pgd		10970081	0					
ANR	10970145	Identifier	bits		10970081	1					
ANR	10970146	Identifier	size		10970081	1					
ANR	10970147	CallExpression	"max ( pdata -> lenIV , 0 )"		10970081	1					
ANR	10970148	Callee	max		10970081	0					
ANR	10970149	Identifier	max		10970081	0					
ANR	10970150	ArgumentList	pdata -> lenIV		10970081	1					
ANR	10970151	Argument	pdata -> lenIV		10970081	0					
ANR	10970152	PtrMemberAccess	pdata -> lenIV		10970081	0					
ANR	10970153	Identifier	pdata		10970081	0					
ANR	10970154	Identifier	lenIV		10970081	1					
ANR	10970155	Argument	0		10970081	1					
ANR	10970156	PrimaryExpression	0		10970081	0					
ANR	10970157	ExpressionStatement	return_error ( gs_error_invalidfont )	1126:8:38273:38307	10970081	1	True				
ANR	10970158	CallExpression	return_error ( gs_error_invalidfont )		10970081	0					
ANR	10970159	Callee	return_error		10970081	0					
ANR	10970160	Identifier	return_error		10970081	0					
ANR	10970161	ArgumentList	gs_error_invalidfont		10970081	1					
ANR	10970162	Argument	gs_error_invalidfont		10970081	0					
ANR	10970163	Identifier	gs_error_invalidfont		10970081	0					
ANR	10970164	IfStatement	"if ( zchar_get_CDevProc ( ( const gs_font_base * ) pfont1 , & pcdevproc ) )"		10970081	14					
ANR	10970165	Condition	"zchar_get_CDevProc ( ( const gs_font_base * ) pfont1 , & pcdevproc )"	1128:8:38354:38413	10970081	0	True				
ANR	10970166	CallExpression	"zchar_get_CDevProc ( ( const gs_font_base * ) pfont1 , & pcdevproc )"		10970081	0					
ANR	10970167	Callee	zchar_get_CDevProc		10970081	0					
ANR	10970168	Identifier	zchar_get_CDevProc		10970081	0					
ANR	10970169	ArgumentList	( const gs_font_base * ) pfont1		10970081	1					
ANR	10970170	Argument	( const gs_font_base * ) pfont1		10970081	0					
ANR	10970171	CastExpression	( const gs_font_base * ) pfont1		10970081	0					
ANR	10970172	CastTarget	const gs_font_base *		10970081	0					
ANR	10970173	Identifier	pfont1		10970081	1					
ANR	10970174	Argument	& pcdevproc		10970081	1					
ANR	10970175	UnaryOperationExpression	& pcdevproc		10970081	0					
ANR	10970176	UnaryOperator	&		10970081	0					
ANR	10970177	Identifier	pcdevproc		10970081	1					
ANR	10970178	ExpressionStatement	return_error ( gs_error_rangecheck )	1129:8:38424:38457	10970081	1	True				
ANR	10970179	CallExpression	return_error ( gs_error_rangecheck )		10970081	0					
ANR	10970180	Callee	return_error		10970081	0					
ANR	10970181	Identifier	return_error		10970081	0					
ANR	10970182	ArgumentList	gs_error_rangecheck		10970081	1					
ANR	10970183	Argument	gs_error_rangecheck		10970081	0					
ANR	10970184	Identifier	gs_error_rangecheck		10970081	0					
ANR	10970185	SwitchStatement	switch ( WMode )		10970081	15					
ANR	10970186	Condition	WMode	1131:12:38514:38518	10970081	0	True				
ANR	10970187	Identifier	WMode		10970081	0					
ANR	10970188	CompoundStatement		19:19:562:562	10970081	1					
ANR	10970189	Label	default :	1132:4:38527:38534	10970081	0	True				
ANR	10970190	Identifier	default		10970081	0					
ANR	10970191	ExpressionStatement	"code = zchar_get_metrics2 ( ( gs_font_base * ) pfont1 , pgref , wv )"	1133:8:38544:38604	10970081	1	True				
ANR	10970192	AssignmentExpression	"code = zchar_get_metrics2 ( ( gs_font_base * ) pfont1 , pgref , wv )"		10970081	0		=			
ANR	10970193	Identifier	code		10970081	0					
ANR	10970194	CallExpression	"zchar_get_metrics2 ( ( gs_font_base * ) pfont1 , pgref , wv )"		10970081	1					
ANR	10970195	Callee	zchar_get_metrics2		10970081	0					
ANR	10970196	Identifier	zchar_get_metrics2		10970081	0					
ANR	10970197	ArgumentList	( gs_font_base * ) pfont1		10970081	1					
ANR	10970198	Argument	( gs_font_base * ) pfont1		10970081	0					
ANR	10970199	CastExpression	( gs_font_base * ) pfont1		10970081	0					
ANR	10970200	CastTarget	gs_font_base *		10970081	0					
ANR	10970201	Identifier	pfont1		10970081	1					
ANR	10970202	Argument	pgref		10970081	1					
ANR	10970203	Identifier	pgref		10970081	0					
ANR	10970204	Argument	wv		10970081	2					
ANR	10970205	Identifier	wv		10970081	0					
ANR	10970206	IfStatement	if ( code )		10970081	2					
ANR	10970207	Condition	code	1134:12:38618:38621	10970081	0	True				
ANR	10970208	Identifier	code		10970081	0					
ANR	10970209	CompoundStatement		22:18:665:665	10970081	1					
ANR	10970210	ExpressionStatement	sbw [ 0 ] = wv [ 2 ]	1135:12:38638:38652	10970081	0	True				
ANR	10970211	AssignmentExpression	sbw [ 0 ] = wv [ 2 ]		10970081	0		=			
ANR	10970212	ArrayIndexing	sbw [ 0 ]		10970081	0					
ANR	10970213	Identifier	sbw		10970081	0					
ANR	10970214	PrimaryExpression	0		10970081	1					
ANR	10970215	ArrayIndexing	wv [ 2 ]		10970081	1					
ANR	10970216	Identifier	wv		10970081	0					
ANR	10970217	PrimaryExpression	2		10970081	1					
ANR	10970218	ExpressionStatement	sbw [ 1 ] = wv [ 3 ]	1136:12:38666:38680	10970081	1	True				
ANR	10970219	AssignmentExpression	sbw [ 1 ] = wv [ 3 ]		10970081	0		=			
ANR	10970220	ArrayIndexing	sbw [ 1 ]		10970081	0					
ANR	10970221	Identifier	sbw		10970081	0					
ANR	10970222	PrimaryExpression	1		10970081	1					
ANR	10970223	ArrayIndexing	wv [ 3 ]		10970081	1					
ANR	10970224	Identifier	wv		10970081	0					
ANR	10970225	PrimaryExpression	3		10970081	1					
ANR	10970226	ExpressionStatement	sbw [ 2 ] = wv [ 0 ]	1137:12:38694:38708	10970081	2	True				
ANR	10970227	AssignmentExpression	sbw [ 2 ] = wv [ 0 ]		10970081	0		=			
ANR	10970228	ArrayIndexing	sbw [ 2 ]		10970081	0					
ANR	10970229	Identifier	sbw		10970081	0					
ANR	10970230	PrimaryExpression	2		10970081	1					
ANR	10970231	ArrayIndexing	wv [ 0 ]		10970081	1					
ANR	10970232	Identifier	wv		10970081	0					
ANR	10970233	PrimaryExpression	0		10970081	1					
ANR	10970234	ExpressionStatement	sbw [ 3 ] = wv [ 1 ]	1138:12:38722:38736	10970081	3	True				
ANR	10970235	AssignmentExpression	sbw [ 3 ] = wv [ 1 ]		10970081	0		=			
ANR	10970236	ArrayIndexing	sbw [ 3 ]		10970081	0					
ANR	10970237	Identifier	sbw		10970081	0					
ANR	10970238	PrimaryExpression	3		10970081	1					
ANR	10970239	ArrayIndexing	wv [ 1 ]		10970081	1					
ANR	10970240	Identifier	wv		10970081	0					
ANR	10970241	PrimaryExpression	1		10970081	1					
ANR	10970242	BreakStatement	break ;	1139:12:38750:38755	10970081	4	True				
ANR	10970243	Label	case 0 :	1142:4:38799:38805	10970081	3	True				
ANR	10970244	ExpressionStatement	"code = zchar_get_metrics ( ( gs_font_base * ) pfont1 , pgref , sbw )"	1143:8:38815:38875	10970081	4	True				
ANR	10970245	AssignmentExpression	"code = zchar_get_metrics ( ( gs_font_base * ) pfont1 , pgref , sbw )"		10970081	0		=			
ANR	10970246	Identifier	code		10970081	0					
ANR	10970247	CallExpression	"zchar_get_metrics ( ( gs_font_base * ) pfont1 , pgref , sbw )"		10970081	1					
ANR	10970248	Callee	zchar_get_metrics		10970081	0					
ANR	10970249	Identifier	zchar_get_metrics		10970081	0					
ANR	10970250	ArgumentList	( gs_font_base * ) pfont1		10970081	1					
ANR	10970251	Argument	( gs_font_base * ) pfont1		10970081	0					
ANR	10970252	CastExpression	( gs_font_base * ) pfont1		10970081	0					
ANR	10970253	CastTarget	gs_font_base *		10970081	0					
ANR	10970254	Identifier	pfont1		10970081	1					
ANR	10970255	Argument	pgref		10970081	1					
ANR	10970256	Identifier	pgref		10970081	0					
ANR	10970257	Argument	sbw		10970081	2					
ANR	10970258	Identifier	sbw		10970081	0					
ANR	10970259	IfStatement	if ( code < 0 )		10970081	16					
ANR	10970260	Condition	code < 0	1145:8:38891:38898	10970081	0	True				
ANR	10970261	RelationalExpression	code < 0		10970081	0		<			
ANR	10970262	Identifier	code		10970081	0					
ANR	10970263	PrimaryExpression	0		10970081	1					
ANR	10970264	ReturnStatement	return code ;	1146:8:38909:38920	10970081	1	True				
ANR	10970265	Identifier	code		10970081	0					
ANR	10970266	ExpressionStatement	cxs . present = code	1147:4:38926:38944	10970081	17	True				
ANR	10970267	AssignmentExpression	cxs . present = code		10970081	0		=			
ANR	10970268	MemberAccess	cxs . present		10970081	0					
ANR	10970269	Identifier	cxs		10970081	0					
ANR	10970270	Identifier	present		10970081	1					
ANR	10970271	Identifier	code		10970081	1					
ANR	10970272	IfStatement	if ( pmat )		10970081	18					
ANR	10970273	Condition	pmat	1149:8:39008:39011	10970081	0	True				
ANR	10970274	Identifier	pmat		10970081	0					
ANR	10970275	ExpressionStatement	"gs_matrix_fixed_from_matrix ( & gs . ctm , pmat )"	1150:8:39022:39064	10970081	1	True				
ANR	10970276	CallExpression	"gs_matrix_fixed_from_matrix ( & gs . ctm , pmat )"		10970081	0					
ANR	10970277	Callee	gs_matrix_fixed_from_matrix		10970081	0					
ANR	10970278	Identifier	gs_matrix_fixed_from_matrix		10970081	0					
ANR	10970279	ArgumentList	& gs . ctm		10970081	1					
ANR	10970280	Argument	& gs . ctm		10970081	0					
ANR	10970281	UnaryOperationExpression	& gs . ctm		10970081	0					
ANR	10970282	UnaryOperator	&		10970081	0					
ANR	10970283	MemberAccess	gs . ctm		10970081	1					
ANR	10970284	Identifier	gs		10970081	0					
ANR	10970285	Identifier	ctm		10970081	1					
ANR	10970286	Argument	pmat		10970081	1					
ANR	10970287	Identifier	pmat		10970081	0					
ANR	10970288	ElseStatement	else		10970081	0					
ANR	10970289	CompoundStatement		40:8:1126:1140	10970081	0					
ANR	10970290	IdentifierDeclStatement	gs_matrix imat ;	1152:8:39085:39099	10970081	0	True				
ANR	10970291	IdentifierDecl	imat		10970081	0					
ANR	10970292	IdentifierDeclType	gs_matrix		10970081	0					
ANR	10970293	Identifier	imat		10970081	1					
ANR	10970294	ExpressionStatement	gs_make_identity ( & imat )	1154:8:39110:39133	10970081	1	True				
ANR	10970295	CallExpression	gs_make_identity ( & imat )		10970081	0					
ANR	10970296	Callee	gs_make_identity		10970081	0					
ANR	10970297	Identifier	gs_make_identity		10970081	0					
ANR	10970298	ArgumentList	& imat		10970081	1					
ANR	10970299	Argument	& imat		10970081	0					
ANR	10970300	UnaryOperationExpression	& imat		10970081	0					
ANR	10970301	UnaryOperator	&		10970081	0					
ANR	10970302	Identifier	imat		10970081	1					
ANR	10970303	ExpressionStatement	"gs_matrix_fixed_from_matrix ( & gs . ctm , & imat )"	1155:8:39143:39186	10970081	2	True				
ANR	10970304	CallExpression	"gs_matrix_fixed_from_matrix ( & gs . ctm , & imat )"		10970081	0					
ANR	10970305	Callee	gs_matrix_fixed_from_matrix		10970081	0					
ANR	10970306	Identifier	gs_matrix_fixed_from_matrix		10970081	0					
ANR	10970307	ArgumentList	& gs . ctm		10970081	1					
ANR	10970308	Argument	& gs . ctm		10970081	0					
ANR	10970309	UnaryOperationExpression	& gs . ctm		10970081	0					
ANR	10970310	UnaryOperator	&		10970081	0					
ANR	10970311	MemberAccess	gs . ctm		10970081	1					
ANR	10970312	Identifier	gs		10970081	0					
ANR	10970313	Identifier	ctm		10970081	1					
ANR	10970314	Argument	& imat		10970081	1					
ANR	10970315	UnaryOperationExpression	& imat		10970081	0					
ANR	10970316	UnaryOperator	&		10970081	0					
ANR	10970317	Identifier	imat		10970081	1					
ANR	10970318	ExpressionStatement	gs . flatness = 0	1157:4:39198:39213	10970081	19	True				
ANR	10970319	AssignmentExpression	gs . flatness = 0		10970081	0		=			
ANR	10970320	MemberAccess	gs . flatness		10970081	0					
ANR	10970321	Identifier	gs		10970081	0					
ANR	10970322	Identifier	flatness		10970081	1					
ANR	10970323	PrimaryExpression	0		10970081	1					
ANR	10970324	ExpressionStatement	"code = gs_type1_interp_init ( & cxs . cis , & gs , ppath , NULL , NULL , true , 0 , pfont1 )"	1158:4:39219:39329	10970081	20	True				
ANR	10970325	AssignmentExpression	"code = gs_type1_interp_init ( & cxs . cis , & gs , ppath , NULL , NULL , true , 0 , pfont1 )"		10970081	0		=			
ANR	10970326	Identifier	code		10970081	0					
ANR	10970327	CallExpression	"gs_type1_interp_init ( & cxs . cis , & gs , ppath , NULL , NULL , true , 0 , pfont1 )"		10970081	1					
ANR	10970328	Callee	gs_type1_interp_init		10970081	0					
ANR	10970329	Identifier	gs_type1_interp_init		10970081	0					
ANR	10970330	ArgumentList	& cxs . cis		10970081	1					
ANR	10970331	Argument	& cxs . cis		10970081	0					
ANR	10970332	UnaryOperationExpression	& cxs . cis		10970081	0					
ANR	10970333	UnaryOperator	&		10970081	0					
ANR	10970334	MemberAccess	cxs . cis		10970081	1					
ANR	10970335	Identifier	cxs		10970081	0					
ANR	10970336	Identifier	cis		10970081	1					
ANR	10970337	Argument	& gs		10970081	1					
ANR	10970338	UnaryOperationExpression	& gs		10970081	0					
ANR	10970339	UnaryOperator	&		10970081	0					
ANR	10970340	Identifier	gs		10970081	1					
ANR	10970341	Argument	ppath		10970081	2					
ANR	10970342	Identifier	ppath		10970081	0					
ANR	10970343	Argument	NULL		10970081	3					
ANR	10970344	Identifier	NULL		10970081	0					
ANR	10970345	Argument	NULL		10970081	4					
ANR	10970346	Identifier	NULL		10970081	0					
ANR	10970347	Argument	true		10970081	5					
ANR	10970348	Identifier	true		10970081	0					
ANR	10970349	Argument	0		10970081	6					
ANR	10970350	PrimaryExpression	0		10970081	0					
ANR	10970351	Argument	pfont1		10970081	7					
ANR	10970352	Identifier	pfont1		10970081	0					
ANR	10970353	IfStatement	if ( code < 0 )		10970081	21					
ANR	10970354	Condition	code < 0	1160:8:39339:39346	10970081	0	True				
ANR	10970355	RelationalExpression	code < 0		10970081	0		<			
ANR	10970356	Identifier	code		10970081	0					
ANR	10970357	PrimaryExpression	0		10970081	1					
ANR	10970358	ReturnStatement	return code ;	1161:8:39357:39368	10970081	1	True				
ANR	10970359	Identifier	code		10970081	0					
ANR	10970360	ExpressionStatement	cxs . cis . no_grid_fitting = true	1162:4:39374:39404	10970081	22	True				
ANR	10970361	AssignmentExpression	cxs . cis . no_grid_fitting = true		10970081	0		=			
ANR	10970362	MemberAccess	cxs . cis . no_grid_fitting		10970081	0					
ANR	10970363	MemberAccess	cxs . cis		10970081	0					
ANR	10970364	Identifier	cxs		10970081	0					
ANR	10970365	Identifier	cis		10970081	1					
ANR	10970366	Identifier	no_grid_fitting		10970081	1					
ANR	10970367	Identifier	true		10970081	1					
ANR	10970368	ExpressionStatement	"gs_type1_set_callback_data ( pcis , & cxs )"	1163:4:39410:39448	10970081	23	True				
ANR	10970369	CallExpression	"gs_type1_set_callback_data ( pcis , & cxs )"		10970081	0					
ANR	10970370	Callee	gs_type1_set_callback_data		10970081	0					
ANR	10970371	Identifier	gs_type1_set_callback_data		10970081	0					
ANR	10970372	ArgumentList	pcis		10970081	1					
ANR	10970373	Argument	pcis		10970081	0					
ANR	10970374	Identifier	pcis		10970081	0					
ANR	10970375	Argument	& cxs		10970081	1					
ANR	10970376	UnaryOperationExpression	& cxs		10970081	0					
ANR	10970377	UnaryOperator	&		10970081	0					
ANR	10970378	Identifier	cxs		10970081	1					
ANR	10970379	SwitchStatement	switch ( cxs . present )		10970081	24					
ANR	10970380	Condition	cxs . present	1164:12:39462:39472	10970081	0	True				
ANR	10970381	MemberAccess	cxs . present		10970081	0					
ANR	10970382	Identifier	cxs		10970081	0					
ANR	10970383	Identifier	present		10970081	1					
ANR	10970384	CompoundStatement		52:25:1516:1516	10970081	1					
ANR	10970385	Label	case metricsSideBearingAndWidth :	1165:4:39481:39512	10970081	0	True				
ANR	10970386	Identifier	metricsSideBearingAndWidth		10970081	0					
ANR	10970387	ExpressionStatement	"mpt . x = sbw [ 0 ] , mpt . y = sbw [ 1 ]"	1166:8:39522:39552	10970081	1	True				
ANR	10970388	Expression	"mpt . x = sbw [ 0 ] , mpt . y = sbw [ 1 ]"		10970081	0					
ANR	10970389	AssignmentExpression	mpt . x = sbw [ 0 ]		10970081	0		=			
ANR	10970390	MemberAccess	mpt . x		10970081	0					
ANR	10970391	Identifier	mpt		10970081	0					
ANR	10970392	Identifier	x		10970081	1					
ANR	10970393	ArrayIndexing	sbw [ 0 ]		10970081	1					
ANR	10970394	Identifier	sbw		10970081	0					
ANR	10970395	PrimaryExpression	0		10970081	1					
ANR	10970396	AssignmentExpression	mpt . y = sbw [ 1 ]		10970081	1		=			
ANR	10970397	MemberAccess	mpt . y		10970081	0					
ANR	10970398	Identifier	mpt		10970081	0					
ANR	10970399	Identifier	y		10970081	1					
ANR	10970400	ArrayIndexing	sbw [ 1 ]		10970081	1					
ANR	10970401	Identifier	sbw		10970081	0					
ANR	10970402	PrimaryExpression	1		10970081	1					
ANR	10970403	ExpressionStatement	"gs_type1_set_lsb ( pcis , & mpt )"	1167:8:39562:39590	10970081	2	True				
ANR	10970404	CallExpression	"gs_type1_set_lsb ( pcis , & mpt )"		10970081	0					
ANR	10970405	Callee	gs_type1_set_lsb		10970081	0					
ANR	10970406	Identifier	gs_type1_set_lsb		10970081	0					
ANR	10970407	ArgumentList	pcis		10970081	1					
ANR	10970408	Argument	pcis		10970081	0					
ANR	10970409	Identifier	pcis		10970081	0					
ANR	10970410	Argument	& mpt		10970081	1					
ANR	10970411	UnaryOperationExpression	& mpt		10970081	0					
ANR	10970412	UnaryOperator	&		10970081	0					
ANR	10970413	Identifier	mpt		10970081	1					
ANR	10970414	Label	case metricsWidthOnly :	1169:4:39624:39645	10970081	3	True				
ANR	10970415	Identifier	metricsWidthOnly		10970081	0					
ANR	10970416	ExpressionStatement	"mpt . x = sbw [ 2 ] , mpt . y = sbw [ 3 ]"	1170:8:39655:39685	10970081	4	True				
ANR	10970417	Expression	"mpt . x = sbw [ 2 ] , mpt . y = sbw [ 3 ]"		10970081	0					
ANR	10970418	AssignmentExpression	mpt . x = sbw [ 2 ]		10970081	0		=			
ANR	10970419	MemberAccess	mpt . x		10970081	0					
ANR	10970420	Identifier	mpt		10970081	0					
ANR	10970421	Identifier	x		10970081	1					
ANR	10970422	ArrayIndexing	sbw [ 2 ]		10970081	1					
ANR	10970423	Identifier	sbw		10970081	0					
ANR	10970424	PrimaryExpression	2		10970081	1					
ANR	10970425	AssignmentExpression	mpt . y = sbw [ 3 ]		10970081	1		=			
ANR	10970426	MemberAccess	mpt . y		10970081	0					
ANR	10970427	Identifier	mpt		10970081	0					
ANR	10970428	Identifier	y		10970081	1					
ANR	10970429	ArrayIndexing	sbw [ 3 ]		10970081	1					
ANR	10970430	Identifier	sbw		10970081	0					
ANR	10970431	PrimaryExpression	3		10970081	1					
ANR	10970432	ExpressionStatement	"gs_type1_set_width ( pcis , & mpt )"	1171:8:39695:39725	10970081	5	True				
ANR	10970433	CallExpression	"gs_type1_set_width ( pcis , & mpt )"		10970081	0					
ANR	10970434	Callee	gs_type1_set_width		10970081	0					
ANR	10970435	Identifier	gs_type1_set_width		10970081	0					
ANR	10970436	ArgumentList	pcis		10970081	1					
ANR	10970437	Argument	pcis		10970081	0					
ANR	10970438	Identifier	pcis		10970081	0					
ANR	10970439	Argument	& mpt		10970081	1					
ANR	10970440	UnaryOperationExpression	& mpt		10970081	0					
ANR	10970441	UnaryOperator	&		10970081	0					
ANR	10970442	Identifier	mpt		10970081	1					
ANR	10970443	Label	case metricsNone :	1172:4:39731:39747	10970081	6	True				
ANR	10970444	Identifier	metricsNone		10970081	0					
ANR	10970445	ExpressionStatement		1173:8:39757:39757	10970081	7	True				
ANR	10970446	Label	icont :	1176:0:39798:39803	10970081	25	True				
ANR	10970447	Identifier	icont		10970081	0					
ANR	10970448	ExpressionStatement	"code = pfont1 -> data . interpret ( pcis , pgd , & value )"	1177:4:39809:39857	10970081	26	True				
ANR	10970449	AssignmentExpression	"code = pfont1 -> data . interpret ( pcis , pgd , & value )"		10970081	0		=			
ANR	10970450	Identifier	code		10970081	0					
ANR	10970451	CallExpression	"pfont1 -> data . interpret ( pcis , pgd , & value )"		10970081	1					
ANR	10970452	Callee	pfont1 -> data . interpret		10970081	0					
ANR	10970453	MemberAccess	pfont1 -> data . interpret		10970081	0					
ANR	10970454	PtrMemberAccess	pfont1 -> data		10970081	0					
ANR	10970455	Identifier	pfont1		10970081	0					
ANR	10970456	Identifier	data		10970081	1					
ANR	10970457	Identifier	interpret		10970081	1					
ANR	10970458	ArgumentList	pcis		10970081	1					
ANR	10970459	Argument	pcis		10970081	0					
ANR	10970460	Identifier	pcis		10970081	0					
ANR	10970461	Argument	pgd		10970081	1					
ANR	10970462	Identifier	pgd		10970081	0					
ANR	10970463	Argument	& value		10970081	2					
ANR	10970464	UnaryOperationExpression	& value		10970081	0					
ANR	10970465	UnaryOperator	&		10970081	0					
ANR	10970466	Identifier	value		10970081	1					
ANR	10970467	SwitchStatement	switch ( code )		10970081	27					
ANR	10970468	Condition	code	1178:12:39871:39874	10970081	0	True				
ANR	10970469	Identifier	code		10970081	0					
ANR	10970470	CompoundStatement		66:18:1918:1918	10970081	1					
ANR	10970471	Label	case 0 :	1179:4:39883:39889	10970081	0	True				
ANR	10970472	Label	default :	1181:4:39939:39946	10970081	1	True				
ANR	10970473	Identifier	default		10970081	0					
ANR	10970474	ReturnStatement	return code ;	1182:8:39979:39990	10970081	2	True				
ANR	10970475	Identifier	code		10970081	0					
ANR	10970476	Label	case type1_result_callothersubr :	1183:4:39996:40027	10970081	3	True				
ANR	10970477	Identifier	type1_result_callothersubr		10970081	0					
ANR	10970478	ExpressionStatement	return_error ( gs_error_rangecheck )	1184:8:40061:40094	10970081	4	True				
ANR	10970479	CallExpression	return_error ( gs_error_rangecheck )		10970081	0					
ANR	10970480	Callee	return_error		10970081	0					
ANR	10970481	Identifier	return_error		10970081	0					
ANR	10970482	ArgumentList	gs_error_rangecheck		10970081	1					
ANR	10970483	Argument	gs_error_rangecheck		10970081	0					
ANR	10970484	Identifier	gs_error_rangecheck		10970081	0					
ANR	10970485	Label	case type1_result_sbw :	1185:4:40122:40143	10970081	5	True				
ANR	10970486	Identifier	type1_result_sbw		10970081	0					
ANR	10970487	ExpressionStatement	"type1_cis_get_metrics ( pcis , cxs . sbw )"	1186:8:40181:40217	10970081	6	True				
ANR	10970488	CallExpression	"type1_cis_get_metrics ( pcis , cxs . sbw )"		10970081	0					
ANR	10970489	Callee	type1_cis_get_metrics		10970081	0					
ANR	10970490	Identifier	type1_cis_get_metrics		10970081	0					
ANR	10970491	ArgumentList	pcis		10970081	1					
ANR	10970492	Argument	pcis		10970081	0					
ANR	10970493	Identifier	pcis		10970081	0					
ANR	10970494	Argument	cxs . sbw		10970081	1					
ANR	10970495	MemberAccess	cxs . sbw		10970081	0					
ANR	10970496	Identifier	cxs		10970081	0					
ANR	10970497	Identifier	sbw		10970081	1					
ANR	10970498	ExpressionStatement	"type1_cis_get_metrics ( pcis , sbw )"	1187:8:40227:40259	10970081	7	True				
ANR	10970499	CallExpression	"type1_cis_get_metrics ( pcis , sbw )"		10970081	0					
ANR	10970500	Callee	type1_cis_get_metrics		10970081	0					
ANR	10970501	Identifier	type1_cis_get_metrics		10970081	0					
ANR	10970502	ArgumentList	pcis		10970081	1					
ANR	10970503	Argument	pcis		10970081	0					
ANR	10970504	Identifier	pcis		10970081	0					
ANR	10970505	Argument	sbw		10970081	1					
ANR	10970506	Identifier	sbw		10970081	0					
ANR	10970507	ExpressionStatement	pgd = 0	1188:8:40269:40276	10970081	8	True				
ANR	10970508	AssignmentExpression	pgd = 0		10970081	0		=			
ANR	10970509	Identifier	pgd		10970081	0					
ANR	10970510	PrimaryExpression	0		10970081	1					
ANR	10970511	GotoStatement	goto icont ;	1189:8:40286:40296	10970081	9	True				
ANR	10970512	Identifier	icont		10970081	0					
ANR	10970513	ReturnType	int		10970081	1					
ANR	10970514	Identifier	zcharstring_outline		10970081	2					
ANR	10970515	ParameterList	"gs_font_type1 * pfont1 , int WMode , const ref * pgref , const gs_glyph_data_t * pgd_orig , const gs_matrix * pmat , gx_path * ppath , double sbw [ 4 ]"		10970081	3					
ANR	10970516	Parameter	gs_font_type1 * pfont1	1110:20:37779:37799	10970081	0	True				
ANR	10970517	ParameterType	gs_font_type1 *		10970081	0					
ANR	10970518	Identifier	pfont1		10970081	1					
ANR	10970519	Parameter	int WMode	1110:43:37802:37810	10970081	1	True				
ANR	10970520	ParameterType	int		10970081	0					
ANR	10970521	Identifier	WMode		10970081	1					
ANR	10970522	Parameter	const ref * pgref	1110:54:37813:37828	10970081	2	True				
ANR	10970523	ParameterType	const ref *		10970081	0					
ANR	10970524	Identifier	pgref		10970081	1					
ANR	10970525	Parameter	const gs_glyph_data_t * pgd_orig	1111:20:37851:37881	10970081	3	True				
ANR	10970526	ParameterType	const gs_glyph_data_t *		10970081	0					
ANR	10970527	Identifier	pgd_orig		10970081	1					
ANR	10970528	Parameter	const gs_matrix * pmat	1112:20:37904:37924	10970081	4	True				
ANR	10970529	ParameterType	const gs_matrix *		10970081	0					
ANR	10970530	Identifier	pmat		10970081	1					
ANR	10970531	Parameter	gx_path * ppath	1112:43:37927:37940	10970081	5	True				
ANR	10970532	ParameterType	gx_path *		10970081	0					
ANR	10970533	Identifier	ppath		10970081	1					
ANR	10970534	Parameter	double sbw [ 4 ]	1112:59:37943:37955	10970081	6	True				
ANR	10970535	ParameterType	double [ 4 ]		10970081	0					
ANR	10970536	Identifier	sbw		10970081	1					
ANR	10970537	CFGEntryNode	ENTRY		10970081		True				
ANR	10970538	CFGExitNode	EXIT		10970081		True				
ANR	10970539	Symbol	mpt . x		10970081						
ANR	10970540	Symbol	& cxs		10970081						
ANR	10970541	Symbol	& value		10970081						
ANR	10970542	Symbol	gs_error_rangecheck		10970081						
ANR	10970543	Symbol	pdata -> lenIV		10970081						
ANR	10970544	Symbol	* wv		10970081						
ANR	10970545	Symbol	sbw		10970081						
ANR	10970546	Symbol	mpt . y		10970081						
ANR	10970547	Symbol	& mpt		10970081						
ANR	10970548	Symbol	cxs . present		10970081						
ANR	10970549	Symbol	& cxs . cis		10970081						
ANR	10970550	Symbol	& gs . ctm		10970081						
ANR	10970551	Symbol	* pdata		10970081						
ANR	10970552	Symbol	cxs		10970081						
ANR	10970553	Symbol	* pfont1		10970081						
ANR	10970554	Symbol	pfont1		10970081						
ANR	10970555	Symbol	NULL		10970081						
ANR	10970556	Symbol	pfont1 -> data		10970081						
ANR	10970557	Symbol	mpt		10970081						
ANR	10970558	Symbol	cxs . sbw		10970081						
ANR	10970559	Symbol	* pgd		10970081						
ANR	10970560	Symbol	& gs		10970081						
ANR	10970561	Symbol	true		10970081						
ANR	10970562	Symbol	gs_type1_interp_init		10970081						
ANR	10970563	Symbol	zchar_get_metrics		10970081						
ANR	10970564	Symbol	& pcdevproc		10970081						
ANR	10970565	Symbol	code		10970081						
ANR	10970566	Symbol	pdata		10970081						
ANR	10970567	Symbol	pfont1 -> data . interpret		10970081						
ANR	10970568	Symbol	pmat		10970081						
ANR	10970569	Symbol	pgd -> bits . size		10970081						
ANR	10970570	Symbol	pgd_orig		10970081						
ANR	10970571	Symbol	ppath		10970081						
ANR	10970572	Symbol	pgd		10970081						
ANR	10970573	Symbol	cxs . cis . no_grid_fitting		10970081						
ANR	10970574	Symbol	zchar_get_CDevProc		10970081						
ANR	10970575	Symbol	zchar_get_metrics2		10970081						
ANR	10970576	Symbol	gs_error_invalidfont		10970081						
ANR	10970577	Symbol	value		10970081						
ANR	10970578	Symbol	& imat		10970081						
ANR	10970579	Symbol	wv		10970081						
ANR	10970580	Symbol	max		10970081						
ANR	10970581	Symbol	pgref		10970081						
ANR	10970582	Symbol	imat		10970081						
ANR	10970583	Symbol	gs . flatness		10970081						
ANR	10970584	Symbol	pcis		10970081						
ANR	10970585	Symbol	gs		10970081						
ANR	10970586	Symbol	* sbw		10970081						
ANR	10970587	Symbol	pgd -> bits		10970081						
ANR	10970588	Symbol	WMode		10970081						
ANR	10970589	Symbol	cxs . cis		10970081						
ANR	10970590	Symbol	& pfont1 -> data		10970081						
ANR	10970591	Function	z1_glyph_info_generic	1198:0:40531:43265							
ANR	10970592	FunctionDef	"z1_glyph_info_generic (gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info , font_proc_glyph_info ( ( * proc ) ) , int wmode)"		10970591	0					
ANR	10970593	CompoundStatement		1201:0:40703:43265	10970591	0					
ANR	10970594	IdentifierDeclStatement	ref gref ;	1202:4:40709:40717	10970591	0	True				
ANR	10970595	IdentifierDecl	gref		10970591	0					
ANR	10970596	IdentifierDeclType	ref		10970591	0					
ANR	10970597	Identifier	gref		10970591	1					
ANR	10970598	IdentifierDeclStatement	ref * pcdevproc ;	1203:4:40723:40737	10970591	1	True				
ANR	10970599	IdentifierDecl	* pcdevproc		10970591	0					
ANR	10970600	IdentifierDeclType	ref *		10970591	0					
ANR	10970601	Identifier	pcdevproc		10970591	1					
ANR	10970602	Statement	gs_font_base	1204:4:40743:40754	10970591	2	True				
ANR	10970603	Statement	*	1204:17:40756:40756	10970591	3	True				
ANR	10970604	Statement	const	1204:18:40757:40761	10970591	4	True				
ANR	10970605	ExpressionStatement	pbfont = ( gs_font_base * ) font	1204:24:40763:40792	10970591	5	True				
ANR	10970606	AssignmentExpression	pbfont = ( gs_font_base * ) font		10970591	0		=			
ANR	10970607	Identifier	pbfont		10970591	0					
ANR	10970608	CastExpression	( gs_font_base * ) font		10970591	1					
ANR	10970609	CastTarget	gs_font_base *		10970591	0					
ANR	10970610	Identifier	font		10970591	1					
ANR	10970611	IdentifierDeclStatement	int width_members = members & ( GLYPH_INFO_WIDTH0 << wmode ) ;	1205:4:40798:40856	10970591	6	True				
ANR	10970612	IdentifierDecl	width_members = members & ( GLYPH_INFO_WIDTH0 << wmode )		10970591	0					
ANR	10970613	IdentifierDeclType	int		10970591	0					
ANR	10970614	Identifier	width_members		10970591	1					
ANR	10970615	AssignmentExpression	width_members = members & ( GLYPH_INFO_WIDTH0 << wmode )		10970591	2		=			
ANR	10970616	Identifier	width_members		10970591	0					
ANR	10970617	BitAndExpression	members & ( GLYPH_INFO_WIDTH0 << wmode )		10970591	1		&			
ANR	10970618	Identifier	members		10970591	0					
ANR	10970619	ShiftExpression	GLYPH_INFO_WIDTH0 << wmode		10970591	1		<<			
ANR	10970620	Identifier	GLYPH_INFO_WIDTH0		10970591	0					
ANR	10970621	Identifier	wmode		10970591	1					
ANR	10970622	IdentifierDeclStatement	int outline_widths = members & GLYPH_INFO_OUTLINE_WIDTHS ;	1206:4:40862:40918	10970591	7	True				
ANR	10970623	IdentifierDecl	outline_widths = members & GLYPH_INFO_OUTLINE_WIDTHS		10970591	0					
ANR	10970624	IdentifierDeclType	int		10970591	0					
ANR	10970625	Identifier	outline_widths		10970591	1					
ANR	10970626	AssignmentExpression	outline_widths = members & GLYPH_INFO_OUTLINE_WIDTHS		10970591	2		=			
ANR	10970627	Identifier	outline_widths		10970591	0					
ANR	10970628	BitAndExpression	members & GLYPH_INFO_OUTLINE_WIDTHS		10970591	1		&			
ANR	10970629	Identifier	members		10970591	0					
ANR	10970630	Identifier	GLYPH_INFO_OUTLINE_WIDTHS		10970591	1					
ANR	10970631	IdentifierDeclStatement	bool modified_widths = false ;	1207:4:40924:40952	10970591	8	True				
ANR	10970632	IdentifierDecl	modified_widths = false		10970591	0					
ANR	10970633	IdentifierDeclType	bool		10970591	0					
ANR	10970634	Identifier	modified_widths		10970591	1					
ANR	10970635	AssignmentExpression	modified_widths = false		10970591	2		=			
ANR	10970636	Identifier	false		10970591	0					
ANR	10970637	Identifier	false		10970591	1					
ANR	10970638	IdentifierDeclStatement	int default_members = members & ~ ( width_members + outline_widths + GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC ) ;	1208:4:40958:41165	10970591	9	True				
ANR	10970639	IdentifierDecl	default_members = members & ~ ( width_members + outline_widths + GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC )		10970591	0					
ANR	10970640	IdentifierDeclType	int		10970591	0					
ANR	10970641	Identifier	default_members		10970591	1					
ANR	10970642	AssignmentExpression	default_members = members & ~ ( width_members + outline_widths + GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC )		10970591	2		=			
ANR	10970643	Identifier	default_members		10970591	0					
ANR	10970644	BitAndExpression	members & ~ ( width_members + outline_widths + GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC )		10970591	1		&			
ANR	10970645	Identifier	members		10970591	0					
ANR	10970646	UnaryOperationExpression	~ ( width_members + outline_widths + GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC )		10970591	1					
ANR	10970647	UnaryOperator	~		10970591	0					
ANR	10970648	AdditiveExpression	width_members + outline_widths + GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC		10970591	1		+			
ANR	10970649	Identifier	width_members		10970591	0					
ANR	10970650	AdditiveExpression	outline_widths + GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC		10970591	1		+			
ANR	10970651	Identifier	outline_widths		10970591	0					
ANR	10970652	AdditiveExpression	GLYPH_INFO_VVECTOR0 + GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC		10970591	1		+			
ANR	10970653	Identifier	GLYPH_INFO_VVECTOR0		10970591	0					
ANR	10970654	AdditiveExpression	GLYPH_INFO_VVECTOR1 + GLYPH_INFO_CDEVPROC		10970591	1		+			
ANR	10970655	Identifier	GLYPH_INFO_VVECTOR1		10970591	0					
ANR	10970656	Identifier	GLYPH_INFO_CDEVPROC		10970591	1					
ANR	10970657	IdentifierDeclStatement	int done_members = 0 ;	1211:4:41171:41191	10970591	10	True				
ANR	10970658	IdentifierDecl	done_members = 0		10970591	0					
ANR	10970659	IdentifierDeclType	int		10970591	0					
ANR	10970660	Identifier	done_members		10970591	1					
ANR	10970661	AssignmentExpression	done_members = 0		10970591	2		=			
ANR	10970662	Identifier	done_members		10970591	0					
ANR	10970663	PrimaryExpression	0		10970591	1					
ANR	10970664	IdentifierDeclStatement	int code ;	1212:4:41197:41205	10970591	11	True				
ANR	10970665	IdentifierDecl	code		10970591	0					
ANR	10970666	IdentifierDeclType	int		10970591	0					
ANR	10970667	Identifier	code		10970591	1					
ANR	10970668	IfStatement	if ( ! width_members )		10970591	12					
ANR	10970669	Condition	! width_members	1214:8:41216:41229	10970591	0	True				
ANR	10970670	UnaryOperationExpression	! width_members		10970591	0					
ANR	10970671	UnaryOperator	!		10970591	0					
ANR	10970672	Identifier	width_members		10970591	1					
ANR	10970673	ReturnStatement	"return ( * proc ) ( font , glyph , pmat , members , info ) ;"	1215:8:41240:41288	10970591	1	True				
ANR	10970674	CallExpression	"( * proc ) ( font , glyph , pmat , members , info )"		10970591	0					
ANR	10970675	Callee	* proc		10970591	0					
ANR	10970676	UnaryOperationExpression	* proc		10970591	0					
ANR	10970677	UnaryOperator	*		10970591	0					
ANR	10970678	Identifier	proc		10970591	1					
ANR	10970679	ArgumentList	font		10970591	1					
ANR	10970680	Argument	font		10970591	0					
ANR	10970681	Identifier	font		10970591	0					
ANR	10970682	Argument	glyph		10970591	1					
ANR	10970683	Identifier	glyph		10970591	0					
ANR	10970684	Argument	pmat		10970591	2					
ANR	10970685	Identifier	pmat		10970591	0					
ANR	10970686	Argument	members		10970591	3					
ANR	10970687	Identifier	members		10970591	0					
ANR	10970688	Argument	info		10970591	4					
ANR	10970689	Identifier	info		10970591	0					
ANR	10970690	IfStatement	"if ( ! outline_widths && zchar_get_CDevProc ( pbfont , & pcdevproc ) )"		10970591	13					
ANR	10970691	Condition	"! outline_widths && zchar_get_CDevProc ( pbfont , & pcdevproc )"	1216:8:41298:41354	10970591	0	True				
ANR	10970692	AndExpression	"! outline_widths && zchar_get_CDevProc ( pbfont , & pcdevproc )"		10970591	0		&&			
ANR	10970693	UnaryOperationExpression	! outline_widths		10970591	0					
ANR	10970694	UnaryOperator	!		10970591	0					
ANR	10970695	Identifier	outline_widths		10970591	1					
ANR	10970696	CallExpression	"zchar_get_CDevProc ( pbfont , & pcdevproc )"		10970591	1					
ANR	10970697	Callee	zchar_get_CDevProc		10970591	0					
ANR	10970698	Identifier	zchar_get_CDevProc		10970591	0					
ANR	10970699	ArgumentList	pbfont		10970591	1					
ANR	10970700	Argument	pbfont		10970591	0					
ANR	10970701	Identifier	pbfont		10970591	0					
ANR	10970702	Argument	& pcdevproc		10970591	1					
ANR	10970703	UnaryOperationExpression	& pcdevproc		10970591	0					
ANR	10970704	UnaryOperator	&		10970591	0					
ANR	10970705	Identifier	pcdevproc		10970591	1					
ANR	10970706	CompoundStatement		16:67:653:653	10970591	1					
ANR	10970707	ExpressionStatement	done_members |= GLYPH_INFO_CDEVPROC	1217:8:41367:41402	10970591	0	True				
ANR	10970708	AssignmentExpression	done_members |= GLYPH_INFO_CDEVPROC		10970591	0		|=			
ANR	10970709	Identifier	done_members		10970591	0					
ANR	10970710	Identifier	GLYPH_INFO_CDEVPROC		10970591	1					
ANR	10970711	IfStatement	if ( members & GLYPH_INFO_CDEVPROC )		10970591	1					
ANR	10970712	Condition	members & GLYPH_INFO_CDEVPROC	1218:12:41416:41444	10970591	0	True				
ANR	10970713	BitAndExpression	members & GLYPH_INFO_CDEVPROC		10970591	0		&			
ANR	10970714	Identifier	members		10970591	0					
ANR	10970715	Identifier	GLYPH_INFO_CDEVPROC		10970591	1					
ANR	10970716	CompoundStatement		18:43:743:743	10970591	1					
ANR	10970717	ExpressionStatement	info -> members = done_members	1219:12:41461:41489	10970591	0	True				
ANR	10970718	AssignmentExpression	info -> members = done_members		10970591	0		=			
ANR	10970719	PtrMemberAccess	info -> members		10970591	0					
ANR	10970720	Identifier	info		10970591	0					
ANR	10970721	Identifier	members		10970591	1					
ANR	10970722	Identifier	done_members		10970591	1					
ANR	10970723	ExpressionStatement	return_error ( gs_error_rangecheck )	1220:12:41503:41536	10970591	1	True				
ANR	10970724	CallExpression	return_error ( gs_error_rangecheck )		10970591	0					
ANR	10970725	Callee	return_error		10970591	0					
ANR	10970726	Identifier	return_error		10970591	0					
ANR	10970727	ArgumentList	gs_error_rangecheck		10970591	1					
ANR	10970728	Argument	gs_error_rangecheck		10970591	0					
ANR	10970729	Identifier	gs_error_rangecheck		10970591	0					
ANR	10970730	ElseStatement	else		10970591	0					
ANR	10970731	CompoundStatement		21:15:849:849	10970591	0					
ANR	10970732	ExpressionStatement	"glyph_ref ( pbfont -> memory , glyph , & gref )"	1225:4:41639:41678	10970591	14	True				
ANR	10970733	CallExpression	"glyph_ref ( pbfont -> memory , glyph , & gref )"		10970591	0					
ANR	10970734	Callee	glyph_ref		10970591	0					
ANR	10970735	Identifier	glyph_ref		10970591	0					
ANR	10970736	ArgumentList	pbfont -> memory		10970591	1					
ANR	10970737	Argument	pbfont -> memory		10970591	0					
ANR	10970738	PtrMemberAccess	pbfont -> memory		10970591	0					
ANR	10970739	Identifier	pbfont		10970591	0					
ANR	10970740	Identifier	memory		10970591	1					
ANR	10970741	Argument	glyph		10970591	1					
ANR	10970742	Identifier	glyph		10970591	0					
ANR	10970743	Argument	& gref		10970591	2					
ANR	10970744	UnaryOperationExpression	& gref		10970591	0					
ANR	10970745	UnaryOperator	&		10970591	0					
ANR	10970746	Identifier	gref		10970591	1					
ANR	10970747	IfStatement	if ( width_members == GLYPH_INFO_WIDTH1 )		10970591	15					
ANR	10970748	Condition	width_members == GLYPH_INFO_WIDTH1	1226:8:41688:41721	10970591	0	True				
ANR	10970749	EqualityExpression	width_members == GLYPH_INFO_WIDTH1		10970591	0		==			
ANR	10970750	Identifier	width_members		10970591	0					
ANR	10970751	Identifier	GLYPH_INFO_WIDTH1		10970591	1					
ANR	10970752	CompoundStatement		27:8:1030:1042	10970591	1					
ANR	10970753	IdentifierDeclStatement	double wv [ 4 ] ;	1227:8:41734:41746	10970591	0	True				
ANR	10970754	IdentifierDecl	wv [ 4 ]		10970591	0					
ANR	10970755	IdentifierDeclType	double [ 4 ]		10970591	0					
ANR	10970756	Identifier	wv		10970591	1					
ANR	10970757	PrimaryExpression	4		10970591	2					
ANR	10970758	ExpressionStatement	"code = zchar_get_metrics2 ( pbfont , & gref , wv )"	1228:8:41756:41800	10970591	1	True				
ANR	10970759	AssignmentExpression	"code = zchar_get_metrics2 ( pbfont , & gref , wv )"		10970591	0		=			
ANR	10970760	Identifier	code		10970591	0					
ANR	10970761	CallExpression	"zchar_get_metrics2 ( pbfont , & gref , wv )"		10970591	1					
ANR	10970762	Callee	zchar_get_metrics2		10970591	0					
ANR	10970763	Identifier	zchar_get_metrics2		10970591	0					
ANR	10970764	ArgumentList	pbfont		10970591	1					
ANR	10970765	Argument	pbfont		10970591	0					
ANR	10970766	Identifier	pbfont		10970591	0					
ANR	10970767	Argument	& gref		10970591	1					
ANR	10970768	UnaryOperationExpression	& gref		10970591	0					
ANR	10970769	UnaryOperator	&		10970591	0					
ANR	10970770	Identifier	gref		10970591	1					
ANR	10970771	Argument	wv		10970591	2					
ANR	10970772	Identifier	wv		10970591	0					
ANR	10970773	IfStatement	if ( code > 0 )		10970591	2					
ANR	10970774	Condition	code > 0	1229:12:41814:41821	10970591	0	True				
ANR	10970775	RelationalExpression	code > 0		10970591	0		>			
ANR	10970776	Identifier	code		10970591	0					
ANR	10970777	PrimaryExpression	0		10970591	1					
ANR	10970778	CompoundStatement		29:22:1120:1120	10970591	1					
ANR	10970779	ExpressionStatement	modified_widths = true	1230:12:41838:41860	10970591	0	True				
ANR	10970780	AssignmentExpression	modified_widths = true		10970591	0		=			
ANR	10970781	Identifier	modified_widths		10970591	0					
ANR	10970782	Identifier	true		10970591	1					
ANR	10970783	ExpressionStatement	info -> width [ 1 ] . x = wv [ 0 ]	1231:12:41874:41898	10970591	1	True				
ANR	10970784	AssignmentExpression	info -> width [ 1 ] . x = wv [ 0 ]		10970591	0		=			
ANR	10970785	MemberAccess	info -> width [ 1 ] . x		10970591	0					
ANR	10970786	ArrayIndexing	info -> width [ 1 ]		10970591	0					
ANR	10970787	PtrMemberAccess	info -> width		10970591	0					
ANR	10970788	Identifier	info		10970591	0					
ANR	10970789	Identifier	width		10970591	1					
ANR	10970790	PrimaryExpression	1		10970591	1					
ANR	10970791	Identifier	x		10970591	1					
ANR	10970792	ArrayIndexing	wv [ 0 ]		10970591	1					
ANR	10970793	Identifier	wv		10970591	0					
ANR	10970794	PrimaryExpression	0		10970591	1					
ANR	10970795	ExpressionStatement	info -> width [ 1 ] . y = wv [ 1 ]	1232:12:41912:41936	10970591	2	True				
ANR	10970796	AssignmentExpression	info -> width [ 1 ] . y = wv [ 1 ]		10970591	0		=			
ANR	10970797	MemberAccess	info -> width [ 1 ] . y		10970591	0					
ANR	10970798	ArrayIndexing	info -> width [ 1 ]		10970591	0					
ANR	10970799	PtrMemberAccess	info -> width		10970591	0					
ANR	10970800	Identifier	info		10970591	0					
ANR	10970801	Identifier	width		10970591	1					
ANR	10970802	PrimaryExpression	1		10970591	1					
ANR	10970803	Identifier	y		10970591	1					
ANR	10970804	ArrayIndexing	wv [ 1 ]		10970591	1					
ANR	10970805	Identifier	wv		10970591	0					
ANR	10970806	PrimaryExpression	1		10970591	1					
ANR	10970807	ExpressionStatement	info -> v . x = wv [ 2 ]	1233:12:41950:41967	10970591	3	True				
ANR	10970808	AssignmentExpression	info -> v . x = wv [ 2 ]		10970591	0		=			
ANR	10970809	MemberAccess	info -> v . x		10970591	0					
ANR	10970810	PtrMemberAccess	info -> v		10970591	0					
ANR	10970811	Identifier	info		10970591	0					
ANR	10970812	Identifier	v		10970591	1					
ANR	10970813	Identifier	x		10970591	1					
ANR	10970814	ArrayIndexing	wv [ 2 ]		10970591	1					
ANR	10970815	Identifier	wv		10970591	0					
ANR	10970816	PrimaryExpression	2		10970591	1					
ANR	10970817	ExpressionStatement	info -> v . y = wv [ 3 ]	1234:12:41981:41998	10970591	4	True				
ANR	10970818	AssignmentExpression	info -> v . y = wv [ 3 ]		10970591	0		=			
ANR	10970819	MemberAccess	info -> v . y		10970591	0					
ANR	10970820	PtrMemberAccess	info -> v		10970591	0					
ANR	10970821	Identifier	info		10970591	0					
ANR	10970822	Identifier	v		10970591	1					
ANR	10970823	Identifier	y		10970591	1					
ANR	10970824	ArrayIndexing	wv [ 3 ]		10970591	1					
ANR	10970825	Identifier	wv		10970591	0					
ANR	10970826	PrimaryExpression	3		10970591	1					
ANR	10970827	ExpressionStatement	done_members = width_members | GLYPH_INFO_VVECTOR1	1235:12:42012:42062	10970591	5	True				
ANR	10970828	AssignmentExpression	done_members = width_members | GLYPH_INFO_VVECTOR1		10970591	0		=			
ANR	10970829	Identifier	done_members		10970591	0					
ANR	10970830	InclusiveOrExpression	width_members | GLYPH_INFO_VVECTOR1		10970591	1		|			
ANR	10970831	Identifier	width_members		10970591	0					
ANR	10970832	Identifier	GLYPH_INFO_VVECTOR1		10970591	1					
ANR	10970833	ExpressionStatement	width_members = 0	1236:12:42076:42093	10970591	6	True				
ANR	10970834	AssignmentExpression	width_members = 0		10970591	0		=			
ANR	10970835	Identifier	width_members		10970591	0					
ANR	10970836	PrimaryExpression	0		10970591	1					
ANR	10970837	IfStatement	if ( width_members )		10970591	16					
ANR	10970838	Condition	width_members	1239:8:42119:42131	10970591	0	True				
ANR	10970839	Identifier	width_members		10970591	0					
ANR	10970840	CompoundStatement		40:8:1440:1453	10970591	1					
ANR	10970841	IdentifierDeclStatement	double sbw [ 4 ] ;	1240:8:42144:42157	10970591	0	True				
ANR	10970842	IdentifierDecl	sbw [ 4 ]		10970591	0					
ANR	10970843	IdentifierDeclType	double [ 4 ]		10970591	0					
ANR	10970844	Identifier	sbw		10970591	1					
ANR	10970845	PrimaryExpression	4		10970591	2					
ANR	10970846	ExpressionStatement	"code = zchar_get_metrics ( pbfont , & gref , sbw )"	1241:8:42167:42211	10970591	1	True				
ANR	10970847	AssignmentExpression	"code = zchar_get_metrics ( pbfont , & gref , sbw )"		10970591	0		=			
ANR	10970848	Identifier	code		10970591	0					
ANR	10970849	CallExpression	"zchar_get_metrics ( pbfont , & gref , sbw )"		10970591	1					
ANR	10970850	Callee	zchar_get_metrics		10970591	0					
ANR	10970851	Identifier	zchar_get_metrics		10970591	0					
ANR	10970852	ArgumentList	pbfont		10970591	1					
ANR	10970853	Argument	pbfont		10970591	0					
ANR	10970854	Identifier	pbfont		10970591	0					
ANR	10970855	Argument	& gref		10970591	1					
ANR	10970856	UnaryOperationExpression	& gref		10970591	0					
ANR	10970857	UnaryOperator	&		10970591	0					
ANR	10970858	Identifier	gref		10970591	1					
ANR	10970859	Argument	sbw		10970591	2					
ANR	10970860	Identifier	sbw		10970591	0					
ANR	10970861	IfStatement	if ( code > 0 )		10970591	2					
ANR	10970862	Condition	code > 0	1242:12:42225:42232	10970591	0	True				
ANR	10970863	RelationalExpression	code > 0		10970591	0		>			
ANR	10970864	Identifier	code		10970591	0					
ANR	10970865	PrimaryExpression	0		10970591	1					
ANR	10970866	CompoundStatement		42:22:1531:1531	10970591	1					
ANR	10970867	ExpressionStatement	modified_widths = true	1243:12:42249:42271	10970591	0	True				
ANR	10970868	AssignmentExpression	modified_widths = true		10970591	0		=			
ANR	10970869	Identifier	modified_widths		10970591	0					
ANR	10970870	Identifier	true		10970591	1					
ANR	10970871	ExpressionStatement	info -> width [ wmode ] . x = sbw [ 2 ]	1244:12:42285:42314	10970591	1	True				
ANR	10970872	AssignmentExpression	info -> width [ wmode ] . x = sbw [ 2 ]		10970591	0		=			
ANR	10970873	MemberAccess	info -> width [ wmode ] . x		10970591	0					
ANR	10970874	ArrayIndexing	info -> width [ wmode ]		10970591	0					
ANR	10970875	PtrMemberAccess	info -> width		10970591	0					
ANR	10970876	Identifier	info		10970591	0					
ANR	10970877	Identifier	width		10970591	1					
ANR	10970878	Identifier	wmode		10970591	1					
ANR	10970879	Identifier	x		10970591	1					
ANR	10970880	ArrayIndexing	sbw [ 2 ]		10970591	1					
ANR	10970881	Identifier	sbw		10970591	0					
ANR	10970882	PrimaryExpression	2		10970591	1					
ANR	10970883	ExpressionStatement	info -> width [ wmode ] . y = sbw [ 3 ]	1245:12:42328:42357	10970591	2	True				
ANR	10970884	AssignmentExpression	info -> width [ wmode ] . y = sbw [ 3 ]		10970591	0		=			
ANR	10970885	MemberAccess	info -> width [ wmode ] . y		10970591	0					
ANR	10970886	ArrayIndexing	info -> width [ wmode ]		10970591	0					
ANR	10970887	PtrMemberAccess	info -> width		10970591	0					
ANR	10970888	Identifier	info		10970591	0					
ANR	10970889	Identifier	width		10970591	1					
ANR	10970890	Identifier	wmode		10970591	1					
ANR	10970891	Identifier	y		10970591	1					
ANR	10970892	ArrayIndexing	sbw [ 3 ]		10970591	1					
ANR	10970893	Identifier	sbw		10970591	0					
ANR	10970894	PrimaryExpression	3		10970591	1					
ANR	10970895	IfStatement	if ( code == metricsSideBearingAndWidth )		10970591	3					
ANR	10970896	Condition	code == metricsSideBearingAndWidth	1246:16:42375:42408	10970591	0	True				
ANR	10970897	EqualityExpression	code == metricsSideBearingAndWidth		10970591	0		==			
ANR	10970898	Identifier	code		10970591	0					
ANR	10970899	Identifier	metricsSideBearingAndWidth		10970591	1					
ANR	10970900	CompoundStatement		46:52:1707:1707	10970591	1					
ANR	10970901	ExpressionStatement	info -> v . x = sbw [ 0 ]	1247:16:42429:42447	10970591	0	True				
ANR	10970902	AssignmentExpression	info -> v . x = sbw [ 0 ]		10970591	0		=			
ANR	10970903	MemberAccess	info -> v . x		10970591	0					
ANR	10970904	PtrMemberAccess	info -> v		10970591	0					
ANR	10970905	Identifier	info		10970591	0					
ANR	10970906	Identifier	v		10970591	1					
ANR	10970907	Identifier	x		10970591	1					
ANR	10970908	ArrayIndexing	sbw [ 0 ]		10970591	1					
ANR	10970909	Identifier	sbw		10970591	0					
ANR	10970910	PrimaryExpression	0		10970591	1					
ANR	10970911	ExpressionStatement	info -> v . y = sbw [ 1 ]	1248:16:42465:42483	10970591	1	True				
ANR	10970912	AssignmentExpression	info -> v . y = sbw [ 1 ]		10970591	0		=			
ANR	10970913	MemberAccess	info -> v . y		10970591	0					
ANR	10970914	PtrMemberAccess	info -> v		10970591	0					
ANR	10970915	Identifier	info		10970591	0					
ANR	10970916	Identifier	v		10970591	1					
ANR	10970917	Identifier	y		10970591	1					
ANR	10970918	ArrayIndexing	sbw [ 1 ]		10970591	1					
ANR	10970919	Identifier	sbw		10970591	0					
ANR	10970920	PrimaryExpression	1		10970591	1					
ANR	10970921	ExpressionStatement	width_members |= GLYPH_INFO_VVECTOR0	1249:16:42501:42537	10970591	2	True				
ANR	10970922	AssignmentExpression	width_members |= GLYPH_INFO_VVECTOR0		10970591	0		|=			
ANR	10970923	Identifier	width_members		10970591	0					
ANR	10970924	Identifier	GLYPH_INFO_VVECTOR0		10970591	1					
ANR	10970925	ElseStatement	else		10970591	0					
ANR	10970926	CompoundStatement		50:19:1854:1854	10970591	0					
ANR	10970927	ExpressionStatement	info -> v . x = 0	1251:16:42576:42589	10970591	0	True				
ANR	10970928	AssignmentExpression	info -> v . x = 0		10970591	0		=			
ANR	10970929	MemberAccess	info -> v . x		10970591	0					
ANR	10970930	PtrMemberAccess	info -> v		10970591	0					
ANR	10970931	Identifier	info		10970591	0					
ANR	10970932	Identifier	v		10970591	1					
ANR	10970933	Identifier	x		10970591	1					
ANR	10970934	PrimaryExpression	0		10970591	1					
ANR	10970935	ExpressionStatement	info -> v . y = 0	1252:16:42607:42620	10970591	1	True				
ANR	10970936	AssignmentExpression	info -> v . y = 0		10970591	0		=			
ANR	10970937	MemberAccess	info -> v . y		10970591	0					
ANR	10970938	PtrMemberAccess	info -> v		10970591	0					
ANR	10970939	Identifier	info		10970591	0					
ANR	10970940	Identifier	v		10970591	1					
ANR	10970941	Identifier	y		10970591	1					
ANR	10970942	PrimaryExpression	0		10970591	1					
ANR	10970943	ExpressionStatement	done_members = width_members	1254:12:42648:42676	10970591	4	True				
ANR	10970944	AssignmentExpression	done_members = width_members		10970591	0		=			
ANR	10970945	Identifier	done_members		10970591	0					
ANR	10970946	Identifier	width_members		10970591	1					
ANR	10970947	ExpressionStatement	width_members = 0	1255:12:42690:42707	10970591	5	True				
ANR	10970948	AssignmentExpression	width_members = 0		10970591	0		=			
ANR	10970949	Identifier	width_members		10970591	0					
ANR	10970950	PrimaryExpression	0		10970591	1					
ANR	10970951	IfStatement	if ( outline_widths )		10970591	17					
ANR	10970952	Condition	outline_widths	1259:8:42734:42747	10970591	0	True				
ANR	10970953	Identifier	outline_widths		10970591	0					
ANR	10970954	CompoundStatement		59:24:2046:2046	10970591	1					
ANR	10970955	IfStatement	"if ( modified_widths || zchar_get_CDevProc ( pbfont , & pcdevproc ) )"		10970591	0					
ANR	10970956	Condition	"modified_widths || zchar_get_CDevProc ( pbfont , & pcdevproc )"	1260:12:42764:42820	10970591	0	True				
ANR	10970957	OrExpression	"modified_widths || zchar_get_CDevProc ( pbfont , & pcdevproc )"		10970591	0		||			
ANR	10970958	Identifier	modified_widths		10970591	0					
ANR	10970959	CallExpression	"zchar_get_CDevProc ( pbfont , & pcdevproc )"		10970591	1					
ANR	10970960	Callee	zchar_get_CDevProc		10970591	0					
ANR	10970961	Identifier	zchar_get_CDevProc		10970591	0					
ANR	10970962	ArgumentList	pbfont		10970591	1					
ANR	10970963	Argument	pbfont		10970591	0					
ANR	10970964	Identifier	pbfont		10970591	0					
ANR	10970965	Argument	& pcdevproc		10970591	1					
ANR	10970966	UnaryOperationExpression	& pcdevproc		10970591	0					
ANR	10970967	UnaryOperator	&		10970591	0					
ANR	10970968	Identifier	pcdevproc		10970591	1					
ANR	10970969	CompoundStatement		60:71:2119:2119	10970591	1					
ANR	10970970	ExpressionStatement	width_members |= done_members	1262:12:42909:42938	10970591	0	True				
ANR	10970971	AssignmentExpression	width_members |= done_members		10970591	0		|=			
ANR	10970972	Identifier	width_members		10970591	0					
ANR	10970973	Identifier	done_members		10970591	1					
ANR	10970974	ExpressionStatement	done_members = outline_widths	1263:12:42952:42981	10970591	1	True				
ANR	10970975	AssignmentExpression	done_members = outline_widths		10970591	0		=			
ANR	10970976	Identifier	done_members		10970591	0					
ANR	10970977	Identifier	outline_widths		10970591	1					
ANR	10970978	ExpressionStatement	default_members |= width_members	1266:4:43003:43035	10970591	18	True				
ANR	10970979	AssignmentExpression	default_members |= width_members		10970591	0		|=			
ANR	10970980	Identifier	default_members		10970591	0					
ANR	10970981	Identifier	width_members		10970591	1					
ANR	10970982	IfStatement	if ( default_members )		10970591	19					
ANR	10970983	Condition	default_members	1267:8:43045:43059	10970591	0	True				
ANR	10970984	Identifier	default_members		10970591	0					
ANR	10970985	CompoundStatement		67:25:2358:2358	10970591	1					
ANR	10970986	ExpressionStatement	"code = ( * proc ) ( font , glyph , pmat , default_members , info )"	1268:8:43072:43128	10970591	0	True				
ANR	10970987	AssignmentExpression	"code = ( * proc ) ( font , glyph , pmat , default_members , info )"		10970591	0		=			
ANR	10970988	Identifier	code		10970591	0					
ANR	10970989	CallExpression	"( * proc ) ( font , glyph , pmat , default_members , info )"		10970591	1					
ANR	10970990	Callee	* proc		10970591	0					
ANR	10970991	UnaryOperationExpression	* proc		10970591	0					
ANR	10970992	UnaryOperator	*		10970591	0					
ANR	10970993	Identifier	proc		10970591	1					
ANR	10970994	ArgumentList	font		10970591	1					
ANR	10970995	Argument	font		10970591	0					
ANR	10970996	Identifier	font		10970591	0					
ANR	10970997	Argument	glyph		10970591	1					
ANR	10970998	Identifier	glyph		10970591	0					
ANR	10970999	Argument	pmat		10970591	2					
ANR	10971000	Identifier	pmat		10970591	0					
ANR	10971001	Argument	default_members		10970591	3					
ANR	10971002	Identifier	default_members		10970591	0					
ANR	10971003	Argument	info		10970591	4					
ANR	10971004	Identifier	info		10970591	0					
ANR	10971005	IfStatement	if ( code < 0 )		10970591	1					
ANR	10971006	Condition	code < 0	1270:12:43143:43150	10970591	0	True				
ANR	10971007	RelationalExpression	code < 0		10970591	0		<			
ANR	10971008	Identifier	code		10970591	0					
ANR	10971009	PrimaryExpression	0		10970591	1					
ANR	10971010	ReturnStatement	return code ;	1271:12:43165:43176	10970591	1	True				
ANR	10971011	Identifier	code		10970591	0					
ANR	10971012	ElseStatement	else		10970591	0					
ANR	10971013	ExpressionStatement	info -> members = 0	1273:8:43197:43214	10970591	0	True				
ANR	10971014	AssignmentExpression	info -> members = 0		10970591	0		=			
ANR	10971015	PtrMemberAccess	info -> members		10970591	0					
ANR	10971016	Identifier	info		10970591	0					
ANR	10971017	Identifier	members		10970591	1					
ANR	10971018	PrimaryExpression	0		10970591	1					
ANR	10971019	ExpressionStatement	info -> members |= done_members	1274:4:43220:43249	10970591	20	True				
ANR	10971020	AssignmentExpression	info -> members |= done_members		10970591	0		|=			
ANR	10971021	PtrMemberAccess	info -> members		10970591	0					
ANR	10971022	Identifier	info		10970591	0					
ANR	10971023	Identifier	members		10970591	1					
ANR	10971024	Identifier	done_members		10970591	1					
ANR	10971025	ReturnStatement	return 0 ;	1275:4:43255:43263	10970591	21	True				
ANR	10971026	PrimaryExpression	0		10970591	0					
ANR	10971027	ReturnType	int		10970591	1					
ANR	10971028	Identifier	z1_glyph_info_generic		10970591	2					
ANR	10971029	ParameterList	"gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info , font_proc_glyph_info ( ( * proc ) ) , int wmode"		10970591	3					
ANR	10971030	Parameter	gs_font * font	1199:22:40557:40569	10970591	0	True				
ANR	10971031	ParameterType	gs_font *		10970591	0					
ANR	10971032	Identifier	font		10970591	1					
ANR	10971033	Parameter	gs_glyph glyph	1199:37:40572:40585	10970591	1	True				
ANR	10971034	ParameterType	gs_glyph		10970591	0					
ANR	10971035	Identifier	glyph		10970591	1					
ANR	10971036	Parameter	const gs_matrix * pmat	1199:53:40588:40608	10970591	2	True				
ANR	10971037	ParameterType	const gs_matrix *		10970591	0					
ANR	10971038	Identifier	pmat		10970591	1					
ANR	10971039	Parameter	int members	1200:14:40625:40635	10970591	3	True				
ANR	10971040	ParameterType	int		10970591	0					
ANR	10971041	Identifier	members		10970591	1					
ANR	10971042	Parameter	gs_glyph_info_t * info	1200:27:40638:40658	10970591	4	True				
ANR	10971043	ParameterType	gs_glyph_info_t *		10970591	0					
ANR	10971044	Identifier	info		10970591	1					
ANR	10971045	Parameter	font_proc_glyph_info ( ( * proc ) )	1200:50:40661:40689	10970591	5	True				
ANR	10971046	ParameterType	((font_proc_glyph_info)) *		10970591	0					
ANR	10971047	Identifier	proc		10970591	1					
ANR	10971048	Parameter	int wmode	1200:81:40692:40700	10970591	6	True				
ANR	10971049	ParameterType	int		10970591	0					
ANR	10971050	Identifier	wmode		10970591	1					
ANR	10971051	CFGEntryNode	ENTRY		10970591		True				
ANR	10971052	CFGExitNode	EXIT		10970591		True				
ANR	10971053	Symbol	info -> width		10970591						
ANR	10971054	Symbol	gs_error_rangecheck		10970591						
ANR	10971055	Symbol	* wmode		10970591						
ANR	10971056	Symbol	* wv		10970591						
ANR	10971057	Symbol	sbw		10970591						
ANR	10971058	Symbol	pbfont -> memory		10970591						
ANR	10971059	Symbol	info -> members		10970591						
ANR	10971060	Symbol	members		10970591						
ANR	10971061	Symbol	pcdevproc		10970591						
ANR	10971062	Symbol	* pbfont		10970591						
ANR	10971063	Symbol	info -> width [ wmode ] . x		10970591						
ANR	10971064	Symbol	info		10970591						
ANR	10971065	Symbol	info -> width [ wmode ] . y		10970591						
ANR	10971066	Symbol	GLYPH_INFO_OUTLINE_WIDTHS		10970591						
ANR	10971067	Symbol	GLYPH_INFO_CDEVPROC		10970591						
ANR	10971068	Symbol	info -> v		10970591						
ANR	10971069	Symbol	* proc		10970591						
ANR	10971070	Symbol	true		10970591						
ANR	10971071	Symbol	zchar_get_metrics		10970591						
ANR	10971072	Symbol	& pcdevproc		10970591						
ANR	10971073	Symbol	* * info		10970591						
ANR	10971074	Symbol	code		10970591						
ANR	10971075	Symbol	pmat		10970591						
ANR	10971076	Symbol	default_members		10970591						
ANR	10971077	Symbol	info -> v . x		10970591						
ANR	10971078	Symbol	& gref		10970591						
ANR	10971079	Symbol	* info -> width		10970591						
ANR	10971080	Symbol	GLYPH_INFO_WIDTH0		10970591						
ANR	10971081	Symbol	zchar_get_CDevProc		10970591						
ANR	10971082	Symbol	GLYPH_INFO_WIDTH1		10970591						
ANR	10971083	Symbol	outline_widths		10970591						
ANR	10971084	Symbol	zchar_get_metrics2		10970591						
ANR	10971085	Symbol	wmode		10970591						
ANR	10971086	Symbol	wv		10970591						
ANR	10971087	Symbol	proc		10970591						
ANR	10971088	Symbol	metricsSideBearingAndWidth		10970591						
ANR	10971089	Symbol	done_members		10970591						
ANR	10971090	Symbol	false		10970591						
ANR	10971091	Symbol	GLYPH_INFO_VVECTOR1		10970591						
ANR	10971092	Symbol	GLYPH_INFO_VVECTOR0		10970591						
ANR	10971093	Symbol	width_members		10970591						
ANR	10971094	Symbol	modified_widths		10970591						
ANR	10971095	Symbol	info -> width [ 1 ] . y		10970591						
ANR	10971096	Symbol	info -> width [ 1 ] . x		10970591						
ANR	10971097	Symbol	glyph		10970591						
ANR	10971098	Symbol	pbfont		10970591						
ANR	10971099	Symbol	* sbw		10970591						
ANR	10971100	Symbol	info -> v . y		10970591						
ANR	10971101	Symbol	* info		10970591						
ANR	10971102	Symbol	gref		10970591						
ANR	10971103	Symbol	font		10970591						
ANR	10971104	Function	z1_glyph_info	1278:0:43268:43555							
ANR	10971105	FunctionDef	"z1_glyph_info (gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info)"		10971104	0					
ANR	10971106	CompoundStatement		1281:0:43390:43555	10971104	0					
ANR	10971107	IdentifierDeclStatement	int wmode = font -> WMode ;	1282:4:43396:43419	10971104	0	True				
ANR	10971108	IdentifierDecl	wmode = font -> WMode		10971104	0					
ANR	10971109	IdentifierDeclType	int		10971104	0					
ANR	10971110	Identifier	wmode		10971104	1					
ANR	10971111	AssignmentExpression	wmode = font -> WMode		10971104	2		=			
ANR	10971112	Identifier	wmode		10971104	0					
ANR	10971113	PtrMemberAccess	font -> WMode		10971104	1					
ANR	10971114	Identifier	font		10971104	0					
ANR	10971115	Identifier	WMode		10971104	1					
ANR	10971116	ReturnStatement	"return z1_glyph_info_generic ( font , glyph , pmat , members , info , & gs_type1_glyph_info , wmode ) ;"	1284:4:43426:43553	10971104	1	True				
ANR	10971117	CallExpression	"z1_glyph_info_generic ( font , glyph , pmat , members , info , & gs_type1_glyph_info , wmode )"		10971104	0					
ANR	10971118	Callee	z1_glyph_info_generic		10971104	0					
ANR	10971119	Identifier	z1_glyph_info_generic		10971104	0					
ANR	10971120	ArgumentList	font		10971104	1					
ANR	10971121	Argument	font		10971104	0					
ANR	10971122	Identifier	font		10971104	0					
ANR	10971123	Argument	glyph		10971104	1					
ANR	10971124	Identifier	glyph		10971104	0					
ANR	10971125	Argument	pmat		10971104	2					
ANR	10971126	Identifier	pmat		10971104	0					
ANR	10971127	Argument	members		10971104	3					
ANR	10971128	Identifier	members		10971104	0					
ANR	10971129	Argument	info		10971104	4					
ANR	10971130	Identifier	info		10971104	0					
ANR	10971131	Argument	& gs_type1_glyph_info		10971104	5					
ANR	10971132	UnaryOperationExpression	& gs_type1_glyph_info		10971104	0					
ANR	10971133	UnaryOperator	&		10971104	0					
ANR	10971134	Identifier	gs_type1_glyph_info		10971104	1					
ANR	10971135	Argument	wmode		10971104	6					
ANR	10971136	Identifier	wmode		10971104	0					
ANR	10971137	ReturnType	int		10971104	1					
ANR	10971138	Identifier	z1_glyph_info		10971104	2					
ANR	10971139	ParameterList	"gs_font * font , gs_glyph glyph , const gs_matrix * pmat , int members , gs_glyph_info_t * info"		10971104	3					
ANR	10971140	Parameter	gs_font * font	1279:14:43286:43298	10971104	0	True				
ANR	10971141	ParameterType	gs_font *		10971104	0					
ANR	10971142	Identifier	font		10971104	1					
ANR	10971143	Parameter	gs_glyph glyph	1279:29:43301:43314	10971104	1	True				
ANR	10971144	ParameterType	gs_glyph		10971104	0					
ANR	10971145	Identifier	glyph		10971104	1					
ANR	10971146	Parameter	const gs_matrix * pmat	1279:45:43317:43337	10971104	2	True				
ANR	10971147	ParameterType	const gs_matrix *		10971104	0					
ANR	10971148	Identifier	pmat		10971104	1					
ANR	10971149	Parameter	int members	1280:14:43354:43364	10971104	3	True				
ANR	10971150	ParameterType	int		10971104	0					
ANR	10971151	Identifier	members		10971104	1					
ANR	10971152	Parameter	gs_glyph_info_t * info	1280:27:43367:43387	10971104	4	True				
ANR	10971153	ParameterType	gs_glyph_info_t *		10971104	0					
ANR	10971154	Identifier	info		10971104	1					
ANR	10971155	CFGEntryNode	ENTRY		10971104		True				
ANR	10971156	CFGExitNode	EXIT		10971104		True				
ANR	10971157	Symbol	glyph		10971104						
ANR	10971158	Symbol	pmat		10971104						
ANR	10971159	Symbol	members		10971104						
ANR	10971160	Symbol	z1_glyph_info_generic		10971104						
ANR	10971161	Symbol	font -> WMode		10971104						
ANR	10971162	Symbol	wmode		10971104						
ANR	10971163	Symbol	* font		10971104						
ANR	10971164	Symbol	& gs_type1_glyph_info		10971104						
ANR	10971165	Symbol	font		10971104						
ANR	10971166	Symbol	info		10971104						
ANR	10971167	Function	z1_set_cache	1289:0:43631:44509							
ANR	10971168	FunctionDef	"z1_set_cache (i_ctx_t * i_ctx_p , gs_font_base * pbfont , ref * cnref , gs_glyph glyph , op_proc_t cont , op_proc_t * exec_cont)"		10971167	0					
ANR	10971169	CompoundStatement		1292:0:43766:44509	10971167	0					
ANR	10971170	IdentifierDeclStatement	double sbw [ 4 ] ;	1293:4:43827:43840	10971167	0	True				
ANR	10971171	IdentifierDecl	sbw [ 4 ]		10971167	0					
ANR	10971172	IdentifierDeclType	double [ 4 ]		10971167	0					
ANR	10971173	Identifier	sbw		10971167	1					
ANR	10971174	PrimaryExpression	4		10971167	2					
ANR	10971175	IdentifierDeclStatement	gs_glyph_info_t info ;	1294:4:43846:43866	10971167	1	True				
ANR	10971176	IdentifierDecl	info		10971167	0					
ANR	10971177	IdentifierDeclType	gs_glyph_info_t		10971167	0					
ANR	10971178	Identifier	info		10971167	1					
ANR	10971179	IdentifierDeclStatement	int wmode = gs_rootfont ( igs ) -> WMode ;	1295:4:43872:43907	10971167	2	True				
ANR	10971180	IdentifierDecl	wmode = gs_rootfont ( igs ) -> WMode		10971167	0					
ANR	10971181	IdentifierDeclType	int		10971167	0					
ANR	10971182	Identifier	wmode		10971167	1					
ANR	10971183	AssignmentExpression	wmode = gs_rootfont ( igs ) -> WMode		10971167	2		=			
ANR	10971184	Identifier	wmode		10971167	0					
ANR	10971185	PtrMemberAccess	gs_rootfont ( igs ) -> WMode		10971167	1					
ANR	10971186	CallExpression	gs_rootfont ( igs )		10971167	0					
ANR	10971187	Callee	gs_rootfont		10971167	0					
ANR	10971188	Identifier	gs_rootfont		10971167	0					
ANR	10971189	ArgumentList	igs		10971167	1					
ANR	10971190	Argument	igs		10971167	0					
ANR	10971191	Identifier	igs		10971167	0					
ANR	10971192	Identifier	WMode		10971167	1					
ANR	10971193	IdentifierDeclStatement	int code ;	1296:4:43913:43921	10971167	3	True				
ANR	10971194	IdentifierDecl	code		10971167	0					
ANR	10971195	IdentifierDeclType	int		10971167	0					
ANR	10971196	Identifier	code		10971167	1					
ANR	10971197	IdentifierDeclStatement	gs_matrix id_matrix = { identity_matrix_body } ;	1297:4:43927:43973	10971167	4	True				
ANR	10971198	IdentifierDecl	id_matrix = { identity_matrix_body }		10971167	0					
ANR	10971199	IdentifierDeclType	gs_matrix		10971167	0					
ANR	10971200	Identifier	id_matrix		10971167	1					
ANR	10971201	AssignmentExpression	id_matrix = { identity_matrix_body }		10971167	2		=			
ANR	10971202	Identifier	id_matrix		10971167	0					
ANR	10971203	InitializerList	identity_matrix_body		10971167	1					
ANR	10971204	Identifier	identity_matrix_body		10971167	0					
ANR	10971205	ExpressionStatement	"code = gs_default_glyph_info ( ( gs_font * ) pbfont , glyph , & id_matrix , ( ( GLYPH_INFO_WIDTH0 | GLYPH_INFO_VVECTOR0 ) << wmode ) | GLYPH_INFO_BBOX , & info )"	1299:4:43980:44157	10971167	5	True				
ANR	10971206	AssignmentExpression	"code = gs_default_glyph_info ( ( gs_font * ) pbfont , glyph , & id_matrix , ( ( GLYPH_INFO_WIDTH0 | GLYPH_INFO_VVECTOR0 ) << wmode ) | GLYPH_INFO_BBOX , & info )"		10971167	0		=			
ANR	10971207	Identifier	code		10971167	0					
ANR	10971208	CallExpression	"gs_default_glyph_info ( ( gs_font * ) pbfont , glyph , & id_matrix , ( ( GLYPH_INFO_WIDTH0 | GLYPH_INFO_VVECTOR0 ) << wmode ) | GLYPH_INFO_BBOX , & info )"		10971167	1					
ANR	10971209	Callee	gs_default_glyph_info		10971167	0					
ANR	10971210	Identifier	gs_default_glyph_info		10971167	0					
ANR	10971211	ArgumentList	( gs_font * ) pbfont		10971167	1					
ANR	10971212	Argument	( gs_font * ) pbfont		10971167	0					
ANR	10971213	CastExpression	( gs_font * ) pbfont		10971167	0					
ANR	10971214	CastTarget	gs_font *		10971167	0					
ANR	10971215	Identifier	pbfont		10971167	1					
ANR	10971216	Argument	glyph		10971167	1					
ANR	10971217	Identifier	glyph		10971167	0					
ANR	10971218	Argument	& id_matrix		10971167	2					
ANR	10971219	UnaryOperationExpression	& id_matrix		10971167	0					
ANR	10971220	UnaryOperator	&		10971167	0					
ANR	10971221	Identifier	id_matrix		10971167	1					
ANR	10971222	Argument	( ( GLYPH_INFO_WIDTH0 | GLYPH_INFO_VVECTOR0 ) << wmode ) | GLYPH_INFO_BBOX		10971167	3					
ANR	10971223	InclusiveOrExpression	( ( GLYPH_INFO_WIDTH0 | GLYPH_INFO_VVECTOR0 ) << wmode ) | GLYPH_INFO_BBOX		10971167	0		|			
ANR	10971224	ShiftExpression	( GLYPH_INFO_WIDTH0 | GLYPH_INFO_VVECTOR0 ) << wmode		10971167	0		<<			
ANR	10971225	InclusiveOrExpression	GLYPH_INFO_WIDTH0 | GLYPH_INFO_VVECTOR0		10971167	0		|			
ANR	10971226	Identifier	GLYPH_INFO_WIDTH0		10971167	0					
ANR	10971227	Identifier	GLYPH_INFO_VVECTOR0		10971167	1					
ANR	10971228	Identifier	wmode		10971167	1					
ANR	10971229	Identifier	GLYPH_INFO_BBOX		10971167	1					
ANR	10971230	Argument	& info		10971167	4					
ANR	10971231	UnaryOperationExpression	& info		10971167	0					
ANR	10971232	UnaryOperator	&		10971167	0					
ANR	10971233	Identifier	info		10971167	1					
ANR	10971234	IfStatement	if ( code < 0 )		10971167	6					
ANR	10971235	Condition	code < 0	1302:8:44167:44174	10971167	0	True				
ANR	10971236	RelationalExpression	code < 0		10971167	0		<			
ANR	10971237	Identifier	code		10971167	0					
ANR	10971238	PrimaryExpression	0		10971167	1					
ANR	10971239	ReturnStatement	return code ;	1303:8:44185:44196	10971167	1	True				
ANR	10971240	Identifier	code		10971167	0					
ANR	10971241	ExpressionStatement	sbw [ 0 ] = info . v . x	1304:4:44202:44219	10971167	7	True				
ANR	10971242	AssignmentExpression	sbw [ 0 ] = info . v . x		10971167	0		=			
ANR	10971243	ArrayIndexing	sbw [ 0 ]		10971167	0					
ANR	10971244	Identifier	sbw		10971167	0					
ANR	10971245	PrimaryExpression	0		10971167	1					
ANR	10971246	MemberAccess	info . v . x		10971167	1					
ANR	10971247	MemberAccess	info . v		10971167	0					
ANR	10971248	Identifier	info		10971167	0					
ANR	10971249	Identifier	v		10971167	1					
ANR	10971250	Identifier	x		10971167	1					
ANR	10971251	ExpressionStatement	sbw [ 1 ] = info . v . y	1305:4:44225:44242	10971167	8	True				
ANR	10971252	AssignmentExpression	sbw [ 1 ] = info . v . y		10971167	0		=			
ANR	10971253	ArrayIndexing	sbw [ 1 ]		10971167	0					
ANR	10971254	Identifier	sbw		10971167	0					
ANR	10971255	PrimaryExpression	1		10971167	1					
ANR	10971256	MemberAccess	info . v . y		10971167	1					
ANR	10971257	MemberAccess	info . v		10971167	0					
ANR	10971258	Identifier	info		10971167	0					
ANR	10971259	Identifier	v		10971167	1					
ANR	10971260	Identifier	y		10971167	1					
ANR	10971261	ExpressionStatement	sbw [ 2 ] = info . width [ wmode ] . x	1306:4:44248:44276	10971167	9	True				
ANR	10971262	AssignmentExpression	sbw [ 2 ] = info . width [ wmode ] . x		10971167	0		=			
ANR	10971263	ArrayIndexing	sbw [ 2 ]		10971167	0					
ANR	10971264	Identifier	sbw		10971167	0					
ANR	10971265	PrimaryExpression	2		10971167	1					
ANR	10971266	MemberAccess	info . width [ wmode ] . x		10971167	1					
ANR	10971267	ArrayIndexing	info . width [ wmode ]		10971167	0					
ANR	10971268	MemberAccess	info . width		10971167	0					
ANR	10971269	Identifier	info		10971167	0					
ANR	10971270	Identifier	width		10971167	1					
ANR	10971271	Identifier	wmode		10971167	1					
ANR	10971272	Identifier	x		10971167	1					
ANR	10971273	ExpressionStatement	sbw [ 3 ] = info . width [ wmode ] . y	1307:4:44282:44310	10971167	10	True				
ANR	10971274	AssignmentExpression	sbw [ 3 ] = info . width [ wmode ] . y		10971167	0		=			
ANR	10971275	ArrayIndexing	sbw [ 3 ]		10971167	0					
ANR	10971276	Identifier	sbw		10971167	0					
ANR	10971277	PrimaryExpression	3		10971167	1					
ANR	10971278	MemberAccess	info . width [ wmode ] . y		10971167	1					
ANR	10971279	ArrayIndexing	info . width [ wmode ]		10971167	0					
ANR	10971280	MemberAccess	info . width		10971167	0					
ANR	10971281	Identifier	info		10971167	0					
ANR	10971282	Identifier	width		10971167	1					
ANR	10971283	Identifier	wmode		10971167	1					
ANR	10971284	Identifier	y		10971167	1					
ANR	10971285	ReturnStatement	"return zchar_set_cache ( i_ctx_p , pbfont , cnref , NULL , sbw + 2 , & info . bbox , cont , exec_cont , wmode ? sbw : NULL ) ;"	1308:4:44316:44507	10971167	11	True				
ANR	10971286	CallExpression	"zchar_set_cache ( i_ctx_p , pbfont , cnref , NULL , sbw + 2 , & info . bbox , cont , exec_cont , wmode ? sbw : NULL )"		10971167	0					
ANR	10971287	Callee	zchar_set_cache		10971167	0					
ANR	10971288	Identifier	zchar_set_cache		10971167	0					
ANR	10971289	ArgumentList	i_ctx_p		10971167	1					
ANR	10971290	Argument	i_ctx_p		10971167	0					
ANR	10971291	Identifier	i_ctx_p		10971167	0					
ANR	10971292	Argument	pbfont		10971167	1					
ANR	10971293	Identifier	pbfont		10971167	0					
ANR	10971294	Argument	cnref		10971167	2					
ANR	10971295	Identifier	cnref		10971167	0					
ANR	10971296	Argument	NULL		10971167	3					
ANR	10971297	Identifier	NULL		10971167	0					
ANR	10971298	Argument	sbw + 2		10971167	4					
ANR	10971299	AdditiveExpression	sbw + 2		10971167	0		+			
ANR	10971300	Identifier	sbw		10971167	0					
ANR	10971301	PrimaryExpression	2		10971167	1					
ANR	10971302	Argument	& info . bbox		10971167	5					
ANR	10971303	UnaryOperationExpression	& info . bbox		10971167	0					
ANR	10971304	UnaryOperator	&		10971167	0					
ANR	10971305	MemberAccess	info . bbox		10971167	1					
ANR	10971306	Identifier	info		10971167	0					
ANR	10971307	Identifier	bbox		10971167	1					
ANR	10971308	Argument	cont		10971167	6					
ANR	10971309	Identifier	cont		10971167	0					
ANR	10971310	Argument	exec_cont		10971167	7					
ANR	10971311	Identifier	exec_cont		10971167	0					
ANR	10971312	Argument	wmode ? sbw : NULL		10971167	8					
ANR	10971313	ConditionalExpression	wmode ? sbw : NULL		10971167	0					
ANR	10971314	Condition	wmode		10971167	0					
ANR	10971315	Identifier	wmode		10971167	0					
ANR	10971316	Identifier	sbw		10971167	1					
ANR	10971317	Identifier	NULL		10971167	2					
ANR	10971318	ReturnType	int		10971167	1					
ANR	10971319	Identifier	z1_set_cache		10971167	2					
ANR	10971320	ParameterList	"i_ctx_t * i_ctx_p , gs_font_base * pbfont , ref * cnref , gs_glyph glyph , op_proc_t cont , op_proc_t * exec_cont"		10971167	3					
ANR	10971321	Parameter	i_ctx_t * i_ctx_p	1290:13:43648:43663	10971167	0	True				
ANR	10971322	ParameterType	i_ctx_t *		10971167	0					
ANR	10971323	Identifier	i_ctx_p		10971167	1					
ANR	10971324	Parameter	gs_font_base * pbfont	1290:31:43666:43685	10971167	1	True				
ANR	10971325	ParameterType	gs_font_base *		10971167	0					
ANR	10971326	Identifier	pbfont		10971167	1					
ANR	10971327	Parameter	ref * cnref	1290:53:43688:43697	10971167	2	True				
ANR	10971328	ParameterType	ref *		10971167	0					
ANR	10971329	Identifier	cnref		10971167	1					
ANR	10971330	Parameter	gs_glyph glyph	1291:12:43712:43725	10971167	3	True				
ANR	10971331	ParameterType	gs_glyph		10971167	0					
ANR	10971332	Identifier	glyph		10971167	1					
ANR	10971333	Parameter	op_proc_t cont	1291:28:43728:43741	10971167	4	True				
ANR	10971334	ParameterType	op_proc_t		10971167	0					
ANR	10971335	Identifier	cont		10971167	1					
ANR	10971336	Parameter	op_proc_t * exec_cont	1291:44:43744:43763	10971167	5	True				
ANR	10971337	ParameterType	op_proc_t *		10971167	0					
ANR	10971338	Identifier	exec_cont		10971167	1					
ANR	10971339	CFGEntryNode	ENTRY		10971167		True				
ANR	10971340	CFGExitNode	EXIT		10971167		True				
ANR	10971341	Symbol	code		10971167						
ANR	10971342	Symbol	* wmode		10971167						
ANR	10971343	Symbol	info . v . x		10971167						
ANR	10971344	Symbol	info . v . y		10971167						
ANR	10971345	Symbol	sbw		10971167						
ANR	10971346	Symbol	info . width		10971167						
ANR	10971347	Symbol	& id_matrix		10971167						
ANR	10971348	Symbol	info . v		10971167						
ANR	10971349	Symbol	igs		10971167						
ANR	10971350	Symbol	GLYPH_INFO_WIDTH0		10971167						
ANR	10971351	Symbol	gs_rootfont		10971167						
ANR	10971352	Symbol	wmode		10971167						
ANR	10971353	Symbol	exec_cont		10971167						
ANR	10971354	Symbol	identity_matrix_body		10971167						
ANR	10971355	Symbol	cont		10971167						
ANR	10971356	Symbol	info . width [ wmode ] . y		10971167						
ANR	10971357	Symbol	info . width [ wmode ] . x		10971167						
ANR	10971358	Symbol	* gs_rootfont		10971167						
ANR	10971359	Symbol	info		10971167						
ANR	10971360	Symbol	id_matrix		10971167						
ANR	10971361	Symbol	gs_default_glyph_info		10971167						
ANR	10971362	Symbol	NULL		10971167						
ANR	10971363	Symbol	& info		10971167						
ANR	10971364	Symbol	GLYPH_INFO_VVECTOR0		10971167						
ANR	10971365	Symbol	* info . width		10971167						
ANR	10971366	Symbol	zchar_set_cache		10971167						
ANR	10971367	Symbol	cnref		10971167						
ANR	10971368	Symbol	pbfont		10971167						
ANR	10971369	Symbol	glyph		10971167						
ANR	10971370	Symbol	* sbw		10971167						
ANR	10971371	Symbol	& info . bbox		10971167						
ANR	10971372	Symbol	GLYPH_INFO_BBOX		10971167						
ANR	10971373	Symbol	i_ctx_p		10971167						
ANR	10971374	Symbol	gs_rootfont ( igs ) -> WMode		10971167						
ANR	10971375	Symbol	* info		10971167						
