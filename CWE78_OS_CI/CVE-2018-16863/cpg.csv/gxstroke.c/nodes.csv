command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5841716	File	data/converged/CVE-2018-16863_ghostpdl/gxstroke.c								
ANR	5841717	DeclStmt									
ANR	5841718	Decl							float	"float ( const gs_gstate * , gs_line_join )"	join_expansion_factor
ANR	5841719	Function	gx_stroke_path_expansion	104:0:3782:6726							
ANR	5841720	FunctionDef	"gx_stroke_path_expansion (const gs_gstate * pgs , const gx_path * ppath , gs_fixed_point * ppt)"		5841719	0					
ANR	5841721	CompoundStatement		107:0:3904:6726	5841719	0					
ANR	5841722	IdentifierDeclStatement	const subpath * psub = ppath -> first_subpath ;	108:4:3910:3952	5841719	0	True				
ANR	5841723	IdentifierDecl	* psub = ppath -> first_subpath		5841719	0					
ANR	5841724	IdentifierDeclType	const subpath *		5841719	0					
ANR	5841725	Identifier	psub		5841719	1					
ANR	5841726	AssignmentExpression	* psub = ppath -> first_subpath		5841719	2		=			
ANR	5841727	Identifier	psub		5841719	0					
ANR	5841728	PtrMemberAccess	ppath -> first_subpath		5841719	1					
ANR	5841729	Identifier	ppath		5841719	0					
ANR	5841730	Identifier	first_subpath		5841719	1					
ANR	5841731	IdentifierDeclStatement	const segment * pseg ;	109:4:3958:3977	5841719	1	True				
ANR	5841732	IdentifierDecl	* pseg		5841719	0					
ANR	5841733	IdentifierDeclType	const segment *		5841719	0					
ANR	5841734	Identifier	pseg		5841719	1					
ANR	5841735	IdentifierDeclStatement	double cx = fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ;	110:4:3983:4032	5841719	2	True				
ANR	5841736	IdentifierDecl	cx = fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx )		5841719	0					
ANR	5841737	IdentifierDeclType	double		5841719	0					
ANR	5841738	Identifier	cx		5841719	1					
ANR	5841739	AssignmentExpression	cx = fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx )		5841719	2		=			
ANR	5841740	Identifier	cx		5841719	0					
ANR	5841741	AdditiveExpression	fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx )		5841719	1		+			
ANR	5841742	CallExpression	fabs ( pgs -> ctm . xx )		5841719	0					
ANR	5841743	Callee	fabs		5841719	0					
ANR	5841744	Identifier	fabs		5841719	0					
ANR	5841745	ArgumentList	pgs -> ctm . xx		5841719	1					
ANR	5841746	Argument	pgs -> ctm . xx		5841719	0					
ANR	5841747	MemberAccess	pgs -> ctm . xx		5841719	0					
ANR	5841748	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841749	Identifier	pgs		5841719	0					
ANR	5841750	Identifier	ctm		5841719	1					
ANR	5841751	Identifier	xx		5841719	1					
ANR	5841752	CallExpression	fabs ( pgs -> ctm . yx )		5841719	1					
ANR	5841753	Callee	fabs		5841719	0					
ANR	5841754	Identifier	fabs		5841719	0					
ANR	5841755	ArgumentList	pgs -> ctm . yx		5841719	1					
ANR	5841756	Argument	pgs -> ctm . yx		5841719	0					
ANR	5841757	MemberAccess	pgs -> ctm . yx		5841719	0					
ANR	5841758	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841759	Identifier	pgs		5841719	0					
ANR	5841760	Identifier	ctm		5841719	1					
ANR	5841761	Identifier	yx		5841719	1					
ANR	5841762	IdentifierDeclStatement	double cy = fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ;	111:4:4038:4087	5841719	3	True				
ANR	5841763	IdentifierDecl	cy = fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy )		5841719	0					
ANR	5841764	IdentifierDeclType	double		5841719	0					
ANR	5841765	Identifier	cy		5841719	1					
ANR	5841766	AssignmentExpression	cy = fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy )		5841719	2		=			
ANR	5841767	Identifier	cy		5841719	0					
ANR	5841768	AdditiveExpression	fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy )		5841719	1		+			
ANR	5841769	CallExpression	fabs ( pgs -> ctm . xy )		5841719	0					
ANR	5841770	Callee	fabs		5841719	0					
ANR	5841771	Identifier	fabs		5841719	0					
ANR	5841772	ArgumentList	pgs -> ctm . xy		5841719	1					
ANR	5841773	Argument	pgs -> ctm . xy		5841719	0					
ANR	5841774	MemberAccess	pgs -> ctm . xy		5841719	0					
ANR	5841775	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841776	Identifier	pgs		5841719	0					
ANR	5841777	Identifier	ctm		5841719	1					
ANR	5841778	Identifier	xy		5841719	1					
ANR	5841779	CallExpression	fabs ( pgs -> ctm . yy )		5841719	1					
ANR	5841780	Callee	fabs		5841719	0					
ANR	5841781	Identifier	fabs		5841719	0					
ANR	5841782	ArgumentList	pgs -> ctm . yy		5841719	1					
ANR	5841783	Argument	pgs -> ctm . yy		5841719	0					
ANR	5841784	MemberAccess	pgs -> ctm . yy		5841719	0					
ANR	5841785	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841786	Identifier	pgs		5841719	0					
ANR	5841787	Identifier	ctm		5841719	1					
ANR	5841788	Identifier	yy		5841719	1					
ANR	5841789	IdentifierDeclStatement	double expand = pgs -> line_params . half_width ;	112:4:4093:4136	5841719	4	True				
ANR	5841790	IdentifierDecl	expand = pgs -> line_params . half_width		5841719	0					
ANR	5841791	IdentifierDeclType	double		5841719	0					
ANR	5841792	Identifier	expand		5841719	1					
ANR	5841793	AssignmentExpression	expand = pgs -> line_params . half_width		5841719	2		=			
ANR	5841794	Identifier	expand		5841719	0					
ANR	5841795	MemberAccess	pgs -> line_params . half_width		5841719	1					
ANR	5841796	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841797	Identifier	pgs		5841719	0					
ANR	5841798	Identifier	line_params		5841719	1					
ANR	5841799	Identifier	half_width		5841719	1					
ANR	5841800	IdentifierDeclStatement	int result = 1 ;	113:4:4142:4156	5841719	5	True				
ANR	5841801	IdentifierDecl	result = 1		5841719	0					
ANR	5841802	IdentifierDeclType	int		5841719	0					
ANR	5841803	Identifier	result		5841719	1					
ANR	5841804	AssignmentExpression	result = 1		5841719	2		=			
ANR	5841805	Identifier	result		5841719	0					
ANR	5841806	PrimaryExpression	1		5841719	1					
ANR	5841807	IfStatement	if ( pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_square )		5841719	6					
ANR	5841808	Condition	pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_square	116:8:4229:4324	5841719	0	True				
ANR	5841809	OrExpression	pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_square		5841719	0		||			
ANR	5841810	EqualityExpression	pgs -> line_params . start_cap == gs_cap_square		5841719	0		==			
ANR	5841811	MemberAccess	pgs -> line_params . start_cap		5841719	0					
ANR	5841812	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841813	Identifier	pgs		5841719	0					
ANR	5841814	Identifier	line_params		5841719	1					
ANR	5841815	Identifier	start_cap		5841719	1					
ANR	5841816	Identifier	gs_cap_square		5841719	1					
ANR	5841817	EqualityExpression	pgs -> line_params . end_cap == gs_cap_square		5841719	1		==			
ANR	5841818	MemberAccess	pgs -> line_params . end_cap		5841719	0					
ANR	5841819	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841820	Identifier	pgs		5841719	0					
ANR	5841821	Identifier	line_params		5841719	1					
ANR	5841822	Identifier	end_cap		5841719	1					
ANR	5841823	Identifier	gs_cap_square		5841719	1					
ANR	5841824	ExpressionStatement	expand *= 1.414213562	118:12:4339:4360	5841719	1	True				
ANR	5841825	AssignmentExpression	expand *= 1.414213562		5841719	0		*=			
ANR	5841826	Identifier	expand		5841719	0					
ANR	5841827	PrimaryExpression	1.414213562		5841719	1					
ANR	5841828	IfStatement	"if ( is_fzero2 ( pgs -> ctm . xy , pgs -> ctm . yx ) || is_fzero2 ( pgs -> ctm . xx , pgs -> ctm . yy ) )"		5841719	7					
ANR	5841829	Condition	"is_fzero2 ( pgs -> ctm . xy , pgs -> ctm . yx ) || is_fzero2 ( pgs -> ctm . xx , pgs -> ctm . yy )"	121:8:4439:4520	5841719	0	True				
ANR	5841830	OrExpression	"is_fzero2 ( pgs -> ctm . xy , pgs -> ctm . yx ) || is_fzero2 ( pgs -> ctm . xx , pgs -> ctm . yy )"		5841719	0		||			
ANR	5841831	CallExpression	"is_fzero2 ( pgs -> ctm . xy , pgs -> ctm . yx )"		5841719	0					
ANR	5841832	Callee	is_fzero2		5841719	0					
ANR	5841833	Identifier	is_fzero2		5841719	0					
ANR	5841834	ArgumentList	pgs -> ctm . xy		5841719	1					
ANR	5841835	Argument	pgs -> ctm . xy		5841719	0					
ANR	5841836	MemberAccess	pgs -> ctm . xy		5841719	0					
ANR	5841837	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841838	Identifier	pgs		5841719	0					
ANR	5841839	Identifier	ctm		5841719	1					
ANR	5841840	Identifier	xy		5841719	1					
ANR	5841841	Argument	pgs -> ctm . yx		5841719	1					
ANR	5841842	MemberAccess	pgs -> ctm . yx		5841719	0					
ANR	5841843	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841844	Identifier	pgs		5841719	0					
ANR	5841845	Identifier	ctm		5841719	1					
ANR	5841846	Identifier	yx		5841719	1					
ANR	5841847	CallExpression	"is_fzero2 ( pgs -> ctm . xx , pgs -> ctm . yy )"		5841719	1					
ANR	5841848	Callee	is_fzero2		5841719	0					
ANR	5841849	Identifier	is_fzero2		5841719	0					
ANR	5841850	ArgumentList	pgs -> ctm . xx		5841719	1					
ANR	5841851	Argument	pgs -> ctm . xx		5841719	0					
ANR	5841852	MemberAccess	pgs -> ctm . xx		5841719	0					
ANR	5841853	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841854	Identifier	pgs		5841719	0					
ANR	5841855	Identifier	ctm		5841719	1					
ANR	5841856	Identifier	xx		5841719	1					
ANR	5841857	Argument	pgs -> ctm . yy		5841719	1					
ANR	5841858	MemberAccess	pgs -> ctm . yy		5841719	0					
ANR	5841859	PtrMemberAccess	pgs -> ctm		5841719	0					
ANR	5841860	Identifier	pgs		5841719	0					
ANR	5841861	Identifier	ctm		5841719	1					
ANR	5841862	Identifier	yy		5841719	1					
ANR	5841863	CompoundStatement		25:8:1031:1050	5841719	1					
ANR	5841864	IdentifierDeclStatement	bool must_be_closed = ! ( pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . start_cap == gs_cap_round || pgs -> line_params . end_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round ) ;	124:8:4542:4926	5841719	0	True				
ANR	5841865	IdentifierDecl	must_be_closed = ! ( pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . start_cap == gs_cap_round || pgs -> line_params . end_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round )		5841719	0					
ANR	5841866	IdentifierDeclType	bool		5841719	0					
ANR	5841867	Identifier	must_be_closed		5841719	1					
ANR	5841868	AssignmentExpression	must_be_closed = ! ( pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . start_cap == gs_cap_round || pgs -> line_params . end_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round )		5841719	2		=			
ANR	5841869	Identifier	must_be_closed		5841719	0					
ANR	5841870	UnaryOperationExpression	! ( pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . start_cap == gs_cap_round || pgs -> line_params . end_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round )		5841719	1					
ANR	5841871	UnaryOperator	!		5841719	0					
ANR	5841872	OrExpression	pgs -> line_params . start_cap == gs_cap_square || pgs -> line_params . start_cap == gs_cap_round || pgs -> line_params . end_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round		5841719	1		||			
ANR	5841873	EqualityExpression	pgs -> line_params . start_cap == gs_cap_square		5841719	0		==			
ANR	5841874	MemberAccess	pgs -> line_params . start_cap		5841719	0					
ANR	5841875	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841876	Identifier	pgs		5841719	0					
ANR	5841877	Identifier	line_params		5841719	1					
ANR	5841878	Identifier	start_cap		5841719	1					
ANR	5841879	Identifier	gs_cap_square		5841719	1					
ANR	5841880	OrExpression	pgs -> line_params . start_cap == gs_cap_round || pgs -> line_params . end_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round		5841719	1		||			
ANR	5841881	EqualityExpression	pgs -> line_params . start_cap == gs_cap_round		5841719	0		==			
ANR	5841882	MemberAccess	pgs -> line_params . start_cap		5841719	0					
ANR	5841883	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841884	Identifier	pgs		5841719	0					
ANR	5841885	Identifier	line_params		5841719	1					
ANR	5841886	Identifier	start_cap		5841719	1					
ANR	5841887	Identifier	gs_cap_round		5841719	1					
ANR	5841888	OrExpression	pgs -> line_params . end_cap == gs_cap_square || pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round		5841719	1		||			
ANR	5841889	EqualityExpression	pgs -> line_params . end_cap == gs_cap_square		5841719	0		==			
ANR	5841890	MemberAccess	pgs -> line_params . end_cap		5841719	0					
ANR	5841891	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841892	Identifier	pgs		5841719	0					
ANR	5841893	Identifier	line_params		5841719	1					
ANR	5841894	Identifier	end_cap		5841719	1					
ANR	5841895	Identifier	gs_cap_square		5841719	1					
ANR	5841896	OrExpression	pgs -> line_params . end_cap == gs_cap_round || pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round		5841719	1		||			
ANR	5841897	EqualityExpression	pgs -> line_params . end_cap == gs_cap_round		5841719	0		==			
ANR	5841898	MemberAccess	pgs -> line_params . end_cap		5841719	0					
ANR	5841899	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841900	Identifier	pgs		5841719	0					
ANR	5841901	Identifier	line_params		5841719	1					
ANR	5841902	Identifier	end_cap		5841719	1					
ANR	5841903	Identifier	gs_cap_round		5841719	1					
ANR	5841904	OrExpression	pgs -> line_params . dash_cap == gs_cap_square || pgs -> line_params . dash_cap == gs_cap_round		5841719	1		||			
ANR	5841905	EqualityExpression	pgs -> line_params . dash_cap == gs_cap_square		5841719	0		==			
ANR	5841906	MemberAccess	pgs -> line_params . dash_cap		5841719	0					
ANR	5841907	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841908	Identifier	pgs		5841719	0					
ANR	5841909	Identifier	line_params		5841719	1					
ANR	5841910	Identifier	dash_cap		5841719	1					
ANR	5841911	Identifier	gs_cap_square		5841719	1					
ANR	5841912	EqualityExpression	pgs -> line_params . dash_cap == gs_cap_round		5841719	1		==			
ANR	5841913	MemberAccess	pgs -> line_params . dash_cap		5841719	0					
ANR	5841914	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5841915	Identifier	pgs		5841719	0					
ANR	5841916	Identifier	line_params		5841719	1					
ANR	5841917	Identifier	dash_cap		5841719	1					
ANR	5841918	Identifier	gs_cap_round		5841719	1					
ANR	5841919	IdentifierDeclStatement	gs_fixed_point prev ;	131:8:4936:4955	5841719	1	True				
ANR	5841920	IdentifierDecl	prev		5841719	0					
ANR	5841921	IdentifierDeclType	gs_fixed_point		5841719	0					
ANR	5841922	Identifier	prev		5841719	1					
ANR	5841923	ExpressionStatement	prev . x = prev . y = 0	133:8:4966:4985	5841719	2	True				
ANR	5841924	AssignmentExpression	prev . x = prev . y = 0		5841719	0		=			
ANR	5841925	MemberAccess	prev . x		5841719	0					
ANR	5841926	Identifier	prev		5841719	0					
ANR	5841927	Identifier	x		5841719	1					
ANR	5841928	AssignmentExpression	prev . y = 0		5841719	1		=			
ANR	5841929	MemberAccess	prev . y		5841719	0					
ANR	5841930	Identifier	prev		5841719	0					
ANR	5841931	Identifier	y		5841719	1					
ANR	5841932	PrimaryExpression	0		5841719	1					
ANR	5841933	ForStatement	"for ( pseg = ( const segment * ) psub ; pseg ; prev = pseg -> pt , pseg = pseg -> next )"		5841719	3					
ANR	5841934	ForInit	pseg = ( const segment * ) psub ;	134:13:5025:5053	5841719	0	True				
ANR	5841935	AssignmentExpression	pseg = ( const segment * ) psub		5841719	0		=			
ANR	5841936	Identifier	pseg		5841719	0					
ANR	5841937	CastExpression	( const segment * ) psub		5841719	1					
ANR	5841938	CastTarget	const segment *		5841719	0					
ANR	5841939	Identifier	psub		5841719	1					
ANR	5841940	Condition	pseg	134:43:5055:5058	5841719	1	True				
ANR	5841941	Identifier	pseg		5841719	0					
ANR	5841942	Expression	"prev = pseg -> pt , pseg = pseg -> next"	135:13:5074:5107	5841719	2	True				
ANR	5841943	AssignmentExpression	prev = pseg -> pt		5841719	0		=			
ANR	5841944	Identifier	prev		5841719	0					
ANR	5841945	PtrMemberAccess	pseg -> pt		5841719	1					
ANR	5841946	Identifier	pseg		5841719	0					
ANR	5841947	Identifier	pt		5841719	1					
ANR	5841948	AssignmentExpression	pseg = pseg -> next		5841719	1		=			
ANR	5841949	Identifier	pseg		5841719	0					
ANR	5841950	PtrMemberAccess	pseg -> next		5841719	1					
ANR	5841951	Identifier	pseg		5841719	0					
ANR	5841952	Identifier	next		5841719	1					
ANR	5841953	SwitchStatement	switch ( pseg -> type )		5841719	3					
ANR	5841954	Condition	pseg -> type	137:20:5144:5153	5841719	0	True				
ANR	5841955	PtrMemberAccess	pseg -> type		5841719	0					
ANR	5841956	Identifier	pseg		5841719	0					
ANR	5841957	Identifier	type		5841719	1					
ANR	5841958	CompoundStatement		31:32:1251:1251	5841719	1					
ANR	5841959	Label	case s_start :	138:12:5170:5182	5841719	0	True				
ANR	5841960	Identifier	s_start		5841719	0					
ANR	5841961	IfStatement	if ( ( ( const subpath * ) pseg ) -> curve_count || ( must_be_closed && ! ( ( const subpath * ) pseg ) -> is_closed ) )		5841719	1					
ANR	5841962	Condition	( ( const subpath * ) pseg ) -> curve_count || ( must_be_closed && ! ( ( const subpath * ) pseg ) -> is_closed )	139:20:5204:5318	5841719	0	True				
ANR	5841963	OrExpression	( ( const subpath * ) pseg ) -> curve_count || ( must_be_closed && ! ( ( const subpath * ) pseg ) -> is_closed )		5841719	0		||			
ANR	5841964	PtrMemberAccess	( ( const subpath * ) pseg ) -> curve_count		5841719	0					
ANR	5841965	CastExpression	( const subpath * ) pseg		5841719	0					
ANR	5841966	CastTarget	const subpath *		5841719	0					
ANR	5841967	Identifier	pseg		5841719	1					
ANR	5841968	Identifier	curve_count		5841719	1					
ANR	5841969	AndExpression	must_be_closed && ! ( ( const subpath * ) pseg ) -> is_closed		5841719	1		&&			
ANR	5841970	Identifier	must_be_closed		5841719	0					
ANR	5841971	UnaryOperationExpression	! ( ( const subpath * ) pseg ) -> is_closed		5841719	1					
ANR	5841972	UnaryOperator	!		5841719	0					
ANR	5841973	PtrMemberAccess	( ( const subpath * ) pseg ) -> is_closed		5841719	1					
ANR	5841974	CastExpression	( const subpath * ) pseg		5841719	0					
ANR	5841975	CastTarget	const subpath *		5841719	0					
ANR	5841976	Identifier	pseg		5841719	1					
ANR	5841977	Identifier	is_closed		5841719	1					
ANR	5841978	GotoStatement	goto not_exact ;	142:20:5362:5376	5841719	1	True				
ANR	5841979	Identifier	not_exact		5841719	0					
ANR	5841980	BreakStatement	break ;	143:16:5394:5399	5841719	2	True				
ANR	5841981	Label	case s_line :	144:12:5413:5424	5841719	3	True				
ANR	5841982	Identifier	s_line		5841719	0					
ANR	5841983	Label	case s_dash :	145:12:5438:5449	5841719	4	True				
ANR	5841984	Identifier	s_dash		5841719	0					
ANR	5841985	Label	case s_line_close :	146:12:5463:5480	5841719	5	True				
ANR	5841986	Identifier	s_line_close		5841719	0					
ANR	5841987	IfStatement	if ( ! ( pseg -> pt . x == prev . x || pseg -> pt . y == prev . y ) )		5841719	6					
ANR	5841988	Condition	! ( pseg -> pt . x == prev . x || pseg -> pt . y == prev . y )	147:20:5502:5548	5841719	0	True				
ANR	5841989	UnaryOperationExpression	! ( pseg -> pt . x == prev . x || pseg -> pt . y == prev . y )		5841719	0					
ANR	5841990	UnaryOperator	!		5841719	0					
ANR	5841991	OrExpression	pseg -> pt . x == prev . x || pseg -> pt . y == prev . y		5841719	1		||			
ANR	5841992	EqualityExpression	pseg -> pt . x == prev . x		5841719	0		==			
ANR	5841993	MemberAccess	pseg -> pt . x		5841719	0					
ANR	5841994	PtrMemberAccess	pseg -> pt		5841719	0					
ANR	5841995	Identifier	pseg		5841719	0					
ANR	5841996	Identifier	pt		5841719	1					
ANR	5841997	Identifier	x		5841719	1					
ANR	5841998	MemberAccess	prev . x		5841719	1					
ANR	5841999	Identifier	prev		5841719	0					
ANR	5842000	Identifier	x		5841719	1					
ANR	5842001	EqualityExpression	pseg -> pt . y == prev . y		5841719	1		==			
ANR	5842002	MemberAccess	pseg -> pt . y		5841719	0					
ANR	5842003	PtrMemberAccess	pseg -> pt		5841719	0					
ANR	5842004	Identifier	pseg		5841719	0					
ANR	5842005	Identifier	pt		5841719	1					
ANR	5842006	Identifier	y		5841719	1					
ANR	5842007	MemberAccess	prev . y		5841719	1					
ANR	5842008	Identifier	prev		5841719	0					
ANR	5842009	Identifier	y		5841719	1					
ANR	5842010	GotoStatement	goto not_exact ;	148:20:5571:5585	5841719	1	True				
ANR	5842011	Identifier	not_exact		5841719	0					
ANR	5842012	BreakStatement	break ;	149:16:5603:5608	5841719	7	True				
ANR	5842013	Label	case s_gap :	150:12:5622:5632	5841719	8	True				
ANR	5842014	Identifier	s_gap		5841719	0					
ANR	5842015	Label	default :	151:12:5646:5653	5841719	9	True				
ANR	5842016	Identifier	default		5841719	0					
ANR	5842017	GotoStatement	goto not_exact ;	152:16:5715:5729	5841719	10	True				
ANR	5842018	Identifier	not_exact		5841719	0					
ANR	5842019	ExpressionStatement	result = 0	154:8:5753:5763	5841719	4	True				
ANR	5842020	AssignmentExpression	result = 0		5841719	0		=			
ANR	5842021	Identifier	result		5841719	0					
ANR	5842022	PrimaryExpression	0		5841719	1					
ANR	5842023	Label	not_exact :	156:0:5802:5811	5841719	8	True				
ANR	5842024	Identifier	not_exact		5841719	0					
ANR	5842025	IfStatement	if ( result )		5841719	9					
ANR	5842026	Condition	result	157:8:5821:5826	5841719	0	True				
ANR	5842027	Identifier	result		5841719	0					
ANR	5842028	CompoundStatement		51:16:1924:1924	5841719	1					
ANR	5842029	IfStatement	if ( ! gx_path_has_curves ( ppath ) && gx_path_subpath_count ( ppath ) <= 1 && ( psub == 0 || ( pseg = psub -> next ) == 0 || ( pseg = pseg -> next ) == 0 || pseg -> type == s_line_close ) )		5841719	0					
ANR	5842030	Condition	! gx_path_has_curves ( ppath ) && gx_path_subpath_count ( ppath ) <= 1 && ( psub == 0 || ( pseg = psub -> next ) == 0 || ( pseg = pseg -> next ) == 0 || pseg -> type == s_line_close )	158:12:5843:6031	5841719	0	True				
ANR	5842031	AndExpression	! gx_path_has_curves ( ppath ) && gx_path_subpath_count ( ppath ) <= 1 && ( psub == 0 || ( pseg = psub -> next ) == 0 || ( pseg = pseg -> next ) == 0 || pseg -> type == s_line_close )		5841719	0		&&			
ANR	5842032	UnaryOperationExpression	! gx_path_has_curves ( ppath )		5841719	0					
ANR	5842033	UnaryOperator	!		5841719	0					
ANR	5842034	CallExpression	gx_path_has_curves ( ppath )		5841719	1					
ANR	5842035	Callee	gx_path_has_curves		5841719	0					
ANR	5842036	Identifier	gx_path_has_curves		5841719	0					
ANR	5842037	ArgumentList	ppath		5841719	1					
ANR	5842038	Argument	ppath		5841719	0					
ANR	5842039	Identifier	ppath		5841719	0					
ANR	5842040	AndExpression	gx_path_subpath_count ( ppath ) <= 1 && ( psub == 0 || ( pseg = psub -> next ) == 0 || ( pseg = pseg -> next ) == 0 || pseg -> type == s_line_close )		5841719	1		&&			
ANR	5842041	RelationalExpression	gx_path_subpath_count ( ppath ) <= 1		5841719	0		<=			
ANR	5842042	CallExpression	gx_path_subpath_count ( ppath )		5841719	0					
ANR	5842043	Callee	gx_path_subpath_count		5841719	0					
ANR	5842044	Identifier	gx_path_subpath_count		5841719	0					
ANR	5842045	ArgumentList	ppath		5841719	1					
ANR	5842046	Argument	ppath		5841719	0					
ANR	5842047	Identifier	ppath		5841719	0					
ANR	5842048	PrimaryExpression	1		5841719	1					
ANR	5842049	OrExpression	psub == 0 || ( pseg = psub -> next ) == 0 || ( pseg = pseg -> next ) == 0 || pseg -> type == s_line_close		5841719	1		||			
ANR	5842050	EqualityExpression	psub == 0		5841719	0		==			
ANR	5842051	Identifier	psub		5841719	0					
ANR	5842052	PrimaryExpression	0		5841719	1					
ANR	5842053	OrExpression	( pseg = psub -> next ) == 0 || ( pseg = pseg -> next ) == 0 || pseg -> type == s_line_close		5841719	1		||			
ANR	5842054	EqualityExpression	( pseg = psub -> next ) == 0		5841719	0		==			
ANR	5842055	AssignmentExpression	pseg = psub -> next		5841719	0		=			
ANR	5842056	Identifier	pseg		5841719	0					
ANR	5842057	PtrMemberAccess	psub -> next		5841719	1					
ANR	5842058	Identifier	psub		5841719	0					
ANR	5842059	Identifier	next		5841719	1					
ANR	5842060	PrimaryExpression	0		5841719	1					
ANR	5842061	OrExpression	( pseg = pseg -> next ) == 0 || pseg -> type == s_line_close		5841719	1		||			
ANR	5842062	EqualityExpression	( pseg = pseg -> next ) == 0		5841719	0		==			
ANR	5842063	AssignmentExpression	pseg = pseg -> next		5841719	0		=			
ANR	5842064	Identifier	pseg		5841719	0					
ANR	5842065	PtrMemberAccess	pseg -> next		5841719	1					
ANR	5842066	Identifier	pseg		5841719	0					
ANR	5842067	Identifier	next		5841719	1					
ANR	5842068	PrimaryExpression	0		5841719	1					
ANR	5842069	EqualityExpression	pseg -> type == s_line_close		5841719	1		==			
ANR	5842070	PtrMemberAccess	pseg -> type		5841719	0					
ANR	5842071	Identifier	pseg		5841719	0					
ANR	5842072	Identifier	type		5841719	1					
ANR	5842073	Identifier	s_line_close		5841719	1					
ANR	5842074	ExpressionStatement	DO_NOTHING	161:12:6046:6056	5841719	1	True				
ANR	5842075	Identifier	DO_NOTHING		5841719	0					
ANR	5842076	ElseStatement	else		5841719	0					
ANR	5842077	CompoundStatement		57:12:2180:2244	5841719	0					
ANR	5842078	IdentifierDeclStatement	"float factor = join_expansion_factor ( pgs , pgs -> line_params . join ) ;"	163:12:6085:6149	5841719	0	True				
ANR	5842079	IdentifierDecl	"factor = join_expansion_factor ( pgs , pgs -> line_params . join )"		5841719	0					
ANR	5842080	IdentifierDeclType	float		5841719	0					
ANR	5842081	Identifier	factor		5841719	1					
ANR	5842082	AssignmentExpression	"factor = join_expansion_factor ( pgs , pgs -> line_params . join )"		5841719	2		=			
ANR	5842083	Identifier	factor		5841719	0					
ANR	5842084	CallExpression	"join_expansion_factor ( pgs , pgs -> line_params . join )"		5841719	1					
ANR	5842085	Callee	join_expansion_factor		5841719	0					
ANR	5842086	Identifier	join_expansion_factor		5841719	0					
ANR	5842087	ArgumentList	pgs		5841719	1					
ANR	5842088	Argument	pgs		5841719	0					
ANR	5842089	Identifier	pgs		5841719	0					
ANR	5842090	Argument	pgs -> line_params . join		5841719	1					
ANR	5842091	MemberAccess	pgs -> line_params . join		5841719	0					
ANR	5842092	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5842093	Identifier	pgs		5841719	0					
ANR	5842094	Identifier	line_params		5841719	1					
ANR	5842095	Identifier	join		5841719	1					
ANR	5842096	IfStatement	if ( pgs -> line_params . curve_join >= 0 )		5841719	1					
ANR	5842097	Condition	pgs -> line_params . curve_join >= 0	165:16:6168:6199	5841719	0	True				
ANR	5842098	RelationalExpression	pgs -> line_params . curve_join >= 0		5841719	0		>=			
ANR	5842099	MemberAccess	pgs -> line_params . curve_join		5841719	0					
ANR	5842100	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5842101	Identifier	pgs		5841719	0					
ANR	5842102	Identifier	line_params		5841719	1					
ANR	5842103	Identifier	curve_join		5841719	1					
ANR	5842104	PrimaryExpression	0		5841719	1					
ANR	5842105	ExpressionStatement	"factor = max ( factor , join_expansion_factor ( pgs , ( gs_line_join ) pgs -> line_params . curve_join ) )"	166:16:6218:6341	5841719	1	True				
ANR	5842106	AssignmentExpression	"factor = max ( factor , join_expansion_factor ( pgs , ( gs_line_join ) pgs -> line_params . curve_join ) )"		5841719	0		=			
ANR	5842107	Identifier	factor		5841719	0					
ANR	5842108	CallExpression	"max ( factor , join_expansion_factor ( pgs , ( gs_line_join ) pgs -> line_params . curve_join ) )"		5841719	1					
ANR	5842109	Callee	max		5841719	0					
ANR	5842110	Identifier	max		5841719	0					
ANR	5842111	ArgumentList	factor		5841719	1					
ANR	5842112	Argument	factor		5841719	0					
ANR	5842113	Identifier	factor		5841719	0					
ANR	5842114	Argument	"join_expansion_factor ( pgs , ( gs_line_join ) pgs -> line_params . curve_join )"		5841719	1					
ANR	5842115	CallExpression	"join_expansion_factor ( pgs , ( gs_line_join ) pgs -> line_params . curve_join )"		5841719	0					
ANR	5842116	Callee	join_expansion_factor		5841719	0					
ANR	5842117	Identifier	join_expansion_factor		5841719	0					
ANR	5842118	ArgumentList	pgs		5841719	1					
ANR	5842119	Argument	pgs		5841719	0					
ANR	5842120	Identifier	pgs		5841719	0					
ANR	5842121	Argument	( gs_line_join ) pgs -> line_params . curve_join		5841719	1					
ANR	5842122	CastExpression	( gs_line_join ) pgs -> line_params . curve_join		5841719	0					
ANR	5842123	CastTarget	gs_line_join		5841719	0					
ANR	5842124	MemberAccess	pgs -> line_params . curve_join		5841719	1					
ANR	5842125	PtrMemberAccess	pgs -> line_params		5841719	0					
ANR	5842126	Identifier	pgs		5841719	0					
ANR	5842127	Identifier	line_params		5841719	1					
ANR	5842128	Identifier	curve_join		5841719	1					
ANR	5842129	ExpressionStatement	expand *= factor	168:12:6355:6371	5841719	2	True				
ANR	5842130	AssignmentExpression	expand *= factor		5841719	0		*=			
ANR	5842131	Identifier	expand		5841719	0					
ANR	5842132	Identifier	factor		5841719	1					
ANR	5842133	CompoundStatement		70:8:2604:2648	5841719	10					
ANR	5842134	IdentifierDeclStatement	float exx = expand * cx ;	174:8:6443:6466	5841719	0	True				
ANR	5842135	IdentifierDecl	exx = expand * cx		5841719	0					
ANR	5842136	IdentifierDeclType	float		5841719	0					
ANR	5842137	Identifier	exx		5841719	1					
ANR	5842138	AssignmentExpression	exx = expand * cx		5841719	2		=			
ANR	5842139	Identifier	exx		5841719	0					
ANR	5842140	MultiplicativeExpression	expand * cx		5841719	1		*			
ANR	5842141	Identifier	expand		5841719	0					
ANR	5842142	Identifier	cx		5841719	1					
ANR	5842143	IdentifierDeclStatement	float exy = expand * cy ;	175:8:6476:6499	5841719	1	True				
ANR	5842144	IdentifierDecl	exy = expand * cy		5841719	0					
ANR	5842145	IdentifierDeclType	float		5841719	0					
ANR	5842146	Identifier	exy		5841719	1					
ANR	5842147	AssignmentExpression	exy = expand * cy		5841719	2		=			
ANR	5842148	Identifier	exy		5841719	0					
ANR	5842149	MultiplicativeExpression	expand * cy		5841719	1		*			
ANR	5842150	Identifier	expand		5841719	0					
ANR	5842151	Identifier	cy		5841719	1					
ANR	5842152	IdentifierDeclStatement	"int code = set_float2fixed_vars ( ppt -> x , exx ) ;"	176:8:6509:6553	5841719	2	True				
ANR	5842153	IdentifierDecl	"code = set_float2fixed_vars ( ppt -> x , exx )"		5841719	0					
ANR	5842154	IdentifierDeclType	int		5841719	0					
ANR	5842155	Identifier	code		5841719	1					
ANR	5842156	AssignmentExpression	"code = set_float2fixed_vars ( ppt -> x , exx )"		5841719	2		=			
ANR	5842157	Identifier	code		5841719	0					
ANR	5842158	CallExpression	"set_float2fixed_vars ( ppt -> x , exx )"		5841719	1					
ANR	5842159	Callee	set_float2fixed_vars		5841719	0					
ANR	5842160	Identifier	set_float2fixed_vars		5841719	0					
ANR	5842161	ArgumentList	ppt -> x		5841719	1					
ANR	5842162	Argument	ppt -> x		5841719	0					
ANR	5842163	PtrMemberAccess	ppt -> x		5841719	0					
ANR	5842164	Identifier	ppt		5841719	0					
ANR	5842165	Identifier	x		5841719	1					
ANR	5842166	Argument	exx		5841719	1					
ANR	5842167	Identifier	exx		5841719	0					
ANR	5842168	IfStatement	if ( code < 0 )		5841719	3					
ANR	5842169	Condition	code < 0	178:12:6568:6575	5841719	0	True				
ANR	5842170	RelationalExpression	code < 0		5841719	0		<			
ANR	5842171	Identifier	code		5841719	0					
ANR	5842172	PrimaryExpression	0		5841719	1					
ANR	5842173	ReturnStatement	return code ;	179:12:6590:6601	5841719	1	True				
ANR	5842174	Identifier	code		5841719	0					
ANR	5842175	ExpressionStatement	"code = set_float2fixed_vars ( ppt -> y , exy )"	180:8:6611:6651	5841719	4	True				
ANR	5842176	AssignmentExpression	"code = set_float2fixed_vars ( ppt -> y , exy )"		5841719	0		=			
ANR	5842177	Identifier	code		5841719	0					
ANR	5842178	CallExpression	"set_float2fixed_vars ( ppt -> y , exy )"		5841719	1					
ANR	5842179	Callee	set_float2fixed_vars		5841719	0					
ANR	5842180	Identifier	set_float2fixed_vars		5841719	0					
ANR	5842181	ArgumentList	ppt -> y		5841719	1					
ANR	5842182	Argument	ppt -> y		5841719	0					
ANR	5842183	PtrMemberAccess	ppt -> y		5841719	0					
ANR	5842184	Identifier	ppt		5841719	0					
ANR	5842185	Identifier	y		5841719	1					
ANR	5842186	Argument	exy		5841719	1					
ANR	5842187	Identifier	exy		5841719	0					
ANR	5842188	IfStatement	if ( code < 0 )		5841719	5					
ANR	5842189	Condition	code < 0	181:12:6665:6672	5841719	0	True				
ANR	5842190	RelationalExpression	code < 0		5841719	0		<			
ANR	5842191	Identifier	code		5841719	0					
ANR	5842192	PrimaryExpression	0		5841719	1					
ANR	5842193	ReturnStatement	return code ;	182:12:6687:6698	5841719	1	True				
ANR	5842194	Identifier	code		5841719	0					
ANR	5842195	ReturnStatement	return result ;	185:4:6711:6724	5841719	11	True				
ANR	5842196	Identifier	result		5841719	0					
ANR	5842197	ReturnType	int		5841719	1					
ANR	5842198	Identifier	gx_stroke_path_expansion		5841719	2					
ANR	5842199	ParameterList	"const gs_gstate * pgs , const gx_path * ppath , gs_fixed_point * ppt"		5841719	3					
ANR	5842200	Parameter	const gs_gstate * pgs	105:25:3811:3831	5841719	0	True				
ANR	5842201	ParameterType	const gs_gstate *		5841719	0					
ANR	5842202	Identifier	pgs		5841719	1					
ANR	5842203	Parameter	const gx_path * ppath	105:48:3834:3854	5841719	1	True				
ANR	5842204	ParameterType	const gx_path *		5841719	0					
ANR	5842205	Identifier	ppath		5841719	1					
ANR	5842206	Parameter	gs_fixed_point * ppt	106:25:3882:3901	5841719	2	True				
ANR	5842207	ParameterType	gs_fixed_point *		5841719	0					
ANR	5842208	Identifier	ppt		5841719	1					
ANR	5842209	CFGEntryNode	ENTRY		5841719		True				
ANR	5842210	CFGExitNode	EXIT		5841719		True				
ANR	5842211	Symbol	is_fzero2		5841719						
ANR	5842212	Symbol	gs_cap_square		5841719						
ANR	5842213	Symbol	* pgs		5841719						
ANR	5842214	Symbol	pgs -> line_params		5841719						
ANR	5842215	Symbol	prev		5841719						
ANR	5842216	Symbol	pgs -> line_params . join		5841719						
ANR	5842217	Symbol	pseg -> next		5841719						
ANR	5842218	Symbol	pgs -> ctm . xx		5841719						
ANR	5842219	Symbol	join_expansion_factor		5841719						
ANR	5842220	Symbol	pgs -> ctm . xy		5841719						
ANR	5842221	Symbol	* ppt		5841719						
ANR	5842222	Symbol	* ppath		5841719						
ANR	5842223	Symbol	exx		5841719						
ANR	5842224	Symbol	* psub		5841719						
ANR	5842225	Symbol	pgs -> line_params . curve_join		5841719						
ANR	5842226	Symbol	exy		5841719						
ANR	5842227	Symbol	s_line_close		5841719						
ANR	5842228	Symbol	pseg -> pt . x		5841719						
ANR	5842229	Symbol	psub -> next		5841719						
ANR	5842230	Symbol	pseg -> pt . y		5841719						
ANR	5842231	Symbol	set_float2fixed_vars		5841719						
ANR	5842232	Symbol	pgs -> ctm		5841719						
ANR	5842233	Symbol	expand		5841719						
ANR	5842234	Symbol	( ( const subpath * ) pseg ) -> curve_count		5841719						
ANR	5842235	Symbol	pgs -> ctm . yy		5841719						
ANR	5842236	Symbol	pgs -> ctm . yx		5841719						
ANR	5842237	Symbol	* pseg		5841719						
ANR	5842238	Symbol	must_be_closed		5841719						
ANR	5842239	Symbol	code		5841719						
ANR	5842240	Symbol	ppath		5841719						
ANR	5842241	Symbol	ppath -> first_subpath		5841719						
ANR	5842242	Symbol	( ( const subpath * ) pseg ) -> is_closed		5841719						
ANR	5842243	Symbol	result		5841719						
ANR	5842244	Symbol	pseg		5841719						
ANR	5842245	Symbol	pseg -> pt		5841719						
ANR	5842246	Symbol	pseg -> type		5841719						
ANR	5842247	Symbol	factor		5841719						
ANR	5842248	Symbol	pgs		5841719						
ANR	5842249	Symbol	gs_cap_round		5841719						
ANR	5842250	Symbol	gx_path_has_curves		5841719						
ANR	5842251	Symbol	fabs		5841719						
ANR	5842252	Symbol	psub		5841719						
ANR	5842253	Symbol	pgs -> line_params . end_cap		5841719						
ANR	5842254	Symbol	pgs -> line_params . half_width		5841719						
ANR	5842255	Symbol	pgs -> line_params . start_cap		5841719						
ANR	5842256	Symbol	max		5841719						
ANR	5842257	Symbol	pgs -> line_params . dash_cap		5841719						
ANR	5842258	Symbol	prev . x		5841719						
ANR	5842259	Symbol	prev . y		5841719						
ANR	5842260	Symbol	ppt		5841719						
ANR	5842261	Symbol	cx		5841719						
ANR	5842262	Symbol	cy		5841719						
ANR	5842263	Symbol	ppt -> x		5841719						
ANR	5842264	Symbol	gx_path_subpath_count		5841719						
ANR	5842265	Symbol	ppt -> y		5841719						
ANR	5842266	Function	join_expansion_factor	187:0:6728:6957							
ANR	5842267	FunctionDef	"join_expansion_factor (const gs_gstate * pgs , gs_line_join join)"		5842266	0					
ANR	5842268	CompoundStatement		189:0:6804:6957	5842266	0					
ANR	5842269	SwitchStatement	switch ( join )		5842266	0					
ANR	5842270	Condition	join	190:12:6818:6821	5842266	0	True				
ANR	5842271	Identifier	join		5842266	0					
ANR	5842272	CompoundStatement		2:18:19:19	5842266	1					
ANR	5842273	Label	case gs_join_miter :	191:4:6830:6848	5842266	0	True				
ANR	5842274	Identifier	gs_join_miter		5842266	0					
ANR	5842275	ReturnStatement	return pgs -> line_params . miter_limit ;	191:24:6850:6885	5842266	1	True				
ANR	5842276	MemberAccess	pgs -> line_params . miter_limit		5842266	0					
ANR	5842277	PtrMemberAccess	pgs -> line_params		5842266	0					
ANR	5842278	Identifier	pgs		5842266	0					
ANR	5842279	Identifier	line_params		5842266	1					
ANR	5842280	Identifier	miter_limit		5842266	1					
ANR	5842281	Label	case gs_join_triangle :	192:4:6891:6912	5842266	2	True				
ANR	5842282	Identifier	gs_join_triangle		5842266	0					
ANR	5842283	ReturnStatement	return 2.0 ;	192:27:6914:6924	5842266	3	True				
ANR	5842284	PrimaryExpression	2.0		5842266	0					
ANR	5842285	Label	default :	193:4:6930:6937	5842266	4	True				
ANR	5842286	Identifier	default		5842266	0					
ANR	5842287	ReturnStatement	return 1.0 ;	193:13:6939:6949	5842266	5	True				
ANR	5842288	PrimaryExpression	1.0		5842266	0					
ANR	5842289	ReturnType	static float		5842266	1					
ANR	5842290	Identifier	join_expansion_factor		5842266	2					
ANR	5842291	ParameterList	"const gs_gstate * pgs , gs_line_join join"		5842266	3					
ANR	5842292	Parameter	const gs_gstate * pgs	188:22:6763:6782	5842266	0	True				
ANR	5842293	ParameterType	const gs_gstate *		5842266	0					
ANR	5842294	Identifier	pgs		5842266	1					
ANR	5842295	Parameter	gs_line_join join	188:44:6785:6801	5842266	1	True				
ANR	5842296	ParameterType	gs_line_join		5842266	0					
ANR	5842297	Identifier	join		5842266	1					
ANR	5842298	CFGEntryNode	ENTRY		5842266		True				
ANR	5842299	CFGExitNode	EXIT		5842266		True				
ANR	5842300	Symbol	pgs -> line_params		5842266						
ANR	5842301	Symbol	* pgs		5842266						
ANR	5842302	Symbol	join		5842266						
ANR	5842303	Symbol	pgs		5842266						
ANR	5842304	Symbol	pgs -> line_params . miter_limit		5842266						
ANR	5842305	DeclStmt									
ANR	5842306	Decl							gs_fixed_point	gs_fixed_point *	p_ptr
ANR	5842307	ClassDef	endpoint_s	218:8:8015:8223							
ANR	5842308	DeclStmt									
ANR	5842309	Decl							gs_fixed_point	gs_fixed_point	p
ANR	5842310	DeclStmt									
ANR	5842311	Decl							gs_fixed_point	gs_fixed_point	co
ANR	5842312	Decl							gs_fixed_point	gs_fixed_point	ce
ANR	5842313	DeclStmt									
ANR	5842314	Decl							gs_fixed_point	gs_fixed_point	cdelta
ANR	5842315	DeclStmt									
ANR	5842316	Decl							endpoint_s	endpoint_s	endpoint
ANR	5842317	DeclStmt									
ANR	5842318	Decl							endpoint	endpoint *	ep_ptr
ANR	5842319	DeclStmt									
ANR	5842320	Decl							const endpoint	const endpoint *	const_ep_ptr
ANR	5842321	ClassDef	partial_line_s	225:8:8297:8648							
ANR	5842322	DeclStmt									
ANR	5842323	Decl							endpoint	endpoint	o
ANR	5842324	DeclStmt									
ANR	5842325	Decl							endpoint	endpoint	e
ANR	5842326	DeclStmt									
ANR	5842327	Decl							gs_fixed_point	gs_fixed_point	width
ANR	5842328	DeclStmt									
ANR	5842329	Decl							gs_fixed_point	gs_fixed_point	vector
ANR	5842330	DeclStmt									
ANR	5842331	Decl							bool	bool	thin
ANR	5842332	DeclStmt									
ANR	5842333	Decl							partial_line_s	partial_line_s	partial_line
ANR	5842334	DeclStmt									
ANR	5842335	Decl							partial_line	partial_line *	pl_ptr
ANR	5842336	ClassDef	note_flags	243:8:9162:10184							
ANR	5842337	DeclStmt									
ANR	5842338	Decl							note_flags	note_flags	note_flags
ANR	5842339	DeclStmt									
ANR	5842340	Decl							bool	bool ( pl_ptr )	width_is_thin
ANR	5842341	DeclStmt									
ANR	5842342	Decl							void	"void ( gx_device * , pl_ptr , const gs_gstate * , bool , bool , note_flags )"	adjust_stroke
ANR	5842343	DeclStmt									
ANR	5842344	Decl							int	"int ( const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * join_points , const gs_matrix * pmat , gs_line_join join , bool reflected )"	line_join_points
ANR	5842345	DeclStmt									
ANR	5842346	Decl							int	"int ( const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * rjoin_points , const gs_matrix * pmat , gs_line_join join )"	line_join_points_fast_cw
ANR	5842347	DeclStmt									
ANR	5842348	Decl							int	"int ( const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * join_points , const gs_matrix * pmat , gs_line_join join )"	line_join_points_fast_ccw
ANR	5842349	DeclStmt									
ANR	5842350	Decl							void	void ( pl_ptr )	compute_caps
ANR	5842351	DeclStmt									
ANR	5842352	Decl							int	"int ( gx_path * , const gs_fixed_point * , int , bool )"	add_points
ANR	5842353	DeclStmt									
ANR	5842354	Decl							int	"int ( gx_path * , pl_ptr , pl_ptr , bool , bool )"	add_pie_join
ANR	5842355	DeclStmt									
ANR	5842356	Decl							int	"int ( gx_path * , pl_ptr , pl_ptr , bool )"	add_pie_join_fast_cw
ANR	5842357	DeclStmt									
ANR	5842358	Decl							int	"int ( gx_path * , pl_ptr , pl_ptr , bool )"	add_pie_join_fast_ccw
ANR	5842359	DeclStmt									
ANR	5842360	Decl							int	"int ( gx_path * , const_ep_ptr )"	add_round_cap
ANR	5842361	DeclStmt									
ANR	5842362	Decl							int	"int ( gx_path * , const_ep_ptr )"	add_pie_cap
ANR	5842363	DeclStmt									
ANR	5842364	Decl							int	"int ( gs_line_cap , const_ep_ptr , gs_fixed_point * )"	cap_points
ANR	5842365	DeclStmt									
ANR	5842366	Decl							int	"int ( gx_path * , pl_ptr , pl_ptr , bool )"	join_under_pie
ANR	5842367	Function	gx_default_stroke_path	328:0:12816:13187							
ANR	5842368	FunctionDef	"gx_default_stroke_path (gx_device * dev , const gs_gstate * pgs , gx_path * ppath , const gx_stroke_params * params , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath)"		5842367	0					
ANR	5842369	CompoundStatement		333:0:13065:13187	5842367	0					
ANR	5842370	ReturnStatement	"return gx_stroke_path_only ( ppath , ( gx_path * ) 0 , dev , pgs , params , pdcolor , pcpath ) ;"	334:4:13071:13185	5842367	0	True				
ANR	5842371	CallExpression	"gx_stroke_path_only ( ppath , ( gx_path * ) 0 , dev , pgs , params , pdcolor , pcpath )"		5842367	0					
ANR	5842372	Callee	gx_stroke_path_only		5842367	0					
ANR	5842373	Identifier	gx_stroke_path_only		5842367	0					
ANR	5842374	ArgumentList	ppath		5842367	1					
ANR	5842375	Argument	ppath		5842367	0					
ANR	5842376	Identifier	ppath		5842367	0					
ANR	5842377	Argument	( gx_path * ) 0		5842367	1					
ANR	5842378	CastExpression	( gx_path * ) 0		5842367	0					
ANR	5842379	CastTarget	gx_path *		5842367	0					
ANR	5842380	PrimaryExpression	0		5842367	1					
ANR	5842381	Argument	dev		5842367	2					
ANR	5842382	Identifier	dev		5842367	0					
ANR	5842383	Argument	pgs		5842367	3					
ANR	5842384	Identifier	pgs		5842367	0					
ANR	5842385	Argument	params		5842367	4					
ANR	5842386	Identifier	params		5842367	0					
ANR	5842387	Argument	pdcolor		5842367	5					
ANR	5842388	Identifier	pdcolor		5842367	0					
ANR	5842389	Argument	pcpath		5842367	6					
ANR	5842390	Identifier	pcpath		5842367	0					
ANR	5842391	ReturnType	int		5842367	1					
ANR	5842392	Identifier	gx_default_stroke_path		5842367	2					
ANR	5842393	ParameterList	"gx_device * dev , const gs_gstate * pgs , gx_path * ppath , const gx_stroke_params * params , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath"		5842367	3					
ANR	5842394	Parameter	gx_device * dev	329:23:12843:12857	5842367	0	True				
ANR	5842395	ParameterType	gx_device *		5842367	0					
ANR	5842396	Identifier	dev		5842367	1					
ANR	5842397	Parameter	const gs_gstate * pgs	329:40:12860:12880	5842367	1	True				
ANR	5842398	ParameterType	const gs_gstate *		5842367	0					
ANR	5842399	Identifier	pgs		5842367	1					
ANR	5842400	Parameter	gx_path * ppath	330:23:12906:12920	5842367	2	True				
ANR	5842401	ParameterType	gx_path *		5842367	0					
ANR	5842402	Identifier	ppath		5842367	1					
ANR	5842403	Parameter	const gx_stroke_params * params	330:40:12923:12953	5842367	3	True				
ANR	5842404	ParameterType	const gx_stroke_params *		5842367	0					
ANR	5842405	Identifier	params		5842367	1					
ANR	5842406	Parameter	const gx_drawing_color * pdcolor	331:23:12979:13010	5842367	4	True				
ANR	5842407	ParameterType	const gx_drawing_color *		5842367	0					
ANR	5842408	Identifier	pdcolor		5842367	1					
ANR	5842409	Parameter	const gx_clip_path * pcpath	332:23:13036:13062	5842367	5	True				
ANR	5842410	ParameterType	const gx_clip_path *		5842367	0					
ANR	5842411	Identifier	pcpath		5842367	1					
ANR	5842412	CFGEntryNode	ENTRY		5842367		True				
ANR	5842413	CFGExitNode	EXIT		5842367		True				
ANR	5842414	Symbol	dev		5842367						
ANR	5842415	Symbol	pdcolor		5842367						
ANR	5842416	Symbol	gx_stroke_path_only		5842367						
ANR	5842417	Symbol	ppath		5842367						
ANR	5842418	Symbol	params		5842367						
ANR	5842419	Symbol	pgs		5842367						
ANR	5842420	Symbol	pcpath		5842367						
ANR	5842421	DeclStmt									
ANR	5842422	Decl							int	"int ( gx_path * ppath , pl_ptr plp , bool adlust_longitude , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs )"	stroke_add_initial_cap_compat
ANR	5842423	ClassDef	<unnamed>	379:8:15079:15233							
ANR	5842424	DeclStmt									
ANR	5842425	Decl									orientation
ANR	5842426	Function	gx_join_path_and_reverse	394:0:15602:15967							
ANR	5842427	FunctionDef	"gx_join_path_and_reverse (gx_path * path , gx_path * rpath)"		5842426	0					
ANR	5842428	CompoundStatement		396:0:15671:15967	5842426	0					
ANR	5842429	IdentifierDeclStatement	int code ;	397:4:15677:15685	5842426	0	True				
ANR	5842430	IdentifierDecl	code		5842426	0					
ANR	5842431	IdentifierDeclType	int		5842426	0					
ANR	5842432	Identifier	code		5842426	1					
ANR	5842433	IfStatement	if ( gx_path_is_void ( rpath ) )		5842426	1					
ANR	5842434	Condition	gx_path_is_void ( rpath )	399:8:15696:15717	5842426	0	True				
ANR	5842435	CallExpression	gx_path_is_void ( rpath )		5842426	0					
ANR	5842436	Callee	gx_path_is_void		5842426	0					
ANR	5842437	Identifier	gx_path_is_void		5842426	0					
ANR	5842438	ArgumentList	rpath		5842426	1					
ANR	5842439	Argument	rpath		5842426	0					
ANR	5842440	Identifier	rpath		5842426	0					
ANR	5842441	ReturnStatement	return 0 ;	400:8:15728:15736	5842426	1	True				
ANR	5842442	PrimaryExpression	0		5842426	0					
ANR	5842443	ExpressionStatement	"code = gx_path_append_reversed ( rpath , path )"	401:5:15743:15786	5842426	2	True				
ANR	5842444	AssignmentExpression	"code = gx_path_append_reversed ( rpath , path )"		5842426	0		=			
ANR	5842445	Identifier	code		5842426	0					
ANR	5842446	CallExpression	"gx_path_append_reversed ( rpath , path )"		5842426	1					
ANR	5842447	Callee	gx_path_append_reversed		5842426	0					
ANR	5842448	Identifier	gx_path_append_reversed		5842426	0					
ANR	5842449	ArgumentList	rpath		5842426	1					
ANR	5842450	Argument	rpath		5842426	0					
ANR	5842451	Identifier	rpath		5842426	0					
ANR	5842452	Argument	path		5842426	1					
ANR	5842453	Identifier	path		5842426	0					
ANR	5842454	IfStatement	if ( code < 0 )		5842426	3					
ANR	5842455	Condition	code < 0	402:8:15796:15803	5842426	0	True				
ANR	5842456	RelationalExpression	code < 0		5842426	0		<			
ANR	5842457	Identifier	code		5842426	0					
ANR	5842458	PrimaryExpression	0		5842426	1					
ANR	5842459	ReturnStatement	return code ;	403:8:15814:15825	5842426	1	True				
ANR	5842460	Identifier	code		5842426	0					
ANR	5842461	ExpressionStatement	"gx_path_free ( rpath , ""gx_join_path_and_reverse"" )"	405:4:15832:15879	5842426	4	True				
ANR	5842462	CallExpression	"gx_path_free ( rpath , ""gx_join_path_and_reverse"" )"		5842426	0					
ANR	5842463	Callee	gx_path_free		5842426	0					
ANR	5842464	Identifier	gx_path_free		5842426	0					
ANR	5842465	ArgumentList	rpath		5842426	1					
ANR	5842466	Argument	rpath		5842426	0					
ANR	5842467	Identifier	rpath		5842426	0					
ANR	5842468	Argument	"""gx_join_path_and_reverse"""		5842426	1					
ANR	5842469	PrimaryExpression	"""gx_join_path_and_reverse"""		5842426	0					
ANR	5842470	ExpressionStatement	"gx_path_init_local ( rpath , path -> memory )"	406:4:15885:15924	5842426	5	True				
ANR	5842471	CallExpression	"gx_path_init_local ( rpath , path -> memory )"		5842426	0					
ANR	5842472	Callee	gx_path_init_local		5842426	0					
ANR	5842473	Identifier	gx_path_init_local		5842426	0					
ANR	5842474	ArgumentList	rpath		5842426	1					
ANR	5842475	Argument	rpath		5842426	0					
ANR	5842476	Identifier	rpath		5842426	0					
ANR	5842477	Argument	path -> memory		5842426	1					
ANR	5842478	PtrMemberAccess	path -> memory		5842426	0					
ANR	5842479	Identifier	path		5842426	0					
ANR	5842480	Identifier	memory		5842426	1					
ANR	5842481	ReturnStatement	return gx_path_close_subpath ( path ) ;	408:4:15931:15965	5842426	6	True				
ANR	5842482	CallExpression	gx_path_close_subpath ( path )		5842426	0					
ANR	5842483	Callee	gx_path_close_subpath		5842426	0					
ANR	5842484	Identifier	gx_path_close_subpath		5842426	0					
ANR	5842485	ArgumentList	path		5842426	1					
ANR	5842486	Argument	path		5842426	0					
ANR	5842487	Identifier	path		5842426	0					
ANR	5842488	ReturnType	static int		5842426	1					
ANR	5842489	Identifier	gx_join_path_and_reverse		5842426	2					
ANR	5842490	ParameterList	"gx_path * path , gx_path * rpath"		5842426	3					
ANR	5842491	Parameter	gx_path * path	395:25:15638:15651	5842426	0	True				
ANR	5842492	ParameterType	gx_path *		5842426	0					
ANR	5842493	Identifier	path		5842426	1					
ANR	5842494	Parameter	gx_path * rpath	395:41:15654:15668	5842426	1	True				
ANR	5842495	ParameterType	gx_path *		5842426	0					
ANR	5842496	Identifier	rpath		5842426	1					
ANR	5842497	CFGEntryNode	ENTRY		5842426		True				
ANR	5842498	CFGExitNode	EXIT		5842426		True				
ANR	5842499	Symbol	path		5842426						
ANR	5842500	Symbol	gx_path_is_void		5842426						
ANR	5842501	Symbol	code		5842426						
ANR	5842502	Symbol	gx_path_append_reversed		5842426						
ANR	5842503	Symbol	path -> memory		5842426						
ANR	5842504	Symbol	* path		5842426						
ANR	5842505	Symbol	rpath		5842426						
ANR	5842506	Symbol	gx_path_close_subpath		5842426						
ANR	5842507	Function	gx_stroke_path_only_aux	419:0:16257:44953							
ANR	5842508	FunctionDef	"gx_stroke_path_only_aux (gx_path * ppath , gx_path * to_path , gx_device * pdev , const gs_gstate * pgs , const gx_stroke_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		5842507	0					
ANR	5842509	CompoundStatement		423:0:16494:44953	5842507	0					
ANR	5842510	IdentifierDeclStatement	bool CPSI_mode = gs_currentcpsimode ( pgs -> memory ) ;	424:4:16500:16548	5842507	0	True				
ANR	5842511	IdentifierDecl	CPSI_mode = gs_currentcpsimode ( pgs -> memory )		5842507	0					
ANR	5842512	IdentifierDeclType	bool		5842507	0					
ANR	5842513	Identifier	CPSI_mode		5842507	1					
ANR	5842514	AssignmentExpression	CPSI_mode = gs_currentcpsimode ( pgs -> memory )		5842507	2		=			
ANR	5842515	Identifier	CPSI_mode		5842507	0					
ANR	5842516	CallExpression	gs_currentcpsimode ( pgs -> memory )		5842507	1					
ANR	5842517	Callee	gs_currentcpsimode		5842507	0					
ANR	5842518	Identifier	gs_currentcpsimode		5842507	0					
ANR	5842519	ArgumentList	pgs -> memory		5842507	1					
ANR	5842520	Argument	pgs -> memory		5842507	0					
ANR	5842521	PtrMemberAccess	pgs -> memory		5842507	0					
ANR	5842522	Identifier	pgs		5842507	0					
ANR	5842523	Identifier	memory		5842507	1					
ANR	5842524	IdentifierDeclStatement	bool traditional = CPSI_mode | params -> traditional ;	425:4:16554:16604	5842507	1	True				
ANR	5842525	IdentifierDecl	traditional = CPSI_mode | params -> traditional		5842507	0					
ANR	5842526	IdentifierDeclType	bool		5842507	0					
ANR	5842527	Identifier	traditional		5842507	1					
ANR	5842528	AssignmentExpression	traditional = CPSI_mode | params -> traditional		5842507	2		=			
ANR	5842529	Identifier	traditional		5842507	0					
ANR	5842530	InclusiveOrExpression	CPSI_mode | params -> traditional		5842507	1		|			
ANR	5842531	Identifier	CPSI_mode		5842507	0					
ANR	5842532	PtrMemberAccess	params -> traditional		5842507	1					
ANR	5842533	Identifier	params		5842507	0					
ANR	5842534	Identifier	traditional		5842507	1					
ANR	5842535	IdentifierDeclStatement	stroke_line_proc_t line_proc = ( ( to_path == 0 && ! gx_dc_is_pattern1_color_clist_based ( pdevc ) ) ? ( lop_is_idempotent ( pgs -> log_op ) ? stroke_fill : stroke_add ) : ( traditional ? stroke_add_compat : stroke_add_fast ) ) ;	426:4:16610:16881	5842507	2	True				
ANR	5842536	IdentifierDecl	line_proc = ( ( to_path == 0 && ! gx_dc_is_pattern1_color_clist_based ( pdevc ) ) ? ( lop_is_idempotent ( pgs -> log_op ) ? stroke_fill : stroke_add ) : ( traditional ? stroke_add_compat : stroke_add_fast ) )		5842507	0					
ANR	5842537	IdentifierDeclType	stroke_line_proc_t		5842507	0					
ANR	5842538	Identifier	line_proc		5842507	1					
ANR	5842539	AssignmentExpression	line_proc = ( ( to_path == 0 && ! gx_dc_is_pattern1_color_clist_based ( pdevc ) ) ? ( lop_is_idempotent ( pgs -> log_op ) ? stroke_fill : stroke_add ) : ( traditional ? stroke_add_compat : stroke_add_fast ) )		5842507	2		=			
ANR	5842540	Identifier	line_proc		5842507	0					
ANR	5842541	ConditionalExpression	( to_path == 0 && ! gx_dc_is_pattern1_color_clist_based ( pdevc ) ) ? ( lop_is_idempotent ( pgs -> log_op ) ? stroke_fill : stroke_add ) : ( traditional ? stroke_add_compat : stroke_add_fast )		5842507	1					
ANR	5842542	Condition	to_path == 0 && ! gx_dc_is_pattern1_color_clist_based ( pdevc )		5842507	0					
ANR	5842543	AndExpression	to_path == 0 && ! gx_dc_is_pattern1_color_clist_based ( pdevc )		5842507	0		&&			
ANR	5842544	EqualityExpression	to_path == 0		5842507	0		==			
ANR	5842545	Identifier	to_path		5842507	0					
ANR	5842546	PrimaryExpression	0		5842507	1					
ANR	5842547	UnaryOperationExpression	! gx_dc_is_pattern1_color_clist_based ( pdevc )		5842507	1					
ANR	5842548	UnaryOperator	!		5842507	0					
ANR	5842549	CallExpression	gx_dc_is_pattern1_color_clist_based ( pdevc )		5842507	1					
ANR	5842550	Callee	gx_dc_is_pattern1_color_clist_based		5842507	0					
ANR	5842551	Identifier	gx_dc_is_pattern1_color_clist_based		5842507	0					
ANR	5842552	ArgumentList	pdevc		5842507	1					
ANR	5842553	Argument	pdevc		5842507	0					
ANR	5842554	Identifier	pdevc		5842507	0					
ANR	5842555	ConditionalExpression	lop_is_idempotent ( pgs -> log_op ) ? stroke_fill : stroke_add		5842507	1					
ANR	5842556	Condition	lop_is_idempotent ( pgs -> log_op )		5842507	0					
ANR	5842557	CallExpression	lop_is_idempotent ( pgs -> log_op )		5842507	0					
ANR	5842558	Callee	lop_is_idempotent		5842507	0					
ANR	5842559	Identifier	lop_is_idempotent		5842507	0					
ANR	5842560	ArgumentList	pgs -> log_op		5842507	1					
ANR	5842561	Argument	pgs -> log_op		5842507	0					
ANR	5842562	PtrMemberAccess	pgs -> log_op		5842507	0					
ANR	5842563	Identifier	pgs		5842507	0					
ANR	5842564	Identifier	log_op		5842507	1					
ANR	5842565	Identifier	stroke_fill		5842507	1					
ANR	5842566	Identifier	stroke_add		5842507	2					
ANR	5842567	ConditionalExpression	traditional ? stroke_add_compat : stroke_add_fast		5842507	2					
ANR	5842568	Condition	traditional		5842507	0					
ANR	5842569	Identifier	traditional		5842507	0					
ANR	5842570	Identifier	stroke_add_compat		5842507	1					
ANR	5842571	Identifier	stroke_add_fast		5842507	2					
ANR	5842572	IdentifierDeclStatement	"gs_fixed_rect ibox , cbox ;"	430:4:16887:16911	5842507	3	True				
ANR	5842573	IdentifierDecl	ibox		5842507	0					
ANR	5842574	IdentifierDeclType	gs_fixed_rect		5842507	0					
ANR	5842575	Identifier	ibox		5842507	1					
ANR	5842576	IdentifierDecl	cbox		5842507	1					
ANR	5842577	IdentifierDeclType	gs_fixed_rect		5842507	0					
ANR	5842578	Identifier	cbox		5842507	1					
ANR	5842579	IdentifierDeclStatement	gx_device_clip cdev ;	431:4:16917:16936	5842507	4	True				
ANR	5842580	IdentifierDecl	cdev		5842507	0					
ANR	5842581	IdentifierDeclType	gx_device_clip		5842507	0					
ANR	5842582	Identifier	cdev		5842507	1					
ANR	5842583	IdentifierDeclStatement	gx_device * dev = pdev ;	432:4:16942:16963	5842507	5	True				
ANR	5842584	IdentifierDecl	* dev = pdev		5842507	0					
ANR	5842585	IdentifierDeclType	gx_device *		5842507	0					
ANR	5842586	Identifier	dev		5842507	1					
ANR	5842587	AssignmentExpression	* dev = pdev		5842507	2		=			
ANR	5842588	Identifier	pdev		5842507	0					
ANR	5842589	Identifier	pdev		5842507	1					
ANR	5842590	IdentifierDeclStatement	int code = 0 ;	433:4:16969:16981	5842507	6	True				
ANR	5842591	IdentifierDecl	code = 0		5842507	0					
ANR	5842592	IdentifierDeclType	int		5842507	0					
ANR	5842593	Identifier	code		5842507	1					
ANR	5842594	AssignmentExpression	code = 0		5842507	2		=			
ANR	5842595	Identifier	code		5842507	0					
ANR	5842596	PrimaryExpression	0		5842507	1					
ANR	5842597	IdentifierDeclStatement	gx_fill_params fill_params ;	434:4:16987:17013	5842507	7	True				
ANR	5842598	IdentifierDecl	fill_params		5842507	0					
ANR	5842599	IdentifierDeclType	gx_fill_params		5842507	0					
ANR	5842600	Identifier	fill_params		5842507	1					
ANR	5842601	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	435:4:17019:17082	5842507	8	True				
ANR	5842602	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		5842507	0					
ANR	5842603	IdentifierDeclType	const gx_line_params *		5842507	0					
ANR	5842604	Identifier	pgs_lp		5842507	1					
ANR	5842605	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		5842507	2		=			
ANR	5842606	Identifier	pgs_lp		5842507	0					
ANR	5842607	CallExpression	gs_currentlineparams_inline ( pgs )		5842507	1					
ANR	5842608	Callee	gs_currentlineparams_inline		5842507	0					
ANR	5842609	Identifier	gs_currentlineparams_inline		5842507	0					
ANR	5842610	ArgumentList	pgs		5842507	1					
ANR	5842611	Argument	pgs		5842507	0					
ANR	5842612	Identifier	pgs		5842507	0					
ANR	5842613	IdentifierDeclStatement	int dash_count = pgs_lp -> dash . pattern_size ;	436:4:17088:17130	5842507	9	True				
ANR	5842614	IdentifierDecl	dash_count = pgs_lp -> dash . pattern_size		5842507	0					
ANR	5842615	IdentifierDeclType	int		5842507	0					
ANR	5842616	Identifier	dash_count		5842507	1					
ANR	5842617	AssignmentExpression	dash_count = pgs_lp -> dash . pattern_size		5842507	2		=			
ANR	5842618	Identifier	dash_count		5842507	0					
ANR	5842619	MemberAccess	pgs_lp -> dash . pattern_size		5842507	1					
ANR	5842620	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5842621	Identifier	pgs_lp		5842507	0					
ANR	5842622	Identifier	dash		5842507	1					
ANR	5842623	Identifier	pattern_size		5842507	1					
ANR	5842624	IdentifierDeclStatement	"gx_path fpath , dpath ;"	437:4:17136:17156	5842507	10	True				
ANR	5842625	IdentifierDecl	fpath		5842507	0					
ANR	5842626	IdentifierDeclType	gx_path		5842507	0					
ANR	5842627	Identifier	fpath		5842507	1					
ANR	5842628	IdentifierDecl	dpath		5842507	1					
ANR	5842629	IdentifierDeclType	gx_path		5842507	0					
ANR	5842630	Identifier	dpath		5842507	1					
ANR	5842631	IdentifierDeclStatement	gx_path stroke_path_body ;	438:4:17162:17186	5842507	11	True				
ANR	5842632	IdentifierDecl	stroke_path_body		5842507	0					
ANR	5842633	IdentifierDeclType	gx_path		5842507	0					
ANR	5842634	Identifier	stroke_path_body		5842507	1					
ANR	5842635	IdentifierDeclStatement	gx_path stroke_path_reverse ;	439:4:17192:17219	5842507	12	True				
ANR	5842636	IdentifierDecl	stroke_path_reverse		5842507	0					
ANR	5842637	IdentifierDeclType	gx_path		5842507	0					
ANR	5842638	Identifier	stroke_path_reverse		5842507	1					
ANR	5842639	IdentifierDeclStatement	gx_path * to_path_reverse = NULL ;	440:4:17225:17256	5842507	13	True				
ANR	5842640	IdentifierDecl	* to_path_reverse = NULL		5842507	0					
ANR	5842641	IdentifierDeclType	gx_path *		5842507	0					
ANR	5842642	Identifier	to_path_reverse		5842507	1					
ANR	5842643	AssignmentExpression	* to_path_reverse = NULL		5842507	2		=			
ANR	5842644	Identifier	NULL		5842507	0					
ANR	5842645	Identifier	NULL		5842507	1					
ANR	5842646	IdentifierDeclStatement	const gx_path * spath ;	441:4:17262:17282	5842507	14	True				
ANR	5842647	IdentifierDecl	* spath		5842507	0					
ANR	5842648	IdentifierDeclType	const gx_path *		5842507	0					
ANR	5842649	Identifier	spath		5842507	1					
ANR	5842650	IdentifierDeclStatement	"float xx = pgs -> ctm . xx , xy = pgs -> ctm . xy ;"	442:4:17288:17328	5842507	15	True				
ANR	5842651	IdentifierDecl	xx = pgs -> ctm . xx		5842507	0					
ANR	5842652	IdentifierDeclType	float		5842507	0					
ANR	5842653	Identifier	xx		5842507	1					
ANR	5842654	AssignmentExpression	xx = pgs -> ctm . xx		5842507	2		=			
ANR	5842655	Identifier	xx		5842507	0					
ANR	5842656	MemberAccess	pgs -> ctm . xx		5842507	1					
ANR	5842657	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5842658	Identifier	pgs		5842507	0					
ANR	5842659	Identifier	ctm		5842507	1					
ANR	5842660	Identifier	xx		5842507	1					
ANR	5842661	IdentifierDecl	xy = pgs -> ctm . xy		5842507	1					
ANR	5842662	IdentifierDeclType	float		5842507	0					
ANR	5842663	Identifier	xy		5842507	1					
ANR	5842664	AssignmentExpression	xy = pgs -> ctm . xy		5842507	2		=			
ANR	5842665	Identifier	xy		5842507	0					
ANR	5842666	MemberAccess	pgs -> ctm . xy		5842507	1					
ANR	5842667	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5842668	Identifier	pgs		5842507	0					
ANR	5842669	Identifier	ctm		5842507	1					
ANR	5842670	Identifier	xy		5842507	1					
ANR	5842671	IdentifierDeclStatement	"float yx = pgs -> ctm . yx , yy = pgs -> ctm . yy ;"	443:4:17334:17374	5842507	16	True				
ANR	5842672	IdentifierDecl	yx = pgs -> ctm . yx		5842507	0					
ANR	5842673	IdentifierDeclType	float		5842507	0					
ANR	5842674	Identifier	yx		5842507	1					
ANR	5842675	AssignmentExpression	yx = pgs -> ctm . yx		5842507	2		=			
ANR	5842676	Identifier	yx		5842507	0					
ANR	5842677	MemberAccess	pgs -> ctm . yx		5842507	1					
ANR	5842678	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5842679	Identifier	pgs		5842507	0					
ANR	5842680	Identifier	ctm		5842507	1					
ANR	5842681	Identifier	yx		5842507	1					
ANR	5842682	IdentifierDecl	yy = pgs -> ctm . yy		5842507	1					
ANR	5842683	IdentifierDeclType	float		5842507	0					
ANR	5842684	Identifier	yy		5842507	1					
ANR	5842685	AssignmentExpression	yy = pgs -> ctm . yy		5842507	2		=			
ANR	5842686	Identifier	yy		5842507	0					
ANR	5842687	MemberAccess	pgs -> ctm . yy		5842507	1					
ANR	5842688	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5842689	Identifier	pgs		5842507	0					
ANR	5842690	Identifier	ctm		5842507	1					
ANR	5842691	Identifier	yy		5842507	1					
ANR	5842692	IdentifierDeclStatement	int uniform ;	449:4:17572:17583	5842507	17	True				
ANR	5842693	IdentifierDecl	uniform		5842507	0					
ANR	5842694	IdentifierDeclType	int		5842507	0					
ANR	5842695	Identifier	uniform		5842507	1					
ANR	5842696	IdentifierDeclStatement	bool reflected ;	450:4:17589:17603	5842507	18	True				
ANR	5842697	IdentifierDecl	reflected		5842507	0					
ANR	5842698	IdentifierDeclType	bool		5842507	0					
ANR	5842699	Identifier	reflected		5842507	1					
ANR	5842700	Statement	orientation	451:4:17609:17619	5842507	19	True				
ANR	5842701	Statement	orient	451:16:17621:17626	5842507	20	True				
ANR	5842702	Statement	=	451:23:17628:17628	5842507	21	True				
ANR	5842703	Statement	(	452:8:17638:17638	5842507	22	True				
ANR	5842704	Statement	is_fzero2	454:9:17677:17685	5842507	23	True				
ANR	5842705	Statement	(	454:18:17686:17686	5842507	24	True				
ANR	5842706	Statement	xy	454:19:17687:17688	5842507	25	True				
ANR	5842707	Statement	","	454:21:17689:17689	5842507	26	True				
ANR	5842708	Statement	yx	454:23:17691:17692	5842507	27	True				
ANR	5842709	Statement	)	454:25:17693:17693	5842507	28	True				
ANR	5842710	Statement	?	454:27:17695:17695	5842507	29	True				
ANR	5842711	Statement	(	455:9:17706:17706	5842507	30	True				
ANR	5842712	Statement	uniform	455:10:17707:17713	5842507	31	True				
ANR	5842713	Statement	=	455:18:17715:17715	5842507	32	True				
ANR	5842714	Statement	(	455:20:17717:17717	5842507	33	True				
ANR	5842715	Statement	xx	455:21:17718:17719	5842507	34	True				
ANR	5842716	Statement	==	455:24:17721:17722	5842507	35	True				
ANR	5842717	Statement	yy	455:27:17724:17725	5842507	36	True				
ANR	5842718	Statement	?	455:30:17727:17727	5842507	37	True				
ANR	5842719	Label	1 :	455:32:17729:17731	5842507	38	True				
ANR	5842720	Statement	xx	455:36:17733:17734	5842507	39	True				
ANR	5842721	Statement	==	455:39:17736:17737	5842507	40	True				
ANR	5842722	Statement	-	455:42:17739:17739	5842507	41	True				
ANR	5842723	Statement	yy	455:43:17740:17741	5842507	42	True				
ANR	5842724	Statement	?	455:46:17743:17743	5842507	43	True				
ANR	5842725	Statement	-	455:48:17745:17745	5842507	44	True				
ANR	5842726	Label	1 :	455:49:17746:17748	5842507	45	True				
ANR	5842727	Statement	0	455:53:17750:17750	5842507	46	True				
ANR	5842728	Statement	)	455:54:17751:17751	5842507	47	True				
ANR	5842729	Statement	","	455:55:17752:17752	5842507	48	True				
ANR	5842730	Statement	reflected	456:10:17764:17772	5842507	49	True				
ANR	5842731	Statement	=	456:20:17774:17774	5842507	50	True				
ANR	5842732	Statement	(	456:22:17776:17776	5842507	51	True				
ANR	5842733	Statement	uniform	456:23:17777:17783	5842507	52	True				
ANR	5842734	Statement	?	456:31:17785:17785	5842507	53	True				
ANR	5842735	Statement	uniform	456:33:17787:17793	5842507	54	True				
ANR	5842736	Statement	<	456:41:17795:17795	5842507	55	True				
ANR	5842737	Label	0 :	456:43:17797:17799	5842507	56	True				
ANR	5842738	Statement	(	456:47:17801:17801	5842507	57	True				
ANR	5842739	Statement	xx	456:48:17802:17803	5842507	58	True				
ANR	5842740	Statement	<	456:51:17805:17805	5842507	59	True				
ANR	5842741	Statement	0	456:53:17807:17807	5842507	60	True				
ANR	5842742	Statement	)	456:54:17808:17808	5842507	61	True				
ANR	5842743	Statement	!=	456:56:17810:17811	5842507	62	True				
ANR	5842744	Statement	(	456:59:17813:17813	5842507	63	True				
ANR	5842745	Statement	yy	456:60:17814:17815	5842507	64	True				
ANR	5842746	Statement	<	456:63:17817:17817	5842507	65	True				
ANR	5842747	Statement	0	456:65:17819:17819	5842507	66	True				
ANR	5842748	Statement	)	456:66:17820:17820	5842507	67	True				
ANR	5842749	Statement	)	456:67:17821:17821	5842507	68	True				
ANR	5842750	Statement	","	456:68:17822:17822	5842507	69	True				
ANR	5842751	Statement	orient_portrait	457:10:17834:17848	5842507	70	True				
ANR	5842752	Statement	)	457:25:17849:17849	5842507	71	True				
ANR	5842753	Statement	:	457:27:17851:17851	5842507	72	True				
ANR	5842754	Statement	is_fzero2	458:9:17862:17870	5842507	73	True				
ANR	5842755	Statement	(	458:18:17871:17871	5842507	74	True				
ANR	5842756	Statement	xx	458:19:17872:17873	5842507	75	True				
ANR	5842757	Statement	","	458:21:17874:17874	5842507	76	True				
ANR	5842758	Statement	yy	458:23:17876:17877	5842507	77	True				
ANR	5842759	Statement	)	458:25:17878:17878	5842507	78	True				
ANR	5842760	Statement	?	458:27:17880:17880	5842507	79	True				
ANR	5842761	Statement	(	459:9:17891:17891	5842507	80	True				
ANR	5842762	Statement	uniform	459:10:17892:17898	5842507	81	True				
ANR	5842763	Statement	=	459:18:17900:17900	5842507	82	True				
ANR	5842764	Statement	(	459:20:17902:17902	5842507	83	True				
ANR	5842765	Statement	xy	459:21:17903:17904	5842507	84	True				
ANR	5842766	Statement	==	459:24:17906:17907	5842507	85	True				
ANR	5842767	Statement	yx	459:27:17909:17910	5842507	86	True				
ANR	5842768	Statement	?	459:30:17912:17912	5842507	87	True				
ANR	5842769	Statement	-	459:32:17914:17914	5842507	88	True				
ANR	5842770	Label	1 :	459:33:17915:17917	5842507	89	True				
ANR	5842771	Statement	xy	459:37:17919:17920	5842507	90	True				
ANR	5842772	Statement	==	459:40:17922:17923	5842507	91	True				
ANR	5842773	Statement	-	459:43:17925:17925	5842507	92	True				
ANR	5842774	Statement	yx	459:44:17926:17927	5842507	93	True				
ANR	5842775	Statement	?	459:47:17929:17929	5842507	94	True				
ANR	5842776	Label	1 :	459:49:17931:17933	5842507	95	True				
ANR	5842777	Statement	0	459:53:17935:17935	5842507	96	True				
ANR	5842778	Statement	)	459:54:17936:17936	5842507	97	True				
ANR	5842779	Statement	","	459:55:17937:17937	5842507	98	True				
ANR	5842780	Statement	reflected	460:10:17949:17957	5842507	99	True				
ANR	5842781	Statement	=	460:20:17959:17959	5842507	100	True				
ANR	5842782	Statement	(	460:22:17961:17961	5842507	101	True				
ANR	5842783	Statement	uniform	460:23:17962:17968	5842507	102	True				
ANR	5842784	Statement	?	460:31:17970:17970	5842507	103	True				
ANR	5842785	Statement	uniform	460:33:17972:17978	5842507	104	True				
ANR	5842786	Statement	<	460:41:17980:17980	5842507	105	True				
ANR	5842787	Label	0 :	460:43:17982:17984	5842507	106	True				
ANR	5842788	Statement	(	460:47:17986:17986	5842507	107	True				
ANR	5842789	Statement	xy	460:48:17987:17988	5842507	108	True				
ANR	5842790	Statement	<	460:51:17990:17990	5842507	109	True				
ANR	5842791	Statement	0	460:53:17992:17992	5842507	110	True				
ANR	5842792	Statement	)	460:54:17993:17993	5842507	111	True				
ANR	5842793	Statement	==	460:56:17995:17996	5842507	112	True				
ANR	5842794	Statement	(	460:59:17998:17998	5842507	113	True				
ANR	5842795	Statement	yx	460:60:17999:18000	5842507	114	True				
ANR	5842796	Statement	<	460:63:18002:18002	5842507	115	True				
ANR	5842797	Statement	0	460:65:18004:18004	5842507	116	True				
ANR	5842798	Statement	)	460:66:18005:18005	5842507	117	True				
ANR	5842799	Statement	)	460:67:18006:18006	5842507	118	True				
ANR	5842800	Statement	","	460:68:18007:18007	5842507	119	True				
ANR	5842801	Statement	orient_landscape	461:10:18019:18034	5842507	120	True				
ANR	5842802	Statement	)	461:26:18035:18035	5842507	121	True				
ANR	5842803	Statement	:	461:28:18037:18037	5842507	122	True				
ANR	5842804	Statement	(	465:9:18157:18157	5842507	123	True				
ANR	5842805	Statement	uniform	465:10:18158:18164	5842507	124	True				
ANR	5842806	Statement	=	465:18:18166:18166	5842507	125	True				
ANR	5842807	Statement	0	465:20:18168:18168	5842507	126	True				
ANR	5842808	Statement	","	465:21:18169:18169	5842507	127	True				
ANR	5842809	Statement	reflected	466:10:18181:18189	5842507	128	True				
ANR	5842810	Statement	=	466:20:18191:18191	5842507	129	True				
ANR	5842811	Statement	xy	466:22:18193:18194	5842507	130	True				
ANR	5842812	Statement	*	466:25:18196:18196	5842507	131	True				
ANR	5842813	Statement	yx	466:27:18198:18199	5842507	132	True				
ANR	5842814	Statement	>	466:30:18201:18201	5842507	133	True				
ANR	5842815	Statement	xx	466:32:18203:18204	5842507	134	True				
ANR	5842816	Statement	*	466:35:18206:18206	5842507	135	True				
ANR	5842817	Statement	yy	466:37:18208:18209	5842507	136	True				
ANR	5842818	Statement	","	466:39:18210:18210	5842507	137	True				
ANR	5842819	Statement	orient_other	467:10:18222:18233	5842507	138	True				
ANR	5842820	Statement	)	467:22:18234:18234	5842507	139	True				
ANR	5842821	Statement	)	467:23:18235:18235	5842507	140	True				
ANR	5842822	ExpressionStatement		467:24:18236:18236	5842507	141	True				
ANR	5842823	IdentifierDeclStatement	segment_notes not_first = ( ! is_fzero ( pgs -> line_params . dot_length ) ? sn_not_first : sn_none ) ;	476:4:18580:18679	5842507	142	True				
ANR	5842824	IdentifierDecl	not_first = ( ! is_fzero ( pgs -> line_params . dot_length ) ? sn_not_first : sn_none )		5842507	0					
ANR	5842825	IdentifierDeclType	segment_notes		5842507	0					
ANR	5842826	Identifier	not_first		5842507	1					
ANR	5842827	AssignmentExpression	not_first = ( ! is_fzero ( pgs -> line_params . dot_length ) ? sn_not_first : sn_none )		5842507	2		=			
ANR	5842828	Identifier	not_first		5842507	0					
ANR	5842829	ConditionalExpression	! is_fzero ( pgs -> line_params . dot_length ) ? sn_not_first : sn_none		5842507	1					
ANR	5842830	Condition	! is_fzero ( pgs -> line_params . dot_length )		5842507	0					
ANR	5842831	UnaryOperationExpression	! is_fzero ( pgs -> line_params . dot_length )		5842507	0					
ANR	5842832	UnaryOperator	!		5842507	0					
ANR	5842833	CallExpression	is_fzero ( pgs -> line_params . dot_length )		5842507	1					
ANR	5842834	Callee	is_fzero		5842507	0					
ANR	5842835	Identifier	is_fzero		5842507	0					
ANR	5842836	ArgumentList	pgs -> line_params . dot_length		5842507	1					
ANR	5842837	Argument	pgs -> line_params . dot_length		5842507	0					
ANR	5842838	MemberAccess	pgs -> line_params . dot_length		5842507	0					
ANR	5842839	PtrMemberAccess	pgs -> line_params		5842507	0					
ANR	5842840	Identifier	pgs		5842507	0					
ANR	5842841	Identifier	line_params		5842507	1					
ANR	5842842	Identifier	dot_length		5842507	1					
ANR	5842843	Identifier	sn_not_first		5842507	1					
ANR	5842844	Identifier	sn_none		5842507	2					
ANR	5842845	IdentifierDeclStatement	gs_line_join curve_join = ( pgs_lp -> curve_join >= 0 ? ( gs_line_join ) pgs_lp -> curve_join : pgs_lp -> join == gs_join_none || pgs_lp -> join == gs_join_round ? gs_join_bevel : pgs_lp -> join ) ;	481:4:18748:18958	5842507	143	True				
ANR	5842846	IdentifierDecl	curve_join = ( pgs_lp -> curve_join >= 0 ? ( gs_line_join ) pgs_lp -> curve_join : pgs_lp -> join == gs_join_none || pgs_lp -> join == gs_join_round ? gs_join_bevel : pgs_lp -> join )		5842507	0					
ANR	5842847	IdentifierDeclType	gs_line_join		5842507	0					
ANR	5842848	Identifier	curve_join		5842507	1					
ANR	5842849	AssignmentExpression	curve_join = ( pgs_lp -> curve_join >= 0 ? ( gs_line_join ) pgs_lp -> curve_join : pgs_lp -> join == gs_join_none || pgs_lp -> join == gs_join_round ? gs_join_bevel : pgs_lp -> join )		5842507	2		=			
ANR	5842850	Identifier	curve_join		5842507	0					
ANR	5842851	ConditionalExpression	pgs_lp -> curve_join >= 0 ? ( gs_line_join ) pgs_lp -> curve_join : pgs_lp -> join == gs_join_none || pgs_lp -> join == gs_join_round ? gs_join_bevel : pgs_lp -> join		5842507	1					
ANR	5842852	Condition	pgs_lp -> curve_join >= 0		5842507	0					
ANR	5842853	RelationalExpression	pgs_lp -> curve_join >= 0		5842507	0		>=			
ANR	5842854	PtrMemberAccess	pgs_lp -> curve_join		5842507	0					
ANR	5842855	Identifier	pgs_lp		5842507	0					
ANR	5842856	Identifier	curve_join		5842507	1					
ANR	5842857	PrimaryExpression	0		5842507	1					
ANR	5842858	CastExpression	( gs_line_join ) pgs_lp -> curve_join		5842507	1					
ANR	5842859	CastTarget	gs_line_join		5842507	0					
ANR	5842860	PtrMemberAccess	pgs_lp -> curve_join		5842507	1					
ANR	5842861	Identifier	pgs_lp		5842507	0					
ANR	5842862	Identifier	curve_join		5842507	1					
ANR	5842863	ConditionalExpression	pgs_lp -> join == gs_join_none || pgs_lp -> join == gs_join_round ? gs_join_bevel : pgs_lp -> join		5842507	2					
ANR	5842864	Condition	pgs_lp -> join == gs_join_none || pgs_lp -> join == gs_join_round		5842507	0					
ANR	5842865	OrExpression	pgs_lp -> join == gs_join_none || pgs_lp -> join == gs_join_round		5842507	0		||			
ANR	5842866	EqualityExpression	pgs_lp -> join == gs_join_none		5842507	0		==			
ANR	5842867	PtrMemberAccess	pgs_lp -> join		5842507	0					
ANR	5842868	Identifier	pgs_lp		5842507	0					
ANR	5842869	Identifier	join		5842507	1					
ANR	5842870	Identifier	gs_join_none		5842507	1					
ANR	5842871	EqualityExpression	pgs_lp -> join == gs_join_round		5842507	1		==			
ANR	5842872	PtrMemberAccess	pgs_lp -> join		5842507	0					
ANR	5842873	Identifier	pgs_lp		5842507	0					
ANR	5842874	Identifier	join		5842507	1					
ANR	5842875	Identifier	gs_join_round		5842507	1					
ANR	5842876	Identifier	gs_join_bevel		5842507	1					
ANR	5842877	PtrMemberAccess	pgs_lp -> join		5842507	2					
ANR	5842878	Identifier	pgs_lp		5842507	0					
ANR	5842879	Identifier	join		5842507	1					
ANR	5842880	IdentifierDeclStatement	float line_width = pgs_lp -> half_width ;	485:4:18964:19001	5842507	144	True				
ANR	5842881	IdentifierDecl	line_width = pgs_lp -> half_width		5842507	0					
ANR	5842882	IdentifierDeclType	float		5842507	0					
ANR	5842883	Identifier	line_width		5842507	1					
ANR	5842884	AssignmentExpression	line_width = pgs_lp -> half_width		5842507	2		=			
ANR	5842885	Identifier	line_width		5842507	0					
ANR	5842886	PtrMemberAccess	pgs_lp -> half_width		5842507	1					
ANR	5842887	Identifier	pgs_lp		5842507	0					
ANR	5842888	Identifier	half_width		5842507	1					
ANR	5842889	IdentifierDeclStatement	bool always_thin ;	486:4:19042:19058	5842507	145	True				
ANR	5842890	IdentifierDecl	always_thin		5842507	0					
ANR	5842891	IdentifierDeclType	bool		5842507	0					
ANR	5842892	Identifier	always_thin		5842507	1					
ANR	5842893	IdentifierDeclStatement	double line_width_and_scale ;	487:4:19064:19091	5842507	146	True				
ANR	5842894	IdentifierDecl	line_width_and_scale		5842507	0					
ANR	5842895	IdentifierDeclType	double		5842507	0					
ANR	5842896	Identifier	line_width_and_scale		5842507	1					
ANR	5842897	IdentifierDeclStatement	double device_line_width_scale = 0 ;	488:4:19097:19131	5842507	147	True				
ANR	5842898	IdentifierDecl	device_line_width_scale = 0		5842507	0					
ANR	5842899	IdentifierDeclType	double		5842507	0					
ANR	5842900	Identifier	device_line_width_scale		5842507	1					
ANR	5842901	AssignmentExpression	device_line_width_scale = 0		5842507	2		=			
ANR	5842902	Identifier	device_line_width_scale		5842507	0					
ANR	5842903	PrimaryExpression	0		5842507	1					
ANR	5842904	IdentifierDeclStatement	double device_dot_length = pgs_lp -> dot_length * fixed_1 ;	489:4:19159:19214	5842507	148	True				
ANR	5842905	IdentifierDecl	device_dot_length = pgs_lp -> dot_length * fixed_1		5842507	0					
ANR	5842906	IdentifierDeclType	double		5842507	0					
ANR	5842907	Identifier	device_dot_length		5842507	1					
ANR	5842908	AssignmentExpression	device_dot_length = pgs_lp -> dot_length * fixed_1		5842507	2		=			
ANR	5842909	Identifier	device_dot_length		5842507	0					
ANR	5842910	MultiplicativeExpression	pgs_lp -> dot_length * fixed_1		5842507	1		*			
ANR	5842911	PtrMemberAccess	pgs_lp -> dot_length		5842507	0					
ANR	5842912	Identifier	pgs_lp		5842507	0					
ANR	5842913	Identifier	dot_length		5842507	1					
ANR	5842914	Identifier	fixed_1		5842507	1					
ANR	5842915	IdentifierDeclStatement	const subpath * psub ;	490:4:19220:19239	5842507	149	True				
ANR	5842916	IdentifierDecl	* psub		5842507	0					
ANR	5842917	IdentifierDeclType	const subpath *		5842507	0					
ANR	5842918	Identifier	psub		5842507	1					
ANR	5842919	IdentifierDeclStatement	gs_matrix initial_matrix ;	491:4:19245:19269	5842507	150	True				
ANR	5842920	IdentifierDecl	initial_matrix		5842507	0					
ANR	5842921	IdentifierDeclType	gs_matrix		5842507	0					
ANR	5842922	Identifier	initial_matrix		5842507	1					
ANR	5842923	IdentifierDeclStatement	bool initial_matrix_reflected ;	492:4:19275:19304	5842507	151	True				
ANR	5842924	IdentifierDecl	initial_matrix_reflected		5842507	0					
ANR	5842925	IdentifierDeclType	bool		5842507	0					
ANR	5842926	Identifier	initial_matrix_reflected		5842507	1					
ANR	5842927	IdentifierDeclStatement	note_flags flags ;	493:4:19310:19326	5842507	152	True				
ANR	5842928	IdentifierDecl	flags		5842507	0					
ANR	5842929	IdentifierDeclType	note_flags		5842507	0					
ANR	5842930	Identifier	flags		5842507	1					
ANR	5842931	ExpressionStatement	"( * dev_proc ( pdev , get_initial_matrix ) ) ( pdev , & initial_matrix )"	495:4:19333:19394	5842507	153	True				
ANR	5842932	CallExpression	"( * dev_proc ( pdev , get_initial_matrix ) ) ( pdev , & initial_matrix )"		5842507	0					
ANR	5842933	Callee	"* dev_proc ( pdev , get_initial_matrix )"		5842507	0					
ANR	5842934	UnaryOperationExpression	"* dev_proc ( pdev , get_initial_matrix )"		5842507	0					
ANR	5842935	UnaryOperator	*		5842507	0					
ANR	5842936	CallExpression	"dev_proc ( pdev , get_initial_matrix )"		5842507	1					
ANR	5842937	Callee	dev_proc		5842507	0					
ANR	5842938	Identifier	dev_proc		5842507	0					
ANR	5842939	ArgumentList	pdev		5842507	1					
ANR	5842940	Argument	pdev		5842507	0					
ANR	5842941	Identifier	pdev		5842507	0					
ANR	5842942	Argument	get_initial_matrix		5842507	1					
ANR	5842943	Identifier	get_initial_matrix		5842507	0					
ANR	5842944	ArgumentList	pdev		5842507	1					
ANR	5842945	Argument	pdev		5842507	0					
ANR	5842946	Identifier	pdev		5842507	0					
ANR	5842947	Argument	& initial_matrix		5842507	1					
ANR	5842948	UnaryOperationExpression	& initial_matrix		5842507	0					
ANR	5842949	UnaryOperator	&		5842507	0					
ANR	5842950	Identifier	initial_matrix		5842507	1					
ANR	5842951	ExpressionStatement	initial_matrix_reflected = initial_matrix . xy * initial_matrix . yx > initial_matrix . xx * initial_matrix . yy	496:4:19400:19535	5842507	154	True				
ANR	5842952	AssignmentExpression	initial_matrix_reflected = initial_matrix . xy * initial_matrix . yx > initial_matrix . xx * initial_matrix . yy		5842507	0		=			
ANR	5842953	Identifier	initial_matrix_reflected		5842507	0					
ANR	5842954	RelationalExpression	initial_matrix . xy * initial_matrix . yx > initial_matrix . xx * initial_matrix . yy		5842507	1		>			
ANR	5842955	MultiplicativeExpression	initial_matrix . xy * initial_matrix . yx		5842507	0		*			
ANR	5842956	MemberAccess	initial_matrix . xy		5842507	0					
ANR	5842957	Identifier	initial_matrix		5842507	0					
ANR	5842958	Identifier	xy		5842507	1					
ANR	5842959	MemberAccess	initial_matrix . yx		5842507	1					
ANR	5842960	Identifier	initial_matrix		5842507	0					
ANR	5842961	Identifier	yx		5842507	1					
ANR	5842962	MultiplicativeExpression	initial_matrix . xx * initial_matrix . yy		5842507	1		*			
ANR	5842963	MemberAccess	initial_matrix . xx		5842507	0					
ANR	5842964	Identifier	initial_matrix		5842507	0					
ANR	5842965	Identifier	xx		5842507	1					
ANR	5842966	MemberAccess	initial_matrix . yy		5842507	1					
ANR	5842967	Identifier	initial_matrix		5842507	0					
ANR	5842968	Identifier	yy		5842507	1					
ANR	5842969	IfStatement	if ( gs_debug_c ( 'o' ) )		5842507	155					
ANR	5842970	Condition	gs_debug_c ( 'o' )	500:8:19559:19573	5842507	0	True				
ANR	5842971	CallExpression	gs_debug_c ( 'o' )		5842507	0					
ANR	5842972	Callee	gs_debug_c		5842507	0					
ANR	5842973	Identifier	gs_debug_c		5842507	0					
ANR	5842974	ArgumentList	'o'		5842507	1					
ANR	5842975	Argument	'o'		5842507	0					
ANR	5842976	PrimaryExpression	'o'		5842507	0					
ANR	5842977	CompoundStatement		79:8:3091:3096	5842507	1					
ANR	5842978	IdentifierDeclStatement	int i ;	501:8:19586:19591	5842507	0	True				
ANR	5842979	IdentifierDecl	i		5842507	0					
ANR	5842980	IdentifierDeclType	int		5842507	0					
ANR	5842981	Identifier	i		5842507	1					
ANR	5842982	ExpressionStatement	"dmlprintf4 ( ppath -> memory , ""[o]half_width=%f, start_cap=%d, end_cap=%d, dash_cap=%d,\\n"" , pgs_lp -> half_width , ( int ) pgs_lp -> start_cap , ( int ) pgs_lp -> end_cap , ( int ) pgs_lp -> dash_cap )"	503:8:19602:19816	5842507	1	True				
ANR	5842983	CallExpression	"dmlprintf4 ( ppath -> memory , ""[o]half_width=%f, start_cap=%d, end_cap=%d, dash_cap=%d,\\n"" , pgs_lp -> half_width , ( int ) pgs_lp -> start_cap , ( int ) pgs_lp -> end_cap , ( int ) pgs_lp -> dash_cap )"		5842507	0					
ANR	5842984	Callee	dmlprintf4		5842507	0					
ANR	5842985	Identifier	dmlprintf4		5842507	0					
ANR	5842986	ArgumentList	ppath -> memory		5842507	1					
ANR	5842987	Argument	ppath -> memory		5842507	0					
ANR	5842988	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5842989	Identifier	ppath		5842507	0					
ANR	5842990	Identifier	memory		5842507	1					
ANR	5842991	Argument	"""[o]half_width=%f, start_cap=%d, end_cap=%d, dash_cap=%d,\\n"""		5842507	1					
ANR	5842992	PrimaryExpression	"""[o]half_width=%f, start_cap=%d, end_cap=%d, dash_cap=%d,\\n"""		5842507	0					
ANR	5842993	Argument	pgs_lp -> half_width		5842507	2					
ANR	5842994	PtrMemberAccess	pgs_lp -> half_width		5842507	0					
ANR	5842995	Identifier	pgs_lp		5842507	0					
ANR	5842996	Identifier	half_width		5842507	1					
ANR	5842997	Argument	( int ) pgs_lp -> start_cap		5842507	3					
ANR	5842998	CastExpression	( int ) pgs_lp -> start_cap		5842507	0					
ANR	5842999	CastTarget	int		5842507	0					
ANR	5843000	PtrMemberAccess	pgs_lp -> start_cap		5842507	1					
ANR	5843001	Identifier	pgs_lp		5842507	0					
ANR	5843002	Identifier	start_cap		5842507	1					
ANR	5843003	Argument	( int ) pgs_lp -> end_cap		5842507	4					
ANR	5843004	CastExpression	( int ) pgs_lp -> end_cap		5842507	0					
ANR	5843005	CastTarget	int		5842507	0					
ANR	5843006	PtrMemberAccess	pgs_lp -> end_cap		5842507	1					
ANR	5843007	Identifier	pgs_lp		5842507	0					
ANR	5843008	Identifier	end_cap		5842507	1					
ANR	5843009	Argument	( int ) pgs_lp -> dash_cap		5842507	5					
ANR	5843010	CastExpression	( int ) pgs_lp -> dash_cap		5842507	0					
ANR	5843011	CastTarget	int		5842507	0					
ANR	5843012	PtrMemberAccess	pgs_lp -> dash_cap		5842507	1					
ANR	5843013	Identifier	pgs_lp		5842507	0					
ANR	5843014	Identifier	dash_cap		5842507	1					
ANR	5843015	ExpressionStatement	"dmlprintf3 ( ppath -> memory , ""   join=%d, miter_limit=%f, miter_check=%f,\\n"" , ( int ) pgs_lp -> join , pgs_lp -> miter_limit , pgs_lp -> miter_check )"	506:8:19826:19999	5842507	2	True				
ANR	5843016	CallExpression	"dmlprintf3 ( ppath -> memory , ""   join=%d, miter_limit=%f, miter_check=%f,\\n"" , ( int ) pgs_lp -> join , pgs_lp -> miter_limit , pgs_lp -> miter_check )"		5842507	0					
ANR	5843017	Callee	dmlprintf3		5842507	0					
ANR	5843018	Identifier	dmlprintf3		5842507	0					
ANR	5843019	ArgumentList	ppath -> memory		5842507	1					
ANR	5843020	Argument	ppath -> memory		5842507	0					
ANR	5843021	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843022	Identifier	ppath		5842507	0					
ANR	5843023	Identifier	memory		5842507	1					
ANR	5843024	Argument	"""   join=%d, miter_limit=%f, miter_check=%f,\\n"""		5842507	1					
ANR	5843025	PrimaryExpression	"""   join=%d, miter_limit=%f, miter_check=%f,\\n"""		5842507	0					
ANR	5843026	Argument	( int ) pgs_lp -> join		5842507	2					
ANR	5843027	CastExpression	( int ) pgs_lp -> join		5842507	0					
ANR	5843028	CastTarget	int		5842507	0					
ANR	5843029	PtrMemberAccess	pgs_lp -> join		5842507	1					
ANR	5843030	Identifier	pgs_lp		5842507	0					
ANR	5843031	Identifier	join		5842507	1					
ANR	5843032	Argument	pgs_lp -> miter_limit		5842507	3					
ANR	5843033	PtrMemberAccess	pgs_lp -> miter_limit		5842507	0					
ANR	5843034	Identifier	pgs_lp		5842507	0					
ANR	5843035	Identifier	miter_limit		5842507	1					
ANR	5843036	Argument	pgs_lp -> miter_check		5842507	4					
ANR	5843037	PtrMemberAccess	pgs_lp -> miter_check		5842507	0					
ANR	5843038	Identifier	pgs_lp		5842507	0					
ANR	5843039	Identifier	miter_check		5842507	1					
ANR	5843040	ExpressionStatement	"dmlprintf1 ( ppath -> memory , ""   dash pattern=%d"" , dash_count )"	509:8:20009:20068	5842507	3	True				
ANR	5843041	CallExpression	"dmlprintf1 ( ppath -> memory , ""   dash pattern=%d"" , dash_count )"		5842507	0					
ANR	5843042	Callee	dmlprintf1		5842507	0					
ANR	5843043	Identifier	dmlprintf1		5842507	0					
ANR	5843044	ArgumentList	ppath -> memory		5842507	1					
ANR	5843045	Argument	ppath -> memory		5842507	0					
ANR	5843046	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843047	Identifier	ppath		5842507	0					
ANR	5843048	Identifier	memory		5842507	1					
ANR	5843049	Argument	"""   dash pattern=%d"""		5842507	1					
ANR	5843050	PrimaryExpression	"""   dash pattern=%d"""		5842507	0					
ANR	5843051	Argument	dash_count		5842507	2					
ANR	5843052	Identifier	dash_count		5842507	0					
ANR	5843053	ForStatement	for ( i = 0 ; i < dash_count ; i ++ )		5842507	4					
ANR	5843054	ForInit	i = 0 ;	510:13:20083:20088	5842507	0	True				
ANR	5843055	AssignmentExpression	i = 0		5842507	0		=			
ANR	5843056	Identifier	i		5842507	0					
ANR	5843057	PrimaryExpression	0		5842507	1					
ANR	5843058	Condition	i < dash_count	510:20:20090:20103	5842507	1	True				
ANR	5843059	RelationalExpression	i < dash_count		5842507	0		<			
ANR	5843060	Identifier	i		5842507	0					
ANR	5843061	Identifier	dash_count		5842507	1					
ANR	5843062	PostIncDecOperationExpression	i ++	510:36:20106:20108	5842507	2	True				
ANR	5843063	Identifier	i		5842507	0					
ANR	5843064	IncDec	++		5842507	1					
ANR	5843065	ExpressionStatement	"dmprintf1 ( ppath -> memory , "",%f"" , pgs_lp -> dash . pattern [ i ] )"	511:12:20123:20179	5842507	3	True				
ANR	5843066	CallExpression	"dmprintf1 ( ppath -> memory , "",%f"" , pgs_lp -> dash . pattern [ i ] )"		5842507	0					
ANR	5843067	Callee	dmprintf1		5842507	0					
ANR	5843068	Identifier	dmprintf1		5842507	0					
ANR	5843069	ArgumentList	ppath -> memory		5842507	1					
ANR	5843070	Argument	ppath -> memory		5842507	0					
ANR	5843071	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843072	Identifier	ppath		5842507	0					
ANR	5843073	Identifier	memory		5842507	1					
ANR	5843074	Argument	""",%f"""		5842507	1					
ANR	5843075	PrimaryExpression	""",%f"""		5842507	0					
ANR	5843076	Argument	pgs_lp -> dash . pattern [ i ]		5842507	2					
ANR	5843077	ArrayIndexing	pgs_lp -> dash . pattern [ i ]		5842507	0					
ANR	5843078	MemberAccess	pgs_lp -> dash . pattern		5842507	0					
ANR	5843079	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5843080	Identifier	pgs_lp		5842507	0					
ANR	5843081	Identifier	dash		5842507	1					
ANR	5843082	Identifier	pattern		5842507	1					
ANR	5843083	Identifier	i		5842507	1					
ANR	5843084	ExpressionStatement	"dmputs ( ppath -> memory , "",\\n"" )"	512:8:20189:20217	5842507	5	True				
ANR	5843085	CallExpression	"dmputs ( ppath -> memory , "",\\n"" )"		5842507	0					
ANR	5843086	Callee	dmputs		5842507	0					
ANR	5843087	Identifier	dmputs		5842507	0					
ANR	5843088	ArgumentList	ppath -> memory		5842507	1					
ANR	5843089	Argument	ppath -> memory		5842507	0					
ANR	5843090	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843091	Identifier	ppath		5842507	0					
ANR	5843092	Identifier	memory		5842507	1					
ANR	5843093	Argument	""",\\n"""		5842507	1					
ANR	5843094	PrimaryExpression	""",\\n"""		5842507	0					
ANR	5843095	ExpressionStatement	"dmlprintf4 ( ppath -> memory , ""\\toffset=%f, init(ink_on=%d, index=%d, dist_left=%f)\\n"" , pgs_lp -> dash . offset , pgs_lp -> dash . init_ink_on , pgs_lp -> dash . init_index , pgs_lp -> dash . init_dist_left )"	513:8:20227:20449	5842507	6	True				
ANR	5843096	CallExpression	"dmlprintf4 ( ppath -> memory , ""\\toffset=%f, init(ink_on=%d, index=%d, dist_left=%f)\\n"" , pgs_lp -> dash . offset , pgs_lp -> dash . init_ink_on , pgs_lp -> dash . init_index , pgs_lp -> dash . init_dist_left )"		5842507	0					
ANR	5843097	Callee	dmlprintf4		5842507	0					
ANR	5843098	Identifier	dmlprintf4		5842507	0					
ANR	5843099	ArgumentList	ppath -> memory		5842507	1					
ANR	5843100	Argument	ppath -> memory		5842507	0					
ANR	5843101	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843102	Identifier	ppath		5842507	0					
ANR	5843103	Identifier	memory		5842507	1					
ANR	5843104	Argument	"""\\toffset=%f, init(ink_on=%d, index=%d, dist_left=%f)\\n"""		5842507	1					
ANR	5843105	PrimaryExpression	"""\\toffset=%f, init(ink_on=%d, index=%d, dist_left=%f)\\n"""		5842507	0					
ANR	5843106	Argument	pgs_lp -> dash . offset		5842507	2					
ANR	5843107	MemberAccess	pgs_lp -> dash . offset		5842507	0					
ANR	5843108	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5843109	Identifier	pgs_lp		5842507	0					
ANR	5843110	Identifier	dash		5842507	1					
ANR	5843111	Identifier	offset		5842507	1					
ANR	5843112	Argument	pgs_lp -> dash . init_ink_on		5842507	3					
ANR	5843113	MemberAccess	pgs_lp -> dash . init_ink_on		5842507	0					
ANR	5843114	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5843115	Identifier	pgs_lp		5842507	0					
ANR	5843116	Identifier	dash		5842507	1					
ANR	5843117	Identifier	init_ink_on		5842507	1					
ANR	5843118	Argument	pgs_lp -> dash . init_index		5842507	4					
ANR	5843119	MemberAccess	pgs_lp -> dash . init_index		5842507	0					
ANR	5843120	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5843121	Identifier	pgs_lp		5842507	0					
ANR	5843122	Identifier	dash		5842507	1					
ANR	5843123	Identifier	init_index		5842507	1					
ANR	5843124	Argument	pgs_lp -> dash . init_dist_left		5842507	5					
ANR	5843125	MemberAccess	pgs_lp -> dash . init_dist_left		5842507	0					
ANR	5843126	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5843127	Identifier	pgs_lp		5842507	0					
ANR	5843128	Identifier	dash		5842507	1					
ANR	5843129	Identifier	init_dist_left		5842507	1					
ANR	5843130	ExpressionStatement	"gx_path_bbox ( ppath , & ibox )"	519:4:20469:20495	5842507	156	True				
ANR	5843131	CallExpression	"gx_path_bbox ( ppath , & ibox )"		5842507	0					
ANR	5843132	Callee	gx_path_bbox		5842507	0					
ANR	5843133	Identifier	gx_path_bbox		5842507	0					
ANR	5843134	ArgumentList	ppath		5842507	1					
ANR	5843135	Argument	ppath		5842507	0					
ANR	5843136	Identifier	ppath		5842507	0					
ANR	5843137	Argument	& ibox		5842507	1					
ANR	5843138	UnaryOperationExpression	& ibox		5842507	0					
ANR	5843139	UnaryOperator	&		5842507	0					
ANR	5843140	Identifier	ibox		5842507	1					
ANR	5843141	CompoundStatement		100:8:4081:4105	5842507	157					
ANR	5843142	IdentifierDeclStatement	gs_fixed_point expansion ;	522:8:20576:20600	5842507	0	True				
ANR	5843143	IdentifierDecl	expansion		5842507	0					
ANR	5843144	IdentifierDeclType	gs_fixed_point		5842507	0					
ANR	5843145	Identifier	expansion		5842507	1					
ANR	5843146	IfStatement	"if ( gx_stroke_path_expansion ( pgs , ppath , & expansion ) < 0 )"		5842507	1					
ANR	5843147	Condition	"gx_stroke_path_expansion ( pgs , ppath , & expansion ) < 0"	524:12:20615:20666	5842507	0	True				
ANR	5843148	RelationalExpression	"gx_stroke_path_expansion ( pgs , ppath , & expansion ) < 0"		5842507	0		<			
ANR	5843149	CallExpression	"gx_stroke_path_expansion ( pgs , ppath , & expansion )"		5842507	0					
ANR	5843150	Callee	gx_stroke_path_expansion		5842507	0					
ANR	5843151	Identifier	gx_stroke_path_expansion		5842507	0					
ANR	5843152	ArgumentList	pgs		5842507	1					
ANR	5843153	Argument	pgs		5842507	0					
ANR	5843154	Identifier	pgs		5842507	0					
ANR	5843155	Argument	ppath		5842507	1					
ANR	5843156	Identifier	ppath		5842507	0					
ANR	5843157	Argument	& expansion		5842507	2					
ANR	5843158	UnaryOperationExpression	& expansion		5842507	0					
ANR	5843159	UnaryOperator	&		5842507	0					
ANR	5843160	Identifier	expansion		5842507	1					
ANR	5843161	PrimaryExpression	0		5842507	1					
ANR	5843162	CompoundStatement		102:66:4174:4174	5842507	1					
ANR	5843163	ExpressionStatement	ibox . p . x = ibox . p . y = min_fixed	526:12:20751:20782	5842507	0	True				
ANR	5843164	AssignmentExpression	ibox . p . x = ibox . p . y = min_fixed		5842507	0		=			
ANR	5843165	MemberAccess	ibox . p . x		5842507	0					
ANR	5843166	MemberAccess	ibox . p		5842507	0					
ANR	5843167	Identifier	ibox		5842507	0					
ANR	5843168	Identifier	p		5842507	1					
ANR	5843169	Identifier	x		5842507	1					
ANR	5843170	AssignmentExpression	ibox . p . y = min_fixed		5842507	1		=			
ANR	5843171	MemberAccess	ibox . p . y		5842507	0					
ANR	5843172	MemberAccess	ibox . p		5842507	0					
ANR	5843173	Identifier	ibox		5842507	0					
ANR	5843174	Identifier	p		5842507	1					
ANR	5843175	Identifier	y		5842507	1					
ANR	5843176	Identifier	min_fixed		5842507	1					
ANR	5843177	ExpressionStatement	ibox . q . x = ibox . q . y = max_fixed	527:12:20796:20827	5842507	1	True				
ANR	5843178	AssignmentExpression	ibox . q . x = ibox . q . y = max_fixed		5842507	0		=			
ANR	5843179	MemberAccess	ibox . q . x		5842507	0					
ANR	5843180	MemberAccess	ibox . q		5842507	0					
ANR	5843181	Identifier	ibox		5842507	0					
ANR	5843182	Identifier	q		5842507	1					
ANR	5843183	Identifier	x		5842507	1					
ANR	5843184	AssignmentExpression	ibox . q . y = max_fixed		5842507	1		=			
ANR	5843185	MemberAccess	ibox . q . y		5842507	0					
ANR	5843186	MemberAccess	ibox . q		5842507	0					
ANR	5843187	Identifier	ibox		5842507	0					
ANR	5843188	Identifier	q		5842507	1					
ANR	5843189	Identifier	y		5842507	1					
ANR	5843190	Identifier	max_fixed		5842507	1					
ANR	5843191	ElseStatement	else		5842507	0					
ANR	5843192	CompoundStatement		106:15:4349:4349	5842507	0					
ANR	5843193	ExpressionStatement	expansion . x += pgs -> fill_adjust . x	529:12:20858:20891	5842507	0	True				
ANR	5843194	AssignmentExpression	expansion . x += pgs -> fill_adjust . x		5842507	0		+=			
ANR	5843195	MemberAccess	expansion . x		5842507	0					
ANR	5843196	Identifier	expansion		5842507	0					
ANR	5843197	Identifier	x		5842507	1					
ANR	5843198	MemberAccess	pgs -> fill_adjust . x		5842507	1					
ANR	5843199	PtrMemberAccess	pgs -> fill_adjust		5842507	0					
ANR	5843200	Identifier	pgs		5842507	0					
ANR	5843201	Identifier	fill_adjust		5842507	1					
ANR	5843202	Identifier	x		5842507	1					
ANR	5843203	ExpressionStatement	expansion . y += pgs -> fill_adjust . y	530:12:20905:20938	5842507	1	True				
ANR	5843204	AssignmentExpression	expansion . y += pgs -> fill_adjust . y		5842507	0		+=			
ANR	5843205	MemberAccess	expansion . y		5842507	0					
ANR	5843206	Identifier	expansion		5842507	0					
ANR	5843207	Identifier	y		5842507	1					
ANR	5843208	MemberAccess	pgs -> fill_adjust . y		5842507	1					
ANR	5843209	PtrMemberAccess	pgs -> fill_adjust		5842507	0					
ANR	5843210	Identifier	pgs		5842507	0					
ANR	5843211	Identifier	fill_adjust		5842507	1					
ANR	5843212	Identifier	y		5842507	1					
ANR	5843213	ExpressionStatement	ibox . p . x = ( ibox . p . x < min_fixed + expansion . x ? min_fixed : ibox . p . x - expansion . x )	535:12:21115:21223	5842507	2	True				
ANR	5843214	AssignmentExpression	ibox . p . x = ( ibox . p . x < min_fixed + expansion . x ? min_fixed : ibox . p . x - expansion . x )		5842507	0		=			
ANR	5843215	MemberAccess	ibox . p . x		5842507	0					
ANR	5843216	MemberAccess	ibox . p		5842507	0					
ANR	5843217	Identifier	ibox		5842507	0					
ANR	5843218	Identifier	p		5842507	1					
ANR	5843219	Identifier	x		5842507	1					
ANR	5843220	ConditionalExpression	ibox . p . x < min_fixed + expansion . x ? min_fixed : ibox . p . x - expansion . x		5842507	1					
ANR	5843221	Condition	ibox . p . x < min_fixed + expansion . x		5842507	0					
ANR	5843222	RelationalExpression	ibox . p . x < min_fixed + expansion . x		5842507	0		<			
ANR	5843223	MemberAccess	ibox . p . x		5842507	0					
ANR	5843224	MemberAccess	ibox . p		5842507	0					
ANR	5843225	Identifier	ibox		5842507	0					
ANR	5843226	Identifier	p		5842507	1					
ANR	5843227	Identifier	x		5842507	1					
ANR	5843228	AdditiveExpression	min_fixed + expansion . x		5842507	1		+			
ANR	5843229	Identifier	min_fixed		5842507	0					
ANR	5843230	MemberAccess	expansion . x		5842507	1					
ANR	5843231	Identifier	expansion		5842507	0					
ANR	5843232	Identifier	x		5842507	1					
ANR	5843233	Identifier	min_fixed		5842507	1					
ANR	5843234	AdditiveExpression	ibox . p . x - expansion . x		5842507	2		-			
ANR	5843235	MemberAccess	ibox . p . x		5842507	0					
ANR	5843236	MemberAccess	ibox . p		5842507	0					
ANR	5843237	Identifier	ibox		5842507	0					
ANR	5843238	Identifier	p		5842507	1					
ANR	5843239	Identifier	x		5842507	1					
ANR	5843240	MemberAccess	expansion . x		5842507	1					
ANR	5843241	Identifier	expansion		5842507	0					
ANR	5843242	Identifier	x		5842507	1					
ANR	5843243	ExpressionStatement	ibox . p . y = ( ibox . p . y < min_fixed + expansion . y ? min_fixed : ibox . p . y - expansion . y )	537:12:21237:21345	5842507	3	True				
ANR	5843244	AssignmentExpression	ibox . p . y = ( ibox . p . y < min_fixed + expansion . y ? min_fixed : ibox . p . y - expansion . y )		5842507	0		=			
ANR	5843245	MemberAccess	ibox . p . y		5842507	0					
ANR	5843246	MemberAccess	ibox . p		5842507	0					
ANR	5843247	Identifier	ibox		5842507	0					
ANR	5843248	Identifier	p		5842507	1					
ANR	5843249	Identifier	y		5842507	1					
ANR	5843250	ConditionalExpression	ibox . p . y < min_fixed + expansion . y ? min_fixed : ibox . p . y - expansion . y		5842507	1					
ANR	5843251	Condition	ibox . p . y < min_fixed + expansion . y		5842507	0					
ANR	5843252	RelationalExpression	ibox . p . y < min_fixed + expansion . y		5842507	0		<			
ANR	5843253	MemberAccess	ibox . p . y		5842507	0					
ANR	5843254	MemberAccess	ibox . p		5842507	0					
ANR	5843255	Identifier	ibox		5842507	0					
ANR	5843256	Identifier	p		5842507	1					
ANR	5843257	Identifier	y		5842507	1					
ANR	5843258	AdditiveExpression	min_fixed + expansion . y		5842507	1		+			
ANR	5843259	Identifier	min_fixed		5842507	0					
ANR	5843260	MemberAccess	expansion . y		5842507	1					
ANR	5843261	Identifier	expansion		5842507	0					
ANR	5843262	Identifier	y		5842507	1					
ANR	5843263	Identifier	min_fixed		5842507	1					
ANR	5843264	AdditiveExpression	ibox . p . y - expansion . y		5842507	2		-			
ANR	5843265	MemberAccess	ibox . p . y		5842507	0					
ANR	5843266	MemberAccess	ibox . p		5842507	0					
ANR	5843267	Identifier	ibox		5842507	0					
ANR	5843268	Identifier	p		5842507	1					
ANR	5843269	Identifier	y		5842507	1					
ANR	5843270	MemberAccess	expansion . y		5842507	1					
ANR	5843271	Identifier	expansion		5842507	0					
ANR	5843272	Identifier	y		5842507	1					
ANR	5843273	ExpressionStatement	ibox . q . x = ( ibox . q . x > max_fixed - expansion . x ? max_fixed : ibox . q . x + expansion . x )	539:12:21359:21467	5842507	4	True				
ANR	5843274	AssignmentExpression	ibox . q . x = ( ibox . q . x > max_fixed - expansion . x ? max_fixed : ibox . q . x + expansion . x )		5842507	0		=			
ANR	5843275	MemberAccess	ibox . q . x		5842507	0					
ANR	5843276	MemberAccess	ibox . q		5842507	0					
ANR	5843277	Identifier	ibox		5842507	0					
ANR	5843278	Identifier	q		5842507	1					
ANR	5843279	Identifier	x		5842507	1					
ANR	5843280	ConditionalExpression	ibox . q . x > max_fixed - expansion . x ? max_fixed : ibox . q . x + expansion . x		5842507	1					
ANR	5843281	Condition	ibox . q . x > max_fixed - expansion . x		5842507	0					
ANR	5843282	RelationalExpression	ibox . q . x > max_fixed - expansion . x		5842507	0		>			
ANR	5843283	MemberAccess	ibox . q . x		5842507	0					
ANR	5843284	MemberAccess	ibox . q		5842507	0					
ANR	5843285	Identifier	ibox		5842507	0					
ANR	5843286	Identifier	q		5842507	1					
ANR	5843287	Identifier	x		5842507	1					
ANR	5843288	AdditiveExpression	max_fixed - expansion . x		5842507	1		-			
ANR	5843289	Identifier	max_fixed		5842507	0					
ANR	5843290	MemberAccess	expansion . x		5842507	1					
ANR	5843291	Identifier	expansion		5842507	0					
ANR	5843292	Identifier	x		5842507	1					
ANR	5843293	Identifier	max_fixed		5842507	1					
ANR	5843294	AdditiveExpression	ibox . q . x + expansion . x		5842507	2		+			
ANR	5843295	MemberAccess	ibox . q . x		5842507	0					
ANR	5843296	MemberAccess	ibox . q		5842507	0					
ANR	5843297	Identifier	ibox		5842507	0					
ANR	5843298	Identifier	q		5842507	1					
ANR	5843299	Identifier	x		5842507	1					
ANR	5843300	MemberAccess	expansion . x		5842507	1					
ANR	5843301	Identifier	expansion		5842507	0					
ANR	5843302	Identifier	x		5842507	1					
ANR	5843303	ExpressionStatement	ibox . q . y = ( ibox . q . y > max_fixed - expansion . y ? max_fixed : ibox . q . y + expansion . y )	541:12:21481:21589	5842507	5	True				
ANR	5843304	AssignmentExpression	ibox . q . y = ( ibox . q . y > max_fixed - expansion . y ? max_fixed : ibox . q . y + expansion . y )		5842507	0		=			
ANR	5843305	MemberAccess	ibox . q . y		5842507	0					
ANR	5843306	MemberAccess	ibox . q		5842507	0					
ANR	5843307	Identifier	ibox		5842507	0					
ANR	5843308	Identifier	q		5842507	1					
ANR	5843309	Identifier	y		5842507	1					
ANR	5843310	ConditionalExpression	ibox . q . y > max_fixed - expansion . y ? max_fixed : ibox . q . y + expansion . y		5842507	1					
ANR	5843311	Condition	ibox . q . y > max_fixed - expansion . y		5842507	0					
ANR	5843312	RelationalExpression	ibox . q . y > max_fixed - expansion . y		5842507	0		>			
ANR	5843313	MemberAccess	ibox . q . y		5842507	0					
ANR	5843314	MemberAccess	ibox . q		5842507	0					
ANR	5843315	Identifier	ibox		5842507	0					
ANR	5843316	Identifier	q		5842507	1					
ANR	5843317	Identifier	y		5842507	1					
ANR	5843318	AdditiveExpression	max_fixed - expansion . y		5842507	1		-			
ANR	5843319	Identifier	max_fixed		5842507	0					
ANR	5843320	MemberAccess	expansion . y		5842507	1					
ANR	5843321	Identifier	expansion		5842507	0					
ANR	5843322	Identifier	y		5842507	1					
ANR	5843323	Identifier	max_fixed		5842507	1					
ANR	5843324	AdditiveExpression	ibox . q . y + expansion . y		5842507	2		+			
ANR	5843325	MemberAccess	ibox . q . y		5842507	0					
ANR	5843326	MemberAccess	ibox . q		5842507	0					
ANR	5843327	Identifier	ibox		5842507	0					
ANR	5843328	Identifier	q		5842507	1					
ANR	5843329	Identifier	y		5842507	1					
ANR	5843330	MemberAccess	expansion . y		5842507	1					
ANR	5843331	Identifier	expansion		5842507	0					
ANR	5843332	Identifier	y		5842507	1					
ANR	5843333	IfStatement	if ( pcpath )		5842507	158					
ANR	5843334	Condition	pcpath	546:8:21687:21692	5842507	0	True				
ANR	5843335	Identifier	pcpath		5842507	0					
ANR	5843336	ExpressionStatement	"gx_cpath_inner_box ( pcpath , & cbox )"	547:8:21703:21736	5842507	1	True				
ANR	5843337	CallExpression	"gx_cpath_inner_box ( pcpath , & cbox )"		5842507	0					
ANR	5843338	Callee	gx_cpath_inner_box		5842507	0					
ANR	5843339	Identifier	gx_cpath_inner_box		5842507	0					
ANR	5843340	ArgumentList	pcpath		5842507	1					
ANR	5843341	Argument	pcpath		5842507	0					
ANR	5843342	Identifier	pcpath		5842507	0					
ANR	5843343	Argument	& cbox		5842507	1					
ANR	5843344	UnaryOperationExpression	& cbox		5842507	0					
ANR	5843345	UnaryOperator	&		5842507	0					
ANR	5843346	Identifier	cbox		5842507	1					
ANR	5843347	ElseStatement	else		5842507	0					
ANR	5843348	IfStatement	if ( pdevc )		5842507	0					
ANR	5843349	Condition	pdevc	548:13:21751:21755	5842507	0	True				
ANR	5843350	Identifier	pdevc		5842507	0					
ANR	5843351	ExpressionStatement	"( * dev_proc ( pdev , get_clipping_box ) ) ( pdev , & cbox )"	549:8:21766:21815	5842507	1	True				
ANR	5843352	CallExpression	"( * dev_proc ( pdev , get_clipping_box ) ) ( pdev , & cbox )"		5842507	0					
ANR	5843353	Callee	"* dev_proc ( pdev , get_clipping_box )"		5842507	0					
ANR	5843354	UnaryOperationExpression	"* dev_proc ( pdev , get_clipping_box )"		5842507	0					
ANR	5843355	UnaryOperator	*		5842507	0					
ANR	5843356	CallExpression	"dev_proc ( pdev , get_clipping_box )"		5842507	1					
ANR	5843357	Callee	dev_proc		5842507	0					
ANR	5843358	Identifier	dev_proc		5842507	0					
ANR	5843359	ArgumentList	pdev		5842507	1					
ANR	5843360	Argument	pdev		5842507	0					
ANR	5843361	Identifier	pdev		5842507	0					
ANR	5843362	Argument	get_clipping_box		5842507	1					
ANR	5843363	Identifier	get_clipping_box		5842507	0					
ANR	5843364	ArgumentList	pdev		5842507	1					
ANR	5843365	Argument	pdev		5842507	0					
ANR	5843366	Identifier	pdev		5842507	0					
ANR	5843367	Argument	& cbox		5842507	1					
ANR	5843368	UnaryOperationExpression	& cbox		5842507	0					
ANR	5843369	UnaryOperator	&		5842507	0					
ANR	5843370	Identifier	cbox		5842507	1					
ANR	5843371	ElseStatement	else		5842507	0					
ANR	5843372	CompoundStatement		128:9:5331:5331	5842507	0					
ANR	5843373	ExpressionStatement	cbox = ibox	552:8:21895:21906	5842507	0	True				
ANR	5843374	AssignmentExpression	cbox = ibox		5842507	0		=			
ANR	5843375	Identifier	cbox		5842507	0					
ANR	5843376	Identifier	ibox		5842507	1					
ANR	5843377	IfStatement	"if ( ! rect_within ( ibox , cbox ) )"		5842507	159					
ANR	5843378	Condition	"! rect_within ( ibox , cbox )"	554:8:21922:21945	5842507	0	True				
ANR	5843379	UnaryOperationExpression	"! rect_within ( ibox , cbox )"		5842507	0					
ANR	5843380	UnaryOperator	!		5842507	0					
ANR	5843381	CallExpression	"rect_within ( ibox , cbox )"		5842507	1					
ANR	5843382	Callee	rect_within		5842507	0					
ANR	5843383	Identifier	rect_within		5842507	0					
ANR	5843384	ArgumentList	ibox		5842507	1					
ANR	5843385	Argument	ibox		5842507	0					
ANR	5843386	Identifier	ibox		5842507	0					
ANR	5843387	Argument	cbox		5842507	1					
ANR	5843388	Identifier	cbox		5842507	0					
ANR	5843389	CompoundStatement		135:8:5593:5611	5842507	1					
ANR	5843390	IdentifierDeclStatement	gs_fixed_rect bbox ;	557:8:22088:22106	5842507	0	True				
ANR	5843391	IdentifierDecl	bbox		5842507	0					
ANR	5843392	IdentifierDeclType	gs_fixed_rect		5842507	0					
ANR	5843393	Identifier	bbox		5842507	1					
ANR	5843394	IfStatement	if ( pcpath )		5842507	1					
ANR	5843395	Condition	pcpath	559:12:22121:22126	5842507	0	True				
ANR	5843396	Identifier	pcpath		5842507	0					
ANR	5843397	CompoundStatement		137:20:5634:5634	5842507	1					
ANR	5843398	ExpressionStatement	"gx_cpath_outer_box ( pcpath , & bbox )"	560:12:22143:22176	5842507	0	True				
ANR	5843399	CallExpression	"gx_cpath_outer_box ( pcpath , & bbox )"		5842507	0					
ANR	5843400	Callee	gx_cpath_outer_box		5842507	0					
ANR	5843401	Identifier	gx_cpath_outer_box		5842507	0					
ANR	5843402	ArgumentList	pcpath		5842507	1					
ANR	5843403	Argument	pcpath		5842507	0					
ANR	5843404	Identifier	pcpath		5842507	0					
ANR	5843405	Argument	& bbox		5842507	1					
ANR	5843406	UnaryOperationExpression	& bbox		5842507	0					
ANR	5843407	UnaryOperator	&		5842507	0					
ANR	5843408	Identifier	bbox		5842507	1					
ANR	5843409	ExpressionStatement	"if_debug4m ( 'f' , ppath -> memory , ""   outer_box=(%g,%g),(%g,%g)\\n"" , fixed2float ( bbox . p . x ) , fixed2float ( bbox . p . y ) , fixed2float ( bbox . q . x ) , fixed2float ( bbox . q . y ) )"	561:12:22190:22392	5842507	1	True				
ANR	5843410	CallExpression	"if_debug4m ( 'f' , ppath -> memory , ""   outer_box=(%g,%g),(%g,%g)\\n"" , fixed2float ( bbox . p . x ) , fixed2float ( bbox . p . y ) , fixed2float ( bbox . q . x ) , fixed2float ( bbox . q . y ) )"		5842507	0					
ANR	5843411	Callee	if_debug4m		5842507	0					
ANR	5843412	Identifier	if_debug4m		5842507	0					
ANR	5843413	ArgumentList	'f'		5842507	1					
ANR	5843414	Argument	'f'		5842507	0					
ANR	5843415	PrimaryExpression	'f'		5842507	0					
ANR	5843416	Argument	ppath -> memory		5842507	1					
ANR	5843417	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843418	Identifier	ppath		5842507	0					
ANR	5843419	Identifier	memory		5842507	1					
ANR	5843420	Argument	"""   outer_box=(%g,%g),(%g,%g)\\n"""		5842507	2					
ANR	5843421	PrimaryExpression	"""   outer_box=(%g,%g),(%g,%g)\\n"""		5842507	0					
ANR	5843422	Argument	fixed2float ( bbox . p . x )		5842507	3					
ANR	5843423	CallExpression	fixed2float ( bbox . p . x )		5842507	0					
ANR	5843424	Callee	fixed2float		5842507	0					
ANR	5843425	Identifier	fixed2float		5842507	0					
ANR	5843426	ArgumentList	bbox . p . x		5842507	1					
ANR	5843427	Argument	bbox . p . x		5842507	0					
ANR	5843428	MemberAccess	bbox . p . x		5842507	0					
ANR	5843429	MemberAccess	bbox . p		5842507	0					
ANR	5843430	Identifier	bbox		5842507	0					
ANR	5843431	Identifier	p		5842507	1					
ANR	5843432	Identifier	x		5842507	1					
ANR	5843433	Argument	fixed2float ( bbox . p . y )		5842507	4					
ANR	5843434	CallExpression	fixed2float ( bbox . p . y )		5842507	0					
ANR	5843435	Callee	fixed2float		5842507	0					
ANR	5843436	Identifier	fixed2float		5842507	0					
ANR	5843437	ArgumentList	bbox . p . y		5842507	1					
ANR	5843438	Argument	bbox . p . y		5842507	0					
ANR	5843439	MemberAccess	bbox . p . y		5842507	0					
ANR	5843440	MemberAccess	bbox . p		5842507	0					
ANR	5843441	Identifier	bbox		5842507	0					
ANR	5843442	Identifier	p		5842507	1					
ANR	5843443	Identifier	y		5842507	1					
ANR	5843444	Argument	fixed2float ( bbox . q . x )		5842507	5					
ANR	5843445	CallExpression	fixed2float ( bbox . q . x )		5842507	0					
ANR	5843446	Callee	fixed2float		5842507	0					
ANR	5843447	Identifier	fixed2float		5842507	0					
ANR	5843448	ArgumentList	bbox . q . x		5842507	1					
ANR	5843449	Argument	bbox . q . x		5842507	0					
ANR	5843450	MemberAccess	bbox . q . x		5842507	0					
ANR	5843451	MemberAccess	bbox . q		5842507	0					
ANR	5843452	Identifier	bbox		5842507	0					
ANR	5843453	Identifier	q		5842507	1					
ANR	5843454	Identifier	x		5842507	1					
ANR	5843455	Argument	fixed2float ( bbox . q . y )		5842507	6					
ANR	5843456	CallExpression	fixed2float ( bbox . q . y )		5842507	0					
ANR	5843457	Callee	fixed2float		5842507	0					
ANR	5843458	Identifier	fixed2float		5842507	0					
ANR	5843459	ArgumentList	bbox . q . y		5842507	1					
ANR	5843460	Argument	bbox . q . y		5842507	0					
ANR	5843461	MemberAccess	bbox . q . y		5842507	0					
ANR	5843462	MemberAccess	bbox . q		5842507	0					
ANR	5843463	Identifier	bbox		5842507	0					
ANR	5843464	Identifier	q		5842507	1					
ANR	5843465	Identifier	y		5842507	1					
ANR	5843466	ExpressionStatement	"rect_intersect ( ibox , bbox )"	564:12:22406:22432	5842507	2	True				
ANR	5843467	CallExpression	"rect_intersect ( ibox , bbox )"		5842507	0					
ANR	5843468	Callee	rect_intersect		5842507	0					
ANR	5843469	Identifier	rect_intersect		5842507	0					
ANR	5843470	ArgumentList	ibox		5842507	1					
ANR	5843471	Argument	ibox		5842507	0					
ANR	5843472	Identifier	ibox		5842507	0					
ANR	5843473	Argument	bbox		5842507	1					
ANR	5843474	Identifier	bbox		5842507	0					
ANR	5843475	ElseStatement	else		5842507	0					
ANR	5843476	ExpressionStatement	"rect_intersect ( ibox , cbox )"	566:12:22461:22487	5842507	0	True				
ANR	5843477	CallExpression	"rect_intersect ( ibox , cbox )"		5842507	0					
ANR	5843478	Callee	rect_intersect		5842507	0					
ANR	5843479	Identifier	rect_intersect		5842507	0					
ANR	5843480	ArgumentList	ibox		5842507	1					
ANR	5843481	Argument	ibox		5842507	0					
ANR	5843482	Identifier	ibox		5842507	0					
ANR	5843483	Argument	cbox		5842507	1					
ANR	5843484	Identifier	cbox		5842507	0					
ANR	5843485	IfStatement	if ( ibox . p . x >= ibox . q . x || ibox . p . y >= ibox . q . y )		5842507	2					
ANR	5843486	Condition	ibox . p . x >= ibox . q . x || ibox . p . y >= ibox . q . y	567:12:22501:22544	5842507	0	True				
ANR	5843487	OrExpression	ibox . p . x >= ibox . q . x || ibox . p . y >= ibox . q . y		5842507	0		||			
ANR	5843488	RelationalExpression	ibox . p . x >= ibox . q . x		5842507	0		>=			
ANR	5843489	MemberAccess	ibox . p . x		5842507	0					
ANR	5843490	MemberAccess	ibox . p		5842507	0					
ANR	5843491	Identifier	ibox		5842507	0					
ANR	5843492	Identifier	p		5842507	1					
ANR	5843493	Identifier	x		5842507	1					
ANR	5843494	MemberAccess	ibox . q . x		5842507	1					
ANR	5843495	MemberAccess	ibox . q		5842507	0					
ANR	5843496	Identifier	ibox		5842507	0					
ANR	5843497	Identifier	q		5842507	1					
ANR	5843498	Identifier	x		5842507	1					
ANR	5843499	RelationalExpression	ibox . p . y >= ibox . q . y		5842507	1		>=			
ANR	5843500	MemberAccess	ibox . p . y		5842507	0					
ANR	5843501	MemberAccess	ibox . p		5842507	0					
ANR	5843502	Identifier	ibox		5842507	0					
ANR	5843503	Identifier	p		5842507	1					
ANR	5843504	Identifier	y		5842507	1					
ANR	5843505	MemberAccess	ibox . q . y		5842507	1					
ANR	5843506	MemberAccess	ibox . q		5842507	0					
ANR	5843507	Identifier	ibox		5842507	0					
ANR	5843508	Identifier	q		5842507	1					
ANR	5843509	Identifier	y		5842507	1					
ANR	5843510	CompoundStatement		145:58:6052:6052	5842507	1					
ANR	5843511	ReturnStatement	return 0 ;	569:12:22611:22619	5842507	0	True				
ANR	5843512	PrimaryExpression	0		5842507	0					
ANR	5843513	IfStatement	if ( pcpath && line_proc == stroke_fill )		5842507	3					
ANR	5843514	Condition	pcpath && line_proc == stroke_fill	590:12:23590:23623	5842507	0	True				
ANR	5843515	AndExpression	pcpath && line_proc == stroke_fill		5842507	0		&&			
ANR	5843516	Identifier	pcpath		5842507	0					
ANR	5843517	EqualityExpression	line_proc == stroke_fill		5842507	1		==			
ANR	5843518	Identifier	line_proc		5842507	0					
ANR	5843519	Identifier	stroke_fill		5842507	1					
ANR	5843520	CompoundStatement		168:48:7131:7131	5842507	1					
ANR	5843521	ExpressionStatement	"gx_make_clip_device_on_stack ( & cdev , pcpath , pdev )"	591:12:23640:23689	5842507	0	True				
ANR	5843522	CallExpression	"gx_make_clip_device_on_stack ( & cdev , pcpath , pdev )"		5842507	0					
ANR	5843523	Callee	gx_make_clip_device_on_stack		5842507	0					
ANR	5843524	Identifier	gx_make_clip_device_on_stack		5842507	0					
ANR	5843525	ArgumentList	& cdev		5842507	1					
ANR	5843526	Argument	& cdev		5842507	0					
ANR	5843527	UnaryOperationExpression	& cdev		5842507	0					
ANR	5843528	UnaryOperator	&		5842507	0					
ANR	5843529	Identifier	cdev		5842507	1					
ANR	5843530	Argument	pcpath		5842507	1					
ANR	5843531	Identifier	pcpath		5842507	0					
ANR	5843532	Argument	pdev		5842507	2					
ANR	5843533	Identifier	pdev		5842507	0					
ANR	5843534	ExpressionStatement	cdev . max_fill_band = pdev -> max_fill_band	592:12:23703:23743	5842507	1	True				
ANR	5843535	AssignmentExpression	cdev . max_fill_band = pdev -> max_fill_band		5842507	0		=			
ANR	5843536	MemberAccess	cdev . max_fill_band		5842507	0					
ANR	5843537	Identifier	cdev		5842507	0					
ANR	5843538	Identifier	max_fill_band		5842507	1					
ANR	5843539	PtrMemberAccess	pdev -> max_fill_band		5842507	1					
ANR	5843540	Identifier	pdev		5842507	0					
ANR	5843541	Identifier	max_fill_band		5842507	1					
ANR	5843542	ExpressionStatement	dev = ( gx_device * ) & cdev	593:12:23757:23781	5842507	2	True				
ANR	5843543	AssignmentExpression	dev = ( gx_device * ) & cdev		5842507	0		=			
ANR	5843544	Identifier	dev		5842507	0					
ANR	5843545	CastExpression	( gx_device * ) & cdev		5842507	1					
ANR	5843546	CastTarget	gx_device *		5842507	0					
ANR	5843547	UnaryOperationExpression	& cdev		5842507	1					
ANR	5843548	UnaryOperator	&		5842507	0					
ANR	5843549	Identifier	cdev		5842507	1					
ANR	5843550	ExpressionStatement	fill_params . rule = gx_rule_winding_number	596:4:23803:23844	5842507	160	True				
ANR	5843551	AssignmentExpression	fill_params . rule = gx_rule_winding_number		5842507	0		=			
ANR	5843552	MemberAccess	fill_params . rule		5842507	0					
ANR	5843553	Identifier	fill_params		5842507	0					
ANR	5843554	Identifier	rule		5842507	1					
ANR	5843555	Identifier	gx_rule_winding_number		5842507	1					
ANR	5843556	ExpressionStatement	fill_params . flatness = pgs -> flatness	597:4:23850:23886	5842507	161	True				
ANR	5843557	AssignmentExpression	fill_params . flatness = pgs -> flatness		5842507	0		=			
ANR	5843558	MemberAccess	fill_params . flatness		5842507	0					
ANR	5843559	Identifier	fill_params		5842507	0					
ANR	5843560	Identifier	flatness		5842507	1					
ANR	5843561	PtrMemberAccess	pgs -> flatness		5842507	1					
ANR	5843562	Identifier	pgs		5842507	0					
ANR	5843563	Identifier	flatness		5842507	1					
ANR	5843564	IfStatement	if ( line_width < 0 )		5842507	162					
ANR	5843565	Condition	line_width < 0	598:8:23896:23909	5842507	0	True				
ANR	5843566	RelationalExpression	line_width < 0		5842507	0		<			
ANR	5843567	Identifier	line_width		5842507	0					
ANR	5843568	PrimaryExpression	0		5842507	1					
ANR	5843569	ExpressionStatement	line_width = - line_width	599:8:23920:23944	5842507	1	True				
ANR	5843570	AssignmentExpression	line_width = - line_width		5842507	0		=			
ANR	5843571	Identifier	line_width		5842507	0					
ANR	5843572	UnaryOperationExpression	- line_width		5842507	1					
ANR	5843573	UnaryOperator	-		5842507	0					
ANR	5843574	Identifier	line_width		5842507	1					
ANR	5843575	ExpressionStatement	line_width_and_scale = line_width * ( double ) int2fixed ( 1 )	600:4:23950:24006	5842507	163	True				
ANR	5843576	AssignmentExpression	line_width_and_scale = line_width * ( double ) int2fixed ( 1 )		5842507	0		=			
ANR	5843577	Identifier	line_width_and_scale		5842507	0					
ANR	5843578	MultiplicativeExpression	line_width * ( double ) int2fixed ( 1 )		5842507	1		*			
ANR	5843579	Identifier	line_width		5842507	0					
ANR	5843580	CastExpression	( double ) int2fixed ( 1 )		5842507	1					
ANR	5843581	CastTarget	double		5842507	0					
ANR	5843582	CallExpression	int2fixed ( 1 )		5842507	1					
ANR	5843583	Callee	int2fixed		5842507	0					
ANR	5843584	Identifier	int2fixed		5842507	0					
ANR	5843585	ArgumentList	1		5842507	1					
ANR	5843586	Argument	1		5842507	0					
ANR	5843587	PrimaryExpression	1		5842507	0					
ANR	5843588	IfStatement	if ( is_fzero ( line_width ) )		5842507	164					
ANR	5843589	Condition	is_fzero ( line_width )	601:8:24016:24035	5842507	0	True				
ANR	5843590	CallExpression	is_fzero ( line_width )		5842507	0					
ANR	5843591	Callee	is_fzero		5842507	0					
ANR	5843592	Identifier	is_fzero		5842507	0					
ANR	5843593	ArgumentList	line_width		5842507	1					
ANR	5843594	Argument	line_width		5842507	0					
ANR	5843595	Identifier	line_width		5842507	0					
ANR	5843596	ExpressionStatement	always_thin = true	602:8:24046:24064	5842507	1	True				
ANR	5843597	AssignmentExpression	always_thin = true		5842507	0		=			
ANR	5843598	Identifier	always_thin		5842507	0					
ANR	5843599	Identifier	true		5842507	1					
ANR	5843600	ElseStatement	else		5842507	0					
ANR	5843601	CompoundStatement		182:8:7590:7602	5842507	0					
ANR	5843602	IdentifierDeclStatement	"float xa , ya ;"	604:8:24085:24097	5842507	0	True				
ANR	5843603	IdentifierDecl	xa		5842507	0					
ANR	5843604	IdentifierDeclType	float		5842507	0					
ANR	5843605	Identifier	xa		5842507	1					
ANR	5843606	IdentifierDecl	ya		5842507	1					
ANR	5843607	IdentifierDeclType	float		5842507	0					
ANR	5843608	Identifier	ya		5842507	1					
ANR	5843609	SwitchStatement	switch ( orient )		5842507	1					
ANR	5843610	Condition	orient	606:16:24116:24121	5842507	0	True				
ANR	5843611	Identifier	orient		5842507	0					
ANR	5843612	CompoundStatement		184:24:7629:7629	5842507	1					
ANR	5843613	Label	case orient_portrait :	607:12:24138:24158	5842507	0	True				
ANR	5843614	Identifier	orient_portrait		5842507	0					
ANR	5843615	ExpressionStatement	"xa = xx , ya = yy"	608:16:24176:24192	5842507	1	True				
ANR	5843616	Expression	"xa = xx , ya = yy"		5842507	0					
ANR	5843617	AssignmentExpression	xa = xx		5842507	0		=			
ANR	5843618	Identifier	xa		5842507	0					
ANR	5843619	Identifier	xx		5842507	1					
ANR	5843620	AssignmentExpression	ya = yy		5842507	1		=			
ANR	5843621	Identifier	ya		5842507	0					
ANR	5843622	Identifier	yy		5842507	1					
ANR	5843623	GotoStatement	goto sat ;	609:16:24210:24218	5842507	2	True				
ANR	5843624	Identifier	sat		5842507	0					
ANR	5843625	Label	case orient_landscape :	610:12:24232:24253	5842507	3	True				
ANR	5843626	Identifier	orient_landscape		5842507	0					
ANR	5843627	ExpressionStatement	"xa = xy , ya = yx"	611:16:24271:24287	5842507	4	True				
ANR	5843628	Expression	"xa = xy , ya = yx"		5842507	0					
ANR	5843629	AssignmentExpression	xa = xy		5842507	0		=			
ANR	5843630	Identifier	xa		5842507	0					
ANR	5843631	Identifier	xy		5842507	1					
ANR	5843632	AssignmentExpression	ya = yx		5842507	1		=			
ANR	5843633	Identifier	ya		5842507	0					
ANR	5843634	Identifier	yx		5842507	1					
ANR	5843635	Label	sat :	612:14:24303:24306	5842507	5	True				
ANR	5843636	Identifier	sat		5842507	0					
ANR	5843637	IfStatement	if ( xa < 0 )		5842507	6					
ANR	5843638	Condition	xa < 0	613:20:24328:24333	5842507	0	True				
ANR	5843639	RelationalExpression	xa < 0		5842507	0		<			
ANR	5843640	Identifier	xa		5842507	0					
ANR	5843641	PrimaryExpression	0		5842507	1					
ANR	5843642	ExpressionStatement	xa = - xa	614:20:24356:24364	5842507	1	True				
ANR	5843643	AssignmentExpression	xa = - xa		5842507	0		=			
ANR	5843644	Identifier	xa		5842507	0					
ANR	5843645	UnaryOperationExpression	- xa		5842507	1					
ANR	5843646	UnaryOperator	-		5842507	0					
ANR	5843647	Identifier	xa		5842507	1					
ANR	5843648	IfStatement	if ( ya < 0 )		5842507	7					
ANR	5843649	Condition	ya < 0	615:20:24386:24391	5842507	0	True				
ANR	5843650	RelationalExpression	ya < 0		5842507	0		<			
ANR	5843651	Identifier	ya		5842507	0					
ANR	5843652	PrimaryExpression	0		5842507	1					
ANR	5843653	ExpressionStatement	ya = - ya	616:20:24414:24422	5842507	1	True				
ANR	5843654	AssignmentExpression	ya = - ya		5842507	0		=			
ANR	5843655	Identifier	ya		5842507	0					
ANR	5843656	UnaryOperationExpression	- ya		5842507	1					
ANR	5843657	UnaryOperator	-		5842507	0					
ANR	5843658	Identifier	ya		5842507	1					
ANR	5843659	ExpressionStatement	"always_thin = ( max ( xa , ya ) * line_width < 0.5 )"	617:16:24440:24486	5842507	8	True				
ANR	5843660	AssignmentExpression	"always_thin = ( max ( xa , ya ) * line_width < 0.5 )"		5842507	0		=			
ANR	5843661	Identifier	always_thin		5842507	0					
ANR	5843662	RelationalExpression	"max ( xa , ya ) * line_width < 0.5"		5842507	1		<			
ANR	5843663	MultiplicativeExpression	"max ( xa , ya ) * line_width"		5842507	0		*			
ANR	5843664	CallExpression	"max ( xa , ya )"		5842507	0					
ANR	5843665	Callee	max		5842507	0					
ANR	5843666	Identifier	max		5842507	0					
ANR	5843667	ArgumentList	xa		5842507	1					
ANR	5843668	Argument	xa		5842507	0					
ANR	5843669	Identifier	xa		5842507	0					
ANR	5843670	Argument	ya		5842507	1					
ANR	5843671	Identifier	ya		5842507	0					
ANR	5843672	Identifier	line_width		5842507	1					
ANR	5843673	PrimaryExpression	0.5		5842507	1					
ANR	5843674	IfStatement	if ( ! always_thin && uniform )		5842507	9					
ANR	5843675	Condition	! always_thin && uniform	618:20:24508:24530	5842507	0	True				
ANR	5843676	AndExpression	! always_thin && uniform		5842507	0		&&			
ANR	5843677	UnaryOperationExpression	! always_thin		5842507	0					
ANR	5843678	UnaryOperator	!		5842507	0					
ANR	5843679	Identifier	always_thin		5842507	1					
ANR	5843680	Identifier	uniform		5842507	1					
ANR	5843681	CompoundStatement		196:45:8038:8038	5842507	1					
ANR	5843682	ExpressionStatement	device_line_width_scale = line_width_and_scale * xa	619:20:24599:24650	5842507	0	True				
ANR	5843683	AssignmentExpression	device_line_width_scale = line_width_and_scale * xa		5842507	0		=			
ANR	5843684	Identifier	device_line_width_scale		5842507	0					
ANR	5843685	MultiplicativeExpression	line_width_and_scale * xa		5842507	1		*			
ANR	5843686	Identifier	line_width_and_scale		5842507	0					
ANR	5843687	Identifier	xa		5842507	1					
ANR	5843688	BreakStatement	break ;	621:16:24686:24691	5842507	10	True				
ANR	5843689	Label	default :	622:12:24705:24712	5842507	11	True				
ANR	5843690	Identifier	default		5842507	0					
ANR	5843691	CompoundStatement		213:20:9002:9319	5842507	12					
ANR	5843692	IdentifierDeclStatement	double max_rr = ( xx * xx + xy * xy + yx * yx + yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) ) ) / 2 ;	635:20:25497:25814	5842507	0	True				
ANR	5843693	IdentifierDecl	max_rr = ( xx * xx + xy * xy + yx * yx + yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) ) ) / 2		5842507	0					
ANR	5843694	IdentifierDeclType	double		5842507	0					
ANR	5843695	Identifier	max_rr		5842507	1					
ANR	5843696	AssignmentExpression	max_rr = ( xx * xx + xy * xy + yx * yx + yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) ) ) / 2		5842507	2		=			
ANR	5843697	Identifier	max_rr		5842507	0					
ANR	5843698	MultiplicativeExpression	( xx * xx + xy * xy + yx * yx + yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) ) ) / 2		5842507	1		/			
ANR	5843699	AdditiveExpression	xx * xx + xy * xy + yx * yx + yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) )		5842507	0		+			
ANR	5843700	MultiplicativeExpression	xx * xx		5842507	0		*			
ANR	5843701	Identifier	xx		5842507	0					
ANR	5843702	Identifier	xx		5842507	1					
ANR	5843703	AdditiveExpression	xy * xy + yx * yx + yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) )		5842507	1		+			
ANR	5843704	MultiplicativeExpression	xy * xy		5842507	0		*			
ANR	5843705	Identifier	xy		5842507	0					
ANR	5843706	Identifier	xy		5842507	1					
ANR	5843707	AdditiveExpression	yx * yx + yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) )		5842507	1		+			
ANR	5843708	MultiplicativeExpression	yx * yx		5842507	0		*			
ANR	5843709	Identifier	yx		5842507	0					
ANR	5843710	Identifier	yx		5842507	1					
ANR	5843711	AdditiveExpression	yy * yy + sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) )		5842507	1		+			
ANR	5843712	MultiplicativeExpression	yy * yy		5842507	0		*			
ANR	5843713	Identifier	yy		5842507	0					
ANR	5843714	Identifier	yy		5842507	1					
ANR	5843715	CallExpression	sqrt ( ( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) ) )		5842507	1					
ANR	5843716	Callee	sqrt		5842507	0					
ANR	5843717	Identifier	sqrt		5842507	0					
ANR	5843718	ArgumentList	( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) )		5842507	1					
ANR	5843719	Argument	( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) )		5842507	0					
ANR	5843720	MultiplicativeExpression	( ( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy ) ) * ( ( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy ) )		5842507	0		*			
ANR	5843721	AdditiveExpression	( xy + yx ) * ( xy + yx ) + ( xx - yy ) * ( xx - yy )		5842507	0		+			
ANR	5843722	MultiplicativeExpression	( xy + yx ) * ( xy + yx )		5842507	0		*			
ANR	5843723	AdditiveExpression	xy + yx		5842507	0		+			
ANR	5843724	Identifier	xy		5842507	0					
ANR	5843725	Identifier	yx		5842507	1					
ANR	5843726	AdditiveExpression	xy + yx		5842507	1		+			
ANR	5843727	Identifier	xy		5842507	0					
ANR	5843728	Identifier	yx		5842507	1					
ANR	5843729	MultiplicativeExpression	( xx - yy ) * ( xx - yy )		5842507	1		*			
ANR	5843730	AdditiveExpression	xx - yy		5842507	0		-			
ANR	5843731	Identifier	xx		5842507	0					
ANR	5843732	Identifier	yy		5842507	1					
ANR	5843733	AdditiveExpression	xx - yy		5842507	1		-			
ANR	5843734	Identifier	xx		5842507	0					
ANR	5843735	Identifier	yy		5842507	1					
ANR	5843736	AdditiveExpression	( xy - yx ) * ( xy - yx ) + ( xx + yy ) * ( xx + yy )		5842507	1		+			
ANR	5843737	MultiplicativeExpression	( xy - yx ) * ( xy - yx )		5842507	0		*			
ANR	5843738	AdditiveExpression	xy - yx		5842507	0		-			
ANR	5843739	Identifier	xy		5842507	0					
ANR	5843740	Identifier	yx		5842507	1					
ANR	5843741	AdditiveExpression	xy - yx		5842507	1		-			
ANR	5843742	Identifier	xy		5842507	0					
ANR	5843743	Identifier	yx		5842507	1					
ANR	5843744	MultiplicativeExpression	( xx + yy ) * ( xx + yy )		5842507	1		*			
ANR	5843745	AdditiveExpression	xx + yy		5842507	0		+			
ANR	5843746	Identifier	xx		5842507	0					
ANR	5843747	Identifier	yy		5842507	1					
ANR	5843748	AdditiveExpression	xx + yy		5842507	1		+			
ANR	5843749	Identifier	xx		5842507	0					
ANR	5843750	Identifier	yy		5842507	1					
ANR	5843751	PrimaryExpression	2		5842507	1					
ANR	5843752	ExpressionStatement	always_thin = max_rr * line_width * line_width < 0.25	641:20:25837:25890	5842507	1	True				
ANR	5843753	AssignmentExpression	always_thin = max_rr * line_width * line_width < 0.25		5842507	0		=			
ANR	5843754	Identifier	always_thin		5842507	0					
ANR	5843755	RelationalExpression	max_rr * line_width * line_width < 0.25		5842507	1		<			
ANR	5843756	MultiplicativeExpression	max_rr * line_width * line_width		5842507	0		*			
ANR	5843757	Identifier	max_rr		5842507	0					
ANR	5843758	MultiplicativeExpression	line_width * line_width		5842507	1		*			
ANR	5843759	Identifier	line_width		5842507	0					
ANR	5843760	Identifier	line_width		5842507	1					
ANR	5843761	PrimaryExpression	0.25		5842507	1					
ANR	5843762	ExpressionStatement	"if_debug7m ( 'o' , ppath -> memory , ""[o]ctm=(%g,%g,%g,%g,%g,%g) thin=%d\\n"" , xx , xy , yx , yy , pgs -> ctm . tx , pgs -> ctm . ty , always_thin )"	645:4:25930:26069	5842507	165	True				
ANR	5843763	CallExpression	"if_debug7m ( 'o' , ppath -> memory , ""[o]ctm=(%g,%g,%g,%g,%g,%g) thin=%d\\n"" , xx , xy , yx , yy , pgs -> ctm . tx , pgs -> ctm . ty , always_thin )"		5842507	0					
ANR	5843764	Callee	if_debug7m		5842507	0					
ANR	5843765	Identifier	if_debug7m		5842507	0					
ANR	5843766	ArgumentList	'o'		5842507	1					
ANR	5843767	Argument	'o'		5842507	0					
ANR	5843768	PrimaryExpression	'o'		5842507	0					
ANR	5843769	Argument	ppath -> memory		5842507	1					
ANR	5843770	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843771	Identifier	ppath		5842507	0					
ANR	5843772	Identifier	memory		5842507	1					
ANR	5843773	Argument	"""[o]ctm=(%g,%g,%g,%g,%g,%g) thin=%d\\n"""		5842507	2					
ANR	5843774	PrimaryExpression	"""[o]ctm=(%g,%g,%g,%g,%g,%g) thin=%d\\n"""		5842507	0					
ANR	5843775	Argument	xx		5842507	3					
ANR	5843776	Identifier	xx		5842507	0					
ANR	5843777	Argument	xy		5842507	4					
ANR	5843778	Identifier	xy		5842507	0					
ANR	5843779	Argument	yx		5842507	5					
ANR	5843780	Identifier	yx		5842507	0					
ANR	5843781	Argument	yy		5842507	6					
ANR	5843782	Identifier	yy		5842507	0					
ANR	5843783	Argument	pgs -> ctm . tx		5842507	7					
ANR	5843784	MemberAccess	pgs -> ctm . tx		5842507	0					
ANR	5843785	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5843786	Identifier	pgs		5842507	0					
ANR	5843787	Identifier	ctm		5842507	1					
ANR	5843788	Identifier	tx		5842507	1					
ANR	5843789	Argument	pgs -> ctm . ty		5842507	8					
ANR	5843790	MemberAccess	pgs -> ctm . ty		5842507	0					
ANR	5843791	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5843792	Identifier	pgs		5842507	0					
ANR	5843793	Identifier	ctm		5842507	1					
ANR	5843794	Identifier	ty		5842507	1					
ANR	5843795	Argument	always_thin		5842507	9					
ANR	5843796	Identifier	always_thin		5842507	0					
ANR	5843797	IfStatement	if ( device_dot_length != 0 )		5842507	166					
ANR	5843798	Condition	device_dot_length != 0	647:8:26079:26100	5842507	0	True				
ANR	5843799	EqualityExpression	device_dot_length != 0		5842507	0		!=			
ANR	5843800	Identifier	device_dot_length		5842507	0					
ANR	5843801	PrimaryExpression	0		5842507	1					
ANR	5843802	CompoundStatement		231:8:9801:9822	5842507	1					
ANR	5843803	IdentifierDeclStatement	gs_matrix mat ;	652:8:26273:26286	5842507	0	True				
ANR	5843804	IdentifierDecl	mat		5842507	0					
ANR	5843805	IdentifierDeclType	gs_matrix		5842507	0					
ANR	5843806	Identifier	mat		5842507	1					
ANR	5843807	IdentifierDeclStatement	const gs_matrix * pmat ;	653:8:26296:26317	5842507	1	True				
ANR	5843808	IdentifierDecl	* pmat		5842507	0					
ANR	5843809	IdentifierDeclType	const gs_matrix *		5842507	0					
ANR	5843810	Identifier	pmat		5842507	1					
ANR	5843811	IfStatement	if ( pgs_lp -> dot_length_absolute )		5842507	2					
ANR	5843812	Condition	pgs_lp -> dot_length_absolute	655:12:26332:26358	5842507	0	True				
ANR	5843813	PtrMemberAccess	pgs_lp -> dot_length_absolute		5842507	0					
ANR	5843814	Identifier	pgs_lp		5842507	0					
ANR	5843815	Identifier	dot_length_absolute		5842507	1					
ANR	5843816	CompoundStatement		233:41:9866:9866	5842507	1					
ANR	5843817	ExpressionStatement	"gs_deviceinitialmatrix ( pdev , & mat )"	656:12:26375:26409	5842507	0	True				
ANR	5843818	CallExpression	"gs_deviceinitialmatrix ( pdev , & mat )"		5842507	0					
ANR	5843819	Callee	gs_deviceinitialmatrix		5842507	0					
ANR	5843820	Identifier	gs_deviceinitialmatrix		5842507	0					
ANR	5843821	ArgumentList	pdev		5842507	1					
ANR	5843822	Argument	pdev		5842507	0					
ANR	5843823	Identifier	pdev		5842507	0					
ANR	5843824	Argument	& mat		5842507	1					
ANR	5843825	UnaryOperationExpression	& mat		5842507	0					
ANR	5843826	UnaryOperator	&		5842507	0					
ANR	5843827	Identifier	mat		5842507	1					
ANR	5843828	ExpressionStatement	pmat = & mat	657:12:26423:26434	5842507	1	True				
ANR	5843829	AssignmentExpression	pmat = & mat		5842507	0		=			
ANR	5843830	Identifier	pmat		5842507	0					
ANR	5843831	UnaryOperationExpression	& mat		5842507	1					
ANR	5843832	UnaryOperator	&		5842507	0					
ANR	5843833	Identifier	mat		5842507	1					
ANR	5843834	ElseStatement	else		5842507	0					
ANR	5843835	ExpressionStatement	pmat = ( const gs_matrix * ) & pgs -> ctm	659:12:26463:26498	5842507	0	True				
ANR	5843836	AssignmentExpression	pmat = ( const gs_matrix * ) & pgs -> ctm		5842507	0		=			
ANR	5843837	Identifier	pmat		5842507	0					
ANR	5843838	CastExpression	( const gs_matrix * ) & pgs -> ctm		5842507	1					
ANR	5843839	CastTarget	const gs_matrix *		5842507	0					
ANR	5843840	UnaryOperationExpression	& pgs -> ctm		5842507	1					
ANR	5843841	UnaryOperator	&		5842507	0					
ANR	5843842	PtrMemberAccess	pgs -> ctm		5842507	1					
ANR	5843843	Identifier	pgs		5842507	0					
ANR	5843844	Identifier	ctm		5842507	1					
ANR	5843845	ExpressionStatement	device_dot_length *= fabs ( pmat -> xy ) + fabs ( pmat -> yy )	660:8:26508:26560	5842507	3	True				
ANR	5843846	AssignmentExpression	device_dot_length *= fabs ( pmat -> xy ) + fabs ( pmat -> yy )		5842507	0		*=			
ANR	5843847	Identifier	device_dot_length		5842507	0					
ANR	5843848	AdditiveExpression	fabs ( pmat -> xy ) + fabs ( pmat -> yy )		5842507	1		+			
ANR	5843849	CallExpression	fabs ( pmat -> xy )		5842507	0					
ANR	5843850	Callee	fabs		5842507	0					
ANR	5843851	Identifier	fabs		5842507	0					
ANR	5843852	ArgumentList	pmat -> xy		5842507	1					
ANR	5843853	Argument	pmat -> xy		5842507	0					
ANR	5843854	PtrMemberAccess	pmat -> xy		5842507	0					
ANR	5843855	Identifier	pmat		5842507	0					
ANR	5843856	Identifier	xy		5842507	1					
ANR	5843857	CallExpression	fabs ( pmat -> yy )		5842507	1					
ANR	5843858	Callee	fabs		5842507	0					
ANR	5843859	Identifier	fabs		5842507	0					
ANR	5843860	ArgumentList	pmat -> yy		5842507	1					
ANR	5843861	Argument	pmat -> yy		5842507	0					
ANR	5843862	PtrMemberAccess	pmat -> yy		5842507	0					
ANR	5843863	Identifier	pmat		5842507	0					
ANR	5843864	Identifier	yy		5842507	1					
ANR	5843865	IfStatement	if ( ! gx_path_has_curves ( ppath ) && ! gx_path_has_long_segments ( ppath ) )		5842507	167					
ANR	5843866	Condition	! gx_path_has_curves ( ppath ) && ! gx_path_has_long_segments ( ppath )	663:8:26650:26712	5842507	0	True				
ANR	5843867	AndExpression	! gx_path_has_curves ( ppath ) && ! gx_path_has_long_segments ( ppath )		5842507	0		&&			
ANR	5843868	UnaryOperationExpression	! gx_path_has_curves ( ppath )		5842507	0					
ANR	5843869	UnaryOperator	!		5842507	0					
ANR	5843870	CallExpression	gx_path_has_curves ( ppath )		5842507	1					
ANR	5843871	Callee	gx_path_has_curves		5842507	0					
ANR	5843872	Identifier	gx_path_has_curves		5842507	0					
ANR	5843873	ArgumentList	ppath		5842507	1					
ANR	5843874	Argument	ppath		5842507	0					
ANR	5843875	Identifier	ppath		5842507	0					
ANR	5843876	UnaryOperationExpression	! gx_path_has_long_segments ( ppath )		5842507	1					
ANR	5843877	UnaryOperator	!		5842507	0					
ANR	5843878	CallExpression	gx_path_has_long_segments ( ppath )		5842507	1					
ANR	5843879	Callee	gx_path_has_long_segments		5842507	0					
ANR	5843880	Identifier	gx_path_has_long_segments		5842507	0					
ANR	5843881	ArgumentList	ppath		5842507	1					
ANR	5843882	Argument	ppath		5842507	0					
ANR	5843883	Identifier	ppath		5842507	0					
ANR	5843884	CompoundStatement		241:73:10220:10220	5842507	1					
ANR	5843885	IfStatement	if ( ! ppath -> first_subpath )		5842507	0					
ANR	5843886	Condition	! ppath -> first_subpath	665:12:26765:26785	5842507	0	True				
ANR	5843887	UnaryOperationExpression	! ppath -> first_subpath		5842507	0					
ANR	5843888	UnaryOperator	!		5842507	0					
ANR	5843889	PtrMemberAccess	ppath -> first_subpath		5842507	1					
ANR	5843890	Identifier	ppath		5842507	0					
ANR	5843891	Identifier	first_subpath		5842507	1					
ANR	5843892	ReturnStatement	return 0 ;	666:12:26800:26808	5842507	1	True				
ANR	5843893	PrimaryExpression	0		5842507	0					
ANR	5843894	ExpressionStatement	spath = ppath	667:8:26818:26831	5842507	1	True				
ANR	5843895	AssignmentExpression	spath = ppath		5842507	0		=			
ANR	5843896	Identifier	spath		5842507	0					
ANR	5843897	Identifier	ppath		5842507	1					
ANR	5843898	ElseStatement	else		5842507	0					
ANR	5843899	CompoundStatement		246:11:10349:10349	5842507	0					
ANR	5843900	ExpressionStatement	"gx_path_init_local ( & fpath , ppath -> memory )"	669:8:26854:26895	5842507	0	True				
ANR	5843901	CallExpression	"gx_path_init_local ( & fpath , ppath -> memory )"		5842507	0					
ANR	5843902	Callee	gx_path_init_local		5842507	0					
ANR	5843903	Identifier	gx_path_init_local		5842507	0					
ANR	5843904	ArgumentList	& fpath		5842507	1					
ANR	5843905	Argument	& fpath		5842507	0					
ANR	5843906	UnaryOperationExpression	& fpath		5842507	0					
ANR	5843907	UnaryOperator	&		5842507	0					
ANR	5843908	Identifier	fpath		5842507	1					
ANR	5843909	Argument	ppath -> memory		5842507	1					
ANR	5843910	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5843911	Identifier	ppath		5842507	0					
ANR	5843912	Identifier	memory		5842507	1					
ANR	5843913	IfStatement	"if ( ( code = gx_path_add_flattened_for_stroke ( ppath , & fpath , params -> flatness , pgs ) ) < 0 )"		5842507	1					
ANR	5843914	Condition	"( code = gx_path_add_flattened_for_stroke ( ppath , & fpath , params -> flatness , pgs ) ) < 0"	670:12:26909:27039	5842507	0	True				
ANR	5843915	RelationalExpression	"( code = gx_path_add_flattened_for_stroke ( ppath , & fpath , params -> flatness , pgs ) ) < 0"		5842507	0		<			
ANR	5843916	AssignmentExpression	"code = gx_path_add_flattened_for_stroke ( ppath , & fpath , params -> flatness , pgs )"		5842507	0		=			
ANR	5843917	Identifier	code		5842507	0					
ANR	5843918	CallExpression	"gx_path_add_flattened_for_stroke ( ppath , & fpath , params -> flatness , pgs )"		5842507	1					
ANR	5843919	Callee	gx_path_add_flattened_for_stroke		5842507	0					
ANR	5843920	Identifier	gx_path_add_flattened_for_stroke		5842507	0					
ANR	5843921	ArgumentList	ppath		5842507	1					
ANR	5843922	Argument	ppath		5842507	0					
ANR	5843923	Identifier	ppath		5842507	0					
ANR	5843924	Argument	& fpath		5842507	1					
ANR	5843925	UnaryOperationExpression	& fpath		5842507	0					
ANR	5843926	UnaryOperator	&		5842507	0					
ANR	5843927	Identifier	fpath		5842507	1					
ANR	5843928	Argument	params -> flatness		5842507	2					
ANR	5843929	PtrMemberAccess	params -> flatness		5842507	0					
ANR	5843930	Identifier	params		5842507	0					
ANR	5843931	Identifier	flatness		5842507	1					
ANR	5843932	Argument	pgs		5842507	3					
ANR	5843933	Identifier	pgs		5842507	0					
ANR	5843934	PrimaryExpression	0		5842507	1					
ANR	5843935	ReturnStatement	return code ;	673:12:27067:27078	5842507	1	True				
ANR	5843936	Identifier	code		5842507	0					
ANR	5843937	ExpressionStatement	spath = & fpath	674:8:27088:27102	5842507	2	True				
ANR	5843938	AssignmentExpression	spath = & fpath		5842507	0		=			
ANR	5843939	Identifier	spath		5842507	0					
ANR	5843940	UnaryOperationExpression	& fpath		5842507	1					
ANR	5843941	UnaryOperator	&		5842507	0					
ANR	5843942	Identifier	fpath		5842507	1					
ANR	5843943	IfStatement	if ( dash_count )		5842507	168					
ANR	5843944	Condition	dash_count	676:8:27118:27127	5842507	0	True				
ANR	5843945	Identifier	dash_count		5842507	0					
ANR	5843946	CompoundStatement		258:8:10722:10762	5842507	1					
ANR	5843947	IdentifierDeclStatement	float max_dash_len = 0 ;	677:8:27140:27162	5842507	0	True				
ANR	5843948	IdentifierDecl	max_dash_len = 0		5842507	0					
ANR	5843949	IdentifierDeclType	float		5842507	0					
ANR	5843950	Identifier	max_dash_len		5842507	1					
ANR	5843951	AssignmentExpression	max_dash_len = 0		5842507	2		=			
ANR	5843952	Identifier	max_dash_len		5842507	0					
ANR	5843953	PrimaryExpression	0		5842507	1					
ANR	5843954	IdentifierDeclStatement	float expand_squared ;	678:8:27172:27192	5842507	1	True				
ANR	5843955	IdentifierDecl	expand_squared		5842507	0					
ANR	5843956	IdentifierDeclType	float		5842507	0					
ANR	5843957	Identifier	expand_squared		5842507	1					
ANR	5843958	IdentifierDeclStatement	int i ;	679:8:27202:27207	5842507	2	True				
ANR	5843959	IdentifierDecl	i		5842507	0					
ANR	5843960	IdentifierDeclType	int		5842507	0					
ANR	5843961	Identifier	i		5842507	1					
ANR	5843962	IdentifierDeclStatement	float adjust = ( float ) pgs -> fill_adjust . x ;	680:8:27217:27257	5842507	3	True				
ANR	5843963	IdentifierDecl	adjust = ( float ) pgs -> fill_adjust . x		5842507	0					
ANR	5843964	IdentifierDeclType	float		5842507	0					
ANR	5843965	Identifier	adjust		5842507	1					
ANR	5843966	AssignmentExpression	adjust = ( float ) pgs -> fill_adjust . x		5842507	2		=			
ANR	5843967	Identifier	adjust		5842507	0					
ANR	5843968	CastExpression	( float ) pgs -> fill_adjust . x		5842507	1					
ANR	5843969	CastTarget	float		5842507	0					
ANR	5843970	MemberAccess	pgs -> fill_adjust . x		5842507	1					
ANR	5843971	PtrMemberAccess	pgs -> fill_adjust		5842507	0					
ANR	5843972	Identifier	pgs		5842507	0					
ANR	5843973	Identifier	fill_adjust		5842507	1					
ANR	5843974	Identifier	x		5842507	1					
ANR	5843975	IfStatement	if ( adjust > ( float ) pgs -> fill_adjust . y )		5842507	4					
ANR	5843976	Condition	adjust > ( float ) pgs -> fill_adjust . y	681:12:27271:27304	5842507	0	True				
ANR	5843977	RelationalExpression	adjust > ( float ) pgs -> fill_adjust . y		5842507	0		>			
ANR	5843978	Identifier	adjust		5842507	0					
ANR	5843979	CastExpression	( float ) pgs -> fill_adjust . y		5842507	1					
ANR	5843980	CastTarget	float		5842507	0					
ANR	5843981	MemberAccess	pgs -> fill_adjust . y		5842507	1					
ANR	5843982	PtrMemberAccess	pgs -> fill_adjust		5842507	0					
ANR	5843983	Identifier	pgs		5842507	0					
ANR	5843984	Identifier	fill_adjust		5842507	1					
ANR	5843985	Identifier	y		5842507	1					
ANR	5843986	ExpressionStatement	adjust = ( float ) pgs -> fill_adjust . y	682:12:27319:27353	5842507	1	True				
ANR	5843987	AssignmentExpression	adjust = ( float ) pgs -> fill_adjust . y		5842507	0		=			
ANR	5843988	Identifier	adjust		5842507	0					
ANR	5843989	CastExpression	( float ) pgs -> fill_adjust . y		5842507	1					
ANR	5843990	CastTarget	float		5842507	0					
ANR	5843991	MemberAccess	pgs -> fill_adjust . y		5842507	1					
ANR	5843992	PtrMemberAccess	pgs -> fill_adjust		5842507	0					
ANR	5843993	Identifier	pgs		5842507	0					
ANR	5843994	Identifier	fill_adjust		5842507	1					
ANR	5843995	Identifier	y		5842507	1					
ANR	5843996	ForStatement	for ( i = 0 ; i < dash_count ; i ++ )		5842507	5					
ANR	5843997	ForInit	i = 0 ;	683:13:27368:27373	5842507	0	True				
ANR	5843998	AssignmentExpression	i = 0		5842507	0		=			
ANR	5843999	Identifier	i		5842507	0					
ANR	5844000	PrimaryExpression	0		5842507	1					
ANR	5844001	Condition	i < dash_count	683:20:27375:27388	5842507	1	True				
ANR	5844002	RelationalExpression	i < dash_count		5842507	0		<			
ANR	5844003	Identifier	i		5842507	0					
ANR	5844004	Identifier	dash_count		5842507	1					
ANR	5844005	PostIncDecOperationExpression	i ++	683:36:27391:27393	5842507	2	True				
ANR	5844006	Identifier	i		5842507	0					
ANR	5844007	IncDec	++		5842507	1					
ANR	5844008	CompoundStatement		261:41:10901:10901	5842507	3					
ANR	5844009	IfStatement	if ( max_dash_len < pgs_lp -> dash . pattern [ i ] )		5842507	0					
ANR	5844010	Condition	max_dash_len < pgs_lp -> dash . pattern [ i ]	684:16:27414:27451	5842507	0	True				
ANR	5844011	RelationalExpression	max_dash_len < pgs_lp -> dash . pattern [ i ]		5842507	0		<			
ANR	5844012	Identifier	max_dash_len		5842507	0					
ANR	5844013	ArrayIndexing	pgs_lp -> dash . pattern [ i ]		5842507	1					
ANR	5844014	MemberAccess	pgs_lp -> dash . pattern		5842507	0					
ANR	5844015	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5844016	Identifier	pgs_lp		5842507	0					
ANR	5844017	Identifier	dash		5842507	1					
ANR	5844018	Identifier	pattern		5842507	1					
ANR	5844019	Identifier	i		5842507	1					
ANR	5844020	ExpressionStatement	max_dash_len = pgs_lp -> dash . pattern [ i ]	685:16:27470:27508	5842507	1	True				
ANR	5844021	AssignmentExpression	max_dash_len = pgs_lp -> dash . pattern [ i ]		5842507	0		=			
ANR	5844022	Identifier	max_dash_len		5842507	0					
ANR	5844023	ArrayIndexing	pgs_lp -> dash . pattern [ i ]		5842507	1					
ANR	5844024	MemberAccess	pgs_lp -> dash . pattern		5842507	0					
ANR	5844025	PtrMemberAccess	pgs_lp -> dash		5842507	0					
ANR	5844026	Identifier	pgs_lp		5842507	0					
ANR	5844027	Identifier	dash		5842507	1					
ANR	5844028	Identifier	pattern		5842507	1					
ANR	5844029	Identifier	i		5842507	1					
ANR	5844030	ExpressionStatement	expand_squared = pgs -> ctm . xx * pgs -> ctm . yy - pgs -> ctm . xy * pgs -> ctm . yx	687:8:27528:27598	5842507	6	True				
ANR	5844031	AssignmentExpression	expand_squared = pgs -> ctm . xx * pgs -> ctm . yy - pgs -> ctm . xy * pgs -> ctm . yx		5842507	0		=			
ANR	5844032	Identifier	expand_squared		5842507	0					
ANR	5844033	AdditiveExpression	pgs -> ctm . xx * pgs -> ctm . yy - pgs -> ctm . xy * pgs -> ctm . yx		5842507	1		-			
ANR	5844034	MultiplicativeExpression	pgs -> ctm . xx * pgs -> ctm . yy		5842507	0		*			
ANR	5844035	MemberAccess	pgs -> ctm . xx		5842507	0					
ANR	5844036	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5844037	Identifier	pgs		5842507	0					
ANR	5844038	Identifier	ctm		5842507	1					
ANR	5844039	Identifier	xx		5842507	1					
ANR	5844040	MemberAccess	pgs -> ctm . yy		5842507	1					
ANR	5844041	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5844042	Identifier	pgs		5842507	0					
ANR	5844043	Identifier	ctm		5842507	1					
ANR	5844044	Identifier	yy		5842507	1					
ANR	5844045	MultiplicativeExpression	pgs -> ctm . xy * pgs -> ctm . yx		5842507	1		*			
ANR	5844046	MemberAccess	pgs -> ctm . xy		5842507	0					
ANR	5844047	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5844048	Identifier	pgs		5842507	0					
ANR	5844049	Identifier	ctm		5842507	1					
ANR	5844050	Identifier	xy		5842507	1					
ANR	5844051	MemberAccess	pgs -> ctm . yx		5842507	1					
ANR	5844052	PtrMemberAccess	pgs -> ctm		5842507	0					
ANR	5844053	Identifier	pgs		5842507	0					
ANR	5844054	Identifier	ctm		5842507	1					
ANR	5844055	Identifier	yx		5842507	1					
ANR	5844056	IfStatement	if ( expand_squared < 0 )		5842507	7					
ANR	5844057	Condition	expand_squared < 0	688:12:27612:27629	5842507	0	True				
ANR	5844058	RelationalExpression	expand_squared < 0		5842507	0		<			
ANR	5844059	Identifier	expand_squared		5842507	0					
ANR	5844060	PrimaryExpression	0		5842507	1					
ANR	5844061	ExpressionStatement	expand_squared = - expand_squared	689:12:27644:27676	5842507	1	True				
ANR	5844062	AssignmentExpression	expand_squared = - expand_squared		5842507	0		=			
ANR	5844063	Identifier	expand_squared		5842507	0					
ANR	5844064	UnaryOperationExpression	- expand_squared		5842507	1					
ANR	5844065	UnaryOperator	-		5842507	0					
ANR	5844066	Identifier	expand_squared		5842507	1					
ANR	5844067	ExpressionStatement	expand_squared *= max_dash_len * max_dash_len	690:8:27686:27731	5842507	8	True				
ANR	5844068	AssignmentExpression	expand_squared *= max_dash_len * max_dash_len		5842507	0		*=			
ANR	5844069	Identifier	expand_squared		5842507	0					
ANR	5844070	MultiplicativeExpression	max_dash_len * max_dash_len		5842507	1		*			
ANR	5844071	Identifier	max_dash_len		5842507	0					
ANR	5844072	Identifier	max_dash_len		5842507	1					
ANR	5844073	IfStatement	if ( pgs -> line_params . half_width > 1 )		5842507	9					
ANR	5844074	Condition	pgs -> line_params . half_width > 1	693:12:27839:27869	5842507	0	True				
ANR	5844075	RelationalExpression	pgs -> line_params . half_width > 1		5842507	0		>			
ANR	5844076	MemberAccess	pgs -> line_params . half_width		5842507	0					
ANR	5844077	PtrMemberAccess	pgs -> line_params		5842507	0					
ANR	5844078	Identifier	pgs		5842507	0					
ANR	5844079	Identifier	line_params		5842507	1					
ANR	5844080	Identifier	half_width		5842507	1					
ANR	5844081	PrimaryExpression	1		5842507	1					
ANR	5844082	ExpressionStatement	adjust /= pgs -> line_params . half_width	694:12:27884:27921	5842507	1	True				
ANR	5844083	AssignmentExpression	adjust /= pgs -> line_params . half_width		5842507	0		/=			
ANR	5844084	Identifier	adjust		5842507	0					
ANR	5844085	MemberAccess	pgs -> line_params . half_width		5842507	1					
ANR	5844086	PtrMemberAccess	pgs -> line_params		5842507	0					
ANR	5844087	Identifier	pgs		5842507	0					
ANR	5844088	Identifier	line_params		5842507	1					
ANR	5844089	Identifier	half_width		5842507	1					
ANR	5844090	IfStatement	if ( expand_squared * 65536.0f >= ( float ) ( adjust * adjust ) )		5842507	10					
ANR	5844091	Condition	expand_squared * 65536.0f >= ( float ) ( adjust * adjust )	695:12:27935:27983	5842507	0	True				
ANR	5844092	RelationalExpression	expand_squared * 65536.0f >= ( float ) ( adjust * adjust )		5842507	0		>=			
ANR	5844093	MultiplicativeExpression	expand_squared * 65536.0f		5842507	0		*			
ANR	5844094	Identifier	expand_squared		5842507	0					
ANR	5844095	PrimaryExpression	65536.0f		5842507	1					
ANR	5844096	CastExpression	( float ) ( adjust * adjust )		5842507	1					
ANR	5844097	CastTarget	float		5842507	0					
ANR	5844098	MultiplicativeExpression	adjust * adjust		5842507	1		*			
ANR	5844099	Identifier	adjust		5842507	0					
ANR	5844100	Identifier	adjust		5842507	1					
ANR	5844101	CompoundStatement		273:63:11491:11491	5842507	1					
ANR	5844102	ExpressionStatement	"gx_path_init_local ( & dpath , ppath -> memory )"	696:12:28000:28041	5842507	0	True				
ANR	5844103	CallExpression	"gx_path_init_local ( & dpath , ppath -> memory )"		5842507	0					
ANR	5844104	Callee	gx_path_init_local		5842507	0					
ANR	5844105	Identifier	gx_path_init_local		5842507	0					
ANR	5844106	ArgumentList	& dpath		5842507	1					
ANR	5844107	Argument	& dpath		5842507	0					
ANR	5844108	UnaryOperationExpression	& dpath		5842507	0					
ANR	5844109	UnaryOperator	&		5842507	0					
ANR	5844110	Identifier	dpath		5842507	1					
ANR	5844111	Argument	ppath -> memory		5842507	1					
ANR	5844112	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5844113	Identifier	ppath		5842507	0					
ANR	5844114	Identifier	memory		5842507	1					
ANR	5844115	ExpressionStatement	"code = gx_path_add_dash_expansion ( spath , & dpath , pgs )"	697:12:28055:28108	5842507	1	True				
ANR	5844116	AssignmentExpression	"code = gx_path_add_dash_expansion ( spath , & dpath , pgs )"		5842507	0		=			
ANR	5844117	Identifier	code		5842507	0					
ANR	5844118	CallExpression	"gx_path_add_dash_expansion ( spath , & dpath , pgs )"		5842507	1					
ANR	5844119	Callee	gx_path_add_dash_expansion		5842507	0					
ANR	5844120	Identifier	gx_path_add_dash_expansion		5842507	0					
ANR	5844121	ArgumentList	spath		5842507	1					
ANR	5844122	Argument	spath		5842507	0					
ANR	5844123	Identifier	spath		5842507	0					
ANR	5844124	Argument	& dpath		5842507	1					
ANR	5844125	UnaryOperationExpression	& dpath		5842507	0					
ANR	5844126	UnaryOperator	&		5842507	0					
ANR	5844127	Identifier	dpath		5842507	1					
ANR	5844128	Argument	pgs		5842507	2					
ANR	5844129	Identifier	pgs		5842507	0					
ANR	5844130	IfStatement	if ( code < 0 )		5842507	2					
ANR	5844131	Condition	code < 0	698:16:28126:28133	5842507	0	True				
ANR	5844132	RelationalExpression	code < 0		5842507	0		<			
ANR	5844133	Identifier	code		5842507	0					
ANR	5844134	PrimaryExpression	0		5842507	1					
ANR	5844135	GotoStatement	goto exf ;	699:16:28152:28160	5842507	1	True				
ANR	5844136	Identifier	exf		5842507	0					
ANR	5844137	ExpressionStatement	spath = & dpath	700:12:28174:28188	5842507	3	True				
ANR	5844138	AssignmentExpression	spath = & dpath		5842507	0		=			
ANR	5844139	Identifier	spath		5842507	0					
ANR	5844140	UnaryOperationExpression	& dpath		5842507	1					
ANR	5844141	UnaryOperator	&		5842507	0					
ANR	5844142	Identifier	dpath		5842507	1					
ANR	5844143	ElseStatement	else		5842507	0					
ANR	5844144	CompoundStatement		279:15:11710:11710	5842507	0					
ANR	5844145	ExpressionStatement	dash_count = 0	702:12:28219:28233	5842507	0	True				
ANR	5844146	AssignmentExpression	dash_count = 0		5842507	0		=			
ANR	5844147	Identifier	dash_count		5842507	0					
ANR	5844148	PrimaryExpression	0		5842507	1					
ANR	5844149	IfStatement	if ( to_path == 0 )		5842507	169					
ANR	5844150	Condition	to_path == 0	705:8:28259:28270	5842507	0	True				
ANR	5844151	EqualityExpression	to_path == 0		5842507	0		==			
ANR	5844152	Identifier	to_path		5842507	0					
ANR	5844153	PrimaryExpression	0		5842507	1					
ANR	5844154	CompoundStatement		283:22:11778:11778	5842507	1					
ANR	5844155	ExpressionStatement	to_path = & stroke_path_body	707:8:28346:28373	5842507	0	True				
ANR	5844156	AssignmentExpression	to_path = & stroke_path_body		5842507	0		=			
ANR	5844157	Identifier	to_path		5842507	0					
ANR	5844158	UnaryOperationExpression	& stroke_path_body		5842507	1					
ANR	5844159	UnaryOperator	&		5842507	0					
ANR	5844160	Identifier	stroke_path_body		5842507	1					
ANR	5844161	ExpressionStatement	"gx_path_init_local ( & stroke_path_body , ppath -> memory )"	708:8:28383:28435	5842507	1	True				
ANR	5844162	CallExpression	"gx_path_init_local ( & stroke_path_body , ppath -> memory )"		5842507	0					
ANR	5844163	Callee	gx_path_init_local		5842507	0					
ANR	5844164	Identifier	gx_path_init_local		5842507	0					
ANR	5844165	ArgumentList	& stroke_path_body		5842507	1					
ANR	5844166	Argument	& stroke_path_body		5842507	0					
ANR	5844167	UnaryOperationExpression	& stroke_path_body		5842507	0					
ANR	5844168	UnaryOperator	&		5842507	0					
ANR	5844169	Identifier	stroke_path_body		5842507	1					
ANR	5844170	Argument	ppath -> memory		5842507	1					
ANR	5844171	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5844172	Identifier	ppath		5842507	0					
ANR	5844173	Identifier	memory		5842507	1					
ANR	5844174	IfStatement	if ( line_proc == stroke_add_fast )		5842507	170					
ANR	5844175	Condition	line_proc == stroke_add_fast	710:8:28451:28478	5842507	0	True				
ANR	5844176	EqualityExpression	line_proc == stroke_add_fast		5842507	0		==			
ANR	5844177	Identifier	line_proc		5842507	0					
ANR	5844178	Identifier	stroke_add_fast		5842507	1					
ANR	5844179	CompoundStatement		288:38:11986:11986	5842507	1					
ANR	5844180	ExpressionStatement	to_path_reverse = & stroke_path_reverse	711:8:28491:28529	5842507	0	True				
ANR	5844181	AssignmentExpression	to_path_reverse = & stroke_path_reverse		5842507	0		=			
ANR	5844182	Identifier	to_path_reverse		5842507	0					
ANR	5844183	UnaryOperationExpression	& stroke_path_reverse		5842507	1					
ANR	5844184	UnaryOperator	&		5842507	0					
ANR	5844185	Identifier	stroke_path_reverse		5842507	1					
ANR	5844186	ExpressionStatement	"gx_path_init_local ( & stroke_path_reverse , ppath -> memory )"	712:8:28539:28594	5842507	1	True				
ANR	5844187	CallExpression	"gx_path_init_local ( & stroke_path_reverse , ppath -> memory )"		5842507	0					
ANR	5844188	Callee	gx_path_init_local		5842507	0					
ANR	5844189	Identifier	gx_path_init_local		5842507	0					
ANR	5844190	ArgumentList	& stroke_path_reverse		5842507	1					
ANR	5844191	Argument	& stroke_path_reverse		5842507	0					
ANR	5844192	UnaryOperationExpression	& stroke_path_reverse		5842507	0					
ANR	5844193	UnaryOperator	&		5842507	0					
ANR	5844194	Identifier	stroke_path_reverse		5842507	1					
ANR	5844195	Argument	ppath -> memory		5842507	1					
ANR	5844196	PtrMemberAccess	ppath -> memory		5842507	0					
ANR	5844197	Identifier	ppath		5842507	0					
ANR	5844198	Identifier	memory		5842507	1					
ANR	5844199	ForStatement	for ( psub = spath -> first_subpath ; psub != 0 ; )		5842507	171					
ANR	5844200	ForInit	psub = spath -> first_subpath ;	714:9:28611:28638	5842507	0	True				
ANR	5844201	AssignmentExpression	psub = spath -> first_subpath		5842507	0		=			
ANR	5844202	Identifier	psub		5842507	0					
ANR	5844203	PtrMemberAccess	spath -> first_subpath		5842507	1					
ANR	5844204	Identifier	spath		5842507	0					
ANR	5844205	Identifier	first_subpath		5842507	1					
ANR	5844206	Condition	psub != 0	714:38:28640:28648	5842507	1	True				
ANR	5844207	EqualityExpression	psub != 0		5842507	0		!=			
ANR	5844208	Identifier	psub		5842507	0					
ANR	5844209	PrimaryExpression	0		5842507	1					
ANR	5844210	CompoundStatement		300:8:12441:12469	5842507	2					
ANR	5844211	IdentifierDeclStatement	int index = 0 ;	715:8:28662:28675	5842507	0	True				
ANR	5844212	IdentifierDecl	index = 0		5842507	0					
ANR	5844213	IdentifierDeclType	int		5842507	0					
ANR	5844214	Identifier	index		5842507	1					
ANR	5844215	AssignmentExpression	index = 0		5842507	2		=			
ANR	5844216	Identifier	index		5842507	0					
ANR	5844217	PrimaryExpression	0		5842507	1					
ANR	5844218	IdentifierDeclStatement	const segment * pseg = ( const segment * ) psub ;	716:8:28685:28728	5842507	1	True				
ANR	5844219	IdentifierDecl	* pseg = ( const segment * ) psub		5842507	0					
ANR	5844220	IdentifierDeclType	const segment *		5842507	0					
ANR	5844221	Identifier	pseg		5842507	1					
ANR	5844222	AssignmentExpression	* pseg = ( const segment * ) psub		5842507	2		=			
ANR	5844223	Identifier	pseg		5842507	0					
ANR	5844224	CastExpression	( const segment * ) psub		5842507	1					
ANR	5844225	CastTarget	const segment *		5842507	0					
ANR	5844226	Identifier	psub		5842507	1					
ANR	5844227	IdentifierDeclStatement	fixed x = pseg -> pt . x ;	717:8:28738:28758	5842507	2	True				
ANR	5844228	IdentifierDecl	x = pseg -> pt . x		5842507	0					
ANR	5844229	IdentifierDeclType	fixed		5842507	0					
ANR	5844230	Identifier	x		5842507	1					
ANR	5844231	AssignmentExpression	x = pseg -> pt . x		5842507	2		=			
ANR	5844232	Identifier	x		5842507	0					
ANR	5844233	MemberAccess	pseg -> pt . x		5842507	1					
ANR	5844234	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844235	Identifier	pseg		5842507	0					
ANR	5844236	Identifier	pt		5842507	1					
ANR	5844237	Identifier	x		5842507	1					
ANR	5844238	IdentifierDeclStatement	fixed y = pseg -> pt . y ;	718:8:28768:28788	5842507	3	True				
ANR	5844239	IdentifierDecl	y = pseg -> pt . y		5842507	0					
ANR	5844240	IdentifierDeclType	fixed		5842507	0					
ANR	5844241	Identifier	y		5842507	1					
ANR	5844242	AssignmentExpression	y = pseg -> pt . y		5842507	2		=			
ANR	5844243	Identifier	y		5842507	0					
ANR	5844244	MemberAccess	pseg -> pt . y		5842507	1					
ANR	5844245	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844246	Identifier	pseg		5842507	0					
ANR	5844247	Identifier	pt		5842507	1					
ANR	5844248	Identifier	y		5842507	1					
ANR	5844249	IdentifierDeclStatement	bool is_closed = ( ( const subpath * ) pseg ) -> is_closed ;	719:8:28798:28849	5842507	4	True				
ANR	5844250	IdentifierDecl	is_closed = ( ( const subpath * ) pseg ) -> is_closed		5842507	0					
ANR	5844251	IdentifierDeclType	bool		5842507	0					
ANR	5844252	Identifier	is_closed		5842507	1					
ANR	5844253	AssignmentExpression	is_closed = ( ( const subpath * ) pseg ) -> is_closed		5842507	2		=			
ANR	5844254	Identifier	is_closed		5842507	0					
ANR	5844255	PtrMemberAccess	( ( const subpath * ) pseg ) -> is_closed		5842507	1					
ANR	5844256	CastExpression	( const subpath * ) pseg		5842507	0					
ANR	5844257	CastTarget	const subpath *		5842507	0					
ANR	5844258	Identifier	pseg		5842507	1					
ANR	5844259	Identifier	is_closed		5842507	1					
ANR	5844260	IdentifierDeclStatement	"partial_line pl , pl_prev , pl_first ;"	720:8:28859:28893	5842507	5	True				
ANR	5844261	IdentifierDecl	pl		5842507	0					
ANR	5844262	IdentifierDeclType	partial_line		5842507	0					
ANR	5844263	Identifier	pl		5842507	1					
ANR	5844264	IdentifierDecl	pl_prev		5842507	1					
ANR	5844265	IdentifierDeclType	partial_line		5842507	0					
ANR	5844266	Identifier	pl_prev		5842507	1					
ANR	5844267	IdentifierDecl	pl_first		5842507	2					
ANR	5844268	IdentifierDeclType	partial_line		5842507	0					
ANR	5844269	Identifier	pl_first		5842507	1					
ANR	5844270	IdentifierDeclStatement	bool zero_length = true ;	721:8:28903:28926	5842507	6	True				
ANR	5844271	IdentifierDecl	zero_length = true		5842507	0					
ANR	5844272	IdentifierDeclType	bool		5842507	0					
ANR	5844273	Identifier	zero_length		5842507	1					
ANR	5844274	AssignmentExpression	zero_length = true		5842507	2		=			
ANR	5844275	Identifier	true		5842507	0					
ANR	5844276	Identifier	true		5842507	1					
ANR	5844277	IdentifierDeclStatement	int pseg_notes = pseg -> notes ;	722:8:28936:28964	5842507	7	True				
ANR	5844278	IdentifierDecl	pseg_notes = pseg -> notes		5842507	0					
ANR	5844279	IdentifierDeclType	int		5842507	0					
ANR	5844280	Identifier	pseg_notes		5842507	1					
ANR	5844281	AssignmentExpression	pseg_notes = pseg -> notes		5842507	2		=			
ANR	5844282	Identifier	pseg_notes		5842507	0					
ANR	5844283	PtrMemberAccess	pseg -> notes		5842507	1					
ANR	5844284	Identifier	pseg		5842507	0					
ANR	5844285	Identifier	notes		5842507	1					
ANR	5844286	ExpressionStatement	flags = nf_all_from_arc	724:8:28975:28998	5842507	8	True				
ANR	5844287	AssignmentExpression	flags = nf_all_from_arc		5842507	0		=			
ANR	5844288	Identifier	flags		5842507	0					
ANR	5844289	Identifier	nf_all_from_arc		5842507	1					
ANR	5844290	WhileStatement	while ( ( pseg = pseg -> next ) != 0 && pseg -> type != s_start )		5842507	9					
ANR	5844291	Condition	( pseg = pseg -> next ) != 0 && pseg -> type != s_start	730:15:29286:29349	5842507	0	True				
ANR	5844292	AndExpression	( pseg = pseg -> next ) != 0 && pseg -> type != s_start		5842507	0		&&			
ANR	5844293	EqualityExpression	( pseg = pseg -> next ) != 0		5842507	0		!=			
ANR	5844294	AssignmentExpression	pseg = pseg -> next		5842507	0		=			
ANR	5844295	Identifier	pseg		5842507	0					
ANR	5844296	PtrMemberAccess	pseg -> next		5842507	1					
ANR	5844297	Identifier	pseg		5842507	0					
ANR	5844298	Identifier	next		5842507	1					
ANR	5844299	PrimaryExpression	0		5842507	1					
ANR	5844300	EqualityExpression	pseg -> type != s_start		5842507	1		!=			
ANR	5844301	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844302	Identifier	pseg		5842507	0					
ANR	5844303	Identifier	type		5842507	1					
ANR	5844304	Identifier	s_start		5842507	1					
ANR	5844305	CompoundStatement		314:12:13043:13063	5842507	1					
ANR	5844306	IdentifierDeclStatement	"fixed sx , udx , sy , udy ;"	735:12:29502:29524	5842507	0	True				
ANR	5844307	IdentifierDecl	sx		5842507	0					
ANR	5844308	IdentifierDeclType	fixed		5842507	0					
ANR	5844309	Identifier	sx		5842507	1					
ANR	5844310	IdentifierDecl	udx		5842507	1					
ANR	5844311	IdentifierDeclType	fixed		5842507	0					
ANR	5844312	Identifier	udx		5842507	1					
ANR	5844313	IdentifierDecl	sy		5842507	2					
ANR	5844314	IdentifierDeclType	fixed		5842507	0					
ANR	5844315	Identifier	sy		5842507	1					
ANR	5844316	IdentifierDecl	udy		5842507	3					
ANR	5844317	IdentifierDeclType	fixed		5842507	0					
ANR	5844318	Identifier	udy		5842507	1					
ANR	5844319	IdentifierDeclStatement	bool is_dash_segment ;	736:12:29538:29558	5842507	1	True				
ANR	5844320	IdentifierDecl	is_dash_segment		5842507	0					
ANR	5844321	IdentifierDeclType	bool		5842507	0					
ANR	5844322	Identifier	is_dash_segment		5842507	1					
ANR	5844323	ExpressionStatement	pseg_notes = pseg -> notes	738:12:29573:29597	5842507	2	True				
ANR	5844324	AssignmentExpression	pseg_notes = pseg -> notes		5842507	0		=			
ANR	5844325	Identifier	pseg_notes		5842507	0					
ANR	5844326	PtrMemberAccess	pseg -> notes		5842507	1					
ANR	5844327	Identifier	pseg		5842507	0					
ANR	5844328	Identifier	notes		5842507	1					
ANR	5844329	Label	d2 :	740:9:29609:29611	5842507	3	True				
ANR	5844330	Identifier	d2		5842507	0					
ANR	5844331	ExpressionStatement	is_dash_segment = false	740:12:29612:29635	5842507	4	True				
ANR	5844332	AssignmentExpression	is_dash_segment = false		5842507	0		=			
ANR	5844333	Identifier	is_dash_segment		5842507	0					
ANR	5844334	Identifier	false		5842507	1					
ANR	5844335	Label	d1 :	741:9:29646:29648	5842507	5	True				
ANR	5844336	Identifier	d1		5842507	0					
ANR	5844337	IfStatement	if ( pseg -> type == s_dash )		5842507	6					
ANR	5844338	Condition	pseg -> type == s_dash	741:16:29653:29672	5842507	0	True				
ANR	5844339	EqualityExpression	pseg -> type == s_dash		5842507	0		==			
ANR	5844340	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844341	Identifier	pseg		5842507	0					
ANR	5844342	Identifier	type		5842507	1					
ANR	5844343	Identifier	s_dash		5842507	1					
ANR	5844344	CompoundStatement		320:16:13198:13237	5842507	1					
ANR	5844345	IdentifierDeclStatement	dash_segment * pd = ( dash_segment * ) pseg ;	742:16:29693:29732	5842507	0	True				
ANR	5844346	IdentifierDecl	* pd = ( dash_segment * ) pseg		5842507	0					
ANR	5844347	IdentifierDeclType	dash_segment *		5842507	0					
ANR	5844348	Identifier	pd		5842507	1					
ANR	5844349	AssignmentExpression	* pd = ( dash_segment * ) pseg		5842507	2		=			
ANR	5844350	Identifier	pd		5842507	0					
ANR	5844351	CastExpression	( dash_segment * ) pseg		5842507	1					
ANR	5844352	CastTarget	dash_segment *		5842507	0					
ANR	5844353	Identifier	pseg		5842507	1					
ANR	5844354	ExpressionStatement	sx = pd -> pt . x	744:16:29751:29764	5842507	1	True				
ANR	5844355	AssignmentExpression	sx = pd -> pt . x		5842507	0		=			
ANR	5844356	Identifier	sx		5842507	0					
ANR	5844357	MemberAccess	pd -> pt . x		5842507	1					
ANR	5844358	PtrMemberAccess	pd -> pt		5842507	0					
ANR	5844359	Identifier	pd		5842507	0					
ANR	5844360	Identifier	pt		5842507	1					
ANR	5844361	Identifier	x		5842507	1					
ANR	5844362	ExpressionStatement	sy = pd -> pt . y	745:16:29782:29795	5842507	2	True				
ANR	5844363	AssignmentExpression	sy = pd -> pt . y		5842507	0		=			
ANR	5844364	Identifier	sy		5842507	0					
ANR	5844365	MemberAccess	pd -> pt . y		5842507	1					
ANR	5844366	PtrMemberAccess	pd -> pt		5842507	0					
ANR	5844367	Identifier	pd		5842507	0					
ANR	5844368	Identifier	pt		5842507	1					
ANR	5844369	Identifier	y		5842507	1					
ANR	5844370	ExpressionStatement	udx = pd -> tangent . x	746:16:29813:29832	5842507	3	True				
ANR	5844371	AssignmentExpression	udx = pd -> tangent . x		5842507	0		=			
ANR	5844372	Identifier	udx		5842507	0					
ANR	5844373	MemberAccess	pd -> tangent . x		5842507	1					
ANR	5844374	PtrMemberAccess	pd -> tangent		5842507	0					
ANR	5844375	Identifier	pd		5842507	0					
ANR	5844376	Identifier	tangent		5842507	1					
ANR	5844377	Identifier	x		5842507	1					
ANR	5844378	ExpressionStatement	udy = pd -> tangent . y	747:16:29850:29869	5842507	4	True				
ANR	5844379	AssignmentExpression	udy = pd -> tangent . y		5842507	0		=			
ANR	5844380	Identifier	udy		5842507	0					
ANR	5844381	MemberAccess	pd -> tangent . y		5842507	1					
ANR	5844382	PtrMemberAccess	pd -> tangent		5842507	0					
ANR	5844383	Identifier	pd		5842507	0					
ANR	5844384	Identifier	tangent		5842507	1					
ANR	5844385	Identifier	y		5842507	1					
ANR	5844386	ExpressionStatement	is_dash_segment = true	748:16:29887:29909	5842507	5	True				
ANR	5844387	AssignmentExpression	is_dash_segment = true		5842507	0		=			
ANR	5844388	Identifier	is_dash_segment		5842507	0					
ANR	5844389	Identifier	true		5842507	1					
ANR	5844390	ElseStatement	else		5842507	0					
ANR	5844391	IfStatement	if ( pseg -> type == s_gap )		5842507	0					
ANR	5844392	Condition	pseg -> type == s_gap	749:23:29934:29952	5842507	0	True				
ANR	5844393	EqualityExpression	pseg -> type == s_gap		5842507	0		==			
ANR	5844394	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844395	Identifier	pseg		5842507	0					
ANR	5844396	Identifier	type		5842507	1					
ANR	5844397	Identifier	s_gap		5842507	1					
ANR	5844398	CompoundStatement		327:44:13460:13460	5842507	1					
ANR	5844399	ExpressionStatement	sx = pseg -> pt . x	750:16:29973:29988	5842507	0	True				
ANR	5844400	AssignmentExpression	sx = pseg -> pt . x		5842507	0		=			
ANR	5844401	Identifier	sx		5842507	0					
ANR	5844402	MemberAccess	pseg -> pt . x		5842507	1					
ANR	5844403	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844404	Identifier	pseg		5842507	0					
ANR	5844405	Identifier	pt		5842507	1					
ANR	5844406	Identifier	x		5842507	1					
ANR	5844407	ExpressionStatement	sy = pseg -> pt . y	751:16:30006:30021	5842507	1	True				
ANR	5844408	AssignmentExpression	sy = pseg -> pt . y		5842507	0		=			
ANR	5844409	Identifier	sy		5842507	0					
ANR	5844410	MemberAccess	pseg -> pt . y		5842507	1					
ANR	5844411	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844412	Identifier	pseg		5842507	0					
ANR	5844413	Identifier	pt		5842507	1					
ANR	5844414	Identifier	y		5842507	1					
ANR	5844415	ExpressionStatement	udx = sx - x	752:16:30039:30051	5842507	2	True				
ANR	5844416	AssignmentExpression	udx = sx - x		5842507	0		=			
ANR	5844417	Identifier	udx		5842507	0					
ANR	5844418	AdditiveExpression	sx - x		5842507	1		-			
ANR	5844419	Identifier	sx		5842507	0					
ANR	5844420	Identifier	x		5842507	1					
ANR	5844421	ExpressionStatement	udy = sy - y	753:16:30069:30081	5842507	3	True				
ANR	5844422	AssignmentExpression	udy = sy - y		5842507	0		=			
ANR	5844423	Identifier	udy		5842507	0					
ANR	5844424	AdditiveExpression	sy - y		5842507	1		-			
ANR	5844425	Identifier	sy		5842507	0					
ANR	5844426	Identifier	y		5842507	1					
ANR	5844427	ExpressionStatement	is_dash_segment = true	754:16:30099:30121	5842507	4	True				
ANR	5844428	AssignmentExpression	is_dash_segment = true		5842507	0		=			
ANR	5844429	Identifier	is_dash_segment		5842507	0					
ANR	5844430	Identifier	true		5842507	1					
ANR	5844431	ElseStatement	else		5842507	0					
ANR	5844432	CompoundStatement		333:19:13647:13647	5842507	0					
ANR	5844433	ExpressionStatement	sx = pseg -> pt . x	756:16:30160:30175	5842507	0	True				
ANR	5844434	AssignmentExpression	sx = pseg -> pt . x		5842507	0		=			
ANR	5844435	Identifier	sx		5842507	0					
ANR	5844436	MemberAccess	pseg -> pt . x		5842507	1					
ANR	5844437	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844438	Identifier	pseg		5842507	0					
ANR	5844439	Identifier	pt		5842507	1					
ANR	5844440	Identifier	x		5842507	1					
ANR	5844441	ExpressionStatement	sy = pseg -> pt . y	757:16:30193:30208	5842507	1	True				
ANR	5844442	AssignmentExpression	sy = pseg -> pt . y		5842507	0		=			
ANR	5844443	Identifier	sy		5842507	0					
ANR	5844444	MemberAccess	pseg -> pt . y		5842507	1					
ANR	5844445	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844446	Identifier	pseg		5842507	0					
ANR	5844447	Identifier	pt		5842507	1					
ANR	5844448	Identifier	y		5842507	1					
ANR	5844449	ExpressionStatement	udx = sx - x	758:16:30226:30238	5842507	2	True				
ANR	5844450	AssignmentExpression	udx = sx - x		5842507	0		=			
ANR	5844451	Identifier	udx		5842507	0					
ANR	5844452	AdditiveExpression	sx - x		5842507	1		-			
ANR	5844453	Identifier	sx		5842507	0					
ANR	5844454	Identifier	x		5842507	1					
ANR	5844455	ExpressionStatement	udy = sy - y	759:16:30256:30268	5842507	3	True				
ANR	5844456	AssignmentExpression	udy = sy - y		5842507	0		=			
ANR	5844457	Identifier	udy		5842507	0					
ANR	5844458	AdditiveExpression	sy - y		5842507	1		-			
ANR	5844459	Identifier	sy		5842507	0					
ANR	5844460	Identifier	y		5842507	1					
ANR	5844461	ExpressionStatement	zero_length &= ( ( udx | udy ) == 0 )	761:12:30296:30329	5842507	7	True				
ANR	5844462	AssignmentExpression	zero_length &= ( ( udx | udy ) == 0 )		5842507	0		&=			
ANR	5844463	Identifier	zero_length		5842507	0					
ANR	5844464	EqualityExpression	( udx | udy ) == 0		5842507	1		==			
ANR	5844465	InclusiveOrExpression	udx | udy		5842507	0		|			
ANR	5844466	Identifier	udx		5842507	0					
ANR	5844467	Identifier	udy		5842507	1					
ANR	5844468	PrimaryExpression	0		5842507	1					
ANR	5844469	ExpressionStatement	"pl . o . p . x = x , pl . o . p . y = y"	762:12:30343:30369	5842507	8	True				
ANR	5844470	Expression	"pl . o . p . x = x , pl . o . p . y = y"		5842507	0					
ANR	5844471	AssignmentExpression	pl . o . p . x = x		5842507	0		=			
ANR	5844472	MemberAccess	pl . o . p . x		5842507	0					
ANR	5844473	MemberAccess	pl . o . p		5842507	0					
ANR	5844474	MemberAccess	pl . o		5842507	0					
ANR	5844475	Identifier	pl		5842507	0					
ANR	5844476	Identifier	o		5842507	1					
ANR	5844477	Identifier	p		5842507	1					
ANR	5844478	Identifier	x		5842507	1					
ANR	5844479	Identifier	x		5842507	1					
ANR	5844480	AssignmentExpression	pl . o . p . y = y		5842507	1		=			
ANR	5844481	MemberAccess	pl . o . p . y		5842507	0					
ANR	5844482	MemberAccess	pl . o . p		5842507	0					
ANR	5844483	MemberAccess	pl . o		5842507	0					
ANR	5844484	Identifier	pl		5842507	0					
ANR	5844485	Identifier	o		5842507	1					
ANR	5844486	Identifier	p		5842507	1					
ANR	5844487	Identifier	y		5842507	1					
ANR	5844488	Identifier	y		5842507	1					
ANR	5844489	Label	d :	763:10:30381:30382	5842507	9	True				
ANR	5844490	Identifier	d		5842507	0					
ANR	5844491	ExpressionStatement	flags = ( ( ( pseg_notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0 ) | ( ( pseg_notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( pseg_notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc ) )	763:12:30383:30697	5842507	10	True				
ANR	5844492	AssignmentExpression	flags = ( ( ( pseg_notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0 ) | ( ( pseg_notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( pseg_notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc ) )		5842507	0		=			
ANR	5844493	Identifier	flags		5842507	0					
ANR	5844494	InclusiveOrExpression	( ( pseg_notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0 ) | ( ( pseg_notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( pseg_notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc )		5842507	1		|			
ANR	5844495	ConditionalExpression	( pseg_notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0		5842507	0					
ANR	5844496	Condition	pseg_notes & sn_not_first		5842507	0					
ANR	5844497	BitAndExpression	pseg_notes & sn_not_first		5842507	0		&			
ANR	5844498	Identifier	pseg_notes		5842507	0					
ANR	5844499	Identifier	sn_not_first		5842507	1					
ANR	5844500	InclusiveOrExpression	( flags & nf_all_from_arc ) | nf_some_from_arc		5842507	1		|			
ANR	5844501	BitAndExpression	flags & nf_all_from_arc		5842507	0		&			
ANR	5844502	Identifier	flags		5842507	0					
ANR	5844503	Identifier	nf_all_from_arc		5842507	1					
ANR	5844504	Identifier	nf_some_from_arc		5842507	1					
ANR	5844505	PrimaryExpression	0		5842507	2					
ANR	5844506	InclusiveOrExpression	( ( pseg_notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( pseg_notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc )		5842507	1		|			
ANR	5844507	ConditionalExpression	( pseg_notes & sn_dash_head ) ? nf_dash_head : 0		5842507	0					
ANR	5844508	Condition	pseg_notes & sn_dash_head		5842507	0					
ANR	5844509	BitAndExpression	pseg_notes & sn_dash_head		5842507	0		&			
ANR	5844510	Identifier	pseg_notes		5842507	0					
ANR	5844511	Identifier	sn_dash_head		5842507	1					
ANR	5844512	Identifier	nf_dash_head		5842507	1					
ANR	5844513	PrimaryExpression	0		5842507	2					
ANR	5844514	InclusiveOrExpression	( ( pseg_notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc )		5842507	1		|			
ANR	5844515	ConditionalExpression	( pseg_notes & sn_dash_tail ) ? nf_dash_tail : 0		5842507	0					
ANR	5844516	Condition	pseg_notes & sn_dash_tail		5842507	0					
ANR	5844517	BitAndExpression	pseg_notes & sn_dash_tail		5842507	0		&			
ANR	5844518	Identifier	pseg_notes		5842507	0					
ANR	5844519	Identifier	sn_dash_tail		5842507	1					
ANR	5844520	Identifier	nf_dash_tail		5842507	1					
ANR	5844521	PrimaryExpression	0		5842507	2					
ANR	5844522	BitAndExpression	flags & ~nf_all_from_arc		5842507	1		&			
ANR	5844523	Identifier	flags		5842507	0					
ANR	5844524	Identifier	~nf_all_from_arc		5842507	1					
ANR	5844525	ExpressionStatement	"pl . e . p . x = sx , pl . e . p . y = sy"	768:12:30711:30739	5842507	11	True				
ANR	5844526	Expression	"pl . e . p . x = sx , pl . e . p . y = sy"		5842507	0					
ANR	5844527	AssignmentExpression	pl . e . p . x = sx		5842507	0		=			
ANR	5844528	MemberAccess	pl . e . p . x		5842507	0					
ANR	5844529	MemberAccess	pl . e . p		5842507	0					
ANR	5844530	MemberAccess	pl . e		5842507	0					
ANR	5844531	Identifier	pl		5842507	0					
ANR	5844532	Identifier	e		5842507	1					
ANR	5844533	Identifier	p		5842507	1					
ANR	5844534	Identifier	x		5842507	1					
ANR	5844535	Identifier	sx		5842507	1					
ANR	5844536	AssignmentExpression	pl . e . p . y = sy		5842507	1		=			
ANR	5844537	MemberAccess	pl . e . p . y		5842507	0					
ANR	5844538	MemberAccess	pl . e . p		5842507	0					
ANR	5844539	MemberAccess	pl . e		5842507	0					
ANR	5844540	Identifier	pl		5842507	0					
ANR	5844541	Identifier	e		5842507	1					
ANR	5844542	Identifier	p		5842507	1					
ANR	5844543	Identifier	y		5842507	1					
ANR	5844544	Identifier	sy		5842507	1					
ANR	5844545	IfStatement	if ( ! ( udx | udy ) || pseg -> type == s_dash || pseg -> type == s_gap )		5842507	12					
ANR	5844546	Condition	! ( udx | udy ) || pseg -> type == s_dash || pseg -> type == s_gap	769:16:30757:30815	5842507	0	True				
ANR	5844547	OrExpression	! ( udx | udy ) || pseg -> type == s_dash || pseg -> type == s_gap		5842507	0		||			
ANR	5844548	UnaryOperationExpression	! ( udx | udy )		5842507	0					
ANR	5844549	UnaryOperator	!		5842507	0					
ANR	5844550	InclusiveOrExpression	udx | udy		5842507	1		|			
ANR	5844551	Identifier	udx		5842507	0					
ANR	5844552	Identifier	udy		5842507	1					
ANR	5844553	OrExpression	pseg -> type == s_dash || pseg -> type == s_gap		5842507	1		||			
ANR	5844554	EqualityExpression	pseg -> type == s_dash		5842507	0		==			
ANR	5844555	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844556	Identifier	pseg		5842507	0					
ANR	5844557	Identifier	type		5842507	1					
ANR	5844558	Identifier	s_dash		5842507	1					
ANR	5844559	EqualityExpression	pseg -> type == s_gap		5842507	1		==			
ANR	5844560	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844561	Identifier	pseg		5842507	0					
ANR	5844562	Identifier	type		5842507	1					
ANR	5844563	Identifier	s_gap		5842507	1					
ANR	5844564	CompoundStatement		347:77:14323:14323	5842507	1					
ANR	5844565	IfStatement	if ( index != 0 && pseg -> type != s_dash && pseg -> type != s_gap )		5842507	0					
ANR	5844566	Condition	index != 0 && pseg -> type != s_dash && pseg -> type != s_gap	775:20:31090:31146	5842507	0	True				
ANR	5844567	AndExpression	index != 0 && pseg -> type != s_dash && pseg -> type != s_gap		5842507	0		&&			
ANR	5844568	EqualityExpression	index != 0		5842507	0		!=			
ANR	5844569	Identifier	index		5842507	0					
ANR	5844570	PrimaryExpression	0		5842507	1					
ANR	5844571	AndExpression	pseg -> type != s_dash && pseg -> type != s_gap		5842507	1		&&			
ANR	5844572	EqualityExpression	pseg -> type != s_dash		5842507	0		!=			
ANR	5844573	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844574	Identifier	pseg		5842507	0					
ANR	5844575	Identifier	type		5842507	1					
ANR	5844576	Identifier	s_dash		5842507	1					
ANR	5844577	EqualityExpression	pseg -> type != s_gap		5842507	1		!=			
ANR	5844578	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844579	Identifier	pseg		5842507	0					
ANR	5844580	Identifier	type		5842507	1					
ANR	5844581	Identifier	s_gap		5842507	1					
ANR	5844582	CompoundStatement		354:16:14670:14670	5842507	1					
ANR	5844583	IfStatement	if ( pseg -> next == NULL || pseg -> next -> type == s_start )		5842507	0					
ANR	5844584	Condition	pseg -> next == NULL || pseg -> next -> type == s_start	777:24:31191:31239	5842507	0	True				
ANR	5844585	OrExpression	pseg -> next == NULL || pseg -> next -> type == s_start		5842507	0		||			
ANR	5844586	EqualityExpression	pseg -> next == NULL		5842507	0		==			
ANR	5844587	PtrMemberAccess	pseg -> next		5842507	0					
ANR	5844588	Identifier	pseg		5842507	0					
ANR	5844589	Identifier	next		5842507	1					
ANR	5844590	Identifier	NULL		5842507	1					
ANR	5844591	EqualityExpression	pseg -> next -> type == s_start		5842507	1		==			
ANR	5844592	PtrMemberAccess	pseg -> next -> type		5842507	0					
ANR	5844593	PtrMemberAccess	pseg -> next		5842507	0					
ANR	5844594	Identifier	pseg		5842507	0					
ANR	5844595	Identifier	next		5842507	1					
ANR	5844596	Identifier	type		5842507	1					
ANR	5844597	Identifier	s_start		5842507	1					
ANR	5844598	ContinueStatement	continue ;	778:24:31266:31274	5842507	1	True				
ANR	5844599	ExpressionStatement	pseg = pseg -> next	779:20:31296:31313	5842507	1	True				
ANR	5844600	AssignmentExpression	pseg = pseg -> next		5842507	0		=			
ANR	5844601	Identifier	pseg		5842507	0					
ANR	5844602	PtrMemberAccess	pseg -> next		5842507	1					
ANR	5844603	Identifier	pseg		5842507	0					
ANR	5844604	Identifier	next		5842507	1					
ANR	5844605	ExpressionStatement	pseg_notes = ( ( ( pseg_notes & sn_not_first ) == 0 ) ? ( pseg -> notes & ~sn_not_first ) : pseg -> notes )	785:20:31702:31865	5842507	2	True				
ANR	5844606	AssignmentExpression	pseg_notes = ( ( ( pseg_notes & sn_not_first ) == 0 ) ? ( pseg -> notes & ~sn_not_first ) : pseg -> notes )		5842507	0		=			
ANR	5844607	Identifier	pseg_notes		5842507	0					
ANR	5844608	ConditionalExpression	( ( pseg_notes & sn_not_first ) == 0 ) ? ( pseg -> notes & ~sn_not_first ) : pseg -> notes		5842507	1					
ANR	5844609	Condition	( pseg_notes & sn_not_first ) == 0		5842507	0					
ANR	5844610	EqualityExpression	( pseg_notes & sn_not_first ) == 0		5842507	0		==			
ANR	5844611	BitAndExpression	pseg_notes & sn_not_first		5842507	0		&			
ANR	5844612	Identifier	pseg_notes		5842507	0					
ANR	5844613	Identifier	sn_not_first		5842507	1					
ANR	5844614	PrimaryExpression	0		5842507	1					
ANR	5844615	BitAndExpression	pseg -> notes & ~sn_not_first		5842507	1		&			
ANR	5844616	PtrMemberAccess	pseg -> notes		5842507	0					
ANR	5844617	Identifier	pseg		5842507	0					
ANR	5844618	Identifier	notes		5842507	1					
ANR	5844619	Identifier	~sn_not_first		5842507	1					
ANR	5844620	PtrMemberAccess	pseg -> notes		5842507	2					
ANR	5844621	Identifier	pseg		5842507	0					
ANR	5844622	Identifier	notes		5842507	1					
ANR	5844623	GotoStatement	goto d2 ;	788:20:31887:31894	5842507	3	True				
ANR	5844624	Identifier	d2		5842507	0					
ANR	5844625	WhileStatement	while ( ( pseg = pseg -> next ) != 0 && pseg -> type != s_start )		5842507	1					
ANR	5844626	Condition	( pseg = pseg -> next ) != 0 && pseg -> type != s_start	791:23:31991:32062	5842507	0	True				
ANR	5844627	AndExpression	( pseg = pseg -> next ) != 0 && pseg -> type != s_start		5842507	0		&&			
ANR	5844628	EqualityExpression	( pseg = pseg -> next ) != 0		5842507	0		!=			
ANR	5844629	AssignmentExpression	pseg = pseg -> next		5842507	0		=			
ANR	5844630	Identifier	pseg		5842507	0					
ANR	5844631	PtrMemberAccess	pseg -> next		5842507	1					
ANR	5844632	Identifier	pseg		5842507	0					
ANR	5844633	Identifier	next		5842507	1					
ANR	5844634	PrimaryExpression	0		5842507	1					
ANR	5844635	EqualityExpression	pseg -> type != s_start		5842507	1		!=			
ANR	5844636	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844637	Identifier	pseg		5842507	0					
ANR	5844638	Identifier	type		5842507	1					
ANR	5844639	Identifier	s_start		5842507	1					
ANR	5844640	CompoundStatement		371:22:15591:15591	5842507	1					
ANR	5844641	IfStatement	if ( is_dash_segment )		5842507	0					
ANR	5844642	Condition	is_dash_segment	794:24:32112:32126	5842507	0	True				
ANR	5844643	Identifier	is_dash_segment		5842507	0					
ANR	5844644	BreakStatement	break ;	795:24:32153:32158	5842507	1	True				
ANR	5844645	IfStatement	if ( pseg -> type == s_dash || pseg -> type == s_gap )		5842507	1					
ANR	5844646	Condition	pseg -> type == s_dash || pseg -> type == s_gap	796:24:32184:32226	5842507	0	True				
ANR	5844647	OrExpression	pseg -> type == s_dash || pseg -> type == s_gap		5842507	0		||			
ANR	5844648	EqualityExpression	pseg -> type == s_dash		5842507	0		==			
ANR	5844649	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844650	Identifier	pseg		5842507	0					
ANR	5844651	Identifier	type		5842507	1					
ANR	5844652	Identifier	s_dash		5842507	1					
ANR	5844653	EqualityExpression	pseg -> type == s_gap		5842507	1		==			
ANR	5844654	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844655	Identifier	pseg		5842507	0					
ANR	5844656	Identifier	type		5842507	1					
ANR	5844657	Identifier	s_gap		5842507	1					
ANR	5844658	GotoStatement	goto d1 ;	797:24:32253:32260	5842507	1	True				
ANR	5844659	Identifier	d1		5842507	0					
ANR	5844660	ExpressionStatement	"sx = pseg -> pt . x , udx = sx - x"	798:20:32282:32311	5842507	2	True				
ANR	5844661	Expression	"sx = pseg -> pt . x , udx = sx - x"		5842507	0					
ANR	5844662	AssignmentExpression	sx = pseg -> pt . x		5842507	0		=			
ANR	5844663	Identifier	sx		5842507	0					
ANR	5844664	MemberAccess	pseg -> pt . x		5842507	1					
ANR	5844665	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844666	Identifier	pseg		5842507	0					
ANR	5844667	Identifier	pt		5842507	1					
ANR	5844668	Identifier	x		5842507	1					
ANR	5844669	AssignmentExpression	udx = sx - x		5842507	1		=			
ANR	5844670	Identifier	udx		5842507	0					
ANR	5844671	AdditiveExpression	sx - x		5842507	1		-			
ANR	5844672	Identifier	sx		5842507	0					
ANR	5844673	Identifier	x		5842507	1					
ANR	5844674	ExpressionStatement	"sy = pseg -> pt . y , udy = sy - y"	799:20:32333:32362	5842507	3	True				
ANR	5844675	Expression	"sy = pseg -> pt . y , udy = sy - y"		5842507	0					
ANR	5844676	AssignmentExpression	sy = pseg -> pt . y		5842507	0		=			
ANR	5844677	Identifier	sy		5842507	0					
ANR	5844678	MemberAccess	pseg -> pt . y		5842507	1					
ANR	5844679	PtrMemberAccess	pseg -> pt		5842507	0					
ANR	5844680	Identifier	pseg		5842507	0					
ANR	5844681	Identifier	pt		5842507	1					
ANR	5844682	Identifier	y		5842507	1					
ANR	5844683	AssignmentExpression	udy = sy - y		5842507	1		=			
ANR	5844684	Identifier	udy		5842507	0					
ANR	5844685	AdditiveExpression	sy - y		5842507	1		-			
ANR	5844686	Identifier	sy		5842507	0					
ANR	5844687	Identifier	y		5842507	1					
ANR	5844688	IfStatement	if ( udx | udy )		5842507	4					
ANR	5844689	Condition	udx | udy	800:24:32388:32396	5842507	0	True				
ANR	5844690	InclusiveOrExpression	udx | udy		5842507	0		|			
ANR	5844691	Identifier	udx		5842507	0					
ANR	5844692	Identifier	udy		5842507	1					
ANR	5844693	CompoundStatement		378:35:15904:15904	5842507	1					
ANR	5844694	ExpressionStatement	zero_length = false	801:24:32425:32444	5842507	0	True				
ANR	5844695	AssignmentExpression	zero_length = false		5842507	0		=			
ANR	5844696	Identifier	zero_length		5842507	0					
ANR	5844697	Identifier	false		5842507	1					
ANR	5844698	GotoStatement	goto d ;	802:24:32470:32476	5842507	1	True				
ANR	5844699	Identifier	d		5842507	0					
ANR	5844700	IfStatement	if ( pgs_lp -> dot_length == 0 && pgs_lp -> start_cap != gs_cap_round && pgs_lp -> end_cap != gs_cap_round && ! is_dash_segment )		5842507	2					
ANR	5844701	Condition	pgs_lp -> dot_length == 0 && pgs_lp -> start_cap != gs_cap_round && pgs_lp -> end_cap != gs_cap_round && ! is_dash_segment	805:20:32538:32712	5842507	0	True				
ANR	5844702	AndExpression	pgs_lp -> dot_length == 0 && pgs_lp -> start_cap != gs_cap_round && pgs_lp -> end_cap != gs_cap_round && ! is_dash_segment		5842507	0		&&			
ANR	5844703	EqualityExpression	pgs_lp -> dot_length == 0		5842507	0		==			
ANR	5844704	PtrMemberAccess	pgs_lp -> dot_length		5842507	0					
ANR	5844705	Identifier	pgs_lp		5842507	0					
ANR	5844706	Identifier	dot_length		5842507	1					
ANR	5844707	PrimaryExpression	0		5842507	1					
ANR	5844708	AndExpression	pgs_lp -> start_cap != gs_cap_round && pgs_lp -> end_cap != gs_cap_round && ! is_dash_segment		5842507	1		&&			
ANR	5844709	EqualityExpression	pgs_lp -> start_cap != gs_cap_round		5842507	0		!=			
ANR	5844710	PtrMemberAccess	pgs_lp -> start_cap		5842507	0					
ANR	5844711	Identifier	pgs_lp		5842507	0					
ANR	5844712	Identifier	start_cap		5842507	1					
ANR	5844713	Identifier	gs_cap_round		5842507	1					
ANR	5844714	AndExpression	pgs_lp -> end_cap != gs_cap_round && ! is_dash_segment		5842507	1		&&			
ANR	5844715	EqualityExpression	pgs_lp -> end_cap != gs_cap_round		5842507	0		!=			
ANR	5844716	PtrMemberAccess	pgs_lp -> end_cap		5842507	0					
ANR	5844717	Identifier	pgs_lp		5842507	0					
ANR	5844718	Identifier	end_cap		5842507	1					
ANR	5844719	Identifier	gs_cap_round		5842507	1					
ANR	5844720	UnaryOperationExpression	! is_dash_segment		5842507	1					
ANR	5844721	UnaryOperator	!		5842507	0					
ANR	5844722	Identifier	is_dash_segment		5842507	1					
ANR	5844723	CompoundStatement		386:38:16220:16220	5842507	1					
ANR	5844724	BreakStatement	break ;	813:20:33040:33045	5842507	0	True				
ANR	5844725	CompoundStatement		404:20:17232:17263	5842507	3					
ANR	5844726	IdentifierDeclStatement	const segment * end = psub -> last ;	826:20:33727:33758	5842507	0	True				
ANR	5844727	IdentifierDecl	* end = psub -> last		5842507	0					
ANR	5844728	IdentifierDeclType	const segment *		5842507	0					
ANR	5844729	Identifier	end		5842507	1					
ANR	5844730	AssignmentExpression	* end = psub -> last		5842507	2		=			
ANR	5844731	Identifier	end		5842507	0					
ANR	5844732	PtrMemberAccess	psub -> last		5842507	1					
ANR	5844733	Identifier	psub		5842507	0					
ANR	5844734	Identifier	last		5842507	1					
ANR	5844735	IfStatement	if ( is_dash_segment )		5842507	1					
ANR	5844736	Condition	is_dash_segment	828:24:33785:33799	5842507	0	True				
ANR	5844737	Identifier	is_dash_segment		5842507	0					
ANR	5844738	CompoundStatement		406:41:17307:17307	5842507	1					
ANR	5844739	ElseStatement	else		5842507	0					
ANR	5844740	IfStatement	if ( end != 0 && ( end -> pt . x != x || end -> pt . y != y ) )		5842507	0					
ANR	5844741	Condition	end != 0 && ( end -> pt . x != x || end -> pt . y != y )	830:31:33874:33919	5842507	0	True				
ANR	5844742	AndExpression	end != 0 && ( end -> pt . x != x || end -> pt . y != y )		5842507	0		&&			
ANR	5844743	EqualityExpression	end != 0		5842507	0		!=			
ANR	5844744	Identifier	end		5842507	0					
ANR	5844745	PrimaryExpression	0		5842507	1					
ANR	5844746	OrExpression	end -> pt . x != x || end -> pt . y != y		5842507	1		||			
ANR	5844747	EqualityExpression	end -> pt . x != x		5842507	0		!=			
ANR	5844748	MemberAccess	end -> pt . x		5842507	0					
ANR	5844749	PtrMemberAccess	end -> pt		5842507	0					
ANR	5844750	Identifier	end		5842507	0					
ANR	5844751	Identifier	pt		5842507	1					
ANR	5844752	Identifier	x		5842507	1					
ANR	5844753	Identifier	x		5842507	1					
ANR	5844754	EqualityExpression	end -> pt . y != y		5842507	1		!=			
ANR	5844755	MemberAccess	end -> pt . y		5842507	0					
ANR	5844756	PtrMemberAccess	end -> pt		5842507	0					
ANR	5844757	Identifier	end		5842507	0					
ANR	5844758	Identifier	pt		5842507	1					
ANR	5844759	Identifier	y		5842507	1					
ANR	5844760	Identifier	y		5842507	1					
ANR	5844761	ExpressionStatement	"sx = end -> pt . x , sy = end -> pt . y , udx = sx - x , udy = sy - y"	831:24:33946:34004	5842507	1	True				
ANR	5844762	Expression	"sx = end -> pt . x , sy = end -> pt . y , udx = sx - x , udy = sy - y"		5842507	0					
ANR	5844763	AssignmentExpression	sx = end -> pt . x		5842507	0		=			
ANR	5844764	Identifier	sx		5842507	0					
ANR	5844765	MemberAccess	end -> pt . x		5842507	1					
ANR	5844766	PtrMemberAccess	end -> pt		5842507	0					
ANR	5844767	Identifier	end		5842507	0					
ANR	5844768	Identifier	pt		5842507	1					
ANR	5844769	Identifier	x		5842507	1					
ANR	5844770	Expression	"sy = end -> pt . y , udx = sx - x , udy = sy - y"		5842507	1					
ANR	5844771	AssignmentExpression	sy = end -> pt . y		5842507	0		=			
ANR	5844772	Identifier	sy		5842507	0					
ANR	5844773	MemberAccess	end -> pt . y		5842507	1					
ANR	5844774	PtrMemberAccess	end -> pt		5842507	0					
ANR	5844775	Identifier	end		5842507	0					
ANR	5844776	Identifier	pt		5842507	1					
ANR	5844777	Identifier	y		5842507	1					
ANR	5844778	Expression	"udx = sx - x , udy = sy - y"		5842507	1					
ANR	5844779	AssignmentExpression	udx = sx - x		5842507	0		=			
ANR	5844780	Identifier	udx		5842507	0					
ANR	5844781	AdditiveExpression	sx - x		5842507	1		-			
ANR	5844782	Identifier	sx		5842507	0					
ANR	5844783	Identifier	x		5842507	1					
ANR	5844784	AssignmentExpression	udy = sy - y		5842507	1		=			
ANR	5844785	Identifier	udy		5842507	0					
ANR	5844786	AdditiveExpression	sy - y		5842507	1		-			
ANR	5844787	Identifier	sy		5842507	0					
ANR	5844788	Identifier	y		5842507	1					
ANR	5844789	IfStatement	if ( ( udx | udy ) == 0 )		5842507	4					
ANR	5844790	Condition	( udx | udy ) == 0	837:20:34209:34224	5842507	0	True				
ANR	5844791	EqualityExpression	( udx | udy ) == 0		5842507	0		==			
ANR	5844792	InclusiveOrExpression	udx | udy		5842507	0		|			
ANR	5844793	Identifier	udx		5842507	0					
ANR	5844794	Identifier	udy		5842507	1					
ANR	5844795	PrimaryExpression	0		5842507	1					
ANR	5844796	CompoundStatement		415:38:17732:17732	5842507	1					
ANR	5844797	IfStatement	if ( is_fzero ( pgs_lp -> dot_orientation . xy ) )		5842507	0					
ANR	5844798	Condition	is_fzero ( pgs_lp -> dot_orientation . xy )	838:24:34253:34288	5842507	0	True				
ANR	5844799	CallExpression	is_fzero ( pgs_lp -> dot_orientation . xy )		5842507	0					
ANR	5844800	Callee	is_fzero		5842507	0					
ANR	5844801	Identifier	is_fzero		5842507	0					
ANR	5844802	ArgumentList	pgs_lp -> dot_orientation . xy		5842507	1					
ANR	5844803	Argument	pgs_lp -> dot_orientation . xy		5842507	0					
ANR	5844804	MemberAccess	pgs_lp -> dot_orientation . xy		5842507	0					
ANR	5844805	PtrMemberAccess	pgs_lp -> dot_orientation		5842507	0					
ANR	5844806	Identifier	pgs_lp		5842507	0					
ANR	5844807	Identifier	dot_orientation		5842507	1					
ANR	5844808	Identifier	xy		5842507	1					
ANR	5844809	CompoundStatement		416:62:17796:17796	5842507	1					
ANR	5844810	ExpressionStatement	udx = fixed_1	840:24:34384:34397	5842507	0	True				
ANR	5844811	AssignmentExpression	udx = fixed_1		5842507	0		=			
ANR	5844812	Identifier	udx		5842507	0					
ANR	5844813	Identifier	fixed_1		5842507	1					
ANR	5844814	ElseStatement	else		5842507	0					
ANR	5844815	CompoundStatement		419:27:17931:17931	5842507	0					
ANR	5844816	ExpressionStatement	udy = fixed_1	843:24:34520:34533	5842507	0	True				
ANR	5844817	AssignmentExpression	udy = fixed_1		5842507	0		=			
ANR	5844818	Identifier	udy		5842507	0					
ANR	5844819	Identifier	fixed_1		5842507	1					
ANR	5844820	IfStatement	if ( sx == x && sy == y && ( pseg == NULL || pseg -> type == s_start ) )		5842507	5					
ANR	5844821	Condition	sx == x && sy == y && ( pseg == NULL || pseg -> type == s_start )	846:20:34595:34655	5842507	0	True				
ANR	5844822	AndExpression	sx == x && sy == y && ( pseg == NULL || pseg -> type == s_start )		5842507	0		&&			
ANR	5844823	EqualityExpression	sx == x		5842507	0		==			
ANR	5844824	Identifier	sx		5842507	0					
ANR	5844825	Identifier	x		5842507	1					
ANR	5844826	AndExpression	sy == y && ( pseg == NULL || pseg -> type == s_start )		5842507	1		&&			
ANR	5844827	EqualityExpression	sy == y		5842507	0		==			
ANR	5844828	Identifier	sy		5842507	0					
ANR	5844829	Identifier	y		5842507	1					
ANR	5844830	OrExpression	pseg == NULL || pseg -> type == s_start		5842507	1		||			
ANR	5844831	EqualityExpression	pseg == NULL		5842507	0		==			
ANR	5844832	Identifier	pseg		5842507	0					
ANR	5844833	Identifier	NULL		5842507	1					
ANR	5844834	EqualityExpression	pseg -> type == s_start		5842507	1		==			
ANR	5844835	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5844836	Identifier	pseg		5842507	0					
ANR	5844837	Identifier	type		5842507	1					
ANR	5844838	Identifier	s_start		5842507	1					
ANR	5844839	CompoundStatement		427:20:18305:18321	5842507	1					
ANR	5844840	IdentifierDeclStatement	"double scale = device_dot_length / hypot ( ( double ) udx , ( double ) udy ) ;"	847:20:34680:34778	5842507	0	True				
ANR	5844841	IdentifierDecl	"scale = device_dot_length / hypot ( ( double ) udx , ( double ) udy )"		5842507	0					
ANR	5844842	IdentifierDeclType	double		5842507	0					
ANR	5844843	Identifier	scale		5842507	1					
ANR	5844844	AssignmentExpression	"scale = device_dot_length / hypot ( ( double ) udx , ( double ) udy )"		5842507	2		=			
ANR	5844845	Identifier	scale		5842507	0					
ANR	5844846	MultiplicativeExpression	"device_dot_length / hypot ( ( double ) udx , ( double ) udy )"		5842507	1		/			
ANR	5844847	Identifier	device_dot_length		5842507	0					
ANR	5844848	CallExpression	"hypot ( ( double ) udx , ( double ) udy )"		5842507	1					
ANR	5844849	Callee	hypot		5842507	0					
ANR	5844850	Identifier	hypot		5842507	0					
ANR	5844851	ArgumentList	( double ) udx		5842507	1					
ANR	5844852	Argument	( double ) udx		5842507	0					
ANR	5844853	CastExpression	( double ) udx		5842507	0					
ANR	5844854	CastTarget	double		5842507	0					
ANR	5844855	Identifier	udx		5842507	1					
ANR	5844856	Argument	( double ) udy		5842507	1					
ANR	5844857	CastExpression	( double ) udy		5842507	0					
ANR	5844858	CastTarget	double		5842507	0					
ANR	5844859	Identifier	udy		5842507	1					
ANR	5844860	IdentifierDeclStatement	"fixed udx1 , udy1 ;"	849:20:34800:34816	5842507	1	True				
ANR	5844861	IdentifierDecl	udx1		5842507	0					
ANR	5844862	IdentifierDeclType	fixed		5842507	0					
ANR	5844863	Identifier	udx1		5842507	1					
ANR	5844864	IdentifierDecl	udy1		5842507	1					
ANR	5844865	IdentifierDeclType	fixed		5842507	0					
ANR	5844866	Identifier	udy1		5842507	1					
ANR	5844867	IfStatement	if ( ! always_thin && ( pgs_lp -> start_cap == gs_cap_butt || pgs_lp -> end_cap == gs_cap_butt || pgs_lp -> dash_cap == gs_cap_butt ) )		5842507	2					
ANR	5844868	Condition	! always_thin && ( pgs_lp -> start_cap == gs_cap_butt || pgs_lp -> end_cap == gs_cap_butt || pgs_lp -> dash_cap == gs_cap_butt )	856:24:35141:35344	5842507	0	True				
ANR	5844869	AndExpression	! always_thin && ( pgs_lp -> start_cap == gs_cap_butt || pgs_lp -> end_cap == gs_cap_butt || pgs_lp -> dash_cap == gs_cap_butt )		5842507	0		&&			
ANR	5844870	UnaryOperationExpression	! always_thin		5842507	0					
ANR	5844871	UnaryOperator	!		5842507	0					
ANR	5844872	Identifier	always_thin		5842507	1					
ANR	5844873	OrExpression	pgs_lp -> start_cap == gs_cap_butt || pgs_lp -> end_cap == gs_cap_butt || pgs_lp -> dash_cap == gs_cap_butt		5842507	1		||			
ANR	5844874	EqualityExpression	pgs_lp -> start_cap == gs_cap_butt		5842507	0		==			
ANR	5844875	PtrMemberAccess	pgs_lp -> start_cap		5842507	0					
ANR	5844876	Identifier	pgs_lp		5842507	0					
ANR	5844877	Identifier	start_cap		5842507	1					
ANR	5844878	Identifier	gs_cap_butt		5842507	1					
ANR	5844879	OrExpression	pgs_lp -> end_cap == gs_cap_butt || pgs_lp -> dash_cap == gs_cap_butt		5842507	1		||			
ANR	5844880	EqualityExpression	pgs_lp -> end_cap == gs_cap_butt		5842507	0		==			
ANR	5844881	PtrMemberAccess	pgs_lp -> end_cap		5842507	0					
ANR	5844882	Identifier	pgs_lp		5842507	0					
ANR	5844883	Identifier	end_cap		5842507	1					
ANR	5844884	Identifier	gs_cap_butt		5842507	1					
ANR	5844885	EqualityExpression	pgs_lp -> dash_cap == gs_cap_butt		5842507	1		==			
ANR	5844886	PtrMemberAccess	pgs_lp -> dash_cap		5842507	0					
ANR	5844887	Identifier	pgs_lp		5842507	0					
ANR	5844888	Identifier	dash_cap		5842507	1					
ANR	5844889	Identifier	gs_cap_butt		5842507	1					
ANR	5844890	CompoundStatement		437:24:18878:18922	5842507	1					
ANR	5844891	IdentifierDeclStatement	"fixed dmax = max ( any_abs ( udx ) , any_abs ( udy ) ) ;"	859:24:35373:35417	5842507	0	True				
ANR	5844892	IdentifierDecl	"dmax = max ( any_abs ( udx ) , any_abs ( udy ) )"		5842507	0					
ANR	5844893	IdentifierDeclType	fixed		5842507	0					
ANR	5844894	Identifier	dmax		5842507	1					
ANR	5844895	AssignmentExpression	"dmax = max ( any_abs ( udx ) , any_abs ( udy ) )"		5842507	2		=			
ANR	5844896	Identifier	dmax		5842507	0					
ANR	5844897	CallExpression	"max ( any_abs ( udx ) , any_abs ( udy ) )"		5842507	1					
ANR	5844898	Callee	max		5842507	0					
ANR	5844899	Identifier	max		5842507	0					
ANR	5844900	ArgumentList	any_abs ( udx )		5842507	1					
ANR	5844901	Argument	any_abs ( udx )		5842507	0					
ANR	5844902	CallExpression	any_abs ( udx )		5842507	0					
ANR	5844903	Callee	any_abs		5842507	0					
ANR	5844904	Identifier	any_abs		5842507	0					
ANR	5844905	ArgumentList	udx		5842507	1					
ANR	5844906	Argument	udx		5842507	0					
ANR	5844907	Identifier	udx		5842507	0					
ANR	5844908	Argument	any_abs ( udy )		5842507	1					
ANR	5844909	CallExpression	any_abs ( udy )		5842507	0					
ANR	5844910	Callee	any_abs		5842507	0					
ANR	5844911	Identifier	any_abs		5842507	0					
ANR	5844912	ArgumentList	udy		5842507	1					
ANR	5844913	Argument	udy		5842507	0					
ANR	5844914	Identifier	udy		5842507	0					
ANR	5844915	IfStatement	if ( dmax * scale < fixed_1 )		5842507	1					
ANR	5844916	Condition	dmax * scale < fixed_1	861:28:35448:35469	5842507	0	True				
ANR	5844917	RelationalExpression	dmax * scale < fixed_1		5842507	0		<			
ANR	5844918	MultiplicativeExpression	dmax * scale		5842507	0		*			
ANR	5844919	Identifier	dmax		5842507	0					
ANR	5844920	Identifier	scale		5842507	1					
ANR	5844921	Identifier	fixed_1		5842507	1					
ANR	5844922	ExpressionStatement	scale = ( float ) fixed_1 / dmax	862:28:35500:35529	5842507	1	True				
ANR	5844923	AssignmentExpression	scale = ( float ) fixed_1 / dmax		5842507	0		=			
ANR	5844924	Identifier	scale		5842507	0					
ANR	5844925	MultiplicativeExpression	( float ) fixed_1 / dmax		5842507	1		/			
ANR	5844926	CastExpression	( float ) fixed_1		5842507	0					
ANR	5844927	CastTarget	float		5842507	0					
ANR	5844928	Identifier	fixed_1		5842507	1					
ANR	5844929	Identifier	dmax		5842507	1					
ANR	5844930	ExpressionStatement	udx1 = ( fixed ) ( udx * scale )	864:20:35573:35601	5842507	3	True				
ANR	5844931	AssignmentExpression	udx1 = ( fixed ) ( udx * scale )		5842507	0		=			
ANR	5844932	Identifier	udx1		5842507	0					
ANR	5844933	CastExpression	( fixed ) ( udx * scale )		5842507	1					
ANR	5844934	CastTarget	fixed		5842507	0					
ANR	5844935	MultiplicativeExpression	udx * scale		5842507	1		*			
ANR	5844936	Identifier	udx		5842507	0					
ANR	5844937	Identifier	scale		5842507	1					
ANR	5844938	ExpressionStatement	udy1 = ( fixed ) ( udy * scale )	865:20:35623:35651	5842507	4	True				
ANR	5844939	AssignmentExpression	udy1 = ( fixed ) ( udy * scale )		5842507	0		=			
ANR	5844940	Identifier	udy1		5842507	0					
ANR	5844941	CastExpression	( fixed ) ( udy * scale )		5842507	1					
ANR	5844942	CastTarget	fixed		5842507	0					
ANR	5844943	MultiplicativeExpression	udy * scale		5842507	1		*			
ANR	5844944	Identifier	udy		5842507	0					
ANR	5844945	Identifier	scale		5842507	1					
ANR	5844946	ExpressionStatement	sx = x + udx1	866:20:35673:35686	5842507	5	True				
ANR	5844947	AssignmentExpression	sx = x + udx1		5842507	0		=			
ANR	5844948	Identifier	sx		5842507	0					
ANR	5844949	AdditiveExpression	x + udx1		5842507	1		+			
ANR	5844950	Identifier	x		5842507	0					
ANR	5844951	Identifier	udx1		5842507	1					
ANR	5844952	ExpressionStatement	sy = y + udy1	867:20:35708:35721	5842507	6	True				
ANR	5844953	AssignmentExpression	sy = y + udy1		5842507	0		=			
ANR	5844954	Identifier	sy		5842507	0					
ANR	5844955	AdditiveExpression	y + udy1		5842507	1		+			
ANR	5844956	Identifier	y		5842507	0					
ANR	5844957	Identifier	udy1		5842507	1					
ANR	5844958	ExpressionStatement	pseg = ( pseg != 0 ? pseg -> prev : psub -> last )	872:16:35867:35911	5842507	6	True				
ANR	5844959	AssignmentExpression	pseg = ( pseg != 0 ? pseg -> prev : psub -> last )		5842507	0		=			
ANR	5844960	Identifier	pseg		5842507	0					
ANR	5844961	ConditionalExpression	pseg != 0 ? pseg -> prev : psub -> last		5842507	1					
ANR	5844962	Condition	pseg != 0		5842507	0					
ANR	5844963	EqualityExpression	pseg != 0		5842507	0		!=			
ANR	5844964	Identifier	pseg		5842507	0					
ANR	5844965	PrimaryExpression	0		5842507	1					
ANR	5844966	PtrMemberAccess	pseg -> prev		5842507	1					
ANR	5844967	Identifier	pseg		5842507	0					
ANR	5844968	Identifier	prev		5842507	1					
ANR	5844969	PtrMemberAccess	psub -> last		5842507	2					
ANR	5844970	Identifier	psub		5842507	0					
ANR	5844971	Identifier	last		5842507	1					
ANR	5844972	IfStatement	if ( ! is_dash_segment )		5842507	7					
ANR	5844973	Condition	! is_dash_segment	873:20:35933:35948	5842507	0	True				
ANR	5844974	UnaryOperationExpression	! is_dash_segment		5842507	0					
ANR	5844975	UnaryOperator	!		5842507	0					
ANR	5844976	Identifier	is_dash_segment		5842507	1					
ANR	5844977	GotoStatement	goto d ;	874:20:35971:35977	5842507	1	True				
ANR	5844978	Identifier	d		5842507	0					
ANR	5844979	ExpressionStatement	pl . e . p . x = sx	875:16:35995:36008	5842507	8	True				
ANR	5844980	AssignmentExpression	pl . e . p . x = sx		5842507	0		=			
ANR	5844981	MemberAccess	pl . e . p . x		5842507	0					
ANR	5844982	MemberAccess	pl . e . p		5842507	0					
ANR	5844983	MemberAccess	pl . e		5842507	0					
ANR	5844984	Identifier	pl		5842507	0					
ANR	5844985	Identifier	e		5842507	1					
ANR	5844986	Identifier	p		5842507	1					
ANR	5844987	Identifier	x		5842507	1					
ANR	5844988	Identifier	sx		5842507	1					
ANR	5844989	ExpressionStatement	pl . e . p . y = sy	876:16:36026:36039	5842507	9	True				
ANR	5844990	AssignmentExpression	pl . e . p . y = sy		5842507	0		=			
ANR	5844991	MemberAccess	pl . e . p . y		5842507	0					
ANR	5844992	MemberAccess	pl . e . p		5842507	0					
ANR	5844993	MemberAccess	pl . e		5842507	0					
ANR	5844994	Identifier	pl		5842507	0					
ANR	5844995	Identifier	e		5842507	1					
ANR	5844996	Identifier	p		5842507	1					
ANR	5844997	Identifier	y		5842507	1					
ANR	5844998	Identifier	sy		5842507	1					
ANR	5844999	ExpressionStatement	pl . vector . x = udx	878:12:36067:36084	5842507	13	True				
ANR	5845000	AssignmentExpression	pl . vector . x = udx		5842507	0		=			
ANR	5845001	MemberAccess	pl . vector . x		5842507	0					
ANR	5845002	MemberAccess	pl . vector		5842507	0					
ANR	5845003	Identifier	pl		5842507	0					
ANR	5845004	Identifier	vector		5842507	1					
ANR	5845005	Identifier	x		5842507	1					
ANR	5845006	Identifier	udx		5842507	1					
ANR	5845007	ExpressionStatement	pl . vector . y = udy	879:12:36098:36115	5842507	14	True				
ANR	5845008	AssignmentExpression	pl . vector . y = udy		5842507	0		=			
ANR	5845009	MemberAccess	pl . vector . y		5842507	0					
ANR	5845010	MemberAccess	pl . vector		5842507	0					
ANR	5845011	Identifier	pl		5842507	0					
ANR	5845012	Identifier	vector		5842507	1					
ANR	5845013	Identifier	y		5842507	1					
ANR	5845014	Identifier	udy		5842507	1					
ANR	5845015	IfStatement	if ( always_thin )		5842507	15					
ANR	5845016	Condition	always_thin	880:16:36133:36143	5842507	0	True				
ANR	5845017	Identifier	always_thin		5842507	0					
ANR	5845018	CompoundStatement		458:29:19651:19651	5842507	1					
ANR	5845019	ExpressionStatement	pl . e . cdelta . x = pl . e . cdelta . y = 0	881:16:36164:36197	5842507	0	True				
ANR	5845020	AssignmentExpression	pl . e . cdelta . x = pl . e . cdelta . y = 0		5842507	0		=			
ANR	5845021	MemberAccess	pl . e . cdelta . x		5842507	0					
ANR	5845022	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845023	MemberAccess	pl . e		5842507	0					
ANR	5845024	Identifier	pl		5842507	0					
ANR	5845025	Identifier	e		5842507	1					
ANR	5845026	Identifier	cdelta		5842507	1					
ANR	5845027	Identifier	x		5842507	1					
ANR	5845028	AssignmentExpression	pl . e . cdelta . y = 0		5842507	1		=			
ANR	5845029	MemberAccess	pl . e . cdelta . y		5842507	0					
ANR	5845030	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845031	MemberAccess	pl . e		5842507	0					
ANR	5845032	Identifier	pl		5842507	0					
ANR	5845033	Identifier	e		5842507	1					
ANR	5845034	Identifier	cdelta		5842507	1					
ANR	5845035	Identifier	y		5842507	1					
ANR	5845036	PrimaryExpression	0		5842507	1					
ANR	5845037	ExpressionStatement	pl . width . x = pl . width . y = 0	882:16:36215:36242	5842507	1	True				
ANR	5845038	AssignmentExpression	pl . width . x = pl . width . y = 0		5842507	0		=			
ANR	5845039	MemberAccess	pl . width . x		5842507	0					
ANR	5845040	MemberAccess	pl . width		5842507	0					
ANR	5845041	Identifier	pl		5842507	0					
ANR	5845042	Identifier	width		5842507	1					
ANR	5845043	Identifier	x		5842507	1					
ANR	5845044	AssignmentExpression	pl . width . y = 0		5842507	1		=			
ANR	5845045	MemberAccess	pl . width . y		5842507	0					
ANR	5845046	MemberAccess	pl . width		5842507	0					
ANR	5845047	Identifier	pl		5842507	0					
ANR	5845048	Identifier	width		5842507	1					
ANR	5845049	Identifier	y		5842507	1					
ANR	5845050	PrimaryExpression	0		5842507	1					
ANR	5845051	ExpressionStatement	pl . thin = true	883:16:36260:36274	5842507	2	True				
ANR	5845052	AssignmentExpression	pl . thin = true		5842507	0		=			
ANR	5845053	MemberAccess	pl . thin		5842507	0					
ANR	5845054	Identifier	pl		5842507	0					
ANR	5845055	Identifier	thin		5842507	1					
ANR	5845056	Identifier	true		5842507	1					
ANR	5845057	ElseStatement	else		5842507	0					
ANR	5845058	CompoundStatement		462:19:19800:19800	5842507	0					
ANR	5845059	IfStatement	if ( uniform != 0 )		5842507	0					
ANR	5845060	Condition	uniform != 0	885:20:36317:36328	5842507	0	True				
ANR	5845061	EqualityExpression	uniform != 0		5842507	0		!=			
ANR	5845062	Identifier	uniform		5842507	0					
ANR	5845063	PrimaryExpression	0		5842507	1					
ANR	5845064	CompoundStatement		467:20:20031:20104	5842507	1					
ANR	5845065	IdentifierDeclStatement	"double dpx = udx , dpy = udy ;"	888:20:36477:36504	5842507	0	True				
ANR	5845066	IdentifierDecl	dpx = udx		5842507	0					
ANR	5845067	IdentifierDeclType	double		5842507	0					
ANR	5845068	Identifier	dpx		5842507	1					
ANR	5845069	AssignmentExpression	dpx = udx		5842507	2		=			
ANR	5845070	Identifier	udx		5842507	0					
ANR	5845071	Identifier	udx		5842507	1					
ANR	5845072	IdentifierDecl	dpy = udy		5842507	1					
ANR	5845073	IdentifierDeclType	double		5842507	0					
ANR	5845074	Identifier	dpy		5842507	1					
ANR	5845075	AssignmentExpression	dpy = udy		5842507	2		=			
ANR	5845076	Identifier	udy		5842507	0					
ANR	5845077	Identifier	udy		5842507	1					
ANR	5845078	IdentifierDeclStatement	"double wl = device_line_width_scale / hypot ( dpx , dpy ) ;"	889:20:36526:36599	5842507	1	True				
ANR	5845079	IdentifierDecl	"wl = device_line_width_scale / hypot ( dpx , dpy )"		5842507	0					
ANR	5845080	IdentifierDeclType	double		5842507	0					
ANR	5845081	Identifier	wl		5842507	1					
ANR	5845082	AssignmentExpression	"wl = device_line_width_scale / hypot ( dpx , dpy )"		5842507	2		=			
ANR	5845083	Identifier	wl		5842507	0					
ANR	5845084	MultiplicativeExpression	"device_line_width_scale / hypot ( dpx , dpy )"		5842507	1		/			
ANR	5845085	Identifier	device_line_width_scale		5842507	0					
ANR	5845086	CallExpression	"hypot ( dpx , dpy )"		5842507	1					
ANR	5845087	Callee	hypot		5842507	0					
ANR	5845088	Identifier	hypot		5842507	0					
ANR	5845089	ArgumentList	dpx		5842507	1					
ANR	5845090	Argument	dpx		5842507	0					
ANR	5845091	Identifier	dpx		5842507	0					
ANR	5845092	Argument	dpy		5842507	1					
ANR	5845093	Identifier	dpy		5842507	0					
ANR	5845094	ExpressionStatement	pl . e . cdelta . x = ( fixed ) ( dpx * wl )	892:20:36622:36656	5842507	2	True				
ANR	5845095	AssignmentExpression	pl . e . cdelta . x = ( fixed ) ( dpx * wl )		5842507	0		=			
ANR	5845096	MemberAccess	pl . e . cdelta . x		5842507	0					
ANR	5845097	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845098	MemberAccess	pl . e		5842507	0					
ANR	5845099	Identifier	pl		5842507	0					
ANR	5845100	Identifier	e		5842507	1					
ANR	5845101	Identifier	cdelta		5842507	1					
ANR	5845102	Identifier	x		5842507	1					
ANR	5845103	CastExpression	( fixed ) ( dpx * wl )		5842507	1					
ANR	5845104	CastTarget	fixed		5842507	0					
ANR	5845105	MultiplicativeExpression	dpx * wl		5842507	1		*			
ANR	5845106	Identifier	dpx		5842507	0					
ANR	5845107	Identifier	wl		5842507	1					
ANR	5845108	ExpressionStatement	pl . e . cdelta . y = ( fixed ) ( dpy * wl )	893:20:36678:36712	5842507	3	True				
ANR	5845109	AssignmentExpression	pl . e . cdelta . y = ( fixed ) ( dpy * wl )		5842507	0		=			
ANR	5845110	MemberAccess	pl . e . cdelta . y		5842507	0					
ANR	5845111	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845112	MemberAccess	pl . e		5842507	0					
ANR	5845113	Identifier	pl		5842507	0					
ANR	5845114	Identifier	e		5842507	1					
ANR	5845115	Identifier	cdelta		5842507	1					
ANR	5845116	Identifier	y		5842507	1					
ANR	5845117	CastExpression	( fixed ) ( dpy * wl )		5842507	1					
ANR	5845118	CastTarget	fixed		5842507	0					
ANR	5845119	MultiplicativeExpression	dpy * wl		5842507	1		*			
ANR	5845120	Identifier	dpy		5842507	0					
ANR	5845121	Identifier	wl		5842507	1					
ANR	5845122	IfStatement	if ( initial_matrix_reflected )		5842507	4					
ANR	5845123	Condition	initial_matrix_reflected	896:24:36840:36863	5842507	0	True				
ANR	5845124	Identifier	initial_matrix_reflected		5842507	0					
ANR	5845125	ExpressionStatement	"pl . width . x = pl . e . cdelta . y , pl . width . y = - pl . e . cdelta . x"	897:24:36890:36945	5842507	1	True				
ANR	5845126	Expression	"pl . width . x = pl . e . cdelta . y , pl . width . y = - pl . e . cdelta . x"		5842507	0					
ANR	5845127	AssignmentExpression	pl . width . x = pl . e . cdelta . y		5842507	0		=			
ANR	5845128	MemberAccess	pl . width . x		5842507	0					
ANR	5845129	MemberAccess	pl . width		5842507	0					
ANR	5845130	Identifier	pl		5842507	0					
ANR	5845131	Identifier	width		5842507	1					
ANR	5845132	Identifier	x		5842507	1					
ANR	5845133	MemberAccess	pl . e . cdelta . y		5842507	1					
ANR	5845134	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845135	MemberAccess	pl . e		5842507	0					
ANR	5845136	Identifier	pl		5842507	0					
ANR	5845137	Identifier	e		5842507	1					
ANR	5845138	Identifier	cdelta		5842507	1					
ANR	5845139	Identifier	y		5842507	1					
ANR	5845140	AssignmentExpression	pl . width . y = - pl . e . cdelta . x		5842507	1		=			
ANR	5845141	MemberAccess	pl . width . y		5842507	0					
ANR	5845142	MemberAccess	pl . width		5842507	0					
ANR	5845143	Identifier	pl		5842507	0					
ANR	5845144	Identifier	width		5842507	1					
ANR	5845145	Identifier	y		5842507	1					
ANR	5845146	UnaryOperationExpression	- pl . e . cdelta . x		5842507	1					
ANR	5845147	UnaryOperator	-		5842507	0					
ANR	5845148	MemberAccess	pl . e . cdelta . x		5842507	1					
ANR	5845149	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845150	MemberAccess	pl . e		5842507	0					
ANR	5845151	Identifier	pl		5842507	0					
ANR	5845152	Identifier	e		5842507	1					
ANR	5845153	Identifier	cdelta		5842507	1					
ANR	5845154	Identifier	x		5842507	1					
ANR	5845155	ElseStatement	else		5842507	0					
ANR	5845156	ExpressionStatement	"pl . width . x = - pl . e . cdelta . y , pl . width . y = pl . e . cdelta . x"	899:24:36996:37051	5842507	0	True				
ANR	5845157	Expression	"pl . width . x = - pl . e . cdelta . y , pl . width . y = pl . e . cdelta . x"		5842507	0					
ANR	5845158	AssignmentExpression	pl . width . x = - pl . e . cdelta . y		5842507	0		=			
ANR	5845159	MemberAccess	pl . width . x		5842507	0					
ANR	5845160	MemberAccess	pl . width		5842507	0					
ANR	5845161	Identifier	pl		5842507	0					
ANR	5845162	Identifier	width		5842507	1					
ANR	5845163	Identifier	x		5842507	1					
ANR	5845164	UnaryOperationExpression	- pl . e . cdelta . y		5842507	1					
ANR	5845165	UnaryOperator	-		5842507	0					
ANR	5845166	MemberAccess	pl . e . cdelta . y		5842507	1					
ANR	5845167	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845168	MemberAccess	pl . e		5842507	0					
ANR	5845169	Identifier	pl		5842507	0					
ANR	5845170	Identifier	e		5842507	1					
ANR	5845171	Identifier	cdelta		5842507	1					
ANR	5845172	Identifier	y		5842507	1					
ANR	5845173	AssignmentExpression	pl . width . y = pl . e . cdelta . x		5842507	1		=			
ANR	5845174	MemberAccess	pl . width . y		5842507	0					
ANR	5845175	MemberAccess	pl . width		5842507	0					
ANR	5845176	Identifier	pl		5842507	0					
ANR	5845177	Identifier	width		5842507	1					
ANR	5845178	Identifier	y		5842507	1					
ANR	5845179	MemberAccess	pl . e . cdelta . x		5842507	1					
ANR	5845180	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845181	MemberAccess	pl . e		5842507	0					
ANR	5845182	Identifier	pl		5842507	0					
ANR	5845183	Identifier	e		5842507	1					
ANR	5845184	Identifier	cdelta		5842507	1					
ANR	5845185	Identifier	x		5842507	1					
ANR	5845186	ExpressionStatement	pl . thin = false	900:20:37073:37088	5842507	5	True				
ANR	5845187	AssignmentExpression	pl . thin = false		5842507	0		=			
ANR	5845188	MemberAccess	pl . thin		5842507	0					
ANR	5845189	Identifier	pl		5842507	0					
ANR	5845190	Identifier	thin		5842507	1					
ANR	5845191	Identifier	false		5842507	1					
ANR	5845192	ElseStatement	else		5842507	0					
ANR	5845193	CompoundStatement		483:20:20768:20776	5842507	0					
ANR	5845194	IdentifierDeclStatement	gs_point dpt ;	904:20:37208:37220	5842507	0	True				
ANR	5845195	IdentifierDecl	dpt		5842507	0					
ANR	5845196	IdentifierDeclType	gs_point		5842507	0					
ANR	5845197	Identifier	dpt		5842507	1					
ANR	5845198	IdentifierDeclStatement	float wl ;	905:20:37263:37271	5842507	1	True				
ANR	5845199	IdentifierDecl	wl		5842507	0					
ANR	5845200	IdentifierDeclType	float		5842507	0					
ANR	5845201	Identifier	wl		5842507	1					
ANR	5845202	ExpressionStatement	"code = gs_gstate_idtransform ( pgs , ( float ) udx , ( float ) udy , & dpt )"	907:20:37294:37455	5842507	2	True				
ANR	5845203	AssignmentExpression	"code = gs_gstate_idtransform ( pgs , ( float ) udx , ( float ) udy , & dpt )"		5842507	0		=			
ANR	5845204	Identifier	code		5842507	0					
ANR	5845205	CallExpression	"gs_gstate_idtransform ( pgs , ( float ) udx , ( float ) udy , & dpt )"		5842507	1					
ANR	5845206	Callee	gs_gstate_idtransform		5842507	0					
ANR	5845207	Identifier	gs_gstate_idtransform		5842507	0					
ANR	5845208	ArgumentList	pgs		5842507	1					
ANR	5845209	Argument	pgs		5842507	0					
ANR	5845210	Identifier	pgs		5842507	0					
ANR	5845211	Argument	( float ) udx		5842507	1					
ANR	5845212	CastExpression	( float ) udx		5842507	0					
ANR	5845213	CastTarget	float		5842507	0					
ANR	5845214	Identifier	udx		5842507	1					
ANR	5845215	Argument	( float ) udy		5842507	2					
ANR	5845216	CastExpression	( float ) udy		5842507	0					
ANR	5845217	CastTarget	float		5842507	0					
ANR	5845218	Identifier	udy		5842507	1					
ANR	5845219	Argument	& dpt		5842507	3					
ANR	5845220	UnaryOperationExpression	& dpt		5842507	0					
ANR	5845221	UnaryOperator	&		5842507	0					
ANR	5845222	Identifier	dpt		5842507	1					
ANR	5845223	IfStatement	if ( code < 0 )		5842507	3					
ANR	5845224	Condition	code < 0	910:24:37481:37488	5842507	0	True				
ANR	5845225	RelationalExpression	code < 0		5842507	0		<			
ANR	5845226	Identifier	code		5842507	0					
ANR	5845227	PrimaryExpression	0		5842507	1					
ANR	5845228	CompoundStatement		488:34:20996:20996	5842507	1					
ANR	5845229	ExpressionStatement	dpt . x = 0	911:24:37517:37526	5842507	0	True				
ANR	5845230	AssignmentExpression	dpt . x = 0		5842507	0		=			
ANR	5845231	MemberAccess	dpt . x		5842507	0					
ANR	5845232	Identifier	dpt		5842507	0					
ANR	5845233	Identifier	x		5842507	1					
ANR	5845234	PrimaryExpression	0		5842507	1					
ANR	5845235	ExpressionStatement	dpt . y = 0	911:35:37528:37537	5842507	1	True				
ANR	5845236	AssignmentExpression	dpt . y = 0		5842507	0		=			
ANR	5845237	MemberAccess	dpt . y		5842507	0					
ANR	5845238	Identifier	dpt		5842507	0					
ANR	5845239	Identifier	y		5842507	1					
ANR	5845240	PrimaryExpression	0		5842507	1					
ANR	5845241	ExpressionStatement	code = 0	913:24:37611:37619	5842507	2	True				
ANR	5845242	AssignmentExpression	code = 0		5842507	0		=			
ANR	5845243	Identifier	code		5842507	0					
ANR	5845244	PrimaryExpression	0		5842507	1					
ANR	5845245	ElseStatement	else		5842507	0					
ANR	5845246	CompoundStatement		492:27:21153:21153	5842507	0					
ANR	5845247	ExpressionStatement	"wl = line_width_and_scale / hypot ( dpt . x , dpt . y )"	915:24:37674:37749	5842507	0	True				
ANR	5845248	AssignmentExpression	"wl = line_width_and_scale / hypot ( dpt . x , dpt . y )"		5842507	0		=			
ANR	5845249	Identifier	wl		5842507	0					
ANR	5845250	MultiplicativeExpression	"line_width_and_scale / hypot ( dpt . x , dpt . y )"		5842507	1		/			
ANR	5845251	Identifier	line_width_and_scale		5842507	0					
ANR	5845252	CallExpression	"hypot ( dpt . x , dpt . y )"		5842507	1					
ANR	5845253	Callee	hypot		5842507	0					
ANR	5845254	Identifier	hypot		5842507	0					
ANR	5845255	ArgumentList	dpt . x		5842507	1					
ANR	5845256	Argument	dpt . x		5842507	0					
ANR	5845257	MemberAccess	dpt . x		5842507	0					
ANR	5845258	Identifier	dpt		5842507	0					
ANR	5845259	Identifier	x		5842507	1					
ANR	5845260	Argument	dpt . y		5842507	1					
ANR	5845261	MemberAccess	dpt . y		5842507	0					
ANR	5845262	Identifier	dpt		5842507	0					
ANR	5845263	Identifier	y		5842507	1					
ANR	5845264	ExpressionStatement	dpt . x *= wl	919:24:37893:37904	5842507	1	True				
ANR	5845265	AssignmentExpression	dpt . x *= wl		5842507	0		*=			
ANR	5845266	MemberAccess	dpt . x		5842507	0					
ANR	5845267	Identifier	dpt		5842507	0					
ANR	5845268	Identifier	x		5842507	1					
ANR	5845269	Identifier	wl		5842507	1					
ANR	5845270	ExpressionStatement	dpt . y *= wl	920:24:37930:37941	5842507	2	True				
ANR	5845271	AssignmentExpression	dpt . y *= wl		5842507	0		*=			
ANR	5845272	MemberAccess	dpt . y		5842507	0					
ANR	5845273	Identifier	dpt		5842507	0					
ANR	5845274	Identifier	y		5842507	1					
ANR	5845275	Identifier	wl		5842507	1					
ANR	5845276	ExpressionStatement	pl . e . cdelta . x = ( fixed ) ( dpt . x * xx )	934:20:38562:38598	5842507	4	True				
ANR	5845277	AssignmentExpression	pl . e . cdelta . x = ( fixed ) ( dpt . x * xx )		5842507	0		=			
ANR	5845278	MemberAccess	pl . e . cdelta . x		5842507	0					
ANR	5845279	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845280	MemberAccess	pl . e		5842507	0					
ANR	5845281	Identifier	pl		5842507	0					
ANR	5845282	Identifier	e		5842507	1					
ANR	5845283	Identifier	cdelta		5842507	1					
ANR	5845284	Identifier	x		5842507	1					
ANR	5845285	CastExpression	( fixed ) ( dpt . x * xx )		5842507	1					
ANR	5845286	CastTarget	fixed		5842507	0					
ANR	5845287	MultiplicativeExpression	dpt . x * xx		5842507	1		*			
ANR	5845288	MemberAccess	dpt . x		5842507	0					
ANR	5845289	Identifier	dpt		5842507	0					
ANR	5845290	Identifier	x		5842507	1					
ANR	5845291	Identifier	xx		5842507	1					
ANR	5845292	ExpressionStatement	pl . e . cdelta . y = ( fixed ) ( dpt . y * yy )	935:20:38620:38656	5842507	5	True				
ANR	5845293	AssignmentExpression	pl . e . cdelta . y = ( fixed ) ( dpt . y * yy )		5842507	0		=			
ANR	5845294	MemberAccess	pl . e . cdelta . y		5842507	0					
ANR	5845295	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845296	MemberAccess	pl . e		5842507	0					
ANR	5845297	Identifier	pl		5842507	0					
ANR	5845298	Identifier	e		5842507	1					
ANR	5845299	Identifier	cdelta		5842507	1					
ANR	5845300	Identifier	y		5842507	1					
ANR	5845301	CastExpression	( fixed ) ( dpt . y * yy )		5842507	1					
ANR	5845302	CastTarget	fixed		5842507	0					
ANR	5845303	MultiplicativeExpression	dpt . y * yy		5842507	1		*			
ANR	5845304	MemberAccess	dpt . y		5842507	0					
ANR	5845305	Identifier	dpt		5842507	0					
ANR	5845306	Identifier	y		5842507	1					
ANR	5845307	Identifier	yy		5842507	1					
ANR	5845308	IfStatement	if ( orient != orient_portrait )		5842507	6					
ANR	5845309	Condition	orient != orient_portrait	936:24:38682:38706	5842507	0	True				
ANR	5845310	EqualityExpression	orient != orient_portrait		5842507	0		!=			
ANR	5845311	Identifier	orient		5842507	0					
ANR	5845312	Identifier	orient_portrait		5842507	1					
ANR	5845313	ExpressionStatement	"pl . e . cdelta . x += ( fixed ) ( dpt . y * yx ) , pl . e . cdelta . y += ( fixed ) ( dpt . x * xy )"	937:24:38733:38837	5842507	1	True				
ANR	5845314	Expression	"pl . e . cdelta . x += ( fixed ) ( dpt . y * yx ) , pl . e . cdelta . y += ( fixed ) ( dpt . x * xy )"		5842507	0					
ANR	5845315	AssignmentExpression	pl . e . cdelta . x += ( fixed ) ( dpt . y * yx )		5842507	0		+=			
ANR	5845316	MemberAccess	pl . e . cdelta . x		5842507	0					
ANR	5845317	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845318	MemberAccess	pl . e		5842507	0					
ANR	5845319	Identifier	pl		5842507	0					
ANR	5845320	Identifier	e		5842507	1					
ANR	5845321	Identifier	cdelta		5842507	1					
ANR	5845322	Identifier	x		5842507	1					
ANR	5845323	CastExpression	( fixed ) ( dpt . y * yx )		5842507	1					
ANR	5845324	CastTarget	fixed		5842507	0					
ANR	5845325	MultiplicativeExpression	dpt . y * yx		5842507	1		*			
ANR	5845326	MemberAccess	dpt . y		5842507	0					
ANR	5845327	Identifier	dpt		5842507	0					
ANR	5845328	Identifier	y		5842507	1					
ANR	5845329	Identifier	yx		5842507	1					
ANR	5845330	AssignmentExpression	pl . e . cdelta . y += ( fixed ) ( dpt . x * xy )		5842507	1		+=			
ANR	5845331	MemberAccess	pl . e . cdelta . y		5842507	0					
ANR	5845332	MemberAccess	pl . e . cdelta		5842507	0					
ANR	5845333	MemberAccess	pl . e		5842507	0					
ANR	5845334	Identifier	pl		5842507	0					
ANR	5845335	Identifier	e		5842507	1					
ANR	5845336	Identifier	cdelta		5842507	1					
ANR	5845337	Identifier	y		5842507	1					
ANR	5845338	CastExpression	( fixed ) ( dpt . x * xy )		5842507	1					
ANR	5845339	CastTarget	fixed		5842507	0					
ANR	5845340	MultiplicativeExpression	dpt . x * xy		5842507	1		*			
ANR	5845341	MemberAccess	dpt . x		5842507	0					
ANR	5845342	Identifier	dpt		5842507	0					
ANR	5845343	Identifier	x		5842507	1					
ANR	5845344	Identifier	xy		5842507	1					
ANR	5845345	IfStatement	if ( ! reflected ^ initial_matrix_reflected )		5842507	7					
ANR	5845346	Condition	! reflected ^ initial_matrix_reflected	939:24:38863:38899	5842507	0	True				
ANR	5845347	ExclusiveOrExpression	! reflected ^ initial_matrix_reflected		5842507	0		^			
ANR	5845348	UnaryOperationExpression	! reflected		5842507	0					
ANR	5845349	UnaryOperator	!		5842507	0					
ANR	5845350	Identifier	reflected		5842507	1					
ANR	5845351	Identifier	initial_matrix_reflected		5842507	1					
ANR	5845352	ExpressionStatement	"dpt . x = - dpt . x , dpt . y = - dpt . y"	940:24:38926:38956	5842507	1	True				
ANR	5845353	Expression	"dpt . x = - dpt . x , dpt . y = - dpt . y"		5842507	0					
ANR	5845354	AssignmentExpression	dpt . x = - dpt . x		5842507	0		=			
ANR	5845355	MemberAccess	dpt . x		5842507	0					
ANR	5845356	Identifier	dpt		5842507	0					
ANR	5845357	Identifier	x		5842507	1					
ANR	5845358	UnaryOperationExpression	- dpt . x		5842507	1					
ANR	5845359	UnaryOperator	-		5842507	0					
ANR	5845360	MemberAccess	dpt . x		5842507	1					
ANR	5845361	Identifier	dpt		5842507	0					
ANR	5845362	Identifier	x		5842507	1					
ANR	5845363	AssignmentExpression	dpt . y = - dpt . y		5842507	1		=			
ANR	5845364	MemberAccess	dpt . y		5842507	0					
ANR	5845365	Identifier	dpt		5842507	0					
ANR	5845366	Identifier	y		5842507	1					
ANR	5845367	UnaryOperationExpression	- dpt . y		5842507	1					
ANR	5845368	UnaryOperator	-		5842507	0					
ANR	5845369	MemberAccess	dpt . y		5842507	1					
ANR	5845370	Identifier	dpt		5842507	0					
ANR	5845371	Identifier	y		5842507	1					
ANR	5845372	ExpressionStatement	"pl . width . x = ( fixed ) ( dpt . y * xx ) , pl . width . y = - ( fixed ) ( dpt . x * yy )"	941:20:38978:39071	5842507	8	True				
ANR	5845373	Expression	"pl . width . x = ( fixed ) ( dpt . y * xx ) , pl . width . y = - ( fixed ) ( dpt . x * yy )"		5842507	0					
ANR	5845374	AssignmentExpression	pl . width . x = ( fixed ) ( dpt . y * xx )		5842507	0		=			
ANR	5845375	MemberAccess	pl . width . x		5842507	0					
ANR	5845376	MemberAccess	pl . width		5842507	0					
ANR	5845377	Identifier	pl		5842507	0					
ANR	5845378	Identifier	width		5842507	1					
ANR	5845379	Identifier	x		5842507	1					
ANR	5845380	CastExpression	( fixed ) ( dpt . y * xx )		5842507	1					
ANR	5845381	CastTarget	fixed		5842507	0					
ANR	5845382	MultiplicativeExpression	dpt . y * xx		5842507	1		*			
ANR	5845383	MemberAccess	dpt . y		5842507	0					
ANR	5845384	Identifier	dpt		5842507	0					
ANR	5845385	Identifier	y		5842507	1					
ANR	5845386	Identifier	xx		5842507	1					
ANR	5845387	AssignmentExpression	pl . width . y = - ( fixed ) ( dpt . x * yy )		5842507	1		=			
ANR	5845388	MemberAccess	pl . width . y		5842507	0					
ANR	5845389	MemberAccess	pl . width		5842507	0					
ANR	5845390	Identifier	pl		5842507	0					
ANR	5845391	Identifier	width		5842507	1					
ANR	5845392	Identifier	y		5842507	1					
ANR	5845393	UnaryOperationExpression	- ( fixed ) ( dpt . x * yy )		5842507	1					
ANR	5845394	UnaryOperator	-		5842507	0					
ANR	5845395	CastExpression	( fixed ) ( dpt . x * yy )		5842507	1					
ANR	5845396	CastTarget	fixed		5842507	0					
ANR	5845397	MultiplicativeExpression	dpt . x * yy		5842507	1		*			
ANR	5845398	MemberAccess	dpt . x		5842507	0					
ANR	5845399	Identifier	dpt		5842507	0					
ANR	5845400	Identifier	x		5842507	1					
ANR	5845401	Identifier	yy		5842507	1					
ANR	5845402	IfStatement	if ( orient != orient_portrait )		5842507	9					
ANR	5845403	Condition	orient != orient_portrait	943:24:39097:39121	5842507	0	True				
ANR	5845404	EqualityExpression	orient != orient_portrait		5842507	0		!=			
ANR	5845405	Identifier	orient		5842507	0					
ANR	5845406	Identifier	orient_portrait		5842507	1					
ANR	5845407	ExpressionStatement	"pl . width . x -= ( fixed ) ( dpt . x * yx ) , pl . width . y += ( fixed ) ( dpt . y * xy )"	944:24:39148:39246	5842507	1	True				
ANR	5845408	Expression	"pl . width . x -= ( fixed ) ( dpt . x * yx ) , pl . width . y += ( fixed ) ( dpt . y * xy )"		5842507	0					
ANR	5845409	AssignmentExpression	pl . width . x -= ( fixed ) ( dpt . x * yx )		5842507	0		-=			
ANR	5845410	MemberAccess	pl . width . x		5842507	0					
ANR	5845411	MemberAccess	pl . width		5842507	0					
ANR	5845412	Identifier	pl		5842507	0					
ANR	5845413	Identifier	width		5842507	1					
ANR	5845414	Identifier	x		5842507	1					
ANR	5845415	CastExpression	( fixed ) ( dpt . x * yx )		5842507	1					
ANR	5845416	CastTarget	fixed		5842507	0					
ANR	5845417	MultiplicativeExpression	dpt . x * yx		5842507	1		*			
ANR	5845418	MemberAccess	dpt . x		5842507	0					
ANR	5845419	Identifier	dpt		5842507	0					
ANR	5845420	Identifier	x		5842507	1					
ANR	5845421	Identifier	yx		5842507	1					
ANR	5845422	AssignmentExpression	pl . width . y += ( fixed ) ( dpt . y * xy )		5842507	1		+=			
ANR	5845423	MemberAccess	pl . width . y		5842507	0					
ANR	5845424	MemberAccess	pl . width		5842507	0					
ANR	5845425	Identifier	pl		5842507	0					
ANR	5845426	Identifier	width		5842507	1					
ANR	5845427	Identifier	y		5842507	1					
ANR	5845428	CastExpression	( fixed ) ( dpt . y * xy )		5842507	1					
ANR	5845429	CastTarget	fixed		5842507	0					
ANR	5845430	MultiplicativeExpression	dpt . y * xy		5842507	1		*			
ANR	5845431	MemberAccess	dpt . y		5842507	0					
ANR	5845432	Identifier	dpt		5842507	0					
ANR	5845433	Identifier	y		5842507	1					
ANR	5845434	Identifier	xy		5842507	1					
ANR	5845435	ExpressionStatement	pl . thin = width_is_thin ( & pl )	946:20:39268:39296	5842507	10	True				
ANR	5845436	AssignmentExpression	pl . thin = width_is_thin ( & pl )		5842507	0		=			
ANR	5845437	MemberAccess	pl . thin		5842507	0					
ANR	5845438	Identifier	pl		5842507	0					
ANR	5845439	Identifier	thin		5842507	1					
ANR	5845440	CallExpression	width_is_thin ( & pl )		5842507	1					
ANR	5845441	Callee	width_is_thin		5842507	0					
ANR	5845442	Identifier	width_is_thin		5842507	0					
ANR	5845443	ArgumentList	& pl		5842507	1					
ANR	5845444	Argument	& pl		5842507	0					
ANR	5845445	UnaryOperationExpression	& pl		5842507	0					
ANR	5845446	UnaryOperator	&		5842507	0					
ANR	5845447	Identifier	pl		5842507	1					
ANR	5845448	IfStatement	if ( ! pl . thin )		5842507	1					
ANR	5845449	Condition	! pl . thin	948:20:39336:39343	5842507	0	True				
ANR	5845450	UnaryOperationExpression	! pl . thin		5842507	0					
ANR	5845451	UnaryOperator	!		5842507	0					
ANR	5845452	MemberAccess	pl . thin		5842507	1					
ANR	5845453	Identifier	pl		5842507	0					
ANR	5845454	Identifier	thin		5842507	1					
ANR	5845455	CompoundStatement		526:30:22851:22851	5842507	1					
ANR	5845456	IfStatement	if ( index )		5842507	0					
ANR	5845457	Condition	index	949:24:39372:39376	5842507	0	True				
ANR	5845458	Identifier	index		5842507	0					
ANR	5845459	ExpressionStatement	dev -> sgr . stroke_stored = false	950:24:39403:39433	5842507	1	True				
ANR	5845460	AssignmentExpression	dev -> sgr . stroke_stored = false		5842507	0		=			
ANR	5845461	MemberAccess	dev -> sgr . stroke_stored		5842507	0					
ANR	5845462	PtrMemberAccess	dev -> sgr		5842507	0					
ANR	5845463	Identifier	dev		5842507	0					
ANR	5845464	Identifier	sgr		5842507	1					
ANR	5845465	Identifier	stroke_stored		5842507	1					
ANR	5845466	Identifier	false		5842507	1					
ANR	5845467	ExpressionStatement	"adjust_stroke ( dev , & pl , pgs , false , ( pseg -> prev == 0 || pseg -> prev -> type == s_start ) && ( pseg -> next == 0 || pseg -> next -> type == s_start ) && ( zero_length || ! is_closed ) , COMBINE_FLAGS ( flags ) )"	951:20:39455:39757	5842507	1	True				
ANR	5845468	CallExpression	"adjust_stroke ( dev , & pl , pgs , false , ( pseg -> prev == 0 || pseg -> prev -> type == s_start ) && ( pseg -> next == 0 || pseg -> next -> type == s_start ) && ( zero_length || ! is_closed ) , COMBINE_FLAGS ( flags ) )"		5842507	0					
ANR	5845469	Callee	adjust_stroke		5842507	0					
ANR	5845470	Identifier	adjust_stroke		5842507	0					
ANR	5845471	ArgumentList	dev		5842507	1					
ANR	5845472	Argument	dev		5842507	0					
ANR	5845473	Identifier	dev		5842507	0					
ANR	5845474	Argument	& pl		5842507	1					
ANR	5845475	UnaryOperationExpression	& pl		5842507	0					
ANR	5845476	UnaryOperator	&		5842507	0					
ANR	5845477	Identifier	pl		5842507	1					
ANR	5845478	Argument	pgs		5842507	2					
ANR	5845479	Identifier	pgs		5842507	0					
ANR	5845480	Argument	false		5842507	3					
ANR	5845481	Identifier	false		5842507	0					
ANR	5845482	Argument	( pseg -> prev == 0 || pseg -> prev -> type == s_start ) && ( pseg -> next == 0 || pseg -> next -> type == s_start ) && ( zero_length || ! is_closed )		5842507	4					
ANR	5845483	AndExpression	( pseg -> prev == 0 || pseg -> prev -> type == s_start ) && ( pseg -> next == 0 || pseg -> next -> type == s_start ) && ( zero_length || ! is_closed )		5842507	0		&&			
ANR	5845484	OrExpression	pseg -> prev == 0 || pseg -> prev -> type == s_start		5842507	0		||			
ANR	5845485	EqualityExpression	pseg -> prev == 0		5842507	0		==			
ANR	5845486	PtrMemberAccess	pseg -> prev		5842507	0					
ANR	5845487	Identifier	pseg		5842507	0					
ANR	5845488	Identifier	prev		5842507	1					
ANR	5845489	PrimaryExpression	0		5842507	1					
ANR	5845490	EqualityExpression	pseg -> prev -> type == s_start		5842507	1		==			
ANR	5845491	PtrMemberAccess	pseg -> prev -> type		5842507	0					
ANR	5845492	PtrMemberAccess	pseg -> prev		5842507	0					
ANR	5845493	Identifier	pseg		5842507	0					
ANR	5845494	Identifier	prev		5842507	1					
ANR	5845495	Identifier	type		5842507	1					
ANR	5845496	Identifier	s_start		5842507	1					
ANR	5845497	AndExpression	( pseg -> next == 0 || pseg -> next -> type == s_start ) && ( zero_length || ! is_closed )		5842507	1		&&			
ANR	5845498	OrExpression	pseg -> next == 0 || pseg -> next -> type == s_start		5842507	0		||			
ANR	5845499	EqualityExpression	pseg -> next == 0		5842507	0		==			
ANR	5845500	PtrMemberAccess	pseg -> next		5842507	0					
ANR	5845501	Identifier	pseg		5842507	0					
ANR	5845502	Identifier	next		5842507	1					
ANR	5845503	PrimaryExpression	0		5842507	1					
ANR	5845504	EqualityExpression	pseg -> next -> type == s_start		5842507	1		==			
ANR	5845505	PtrMemberAccess	pseg -> next -> type		5842507	0					
ANR	5845506	PtrMemberAccess	pseg -> next		5842507	0					
ANR	5845507	Identifier	pseg		5842507	0					
ANR	5845508	Identifier	next		5842507	1					
ANR	5845509	Identifier	type		5842507	1					
ANR	5845510	Identifier	s_start		5842507	1					
ANR	5845511	OrExpression	zero_length || ! is_closed		5842507	1		||			
ANR	5845512	Identifier	zero_length		5842507	0					
ANR	5845513	UnaryOperationExpression	! is_closed		5842507	1					
ANR	5845514	UnaryOperator	!		5842507	0					
ANR	5845515	Identifier	is_closed		5842507	1					
ANR	5845516	Argument	COMBINE_FLAGS ( flags )		5842507	5					
ANR	5845517	CallExpression	COMBINE_FLAGS ( flags )		5842507	0					
ANR	5845518	Callee	COMBINE_FLAGS		5842507	0					
ANR	5845519	Identifier	COMBINE_FLAGS		5842507	0					
ANR	5845520	ArgumentList	flags		5842507	1					
ANR	5845521	Argument	flags		5842507	0					
ANR	5845522	Identifier	flags		5842507	0					
ANR	5845523	ExpressionStatement	compute_caps ( & pl )	956:20:39779:39796	5842507	2	True				
ANR	5845524	CallExpression	compute_caps ( & pl )		5842507	0					
ANR	5845525	Callee	compute_caps		5842507	0					
ANR	5845526	Identifier	compute_caps		5842507	0					
ANR	5845527	ArgumentList	& pl		5842507	1					
ANR	5845528	Argument	& pl		5842507	0					
ANR	5845529	UnaryOperationExpression	& pl		5842507	0					
ANR	5845530	UnaryOperator	&		5842507	0					
ANR	5845531	Identifier	pl		5842507	1					
ANR	5845532	IfStatement	if ( index ++ )		5842507	16					
ANR	5845533	Condition	index ++	959:16:39846:39852	5842507	0	True				
ANR	5845534	PostIncDecOperationExpression	index ++		5842507	0					
ANR	5845535	Identifier	index		5842507	0					
ANR	5845536	IncDec	++		5842507	1					
ANR	5845537	CompoundStatement		542:16:23544:23562	5842507	1					
ANR	5845538	IdentifierDeclStatement	gs_line_join join = ( pseg_notes & not_first ? curve_join : pgs_lp -> join ) ;	960:16:39873:39965	5842507	0	True				
ANR	5845539	IdentifierDecl	join = ( pseg_notes & not_first ? curve_join : pgs_lp -> join )		5842507	0					
ANR	5845540	IdentifierDeclType	gs_line_join		5842507	0					
ANR	5845541	Identifier	join		5842507	1					
ANR	5845542	AssignmentExpression	join = ( pseg_notes & not_first ? curve_join : pgs_lp -> join )		5842507	2		=			
ANR	5845543	Identifier	join		5842507	0					
ANR	5845544	ConditionalExpression	pseg_notes & not_first ? curve_join : pgs_lp -> join		5842507	1					
ANR	5845545	Condition	pseg_notes & not_first		5842507	0					
ANR	5845546	BitAndExpression	pseg_notes & not_first		5842507	0		&			
ANR	5845547	Identifier	pseg_notes		5842507	0					
ANR	5845548	Identifier	not_first		5842507	1					
ANR	5845549	Identifier	curve_join		5842507	1					
ANR	5845550	PtrMemberAccess	pgs_lp -> join		5842507	2					
ANR	5845551	Identifier	pgs_lp		5842507	0					
ANR	5845552	Identifier	join		5842507	1					
ANR	5845553	IdentifierDeclStatement	int first ;	962:16:39983:39992	5842507	1	True				
ANR	5845554	IdentifierDecl	first		5842507	0					
ANR	5845555	IdentifierDeclType	int		5842507	0					
ANR	5845556	Identifier	first		5842507	1					
ANR	5845557	IdentifierDeclStatement	pl_ptr lptr ;	963:16:40010:40021	5842507	2	True				
ANR	5845558	IdentifierDecl	lptr		5842507	0					
ANR	5845559	IdentifierDeclType	pl_ptr		5842507	0					
ANR	5845560	Identifier	lptr		5842507	1					
ANR	5845561	IdentifierDeclStatement	bool ensure_closed ;	964:16:40039:40057	5842507	3	True				
ANR	5845562	IdentifierDecl	ensure_closed		5842507	0					
ANR	5845563	IdentifierDeclType	bool		5842507	0					
ANR	5845564	Identifier	ensure_closed		5842507	1					
ANR	5845565	IfStatement	if ( join == gs_join_none )		5842507	4					
ANR	5845566	Condition	join == gs_join_none	966:20:40080:40099	5842507	0	True				
ANR	5845567	EqualityExpression	join == gs_join_none		5842507	0		==			
ANR	5845568	Identifier	join		5842507	0					
ANR	5845569	Identifier	gs_join_none		5842507	1					
ANR	5845570	CompoundStatement		544:42:23607:23607	5842507	1					
ANR	5845571	ExpressionStatement	first = 0	969:20:40235:40244	5842507	0	True				
ANR	5845572	AssignmentExpression	first = 0		5842507	0		=			
ANR	5845573	Identifier	first		5842507	0					
ANR	5845574	PrimaryExpression	0		5842507	1					
ANR	5845575	ExpressionStatement	lptr = 0	970:20:40266:40274	5842507	1	True				
ANR	5845576	AssignmentExpression	lptr = 0		5842507	0		=			
ANR	5845577	Identifier	lptr		5842507	0					
ANR	5845578	PrimaryExpression	0		5842507	1					
ANR	5845579	ExpressionStatement	index = 1	971:20:40296:40305	5842507	2	True				
ANR	5845580	AssignmentExpression	index = 1		5842507	0		=			
ANR	5845581	Identifier	index		5842507	0					
ANR	5845582	PrimaryExpression	1		5842507	1					
ANR	5845583	ElseStatement	else		5842507	0					
ANR	5845584	CompoundStatement		550:23:23835:23835	5842507	0					
ANR	5845585	ExpressionStatement	first = ( is_closed ? 1 : index - 2 )	973:20:40352:40387	5842507	0	True				
ANR	5845586	AssignmentExpression	first = ( is_closed ? 1 : index - 2 )		5842507	0		=			
ANR	5845587	Identifier	first		5842507	0					
ANR	5845588	ConditionalExpression	is_closed ? 1 : index - 2		5842507	1					
ANR	5845589	Condition	is_closed		5842507	0					
ANR	5845590	Identifier	is_closed		5842507	0					
ANR	5845591	PrimaryExpression	1		5842507	1					
ANR	5845592	AdditiveExpression	index - 2		5842507	2		-			
ANR	5845593	Identifier	index		5842507	0					
ANR	5845594	PrimaryExpression	2		5842507	1					
ANR	5845595	ExpressionStatement	lptr = & pl	974:20:40409:40419	5842507	1	True				
ANR	5845596	AssignmentExpression	lptr = & pl		5842507	0		=			
ANR	5845597	Identifier	lptr		5842507	0					
ANR	5845598	UnaryOperationExpression	& pl		5842507	1					
ANR	5845599	UnaryOperator	&		5842507	0					
ANR	5845600	Identifier	pl		5842507	1					
ANR	5845601	IfStatement	if ( is_dash_segment )		5842507	5					
ANR	5845602	Condition	is_dash_segment	977:20:40493:40507	5842507	0	True				
ANR	5845603	Identifier	is_dash_segment		5842507	0					
ANR	5845604	ExpressionStatement	lptr = NULL	978:20:40565:40576	5842507	1	True				
ANR	5845605	AssignmentExpression	lptr = NULL		5842507	0		=			
ANR	5845606	Identifier	lptr		5842507	0					
ANR	5845607	Identifier	NULL		5842507	1					
ANR	5845608	IfStatement	if ( pseg -> type == s_gap )		5842507	6					
ANR	5845609	Condition	pseg -> type == s_gap	980:20:40605:40623	5842507	0	True				
ANR	5845610	EqualityExpression	pseg -> type == s_gap		5842507	0		==			
ANR	5845611	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5845612	Identifier	pseg		5842507	0					
ANR	5845613	Identifier	type		5842507	1					
ANR	5845614	Identifier	s_gap		5842507	1					
ANR	5845615	CompoundStatement		559:16:24147:24147	5842507	1					
ANR	5845616	ExpressionStatement	lptr = NULL	982:20:40664:40675	5842507	0	True				
ANR	5845617	AssignmentExpression	lptr = NULL		5842507	0		=			
ANR	5845618	Identifier	lptr		5842507	0					
ANR	5845619	Identifier	NULL		5842507	1					
ANR	5845620	ExpressionStatement	index = 0	985:20:40834:40843	5842507	1	True				
ANR	5845621	AssignmentExpression	index = 0		5842507	0		=			
ANR	5845622	Identifier	index		5842507	0					
ANR	5845623	PrimaryExpression	0		5842507	1					
ANR	5845624	ExpressionStatement	ensure_closed = ( ( to_path == & stroke_path_body && lop_is_idempotent ( pgs -> log_op ) ) || ( lptr == NULL ? true : lptr -> thin ) )	988:16:40880:41067	5842507	7	True				
ANR	5845625	AssignmentExpression	ensure_closed = ( ( to_path == & stroke_path_body && lop_is_idempotent ( pgs -> log_op ) ) || ( lptr == NULL ? true : lptr -> thin ) )		5842507	0		=			
ANR	5845626	Identifier	ensure_closed		5842507	0					
ANR	5845627	OrExpression	( to_path == & stroke_path_body && lop_is_idempotent ( pgs -> log_op ) ) || ( lptr == NULL ? true : lptr -> thin )		5842507	1		||			
ANR	5845628	AndExpression	to_path == & stroke_path_body && lop_is_idempotent ( pgs -> log_op )		5842507	0		&&			
ANR	5845629	EqualityExpression	to_path == & stroke_path_body		5842507	0		==			
ANR	5845630	Identifier	to_path		5842507	0					
ANR	5845631	UnaryOperationExpression	& stroke_path_body		5842507	1					
ANR	5845632	UnaryOperator	&		5842507	0					
ANR	5845633	Identifier	stroke_path_body		5842507	1					
ANR	5845634	CallExpression	lop_is_idempotent ( pgs -> log_op )		5842507	1					
ANR	5845635	Callee	lop_is_idempotent		5842507	0					
ANR	5845636	Identifier	lop_is_idempotent		5842507	0					
ANR	5845637	ArgumentList	pgs -> log_op		5842507	1					
ANR	5845638	Argument	pgs -> log_op		5842507	0					
ANR	5845639	PtrMemberAccess	pgs -> log_op		5842507	0					
ANR	5845640	Identifier	pgs		5842507	0					
ANR	5845641	Identifier	log_op		5842507	1					
ANR	5845642	ConditionalExpression	lptr == NULL ? true : lptr -> thin		5842507	1					
ANR	5845643	Condition	lptr == NULL		5842507	0					
ANR	5845644	EqualityExpression	lptr == NULL		5842507	0		==			
ANR	5845645	Identifier	lptr		5842507	0					
ANR	5845646	Identifier	NULL		5842507	1					
ANR	5845647	Identifier	true		5842507	1					
ANR	5845648	PtrMemberAccess	lptr -> thin		5842507	2					
ANR	5845649	Identifier	lptr		5842507	0					
ANR	5845650	Identifier	thin		5842507	1					
ANR	5845651	ExpressionStatement	"code = ( * line_proc ) ( to_path , to_path_reverse , ensure_closed , first , & pl_prev , lptr , pdevc , dev , pgs , params , & cbox , uniform , join , initial_matrix_reflected , COMBINE_FLAGS ( flags ) )"	993:16:41206:41533	5842507	8	True				
ANR	5845652	AssignmentExpression	"code = ( * line_proc ) ( to_path , to_path_reverse , ensure_closed , first , & pl_prev , lptr , pdevc , dev , pgs , params , & cbox , uniform , join , initial_matrix_reflected , COMBINE_FLAGS ( flags ) )"		5842507	0		=			
ANR	5845653	Identifier	code		5842507	0					
ANR	5845654	CallExpression	"( * line_proc ) ( to_path , to_path_reverse , ensure_closed , first , & pl_prev , lptr , pdevc , dev , pgs , params , & cbox , uniform , join , initial_matrix_reflected , COMBINE_FLAGS ( flags ) )"		5842507	1					
ANR	5845655	Callee	* line_proc		5842507	0					
ANR	5845656	UnaryOperationExpression	* line_proc		5842507	0					
ANR	5845657	UnaryOperator	*		5842507	0					
ANR	5845658	Identifier	line_proc		5842507	1					
ANR	5845659	ArgumentList	to_path		5842507	1					
ANR	5845660	Argument	to_path		5842507	0					
ANR	5845661	Identifier	to_path		5842507	0					
ANR	5845662	Argument	to_path_reverse		5842507	1					
ANR	5845663	Identifier	to_path_reverse		5842507	0					
ANR	5845664	Argument	ensure_closed		5842507	2					
ANR	5845665	Identifier	ensure_closed		5842507	0					
ANR	5845666	Argument	first		5842507	3					
ANR	5845667	Identifier	first		5842507	0					
ANR	5845668	Argument	& pl_prev		5842507	4					
ANR	5845669	UnaryOperationExpression	& pl_prev		5842507	0					
ANR	5845670	UnaryOperator	&		5842507	0					
ANR	5845671	Identifier	pl_prev		5842507	1					
ANR	5845672	Argument	lptr		5842507	5					
ANR	5845673	Identifier	lptr		5842507	0					
ANR	5845674	Argument	pdevc		5842507	6					
ANR	5845675	Identifier	pdevc		5842507	0					
ANR	5845676	Argument	dev		5842507	7					
ANR	5845677	Identifier	dev		5842507	0					
ANR	5845678	Argument	pgs		5842507	8					
ANR	5845679	Identifier	pgs		5842507	0					
ANR	5845680	Argument	params		5842507	9					
ANR	5845681	Identifier	params		5842507	0					
ANR	5845682	Argument	& cbox		5842507	10					
ANR	5845683	UnaryOperationExpression	& cbox		5842507	0					
ANR	5845684	UnaryOperator	&		5842507	0					
ANR	5845685	Identifier	cbox		5842507	1					
ANR	5845686	Argument	uniform		5842507	11					
ANR	5845687	Identifier	uniform		5842507	0					
ANR	5845688	Argument	join		5842507	12					
ANR	5845689	Identifier	join		5842507	0					
ANR	5845690	Argument	initial_matrix_reflected		5842507	13					
ANR	5845691	Identifier	initial_matrix_reflected		5842507	0					
ANR	5845692	Argument	COMBINE_FLAGS ( flags )		5842507	14					
ANR	5845693	CallExpression	COMBINE_FLAGS ( flags )		5842507	0					
ANR	5845694	Callee	COMBINE_FLAGS		5842507	0					
ANR	5845695	Identifier	COMBINE_FLAGS		5842507	0					
ANR	5845696	ArgumentList	flags		5842507	1					
ANR	5845697	Argument	flags		5842507	0					
ANR	5845698	Identifier	flags		5842507	0					
ANR	5845699	IfStatement	if ( code < 0 )		5842507	9					
ANR	5845700	Condition	code < 0	998:20:41555:41562	5842507	0	True				
ANR	5845701	RelationalExpression	code < 0		5842507	0		<			
ANR	5845702	Identifier	code		5842507	0					
ANR	5845703	PrimaryExpression	0		5842507	1					
ANR	5845704	GotoStatement	goto exit ;	999:20:41585:41594	5842507	1	True				
ANR	5845705	Identifier	exit		5842507	0					
ANR	5845706	ExpressionStatement	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , false )"	1000:16:41612:41662	5842507	10	True				
ANR	5845707	CallExpression	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , false )"		5842507	0					
ANR	5845708	Callee	FILL_STROKE_PATH		5842507	0					
ANR	5845709	Identifier	FILL_STROKE_PATH		5842507	0					
ANR	5845710	ArgumentList	pdev		5842507	1					
ANR	5845711	Argument	pdev		5842507	0					
ANR	5845712	Identifier	pdev		5842507	0					
ANR	5845713	Argument	always_thin		5842507	1					
ANR	5845714	Identifier	always_thin		5842507	0					
ANR	5845715	Argument	pcpath		5842507	2					
ANR	5845716	Identifier	pcpath		5842507	0					
ANR	5845717	Argument	false		5842507	3					
ANR	5845718	Identifier	false		5842507	0					
ANR	5845719	ElseStatement	else		5842507	0					
ANR	5845720	IfStatement	if ( pseg -> type == s_gap )		5842507	0					
ANR	5845721	Condition	pseg -> type == s_gap	1001:23:41687:41705	5842507	0	True				
ANR	5845722	EqualityExpression	pseg -> type == s_gap		5842507	0		==			
ANR	5845723	PtrMemberAccess	pseg -> type		5842507	0					
ANR	5845724	Identifier	pseg		5842507	0					
ANR	5845725	Identifier	type		5842507	1					
ANR	5845726	Identifier	s_gap		5842507	1					
ANR	5845727	CompoundStatement		579:44:25213:25213	5842507	1					
ANR	5845728	ExpressionStatement	index = 0	1004:16:41834:41843	5842507	0	True				
ANR	5845729	AssignmentExpression	index = 0		5842507	0		=			
ANR	5845730	Identifier	index		5842507	0					
ANR	5845731	PrimaryExpression	0		5842507	1					
ANR	5845732	ElseStatement	else		5842507	0					
ANR	5845733	ExpressionStatement	pl_first = pl	1006:16:41880:41893	5842507	0	True				
ANR	5845734	AssignmentExpression	pl_first = pl		5842507	0		=			
ANR	5845735	Identifier	pl_first		5842507	0					
ANR	5845736	Identifier	pl		5842507	1					
ANR	5845737	ExpressionStatement	pl_prev = pl	1007:12:41907:41919	5842507	17	True				
ANR	5845738	AssignmentExpression	pl_prev = pl		5842507	0		=			
ANR	5845739	Identifier	pl_prev		5842507	0					
ANR	5845740	Identifier	pl		5842507	1					
ANR	5845741	ExpressionStatement	"x = sx , y = sy"	1008:12:41933:41947	5842507	18	True				
ANR	5845742	Expression	"x = sx , y = sy"		5842507	0					
ANR	5845743	AssignmentExpression	x = sx		5842507	0		=			
ANR	5845744	Identifier	x		5842507	0					
ANR	5845745	Identifier	sx		5842507	1					
ANR	5845746	AssignmentExpression	y = sy		5842507	1		=			
ANR	5845747	Identifier	y		5842507	0					
ANR	5845748	Identifier	sy		5842507	1					
ANR	5845749	ExpressionStatement	flags = ( flags << 4 ) | nf_all_from_arc	1009:12:41961:41997	5842507	19	True				
ANR	5845750	AssignmentExpression	flags = ( flags << 4 ) | nf_all_from_arc		5842507	0		=			
ANR	5845751	Identifier	flags		5842507	0					
ANR	5845752	InclusiveOrExpression	( flags << 4 ) | nf_all_from_arc		5842507	1		|			
ANR	5845753	ShiftExpression	flags << 4		5842507	0		<<			
ANR	5845754	Identifier	flags		5842507	0					
ANR	5845755	PrimaryExpression	4		5842507	1					
ANR	5845756	Identifier	nf_all_from_arc		5842507	1					
ANR	5845757	IfStatement	if ( index )		5842507	10					
ANR	5845758	Condition	index	1011:12:42021:42025	5842507	0	True				
ANR	5845759	Identifier	index		5842507	0					
ANR	5845760	CompoundStatement		599:12:26040:26173	5842507	1					
ANR	5845761	IdentifierDeclStatement	segment_notes notes = ( pseg == 0 ? ( const segment * ) spath -> first_subpath : pseg ) -> notes ;	1013:12:42101:42258	5842507	0	True				
ANR	5845762	IdentifierDecl	notes = ( pseg == 0 ? ( const segment * ) spath -> first_subpath : pseg ) -> notes		5842507	0					
ANR	5845763	IdentifierDeclType	segment_notes		5842507	0					
ANR	5845764	Identifier	notes		5842507	1					
ANR	5845765	AssignmentExpression	notes = ( pseg == 0 ? ( const segment * ) spath -> first_subpath : pseg ) -> notes		5842507	2		=			
ANR	5845766	Identifier	notes		5842507	0					
ANR	5845767	PtrMemberAccess	( pseg == 0 ? ( const segment * ) spath -> first_subpath : pseg ) -> notes		5842507	1					
ANR	5845768	ConditionalExpression	pseg == 0 ? ( const segment * ) spath -> first_subpath : pseg		5842507	0					
ANR	5845769	Condition	pseg == 0		5842507	0					
ANR	5845770	EqualityExpression	pseg == 0		5842507	0		==			
ANR	5845771	Identifier	pseg		5842507	0					
ANR	5845772	PrimaryExpression	0		5842507	1					
ANR	5845773	CastExpression	( const segment * ) spath -> first_subpath		5842507	1					
ANR	5845774	CastTarget	const segment *		5842507	0					
ANR	5845775	PtrMemberAccess	spath -> first_subpath		5842507	1					
ANR	5845776	Identifier	spath		5842507	0					
ANR	5845777	Identifier	first_subpath		5842507	1					
ANR	5845778	Identifier	pseg		5842507	2					
ANR	5845779	Identifier	notes		5842507	1					
ANR	5845780	IdentifierDeclStatement	gs_line_join join = ( notes & not_first ? curve_join : pgs_lp -> join ) ;	1016:12:42272:42372	5842507	1	True				
ANR	5845781	IdentifierDecl	join = ( notes & not_first ? curve_join : pgs_lp -> join )		5842507	0					
ANR	5845782	IdentifierDeclType	gs_line_join		5842507	0					
ANR	5845783	Identifier	join		5842507	1					
ANR	5845784	AssignmentExpression	join = ( notes & not_first ? curve_join : pgs_lp -> join )		5842507	2		=			
ANR	5845785	Identifier	join		5842507	0					
ANR	5845786	ConditionalExpression	notes & not_first ? curve_join : pgs_lp -> join		5842507	1					
ANR	5845787	Condition	notes & not_first		5842507	0					
ANR	5845788	BitAndExpression	notes & not_first		5842507	0		&			
ANR	5845789	Identifier	notes		5842507	0					
ANR	5845790	Identifier	not_first		5842507	1					
ANR	5845791	Identifier	curve_join		5842507	1					
ANR	5845792	PtrMemberAccess	pgs_lp -> join		5842507	2					
ANR	5845793	Identifier	pgs_lp		5842507	0					
ANR	5845794	Identifier	join		5842507	1					
ANR	5845795	IdentifierDeclStatement	gs_line_cap cap ;	1018:12:42386:42401	5842507	2	True				
ANR	5845796	IdentifierDecl	cap		5842507	0					
ANR	5845797	IdentifierDeclType	gs_line_cap		5842507	0					
ANR	5845798	Identifier	cap		5842507	1					
ANR	5845799	IdentifierDeclStatement	pl_ptr lptr = ( ! is_closed || join == gs_join_none || zero_length ? ( pl_ptr ) 0 : ( pl_ptr ) & pl_first ) ;	1021:12:42535:42668	5842507	3	True				
ANR	5845800	IdentifierDecl	lptr = ( ! is_closed || join == gs_join_none || zero_length ? ( pl_ptr ) 0 : ( pl_ptr ) & pl_first )		5842507	0					
ANR	5845801	IdentifierDeclType	pl_ptr		5842507	0					
ANR	5845802	Identifier	lptr		5842507	1					
ANR	5845803	AssignmentExpression	lptr = ( ! is_closed || join == gs_join_none || zero_length ? ( pl_ptr ) 0 : ( pl_ptr ) & pl_first )		5842507	2		=			
ANR	5845804	Identifier	lptr		5842507	0					
ANR	5845805	ConditionalExpression	! is_closed || join == gs_join_none || zero_length ? ( pl_ptr ) 0 : ( pl_ptr ) & pl_first		5842507	1					
ANR	5845806	Condition	! is_closed || join == gs_join_none || zero_length		5842507	0					
ANR	5845807	OrExpression	! is_closed || join == gs_join_none || zero_length		5842507	0		||			
ANR	5845808	UnaryOperationExpression	! is_closed		5842507	0					
ANR	5845809	UnaryOperator	!		5842507	0					
ANR	5845810	Identifier	is_closed		5842507	1					
ANR	5845811	OrExpression	join == gs_join_none || zero_length		5842507	1		||			
ANR	5845812	EqualityExpression	join == gs_join_none		5842507	0		==			
ANR	5845813	Identifier	join		5842507	0					
ANR	5845814	Identifier	gs_join_none		5842507	1					
ANR	5845815	Identifier	zero_length		5842507	1					
ANR	5845816	CastExpression	( pl_ptr ) 0		5842507	1					
ANR	5845817	CastTarget	pl_ptr		5842507	0					
ANR	5845818	PrimaryExpression	0		5842507	1					
ANR	5845819	CastExpression	( pl_ptr ) & pl_first		5842507	2					
ANR	5845820	CastTarget	pl_ptr		5842507	0					
ANR	5845821	UnaryOperationExpression	& pl_first		5842507	1					
ANR	5845822	UnaryOperator	&		5842507	0					
ANR	5845823	Identifier	pl_first		5842507	1					
ANR	5845824	IfStatement	if ( lptr && psub -> type == s_dash )		5842507	4					
ANR	5845825	Condition	lptr && psub -> type == s_dash	1026:16:42721:42748	5842507	0	True				
ANR	5845826	AndExpression	lptr && psub -> type == s_dash		5842507	0		&&			
ANR	5845827	Identifier	lptr		5842507	0					
ANR	5845828	EqualityExpression	psub -> type == s_dash		5842507	1		==			
ANR	5845829	PtrMemberAccess	psub -> type		5842507	0					
ANR	5845830	Identifier	psub		5842507	0					
ANR	5845831	Identifier	type		5842507	1					
ANR	5845832	Identifier	s_dash		5842507	1					
ANR	5845833	ExpressionStatement	lptr = NULL	1027:16:42767:42778	5842507	1	True				
ANR	5845834	AssignmentExpression	lptr = NULL		5842507	0		=			
ANR	5845835	Identifier	lptr		5842507	0					
ANR	5845836	Identifier	NULL		5842507	1					
ANR	5845837	IfStatement	if ( lptr && psub -> type == s_start && psub -> next && psub -> next -> type == s_gap )		5842507	5					
ANR	5845838	Condition	lptr && psub -> type == s_start && psub -> next && psub -> next -> type == s_gap	1030:16:42877:42948	5842507	0	True				
ANR	5845839	AndExpression	lptr && psub -> type == s_start && psub -> next && psub -> next -> type == s_gap		5842507	0		&&			
ANR	5845840	Identifier	lptr		5842507	0					
ANR	5845841	AndExpression	psub -> type == s_start && psub -> next && psub -> next -> type == s_gap		5842507	1		&&			
ANR	5845842	EqualityExpression	psub -> type == s_start		5842507	0		==			
ANR	5845843	PtrMemberAccess	psub -> type		5842507	0					
ANR	5845844	Identifier	psub		5842507	0					
ANR	5845845	Identifier	type		5842507	1					
ANR	5845846	Identifier	s_start		5842507	1					
ANR	5845847	AndExpression	psub -> next && psub -> next -> type == s_gap		5842507	1		&&			
ANR	5845848	PtrMemberAccess	psub -> next		5842507	0					
ANR	5845849	Identifier	psub		5842507	0					
ANR	5845850	Identifier	next		5842507	1					
ANR	5845851	EqualityExpression	psub -> next -> type == s_gap		5842507	1		==			
ANR	5845852	PtrMemberAccess	psub -> next -> type		5842507	0					
ANR	5845853	PtrMemberAccess	psub -> next		5842507	0					
ANR	5845854	Identifier	psub		5842507	0					
ANR	5845855	Identifier	next		5842507	1					
ANR	5845856	Identifier	type		5842507	1					
ANR	5845857	Identifier	s_gap		5842507	1					
ANR	5845858	ExpressionStatement	lptr = NULL	1031:16:42967:42978	5842507	1	True				
ANR	5845859	AssignmentExpression	lptr = NULL		5842507	0		=			
ANR	5845860	Identifier	lptr		5842507	0					
ANR	5845861	Identifier	NULL		5842507	1					
ANR	5845862	ExpressionStatement	flags = ( ( ( notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0 ) | ( ( notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc ) )	1033:12:42993:43286	5842507	6	True				
ANR	5845863	AssignmentExpression	flags = ( ( ( notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0 ) | ( ( notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc ) )		5842507	0		=			
ANR	5845864	Identifier	flags		5842507	0					
ANR	5845865	InclusiveOrExpression	( ( notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0 ) | ( ( notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc )		5842507	1		|			
ANR	5845866	ConditionalExpression	( notes & sn_not_first ) ? ( ( flags & nf_all_from_arc ) | nf_some_from_arc ) : 0		5842507	0					
ANR	5845867	Condition	notes & sn_not_first		5842507	0					
ANR	5845868	BitAndExpression	notes & sn_not_first		5842507	0		&			
ANR	5845869	Identifier	notes		5842507	0					
ANR	5845870	Identifier	sn_not_first		5842507	1					
ANR	5845871	InclusiveOrExpression	( flags & nf_all_from_arc ) | nf_some_from_arc		5842507	1		|			
ANR	5845872	BitAndExpression	flags & nf_all_from_arc		5842507	0		&			
ANR	5845873	Identifier	flags		5842507	0					
ANR	5845874	Identifier	nf_all_from_arc		5842507	1					
ANR	5845875	Identifier	nf_some_from_arc		5842507	1					
ANR	5845876	PrimaryExpression	0		5842507	2					
ANR	5845877	InclusiveOrExpression	( ( notes & sn_dash_head ) ? nf_dash_head : 0 ) | ( ( notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc )		5842507	1		|			
ANR	5845878	ConditionalExpression	( notes & sn_dash_head ) ? nf_dash_head : 0		5842507	0					
ANR	5845879	Condition	notes & sn_dash_head		5842507	0					
ANR	5845880	BitAndExpression	notes & sn_dash_head		5842507	0		&			
ANR	5845881	Identifier	notes		5842507	0					
ANR	5845882	Identifier	sn_dash_head		5842507	1					
ANR	5845883	Identifier	nf_dash_head		5842507	1					
ANR	5845884	PrimaryExpression	0		5842507	2					
ANR	5845885	InclusiveOrExpression	( ( notes & sn_dash_tail ) ? nf_dash_tail : 0 ) | ( flags & ~nf_all_from_arc )		5842507	1		|			
ANR	5845886	ConditionalExpression	( notes & sn_dash_tail ) ? nf_dash_tail : 0		5842507	0					
ANR	5845887	Condition	notes & sn_dash_tail		5842507	0					
ANR	5845888	BitAndExpression	notes & sn_dash_tail		5842507	0		&			
ANR	5845889	Identifier	notes		5842507	0					
ANR	5845890	Identifier	sn_dash_tail		5842507	1					
ANR	5845891	Identifier	nf_dash_tail		5842507	1					
ANR	5845892	PrimaryExpression	0		5842507	2					
ANR	5845893	BitAndExpression	flags & ~nf_all_from_arc		5842507	1		&			
ANR	5845894	Identifier	flags		5842507	0					
ANR	5845895	Identifier	~nf_all_from_arc		5842507	1					
ANR	5845896	ExpressionStatement	"code = ( * line_proc ) ( to_path , to_path_reverse , true , index - 1 , & pl_prev , lptr , pdevc , dev , pgs , params , & cbox , uniform , join , initial_matrix_reflected , COMBINE_FLAGS ( flags ) )"	1038:12:43300:43606	5842507	7	True				
ANR	5845897	AssignmentExpression	"code = ( * line_proc ) ( to_path , to_path_reverse , true , index - 1 , & pl_prev , lptr , pdevc , dev , pgs , params , & cbox , uniform , join , initial_matrix_reflected , COMBINE_FLAGS ( flags ) )"		5842507	0		=			
ANR	5845898	Identifier	code		5842507	0					
ANR	5845899	CallExpression	"( * line_proc ) ( to_path , to_path_reverse , true , index - 1 , & pl_prev , lptr , pdevc , dev , pgs , params , & cbox , uniform , join , initial_matrix_reflected , COMBINE_FLAGS ( flags ) )"		5842507	1					
ANR	5845900	Callee	* line_proc		5842507	0					
ANR	5845901	UnaryOperationExpression	* line_proc		5842507	0					
ANR	5845902	UnaryOperator	*		5842507	0					
ANR	5845903	Identifier	line_proc		5842507	1					
ANR	5845904	ArgumentList	to_path		5842507	1					
ANR	5845905	Argument	to_path		5842507	0					
ANR	5845906	Identifier	to_path		5842507	0					
ANR	5845907	Argument	to_path_reverse		5842507	1					
ANR	5845908	Identifier	to_path_reverse		5842507	0					
ANR	5845909	Argument	true		5842507	2					
ANR	5845910	Identifier	true		5842507	0					
ANR	5845911	Argument	index - 1		5842507	3					
ANR	5845912	AdditiveExpression	index - 1		5842507	0		-			
ANR	5845913	Identifier	index		5842507	0					
ANR	5845914	PrimaryExpression	1		5842507	1					
ANR	5845915	Argument	& pl_prev		5842507	4					
ANR	5845916	UnaryOperationExpression	& pl_prev		5842507	0					
ANR	5845917	UnaryOperator	&		5842507	0					
ANR	5845918	Identifier	pl_prev		5842507	1					
ANR	5845919	Argument	lptr		5842507	5					
ANR	5845920	Identifier	lptr		5842507	0					
ANR	5845921	Argument	pdevc		5842507	6					
ANR	5845922	Identifier	pdevc		5842507	0					
ANR	5845923	Argument	dev		5842507	7					
ANR	5845924	Identifier	dev		5842507	0					
ANR	5845925	Argument	pgs		5842507	8					
ANR	5845926	Identifier	pgs		5842507	0					
ANR	5845927	Argument	params		5842507	9					
ANR	5845928	Identifier	params		5842507	0					
ANR	5845929	Argument	& cbox		5842507	10					
ANR	5845930	UnaryOperationExpression	& cbox		5842507	0					
ANR	5845931	UnaryOperator	&		5842507	0					
ANR	5845932	Identifier	cbox		5842507	1					
ANR	5845933	Argument	uniform		5842507	11					
ANR	5845934	Identifier	uniform		5842507	0					
ANR	5845935	Argument	join		5842507	12					
ANR	5845936	Identifier	join		5842507	0					
ANR	5845937	Argument	initial_matrix_reflected		5842507	13					
ANR	5845938	Identifier	initial_matrix_reflected		5842507	0					
ANR	5845939	Argument	COMBINE_FLAGS ( flags )		5842507	14					
ANR	5845940	CallExpression	COMBINE_FLAGS ( flags )		5842507	0					
ANR	5845941	Callee	COMBINE_FLAGS		5842507	0					
ANR	5845942	Identifier	COMBINE_FLAGS		5842507	0					
ANR	5845943	ArgumentList	flags		5842507	1					
ANR	5845944	Argument	flags		5842507	0					
ANR	5845945	Identifier	flags		5842507	0					
ANR	5845946	IfStatement	if ( code < 0 )		5842507	8					
ANR	5845947	Condition	code < 0	1043:16:43624:43631	5842507	0	True				
ANR	5845948	RelationalExpression	code < 0		5842507	0		<			
ANR	5845949	Identifier	code		5842507	0					
ANR	5845950	PrimaryExpression	0		5842507	1					
ANR	5845951	GotoStatement	goto exit ;	1044:16:43650:43659	5842507	1	True				
ANR	5845952	Identifier	exit		5842507	0					
ANR	5845953	ExpressionStatement	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , false )"	1045:12:43673:43723	5842507	9	True				
ANR	5845954	CallExpression	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , false )"		5842507	0					
ANR	5845955	Callee	FILL_STROKE_PATH		5842507	0					
ANR	5845956	Identifier	FILL_STROKE_PATH		5842507	0					
ANR	5845957	ArgumentList	pdev		5842507	1					
ANR	5845958	Argument	pdev		5842507	0					
ANR	5845959	Identifier	pdev		5842507	0					
ANR	5845960	Argument	always_thin		5842507	1					
ANR	5845961	Identifier	always_thin		5842507	0					
ANR	5845962	Argument	pcpath		5842507	2					
ANR	5845963	Identifier	pcpath		5842507	0					
ANR	5845964	Argument	false		5842507	3					
ANR	5845965	Identifier	false		5842507	0					
ANR	5845966	ExpressionStatement	cap = ( ( flags & nf_prev_dash_head ) ? pgs_lp -> start_cap : pgs_lp -> dash_cap )	1046:12:43737:43830	5842507	10	True				
ANR	5845967	AssignmentExpression	cap = ( ( flags & nf_prev_dash_head ) ? pgs_lp -> start_cap : pgs_lp -> dash_cap )		5842507	0		=			
ANR	5845968	Identifier	cap		5842507	0					
ANR	5845969	ConditionalExpression	( flags & nf_prev_dash_head ) ? pgs_lp -> start_cap : pgs_lp -> dash_cap		5842507	1					
ANR	5845970	Condition	flags & nf_prev_dash_head		5842507	0					
ANR	5845971	BitAndExpression	flags & nf_prev_dash_head		5842507	0		&			
ANR	5845972	Identifier	flags		5842507	0					
ANR	5845973	Identifier	nf_prev_dash_head		5842507	1					
ANR	5845974	PtrMemberAccess	pgs_lp -> start_cap		5842507	1					
ANR	5845975	Identifier	pgs_lp		5842507	0					
ANR	5845976	Identifier	start_cap		5842507	1					
ANR	5845977	PtrMemberAccess	pgs_lp -> dash_cap		5842507	2					
ANR	5845978	Identifier	pgs_lp		5842507	0					
ANR	5845979	Identifier	dash_cap		5842507	1					
ANR	5845980	IfStatement	if ( traditional && lptr == 0 && cap != gs_cap_butt )		5842507	11					
ANR	5845981	Condition	traditional && lptr == 0 && cap != gs_cap_butt	1048:16:43848:43893	5842507	0	True				
ANR	5845982	AndExpression	traditional && lptr == 0 && cap != gs_cap_butt		5842507	0		&&			
ANR	5845983	Identifier	traditional		5842507	0					
ANR	5845984	AndExpression	lptr == 0 && cap != gs_cap_butt		5842507	1		&&			
ANR	5845985	EqualityExpression	lptr == 0		5842507	0		==			
ANR	5845986	Identifier	lptr		5842507	0					
ANR	5845987	PrimaryExpression	0		5842507	1					
ANR	5845988	EqualityExpression	cap != gs_cap_butt		5842507	1		!=			
ANR	5845989	Identifier	cap		5842507	0					
ANR	5845990	Identifier	gs_cap_butt		5842507	1					
ANR	5845991	CompoundStatement		626:64:27401:27401	5842507	1					
ANR	5845992	ExpressionStatement	"code = stroke_add_initial_cap_compat ( to_path , & pl_first , index == 1 , pdevc , dev , pgs )"	1050:16:43968:44053	5842507	0	True				
ANR	5845993	AssignmentExpression	"code = stroke_add_initial_cap_compat ( to_path , & pl_first , index == 1 , pdevc , dev , pgs )"		5842507	0		=			
ANR	5845994	Identifier	code		5842507	0					
ANR	5845995	CallExpression	"stroke_add_initial_cap_compat ( to_path , & pl_first , index == 1 , pdevc , dev , pgs )"		5842507	1					
ANR	5845996	Callee	stroke_add_initial_cap_compat		5842507	0					
ANR	5845997	Identifier	stroke_add_initial_cap_compat		5842507	0					
ANR	5845998	ArgumentList	to_path		5842507	1					
ANR	5845999	Argument	to_path		5842507	0					
ANR	5846000	Identifier	to_path		5842507	0					
ANR	5846001	Argument	& pl_first		5842507	1					
ANR	5846002	UnaryOperationExpression	& pl_first		5842507	0					
ANR	5846003	UnaryOperator	&		5842507	0					
ANR	5846004	Identifier	pl_first		5842507	1					
ANR	5846005	Argument	index == 1		5842507	2					
ANR	5846006	EqualityExpression	index == 1		5842507	0		==			
ANR	5846007	Identifier	index		5842507	0					
ANR	5846008	PrimaryExpression	1		5842507	1					
ANR	5846009	Argument	pdevc		5842507	3					
ANR	5846010	Identifier	pdevc		5842507	0					
ANR	5846011	Argument	dev		5842507	4					
ANR	5846012	Identifier	dev		5842507	0					
ANR	5846013	Argument	pgs		5842507	5					
ANR	5846014	Identifier	pgs		5842507	0					
ANR	5846015	IfStatement	if ( code < 0 )		5842507	1					
ANR	5846016	Condition	code < 0	1051:20:44075:44082	5842507	0	True				
ANR	5846017	RelationalExpression	code < 0		5842507	0		<			
ANR	5846018	Identifier	code		5842507	0					
ANR	5846019	PrimaryExpression	0		5842507	1					
ANR	5846020	GotoStatement	goto exit ;	1052:20:44105:44114	5842507	1	True				
ANR	5846021	Identifier	exit		5842507	0					
ANR	5846022	ExpressionStatement	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , false )"	1053:16:44132:44182	5842507	2	True				
ANR	5846023	CallExpression	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , false )"		5842507	0					
ANR	5846024	Callee	FILL_STROKE_PATH		5842507	0					
ANR	5846025	Identifier	FILL_STROKE_PATH		5842507	0					
ANR	5846026	ArgumentList	pdev		5842507	1					
ANR	5846027	Argument	pdev		5842507	0					
ANR	5846028	Identifier	pdev		5842507	0					
ANR	5846029	Argument	always_thin		5842507	1					
ANR	5846030	Identifier	always_thin		5842507	0					
ANR	5846031	Argument	pcpath		5842507	2					
ANR	5846032	Identifier	pcpath		5842507	0					
ANR	5846033	Argument	false		5842507	3					
ANR	5846034	Identifier	false		5842507	0					
ANR	5846035	ExpressionStatement	psub = ( const subpath * ) pseg	1056:8:44216:44244	5842507	11	True				
ANR	5846036	AssignmentExpression	psub = ( const subpath * ) pseg		5842507	0		=			
ANR	5846037	Identifier	psub		5842507	0					
ANR	5846038	CastExpression	( const subpath * ) pseg		5842507	1					
ANR	5846039	CastTarget	const subpath *		5842507	0					
ANR	5846040	Identifier	pseg		5842507	1					
ANR	5846041	IfStatement	if ( to_path_reverse != NULL )		5842507	172					
ANR	5846042	Condition	to_path_reverse != NULL	1058:8:44260:44282	5842507	0	True				
ANR	5846043	EqualityExpression	to_path_reverse != NULL		5842507	0		!=			
ANR	5846044	Identifier	to_path_reverse		5842507	0					
ANR	5846045	Identifier	NULL		5842507	1					
ANR	5846046	ExpressionStatement	"code = gx_join_path_and_reverse ( to_path , to_path_reverse )"	1059:8:44293:44350	5842507	1	True				
ANR	5846047	AssignmentExpression	"code = gx_join_path_and_reverse ( to_path , to_path_reverse )"		5842507	0		=			
ANR	5846048	Identifier	code		5842507	0					
ANR	5846049	CallExpression	"gx_join_path_and_reverse ( to_path , to_path_reverse )"		5842507	1					
ANR	5846050	Callee	gx_join_path_and_reverse		5842507	0					
ANR	5846051	Identifier	gx_join_path_and_reverse		5842507	0					
ANR	5846052	ArgumentList	to_path		5842507	1					
ANR	5846053	Argument	to_path		5842507	0					
ANR	5846054	Identifier	to_path		5842507	0					
ANR	5846055	Argument	to_path_reverse		5842507	1					
ANR	5846056	Identifier	to_path_reverse		5842507	0					
ANR	5846057	ExpressionStatement	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , true )"	1060:4:44356:44405	5842507	173	True				
ANR	5846058	CallExpression	"FILL_STROKE_PATH ( pdev , always_thin , pcpath , true )"		5842507	0					
ANR	5846059	Callee	FILL_STROKE_PATH		5842507	0					
ANR	5846060	Identifier	FILL_STROKE_PATH		5842507	0					
ANR	5846061	ArgumentList	pdev		5842507	1					
ANR	5846062	Argument	pdev		5842507	0					
ANR	5846063	Identifier	pdev		5842507	0					
ANR	5846064	Argument	always_thin		5842507	1					
ANR	5846065	Identifier	always_thin		5842507	0					
ANR	5846066	Argument	pcpath		5842507	2					
ANR	5846067	Identifier	pcpath		5842507	0					
ANR	5846068	Argument	true		5842507	3					
ANR	5846069	Identifier	true		5842507	0					
ANR	5846070	Label	exit :	1061:2:44409:44413	5842507	174	True				
ANR	5846071	Identifier	exit		5842507	0					
ANR	5846072	IfStatement	if ( dev == ( gx_device * ) & cdev )		5842507	175					
ANR	5846073	Condition	dev == ( gx_device * ) & cdev	1062:8:44423:44447	5842507	0	True				
ANR	5846074	EqualityExpression	dev == ( gx_device * ) & cdev		5842507	0		==			
ANR	5846075	Identifier	dev		5842507	0					
ANR	5846076	CastExpression	( gx_device * ) & cdev		5842507	1					
ANR	5846077	CastTarget	gx_device *		5842507	0					
ANR	5846078	UnaryOperationExpression	& cdev		5842507	1					
ANR	5846079	UnaryOperator	&		5842507	0					
ANR	5846080	Identifier	cdev		5842507	1					
ANR	5846081	ExpressionStatement	cdev . target -> sgr = cdev . sgr	1063:8:44458:44485	5842507	1	True				
ANR	5846082	AssignmentExpression	cdev . target -> sgr = cdev . sgr		5842507	0		=			
ANR	5846083	PtrMemberAccess	cdev . target -> sgr		5842507	0					
ANR	5846084	MemberAccess	cdev . target		5842507	0					
ANR	5846085	Identifier	cdev		5842507	0					
ANR	5846086	Identifier	target		5842507	1					
ANR	5846087	Identifier	sgr		5842507	1					
ANR	5846088	MemberAccess	cdev . sgr		5842507	1					
ANR	5846089	Identifier	cdev		5842507	0					
ANR	5846090	Identifier	sgr		5842507	1					
ANR	5846091	IfStatement	if ( to_path == & stroke_path_body )		5842507	176					
ANR	5846092	Condition	to_path == & stroke_path_body	1064:8:44495:44522	5842507	0	True				
ANR	5846093	EqualityExpression	to_path == & stroke_path_body		5842507	0		==			
ANR	5846094	Identifier	to_path		5842507	0					
ANR	5846095	UnaryOperationExpression	& stroke_path_body		5842507	1					
ANR	5846096	UnaryOperator	&		5842507	0					
ANR	5846097	Identifier	stroke_path_body		5842507	1					
ANR	5846098	ExpressionStatement	"gx_path_free ( & stroke_path_body , ""gx_stroke_path_only error"" )"	1065:8:44533:44593	5842507	1	True				
ANR	5846099	CallExpression	"gx_path_free ( & stroke_path_body , ""gx_stroke_path_only error"" )"		5842507	0					
ANR	5846100	Callee	gx_path_free		5842507	0					
ANR	5846101	Identifier	gx_path_free		5842507	0					
ANR	5846102	ArgumentList	& stroke_path_body		5842507	1					
ANR	5846103	Argument	& stroke_path_body		5842507	0					
ANR	5846104	UnaryOperationExpression	& stroke_path_body		5842507	0					
ANR	5846105	UnaryOperator	&		5842507	0					
ANR	5846106	Identifier	stroke_path_body		5842507	1					
ANR	5846107	Argument	"""gx_stroke_path_only error"""		5842507	1					
ANR	5846108	PrimaryExpression	"""gx_stroke_path_only error"""		5842507	0					
ANR	5846109	IfStatement	if ( to_path_reverse == & stroke_path_reverse )		5842507	177					
ANR	5846110	Condition	to_path_reverse == & stroke_path_reverse	1066:8:44634:44672	5842507	0	True				
ANR	5846111	EqualityExpression	to_path_reverse == & stroke_path_reverse		5842507	0		==			
ANR	5846112	Identifier	to_path_reverse		5842507	0					
ANR	5846113	UnaryOperationExpression	& stroke_path_reverse		5842507	1					
ANR	5846114	UnaryOperator	&		5842507	0					
ANR	5846115	Identifier	stroke_path_reverse		5842507	1					
ANR	5846116	ExpressionStatement	"gx_path_free ( & stroke_path_reverse , ""gx_stroke_path_only error"" )"	1067:8:44683:44746	5842507	1	True				
ANR	5846117	CallExpression	"gx_path_free ( & stroke_path_reverse , ""gx_stroke_path_only error"" )"		5842507	0					
ANR	5846118	Callee	gx_path_free		5842507	0					
ANR	5846119	Identifier	gx_path_free		5842507	0					
ANR	5846120	ArgumentList	& stroke_path_reverse		5842507	1					
ANR	5846121	Argument	& stroke_path_reverse		5842507	0					
ANR	5846122	UnaryOperationExpression	& stroke_path_reverse		5842507	0					
ANR	5846123	UnaryOperator	&		5842507	0					
ANR	5846124	Identifier	stroke_path_reverse		5842507	1					
ANR	5846125	Argument	"""gx_stroke_path_only error"""		5842507	1					
ANR	5846126	PrimaryExpression	"""gx_stroke_path_only error"""		5842507	0					
ANR	5846127	IfStatement	if ( dash_count )		5842507	178					
ANR	5846128	Condition	dash_count	1068:8:44756:44765	5842507	0	True				
ANR	5846129	Identifier	dash_count		5842507	0					
ANR	5846130	ExpressionStatement	"gx_path_free ( & dpath , ""gx_stroke_path exit(dash path)"" )"	1069:8:44776:44830	5842507	1	True				
ANR	5846131	CallExpression	"gx_path_free ( & dpath , ""gx_stroke_path exit(dash path)"" )"		5842507	0					
ANR	5846132	Callee	gx_path_free		5842507	0					
ANR	5846133	Identifier	gx_path_free		5842507	0					
ANR	5846134	ArgumentList	& dpath		5842507	1					
ANR	5846135	Argument	& dpath		5842507	0					
ANR	5846136	UnaryOperationExpression	& dpath		5842507	0					
ANR	5846137	UnaryOperator	&		5842507	0					
ANR	5846138	Identifier	dpath		5842507	1					
ANR	5846139	Argument	"""gx_stroke_path exit(dash path)"""		5842507	1					
ANR	5846140	PrimaryExpression	"""gx_stroke_path exit(dash path)"""		5842507	0					
ANR	5846141	Label	exf :	1070:2:44834:44837	5842507	179	True				
ANR	5846142	Identifier	exf		5842507	0					
ANR	5846143	IfStatement	if ( ppath -> curve_count )		5842507	180					
ANR	5846144	Condition	ppath -> curve_count	1071:8:44847:44864	5842507	0	True				
ANR	5846145	PtrMemberAccess	ppath -> curve_count		5842507	0					
ANR	5846146	Identifier	ppath		5842507	0					
ANR	5846147	Identifier	curve_count		5842507	1					
ANR	5846148	ExpressionStatement	"gx_path_free ( & fpath , ""gx_stroke_path exit(flattened path)"" )"	1072:8:44875:44934	5842507	1	True				
ANR	5846149	CallExpression	"gx_path_free ( & fpath , ""gx_stroke_path exit(flattened path)"" )"		5842507	0					
ANR	5846150	Callee	gx_path_free		5842507	0					
ANR	5846151	Identifier	gx_path_free		5842507	0					
ANR	5846152	ArgumentList	& fpath		5842507	1					
ANR	5846153	Argument	& fpath		5842507	0					
ANR	5846154	UnaryOperationExpression	& fpath		5842507	0					
ANR	5846155	UnaryOperator	&		5842507	0					
ANR	5846156	Identifier	fpath		5842507	1					
ANR	5846157	Argument	"""gx_stroke_path exit(flattened path)"""		5842507	1					
ANR	5846158	PrimaryExpression	"""gx_stroke_path exit(flattened path)"""		5842507	0					
ANR	5846159	ReturnStatement	return code ;	1073:4:44940:44951	5842507	181	True				
ANR	5846160	Identifier	code		5842507	0					
ANR	5846161	ReturnType	static int		5842507	1					
ANR	5846162	Identifier	gx_stroke_path_only_aux		5842507	2					
ANR	5846163	ParameterList	"gx_path * ppath , gx_path * to_path , gx_device * pdev , const gs_gstate * pgs , const gx_stroke_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		5842507	3					
ANR	5846164	Parameter	gx_path * ppath	420:24:16292:16306	5842507	0	True				
ANR	5846165	ParameterType	gx_path *		5842507	0					
ANR	5846166	Identifier	ppath		5842507	1					
ANR	5846167	Parameter	gx_path * to_path	420:41:16309:16325	5842507	1	True				
ANR	5846168	ParameterType	gx_path *		5842507	0					
ANR	5846169	Identifier	to_path		5842507	1					
ANR	5846170	Parameter	gx_device * pdev	420:60:16328:16343	5842507	2	True				
ANR	5846171	ParameterType	gx_device *		5842507	0					
ANR	5846172	Identifier	pdev		5842507	1					
ANR	5846173	Parameter	const gs_gstate * pgs	421:15:16361:16381	5842507	3	True				
ANR	5846174	ParameterType	const gs_gstate *		5842507	0					
ANR	5846175	Identifier	pgs		5842507	1					
ANR	5846176	Parameter	const gx_stroke_params * params	421:38:16384:16414	5842507	4	True				
ANR	5846177	ParameterType	const gx_stroke_params *		5842507	0					
ANR	5846178	Identifier	params		5842507	1					
ANR	5846179	Parameter	const gx_device_color * pdevc	422:17:16434:16462	5842507	5	True				
ANR	5846180	ParameterType	const gx_device_color *		5842507	0					
ANR	5846181	Identifier	pdevc		5842507	1					
ANR	5846182	Parameter	const gx_clip_path * pcpath	422:48:16465:16491	5842507	6	True				
ANR	5846183	ParameterType	const gx_clip_path *		5842507	0					
ANR	5846184	Identifier	pcpath		5842507	1					
ANR	5846185	CFGEntryNode	ENTRY		5842507		True				
ANR	5846186	CFGExitNode	EXIT		5842507		True				
ANR	5846187	Symbol	pgs_lp -> dot_length_absolute		5842507						
ANR	5846188	Symbol	params -> flatness		5842507						
ANR	5846189	Symbol	is_fzero		5842507						
ANR	5846190	Symbol	pd -> pt		5842507						
ANR	5846191	Symbol	spath -> first_subpath		5842507						
ANR	5846192	Symbol	nf_all_from_arc		5842507						
ANR	5846193	Symbol	* pgs		5842507						
ANR	5846194	Symbol	bbox		5842507						
ANR	5846195	Symbol	( pseg == 0 ? ( const segment * ) spath -> first_subpath : pseg ) -> notes		5842507						
ANR	5846196	Symbol	reflected		5842507						
ANR	5846197	Symbol	get_clipping_box		5842507						
ANR	5846198	Symbol	not_first		5842507						
ANR	5846199	Symbol	sn_none		5842507						
ANR	5846200	Symbol	pl . vector . x		5842507						
ANR	5846201	Symbol	min_fixed		5842507						
ANR	5846202	Symbol	pgs -> ctm . tx		5842507						
ANR	5846203	Symbol	max_dash_len		5842507						
ANR	5846204	Symbol	pgs -> ctm . ty		5842507						
ANR	5846205	Symbol	dev		5842507						
ANR	5846206	Symbol	gx_path_add_dash_expansion		5842507						
ANR	5846207	Symbol	~nf_all_from_arc		5842507						
ANR	5846208	Symbol	* pseg -> prev		5842507						
ANR	5846209	Symbol	& pl		5842507						
ANR	5846210	Symbol	ibox . p . x		5842507						
ANR	5846211	Symbol	ibox . p . y		5842507						
ANR	5846212	Symbol	pd -> pt . x		5842507						
ANR	5846213	Symbol	gs_join_bevel		5842507						
ANR	5846214	Symbol	pd -> pt . y		5842507						
ANR	5846215	Symbol	line_proc		5842507						
ANR	5846216	Symbol	gx_stroke_path_expansion		5842507						
ANR	5846217	Symbol	CPSI_mode		5842507						
ANR	5846218	Symbol	dash_count		5842507						
ANR	5846219	Symbol	stroke_fill		5842507						
ANR	5846220	Symbol	gs_join_round		5842507						
ANR	5846221	Symbol	* pgs_lp -> dash . pattern		5842507						
ANR	5846222	Symbol	pgs -> fill_adjust . y		5842507						
ANR	5846223	Symbol	pgs -> fill_adjust . x		5842507						
ANR	5846224	Symbol	sn_dash_head		5842507						
ANR	5846225	Symbol	bbox . p . y		5842507						
ANR	5846226	Symbol	bbox . p . x		5842507						
ANR	5846227	Symbol	cdev . target		5842507						
ANR	5846228	Symbol	& mat		5842507						
ANR	5846229	Symbol	to_path		5842507						
ANR	5846230	Symbol	pgs_lp -> dash . init_index		5842507						
ANR	5846231	Symbol	& cdev		5842507						
ANR	5846232	Symbol	expand_squared		5842507						
ANR	5846233	Symbol	end -> pt . y		5842507						
ANR	5846234	Symbol	end -> pt . x		5842507						
ANR	5846235	Symbol	& dpt		5842507						
ANR	5846236	Symbol	pgs_lp -> dot_orientation		5842507						
ANR	5846237	Symbol	sn_dash_tail		5842507						
ANR	5846238	Symbol	pl . e . cdelta		5842507						
ANR	5846239	Symbol	pl . o . p . y		5842507						
ANR	5846240	Symbol	pseg -> pt		5842507						
ANR	5846241	Symbol	pseg_notes		5842507						
ANR	5846242	Symbol	pl . o . p . x		5842507						
ANR	5846243	Symbol	pseg -> type		5842507						
ANR	5846244	Symbol	gx_dc_is_pattern1_color_clist_based		5842507						
ANR	5846245	Symbol	hypot		5842507						
ANR	5846246	Symbol	any_abs		5842507						
ANR	5846247	Symbol	fpath		5842507						
ANR	5846248	Symbol	pgs -> memory		5842507						
ANR	5846249	Symbol	pcpath		5842507						
ANR	5846250	Symbol	& pl_prev		5842507						
ANR	5846251	Symbol	* params		5842507						
ANR	5846252	Symbol	* * pgs_lp		5842507						
ANR	5846253	Symbol	gx_path_has_curves		5842507						
ANR	5846254	Symbol	fabs		5842507						
ANR	5846255	Symbol	& pl_first		5842507						
ANR	5846256	Symbol	sx		5842507						
ANR	5846257	Symbol	sy		5842507						
ANR	5846258	Symbol	i		5842507						
ANR	5846259	Symbol	gs_cap_butt		5842507						
ANR	5846260	Symbol	& dpath		5842507						
ANR	5846261	Symbol	pgs_lp -> start_cap		5842507						
ANR	5846262	Symbol	stroke_add_compat		5842507						
ANR	5846263	Symbol	& stroke_path_body		5842507						
ANR	5846264	Symbol	stroke_add		5842507						
ANR	5846265	Symbol	orient_portrait		5842507						
ANR	5846266	Symbol	expansion . x		5842507						
ANR	5846267	Symbol	x		5842507						
ANR	5846268	Symbol	s_dash		5842507						
ANR	5846269	Symbol	* pdev		5842507						
ANR	5846270	Symbol	y		5842507						
ANR	5846271	Symbol	* spath -> first_subpath		5842507						
ANR	5846272	Symbol	expansion . y		5842507						
ANR	5846273	Symbol	pgs_lp -> dash		5842507						
ANR	5846274	Symbol	pl . o . p		5842507						
ANR	5846275	Symbol	pgs_lp -> dash . init_ink_on		5842507						
ANR	5846276	Symbol	pd -> tangent . y		5842507						
ANR	5846277	Symbol	pd -> tangent . x		5842507						
ANR	5846278	Symbol	notes		5842507						
ANR	5846279	Symbol	* pmat		5842507						
ANR	5846280	Symbol	& cbox		5842507						
ANR	5846281	Symbol	always_thin		5842507						
ANR	5846282	Symbol	bbox . q . x		5842507						
ANR	5846283	Symbol	bbox . q . y		5842507						
ANR	5846284	Symbol	pl . e . p		5842507						
ANR	5846285	Symbol	pgs -> ctm . xx		5842507						
ANR	5846286	Symbol	* cdev		5842507						
ANR	5846287	Symbol	cdev . sgr		5842507						
ANR	5846288	Symbol	pgs -> ctm . xy		5842507						
ANR	5846289	Symbol	* lptr		5842507						
ANR	5846290	Symbol	gs_join_none		5842507						
ANR	5846291	Symbol	dev -> sgr		5842507						
ANR	5846292	Symbol	is_closed		5842507						
ANR	5846293	Symbol	device_dot_length		5842507						
ANR	5846294	Symbol	pgs_lp -> miter_limit		5842507						
ANR	5846295	Symbol	pgs_lp -> dot_orientation . xy		5842507						
ANR	5846296	Symbol	stroke_add_initial_cap_compat		5842507						
ANR	5846297	Symbol	cbox		5842507						
ANR	5846298	Symbol	initial_matrix_reflected		5842507						
ANR	5846299	Symbol	pgs_lp -> dash . init_dist_left		5842507						
ANR	5846300	Symbol	pseg -> pt . x		5842507						
ANR	5846301	Symbol	pseg -> pt . y		5842507						
ANR	5846302	Symbol	pgs -> ctm		5842507						
ANR	5846303	Symbol	dmax		5842507						
ANR	5846304	Symbol	& ibox		5842507						
ANR	5846305	Symbol	pl . e . p . x		5842507						
ANR	5846306	Symbol	pgs -> ctm . yy		5842507						
ANR	5846307	Symbol	ibox . q . y		5842507						
ANR	5846308	Symbol	nf_dash_head		5842507						
ANR	5846309	Symbol	* psub -> next		5842507						
ANR	5846310	Symbol	pgs -> ctm . yx		5842507						
ANR	5846311	Symbol	& initial_matrix		5842507						
ANR	5846312	Symbol	adjust		5842507						
ANR	5846313	Symbol	pl . e . p . y		5842507						
ANR	5846314	Symbol	ibox . q . x		5842507						
ANR	5846315	Symbol	params -> traditional		5842507						
ANR	5846316	Symbol	nf_prev_dash_head		5842507						
ANR	5846317	Symbol	to_path_reverse		5842507						
ANR	5846318	Symbol	pmat		5842507						
ANR	5846319	Symbol	pseg -> notes		5842507						
ANR	5846320	Symbol	line_width		5842507						
ANR	5846321	Symbol	fill_params . rule		5842507						
ANR	5846322	Symbol	ppath		5842507						
ANR	5846323	Symbol	zero_length		5842507						
ANR	5846324	Symbol	width_is_thin		5842507						
ANR	5846325	Symbol	initial_matrix		5842507						
ANR	5846326	Symbol	pgs -> flatness		5842507						
ANR	5846327	Symbol	wl		5842507						
ANR	5846328	Symbol	dev_proc		5842507						
ANR	5846329	Symbol	pgs_lp -> join		5842507						
ANR	5846330	Symbol	ppath -> memory		5842507						
ANR	5846331	Symbol	gx_path_add_flattened_for_stroke		5842507						
ANR	5846332	Symbol	end		5842507						
ANR	5846333	Symbol	bbox . q		5842507						
ANR	5846334	Symbol	pl_prev		5842507						
ANR	5846335	Symbol	* pseg -> next		5842507						
ANR	5846336	Symbol	false		5842507						
ANR	5846337	Symbol	rect_within		5842507						
ANR	5846338	Symbol	xa		5842507						
ANR	5846339	Symbol	bbox . p		5842507						
ANR	5846340	Symbol	pl . width		5842507						
ANR	5846341	Symbol	pgs -> fill_adjust		5842507						
ANR	5846342	Symbol	ibox		5842507						
ANR	5846343	Symbol	pl . vector . y		5842507						
ANR	5846344	Symbol	fill_params		5842507						
ANR	5846345	Symbol	pl . vector		5842507						
ANR	5846346	Symbol	cdev		5842507						
ANR	5846347	Symbol	* cdev . target		5842507						
ANR	5846348	Symbol	xx		5842507						
ANR	5846349	Symbol	xy		5842507						
ANR	5846350	Symbol	pdevc		5842507						
ANR	5846351	Symbol	ya		5842507						
ANR	5846352	Symbol	nf_dash_tail		5842507						
ANR	5846353	Symbol	sqrt		5842507						
ANR	5846354	Symbol	pdev -> max_fill_band		5842507						
ANR	5846355	Symbol	join		5842507						
ANR	5846356	Symbol	yx		5842507						
ANR	5846357	Symbol	yy		5842507						
ANR	5846358	Symbol	get_initial_matrix		5842507						
ANR	5846359	Symbol	pl_first		5842507						
ANR	5846360	Symbol	index		5842507						
ANR	5846361	Symbol	& bbox		5842507						
ANR	5846362	Symbol	psub -> next		5842507						
ANR	5846363	Symbol	params		5842507						
ANR	5846364	Symbol	is_dash_segment		5842507						
ANR	5846365	Symbol	dpt . y		5842507						
ANR	5846366	Symbol	lptr		5842507						
ANR	5846367	Symbol	dpt . x		5842507						
ANR	5846368	Symbol	traditional		5842507						
ANR	5846369	Symbol	ibox . p		5842507						
ANR	5846370	Symbol	ibox . q		5842507						
ANR	5846371	Symbol	lop_is_idempotent		5842507						
ANR	5846372	Symbol	pgs_lp -> end_cap		5842507						
ANR	5846373	Symbol	pgs_lp -> dash . pattern_size		5842507						
ANR	5846374	Symbol	dpath		5842507						
ANR	5846375	Symbol	nf_some_from_arc		5842507						
ANR	5846376	Symbol	* dev		5842507						
ANR	5846377	Symbol	gx_join_path_and_reverse		5842507						
ANR	5846378	Symbol	* pgs_lp		5842507						
ANR	5846379	Symbol	flags		5842507						
ANR	5846380	Symbol	* spath		5842507						
ANR	5846381	Symbol	uniform		5842507						
ANR	5846382	Symbol	gs_currentcpsimode		5842507						
ANR	5846383	Symbol	line_width_and_scale		5842507						
ANR	5846384	Symbol	COMBINE_FLAGS		5842507						
ANR	5846385	Symbol	pgs_lp -> half_width		5842507						
ANR	5846386	Symbol	pgs		5842507						
ANR	5846387	Symbol	pseg -> prev		5842507						
ANR	5846388	Symbol	mat		5842507						
ANR	5846389	Symbol	psub -> type		5842507						
ANR	5846390	Symbol	max		5842507						
ANR	5846391	Symbol	pgs -> line_params . half_width		5842507						
ANR	5846392	Symbol	dpt		5842507						
ANR	5846393	Symbol	dpy		5842507						
ANR	5846394	Symbol	dpx		5842507						
ANR	5846395	Symbol	pgs_lp -> miter_check		5842507						
ANR	5846396	Symbol	* pgs_lp -> dash		5842507						
ANR	5846397	Symbol	& expansion		5842507						
ANR	5846398	Symbol	max_rr		5842507						
ANR	5846399	Symbol	pseg -> next -> type		5842507						
ANR	5846400	Symbol	int2fixed		5842507						
ANR	5846401	Symbol	& pgs -> ctm		5842507						
ANR	5846402	Symbol	first		5842507						
ANR	5846403	Symbol	pd -> tangent		5842507						
ANR	5846404	Symbol	pgs -> line_params . dot_length		5842507						
ANR	5846405	Symbol	s_start		5842507						
ANR	5846406	Symbol	pgs -> line_params		5842507						
ANR	5846407	Symbol	& fpath		5842507						
ANR	5846408	Symbol	pl . width . x		5842507						
ANR	5846409	Symbol	pl . width . y		5842507						
ANR	5846410	Symbol	psub -> next -> type		5842507						
ANR	5846411	Symbol	* * pseg		5842507						
ANR	5846412	Symbol	gx_rule_winding_number		5842507						
ANR	5846413	Symbol	s_gap		5842507						
ANR	5846414	Symbol	stroke_path_body		5842507						
ANR	5846415	Symbol	spath		5842507						
ANR	5846416	Symbol	pseg -> next		5842507						
ANR	5846417	Symbol	pdev		5842507						
ANR	5846418	Symbol	udy1		5842507						
ANR	5846419	Symbol	fixed_1		5842507						
ANR	5846420	Symbol	max_fixed		5842507						
ANR	5846421	Symbol	gs_currentlineparams_inline		5842507						
ANR	5846422	Symbol	gs_debug_c		5842507						
ANR	5846423	Symbol	pgs_lp -> curve_join		5842507						
ANR	5846424	Symbol	stroke_path_reverse		5842507						
ANR	5846425	Symbol	* ppath		5842507						
ANR	5846426	Symbol	gs_gstate_idtransform		5842507						
ANR	5846427	Symbol	curve_join		5842507						
ANR	5846428	Symbol	NULL		5842507						
ANR	5846429	Symbol	orient		5842507						
ANR	5846430	Symbol	pmat -> yy		5842507						
ANR	5846431	Symbol	ensure_closed		5842507						
ANR	5846432	Symbol	* psub		5842507						
ANR	5846433	Symbol	fill_params . flatness		5842507						
ANR	5846434	Symbol	ppath -> curve_count		5842507						
ANR	5846435	Symbol	& stroke_path_reverse		5842507						
ANR	5846436	Symbol	end -> pt		5842507						
ANR	5846437	Symbol	pseg -> prev -> type		5842507						
ANR	5846438	Symbol	initial_matrix . xy		5842507						
ANR	5846439	Symbol	lptr -> thin		5842507						
ANR	5846440	Symbol	initial_matrix . xx		5842507						
ANR	5846441	Symbol	expansion		5842507						
ANR	5846442	Symbol	pl . e . cdelta . x		5842507						
ANR	5846443	Symbol	pl . e . cdelta . y		5842507						
ANR	5846444	Symbol	pgs_lp		5842507						
ANR	5846445	Symbol	true		5842507						
ANR	5846446	Symbol	* pseg		5842507						
ANR	5846447	Symbol	* pd		5842507						
ANR	5846448	Symbol	* end		5842507						
ANR	5846449	Symbol	dev -> sgr . stroke_stored		5842507						
ANR	5846450	Symbol	pmat -> xy		5842507						
ANR	5846451	Symbol	udx1		5842507						
ANR	5846452	Symbol	pl . thin		5842507						
ANR	5846453	Symbol	psub -> last		5842507						
ANR	5846454	Symbol	code		5842507						
ANR	5846455	Symbol	device_line_width_scale		5842507						
ANR	5846456	Symbol	gx_path_has_long_segments		5842507						
ANR	5846457	Symbol	pl . o		5842507						
ANR	5846458	Symbol	~sn_not_first		5842507						
ANR	5846459	Symbol	udx		5842507						
ANR	5846460	Symbol	scale		5842507						
ANR	5846461	Symbol	ppath -> first_subpath		5842507						
ANR	5846462	Symbol	udy		5842507						
ANR	5846463	Symbol	initial_matrix . yx		5842507						
ANR	5846464	Symbol	pgs_lp -> dash_cap		5842507						
ANR	5846465	Symbol	( ( const subpath * ) pseg ) -> is_closed		5842507						
ANR	5846466	Symbol	initial_matrix . yy		5842507						
ANR	5846467	Symbol	pl . e		5842507						
ANR	5846468	Symbol	pseg		5842507						
ANR	5846469	Symbol	cap		5842507						
ANR	5846470	Symbol	stroke_add_fast		5842507						
ANR	5846471	Symbol	pgs_lp -> dash . offset		5842507						
ANR	5846472	Symbol	cdev . target -> sgr		5842507						
ANR	5846473	Symbol	pgs_lp -> dash . pattern		5842507						
ANR	5846474	Symbol	gs_cap_round		5842507						
ANR	5846475	Symbol	pgs -> log_op		5842507						
ANR	5846476	Symbol	psub		5842507						
ANR	5846477	Symbol	fixed2float		5842507						
ANR	5846478	Symbol	* * spath		5842507						
ANR	5846479	Symbol	pgs_lp -> dot_length		5842507						
ANR	5846480	Symbol	* * psub		5842507						
ANR	5846481	Symbol	* line_proc		5842507						
ANR	5846482	Symbol	* i		5842507						
ANR	5846483	Symbol	pd		5842507						
ANR	5846484	Symbol	cdev . max_fill_band		5842507						
ANR	5846485	Symbol	sn_not_first		5842507						
ANR	5846486	Symbol	pl		5842507						
ANR	5846487	Function	gx_stroke_path_only	1076:0:44956:45270							
ANR	5846488	FunctionDef	"gx_stroke_path_only (gx_path * ppath , gx_path * to_path , gx_device * pdev , const gs_gstate * pgs , const gx_stroke_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		5846487	0					
ANR	5846489	CompoundStatement		1080:0:45182:45270	5846487	0					
ANR	5846490	ReturnStatement	"return gx_stroke_path_only_aux ( ppath , to_path , pdev , pgs , params , pdevc , pcpath ) ;"	1081:4:45188:45268	5846487	0	True				
ANR	5846491	CallExpression	"gx_stroke_path_only_aux ( ppath , to_path , pdev , pgs , params , pdevc , pcpath )"		5846487	0					
ANR	5846492	Callee	gx_stroke_path_only_aux		5846487	0					
ANR	5846493	Identifier	gx_stroke_path_only_aux		5846487	0					
ANR	5846494	ArgumentList	ppath		5846487	1					
ANR	5846495	Argument	ppath		5846487	0					
ANR	5846496	Identifier	ppath		5846487	0					
ANR	5846497	Argument	to_path		5846487	1					
ANR	5846498	Identifier	to_path		5846487	0					
ANR	5846499	Argument	pdev		5846487	2					
ANR	5846500	Identifier	pdev		5846487	0					
ANR	5846501	Argument	pgs		5846487	3					
ANR	5846502	Identifier	pgs		5846487	0					
ANR	5846503	Argument	params		5846487	4					
ANR	5846504	Identifier	params		5846487	0					
ANR	5846505	Argument	pdevc		5846487	5					
ANR	5846506	Identifier	pdevc		5846487	0					
ANR	5846507	Argument	pcpath		5846487	6					
ANR	5846508	Identifier	pcpath		5846487	0					
ANR	5846509	ReturnType	int		5846487	1					
ANR	5846510	Identifier	gx_stroke_path_only		5846487	2					
ANR	5846511	ParameterList	"gx_path * ppath , gx_path * to_path , gx_device * pdev , const gs_gstate * pgs , const gx_stroke_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		5846487	3					
ANR	5846512	Parameter	gx_path * ppath	1077:20:44980:44994	5846487	0	True				
ANR	5846513	ParameterType	gx_path *		5846487	0					
ANR	5846514	Identifier	ppath		5846487	1					
ANR	5846515	Parameter	gx_path * to_path	1077:37:44997:45013	5846487	1	True				
ANR	5846516	ParameterType	gx_path *		5846487	0					
ANR	5846517	Identifier	to_path		5846487	1					
ANR	5846518	Parameter	gx_device * pdev	1077:56:45016:45031	5846487	2	True				
ANR	5846519	ParameterType	gx_device *		5846487	0					
ANR	5846520	Identifier	pdev		5846487	1					
ANR	5846521	Parameter	const gs_gstate * pgs	1078:15:45049:45069	5846487	3	True				
ANR	5846522	ParameterType	const gs_gstate *		5846487	0					
ANR	5846523	Identifier	pgs		5846487	1					
ANR	5846524	Parameter	const gx_stroke_params * params	1078:38:45072:45102	5846487	4	True				
ANR	5846525	ParameterType	const gx_stroke_params *		5846487	0					
ANR	5846526	Identifier	params		5846487	1					
ANR	5846527	Parameter	const gx_device_color * pdevc	1079:17:45122:45150	5846487	5	True				
ANR	5846528	ParameterType	const gx_device_color *		5846487	0					
ANR	5846529	Identifier	pdevc		5846487	1					
ANR	5846530	Parameter	const gx_clip_path * pcpath	1079:48:45153:45179	5846487	6	True				
ANR	5846531	ParameterType	const gx_clip_path *		5846487	0					
ANR	5846532	Identifier	pcpath		5846487	1					
ANR	5846533	CFGEntryNode	ENTRY		5846487		True				
ANR	5846534	CFGExitNode	EXIT		5846487		True				
ANR	5846535	Symbol	gx_stroke_path_only_aux		5846487						
ANR	5846536	Symbol	pdev		5846487						
ANR	5846537	Symbol	to_path		5846487						
ANR	5846538	Symbol	pdevc		5846487						
ANR	5846539	Symbol	ppath		5846487						
ANR	5846540	Symbol	params		5846487						
ANR	5846541	Symbol	pgs		5846487						
ANR	5846542	Symbol	pcpath		5846487						
ANR	5846543	Function	width_is_thin	1092:0:45595:46684							
ANR	5846544	FunctionDef	width_is_thin (pl_ptr plp)		5846543	0					
ANR	5846545	CompoundStatement		1094:0:45633:46684	5846543	0					
ANR	5846546	IdentifierDeclStatement	"fixed dx , dy , wx = plp -> width . x , wy = plp -> width . y ;"	1095:4:45639:45689	5846543	0	True				
ANR	5846547	IdentifierDecl	dx		5846543	0					
ANR	5846548	IdentifierDeclType	fixed		5846543	0					
ANR	5846549	Identifier	dx		5846543	1					
ANR	5846550	IdentifierDecl	dy		5846543	1					
ANR	5846551	IdentifierDeclType	fixed		5846543	0					
ANR	5846552	Identifier	dy		5846543	1					
ANR	5846553	IdentifierDecl	wx = plp -> width . x		5846543	2					
ANR	5846554	IdentifierDeclType	fixed		5846543	0					
ANR	5846555	Identifier	wx		5846543	1					
ANR	5846556	AssignmentExpression	wx = plp -> width . x		5846543	2		=			
ANR	5846557	Identifier	wx		5846543	0					
ANR	5846558	MemberAccess	plp -> width . x		5846543	1					
ANR	5846559	PtrMemberAccess	plp -> width		5846543	0					
ANR	5846560	Identifier	plp		5846543	0					
ANR	5846561	Identifier	width		5846543	1					
ANR	5846562	Identifier	x		5846543	1					
ANR	5846563	IdentifierDecl	wy = plp -> width . y		5846543	3					
ANR	5846564	IdentifierDeclType	fixed		5846543	0					
ANR	5846565	Identifier	wy		5846543	1					
ANR	5846566	AssignmentExpression	wy = plp -> width . y		5846543	2		=			
ANR	5846567	Identifier	wy		5846543	0					
ANR	5846568	MemberAccess	plp -> width . y		5846543	1					
ANR	5846569	PtrMemberAccess	plp -> width		5846543	0					
ANR	5846570	Identifier	plp		5846543	0					
ANR	5846571	Identifier	width		5846543	1					
ANR	5846572	Identifier	y		5846543	1					
ANR	5846573	IfStatement	if ( ( dy = plp -> vector . y ) == 0 )		5846543	1					
ANR	5846574	Condition	( dy = plp -> vector . y ) == 0	1098:8:45766:45790	5846543	0	True				
ANR	5846575	EqualityExpression	( dy = plp -> vector . y ) == 0		5846543	0		==			
ANR	5846576	AssignmentExpression	dy = plp -> vector . y		5846543	0		=			
ANR	5846577	Identifier	dy		5846543	0					
ANR	5846578	MemberAccess	plp -> vector . y		5846543	1					
ANR	5846579	PtrMemberAccess	plp -> vector		5846543	0					
ANR	5846580	Identifier	plp		5846543	0					
ANR	5846581	Identifier	vector		5846543	1					
ANR	5846582	Identifier	y		5846543	1					
ANR	5846583	PrimaryExpression	0		5846543	1					
ANR	5846584	ReturnStatement	return any_abs ( wy ) < fixed_half ;	1099:8:45801:45832	5846543	1	True				
ANR	5846585	RelationalExpression	any_abs ( wy ) < fixed_half		5846543	0		<			
ANR	5846586	CallExpression	any_abs ( wy )		5846543	0					
ANR	5846587	Callee	any_abs		5846543	0					
ANR	5846588	Identifier	any_abs		5846543	0					
ANR	5846589	ArgumentList	wy		5846543	1					
ANR	5846590	Argument	wy		5846543	0					
ANR	5846591	Identifier	wy		5846543	0					
ANR	5846592	Identifier	fixed_half		5846543	1					
ANR	5846593	IfStatement	if ( ( dx = plp -> vector . x ) == 0 )		5846543	2					
ANR	5846594	Condition	( dx = plp -> vector . x ) == 0	1100:8:45842:45866	5846543	0	True				
ANR	5846595	EqualityExpression	( dx = plp -> vector . x ) == 0		5846543	0		==			
ANR	5846596	AssignmentExpression	dx = plp -> vector . x		5846543	0		=			
ANR	5846597	Identifier	dx		5846543	0					
ANR	5846598	MemberAccess	plp -> vector . x		5846543	1					
ANR	5846599	PtrMemberAccess	plp -> vector		5846543	0					
ANR	5846600	Identifier	plp		5846543	0					
ANR	5846601	Identifier	vector		5846543	1					
ANR	5846602	Identifier	x		5846543	1					
ANR	5846603	PrimaryExpression	0		5846543	1					
ANR	5846604	ReturnStatement	return any_abs ( wx ) < fixed_half ;	1101:8:45877:45908	5846543	1	True				
ANR	5846605	RelationalExpression	any_abs ( wx ) < fixed_half		5846543	0		<			
ANR	5846606	CallExpression	any_abs ( wx )		5846543	0					
ANR	5846607	Callee	any_abs		5846543	0					
ANR	5846608	Identifier	any_abs		5846543	0					
ANR	5846609	ArgumentList	wx		5846543	1					
ANR	5846610	Argument	wx		5846543	0					
ANR	5846611	Identifier	wx		5846543	0					
ANR	5846612	Identifier	fixed_half		5846543	1					
ANR	5846613	IfStatement	if ( any_abs ( wx ) < fixed_half && any_abs ( wy ) < fixed_half )		5846543	3					
ANR	5846614	Condition	any_abs ( wx ) < fixed_half && any_abs ( wy ) < fixed_half	1107:8:46024:46075	5846543	0	True				
ANR	5846615	AndExpression	any_abs ( wx ) < fixed_half && any_abs ( wy ) < fixed_half		5846543	0		&&			
ANR	5846616	RelationalExpression	any_abs ( wx ) < fixed_half		5846543	0		<			
ANR	5846617	CallExpression	any_abs ( wx )		5846543	0					
ANR	5846618	Callee	any_abs		5846543	0					
ANR	5846619	Identifier	any_abs		5846543	0					
ANR	5846620	ArgumentList	wx		5846543	1					
ANR	5846621	Argument	wx		5846543	0					
ANR	5846622	Identifier	wx		5846543	0					
ANR	5846623	Identifier	fixed_half		5846543	1					
ANR	5846624	RelationalExpression	any_abs ( wy ) < fixed_half		5846543	1		<			
ANR	5846625	CallExpression	any_abs ( wy )		5846543	0					
ANR	5846626	Callee	any_abs		5846543	0					
ANR	5846627	Identifier	any_abs		5846543	0					
ANR	5846628	ArgumentList	wy		5846543	1					
ANR	5846629	Argument	wy		5846543	0					
ANR	5846630	Identifier	wy		5846543	0					
ANR	5846631	Identifier	fixed_half		5846543	1					
ANR	5846632	ReturnStatement	return true ;	1108:8:46086:46097	5846543	1	True				
ANR	5846633	Identifier	true		5846543	0					
ANR	5846634	CompoundStatement		27:8:847:873	5846543	4					
ANR	5846635	IdentifierDeclStatement	"double C = dx , D = dy ;"	1118:8:46412:46433	5846543	0	True				
ANR	5846636	IdentifierDecl	C = dx		5846543	0					
ANR	5846637	IdentifierDeclType	double		5846543	0					
ANR	5846638	Identifier	C		5846543	1					
ANR	5846639	AssignmentExpression	C = dx		5846543	2		=			
ANR	5846640	Identifier	dx		5846543	0					
ANR	5846641	Identifier	dx		5846543	1					
ANR	5846642	IdentifierDecl	D = dy		5846543	1					
ANR	5846643	IdentifierDeclType	double		5846543	0					
ANR	5846644	Identifier	D		5846543	1					
ANR	5846645	AssignmentExpression	D = dy		5846543	2		=			
ANR	5846646	Identifier	dy		5846543	0					
ANR	5846647	Identifier	dy		5846543	1					
ANR	5846648	IdentifierDeclStatement	double num = C * wy - D * wx ;	1119:8:46443:46471	5846543	1	True				
ANR	5846649	IdentifierDecl	num = C * wy - D * wx		5846543	0					
ANR	5846650	IdentifierDeclType	double		5846543	0					
ANR	5846651	Identifier	num		5846543	1					
ANR	5846652	AssignmentExpression	num = C * wy - D * wx		5846543	2		=			
ANR	5846653	Identifier	num		5846543	0					
ANR	5846654	AdditiveExpression	C * wy - D * wx		5846543	1		-			
ANR	5846655	MultiplicativeExpression	C * wy		5846543	0		*			
ANR	5846656	Identifier	C		5846543	0					
ANR	5846657	Identifier	wy		5846543	1					
ANR	5846658	MultiplicativeExpression	D * wx		5846543	1		*			
ANR	5846659	Identifier	D		5846543	0					
ANR	5846660	Identifier	wx		5846543	1					
ANR	5846661	IdentifierDeclStatement	"double denom = hypot ( C , D ) ;"	1120:8:46481:46507	5846543	2	True				
ANR	5846662	IdentifierDecl	"denom = hypot ( C , D )"		5846543	0					
ANR	5846663	IdentifierDeclType	double		5846543	0					
ANR	5846664	Identifier	denom		5846543	1					
ANR	5846665	AssignmentExpression	"denom = hypot ( C , D )"		5846543	2		=			
ANR	5846666	Identifier	denom		5846543	0					
ANR	5846667	CallExpression	"hypot ( C , D )"		5846543	1					
ANR	5846668	Callee	hypot		5846543	0					
ANR	5846669	Identifier	hypot		5846543	0					
ANR	5846670	ArgumentList	C		5846543	1					
ANR	5846671	Argument	C		5846543	0					
ANR	5846672	Identifier	C		5846543	0					
ANR	5846673	Argument	D		5846543	1					
ANR	5846674	Identifier	D		5846543	0					
ANR	5846675	ReturnStatement	return fabs ( num ) < denom * 0.5 ;	1124:8:46646:46676	5846543	3	True				
ANR	5846676	RelationalExpression	fabs ( num ) < denom * 0.5		5846543	0		<			
ANR	5846677	CallExpression	fabs ( num )		5846543	0					
ANR	5846678	Callee	fabs		5846543	0					
ANR	5846679	Identifier	fabs		5846543	0					
ANR	5846680	ArgumentList	num		5846543	1					
ANR	5846681	Argument	num		5846543	0					
ANR	5846682	Identifier	num		5846543	0					
ANR	5846683	MultiplicativeExpression	denom * 0.5		5846543	1		*			
ANR	5846684	Identifier	denom		5846543	0					
ANR	5846685	PrimaryExpression	0.5		5846543	1					
ANR	5846686	ReturnType	static bool		5846543	1					
ANR	5846687	Identifier	width_is_thin		5846543	2					
ANR	5846688	ParameterList	pl_ptr plp		5846543	3					
ANR	5846689	Parameter	pl_ptr plp	1093:14:45621:45630	5846543	0	True				
ANR	5846690	ParameterType	pl_ptr		5846543	0					
ANR	5846691	Identifier	plp		5846543	1					
ANR	5846692	CFGEntryNode	ENTRY		5846543		True				
ANR	5846693	CFGExitNode	EXIT		5846543		True				
ANR	5846694	Symbol	plp -> width . y		5846543						
ANR	5846695	Symbol	wx		5846543						
ANR	5846696	Symbol	wy		5846543						
ANR	5846697	Symbol	plp -> width . x		5846543						
ANR	5846698	Symbol	C		5846543						
ANR	5846699	Symbol	fabs		5846543						
ANR	5846700	Symbol	D		5846543						
ANR	5846701	Symbol	num		5846543						
ANR	5846702	Symbol	plp -> width		5846543						
ANR	5846703	Symbol	dx		5846543						
ANR	5846704	Symbol	plp -> vector		5846543						
ANR	5846705	Symbol	plp		5846543						
ANR	5846706	Symbol	dy		5846543						
ANR	5846707	Symbol	hypot		5846543						
ANR	5846708	Symbol	any_abs		5846543						
ANR	5846709	Symbol	true		5846543						
ANR	5846710	Symbol	fixed_half		5846543						
ANR	5846711	Symbol	plp -> vector . y		5846543						
ANR	5846712	Symbol	plp -> vector . x		5846543						
ANR	5846713	Symbol	denom		5846543						
ANR	5846714	Symbol	* plp		5846543						
ANR	5846715	Function	adjust_stroke_transversal	1129:0:46767:48418							
ANR	5846716	FunctionDef	"adjust_stroke_transversal (pl_ptr plp , const gs_gstate * pgs , bool thin , bool horiz)"		5846715	0					
ANR	5846717	CompoundStatement		1131:0:46863:48418	5846715	0					
ANR	5846718	IdentifierDeclStatement	fixed * pw ;	1132:4:46869:46878	5846715	0	True				
ANR	5846719	IdentifierDecl	* pw		5846715	0					
ANR	5846720	IdentifierDeclType	fixed *		5846715	0					
ANR	5846721	Identifier	pw		5846715	1					
ANR	5846722	IdentifierDeclStatement	fixed * pov ;	1133:4:46884:46894	5846715	1	True				
ANR	5846723	IdentifierDecl	* pov		5846715	0					
ANR	5846724	IdentifierDeclType	fixed *		5846715	0					
ANR	5846725	Identifier	pov		5846715	1					
ANR	5846726	IdentifierDeclStatement	fixed * pev ;	1134:4:46900:46910	5846715	2	True				
ANR	5846727	IdentifierDecl	* pev		5846715	0					
ANR	5846728	IdentifierDeclType	fixed *		5846715	0					
ANR	5846729	Identifier	pev		5846715	1					
ANR	5846730	IdentifierDeclStatement	"fixed w , w2 ;"	1135:4:46916:46927	5846715	3	True				
ANR	5846731	IdentifierDecl	w		5846715	0					
ANR	5846732	IdentifierDeclType	fixed		5846715	0					
ANR	5846733	Identifier	w		5846715	1					
ANR	5846734	IdentifierDecl	w2		5846715	1					
ANR	5846735	IdentifierDeclType	fixed		5846715	0					
ANR	5846736	Identifier	w2		5846715	1					
ANR	5846737	IdentifierDeclStatement	fixed adj2 ;	1136:4:46933:46943	5846715	4	True				
ANR	5846738	IdentifierDecl	adj2		5846715	0					
ANR	5846739	IdentifierDeclType	fixed		5846715	0					
ANR	5846740	Identifier	adj2		5846715	1					
ANR	5846741	IfStatement	if ( horiz )		5846715	5					
ANR	5846742	Condition	horiz	1138:8:46954:46958	5846715	0	True				
ANR	5846743	Identifier	horiz		5846715	0					
ANR	5846744	CompoundStatement		8:15:97:97	5846715	1					
ANR	5846745	ExpressionStatement	"pw = & plp -> width . y , pov = & plp -> o . p . y , pev = & plp -> e . p . y"	1140:8:47008:47064	5846715	0	True				
ANR	5846746	Expression	"pw = & plp -> width . y , pov = & plp -> o . p . y , pev = & plp -> e . p . y"		5846715	0					
ANR	5846747	AssignmentExpression	pw = & plp -> width . y		5846715	0		=			
ANR	5846748	Identifier	pw		5846715	0					
ANR	5846749	UnaryOperationExpression	& plp -> width . y		5846715	1					
ANR	5846750	UnaryOperator	&		5846715	0					
ANR	5846751	MemberAccess	plp -> width . y		5846715	1					
ANR	5846752	PtrMemberAccess	plp -> width		5846715	0					
ANR	5846753	Identifier	plp		5846715	0					
ANR	5846754	Identifier	width		5846715	1					
ANR	5846755	Identifier	y		5846715	1					
ANR	5846756	Expression	"pov = & plp -> o . p . y , pev = & plp -> e . p . y"		5846715	1					
ANR	5846757	AssignmentExpression	pov = & plp -> o . p . y		5846715	0		=			
ANR	5846758	Identifier	pov		5846715	0					
ANR	5846759	UnaryOperationExpression	& plp -> o . p . y		5846715	1					
ANR	5846760	UnaryOperator	&		5846715	0					
ANR	5846761	MemberAccess	plp -> o . p . y		5846715	1					
ANR	5846762	MemberAccess	plp -> o . p		5846715	0					
ANR	5846763	PtrMemberAccess	plp -> o		5846715	0					
ANR	5846764	Identifier	plp		5846715	0					
ANR	5846765	Identifier	o		5846715	1					
ANR	5846766	Identifier	p		5846715	1					
ANR	5846767	Identifier	y		5846715	1					
ANR	5846768	AssignmentExpression	pev = & plp -> e . p . y		5846715	1		=			
ANR	5846769	Identifier	pev		5846715	0					
ANR	5846770	UnaryOperationExpression	& plp -> e . p . y		5846715	1					
ANR	5846771	UnaryOperator	&		5846715	0					
ANR	5846772	MemberAccess	plp -> e . p . y		5846715	1					
ANR	5846773	MemberAccess	plp -> e . p		5846715	0					
ANR	5846774	PtrMemberAccess	plp -> e		5846715	0					
ANR	5846775	Identifier	plp		5846715	0					
ANR	5846776	Identifier	e		5846715	1					
ANR	5846777	Identifier	p		5846715	1					
ANR	5846778	Identifier	y		5846715	1					
ANR	5846779	ExpressionStatement	"adj2 = STROKE_ADJUSTMENT ( thin , pgs , y ) << 1"	1141:8:47074:47117	5846715	1	True				
ANR	5846780	AssignmentExpression	"adj2 = STROKE_ADJUSTMENT ( thin , pgs , y ) << 1"		5846715	0		=			
ANR	5846781	Identifier	adj2		5846715	0					
ANR	5846782	ShiftExpression	"STROKE_ADJUSTMENT ( thin , pgs , y ) << 1"		5846715	1		<<			
ANR	5846783	CallExpression	"STROKE_ADJUSTMENT ( thin , pgs , y )"		5846715	0					
ANR	5846784	Callee	STROKE_ADJUSTMENT		5846715	0					
ANR	5846785	Identifier	STROKE_ADJUSTMENT		5846715	0					
ANR	5846786	ArgumentList	thin		5846715	1					
ANR	5846787	Argument	thin		5846715	0					
ANR	5846788	Identifier	thin		5846715	0					
ANR	5846789	Argument	pgs		5846715	1					
ANR	5846790	Identifier	pgs		5846715	0					
ANR	5846791	Argument	y		5846715	2					
ANR	5846792	Identifier	y		5846715	0					
ANR	5846793	PrimaryExpression	1		5846715	1					
ANR	5846794	ElseStatement	else		5846715	0					
ANR	5846795	CompoundStatement		12:11:266:266	5846715	0					
ANR	5846796	ExpressionStatement	"pw = & plp -> width . x , pov = & plp -> o . p . x , pev = & plp -> e . p . x"	1144:8:47175:47231	5846715	0	True				
ANR	5846797	Expression	"pw = & plp -> width . x , pov = & plp -> o . p . x , pev = & plp -> e . p . x"		5846715	0					
ANR	5846798	AssignmentExpression	pw = & plp -> width . x		5846715	0		=			
ANR	5846799	Identifier	pw		5846715	0					
ANR	5846800	UnaryOperationExpression	& plp -> width . x		5846715	1					
ANR	5846801	UnaryOperator	&		5846715	0					
ANR	5846802	MemberAccess	plp -> width . x		5846715	1					
ANR	5846803	PtrMemberAccess	plp -> width		5846715	0					
ANR	5846804	Identifier	plp		5846715	0					
ANR	5846805	Identifier	width		5846715	1					
ANR	5846806	Identifier	x		5846715	1					
ANR	5846807	Expression	"pov = & plp -> o . p . x , pev = & plp -> e . p . x"		5846715	1					
ANR	5846808	AssignmentExpression	pov = & plp -> o . p . x		5846715	0		=			
ANR	5846809	Identifier	pov		5846715	0					
ANR	5846810	UnaryOperationExpression	& plp -> o . p . x		5846715	1					
ANR	5846811	UnaryOperator	&		5846715	0					
ANR	5846812	MemberAccess	plp -> o . p . x		5846715	1					
ANR	5846813	MemberAccess	plp -> o . p		5846715	0					
ANR	5846814	PtrMemberAccess	plp -> o		5846715	0					
ANR	5846815	Identifier	plp		5846715	0					
ANR	5846816	Identifier	o		5846715	1					
ANR	5846817	Identifier	p		5846715	1					
ANR	5846818	Identifier	x		5846715	1					
ANR	5846819	AssignmentExpression	pev = & plp -> e . p . x		5846715	1		=			
ANR	5846820	Identifier	pev		5846715	0					
ANR	5846821	UnaryOperationExpression	& plp -> e . p . x		5846715	1					
ANR	5846822	UnaryOperator	&		5846715	0					
ANR	5846823	MemberAccess	plp -> e . p . x		5846715	1					
ANR	5846824	MemberAccess	plp -> e . p		5846715	0					
ANR	5846825	PtrMemberAccess	plp -> e		5846715	0					
ANR	5846826	Identifier	plp		5846715	0					
ANR	5846827	Identifier	e		5846715	1					
ANR	5846828	Identifier	p		5846715	1					
ANR	5846829	Identifier	x		5846715	1					
ANR	5846830	ExpressionStatement	"adj2 = STROKE_ADJUSTMENT ( thin , pgs , x ) << 1"	1145:8:47241:47284	5846715	1	True				
ANR	5846831	AssignmentExpression	"adj2 = STROKE_ADJUSTMENT ( thin , pgs , x ) << 1"		5846715	0		=			
ANR	5846832	Identifier	adj2		5846715	0					
ANR	5846833	ShiftExpression	"STROKE_ADJUSTMENT ( thin , pgs , x ) << 1"		5846715	1		<<			
ANR	5846834	CallExpression	"STROKE_ADJUSTMENT ( thin , pgs , x )"		5846715	0					
ANR	5846835	Callee	STROKE_ADJUSTMENT		5846715	0					
ANR	5846836	Identifier	STROKE_ADJUSTMENT		5846715	0					
ANR	5846837	ArgumentList	thin		5846715	1					
ANR	5846838	Argument	thin		5846715	0					
ANR	5846839	Identifier	thin		5846715	0					
ANR	5846840	Argument	pgs		5846715	1					
ANR	5846841	Identifier	pgs		5846715	0					
ANR	5846842	Argument	x		5846715	2					
ANR	5846843	Identifier	x		5846715	0					
ANR	5846844	PrimaryExpression	1		5846715	1					
ANR	5846845	ExpressionStatement	w = * pw	1151:4:47530:47537	5846715	6	True				
ANR	5846846	AssignmentExpression	w = * pw		5846715	0		=			
ANR	5846847	Identifier	w		5846715	0					
ANR	5846848	UnaryOperationExpression	* pw		5846715	1					
ANR	5846849	UnaryOperator	*		5846715	0					
ANR	5846850	Identifier	pw		5846715	1					
ANR	5846851	IfStatement	if ( w > 0 )		5846715	7					
ANR	5846852	Condition	w > 0	1152:8:47547:47551	5846715	0	True				
ANR	5846853	RelationalExpression	w > 0		5846715	0		>			
ANR	5846854	Identifier	w		5846715	0					
ANR	5846855	PrimaryExpression	0		5846715	1					
ANR	5846856	ExpressionStatement	w2 = fixed_rounded ( w << 1 )	1153:8:47562:47588	5846715	1	True				
ANR	5846857	AssignmentExpression	w2 = fixed_rounded ( w << 1 )		5846715	0		=			
ANR	5846858	Identifier	w2		5846715	0					
ANR	5846859	CallExpression	fixed_rounded ( w << 1 )		5846715	1					
ANR	5846860	Callee	fixed_rounded		5846715	0					
ANR	5846861	Identifier	fixed_rounded		5846715	0					
ANR	5846862	ArgumentList	w << 1		5846715	1					
ANR	5846863	Argument	w << 1		5846715	0					
ANR	5846864	ShiftExpression	w << 1		5846715	0		<<			
ANR	5846865	Identifier	w		5846715	0					
ANR	5846866	PrimaryExpression	1		5846715	1					
ANR	5846867	ElseStatement	else		5846715	0					
ANR	5846868	ExpressionStatement	w2 = - fixed_rounded ( - w << 1 )	1155:8:47633:47661	5846715	0	True				
ANR	5846869	AssignmentExpression	w2 = - fixed_rounded ( - w << 1 )		5846715	0		=			
ANR	5846870	Identifier	w2		5846715	0					
ANR	5846871	UnaryOperationExpression	- fixed_rounded ( - w << 1 )		5846715	1					
ANR	5846872	UnaryOperator	-		5846715	0					
ANR	5846873	CallExpression	fixed_rounded ( - w << 1 )		5846715	1					
ANR	5846874	Callee	fixed_rounded		5846715	0					
ANR	5846875	Identifier	fixed_rounded		5846715	0					
ANR	5846876	ArgumentList	- w << 1		5846715	1					
ANR	5846877	Argument	- w << 1		5846715	0					
ANR	5846878	ShiftExpression	- w << 1		5846715	0		<<			
ANR	5846879	UnaryOperationExpression	- w		5846715	0					
ANR	5846880	UnaryOperator	-		5846715	0					
ANR	5846881	Identifier	w		5846715	1					
ANR	5846882	PrimaryExpression	1		5846715	1					
ANR	5846883	IfStatement	if ( w2 == 0 && * pw != 0 )		5846715	8					
ANR	5846884	Condition	w2 == 0 && * pw != 0	1156:8:47695:47713	5846715	0	True				
ANR	5846885	AndExpression	w2 == 0 && * pw != 0		5846715	0		&&			
ANR	5846886	EqualityExpression	w2 == 0		5846715	0		==			
ANR	5846887	Identifier	w2		5846715	0					
ANR	5846888	PrimaryExpression	0		5846715	1					
ANR	5846889	EqualityExpression	* pw != 0		5846715	1		!=			
ANR	5846890	UnaryOperationExpression	* pw		5846715	0					
ANR	5846891	UnaryOperator	*		5846715	0					
ANR	5846892	Identifier	pw		5846715	1					
ANR	5846893	PrimaryExpression	0		5846715	1					
ANR	5846894	CompoundStatement		26:29:852:852	5846715	1					
ANR	5846895	ExpressionStatement	w2 = ( * pw < 0 ? - fixed_1 + adj2 : fixed_1 - adj2 )	1158:8:47778:47827	5846715	0	True				
ANR	5846896	AssignmentExpression	w2 = ( * pw < 0 ? - fixed_1 + adj2 : fixed_1 - adj2 )		5846715	0		=			
ANR	5846897	Identifier	w2		5846715	0					
ANR	5846898	ConditionalExpression	* pw < 0 ? - fixed_1 + adj2 : fixed_1 - adj2		5846715	1					
ANR	5846899	Condition	* pw < 0		5846715	0					
ANR	5846900	RelationalExpression	* pw < 0		5846715	0		<			
ANR	5846901	UnaryOperationExpression	* pw		5846715	0					
ANR	5846902	UnaryOperator	*		5846715	0					
ANR	5846903	Identifier	pw		5846715	1					
ANR	5846904	PrimaryExpression	0		5846715	1					
ANR	5846905	AdditiveExpression	- fixed_1 + adj2		5846715	1		+			
ANR	5846906	UnaryOperationExpression	- fixed_1		5846715	0					
ANR	5846907	UnaryOperator	-		5846715	0					
ANR	5846908	Identifier	fixed_1		5846715	1					
ANR	5846909	Identifier	adj2		5846715	1					
ANR	5846910	AdditiveExpression	fixed_1 - adj2		5846715	2		-			
ANR	5846911	Identifier	fixed_1		5846715	0					
ANR	5846912	Identifier	adj2		5846715	1					
ANR	5846913	ExpressionStatement	* pw = arith_rshift_1 ( w2 )	1159:8:47837:47861	5846715	1	True				
ANR	5846914	AssignmentExpression	* pw = arith_rshift_1 ( w2 )		5846715	0		=			
ANR	5846915	UnaryOperationExpression	* pw		5846715	0					
ANR	5846916	UnaryOperator	*		5846715	0					
ANR	5846917	Identifier	pw		5846715	1					
ANR	5846918	CallExpression	arith_rshift_1 ( w2 )		5846715	1					
ANR	5846919	Callee	arith_rshift_1		5846715	0					
ANR	5846920	Identifier	arith_rshift_1		5846715	0					
ANR	5846921	ArgumentList	w2		5846715	1					
ANR	5846922	Argument	w2		5846715	0					
ANR	5846923	Identifier	w2		5846715	0					
ANR	5846924	IfStatement	if ( * pov == * pev )		5846715	9					
ANR	5846925	Condition	* pov == * pev	1162:8:47952:47963	5846715	0	True				
ANR	5846926	EqualityExpression	* pov == * pev		5846715	0		==			
ANR	5846927	UnaryOperationExpression	* pov		5846715	0					
ANR	5846928	UnaryOperator	*		5846715	0					
ANR	5846929	Identifier	pov		5846715	1					
ANR	5846930	UnaryOperationExpression	* pev		5846715	1					
ANR	5846931	UnaryOperator	*		5846715	0					
ANR	5846932	Identifier	pev		5846715	1					
ANR	5846933	CompoundStatement		32:22:1102:1102	5846715	1					
ANR	5846934	IfStatement	if ( w >= 0 )		5846715	0					
ANR	5846935	Condition	w >= 0	1165:12:48101:48106	5846715	0	True				
ANR	5846936	RelationalExpression	w >= 0		5846715	0		>=			
ANR	5846937	Identifier	w		5846715	0					
ANR	5846938	PrimaryExpression	0		5846715	1					
ANR	5846939	ExpressionStatement	w2 += adj2	1166:12:48121:48131	5846715	1	True				
ANR	5846940	AssignmentExpression	w2 += adj2		5846715	0		+=			
ANR	5846941	Identifier	w2		5846715	0					
ANR	5846942	Identifier	adj2		5846715	1					
ANR	5846943	ElseStatement	else		5846715	0					
ANR	5846944	ExpressionStatement	w2 = adj2 - w2	1168:12:48158:48172	5846715	0	True				
ANR	5846945	AssignmentExpression	w2 = adj2 - w2		5846715	0		=			
ANR	5846946	Identifier	w2		5846715	0					
ANR	5846947	AdditiveExpression	adj2 - w2		5846715	1		-			
ANR	5846948	Identifier	adj2		5846715	0					
ANR	5846949	Identifier	w2		5846715	1					
ANR	5846950	IfStatement	if ( w2 & fixed_1 )		5846715	1					
ANR	5846951	Condition	w2 & fixed_1	1169:12:48186:48197	5846715	0	True				
ANR	5846952	BitAndExpression	w2 & fixed_1		5846715	0		&			
ANR	5846953	Identifier	w2		5846715	0					
ANR	5846954	Identifier	fixed_1		5846715	1					
ANR	5846955	ExpressionStatement	* pov = * pev = fixed_floor ( * pov ) + fixed_half	1170:12:48254:48298	5846715	1	True				
ANR	5846956	AssignmentExpression	* pov = * pev = fixed_floor ( * pov ) + fixed_half		5846715	0		=			
ANR	5846957	UnaryOperationExpression	* pov		5846715	0					
ANR	5846958	UnaryOperator	*		5846715	0					
ANR	5846959	Identifier	pov		5846715	1					
ANR	5846960	AssignmentExpression	* pev = fixed_floor ( * pov ) + fixed_half		5846715	1		=			
ANR	5846961	UnaryOperationExpression	* pev		5846715	0					
ANR	5846962	UnaryOperator	*		5846715	0					
ANR	5846963	Identifier	pev		5846715	1					
ANR	5846964	AdditiveExpression	fixed_floor ( * pov ) + fixed_half		5846715	1		+			
ANR	5846965	CallExpression	fixed_floor ( * pov )		5846715	0					
ANR	5846966	Callee	fixed_floor		5846715	0					
ANR	5846967	Identifier	fixed_floor		5846715	0					
ANR	5846968	ArgumentList	* pov		5846715	1					
ANR	5846969	Argument	* pov		5846715	0					
ANR	5846970	UnaryOperationExpression	* pov		5846715	0					
ANR	5846971	UnaryOperator	*		5846715	0					
ANR	5846972	Identifier	pov		5846715	1					
ANR	5846973	Identifier	fixed_half		5846715	1					
ANR	5846974	ElseStatement	else		5846715	0					
ANR	5846975	ExpressionStatement	* pov = * pev = fixed_rounded ( * pov )	1172:12:48376:48409	5846715	0	True				
ANR	5846976	AssignmentExpression	* pov = * pev = fixed_rounded ( * pov )		5846715	0		=			
ANR	5846977	UnaryOperationExpression	* pov		5846715	0					
ANR	5846978	UnaryOperator	*		5846715	0					
ANR	5846979	Identifier	pov		5846715	1					
ANR	5846980	AssignmentExpression	* pev = fixed_rounded ( * pov )		5846715	1		=			
ANR	5846981	UnaryOperationExpression	* pev		5846715	0					
ANR	5846982	UnaryOperator	*		5846715	0					
ANR	5846983	Identifier	pev		5846715	1					
ANR	5846984	CallExpression	fixed_rounded ( * pov )		5846715	1					
ANR	5846985	Callee	fixed_rounded		5846715	0					
ANR	5846986	Identifier	fixed_rounded		5846715	0					
ANR	5846987	ArgumentList	* pov		5846715	1					
ANR	5846988	Argument	* pov		5846715	0					
ANR	5846989	UnaryOperationExpression	* pov		5846715	0					
ANR	5846990	UnaryOperator	*		5846715	0					
ANR	5846991	Identifier	pov		5846715	1					
ANR	5846992	ReturnType	static void		5846715	1					
ANR	5846993	Identifier	adjust_stroke_transversal		5846715	2					
ANR	5846994	ParameterList	"pl_ptr plp , const gs_gstate * pgs , bool thin , bool horiz"		5846715	3					
ANR	5846995	Parameter	pl_ptr plp	1130:26:46805:46814	5846715	0	True				
ANR	5846996	ParameterType	pl_ptr		5846715	0					
ANR	5846997	Identifier	plp		5846715	1					
ANR	5846998	Parameter	const gs_gstate * pgs	1130:38:46817:46837	5846715	1	True				
ANR	5846999	ParameterType	const gs_gstate *		5846715	0					
ANR	5847000	Identifier	pgs		5846715	1					
ANR	5847001	Parameter	bool thin	1130:61:46840:46848	5846715	2	True				
ANR	5847002	ParameterType	bool		5846715	0					
ANR	5847003	Identifier	thin		5846715	1					
ANR	5847004	Parameter	bool horiz	1130:72:46851:46860	5846715	3	True				
ANR	5847005	ParameterType	bool		5846715	0					
ANR	5847006	Identifier	horiz		5846715	1					
ANR	5847007	CFGEntryNode	ENTRY		5846715		True				
ANR	5847008	CFGExitNode	EXIT		5846715		True				
ANR	5847009	Symbol	* pov		5846715						
ANR	5847010	Symbol	fixed_floor		5846715						
ANR	5847011	Symbol	adj2		5846715						
ANR	5847012	Symbol	pw		5846715						
ANR	5847013	Symbol	& plp -> o . p		5846715						
ANR	5847014	Symbol	plp -> o . p		5846715						
ANR	5847015	Symbol	* pev		5846715						
ANR	5847016	Symbol	& plp -> e		5846715						
ANR	5847017	Symbol	plp -> width		5846715						
ANR	5847018	Symbol	horiz		5846715						
ANR	5847019	Symbol	& plp -> o . p . x		5846715						
ANR	5847020	Symbol	fixed_1		5846715						
ANR	5847021	Symbol	& plp -> o . p . y		5846715						
ANR	5847022	Symbol	pov		5846715						
ANR	5847023	Symbol	STROKE_ADJUSTMENT		5846715						
ANR	5847024	Symbol	fixed_half		5846715						
ANR	5847025	Symbol	w2		5846715						
ANR	5847026	Symbol	pgs		5846715						
ANR	5847027	Symbol	& plp -> width		5846715						
ANR	5847028	Symbol	* plp		5846715						
ANR	5847029	Symbol	pev		5846715						
ANR	5847030	Symbol	arith_rshift_1		5846715						
ANR	5847031	Symbol	& plp -> width . y		5846715						
ANR	5847032	Symbol	& plp -> width . x		5846715						
ANR	5847033	Symbol	* pw		5846715						
ANR	5847034	Symbol	thin		5846715						
ANR	5847035	Symbol	& plp -> e . p . x		5846715						
ANR	5847036	Symbol	plp -> e . p		5846715						
ANR	5847037	Symbol	& plp -> e . p . y		5846715						
ANR	5847038	Symbol	plp		5846715						
ANR	5847039	Symbol	& plp -> o		5846715						
ANR	5847040	Symbol	w		5846715						
ANR	5847041	Symbol	plp -> o		5846715						
ANR	5847042	Symbol	x		5846715						
ANR	5847043	Symbol	plp -> e		5846715						
ANR	5847044	Symbol	y		5846715						
ANR	5847045	Symbol	& plp -> e . p		5846715						
ANR	5847046	Symbol	fixed_rounded		5846715						
ANR	5847047	Function	adjust_stroke_longitude	1177:0:48421:50462							
ANR	5847048	FunctionDef	"adjust_stroke_longitude (pl_ptr plp , const gs_gstate * pgs , bool thin , bool horiz , gs_line_cap start_cap , gs_line_cap end_cap)"		5847047	0					
ANR	5847049	CompoundStatement		1181:0:48607:50462	5847047	0					
ANR	5847050	IdentifierDeclStatement	fixed * pow = ( horiz ? & plp -> o . p . y : & plp -> o . p . x ) ;	1183:4:48614:48662	5847047	0	True				
ANR	5847051	IdentifierDecl	* pow = ( horiz ? & plp -> o . p . y : & plp -> o . p . x )		5847047	0					
ANR	5847052	IdentifierDeclType	fixed *		5847047	0					
ANR	5847053	Identifier	pow		5847047	1					
ANR	5847054	AssignmentExpression	* pow = ( horiz ? & plp -> o . p . y : & plp -> o . p . x )		5847047	2		=			
ANR	5847055	Identifier	pow		5847047	0					
ANR	5847056	ConditionalExpression	horiz ? & plp -> o . p . y : & plp -> o . p . x		5847047	1					
ANR	5847057	Condition	horiz		5847047	0					
ANR	5847058	Identifier	horiz		5847047	0					
ANR	5847059	UnaryOperationExpression	& plp -> o . p . y		5847047	1					
ANR	5847060	UnaryOperator	&		5847047	0					
ANR	5847061	MemberAccess	plp -> o . p . y		5847047	1					
ANR	5847062	MemberAccess	plp -> o . p		5847047	0					
ANR	5847063	PtrMemberAccess	plp -> o		5847047	0					
ANR	5847064	Identifier	plp		5847047	0					
ANR	5847065	Identifier	o		5847047	1					
ANR	5847066	Identifier	p		5847047	1					
ANR	5847067	Identifier	y		5847047	1					
ANR	5847068	UnaryOperationExpression	& plp -> o . p . x		5847047	2					
ANR	5847069	UnaryOperator	&		5847047	0					
ANR	5847070	MemberAccess	plp -> o . p . x		5847047	1					
ANR	5847071	MemberAccess	plp -> o . p		5847047	0					
ANR	5847072	PtrMemberAccess	plp -> o		5847047	0					
ANR	5847073	Identifier	plp		5847047	0					
ANR	5847074	Identifier	o		5847047	1					
ANR	5847075	Identifier	p		5847047	1					
ANR	5847076	Identifier	x		5847047	1					
ANR	5847077	IdentifierDeclStatement	fixed * pew = ( horiz ? & plp -> e . p . y : & plp -> e . p . x ) ;	1184:4:48668:48716	5847047	1	True				
ANR	5847078	IdentifierDecl	* pew = ( horiz ? & plp -> e . p . y : & plp -> e . p . x )		5847047	0					
ANR	5847079	IdentifierDeclType	fixed *		5847047	0					
ANR	5847080	Identifier	pew		5847047	1					
ANR	5847081	AssignmentExpression	* pew = ( horiz ? & plp -> e . p . y : & plp -> e . p . x )		5847047	2		=			
ANR	5847082	Identifier	pew		5847047	0					
ANR	5847083	ConditionalExpression	horiz ? & plp -> e . p . y : & plp -> e . p . x		5847047	1					
ANR	5847084	Condition	horiz		5847047	0					
ANR	5847085	Identifier	horiz		5847047	0					
ANR	5847086	UnaryOperationExpression	& plp -> e . p . y		5847047	1					
ANR	5847087	UnaryOperator	&		5847047	0					
ANR	5847088	MemberAccess	plp -> e . p . y		5847047	1					
ANR	5847089	MemberAccess	plp -> e . p		5847047	0					
ANR	5847090	PtrMemberAccess	plp -> e		5847047	0					
ANR	5847091	Identifier	plp		5847047	0					
ANR	5847092	Identifier	e		5847047	1					
ANR	5847093	Identifier	p		5847047	1					
ANR	5847094	Identifier	y		5847047	1					
ANR	5847095	UnaryOperationExpression	& plp -> e . p . x		5847047	2					
ANR	5847096	UnaryOperator	&		5847047	0					
ANR	5847097	MemberAccess	plp -> e . p . x		5847047	1					
ANR	5847098	MemberAccess	plp -> e . p		5847047	0					
ANR	5847099	PtrMemberAccess	plp -> e		5847047	0					
ANR	5847100	Identifier	plp		5847047	0					
ANR	5847101	Identifier	e		5847047	1					
ANR	5847102	Identifier	p		5847047	1					
ANR	5847103	Identifier	x		5847047	1					
ANR	5847104	IfStatement	if ( * pow == * pew )		5847047	2					
ANR	5847105	Condition	* pow == * pew	1188:8:48856:48867	5847047	0	True				
ANR	5847106	EqualityExpression	* pow == * pew		5847047	0		==			
ANR	5847107	UnaryOperationExpression	* pow		5847047	0					
ANR	5847108	UnaryOperator	*		5847047	0					
ANR	5847109	Identifier	pow		5847047	1					
ANR	5847110	UnaryOperationExpression	* pew		5847047	1					
ANR	5847111	UnaryOperator	*		5847047	0					
ANR	5847112	Identifier	pew		5847047	1					
ANR	5847113	CompoundStatement		14:8:513:634	5847047	1					
ANR	5847114	IdentifierDeclStatement	fixed * pov = ( horiz ? & plp -> o . p . x : & plp -> o . p . y ) ;	1189:8:48880:48928	5847047	0	True				
ANR	5847115	IdentifierDecl	* pov = ( horiz ? & plp -> o . p . x : & plp -> o . p . y )		5847047	0					
ANR	5847116	IdentifierDeclType	fixed *		5847047	0					
ANR	5847117	Identifier	pov		5847047	1					
ANR	5847118	AssignmentExpression	* pov = ( horiz ? & plp -> o . p . x : & plp -> o . p . y )		5847047	2		=			
ANR	5847119	Identifier	pov		5847047	0					
ANR	5847120	ConditionalExpression	horiz ? & plp -> o . p . x : & plp -> o . p . y		5847047	1					
ANR	5847121	Condition	horiz		5847047	0					
ANR	5847122	Identifier	horiz		5847047	0					
ANR	5847123	UnaryOperationExpression	& plp -> o . p . x		5847047	1					
ANR	5847124	UnaryOperator	&		5847047	0					
ANR	5847125	MemberAccess	plp -> o . p . x		5847047	1					
ANR	5847126	MemberAccess	plp -> o . p		5847047	0					
ANR	5847127	PtrMemberAccess	plp -> o		5847047	0					
ANR	5847128	Identifier	plp		5847047	0					
ANR	5847129	Identifier	o		5847047	1					
ANR	5847130	Identifier	p		5847047	1					
ANR	5847131	Identifier	x		5847047	1					
ANR	5847132	UnaryOperationExpression	& plp -> o . p . y		5847047	2					
ANR	5847133	UnaryOperator	&		5847047	0					
ANR	5847134	MemberAccess	plp -> o . p . y		5847047	1					
ANR	5847135	MemberAccess	plp -> o . p		5847047	0					
ANR	5847136	PtrMemberAccess	plp -> o		5847047	0					
ANR	5847137	Identifier	plp		5847047	0					
ANR	5847138	Identifier	o		5847047	1					
ANR	5847139	Identifier	p		5847047	1					
ANR	5847140	Identifier	y		5847047	1					
ANR	5847141	IdentifierDeclStatement	fixed * pev = ( horiz ? & plp -> e . p . x : & plp -> e . p . y ) ;	1190:8:48938:48986	5847047	1	True				
ANR	5847142	IdentifierDecl	* pev = ( horiz ? & plp -> e . p . x : & plp -> e . p . y )		5847047	0					
ANR	5847143	IdentifierDeclType	fixed *		5847047	0					
ANR	5847144	Identifier	pev		5847047	1					
ANR	5847145	AssignmentExpression	* pev = ( horiz ? & plp -> e . p . x : & plp -> e . p . y )		5847047	2		=			
ANR	5847146	Identifier	pev		5847047	0					
ANR	5847147	ConditionalExpression	horiz ? & plp -> e . p . x : & plp -> e . p . y		5847047	1					
ANR	5847148	Condition	horiz		5847047	0					
ANR	5847149	Identifier	horiz		5847047	0					
ANR	5847150	UnaryOperationExpression	& plp -> e . p . x		5847047	1					
ANR	5847151	UnaryOperator	&		5847047	0					
ANR	5847152	MemberAccess	plp -> e . p . x		5847047	1					
ANR	5847153	MemberAccess	plp -> e . p		5847047	0					
ANR	5847154	PtrMemberAccess	plp -> e		5847047	0					
ANR	5847155	Identifier	plp		5847047	0					
ANR	5847156	Identifier	e		5847047	1					
ANR	5847157	Identifier	p		5847047	1					
ANR	5847158	Identifier	x		5847047	1					
ANR	5847159	UnaryOperationExpression	& plp -> e . p . y		5847047	2					
ANR	5847160	UnaryOperator	&		5847047	0					
ANR	5847161	MemberAccess	plp -> e . p . y		5847047	1					
ANR	5847162	MemberAccess	plp -> e . p		5847047	0					
ANR	5847163	PtrMemberAccess	plp -> e		5847047	0					
ANR	5847164	Identifier	plp		5847047	0					
ANR	5847165	Identifier	e		5847047	1					
ANR	5847166	Identifier	p		5847047	1					
ANR	5847167	Identifier	y		5847047	1					
ANR	5847168	IdentifierDeclStatement	fixed length = any_abs ( * pov - * pev ) ;	1191:8:48996:49031	5847047	2	True				
ANR	5847169	IdentifierDecl	length = any_abs ( * pov - * pev )		5847047	0					
ANR	5847170	IdentifierDeclType	fixed		5847047	0					
ANR	5847171	Identifier	length		5847047	1					
ANR	5847172	AssignmentExpression	length = any_abs ( * pov - * pev )		5847047	2		=			
ANR	5847173	Identifier	length		5847047	0					
ANR	5847174	CallExpression	any_abs ( * pov - * pev )		5847047	1					
ANR	5847175	Callee	any_abs		5847047	0					
ANR	5847176	Identifier	any_abs		5847047	0					
ANR	5847177	ArgumentList	* pov - * pev		5847047	1					
ANR	5847178	Argument	* pov - * pev		5847047	0					
ANR	5847179	AdditiveExpression	* pov - * pev		5847047	0		-			
ANR	5847180	UnaryOperationExpression	* pov		5847047	0					
ANR	5847181	UnaryOperator	*		5847047	0					
ANR	5847182	Identifier	pov		5847047	1					
ANR	5847183	UnaryOperationExpression	* pev		5847047	1					
ANR	5847184	UnaryOperator	*		5847047	0					
ANR	5847185	Identifier	pev		5847047	1					
ANR	5847186	IdentifierDeclStatement	"fixed length_r , length_r_2 ;"	1192:8:49041:49067	5847047	3	True				
ANR	5847187	IdentifierDecl	length_r		5847047	0					
ANR	5847188	IdentifierDeclType	fixed		5847047	0					
ANR	5847189	Identifier	length_r		5847047	1					
ANR	5847190	IdentifierDecl	length_r_2		5847047	1					
ANR	5847191	IdentifierDeclType	fixed		5847047	0					
ANR	5847192	Identifier	length_r_2		5847047	1					
ANR	5847193	IdentifierDeclStatement	"fixed mv = ( * pov + * pev ) / 2 , mv_r ;"	1193:8:49077:49111	5847047	4	True				
ANR	5847194	IdentifierDecl	mv = ( * pov + * pev ) / 2		5847047	0					
ANR	5847195	IdentifierDeclType	fixed		5847047	0					
ANR	5847196	Identifier	mv		5847047	1					
ANR	5847197	AssignmentExpression	mv = ( * pov + * pev ) / 2		5847047	2		=			
ANR	5847198	Identifier	mv		5847047	0					
ANR	5847199	MultiplicativeExpression	( * pov + * pev ) / 2		5847047	1		/			
ANR	5847200	AdditiveExpression	* pov + * pev		5847047	0		+			
ANR	5847201	UnaryOperationExpression	* pov		5847047	0					
ANR	5847202	UnaryOperator	*		5847047	0					
ANR	5847203	Identifier	pov		5847047	1					
ANR	5847204	UnaryOperationExpression	* pev		5847047	1					
ANR	5847205	UnaryOperator	*		5847047	0					
ANR	5847206	Identifier	pev		5847047	1					
ANR	5847207	PrimaryExpression	2		5847047	1					
ANR	5847208	IdentifierDecl	mv_r		5847047	1					
ANR	5847209	IdentifierDeclType	fixed		5847047	0					
ANR	5847210	Identifier	mv_r		5847047	1					
ANR	5847211	IdentifierDeclStatement	"fixed adj2 = ( horiz ? STROKE_ADJUSTMENT ( thin , pgs , x ) : STROKE_ADJUSTMENT ( thin , pgs , y ) ) << 1 ;"	1194:8:49121:49242	5847047	5	True				
ANR	5847212	IdentifierDecl	"adj2 = ( horiz ? STROKE_ADJUSTMENT ( thin , pgs , x ) : STROKE_ADJUSTMENT ( thin , pgs , y ) ) << 1"		5847047	0					
ANR	5847213	IdentifierDeclType	fixed		5847047	0					
ANR	5847214	Identifier	adj2		5847047	1					
ANR	5847215	AssignmentExpression	"adj2 = ( horiz ? STROKE_ADJUSTMENT ( thin , pgs , x ) : STROKE_ADJUSTMENT ( thin , pgs , y ) ) << 1"		5847047	2		=			
ANR	5847216	Identifier	adj2		5847047	0					
ANR	5847217	ShiftExpression	"( horiz ? STROKE_ADJUSTMENT ( thin , pgs , x ) : STROKE_ADJUSTMENT ( thin , pgs , y ) ) << 1"		5847047	1		<<			
ANR	5847218	ConditionalExpression	"horiz ? STROKE_ADJUSTMENT ( thin , pgs , x ) : STROKE_ADJUSTMENT ( thin , pgs , y )"		5847047	0					
ANR	5847219	Condition	horiz		5847047	0					
ANR	5847220	Identifier	horiz		5847047	0					
ANR	5847221	CallExpression	"STROKE_ADJUSTMENT ( thin , pgs , x )"		5847047	1					
ANR	5847222	Callee	STROKE_ADJUSTMENT		5847047	0					
ANR	5847223	Identifier	STROKE_ADJUSTMENT		5847047	0					
ANR	5847224	ArgumentList	thin		5847047	1					
ANR	5847225	Argument	thin		5847047	0					
ANR	5847226	Identifier	thin		5847047	0					
ANR	5847227	Argument	pgs		5847047	1					
ANR	5847228	Identifier	pgs		5847047	0					
ANR	5847229	Argument	x		5847047	2					
ANR	5847230	Identifier	x		5847047	0					
ANR	5847231	CallExpression	"STROKE_ADJUSTMENT ( thin , pgs , y )"		5847047	2					
ANR	5847232	Callee	STROKE_ADJUSTMENT		5847047	0					
ANR	5847233	Identifier	STROKE_ADJUSTMENT		5847047	0					
ANR	5847234	ArgumentList	thin		5847047	1					
ANR	5847235	Argument	thin		5847047	0					
ANR	5847236	Identifier	thin		5847047	0					
ANR	5847237	Argument	pgs		5847047	1					
ANR	5847238	Identifier	pgs		5847047	0					
ANR	5847239	Argument	y		5847047	2					
ANR	5847240	Identifier	y		5847047	0					
ANR	5847241	PrimaryExpression	1		5847047	1					
ANR	5847242	IfStatement	if ( length > fixed_1 )		5847047	6					
ANR	5847243	Condition	length > fixed_1	1203:12:49549:49564	5847047	0	True				
ANR	5847244	RelationalExpression	length > fixed_1		5847047	0		>			
ANR	5847245	Identifier	length		5847047	0					
ANR	5847246	Identifier	fixed_1		5847047	1					
ANR	5847247	ReturnStatement	return ;	1204:12:49608:49614	5847047	1	True				
ANR	5847248	IfStatement	if ( start_cap == gs_cap_butt || end_cap == gs_cap_butt )		5847047	7					
ANR	5847249	Condition	start_cap == gs_cap_butt || end_cap == gs_cap_butt	1205:12:49628:49677	5847047	0	True				
ANR	5847250	OrExpression	start_cap == gs_cap_butt || end_cap == gs_cap_butt		5847047	0		||			
ANR	5847251	EqualityExpression	start_cap == gs_cap_butt		5847047	0		==			
ANR	5847252	Identifier	start_cap		5847047	0					
ANR	5847253	Identifier	gs_cap_butt		5847047	1					
ANR	5847254	EqualityExpression	end_cap == gs_cap_butt		5847047	1		==			
ANR	5847255	Identifier	end_cap		5847047	0					
ANR	5847256	Identifier	gs_cap_butt		5847047	1					
ANR	5847257	CompoundStatement		25:64:1072:1072	5847047	1					
ANR	5847258	ExpressionStatement	length_r = fixed_rounded ( length )	1206:12:49694:49726	5847047	0	True				
ANR	5847259	AssignmentExpression	length_r = fixed_rounded ( length )		5847047	0		=			
ANR	5847260	Identifier	length_r		5847047	0					
ANR	5847261	CallExpression	fixed_rounded ( length )		5847047	1					
ANR	5847262	Callee	fixed_rounded		5847047	0					
ANR	5847263	Identifier	fixed_rounded		5847047	0					
ANR	5847264	ArgumentList	length		5847047	1					
ANR	5847265	Argument	length		5847047	0					
ANR	5847266	Identifier	length		5847047	0					
ANR	5847267	IfStatement	if ( length_r < fixed_1 )		5847047	1					
ANR	5847268	Condition	length_r < fixed_1	1207:16:49744:49761	5847047	0	True				
ANR	5847269	RelationalExpression	length_r < fixed_1		5847047	0		<			
ANR	5847270	Identifier	length_r		5847047	0					
ANR	5847271	Identifier	fixed_1		5847047	1					
ANR	5847272	ExpressionStatement	length_r = fixed_1	1208:16:49780:49798	5847047	1	True				
ANR	5847273	AssignmentExpression	length_r = fixed_1		5847047	0		=			
ANR	5847274	Identifier	length_r		5847047	0					
ANR	5847275	Identifier	fixed_1		5847047	1					
ANR	5847276	ExpressionStatement	length_r_2 = length_r / 2	1209:12:49812:49837	5847047	2	True				
ANR	5847277	AssignmentExpression	length_r_2 = length_r / 2		5847047	0		=			
ANR	5847278	Identifier	length_r_2		5847047	0					
ANR	5847279	MultiplicativeExpression	length_r / 2		5847047	1		/			
ANR	5847280	Identifier	length_r		5847047	0					
ANR	5847281	PrimaryExpression	2		5847047	1					
ANR	5847282	ElseStatement	else		5847047	0					
ANR	5847283	CompoundStatement		32:12:1324:1382	5847047	0					
ANR	5847284	IdentifierDeclStatement	fixed width = any_abs ( horiz ? plp -> width . y : plp -> width . x ) ;	1212:12:49932:49990	5847047	0	True				
ANR	5847285	IdentifierDecl	width = any_abs ( horiz ? plp -> width . y : plp -> width . x )		5847047	0					
ANR	5847286	IdentifierDeclType	fixed		5847047	0					
ANR	5847287	Identifier	width		5847047	1					
ANR	5847288	AssignmentExpression	width = any_abs ( horiz ? plp -> width . y : plp -> width . x )		5847047	2		=			
ANR	5847289	Identifier	width		5847047	0					
ANR	5847290	CallExpression	any_abs ( horiz ? plp -> width . y : plp -> width . x )		5847047	1					
ANR	5847291	Callee	any_abs		5847047	0					
ANR	5847292	Identifier	any_abs		5847047	0					
ANR	5847293	ArgumentList	horiz ? plp -> width . y : plp -> width . x		5847047	1					
ANR	5847294	Argument	horiz ? plp -> width . y : plp -> width . x		5847047	0					
ANR	5847295	ConditionalExpression	horiz ? plp -> width . y : plp -> width . x		5847047	0					
ANR	5847296	Condition	horiz		5847047	0					
ANR	5847297	Identifier	horiz		5847047	0					
ANR	5847298	MemberAccess	plp -> width . y		5847047	1					
ANR	5847299	PtrMemberAccess	plp -> width		5847047	0					
ANR	5847300	Identifier	plp		5847047	0					
ANR	5847301	Identifier	width		5847047	1					
ANR	5847302	Identifier	y		5847047	1					
ANR	5847303	MemberAccess	plp -> width . x		5847047	2					
ANR	5847304	PtrMemberAccess	plp -> width		5847047	0					
ANR	5847305	Identifier	plp		5847047	0					
ANR	5847306	Identifier	width		5847047	1					
ANR	5847307	Identifier	x		5847047	1					
ANR	5847308	ExpressionStatement	length_r = fixed_rounded ( length + width * 2 + adj2 )	1214:12:50005:50056	5847047	1	True				
ANR	5847309	AssignmentExpression	length_r = fixed_rounded ( length + width * 2 + adj2 )		5847047	0		=			
ANR	5847310	Identifier	length_r		5847047	0					
ANR	5847311	CallExpression	fixed_rounded ( length + width * 2 + adj2 )		5847047	1					
ANR	5847312	Callee	fixed_rounded		5847047	0					
ANR	5847313	Identifier	fixed_rounded		5847047	0					
ANR	5847314	ArgumentList	length + width * 2 + adj2		5847047	1					
ANR	5847315	Argument	length + width * 2 + adj2		5847047	0					
ANR	5847316	AdditiveExpression	length + width * 2 + adj2		5847047	0		+			
ANR	5847317	Identifier	length		5847047	0					
ANR	5847318	AdditiveExpression	width * 2 + adj2		5847047	1		+			
ANR	5847319	MultiplicativeExpression	width * 2		5847047	0		*			
ANR	5847320	Identifier	width		5847047	0					
ANR	5847321	PrimaryExpression	2		5847047	1					
ANR	5847322	Identifier	adj2		5847047	1					
ANR	5847323	ExpressionStatement	length_r_2 = fixed_rounded ( length ) / 2	1215:12:50070:50108	5847047	2	True				
ANR	5847324	AssignmentExpression	length_r_2 = fixed_rounded ( length ) / 2		5847047	0		=			
ANR	5847325	Identifier	length_r_2		5847047	0					
ANR	5847326	MultiplicativeExpression	fixed_rounded ( length ) / 2		5847047	1		/			
ANR	5847327	CallExpression	fixed_rounded ( length )		5847047	0					
ANR	5847328	Callee	fixed_rounded		5847047	0					
ANR	5847329	Identifier	fixed_rounded		5847047	0					
ANR	5847330	ArgumentList	length		5847047	1					
ANR	5847331	Argument	length		5847047	0					
ANR	5847332	Identifier	length		5847047	0					
ANR	5847333	PrimaryExpression	2		5847047	1					
ANR	5847334	IfStatement	if ( length_r & fixed_1 )		5847047	8					
ANR	5847335	Condition	length_r & fixed_1	1217:12:50132:50149	5847047	0	True				
ANR	5847336	BitAndExpression	length_r & fixed_1		5847047	0		&			
ANR	5847337	Identifier	length_r		5847047	0					
ANR	5847338	Identifier	fixed_1		5847047	1					
ANR	5847339	ExpressionStatement	mv_r = fixed_floor ( mv ) + fixed_half	1218:12:50164:50199	5847047	1	True				
ANR	5847340	AssignmentExpression	mv_r = fixed_floor ( mv ) + fixed_half		5847047	0		=			
ANR	5847341	Identifier	mv_r		5847047	0					
ANR	5847342	AdditiveExpression	fixed_floor ( mv ) + fixed_half		5847047	1		+			
ANR	5847343	CallExpression	fixed_floor ( mv )		5847047	0					
ANR	5847344	Callee	fixed_floor		5847047	0					
ANR	5847345	Identifier	fixed_floor		5847047	0					
ANR	5847346	ArgumentList	mv		5847047	1					
ANR	5847347	Argument	mv		5847047	0					
ANR	5847348	Identifier	mv		5847047	0					
ANR	5847349	Identifier	fixed_half		5847047	1					
ANR	5847350	ElseStatement	else		5847047	0					
ANR	5847351	ExpressionStatement	mv_r = fixed_floor ( mv )	1220:12:50226:50248	5847047	0	True				
ANR	5847352	AssignmentExpression	mv_r = fixed_floor ( mv )		5847047	0		=			
ANR	5847353	Identifier	mv_r		5847047	0					
ANR	5847354	CallExpression	fixed_floor ( mv )		5847047	1					
ANR	5847355	Callee	fixed_floor		5847047	0					
ANR	5847356	Identifier	fixed_floor		5847047	0					
ANR	5847357	ArgumentList	mv		5847047	1					
ANR	5847358	Argument	mv		5847047	0					
ANR	5847359	Identifier	mv		5847047	0					
ANR	5847360	IfStatement	if ( * pov < * pev )		5847047	9					
ANR	5847361	Condition	* pov < * pev	1221:12:50262:50272	5847047	0	True				
ANR	5847362	RelationalExpression	* pov < * pev		5847047	0		<			
ANR	5847363	UnaryOperationExpression	* pov		5847047	0					
ANR	5847364	UnaryOperator	*		5847047	0					
ANR	5847365	Identifier	pov		5847047	1					
ANR	5847366	UnaryOperationExpression	* pev		5847047	1					
ANR	5847367	UnaryOperator	*		5847047	0					
ANR	5847368	Identifier	pev		5847047	1					
ANR	5847369	CompoundStatement		41:25:1667:1667	5847047	1					
ANR	5847370	ExpressionStatement	* pov = mv_r - length_r_2	1222:12:50289:50313	5847047	0	True				
ANR	5847371	AssignmentExpression	* pov = mv_r - length_r_2		5847047	0		=			
ANR	5847372	UnaryOperationExpression	* pov		5847047	0					
ANR	5847373	UnaryOperator	*		5847047	0					
ANR	5847374	Identifier	pov		5847047	1					
ANR	5847375	AdditiveExpression	mv_r - length_r_2		5847047	1		-			
ANR	5847376	Identifier	mv_r		5847047	0					
ANR	5847377	Identifier	length_r_2		5847047	1					
ANR	5847378	ExpressionStatement	* pev = mv_r + length_r_2	1223:12:50327:50351	5847047	1	True				
ANR	5847379	AssignmentExpression	* pev = mv_r + length_r_2		5847047	0		=			
ANR	5847380	UnaryOperationExpression	* pev		5847047	0					
ANR	5847381	UnaryOperator	*		5847047	0					
ANR	5847382	Identifier	pev		5847047	1					
ANR	5847383	AdditiveExpression	mv_r + length_r_2		5847047	1		+			
ANR	5847384	Identifier	mv_r		5847047	0					
ANR	5847385	Identifier	length_r_2		5847047	1					
ANR	5847386	ElseStatement	else		5847047	0					
ANR	5847387	CompoundStatement		44:15:1760:1760	5847047	0					
ANR	5847388	ExpressionStatement	* pov = mv_r + length_r_2	1225:12:50382:50406	5847047	0	True				
ANR	5847389	AssignmentExpression	* pov = mv_r + length_r_2		5847047	0		=			
ANR	5847390	UnaryOperationExpression	* pov		5847047	0					
ANR	5847391	UnaryOperator	*		5847047	0					
ANR	5847392	Identifier	pov		5847047	1					
ANR	5847393	AdditiveExpression	mv_r + length_r_2		5847047	1		+			
ANR	5847394	Identifier	mv_r		5847047	0					
ANR	5847395	Identifier	length_r_2		5847047	1					
ANR	5847396	ExpressionStatement	* pev = mv_r - length_r_2	1226:12:50420:50444	5847047	1	True				
ANR	5847397	AssignmentExpression	* pev = mv_r - length_r_2		5847047	0		=			
ANR	5847398	UnaryOperationExpression	* pev		5847047	0					
ANR	5847399	UnaryOperator	*		5847047	0					
ANR	5847400	Identifier	pev		5847047	1					
ANR	5847401	AdditiveExpression	mv_r - length_r_2		5847047	1		-			
ANR	5847402	Identifier	mv_r		5847047	0					
ANR	5847403	Identifier	length_r_2		5847047	1					
ANR	5847404	ReturnType	static void		5847047	1					
ANR	5847405	Identifier	adjust_stroke_longitude		5847047	2					
ANR	5847406	ParameterList	"pl_ptr plp , const gs_gstate * pgs , bool thin , bool horiz , gs_line_cap start_cap , gs_line_cap end_cap"		5847047	3					
ANR	5847407	Parameter	pl_ptr plp	1178:24:48457:48466	5847047	0	True				
ANR	5847408	ParameterType	pl_ptr		5847047	0					
ANR	5847409	Identifier	plp		5847047	1					
ANR	5847410	Parameter	const gs_gstate * pgs	1178:36:48469:48489	5847047	1	True				
ANR	5847411	ParameterType	const gs_gstate *		5847047	0					
ANR	5847412	Identifier	pgs		5847047	1					
ANR	5847413	Parameter	bool thin	1179:24:48516:48524	5847047	2	True				
ANR	5847414	ParameterType	bool		5847047	0					
ANR	5847415	Identifier	thin		5847047	1					
ANR	5847416	Parameter	bool horiz	1179:35:48527:48536	5847047	3	True				
ANR	5847417	ParameterType	bool		5847047	0					
ANR	5847418	Identifier	horiz		5847047	1					
ANR	5847419	Parameter	gs_line_cap start_cap	1180:24:48563:48583	5847047	4	True				
ANR	5847420	ParameterType	gs_line_cap		5847047	0					
ANR	5847421	Identifier	start_cap		5847047	1					
ANR	5847422	Parameter	gs_line_cap end_cap	1180:47:48586:48604	5847047	5	True				
ANR	5847423	ParameterType	gs_line_cap		5847047	0					
ANR	5847424	Identifier	end_cap		5847047	1					
ANR	5847425	CFGEntryNode	ENTRY		5847047		True				
ANR	5847426	CFGExitNode	EXIT		5847047		True				
ANR	5847427	Symbol	* pov		5847047						
ANR	5847428	Symbol	plp -> width . y		5847047						
ANR	5847429	Symbol	* pow		5847047						
ANR	5847430	Symbol	plp -> width . x		5847047						
ANR	5847431	Symbol	fixed_floor		5847047						
ANR	5847432	Symbol	adj2		5847047						
ANR	5847433	Symbol	& plp -> o . p		5847047						
ANR	5847434	Symbol	plp -> o . p		5847047						
ANR	5847435	Symbol	* pev		5847047						
ANR	5847436	Symbol	& plp -> e		5847047						
ANR	5847437	Symbol	* pew		5847047						
ANR	5847438	Symbol	plp -> width		5847047						
ANR	5847439	Symbol	horiz		5847047						
ANR	5847440	Symbol	& plp -> o . p . x		5847047						
ANR	5847441	Symbol	fixed_1		5847047						
ANR	5847442	Symbol	& plp -> o . p . y		5847047						
ANR	5847443	Symbol	end_cap		5847047						
ANR	5847444	Symbol	pov		5847047						
ANR	5847445	Symbol	any_abs		5847047						
ANR	5847446	Symbol	pow		5847047						
ANR	5847447	Symbol	STROKE_ADJUSTMENT		5847047						
ANR	5847448	Symbol	fixed_half		5847047						
ANR	5847449	Symbol	pgs		5847047						
ANR	5847450	Symbol	* plp		5847047						
ANR	5847451	Symbol	pev		5847047						
ANR	5847452	Symbol	pew		5847047						
ANR	5847453	Symbol	length		5847047						
ANR	5847454	Symbol	mv		5847047						
ANR	5847455	Symbol	gs_cap_butt		5847047						
ANR	5847456	Symbol	thin		5847047						
ANR	5847457	Symbol	start_cap		5847047						
ANR	5847458	Symbol	mv_r		5847047						
ANR	5847459	Symbol	& plp -> e . p . x		5847047						
ANR	5847460	Symbol	length_r		5847047						
ANR	5847461	Symbol	plp -> e . p		5847047						
ANR	5847462	Symbol	& plp -> e . p . y		5847047						
ANR	5847463	Symbol	plp		5847047						
ANR	5847464	Symbol	& plp -> o		5847047						
ANR	5847465	Symbol	plp -> o		5847047						
ANR	5847466	Symbol	x		5847047						
ANR	5847467	Symbol	width		5847047						
ANR	5847468	Symbol	plp -> e		5847047						
ANR	5847469	Symbol	y		5847047						
ANR	5847470	Symbol	& plp -> e . p		5847047						
ANR	5847471	Symbol	length_r_2		5847047						
ANR	5847472	Symbol	fixed_rounded		5847047						
ANR	5847473	Function	adjust_stroke	1234:0:50619:57290							
ANR	5847474	FunctionDef	"adjust_stroke (gx_device * dev , pl_ptr plp , const gs_gstate * pgs , bool thin , bool adjust_longitude , note_flags flags)"		5847473	0					
ANR	5847475	CompoundStatement		1237:0:50762:57290	5847473	0					
ANR	5847476	IdentifierDeclStatement	"bool horiz , adjust = true ;"	1238:4:50768:50793	5847473	0	True				
ANR	5847477	IdentifierDecl	horiz		5847473	0					
ANR	5847478	IdentifierDeclType	bool		5847473	0					
ANR	5847479	Identifier	horiz		5847473	1					
ANR	5847480	IdentifierDecl	adjust = true		5847473	1					
ANR	5847481	IdentifierDeclType	bool		5847473	0					
ANR	5847482	Identifier	adjust		5847473	1					
ANR	5847483	AssignmentExpression	adjust = true		5847473	2		=			
ANR	5847484	Identifier	true		5847473	0					
ANR	5847485	Identifier	true		5847473	1					
ANR	5847486	IdentifierDeclStatement	gs_line_cap start_cap = ( flags & nf_dash_head ? pgs -> line_params . dash_cap : pgs -> line_params . start_cap ) ;	1239:4:50799:50960	5847473	1	True				
ANR	5847487	IdentifierDecl	start_cap = ( flags & nf_dash_head ? pgs -> line_params . dash_cap : pgs -> line_params . start_cap )		5847473	0					
ANR	5847488	IdentifierDeclType	gs_line_cap		5847473	0					
ANR	5847489	Identifier	start_cap		5847473	1					
ANR	5847490	AssignmentExpression	start_cap = ( flags & nf_dash_head ? pgs -> line_params . dash_cap : pgs -> line_params . start_cap )		5847473	2		=			
ANR	5847491	Identifier	start_cap		5847473	0					
ANR	5847492	ConditionalExpression	flags & nf_dash_head ? pgs -> line_params . dash_cap : pgs -> line_params . start_cap		5847473	1					
ANR	5847493	Condition	flags & nf_dash_head		5847473	0					
ANR	5847494	BitAndExpression	flags & nf_dash_head		5847473	0		&			
ANR	5847495	Identifier	flags		5847473	0					
ANR	5847496	Identifier	nf_dash_head		5847473	1					
ANR	5847497	MemberAccess	pgs -> line_params . dash_cap		5847473	1					
ANR	5847498	PtrMemberAccess	pgs -> line_params		5847473	0					
ANR	5847499	Identifier	pgs		5847473	0					
ANR	5847500	Identifier	line_params		5847473	1					
ANR	5847501	Identifier	dash_cap		5847473	1					
ANR	5847502	MemberAccess	pgs -> line_params . start_cap		5847473	2					
ANR	5847503	PtrMemberAccess	pgs -> line_params		5847473	0					
ANR	5847504	Identifier	pgs		5847473	0					
ANR	5847505	Identifier	line_params		5847473	1					
ANR	5847506	Identifier	start_cap		5847473	1					
ANR	5847507	IdentifierDeclStatement	gs_line_cap end_cap = ( flags & nf_dash_tail ? pgs -> line_params . dash_cap : pgs -> line_params . end_cap ) ;	1242:4:50966:51125	5847473	2	True				
ANR	5847508	IdentifierDecl	end_cap = ( flags & nf_dash_tail ? pgs -> line_params . dash_cap : pgs -> line_params . end_cap )		5847473	0					
ANR	5847509	IdentifierDeclType	gs_line_cap		5847473	0					
ANR	5847510	Identifier	end_cap		5847473	1					
ANR	5847511	AssignmentExpression	end_cap = ( flags & nf_dash_tail ? pgs -> line_params . dash_cap : pgs -> line_params . end_cap )		5847473	2		=			
ANR	5847512	Identifier	end_cap		5847473	0					
ANR	5847513	ConditionalExpression	flags & nf_dash_tail ? pgs -> line_params . dash_cap : pgs -> line_params . end_cap		5847473	1					
ANR	5847514	Condition	flags & nf_dash_tail		5847473	0					
ANR	5847515	BitAndExpression	flags & nf_dash_tail		5847473	0		&			
ANR	5847516	Identifier	flags		5847473	0					
ANR	5847517	Identifier	nf_dash_tail		5847473	1					
ANR	5847518	MemberAccess	pgs -> line_params . dash_cap		5847473	1					
ANR	5847519	PtrMemberAccess	pgs -> line_params		5847473	0					
ANR	5847520	Identifier	pgs		5847473	0					
ANR	5847521	Identifier	line_params		5847473	1					
ANR	5847522	Identifier	dash_cap		5847473	1					
ANR	5847523	MemberAccess	pgs -> line_params . end_cap		5847473	2					
ANR	5847524	PtrMemberAccess	pgs -> line_params		5847473	0					
ANR	5847525	Identifier	pgs		5847473	0					
ANR	5847526	Identifier	line_params		5847473	1					
ANR	5847527	Identifier	end_cap		5847473	1					
ANR	5847528	IfStatement	if ( ! pgs -> stroke_adjust || ( plp -> width . x != 0 && plp -> width . y != 0 ) )		5847473	3					
ANR	5847529	Condition	! pgs -> stroke_adjust || ( plp -> width . x != 0 && plp -> width . y != 0 )	1248:8:51243:51305	5847473	0	True				
ANR	5847530	OrExpression	! pgs -> stroke_adjust || ( plp -> width . x != 0 && plp -> width . y != 0 )		5847473	0		||			
ANR	5847531	UnaryOperationExpression	! pgs -> stroke_adjust		5847473	0					
ANR	5847532	UnaryOperator	!		5847473	0					
ANR	5847533	PtrMemberAccess	pgs -> stroke_adjust		5847473	1					
ANR	5847534	Identifier	pgs		5847473	0					
ANR	5847535	Identifier	stroke_adjust		5847473	1					
ANR	5847536	AndExpression	plp -> width . x != 0 && plp -> width . y != 0		5847473	1		&&			
ANR	5847537	EqualityExpression	plp -> width . x != 0		5847473	0		!=			
ANR	5847538	MemberAccess	plp -> width . x		5847473	0					
ANR	5847539	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847540	Identifier	plp		5847473	0					
ANR	5847541	Identifier	width		5847473	1					
ANR	5847542	Identifier	x		5847473	1					
ANR	5847543	PrimaryExpression	0		5847473	1					
ANR	5847544	EqualityExpression	plp -> width . y != 0		5847473	1		!=			
ANR	5847545	MemberAccess	plp -> width . y		5847473	0					
ANR	5847546	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847547	Identifier	plp		5847473	0					
ANR	5847548	Identifier	width		5847473	1					
ANR	5847549	Identifier	y		5847473	1					
ANR	5847550	PrimaryExpression	0		5847473	1					
ANR	5847551	CompoundStatement		12:73:545:545	5847473	1					
ANR	5847552	ExpressionStatement	dev -> sgr . stroke_stored = false	1249:8:51318:51348	5847473	0	True				
ANR	5847553	AssignmentExpression	dev -> sgr . stroke_stored = false		5847473	0		=			
ANR	5847554	MemberAccess	dev -> sgr . stroke_stored		5847473	0					
ANR	5847555	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847556	Identifier	dev		5847473	0					
ANR	5847557	Identifier	sgr		5847473	1					
ANR	5847558	Identifier	stroke_stored		5847473	1					
ANR	5847559	Identifier	false		5847473	1					
ANR	5847560	ReturnStatement	return ;	1250:8:51358:51364	5847473	1	True				
ANR	5847561	IfStatement	if ( dev -> sgr . stroke_stored && ( start_cap == gs_cap_butt || end_cap == gs_cap_butt ) && dev -> sgr . orig [ 3 ] . x == plp -> vector . x && dev -> sgr . orig [ 3 ] . y == plp -> vector . y )		5847473	4					
ANR	5847562	Condition	dev -> sgr . stroke_stored && ( start_cap == gs_cap_butt || end_cap == gs_cap_butt ) && dev -> sgr . orig [ 3 ] . x == plp -> vector . x && dev -> sgr . orig [ 3 ] . y == plp -> vector . y	1255:8:51579:51750	5847473	0	True				
ANR	5847563	AndExpression	dev -> sgr . stroke_stored && ( start_cap == gs_cap_butt || end_cap == gs_cap_butt ) && dev -> sgr . orig [ 3 ] . x == plp -> vector . x && dev -> sgr . orig [ 3 ] . y == plp -> vector . y		5847473	0		&&			
ANR	5847564	MemberAccess	dev -> sgr . stroke_stored		5847473	0					
ANR	5847565	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847566	Identifier	dev		5847473	0					
ANR	5847567	Identifier	sgr		5847473	1					
ANR	5847568	Identifier	stroke_stored		5847473	1					
ANR	5847569	AndExpression	( start_cap == gs_cap_butt || end_cap == gs_cap_butt ) && dev -> sgr . orig [ 3 ] . x == plp -> vector . x && dev -> sgr . orig [ 3 ] . y == plp -> vector . y		5847473	1		&&			
ANR	5847570	OrExpression	start_cap == gs_cap_butt || end_cap == gs_cap_butt		5847473	0		||			
ANR	5847571	EqualityExpression	start_cap == gs_cap_butt		5847473	0		==			
ANR	5847572	Identifier	start_cap		5847473	0					
ANR	5847573	Identifier	gs_cap_butt		5847473	1					
ANR	5847574	EqualityExpression	end_cap == gs_cap_butt		5847473	1		==			
ANR	5847575	Identifier	end_cap		5847473	0					
ANR	5847576	Identifier	gs_cap_butt		5847473	1					
ANR	5847577	AndExpression	dev -> sgr . orig [ 3 ] . x == plp -> vector . x && dev -> sgr . orig [ 3 ] . y == plp -> vector . y		5847473	1		&&			
ANR	5847578	EqualityExpression	dev -> sgr . orig [ 3 ] . x == plp -> vector . x		5847473	0		==			
ANR	5847579	MemberAccess	dev -> sgr . orig [ 3 ] . x		5847473	0					
ANR	5847580	ArrayIndexing	dev -> sgr . orig [ 3 ]		5847473	0					
ANR	5847581	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847582	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847583	Identifier	dev		5847473	0					
ANR	5847584	Identifier	sgr		5847473	1					
ANR	5847585	Identifier	orig		5847473	1					
ANR	5847586	PrimaryExpression	3		5847473	1					
ANR	5847587	Identifier	x		5847473	1					
ANR	5847588	MemberAccess	plp -> vector . x		5847473	1					
ANR	5847589	PtrMemberAccess	plp -> vector		5847473	0					
ANR	5847590	Identifier	plp		5847473	0					
ANR	5847591	Identifier	vector		5847473	1					
ANR	5847592	Identifier	x		5847473	1					
ANR	5847593	EqualityExpression	dev -> sgr . orig [ 3 ] . y == plp -> vector . y		5847473	1		==			
ANR	5847594	MemberAccess	dev -> sgr . orig [ 3 ] . y		5847473	0					
ANR	5847595	ArrayIndexing	dev -> sgr . orig [ 3 ]		5847473	0					
ANR	5847596	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847597	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847598	Identifier	dev		5847473	0					
ANR	5847599	Identifier	sgr		5847473	1					
ANR	5847600	Identifier	orig		5847473	1					
ANR	5847601	PrimaryExpression	3		5847473	1					
ANR	5847602	Identifier	y		5847473	1					
ANR	5847603	MemberAccess	plp -> vector . y		5847473	1					
ANR	5847604	PtrMemberAccess	plp -> vector		5847473	0					
ANR	5847605	Identifier	plp		5847473	0					
ANR	5847606	Identifier	vector		5847473	1					
ANR	5847607	Identifier	y		5847473	1					
ANR	5847608	CompoundStatement		21:84:990:990	5847473	1					
ANR	5847609	IfStatement	if ( ( int64_t ) ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) * plp -> vector . y && ( int64_t ) ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) * plp -> vector . y )		5847473	0					
ANR	5847610	Condition	( int64_t ) ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) * plp -> vector . y && ( int64_t ) ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) * plp -> vector . y	1259:12:51791:52070	5847473	0	True				
ANR	5847611	AndExpression	( int64_t ) ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) * plp -> vector . y && ( int64_t ) ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) * plp -> vector . y		5847473	0		&&			
ANR	5847612	EqualityExpression	( int64_t ) ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) * plp -> vector . y		5847473	0		==			
ANR	5847613	MultiplicativeExpression	( int64_t ) ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) * plp -> vector . x		5847473	0		*			
ANR	5847614	CastExpression	( int64_t ) ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x )		5847473	0					
ANR	5847615	CastTarget	int64_t		5847473	0					
ANR	5847616	AdditiveExpression	plp -> o . p . x - dev -> sgr . orig [ 0 ] . x		5847473	1		-			
ANR	5847617	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5847618	MemberAccess	plp -> o . p		5847473	0					
ANR	5847619	PtrMemberAccess	plp -> o		5847473	0					
ANR	5847620	Identifier	plp		5847473	0					
ANR	5847621	Identifier	o		5847473	1					
ANR	5847622	Identifier	p		5847473	1					
ANR	5847623	Identifier	x		5847473	1					
ANR	5847624	MemberAccess	dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5847625	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5847626	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847627	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847628	Identifier	dev		5847473	0					
ANR	5847629	Identifier	sgr		5847473	1					
ANR	5847630	Identifier	orig		5847473	1					
ANR	5847631	PrimaryExpression	0		5847473	1					
ANR	5847632	Identifier	x		5847473	1					
ANR	5847633	MemberAccess	plp -> vector . x		5847473	1					
ANR	5847634	PtrMemberAccess	plp -> vector		5847473	0					
ANR	5847635	Identifier	plp		5847473	0					
ANR	5847636	Identifier	vector		5847473	1					
ANR	5847637	Identifier	x		5847473	1					
ANR	5847638	MultiplicativeExpression	( int64_t ) ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) * plp -> vector . y		5847473	1		*			
ANR	5847639	CastExpression	( int64_t ) ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y )		5847473	0					
ANR	5847640	CastTarget	int64_t		5847473	0					
ANR	5847641	AdditiveExpression	plp -> o . p . y - dev -> sgr . orig [ 0 ] . y		5847473	1		-			
ANR	5847642	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5847643	MemberAccess	plp -> o . p		5847473	0					
ANR	5847644	PtrMemberAccess	plp -> o		5847473	0					
ANR	5847645	Identifier	plp		5847473	0					
ANR	5847646	Identifier	o		5847473	1					
ANR	5847647	Identifier	p		5847473	1					
ANR	5847648	Identifier	y		5847473	1					
ANR	5847649	MemberAccess	dev -> sgr . orig [ 0 ] . y		5847473	1					
ANR	5847650	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5847651	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847652	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847653	Identifier	dev		5847473	0					
ANR	5847654	Identifier	sgr		5847473	1					
ANR	5847655	Identifier	orig		5847473	1					
ANR	5847656	PrimaryExpression	0		5847473	1					
ANR	5847657	Identifier	y		5847473	1					
ANR	5847658	MemberAccess	plp -> vector . y		5847473	1					
ANR	5847659	PtrMemberAccess	plp -> vector		5847473	0					
ANR	5847660	Identifier	plp		5847473	0					
ANR	5847661	Identifier	vector		5847473	1					
ANR	5847662	Identifier	y		5847473	1					
ANR	5847663	EqualityExpression	( int64_t ) ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) * plp -> vector . x == ( int64_t ) ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) * plp -> vector . y		5847473	1		==			
ANR	5847664	MultiplicativeExpression	( int64_t ) ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) * plp -> vector . x		5847473	0		*			
ANR	5847665	CastExpression	( int64_t ) ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x )		5847473	0					
ANR	5847666	CastTarget	int64_t		5847473	0					
ANR	5847667	AdditiveExpression	plp -> e . p . x - dev -> sgr . orig [ 1 ] . x		5847473	1		-			
ANR	5847668	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5847669	MemberAccess	plp -> e . p		5847473	0					
ANR	5847670	PtrMemberAccess	plp -> e		5847473	0					
ANR	5847671	Identifier	plp		5847473	0					
ANR	5847672	Identifier	e		5847473	1					
ANR	5847673	Identifier	p		5847473	1					
ANR	5847674	Identifier	x		5847473	1					
ANR	5847675	MemberAccess	dev -> sgr . orig [ 1 ] . x		5847473	1					
ANR	5847676	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5847677	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847678	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847679	Identifier	dev		5847473	0					
ANR	5847680	Identifier	sgr		5847473	1					
ANR	5847681	Identifier	orig		5847473	1					
ANR	5847682	PrimaryExpression	1		5847473	1					
ANR	5847683	Identifier	x		5847473	1					
ANR	5847684	MemberAccess	plp -> vector . x		5847473	1					
ANR	5847685	PtrMemberAccess	plp -> vector		5847473	0					
ANR	5847686	Identifier	plp		5847473	0					
ANR	5847687	Identifier	vector		5847473	1					
ANR	5847688	Identifier	x		5847473	1					
ANR	5847689	MultiplicativeExpression	( int64_t ) ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) * plp -> vector . y		5847473	1		*			
ANR	5847690	CastExpression	( int64_t ) ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y )		5847473	0					
ANR	5847691	CastTarget	int64_t		5847473	0					
ANR	5847692	AdditiveExpression	plp -> e . p . y - dev -> sgr . orig [ 1 ] . y		5847473	1		-			
ANR	5847693	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5847694	MemberAccess	plp -> e . p		5847473	0					
ANR	5847695	PtrMemberAccess	plp -> e		5847473	0					
ANR	5847696	Identifier	plp		5847473	0					
ANR	5847697	Identifier	e		5847473	1					
ANR	5847698	Identifier	p		5847473	1					
ANR	5847699	Identifier	y		5847473	1					
ANR	5847700	MemberAccess	dev -> sgr . orig [ 1 ] . y		5847473	1					
ANR	5847701	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5847702	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847703	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847704	Identifier	dev		5847473	0					
ANR	5847705	Identifier	sgr		5847473	1					
ANR	5847706	Identifier	orig		5847473	1					
ANR	5847707	PrimaryExpression	1		5847473	1					
ANR	5847708	Identifier	y		5847473	1					
ANR	5847709	MemberAccess	plp -> vector . y		5847473	1					
ANR	5847710	PtrMemberAccess	plp -> vector		5847473	0					
ANR	5847711	Identifier	plp		5847473	0					
ANR	5847712	Identifier	vector		5847473	1					
ANR	5847713	Identifier	y		5847473	1					
ANR	5847714	CompoundStatement		26:72:1310:1310	5847473	1					
ANR	5847715	IfStatement	if ( any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) )		5847473	0					
ANR	5847716	Condition	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )	1264:16:52128:52531	5847473	0	True				
ANR	5847717	AndExpression	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	0		&&			
ANR	5847718	RelationalExpression	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x )		5847473	0		<=			
ANR	5847719	CallExpression	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x )		5847473	0					
ANR	5847720	Callee	any_abs		5847473	0					
ANR	5847721	Identifier	any_abs		5847473	0					
ANR	5847722	ArgumentList	plp -> o . p . x - dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5847723	Argument	plp -> o . p . x - dev -> sgr . orig [ 0 ] . x		5847473	0					
ANR	5847724	AdditiveExpression	plp -> o . p . x - dev -> sgr . orig [ 0 ] . x		5847473	0		-			
ANR	5847725	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5847726	MemberAccess	plp -> o . p		5847473	0					
ANR	5847727	PtrMemberAccess	plp -> o		5847473	0					
ANR	5847728	Identifier	plp		5847473	0					
ANR	5847729	Identifier	o		5847473	1					
ANR	5847730	Identifier	p		5847473	1					
ANR	5847731	Identifier	x		5847473	1					
ANR	5847732	MemberAccess	dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5847733	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5847734	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847735	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847736	Identifier	dev		5847473	0					
ANR	5847737	Identifier	sgr		5847473	1					
ANR	5847738	Identifier	orig		5847473	1					
ANR	5847739	PrimaryExpression	0		5847473	1					
ANR	5847740	Identifier	x		5847473	1					
ANR	5847741	CallExpression	any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x )		5847473	1					
ANR	5847742	Callee	any_abs		5847473	0					
ANR	5847743	Identifier	any_abs		5847473	0					
ANR	5847744	ArgumentList	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5847745	Argument	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0					
ANR	5847746	AdditiveExpression	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0		+			
ANR	5847747	MemberAccess	plp -> width . x		5847473	0					
ANR	5847748	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847749	Identifier	plp		5847473	0					
ANR	5847750	Identifier	width		5847473	1					
ANR	5847751	Identifier	x		5847473	1					
ANR	5847752	MemberAccess	dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5847753	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5847754	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847755	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847756	Identifier	dev		5847473	0					
ANR	5847757	Identifier	sgr		5847473	1					
ANR	5847758	Identifier	orig		5847473	1					
ANR	5847759	PrimaryExpression	2		5847473	1					
ANR	5847760	Identifier	x		5847473	1					
ANR	5847761	AndExpression	any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	1		&&			
ANR	5847762	RelationalExpression	any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	0		<=			
ANR	5847763	CallExpression	any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y )		5847473	0					
ANR	5847764	Callee	any_abs		5847473	0					
ANR	5847765	Identifier	any_abs		5847473	0					
ANR	5847766	ArgumentList	plp -> o . p . y - dev -> sgr . orig [ 0 ] . y		5847473	1					
ANR	5847767	Argument	plp -> o . p . y - dev -> sgr . orig [ 0 ] . y		5847473	0					
ANR	5847768	AdditiveExpression	plp -> o . p . y - dev -> sgr . orig [ 0 ] . y		5847473	0		-			
ANR	5847769	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5847770	MemberAccess	plp -> o . p		5847473	0					
ANR	5847771	PtrMemberAccess	plp -> o		5847473	0					
ANR	5847772	Identifier	plp		5847473	0					
ANR	5847773	Identifier	o		5847473	1					
ANR	5847774	Identifier	p		5847473	1					
ANR	5847775	Identifier	y		5847473	1					
ANR	5847776	MemberAccess	dev -> sgr . orig [ 0 ] . y		5847473	1					
ANR	5847777	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5847778	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847779	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847780	Identifier	dev		5847473	0					
ANR	5847781	Identifier	sgr		5847473	1					
ANR	5847782	Identifier	orig		5847473	1					
ANR	5847783	PrimaryExpression	0		5847473	1					
ANR	5847784	Identifier	y		5847473	1					
ANR	5847785	CallExpression	any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	1					
ANR	5847786	Callee	any_abs		5847473	0					
ANR	5847787	Identifier	any_abs		5847473	0					
ANR	5847788	ArgumentList	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5847789	Argument	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0					
ANR	5847790	AdditiveExpression	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0		+			
ANR	5847791	MemberAccess	plp -> width . y		5847473	0					
ANR	5847792	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847793	Identifier	plp		5847473	0					
ANR	5847794	Identifier	width		5847473	1					
ANR	5847795	Identifier	y		5847473	1					
ANR	5847796	MemberAccess	dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5847797	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5847798	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847799	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847800	Identifier	dev		5847473	0					
ANR	5847801	Identifier	sgr		5847473	1					
ANR	5847802	Identifier	orig		5847473	1					
ANR	5847803	PrimaryExpression	2		5847473	1					
ANR	5847804	Identifier	y		5847473	1					
ANR	5847805	AndExpression	any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	1		&&			
ANR	5847806	RelationalExpression	any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x )		5847473	0		<=			
ANR	5847807	CallExpression	any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x )		5847473	0					
ANR	5847808	Callee	any_abs		5847473	0					
ANR	5847809	Identifier	any_abs		5847473	0					
ANR	5847810	ArgumentList	plp -> e . p . x - dev -> sgr . orig [ 1 ] . x		5847473	1					
ANR	5847811	Argument	plp -> e . p . x - dev -> sgr . orig [ 1 ] . x		5847473	0					
ANR	5847812	AdditiveExpression	plp -> e . p . x - dev -> sgr . orig [ 1 ] . x		5847473	0		-			
ANR	5847813	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5847814	MemberAccess	plp -> e . p		5847473	0					
ANR	5847815	PtrMemberAccess	plp -> e		5847473	0					
ANR	5847816	Identifier	plp		5847473	0					
ANR	5847817	Identifier	e		5847473	1					
ANR	5847818	Identifier	p		5847473	1					
ANR	5847819	Identifier	x		5847473	1					
ANR	5847820	MemberAccess	dev -> sgr . orig [ 1 ] . x		5847473	1					
ANR	5847821	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5847822	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847823	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847824	Identifier	dev		5847473	0					
ANR	5847825	Identifier	sgr		5847473	1					
ANR	5847826	Identifier	orig		5847473	1					
ANR	5847827	PrimaryExpression	1		5847473	1					
ANR	5847828	Identifier	x		5847473	1					
ANR	5847829	CallExpression	any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x )		5847473	1					
ANR	5847830	Callee	any_abs		5847473	0					
ANR	5847831	Identifier	any_abs		5847473	0					
ANR	5847832	ArgumentList	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5847833	Argument	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0					
ANR	5847834	AdditiveExpression	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0		+			
ANR	5847835	MemberAccess	plp -> width . x		5847473	0					
ANR	5847836	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847837	Identifier	plp		5847473	0					
ANR	5847838	Identifier	width		5847473	1					
ANR	5847839	Identifier	x		5847473	1					
ANR	5847840	MemberAccess	dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5847841	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5847842	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847843	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847844	Identifier	dev		5847473	0					
ANR	5847845	Identifier	sgr		5847473	1					
ANR	5847846	Identifier	orig		5847473	1					
ANR	5847847	PrimaryExpression	2		5847473	1					
ANR	5847848	Identifier	x		5847473	1					
ANR	5847849	RelationalExpression	any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	1		<=			
ANR	5847850	CallExpression	any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y )		5847473	0					
ANR	5847851	Callee	any_abs		5847473	0					
ANR	5847852	Identifier	any_abs		5847473	0					
ANR	5847853	ArgumentList	plp -> e . p . y - dev -> sgr . orig [ 1 ] . y		5847473	1					
ANR	5847854	Argument	plp -> e . p . y - dev -> sgr . orig [ 1 ] . y		5847473	0					
ANR	5847855	AdditiveExpression	plp -> e . p . y - dev -> sgr . orig [ 1 ] . y		5847473	0		-			
ANR	5847856	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5847857	MemberAccess	plp -> e . p		5847473	0					
ANR	5847858	PtrMemberAccess	plp -> e		5847473	0					
ANR	5847859	Identifier	plp		5847473	0					
ANR	5847860	Identifier	e		5847473	1					
ANR	5847861	Identifier	p		5847473	1					
ANR	5847862	Identifier	y		5847473	1					
ANR	5847863	MemberAccess	dev -> sgr . orig [ 1 ] . y		5847473	1					
ANR	5847864	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5847865	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847866	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847867	Identifier	dev		5847473	0					
ANR	5847868	Identifier	sgr		5847473	1					
ANR	5847869	Identifier	orig		5847473	1					
ANR	5847870	PrimaryExpression	1		5847473	1					
ANR	5847871	Identifier	y		5847473	1					
ANR	5847872	CallExpression	any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	1					
ANR	5847873	Callee	any_abs		5847473	0					
ANR	5847874	Identifier	any_abs		5847473	0					
ANR	5847875	ArgumentList	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5847876	Argument	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0					
ANR	5847877	AdditiveExpression	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0		+			
ANR	5847878	MemberAccess	plp -> width . y		5847473	0					
ANR	5847879	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847880	Identifier	plp		5847473	0					
ANR	5847881	Identifier	width		5847473	1					
ANR	5847882	Identifier	y		5847473	1					
ANR	5847883	MemberAccess	dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5847884	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5847885	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847886	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847887	Identifier	dev		5847473	0					
ANR	5847888	Identifier	sgr		5847473	1					
ANR	5847889	Identifier	orig		5847473	1					
ANR	5847890	PrimaryExpression	2		5847473	1					
ANR	5847891	Identifier	y		5847473	1					
ANR	5847892	CompoundStatement		31:104:1771:1771	5847473	1					
ANR	5847893	IfStatement	if ( any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2 && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2 )		5847473	0					
ANR	5847894	Condition	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2 && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2	1269:20:52622:53053	5847473	0	True				
ANR	5847895	AndExpression	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2 && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2		5847473	0		&&			
ANR	5847896	RelationalExpression	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2		5847473	0		>=			
ANR	5847897	CallExpression	any_abs ( plp -> o . p . x - dev -> sgr . orig [ 0 ] . x )		5847473	0					
ANR	5847898	Callee	any_abs		5847473	0					
ANR	5847899	Identifier	any_abs		5847473	0					
ANR	5847900	ArgumentList	plp -> o . p . x - dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5847901	Argument	plp -> o . p . x - dev -> sgr . orig [ 0 ] . x		5847473	0					
ANR	5847902	AdditiveExpression	plp -> o . p . x - dev -> sgr . orig [ 0 ] . x		5847473	0		-			
ANR	5847903	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5847904	MemberAccess	plp -> o . p		5847473	0					
ANR	5847905	PtrMemberAccess	plp -> o		5847473	0					
ANR	5847906	Identifier	plp		5847473	0					
ANR	5847907	Identifier	o		5847473	1					
ANR	5847908	Identifier	p		5847473	1					
ANR	5847909	Identifier	x		5847473	1					
ANR	5847910	MemberAccess	dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5847911	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5847912	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847913	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847914	Identifier	dev		5847473	0					
ANR	5847915	Identifier	sgr		5847473	1					
ANR	5847916	Identifier	orig		5847473	1					
ANR	5847917	PrimaryExpression	0		5847473	1					
ANR	5847918	Identifier	x		5847473	1					
ANR	5847919	MultiplicativeExpression	any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2		5847473	1		/			
ANR	5847920	CallExpression	any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x )		5847473	0					
ANR	5847921	Callee	any_abs		5847473	0					
ANR	5847922	Identifier	any_abs		5847473	0					
ANR	5847923	ArgumentList	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5847924	Argument	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0					
ANR	5847925	AdditiveExpression	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0		+			
ANR	5847926	MemberAccess	plp -> width . x		5847473	0					
ANR	5847927	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847928	Identifier	plp		5847473	0					
ANR	5847929	Identifier	width		5847473	1					
ANR	5847930	Identifier	x		5847473	1					
ANR	5847931	MemberAccess	dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5847932	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5847933	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847934	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847935	Identifier	dev		5847473	0					
ANR	5847936	Identifier	sgr		5847473	1					
ANR	5847937	Identifier	orig		5847473	1					
ANR	5847938	PrimaryExpression	2		5847473	1					
ANR	5847939	Identifier	x		5847473	1					
ANR	5847940	PrimaryExpression	2		5847473	1					
ANR	5847941	AndExpression	any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2 && any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2		5847473	1		&&			
ANR	5847942	RelationalExpression	any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2		5847473	0		>=			
ANR	5847943	CallExpression	any_abs ( plp -> o . p . y - dev -> sgr . orig [ 0 ] . y )		5847473	0					
ANR	5847944	Callee	any_abs		5847473	0					
ANR	5847945	Identifier	any_abs		5847473	0					
ANR	5847946	ArgumentList	plp -> o . p . y - dev -> sgr . orig [ 0 ] . y		5847473	1					
ANR	5847947	Argument	plp -> o . p . y - dev -> sgr . orig [ 0 ] . y		5847473	0					
ANR	5847948	AdditiveExpression	plp -> o . p . y - dev -> sgr . orig [ 0 ] . y		5847473	0		-			
ANR	5847949	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5847950	MemberAccess	plp -> o . p		5847473	0					
ANR	5847951	PtrMemberAccess	plp -> o		5847473	0					
ANR	5847952	Identifier	plp		5847473	0					
ANR	5847953	Identifier	o		5847473	1					
ANR	5847954	Identifier	p		5847473	1					
ANR	5847955	Identifier	y		5847473	1					
ANR	5847956	MemberAccess	dev -> sgr . orig [ 0 ] . y		5847473	1					
ANR	5847957	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5847958	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847959	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847960	Identifier	dev		5847473	0					
ANR	5847961	Identifier	sgr		5847473	1					
ANR	5847962	Identifier	orig		5847473	1					
ANR	5847963	PrimaryExpression	0		5847473	1					
ANR	5847964	Identifier	y		5847473	1					
ANR	5847965	MultiplicativeExpression	any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2		5847473	1		/			
ANR	5847966	CallExpression	any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	0					
ANR	5847967	Callee	any_abs		5847473	0					
ANR	5847968	Identifier	any_abs		5847473	0					
ANR	5847969	ArgumentList	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5847970	Argument	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0					
ANR	5847971	AdditiveExpression	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0		+			
ANR	5847972	MemberAccess	plp -> width . y		5847473	0					
ANR	5847973	PtrMemberAccess	plp -> width		5847473	0					
ANR	5847974	Identifier	plp		5847473	0					
ANR	5847975	Identifier	width		5847473	1					
ANR	5847976	Identifier	y		5847473	1					
ANR	5847977	MemberAccess	dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5847978	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5847979	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5847980	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5847981	Identifier	dev		5847473	0					
ANR	5847982	Identifier	sgr		5847473	1					
ANR	5847983	Identifier	orig		5847473	1					
ANR	5847984	PrimaryExpression	2		5847473	1					
ANR	5847985	Identifier	y		5847473	1					
ANR	5847986	PrimaryExpression	2		5847473	1					
ANR	5847987	AndExpression	any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2 && any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2		5847473	1		&&			
ANR	5847988	RelationalExpression	any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x ) >= any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2		5847473	0		>=			
ANR	5847989	CallExpression	any_abs ( plp -> e . p . x - dev -> sgr . orig [ 1 ] . x )		5847473	0					
ANR	5847990	Callee	any_abs		5847473	0					
ANR	5847991	Identifier	any_abs		5847473	0					
ANR	5847992	ArgumentList	plp -> e . p . x - dev -> sgr . orig [ 1 ] . x		5847473	1					
ANR	5847993	Argument	plp -> e . p . x - dev -> sgr . orig [ 1 ] . x		5847473	0					
ANR	5847994	AdditiveExpression	plp -> e . p . x - dev -> sgr . orig [ 1 ] . x		5847473	0		-			
ANR	5847995	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5847996	MemberAccess	plp -> e . p		5847473	0					
ANR	5847997	PtrMemberAccess	plp -> e		5847473	0					
ANR	5847998	Identifier	plp		5847473	0					
ANR	5847999	Identifier	e		5847473	1					
ANR	5848000	Identifier	p		5847473	1					
ANR	5848001	Identifier	x		5847473	1					
ANR	5848002	MemberAccess	dev -> sgr . orig [ 1 ] . x		5847473	1					
ANR	5848003	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5848004	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848005	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848006	Identifier	dev		5847473	0					
ANR	5848007	Identifier	sgr		5847473	1					
ANR	5848008	Identifier	orig		5847473	1					
ANR	5848009	PrimaryExpression	1		5847473	1					
ANR	5848010	Identifier	x		5847473	1					
ANR	5848011	MultiplicativeExpression	any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x ) / 2		5847473	1		/			
ANR	5848012	CallExpression	any_abs ( plp -> width . x + dev -> sgr . orig [ 2 ] . x )		5847473	0					
ANR	5848013	Callee	any_abs		5847473	0					
ANR	5848014	Identifier	any_abs		5847473	0					
ANR	5848015	ArgumentList	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5848016	Argument	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0					
ANR	5848017	AdditiveExpression	plp -> width . x + dev -> sgr . orig [ 2 ] . x		5847473	0		+			
ANR	5848018	MemberAccess	plp -> width . x		5847473	0					
ANR	5848019	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848020	Identifier	plp		5847473	0					
ANR	5848021	Identifier	width		5847473	1					
ANR	5848022	Identifier	x		5847473	1					
ANR	5848023	MemberAccess	dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5848024	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5848025	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848026	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848027	Identifier	dev		5847473	0					
ANR	5848028	Identifier	sgr		5847473	1					
ANR	5848029	Identifier	orig		5847473	1					
ANR	5848030	PrimaryExpression	2		5847473	1					
ANR	5848031	Identifier	x		5847473	1					
ANR	5848032	PrimaryExpression	2		5847473	1					
ANR	5848033	RelationalExpression	any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y ) >= any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2		5847473	1		>=			
ANR	5848034	CallExpression	any_abs ( plp -> e . p . y - dev -> sgr . orig [ 1 ] . y )		5847473	0					
ANR	5848035	Callee	any_abs		5847473	0					
ANR	5848036	Identifier	any_abs		5847473	0					
ANR	5848037	ArgumentList	plp -> e . p . y - dev -> sgr . orig [ 1 ] . y		5847473	1					
ANR	5848038	Argument	plp -> e . p . y - dev -> sgr . orig [ 1 ] . y		5847473	0					
ANR	5848039	AdditiveExpression	plp -> e . p . y - dev -> sgr . orig [ 1 ] . y		5847473	0		-			
ANR	5848040	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5848041	MemberAccess	plp -> e . p		5847473	0					
ANR	5848042	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848043	Identifier	plp		5847473	0					
ANR	5848044	Identifier	e		5847473	1					
ANR	5848045	Identifier	p		5847473	1					
ANR	5848046	Identifier	y		5847473	1					
ANR	5848047	MemberAccess	dev -> sgr . orig [ 1 ] . y		5847473	1					
ANR	5848048	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5848049	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848050	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848051	Identifier	dev		5847473	0					
ANR	5848052	Identifier	sgr		5847473	1					
ANR	5848053	Identifier	orig		5847473	1					
ANR	5848054	PrimaryExpression	1		5847473	1					
ANR	5848055	Identifier	y		5847473	1					
ANR	5848056	MultiplicativeExpression	any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y ) / 2		5847473	1		/			
ANR	5848057	CallExpression	any_abs ( plp -> width . y + dev -> sgr . orig [ 2 ] . y )		5847473	0					
ANR	5848058	Callee	any_abs		5847473	0					
ANR	5848059	Identifier	any_abs		5847473	0					
ANR	5848060	ArgumentList	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5848061	Argument	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0					
ANR	5848062	AdditiveExpression	plp -> width . y + dev -> sgr . orig [ 2 ] . y		5847473	0		+			
ANR	5848063	MemberAccess	plp -> width . y		5847473	0					
ANR	5848064	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848065	Identifier	plp		5847473	0					
ANR	5848066	Identifier	width		5847473	1					
ANR	5848067	Identifier	y		5847473	1					
ANR	5848068	MemberAccess	dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5848069	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5848070	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848071	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848072	Identifier	dev		5847473	0					
ANR	5848073	Identifier	sgr		5847473	1					
ANR	5848074	Identifier	orig		5847473	1					
ANR	5848075	PrimaryExpression	2		5847473	1					
ANR	5848076	Identifier	y		5847473	1					
ANR	5848077	PrimaryExpression	2		5847473	1					
ANR	5848078	CompoundStatement		36:112:2293:2293	5847473	1					
ANR	5848079	IfStatement	if ( ! ( any_abs ( plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) ) )		5847473	0					
ANR	5848080	Condition	! ( any_abs ( plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) )	1274:24:53147:53615	5847473	0	True				
ANR	5848081	UnaryOperationExpression	! ( any_abs ( plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) )		5847473	0					
ANR	5848082	UnaryOperator	!		5847473	0					
ANR	5848083	AndExpression	any_abs ( plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y )		5847473	1		&&			
ANR	5848084	RelationalExpression	any_abs ( plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x )		5847473	0		<=			
ANR	5848085	CallExpression	any_abs ( plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x )		5847473	0					
ANR	5848086	Callee	any_abs		5847473	0					
ANR	5848087	Identifier	any_abs		5847473	0					
ANR	5848088	ArgumentList	plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x		5847473	1					
ANR	5848089	Argument	plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x		5847473	0					
ANR	5848090	AdditiveExpression	plp -> o . p . x - dev -> sgr . adjusted [ 0 ] . x		5847473	0		-			
ANR	5848091	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5848092	MemberAccess	plp -> o . p		5847473	0					
ANR	5848093	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848094	Identifier	plp		5847473	0					
ANR	5848095	Identifier	o		5847473	1					
ANR	5848096	Identifier	p		5847473	1					
ANR	5848097	Identifier	x		5847473	1					
ANR	5848098	MemberAccess	dev -> sgr . adjusted [ 0 ] . x		5847473	1					
ANR	5848099	ArrayIndexing	dev -> sgr . adjusted [ 0 ]		5847473	0					
ANR	5848100	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848101	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848102	Identifier	dev		5847473	0					
ANR	5848103	Identifier	sgr		5847473	1					
ANR	5848104	Identifier	adjusted		5847473	1					
ANR	5848105	PrimaryExpression	0		5847473	1					
ANR	5848106	Identifier	x		5847473	1					
ANR	5848107	CallExpression	any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x )		5847473	1					
ANR	5848108	Callee	any_abs		5847473	0					
ANR	5848109	Identifier	any_abs		5847473	0					
ANR	5848110	ArgumentList	plp -> width . x + dev -> sgr . adjusted [ 2 ] . x		5847473	1					
ANR	5848111	Argument	plp -> width . x + dev -> sgr . adjusted [ 2 ] . x		5847473	0					
ANR	5848112	AdditiveExpression	plp -> width . x + dev -> sgr . adjusted [ 2 ] . x		5847473	0		+			
ANR	5848113	MemberAccess	plp -> width . x		5847473	0					
ANR	5848114	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848115	Identifier	plp		5847473	0					
ANR	5848116	Identifier	width		5847473	1					
ANR	5848117	Identifier	x		5847473	1					
ANR	5848118	MemberAccess	dev -> sgr . adjusted [ 2 ] . x		5847473	1					
ANR	5848119	ArrayIndexing	dev -> sgr . adjusted [ 2 ]		5847473	0					
ANR	5848120	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848121	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848122	Identifier	dev		5847473	0					
ANR	5848123	Identifier	sgr		5847473	1					
ANR	5848124	Identifier	adjusted		5847473	1					
ANR	5848125	PrimaryExpression	2		5847473	1					
ANR	5848126	Identifier	x		5847473	1					
ANR	5848127	AndExpression	any_abs ( plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y ) && any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y )		5847473	1		&&			
ANR	5848128	RelationalExpression	any_abs ( plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y )		5847473	0		<=			
ANR	5848129	CallExpression	any_abs ( plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y )		5847473	0					
ANR	5848130	Callee	any_abs		5847473	0					
ANR	5848131	Identifier	any_abs		5847473	0					
ANR	5848132	ArgumentList	plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y		5847473	1					
ANR	5848133	Argument	plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y		5847473	0					
ANR	5848134	AdditiveExpression	plp -> o . p . y - dev -> sgr . adjusted [ 0 ] . y		5847473	0		-			
ANR	5848135	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5848136	MemberAccess	plp -> o . p		5847473	0					
ANR	5848137	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848138	Identifier	plp		5847473	0					
ANR	5848139	Identifier	o		5847473	1					
ANR	5848140	Identifier	p		5847473	1					
ANR	5848141	Identifier	y		5847473	1					
ANR	5848142	MemberAccess	dev -> sgr . adjusted [ 0 ] . y		5847473	1					
ANR	5848143	ArrayIndexing	dev -> sgr . adjusted [ 0 ]		5847473	0					
ANR	5848144	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848145	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848146	Identifier	dev		5847473	0					
ANR	5848147	Identifier	sgr		5847473	1					
ANR	5848148	Identifier	adjusted		5847473	1					
ANR	5848149	PrimaryExpression	0		5847473	1					
ANR	5848150	Identifier	y		5847473	1					
ANR	5848151	CallExpression	any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y )		5847473	1					
ANR	5848152	Callee	any_abs		5847473	0					
ANR	5848153	Identifier	any_abs		5847473	0					
ANR	5848154	ArgumentList	plp -> width . y + dev -> sgr . adjusted [ 2 ] . y		5847473	1					
ANR	5848155	Argument	plp -> width . y + dev -> sgr . adjusted [ 2 ] . y		5847473	0					
ANR	5848156	AdditiveExpression	plp -> width . y + dev -> sgr . adjusted [ 2 ] . y		5847473	0		+			
ANR	5848157	MemberAccess	plp -> width . y		5847473	0					
ANR	5848158	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848159	Identifier	plp		5847473	0					
ANR	5848160	Identifier	width		5847473	1					
ANR	5848161	Identifier	y		5847473	1					
ANR	5848162	MemberAccess	dev -> sgr . adjusted [ 2 ] . y		5847473	1					
ANR	5848163	ArrayIndexing	dev -> sgr . adjusted [ 2 ]		5847473	0					
ANR	5848164	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848165	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848166	Identifier	dev		5847473	0					
ANR	5848167	Identifier	sgr		5847473	1					
ANR	5848168	Identifier	adjusted		5847473	1					
ANR	5848169	PrimaryExpression	2		5847473	1					
ANR	5848170	Identifier	y		5847473	1					
ANR	5848171	AndExpression	any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x ) && any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y )		5847473	1		&&			
ANR	5848172	RelationalExpression	any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x ) <= any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x )		5847473	0		<=			
ANR	5848173	CallExpression	any_abs ( plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x )		5847473	0					
ANR	5848174	Callee	any_abs		5847473	0					
ANR	5848175	Identifier	any_abs		5847473	0					
ANR	5848176	ArgumentList	plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x		5847473	1					
ANR	5848177	Argument	plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x		5847473	0					
ANR	5848178	AdditiveExpression	plp -> e . p . x - dev -> sgr . adjusted [ 1 ] . x		5847473	0		-			
ANR	5848179	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5848180	MemberAccess	plp -> e . p		5847473	0					
ANR	5848181	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848182	Identifier	plp		5847473	0					
ANR	5848183	Identifier	e		5847473	1					
ANR	5848184	Identifier	p		5847473	1					
ANR	5848185	Identifier	x		5847473	1					
ANR	5848186	MemberAccess	dev -> sgr . adjusted [ 1 ] . x		5847473	1					
ANR	5848187	ArrayIndexing	dev -> sgr . adjusted [ 1 ]		5847473	0					
ANR	5848188	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848189	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848190	Identifier	dev		5847473	0					
ANR	5848191	Identifier	sgr		5847473	1					
ANR	5848192	Identifier	adjusted		5847473	1					
ANR	5848193	PrimaryExpression	1		5847473	1					
ANR	5848194	Identifier	x		5847473	1					
ANR	5848195	CallExpression	any_abs ( plp -> width . x + dev -> sgr . adjusted [ 2 ] . x )		5847473	1					
ANR	5848196	Callee	any_abs		5847473	0					
ANR	5848197	Identifier	any_abs		5847473	0					
ANR	5848198	ArgumentList	plp -> width . x + dev -> sgr . adjusted [ 2 ] . x		5847473	1					
ANR	5848199	Argument	plp -> width . x + dev -> sgr . adjusted [ 2 ] . x		5847473	0					
ANR	5848200	AdditiveExpression	plp -> width . x + dev -> sgr . adjusted [ 2 ] . x		5847473	0		+			
ANR	5848201	MemberAccess	plp -> width . x		5847473	0					
ANR	5848202	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848203	Identifier	plp		5847473	0					
ANR	5848204	Identifier	width		5847473	1					
ANR	5848205	Identifier	x		5847473	1					
ANR	5848206	MemberAccess	dev -> sgr . adjusted [ 2 ] . x		5847473	1					
ANR	5848207	ArrayIndexing	dev -> sgr . adjusted [ 2 ]		5847473	0					
ANR	5848208	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848209	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848210	Identifier	dev		5847473	0					
ANR	5848211	Identifier	sgr		5847473	1					
ANR	5848212	Identifier	adjusted		5847473	1					
ANR	5848213	PrimaryExpression	2		5847473	1					
ANR	5848214	Identifier	x		5847473	1					
ANR	5848215	RelationalExpression	any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y ) <= any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y )		5847473	1		<=			
ANR	5848216	CallExpression	any_abs ( plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y )		5847473	0					
ANR	5848217	Callee	any_abs		5847473	0					
ANR	5848218	Identifier	any_abs		5847473	0					
ANR	5848219	ArgumentList	plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y		5847473	1					
ANR	5848220	Argument	plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y		5847473	0					
ANR	5848221	AdditiveExpression	plp -> e . p . y - dev -> sgr . adjusted [ 1 ] . y		5847473	0		-			
ANR	5848222	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5848223	MemberAccess	plp -> e . p		5847473	0					
ANR	5848224	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848225	Identifier	plp		5847473	0					
ANR	5848226	Identifier	e		5847473	1					
ANR	5848227	Identifier	p		5847473	1					
ANR	5848228	Identifier	y		5847473	1					
ANR	5848229	MemberAccess	dev -> sgr . adjusted [ 1 ] . y		5847473	1					
ANR	5848230	ArrayIndexing	dev -> sgr . adjusted [ 1 ]		5847473	0					
ANR	5848231	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848232	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848233	Identifier	dev		5847473	0					
ANR	5848234	Identifier	sgr		5847473	1					
ANR	5848235	Identifier	adjusted		5847473	1					
ANR	5848236	PrimaryExpression	1		5847473	1					
ANR	5848237	Identifier	y		5847473	1					
ANR	5848238	CallExpression	any_abs ( plp -> width . y + dev -> sgr . adjusted [ 2 ] . y )		5847473	1					
ANR	5848239	Callee	any_abs		5847473	0					
ANR	5848240	Identifier	any_abs		5847473	0					
ANR	5848241	ArgumentList	plp -> width . y + dev -> sgr . adjusted [ 2 ] . y		5847473	1					
ANR	5848242	Argument	plp -> width . y + dev -> sgr . adjusted [ 2 ] . y		5847473	0					
ANR	5848243	AdditiveExpression	plp -> width . y + dev -> sgr . adjusted [ 2 ] . y		5847473	0		+			
ANR	5848244	MemberAccess	plp -> width . y		5847473	0					
ANR	5848245	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848246	Identifier	plp		5847473	0					
ANR	5848247	Identifier	width		5847473	1					
ANR	5848248	Identifier	y		5847473	1					
ANR	5848249	MemberAccess	dev -> sgr . adjusted [ 2 ] . y		5847473	1					
ANR	5848250	ArrayIndexing	dev -> sgr . adjusted [ 2 ]		5847473	0					
ANR	5848251	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848252	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848253	Identifier	dev		5847473	0					
ANR	5848254	Identifier	sgr		5847473	1					
ANR	5848255	Identifier	adjusted		5847473	1					
ANR	5848256	PrimaryExpression	2		5847473	1					
ANR	5848257	Identifier	y		5847473	1					
ANR	5848258	CompoundStatement		52:24:3709:3772	5847473	1					
ANR	5848259	IdentifierDeclStatement	fixed delta_w_x = ( dev -> sgr . adjusted [ 2 ] . x - dev -> sgr . orig [ 2 ] . x ) ;	1283:24:53984:54047	5847473	0	True				
ANR	5848260	IdentifierDecl	delta_w_x = ( dev -> sgr . adjusted [ 2 ] . x - dev -> sgr . orig [ 2 ] . x )		5847473	0					
ANR	5848261	IdentifierDeclType	fixed		5847473	0					
ANR	5848262	Identifier	delta_w_x		5847473	1					
ANR	5848263	AssignmentExpression	delta_w_x = ( dev -> sgr . adjusted [ 2 ] . x - dev -> sgr . orig [ 2 ] . x )		5847473	2		=			
ANR	5848264	Identifier	delta_w_x		5847473	0					
ANR	5848265	AdditiveExpression	dev -> sgr . adjusted [ 2 ] . x - dev -> sgr . orig [ 2 ] . x		5847473	1		-			
ANR	5848266	MemberAccess	dev -> sgr . adjusted [ 2 ] . x		5847473	0					
ANR	5848267	ArrayIndexing	dev -> sgr . adjusted [ 2 ]		5847473	0					
ANR	5848268	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848269	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848270	Identifier	dev		5847473	0					
ANR	5848271	Identifier	sgr		5847473	1					
ANR	5848272	Identifier	adjusted		5847473	1					
ANR	5848273	PrimaryExpression	2		5847473	1					
ANR	5848274	Identifier	x		5847473	1					
ANR	5848275	MemberAccess	dev -> sgr . orig [ 2 ] . x		5847473	1					
ANR	5848276	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5848277	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848278	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848279	Identifier	dev		5847473	0					
ANR	5848280	Identifier	sgr		5847473	1					
ANR	5848281	Identifier	orig		5847473	1					
ANR	5848282	PrimaryExpression	2		5847473	1					
ANR	5848283	Identifier	x		5847473	1					
ANR	5848284	IdentifierDeclStatement	fixed delta_w_y = ( dev -> sgr . adjusted [ 2 ] . y - dev -> sgr . orig [ 2 ] . y ) ;	1284:24:54073:54136	5847473	1	True				
ANR	5848285	IdentifierDecl	delta_w_y = ( dev -> sgr . adjusted [ 2 ] . y - dev -> sgr . orig [ 2 ] . y )		5847473	0					
ANR	5848286	IdentifierDeclType	fixed		5847473	0					
ANR	5848287	Identifier	delta_w_y		5847473	1					
ANR	5848288	AssignmentExpression	delta_w_y = ( dev -> sgr . adjusted [ 2 ] . y - dev -> sgr . orig [ 2 ] . y )		5847473	2		=			
ANR	5848289	Identifier	delta_w_y		5847473	0					
ANR	5848290	AdditiveExpression	dev -> sgr . adjusted [ 2 ] . y - dev -> sgr . orig [ 2 ] . y		5847473	1		-			
ANR	5848291	MemberAccess	dev -> sgr . adjusted [ 2 ] . y		5847473	0					
ANR	5848292	ArrayIndexing	dev -> sgr . adjusted [ 2 ]		5847473	0					
ANR	5848293	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848294	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848295	Identifier	dev		5847473	0					
ANR	5848296	Identifier	sgr		5847473	1					
ANR	5848297	Identifier	adjusted		5847473	1					
ANR	5848298	PrimaryExpression	2		5847473	1					
ANR	5848299	Identifier	y		5847473	1					
ANR	5848300	MemberAccess	dev -> sgr . orig [ 2 ] . y		5847473	1					
ANR	5848301	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5848302	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848303	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848304	Identifier	dev		5847473	0					
ANR	5848305	Identifier	sgr		5847473	1					
ANR	5848306	Identifier	orig		5847473	1					
ANR	5848307	PrimaryExpression	2		5847473	1					
ANR	5848308	Identifier	y		5847473	1					
ANR	5848309	IdentifierDeclStatement	fixed shift_o_x = ( dev -> sgr . adjusted [ 0 ] . x - dev -> sgr . orig [ 0 ] . x ) ;	1285:24:54162:54225	5847473	2	True				
ANR	5848310	IdentifierDecl	shift_o_x = ( dev -> sgr . adjusted [ 0 ] . x - dev -> sgr . orig [ 0 ] . x )		5847473	0					
ANR	5848311	IdentifierDeclType	fixed		5847473	0					
ANR	5848312	Identifier	shift_o_x		5847473	1					
ANR	5848313	AssignmentExpression	shift_o_x = ( dev -> sgr . adjusted [ 0 ] . x - dev -> sgr . orig [ 0 ] . x )		5847473	2		=			
ANR	5848314	Identifier	shift_o_x		5847473	0					
ANR	5848315	AdditiveExpression	dev -> sgr . adjusted [ 0 ] . x - dev -> sgr . orig [ 0 ] . x		5847473	1		-			
ANR	5848316	MemberAccess	dev -> sgr . adjusted [ 0 ] . x		5847473	0					
ANR	5848317	ArrayIndexing	dev -> sgr . adjusted [ 0 ]		5847473	0					
ANR	5848318	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848319	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848320	Identifier	dev		5847473	0					
ANR	5848321	Identifier	sgr		5847473	1					
ANR	5848322	Identifier	adjusted		5847473	1					
ANR	5848323	PrimaryExpression	0		5847473	1					
ANR	5848324	Identifier	x		5847473	1					
ANR	5848325	MemberAccess	dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5848326	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5848327	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848328	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848329	Identifier	dev		5847473	0					
ANR	5848330	Identifier	sgr		5847473	1					
ANR	5848331	Identifier	orig		5847473	1					
ANR	5848332	PrimaryExpression	0		5847473	1					
ANR	5848333	Identifier	x		5847473	1					
ANR	5848334	IdentifierDeclStatement	fixed shift_o_y = ( dev -> sgr . adjusted [ 0 ] . y - dev -> sgr . orig [ 0 ] . y ) ;	1286:24:54251:54314	5847473	3	True				
ANR	5848335	IdentifierDecl	shift_o_y = ( dev -> sgr . adjusted [ 0 ] . y - dev -> sgr . orig [ 0 ] . y )		5847473	0					
ANR	5848336	IdentifierDeclType	fixed		5847473	0					
ANR	5848337	Identifier	shift_o_y		5847473	1					
ANR	5848338	AssignmentExpression	shift_o_y = ( dev -> sgr . adjusted [ 0 ] . y - dev -> sgr . orig [ 0 ] . y )		5847473	2		=			
ANR	5848339	Identifier	shift_o_y		5847473	0					
ANR	5848340	AdditiveExpression	dev -> sgr . adjusted [ 0 ] . y - dev -> sgr . orig [ 0 ] . y		5847473	1		-			
ANR	5848341	MemberAccess	dev -> sgr . adjusted [ 0 ] . y		5847473	0					
ANR	5848342	ArrayIndexing	dev -> sgr . adjusted [ 0 ]		5847473	0					
ANR	5848343	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848344	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848345	Identifier	dev		5847473	0					
ANR	5848346	Identifier	sgr		5847473	1					
ANR	5848347	Identifier	adjusted		5847473	1					
ANR	5848348	PrimaryExpression	0		5847473	1					
ANR	5848349	Identifier	y		5847473	1					
ANR	5848350	MemberAccess	dev -> sgr . orig [ 0 ] . y		5847473	1					
ANR	5848351	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5848352	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848353	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848354	Identifier	dev		5847473	0					
ANR	5848355	Identifier	sgr		5847473	1					
ANR	5848356	Identifier	orig		5847473	1					
ANR	5848357	PrimaryExpression	0		5847473	1					
ANR	5848358	Identifier	y		5847473	1					
ANR	5848359	IdentifierDeclStatement	fixed shift_e_x = ( dev -> sgr . adjusted [ 1 ] . x - dev -> sgr . orig [ 1 ] . x ) ;	1287:24:54340:54403	5847473	4	True				
ANR	5848360	IdentifierDecl	shift_e_x = ( dev -> sgr . adjusted [ 1 ] . x - dev -> sgr . orig [ 1 ] . x )		5847473	0					
ANR	5848361	IdentifierDeclType	fixed		5847473	0					
ANR	5848362	Identifier	shift_e_x		5847473	1					
ANR	5848363	AssignmentExpression	shift_e_x = ( dev -> sgr . adjusted [ 1 ] . x - dev -> sgr . orig [ 1 ] . x )		5847473	2		=			
ANR	5848364	Identifier	shift_e_x		5847473	0					
ANR	5848365	AdditiveExpression	dev -> sgr . adjusted [ 1 ] . x - dev -> sgr . orig [ 1 ] . x		5847473	1		-			
ANR	5848366	MemberAccess	dev -> sgr . adjusted [ 1 ] . x		5847473	0					
ANR	5848367	ArrayIndexing	dev -> sgr . adjusted [ 1 ]		5847473	0					
ANR	5848368	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848369	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848370	Identifier	dev		5847473	0					
ANR	5848371	Identifier	sgr		5847473	1					
ANR	5848372	Identifier	adjusted		5847473	1					
ANR	5848373	PrimaryExpression	1		5847473	1					
ANR	5848374	Identifier	x		5847473	1					
ANR	5848375	MemberAccess	dev -> sgr . orig [ 1 ] . x		5847473	1					
ANR	5848376	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5848377	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848378	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848379	Identifier	dev		5847473	0					
ANR	5848380	Identifier	sgr		5847473	1					
ANR	5848381	Identifier	orig		5847473	1					
ANR	5848382	PrimaryExpression	1		5847473	1					
ANR	5848383	Identifier	x		5847473	1					
ANR	5848384	IdentifierDeclStatement	fixed shift_e_y = ( dev -> sgr . adjusted [ 1 ] . y - dev -> sgr . orig [ 1 ] . y ) ;	1288:24:54472:54535	5847473	5	True				
ANR	5848385	IdentifierDecl	shift_e_y = ( dev -> sgr . adjusted [ 1 ] . y - dev -> sgr . orig [ 1 ] . y )		5847473	0					
ANR	5848386	IdentifierDeclType	fixed		5847473	0					
ANR	5848387	Identifier	shift_e_y		5847473	1					
ANR	5848388	AssignmentExpression	shift_e_y = ( dev -> sgr . adjusted [ 1 ] . y - dev -> sgr . orig [ 1 ] . y )		5847473	2		=			
ANR	5848389	Identifier	shift_e_y		5847473	0					
ANR	5848390	AdditiveExpression	dev -> sgr . adjusted [ 1 ] . y - dev -> sgr . orig [ 1 ] . y		5847473	1		-			
ANR	5848391	MemberAccess	dev -> sgr . adjusted [ 1 ] . y		5847473	0					
ANR	5848392	ArrayIndexing	dev -> sgr . adjusted [ 1 ]		5847473	0					
ANR	5848393	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848394	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848395	Identifier	dev		5847473	0					
ANR	5848396	Identifier	sgr		5847473	1					
ANR	5848397	Identifier	adjusted		5847473	1					
ANR	5848398	PrimaryExpression	1		5847473	1					
ANR	5848399	Identifier	y		5847473	1					
ANR	5848400	MemberAccess	dev -> sgr . orig [ 1 ] . y		5847473	1					
ANR	5848401	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5848402	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848403	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848404	Identifier	dev		5847473	0					
ANR	5848405	Identifier	sgr		5847473	1					
ANR	5848406	Identifier	orig		5847473	1					
ANR	5848407	PrimaryExpression	1		5847473	1					
ANR	5848408	Identifier	y		5847473	1					
ANR	5848409	IfStatement	if ( plp -> o . p . x < dev -> sgr . orig [ 0 ] . x || ( plp -> o . p . x == dev -> sgr . orig [ 0 ] . x && plp -> o . p . y < dev -> sgr . orig [ 0 ] . y ) )		5847473	6					
ANR	5848410	Condition	plp -> o . p . x < dev -> sgr . orig [ 0 ] . x || ( plp -> o . p . x == dev -> sgr . orig [ 0 ] . x && plp -> o . p . y < dev -> sgr . orig [ 0 ] . y )	1290:28:54566:54697	5847473	0	True				
ANR	5848411	OrExpression	plp -> o . p . x < dev -> sgr . orig [ 0 ] . x || ( plp -> o . p . x == dev -> sgr . orig [ 0 ] . x && plp -> o . p . y < dev -> sgr . orig [ 0 ] . y )		5847473	0		||			
ANR	5848412	RelationalExpression	plp -> o . p . x < dev -> sgr . orig [ 0 ] . x		5847473	0		<			
ANR	5848413	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5848414	MemberAccess	plp -> o . p		5847473	0					
ANR	5848415	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848416	Identifier	plp		5847473	0					
ANR	5848417	Identifier	o		5847473	1					
ANR	5848418	Identifier	p		5847473	1					
ANR	5848419	Identifier	x		5847473	1					
ANR	5848420	MemberAccess	dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5848421	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5848422	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848423	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848424	Identifier	dev		5847473	0					
ANR	5848425	Identifier	sgr		5847473	1					
ANR	5848426	Identifier	orig		5847473	1					
ANR	5848427	PrimaryExpression	0		5847473	1					
ANR	5848428	Identifier	x		5847473	1					
ANR	5848429	AndExpression	plp -> o . p . x == dev -> sgr . orig [ 0 ] . x && plp -> o . p . y < dev -> sgr . orig [ 0 ] . y		5847473	1		&&			
ANR	5848430	EqualityExpression	plp -> o . p . x == dev -> sgr . orig [ 0 ] . x		5847473	0		==			
ANR	5848431	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5848432	MemberAccess	plp -> o . p		5847473	0					
ANR	5848433	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848434	Identifier	plp		5847473	0					
ANR	5848435	Identifier	o		5847473	1					
ANR	5848436	Identifier	p		5847473	1					
ANR	5848437	Identifier	x		5847473	1					
ANR	5848438	MemberAccess	dev -> sgr . orig [ 0 ] . x		5847473	1					
ANR	5848439	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5848440	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848441	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848442	Identifier	dev		5847473	0					
ANR	5848443	Identifier	sgr		5847473	1					
ANR	5848444	Identifier	orig		5847473	1					
ANR	5848445	PrimaryExpression	0		5847473	1					
ANR	5848446	Identifier	x		5847473	1					
ANR	5848447	RelationalExpression	plp -> o . p . y < dev -> sgr . orig [ 0 ] . y		5847473	1		<			
ANR	5848448	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5848449	MemberAccess	plp -> o . p		5847473	0					
ANR	5848450	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848451	Identifier	plp		5847473	0					
ANR	5848452	Identifier	o		5847473	1					
ANR	5848453	Identifier	p		5847473	1					
ANR	5848454	Identifier	y		5847473	1					
ANR	5848455	MemberAccess	dev -> sgr . orig [ 0 ] . y		5847473	1					
ANR	5848456	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5848457	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848458	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848459	Identifier	dev		5847473	0					
ANR	5848460	Identifier	sgr		5847473	1					
ANR	5848461	Identifier	orig		5847473	1					
ANR	5848462	PrimaryExpression	0		5847473	1					
ANR	5848463	Identifier	y		5847473	1					
ANR	5848464	CompoundStatement		55:99:3937:3937	5847473	1					
ANR	5848465	ExpressionStatement	"if_debug4m ( 'O' , dev -> memory , ""[O]don't adjust {{%f,%f},{%f,%f}}\\n"" , fixed2float ( plp -> o . p . x ) , fixed2float ( plp -> o . p . y ) , fixed2float ( plp -> e . p . x ) , fixed2float ( plp -> e . p . y ) )"	1293:28:54806:55051	5847473	0	True				
ANR	5848466	CallExpression	"if_debug4m ( 'O' , dev -> memory , ""[O]don't adjust {{%f,%f},{%f,%f}}\\n"" , fixed2float ( plp -> o . p . x ) , fixed2float ( plp -> o . p . y ) , fixed2float ( plp -> e . p . x ) , fixed2float ( plp -> e . p . y ) )"		5847473	0					
ANR	5848467	Callee	if_debug4m		5847473	0					
ANR	5848468	Identifier	if_debug4m		5847473	0					
ANR	5848469	ArgumentList	'O'		5847473	1					
ANR	5848470	Argument	'O'		5847473	0					
ANR	5848471	PrimaryExpression	'O'		5847473	0					
ANR	5848472	Argument	dev -> memory		5847473	1					
ANR	5848473	PtrMemberAccess	dev -> memory		5847473	0					
ANR	5848474	Identifier	dev		5847473	0					
ANR	5848475	Identifier	memory		5847473	1					
ANR	5848476	Argument	"""[O]don't adjust {{%f,%f},{%f,%f}}\\n"""		5847473	2					
ANR	5848477	PrimaryExpression	"""[O]don't adjust {{%f,%f},{%f,%f}}\\n"""		5847473	0					
ANR	5848478	Argument	fixed2float ( plp -> o . p . x )		5847473	3					
ANR	5848479	CallExpression	fixed2float ( plp -> o . p . x )		5847473	0					
ANR	5848480	Callee	fixed2float		5847473	0					
ANR	5848481	Identifier	fixed2float		5847473	0					
ANR	5848482	ArgumentList	plp -> o . p . x		5847473	1					
ANR	5848483	Argument	plp -> o . p . x		5847473	0					
ANR	5848484	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5848485	MemberAccess	plp -> o . p		5847473	0					
ANR	5848486	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848487	Identifier	plp		5847473	0					
ANR	5848488	Identifier	o		5847473	1					
ANR	5848489	Identifier	p		5847473	1					
ANR	5848490	Identifier	x		5847473	1					
ANR	5848491	Argument	fixed2float ( plp -> o . p . y )		5847473	4					
ANR	5848492	CallExpression	fixed2float ( plp -> o . p . y )		5847473	0					
ANR	5848493	Callee	fixed2float		5847473	0					
ANR	5848494	Identifier	fixed2float		5847473	0					
ANR	5848495	ArgumentList	plp -> o . p . y		5847473	1					
ANR	5848496	Argument	plp -> o . p . y		5847473	0					
ANR	5848497	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5848498	MemberAccess	plp -> o . p		5847473	0					
ANR	5848499	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848500	Identifier	plp		5847473	0					
ANR	5848501	Identifier	o		5847473	1					
ANR	5848502	Identifier	p		5847473	1					
ANR	5848503	Identifier	y		5847473	1					
ANR	5848504	Argument	fixed2float ( plp -> e . p . x )		5847473	5					
ANR	5848505	CallExpression	fixed2float ( plp -> e . p . x )		5847473	0					
ANR	5848506	Callee	fixed2float		5847473	0					
ANR	5848507	Identifier	fixed2float		5847473	0					
ANR	5848508	ArgumentList	plp -> e . p . x		5847473	1					
ANR	5848509	Argument	plp -> e . p . x		5847473	0					
ANR	5848510	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5848511	MemberAccess	plp -> e . p		5847473	0					
ANR	5848512	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848513	Identifier	plp		5847473	0					
ANR	5848514	Identifier	e		5847473	1					
ANR	5848515	Identifier	p		5847473	1					
ANR	5848516	Identifier	x		5847473	1					
ANR	5848517	Argument	fixed2float ( plp -> e . p . y )		5847473	6					
ANR	5848518	CallExpression	fixed2float ( plp -> e . p . y )		5847473	0					
ANR	5848519	Callee	fixed2float		5847473	0					
ANR	5848520	Identifier	fixed2float		5847473	0					
ANR	5848521	ArgumentList	plp -> e . p . y		5847473	1					
ANR	5848522	Argument	plp -> e . p . y		5847473	0					
ANR	5848523	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5848524	MemberAccess	plp -> e . p		5847473	0					
ANR	5848525	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848526	Identifier	plp		5847473	0					
ANR	5848527	Identifier	e		5847473	1					
ANR	5848528	Identifier	p		5847473	1					
ANR	5848529	Identifier	y		5847473	1					
ANR	5848530	ExpressionStatement	plp -> width . x += ( shift_o_x - delta_w_x ) / 2	1296:28:55081:55124	5847473	1	True				
ANR	5848531	AssignmentExpression	plp -> width . x += ( shift_o_x - delta_w_x ) / 2		5847473	0		+=			
ANR	5848532	MemberAccess	plp -> width . x		5847473	0					
ANR	5848533	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848534	Identifier	plp		5847473	0					
ANR	5848535	Identifier	width		5847473	1					
ANR	5848536	Identifier	x		5847473	1					
ANR	5848537	MultiplicativeExpression	( shift_o_x - delta_w_x ) / 2		5847473	1		/			
ANR	5848538	AdditiveExpression	shift_o_x - delta_w_x		5847473	0		-			
ANR	5848539	Identifier	shift_o_x		5847473	0					
ANR	5848540	Identifier	delta_w_x		5847473	1					
ANR	5848541	PrimaryExpression	2		5847473	1					
ANR	5848542	ExpressionStatement	plp -> width . y += ( shift_o_y - delta_w_y ) / 2	1297:28:55154:55197	5847473	2	True				
ANR	5848543	AssignmentExpression	plp -> width . y += ( shift_o_y - delta_w_y ) / 2		5847473	0		+=			
ANR	5848544	MemberAccess	plp -> width . y		5847473	0					
ANR	5848545	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848546	Identifier	plp		5847473	0					
ANR	5848547	Identifier	width		5847473	1					
ANR	5848548	Identifier	y		5847473	1					
ANR	5848549	MultiplicativeExpression	( shift_o_y - delta_w_y ) / 2		5847473	1		/			
ANR	5848550	AdditiveExpression	shift_o_y - delta_w_y		5847473	0		-			
ANR	5848551	Identifier	shift_o_y		5847473	0					
ANR	5848552	Identifier	delta_w_y		5847473	1					
ANR	5848553	PrimaryExpression	2		5847473	1					
ANR	5848554	ExpressionStatement	plp -> o . p . x += ( shift_o_x - delta_w_x ) / 2	1298:28:55227:55268	5847473	3	True				
ANR	5848555	AssignmentExpression	plp -> o . p . x += ( shift_o_x - delta_w_x ) / 2		5847473	0		+=			
ANR	5848556	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5848557	MemberAccess	plp -> o . p		5847473	0					
ANR	5848558	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848559	Identifier	plp		5847473	0					
ANR	5848560	Identifier	o		5847473	1					
ANR	5848561	Identifier	p		5847473	1					
ANR	5848562	Identifier	x		5847473	1					
ANR	5848563	MultiplicativeExpression	( shift_o_x - delta_w_x ) / 2		5847473	1		/			
ANR	5848564	AdditiveExpression	shift_o_x - delta_w_x		5847473	0		-			
ANR	5848565	Identifier	shift_o_x		5847473	0					
ANR	5848566	Identifier	delta_w_x		5847473	1					
ANR	5848567	PrimaryExpression	2		5847473	1					
ANR	5848568	ExpressionStatement	plp -> o . p . y += ( shift_o_y - delta_w_y ) / 2	1299:28:55298:55339	5847473	4	True				
ANR	5848569	AssignmentExpression	plp -> o . p . y += ( shift_o_y - delta_w_y ) / 2		5847473	0		+=			
ANR	5848570	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5848571	MemberAccess	plp -> o . p		5847473	0					
ANR	5848572	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848573	Identifier	plp		5847473	0					
ANR	5848574	Identifier	o		5847473	1					
ANR	5848575	Identifier	p		5847473	1					
ANR	5848576	Identifier	y		5847473	1					
ANR	5848577	MultiplicativeExpression	( shift_o_y - delta_w_y ) / 2		5847473	1		/			
ANR	5848578	AdditiveExpression	shift_o_y - delta_w_y		5847473	0		-			
ANR	5848579	Identifier	shift_o_y		5847473	0					
ANR	5848580	Identifier	delta_w_y		5847473	1					
ANR	5848581	PrimaryExpression	2		5847473	1					
ANR	5848582	ExpressionStatement	plp -> e . p . x += ( shift_e_x - delta_w_x ) / 2	1300:28:55369:55410	5847473	5	True				
ANR	5848583	AssignmentExpression	plp -> e . p . x += ( shift_e_x - delta_w_x ) / 2		5847473	0		+=			
ANR	5848584	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5848585	MemberAccess	plp -> e . p		5847473	0					
ANR	5848586	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848587	Identifier	plp		5847473	0					
ANR	5848588	Identifier	e		5847473	1					
ANR	5848589	Identifier	p		5847473	1					
ANR	5848590	Identifier	x		5847473	1					
ANR	5848591	MultiplicativeExpression	( shift_e_x - delta_w_x ) / 2		5847473	1		/			
ANR	5848592	AdditiveExpression	shift_e_x - delta_w_x		5847473	0		-			
ANR	5848593	Identifier	shift_e_x		5847473	0					
ANR	5848594	Identifier	delta_w_x		5847473	1					
ANR	5848595	PrimaryExpression	2		5847473	1					
ANR	5848596	ExpressionStatement	plp -> e . p . y += ( shift_e_y - delta_w_y ) / 2	1301:28:55440:55481	5847473	6	True				
ANR	5848597	AssignmentExpression	plp -> e . p . y += ( shift_e_y - delta_w_y ) / 2		5847473	0		+=			
ANR	5848598	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5848599	MemberAccess	plp -> e . p		5847473	0					
ANR	5848600	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848601	Identifier	plp		5847473	0					
ANR	5848602	Identifier	e		5847473	1					
ANR	5848603	Identifier	p		5847473	1					
ANR	5848604	Identifier	y		5847473	1					
ANR	5848605	MultiplicativeExpression	( shift_e_y - delta_w_y ) / 2		5847473	1		/			
ANR	5848606	AdditiveExpression	shift_e_y - delta_w_y		5847473	0		-			
ANR	5848607	Identifier	shift_e_y		5847473	0					
ANR	5848608	Identifier	delta_w_y		5847473	1					
ANR	5848609	PrimaryExpression	2		5847473	1					
ANR	5848610	ExpressionStatement	adjust = false	1302:28:55511:55525	5847473	7	True				
ANR	5848611	AssignmentExpression	adjust = false		5847473	0		=			
ANR	5848612	Identifier	adjust		5847473	0					
ANR	5848613	Identifier	false		5847473	1					
ANR	5848614	ElseStatement	else		5847473	0					
ANR	5848615	CompoundStatement		67:31:4795:4795	5847473	0					
ANR	5848616	ExpressionStatement	"if_debug4m ( 'O' , dev -> memory , ""[O]don't adjust {{%f,%f},{%f,%f}}\\n"" , fixed2float ( plp -> o . p . x ) , fixed2float ( plp -> o . p . y ) , fixed2float ( plp -> e . p . x ) , fixed2float ( plp -> e . p . y ) )"	1305:28:55665:55910	5847473	0	True				
ANR	5848617	CallExpression	"if_debug4m ( 'O' , dev -> memory , ""[O]don't adjust {{%f,%f},{%f,%f}}\\n"" , fixed2float ( plp -> o . p . x ) , fixed2float ( plp -> o . p . y ) , fixed2float ( plp -> e . p . x ) , fixed2float ( plp -> e . p . y ) )"		5847473	0					
ANR	5848618	Callee	if_debug4m		5847473	0					
ANR	5848619	Identifier	if_debug4m		5847473	0					
ANR	5848620	ArgumentList	'O'		5847473	1					
ANR	5848621	Argument	'O'		5847473	0					
ANR	5848622	PrimaryExpression	'O'		5847473	0					
ANR	5848623	Argument	dev -> memory		5847473	1					
ANR	5848624	PtrMemberAccess	dev -> memory		5847473	0					
ANR	5848625	Identifier	dev		5847473	0					
ANR	5848626	Identifier	memory		5847473	1					
ANR	5848627	Argument	"""[O]don't adjust {{%f,%f},{%f,%f}}\\n"""		5847473	2					
ANR	5848628	PrimaryExpression	"""[O]don't adjust {{%f,%f},{%f,%f}}\\n"""		5847473	0					
ANR	5848629	Argument	fixed2float ( plp -> o . p . x )		5847473	3					
ANR	5848630	CallExpression	fixed2float ( plp -> o . p . x )		5847473	0					
ANR	5848631	Callee	fixed2float		5847473	0					
ANR	5848632	Identifier	fixed2float		5847473	0					
ANR	5848633	ArgumentList	plp -> o . p . x		5847473	1					
ANR	5848634	Argument	plp -> o . p . x		5847473	0					
ANR	5848635	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5848636	MemberAccess	plp -> o . p		5847473	0					
ANR	5848637	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848638	Identifier	plp		5847473	0					
ANR	5848639	Identifier	o		5847473	1					
ANR	5848640	Identifier	p		5847473	1					
ANR	5848641	Identifier	x		5847473	1					
ANR	5848642	Argument	fixed2float ( plp -> o . p . y )		5847473	4					
ANR	5848643	CallExpression	fixed2float ( plp -> o . p . y )		5847473	0					
ANR	5848644	Callee	fixed2float		5847473	0					
ANR	5848645	Identifier	fixed2float		5847473	0					
ANR	5848646	ArgumentList	plp -> o . p . y		5847473	1					
ANR	5848647	Argument	plp -> o . p . y		5847473	0					
ANR	5848648	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5848649	MemberAccess	plp -> o . p		5847473	0					
ANR	5848650	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848651	Identifier	plp		5847473	0					
ANR	5848652	Identifier	o		5847473	1					
ANR	5848653	Identifier	p		5847473	1					
ANR	5848654	Identifier	y		5847473	1					
ANR	5848655	Argument	fixed2float ( plp -> e . p . x )		5847473	5					
ANR	5848656	CallExpression	fixed2float ( plp -> e . p . x )		5847473	0					
ANR	5848657	Callee	fixed2float		5847473	0					
ANR	5848658	Identifier	fixed2float		5847473	0					
ANR	5848659	ArgumentList	plp -> e . p . x		5847473	1					
ANR	5848660	Argument	plp -> e . p . x		5847473	0					
ANR	5848661	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5848662	MemberAccess	plp -> e . p		5847473	0					
ANR	5848663	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848664	Identifier	plp		5847473	0					
ANR	5848665	Identifier	e		5847473	1					
ANR	5848666	Identifier	p		5847473	1					
ANR	5848667	Identifier	x		5847473	1					
ANR	5848668	Argument	fixed2float ( plp -> e . p . y )		5847473	6					
ANR	5848669	CallExpression	fixed2float ( plp -> e . p . y )		5847473	0					
ANR	5848670	Callee	fixed2float		5847473	0					
ANR	5848671	Identifier	fixed2float		5847473	0					
ANR	5848672	ArgumentList	plp -> e . p . y		5847473	1					
ANR	5848673	Argument	plp -> e . p . y		5847473	0					
ANR	5848674	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5848675	MemberAccess	plp -> e . p		5847473	0					
ANR	5848676	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848677	Identifier	plp		5847473	0					
ANR	5848678	Identifier	e		5847473	1					
ANR	5848679	Identifier	p		5847473	1					
ANR	5848680	Identifier	y		5847473	1					
ANR	5848681	ExpressionStatement	plp -> width . x -= ( shift_o_x + delta_w_x ) / 2	1308:28:55940:55983	5847473	1	True				
ANR	5848682	AssignmentExpression	plp -> width . x -= ( shift_o_x + delta_w_x ) / 2		5847473	0		-=			
ANR	5848683	MemberAccess	plp -> width . x		5847473	0					
ANR	5848684	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848685	Identifier	plp		5847473	0					
ANR	5848686	Identifier	width		5847473	1					
ANR	5848687	Identifier	x		5847473	1					
ANR	5848688	MultiplicativeExpression	( shift_o_x + delta_w_x ) / 2		5847473	1		/			
ANR	5848689	AdditiveExpression	shift_o_x + delta_w_x		5847473	0		+			
ANR	5848690	Identifier	shift_o_x		5847473	0					
ANR	5848691	Identifier	delta_w_x		5847473	1					
ANR	5848692	PrimaryExpression	2		5847473	1					
ANR	5848693	ExpressionStatement	plp -> width . y -= ( shift_o_y + delta_w_y ) / 2	1309:28:56013:56056	5847473	2	True				
ANR	5848694	AssignmentExpression	plp -> width . y -= ( shift_o_y + delta_w_y ) / 2		5847473	0		-=			
ANR	5848695	MemberAccess	plp -> width . y		5847473	0					
ANR	5848696	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848697	Identifier	plp		5847473	0					
ANR	5848698	Identifier	width		5847473	1					
ANR	5848699	Identifier	y		5847473	1					
ANR	5848700	MultiplicativeExpression	( shift_o_y + delta_w_y ) / 2		5847473	1		/			
ANR	5848701	AdditiveExpression	shift_o_y + delta_w_y		5847473	0		+			
ANR	5848702	Identifier	shift_o_y		5847473	0					
ANR	5848703	Identifier	delta_w_y		5847473	1					
ANR	5848704	PrimaryExpression	2		5847473	1					
ANR	5848705	ExpressionStatement	plp -> o . p . x += ( shift_o_x + delta_w_x ) / 2	1310:28:56086:56127	5847473	3	True				
ANR	5848706	AssignmentExpression	plp -> o . p . x += ( shift_o_x + delta_w_x ) / 2		5847473	0		+=			
ANR	5848707	MemberAccess	plp -> o . p . x		5847473	0					
ANR	5848708	MemberAccess	plp -> o . p		5847473	0					
ANR	5848709	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848710	Identifier	plp		5847473	0					
ANR	5848711	Identifier	o		5847473	1					
ANR	5848712	Identifier	p		5847473	1					
ANR	5848713	Identifier	x		5847473	1					
ANR	5848714	MultiplicativeExpression	( shift_o_x + delta_w_x ) / 2		5847473	1		/			
ANR	5848715	AdditiveExpression	shift_o_x + delta_w_x		5847473	0		+			
ANR	5848716	Identifier	shift_o_x		5847473	0					
ANR	5848717	Identifier	delta_w_x		5847473	1					
ANR	5848718	PrimaryExpression	2		5847473	1					
ANR	5848719	ExpressionStatement	plp -> o . p . y += ( shift_o_y + delta_w_y ) / 2	1311:28:56157:56198	5847473	4	True				
ANR	5848720	AssignmentExpression	plp -> o . p . y += ( shift_o_y + delta_w_y ) / 2		5847473	0		+=			
ANR	5848721	MemberAccess	plp -> o . p . y		5847473	0					
ANR	5848722	MemberAccess	plp -> o . p		5847473	0					
ANR	5848723	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848724	Identifier	plp		5847473	0					
ANR	5848725	Identifier	o		5847473	1					
ANR	5848726	Identifier	p		5847473	1					
ANR	5848727	Identifier	y		5847473	1					
ANR	5848728	MultiplicativeExpression	( shift_o_y + delta_w_y ) / 2		5847473	1		/			
ANR	5848729	AdditiveExpression	shift_o_y + delta_w_y		5847473	0		+			
ANR	5848730	Identifier	shift_o_y		5847473	0					
ANR	5848731	Identifier	delta_w_y		5847473	1					
ANR	5848732	PrimaryExpression	2		5847473	1					
ANR	5848733	ExpressionStatement	plp -> e . p . x += ( shift_e_x + delta_w_x ) / 2	1312:28:56228:56269	5847473	5	True				
ANR	5848734	AssignmentExpression	plp -> e . p . x += ( shift_e_x + delta_w_x ) / 2		5847473	0		+=			
ANR	5848735	MemberAccess	plp -> e . p . x		5847473	0					
ANR	5848736	MemberAccess	plp -> e . p		5847473	0					
ANR	5848737	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848738	Identifier	plp		5847473	0					
ANR	5848739	Identifier	e		5847473	1					
ANR	5848740	Identifier	p		5847473	1					
ANR	5848741	Identifier	x		5847473	1					
ANR	5848742	MultiplicativeExpression	( shift_e_x + delta_w_x ) / 2		5847473	1		/			
ANR	5848743	AdditiveExpression	shift_e_x + delta_w_x		5847473	0		+			
ANR	5848744	Identifier	shift_e_x		5847473	0					
ANR	5848745	Identifier	delta_w_x		5847473	1					
ANR	5848746	PrimaryExpression	2		5847473	1					
ANR	5848747	ExpressionStatement	plp -> e . p . y += ( shift_e_y + delta_w_y ) / 2	1313:28:56299:56340	5847473	6	True				
ANR	5848748	AssignmentExpression	plp -> e . p . y += ( shift_e_y + delta_w_y ) / 2		5847473	0		+=			
ANR	5848749	MemberAccess	plp -> e . p . y		5847473	0					
ANR	5848750	MemberAccess	plp -> e . p		5847473	0					
ANR	5848751	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848752	Identifier	plp		5847473	0					
ANR	5848753	Identifier	e		5847473	1					
ANR	5848754	Identifier	p		5847473	1					
ANR	5848755	Identifier	y		5847473	1					
ANR	5848756	MultiplicativeExpression	( shift_e_y + delta_w_y ) / 2		5847473	1		/			
ANR	5848757	AdditiveExpression	shift_e_y + delta_w_y		5847473	0		+			
ANR	5848758	Identifier	shift_e_y		5847473	0					
ANR	5848759	Identifier	delta_w_y		5847473	1					
ANR	5848760	PrimaryExpression	2		5847473	1					
ANR	5848761	ExpressionStatement	adjust = false	1314:28:56370:56384	5847473	7	True				
ANR	5848762	AssignmentExpression	adjust = false		5847473	0		=			
ANR	5848763	Identifier	adjust		5847473	0					
ANR	5848764	Identifier	false		5847473	1					
ANR	5848765	IfStatement	if ( ( start_cap == gs_cap_butt ) || ( end_cap == gs_cap_butt ) )		5847473	5					
ANR	5848766	Condition	( start_cap == gs_cap_butt ) || ( end_cap == gs_cap_butt )	1321:8:56490:56543	5847473	0	True				
ANR	5848767	OrExpression	( start_cap == gs_cap_butt ) || ( end_cap == gs_cap_butt )		5847473	0		||			
ANR	5848768	EqualityExpression	start_cap == gs_cap_butt		5847473	0		==			
ANR	5848769	Identifier	start_cap		5847473	0					
ANR	5848770	Identifier	gs_cap_butt		5847473	1					
ANR	5848771	EqualityExpression	end_cap == gs_cap_butt		5847473	1		==			
ANR	5848772	Identifier	end_cap		5847473	0					
ANR	5848773	Identifier	gs_cap_butt		5847473	1					
ANR	5848774	CompoundStatement		85:64:5783:5783	5847473	1					
ANR	5848775	ExpressionStatement	dev -> sgr . stroke_stored = true	1322:8:56556:56585	5847473	0	True				
ANR	5848776	AssignmentExpression	dev -> sgr . stroke_stored = true		5847473	0		=			
ANR	5848777	MemberAccess	dev -> sgr . stroke_stored		5847473	0					
ANR	5848778	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848779	Identifier	dev		5847473	0					
ANR	5848780	Identifier	sgr		5847473	1					
ANR	5848781	Identifier	stroke_stored		5847473	1					
ANR	5848782	Identifier	true		5847473	1					
ANR	5848783	ExpressionStatement	dev -> sgr . orig [ 0 ] = plp -> o . p	1323:8:56595:56622	5847473	1	True				
ANR	5848784	AssignmentExpression	dev -> sgr . orig [ 0 ] = plp -> o . p		5847473	0		=			
ANR	5848785	ArrayIndexing	dev -> sgr . orig [ 0 ]		5847473	0					
ANR	5848786	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848787	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848788	Identifier	dev		5847473	0					
ANR	5848789	Identifier	sgr		5847473	1					
ANR	5848790	Identifier	orig		5847473	1					
ANR	5848791	PrimaryExpression	0		5847473	1					
ANR	5848792	MemberAccess	plp -> o . p		5847473	1					
ANR	5848793	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848794	Identifier	plp		5847473	0					
ANR	5848795	Identifier	o		5847473	1					
ANR	5848796	Identifier	p		5847473	1					
ANR	5848797	ExpressionStatement	dev -> sgr . orig [ 1 ] = plp -> e . p	1324:8:56632:56659	5847473	2	True				
ANR	5848798	AssignmentExpression	dev -> sgr . orig [ 1 ] = plp -> e . p		5847473	0		=			
ANR	5848799	ArrayIndexing	dev -> sgr . orig [ 1 ]		5847473	0					
ANR	5848800	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848801	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848802	Identifier	dev		5847473	0					
ANR	5848803	Identifier	sgr		5847473	1					
ANR	5848804	Identifier	orig		5847473	1					
ANR	5848805	PrimaryExpression	1		5847473	1					
ANR	5848806	MemberAccess	plp -> e . p		5847473	1					
ANR	5848807	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848808	Identifier	plp		5847473	0					
ANR	5848809	Identifier	e		5847473	1					
ANR	5848810	Identifier	p		5847473	1					
ANR	5848811	ExpressionStatement	dev -> sgr . orig [ 2 ] = plp -> width	1325:8:56669:56698	5847473	3	True				
ANR	5848812	AssignmentExpression	dev -> sgr . orig [ 2 ] = plp -> width		5847473	0		=			
ANR	5848813	ArrayIndexing	dev -> sgr . orig [ 2 ]		5847473	0					
ANR	5848814	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848815	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848816	Identifier	dev		5847473	0					
ANR	5848817	Identifier	sgr		5847473	1					
ANR	5848818	Identifier	orig		5847473	1					
ANR	5848819	PrimaryExpression	2		5847473	1					
ANR	5848820	PtrMemberAccess	plp -> width		5847473	1					
ANR	5848821	Identifier	plp		5847473	0					
ANR	5848822	Identifier	width		5847473	1					
ANR	5848823	ExpressionStatement	dev -> sgr . orig [ 3 ] = plp -> vector	1326:8:56708:56738	5847473	4	True				
ANR	5848824	AssignmentExpression	dev -> sgr . orig [ 3 ] = plp -> vector		5847473	0		=			
ANR	5848825	ArrayIndexing	dev -> sgr . orig [ 3 ]		5847473	0					
ANR	5848826	MemberAccess	dev -> sgr . orig		5847473	0					
ANR	5848827	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848828	Identifier	dev		5847473	0					
ANR	5848829	Identifier	sgr		5847473	1					
ANR	5848830	Identifier	orig		5847473	1					
ANR	5848831	PrimaryExpression	3		5847473	1					
ANR	5848832	PtrMemberAccess	plp -> vector		5847473	1					
ANR	5848833	Identifier	plp		5847473	0					
ANR	5848834	Identifier	vector		5847473	1					
ANR	5848835	ElseStatement	else		5847473	0					
ANR	5848836	ExpressionStatement	dev -> sgr . stroke_stored = false	1328:8:56759:56789	5847473	0	True				
ANR	5848837	AssignmentExpression	dev -> sgr . stroke_stored = false		5847473	0		=			
ANR	5848838	MemberAccess	dev -> sgr . stroke_stored		5847473	0					
ANR	5848839	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848840	Identifier	dev		5847473	0					
ANR	5848841	Identifier	sgr		5847473	1					
ANR	5848842	Identifier	stroke_stored		5847473	1					
ANR	5848843	Identifier	false		5847473	1					
ANR	5848844	IfStatement	if ( adjust )		5847473	6					
ANR	5848845	Condition	adjust	1329:8:56799:56804	5847473	0	True				
ANR	5848846	Identifier	adjust		5847473	0					
ANR	5848847	CompoundStatement		93:16:6044:6044	5847473	1					
ANR	5848848	ExpressionStatement	horiz = ( any_abs ( plp -> width . x ) <= any_abs ( plp -> width . y ) )	1330:8:56817:56873	5847473	0	True				
ANR	5848849	AssignmentExpression	horiz = ( any_abs ( plp -> width . x ) <= any_abs ( plp -> width . y ) )		5847473	0		=			
ANR	5848850	Identifier	horiz		5847473	0					
ANR	5848851	RelationalExpression	any_abs ( plp -> width . x ) <= any_abs ( plp -> width . y )		5847473	1		<=			
ANR	5848852	CallExpression	any_abs ( plp -> width . x )		5847473	0					
ANR	5848853	Callee	any_abs		5847473	0					
ANR	5848854	Identifier	any_abs		5847473	0					
ANR	5848855	ArgumentList	plp -> width . x		5847473	1					
ANR	5848856	Argument	plp -> width . x		5847473	0					
ANR	5848857	MemberAccess	plp -> width . x		5847473	0					
ANR	5848858	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848859	Identifier	plp		5847473	0					
ANR	5848860	Identifier	width		5847473	1					
ANR	5848861	Identifier	x		5847473	1					
ANR	5848862	CallExpression	any_abs ( plp -> width . y )		5847473	1					
ANR	5848863	Callee	any_abs		5847473	0					
ANR	5848864	Identifier	any_abs		5847473	0					
ANR	5848865	ArgumentList	plp -> width . y		5847473	1					
ANR	5848866	Argument	plp -> width . y		5847473	0					
ANR	5848867	MemberAccess	plp -> width . y		5847473	0					
ANR	5848868	PtrMemberAccess	plp -> width		5847473	0					
ANR	5848869	Identifier	plp		5847473	0					
ANR	5848870	Identifier	width		5847473	1					
ANR	5848871	Identifier	y		5847473	1					
ANR	5848872	ExpressionStatement	"adjust_stroke_transversal ( plp , pgs , thin , horiz )"	1331:8:56883:56931	5847473	1	True				
ANR	5848873	CallExpression	"adjust_stroke_transversal ( plp , pgs , thin , horiz )"		5847473	0					
ANR	5848874	Callee	adjust_stroke_transversal		5847473	0					
ANR	5848875	Identifier	adjust_stroke_transversal		5847473	0					
ANR	5848876	ArgumentList	plp		5847473	1					
ANR	5848877	Argument	plp		5847473	0					
ANR	5848878	Identifier	plp		5847473	0					
ANR	5848879	Argument	pgs		5847473	1					
ANR	5848880	Identifier	pgs		5847473	0					
ANR	5848881	Argument	thin		5847473	2					
ANR	5848882	Identifier	thin		5847473	0					
ANR	5848883	Argument	horiz		5847473	3					
ANR	5848884	Identifier	horiz		5847473	0					
ANR	5848885	IfStatement	if ( adjust_longitude )		5847473	2					
ANR	5848886	Condition	adjust_longitude	1332:12:56945:56960	5847473	0	True				
ANR	5848887	Identifier	adjust_longitude		5847473	0					
ANR	5848888	ExpressionStatement	"adjust_stroke_longitude ( plp , pgs , thin , horiz , start_cap , end_cap )"	1333:12:56975:57041	5847473	1	True				
ANR	5848889	CallExpression	"adjust_stroke_longitude ( plp , pgs , thin , horiz , start_cap , end_cap )"		5847473	0					
ANR	5848890	Callee	adjust_stroke_longitude		5847473	0					
ANR	5848891	Identifier	adjust_stroke_longitude		5847473	0					
ANR	5848892	ArgumentList	plp		5847473	1					
ANR	5848893	Argument	plp		5847473	0					
ANR	5848894	Identifier	plp		5847473	0					
ANR	5848895	Argument	pgs		5847473	1					
ANR	5848896	Identifier	pgs		5847473	0					
ANR	5848897	Argument	thin		5847473	2					
ANR	5848898	Identifier	thin		5847473	0					
ANR	5848899	Argument	horiz		5847473	3					
ANR	5848900	Identifier	horiz		5847473	0					
ANR	5848901	Argument	start_cap		5847473	4					
ANR	5848902	Identifier	start_cap		5847473	0					
ANR	5848903	Argument	end_cap		5847473	5					
ANR	5848904	Identifier	end_cap		5847473	0					
ANR	5848905	IfStatement	if ( ( start_cap == gs_cap_butt ) || ( end_cap == gs_cap_butt ) )		5847473	7					
ANR	5848906	Condition	( start_cap == gs_cap_butt ) || ( end_cap == gs_cap_butt )	1335:8:57057:57110	5847473	0	True				
ANR	5848907	OrExpression	( start_cap == gs_cap_butt ) || ( end_cap == gs_cap_butt )		5847473	0		||			
ANR	5848908	EqualityExpression	start_cap == gs_cap_butt		5847473	0		==			
ANR	5848909	Identifier	start_cap		5847473	0					
ANR	5848910	Identifier	gs_cap_butt		5847473	1					
ANR	5848911	EqualityExpression	end_cap == gs_cap_butt		5847473	1		==			
ANR	5848912	Identifier	end_cap		5847473	0					
ANR	5848913	Identifier	gs_cap_butt		5847473	1					
ANR	5848914	CompoundStatement		99:64:6350:6350	5847473	1					
ANR	5848915	ExpressionStatement	dev -> sgr . adjusted [ 0 ] = plp -> o . p	1336:8:57123:57154	5847473	0	True				
ANR	5848916	AssignmentExpression	dev -> sgr . adjusted [ 0 ] = plp -> o . p		5847473	0		=			
ANR	5848917	ArrayIndexing	dev -> sgr . adjusted [ 0 ]		5847473	0					
ANR	5848918	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848919	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848920	Identifier	dev		5847473	0					
ANR	5848921	Identifier	sgr		5847473	1					
ANR	5848922	Identifier	adjusted		5847473	1					
ANR	5848923	PrimaryExpression	0		5847473	1					
ANR	5848924	MemberAccess	plp -> o . p		5847473	1					
ANR	5848925	PtrMemberAccess	plp -> o		5847473	0					
ANR	5848926	Identifier	plp		5847473	0					
ANR	5848927	Identifier	o		5847473	1					
ANR	5848928	Identifier	p		5847473	1					
ANR	5848929	ExpressionStatement	dev -> sgr . adjusted [ 1 ] = plp -> e . p	1337:8:57164:57195	5847473	1	True				
ANR	5848930	AssignmentExpression	dev -> sgr . adjusted [ 1 ] = plp -> e . p		5847473	0		=			
ANR	5848931	ArrayIndexing	dev -> sgr . adjusted [ 1 ]		5847473	0					
ANR	5848932	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848933	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848934	Identifier	dev		5847473	0					
ANR	5848935	Identifier	sgr		5847473	1					
ANR	5848936	Identifier	adjusted		5847473	1					
ANR	5848937	PrimaryExpression	1		5847473	1					
ANR	5848938	MemberAccess	plp -> e . p		5847473	1					
ANR	5848939	PtrMemberAccess	plp -> e		5847473	0					
ANR	5848940	Identifier	plp		5847473	0					
ANR	5848941	Identifier	e		5847473	1					
ANR	5848942	Identifier	p		5847473	1					
ANR	5848943	ExpressionStatement	dev -> sgr . adjusted [ 2 ] = plp -> width	1338:8:57205:57238	5847473	2	True				
ANR	5848944	AssignmentExpression	dev -> sgr . adjusted [ 2 ] = plp -> width		5847473	0		=			
ANR	5848945	ArrayIndexing	dev -> sgr . adjusted [ 2 ]		5847473	0					
ANR	5848946	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848947	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848948	Identifier	dev		5847473	0					
ANR	5848949	Identifier	sgr		5847473	1					
ANR	5848950	Identifier	adjusted		5847473	1					
ANR	5848951	PrimaryExpression	2		5847473	1					
ANR	5848952	PtrMemberAccess	plp -> width		5847473	1					
ANR	5848953	Identifier	plp		5847473	0					
ANR	5848954	Identifier	width		5847473	1					
ANR	5848955	ExpressionStatement	dev -> sgr . adjusted [ 3 ] = plp -> vector	1339:8:57248:57282	5847473	3	True				
ANR	5848956	AssignmentExpression	dev -> sgr . adjusted [ 3 ] = plp -> vector		5847473	0		=			
ANR	5848957	ArrayIndexing	dev -> sgr . adjusted [ 3 ]		5847473	0					
ANR	5848958	MemberAccess	dev -> sgr . adjusted		5847473	0					
ANR	5848959	PtrMemberAccess	dev -> sgr		5847473	0					
ANR	5848960	Identifier	dev		5847473	0					
ANR	5848961	Identifier	sgr		5847473	1					
ANR	5848962	Identifier	adjusted		5847473	1					
ANR	5848963	PrimaryExpression	3		5847473	1					
ANR	5848964	PtrMemberAccess	plp -> vector		5847473	1					
ANR	5848965	Identifier	plp		5847473	0					
ANR	5848966	Identifier	vector		5847473	1					
ANR	5848967	ReturnType	static void		5847473	1					
ANR	5848968	Identifier	adjust_stroke		5847473	2					
ANR	5848969	ParameterList	"gx_device * dev , pl_ptr plp , const gs_gstate * pgs , bool thin , bool adjust_longitude , note_flags flags"		5847473	3					
ANR	5848970	Parameter	gx_device * dev	1235:14:50645:50658	5847473	0	True				
ANR	5848971	ParameterType	gx_device *		5847473	0					
ANR	5848972	Identifier	dev		5847473	1					
ANR	5848973	Parameter	pl_ptr plp	1235:30:50661:50670	5847473	1	True				
ANR	5848974	ParameterType	pl_ptr		5847473	0					
ANR	5848975	Identifier	plp		5847473	1					
ANR	5848976	Parameter	const gs_gstate * pgs	1235:42:50673:50693	5847473	2	True				
ANR	5848977	ParameterType	const gs_gstate *		5847473	0					
ANR	5848978	Identifier	pgs		5847473	1					
ANR	5848979	Parameter	bool thin	1236:14:50710:50718	5847473	3	True				
ANR	5848980	ParameterType	bool		5847473	0					
ANR	5848981	Identifier	thin		5847473	1					
ANR	5848982	Parameter	bool adjust_longitude	1236:25:50721:50741	5847473	4	True				
ANR	5848983	ParameterType	bool		5847473	0					
ANR	5848984	Identifier	adjust_longitude		5847473	1					
ANR	5848985	Parameter	note_flags flags	1236:48:50744:50759	5847473	5	True				
ANR	5848986	ParameterType	note_flags		5847473	0					
ANR	5848987	Identifier	flags		5847473	1					
ANR	5848988	CFGEntryNode	ENTRY		5847473		True				
ANR	5848989	CFGExitNode	EXIT		5847473		True				
ANR	5848990	Symbol	delta_w_x		5847473						
ANR	5848991	Symbol	delta_w_y		5847473						
ANR	5848992	Symbol	* pgs		5847473						
ANR	5848993	Symbol	pgs -> line_params		5847473						
ANR	5848994	Symbol	nf_dash_tail		5847473						
ANR	5848995	Symbol	dev -> sgr . orig [ 2 ] . x		5847473						
ANR	5848996	Symbol	* dev -> sgr		5847473						
ANR	5848997	Symbol	dev -> sgr . adjusted [ 2 ] . y		5847473						
ANR	5848998	Symbol	dev -> sgr . orig [ 2 ] . y		5847473						
ANR	5848999	Symbol	dev -> sgr . adjusted [ 2 ] . x		5847473						
ANR	5849000	Symbol	dev		5847473						
ANR	5849001	Symbol	plp -> vector		5847473						
ANR	5849002	Symbol	* dev -> sgr . adjusted		5847473						
ANR	5849003	Symbol	dev -> sgr		5847473						
ANR	5849004	Symbol	* plp		5847473						
ANR	5849005	Symbol	shift_e_x		5847473						
ANR	5849006	Symbol	shift_e_y		5847473						
ANR	5849007	Symbol	shift_o_y		5847473						
ANR	5849008	Symbol	plp -> o . p . y		5847473						
ANR	5849009	Symbol	plp -> o . p . x		5847473						
ANR	5849010	Symbol	dev -> sgr . adjusted [ 0 ] . x		5847473						
ANR	5849011	Symbol	dev -> sgr . adjusted [ 0 ] . y		5847473						
ANR	5849012	Symbol	thin		5847473						
ANR	5849013	Symbol	shift_o_x		5847473						
ANR	5849014	Symbol	plp -> e . p		5847473						
ANR	5849015	Symbol	nf_dash_head		5847473						
ANR	5849016	Symbol	adjust		5847473						
ANR	5849017	Symbol	true		5847473						
ANR	5849018	Symbol	dev -> sgr . stroke_stored		5847473						
ANR	5849019	Symbol	dev -> sgr . orig [ 1 ] . y		5847473						
ANR	5849020	Symbol	dev -> sgr . orig [ 1 ] . x		5847473						
ANR	5849021	Symbol	* dev		5847473						
ANR	5849022	Symbol	plp -> width . y		5847473						
ANR	5849023	Symbol	plp -> width . x		5847473						
ANR	5849024	Symbol	dev -> sgr . orig [ 0 ] . y		5847473						
ANR	5849025	Symbol	flags		5847473						
ANR	5849026	Symbol	dev -> sgr . orig		5847473						
ANR	5849027	Symbol	plp -> e . p . y		5847473						
ANR	5849028	Symbol	plp -> e . p . x		5847473						
ANR	5849029	Symbol	dev -> sgr . adjusted [ 1 ] . y		5847473						
ANR	5849030	Symbol	plp -> o . p		5847473						
ANR	5849031	Symbol	dev -> sgr . adjusted [ 1 ] . x		5847473						
ANR	5849032	Symbol	dev -> sgr . orig [ 0 ] . x		5847473						
ANR	5849033	Symbol	pgs -> stroke_adjust		5847473						
ANR	5849034	Symbol	plp -> width		5847473						
ANR	5849035	Symbol	horiz		5847473						
ANR	5849036	Symbol	end_cap		5847473						
ANR	5849037	Symbol	any_abs		5847473						
ANR	5849038	Symbol	pgs		5847473						
ANR	5849039	Symbol	* dev -> sgr . orig		5847473						
ANR	5849040	Symbol	pgs -> line_params . end_cap		5847473						
ANR	5849041	Symbol	fixed2float		5847473						
ANR	5849042	Symbol	pgs -> line_params . start_cap		5847473						
ANR	5849043	Symbol	pgs -> line_params . dash_cap		5847473						
ANR	5849044	Symbol	false		5847473						
ANR	5849045	Symbol	* * dev		5847473						
ANR	5849046	Symbol	gs_cap_butt		5847473						
ANR	5849047	Symbol	adjust_longitude		5847473						
ANR	5849048	Symbol	start_cap		5847473						
ANR	5849049	Symbol	dev -> memory		5847473						
ANR	5849050	Symbol	dev -> sgr . orig [ 3 ] . y		5847473						
ANR	5849051	Symbol	plp		5847473						
ANR	5849052	Symbol	dev -> sgr . orig [ 3 ] . x		5847473						
ANR	5849053	Symbol	dev -> sgr . adjusted		5847473						
ANR	5849054	Symbol	plp -> o		5847473						
ANR	5849055	Symbol	plp -> e		5847473						
ANR	5849056	Symbol	plp -> vector . y		5847473						
ANR	5849057	Symbol	plp -> vector . x		5847473						
ANR	5849058	Function	line_intersect	1348:0:57649:59417							
ANR	5849059	FunctionDef	"line_intersect (p_ptr pp1 , p_ptr pd1 , p_ptr pp2 , p_ptr pd2 , p_ptr pi)"		5849058	0					
ANR	5849060	CompoundStatement		1355:0:57936:59417	5849058	0					
ANR	5849061	IdentifierDeclStatement	"double u1 = pd1 -> x , v1 = pd1 -> y ;"	1357:4:58078:58109	5849058	0	True				
ANR	5849062	IdentifierDecl	u1 = pd1 -> x		5849058	0					
ANR	5849063	IdentifierDeclType	double		5849058	0					
ANR	5849064	Identifier	u1		5849058	1					
ANR	5849065	AssignmentExpression	u1 = pd1 -> x		5849058	2		=			
ANR	5849066	Identifier	u1		5849058	0					
ANR	5849067	PtrMemberAccess	pd1 -> x		5849058	1					
ANR	5849068	Identifier	pd1		5849058	0					
ANR	5849069	Identifier	x		5849058	1					
ANR	5849070	IdentifierDecl	v1 = pd1 -> y		5849058	1					
ANR	5849071	IdentifierDeclType	double		5849058	0					
ANR	5849072	Identifier	v1		5849058	1					
ANR	5849073	AssignmentExpression	v1 = pd1 -> y		5849058	2		=			
ANR	5849074	Identifier	v1		5849058	0					
ANR	5849075	PtrMemberAccess	pd1 -> y		5849058	1					
ANR	5849076	Identifier	pd1		5849058	0					
ANR	5849077	Identifier	y		5849058	1					
ANR	5849078	IdentifierDeclStatement	"double u2 = pd2 -> x , v2 = pd2 -> y ;"	1358:4:58115:58146	5849058	1	True				
ANR	5849079	IdentifierDecl	u2 = pd2 -> x		5849058	0					
ANR	5849080	IdentifierDeclType	double		5849058	0					
ANR	5849081	Identifier	u2		5849058	1					
ANR	5849082	AssignmentExpression	u2 = pd2 -> x		5849058	2		=			
ANR	5849083	Identifier	u2		5849058	0					
ANR	5849084	PtrMemberAccess	pd2 -> x		5849058	1					
ANR	5849085	Identifier	pd2		5849058	0					
ANR	5849086	Identifier	x		5849058	1					
ANR	5849087	IdentifierDecl	v2 = pd2 -> y		5849058	1					
ANR	5849088	IdentifierDeclType	double		5849058	0					
ANR	5849089	Identifier	v2		5849058	1					
ANR	5849090	AssignmentExpression	v2 = pd2 -> y		5849058	2		=			
ANR	5849091	Identifier	v2		5849058	0					
ANR	5849092	PtrMemberAccess	pd2 -> y		5849058	1					
ANR	5849093	Identifier	pd2		5849058	0					
ANR	5849094	Identifier	y		5849058	1					
ANR	5849095	IdentifierDeclStatement	double denom = u1 * v2 - u2 * v1 ;	1359:4:58152:58184	5849058	2	True				
ANR	5849096	IdentifierDecl	denom = u1 * v2 - u2 * v1		5849058	0					
ANR	5849097	IdentifierDeclType	double		5849058	0					
ANR	5849098	Identifier	denom		5849058	1					
ANR	5849099	AssignmentExpression	denom = u1 * v2 - u2 * v1		5849058	2		=			
ANR	5849100	Identifier	denom		5849058	0					
ANR	5849101	AdditiveExpression	u1 * v2 - u2 * v1		5849058	1		-			
ANR	5849102	MultiplicativeExpression	u1 * v2		5849058	0		*			
ANR	5849103	Identifier	u1		5849058	0					
ANR	5849104	Identifier	v2		5849058	1					
ANR	5849105	MultiplicativeExpression	u2 * v1		5849058	1		*			
ANR	5849106	Identifier	u2		5849058	0					
ANR	5849107	Identifier	v1		5849058	1					
ANR	5849108	IdentifierDeclStatement	double xdiff = pp2 -> x - pp1 -> x ;	1360:4:58190:58220	5849058	3	True				
ANR	5849109	IdentifierDecl	xdiff = pp2 -> x - pp1 -> x		5849058	0					
ANR	5849110	IdentifierDeclType	double		5849058	0					
ANR	5849111	Identifier	xdiff		5849058	1					
ANR	5849112	AssignmentExpression	xdiff = pp2 -> x - pp1 -> x		5849058	2		=			
ANR	5849113	Identifier	xdiff		5849058	0					
ANR	5849114	AdditiveExpression	pp2 -> x - pp1 -> x		5849058	1		-			
ANR	5849115	PtrMemberAccess	pp2 -> x		5849058	0					
ANR	5849116	Identifier	pp2		5849058	0					
ANR	5849117	Identifier	x		5849058	1					
ANR	5849118	PtrMemberAccess	pp1 -> x		5849058	1					
ANR	5849119	Identifier	pp1		5849058	0					
ANR	5849120	Identifier	x		5849058	1					
ANR	5849121	IdentifierDeclStatement	double ydiff = pp2 -> y - pp1 -> y ;	1361:4:58226:58256	5849058	4	True				
ANR	5849122	IdentifierDecl	ydiff = pp2 -> y - pp1 -> y		5849058	0					
ANR	5849123	IdentifierDeclType	double		5849058	0					
ANR	5849124	Identifier	ydiff		5849058	1					
ANR	5849125	AssignmentExpression	ydiff = pp2 -> y - pp1 -> y		5849058	2		=			
ANR	5849126	Identifier	ydiff		5849058	0					
ANR	5849127	AdditiveExpression	pp2 -> y - pp1 -> y		5849058	1		-			
ANR	5849128	PtrMemberAccess	pp2 -> y		5849058	0					
ANR	5849129	Identifier	pp2		5849058	0					
ANR	5849130	Identifier	y		5849058	1					
ANR	5849131	PtrMemberAccess	pp1 -> y		5849058	1					
ANR	5849132	Identifier	pp1		5849058	0					
ANR	5849133	Identifier	y		5849058	1					
ANR	5849134	IdentifierDeclStatement	double f1 ;	1362:4:58262:58271	5849058	5	True				
ANR	5849135	IdentifierDecl	f1		5849058	0					
ANR	5849136	IdentifierDeclType	double		5849058	0					
ANR	5849137	Identifier	f1		5849058	1					
ANR	5849138	IdentifierDeclStatement	double max_result = any_abs ( denom ) * ( double ) max_fixed ;	1363:4:58277:58331	5849058	6	True				
ANR	5849139	IdentifierDecl	max_result = any_abs ( denom ) * ( double ) max_fixed		5849058	0					
ANR	5849140	IdentifierDeclType	double		5849058	0					
ANR	5849141	Identifier	max_result		5849058	1					
ANR	5849142	AssignmentExpression	max_result = any_abs ( denom ) * ( double ) max_fixed		5849058	2		=			
ANR	5849143	Identifier	max_result		5849058	0					
ANR	5849144	MultiplicativeExpression	any_abs ( denom ) * ( double ) max_fixed		5849058	1		*			
ANR	5849145	CallExpression	any_abs ( denom )		5849058	0					
ANR	5849146	Callee	any_abs		5849058	0					
ANR	5849147	Identifier	any_abs		5849058	0					
ANR	5849148	ArgumentList	denom		5849058	1					
ANR	5849149	Argument	denom		5849058	0					
ANR	5849150	Identifier	denom		5849058	0					
ANR	5849151	CastExpression	( double ) max_fixed		5849058	1					
ANR	5849152	CastTarget	double		5849058	0					
ANR	5849153	Identifier	max_fixed		5849058	1					
ANR	5849154	IfStatement	if ( gs_debug_c ( 'O' ) )		5849058	7					
ANR	5849155	Condition	gs_debug_c ( 'O' )	1366:8:58388:58402	5849058	0	True				
ANR	5849156	CallExpression	gs_debug_c ( 'O' )		5849058	0					
ANR	5849157	Callee	gs_debug_c		5849058	0					
ANR	5849158	Identifier	gs_debug_c		5849058	0					
ANR	5849159	ArgumentList	'O'		5849058	1					
ANR	5849160	Argument	'O'		5849058	0					
ANR	5849161	PrimaryExpression	'O'		5849058	0					
ANR	5849162	CompoundStatement		12:25:468:468	5849058	1					
ANR	5849163	ExpressionStatement	"dlprintf4 ( ""[o]Intersect %f,%f(%f/%f)"" , fixed2float ( pp1 -> x ) , fixed2float ( pp1 -> y ) , fixed2float ( pd1 -> x ) , fixed2float ( pd1 -> y ) )"	1367:8:58415:58573	5849058	0	True				
ANR	5849164	CallExpression	"dlprintf4 ( ""[o]Intersect %f,%f(%f/%f)"" , fixed2float ( pp1 -> x ) , fixed2float ( pp1 -> y ) , fixed2float ( pd1 -> x ) , fixed2float ( pd1 -> y ) )"		5849058	0					
ANR	5849165	Callee	dlprintf4		5849058	0					
ANR	5849166	Identifier	dlprintf4		5849058	0					
ANR	5849167	ArgumentList	"""[o]Intersect %f,%f(%f/%f)"""		5849058	1					
ANR	5849168	Argument	"""[o]Intersect %f,%f(%f/%f)"""		5849058	0					
ANR	5849169	PrimaryExpression	"""[o]Intersect %f,%f(%f/%f)"""		5849058	0					
ANR	5849170	Argument	fixed2float ( pp1 -> x )		5849058	1					
ANR	5849171	CallExpression	fixed2float ( pp1 -> x )		5849058	0					
ANR	5849172	Callee	fixed2float		5849058	0					
ANR	5849173	Identifier	fixed2float		5849058	0					
ANR	5849174	ArgumentList	pp1 -> x		5849058	1					
ANR	5849175	Argument	pp1 -> x		5849058	0					
ANR	5849176	PtrMemberAccess	pp1 -> x		5849058	0					
ANR	5849177	Identifier	pp1		5849058	0					
ANR	5849178	Identifier	x		5849058	1					
ANR	5849179	Argument	fixed2float ( pp1 -> y )		5849058	2					
ANR	5849180	CallExpression	fixed2float ( pp1 -> y )		5849058	0					
ANR	5849181	Callee	fixed2float		5849058	0					
ANR	5849182	Identifier	fixed2float		5849058	0					
ANR	5849183	ArgumentList	pp1 -> y		5849058	1					
ANR	5849184	Argument	pp1 -> y		5849058	0					
ANR	5849185	PtrMemberAccess	pp1 -> y		5849058	0					
ANR	5849186	Identifier	pp1		5849058	0					
ANR	5849187	Identifier	y		5849058	1					
ANR	5849188	Argument	fixed2float ( pd1 -> x )		5849058	3					
ANR	5849189	CallExpression	fixed2float ( pd1 -> x )		5849058	0					
ANR	5849190	Callee	fixed2float		5849058	0					
ANR	5849191	Identifier	fixed2float		5849058	0					
ANR	5849192	ArgumentList	pd1 -> x		5849058	1					
ANR	5849193	Argument	pd1 -> x		5849058	0					
ANR	5849194	PtrMemberAccess	pd1 -> x		5849058	0					
ANR	5849195	Identifier	pd1		5849058	0					
ANR	5849196	Identifier	x		5849058	1					
ANR	5849197	Argument	fixed2float ( pd1 -> y )		5849058	4					
ANR	5849198	CallExpression	fixed2float ( pd1 -> y )		5849058	0					
ANR	5849199	Callee	fixed2float		5849058	0					
ANR	5849200	Identifier	fixed2float		5849058	0					
ANR	5849201	ArgumentList	pd1 -> y		5849058	1					
ANR	5849202	Argument	pd1 -> y		5849058	0					
ANR	5849203	PtrMemberAccess	pd1 -> y		5849058	0					
ANR	5849204	Identifier	pd1		5849058	0					
ANR	5849205	Identifier	y		5849058	1					
ANR	5849206	ExpressionStatement	"dlprintf4 ( "" & %f,%f(%f/%f),\\n"" , fixed2float ( pp2 -> x ) , fixed2float ( pp2 -> y ) , fixed2float ( pd2 -> x ) , fixed2float ( pd2 -> y ) )"	1370:8:58583:58734	5849058	1	True				
ANR	5849207	CallExpression	"dlprintf4 ( "" & %f,%f(%f/%f),\\n"" , fixed2float ( pp2 -> x ) , fixed2float ( pp2 -> y ) , fixed2float ( pd2 -> x ) , fixed2float ( pd2 -> y ) )"		5849058	0					
ANR	5849208	Callee	dlprintf4		5849058	0					
ANR	5849209	Identifier	dlprintf4		5849058	0					
ANR	5849210	ArgumentList	""" & %f,%f(%f/%f),\\n"""		5849058	1					
ANR	5849211	Argument	""" & %f,%f(%f/%f),\\n"""		5849058	0					
ANR	5849212	PrimaryExpression	""" & %f,%f(%f/%f),\\n"""		5849058	0					
ANR	5849213	Argument	fixed2float ( pp2 -> x )		5849058	1					
ANR	5849214	CallExpression	fixed2float ( pp2 -> x )		5849058	0					
ANR	5849215	Callee	fixed2float		5849058	0					
ANR	5849216	Identifier	fixed2float		5849058	0					
ANR	5849217	ArgumentList	pp2 -> x		5849058	1					
ANR	5849218	Argument	pp2 -> x		5849058	0					
ANR	5849219	PtrMemberAccess	pp2 -> x		5849058	0					
ANR	5849220	Identifier	pp2		5849058	0					
ANR	5849221	Identifier	x		5849058	1					
ANR	5849222	Argument	fixed2float ( pp2 -> y )		5849058	2					
ANR	5849223	CallExpression	fixed2float ( pp2 -> y )		5849058	0					
ANR	5849224	Callee	fixed2float		5849058	0					
ANR	5849225	Identifier	fixed2float		5849058	0					
ANR	5849226	ArgumentList	pp2 -> y		5849058	1					
ANR	5849227	Argument	pp2 -> y		5849058	0					
ANR	5849228	PtrMemberAccess	pp2 -> y		5849058	0					
ANR	5849229	Identifier	pp2		5849058	0					
ANR	5849230	Identifier	y		5849058	1					
ANR	5849231	Argument	fixed2float ( pd2 -> x )		5849058	3					
ANR	5849232	CallExpression	fixed2float ( pd2 -> x )		5849058	0					
ANR	5849233	Callee	fixed2float		5849058	0					
ANR	5849234	Identifier	fixed2float		5849058	0					
ANR	5849235	ArgumentList	pd2 -> x		5849058	1					
ANR	5849236	Argument	pd2 -> x		5849058	0					
ANR	5849237	PtrMemberAccess	pd2 -> x		5849058	0					
ANR	5849238	Identifier	pd2		5849058	0					
ANR	5849239	Identifier	x		5849058	1					
ANR	5849240	Argument	fixed2float ( pd2 -> y )		5849058	4					
ANR	5849241	CallExpression	fixed2float ( pd2 -> y )		5849058	0					
ANR	5849242	Callee	fixed2float		5849058	0					
ANR	5849243	Identifier	fixed2float		5849058	0					
ANR	5849244	ArgumentList	pd2 -> y		5849058	1					
ANR	5849245	Argument	pd2 -> y		5849058	0					
ANR	5849246	PtrMemberAccess	pd2 -> y		5849058	0					
ANR	5849247	Identifier	pd2		5849058	0					
ANR	5849248	Identifier	y		5849058	1					
ANR	5849249	ExpressionStatement	"dlprintf3 ( ""\\txdiff=%f ydiff=%f denom=%f ->\\n"" , xdiff , ydiff , denom )"	1373:8:58744:58829	5849058	2	True				
ANR	5849250	CallExpression	"dlprintf3 ( ""\\txdiff=%f ydiff=%f denom=%f ->\\n"" , xdiff , ydiff , denom )"		5849058	0					
ANR	5849251	Callee	dlprintf3		5849058	0					
ANR	5849252	Identifier	dlprintf3		5849058	0					
ANR	5849253	ArgumentList	"""\\txdiff=%f ydiff=%f denom=%f ->\\n"""		5849058	1					
ANR	5849254	Argument	"""\\txdiff=%f ydiff=%f denom=%f ->\\n"""		5849058	0					
ANR	5849255	PrimaryExpression	"""\\txdiff=%f ydiff=%f denom=%f ->\\n"""		5849058	0					
ANR	5849256	Argument	xdiff		5849058	1					
ANR	5849257	Identifier	xdiff		5849058	0					
ANR	5849258	Argument	ydiff		5849058	2					
ANR	5849259	Identifier	ydiff		5849058	0					
ANR	5849260	Argument	denom		5849058	3					
ANR	5849261	Identifier	denom		5849058	0					
ANR	5849262	IfStatement	if ( any_abs ( xdiff ) >= max_result || any_abs ( ydiff ) >= max_result )		5849058	8					
ANR	5849263	Condition	any_abs ( xdiff ) >= max_result || any_abs ( ydiff ) >= max_result	1378:8:58891:58950	5849058	0	True				
ANR	5849264	OrExpression	any_abs ( xdiff ) >= max_result || any_abs ( ydiff ) >= max_result		5849058	0		||			
ANR	5849265	RelationalExpression	any_abs ( xdiff ) >= max_result		5849058	0		>=			
ANR	5849266	CallExpression	any_abs ( xdiff )		5849058	0					
ANR	5849267	Callee	any_abs		5849058	0					
ANR	5849268	Identifier	any_abs		5849058	0					
ANR	5849269	ArgumentList	xdiff		5849058	1					
ANR	5849270	Argument	xdiff		5849058	0					
ANR	5849271	Identifier	xdiff		5849058	0					
ANR	5849272	Identifier	max_result		5849058	1					
ANR	5849273	RelationalExpression	any_abs ( ydiff ) >= max_result		5849058	1		>=			
ANR	5849274	CallExpression	any_abs ( ydiff )		5849058	0					
ANR	5849275	Callee	any_abs		5849058	0					
ANR	5849276	Identifier	any_abs		5849058	0					
ANR	5849277	ArgumentList	ydiff		5849058	1					
ANR	5849278	Argument	ydiff		5849058	0					
ANR	5849279	Identifier	ydiff		5849058	0					
ANR	5849280	Identifier	max_result		5849058	1					
ANR	5849281	CompoundStatement		24:70:1016:1016	5849058	1					
ANR	5849282	ExpressionStatement	"if_debug0 ( 'O' , ""\\tdegenerate!\\n"" )"	1381:8:59061:59094	5849058	0	True				
ANR	5849283	CallExpression	"if_debug0 ( 'O' , ""\\tdegenerate!\\n"" )"		5849058	0					
ANR	5849284	Callee	if_debug0		5849058	0					
ANR	5849285	Identifier	if_debug0		5849058	0					
ANR	5849286	ArgumentList	'O'		5849058	1					
ANR	5849287	Argument	'O'		5849058	0					
ANR	5849288	PrimaryExpression	'O'		5849058	0					
ANR	5849289	Argument	"""\\tdegenerate!\\n"""		5849058	1					
ANR	5849290	PrimaryExpression	"""\\tdegenerate!\\n"""		5849058	0					
ANR	5849291	ReturnStatement	return - 1 ;	1382:8:59104:59113	5849058	1	True				
ANR	5849292	UnaryOperationExpression	- 1		5849058	0					
ANR	5849293	UnaryOperator	-		5849058	0					
ANR	5849294	PrimaryExpression	1		5849058	1					
ANR	5849295	ExpressionStatement	f1 = ( v2 * xdiff - u2 * ydiff ) / denom	1384:4:59125:59163	5849058	9	True				
ANR	5849296	AssignmentExpression	f1 = ( v2 * xdiff - u2 * ydiff ) / denom		5849058	0		=			
ANR	5849297	Identifier	f1		5849058	0					
ANR	5849298	MultiplicativeExpression	( v2 * xdiff - u2 * ydiff ) / denom		5849058	1		/			
ANR	5849299	AdditiveExpression	v2 * xdiff - u2 * ydiff		5849058	0		-			
ANR	5849300	MultiplicativeExpression	v2 * xdiff		5849058	0		*			
ANR	5849301	Identifier	v2		5849058	0					
ANR	5849302	Identifier	xdiff		5849058	1					
ANR	5849303	MultiplicativeExpression	u2 * ydiff		5849058	1		*			
ANR	5849304	Identifier	u2		5849058	0					
ANR	5849305	Identifier	ydiff		5849058	1					
ANR	5849306	Identifier	denom		5849058	1					
ANR	5849307	ExpressionStatement	pi -> x = pp1 -> x + ( fixed ) ( f1 * u1 )	1385:4:59169:59203	5849058	10	True				
ANR	5849308	AssignmentExpression	pi -> x = pp1 -> x + ( fixed ) ( f1 * u1 )		5849058	0		=			
ANR	5849309	PtrMemberAccess	pi -> x		5849058	0					
ANR	5849310	Identifier	pi		5849058	0					
ANR	5849311	Identifier	x		5849058	1					
ANR	5849312	AdditiveExpression	pp1 -> x + ( fixed ) ( f1 * u1 )		5849058	1		+			
ANR	5849313	PtrMemberAccess	pp1 -> x		5849058	0					
ANR	5849314	Identifier	pp1		5849058	0					
ANR	5849315	Identifier	x		5849058	1					
ANR	5849316	CastExpression	( fixed ) ( f1 * u1 )		5849058	1					
ANR	5849317	CastTarget	fixed		5849058	0					
ANR	5849318	MultiplicativeExpression	f1 * u1		5849058	1		*			
ANR	5849319	Identifier	f1		5849058	0					
ANR	5849320	Identifier	u1		5849058	1					
ANR	5849321	ExpressionStatement	pi -> y = pp1 -> y + ( fixed ) ( f1 * v1 )	1386:4:59209:59243	5849058	11	True				
ANR	5849322	AssignmentExpression	pi -> y = pp1 -> y + ( fixed ) ( f1 * v1 )		5849058	0		=			
ANR	5849323	PtrMemberAccess	pi -> y		5849058	0					
ANR	5849324	Identifier	pi		5849058	0					
ANR	5849325	Identifier	y		5849058	1					
ANR	5849326	AdditiveExpression	pp1 -> y + ( fixed ) ( f1 * v1 )		5849058	1		+			
ANR	5849327	PtrMemberAccess	pp1 -> y		5849058	0					
ANR	5849328	Identifier	pp1		5849058	0					
ANR	5849329	Identifier	y		5849058	1					
ANR	5849330	CastExpression	( fixed ) ( f1 * v1 )		5849058	1					
ANR	5849331	CastTarget	fixed		5849058	0					
ANR	5849332	MultiplicativeExpression	f1 * v1		5849058	1		*			
ANR	5849333	Identifier	f1		5849058	0					
ANR	5849334	Identifier	v1		5849058	1					
ANR	5849335	ExpressionStatement	"if_debug2 ( 'O' , ""\\t%f,%f\\n"" , fixed2float ( pi -> x ) , fixed2float ( pi -> y ) )"	1387:4:59249:59330	5849058	12	True				
ANR	5849336	CallExpression	"if_debug2 ( 'O' , ""\\t%f,%f\\n"" , fixed2float ( pi -> x ) , fixed2float ( pi -> y ) )"		5849058	0					
ANR	5849337	Callee	if_debug2		5849058	0					
ANR	5849338	Identifier	if_debug2		5849058	0					
ANR	5849339	ArgumentList	'O'		5849058	1					
ANR	5849340	Argument	'O'		5849058	0					
ANR	5849341	PrimaryExpression	'O'		5849058	0					
ANR	5849342	Argument	"""\\t%f,%f\\n"""		5849058	1					
ANR	5849343	PrimaryExpression	"""\\t%f,%f\\n"""		5849058	0					
ANR	5849344	Argument	fixed2float ( pi -> x )		5849058	2					
ANR	5849345	CallExpression	fixed2float ( pi -> x )		5849058	0					
ANR	5849346	Callee	fixed2float		5849058	0					
ANR	5849347	Identifier	fixed2float		5849058	0					
ANR	5849348	ArgumentList	pi -> x		5849058	1					
ANR	5849349	Argument	pi -> x		5849058	0					
ANR	5849350	PtrMemberAccess	pi -> x		5849058	0					
ANR	5849351	Identifier	pi		5849058	0					
ANR	5849352	Identifier	x		5849058	1					
ANR	5849353	Argument	fixed2float ( pi -> y )		5849058	3					
ANR	5849354	CallExpression	fixed2float ( pi -> y )		5849058	0					
ANR	5849355	Callee	fixed2float		5849058	0					
ANR	5849356	Identifier	fixed2float		5849058	0					
ANR	5849357	ArgumentList	pi -> y		5849058	1					
ANR	5849358	Argument	pi -> y		5849058	0					
ANR	5849359	PtrMemberAccess	pi -> y		5849058	0					
ANR	5849360	Identifier	pi		5849058	0					
ANR	5849361	Identifier	y		5849058	1					
ANR	5849362	ReturnStatement	return ( f1 >= 0 && ( v1 * xdiff >= u1 * ydiff ? denom >= 0 : denom < 0 ) ? 0 : 1 ) ;	1389:4:59336:59415	5849058	13	True				
ANR	5849363	ConditionalExpression	f1 >= 0 && ( v1 * xdiff >= u1 * ydiff ? denom >= 0 : denom < 0 ) ? 0 : 1		5849058	0					
ANR	5849364	Condition	f1 >= 0 && ( v1 * xdiff >= u1 * ydiff ? denom >= 0 : denom < 0 )		5849058	0					
ANR	5849365	AndExpression	f1 >= 0 && ( v1 * xdiff >= u1 * ydiff ? denom >= 0 : denom < 0 )		5849058	0		&&			
ANR	5849366	RelationalExpression	f1 >= 0		5849058	0		>=			
ANR	5849367	Identifier	f1		5849058	0					
ANR	5849368	PrimaryExpression	0		5849058	1					
ANR	5849369	ConditionalExpression	v1 * xdiff >= u1 * ydiff ? denom >= 0 : denom < 0		5849058	1					
ANR	5849370	Condition	v1 * xdiff >= u1 * ydiff		5849058	0					
ANR	5849371	RelationalExpression	v1 * xdiff >= u1 * ydiff		5849058	0		>=			
ANR	5849372	MultiplicativeExpression	v1 * xdiff		5849058	0		*			
ANR	5849373	Identifier	v1		5849058	0					
ANR	5849374	Identifier	xdiff		5849058	1					
ANR	5849375	MultiplicativeExpression	u1 * ydiff		5849058	1		*			
ANR	5849376	Identifier	u1		5849058	0					
ANR	5849377	Identifier	ydiff		5849058	1					
ANR	5849378	RelationalExpression	denom >= 0		5849058	1		>=			
ANR	5849379	Identifier	denom		5849058	0					
ANR	5849380	PrimaryExpression	0		5849058	1					
ANR	5849381	RelationalExpression	denom < 0		5849058	2		<			
ANR	5849382	Identifier	denom		5849058	0					
ANR	5849383	PrimaryExpression	0		5849058	1					
ANR	5849384	PrimaryExpression	0		5849058	1					
ANR	5849385	PrimaryExpression	1		5849058	2					
ANR	5849386	ReturnType	static int		5849058	1					
ANR	5849387	Identifier	line_intersect		5849058	2					
ANR	5849388	ParameterList	"p_ptr pp1 , p_ptr pd1 , p_ptr pp2 , p_ptr pd2 , p_ptr pi"		5849058	3					
ANR	5849389	Parameter	p_ptr pp1	1350:18:57694:57702	5849058	0	True				
ANR	5849390	ParameterType	p_ptr		5849058	0					
ANR	5849391	Identifier	pp1		5849058	1					
ANR	5849392	Parameter	p_ptr pd1	1351:18:57750:57758	5849058	1	True				
ANR	5849393	ParameterType	p_ptr		5849058	0					
ANR	5849394	Identifier	pd1		5849058	1					
ANR	5849395	Parameter	p_ptr pp2	1352:18:57814:57822	5849058	2	True				
ANR	5849396	ParameterType	p_ptr		5849058	0					
ANR	5849397	Identifier	pp2		5849058	1					
ANR	5849398	Parameter	p_ptr pd2	1353:18:57870:57878	5849058	3	True				
ANR	5849399	ParameterType	p_ptr		5849058	0					
ANR	5849400	Identifier	pd2		5849058	1					
ANR	5849401	Parameter	p_ptr pi	1354:18:57926:57933	5849058	4	True				
ANR	5849402	ParameterType	p_ptr		5849058	0					
ANR	5849403	Identifier	pi		5849058	1					
ANR	5849404	CFGEntryNode	ENTRY		5849058		True				
ANR	5849405	CFGExitNode	EXIT		5849058		True				
ANR	5849406	Symbol	f1		5849058						
ANR	5849407	Symbol	pp2 -> y		5849058						
ANR	5849408	Symbol	max_fixed		5849058						
ANR	5849409	Symbol	any_abs		5849058						
ANR	5849410	Symbol	gs_debug_c		5849058						
ANR	5849411	Symbol	denom		5849058						
ANR	5849412	Symbol	* pp1		5849058						
ANR	5849413	Symbol	u1		5849058						
ANR	5849414	Symbol	* pp2		5849058						
ANR	5849415	Symbol	u2		5849058						
ANR	5849416	Symbol	pp2 -> x		5849058						
ANR	5849417	Symbol	pd1 -> x		5849058						
ANR	5849418	Symbol	fixed2float		5849058						
ANR	5849419	Symbol	pd1 -> y		5849058						
ANR	5849420	Symbol	ydiff		5849058						
ANR	5849421	Symbol	max_result		5849058						
ANR	5849422	Symbol	* pd1		5849058						
ANR	5849423	Symbol	* pd2		5849058						
ANR	5849424	Symbol	pp1 -> y		5849058						
ANR	5849425	Symbol	pp1 -> x		5849058						
ANR	5849426	Symbol	pi -> y		5849058						
ANR	5849427	Symbol	pi -> x		5849058						
ANR	5849428	Symbol	pp1		5849058						
ANR	5849429	Symbol	pd2 -> y		5849058						
ANR	5849430	Symbol	pp2		5849058						
ANR	5849431	Symbol	pd2 -> x		5849058						
ANR	5849432	Symbol	xdiff		5849058						
ANR	5849433	Symbol	pi		5849058						
ANR	5849434	Symbol	v1		5849058						
ANR	5849435	Symbol	pd1		5849058						
ANR	5849436	Symbol	v2		5849058						
ANR	5849437	Symbol	* pi		5849058						
ANR	5849438	Symbol	pd2		5849058						
ANR	5849439	Function	set_thin_widths	1394:0:59529:59987							
ANR	5849440	FunctionDef	set_thin_widths (register pl_ptr plp)		5849439	0					
ANR	5849441	CompoundStatement		1396:0:59578:59987	5849439	0					
ANR	5849442	IdentifierDeclStatement	"fixed dx = plp -> e . p . x - plp -> o . p . x , dy = plp -> e . p . y - plp -> o . p . y ;"	1397:4:59584:59648	5849439	0	True				
ANR	5849443	IdentifierDecl	dx = plp -> e . p . x - plp -> o . p . x		5849439	0					
ANR	5849444	IdentifierDeclType	fixed		5849439	0					
ANR	5849445	Identifier	dx		5849439	1					
ANR	5849446	AssignmentExpression	dx = plp -> e . p . x - plp -> o . p . x		5849439	2		=			
ANR	5849447	Identifier	dx		5849439	0					
ANR	5849448	AdditiveExpression	plp -> e . p . x - plp -> o . p . x		5849439	1		-			
ANR	5849449	MemberAccess	plp -> e . p . x		5849439	0					
ANR	5849450	MemberAccess	plp -> e . p		5849439	0					
ANR	5849451	PtrMemberAccess	plp -> e		5849439	0					
ANR	5849452	Identifier	plp		5849439	0					
ANR	5849453	Identifier	e		5849439	1					
ANR	5849454	Identifier	p		5849439	1					
ANR	5849455	Identifier	x		5849439	1					
ANR	5849456	MemberAccess	plp -> o . p . x		5849439	1					
ANR	5849457	MemberAccess	plp -> o . p		5849439	0					
ANR	5849458	PtrMemberAccess	plp -> o		5849439	0					
ANR	5849459	Identifier	plp		5849439	0					
ANR	5849460	Identifier	o		5849439	1					
ANR	5849461	Identifier	p		5849439	1					
ANR	5849462	Identifier	x		5849439	1					
ANR	5849463	IdentifierDecl	dy = plp -> e . p . y - plp -> o . p . y		5849439	1					
ANR	5849464	IdentifierDeclType	fixed		5849439	0					
ANR	5849465	Identifier	dy		5849439	1					
ANR	5849466	AssignmentExpression	dy = plp -> e . p . y - plp -> o . p . y		5849439	2		=			
ANR	5849467	Identifier	dy		5849439	0					
ANR	5849468	AdditiveExpression	plp -> e . p . y - plp -> o . p . y		5849439	1		-			
ANR	5849469	MemberAccess	plp -> e . p . y		5849439	0					
ANR	5849470	MemberAccess	plp -> e . p		5849439	0					
ANR	5849471	PtrMemberAccess	plp -> e		5849439	0					
ANR	5849472	Identifier	plp		5849439	0					
ANR	5849473	Identifier	e		5849439	1					
ANR	5849474	Identifier	p		5849439	1					
ANR	5849475	Identifier	y		5849439	1					
ANR	5849476	MemberAccess	plp -> o . p . y		5849439	1					
ANR	5849477	MemberAccess	plp -> o . p		5849439	0					
ANR	5849478	PtrMemberAccess	plp -> o		5849439	0					
ANR	5849479	Identifier	plp		5849439	0					
ANR	5849480	Identifier	o		5849439	1					
ANR	5849481	Identifier	p		5849439	1					
ANR	5849482	Identifier	y		5849439	1					
ANR	5849483	Statement	define	1399:1:59652:59657	5849439	1	True				
ANR	5849484	Statement	TRSIGN	1399:8:59659:59664	5849439	2	True				
ANR	5849485	Statement	(	1399:14:59665:59665	5849439	3	True				
ANR	5849486	Statement	v	1399:15:59666:59666	5849439	4	True				
ANR	5849487	Statement	","	1399:16:59667:59667	5849439	5	True				
ANR	5849488	Statement	c	1399:18:59669:59669	5849439	6	True				
ANR	5849489	Statement	)	1399:19:59670:59670	5849439	7	True				
ANR	5849490	Statement	(	1399:21:59672:59672	5849439	8	True				
ANR	5849491	Statement	(	1399:22:59673:59673	5849439	9	True				
ANR	5849492	Statement	v	1399:23:59674:59674	5849439	10	True				
ANR	5849493	Statement	)	1399:24:59675:59675	5849439	11	True				
ANR	5849494	Statement	>=	1399:26:59677:59678	5849439	12	True				
ANR	5849495	Statement	0	1399:29:59680:59680	5849439	13	True				
ANR	5849496	Statement	?	1399:31:59682:59682	5849439	14	True				
ANR	5849497	Statement	(	1399:33:59684:59684	5849439	15	True				
ANR	5849498	Statement	c	1399:34:59685:59685	5849439	16	True				
ANR	5849499	Statement	)	1399:35:59686:59686	5849439	17	True				
ANR	5849500	Statement	:	1399:37:59688:59688	5849439	18	True				
ANR	5849501	Statement	-	1399:39:59690:59690	5849439	19	True				
ANR	5849502	Statement	(	1399:40:59691:59691	5849439	20	True				
ANR	5849503	Statement	c	1399:41:59692:59692	5849439	21	True				
ANR	5849504	Statement	)	1399:42:59693:59693	5849439	22	True				
ANR	5849505	Statement	)	1399:43:59694:59694	5849439	23	True				
ANR	5849506	IfStatement	if ( any_abs ( dx ) > any_abs ( dy ) )		5849439	24					
ANR	5849507	Condition	any_abs ( dx ) > any_abs ( dy )	1400:8:59704:59728	5849439	0	True				
ANR	5849508	RelationalExpression	any_abs ( dx ) > any_abs ( dy )		5849439	0		>			
ANR	5849509	CallExpression	any_abs ( dx )		5849439	0					
ANR	5849510	Callee	any_abs		5849439	0					
ANR	5849511	Identifier	any_abs		5849439	0					
ANR	5849512	ArgumentList	dx		5849439	1					
ANR	5849513	Argument	dx		5849439	0					
ANR	5849514	Identifier	dx		5849439	0					
ANR	5849515	CallExpression	any_abs ( dy )		5849439	1					
ANR	5849516	Callee	any_abs		5849439	0					
ANR	5849517	Identifier	any_abs		5849439	0					
ANR	5849518	ArgumentList	dy		5849439	1					
ANR	5849519	Argument	dy		5849439	0					
ANR	5849520	Identifier	dy		5849439	0					
ANR	5849521	CompoundStatement		5:35:152:152	5849439	1					
ANR	5849522	ExpressionStatement	plp -> width . x = plp -> e . cdelta . y = 0	1401:8:59741:59775	5849439	0	True				
ANR	5849523	AssignmentExpression	plp -> width . x = plp -> e . cdelta . y = 0		5849439	0		=			
ANR	5849524	MemberAccess	plp -> width . x		5849439	0					
ANR	5849525	PtrMemberAccess	plp -> width		5849439	0					
ANR	5849526	Identifier	plp		5849439	0					
ANR	5849527	Identifier	width		5849439	1					
ANR	5849528	Identifier	x		5849439	1					
ANR	5849529	AssignmentExpression	plp -> e . cdelta . y = 0		5849439	1		=			
ANR	5849530	MemberAccess	plp -> e . cdelta . y		5849439	0					
ANR	5849531	MemberAccess	plp -> e . cdelta		5849439	0					
ANR	5849532	PtrMemberAccess	plp -> e		5849439	0					
ANR	5849533	Identifier	plp		5849439	0					
ANR	5849534	Identifier	e		5849439	1					
ANR	5849535	Identifier	cdelta		5849439	1					
ANR	5849536	Identifier	y		5849439	1					
ANR	5849537	PrimaryExpression	0		5849439	1					
ANR	5849538	ExpressionStatement	"plp -> width . y = plp -> e . cdelta . x = TRSIGN ( dx , fixed_half )"	1402:8:59785:59840	5849439	1	True				
ANR	5849539	AssignmentExpression	"plp -> width . y = plp -> e . cdelta . x = TRSIGN ( dx , fixed_half )"		5849439	0		=			
ANR	5849540	MemberAccess	plp -> width . y		5849439	0					
ANR	5849541	PtrMemberAccess	plp -> width		5849439	0					
ANR	5849542	Identifier	plp		5849439	0					
ANR	5849543	Identifier	width		5849439	1					
ANR	5849544	Identifier	y		5849439	1					
ANR	5849545	AssignmentExpression	"plp -> e . cdelta . x = TRSIGN ( dx , fixed_half )"		5849439	1		=			
ANR	5849546	MemberAccess	plp -> e . cdelta . x		5849439	0					
ANR	5849547	MemberAccess	plp -> e . cdelta		5849439	0					
ANR	5849548	PtrMemberAccess	plp -> e		5849439	0					
ANR	5849549	Identifier	plp		5849439	0					
ANR	5849550	Identifier	e		5849439	1					
ANR	5849551	Identifier	cdelta		5849439	1					
ANR	5849552	Identifier	x		5849439	1					
ANR	5849553	CallExpression	"TRSIGN ( dx , fixed_half )"		5849439	1					
ANR	5849554	Callee	TRSIGN		5849439	0					
ANR	5849555	Identifier	TRSIGN		5849439	0					
ANR	5849556	ArgumentList	dx		5849439	1					
ANR	5849557	Argument	dx		5849439	0					
ANR	5849558	Identifier	dx		5849439	0					
ANR	5849559	Argument	fixed_half		5849439	1					
ANR	5849560	Identifier	fixed_half		5849439	0					
ANR	5849561	ElseStatement	else		5849439	0					
ANR	5849562	CompoundStatement		8:11:274:274	5849439	0					
ANR	5849563	ExpressionStatement	plp -> width . y = plp -> e . cdelta . x = 0	1404:8:59863:59897	5849439	0	True				
ANR	5849564	AssignmentExpression	plp -> width . y = plp -> e . cdelta . x = 0		5849439	0		=			
ANR	5849565	MemberAccess	plp -> width . y		5849439	0					
ANR	5849566	PtrMemberAccess	plp -> width		5849439	0					
ANR	5849567	Identifier	plp		5849439	0					
ANR	5849568	Identifier	width		5849439	1					
ANR	5849569	Identifier	y		5849439	1					
ANR	5849570	AssignmentExpression	plp -> e . cdelta . x = 0		5849439	1		=			
ANR	5849571	MemberAccess	plp -> e . cdelta . x		5849439	0					
ANR	5849572	MemberAccess	plp -> e . cdelta		5849439	0					
ANR	5849573	PtrMemberAccess	plp -> e		5849439	0					
ANR	5849574	Identifier	plp		5849439	0					
ANR	5849575	Identifier	e		5849439	1					
ANR	5849576	Identifier	cdelta		5849439	1					
ANR	5849577	Identifier	x		5849439	1					
ANR	5849578	PrimaryExpression	0		5849439	1					
ANR	5849579	ExpressionStatement	"plp -> width . x = - ( plp -> e . cdelta . y = TRSIGN ( dy , fixed_half ) )"	1405:8:59907:59965	5849439	1	True				
ANR	5849580	AssignmentExpression	"plp -> width . x = - ( plp -> e . cdelta . y = TRSIGN ( dy , fixed_half ) )"		5849439	0		=			
ANR	5849581	MemberAccess	plp -> width . x		5849439	0					
ANR	5849582	PtrMemberAccess	plp -> width		5849439	0					
ANR	5849583	Identifier	plp		5849439	0					
ANR	5849584	Identifier	width		5849439	1					
ANR	5849585	Identifier	x		5849439	1					
ANR	5849586	UnaryOperationExpression	"- ( plp -> e . cdelta . y = TRSIGN ( dy , fixed_half ) )"		5849439	1					
ANR	5849587	UnaryOperator	-		5849439	0					
ANR	5849588	AssignmentExpression	"plp -> e . cdelta . y = TRSIGN ( dy , fixed_half )"		5849439	1		=			
ANR	5849589	MemberAccess	plp -> e . cdelta . y		5849439	0					
ANR	5849590	MemberAccess	plp -> e . cdelta		5849439	0					
ANR	5849591	PtrMemberAccess	plp -> e		5849439	0					
ANR	5849592	Identifier	plp		5849439	0					
ANR	5849593	Identifier	e		5849439	1					
ANR	5849594	Identifier	cdelta		5849439	1					
ANR	5849595	Identifier	y		5849439	1					
ANR	5849596	CallExpression	"TRSIGN ( dy , fixed_half )"		5849439	1					
ANR	5849597	Callee	TRSIGN		5849439	0					
ANR	5849598	Identifier	TRSIGN		5849439	0					
ANR	5849599	ArgumentList	dy		5849439	1					
ANR	5849600	Argument	dy		5849439	0					
ANR	5849601	Identifier	dy		5849439	0					
ANR	5849602	Argument	fixed_half		5849439	1					
ANR	5849603	Identifier	fixed_half		5849439	0					
ANR	5849604	Statement	undef	1407:1:59974:59978	5849439	25	True				
ANR	5849605	Statement	TRSIGN	1407:7:59980:59985	5849439	26	True				
ANR	5849606	ReturnType	static void		5849439	1					
ANR	5849607	Identifier	set_thin_widths		5849439	2					
ANR	5849608	ParameterList	register pl_ptr plp		5849439	3					
ANR	5849609	Parameter	register pl_ptr plp	1395:16:59557:59575	5849439	0	True				
ANR	5849610	ParameterType	register pl_ptr		5849439	0					
ANR	5849611	Identifier	plp		5849439	1					
ANR	5849612	CFGEntryNode	ENTRY		5849439		True				
ANR	5849613	CFGExitNode	EXIT		5849439		True				
ANR	5849614	Symbol	plp -> e . cdelta . x		5849439						
ANR	5849615	Symbol	plp -> width . y		5849439						
ANR	5849616	Symbol	plp -> width . x		5849439						
ANR	5849617	Symbol	plp -> e . cdelta . y		5849439						
ANR	5849618	Symbol	plp -> e . p . y		5849439						
ANR	5849619	Symbol	plp -> e . p . x		5849439						
ANR	5849620	Symbol	plp -> o . p . y		5849439						
ANR	5849621	Symbol	plp -> o . p		5849439						
ANR	5849622	Symbol	plp -> o . p . x		5849439						
ANR	5849623	Symbol	plp -> width		5849439						
ANR	5849624	Symbol	plp -> e . p		5849439						
ANR	5849625	Symbol	dx		5849439						
ANR	5849626	Symbol	plp		5849439						
ANR	5849627	Symbol	dy		5849439						
ANR	5849628	Symbol	plp -> o		5849439						
ANR	5849629	Symbol	any_abs		5849439						
ANR	5849630	Symbol	plp -> e		5849439						
ANR	5849631	Symbol	plp -> e . cdelta		5849439						
ANR	5849632	Symbol	fixed_half		5849439						
ANR	5849633	Symbol	TRSIGN		5849439						
ANR	5849634	Symbol	* plp		5849439						
ANR	5849635	Function	stroke_fill	1413:0:60139:65059							
ANR	5849636	FunctionDef	"stroke_fill (gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , register pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags)"		5849635	0					
ANR	5849637	CompoundStatement		1420:0:60520:65059	5849635	0					
ANR	5849638	IdentifierDeclStatement	const fixed lix = plp -> o . p . x ;	1421:4:60526:60554	5849635	0	True				
ANR	5849639	IdentifierDecl	lix = plp -> o . p . x		5849635	0					
ANR	5849640	IdentifierDeclType	const fixed		5849635	0					
ANR	5849641	Identifier	lix		5849635	1					
ANR	5849642	AssignmentExpression	lix = plp -> o . p . x		5849635	2		=			
ANR	5849643	Identifier	lix		5849635	0					
ANR	5849644	MemberAccess	plp -> o . p . x		5849635	1					
ANR	5849645	MemberAccess	plp -> o . p		5849635	0					
ANR	5849646	PtrMemberAccess	plp -> o		5849635	0					
ANR	5849647	Identifier	plp		5849635	0					
ANR	5849648	Identifier	o		5849635	1					
ANR	5849649	Identifier	p		5849635	1					
ANR	5849650	Identifier	x		5849635	1					
ANR	5849651	IdentifierDeclStatement	const fixed liy = plp -> o . p . y ;	1422:4:60560:60588	5849635	1	True				
ANR	5849652	IdentifierDecl	liy = plp -> o . p . y		5849635	0					
ANR	5849653	IdentifierDeclType	const fixed		5849635	0					
ANR	5849654	Identifier	liy		5849635	1					
ANR	5849655	AssignmentExpression	liy = plp -> o . p . y		5849635	2		=			
ANR	5849656	Identifier	liy		5849635	0					
ANR	5849657	MemberAccess	plp -> o . p . y		5849635	1					
ANR	5849658	MemberAccess	plp -> o . p		5849635	0					
ANR	5849659	PtrMemberAccess	plp -> o		5849635	0					
ANR	5849660	Identifier	plp		5849635	0					
ANR	5849661	Identifier	o		5849635	1					
ANR	5849662	Identifier	p		5849635	1					
ANR	5849663	Identifier	y		5849635	1					
ANR	5849664	IdentifierDeclStatement	const fixed litox = plp -> e . p . x ;	1423:4:60594:60624	5849635	2	True				
ANR	5849665	IdentifierDecl	litox = plp -> e . p . x		5849635	0					
ANR	5849666	IdentifierDeclType	const fixed		5849635	0					
ANR	5849667	Identifier	litox		5849635	1					
ANR	5849668	AssignmentExpression	litox = plp -> e . p . x		5849635	2		=			
ANR	5849669	Identifier	litox		5849635	0					
ANR	5849670	MemberAccess	plp -> e . p . x		5849635	1					
ANR	5849671	MemberAccess	plp -> e . p		5849635	0					
ANR	5849672	PtrMemberAccess	plp -> e		5849635	0					
ANR	5849673	Identifier	plp		5849635	0					
ANR	5849674	Identifier	e		5849635	1					
ANR	5849675	Identifier	p		5849635	1					
ANR	5849676	Identifier	x		5849635	1					
ANR	5849677	IdentifierDeclStatement	const fixed litoy = plp -> e . p . y ;	1424:4:60630:60660	5849635	3	True				
ANR	5849678	IdentifierDecl	litoy = plp -> e . p . y		5849635	0					
ANR	5849679	IdentifierDeclType	const fixed		5849635	0					
ANR	5849680	Identifier	litoy		5849635	1					
ANR	5849681	AssignmentExpression	litoy = plp -> e . p . y		5849635	2		=			
ANR	5849682	Identifier	litoy		5849635	0					
ANR	5849683	MemberAccess	plp -> e . p . y		5849635	1					
ANR	5849684	MemberAccess	plp -> e . p		5849635	0					
ANR	5849685	PtrMemberAccess	plp -> e		5849635	0					
ANR	5849686	Identifier	plp		5849635	0					
ANR	5849687	Identifier	e		5849635	1					
ANR	5849688	Identifier	p		5849635	1					
ANR	5849689	Identifier	y		5849635	1					
ANR	5849690	IfStatement	if ( plp -> thin )		5849635	4					
ANR	5849691	Condition	plp -> thin	1427:8:60721:60729	5849635	0	True				
ANR	5849692	PtrMemberAccess	plp -> thin		5849635	0					
ANR	5849693	Identifier	plp		5849635	0					
ANR	5849694	Identifier	thin		5849635	1					
ANR	5849695	CompoundStatement		8:19:211:211	5849635	1					
ANR	5849696	ReturnStatement	"return ( * dev_proc ( dev , draw_thin_line ) ) ( dev , lix , liy , litox , litoy , pdevc , pgs -> log_op , pgs -> fill_adjust . x , pgs -> fill_adjust . y ) ;"	1429:8:60818:61090	5849635	0	True				
ANR	5849697	CallExpression	"( * dev_proc ( dev , draw_thin_line ) ) ( dev , lix , liy , litox , litoy , pdevc , pgs -> log_op , pgs -> fill_adjust . x , pgs -> fill_adjust . y )"		5849635	0					
ANR	5849698	Callee	"* dev_proc ( dev , draw_thin_line )"		5849635	0					
ANR	5849699	UnaryOperationExpression	"* dev_proc ( dev , draw_thin_line )"		5849635	0					
ANR	5849700	UnaryOperator	*		5849635	0					
ANR	5849701	CallExpression	"dev_proc ( dev , draw_thin_line )"		5849635	1					
ANR	5849702	Callee	dev_proc		5849635	0					
ANR	5849703	Identifier	dev_proc		5849635	0					
ANR	5849704	ArgumentList	dev		5849635	1					
ANR	5849705	Argument	dev		5849635	0					
ANR	5849706	Identifier	dev		5849635	0					
ANR	5849707	Argument	draw_thin_line		5849635	1					
ANR	5849708	Identifier	draw_thin_line		5849635	0					
ANR	5849709	ArgumentList	dev		5849635	1					
ANR	5849710	Argument	dev		5849635	0					
ANR	5849711	Identifier	dev		5849635	0					
ANR	5849712	Argument	lix		5849635	1					
ANR	5849713	Identifier	lix		5849635	0					
ANR	5849714	Argument	liy		5849635	2					
ANR	5849715	Identifier	liy		5849635	0					
ANR	5849716	Argument	litox		5849635	3					
ANR	5849717	Identifier	litox		5849635	0					
ANR	5849718	Argument	litoy		5849635	4					
ANR	5849719	Identifier	litoy		5849635	0					
ANR	5849720	Argument	pdevc		5849635	5					
ANR	5849721	Identifier	pdevc		5849635	0					
ANR	5849722	Argument	pgs -> log_op		5849635	6					
ANR	5849723	PtrMemberAccess	pgs -> log_op		5849635	0					
ANR	5849724	Identifier	pgs		5849635	0					
ANR	5849725	Identifier	log_op		5849635	1					
ANR	5849726	Argument	pgs -> fill_adjust . x		5849635	7					
ANR	5849727	MemberAccess	pgs -> fill_adjust . x		5849635	0					
ANR	5849728	PtrMemberAccess	pgs -> fill_adjust		5849635	0					
ANR	5849729	Identifier	pgs		5849635	0					
ANR	5849730	Identifier	fill_adjust		5849635	1					
ANR	5849731	Identifier	x		5849635	1					
ANR	5849732	Argument	pgs -> fill_adjust . y		5849635	8					
ANR	5849733	MemberAccess	pgs -> fill_adjust . y		5849635	0					
ANR	5849734	PtrMemberAccess	pgs -> fill_adjust		5849635	0					
ANR	5849735	Identifier	pgs		5849635	0					
ANR	5849736	Identifier	fill_adjust		5849635	1					
ANR	5849737	Identifier	y		5849635	1					
ANR	5849738	CompoundStatement		20:8:841:957	5849635	5					
ANR	5849739	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	1436:8:61161:61224	5849635	0	True				
ANR	5849740	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		5849635	0					
ANR	5849741	IdentifierDeclType	const gx_line_params *		5849635	0					
ANR	5849742	Identifier	pgs_lp		5849635	1					
ANR	5849743	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		5849635	2		=			
ANR	5849744	Identifier	pgs_lp		5849635	0					
ANR	5849745	CallExpression	gs_currentlineparams_inline ( pgs )		5849635	1					
ANR	5849746	Callee	gs_currentlineparams_inline		5849635	0					
ANR	5849747	Identifier	gs_currentlineparams_inline		5849635	0					
ANR	5849748	ArgumentList	pgs		5849635	1					
ANR	5849749	Argument	pgs		5849635	0					
ANR	5849750	Identifier	pgs		5849635	0					
ANR	5849751	IdentifierDeclStatement	gs_line_cap start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap ) ;	1437:8:61234:61352	5849635	1	True				
ANR	5849752	IdentifierDecl	start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap )		5849635	0					
ANR	5849753	IdentifierDeclType	gs_line_cap		5849635	0					
ANR	5849754	Identifier	start_cap		5849635	1					
ANR	5849755	AssignmentExpression	start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap )		5849635	2		=			
ANR	5849756	Identifier	start_cap		5849635	0					
ANR	5849757	ConditionalExpression	flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap		5849635	1					
ANR	5849758	Condition	flags & nf_dash_head		5849635	0					
ANR	5849759	BitAndExpression	flags & nf_dash_head		5849635	0		&			
ANR	5849760	Identifier	flags		5849635	0					
ANR	5849761	Identifier	nf_dash_head		5849635	1					
ANR	5849762	PtrMemberAccess	pgs_lp -> dash_cap		5849635	1					
ANR	5849763	Identifier	pgs_lp		5849635	0					
ANR	5849764	Identifier	dash_cap		5849635	1					
ANR	5849765	PtrMemberAccess	pgs_lp -> start_cap		5849635	2					
ANR	5849766	Identifier	pgs_lp		5849635	0					
ANR	5849767	Identifier	start_cap		5849635	1					
ANR	5849768	IdentifierDeclStatement	gs_line_cap end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap ) ;	1439:8:61362:61478	5849635	2	True				
ANR	5849769	IdentifierDecl	end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap )		5849635	0					
ANR	5849770	IdentifierDeclType	gs_line_cap		5849635	0					
ANR	5849771	Identifier	end_cap		5849635	1					
ANR	5849772	AssignmentExpression	end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap )		5849635	2		=			
ANR	5849773	Identifier	end_cap		5849635	0					
ANR	5849774	ConditionalExpression	flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap		5849635	1					
ANR	5849775	Condition	flags & nf_dash_tail		5849635	0					
ANR	5849776	BitAndExpression	flags & nf_dash_tail		5849635	0		&			
ANR	5849777	Identifier	flags		5849635	0					
ANR	5849778	Identifier	nf_dash_tail		5849635	1					
ANR	5849779	PtrMemberAccess	pgs_lp -> dash_cap		5849635	1					
ANR	5849780	Identifier	pgs_lp		5849635	0					
ANR	5849781	Identifier	dash_cap		5849635	1					
ANR	5849782	PtrMemberAccess	pgs_lp -> end_cap		5849635	2					
ANR	5849783	Identifier	pgs_lp		5849635	0					
ANR	5849784	Identifier	end_cap		5849635	1					
ANR	5849785	IfStatement	if ( first != 0 )		5849635	3					
ANR	5849786	Condition	first != 0	1442:12:61493:61502	5849635	0	True				
ANR	5849787	EqualityExpression	first != 0		5849635	0		!=			
ANR	5849788	Identifier	first		5849635	0					
ANR	5849789	PrimaryExpression	0		5849635	1					
ANR	5849790	ExpressionStatement	start_cap = gs_cap_butt	1443:12:61517:61540	5849635	1	True				
ANR	5849791	AssignmentExpression	start_cap = gs_cap_butt		5849635	0		=			
ANR	5849792	Identifier	start_cap		5849635	0					
ANR	5849793	Identifier	gs_cap_butt		5849635	1					
ANR	5849794	IfStatement	if ( nplp != 0 )		5849635	4					
ANR	5849795	Condition	nplp != 0	1444:12:61554:61562	5849635	0	True				
ANR	5849796	EqualityExpression	nplp != 0		5849635	0		!=			
ANR	5849797	Identifier	nplp		5849635	0					
ANR	5849798	PrimaryExpression	0		5849635	1					
ANR	5849799	ExpressionStatement	end_cap = gs_cap_butt	1445:12:61577:61598	5849635	1	True				
ANR	5849800	AssignmentExpression	end_cap = gs_cap_butt		5849635	0		=			
ANR	5849801	Identifier	end_cap		5849635	0					
ANR	5849802	Identifier	gs_cap_butt		5849635	1					
ANR	5849803	IfStatement	if ( ! plp -> thin && ( nplp == 0 || ! nplp -> thin ) && ( start_cap == gs_cap_butt || start_cap == gs_cap_square ) && ( end_cap == gs_cap_butt || end_cap == gs_cap_square ) && ( join == gs_join_bevel || join == gs_join_miter || join == gs_join_none ) && ( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0 )		5849635	5					
ANR	5849804	Condition	! plp -> thin && ( nplp == 0 || ! nplp -> thin ) && ( start_cap == gs_cap_butt || start_cap == gs_cap_square ) && ( end_cap == gs_cap_butt || end_cap == gs_cap_square ) && ( join == gs_join_bevel || join == gs_join_miter || join == gs_join_none ) && ( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0	1446:12:61612:61961	5849635	0	True				
ANR	5849805	AndExpression	! plp -> thin && ( nplp == 0 || ! nplp -> thin ) && ( start_cap == gs_cap_butt || start_cap == gs_cap_square ) && ( end_cap == gs_cap_butt || end_cap == gs_cap_square ) && ( join == gs_join_bevel || join == gs_join_miter || join == gs_join_none ) && ( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0		5849635	0		&&			
ANR	5849806	UnaryOperationExpression	! plp -> thin		5849635	0					
ANR	5849807	UnaryOperator	!		5849635	0					
ANR	5849808	PtrMemberAccess	plp -> thin		5849635	1					
ANR	5849809	Identifier	plp		5849635	0					
ANR	5849810	Identifier	thin		5849635	1					
ANR	5849811	AndExpression	( nplp == 0 || ! nplp -> thin ) && ( start_cap == gs_cap_butt || start_cap == gs_cap_square ) && ( end_cap == gs_cap_butt || end_cap == gs_cap_square ) && ( join == gs_join_bevel || join == gs_join_miter || join == gs_join_none ) && ( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0		5849635	1		&&			
ANR	5849812	OrExpression	nplp == 0 || ! nplp -> thin		5849635	0		||			
ANR	5849813	EqualityExpression	nplp == 0		5849635	0		==			
ANR	5849814	Identifier	nplp		5849635	0					
ANR	5849815	PrimaryExpression	0		5849635	1					
ANR	5849816	UnaryOperationExpression	! nplp -> thin		5849635	1					
ANR	5849817	UnaryOperator	!		5849635	0					
ANR	5849818	PtrMemberAccess	nplp -> thin		5849635	1					
ANR	5849819	Identifier	nplp		5849635	0					
ANR	5849820	Identifier	thin		5849635	1					
ANR	5849821	AndExpression	( start_cap == gs_cap_butt || start_cap == gs_cap_square ) && ( end_cap == gs_cap_butt || end_cap == gs_cap_square ) && ( join == gs_join_bevel || join == gs_join_miter || join == gs_join_none ) && ( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0		5849635	1		&&			
ANR	5849822	OrExpression	start_cap == gs_cap_butt || start_cap == gs_cap_square		5849635	0		||			
ANR	5849823	EqualityExpression	start_cap == gs_cap_butt		5849635	0		==			
ANR	5849824	Identifier	start_cap		5849635	0					
ANR	5849825	Identifier	gs_cap_butt		5849635	1					
ANR	5849826	EqualityExpression	start_cap == gs_cap_square		5849635	1		==			
ANR	5849827	Identifier	start_cap		5849635	0					
ANR	5849828	Identifier	gs_cap_square		5849635	1					
ANR	5849829	AndExpression	( end_cap == gs_cap_butt || end_cap == gs_cap_square ) && ( join == gs_join_bevel || join == gs_join_miter || join == gs_join_none ) && ( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0		5849635	1		&&			
ANR	5849830	OrExpression	end_cap == gs_cap_butt || end_cap == gs_cap_square		5849635	0		||			
ANR	5849831	EqualityExpression	end_cap == gs_cap_butt		5849635	0		==			
ANR	5849832	Identifier	end_cap		5849635	0					
ANR	5849833	Identifier	gs_cap_butt		5849635	1					
ANR	5849834	EqualityExpression	end_cap == gs_cap_square		5849635	1		==			
ANR	5849835	Identifier	end_cap		5849635	0					
ANR	5849836	Identifier	gs_cap_square		5849635	1					
ANR	5849837	AndExpression	( join == gs_join_bevel || join == gs_join_miter || join == gs_join_none ) && ( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0		5849635	1		&&			
ANR	5849838	OrExpression	join == gs_join_bevel || join == gs_join_miter || join == gs_join_none		5849635	0		||			
ANR	5849839	EqualityExpression	join == gs_join_bevel		5849635	0		==			
ANR	5849840	Identifier	join		5849635	0					
ANR	5849841	Identifier	gs_join_bevel		5849635	1					
ANR	5849842	OrExpression	join == gs_join_miter || join == gs_join_none		5849635	1		||			
ANR	5849843	EqualityExpression	join == gs_join_miter		5849635	0		==			
ANR	5849844	Identifier	join		5849635	0					
ANR	5849845	Identifier	gs_join_miter		5849635	1					
ANR	5849846	EqualityExpression	join == gs_join_none		5849635	1		==			
ANR	5849847	Identifier	join		5849635	0					
ANR	5849848	Identifier	gs_join_none		5849635	1					
ANR	5849849	EqualityExpression	( pgs -> fill_adjust . x | pgs -> fill_adjust . y ) == 0		5849635	1		==			
ANR	5849850	InclusiveOrExpression	pgs -> fill_adjust . x | pgs -> fill_adjust . y		5849635	0		|			
ANR	5849851	MemberAccess	pgs -> fill_adjust . x		5849635	0					
ANR	5849852	PtrMemberAccess	pgs -> fill_adjust		5849635	0					
ANR	5849853	Identifier	pgs		5849635	0					
ANR	5849854	Identifier	fill_adjust		5849635	1					
ANR	5849855	Identifier	x		5849635	1					
ANR	5849856	MemberAccess	pgs -> fill_adjust . y		5849635	1					
ANR	5849857	PtrMemberAccess	pgs -> fill_adjust		5849635	0					
ANR	5849858	Identifier	pgs		5849635	0					
ANR	5849859	Identifier	fill_adjust		5849635	1					
ANR	5849860	Identifier	y		5849635	1					
ANR	5849861	PrimaryExpression	0		5849635	1					
ANR	5849862	CompoundStatement		36:12:1539:1559	5849635	1					
ANR	5849863	IdentifierDeclStatement	gs_fixed_point points [ 6 ] ;	1453:12:61991:62015	5849635	0	True				
ANR	5849864	IdentifierDecl	points [ 6 ]		5849635	0					
ANR	5849865	IdentifierDeclType	gs_fixed_point [ 6 ]		5849635	0					
ANR	5849866	Identifier	points		5849635	1					
ANR	5849867	PrimaryExpression	6		5849635	2					
ANR	5849868	IdentifierDeclStatement	"int npoints , code ;"	1454:12:62029:62046	5849635	1	True				
ANR	5849869	IdentifierDecl	npoints		5849635	0					
ANR	5849870	IdentifierDeclType	int		5849635	0					
ANR	5849871	Identifier	npoints		5849635	1					
ANR	5849872	IdentifierDecl	code		5849635	1					
ANR	5849873	IdentifierDeclType	int		5849635	0					
ANR	5849874	Identifier	code		5849635	1					
ANR	5849875	IdentifierDeclStatement	"fixed ax , ay , bx , by ;"	1455:12:62060:62080	5849635	2	True				
ANR	5849876	IdentifierDecl	ax		5849635	0					
ANR	5849877	IdentifierDeclType	fixed		5849635	0					
ANR	5849878	Identifier	ax		5849635	1					
ANR	5849879	IdentifierDecl	ay		5849635	1					
ANR	5849880	IdentifierDeclType	fixed		5849635	0					
ANR	5849881	Identifier	ay		5849635	1					
ANR	5849882	IdentifierDecl	bx		5849635	2					
ANR	5849883	IdentifierDeclType	fixed		5849635	0					
ANR	5849884	Identifier	bx		5849635	1					
ANR	5849885	IdentifierDecl	by		5849635	3					
ANR	5849886	IdentifierDeclType	fixed		5849635	0					
ANR	5849887	Identifier	by		5849635	1					
ANR	5849888	ExpressionStatement	"npoints = cap_points ( start_cap , & plp -> o , points )"	1457:12:62095:62143	5849635	3	True				
ANR	5849889	AssignmentExpression	"npoints = cap_points ( start_cap , & plp -> o , points )"		5849635	0		=			
ANR	5849890	Identifier	npoints		5849635	0					
ANR	5849891	CallExpression	"cap_points ( start_cap , & plp -> o , points )"		5849635	1					
ANR	5849892	Callee	cap_points		5849635	0					
ANR	5849893	Identifier	cap_points		5849635	0					
ANR	5849894	ArgumentList	start_cap		5849635	1					
ANR	5849895	Argument	start_cap		5849635	0					
ANR	5849896	Identifier	start_cap		5849635	0					
ANR	5849897	Argument	& plp -> o		5849635	1					
ANR	5849898	UnaryOperationExpression	& plp -> o		5849635	0					
ANR	5849899	UnaryOperator	&		5849635	0					
ANR	5849900	PtrMemberAccess	plp -> o		5849635	1					
ANR	5849901	Identifier	plp		5849635	0					
ANR	5849902	Identifier	o		5849635	1					
ANR	5849903	Argument	points		5849635	2					
ANR	5849904	Identifier	points		5849635	0					
ANR	5849905	IfStatement	if ( nplp == 0 )		5849635	4					
ANR	5849906	Condition	nplp == 0	1458:16:62161:62169	5849635	0	True				
ANR	5849907	EqualityExpression	nplp == 0		5849635	0		==			
ANR	5849908	Identifier	nplp		5849635	0					
ANR	5849909	PrimaryExpression	0		5849635	1					
ANR	5849910	ExpressionStatement	"code = cap_points ( end_cap , & plp -> e , points + npoints )"	1459:16:62188:62241	5849635	1	True				
ANR	5849911	AssignmentExpression	"code = cap_points ( end_cap , & plp -> e , points + npoints )"		5849635	0		=			
ANR	5849912	Identifier	code		5849635	0					
ANR	5849913	CallExpression	"cap_points ( end_cap , & plp -> e , points + npoints )"		5849635	1					
ANR	5849914	Callee	cap_points		5849635	0					
ANR	5849915	Identifier	cap_points		5849635	0					
ANR	5849916	ArgumentList	end_cap		5849635	1					
ANR	5849917	Argument	end_cap		5849635	0					
ANR	5849918	Identifier	end_cap		5849635	0					
ANR	5849919	Argument	& plp -> e		5849635	1					
ANR	5849920	UnaryOperationExpression	& plp -> e		5849635	0					
ANR	5849921	UnaryOperator	&		5849635	0					
ANR	5849922	PtrMemberAccess	plp -> e		5849635	1					
ANR	5849923	Identifier	plp		5849635	0					
ANR	5849924	Identifier	e		5849635	1					
ANR	5849925	Argument	points + npoints		5849635	2					
ANR	5849926	AdditiveExpression	points + npoints		5849635	0		+			
ANR	5849927	Identifier	points		5849635	0					
ANR	5849928	Identifier	npoints		5849635	1					
ANR	5849929	ElseStatement	else		5849635	0					
ANR	5849930	ExpressionStatement	"code = line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"	1461:16:62276:62480	5849635	0	True				
ANR	5849931	AssignmentExpression	"code = line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5849635	0		=			
ANR	5849932	Identifier	code		5849635	0					
ANR	5849933	CallExpression	"line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5849635	1					
ANR	5849934	Callee	line_join_points		5849635	0					
ANR	5849935	Identifier	line_join_points		5849635	0					
ANR	5849936	ArgumentList	pgs_lp		5849635	1					
ANR	5849937	Argument	pgs_lp		5849635	0					
ANR	5849938	Identifier	pgs_lp		5849635	0					
ANR	5849939	Argument	plp		5849635	1					
ANR	5849940	Identifier	plp		5849635	0					
ANR	5849941	Argument	nplp		5849635	2					
ANR	5849942	Identifier	nplp		5849635	0					
ANR	5849943	Argument	points + npoints		5849635	3					
ANR	5849944	AdditiveExpression	points + npoints		5849635	0		+			
ANR	5849945	Identifier	points		5849635	0					
ANR	5849946	Identifier	npoints		5849635	1					
ANR	5849947	Argument	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5849635	4					
ANR	5849948	ConditionalExpression	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5849635	0					
ANR	5849949	Condition	uniform		5849635	0					
ANR	5849950	Identifier	uniform		5849635	0					
ANR	5849951	CastExpression	( gs_matrix * ) 0		5849635	1					
ANR	5849952	CastTarget	gs_matrix *		5849635	0					
ANR	5849953	PrimaryExpression	0		5849635	1					
ANR	5849954	UnaryOperationExpression	& ctm_only ( pgs )		5849635	2					
ANR	5849955	UnaryOperator	&		5849635	0					
ANR	5849956	CallExpression	ctm_only ( pgs )		5849635	1					
ANR	5849957	Callee	ctm_only		5849635	0					
ANR	5849958	Identifier	ctm_only		5849635	0					
ANR	5849959	ArgumentList	pgs		5849635	1					
ANR	5849960	Argument	pgs		5849635	0					
ANR	5849961	Identifier	pgs		5849635	0					
ANR	5849962	Argument	join		5849635	5					
ANR	5849963	Identifier	join		5849635	0					
ANR	5849964	Argument	reflected		5849635	6					
ANR	5849965	Identifier	reflected		5849635	0					
ANR	5849966	IfStatement	if ( code < 0 )		5849635	5					
ANR	5849967	Condition	code < 0	1464:16:62498:62505	5849635	0	True				
ANR	5849968	RelationalExpression	code < 0		5849635	0		<			
ANR	5849969	Identifier	code		5849635	0					
ANR	5849970	PrimaryExpression	0		5849635	1					
ANR	5849971	GotoStatement	goto general ;	1465:16:62524:62536	5849635	1	True				
ANR	5849972	Identifier	general		5849635	0					
ANR	5849973	Statement	define	1467:1:62606:62611	5849635	6	True				
ANR	5849974	Statement	SUB_OVERFLOWS	1467:8:62613:62625	5849635	7	True				
ANR	5849975	Statement	(	1467:21:62626:62626	5849635	8	True				
ANR	5849976	Statement	r	1467:22:62627:62627	5849635	9	True				
ANR	5849977	Statement	","	1467:23:62628:62628	5849635	10	True				
ANR	5849978	Statement	u	1467:25:62630:62630	5849635	11	True				
ANR	5849979	Statement	","	1467:26:62631:62631	5849635	12	True				
ANR	5849980	Statement	v	1467:28:62633:62633	5849635	13	True				
ANR	5849981	Statement	)	1467:29:62634:62634	5849635	14	True				
ANR	5849982	Statement	(	1468:2:62639:62639	5849635	15	True				
ANR	5849983	Statement	(	1468:3:62640:62640	5849635	16	True				
ANR	5849984	Statement	(	1468:4:62641:62641	5849635	17	True				
ANR	5849985	Statement	r	1468:5:62642:62642	5849635	18	True				
ANR	5849986	Statement	=	1468:7:62644:62644	5849635	19	True				
ANR	5849987	Statement	u	1468:9:62646:62646	5849635	20	True				
ANR	5849988	Statement	-	1468:11:62648:62648	5849635	21	True				
ANR	5849989	Statement	v	1468:13:62650:62650	5849635	22	True				
ANR	5849990	Statement	)	1468:14:62651:62651	5849635	23	True				
ANR	5849991	Statement	^	1468:16:62653:62653	5849635	24	True				
ANR	5849992	Statement	u	1468:18:62655:62655	5849635	25	True				
ANR	5849993	Statement	)	1468:19:62656:62656	5849635	26	True				
ANR	5849994	Statement	<	1468:21:62658:62658	5849635	27	True				
ANR	5849995	Statement	0	1468:23:62660:62660	5849635	28	True				
ANR	5849996	Statement	&&	1468:25:62662:62663	5849635	29	True				
ANR	5849997	Statement	(	1468:28:62665:62665	5849635	30	True				
ANR	5849998	Statement	u	1468:29:62666:62666	5849635	31	True				
ANR	5849999	Statement	^	1468:31:62668:62668	5849635	32	True				
ANR	5850000	Statement	v	1468:33:62670:62670	5849635	33	True				
ANR	5850001	Statement	)	1468:34:62671:62671	5849635	34	True				
ANR	5850002	Statement	<	1468:36:62673:62673	5849635	35	True				
ANR	5850003	Statement	0	1468:38:62675:62675	5849635	36	True				
ANR	5850004	Statement	)	1468:39:62676:62676	5849635	37	True				
ANR	5850005	IfStatement	"if ( SUB_OVERFLOWS ( ax , points [ 0 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( ay , points [ 0 ] . y , points [ 1 ] . y ) || SUB_OVERFLOWS ( bx , points [ 2 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( by , points [ 2 ] . y , points [ 1 ] . y ) )"		5849635	38					
ANR	5850006	Condition	"SUB_OVERFLOWS ( ax , points [ 0 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( ay , points [ 0 ] . y , points [ 1 ] . y ) || SUB_OVERFLOWS ( bx , points [ 2 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( by , points [ 2 ] . y , points [ 1 ] . y )"	1469:16:62694:62925	5849635	0	True				
ANR	5850007	OrExpression	"SUB_OVERFLOWS ( ax , points [ 0 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( ay , points [ 0 ] . y , points [ 1 ] . y ) || SUB_OVERFLOWS ( bx , points [ 2 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( by , points [ 2 ] . y , points [ 1 ] . y )"		5849635	0		||			
ANR	5850008	CallExpression	"SUB_OVERFLOWS ( ax , points [ 0 ] . x , points [ 1 ] . x )"		5849635	0					
ANR	5850009	Callee	SUB_OVERFLOWS		5849635	0					
ANR	5850010	Identifier	SUB_OVERFLOWS		5849635	0					
ANR	5850011	ArgumentList	ax		5849635	1					
ANR	5850012	Argument	ax		5849635	0					
ANR	5850013	Identifier	ax		5849635	0					
ANR	5850014	Argument	points [ 0 ] . x		5849635	1					
ANR	5850015	MemberAccess	points [ 0 ] . x		5849635	0					
ANR	5850016	ArrayIndexing	points [ 0 ]		5849635	0					
ANR	5850017	Identifier	points		5849635	0					
ANR	5850018	PrimaryExpression	0		5849635	1					
ANR	5850019	Identifier	x		5849635	1					
ANR	5850020	Argument	points [ 1 ] . x		5849635	2					
ANR	5850021	MemberAccess	points [ 1 ] . x		5849635	0					
ANR	5850022	ArrayIndexing	points [ 1 ]		5849635	0					
ANR	5850023	Identifier	points		5849635	0					
ANR	5850024	PrimaryExpression	1		5849635	1					
ANR	5850025	Identifier	x		5849635	1					
ANR	5850026	OrExpression	"SUB_OVERFLOWS ( ay , points [ 0 ] . y , points [ 1 ] . y ) || SUB_OVERFLOWS ( bx , points [ 2 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( by , points [ 2 ] . y , points [ 1 ] . y )"		5849635	1		||			
ANR	5850027	CallExpression	"SUB_OVERFLOWS ( ay , points [ 0 ] . y , points [ 1 ] . y )"		5849635	0					
ANR	5850028	Callee	SUB_OVERFLOWS		5849635	0					
ANR	5850029	Identifier	SUB_OVERFLOWS		5849635	0					
ANR	5850030	ArgumentList	ay		5849635	1					
ANR	5850031	Argument	ay		5849635	0					
ANR	5850032	Identifier	ay		5849635	0					
ANR	5850033	Argument	points [ 0 ] . y		5849635	1					
ANR	5850034	MemberAccess	points [ 0 ] . y		5849635	0					
ANR	5850035	ArrayIndexing	points [ 0 ]		5849635	0					
ANR	5850036	Identifier	points		5849635	0					
ANR	5850037	PrimaryExpression	0		5849635	1					
ANR	5850038	Identifier	y		5849635	1					
ANR	5850039	Argument	points [ 1 ] . y		5849635	2					
ANR	5850040	MemberAccess	points [ 1 ] . y		5849635	0					
ANR	5850041	ArrayIndexing	points [ 1 ]		5849635	0					
ANR	5850042	Identifier	points		5849635	0					
ANR	5850043	PrimaryExpression	1		5849635	1					
ANR	5850044	Identifier	y		5849635	1					
ANR	5850045	OrExpression	"SUB_OVERFLOWS ( bx , points [ 2 ] . x , points [ 1 ] . x ) || SUB_OVERFLOWS ( by , points [ 2 ] . y , points [ 1 ] . y )"		5849635	1		||			
ANR	5850046	CallExpression	"SUB_OVERFLOWS ( bx , points [ 2 ] . x , points [ 1 ] . x )"		5849635	0					
ANR	5850047	Callee	SUB_OVERFLOWS		5849635	0					
ANR	5850048	Identifier	SUB_OVERFLOWS		5849635	0					
ANR	5850049	ArgumentList	bx		5849635	1					
ANR	5850050	Argument	bx		5849635	0					
ANR	5850051	Identifier	bx		5849635	0					
ANR	5850052	Argument	points [ 2 ] . x		5849635	1					
ANR	5850053	MemberAccess	points [ 2 ] . x		5849635	0					
ANR	5850054	ArrayIndexing	points [ 2 ]		5849635	0					
ANR	5850055	Identifier	points		5849635	0					
ANR	5850056	PrimaryExpression	2		5849635	1					
ANR	5850057	Identifier	x		5849635	1					
ANR	5850058	Argument	points [ 1 ] . x		5849635	2					
ANR	5850059	MemberAccess	points [ 1 ] . x		5849635	0					
ANR	5850060	ArrayIndexing	points [ 1 ]		5849635	0					
ANR	5850061	Identifier	points		5849635	0					
ANR	5850062	PrimaryExpression	1		5849635	1					
ANR	5850063	Identifier	x		5849635	1					
ANR	5850064	CallExpression	"SUB_OVERFLOWS ( by , points [ 2 ] . y , points [ 1 ] . y )"		5849635	1					
ANR	5850065	Callee	SUB_OVERFLOWS		5849635	0					
ANR	5850066	Identifier	SUB_OVERFLOWS		5849635	0					
ANR	5850067	ArgumentList	by		5849635	1					
ANR	5850068	Argument	by		5849635	0					
ANR	5850069	Identifier	by		5849635	0					
ANR	5850070	Argument	points [ 2 ] . y		5849635	1					
ANR	5850071	MemberAccess	points [ 2 ] . y		5849635	0					
ANR	5850072	ArrayIndexing	points [ 2 ]		5849635	0					
ANR	5850073	Identifier	points		5849635	0					
ANR	5850074	PrimaryExpression	2		5849635	1					
ANR	5850075	Identifier	y		5849635	1					
ANR	5850076	Argument	points [ 1 ] . y		5849635	2					
ANR	5850077	MemberAccess	points [ 1 ] . y		5849635	0					
ANR	5850078	ArrayIndexing	points [ 1 ]		5849635	0					
ANR	5850079	Identifier	points		5849635	0					
ANR	5850080	PrimaryExpression	1		5849635	1					
ANR	5850081	Identifier	y		5849635	1					
ANR	5850082	GotoStatement	goto general ;	1474:16:62961:62973	5849635	1	True				
ANR	5850083	Identifier	general		5849635	0					
ANR	5850084	Statement	undef	1475:1:62976:62980	5849635	39	True				
ANR	5850085	Statement	SUB_OVERFLOWS	1475:7:62982:62994	5849635	40	True				
ANR	5850086	IfStatement	if ( nplp != 0 )		5849635	41					
ANR	5850087	Condition	nplp != 0	1476:16:63012:63020	5849635	0	True				
ANR	5850088	EqualityExpression	nplp != 0		5849635	0		!=			
ANR	5850089	Identifier	nplp		5849635	0					
ANR	5850090	PrimaryExpression	0		5849635	1					
ANR	5850091	CompoundStatement		57:27:2502:2502	5849635	1					
ANR	5850092	IfStatement	if ( join == gs_join_miter )		5849635	0					
ANR	5850093	Condition	join == gs_join_miter	1477:20:63045:63065	5849635	0	True				
ANR	5850094	EqualityExpression	join == gs_join_miter		5849635	0		==			
ANR	5850095	Identifier	join		5849635	0					
ANR	5850096	Identifier	gs_join_miter		5849635	1					
ANR	5850097	CompoundStatement		58:43:2547:2547	5849635	1					
ANR	5850098	IfStatement	if ( ! ( points [ 2 ] . x == plp -> e . co . x && points [ 2 ] . y == plp -> e . co . y && points [ 5 ] . x == plp -> e . ce . x && points [ 5 ] . y == plp -> e . ce . y ) )		5849635	0					
ANR	5850099	Condition	! ( points [ 2 ] . x == plp -> e . co . x && points [ 2 ] . y == plp -> e . co . y && points [ 5 ] . x == plp -> e . ce . x && points [ 5 ] . y == plp -> e . ce . y )	1479:24:63163:63359	5849635	0	True				
ANR	5850100	UnaryOperationExpression	! ( points [ 2 ] . x == plp -> e . co . x && points [ 2 ] . y == plp -> e . co . y && points [ 5 ] . x == plp -> e . ce . x && points [ 5 ] . y == plp -> e . ce . y )		5849635	0					
ANR	5850101	UnaryOperator	!		5849635	0					
ANR	5850102	AndExpression	points [ 2 ] . x == plp -> e . co . x && points [ 2 ] . y == plp -> e . co . y && points [ 5 ] . x == plp -> e . ce . x && points [ 5 ] . y == plp -> e . ce . y		5849635	1		&&			
ANR	5850103	EqualityExpression	points [ 2 ] . x == plp -> e . co . x		5849635	0		==			
ANR	5850104	MemberAccess	points [ 2 ] . x		5849635	0					
ANR	5850105	ArrayIndexing	points [ 2 ]		5849635	0					
ANR	5850106	Identifier	points		5849635	0					
ANR	5850107	PrimaryExpression	2		5849635	1					
ANR	5850108	Identifier	x		5849635	1					
ANR	5850109	MemberAccess	plp -> e . co . x		5849635	1					
ANR	5850110	MemberAccess	plp -> e . co		5849635	0					
ANR	5850111	PtrMemberAccess	plp -> e		5849635	0					
ANR	5850112	Identifier	plp		5849635	0					
ANR	5850113	Identifier	e		5849635	1					
ANR	5850114	Identifier	co		5849635	1					
ANR	5850115	Identifier	x		5849635	1					
ANR	5850116	AndExpression	points [ 2 ] . y == plp -> e . co . y && points [ 5 ] . x == plp -> e . ce . x && points [ 5 ] . y == plp -> e . ce . y		5849635	1		&&			
ANR	5850117	EqualityExpression	points [ 2 ] . y == plp -> e . co . y		5849635	0		==			
ANR	5850118	MemberAccess	points [ 2 ] . y		5849635	0					
ANR	5850119	ArrayIndexing	points [ 2 ]		5849635	0					
ANR	5850120	Identifier	points		5849635	0					
ANR	5850121	PrimaryExpression	2		5849635	1					
ANR	5850122	Identifier	y		5849635	1					
ANR	5850123	MemberAccess	plp -> e . co . y		5849635	1					
ANR	5850124	MemberAccess	plp -> e . co		5849635	0					
ANR	5850125	PtrMemberAccess	plp -> e		5849635	0					
ANR	5850126	Identifier	plp		5849635	0					
ANR	5850127	Identifier	e		5849635	1					
ANR	5850128	Identifier	co		5849635	1					
ANR	5850129	Identifier	y		5849635	1					
ANR	5850130	AndExpression	points [ 5 ] . x == plp -> e . ce . x && points [ 5 ] . y == plp -> e . ce . y		5849635	1		&&			
ANR	5850131	EqualityExpression	points [ 5 ] . x == plp -> e . ce . x		5849635	0		==			
ANR	5850132	MemberAccess	points [ 5 ] . x		5849635	0					
ANR	5850133	ArrayIndexing	points [ 5 ]		5849635	0					
ANR	5850134	Identifier	points		5849635	0					
ANR	5850135	PrimaryExpression	5		5849635	1					
ANR	5850136	Identifier	x		5849635	1					
ANR	5850137	MemberAccess	plp -> e . ce . x		5849635	1					
ANR	5850138	MemberAccess	plp -> e . ce		5849635	0					
ANR	5850139	PtrMemberAccess	plp -> e		5849635	0					
ANR	5850140	Identifier	plp		5849635	0					
ANR	5850141	Identifier	e		5849635	1					
ANR	5850142	Identifier	ce		5849635	1					
ANR	5850143	Identifier	x		5849635	1					
ANR	5850144	EqualityExpression	points [ 5 ] . y == plp -> e . ce . y		5849635	1		==			
ANR	5850145	MemberAccess	points [ 5 ] . y		5849635	0					
ANR	5850146	ArrayIndexing	points [ 5 ]		5849635	0					
ANR	5850147	Identifier	points		5849635	0					
ANR	5850148	PrimaryExpression	5		5849635	1					
ANR	5850149	Identifier	y		5849635	1					
ANR	5850150	MemberAccess	plp -> e . ce . y		5849635	1					
ANR	5850151	MemberAccess	plp -> e . ce		5849635	0					
ANR	5850152	PtrMemberAccess	plp -> e		5849635	0					
ANR	5850153	Identifier	plp		5849635	0					
ANR	5850154	Identifier	e		5849635	1					
ANR	5850155	Identifier	ce		5849635	1					
ANR	5850156	Identifier	y		5849635	1					
ANR	5850157	GotoStatement	goto fill ;	1484:24:63411:63420	5849635	1	True				
ANR	5850158	Identifier	fill		5849635	0					
ANR	5850159	CompoundStatement		67:20:2941:2981	5849635	1					
ANR	5850160	IdentifierDeclStatement	const gs_fixed_point * bevel = points + 2 ;	1486:20:63462:63502	5849635	0	True				
ANR	5850161	IdentifierDecl	* bevel = points + 2		5849635	0					
ANR	5850162	IdentifierDeclType	const gs_fixed_point *		5849635	0					
ANR	5850163	Identifier	bevel		5849635	1					
ANR	5850164	AssignmentExpression	* bevel = points + 2		5849635	2		=			
ANR	5850165	Identifier	bevel		5849635	0					
ANR	5850166	AdditiveExpression	points + 2		5849635	1		+			
ANR	5850167	Identifier	points		5849635	0					
ANR	5850168	PrimaryExpression	2		5849635	1					
ANR	5850169	IfStatement	if ( points [ 3 ] . x == nplp -> o . p . x && points [ 3 ] . y == nplp -> o . p . y )		5849635	1					
ANR	5850170	Condition	points [ 3 ] . x == nplp -> o . p . x && points [ 3 ] . y == nplp -> o . p . y	1489:24:63606:63685	5849635	0	True				
ANR	5850171	AndExpression	points [ 3 ] . x == nplp -> o . p . x && points [ 3 ] . y == nplp -> o . p . y		5849635	0		&&			
ANR	5850172	EqualityExpression	points [ 3 ] . x == nplp -> o . p . x		5849635	0		==			
ANR	5850173	MemberAccess	points [ 3 ] . x		5849635	0					
ANR	5850174	ArrayIndexing	points [ 3 ]		5849635	0					
ANR	5850175	Identifier	points		5849635	0					
ANR	5850176	PrimaryExpression	3		5849635	1					
ANR	5850177	Identifier	x		5849635	1					
ANR	5850178	MemberAccess	nplp -> o . p . x		5849635	1					
ANR	5850179	MemberAccess	nplp -> o . p		5849635	0					
ANR	5850180	PtrMemberAccess	nplp -> o		5849635	0					
ANR	5850181	Identifier	nplp		5849635	0					
ANR	5850182	Identifier	o		5849635	1					
ANR	5850183	Identifier	p		5849635	1					
ANR	5850184	Identifier	x		5849635	1					
ANR	5850185	EqualityExpression	points [ 3 ] . y == nplp -> o . p . y		5849635	1		==			
ANR	5850186	MemberAccess	points [ 3 ] . y		5849635	0					
ANR	5850187	ArrayIndexing	points [ 3 ]		5849635	0					
ANR	5850188	Identifier	points		5849635	0					
ANR	5850189	PrimaryExpression	3		5849635	1					
ANR	5850190	Identifier	y		5849635	1					
ANR	5850191	MemberAccess	nplp -> o . p . y		5849635	1					
ANR	5850192	MemberAccess	nplp -> o . p		5849635	0					
ANR	5850193	PtrMemberAccess	nplp -> o		5849635	0					
ANR	5850194	Identifier	nplp		5849635	0					
ANR	5850195	Identifier	o		5849635	1					
ANR	5850196	Identifier	p		5849635	1					
ANR	5850197	Identifier	y		5849635	1					
ANR	5850198	ExpressionStatement	++ bevel	1492:24:63737:63744	5849635	1	True				
ANR	5850199	UnaryExpression	++ bevel		5849635	0					
ANR	5850200	IncDec	++		5849635	0					
ANR	5850201	Identifier	bevel		5849635	1					
ANR	5850202	ExpressionStatement	"code = ( * dev_proc ( dev , fill_triangle ) ) ( dev , bevel -> x , bevel -> y , bevel [ 1 ] . x - bevel -> x , bevel [ 1 ] . y - bevel -> y , bevel [ 2 ] . x - bevel -> x , bevel [ 2 ] . y - bevel -> y , pdevc , pgs -> log_op )"	1494:20:63808:64159	5849635	2	True				
ANR	5850203	AssignmentExpression	"code = ( * dev_proc ( dev , fill_triangle ) ) ( dev , bevel -> x , bevel -> y , bevel [ 1 ] . x - bevel -> x , bevel [ 1 ] . y - bevel -> y , bevel [ 2 ] . x - bevel -> x , bevel [ 2 ] . y - bevel -> y , pdevc , pgs -> log_op )"		5849635	0		=			
ANR	5850204	Identifier	code		5849635	0					
ANR	5850205	CallExpression	"( * dev_proc ( dev , fill_triangle ) ) ( dev , bevel -> x , bevel -> y , bevel [ 1 ] . x - bevel -> x , bevel [ 1 ] . y - bevel -> y , bevel [ 2 ] . x - bevel -> x , bevel [ 2 ] . y - bevel -> y , pdevc , pgs -> log_op )"		5849635	1					
ANR	5850206	Callee	"* dev_proc ( dev , fill_triangle )"		5849635	0					
ANR	5850207	UnaryOperationExpression	"* dev_proc ( dev , fill_triangle )"		5849635	0					
ANR	5850208	UnaryOperator	*		5849635	0					
ANR	5850209	CallExpression	"dev_proc ( dev , fill_triangle )"		5849635	1					
ANR	5850210	Callee	dev_proc		5849635	0					
ANR	5850211	Identifier	dev_proc		5849635	0					
ANR	5850212	ArgumentList	dev		5849635	1					
ANR	5850213	Argument	dev		5849635	0					
ANR	5850214	Identifier	dev		5849635	0					
ANR	5850215	Argument	fill_triangle		5849635	1					
ANR	5850216	Identifier	fill_triangle		5849635	0					
ANR	5850217	ArgumentList	dev		5849635	1					
ANR	5850218	Argument	dev		5849635	0					
ANR	5850219	Identifier	dev		5849635	0					
ANR	5850220	Argument	bevel -> x		5849635	1					
ANR	5850221	PtrMemberAccess	bevel -> x		5849635	0					
ANR	5850222	Identifier	bevel		5849635	0					
ANR	5850223	Identifier	x		5849635	1					
ANR	5850224	Argument	bevel -> y		5849635	2					
ANR	5850225	PtrMemberAccess	bevel -> y		5849635	0					
ANR	5850226	Identifier	bevel		5849635	0					
ANR	5850227	Identifier	y		5849635	1					
ANR	5850228	Argument	bevel [ 1 ] . x - bevel -> x		5849635	3					
ANR	5850229	AdditiveExpression	bevel [ 1 ] . x - bevel -> x		5849635	0		-			
ANR	5850230	MemberAccess	bevel [ 1 ] . x		5849635	0					
ANR	5850231	ArrayIndexing	bevel [ 1 ]		5849635	0					
ANR	5850232	Identifier	bevel		5849635	0					
ANR	5850233	PrimaryExpression	1		5849635	1					
ANR	5850234	Identifier	x		5849635	1					
ANR	5850235	PtrMemberAccess	bevel -> x		5849635	1					
ANR	5850236	Identifier	bevel		5849635	0					
ANR	5850237	Identifier	x		5849635	1					
ANR	5850238	Argument	bevel [ 1 ] . y - bevel -> y		5849635	4					
ANR	5850239	AdditiveExpression	bevel [ 1 ] . y - bevel -> y		5849635	0		-			
ANR	5850240	MemberAccess	bevel [ 1 ] . y		5849635	0					
ANR	5850241	ArrayIndexing	bevel [ 1 ]		5849635	0					
ANR	5850242	Identifier	bevel		5849635	0					
ANR	5850243	PrimaryExpression	1		5849635	1					
ANR	5850244	Identifier	y		5849635	1					
ANR	5850245	PtrMemberAccess	bevel -> y		5849635	1					
ANR	5850246	Identifier	bevel		5849635	0					
ANR	5850247	Identifier	y		5849635	1					
ANR	5850248	Argument	bevel [ 2 ] . x - bevel -> x		5849635	5					
ANR	5850249	AdditiveExpression	bevel [ 2 ] . x - bevel -> x		5849635	0		-			
ANR	5850250	MemberAccess	bevel [ 2 ] . x		5849635	0					
ANR	5850251	ArrayIndexing	bevel [ 2 ]		5849635	0					
ANR	5850252	Identifier	bevel		5849635	0					
ANR	5850253	PrimaryExpression	2		5849635	1					
ANR	5850254	Identifier	x		5849635	1					
ANR	5850255	PtrMemberAccess	bevel -> x		5849635	1					
ANR	5850256	Identifier	bevel		5849635	0					
ANR	5850257	Identifier	x		5849635	1					
ANR	5850258	Argument	bevel [ 2 ] . y - bevel -> y		5849635	6					
ANR	5850259	AdditiveExpression	bevel [ 2 ] . y - bevel -> y		5849635	0		-			
ANR	5850260	MemberAccess	bevel [ 2 ] . y		5849635	0					
ANR	5850261	ArrayIndexing	bevel [ 2 ]		5849635	0					
ANR	5850262	Identifier	bevel		5849635	0					
ANR	5850263	PrimaryExpression	2		5849635	1					
ANR	5850264	Identifier	y		5849635	1					
ANR	5850265	PtrMemberAccess	bevel -> y		5849635	1					
ANR	5850266	Identifier	bevel		5849635	0					
ANR	5850267	Identifier	y		5849635	1					
ANR	5850268	Argument	pdevc		5849635	7					
ANR	5850269	Identifier	pdevc		5849635	0					
ANR	5850270	Argument	pgs -> log_op		5849635	8					
ANR	5850271	PtrMemberAccess	pgs -> log_op		5849635	0					
ANR	5850272	Identifier	pgs		5849635	0					
ANR	5850273	Identifier	log_op		5849635	1					
ANR	5850274	IfStatement	if ( code < 0 )		5849635	3					
ANR	5850275	Condition	code < 0	1499:24:64185:64192	5849635	0	True				
ANR	5850276	RelationalExpression	code < 0		5849635	0		<			
ANR	5850277	Identifier	code		5849635	0					
ANR	5850278	PrimaryExpression	0		5849635	1					
ANR	5850279	ReturnStatement	return code ;	1500:24:64219:64230	5849635	1	True				
ANR	5850280	Identifier	code		5849635	0					
ANR	5850281	ReturnStatement	"return ( * dev_proc ( dev , fill_parallelogram ) ) ( dev , points [ 1 ] . x , points [ 1 ] . y , ax , ay , bx , by , pdevc , pgs -> log_op ) ;"	1504:12:64323:64599	5849635	42	True				
ANR	5850282	CallExpression	"( * dev_proc ( dev , fill_parallelogram ) ) ( dev , points [ 1 ] . x , points [ 1 ] . y , ax , ay , bx , by , pdevc , pgs -> log_op )"		5849635	0					
ANR	5850283	Callee	"* dev_proc ( dev , fill_parallelogram )"		5849635	0					
ANR	5850284	UnaryOperationExpression	"* dev_proc ( dev , fill_parallelogram )"		5849635	0					
ANR	5850285	UnaryOperator	*		5849635	0					
ANR	5850286	CallExpression	"dev_proc ( dev , fill_parallelogram )"		5849635	1					
ANR	5850287	Callee	dev_proc		5849635	0					
ANR	5850288	Identifier	dev_proc		5849635	0					
ANR	5850289	ArgumentList	dev		5849635	1					
ANR	5850290	Argument	dev		5849635	0					
ANR	5850291	Identifier	dev		5849635	0					
ANR	5850292	Argument	fill_parallelogram		5849635	1					
ANR	5850293	Identifier	fill_parallelogram		5849635	0					
ANR	5850294	ArgumentList	dev		5849635	1					
ANR	5850295	Argument	dev		5849635	0					
ANR	5850296	Identifier	dev		5849635	0					
ANR	5850297	Argument	points [ 1 ] . x		5849635	1					
ANR	5850298	MemberAccess	points [ 1 ] . x		5849635	0					
ANR	5850299	ArrayIndexing	points [ 1 ]		5849635	0					
ANR	5850300	Identifier	points		5849635	0					
ANR	5850301	PrimaryExpression	1		5849635	1					
ANR	5850302	Identifier	x		5849635	1					
ANR	5850303	Argument	points [ 1 ] . y		5849635	2					
ANR	5850304	MemberAccess	points [ 1 ] . y		5849635	0					
ANR	5850305	ArrayIndexing	points [ 1 ]		5849635	0					
ANR	5850306	Identifier	points		5849635	0					
ANR	5850307	PrimaryExpression	1		5849635	1					
ANR	5850308	Identifier	y		5849635	1					
ANR	5850309	Argument	ax		5849635	3					
ANR	5850310	Identifier	ax		5849635	0					
ANR	5850311	Argument	ay		5849635	4					
ANR	5850312	Identifier	ay		5849635	0					
ANR	5850313	Argument	bx		5849635	5					
ANR	5850314	Identifier	bx		5849635	0					
ANR	5850315	Argument	by		5849635	6					
ANR	5850316	Identifier	by		5849635	0					
ANR	5850317	Argument	pdevc		5849635	7					
ANR	5850318	Identifier	pdevc		5849635	0					
ANR	5850319	Argument	pgs -> log_op		5849635	8					
ANR	5850320	PtrMemberAccess	pgs -> log_op		5849635	0					
ANR	5850321	Identifier	pgs		5849635	0					
ANR	5850322	Identifier	log_op		5849635	1					
ANR	5850323	Label	fill :	1508:10:64611:64615	5849635	43	True				
ANR	5850324	Identifier	fill		5849635	0					
ANR	5850325	ExpressionStatement	"code = add_points ( ppath , points , npoints + code , true )"	1509:12:64629:64683	5849635	44	True				
ANR	5850326	AssignmentExpression	"code = add_points ( ppath , points , npoints + code , true )"		5849635	0		=			
ANR	5850327	Identifier	code		5849635	0					
ANR	5850328	CallExpression	"add_points ( ppath , points , npoints + code , true )"		5849635	1					
ANR	5850329	Callee	add_points		5849635	0					
ANR	5850330	Identifier	add_points		5849635	0					
ANR	5850331	ArgumentList	ppath		5849635	1					
ANR	5850332	Argument	ppath		5849635	0					
ANR	5850333	Identifier	ppath		5849635	0					
ANR	5850334	Argument	points		5849635	1					
ANR	5850335	Identifier	points		5849635	0					
ANR	5850336	Argument	npoints + code		5849635	2					
ANR	5850337	AdditiveExpression	npoints + code		5849635	0		+			
ANR	5850338	Identifier	npoints		5849635	0					
ANR	5850339	Identifier	code		5849635	1					
ANR	5850340	Argument	true		5849635	3					
ANR	5850341	Identifier	true		5849635	0					
ANR	5850342	IfStatement	if ( code < 0 )		5849635	45					
ANR	5850343	Condition	code < 0	1510:16:64701:64708	5849635	0	True				
ANR	5850344	RelationalExpression	code < 0		5849635	0		<			
ANR	5850345	Identifier	code		5849635	0					
ANR	5850346	PrimaryExpression	0		5849635	1					
ANR	5850347	ReturnStatement	return code ;	1511:16:64727:64738	5849635	1	True				
ANR	5850348	Identifier	code		5849635	0					
ANR	5850349	ReturnStatement	return gx_path_close_subpath ( ppath ) ;	1512:12:64752:64787	5849635	46	True				
ANR	5850350	CallExpression	gx_path_close_subpath ( ppath )		5849635	0					
ANR	5850351	Callee	gx_path_close_subpath		5849635	0					
ANR	5850352	Identifier	gx_path_close_subpath		5849635	0					
ANR	5850353	ArgumentList	ppath		5849635	1					
ANR	5850354	Argument	ppath		5849635	0					
ANR	5850355	Identifier	ppath		5849635	0					
ANR	5850356	Label	general :	1516:1:64871:64878	5849635	6	True				
ANR	5850357	Identifier	general		5849635	0					
ANR	5850358	ReturnStatement	"return stroke_add ( ppath , rpath , ensure_closed , first , plp , nplp , pdevc , dev , pgs , params , pbbox , uniform , join , reflected , flags ) ;"	1517:4:64884:65057	5849635	7	True				
ANR	5850359	CallExpression	"stroke_add ( ppath , rpath , ensure_closed , first , plp , nplp , pdevc , dev , pgs , params , pbbox , uniform , join , reflected , flags )"		5849635	0					
ANR	5850360	Callee	stroke_add		5849635	0					
ANR	5850361	Identifier	stroke_add		5849635	0					
ANR	5850362	ArgumentList	ppath		5849635	1					
ANR	5850363	Argument	ppath		5849635	0					
ANR	5850364	Identifier	ppath		5849635	0					
ANR	5850365	Argument	rpath		5849635	1					
ANR	5850366	Identifier	rpath		5849635	0					
ANR	5850367	Argument	ensure_closed		5849635	2					
ANR	5850368	Identifier	ensure_closed		5849635	0					
ANR	5850369	Argument	first		5849635	3					
ANR	5850370	Identifier	first		5849635	0					
ANR	5850371	Argument	plp		5849635	4					
ANR	5850372	Identifier	plp		5849635	0					
ANR	5850373	Argument	nplp		5849635	5					
ANR	5850374	Identifier	nplp		5849635	0					
ANR	5850375	Argument	pdevc		5849635	6					
ANR	5850376	Identifier	pdevc		5849635	0					
ANR	5850377	Argument	dev		5849635	7					
ANR	5850378	Identifier	dev		5849635	0					
ANR	5850379	Argument	pgs		5849635	8					
ANR	5850380	Identifier	pgs		5849635	0					
ANR	5850381	Argument	params		5849635	9					
ANR	5850382	Identifier	params		5849635	0					
ANR	5850383	Argument	pbbox		5849635	10					
ANR	5850384	Identifier	pbbox		5849635	0					
ANR	5850385	Argument	uniform		5849635	11					
ANR	5850386	Identifier	uniform		5849635	0					
ANR	5850387	Argument	join		5849635	12					
ANR	5850388	Identifier	join		5849635	0					
ANR	5850389	Argument	reflected		5849635	13					
ANR	5850390	Identifier	reflected		5849635	0					
ANR	5850391	Argument	flags		5849635	14					
ANR	5850392	Identifier	flags		5849635	0					
ANR	5850393	ReturnType	static int		5849635	1					
ANR	5850394	Identifier	stroke_fill		5849635	2					
ANR	5850395	ParameterList	"gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , register pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags"		5849635	3					
ANR	5850396	Parameter	gx_path * ppath	1414:12:60162:60176	5849635	0	True				
ANR	5850397	ParameterType	gx_path *		5849635	0					
ANR	5850398	Identifier	ppath		5849635	1					
ANR	5850399	Parameter	gx_path * rpath	1414:29:60179:60193	5849635	1	True				
ANR	5850400	ParameterType	gx_path *		5849635	0					
ANR	5850401	Identifier	rpath		5849635	1					
ANR	5850402	Parameter	bool ensure_closed	1414:46:60196:60213	5849635	2	True				
ANR	5850403	ParameterType	bool		5849635	0					
ANR	5850404	Identifier	ensure_closed		5849635	1					
ANR	5850405	Parameter	int first	1414:66:60216:60224	5849635	3	True				
ANR	5850406	ParameterType	int		5849635	0					
ANR	5850407	Identifier	first		5849635	1					
ANR	5850408	Parameter	register pl_ptr plp	1415:12:60239:60257	5849635	4	True				
ANR	5850409	ParameterType	register pl_ptr		5849635	0					
ANR	5850410	Identifier	plp		5849635	1					
ANR	5850411	Parameter	pl_ptr nplp	1415:33:60260:60270	5849635	5	True				
ANR	5850412	ParameterType	pl_ptr		5849635	0					
ANR	5850413	Identifier	nplp		5849635	1					
ANR	5850414	Parameter	const gx_device_color * pdevc	1415:46:60273:60301	5849635	6	True				
ANR	5850415	ParameterType	const gx_device_color *		5849635	0					
ANR	5850416	Identifier	pdevc		5849635	1					
ANR	5850417	Parameter	gx_device * dev	1416:12:60316:60330	5849635	7	True				
ANR	5850418	ParameterType	gx_device *		5849635	0					
ANR	5850419	Identifier	dev		5849635	1					
ANR	5850420	Parameter	const gs_gstate * pgs	1416:29:60333:60353	5849635	8	True				
ANR	5850421	ParameterType	const gs_gstate *		5849635	0					
ANR	5850422	Identifier	pgs		5849635	1					
ANR	5850423	Parameter	const gx_stroke_params * params	1417:12:60368:60398	5849635	9	True				
ANR	5850424	ParameterType	const gx_stroke_params *		5849635	0					
ANR	5850425	Identifier	params		5849635	1					
ANR	5850426	Parameter	const gs_fixed_rect * pbbox	1417:45:60401:60427	5849635	10	True				
ANR	5850427	ParameterType	const gs_fixed_rect *		5849635	0					
ANR	5850428	Identifier	pbbox		5849635	1					
ANR	5850429	Parameter	int uniform	1418:12:60442:60452	5849635	11	True				
ANR	5850430	ParameterType	int		5849635	0					
ANR	5850431	Identifier	uniform		5849635	1					
ANR	5850432	Parameter	gs_line_join join	1418:25:60455:60471	5849635	12	True				
ANR	5850433	ParameterType	gs_line_join		5849635	0					
ANR	5850434	Identifier	join		5849635	1					
ANR	5850435	Parameter	bool reflected	1418:44:60474:60487	5849635	13	True				
ANR	5850436	ParameterType	bool		5849635	0					
ANR	5850437	Identifier	reflected		5849635	1					
ANR	5850438	Parameter	note_flags flags	1419:12:60502:60517	5849635	14	True				
ANR	5850439	ParameterType	note_flags		5849635	0					
ANR	5850440	Identifier	flags		5849635	1					
ANR	5850441	CFGEntryNode	ENTRY		5849635		True				
ANR	5850442	CFGExitNode	EXIT		5849635		True				
ANR	5850443	Symbol	"* dev_proc ( dev , fill_triangle )"		5849635						
ANR	5850444	Symbol	gs_cap_square		5849635						
ANR	5850445	Symbol	* pgs		5849635						
ANR	5850446	Symbol	nplp -> o . p . x		5849635						
ANR	5850447	Symbol	pdevc		5849635						
ANR	5850448	Symbol	nplp -> o . p . y		5849635						
ANR	5850449	Symbol	reflected		5849635						
ANR	5850450	Symbol	& plp -> e		5849635						
ANR	5850451	Symbol	nf_dash_tail		5849635						
ANR	5850452	Symbol	dev		5849635						
ANR	5850453	Symbol	points [ 3 ] . y		5849635						
ANR	5850454	Symbol	points [ 3 ] . x		5849635						
ANR	5850455	Symbol	join		5849635						
ANR	5850456	Symbol	points [ 0 ] . y		5849635						
ANR	5850457	Symbol	points [ 0 ] . x		5849635						
ANR	5850458	Symbol	add_points		5849635						
ANR	5850459	Symbol	plp -> thin		5849635						
ANR	5850460	Symbol	gs_join_bevel		5849635						
ANR	5850461	Symbol	params		5849635						
ANR	5850462	Symbol	fill_parallelogram		5849635						
ANR	5850463	Symbol	plp -> e . p		5849635						
ANR	5850464	Symbol	& plp -> o		5849635						
ANR	5850465	Symbol	pgs_lp -> end_cap		5849635						
ANR	5850466	Symbol	ax		5849635						
ANR	5850467	Symbol	pgs -> fill_adjust . y		5849635						
ANR	5850468	Symbol	ay		5849635						
ANR	5850469	Symbol	pgs -> fill_adjust . x		5849635						
ANR	5850470	Symbol	cap_points		5849635						
ANR	5850471	Symbol	* pgs_lp		5849635						
ANR	5850472	Symbol	* dev_proc		5849635						
ANR	5850473	Symbol	flags		5849635						
ANR	5850474	Symbol	points [ 2 ] . x		5849635						
ANR	5850475	Symbol	plp -> o . p		5849635						
ANR	5850476	Symbol	points [ 2 ] . y		5849635						
ANR	5850477	Symbol	bevel -> x		5849635						
ANR	5850478	Symbol	bevel -> y		5849635						
ANR	5850479	Symbol	uniform		5849635						
ANR	5850480	Symbol	end_cap		5849635						
ANR	5850481	Symbol	bx		5849635						
ANR	5850482	Symbol	by		5849635						
ANR	5850483	Symbol	SUB_OVERFLOWS		5849635						
ANR	5850484	Symbol	pgs		5849635						
ANR	5850485	Symbol	* nplp		5849635						
ANR	5850486	Symbol	line_join_points		5849635						
ANR	5850487	Symbol	gs_cap_butt		5849635						
ANR	5850488	Symbol	start_cap		5849635						
ANR	5850489	Symbol	pgs_lp -> start_cap		5849635						
ANR	5850490	Symbol	stroke_add		5849635						
ANR	5850491	Symbol	draw_thin_line		5849635						
ANR	5850492	Symbol	fill_triangle		5849635						
ANR	5850493	Symbol	first		5849635						
ANR	5850494	Symbol	npoints		5849635						
ANR	5850495	Symbol	"* dev_proc ( dev , fill_parallelogram )"		5849635						
ANR	5850496	Symbol	points		5849635						
ANR	5850497	Symbol	plp -> e . co . y		5849635						
ANR	5850498	Symbol	plp -> e . co . x		5849635						
ANR	5850499	Symbol	plp -> e . co		5849635						
ANR	5850500	Symbol	gs_currentlineparams_inline		5849635						
ANR	5850501	Symbol	plp -> e . ce		5849635						
ANR	5850502	Symbol	lix		5849635						
ANR	5850503	Symbol	gs_join_none		5849635						
ANR	5850504	Symbol	liy		5849635						
ANR	5850505	Symbol	* plp		5849635						
ANR	5850506	Symbol	ensure_closed		5849635						
ANR	5850507	Symbol	points [ 1 ] . y		5849635						
ANR	5850508	Symbol	points [ 1 ] . x		5849635						
ANR	5850509	Symbol	plp -> o . p . y		5849635						
ANR	5850510	Symbol	plp -> o . p . x		5849635						
ANR	5850511	Symbol	nf_dash_head		5849635						
ANR	5850512	Symbol	bevel [ 2 ] . y		5849635						
ANR	5850513	Symbol	bevel [ 2 ] . x		5849635						
ANR	5850514	Symbol	pgs_lp		5849635						
ANR	5850515	Symbol	true		5849635						
ANR	5850516	Symbol	* points		5849635						
ANR	5850517	Symbol	pbbox		5849635						
ANR	5850518	Symbol	code		5849635						
ANR	5850519	Symbol	plp -> e . p . y		5849635						
ANR	5850520	Symbol	plp -> e . p . x		5849635						
ANR	5850521	Symbol	ppath		5849635						
ANR	5850522	Symbol	pgs_lp -> dash_cap		5849635						
ANR	5850523	Symbol	gx_path_close_subpath		5849635						
ANR	5850524	Symbol	dev_proc		5849635						
ANR	5850525	Symbol	points [ 5 ] . x		5849635						
ANR	5850526	Symbol	points [ 5 ] . y		5849635						
ANR	5850527	Symbol	nplp -> o		5849635						
ANR	5850528	Symbol	bevel [ 1 ] . y		5849635						
ANR	5850529	Symbol	bevel [ 1 ] . x		5849635						
ANR	5850530	Symbol	pgs -> log_op		5849635						
ANR	5850531	Symbol	litoy		5849635						
ANR	5850532	Symbol	litox		5849635						
ANR	5850533	Symbol	& ctm_only		5849635						
ANR	5850534	Symbol	"* dev_proc ( dev , draw_thin_line )"		5849635						
ANR	5850535	Symbol	rpath		5849635						
ANR	5850536	Symbol	gs_join_miter		5849635						
ANR	5850537	Symbol	bevel		5849635						
ANR	5850538	Symbol	pgs -> fill_adjust		5849635						
ANR	5850539	Symbol	* bevel		5849635						
ANR	5850540	Symbol	plp -> e . ce . x		5849635						
ANR	5850541	Symbol	plp -> e . ce . y		5849635						
ANR	5850542	Symbol	plp		5849635						
ANR	5850543	Symbol	nplp		5849635						
ANR	5850544	Symbol	nplp -> o . p		5849635						
ANR	5850545	Symbol	plp -> o		5849635						
ANR	5850546	Symbol	plp -> e		5849635						
ANR	5850547	Symbol	nplp -> thin		5849635						
ANR	5850548	Function	stroke_add	1523:0:65132:68586							
ANR	5850549	FunctionDef	"stroke_add (gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * ignore_pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags)"		5850548	0					
ANR	5850550	CompoundStatement		1530:0:65505:68586	5850548	0					
ANR	5850551	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	1531:4:65511:65574	5850548	0	True				
ANR	5850552	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		5850548	0					
ANR	5850553	IdentifierDeclType	const gx_line_params *		5850548	0					
ANR	5850554	Identifier	pgs_lp		5850548	1					
ANR	5850555	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		5850548	2		=			
ANR	5850556	Identifier	pgs_lp		5850548	0					
ANR	5850557	CallExpression	gs_currentlineparams_inline ( pgs )		5850548	1					
ANR	5850558	Callee	gs_currentlineparams_inline		5850548	0					
ANR	5850559	Identifier	gs_currentlineparams_inline		5850548	0					
ANR	5850560	ArgumentList	pgs		5850548	1					
ANR	5850561	Argument	pgs		5850548	0					
ANR	5850562	Identifier	pgs		5850548	0					
ANR	5850563	IdentifierDeclStatement	gs_fixed_point points [ 8 ] ;	1532:4:65580:65604	5850548	1	True				
ANR	5850564	IdentifierDecl	points [ 8 ]		5850548	0					
ANR	5850565	IdentifierDeclType	gs_fixed_point [ 8 ]		5850548	0					
ANR	5850566	Identifier	points		5850548	1					
ANR	5850567	PrimaryExpression	8		5850548	2					
ANR	5850568	IdentifierDeclStatement	int npoints ;	1533:4:65610:65621	5850548	2	True				
ANR	5850569	IdentifierDecl	npoints		5850548	0					
ANR	5850570	IdentifierDeclType	int		5850548	0					
ANR	5850571	Identifier	npoints		5850548	1					
ANR	5850572	IdentifierDeclStatement	int code ;	1534:4:65627:65635	5850548	3	True				
ANR	5850573	IdentifierDecl	code		5850548	0					
ANR	5850574	IdentifierDeclType	int		5850548	0					
ANR	5850575	Identifier	code		5850548	1					
ANR	5850576	IdentifierDeclStatement	bool moveto_first = true ;	1535:4:65641:65665	5850548	4	True				
ANR	5850577	IdentifierDecl	moveto_first = true		5850548	0					
ANR	5850578	IdentifierDeclType	bool		5850548	0					
ANR	5850579	Identifier	moveto_first		5850548	1					
ANR	5850580	AssignmentExpression	moveto_first = true		5850548	2		=			
ANR	5850581	Identifier	true		5850548	0					
ANR	5850582	Identifier	true		5850548	1					
ANR	5850583	IdentifierDeclStatement	gs_line_cap start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap ) ;	1536:4:65671:65785	5850548	5	True				
ANR	5850584	IdentifierDecl	start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap )		5850548	0					
ANR	5850585	IdentifierDeclType	gs_line_cap		5850548	0					
ANR	5850586	Identifier	start_cap		5850548	1					
ANR	5850587	AssignmentExpression	start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap )		5850548	2		=			
ANR	5850588	Identifier	start_cap		5850548	0					
ANR	5850589	ConditionalExpression	flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap		5850548	1					
ANR	5850590	Condition	flags & nf_dash_head		5850548	0					
ANR	5850591	BitAndExpression	flags & nf_dash_head		5850548	0		&			
ANR	5850592	Identifier	flags		5850548	0					
ANR	5850593	Identifier	nf_dash_head		5850548	1					
ANR	5850594	PtrMemberAccess	pgs_lp -> dash_cap		5850548	1					
ANR	5850595	Identifier	pgs_lp		5850548	0					
ANR	5850596	Identifier	dash_cap		5850548	1					
ANR	5850597	PtrMemberAccess	pgs_lp -> start_cap		5850548	2					
ANR	5850598	Identifier	pgs_lp		5850548	0					
ANR	5850599	Identifier	start_cap		5850548	1					
ANR	5850600	IdentifierDeclStatement	gs_line_cap end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap ) ;	1538:4:65791:65903	5850548	6	True				
ANR	5850601	IdentifierDecl	end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap )		5850548	0					
ANR	5850602	IdentifierDeclType	gs_line_cap		5850548	0					
ANR	5850603	Identifier	end_cap		5850548	1					
ANR	5850604	AssignmentExpression	end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap )		5850548	2		=			
ANR	5850605	Identifier	end_cap		5850548	0					
ANR	5850606	ConditionalExpression	flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap		5850548	1					
ANR	5850607	Condition	flags & nf_dash_tail		5850548	0					
ANR	5850608	BitAndExpression	flags & nf_dash_tail		5850548	0		&			
ANR	5850609	Identifier	flags		5850548	0					
ANR	5850610	Identifier	nf_dash_tail		5850548	1					
ANR	5850611	PtrMemberAccess	pgs_lp -> dash_cap		5850548	1					
ANR	5850612	Identifier	pgs_lp		5850548	0					
ANR	5850613	Identifier	dash_cap		5850548	1					
ANR	5850614	PtrMemberAccess	pgs_lp -> end_cap		5850548	2					
ANR	5850615	Identifier	pgs_lp		5850548	0					
ANR	5850616	Identifier	end_cap		5850548	1					
ANR	5850617	IfStatement	if ( plp -> thin )		5850548	7					
ANR	5850618	Condition	plp -> thin	1541:8:65914:65922	5850548	0	True				
ANR	5850619	PtrMemberAccess	plp -> thin		5850548	0					
ANR	5850620	Identifier	plp		5850548	0					
ANR	5850621	Identifier	thin		5850548	1					
ANR	5850622	CompoundStatement		12:19:419:419	5850548	1					
ANR	5850623	ExpressionStatement	set_thin_widths ( plp )	1544:8:66051:66071	5850548	0	True				
ANR	5850624	CallExpression	set_thin_widths ( plp )		5850548	0					
ANR	5850625	Callee	set_thin_widths		5850548	0					
ANR	5850626	Identifier	set_thin_widths		5850548	0					
ANR	5850627	ArgumentList	plp		5850548	1					
ANR	5850628	Argument	plp		5850548	0					
ANR	5850629	Identifier	plp		5850548	0					
ANR	5850630	ExpressionStatement	"adjust_stroke ( dev , plp , pgs , true , first == 0 && nplp == 0 , flags )"	1545:8:66081:66147	5850548	1	True				
ANR	5850631	CallExpression	"adjust_stroke ( dev , plp , pgs , true , first == 0 && nplp == 0 , flags )"		5850548	0					
ANR	5850632	Callee	adjust_stroke		5850548	0					
ANR	5850633	Identifier	adjust_stroke		5850548	0					
ANR	5850634	ArgumentList	dev		5850548	1					
ANR	5850635	Argument	dev		5850548	0					
ANR	5850636	Identifier	dev		5850548	0					
ANR	5850637	Argument	plp		5850548	1					
ANR	5850638	Identifier	plp		5850548	0					
ANR	5850639	Argument	pgs		5850548	2					
ANR	5850640	Identifier	pgs		5850548	0					
ANR	5850641	Argument	true		5850548	3					
ANR	5850642	Identifier	true		5850548	0					
ANR	5850643	Argument	first == 0 && nplp == 0		5850548	4					
ANR	5850644	AndExpression	first == 0 && nplp == 0		5850548	0		&&			
ANR	5850645	EqualityExpression	first == 0		5850548	0		==			
ANR	5850646	Identifier	first		5850548	0					
ANR	5850647	PrimaryExpression	0		5850548	1					
ANR	5850648	EqualityExpression	nplp == 0		5850548	1		==			
ANR	5850649	Identifier	nplp		5850548	0					
ANR	5850650	PrimaryExpression	0		5850548	1					
ANR	5850651	Argument	flags		5850548	5					
ANR	5850652	Identifier	flags		5850548	0					
ANR	5850653	ExpressionStatement	compute_caps ( plp )	1546:8:66157:66174	5850548	2	True				
ANR	5850654	CallExpression	compute_caps ( plp )		5850548	0					
ANR	5850655	Callee	compute_caps		5850548	0					
ANR	5850656	Identifier	compute_caps		5850548	0					
ANR	5850657	ArgumentList	plp		5850548	1					
ANR	5850658	Argument	plp		5850548	0					
ANR	5850659	Identifier	plp		5850548	0					
ANR	5850660	IfStatement	if ( first == 0 && start_cap == gs_cap_round )		5850548	8					
ANR	5850661	Condition	first == 0 && start_cap == gs_cap_round	1549:8:66234:66272	5850548	0	True				
ANR	5850662	AndExpression	first == 0 && start_cap == gs_cap_round		5850548	0		&&			
ANR	5850663	EqualityExpression	first == 0		5850548	0		==			
ANR	5850664	Identifier	first		5850548	0					
ANR	5850665	PrimaryExpression	0		5850548	1					
ANR	5850666	EqualityExpression	start_cap == gs_cap_round		5850548	1		==			
ANR	5850667	Identifier	start_cap		5850548	0					
ANR	5850668	Identifier	gs_cap_round		5850548	1					
ANR	5850669	CompoundStatement		20:49:769:769	5850548	1					
ANR	5850670	IfStatement	"if ( ( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_pie_cap ( ppath , & plp -> o ) ) < 0 )"		5850548	0					
ANR	5850671	Condition	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_pie_cap ( ppath , & plp -> o ) ) < 0"	1550:12:66289:66407	5850548	0	True				
ANR	5850672	OrExpression	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_pie_cap ( ppath , & plp -> o ) ) < 0"		5850548	0		||			
ANR	5850673	RelationalExpression	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0"		5850548	0		<			
ANR	5850674	AssignmentExpression	"code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y )"		5850548	0		=			
ANR	5850675	Identifier	code		5850548	0					
ANR	5850676	CallExpression	"gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y )"		5850548	1					
ANR	5850677	Callee	gx_path_add_point		5850548	0					
ANR	5850678	Identifier	gx_path_add_point		5850548	0					
ANR	5850679	ArgumentList	ppath		5850548	1					
ANR	5850680	Argument	ppath		5850548	0					
ANR	5850681	Identifier	ppath		5850548	0					
ANR	5850682	Argument	plp -> o . co . x		5850548	1					
ANR	5850683	MemberAccess	plp -> o . co . x		5850548	0					
ANR	5850684	MemberAccess	plp -> o . co		5850548	0					
ANR	5850685	PtrMemberAccess	plp -> o		5850548	0					
ANR	5850686	Identifier	plp		5850548	0					
ANR	5850687	Identifier	o		5850548	1					
ANR	5850688	Identifier	co		5850548	1					
ANR	5850689	Identifier	x		5850548	1					
ANR	5850690	Argument	plp -> o . co . y		5850548	2					
ANR	5850691	MemberAccess	plp -> o . co . y		5850548	0					
ANR	5850692	MemberAccess	plp -> o . co		5850548	0					
ANR	5850693	PtrMemberAccess	plp -> o		5850548	0					
ANR	5850694	Identifier	plp		5850548	0					
ANR	5850695	Identifier	o		5850548	1					
ANR	5850696	Identifier	co		5850548	1					
ANR	5850697	Identifier	y		5850548	1					
ANR	5850698	PrimaryExpression	0		5850548	1					
ANR	5850699	RelationalExpression	"( code = add_pie_cap ( ppath , & plp -> o ) ) < 0"		5850548	1		<			
ANR	5850700	AssignmentExpression	"code = add_pie_cap ( ppath , & plp -> o )"		5850548	0		=			
ANR	5850701	Identifier	code		5850548	0					
ANR	5850702	CallExpression	"add_pie_cap ( ppath , & plp -> o )"		5850548	1					
ANR	5850703	Callee	add_pie_cap		5850548	0					
ANR	5850704	Identifier	add_pie_cap		5850548	0					
ANR	5850705	ArgumentList	ppath		5850548	1					
ANR	5850706	Argument	ppath		5850548	0					
ANR	5850707	Identifier	ppath		5850548	0					
ANR	5850708	Argument	& plp -> o		5850548	1					
ANR	5850709	UnaryOperationExpression	& plp -> o		5850548	0					
ANR	5850710	UnaryOperator	&		5850548	0					
ANR	5850711	PtrMemberAccess	plp -> o		5850548	1					
ANR	5850712	Identifier	plp		5850548	0					
ANR	5850713	Identifier	o		5850548	1					
ANR	5850714	PrimaryExpression	0		5850548	1					
ANR	5850715	ReturnStatement	return code ;	1552:12:66422:66433	5850548	1	True				
ANR	5850716	Identifier	code		5850548	0					
ANR	5850717	ExpressionStatement	npoints = 0	1553:8:66443:66454	5850548	1	True				
ANR	5850718	AssignmentExpression	npoints = 0		5850548	0		=			
ANR	5850719	Identifier	npoints		5850548	0					
ANR	5850720	PrimaryExpression	0		5850548	1					
ANR	5850721	ExpressionStatement	moveto_first = false	1554:8:66464:66484	5850548	2	True				
ANR	5850722	AssignmentExpression	moveto_first = false		5850548	0		=			
ANR	5850723	Identifier	moveto_first		5850548	0					
ANR	5850724	Identifier	false		5850548	1					
ANR	5850725	ElseStatement	else		5850548	0					
ANR	5850726	CompoundStatement		26:11:991:991	5850548	0					
ANR	5850727	IfStatement	"if ( ( npoints = cap_points ( ( first == 0 ? start_cap : gs_cap_butt ) , & plp -> o , points ) ) < 0 )"		5850548	0					
ANR	5850728	Condition	"( npoints = cap_points ( ( first == 0 ? start_cap : gs_cap_butt ) , & plp -> o , points ) ) < 0"	1556:12:66511:66627	5850548	0	True				
ANR	5850729	RelationalExpression	"( npoints = cap_points ( ( first == 0 ? start_cap : gs_cap_butt ) , & plp -> o , points ) ) < 0"		5850548	0		<			
ANR	5850730	AssignmentExpression	"npoints = cap_points ( ( first == 0 ? start_cap : gs_cap_butt ) , & plp -> o , points )"		5850548	0		=			
ANR	5850731	Identifier	npoints		5850548	0					
ANR	5850732	CallExpression	"cap_points ( ( first == 0 ? start_cap : gs_cap_butt ) , & plp -> o , points )"		5850548	1					
ANR	5850733	Callee	cap_points		5850548	0					
ANR	5850734	Identifier	cap_points		5850548	0					
ANR	5850735	ArgumentList	first == 0 ? start_cap : gs_cap_butt		5850548	1					
ANR	5850736	Argument	first == 0 ? start_cap : gs_cap_butt		5850548	0					
ANR	5850737	ConditionalExpression	first == 0 ? start_cap : gs_cap_butt		5850548	0					
ANR	5850738	Condition	first == 0		5850548	0					
ANR	5850739	EqualityExpression	first == 0		5850548	0		==			
ANR	5850740	Identifier	first		5850548	0					
ANR	5850741	PrimaryExpression	0		5850548	1					
ANR	5850742	Identifier	start_cap		5850548	1					
ANR	5850743	Identifier	gs_cap_butt		5850548	2					
ANR	5850744	Argument	& plp -> o		5850548	1					
ANR	5850745	UnaryOperationExpression	& plp -> o		5850548	0					
ANR	5850746	UnaryOperator	&		5850548	0					
ANR	5850747	PtrMemberAccess	plp -> o		5850548	1					
ANR	5850748	Identifier	plp		5850548	0					
ANR	5850749	Identifier	o		5850548	1					
ANR	5850750	Argument	points		5850548	2					
ANR	5850751	Identifier	points		5850548	0					
ANR	5850752	PrimaryExpression	0		5850548	1					
ANR	5850753	ReturnStatement	return npoints ;	1558:12:66642:66656	5850548	1	True				
ANR	5850754	Identifier	npoints		5850548	0					
ANR	5850755	IfStatement	if ( nplp == 0 )		5850548	9					
ANR	5850756	Condition	nplp == 0	1560:8:66672:66680	5850548	0	True				
ANR	5850757	EqualityExpression	nplp == 0		5850548	0		==			
ANR	5850758	Identifier	nplp		5850548	0					
ANR	5850759	PrimaryExpression	0		5850548	1					
ANR	5850760	CompoundStatement		31:19:1177:1177	5850548	1					
ANR	5850761	IfStatement	if ( end_cap == gs_cap_round )		5850548	0					
ANR	5850762	Condition	end_cap == gs_cap_round	1562:12:66728:66750	5850548	0	True				
ANR	5850763	EqualityExpression	end_cap == gs_cap_round		5850548	0		==			
ANR	5850764	Identifier	end_cap		5850548	0					
ANR	5850765	Identifier	gs_cap_round		5850548	1					
ANR	5850766	CompoundStatement		33:37:1247:1247	5850548	1					
ANR	5850767	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"	1563:12:66767:66808	5850548	0	True				
ANR	5850768	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"		5850548	0					
ANR	5850769	Callee	ASSIGN_POINT		5850548	0					
ANR	5850770	Identifier	ASSIGN_POINT		5850548	0					
ANR	5850771	ArgumentList	& points [ npoints ]		5850548	1					
ANR	5850772	Argument	& points [ npoints ]		5850548	0					
ANR	5850773	UnaryOperationExpression	& points [ npoints ]		5850548	0					
ANR	5850774	UnaryOperator	&		5850548	0					
ANR	5850775	ArrayIndexing	points [ npoints ]		5850548	1					
ANR	5850776	Identifier	points		5850548	0					
ANR	5850777	Identifier	npoints		5850548	1					
ANR	5850778	Argument	plp -> e . co		5850548	1					
ANR	5850779	MemberAccess	plp -> e . co		5850548	0					
ANR	5850780	PtrMemberAccess	plp -> e		5850548	0					
ANR	5850781	Identifier	plp		5850548	0					
ANR	5850782	Identifier	e		5850548	1					
ANR	5850783	Identifier	co		5850548	1					
ANR	5850784	ExpressionStatement	++ npoints	1564:12:66822:66831	5850548	1	True				
ANR	5850785	UnaryExpression	++ npoints		5850548	0					
ANR	5850786	IncDec	++		5850548	0					
ANR	5850787	Identifier	npoints		5850548	1					
ANR	5850788	IfStatement	"if ( ( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0 )"		5850548	2					
ANR	5850789	Condition	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"	1565:16:66849:66909	5850548	0	True				
ANR	5850790	RelationalExpression	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"		5850548	0		<			
ANR	5850791	AssignmentExpression	"code = add_points ( ppath , points , npoints , moveto_first )"		5850548	0		=			
ANR	5850792	Identifier	code		5850548	0					
ANR	5850793	CallExpression	"add_points ( ppath , points , npoints , moveto_first )"		5850548	1					
ANR	5850794	Callee	add_points		5850548	0					
ANR	5850795	Identifier	add_points		5850548	0					
ANR	5850796	ArgumentList	ppath		5850548	1					
ANR	5850797	Argument	ppath		5850548	0					
ANR	5850798	Identifier	ppath		5850548	0					
ANR	5850799	Argument	points		5850548	1					
ANR	5850800	Identifier	points		5850548	0					
ANR	5850801	Argument	npoints		5850548	2					
ANR	5850802	Identifier	npoints		5850548	0					
ANR	5850803	Argument	moveto_first		5850548	3					
ANR	5850804	Identifier	moveto_first		5850548	0					
ANR	5850805	PrimaryExpression	0		5850548	1					
ANR	5850806	ReturnStatement	return code ;	1566:16:66928:66939	5850548	1	True				
ANR	5850807	Identifier	code		5850548	0					
ANR	5850808	ExpressionStatement	"code = add_pie_cap ( ppath , & plp -> e )"	1567:12:66953:66987	5850548	3	True				
ANR	5850809	AssignmentExpression	"code = add_pie_cap ( ppath , & plp -> e )"		5850548	0		=			
ANR	5850810	Identifier	code		5850548	0					
ANR	5850811	CallExpression	"add_pie_cap ( ppath , & plp -> e )"		5850548	1					
ANR	5850812	Callee	add_pie_cap		5850548	0					
ANR	5850813	Identifier	add_pie_cap		5850548	0					
ANR	5850814	ArgumentList	ppath		5850548	1					
ANR	5850815	Argument	ppath		5850548	0					
ANR	5850816	Identifier	ppath		5850548	0					
ANR	5850817	Argument	& plp -> e		5850548	1					
ANR	5850818	UnaryOperationExpression	& plp -> e		5850548	0					
ANR	5850819	UnaryOperator	&		5850548	0					
ANR	5850820	PtrMemberAccess	plp -> e		5850548	1					
ANR	5850821	Identifier	plp		5850548	0					
ANR	5850822	Identifier	e		5850548	1					
ANR	5850823	GotoStatement	goto done ;	1568:12:67001:67010	5850548	4	True				
ANR	5850824	Identifier	done		5850548	0					
ANR	5850825	ExpressionStatement	"code = cap_points ( end_cap , & plp -> e , points + npoints )"	1570:8:67030:67083	5850548	1	True				
ANR	5850826	AssignmentExpression	"code = cap_points ( end_cap , & plp -> e , points + npoints )"		5850548	0		=			
ANR	5850827	Identifier	code		5850548	0					
ANR	5850828	CallExpression	"cap_points ( end_cap , & plp -> e , points + npoints )"		5850548	1					
ANR	5850829	Callee	cap_points		5850548	0					
ANR	5850830	Identifier	cap_points		5850548	0					
ANR	5850831	ArgumentList	end_cap		5850548	1					
ANR	5850832	Argument	end_cap		5850548	0					
ANR	5850833	Identifier	end_cap		5850548	0					
ANR	5850834	Argument	& plp -> e		5850548	1					
ANR	5850835	UnaryOperationExpression	& plp -> e		5850548	0					
ANR	5850836	UnaryOperator	&		5850548	0					
ANR	5850837	PtrMemberAccess	plp -> e		5850548	1					
ANR	5850838	Identifier	plp		5850548	0					
ANR	5850839	Identifier	e		5850548	1					
ANR	5850840	Argument	points + npoints		5850548	2					
ANR	5850841	AdditiveExpression	points + npoints		5850548	0		+			
ANR	5850842	Identifier	points		5850548	0					
ANR	5850843	Identifier	npoints		5850548	1					
ANR	5850844	ElseStatement	else		5850548	0					
ANR	5850845	IfStatement	if ( nplp -> thin )		5850548	0					
ANR	5850846	Condition	nplp -> thin	1571:15:67100:67109	5850548	0	True				
ANR	5850847	PtrMemberAccess	nplp -> thin		5850548	0					
ANR	5850848	Identifier	nplp		5850548	0					
ANR	5850849	Identifier	thin		5850548	1					
ANR	5850850	ExpressionStatement	"code = cap_points ( gs_cap_butt , & plp -> e , points + npoints )"	1572:8:67134:67191	5850548	1	True				
ANR	5850851	AssignmentExpression	"code = cap_points ( gs_cap_butt , & plp -> e , points + npoints )"		5850548	0		=			
ANR	5850852	Identifier	code		5850548	0					
ANR	5850853	CallExpression	"cap_points ( gs_cap_butt , & plp -> e , points + npoints )"		5850548	1					
ANR	5850854	Callee	cap_points		5850548	0					
ANR	5850855	Identifier	cap_points		5850548	0					
ANR	5850856	ArgumentList	gs_cap_butt		5850548	1					
ANR	5850857	Argument	gs_cap_butt		5850548	0					
ANR	5850858	Identifier	gs_cap_butt		5850548	0					
ANR	5850859	Argument	& plp -> e		5850548	1					
ANR	5850860	UnaryOperationExpression	& plp -> e		5850548	0					
ANR	5850861	UnaryOperator	&		5850548	0					
ANR	5850862	PtrMemberAccess	plp -> e		5850548	1					
ANR	5850863	Identifier	plp		5850548	0					
ANR	5850864	Identifier	e		5850548	1					
ANR	5850865	Argument	points + npoints		5850548	2					
ANR	5850866	AdditiveExpression	points + npoints		5850548	0		+			
ANR	5850867	Identifier	points		5850548	0					
ANR	5850868	Identifier	npoints		5850548	1					
ANR	5850869	ElseStatement	else		5850548	0					
ANR	5850870	IfStatement	if ( join == gs_join_round )		5850548	0					
ANR	5850871	Condition	join == gs_join_round	1573:13:67206:67226	5850548	0	True				
ANR	5850872	EqualityExpression	join == gs_join_round		5850548	0		==			
ANR	5850873	Identifier	join		5850548	0					
ANR	5850874	Identifier	gs_join_round		5850548	1					
ANR	5850875	CompoundStatement		44:36:1723:1723	5850548	1					
ANR	5850876	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"	1574:8:67239:67280	5850548	0	True				
ANR	5850877	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"		5850548	0					
ANR	5850878	Callee	ASSIGN_POINT		5850548	0					
ANR	5850879	Identifier	ASSIGN_POINT		5850548	0					
ANR	5850880	ArgumentList	& points [ npoints ]		5850548	1					
ANR	5850881	Argument	& points [ npoints ]		5850548	0					
ANR	5850882	UnaryOperationExpression	& points [ npoints ]		5850548	0					
ANR	5850883	UnaryOperator	&		5850548	0					
ANR	5850884	ArrayIndexing	points [ npoints ]		5850548	1					
ANR	5850885	Identifier	points		5850548	0					
ANR	5850886	Identifier	npoints		5850548	1					
ANR	5850887	Argument	plp -> e . co		5850548	1					
ANR	5850888	MemberAccess	plp -> e . co		5850548	0					
ANR	5850889	PtrMemberAccess	plp -> e		5850548	0					
ANR	5850890	Identifier	plp		5850548	0					
ANR	5850891	Identifier	e		5850548	1					
ANR	5850892	Identifier	co		5850548	1					
ANR	5850893	ExpressionStatement	++ npoints	1575:8:67290:67299	5850548	1	True				
ANR	5850894	UnaryExpression	++ npoints		5850548	0					
ANR	5850895	IncDec	++		5850548	0					
ANR	5850896	Identifier	npoints		5850548	1					
ANR	5850897	IfStatement	"if ( ( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0 )"		5850548	2					
ANR	5850898	Condition	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"	1576:12:67313:67373	5850548	0	True				
ANR	5850899	RelationalExpression	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"		5850548	0		<			
ANR	5850900	AssignmentExpression	"code = add_points ( ppath , points , npoints , moveto_first )"		5850548	0		=			
ANR	5850901	Identifier	code		5850548	0					
ANR	5850902	CallExpression	"add_points ( ppath , points , npoints , moveto_first )"		5850548	1					
ANR	5850903	Callee	add_points		5850548	0					
ANR	5850904	Identifier	add_points		5850548	0					
ANR	5850905	ArgumentList	ppath		5850548	1					
ANR	5850906	Argument	ppath		5850548	0					
ANR	5850907	Identifier	ppath		5850548	0					
ANR	5850908	Argument	points		5850548	1					
ANR	5850909	Identifier	points		5850548	0					
ANR	5850910	Argument	npoints		5850548	2					
ANR	5850911	Identifier	npoints		5850548	0					
ANR	5850912	Argument	moveto_first		5850548	3					
ANR	5850913	Identifier	moveto_first		5850548	0					
ANR	5850914	PrimaryExpression	0		5850548	1					
ANR	5850915	ReturnStatement	return code ;	1577:12:67388:67399	5850548	1	True				
ANR	5850916	Identifier	code		5850548	0					
ANR	5850917	ExpressionStatement	"code = add_pie_join ( ppath , plp , nplp , reflected , true )"	1578:8:67409:67463	5850548	3	True				
ANR	5850918	AssignmentExpression	"code = add_pie_join ( ppath , plp , nplp , reflected , true )"		5850548	0		=			
ANR	5850919	Identifier	code		5850548	0					
ANR	5850920	CallExpression	"add_pie_join ( ppath , plp , nplp , reflected , true )"		5850548	1					
ANR	5850921	Callee	add_pie_join		5850548	0					
ANR	5850922	Identifier	add_pie_join		5850548	0					
ANR	5850923	ArgumentList	ppath		5850548	1					
ANR	5850924	Argument	ppath		5850548	0					
ANR	5850925	Identifier	ppath		5850548	0					
ANR	5850926	Argument	plp		5850548	1					
ANR	5850927	Identifier	plp		5850548	0					
ANR	5850928	Argument	nplp		5850548	2					
ANR	5850929	Identifier	nplp		5850548	0					
ANR	5850930	Argument	reflected		5850548	3					
ANR	5850931	Identifier	reflected		5850548	0					
ANR	5850932	Argument	true		5850548	4					
ANR	5850933	Identifier	true		5850548	0					
ANR	5850934	GotoStatement	goto done ;	1579:8:67473:67482	5850548	4	True				
ANR	5850935	Identifier	done		5850548	0					
ANR	5850936	ElseStatement	else		5850548	0					
ANR	5850937	IfStatement	if ( flags & nf_all_from_arc )		5850548	0					
ANR	5850938	Condition	flags & nf_all_from_arc	1580:15:67499:67521	5850548	0	True				
ANR	5850939	BitAndExpression	flags & nf_all_from_arc		5850548	0		&			
ANR	5850940	Identifier	flags		5850548	0					
ANR	5850941	Identifier	nf_all_from_arc		5850548	1					
ANR	5850942	CompoundStatement		51:40:2018:2018	5850548	1					
ANR	5850943	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"	1584:8:67741:67782	5850548	0	True				
ANR	5850944	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"		5850548	0					
ANR	5850945	Callee	ASSIGN_POINT		5850548	0					
ANR	5850946	Identifier	ASSIGN_POINT		5850548	0					
ANR	5850947	ArgumentList	& points [ npoints ]		5850548	1					
ANR	5850948	Argument	& points [ npoints ]		5850548	0					
ANR	5850949	UnaryOperationExpression	& points [ npoints ]		5850548	0					
ANR	5850950	UnaryOperator	&		5850548	0					
ANR	5850951	ArrayIndexing	points [ npoints ]		5850548	1					
ANR	5850952	Identifier	points		5850548	0					
ANR	5850953	Identifier	npoints		5850548	1					
ANR	5850954	Argument	plp -> e . co		5850548	1					
ANR	5850955	MemberAccess	plp -> e . co		5850548	0					
ANR	5850956	PtrMemberAccess	plp -> e		5850548	0					
ANR	5850957	Identifier	plp		5850548	0					
ANR	5850958	Identifier	e		5850548	1					
ANR	5850959	Identifier	co		5850548	1					
ANR	5850960	ExpressionStatement	++ npoints	1585:8:67792:67801	5850548	1	True				
ANR	5850961	UnaryExpression	++ npoints		5850548	0					
ANR	5850962	IncDec	++		5850548	0					
ANR	5850963	Identifier	npoints		5850548	1					
ANR	5850964	IfStatement	"if ( ( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0 )"		5850548	2					
ANR	5850965	Condition	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"	1586:12:67815:67875	5850548	0	True				
ANR	5850966	RelationalExpression	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"		5850548	0		<			
ANR	5850967	AssignmentExpression	"code = add_points ( ppath , points , npoints , moveto_first )"		5850548	0		=			
ANR	5850968	Identifier	code		5850548	0					
ANR	5850969	CallExpression	"add_points ( ppath , points , npoints , moveto_first )"		5850548	1					
ANR	5850970	Callee	add_points		5850548	0					
ANR	5850971	Identifier	add_points		5850548	0					
ANR	5850972	ArgumentList	ppath		5850548	1					
ANR	5850973	Argument	ppath		5850548	0					
ANR	5850974	Identifier	ppath		5850548	0					
ANR	5850975	Argument	points		5850548	1					
ANR	5850976	Identifier	points		5850548	0					
ANR	5850977	Argument	npoints		5850548	2					
ANR	5850978	Identifier	npoints		5850548	0					
ANR	5850979	Argument	moveto_first		5850548	3					
ANR	5850980	Identifier	moveto_first		5850548	0					
ANR	5850981	PrimaryExpression	0		5850548	1					
ANR	5850982	ReturnStatement	return code ;	1587:12:67890:67901	5850548	1	True				
ANR	5850983	Identifier	code		5850548	0					
ANR	5850984	ExpressionStatement	"code = add_pie_join ( ppath , plp , nplp , reflected , false )"	1588:8:67911:67966	5850548	3	True				
ANR	5850985	AssignmentExpression	"code = add_pie_join ( ppath , plp , nplp , reflected , false )"		5850548	0		=			
ANR	5850986	Identifier	code		5850548	0					
ANR	5850987	CallExpression	"add_pie_join ( ppath , plp , nplp , reflected , false )"		5850548	1					
ANR	5850988	Callee	add_pie_join		5850548	0					
ANR	5850989	Identifier	add_pie_join		5850548	0					
ANR	5850990	ArgumentList	ppath		5850548	1					
ANR	5850991	Argument	ppath		5850548	0					
ANR	5850992	Identifier	ppath		5850548	0					
ANR	5850993	Argument	plp		5850548	1					
ANR	5850994	Identifier	plp		5850548	0					
ANR	5850995	Argument	nplp		5850548	2					
ANR	5850996	Identifier	nplp		5850548	0					
ANR	5850997	Argument	reflected		5850548	3					
ANR	5850998	Identifier	reflected		5850548	0					
ANR	5850999	Argument	false		5850548	4					
ANR	5851000	Identifier	false		5850548	0					
ANR	5851001	GotoStatement	goto done ;	1589:8:67976:67985	5850548	4	True				
ANR	5851002	Identifier	done		5850548	0					
ANR	5851003	ElseStatement	else		5850548	0					
ANR	5851004	ExpressionStatement	"code = line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"	1591:7:68047:68234	5850548	0	True				
ANR	5851005	AssignmentExpression	"code = line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5850548	0		=			
ANR	5851006	Identifier	code		5850548	0					
ANR	5851007	CallExpression	"line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5850548	1					
ANR	5851008	Callee	line_join_points		5850548	0					
ANR	5851009	Identifier	line_join_points		5850548	0					
ANR	5851010	ArgumentList	pgs_lp		5850548	1					
ANR	5851011	Argument	pgs_lp		5850548	0					
ANR	5851012	Identifier	pgs_lp		5850548	0					
ANR	5851013	Argument	plp		5850548	1					
ANR	5851014	Identifier	plp		5850548	0					
ANR	5851015	Argument	nplp		5850548	2					
ANR	5851016	Identifier	nplp		5850548	0					
ANR	5851017	Argument	points + npoints		5850548	3					
ANR	5851018	AdditiveExpression	points + npoints		5850548	0		+			
ANR	5851019	Identifier	points		5850548	0					
ANR	5851020	Identifier	npoints		5850548	1					
ANR	5851021	Argument	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5850548	4					
ANR	5851022	ConditionalExpression	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5850548	0					
ANR	5851023	Condition	uniform		5850548	0					
ANR	5851024	Identifier	uniform		5850548	0					
ANR	5851025	CastExpression	( gs_matrix * ) 0		5850548	1					
ANR	5851026	CastTarget	gs_matrix *		5850548	0					
ANR	5851027	PrimaryExpression	0		5850548	1					
ANR	5851028	UnaryOperationExpression	& ctm_only ( pgs )		5850548	2					
ANR	5851029	UnaryOperator	&		5850548	0					
ANR	5851030	CallExpression	ctm_only ( pgs )		5850548	1					
ANR	5851031	Callee	ctm_only		5850548	0					
ANR	5851032	Identifier	ctm_only		5850548	0					
ANR	5851033	ArgumentList	pgs		5850548	1					
ANR	5851034	Argument	pgs		5850548	0					
ANR	5851035	Identifier	pgs		5850548	0					
ANR	5851036	Argument	join		5850548	5					
ANR	5851037	Identifier	join		5850548	0					
ANR	5851038	Argument	reflected		5850548	6					
ANR	5851039	Identifier	reflected		5850548	0					
ANR	5851040	IfStatement	if ( code < 0 )		5850548	10					
ANR	5851041	Condition	code < 0	1594:8:68244:68251	5850548	0	True				
ANR	5851042	RelationalExpression	code < 0		5850548	0		<			
ANR	5851043	Identifier	code		5850548	0					
ANR	5851044	PrimaryExpression	0		5850548	1					
ANR	5851045	ReturnStatement	return code ;	1595:8:68262:68273	5850548	1	True				
ANR	5851046	Identifier	code		5850548	0					
ANR	5851047	ExpressionStatement	"code = add_points ( ppath , points , npoints + code , moveto_first )"	1596:4:68279:68341	5850548	11	True				
ANR	5851048	AssignmentExpression	"code = add_points ( ppath , points , npoints + code , moveto_first )"		5850548	0		=			
ANR	5851049	Identifier	code		5850548	0					
ANR	5851050	CallExpression	"add_points ( ppath , points , npoints + code , moveto_first )"		5850548	1					
ANR	5851051	Callee	add_points		5850548	0					
ANR	5851052	Identifier	add_points		5850548	0					
ANR	5851053	ArgumentList	ppath		5850548	1					
ANR	5851054	Argument	ppath		5850548	0					
ANR	5851055	Identifier	ppath		5850548	0					
ANR	5851056	Argument	points		5850548	1					
ANR	5851057	Identifier	points		5850548	0					
ANR	5851058	Argument	npoints + code		5850548	2					
ANR	5851059	AdditiveExpression	npoints + code		5850548	0		+			
ANR	5851060	Identifier	npoints		5850548	0					
ANR	5851061	Identifier	code		5850548	1					
ANR	5851062	Argument	moveto_first		5850548	3					
ANR	5851063	Identifier	moveto_first		5850548	0					
ANR	5851064	Label	done :	1597:2:68345:68349	5850548	12	True				
ANR	5851065	Identifier	done		5850548	0					
ANR	5851066	IfStatement	if ( code < 0 )		5850548	13					
ANR	5851067	Condition	code < 0	1598:8:68359:68366	5850548	0	True				
ANR	5851068	RelationalExpression	code < 0		5850548	0		<			
ANR	5851069	Identifier	code		5850548	0					
ANR	5851070	PrimaryExpression	0		5850548	1					
ANR	5851071	ReturnStatement	return code ;	1599:8:68377:68388	5850548	1	True				
ANR	5851072	Identifier	code		5850548	0					
ANR	5851073	IfStatement	if ( ( flags & nf_some_from_arc ) && ( ! plp -> thin ) && ( nplp != NULL ) && ( ! nplp -> thin ) )		5850548	14					
ANR	5851074	Condition	( flags & nf_some_from_arc ) && ( ! plp -> thin ) && ( nplp != NULL ) && ( ! nplp -> thin )	1600:8:68398:68482	5850548	0	True				
ANR	5851075	AndExpression	( flags & nf_some_from_arc ) && ( ! plp -> thin ) && ( nplp != NULL ) && ( ! nplp -> thin )		5850548	0		&&			
ANR	5851076	BitAndExpression	flags & nf_some_from_arc		5850548	0		&			
ANR	5851077	Identifier	flags		5850548	0					
ANR	5851078	Identifier	nf_some_from_arc		5850548	1					
ANR	5851079	AndExpression	( ! plp -> thin ) && ( nplp != NULL ) && ( ! nplp -> thin )		5850548	1		&&			
ANR	5851080	UnaryOperationExpression	! plp -> thin		5850548	0					
ANR	5851081	UnaryOperator	!		5850548	0					
ANR	5851082	PtrMemberAccess	plp -> thin		5850548	1					
ANR	5851083	Identifier	plp		5850548	0					
ANR	5851084	Identifier	thin		5850548	1					
ANR	5851085	AndExpression	( nplp != NULL ) && ( ! nplp -> thin )		5850548	1		&&			
ANR	5851086	EqualityExpression	nplp != NULL		5850548	0		!=			
ANR	5851087	Identifier	nplp		5850548	0					
ANR	5851088	Identifier	NULL		5850548	1					
ANR	5851089	UnaryOperationExpression	! nplp -> thin		5850548	1					
ANR	5851090	UnaryOperator	!		5850548	0					
ANR	5851091	PtrMemberAccess	nplp -> thin		5850548	1					
ANR	5851092	Identifier	nplp		5850548	0					
ANR	5851093	Identifier	thin		5850548	1					
ANR	5851094	ExpressionStatement	"code = join_under_pie ( ppath , plp , nplp , reflected )"	1602:8:68493:68543	5850548	1	True				
ANR	5851095	AssignmentExpression	"code = join_under_pie ( ppath , plp , nplp , reflected )"		5850548	0		=			
ANR	5851096	Identifier	code		5850548	0					
ANR	5851097	CallExpression	"join_under_pie ( ppath , plp , nplp , reflected )"		5850548	1					
ANR	5851098	Callee	join_under_pie		5850548	0					
ANR	5851099	Identifier	join_under_pie		5850548	0					
ANR	5851100	ArgumentList	ppath		5850548	1					
ANR	5851101	Argument	ppath		5850548	0					
ANR	5851102	Identifier	ppath		5850548	0					
ANR	5851103	Argument	plp		5850548	1					
ANR	5851104	Identifier	plp		5850548	0					
ANR	5851105	Argument	nplp		5850548	2					
ANR	5851106	Identifier	nplp		5850548	0					
ANR	5851107	Argument	reflected		5850548	3					
ANR	5851108	Identifier	reflected		5850548	0					
ANR	5851109	ReturnStatement	return gx_path_close_subpath ( ppath ) ;	1603:4:68549:68584	5850548	15	True				
ANR	5851110	CallExpression	gx_path_close_subpath ( ppath )		5850548	0					
ANR	5851111	Callee	gx_path_close_subpath		5850548	0					
ANR	5851112	Identifier	gx_path_close_subpath		5850548	0					
ANR	5851113	ArgumentList	ppath		5850548	1					
ANR	5851114	Argument	ppath		5850548	0					
ANR	5851115	Identifier	ppath		5850548	0					
ANR	5851116	ReturnType	static int		5850548	1					
ANR	5851117	Identifier	stroke_add		5850548	2					
ANR	5851118	ParameterList	"gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * ignore_pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags"		5850548	3					
ANR	5851119	Parameter	gx_path * ppath	1524:11:65154:65168	5850548	0	True				
ANR	5851120	ParameterType	gx_path *		5850548	0					
ANR	5851121	Identifier	ppath		5850548	1					
ANR	5851122	Parameter	gx_path * rpath	1524:28:65171:65185	5850548	1	True				
ANR	5851123	ParameterType	gx_path *		5850548	0					
ANR	5851124	Identifier	rpath		5850548	1					
ANR	5851125	Parameter	bool ensure_closed	1524:45:65188:65205	5850548	2	True				
ANR	5851126	ParameterType	bool		5850548	0					
ANR	5851127	Identifier	ensure_closed		5850548	1					
ANR	5851128	Parameter	int first	1524:65:65208:65216	5850548	3	True				
ANR	5851129	ParameterType	int		5850548	0					
ANR	5851130	Identifier	first		5850548	1					
ANR	5851131	Parameter	pl_ptr plp	1525:11:65230:65239	5850548	4	True				
ANR	5851132	ParameterType	pl_ptr		5850548	0					
ANR	5851133	Identifier	plp		5850548	1					
ANR	5851134	Parameter	pl_ptr nplp	1525:23:65242:65252	5850548	5	True				
ANR	5851135	ParameterType	pl_ptr		5850548	0					
ANR	5851136	Identifier	nplp		5850548	1					
ANR	5851137	Parameter	const gx_device_color * pdevc	1525:36:65255:65283	5850548	6	True				
ANR	5851138	ParameterType	const gx_device_color *		5850548	0					
ANR	5851139	Identifier	pdevc		5850548	1					
ANR	5851140	Parameter	gx_device * dev	1526:11:65297:65311	5850548	7	True				
ANR	5851141	ParameterType	gx_device *		5850548	0					
ANR	5851142	Identifier	dev		5850548	1					
ANR	5851143	Parameter	const gs_gstate * pgs	1526:28:65314:65334	5850548	8	True				
ANR	5851144	ParameterType	const gs_gstate *		5850548	0					
ANR	5851145	Identifier	pgs		5850548	1					
ANR	5851146	Parameter	const gx_stroke_params * params	1527:11:65348:65378	5850548	9	True				
ANR	5851147	ParameterType	const gx_stroke_params *		5850548	0					
ANR	5851148	Identifier	params		5850548	1					
ANR	5851149	Parameter	const gs_fixed_rect * ignore_pbbox	1528:11:65392:65425	5850548	10	True				
ANR	5851150	ParameterType	const gs_fixed_rect *		5850548	0					
ANR	5851151	Identifier	ignore_pbbox		5850548	1					
ANR	5851152	Parameter	int uniform	1528:47:65428:65438	5850548	11	True				
ANR	5851153	ParameterType	int		5850548	0					
ANR	5851154	Identifier	uniform		5850548	1					
ANR	5851155	Parameter	gs_line_join join	1529:11:65452:65468	5850548	12	True				
ANR	5851156	ParameterType	gs_line_join		5850548	0					
ANR	5851157	Identifier	join		5850548	1					
ANR	5851158	Parameter	bool reflected	1529:30:65471:65484	5850548	13	True				
ANR	5851159	ParameterType	bool		5850548	0					
ANR	5851160	Identifier	reflected		5850548	1					
ANR	5851161	Parameter	note_flags flags	1529:46:65487:65502	5850548	14	True				
ANR	5851162	ParameterType	note_flags		5850548	0					
ANR	5851163	Identifier	flags		5850548	1					
ANR	5851164	CFGEntryNode	ENTRY		5850548		True				
ANR	5851165	CFGExitNode	EXIT		5850548		True				
ANR	5851166	Symbol	nf_all_from_arc		5850548						
ANR	5851167	Symbol	pdevc		5850548						
ANR	5851168	Symbol	npoints		5850548						
ANR	5851169	Symbol	reflected		5850548						
ANR	5851170	Symbol	& plp -> e		5850548						
ANR	5851171	Symbol	nf_dash_tail		5850548						
ANR	5851172	Symbol	points		5850548						
ANR	5851173	Symbol	dev		5850548						
ANR	5851174	Symbol	plp -> e . co		5850548						
ANR	5851175	Symbol	gs_currentlineparams_inline		5850548						
ANR	5851176	Symbol	join		5850548						
ANR	5851177	Symbol	join_under_pie		5850548						
ANR	5851178	Symbol	* plp		5850548						
ANR	5851179	Symbol	add_points		5850548						
ANR	5851180	Symbol	plp -> thin		5850548						
ANR	5851181	Symbol	NULL		5850548						
ANR	5851182	Symbol	ensure_closed		5850548						
ANR	5851183	Symbol	add_pie_join		5850548						
ANR	5851184	Symbol	params		5850548						
ANR	5851185	Symbol	gx_path_add_point		5850548						
ANR	5851186	Symbol	nf_dash_head		5850548						
ANR	5851187	Symbol	gs_join_round		5850548						
ANR	5851188	Symbol	& plp -> o		5850548						
ANR	5851189	Symbol	pgs_lp -> end_cap		5850548						
ANR	5851190	Symbol	pgs_lp		5850548						
ANR	5851191	Symbol	true		5850548						
ANR	5851192	Symbol	nf_some_from_arc		5850548						
ANR	5851193	Symbol	code		5850548						
ANR	5851194	Symbol	add_pie_cap		5850548						
ANR	5851195	Symbol	cap_points		5850548						
ANR	5851196	Symbol	* pgs_lp		5850548						
ANR	5851197	Symbol	ignore_pbbox		5850548						
ANR	5851198	Symbol	flags		5850548						
ANR	5851199	Symbol	plp -> o . co		5850548						
ANR	5851200	Symbol	ppath		5850548						
ANR	5851201	Symbol	pgs_lp -> dash_cap		5850548						
ANR	5851202	Symbol	plp -> o . co . y		5850548						
ANR	5851203	Symbol	plp -> o . co . x		5850548						
ANR	5851204	Symbol	gx_path_close_subpath		5850548						
ANR	5851205	Symbol	uniform		5850548						
ANR	5851206	Symbol	moveto_first		5850548						
ANR	5851207	Symbol	end_cap		5850548						
ANR	5851208	Symbol	pgs		5850548						
ANR	5851209	Symbol	gs_cap_round		5850548						
ANR	5851210	Symbol	* nplp		5850548						
ANR	5851211	Symbol	& ctm_only		5850548						
ANR	5851212	Symbol	line_join_points		5850548						
ANR	5851213	Symbol	false		5850548						
ANR	5851214	Symbol	gs_cap_butt		5850548						
ANR	5851215	Symbol	rpath		5850548						
ANR	5851216	Symbol	start_cap		5850548						
ANR	5851217	Symbol	pgs_lp -> start_cap		5850548						
ANR	5851218	Symbol	plp		5850548						
ANR	5851219	Symbol	nplp		5850548						
ANR	5851220	Symbol	plp -> o		5850548						
ANR	5851221	Symbol	plp -> e		5850548						
ANR	5851222	Symbol	nplp -> thin		5850548						
ANR	5851223	Symbol	first		5850548						
ANR	5851224	Function	wide_underjoin	1628:0:69649:70266							
ANR	5851225	FunctionDef	"wide_underjoin (pl_ptr plp , pl_ptr nplp)"		5851224	0					
ANR	5851226	CompoundStatement		1630:0:69701:70266	5851224	0					
ANR	5851227	IdentifierDeclStatement	double h_squared = ( double ) nplp -> vector . x * nplp -> vector . x + ( double ) nplp -> vector . y * nplp -> vector . y ;	1631:4:69707:69807	5851224	0	True				
ANR	5851228	IdentifierDecl	h_squared = ( double ) nplp -> vector . x * nplp -> vector . x + ( double ) nplp -> vector . y * nplp -> vector . y		5851224	0					
ANR	5851229	IdentifierDeclType	double		5851224	0					
ANR	5851230	Identifier	h_squared		5851224	1					
ANR	5851231	AssignmentExpression	h_squared = ( double ) nplp -> vector . x * nplp -> vector . x + ( double ) nplp -> vector . y * nplp -> vector . y		5851224	2		=			
ANR	5851232	Identifier	h_squared		5851224	0					
ANR	5851233	AdditiveExpression	( double ) nplp -> vector . x * nplp -> vector . x + ( double ) nplp -> vector . y * nplp -> vector . y		5851224	1		+			
ANR	5851234	MultiplicativeExpression	( double ) nplp -> vector . x * nplp -> vector . x		5851224	0		*			
ANR	5851235	CastExpression	( double ) nplp -> vector . x		5851224	0					
ANR	5851236	CastTarget	double		5851224	0					
ANR	5851237	MemberAccess	nplp -> vector . x		5851224	1					
ANR	5851238	PtrMemberAccess	nplp -> vector		5851224	0					
ANR	5851239	Identifier	nplp		5851224	0					
ANR	5851240	Identifier	vector		5851224	1					
ANR	5851241	Identifier	x		5851224	1					
ANR	5851242	MemberAccess	nplp -> vector . x		5851224	1					
ANR	5851243	PtrMemberAccess	nplp -> vector		5851224	0					
ANR	5851244	Identifier	nplp		5851224	0					
ANR	5851245	Identifier	vector		5851224	1					
ANR	5851246	Identifier	x		5851224	1					
ANR	5851247	MultiplicativeExpression	( double ) nplp -> vector . y * nplp -> vector . y		5851224	1		*			
ANR	5851248	CastExpression	( double ) nplp -> vector . y		5851224	0					
ANR	5851249	CastTarget	double		5851224	0					
ANR	5851250	MemberAccess	nplp -> vector . y		5851224	1					
ANR	5851251	PtrMemberAccess	nplp -> vector		5851224	0					
ANR	5851252	Identifier	nplp		5851224	0					
ANR	5851253	Identifier	vector		5851224	1					
ANR	5851254	Identifier	y		5851224	1					
ANR	5851255	MemberAccess	nplp -> vector . y		5851224	1					
ANR	5851256	PtrMemberAccess	nplp -> vector		5851224	0					
ANR	5851257	Identifier	nplp		5851224	0					
ANR	5851258	Identifier	vector		5851224	1					
ANR	5851259	Identifier	y		5851224	1					
ANR	5851260	IdentifierDeclStatement	double dot = ( double ) plp -> width . x * nplp -> vector . x + ( double ) plp -> width . y * nplp -> vector . y ;	1632:4:69813:69903	5851224	1	True				
ANR	5851261	IdentifierDecl	dot = ( double ) plp -> width . x * nplp -> vector . x + ( double ) plp -> width . y * nplp -> vector . y		5851224	0					
ANR	5851262	IdentifierDeclType	double		5851224	0					
ANR	5851263	Identifier	dot		5851224	1					
ANR	5851264	AssignmentExpression	dot = ( double ) plp -> width . x * nplp -> vector . x + ( double ) plp -> width . y * nplp -> vector . y		5851224	2		=			
ANR	5851265	Identifier	dot		5851224	0					
ANR	5851266	AdditiveExpression	( double ) plp -> width . x * nplp -> vector . x + ( double ) plp -> width . y * nplp -> vector . y		5851224	1		+			
ANR	5851267	MultiplicativeExpression	( double ) plp -> width . x * nplp -> vector . x		5851224	0		*			
ANR	5851268	CastExpression	( double ) plp -> width . x		5851224	0					
ANR	5851269	CastTarget	double		5851224	0					
ANR	5851270	MemberAccess	plp -> width . x		5851224	1					
ANR	5851271	PtrMemberAccess	plp -> width		5851224	0					
ANR	5851272	Identifier	plp		5851224	0					
ANR	5851273	Identifier	width		5851224	1					
ANR	5851274	Identifier	x		5851224	1					
ANR	5851275	MemberAccess	nplp -> vector . x		5851224	1					
ANR	5851276	PtrMemberAccess	nplp -> vector		5851224	0					
ANR	5851277	Identifier	nplp		5851224	0					
ANR	5851278	Identifier	vector		5851224	1					
ANR	5851279	Identifier	x		5851224	1					
ANR	5851280	MultiplicativeExpression	( double ) plp -> width . y * nplp -> vector . y		5851224	1		*			
ANR	5851281	CastExpression	( double ) plp -> width . y		5851224	0					
ANR	5851282	CastTarget	double		5851224	0					
ANR	5851283	MemberAccess	plp -> width . y		5851224	1					
ANR	5851284	PtrMemberAccess	plp -> width		5851224	0					
ANR	5851285	Identifier	plp		5851224	0					
ANR	5851286	Identifier	width		5851224	1					
ANR	5851287	Identifier	y		5851224	1					
ANR	5851288	MemberAccess	nplp -> vector . y		5851224	1					
ANR	5851289	PtrMemberAccess	nplp -> vector		5851224	0					
ANR	5851290	Identifier	nplp		5851224	0					
ANR	5851291	Identifier	vector		5851224	1					
ANR	5851292	Identifier	y		5851224	1					
ANR	5851293	IfStatement	if ( dot < 0 )		5851224	2					
ANR	5851294	Condition	dot < 0	1634:8:69914:69920	5851224	0	True				
ANR	5851295	RelationalExpression	dot < 0		5851224	0		<			
ANR	5851296	Identifier	dot		5851224	0					
ANR	5851297	PrimaryExpression	0		5851224	1					
ANR	5851298	ExpressionStatement	dot = - dot	1635:8:69931:69941	5851224	1	True				
ANR	5851299	AssignmentExpression	dot = - dot		5851224	0		=			
ANR	5851300	Identifier	dot		5851224	0					
ANR	5851301	UnaryOperationExpression	- dot		5851224	1					
ANR	5851302	UnaryOperator	-		5851224	0					
ANR	5851303	Identifier	dot		5851224	1					
ANR	5851304	IfStatement	if ( dot > h_squared )		5851224	3					
ANR	5851305	Condition	dot > h_squared	1636:8:69951:69965	5851224	0	True				
ANR	5851306	RelationalExpression	dot > h_squared		5851224	0		>			
ANR	5851307	Identifier	dot		5851224	0					
ANR	5851308	Identifier	h_squared		5851224	1					
ANR	5851309	ReturnStatement	return 1 ;	1637:8:69976:69984	5851224	1	True				
ANR	5851310	PrimaryExpression	1		5851224	0					
ANR	5851311	ExpressionStatement	h_squared = ( double ) plp -> vector . x * plp -> vector . x + ( double ) plp -> vector . y * plp -> vector . y	1639:4:69991:70080	5851224	4	True				
ANR	5851312	AssignmentExpression	h_squared = ( double ) plp -> vector . x * plp -> vector . x + ( double ) plp -> vector . y * plp -> vector . y		5851224	0		=			
ANR	5851313	Identifier	h_squared		5851224	0					
ANR	5851314	AdditiveExpression	( double ) plp -> vector . x * plp -> vector . x + ( double ) plp -> vector . y * plp -> vector . y		5851224	1		+			
ANR	5851315	MultiplicativeExpression	( double ) plp -> vector . x * plp -> vector . x		5851224	0		*			
ANR	5851316	CastExpression	( double ) plp -> vector . x		5851224	0					
ANR	5851317	CastTarget	double		5851224	0					
ANR	5851318	MemberAccess	plp -> vector . x		5851224	1					
ANR	5851319	PtrMemberAccess	plp -> vector		5851224	0					
ANR	5851320	Identifier	plp		5851224	0					
ANR	5851321	Identifier	vector		5851224	1					
ANR	5851322	Identifier	x		5851224	1					
ANR	5851323	MemberAccess	plp -> vector . x		5851224	1					
ANR	5851324	PtrMemberAccess	plp -> vector		5851224	0					
ANR	5851325	Identifier	plp		5851224	0					
ANR	5851326	Identifier	vector		5851224	1					
ANR	5851327	Identifier	x		5851224	1					
ANR	5851328	MultiplicativeExpression	( double ) plp -> vector . y * plp -> vector . y		5851224	1		*			
ANR	5851329	CastExpression	( double ) plp -> vector . y		5851224	0					
ANR	5851330	CastTarget	double		5851224	0					
ANR	5851331	MemberAccess	plp -> vector . y		5851224	1					
ANR	5851332	PtrMemberAccess	plp -> vector		5851224	0					
ANR	5851333	Identifier	plp		5851224	0					
ANR	5851334	Identifier	vector		5851224	1					
ANR	5851335	Identifier	y		5851224	1					
ANR	5851336	MemberAccess	plp -> vector . y		5851224	1					
ANR	5851337	PtrMemberAccess	plp -> vector		5851224	0					
ANR	5851338	Identifier	plp		5851224	0					
ANR	5851339	Identifier	vector		5851224	1					
ANR	5851340	Identifier	y		5851224	1					
ANR	5851341	ExpressionStatement	dot = ( double ) nplp -> width . x * plp -> vector . x + ( double ) nplp -> width . y * plp -> vector . y	1640:4:70086:70169	5851224	5	True				
ANR	5851342	AssignmentExpression	dot = ( double ) nplp -> width . x * plp -> vector . x + ( double ) nplp -> width . y * plp -> vector . y		5851224	0		=			
ANR	5851343	Identifier	dot		5851224	0					
ANR	5851344	AdditiveExpression	( double ) nplp -> width . x * plp -> vector . x + ( double ) nplp -> width . y * plp -> vector . y		5851224	1		+			
ANR	5851345	MultiplicativeExpression	( double ) nplp -> width . x * plp -> vector . x		5851224	0		*			
ANR	5851346	CastExpression	( double ) nplp -> width . x		5851224	0					
ANR	5851347	CastTarget	double		5851224	0					
ANR	5851348	MemberAccess	nplp -> width . x		5851224	1					
ANR	5851349	PtrMemberAccess	nplp -> width		5851224	0					
ANR	5851350	Identifier	nplp		5851224	0					
ANR	5851351	Identifier	width		5851224	1					
ANR	5851352	Identifier	x		5851224	1					
ANR	5851353	MemberAccess	plp -> vector . x		5851224	1					
ANR	5851354	PtrMemberAccess	plp -> vector		5851224	0					
ANR	5851355	Identifier	plp		5851224	0					
ANR	5851356	Identifier	vector		5851224	1					
ANR	5851357	Identifier	x		5851224	1					
ANR	5851358	MultiplicativeExpression	( double ) nplp -> width . y * plp -> vector . y		5851224	1		*			
ANR	5851359	CastExpression	( double ) nplp -> width . y		5851224	0					
ANR	5851360	CastTarget	double		5851224	0					
ANR	5851361	MemberAccess	nplp -> width . y		5851224	1					
ANR	5851362	PtrMemberAccess	nplp -> width		5851224	0					
ANR	5851363	Identifier	nplp		5851224	0					
ANR	5851364	Identifier	width		5851224	1					
ANR	5851365	Identifier	y		5851224	1					
ANR	5851366	MemberAccess	plp -> vector . y		5851224	1					
ANR	5851367	PtrMemberAccess	plp -> vector		5851224	0					
ANR	5851368	Identifier	plp		5851224	0					
ANR	5851369	Identifier	vector		5851224	1					
ANR	5851370	Identifier	y		5851224	1					
ANR	5851371	IfStatement	if ( dot < 0 )		5851224	6					
ANR	5851372	Condition	dot < 0	1641:8:70179:70185	5851224	0	True				
ANR	5851373	RelationalExpression	dot < 0		5851224	0		<			
ANR	5851374	Identifier	dot		5851224	0					
ANR	5851375	PrimaryExpression	0		5851224	1					
ANR	5851376	ExpressionStatement	dot = - dot	1642:8:70196:70206	5851224	1	True				
ANR	5851377	AssignmentExpression	dot = - dot		5851224	0		=			
ANR	5851378	Identifier	dot		5851224	0					
ANR	5851379	UnaryOperationExpression	- dot		5851224	1					
ANR	5851380	UnaryOperator	-		5851224	0					
ANR	5851381	Identifier	dot		5851224	1					
ANR	5851382	IfStatement	if ( dot > h_squared )		5851224	7					
ANR	5851383	Condition	dot > h_squared	1643:8:70216:70230	5851224	0	True				
ANR	5851384	RelationalExpression	dot > h_squared		5851224	0		>			
ANR	5851385	Identifier	dot		5851224	0					
ANR	5851386	Identifier	h_squared		5851224	1					
ANR	5851387	ReturnStatement	return 1 ;	1644:8:70241:70249	5851224	1	True				
ANR	5851388	PrimaryExpression	1		5851224	0					
ANR	5851389	ReturnStatement	return 0 ;	1646:4:70256:70264	5851224	8	True				
ANR	5851390	PrimaryExpression	0		5851224	0					
ANR	5851391	ReturnType	static bool		5851224	1					
ANR	5851392	Identifier	wide_underjoin		5851224	2					
ANR	5851393	ParameterList	"pl_ptr plp , pl_ptr nplp"		5851224	3					
ANR	5851394	Parameter	pl_ptr plp	1629:15:69676:69685	5851224	0	True				
ANR	5851395	ParameterType	pl_ptr		5851224	0					
ANR	5851396	Identifier	plp		5851224	1					
ANR	5851397	Parameter	pl_ptr nplp	1629:27:69688:69698	5851224	1	True				
ANR	5851398	ParameterType	pl_ptr		5851224	0					
ANR	5851399	Identifier	nplp		5851224	1					
ANR	5851400	CFGEntryNode	ENTRY		5851224		True				
ANR	5851401	CFGExitNode	EXIT		5851224		True				
ANR	5851402	Symbol	plp -> width . y		5851224						
ANR	5851403	Symbol	plp -> width . x		5851224						
ANR	5851404	Symbol	nplp -> vector		5851224						
ANR	5851405	Symbol	dot		5851224						
ANR	5851406	Symbol	h_squared		5851224						
ANR	5851407	Symbol	plp -> width		5851224						
ANR	5851408	Symbol	nplp -> width . y		5851224						
ANR	5851409	Symbol	nplp -> width		5851224						
ANR	5851410	Symbol	plp -> vector		5851224						
ANR	5851411	Symbol	plp		5851224						
ANR	5851412	Symbol	nplp		5851224						
ANR	5851413	Symbol	nplp -> vector . x		5851224						
ANR	5851414	Symbol	nplp -> vector . y		5851224						
ANR	5851415	Symbol	plp -> vector . y		5851224						
ANR	5851416	Symbol	plp -> vector . x		5851224						
ANR	5851417	Symbol	* nplp		5851224						
ANR	5851418	Symbol	* plp		5851224						
ANR	5851419	Symbol	nplp -> width . x		5851224						
ANR	5851420	Function	stroke_add_fast	1653:0:70402:80962							
ANR	5851421	FunctionDef	"stroke_add_fast (gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * ignore_pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags)"		5851420	0					
ANR	5851422	CompoundStatement		1660:0:70805:80962	5851420	0					
ANR	5851423	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	1661:4:70811:70874	5851420	0	True				
ANR	5851424	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		5851420	0					
ANR	5851425	IdentifierDeclType	const gx_line_params *		5851420	0					
ANR	5851426	Identifier	pgs_lp		5851420	1					
ANR	5851427	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		5851420	2		=			
ANR	5851428	Identifier	pgs_lp		5851420	0					
ANR	5851429	CallExpression	gs_currentlineparams_inline ( pgs )		5851420	1					
ANR	5851430	Callee	gs_currentlineparams_inline		5851420	0					
ANR	5851431	Identifier	gs_currentlineparams_inline		5851420	0					
ANR	5851432	ArgumentList	pgs		5851420	1					
ANR	5851433	Argument	pgs		5851420	0					
ANR	5851434	Identifier	pgs		5851420	0					
ANR	5851435	IdentifierDeclStatement	gs_fixed_point points [ 8 ] ;	1662:4:70880:70904	5851420	1	True				
ANR	5851436	IdentifierDecl	points [ 8 ]		5851420	0					
ANR	5851437	IdentifierDeclType	gs_fixed_point [ 8 ]		5851420	0					
ANR	5851438	Identifier	points		5851420	1					
ANR	5851439	PrimaryExpression	8		5851420	2					
ANR	5851440	IdentifierDeclStatement	gs_fixed_point rpoints [ 8 ] ;	1663:4:70910:70935	5851420	2	True				
ANR	5851441	IdentifierDecl	rpoints [ 8 ]		5851420	0					
ANR	5851442	IdentifierDeclType	gs_fixed_point [ 8 ]		5851420	0					
ANR	5851443	Identifier	rpoints		5851420	1					
ANR	5851444	PrimaryExpression	8		5851420	2					
ANR	5851445	IdentifierDeclStatement	int npoints = 0 ;	1664:4:70941:70957	5851420	3	True				
ANR	5851446	IdentifierDecl	npoints = 0		5851420	0					
ANR	5851447	IdentifierDeclType	int		5851420	0					
ANR	5851448	Identifier	npoints		5851420	1					
ANR	5851449	AssignmentExpression	npoints = 0		5851420	2		=			
ANR	5851450	Identifier	npoints		5851420	0					
ANR	5851451	PrimaryExpression	0		5851420	1					
ANR	5851452	IdentifierDeclStatement	int nrpoints = 0 ;	1665:4:70963:70979	5851420	4	True				
ANR	5851453	IdentifierDecl	nrpoints = 0		5851420	0					
ANR	5851454	IdentifierDeclType	int		5851420	0					
ANR	5851455	Identifier	nrpoints		5851420	1					
ANR	5851456	AssignmentExpression	nrpoints = 0		5851420	2		=			
ANR	5851457	Identifier	nrpoints		5851420	0					
ANR	5851458	PrimaryExpression	0		5851420	1					
ANR	5851459	IdentifierDeclStatement	int code ;	1666:4:70985:70993	5851420	5	True				
ANR	5851460	IdentifierDecl	code		5851420	0					
ANR	5851461	IdentifierDeclType	int		5851420	0					
ANR	5851462	Identifier	code		5851420	1					
ANR	5851463	IdentifierDeclStatement	bool moveto_first = false ;	1667:4:70999:71025	5851420	6	True				
ANR	5851464	IdentifierDecl	moveto_first = false		5851420	0					
ANR	5851465	IdentifierDeclType	bool		5851420	0					
ANR	5851466	Identifier	moveto_first		5851420	1					
ANR	5851467	AssignmentExpression	moveto_first = false		5851420	2		=			
ANR	5851468	Identifier	false		5851420	0					
ANR	5851469	Identifier	false		5851420	1					
ANR	5851470	IdentifierDeclStatement	bool rmoveto_first = false ;	1668:4:71031:71057	5851420	7	True				
ANR	5851471	IdentifierDecl	rmoveto_first = false		5851420	0					
ANR	5851472	IdentifierDeclType	bool		5851420	0					
ANR	5851473	Identifier	rmoveto_first		5851420	1					
ANR	5851474	AssignmentExpression	rmoveto_first = false		5851420	2		=			
ANR	5851475	Identifier	false		5851420	0					
ANR	5851476	Identifier	false		5851420	1					
ANR	5851477	IdentifierDeclStatement	"gs_line_cap start_cap , end_cap ;"	1669:4:71063:71093	5851420	8	True				
ANR	5851478	IdentifierDecl	start_cap		5851420	0					
ANR	5851479	IdentifierDeclType	gs_line_cap		5851420	0					
ANR	5851480	Identifier	start_cap		5851420	1					
ANR	5851481	IdentifierDecl	end_cap		5851420	1					
ANR	5851482	IdentifierDeclType	gs_line_cap		5851420	0					
ANR	5851483	Identifier	end_cap		5851420	1					
ANR	5851484	IfStatement	if ( plp -> thin )		5851420	9					
ANR	5851485	Condition	plp -> thin	1671:8:71104:71112	5851420	0	True				
ANR	5851486	PtrMemberAccess	plp -> thin		5851420	0					
ANR	5851487	Identifier	plp		5851420	0					
ANR	5851488	Identifier	thin		5851420	1					
ANR	5851489	CompoundStatement		12:19:309:309	5851420	1					
ANR	5851490	ExpressionStatement	set_thin_widths ( plp )	1674:8:71241:71261	5851420	0	True				
ANR	5851491	CallExpression	set_thin_widths ( plp )		5851420	0					
ANR	5851492	Callee	set_thin_widths		5851420	0					
ANR	5851493	Identifier	set_thin_widths		5851420	0					
ANR	5851494	ArgumentList	plp		5851420	1					
ANR	5851495	Argument	plp		5851420	0					
ANR	5851496	Identifier	plp		5851420	0					
ANR	5851497	ExpressionStatement	"adjust_stroke ( dev , plp , pgs , true , first == 0 && nplp == 0 , flags )"	1675:8:71271:71337	5851420	1	True				
ANR	5851498	CallExpression	"adjust_stroke ( dev , plp , pgs , true , first == 0 && nplp == 0 , flags )"		5851420	0					
ANR	5851499	Callee	adjust_stroke		5851420	0					
ANR	5851500	Identifier	adjust_stroke		5851420	0					
ANR	5851501	ArgumentList	dev		5851420	1					
ANR	5851502	Argument	dev		5851420	0					
ANR	5851503	Identifier	dev		5851420	0					
ANR	5851504	Argument	plp		5851420	1					
ANR	5851505	Identifier	plp		5851420	0					
ANR	5851506	Argument	pgs		5851420	2					
ANR	5851507	Identifier	pgs		5851420	0					
ANR	5851508	Argument	true		5851420	3					
ANR	5851509	Identifier	true		5851420	0					
ANR	5851510	Argument	first == 0 && nplp == 0		5851420	4					
ANR	5851511	AndExpression	first == 0 && nplp == 0		5851420	0		&&			
ANR	5851512	EqualityExpression	first == 0		5851420	0		==			
ANR	5851513	Identifier	first		5851420	0					
ANR	5851514	PrimaryExpression	0		5851420	1					
ANR	5851515	EqualityExpression	nplp == 0		5851420	1		==			
ANR	5851516	Identifier	nplp		5851420	0					
ANR	5851517	PrimaryExpression	0		5851420	1					
ANR	5851518	Argument	flags		5851420	5					
ANR	5851519	Identifier	flags		5851420	0					
ANR	5851520	ExpressionStatement	compute_caps ( plp )	1676:8:71347:71364	5851420	2	True				
ANR	5851521	CallExpression	compute_caps ( plp )		5851420	0					
ANR	5851522	Callee	compute_caps		5851420	0					
ANR	5851523	Identifier	compute_caps		5851420	0					
ANR	5851524	ArgumentList	plp		5851420	1					
ANR	5851525	Argument	plp		5851420	0					
ANR	5851526	Identifier	plp		5851420	0					
ANR	5851527	ExpressionStatement	start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap )	1678:4:71376:71466	5851420	10	True				
ANR	5851528	AssignmentExpression	start_cap = ( flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap )		5851420	0		=			
ANR	5851529	Identifier	start_cap		5851420	0					
ANR	5851530	ConditionalExpression	flags & nf_dash_head ? pgs_lp -> dash_cap : pgs_lp -> start_cap		5851420	1					
ANR	5851531	Condition	flags & nf_dash_head		5851420	0					
ANR	5851532	BitAndExpression	flags & nf_dash_head		5851420	0		&			
ANR	5851533	Identifier	flags		5851420	0					
ANR	5851534	Identifier	nf_dash_head		5851420	1					
ANR	5851535	PtrMemberAccess	pgs_lp -> dash_cap		5851420	1					
ANR	5851536	Identifier	pgs_lp		5851420	0					
ANR	5851537	Identifier	dash_cap		5851420	1					
ANR	5851538	PtrMemberAccess	pgs_lp -> start_cap		5851420	2					
ANR	5851539	Identifier	pgs_lp		5851420	0					
ANR	5851540	Identifier	start_cap		5851420	1					
ANR	5851541	ExpressionStatement	end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap )	1680:4:71472:71560	5851420	11	True				
ANR	5851542	AssignmentExpression	end_cap = ( flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap )		5851420	0		=			
ANR	5851543	Identifier	end_cap		5851420	0					
ANR	5851544	ConditionalExpression	flags & nf_dash_tail ? pgs_lp -> dash_cap : pgs_lp -> end_cap		5851420	1					
ANR	5851545	Condition	flags & nf_dash_tail		5851420	0					
ANR	5851546	BitAndExpression	flags & nf_dash_tail		5851420	0		&			
ANR	5851547	Identifier	flags		5851420	0					
ANR	5851548	Identifier	nf_dash_tail		5851420	1					
ANR	5851549	PtrMemberAccess	pgs_lp -> dash_cap		5851420	1					
ANR	5851550	Identifier	pgs_lp		5851420	0					
ANR	5851551	Identifier	dash_cap		5851420	1					
ANR	5851552	PtrMemberAccess	pgs_lp -> end_cap		5851420	2					
ANR	5851553	Identifier	pgs_lp		5851420	0					
ANR	5851554	Identifier	end_cap		5851420	1					
ANR	5851555	IfStatement	if ( gx_path_is_void ( rpath ) && ( first != 0 ) )		5851420	12					
ANR	5851556	Condition	gx_path_is_void ( rpath ) && ( first != 0 )	1684:8:71708:71745	5851420	0	True				
ANR	5851557	AndExpression	gx_path_is_void ( rpath ) && ( first != 0 )		5851420	0		&&			
ANR	5851558	CallExpression	gx_path_is_void ( rpath )		5851420	0					
ANR	5851559	Callee	gx_path_is_void		5851420	0					
ANR	5851560	Identifier	gx_path_is_void		5851420	0					
ANR	5851561	ArgumentList	rpath		5851420	1					
ANR	5851562	Argument	rpath		5851420	0					
ANR	5851563	Identifier	rpath		5851420	0					
ANR	5851564	EqualityExpression	first != 0		5851420	1		!=			
ANR	5851565	Identifier	first		5851420	0					
ANR	5851566	PrimaryExpression	0		5851420	1					
ANR	5851567	CompoundStatement		25:48:942:942	5851420	1					
ANR	5851568	ExpressionStatement	first = 0	1685:8:71758:71767	5851420	0	True				
ANR	5851569	AssignmentExpression	first = 0		5851420	0		=			
ANR	5851570	Identifier	first		5851420	0					
ANR	5851571	PrimaryExpression	0		5851420	1					
ANR	5851572	ExpressionStatement	start_cap = gs_cap_butt	1686:8:71777:71800	5851420	1	True				
ANR	5851573	AssignmentExpression	start_cap = gs_cap_butt		5851420	0		=			
ANR	5851574	Identifier	start_cap		5851420	0					
ANR	5851575	Identifier	gs_cap_butt		5851420	1					
ANR	5851576	ExpressionStatement	end_cap = gs_cap_butt	1687:8:71810:71833	5851420	2	True				
ANR	5851577	AssignmentExpression	end_cap = gs_cap_butt		5851420	0		=			
ANR	5851578	Identifier	end_cap		5851420	0					
ANR	5851579	Identifier	gs_cap_butt		5851420	1					
ANR	5851580	ExpressionStatement	moveto_first = true	1688:8:71843:71863	5851420	3	True				
ANR	5851581	AssignmentExpression	moveto_first = true		5851420	0		=			
ANR	5851582	Identifier	moveto_first		5851420	0					
ANR	5851583	Identifier	true		5851420	1					
ANR	5851584	ExpressionStatement	rmoveto_first = true	1689:8:71873:71893	5851420	4	True				
ANR	5851585	AssignmentExpression	rmoveto_first = true		5851420	0		=			
ANR	5851586	Identifier	rmoveto_first		5851420	0					
ANR	5851587	Identifier	true		5851420	1					
ANR	5851588	IfStatement	if ( first == 0 )		5851420	13					
ANR	5851589	Condition	first == 0	1691:8:71909:71918	5851420	0	True				
ANR	5851590	EqualityExpression	first == 0		5851420	0		==			
ANR	5851591	Identifier	first		5851420	0					
ANR	5851592	PrimaryExpression	0		5851420	1					
ANR	5851593	CompoundStatement		32:20:1115:1115	5851420	1					
ANR	5851594	IfStatement	if ( start_cap == gs_cap_round )		5851420	0					
ANR	5851595	Condition	start_cap == gs_cap_round	1693:12:71972:71996	5851420	0	True				
ANR	5851596	EqualityExpression	start_cap == gs_cap_round		5851420	0		==			
ANR	5851597	Identifier	start_cap		5851420	0					
ANR	5851598	Identifier	gs_cap_round		5851420	1					
ANR	5851599	CompoundStatement		34:39:1193:1193	5851420	1					
ANR	5851600	IfStatement	"if ( ( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_pie_cap ( ppath , & plp -> o ) ) < 0 )"		5851420	0					
ANR	5851601	Condition	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_pie_cap ( ppath , & plp -> o ) ) < 0"	1694:16:72017:72139	5851420	0	True				
ANR	5851602	OrExpression	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_pie_cap ( ppath , & plp -> o ) ) < 0"		5851420	0		||			
ANR	5851603	RelationalExpression	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0"		5851420	0		<			
ANR	5851604	AssignmentExpression	"code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y )"		5851420	0		=			
ANR	5851605	Identifier	code		5851420	0					
ANR	5851606	CallExpression	"gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y )"		5851420	1					
ANR	5851607	Callee	gx_path_add_point		5851420	0					
ANR	5851608	Identifier	gx_path_add_point		5851420	0					
ANR	5851609	ArgumentList	ppath		5851420	1					
ANR	5851610	Argument	ppath		5851420	0					
ANR	5851611	Identifier	ppath		5851420	0					
ANR	5851612	Argument	plp -> o . co . x		5851420	1					
ANR	5851613	MemberAccess	plp -> o . co . x		5851420	0					
ANR	5851614	MemberAccess	plp -> o . co		5851420	0					
ANR	5851615	PtrMemberAccess	plp -> o		5851420	0					
ANR	5851616	Identifier	plp		5851420	0					
ANR	5851617	Identifier	o		5851420	1					
ANR	5851618	Identifier	co		5851420	1					
ANR	5851619	Identifier	x		5851420	1					
ANR	5851620	Argument	plp -> o . co . y		5851420	2					
ANR	5851621	MemberAccess	plp -> o . co . y		5851420	0					
ANR	5851622	MemberAccess	plp -> o . co		5851420	0					
ANR	5851623	PtrMemberAccess	plp -> o		5851420	0					
ANR	5851624	Identifier	plp		5851420	0					
ANR	5851625	Identifier	o		5851420	1					
ANR	5851626	Identifier	co		5851420	1					
ANR	5851627	Identifier	y		5851420	1					
ANR	5851628	PrimaryExpression	0		5851420	1					
ANR	5851629	RelationalExpression	"( code = add_pie_cap ( ppath , & plp -> o ) ) < 0"		5851420	1		<			
ANR	5851630	AssignmentExpression	"code = add_pie_cap ( ppath , & plp -> o )"		5851420	0		=			
ANR	5851631	Identifier	code		5851420	0					
ANR	5851632	CallExpression	"add_pie_cap ( ppath , & plp -> o )"		5851420	1					
ANR	5851633	Callee	add_pie_cap		5851420	0					
ANR	5851634	Identifier	add_pie_cap		5851420	0					
ANR	5851635	ArgumentList	ppath		5851420	1					
ANR	5851636	Argument	ppath		5851420	0					
ANR	5851637	Identifier	ppath		5851420	0					
ANR	5851638	Argument	& plp -> o		5851420	1					
ANR	5851639	UnaryOperationExpression	& plp -> o		5851420	0					
ANR	5851640	UnaryOperator	&		5851420	0					
ANR	5851641	PtrMemberAccess	plp -> o		5851420	1					
ANR	5851642	Identifier	plp		5851420	0					
ANR	5851643	Identifier	o		5851420	1					
ANR	5851644	PrimaryExpression	0		5851420	1					
ANR	5851645	ReturnStatement	return code ;	1696:16:72158:72169	5851420	1	True				
ANR	5851646	Identifier	code		5851420	0					
ANR	5851647	ExpressionStatement	moveto_first = false	1697:12:72183:72203	5851420	1	True				
ANR	5851648	AssignmentExpression	moveto_first = false		5851420	0		=			
ANR	5851649	Identifier	moveto_first		5851420	0					
ANR	5851650	Identifier	false		5851420	1					
ANR	5851651	ElseStatement	else		5851420	0					
ANR	5851652	CompoundStatement		39:15:1414:1414	5851420	0					
ANR	5851653	IfStatement	"if ( ( npoints = cap_points ( start_cap , & plp -> o , points ) ) < 0 )"		5851420	0					
ANR	5851654	Condition	"( npoints = cap_points ( start_cap , & plp -> o , points ) ) < 0"	1699:16:72238:72291	5851420	0	True				
ANR	5851655	RelationalExpression	"( npoints = cap_points ( start_cap , & plp -> o , points ) ) < 0"		5851420	0		<			
ANR	5851656	AssignmentExpression	"npoints = cap_points ( start_cap , & plp -> o , points )"		5851420	0		=			
ANR	5851657	Identifier	npoints		5851420	0					
ANR	5851658	CallExpression	"cap_points ( start_cap , & plp -> o , points )"		5851420	1					
ANR	5851659	Callee	cap_points		5851420	0					
ANR	5851660	Identifier	cap_points		5851420	0					
ANR	5851661	ArgumentList	start_cap		5851420	1					
ANR	5851662	Argument	start_cap		5851420	0					
ANR	5851663	Identifier	start_cap		5851420	0					
ANR	5851664	Argument	& plp -> o		5851420	1					
ANR	5851665	UnaryOperationExpression	& plp -> o		5851420	0					
ANR	5851666	UnaryOperator	&		5851420	0					
ANR	5851667	PtrMemberAccess	plp -> o		5851420	1					
ANR	5851668	Identifier	plp		5851420	0					
ANR	5851669	Identifier	o		5851420	1					
ANR	5851670	Argument	points		5851420	2					
ANR	5851671	Identifier	points		5851420	0					
ANR	5851672	PrimaryExpression	0		5851420	1					
ANR	5851673	ReturnStatement	return npoints ;	1700:16:72310:72324	5851420	1	True				
ANR	5851674	Identifier	npoints		5851420	0					
ANR	5851675	ExpressionStatement	moveto_first = true	1701:12:72338:72357	5851420	1	True				
ANR	5851676	AssignmentExpression	moveto_first = true		5851420	0		=			
ANR	5851677	Identifier	moveto_first		5851420	0					
ANR	5851678	Identifier	true		5851420	1					
ANR	5851679	ExpressionStatement	rmoveto_first = true	1703:8:72377:72397	5851420	1	True				
ANR	5851680	AssignmentExpression	rmoveto_first = true		5851420	0		=			
ANR	5851681	Identifier	rmoveto_first		5851420	0					
ANR	5851682	Identifier	true		5851420	1					
ANR	5851683	ExpressionStatement	"ASSIGN_POINT ( & rpoints [ 0 ] , plp -> o . co )"	1704:8:72407:72443	5851420	2	True				
ANR	5851684	CallExpression	"ASSIGN_POINT ( & rpoints [ 0 ] , plp -> o . co )"		5851420	0					
ANR	5851685	Callee	ASSIGN_POINT		5851420	0					
ANR	5851686	Identifier	ASSIGN_POINT		5851420	0					
ANR	5851687	ArgumentList	& rpoints [ 0 ]		5851420	1					
ANR	5851688	Argument	& rpoints [ 0 ]		5851420	0					
ANR	5851689	UnaryOperationExpression	& rpoints [ 0 ]		5851420	0					
ANR	5851690	UnaryOperator	&		5851420	0					
ANR	5851691	ArrayIndexing	rpoints [ 0 ]		5851420	1					
ANR	5851692	Identifier	rpoints		5851420	0					
ANR	5851693	PrimaryExpression	0		5851420	1					
ANR	5851694	Argument	plp -> o . co		5851420	1					
ANR	5851695	MemberAccess	plp -> o . co		5851420	0					
ANR	5851696	PtrMemberAccess	plp -> o		5851420	0					
ANR	5851697	Identifier	plp		5851420	0					
ANR	5851698	Identifier	o		5851420	1					
ANR	5851699	Identifier	co		5851420	1					
ANR	5851700	ExpressionStatement	nrpoints = 1	1705:8:72453:72465	5851420	3	True				
ANR	5851701	AssignmentExpression	nrpoints = 1		5851420	0		=			
ANR	5851702	Identifier	nrpoints		5851420	0					
ANR	5851703	PrimaryExpression	1		5851420	1					
ANR	5851704	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"	1708:4:72540:72583	5851420	14	True				
ANR	5851705	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"		5851420	0					
ANR	5851706	Callee	ASSIGN_POINT		5851420	0					
ANR	5851707	Identifier	ASSIGN_POINT		5851420	0					
ANR	5851708	ArgumentList	& points [ npoints ]		5851420	1					
ANR	5851709	Argument	& points [ npoints ]		5851420	0					
ANR	5851710	UnaryOperationExpression	& points [ npoints ]		5851420	0					
ANR	5851711	UnaryOperator	&		5851420	0					
ANR	5851712	ArrayIndexing	points [ npoints ]		5851420	1					
ANR	5851713	Identifier	points		5851420	0					
ANR	5851714	Identifier	npoints		5851420	1					
ANR	5851715	Argument	plp -> e . co		5851420	1					
ANR	5851716	MemberAccess	plp -> e . co		5851420	0					
ANR	5851717	PtrMemberAccess	plp -> e		5851420	0					
ANR	5851718	Identifier	plp		5851420	0					
ANR	5851719	Identifier	e		5851420	1					
ANR	5851720	Identifier	co		5851420	1					
ANR	5851721	ExpressionStatement	"ASSIGN_POINT ( & rpoints [ nrpoints ] , plp -> e . ce )"	1709:4:72589:72632	5851420	15	True				
ANR	5851722	CallExpression	"ASSIGN_POINT ( & rpoints [ nrpoints ] , plp -> e . ce )"		5851420	0					
ANR	5851723	Callee	ASSIGN_POINT		5851420	0					
ANR	5851724	Identifier	ASSIGN_POINT		5851420	0					
ANR	5851725	ArgumentList	& rpoints [ nrpoints ]		5851420	1					
ANR	5851726	Argument	& rpoints [ nrpoints ]		5851420	0					
ANR	5851727	UnaryOperationExpression	& rpoints [ nrpoints ]		5851420	0					
ANR	5851728	UnaryOperator	&		5851420	0					
ANR	5851729	ArrayIndexing	rpoints [ nrpoints ]		5851420	1					
ANR	5851730	Identifier	rpoints		5851420	0					
ANR	5851731	Identifier	nrpoints		5851420	1					
ANR	5851732	Argument	plp -> e . ce		5851420	1					
ANR	5851733	MemberAccess	plp -> e . ce		5851420	0					
ANR	5851734	PtrMemberAccess	plp -> e		5851420	0					
ANR	5851735	Identifier	plp		5851420	0					
ANR	5851736	Identifier	e		5851420	1					
ANR	5851737	Identifier	ce		5851420	1					
ANR	5851738	ExpressionStatement	npoints ++	1710:4:72638:72647	5851420	16	True				
ANR	5851739	PostIncDecOperationExpression	npoints ++		5851420	0					
ANR	5851740	Identifier	npoints		5851420	0					
ANR	5851741	IncDec	++		5851420	1					
ANR	5851742	ExpressionStatement	nrpoints ++	1711:4:72653:72663	5851420	17	True				
ANR	5851743	PostIncDecOperationExpression	nrpoints ++		5851420	0					
ANR	5851744	Identifier	nrpoints		5851420	0					
ANR	5851745	IncDec	++		5851420	1					
ANR	5851746	IfStatement	"if ( ( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0 )"		5851420	18					
ANR	5851747	Condition	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"	1712:8:72673:72733	5851420	0	True				
ANR	5851748	RelationalExpression	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"		5851420	0		<			
ANR	5851749	AssignmentExpression	"code = add_points ( ppath , points , npoints , moveto_first )"		5851420	0		=			
ANR	5851750	Identifier	code		5851420	0					
ANR	5851751	CallExpression	"add_points ( ppath , points , npoints , moveto_first )"		5851420	1					
ANR	5851752	Callee	add_points		5851420	0					
ANR	5851753	Identifier	add_points		5851420	0					
ANR	5851754	ArgumentList	ppath		5851420	1					
ANR	5851755	Argument	ppath		5851420	0					
ANR	5851756	Identifier	ppath		5851420	0					
ANR	5851757	Argument	points		5851420	1					
ANR	5851758	Identifier	points		5851420	0					
ANR	5851759	Argument	npoints		5851420	2					
ANR	5851760	Identifier	npoints		5851420	0					
ANR	5851761	Argument	moveto_first		5851420	3					
ANR	5851762	Identifier	moveto_first		5851420	0					
ANR	5851763	PrimaryExpression	0		5851420	1					
ANR	5851764	ReturnStatement	return code ;	1713:8:72744:72755	5851420	1	True				
ANR	5851765	Identifier	code		5851420	0					
ANR	5851766	IfStatement	"if ( ( code = add_points ( rpath , rpoints , nrpoints , rmoveto_first ) ) < 0 )"		5851420	19					
ANR	5851767	Condition	"( code = add_points ( rpath , rpoints , nrpoints , rmoveto_first ) ) < 0"	1714:8:72765:72828	5851420	0	True				
ANR	5851768	RelationalExpression	"( code = add_points ( rpath , rpoints , nrpoints , rmoveto_first ) ) < 0"		5851420	0		<			
ANR	5851769	AssignmentExpression	"code = add_points ( rpath , rpoints , nrpoints , rmoveto_first )"		5851420	0		=			
ANR	5851770	Identifier	code		5851420	0					
ANR	5851771	CallExpression	"add_points ( rpath , rpoints , nrpoints , rmoveto_first )"		5851420	1					
ANR	5851772	Callee	add_points		5851420	0					
ANR	5851773	Identifier	add_points		5851420	0					
ANR	5851774	ArgumentList	rpath		5851420	1					
ANR	5851775	Argument	rpath		5851420	0					
ANR	5851776	Identifier	rpath		5851420	0					
ANR	5851777	Argument	rpoints		5851420	1					
ANR	5851778	Identifier	rpoints		5851420	0					
ANR	5851779	Argument	nrpoints		5851420	2					
ANR	5851780	Identifier	nrpoints		5851420	0					
ANR	5851781	Argument	rmoveto_first		5851420	3					
ANR	5851782	Identifier	rmoveto_first		5851420	0					
ANR	5851783	PrimaryExpression	0		5851420	1					
ANR	5851784	ReturnStatement	return code ;	1715:8:72839:72850	5851420	1	True				
ANR	5851785	Identifier	code		5851420	0					
ANR	5851786	ExpressionStatement	npoints = 0	1716:4:72856:72868	5851420	20	True				
ANR	5851787	AssignmentExpression	npoints = 0		5851420	0		=			
ANR	5851788	Identifier	npoints		5851420	0					
ANR	5851789	PrimaryExpression	0		5851420	1					
ANR	5851790	ExpressionStatement	nrpoints = 0	1717:4:72874:72886	5851420	21	True				
ANR	5851791	AssignmentExpression	nrpoints = 0		5851420	0		=			
ANR	5851792	Identifier	nrpoints		5851420	0					
ANR	5851793	PrimaryExpression	0		5851420	1					
ANR	5851794	IfStatement	if ( nplp == 0 )		5851420	22					
ANR	5851795	Condition	nplp == 0	1719:8:72897:72905	5851420	0	True				
ANR	5851796	EqualityExpression	nplp == 0		5851420	0		==			
ANR	5851797	Identifier	nplp		5851420	0					
ANR	5851798	PrimaryExpression	0		5851420	1					
ANR	5851799	CompoundStatement		60:19:2102:2102	5851420	1					
ANR	5851800	IfStatement	if ( end_cap == gs_cap_round )		5851420	0					
ANR	5851801	Condition	end_cap == gs_cap_round	1720:12:72945:72967	5851420	0	True				
ANR	5851802	EqualityExpression	end_cap == gs_cap_round		5851420	0		==			
ANR	5851803	Identifier	end_cap		5851420	0					
ANR	5851804	Identifier	gs_cap_round		5851420	1					
ANR	5851805	CompoundStatement		61:37:2164:2164	5851420	1					
ANR	5851806	ExpressionStatement	"code = add_pie_cap ( ppath , & plp -> e )"	1721:12:72984:73018	5851420	0	True				
ANR	5851807	AssignmentExpression	"code = add_pie_cap ( ppath , & plp -> e )"		5851420	0		=			
ANR	5851808	Identifier	code		5851420	0					
ANR	5851809	CallExpression	"add_pie_cap ( ppath , & plp -> e )"		5851420	1					
ANR	5851810	Callee	add_pie_cap		5851420	0					
ANR	5851811	Identifier	add_pie_cap		5851420	0					
ANR	5851812	ArgumentList	ppath		5851420	1					
ANR	5851813	Argument	ppath		5851420	0					
ANR	5851814	Identifier	ppath		5851420	0					
ANR	5851815	Argument	& plp -> e		5851420	1					
ANR	5851816	UnaryOperationExpression	& plp -> e		5851420	0					
ANR	5851817	UnaryOperator	&		5851420	0					
ANR	5851818	PtrMemberAccess	plp -> e		5851420	1					
ANR	5851819	Identifier	plp		5851420	0					
ANR	5851820	Identifier	e		5851420	1					
ANR	5851821	ElseStatement	else		5851420	0					
ANR	5851822	CompoundStatement		63:15:2229:2229	5851420	0					
ANR	5851823	ExpressionStatement	"code = cap_points ( end_cap , & plp -> e , points )"	1723:12:73049:73092	5851420	0	True				
ANR	5851824	AssignmentExpression	"code = cap_points ( end_cap , & plp -> e , points )"		5851420	0		=			
ANR	5851825	Identifier	code		5851420	0					
ANR	5851826	CallExpression	"cap_points ( end_cap , & plp -> e , points )"		5851420	1					
ANR	5851827	Callee	cap_points		5851420	0					
ANR	5851828	Identifier	cap_points		5851420	0					
ANR	5851829	ArgumentList	end_cap		5851420	1					
ANR	5851830	Argument	end_cap		5851420	0					
ANR	5851831	Identifier	end_cap		5851420	0					
ANR	5851832	Argument	& plp -> e		5851420	1					
ANR	5851833	UnaryOperationExpression	& plp -> e		5851420	0					
ANR	5851834	UnaryOperator	&		5851420	0					
ANR	5851835	PtrMemberAccess	plp -> e		5851420	1					
ANR	5851836	Identifier	plp		5851420	0					
ANR	5851837	Identifier	e		5851420	1					
ANR	5851838	Argument	points		5851420	2					
ANR	5851839	Identifier	points		5851420	0					
ANR	5851840	ExpressionStatement	npoints = code	1724:12:73106:73120	5851420	1	True				
ANR	5851841	AssignmentExpression	npoints = code		5851420	0		=			
ANR	5851842	Identifier	npoints		5851420	0					
ANR	5851843	Identifier	code		5851420	1					
ANR	5851844	ElseStatement	else		5851420	0					
ANR	5851845	IfStatement	if ( nplp -> thin )		5851420	0					
ANR	5851846	Condition	nplp -> thin	1726:15:73147:73156	5851420	0	True				
ANR	5851847	PtrMemberAccess	nplp -> thin		5851420	0					
ANR	5851848	Identifier	nplp		5851420	0					
ANR	5851849	Identifier	thin		5851420	1					
ANR	5851850	CompoundStatement		67:27:2353:2353	5851420	1					
ANR	5851851	ExpressionStatement	"code = cap_points ( gs_cap_butt , & plp -> e , points )"	1727:8:73183:73230	5851420	0	True				
ANR	5851852	AssignmentExpression	"code = cap_points ( gs_cap_butt , & plp -> e , points )"		5851420	0		=			
ANR	5851853	Identifier	code		5851420	0					
ANR	5851854	CallExpression	"cap_points ( gs_cap_butt , & plp -> e , points )"		5851420	1					
ANR	5851855	Callee	cap_points		5851420	0					
ANR	5851856	Identifier	cap_points		5851420	0					
ANR	5851857	ArgumentList	gs_cap_butt		5851420	1					
ANR	5851858	Argument	gs_cap_butt		5851420	0					
ANR	5851859	Identifier	gs_cap_butt		5851420	0					
ANR	5851860	Argument	& plp -> e		5851420	1					
ANR	5851861	UnaryOperationExpression	& plp -> e		5851420	0					
ANR	5851862	UnaryOperator	&		5851420	0					
ANR	5851863	PtrMemberAccess	plp -> e		5851420	1					
ANR	5851864	Identifier	plp		5851420	0					
ANR	5851865	Identifier	e		5851420	1					
ANR	5851866	Argument	points		5851420	2					
ANR	5851867	Identifier	points		5851420	0					
ANR	5851868	ExpressionStatement	npoints = code	1728:8:73240:73254	5851420	1	True				
ANR	5851869	AssignmentExpression	npoints = code		5851420	0		=			
ANR	5851870	Identifier	npoints		5851420	0					
ANR	5851871	Identifier	code		5851420	1					
ANR	5851872	ElseStatement	else		5851420	0					
ANR	5851873	CompoundStatement		72:8:2506:2517	5851420	0					
ANR	5851874	IdentifierDeclStatement	"double l , r ;"	1731:8:73312:73323	5851420	0	True				
ANR	5851875	IdentifierDecl	l		5851420	0					
ANR	5851876	IdentifierDeclType	double		5851420	0					
ANR	5851877	Identifier	l		5851420	1					
ANR	5851878	IdentifierDecl	r		5851420	1					
ANR	5851879	IdentifierDeclType	double		5851420	0					
ANR	5851880	Identifier	r		5851420	1					
ANR	5851881	ExpressionStatement	l = ( double ) ( plp -> width . x ) * ( nplp -> width . y )	1733:8:73334:73396	5851420	1	True				
ANR	5851882	AssignmentExpression	l = ( double ) ( plp -> width . x ) * ( nplp -> width . y )		5851420	0		=			
ANR	5851883	Identifier	l		5851420	0					
ANR	5851884	MultiplicativeExpression	( double ) ( plp -> width . x ) * ( nplp -> width . y )		5851420	1		*			
ANR	5851885	CastExpression	( double ) ( plp -> width . x )		5851420	0					
ANR	5851886	CastTarget	double		5851420	0					
ANR	5851887	MemberAccess	plp -> width . x		5851420	1					
ANR	5851888	PtrMemberAccess	plp -> width		5851420	0					
ANR	5851889	Identifier	plp		5851420	0					
ANR	5851890	Identifier	width		5851420	1					
ANR	5851891	Identifier	x		5851420	1					
ANR	5851892	MemberAccess	nplp -> width . y		5851420	1					
ANR	5851893	PtrMemberAccess	nplp -> width		5851420	0					
ANR	5851894	Identifier	nplp		5851420	0					
ANR	5851895	Identifier	width		5851420	1					
ANR	5851896	Identifier	y		5851420	1					
ANR	5851897	ExpressionStatement	r = ( double ) ( nplp -> width . x ) * ( plp -> width . y )	1734:8:73406:73468	5851420	2	True				
ANR	5851898	AssignmentExpression	r = ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5851420	0		=			
ANR	5851899	Identifier	r		5851420	0					
ANR	5851900	MultiplicativeExpression	( double ) ( nplp -> width . x ) * ( plp -> width . y )		5851420	1		*			
ANR	5851901	CastExpression	( double ) ( nplp -> width . x )		5851420	0					
ANR	5851902	CastTarget	double		5851420	0					
ANR	5851903	MemberAccess	nplp -> width . x		5851420	1					
ANR	5851904	PtrMemberAccess	nplp -> width		5851420	0					
ANR	5851905	Identifier	nplp		5851420	0					
ANR	5851906	Identifier	width		5851420	1					
ANR	5851907	Identifier	x		5851420	1					
ANR	5851908	MemberAccess	plp -> width . y		5851420	1					
ANR	5851909	PtrMemberAccess	plp -> width		5851420	0					
ANR	5851910	Identifier	plp		5851420	0					
ANR	5851911	Identifier	width		5851420	1					
ANR	5851912	Identifier	y		5851420	1					
ANR	5851913	IfStatement	if ( ( l == r ) && ( join == gs_join_round ) )		5851420	3					
ANR	5851914	Condition	( l == r ) && ( join == gs_join_round )	1736:12:73483:73517	5851420	0	True				
ANR	5851915	AndExpression	( l == r ) && ( join == gs_join_round )		5851420	0		&&			
ANR	5851916	EqualityExpression	l == r		5851420	0		==			
ANR	5851917	Identifier	l		5851420	0					
ANR	5851918	Identifier	r		5851420	1					
ANR	5851919	EqualityExpression	join == gs_join_round		5851420	1		==			
ANR	5851920	Identifier	join		5851420	0					
ANR	5851921	Identifier	gs_join_round		5851420	1					
ANR	5851922	CompoundStatement		77:49:2714:2714	5851420	1					
ANR	5851923	ExpressionStatement	"code = add_pie_cap ( ppath , & plp -> e )"	1738:12:73561:73595	5851420	0	True				
ANR	5851924	AssignmentExpression	"code = add_pie_cap ( ppath , & plp -> e )"		5851420	0		=			
ANR	5851925	Identifier	code		5851420	0					
ANR	5851926	CallExpression	"add_pie_cap ( ppath , & plp -> e )"		5851420	1					
ANR	5851927	Callee	add_pie_cap		5851420	0					
ANR	5851928	Identifier	add_pie_cap		5851420	0					
ANR	5851929	ArgumentList	ppath		5851420	1					
ANR	5851930	Argument	ppath		5851420	0					
ANR	5851931	Identifier	ppath		5851420	0					
ANR	5851932	Argument	& plp -> e		5851420	1					
ANR	5851933	UnaryOperationExpression	& plp -> e		5851420	0					
ANR	5851934	UnaryOperator	&		5851420	0					
ANR	5851935	PtrMemberAccess	plp -> e		5851420	1					
ANR	5851936	Identifier	plp		5851420	0					
ANR	5851937	Identifier	e		5851420	1					
ANR	5851938	IfStatement	if ( code >= 0 )		5851420	1					
ANR	5851939	Condition	code >= 0	1739:16:73613:73621	5851420	0	True				
ANR	5851940	RelationalExpression	code >= 0		5851420	0		>=			
ANR	5851941	Identifier	code		5851420	0					
ANR	5851942	PrimaryExpression	0		5851420	1					
ANR	5851943	CompoundStatement		80:27:2818:2818	5851420	1					
ANR	5851944	IfStatement	if ( ( double ) ( plp -> width . x ) * nplp -> width . x + ( double ) plp -> width . y * nplp -> width . y >= 0 )		5851420	0					
ANR	5851945	Condition	( double ) ( plp -> width . x ) * nplp -> width . x + ( double ) plp -> width . y * nplp -> width . y >= 0	1745:20:74036:74117	5851420	0	True				
ANR	5851946	RelationalExpression	( double ) ( plp -> width . x ) * nplp -> width . x + ( double ) plp -> width . y * nplp -> width . y >= 0		5851420	0		>=			
ANR	5851947	AdditiveExpression	( double ) ( plp -> width . x ) * nplp -> width . x + ( double ) plp -> width . y * nplp -> width . y		5851420	0		+			
ANR	5851948	MultiplicativeExpression	( double ) ( plp -> width . x ) * nplp -> width . x		5851420	0		*			
ANR	5851949	CastExpression	( double ) ( plp -> width . x )		5851420	0					
ANR	5851950	CastTarget	double		5851420	0					
ANR	5851951	MemberAccess	plp -> width . x		5851420	1					
ANR	5851952	PtrMemberAccess	plp -> width		5851420	0					
ANR	5851953	Identifier	plp		5851420	0					
ANR	5851954	Identifier	width		5851420	1					
ANR	5851955	Identifier	x		5851420	1					
ANR	5851956	MemberAccess	nplp -> width . x		5851420	1					
ANR	5851957	PtrMemberAccess	nplp -> width		5851420	0					
ANR	5851958	Identifier	nplp		5851420	0					
ANR	5851959	Identifier	width		5851420	1					
ANR	5851960	Identifier	x		5851420	1					
ANR	5851961	MultiplicativeExpression	( double ) plp -> width . y * nplp -> width . y		5851420	1		*			
ANR	5851962	CastExpression	( double ) plp -> width . y		5851420	0					
ANR	5851963	CastTarget	double		5851420	0					
ANR	5851964	MemberAccess	plp -> width . y		5851420	1					
ANR	5851965	PtrMemberAccess	plp -> width		5851420	0					
ANR	5851966	Identifier	plp		5851420	0					
ANR	5851967	Identifier	width		5851420	1					
ANR	5851968	Identifier	y		5851420	1					
ANR	5851969	MemberAccess	nplp -> width . y		5851420	1					
ANR	5851970	PtrMemberAccess	nplp -> width		5851420	0					
ANR	5851971	Identifier	nplp		5851420	0					
ANR	5851972	Identifier	width		5851420	1					
ANR	5851973	Identifier	y		5851420	1					
ANR	5851974	PrimaryExpression	0		5851420	1					
ANR	5851975	ExpressionStatement	"code = gx_path_add_line ( ppath , plp -> e . co . x , plp -> e . co . y )"	1746:20:74140:74196	5851420	1	True				
ANR	5851976	AssignmentExpression	"code = gx_path_add_line ( ppath , plp -> e . co . x , plp -> e . co . y )"		5851420	0		=			
ANR	5851977	Identifier	code		5851420	0					
ANR	5851978	CallExpression	"gx_path_add_line ( ppath , plp -> e . co . x , plp -> e . co . y )"		5851420	1					
ANR	5851979	Callee	gx_path_add_line		5851420	0					
ANR	5851980	Identifier	gx_path_add_line		5851420	0					
ANR	5851981	ArgumentList	ppath		5851420	1					
ANR	5851982	Argument	ppath		5851420	0					
ANR	5851983	Identifier	ppath		5851420	0					
ANR	5851984	Argument	plp -> e . co . x		5851420	1					
ANR	5851985	MemberAccess	plp -> e . co . x		5851420	0					
ANR	5851986	MemberAccess	plp -> e . co		5851420	0					
ANR	5851987	PtrMemberAccess	plp -> e		5851420	0					
ANR	5851988	Identifier	plp		5851420	0					
ANR	5851989	Identifier	e		5851420	1					
ANR	5851990	Identifier	co		5851420	1					
ANR	5851991	Identifier	x		5851420	1					
ANR	5851992	Argument	plp -> e . co . y		5851420	2					
ANR	5851993	MemberAccess	plp -> e . co . y		5851420	0					
ANR	5851994	MemberAccess	plp -> e . co		5851420	0					
ANR	5851995	PtrMemberAccess	plp -> e		5851420	0					
ANR	5851996	Identifier	plp		5851420	0					
ANR	5851997	Identifier	e		5851420	1					
ANR	5851998	Identifier	co		5851420	1					
ANR	5851999	Identifier	y		5851420	1					
ANR	5852000	ElseStatement	else		5851420	0					
ANR	5852001	IfStatement	if ( ( l > r ) ^ reflected )		5851420	0					
ANR	5852002	Condition	( l > r ) ^ reflected	1748:19:74231:74249	5851420	0	True				
ANR	5852003	ExclusiveOrExpression	( l > r ) ^ reflected		5851420	0		^			
ANR	5852004	RelationalExpression	l > r		5851420	0		>			
ANR	5852005	Identifier	l		5851420	0					
ANR	5852006	Identifier	r		5851420	1					
ANR	5852007	Identifier	reflected		5851420	1					
ANR	5852008	CompoundStatement		89:40:3446:3446	5851420	1					
ANR	5852009	IfStatement	if ( join == gs_join_round )		5851420	0					
ANR	5852010	Condition	join == gs_join_round	1756:16:74702:74722	5851420	0	True				
ANR	5852011	EqualityExpression	join == gs_join_round		5851420	0		==			
ANR	5852012	Identifier	join		5851420	0					
ANR	5852013	Identifier	gs_join_round		5851420	1					
ANR	5852014	CompoundStatement		97:74:3954:3954	5851420	1					
ANR	5852015	ExpressionStatement	"code = add_pie_join_fast_ccw ( ppath , plp , nplp , reflected )"	1757:16:74778:74835	5851420	0	True				
ANR	5852016	AssignmentExpression	"code = add_pie_join_fast_ccw ( ppath , plp , nplp , reflected )"		5851420	0		=			
ANR	5852017	Identifier	code		5851420	0					
ANR	5852018	CallExpression	"add_pie_join_fast_ccw ( ppath , plp , nplp , reflected )"		5851420	1					
ANR	5852019	Callee	add_pie_join_fast_ccw		5851420	0					
ANR	5852020	Identifier	add_pie_join_fast_ccw		5851420	0					
ANR	5852021	ArgumentList	ppath		5851420	1					
ANR	5852022	Argument	ppath		5851420	0					
ANR	5852023	Identifier	ppath		5851420	0					
ANR	5852024	Argument	plp		5851420	1					
ANR	5852025	Identifier	plp		5851420	0					
ANR	5852026	Argument	nplp		5851420	2					
ANR	5852027	Identifier	nplp		5851420	0					
ANR	5852028	Argument	reflected		5851420	3					
ANR	5852029	Identifier	reflected		5851420	0					
ANR	5852030	ElseStatement	else		5851420	0					
ANR	5852031	CompoundStatement		99:19:4050:4050	5851420	0					
ANR	5852032	ExpressionStatement	"code = line_join_points_fast_ccw ( pgs_lp , plp , nplp , points , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join )"	1759:16:74895:75213	5851420	0	True				
ANR	5852033	AssignmentExpression	"code = line_join_points_fast_ccw ( pgs_lp , plp , nplp , points , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join )"		5851420	0		=			
ANR	5852034	Identifier	code		5851420	0					
ANR	5852035	CallExpression	"line_join_points_fast_ccw ( pgs_lp , plp , nplp , points , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join )"		5851420	1					
ANR	5852036	Callee	line_join_points_fast_ccw		5851420	0					
ANR	5852037	Identifier	line_join_points_fast_ccw		5851420	0					
ANR	5852038	ArgumentList	pgs_lp		5851420	1					
ANR	5852039	Argument	pgs_lp		5851420	0					
ANR	5852040	Identifier	pgs_lp		5851420	0					
ANR	5852041	Argument	plp		5851420	1					
ANR	5852042	Identifier	plp		5851420	0					
ANR	5852043	Argument	nplp		5851420	2					
ANR	5852044	Identifier	nplp		5851420	0					
ANR	5852045	Argument	points		5851420	3					
ANR	5852046	Identifier	points		5851420	0					
ANR	5852047	Argument	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5851420	4					
ANR	5852048	ConditionalExpression	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5851420	0					
ANR	5852049	Condition	uniform		5851420	0					
ANR	5852050	Identifier	uniform		5851420	0					
ANR	5852051	CastExpression	( gs_matrix * ) 0		5851420	1					
ANR	5852052	CastTarget	gs_matrix *		5851420	0					
ANR	5852053	PrimaryExpression	0		5851420	1					
ANR	5852054	UnaryOperationExpression	& ctm_only ( pgs )		5851420	2					
ANR	5852055	UnaryOperator	&		5851420	0					
ANR	5852056	CallExpression	ctm_only ( pgs )		5851420	1					
ANR	5852057	Callee	ctm_only		5851420	0					
ANR	5852058	Identifier	ctm_only		5851420	0					
ANR	5852059	ArgumentList	pgs		5851420	1					
ANR	5852060	Argument	pgs		5851420	0					
ANR	5852061	Identifier	pgs		5851420	0					
ANR	5852062	Argument	join		5851420	5					
ANR	5852063	Identifier	join		5851420	0					
ANR	5852064	ExpressionStatement	npoints = code	1764:16:75231:75245	5851420	1	True				
ANR	5852065	AssignmentExpression	npoints = code		5851420	0		=			
ANR	5852066	Identifier	npoints		5851420	0					
ANR	5852067	Identifier	code		5851420	1					
ANR	5852068	IfStatement	if ( code < 0 )		5851420	1					
ANR	5852069	Condition	code < 0	1766:16:75277:75284	5851420	0	True				
ANR	5852070	RelationalExpression	code < 0		5851420	0		<			
ANR	5852071	Identifier	code		5851420	0					
ANR	5852072	PrimaryExpression	0		5851420	1					
ANR	5852073	ReturnStatement	return code ;	1767:16:75303:75314	5851420	1	True				
ANR	5852074	Identifier	code		5851420	0					
ANR	5852075	IfStatement	if ( ( flags & ( nf_some_from_arc | nf_prev_some_from_arc ) ) == 0 )		5851420	2					
ANR	5852076	Condition	( flags & ( nf_some_from_arc | nf_prev_some_from_arc ) ) == 0	1770:16:75406:75462	5851420	0	True				
ANR	5852077	EqualityExpression	( flags & ( nf_some_from_arc | nf_prev_some_from_arc ) ) == 0		5851420	0		==			
ANR	5852078	BitAndExpression	flags & ( nf_some_from_arc | nf_prev_some_from_arc )		5851420	0		&			
ANR	5852079	Identifier	flags		5851420	0					
ANR	5852080	InclusiveOrExpression	nf_some_from_arc | nf_prev_some_from_arc		5851420	1		|			
ANR	5852081	Identifier	nf_some_from_arc		5851420	0					
ANR	5852082	Identifier	nf_prev_some_from_arc		5851420	1					
ANR	5852083	PrimaryExpression	0		5851420	1					
ANR	5852084	CompoundStatement		111:75:4659:4659	5851420	1					
ANR	5852085	ExpressionStatement	"code = gx_path_add_line ( rpath , nplp -> o . p . x , nplp -> o . p . y )"	1785:16:76417:76473	5851420	0	True				
ANR	5852086	AssignmentExpression	"code = gx_path_add_line ( rpath , nplp -> o . p . x , nplp -> o . p . y )"		5851420	0		=			
ANR	5852087	Identifier	code		5851420	0					
ANR	5852088	CallExpression	"gx_path_add_line ( rpath , nplp -> o . p . x , nplp -> o . p . y )"		5851420	1					
ANR	5852089	Callee	gx_path_add_line		5851420	0					
ANR	5852090	Identifier	gx_path_add_line		5851420	0					
ANR	5852091	ArgumentList	rpath		5851420	1					
ANR	5852092	Argument	rpath		5851420	0					
ANR	5852093	Identifier	rpath		5851420	0					
ANR	5852094	Argument	nplp -> o . p . x		5851420	1					
ANR	5852095	MemberAccess	nplp -> o . p . x		5851420	0					
ANR	5852096	MemberAccess	nplp -> o . p		5851420	0					
ANR	5852097	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852098	Identifier	nplp		5851420	0					
ANR	5852099	Identifier	o		5851420	1					
ANR	5852100	Identifier	p		5851420	1					
ANR	5852101	Identifier	x		5851420	1					
ANR	5852102	Argument	nplp -> o . p . y		5851420	2					
ANR	5852103	MemberAccess	nplp -> o . p . y		5851420	0					
ANR	5852104	MemberAccess	nplp -> o . p		5851420	0					
ANR	5852105	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852106	Identifier	nplp		5851420	0					
ANR	5852107	Identifier	o		5851420	1					
ANR	5852108	Identifier	p		5851420	1					
ANR	5852109	Identifier	y		5851420	1					
ANR	5852110	IfStatement	if ( code < 0 )		5851420	1					
ANR	5852111	Condition	code < 0	1786:20:76495:76502	5851420	0	True				
ANR	5852112	RelationalExpression	code < 0		5851420	0		<			
ANR	5852113	Identifier	code		5851420	0					
ANR	5852114	PrimaryExpression	0		5851420	1					
ANR	5852115	ReturnStatement	return code ;	1787:20:76525:76536	5851420	1	True				
ANR	5852116	Identifier	code		5851420	0					
ANR	5852117	ExpressionStatement	"code = gx_path_add_line ( rpath , nplp -> o . co . x , nplp -> o . co . y )"	1808:12:77333:77391	5851420	3	True				
ANR	5852118	AssignmentExpression	"code = gx_path_add_line ( rpath , nplp -> o . co . x , nplp -> o . co . y )"		5851420	0		=			
ANR	5852119	Identifier	code		5851420	0					
ANR	5852120	CallExpression	"gx_path_add_line ( rpath , nplp -> o . co . x , nplp -> o . co . y )"		5851420	1					
ANR	5852121	Callee	gx_path_add_line		5851420	0					
ANR	5852122	Identifier	gx_path_add_line		5851420	0					
ANR	5852123	ArgumentList	rpath		5851420	1					
ANR	5852124	Argument	rpath		5851420	0					
ANR	5852125	Identifier	rpath		5851420	0					
ANR	5852126	Argument	nplp -> o . co . x		5851420	1					
ANR	5852127	MemberAccess	nplp -> o . co . x		5851420	0					
ANR	5852128	MemberAccess	nplp -> o . co		5851420	0					
ANR	5852129	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852130	Identifier	nplp		5851420	0					
ANR	5852131	Identifier	o		5851420	1					
ANR	5852132	Identifier	co		5851420	1					
ANR	5852133	Identifier	x		5851420	1					
ANR	5852134	Argument	nplp -> o . co . y		5851420	2					
ANR	5852135	MemberAccess	nplp -> o . co . y		5851420	0					
ANR	5852136	MemberAccess	nplp -> o . co		5851420	0					
ANR	5852137	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852138	Identifier	nplp		5851420	0					
ANR	5852139	Identifier	o		5851420	1					
ANR	5852140	Identifier	co		5851420	1					
ANR	5852141	Identifier	y		5851420	1					
ANR	5852142	ElseStatement	else		5851420	0					
ANR	5852143	CompoundStatement		150:15:6602:6602	5851420	0					
ANR	5852144	IfStatement	if ( join == gs_join_round )		5851420	0					
ANR	5852145	Condition	join == gs_join_round	1817:16:77857:77877	5851420	0	True				
ANR	5852146	EqualityExpression	join == gs_join_round		5851420	0		==			
ANR	5852147	Identifier	join		5851420	0					
ANR	5852148	Identifier	gs_join_round		5851420	1					
ANR	5852149	CompoundStatement		158:74:7109:7109	5851420	1					
ANR	5852150	ExpressionStatement	"code = add_pie_join_fast_cw ( rpath , plp , nplp , reflected )"	1818:16:77933:77989	5851420	0	True				
ANR	5852151	AssignmentExpression	"code = add_pie_join_fast_cw ( rpath , plp , nplp , reflected )"		5851420	0		=			
ANR	5852152	Identifier	code		5851420	0					
ANR	5852153	CallExpression	"add_pie_join_fast_cw ( rpath , plp , nplp , reflected )"		5851420	1					
ANR	5852154	Callee	add_pie_join_fast_cw		5851420	0					
ANR	5852155	Identifier	add_pie_join_fast_cw		5851420	0					
ANR	5852156	ArgumentList	rpath		5851420	1					
ANR	5852157	Argument	rpath		5851420	0					
ANR	5852158	Identifier	rpath		5851420	0					
ANR	5852159	Argument	plp		5851420	1					
ANR	5852160	Identifier	plp		5851420	0					
ANR	5852161	Argument	nplp		5851420	2					
ANR	5852162	Identifier	nplp		5851420	0					
ANR	5852163	Argument	reflected		5851420	3					
ANR	5852164	Identifier	reflected		5851420	0					
ANR	5852165	ElseStatement	else		5851420	0					
ANR	5852166	CompoundStatement		160:19:7204:7204	5851420	0					
ANR	5852167	ExpressionStatement	"code = line_join_points_fast_cw ( pgs_lp , plp , nplp , rpoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join )"	1820:16:78049:78363	5851420	0	True				
ANR	5852168	AssignmentExpression	"code = line_join_points_fast_cw ( pgs_lp , plp , nplp , rpoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join )"		5851420	0		=			
ANR	5852169	Identifier	code		5851420	0					
ANR	5852170	CallExpression	"line_join_points_fast_cw ( pgs_lp , plp , nplp , rpoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join )"		5851420	1					
ANR	5852171	Callee	line_join_points_fast_cw		5851420	0					
ANR	5852172	Identifier	line_join_points_fast_cw		5851420	0					
ANR	5852173	ArgumentList	pgs_lp		5851420	1					
ANR	5852174	Argument	pgs_lp		5851420	0					
ANR	5852175	Identifier	pgs_lp		5851420	0					
ANR	5852176	Argument	plp		5851420	1					
ANR	5852177	Identifier	plp		5851420	0					
ANR	5852178	Argument	nplp		5851420	2					
ANR	5852179	Identifier	nplp		5851420	0					
ANR	5852180	Argument	rpoints		5851420	3					
ANR	5852181	Identifier	rpoints		5851420	0					
ANR	5852182	Argument	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5851420	4					
ANR	5852183	ConditionalExpression	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5851420	0					
ANR	5852184	Condition	uniform		5851420	0					
ANR	5852185	Identifier	uniform		5851420	0					
ANR	5852186	CastExpression	( gs_matrix * ) 0		5851420	1					
ANR	5852187	CastTarget	gs_matrix *		5851420	0					
ANR	5852188	PrimaryExpression	0		5851420	1					
ANR	5852189	UnaryOperationExpression	& ctm_only ( pgs )		5851420	2					
ANR	5852190	UnaryOperator	&		5851420	0					
ANR	5852191	CallExpression	ctm_only ( pgs )		5851420	1					
ANR	5852192	Callee	ctm_only		5851420	0					
ANR	5852193	Identifier	ctm_only		5851420	0					
ANR	5852194	ArgumentList	pgs		5851420	1					
ANR	5852195	Argument	pgs		5851420	0					
ANR	5852196	Identifier	pgs		5851420	0					
ANR	5852197	Argument	join		5851420	5					
ANR	5852198	Identifier	join		5851420	0					
ANR	5852199	ExpressionStatement	nrpoints = code	1825:16:78381:78396	5851420	1	True				
ANR	5852200	AssignmentExpression	nrpoints = code		5851420	0		=			
ANR	5852201	Identifier	nrpoints		5851420	0					
ANR	5852202	Identifier	code		5851420	1					
ANR	5852203	IfStatement	if ( code < 0 )		5851420	1					
ANR	5852204	Condition	code < 0	1827:16:78428:78435	5851420	0	True				
ANR	5852205	RelationalExpression	code < 0		5851420	0		<			
ANR	5852206	Identifier	code		5851420	0					
ANR	5852207	PrimaryExpression	0		5851420	1					
ANR	5852208	ReturnStatement	return code ;	1828:16:78454:78465	5851420	1	True				
ANR	5852209	Identifier	code		5851420	0					
ANR	5852210	IfStatement	if ( ( flags & ( nf_some_from_arc | nf_prev_some_from_arc ) ) == 0 )		5851420	2					
ANR	5852211	Condition	( flags & ( nf_some_from_arc | nf_prev_some_from_arc ) ) == 0	1831:16:78557:78613	5851420	0	True				
ANR	5852212	EqualityExpression	( flags & ( nf_some_from_arc | nf_prev_some_from_arc ) ) == 0		5851420	0		==			
ANR	5852213	BitAndExpression	flags & ( nf_some_from_arc | nf_prev_some_from_arc )		5851420	0		&			
ANR	5852214	Identifier	flags		5851420	0					
ANR	5852215	InclusiveOrExpression	nf_some_from_arc | nf_prev_some_from_arc		5851420	1		|			
ANR	5852216	Identifier	nf_some_from_arc		5851420	0					
ANR	5852217	Identifier	nf_prev_some_from_arc		5851420	1					
ANR	5852218	PrimaryExpression	0		5851420	1					
ANR	5852219	CompoundStatement		172:75:7810:7810	5851420	1					
ANR	5852220	ExpressionStatement	"code = gx_path_add_line ( ppath , nplp -> o . p . x , nplp -> o . p . y )"	1846:16:79568:79624	5851420	0	True				
ANR	5852221	AssignmentExpression	"code = gx_path_add_line ( ppath , nplp -> o . p . x , nplp -> o . p . y )"		5851420	0		=			
ANR	5852222	Identifier	code		5851420	0					
ANR	5852223	CallExpression	"gx_path_add_line ( ppath , nplp -> o . p . x , nplp -> o . p . y )"		5851420	1					
ANR	5852224	Callee	gx_path_add_line		5851420	0					
ANR	5852225	Identifier	gx_path_add_line		5851420	0					
ANR	5852226	ArgumentList	ppath		5851420	1					
ANR	5852227	Argument	ppath		5851420	0					
ANR	5852228	Identifier	ppath		5851420	0					
ANR	5852229	Argument	nplp -> o . p . x		5851420	1					
ANR	5852230	MemberAccess	nplp -> o . p . x		5851420	0					
ANR	5852231	MemberAccess	nplp -> o . p		5851420	0					
ANR	5852232	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852233	Identifier	nplp		5851420	0					
ANR	5852234	Identifier	o		5851420	1					
ANR	5852235	Identifier	p		5851420	1					
ANR	5852236	Identifier	x		5851420	1					
ANR	5852237	Argument	nplp -> o . p . y		5851420	2					
ANR	5852238	MemberAccess	nplp -> o . p . y		5851420	0					
ANR	5852239	MemberAccess	nplp -> o . p		5851420	0					
ANR	5852240	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852241	Identifier	nplp		5851420	0					
ANR	5852242	Identifier	o		5851420	1					
ANR	5852243	Identifier	p		5851420	1					
ANR	5852244	Identifier	y		5851420	1					
ANR	5852245	IfStatement	if ( code < 0 )		5851420	1					
ANR	5852246	Condition	code < 0	1847:20:79646:79653	5851420	0	True				
ANR	5852247	RelationalExpression	code < 0		5851420	0		<			
ANR	5852248	Identifier	code		5851420	0					
ANR	5852249	PrimaryExpression	0		5851420	1					
ANR	5852250	ReturnStatement	return code ;	1848:20:79676:79687	5851420	1	True				
ANR	5852251	Identifier	code		5851420	0					
ANR	5852252	ExpressionStatement	"code = gx_path_add_line ( ppath , nplp -> o . ce . x , nplp -> o . ce . y )"	1869:12:80484:80542	5851420	3	True				
ANR	5852253	AssignmentExpression	"code = gx_path_add_line ( ppath , nplp -> o . ce . x , nplp -> o . ce . y )"		5851420	0		=			
ANR	5852254	Identifier	code		5851420	0					
ANR	5852255	CallExpression	"gx_path_add_line ( ppath , nplp -> o . ce . x , nplp -> o . ce . y )"		5851420	1					
ANR	5852256	Callee	gx_path_add_line		5851420	0					
ANR	5852257	Identifier	gx_path_add_line		5851420	0					
ANR	5852258	ArgumentList	ppath		5851420	1					
ANR	5852259	Argument	ppath		5851420	0					
ANR	5852260	Identifier	ppath		5851420	0					
ANR	5852261	Argument	nplp -> o . ce . x		5851420	1					
ANR	5852262	MemberAccess	nplp -> o . ce . x		5851420	0					
ANR	5852263	MemberAccess	nplp -> o . ce		5851420	0					
ANR	5852264	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852265	Identifier	nplp		5851420	0					
ANR	5852266	Identifier	o		5851420	1					
ANR	5852267	Identifier	ce		5851420	1					
ANR	5852268	Identifier	x		5851420	1					
ANR	5852269	Argument	nplp -> o . ce . y		5851420	2					
ANR	5852270	MemberAccess	nplp -> o . ce . y		5851420	0					
ANR	5852271	MemberAccess	nplp -> o . ce		5851420	0					
ANR	5852272	PtrMemberAccess	nplp -> o		5851420	0					
ANR	5852273	Identifier	nplp		5851420	0					
ANR	5852274	Identifier	o		5851420	1					
ANR	5852275	Identifier	ce		5851420	1					
ANR	5852276	Identifier	y		5851420	1					
ANR	5852277	IfStatement	if ( code < 0 )		5851420	23					
ANR	5852278	Condition	code < 0	1872:8:80568:80575	5851420	0	True				
ANR	5852279	RelationalExpression	code < 0		5851420	0		<			
ANR	5852280	Identifier	code		5851420	0					
ANR	5852281	PrimaryExpression	0		5851420	1					
ANR	5852282	ReturnStatement	return code ;	1873:8:80586:80597	5851420	1	True				
ANR	5852283	Identifier	code		5851420	0					
ANR	5852284	IfStatement	if ( npoints > 0 )		5851420	24					
ANR	5852285	Condition	npoints > 0	1874:8:80607:80617	5851420	0	True				
ANR	5852286	RelationalExpression	npoints > 0		5851420	0		>			
ANR	5852287	Identifier	npoints		5851420	0					
ANR	5852288	PrimaryExpression	0		5851420	1					
ANR	5852289	CompoundStatement		215:21:9814:9814	5851420	1					
ANR	5852290	ExpressionStatement	"code = add_points ( ppath , points , npoints , false )"	1875:8:80630:80678	5851420	0	True				
ANR	5852291	AssignmentExpression	"code = add_points ( ppath , points , npoints , false )"		5851420	0		=			
ANR	5852292	Identifier	code		5851420	0					
ANR	5852293	CallExpression	"add_points ( ppath , points , npoints , false )"		5851420	1					
ANR	5852294	Callee	add_points		5851420	0					
ANR	5852295	Identifier	add_points		5851420	0					
ANR	5852296	ArgumentList	ppath		5851420	1					
ANR	5852297	Argument	ppath		5851420	0					
ANR	5852298	Identifier	ppath		5851420	0					
ANR	5852299	Argument	points		5851420	1					
ANR	5852300	Identifier	points		5851420	0					
ANR	5852301	Argument	npoints		5851420	2					
ANR	5852302	Identifier	npoints		5851420	0					
ANR	5852303	Argument	false		5851420	3					
ANR	5852304	Identifier	false		5851420	0					
ANR	5852305	IfStatement	if ( code < 0 )		5851420	1					
ANR	5852306	Condition	code < 0	1876:12:80692:80699	5851420	0	True				
ANR	5852307	RelationalExpression	code < 0		5851420	0		<			
ANR	5852308	Identifier	code		5851420	0					
ANR	5852309	PrimaryExpression	0		5851420	1					
ANR	5852310	ReturnStatement	return code ;	1877:12:80714:80725	5851420	1	True				
ANR	5852311	Identifier	code		5851420	0					
ANR	5852312	IfStatement	if ( nrpoints > 0 )		5851420	25					
ANR	5852313	Condition	nrpoints > 0	1879:8:80741:80752	5851420	0	True				
ANR	5852314	RelationalExpression	nrpoints > 0		5851420	0		>			
ANR	5852315	Identifier	nrpoints		5851420	0					
ANR	5852316	PrimaryExpression	0		5851420	1					
ANR	5852317	CompoundStatement		220:22:9949:9949	5851420	1					
ANR	5852318	ExpressionStatement	"code = add_points ( rpath , rpoints , nrpoints , false )"	1880:8:80765:80815	5851420	0	True				
ANR	5852319	AssignmentExpression	"code = add_points ( rpath , rpoints , nrpoints , false )"		5851420	0		=			
ANR	5852320	Identifier	code		5851420	0					
ANR	5852321	CallExpression	"add_points ( rpath , rpoints , nrpoints , false )"		5851420	1					
ANR	5852322	Callee	add_points		5851420	0					
ANR	5852323	Identifier	add_points		5851420	0					
ANR	5852324	ArgumentList	rpath		5851420	1					
ANR	5852325	Argument	rpath		5851420	0					
ANR	5852326	Identifier	rpath		5851420	0					
ANR	5852327	Argument	rpoints		5851420	1					
ANR	5852328	Identifier	rpoints		5851420	0					
ANR	5852329	Argument	nrpoints		5851420	2					
ANR	5852330	Identifier	nrpoints		5851420	0					
ANR	5852331	Argument	false		5851420	3					
ANR	5852332	Identifier	false		5851420	0					
ANR	5852333	IfStatement	if ( code < 0 )		5851420	1					
ANR	5852334	Condition	code < 0	1881:12:80829:80836	5851420	0	True				
ANR	5852335	RelationalExpression	code < 0		5851420	0		<			
ANR	5852336	Identifier	code		5851420	0					
ANR	5852337	PrimaryExpression	0		5851420	1					
ANR	5852338	ReturnStatement	return code ;	1882:12:80851:80862	5851420	1	True				
ANR	5852339	Identifier	code		5851420	0					
ANR	5852340	IfStatement	if ( ensure_closed )		5851420	26					
ANR	5852341	Condition	ensure_closed	1884:8:80878:80890	5851420	0	True				
ANR	5852342	Identifier	ensure_closed		5851420	0					
ANR	5852343	ReturnStatement	"return gx_join_path_and_reverse ( ppath , rpath ) ;"	1885:8:80901:80946	5851420	1	True				
ANR	5852344	CallExpression	"gx_join_path_and_reverse ( ppath , rpath )"		5851420	0					
ANR	5852345	Callee	gx_join_path_and_reverse		5851420	0					
ANR	5852346	Identifier	gx_join_path_and_reverse		5851420	0					
ANR	5852347	ArgumentList	ppath		5851420	1					
ANR	5852348	Argument	ppath		5851420	0					
ANR	5852349	Identifier	ppath		5851420	0					
ANR	5852350	Argument	rpath		5851420	1					
ANR	5852351	Identifier	rpath		5851420	0					
ANR	5852352	ReturnStatement	return 0 ;	1886:4:80952:80960	5851420	27	True				
ANR	5852353	PrimaryExpression	0		5851420	0					
ANR	5852354	ReturnType	static int		5851420	1					
ANR	5852355	Identifier	stroke_add_fast		5851420	2					
ANR	5852356	ParameterList	"gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * ignore_pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags"		5851420	3					
ANR	5852357	Parameter	gx_path * ppath	1654:16:70429:70443	5851420	0	True				
ANR	5852358	ParameterType	gx_path *		5851420	0					
ANR	5852359	Identifier	ppath		5851420	1					
ANR	5852360	Parameter	gx_path * rpath	1654:33:70446:70460	5851420	1	True				
ANR	5852361	ParameterType	gx_path *		5851420	0					
ANR	5852362	Identifier	rpath		5851420	1					
ANR	5852363	Parameter	bool ensure_closed	1654:50:70463:70480	5851420	2	True				
ANR	5852364	ParameterType	bool		5851420	0					
ANR	5852365	Identifier	ensure_closed		5851420	1					
ANR	5852366	Parameter	int first	1654:70:70483:70491	5851420	3	True				
ANR	5852367	ParameterType	int		5851420	0					
ANR	5852368	Identifier	first		5851420	1					
ANR	5852369	Parameter	pl_ptr plp	1655:16:70510:70519	5851420	4	True				
ANR	5852370	ParameterType	pl_ptr		5851420	0					
ANR	5852371	Identifier	plp		5851420	1					
ANR	5852372	Parameter	pl_ptr nplp	1655:28:70522:70532	5851420	5	True				
ANR	5852373	ParameterType	pl_ptr		5851420	0					
ANR	5852374	Identifier	nplp		5851420	1					
ANR	5852375	Parameter	const gx_device_color * pdevc	1655:41:70535:70563	5851420	6	True				
ANR	5852376	ParameterType	const gx_device_color *		5851420	0					
ANR	5852377	Identifier	pdevc		5851420	1					
ANR	5852378	Parameter	gx_device * dev	1656:16:70582:70596	5851420	7	True				
ANR	5852379	ParameterType	gx_device *		5851420	0					
ANR	5852380	Identifier	dev		5851420	1					
ANR	5852381	Parameter	const gs_gstate * pgs	1656:33:70599:70619	5851420	8	True				
ANR	5852382	ParameterType	const gs_gstate *		5851420	0					
ANR	5852383	Identifier	pgs		5851420	1					
ANR	5852384	Parameter	const gx_stroke_params * params	1657:16:70638:70668	5851420	9	True				
ANR	5852385	ParameterType	const gx_stroke_params *		5851420	0					
ANR	5852386	Identifier	params		5851420	1					
ANR	5852387	Parameter	const gs_fixed_rect * ignore_pbbox	1658:16:70687:70720	5851420	10	True				
ANR	5852388	ParameterType	const gs_fixed_rect *		5851420	0					
ANR	5852389	Identifier	ignore_pbbox		5851420	1					
ANR	5852390	Parameter	int uniform	1658:52:70723:70733	5851420	11	True				
ANR	5852391	ParameterType	int		5851420	0					
ANR	5852392	Identifier	uniform		5851420	1					
ANR	5852393	Parameter	gs_line_join join	1659:16:70752:70768	5851420	12	True				
ANR	5852394	ParameterType	gs_line_join		5851420	0					
ANR	5852395	Identifier	join		5851420	1					
ANR	5852396	Parameter	bool reflected	1659:35:70771:70784	5851420	13	True				
ANR	5852397	ParameterType	bool		5851420	0					
ANR	5852398	Identifier	reflected		5851420	1					
ANR	5852399	Parameter	note_flags flags	1659:51:70787:70802	5851420	14	True				
ANR	5852400	ParameterType	note_flags		5851420	0					
ANR	5852401	Identifier	flags		5851420	1					
ANR	5852402	CFGEntryNode	ENTRY		5851420		True				
ANR	5852403	CFGExitNode	EXIT		5851420		True				
ANR	5852404	Symbol	gx_path_is_void		5851420						
ANR	5852405	Symbol	nplp -> o . p . x		5851420						
ANR	5852406	Symbol	pdevc		5851420						
ANR	5852407	Symbol	nplp -> o . p . y		5851420						
ANR	5852408	Symbol	npoints		5851420						
ANR	5852409	Symbol	reflected		5851420						
ANR	5852410	Symbol	& plp -> e		5851420						
ANR	5852411	Symbol	nf_dash_tail		5851420						
ANR	5852412	Symbol	line_join_points_fast_cw		5851420						
ANR	5852413	Symbol	points		5851420						
ANR	5852414	Symbol	nrpoints		5851420						
ANR	5852415	Symbol	dev		5851420						
ANR	5852416	Symbol	plp -> e . co . y		5851420						
ANR	5852417	Symbol	plp -> e . co . x		5851420						
ANR	5852418	Symbol	plp -> e . co		5851420						
ANR	5852419	Symbol	nplp -> o . ce . y		5851420						
ANR	5852420	Symbol	nplp -> o . ce . x		5851420						
ANR	5852421	Symbol	gs_currentlineparams_inline		5851420						
ANR	5852422	Symbol	plp -> e . ce		5851420						
ANR	5852423	Symbol	join		5851420						
ANR	5852424	Symbol	* plp		5851420						
ANR	5852425	Symbol	add_points		5851420						
ANR	5852426	Symbol	plp -> thin		5851420						
ANR	5852427	Symbol	add_pie_join_fast_cw		5851420						
ANR	5852428	Symbol	ensure_closed		5851420						
ANR	5852429	Symbol	rpoints		5851420						
ANR	5852430	Symbol	params		5851420						
ANR	5852431	Symbol	gx_path_add_point		5851420						
ANR	5852432	Symbol	nplp -> o . co . x		5851420						
ANR	5852433	Symbol	nplp -> o . co . y		5851420						
ANR	5852434	Symbol	add_pie_join_fast_ccw		5851420						
ANR	5852435	Symbol	nf_dash_head		5851420						
ANR	5852436	Symbol	gs_join_round		5851420						
ANR	5852437	Symbol	& plp -> o		5851420						
ANR	5852438	Symbol	pgs_lp -> end_cap		5851420						
ANR	5852439	Symbol	pgs_lp		5851420						
ANR	5852440	Symbol	true		5851420						
ANR	5852441	Symbol	nf_some_from_arc		5851420						
ANR	5852442	Symbol	gx_join_path_and_reverse		5851420						
ANR	5852443	Symbol	plp -> width . y		5851420						
ANR	5852444	Symbol	plp -> width . x		5851420						
ANR	5852445	Symbol	code		5851420						
ANR	5852446	Symbol	nplp -> o . co		5851420						
ANR	5852447	Symbol	add_pie_cap		5851420						
ANR	5852448	Symbol	cap_points		5851420						
ANR	5852449	Symbol	* pgs_lp		5851420						
ANR	5852450	Symbol	ignore_pbbox		5851420						
ANR	5852451	Symbol	flags		5851420						
ANR	5852452	Symbol	plp -> o . co		5851420						
ANR	5852453	Symbol	ppath		5851420						
ANR	5852454	Symbol	pgs_lp -> dash_cap		5851420						
ANR	5852455	Symbol	plp -> o . co . y		5851420						
ANR	5852456	Symbol	plp -> o . co . x		5851420						
ANR	5852457	Symbol	plp -> width		5851420						
ANR	5852458	Symbol	uniform		5851420						
ANR	5852459	Symbol	nplp -> width		5851420						
ANR	5852460	Symbol	moveto_first		5851420						
ANR	5852461	Symbol	end_cap		5851420						
ANR	5852462	Symbol	line_join_points_fast_ccw		5851420						
ANR	5852463	Symbol	nf_prev_some_from_arc		5851420						
ANR	5852464	Symbol	nplp -> o		5851420						
ANR	5852465	Symbol	pgs		5851420						
ANR	5852466	Symbol	gs_cap_round		5851420						
ANR	5852467	Symbol	* nplp		5851420						
ANR	5852468	Symbol	& ctm_only		5851420						
ANR	5852469	Symbol	false		5851420						
ANR	5852470	Symbol	rmoveto_first		5851420						
ANR	5852471	Symbol	gs_cap_butt		5851420						
ANR	5852472	Symbol	l		5851420						
ANR	5852473	Symbol	rpath		5851420						
ANR	5852474	Symbol	start_cap		5851420						
ANR	5852475	Symbol	nplp -> width . y		5851420						
ANR	5852476	Symbol	r		5851420						
ANR	5852477	Symbol	pgs_lp -> start_cap		5851420						
ANR	5852478	Symbol	plp		5851420						
ANR	5852479	Symbol	nplp		5851420						
ANR	5852480	Symbol	nplp -> o . p		5851420						
ANR	5852481	Symbol	plp -> o		5851420						
ANR	5852482	Symbol	gx_path_add_line		5851420						
ANR	5852483	Symbol	plp -> e		5851420						
ANR	5852484	Symbol	nplp -> thin		5851420						
ANR	5852485	Symbol	nplp -> o . ce		5851420						
ANR	5852486	Symbol	first		5851420						
ANR	5852487	Symbol	nplp -> width . x		5851420						
ANR	5852488	Function	stroke_add_compat	1895:0:81172:84943							
ANR	5852489	FunctionDef	"stroke_add_compat (gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * ignore_pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags)"		5852488	0					
ANR	5852490	CompoundStatement		1903:0:81604:84943	5852488	0					
ANR	5852491	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	1907:4:81782:81845	5852488	0	True				
ANR	5852492	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		5852488	0					
ANR	5852493	IdentifierDeclType	const gx_line_params *		5852488	0					
ANR	5852494	Identifier	pgs_lp		5852488	1					
ANR	5852495	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		5852488	2		=			
ANR	5852496	Identifier	pgs_lp		5852488	0					
ANR	5852497	CallExpression	gs_currentlineparams_inline ( pgs )		5852488	1					
ANR	5852498	Callee	gs_currentlineparams_inline		5852488	0					
ANR	5852499	Identifier	gs_currentlineparams_inline		5852488	0					
ANR	5852500	ArgumentList	pgs		5852488	1					
ANR	5852501	Argument	pgs		5852488	0					
ANR	5852502	Identifier	pgs		5852488	0					
ANR	5852503	IdentifierDeclStatement	gs_fixed_point points [ 5 ] ;	1908:4:81851:81875	5852488	1	True				
ANR	5852504	IdentifierDecl	points [ 5 ]		5852488	0					
ANR	5852505	IdentifierDeclType	gs_fixed_point [ 5 ]		5852488	0					
ANR	5852506	Identifier	points		5852488	1					
ANR	5852507	PrimaryExpression	5		5852488	2					
ANR	5852508	IdentifierDeclStatement	int npoints ;	1909:4:81881:81892	5852488	2	True				
ANR	5852509	IdentifierDecl	npoints		5852488	0					
ANR	5852510	IdentifierDeclType	int		5852488	0					
ANR	5852511	Identifier	npoints		5852488	1					
ANR	5852512	IdentifierDeclStatement	bool const moveto_first = true ;	1910:4:81898:81928	5852488	3	True				
ANR	5852513	IdentifierDecl	moveto_first = true		5852488	0					
ANR	5852514	IdentifierDeclType	bool const		5852488	0					
ANR	5852515	Identifier	moveto_first		5852488	1					
ANR	5852516	AssignmentExpression	moveto_first = true		5852488	2		=			
ANR	5852517	Identifier	true		5852488	0					
ANR	5852518	Identifier	true		5852488	1					
ANR	5852519	IdentifierDeclStatement	int code ;	1911:4:81982:81990	5852488	4	True				
ANR	5852520	IdentifierDecl	code		5852488	0					
ANR	5852521	IdentifierDeclType	int		5852488	0					
ANR	5852522	Identifier	code		5852488	1					
ANR	5852523	IfStatement	if ( plp -> thin )		5852488	5					
ANR	5852524	Condition	plp -> thin	1913:8:82001:82009	5852488	0	True				
ANR	5852525	PtrMemberAccess	plp -> thin		5852488	0					
ANR	5852526	Identifier	plp		5852488	0					
ANR	5852527	Identifier	thin		5852488	1					
ANR	5852528	CompoundStatement		11:19:407:407	5852488	1					
ANR	5852529	ExpressionStatement	set_thin_widths ( plp )	1916:8:82138:82158	5852488	0	True				
ANR	5852530	CallExpression	set_thin_widths ( plp )		5852488	0					
ANR	5852531	Callee	set_thin_widths		5852488	0					
ANR	5852532	Identifier	set_thin_widths		5852488	0					
ANR	5852533	ArgumentList	plp		5852488	1					
ANR	5852534	Argument	plp		5852488	0					
ANR	5852535	Identifier	plp		5852488	0					
ANR	5852536	ExpressionStatement	"adjust_stroke ( dev , plp , pgs , true , first == 0 && nplp == 0 , flags )"	1917:8:82168:82234	5852488	1	True				
ANR	5852537	CallExpression	"adjust_stroke ( dev , plp , pgs , true , first == 0 && nplp == 0 , flags )"		5852488	0					
ANR	5852538	Callee	adjust_stroke		5852488	0					
ANR	5852539	Identifier	adjust_stroke		5852488	0					
ANR	5852540	ArgumentList	dev		5852488	1					
ANR	5852541	Argument	dev		5852488	0					
ANR	5852542	Identifier	dev		5852488	0					
ANR	5852543	Argument	plp		5852488	1					
ANR	5852544	Identifier	plp		5852488	0					
ANR	5852545	Argument	pgs		5852488	2					
ANR	5852546	Identifier	pgs		5852488	0					
ANR	5852547	Argument	true		5852488	3					
ANR	5852548	Identifier	true		5852488	0					
ANR	5852549	Argument	first == 0 && nplp == 0		5852488	4					
ANR	5852550	AndExpression	first == 0 && nplp == 0		5852488	0		&&			
ANR	5852551	EqualityExpression	first == 0		5852488	0		==			
ANR	5852552	Identifier	first		5852488	0					
ANR	5852553	PrimaryExpression	0		5852488	1					
ANR	5852554	EqualityExpression	nplp == 0		5852488	1		==			
ANR	5852555	Identifier	nplp		5852488	0					
ANR	5852556	PrimaryExpression	0		5852488	1					
ANR	5852557	Argument	flags		5852488	5					
ANR	5852558	Identifier	flags		5852488	0					
ANR	5852559	ExpressionStatement	compute_caps ( plp )	1918:8:82244:82261	5852488	2	True				
ANR	5852560	CallExpression	compute_caps ( plp )		5852488	0					
ANR	5852561	Callee	compute_caps		5852488	0					
ANR	5852562	Identifier	compute_caps		5852488	0					
ANR	5852563	ArgumentList	plp		5852488	1					
ANR	5852564	Argument	plp		5852488	0					
ANR	5852565	Identifier	plp		5852488	0					
ANR	5852566	ExpressionStatement	"ASSIGN_POINT ( & points [ 0 ] , plp -> o . ce )"	1921:4:82304:82339	5852488	6	True				
ANR	5852567	CallExpression	"ASSIGN_POINT ( & points [ 0 ] , plp -> o . ce )"		5852488	0					
ANR	5852568	Callee	ASSIGN_POINT		5852488	0					
ANR	5852569	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852570	ArgumentList	& points [ 0 ]		5852488	1					
ANR	5852571	Argument	& points [ 0 ]		5852488	0					
ANR	5852572	UnaryOperationExpression	& points [ 0 ]		5852488	0					
ANR	5852573	UnaryOperator	&		5852488	0					
ANR	5852574	ArrayIndexing	points [ 0 ]		5852488	1					
ANR	5852575	Identifier	points		5852488	0					
ANR	5852576	PrimaryExpression	0		5852488	1					
ANR	5852577	Argument	plp -> o . ce		5852488	1					
ANR	5852578	MemberAccess	plp -> o . ce		5852488	0					
ANR	5852579	PtrMemberAccess	plp -> o		5852488	0					
ANR	5852580	Identifier	plp		5852488	0					
ANR	5852581	Identifier	o		5852488	1					
ANR	5852582	Identifier	ce		5852488	1					
ANR	5852583	ExpressionStatement	"ASSIGN_POINT ( & points [ 1 ] , plp -> e . co )"	1922:4:82345:82380	5852488	7	True				
ANR	5852584	CallExpression	"ASSIGN_POINT ( & points [ 1 ] , plp -> e . co )"		5852488	0					
ANR	5852585	Callee	ASSIGN_POINT		5852488	0					
ANR	5852586	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852587	ArgumentList	& points [ 1 ]		5852488	1					
ANR	5852588	Argument	& points [ 1 ]		5852488	0					
ANR	5852589	UnaryOperationExpression	& points [ 1 ]		5852488	0					
ANR	5852590	UnaryOperator	&		5852488	0					
ANR	5852591	ArrayIndexing	points [ 1 ]		5852488	1					
ANR	5852592	Identifier	points		5852488	0					
ANR	5852593	PrimaryExpression	1		5852488	1					
ANR	5852594	Argument	plp -> e . co		5852488	1					
ANR	5852595	MemberAccess	plp -> e . co		5852488	0					
ANR	5852596	PtrMemberAccess	plp -> e		5852488	0					
ANR	5852597	Identifier	plp		5852488	0					
ANR	5852598	Identifier	e		5852488	1					
ANR	5852599	Identifier	co		5852488	1					
ANR	5852600	ExpressionStatement	"ASSIGN_POINT ( & points [ 2 ] , plp -> e . ce )"	1923:4:82386:82421	5852488	8	True				
ANR	5852601	CallExpression	"ASSIGN_POINT ( & points [ 2 ] , plp -> e . ce )"		5852488	0					
ANR	5852602	Callee	ASSIGN_POINT		5852488	0					
ANR	5852603	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852604	ArgumentList	& points [ 2 ]		5852488	1					
ANR	5852605	Argument	& points [ 2 ]		5852488	0					
ANR	5852606	UnaryOperationExpression	& points [ 2 ]		5852488	0					
ANR	5852607	UnaryOperator	&		5852488	0					
ANR	5852608	ArrayIndexing	points [ 2 ]		5852488	1					
ANR	5852609	Identifier	points		5852488	0					
ANR	5852610	PrimaryExpression	2		5852488	1					
ANR	5852611	Argument	plp -> e . ce		5852488	1					
ANR	5852612	MemberAccess	plp -> e . ce		5852488	0					
ANR	5852613	PtrMemberAccess	plp -> e		5852488	0					
ANR	5852614	Identifier	plp		5852488	0					
ANR	5852615	Identifier	e		5852488	1					
ANR	5852616	Identifier	ce		5852488	1					
ANR	5852617	ExpressionStatement	"ASSIGN_POINT ( & points [ 3 ] , plp -> o . co )"	1924:4:82427:82462	5852488	9	True				
ANR	5852618	CallExpression	"ASSIGN_POINT ( & points [ 3 ] , plp -> o . co )"		5852488	0					
ANR	5852619	Callee	ASSIGN_POINT		5852488	0					
ANR	5852620	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852621	ArgumentList	& points [ 3 ]		5852488	1					
ANR	5852622	Argument	& points [ 3 ]		5852488	0					
ANR	5852623	UnaryOperationExpression	& points [ 3 ]		5852488	0					
ANR	5852624	UnaryOperator	&		5852488	0					
ANR	5852625	ArrayIndexing	points [ 3 ]		5852488	1					
ANR	5852626	Identifier	points		5852488	0					
ANR	5852627	PrimaryExpression	3		5852488	1					
ANR	5852628	Argument	plp -> o . co		5852488	1					
ANR	5852629	MemberAccess	plp -> o . co		5852488	0					
ANR	5852630	PtrMemberAccess	plp -> o		5852488	0					
ANR	5852631	Identifier	plp		5852488	0					
ANR	5852632	Identifier	o		5852488	1					
ANR	5852633	Identifier	co		5852488	1					
ANR	5852634	ExpressionStatement	"code = add_points ( ppath , points , 4 , moveto_first )"	1925:4:82468:82517	5852488	10	True				
ANR	5852635	AssignmentExpression	"code = add_points ( ppath , points , 4 , moveto_first )"		5852488	0		=			
ANR	5852636	Identifier	code		5852488	0					
ANR	5852637	CallExpression	"add_points ( ppath , points , 4 , moveto_first )"		5852488	1					
ANR	5852638	Callee	add_points		5852488	0					
ANR	5852639	Identifier	add_points		5852488	0					
ANR	5852640	ArgumentList	ppath		5852488	1					
ANR	5852641	Argument	ppath		5852488	0					
ANR	5852642	Identifier	ppath		5852488	0					
ANR	5852643	Argument	points		5852488	1					
ANR	5852644	Identifier	points		5852488	0					
ANR	5852645	Argument	4		5852488	2					
ANR	5852646	PrimaryExpression	4		5852488	0					
ANR	5852647	Argument	moveto_first		5852488	3					
ANR	5852648	Identifier	moveto_first		5852488	0					
ANR	5852649	IfStatement	if ( code < 0 )		5852488	11					
ANR	5852650	Condition	code < 0	1926:8:82527:82534	5852488	0	True				
ANR	5852651	RelationalExpression	code < 0		5852488	0		<			
ANR	5852652	Identifier	code		5852488	0					
ANR	5852653	PrimaryExpression	0		5852488	1					
ANR	5852654	ReturnStatement	return code ;	1927:8:82545:82556	5852488	1	True				
ANR	5852655	Identifier	code		5852488	0					
ANR	5852656	ExpressionStatement	code = gx_path_close_subpath ( ppath )	1928:4:82562:82597	5852488	12	True				
ANR	5852657	AssignmentExpression	code = gx_path_close_subpath ( ppath )		5852488	0		=			
ANR	5852658	Identifier	code		5852488	0					
ANR	5852659	CallExpression	gx_path_close_subpath ( ppath )		5852488	1					
ANR	5852660	Callee	gx_path_close_subpath		5852488	0					
ANR	5852661	Identifier	gx_path_close_subpath		5852488	0					
ANR	5852662	ArgumentList	ppath		5852488	1					
ANR	5852663	Argument	ppath		5852488	0					
ANR	5852664	Identifier	ppath		5852488	0					
ANR	5852665	IfStatement	if ( code < 0 )		5852488	13					
ANR	5852666	Condition	code < 0	1929:8:82607:82614	5852488	0	True				
ANR	5852667	RelationalExpression	code < 0		5852488	0		<			
ANR	5852668	Identifier	code		5852488	0					
ANR	5852669	PrimaryExpression	0		5852488	1					
ANR	5852670	ReturnStatement	return code ;	1930:8:82625:82636	5852488	1	True				
ANR	5852671	Identifier	code		5852488	0					
ANR	5852672	ExpressionStatement	npoints = 0	1931:4:82642:82653	5852488	14	True				
ANR	5852673	AssignmentExpression	npoints = 0		5852488	0		=			
ANR	5852674	Identifier	npoints		5852488	0					
ANR	5852675	PrimaryExpression	0		5852488	1					
ANR	5852676	IfStatement	if ( nplp == 0 )		5852488	15					
ANR	5852677	Condition	nplp == 0	1932:8:82663:82671	5852488	0	True				
ANR	5852678	EqualityExpression	nplp == 0		5852488	0		==			
ANR	5852679	Identifier	nplp		5852488	0					
ANR	5852680	PrimaryExpression	0		5852488	1					
ANR	5852681	CompoundStatement		30:19:1069:1069	5852488	1					
ANR	5852682	IfStatement	if ( pgs_lp -> start_cap == gs_cap_butt )		5852488	0					
ANR	5852683	Condition	pgs_lp -> start_cap == gs_cap_butt	1934:12:82719:82750	5852488	0	True				
ANR	5852684	EqualityExpression	pgs_lp -> start_cap == gs_cap_butt		5852488	0		==			
ANR	5852685	PtrMemberAccess	pgs_lp -> start_cap		5852488	0					
ANR	5852686	Identifier	pgs_lp		5852488	0					
ANR	5852687	Identifier	start_cap		5852488	1					
ANR	5852688	Identifier	gs_cap_butt		5852488	1					
ANR	5852689	ReturnStatement	return 0 ;	1935:12:82765:82773	5852488	1	True				
ANR	5852690	PrimaryExpression	0		5852488	0					
ANR	5852691	IfStatement	if ( pgs_lp -> start_cap == gs_cap_round )		5852488	1					
ANR	5852692	Condition	pgs_lp -> start_cap == gs_cap_round	1936:12:82787:82819	5852488	0	True				
ANR	5852693	EqualityExpression	pgs_lp -> start_cap == gs_cap_round		5852488	0		==			
ANR	5852694	PtrMemberAccess	pgs_lp -> start_cap		5852488	0					
ANR	5852695	Identifier	pgs_lp		5852488	0					
ANR	5852696	Identifier	start_cap		5852488	1					
ANR	5852697	Identifier	gs_cap_round		5852488	1					
ANR	5852698	CompoundStatement		34:47:1217:1217	5852488	1					
ANR	5852699	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"	1937:12:82836:82877	5852488	0	True				
ANR	5852700	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"		5852488	0					
ANR	5852701	Callee	ASSIGN_POINT		5852488	0					
ANR	5852702	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852703	ArgumentList	& points [ npoints ]		5852488	1					
ANR	5852704	Argument	& points [ npoints ]		5852488	0					
ANR	5852705	UnaryOperationExpression	& points [ npoints ]		5852488	0					
ANR	5852706	UnaryOperator	&		5852488	0					
ANR	5852707	ArrayIndexing	points [ npoints ]		5852488	1					
ANR	5852708	Identifier	points		5852488	0					
ANR	5852709	Identifier	npoints		5852488	1					
ANR	5852710	Argument	plp -> e . co		5852488	1					
ANR	5852711	MemberAccess	plp -> e . co		5852488	0					
ANR	5852712	PtrMemberAccess	plp -> e		5852488	0					
ANR	5852713	Identifier	plp		5852488	0					
ANR	5852714	Identifier	e		5852488	1					
ANR	5852715	Identifier	co		5852488	1					
ANR	5852716	ExpressionStatement	++ npoints	1938:12:82891:82900	5852488	1	True				
ANR	5852717	UnaryExpression	++ npoints		5852488	0					
ANR	5852718	IncDec	++		5852488	0					
ANR	5852719	Identifier	npoints		5852488	1					
ANR	5852720	IfStatement	"if ( ( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0 )"		5852488	2					
ANR	5852721	Condition	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"	1939:16:82918:82978	5852488	0	True				
ANR	5852722	RelationalExpression	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"		5852488	0		<			
ANR	5852723	AssignmentExpression	"code = add_points ( ppath , points , npoints , moveto_first )"		5852488	0		=			
ANR	5852724	Identifier	code		5852488	0					
ANR	5852725	CallExpression	"add_points ( ppath , points , npoints , moveto_first )"		5852488	1					
ANR	5852726	Callee	add_points		5852488	0					
ANR	5852727	Identifier	add_points		5852488	0					
ANR	5852728	ArgumentList	ppath		5852488	1					
ANR	5852729	Argument	ppath		5852488	0					
ANR	5852730	Identifier	ppath		5852488	0					
ANR	5852731	Argument	points		5852488	1					
ANR	5852732	Identifier	points		5852488	0					
ANR	5852733	Argument	npoints		5852488	2					
ANR	5852734	Identifier	npoints		5852488	0					
ANR	5852735	Argument	moveto_first		5852488	3					
ANR	5852736	Identifier	moveto_first		5852488	0					
ANR	5852737	PrimaryExpression	0		5852488	1					
ANR	5852738	ReturnStatement	return code ;	1940:16:82997:83008	5852488	1	True				
ANR	5852739	Identifier	code		5852488	0					
ANR	5852740	ReturnStatement	"return add_round_cap ( ppath , & plp -> e ) ;"	1941:12:83022:83058	5852488	3	True				
ANR	5852741	CallExpression	"add_round_cap ( ppath , & plp -> e )"		5852488	0					
ANR	5852742	Callee	add_round_cap		5852488	0					
ANR	5852743	Identifier	add_round_cap		5852488	0					
ANR	5852744	ArgumentList	ppath		5852488	1					
ANR	5852745	Argument	ppath		5852488	0					
ANR	5852746	Identifier	ppath		5852488	0					
ANR	5852747	Argument	& plp -> e		5852488	1					
ANR	5852748	UnaryOperationExpression	& plp -> e		5852488	0					
ANR	5852749	UnaryOperator	&		5852488	0					
ANR	5852750	PtrMemberAccess	plp -> e		5852488	1					
ANR	5852751	Identifier	plp		5852488	0					
ANR	5852752	Identifier	e		5852488	1					
ANR	5852753	ExpressionStatement	"ASSIGN_POINT ( & points [ 0 ] , plp -> e . ce )"	1943:8:83078:83113	5852488	2	True				
ANR	5852754	CallExpression	"ASSIGN_POINT ( & points [ 0 ] , plp -> e . ce )"		5852488	0					
ANR	5852755	Callee	ASSIGN_POINT		5852488	0					
ANR	5852756	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852757	ArgumentList	& points [ 0 ]		5852488	1					
ANR	5852758	Argument	& points [ 0 ]		5852488	0					
ANR	5852759	UnaryOperationExpression	& points [ 0 ]		5852488	0					
ANR	5852760	UnaryOperator	&		5852488	0					
ANR	5852761	ArrayIndexing	points [ 0 ]		5852488	1					
ANR	5852762	Identifier	points		5852488	0					
ANR	5852763	PrimaryExpression	0		5852488	1					
ANR	5852764	Argument	plp -> e . ce		5852488	1					
ANR	5852765	MemberAccess	plp -> e . ce		5852488	0					
ANR	5852766	PtrMemberAccess	plp -> e		5852488	0					
ANR	5852767	Identifier	plp		5852488	0					
ANR	5852768	Identifier	e		5852488	1					
ANR	5852769	Identifier	ce		5852488	1					
ANR	5852770	ExpressionStatement	++ npoints	1944:8:83123:83132	5852488	3	True				
ANR	5852771	UnaryExpression	++ npoints		5852488	0					
ANR	5852772	IncDec	++		5852488	0					
ANR	5852773	Identifier	npoints		5852488	1					
ANR	5852774	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"	1945:8:83142:83183	5852488	4	True				
ANR	5852775	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"		5852488	0					
ANR	5852776	Callee	ASSIGN_POINT		5852488	0					
ANR	5852777	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852778	ArgumentList	& points [ npoints ]		5852488	1					
ANR	5852779	Argument	& points [ npoints ]		5852488	0					
ANR	5852780	UnaryOperationExpression	& points [ npoints ]		5852488	0					
ANR	5852781	UnaryOperator	&		5852488	0					
ANR	5852782	ArrayIndexing	points [ npoints ]		5852488	1					
ANR	5852783	Identifier	points		5852488	0					
ANR	5852784	Identifier	npoints		5852488	1					
ANR	5852785	Argument	plp -> e . co		5852488	1					
ANR	5852786	MemberAccess	plp -> e . co		5852488	0					
ANR	5852787	PtrMemberAccess	plp -> e		5852488	0					
ANR	5852788	Identifier	plp		5852488	0					
ANR	5852789	Identifier	e		5852488	1					
ANR	5852790	Identifier	co		5852488	1					
ANR	5852791	ExpressionStatement	++ npoints	1946:8:83193:83202	5852488	5	True				
ANR	5852792	UnaryExpression	++ npoints		5852488	0					
ANR	5852793	IncDec	++		5852488	0					
ANR	5852794	Identifier	npoints		5852488	1					
ANR	5852795	ExpressionStatement	"code = cap_points ( pgs_lp -> start_cap , & plp -> e , points + npoints )"	1947:8:83212:83275	5852488	6	True				
ANR	5852796	AssignmentExpression	"code = cap_points ( pgs_lp -> start_cap , & plp -> e , points + npoints )"		5852488	0		=			
ANR	5852797	Identifier	code		5852488	0					
ANR	5852798	CallExpression	"cap_points ( pgs_lp -> start_cap , & plp -> e , points + npoints )"		5852488	1					
ANR	5852799	Callee	cap_points		5852488	0					
ANR	5852800	Identifier	cap_points		5852488	0					
ANR	5852801	ArgumentList	pgs_lp -> start_cap		5852488	1					
ANR	5852802	Argument	pgs_lp -> start_cap		5852488	0					
ANR	5852803	PtrMemberAccess	pgs_lp -> start_cap		5852488	0					
ANR	5852804	Identifier	pgs_lp		5852488	0					
ANR	5852805	Identifier	start_cap		5852488	1					
ANR	5852806	Argument	& plp -> e		5852488	1					
ANR	5852807	UnaryOperationExpression	& plp -> e		5852488	0					
ANR	5852808	UnaryOperator	&		5852488	0					
ANR	5852809	PtrMemberAccess	plp -> e		5852488	1					
ANR	5852810	Identifier	plp		5852488	0					
ANR	5852811	Identifier	e		5852488	1					
ANR	5852812	Argument	points + npoints		5852488	2					
ANR	5852813	AdditiveExpression	points + npoints		5852488	0		+			
ANR	5852814	Identifier	points		5852488	0					
ANR	5852815	Identifier	npoints		5852488	1					
ANR	5852816	IfStatement	if ( code < 0 )		5852488	7					
ANR	5852817	Condition	code < 0	1948:12:83289:83296	5852488	0	True				
ANR	5852818	RelationalExpression	code < 0		5852488	0		<			
ANR	5852819	Identifier	code		5852488	0					
ANR	5852820	PrimaryExpression	0		5852488	1					
ANR	5852821	ReturnStatement	return code ;	1949:12:83311:83322	5852488	1	True				
ANR	5852822	Identifier	code		5852488	0					
ANR	5852823	ExpressionStatement	npoints += code	1950:8:83332:83347	5852488	8	True				
ANR	5852824	AssignmentExpression	npoints += code		5852488	0		+=			
ANR	5852825	Identifier	npoints		5852488	0					
ANR	5852826	Identifier	code		5852488	1					
ANR	5852827	ElseStatement	else		5852488	0					
ANR	5852828	IfStatement	if ( join == gs_join_round )		5852488	0					
ANR	5852829	Condition	join == gs_join_round	1951:15:83364:83384	5852488	0	True				
ANR	5852830	EqualityExpression	join == gs_join_round		5852488	0		==			
ANR	5852831	Identifier	join		5852488	0					
ANR	5852832	Identifier	gs_join_round		5852488	1					
ANR	5852833	CompoundStatement		49:38:1782:1782	5852488	1					
ANR	5852834	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"	1952:8:83397:83438	5852488	0	True				
ANR	5852835	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> e . co )"		5852488	0					
ANR	5852836	Callee	ASSIGN_POINT		5852488	0					
ANR	5852837	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852838	ArgumentList	& points [ npoints ]		5852488	1					
ANR	5852839	Argument	& points [ npoints ]		5852488	0					
ANR	5852840	UnaryOperationExpression	& points [ npoints ]		5852488	0					
ANR	5852841	UnaryOperator	&		5852488	0					
ANR	5852842	ArrayIndexing	points [ npoints ]		5852488	1					
ANR	5852843	Identifier	points		5852488	0					
ANR	5852844	Identifier	npoints		5852488	1					
ANR	5852845	Argument	plp -> e . co		5852488	1					
ANR	5852846	MemberAccess	plp -> e . co		5852488	0					
ANR	5852847	PtrMemberAccess	plp -> e		5852488	0					
ANR	5852848	Identifier	plp		5852488	0					
ANR	5852849	Identifier	e		5852488	1					
ANR	5852850	Identifier	co		5852488	1					
ANR	5852851	ExpressionStatement	++ npoints	1953:8:83448:83457	5852488	1	True				
ANR	5852852	UnaryExpression	++ npoints		5852488	0					
ANR	5852853	IncDec	++		5852488	0					
ANR	5852854	Identifier	npoints		5852488	1					
ANR	5852855	IfStatement	"if ( ( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0 )"		5852488	2					
ANR	5852856	Condition	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"	1954:12:83471:83531	5852488	0	True				
ANR	5852857	RelationalExpression	"( code = add_points ( ppath , points , npoints , moveto_first ) ) < 0"		5852488	0		<			
ANR	5852858	AssignmentExpression	"code = add_points ( ppath , points , npoints , moveto_first )"		5852488	0		=			
ANR	5852859	Identifier	code		5852488	0					
ANR	5852860	CallExpression	"add_points ( ppath , points , npoints , moveto_first )"		5852488	1					
ANR	5852861	Callee	add_points		5852488	0					
ANR	5852862	Identifier	add_points		5852488	0					
ANR	5852863	ArgumentList	ppath		5852488	1					
ANR	5852864	Argument	ppath		5852488	0					
ANR	5852865	Identifier	ppath		5852488	0					
ANR	5852866	Argument	points		5852488	1					
ANR	5852867	Identifier	points		5852488	0					
ANR	5852868	Argument	npoints		5852488	2					
ANR	5852869	Identifier	npoints		5852488	0					
ANR	5852870	Argument	moveto_first		5852488	3					
ANR	5852871	Identifier	moveto_first		5852488	0					
ANR	5852872	PrimaryExpression	0		5852488	1					
ANR	5852873	ReturnStatement	return code ;	1955:12:83546:83557	5852488	1	True				
ANR	5852874	Identifier	code		5852488	0					
ANR	5852875	ReturnStatement	"return add_round_cap ( ppath , & plp -> e ) ;"	1956:8:83567:83603	5852488	3	True				
ANR	5852876	CallExpression	"add_round_cap ( ppath , & plp -> e )"		5852488	0					
ANR	5852877	Callee	add_round_cap		5852488	0					
ANR	5852878	Identifier	add_round_cap		5852488	0					
ANR	5852879	ArgumentList	ppath		5852488	1					
ANR	5852880	Argument	ppath		5852488	0					
ANR	5852881	Identifier	ppath		5852488	0					
ANR	5852882	Argument	& plp -> e		5852488	1					
ANR	5852883	UnaryOperationExpression	& plp -> e		5852488	0					
ANR	5852884	UnaryOperator	&		5852488	0					
ANR	5852885	PtrMemberAccess	plp -> e		5852488	1					
ANR	5852886	Identifier	plp		5852488	0					
ANR	5852887	Identifier	e		5852488	1					
ANR	5852888	ElseStatement	else		5852488	0					
ANR	5852889	IfStatement	if ( nplp -> thin )		5852488	0					
ANR	5852890	Condition	nplp -> thin	1957:15:83620:83629	5852488	0	True				
ANR	5852891	PtrMemberAccess	nplp -> thin		5852488	0					
ANR	5852892	Identifier	nplp		5852488	0					
ANR	5852893	Identifier	thin		5852488	1					
ANR	5852894	CompoundStatement		55:27:2027:2027	5852488	1					
ANR	5852895	ExpressionStatement	npoints = 0	1958:8:83659:83670	5852488	0	True				
ANR	5852896	AssignmentExpression	npoints = 0		5852488	0		=			
ANR	5852897	Identifier	npoints		5852488	0					
ANR	5852898	PrimaryExpression	0		5852488	1					
ANR	5852899	ElseStatement	else		5852488	0					
ANR	5852900	CompoundStatement		58:8:2128:2282	5852488	0					
ANR	5852901	IdentifierDeclStatement	bool ccw = ( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y ) ;	1960:8:83733:83887	5852488	0	True				
ANR	5852902	IdentifierDecl	ccw = ( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5852488	0					
ANR	5852903	IdentifierDeclType	bool		5852488	0					
ANR	5852904	Identifier	ccw		5852488	1					
ANR	5852905	AssignmentExpression	ccw = ( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5852488	2		=			
ANR	5852906	Identifier	ccw		5852488	0					
ANR	5852907	RelationalExpression	( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5852488	1		>			
ANR	5852908	MultiplicativeExpression	( double ) ( plp -> width . x ) * ( nplp -> width . y )		5852488	0		*			
ANR	5852909	CastExpression	( double ) ( plp -> width . x )		5852488	0					
ANR	5852910	CastTarget	double		5852488	0					
ANR	5852911	MemberAccess	plp -> width . x		5852488	1					
ANR	5852912	PtrMemberAccess	plp -> width		5852488	0					
ANR	5852913	Identifier	plp		5852488	0					
ANR	5852914	Identifier	width		5852488	1					
ANR	5852915	Identifier	x		5852488	1					
ANR	5852916	MemberAccess	nplp -> width . y		5852488	1					
ANR	5852917	PtrMemberAccess	nplp -> width		5852488	0					
ANR	5852918	Identifier	nplp		5852488	0					
ANR	5852919	Identifier	width		5852488	1					
ANR	5852920	Identifier	y		5852488	1					
ANR	5852921	MultiplicativeExpression	( double ) ( nplp -> width . x ) * ( plp -> width . y )		5852488	1		*			
ANR	5852922	CastExpression	( double ) ( nplp -> width . x )		5852488	0					
ANR	5852923	CastTarget	double		5852488	0					
ANR	5852924	MemberAccess	nplp -> width . x		5852488	1					
ANR	5852925	PtrMemberAccess	nplp -> width		5852488	0					
ANR	5852926	Identifier	nplp		5852488	0					
ANR	5852927	Identifier	width		5852488	1					
ANR	5852928	Identifier	x		5852488	1					
ANR	5852929	MemberAccess	plp -> width . y		5852488	1					
ANR	5852930	PtrMemberAccess	plp -> width		5852488	0					
ANR	5852931	Identifier	plp		5852488	0					
ANR	5852932	Identifier	width		5852488	1					
ANR	5852933	Identifier	y		5852488	1					
ANR	5852934	IfStatement	if ( ccw ^ reflected )		5852488	1					
ANR	5852935	Condition	ccw ^ reflected	1964:12:83902:83916	5852488	0	True				
ANR	5852936	ExclusiveOrExpression	ccw ^ reflected		5852488	0		^			
ANR	5852937	Identifier	ccw		5852488	0					
ANR	5852938	Identifier	reflected		5852488	1					
ANR	5852939	CompoundStatement		62:29:2314:2314	5852488	1					
ANR	5852940	ExpressionStatement	"ASSIGN_POINT ( & points [ 0 ] , plp -> e . co )"	1965:12:83933:83968	5852488	0	True				
ANR	5852941	CallExpression	"ASSIGN_POINT ( & points [ 0 ] , plp -> e . co )"		5852488	0					
ANR	5852942	Callee	ASSIGN_POINT		5852488	0					
ANR	5852943	Identifier	ASSIGN_POINT		5852488	0					
ANR	5852944	ArgumentList	& points [ 0 ]		5852488	1					
ANR	5852945	Argument	& points [ 0 ]		5852488	0					
ANR	5852946	UnaryOperationExpression	& points [ 0 ]		5852488	0					
ANR	5852947	UnaryOperator	&		5852488	0					
ANR	5852948	ArrayIndexing	points [ 0 ]		5852488	1					
ANR	5852949	Identifier	points		5852488	0					
ANR	5852950	PrimaryExpression	0		5852488	1					
ANR	5852951	Argument	plp -> e . co		5852488	1					
ANR	5852952	MemberAccess	plp -> e . co		5852488	0					
ANR	5852953	PtrMemberAccess	plp -> e		5852488	0					
ANR	5852954	Identifier	plp		5852488	0					
ANR	5852955	Identifier	e		5852488	1					
ANR	5852956	Identifier	co		5852488	1					
ANR	5852957	ExpressionStatement	++ npoints	1966:12:83982:83991	5852488	1	True				
ANR	5852958	UnaryExpression	++ npoints		5852488	0					
ANR	5852959	IncDec	++		5852488	0					
ANR	5852960	Identifier	npoints		5852488	1					
ANR	5852961	ExpressionStatement	"code = line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"	1967:12:84005:84200	5852488	2	True				
ANR	5852962	AssignmentExpression	"code = line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5852488	0		=			
ANR	5852963	Identifier	code		5852488	0					
ANR	5852964	CallExpression	"line_join_points ( pgs_lp , plp , nplp , points + npoints , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5852488	1					
ANR	5852965	Callee	line_join_points		5852488	0					
ANR	5852966	Identifier	line_join_points		5852488	0					
ANR	5852967	ArgumentList	pgs_lp		5852488	1					
ANR	5852968	Argument	pgs_lp		5852488	0					
ANR	5852969	Identifier	pgs_lp		5852488	0					
ANR	5852970	Argument	plp		5852488	1					
ANR	5852971	Identifier	plp		5852488	0					
ANR	5852972	Argument	nplp		5852488	2					
ANR	5852973	Identifier	nplp		5852488	0					
ANR	5852974	Argument	points + npoints		5852488	3					
ANR	5852975	AdditiveExpression	points + npoints		5852488	0		+			
ANR	5852976	Identifier	points		5852488	0					
ANR	5852977	Identifier	npoints		5852488	1					
ANR	5852978	Argument	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5852488	4					
ANR	5852979	ConditionalExpression	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5852488	0					
ANR	5852980	Condition	uniform		5852488	0					
ANR	5852981	Identifier	uniform		5852488	0					
ANR	5852982	CastExpression	( gs_matrix * ) 0		5852488	1					
ANR	5852983	CastTarget	gs_matrix *		5852488	0					
ANR	5852984	PrimaryExpression	0		5852488	1					
ANR	5852985	UnaryOperationExpression	& ctm_only ( pgs )		5852488	2					
ANR	5852986	UnaryOperator	&		5852488	0					
ANR	5852987	CallExpression	ctm_only ( pgs )		5852488	1					
ANR	5852988	Callee	ctm_only		5852488	0					
ANR	5852989	Identifier	ctm_only		5852488	0					
ANR	5852990	ArgumentList	pgs		5852488	1					
ANR	5852991	Argument	pgs		5852488	0					
ANR	5852992	Identifier	pgs		5852488	0					
ANR	5852993	Argument	join		5852488	5					
ANR	5852994	Identifier	join		5852488	0					
ANR	5852995	Argument	reflected		5852488	6					
ANR	5852996	Identifier	reflected		5852488	0					
ANR	5852997	IfStatement	if ( code < 0 )		5852488	3					
ANR	5852998	Condition	code < 0	1970:16:84218:84225	5852488	0	True				
ANR	5852999	RelationalExpression	code < 0		5852488	0		<			
ANR	5853000	Identifier	code		5852488	0					
ANR	5853001	PrimaryExpression	0		5852488	1					
ANR	5853002	ReturnStatement	return code ;	1971:16:84244:84255	5852488	1	True				
ANR	5853003	Identifier	code		5852488	0					
ANR	5853004	ExpressionStatement	code --	1972:12:84269:84275	5852488	4	True				
ANR	5853005	PostIncDecOperationExpression	code --		5852488	0					
ANR	5853006	Identifier	code		5852488	0					
ANR	5853007	IncDec	--		5852488	1					
ANR	5853008	ExpressionStatement	npoints += code	1973:12:84343:84358	5852488	5	True				
ANR	5853009	AssignmentExpression	npoints += code		5852488	0		+=			
ANR	5853010	Identifier	npoints		5852488	0					
ANR	5853011	Identifier	code		5852488	1					
ANR	5853012	ElseStatement	else		5852488	0					
ANR	5853013	CompoundStatement		72:15:2770:2770	5852488	0					
ANR	5853014	ExpressionStatement	"code = line_join_points ( pgs_lp , plp , nplp , points , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"	1975:12:84389:84574	5852488	0	True				
ANR	5853015	AssignmentExpression	"code = line_join_points ( pgs_lp , plp , nplp , points , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5852488	0		=			
ANR	5853016	Identifier	code		5852488	0					
ANR	5853017	CallExpression	"line_join_points ( pgs_lp , plp , nplp , points , ( uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs ) ) , join , reflected )"		5852488	1					
ANR	5853018	Callee	line_join_points		5852488	0					
ANR	5853019	Identifier	line_join_points		5852488	0					
ANR	5853020	ArgumentList	pgs_lp		5852488	1					
ANR	5853021	Argument	pgs_lp		5852488	0					
ANR	5853022	Identifier	pgs_lp		5852488	0					
ANR	5853023	Argument	plp		5852488	1					
ANR	5853024	Identifier	plp		5852488	0					
ANR	5853025	Argument	nplp		5852488	2					
ANR	5853026	Identifier	nplp		5852488	0					
ANR	5853027	Argument	points		5852488	3					
ANR	5853028	Identifier	points		5852488	0					
ANR	5853029	Argument	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5852488	4					
ANR	5853030	ConditionalExpression	uniform ? ( gs_matrix * ) 0 : & ctm_only ( pgs )		5852488	0					
ANR	5853031	Condition	uniform		5852488	0					
ANR	5853032	Identifier	uniform		5852488	0					
ANR	5853033	CastExpression	( gs_matrix * ) 0		5852488	1					
ANR	5853034	CastTarget	gs_matrix *		5852488	0					
ANR	5853035	PrimaryExpression	0		5852488	1					
ANR	5853036	UnaryOperationExpression	& ctm_only ( pgs )		5852488	2					
ANR	5853037	UnaryOperator	&		5852488	0					
ANR	5853038	CallExpression	ctm_only ( pgs )		5852488	1					
ANR	5853039	Callee	ctm_only		5852488	0					
ANR	5853040	Identifier	ctm_only		5852488	0					
ANR	5853041	ArgumentList	pgs		5852488	1					
ANR	5853042	Argument	pgs		5852488	0					
ANR	5853043	Identifier	pgs		5852488	0					
ANR	5853044	Argument	join		5852488	5					
ANR	5853045	Identifier	join		5852488	0					
ANR	5853046	Argument	reflected		5852488	6					
ANR	5853047	Identifier	reflected		5852488	0					
ANR	5853048	IfStatement	if ( code < 0 )		5852488	1					
ANR	5853049	Condition	code < 0	1978:16:84592:84599	5852488	0	True				
ANR	5853050	RelationalExpression	code < 0		5852488	0		<			
ANR	5853051	Identifier	code		5852488	0					
ANR	5853052	PrimaryExpression	0		5852488	1					
ANR	5853053	ReturnStatement	return code ;	1979:16:84618:84629	5852488	1	True				
ANR	5853054	Identifier	code		5852488	0					
ANR	5853055	ExpressionStatement	"ASSIGN_POINT ( & points [ 0 ] , plp -> e . ce )"	1980:12:84643:84678	5852488	2	True				
ANR	5853056	CallExpression	"ASSIGN_POINT ( & points [ 0 ] , plp -> e . ce )"		5852488	0					
ANR	5853057	Callee	ASSIGN_POINT		5852488	0					
ANR	5853058	Identifier	ASSIGN_POINT		5852488	0					
ANR	5853059	ArgumentList	& points [ 0 ]		5852488	1					
ANR	5853060	Argument	& points [ 0 ]		5852488	0					
ANR	5853061	UnaryOperationExpression	& points [ 0 ]		5852488	0					
ANR	5853062	UnaryOperator	&		5852488	0					
ANR	5853063	ArrayIndexing	points [ 0 ]		5852488	1					
ANR	5853064	Identifier	points		5852488	0					
ANR	5853065	PrimaryExpression	0		5852488	1					
ANR	5853066	Argument	plp -> e . ce		5852488	1					
ANR	5853067	MemberAccess	plp -> e . ce		5852488	0					
ANR	5853068	PtrMemberAccess	plp -> e		5852488	0					
ANR	5853069	Identifier	plp		5852488	0					
ANR	5853070	Identifier	e		5852488	1					
ANR	5853071	Identifier	ce		5852488	1					
ANR	5853072	ExpressionStatement	npoints = code	1981:12:84753:84767	5852488	3	True				
ANR	5853073	AssignmentExpression	npoints = code		5852488	0		=			
ANR	5853074	Identifier	npoints		5852488	0					
ANR	5853075	Identifier	code		5852488	1					
ANR	5853076	ExpressionStatement	"code = add_points ( ppath , points , npoints , moveto_first )"	1984:4:84789:84844	5852488	16	True				
ANR	5853077	AssignmentExpression	"code = add_points ( ppath , points , npoints , moveto_first )"		5852488	0		=			
ANR	5853078	Identifier	code		5852488	0					
ANR	5853079	CallExpression	"add_points ( ppath , points , npoints , moveto_first )"		5852488	1					
ANR	5853080	Callee	add_points		5852488	0					
ANR	5853081	Identifier	add_points		5852488	0					
ANR	5853082	ArgumentList	ppath		5852488	1					
ANR	5853083	Argument	ppath		5852488	0					
ANR	5853084	Identifier	ppath		5852488	0					
ANR	5853085	Argument	points		5852488	1					
ANR	5853086	Identifier	points		5852488	0					
ANR	5853087	Argument	npoints		5852488	2					
ANR	5853088	Identifier	npoints		5852488	0					
ANR	5853089	Argument	moveto_first		5852488	3					
ANR	5853090	Identifier	moveto_first		5852488	0					
ANR	5853091	IfStatement	if ( code < 0 )		5852488	17					
ANR	5853092	Condition	code < 0	1985:8:84854:84861	5852488	0	True				
ANR	5853093	RelationalExpression	code < 0		5852488	0		<			
ANR	5853094	Identifier	code		5852488	0					
ANR	5853095	PrimaryExpression	0		5852488	1					
ANR	5853096	ReturnStatement	return code ;	1986:8:84872:84883	5852488	1	True				
ANR	5853097	Identifier	code		5852488	0					
ANR	5853098	ExpressionStatement	code = gx_path_close_subpath ( ppath )	1987:4:84889:84924	5852488	18	True				
ANR	5853099	AssignmentExpression	code = gx_path_close_subpath ( ppath )		5852488	0		=			
ANR	5853100	Identifier	code		5852488	0					
ANR	5853101	CallExpression	gx_path_close_subpath ( ppath )		5852488	1					
ANR	5853102	Callee	gx_path_close_subpath		5852488	0					
ANR	5853103	Identifier	gx_path_close_subpath		5852488	0					
ANR	5853104	ArgumentList	ppath		5852488	1					
ANR	5853105	Argument	ppath		5852488	0					
ANR	5853106	Identifier	ppath		5852488	0					
ANR	5853107	ReturnStatement	return code ;	1988:4:84930:84941	5852488	19	True				
ANR	5853108	Identifier	code		5852488	0					
ANR	5853109	ReturnType	static int		5852488	1					
ANR	5853110	Identifier	stroke_add_compat		5852488	2					
ANR	5853111	ParameterList	"gx_path * ppath , gx_path * rpath , bool ensure_closed , int first , pl_ptr plp , pl_ptr nplp , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs , const gx_stroke_params * params , const gs_fixed_rect * ignore_pbbox , int uniform , gs_line_join join , bool reflected , note_flags flags"		5852488	3					
ANR	5853112	Parameter	gx_path * ppath	1896:18:81201:81215	5852488	0	True				
ANR	5853113	ParameterType	gx_path *		5852488	0					
ANR	5853114	Identifier	ppath		5852488	1					
ANR	5853115	Parameter	gx_path * rpath	1896:35:81218:81231	5852488	1	True				
ANR	5853116	ParameterType	gx_path *		5852488	0					
ANR	5853117	Identifier	rpath		5852488	1					
ANR	5853118	Parameter	bool ensure_closed	1896:51:81234:81251	5852488	2	True				
ANR	5853119	ParameterType	bool		5852488	0					
ANR	5853120	Identifier	ensure_closed		5852488	1					
ANR	5853121	Parameter	int first	1897:18:81272:81280	5852488	3	True				
ANR	5853122	ParameterType	int		5852488	0					
ANR	5853123	Identifier	first		5852488	1					
ANR	5853124	Parameter	pl_ptr plp	1897:29:81283:81292	5852488	4	True				
ANR	5853125	ParameterType	pl_ptr		5852488	0					
ANR	5853126	Identifier	plp		5852488	1					
ANR	5853127	Parameter	pl_ptr nplp	1897:41:81295:81305	5852488	5	True				
ANR	5853128	ParameterType	pl_ptr		5852488	0					
ANR	5853129	Identifier	nplp		5852488	1					
ANR	5853130	Parameter	const gx_device_color * pdevc	1898:18:81326:81354	5852488	6	True				
ANR	5853131	ParameterType	const gx_device_color *		5852488	0					
ANR	5853132	Identifier	pdevc		5852488	1					
ANR	5853133	Parameter	gx_device * dev	1898:49:81357:81371	5852488	7	True				
ANR	5853134	ParameterType	gx_device *		5852488	0					
ANR	5853135	Identifier	dev		5852488	1					
ANR	5853136	Parameter	const gs_gstate * pgs	1899:18:81392:81412	5852488	8	True				
ANR	5853137	ParameterType	const gs_gstate *		5852488	0					
ANR	5853138	Identifier	pgs		5852488	1					
ANR	5853139	Parameter	const gx_stroke_params * params	1900:18:81433:81463	5852488	9	True				
ANR	5853140	ParameterType	const gx_stroke_params *		5852488	0					
ANR	5853141	Identifier	params		5852488	1					
ANR	5853142	Parameter	const gs_fixed_rect * ignore_pbbox	1901:18:81484:81517	5852488	10	True				
ANR	5853143	ParameterType	const gs_fixed_rect *		5852488	0					
ANR	5853144	Identifier	ignore_pbbox		5852488	1					
ANR	5853145	Parameter	int uniform	1901:54:81520:81530	5852488	11	True				
ANR	5853146	ParameterType	int		5852488	0					
ANR	5853147	Identifier	uniform		5852488	1					
ANR	5853148	Parameter	gs_line_join join	1902:18:81551:81567	5852488	12	True				
ANR	5853149	ParameterType	gs_line_join		5852488	0					
ANR	5853150	Identifier	join		5852488	1					
ANR	5853151	Parameter	bool reflected	1902:37:81570:81583	5852488	13	True				
ANR	5853152	ParameterType	bool		5852488	0					
ANR	5853153	Identifier	reflected		5852488	1					
ANR	5853154	Parameter	note_flags flags	1902:53:81586:81601	5852488	14	True				
ANR	5853155	ParameterType	note_flags		5852488	0					
ANR	5853156	Identifier	flags		5852488	1					
ANR	5853157	CFGEntryNode	ENTRY		5852488		True				
ANR	5853158	CFGExitNode	EXIT		5852488		True				
ANR	5853159	Symbol	pdevc		5852488						
ANR	5853160	Symbol	npoints		5852488						
ANR	5853161	Symbol	reflected		5852488						
ANR	5853162	Symbol	& plp -> e		5852488						
ANR	5853163	Symbol	points		5852488						
ANR	5853164	Symbol	dev		5852488						
ANR	5853165	Symbol	plp -> e . co		5852488						
ANR	5853166	Symbol	ccw		5852488						
ANR	5853167	Symbol	gs_currentlineparams_inline		5852488						
ANR	5853168	Symbol	plp -> e . ce		5852488						
ANR	5853169	Symbol	join		5852488						
ANR	5853170	Symbol	* plp		5852488						
ANR	5853171	Symbol	add_points		5852488						
ANR	5853172	Symbol	plp -> thin		5852488						
ANR	5853173	Symbol	ensure_closed		5852488						
ANR	5853174	Symbol	params		5852488						
ANR	5853175	Symbol	gs_join_round		5852488						
ANR	5853176	Symbol	pgs_lp		5852488						
ANR	5853177	Symbol	true		5852488						
ANR	5853178	Symbol	plp -> width . y		5852488						
ANR	5853179	Symbol	plp -> width . x		5852488						
ANR	5853180	Symbol	code		5852488						
ANR	5853181	Symbol	cap_points		5852488						
ANR	5853182	Symbol	* pgs_lp		5852488						
ANR	5853183	Symbol	ignore_pbbox		5852488						
ANR	5853184	Symbol	flags		5852488						
ANR	5853185	Symbol	plp -> o . co		5852488						
ANR	5853186	Symbol	ppath		5852488						
ANR	5853187	Symbol	gx_path_close_subpath		5852488						
ANR	5853188	Symbol	plp -> width		5852488						
ANR	5853189	Symbol	uniform		5852488						
ANR	5853190	Symbol	nplp -> width		5852488						
ANR	5853191	Symbol	moveto_first		5852488						
ANR	5853192	Symbol	plp -> o . ce		5852488						
ANR	5853193	Symbol	add_round_cap		5852488						
ANR	5853194	Symbol	pgs		5852488						
ANR	5853195	Symbol	gs_cap_round		5852488						
ANR	5853196	Symbol	* nplp		5852488						
ANR	5853197	Symbol	& ctm_only		5852488						
ANR	5853198	Symbol	line_join_points		5852488						
ANR	5853199	Symbol	gs_cap_butt		5852488						
ANR	5853200	Symbol	rpath		5852488						
ANR	5853201	Symbol	nplp -> width . y		5852488						
ANR	5853202	Symbol	pgs_lp -> start_cap		5852488						
ANR	5853203	Symbol	plp		5852488						
ANR	5853204	Symbol	nplp		5852488						
ANR	5853205	Symbol	plp -> o		5852488						
ANR	5853206	Symbol	plp -> e		5852488						
ANR	5853207	Symbol	nplp -> thin		5852488						
ANR	5853208	Symbol	first		5852488						
ANR	5853209	Symbol	nplp -> width . x		5852488						
ANR	5853210	Function	stroke_add_initial_cap_compat	1997:0:85153:86519							
ANR	5853211	FunctionDef	"stroke_add_initial_cap_compat (gx_path * ppath , pl_ptr plp , bool adlust_longitude , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs)"		5853210	0					
ANR	5853212	CompoundStatement		2001:0:85339:86519	5853210	0					
ANR	5853213	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	2002:4:85345:85408	5853210	0	True				
ANR	5853214	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		5853210	0					
ANR	5853215	IdentifierDeclType	const gx_line_params *		5853210	0					
ANR	5853216	Identifier	pgs_lp		5853210	1					
ANR	5853217	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		5853210	2		=			
ANR	5853218	Identifier	pgs_lp		5853210	0					
ANR	5853219	CallExpression	gs_currentlineparams_inline ( pgs )		5853210	1					
ANR	5853220	Callee	gs_currentlineparams_inline		5853210	0					
ANR	5853221	Identifier	gs_currentlineparams_inline		5853210	0					
ANR	5853222	ArgumentList	pgs		5853210	1					
ANR	5853223	Argument	pgs		5853210	0					
ANR	5853224	Identifier	pgs		5853210	0					
ANR	5853225	IdentifierDeclStatement	gs_fixed_point points [ 5 ] ;	2003:4:85414:85438	5853210	1	True				
ANR	5853226	IdentifierDecl	points [ 5 ]		5853210	0					
ANR	5853227	IdentifierDeclType	gs_fixed_point [ 5 ]		5853210	0					
ANR	5853228	Identifier	points		5853210	1					
ANR	5853229	PrimaryExpression	5		5853210	2					
ANR	5853230	IdentifierDeclStatement	int npoints = 0 ;	2004:4:85444:85459	5853210	2	True				
ANR	5853231	IdentifierDecl	npoints = 0		5853210	0					
ANR	5853232	IdentifierDeclType	int		5853210	0					
ANR	5853233	Identifier	npoints		5853210	1					
ANR	5853234	AssignmentExpression	npoints = 0		5853210	2		=			
ANR	5853235	Identifier	npoints		5853210	0					
ANR	5853236	PrimaryExpression	0		5853210	1					
ANR	5853237	IdentifierDeclStatement	int code ;	2005:4:85465:85473	5853210	3	True				
ANR	5853238	IdentifierDecl	code		5853210	0					
ANR	5853239	IdentifierDeclType	int		5853210	0					
ANR	5853240	Identifier	code		5853210	1					
ANR	5853241	IfStatement	if ( pgs_lp -> start_cap == gs_cap_butt )		5853210	4					
ANR	5853242	Condition	pgs_lp -> start_cap == gs_cap_butt	2007:8:85484:85515	5853210	0	True				
ANR	5853243	EqualityExpression	pgs_lp -> start_cap == gs_cap_butt		5853210	0		==			
ANR	5853244	PtrMemberAccess	pgs_lp -> start_cap		5853210	0					
ANR	5853245	Identifier	pgs_lp		5853210	0					
ANR	5853246	Identifier	start_cap		5853210	1					
ANR	5853247	Identifier	gs_cap_butt		5853210	1					
ANR	5853248	ReturnStatement	return 0 ;	2008:8:85526:85534	5853210	1	True				
ANR	5853249	PrimaryExpression	0		5853210	0					
ANR	5853250	IfStatement	if ( plp -> thin )		5853210	5					
ANR	5853251	Condition	plp -> thin	2009:8:85544:85552	5853210	0	True				
ANR	5853252	PtrMemberAccess	plp -> thin		5853210	0					
ANR	5853253	Identifier	plp		5853210	0					
ANR	5853254	Identifier	thin		5853210	1					
ANR	5853255	CompoundStatement		9:19:215:215	5853210	1					
ANR	5853256	ExpressionStatement	set_thin_widths ( plp )	2012:8:85681:85701	5853210	0	True				
ANR	5853257	CallExpression	set_thin_widths ( plp )		5853210	0					
ANR	5853258	Callee	set_thin_widths		5853210	0					
ANR	5853259	Identifier	set_thin_widths		5853210	0					
ANR	5853260	ArgumentList	plp		5853210	1					
ANR	5853261	Argument	plp		5853210	0					
ANR	5853262	Identifier	plp		5853210	0					
ANR	5853263	ExpressionStatement	"adjust_stroke ( dev , plp , pgs , true , adlust_longitude , 0 )"	2013:8:85711:85766	5853210	1	True				
ANR	5853264	CallExpression	"adjust_stroke ( dev , plp , pgs , true , adlust_longitude , 0 )"		5853210	0					
ANR	5853265	Callee	adjust_stroke		5853210	0					
ANR	5853266	Identifier	adjust_stroke		5853210	0					
ANR	5853267	ArgumentList	dev		5853210	1					
ANR	5853268	Argument	dev		5853210	0					
ANR	5853269	Identifier	dev		5853210	0					
ANR	5853270	Argument	plp		5853210	1					
ANR	5853271	Identifier	plp		5853210	0					
ANR	5853272	Argument	pgs		5853210	2					
ANR	5853273	Identifier	pgs		5853210	0					
ANR	5853274	Argument	true		5853210	3					
ANR	5853275	Identifier	true		5853210	0					
ANR	5853276	Argument	adlust_longitude		5853210	4					
ANR	5853277	Identifier	adlust_longitude		5853210	0					
ANR	5853278	Argument	0		5853210	5					
ANR	5853279	PrimaryExpression	0		5853210	0					
ANR	5853280	ExpressionStatement	compute_caps ( plp )	2014:8:85776:85793	5853210	2	True				
ANR	5853281	CallExpression	compute_caps ( plp )		5853210	0					
ANR	5853282	Callee	compute_caps		5853210	0					
ANR	5853283	Identifier	compute_caps		5853210	0					
ANR	5853284	ArgumentList	plp		5853210	1					
ANR	5853285	Argument	plp		5853210	0					
ANR	5853286	Identifier	plp		5853210	0					
ANR	5853287	IfStatement	if ( pgs_lp -> start_cap == gs_cap_round )		5853210	6					
ANR	5853288	Condition	pgs_lp -> start_cap == gs_cap_round	2017:8:85853:85885	5853210	0	True				
ANR	5853289	EqualityExpression	pgs_lp -> start_cap == gs_cap_round		5853210	0		==			
ANR	5853290	PtrMemberAccess	pgs_lp -> start_cap		5853210	0					
ANR	5853291	Identifier	pgs_lp		5853210	0					
ANR	5853292	Identifier	start_cap		5853210	1					
ANR	5853293	Identifier	gs_cap_round		5853210	1					
ANR	5853294	CompoundStatement		17:43:548:548	5853210	1					
ANR	5853295	IfStatement	"if ( ( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_round_cap ( ppath , & plp -> o ) ) < 0 )"		5853210	0					
ANR	5853296	Condition	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_round_cap ( ppath , & plp -> o ) ) < 0"	2018:12:85902:86022	5853210	0	True				
ANR	5853297	OrExpression	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = add_round_cap ( ppath , & plp -> o ) ) < 0"		5853210	0		||			
ANR	5853298	RelationalExpression	"( code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0"		5853210	0		<			
ANR	5853299	AssignmentExpression	"code = gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y )"		5853210	0		=			
ANR	5853300	Identifier	code		5853210	0					
ANR	5853301	CallExpression	"gx_path_add_point ( ppath , plp -> o . co . x , plp -> o . co . y )"		5853210	1					
ANR	5853302	Callee	gx_path_add_point		5853210	0					
ANR	5853303	Identifier	gx_path_add_point		5853210	0					
ANR	5853304	ArgumentList	ppath		5853210	1					
ANR	5853305	Argument	ppath		5853210	0					
ANR	5853306	Identifier	ppath		5853210	0					
ANR	5853307	Argument	plp -> o . co . x		5853210	1					
ANR	5853308	MemberAccess	plp -> o . co . x		5853210	0					
ANR	5853309	MemberAccess	plp -> o . co		5853210	0					
ANR	5853310	PtrMemberAccess	plp -> o		5853210	0					
ANR	5853311	Identifier	plp		5853210	0					
ANR	5853312	Identifier	o		5853210	1					
ANR	5853313	Identifier	co		5853210	1					
ANR	5853314	Identifier	x		5853210	1					
ANR	5853315	Argument	plp -> o . co . y		5853210	2					
ANR	5853316	MemberAccess	plp -> o . co . y		5853210	0					
ANR	5853317	MemberAccess	plp -> o . co		5853210	0					
ANR	5853318	PtrMemberAccess	plp -> o		5853210	0					
ANR	5853319	Identifier	plp		5853210	0					
ANR	5853320	Identifier	o		5853210	1					
ANR	5853321	Identifier	co		5853210	1					
ANR	5853322	Identifier	y		5853210	1					
ANR	5853323	PrimaryExpression	0		5853210	1					
ANR	5853324	RelationalExpression	"( code = add_round_cap ( ppath , & plp -> o ) ) < 0"		5853210	1		<			
ANR	5853325	AssignmentExpression	"code = add_round_cap ( ppath , & plp -> o )"		5853210	0		=			
ANR	5853326	Identifier	code		5853210	0					
ANR	5853327	CallExpression	"add_round_cap ( ppath , & plp -> o )"		5853210	1					
ANR	5853328	Callee	add_round_cap		5853210	0					
ANR	5853329	Identifier	add_round_cap		5853210	0					
ANR	5853330	ArgumentList	ppath		5853210	1					
ANR	5853331	Argument	ppath		5853210	0					
ANR	5853332	Identifier	ppath		5853210	0					
ANR	5853333	Argument	& plp -> o		5853210	1					
ANR	5853334	UnaryOperationExpression	& plp -> o		5853210	0					
ANR	5853335	UnaryOperator	&		5853210	0					
ANR	5853336	PtrMemberAccess	plp -> o		5853210	1					
ANR	5853337	Identifier	plp		5853210	0					
ANR	5853338	Identifier	o		5853210	1					
ANR	5853339	PrimaryExpression	0		5853210	1					
ANR	5853340	ReturnStatement	return code ;	2021:12:86050:86061	5853210	1	True				
ANR	5853341	Identifier	code		5853210	0					
ANR	5853342	ReturnStatement	return 0 ;	2022:8:86071:86079	5853210	1	True				
ANR	5853343	PrimaryExpression	0		5853210	0					
ANR	5853344	ElseStatement	else		5853210	0					
ANR	5853345	CompoundStatement		23:11:752:752	5853210	0					
ANR	5853346	ExpressionStatement	"ASSIGN_POINT ( & points [ 0 ] , plp -> o . co )"	2024:8:86102:86137	5853210	0	True				
ANR	5853347	CallExpression	"ASSIGN_POINT ( & points [ 0 ] , plp -> o . co )"		5853210	0					
ANR	5853348	Callee	ASSIGN_POINT		5853210	0					
ANR	5853349	Identifier	ASSIGN_POINT		5853210	0					
ANR	5853350	ArgumentList	& points [ 0 ]		5853210	1					
ANR	5853351	Argument	& points [ 0 ]		5853210	0					
ANR	5853352	UnaryOperationExpression	& points [ 0 ]		5853210	0					
ANR	5853353	UnaryOperator	&		5853210	0					
ANR	5853354	ArrayIndexing	points [ 0 ]		5853210	1					
ANR	5853355	Identifier	points		5853210	0					
ANR	5853356	PrimaryExpression	0		5853210	1					
ANR	5853357	Argument	plp -> o . co		5853210	1					
ANR	5853358	MemberAccess	plp -> o . co		5853210	0					
ANR	5853359	PtrMemberAccess	plp -> o		5853210	0					
ANR	5853360	Identifier	plp		5853210	0					
ANR	5853361	Identifier	o		5853210	1					
ANR	5853362	Identifier	co		5853210	1					
ANR	5853363	ExpressionStatement	++ npoints	2025:8:86147:86156	5853210	1	True				
ANR	5853364	UnaryExpression	++ npoints		5853210	0					
ANR	5853365	IncDec	++		5853210	0					
ANR	5853366	Identifier	npoints		5853210	1					
ANR	5853367	IfStatement	"if ( ( code = cap_points ( pgs_lp -> start_cap , & plp -> o , points + npoints ) ) < 0 )"		5853210	2					
ANR	5853368	Condition	"( code = cap_points ( pgs_lp -> start_cap , & plp -> o , points + npoints ) ) < 0"	2026:12:86170:86238	5853210	0	True				
ANR	5853369	RelationalExpression	"( code = cap_points ( pgs_lp -> start_cap , & plp -> o , points + npoints ) ) < 0"		5853210	0		<			
ANR	5853370	AssignmentExpression	"code = cap_points ( pgs_lp -> start_cap , & plp -> o , points + npoints )"		5853210	0		=			
ANR	5853371	Identifier	code		5853210	0					
ANR	5853372	CallExpression	"cap_points ( pgs_lp -> start_cap , & plp -> o , points + npoints )"		5853210	1					
ANR	5853373	Callee	cap_points		5853210	0					
ANR	5853374	Identifier	cap_points		5853210	0					
ANR	5853375	ArgumentList	pgs_lp -> start_cap		5853210	1					
ANR	5853376	Argument	pgs_lp -> start_cap		5853210	0					
ANR	5853377	PtrMemberAccess	pgs_lp -> start_cap		5853210	0					
ANR	5853378	Identifier	pgs_lp		5853210	0					
ANR	5853379	Identifier	start_cap		5853210	1					
ANR	5853380	Argument	& plp -> o		5853210	1					
ANR	5853381	UnaryOperationExpression	& plp -> o		5853210	0					
ANR	5853382	UnaryOperator	&		5853210	0					
ANR	5853383	PtrMemberAccess	plp -> o		5853210	1					
ANR	5853384	Identifier	plp		5853210	0					
ANR	5853385	Identifier	o		5853210	1					
ANR	5853386	Argument	points + npoints		5853210	2					
ANR	5853387	AdditiveExpression	points + npoints		5853210	0		+			
ANR	5853388	Identifier	points		5853210	0					
ANR	5853389	Identifier	npoints		5853210	1					
ANR	5853390	PrimaryExpression	0		5853210	1					
ANR	5853391	ReturnStatement	return npoints ;	2027:12:86253:86267	5853210	1	True				
ANR	5853392	Identifier	npoints		5853210	0					
ANR	5853393	ExpressionStatement	npoints += code	2028:8:86277:86292	5853210	3	True				
ANR	5853394	AssignmentExpression	npoints += code		5853210	0		+=			
ANR	5853395	Identifier	npoints		5853210	0					
ANR	5853396	Identifier	code		5853210	1					
ANR	5853397	ExpressionStatement	"ASSIGN_POINT ( & points [ npoints ] , plp -> o . ce )"	2029:8:86302:86343	5853210	4	True				
ANR	5853398	CallExpression	"ASSIGN_POINT ( & points [ npoints ] , plp -> o . ce )"		5853210	0					
ANR	5853399	Callee	ASSIGN_POINT		5853210	0					
ANR	5853400	Identifier	ASSIGN_POINT		5853210	0					
ANR	5853401	ArgumentList	& points [ npoints ]		5853210	1					
ANR	5853402	Argument	& points [ npoints ]		5853210	0					
ANR	5853403	UnaryOperationExpression	& points [ npoints ]		5853210	0					
ANR	5853404	UnaryOperator	&		5853210	0					
ANR	5853405	ArrayIndexing	points [ npoints ]		5853210	1					
ANR	5853406	Identifier	points		5853210	0					
ANR	5853407	Identifier	npoints		5853210	1					
ANR	5853408	Argument	plp -> o . ce		5853210	1					
ANR	5853409	MemberAccess	plp -> o . ce		5853210	0					
ANR	5853410	PtrMemberAccess	plp -> o		5853210	0					
ANR	5853411	Identifier	plp		5853210	0					
ANR	5853412	Identifier	o		5853210	1					
ANR	5853413	Identifier	ce		5853210	1					
ANR	5853414	ExpressionStatement	++ npoints	2030:8:86353:86362	5853210	5	True				
ANR	5853415	UnaryExpression	++ npoints		5853210	0					
ANR	5853416	IncDec	++		5853210	0					
ANR	5853417	Identifier	npoints		5853210	1					
ANR	5853418	ExpressionStatement	"code = add_points ( ppath , points , npoints , true )"	2031:8:86372:86419	5853210	6	True				
ANR	5853419	AssignmentExpression	"code = add_points ( ppath , points , npoints , true )"		5853210	0		=			
ANR	5853420	Identifier	code		5853210	0					
ANR	5853421	CallExpression	"add_points ( ppath , points , npoints , true )"		5853210	1					
ANR	5853422	Callee	add_points		5853210	0					
ANR	5853423	Identifier	add_points		5853210	0					
ANR	5853424	ArgumentList	ppath		5853210	1					
ANR	5853425	Argument	ppath		5853210	0					
ANR	5853426	Identifier	ppath		5853210	0					
ANR	5853427	Argument	points		5853210	1					
ANR	5853428	Identifier	points		5853210	0					
ANR	5853429	Argument	npoints		5853210	2					
ANR	5853430	Identifier	npoints		5853210	0					
ANR	5853431	Argument	true		5853210	3					
ANR	5853432	Identifier	true		5853210	0					
ANR	5853433	IfStatement	if ( code < 0 )		5853210	7					
ANR	5853434	Condition	code < 0	2032:12:86433:86440	5853210	0	True				
ANR	5853435	RelationalExpression	code < 0		5853210	0		<			
ANR	5853436	Identifier	code		5853210	0					
ANR	5853437	PrimaryExpression	0		5853210	1					
ANR	5853438	ReturnStatement	return code ;	2033:12:86455:86466	5853210	1	True				
ANR	5853439	Identifier	code		5853210	0					
ANR	5853440	ReturnStatement	return gx_path_close_subpath ( ppath ) ;	2034:8:86476:86511	5853210	8	True				
ANR	5853441	CallExpression	gx_path_close_subpath ( ppath )		5853210	0					
ANR	5853442	Callee	gx_path_close_subpath		5853210	0					
ANR	5853443	Identifier	gx_path_close_subpath		5853210	0					
ANR	5853444	ArgumentList	ppath		5853210	1					
ANR	5853445	Argument	ppath		5853210	0					
ANR	5853446	Identifier	ppath		5853210	0					
ANR	5853447	ReturnType	static int		5853210	1					
ANR	5853448	Identifier	stroke_add_initial_cap_compat		5853210	2					
ANR	5853449	ParameterList	"gx_path * ppath , pl_ptr plp , bool adlust_longitude , const gx_device_color * pdevc , gx_device * dev , const gs_gstate * pgs"		5853210	3					
ANR	5853450	Parameter	gx_path * ppath	1998:30:85194:85208	5853210	0	True				
ANR	5853451	ParameterType	gx_path *		5853210	0					
ANR	5853452	Identifier	ppath		5853210	1					
ANR	5853453	Parameter	pl_ptr plp	1998:47:85211:85220	5853210	1	True				
ANR	5853454	ParameterType	pl_ptr		5853210	0					
ANR	5853455	Identifier	plp		5853210	1					
ANR	5853456	Parameter	bool adlust_longitude	1998:59:85223:85243	5853210	2	True				
ANR	5853457	ParameterType	bool		5853210	0					
ANR	5853458	Identifier	adlust_longitude		5853210	1					
ANR	5853459	Parameter	const gx_device_color * pdevc	1999:11:85257:85285	5853210	3	True				
ANR	5853460	ParameterType	const gx_device_color *		5853210	0					
ANR	5853461	Identifier	pdevc		5853210	1					
ANR	5853462	Parameter	gx_device * dev	1999:42:85288:85302	5853210	4	True				
ANR	5853463	ParameterType	gx_device *		5853210	0					
ANR	5853464	Identifier	dev		5853210	1					
ANR	5853465	Parameter	const gs_gstate * pgs	2000:11:85316:85336	5853210	5	True				
ANR	5853466	ParameterType	const gs_gstate *		5853210	0					
ANR	5853467	Identifier	pgs		5853210	1					
ANR	5853468	CFGEntryNode	ENTRY		5853210		True				
ANR	5853469	CFGExitNode	EXIT		5853210		True				
ANR	5853470	Symbol	code		5853210						
ANR	5853471	Symbol	cap_points		5853210						
ANR	5853472	Symbol	* pgs_lp		5853210						
ANR	5853473	Symbol	pdevc		5853210						
ANR	5853474	Symbol	npoints		5853210						
ANR	5853475	Symbol	plp -> o . co		5853210						
ANR	5853476	Symbol	ppath		5853210						
ANR	5853477	Symbol	plp -> o . co . y		5853210						
ANR	5853478	Symbol	plp -> o . co . x		5853210						
ANR	5853479	Symbol	gx_path_close_subpath		5853210						
ANR	5853480	Symbol	points		5853210						
ANR	5853481	Symbol	plp -> o . ce		5853210						
ANR	5853482	Symbol	dev		5853210						
ANR	5853483	Symbol	gs_currentlineparams_inline		5853210						
ANR	5853484	Symbol	add_round_cap		5853210						
ANR	5853485	Symbol	pgs		5853210						
ANR	5853486	Symbol	* plp		5853210						
ANR	5853487	Symbol	gs_cap_round		5853210						
ANR	5853488	Symbol	add_points		5853210						
ANR	5853489	Symbol	plp -> thin		5853210						
ANR	5853490	Symbol	gs_cap_butt		5853210						
ANR	5853491	Symbol	gx_path_add_point		5853210						
ANR	5853492	Symbol	adlust_longitude		5853210						
ANR	5853493	Symbol	pgs_lp -> start_cap		5853210						
ANR	5853494	Symbol	plp		5853210						
ANR	5853495	Symbol	& plp -> o		5853210						
ANR	5853496	Symbol	plp -> o		5853210						
ANR	5853497	Symbol	pgs_lp		5853210						
ANR	5853498	Symbol	true		5853210						
ANR	5853499	Function	add_points	2039:0:86570:86981							
ANR	5853500	FunctionDef	"add_points (gx_path * ppath , const gs_fixed_point * points , int npoints , bool moveto_first)"		5853499	0					
ANR	5853501	CompoundStatement		2042:0:86683:86981	5853499	0					
ANR	5853502	IdentifierDeclStatement	int code ;	2043:4:86689:86697	5853499	0	True				
ANR	5853503	IdentifierDecl	code		5853499	0					
ANR	5853504	IdentifierDeclType	int		5853499	0					
ANR	5853505	Identifier	code		5853499	1					
ANR	5853506	IfStatement	if ( moveto_first )		5853499	1					
ANR	5853507	Condition	moveto_first	2045:8:86708:86719	5853499	0	True				
ANR	5853508	Identifier	moveto_first		5853499	0					
ANR	5853509	CompoundStatement		4:22:38:38	5853499	1					
ANR	5853510	ExpressionStatement	"code = gx_path_add_point ( ppath , points [ 0 ] . x , points [ 0 ] . y )"	2046:8:86732:86789	5853499	0	True				
ANR	5853511	AssignmentExpression	"code = gx_path_add_point ( ppath , points [ 0 ] . x , points [ 0 ] . y )"		5853499	0		=			
ANR	5853512	Identifier	code		5853499	0					
ANR	5853513	CallExpression	"gx_path_add_point ( ppath , points [ 0 ] . x , points [ 0 ] . y )"		5853499	1					
ANR	5853514	Callee	gx_path_add_point		5853499	0					
ANR	5853515	Identifier	gx_path_add_point		5853499	0					
ANR	5853516	ArgumentList	ppath		5853499	1					
ANR	5853517	Argument	ppath		5853499	0					
ANR	5853518	Identifier	ppath		5853499	0					
ANR	5853519	Argument	points [ 0 ] . x		5853499	1					
ANR	5853520	MemberAccess	points [ 0 ] . x		5853499	0					
ANR	5853521	ArrayIndexing	points [ 0 ]		5853499	0					
ANR	5853522	Identifier	points		5853499	0					
ANR	5853523	PrimaryExpression	0		5853499	1					
ANR	5853524	Identifier	x		5853499	1					
ANR	5853525	Argument	points [ 0 ] . y		5853499	2					
ANR	5853526	MemberAccess	points [ 0 ] . y		5853499	0					
ANR	5853527	ArrayIndexing	points [ 0 ]		5853499	0					
ANR	5853528	Identifier	points		5853499	0					
ANR	5853529	PrimaryExpression	0		5853499	1					
ANR	5853530	Identifier	y		5853499	1					
ANR	5853531	IfStatement	if ( code < 0 )		5853499	1					
ANR	5853532	Condition	code < 0	2047:12:86803:86810	5853499	0	True				
ANR	5853533	RelationalExpression	code < 0		5853499	0		<			
ANR	5853534	Identifier	code		5853499	0					
ANR	5853535	PrimaryExpression	0		5853499	1					
ANR	5853536	ReturnStatement	return code ;	2048:12:86825:86836	5853499	1	True				
ANR	5853537	Identifier	code		5853499	0					
ANR	5853538	ReturnStatement	"return gx_path_add_lines ( ppath , points + 1 , npoints - 1 ) ;"	2049:8:86846:86902	5853499	2	True				
ANR	5853539	CallExpression	"gx_path_add_lines ( ppath , points + 1 , npoints - 1 )"		5853499	0					
ANR	5853540	Callee	gx_path_add_lines		5853499	0					
ANR	5853541	Identifier	gx_path_add_lines		5853499	0					
ANR	5853542	ArgumentList	ppath		5853499	1					
ANR	5853543	Argument	ppath		5853499	0					
ANR	5853544	Identifier	ppath		5853499	0					
ANR	5853545	Argument	points + 1		5853499	1					
ANR	5853546	AdditiveExpression	points + 1		5853499	0		+			
ANR	5853547	Identifier	points		5853499	0					
ANR	5853548	PrimaryExpression	1		5853499	1					
ANR	5853549	Argument	npoints - 1		5853499	2					
ANR	5853550	AdditiveExpression	npoints - 1		5853499	0		-			
ANR	5853551	Identifier	npoints		5853499	0					
ANR	5853552	PrimaryExpression	1		5853499	1					
ANR	5853553	ElseStatement	else		5853499	0					
ANR	5853554	CompoundStatement		9:11:231:231	5853499	0					
ANR	5853555	ReturnStatement	"return gx_path_add_lines ( ppath , points , npoints ) ;"	2051:8:86925:86973	5853499	0	True				
ANR	5853556	CallExpression	"gx_path_add_lines ( ppath , points , npoints )"		5853499	0					
ANR	5853557	Callee	gx_path_add_lines		5853499	0					
ANR	5853558	Identifier	gx_path_add_lines		5853499	0					
ANR	5853559	ArgumentList	ppath		5853499	1					
ANR	5853560	Argument	ppath		5853499	0					
ANR	5853561	Identifier	ppath		5853499	0					
ANR	5853562	Argument	points		5853499	1					
ANR	5853563	Identifier	points		5853499	0					
ANR	5853564	Argument	npoints		5853499	2					
ANR	5853565	Identifier	npoints		5853499	0					
ANR	5853566	ReturnType	static int		5853499	1					
ANR	5853567	Identifier	add_points		5853499	2					
ANR	5853568	ParameterList	"gx_path * ppath , const gs_fixed_point * points , int npoints , bool moveto_first"		5853499	3					
ANR	5853569	Parameter	gx_path * ppath	2040:11:86592:86606	5853499	0	True				
ANR	5853570	ParameterType	gx_path *		5853499	0					
ANR	5853571	Identifier	ppath		5853499	1					
ANR	5853572	Parameter	const gs_fixed_point * points	2040:28:86609:86637	5853499	1	True				
ANR	5853573	ParameterType	const gs_fixed_point *		5853499	0					
ANR	5853574	Identifier	points		5853499	1					
ANR	5853575	Parameter	int npoints	2040:59:86640:86650	5853499	2	True				
ANR	5853576	ParameterType	int		5853499	0					
ANR	5853577	Identifier	npoints		5853499	1					
ANR	5853578	Parameter	bool moveto_first	2041:11:86664:86680	5853499	3	True				
ANR	5853579	ParameterType	bool		5853499	0					
ANR	5853580	Identifier	moveto_first		5853499	1					
ANR	5853581	CFGEntryNode	ENTRY		5853499		True				
ANR	5853582	CFGExitNode	EXIT		5853499		True				
ANR	5853583	Symbol	moveto_first		5853499						
ANR	5853584	Symbol	code		5853499						
ANR	5853585	Symbol	npoints		5853499						
ANR	5853586	Symbol	gx_path_add_lines		5853499						
ANR	5853587	Symbol	ppath		5853499						
ANR	5853588	Symbol	* points		5853499						
ANR	5853589	Symbol	points [ 0 ] . y		5853499						
ANR	5853590	Symbol	points [ 0 ] . x		5853499						
ANR	5853591	Symbol	gx_path_add_point		5853499						
ANR	5853592	Symbol	points		5853499						
ANR	5853593	Function	check_miter	2057:0:87042:92537							
ANR	5853594	FunctionDef	"check_miter (const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , const gs_matrix * pmat , p_ptr outp , p_ptr np , p_ptr mpt , bool ccw0)"		5853593	0					
ANR	5853595	CompoundStatement		2061:0:87213:92537	5853593	0					
ANR	5853596	IdentifierDeclStatement	float check = pgs_lp -> miter_check ;	2076:4:87775:87808	5853593	0	True				
ANR	5853597	IdentifierDecl	check = pgs_lp -> miter_check		5853593	0					
ANR	5853598	IdentifierDeclType	float		5853593	0					
ANR	5853599	Identifier	check		5853593	1					
ANR	5853600	AssignmentExpression	check = pgs_lp -> miter_check		5853593	2		=			
ANR	5853601	Identifier	check		5853593	0					
ANR	5853602	PtrMemberAccess	pgs_lp -> miter_check		5853593	1					
ANR	5853603	Identifier	pgs_lp		5853593	0					
ANR	5853604	Identifier	miter_check		5853593	1					
ANR	5853605	IdentifierDeclStatement	"double u1 = plp -> vector . y , v1 = plp -> vector . x ;"	2077:4:87814:87859	5853593	1	True				
ANR	5853606	IdentifierDecl	u1 = plp -> vector . y		5853593	0					
ANR	5853607	IdentifierDeclType	double		5853593	0					
ANR	5853608	Identifier	u1		5853593	1					
ANR	5853609	AssignmentExpression	u1 = plp -> vector . y		5853593	2		=			
ANR	5853610	Identifier	u1		5853593	0					
ANR	5853611	MemberAccess	plp -> vector . y		5853593	1					
ANR	5853612	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5853613	Identifier	plp		5853593	0					
ANR	5853614	Identifier	vector		5853593	1					
ANR	5853615	Identifier	y		5853593	1					
ANR	5853616	IdentifierDecl	v1 = plp -> vector . x		5853593	1					
ANR	5853617	IdentifierDeclType	double		5853593	0					
ANR	5853618	Identifier	v1		5853593	1					
ANR	5853619	AssignmentExpression	v1 = plp -> vector . x		5853593	2		=			
ANR	5853620	Identifier	v1		5853593	0					
ANR	5853621	MemberAccess	plp -> vector . x		5853593	1					
ANR	5853622	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5853623	Identifier	plp		5853593	0					
ANR	5853624	Identifier	vector		5853593	1					
ANR	5853625	Identifier	x		5853593	1					
ANR	5853626	IdentifierDeclStatement	"double u2 = - nplp -> vector . y , v2 = - nplp -> vector . x ;"	2078:4:87865:87914	5853593	2	True				
ANR	5853627	IdentifierDecl	u2 = - nplp -> vector . y		5853593	0					
ANR	5853628	IdentifierDeclType	double		5853593	0					
ANR	5853629	Identifier	u2		5853593	1					
ANR	5853630	AssignmentExpression	u2 = - nplp -> vector . y		5853593	2		=			
ANR	5853631	Identifier	u2		5853593	0					
ANR	5853632	UnaryOperationExpression	- nplp -> vector . y		5853593	1					
ANR	5853633	UnaryOperator	-		5853593	0					
ANR	5853634	MemberAccess	nplp -> vector . y		5853593	1					
ANR	5853635	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5853636	Identifier	nplp		5853593	0					
ANR	5853637	Identifier	vector		5853593	1					
ANR	5853638	Identifier	y		5853593	1					
ANR	5853639	IdentifierDecl	v2 = - nplp -> vector . x		5853593	1					
ANR	5853640	IdentifierDeclType	double		5853593	0					
ANR	5853641	Identifier	v2		5853593	1					
ANR	5853642	AssignmentExpression	v2 = - nplp -> vector . x		5853593	2		=			
ANR	5853643	Identifier	v2		5853593	0					
ANR	5853644	UnaryOperationExpression	- nplp -> vector . x		5853593	1					
ANR	5853645	UnaryOperator	-		5853593	0					
ANR	5853646	MemberAccess	nplp -> vector . x		5853593	1					
ANR	5853647	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5853648	Identifier	nplp		5853593	0					
ANR	5853649	Identifier	vector		5853593	1					
ANR	5853650	Identifier	x		5853593	1					
ANR	5853651	IdentifierDeclStatement	"double num , denom ;"	2079:4:87920:87937	5853593	3	True				
ANR	5853652	IdentifierDecl	num		5853593	0					
ANR	5853653	IdentifierDeclType	double		5853593	0					
ANR	5853654	Identifier	num		5853593	1					
ANR	5853655	IdentifierDecl	denom		5853593	1					
ANR	5853656	IdentifierDeclType	double		5853593	0					
ANR	5853657	Identifier	denom		5853593	1					
ANR	5853658	IdentifierDeclStatement	int code ;	2080:4:87943:87951	5853593	4	True				
ANR	5853659	IdentifierDecl	code		5853593	0					
ANR	5853660	IdentifierDeclType	int		5853593	0					
ANR	5853661	Identifier	code		5853593	1					
ANR	5853662	IfStatement	if ( pmat )		5853593	5					
ANR	5853663	Condition	pmat	2082:8:87962:87965	5853593	0	True				
ANR	5853664	Identifier	pmat		5853593	0					
ANR	5853665	CompoundStatement		23:8:764:775	5853593	1					
ANR	5853666	IdentifierDeclStatement	gs_point pt ;	2083:8:87978:87989	5853593	0	True				
ANR	5853667	IdentifierDecl	pt		5853593	0					
ANR	5853668	IdentifierDeclType	gs_point		5853593	0					
ANR	5853669	Identifier	pt		5853593	1					
ANR	5853670	ExpressionStatement	"code = gs_distance_transform_inverse ( v1 , u1 , pmat , & pt )"	2085:8:88000:88055	5853593	1	True				
ANR	5853671	AssignmentExpression	"code = gs_distance_transform_inverse ( v1 , u1 , pmat , & pt )"		5853593	0		=			
ANR	5853672	Identifier	code		5853593	0					
ANR	5853673	CallExpression	"gs_distance_transform_inverse ( v1 , u1 , pmat , & pt )"		5853593	1					
ANR	5853674	Callee	gs_distance_transform_inverse		5853593	0					
ANR	5853675	Identifier	gs_distance_transform_inverse		5853593	0					
ANR	5853676	ArgumentList	v1		5853593	1					
ANR	5853677	Argument	v1		5853593	0					
ANR	5853678	Identifier	v1		5853593	0					
ANR	5853679	Argument	u1		5853593	1					
ANR	5853680	Identifier	u1		5853593	0					
ANR	5853681	Argument	pmat		5853593	2					
ANR	5853682	Identifier	pmat		5853593	0					
ANR	5853683	Argument	& pt		5853593	3					
ANR	5853684	UnaryOperationExpression	& pt		5853593	0					
ANR	5853685	UnaryOperator	&		5853593	0					
ANR	5853686	Identifier	pt		5853593	1					
ANR	5853687	IfStatement	if ( code < 0 )		5853593	2					
ANR	5853688	Condition	code < 0	2086:12:88069:88076	5853593	0	True				
ANR	5853689	RelationalExpression	code < 0		5853593	0		<			
ANR	5853690	Identifier	code		5853593	0					
ANR	5853691	PrimaryExpression	0		5853593	1					
ANR	5853692	ReturnStatement	return code ;	2087:8:88087:88098	5853593	1	True				
ANR	5853693	Identifier	code		5853593	0					
ANR	5853694	ExpressionStatement	"v1 = pt . x , u1 = pt . y"	2088:8:88108:88128	5853593	3	True				
ANR	5853695	Expression	"v1 = pt . x , u1 = pt . y"		5853593	0					
ANR	5853696	AssignmentExpression	v1 = pt . x		5853593	0		=			
ANR	5853697	Identifier	v1		5853593	0					
ANR	5853698	MemberAccess	pt . x		5853593	1					
ANR	5853699	Identifier	pt		5853593	0					
ANR	5853700	Identifier	x		5853593	1					
ANR	5853701	AssignmentExpression	u1 = pt . y		5853593	1		=			
ANR	5853702	Identifier	u1		5853593	0					
ANR	5853703	MemberAccess	pt . y		5853593	1					
ANR	5853704	Identifier	pt		5853593	0					
ANR	5853705	Identifier	y		5853593	1					
ANR	5853706	ExpressionStatement	"code = gs_distance_transform_inverse ( v2 , u2 , pmat , & pt )"	2089:8:88138:88193	5853593	4	True				
ANR	5853707	AssignmentExpression	"code = gs_distance_transform_inverse ( v2 , u2 , pmat , & pt )"		5853593	0		=			
ANR	5853708	Identifier	code		5853593	0					
ANR	5853709	CallExpression	"gs_distance_transform_inverse ( v2 , u2 , pmat , & pt )"		5853593	1					
ANR	5853710	Callee	gs_distance_transform_inverse		5853593	0					
ANR	5853711	Identifier	gs_distance_transform_inverse		5853593	0					
ANR	5853712	ArgumentList	v2		5853593	1					
ANR	5853713	Argument	v2		5853593	0					
ANR	5853714	Identifier	v2		5853593	0					
ANR	5853715	Argument	u2		5853593	1					
ANR	5853716	Identifier	u2		5853593	0					
ANR	5853717	Argument	pmat		5853593	2					
ANR	5853718	Identifier	pmat		5853593	0					
ANR	5853719	Argument	& pt		5853593	3					
ANR	5853720	UnaryOperationExpression	& pt		5853593	0					
ANR	5853721	UnaryOperator	&		5853593	0					
ANR	5853722	Identifier	pt		5853593	1					
ANR	5853723	IfStatement	if ( code < 0 )		5853593	5					
ANR	5853724	Condition	code < 0	2090:12:88207:88214	5853593	0	True				
ANR	5853725	RelationalExpression	code < 0		5853593	0		<			
ANR	5853726	Identifier	code		5853593	0					
ANR	5853727	PrimaryExpression	0		5853593	1					
ANR	5853728	ReturnStatement	return code ;	2091:12:88229:88240	5853593	1	True				
ANR	5853729	Identifier	code		5853593	0					
ANR	5853730	ExpressionStatement	"v2 = pt . x , u2 = pt . y"	2092:8:88250:88270	5853593	6	True				
ANR	5853731	Expression	"v2 = pt . x , u2 = pt . y"		5853593	0					
ANR	5853732	AssignmentExpression	v2 = pt . x		5853593	0		=			
ANR	5853733	Identifier	v2		5853593	0					
ANR	5853734	MemberAccess	pt . x		5853593	1					
ANR	5853735	Identifier	pt		5853593	0					
ANR	5853736	Identifier	x		5853593	1					
ANR	5853737	AssignmentExpression	u2 = pt . y		5853593	1		=			
ANR	5853738	Identifier	u2		5853593	0					
ANR	5853739	MemberAccess	pt . y		5853593	1					
ANR	5853740	Identifier	pt		5853593	0					
ANR	5853741	Identifier	y		5853593	1					
ANR	5853742	ExpressionStatement	ccw0 = v1 * u2 < v2 * u1	2102:8:88699:88723	5853593	7	True				
ANR	5853743	AssignmentExpression	ccw0 = v1 * u2 < v2 * u1		5853593	0		=			
ANR	5853744	Identifier	ccw0		5853593	0					
ANR	5853745	RelationalExpression	v1 * u2 < v2 * u1		5853593	1		<			
ANR	5853746	MultiplicativeExpression	v1 * u2		5853593	0		*			
ANR	5853747	Identifier	v1		5853593	0					
ANR	5853748	Identifier	u2		5853593	1					
ANR	5853749	MultiplicativeExpression	v2 * u1		5853593	1		*			
ANR	5853750	Identifier	v2		5853593	0					
ANR	5853751	Identifier	u1		5853593	1					
ANR	5853752	CompoundStatement		45:12:1579:1639	5853593	8					
ANR	5853753	IdentifierDeclStatement	"double a1 = atan2 ( u1 , v1 ) , a2 = atan2 ( u2 , v2 ) , dif = a1 - a2 ;"	2105:12:88793:88853	5853593	0	True				
ANR	5853754	IdentifierDecl	"a1 = atan2 ( u1 , v1 )"		5853593	0					
ANR	5853755	IdentifierDeclType	double		5853593	0					
ANR	5853756	Identifier	a1		5853593	1					
ANR	5853757	AssignmentExpression	"a1 = atan2 ( u1 , v1 )"		5853593	2		=			
ANR	5853758	Identifier	a1		5853593	0					
ANR	5853759	CallExpression	"atan2 ( u1 , v1 )"		5853593	1					
ANR	5853760	Callee	atan2		5853593	0					
ANR	5853761	Identifier	atan2		5853593	0					
ANR	5853762	ArgumentList	u1		5853593	1					
ANR	5853763	Argument	u1		5853593	0					
ANR	5853764	Identifier	u1		5853593	0					
ANR	5853765	Argument	v1		5853593	1					
ANR	5853766	Identifier	v1		5853593	0					
ANR	5853767	IdentifierDecl	"a2 = atan2 ( u2 , v2 )"		5853593	1					
ANR	5853768	IdentifierDeclType	double		5853593	0					
ANR	5853769	Identifier	a2		5853593	1					
ANR	5853770	AssignmentExpression	"a2 = atan2 ( u2 , v2 )"		5853593	2		=			
ANR	5853771	Identifier	a2		5853593	0					
ANR	5853772	CallExpression	"atan2 ( u2 , v2 )"		5853593	1					
ANR	5853773	Callee	atan2		5853593	0					
ANR	5853774	Identifier	atan2		5853593	0					
ANR	5853775	ArgumentList	u2		5853593	1					
ANR	5853776	Argument	u2		5853593	0					
ANR	5853777	Identifier	u2		5853593	0					
ANR	5853778	Argument	v2		5853593	1					
ANR	5853779	Identifier	v2		5853593	0					
ANR	5853780	IdentifierDecl	dif = a1 - a2		5853593	2					
ANR	5853781	IdentifierDeclType	double		5853593	0					
ANR	5853782	Identifier	dif		5853593	1					
ANR	5853783	AssignmentExpression	dif = a1 - a2		5853593	2		=			
ANR	5853784	Identifier	dif		5853593	0					
ANR	5853785	AdditiveExpression	a1 - a2		5853593	1		-			
ANR	5853786	Identifier	a1		5853593	0					
ANR	5853787	Identifier	a2		5853593	1					
ANR	5853788	IfStatement	if ( dif < 0 )		5853593	1					
ANR	5853789	Condition	dif < 0	2107:16:88872:88878	5853593	0	True				
ANR	5853790	RelationalExpression	dif < 0		5853593	0		<			
ANR	5853791	Identifier	dif		5853593	0					
ANR	5853792	PrimaryExpression	0		5853593	1					
ANR	5853793	ExpressionStatement	dif += 2 * M_PI	2108:16:88897:88912	5853593	1	True				
ANR	5853794	AssignmentExpression	dif += 2 * M_PI		5853593	0		+=			
ANR	5853795	Identifier	dif		5853593	0					
ANR	5853796	MultiplicativeExpression	2 * M_PI		5853593	1		*			
ANR	5853797	PrimaryExpression	2		5853593	0					
ANR	5853798	Identifier	M_PI		5853593	1					
ANR	5853799	ElseStatement	else		5853593	0					
ANR	5853800	IfStatement	if ( dif >= 2 * M_PI )		5853593	0					
ANR	5853801	Condition	dif >= 2 * M_PI	2109:21:88935:88949	5853593	0	True				
ANR	5853802	RelationalExpression	dif >= 2 * M_PI		5853593	0		>=			
ANR	5853803	Identifier	dif		5853593	0					
ANR	5853804	MultiplicativeExpression	2 * M_PI		5853593	1		*			
ANR	5853805	PrimaryExpression	2		5853593	0					
ANR	5853806	Identifier	M_PI		5853593	1					
ANR	5853807	ExpressionStatement	dif -= 2 * M_PI	2110:16:88968:88983	5853593	1	True				
ANR	5853808	AssignmentExpression	dif -= 2 * M_PI		5853593	0		-=			
ANR	5853809	Identifier	dif		5853593	0					
ANR	5853810	MultiplicativeExpression	2 * M_PI		5853593	1		*			
ANR	5853811	PrimaryExpression	2		5853593	0					
ANR	5853812	Identifier	M_PI		5853593	1					
ANR	5853813	IfStatement	if ( dif != 0 && ( dif < M_PI ) != ccw0 )		5853593	2					
ANR	5853814	Condition	dif != 0 && ( dif < M_PI ) != ccw0	2111:16:89001:89032	5853593	0	True				
ANR	5853815	AndExpression	dif != 0 && ( dif < M_PI ) != ccw0		5853593	0		&&			
ANR	5853816	EqualityExpression	dif != 0		5853593	0		!=			
ANR	5853817	Identifier	dif		5853593	0					
ANR	5853818	PrimaryExpression	0		5853593	1					
ANR	5853819	EqualityExpression	( dif < M_PI ) != ccw0		5853593	1		!=			
ANR	5853820	RelationalExpression	dif < M_PI		5853593	0		<			
ANR	5853821	Identifier	dif		5853593	0					
ANR	5853822	Identifier	M_PI		5853593	1					
ANR	5853823	Identifier	ccw0		5853593	1					
ANR	5853824	ExpressionStatement	"lprintf8 ( ""ccw wrong: tan(a1=%g)=%g/%g, tan(a2=%g)=%g,%g, dif=%g, ccw0=%d\\n"" , a1 , u1 , v1 , a2 , u2 , v2 , dif , ccw0 )"	2112:16:89051:89187	5853593	1	True				
ANR	5853825	CallExpression	"lprintf8 ( ""ccw wrong: tan(a1=%g)=%g/%g, tan(a2=%g)=%g,%g, dif=%g, ccw0=%d\\n"" , a1 , u1 , v1 , a2 , u2 , v2 , dif , ccw0 )"		5853593	0					
ANR	5853826	Callee	lprintf8		5853593	0					
ANR	5853827	Identifier	lprintf8		5853593	0					
ANR	5853828	ArgumentList	"""ccw wrong: tan(a1=%g)=%g/%g, tan(a2=%g)=%g,%g, dif=%g, ccw0=%d\\n"""		5853593	1					
ANR	5853829	Argument	"""ccw wrong: tan(a1=%g)=%g/%g, tan(a2=%g)=%g,%g, dif=%g, ccw0=%d\\n"""		5853593	0					
ANR	5853830	PrimaryExpression	"""ccw wrong: tan(a1=%g)=%g/%g, tan(a2=%g)=%g,%g, dif=%g, ccw0=%d\\n"""		5853593	0					
ANR	5853831	Argument	a1		5853593	1					
ANR	5853832	Identifier	a1		5853593	0					
ANR	5853833	Argument	u1		5853593	2					
ANR	5853834	Identifier	u1		5853593	0					
ANR	5853835	Argument	v1		5853593	3					
ANR	5853836	Identifier	v1		5853593	0					
ANR	5853837	Argument	a2		5853593	4					
ANR	5853838	Identifier	a2		5853593	0					
ANR	5853839	Argument	u2		5853593	5					
ANR	5853840	Identifier	u2		5853593	0					
ANR	5853841	Argument	v2		5853593	6					
ANR	5853842	Identifier	v2		5853593	0					
ANR	5853843	Argument	dif		5853593	7					
ANR	5853844	Identifier	dif		5853593	0					
ANR	5853845	Argument	ccw0		5853593	8					
ANR	5853846	Identifier	ccw0		5853593	0					
ANR	5853847	ExpressionStatement	num = u1 * v2 - u2 * v1	2117:4:89216:89239	5853593	6	True				
ANR	5853848	AssignmentExpression	num = u1 * v2 - u2 * v1		5853593	0		=			
ANR	5853849	Identifier	num		5853593	0					
ANR	5853850	AdditiveExpression	u1 * v2 - u2 * v1		5853593	1		-			
ANR	5853851	MultiplicativeExpression	u1 * v2		5853593	0		*			
ANR	5853852	Identifier	u1		5853593	0					
ANR	5853853	Identifier	v2		5853593	1					
ANR	5853854	MultiplicativeExpression	u2 * v1		5853593	1		*			
ANR	5853855	Identifier	u2		5853593	0					
ANR	5853856	Identifier	v1		5853593	1					
ANR	5853857	ExpressionStatement	denom = u1 * u2 + v1 * v2	2118:4:89245:89270	5853593	7	True				
ANR	5853858	AssignmentExpression	denom = u1 * u2 + v1 * v2		5853593	0		=			
ANR	5853859	Identifier	denom		5853593	0					
ANR	5853860	AdditiveExpression	u1 * u2 + v1 * v2		5853593	1		+			
ANR	5853861	MultiplicativeExpression	u1 * u2		5853593	0		*			
ANR	5853862	Identifier	u1		5853593	0					
ANR	5853863	Identifier	u2		5853593	1					
ANR	5853864	MultiplicativeExpression	v1 * v2		5853593	1		*			
ANR	5853865	Identifier	v1		5853593	0					
ANR	5853866	Identifier	v2		5853593	1					
ANR	5853867	IfStatement	if ( ! ccw0 )		5853593	8					
ANR	5853868	Condition	! ccw0	2124:8:89456:89460	5853593	0	True				
ANR	5853869	UnaryOperationExpression	! ccw0		5853593	0					
ANR	5853870	UnaryOperator	!		5853593	0					
ANR	5853871	Identifier	ccw0		5853593	1					
ANR	5853872	ExpressionStatement	num = - num	2125:8:89519:89529	5853593	1	True				
ANR	5853873	AssignmentExpression	num = - num		5853593	0		=			
ANR	5853874	Identifier	num		5853593	0					
ANR	5853875	UnaryOperationExpression	- num		5853593	1					
ANR	5853876	UnaryOperator	-		5853593	0					
ANR	5853877	Identifier	num		5853593	1					
ANR	5853878	IfStatement	if ( gs_debug_c ( 'O' ) )		5853593	9					
ANR	5853879	Condition	gs_debug_c ( 'O' )	2127:8:89585:89599	5853593	0	True				
ANR	5853880	CallExpression	gs_debug_c ( 'O' )		5853593	0					
ANR	5853881	Callee	gs_debug_c		5853593	0					
ANR	5853882	Identifier	gs_debug_c		5853593	0					
ANR	5853883	ArgumentList	'O'		5853593	1					
ANR	5853884	Argument	'O'		5853593	0					
ANR	5853885	PrimaryExpression	'O'		5853593	0					
ANR	5853886	CompoundStatement		67:25:2388:2388	5853593	1					
ANR	5853887	ExpressionStatement	"dlprintf4 ( ""[o]Miter check: u1/v1=%f/%f, u2/v2=%f/%f,\\n"" , u1 , v1 , u2 , v2 )"	2128:8:89612:89702	5853593	0	True				
ANR	5853888	CallExpression	"dlprintf4 ( ""[o]Miter check: u1/v1=%f/%f, u2/v2=%f/%f,\\n"" , u1 , v1 , u2 , v2 )"		5853593	0					
ANR	5853889	Callee	dlprintf4		5853593	0					
ANR	5853890	Identifier	dlprintf4		5853593	0					
ANR	5853891	ArgumentList	"""[o]Miter check: u1/v1=%f/%f, u2/v2=%f/%f,\\n"""		5853593	1					
ANR	5853892	Argument	"""[o]Miter check: u1/v1=%f/%f, u2/v2=%f/%f,\\n"""		5853593	0					
ANR	5853893	PrimaryExpression	"""[o]Miter check: u1/v1=%f/%f, u2/v2=%f/%f,\\n"""		5853593	0					
ANR	5853894	Argument	u1		5853593	1					
ANR	5853895	Identifier	u1		5853593	0					
ANR	5853896	Argument	v1		5853593	2					
ANR	5853897	Identifier	v1		5853593	0					
ANR	5853898	Argument	u2		5853593	3					
ANR	5853899	Identifier	u2		5853593	0					
ANR	5853900	Argument	v2		5853593	4					
ANR	5853901	Identifier	v2		5853593	0					
ANR	5853902	ExpressionStatement	"dlprintf3 ( ""        num=%f, denom=%f, check=%f\\n"" , num , denom , check )"	2130:8:89712:89798	5853593	1	True				
ANR	5853903	CallExpression	"dlprintf3 ( ""        num=%f, denom=%f, check=%f\\n"" , num , denom , check )"		5853593	0					
ANR	5853904	Callee	dlprintf3		5853593	0					
ANR	5853905	Identifier	dlprintf3		5853593	0					
ANR	5853906	ArgumentList	"""        num=%f, denom=%f, check=%f\\n"""		5853593	1					
ANR	5853907	Argument	"""        num=%f, denom=%f, check=%f\\n"""		5853593	0					
ANR	5853908	PrimaryExpression	"""        num=%f, denom=%f, check=%f\\n"""		5853593	0					
ANR	5853909	Argument	num		5853593	1					
ANR	5853910	Identifier	num		5853593	0					
ANR	5853911	Argument	denom		5853593	2					
ANR	5853912	Identifier	denom		5853593	0					
ANR	5853913	Argument	check		5853593	3					
ANR	5853914	Identifier	check		5853593	0					
ANR	5853915	IfStatement	if ( num == 0 && denom == 0 )		5853593	10					
ANR	5853916	Condition	num == 0 && denom == 0	2149:8:90530:90551	5853593	0	True				
ANR	5853917	AndExpression	num == 0 && denom == 0		5853593	0		&&			
ANR	5853918	EqualityExpression	num == 0		5853593	0		==			
ANR	5853919	Identifier	num		5853593	0					
ANR	5853920	PrimaryExpression	0		5853593	1					
ANR	5853921	EqualityExpression	denom == 0		5853593	1		==			
ANR	5853922	Identifier	denom		5853593	0					
ANR	5853923	PrimaryExpression	0		5853593	1					
ANR	5853924	ExpressionStatement	return_error ( gs_error_unregistered )	2150:8:90562:90597	5853593	1	True				
ANR	5853925	CallExpression	return_error ( gs_error_unregistered )		5853593	0					
ANR	5853926	Callee	return_error		5853593	0					
ANR	5853927	Identifier	return_error		5853593	0					
ANR	5853928	ArgumentList	gs_error_unregistered		5853593	1					
ANR	5853929	Argument	gs_error_unregistered		5853593	0					
ANR	5853930	Identifier	gs_error_unregistered		5853593	0					
ANR	5853931	IfStatement	if ( denom < 0 )		5853593	11					
ANR	5853932	Condition	denom < 0	2151:8:90630:90638	5853593	0	True				
ANR	5853933	RelationalExpression	denom < 0		5853593	0		<			
ANR	5853934	Identifier	denom		5853593	0					
ANR	5853935	PrimaryExpression	0		5853593	1					
ANR	5853936	ExpressionStatement	"num = - num , denom = - denom"	2152:8:90649:90675	5853593	1	True				
ANR	5853937	Expression	"num = - num , denom = - denom"		5853593	0					
ANR	5853938	AssignmentExpression	num = - num		5853593	0		=			
ANR	5853939	Identifier	num		5853593	0					
ANR	5853940	UnaryOperationExpression	- num		5853593	1					
ANR	5853941	UnaryOperator	-		5853593	0					
ANR	5853942	Identifier	num		5853593	1					
ANR	5853943	AssignmentExpression	denom = - denom		5853593	1		=			
ANR	5853944	Identifier	denom		5853593	0					
ANR	5853945	UnaryOperationExpression	- denom		5853593	1					
ANR	5853946	UnaryOperator	-		5853593	0					
ANR	5853947	Identifier	denom		5853593	1					
ANR	5853948	IfStatement	if ( check > 0 ? ( num < 0 || num >= denom * check ) : ( num < 0 && num >= denom * check ) )		5853593	12					
ANR	5853949	Condition	check > 0 ? ( num < 0 || num >= denom * check ) : ( num < 0 && num >= denom * check )	2154:8:90735:90831	5853593	0	True				
ANR	5853950	ConditionalExpression	check > 0 ? ( num < 0 || num >= denom * check ) : ( num < 0 && num >= denom * check )		5853593	0					
ANR	5853951	Condition	check > 0		5853593	0					
ANR	5853952	RelationalExpression	check > 0		5853593	0		>			
ANR	5853953	Identifier	check		5853593	0					
ANR	5853954	PrimaryExpression	0		5853593	1					
ANR	5853955	OrExpression	num < 0 || num >= denom * check		5853593	1		||			
ANR	5853956	RelationalExpression	num < 0		5853593	0		<			
ANR	5853957	Identifier	num		5853593	0					
ANR	5853958	PrimaryExpression	0		5853593	1					
ANR	5853959	RelationalExpression	num >= denom * check		5853593	1		>=			
ANR	5853960	Identifier	num		5853593	0					
ANR	5853961	MultiplicativeExpression	denom * check		5853593	1		*			
ANR	5853962	Identifier	denom		5853593	0					
ANR	5853963	Identifier	check		5853593	1					
ANR	5853964	AndExpression	num < 0 && num >= denom * check		5853593	2		&&			
ANR	5853965	RelationalExpression	num < 0		5853593	0		<			
ANR	5853966	Identifier	num		5853593	0					
ANR	5853967	PrimaryExpression	0		5853593	1					
ANR	5853968	RelationalExpression	num >= denom * check		5853593	1		>=			
ANR	5853969	Identifier	num		5853593	0					
ANR	5853970	MultiplicativeExpression	denom * check		5853593	1		*			
ANR	5853971	Identifier	denom		5853593	0					
ANR	5853972	Identifier	check		5853593	1					
ANR	5853973	CompoundStatement		99:8:3677:3704	5853593	1					
ANR	5853974	IdentifierDeclStatement	"gs_fixed_point dirn1 , dirn2 ;"	2159:8:90891:90918	5853593	0	True				
ANR	5853975	IdentifierDecl	dirn1		5853593	0					
ANR	5853976	IdentifierDeclType	gs_fixed_point		5853593	0					
ANR	5853977	Identifier	dirn1		5853593	1					
ANR	5853978	IdentifierDecl	dirn2		5853593	1					
ANR	5853979	IdentifierDeclType	gs_fixed_point		5853593	0					
ANR	5853980	Identifier	dirn2		5853593	1					
ANR	5853981	ExpressionStatement	dirn1 . x = plp -> e . cdelta . x	2161:8:90929:90954	5853593	1	True				
ANR	5853982	AssignmentExpression	dirn1 . x = plp -> e . cdelta . x		5853593	0		=			
ANR	5853983	MemberAccess	dirn1 . x		5853593	0					
ANR	5853984	Identifier	dirn1		5853593	0					
ANR	5853985	Identifier	x		5853593	1					
ANR	5853986	MemberAccess	plp -> e . cdelta . x		5853593	1					
ANR	5853987	MemberAccess	plp -> e . cdelta		5853593	0					
ANR	5853988	PtrMemberAccess	plp -> e		5853593	0					
ANR	5853989	Identifier	plp		5853593	0					
ANR	5853990	Identifier	e		5853593	1					
ANR	5853991	Identifier	cdelta		5853593	1					
ANR	5853992	Identifier	x		5853593	1					
ANR	5853993	ExpressionStatement	dirn1 . y = plp -> e . cdelta . y	2162:8:90964:90989	5853593	2	True				
ANR	5853994	AssignmentExpression	dirn1 . y = plp -> e . cdelta . y		5853593	0		=			
ANR	5853995	MemberAccess	dirn1 . y		5853593	0					
ANR	5853996	Identifier	dirn1		5853593	0					
ANR	5853997	Identifier	y		5853593	1					
ANR	5853998	MemberAccess	plp -> e . cdelta . y		5853593	1					
ANR	5853999	MemberAccess	plp -> e . cdelta		5853593	0					
ANR	5854000	PtrMemberAccess	plp -> e		5853593	0					
ANR	5854001	Identifier	plp		5853593	0					
ANR	5854002	Identifier	e		5853593	1					
ANR	5854003	Identifier	cdelta		5853593	1					
ANR	5854004	Identifier	y		5853593	1					
ANR	5854005	IfStatement	if ( ( abs ( dirn1 . x ) + abs ( dirn1 . y ) < 16 ) && ( ( plp -> vector . x != 0 ) || ( plp -> vector . y != 0 ) ) )		5853593	3					
ANR	5854006	Condition	( abs ( dirn1 . x ) + abs ( dirn1 . y ) < 16 ) && ( ( plp -> vector . x != 0 ) || ( plp -> vector . y != 0 ) )	2166:12:91191:91286	5853593	0	True				
ANR	5854007	AndExpression	( abs ( dirn1 . x ) + abs ( dirn1 . y ) < 16 ) && ( ( plp -> vector . x != 0 ) || ( plp -> vector . y != 0 ) )		5853593	0		&&			
ANR	5854008	RelationalExpression	abs ( dirn1 . x ) + abs ( dirn1 . y ) < 16		5853593	0		<			
ANR	5854009	AdditiveExpression	abs ( dirn1 . x ) + abs ( dirn1 . y )		5853593	0		+			
ANR	5854010	CallExpression	abs ( dirn1 . x )		5853593	0					
ANR	5854011	Callee	abs		5853593	0					
ANR	5854012	Identifier	abs		5853593	0					
ANR	5854013	ArgumentList	dirn1 . x		5853593	1					
ANR	5854014	Argument	dirn1 . x		5853593	0					
ANR	5854015	MemberAccess	dirn1 . x		5853593	0					
ANR	5854016	Identifier	dirn1		5853593	0					
ANR	5854017	Identifier	x		5853593	1					
ANR	5854018	CallExpression	abs ( dirn1 . y )		5853593	1					
ANR	5854019	Callee	abs		5853593	0					
ANR	5854020	Identifier	abs		5853593	0					
ANR	5854021	ArgumentList	dirn1 . y		5853593	1					
ANR	5854022	Argument	dirn1 . y		5853593	0					
ANR	5854023	MemberAccess	dirn1 . y		5853593	0					
ANR	5854024	Identifier	dirn1		5853593	0					
ANR	5854025	Identifier	y		5853593	1					
ANR	5854026	PrimaryExpression	16		5853593	1					
ANR	5854027	OrExpression	( plp -> vector . x != 0 ) || ( plp -> vector . y != 0 )		5853593	1		||			
ANR	5854028	EqualityExpression	plp -> vector . x != 0		5853593	0		!=			
ANR	5854029	MemberAccess	plp -> vector . x		5853593	0					
ANR	5854030	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854031	Identifier	plp		5853593	0					
ANR	5854032	Identifier	vector		5853593	1					
ANR	5854033	Identifier	x		5853593	1					
ANR	5854034	PrimaryExpression	0		5853593	1					
ANR	5854035	EqualityExpression	plp -> vector . y != 0		5853593	1		!=			
ANR	5854036	MemberAccess	plp -> vector . y		5853593	0					
ANR	5854037	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854038	Identifier	plp		5853593	0					
ANR	5854039	Identifier	vector		5853593	1					
ANR	5854040	Identifier	y		5853593	1					
ANR	5854041	PrimaryExpression	0		5853593	1					
ANR	5854042	CompoundStatement		109:12:4097:4118	5853593	1					
ANR	5854043	IdentifierDeclStatement	float scale = 65536.0 ;	2169:12:91311:91332	5853593	0	True				
ANR	5854044	IdentifierDecl	scale = 65536.0		5853593	0					
ANR	5854045	IdentifierDeclType	float		5853593	0					
ANR	5854046	Identifier	scale		5853593	1					
ANR	5854047	AssignmentExpression	scale = 65536.0		5853593	2		=			
ANR	5854048	Identifier	scale		5853593	0					
ANR	5854049	PrimaryExpression	65536.0		5853593	1					
ANR	5854050	IfStatement	if ( abs ( plp -> vector . x ) > abs ( plp -> vector . y ) )		5853593	1					
ANR	5854051	Condition	abs ( plp -> vector . x ) > abs ( plp -> vector . y )	2170:16:91350:91388	5853593	0	True				
ANR	5854052	RelationalExpression	abs ( plp -> vector . x ) > abs ( plp -> vector . y )		5853593	0		>			
ANR	5854053	CallExpression	abs ( plp -> vector . x )		5853593	0					
ANR	5854054	Callee	abs		5853593	0					
ANR	5854055	Identifier	abs		5853593	0					
ANR	5854056	ArgumentList	plp -> vector . x		5853593	1					
ANR	5854057	Argument	plp -> vector . x		5853593	0					
ANR	5854058	MemberAccess	plp -> vector . x		5853593	0					
ANR	5854059	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854060	Identifier	plp		5853593	0					
ANR	5854061	Identifier	vector		5853593	1					
ANR	5854062	Identifier	x		5853593	1					
ANR	5854063	CallExpression	abs ( plp -> vector . y )		5853593	1					
ANR	5854064	Callee	abs		5853593	0					
ANR	5854065	Identifier	abs		5853593	0					
ANR	5854066	ArgumentList	plp -> vector . y		5853593	1					
ANR	5854067	Argument	plp -> vector . y		5853593	0					
ANR	5854068	MemberAccess	plp -> vector . y		5853593	0					
ANR	5854069	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854070	Identifier	plp		5853593	0					
ANR	5854071	Identifier	vector		5853593	1					
ANR	5854072	Identifier	y		5853593	1					
ANR	5854073	ExpressionStatement	scale /= abs ( plp -> vector . x )	2171:16:91407:91434	5853593	1	True				
ANR	5854074	AssignmentExpression	scale /= abs ( plp -> vector . x )		5853593	0		/=			
ANR	5854075	Identifier	scale		5853593	0					
ANR	5854076	CallExpression	abs ( plp -> vector . x )		5853593	1					
ANR	5854077	Callee	abs		5853593	0					
ANR	5854078	Identifier	abs		5853593	0					
ANR	5854079	ArgumentList	plp -> vector . x		5853593	1					
ANR	5854080	Argument	plp -> vector . x		5853593	0					
ANR	5854081	MemberAccess	plp -> vector . x		5853593	0					
ANR	5854082	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854083	Identifier	plp		5853593	0					
ANR	5854084	Identifier	vector		5853593	1					
ANR	5854085	Identifier	x		5853593	1					
ANR	5854086	ElseStatement	else		5853593	0					
ANR	5854087	ExpressionStatement	scale /= abs ( plp -> vector . y )	2173:16:91469:91496	5853593	0	True				
ANR	5854088	AssignmentExpression	scale /= abs ( plp -> vector . y )		5853593	0		/=			
ANR	5854089	Identifier	scale		5853593	0					
ANR	5854090	CallExpression	abs ( plp -> vector . y )		5853593	1					
ANR	5854091	Callee	abs		5853593	0					
ANR	5854092	Identifier	abs		5853593	0					
ANR	5854093	ArgumentList	plp -> vector . y		5853593	1					
ANR	5854094	Argument	plp -> vector . y		5853593	0					
ANR	5854095	MemberAccess	plp -> vector . y		5853593	0					
ANR	5854096	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854097	Identifier	plp		5853593	0					
ANR	5854098	Identifier	vector		5853593	1					
ANR	5854099	Identifier	y		5853593	1					
ANR	5854100	ExpressionStatement	dirn1 . x = ( fixed ) ( plp -> vector . x * scale )	2174:12:91510:91548	5853593	2	True				
ANR	5854101	AssignmentExpression	dirn1 . x = ( fixed ) ( plp -> vector . x * scale )		5853593	0		=			
ANR	5854102	MemberAccess	dirn1 . x		5853593	0					
ANR	5854103	Identifier	dirn1		5853593	0					
ANR	5854104	Identifier	x		5853593	1					
ANR	5854105	CastExpression	( fixed ) ( plp -> vector . x * scale )		5853593	1					
ANR	5854106	CastTarget	fixed		5853593	0					
ANR	5854107	MultiplicativeExpression	plp -> vector . x * scale		5853593	1		*			
ANR	5854108	MemberAccess	plp -> vector . x		5853593	0					
ANR	5854109	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854110	Identifier	plp		5853593	0					
ANR	5854111	Identifier	vector		5853593	1					
ANR	5854112	Identifier	x		5853593	1					
ANR	5854113	Identifier	scale		5853593	1					
ANR	5854114	ExpressionStatement	dirn1 . y = ( fixed ) ( plp -> vector . y * scale )	2175:12:91562:91600	5853593	3	True				
ANR	5854115	AssignmentExpression	dirn1 . y = ( fixed ) ( plp -> vector . y * scale )		5853593	0		=			
ANR	5854116	MemberAccess	dirn1 . y		5853593	0					
ANR	5854117	Identifier	dirn1		5853593	0					
ANR	5854118	Identifier	y		5853593	1					
ANR	5854119	CastExpression	( fixed ) ( plp -> vector . y * scale )		5853593	1					
ANR	5854120	CastTarget	fixed		5853593	0					
ANR	5854121	MultiplicativeExpression	plp -> vector . y * scale		5853593	1		*			
ANR	5854122	MemberAccess	plp -> vector . y		5853593	0					
ANR	5854123	PtrMemberAccess	plp -> vector		5853593	0					
ANR	5854124	Identifier	plp		5853593	0					
ANR	5854125	Identifier	vector		5853593	1					
ANR	5854126	Identifier	y		5853593	1					
ANR	5854127	Identifier	scale		5853593	1					
ANR	5854128	ExpressionStatement	dirn2 . x = nplp -> o . cdelta . x	2177:8:91620:91646	5853593	4	True				
ANR	5854129	AssignmentExpression	dirn2 . x = nplp -> o . cdelta . x		5853593	0		=			
ANR	5854130	MemberAccess	dirn2 . x		5853593	0					
ANR	5854131	Identifier	dirn2		5853593	0					
ANR	5854132	Identifier	x		5853593	1					
ANR	5854133	MemberAccess	nplp -> o . cdelta . x		5853593	1					
ANR	5854134	MemberAccess	nplp -> o . cdelta		5853593	0					
ANR	5854135	PtrMemberAccess	nplp -> o		5853593	0					
ANR	5854136	Identifier	nplp		5853593	0					
ANR	5854137	Identifier	o		5853593	1					
ANR	5854138	Identifier	cdelta		5853593	1					
ANR	5854139	Identifier	x		5853593	1					
ANR	5854140	ExpressionStatement	dirn2 . y = nplp -> o . cdelta . y	2178:8:91656:91682	5853593	5	True				
ANR	5854141	AssignmentExpression	dirn2 . y = nplp -> o . cdelta . y		5853593	0		=			
ANR	5854142	MemberAccess	dirn2 . y		5853593	0					
ANR	5854143	Identifier	dirn2		5853593	0					
ANR	5854144	Identifier	y		5853593	1					
ANR	5854145	MemberAccess	nplp -> o . cdelta . y		5853593	1					
ANR	5854146	MemberAccess	nplp -> o . cdelta		5853593	0					
ANR	5854147	PtrMemberAccess	nplp -> o		5853593	0					
ANR	5854148	Identifier	nplp		5853593	0					
ANR	5854149	Identifier	o		5853593	1					
ANR	5854150	Identifier	cdelta		5853593	1					
ANR	5854151	Identifier	y		5853593	1					
ANR	5854152	IfStatement	if ( ( abs ( dirn2 . x ) + abs ( dirn2 . y ) < 16 ) && ( ( nplp -> vector . x != 0 ) || ( nplp -> vector . y != 0 ) ) )		5853593	6					
ANR	5854153	Condition	( abs ( dirn2 . x ) + abs ( dirn2 . y ) < 16 ) && ( ( nplp -> vector . x != 0 ) || ( nplp -> vector . y != 0 ) )	2182:12:91884:91981	5853593	0	True				
ANR	5854154	AndExpression	( abs ( dirn2 . x ) + abs ( dirn2 . y ) < 16 ) && ( ( nplp -> vector . x != 0 ) || ( nplp -> vector . y != 0 ) )		5853593	0		&&			
ANR	5854155	RelationalExpression	abs ( dirn2 . x ) + abs ( dirn2 . y ) < 16		5853593	0		<			
ANR	5854156	AdditiveExpression	abs ( dirn2 . x ) + abs ( dirn2 . y )		5853593	0		+			
ANR	5854157	CallExpression	abs ( dirn2 . x )		5853593	0					
ANR	5854158	Callee	abs		5853593	0					
ANR	5854159	Identifier	abs		5853593	0					
ANR	5854160	ArgumentList	dirn2 . x		5853593	1					
ANR	5854161	Argument	dirn2 . x		5853593	0					
ANR	5854162	MemberAccess	dirn2 . x		5853593	0					
ANR	5854163	Identifier	dirn2		5853593	0					
ANR	5854164	Identifier	x		5853593	1					
ANR	5854165	CallExpression	abs ( dirn2 . y )		5853593	1					
ANR	5854166	Callee	abs		5853593	0					
ANR	5854167	Identifier	abs		5853593	0					
ANR	5854168	ArgumentList	dirn2 . y		5853593	1					
ANR	5854169	Argument	dirn2 . y		5853593	0					
ANR	5854170	MemberAccess	dirn2 . y		5853593	0					
ANR	5854171	Identifier	dirn2		5853593	0					
ANR	5854172	Identifier	y		5853593	1					
ANR	5854173	PrimaryExpression	16		5853593	1					
ANR	5854174	OrExpression	( nplp -> vector . x != 0 ) || ( nplp -> vector . y != 0 )		5853593	1		||			
ANR	5854175	EqualityExpression	nplp -> vector . x != 0		5853593	0		!=			
ANR	5854176	MemberAccess	nplp -> vector . x		5853593	0					
ANR	5854177	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854178	Identifier	nplp		5853593	0					
ANR	5854179	Identifier	vector		5853593	1					
ANR	5854180	Identifier	x		5853593	1					
ANR	5854181	PrimaryExpression	0		5853593	1					
ANR	5854182	EqualityExpression	nplp -> vector . y != 0		5853593	1		!=			
ANR	5854183	MemberAccess	nplp -> vector . y		5853593	0					
ANR	5854184	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854185	Identifier	nplp		5853593	0					
ANR	5854186	Identifier	vector		5853593	1					
ANR	5854187	Identifier	y		5853593	1					
ANR	5854188	PrimaryExpression	0		5853593	1					
ANR	5854189	CompoundStatement		125:12:4792:4813	5853593	1					
ANR	5854190	IdentifierDeclStatement	float scale = 65536.0 ;	2185:12:92006:92027	5853593	0	True				
ANR	5854191	IdentifierDecl	scale = 65536.0		5853593	0					
ANR	5854192	IdentifierDeclType	float		5853593	0					
ANR	5854193	Identifier	scale		5853593	1					
ANR	5854194	AssignmentExpression	scale = 65536.0		5853593	2		=			
ANR	5854195	Identifier	scale		5853593	0					
ANR	5854196	PrimaryExpression	65536.0		5853593	1					
ANR	5854197	IfStatement	if ( abs ( nplp -> vector . x ) > abs ( nplp -> vector . y ) )		5853593	1					
ANR	5854198	Condition	abs ( nplp -> vector . x ) > abs ( nplp -> vector . y )	2186:16:92045:92085	5853593	0	True				
ANR	5854199	RelationalExpression	abs ( nplp -> vector . x ) > abs ( nplp -> vector . y )		5853593	0		>			
ANR	5854200	CallExpression	abs ( nplp -> vector . x )		5853593	0					
ANR	5854201	Callee	abs		5853593	0					
ANR	5854202	Identifier	abs		5853593	0					
ANR	5854203	ArgumentList	nplp -> vector . x		5853593	1					
ANR	5854204	Argument	nplp -> vector . x		5853593	0					
ANR	5854205	MemberAccess	nplp -> vector . x		5853593	0					
ANR	5854206	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854207	Identifier	nplp		5853593	0					
ANR	5854208	Identifier	vector		5853593	1					
ANR	5854209	Identifier	x		5853593	1					
ANR	5854210	CallExpression	abs ( nplp -> vector . y )		5853593	1					
ANR	5854211	Callee	abs		5853593	0					
ANR	5854212	Identifier	abs		5853593	0					
ANR	5854213	ArgumentList	nplp -> vector . y		5853593	1					
ANR	5854214	Argument	nplp -> vector . y		5853593	0					
ANR	5854215	MemberAccess	nplp -> vector . y		5853593	0					
ANR	5854216	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854217	Identifier	nplp		5853593	0					
ANR	5854218	Identifier	vector		5853593	1					
ANR	5854219	Identifier	y		5853593	1					
ANR	5854220	ExpressionStatement	scale /= abs ( nplp -> vector . x )	2187:16:92104:92132	5853593	1	True				
ANR	5854221	AssignmentExpression	scale /= abs ( nplp -> vector . x )		5853593	0		/=			
ANR	5854222	Identifier	scale		5853593	0					
ANR	5854223	CallExpression	abs ( nplp -> vector . x )		5853593	1					
ANR	5854224	Callee	abs		5853593	0					
ANR	5854225	Identifier	abs		5853593	0					
ANR	5854226	ArgumentList	nplp -> vector . x		5853593	1					
ANR	5854227	Argument	nplp -> vector . x		5853593	0					
ANR	5854228	MemberAccess	nplp -> vector . x		5853593	0					
ANR	5854229	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854230	Identifier	nplp		5853593	0					
ANR	5854231	Identifier	vector		5853593	1					
ANR	5854232	Identifier	x		5853593	1					
ANR	5854233	ElseStatement	else		5853593	0					
ANR	5854234	ExpressionStatement	scale /= abs ( nplp -> vector . y )	2189:16:92167:92195	5853593	0	True				
ANR	5854235	AssignmentExpression	scale /= abs ( nplp -> vector . y )		5853593	0		/=			
ANR	5854236	Identifier	scale		5853593	0					
ANR	5854237	CallExpression	abs ( nplp -> vector . y )		5853593	1					
ANR	5854238	Callee	abs		5853593	0					
ANR	5854239	Identifier	abs		5853593	0					
ANR	5854240	ArgumentList	nplp -> vector . y		5853593	1					
ANR	5854241	Argument	nplp -> vector . y		5853593	0					
ANR	5854242	MemberAccess	nplp -> vector . y		5853593	0					
ANR	5854243	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854244	Identifier	nplp		5853593	0					
ANR	5854245	Identifier	vector		5853593	1					
ANR	5854246	Identifier	y		5853593	1					
ANR	5854247	ExpressionStatement	dirn2 . x = ( fixed ) ( - nplp -> vector . x * scale )	2190:12:92209:92249	5853593	2	True				
ANR	5854248	AssignmentExpression	dirn2 . x = ( fixed ) ( - nplp -> vector . x * scale )		5853593	0		=			
ANR	5854249	MemberAccess	dirn2 . x		5853593	0					
ANR	5854250	Identifier	dirn2		5853593	0					
ANR	5854251	Identifier	x		5853593	1					
ANR	5854252	CastExpression	( fixed ) ( - nplp -> vector . x * scale )		5853593	1					
ANR	5854253	CastTarget	fixed		5853593	0					
ANR	5854254	MultiplicativeExpression	- nplp -> vector . x * scale		5853593	1		*			
ANR	5854255	UnaryOperationExpression	- nplp -> vector . x		5853593	0					
ANR	5854256	UnaryOperator	-		5853593	0					
ANR	5854257	MemberAccess	nplp -> vector . x		5853593	1					
ANR	5854258	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854259	Identifier	nplp		5853593	0					
ANR	5854260	Identifier	vector		5853593	1					
ANR	5854261	Identifier	x		5853593	1					
ANR	5854262	Identifier	scale		5853593	1					
ANR	5854263	ExpressionStatement	dirn2 . y = ( fixed ) ( - nplp -> vector . y * scale )	2191:12:92263:92303	5853593	3	True				
ANR	5854264	AssignmentExpression	dirn2 . y = ( fixed ) ( - nplp -> vector . y * scale )		5853593	0		=			
ANR	5854265	MemberAccess	dirn2 . y		5853593	0					
ANR	5854266	Identifier	dirn2		5853593	0					
ANR	5854267	Identifier	y		5853593	1					
ANR	5854268	CastExpression	( fixed ) ( - nplp -> vector . y * scale )		5853593	1					
ANR	5854269	CastTarget	fixed		5853593	0					
ANR	5854270	MultiplicativeExpression	- nplp -> vector . y * scale		5853593	1		*			
ANR	5854271	UnaryOperationExpression	- nplp -> vector . y		5853593	0					
ANR	5854272	UnaryOperator	-		5853593	0					
ANR	5854273	MemberAccess	nplp -> vector . y		5853593	1					
ANR	5854274	PtrMemberAccess	nplp -> vector		5853593	0					
ANR	5854275	Identifier	nplp		5853593	0					
ANR	5854276	Identifier	vector		5853593	1					
ANR	5854277	Identifier	y		5853593	1					
ANR	5854278	Identifier	scale		5853593	1					
ANR	5854279	ExpressionStatement	"if_debug0 ( 'O' , ""        ... passes.\\n"" )"	2193:8:92323:92362	5853593	7	True				
ANR	5854280	CallExpression	"if_debug0 ( 'O' , ""        ... passes.\\n"" )"		5853593	0					
ANR	5854281	Callee	if_debug0		5853593	0					
ANR	5854282	Identifier	if_debug0		5853593	0					
ANR	5854283	ArgumentList	'O'		5853593	1					
ANR	5854284	Argument	'O'		5853593	0					
ANR	5854285	PrimaryExpression	'O'		5853593	0					
ANR	5854286	Argument	"""        ... passes.\\n"""		5853593	1					
ANR	5854287	PrimaryExpression	"""        ... passes.\\n"""		5853593	0					
ANR	5854288	IfStatement	"if ( line_intersect ( outp , & dirn1 , np , & dirn2 , mpt ) == 0 )"		5853593	8					
ANR	5854289	Condition	"line_intersect ( outp , & dirn1 , np , & dirn2 , mpt ) == 0"	2195:12:92443:92492	5853593	0	True				
ANR	5854290	EqualityExpression	"line_intersect ( outp , & dirn1 , np , & dirn2 , mpt ) == 0"		5853593	0		==			
ANR	5854291	CallExpression	"line_intersect ( outp , & dirn1 , np , & dirn2 , mpt )"		5853593	0					
ANR	5854292	Callee	line_intersect		5853593	0					
ANR	5854293	Identifier	line_intersect		5853593	0					
ANR	5854294	ArgumentList	outp		5853593	1					
ANR	5854295	Argument	outp		5853593	0					
ANR	5854296	Identifier	outp		5853593	0					
ANR	5854297	Argument	& dirn1		5853593	1					
ANR	5854298	UnaryOperationExpression	& dirn1		5853593	0					
ANR	5854299	UnaryOperator	&		5853593	0					
ANR	5854300	Identifier	dirn1		5853593	1					
ANR	5854301	Argument	np		5853593	2					
ANR	5854302	Identifier	np		5853593	0					
ANR	5854303	Argument	& dirn2		5853593	3					
ANR	5854304	UnaryOperationExpression	& dirn2		5853593	0					
ANR	5854305	UnaryOperator	&		5853593	0					
ANR	5854306	Identifier	dirn2		5853593	1					
ANR	5854307	Argument	mpt		5853593	4					
ANR	5854308	Identifier	mpt		5853593	0					
ANR	5854309	PrimaryExpression	0		5853593	1					
ANR	5854310	ReturnStatement	return 0 ;	2196:12:92507:92515	5853593	1	True				
ANR	5854311	PrimaryExpression	0		5853593	0					
ANR	5854312	ReturnStatement	return 1 ;	2198:4:92527:92535	5853593	13	True				
ANR	5854313	PrimaryExpression	1		5853593	0					
ANR	5854314	ReturnType	static int		5853593	1					
ANR	5854315	Identifier	check_miter		5853593	2					
ANR	5854316	ParameterList	"const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , const gs_matrix * pmat , p_ptr outp , p_ptr np , p_ptr mpt , bool ccw0"		5853593	3					
ANR	5854317	Parameter	const gx_line_params * pgs_lp	2058:12:87065:87093	5853593	0	True				
ANR	5854318	ParameterType	const gx_line_params *		5853593	0					
ANR	5854319	Identifier	pgs_lp		5853593	1					
ANR	5854320	Parameter	pl_ptr plp	2058:43:87096:87105	5853593	1	True				
ANR	5854321	ParameterType	pl_ptr		5853593	0					
ANR	5854322	Identifier	plp		5853593	1					
ANR	5854323	Parameter	pl_ptr nplp	2058:55:87108:87118	5853593	2	True				
ANR	5854324	ParameterType	pl_ptr		5853593	0					
ANR	5854325	Identifier	nplp		5853593	1					
ANR	5854326	Parameter	const gs_matrix * pmat	2059:12:87133:87154	5853593	3	True				
ANR	5854327	ParameterType	const gs_matrix *		5853593	0					
ANR	5854328	Identifier	pmat		5853593	1					
ANR	5854329	Parameter	p_ptr outp	2059:36:87157:87166	5853593	4	True				
ANR	5854330	ParameterType	p_ptr		5853593	0					
ANR	5854331	Identifier	outp		5853593	1					
ANR	5854332	Parameter	p_ptr np	2059:48:87169:87176	5853593	5	True				
ANR	5854333	ParameterType	p_ptr		5853593	0					
ANR	5854334	Identifier	np		5853593	1					
ANR	5854335	Parameter	p_ptr mpt	2059:58:87179:87187	5853593	6	True				
ANR	5854336	ParameterType	p_ptr		5853593	0					
ANR	5854337	Identifier	mpt		5853593	1					
ANR	5854338	Parameter	bool ccw0	2060:12:87202:87210	5853593	7	True				
ANR	5854339	ParameterType	bool		5853593	0					
ANR	5854340	Identifier	ccw0		5853593	1					
ANR	5854341	CFGEntryNode	ENTRY		5853593		True				
ANR	5854342	CFGExitNode	EXIT		5853593		True				
ANR	5854343	Symbol	dif		5853593						
ANR	5854344	Symbol	pt		5853593						
ANR	5854345	Symbol	nplp -> vector		5853593						
ANR	5854346	Symbol	num		5853593						
ANR	5854347	Symbol	line_intersect		5853593						
ANR	5854348	Symbol	M_PI		5853593						
ANR	5854349	Symbol	plp -> vector		5853593						
ANR	5854350	Symbol	dirn2 . x		5853593						
ANR	5854351	Symbol	gs_debug_c		5853593						
ANR	5854352	Symbol	dirn2 . y		5853593						
ANR	5854353	Symbol	denom		5853593						
ANR	5854354	Symbol	* plp		5853593						
ANR	5854355	Symbol	atan2		5853593						
ANR	5854356	Symbol	plp -> e . cdelta . x		5853593						
ANR	5854357	Symbol	dirn1 . y		5853593						
ANR	5854358	Symbol	dirn1 . x		5853593						
ANR	5854359	Symbol	plp -> e . cdelta . y		5853593						
ANR	5854360	Symbol	check		5853593						
ANR	5854361	Symbol	& dirn1		5853593						
ANR	5854362	Symbol	& dirn2		5853593						
ANR	5854363	Symbol	& pt		5853593						
ANR	5854364	Symbol	mpt		5853593						
ANR	5854365	Symbol	pgs_lp		5853593						
ANR	5854366	Symbol	np		5853593						
ANR	5854367	Symbol	gs_error_unregistered		5853593						
ANR	5854368	Symbol	code		5853593						
ANR	5854369	Symbol	pmat		5853593						
ANR	5854370	Symbol	* pgs_lp		5853593						
ANR	5854371	Symbol	nplp -> o . cdelta		5853593						
ANR	5854372	Symbol	scale		5853593						
ANR	5854373	Symbol	outp		5853593						
ANR	5854374	Symbol	ccw0		5853593						
ANR	5854375	Symbol	nplp -> o . cdelta . x		5853593						
ANR	5854376	Symbol	nplp -> o		5853593						
ANR	5854377	Symbol	u1		5853593						
ANR	5854378	Symbol	u2		5853593						
ANR	5854379	Symbol	* nplp		5853593						
ANR	5854380	Symbol	nplp -> o . cdelta . y		5853593						
ANR	5854381	Symbol	dirn1		5853593						
ANR	5854382	Symbol	dirn2		5853593						
ANR	5854383	Symbol	a1		5853593						
ANR	5854384	Symbol	pgs_lp -> miter_check		5853593						
ANR	5854385	Symbol	a2		5853593						
ANR	5854386	Symbol	abs		5853593						
ANR	5854387	Symbol	plp		5853593						
ANR	5854388	Symbol	nplp		5853593						
ANR	5854389	Symbol	nplp -> vector . x		5853593						
ANR	5854390	Symbol	nplp -> vector . y		5853593						
ANR	5854391	Symbol	plp -> e . cdelta		5853593						
ANR	5854392	Symbol	plp -> e		5853593						
ANR	5854393	Symbol	plp -> vector . y		5853593						
ANR	5854394	Symbol	pt . x		5853593						
ANR	5854395	Symbol	v1		5853593						
ANR	5854396	Symbol	plp -> vector . x		5853593						
ANR	5854397	Symbol	pt . y		5853593						
ANR	5854398	Symbol	v2		5853593						
ANR	5854399	Symbol	gs_distance_transform_inverse		5853593						
ANR	5854400	Function	line_join_points	2205:0:92736:96240							
ANR	5854401	FunctionDef	"line_join_points (const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * join_points , const gs_matrix * pmat , gs_line_join join , bool reflected)"		5854400	0					
ANR	5854402	CompoundStatement		2209:0:92943:96240	5854400	0					
ANR	5854403	Statement	define	2210:1:92946:92951	5854400	0	True				
ANR	5854404	Statement	jp1	2210:8:92953:92955	5854400	1	True				
ANR	5854405	Statement	join_points	2210:12:92957:92967	5854400	2	True				
ANR	5854406	Statement	[	2210:23:92968:92968	5854400	3	True				
ANR	5854407	Statement	0	2210:24:92969:92969	5854400	4	True				
ANR	5854408	Statement	]	2210:25:92970:92970	5854400	5	True				
ANR	5854409	Statement	define	2211:1:92973:92978	5854400	6	True				
ANR	5854410	Statement	np1	2211:8:92980:92982	5854400	7	True				
ANR	5854411	Statement	join_points	2211:12:92984:92994	5854400	8	True				
ANR	5854412	Statement	[	2211:23:92995:92995	5854400	9	True				
ANR	5854413	Statement	1	2211:24:92996:92996	5854400	10	True				
ANR	5854414	Statement	]	2211:25:92997:92997	5854400	11	True				
ANR	5854415	Statement	define	2212:1:93000:93005	5854400	12	True				
ANR	5854416	Statement	np2	2212:8:93007:93009	5854400	13	True				
ANR	5854417	Statement	join_points	2212:12:93011:93021	5854400	14	True				
ANR	5854418	Statement	[	2212:23:93022:93022	5854400	15	True				
ANR	5854419	Statement	2	2212:24:93023:93023	5854400	16	True				
ANR	5854420	Statement	]	2212:25:93024:93024	5854400	17	True				
ANR	5854421	Statement	define	2213:1:93027:93032	5854400	18	True				
ANR	5854422	Statement	jp2	2213:8:93034:93036	5854400	19	True				
ANR	5854423	Statement	join_points	2213:12:93038:93048	5854400	20	True				
ANR	5854424	Statement	[	2213:23:93049:93049	5854400	21	True				
ANR	5854425	Statement	3	2213:24:93050:93050	5854400	22	True				
ANR	5854426	Statement	]	2213:25:93051:93051	5854400	23	True				
ANR	5854427	Statement	define	2214:1:93054:93059	5854400	24	True				
ANR	5854428	Statement	jpx	2214:8:93061:93063	5854400	25	True				
ANR	5854429	Statement	join_points	2214:12:93065:93075	5854400	26	True				
ANR	5854430	Statement	[	2214:23:93076:93076	5854400	27	True				
ANR	5854431	Statement	4	2214:24:93077:93077	5854400	28	True				
ANR	5854432	Statement	]	2214:25:93078:93078	5854400	29	True				
ANR	5854433	IdentifierDeclStatement	bool ccw = ( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y ) ;	2242:4:94300:94446	5854400	30	True				
ANR	5854434	IdentifierDecl	ccw = ( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5854400	0					
ANR	5854435	IdentifierDeclType	bool		5854400	0					
ANR	5854436	Identifier	ccw		5854400	1					
ANR	5854437	AssignmentExpression	ccw = ( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5854400	2		=			
ANR	5854438	Identifier	ccw		5854400	0					
ANR	5854439	RelationalExpression	( double ) ( plp -> width . x ) * ( nplp -> width . y ) > ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5854400	1		>			
ANR	5854440	MultiplicativeExpression	( double ) ( plp -> width . x ) * ( nplp -> width . y )		5854400	0		*			
ANR	5854441	CastExpression	( double ) ( plp -> width . x )		5854400	0					
ANR	5854442	CastTarget	double		5854400	0					
ANR	5854443	MemberAccess	plp -> width . x		5854400	1					
ANR	5854444	PtrMemberAccess	plp -> width		5854400	0					
ANR	5854445	Identifier	plp		5854400	0					
ANR	5854446	Identifier	width		5854400	1					
ANR	5854447	Identifier	x		5854400	1					
ANR	5854448	MemberAccess	nplp -> width . y		5854400	1					
ANR	5854449	PtrMemberAccess	nplp -> width		5854400	0					
ANR	5854450	Identifier	nplp		5854400	0					
ANR	5854451	Identifier	width		5854400	1					
ANR	5854452	Identifier	y		5854400	1					
ANR	5854453	MultiplicativeExpression	( double ) ( nplp -> width . x ) * ( plp -> width . y )		5854400	1		*			
ANR	5854454	CastExpression	( double ) ( nplp -> width . x )		5854400	0					
ANR	5854455	CastTarget	double		5854400	0					
ANR	5854456	MemberAccess	nplp -> width . x		5854400	1					
ANR	5854457	PtrMemberAccess	nplp -> width		5854400	0					
ANR	5854458	Identifier	nplp		5854400	0					
ANR	5854459	Identifier	width		5854400	1					
ANR	5854460	Identifier	x		5854400	1					
ANR	5854461	MemberAccess	plp -> width . y		5854400	1					
ANR	5854462	PtrMemberAccess	plp -> width		5854400	0					
ANR	5854463	Identifier	plp		5854400	0					
ANR	5854464	Identifier	width		5854400	1					
ANR	5854465	Identifier	y		5854400	1					
ANR	5854466	IdentifierDeclStatement	bool ccw0 = ccw ;	2245:4:94452:94467	5854400	31	True				
ANR	5854467	IdentifierDecl	ccw0 = ccw		5854400	0					
ANR	5854468	IdentifierDeclType	bool		5854400	0					
ANR	5854469	Identifier	ccw0		5854400	1					
ANR	5854470	AssignmentExpression	ccw0 = ccw		5854400	2		=			
ANR	5854471	Identifier	ccw		5854400	0					
ANR	5854472	Identifier	ccw		5854400	1					
ANR	5854473	IdentifierDeclStatement	"p_ptr outp , np ;"	2246:4:94473:94487	5854400	32	True				
ANR	5854474	IdentifierDecl	outp		5854400	0					
ANR	5854475	IdentifierDeclType	p_ptr		5854400	0					
ANR	5854476	Identifier	outp		5854400	1					
ANR	5854477	IdentifierDecl	np		5854400	1					
ANR	5854478	IdentifierDeclType	p_ptr		5854400	0					
ANR	5854479	Identifier	np		5854400	1					
ANR	5854480	IdentifierDeclStatement	int code ;	2247:4:94493:94503	5854400	33	True				
ANR	5854481	IdentifierDecl	code		5854400	0					
ANR	5854482	IdentifierDeclType	int		5854400	0					
ANR	5854483	Identifier	code		5854400	1					
ANR	5854484	ExpressionStatement	ccw ^= reflected	2249:4:94510:94526	5854400	34	True				
ANR	5854485	AssignmentExpression	ccw ^= reflected		5854400	0		^=			
ANR	5854486	Identifier	ccw		5854400	0					
ANR	5854487	Identifier	reflected		5854400	1					
ANR	5854488	ExpressionStatement	"ASSIGN_POINT ( & jp1 , plp -> e . co )"	2252:4:94572:94601	5854400	35	True				
ANR	5854489	CallExpression	"ASSIGN_POINT ( & jp1 , plp -> e . co )"		5854400	0					
ANR	5854490	Callee	ASSIGN_POINT		5854400	0					
ANR	5854491	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854492	ArgumentList	& jp1		5854400	1					
ANR	5854493	Argument	& jp1		5854400	0					
ANR	5854494	UnaryOperationExpression	& jp1		5854400	0					
ANR	5854495	UnaryOperator	&		5854400	0					
ANR	5854496	Identifier	jp1		5854400	1					
ANR	5854497	Argument	plp -> e . co		5854400	1					
ANR	5854498	MemberAccess	plp -> e . co		5854400	0					
ANR	5854499	PtrMemberAccess	plp -> e		5854400	0					
ANR	5854500	Identifier	plp		5854400	0					
ANR	5854501	Identifier	e		5854400	1					
ANR	5854502	Identifier	co		5854400	1					
ANR	5854503	ExpressionStatement	"ASSIGN_POINT ( & jp2 , plp -> e . ce )"	2253:4:94607:94636	5854400	36	True				
ANR	5854504	CallExpression	"ASSIGN_POINT ( & jp2 , plp -> e . ce )"		5854400	0					
ANR	5854505	Callee	ASSIGN_POINT		5854400	0					
ANR	5854506	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854507	ArgumentList	& jp2		5854400	1					
ANR	5854508	Argument	& jp2		5854400	0					
ANR	5854509	UnaryOperationExpression	& jp2		5854400	0					
ANR	5854510	UnaryOperator	&		5854400	0					
ANR	5854511	Identifier	jp2		5854400	1					
ANR	5854512	Argument	plp -> e . ce		5854400	1					
ANR	5854513	MemberAccess	plp -> e . ce		5854400	0					
ANR	5854514	PtrMemberAccess	plp -> e		5854400	0					
ANR	5854515	Identifier	plp		5854400	0					
ANR	5854516	Identifier	e		5854400	1					
ANR	5854517	Identifier	ce		5854400	1					
ANR	5854518	IfStatement	if ( ! ccw )		5854400	37					
ANR	5854519	Condition	! ccw	2260:8:94811:94814	5854400	0	True				
ANR	5854520	UnaryOperationExpression	! ccw		5854400	0					
ANR	5854521	UnaryOperator	!		5854400	0					
ANR	5854522	Identifier	ccw		5854400	1					
ANR	5854523	CompoundStatement		52:14:1873:1873	5854400	1					
ANR	5854524	ExpressionStatement	outp = & jp2	2261:8:94827:94838	5854400	0	True				
ANR	5854525	AssignmentExpression	outp = & jp2		5854400	0		=			
ANR	5854526	Identifier	outp		5854400	0					
ANR	5854527	UnaryOperationExpression	& jp2		5854400	1					
ANR	5854528	UnaryOperator	&		5854400	0					
ANR	5854529	Identifier	jp2		5854400	1					
ANR	5854530	ExpressionStatement	"ASSIGN_POINT ( & np2 , nplp -> o . co )"	2262:8:94848:94878	5854400	1	True				
ANR	5854531	CallExpression	"ASSIGN_POINT ( & np2 , nplp -> o . co )"		5854400	0					
ANR	5854532	Callee	ASSIGN_POINT		5854400	0					
ANR	5854533	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854534	ArgumentList	& np2		5854400	1					
ANR	5854535	Argument	& np2		5854400	0					
ANR	5854536	UnaryOperationExpression	& np2		5854400	0					
ANR	5854537	UnaryOperator	&		5854400	0					
ANR	5854538	Identifier	np2		5854400	1					
ANR	5854539	Argument	nplp -> o . co		5854400	1					
ANR	5854540	MemberAccess	nplp -> o . co		5854400	0					
ANR	5854541	PtrMemberAccess	nplp -> o		5854400	0					
ANR	5854542	Identifier	nplp		5854400	0					
ANR	5854543	Identifier	o		5854400	1					
ANR	5854544	Identifier	co		5854400	1					
ANR	5854545	ExpressionStatement	"ASSIGN_POINT ( & np1 , nplp -> o . p )"	2263:8:94888:94917	5854400	2	True				
ANR	5854546	CallExpression	"ASSIGN_POINT ( & np1 , nplp -> o . p )"		5854400	0					
ANR	5854547	Callee	ASSIGN_POINT		5854400	0					
ANR	5854548	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854549	ArgumentList	& np1		5854400	1					
ANR	5854550	Argument	& np1		5854400	0					
ANR	5854551	UnaryOperationExpression	& np1		5854400	0					
ANR	5854552	UnaryOperator	&		5854400	0					
ANR	5854553	Identifier	np1		5854400	1					
ANR	5854554	Argument	nplp -> o . p		5854400	1					
ANR	5854555	MemberAccess	nplp -> o . p		5854400	0					
ANR	5854556	PtrMemberAccess	nplp -> o		5854400	0					
ANR	5854557	Identifier	nplp		5854400	0					
ANR	5854558	Identifier	o		5854400	1					
ANR	5854559	Identifier	p		5854400	1					
ANR	5854560	ExpressionStatement	np = & np2	2264:8:94927:94936	5854400	3	True				
ANR	5854561	AssignmentExpression	np = & np2		5854400	0		=			
ANR	5854562	Identifier	np		5854400	0					
ANR	5854563	UnaryOperationExpression	& np2		5854400	1					
ANR	5854564	UnaryOperator	&		5854400	0					
ANR	5854565	Identifier	np2		5854400	1					
ANR	5854566	ElseStatement	else		5854400	0					
ANR	5854567	CompoundStatement		57:11:2005:2005	5854400	0					
ANR	5854568	ExpressionStatement	outp = & jp1	2266:8:94959:94970	5854400	0	True				
ANR	5854569	AssignmentExpression	outp = & jp1		5854400	0		=			
ANR	5854570	Identifier	outp		5854400	0					
ANR	5854571	UnaryOperationExpression	& jp1		5854400	1					
ANR	5854572	UnaryOperator	&		5854400	0					
ANR	5854573	Identifier	jp1		5854400	1					
ANR	5854574	ExpressionStatement	"ASSIGN_POINT ( & np1 , nplp -> o . ce )"	2267:8:94980:95010	5854400	1	True				
ANR	5854575	CallExpression	"ASSIGN_POINT ( & np1 , nplp -> o . ce )"		5854400	0					
ANR	5854576	Callee	ASSIGN_POINT		5854400	0					
ANR	5854577	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854578	ArgumentList	& np1		5854400	1					
ANR	5854579	Argument	& np1		5854400	0					
ANR	5854580	UnaryOperationExpression	& np1		5854400	0					
ANR	5854581	UnaryOperator	&		5854400	0					
ANR	5854582	Identifier	np1		5854400	1					
ANR	5854583	Argument	nplp -> o . ce		5854400	1					
ANR	5854584	MemberAccess	nplp -> o . ce		5854400	0					
ANR	5854585	PtrMemberAccess	nplp -> o		5854400	0					
ANR	5854586	Identifier	nplp		5854400	0					
ANR	5854587	Identifier	o		5854400	1					
ANR	5854588	Identifier	ce		5854400	1					
ANR	5854589	ExpressionStatement	"ASSIGN_POINT ( & np2 , nplp -> o . p )"	2268:8:95020:95049	5854400	2	True				
ANR	5854590	CallExpression	"ASSIGN_POINT ( & np2 , nplp -> o . p )"		5854400	0					
ANR	5854591	Callee	ASSIGN_POINT		5854400	0					
ANR	5854592	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854593	ArgumentList	& np2		5854400	1					
ANR	5854594	Argument	& np2		5854400	0					
ANR	5854595	UnaryOperationExpression	& np2		5854400	0					
ANR	5854596	UnaryOperator	&		5854400	0					
ANR	5854597	Identifier	np2		5854400	1					
ANR	5854598	Argument	nplp -> o . p		5854400	1					
ANR	5854599	MemberAccess	nplp -> o . p		5854400	0					
ANR	5854600	PtrMemberAccess	nplp -> o		5854400	0					
ANR	5854601	Identifier	nplp		5854400	0					
ANR	5854602	Identifier	o		5854400	1					
ANR	5854603	Identifier	p		5854400	1					
ANR	5854604	ExpressionStatement	np = & np1	2269:8:95059:95068	5854400	3	True				
ANR	5854605	AssignmentExpression	np = & np1		5854400	0		=			
ANR	5854606	Identifier	np		5854400	0					
ANR	5854607	UnaryOperationExpression	& np1		5854400	1					
ANR	5854608	UnaryOperator	&		5854400	0					
ANR	5854609	Identifier	np1		5854400	1					
ANR	5854610	ExpressionStatement	"if_debug1 ( 'O' , ""[O]use %s\\n"" , ( ccw ? ""co (ccw)"" : ""ce (cw)"" ) )"	2271:4:95080:95141	5854400	38	True				
ANR	5854611	CallExpression	"if_debug1 ( 'O' , ""[O]use %s\\n"" , ( ccw ? ""co (ccw)"" : ""ce (cw)"" ) )"		5854400	0					
ANR	5854612	Callee	if_debug1		5854400	0					
ANR	5854613	Identifier	if_debug1		5854400	0					
ANR	5854614	ArgumentList	'O'		5854400	1					
ANR	5854615	Argument	'O'		5854400	0					
ANR	5854616	PrimaryExpression	'O'		5854400	0					
ANR	5854617	Argument	"""[O]use %s\\n"""		5854400	1					
ANR	5854618	PrimaryExpression	"""[O]use %s\\n"""		5854400	0					
ANR	5854619	Argument	"ccw ? ""co (ccw)"" : ""ce (cw)"""		5854400	2					
ANR	5854620	ConditionalExpression	"ccw ? ""co (ccw)"" : ""ce (cw)"""		5854400	0					
ANR	5854621	Condition	ccw		5854400	0					
ANR	5854622	Identifier	ccw		5854400	0					
ANR	5854623	PrimaryExpression	"""co (ccw)"""		5854400	1					
ANR	5854624	PrimaryExpression	"""ce (cw)"""		5854400	2					
ANR	5854625	IfStatement	if ( join == gs_join_triangle )		5854400	39					
ANR	5854626	Condition	join == gs_join_triangle	2274:8:95191:95214	5854400	0	True				
ANR	5854627	EqualityExpression	join == gs_join_triangle		5854400	0		==			
ANR	5854628	Identifier	join		5854400	0					
ANR	5854629	Identifier	gs_join_triangle		5854400	1					
ANR	5854630	CompoundStatement		68:8:2334:2375	5854400	1					
ANR	5854631	IdentifierDeclStatement	fixed tpx = outp -> x - nplp -> o . p . x + np -> x ;	2275:8:95227:95268	5854400	0	True				
ANR	5854632	IdentifierDecl	tpx = outp -> x - nplp -> o . p . x + np -> x		5854400	0					
ANR	5854633	IdentifierDeclType	fixed		5854400	0					
ANR	5854634	Identifier	tpx		5854400	1					
ANR	5854635	AssignmentExpression	tpx = outp -> x - nplp -> o . p . x + np -> x		5854400	2		=			
ANR	5854636	Identifier	tpx		5854400	0					
ANR	5854637	AdditiveExpression	outp -> x - nplp -> o . p . x + np -> x		5854400	1		-			
ANR	5854638	PtrMemberAccess	outp -> x		5854400	0					
ANR	5854639	Identifier	outp		5854400	0					
ANR	5854640	Identifier	x		5854400	1					
ANR	5854641	AdditiveExpression	nplp -> o . p . x + np -> x		5854400	1		+			
ANR	5854642	MemberAccess	nplp -> o . p . x		5854400	0					
ANR	5854643	MemberAccess	nplp -> o . p		5854400	0					
ANR	5854644	PtrMemberAccess	nplp -> o		5854400	0					
ANR	5854645	Identifier	nplp		5854400	0					
ANR	5854646	Identifier	o		5854400	1					
ANR	5854647	Identifier	p		5854400	1					
ANR	5854648	Identifier	x		5854400	1					
ANR	5854649	PtrMemberAccess	np -> x		5854400	1					
ANR	5854650	Identifier	np		5854400	0					
ANR	5854651	Identifier	x		5854400	1					
ANR	5854652	IdentifierDeclStatement	fixed tpy = outp -> y - nplp -> o . p . y + np -> y ;	2276:8:95278:95319	5854400	1	True				
ANR	5854653	IdentifierDecl	tpy = outp -> y - nplp -> o . p . y + np -> y		5854400	0					
ANR	5854654	IdentifierDeclType	fixed		5854400	0					
ANR	5854655	Identifier	tpy		5854400	1					
ANR	5854656	AssignmentExpression	tpy = outp -> y - nplp -> o . p . y + np -> y		5854400	2		=			
ANR	5854657	Identifier	tpy		5854400	0					
ANR	5854658	AdditiveExpression	outp -> y - nplp -> o . p . y + np -> y		5854400	1		-			
ANR	5854659	PtrMemberAccess	outp -> y		5854400	0					
ANR	5854660	Identifier	outp		5854400	0					
ANR	5854661	Identifier	y		5854400	1					
ANR	5854662	AdditiveExpression	nplp -> o . p . y + np -> y		5854400	1		+			
ANR	5854663	MemberAccess	nplp -> o . p . y		5854400	0					
ANR	5854664	MemberAccess	nplp -> o . p		5854400	0					
ANR	5854665	PtrMemberAccess	nplp -> o		5854400	0					
ANR	5854666	Identifier	nplp		5854400	0					
ANR	5854667	Identifier	o		5854400	1					
ANR	5854668	Identifier	p		5854400	1					
ANR	5854669	Identifier	y		5854400	1					
ANR	5854670	PtrMemberAccess	np -> y		5854400	1					
ANR	5854671	Identifier	np		5854400	0					
ANR	5854672	Identifier	y		5854400	1					
ANR	5854673	ExpressionStatement	"ASSIGN_POINT ( & jpx , jp2 )"	2278:8:95330:95353	5854400	2	True				
ANR	5854674	CallExpression	"ASSIGN_POINT ( & jpx , jp2 )"		5854400	0					
ANR	5854675	Callee	ASSIGN_POINT		5854400	0					
ANR	5854676	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854677	ArgumentList	& jpx		5854400	1					
ANR	5854678	Argument	& jpx		5854400	0					
ANR	5854679	UnaryOperationExpression	& jpx		5854400	0					
ANR	5854680	UnaryOperator	&		5854400	0					
ANR	5854681	Identifier	jpx		5854400	1					
ANR	5854682	Argument	jp2		5854400	1					
ANR	5854683	Identifier	jp2		5854400	0					
ANR	5854684	IfStatement	if ( ! ccw )		5854400	3					
ANR	5854685	Condition	! ccw	2279:12:95367:95370	5854400	0	True				
ANR	5854686	UnaryOperationExpression	! ccw		5854400	0					
ANR	5854687	UnaryOperator	!		5854400	0					
ANR	5854688	Identifier	ccw		5854400	1					
ANR	5854689	CompoundStatement		71:18:2429:2429	5854400	1					
ANR	5854690	ExpressionStatement	"jp2 . x = tpx , jp2 . y = tpy"	2281:12:95436:95460	5854400	0	True				
ANR	5854691	Expression	"jp2 . x = tpx , jp2 . y = tpy"		5854400	0					
ANR	5854692	AssignmentExpression	jp2 . x = tpx		5854400	0		=			
ANR	5854693	MemberAccess	jp2 . x		5854400	0					
ANR	5854694	Identifier	jp2		5854400	0					
ANR	5854695	Identifier	x		5854400	1					
ANR	5854696	Identifier	tpx		5854400	1					
ANR	5854697	AssignmentExpression	jp2 . y = tpy		5854400	1		=			
ANR	5854698	MemberAccess	jp2 . y		5854400	0					
ANR	5854699	Identifier	jp2		5854400	0					
ANR	5854700	Identifier	y		5854400	1					
ANR	5854701	Identifier	tpy		5854400	1					
ANR	5854702	ElseStatement	else		5854400	0					
ANR	5854703	CompoundStatement		74:15:2533:2533	5854400	0					
ANR	5854704	ExpressionStatement	"ASSIGN_POINT ( & jp2 , np2 )"	2284:12:95540:95563	5854400	0	True				
ANR	5854705	CallExpression	"ASSIGN_POINT ( & jp2 , np2 )"		5854400	0					
ANR	5854706	Callee	ASSIGN_POINT		5854400	0					
ANR	5854707	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854708	ArgumentList	& jp2		5854400	1					
ANR	5854709	Argument	& jp2		5854400	0					
ANR	5854710	UnaryOperationExpression	& jp2		5854400	0					
ANR	5854711	UnaryOperator	&		5854400	0					
ANR	5854712	Identifier	jp2		5854400	1					
ANR	5854713	Argument	np2		5854400	1					
ANR	5854714	Identifier	np2		5854400	0					
ANR	5854715	ExpressionStatement	"ASSIGN_POINT ( & np2 , np1 )"	2285:12:95577:95600	5854400	1	True				
ANR	5854716	CallExpression	"ASSIGN_POINT ( & np2 , np1 )"		5854400	0					
ANR	5854717	Callee	ASSIGN_POINT		5854400	0					
ANR	5854718	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854719	ArgumentList	& np2		5854400	1					
ANR	5854720	Argument	& np2		5854400	0					
ANR	5854721	UnaryOperationExpression	& np2		5854400	0					
ANR	5854722	UnaryOperator	&		5854400	0					
ANR	5854723	Identifier	np2		5854400	1					
ANR	5854724	Argument	np1		5854400	1					
ANR	5854725	Identifier	np1		5854400	0					
ANR	5854726	ExpressionStatement	"np1 . x = tpx , np1 . y = tpy"	2286:12:95614:95638	5854400	2	True				
ANR	5854727	Expression	"np1 . x = tpx , np1 . y = tpy"		5854400	0					
ANR	5854728	AssignmentExpression	np1 . x = tpx		5854400	0		=			
ANR	5854729	MemberAccess	np1 . x		5854400	0					
ANR	5854730	Identifier	np1		5854400	0					
ANR	5854731	Identifier	x		5854400	1					
ANR	5854732	Identifier	tpx		5854400	1					
ANR	5854733	AssignmentExpression	np1 . y = tpy		5854400	1		=			
ANR	5854734	MemberAccess	np1 . y		5854400	0					
ANR	5854735	Identifier	np1		5854400	0					
ANR	5854736	Identifier	y		5854400	1					
ANR	5854737	Identifier	tpy		5854400	1					
ANR	5854738	ReturnStatement	return 5 ;	2288:8:95658:95666	5854400	4	True				
ANR	5854739	PrimaryExpression	5		5854400	0					
ANR	5854740	IfStatement	if ( join == gs_join_miter && ! ( fixed2long ( outp -> x << 1 ) == fixed2long ( np -> x << 1 ) && fixed2long ( outp -> y << 1 ) == fixed2long ( np -> y << 1 ) ) )		5854400	40					
ANR	5854741	Condition	join == gs_join_miter && ! ( fixed2long ( outp -> x << 1 ) == fixed2long ( np -> x << 1 ) && fixed2long ( outp -> y << 1 ) == fixed2long ( np -> y << 1 ) )	2295:8:95847:95996	5854400	0	True				
ANR	5854742	AndExpression	join == gs_join_miter && ! ( fixed2long ( outp -> x << 1 ) == fixed2long ( np -> x << 1 ) && fixed2long ( outp -> y << 1 ) == fixed2long ( np -> y << 1 ) )		5854400	0		&&			
ANR	5854743	EqualityExpression	join == gs_join_miter		5854400	0		==			
ANR	5854744	Identifier	join		5854400	0					
ANR	5854745	Identifier	gs_join_miter		5854400	1					
ANR	5854746	UnaryOperationExpression	! ( fixed2long ( outp -> x << 1 ) == fixed2long ( np -> x << 1 ) && fixed2long ( outp -> y << 1 ) == fixed2long ( np -> y << 1 ) )		5854400	1					
ANR	5854747	UnaryOperator	!		5854400	0					
ANR	5854748	AndExpression	fixed2long ( outp -> x << 1 ) == fixed2long ( np -> x << 1 ) && fixed2long ( outp -> y << 1 ) == fixed2long ( np -> y << 1 )		5854400	1		&&			
ANR	5854749	EqualityExpression	fixed2long ( outp -> x << 1 ) == fixed2long ( np -> x << 1 )		5854400	0		==			
ANR	5854750	CallExpression	fixed2long ( outp -> x << 1 )		5854400	0					
ANR	5854751	Callee	fixed2long		5854400	0					
ANR	5854752	Identifier	fixed2long		5854400	0					
ANR	5854753	ArgumentList	outp -> x << 1		5854400	1					
ANR	5854754	Argument	outp -> x << 1		5854400	0					
ANR	5854755	ShiftExpression	outp -> x << 1		5854400	0		<<			
ANR	5854756	PtrMemberAccess	outp -> x		5854400	0					
ANR	5854757	Identifier	outp		5854400	0					
ANR	5854758	Identifier	x		5854400	1					
ANR	5854759	PrimaryExpression	1		5854400	1					
ANR	5854760	CallExpression	fixed2long ( np -> x << 1 )		5854400	1					
ANR	5854761	Callee	fixed2long		5854400	0					
ANR	5854762	Identifier	fixed2long		5854400	0					
ANR	5854763	ArgumentList	np -> x << 1		5854400	1					
ANR	5854764	Argument	np -> x << 1		5854400	0					
ANR	5854765	ShiftExpression	np -> x << 1		5854400	0		<<			
ANR	5854766	PtrMemberAccess	np -> x		5854400	0					
ANR	5854767	Identifier	np		5854400	0					
ANR	5854768	Identifier	x		5854400	1					
ANR	5854769	PrimaryExpression	1		5854400	1					
ANR	5854770	EqualityExpression	fixed2long ( outp -> y << 1 ) == fixed2long ( np -> y << 1 )		5854400	1		==			
ANR	5854771	CallExpression	fixed2long ( outp -> y << 1 )		5854400	0					
ANR	5854772	Callee	fixed2long		5854400	0					
ANR	5854773	Identifier	fixed2long		5854400	0					
ANR	5854774	ArgumentList	outp -> y << 1		5854400	1					
ANR	5854775	Argument	outp -> y << 1		5854400	0					
ANR	5854776	ShiftExpression	outp -> y << 1		5854400	0		<<			
ANR	5854777	PtrMemberAccess	outp -> y		5854400	0					
ANR	5854778	Identifier	outp		5854400	0					
ANR	5854779	Identifier	y		5854400	1					
ANR	5854780	PrimaryExpression	1		5854400	1					
ANR	5854781	CallExpression	fixed2long ( np -> y << 1 )		5854400	1					
ANR	5854782	Callee	fixed2long		5854400	0					
ANR	5854783	Identifier	fixed2long		5854400	0					
ANR	5854784	ArgumentList	np -> y << 1		5854400	1					
ANR	5854785	Argument	np -> y << 1		5854400	0					
ANR	5854786	ShiftExpression	np -> y << 1		5854400	0		<<			
ANR	5854787	PtrMemberAccess	np -> y		5854400	0					
ANR	5854788	Identifier	np		5854400	0					
ANR	5854789	Identifier	y		5854400	1					
ANR	5854790	PrimaryExpression	1		5854400	1					
ANR	5854791	CompoundStatement		91:8:3074:3092	5854400	1					
ANR	5854792	IdentifierDeclStatement	gs_fixed_point mpt ;	2299:8:96018:96036	5854400	0	True				
ANR	5854793	IdentifierDecl	mpt		5854400	0					
ANR	5854794	IdentifierDeclType	gs_fixed_point		5854400	0					
ANR	5854795	Identifier	mpt		5854400	1					
ANR	5854796	ExpressionStatement	"code = check_miter ( pgs_lp , plp , nplp , pmat , outp , np , & mpt , ccw0 )"	2300:8:96046:96111	5854400	1	True				
ANR	5854797	AssignmentExpression	"code = check_miter ( pgs_lp , plp , nplp , pmat , outp , np , & mpt , ccw0 )"		5854400	0		=			
ANR	5854798	Identifier	code		5854400	0					
ANR	5854799	CallExpression	"check_miter ( pgs_lp , plp , nplp , pmat , outp , np , & mpt , ccw0 )"		5854400	1					
ANR	5854800	Callee	check_miter		5854400	0					
ANR	5854801	Identifier	check_miter		5854400	0					
ANR	5854802	ArgumentList	pgs_lp		5854400	1					
ANR	5854803	Argument	pgs_lp		5854400	0					
ANR	5854804	Identifier	pgs_lp		5854400	0					
ANR	5854805	Argument	plp		5854400	1					
ANR	5854806	Identifier	plp		5854400	0					
ANR	5854807	Argument	nplp		5854400	2					
ANR	5854808	Identifier	nplp		5854400	0					
ANR	5854809	Argument	pmat		5854400	3					
ANR	5854810	Identifier	pmat		5854400	0					
ANR	5854811	Argument	outp		5854400	4					
ANR	5854812	Identifier	outp		5854400	0					
ANR	5854813	Argument	np		5854400	5					
ANR	5854814	Identifier	np		5854400	0					
ANR	5854815	Argument	& mpt		5854400	6					
ANR	5854816	UnaryOperationExpression	& mpt		5854400	0					
ANR	5854817	UnaryOperator	&		5854400	0					
ANR	5854818	Identifier	mpt		5854400	1					
ANR	5854819	Argument	ccw0		5854400	7					
ANR	5854820	Identifier	ccw0		5854400	0					
ANR	5854821	IfStatement	if ( code < 0 )		5854400	2					
ANR	5854822	Condition	code < 0	2301:12:96125:96132	5854400	0	True				
ANR	5854823	RelationalExpression	code < 0		5854400	0		<			
ANR	5854824	Identifier	code		5854400	0					
ANR	5854825	PrimaryExpression	0		5854400	1					
ANR	5854826	ReturnStatement	return code ;	2302:12:96147:96158	5854400	1	True				
ANR	5854827	Identifier	code		5854400	0					
ANR	5854828	IfStatement	if ( code == 0 )		5854400	3					
ANR	5854829	Condition	code == 0	2303:12:96172:96180	5854400	0	True				
ANR	5854830	EqualityExpression	code == 0		5854400	0		==			
ANR	5854831	Identifier	code		5854400	0					
ANR	5854832	PrimaryExpression	0		5854400	1					
ANR	5854833	ExpressionStatement	"ASSIGN_POINT ( outp , mpt )"	2304:12:96195:96218	5854400	1	True				
ANR	5854834	CallExpression	"ASSIGN_POINT ( outp , mpt )"		5854400	0					
ANR	5854835	Callee	ASSIGN_POINT		5854400	0					
ANR	5854836	Identifier	ASSIGN_POINT		5854400	0					
ANR	5854837	ArgumentList	outp		5854400	1					
ANR	5854838	Argument	outp		5854400	0					
ANR	5854839	Identifier	outp		5854400	0					
ANR	5854840	Argument	mpt		5854400	1					
ANR	5854841	Identifier	mpt		5854400	0					
ANR	5854842	ReturnStatement	return 4 ;	2306:4:96230:96238	5854400	41	True				
ANR	5854843	PrimaryExpression	4		5854400	0					
ANR	5854844	ReturnType	static int		5854400	1					
ANR	5854845	Identifier	line_join_points		5854400	2					
ANR	5854846	ParameterList	"const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * join_points , const gs_matrix * pmat , gs_line_join join , bool reflected"		5854400	3					
ANR	5854847	Parameter	const gx_line_params * pgs_lp	2206:17:92764:92792	5854400	0	True				
ANR	5854848	ParameterType	const gx_line_params *		5854400	0					
ANR	5854849	Identifier	pgs_lp		5854400	1					
ANR	5854850	Parameter	pl_ptr plp	2206:48:92795:92804	5854400	1	True				
ANR	5854851	ParameterType	pl_ptr		5854400	0					
ANR	5854852	Identifier	plp		5854400	1					
ANR	5854853	Parameter	pl_ptr nplp	2206:60:92807:92817	5854400	2	True				
ANR	5854854	ParameterType	pl_ptr		5854400	0					
ANR	5854855	Identifier	nplp		5854400	1					
ANR	5854856	Parameter	gs_fixed_point * join_points	2207:17:92837:92864	5854400	3	True				
ANR	5854857	ParameterType	gs_fixed_point *		5854400	0					
ANR	5854858	Identifier	join_points		5854400	1					
ANR	5854859	Parameter	const gs_matrix * pmat	2207:47:92867:92888	5854400	4	True				
ANR	5854860	ParameterType	const gs_matrix *		5854400	0					
ANR	5854861	Identifier	pmat		5854400	1					
ANR	5854862	Parameter	gs_line_join join	2208:17:92908:92924	5854400	5	True				
ANR	5854863	ParameterType	gs_line_join		5854400	0					
ANR	5854864	Identifier	join		5854400	1					
ANR	5854865	Parameter	bool reflected	2208:36:92927:92940	5854400	6	True				
ANR	5854866	ParameterType	bool		5854400	0					
ANR	5854867	Identifier	reflected		5854400	1					
ANR	5854868	CFGEntryNode	ENTRY		5854400		True				
ANR	5854869	CFGExitNode	EXIT		5854400		True				
ANR	5854870	Symbol	np -> x		5854400						
ANR	5854871	Symbol	nplp -> o . p . x		5854400						
ANR	5854872	Symbol	nplp -> o . p . y		5854400						
ANR	5854873	Symbol	reflected		5854400						
ANR	5854874	Symbol	np -> y		5854400						
ANR	5854875	Symbol	& mpt		5854400						
ANR	5854876	Symbol	& np2		5854400						
ANR	5854877	Symbol	& np1		5854400						
ANR	5854878	Symbol	& jp2		5854400						
ANR	5854879	Symbol	ccw		5854400						
ANR	5854880	Symbol	& jp1		5854400						
ANR	5854881	Symbol	plp -> e . co		5854400						
ANR	5854882	Symbol	outp -> y		5854400						
ANR	5854883	Symbol	plp -> e . ce		5854400						
ANR	5854884	Symbol	outp -> x		5854400						
ANR	5854885	Symbol	join		5854400						
ANR	5854886	Symbol	* plp		5854400						
ANR	5854887	Symbol	join_points		5854400						
ANR	5854888	Symbol	jp2		5854400						
ANR	5854889	Symbol	np1		5854400						
ANR	5854890	Symbol	mpt		5854400						
ANR	5854891	Symbol	np2		5854400						
ANR	5854892	Symbol	gs_join_triangle		5854400						
ANR	5854893	Symbol	pgs_lp		5854400						
ANR	5854894	Symbol	* outp		5854400						
ANR	5854895	Symbol	plp -> width . y		5854400						
ANR	5854896	Symbol	plp -> width . x		5854400						
ANR	5854897	Symbol	np		5854400						
ANR	5854898	Symbol	code		5854400						
ANR	5854899	Symbol	nplp -> o . co		5854400						
ANR	5854900	Symbol	pmat		5854400						
ANR	5854901	Symbol	plp -> width		5854400						
ANR	5854902	Symbol	jp2 . y		5854400						
ANR	5854903	Symbol	nplp -> width		5854400						
ANR	5854904	Symbol	jp2 . x		5854400						
ANR	5854905	Symbol	outp		5854400						
ANR	5854906	Symbol	ccw0		5854400						
ANR	5854907	Symbol	np1 . x		5854400						
ANR	5854908	Symbol	nplp -> o		5854400						
ANR	5854909	Symbol	np1 . y		5854400						
ANR	5854910	Symbol	* nplp		5854400						
ANR	5854911	Symbol	& jpx		5854400						
ANR	5854912	Symbol	* np		5854400						
ANR	5854913	Symbol	gs_join_miter		5854400						
ANR	5854914	Symbol	check_miter		5854400						
ANR	5854915	Symbol	nplp -> width . y		5854400						
ANR	5854916	Symbol	fixed2long		5854400						
ANR	5854917	Symbol	plp		5854400						
ANR	5854918	Symbol	nplp		5854400						
ANR	5854919	Symbol	nplp -> o . p		5854400						
ANR	5854920	Symbol	plp -> e		5854400						
ANR	5854921	Symbol	tpy		5854400						
ANR	5854922	Symbol	nplp -> o . ce		5854400						
ANR	5854923	Symbol	tpx		5854400						
ANR	5854924	Symbol	nplp -> width . x		5854400						
ANR	5854925	Function	line_join_points_fast_cw	2309:0:96243:97779							
ANR	5854926	FunctionDef	"line_join_points_fast_cw (const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * rjoin_points , const gs_matrix * pmat , gs_line_join join)"		5854925	0					
ANR	5854927	CompoundStatement		2315:0:96509:97779	5854925	0					
ANR	5854928	IfStatement	if ( join == gs_join_triangle )		5854925	0					
ANR	5854929	Condition	join == gs_join_triangle	2320:8:96660:96683	5854925	0	True				
ANR	5854930	EqualityExpression	join == gs_join_triangle		5854925	0		==			
ANR	5854931	Identifier	join		5854925	0					
ANR	5854932	Identifier	gs_join_triangle		5854925	1					
ANR	5854933	CompoundStatement		8:8:190:207	5854925	1					
ANR	5854934	IdentifierDeclStatement	gs_fixed_point tp ;	2322:8:96700:96717	5854925	0	True				
ANR	5854935	IdentifierDecl	tp		5854925	0					
ANR	5854936	IdentifierDeclType	gs_fixed_point		5854925	0					
ANR	5854937	Identifier	tp		5854925	1					
ANR	5854938	ExpressionStatement	tp . x = plp -> e . ce . x - nplp -> o . p . x + nplp -> o . co . x	2324:8:96728:96775	5854925	1	True				
ANR	5854939	AssignmentExpression	tp . x = plp -> e . ce . x - nplp -> o . p . x + nplp -> o . co . x		5854925	0		=			
ANR	5854940	MemberAccess	tp . x		5854925	0					
ANR	5854941	Identifier	tp		5854925	0					
ANR	5854942	Identifier	x		5854925	1					
ANR	5854943	AdditiveExpression	plp -> e . ce . x - nplp -> o . p . x + nplp -> o . co . x		5854925	1		-			
ANR	5854944	MemberAccess	plp -> e . ce . x		5854925	0					
ANR	5854945	MemberAccess	plp -> e . ce		5854925	0					
ANR	5854946	PtrMemberAccess	plp -> e		5854925	0					
ANR	5854947	Identifier	plp		5854925	0					
ANR	5854948	Identifier	e		5854925	1					
ANR	5854949	Identifier	ce		5854925	1					
ANR	5854950	Identifier	x		5854925	1					
ANR	5854951	AdditiveExpression	nplp -> o . p . x + nplp -> o . co . x		5854925	1		+			
ANR	5854952	MemberAccess	nplp -> o . p . x		5854925	0					
ANR	5854953	MemberAccess	nplp -> o . p		5854925	0					
ANR	5854954	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5854955	Identifier	nplp		5854925	0					
ANR	5854956	Identifier	o		5854925	1					
ANR	5854957	Identifier	p		5854925	1					
ANR	5854958	Identifier	x		5854925	1					
ANR	5854959	MemberAccess	nplp -> o . co . x		5854925	1					
ANR	5854960	MemberAccess	nplp -> o . co		5854925	0					
ANR	5854961	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5854962	Identifier	nplp		5854925	0					
ANR	5854963	Identifier	o		5854925	1					
ANR	5854964	Identifier	co		5854925	1					
ANR	5854965	Identifier	x		5854925	1					
ANR	5854966	ExpressionStatement	tp . y = plp -> e . ce . y - nplp -> o . p . y + nplp -> o . co . y	2325:8:96785:96832	5854925	2	True				
ANR	5854967	AssignmentExpression	tp . y = plp -> e . ce . y - nplp -> o . p . y + nplp -> o . co . y		5854925	0		=			
ANR	5854968	MemberAccess	tp . y		5854925	0					
ANR	5854969	Identifier	tp		5854925	0					
ANR	5854970	Identifier	y		5854925	1					
ANR	5854971	AdditiveExpression	plp -> e . ce . y - nplp -> o . p . y + nplp -> o . co . y		5854925	1		-			
ANR	5854972	MemberAccess	plp -> e . ce . y		5854925	0					
ANR	5854973	MemberAccess	plp -> e . ce		5854925	0					
ANR	5854974	PtrMemberAccess	plp -> e		5854925	0					
ANR	5854975	Identifier	plp		5854925	0					
ANR	5854976	Identifier	e		5854925	1					
ANR	5854977	Identifier	ce		5854925	1					
ANR	5854978	Identifier	y		5854925	1					
ANR	5854979	AdditiveExpression	nplp -> o . p . y + nplp -> o . co . y		5854925	1		+			
ANR	5854980	MemberAccess	nplp -> o . p . y		5854925	0					
ANR	5854981	MemberAccess	nplp -> o . p		5854925	0					
ANR	5854982	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5854983	Identifier	nplp		5854925	0					
ANR	5854984	Identifier	o		5854925	1					
ANR	5854985	Identifier	p		5854925	1					
ANR	5854986	Identifier	y		5854925	1					
ANR	5854987	MemberAccess	nplp -> o . co . y		5854925	1					
ANR	5854988	MemberAccess	nplp -> o . co		5854925	0					
ANR	5854989	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5854990	Identifier	nplp		5854925	0					
ANR	5854991	Identifier	o		5854925	1					
ANR	5854992	Identifier	co		5854925	1					
ANR	5854993	Identifier	y		5854925	1					
ANR	5854994	ExpressionStatement	"ASSIGN_POINT ( & rjoin_points [ 0 ] , tp )"	2326:8:96842:96876	5854925	3	True				
ANR	5854995	CallExpression	"ASSIGN_POINT ( & rjoin_points [ 0 ] , tp )"		5854925	0					
ANR	5854996	Callee	ASSIGN_POINT		5854925	0					
ANR	5854997	Identifier	ASSIGN_POINT		5854925	0					
ANR	5854998	ArgumentList	& rjoin_points [ 0 ]		5854925	1					
ANR	5854999	Argument	& rjoin_points [ 0 ]		5854925	0					
ANR	5855000	UnaryOperationExpression	& rjoin_points [ 0 ]		5854925	0					
ANR	5855001	UnaryOperator	&		5854925	0					
ANR	5855002	ArrayIndexing	rjoin_points [ 0 ]		5854925	1					
ANR	5855003	Identifier	rjoin_points		5854925	0					
ANR	5855004	PrimaryExpression	0		5854925	1					
ANR	5855005	Argument	tp		5854925	1					
ANR	5855006	Identifier	tp		5854925	0					
ANR	5855007	ExpressionStatement	"ASSIGN_POINT ( & rjoin_points [ 1 ] , nplp -> o . co )"	2327:8:96886:96928	5854925	4	True				
ANR	5855008	CallExpression	"ASSIGN_POINT ( & rjoin_points [ 1 ] , nplp -> o . co )"		5854925	0					
ANR	5855009	Callee	ASSIGN_POINT		5854925	0					
ANR	5855010	Identifier	ASSIGN_POINT		5854925	0					
ANR	5855011	ArgumentList	& rjoin_points [ 1 ]		5854925	1					
ANR	5855012	Argument	& rjoin_points [ 1 ]		5854925	0					
ANR	5855013	UnaryOperationExpression	& rjoin_points [ 1 ]		5854925	0					
ANR	5855014	UnaryOperator	&		5854925	0					
ANR	5855015	ArrayIndexing	rjoin_points [ 1 ]		5854925	1					
ANR	5855016	Identifier	rjoin_points		5854925	0					
ANR	5855017	PrimaryExpression	1		5854925	1					
ANR	5855018	Argument	nplp -> o . co		5854925	1					
ANR	5855019	MemberAccess	nplp -> o . co		5854925	0					
ANR	5855020	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5855021	Identifier	nplp		5854925	0					
ANR	5855022	Identifier	o		5854925	1					
ANR	5855023	Identifier	co		5854925	1					
ANR	5855024	ReturnStatement	return 2 ;	2328:8:96938:96946	5854925	5	True				
ANR	5855025	PrimaryExpression	2		5854925	0					
ANR	5855026	ExpressionStatement	"ASSIGN_POINT ( & rjoin_points [ 0 ] , nplp -> o . co )"	2332:4:96993:97035	5854925	1	True				
ANR	5855027	CallExpression	"ASSIGN_POINT ( & rjoin_points [ 0 ] , nplp -> o . co )"		5854925	0					
ANR	5855028	Callee	ASSIGN_POINT		5854925	0					
ANR	5855029	Identifier	ASSIGN_POINT		5854925	0					
ANR	5855030	ArgumentList	& rjoin_points [ 0 ]		5854925	1					
ANR	5855031	Argument	& rjoin_points [ 0 ]		5854925	0					
ANR	5855032	UnaryOperationExpression	& rjoin_points [ 0 ]		5854925	0					
ANR	5855033	UnaryOperator	&		5854925	0					
ANR	5855034	ArrayIndexing	rjoin_points [ 0 ]		5854925	1					
ANR	5855035	Identifier	rjoin_points		5854925	0					
ANR	5855036	PrimaryExpression	0		5854925	1					
ANR	5855037	Argument	nplp -> o . co		5854925	1					
ANR	5855038	MemberAccess	nplp -> o . co		5854925	0					
ANR	5855039	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5855040	Identifier	nplp		5854925	0					
ANR	5855041	Identifier	o		5854925	1					
ANR	5855042	Identifier	co		5854925	1					
ANR	5855043	IfStatement	if ( join == gs_join_miter && ! ( fixed2long ( plp -> e . ce . x << 1 ) == fixed2long ( nplp -> o . co . x << 1 ) && fixed2long ( plp -> e . ce . y << 1 ) == fixed2long ( nplp -> o . co . y << 1 ) ) )		5854925	2					
ANR	5855044	Condition	join == gs_join_miter && ! ( fixed2long ( plp -> e . ce . x << 1 ) == fixed2long ( nplp -> o . co . x << 1 ) && fixed2long ( plp -> e . ce . y << 1 ) == fixed2long ( nplp -> o . co . y << 1 ) )	2339:8:97211:97382	5854925	0	True				
ANR	5855045	AndExpression	join == gs_join_miter && ! ( fixed2long ( plp -> e . ce . x << 1 ) == fixed2long ( nplp -> o . co . x << 1 ) && fixed2long ( plp -> e . ce . y << 1 ) == fixed2long ( nplp -> o . co . y << 1 ) )		5854925	0		&&			
ANR	5855046	EqualityExpression	join == gs_join_miter		5854925	0		==			
ANR	5855047	Identifier	join		5854925	0					
ANR	5855048	Identifier	gs_join_miter		5854925	1					
ANR	5855049	UnaryOperationExpression	! ( fixed2long ( plp -> e . ce . x << 1 ) == fixed2long ( nplp -> o . co . x << 1 ) && fixed2long ( plp -> e . ce . y << 1 ) == fixed2long ( nplp -> o . co . y << 1 ) )		5854925	1					
ANR	5855050	UnaryOperator	!		5854925	0					
ANR	5855051	AndExpression	fixed2long ( plp -> e . ce . x << 1 ) == fixed2long ( nplp -> o . co . x << 1 ) && fixed2long ( plp -> e . ce . y << 1 ) == fixed2long ( nplp -> o . co . y << 1 )		5854925	1		&&			
ANR	5855052	EqualityExpression	fixed2long ( plp -> e . ce . x << 1 ) == fixed2long ( nplp -> o . co . x << 1 )		5854925	0		==			
ANR	5855053	CallExpression	fixed2long ( plp -> e . ce . x << 1 )		5854925	0					
ANR	5855054	Callee	fixed2long		5854925	0					
ANR	5855055	Identifier	fixed2long		5854925	0					
ANR	5855056	ArgumentList	plp -> e . ce . x << 1		5854925	1					
ANR	5855057	Argument	plp -> e . ce . x << 1		5854925	0					
ANR	5855058	ShiftExpression	plp -> e . ce . x << 1		5854925	0		<<			
ANR	5855059	MemberAccess	plp -> e . ce . x		5854925	0					
ANR	5855060	MemberAccess	plp -> e . ce		5854925	0					
ANR	5855061	PtrMemberAccess	plp -> e		5854925	0					
ANR	5855062	Identifier	plp		5854925	0					
ANR	5855063	Identifier	e		5854925	1					
ANR	5855064	Identifier	ce		5854925	1					
ANR	5855065	Identifier	x		5854925	1					
ANR	5855066	PrimaryExpression	1		5854925	1					
ANR	5855067	CallExpression	fixed2long ( nplp -> o . co . x << 1 )		5854925	1					
ANR	5855068	Callee	fixed2long		5854925	0					
ANR	5855069	Identifier	fixed2long		5854925	0					
ANR	5855070	ArgumentList	nplp -> o . co . x << 1		5854925	1					
ANR	5855071	Argument	nplp -> o . co . x << 1		5854925	0					
ANR	5855072	ShiftExpression	nplp -> o . co . x << 1		5854925	0		<<			
ANR	5855073	MemberAccess	nplp -> o . co . x		5854925	0					
ANR	5855074	MemberAccess	nplp -> o . co		5854925	0					
ANR	5855075	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5855076	Identifier	nplp		5854925	0					
ANR	5855077	Identifier	o		5854925	1					
ANR	5855078	Identifier	co		5854925	1					
ANR	5855079	Identifier	x		5854925	1					
ANR	5855080	PrimaryExpression	1		5854925	1					
ANR	5855081	EqualityExpression	fixed2long ( plp -> e . ce . y << 1 ) == fixed2long ( nplp -> o . co . y << 1 )		5854925	1		==			
ANR	5855082	CallExpression	fixed2long ( plp -> e . ce . y << 1 )		5854925	0					
ANR	5855083	Callee	fixed2long		5854925	0					
ANR	5855084	Identifier	fixed2long		5854925	0					
ANR	5855085	ArgumentList	plp -> e . ce . y << 1		5854925	1					
ANR	5855086	Argument	plp -> e . ce . y << 1		5854925	0					
ANR	5855087	ShiftExpression	plp -> e . ce . y << 1		5854925	0		<<			
ANR	5855088	MemberAccess	plp -> e . ce . y		5854925	0					
ANR	5855089	MemberAccess	plp -> e . ce		5854925	0					
ANR	5855090	PtrMemberAccess	plp -> e		5854925	0					
ANR	5855091	Identifier	plp		5854925	0					
ANR	5855092	Identifier	e		5854925	1					
ANR	5855093	Identifier	ce		5854925	1					
ANR	5855094	Identifier	y		5854925	1					
ANR	5855095	PrimaryExpression	1		5854925	1					
ANR	5855096	CallExpression	fixed2long ( nplp -> o . co . y << 1 )		5854925	1					
ANR	5855097	Callee	fixed2long		5854925	0					
ANR	5855098	Identifier	fixed2long		5854925	0					
ANR	5855099	ArgumentList	nplp -> o . co . y << 1		5854925	1					
ANR	5855100	Argument	nplp -> o . co . y << 1		5854925	0					
ANR	5855101	ShiftExpression	nplp -> o . co . y << 1		5854925	0		<<			
ANR	5855102	MemberAccess	nplp -> o . co . y		5854925	0					
ANR	5855103	MemberAccess	nplp -> o . co		5854925	0					
ANR	5855104	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5855105	Identifier	nplp		5854925	0					
ANR	5855106	Identifier	o		5854925	1					
ANR	5855107	Identifier	co		5854925	1					
ANR	5855108	Identifier	y		5854925	1					
ANR	5855109	PrimaryExpression	1		5854925	1					
ANR	5855110	CompoundStatement		30:8:922:1038	5854925	1					
ANR	5855111	IdentifierDeclStatement	gs_fixed_point mpt ;	2343:8:97404:97422	5854925	0	True				
ANR	5855112	IdentifierDecl	mpt		5854925	0					
ANR	5855113	IdentifierDeclType	gs_fixed_point		5854925	0					
ANR	5855114	Identifier	mpt		5854925	1					
ANR	5855115	IdentifierDeclStatement	"int code = check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . ce , & nplp -> o . co , & mpt , false ) ;"	2344:8:97432:97548	5854925	1	True				
ANR	5855116	IdentifierDecl	"code = check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . ce , & nplp -> o . co , & mpt , false )"		5854925	0					
ANR	5855117	IdentifierDeclType	int		5854925	0					
ANR	5855118	Identifier	code		5854925	1					
ANR	5855119	AssignmentExpression	"code = check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . ce , & nplp -> o . co , & mpt , false )"		5854925	2		=			
ANR	5855120	Identifier	code		5854925	0					
ANR	5855121	CallExpression	"check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . ce , & nplp -> o . co , & mpt , false )"		5854925	1					
ANR	5855122	Callee	check_miter		5854925	0					
ANR	5855123	Identifier	check_miter		5854925	0					
ANR	5855124	ArgumentList	pgs_lp		5854925	1					
ANR	5855125	Argument	pgs_lp		5854925	0					
ANR	5855126	Identifier	pgs_lp		5854925	0					
ANR	5855127	Argument	plp		5854925	1					
ANR	5855128	Identifier	plp		5854925	0					
ANR	5855129	Argument	nplp		5854925	2					
ANR	5855130	Identifier	nplp		5854925	0					
ANR	5855131	Argument	pmat		5854925	3					
ANR	5855132	Identifier	pmat		5854925	0					
ANR	5855133	Argument	& plp -> e . ce		5854925	4					
ANR	5855134	UnaryOperationExpression	& plp -> e . ce		5854925	0					
ANR	5855135	UnaryOperator	&		5854925	0					
ANR	5855136	MemberAccess	plp -> e . ce		5854925	1					
ANR	5855137	PtrMemberAccess	plp -> e		5854925	0					
ANR	5855138	Identifier	plp		5854925	0					
ANR	5855139	Identifier	e		5854925	1					
ANR	5855140	Identifier	ce		5854925	1					
ANR	5855141	Argument	& nplp -> o . co		5854925	5					
ANR	5855142	UnaryOperationExpression	& nplp -> o . co		5854925	0					
ANR	5855143	UnaryOperator	&		5854925	0					
ANR	5855144	MemberAccess	nplp -> o . co		5854925	1					
ANR	5855145	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5855146	Identifier	nplp		5854925	0					
ANR	5855147	Identifier	o		5854925	1					
ANR	5855148	Identifier	co		5854925	1					
ANR	5855149	Argument	& mpt		5854925	6					
ANR	5855150	UnaryOperationExpression	& mpt		5854925	0					
ANR	5855151	UnaryOperator	&		5854925	0					
ANR	5855152	Identifier	mpt		5854925	1					
ANR	5855153	Argument	false		5854925	7					
ANR	5855154	Identifier	false		5854925	0					
ANR	5855155	IfStatement	if ( code < 0 )		5854925	2					
ANR	5855156	Condition	code < 0	2346:12:97562:97569	5854925	0	True				
ANR	5855157	RelationalExpression	code < 0		5854925	0		<			
ANR	5855158	Identifier	code		5854925	0					
ANR	5855159	PrimaryExpression	0		5854925	1					
ANR	5855160	ReturnStatement	return code ;	2347:12:97584:97595	5854925	1	True				
ANR	5855161	Identifier	code		5854925	0					
ANR	5855162	IfStatement	if ( code == 0 )		5854925	3					
ANR	5855163	Condition	code == 0	2348:12:97609:97617	5854925	0	True				
ANR	5855164	EqualityExpression	code == 0		5854925	0		==			
ANR	5855165	Identifier	code		5854925	0					
ANR	5855166	PrimaryExpression	0		5854925	1					
ANR	5855167	CompoundStatement		34:23:1110:1110	5854925	1					
ANR	5855168	ExpressionStatement	"ASSIGN_POINT ( & rjoin_points [ 0 ] , mpt )"	2349:12:97634:97669	5854925	0	True				
ANR	5855169	CallExpression	"ASSIGN_POINT ( & rjoin_points [ 0 ] , mpt )"		5854925	0					
ANR	5855170	Callee	ASSIGN_POINT		5854925	0					
ANR	5855171	Identifier	ASSIGN_POINT		5854925	0					
ANR	5855172	ArgumentList	& rjoin_points [ 0 ]		5854925	1					
ANR	5855173	Argument	& rjoin_points [ 0 ]		5854925	0					
ANR	5855174	UnaryOperationExpression	& rjoin_points [ 0 ]		5854925	0					
ANR	5855175	UnaryOperator	&		5854925	0					
ANR	5855176	ArrayIndexing	rjoin_points [ 0 ]		5854925	1					
ANR	5855177	Identifier	rjoin_points		5854925	0					
ANR	5855178	PrimaryExpression	0		5854925	1					
ANR	5855179	Argument	mpt		5854925	1					
ANR	5855180	Identifier	mpt		5854925	0					
ANR	5855181	ExpressionStatement	"ASSIGN_POINT ( & rjoin_points [ 1 ] , nplp -> o . co )"	2350:12:97683:97725	5854925	1	True				
ANR	5855182	CallExpression	"ASSIGN_POINT ( & rjoin_points [ 1 ] , nplp -> o . co )"		5854925	0					
ANR	5855183	Callee	ASSIGN_POINT		5854925	0					
ANR	5855184	Identifier	ASSIGN_POINT		5854925	0					
ANR	5855185	ArgumentList	& rjoin_points [ 1 ]		5854925	1					
ANR	5855186	Argument	& rjoin_points [ 1 ]		5854925	0					
ANR	5855187	UnaryOperationExpression	& rjoin_points [ 1 ]		5854925	0					
ANR	5855188	UnaryOperator	&		5854925	0					
ANR	5855189	ArrayIndexing	rjoin_points [ 1 ]		5854925	1					
ANR	5855190	Identifier	rjoin_points		5854925	0					
ANR	5855191	PrimaryExpression	1		5854925	1					
ANR	5855192	Argument	nplp -> o . co		5854925	1					
ANR	5855193	MemberAccess	nplp -> o . co		5854925	0					
ANR	5855194	PtrMemberAccess	nplp -> o		5854925	0					
ANR	5855195	Identifier	nplp		5854925	0					
ANR	5855196	Identifier	o		5854925	1					
ANR	5855197	Identifier	co		5854925	1					
ANR	5855198	ReturnStatement	return 2 ;	2351:12:97739:97747	5854925	2	True				
ANR	5855199	PrimaryExpression	2		5854925	0					
ANR	5855200	ReturnStatement	return 1 ;	2354:4:97769:97777	5854925	3	True				
ANR	5855201	PrimaryExpression	1		5854925	0					
ANR	5855202	ReturnType	static int		5854925	1					
ANR	5855203	Identifier	line_join_points_fast_cw		5854925	2					
ANR	5855204	ParameterList	"const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * rjoin_points , const gs_matrix * pmat , gs_line_join join"		5854925	3					
ANR	5855205	Parameter	const gx_line_params * pgs_lp	2310:25:96279:96307	5854925	0	True				
ANR	5855206	ParameterType	const gx_line_params *		5854925	0					
ANR	5855207	Identifier	pgs_lp		5854925	1					
ANR	5855208	Parameter	pl_ptr plp	2311:25:96335:96344	5854925	1	True				
ANR	5855209	ParameterType	pl_ptr		5854925	0					
ANR	5855210	Identifier	plp		5854925	1					
ANR	5855211	Parameter	pl_ptr nplp	2311:37:96347:96357	5854925	2	True				
ANR	5855212	ParameterType	pl_ptr		5854925	0					
ANR	5855213	Identifier	nplp		5854925	1					
ANR	5855214	Parameter	gs_fixed_point * rjoin_points	2312:25:96385:96413	5854925	3	True				
ANR	5855215	ParameterType	gs_fixed_point *		5854925	0					
ANR	5855216	Identifier	rjoin_points		5854925	1					
ANR	5855217	Parameter	const gs_matrix * pmat	2313:25:96441:96462	5854925	4	True				
ANR	5855218	ParameterType	const gs_matrix *		5854925	0					
ANR	5855219	Identifier	pmat		5854925	1					
ANR	5855220	Parameter	gs_line_join join	2314:25:96490:96506	5854925	5	True				
ANR	5855221	ParameterType	gs_line_join		5854925	0					
ANR	5855222	Identifier	join		5854925	1					
ANR	5855223	CFGEntryNode	ENTRY		5854925		True				
ANR	5855224	CFGExitNode	EXIT		5854925		True				
ANR	5855225	Symbol	nplp -> o . co		5854925						
ANR	5855226	Symbol	code		5854925						
ANR	5855227	Symbol	pmat		5854925						
ANR	5855228	Symbol	& nplp -> o		5854925						
ANR	5855229	Symbol	nplp -> o . p . x		5854925						
ANR	5855230	Symbol	nplp -> o . p . y		5854925						
ANR	5855231	Symbol	tp . y		5854925						
ANR	5855232	Symbol	tp . x		5854925						
ANR	5855233	Symbol	& plp -> e		5854925						
ANR	5855234	Symbol	& plp -> e . ce		5854925						
ANR	5855235	Symbol	& mpt		5854925						
ANR	5855236	Symbol	plp -> e . ce		5854925						
ANR	5855237	Symbol	nplp -> o		5854925						
ANR	5855238	Symbol	join		5854925						
ANR	5855239	Symbol	* nplp		5854925						
ANR	5855240	Symbol	* plp		5854925						
ANR	5855241	Symbol	& nplp -> o . co		5854925						
ANR	5855242	Symbol	false		5854925						
ANR	5855243	Symbol	gs_join_miter		5854925						
ANR	5855244	Symbol	check_miter		5854925						
ANR	5855245	Symbol	nplp -> o . co . x		5854925						
ANR	5855246	Symbol	nplp -> o . co . y		5854925						
ANR	5855247	Symbol	mpt		5854925						
ANR	5855248	Symbol	rjoin_points		5854925						
ANR	5855249	Symbol	plp -> e . ce . x		5854925						
ANR	5855250	Symbol	plp -> e . ce . y		5854925						
ANR	5855251	Symbol	fixed2long		5854925						
ANR	5855252	Symbol	plp		5854925						
ANR	5855253	Symbol	nplp		5854925						
ANR	5855254	Symbol	nplp -> o . p		5854925						
ANR	5855255	Symbol	gs_join_triangle		5854925						
ANR	5855256	Symbol	pgs_lp		5854925						
ANR	5855257	Symbol	plp -> e		5854925						
ANR	5855258	Symbol	tp		5854925						
ANR	5855259	Function	line_join_points_fast_ccw	2357:0:97782:99314							
ANR	5855260	FunctionDef	"line_join_points_fast_ccw (const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * join_points , const gs_matrix * pmat , gs_line_join join)"		5855259	0					
ANR	5855261	CompoundStatement		2363:0:98052:99314	5855259	0					
ANR	5855262	IfStatement	if ( join == gs_join_triangle )		5855259	0					
ANR	5855263	Condition	join == gs_join_triangle	2367:8:98201:98224	5855259	0	True				
ANR	5855264	EqualityExpression	join == gs_join_triangle		5855259	0		==			
ANR	5855265	Identifier	join		5855259	0					
ANR	5855266	Identifier	gs_join_triangle		5855259	1					
ANR	5855267	CompoundStatement		7:8:188:205	5855259	1					
ANR	5855268	IdentifierDeclStatement	gs_fixed_point tp ;	2369:8:98241:98258	5855259	0	True				
ANR	5855269	IdentifierDecl	tp		5855259	0					
ANR	5855270	IdentifierDeclType	gs_fixed_point		5855259	0					
ANR	5855271	Identifier	tp		5855259	1					
ANR	5855272	ExpressionStatement	tp . x = plp -> e . co . x - nplp -> o . p . x + nplp -> o . ce . x	2371:8:98269:98316	5855259	1	True				
ANR	5855273	AssignmentExpression	tp . x = plp -> e . co . x - nplp -> o . p . x + nplp -> o . ce . x		5855259	0		=			
ANR	5855274	MemberAccess	tp . x		5855259	0					
ANR	5855275	Identifier	tp		5855259	0					
ANR	5855276	Identifier	x		5855259	1					
ANR	5855277	AdditiveExpression	plp -> e . co . x - nplp -> o . p . x + nplp -> o . ce . x		5855259	1		-			
ANR	5855278	MemberAccess	plp -> e . co . x		5855259	0					
ANR	5855279	MemberAccess	plp -> e . co		5855259	0					
ANR	5855280	PtrMemberAccess	plp -> e		5855259	0					
ANR	5855281	Identifier	plp		5855259	0					
ANR	5855282	Identifier	e		5855259	1					
ANR	5855283	Identifier	co		5855259	1					
ANR	5855284	Identifier	x		5855259	1					
ANR	5855285	AdditiveExpression	nplp -> o . p . x + nplp -> o . ce . x		5855259	1		+			
ANR	5855286	MemberAccess	nplp -> o . p . x		5855259	0					
ANR	5855287	MemberAccess	nplp -> o . p		5855259	0					
ANR	5855288	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855289	Identifier	nplp		5855259	0					
ANR	5855290	Identifier	o		5855259	1					
ANR	5855291	Identifier	p		5855259	1					
ANR	5855292	Identifier	x		5855259	1					
ANR	5855293	MemberAccess	nplp -> o . ce . x		5855259	1					
ANR	5855294	MemberAccess	nplp -> o . ce		5855259	0					
ANR	5855295	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855296	Identifier	nplp		5855259	0					
ANR	5855297	Identifier	o		5855259	1					
ANR	5855298	Identifier	ce		5855259	1					
ANR	5855299	Identifier	x		5855259	1					
ANR	5855300	ExpressionStatement	tp . y = plp -> e . co . y - nplp -> o . p . y + nplp -> o . ce . y	2372:8:98326:98373	5855259	2	True				
ANR	5855301	AssignmentExpression	tp . y = plp -> e . co . y - nplp -> o . p . y + nplp -> o . ce . y		5855259	0		=			
ANR	5855302	MemberAccess	tp . y		5855259	0					
ANR	5855303	Identifier	tp		5855259	0					
ANR	5855304	Identifier	y		5855259	1					
ANR	5855305	AdditiveExpression	plp -> e . co . y - nplp -> o . p . y + nplp -> o . ce . y		5855259	1		-			
ANR	5855306	MemberAccess	plp -> e . co . y		5855259	0					
ANR	5855307	MemberAccess	plp -> e . co		5855259	0					
ANR	5855308	PtrMemberAccess	plp -> e		5855259	0					
ANR	5855309	Identifier	plp		5855259	0					
ANR	5855310	Identifier	e		5855259	1					
ANR	5855311	Identifier	co		5855259	1					
ANR	5855312	Identifier	y		5855259	1					
ANR	5855313	AdditiveExpression	nplp -> o . p . y + nplp -> o . ce . y		5855259	1		+			
ANR	5855314	MemberAccess	nplp -> o . p . y		5855259	0					
ANR	5855315	MemberAccess	nplp -> o . p		5855259	0					
ANR	5855316	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855317	Identifier	nplp		5855259	0					
ANR	5855318	Identifier	o		5855259	1					
ANR	5855319	Identifier	p		5855259	1					
ANR	5855320	Identifier	y		5855259	1					
ANR	5855321	MemberAccess	nplp -> o . ce . y		5855259	1					
ANR	5855322	MemberAccess	nplp -> o . ce		5855259	0					
ANR	5855323	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855324	Identifier	nplp		5855259	0					
ANR	5855325	Identifier	o		5855259	1					
ANR	5855326	Identifier	ce		5855259	1					
ANR	5855327	Identifier	y		5855259	1					
ANR	5855328	ExpressionStatement	"ASSIGN_POINT ( & join_points [ 0 ] , tp )"	2373:8:98383:98416	5855259	3	True				
ANR	5855329	CallExpression	"ASSIGN_POINT ( & join_points [ 0 ] , tp )"		5855259	0					
ANR	5855330	Callee	ASSIGN_POINT		5855259	0					
ANR	5855331	Identifier	ASSIGN_POINT		5855259	0					
ANR	5855332	ArgumentList	& join_points [ 0 ]		5855259	1					
ANR	5855333	Argument	& join_points [ 0 ]		5855259	0					
ANR	5855334	UnaryOperationExpression	& join_points [ 0 ]		5855259	0					
ANR	5855335	UnaryOperator	&		5855259	0					
ANR	5855336	ArrayIndexing	join_points [ 0 ]		5855259	1					
ANR	5855337	Identifier	join_points		5855259	0					
ANR	5855338	PrimaryExpression	0		5855259	1					
ANR	5855339	Argument	tp		5855259	1					
ANR	5855340	Identifier	tp		5855259	0					
ANR	5855341	ExpressionStatement	"ASSIGN_POINT ( & join_points [ 1 ] , nplp -> o . ce )"	2374:8:98426:98467	5855259	4	True				
ANR	5855342	CallExpression	"ASSIGN_POINT ( & join_points [ 1 ] , nplp -> o . ce )"		5855259	0					
ANR	5855343	Callee	ASSIGN_POINT		5855259	0					
ANR	5855344	Identifier	ASSIGN_POINT		5855259	0					
ANR	5855345	ArgumentList	& join_points [ 1 ]		5855259	1					
ANR	5855346	Argument	& join_points [ 1 ]		5855259	0					
ANR	5855347	UnaryOperationExpression	& join_points [ 1 ]		5855259	0					
ANR	5855348	UnaryOperator	&		5855259	0					
ANR	5855349	ArrayIndexing	join_points [ 1 ]		5855259	1					
ANR	5855350	Identifier	join_points		5855259	0					
ANR	5855351	PrimaryExpression	1		5855259	1					
ANR	5855352	Argument	nplp -> o . ce		5855259	1					
ANR	5855353	MemberAccess	nplp -> o . ce		5855259	0					
ANR	5855354	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855355	Identifier	nplp		5855259	0					
ANR	5855356	Identifier	o		5855259	1					
ANR	5855357	Identifier	ce		5855259	1					
ANR	5855358	ReturnStatement	return 2 ;	2375:8:98477:98485	5855259	5	True				
ANR	5855359	PrimaryExpression	2		5855259	0					
ANR	5855360	ExpressionStatement	"ASSIGN_POINT ( & join_points [ 0 ] , nplp -> o . ce )"	2379:4:98532:98573	5855259	1	True				
ANR	5855361	CallExpression	"ASSIGN_POINT ( & join_points [ 0 ] , nplp -> o . ce )"		5855259	0					
ANR	5855362	Callee	ASSIGN_POINT		5855259	0					
ANR	5855363	Identifier	ASSIGN_POINT		5855259	0					
ANR	5855364	ArgumentList	& join_points [ 0 ]		5855259	1					
ANR	5855365	Argument	& join_points [ 0 ]		5855259	0					
ANR	5855366	UnaryOperationExpression	& join_points [ 0 ]		5855259	0					
ANR	5855367	UnaryOperator	&		5855259	0					
ANR	5855368	ArrayIndexing	join_points [ 0 ]		5855259	1					
ANR	5855369	Identifier	join_points		5855259	0					
ANR	5855370	PrimaryExpression	0		5855259	1					
ANR	5855371	Argument	nplp -> o . ce		5855259	1					
ANR	5855372	MemberAccess	nplp -> o . ce		5855259	0					
ANR	5855373	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855374	Identifier	nplp		5855259	0					
ANR	5855375	Identifier	o		5855259	1					
ANR	5855376	Identifier	ce		5855259	1					
ANR	5855377	IfStatement	if ( join == gs_join_miter && ! ( fixed2long ( plp -> e . co . x << 1 ) == fixed2long ( nplp -> o . ce . x << 1 ) && fixed2long ( plp -> e . co . y << 1 ) == fixed2long ( nplp -> o . ce . y << 1 ) ) )		5855259	2					
ANR	5855378	Condition	join == gs_join_miter && ! ( fixed2long ( plp -> e . co . x << 1 ) == fixed2long ( nplp -> o . ce . x << 1 ) && fixed2long ( plp -> e . co . y << 1 ) == fixed2long ( nplp -> o . ce . y << 1 ) )	2386:8:98749:98920	5855259	0	True				
ANR	5855379	AndExpression	join == gs_join_miter && ! ( fixed2long ( plp -> e . co . x << 1 ) == fixed2long ( nplp -> o . ce . x << 1 ) && fixed2long ( plp -> e . co . y << 1 ) == fixed2long ( nplp -> o . ce . y << 1 ) )		5855259	0		&&			
ANR	5855380	EqualityExpression	join == gs_join_miter		5855259	0		==			
ANR	5855381	Identifier	join		5855259	0					
ANR	5855382	Identifier	gs_join_miter		5855259	1					
ANR	5855383	UnaryOperationExpression	! ( fixed2long ( plp -> e . co . x << 1 ) == fixed2long ( nplp -> o . ce . x << 1 ) && fixed2long ( plp -> e . co . y << 1 ) == fixed2long ( nplp -> o . ce . y << 1 ) )		5855259	1					
ANR	5855384	UnaryOperator	!		5855259	0					
ANR	5855385	AndExpression	fixed2long ( plp -> e . co . x << 1 ) == fixed2long ( nplp -> o . ce . x << 1 ) && fixed2long ( plp -> e . co . y << 1 ) == fixed2long ( nplp -> o . ce . y << 1 )		5855259	1		&&			
ANR	5855386	EqualityExpression	fixed2long ( plp -> e . co . x << 1 ) == fixed2long ( nplp -> o . ce . x << 1 )		5855259	0		==			
ANR	5855387	CallExpression	fixed2long ( plp -> e . co . x << 1 )		5855259	0					
ANR	5855388	Callee	fixed2long		5855259	0					
ANR	5855389	Identifier	fixed2long		5855259	0					
ANR	5855390	ArgumentList	plp -> e . co . x << 1		5855259	1					
ANR	5855391	Argument	plp -> e . co . x << 1		5855259	0					
ANR	5855392	ShiftExpression	plp -> e . co . x << 1		5855259	0		<<			
ANR	5855393	MemberAccess	plp -> e . co . x		5855259	0					
ANR	5855394	MemberAccess	plp -> e . co		5855259	0					
ANR	5855395	PtrMemberAccess	plp -> e		5855259	0					
ANR	5855396	Identifier	plp		5855259	0					
ANR	5855397	Identifier	e		5855259	1					
ANR	5855398	Identifier	co		5855259	1					
ANR	5855399	Identifier	x		5855259	1					
ANR	5855400	PrimaryExpression	1		5855259	1					
ANR	5855401	CallExpression	fixed2long ( nplp -> o . ce . x << 1 )		5855259	1					
ANR	5855402	Callee	fixed2long		5855259	0					
ANR	5855403	Identifier	fixed2long		5855259	0					
ANR	5855404	ArgumentList	nplp -> o . ce . x << 1		5855259	1					
ANR	5855405	Argument	nplp -> o . ce . x << 1		5855259	0					
ANR	5855406	ShiftExpression	nplp -> o . ce . x << 1		5855259	0		<<			
ANR	5855407	MemberAccess	nplp -> o . ce . x		5855259	0					
ANR	5855408	MemberAccess	nplp -> o . ce		5855259	0					
ANR	5855409	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855410	Identifier	nplp		5855259	0					
ANR	5855411	Identifier	o		5855259	1					
ANR	5855412	Identifier	ce		5855259	1					
ANR	5855413	Identifier	x		5855259	1					
ANR	5855414	PrimaryExpression	1		5855259	1					
ANR	5855415	EqualityExpression	fixed2long ( plp -> e . co . y << 1 ) == fixed2long ( nplp -> o . ce . y << 1 )		5855259	1		==			
ANR	5855416	CallExpression	fixed2long ( plp -> e . co . y << 1 )		5855259	0					
ANR	5855417	Callee	fixed2long		5855259	0					
ANR	5855418	Identifier	fixed2long		5855259	0					
ANR	5855419	ArgumentList	plp -> e . co . y << 1		5855259	1					
ANR	5855420	Argument	plp -> e . co . y << 1		5855259	0					
ANR	5855421	ShiftExpression	plp -> e . co . y << 1		5855259	0		<<			
ANR	5855422	MemberAccess	plp -> e . co . y		5855259	0					
ANR	5855423	MemberAccess	plp -> e . co		5855259	0					
ANR	5855424	PtrMemberAccess	plp -> e		5855259	0					
ANR	5855425	Identifier	plp		5855259	0					
ANR	5855426	Identifier	e		5855259	1					
ANR	5855427	Identifier	co		5855259	1					
ANR	5855428	Identifier	y		5855259	1					
ANR	5855429	PrimaryExpression	1		5855259	1					
ANR	5855430	CallExpression	fixed2long ( nplp -> o . ce . y << 1 )		5855259	1					
ANR	5855431	Callee	fixed2long		5855259	0					
ANR	5855432	Identifier	fixed2long		5855259	0					
ANR	5855433	ArgumentList	nplp -> o . ce . y << 1		5855259	1					
ANR	5855434	Argument	nplp -> o . ce . y << 1		5855259	0					
ANR	5855435	ShiftExpression	nplp -> o . ce . y << 1		5855259	0		<<			
ANR	5855436	MemberAccess	nplp -> o . ce . y		5855259	0					
ANR	5855437	MemberAccess	nplp -> o . ce		5855259	0					
ANR	5855438	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855439	Identifier	nplp		5855259	0					
ANR	5855440	Identifier	o		5855259	1					
ANR	5855441	Identifier	ce		5855259	1					
ANR	5855442	Identifier	y		5855259	1					
ANR	5855443	PrimaryExpression	1		5855259	1					
ANR	5855444	CompoundStatement		29:8:917:1032	5855259	1					
ANR	5855445	IdentifierDeclStatement	gs_fixed_point mpt ;	2390:8:98942:98960	5855259	0	True				
ANR	5855446	IdentifierDecl	mpt		5855259	0					
ANR	5855447	IdentifierDeclType	gs_fixed_point		5855259	0					
ANR	5855448	Identifier	mpt		5855259	1					
ANR	5855449	IdentifierDeclStatement	"int code = check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . co , & nplp -> o . ce , & mpt , true ) ;"	2391:8:98970:99085	5855259	1	True				
ANR	5855450	IdentifierDecl	"code = check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . co , & nplp -> o . ce , & mpt , true )"		5855259	0					
ANR	5855451	IdentifierDeclType	int		5855259	0					
ANR	5855452	Identifier	code		5855259	1					
ANR	5855453	AssignmentExpression	"code = check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . co , & nplp -> o . ce , & mpt , true )"		5855259	2		=			
ANR	5855454	Identifier	code		5855259	0					
ANR	5855455	CallExpression	"check_miter ( pgs_lp , plp , nplp , pmat , & plp -> e . co , & nplp -> o . ce , & mpt , true )"		5855259	1					
ANR	5855456	Callee	check_miter		5855259	0					
ANR	5855457	Identifier	check_miter		5855259	0					
ANR	5855458	ArgumentList	pgs_lp		5855259	1					
ANR	5855459	Argument	pgs_lp		5855259	0					
ANR	5855460	Identifier	pgs_lp		5855259	0					
ANR	5855461	Argument	plp		5855259	1					
ANR	5855462	Identifier	plp		5855259	0					
ANR	5855463	Argument	nplp		5855259	2					
ANR	5855464	Identifier	nplp		5855259	0					
ANR	5855465	Argument	pmat		5855259	3					
ANR	5855466	Identifier	pmat		5855259	0					
ANR	5855467	Argument	& plp -> e . co		5855259	4					
ANR	5855468	UnaryOperationExpression	& plp -> e . co		5855259	0					
ANR	5855469	UnaryOperator	&		5855259	0					
ANR	5855470	MemberAccess	plp -> e . co		5855259	1					
ANR	5855471	PtrMemberAccess	plp -> e		5855259	0					
ANR	5855472	Identifier	plp		5855259	0					
ANR	5855473	Identifier	e		5855259	1					
ANR	5855474	Identifier	co		5855259	1					
ANR	5855475	Argument	& nplp -> o . ce		5855259	5					
ANR	5855476	UnaryOperationExpression	& nplp -> o . ce		5855259	0					
ANR	5855477	UnaryOperator	&		5855259	0					
ANR	5855478	MemberAccess	nplp -> o . ce		5855259	1					
ANR	5855479	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855480	Identifier	nplp		5855259	0					
ANR	5855481	Identifier	o		5855259	1					
ANR	5855482	Identifier	ce		5855259	1					
ANR	5855483	Argument	& mpt		5855259	6					
ANR	5855484	UnaryOperationExpression	& mpt		5855259	0					
ANR	5855485	UnaryOperator	&		5855259	0					
ANR	5855486	Identifier	mpt		5855259	1					
ANR	5855487	Argument	true		5855259	7					
ANR	5855488	Identifier	true		5855259	0					
ANR	5855489	IfStatement	if ( code < 0 )		5855259	2					
ANR	5855490	Condition	code < 0	2393:12:99099:99106	5855259	0	True				
ANR	5855491	RelationalExpression	code < 0		5855259	0		<			
ANR	5855492	Identifier	code		5855259	0					
ANR	5855493	PrimaryExpression	0		5855259	1					
ANR	5855494	ReturnStatement	return code ;	2394:12:99121:99132	5855259	1	True				
ANR	5855495	Identifier	code		5855259	0					
ANR	5855496	IfStatement	if ( code == 0 )		5855259	3					
ANR	5855497	Condition	code == 0	2395:12:99146:99154	5855259	0	True				
ANR	5855498	EqualityExpression	code == 0		5855259	0		==			
ANR	5855499	Identifier	code		5855259	0					
ANR	5855500	PrimaryExpression	0		5855259	1					
ANR	5855501	CompoundStatement		33:23:1104:1104	5855259	1					
ANR	5855502	ExpressionStatement	"ASSIGN_POINT ( & join_points [ 0 ] , mpt )"	2396:12:99171:99205	5855259	0	True				
ANR	5855503	CallExpression	"ASSIGN_POINT ( & join_points [ 0 ] , mpt )"		5855259	0					
ANR	5855504	Callee	ASSIGN_POINT		5855259	0					
ANR	5855505	Identifier	ASSIGN_POINT		5855259	0					
ANR	5855506	ArgumentList	& join_points [ 0 ]		5855259	1					
ANR	5855507	Argument	& join_points [ 0 ]		5855259	0					
ANR	5855508	UnaryOperationExpression	& join_points [ 0 ]		5855259	0					
ANR	5855509	UnaryOperator	&		5855259	0					
ANR	5855510	ArrayIndexing	join_points [ 0 ]		5855259	1					
ANR	5855511	Identifier	join_points		5855259	0					
ANR	5855512	PrimaryExpression	0		5855259	1					
ANR	5855513	Argument	mpt		5855259	1					
ANR	5855514	Identifier	mpt		5855259	0					
ANR	5855515	ExpressionStatement	"ASSIGN_POINT ( & join_points [ 1 ] , nplp -> o . ce )"	2397:12:99219:99260	5855259	1	True				
ANR	5855516	CallExpression	"ASSIGN_POINT ( & join_points [ 1 ] , nplp -> o . ce )"		5855259	0					
ANR	5855517	Callee	ASSIGN_POINT		5855259	0					
ANR	5855518	Identifier	ASSIGN_POINT		5855259	0					
ANR	5855519	ArgumentList	& join_points [ 1 ]		5855259	1					
ANR	5855520	Argument	& join_points [ 1 ]		5855259	0					
ANR	5855521	UnaryOperationExpression	& join_points [ 1 ]		5855259	0					
ANR	5855522	UnaryOperator	&		5855259	0					
ANR	5855523	ArrayIndexing	join_points [ 1 ]		5855259	1					
ANR	5855524	Identifier	join_points		5855259	0					
ANR	5855525	PrimaryExpression	1		5855259	1					
ANR	5855526	Argument	nplp -> o . ce		5855259	1					
ANR	5855527	MemberAccess	nplp -> o . ce		5855259	0					
ANR	5855528	PtrMemberAccess	nplp -> o		5855259	0					
ANR	5855529	Identifier	nplp		5855259	0					
ANR	5855530	Identifier	o		5855259	1					
ANR	5855531	Identifier	ce		5855259	1					
ANR	5855532	ReturnStatement	return 2 ;	2398:12:99274:99282	5855259	2	True				
ANR	5855533	PrimaryExpression	2		5855259	0					
ANR	5855534	ReturnStatement	return 1 ;	2401:4:99304:99312	5855259	3	True				
ANR	5855535	PrimaryExpression	1		5855259	0					
ANR	5855536	ReturnType	static int		5855259	1					
ANR	5855537	Identifier	line_join_points_fast_ccw		5855259	2					
ANR	5855538	ParameterList	"const gx_line_params * pgs_lp , pl_ptr plp , pl_ptr nplp , gs_fixed_point * join_points , const gs_matrix * pmat , gs_line_join join"		5855259	3					
ANR	5855539	Parameter	const gx_line_params * pgs_lp	2358:26:97819:97847	5855259	0	True				
ANR	5855540	ParameterType	const gx_line_params *		5855259	0					
ANR	5855541	Identifier	pgs_lp		5855259	1					
ANR	5855542	Parameter	pl_ptr plp	2359:26:97876:97885	5855259	1	True				
ANR	5855543	ParameterType	pl_ptr		5855259	0					
ANR	5855544	Identifier	plp		5855259	1					
ANR	5855545	Parameter	pl_ptr nplp	2359:38:97888:97898	5855259	2	True				
ANR	5855546	ParameterType	pl_ptr		5855259	0					
ANR	5855547	Identifier	nplp		5855259	1					
ANR	5855548	Parameter	gs_fixed_point * join_points	2360:26:97927:97954	5855259	3	True				
ANR	5855549	ParameterType	gs_fixed_point *		5855259	0					
ANR	5855550	Identifier	join_points		5855259	1					
ANR	5855551	Parameter	const gs_matrix * pmat	2361:26:97983:98004	5855259	4	True				
ANR	5855552	ParameterType	const gs_matrix *		5855259	0					
ANR	5855553	Identifier	pmat		5855259	1					
ANR	5855554	Parameter	gs_line_join join	2362:26:98033:98049	5855259	5	True				
ANR	5855555	ParameterType	gs_line_join		5855259	0					
ANR	5855556	Identifier	join		5855259	1					
ANR	5855557	CFGEntryNode	ENTRY		5855259		True				
ANR	5855558	CFGExitNode	EXIT		5855259		True				
ANR	5855559	Symbol	code		5855259						
ANR	5855560	Symbol	pmat		5855259						
ANR	5855561	Symbol	& nplp -> o		5855259						
ANR	5855562	Symbol	nplp -> o . p . x		5855259						
ANR	5855563	Symbol	nplp -> o . p . y		5855259						
ANR	5855564	Symbol	tp . y		5855259						
ANR	5855565	Symbol	tp . x		5855259						
ANR	5855566	Symbol	& plp -> e		5855259						
ANR	5855567	Symbol	& mpt		5855259						
ANR	5855568	Symbol	plp -> e . co . y		5855259						
ANR	5855569	Symbol	plp -> e . co . x		5855259						
ANR	5855570	Symbol	plp -> e . co		5855259						
ANR	5855571	Symbol	nplp -> o . ce . y		5855259						
ANR	5855572	Symbol	nplp -> o . ce . x		5855259						
ANR	5855573	Symbol	nplp -> o		5855259						
ANR	5855574	Symbol	join		5855259						
ANR	5855575	Symbol	* nplp		5855259						
ANR	5855576	Symbol	* plp		5855259						
ANR	5855577	Symbol	join_points		5855259						
ANR	5855578	Symbol	gs_join_miter		5855259						
ANR	5855579	Symbol	check_miter		5855259						
ANR	5855580	Symbol	& nplp -> o . ce		5855259						
ANR	5855581	Symbol	mpt		5855259						
ANR	5855582	Symbol	fixed2long		5855259						
ANR	5855583	Symbol	plp		5855259						
ANR	5855584	Symbol	nplp		5855259						
ANR	5855585	Symbol	nplp -> o . p		5855259						
ANR	5855586	Symbol	gs_join_triangle		5855259						
ANR	5855587	Symbol	& plp -> e . co		5855259						
ANR	5855588	Symbol	pgs_lp		5855259						
ANR	5855589	Symbol	true		5855259						
ANR	5855590	Symbol	plp -> e		5855259						
ANR	5855591	Symbol	tp		5855259						
ANR	5855592	Symbol	nplp -> o . ce		5855259						
ANR	5855593	Function	compute_caps	2407:0:99486:100418							
ANR	5855594	FunctionDef	compute_caps (pl_ptr plp)		5855593	0					
ANR	5855595	CompoundStatement		2409:0:99523:100418	5855593	0					
ANR	5855596	IdentifierDeclStatement	fixed wx2 = plp -> width . x ;	2410:4:99529:99553	5855593	0	True				
ANR	5855597	IdentifierDecl	wx2 = plp -> width . x		5855593	0					
ANR	5855598	IdentifierDeclType	fixed		5855593	0					
ANR	5855599	Identifier	wx2		5855593	1					
ANR	5855600	AssignmentExpression	wx2 = plp -> width . x		5855593	2		=			
ANR	5855601	Identifier	wx2		5855593	0					
ANR	5855602	MemberAccess	plp -> width . x		5855593	1					
ANR	5855603	PtrMemberAccess	plp -> width		5855593	0					
ANR	5855604	Identifier	plp		5855593	0					
ANR	5855605	Identifier	width		5855593	1					
ANR	5855606	Identifier	x		5855593	1					
ANR	5855607	IdentifierDeclStatement	fixed wy2 = plp -> width . y ;	2411:4:99559:99583	5855593	1	True				
ANR	5855608	IdentifierDecl	wy2 = plp -> width . y		5855593	0					
ANR	5855609	IdentifierDeclType	fixed		5855593	0					
ANR	5855610	Identifier	wy2		5855593	1					
ANR	5855611	AssignmentExpression	wy2 = plp -> width . y		5855593	2		=			
ANR	5855612	Identifier	wy2		5855593	0					
ANR	5855613	MemberAccess	plp -> width . y		5855593	1					
ANR	5855614	PtrMemberAccess	plp -> width		5855593	0					
ANR	5855615	Identifier	plp		5855593	0					
ANR	5855616	Identifier	width		5855593	1					
ANR	5855617	Identifier	y		5855593	1					
ANR	5855618	ExpressionStatement	"plp -> o . co . x = plp -> o . p . x + wx2 , plp -> o . co . y = plp -> o . p . y + wy2"	2413:4:99590:99652	5855593	2	True				
ANR	5855619	Expression	"plp -> o . co . x = plp -> o . p . x + wx2 , plp -> o . co . y = plp -> o . p . y + wy2"		5855593	0					
ANR	5855620	AssignmentExpression	plp -> o . co . x = plp -> o . p . x + wx2		5855593	0		=			
ANR	5855621	MemberAccess	plp -> o . co . x		5855593	0					
ANR	5855622	MemberAccess	plp -> o . co		5855593	0					
ANR	5855623	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855624	Identifier	plp		5855593	0					
ANR	5855625	Identifier	o		5855593	1					
ANR	5855626	Identifier	co		5855593	1					
ANR	5855627	Identifier	x		5855593	1					
ANR	5855628	AdditiveExpression	plp -> o . p . x + wx2		5855593	1		+			
ANR	5855629	MemberAccess	plp -> o . p . x		5855593	0					
ANR	5855630	MemberAccess	plp -> o . p		5855593	0					
ANR	5855631	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855632	Identifier	plp		5855593	0					
ANR	5855633	Identifier	o		5855593	1					
ANR	5855634	Identifier	p		5855593	1					
ANR	5855635	Identifier	x		5855593	1					
ANR	5855636	Identifier	wx2		5855593	1					
ANR	5855637	AssignmentExpression	plp -> o . co . y = plp -> o . p . y + wy2		5855593	1		=			
ANR	5855638	MemberAccess	plp -> o . co . y		5855593	0					
ANR	5855639	MemberAccess	plp -> o . co		5855593	0					
ANR	5855640	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855641	Identifier	plp		5855593	0					
ANR	5855642	Identifier	o		5855593	1					
ANR	5855643	Identifier	co		5855593	1					
ANR	5855644	Identifier	y		5855593	1					
ANR	5855645	AdditiveExpression	plp -> o . p . y + wy2		5855593	1		+			
ANR	5855646	MemberAccess	plp -> o . p . y		5855593	0					
ANR	5855647	MemberAccess	plp -> o . p		5855593	0					
ANR	5855648	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855649	Identifier	plp		5855593	0					
ANR	5855650	Identifier	o		5855593	1					
ANR	5855651	Identifier	p		5855593	1					
ANR	5855652	Identifier	y		5855593	1					
ANR	5855653	Identifier	wy2		5855593	1					
ANR	5855654	ExpressionStatement	"plp -> o . cdelta . x = - plp -> e . cdelta . x , plp -> o . cdelta . y = - plp -> e . cdelta . y"	2414:4:99658:99736	5855593	3	True				
ANR	5855655	Expression	"plp -> o . cdelta . x = - plp -> e . cdelta . x , plp -> o . cdelta . y = - plp -> e . cdelta . y"		5855593	0					
ANR	5855656	AssignmentExpression	plp -> o . cdelta . x = - plp -> e . cdelta . x		5855593	0		=			
ANR	5855657	MemberAccess	plp -> o . cdelta . x		5855593	0					
ANR	5855658	MemberAccess	plp -> o . cdelta		5855593	0					
ANR	5855659	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855660	Identifier	plp		5855593	0					
ANR	5855661	Identifier	o		5855593	1					
ANR	5855662	Identifier	cdelta		5855593	1					
ANR	5855663	Identifier	x		5855593	1					
ANR	5855664	UnaryOperationExpression	- plp -> e . cdelta . x		5855593	1					
ANR	5855665	UnaryOperator	-		5855593	0					
ANR	5855666	MemberAccess	plp -> e . cdelta . x		5855593	1					
ANR	5855667	MemberAccess	plp -> e . cdelta		5855593	0					
ANR	5855668	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855669	Identifier	plp		5855593	0					
ANR	5855670	Identifier	e		5855593	1					
ANR	5855671	Identifier	cdelta		5855593	1					
ANR	5855672	Identifier	x		5855593	1					
ANR	5855673	AssignmentExpression	plp -> o . cdelta . y = - plp -> e . cdelta . y		5855593	1		=			
ANR	5855674	MemberAccess	plp -> o . cdelta . y		5855593	0					
ANR	5855675	MemberAccess	plp -> o . cdelta		5855593	0					
ANR	5855676	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855677	Identifier	plp		5855593	0					
ANR	5855678	Identifier	o		5855593	1					
ANR	5855679	Identifier	cdelta		5855593	1					
ANR	5855680	Identifier	y		5855593	1					
ANR	5855681	UnaryOperationExpression	- plp -> e . cdelta . y		5855593	1					
ANR	5855682	UnaryOperator	-		5855593	0					
ANR	5855683	MemberAccess	plp -> e . cdelta . y		5855593	1					
ANR	5855684	MemberAccess	plp -> e . cdelta		5855593	0					
ANR	5855685	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855686	Identifier	plp		5855593	0					
ANR	5855687	Identifier	e		5855593	1					
ANR	5855688	Identifier	cdelta		5855593	1					
ANR	5855689	Identifier	y		5855593	1					
ANR	5855690	ExpressionStatement	"plp -> o . ce . x = plp -> o . p . x - wx2 , plp -> o . ce . y = plp -> o . p . y - wy2"	2416:4:99742:99804	5855593	4	True				
ANR	5855691	Expression	"plp -> o . ce . x = plp -> o . p . x - wx2 , plp -> o . ce . y = plp -> o . p . y - wy2"		5855593	0					
ANR	5855692	AssignmentExpression	plp -> o . ce . x = plp -> o . p . x - wx2		5855593	0		=			
ANR	5855693	MemberAccess	plp -> o . ce . x		5855593	0					
ANR	5855694	MemberAccess	plp -> o . ce		5855593	0					
ANR	5855695	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855696	Identifier	plp		5855593	0					
ANR	5855697	Identifier	o		5855593	1					
ANR	5855698	Identifier	ce		5855593	1					
ANR	5855699	Identifier	x		5855593	1					
ANR	5855700	AdditiveExpression	plp -> o . p . x - wx2		5855593	1		-			
ANR	5855701	MemberAccess	plp -> o . p . x		5855593	0					
ANR	5855702	MemberAccess	plp -> o . p		5855593	0					
ANR	5855703	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855704	Identifier	plp		5855593	0					
ANR	5855705	Identifier	o		5855593	1					
ANR	5855706	Identifier	p		5855593	1					
ANR	5855707	Identifier	x		5855593	1					
ANR	5855708	Identifier	wx2		5855593	1					
ANR	5855709	AssignmentExpression	plp -> o . ce . y = plp -> o . p . y - wy2		5855593	1		=			
ANR	5855710	MemberAccess	plp -> o . ce . y		5855593	0					
ANR	5855711	MemberAccess	plp -> o . ce		5855593	0					
ANR	5855712	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855713	Identifier	plp		5855593	0					
ANR	5855714	Identifier	o		5855593	1					
ANR	5855715	Identifier	ce		5855593	1					
ANR	5855716	Identifier	y		5855593	1					
ANR	5855717	AdditiveExpression	plp -> o . p . y - wy2		5855593	1		-			
ANR	5855718	MemberAccess	plp -> o . p . y		5855593	0					
ANR	5855719	MemberAccess	plp -> o . p		5855593	0					
ANR	5855720	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855721	Identifier	plp		5855593	0					
ANR	5855722	Identifier	o		5855593	1					
ANR	5855723	Identifier	p		5855593	1					
ANR	5855724	Identifier	y		5855593	1					
ANR	5855725	Identifier	wy2		5855593	1					
ANR	5855726	ExpressionStatement	"plp -> e . co . x = plp -> e . p . x - wx2 , plp -> e . co . y = plp -> e . p . y - wy2"	2417:4:99810:99872	5855593	5	True				
ANR	5855727	Expression	"plp -> e . co . x = plp -> e . p . x - wx2 , plp -> e . co . y = plp -> e . p . y - wy2"		5855593	0					
ANR	5855728	AssignmentExpression	plp -> e . co . x = plp -> e . p . x - wx2		5855593	0		=			
ANR	5855729	MemberAccess	plp -> e . co . x		5855593	0					
ANR	5855730	MemberAccess	plp -> e . co		5855593	0					
ANR	5855731	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855732	Identifier	plp		5855593	0					
ANR	5855733	Identifier	e		5855593	1					
ANR	5855734	Identifier	co		5855593	1					
ANR	5855735	Identifier	x		5855593	1					
ANR	5855736	AdditiveExpression	plp -> e . p . x - wx2		5855593	1		-			
ANR	5855737	MemberAccess	plp -> e . p . x		5855593	0					
ANR	5855738	MemberAccess	plp -> e . p		5855593	0					
ANR	5855739	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855740	Identifier	plp		5855593	0					
ANR	5855741	Identifier	e		5855593	1					
ANR	5855742	Identifier	p		5855593	1					
ANR	5855743	Identifier	x		5855593	1					
ANR	5855744	Identifier	wx2		5855593	1					
ANR	5855745	AssignmentExpression	plp -> e . co . y = plp -> e . p . y - wy2		5855593	1		=			
ANR	5855746	MemberAccess	plp -> e . co . y		5855593	0					
ANR	5855747	MemberAccess	plp -> e . co		5855593	0					
ANR	5855748	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855749	Identifier	plp		5855593	0					
ANR	5855750	Identifier	e		5855593	1					
ANR	5855751	Identifier	co		5855593	1					
ANR	5855752	Identifier	y		5855593	1					
ANR	5855753	AdditiveExpression	plp -> e . p . y - wy2		5855593	1		-			
ANR	5855754	MemberAccess	plp -> e . p . y		5855593	0					
ANR	5855755	MemberAccess	plp -> e . p		5855593	0					
ANR	5855756	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855757	Identifier	plp		5855593	0					
ANR	5855758	Identifier	e		5855593	1					
ANR	5855759	Identifier	p		5855593	1					
ANR	5855760	Identifier	y		5855593	1					
ANR	5855761	Identifier	wy2		5855593	1					
ANR	5855762	ExpressionStatement	"plp -> e . ce . x = plp -> e . p . x + wx2 , plp -> e . ce . y = plp -> e . p . y + wy2"	2418:4:99878:99940	5855593	6	True				
ANR	5855763	Expression	"plp -> e . ce . x = plp -> e . p . x + wx2 , plp -> e . ce . y = plp -> e . p . y + wy2"		5855593	0					
ANR	5855764	AssignmentExpression	plp -> e . ce . x = plp -> e . p . x + wx2		5855593	0		=			
ANR	5855765	MemberAccess	plp -> e . ce . x		5855593	0					
ANR	5855766	MemberAccess	plp -> e . ce		5855593	0					
ANR	5855767	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855768	Identifier	plp		5855593	0					
ANR	5855769	Identifier	e		5855593	1					
ANR	5855770	Identifier	ce		5855593	1					
ANR	5855771	Identifier	x		5855593	1					
ANR	5855772	AdditiveExpression	plp -> e . p . x + wx2		5855593	1		+			
ANR	5855773	MemberAccess	plp -> e . p . x		5855593	0					
ANR	5855774	MemberAccess	plp -> e . p		5855593	0					
ANR	5855775	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855776	Identifier	plp		5855593	0					
ANR	5855777	Identifier	e		5855593	1					
ANR	5855778	Identifier	p		5855593	1					
ANR	5855779	Identifier	x		5855593	1					
ANR	5855780	Identifier	wx2		5855593	1					
ANR	5855781	AssignmentExpression	plp -> e . ce . y = plp -> e . p . y + wy2		5855593	1		=			
ANR	5855782	MemberAccess	plp -> e . ce . y		5855593	0					
ANR	5855783	MemberAccess	plp -> e . ce		5855593	0					
ANR	5855784	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855785	Identifier	plp		5855593	0					
ANR	5855786	Identifier	e		5855593	1					
ANR	5855787	Identifier	ce		5855593	1					
ANR	5855788	Identifier	y		5855593	1					
ANR	5855789	AdditiveExpression	plp -> e . p . y + wy2		5855593	1		+			
ANR	5855790	MemberAccess	plp -> e . p . y		5855593	0					
ANR	5855791	MemberAccess	plp -> e . p		5855593	0					
ANR	5855792	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855793	Identifier	plp		5855593	0					
ANR	5855794	Identifier	e		5855593	1					
ANR	5855795	Identifier	p		5855593	1					
ANR	5855796	Identifier	y		5855593	1					
ANR	5855797	Identifier	wy2		5855593	1					
ANR	5855798	IfStatement	if ( gs_debug_c ( 'O' ) )		5855593	7					
ANR	5855799	Condition	gs_debug_c ( 'O' )	2420:8:99996:100010	5855593	0	True				
ANR	5855800	CallExpression	gs_debug_c ( 'O' )		5855593	0					
ANR	5855801	Callee	gs_debug_c		5855593	0					
ANR	5855802	Identifier	gs_debug_c		5855593	0					
ANR	5855803	ArgumentList	'O'		5855593	1					
ANR	5855804	Argument	'O'		5855593	0					
ANR	5855805	PrimaryExpression	'O'		5855593	0					
ANR	5855806	CompoundStatement		12:25:489:489	5855593	1					
ANR	5855807	ExpressionStatement	"dlprintf4 ( ""[o]Stroke o=(%f,%f) e=(%f,%f)\\n"" , fixed2float ( plp -> o . p . x ) , fixed2float ( plp -> o . p . y ) , fixed2float ( plp -> e . p . x ) , fixed2float ( plp -> e . p . y ) )"	2421:8:100023:100203	5855593	0	True				
ANR	5855808	CallExpression	"dlprintf4 ( ""[o]Stroke o=(%f,%f) e=(%f,%f)\\n"" , fixed2float ( plp -> o . p . x ) , fixed2float ( plp -> o . p . y ) , fixed2float ( plp -> e . p . x ) , fixed2float ( plp -> e . p . y ) )"		5855593	0					
ANR	5855809	Callee	dlprintf4		5855593	0					
ANR	5855810	Identifier	dlprintf4		5855593	0					
ANR	5855811	ArgumentList	"""[o]Stroke o=(%f,%f) e=(%f,%f)\\n"""		5855593	1					
ANR	5855812	Argument	"""[o]Stroke o=(%f,%f) e=(%f,%f)\\n"""		5855593	0					
ANR	5855813	PrimaryExpression	"""[o]Stroke o=(%f,%f) e=(%f,%f)\\n"""		5855593	0					
ANR	5855814	Argument	fixed2float ( plp -> o . p . x )		5855593	1					
ANR	5855815	CallExpression	fixed2float ( plp -> o . p . x )		5855593	0					
ANR	5855816	Callee	fixed2float		5855593	0					
ANR	5855817	Identifier	fixed2float		5855593	0					
ANR	5855818	ArgumentList	plp -> o . p . x		5855593	1					
ANR	5855819	Argument	plp -> o . p . x		5855593	0					
ANR	5855820	MemberAccess	plp -> o . p . x		5855593	0					
ANR	5855821	MemberAccess	plp -> o . p		5855593	0					
ANR	5855822	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855823	Identifier	plp		5855593	0					
ANR	5855824	Identifier	o		5855593	1					
ANR	5855825	Identifier	p		5855593	1					
ANR	5855826	Identifier	x		5855593	1					
ANR	5855827	Argument	fixed2float ( plp -> o . p . y )		5855593	2					
ANR	5855828	CallExpression	fixed2float ( plp -> o . p . y )		5855593	0					
ANR	5855829	Callee	fixed2float		5855593	0					
ANR	5855830	Identifier	fixed2float		5855593	0					
ANR	5855831	ArgumentList	plp -> o . p . y		5855593	1					
ANR	5855832	Argument	plp -> o . p . y		5855593	0					
ANR	5855833	MemberAccess	plp -> o . p . y		5855593	0					
ANR	5855834	MemberAccess	plp -> o . p		5855593	0					
ANR	5855835	PtrMemberAccess	plp -> o		5855593	0					
ANR	5855836	Identifier	plp		5855593	0					
ANR	5855837	Identifier	o		5855593	1					
ANR	5855838	Identifier	p		5855593	1					
ANR	5855839	Identifier	y		5855593	1					
ANR	5855840	Argument	fixed2float ( plp -> e . p . x )		5855593	3					
ANR	5855841	CallExpression	fixed2float ( plp -> e . p . x )		5855593	0					
ANR	5855842	Callee	fixed2float		5855593	0					
ANR	5855843	Identifier	fixed2float		5855593	0					
ANR	5855844	ArgumentList	plp -> e . p . x		5855593	1					
ANR	5855845	Argument	plp -> e . p . x		5855593	0					
ANR	5855846	MemberAccess	plp -> e . p . x		5855593	0					
ANR	5855847	MemberAccess	plp -> e . p		5855593	0					
ANR	5855848	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855849	Identifier	plp		5855593	0					
ANR	5855850	Identifier	e		5855593	1					
ANR	5855851	Identifier	p		5855593	1					
ANR	5855852	Identifier	x		5855593	1					
ANR	5855853	Argument	fixed2float ( plp -> e . p . y )		5855593	4					
ANR	5855854	CallExpression	fixed2float ( plp -> e . p . y )		5855593	0					
ANR	5855855	Callee	fixed2float		5855593	0					
ANR	5855856	Identifier	fixed2float		5855593	0					
ANR	5855857	ArgumentList	plp -> e . p . y		5855593	1					
ANR	5855858	Argument	plp -> e . p . y		5855593	0					
ANR	5855859	MemberAccess	plp -> e . p . y		5855593	0					
ANR	5855860	MemberAccess	plp -> e . p		5855593	0					
ANR	5855861	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855862	Identifier	plp		5855593	0					
ANR	5855863	Identifier	e		5855593	1					
ANR	5855864	Identifier	p		5855593	1					
ANR	5855865	Identifier	y		5855593	1					
ANR	5855866	ExpressionStatement	"dlprintf4 ( ""\\twxy=(%f,%f) lxy=(%f,%f)\\n"" , fixed2float ( wx2 ) , fixed2float ( wy2 ) , fixed2float ( plp -> e . cdelta . x ) , fixed2float ( plp -> e . cdelta . y ) )"	2424:8:100213:100403	5855593	1	True				
ANR	5855867	CallExpression	"dlprintf4 ( ""\\twxy=(%f,%f) lxy=(%f,%f)\\n"" , fixed2float ( wx2 ) , fixed2float ( wy2 ) , fixed2float ( plp -> e . cdelta . x ) , fixed2float ( plp -> e . cdelta . y ) )"		5855593	0					
ANR	5855868	Callee	dlprintf4		5855593	0					
ANR	5855869	Identifier	dlprintf4		5855593	0					
ANR	5855870	ArgumentList	"""\\twxy=(%f,%f) lxy=(%f,%f)\\n"""		5855593	1					
ANR	5855871	Argument	"""\\twxy=(%f,%f) lxy=(%f,%f)\\n"""		5855593	0					
ANR	5855872	PrimaryExpression	"""\\twxy=(%f,%f) lxy=(%f,%f)\\n"""		5855593	0					
ANR	5855873	Argument	fixed2float ( wx2 )		5855593	1					
ANR	5855874	CallExpression	fixed2float ( wx2 )		5855593	0					
ANR	5855875	Callee	fixed2float		5855593	0					
ANR	5855876	Identifier	fixed2float		5855593	0					
ANR	5855877	ArgumentList	wx2		5855593	1					
ANR	5855878	Argument	wx2		5855593	0					
ANR	5855879	Identifier	wx2		5855593	0					
ANR	5855880	Argument	fixed2float ( wy2 )		5855593	2					
ANR	5855881	CallExpression	fixed2float ( wy2 )		5855593	0					
ANR	5855882	Callee	fixed2float		5855593	0					
ANR	5855883	Identifier	fixed2float		5855593	0					
ANR	5855884	ArgumentList	wy2		5855593	1					
ANR	5855885	Argument	wy2		5855593	0					
ANR	5855886	Identifier	wy2		5855593	0					
ANR	5855887	Argument	fixed2float ( plp -> e . cdelta . x )		5855593	3					
ANR	5855888	CallExpression	fixed2float ( plp -> e . cdelta . x )		5855593	0					
ANR	5855889	Callee	fixed2float		5855593	0					
ANR	5855890	Identifier	fixed2float		5855593	0					
ANR	5855891	ArgumentList	plp -> e . cdelta . x		5855593	1					
ANR	5855892	Argument	plp -> e . cdelta . x		5855593	0					
ANR	5855893	MemberAccess	plp -> e . cdelta . x		5855593	0					
ANR	5855894	MemberAccess	plp -> e . cdelta		5855593	0					
ANR	5855895	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855896	Identifier	plp		5855593	0					
ANR	5855897	Identifier	e		5855593	1					
ANR	5855898	Identifier	cdelta		5855593	1					
ANR	5855899	Identifier	x		5855593	1					
ANR	5855900	Argument	fixed2float ( plp -> e . cdelta . y )		5855593	4					
ANR	5855901	CallExpression	fixed2float ( plp -> e . cdelta . y )		5855593	0					
ANR	5855902	Callee	fixed2float		5855593	0					
ANR	5855903	Identifier	fixed2float		5855593	0					
ANR	5855904	ArgumentList	plp -> e . cdelta . y		5855593	1					
ANR	5855905	Argument	plp -> e . cdelta . y		5855593	0					
ANR	5855906	MemberAccess	plp -> e . cdelta . y		5855593	0					
ANR	5855907	MemberAccess	plp -> e . cdelta		5855593	0					
ANR	5855908	PtrMemberAccess	plp -> e		5855593	0					
ANR	5855909	Identifier	plp		5855593	0					
ANR	5855910	Identifier	e		5855593	1					
ANR	5855911	Identifier	cdelta		5855593	1					
ANR	5855912	Identifier	y		5855593	1					
ANR	5855913	ReturnType	static void		5855593	1					
ANR	5855914	Identifier	compute_caps		5855593	2					
ANR	5855915	ParameterList	pl_ptr plp		5855593	3					
ANR	5855916	Parameter	pl_ptr plp	2408:13:99511:99520	5855593	0	True				
ANR	5855917	ParameterType	pl_ptr		5855593	0					
ANR	5855918	Identifier	plp		5855593	1					
ANR	5855919	CFGEntryNode	ENTRY		5855593		True				
ANR	5855920	CFGExitNode	EXIT		5855593		True				
ANR	5855921	Symbol	plp -> width . y		5855593						
ANR	5855922	Symbol	plp -> width . x		5855593						
ANR	5855923	Symbol	plp -> o . ce . x		5855593						
ANR	5855924	Symbol	plp -> o . ce . y		5855593						
ANR	5855925	Symbol	plp -> e . p . y		5855593						
ANR	5855926	Symbol	plp -> o . co		5855593						
ANR	5855927	Symbol	plp -> e . p . x		5855593						
ANR	5855928	Symbol	plp -> o . p		5855593						
ANR	5855929	Symbol	plp -> o . co . y		5855593						
ANR	5855930	Symbol	plp -> o . co . x		5855593						
ANR	5855931	Symbol	plp -> width		5855593						
ANR	5855932	Symbol	wy2		5855593						
ANR	5855933	Symbol	plp -> o . ce		5855593						
ANR	5855934	Symbol	plp -> o . cdelta . x		5855593						
ANR	5855935	Symbol	plp -> e . co . y		5855593						
ANR	5855936	Symbol	plp -> e . co . x		5855593						
ANR	5855937	Symbol	plp -> e . co		5855593						
ANR	5855938	Symbol	plp -> o . cdelta . y		5855593						
ANR	5855939	Symbol	plp -> e . ce		5855593						
ANR	5855940	Symbol	gs_debug_c		5855593						
ANR	5855941	Symbol	* plp		5855593						
ANR	5855942	Symbol	plp -> e . cdelta . x		5855593						
ANR	5855943	Symbol	plp -> o . cdelta		5855593						
ANR	5855944	Symbol	fixed2float		5855593						
ANR	5855945	Symbol	plp -> e . cdelta . y		5855593						
ANR	5855946	Symbol	plp -> o . p . y		5855593						
ANR	5855947	Symbol	plp -> o . p . x		5855593						
ANR	5855948	Symbol	wx2		5855593						
ANR	5855949	Symbol	plp -> e . ce . x		5855593						
ANR	5855950	Symbol	plp -> e . p		5855593						
ANR	5855951	Symbol	plp -> e . ce . y		5855593						
ANR	5855952	Symbol	plp		5855593						
ANR	5855953	Symbol	plp -> o		5855593						
ANR	5855954	Symbol	plp -> e		5855593						
ANR	5855955	Symbol	plp -> e . cdelta		5855593						
ANR	5855956	Function	add_round_cap	2443:0:100700:101730							
ANR	5855957	FunctionDef	"add_round_cap (gx_path * ppath , const_ep_ptr endp)"		5855956	0					
ANR	5855958	CompoundStatement		2445:0:100761:101730	5855956	0					
ANR	5855959	IdentifierDeclStatement	int code ;	2446:4:100767:100775	5855956	0	True				
ANR	5855960	IdentifierDecl	code		5855956	0					
ANR	5855961	IdentifierDeclType	int		5855956	0					
ANR	5855962	Identifier	code		5855956	1					
ANR	5855963	IfStatement	"if ( ( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0 )"		5855956	1					
ANR	5855964	Condition	"( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"	2452:8:100909:101683	5855956	0	True				
ANR	5855965	OrExpression	"( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5855956	0		||			
ANR	5855966	RelationalExpression	"( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0"		5855956	0		<			
ANR	5855967	AssignmentExpression	"code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction )"		5855956	0		=			
ANR	5855968	Identifier	code		5855956	0					
ANR	5855969	CallExpression	"gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction )"		5855956	1					
ANR	5855970	Callee	gx_path_add_partial_arc		5855956	0					
ANR	5855971	Identifier	gx_path_add_partial_arc		5855956	0					
ANR	5855972	ArgumentList	ppath		5855956	1					
ANR	5855973	Argument	ppath		5855956	0					
ANR	5855974	Identifier	ppath		5855956	0					
ANR	5855975	Argument	px + cdx		5855956	1					
ANR	5855976	AdditiveExpression	px + cdx		5855956	0		+			
ANR	5855977	Identifier	px		5855956	0					
ANR	5855978	Identifier	cdx		5855956	1					
ANR	5855979	Argument	py + cdy		5855956	2					
ANR	5855980	AdditiveExpression	py + cdy		5855956	0		+			
ANR	5855981	Identifier	py		5855956	0					
ANR	5855982	Identifier	cdy		5855956	1					
ANR	5855983	Argument	xo + cdx		5855956	3					
ANR	5855984	AdditiveExpression	xo + cdx		5855956	0		+			
ANR	5855985	Identifier	xo		5855956	0					
ANR	5855986	Identifier	cdx		5855956	1					
ANR	5855987	Argument	yo + cdy		5855956	4					
ANR	5855988	AdditiveExpression	yo + cdy		5855956	0		+			
ANR	5855989	Identifier	yo		5855956	0					
ANR	5855990	Identifier	cdy		5855956	1					
ANR	5855991	Argument	quarter_arc_fraction		5855956	5					
ANR	5855992	Identifier	quarter_arc_fraction		5855956	0					
ANR	5855993	PrimaryExpression	0		5855956	1					
ANR	5855994	OrExpression	"( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5855956	1		||			
ANR	5855995	RelationalExpression	"( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0"		5855956	0		<			
ANR	5855996	AssignmentExpression	"code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction )"		5855956	0		=			
ANR	5855997	Identifier	code		5855956	0					
ANR	5855998	CallExpression	"gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction )"		5855956	1					
ANR	5855999	Callee	gx_path_add_partial_arc		5855956	0					
ANR	5856000	Identifier	gx_path_add_partial_arc		5855956	0					
ANR	5856001	ArgumentList	ppath		5855956	1					
ANR	5856002	Argument	ppath		5855956	0					
ANR	5856003	Identifier	ppath		5855956	0					
ANR	5856004	Argument	xe		5855956	1					
ANR	5856005	Identifier	xe		5855956	0					
ANR	5856006	Argument	ye		5855956	2					
ANR	5856007	Identifier	ye		5855956	0					
ANR	5856008	Argument	xe + cdx		5855956	3					
ANR	5856009	AdditiveExpression	xe + cdx		5855956	0		+			
ANR	5856010	Identifier	xe		5855956	0					
ANR	5856011	Identifier	cdx		5855956	1					
ANR	5856012	Argument	ye + cdy		5855956	4					
ANR	5856013	AdditiveExpression	ye + cdy		5855956	0		+			
ANR	5856014	Identifier	ye		5855956	0					
ANR	5856015	Identifier	cdy		5855956	1					
ANR	5856016	Argument	quarter_arc_fraction		5855956	5					
ANR	5856017	Identifier	quarter_arc_fraction		5855956	0					
ANR	5856018	PrimaryExpression	0		5855956	1					
ANR	5856019	OrExpression	"( code = gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5855956	1		||			
ANR	5856020	RelationalExpression	"( code = gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction ) ) < 0"		5855956	0		<			
ANR	5856021	AssignmentExpression	"code = gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction )"		5855956	0		=			
ANR	5856022	Identifier	code		5855956	0					
ANR	5856023	CallExpression	"gx_path_add_partial_arc ( ppath , px - cdx , py - cdy , xe - cdx , ye - cdy , quarter_arc_fraction )"		5855956	1					
ANR	5856024	Callee	gx_path_add_partial_arc		5855956	0					
ANR	5856025	Identifier	gx_path_add_partial_arc		5855956	0					
ANR	5856026	ArgumentList	ppath		5855956	1					
ANR	5856027	Argument	ppath		5855956	0					
ANR	5856028	Identifier	ppath		5855956	0					
ANR	5856029	Argument	px - cdx		5855956	1					
ANR	5856030	AdditiveExpression	px - cdx		5855956	0		-			
ANR	5856031	Identifier	px		5855956	0					
ANR	5856032	Identifier	cdx		5855956	1					
ANR	5856033	Argument	py - cdy		5855956	2					
ANR	5856034	AdditiveExpression	py - cdy		5855956	0		-			
ANR	5856035	Identifier	py		5855956	0					
ANR	5856036	Identifier	cdy		5855956	1					
ANR	5856037	Argument	xe - cdx		5855956	3					
ANR	5856038	AdditiveExpression	xe - cdx		5855956	0		-			
ANR	5856039	Identifier	xe		5855956	0					
ANR	5856040	Identifier	cdx		5855956	1					
ANR	5856041	Argument	ye - cdy		5855956	4					
ANR	5856042	AdditiveExpression	ye - cdy		5855956	0		-			
ANR	5856043	Identifier	ye		5855956	0					
ANR	5856044	Identifier	cdy		5855956	1					
ANR	5856045	Argument	quarter_arc_fraction		5855956	5					
ANR	5856046	Identifier	quarter_arc_fraction		5855956	0					
ANR	5856047	PrimaryExpression	0		5855956	1					
ANR	5856048	OrExpression	"( code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5855956	1		||			
ANR	5856049	RelationalExpression	"( code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction ) ) < 0"		5855956	0		<			
ANR	5856050	AssignmentExpression	"code = gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction )"		5855956	0		=			
ANR	5856051	Identifier	code		5855956	0					
ANR	5856052	CallExpression	"gx_path_add_partial_arc ( ppath , xo , yo , xo - cdx , yo - cdy , quarter_arc_fraction )"		5855956	1					
ANR	5856053	Callee	gx_path_add_partial_arc		5855956	0					
ANR	5856054	Identifier	gx_path_add_partial_arc		5855956	0					
ANR	5856055	ArgumentList	ppath		5855956	1					
ANR	5856056	Argument	ppath		5855956	0					
ANR	5856057	Identifier	ppath		5855956	0					
ANR	5856058	Argument	xo		5855956	1					
ANR	5856059	Identifier	xo		5855956	0					
ANR	5856060	Argument	yo		5855956	2					
ANR	5856061	Identifier	yo		5855956	0					
ANR	5856062	Argument	xo - cdx		5855956	3					
ANR	5856063	AdditiveExpression	xo - cdx		5855956	0		-			
ANR	5856064	Identifier	xo		5855956	0					
ANR	5856065	Identifier	cdx		5855956	1					
ANR	5856066	Argument	yo - cdy		5855956	4					
ANR	5856067	AdditiveExpression	yo - cdy		5855956	0		-			
ANR	5856068	Identifier	yo		5855956	0					
ANR	5856069	Identifier	cdy		5855956	1					
ANR	5856070	Argument	quarter_arc_fraction		5855956	5					
ANR	5856071	Identifier	quarter_arc_fraction		5855956	0					
ANR	5856072	PrimaryExpression	0		5855956	1					
ANR	5856073	RelationalExpression	"( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5855956	1		<			
ANR	5856074	AssignmentExpression	"code = gx_path_add_line ( ppath , xe , ye )"		5855956	0		=			
ANR	5856075	Identifier	code		5855956	0					
ANR	5856076	CallExpression	"gx_path_add_line ( ppath , xe , ye )"		5855956	1					
ANR	5856077	Callee	gx_path_add_line		5855956	0					
ANR	5856078	Identifier	gx_path_add_line		5855956	0					
ANR	5856079	ArgumentList	ppath		5855956	1					
ANR	5856080	Argument	ppath		5855956	0					
ANR	5856081	Identifier	ppath		5855956	0					
ANR	5856082	Argument	xe		5855956	1					
ANR	5856083	Identifier	xe		5855956	0					
ANR	5856084	Argument	ye		5855956	2					
ANR	5856085	Identifier	ye		5855956	0					
ANR	5856086	PrimaryExpression	0		5855956	1					
ANR	5856087	ReturnStatement	return code ;	2465:8:101703:101714	5855956	1	True				
ANR	5856088	Identifier	code		5855956	0					
ANR	5856089	ReturnStatement	return 0 ;	2466:4:101720:101728	5855956	2	True				
ANR	5856090	PrimaryExpression	0		5855956	0					
ANR	5856091	ReturnType	static int		5855956	1					
ANR	5856092	Identifier	add_round_cap		5855956	2					
ANR	5856093	ParameterList	"gx_path * ppath , const_ep_ptr endp"		5855956	3					
ANR	5856094	Parameter	gx_path * ppath	2444:14:100725:100739	5855956	0	True				
ANR	5856095	ParameterType	gx_path *		5855956	0					
ANR	5856096	Identifier	ppath		5855956	1					
ANR	5856097	Parameter	const_ep_ptr endp	2444:31:100742:100758	5855956	1	True				
ANR	5856098	ParameterType	const_ep_ptr		5855956	0					
ANR	5856099	Identifier	endp		5855956	1					
ANR	5856100	CFGEntryNode	ENTRY		5855956		True				
ANR	5856101	CFGExitNode	EXIT		5855956		True				
ANR	5856102	Symbol	code		5855956						
ANR	5856103	Symbol	quarter_arc_fraction		5855956						
ANR	5856104	Symbol	px		5855956						
ANR	5856105	Symbol	py		5855956						
ANR	5856106	Symbol	ppath		5855956						
ANR	5856107	Symbol	ye		5855956						
ANR	5856108	Symbol	xe		5855956						
ANR	5856109	Symbol	gx_path_add_partial_arc		5855956						
ANR	5856110	Symbol	cdx		5855956						
ANR	5856111	Symbol	yo		5855956						
ANR	5856112	Symbol	xo		5855956						
ANR	5856113	Symbol	gx_path_add_line		5855956						
ANR	5856114	Symbol	cdy		5855956						
ANR	5856115	Symbol	endp		5855956						
ANR	5856116	Function	add_pie_cap	2471:0:101834:102341							
ANR	5856117	FunctionDef	"add_pie_cap (gx_path * ppath , const_ep_ptr endp)"		5856116	0					
ANR	5856118	CompoundStatement		2473:0:101893:102341	5856116	0					
ANR	5856119	IdentifierDeclStatement	int code ;	2474:4:101899:101907	5856116	0	True				
ANR	5856120	IdentifierDecl	code		5856116	0					
ANR	5856121	IdentifierDeclType	int		5856116	0					
ANR	5856122	Identifier	code		5856116	1					
ANR	5856123	IfStatement	"if ( ( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0 )"		5856116	1					
ANR	5856124	Condition	"( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"	2476:8:101918:102303	5856116	0	True				
ANR	5856125	OrExpression	"( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5856116	0		||			
ANR	5856126	RelationalExpression	"( code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction ) ) < 0"		5856116	0		<			
ANR	5856127	AssignmentExpression	"code = gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction )"		5856116	0		=			
ANR	5856128	Identifier	code		5856116	0					
ANR	5856129	CallExpression	"gx_path_add_partial_arc ( ppath , px + cdx , py + cdy , xo + cdx , yo + cdy , quarter_arc_fraction )"		5856116	1					
ANR	5856130	Callee	gx_path_add_partial_arc		5856116	0					
ANR	5856131	Identifier	gx_path_add_partial_arc		5856116	0					
ANR	5856132	ArgumentList	ppath		5856116	1					
ANR	5856133	Argument	ppath		5856116	0					
ANR	5856134	Identifier	ppath		5856116	0					
ANR	5856135	Argument	px + cdx		5856116	1					
ANR	5856136	AdditiveExpression	px + cdx		5856116	0		+			
ANR	5856137	Identifier	px		5856116	0					
ANR	5856138	Identifier	cdx		5856116	1					
ANR	5856139	Argument	py + cdy		5856116	2					
ANR	5856140	AdditiveExpression	py + cdy		5856116	0		+			
ANR	5856141	Identifier	py		5856116	0					
ANR	5856142	Identifier	cdy		5856116	1					
ANR	5856143	Argument	xo + cdx		5856116	3					
ANR	5856144	AdditiveExpression	xo + cdx		5856116	0		+			
ANR	5856145	Identifier	xo		5856116	0					
ANR	5856146	Identifier	cdx		5856116	1					
ANR	5856147	Argument	yo + cdy		5856116	4					
ANR	5856148	AdditiveExpression	yo + cdy		5856116	0		+			
ANR	5856149	Identifier	yo		5856116	0					
ANR	5856150	Identifier	cdy		5856116	1					
ANR	5856151	Argument	quarter_arc_fraction		5856116	5					
ANR	5856152	Identifier	quarter_arc_fraction		5856116	0					
ANR	5856153	PrimaryExpression	0		5856116	1					
ANR	5856154	OrExpression	"( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0 || ( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5856116	1		||			
ANR	5856155	RelationalExpression	"( code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction ) ) < 0"		5856116	0		<			
ANR	5856156	AssignmentExpression	"code = gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction )"		5856116	0		=			
ANR	5856157	Identifier	code		5856116	0					
ANR	5856158	CallExpression	"gx_path_add_partial_arc ( ppath , xe , ye , xe + cdx , ye + cdy , quarter_arc_fraction )"		5856116	1					
ANR	5856159	Callee	gx_path_add_partial_arc		5856116	0					
ANR	5856160	Identifier	gx_path_add_partial_arc		5856116	0					
ANR	5856161	ArgumentList	ppath		5856116	1					
ANR	5856162	Argument	ppath		5856116	0					
ANR	5856163	Identifier	ppath		5856116	0					
ANR	5856164	Argument	xe		5856116	1					
ANR	5856165	Identifier	xe		5856116	0					
ANR	5856166	Argument	ye		5856116	2					
ANR	5856167	Identifier	ye		5856116	0					
ANR	5856168	Argument	xe + cdx		5856116	3					
ANR	5856169	AdditiveExpression	xe + cdx		5856116	0		+			
ANR	5856170	Identifier	xe		5856116	0					
ANR	5856171	Identifier	cdx		5856116	1					
ANR	5856172	Argument	ye + cdy		5856116	4					
ANR	5856173	AdditiveExpression	ye + cdy		5856116	0		+			
ANR	5856174	Identifier	ye		5856116	0					
ANR	5856175	Identifier	cdy		5856116	1					
ANR	5856176	Argument	quarter_arc_fraction		5856116	5					
ANR	5856177	Identifier	quarter_arc_fraction		5856116	0					
ANR	5856178	PrimaryExpression	0		5856116	1					
ANR	5856179	RelationalExpression	"( code = gx_path_add_line ( ppath , xe , ye ) ) < 0"		5856116	1		<			
ANR	5856180	AssignmentExpression	"code = gx_path_add_line ( ppath , xe , ye )"		5856116	0		=			
ANR	5856181	Identifier	code		5856116	0					
ANR	5856182	CallExpression	"gx_path_add_line ( ppath , xe , ye )"		5856116	1					
ANR	5856183	Callee	gx_path_add_line		5856116	0					
ANR	5856184	Identifier	gx_path_add_line		5856116	0					
ANR	5856185	ArgumentList	ppath		5856116	1					
ANR	5856186	Argument	ppath		5856116	0					
ANR	5856187	Identifier	ppath		5856116	0					
ANR	5856188	Argument	xe		5856116	1					
ANR	5856189	Identifier	xe		5856116	0					
ANR	5856190	Argument	ye		5856116	2					
ANR	5856191	Identifier	ye		5856116	0					
ANR	5856192	PrimaryExpression	0		5856116	1					
ANR	5856193	ReturnStatement	return code ;	2482:8:102314:102325	5856116	1	True				
ANR	5856194	Identifier	code		5856116	0					
ANR	5856195	ReturnStatement	return 0 ;	2483:4:102331:102339	5856116	2	True				
ANR	5856196	PrimaryExpression	0		5856116	0					
ANR	5856197	ReturnType	static int		5856116	1					
ANR	5856198	Identifier	add_pie_cap		5856116	2					
ANR	5856199	ParameterList	"gx_path * ppath , const_ep_ptr endp"		5856116	3					
ANR	5856200	Parameter	gx_path * ppath	2472:12:101857:101871	5856116	0	True				
ANR	5856201	ParameterType	gx_path *		5856116	0					
ANR	5856202	Identifier	ppath		5856116	1					
ANR	5856203	Parameter	const_ep_ptr endp	2472:29:101874:101890	5856116	1	True				
ANR	5856204	ParameterType	const_ep_ptr		5856116	0					
ANR	5856205	Identifier	endp		5856116	1					
ANR	5856206	CFGEntryNode	ENTRY		5856116		True				
ANR	5856207	CFGExitNode	EXIT		5856116		True				
ANR	5856208	Symbol	code		5856116						
ANR	5856209	Symbol	quarter_arc_fraction		5856116						
ANR	5856210	Symbol	px		5856116						
ANR	5856211	Symbol	py		5856116						
ANR	5856212	Symbol	ppath		5856116						
ANR	5856213	Symbol	ye		5856116						
ANR	5856214	Symbol	xe		5856116						
ANR	5856215	Symbol	gx_path_add_partial_arc		5856116						
ANR	5856216	Symbol	cdx		5856116						
ANR	5856217	Symbol	yo		5856116						
ANR	5856218	Symbol	xo		5856116						
ANR	5856219	Symbol	gx_path_add_line		5856116						
ANR	5856220	Symbol	cdy		5856116						
ANR	5856221	Symbol	endp		5856116						
ANR	5856222	Function	do_pie_join	2486:0:102344:104628							
ANR	5856223	FunctionDef	"do_pie_join (gx_path * ppath , gs_fixed_point * centre , gs_fixed_point * current_orig , gs_fixed_point * current_tangent , gs_fixed_point * final , gs_fixed_point * final_tangent , bool ccw , gs_fixed_point * width)"		5856222	0					
ANR	5856224	CompoundStatement		2491:0:102594:104628	5856222	0					
ANR	5856225	IdentifierDeclStatement	int code ;	2492:4:102600:102608	5856222	0	True				
ANR	5856226	IdentifierDecl	code		5856222	0					
ANR	5856227	IdentifierDeclType	int		5856222	0					
ANR	5856228	Identifier	code		5856222	1					
ANR	5856229	IdentifierDeclStatement	"double rad_squared , dist_squared , F ;"	2493:4:102614:102649	5856222	1	True				
ANR	5856230	IdentifierDecl	rad_squared		5856222	0					
ANR	5856231	IdentifierDeclType	double		5856222	0					
ANR	5856232	Identifier	rad_squared		5856222	1					
ANR	5856233	IdentifierDecl	dist_squared		5856222	1					
ANR	5856234	IdentifierDeclType	double		5856222	0					
ANR	5856235	Identifier	dist_squared		5856222	1					
ANR	5856236	IdentifierDecl	F		5856222	2					
ANR	5856237	IdentifierDeclType	double		5856222	0					
ANR	5856238	Identifier	F		5856222	1					
ANR	5856239	IdentifierDeclStatement	"gs_fixed_point current , tangent , tangmeet ;"	2494:4:102655:102696	5856222	2	True				
ANR	5856240	IdentifierDecl	current		5856222	0					
ANR	5856241	IdentifierDeclType	gs_fixed_point		5856222	0					
ANR	5856242	Identifier	current		5856222	1					
ANR	5856243	IdentifierDecl	tangent		5856222	1					
ANR	5856244	IdentifierDeclType	gs_fixed_point		5856222	0					
ANR	5856245	Identifier	tangent		5856222	1					
ANR	5856246	IdentifierDecl	tangmeet		5856222	2					
ANR	5856247	IdentifierDeclType	gs_fixed_point		5856222	0					
ANR	5856248	Identifier	tangmeet		5856222	1					
ANR	5856249	ExpressionStatement	tangent . x = current_tangent -> x	2496:4:102703:102733	5856222	3	True				
ANR	5856250	AssignmentExpression	tangent . x = current_tangent -> x		5856222	0		=			
ANR	5856251	MemberAccess	tangent . x		5856222	0					
ANR	5856252	Identifier	tangent		5856222	0					
ANR	5856253	Identifier	x		5856222	1					
ANR	5856254	PtrMemberAccess	current_tangent -> x		5856222	1					
ANR	5856255	Identifier	current_tangent		5856222	0					
ANR	5856256	Identifier	x		5856222	1					
ANR	5856257	ExpressionStatement	tangent . y = current_tangent -> y	2497:4:102739:102769	5856222	4	True				
ANR	5856258	AssignmentExpression	tangent . y = current_tangent -> y		5856222	0		=			
ANR	5856259	MemberAccess	tangent . y		5856222	0					
ANR	5856260	Identifier	tangent		5856222	0					
ANR	5856261	Identifier	y		5856222	1					
ANR	5856262	PtrMemberAccess	current_tangent -> y		5856222	1					
ANR	5856263	Identifier	current_tangent		5856222	0					
ANR	5856264	Identifier	y		5856222	1					
ANR	5856265	ExpressionStatement	current . x = current_orig -> x	2498:4:102775:102802	5856222	5	True				
ANR	5856266	AssignmentExpression	current . x = current_orig -> x		5856222	0		=			
ANR	5856267	MemberAccess	current . x		5856222	0					
ANR	5856268	Identifier	current		5856222	0					
ANR	5856269	Identifier	x		5856222	1					
ANR	5856270	PtrMemberAccess	current_orig -> x		5856222	1					
ANR	5856271	Identifier	current_orig		5856222	0					
ANR	5856272	Identifier	x		5856222	1					
ANR	5856273	ExpressionStatement	current . y = current_orig -> y	2499:4:102808:102835	5856222	6	True				
ANR	5856274	AssignmentExpression	current . y = current_orig -> y		5856222	0		=			
ANR	5856275	MemberAccess	current . y		5856222	0					
ANR	5856276	Identifier	current		5856222	0					
ANR	5856277	Identifier	y		5856222	1					
ANR	5856278	PtrMemberAccess	current_orig -> y		5856222	1					
ANR	5856279	Identifier	current_orig		5856222	0					
ANR	5856280	Identifier	y		5856222	1					
ANR	5856281	IfStatement	if ( ( double ) tangent . x * ( double ) final_tangent -> x + ( double ) tangent . y * ( double ) final_tangent -> y > 0 )		5856222	7					
ANR	5856282	Condition	( double ) tangent . x * ( double ) final_tangent -> x + ( double ) tangent . y * ( double ) final_tangent -> y > 0	2502:8:102890:102992	5856222	0	True				
ANR	5856283	RelationalExpression	( double ) tangent . x * ( double ) final_tangent -> x + ( double ) tangent . y * ( double ) final_tangent -> y > 0		5856222	0		>			
ANR	5856284	AdditiveExpression	( double ) tangent . x * ( double ) final_tangent -> x + ( double ) tangent . y * ( double ) final_tangent -> y		5856222	0		+			
ANR	5856285	MultiplicativeExpression	( double ) tangent . x * ( double ) final_tangent -> x		5856222	0		*			
ANR	5856286	CastExpression	( double ) tangent . x		5856222	0					
ANR	5856287	CastTarget	double		5856222	0					
ANR	5856288	MemberAccess	tangent . x		5856222	1					
ANR	5856289	Identifier	tangent		5856222	0					
ANR	5856290	Identifier	x		5856222	1					
ANR	5856291	CastExpression	( double ) final_tangent -> x		5856222	1					
ANR	5856292	CastTarget	double		5856222	0					
ANR	5856293	PtrMemberAccess	final_tangent -> x		5856222	1					
ANR	5856294	Identifier	final_tangent		5856222	0					
ANR	5856295	Identifier	x		5856222	1					
ANR	5856296	MultiplicativeExpression	( double ) tangent . y * ( double ) final_tangent -> y		5856222	1		*			
ANR	5856297	CastExpression	( double ) tangent . y		5856222	0					
ANR	5856298	CastTarget	double		5856222	0					
ANR	5856299	MemberAccess	tangent . y		5856222	1					
ANR	5856300	Identifier	tangent		5856222	0					
ANR	5856301	Identifier	y		5856222	1					
ANR	5856302	CastExpression	( double ) final_tangent -> y		5856222	1					
ANR	5856303	CastTarget	double		5856222	0					
ANR	5856304	PtrMemberAccess	final_tangent -> y		5856222	1					
ANR	5856305	Identifier	final_tangent		5856222	0					
ANR	5856306	Identifier	y		5856222	1					
ANR	5856307	PrimaryExpression	0		5856222	1					
ANR	5856308	CompoundStatement		13:58:400:400	5856222	1					
ANR	5856309	ExpressionStatement	"code = gx_path_add_partial_arc ( ppath , centre -> x + tangent . x , centre -> y + tangent . y , current . x + tangent . x , current . y + tangent . y , quarter_arc_fraction )"	2505:8:103046:103463	5856222	0	True				
ANR	5856310	AssignmentExpression	"code = gx_path_add_partial_arc ( ppath , centre -> x + tangent . x , centre -> y + tangent . y , current . x + tangent . x , current . y + tangent . y , quarter_arc_fraction )"		5856222	0		=			
ANR	5856311	Identifier	code		5856222	0					
ANR	5856312	CallExpression	"gx_path_add_partial_arc ( ppath , centre -> x + tangent . x , centre -> y + tangent . y , current . x + tangent . x , current . y + tangent . y , quarter_arc_fraction )"		5856222	1					
ANR	5856313	Callee	gx_path_add_partial_arc		5856222	0					
ANR	5856314	Identifier	gx_path_add_partial_arc		5856222	0					
ANR	5856315	ArgumentList	ppath		5856222	1					
ANR	5856316	Argument	ppath		5856222	0					
ANR	5856317	Identifier	ppath		5856222	0					
ANR	5856318	Argument	centre -> x + tangent . x		5856222	1					
ANR	5856319	AdditiveExpression	centre -> x + tangent . x		5856222	0		+			
ANR	5856320	PtrMemberAccess	centre -> x		5856222	0					
ANR	5856321	Identifier	centre		5856222	0					
ANR	5856322	Identifier	x		5856222	1					
ANR	5856323	MemberAccess	tangent . x		5856222	1					
ANR	5856324	Identifier	tangent		5856222	0					
ANR	5856325	Identifier	x		5856222	1					
ANR	5856326	Argument	centre -> y + tangent . y		5856222	2					
ANR	5856327	AdditiveExpression	centre -> y + tangent . y		5856222	0		+			
ANR	5856328	PtrMemberAccess	centre -> y		5856222	0					
ANR	5856329	Identifier	centre		5856222	0					
ANR	5856330	Identifier	y		5856222	1					
ANR	5856331	MemberAccess	tangent . y		5856222	1					
ANR	5856332	Identifier	tangent		5856222	0					
ANR	5856333	Identifier	y		5856222	1					
ANR	5856334	Argument	current . x + tangent . x		5856222	3					
ANR	5856335	AdditiveExpression	current . x + tangent . x		5856222	0		+			
ANR	5856336	MemberAccess	current . x		5856222	0					
ANR	5856337	Identifier	current		5856222	0					
ANR	5856338	Identifier	x		5856222	1					
ANR	5856339	MemberAccess	tangent . x		5856222	1					
ANR	5856340	Identifier	tangent		5856222	0					
ANR	5856341	Identifier	x		5856222	1					
ANR	5856342	Argument	current . y + tangent . y		5856222	4					
ANR	5856343	AdditiveExpression	current . y + tangent . y		5856222	0		+			
ANR	5856344	MemberAccess	current . y		5856222	0					
ANR	5856345	Identifier	current		5856222	0					
ANR	5856346	Identifier	y		5856222	1					
ANR	5856347	MemberAccess	tangent . y		5856222	1					
ANR	5856348	Identifier	tangent		5856222	0					
ANR	5856349	Identifier	y		5856222	1					
ANR	5856350	Argument	quarter_arc_fraction		5856222	5					
ANR	5856351	Identifier	quarter_arc_fraction		5856222	0					
ANR	5856352	IfStatement	if ( code < 0 )		5856222	1					
ANR	5856353	Condition	code < 0	2512:12:103477:103484	5856222	0	True				
ANR	5856354	RelationalExpression	code < 0		5856222	0		<			
ANR	5856355	Identifier	code		5856222	0					
ANR	5856356	PrimaryExpression	0		5856222	1					
ANR	5856357	ReturnStatement	return code ;	2513:12:103499:103510	5856222	1	True				
ANR	5856358	Identifier	code		5856222	0					
ANR	5856359	ExpressionStatement	current . x = centre -> x + tangent . x	2514:8:103520:103553	5856222	2	True				
ANR	5856360	AssignmentExpression	current . x = centre -> x + tangent . x		5856222	0		=			
ANR	5856361	MemberAccess	current . x		5856222	0					
ANR	5856362	Identifier	current		5856222	0					
ANR	5856363	Identifier	x		5856222	1					
ANR	5856364	AdditiveExpression	centre -> x + tangent . x		5856222	1		+			
ANR	5856365	PtrMemberAccess	centre -> x		5856222	0					
ANR	5856366	Identifier	centre		5856222	0					
ANR	5856367	Identifier	x		5856222	1					
ANR	5856368	MemberAccess	tangent . x		5856222	1					
ANR	5856369	Identifier	tangent		5856222	0					
ANR	5856370	Identifier	x		5856222	1					
ANR	5856371	ExpressionStatement	current . y = centre -> y + tangent . y	2515:8:103563:103596	5856222	3	True				
ANR	5856372	AssignmentExpression	current . y = centre -> y + tangent . y		5856222	0		=			
ANR	5856373	MemberAccess	current . y		5856222	0					
ANR	5856374	Identifier	current		5856222	0					
ANR	5856375	Identifier	y		5856222	1					
ANR	5856376	AdditiveExpression	centre -> y + tangent . y		5856222	1		+			
ANR	5856377	PtrMemberAccess	centre -> y		5856222	0					
ANR	5856378	Identifier	centre		5856222	0					
ANR	5856379	Identifier	y		5856222	1					
ANR	5856380	MemberAccess	tangent . y		5856222	1					
ANR	5856381	Identifier	tangent		5856222	0					
ANR	5856382	Identifier	y		5856222	1					
ANR	5856383	IfStatement	if ( ccw )		5856222	4					
ANR	5856384	Condition	ccw	2516:12:103610:103612	5856222	0	True				
ANR	5856385	Identifier	ccw		5856222	0					
ANR	5856386	CompoundStatement		27:12:1034:1053	5856222	1					
ANR	5856387	IdentifierDeclStatement	int tmp = tangent . x ;	2517:12:103629:103648	5856222	0	True				
ANR	5856388	IdentifierDecl	tmp = tangent . x		5856222	0					
ANR	5856389	IdentifierDeclType	int		5856222	0					
ANR	5856390	Identifier	tmp		5856222	1					
ANR	5856391	AssignmentExpression	tmp = tangent . x		5856222	2		=			
ANR	5856392	Identifier	tmp		5856222	0					
ANR	5856393	MemberAccess	tangent . x		5856222	1					
ANR	5856394	Identifier	tangent		5856222	0					
ANR	5856395	Identifier	x		5856222	1					
ANR	5856396	ExpressionStatement	tangent . x = - tangent . y	2518:12:103662:103684	5856222	1	True				
ANR	5856397	AssignmentExpression	tangent . x = - tangent . y		5856222	0		=			
ANR	5856398	MemberAccess	tangent . x		5856222	0					
ANR	5856399	Identifier	tangent		5856222	0					
ANR	5856400	Identifier	x		5856222	1					
ANR	5856401	UnaryOperationExpression	- tangent . y		5856222	1					
ANR	5856402	UnaryOperator	-		5856222	0					
ANR	5856403	MemberAccess	tangent . y		5856222	1					
ANR	5856404	Identifier	tangent		5856222	0					
ANR	5856405	Identifier	y		5856222	1					
ANR	5856406	ExpressionStatement	tangent . y = tmp	2519:12:103698:103713	5856222	2	True				
ANR	5856407	AssignmentExpression	tangent . y = tmp		5856222	0		=			
ANR	5856408	MemberAccess	tangent . y		5856222	0					
ANR	5856409	Identifier	tangent		5856222	0					
ANR	5856410	Identifier	y		5856222	1					
ANR	5856411	Identifier	tmp		5856222	1					
ANR	5856412	ElseStatement	else		5856222	0					
ANR	5856413	CompoundStatement		31:12:1149:1168	5856222	0					
ANR	5856414	IdentifierDeclStatement	int tmp = tangent . x ;	2521:12:103744:103763	5856222	0	True				
ANR	5856415	IdentifierDecl	tmp = tangent . x		5856222	0					
ANR	5856416	IdentifierDeclType	int		5856222	0					
ANR	5856417	Identifier	tmp		5856222	1					
ANR	5856418	AssignmentExpression	tmp = tangent . x		5856222	2		=			
ANR	5856419	Identifier	tmp		5856222	0					
ANR	5856420	MemberAccess	tangent . x		5856222	1					
ANR	5856421	Identifier	tangent		5856222	0					
ANR	5856422	Identifier	x		5856222	1					
ANR	5856423	ExpressionStatement	tangent . x = tangent . y	2522:12:103777:103798	5856222	1	True				
ANR	5856424	AssignmentExpression	tangent . x = tangent . y		5856222	0		=			
ANR	5856425	MemberAccess	tangent . x		5856222	0					
ANR	5856426	Identifier	tangent		5856222	0					
ANR	5856427	Identifier	x		5856222	1					
ANR	5856428	MemberAccess	tangent . y		5856222	1					
ANR	5856429	Identifier	tangent		5856222	0					
ANR	5856430	Identifier	y		5856222	1					
ANR	5856431	ExpressionStatement	tangent . y = - tmp	2523:12:103812:103828	5856222	2	True				
ANR	5856432	AssignmentExpression	tangent . y = - tmp		5856222	0		=			
ANR	5856433	MemberAccess	tangent . y		5856222	0					
ANR	5856434	Identifier	tangent		5856222	0					
ANR	5856435	Identifier	y		5856222	1					
ANR	5856436	UnaryOperationExpression	- tmp		5856222	1					
ANR	5856437	UnaryOperator	-		5856222	0					
ANR	5856438	Identifier	tmp		5856222	1					
ANR	5856439	IfStatement	"if ( line_intersect ( & current , & tangent , final , final_tangent , & tangmeet ) != 0 )"		5856222	8					
ANR	5856440	Condition	"line_intersect ( & current , & tangent , final , final_tangent , & tangmeet ) != 0"	2529:8:103993:104087	5856222	0	True				
ANR	5856441	EqualityExpression	"line_intersect ( & current , & tangent , final , final_tangent , & tangmeet ) != 0"		5856222	0		!=			
ANR	5856442	CallExpression	"line_intersect ( & current , & tangent , final , final_tangent , & tangmeet )"		5856222	0					
ANR	5856443	Callee	line_intersect		5856222	0					
ANR	5856444	Identifier	line_intersect		5856222	0					
ANR	5856445	ArgumentList	& current		5856222	1					
ANR	5856446	Argument	& current		5856222	0					
ANR	5856447	UnaryOperationExpression	& current		5856222	0					
ANR	5856448	UnaryOperator	&		5856222	0					
ANR	5856449	Identifier	current		5856222	1					
ANR	5856450	Argument	& tangent		5856222	1					
ANR	5856451	UnaryOperationExpression	& tangent		5856222	0					
ANR	5856452	UnaryOperator	&		5856222	0					
ANR	5856453	Identifier	tangent		5856222	1					
ANR	5856454	Argument	final		5856222	2					
ANR	5856455	Identifier	final		5856222	0					
ANR	5856456	Argument	final_tangent		5856222	3					
ANR	5856457	Identifier	final_tangent		5856222	0					
ANR	5856458	Argument	& tangmeet		5856222	4					
ANR	5856459	UnaryOperationExpression	& tangmeet		5856222	0					
ANR	5856460	UnaryOperator	&		5856222	0					
ANR	5856461	Identifier	tangmeet		5856222	1					
ANR	5856462	PrimaryExpression	0		5856222	1					
ANR	5856463	CompoundStatement		40:62:1495:1495	5856222	1					
ANR	5856464	ReturnStatement	"return gx_path_add_line ( ppath , final -> x , final -> y ) ;"	2531:8:104100:104150	5856222	0	True				
ANR	5856465	CallExpression	"gx_path_add_line ( ppath , final -> x , final -> y )"		5856222	0					
ANR	5856466	Callee	gx_path_add_line		5856222	0					
ANR	5856467	Identifier	gx_path_add_line		5856222	0					
ANR	5856468	ArgumentList	ppath		5856222	1					
ANR	5856469	Argument	ppath		5856222	0					
ANR	5856470	Identifier	ppath		5856222	0					
ANR	5856471	Argument	final -> x		5856222	1					
ANR	5856472	PtrMemberAccess	final -> x		5856222	0					
ANR	5856473	Identifier	final		5856222	0					
ANR	5856474	Identifier	x		5856222	1					
ANR	5856475	Argument	final -> y		5856222	2					
ANR	5856476	PtrMemberAccess	final -> y		5856222	0					
ANR	5856477	Identifier	final		5856222	0					
ANR	5856478	Identifier	y		5856222	1					
ANR	5856479	ExpressionStatement	current . x -= tangmeet . x	2533:4:104162:104185	5856222	9	True				
ANR	5856480	AssignmentExpression	current . x -= tangmeet . x		5856222	0		-=			
ANR	5856481	MemberAccess	current . x		5856222	0					
ANR	5856482	Identifier	current		5856222	0					
ANR	5856483	Identifier	x		5856222	1					
ANR	5856484	MemberAccess	tangmeet . x		5856222	1					
ANR	5856485	Identifier	tangmeet		5856222	0					
ANR	5856486	Identifier	x		5856222	1					
ANR	5856487	ExpressionStatement	current . y -= tangmeet . y	2534:4:104191:104214	5856222	10	True				
ANR	5856488	AssignmentExpression	current . y -= tangmeet . y		5856222	0		-=			
ANR	5856489	MemberAccess	current . y		5856222	0					
ANR	5856490	Identifier	current		5856222	0					
ANR	5856491	Identifier	y		5856222	1					
ANR	5856492	MemberAccess	tangmeet . y		5856222	1					
ANR	5856493	Identifier	tangmeet		5856222	0					
ANR	5856494	Identifier	y		5856222	1					
ANR	5856495	ExpressionStatement	dist_squared = ( ( double ) current . x ) * current . x + ( ( double ) current . y ) * current . y	2535:4:104220:104319	5856222	11	True				
ANR	5856496	AssignmentExpression	dist_squared = ( ( double ) current . x ) * current . x + ( ( double ) current . y ) * current . y		5856222	0		=			
ANR	5856497	Identifier	dist_squared		5856222	0					
ANR	5856498	AdditiveExpression	( ( double ) current . x ) * current . x + ( ( double ) current . y ) * current . y		5856222	1		+			
ANR	5856499	MultiplicativeExpression	( ( double ) current . x ) * current . x		5856222	0		*			
ANR	5856500	CastExpression	( double ) current . x		5856222	0					
ANR	5856501	CastTarget	double		5856222	0					
ANR	5856502	MemberAccess	current . x		5856222	1					
ANR	5856503	Identifier	current		5856222	0					
ANR	5856504	Identifier	x		5856222	1					
ANR	5856505	MemberAccess	current . x		5856222	1					
ANR	5856506	Identifier	current		5856222	0					
ANR	5856507	Identifier	x		5856222	1					
ANR	5856508	MultiplicativeExpression	( ( double ) current . y ) * current . y		5856222	1		*			
ANR	5856509	CastExpression	( double ) current . y		5856222	0					
ANR	5856510	CastTarget	double		5856222	0					
ANR	5856511	MemberAccess	current . y		5856222	1					
ANR	5856512	Identifier	current		5856222	0					
ANR	5856513	Identifier	y		5856222	1					
ANR	5856514	MemberAccess	current . y		5856222	1					
ANR	5856515	Identifier	current		5856222	0					
ANR	5856516	Identifier	y		5856222	1					
ANR	5856517	ExpressionStatement	rad_squared = ( ( double ) width -> x ) * width -> x + ( ( double ) width -> y ) * width -> y	2537:4:104325:104420	5856222	12	True				
ANR	5856518	AssignmentExpression	rad_squared = ( ( double ) width -> x ) * width -> x + ( ( double ) width -> y ) * width -> y		5856222	0		=			
ANR	5856519	Identifier	rad_squared		5856222	0					
ANR	5856520	AdditiveExpression	( ( double ) width -> x ) * width -> x + ( ( double ) width -> y ) * width -> y		5856222	1		+			
ANR	5856521	MultiplicativeExpression	( ( double ) width -> x ) * width -> x		5856222	0		*			
ANR	5856522	CastExpression	( double ) width -> x		5856222	0					
ANR	5856523	CastTarget	double		5856222	0					
ANR	5856524	PtrMemberAccess	width -> x		5856222	1					
ANR	5856525	Identifier	width		5856222	0					
ANR	5856526	Identifier	x		5856222	1					
ANR	5856527	PtrMemberAccess	width -> x		5856222	1					
ANR	5856528	Identifier	width		5856222	0					
ANR	5856529	Identifier	x		5856222	1					
ANR	5856530	MultiplicativeExpression	( ( double ) width -> y ) * width -> y		5856222	1		*			
ANR	5856531	CastExpression	( double ) width -> y		5856222	0					
ANR	5856532	CastTarget	double		5856222	0					
ANR	5856533	PtrMemberAccess	width -> y		5856222	1					
ANR	5856534	Identifier	width		5856222	0					
ANR	5856535	Identifier	y		5856222	1					
ANR	5856536	PtrMemberAccess	width -> y		5856222	1					
ANR	5856537	Identifier	width		5856222	0					
ANR	5856538	Identifier	y		5856222	1					
ANR	5856539	ExpressionStatement	dist_squared /= rad_squared	2539:4:104426:104453	5856222	13	True				
ANR	5856540	AssignmentExpression	dist_squared /= rad_squared		5856222	0		/=			
ANR	5856541	Identifier	dist_squared		5856222	0					
ANR	5856542	Identifier	rad_squared		5856222	1					
ANR	5856543	ExpressionStatement	F = ( 4.0 / 3.0 ) * ( 1 / ( 1 + sqrt ( 1 + dist_squared ) ) )	2540:4:104459:104501	5856222	14	True				
ANR	5856544	AssignmentExpression	F = ( 4.0 / 3.0 ) * ( 1 / ( 1 + sqrt ( 1 + dist_squared ) ) )		5856222	0		=			
ANR	5856545	Identifier	F		5856222	0					
ANR	5856546	MultiplicativeExpression	( 4.0 / 3.0 ) * ( 1 / ( 1 + sqrt ( 1 + dist_squared ) ) )		5856222	1		*			
ANR	5856547	MultiplicativeExpression	4.0 / 3.0		5856222	0		/			
ANR	5856548	PrimaryExpression	4.0		5856222	0					
ANR	5856549	PrimaryExpression	3.0		5856222	1					
ANR	5856550	MultiplicativeExpression	1 / ( 1 + sqrt ( 1 + dist_squared ) )		5856222	1		/			
ANR	5856551	PrimaryExpression	1		5856222	0					
ANR	5856552	AdditiveExpression	1 + sqrt ( 1 + dist_squared )		5856222	1		+			
ANR	5856553	PrimaryExpression	1		5856222	0					
ANR	5856554	CallExpression	sqrt ( 1 + dist_squared )		5856222	1					
ANR	5856555	Callee	sqrt		5856222	0					
ANR	5856556	Identifier	sqrt		5856222	0					
ANR	5856557	ArgumentList	1 + dist_squared		5856222	1					
ANR	5856558	Argument	1 + dist_squared		5856222	0					
ANR	5856559	AdditiveExpression	1 + dist_squared		5856222	0		+			
ANR	5856560	PrimaryExpression	1		5856222	0					
ANR	5856561	Identifier	dist_squared		5856222	1					
ANR	5856562	ReturnStatement	"return gx_path_add_partial_arc ( ppath , final -> x , final -> y , tangmeet . x , tangmeet . y , F ) ;"	2541:4:104507:104626	5856222	15	True				
ANR	5856563	CallExpression	"gx_path_add_partial_arc ( ppath , final -> x , final -> y , tangmeet . x , tangmeet . y , F )"		5856222	0					
ANR	5856564	Callee	gx_path_add_partial_arc		5856222	0					
ANR	5856565	Identifier	gx_path_add_partial_arc		5856222	0					
ANR	5856566	ArgumentList	ppath		5856222	1					
ANR	5856567	Argument	ppath		5856222	0					
ANR	5856568	Identifier	ppath		5856222	0					
ANR	5856569	Argument	final -> x		5856222	1					
ANR	5856570	PtrMemberAccess	final -> x		5856222	0					
ANR	5856571	Identifier	final		5856222	0					
ANR	5856572	Identifier	x		5856222	1					
ANR	5856573	Argument	final -> y		5856222	2					
ANR	5856574	PtrMemberAccess	final -> y		5856222	0					
ANR	5856575	Identifier	final		5856222	0					
ANR	5856576	Identifier	y		5856222	1					
ANR	5856577	Argument	tangmeet . x		5856222	3					
ANR	5856578	MemberAccess	tangmeet . x		5856222	0					
ANR	5856579	Identifier	tangmeet		5856222	0					
ANR	5856580	Identifier	x		5856222	1					
ANR	5856581	Argument	tangmeet . y		5856222	4					
ANR	5856582	MemberAccess	tangmeet . y		5856222	0					
ANR	5856583	Identifier	tangmeet		5856222	0					
ANR	5856584	Identifier	y		5856222	1					
ANR	5856585	Argument	F		5856222	5					
ANR	5856586	Identifier	F		5856222	0					
ANR	5856587	ReturnType	static int		5856222	1					
ANR	5856588	Identifier	do_pie_join		5856222	2					
ANR	5856589	ParameterList	"gx_path * ppath , gs_fixed_point * centre , gs_fixed_point * current_orig , gs_fixed_point * current_tangent , gs_fixed_point * final , gs_fixed_point * final_tangent , bool ccw , gs_fixed_point * width"		5856222	3					
ANR	5856590	Parameter	gx_path * ppath	2487:12:102367:102381	5856222	0	True				
ANR	5856591	ParameterType	gx_path *		5856222	0					
ANR	5856592	Identifier	ppath		5856222	1					
ANR	5856593	Parameter	gs_fixed_point * centre	2487:29:102384:102405	5856222	1	True				
ANR	5856594	ParameterType	gs_fixed_point *		5856222	0					
ANR	5856595	Identifier	centre		5856222	1					
ANR	5856596	Parameter	gs_fixed_point * current_orig	2488:12:102420:102447	5856222	2	True				
ANR	5856597	ParameterType	gs_fixed_point *		5856222	0					
ANR	5856598	Identifier	current_orig		5856222	1					
ANR	5856599	Parameter	gs_fixed_point * current_tangent	2488:42:102450:102480	5856222	3	True				
ANR	5856600	ParameterType	gs_fixed_point *		5856222	0					
ANR	5856601	Identifier	current_tangent		5856222	1					
ANR	5856602	Parameter	gs_fixed_point * final	2489:12:102495:102515	5856222	4	True				
ANR	5856603	ParameterType	gs_fixed_point *		5856222	0					
ANR	5856604	Identifier	final		5856222	1					
ANR	5856605	Parameter	gs_fixed_point * final_tangent	2489:35:102518:102546	5856222	5	True				
ANR	5856606	ParameterType	gs_fixed_point *		5856222	0					
ANR	5856607	Identifier	final_tangent		5856222	1					
ANR	5856608	Parameter	bool ccw	2489:66:102549:102556	5856222	6	True				
ANR	5856609	ParameterType	bool		5856222	0					
ANR	5856610	Identifier	ccw		5856222	1					
ANR	5856611	Parameter	gs_fixed_point * width	2490:12:102571:102591	5856222	7	True				
ANR	5856612	ParameterType	gs_fixed_point *		5856222	0					
ANR	5856613	Identifier	width		5856222	1					
ANR	5856614	CFGEntryNode	ENTRY		5856222		True				
ANR	5856615	CFGExitNode	EXIT		5856222		True				
ANR	5856616	Symbol	final -> y		5856222						
ANR	5856617	Symbol	code		5856222						
ANR	5856618	Symbol	current_tangent -> y		5856222						
ANR	5856619	Symbol	current_tangent -> x		5856222						
ANR	5856620	Symbol	final -> x		5856222						
ANR	5856621	Symbol	F		5856222						
ANR	5856622	Symbol	& current		5856222						
ANR	5856623	Symbol	ppath		5856222						
ANR	5856624	Symbol	current_orig		5856222						
ANR	5856625	Symbol	line_intersect		5856222						
ANR	5856626	Symbol	* width		5856222						
ANR	5856627	Symbol	current		5856222						
ANR	5856628	Symbol	tangent		5856222						
ANR	5856629	Symbol	final_tangent		5856222						
ANR	5856630	Symbol	sqrt		5856222						
ANR	5856631	Symbol	ccw		5856222						
ANR	5856632	Symbol	tmp		5856222						
ANR	5856633	Symbol	tangent . x		5856222						
ANR	5856634	Symbol	tangent . y		5856222						
ANR	5856635	Symbol	current . y		5856222						
ANR	5856636	Symbol	current_tangent		5856222						
ANR	5856637	Symbol	current . x		5856222						
ANR	5856638	Symbol	quarter_arc_fraction		5856222						
ANR	5856639	Symbol	rad_squared		5856222						
ANR	5856640	Symbol	centre		5856222						
ANR	5856641	Symbol	width -> y		5856222						
ANR	5856642	Symbol	& tangmeet		5856222						
ANR	5856643	Symbol	tangmeet . y		5856222						
ANR	5856644	Symbol	tangmeet . x		5856222						
ANR	5856645	Symbol	dist_squared		5856222						
ANR	5856646	Symbol	* final_tangent		5856222						
ANR	5856647	Symbol	& tangent		5856222						
ANR	5856648	Symbol	width -> x		5856222						
ANR	5856649	Symbol	* final		5856222						
ANR	5856650	Symbol	* current_tangent		5856222						
ANR	5856651	Symbol	* current_orig		5856222						
ANR	5856652	Symbol	gx_path_add_partial_arc		5856222						
ANR	5856653	Symbol	final_tangent -> x		5856222						
ANR	5856654	Symbol	tangmeet		5856222						
ANR	5856655	Symbol	final_tangent -> y		5856222						
ANR	5856656	Symbol	gx_path_add_line		5856222						
ANR	5856657	Symbol	final		5856222						
ANR	5856658	Symbol	width		5856222						
ANR	5856659	Symbol	current_orig -> x		5856222						
ANR	5856660	Symbol	* centre		5856222						
ANR	5856661	Symbol	current_orig -> y		5856222						
ANR	5856662	Symbol	centre -> x		5856222						
ANR	5856663	Symbol	centre -> y		5856222						
ANR	5856664	Function	add_pie_join	2547:0:104731:106558							
ANR	5856665	FunctionDef	"add_pie_join (gx_path * ppath , pl_ptr plp , pl_ptr nplp , bool reflected , bool cap)"		5856664	0					
ANR	5856666	CompoundStatement		2550:0:104836:106558	5856664	0					
ANR	5856667	IdentifierDeclStatement	int code ;	2551:4:104842:104850	5856664	0	True				
ANR	5856668	IdentifierDecl	code		5856664	0					
ANR	5856669	IdentifierDeclType	int		5856664	0					
ANR	5856670	Identifier	code		5856664	1					
ANR	5856671	IdentifierDeclStatement	"gs_fixed_point * current , * final , * tangent , * final_tangent ;"	2552:4:104856:104913	5856664	1	True				
ANR	5856672	IdentifierDecl	* current		5856664	0					
ANR	5856673	IdentifierDeclType	gs_fixed_point *		5856664	0					
ANR	5856674	Identifier	current		5856664	1					
ANR	5856675	IdentifierDecl	* final		5856664	1					
ANR	5856676	IdentifierDeclType	gs_fixed_point *		5856664	0					
ANR	5856677	Identifier	final		5856664	1					
ANR	5856678	IdentifierDecl	* tangent		5856664	2					
ANR	5856679	IdentifierDeclType	gs_fixed_point *		5856664	0					
ANR	5856680	Identifier	tangent		5856664	1					
ANR	5856681	IdentifierDecl	* final_tangent		5856664	3					
ANR	5856682	IdentifierDeclType	gs_fixed_point *		5856664	0					
ANR	5856683	Identifier	final_tangent		5856664	1					
ANR	5856684	IdentifierDeclStatement	"double l , r ;"	2553:4:104919:104930	5856664	2	True				
ANR	5856685	IdentifierDecl	l		5856664	0					
ANR	5856686	IdentifierDeclType	double		5856664	0					
ANR	5856687	Identifier	l		5856664	1					
ANR	5856688	IdentifierDecl	r		5856664	1					
ANR	5856689	IdentifierDeclType	double		5856664	0					
ANR	5856690	Identifier	r		5856664	1					
ANR	5856691	IdentifierDeclStatement	bool ccw ;	2554:4:104936:104944	5856664	3	True				
ANR	5856692	IdentifierDecl	ccw		5856664	0					
ANR	5856693	IdentifierDeclType	bool		5856664	0					
ANR	5856694	Identifier	ccw		5856664	1					
ANR	5856695	ExpressionStatement	l = ( double ) ( plp -> width . x ) * ( nplp -> width . y )	2556:4:104951:105013	5856664	4	True				
ANR	5856696	AssignmentExpression	l = ( double ) ( plp -> width . x ) * ( nplp -> width . y )		5856664	0		=			
ANR	5856697	Identifier	l		5856664	0					
ANR	5856698	MultiplicativeExpression	( double ) ( plp -> width . x ) * ( nplp -> width . y )		5856664	1		*			
ANR	5856699	CastExpression	( double ) ( plp -> width . x )		5856664	0					
ANR	5856700	CastTarget	double		5856664	0					
ANR	5856701	MemberAccess	plp -> width . x		5856664	1					
ANR	5856702	PtrMemberAccess	plp -> width		5856664	0					
ANR	5856703	Identifier	plp		5856664	0					
ANR	5856704	Identifier	width		5856664	1					
ANR	5856705	Identifier	x		5856664	1					
ANR	5856706	MemberAccess	nplp -> width . y		5856664	1					
ANR	5856707	PtrMemberAccess	nplp -> width		5856664	0					
ANR	5856708	Identifier	nplp		5856664	0					
ANR	5856709	Identifier	width		5856664	1					
ANR	5856710	Identifier	y		5856664	1					
ANR	5856711	ExpressionStatement	r = ( double ) ( nplp -> width . x ) * ( plp -> width . y )	2557:4:105019:105081	5856664	5	True				
ANR	5856712	AssignmentExpression	r = ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5856664	0		=			
ANR	5856713	Identifier	r		5856664	0					
ANR	5856714	MultiplicativeExpression	( double ) ( nplp -> width . x ) * ( plp -> width . y )		5856664	1		*			
ANR	5856715	CastExpression	( double ) ( nplp -> width . x )		5856664	0					
ANR	5856716	CastTarget	double		5856664	0					
ANR	5856717	MemberAccess	nplp -> width . x		5856664	1					
ANR	5856718	PtrMemberAccess	nplp -> width		5856664	0					
ANR	5856719	Identifier	nplp		5856664	0					
ANR	5856720	Identifier	width		5856664	1					
ANR	5856721	Identifier	x		5856664	1					
ANR	5856722	MemberAccess	plp -> width . y		5856664	1					
ANR	5856723	PtrMemberAccess	plp -> width		5856664	0					
ANR	5856724	Identifier	plp		5856664	0					
ANR	5856725	Identifier	width		5856664	1					
ANR	5856726	Identifier	y		5856664	1					
ANR	5856727	IfStatement	if ( l == r )		5856664	6					
ANR	5856728	Condition	l == r	2559:8:105092:105097	5856664	0	True				
ANR	5856729	EqualityExpression	l == r		5856664	0		==			
ANR	5856730	Identifier	l		5856664	0					
ANR	5856731	Identifier	r		5856664	1					
ANR	5856732	CompoundStatement		10:16:263:263	5856664	1					
ANR	5856733	IfStatement	if ( cap )		5856664	0					
ANR	5856734	Condition	cap	2560:12:105114:105116	5856664	0	True				
ANR	5856735	Identifier	cap		5856664	0					
ANR	5856736	ReturnStatement	"return add_pie_cap ( ppath , & plp -> e ) ;"	2561:12:105131:105165	5856664	1	True				
ANR	5856737	CallExpression	"add_pie_cap ( ppath , & plp -> e )"		5856664	0					
ANR	5856738	Callee	add_pie_cap		5856664	0					
ANR	5856739	Identifier	add_pie_cap		5856664	0					
ANR	5856740	ArgumentList	ppath		5856664	1					
ANR	5856741	Argument	ppath		5856664	0					
ANR	5856742	Identifier	ppath		5856664	0					
ANR	5856743	Argument	& plp -> e		5856664	1					
ANR	5856744	UnaryOperationExpression	& plp -> e		5856664	0					
ANR	5856745	UnaryOperator	&		5856664	0					
ANR	5856746	PtrMemberAccess	plp -> e		5856664	1					
ANR	5856747	Identifier	plp		5856664	0					
ANR	5856748	Identifier	e		5856664	1					
ANR	5856749	ElseStatement	else		5856664	0					
ANR	5856750	ReturnStatement	"return gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y ) ;"	2563:12:105192:105248	5856664	0	True				
ANR	5856751	CallExpression	"gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y )"		5856664	0					
ANR	5856752	Callee	gx_path_add_line		5856664	0					
ANR	5856753	Identifier	gx_path_add_line		5856664	0					
ANR	5856754	ArgumentList	ppath		5856664	1					
ANR	5856755	Argument	ppath		5856664	0					
ANR	5856756	Identifier	ppath		5856664	0					
ANR	5856757	Argument	plp -> e . ce . x		5856664	1					
ANR	5856758	MemberAccess	plp -> e . ce . x		5856664	0					
ANR	5856759	MemberAccess	plp -> e . ce		5856664	0					
ANR	5856760	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856761	Identifier	plp		5856664	0					
ANR	5856762	Identifier	e		5856664	1					
ANR	5856763	Identifier	ce		5856664	1					
ANR	5856764	Identifier	x		5856664	1					
ANR	5856765	Argument	plp -> e . ce . y		5856664	2					
ANR	5856766	MemberAccess	plp -> e . ce . y		5856664	0					
ANR	5856767	MemberAccess	plp -> e . ce		5856664	0					
ANR	5856768	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856769	Identifier	plp		5856664	0					
ANR	5856770	Identifier	e		5856664	1					
ANR	5856771	Identifier	ce		5856664	1					
ANR	5856772	Identifier	y		5856664	1					
ANR	5856773	ExpressionStatement	ccw = ( l > r )	2566:4:105261:105274	5856664	7	True				
ANR	5856774	AssignmentExpression	ccw = ( l > r )		5856664	0		=			
ANR	5856775	Identifier	ccw		5856664	0					
ANR	5856776	RelationalExpression	l > r		5856664	1		>			
ANR	5856777	Identifier	l		5856664	0					
ANR	5856778	Identifier	r		5856664	1					
ANR	5856779	ExpressionStatement	ccw ^= reflected	2568:4:105281:105297	5856664	8	True				
ANR	5856780	AssignmentExpression	ccw ^= reflected		5856664	0		^=			
ANR	5856781	Identifier	ccw		5856664	0					
ANR	5856782	Identifier	reflected		5856664	1					
ANR	5856783	IfStatement	if ( ccw )		5856664	9					
ANR	5856784	Condition	ccw	2571:8:105364:105366	5856664	0	True				
ANR	5856785	Identifier	ccw		5856664	0					
ANR	5856786	CompoundStatement		22:13:532:532	5856664	1					
ANR	5856787	ExpressionStatement	current = & plp -> e . co	2572:8:105379:105406	5856664	0	True				
ANR	5856788	AssignmentExpression	current = & plp -> e . co		5856664	0		=			
ANR	5856789	Identifier	current		5856664	0					
ANR	5856790	UnaryOperationExpression	& plp -> e . co		5856664	1					
ANR	5856791	UnaryOperator	&		5856664	0					
ANR	5856792	MemberAccess	plp -> e . co		5856664	1					
ANR	5856793	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856794	Identifier	plp		5856664	0					
ANR	5856795	Identifier	e		5856664	1					
ANR	5856796	Identifier	co		5856664	1					
ANR	5856797	ExpressionStatement	final = & nplp -> o . ce	2573:8:105416:105443	5856664	1	True				
ANR	5856798	AssignmentExpression	final = & nplp -> o . ce		5856664	0		=			
ANR	5856799	Identifier	final		5856664	0					
ANR	5856800	UnaryOperationExpression	& nplp -> o . ce		5856664	1					
ANR	5856801	UnaryOperator	&		5856664	0					
ANR	5856802	MemberAccess	nplp -> o . ce		5856664	1					
ANR	5856803	PtrMemberAccess	nplp -> o		5856664	0					
ANR	5856804	Identifier	nplp		5856664	0					
ANR	5856805	Identifier	o		5856664	1					
ANR	5856806	Identifier	ce		5856664	1					
ANR	5856807	ExpressionStatement	tangent = & plp -> e . cdelta	2574:8:105453:105484	5856664	2	True				
ANR	5856808	AssignmentExpression	tangent = & plp -> e . cdelta		5856664	0		=			
ANR	5856809	Identifier	tangent		5856664	0					
ANR	5856810	UnaryOperationExpression	& plp -> e . cdelta		5856664	1					
ANR	5856811	UnaryOperator	&		5856664	0					
ANR	5856812	MemberAccess	plp -> e . cdelta		5856664	1					
ANR	5856813	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856814	Identifier	plp		5856664	0					
ANR	5856815	Identifier	e		5856664	1					
ANR	5856816	Identifier	cdelta		5856664	1					
ANR	5856817	ExpressionStatement	final_tangent = & nplp -> o . cdelta	2575:8:105494:105525	5856664	3	True				
ANR	5856818	AssignmentExpression	final_tangent = & nplp -> o . cdelta		5856664	0		=			
ANR	5856819	Identifier	final_tangent		5856664	0					
ANR	5856820	UnaryOperationExpression	& nplp -> o . cdelta		5856664	1					
ANR	5856821	UnaryOperator	&		5856664	0					
ANR	5856822	MemberAccess	nplp -> o . cdelta		5856664	1					
ANR	5856823	PtrMemberAccess	nplp -> o		5856664	0					
ANR	5856824	Identifier	nplp		5856664	0					
ANR	5856825	Identifier	o		5856664	1					
ANR	5856826	Identifier	cdelta		5856664	1					
ANR	5856827	IfStatement	if ( current -> x == final -> x && current -> y == final -> y )		5856664	4					
ANR	5856828	Condition	current -> x == final -> x && current -> y == final -> y	2577:12:105580:105627	5856664	0	True				
ANR	5856829	AndExpression	current -> x == final -> x && current -> y == final -> y		5856664	0		&&			
ANR	5856830	EqualityExpression	current -> x == final -> x		5856664	0		==			
ANR	5856831	PtrMemberAccess	current -> x		5856664	0					
ANR	5856832	Identifier	current		5856664	0					
ANR	5856833	Identifier	x		5856664	1					
ANR	5856834	PtrMemberAccess	final -> x		5856664	1					
ANR	5856835	Identifier	final		5856664	0					
ANR	5856836	Identifier	x		5856664	1					
ANR	5856837	EqualityExpression	current -> y == final -> y		5856664	1		==			
ANR	5856838	PtrMemberAccess	current -> y		5856664	0					
ANR	5856839	Identifier	current		5856664	0					
ANR	5856840	Identifier	y		5856664	1					
ANR	5856841	PtrMemberAccess	final -> y		5856664	1					
ANR	5856842	Identifier	final		5856664	0					
ANR	5856843	Identifier	y		5856664	1					
ANR	5856844	CompoundStatement		28:62:793:793	5856664	1					
ANR	5856845	ReturnStatement	"return gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y ) ;"	2578:12:105644:105700	5856664	0	True				
ANR	5856846	CallExpression	"gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y )"		5856664	0					
ANR	5856847	Callee	gx_path_add_line		5856664	0					
ANR	5856848	Identifier	gx_path_add_line		5856664	0					
ANR	5856849	ArgumentList	ppath		5856664	1					
ANR	5856850	Argument	ppath		5856664	0					
ANR	5856851	Identifier	ppath		5856664	0					
ANR	5856852	Argument	plp -> e . ce . x		5856664	1					
ANR	5856853	MemberAccess	plp -> e . ce . x		5856664	0					
ANR	5856854	MemberAccess	plp -> e . ce		5856664	0					
ANR	5856855	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856856	Identifier	plp		5856664	0					
ANR	5856857	Identifier	e		5856664	1					
ANR	5856858	Identifier	ce		5856664	1					
ANR	5856859	Identifier	x		5856664	1					
ANR	5856860	Argument	plp -> e . ce . y		5856664	2					
ANR	5856861	MemberAccess	plp -> e . ce . y		5856664	0					
ANR	5856862	MemberAccess	plp -> e . ce		5856664	0					
ANR	5856863	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856864	Identifier	plp		5856664	0					
ANR	5856865	Identifier	e		5856664	1					
ANR	5856866	Identifier	ce		5856664	1					
ANR	5856867	Identifier	y		5856664	1					
ANR	5856868	ElseStatement	else		5856664	0					
ANR	5856869	CompoundStatement		31:11:886:886	5856664	0					
ANR	5856870	ExpressionStatement	current = & nplp -> o . co	2581:8:105733:105760	5856664	0	True				
ANR	5856871	AssignmentExpression	current = & nplp -> o . co		5856664	0		=			
ANR	5856872	Identifier	current		5856664	0					
ANR	5856873	UnaryOperationExpression	& nplp -> o . co		5856664	1					
ANR	5856874	UnaryOperator	&		5856664	0					
ANR	5856875	MemberAccess	nplp -> o . co		5856664	1					
ANR	5856876	PtrMemberAccess	nplp -> o		5856664	0					
ANR	5856877	Identifier	nplp		5856664	0					
ANR	5856878	Identifier	o		5856664	1					
ANR	5856879	Identifier	co		5856664	1					
ANR	5856880	ExpressionStatement	final = & plp -> e . ce	2582:8:105770:105797	5856664	1	True				
ANR	5856881	AssignmentExpression	final = & plp -> e . ce		5856664	0		=			
ANR	5856882	Identifier	final		5856664	0					
ANR	5856883	UnaryOperationExpression	& plp -> e . ce		5856664	1					
ANR	5856884	UnaryOperator	&		5856664	0					
ANR	5856885	MemberAccess	plp -> e . ce		5856664	1					
ANR	5856886	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856887	Identifier	plp		5856664	0					
ANR	5856888	Identifier	e		5856664	1					
ANR	5856889	Identifier	ce		5856664	1					
ANR	5856890	ExpressionStatement	tangent = & nplp -> o . cdelta	2583:8:105807:105838	5856664	2	True				
ANR	5856891	AssignmentExpression	tangent = & nplp -> o . cdelta		5856664	0		=			
ANR	5856892	Identifier	tangent		5856664	0					
ANR	5856893	UnaryOperationExpression	& nplp -> o . cdelta		5856664	1					
ANR	5856894	UnaryOperator	&		5856664	0					
ANR	5856895	MemberAccess	nplp -> o . cdelta		5856664	1					
ANR	5856896	PtrMemberAccess	nplp -> o		5856664	0					
ANR	5856897	Identifier	nplp		5856664	0					
ANR	5856898	Identifier	o		5856664	1					
ANR	5856899	Identifier	cdelta		5856664	1					
ANR	5856900	ExpressionStatement	final_tangent = & plp -> e . cdelta	2584:8:105848:105879	5856664	3	True				
ANR	5856901	AssignmentExpression	final_tangent = & plp -> e . cdelta		5856664	0		=			
ANR	5856902	Identifier	final_tangent		5856664	0					
ANR	5856903	UnaryOperationExpression	& plp -> e . cdelta		5856664	1					
ANR	5856904	UnaryOperator	&		5856664	0					
ANR	5856905	MemberAccess	plp -> e . cdelta		5856664	1					
ANR	5856906	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856907	Identifier	plp		5856664	0					
ANR	5856908	Identifier	e		5856664	1					
ANR	5856909	Identifier	cdelta		5856664	1					
ANR	5856910	ExpressionStatement	"code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y )"	2585:8:105889:105943	5856664	4	True				
ANR	5856911	AssignmentExpression	"code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y )"		5856664	0		=			
ANR	5856912	Identifier	code		5856664	0					
ANR	5856913	CallExpression	"gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y )"		5856664	1					
ANR	5856914	Callee	gx_path_add_line		5856664	0					
ANR	5856915	Identifier	gx_path_add_line		5856664	0					
ANR	5856916	ArgumentList	ppath		5856664	1					
ANR	5856917	Argument	ppath		5856664	0					
ANR	5856918	Identifier	ppath		5856664	0					
ANR	5856919	Argument	plp -> e . p . x		5856664	1					
ANR	5856920	MemberAccess	plp -> e . p . x		5856664	0					
ANR	5856921	MemberAccess	plp -> e . p		5856664	0					
ANR	5856922	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856923	Identifier	plp		5856664	0					
ANR	5856924	Identifier	e		5856664	1					
ANR	5856925	Identifier	p		5856664	1					
ANR	5856926	Identifier	x		5856664	1					
ANR	5856927	Argument	plp -> e . p . y		5856664	2					
ANR	5856928	MemberAccess	plp -> e . p . y		5856664	0					
ANR	5856929	MemberAccess	plp -> e . p		5856664	0					
ANR	5856930	PtrMemberAccess	plp -> e		5856664	0					
ANR	5856931	Identifier	plp		5856664	0					
ANR	5856932	Identifier	e		5856664	1					
ANR	5856933	Identifier	p		5856664	1					
ANR	5856934	Identifier	y		5856664	1					
ANR	5856935	IfStatement	if ( code < 0 )		5856664	5					
ANR	5856936	Condition	code < 0	2586:12:105957:105964	5856664	0	True				
ANR	5856937	RelationalExpression	code < 0		5856664	0		<			
ANR	5856938	Identifier	code		5856664	0					
ANR	5856939	PrimaryExpression	0		5856664	1					
ANR	5856940	ReturnStatement	return code ;	2587:12:105979:105990	5856664	1	True				
ANR	5856941	Identifier	code		5856664	0					
ANR	5856942	ExpressionStatement	"code = gx_path_add_line ( ppath , current -> x , current -> y )"	2588:8:106000:106054	5856664	6	True				
ANR	5856943	AssignmentExpression	"code = gx_path_add_line ( ppath , current -> x , current -> y )"		5856664	0		=			
ANR	5856944	Identifier	code		5856664	0					
ANR	5856945	CallExpression	"gx_path_add_line ( ppath , current -> x , current -> y )"		5856664	1					
ANR	5856946	Callee	gx_path_add_line		5856664	0					
ANR	5856947	Identifier	gx_path_add_line		5856664	0					
ANR	5856948	ArgumentList	ppath		5856664	1					
ANR	5856949	Argument	ppath		5856664	0					
ANR	5856950	Identifier	ppath		5856664	0					
ANR	5856951	Argument	current -> x		5856664	1					
ANR	5856952	PtrMemberAccess	current -> x		5856664	0					
ANR	5856953	Identifier	current		5856664	0					
ANR	5856954	Identifier	x		5856664	1					
ANR	5856955	Argument	current -> y		5856664	2					
ANR	5856956	PtrMemberAccess	current -> y		5856664	0					
ANR	5856957	Identifier	current		5856664	0					
ANR	5856958	Identifier	y		5856664	1					
ANR	5856959	IfStatement	if ( code < 0 )		5856664	7					
ANR	5856960	Condition	code < 0	2589:12:106068:106075	5856664	0	True				
ANR	5856961	RelationalExpression	code < 0		5856664	0		<			
ANR	5856962	Identifier	code		5856664	0					
ANR	5856963	PrimaryExpression	0		5856664	1					
ANR	5856964	ReturnStatement	return code ;	2590:12:106090:106101	5856664	1	True				
ANR	5856965	Identifier	code		5856664	0					
ANR	5856966	IfStatement	if ( current -> x == final -> x && current -> y == final -> y )		5856664	8					
ANR	5856967	Condition	current -> x == final -> x && current -> y == final -> y	2591:12:106115:106162	5856664	0	True				
ANR	5856968	AndExpression	current -> x == final -> x && current -> y == final -> y		5856664	0		&&			
ANR	5856969	EqualityExpression	current -> x == final -> x		5856664	0		==			
ANR	5856970	PtrMemberAccess	current -> x		5856664	0					
ANR	5856971	Identifier	current		5856664	0					
ANR	5856972	Identifier	x		5856664	1					
ANR	5856973	PtrMemberAccess	final -> x		5856664	1					
ANR	5856974	Identifier	final		5856664	0					
ANR	5856975	Identifier	x		5856664	1					
ANR	5856976	EqualityExpression	current -> y == final -> y		5856664	1		==			
ANR	5856977	PtrMemberAccess	current -> y		5856664	0					
ANR	5856978	Identifier	current		5856664	0					
ANR	5856979	Identifier	y		5856664	1					
ANR	5856980	PtrMemberAccess	final -> y		5856664	1					
ANR	5856981	Identifier	final		5856664	0					
ANR	5856982	Identifier	y		5856664	1					
ANR	5856983	ReturnStatement	return 0 ;	2592:12:106177:106185	5856664	1	True				
ANR	5856984	PrimaryExpression	0		5856664	0					
ANR	5856985	IfStatement	"if ( ( code = do_pie_join ( ppath , & plp -> e . p , current , tangent , final , final_tangent , ! reflected , & plp -> width ) ) < 0 )"		5856664	10					
ANR	5856986	Condition	"( code = do_pie_join ( ppath , & plp -> e . p , current , tangent , final , final_tangent , ! reflected , & plp -> width ) ) < 0"	2595:8:106202:106336	5856664	0	True				
ANR	5856987	RelationalExpression	"( code = do_pie_join ( ppath , & plp -> e . p , current , tangent , final , final_tangent , ! reflected , & plp -> width ) ) < 0"		5856664	0		<			
ANR	5856988	AssignmentExpression	"code = do_pie_join ( ppath , & plp -> e . p , current , tangent , final , final_tangent , ! reflected , & plp -> width )"		5856664	0		=			
ANR	5856989	Identifier	code		5856664	0					
ANR	5856990	CallExpression	"do_pie_join ( ppath , & plp -> e . p , current , tangent , final , final_tangent , ! reflected , & plp -> width )"		5856664	1					
ANR	5856991	Callee	do_pie_join		5856664	0					
ANR	5856992	Identifier	do_pie_join		5856664	0					
ANR	5856993	ArgumentList	ppath		5856664	1					
ANR	5856994	Argument	ppath		5856664	0					
ANR	5856995	Identifier	ppath		5856664	0					
ANR	5856996	Argument	& plp -> e . p		5856664	1					
ANR	5856997	UnaryOperationExpression	& plp -> e . p		5856664	0					
ANR	5856998	UnaryOperator	&		5856664	0					
ANR	5856999	MemberAccess	plp -> e . p		5856664	1					
ANR	5857000	PtrMemberAccess	plp -> e		5856664	0					
ANR	5857001	Identifier	plp		5856664	0					
ANR	5857002	Identifier	e		5856664	1					
ANR	5857003	Identifier	p		5856664	1					
ANR	5857004	Argument	current		5856664	2					
ANR	5857005	Identifier	current		5856664	0					
ANR	5857006	Argument	tangent		5856664	3					
ANR	5857007	Identifier	tangent		5856664	0					
ANR	5857008	Argument	final		5856664	4					
ANR	5857009	Identifier	final		5856664	0					
ANR	5857010	Argument	final_tangent		5856664	5					
ANR	5857011	Identifier	final_tangent		5856664	0					
ANR	5857012	Argument	! reflected		5856664	6					
ANR	5857013	UnaryOperationExpression	! reflected		5856664	0					
ANR	5857014	UnaryOperator	!		5856664	0					
ANR	5857015	Identifier	reflected		5856664	1					
ANR	5857016	Argument	& plp -> width		5856664	7					
ANR	5857017	UnaryOperationExpression	& plp -> width		5856664	0					
ANR	5857018	UnaryOperator	&		5856664	0					
ANR	5857019	PtrMemberAccess	plp -> width		5856664	1					
ANR	5857020	Identifier	plp		5856664	0					
ANR	5857021	Identifier	width		5856664	1					
ANR	5857022	PrimaryExpression	0		5856664	1					
ANR	5857023	ReturnStatement	return code ;	2597:8:106347:106358	5856664	1	True				
ANR	5857024	Identifier	code		5856664	0					
ANR	5857025	IfStatement	"if ( ccw && ( ( code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y ) ) < 0 ) )"		5856664	11					
ANR	5857026	Condition	"ccw && ( ( code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y ) ) < 0 )"	2598:8:106368:106519	5856664	0	True				
ANR	5857027	AndExpression	"ccw && ( ( code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y ) ) < 0 )"		5856664	0		&&			
ANR	5857028	Identifier	ccw		5856664	0					
ANR	5857029	OrExpression	"( code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y ) ) < 0"		5856664	1		||			
ANR	5857030	RelationalExpression	"( code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y ) ) < 0"		5856664	0		<			
ANR	5857031	AssignmentExpression	"code = gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y )"		5856664	0		=			
ANR	5857032	Identifier	code		5856664	0					
ANR	5857033	CallExpression	"gx_path_add_line ( ppath , plp -> e . p . x , plp -> e . p . y )"		5856664	1					
ANR	5857034	Callee	gx_path_add_line		5856664	0					
ANR	5857035	Identifier	gx_path_add_line		5856664	0					
ANR	5857036	ArgumentList	ppath		5856664	1					
ANR	5857037	Argument	ppath		5856664	0					
ANR	5857038	Identifier	ppath		5856664	0					
ANR	5857039	Argument	plp -> e . p . x		5856664	1					
ANR	5857040	MemberAccess	plp -> e . p . x		5856664	0					
ANR	5857041	MemberAccess	plp -> e . p		5856664	0					
ANR	5857042	PtrMemberAccess	plp -> e		5856664	0					
ANR	5857043	Identifier	plp		5856664	0					
ANR	5857044	Identifier	e		5856664	1					
ANR	5857045	Identifier	p		5856664	1					
ANR	5857046	Identifier	x		5856664	1					
ANR	5857047	Argument	plp -> e . p . y		5856664	2					
ANR	5857048	MemberAccess	plp -> e . p . y		5856664	0					
ANR	5857049	MemberAccess	plp -> e . p		5856664	0					
ANR	5857050	PtrMemberAccess	plp -> e		5856664	0					
ANR	5857051	Identifier	plp		5856664	0					
ANR	5857052	Identifier	e		5856664	1					
ANR	5857053	Identifier	p		5856664	1					
ANR	5857054	Identifier	y		5856664	1					
ANR	5857055	PrimaryExpression	0		5856664	1					
ANR	5857056	RelationalExpression	"( code = gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y ) ) < 0"		5856664	1		<			
ANR	5857057	AssignmentExpression	"code = gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y )"		5856664	0		=			
ANR	5857058	Identifier	code		5856664	0					
ANR	5857059	CallExpression	"gx_path_add_line ( ppath , plp -> e . ce . x , plp -> e . ce . y )"		5856664	1					
ANR	5857060	Callee	gx_path_add_line		5856664	0					
ANR	5857061	Identifier	gx_path_add_line		5856664	0					
ANR	5857062	ArgumentList	ppath		5856664	1					
ANR	5857063	Argument	ppath		5856664	0					
ANR	5857064	Identifier	ppath		5856664	0					
ANR	5857065	Argument	plp -> e . ce . x		5856664	1					
ANR	5857066	MemberAccess	plp -> e . ce . x		5856664	0					
ANR	5857067	MemberAccess	plp -> e . ce		5856664	0					
ANR	5857068	PtrMemberAccess	plp -> e		5856664	0					
ANR	5857069	Identifier	plp		5856664	0					
ANR	5857070	Identifier	e		5856664	1					
ANR	5857071	Identifier	ce		5856664	1					
ANR	5857072	Identifier	x		5856664	1					
ANR	5857073	Argument	plp -> e . ce . y		5856664	2					
ANR	5857074	MemberAccess	plp -> e . ce . y		5856664	0					
ANR	5857075	MemberAccess	plp -> e . ce		5856664	0					
ANR	5857076	PtrMemberAccess	plp -> e		5856664	0					
ANR	5857077	Identifier	plp		5856664	0					
ANR	5857078	Identifier	e		5856664	1					
ANR	5857079	Identifier	ce		5856664	1					
ANR	5857080	Identifier	y		5856664	1					
ANR	5857081	PrimaryExpression	0		5856664	1					
ANR	5857082	ReturnStatement	return code ;	2601:8:106530:106541	5856664	1	True				
ANR	5857083	Identifier	code		5856664	0					
ANR	5857084	ReturnStatement	return 0 ;	2603:4:106548:106556	5856664	12	True				
ANR	5857085	PrimaryExpression	0		5856664	0					
ANR	5857086	ReturnType	static int		5856664	1					
ANR	5857087	Identifier	add_pie_join		5856664	2					
ANR	5857088	ParameterList	"gx_path * ppath , pl_ptr plp , pl_ptr nplp , bool reflected , bool cap"		5856664	3					
ANR	5857089	Parameter	gx_path * ppath	2548:13:104755:104769	5856664	0	True				
ANR	5857090	ParameterType	gx_path *		5856664	0					
ANR	5857091	Identifier	ppath		5856664	1					
ANR	5857092	Parameter	pl_ptr plp	2548:30:104772:104781	5856664	1	True				
ANR	5857093	ParameterType	pl_ptr		5856664	0					
ANR	5857094	Identifier	plp		5856664	1					
ANR	5857095	Parameter	pl_ptr nplp	2548:42:104784:104794	5856664	2	True				
ANR	5857096	ParameterType	pl_ptr		5856664	0					
ANR	5857097	Identifier	nplp		5856664	1					
ANR	5857098	Parameter	bool reflected	2548:55:104797:104810	5856664	3	True				
ANR	5857099	ParameterType	bool		5856664	0					
ANR	5857100	Identifier	reflected		5856664	1					
ANR	5857101	Parameter	bool cap	2549:13:104826:104833	5856664	4	True				
ANR	5857102	ParameterType	bool		5856664	0					
ANR	5857103	Identifier	cap		5856664	1					
ANR	5857104	CFGEntryNode	ENTRY		5856664		True				
ANR	5857105	CFGExitNode	EXIT		5856664		True				
ANR	5857106	Symbol	plp -> width . y		5856664						
ANR	5857107	Symbol	plp -> width . x		5856664						
ANR	5857108	Symbol	final -> y		5856664						
ANR	5857109	Symbol	code		5856664						
ANR	5857110	Symbol	add_pie_cap		5856664						
ANR	5857111	Symbol	& nplp -> o		5856664						
ANR	5857112	Symbol	final -> x		5856664						
ANR	5857113	Symbol	& plp -> e . cdelta		5856664						
ANR	5857114	Symbol	* current		5856664						
ANR	5857115	Symbol	plp -> e . p . y		5856664						
ANR	5857116	Symbol	reflected		5856664						
ANR	5857117	Symbol	plp -> e . p . x		5856664						
ANR	5857118	Symbol	ppath		5856664						
ANR	5857119	Symbol	& plp -> e		5856664						
ANR	5857120	Symbol	& plp -> e . ce		5856664						
ANR	5857121	Symbol	plp -> width		5856664						
ANR	5857122	Symbol	nplp -> width		5856664						
ANR	5857123	Symbol	current		5856664						
ANR	5857124	Symbol	tangent		5856664						
ANR	5857125	Symbol	cap		5856664						
ANR	5857126	Symbol	final_tangent		5856664						
ANR	5857127	Symbol	ccw		5856664						
ANR	5857128	Symbol	plp -> e . ce		5856664						
ANR	5857129	Symbol	nplp -> o		5856664						
ANR	5857130	Symbol	& nplp -> o . cdelta		5856664						
ANR	5857131	Symbol	& plp -> width		5856664						
ANR	5857132	Symbol	* nplp		5856664						
ANR	5857133	Symbol	* plp		5856664						
ANR	5857134	Symbol	current -> y		5856664						
ANR	5857135	Symbol	current -> x		5856664						
ANR	5857136	Symbol	& nplp -> o . co		5856664						
ANR	5857137	Symbol	l		5856664						
ANR	5857138	Symbol	& nplp -> o . ce		5856664						
ANR	5857139	Symbol	* final		5856664						
ANR	5857140	Symbol	nplp -> width . y		5856664						
ANR	5857141	Symbol	r		5856664						
ANR	5857142	Symbol	plp -> e . ce . x		5856664						
ANR	5857143	Symbol	plp -> e . ce . y		5856664						
ANR	5857144	Symbol	plp -> e . p		5856664						
ANR	5857145	Symbol	plp		5856664						
ANR	5857146	Symbol	nplp		5856664						
ANR	5857147	Symbol	gx_path_add_line		5856664						
ANR	5857148	Symbol	& plp -> e . co		5856664						
ANR	5857149	Symbol	final		5856664						
ANR	5857150	Symbol	plp -> e		5856664						
ANR	5857151	Symbol	& plp -> e . p		5856664						
ANR	5857152	Symbol	do_pie_join		5856664						
ANR	5857153	Symbol	nplp -> width . x		5856664						
ANR	5857154	Function	add_pie_join_fast_cw	2607:0:106600:106982							
ANR	5857155	FunctionDef	"add_pie_join_fast_cw (gx_path * rpath , pl_ptr plp , pl_ptr nplp , bool reflected)"		5857154	0					
ANR	5857156	CompoundStatement		2609:0:106690:106982	5857154	0					
ANR	5857157	IfStatement	if ( plp -> e . ce . x == nplp -> o . co . x && plp -> e . ce . y == nplp -> o . co . y )		5857154	0					
ANR	5857158	Condition	plp -> e . ce . x == nplp -> o . co . x && plp -> e . ce . y == nplp -> o . co . y	2611:8:106756:106813	5857154	0	True				
ANR	5857159	AndExpression	plp -> e . ce . x == nplp -> o . co . x && plp -> e . ce . y == nplp -> o . co . y		5857154	0		&&			
ANR	5857160	EqualityExpression	plp -> e . ce . x == nplp -> o . co . x		5857154	0		==			
ANR	5857161	MemberAccess	plp -> e . ce . x		5857154	0					
ANR	5857162	MemberAccess	plp -> e . ce		5857154	0					
ANR	5857163	PtrMemberAccess	plp -> e		5857154	0					
ANR	5857164	Identifier	plp		5857154	0					
ANR	5857165	Identifier	e		5857154	1					
ANR	5857166	Identifier	ce		5857154	1					
ANR	5857167	Identifier	x		5857154	1					
ANR	5857168	MemberAccess	nplp -> o . co . x		5857154	1					
ANR	5857169	MemberAccess	nplp -> o . co		5857154	0					
ANR	5857170	PtrMemberAccess	nplp -> o		5857154	0					
ANR	5857171	Identifier	nplp		5857154	0					
ANR	5857172	Identifier	o		5857154	1					
ANR	5857173	Identifier	co		5857154	1					
ANR	5857174	Identifier	x		5857154	1					
ANR	5857175	EqualityExpression	plp -> e . ce . y == nplp -> o . co . y		5857154	1		==			
ANR	5857176	MemberAccess	plp -> e . ce . y		5857154	0					
ANR	5857177	MemberAccess	plp -> e . ce		5857154	0					
ANR	5857178	PtrMemberAccess	plp -> e		5857154	0					
ANR	5857179	Identifier	plp		5857154	0					
ANR	5857180	Identifier	e		5857154	1					
ANR	5857181	Identifier	ce		5857154	1					
ANR	5857182	Identifier	y		5857154	1					
ANR	5857183	MemberAccess	nplp -> o . co . y		5857154	1					
ANR	5857184	MemberAccess	nplp -> o . co		5857154	0					
ANR	5857185	PtrMemberAccess	nplp -> o		5857154	0					
ANR	5857186	Identifier	nplp		5857154	0					
ANR	5857187	Identifier	o		5857154	1					
ANR	5857188	Identifier	co		5857154	1					
ANR	5857189	Identifier	y		5857154	1					
ANR	5857190	ReturnStatement	return 0 ;	2612:8:106824:106832	5857154	1	True				
ANR	5857191	PrimaryExpression	0		5857154	0					
ANR	5857192	ReturnStatement	"return do_pie_join ( rpath , & plp -> e . p , & plp -> e . ce , & plp -> e . cdelta , & nplp -> o . co , & nplp -> o . cdelta , reflected , & plp -> width ) ;"	2614:4:106839:106980	5857154	1	True				
ANR	5857193	CallExpression	"do_pie_join ( rpath , & plp -> e . p , & plp -> e . ce , & plp -> e . cdelta , & nplp -> o . co , & nplp -> o . cdelta , reflected , & plp -> width )"		5857154	0					
ANR	5857194	Callee	do_pie_join		5857154	0					
ANR	5857195	Identifier	do_pie_join		5857154	0					
ANR	5857196	ArgumentList	rpath		5857154	1					
ANR	5857197	Argument	rpath		5857154	0					
ANR	5857198	Identifier	rpath		5857154	0					
ANR	5857199	Argument	& plp -> e . p		5857154	1					
ANR	5857200	UnaryOperationExpression	& plp -> e . p		5857154	0					
ANR	5857201	UnaryOperator	&		5857154	0					
ANR	5857202	MemberAccess	plp -> e . p		5857154	1					
ANR	5857203	PtrMemberAccess	plp -> e		5857154	0					
ANR	5857204	Identifier	plp		5857154	0					
ANR	5857205	Identifier	e		5857154	1					
ANR	5857206	Identifier	p		5857154	1					
ANR	5857207	Argument	& plp -> e . ce		5857154	2					
ANR	5857208	UnaryOperationExpression	& plp -> e . ce		5857154	0					
ANR	5857209	UnaryOperator	&		5857154	0					
ANR	5857210	MemberAccess	plp -> e . ce		5857154	1					
ANR	5857211	PtrMemberAccess	plp -> e		5857154	0					
ANR	5857212	Identifier	plp		5857154	0					
ANR	5857213	Identifier	e		5857154	1					
ANR	5857214	Identifier	ce		5857154	1					
ANR	5857215	Argument	& plp -> e . cdelta		5857154	3					
ANR	5857216	UnaryOperationExpression	& plp -> e . cdelta		5857154	0					
ANR	5857217	UnaryOperator	&		5857154	0					
ANR	5857218	MemberAccess	plp -> e . cdelta		5857154	1					
ANR	5857219	PtrMemberAccess	plp -> e		5857154	0					
ANR	5857220	Identifier	plp		5857154	0					
ANR	5857221	Identifier	e		5857154	1					
ANR	5857222	Identifier	cdelta		5857154	1					
ANR	5857223	Argument	& nplp -> o . co		5857154	4					
ANR	5857224	UnaryOperationExpression	& nplp -> o . co		5857154	0					
ANR	5857225	UnaryOperator	&		5857154	0					
ANR	5857226	MemberAccess	nplp -> o . co		5857154	1					
ANR	5857227	PtrMemberAccess	nplp -> o		5857154	0					
ANR	5857228	Identifier	nplp		5857154	0					
ANR	5857229	Identifier	o		5857154	1					
ANR	5857230	Identifier	co		5857154	1					
ANR	5857231	Argument	& nplp -> o . cdelta		5857154	5					
ANR	5857232	UnaryOperationExpression	& nplp -> o . cdelta		5857154	0					
ANR	5857233	UnaryOperator	&		5857154	0					
ANR	5857234	MemberAccess	nplp -> o . cdelta		5857154	1					
ANR	5857235	PtrMemberAccess	nplp -> o		5857154	0					
ANR	5857236	Identifier	nplp		5857154	0					
ANR	5857237	Identifier	o		5857154	1					
ANR	5857238	Identifier	cdelta		5857154	1					
ANR	5857239	Argument	reflected		5857154	6					
ANR	5857240	Identifier	reflected		5857154	0					
ANR	5857241	Argument	& plp -> width		5857154	7					
ANR	5857242	UnaryOperationExpression	& plp -> width		5857154	0					
ANR	5857243	UnaryOperator	&		5857154	0					
ANR	5857244	PtrMemberAccess	plp -> width		5857154	1					
ANR	5857245	Identifier	plp		5857154	0					
ANR	5857246	Identifier	width		5857154	1					
ANR	5857247	ReturnType	static int		5857154	1					
ANR	5857248	Identifier	add_pie_join_fast_cw		5857154	2					
ANR	5857249	ParameterList	"gx_path * rpath , pl_ptr plp , pl_ptr nplp , bool reflected"		5857154	3					
ANR	5857250	Parameter	gx_path * rpath	2608:21:106632:106646	5857154	0	True				
ANR	5857251	ParameterType	gx_path *		5857154	0					
ANR	5857252	Identifier	rpath		5857154	1					
ANR	5857253	Parameter	pl_ptr plp	2608:38:106649:106658	5857154	1	True				
ANR	5857254	ParameterType	pl_ptr		5857154	0					
ANR	5857255	Identifier	plp		5857154	1					
ANR	5857256	Parameter	pl_ptr nplp	2608:50:106661:106671	5857154	2	True				
ANR	5857257	ParameterType	pl_ptr		5857154	0					
ANR	5857258	Identifier	nplp		5857154	1					
ANR	5857259	Parameter	bool reflected	2608:63:106674:106687	5857154	3	True				
ANR	5857260	ParameterType	bool		5857154	0					
ANR	5857261	Identifier	reflected		5857154	1					
ANR	5857262	CFGEntryNode	ENTRY		5857154		True				
ANR	5857263	CFGExitNode	EXIT		5857154		True				
ANR	5857264	Symbol	nplp -> o . co		5857154						
ANR	5857265	Symbol	& nplp -> o		5857154						
ANR	5857266	Symbol	& nplp -> o . co		5857154						
ANR	5857267	Symbol	& plp -> e . cdelta		5857154						
ANR	5857268	Symbol	reflected		5857154						
ANR	5857269	Symbol	& plp -> e		5857154						
ANR	5857270	Symbol	rpath		5857154						
ANR	5857271	Symbol	& plp -> e . ce		5857154						
ANR	5857272	Symbol	nplp -> o . co . x		5857154						
ANR	5857273	Symbol	nplp -> o . co . y		5857154						
ANR	5857274	Symbol	plp -> e . ce . x		5857154						
ANR	5857275	Symbol	plp -> e . ce . y		5857154						
ANR	5857276	Symbol	plp		5857154						
ANR	5857277	Symbol	nplp		5857154						
ANR	5857278	Symbol	plp -> e . ce		5857154						
ANR	5857279	Symbol	plp -> e		5857154						
ANR	5857280	Symbol	nplp -> o		5857154						
ANR	5857281	Symbol	do_pie_join		5857154						
ANR	5857282	Symbol	& plp -> e . p		5857154						
ANR	5857283	Symbol	& nplp -> o . cdelta		5857154						
ANR	5857284	Symbol	& plp -> width		5857154						
ANR	5857285	Symbol	* nplp		5857154						
ANR	5857286	Symbol	* plp		5857154						
ANR	5857287	Function	add_pie_join_fast_ccw	2618:0:106985:107406							
ANR	5857288	FunctionDef	"add_pie_join_fast_ccw (gx_path * ppath , pl_ptr plp , pl_ptr nplp , bool reflected)"		5857287	0					
ANR	5857289	CompoundStatement		2620:0:107076:107406	5857287	0					
ANR	5857290	IfStatement	if ( plp -> e . co . x == nplp -> o . ce . x && plp -> e . co . y == nplp -> o . ce . y )		5857287	0					
ANR	5857291	Condition	plp -> e . co . x == nplp -> o . ce . x && plp -> e . co . y == nplp -> o . ce . y	2623:8:107179:107236	5857287	0	True				
ANR	5857292	AndExpression	plp -> e . co . x == nplp -> o . ce . x && plp -> e . co . y == nplp -> o . ce . y		5857287	0		&&			
ANR	5857293	EqualityExpression	plp -> e . co . x == nplp -> o . ce . x		5857287	0		==			
ANR	5857294	MemberAccess	plp -> e . co . x		5857287	0					
ANR	5857295	MemberAccess	plp -> e . co		5857287	0					
ANR	5857296	PtrMemberAccess	plp -> e		5857287	0					
ANR	5857297	Identifier	plp		5857287	0					
ANR	5857298	Identifier	e		5857287	1					
ANR	5857299	Identifier	co		5857287	1					
ANR	5857300	Identifier	x		5857287	1					
ANR	5857301	MemberAccess	nplp -> o . ce . x		5857287	1					
ANR	5857302	MemberAccess	nplp -> o . ce		5857287	0					
ANR	5857303	PtrMemberAccess	nplp -> o		5857287	0					
ANR	5857304	Identifier	nplp		5857287	0					
ANR	5857305	Identifier	o		5857287	1					
ANR	5857306	Identifier	ce		5857287	1					
ANR	5857307	Identifier	x		5857287	1					
ANR	5857308	EqualityExpression	plp -> e . co . y == nplp -> o . ce . y		5857287	1		==			
ANR	5857309	MemberAccess	plp -> e . co . y		5857287	0					
ANR	5857310	MemberAccess	plp -> e . co		5857287	0					
ANR	5857311	PtrMemberAccess	plp -> e		5857287	0					
ANR	5857312	Identifier	plp		5857287	0					
ANR	5857313	Identifier	e		5857287	1					
ANR	5857314	Identifier	co		5857287	1					
ANR	5857315	Identifier	y		5857287	1					
ANR	5857316	MemberAccess	nplp -> o . ce . y		5857287	1					
ANR	5857317	MemberAccess	nplp -> o . ce		5857287	0					
ANR	5857318	PtrMemberAccess	nplp -> o		5857287	0					
ANR	5857319	Identifier	nplp		5857287	0					
ANR	5857320	Identifier	o		5857287	1					
ANR	5857321	Identifier	ce		5857287	1					
ANR	5857322	Identifier	y		5857287	1					
ANR	5857323	ReturnStatement	return 0 ;	2624:8:107247:107255	5857287	1	True				
ANR	5857324	PrimaryExpression	0		5857287	0					
ANR	5857325	ReturnStatement	"return do_pie_join ( ppath , & plp -> e . p , & plp -> e . co , & plp -> e . cdelta , & nplp -> o . ce , & nplp -> o . cdelta , ! reflected , & plp -> width ) ;"	2626:4:107262:107404	5857287	1	True				
ANR	5857326	CallExpression	"do_pie_join ( ppath , & plp -> e . p , & plp -> e . co , & plp -> e . cdelta , & nplp -> o . ce , & nplp -> o . cdelta , ! reflected , & plp -> width )"		5857287	0					
ANR	5857327	Callee	do_pie_join		5857287	0					
ANR	5857328	Identifier	do_pie_join		5857287	0					
ANR	5857329	ArgumentList	ppath		5857287	1					
ANR	5857330	Argument	ppath		5857287	0					
ANR	5857331	Identifier	ppath		5857287	0					
ANR	5857332	Argument	& plp -> e . p		5857287	1					
ANR	5857333	UnaryOperationExpression	& plp -> e . p		5857287	0					
ANR	5857334	UnaryOperator	&		5857287	0					
ANR	5857335	MemberAccess	plp -> e . p		5857287	1					
ANR	5857336	PtrMemberAccess	plp -> e		5857287	0					
ANR	5857337	Identifier	plp		5857287	0					
ANR	5857338	Identifier	e		5857287	1					
ANR	5857339	Identifier	p		5857287	1					
ANR	5857340	Argument	& plp -> e . co		5857287	2					
ANR	5857341	UnaryOperationExpression	& plp -> e . co		5857287	0					
ANR	5857342	UnaryOperator	&		5857287	0					
ANR	5857343	MemberAccess	plp -> e . co		5857287	1					
ANR	5857344	PtrMemberAccess	plp -> e		5857287	0					
ANR	5857345	Identifier	plp		5857287	0					
ANR	5857346	Identifier	e		5857287	1					
ANR	5857347	Identifier	co		5857287	1					
ANR	5857348	Argument	& plp -> e . cdelta		5857287	3					
ANR	5857349	UnaryOperationExpression	& plp -> e . cdelta		5857287	0					
ANR	5857350	UnaryOperator	&		5857287	0					
ANR	5857351	MemberAccess	plp -> e . cdelta		5857287	1					
ANR	5857352	PtrMemberAccess	plp -> e		5857287	0					
ANR	5857353	Identifier	plp		5857287	0					
ANR	5857354	Identifier	e		5857287	1					
ANR	5857355	Identifier	cdelta		5857287	1					
ANR	5857356	Argument	& nplp -> o . ce		5857287	4					
ANR	5857357	UnaryOperationExpression	& nplp -> o . ce		5857287	0					
ANR	5857358	UnaryOperator	&		5857287	0					
ANR	5857359	MemberAccess	nplp -> o . ce		5857287	1					
ANR	5857360	PtrMemberAccess	nplp -> o		5857287	0					
ANR	5857361	Identifier	nplp		5857287	0					
ANR	5857362	Identifier	o		5857287	1					
ANR	5857363	Identifier	ce		5857287	1					
ANR	5857364	Argument	& nplp -> o . cdelta		5857287	5					
ANR	5857365	UnaryOperationExpression	& nplp -> o . cdelta		5857287	0					
ANR	5857366	UnaryOperator	&		5857287	0					
ANR	5857367	MemberAccess	nplp -> o . cdelta		5857287	1					
ANR	5857368	PtrMemberAccess	nplp -> o		5857287	0					
ANR	5857369	Identifier	nplp		5857287	0					
ANR	5857370	Identifier	o		5857287	1					
ANR	5857371	Identifier	cdelta		5857287	1					
ANR	5857372	Argument	! reflected		5857287	6					
ANR	5857373	UnaryOperationExpression	! reflected		5857287	0					
ANR	5857374	UnaryOperator	!		5857287	0					
ANR	5857375	Identifier	reflected		5857287	1					
ANR	5857376	Argument	& plp -> width		5857287	7					
ANR	5857377	UnaryOperationExpression	& plp -> width		5857287	0					
ANR	5857378	UnaryOperator	&		5857287	0					
ANR	5857379	PtrMemberAccess	plp -> width		5857287	1					
ANR	5857380	Identifier	plp		5857287	0					
ANR	5857381	Identifier	width		5857287	1					
ANR	5857382	ReturnType	static int		5857287	1					
ANR	5857383	Identifier	add_pie_join_fast_ccw		5857287	2					
ANR	5857384	ParameterList	"gx_path * ppath , pl_ptr plp , pl_ptr nplp , bool reflected"		5857287	3					
ANR	5857385	Parameter	gx_path * ppath	2619:22:107018:107032	5857287	0	True				
ANR	5857386	ParameterType	gx_path *		5857287	0					
ANR	5857387	Identifier	ppath		5857287	1					
ANR	5857388	Parameter	pl_ptr plp	2619:39:107035:107044	5857287	1	True				
ANR	5857389	ParameterType	pl_ptr		5857287	0					
ANR	5857390	Identifier	plp		5857287	1					
ANR	5857391	Parameter	pl_ptr nplp	2619:51:107047:107057	5857287	2	True				
ANR	5857392	ParameterType	pl_ptr		5857287	0					
ANR	5857393	Identifier	nplp		5857287	1					
ANR	5857394	Parameter	bool reflected	2619:64:107060:107073	5857287	3	True				
ANR	5857395	ParameterType	bool		5857287	0					
ANR	5857396	Identifier	reflected		5857287	1					
ANR	5857397	CFGEntryNode	ENTRY		5857287		True				
ANR	5857398	CFGExitNode	EXIT		5857287		True				
ANR	5857399	Symbol	& nplp -> o		5857287						
ANR	5857400	Symbol	& plp -> e . cdelta		5857287						
ANR	5857401	Symbol	reflected		5857287						
ANR	5857402	Symbol	ppath		5857287						
ANR	5857403	Symbol	& plp -> e		5857287						
ANR	5857404	Symbol	& nplp -> o . ce		5857287						
ANR	5857405	Symbol	plp -> e . co . y		5857287						
ANR	5857406	Symbol	plp		5857287						
ANR	5857407	Symbol	nplp		5857287						
ANR	5857408	Symbol	plp -> e . co . x		5857287						
ANR	5857409	Symbol	plp -> e . co		5857287						
ANR	5857410	Symbol	nplp -> o . ce . y		5857287						
ANR	5857411	Symbol	nplp -> o . ce . x		5857287						
ANR	5857412	Symbol	& plp -> e . co		5857287						
ANR	5857413	Symbol	plp -> e		5857287						
ANR	5857414	Symbol	nplp -> o		5857287						
ANR	5857415	Symbol	& plp -> e . p		5857287						
ANR	5857416	Symbol	do_pie_join		5857287						
ANR	5857417	Symbol	& nplp -> o . cdelta		5857287						
ANR	5857418	Symbol	nplp -> o . ce		5857287						
ANR	5857419	Symbol	& plp -> width		5857287						
ANR	5857420	Symbol	* plp		5857287						
ANR	5857421	Symbol	* nplp		5857287						
ANR	5857422	Function	join_under_pie	2630:0:107409:109135							
ANR	5857423	FunctionDef	"join_under_pie (gx_path * ppath , pl_ptr plp , pl_ptr nplp , bool reflected)"		5857422	0					
ANR	5857424	CompoundStatement		2632:0:107493:109135	5857422	0					
ANR	5857425	IdentifierDeclStatement	int code ;	2633:4:107499:107507	5857422	0	True				
ANR	5857426	IdentifierDecl	code		5857422	0					
ANR	5857427	IdentifierDeclType	int		5857422	0					
ANR	5857428	Identifier	code		5857422	1					
ANR	5857429	IdentifierDeclStatement	"gs_fixed_point dirn1 , dirn2 , tangmeet ;"	2634:4:107513:107550	5857422	1	True				
ANR	5857430	IdentifierDecl	dirn1		5857422	0					
ANR	5857431	IdentifierDeclType	gs_fixed_point		5857422	0					
ANR	5857432	Identifier	dirn1		5857422	1					
ANR	5857433	IdentifierDecl	dirn2		5857422	1					
ANR	5857434	IdentifierDeclType	gs_fixed_point		5857422	0					
ANR	5857435	Identifier	dirn2		5857422	1					
ANR	5857436	IdentifierDecl	tangmeet		5857422	2					
ANR	5857437	IdentifierDeclType	gs_fixed_point		5857422	0					
ANR	5857438	Identifier	tangmeet		5857422	1					
ANR	5857439	IdentifierDeclStatement	"double l , r ;"	2635:4:107556:107567	5857422	2	True				
ANR	5857440	IdentifierDecl	l		5857422	0					
ANR	5857441	IdentifierDeclType	double		5857422	0					
ANR	5857442	Identifier	l		5857422	1					
ANR	5857443	IdentifierDecl	r		5857422	1					
ANR	5857444	IdentifierDeclType	double		5857422	0					
ANR	5857445	Identifier	r		5857422	1					
ANR	5857446	IdentifierDeclStatement	bool ccw ;	2636:4:107573:107581	5857422	3	True				
ANR	5857447	IdentifierDecl	ccw		5857422	0					
ANR	5857448	IdentifierDeclType	bool		5857422	0					
ANR	5857449	Identifier	ccw		5857422	1					
ANR	5857450	ExpressionStatement	l = ( double ) ( plp -> width . x ) * ( nplp -> width . y )	2638:4:107588:107650	5857422	4	True				
ANR	5857451	AssignmentExpression	l = ( double ) ( plp -> width . x ) * ( nplp -> width . y )		5857422	0		=			
ANR	5857452	Identifier	l		5857422	0					
ANR	5857453	MultiplicativeExpression	( double ) ( plp -> width . x ) * ( nplp -> width . y )		5857422	1		*			
ANR	5857454	CastExpression	( double ) ( plp -> width . x )		5857422	0					
ANR	5857455	CastTarget	double		5857422	0					
ANR	5857456	MemberAccess	plp -> width . x		5857422	1					
ANR	5857457	PtrMemberAccess	plp -> width		5857422	0					
ANR	5857458	Identifier	plp		5857422	0					
ANR	5857459	Identifier	width		5857422	1					
ANR	5857460	Identifier	x		5857422	1					
ANR	5857461	MemberAccess	nplp -> width . y		5857422	1					
ANR	5857462	PtrMemberAccess	nplp -> width		5857422	0					
ANR	5857463	Identifier	nplp		5857422	0					
ANR	5857464	Identifier	width		5857422	1					
ANR	5857465	Identifier	y		5857422	1					
ANR	5857466	ExpressionStatement	r = ( double ) ( nplp -> width . x ) * ( plp -> width . y )	2639:4:107656:107718	5857422	5	True				
ANR	5857467	AssignmentExpression	r = ( double ) ( nplp -> width . x ) * ( plp -> width . y )		5857422	0		=			
ANR	5857468	Identifier	r		5857422	0					
ANR	5857469	MultiplicativeExpression	( double ) ( nplp -> width . x ) * ( plp -> width . y )		5857422	1		*			
ANR	5857470	CastExpression	( double ) ( nplp -> width . x )		5857422	0					
ANR	5857471	CastTarget	double		5857422	0					
ANR	5857472	MemberAccess	nplp -> width . x		5857422	1					
ANR	5857473	PtrMemberAccess	nplp -> width		5857422	0					
ANR	5857474	Identifier	nplp		5857422	0					
ANR	5857475	Identifier	width		5857422	1					
ANR	5857476	Identifier	x		5857422	1					
ANR	5857477	MemberAccess	plp -> width . y		5857422	1					
ANR	5857478	PtrMemberAccess	plp -> width		5857422	0					
ANR	5857479	Identifier	plp		5857422	0					
ANR	5857480	Identifier	width		5857422	1					
ANR	5857481	Identifier	y		5857422	1					
ANR	5857482	IfStatement	if ( l == r )		5857422	6					
ANR	5857483	Condition	l == r	2641:8:107729:107734	5857422	0	True				
ANR	5857484	EqualityExpression	l == r		5857422	0		==			
ANR	5857485	Identifier	l		5857422	0					
ANR	5857486	Identifier	r		5857422	1					
ANR	5857487	ReturnStatement	return 0 ;	2642:8:107745:107753	5857422	1	True				
ANR	5857488	PrimaryExpression	0		5857422	0					
ANR	5857489	ExpressionStatement	ccw = ( l > r )	2644:4:107760:107773	5857422	7	True				
ANR	5857490	AssignmentExpression	ccw = ( l > r )		5857422	0		=			
ANR	5857491	Identifier	ccw		5857422	0					
ANR	5857492	RelationalExpression	l > r		5857422	1		>			
ANR	5857493	Identifier	l		5857422	0					
ANR	5857494	Identifier	r		5857422	1					
ANR	5857495	ExpressionStatement	ccw ^= reflected	2646:4:107780:107796	5857422	8	True				
ANR	5857496	AssignmentExpression	ccw ^= reflected		5857422	0		^=			
ANR	5857497	Identifier	ccw		5857422	0					
ANR	5857498	Identifier	reflected		5857422	1					
ANR	5857499	IfStatement	if ( ccw )		5857422	9					
ANR	5857500	Condition	ccw	2648:8:107807:107809	5857422	0	True				
ANR	5857501	Identifier	ccw		5857422	0					
ANR	5857502	CompoundStatement		17:13:318:318	5857422	1					
ANR	5857503	ExpressionStatement	dirn1 . x = - plp -> width . x	2649:8:107822:107846	5857422	0	True				
ANR	5857504	AssignmentExpression	dirn1 . x = - plp -> width . x		5857422	0		=			
ANR	5857505	MemberAccess	dirn1 . x		5857422	0					
ANR	5857506	Identifier	dirn1		5857422	0					
ANR	5857507	Identifier	x		5857422	1					
ANR	5857508	UnaryOperationExpression	- plp -> width . x		5857422	1					
ANR	5857509	UnaryOperator	-		5857422	0					
ANR	5857510	MemberAccess	plp -> width . x		5857422	1					
ANR	5857511	PtrMemberAccess	plp -> width		5857422	0					
ANR	5857512	Identifier	plp		5857422	0					
ANR	5857513	Identifier	width		5857422	1					
ANR	5857514	Identifier	x		5857422	1					
ANR	5857515	ExpressionStatement	dirn1 . y = - plp -> width . y	2650:8:107856:107880	5857422	1	True				
ANR	5857516	AssignmentExpression	dirn1 . y = - plp -> width . y		5857422	0		=			
ANR	5857517	MemberAccess	dirn1 . y		5857422	0					
ANR	5857518	Identifier	dirn1		5857422	0					
ANR	5857519	Identifier	y		5857422	1					
ANR	5857520	UnaryOperationExpression	- plp -> width . y		5857422	1					
ANR	5857521	UnaryOperator	-		5857422	0					
ANR	5857522	MemberAccess	plp -> width . y		5857422	1					
ANR	5857523	PtrMemberAccess	plp -> width		5857422	0					
ANR	5857524	Identifier	plp		5857422	0					
ANR	5857525	Identifier	width		5857422	1					
ANR	5857526	Identifier	y		5857422	1					
ANR	5857527	ExpressionStatement	dirn2 . x = - nplp -> width . x	2651:8:107890:107914	5857422	2	True				
ANR	5857528	AssignmentExpression	dirn2 . x = - nplp -> width . x		5857422	0		=			
ANR	5857529	MemberAccess	dirn2 . x		5857422	0					
ANR	5857530	Identifier	dirn2		5857422	0					
ANR	5857531	Identifier	x		5857422	1					
ANR	5857532	UnaryOperationExpression	- nplp -> width . x		5857422	1					
ANR	5857533	UnaryOperator	-		5857422	0					
ANR	5857534	MemberAccess	nplp -> width . x		5857422	1					
ANR	5857535	PtrMemberAccess	nplp -> width		5857422	0					
ANR	5857536	Identifier	nplp		5857422	0					
ANR	5857537	Identifier	width		5857422	1					
ANR	5857538	Identifier	x		5857422	1					
ANR	5857539	ExpressionStatement	dirn2 . y = - nplp -> width . y	2652:8:107924:107948	5857422	3	True				
ANR	5857540	AssignmentExpression	dirn2 . y = - nplp -> width . y		5857422	0		=			
ANR	5857541	MemberAccess	dirn2 . y		5857422	0					
ANR	5857542	Identifier	dirn2		5857422	0					
ANR	5857543	Identifier	y		5857422	1					
ANR	5857544	UnaryOperationExpression	- nplp -> width . y		5857422	1					
ANR	5857545	UnaryOperator	-		5857422	0					
ANR	5857546	MemberAccess	nplp -> width . y		5857422	1					
ANR	5857547	PtrMemberAccess	nplp -> width		5857422	0					
ANR	5857548	Identifier	nplp		5857422	0					
ANR	5857549	Identifier	width		5857422	1					
ANR	5857550	Identifier	y		5857422	1					
ANR	5857551	IfStatement	"if ( line_intersect ( & plp -> o . co , & dirn1 , & nplp -> e . ce , & dirn2 , & tangmeet ) != 0 )"		5857422	4					
ANR	5857552	Condition	"line_intersect ( & plp -> o . co , & dirn1 , & nplp -> e . ce , & dirn2 , & tangmeet ) != 0"	2653:12:107962:108060	5857422	0	True				
ANR	5857553	EqualityExpression	"line_intersect ( & plp -> o . co , & dirn1 , & nplp -> e . ce , & dirn2 , & tangmeet ) != 0"		5857422	0		!=			
ANR	5857554	CallExpression	"line_intersect ( & plp -> o . co , & dirn1 , & nplp -> e . ce , & dirn2 , & tangmeet )"		5857422	0					
ANR	5857555	Callee	line_intersect		5857422	0					
ANR	5857556	Identifier	line_intersect		5857422	0					
ANR	5857557	ArgumentList	& plp -> o . co		5857422	1					
ANR	5857558	Argument	& plp -> o . co		5857422	0					
ANR	5857559	UnaryOperationExpression	& plp -> o . co		5857422	0					
ANR	5857560	UnaryOperator	&		5857422	0					
ANR	5857561	MemberAccess	plp -> o . co		5857422	1					
ANR	5857562	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857563	Identifier	plp		5857422	0					
ANR	5857564	Identifier	o		5857422	1					
ANR	5857565	Identifier	co		5857422	1					
ANR	5857566	Argument	& dirn1		5857422	1					
ANR	5857567	UnaryOperationExpression	& dirn1		5857422	0					
ANR	5857568	UnaryOperator	&		5857422	0					
ANR	5857569	Identifier	dirn1		5857422	1					
ANR	5857570	Argument	& nplp -> e . ce		5857422	2					
ANR	5857571	UnaryOperationExpression	& nplp -> e . ce		5857422	0					
ANR	5857572	UnaryOperator	&		5857422	0					
ANR	5857573	MemberAccess	nplp -> e . ce		5857422	1					
ANR	5857574	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857575	Identifier	nplp		5857422	0					
ANR	5857576	Identifier	e		5857422	1					
ANR	5857577	Identifier	ce		5857422	1					
ANR	5857578	Argument	& dirn2		5857422	3					
ANR	5857579	UnaryOperationExpression	& dirn2		5857422	0					
ANR	5857580	UnaryOperator	&		5857422	0					
ANR	5857581	Identifier	dirn2		5857422	1					
ANR	5857582	Argument	& tangmeet		5857422	4					
ANR	5857583	UnaryOperationExpression	& tangmeet		5857422	0					
ANR	5857584	UnaryOperator	&		5857422	0					
ANR	5857585	Identifier	tangmeet		5857422	1					
ANR	5857586	PrimaryExpression	0		5857422	1					
ANR	5857587	ReturnStatement	return 0 ;	2655:12:108075:108083	5857422	1	True				
ANR	5857588	PrimaryExpression	0		5857422	0					
ANR	5857589	IfStatement	"if ( ( code = gx_path_close_subpath ( ppath ) ) < 0 || ( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & plp -> o . co , & plp -> o . cdelta , & nplp -> e . ce , & nplp -> e . cdelta , ! reflected , & plp -> width ) ) )"		5857422	5					
ANR	5857590	Condition	"( code = gx_path_close_subpath ( ppath ) ) < 0 || ( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & plp -> o . co , & plp -> o . cdelta , & nplp -> e . ce , & nplp -> e . cdelta , ! reflected , & plp -> width ) )"	2656:12:108097:108492	5857422	0	True				
ANR	5857591	OrExpression	"( code = gx_path_close_subpath ( ppath ) ) < 0 || ( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & plp -> o . co , & plp -> o . cdelta , & nplp -> e . ce , & nplp -> e . cdelta , ! reflected , & plp -> width ) )"		5857422	0		||			
ANR	5857592	RelationalExpression	( code = gx_path_close_subpath ( ppath ) ) < 0		5857422	0		<			
ANR	5857593	AssignmentExpression	code = gx_path_close_subpath ( ppath )		5857422	0		=			
ANR	5857594	Identifier	code		5857422	0					
ANR	5857595	CallExpression	gx_path_close_subpath ( ppath )		5857422	1					
ANR	5857596	Callee	gx_path_close_subpath		5857422	0					
ANR	5857597	Identifier	gx_path_close_subpath		5857422	0					
ANR	5857598	ArgumentList	ppath		5857422	1					
ANR	5857599	Argument	ppath		5857422	0					
ANR	5857600	Identifier	ppath		5857422	0					
ANR	5857601	PrimaryExpression	0		5857422	1					
ANR	5857602	OrExpression	"( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & plp -> o . co , & plp -> o . cdelta , & nplp -> e . ce , & nplp -> e . cdelta , ! reflected , & plp -> width ) )"		5857422	1		||			
ANR	5857603	RelationalExpression	"( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0"		5857422	0		<			
ANR	5857604	AssignmentExpression	"code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y )"		5857422	0		=			
ANR	5857605	Identifier	code		5857422	0					
ANR	5857606	CallExpression	"gx_path_add_point ( ppath , tangmeet . x , tangmeet . y )"		5857422	1					
ANR	5857607	Callee	gx_path_add_point		5857422	0					
ANR	5857608	Identifier	gx_path_add_point		5857422	0					
ANR	5857609	ArgumentList	ppath		5857422	1					
ANR	5857610	Argument	ppath		5857422	0					
ANR	5857611	Identifier	ppath		5857422	0					
ANR	5857612	Argument	tangmeet . x		5857422	1					
ANR	5857613	MemberAccess	tangmeet . x		5857422	0					
ANR	5857614	Identifier	tangmeet		5857422	0					
ANR	5857615	Identifier	x		5857422	1					
ANR	5857616	Argument	tangmeet . y		5857422	2					
ANR	5857617	MemberAccess	tangmeet . y		5857422	0					
ANR	5857618	Identifier	tangmeet		5857422	0					
ANR	5857619	Identifier	y		5857422	1					
ANR	5857620	PrimaryExpression	0		5857422	1					
ANR	5857621	OrExpression	"( code = gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & plp -> o . co , & plp -> o . cdelta , & nplp -> e . ce , & nplp -> e . cdelta , ! reflected , & plp -> width ) )"		5857422	1		||			
ANR	5857622	RelationalExpression	"( code = gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y ) ) < 0"		5857422	0		<			
ANR	5857623	AssignmentExpression	"code = gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y )"		5857422	0		=			
ANR	5857624	Identifier	code		5857422	0					
ANR	5857625	CallExpression	"gx_path_add_line ( ppath , plp -> o . co . x , plp -> o . co . y )"		5857422	1					
ANR	5857626	Callee	gx_path_add_line		5857422	0					
ANR	5857627	Identifier	gx_path_add_line		5857422	0					
ANR	5857628	ArgumentList	ppath		5857422	1					
ANR	5857629	Argument	ppath		5857422	0					
ANR	5857630	Identifier	ppath		5857422	0					
ANR	5857631	Argument	plp -> o . co . x		5857422	1					
ANR	5857632	MemberAccess	plp -> o . co . x		5857422	0					
ANR	5857633	MemberAccess	plp -> o . co		5857422	0					
ANR	5857634	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857635	Identifier	plp		5857422	0					
ANR	5857636	Identifier	o		5857422	1					
ANR	5857637	Identifier	co		5857422	1					
ANR	5857638	Identifier	x		5857422	1					
ANR	5857639	Argument	plp -> o . co . y		5857422	2					
ANR	5857640	MemberAccess	plp -> o . co . y		5857422	0					
ANR	5857641	MemberAccess	plp -> o . co		5857422	0					
ANR	5857642	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857643	Identifier	plp		5857422	0					
ANR	5857644	Identifier	o		5857422	1					
ANR	5857645	Identifier	co		5857422	1					
ANR	5857646	Identifier	y		5857422	1					
ANR	5857647	PrimaryExpression	0		5857422	1					
ANR	5857648	AssignmentExpression	"code = do_pie_join ( ppath , & plp -> e . p , & plp -> o . co , & plp -> o . cdelta , & nplp -> e . ce , & nplp -> e . cdelta , ! reflected , & plp -> width )"		5857422	1		=			
ANR	5857649	Identifier	code		5857422	0					
ANR	5857650	CallExpression	"do_pie_join ( ppath , & plp -> e . p , & plp -> o . co , & plp -> o . cdelta , & nplp -> e . ce , & nplp -> e . cdelta , ! reflected , & plp -> width )"		5857422	1					
ANR	5857651	Callee	do_pie_join		5857422	0					
ANR	5857652	Identifier	do_pie_join		5857422	0					
ANR	5857653	ArgumentList	ppath		5857422	1					
ANR	5857654	Argument	ppath		5857422	0					
ANR	5857655	Identifier	ppath		5857422	0					
ANR	5857656	Argument	& plp -> e . p		5857422	1					
ANR	5857657	UnaryOperationExpression	& plp -> e . p		5857422	0					
ANR	5857658	UnaryOperator	&		5857422	0					
ANR	5857659	MemberAccess	plp -> e . p		5857422	1					
ANR	5857660	PtrMemberAccess	plp -> e		5857422	0					
ANR	5857661	Identifier	plp		5857422	0					
ANR	5857662	Identifier	e		5857422	1					
ANR	5857663	Identifier	p		5857422	1					
ANR	5857664	Argument	& plp -> o . co		5857422	2					
ANR	5857665	UnaryOperationExpression	& plp -> o . co		5857422	0					
ANR	5857666	UnaryOperator	&		5857422	0					
ANR	5857667	MemberAccess	plp -> o . co		5857422	1					
ANR	5857668	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857669	Identifier	plp		5857422	0					
ANR	5857670	Identifier	o		5857422	1					
ANR	5857671	Identifier	co		5857422	1					
ANR	5857672	Argument	& plp -> o . cdelta		5857422	3					
ANR	5857673	UnaryOperationExpression	& plp -> o . cdelta		5857422	0					
ANR	5857674	UnaryOperator	&		5857422	0					
ANR	5857675	MemberAccess	plp -> o . cdelta		5857422	1					
ANR	5857676	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857677	Identifier	plp		5857422	0					
ANR	5857678	Identifier	o		5857422	1					
ANR	5857679	Identifier	cdelta		5857422	1					
ANR	5857680	Argument	& nplp -> e . ce		5857422	4					
ANR	5857681	UnaryOperationExpression	& nplp -> e . ce		5857422	0					
ANR	5857682	UnaryOperator	&		5857422	0					
ANR	5857683	MemberAccess	nplp -> e . ce		5857422	1					
ANR	5857684	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857685	Identifier	nplp		5857422	0					
ANR	5857686	Identifier	e		5857422	1					
ANR	5857687	Identifier	ce		5857422	1					
ANR	5857688	Argument	& nplp -> e . cdelta		5857422	5					
ANR	5857689	UnaryOperationExpression	& nplp -> e . cdelta		5857422	0					
ANR	5857690	UnaryOperator	&		5857422	0					
ANR	5857691	MemberAccess	nplp -> e . cdelta		5857422	1					
ANR	5857692	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857693	Identifier	nplp		5857422	0					
ANR	5857694	Identifier	e		5857422	1					
ANR	5857695	Identifier	cdelta		5857422	1					
ANR	5857696	Argument	! reflected		5857422	6					
ANR	5857697	UnaryOperationExpression	! reflected		5857422	0					
ANR	5857698	UnaryOperator	!		5857422	0					
ANR	5857699	Identifier	reflected		5857422	1					
ANR	5857700	Argument	& plp -> width		5857422	7					
ANR	5857701	UnaryOperationExpression	& plp -> width		5857422	0					
ANR	5857702	UnaryOperator	&		5857422	0					
ANR	5857703	PtrMemberAccess	plp -> width		5857422	1					
ANR	5857704	Identifier	plp		5857422	0					
ANR	5857705	Identifier	width		5857422	1					
ANR	5857706	ReturnStatement	return code ;	2662:12:108507:108518	5857422	1	True				
ANR	5857707	Identifier	code		5857422	0					
ANR	5857708	ElseStatement	else		5857422	0					
ANR	5857709	CompoundStatement		32:11:1037:1037	5857422	0					
ANR	5857710	IfStatement	"if ( line_intersect ( & plp -> o . ce , & plp -> width , & nplp -> e . co , & nplp -> width , & tangmeet ) != 0 )"		5857422	0					
ANR	5857711	Condition	"line_intersect ( & plp -> o . ce , & plp -> width , & nplp -> e . co , & nplp -> width , & tangmeet ) != 0"	2664:12:108545:108655	5857422	0	True				
ANR	5857712	EqualityExpression	"line_intersect ( & plp -> o . ce , & plp -> width , & nplp -> e . co , & nplp -> width , & tangmeet ) != 0"		5857422	0		!=			
ANR	5857713	CallExpression	"line_intersect ( & plp -> o . ce , & plp -> width , & nplp -> e . co , & nplp -> width , & tangmeet )"		5857422	0					
ANR	5857714	Callee	line_intersect		5857422	0					
ANR	5857715	Identifier	line_intersect		5857422	0					
ANR	5857716	ArgumentList	& plp -> o . ce		5857422	1					
ANR	5857717	Argument	& plp -> o . ce		5857422	0					
ANR	5857718	UnaryOperationExpression	& plp -> o . ce		5857422	0					
ANR	5857719	UnaryOperator	&		5857422	0					
ANR	5857720	MemberAccess	plp -> o . ce		5857422	1					
ANR	5857721	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857722	Identifier	plp		5857422	0					
ANR	5857723	Identifier	o		5857422	1					
ANR	5857724	Identifier	ce		5857422	1					
ANR	5857725	Argument	& plp -> width		5857422	1					
ANR	5857726	UnaryOperationExpression	& plp -> width		5857422	0					
ANR	5857727	UnaryOperator	&		5857422	0					
ANR	5857728	PtrMemberAccess	plp -> width		5857422	1					
ANR	5857729	Identifier	plp		5857422	0					
ANR	5857730	Identifier	width		5857422	1					
ANR	5857731	Argument	& nplp -> e . co		5857422	2					
ANR	5857732	UnaryOperationExpression	& nplp -> e . co		5857422	0					
ANR	5857733	UnaryOperator	&		5857422	0					
ANR	5857734	MemberAccess	nplp -> e . co		5857422	1					
ANR	5857735	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857736	Identifier	nplp		5857422	0					
ANR	5857737	Identifier	e		5857422	1					
ANR	5857738	Identifier	co		5857422	1					
ANR	5857739	Argument	& nplp -> width		5857422	3					
ANR	5857740	UnaryOperationExpression	& nplp -> width		5857422	0					
ANR	5857741	UnaryOperator	&		5857422	0					
ANR	5857742	PtrMemberAccess	nplp -> width		5857422	1					
ANR	5857743	Identifier	nplp		5857422	0					
ANR	5857744	Identifier	width		5857422	1					
ANR	5857745	Argument	& tangmeet		5857422	4					
ANR	5857746	UnaryOperationExpression	& tangmeet		5857422	0					
ANR	5857747	UnaryOperator	&		5857422	0					
ANR	5857748	Identifier	tangmeet		5857422	1					
ANR	5857749	PrimaryExpression	0		5857422	1					
ANR	5857750	ReturnStatement	return 0 ;	2666:12:108670:108678	5857422	1	True				
ANR	5857751	PrimaryExpression	0		5857422	0					
ANR	5857752	IfStatement	"if ( ( code = gx_path_close_subpath ( ppath ) ) < 0 || ( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & nplp -> e . co , & nplp -> e . cdelta , & plp -> o . ce , & plp -> o . cdelta , ! reflected , & plp -> width ) ) )"		5857422	1					
ANR	5857753	Condition	"( code = gx_path_close_subpath ( ppath ) ) < 0 || ( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & nplp -> e . co , & nplp -> e . cdelta , & plp -> o . ce , & plp -> o . cdelta , ! reflected , & plp -> width ) )"	2667:12:108692:109087	5857422	0	True				
ANR	5857754	OrExpression	"( code = gx_path_close_subpath ( ppath ) ) < 0 || ( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & nplp -> e . co , & nplp -> e . cdelta , & plp -> o . ce , & plp -> o . cdelta , ! reflected , & plp -> width ) )"		5857422	0		||			
ANR	5857755	RelationalExpression	( code = gx_path_close_subpath ( ppath ) ) < 0		5857422	0		<			
ANR	5857756	AssignmentExpression	code = gx_path_close_subpath ( ppath )		5857422	0		=			
ANR	5857757	Identifier	code		5857422	0					
ANR	5857758	CallExpression	gx_path_close_subpath ( ppath )		5857422	1					
ANR	5857759	Callee	gx_path_close_subpath		5857422	0					
ANR	5857760	Identifier	gx_path_close_subpath		5857422	0					
ANR	5857761	ArgumentList	ppath		5857422	1					
ANR	5857762	Argument	ppath		5857422	0					
ANR	5857763	Identifier	ppath		5857422	0					
ANR	5857764	PrimaryExpression	0		5857422	1					
ANR	5857765	OrExpression	"( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0 || ( code = gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & nplp -> e . co , & nplp -> e . cdelta , & plp -> o . ce , & plp -> o . cdelta , ! reflected , & plp -> width ) )"		5857422	1		||			
ANR	5857766	RelationalExpression	"( code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y ) ) < 0"		5857422	0		<			
ANR	5857767	AssignmentExpression	"code = gx_path_add_point ( ppath , tangmeet . x , tangmeet . y )"		5857422	0		=			
ANR	5857768	Identifier	code		5857422	0					
ANR	5857769	CallExpression	"gx_path_add_point ( ppath , tangmeet . x , tangmeet . y )"		5857422	1					
ANR	5857770	Callee	gx_path_add_point		5857422	0					
ANR	5857771	Identifier	gx_path_add_point		5857422	0					
ANR	5857772	ArgumentList	ppath		5857422	1					
ANR	5857773	Argument	ppath		5857422	0					
ANR	5857774	Identifier	ppath		5857422	0					
ANR	5857775	Argument	tangmeet . x		5857422	1					
ANR	5857776	MemberAccess	tangmeet . x		5857422	0					
ANR	5857777	Identifier	tangmeet		5857422	0					
ANR	5857778	Identifier	x		5857422	1					
ANR	5857779	Argument	tangmeet . y		5857422	2					
ANR	5857780	MemberAccess	tangmeet . y		5857422	0					
ANR	5857781	Identifier	tangmeet		5857422	0					
ANR	5857782	Identifier	y		5857422	1					
ANR	5857783	PrimaryExpression	0		5857422	1					
ANR	5857784	OrExpression	"( code = gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y ) ) < 0 || ( code = do_pie_join ( ppath , & plp -> e . p , & nplp -> e . co , & nplp -> e . cdelta , & plp -> o . ce , & plp -> o . cdelta , ! reflected , & plp -> width ) )"		5857422	1		||			
ANR	5857785	RelationalExpression	"( code = gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y ) ) < 0"		5857422	0		<			
ANR	5857786	AssignmentExpression	"code = gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y )"		5857422	0		=			
ANR	5857787	Identifier	code		5857422	0					
ANR	5857788	CallExpression	"gx_path_add_line ( ppath , nplp -> e . co . x , nplp -> e . co . y )"		5857422	1					
ANR	5857789	Callee	gx_path_add_line		5857422	0					
ANR	5857790	Identifier	gx_path_add_line		5857422	0					
ANR	5857791	ArgumentList	ppath		5857422	1					
ANR	5857792	Argument	ppath		5857422	0					
ANR	5857793	Identifier	ppath		5857422	0					
ANR	5857794	Argument	nplp -> e . co . x		5857422	1					
ANR	5857795	MemberAccess	nplp -> e . co . x		5857422	0					
ANR	5857796	MemberAccess	nplp -> e . co		5857422	0					
ANR	5857797	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857798	Identifier	nplp		5857422	0					
ANR	5857799	Identifier	e		5857422	1					
ANR	5857800	Identifier	co		5857422	1					
ANR	5857801	Identifier	x		5857422	1					
ANR	5857802	Argument	nplp -> e . co . y		5857422	2					
ANR	5857803	MemberAccess	nplp -> e . co . y		5857422	0					
ANR	5857804	MemberAccess	nplp -> e . co		5857422	0					
ANR	5857805	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857806	Identifier	nplp		5857422	0					
ANR	5857807	Identifier	e		5857422	1					
ANR	5857808	Identifier	co		5857422	1					
ANR	5857809	Identifier	y		5857422	1					
ANR	5857810	PrimaryExpression	0		5857422	1					
ANR	5857811	AssignmentExpression	"code = do_pie_join ( ppath , & plp -> e . p , & nplp -> e . co , & nplp -> e . cdelta , & plp -> o . ce , & plp -> o . cdelta , ! reflected , & plp -> width )"		5857422	1		=			
ANR	5857812	Identifier	code		5857422	0					
ANR	5857813	CallExpression	"do_pie_join ( ppath , & plp -> e . p , & nplp -> e . co , & nplp -> e . cdelta , & plp -> o . ce , & plp -> o . cdelta , ! reflected , & plp -> width )"		5857422	1					
ANR	5857814	Callee	do_pie_join		5857422	0					
ANR	5857815	Identifier	do_pie_join		5857422	0					
ANR	5857816	ArgumentList	ppath		5857422	1					
ANR	5857817	Argument	ppath		5857422	0					
ANR	5857818	Identifier	ppath		5857422	0					
ANR	5857819	Argument	& plp -> e . p		5857422	1					
ANR	5857820	UnaryOperationExpression	& plp -> e . p		5857422	0					
ANR	5857821	UnaryOperator	&		5857422	0					
ANR	5857822	MemberAccess	plp -> e . p		5857422	1					
ANR	5857823	PtrMemberAccess	plp -> e		5857422	0					
ANR	5857824	Identifier	plp		5857422	0					
ANR	5857825	Identifier	e		5857422	1					
ANR	5857826	Identifier	p		5857422	1					
ANR	5857827	Argument	& nplp -> e . co		5857422	2					
ANR	5857828	UnaryOperationExpression	& nplp -> e . co		5857422	0					
ANR	5857829	UnaryOperator	&		5857422	0					
ANR	5857830	MemberAccess	nplp -> e . co		5857422	1					
ANR	5857831	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857832	Identifier	nplp		5857422	0					
ANR	5857833	Identifier	e		5857422	1					
ANR	5857834	Identifier	co		5857422	1					
ANR	5857835	Argument	& nplp -> e . cdelta		5857422	3					
ANR	5857836	UnaryOperationExpression	& nplp -> e . cdelta		5857422	0					
ANR	5857837	UnaryOperator	&		5857422	0					
ANR	5857838	MemberAccess	nplp -> e . cdelta		5857422	1					
ANR	5857839	PtrMemberAccess	nplp -> e		5857422	0					
ANR	5857840	Identifier	nplp		5857422	0					
ANR	5857841	Identifier	e		5857422	1					
ANR	5857842	Identifier	cdelta		5857422	1					
ANR	5857843	Argument	& plp -> o . ce		5857422	4					
ANR	5857844	UnaryOperationExpression	& plp -> o . ce		5857422	0					
ANR	5857845	UnaryOperator	&		5857422	0					
ANR	5857846	MemberAccess	plp -> o . ce		5857422	1					
ANR	5857847	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857848	Identifier	plp		5857422	0					
ANR	5857849	Identifier	o		5857422	1					
ANR	5857850	Identifier	ce		5857422	1					
ANR	5857851	Argument	& plp -> o . cdelta		5857422	5					
ANR	5857852	UnaryOperationExpression	& plp -> o . cdelta		5857422	0					
ANR	5857853	UnaryOperator	&		5857422	0					
ANR	5857854	MemberAccess	plp -> o . cdelta		5857422	1					
ANR	5857855	PtrMemberAccess	plp -> o		5857422	0					
ANR	5857856	Identifier	plp		5857422	0					
ANR	5857857	Identifier	o		5857422	1					
ANR	5857858	Identifier	cdelta		5857422	1					
ANR	5857859	Argument	! reflected		5857422	6					
ANR	5857860	UnaryOperationExpression	! reflected		5857422	0					
ANR	5857861	UnaryOperator	!		5857422	0					
ANR	5857862	Identifier	reflected		5857422	1					
ANR	5857863	Argument	& plp -> width		5857422	7					
ANR	5857864	UnaryOperationExpression	& plp -> width		5857422	0					
ANR	5857865	UnaryOperator	&		5857422	0					
ANR	5857866	PtrMemberAccess	plp -> width		5857422	1					
ANR	5857867	Identifier	plp		5857422	0					
ANR	5857868	Identifier	width		5857422	1					
ANR	5857869	ReturnStatement	return code ;	2673:12:109102:109113	5857422	1	True				
ANR	5857870	Identifier	code		5857422	0					
ANR	5857871	ReturnStatement	return 0 ;	2675:4:109125:109133	5857422	10	True				
ANR	5857872	PrimaryExpression	0		5857422	0					
ANR	5857873	ReturnType	static int		5857422	1					
ANR	5857874	Identifier	join_under_pie		5857422	2					
ANR	5857875	ParameterList	"gx_path * ppath , pl_ptr plp , pl_ptr nplp , bool reflected"		5857422	3					
ANR	5857876	Parameter	gx_path * ppath	2631:15:107435:107449	5857422	0	True				
ANR	5857877	ParameterType	gx_path *		5857422	0					
ANR	5857878	Identifier	ppath		5857422	1					
ANR	5857879	Parameter	pl_ptr plp	2631:32:107452:107461	5857422	1	True				
ANR	5857880	ParameterType	pl_ptr		5857422	0					
ANR	5857881	Identifier	plp		5857422	1					
ANR	5857882	Parameter	pl_ptr nplp	2631:44:107464:107474	5857422	2	True				
ANR	5857883	ParameterType	pl_ptr		5857422	0					
ANR	5857884	Identifier	nplp		5857422	1					
ANR	5857885	Parameter	bool reflected	2631:57:107477:107490	5857422	3	True				
ANR	5857886	ParameterType	bool		5857422	0					
ANR	5857887	Identifier	reflected		5857422	1					
ANR	5857888	CFGEntryNode	ENTRY		5857422		True				
ANR	5857889	CFGExitNode	EXIT		5857422		True				
ANR	5857890	Symbol	reflected		5857422						
ANR	5857891	Symbol	& plp -> e		5857422						
ANR	5857892	Symbol	line_intersect		5857422						
ANR	5857893	Symbol	nplp -> e . co . x		5857422						
ANR	5857894	Symbol	nplp -> e . co . y		5857422						
ANR	5857895	Symbol	dirn2 . x		5857422						
ANR	5857896	Symbol	ccw		5857422						
ANR	5857897	Symbol	dirn2 . y		5857422						
ANR	5857898	Symbol	& nplp -> width		5857422						
ANR	5857899	Symbol	& plp -> width		5857422						
ANR	5857900	Symbol	* plp		5857422						
ANR	5857901	Symbol	& plp -> o . cdelta		5857422						
ANR	5857902	Symbol	dirn1 . y		5857422						
ANR	5857903	Symbol	dirn1 . x		5857422						
ANR	5857904	Symbol	& plp -> o . ce		5857422						
ANR	5857905	Symbol	& tangmeet		5857422						
ANR	5857906	Symbol	tangmeet . y		5857422						
ANR	5857907	Symbol	& dirn1		5857422						
ANR	5857908	Symbol	& dirn2		5857422						
ANR	5857909	Symbol	tangmeet . x		5857422						
ANR	5857910	Symbol	gx_path_add_point		5857422						
ANR	5857911	Symbol	& plp -> o		5857422						
ANR	5857912	Symbol	nplp -> e . co		5857422						
ANR	5857913	Symbol	& plp -> e . p		5857422						
ANR	5857914	Symbol	& plp -> o . co		5857422						
ANR	5857915	Symbol	plp -> width . y		5857422						
ANR	5857916	Symbol	plp -> width . x		5857422						
ANR	5857917	Symbol	code		5857422						
ANR	5857918	Symbol	& nplp -> e . co		5857422						
ANR	5857919	Symbol	plp -> o . co		5857422						
ANR	5857920	Symbol	ppath		5857422						
ANR	5857921	Symbol	plp -> o . co . y		5857422						
ANR	5857922	Symbol	plp -> o . co . x		5857422						
ANR	5857923	Symbol	gx_path_close_subpath		5857422						
ANR	5857924	Symbol	plp -> width		5857422						
ANR	5857925	Symbol	nplp -> width		5857422						
ANR	5857926	Symbol	nplp -> e		5857422						
ANR	5857927	Symbol	* nplp		5857422						
ANR	5857928	Symbol	dirn1		5857422						
ANR	5857929	Symbol	dirn2		5857422						
ANR	5857930	Symbol	l		5857422						
ANR	5857931	Symbol	& nplp -> e . cdelta		5857422						
ANR	5857932	Symbol	nplp -> width . y		5857422						
ANR	5857933	Symbol	r		5857422						
ANR	5857934	Symbol	& nplp -> e		5857422						
ANR	5857935	Symbol	plp		5857422						
ANR	5857936	Symbol	nplp		5857422						
ANR	5857937	Symbol	tangmeet		5857422						
ANR	5857938	Symbol	& nplp -> e . ce		5857422						
ANR	5857939	Symbol	plp -> o		5857422						
ANR	5857940	Symbol	gx_path_add_line		5857422						
ANR	5857941	Symbol	plp -> e		5857422						
ANR	5857942	Symbol	do_pie_join		5857422						
ANR	5857943	Symbol	nplp -> width . x		5857422						
ANR	5857944	Function	cap_points	2680:0:109219:109979							
ANR	5857945	FunctionDef	"cap_points (gs_line_cap type , const_ep_ptr endp , gs_fixed_point * pts)"		5857944	0					
ANR	5857946	CompoundStatement		2682:0:109307:109979	5857944	0					
ANR	5857947	Statement	define	2683:1:109310:109315	5857944	0	True				
ANR	5857948	Statement	PUT_POINT	2683:8:109317:109325	5857944	1	True				
ANR	5857949	Statement	(	2683:17:109326:109326	5857944	2	True				
ANR	5857950	Statement	i	2683:18:109327:109327	5857944	3	True				
ANR	5857951	Statement	","	2683:19:109328:109328	5857944	4	True				
ANR	5857952	Statement	px	2683:21:109330:109331	5857944	5	True				
ANR	5857953	Statement	","	2683:23:109332:109332	5857944	6	True				
ANR	5857954	Statement	py	2683:25:109334:109335	5857944	7	True				
ANR	5857955	Statement	)	2683:27:109336:109336	5857944	8	True				
ANR	5857956	Statement	pts	2684:2:109341:109343	5857944	9	True				
ANR	5857957	Statement	[	2684:5:109344:109344	5857944	10	True				
ANR	5857958	Statement	i	2684:6:109345:109345	5857944	11	True				
ANR	5857959	Statement	]	2684:7:109346:109346	5857944	12	True				
ANR	5857960	Statement	.	2684:8:109347:109347	5857944	13	True				
ANR	5857961	Statement	x	2684:9:109348:109348	5857944	14	True				
ANR	5857962	Statement	=	2684:11:109350:109350	5857944	15	True				
ANR	5857963	Statement	(	2684:13:109352:109352	5857944	16	True				
ANR	5857964	Statement	px	2684:14:109353:109354	5857944	17	True				
ANR	5857965	Statement	)	2684:16:109355:109355	5857944	18	True				
ANR	5857966	Statement	","	2684:17:109356:109356	5857944	19	True				
ANR	5857967	Statement	pts	2684:19:109358:109360	5857944	20	True				
ANR	5857968	Statement	[	2684:22:109361:109361	5857944	21	True				
ANR	5857969	Statement	i	2684:23:109362:109362	5857944	22	True				
ANR	5857970	Statement	]	2684:24:109363:109363	5857944	23	True				
ANR	5857971	Statement	.	2684:25:109364:109364	5857944	24	True				
ANR	5857972	Statement	y	2684:26:109365:109365	5857944	25	True				
ANR	5857973	Statement	=	2684:28:109367:109367	5857944	26	True				
ANR	5857974	Statement	(	2684:30:109369:109369	5857944	27	True				
ANR	5857975	Statement	py	2684:31:109370:109371	5857944	28	True				
ANR	5857976	Statement	)	2684:33:109372:109372	5857944	29	True				
ANR	5857977	SwitchStatement	switch ( type )		5857944	30					
ANR	5857978	Condition	type	2685:12:109386:109389	5857944	0	True				
ANR	5857979	Identifier	type		5857944	0					
ANR	5857980	CompoundStatement		4:18:84:84	5857944	1					
ANR	5857981	Label	case gs_cap_butt :	2686:8:109402:109418	5857944	0	True				
ANR	5857982	Identifier	gs_cap_butt		5857944	0					
ANR	5857983	ExpressionStatement	"PUT_POINT ( 0 , xo , yo )"	2687:12:109432:109452	5857944	1	True				
ANR	5857984	CallExpression	"PUT_POINT ( 0 , xo , yo )"		5857944	0					
ANR	5857985	Callee	PUT_POINT		5857944	0					
ANR	5857986	Identifier	PUT_POINT		5857944	0					
ANR	5857987	ArgumentList	0		5857944	1					
ANR	5857988	Argument	0		5857944	0					
ANR	5857989	PrimaryExpression	0		5857944	0					
ANR	5857990	Argument	xo		5857944	1					
ANR	5857991	Identifier	xo		5857944	0					
ANR	5857992	Argument	yo		5857944	2					
ANR	5857993	Identifier	yo		5857944	0					
ANR	5857994	ExpressionStatement	"PUT_POINT ( 1 , xe , ye )"	2688:12:109466:109486	5857944	2	True				
ANR	5857995	CallExpression	"PUT_POINT ( 1 , xe , ye )"		5857944	0					
ANR	5857996	Callee	PUT_POINT		5857944	0					
ANR	5857997	Identifier	PUT_POINT		5857944	0					
ANR	5857998	ArgumentList	1		5857944	1					
ANR	5857999	Argument	1		5857944	0					
ANR	5858000	PrimaryExpression	1		5857944	0					
ANR	5858001	Argument	xe		5857944	1					
ANR	5858002	Identifier	xe		5857944	0					
ANR	5858003	Argument	ye		5857944	2					
ANR	5858004	Identifier	ye		5857944	0					
ANR	5858005	ReturnStatement	return 2 ;	2689:12:109500:109508	5857944	3	True				
ANR	5858006	PrimaryExpression	2		5857944	0					
ANR	5858007	Label	case gs_cap_square :	2690:8:109518:109536	5857944	4	True				
ANR	5858008	Identifier	gs_cap_square		5857944	0					
ANR	5858009	ExpressionStatement	"PUT_POINT ( 0 , xo + cdx , yo + cdy )"	2691:12:109550:109582	5857944	5	True				
ANR	5858010	CallExpression	"PUT_POINT ( 0 , xo + cdx , yo + cdy )"		5857944	0					
ANR	5858011	Callee	PUT_POINT		5857944	0					
ANR	5858012	Identifier	PUT_POINT		5857944	0					
ANR	5858013	ArgumentList	0		5857944	1					
ANR	5858014	Argument	0		5857944	0					
ANR	5858015	PrimaryExpression	0		5857944	0					
ANR	5858016	Argument	xo + cdx		5857944	1					
ANR	5858017	AdditiveExpression	xo + cdx		5857944	0		+			
ANR	5858018	Identifier	xo		5857944	0					
ANR	5858019	Identifier	cdx		5857944	1					
ANR	5858020	Argument	yo + cdy		5857944	2					
ANR	5858021	AdditiveExpression	yo + cdy		5857944	0		+			
ANR	5858022	Identifier	yo		5857944	0					
ANR	5858023	Identifier	cdy		5857944	1					
ANR	5858024	ExpressionStatement	"PUT_POINT ( 1 , xe + cdx , ye + cdy )"	2692:12:109596:109628	5857944	6	True				
ANR	5858025	CallExpression	"PUT_POINT ( 1 , xe + cdx , ye + cdy )"		5857944	0					
ANR	5858026	Callee	PUT_POINT		5857944	0					
ANR	5858027	Identifier	PUT_POINT		5857944	0					
ANR	5858028	ArgumentList	1		5857944	1					
ANR	5858029	Argument	1		5857944	0					
ANR	5858030	PrimaryExpression	1		5857944	0					
ANR	5858031	Argument	xe + cdx		5857944	1					
ANR	5858032	AdditiveExpression	xe + cdx		5857944	0		+			
ANR	5858033	Identifier	xe		5857944	0					
ANR	5858034	Identifier	cdx		5857944	1					
ANR	5858035	Argument	ye + cdy		5857944	2					
ANR	5858036	AdditiveExpression	ye + cdy		5857944	0		+			
ANR	5858037	Identifier	ye		5857944	0					
ANR	5858038	Identifier	cdy		5857944	1					
ANR	5858039	ReturnStatement	return 2 ;	2693:12:109642:109650	5857944	7	True				
ANR	5858040	PrimaryExpression	2		5857944	0					
ANR	5858041	Label	case gs_cap_triangle :	2694:8:109660:109680	5857944	8	True				
ANR	5858042	Identifier	gs_cap_triangle		5857944	0					
ANR	5858043	ExpressionStatement	"PUT_POINT ( 0 , xo , yo )"	2695:12:109732:109752	5857944	9	True				
ANR	5858044	CallExpression	"PUT_POINT ( 0 , xo , yo )"		5857944	0					
ANR	5858045	Callee	PUT_POINT		5857944	0					
ANR	5858046	Identifier	PUT_POINT		5857944	0					
ANR	5858047	ArgumentList	0		5857944	1					
ANR	5858048	Argument	0		5857944	0					
ANR	5858049	PrimaryExpression	0		5857944	0					
ANR	5858050	Argument	xo		5857944	1					
ANR	5858051	Identifier	xo		5857944	0					
ANR	5858052	Argument	yo		5857944	2					
ANR	5858053	Identifier	yo		5857944	0					
ANR	5858054	ExpressionStatement	"PUT_POINT ( 1 , px + cdx , py + cdy )"	2696:12:109766:109798	5857944	10	True				
ANR	5858055	CallExpression	"PUT_POINT ( 1 , px + cdx , py + cdy )"		5857944	0					
ANR	5858056	Callee	PUT_POINT		5857944	0					
ANR	5858057	Identifier	PUT_POINT		5857944	0					
ANR	5858058	ArgumentList	1		5857944	1					
ANR	5858059	Argument	1		5857944	0					
ANR	5858060	PrimaryExpression	1		5857944	0					
ANR	5858061	Argument	px + cdx		5857944	1					
ANR	5858062	AdditiveExpression	px + cdx		5857944	0		+			
ANR	5858063	Identifier	px		5857944	0					
ANR	5858064	Identifier	cdx		5857944	1					
ANR	5858065	Argument	py + cdy		5857944	2					
ANR	5858066	AdditiveExpression	py + cdy		5857944	0		+			
ANR	5858067	Identifier	py		5857944	0					
ANR	5858068	Identifier	cdy		5857944	1					
ANR	5858069	ExpressionStatement	"PUT_POINT ( 2 , xe , ye )"	2697:12:109812:109832	5857944	11	True				
ANR	5858070	CallExpression	"PUT_POINT ( 2 , xe , ye )"		5857944	0					
ANR	5858071	Callee	PUT_POINT		5857944	0					
ANR	5858072	Identifier	PUT_POINT		5857944	0					
ANR	5858073	ArgumentList	2		5857944	1					
ANR	5858074	Argument	2		5857944	0					
ANR	5858075	PrimaryExpression	2		5857944	0					
ANR	5858076	Argument	xe		5857944	1					
ANR	5858077	Identifier	xe		5857944	0					
ANR	5858078	Argument	ye		5857944	2					
ANR	5858079	Identifier	ye		5857944	0					
ANR	5858080	ReturnStatement	return 3 ;	2698:12:109846:109854	5857944	12	True				
ANR	5858081	PrimaryExpression	3		5857944	0					
ANR	5858082	Label	default :	2699:8:109864:109871	5857944	13	True				
ANR	5858083	Identifier	default		5857944	0					
ANR	5858084	ExpressionStatement	return_error ( gs_error_unregistered )	2700:12:109919:109954	5857944	14	True				
ANR	5858085	CallExpression	return_error ( gs_error_unregistered )		5857944	0					
ANR	5858086	Callee	return_error		5857944	0					
ANR	5858087	Identifier	return_error		5857944	0					
ANR	5858088	ArgumentList	gs_error_unregistered		5857944	1					
ANR	5858089	Argument	gs_error_unregistered		5857944	0					
ANR	5858090	Identifier	gs_error_unregistered		5857944	0					
ANR	5858091	Statement	undef	2702:1:109963:109967	5857944	31	True				
ANR	5858092	Statement	PUT_POINT	2702:7:109969:109977	5857944	32	True				
ANR	5858093	ReturnType	static int		5857944	1					
ANR	5858094	Identifier	cap_points		5857944	2					
ANR	5858095	ParameterList	"gs_line_cap type , const_ep_ptr endp , gs_fixed_point * pts"		5857944	3					
ANR	5858096	Parameter	gs_line_cap type	2681:11:109241:109256	5857944	0	True				
ANR	5858097	ParameterType	gs_line_cap		5857944	0					
ANR	5858098	Identifier	type		5857944	1					
ANR	5858099	Parameter	const_ep_ptr endp	2681:29:109259:109275	5857944	1	True				
ANR	5858100	ParameterType	const_ep_ptr		5857944	0					
ANR	5858101	Identifier	endp		5857944	1					
ANR	5858102	Parameter	gs_fixed_point * pts	2681:48:109278:109296	5857944	2	True				
ANR	5858103	ParameterType	gs_fixed_point *		5857944	0					
ANR	5858104	Identifier	pts		5857944	1					
ANR	5858105	CFGEntryNode	ENTRY		5857944		True				
ANR	5858106	CFGExitNode	EXIT		5857944		True				
ANR	5858107	Symbol	gs_error_unregistered		5857944						
ANR	5858108	Symbol	yo		5857944						
ANR	5858109	Symbol	cdx		5857944						
ANR	5858110	Symbol	xo		5857944						
ANR	5858111	Symbol	px		5857944						
ANR	5858112	Symbol	cdy		5857944						
ANR	5858113	Symbol	py		5857944						
ANR	5858114	Symbol	endp		5857944						
ANR	5858115	Symbol	type		5857944						
ANR	5858116	Symbol	ye		5857944						
ANR	5858117	Symbol	xe		5857944						
ANR	5858118	Symbol	pts		5857944						
