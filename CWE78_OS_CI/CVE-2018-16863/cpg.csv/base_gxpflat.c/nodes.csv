command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1211811	File	data/converged/CVE-2018-16863_ghostpdl/base_gxpflat.c								
ANR	1211812	Function	gx_curve_log2_samples	48:0:1751:3479							
ANR	1211813	FunctionDef	"gx_curve_log2_samples (fixed x0 , fixed y0 , const curve_segment * pc , fixed fixed_flat)"		1211812	0					
ANR	1211814	CompoundStatement		51:0:1863:3479	1211812	0					
ANR	1211815	IdentifierDeclStatement	"fixed x03 = pc -> pt . x - x0 , y03 = pc -> pt . y - y0 ;"	52:4:1869:1931	1211812	0	True				
ANR	1211816	IdentifierDecl	x03 = pc -> pt . x - x0		1211812	0					
ANR	1211817	IdentifierDeclType	fixed		1211812	0					
ANR	1211818	Identifier	x03		1211812	1					
ANR	1211819	AssignmentExpression	x03 = pc -> pt . x - x0		1211812	2		=			
ANR	1211820	Identifier	x03		1211812	0					
ANR	1211821	AdditiveExpression	pc -> pt . x - x0		1211812	1		-			
ANR	1211822	MemberAccess	pc -> pt . x		1211812	0					
ANR	1211823	PtrMemberAccess	pc -> pt		1211812	0					
ANR	1211824	Identifier	pc		1211812	0					
ANR	1211825	Identifier	pt		1211812	1					
ANR	1211826	Identifier	x		1211812	1					
ANR	1211827	Identifier	x0		1211812	1					
ANR	1211828	IdentifierDecl	y03 = pc -> pt . y - y0		1211812	1					
ANR	1211829	IdentifierDeclType	fixed		1211812	0					
ANR	1211830	Identifier	y03		1211812	1					
ANR	1211831	AssignmentExpression	y03 = pc -> pt . y - y0		1211812	2		=			
ANR	1211832	Identifier	y03		1211812	0					
ANR	1211833	AdditiveExpression	pc -> pt . y - y0		1211812	1		-			
ANR	1211834	MemberAccess	pc -> pt . y		1211812	0					
ANR	1211835	PtrMemberAccess	pc -> pt		1211812	0					
ANR	1211836	Identifier	pc		1211812	0					
ANR	1211837	Identifier	pt		1211812	1					
ANR	1211838	Identifier	y		1211812	1					
ANR	1211839	Identifier	y0		1211812	1					
ANR	1211840	IdentifierDeclStatement	int k ;	55:4:1937:1942	1211812	1	True				
ANR	1211841	IdentifierDecl	k		1211812	0					
ANR	1211842	IdentifierDeclType	int		1211812	0					
ANR	1211843	Identifier	k		1211812	1					
ANR	1211844	IfStatement	if ( x03 < 0 )		1211812	2					
ANR	1211845	Condition	x03 < 0	57:8:1953:1959	1211812	0	True				
ANR	1211846	RelationalExpression	x03 < 0		1211812	0		<			
ANR	1211847	Identifier	x03		1211812	0					
ANR	1211848	PrimaryExpression	0		1211812	1					
ANR	1211849	ExpressionStatement	x03 = - x03	58:8:1970:1980	1211812	1	True				
ANR	1211850	AssignmentExpression	x03 = - x03		1211812	0		=			
ANR	1211851	Identifier	x03		1211812	0					
ANR	1211852	UnaryOperationExpression	- x03		1211812	1					
ANR	1211853	UnaryOperator	-		1211812	0					
ANR	1211854	Identifier	x03		1211812	1					
ANR	1211855	IfStatement	if ( y03 < 0 )		1211812	3					
ANR	1211856	Condition	y03 < 0	59:8:1990:1996	1211812	0	True				
ANR	1211857	RelationalExpression	y03 < 0		1211812	0		<			
ANR	1211858	Identifier	y03		1211812	0					
ANR	1211859	PrimaryExpression	0		1211812	1					
ANR	1211860	ExpressionStatement	y03 = - y03	60:8:2007:2017	1211812	1	True				
ANR	1211861	AssignmentExpression	y03 = - y03		1211812	0		=			
ANR	1211862	Identifier	y03		1211812	0					
ANR	1211863	UnaryOperationExpression	- y03		1211812	1					
ANR	1211864	UnaryOperator	-		1211812	0					
ANR	1211865	Identifier	y03		1211812	1					
ANR	1211866	IfStatement	if ( ( x03 | y03 ) < int2fixed ( 16 ) )		1211812	4					
ANR	1211867	Condition	( x03 | y03 ) < int2fixed ( 16 )	61:8:2027:2053	1211812	0	True				
ANR	1211868	RelationalExpression	( x03 | y03 ) < int2fixed ( 16 )		1211812	0		<			
ANR	1211869	InclusiveOrExpression	x03 | y03		1211812	0		|			
ANR	1211870	Identifier	x03		1211812	0					
ANR	1211871	Identifier	y03		1211812	1					
ANR	1211872	CallExpression	int2fixed ( 16 )		1211812	1					
ANR	1211873	Callee	int2fixed		1211812	0					
ANR	1211874	Identifier	int2fixed		1211812	0					
ANR	1211875	ArgumentList	16		1211812	1					
ANR	1211876	Argument	16		1211812	0					
ANR	1211877	PrimaryExpression	16		1211812	0					
ANR	1211878	ExpressionStatement	fixed_flat >>= 1	62:8:2064:2080	1211812	1	True				
ANR	1211879	AssignmentExpression	fixed_flat >>= 1		1211812	0		>>=			
ANR	1211880	Identifier	fixed_flat		1211812	0					
ANR	1211881	PrimaryExpression	1		1211812	1					
ANR	1211882	IfStatement	if ( fixed_flat == 0 )		1211812	5					
ANR	1211883	Condition	fixed_flat == 0	63:8:2090:2104	1211812	0	True				
ANR	1211884	EqualityExpression	fixed_flat == 0		1211812	0		==			
ANR	1211885	Identifier	fixed_flat		1211812	0					
ANR	1211886	PrimaryExpression	0		1211812	1					
ANR	1211887	CompoundStatement		14:8:288:311	1211812	1					
ANR	1211888	IdentifierDeclStatement	"fixed m = max ( x03 , y03 ) ;"	64:8:2152:2175	1211812	0	True				
ANR	1211889	IdentifierDecl	"m = max ( x03 , y03 )"		1211812	0					
ANR	1211890	IdentifierDeclType	fixed		1211812	0					
ANR	1211891	Identifier	m		1211812	1					
ANR	1211892	AssignmentExpression	"m = max ( x03 , y03 )"		1211812	2		=			
ANR	1211893	Identifier	m		1211812	0					
ANR	1211894	CallExpression	"max ( x03 , y03 )"		1211812	1					
ANR	1211895	Callee	max		1211812	0					
ANR	1211896	Identifier	max		1211812	0					
ANR	1211897	ArgumentList	x03		1211812	1					
ANR	1211898	Argument	x03		1211812	0					
ANR	1211899	Identifier	x03		1211812	0					
ANR	1211900	Argument	y03		1211812	1					
ANR	1211901	Identifier	y03		1211812	0					
ANR	1211902	ForStatement	for ( k = 1 ; m > fixed_1 ; )		1211812	1					
ANR	1211903	ForInit	k = 1 ;	66:13:2191:2196	1211812	0	True				
ANR	1211904	AssignmentExpression	k = 1		1211812	0		=			
ANR	1211905	Identifier	k		1211812	0					
ANR	1211906	PrimaryExpression	1		1211812	1					
ANR	1211907	Condition	m > fixed_1	66:20:2198:2208	1211812	1	True				
ANR	1211908	RelationalExpression	m > fixed_1		1211812	0		>			
ANR	1211909	Identifier	m		1211812	0					
ANR	1211910	Identifier	fixed_1		1211812	1					
ANR	1211911	ExpressionStatement	"k ++ , m >>= 1"	67:12:2224:2236	1211812	2	True				
ANR	1211912	Expression	"k ++ , m >>= 1"		1211812	0					
ANR	1211913	PostIncDecOperationExpression	k ++		1211812	0					
ANR	1211914	Identifier	k		1211812	0					
ANR	1211915	IncDec	++		1211812	1					
ANR	1211916	AssignmentExpression	m >>= 1		1211812	1		>>=			
ANR	1211917	Identifier	m		1211812	0					
ANR	1211918	PrimaryExpression	1		1211812	1					
ANR	1211919	ElseStatement	else		1211812	0					
ANR	1211920	CompoundStatement		32:8:1022:1048	1211812	0					
ANR	1211921	IdentifierDeclStatement	"const fixed x12 = pc -> p1 . x - pc -> p2 . x , y12 = pc -> p1 . y - pc -> p2 . y , dx0 = x0 - pc -> p1 . x - x12 , dy0 = y0 - pc -> p1 . y - y12 , dx1 = x12 - pc -> p2 . x + pc -> pt . x , dy1 = y12 - pc -> p2 . y + pc -> pt . y , adx0 = any_abs ( dx0 ) , ady0 = any_abs ( dy0 ) , adx1 = any_abs ( dx1 ) , ady1 = any_abs ( dy1 ) ;"	69:8:2259:2597	1211812	0	True				
ANR	1211922	IdentifierDecl	x12 = pc -> p1 . x - pc -> p2 . x		1211812	0					
ANR	1211923	IdentifierDeclType	const fixed		1211812	0					
ANR	1211924	Identifier	x12		1211812	1					
ANR	1211925	AssignmentExpression	x12 = pc -> p1 . x - pc -> p2 . x		1211812	2		=			
ANR	1211926	Identifier	x12		1211812	0					
ANR	1211927	AdditiveExpression	pc -> p1 . x - pc -> p2 . x		1211812	1		-			
ANR	1211928	MemberAccess	pc -> p1 . x		1211812	0					
ANR	1211929	PtrMemberAccess	pc -> p1		1211812	0					
ANR	1211930	Identifier	pc		1211812	0					
ANR	1211931	Identifier	p1		1211812	1					
ANR	1211932	Identifier	x		1211812	1					
ANR	1211933	MemberAccess	pc -> p2 . x		1211812	1					
ANR	1211934	PtrMemberAccess	pc -> p2		1211812	0					
ANR	1211935	Identifier	pc		1211812	0					
ANR	1211936	Identifier	p2		1211812	1					
ANR	1211937	Identifier	x		1211812	1					
ANR	1211938	IdentifierDecl	y12 = pc -> p1 . y - pc -> p2 . y		1211812	1					
ANR	1211939	IdentifierDeclType	const fixed		1211812	0					
ANR	1211940	Identifier	y12		1211812	1					
ANR	1211941	AssignmentExpression	y12 = pc -> p1 . y - pc -> p2 . y		1211812	2		=			
ANR	1211942	Identifier	y12		1211812	0					
ANR	1211943	AdditiveExpression	pc -> p1 . y - pc -> p2 . y		1211812	1		-			
ANR	1211944	MemberAccess	pc -> p1 . y		1211812	0					
ANR	1211945	PtrMemberAccess	pc -> p1		1211812	0					
ANR	1211946	Identifier	pc		1211812	0					
ANR	1211947	Identifier	p1		1211812	1					
ANR	1211948	Identifier	y		1211812	1					
ANR	1211949	MemberAccess	pc -> p2 . y		1211812	1					
ANR	1211950	PtrMemberAccess	pc -> p2		1211812	0					
ANR	1211951	Identifier	pc		1211812	0					
ANR	1211952	Identifier	p2		1211812	1					
ANR	1211953	Identifier	y		1211812	1					
ANR	1211954	IdentifierDecl	dx0 = x0 - pc -> p1 . x - x12		1211812	2					
ANR	1211955	IdentifierDeclType	const fixed		1211812	0					
ANR	1211956	Identifier	dx0		1211812	1					
ANR	1211957	AssignmentExpression	dx0 = x0 - pc -> p1 . x - x12		1211812	2		=			
ANR	1211958	Identifier	dx0		1211812	0					
ANR	1211959	AdditiveExpression	x0 - pc -> p1 . x - x12		1211812	1		-			
ANR	1211960	Identifier	x0		1211812	0					
ANR	1211961	AdditiveExpression	pc -> p1 . x - x12		1211812	1		-			
ANR	1211962	MemberAccess	pc -> p1 . x		1211812	0					
ANR	1211963	PtrMemberAccess	pc -> p1		1211812	0					
ANR	1211964	Identifier	pc		1211812	0					
ANR	1211965	Identifier	p1		1211812	1					
ANR	1211966	Identifier	x		1211812	1					
ANR	1211967	Identifier	x12		1211812	1					
ANR	1211968	IdentifierDecl	dy0 = y0 - pc -> p1 . y - y12		1211812	3					
ANR	1211969	IdentifierDeclType	const fixed		1211812	0					
ANR	1211970	Identifier	dy0		1211812	1					
ANR	1211971	AssignmentExpression	dy0 = y0 - pc -> p1 . y - y12		1211812	2		=			
ANR	1211972	Identifier	dy0		1211812	0					
ANR	1211973	AdditiveExpression	y0 - pc -> p1 . y - y12		1211812	1		-			
ANR	1211974	Identifier	y0		1211812	0					
ANR	1211975	AdditiveExpression	pc -> p1 . y - y12		1211812	1		-			
ANR	1211976	MemberAccess	pc -> p1 . y		1211812	0					
ANR	1211977	PtrMemberAccess	pc -> p1		1211812	0					
ANR	1211978	Identifier	pc		1211812	0					
ANR	1211979	Identifier	p1		1211812	1					
ANR	1211980	Identifier	y		1211812	1					
ANR	1211981	Identifier	y12		1211812	1					
ANR	1211982	IdentifierDecl	dx1 = x12 - pc -> p2 . x + pc -> pt . x		1211812	4					
ANR	1211983	IdentifierDeclType	const fixed		1211812	0					
ANR	1211984	Identifier	dx1		1211812	1					
ANR	1211985	AssignmentExpression	dx1 = x12 - pc -> p2 . x + pc -> pt . x		1211812	2		=			
ANR	1211986	Identifier	dx1		1211812	0					
ANR	1211987	AdditiveExpression	x12 - pc -> p2 . x + pc -> pt . x		1211812	1		-			
ANR	1211988	Identifier	x12		1211812	0					
ANR	1211989	AdditiveExpression	pc -> p2 . x + pc -> pt . x		1211812	1		+			
ANR	1211990	MemberAccess	pc -> p2 . x		1211812	0					
ANR	1211991	PtrMemberAccess	pc -> p2		1211812	0					
ANR	1211992	Identifier	pc		1211812	0					
ANR	1211993	Identifier	p2		1211812	1					
ANR	1211994	Identifier	x		1211812	1					
ANR	1211995	MemberAccess	pc -> pt . x		1211812	1					
ANR	1211996	PtrMemberAccess	pc -> pt		1211812	0					
ANR	1211997	Identifier	pc		1211812	0					
ANR	1211998	Identifier	pt		1211812	1					
ANR	1211999	Identifier	x		1211812	1					
ANR	1212000	IdentifierDecl	dy1 = y12 - pc -> p2 . y + pc -> pt . y		1211812	5					
ANR	1212001	IdentifierDeclType	const fixed		1211812	0					
ANR	1212002	Identifier	dy1		1211812	1					
ANR	1212003	AssignmentExpression	dy1 = y12 - pc -> p2 . y + pc -> pt . y		1211812	2		=			
ANR	1212004	Identifier	dy1		1211812	0					
ANR	1212005	AdditiveExpression	y12 - pc -> p2 . y + pc -> pt . y		1211812	1		-			
ANR	1212006	Identifier	y12		1211812	0					
ANR	1212007	AdditiveExpression	pc -> p2 . y + pc -> pt . y		1211812	1		+			
ANR	1212008	MemberAccess	pc -> p2 . y		1211812	0					
ANR	1212009	PtrMemberAccess	pc -> p2		1211812	0					
ANR	1212010	Identifier	pc		1211812	0					
ANR	1212011	Identifier	p2		1211812	1					
ANR	1212012	Identifier	y		1211812	1					
ANR	1212013	MemberAccess	pc -> pt . y		1211812	1					
ANR	1212014	PtrMemberAccess	pc -> pt		1211812	0					
ANR	1212015	Identifier	pc		1211812	0					
ANR	1212016	Identifier	pt		1211812	1					
ANR	1212017	Identifier	y		1211812	1					
ANR	1212018	IdentifierDecl	adx0 = any_abs ( dx0 )		1211812	6					
ANR	1212019	IdentifierDeclType	const fixed		1211812	0					
ANR	1212020	Identifier	adx0		1211812	1					
ANR	1212021	AssignmentExpression	adx0 = any_abs ( dx0 )		1211812	2		=			
ANR	1212022	Identifier	adx0		1211812	0					
ANR	1212023	CallExpression	any_abs ( dx0 )		1211812	1					
ANR	1212024	Callee	any_abs		1211812	0					
ANR	1212025	Identifier	any_abs		1211812	0					
ANR	1212026	ArgumentList	dx0		1211812	1					
ANR	1212027	Argument	dx0		1211812	0					
ANR	1212028	Identifier	dx0		1211812	0					
ANR	1212029	IdentifierDecl	ady0 = any_abs ( dy0 )		1211812	7					
ANR	1212030	IdentifierDeclType	const fixed		1211812	0					
ANR	1212031	Identifier	ady0		1211812	1					
ANR	1212032	AssignmentExpression	ady0 = any_abs ( dy0 )		1211812	2		=			
ANR	1212033	Identifier	ady0		1211812	0					
ANR	1212034	CallExpression	any_abs ( dy0 )		1211812	1					
ANR	1212035	Callee	any_abs		1211812	0					
ANR	1212036	Identifier	any_abs		1211812	0					
ANR	1212037	ArgumentList	dy0		1211812	1					
ANR	1212038	Argument	dy0		1211812	0					
ANR	1212039	Identifier	dy0		1211812	0					
ANR	1212040	IdentifierDecl	adx1 = any_abs ( dx1 )		1211812	8					
ANR	1212041	IdentifierDeclType	const fixed		1211812	0					
ANR	1212042	Identifier	adx1		1211812	1					
ANR	1212043	AssignmentExpression	adx1 = any_abs ( dx1 )		1211812	2		=			
ANR	1212044	Identifier	adx1		1211812	0					
ANR	1212045	CallExpression	any_abs ( dx1 )		1211812	1					
ANR	1212046	Callee	any_abs		1211812	0					
ANR	1212047	Identifier	any_abs		1211812	0					
ANR	1212048	ArgumentList	dx1		1211812	1					
ANR	1212049	Argument	dx1		1211812	0					
ANR	1212050	Identifier	dx1		1211812	0					
ANR	1212051	IdentifierDecl	ady1 = any_abs ( dy1 )		1211812	9					
ANR	1212052	IdentifierDeclType	const fixed		1211812	0					
ANR	1212053	Identifier	ady1		1211812	1					
ANR	1212054	AssignmentExpression	ady1 = any_abs ( dy1 )		1211812	2		=			
ANR	1212055	Identifier	ady1		1211812	0					
ANR	1212056	CallExpression	any_abs ( dy1 )		1211812	1					
ANR	1212057	Callee	any_abs		1211812	0					
ANR	1212058	Identifier	any_abs		1211812	0					
ANR	1212059	ArgumentList	dy1		1211812	1					
ANR	1212060	Argument	dy1		1211812	0					
ANR	1212061	Identifier	dy1		1211812	0					
ANR	1212062	IdentifierDeclStatement	"fixed d = max ( adx0 , adx1 ) + max ( ady0 , ady1 ) ;"	75:8:2607:2662	1211812	1	True				
ANR	1212063	IdentifierDecl	"d = max ( adx0 , adx1 ) + max ( ady0 , ady1 )"		1211812	0					
ANR	1212064	IdentifierDeclType	fixed		1211812	0					
ANR	1212065	Identifier	d		1211812	1					
ANR	1212066	AssignmentExpression	"d = max ( adx0 , adx1 ) + max ( ady0 , ady1 )"		1211812	2		=			
ANR	1212067	Identifier	d		1211812	0					
ANR	1212068	AdditiveExpression	"max ( adx0 , adx1 ) + max ( ady0 , ady1 )"		1211812	1		+			
ANR	1212069	CallExpression	"max ( adx0 , adx1 )"		1211812	0					
ANR	1212070	Callee	max		1211812	0					
ANR	1212071	Identifier	max		1211812	0					
ANR	1212072	ArgumentList	adx0		1211812	1					
ANR	1212073	Argument	adx0		1211812	0					
ANR	1212074	Identifier	adx0		1211812	0					
ANR	1212075	Argument	adx1		1211812	1					
ANR	1212076	Identifier	adx1		1211812	0					
ANR	1212077	CallExpression	"max ( ady0 , ady1 )"		1211812	1					
ANR	1212078	Callee	max		1211812	0					
ANR	1212079	Identifier	max		1211812	0					
ANR	1212080	ArgumentList	ady0		1211812	1					
ANR	1212081	Argument	ady0		1211812	0					
ANR	1212082	Identifier	ady0		1211812	0					
ANR	1212083	Argument	ady1		1211812	1					
ANR	1212084	Identifier	ady1		1211812	0					
ANR	1212085	IdentifierDeclStatement	uint qtmp = d - ( d >> 2 ) + fixed_flat - 1 ;	81:8:2822:2876	1211812	2	True				
ANR	1212086	IdentifierDecl	qtmp = d - ( d >> 2 ) + fixed_flat - 1		1211812	0					
ANR	1212087	IdentifierDeclType	uint		1211812	0					
ANR	1212088	Identifier	qtmp		1211812	1					
ANR	1212089	AssignmentExpression	qtmp = d - ( d >> 2 ) + fixed_flat - 1		1211812	2		=			
ANR	1212090	Identifier	qtmp		1211812	0					
ANR	1212091	AdditiveExpression	d - ( d >> 2 ) + fixed_flat - 1		1211812	1		-			
ANR	1212092	Identifier	d		1211812	0					
ANR	1212093	AdditiveExpression	( d >> 2 ) + fixed_flat - 1		1211812	1		+			
ANR	1212094	ShiftExpression	d >> 2		1211812	0		>>			
ANR	1212095	Identifier	d		1211812	0					
ANR	1212096	PrimaryExpression	2		1211812	1					
ANR	1212097	AdditiveExpression	fixed_flat - 1		1211812	1		-			
ANR	1212098	Identifier	fixed_flat		1211812	0					
ANR	1212099	PrimaryExpression	1		1211812	1					
ANR	1212100	IdentifierDeclStatement	uint q = qtmp / fixed_flat ;	82:8:2886:2912	1211812	3	True				
ANR	1212101	IdentifierDecl	q = qtmp / fixed_flat		1211812	0					
ANR	1212102	IdentifierDeclType	uint		1211812	0					
ANR	1212103	Identifier	q		1211812	1					
ANR	1212104	AssignmentExpression	q = qtmp / fixed_flat		1211812	2		=			
ANR	1212105	Identifier	q		1211812	0					
ANR	1212106	MultiplicativeExpression	qtmp / fixed_flat		1211812	1		/			
ANR	1212107	Identifier	qtmp		1211812	0					
ANR	1212108	Identifier	fixed_flat		1211812	1					
ANR	1212109	ExpressionStatement	"if_debug6 ( '2' , ""[2]d01=%g,%g d12=%g,%g d23=%g,%g\\n"" , fixed2float ( pc -> p1 . x - x0 ) , fixed2float ( pc -> p1 . y - y0 ) , fixed2float ( - x12 ) , fixed2float ( - y12 ) , fixed2float ( pc -> pt . x - pc -> p2 . x ) , fixed2float ( pc -> pt . y - pc -> p2 . y ) )"	84:8:2923:3191	1211812	4	True				
ANR	1212110	CallExpression	"if_debug6 ( '2' , ""[2]d01=%g,%g d12=%g,%g d23=%g,%g\\n"" , fixed2float ( pc -> p1 . x - x0 ) , fixed2float ( pc -> p1 . y - y0 ) , fixed2float ( - x12 ) , fixed2float ( - y12 ) , fixed2float ( pc -> pt . x - pc -> p2 . x ) , fixed2float ( pc -> pt . y - pc -> p2 . y ) )"		1211812	0					
ANR	1212111	Callee	if_debug6		1211812	0					
ANR	1212112	Identifier	if_debug6		1211812	0					
ANR	1212113	ArgumentList	'2'		1211812	1					
ANR	1212114	Argument	'2'		1211812	0					
ANR	1212115	PrimaryExpression	'2'		1211812	0					
ANR	1212116	Argument	"""[2]d01=%g,%g d12=%g,%g d23=%g,%g\\n"""		1211812	1					
ANR	1212117	PrimaryExpression	"""[2]d01=%g,%g d12=%g,%g d23=%g,%g\\n"""		1211812	0					
ANR	1212118	Argument	fixed2float ( pc -> p1 . x - x0 )		1211812	2					
ANR	1212119	CallExpression	fixed2float ( pc -> p1 . x - x0 )		1211812	0					
ANR	1212120	Callee	fixed2float		1211812	0					
ANR	1212121	Identifier	fixed2float		1211812	0					
ANR	1212122	ArgumentList	pc -> p1 . x - x0		1211812	1					
ANR	1212123	Argument	pc -> p1 . x - x0		1211812	0					
ANR	1212124	AdditiveExpression	pc -> p1 . x - x0		1211812	0		-			
ANR	1212125	MemberAccess	pc -> p1 . x		1211812	0					
ANR	1212126	PtrMemberAccess	pc -> p1		1211812	0					
ANR	1212127	Identifier	pc		1211812	0					
ANR	1212128	Identifier	p1		1211812	1					
ANR	1212129	Identifier	x		1211812	1					
ANR	1212130	Identifier	x0		1211812	1					
ANR	1212131	Argument	fixed2float ( pc -> p1 . y - y0 )		1211812	3					
ANR	1212132	CallExpression	fixed2float ( pc -> p1 . y - y0 )		1211812	0					
ANR	1212133	Callee	fixed2float		1211812	0					
ANR	1212134	Identifier	fixed2float		1211812	0					
ANR	1212135	ArgumentList	pc -> p1 . y - y0		1211812	1					
ANR	1212136	Argument	pc -> p1 . y - y0		1211812	0					
ANR	1212137	AdditiveExpression	pc -> p1 . y - y0		1211812	0		-			
ANR	1212138	MemberAccess	pc -> p1 . y		1211812	0					
ANR	1212139	PtrMemberAccess	pc -> p1		1211812	0					
ANR	1212140	Identifier	pc		1211812	0					
ANR	1212141	Identifier	p1		1211812	1					
ANR	1212142	Identifier	y		1211812	1					
ANR	1212143	Identifier	y0		1211812	1					
ANR	1212144	Argument	fixed2float ( - x12 )		1211812	4					
ANR	1212145	CallExpression	fixed2float ( - x12 )		1211812	0					
ANR	1212146	Callee	fixed2float		1211812	0					
ANR	1212147	Identifier	fixed2float		1211812	0					
ANR	1212148	ArgumentList	- x12		1211812	1					
ANR	1212149	Argument	- x12		1211812	0					
ANR	1212150	UnaryOperationExpression	- x12		1211812	0					
ANR	1212151	UnaryOperator	-		1211812	0					
ANR	1212152	Identifier	x12		1211812	1					
ANR	1212153	Argument	fixed2float ( - y12 )		1211812	5					
ANR	1212154	CallExpression	fixed2float ( - y12 )		1211812	0					
ANR	1212155	Callee	fixed2float		1211812	0					
ANR	1212156	Identifier	fixed2float		1211812	0					
ANR	1212157	ArgumentList	- y12		1211812	1					
ANR	1212158	Argument	- y12		1211812	0					
ANR	1212159	UnaryOperationExpression	- y12		1211812	0					
ANR	1212160	UnaryOperator	-		1211812	0					
ANR	1212161	Identifier	y12		1211812	1					
ANR	1212162	Argument	fixed2float ( pc -> pt . x - pc -> p2 . x )		1211812	6					
ANR	1212163	CallExpression	fixed2float ( pc -> pt . x - pc -> p2 . x )		1211812	0					
ANR	1212164	Callee	fixed2float		1211812	0					
ANR	1212165	Identifier	fixed2float		1211812	0					
ANR	1212166	ArgumentList	pc -> pt . x - pc -> p2 . x		1211812	1					
ANR	1212167	Argument	pc -> pt . x - pc -> p2 . x		1211812	0					
ANR	1212168	AdditiveExpression	pc -> pt . x - pc -> p2 . x		1211812	0		-			
ANR	1212169	MemberAccess	pc -> pt . x		1211812	0					
ANR	1212170	PtrMemberAccess	pc -> pt		1211812	0					
ANR	1212171	Identifier	pc		1211812	0					
ANR	1212172	Identifier	pt		1211812	1					
ANR	1212173	Identifier	x		1211812	1					
ANR	1212174	MemberAccess	pc -> p2 . x		1211812	1					
ANR	1212175	PtrMemberAccess	pc -> p2		1211812	0					
ANR	1212176	Identifier	pc		1211812	0					
ANR	1212177	Identifier	p2		1211812	1					
ANR	1212178	Identifier	x		1211812	1					
ANR	1212179	Argument	fixed2float ( pc -> pt . y - pc -> p2 . y )		1211812	7					
ANR	1212180	CallExpression	fixed2float ( pc -> pt . y - pc -> p2 . y )		1211812	0					
ANR	1212181	Callee	fixed2float		1211812	0					
ANR	1212182	Identifier	fixed2float		1211812	0					
ANR	1212183	ArgumentList	pc -> pt . y - pc -> p2 . y		1211812	1					
ANR	1212184	Argument	pc -> pt . y - pc -> p2 . y		1211812	0					
ANR	1212185	AdditiveExpression	pc -> pt . y - pc -> p2 . y		1211812	0		-			
ANR	1212186	MemberAccess	pc -> pt . y		1211812	0					
ANR	1212187	PtrMemberAccess	pc -> pt		1211812	0					
ANR	1212188	Identifier	pc		1211812	0					
ANR	1212189	Identifier	pt		1211812	1					
ANR	1212190	Identifier	y		1211812	1					
ANR	1212191	MemberAccess	pc -> p2 . y		1211812	1					
ANR	1212192	PtrMemberAccess	pc -> p2		1211812	0					
ANR	1212193	Identifier	pc		1211812	0					
ANR	1212194	Identifier	p2		1211812	1					
ANR	1212195	Identifier	y		1211812	1					
ANR	1212196	ExpressionStatement	"if_debug2 ( '2' , ""     D=%f, flat=%f,"" , fixed2float ( d ) , fixed2float ( fixed_flat ) )"	88:8:3201:3297	1211812	5	True				
ANR	1212197	CallExpression	"if_debug2 ( '2' , ""     D=%f, flat=%f,"" , fixed2float ( d ) , fixed2float ( fixed_flat ) )"		1211812	0					
ANR	1212198	Callee	if_debug2		1211812	0					
ANR	1212199	Identifier	if_debug2		1211812	0					
ANR	1212200	ArgumentList	'2'		1211812	1					
ANR	1212201	Argument	'2'		1211812	0					
ANR	1212202	PrimaryExpression	'2'		1211812	0					
ANR	1212203	Argument	"""     D=%f, flat=%f,"""		1211812	1					
ANR	1212204	PrimaryExpression	"""     D=%f, flat=%f,"""		1211812	0					
ANR	1212205	Argument	fixed2float ( d )		1211812	2					
ANR	1212206	CallExpression	fixed2float ( d )		1211812	0					
ANR	1212207	Callee	fixed2float		1211812	0					
ANR	1212208	Identifier	fixed2float		1211812	0					
ANR	1212209	ArgumentList	d		1211812	1					
ANR	1212210	Argument	d		1211812	0					
ANR	1212211	Identifier	d		1211812	0					
ANR	1212212	Argument	fixed2float ( fixed_flat )		1211812	3					
ANR	1212213	CallExpression	fixed2float ( fixed_flat )		1211812	0					
ANR	1212214	Callee	fixed2float		1211812	0					
ANR	1212215	Identifier	fixed2float		1211812	0					
ANR	1212216	ArgumentList	fixed_flat		1211812	1					
ANR	1212217	Argument	fixed_flat		1211812	0					
ANR	1212218	Identifier	fixed_flat		1211812	0					
ANR	1212219	ForStatement	for ( k = 0 ; q > 1 ; )		1211812	6					
ANR	1212220	ForInit	k = 0 ;	91:13:3371:3376	1211812	0	True				
ANR	1212221	AssignmentExpression	k = 0		1211812	0		=			
ANR	1212222	Identifier	k		1211812	0					
ANR	1212223	PrimaryExpression	0		1211812	1					
ANR	1212224	Condition	q > 1	91:20:3378:3382	1211812	1	True				
ANR	1212225	RelationalExpression	q > 1		1211812	0		>			
ANR	1212226	Identifier	q		1211812	0					
ANR	1212227	PrimaryExpression	1		1211812	1					
ANR	1212228	ExpressionStatement	"k ++ , q = ( q + 3 ) >> 2"	92:12:3398:3419	1211812	2	True				
ANR	1212229	Expression	"k ++ , q = ( q + 3 ) >> 2"		1211812	0					
ANR	1212230	PostIncDecOperationExpression	k ++		1211812	0					
ANR	1212231	Identifier	k		1211812	0					
ANR	1212232	IncDec	++		1211812	1					
ANR	1212233	AssignmentExpression	q = ( q + 3 ) >> 2		1211812	1		=			
ANR	1212234	Identifier	q		1211812	0					
ANR	1212235	ShiftExpression	( q + 3 ) >> 2		1211812	1		>>			
ANR	1212236	AdditiveExpression	q + 3		1211812	0		+			
ANR	1212237	Identifier	q		1211812	0					
ANR	1212238	PrimaryExpression	3		1211812	1					
ANR	1212239	PrimaryExpression	2		1211812	1					
ANR	1212240	ExpressionStatement	"if_debug1 ( '2' , "" k=%d\\n"" , k )"	93:8:3429:3457	1211812	7	True				
ANR	1212241	CallExpression	"if_debug1 ( '2' , "" k=%d\\n"" , k )"		1211812	0					
ANR	1212242	Callee	if_debug1		1211812	0					
ANR	1212243	Identifier	if_debug1		1211812	0					
ANR	1212244	ArgumentList	'2'		1211812	1					
ANR	1212245	Argument	'2'		1211812	0					
ANR	1212246	PrimaryExpression	'2'		1211812	0					
ANR	1212247	Argument	""" k=%d\\n"""		1211812	1					
ANR	1212248	PrimaryExpression	""" k=%d\\n"""		1211812	0					
ANR	1212249	Argument	k		1211812	2					
ANR	1212250	Identifier	k		1211812	0					
ANR	1212251	ReturnStatement	return k ;	95:4:3469:3477	1211812	6	True				
ANR	1212252	Identifier	k		1211812	0					
ANR	1212253	ReturnType	int		1211812	1					
ANR	1212254	Identifier	gx_curve_log2_samples		1211812	2					
ANR	1212255	ParameterList	"fixed x0 , fixed y0 , const curve_segment * pc , fixed fixed_flat"		1211812	3					
ANR	1212256	Parameter	fixed x0	49:22:1777:1784	1211812	0	True				
ANR	1212257	ParameterType	fixed		1211812	0					
ANR	1212258	Identifier	x0		1211812	1					
ANR	1212259	Parameter	fixed y0	49:32:1787:1794	1211812	1	True				
ANR	1212260	ParameterType	fixed		1211812	0					
ANR	1212261	Identifier	y0		1211812	1					
ANR	1212262	Parameter	const curve_segment * pc	49:42:1797:1820	1211812	2	True				
ANR	1212263	ParameterType	const curve_segment *		1211812	0					
ANR	1212264	Identifier	pc		1211812	1					
ANR	1212265	Parameter	fixed fixed_flat	50:22:1845:1860	1211812	3	True				
ANR	1212266	ParameterType	fixed		1211812	0					
ANR	1212267	Identifier	fixed_flat		1211812	1					
ANR	1212268	CFGEntryNode	ENTRY		1211812		True				
ANR	1212269	CFGExitNode	EXIT		1211812		True				
ANR	1212270	Symbol	pc -> p1 . y		1211812						
ANR	1212271	Symbol	pc -> p1 . x		1211812						
ANR	1212272	Symbol	pc -> pt . x		1211812						
ANR	1212273	Symbol	pc -> pt . y		1211812						
ANR	1212274	Symbol	fixed_1		1211812						
ANR	1212275	Symbol	pc -> p2 . x		1211812						
ANR	1212276	Symbol	pc -> p2 . y		1211812						
ANR	1212277	Symbol	ady1		1211812						
ANR	1212278	Symbol	y0		1211812						
ANR	1212279	Symbol	ady0		1211812						
ANR	1212280	Symbol	pc -> pt		1211812						
ANR	1212281	Symbol	x12		1211812						
ANR	1212282	Symbol	any_abs		1211812						
ANR	1212283	Symbol	pc -> p2		1211812						
ANR	1212284	Symbol	y12		1211812						
ANR	1212285	Symbol	dx1		1211812						
ANR	1212286	Symbol	pc -> p1		1211812						
ANR	1212287	Symbol	dx0		1211812						
ANR	1212288	Symbol	fixed_flat		1211812						
ANR	1212289	Symbol	d		1211812						
ANR	1212290	Symbol	fixed2float		1211812						
ANR	1212291	Symbol	max		1211812						
ANR	1212292	Symbol	k		1211812						
ANR	1212293	Symbol	m		1211812						
ANR	1212294	Symbol	adx1		1211812						
ANR	1212295	Symbol	q		1211812						
ANR	1212296	Symbol	pc		1211812						
ANR	1212297	Symbol	qtmp		1211812						
ANR	1212298	Symbol	adx0		1211812						
ANR	1212299	Symbol	int2fixed		1211812						
ANR	1212300	Symbol	x0		1211812						
ANR	1212301	Symbol	* pc		1211812						
ANR	1212302	Symbol	x03		1211812						
ANR	1212303	Symbol	dy0		1211812						
ANR	1212304	Symbol	y03		1211812						
ANR	1212305	Symbol	dy1		1211812						
ANR	1212306	Function	split_curve_midpoint	104:0:3746:5058							
ANR	1212307	FunctionDef	"split_curve_midpoint (fixed x0 , fixed y0 , const curve_segment * pc , curve_segment * pc1 , curve_segment * pc2)"		1212306	0					
ANR	1212308	CompoundStatement		107:0:3888:5058	1212306	0					
ANR	1212309	Statement	define	112:1:4205:4210	1212306	0	True				
ANR	1212310	Statement	midpoint	112:8:4212:4219	1212306	1	True				
ANR	1212311	Statement	(	112:16:4220:4220	1212306	2	True				
ANR	1212312	Statement	a	112:17:4221:4221	1212306	3	True				
ANR	1212313	Statement	","	112:18:4222:4222	1212306	4	True				
ANR	1212314	Statement	b	112:19:4223:4223	1212306	5	True				
ANR	1212315	Statement	)	112:20:4224:4224	1212306	6	True				
ANR	1212316	Statement	(	113:2:4229:4229	1212306	7	True				
ANR	1212317	Statement	arith_rshift_1	113:3:4230:4243	1212306	8	True				
ANR	1212318	Statement	(	113:17:4244:4244	1212306	9	True				
ANR	1212319	Statement	a	113:18:4245:4245	1212306	10	True				
ANR	1212320	Statement	)	113:19:4246:4246	1212306	11	True				
ANR	1212321	Statement	+	113:21:4248:4248	1212306	12	True				
ANR	1212322	Statement	arith_rshift_1	113:23:4250:4263	1212306	13	True				
ANR	1212323	Statement	(	113:37:4264:4264	1212306	14	True				
ANR	1212324	Statement	b	113:38:4265:4265	1212306	15	True				
ANR	1212325	Statement	)	113:39:4266:4266	1212306	16	True				
ANR	1212326	Statement	+	113:41:4268:4268	1212306	17	True				
ANR	1212327	Statement	(	113:43:4270:4270	1212306	18	True				
ANR	1212328	Statement	(	113:44:4271:4271	1212306	19	True				
ANR	1212329	Statement	(	113:45:4272:4272	1212306	20	True				
ANR	1212330	Statement	a	113:46:4273:4273	1212306	21	True				
ANR	1212331	Statement	)	113:47:4274:4274	1212306	22	True				
ANR	1212332	Statement	|	113:49:4276:4276	1212306	23	True				
ANR	1212333	Statement	(	113:51:4278:4278	1212306	24	True				
ANR	1212334	Statement	b	113:52:4279:4279	1212306	25	True				
ANR	1212335	Statement	)	113:53:4280:4280	1212306	26	True				
ANR	1212336	Statement	)	113:54:4281:4281	1212306	27	True				
ANR	1212337	Statement	&	113:56:4283:4283	1212306	28	True				
ANR	1212338	Statement	1	113:58:4285:4285	1212306	29	True				
ANR	1212339	Statement	)	113:59:4286:4286	1212306	30	True				
ANR	1212340	Statement	)	113:60:4287:4287	1212306	31	True				
ANR	1212341	IdentifierDeclStatement	"fixed x12 = midpoint ( pc -> p1 . x , pc -> p2 . x ) ;"	114:4:4293:4333	1212306	32	True				
ANR	1212342	IdentifierDecl	"x12 = midpoint ( pc -> p1 . x , pc -> p2 . x )"		1212306	0					
ANR	1212343	IdentifierDeclType	fixed		1212306	0					
ANR	1212344	Identifier	x12		1212306	1					
ANR	1212345	AssignmentExpression	"x12 = midpoint ( pc -> p1 . x , pc -> p2 . x )"		1212306	2		=			
ANR	1212346	Identifier	x12		1212306	0					
ANR	1212347	CallExpression	"midpoint ( pc -> p1 . x , pc -> p2 . x )"		1212306	1					
ANR	1212348	Callee	midpoint		1212306	0					
ANR	1212349	Identifier	midpoint		1212306	0					
ANR	1212350	ArgumentList	pc -> p1 . x		1212306	1					
ANR	1212351	Argument	pc -> p1 . x		1212306	0					
ANR	1212352	MemberAccess	pc -> p1 . x		1212306	0					
ANR	1212353	PtrMemberAccess	pc -> p1		1212306	0					
ANR	1212354	Identifier	pc		1212306	0					
ANR	1212355	Identifier	p1		1212306	1					
ANR	1212356	Identifier	x		1212306	1					
ANR	1212357	Argument	pc -> p2 . x		1212306	1					
ANR	1212358	MemberAccess	pc -> p2 . x		1212306	0					
ANR	1212359	PtrMemberAccess	pc -> p2		1212306	0					
ANR	1212360	Identifier	pc		1212306	0					
ANR	1212361	Identifier	p2		1212306	1					
ANR	1212362	Identifier	x		1212306	1					
ANR	1212363	IdentifierDeclStatement	"fixed y12 = midpoint ( pc -> p1 . y , pc -> p2 . y ) ;"	115:4:4339:4379	1212306	33	True				
ANR	1212364	IdentifierDecl	"y12 = midpoint ( pc -> p1 . y , pc -> p2 . y )"		1212306	0					
ANR	1212365	IdentifierDeclType	fixed		1212306	0					
ANR	1212366	Identifier	y12		1212306	1					
ANR	1212367	AssignmentExpression	"y12 = midpoint ( pc -> p1 . y , pc -> p2 . y )"		1212306	2		=			
ANR	1212368	Identifier	y12		1212306	0					
ANR	1212369	CallExpression	"midpoint ( pc -> p1 . y , pc -> p2 . y )"		1212306	1					
ANR	1212370	Callee	midpoint		1212306	0					
ANR	1212371	Identifier	midpoint		1212306	0					
ANR	1212372	ArgumentList	pc -> p1 . y		1212306	1					
ANR	1212373	Argument	pc -> p1 . y		1212306	0					
ANR	1212374	MemberAccess	pc -> p1 . y		1212306	0					
ANR	1212375	PtrMemberAccess	pc -> p1		1212306	0					
ANR	1212376	Identifier	pc		1212306	0					
ANR	1212377	Identifier	p1		1212306	1					
ANR	1212378	Identifier	y		1212306	1					
ANR	1212379	Argument	pc -> p2 . y		1212306	1					
ANR	1212380	MemberAccess	pc -> p2 . y		1212306	0					
ANR	1212381	PtrMemberAccess	pc -> p2		1212306	0					
ANR	1212382	Identifier	pc		1212306	0					
ANR	1212383	Identifier	p2		1212306	1					
ANR	1212384	Identifier	y		1212306	1					
ANR	1212385	ExpressionStatement	"pc1 -> p1 . x = midpoint ( x0 , pc -> p1 . x )"	121:4:4527:4561	1212306	34	True				
ANR	1212386	AssignmentExpression	"pc1 -> p1 . x = midpoint ( x0 , pc -> p1 . x )"		1212306	0		=			
ANR	1212387	MemberAccess	pc1 -> p1 . x		1212306	0					
ANR	1212388	PtrMemberAccess	pc1 -> p1		1212306	0					
ANR	1212389	Identifier	pc1		1212306	0					
ANR	1212390	Identifier	p1		1212306	1					
ANR	1212391	Identifier	x		1212306	1					
ANR	1212392	CallExpression	"midpoint ( x0 , pc -> p1 . x )"		1212306	1					
ANR	1212393	Callee	midpoint		1212306	0					
ANR	1212394	Identifier	midpoint		1212306	0					
ANR	1212395	ArgumentList	x0		1212306	1					
ANR	1212396	Argument	x0		1212306	0					
ANR	1212397	Identifier	x0		1212306	0					
ANR	1212398	Argument	pc -> p1 . x		1212306	1					
ANR	1212399	MemberAccess	pc -> p1 . x		1212306	0					
ANR	1212400	PtrMemberAccess	pc -> p1		1212306	0					
ANR	1212401	Identifier	pc		1212306	0					
ANR	1212402	Identifier	p1		1212306	1					
ANR	1212403	Identifier	x		1212306	1					
ANR	1212404	ExpressionStatement	"pc1 -> p1 . y = midpoint ( y0 , pc -> p1 . y )"	122:4:4567:4601	1212306	35	True				
ANR	1212405	AssignmentExpression	"pc1 -> p1 . y = midpoint ( y0 , pc -> p1 . y )"		1212306	0		=			
ANR	1212406	MemberAccess	pc1 -> p1 . y		1212306	0					
ANR	1212407	PtrMemberAccess	pc1 -> p1		1212306	0					
ANR	1212408	Identifier	pc1		1212306	0					
ANR	1212409	Identifier	p1		1212306	1					
ANR	1212410	Identifier	y		1212306	1					
ANR	1212411	CallExpression	"midpoint ( y0 , pc -> p1 . y )"		1212306	1					
ANR	1212412	Callee	midpoint		1212306	0					
ANR	1212413	Identifier	midpoint		1212306	0					
ANR	1212414	ArgumentList	y0		1212306	1					
ANR	1212415	Argument	y0		1212306	0					
ANR	1212416	Identifier	y0		1212306	0					
ANR	1212417	Argument	pc -> p1 . y		1212306	1					
ANR	1212418	MemberAccess	pc -> p1 . y		1212306	0					
ANR	1212419	PtrMemberAccess	pc -> p1		1212306	0					
ANR	1212420	Identifier	pc		1212306	0					
ANR	1212421	Identifier	p1		1212306	1					
ANR	1212422	Identifier	y		1212306	1					
ANR	1212423	ExpressionStatement	"pc2 -> p2 . x = midpoint ( pc -> p2 . x , pc -> pt . x )"	123:4:4607:4647	1212306	36	True				
ANR	1212424	AssignmentExpression	"pc2 -> p2 . x = midpoint ( pc -> p2 . x , pc -> pt . x )"		1212306	0		=			
ANR	1212425	MemberAccess	pc2 -> p2 . x		1212306	0					
ANR	1212426	PtrMemberAccess	pc2 -> p2		1212306	0					
ANR	1212427	Identifier	pc2		1212306	0					
ANR	1212428	Identifier	p2		1212306	1					
ANR	1212429	Identifier	x		1212306	1					
ANR	1212430	CallExpression	"midpoint ( pc -> p2 . x , pc -> pt . x )"		1212306	1					
ANR	1212431	Callee	midpoint		1212306	0					
ANR	1212432	Identifier	midpoint		1212306	0					
ANR	1212433	ArgumentList	pc -> p2 . x		1212306	1					
ANR	1212434	Argument	pc -> p2 . x		1212306	0					
ANR	1212435	MemberAccess	pc -> p2 . x		1212306	0					
ANR	1212436	PtrMemberAccess	pc -> p2		1212306	0					
ANR	1212437	Identifier	pc		1212306	0					
ANR	1212438	Identifier	p2		1212306	1					
ANR	1212439	Identifier	x		1212306	1					
ANR	1212440	Argument	pc -> pt . x		1212306	1					
ANR	1212441	MemberAccess	pc -> pt . x		1212306	0					
ANR	1212442	PtrMemberAccess	pc -> pt		1212306	0					
ANR	1212443	Identifier	pc		1212306	0					
ANR	1212444	Identifier	pt		1212306	1					
ANR	1212445	Identifier	x		1212306	1					
ANR	1212446	ExpressionStatement	"pc2 -> p2 . y = midpoint ( pc -> p2 . y , pc -> pt . y )"	124:4:4653:4693	1212306	37	True				
ANR	1212447	AssignmentExpression	"pc2 -> p2 . y = midpoint ( pc -> p2 . y , pc -> pt . y )"		1212306	0		=			
ANR	1212448	MemberAccess	pc2 -> p2 . y		1212306	0					
ANR	1212449	PtrMemberAccess	pc2 -> p2		1212306	0					
ANR	1212450	Identifier	pc2		1212306	0					
ANR	1212451	Identifier	p2		1212306	1					
ANR	1212452	Identifier	y		1212306	1					
ANR	1212453	CallExpression	"midpoint ( pc -> p2 . y , pc -> pt . y )"		1212306	1					
ANR	1212454	Callee	midpoint		1212306	0					
ANR	1212455	Identifier	midpoint		1212306	0					
ANR	1212456	ArgumentList	pc -> p2 . y		1212306	1					
ANR	1212457	Argument	pc -> p2 . y		1212306	0					
ANR	1212458	MemberAccess	pc -> p2 . y		1212306	0					
ANR	1212459	PtrMemberAccess	pc -> p2		1212306	0					
ANR	1212460	Identifier	pc		1212306	0					
ANR	1212461	Identifier	p2		1212306	1					
ANR	1212462	Identifier	y		1212306	1					
ANR	1212463	Argument	pc -> pt . y		1212306	1					
ANR	1212464	MemberAccess	pc -> pt . y		1212306	0					
ANR	1212465	PtrMemberAccess	pc -> pt		1212306	0					
ANR	1212466	Identifier	pc		1212306	0					
ANR	1212467	Identifier	pt		1212306	1					
ANR	1212468	Identifier	y		1212306	1					
ANR	1212469	ExpressionStatement	"pc1 -> p2 . x = midpoint ( pc1 -> p1 . x , x12 )"	125:4:4699:4735	1212306	38	True				
ANR	1212470	AssignmentExpression	"pc1 -> p2 . x = midpoint ( pc1 -> p1 . x , x12 )"		1212306	0		=			
ANR	1212471	MemberAccess	pc1 -> p2 . x		1212306	0					
ANR	1212472	PtrMemberAccess	pc1 -> p2		1212306	0					
ANR	1212473	Identifier	pc1		1212306	0					
ANR	1212474	Identifier	p2		1212306	1					
ANR	1212475	Identifier	x		1212306	1					
ANR	1212476	CallExpression	"midpoint ( pc1 -> p1 . x , x12 )"		1212306	1					
ANR	1212477	Callee	midpoint		1212306	0					
ANR	1212478	Identifier	midpoint		1212306	0					
ANR	1212479	ArgumentList	pc1 -> p1 . x		1212306	1					
ANR	1212480	Argument	pc1 -> p1 . x		1212306	0					
ANR	1212481	MemberAccess	pc1 -> p1 . x		1212306	0					
ANR	1212482	PtrMemberAccess	pc1 -> p1		1212306	0					
ANR	1212483	Identifier	pc1		1212306	0					
ANR	1212484	Identifier	p1		1212306	1					
ANR	1212485	Identifier	x		1212306	1					
ANR	1212486	Argument	x12		1212306	1					
ANR	1212487	Identifier	x12		1212306	0					
ANR	1212488	ExpressionStatement	"pc1 -> p2 . y = midpoint ( pc1 -> p1 . y , y12 )"	126:4:4741:4777	1212306	39	True				
ANR	1212489	AssignmentExpression	"pc1 -> p2 . y = midpoint ( pc1 -> p1 . y , y12 )"		1212306	0		=			
ANR	1212490	MemberAccess	pc1 -> p2 . y		1212306	0					
ANR	1212491	PtrMemberAccess	pc1 -> p2		1212306	0					
ANR	1212492	Identifier	pc1		1212306	0					
ANR	1212493	Identifier	p2		1212306	1					
ANR	1212494	Identifier	y		1212306	1					
ANR	1212495	CallExpression	"midpoint ( pc1 -> p1 . y , y12 )"		1212306	1					
ANR	1212496	Callee	midpoint		1212306	0					
ANR	1212497	Identifier	midpoint		1212306	0					
ANR	1212498	ArgumentList	pc1 -> p1 . y		1212306	1					
ANR	1212499	Argument	pc1 -> p1 . y		1212306	0					
ANR	1212500	MemberAccess	pc1 -> p1 . y		1212306	0					
ANR	1212501	PtrMemberAccess	pc1 -> p1		1212306	0					
ANR	1212502	Identifier	pc1		1212306	0					
ANR	1212503	Identifier	p1		1212306	1					
ANR	1212504	Identifier	y		1212306	1					
ANR	1212505	Argument	y12		1212306	1					
ANR	1212506	Identifier	y12		1212306	0					
ANR	1212507	ExpressionStatement	"pc2 -> p1 . x = midpoint ( x12 , pc2 -> p2 . x )"	127:4:4783:4819	1212306	40	True				
ANR	1212508	AssignmentExpression	"pc2 -> p1 . x = midpoint ( x12 , pc2 -> p2 . x )"		1212306	0		=			
ANR	1212509	MemberAccess	pc2 -> p1 . x		1212306	0					
ANR	1212510	PtrMemberAccess	pc2 -> p1		1212306	0					
ANR	1212511	Identifier	pc2		1212306	0					
ANR	1212512	Identifier	p1		1212306	1					
ANR	1212513	Identifier	x		1212306	1					
ANR	1212514	CallExpression	"midpoint ( x12 , pc2 -> p2 . x )"		1212306	1					
ANR	1212515	Callee	midpoint		1212306	0					
ANR	1212516	Identifier	midpoint		1212306	0					
ANR	1212517	ArgumentList	x12		1212306	1					
ANR	1212518	Argument	x12		1212306	0					
ANR	1212519	Identifier	x12		1212306	0					
ANR	1212520	Argument	pc2 -> p2 . x		1212306	1					
ANR	1212521	MemberAccess	pc2 -> p2 . x		1212306	0					
ANR	1212522	PtrMemberAccess	pc2 -> p2		1212306	0					
ANR	1212523	Identifier	pc2		1212306	0					
ANR	1212524	Identifier	p2		1212306	1					
ANR	1212525	Identifier	x		1212306	1					
ANR	1212526	ExpressionStatement	"pc2 -> p1 . y = midpoint ( y12 , pc2 -> p2 . y )"	128:4:4825:4861	1212306	41	True				
ANR	1212527	AssignmentExpression	"pc2 -> p1 . y = midpoint ( y12 , pc2 -> p2 . y )"		1212306	0		=			
ANR	1212528	MemberAccess	pc2 -> p1 . y		1212306	0					
ANR	1212529	PtrMemberAccess	pc2 -> p1		1212306	0					
ANR	1212530	Identifier	pc2		1212306	0					
ANR	1212531	Identifier	p1		1212306	1					
ANR	1212532	Identifier	y		1212306	1					
ANR	1212533	CallExpression	"midpoint ( y12 , pc2 -> p2 . y )"		1212306	1					
ANR	1212534	Callee	midpoint		1212306	0					
ANR	1212535	Identifier	midpoint		1212306	0					
ANR	1212536	ArgumentList	y12		1212306	1					
ANR	1212537	Argument	y12		1212306	0					
ANR	1212538	Identifier	y12		1212306	0					
ANR	1212539	Argument	pc2 -> p2 . y		1212306	1					
ANR	1212540	MemberAccess	pc2 -> p2 . y		1212306	0					
ANR	1212541	PtrMemberAccess	pc2 -> p2		1212306	0					
ANR	1212542	Identifier	pc2		1212306	0					
ANR	1212543	Identifier	p2		1212306	1					
ANR	1212544	Identifier	y		1212306	1					
ANR	1212545	IfStatement	if ( pc2 != pc )		1212306	42					
ANR	1212546	Condition	pc2 != pc	129:8:4871:4879	1212306	0	True				
ANR	1212547	EqualityExpression	pc2 != pc		1212306	0		!=			
ANR	1212548	Identifier	pc2		1212306	0					
ANR	1212549	Identifier	pc		1212306	1					
ANR	1212550	ExpressionStatement	"pc2 -> pt . x = pc -> pt . x , pc2 -> pt . y = pc -> pt . y"	130:8:4890:4944	1212306	1	True				
ANR	1212551	Expression	"pc2 -> pt . x = pc -> pt . x , pc2 -> pt . y = pc -> pt . y"		1212306	0					
ANR	1212552	AssignmentExpression	pc2 -> pt . x = pc -> pt . x		1212306	0		=			
ANR	1212553	MemberAccess	pc2 -> pt . x		1212306	0					
ANR	1212554	PtrMemberAccess	pc2 -> pt		1212306	0					
ANR	1212555	Identifier	pc2		1212306	0					
ANR	1212556	Identifier	pt		1212306	1					
ANR	1212557	Identifier	x		1212306	1					
ANR	1212558	MemberAccess	pc -> pt . x		1212306	1					
ANR	1212559	PtrMemberAccess	pc -> pt		1212306	0					
ANR	1212560	Identifier	pc		1212306	0					
ANR	1212561	Identifier	pt		1212306	1					
ANR	1212562	Identifier	x		1212306	1					
ANR	1212563	AssignmentExpression	pc2 -> pt . y = pc -> pt . y		1212306	1		=			
ANR	1212564	MemberAccess	pc2 -> pt . y		1212306	0					
ANR	1212565	PtrMemberAccess	pc2 -> pt		1212306	0					
ANR	1212566	Identifier	pc2		1212306	0					
ANR	1212567	Identifier	pt		1212306	1					
ANR	1212568	Identifier	y		1212306	1					
ANR	1212569	MemberAccess	pc -> pt . y		1212306	1					
ANR	1212570	PtrMemberAccess	pc -> pt		1212306	0					
ANR	1212571	Identifier	pc		1212306	0					
ANR	1212572	Identifier	pt		1212306	1					
ANR	1212573	Identifier	y		1212306	1					
ANR	1212574	ExpressionStatement	"pc1 -> pt . x = midpoint ( pc1 -> p2 . x , pc2 -> p1 . x )"	132:4:4950:4992	1212306	43	True				
ANR	1212575	AssignmentExpression	"pc1 -> pt . x = midpoint ( pc1 -> p2 . x , pc2 -> p1 . x )"		1212306	0		=			
ANR	1212576	MemberAccess	pc1 -> pt . x		1212306	0					
ANR	1212577	PtrMemberAccess	pc1 -> pt		1212306	0					
ANR	1212578	Identifier	pc1		1212306	0					
ANR	1212579	Identifier	pt		1212306	1					
ANR	1212580	Identifier	x		1212306	1					
ANR	1212581	CallExpression	"midpoint ( pc1 -> p2 . x , pc2 -> p1 . x )"		1212306	1					
ANR	1212582	Callee	midpoint		1212306	0					
ANR	1212583	Identifier	midpoint		1212306	0					
ANR	1212584	ArgumentList	pc1 -> p2 . x		1212306	1					
ANR	1212585	Argument	pc1 -> p2 . x		1212306	0					
ANR	1212586	MemberAccess	pc1 -> p2 . x		1212306	0					
ANR	1212587	PtrMemberAccess	pc1 -> p2		1212306	0					
ANR	1212588	Identifier	pc1		1212306	0					
ANR	1212589	Identifier	p2		1212306	1					
ANR	1212590	Identifier	x		1212306	1					
ANR	1212591	Argument	pc2 -> p1 . x		1212306	1					
ANR	1212592	MemberAccess	pc2 -> p1 . x		1212306	0					
ANR	1212593	PtrMemberAccess	pc2 -> p1		1212306	0					
ANR	1212594	Identifier	pc2		1212306	0					
ANR	1212595	Identifier	p1		1212306	1					
ANR	1212596	Identifier	x		1212306	1					
ANR	1212597	ExpressionStatement	"pc1 -> pt . y = midpoint ( pc1 -> p2 . y , pc2 -> p1 . y )"	133:4:4998:5040	1212306	44	True				
ANR	1212598	AssignmentExpression	"pc1 -> pt . y = midpoint ( pc1 -> p2 . y , pc2 -> p1 . y )"		1212306	0		=			
ANR	1212599	MemberAccess	pc1 -> pt . y		1212306	0					
ANR	1212600	PtrMemberAccess	pc1 -> pt		1212306	0					
ANR	1212601	Identifier	pc1		1212306	0					
ANR	1212602	Identifier	pt		1212306	1					
ANR	1212603	Identifier	y		1212306	1					
ANR	1212604	CallExpression	"midpoint ( pc1 -> p2 . y , pc2 -> p1 . y )"		1212306	1					
ANR	1212605	Callee	midpoint		1212306	0					
ANR	1212606	Identifier	midpoint		1212306	0					
ANR	1212607	ArgumentList	pc1 -> p2 . y		1212306	1					
ANR	1212608	Argument	pc1 -> p2 . y		1212306	0					
ANR	1212609	MemberAccess	pc1 -> p2 . y		1212306	0					
ANR	1212610	PtrMemberAccess	pc1 -> p2		1212306	0					
ANR	1212611	Identifier	pc1		1212306	0					
ANR	1212612	Identifier	p2		1212306	1					
ANR	1212613	Identifier	y		1212306	1					
ANR	1212614	Argument	pc2 -> p1 . y		1212306	1					
ANR	1212615	MemberAccess	pc2 -> p1 . y		1212306	0					
ANR	1212616	PtrMemberAccess	pc2 -> p1		1212306	0					
ANR	1212617	Identifier	pc2		1212306	0					
ANR	1212618	Identifier	p1		1212306	1					
ANR	1212619	Identifier	y		1212306	1					
ANR	1212620	Statement	undef	134:1:5043:5047	1212306	45	True				
ANR	1212621	Statement	midpoint	134:7:5049:5056	1212306	46	True				
ANR	1212622	ReturnType	static void		1212306	1					
ANR	1212623	Identifier	split_curve_midpoint		1212306	2					
ANR	1212624	ParameterList	"fixed x0 , fixed y0 , const curve_segment * pc , curve_segment * pc1 , curve_segment * pc2"		1212306	3					
ANR	1212625	Parameter	fixed x0	105:21:3779:3786	1212306	0	True				
ANR	1212626	ParameterType	fixed		1212306	0					
ANR	1212627	Identifier	x0		1212306	1					
ANR	1212628	Parameter	fixed y0	105:31:3789:3796	1212306	1	True				
ANR	1212629	ParameterType	fixed		1212306	0					
ANR	1212630	Identifier	y0		1212306	1					
ANR	1212631	Parameter	const curve_segment * pc	105:41:3799:3822	1212306	2	True				
ANR	1212632	ParameterType	const curve_segment *		1212306	0					
ANR	1212633	Identifier	pc		1212306	1					
ANR	1212634	Parameter	curve_segment * pc1	106:21:3846:3864	1212306	3	True				
ANR	1212635	ParameterType	curve_segment *		1212306	0					
ANR	1212636	Identifier	pc1		1212306	1					
ANR	1212637	Parameter	curve_segment * pc2	106:42:3867:3885	1212306	4	True				
ANR	1212638	ParameterType	curve_segment *		1212306	0					
ANR	1212639	Identifier	pc2		1212306	1					
ANR	1212640	CFGEntryNode	ENTRY		1212306		True				
ANR	1212641	CFGExitNode	EXIT		1212306		True				
ANR	1212642	Symbol	pc -> p1 . y		1212306						
ANR	1212643	Symbol	pc -> p1 . x		1212306						
ANR	1212644	Symbol	pc1 -> p1		1212306						
ANR	1212645	Symbol	pc1 -> p1 . x		1212306						
ANR	1212646	Symbol	pc1 -> p1 . y		1212306						
ANR	1212647	Symbol	pc1 -> p2		1212306						
ANR	1212648	Symbol	* pc1		1212306						
ANR	1212649	Symbol	* pc2		1212306						
ANR	1212650	Symbol	pc -> pt . x		1212306						
ANR	1212651	Symbol	pc -> pt . y		1212306						
ANR	1212652	Symbol	pc2 -> p2 . y		1212306						
ANR	1212653	Symbol	pc2 -> p2 . x		1212306						
ANR	1212654	Symbol	pc -> p2 . x		1212306						
ANR	1212655	Symbol	pc -> p2 . y		1212306						
ANR	1212656	Symbol	pc1 -> pt . x		1212306						
ANR	1212657	Symbol	y0		1212306						
ANR	1212658	Symbol	x12		1212306						
ANR	1212659	Symbol	pc -> pt		1212306						
ANR	1212660	Symbol	midpoint		1212306						
ANR	1212661	Symbol	pc1 -> pt		1212306						
ANR	1212662	Symbol	pc -> p2		1212306						
ANR	1212663	Symbol	pc1 -> pt . y		1212306						
ANR	1212664	Symbol	y12		1212306						
ANR	1212665	Symbol	pc -> p1		1212306						
ANR	1212666	Symbol	pc2		1212306						
ANR	1212667	Symbol	pc1		1212306						
ANR	1212668	Symbol	pc2 -> p1		1212306						
ANR	1212669	Symbol	pc2 -> p1 . y		1212306						
ANR	1212670	Symbol	pc2 -> p1 . x		1212306						
ANR	1212671	Symbol	pc		1212306						
ANR	1212672	Symbol	pc1 -> p2 . x		1212306						
ANR	1212673	Symbol	pc1 -> p2 . y		1212306						
ANR	1212674	Symbol	x0		1212306						
ANR	1212675	Symbol	* pc		1212306						
ANR	1212676	Symbol	pc2 -> pt		1212306						
ANR	1212677	Symbol	pc2 -> p2		1212306						
ANR	1212678	Symbol	pc2 -> pt . y		1212306						
ANR	1212679	Symbol	pc2 -> pt . x		1212306						
ANR	1212680	Function	print_points	137:0:5061:5342							
ANR	1212681	FunctionDef	"print_points (const gs_fixed_point * points , int count)"		1212680	0					
ANR	1212682	CompoundStatement		139:0:5134:5342	1212680	0					
ANR	1212683	IdentifierDeclStatement	int i ;	141:4:5153:5158	1212680	0	True				
ANR	1212684	IdentifierDecl	i		1212680	0					
ANR	1212685	IdentifierDeclType	int		1212680	0					
ANR	1212686	Identifier	i		1212680	1					
ANR	1212687	IfStatement	if ( ! gs_debug_c ( '3' ) )		1212680	1					
ANR	1212688	Condition	! gs_debug_c ( '3' )	143:8:5169:5184	1212680	0	True				
ANR	1212689	UnaryOperationExpression	! gs_debug_c ( '3' )		1212680	0					
ANR	1212690	UnaryOperator	!		1212680	0					
ANR	1212691	CallExpression	gs_debug_c ( '3' )		1212680	1					
ANR	1212692	Callee	gs_debug_c		1212680	0					
ANR	1212693	Identifier	gs_debug_c		1212680	0					
ANR	1212694	ArgumentList	'3'		1212680	1					
ANR	1212695	Argument	'3'		1212680	0					
ANR	1212696	PrimaryExpression	'3'		1212680	0					
ANR	1212697	ReturnStatement	return ;	144:8:5195:5201	1212680	1	True				
ANR	1212698	ForStatement	for ( i = 0 ; i < count ; i ++ )		1212680	2					
ANR	1212699	ForInit	i = 0 ;	145:9:5212:5217	1212680	0	True				
ANR	1212700	AssignmentExpression	i = 0		1212680	0		=			
ANR	1212701	Identifier	i		1212680	0					
ANR	1212702	PrimaryExpression	0		1212680	1					
ANR	1212703	Condition	i < count	145:16:5219:5227	1212680	1	True				
ANR	1212704	RelationalExpression	i < count		1212680	0		<			
ANR	1212705	Identifier	i		1212680	0					
ANR	1212706	Identifier	count		1212680	1					
ANR	1212707	PostIncDecOperationExpression	i ++	145:27:5230:5232	1212680	2	True				
ANR	1212708	Identifier	i		1212680	0					
ANR	1212709	IncDec	++		1212680	1					
ANR	1212710	ExpressionStatement	"if_debug2 ( '3' , ""[3]out x=%ld y=%ld\\n"" , ( long ) points [ i ] . x , ( long ) points [ i ] . y )"	146:6:5241:5333	1212680	3	True				
ANR	1212711	CallExpression	"if_debug2 ( '3' , ""[3]out x=%ld y=%ld\\n"" , ( long ) points [ i ] . x , ( long ) points [ i ] . y )"		1212680	0					
ANR	1212712	Callee	if_debug2		1212680	0					
ANR	1212713	Identifier	if_debug2		1212680	0					
ANR	1212714	ArgumentList	'3'		1212680	1					
ANR	1212715	Argument	'3'		1212680	0					
ANR	1212716	PrimaryExpression	'3'		1212680	0					
ANR	1212717	Argument	"""[3]out x=%ld y=%ld\\n"""		1212680	1					
ANR	1212718	PrimaryExpression	"""[3]out x=%ld y=%ld\\n"""		1212680	0					
ANR	1212719	Argument	( long ) points [ i ] . x		1212680	2					
ANR	1212720	CastExpression	( long ) points [ i ] . x		1212680	0					
ANR	1212721	CastTarget	long		1212680	0					
ANR	1212722	MemberAccess	points [ i ] . x		1212680	1					
ANR	1212723	ArrayIndexing	points [ i ]		1212680	0					
ANR	1212724	Identifier	points		1212680	0					
ANR	1212725	Identifier	i		1212680	1					
ANR	1212726	Identifier	x		1212680	1					
ANR	1212727	Argument	( long ) points [ i ] . y		1212680	3					
ANR	1212728	CastExpression	( long ) points [ i ] . y		1212680	0					
ANR	1212729	CastTarget	long		1212680	0					
ANR	1212730	MemberAccess	points [ i ] . y		1212680	1					
ANR	1212731	ArrayIndexing	points [ i ]		1212680	0					
ANR	1212732	Identifier	points		1212680	0					
ANR	1212733	Identifier	i		1212680	1					
ANR	1212734	Identifier	y		1212680	1					
ANR	1212735	ReturnType	static inline void		1212680	1					
ANR	1212736	Identifier	print_points		1212680	2					
ANR	1212737	ParameterList	"const gs_fixed_point * points , int count"		1212680	3					
ANR	1212738	Parameter	const gs_fixed_point * points	138:13:5093:5120	1212680	0	True				
ANR	1212739	ParameterType	const gs_fixed_point *		1212680	0					
ANR	1212740	Identifier	points		1212680	1					
ANR	1212741	Parameter	int count	138:43:5123:5131	1212680	1	True				
ANR	1212742	ParameterType	int		1212680	0					
ANR	1212743	Identifier	count		1212680	1					
ANR	1212744	CFGEntryNode	ENTRY		1212680		True				
ANR	1212745	CFGExitNode	EXIT		1212680		True				
ANR	1212746	Symbol	* i		1212680						
ANR	1212747	Symbol	count		1212680						
ANR	1212748	Symbol	points [ i ] . x		1212680						
ANR	1212749	Symbol	i		1212680						
ANR	1212750	Symbol	points [ i ] . y		1212680						
ANR	1212751	Symbol	gs_debug_c		1212680						
ANR	1212752	Symbol	* points		1212680						
ANR	1212753	Symbol	points		1212680						
ANR	1212754	Function	curve_coeffs_ranged	151:0:5345:6228							
ANR	1212755	FunctionDef	"curve_coeffs_ranged (fixed x0 , fixed x1 , fixed x2 , fixed x3 , fixed y0 , fixed y1 , fixed y2 , fixed y3 , fixed * ax , fixed * bx , fixed * cx , fixed * ay , fixed * by , fixed * cy , int k)"		1212754	0					
ANR	1212756	CompoundStatement		157:0:5603:6228	1212754	0					
ANR	1212757	IdentifierDeclStatement	"fixed x01 , x12 , y01 , y12 ;"	158:4:5609:5633	1212754	0	True				
ANR	1212758	IdentifierDecl	x01		1212754	0					
ANR	1212759	IdentifierDeclType	fixed		1212754	0					
ANR	1212760	Identifier	x01		1212754	1					
ANR	1212761	IdentifierDecl	x12		1212754	1					
ANR	1212762	IdentifierDeclType	fixed		1212754	0					
ANR	1212763	Identifier	x12		1212754	1					
ANR	1212764	IdentifierDecl	y01		1212754	2					
ANR	1212765	IdentifierDeclType	fixed		1212754	0					
ANR	1212766	Identifier	y01		1212754	1					
ANR	1212767	IdentifierDecl	y12		1212754	3					
ANR	1212768	IdentifierDeclType	fixed		1212754	0					
ANR	1212769	Identifier	y12		1212754	1					
ANR	1212770	ExpressionStatement	"curve_points_to_coefficients ( x0 , x1 , x2 , x3 , * ax , * bx , * cx , x01 , x12 )"	160:4:5640:5742	1212754	1	True				
ANR	1212771	CallExpression	"curve_points_to_coefficients ( x0 , x1 , x2 , x3 , * ax , * bx , * cx , x01 , x12 )"		1212754	0					
ANR	1212772	Callee	curve_points_to_coefficients		1212754	0					
ANR	1212773	Identifier	curve_points_to_coefficients		1212754	0					
ANR	1212774	ArgumentList	x0		1212754	1					
ANR	1212775	Argument	x0		1212754	0					
ANR	1212776	Identifier	x0		1212754	0					
ANR	1212777	Argument	x1		1212754	1					
ANR	1212778	Identifier	x1		1212754	0					
ANR	1212779	Argument	x2		1212754	2					
ANR	1212780	Identifier	x2		1212754	0					
ANR	1212781	Argument	x3		1212754	3					
ANR	1212782	Identifier	x3		1212754	0					
ANR	1212783	Argument	* ax		1212754	4					
ANR	1212784	UnaryOperationExpression	* ax		1212754	0					
ANR	1212785	UnaryOperator	*		1212754	0					
ANR	1212786	Identifier	ax		1212754	1					
ANR	1212787	Argument	* bx		1212754	5					
ANR	1212788	UnaryOperationExpression	* bx		1212754	0					
ANR	1212789	UnaryOperator	*		1212754	0					
ANR	1212790	Identifier	bx		1212754	1					
ANR	1212791	Argument	* cx		1212754	6					
ANR	1212792	UnaryOperationExpression	* cx		1212754	0					
ANR	1212793	UnaryOperator	*		1212754	0					
ANR	1212794	Identifier	cx		1212754	1					
ANR	1212795	Argument	x01		1212754	7					
ANR	1212796	Identifier	x01		1212754	0					
ANR	1212797	Argument	x12		1212754	8					
ANR	1212798	Identifier	x12		1212754	0					
ANR	1212799	ExpressionStatement	"curve_points_to_coefficients ( y0 , y1 , y2 , y3 , * ay , * by , * cy , y01 , y12 )"	162:4:5748:5850	1212754	2	True				
ANR	1212800	CallExpression	"curve_points_to_coefficients ( y0 , y1 , y2 , y3 , * ay , * by , * cy , y01 , y12 )"		1212754	0					
ANR	1212801	Callee	curve_points_to_coefficients		1212754	0					
ANR	1212802	Identifier	curve_points_to_coefficients		1212754	0					
ANR	1212803	ArgumentList	y0		1212754	1					
ANR	1212804	Argument	y0		1212754	0					
ANR	1212805	Identifier	y0		1212754	0					
ANR	1212806	Argument	y1		1212754	1					
ANR	1212807	Identifier	y1		1212754	0					
ANR	1212808	Argument	y2		1212754	2					
ANR	1212809	Identifier	y2		1212754	0					
ANR	1212810	Argument	y3		1212754	3					
ANR	1212811	Identifier	y3		1212754	0					
ANR	1212812	Argument	* ay		1212754	4					
ANR	1212813	UnaryOperationExpression	* ay		1212754	0					
ANR	1212814	UnaryOperator	*		1212754	0					
ANR	1212815	Identifier	ay		1212754	1					
ANR	1212816	Argument	* by		1212754	5					
ANR	1212817	UnaryOperationExpression	* by		1212754	0					
ANR	1212818	UnaryOperator	*		1212754	0					
ANR	1212819	Identifier	by		1212754	1					
ANR	1212820	Argument	* cy		1212754	6					
ANR	1212821	UnaryOperationExpression	* cy		1212754	0					
ANR	1212822	UnaryOperator	*		1212754	0					
ANR	1212823	Identifier	cy		1212754	1					
ANR	1212824	Argument	y01		1212754	7					
ANR	1212825	Identifier	y01		1212754	0					
ANR	1212826	Argument	y12		1212754	8					
ANR	1212827	Identifier	y12		1212754	0					
ANR	1212828	Statement	define	164:4:5856:5861	1212754	3	True				
ANR	1212829	Statement	max_fast	164:11:5863:5870	1212754	4	True				
ANR	1212830	Statement	(	164:20:5872:5872	1212754	5	True				
ANR	1212831	Statement	max_fixed	164:21:5873:5881	1212754	6	True				
ANR	1212832	Statement	/	164:31:5883:5883	1212754	7	True				
ANR	1212833	Statement	6	164:33:5885:5885	1212754	8	True				
ANR	1212834	Statement	)	164:34:5886:5886	1212754	9	True				
ANR	1212835	Statement	define	165:4:5892:5897	1212754	10	True				
ANR	1212836	Statement	min_fast	165:11:5899:5906	1212754	11	True				
ANR	1212837	Statement	(	165:20:5908:5908	1212754	12	True				
ANR	1212838	Statement	-	165:21:5909:5909	1212754	13	True				
ANR	1212839	Statement	max_fast	165:22:5910:5917	1212754	14	True				
ANR	1212840	Statement	)	165:30:5918:5918	1212754	15	True				
ANR	1212841	Statement	define	166:4:5924:5929	1212754	16	True				
ANR	1212842	Statement	in_range	166:11:5931:5938	1212754	17	True				
ANR	1212843	Statement	(	166:19:5939:5939	1212754	18	True				
ANR	1212844	Statement	v	166:20:5940:5940	1212754	19	True				
ANR	1212845	Statement	)	166:21:5941:5941	1212754	20	True				
ANR	1212846	Statement	(	166:23:5943:5943	1212754	21	True				
ANR	1212847	Statement	v	166:24:5944:5944	1212754	22	True				
ANR	1212848	Statement	<	166:26:5946:5946	1212754	23	True				
ANR	1212849	Statement	max_fast	166:28:5948:5955	1212754	24	True				
ANR	1212850	Statement	&&	166:37:5957:5958	1212754	25	True				
ANR	1212851	Statement	v	166:40:5960:5960	1212754	26	True				
ANR	1212852	Statement	>	166:42:5962:5962	1212754	27	True				
ANR	1212853	Statement	min_fast	166:44:5964:5971	1212754	28	True				
ANR	1212854	Statement	)	166:52:5972:5972	1212754	29	True				
ANR	1212855	IfStatement	if ( k > k_sample_max || ! in_range ( * ax ) || ! in_range ( * ay ) || ! in_range ( * bx ) || ! in_range ( * by ) || ! in_range ( * cx ) || ! in_range ( * cy ) )		1212754	30					
ANR	1212856	Condition	k > k_sample_max || ! in_range ( * ax ) || ! in_range ( * ay ) || ! in_range ( * bx ) || ! in_range ( * by ) || ! in_range ( * cx ) || ! in_range ( * cy )	167:8:5982:6129	1212754	0	True				
ANR	1212857	OrExpression	k > k_sample_max || ! in_range ( * ax ) || ! in_range ( * ay ) || ! in_range ( * bx ) || ! in_range ( * by ) || ! in_range ( * cx ) || ! in_range ( * cy )		1212754	0		||			
ANR	1212858	RelationalExpression	k > k_sample_max		1212754	0		>			
ANR	1212859	Identifier	k		1212754	0					
ANR	1212860	Identifier	k_sample_max		1212754	1					
ANR	1212861	OrExpression	! in_range ( * ax ) || ! in_range ( * ay ) || ! in_range ( * bx ) || ! in_range ( * by ) || ! in_range ( * cx ) || ! in_range ( * cy )		1212754	1		||			
ANR	1212862	UnaryOperationExpression	! in_range ( * ax )		1212754	0					
ANR	1212863	UnaryOperator	!		1212754	0					
ANR	1212864	CallExpression	in_range ( * ax )		1212754	1					
ANR	1212865	Callee	in_range		1212754	0					
ANR	1212866	Identifier	in_range		1212754	0					
ANR	1212867	ArgumentList	* ax		1212754	1					
ANR	1212868	Argument	* ax		1212754	0					
ANR	1212869	UnaryOperationExpression	* ax		1212754	0					
ANR	1212870	UnaryOperator	*		1212754	0					
ANR	1212871	Identifier	ax		1212754	1					
ANR	1212872	OrExpression	! in_range ( * ay ) || ! in_range ( * bx ) || ! in_range ( * by ) || ! in_range ( * cx ) || ! in_range ( * cy )		1212754	1		||			
ANR	1212873	UnaryOperationExpression	! in_range ( * ay )		1212754	0					
ANR	1212874	UnaryOperator	!		1212754	0					
ANR	1212875	CallExpression	in_range ( * ay )		1212754	1					
ANR	1212876	Callee	in_range		1212754	0					
ANR	1212877	Identifier	in_range		1212754	0					
ANR	1212878	ArgumentList	* ay		1212754	1					
ANR	1212879	Argument	* ay		1212754	0					
ANR	1212880	UnaryOperationExpression	* ay		1212754	0					
ANR	1212881	UnaryOperator	*		1212754	0					
ANR	1212882	Identifier	ay		1212754	1					
ANR	1212883	OrExpression	! in_range ( * bx ) || ! in_range ( * by ) || ! in_range ( * cx ) || ! in_range ( * cy )		1212754	1		||			
ANR	1212884	UnaryOperationExpression	! in_range ( * bx )		1212754	0					
ANR	1212885	UnaryOperator	!		1212754	0					
ANR	1212886	CallExpression	in_range ( * bx )		1212754	1					
ANR	1212887	Callee	in_range		1212754	0					
ANR	1212888	Identifier	in_range		1212754	0					
ANR	1212889	ArgumentList	* bx		1212754	1					
ANR	1212890	Argument	* bx		1212754	0					
ANR	1212891	UnaryOperationExpression	* bx		1212754	0					
ANR	1212892	UnaryOperator	*		1212754	0					
ANR	1212893	Identifier	bx		1212754	1					
ANR	1212894	OrExpression	! in_range ( * by ) || ! in_range ( * cx ) || ! in_range ( * cy )		1212754	1		||			
ANR	1212895	UnaryOperationExpression	! in_range ( * by )		1212754	0					
ANR	1212896	UnaryOperator	!		1212754	0					
ANR	1212897	CallExpression	in_range ( * by )		1212754	1					
ANR	1212898	Callee	in_range		1212754	0					
ANR	1212899	Identifier	in_range		1212754	0					
ANR	1212900	ArgumentList	* by		1212754	1					
ANR	1212901	Argument	* by		1212754	0					
ANR	1212902	UnaryOperationExpression	* by		1212754	0					
ANR	1212903	UnaryOperator	*		1212754	0					
ANR	1212904	Identifier	by		1212754	1					
ANR	1212905	OrExpression	! in_range ( * cx ) || ! in_range ( * cy )		1212754	1		||			
ANR	1212906	UnaryOperationExpression	! in_range ( * cx )		1212754	0					
ANR	1212907	UnaryOperator	!		1212754	0					
ANR	1212908	CallExpression	in_range ( * cx )		1212754	1					
ANR	1212909	Callee	in_range		1212754	0					
ANR	1212910	Identifier	in_range		1212754	0					
ANR	1212911	ArgumentList	* cx		1212754	1					
ANR	1212912	Argument	* cx		1212754	0					
ANR	1212913	UnaryOperationExpression	* cx		1212754	0					
ANR	1212914	UnaryOperator	*		1212754	0					
ANR	1212915	Identifier	cx		1212754	1					
ANR	1212916	UnaryOperationExpression	! in_range ( * cy )		1212754	1					
ANR	1212917	UnaryOperator	!		1212754	0					
ANR	1212918	CallExpression	in_range ( * cy )		1212754	1					
ANR	1212919	Callee	in_range		1212754	0					
ANR	1212920	Identifier	in_range		1212754	0					
ANR	1212921	ArgumentList	* cy		1212754	1					
ANR	1212922	Argument	* cy		1212754	0					
ANR	1212923	UnaryOperationExpression	* cy		1212754	0					
ANR	1212924	UnaryOperator	*		1212754	0					
ANR	1212925	Identifier	cy		1212754	1					
ANR	1212926	ReturnStatement	return false ;	172:8:6149:6161	1212754	1	True				
ANR	1212927	Identifier	false		1212754	0					
ANR	1212928	Statement	undef	173:1:6164:6168	1212754	31	True				
ANR	1212929	Statement	max_fast	173:7:6170:6177	1212754	32	True				
ANR	1212930	Statement	undef	174:1:6180:6184	1212754	33	True				
ANR	1212931	Statement	min_fast	174:7:6186:6193	1212754	34	True				
ANR	1212932	Statement	undef	175:1:6196:6200	1212754	35	True				
ANR	1212933	Statement	in_range	175:7:6202:6209	1212754	36	True				
ANR	1212934	ReturnStatement	return true ;	176:4:6215:6226	1212754	37	True				
ANR	1212935	Identifier	true		1212754	0					
ANR	1212936	ReturnType	bool		1212754	1					
ANR	1212937	Identifier	curve_coeffs_ranged		1212754	2					
ANR	1212938	ParameterList	"fixed x0 , fixed x1 , fixed x2 , fixed x3 , fixed y0 , fixed y1 , fixed y2 , fixed y3 , fixed * ax , fixed * bx , fixed * cx , fixed * ay , fixed * by , fixed * cy , int k"		1212754	3					
ANR	1212939	Parameter	fixed x0	152:20:5370:5377	1212754	0	True				
ANR	1212940	ParameterType	fixed		1212754	0					
ANR	1212941	Identifier	x0		1212754	1					
ANR	1212942	Parameter	fixed x1	152:30:5380:5387	1212754	1	True				
ANR	1212943	ParameterType	fixed		1212754	0					
ANR	1212944	Identifier	x1		1212754	1					
ANR	1212945	Parameter	fixed x2	152:40:5390:5397	1212754	2	True				
ANR	1212946	ParameterType	fixed		1212754	0					
ANR	1212947	Identifier	x2		1212754	1					
ANR	1212948	Parameter	fixed x3	152:50:5400:5407	1212754	3	True				
ANR	1212949	ParameterType	fixed		1212754	0					
ANR	1212950	Identifier	x3		1212754	1					
ANR	1212951	Parameter	fixed y0	153:20:5430:5437	1212754	4	True				
ANR	1212952	ParameterType	fixed		1212754	0					
ANR	1212953	Identifier	y0		1212754	1					
ANR	1212954	Parameter	fixed y1	153:30:5440:5447	1212754	5	True				
ANR	1212955	ParameterType	fixed		1212754	0					
ANR	1212956	Identifier	y1		1212754	1					
ANR	1212957	Parameter	fixed y2	153:40:5450:5457	1212754	6	True				
ANR	1212958	ParameterType	fixed		1212754	0					
ANR	1212959	Identifier	y2		1212754	1					
ANR	1212960	Parameter	fixed y3	153:50:5460:5467	1212754	7	True				
ANR	1212961	ParameterType	fixed		1212754	0					
ANR	1212962	Identifier	y3		1212754	1					
ANR	1212963	Parameter	fixed * ax	154:20:5490:5498	1212754	8	True				
ANR	1212964	ParameterType	fixed *		1212754	0					
ANR	1212965	Identifier	ax		1212754	1					
ANR	1212966	Parameter	fixed * bx	154:31:5501:5509	1212754	9	True				
ANR	1212967	ParameterType	fixed *		1212754	0					
ANR	1212968	Identifier	bx		1212754	1					
ANR	1212969	Parameter	fixed * cx	154:42:5512:5520	1212754	10	True				
ANR	1212970	ParameterType	fixed *		1212754	0					
ANR	1212971	Identifier	cx		1212754	1					
ANR	1212972	Parameter	fixed * ay	155:20:5543:5551	1212754	11	True				
ANR	1212973	ParameterType	fixed *		1212754	0					
ANR	1212974	Identifier	ay		1212754	1					
ANR	1212975	Parameter	fixed * by	155:31:5554:5562	1212754	12	True				
ANR	1212976	ParameterType	fixed *		1212754	0					
ANR	1212977	Identifier	by		1212754	1					
ANR	1212978	Parameter	fixed * cy	155:42:5565:5573	1212754	13	True				
ANR	1212979	ParameterType	fixed *		1212754	0					
ANR	1212980	Identifier	cy		1212754	1					
ANR	1212981	Parameter	int k	156:20:5596:5600	1212754	14	True				
ANR	1212982	ParameterType	int		1212754	0					
ANR	1212983	Identifier	k		1212754	1					
ANR	1212984	CFGEntryNode	ENTRY		1212754		True				
ANR	1212985	CFGExitNode	EXIT		1212754		True				
ANR	1212986	Symbol	k_sample_max		1212754						
ANR	1212987	Symbol	bx		1212754						
ANR	1212988	Symbol	y0		1212754						
ANR	1212989	Symbol	by		1212754						
ANR	1212990	Symbol	y1		1212754						
ANR	1212991	Symbol	x12		1212754						
ANR	1212992	Symbol	y2		1212754						
ANR	1212993	Symbol	y3		1212754						
ANR	1212994	Symbol	y12		1212754						
ANR	1212995	Symbol	* by		1212754						
ANR	1212996	Symbol	* bx		1212754						
ANR	1212997	Symbol	false		1212754						
ANR	1212998	Symbol	k		1212754						
ANR	1212999	Symbol	cx		1212754						
ANR	1213000	Symbol	cy		1212754						
ANR	1213001	Symbol	ax		1212754						
ANR	1213002	Symbol	x0		1212754						
ANR	1213003	Symbol	ay		1212754						
ANR	1213004	Symbol	x01		1212754						
ANR	1213005	Symbol	* cx		1212754						
ANR	1213006	Symbol	true		1212754						
ANR	1213007	Symbol	x1		1212754						
ANR	1213008	Symbol	x2		1212754						
ANR	1213009	Symbol	in_range		1212754						
ANR	1213010	Symbol	x3		1212754						
ANR	1213011	Symbol	y01		1212754						
ANR	1213012	Symbol	* ay		1212754						
ANR	1213013	Symbol	* ax		1212754						
ANR	1213014	Symbol	* cy		1212754						
ANR	1213015	Function	gx_flattened_iterator__init	182:0:6324:9865							
ANR	1213016	FunctionDef	"gx_flattened_iterator__init (gx_flattened_iterator * self , fixed x0 , fixed y0 , const curve_segment * pc , int k)"		1213015	0					
ANR	1213017	CompoundStatement		185:0:6450:9865	1213015	0					
ANR	1213018	IdentifierDeclStatement	"fixed x1 , y1 , x2 , y2 ;"	187:4:6553:6573	1213015	0	True				
ANR	1213019	IdentifierDecl	x1		1213015	0					
ANR	1213020	IdentifierDeclType	fixed		1213015	0					
ANR	1213021	Identifier	x1		1213015	1					
ANR	1213022	IdentifierDecl	y1		1213015	1					
ANR	1213023	IdentifierDeclType	fixed		1213015	0					
ANR	1213024	Identifier	y1		1213015	1					
ANR	1213025	IdentifierDecl	x2		1213015	2					
ANR	1213026	IdentifierDeclType	fixed		1213015	0					
ANR	1213027	Identifier	x2		1213015	1					
ANR	1213028	IdentifierDecl	y2		1213015	3					
ANR	1213029	IdentifierDeclType	fixed		1213015	0					
ANR	1213030	Identifier	y2		1213015	1					
ANR	1213031	IdentifierDeclStatement	"const int k2 = k << 1 , k3 = k2 + k ;"	188:4:6579:6613	1213015	1	True				
ANR	1213032	IdentifierDecl	k2 = k << 1		1213015	0					
ANR	1213033	IdentifierDeclType	const int		1213015	0					
ANR	1213034	Identifier	k2		1213015	1					
ANR	1213035	AssignmentExpression	k2 = k << 1		1213015	2		=			
ANR	1213036	Identifier	k2		1213015	0					
ANR	1213037	ShiftExpression	k << 1		1213015	1		<<			
ANR	1213038	Identifier	k		1213015	0					
ANR	1213039	PrimaryExpression	1		1213015	1					
ANR	1213040	IdentifierDecl	k3 = k2 + k		1213015	1					
ANR	1213041	IdentifierDeclType	const int		1213015	0					
ANR	1213042	Identifier	k3		1213015	1					
ANR	1213043	AssignmentExpression	k3 = k2 + k		1213015	2		=			
ANR	1213044	Identifier	k3		1213015	0					
ANR	1213045	AdditiveExpression	k2 + k		1213015	1		+			
ANR	1213046	Identifier	k2		1213015	0					
ANR	1213047	Identifier	k		1213015	1					
ANR	1213048	IdentifierDeclStatement	"fixed bx2 , by2 , ax6 , ay6 ;"	189:4:6619:6643	1213015	2	True				
ANR	1213049	IdentifierDecl	bx2		1213015	0					
ANR	1213050	IdentifierDeclType	fixed		1213015	0					
ANR	1213051	Identifier	bx2		1213015	1					
ANR	1213052	IdentifierDecl	by2		1213015	1					
ANR	1213053	IdentifierDeclType	fixed		1213015	0					
ANR	1213054	Identifier	by2		1213015	1					
ANR	1213055	IdentifierDecl	ax6		1213015	2					
ANR	1213056	IdentifierDeclType	fixed		1213015	0					
ANR	1213057	Identifier	ax6		1213015	1					
ANR	1213058	IdentifierDecl	ay6		1213015	3					
ANR	1213059	IdentifierDeclType	fixed		1213015	0					
ANR	1213060	Identifier	ay6		1213015	1					
ANR	1213061	ExpressionStatement	x1 = pc -> p1 . x	191:4:6650:6663	1213015	3	True				
ANR	1213062	AssignmentExpression	x1 = pc -> p1 . x		1213015	0		=			
ANR	1213063	Identifier	x1		1213015	0					
ANR	1213064	MemberAccess	pc -> p1 . x		1213015	1					
ANR	1213065	PtrMemberAccess	pc -> p1		1213015	0					
ANR	1213066	Identifier	pc		1213015	0					
ANR	1213067	Identifier	p1		1213015	1					
ANR	1213068	Identifier	x		1213015	1					
ANR	1213069	ExpressionStatement	y1 = pc -> p1 . y	192:4:6669:6682	1213015	4	True				
ANR	1213070	AssignmentExpression	y1 = pc -> p1 . y		1213015	0		=			
ANR	1213071	Identifier	y1		1213015	0					
ANR	1213072	MemberAccess	pc -> p1 . y		1213015	1					
ANR	1213073	PtrMemberAccess	pc -> p1		1213015	0					
ANR	1213074	Identifier	pc		1213015	0					
ANR	1213075	Identifier	p1		1213015	1					
ANR	1213076	Identifier	y		1213015	1					
ANR	1213077	ExpressionStatement	x2 = pc -> p2 . x	193:4:6688:6701	1213015	5	True				
ANR	1213078	AssignmentExpression	x2 = pc -> p2 . x		1213015	0		=			
ANR	1213079	Identifier	x2		1213015	0					
ANR	1213080	MemberAccess	pc -> p2 . x		1213015	1					
ANR	1213081	PtrMemberAccess	pc -> p2		1213015	0					
ANR	1213082	Identifier	pc		1213015	0					
ANR	1213083	Identifier	p2		1213015	1					
ANR	1213084	Identifier	x		1213015	1					
ANR	1213085	ExpressionStatement	y2 = pc -> p2 . y	194:4:6707:6720	1213015	6	True				
ANR	1213086	AssignmentExpression	y2 = pc -> p2 . y		1213015	0		=			
ANR	1213087	Identifier	y2		1213015	0					
ANR	1213088	MemberAccess	pc -> p2 . y		1213015	1					
ANR	1213089	PtrMemberAccess	pc -> p2		1213015	0					
ANR	1213090	Identifier	pc		1213015	0					
ANR	1213091	Identifier	p2		1213015	1					
ANR	1213092	Identifier	y		1213015	1					
ANR	1213093	ExpressionStatement	self -> x0 = self -> lx0 = self -> lx1 = x0	195:4:6726:6763	1213015	7	True				
ANR	1213094	AssignmentExpression	self -> x0 = self -> lx0 = self -> lx1 = x0		1213015	0		=			
ANR	1213095	PtrMemberAccess	self -> x0		1213015	0					
ANR	1213096	Identifier	self		1213015	0					
ANR	1213097	Identifier	x0		1213015	1					
ANR	1213098	AssignmentExpression	self -> lx0 = self -> lx1 = x0		1213015	1		=			
ANR	1213099	PtrMemberAccess	self -> lx0		1213015	0					
ANR	1213100	Identifier	self		1213015	0					
ANR	1213101	Identifier	lx0		1213015	1					
ANR	1213102	AssignmentExpression	self -> lx1 = x0		1213015	1		=			
ANR	1213103	PtrMemberAccess	self -> lx1		1213015	0					
ANR	1213104	Identifier	self		1213015	0					
ANR	1213105	Identifier	lx1		1213015	1					
ANR	1213106	Identifier	x0		1213015	1					
ANR	1213107	ExpressionStatement	self -> y0 = self -> ly0 = self -> ly1 = y0	196:4:6769:6806	1213015	8	True				
ANR	1213108	AssignmentExpression	self -> y0 = self -> ly0 = self -> ly1 = y0		1213015	0		=			
ANR	1213109	PtrMemberAccess	self -> y0		1213015	0					
ANR	1213110	Identifier	self		1213015	0					
ANR	1213111	Identifier	y0		1213015	1					
ANR	1213112	AssignmentExpression	self -> ly0 = self -> ly1 = y0		1213015	1		=			
ANR	1213113	PtrMemberAccess	self -> ly0		1213015	0					
ANR	1213114	Identifier	self		1213015	0					
ANR	1213115	Identifier	ly0		1213015	1					
ANR	1213116	AssignmentExpression	self -> ly1 = y0		1213015	1		=			
ANR	1213117	PtrMemberAccess	self -> ly1		1213015	0					
ANR	1213118	Identifier	self		1213015	0					
ANR	1213119	Identifier	ly1		1213015	1					
ANR	1213120	Identifier	y0		1213015	1					
ANR	1213121	ExpressionStatement	self -> x3 = pc -> pt . x	197:4:6812:6831	1213015	9	True				
ANR	1213122	AssignmentExpression	self -> x3 = pc -> pt . x		1213015	0		=			
ANR	1213123	PtrMemberAccess	self -> x3		1213015	0					
ANR	1213124	Identifier	self		1213015	0					
ANR	1213125	Identifier	x3		1213015	1					
ANR	1213126	MemberAccess	pc -> pt . x		1213015	1					
ANR	1213127	PtrMemberAccess	pc -> pt		1213015	0					
ANR	1213128	Identifier	pc		1213015	0					
ANR	1213129	Identifier	pt		1213015	1					
ANR	1213130	Identifier	x		1213015	1					
ANR	1213131	ExpressionStatement	self -> y3 = pc -> pt . y	198:4:6837:6856	1213015	10	True				
ANR	1213132	AssignmentExpression	self -> y3 = pc -> pt . y		1213015	0		=			
ANR	1213133	PtrMemberAccess	self -> y3		1213015	0					
ANR	1213134	Identifier	self		1213015	0					
ANR	1213135	Identifier	y3		1213015	1					
ANR	1213136	MemberAccess	pc -> pt . y		1213015	1					
ANR	1213137	PtrMemberAccess	pc -> pt		1213015	0					
ANR	1213138	Identifier	pc		1213015	0					
ANR	1213139	Identifier	pt		1213015	1					
ANR	1213140	Identifier	y		1213015	1					
ANR	1213141	IfStatement	"if ( ! curve_coeffs_ranged ( self -> x0 , x1 , x2 , self -> x3 , self -> y0 , y1 , y2 , self -> y3 , & self -> ax , & self -> bx , & self -> cx , & self -> ay , & self -> by , & self -> cy , k ) )"		1213015	11					
ANR	1213142	Condition	"! curve_coeffs_ranged ( self -> x0 , x1 , x2 , self -> x3 , self -> y0 , y1 , y2 , self -> y3 , & self -> ax , & self -> bx , & self -> cx , & self -> ay , & self -> by , & self -> cy , k )"	199:8:6866:7097	1213015	0	True				
ANR	1213143	UnaryOperationExpression	"! curve_coeffs_ranged ( self -> x0 , x1 , x2 , self -> x3 , self -> y0 , y1 , y2 , self -> y3 , & self -> ax , & self -> bx , & self -> cx , & self -> ay , & self -> by , & self -> cy , k )"		1213015	0					
ANR	1213144	UnaryOperator	!		1213015	0					
ANR	1213145	CallExpression	"curve_coeffs_ranged ( self -> x0 , x1 , x2 , self -> x3 , self -> y0 , y1 , y2 , self -> y3 , & self -> ax , & self -> bx , & self -> cx , & self -> ay , & self -> by , & self -> cy , k )"		1213015	1					
ANR	1213146	Callee	curve_coeffs_ranged		1213015	0					
ANR	1213147	Identifier	curve_coeffs_ranged		1213015	0					
ANR	1213148	ArgumentList	self -> x0		1213015	1					
ANR	1213149	Argument	self -> x0		1213015	0					
ANR	1213150	PtrMemberAccess	self -> x0		1213015	0					
ANR	1213151	Identifier	self		1213015	0					
ANR	1213152	Identifier	x0		1213015	1					
ANR	1213153	Argument	x1		1213015	1					
ANR	1213154	Identifier	x1		1213015	0					
ANR	1213155	Argument	x2		1213015	2					
ANR	1213156	Identifier	x2		1213015	0					
ANR	1213157	Argument	self -> x3		1213015	3					
ANR	1213158	PtrMemberAccess	self -> x3		1213015	0					
ANR	1213159	Identifier	self		1213015	0					
ANR	1213160	Identifier	x3		1213015	1					
ANR	1213161	Argument	self -> y0		1213015	4					
ANR	1213162	PtrMemberAccess	self -> y0		1213015	0					
ANR	1213163	Identifier	self		1213015	0					
ANR	1213164	Identifier	y0		1213015	1					
ANR	1213165	Argument	y1		1213015	5					
ANR	1213166	Identifier	y1		1213015	0					
ANR	1213167	Argument	y2		1213015	6					
ANR	1213168	Identifier	y2		1213015	0					
ANR	1213169	Argument	self -> y3		1213015	7					
ANR	1213170	PtrMemberAccess	self -> y3		1213015	0					
ANR	1213171	Identifier	self		1213015	0					
ANR	1213172	Identifier	y3		1213015	1					
ANR	1213173	Argument	& self -> ax		1213015	8					
ANR	1213174	UnaryOperationExpression	& self -> ax		1213015	0					
ANR	1213175	UnaryOperator	&		1213015	0					
ANR	1213176	PtrMemberAccess	self -> ax		1213015	1					
ANR	1213177	Identifier	self		1213015	0					
ANR	1213178	Identifier	ax		1213015	1					
ANR	1213179	Argument	& self -> bx		1213015	9					
ANR	1213180	UnaryOperationExpression	& self -> bx		1213015	0					
ANR	1213181	UnaryOperator	&		1213015	0					
ANR	1213182	PtrMemberAccess	self -> bx		1213015	1					
ANR	1213183	Identifier	self		1213015	0					
ANR	1213184	Identifier	bx		1213015	1					
ANR	1213185	Argument	& self -> cx		1213015	10					
ANR	1213186	UnaryOperationExpression	& self -> cx		1213015	0					
ANR	1213187	UnaryOperator	&		1213015	0					
ANR	1213188	PtrMemberAccess	self -> cx		1213015	1					
ANR	1213189	Identifier	self		1213015	0					
ANR	1213190	Identifier	cx		1213015	1					
ANR	1213191	Argument	& self -> ay		1213015	11					
ANR	1213192	UnaryOperationExpression	& self -> ay		1213015	0					
ANR	1213193	UnaryOperator	&		1213015	0					
ANR	1213194	PtrMemberAccess	self -> ay		1213015	1					
ANR	1213195	Identifier	self		1213015	0					
ANR	1213196	Identifier	ay		1213015	1					
ANR	1213197	Argument	& self -> by		1213015	12					
ANR	1213198	UnaryOperationExpression	& self -> by		1213015	0					
ANR	1213199	UnaryOperator	&		1213015	0					
ANR	1213200	PtrMemberAccess	self -> by		1213015	1					
ANR	1213201	Identifier	self		1213015	0					
ANR	1213202	Identifier	by		1213015	1					
ANR	1213203	Argument	& self -> cy		1213015	13					
ANR	1213204	UnaryOperationExpression	& self -> cy		1213015	0					
ANR	1213205	UnaryOperator	&		1213015	0					
ANR	1213206	PtrMemberAccess	self -> cy		1213015	1					
ANR	1213207	Identifier	self		1213015	0					
ANR	1213208	Identifier	cy		1213015	1					
ANR	1213209	Argument	k		1213015	14					
ANR	1213210	Identifier	k		1213015	0					
ANR	1213211	ReturnStatement	return false ;	203:8:7108:7120	1213015	1	True				
ANR	1213212	Identifier	false		1213015	0					
ANR	1213213	ExpressionStatement	self -> curve = true	204:4:7126:7144	1213015	12	True				
ANR	1213214	AssignmentExpression	self -> curve = true		1213015	0		=			
ANR	1213215	PtrMemberAccess	self -> curve		1213015	0					
ANR	1213216	Identifier	self		1213015	0					
ANR	1213217	Identifier	curve		1213015	1					
ANR	1213218	Identifier	true		1213015	1					
ANR	1213219	ExpressionStatement	self -> k = k	205:4:7150:7161	1213015	13	True				
ANR	1213220	AssignmentExpression	self -> k = k		1213015	0		=			
ANR	1213221	PtrMemberAccess	self -> k		1213015	0					
ANR	1213222	Identifier	self		1213015	0					
ANR	1213223	Identifier	k		1213015	1					
ANR	1213224	Identifier	k		1213015	1					
ANR	1213225	Statement	ifdef	207:4:7189:7193	1213015	14	True				
ANR	1213226	Statement	DEBUG	207:10:7195:7199	1213015	15	True				
ANR	1213227	IfStatement	if ( gs_debug_c ( '3' ) )		1213015	16					
ANR	1213228	Condition	gs_debug_c ( '3' )	208:12:7213:7227	1213015	0	True				
ANR	1213229	CallExpression	gs_debug_c ( '3' )		1213015	0					
ANR	1213230	Callee	gs_debug_c		1213015	0					
ANR	1213231	Identifier	gs_debug_c		1213015	0					
ANR	1213232	ArgumentList	'3'		1213015	1					
ANR	1213233	Argument	'3'		1213015	0					
ANR	1213234	PrimaryExpression	'3'		1213015	0					
ANR	1213235	CompoundStatement		24:29:779:779	1213015	1					
ANR	1213236	ExpressionStatement	"dlprintf4 ( ""[3]x0=%f y0=%f x1=%f y1=%f\\n"" , fixed2float ( self -> x0 ) , fixed2float ( self -> y0 ) , fixed2float ( x1 ) , fixed2float ( y1 ) )"	209:12:7244:7409	1213015	0	True				
ANR	1213237	CallExpression	"dlprintf4 ( ""[3]x0=%f y0=%f x1=%f y1=%f\\n"" , fixed2float ( self -> x0 ) , fixed2float ( self -> y0 ) , fixed2float ( x1 ) , fixed2float ( y1 ) )"		1213015	0					
ANR	1213238	Callee	dlprintf4		1213015	0					
ANR	1213239	Identifier	dlprintf4		1213015	0					
ANR	1213240	ArgumentList	"""[3]x0=%f y0=%f x1=%f y1=%f\\n"""		1213015	1					
ANR	1213241	Argument	"""[3]x0=%f y0=%f x1=%f y1=%f\\n"""		1213015	0					
ANR	1213242	PrimaryExpression	"""[3]x0=%f y0=%f x1=%f y1=%f\\n"""		1213015	0					
ANR	1213243	Argument	fixed2float ( self -> x0 )		1213015	1					
ANR	1213244	CallExpression	fixed2float ( self -> x0 )		1213015	0					
ANR	1213245	Callee	fixed2float		1213015	0					
ANR	1213246	Identifier	fixed2float		1213015	0					
ANR	1213247	ArgumentList	self -> x0		1213015	1					
ANR	1213248	Argument	self -> x0		1213015	0					
ANR	1213249	PtrMemberAccess	self -> x0		1213015	0					
ANR	1213250	Identifier	self		1213015	0					
ANR	1213251	Identifier	x0		1213015	1					
ANR	1213252	Argument	fixed2float ( self -> y0 )		1213015	2					
ANR	1213253	CallExpression	fixed2float ( self -> y0 )		1213015	0					
ANR	1213254	Callee	fixed2float		1213015	0					
ANR	1213255	Identifier	fixed2float		1213015	0					
ANR	1213256	ArgumentList	self -> y0		1213015	1					
ANR	1213257	Argument	self -> y0		1213015	0					
ANR	1213258	PtrMemberAccess	self -> y0		1213015	0					
ANR	1213259	Identifier	self		1213015	0					
ANR	1213260	Identifier	y0		1213015	1					
ANR	1213261	Argument	fixed2float ( x1 )		1213015	3					
ANR	1213262	CallExpression	fixed2float ( x1 )		1213015	0					
ANR	1213263	Callee	fixed2float		1213015	0					
ANR	1213264	Identifier	fixed2float		1213015	0					
ANR	1213265	ArgumentList	x1		1213015	1					
ANR	1213266	Argument	x1		1213015	0					
ANR	1213267	Identifier	x1		1213015	0					
ANR	1213268	Argument	fixed2float ( y1 )		1213015	4					
ANR	1213269	CallExpression	fixed2float ( y1 )		1213015	0					
ANR	1213270	Callee	fixed2float		1213015	0					
ANR	1213271	Identifier	fixed2float		1213015	0					
ANR	1213272	ArgumentList	y1		1213015	1					
ANR	1213273	Argument	y1		1213015	0					
ANR	1213274	Identifier	y1		1213015	0					
ANR	1213275	ExpressionStatement	"dlprintf5 ( ""   x2=%f y2=%f x3=%f y3=%f  k=%d\\n"" , fixed2float ( x2 ) , fixed2float ( y2 ) , fixed2float ( self -> x3 ) , fixed2float ( self -> y3 ) , self -> k )"	212:12:7423:7603	1213015	1	True				
ANR	1213276	CallExpression	"dlprintf5 ( ""   x2=%f y2=%f x3=%f y3=%f  k=%d\\n"" , fixed2float ( x2 ) , fixed2float ( y2 ) , fixed2float ( self -> x3 ) , fixed2float ( self -> y3 ) , self -> k )"		1213015	0					
ANR	1213277	Callee	dlprintf5		1213015	0					
ANR	1213278	Identifier	dlprintf5		1213015	0					
ANR	1213279	ArgumentList	"""   x2=%f y2=%f x3=%f y3=%f  k=%d\\n"""		1213015	1					
ANR	1213280	Argument	"""   x2=%f y2=%f x3=%f y3=%f  k=%d\\n"""		1213015	0					
ANR	1213281	PrimaryExpression	"""   x2=%f y2=%f x3=%f y3=%f  k=%d\\n"""		1213015	0					
ANR	1213282	Argument	fixed2float ( x2 )		1213015	1					
ANR	1213283	CallExpression	fixed2float ( x2 )		1213015	0					
ANR	1213284	Callee	fixed2float		1213015	0					
ANR	1213285	Identifier	fixed2float		1213015	0					
ANR	1213286	ArgumentList	x2		1213015	1					
ANR	1213287	Argument	x2		1213015	0					
ANR	1213288	Identifier	x2		1213015	0					
ANR	1213289	Argument	fixed2float ( y2 )		1213015	2					
ANR	1213290	CallExpression	fixed2float ( y2 )		1213015	0					
ANR	1213291	Callee	fixed2float		1213015	0					
ANR	1213292	Identifier	fixed2float		1213015	0					
ANR	1213293	ArgumentList	y2		1213015	1					
ANR	1213294	Argument	y2		1213015	0					
ANR	1213295	Identifier	y2		1213015	0					
ANR	1213296	Argument	fixed2float ( self -> x3 )		1213015	3					
ANR	1213297	CallExpression	fixed2float ( self -> x3 )		1213015	0					
ANR	1213298	Callee	fixed2float		1213015	0					
ANR	1213299	Identifier	fixed2float		1213015	0					
ANR	1213300	ArgumentList	self -> x3		1213015	1					
ANR	1213301	Argument	self -> x3		1213015	0					
ANR	1213302	PtrMemberAccess	self -> x3		1213015	0					
ANR	1213303	Identifier	self		1213015	0					
ANR	1213304	Identifier	x3		1213015	1					
ANR	1213305	Argument	fixed2float ( self -> y3 )		1213015	4					
ANR	1213306	CallExpression	fixed2float ( self -> y3 )		1213015	0					
ANR	1213307	Callee	fixed2float		1213015	0					
ANR	1213308	Identifier	fixed2float		1213015	0					
ANR	1213309	ArgumentList	self -> y3		1213015	1					
ANR	1213310	Argument	self -> y3		1213015	0					
ANR	1213311	PtrMemberAccess	self -> y3		1213015	0					
ANR	1213312	Identifier	self		1213015	0					
ANR	1213313	Identifier	y3		1213015	1					
ANR	1213314	Argument	self -> k		1213015	5					
ANR	1213315	PtrMemberAccess	self -> k		1213015	0					
ANR	1213316	Identifier	self		1213015	0					
ANR	1213317	Identifier	k		1213015	1					
ANR	1213318	Statement	endif	216:4:7619:7623	1213015	17	True				
ANR	1213319	IfStatement	if ( k == - 1 )		1213015	18					
ANR	1213320	Condition	k == - 1	218:8:7640:7646	1213015	0	True				
ANR	1213321	EqualityExpression	k == - 1		1213015	0		==			
ANR	1213322	Identifier	k		1213015	0					
ANR	1213323	UnaryOperationExpression	- 1		1213015	1					
ANR	1213324	UnaryOperator	-		1213015	0					
ANR	1213325	PrimaryExpression	1		1213015	1					
ANR	1213326	CompoundStatement		34:17:1198:1198	1213015	1					
ANR	1213327	ReturnStatement	return true ;	222:8:7796:7807	1213015	0	True				
ANR	1213328	Identifier	true		1213015	0					
ANR	1213329	ExpressionStatement	self -> rmask = ( 1 << k3 ) - 1	224:4:7819:7846	1213015	19	True				
ANR	1213330	AssignmentExpression	self -> rmask = ( 1 << k3 ) - 1		1213015	0		=			
ANR	1213331	PtrMemberAccess	self -> rmask		1213015	0					
ANR	1213332	Identifier	self		1213015	0					
ANR	1213333	Identifier	rmask		1213015	1					
ANR	1213334	AdditiveExpression	( 1 << k3 ) - 1		1213015	1		-			
ANR	1213335	ShiftExpression	1 << k3		1213015	0		<<			
ANR	1213336	PrimaryExpression	1		1213015	0					
ANR	1213337	Identifier	k3		1213015	1					
ANR	1213338	PrimaryExpression	1		1213015	1					
ANR	1213339	ExpressionStatement	self -> i = ( 1 << k )	225:4:7852:7870	1213015	20	True				
ANR	1213340	AssignmentExpression	self -> i = ( 1 << k )		1213015	0		=			
ANR	1213341	PtrMemberAccess	self -> i		1213015	0					
ANR	1213342	Identifier	self		1213015	0					
ANR	1213343	Identifier	i		1213015	1					
ANR	1213344	ShiftExpression	1 << k		1213015	1		<<			
ANR	1213345	PrimaryExpression	1		1213015	0					
ANR	1213346	Identifier	k		1213015	1					
ANR	1213347	ExpressionStatement	self -> rx = self -> ry = 0	226:4:7876:7899	1213015	21	True				
ANR	1213348	AssignmentExpression	self -> rx = self -> ry = 0		1213015	0		=			
ANR	1213349	PtrMemberAccess	self -> rx		1213015	0					
ANR	1213350	Identifier	self		1213015	0					
ANR	1213351	Identifier	rx		1213015	1					
ANR	1213352	AssignmentExpression	self -> ry = 0		1213015	1		=			
ANR	1213353	PtrMemberAccess	self -> ry		1213015	0					
ANR	1213354	Identifier	self		1213015	0					
ANR	1213355	Identifier	ry		1213015	1					
ANR	1213356	PrimaryExpression	0		1213015	1					
ANR	1213357	ExpressionStatement	"if_debug6 ( '3' , ""[3]ax=%f bx=%f cx=%f\\n   ay=%f by=%f cy=%f\\n"" , fixed2float ( self -> ax ) , fixed2float ( self -> bx ) , fixed2float ( self -> cx ) , fixed2float ( self -> ay ) , fixed2float ( self -> by ) , fixed2float ( self -> cy ) )"	227:4:7905:8133	1213015	22	True				
ANR	1213358	CallExpression	"if_debug6 ( '3' , ""[3]ax=%f bx=%f cx=%f\\n   ay=%f by=%f cy=%f\\n"" , fixed2float ( self -> ax ) , fixed2float ( self -> bx ) , fixed2float ( self -> cx ) , fixed2float ( self -> ay ) , fixed2float ( self -> by ) , fixed2float ( self -> cy ) )"		1213015	0					
ANR	1213359	Callee	if_debug6		1213015	0					
ANR	1213360	Identifier	if_debug6		1213015	0					
ANR	1213361	ArgumentList	'3'		1213015	1					
ANR	1213362	Argument	'3'		1213015	0					
ANR	1213363	PrimaryExpression	'3'		1213015	0					
ANR	1213364	Argument	"""[3]ax=%f bx=%f cx=%f\\n   ay=%f by=%f cy=%f\\n"""		1213015	1					
ANR	1213365	PrimaryExpression	"""[3]ax=%f bx=%f cx=%f\\n   ay=%f by=%f cy=%f\\n"""		1213015	0					
ANR	1213366	Argument	fixed2float ( self -> ax )		1213015	2					
ANR	1213367	CallExpression	fixed2float ( self -> ax )		1213015	0					
ANR	1213368	Callee	fixed2float		1213015	0					
ANR	1213369	Identifier	fixed2float		1213015	0					
ANR	1213370	ArgumentList	self -> ax		1213015	1					
ANR	1213371	Argument	self -> ax		1213015	0					
ANR	1213372	PtrMemberAccess	self -> ax		1213015	0					
ANR	1213373	Identifier	self		1213015	0					
ANR	1213374	Identifier	ax		1213015	1					
ANR	1213375	Argument	fixed2float ( self -> bx )		1213015	3					
ANR	1213376	CallExpression	fixed2float ( self -> bx )		1213015	0					
ANR	1213377	Callee	fixed2float		1213015	0					
ANR	1213378	Identifier	fixed2float		1213015	0					
ANR	1213379	ArgumentList	self -> bx		1213015	1					
ANR	1213380	Argument	self -> bx		1213015	0					
ANR	1213381	PtrMemberAccess	self -> bx		1213015	0					
ANR	1213382	Identifier	self		1213015	0					
ANR	1213383	Identifier	bx		1213015	1					
ANR	1213384	Argument	fixed2float ( self -> cx )		1213015	4					
ANR	1213385	CallExpression	fixed2float ( self -> cx )		1213015	0					
ANR	1213386	Callee	fixed2float		1213015	0					
ANR	1213387	Identifier	fixed2float		1213015	0					
ANR	1213388	ArgumentList	self -> cx		1213015	1					
ANR	1213389	Argument	self -> cx		1213015	0					
ANR	1213390	PtrMemberAccess	self -> cx		1213015	0					
ANR	1213391	Identifier	self		1213015	0					
ANR	1213392	Identifier	cx		1213015	1					
ANR	1213393	Argument	fixed2float ( self -> ay )		1213015	5					
ANR	1213394	CallExpression	fixed2float ( self -> ay )		1213015	0					
ANR	1213395	Callee	fixed2float		1213015	0					
ANR	1213396	Identifier	fixed2float		1213015	0					
ANR	1213397	ArgumentList	self -> ay		1213015	1					
ANR	1213398	Argument	self -> ay		1213015	0					
ANR	1213399	PtrMemberAccess	self -> ay		1213015	0					
ANR	1213400	Identifier	self		1213015	0					
ANR	1213401	Identifier	ay		1213015	1					
ANR	1213402	Argument	fixed2float ( self -> by )		1213015	6					
ANR	1213403	CallExpression	fixed2float ( self -> by )		1213015	0					
ANR	1213404	Callee	fixed2float		1213015	0					
ANR	1213405	Identifier	fixed2float		1213015	0					
ANR	1213406	ArgumentList	self -> by		1213015	1					
ANR	1213407	Argument	self -> by		1213015	0					
ANR	1213408	PtrMemberAccess	self -> by		1213015	0					
ANR	1213409	Identifier	self		1213015	0					
ANR	1213410	Identifier	by		1213015	1					
ANR	1213411	Argument	fixed2float ( self -> cy )		1213015	7					
ANR	1213412	CallExpression	fixed2float ( self -> cy )		1213015	0					
ANR	1213413	Callee	fixed2float		1213015	0					
ANR	1213414	Identifier	fixed2float		1213015	0					
ANR	1213415	ArgumentList	self -> cy		1213015	1					
ANR	1213416	Argument	self -> cy		1213015	0					
ANR	1213417	PtrMemberAccess	self -> cy		1213015	0					
ANR	1213418	Identifier	self		1213015	0					
ANR	1213419	Identifier	cy		1213015	1					
ANR	1213420	ExpressionStatement	bx2 = self -> bx << 1	230:4:8139:8158	1213015	23	True				
ANR	1213421	AssignmentExpression	bx2 = self -> bx << 1		1213015	0		=			
ANR	1213422	Identifier	bx2		1213015	0					
ANR	1213423	ShiftExpression	self -> bx << 1		1213015	1		<<			
ANR	1213424	PtrMemberAccess	self -> bx		1213015	0					
ANR	1213425	Identifier	self		1213015	0					
ANR	1213426	Identifier	bx		1213015	1					
ANR	1213427	PrimaryExpression	1		1213015	1					
ANR	1213428	ExpressionStatement	by2 = self -> by << 1	231:4:8164:8183	1213015	24	True				
ANR	1213429	AssignmentExpression	by2 = self -> by << 1		1213015	0		=			
ANR	1213430	Identifier	by2		1213015	0					
ANR	1213431	ShiftExpression	self -> by << 1		1213015	1		<<			
ANR	1213432	PtrMemberAccess	self -> by		1213015	0					
ANR	1213433	Identifier	self		1213015	0					
ANR	1213434	Identifier	by		1213015	1					
ANR	1213435	PrimaryExpression	1		1213015	1					
ANR	1213436	ExpressionStatement	ax6 = ( ( self -> ax << 1 ) + self -> ax ) << 1	232:4:8189:8228	1213015	25	True				
ANR	1213437	AssignmentExpression	ax6 = ( ( self -> ax << 1 ) + self -> ax ) << 1		1213015	0		=			
ANR	1213438	Identifier	ax6		1213015	0					
ANR	1213439	ShiftExpression	( ( self -> ax << 1 ) + self -> ax ) << 1		1213015	1		<<			
ANR	1213440	AdditiveExpression	( self -> ax << 1 ) + self -> ax		1213015	0		+			
ANR	1213441	ShiftExpression	self -> ax << 1		1213015	0		<<			
ANR	1213442	PtrMemberAccess	self -> ax		1213015	0					
ANR	1213443	Identifier	self		1213015	0					
ANR	1213444	Identifier	ax		1213015	1					
ANR	1213445	PrimaryExpression	1		1213015	1					
ANR	1213446	PtrMemberAccess	self -> ax		1213015	1					
ANR	1213447	Identifier	self		1213015	0					
ANR	1213448	Identifier	ax		1213015	1					
ANR	1213449	PrimaryExpression	1		1213015	1					
ANR	1213450	ExpressionStatement	ay6 = ( ( self -> ay << 1 ) + self -> ay ) << 1	233:4:8234:8273	1213015	26	True				
ANR	1213451	AssignmentExpression	ay6 = ( ( self -> ay << 1 ) + self -> ay ) << 1		1213015	0		=			
ANR	1213452	Identifier	ay6		1213015	0					
ANR	1213453	ShiftExpression	( ( self -> ay << 1 ) + self -> ay ) << 1		1213015	1		<<			
ANR	1213454	AdditiveExpression	( self -> ay << 1 ) + self -> ay		1213015	0		+			
ANR	1213455	ShiftExpression	self -> ay << 1		1213015	0		<<			
ANR	1213456	PtrMemberAccess	self -> ay		1213015	0					
ANR	1213457	Identifier	self		1213015	0					
ANR	1213458	Identifier	ay		1213015	1					
ANR	1213459	PrimaryExpression	1		1213015	1					
ANR	1213460	PtrMemberAccess	self -> ay		1213015	1					
ANR	1213461	Identifier	self		1213015	0					
ANR	1213462	Identifier	ay		1213015	1					
ANR	1213463	PrimaryExpression	1		1213015	1					
ANR	1213464	ExpressionStatement	"self -> idx = arith_rshift ( self -> cx , self -> k )"	234:4:8279:8322	1213015	27	True				
ANR	1213465	AssignmentExpression	"self -> idx = arith_rshift ( self -> cx , self -> k )"		1213015	0		=			
ANR	1213466	PtrMemberAccess	self -> idx		1213015	0					
ANR	1213467	Identifier	self		1213015	0					
ANR	1213468	Identifier	idx		1213015	1					
ANR	1213469	CallExpression	"arith_rshift ( self -> cx , self -> k )"		1213015	1					
ANR	1213470	Callee	arith_rshift		1213015	0					
ANR	1213471	Identifier	arith_rshift		1213015	0					
ANR	1213472	ArgumentList	self -> cx		1213015	1					
ANR	1213473	Argument	self -> cx		1213015	0					
ANR	1213474	PtrMemberAccess	self -> cx		1213015	0					
ANR	1213475	Identifier	self		1213015	0					
ANR	1213476	Identifier	cx		1213015	1					
ANR	1213477	Argument	self -> k		1213015	1					
ANR	1213478	PtrMemberAccess	self -> k		1213015	0					
ANR	1213479	Identifier	self		1213015	0					
ANR	1213480	Identifier	k		1213015	1					
ANR	1213481	ExpressionStatement	"self -> idy = arith_rshift ( self -> cy , self -> k )"	235:4:8328:8371	1213015	28	True				
ANR	1213482	AssignmentExpression	"self -> idy = arith_rshift ( self -> cy , self -> k )"		1213015	0		=			
ANR	1213483	PtrMemberAccess	self -> idy		1213015	0					
ANR	1213484	Identifier	self		1213015	0					
ANR	1213485	Identifier	idy		1213015	1					
ANR	1213486	CallExpression	"arith_rshift ( self -> cy , self -> k )"		1213015	1					
ANR	1213487	Callee	arith_rshift		1213015	0					
ANR	1213488	Identifier	arith_rshift		1213015	0					
ANR	1213489	ArgumentList	self -> cy		1213015	1					
ANR	1213490	Argument	self -> cy		1213015	0					
ANR	1213491	PtrMemberAccess	self -> cy		1213015	0					
ANR	1213492	Identifier	self		1213015	0					
ANR	1213493	Identifier	cy		1213015	1					
ANR	1213494	Argument	self -> k		1213015	1					
ANR	1213495	PtrMemberAccess	self -> k		1213015	0					
ANR	1213496	Identifier	self		1213015	0					
ANR	1213497	Identifier	k		1213015	1					
ANR	1213498	ExpressionStatement	self -> rdx = ( ( uint ) self -> cx << k2 ) & self -> rmask	236:4:8377:8425	1213015	29	True				
ANR	1213499	AssignmentExpression	self -> rdx = ( ( uint ) self -> cx << k2 ) & self -> rmask		1213015	0		=			
ANR	1213500	PtrMemberAccess	self -> rdx		1213015	0					
ANR	1213501	Identifier	self		1213015	0					
ANR	1213502	Identifier	rdx		1213015	1					
ANR	1213503	BitAndExpression	( ( uint ) self -> cx << k2 ) & self -> rmask		1213015	1		&			
ANR	1213504	ShiftExpression	( uint ) self -> cx << k2		1213015	0		<<			
ANR	1213505	CastExpression	( uint ) self -> cx		1213015	0					
ANR	1213506	CastTarget	uint		1213015	0					
ANR	1213507	PtrMemberAccess	self -> cx		1213015	1					
ANR	1213508	Identifier	self		1213015	0					
ANR	1213509	Identifier	cx		1213015	1					
ANR	1213510	Identifier	k2		1213015	1					
ANR	1213511	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213512	Identifier	self		1213015	0					
ANR	1213513	Identifier	rmask		1213015	1					
ANR	1213514	ExpressionStatement	self -> rdy = ( ( uint ) self -> cy << k2 ) & self -> rmask	237:4:8431:8479	1213015	30	True				
ANR	1213515	AssignmentExpression	self -> rdy = ( ( uint ) self -> cy << k2 ) & self -> rmask		1213015	0		=			
ANR	1213516	PtrMemberAccess	self -> rdy		1213015	0					
ANR	1213517	Identifier	self		1213015	0					
ANR	1213518	Identifier	rdy		1213015	1					
ANR	1213519	BitAndExpression	( ( uint ) self -> cy << k2 ) & self -> rmask		1213015	1		&			
ANR	1213520	ShiftExpression	( uint ) self -> cy << k2		1213015	0		<<			
ANR	1213521	CastExpression	( uint ) self -> cy		1213015	0					
ANR	1213522	CastTarget	uint		1213015	0					
ANR	1213523	PtrMemberAccess	self -> cy		1213015	1					
ANR	1213524	Identifier	self		1213015	0					
ANR	1213525	Identifier	cy		1213015	1					
ANR	1213526	Identifier	k2		1213015	1					
ANR	1213527	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213528	Identifier	self		1213015	0					
ANR	1213529	Identifier	rmask		1213015	1					
ANR	1213530	ExpressionStatement	"self -> id2x = arith_rshift ( bx2 , k2 )"	239:4:8506:8540	1213015	31	True				
ANR	1213531	AssignmentExpression	"self -> id2x = arith_rshift ( bx2 , k2 )"		1213015	0		=			
ANR	1213532	PtrMemberAccess	self -> id2x		1213015	0					
ANR	1213533	Identifier	self		1213015	0					
ANR	1213534	Identifier	id2x		1213015	1					
ANR	1213535	CallExpression	"arith_rshift ( bx2 , k2 )"		1213015	1					
ANR	1213536	Callee	arith_rshift		1213015	0					
ANR	1213537	Identifier	arith_rshift		1213015	0					
ANR	1213538	ArgumentList	bx2		1213015	1					
ANR	1213539	Argument	bx2		1213015	0					
ANR	1213540	Identifier	bx2		1213015	0					
ANR	1213541	Argument	k2		1213015	1					
ANR	1213542	Identifier	k2		1213015	0					
ANR	1213543	ExpressionStatement	"self -> id2y = arith_rshift ( by2 , k2 )"	240:4:8546:8580	1213015	32	True				
ANR	1213544	AssignmentExpression	"self -> id2y = arith_rshift ( by2 , k2 )"		1213015	0		=			
ANR	1213545	PtrMemberAccess	self -> id2y		1213015	0					
ANR	1213546	Identifier	self		1213015	0					
ANR	1213547	Identifier	id2y		1213015	1					
ANR	1213548	CallExpression	"arith_rshift ( by2 , k2 )"		1213015	1					
ANR	1213549	Callee	arith_rshift		1213015	0					
ANR	1213550	Identifier	arith_rshift		1213015	0					
ANR	1213551	ArgumentList	by2		1213015	1					
ANR	1213552	Argument	by2		1213015	0					
ANR	1213553	Identifier	by2		1213015	0					
ANR	1213554	Argument	k2		1213015	1					
ANR	1213555	Identifier	k2		1213015	0					
ANR	1213556	ExpressionStatement	self -> rd2x = ( ( uint ) bx2 << self -> k ) & self -> rmask	241:4:8586:8635	1213015	33	True				
ANR	1213557	AssignmentExpression	self -> rd2x = ( ( uint ) bx2 << self -> k ) & self -> rmask		1213015	0		=			
ANR	1213558	PtrMemberAccess	self -> rd2x		1213015	0					
ANR	1213559	Identifier	self		1213015	0					
ANR	1213560	Identifier	rd2x		1213015	1					
ANR	1213561	BitAndExpression	( ( uint ) bx2 << self -> k ) & self -> rmask		1213015	1		&			
ANR	1213562	ShiftExpression	( uint ) bx2 << self -> k		1213015	0		<<			
ANR	1213563	CastExpression	( uint ) bx2		1213015	0					
ANR	1213564	CastTarget	uint		1213015	0					
ANR	1213565	Identifier	bx2		1213015	1					
ANR	1213566	PtrMemberAccess	self -> k		1213015	1					
ANR	1213567	Identifier	self		1213015	0					
ANR	1213568	Identifier	k		1213015	1					
ANR	1213569	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213570	Identifier	self		1213015	0					
ANR	1213571	Identifier	rmask		1213015	1					
ANR	1213572	ExpressionStatement	self -> rd2y = ( ( uint ) by2 << self -> k ) & self -> rmask	242:4:8641:8690	1213015	34	True				
ANR	1213573	AssignmentExpression	self -> rd2y = ( ( uint ) by2 << self -> k ) & self -> rmask		1213015	0		=			
ANR	1213574	PtrMemberAccess	self -> rd2y		1213015	0					
ANR	1213575	Identifier	self		1213015	0					
ANR	1213576	Identifier	rd2y		1213015	1					
ANR	1213577	BitAndExpression	( ( uint ) by2 << self -> k ) & self -> rmask		1213015	1		&			
ANR	1213578	ShiftExpression	( uint ) by2 << self -> k		1213015	0		<<			
ANR	1213579	CastExpression	( uint ) by2		1213015	0					
ANR	1213580	CastTarget	uint		1213015	0					
ANR	1213581	Identifier	by2		1213015	1					
ANR	1213582	PtrMemberAccess	self -> k		1213015	1					
ANR	1213583	Identifier	self		1213015	0					
ANR	1213584	Identifier	k		1213015	1					
ANR	1213585	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213586	Identifier	self		1213015	0					
ANR	1213587	Identifier	rmask		1213015	1					
ANR	1213588	Statement	define	243:4:8696:8701	1213015	35	True				
ANR	1213589	Statement	adjust_rem	243:11:8703:8712	1213015	36	True				
ANR	1213590	Statement	(	243:21:8713:8713	1213015	37	True				
ANR	1213591	Statement	r	243:22:8714:8714	1213015	38	True				
ANR	1213592	Statement	","	243:23:8715:8715	1213015	39	True				
ANR	1213593	Statement	q	243:25:8717:8717	1213015	40	True				
ANR	1213594	Statement	","	243:26:8718:8718	1213015	41	True				
ANR	1213595	Statement	rmask	243:28:8720:8724	1213015	42	True				
ANR	1213596	Statement	)	243:33:8725:8725	1213015	43	True				
ANR	1213597	IfStatement	if ( r > rmask )		1213015	44					
ANR	1213598	Condition	r > rmask	243:40:8732:8740	1213015	0	True				
ANR	1213599	RelationalExpression	r > rmask		1213015	0		>			
ANR	1213600	Identifier	r		1213015	0					
ANR	1213601	Identifier	rmask		1213015	1					
ANR	1213602	Statement	q	243:52:8744:8744	1213015	1	True				
ANR	1213603	Statement	++	243:54:8746:8747	1213015	45	True				
ANR	1213604	Statement	","	243:56:8748:8748	1213015	46	True				
ANR	1213605	Statement	r	243:58:8750:8750	1213015	47	True				
ANR	1213606	Statement	&=	243:60:8752:8753	1213015	48	True				
ANR	1213607	Statement	rmask	243:63:8755:8759	1213015	49	True				
ANR	1213608	ExpressionStatement	self -> idx += arith_rshift_1 ( self -> id2x )	247:4:8886:8925	1213015	50	True				
ANR	1213609	AssignmentExpression	self -> idx += arith_rshift_1 ( self -> id2x )		1213015	0		+=			
ANR	1213610	PtrMemberAccess	self -> idx		1213015	0					
ANR	1213611	Identifier	self		1213015	0					
ANR	1213612	Identifier	idx		1213015	1					
ANR	1213613	CallExpression	arith_rshift_1 ( self -> id2x )		1213015	1					
ANR	1213614	Callee	arith_rshift_1		1213015	0					
ANR	1213615	Identifier	arith_rshift_1		1213015	0					
ANR	1213616	ArgumentList	self -> id2x		1213015	1					
ANR	1213617	Argument	self -> id2x		1213015	0					
ANR	1213618	PtrMemberAccess	self -> id2x		1213015	0					
ANR	1213619	Identifier	self		1213015	0					
ANR	1213620	Identifier	id2x		1213015	1					
ANR	1213621	ExpressionStatement	self -> idy += arith_rshift_1 ( self -> id2y )	248:4:8931:8970	1213015	51	True				
ANR	1213622	AssignmentExpression	self -> idy += arith_rshift_1 ( self -> id2y )		1213015	0		+=			
ANR	1213623	PtrMemberAccess	self -> idy		1213015	0					
ANR	1213624	Identifier	self		1213015	0					
ANR	1213625	Identifier	idy		1213015	1					
ANR	1213626	CallExpression	arith_rshift_1 ( self -> id2y )		1213015	1					
ANR	1213627	Callee	arith_rshift_1		1213015	0					
ANR	1213628	Identifier	arith_rshift_1		1213015	0					
ANR	1213629	ArgumentList	self -> id2y		1213015	1					
ANR	1213630	Argument	self -> id2y		1213015	0					
ANR	1213631	PtrMemberAccess	self -> id2y		1213015	0					
ANR	1213632	Identifier	self		1213015	0					
ANR	1213633	Identifier	id2y		1213015	1					
ANR	1213634	ExpressionStatement	"self -> rdx += ( ( uint ) self -> bx << self -> k ) & self -> rmask , self -> rdy += ( ( uint ) self -> by << self -> k ) & self -> rmask"	249:4:8976:9090	1213015	52	True				
ANR	1213635	Expression	"self -> rdx += ( ( uint ) self -> bx << self -> k ) & self -> rmask , self -> rdy += ( ( uint ) self -> by << self -> k ) & self -> rmask"		1213015	0					
ANR	1213636	AssignmentExpression	self -> rdx += ( ( uint ) self -> bx << self -> k ) & self -> rmask		1213015	0		+=			
ANR	1213637	PtrMemberAccess	self -> rdx		1213015	0					
ANR	1213638	Identifier	self		1213015	0					
ANR	1213639	Identifier	rdx		1213015	1					
ANR	1213640	BitAndExpression	( ( uint ) self -> bx << self -> k ) & self -> rmask		1213015	1		&			
ANR	1213641	ShiftExpression	( uint ) self -> bx << self -> k		1213015	0		<<			
ANR	1213642	CastExpression	( uint ) self -> bx		1213015	0					
ANR	1213643	CastTarget	uint		1213015	0					
ANR	1213644	PtrMemberAccess	self -> bx		1213015	1					
ANR	1213645	Identifier	self		1213015	0					
ANR	1213646	Identifier	bx		1213015	1					
ANR	1213647	PtrMemberAccess	self -> k		1213015	1					
ANR	1213648	Identifier	self		1213015	0					
ANR	1213649	Identifier	k		1213015	1					
ANR	1213650	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213651	Identifier	self		1213015	0					
ANR	1213652	Identifier	rmask		1213015	1					
ANR	1213653	AssignmentExpression	self -> rdy += ( ( uint ) self -> by << self -> k ) & self -> rmask		1213015	1		+=			
ANR	1213654	PtrMemberAccess	self -> rdy		1213015	0					
ANR	1213655	Identifier	self		1213015	0					
ANR	1213656	Identifier	rdy		1213015	1					
ANR	1213657	BitAndExpression	( ( uint ) self -> by << self -> k ) & self -> rmask		1213015	1		&			
ANR	1213658	ShiftExpression	( uint ) self -> by << self -> k		1213015	0		<<			
ANR	1213659	CastExpression	( uint ) self -> by		1213015	0					
ANR	1213660	CastTarget	uint		1213015	0					
ANR	1213661	PtrMemberAccess	self -> by		1213015	1					
ANR	1213662	Identifier	self		1213015	0					
ANR	1213663	Identifier	by		1213015	1					
ANR	1213664	PtrMemberAccess	self -> k		1213015	1					
ANR	1213665	Identifier	self		1213015	0					
ANR	1213666	Identifier	k		1213015	1					
ANR	1213667	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213668	Identifier	self		1213015	0					
ANR	1213669	Identifier	rmask		1213015	1					
ANR	1213670	ExpressionStatement	"adjust_rem ( self -> rdx , self -> idx , self -> rmask )"	251:4:9096:9141	1213015	53	True				
ANR	1213671	CallExpression	"adjust_rem ( self -> rdx , self -> idx , self -> rmask )"		1213015	0					
ANR	1213672	Callee	adjust_rem		1213015	0					
ANR	1213673	Identifier	adjust_rem		1213015	0					
ANR	1213674	ArgumentList	self -> rdx		1213015	1					
ANR	1213675	Argument	self -> rdx		1213015	0					
ANR	1213676	PtrMemberAccess	self -> rdx		1213015	0					
ANR	1213677	Identifier	self		1213015	0					
ANR	1213678	Identifier	rdx		1213015	1					
ANR	1213679	Argument	self -> idx		1213015	1					
ANR	1213680	PtrMemberAccess	self -> idx		1213015	0					
ANR	1213681	Identifier	self		1213015	0					
ANR	1213682	Identifier	idx		1213015	1					
ANR	1213683	Argument	self -> rmask		1213015	2					
ANR	1213684	PtrMemberAccess	self -> rmask		1213015	0					
ANR	1213685	Identifier	self		1213015	0					
ANR	1213686	Identifier	rmask		1213015	1					
ANR	1213687	ExpressionStatement	"adjust_rem ( self -> rdy , self -> idy , self -> rmask )"	252:4:9147:9192	1213015	54	True				
ANR	1213688	CallExpression	"adjust_rem ( self -> rdy , self -> idy , self -> rmask )"		1213015	0					
ANR	1213689	Callee	adjust_rem		1213015	0					
ANR	1213690	Identifier	adjust_rem		1213015	0					
ANR	1213691	ArgumentList	self -> rdy		1213015	1					
ANR	1213692	Argument	self -> rdy		1213015	0					
ANR	1213693	PtrMemberAccess	self -> rdy		1213015	0					
ANR	1213694	Identifier	self		1213015	0					
ANR	1213695	Identifier	rdy		1213015	1					
ANR	1213696	Argument	self -> idy		1213015	1					
ANR	1213697	PtrMemberAccess	self -> idy		1213015	0					
ANR	1213698	Identifier	self		1213015	0					
ANR	1213699	Identifier	idy		1213015	1					
ANR	1213700	Argument	self -> rmask		1213015	2					
ANR	1213701	PtrMemberAccess	self -> rmask		1213015	0					
ANR	1213702	Identifier	self		1213015	0					
ANR	1213703	Identifier	rmask		1213015	1					
ANR	1213704	ExpressionStatement	"self -> idx += arith_rshift ( self -> ax , k3 )"	254:4:9219:9258	1213015	55	True				
ANR	1213705	AssignmentExpression	"self -> idx += arith_rshift ( self -> ax , k3 )"		1213015	0		+=			
ANR	1213706	PtrMemberAccess	self -> idx		1213015	0					
ANR	1213707	Identifier	self		1213015	0					
ANR	1213708	Identifier	idx		1213015	1					
ANR	1213709	CallExpression	"arith_rshift ( self -> ax , k3 )"		1213015	1					
ANR	1213710	Callee	arith_rshift		1213015	0					
ANR	1213711	Identifier	arith_rshift		1213015	0					
ANR	1213712	ArgumentList	self -> ax		1213015	1					
ANR	1213713	Argument	self -> ax		1213015	0					
ANR	1213714	PtrMemberAccess	self -> ax		1213015	0					
ANR	1213715	Identifier	self		1213015	0					
ANR	1213716	Identifier	ax		1213015	1					
ANR	1213717	Argument	k3		1213015	1					
ANR	1213718	Identifier	k3		1213015	0					
ANR	1213719	ExpressionStatement	"self -> idy += arith_rshift ( self -> ay , k3 )"	255:4:9264:9303	1213015	56	True				
ANR	1213720	AssignmentExpression	"self -> idy += arith_rshift ( self -> ay , k3 )"		1213015	0		+=			
ANR	1213721	PtrMemberAccess	self -> idy		1213015	0					
ANR	1213722	Identifier	self		1213015	0					
ANR	1213723	Identifier	idy		1213015	1					
ANR	1213724	CallExpression	"arith_rshift ( self -> ay , k3 )"		1213015	1					
ANR	1213725	Callee	arith_rshift		1213015	0					
ANR	1213726	Identifier	arith_rshift		1213015	0					
ANR	1213727	ArgumentList	self -> ay		1213015	1					
ANR	1213728	Argument	self -> ay		1213015	0					
ANR	1213729	PtrMemberAccess	self -> ay		1213015	0					
ANR	1213730	Identifier	self		1213015	0					
ANR	1213731	Identifier	ay		1213015	1					
ANR	1213732	Argument	k3		1213015	1					
ANR	1213733	Identifier	k3		1213015	0					
ANR	1213734	ExpressionStatement	self -> rdx += ( uint ) self -> ax & self -> rmask	256:4:9309:9350	1213015	57	True				
ANR	1213735	AssignmentExpression	self -> rdx += ( uint ) self -> ax & self -> rmask		1213015	0		+=			
ANR	1213736	PtrMemberAccess	self -> rdx		1213015	0					
ANR	1213737	Identifier	self		1213015	0					
ANR	1213738	Identifier	rdx		1213015	1					
ANR	1213739	BitAndExpression	( uint ) self -> ax & self -> rmask		1213015	1		&			
ANR	1213740	CastExpression	( uint ) self -> ax		1213015	0					
ANR	1213741	CastTarget	uint		1213015	0					
ANR	1213742	PtrMemberAccess	self -> ax		1213015	1					
ANR	1213743	Identifier	self		1213015	0					
ANR	1213744	Identifier	ax		1213015	1					
ANR	1213745	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213746	Identifier	self		1213015	0					
ANR	1213747	Identifier	rmask		1213015	1					
ANR	1213748	ExpressionStatement	self -> rdy += ( uint ) self -> ay & self -> rmask	257:4:9356:9397	1213015	58	True				
ANR	1213749	AssignmentExpression	self -> rdy += ( uint ) self -> ay & self -> rmask		1213015	0		+=			
ANR	1213750	PtrMemberAccess	self -> rdy		1213015	0					
ANR	1213751	Identifier	self		1213015	0					
ANR	1213752	Identifier	rdy		1213015	1					
ANR	1213753	BitAndExpression	( uint ) self -> ay & self -> rmask		1213015	1		&			
ANR	1213754	CastExpression	( uint ) self -> ay		1213015	0					
ANR	1213755	CastTarget	uint		1213015	0					
ANR	1213756	PtrMemberAccess	self -> ay		1213015	1					
ANR	1213757	Identifier	self		1213015	0					
ANR	1213758	Identifier	ay		1213015	1					
ANR	1213759	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213760	Identifier	self		1213015	0					
ANR	1213761	Identifier	rmask		1213015	1					
ANR	1213762	ExpressionStatement	"adjust_rem ( self -> rdx , self -> idx , self -> rmask )"	258:4:9403:9448	1213015	59	True				
ANR	1213763	CallExpression	"adjust_rem ( self -> rdx , self -> idx , self -> rmask )"		1213015	0					
ANR	1213764	Callee	adjust_rem		1213015	0					
ANR	1213765	Identifier	adjust_rem		1213015	0					
ANR	1213766	ArgumentList	self -> rdx		1213015	1					
ANR	1213767	Argument	self -> rdx		1213015	0					
ANR	1213768	PtrMemberAccess	self -> rdx		1213015	0					
ANR	1213769	Identifier	self		1213015	0					
ANR	1213770	Identifier	rdx		1213015	1					
ANR	1213771	Argument	self -> idx		1213015	1					
ANR	1213772	PtrMemberAccess	self -> idx		1213015	0					
ANR	1213773	Identifier	self		1213015	0					
ANR	1213774	Identifier	idx		1213015	1					
ANR	1213775	Argument	self -> rmask		1213015	2					
ANR	1213776	PtrMemberAccess	self -> rmask		1213015	0					
ANR	1213777	Identifier	self		1213015	0					
ANR	1213778	Identifier	rmask		1213015	1					
ANR	1213779	ExpressionStatement	"adjust_rem ( self -> rdy , self -> idy , self -> rmask )"	259:4:9454:9499	1213015	60	True				
ANR	1213780	CallExpression	"adjust_rem ( self -> rdy , self -> idy , self -> rmask )"		1213015	0					
ANR	1213781	Callee	adjust_rem		1213015	0					
ANR	1213782	Identifier	adjust_rem		1213015	0					
ANR	1213783	ArgumentList	self -> rdy		1213015	1					
ANR	1213784	Argument	self -> rdy		1213015	0					
ANR	1213785	PtrMemberAccess	self -> rdy		1213015	0					
ANR	1213786	Identifier	self		1213015	0					
ANR	1213787	Identifier	rdy		1213015	1					
ANR	1213788	Argument	self -> idy		1213015	1					
ANR	1213789	PtrMemberAccess	self -> idy		1213015	0					
ANR	1213790	Identifier	self		1213015	0					
ANR	1213791	Identifier	idy		1213015	1					
ANR	1213792	Argument	self -> rmask		1213015	2					
ANR	1213793	PtrMemberAccess	self -> rmask		1213015	0					
ANR	1213794	Identifier	self		1213015	0					
ANR	1213795	Identifier	rmask		1213015	1					
ANR	1213796	ExpressionStatement	"self -> id2x += self -> id3x = arith_rshift ( ax6 , k3 )"	260:4:9505:9553	1213015	61	True				
ANR	1213797	AssignmentExpression	"self -> id2x += self -> id3x = arith_rshift ( ax6 , k3 )"		1213015	0		+=			
ANR	1213798	PtrMemberAccess	self -> id2x		1213015	0					
ANR	1213799	Identifier	self		1213015	0					
ANR	1213800	Identifier	id2x		1213015	1					
ANR	1213801	AssignmentExpression	"self -> id3x = arith_rshift ( ax6 , k3 )"		1213015	1		=			
ANR	1213802	PtrMemberAccess	self -> id3x		1213015	0					
ANR	1213803	Identifier	self		1213015	0					
ANR	1213804	Identifier	id3x		1213015	1					
ANR	1213805	CallExpression	"arith_rshift ( ax6 , k3 )"		1213015	1					
ANR	1213806	Callee	arith_rshift		1213015	0					
ANR	1213807	Identifier	arith_rshift		1213015	0					
ANR	1213808	ArgumentList	ax6		1213015	1					
ANR	1213809	Argument	ax6		1213015	0					
ANR	1213810	Identifier	ax6		1213015	0					
ANR	1213811	Argument	k3		1213015	1					
ANR	1213812	Identifier	k3		1213015	0					
ANR	1213813	ExpressionStatement	"self -> id2y += self -> id3y = arith_rshift ( ay6 , k3 )"	261:4:9559:9607	1213015	62	True				
ANR	1213814	AssignmentExpression	"self -> id2y += self -> id3y = arith_rshift ( ay6 , k3 )"		1213015	0		+=			
ANR	1213815	PtrMemberAccess	self -> id2y		1213015	0					
ANR	1213816	Identifier	self		1213015	0					
ANR	1213817	Identifier	id2y		1213015	1					
ANR	1213818	AssignmentExpression	"self -> id3y = arith_rshift ( ay6 , k3 )"		1213015	1		=			
ANR	1213819	PtrMemberAccess	self -> id3y		1213015	0					
ANR	1213820	Identifier	self		1213015	0					
ANR	1213821	Identifier	id3y		1213015	1					
ANR	1213822	CallExpression	"arith_rshift ( ay6 , k3 )"		1213015	1					
ANR	1213823	Callee	arith_rshift		1213015	0					
ANR	1213824	Identifier	arith_rshift		1213015	0					
ANR	1213825	ArgumentList	ay6		1213015	1					
ANR	1213826	Argument	ay6		1213015	0					
ANR	1213827	Identifier	ay6		1213015	0					
ANR	1213828	Argument	k3		1213015	1					
ANR	1213829	Identifier	k3		1213015	0					
ANR	1213830	ExpressionStatement	"self -> rd2x += self -> rd3x = ( uint ) ax6 & self -> rmask , self -> rd2y += self -> rd3y = ( uint ) ay6 & self -> rmask"	262:4:9613:9719	1213015	63	True				
ANR	1213831	Expression	"self -> rd2x += self -> rd3x = ( uint ) ax6 & self -> rmask , self -> rd2y += self -> rd3y = ( uint ) ay6 & self -> rmask"		1213015	0					
ANR	1213832	AssignmentExpression	self -> rd2x += self -> rd3x = ( uint ) ax6 & self -> rmask		1213015	0		+=			
ANR	1213833	PtrMemberAccess	self -> rd2x		1213015	0					
ANR	1213834	Identifier	self		1213015	0					
ANR	1213835	Identifier	rd2x		1213015	1					
ANR	1213836	AssignmentExpression	self -> rd3x = ( uint ) ax6 & self -> rmask		1213015	1		=			
ANR	1213837	PtrMemberAccess	self -> rd3x		1213015	0					
ANR	1213838	Identifier	self		1213015	0					
ANR	1213839	Identifier	rd3x		1213015	1					
ANR	1213840	BitAndExpression	( uint ) ax6 & self -> rmask		1213015	1		&			
ANR	1213841	CastExpression	( uint ) ax6		1213015	0					
ANR	1213842	CastTarget	uint		1213015	0					
ANR	1213843	Identifier	ax6		1213015	1					
ANR	1213844	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213845	Identifier	self		1213015	0					
ANR	1213846	Identifier	rmask		1213015	1					
ANR	1213847	AssignmentExpression	self -> rd2y += self -> rd3y = ( uint ) ay6 & self -> rmask		1213015	1		+=			
ANR	1213848	PtrMemberAccess	self -> rd2y		1213015	0					
ANR	1213849	Identifier	self		1213015	0					
ANR	1213850	Identifier	rd2y		1213015	1					
ANR	1213851	AssignmentExpression	self -> rd3y = ( uint ) ay6 & self -> rmask		1213015	1		=			
ANR	1213852	PtrMemberAccess	self -> rd3y		1213015	0					
ANR	1213853	Identifier	self		1213015	0					
ANR	1213854	Identifier	rd3y		1213015	1					
ANR	1213855	BitAndExpression	( uint ) ay6 & self -> rmask		1213015	1		&			
ANR	1213856	CastExpression	( uint ) ay6		1213015	0					
ANR	1213857	CastTarget	uint		1213015	0					
ANR	1213858	Identifier	ay6		1213015	1					
ANR	1213859	PtrMemberAccess	self -> rmask		1213015	1					
ANR	1213860	Identifier	self		1213015	0					
ANR	1213861	Identifier	rmask		1213015	1					
ANR	1213862	ExpressionStatement	"adjust_rem ( self -> rd2x , self -> id2x , self -> rmask )"	264:4:9725:9772	1213015	64	True				
ANR	1213863	CallExpression	"adjust_rem ( self -> rd2x , self -> id2x , self -> rmask )"		1213015	0					
ANR	1213864	Callee	adjust_rem		1213015	0					
ANR	1213865	Identifier	adjust_rem		1213015	0					
ANR	1213866	ArgumentList	self -> rd2x		1213015	1					
ANR	1213867	Argument	self -> rd2x		1213015	0					
ANR	1213868	PtrMemberAccess	self -> rd2x		1213015	0					
ANR	1213869	Identifier	self		1213015	0					
ANR	1213870	Identifier	rd2x		1213015	1					
ANR	1213871	Argument	self -> id2x		1213015	1					
ANR	1213872	PtrMemberAccess	self -> id2x		1213015	0					
ANR	1213873	Identifier	self		1213015	0					
ANR	1213874	Identifier	id2x		1213015	1					
ANR	1213875	Argument	self -> rmask		1213015	2					
ANR	1213876	PtrMemberAccess	self -> rmask		1213015	0					
ANR	1213877	Identifier	self		1213015	0					
ANR	1213878	Identifier	rmask		1213015	1					
ANR	1213879	ExpressionStatement	"adjust_rem ( self -> rd2y , self -> id2y , self -> rmask )"	265:4:9778:9825	1213015	65	True				
ANR	1213880	CallExpression	"adjust_rem ( self -> rd2y , self -> id2y , self -> rmask )"		1213015	0					
ANR	1213881	Callee	adjust_rem		1213015	0					
ANR	1213882	Identifier	adjust_rem		1213015	0					
ANR	1213883	ArgumentList	self -> rd2y		1213015	1					
ANR	1213884	Argument	self -> rd2y		1213015	0					
ANR	1213885	PtrMemberAccess	self -> rd2y		1213015	0					
ANR	1213886	Identifier	self		1213015	0					
ANR	1213887	Identifier	rd2y		1213015	1					
ANR	1213888	Argument	self -> id2y		1213015	1					
ANR	1213889	PtrMemberAccess	self -> id2y		1213015	0					
ANR	1213890	Identifier	self		1213015	0					
ANR	1213891	Identifier	id2y		1213015	1					
ANR	1213892	Argument	self -> rmask		1213015	2					
ANR	1213893	PtrMemberAccess	self -> rmask		1213015	0					
ANR	1213894	Identifier	self		1213015	0					
ANR	1213895	Identifier	rmask		1213015	1					
ANR	1213896	Statement	undef	266:4:9831:9835	1213015	66	True				
ANR	1213897	Statement	adjust_rem	266:10:9837:9846	1213015	67	True				
ANR	1213898	ReturnStatement	return true ;	267:4:9852:9863	1213015	68	True				
ANR	1213899	Identifier	true		1213015	0					
ANR	1213900	ReturnType	bool		1213015	1					
ANR	1213901	Identifier	gx_flattened_iterator__init		1213015	2					
ANR	1213902	ParameterList	"gx_flattened_iterator * self , fixed x0 , fixed y0 , const curve_segment * pc , int k"		1213015	3					
ANR	1213903	Parameter	gx_flattened_iterator * self	183:28:6357:6383	1213015	0	True				
ANR	1213904	ParameterType	gx_flattened_iterator *		1213015	0					
ANR	1213905	Identifier	self		1213015	1					
ANR	1213906	Parameter	fixed x0	184:12:6398:6405	1213015	1	True				
ANR	1213907	ParameterType	fixed		1213015	0					
ANR	1213908	Identifier	x0		1213015	1					
ANR	1213909	Parameter	fixed y0	184:22:6408:6415	1213015	2	True				
ANR	1213910	ParameterType	fixed		1213015	0					
ANR	1213911	Identifier	y0		1213015	1					
ANR	1213912	Parameter	const curve_segment * pc	184:32:6418:6440	1213015	3	True				
ANR	1213913	ParameterType	const curve_segment *		1213015	0					
ANR	1213914	Identifier	pc		1213015	1					
ANR	1213915	Parameter	int k	184:57:6443:6447	1213015	4	True				
ANR	1213916	ParameterType	int		1213015	0					
ANR	1213917	Identifier	k		1213015	1					
ANR	1213918	CFGEntryNode	ENTRY		1213015		True				
ANR	1213919	CFGExitNode	EXIT		1213015		True				
ANR	1213920	Symbol	pc -> p1 . y		1213015						
ANR	1213921	Symbol	pc -> p1 . x		1213015						
ANR	1213922	Symbol	pc -> pt . x		1213015						
ANR	1213923	Symbol	self -> k		1213015						
ANR	1213924	Symbol	pc -> pt . y		1213015						
ANR	1213925	Symbol	self -> i		1213015						
ANR	1213926	Symbol	pc -> p2 . x		1213015						
ANR	1213927	Symbol	pc -> p2 . y		1213015						
ANR	1213928	Symbol	pc -> p2		1213015						
ANR	1213929	Symbol	gs_debug_c		1213015						
ANR	1213930	Symbol	self -> cx		1213015						
ANR	1213931	Symbol	self -> id3y		1213015						
ANR	1213932	Symbol	self -> cy		1213015						
ANR	1213933	Symbol	bx2		1213015						
ANR	1213934	Symbol	pc -> p1		1213015						
ANR	1213935	Symbol	self -> id3x		1213015						
ANR	1213936	Symbol	* self		1213015						
ANR	1213937	Symbol	k2		1213015						
ANR	1213938	Symbol	rmask		1213015						
ANR	1213939	Symbol	k3		1213015						
ANR	1213940	Symbol	self -> ry		1213015						
ANR	1213941	Symbol	arith_rshift_1		1213015						
ANR	1213942	Symbol	self -> rmask		1213015						
ANR	1213943	Symbol	self -> rx		1213015						
ANR	1213944	Symbol	& self -> ax		1213015						
ANR	1213945	Symbol	& self -> ay		1213015						
ANR	1213946	Symbol	self -> rdx		1213015						
ANR	1213947	Symbol	self -> rdy		1213015						
ANR	1213948	Symbol	x0		1213015						
ANR	1213949	Symbol	self -> y0		1213015						
ANR	1213950	Symbol	true		1213015						
ANR	1213951	Symbol	self -> by		1213015						
ANR	1213952	Symbol	self -> rd3x		1213015						
ANR	1213953	Symbol	x1		1213015						
ANR	1213954	Symbol	self -> rd3y		1213015						
ANR	1213955	Symbol	x2		1213015						
ANR	1213956	Symbol	by2		1213015						
ANR	1213957	Symbol	* pc		1213015						
ANR	1213958	Symbol	self -> id2x		1213015						
ANR	1213959	Symbol	self -> bx		1213015						
ANR	1213960	Symbol	self -> id2y		1213015						
ANR	1213961	Symbol	self -> y3		1213015						
ANR	1213962	Symbol	self -> curve		1213015						
ANR	1213963	Symbol	self -> lx0		1213015						
ANR	1213964	Symbol	self -> lx1		1213015						
ANR	1213965	Symbol	& self -> by		1213015						
ANR	1213966	Symbol	curve_coeffs_ranged		1213015						
ANR	1213967	Symbol	& self -> bx		1213015						
ANR	1213968	Symbol	y0		1213015						
ANR	1213969	Symbol	y1		1213015						
ANR	1213970	Symbol	pc -> pt		1213015						
ANR	1213971	Symbol	self -> ax		1213015						
ANR	1213972	Symbol	y2		1213015						
ANR	1213973	Symbol	self -> x0		1213015						
ANR	1213974	Symbol	self -> ay		1213015						
ANR	1213975	Symbol	self -> rd2x		1213015						
ANR	1213976	Symbol	self -> x3		1213015						
ANR	1213977	Symbol	ax6		1213015						
ANR	1213978	Symbol	self -> rd2y		1213015						
ANR	1213979	Symbol	arith_rshift		1213015						
ANR	1213980	Symbol	fixed2float		1213015						
ANR	1213981	Symbol	false		1213015						
ANR	1213982	Symbol	k		1213015						
ANR	1213983	Symbol	self -> ly0		1213015						
ANR	1213984	Symbol	self -> ly1		1213015						
ANR	1213985	Symbol	r		1213015						
ANR	1213986	Symbol	pc		1213015						
ANR	1213987	Symbol	& self -> cx		1213015						
ANR	1213988	Symbol	self -> idy		1213015						
ANR	1213989	Symbol	& self -> cy		1213015						
ANR	1213990	Symbol	self -> idx		1213015						
ANR	1213991	Symbol	self		1213015						
ANR	1213992	Symbol	ay6		1213015						
ANR	1213993	Function	check_diff_overflow	270:0:9868:10060							
ANR	1213994	FunctionDef	"check_diff_overflow (fixed v0 , fixed v1)"		1213993	0					
ANR	1213995	CompoundStatement		272:0:9927:10060	1213993	0					
ANR	1213996	IfStatement	if ( v1 > 0 )		1213993	0					
ANR	1213997	Condition	v1 > 0	273:8:9937:9942	1213993	0	True				
ANR	1213998	RelationalExpression	v1 > 0		1213993	0		>			
ANR	1213999	Identifier	v1		1213993	0					
ANR	1214000	PrimaryExpression	0		1213993	1					
ANR	1214001	ReturnStatement	return ( v0 < min_fixed + v1 ) ;	274:8:9953:9981	1213993	1	True				
ANR	1214002	RelationalExpression	v0 < min_fixed + v1		1213993	0		<			
ANR	1214003	Identifier	v0		1213993	0					
ANR	1214004	AdditiveExpression	min_fixed + v1		1213993	1		+			
ANR	1214005	Identifier	min_fixed		1213993	0					
ANR	1214006	Identifier	v1		1213993	1					
ANR	1214007	ElseStatement	else		1213993	0					
ANR	1214008	IfStatement	if ( v1 < 0 )		1213993	0					
ANR	1214009	Condition	v1 < 0	275:13:9996:10001	1213993	0	True				
ANR	1214010	RelationalExpression	v1 < 0		1213993	0		<			
ANR	1214011	Identifier	v1		1213993	0					
ANR	1214012	PrimaryExpression	0		1213993	1					
ANR	1214013	ReturnStatement	return ( v0 > max_fixed + v1 ) ;	276:8:10012:10040	1213993	1	True				
ANR	1214014	RelationalExpression	v0 > max_fixed + v1		1213993	0		>			
ANR	1214015	Identifier	v0		1213993	0					
ANR	1214016	AdditiveExpression	max_fixed + v1		1213993	1		+			
ANR	1214017	Identifier	max_fixed		1213993	0					
ANR	1214018	Identifier	v1		1213993	1					
ANR	1214019	ReturnStatement	return false ;	277:4:10046:10058	1213993	1	True				
ANR	1214020	Identifier	false		1213993	0					
ANR	1214021	ReturnType	static inline bool		1213993	1					
ANR	1214022	Identifier	check_diff_overflow		1213993	2					
ANR	1214023	ParameterList	"fixed v0 , fixed v1"		1213993	3					
ANR	1214024	Parameter	fixed v0	271:20:9907:9914	1213993	0	True				
ANR	1214025	ParameterType	fixed		1213993	0					
ANR	1214026	Identifier	v0		1213993	1					
ANR	1214027	Parameter	fixed v1	271:30:9917:9924	1213993	1	True				
ANR	1214028	ParameterType	fixed		1213993	0					
ANR	1214029	Identifier	v1		1213993	1					
ANR	1214030	CFGEntryNode	ENTRY		1213993		True				
ANR	1214031	CFGExitNode	EXIT		1213993		True				
ANR	1214032	Symbol	min_fixed		1213993						
ANR	1214033	Symbol	max_fixed		1213993						
ANR	1214034	Symbol	false		1213993						
ANR	1214035	Symbol	v0		1213993						
ANR	1214036	Symbol	v1		1213993						
ANR	1214037	Function	gx_check_fixed_diff_overflow	280:0:10063:10159							
ANR	1214038	FunctionDef	"gx_check_fixed_diff_overflow (fixed v0 , fixed v1)"		1214037	0					
ANR	1214039	CompoundStatement		282:0:10117:10159	1214037	0					
ANR	1214040	ReturnStatement	"return check_diff_overflow ( v0 , v1 ) ;"	283:4:10123:10157	1214037	0	True				
ANR	1214041	CallExpression	"check_diff_overflow ( v0 , v1 )"		1214037	0					
ANR	1214042	Callee	check_diff_overflow		1214037	0					
ANR	1214043	Identifier	check_diff_overflow		1214037	0					
ANR	1214044	ArgumentList	v0		1214037	1					
ANR	1214045	Argument	v0		1214037	0					
ANR	1214046	Identifier	v0		1214037	0					
ANR	1214047	Argument	v1		1214037	1					
ANR	1214048	Identifier	v1		1214037	0					
ANR	1214049	ReturnType	bool		1214037	1					
ANR	1214050	Identifier	gx_check_fixed_diff_overflow		1214037	2					
ANR	1214051	ParameterList	"fixed v0 , fixed v1"		1214037	3					
ANR	1214052	Parameter	fixed v0	281:29:10097:10104	1214037	0	True				
ANR	1214053	ParameterType	fixed		1214037	0					
ANR	1214054	Identifier	v0		1214037	1					
ANR	1214055	Parameter	fixed v1	281:39:10107:10114	1214037	1	True				
ANR	1214056	ParameterType	fixed		1214037	0					
ANR	1214057	Identifier	v1		1214037	1					
ANR	1214058	CFGEntryNode	ENTRY		1214037		True				
ANR	1214059	CFGExitNode	EXIT		1214037		True				
ANR	1214060	Symbol	check_diff_overflow		1214037						
ANR	1214061	Symbol	v0		1214037						
ANR	1214062	Symbol	v1		1214037						
ANR	1214063	Function	gx_check_fixed_sum_overflow	285:0:10161:10359							
ANR	1214064	FunctionDef	"gx_check_fixed_sum_overflow (fixed v0 , fixed v1)"		1214063	0					
ANR	1214065	CompoundStatement		287:0:10214:10359	1214063	0					
ANR	1214066	ReturnStatement	"return check_diff_overflow ( v0 , - v1 ) ;"	291:4:10322:10357	1214063	0	True				
ANR	1214067	CallExpression	"check_diff_overflow ( v0 , - v1 )"		1214063	0					
ANR	1214068	Callee	check_diff_overflow		1214063	0					
ANR	1214069	Identifier	check_diff_overflow		1214063	0					
ANR	1214070	ArgumentList	v0		1214063	1					
ANR	1214071	Argument	v0		1214063	0					
ANR	1214072	Identifier	v0		1214063	0					
ANR	1214073	Argument	- v1		1214063	1					
ANR	1214074	UnaryOperationExpression	- v1		1214063	0					
ANR	1214075	UnaryOperator	-		1214063	0					
ANR	1214076	Identifier	v1		1214063	1					
ANR	1214077	ReturnType	bool		1214063	1					
ANR	1214078	Identifier	gx_check_fixed_sum_overflow		1214063	2					
ANR	1214079	ParameterList	"fixed v0 , fixed v1"		1214063	3					
ANR	1214080	Parameter	fixed v0	286:28:10194:10201	1214063	0	True				
ANR	1214081	ParameterType	fixed		1214063	0					
ANR	1214082	Identifier	v0		1214063	1					
ANR	1214083	Parameter	fixed v1	286:38:10204:10211	1214063	1	True				
ANR	1214084	ParameterType	fixed		1214063	0					
ANR	1214085	Identifier	v1		1214063	1					
ANR	1214086	CFGEntryNode	ENTRY		1214063		True				
ANR	1214087	CFGExitNode	EXIT		1214063		True				
ANR	1214088	Symbol	check_diff_overflow		1214063						
ANR	1214089	Symbol	v0		1214063						
ANR	1214090	Symbol	v1		1214063						
ANR	1214091	Function	gx_flattened_iterator__init_line	295:0:10406:11864							
ANR	1214092	FunctionDef	"gx_flattened_iterator__init_line (gx_flattened_iterator * self , fixed x0 , fixed y0 , fixed x1 , fixed y1)"		1214091	0					
ANR	1214093	CompoundStatement		298:0:10525:11864	1214091	0					
ANR	1214094	IdentifierDeclStatement	"bool ox = check_diff_overflow ( x0 , x1 ) ;"	299:4:10531:10568	1214091	0	True				
ANR	1214095	IdentifierDecl	"ox = check_diff_overflow ( x0 , x1 )"		1214091	0					
ANR	1214096	IdentifierDeclType	bool		1214091	0					
ANR	1214097	Identifier	ox		1214091	1					
ANR	1214098	AssignmentExpression	"ox = check_diff_overflow ( x0 , x1 )"		1214091	2		=			
ANR	1214099	Identifier	ox		1214091	0					
ANR	1214100	CallExpression	"check_diff_overflow ( x0 , x1 )"		1214091	1					
ANR	1214101	Callee	check_diff_overflow		1214091	0					
ANR	1214102	Identifier	check_diff_overflow		1214091	0					
ANR	1214103	ArgumentList	x0		1214091	1					
ANR	1214104	Argument	x0		1214091	0					
ANR	1214105	Identifier	x0		1214091	0					
ANR	1214106	Argument	x1		1214091	1					
ANR	1214107	Identifier	x1		1214091	0					
ANR	1214108	IdentifierDeclStatement	"bool oy = check_diff_overflow ( y0 , y1 ) ;"	300:4:10574:10611	1214091	1	True				
ANR	1214109	IdentifierDecl	"oy = check_diff_overflow ( y0 , y1 )"		1214091	0					
ANR	1214110	IdentifierDeclType	bool		1214091	0					
ANR	1214111	Identifier	oy		1214091	1					
ANR	1214112	AssignmentExpression	"oy = check_diff_overflow ( y0 , y1 )"		1214091	2		=			
ANR	1214113	Identifier	oy		1214091	0					
ANR	1214114	CallExpression	"check_diff_overflow ( y0 , y1 )"		1214091	1					
ANR	1214115	Callee	check_diff_overflow		1214091	0					
ANR	1214116	Identifier	check_diff_overflow		1214091	0					
ANR	1214117	ArgumentList	y0		1214091	1					
ANR	1214118	Argument	y0		1214091	0					
ANR	1214119	Identifier	y0		1214091	0					
ANR	1214120	Argument	y1		1214091	1					
ANR	1214121	Identifier	y1		1214091	0					
ANR	1214122	ExpressionStatement	self -> x0 = self -> lx0 = self -> lx1 = x0	302:4:10618:10655	1214091	2	True				
ANR	1214123	AssignmentExpression	self -> x0 = self -> lx0 = self -> lx1 = x0		1214091	0		=			
ANR	1214124	PtrMemberAccess	self -> x0		1214091	0					
ANR	1214125	Identifier	self		1214091	0					
ANR	1214126	Identifier	x0		1214091	1					
ANR	1214127	AssignmentExpression	self -> lx0 = self -> lx1 = x0		1214091	1		=			
ANR	1214128	PtrMemberAccess	self -> lx0		1214091	0					
ANR	1214129	Identifier	self		1214091	0					
ANR	1214130	Identifier	lx0		1214091	1					
ANR	1214131	AssignmentExpression	self -> lx1 = x0		1214091	1		=			
ANR	1214132	PtrMemberAccess	self -> lx1		1214091	0					
ANR	1214133	Identifier	self		1214091	0					
ANR	1214134	Identifier	lx1		1214091	1					
ANR	1214135	Identifier	x0		1214091	1					
ANR	1214136	ExpressionStatement	self -> y0 = self -> ly0 = self -> ly1 = y0	303:4:10661:10698	1214091	3	True				
ANR	1214137	AssignmentExpression	self -> y0 = self -> ly0 = self -> ly1 = y0		1214091	0		=			
ANR	1214138	PtrMemberAccess	self -> y0		1214091	0					
ANR	1214139	Identifier	self		1214091	0					
ANR	1214140	Identifier	y0		1214091	1					
ANR	1214141	AssignmentExpression	self -> ly0 = self -> ly1 = y0		1214091	1		=			
ANR	1214142	PtrMemberAccess	self -> ly0		1214091	0					
ANR	1214143	Identifier	self		1214091	0					
ANR	1214144	Identifier	ly0		1214091	1					
ANR	1214145	AssignmentExpression	self -> ly1 = y0		1214091	1		=			
ANR	1214146	PtrMemberAccess	self -> ly1		1214091	0					
ANR	1214147	Identifier	self		1214091	0					
ANR	1214148	Identifier	ly1		1214091	1					
ANR	1214149	Identifier	y0		1214091	1					
ANR	1214150	ExpressionStatement	self -> x3 = x1	304:4:10704:10717	1214091	4	True				
ANR	1214151	AssignmentExpression	self -> x3 = x1		1214091	0		=			
ANR	1214152	PtrMemberAccess	self -> x3		1214091	0					
ANR	1214153	Identifier	self		1214091	0					
ANR	1214154	Identifier	x3		1214091	1					
ANR	1214155	Identifier	x1		1214091	1					
ANR	1214156	ExpressionStatement	self -> y3 = y1	305:4:10723:10736	1214091	5	True				
ANR	1214157	AssignmentExpression	self -> y3 = y1		1214091	0		=			
ANR	1214158	PtrMemberAccess	self -> y3		1214091	0					
ANR	1214159	Identifier	self		1214091	0					
ANR	1214160	Identifier	y3		1214091	1					
ANR	1214161	Identifier	y1		1214091	1					
ANR	1214162	IfStatement	if ( ox || oy )		1214091	6					
ANR	1214163	Condition	ox || oy	306:8:10746:10753	1214091	0	True				
ANR	1214164	OrExpression	ox || oy		1214091	0		||			
ANR	1214165	Identifier	ox		1214091	0					
ANR	1214166	Identifier	oy		1214091	1					
ANR	1214167	CompoundStatement		9:18:230:230	1214091	1					
ANR	1214168	ExpressionStatement	self -> ax = self -> bx = 0	315:8:11228:11251	1214091	0	True				
ANR	1214169	AssignmentExpression	self -> ax = self -> bx = 0		1214091	0		=			
ANR	1214170	PtrMemberAccess	self -> ax		1214091	0					
ANR	1214171	Identifier	self		1214091	0					
ANR	1214172	Identifier	ax		1214091	1					
ANR	1214173	AssignmentExpression	self -> bx = 0		1214091	1		=			
ANR	1214174	PtrMemberAccess	self -> bx		1214091	0					
ANR	1214175	Identifier	self		1214091	0					
ANR	1214176	Identifier	bx		1214091	1					
ANR	1214177	PrimaryExpression	0		1214091	1					
ANR	1214178	ExpressionStatement	self -> ay = self -> by = 0	316:8:11261:11284	1214091	1	True				
ANR	1214179	AssignmentExpression	self -> ay = self -> by = 0		1214091	0		=			
ANR	1214180	PtrMemberAccess	self -> ay		1214091	0					
ANR	1214181	Identifier	self		1214091	0					
ANR	1214182	Identifier	ay		1214091	1					
ANR	1214183	AssignmentExpression	self -> by = 0		1214091	1		=			
ANR	1214184	PtrMemberAccess	self -> by		1214091	0					
ANR	1214185	Identifier	self		1214091	0					
ANR	1214186	Identifier	by		1214091	1					
ANR	1214187	PrimaryExpression	0		1214091	1					
ANR	1214188	ExpressionStatement	self -> cx = ( ( ox ? ( x1 >> 1 ) - ( x0 >> 1 ) : ( x1 - x0 ) >> 1 ) + 1 ) >> 1	317:8:11294:11361	1214091	2	True				
ANR	1214189	AssignmentExpression	self -> cx = ( ( ox ? ( x1 >> 1 ) - ( x0 >> 1 ) : ( x1 - x0 ) >> 1 ) + 1 ) >> 1		1214091	0		=			
ANR	1214190	PtrMemberAccess	self -> cx		1214091	0					
ANR	1214191	Identifier	self		1214091	0					
ANR	1214192	Identifier	cx		1214091	1					
ANR	1214193	ShiftExpression	( ( ox ? ( x1 >> 1 ) - ( x0 >> 1 ) : ( x1 - x0 ) >> 1 ) + 1 ) >> 1		1214091	1		>>			
ANR	1214194	AdditiveExpression	( ox ? ( x1 >> 1 ) - ( x0 >> 1 ) : ( x1 - x0 ) >> 1 ) + 1		1214091	0		+			
ANR	1214195	ConditionalExpression	ox ? ( x1 >> 1 ) - ( x0 >> 1 ) : ( x1 - x0 ) >> 1		1214091	0					
ANR	1214196	Condition	ox		1214091	0					
ANR	1214197	Identifier	ox		1214091	0					
ANR	1214198	AdditiveExpression	( x1 >> 1 ) - ( x0 >> 1 )		1214091	1		-			
ANR	1214199	ShiftExpression	x1 >> 1		1214091	0		>>			
ANR	1214200	Identifier	x1		1214091	0					
ANR	1214201	PrimaryExpression	1		1214091	1					
ANR	1214202	ShiftExpression	x0 >> 1		1214091	1		>>			
ANR	1214203	Identifier	x0		1214091	0					
ANR	1214204	PrimaryExpression	1		1214091	1					
ANR	1214205	ShiftExpression	( x1 - x0 ) >> 1		1214091	2		>>			
ANR	1214206	AdditiveExpression	x1 - x0		1214091	0		-			
ANR	1214207	Identifier	x1		1214091	0					
ANR	1214208	Identifier	x0		1214091	1					
ANR	1214209	PrimaryExpression	1		1214091	1					
ANR	1214210	PrimaryExpression	1		1214091	1					
ANR	1214211	PrimaryExpression	1		1214091	1					
ANR	1214212	ExpressionStatement	self -> cy = ( ( oy ? ( y1 >> 1 ) - ( y0 >> 1 ) : ( y1 - y0 ) >> 1 ) + 1 ) >> 1	318:8:11371:11438	1214091	3	True				
ANR	1214213	AssignmentExpression	self -> cy = ( ( oy ? ( y1 >> 1 ) - ( y0 >> 1 ) : ( y1 - y0 ) >> 1 ) + 1 ) >> 1		1214091	0		=			
ANR	1214214	PtrMemberAccess	self -> cy		1214091	0					
ANR	1214215	Identifier	self		1214091	0					
ANR	1214216	Identifier	cy		1214091	1					
ANR	1214217	ShiftExpression	( ( oy ? ( y1 >> 1 ) - ( y0 >> 1 ) : ( y1 - y0 ) >> 1 ) + 1 ) >> 1		1214091	1		>>			
ANR	1214218	AdditiveExpression	( oy ? ( y1 >> 1 ) - ( y0 >> 1 ) : ( y1 - y0 ) >> 1 ) + 1		1214091	0		+			
ANR	1214219	ConditionalExpression	oy ? ( y1 >> 1 ) - ( y0 >> 1 ) : ( y1 - y0 ) >> 1		1214091	0					
ANR	1214220	Condition	oy		1214091	0					
ANR	1214221	Identifier	oy		1214091	0					
ANR	1214222	AdditiveExpression	( y1 >> 1 ) - ( y0 >> 1 )		1214091	1		-			
ANR	1214223	ShiftExpression	y1 >> 1		1214091	0		>>			
ANR	1214224	Identifier	y1		1214091	0					
ANR	1214225	PrimaryExpression	1		1214091	1					
ANR	1214226	ShiftExpression	y0 >> 1		1214091	1		>>			
ANR	1214227	Identifier	y0		1214091	0					
ANR	1214228	PrimaryExpression	1		1214091	1					
ANR	1214229	ShiftExpression	( y1 - y0 ) >> 1		1214091	2		>>			
ANR	1214230	AdditiveExpression	y1 - y0		1214091	0		-			
ANR	1214231	Identifier	y1		1214091	0					
ANR	1214232	Identifier	y0		1214091	1					
ANR	1214233	PrimaryExpression	1		1214091	1					
ANR	1214234	PrimaryExpression	1		1214091	1					
ANR	1214235	PrimaryExpression	1		1214091	1					
ANR	1214236	ExpressionStatement	self -> rd3x = self -> rd3y = self -> id3x = self -> id3y = 0	319:8:11448:11501	1214091	4	True				
ANR	1214237	AssignmentExpression	self -> rd3x = self -> rd3y = self -> id3x = self -> id3y = 0		1214091	0		=			
ANR	1214238	PtrMemberAccess	self -> rd3x		1214091	0					
ANR	1214239	Identifier	self		1214091	0					
ANR	1214240	Identifier	rd3x		1214091	1					
ANR	1214241	AssignmentExpression	self -> rd3y = self -> id3x = self -> id3y = 0		1214091	1		=			
ANR	1214242	PtrMemberAccess	self -> rd3y		1214091	0					
ANR	1214243	Identifier	self		1214091	0					
ANR	1214244	Identifier	rd3y		1214091	1					
ANR	1214245	AssignmentExpression	self -> id3x = self -> id3y = 0		1214091	1		=			
ANR	1214246	PtrMemberAccess	self -> id3x		1214091	0					
ANR	1214247	Identifier	self		1214091	0					
ANR	1214248	Identifier	id3x		1214091	1					
ANR	1214249	AssignmentExpression	self -> id3y = 0		1214091	1		=			
ANR	1214250	PtrMemberAccess	self -> id3y		1214091	0					
ANR	1214251	Identifier	self		1214091	0					
ANR	1214252	Identifier	id3y		1214091	1					
ANR	1214253	PrimaryExpression	0		1214091	1					
ANR	1214254	ExpressionStatement	self -> rd2x = self -> rd2y = self -> id2x = self -> id2y = 0	320:8:11511:11564	1214091	5	True				
ANR	1214255	AssignmentExpression	self -> rd2x = self -> rd2y = self -> id2x = self -> id2y = 0		1214091	0		=			
ANR	1214256	PtrMemberAccess	self -> rd2x		1214091	0					
ANR	1214257	Identifier	self		1214091	0					
ANR	1214258	Identifier	rd2x		1214091	1					
ANR	1214259	AssignmentExpression	self -> rd2y = self -> id2x = self -> id2y = 0		1214091	1		=			
ANR	1214260	PtrMemberAccess	self -> rd2y		1214091	0					
ANR	1214261	Identifier	self		1214091	0					
ANR	1214262	Identifier	rd2y		1214091	1					
ANR	1214263	AssignmentExpression	self -> id2x = self -> id2y = 0		1214091	1		=			
ANR	1214264	PtrMemberAccess	self -> id2x		1214091	0					
ANR	1214265	Identifier	self		1214091	0					
ANR	1214266	Identifier	id2x		1214091	1					
ANR	1214267	AssignmentExpression	self -> id2y = 0		1214091	1		=			
ANR	1214268	PtrMemberAccess	self -> id2y		1214091	0					
ANR	1214269	Identifier	self		1214091	0					
ANR	1214270	Identifier	id2y		1214091	1					
ANR	1214271	PrimaryExpression	0		1214091	1					
ANR	1214272	ExpressionStatement	self -> idx = self -> cx	321:8:11574:11594	1214091	6	True				
ANR	1214273	AssignmentExpression	self -> idx = self -> cx		1214091	0		=			
ANR	1214274	PtrMemberAccess	self -> idx		1214091	0					
ANR	1214275	Identifier	self		1214091	0					
ANR	1214276	Identifier	idx		1214091	1					
ANR	1214277	PtrMemberAccess	self -> cx		1214091	1					
ANR	1214278	Identifier	self		1214091	0					
ANR	1214279	Identifier	cx		1214091	1					
ANR	1214280	ExpressionStatement	self -> idy = self -> cy	322:8:11604:11624	1214091	7	True				
ANR	1214281	AssignmentExpression	self -> idy = self -> cy		1214091	0		=			
ANR	1214282	PtrMemberAccess	self -> idy		1214091	0					
ANR	1214283	Identifier	self		1214091	0					
ANR	1214284	Identifier	idy		1214091	1					
ANR	1214285	PtrMemberAccess	self -> cy		1214091	1					
ANR	1214286	Identifier	self		1214091	0					
ANR	1214287	Identifier	cy		1214091	1					
ANR	1214288	ExpressionStatement	self -> rdx = self -> rdy = 0	323:8:11634:11659	1214091	8	True				
ANR	1214289	AssignmentExpression	self -> rdx = self -> rdy = 0		1214091	0		=			
ANR	1214290	PtrMemberAccess	self -> rdx		1214091	0					
ANR	1214291	Identifier	self		1214091	0					
ANR	1214292	Identifier	rdx		1214091	1					
ANR	1214293	AssignmentExpression	self -> rdy = 0		1214091	1		=			
ANR	1214294	PtrMemberAccess	self -> rdy		1214091	0					
ANR	1214295	Identifier	self		1214091	0					
ANR	1214296	Identifier	rdy		1214091	1					
ANR	1214297	PrimaryExpression	0		1214091	1					
ANR	1214298	ExpressionStatement	self -> rx = self -> ry = 0	324:8:11669:11692	1214091	9	True				
ANR	1214299	AssignmentExpression	self -> rx = self -> ry = 0		1214091	0		=			
ANR	1214300	PtrMemberAccess	self -> rx		1214091	0					
ANR	1214301	Identifier	self		1214091	0					
ANR	1214302	Identifier	rx		1214091	1					
ANR	1214303	AssignmentExpression	self -> ry = 0		1214091	1		=			
ANR	1214304	PtrMemberAccess	self -> ry		1214091	0					
ANR	1214305	Identifier	self		1214091	0					
ANR	1214306	Identifier	ry		1214091	1					
ANR	1214307	PrimaryExpression	0		1214091	1					
ANR	1214308	ExpressionStatement	self -> rmask = 0	325:8:11702:11717	1214091	10	True				
ANR	1214309	AssignmentExpression	self -> rmask = 0		1214091	0		=			
ANR	1214310	PtrMemberAccess	self -> rmask		1214091	0					
ANR	1214311	Identifier	self		1214091	0					
ANR	1214312	Identifier	rmask		1214091	1					
ANR	1214313	PrimaryExpression	0		1214091	1					
ANR	1214314	ExpressionStatement	self -> k = 2	326:8:11727:11738	1214091	11	True				
ANR	1214315	AssignmentExpression	self -> k = 2		1214091	0		=			
ANR	1214316	PtrMemberAccess	self -> k		1214091	0					
ANR	1214317	Identifier	self		1214091	0					
ANR	1214318	Identifier	k		1214091	1					
ANR	1214319	PrimaryExpression	2		1214091	1					
ANR	1214320	ExpressionStatement	self -> i = 4	327:8:11748:11759	1214091	12	True				
ANR	1214321	AssignmentExpression	self -> i = 4		1214091	0		=			
ANR	1214322	PtrMemberAccess	self -> i		1214091	0					
ANR	1214323	Identifier	self		1214091	0					
ANR	1214324	Identifier	i		1214091	1					
ANR	1214325	PrimaryExpression	4		1214091	1					
ANR	1214326	ElseStatement	else		1214091	0					
ANR	1214327	CompoundStatement		31:11:1246:1246	1214091	0					
ANR	1214328	ExpressionStatement	self -> k = 0	329:8:11782:11793	1214091	0	True				
ANR	1214329	AssignmentExpression	self -> k = 0		1214091	0		=			
ANR	1214330	PtrMemberAccess	self -> k		1214091	0					
ANR	1214331	Identifier	self		1214091	0					
ANR	1214332	Identifier	k		1214091	1					
ANR	1214333	PrimaryExpression	0		1214091	1					
ANR	1214334	ExpressionStatement	self -> i = 1	330:8:11803:11814	1214091	1	True				
ANR	1214335	AssignmentExpression	self -> i = 1		1214091	0		=			
ANR	1214336	PtrMemberAccess	self -> i		1214091	0					
ANR	1214337	Identifier	self		1214091	0					
ANR	1214338	Identifier	i		1214091	1					
ANR	1214339	PrimaryExpression	1		1214091	1					
ANR	1214340	ExpressionStatement	self -> curve = false	332:4:11826:11845	1214091	7	True				
ANR	1214341	AssignmentExpression	self -> curve = false		1214091	0		=			
ANR	1214342	PtrMemberAccess	self -> curve		1214091	0					
ANR	1214343	Identifier	self		1214091	0					
ANR	1214344	Identifier	curve		1214091	1					
ANR	1214345	Identifier	false		1214091	1					
ANR	1214346	ReturnStatement	return true ;	333:4:11851:11862	1214091	8	True				
ANR	1214347	Identifier	true		1214091	0					
ANR	1214348	ReturnType	bool		1214091	1					
ANR	1214349	Identifier	gx_flattened_iterator__init_line		1214091	2					
ANR	1214350	ParameterList	"gx_flattened_iterator * self , fixed x0 , fixed y0 , fixed x1 , fixed y1"		1214091	3					
ANR	1214351	Parameter	gx_flattened_iterator * self	296:33:10444:10470	1214091	0	True				
ANR	1214352	ParameterType	gx_flattened_iterator *		1214091	0					
ANR	1214353	Identifier	self		1214091	1					
ANR	1214354	Parameter	fixed x0	297:12:10485:10492	1214091	1	True				
ANR	1214355	ParameterType	fixed		1214091	0					
ANR	1214356	Identifier	x0		1214091	1					
ANR	1214357	Parameter	fixed y0	297:22:10495:10502	1214091	2	True				
ANR	1214358	ParameterType	fixed		1214091	0					
ANR	1214359	Identifier	y0		1214091	1					
ANR	1214360	Parameter	fixed x1	297:32:10505:10512	1214091	3	True				
ANR	1214361	ParameterType	fixed		1214091	0					
ANR	1214362	Identifier	x1		1214091	1					
ANR	1214363	Parameter	fixed y1	297:42:10515:10522	1214091	4	True				
ANR	1214364	ParameterType	fixed		1214091	0					
ANR	1214365	Identifier	y1		1214091	1					
ANR	1214366	CFGEntryNode	ENTRY		1214091		True				
ANR	1214367	CFGExitNode	EXIT		1214091		True				
ANR	1214368	Symbol	self -> k		1214091						
ANR	1214369	Symbol	self -> curve		1214091						
ANR	1214370	Symbol	self -> lx0		1214091						
ANR	1214371	Symbol	self -> lx1		1214091						
ANR	1214372	Symbol	self -> i		1214091						
ANR	1214373	Symbol	y0		1214091						
ANR	1214374	Symbol	y1		1214091						
ANR	1214375	Symbol	self -> ax		1214091						
ANR	1214376	Symbol	self -> x0		1214091						
ANR	1214377	Symbol	self -> ay		1214091						
ANR	1214378	Symbol	self -> rd2x		1214091						
ANR	1214379	Symbol	self -> cx		1214091						
ANR	1214380	Symbol	self -> id3y		1214091						
ANR	1214381	Symbol	self -> cy		1214091						
ANR	1214382	Symbol	self -> x3		1214091						
ANR	1214383	Symbol	self -> id3x		1214091						
ANR	1214384	Symbol	self -> rd2y		1214091						
ANR	1214385	Symbol	* self		1214091						
ANR	1214386	Symbol	self -> ry		1214091						
ANR	1214387	Symbol	false		1214091						
ANR	1214388	Symbol	ox		1214091						
ANR	1214389	Symbol	self -> rmask		1214091						
ANR	1214390	Symbol	oy		1214091						
ANR	1214391	Symbol	self -> rx		1214091						
ANR	1214392	Symbol	self -> ly0		1214091						
ANR	1214393	Symbol	self -> ly1		1214091						
ANR	1214394	Symbol	self -> rdx		1214091						
ANR	1214395	Symbol	self -> idy		1214091						
ANR	1214396	Symbol	self -> rdy		1214091						
ANR	1214397	Symbol	self -> idx		1214091						
ANR	1214398	Symbol	x0		1214091						
ANR	1214399	Symbol	self -> y0		1214091						
ANR	1214400	Symbol	self -> by		1214091						
ANR	1214401	Symbol	self -> rd3x		1214091						
ANR	1214402	Symbol	true		1214091						
ANR	1214403	Symbol	self		1214091						
ANR	1214404	Symbol	x1		1214091						
ANR	1214405	Symbol	check_diff_overflow		1214091						
ANR	1214406	Symbol	self -> rd3y		1214091						
ANR	1214407	Symbol	self -> id2x		1214091						
ANR	1214408	Symbol	self -> bx		1214091						
ANR	1214409	Symbol	self -> id2y		1214091						
ANR	1214410	Symbol	self -> y3		1214091						
ANR	1214411	Function	gx_flattened_iterator__print_state	337:0:11913:12472							
ANR	1214412	FunctionDef	gx_flattened_iterator__print_state (gx_flattened_iterator * self)		1214411	0					
ANR	1214413	CompoundStatement		339:0:11996:12472	1214411	0					
ANR	1214414	IfStatement	if ( ! gs_debug_c ( '3' ) )		1214411	0					
ANR	1214415	Condition	! gs_debug_c ( '3' )	340:8:12006:12021	1214411	0	True				
ANR	1214416	UnaryOperationExpression	! gs_debug_c ( '3' )		1214411	0					
ANR	1214417	UnaryOperator	!		1214411	0					
ANR	1214418	CallExpression	gs_debug_c ( '3' )		1214411	1					
ANR	1214419	Callee	gs_debug_c		1214411	0					
ANR	1214420	Identifier	gs_debug_c		1214411	0					
ANR	1214421	ArgumentList	'3'		1214411	1					
ANR	1214422	Argument	'3'		1214411	0					
ANR	1214423	PrimaryExpression	'3'		1214411	0					
ANR	1214424	ReturnStatement	return ;	341:8:12032:12038	1214411	1	True				
ANR	1214425	ExpressionStatement	"dlprintf4 ( ""[3]dx=%f+%d, dy=%f+%d\\n"" , fixed2float ( self -> idx ) , self -> rdx , fixed2float ( self -> idy ) , self -> rdy )"	342:4:12044:12178	1214411	1	True				
ANR	1214426	CallExpression	"dlprintf4 ( ""[3]dx=%f+%d, dy=%f+%d\\n"" , fixed2float ( self -> idx ) , self -> rdx , fixed2float ( self -> idy ) , self -> rdy )"		1214411	0					
ANR	1214427	Callee	dlprintf4		1214411	0					
ANR	1214428	Identifier	dlprintf4		1214411	0					
ANR	1214429	ArgumentList	"""[3]dx=%f+%d, dy=%f+%d\\n"""		1214411	1					
ANR	1214430	Argument	"""[3]dx=%f+%d, dy=%f+%d\\n"""		1214411	0					
ANR	1214431	PrimaryExpression	"""[3]dx=%f+%d, dy=%f+%d\\n"""		1214411	0					
ANR	1214432	Argument	fixed2float ( self -> idx )		1214411	1					
ANR	1214433	CallExpression	fixed2float ( self -> idx )		1214411	0					
ANR	1214434	Callee	fixed2float		1214411	0					
ANR	1214435	Identifier	fixed2float		1214411	0					
ANR	1214436	ArgumentList	self -> idx		1214411	1					
ANR	1214437	Argument	self -> idx		1214411	0					
ANR	1214438	PtrMemberAccess	self -> idx		1214411	0					
ANR	1214439	Identifier	self		1214411	0					
ANR	1214440	Identifier	idx		1214411	1					
ANR	1214441	Argument	self -> rdx		1214411	2					
ANR	1214442	PtrMemberAccess	self -> rdx		1214411	0					
ANR	1214443	Identifier	self		1214411	0					
ANR	1214444	Identifier	rdx		1214411	1					
ANR	1214445	Argument	fixed2float ( self -> idy )		1214411	3					
ANR	1214446	CallExpression	fixed2float ( self -> idy )		1214411	0					
ANR	1214447	Callee	fixed2float		1214411	0					
ANR	1214448	Identifier	fixed2float		1214411	0					
ANR	1214449	ArgumentList	self -> idy		1214411	1					
ANR	1214450	Argument	self -> idy		1214411	0					
ANR	1214451	PtrMemberAccess	self -> idy		1214411	0					
ANR	1214452	Identifier	self		1214411	0					
ANR	1214453	Identifier	idy		1214411	1					
ANR	1214454	Argument	self -> rdy		1214411	4					
ANR	1214455	PtrMemberAccess	self -> rdy		1214411	0					
ANR	1214456	Identifier	self		1214411	0					
ANR	1214457	Identifier	rdy		1214411	1					
ANR	1214458	ExpressionStatement	"dlprintf4 ( ""   d2x=%f+%d, d2y=%f+%d\\n"" , fixed2float ( self -> id2x ) , self -> rd2x , fixed2float ( self -> id2y ) , self -> rd2y )"	345:4:12184:12324	1214411	2	True				
ANR	1214459	CallExpression	"dlprintf4 ( ""   d2x=%f+%d, d2y=%f+%d\\n"" , fixed2float ( self -> id2x ) , self -> rd2x , fixed2float ( self -> id2y ) , self -> rd2y )"		1214411	0					
ANR	1214460	Callee	dlprintf4		1214411	0					
ANR	1214461	Identifier	dlprintf4		1214411	0					
ANR	1214462	ArgumentList	"""   d2x=%f+%d, d2y=%f+%d\\n"""		1214411	1					
ANR	1214463	Argument	"""   d2x=%f+%d, d2y=%f+%d\\n"""		1214411	0					
ANR	1214464	PrimaryExpression	"""   d2x=%f+%d, d2y=%f+%d\\n"""		1214411	0					
ANR	1214465	Argument	fixed2float ( self -> id2x )		1214411	1					
ANR	1214466	CallExpression	fixed2float ( self -> id2x )		1214411	0					
ANR	1214467	Callee	fixed2float		1214411	0					
ANR	1214468	Identifier	fixed2float		1214411	0					
ANR	1214469	ArgumentList	self -> id2x		1214411	1					
ANR	1214470	Argument	self -> id2x		1214411	0					
ANR	1214471	PtrMemberAccess	self -> id2x		1214411	0					
ANR	1214472	Identifier	self		1214411	0					
ANR	1214473	Identifier	id2x		1214411	1					
ANR	1214474	Argument	self -> rd2x		1214411	2					
ANR	1214475	PtrMemberAccess	self -> rd2x		1214411	0					
ANR	1214476	Identifier	self		1214411	0					
ANR	1214477	Identifier	rd2x		1214411	1					
ANR	1214478	Argument	fixed2float ( self -> id2y )		1214411	3					
ANR	1214479	CallExpression	fixed2float ( self -> id2y )		1214411	0					
ANR	1214480	Callee	fixed2float		1214411	0					
ANR	1214481	Identifier	fixed2float		1214411	0					
ANR	1214482	ArgumentList	self -> id2y		1214411	1					
ANR	1214483	Argument	self -> id2y		1214411	0					
ANR	1214484	PtrMemberAccess	self -> id2y		1214411	0					
ANR	1214485	Identifier	self		1214411	0					
ANR	1214486	Identifier	id2y		1214411	1					
ANR	1214487	Argument	self -> rd2y		1214411	4					
ANR	1214488	PtrMemberAccess	self -> rd2y		1214411	0					
ANR	1214489	Identifier	self		1214411	0					
ANR	1214490	Identifier	rd2y		1214411	1					
ANR	1214491	ExpressionStatement	"dlprintf4 ( ""   d3x=%f+%d, d3y=%f+%d\\n"" , fixed2float ( self -> id3x ) , self -> rd3x , fixed2float ( self -> id3y ) , self -> rd3y )"	348:4:12330:12470	1214411	3	True				
ANR	1214492	CallExpression	"dlprintf4 ( ""   d3x=%f+%d, d3y=%f+%d\\n"" , fixed2float ( self -> id3x ) , self -> rd3x , fixed2float ( self -> id3y ) , self -> rd3y )"		1214411	0					
ANR	1214493	Callee	dlprintf4		1214411	0					
ANR	1214494	Identifier	dlprintf4		1214411	0					
ANR	1214495	ArgumentList	"""   d3x=%f+%d, d3y=%f+%d\\n"""		1214411	1					
ANR	1214496	Argument	"""   d3x=%f+%d, d3y=%f+%d\\n"""		1214411	0					
ANR	1214497	PrimaryExpression	"""   d3x=%f+%d, d3y=%f+%d\\n"""		1214411	0					
ANR	1214498	Argument	fixed2float ( self -> id3x )		1214411	1					
ANR	1214499	CallExpression	fixed2float ( self -> id3x )		1214411	0					
ANR	1214500	Callee	fixed2float		1214411	0					
ANR	1214501	Identifier	fixed2float		1214411	0					
ANR	1214502	ArgumentList	self -> id3x		1214411	1					
ANR	1214503	Argument	self -> id3x		1214411	0					
ANR	1214504	PtrMemberAccess	self -> id3x		1214411	0					
ANR	1214505	Identifier	self		1214411	0					
ANR	1214506	Identifier	id3x		1214411	1					
ANR	1214507	Argument	self -> rd3x		1214411	2					
ANR	1214508	PtrMemberAccess	self -> rd3x		1214411	0					
ANR	1214509	Identifier	self		1214411	0					
ANR	1214510	Identifier	rd3x		1214411	1					
ANR	1214511	Argument	fixed2float ( self -> id3y )		1214411	3					
ANR	1214512	CallExpression	fixed2float ( self -> id3y )		1214411	0					
ANR	1214513	Callee	fixed2float		1214411	0					
ANR	1214514	Identifier	fixed2float		1214411	0					
ANR	1214515	ArgumentList	self -> id3y		1214411	1					
ANR	1214516	Argument	self -> id3y		1214411	0					
ANR	1214517	PtrMemberAccess	self -> id3y		1214411	0					
ANR	1214518	Identifier	self		1214411	0					
ANR	1214519	Identifier	id3y		1214411	1					
ANR	1214520	Argument	self -> rd3y		1214411	4					
ANR	1214521	PtrMemberAccess	self -> rd3y		1214411	0					
ANR	1214522	Identifier	self		1214411	0					
ANR	1214523	Identifier	rd3y		1214411	1					
ANR	1214524	ReturnType	static inline void		1214411	1					
ANR	1214525	Identifier	gx_flattened_iterator__print_state		1214411	2					
ANR	1214526	ParameterList	gx_flattened_iterator * self		1214411	3					
ANR	1214527	Parameter	gx_flattened_iterator * self	338:35:11967:11993	1214411	0	True				
ANR	1214528	ParameterType	gx_flattened_iterator *		1214411	0					
ANR	1214529	Identifier	self		1214411	1					
ANR	1214530	CFGEntryNode	ENTRY		1214411		True				
ANR	1214531	CFGExitNode	EXIT		1214411		True				
ANR	1214532	Symbol	fixed2float		1214411						
ANR	1214533	Symbol	* self		1214411						
ANR	1214534	Symbol	self -> rdx		1214411						
ANR	1214535	Symbol	self -> idy		1214411						
ANR	1214536	Symbol	self -> rdy		1214411						
ANR	1214537	Symbol	self -> idx		1214411						
ANR	1214538	Symbol	self -> rd3x		1214411						
ANR	1214539	Symbol	self		1214411						
ANR	1214540	Symbol	self -> rd2x		1214411						
ANR	1214541	Symbol	self -> rd3y		1214411						
ANR	1214542	Symbol	gs_debug_c		1214411						
ANR	1214543	Symbol	self -> id2x		1214411						
ANR	1214544	Symbol	self -> id3y		1214411						
ANR	1214545	Symbol	self -> id2y		1214411						
ANR	1214546	Symbol	self -> id3x		1214411						
ANR	1214547	Symbol	self -> rd2y		1214411						
ANR	1214548	Function	gx_flattened_iterator__next	357:0:12621:16687							
ANR	1214549	FunctionDef	gx_flattened_iterator__next (gx_flattened_iterator * self)		1214548	0					
ANR	1214550	CompoundStatement		359:0:12682:16687	1214548	0					
ANR	1214551	IdentifierDeclStatement	"fixed x = self -> lx1 , y = self -> ly1 ;"	394:4:14342:14376	1214548	0	True				
ANR	1214552	IdentifierDecl	x = self -> lx1		1214548	0					
ANR	1214553	IdentifierDeclType	fixed		1214548	0					
ANR	1214554	Identifier	x		1214548	1					
ANR	1214555	AssignmentExpression	x = self -> lx1		1214548	2		=			
ANR	1214556	Identifier	x		1214548	0					
ANR	1214557	PtrMemberAccess	self -> lx1		1214548	1					
ANR	1214558	Identifier	self		1214548	0					
ANR	1214559	Identifier	lx1		1214548	1					
ANR	1214560	IdentifierDecl	y = self -> ly1		1214548	1					
ANR	1214561	IdentifierDeclType	fixed		1214548	0					
ANR	1214562	Identifier	y		1214548	1					
ANR	1214563	AssignmentExpression	y = self -> ly1		1214548	2		=			
ANR	1214564	Identifier	y		1214548	0					
ANR	1214565	PtrMemberAccess	self -> ly1		1214548	1					
ANR	1214566	Identifier	self		1214548	0					
ANR	1214567	Identifier	ly1		1214548	1					
ANR	1214568	IfStatement	if ( self -> i <= 0 )		1214548	1					
ANR	1214569	Condition	self -> i <= 0	396:8:14387:14398	1214548	0	True				
ANR	1214570	RelationalExpression	self -> i <= 0		1214548	0		<=			
ANR	1214571	PtrMemberAccess	self -> i		1214548	0					
ANR	1214572	Identifier	self		1214548	0					
ANR	1214573	Identifier	i		1214548	1					
ANR	1214574	PrimaryExpression	0		1214548	1					
ANR	1214575	ExpressionStatement	return_error ( gs_error_unregistered )	397:8:14409:14444	1214548	1	True				
ANR	1214576	CallExpression	return_error ( gs_error_unregistered )		1214548	0					
ANR	1214577	Callee	return_error		1214548	0					
ANR	1214578	Identifier	return_error		1214548	0					
ANR	1214579	ArgumentList	gs_error_unregistered		1214548	1					
ANR	1214580	Argument	gs_error_unregistered		1214548	0					
ANR	1214581	Identifier	gs_error_unregistered		1214548	0					
ANR	1214582	ExpressionStatement	self -> lx0 = self -> lx1	398:4:14473:14494	1214548	2	True				
ANR	1214583	AssignmentExpression	self -> lx0 = self -> lx1		1214548	0		=			
ANR	1214584	PtrMemberAccess	self -> lx0		1214548	0					
ANR	1214585	Identifier	self		1214548	0					
ANR	1214586	Identifier	lx0		1214548	1					
ANR	1214587	PtrMemberAccess	self -> lx1		1214548	1					
ANR	1214588	Identifier	self		1214548	0					
ANR	1214589	Identifier	lx1		1214548	1					
ANR	1214590	ExpressionStatement	self -> ly0 = self -> ly1	399:4:14500:14521	1214548	3	True				
ANR	1214591	AssignmentExpression	self -> ly0 = self -> ly1		1214548	0		=			
ANR	1214592	PtrMemberAccess	self -> ly0		1214548	0					
ANR	1214593	Identifier	self		1214548	0					
ANR	1214594	Identifier	ly0		1214548	1					
ANR	1214595	PtrMemberAccess	self -> ly1		1214548	1					
ANR	1214596	Identifier	self		1214548	0					
ANR	1214597	Identifier	ly1		1214548	1					
ANR	1214598	IfStatement	if ( self -> k <= 1 )		1214548	4					
ANR	1214599	Condition	self -> k <= 1	401:8:14608:14619	1214548	0	True				
ANR	1214600	RelationalExpression	self -> k <= 1		1214548	0		<=			
ANR	1214601	PtrMemberAccess	self -> k		1214548	0					
ANR	1214602	Identifier	self		1214548	0					
ANR	1214603	Identifier	k		1214548	1					
ANR	1214604	PrimaryExpression	1		1214548	1					
ANR	1214605	CompoundStatement		50:2:2191:2318	1214548	1					
ANR	1214606	ExpressionStatement	-- self -> i	402:8:14632:14641	1214548	0	True				
ANR	1214607	UnaryExpression	-- self -> i		1214548	0					
ANR	1214608	IncDec	--		1214548	0					
ANR	1214609	PtrMemberAccess	self -> i		1214548	1					
ANR	1214610	Identifier	self		1214548	0					
ANR	1214611	Identifier	i		1214548	1					
ANR	1214612	IfStatement	if ( self -> i == 0 )		1214548	1					
ANR	1214613	Condition	self -> i == 0	403:12:14655:14666	1214548	0	True				
ANR	1214614	EqualityExpression	self -> i == 0		1214548	0		==			
ANR	1214615	PtrMemberAccess	self -> i		1214548	0					
ANR	1214616	Identifier	self		1214548	0					
ANR	1214617	Identifier	i		1214548	1					
ANR	1214618	PrimaryExpression	0		1214548	1					
ANR	1214619	GotoStatement	goto last ;	404:12:14681:14690	1214548	1	True				
ANR	1214620	Identifier	last		1214548	0					
ANR	1214621	Statement	define	405:2:14694:14699	1214548	2	True				
ANR	1214622	Statement	poly2	405:9:14701:14705	1214548	3	True				
ANR	1214623	Statement	(	405:14:14706:14706	1214548	4	True				
ANR	1214624	Statement	a	405:15:14707:14707	1214548	5	True				
ANR	1214625	Statement	","	405:16:14708:14708	1214548	6	True				
ANR	1214626	Statement	b	405:17:14709:14709	1214548	7	True				
ANR	1214627	Statement	","	405:18:14710:14710	1214548	8	True				
ANR	1214628	Statement	c	405:19:14711:14711	1214548	9	True				
ANR	1214629	Statement	)	405:20:14712:14712	1214548	10	True				
ANR	1214630	Statement	arith_rshift_1	405:22:14714:14727	1214548	11	True				
ANR	1214631	Statement	(	405:36:14728:14728	1214548	12	True				
ANR	1214632	Statement	arith_rshift_1	405:37:14729:14742	1214548	13	True				
ANR	1214633	Statement	(	405:51:14743:14743	1214548	14	True				
ANR	1214634	Statement	arith_rshift_1	405:52:14744:14757	1214548	15	True				
ANR	1214635	Statement	(	405:66:14758:14758	1214548	16	True				
ANR	1214636	Statement	a	405:67:14759:14759	1214548	17	True				
ANR	1214637	Statement	)	405:68:14760:14760	1214548	18	True				
ANR	1214638	Statement	+	405:70:14762:14762	1214548	19	True				
ANR	1214639	Statement	b	405:72:14764:14764	1214548	20	True				
ANR	1214640	Statement	)	405:73:14765:14765	1214548	21	True				
ANR	1214641	Statement	+	405:75:14767:14767	1214548	22	True				
ANR	1214642	Statement	c	405:77:14769:14769	1214548	23	True				
ANR	1214643	Statement	)	405:78:14770:14770	1214548	24	True				
ANR	1214644	ExpressionStatement	"x += poly2 ( self -> ax , self -> bx , self -> cx )"	406:8:14780:14820	1214548	25	True				
ANR	1214645	AssignmentExpression	"x += poly2 ( self -> ax , self -> bx , self -> cx )"		1214548	0		+=			
ANR	1214646	Identifier	x		1214548	0					
ANR	1214647	CallExpression	"poly2 ( self -> ax , self -> bx , self -> cx )"		1214548	1					
ANR	1214648	Callee	poly2		1214548	0					
ANR	1214649	Identifier	poly2		1214548	0					
ANR	1214650	ArgumentList	self -> ax		1214548	1					
ANR	1214651	Argument	self -> ax		1214548	0					
ANR	1214652	PtrMemberAccess	self -> ax		1214548	0					
ANR	1214653	Identifier	self		1214548	0					
ANR	1214654	Identifier	ax		1214548	1					
ANR	1214655	Argument	self -> bx		1214548	1					
ANR	1214656	PtrMemberAccess	self -> bx		1214548	0					
ANR	1214657	Identifier	self		1214548	0					
ANR	1214658	Identifier	bx		1214548	1					
ANR	1214659	Argument	self -> cx		1214548	2					
ANR	1214660	PtrMemberAccess	self -> cx		1214548	0					
ANR	1214661	Identifier	self		1214548	0					
ANR	1214662	Identifier	cx		1214548	1					
ANR	1214663	ExpressionStatement	"y += poly2 ( self -> ay , self -> by , self -> cy )"	407:8:14830:14870	1214548	26	True				
ANR	1214664	AssignmentExpression	"y += poly2 ( self -> ay , self -> by , self -> cy )"		1214548	0		+=			
ANR	1214665	Identifier	y		1214548	0					
ANR	1214666	CallExpression	"poly2 ( self -> ay , self -> by , self -> cy )"		1214548	1					
ANR	1214667	Callee	poly2		1214548	0					
ANR	1214668	Identifier	poly2		1214548	0					
ANR	1214669	ArgumentList	self -> ay		1214548	1					
ANR	1214670	Argument	self -> ay		1214548	0					
ANR	1214671	PtrMemberAccess	self -> ay		1214548	0					
ANR	1214672	Identifier	self		1214548	0					
ANR	1214673	Identifier	ay		1214548	1					
ANR	1214674	Argument	self -> by		1214548	1					
ANR	1214675	PtrMemberAccess	self -> by		1214548	0					
ANR	1214676	Identifier	self		1214548	0					
ANR	1214677	Identifier	by		1214548	1					
ANR	1214678	Argument	self -> cy		1214548	2					
ANR	1214679	PtrMemberAccess	self -> cy		1214548	0					
ANR	1214680	Identifier	self		1214548	0					
ANR	1214681	Identifier	cy		1214548	1					
ANR	1214682	IdentifierDeclStatement	"undef poly2 if_debug2 ( '3' , ""[3]dx=%f, dy=%f\\n"" , fixed2float ( x - self -> x0 ) , fixed2float ( y - self -> y0 ) ) ;"	408:2:14874:15001	1214548	27	True				
ANR	1214683	IdentifierDecl	"if_debug2 ( '3' , ""[3]dx=%f, dy=%f\\n"" , fixed2float ( x - self -> x0 ) , fixed2float ( y - self -> y0 ) )"		1214548	0					
ANR	1214684	IdentifierDeclType	undef poly2		1214548	0					
ANR	1214685	Identifier	if_debug2		1214548	1					
ANR	1214686	Expression	"'3' , ""[3]dx=%f, dy=%f\\n"" , fixed2float ( x - self -> x0 ) , fixed2float ( y - self -> y0 )"		1214548	2					
ANR	1214687	PrimaryExpression	'3'		1214548	0					
ANR	1214688	Expression	"""[3]dx=%f, dy=%f\\n"" , fixed2float ( x - self -> x0 ) , fixed2float ( y - self -> y0 )"		1214548	1					
ANR	1214689	PrimaryExpression	"""[3]dx=%f, dy=%f\\n"""		1214548	0					
ANR	1214690	Expression	"fixed2float ( x - self -> x0 ) , fixed2float ( y - self -> y0 )"		1214548	1					
ANR	1214691	CallExpression	fixed2float ( x - self -> x0 )		1214548	0					
ANR	1214692	Callee	fixed2float		1214548	0					
ANR	1214693	Identifier	fixed2float		1214548	0					
ANR	1214694	ArgumentList	x - self -> x0		1214548	1					
ANR	1214695	Argument	x - self -> x0		1214548	0					
ANR	1214696	AdditiveExpression	x - self -> x0		1214548	0		-			
ANR	1214697	Identifier	x		1214548	0					
ANR	1214698	PtrMemberAccess	self -> x0		1214548	1					
ANR	1214699	Identifier	self		1214548	0					
ANR	1214700	Identifier	x0		1214548	1					
ANR	1214701	CallExpression	fixed2float ( y - self -> y0 )		1214548	1					
ANR	1214702	Callee	fixed2float		1214548	0					
ANR	1214703	Identifier	fixed2float		1214548	0					
ANR	1214704	ArgumentList	y - self -> y0		1214548	1					
ANR	1214705	Argument	y - self -> y0		1214548	0					
ANR	1214706	AdditiveExpression	y - self -> y0		1214548	0		-			
ANR	1214707	Identifier	y		1214548	0					
ANR	1214708	PtrMemberAccess	self -> y0		1214548	1					
ANR	1214709	Identifier	self		1214548	0					
ANR	1214710	Identifier	y0		1214548	1					
ANR	1214711	ExpressionStatement	"if_debug5 ( '3' , ""[3]%s x=%g, y=%g x=%ld y=%ld\\n"" , ( ( ( x ^ self -> x0 ) | ( y ^ self -> y0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"" ) , fixed2float ( x ) , fixed2float ( y ) , ( long ) x , ( long ) y )"	411:8:15011:15238	1214548	28	True				
ANR	1214712	CallExpression	"if_debug5 ( '3' , ""[3]%s x=%g, y=%g x=%ld y=%ld\\n"" , ( ( ( x ^ self -> x0 ) | ( y ^ self -> y0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"" ) , fixed2float ( x ) , fixed2float ( y ) , ( long ) x , ( long ) y )"		1214548	0					
ANR	1214713	Callee	if_debug5		1214548	0					
ANR	1214714	Identifier	if_debug5		1214548	0					
ANR	1214715	ArgumentList	'3'		1214548	1					
ANR	1214716	Argument	'3'		1214548	0					
ANR	1214717	PrimaryExpression	'3'		1214548	0					
ANR	1214718	Argument	"""[3]%s x=%g, y=%g x=%ld y=%ld\\n"""		1214548	1					
ANR	1214719	PrimaryExpression	"""[3]%s x=%g, y=%g x=%ld y=%ld\\n"""		1214548	0					
ANR	1214720	Argument	"( ( x ^ self -> x0 ) | ( y ^ self -> y0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"""		1214548	2					
ANR	1214721	ConditionalExpression	"( ( x ^ self -> x0 ) | ( y ^ self -> y0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"""		1214548	0					
ANR	1214722	Condition	( ( x ^ self -> x0 ) | ( y ^ self -> y0 ) ) & float2fixed ( - 0.5 )		1214548	0					
ANR	1214723	BitAndExpression	( ( x ^ self -> x0 ) | ( y ^ self -> y0 ) ) & float2fixed ( - 0.5 )		1214548	0		&			
ANR	1214724	InclusiveOrExpression	( x ^ self -> x0 ) | ( y ^ self -> y0 )		1214548	0		|			
ANR	1214725	ExclusiveOrExpression	x ^ self -> x0		1214548	0		^			
ANR	1214726	Identifier	x		1214548	0					
ANR	1214727	PtrMemberAccess	self -> x0		1214548	1					
ANR	1214728	Identifier	self		1214548	0					
ANR	1214729	Identifier	x0		1214548	1					
ANR	1214730	ExclusiveOrExpression	y ^ self -> y0		1214548	1		^			
ANR	1214731	Identifier	y		1214548	0					
ANR	1214732	PtrMemberAccess	self -> y0		1214548	1					
ANR	1214733	Identifier	self		1214548	0					
ANR	1214734	Identifier	y0		1214548	1					
ANR	1214735	CallExpression	float2fixed ( - 0.5 )		1214548	1					
ANR	1214736	Callee	float2fixed		1214548	0					
ANR	1214737	Identifier	float2fixed		1214548	0					
ANR	1214738	ArgumentList	- 0.5		1214548	1					
ANR	1214739	Argument	- 0.5		1214548	0					
ANR	1214740	UnaryOperationExpression	- 0.5		1214548	0					
ANR	1214741	UnaryOperator	-		1214548	0					
ANR	1214742	PrimaryExpression	0.5		1214548	1					
ANR	1214743	PrimaryExpression	"""add"""		1214548	1					
ANR	1214744	PrimaryExpression	"""skip"""		1214548	2					
ANR	1214745	Argument	fixed2float ( x )		1214548	3					
ANR	1214746	CallExpression	fixed2float ( x )		1214548	0					
ANR	1214747	Callee	fixed2float		1214548	0					
ANR	1214748	Identifier	fixed2float		1214548	0					
ANR	1214749	ArgumentList	x		1214548	1					
ANR	1214750	Argument	x		1214548	0					
ANR	1214751	Identifier	x		1214548	0					
ANR	1214752	Argument	fixed2float ( y )		1214548	4					
ANR	1214753	CallExpression	fixed2float ( y )		1214548	0					
ANR	1214754	Callee	fixed2float		1214548	0					
ANR	1214755	Identifier	fixed2float		1214548	0					
ANR	1214756	ArgumentList	y		1214548	1					
ANR	1214757	Argument	y		1214548	0					
ANR	1214758	Identifier	y		1214548	0					
ANR	1214759	Argument	( long ) x		1214548	5					
ANR	1214760	CastExpression	( long ) x		1214548	0					
ANR	1214761	CastTarget	long		1214548	0					
ANR	1214762	Identifier	x		1214548	1					
ANR	1214763	Argument	( long ) y		1214548	6					
ANR	1214764	CastExpression	( long ) y		1214548	0					
ANR	1214765	CastTarget	long		1214548	0					
ANR	1214766	Identifier	y		1214548	1					
ANR	1214767	ExpressionStatement	"self -> lx1 = x , self -> ly1 = y"	415:8:15248:15276	1214548	29	True				
ANR	1214768	Expression	"self -> lx1 = x , self -> ly1 = y"		1214548	0					
ANR	1214769	AssignmentExpression	self -> lx1 = x		1214548	0		=			
ANR	1214770	PtrMemberAccess	self -> lx1		1214548	0					
ANR	1214771	Identifier	self		1214548	0					
ANR	1214772	Identifier	lx1		1214548	1					
ANR	1214773	Identifier	x		1214548	1					
ANR	1214774	AssignmentExpression	self -> ly1 = y		1214548	1		=			
ANR	1214775	PtrMemberAccess	self -> ly1		1214548	0					
ANR	1214776	Identifier	self		1214548	0					
ANR	1214777	Identifier	ly1		1214548	1					
ANR	1214778	Identifier	y		1214548	1					
ANR	1214779	ReturnStatement	return true ;	416:8:15286:15297	1214548	30	True				
ANR	1214780	Identifier	true		1214548	0					
ANR	1214781	ElseStatement	else		1214548	0					
ANR	1214782	CompoundStatement		68:34:2987:3051	1214548	0					
ANR	1214783	ExpressionStatement	-- self -> i	418:8:15320:15329	1214548	0	True				
ANR	1214784	UnaryExpression	-- self -> i		1214548	0					
ANR	1214785	IncDec	--		1214548	0					
ANR	1214786	PtrMemberAccess	self -> i		1214548	1					
ANR	1214787	Identifier	self		1214548	0					
ANR	1214788	Identifier	i		1214548	1					
ANR	1214789	IfStatement	if ( self -> i == 0 )		1214548	1					
ANR	1214790	Condition	self -> i == 0	419:12:15343:15354	1214548	0	True				
ANR	1214791	EqualityExpression	self -> i == 0		1214548	0		==			
ANR	1214792	PtrMemberAccess	self -> i		1214548	0					
ANR	1214793	Identifier	self		1214548	0					
ANR	1214794	Identifier	i		1214548	1					
ANR	1214795	PrimaryExpression	0		1214548	1					
ANR	1214796	GotoStatement	goto last ;	420:12:15369:15378	1214548	1	True				
ANR	1214797	Identifier	last		1214548	0					
ANR	1214798	Statement	if	421:2:15417:15418	1214548	2	True				
ANR	1214799	Statement	defined	421:5:15420:15426	1214548	3	True				
ANR	1214800	Statement	(	421:12:15427:15427	1214548	4	True				
ANR	1214801	Statement	DEBUG	421:13:15428:15432	1214548	5	True				
ANR	1214802	Statement	)	421:18:15433:15433	1214548	6	True				
ANR	1214803	Statement	&&	421:20:15435:15436	1214548	7	True				
ANR	1214804	Statement	!	421:23:15438:15438	1214548	8	True				
ANR	1214805	Statement	defined	421:24:15439:15445	1214548	9	True				
ANR	1214806	ExpressionStatement	( GS_THREADSAFE ) gx_flattened_iterator__print_state ( self )	421:31:15446:15514	1214548	10	True				
ANR	1214807	CastExpression	( GS_THREADSAFE ) gx_flattened_iterator__print_state ( self )		1214548	0					
ANR	1214808	CastTarget	GS_THREADSAFE		1214548	0					
ANR	1214809	CallExpression	gx_flattened_iterator__print_state ( self )		1214548	1					
ANR	1214810	Callee	gx_flattened_iterator__print_state		1214548	0					
ANR	1214811	Identifier	gx_flattened_iterator__print_state		1214548	0					
ANR	1214812	ArgumentList	self		1214548	1					
ANR	1214813	Argument	self		1214548	0					
ANR	1214814	Identifier	self		1214548	0					
ANR	1214815	Statement	endif	423:2:15518:15522	1214548	11	True				
ANR	1214816	Statement	define	424:2:15526:15531	1214548	12	True				
ANR	1214817	Statement	accum	424:9:15533:15537	1214548	13	True				
ANR	1214818	Statement	(	424:14:15538:15538	1214548	14	True				
ANR	1214819	Statement	i	424:15:15539:15539	1214548	15	True				
ANR	1214820	Statement	","	424:16:15540:15540	1214548	16	True				
ANR	1214821	Statement	r	424:18:15542:15542	1214548	17	True				
ANR	1214822	Statement	","	424:19:15543:15543	1214548	18	True				
ANR	1214823	Statement	di	424:21:15545:15546	1214548	19	True				
ANR	1214824	Statement	","	424:23:15547:15547	1214548	20	True				
ANR	1214825	Statement	dr	424:25:15549:15550	1214548	21	True				
ANR	1214826	Statement	","	424:27:15551:15551	1214548	22	True				
ANR	1214827	Statement	rmask	424:29:15553:15557	1214548	23	True				
ANR	1214828	Statement	)	424:34:15558:15558	1214548	24	True				
ANR	1214829	IfStatement	if ( ( r += dr ) > rmask )		1214548	25					
ANR	1214830	Condition	( r += dr ) > rmask	425:29:15590:15606	1214548	0	True				
ANR	1214831	RelationalExpression	( r += dr ) > rmask		1214548	0		>			
ANR	1214832	AssignmentExpression	r += dr		1214548	0		+=			
ANR	1214833	Identifier	r		1214548	0					
ANR	1214834	Identifier	dr		1214548	1					
ANR	1214835	Identifier	rmask		1214548	1					
ANR	1214836	ExpressionStatement	"r &= rmask , i += di + 1"	425:49:15610:15633	1214548	1	True				
ANR	1214837	Expression	"r &= rmask , i += di + 1"		1214548	0					
ANR	1214838	AssignmentExpression	r &= rmask		1214548	0		&=			
ANR	1214839	Identifier	r		1214548	0					
ANR	1214840	Identifier	rmask		1214548	1					
ANR	1214841	AssignmentExpression	i += di + 1		1214548	1		+=			
ANR	1214842	Identifier	i		1214548	0					
ANR	1214843	AdditiveExpression	di + 1		1214548	1		+			
ANR	1214844	Identifier	di		1214548	0					
ANR	1214845	PrimaryExpression	1		1214548	1					
ANR	1214846	ElseStatement	else		1214548	0					
ANR	1214847	Statement	i	426:29:15665:15665	1214548	0	True				
ANR	1214848	Statement	+=	426:31:15667:15668	1214548	26	True				
ANR	1214849	IdentifierDeclStatement	"di accum ( x , self -> rx , self -> idx , self -> rdx , self -> rmask ) ;"	426:34:15670:15734	1214548	27	True				
ANR	1214850	IdentifierDecl	"accum ( x , self -> rx , self -> idx , self -> rdx , self -> rmask )"		1214548	0					
ANR	1214851	IdentifierDeclType	di		1214548	0					
ANR	1214852	Identifier	accum		1214548	1					
ANR	1214853	Expression	"x , self -> rx , self -> idx , self -> rdx , self -> rmask"		1214548	2					
ANR	1214854	Identifier	x		1214548	0					
ANR	1214855	Expression	"self -> rx , self -> idx , self -> rdx , self -> rmask"		1214548	1					
ANR	1214856	PtrMemberAccess	self -> rx		1214548	0					
ANR	1214857	Identifier	self		1214548	0					
ANR	1214858	Identifier	rx		1214548	1					
ANR	1214859	Expression	"self -> idx , self -> rdx , self -> rmask"		1214548	1					
ANR	1214860	PtrMemberAccess	self -> idx		1214548	0					
ANR	1214861	Identifier	self		1214548	0					
ANR	1214862	Identifier	idx		1214548	1					
ANR	1214863	Expression	"self -> rdx , self -> rmask"		1214548	1					
ANR	1214864	PtrMemberAccess	self -> rdx		1214548	0					
ANR	1214865	Identifier	self		1214548	0					
ANR	1214866	Identifier	rdx		1214548	1					
ANR	1214867	PtrMemberAccess	self -> rmask		1214548	1					
ANR	1214868	Identifier	self		1214548	0					
ANR	1214869	Identifier	rmask		1214548	1					
ANR	1214870	ExpressionStatement	"accum ( y , self -> ry , self -> idy , self -> rdy , self -> rmask )"	428:8:15744:15797	1214548	28	True				
ANR	1214871	CallExpression	"accum ( y , self -> ry , self -> idy , self -> rdy , self -> rmask )"		1214548	0					
ANR	1214872	Callee	accum		1214548	0					
ANR	1214873	Identifier	accum		1214548	0					
ANR	1214874	ArgumentList	y		1214548	1					
ANR	1214875	Argument	y		1214548	0					
ANR	1214876	Identifier	y		1214548	0					
ANR	1214877	Argument	self -> ry		1214548	1					
ANR	1214878	PtrMemberAccess	self -> ry		1214548	0					
ANR	1214879	Identifier	self		1214548	0					
ANR	1214880	Identifier	ry		1214548	1					
ANR	1214881	Argument	self -> idy		1214548	2					
ANR	1214882	PtrMemberAccess	self -> idy		1214548	0					
ANR	1214883	Identifier	self		1214548	0					
ANR	1214884	Identifier	idy		1214548	1					
ANR	1214885	Argument	self -> rdy		1214548	3					
ANR	1214886	PtrMemberAccess	self -> rdy		1214548	0					
ANR	1214887	Identifier	self		1214548	0					
ANR	1214888	Identifier	rdy		1214548	1					
ANR	1214889	Argument	self -> rmask		1214548	4					
ANR	1214890	PtrMemberAccess	self -> rmask		1214548	0					
ANR	1214891	Identifier	self		1214548	0					
ANR	1214892	Identifier	rmask		1214548	1					
ANR	1214893	ExpressionStatement	"accum ( self -> idx , self -> rdx , self -> id2x , self -> rd2x , self -> rmask )"	429:8:15807:15871	1214548	29	True				
ANR	1214894	CallExpression	"accum ( self -> idx , self -> rdx , self -> id2x , self -> rd2x , self -> rmask )"		1214548	0					
ANR	1214895	Callee	accum		1214548	0					
ANR	1214896	Identifier	accum		1214548	0					
ANR	1214897	ArgumentList	self -> idx		1214548	1					
ANR	1214898	Argument	self -> idx		1214548	0					
ANR	1214899	PtrMemberAccess	self -> idx		1214548	0					
ANR	1214900	Identifier	self		1214548	0					
ANR	1214901	Identifier	idx		1214548	1					
ANR	1214902	Argument	self -> rdx		1214548	1					
ANR	1214903	PtrMemberAccess	self -> rdx		1214548	0					
ANR	1214904	Identifier	self		1214548	0					
ANR	1214905	Identifier	rdx		1214548	1					
ANR	1214906	Argument	self -> id2x		1214548	2					
ANR	1214907	PtrMemberAccess	self -> id2x		1214548	0					
ANR	1214908	Identifier	self		1214548	0					
ANR	1214909	Identifier	id2x		1214548	1					
ANR	1214910	Argument	self -> rd2x		1214548	3					
ANR	1214911	PtrMemberAccess	self -> rd2x		1214548	0					
ANR	1214912	Identifier	self		1214548	0					
ANR	1214913	Identifier	rd2x		1214548	1					
ANR	1214914	Argument	self -> rmask		1214548	4					
ANR	1214915	PtrMemberAccess	self -> rmask		1214548	0					
ANR	1214916	Identifier	self		1214548	0					
ANR	1214917	Identifier	rmask		1214548	1					
ANR	1214918	ExpressionStatement	"accum ( self -> idy , self -> rdy , self -> id2y , self -> rd2y , self -> rmask )"	430:8:15881:15945	1214548	30	True				
ANR	1214919	CallExpression	"accum ( self -> idy , self -> rdy , self -> id2y , self -> rd2y , self -> rmask )"		1214548	0					
ANR	1214920	Callee	accum		1214548	0					
ANR	1214921	Identifier	accum		1214548	0					
ANR	1214922	ArgumentList	self -> idy		1214548	1					
ANR	1214923	Argument	self -> idy		1214548	0					
ANR	1214924	PtrMemberAccess	self -> idy		1214548	0					
ANR	1214925	Identifier	self		1214548	0					
ANR	1214926	Identifier	idy		1214548	1					
ANR	1214927	Argument	self -> rdy		1214548	1					
ANR	1214928	PtrMemberAccess	self -> rdy		1214548	0					
ANR	1214929	Identifier	self		1214548	0					
ANR	1214930	Identifier	rdy		1214548	1					
ANR	1214931	Argument	self -> id2y		1214548	2					
ANR	1214932	PtrMemberAccess	self -> id2y		1214548	0					
ANR	1214933	Identifier	self		1214548	0					
ANR	1214934	Identifier	id2y		1214548	1					
ANR	1214935	Argument	self -> rd2y		1214548	3					
ANR	1214936	PtrMemberAccess	self -> rd2y		1214548	0					
ANR	1214937	Identifier	self		1214548	0					
ANR	1214938	Identifier	rd2y		1214548	1					
ANR	1214939	Argument	self -> rmask		1214548	4					
ANR	1214940	PtrMemberAccess	self -> rmask		1214548	0					
ANR	1214941	Identifier	self		1214548	0					
ANR	1214942	Identifier	rmask		1214548	1					
ANR	1214943	ExpressionStatement	"accum ( self -> id2x , self -> rd2x , self -> id3x , self -> rd3x , self -> rmask )"	431:8:15955:16021	1214548	31	True				
ANR	1214944	CallExpression	"accum ( self -> id2x , self -> rd2x , self -> id3x , self -> rd3x , self -> rmask )"		1214548	0					
ANR	1214945	Callee	accum		1214548	0					
ANR	1214946	Identifier	accum		1214548	0					
ANR	1214947	ArgumentList	self -> id2x		1214548	1					
ANR	1214948	Argument	self -> id2x		1214548	0					
ANR	1214949	PtrMemberAccess	self -> id2x		1214548	0					
ANR	1214950	Identifier	self		1214548	0					
ANR	1214951	Identifier	id2x		1214548	1					
ANR	1214952	Argument	self -> rd2x		1214548	1					
ANR	1214953	PtrMemberAccess	self -> rd2x		1214548	0					
ANR	1214954	Identifier	self		1214548	0					
ANR	1214955	Identifier	rd2x		1214548	1					
ANR	1214956	Argument	self -> id3x		1214548	2					
ANR	1214957	PtrMemberAccess	self -> id3x		1214548	0					
ANR	1214958	Identifier	self		1214548	0					
ANR	1214959	Identifier	id3x		1214548	1					
ANR	1214960	Argument	self -> rd3x		1214548	3					
ANR	1214961	PtrMemberAccess	self -> rd3x		1214548	0					
ANR	1214962	Identifier	self		1214548	0					
ANR	1214963	Identifier	rd3x		1214548	1					
ANR	1214964	Argument	self -> rmask		1214548	4					
ANR	1214965	PtrMemberAccess	self -> rmask		1214548	0					
ANR	1214966	Identifier	self		1214548	0					
ANR	1214967	Identifier	rmask		1214548	1					
ANR	1214968	ExpressionStatement	"accum ( self -> id2y , self -> rd2y , self -> id3y , self -> rd3y , self -> rmask )"	432:8:16031:16097	1214548	32	True				
ANR	1214969	CallExpression	"accum ( self -> id2y , self -> rd2y , self -> id3y , self -> rd3y , self -> rmask )"		1214548	0					
ANR	1214970	Callee	accum		1214548	0					
ANR	1214971	Identifier	accum		1214548	0					
ANR	1214972	ArgumentList	self -> id2y		1214548	1					
ANR	1214973	Argument	self -> id2y		1214548	0					
ANR	1214974	PtrMemberAccess	self -> id2y		1214548	0					
ANR	1214975	Identifier	self		1214548	0					
ANR	1214976	Identifier	id2y		1214548	1					
ANR	1214977	Argument	self -> rd2y		1214548	1					
ANR	1214978	PtrMemberAccess	self -> rd2y		1214548	0					
ANR	1214979	Identifier	self		1214548	0					
ANR	1214980	Identifier	rd2y		1214548	1					
ANR	1214981	Argument	self -> id3y		1214548	2					
ANR	1214982	PtrMemberAccess	self -> id3y		1214548	0					
ANR	1214983	Identifier	self		1214548	0					
ANR	1214984	Identifier	id3y		1214548	1					
ANR	1214985	Argument	self -> rd3y		1214548	3					
ANR	1214986	PtrMemberAccess	self -> rd3y		1214548	0					
ANR	1214987	Identifier	self		1214548	0					
ANR	1214988	Identifier	rd3y		1214548	1					
ANR	1214989	Argument	self -> rmask		1214548	4					
ANR	1214990	PtrMemberAccess	self -> rmask		1214548	0					
ANR	1214991	Identifier	self		1214548	0					
ANR	1214992	Identifier	rmask		1214548	1					
ANR	1214993	ExpressionStatement	"if_debug5 ( '3' , ""[3]%s x=%g, y=%g x=%ld y=%ld\\n"" , ( ( ( x ^ self -> lx0 ) | ( y ^ self -> ly0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"" ) , fixed2float ( x ) , fixed2float ( y ) , ( long ) x , ( long ) y )"	433:8:16107:16336	1214548	33	True				
ANR	1214994	CallExpression	"if_debug5 ( '3' , ""[3]%s x=%g, y=%g x=%ld y=%ld\\n"" , ( ( ( x ^ self -> lx0 ) | ( y ^ self -> ly0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"" ) , fixed2float ( x ) , fixed2float ( y ) , ( long ) x , ( long ) y )"		1214548	0					
ANR	1214995	Callee	if_debug5		1214548	0					
ANR	1214996	Identifier	if_debug5		1214548	0					
ANR	1214997	ArgumentList	'3'		1214548	1					
ANR	1214998	Argument	'3'		1214548	0					
ANR	1214999	PrimaryExpression	'3'		1214548	0					
ANR	1215000	Argument	"""[3]%s x=%g, y=%g x=%ld y=%ld\\n"""		1214548	1					
ANR	1215001	PrimaryExpression	"""[3]%s x=%g, y=%g x=%ld y=%ld\\n"""		1214548	0					
ANR	1215002	Argument	"( ( x ^ self -> lx0 ) | ( y ^ self -> ly0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"""		1214548	2					
ANR	1215003	ConditionalExpression	"( ( x ^ self -> lx0 ) | ( y ^ self -> ly0 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"""		1214548	0					
ANR	1215004	Condition	( ( x ^ self -> lx0 ) | ( y ^ self -> ly0 ) ) & float2fixed ( - 0.5 )		1214548	0					
ANR	1215005	BitAndExpression	( ( x ^ self -> lx0 ) | ( y ^ self -> ly0 ) ) & float2fixed ( - 0.5 )		1214548	0		&			
ANR	1215006	InclusiveOrExpression	( x ^ self -> lx0 ) | ( y ^ self -> ly0 )		1214548	0		|			
ANR	1215007	ExclusiveOrExpression	x ^ self -> lx0		1214548	0		^			
ANR	1215008	Identifier	x		1214548	0					
ANR	1215009	PtrMemberAccess	self -> lx0		1214548	1					
ANR	1215010	Identifier	self		1214548	0					
ANR	1215011	Identifier	lx0		1214548	1					
ANR	1215012	ExclusiveOrExpression	y ^ self -> ly0		1214548	1		^			
ANR	1215013	Identifier	y		1214548	0					
ANR	1215014	PtrMemberAccess	self -> ly0		1214548	1					
ANR	1215015	Identifier	self		1214548	0					
ANR	1215016	Identifier	ly0		1214548	1					
ANR	1215017	CallExpression	float2fixed ( - 0.5 )		1214548	1					
ANR	1215018	Callee	float2fixed		1214548	0					
ANR	1215019	Identifier	float2fixed		1214548	0					
ANR	1215020	ArgumentList	- 0.5		1214548	1					
ANR	1215021	Argument	- 0.5		1214548	0					
ANR	1215022	UnaryOperationExpression	- 0.5		1214548	0					
ANR	1215023	UnaryOperator	-		1214548	0					
ANR	1215024	PrimaryExpression	0.5		1214548	1					
ANR	1215025	PrimaryExpression	"""add"""		1214548	1					
ANR	1215026	PrimaryExpression	"""skip"""		1214548	2					
ANR	1215027	Argument	fixed2float ( x )		1214548	3					
ANR	1215028	CallExpression	fixed2float ( x )		1214548	0					
ANR	1215029	Callee	fixed2float		1214548	0					
ANR	1215030	Identifier	fixed2float		1214548	0					
ANR	1215031	ArgumentList	x		1214548	1					
ANR	1215032	Argument	x		1214548	0					
ANR	1215033	Identifier	x		1214548	0					
ANR	1215034	Argument	fixed2float ( y )		1214548	4					
ANR	1215035	CallExpression	fixed2float ( y )		1214548	0					
ANR	1215036	Callee	fixed2float		1214548	0					
ANR	1215037	Identifier	fixed2float		1214548	0					
ANR	1215038	ArgumentList	y		1214548	1					
ANR	1215039	Argument	y		1214548	0					
ANR	1215040	Identifier	y		1214548	0					
ANR	1215041	Argument	( long ) x		1214548	5					
ANR	1215042	CastExpression	( long ) x		1214548	0					
ANR	1215043	CastTarget	long		1214548	0					
ANR	1215044	Identifier	x		1214548	1					
ANR	1215045	Argument	( long ) y		1214548	6					
ANR	1215046	CastExpression	( long ) y		1214548	0					
ANR	1215047	CastTarget	long		1214548	0					
ANR	1215048	Identifier	y		1214548	1					
ANR	1215049	Statement	undef	437:2:16340:16344	1214548	34	True				
ANR	1215050	Statement	accum	437:8:16346:16350	1214548	35	True				
ANR	1215051	ExpressionStatement	self -> lx1 = self -> x = x	438:8:16360:16383	1214548	36	True				
ANR	1215052	AssignmentExpression	self -> lx1 = self -> x = x		1214548	0		=			
ANR	1215053	PtrMemberAccess	self -> lx1		1214548	0					
ANR	1215054	Identifier	self		1214548	0					
ANR	1215055	Identifier	lx1		1214548	1					
ANR	1215056	AssignmentExpression	self -> x = x		1214548	1		=			
ANR	1215057	PtrMemberAccess	self -> x		1214548	0					
ANR	1215058	Identifier	self		1214548	0					
ANR	1215059	Identifier	x		1214548	1					
ANR	1215060	Identifier	x		1214548	1					
ANR	1215061	ExpressionStatement	self -> ly1 = self -> y = y	439:8:16393:16416	1214548	37	True				
ANR	1215062	AssignmentExpression	self -> ly1 = self -> y = y		1214548	0		=			
ANR	1215063	PtrMemberAccess	self -> ly1		1214548	0					
ANR	1215064	Identifier	self		1214548	0					
ANR	1215065	Identifier	ly1		1214548	1					
ANR	1215066	AssignmentExpression	self -> y = y		1214548	1		=			
ANR	1215067	PtrMemberAccess	self -> y		1214548	0					
ANR	1215068	Identifier	self		1214548	0					
ANR	1215069	Identifier	y		1214548	1					
ANR	1215070	Identifier	y		1214548	1					
ANR	1215071	ReturnStatement	return true ;	440:8:16426:16437	1214548	38	True				
ANR	1215072	Identifier	true		1214548	0					
ANR	1215073	Label	last :	442:0:16445:16449	1214548	5	True				
ANR	1215074	Identifier	last		1214548	0					
ANR	1215075	ExpressionStatement	self -> lx1 = self -> x3	443:4:16455:16475	1214548	6	True				
ANR	1215076	AssignmentExpression	self -> lx1 = self -> x3		1214548	0		=			
ANR	1215077	PtrMemberAccess	self -> lx1		1214548	0					
ANR	1215078	Identifier	self		1214548	0					
ANR	1215079	Identifier	lx1		1214548	1					
ANR	1215080	PtrMemberAccess	self -> x3		1214548	1					
ANR	1215081	Identifier	self		1214548	0					
ANR	1215082	Identifier	x3		1214548	1					
ANR	1215083	ExpressionStatement	self -> ly1 = self -> y3	444:4:16481:16501	1214548	7	True				
ANR	1215084	AssignmentExpression	self -> ly1 = self -> y3		1214548	0		=			
ANR	1215085	PtrMemberAccess	self -> ly1		1214548	0					
ANR	1215086	Identifier	self		1214548	0					
ANR	1215087	Identifier	ly1		1214548	1					
ANR	1215088	PtrMemberAccess	self -> y3		1214548	1					
ANR	1215089	Identifier	self		1214548	0					
ANR	1215090	Identifier	y3		1214548	1					
ANR	1215091	ExpressionStatement	"if_debug4 ( '3' , ""[3]last x=%g, y=%g x=%ld y=%ld\\n"" , fixed2float ( self -> lx1 ) , fixed2float ( self -> ly1 ) , ( long ) self -> lx1 , ( long ) self -> ly1 )"	445:4:16507:16667	1214548	8	True				
ANR	1215092	CallExpression	"if_debug4 ( '3' , ""[3]last x=%g, y=%g x=%ld y=%ld\\n"" , fixed2float ( self -> lx1 ) , fixed2float ( self -> ly1 ) , ( long ) self -> lx1 , ( long ) self -> ly1 )"		1214548	0					
ANR	1215093	Callee	if_debug4		1214548	0					
ANR	1215094	Identifier	if_debug4		1214548	0					
ANR	1215095	ArgumentList	'3'		1214548	1					
ANR	1215096	Argument	'3'		1214548	0					
ANR	1215097	PrimaryExpression	'3'		1214548	0					
ANR	1215098	Argument	"""[3]last x=%g, y=%g x=%ld y=%ld\\n"""		1214548	1					
ANR	1215099	PrimaryExpression	"""[3]last x=%g, y=%g x=%ld y=%ld\\n"""		1214548	0					
ANR	1215100	Argument	fixed2float ( self -> lx1 )		1214548	2					
ANR	1215101	CallExpression	fixed2float ( self -> lx1 )		1214548	0					
ANR	1215102	Callee	fixed2float		1214548	0					
ANR	1215103	Identifier	fixed2float		1214548	0					
ANR	1215104	ArgumentList	self -> lx1		1214548	1					
ANR	1215105	Argument	self -> lx1		1214548	0					
ANR	1215106	PtrMemberAccess	self -> lx1		1214548	0					
ANR	1215107	Identifier	self		1214548	0					
ANR	1215108	Identifier	lx1		1214548	1					
ANR	1215109	Argument	fixed2float ( self -> ly1 )		1214548	3					
ANR	1215110	CallExpression	fixed2float ( self -> ly1 )		1214548	0					
ANR	1215111	Callee	fixed2float		1214548	0					
ANR	1215112	Identifier	fixed2float		1214548	0					
ANR	1215113	ArgumentList	self -> ly1		1214548	1					
ANR	1215114	Argument	self -> ly1		1214548	0					
ANR	1215115	PtrMemberAccess	self -> ly1		1214548	0					
ANR	1215116	Identifier	self		1214548	0					
ANR	1215117	Identifier	ly1		1214548	1					
ANR	1215118	Argument	( long ) self -> lx1		1214548	4					
ANR	1215119	CastExpression	( long ) self -> lx1		1214548	0					
ANR	1215120	CastTarget	long		1214548	0					
ANR	1215121	PtrMemberAccess	self -> lx1		1214548	1					
ANR	1215122	Identifier	self		1214548	0					
ANR	1215123	Identifier	lx1		1214548	1					
ANR	1215124	Argument	( long ) self -> ly1		1214548	5					
ANR	1215125	CastExpression	( long ) self -> ly1		1214548	0					
ANR	1215126	CastTarget	long		1214548	0					
ANR	1215127	PtrMemberAccess	self -> ly1		1214548	1					
ANR	1215128	Identifier	self		1214548	0					
ANR	1215129	Identifier	ly1		1214548	1					
ANR	1215130	ReturnStatement	return false ;	448:4:16673:16685	1214548	9	True				
ANR	1215131	Identifier	false		1214548	0					
ANR	1215132	ReturnType	int		1214548	1					
ANR	1215133	Identifier	gx_flattened_iterator__next		1214548	2					
ANR	1215134	ParameterList	gx_flattened_iterator * self		1214548	3					
ANR	1215135	Parameter	gx_flattened_iterator * self	358:28:12653:12679	1214548	0	True				
ANR	1215136	ParameterType	gx_flattened_iterator *		1214548	0					
ANR	1215137	Identifier	self		1214548	1					
ANR	1215138	CFGEntryNode	ENTRY		1214548		True				
ANR	1215139	CFGExitNode	EXIT		1214548		True				
ANR	1215140	Symbol	self -> x		1214548						
ANR	1215141	Symbol	self -> y		1214548						
ANR	1215142	Symbol	di		1214548						
ANR	1215143	Symbol	self -> k		1214548						
ANR	1215144	Symbol	dr		1214548						
ANR	1215145	Symbol	self -> i		1214548						
ANR	1215146	Symbol	self -> cx		1214548						
ANR	1215147	Symbol	self -> id3y		1214548						
ANR	1215148	Symbol	self -> cy		1214548						
ANR	1215149	Symbol	self -> id3x		1214548						
ANR	1215150	Symbol	* self		1214548						
ANR	1215151	Symbol	rmask		1214548						
ANR	1215152	Symbol	self -> ry		1214548						
ANR	1215153	Symbol	self -> rmask		1214548						
ANR	1215154	Symbol	self -> rdx		1214548						
ANR	1215155	Symbol	self -> rdy		1214548						
ANR	1215156	Symbol	poly2		1214548						
ANR	1215157	Symbol	self -> by		1214548						
ANR	1215158	Symbol	self -> y0		1214548						
ANR	1215159	Symbol	true		1214548						
ANR	1215160	Symbol	self -> rd3x		1214548						
ANR	1215161	Symbol	self -> rd3y		1214548						
ANR	1215162	Symbol	if_debug2		1214548						
ANR	1215163	Symbol	self -> id2x		1214548						
ANR	1215164	Symbol	self -> bx		1214548						
ANR	1215165	Symbol	self -> id2y		1214548						
ANR	1215166	Symbol	self -> y3		1214548						
ANR	1215167	Symbol	gs_error_unregistered		1214548						
ANR	1215168	Symbol	self -> lx0		1214548						
ANR	1215169	Symbol	self -> lx1		1214548						
ANR	1215170	Symbol	float2fixed		1214548						
ANR	1215171	Symbol	self -> ax		1214548						
ANR	1215172	Symbol	self -> ay		1214548						
ANR	1215173	Symbol	self -> x0		1214548						
ANR	1215174	Symbol	self -> rd2x		1214548						
ANR	1215175	Symbol	accum		1214548						
ANR	1215176	Symbol	self -> x3		1214548						
ANR	1215177	Symbol	self -> rd2y		1214548						
ANR	1215178	Symbol	fixed2float		1214548						
ANR	1215179	Symbol	false		1214548						
ANR	1215180	Symbol	i		1214548						
ANR	1215181	Symbol	self -> ly0		1214548						
ANR	1215182	Symbol	self -> ly1		1214548						
ANR	1215183	Symbol	r		1214548						
ANR	1215184	Symbol	self -> idy		1214548						
ANR	1215185	Symbol	self -> idx		1214548						
ANR	1215186	Symbol	x		1214548						
ANR	1215187	Symbol	self		1214548						
ANR	1215188	Symbol	y		1214548						
ANR	1215189	Function	gx_flattened_iterator__unaccum	451:0:16690:17367							
ANR	1215190	FunctionDef	gx_flattened_iterator__unaccum (gx_flattened_iterator * self)		1215189	0					
ANR	1215191	CompoundStatement		453:0:16769:17367	1215189	0					
ANR	1215192	Statement	define	454:4:16775:16780	1215189	0	True				
ANR	1215193	Statement	unaccum	454:11:16782:16788	1215189	1	True				
ANR	1215194	Statement	(	454:18:16789:16789	1215189	2	True				
ANR	1215195	Statement	i	454:19:16790:16790	1215189	3	True				
ANR	1215196	Statement	","	454:20:16791:16791	1215189	4	True				
ANR	1215197	Statement	r	454:22:16793:16793	1215189	5	True				
ANR	1215198	Statement	","	454:23:16794:16794	1215189	6	True				
ANR	1215199	Statement	di	454:25:16796:16797	1215189	7	True				
ANR	1215200	Statement	","	454:27:16798:16798	1215189	8	True				
ANR	1215201	Statement	dr	454:29:16800:16801	1215189	9	True				
ANR	1215202	Statement	","	454:31:16802:16802	1215189	10	True				
ANR	1215203	Statement	rmask	454:33:16804:16808	1215189	11	True				
ANR	1215204	Statement	)	454:38:16809:16809	1215189	12	True				
ANR	1215205	IfStatement	if ( r < dr )		1215189	13					
ANR	1215206	Condition	r < dr	455:25:16837:16842	1215189	0	True				
ANR	1215207	RelationalExpression	r < dr		1215189	0		<			
ANR	1215208	Identifier	r		1215189	0					
ANR	1215209	Identifier	dr		1215189	1					
ANR	1215210	ExpressionStatement	"r += rmask + 1 - dr , i -= di + 1"	455:34:16846:16878	1215189	1	True				
ANR	1215211	Expression	"r += rmask + 1 - dr , i -= di + 1"		1215189	0					
ANR	1215212	AssignmentExpression	r += rmask + 1 - dr		1215189	0		+=			
ANR	1215213	Identifier	r		1215189	0					
ANR	1215214	AdditiveExpression	rmask + 1 - dr		1215189	1		+			
ANR	1215215	Identifier	rmask		1215189	0					
ANR	1215216	AdditiveExpression	1 - dr		1215189	1		-			
ANR	1215217	PrimaryExpression	1		1215189	0					
ANR	1215218	Identifier	dr		1215189	1					
ANR	1215219	AssignmentExpression	i -= di + 1		1215189	1		-=			
ANR	1215220	Identifier	i		1215189	0					
ANR	1215221	AdditiveExpression	di + 1		1215189	1		+			
ANR	1215222	Identifier	di		1215189	0					
ANR	1215223	PrimaryExpression	1		1215189	1					
ANR	1215224	ElseStatement	else		1215189	0					
ANR	1215225	Statement	r	456:25:16906:16906	1215189	0	True				
ANR	1215226	Statement	-=	456:27:16908:16909	1215189	14	True				
ANR	1215227	Statement	dr	456:30:16911:16912	1215189	15	True				
ANR	1215228	Statement	","	456:32:16913:16913	1215189	16	True				
ANR	1215229	Statement	i	456:34:16915:16915	1215189	17	True				
ANR	1215230	Statement	-=	456:36:16917:16918	1215189	18	True				
ANR	1215231	IdentifierDeclStatement	"di unaccum ( self -> id2x , self -> rd2x , self -> id3x , self -> rd3x , self -> rmask ) ;"	456:39:16920:16995	1215189	19	True				
ANR	1215232	IdentifierDecl	"unaccum ( self -> id2x , self -> rd2x , self -> id3x , self -> rd3x , self -> rmask )"		1215189	0					
ANR	1215233	IdentifierDeclType	di		1215189	0					
ANR	1215234	Identifier	unaccum		1215189	1					
ANR	1215235	Expression	"self -> id2x , self -> rd2x , self -> id3x , self -> rd3x , self -> rmask"		1215189	2					
ANR	1215236	PtrMemberAccess	self -> id2x		1215189	0					
ANR	1215237	Identifier	self		1215189	0					
ANR	1215238	Identifier	id2x		1215189	1					
ANR	1215239	Expression	"self -> rd2x , self -> id3x , self -> rd3x , self -> rmask"		1215189	1					
ANR	1215240	PtrMemberAccess	self -> rd2x		1215189	0					
ANR	1215241	Identifier	self		1215189	0					
ANR	1215242	Identifier	rd2x		1215189	1					
ANR	1215243	Expression	"self -> id3x , self -> rd3x , self -> rmask"		1215189	1					
ANR	1215244	PtrMemberAccess	self -> id3x		1215189	0					
ANR	1215245	Identifier	self		1215189	0					
ANR	1215246	Identifier	id3x		1215189	1					
ANR	1215247	Expression	"self -> rd3x , self -> rmask"		1215189	1					
ANR	1215248	PtrMemberAccess	self -> rd3x		1215189	0					
ANR	1215249	Identifier	self		1215189	0					
ANR	1215250	Identifier	rd3x		1215189	1					
ANR	1215251	PtrMemberAccess	self -> rmask		1215189	1					
ANR	1215252	Identifier	self		1215189	0					
ANR	1215253	Identifier	rmask		1215189	1					
ANR	1215254	ExpressionStatement	"unaccum ( self -> id2y , self -> rd2y , self -> id3y , self -> rd3y , self -> rmask )"	458:4:17001:17069	1215189	20	True				
ANR	1215255	CallExpression	"unaccum ( self -> id2y , self -> rd2y , self -> id3y , self -> rd3y , self -> rmask )"		1215189	0					
ANR	1215256	Callee	unaccum		1215189	0					
ANR	1215257	Identifier	unaccum		1215189	0					
ANR	1215258	ArgumentList	self -> id2y		1215189	1					
ANR	1215259	Argument	self -> id2y		1215189	0					
ANR	1215260	PtrMemberAccess	self -> id2y		1215189	0					
ANR	1215261	Identifier	self		1215189	0					
ANR	1215262	Identifier	id2y		1215189	1					
ANR	1215263	Argument	self -> rd2y		1215189	1					
ANR	1215264	PtrMemberAccess	self -> rd2y		1215189	0					
ANR	1215265	Identifier	self		1215189	0					
ANR	1215266	Identifier	rd2y		1215189	1					
ANR	1215267	Argument	self -> id3y		1215189	2					
ANR	1215268	PtrMemberAccess	self -> id3y		1215189	0					
ANR	1215269	Identifier	self		1215189	0					
ANR	1215270	Identifier	id3y		1215189	1					
ANR	1215271	Argument	self -> rd3y		1215189	3					
ANR	1215272	PtrMemberAccess	self -> rd3y		1215189	0					
ANR	1215273	Identifier	self		1215189	0					
ANR	1215274	Identifier	rd3y		1215189	1					
ANR	1215275	Argument	self -> rmask		1215189	4					
ANR	1215276	PtrMemberAccess	self -> rmask		1215189	0					
ANR	1215277	Identifier	self		1215189	0					
ANR	1215278	Identifier	rmask		1215189	1					
ANR	1215279	ExpressionStatement	"unaccum ( self -> idx , self -> rdx , self -> id2x , self -> rd2x , self -> rmask )"	459:4:17075:17141	1215189	21	True				
ANR	1215280	CallExpression	"unaccum ( self -> idx , self -> rdx , self -> id2x , self -> rd2x , self -> rmask )"		1215189	0					
ANR	1215281	Callee	unaccum		1215189	0					
ANR	1215282	Identifier	unaccum		1215189	0					
ANR	1215283	ArgumentList	self -> idx		1215189	1					
ANR	1215284	Argument	self -> idx		1215189	0					
ANR	1215285	PtrMemberAccess	self -> idx		1215189	0					
ANR	1215286	Identifier	self		1215189	0					
ANR	1215287	Identifier	idx		1215189	1					
ANR	1215288	Argument	self -> rdx		1215189	1					
ANR	1215289	PtrMemberAccess	self -> rdx		1215189	0					
ANR	1215290	Identifier	self		1215189	0					
ANR	1215291	Identifier	rdx		1215189	1					
ANR	1215292	Argument	self -> id2x		1215189	2					
ANR	1215293	PtrMemberAccess	self -> id2x		1215189	0					
ANR	1215294	Identifier	self		1215189	0					
ANR	1215295	Identifier	id2x		1215189	1					
ANR	1215296	Argument	self -> rd2x		1215189	3					
ANR	1215297	PtrMemberAccess	self -> rd2x		1215189	0					
ANR	1215298	Identifier	self		1215189	0					
ANR	1215299	Identifier	rd2x		1215189	1					
ANR	1215300	Argument	self -> rmask		1215189	4					
ANR	1215301	PtrMemberAccess	self -> rmask		1215189	0					
ANR	1215302	Identifier	self		1215189	0					
ANR	1215303	Identifier	rmask		1215189	1					
ANR	1215304	ExpressionStatement	"unaccum ( self -> idy , self -> rdy , self -> id2y , self -> rd2y , self -> rmask )"	460:4:17147:17213	1215189	22	True				
ANR	1215305	CallExpression	"unaccum ( self -> idy , self -> rdy , self -> id2y , self -> rd2y , self -> rmask )"		1215189	0					
ANR	1215306	Callee	unaccum		1215189	0					
ANR	1215307	Identifier	unaccum		1215189	0					
ANR	1215308	ArgumentList	self -> idy		1215189	1					
ANR	1215309	Argument	self -> idy		1215189	0					
ANR	1215310	PtrMemberAccess	self -> idy		1215189	0					
ANR	1215311	Identifier	self		1215189	0					
ANR	1215312	Identifier	idy		1215189	1					
ANR	1215313	Argument	self -> rdy		1215189	1					
ANR	1215314	PtrMemberAccess	self -> rdy		1215189	0					
ANR	1215315	Identifier	self		1215189	0					
ANR	1215316	Identifier	rdy		1215189	1					
ANR	1215317	Argument	self -> id2y		1215189	2					
ANR	1215318	PtrMemberAccess	self -> id2y		1215189	0					
ANR	1215319	Identifier	self		1215189	0					
ANR	1215320	Identifier	id2y		1215189	1					
ANR	1215321	Argument	self -> rd2y		1215189	3					
ANR	1215322	PtrMemberAccess	self -> rd2y		1215189	0					
ANR	1215323	Identifier	self		1215189	0					
ANR	1215324	Identifier	rd2y		1215189	1					
ANR	1215325	Argument	self -> rmask		1215189	4					
ANR	1215326	PtrMemberAccess	self -> rmask		1215189	0					
ANR	1215327	Identifier	self		1215189	0					
ANR	1215328	Identifier	rmask		1215189	1					
ANR	1215329	ExpressionStatement	"unaccum ( self -> x , self -> rx , self -> idx , self -> rdx , self -> rmask )"	461:4:17219:17280	1215189	23	True				
ANR	1215330	CallExpression	"unaccum ( self -> x , self -> rx , self -> idx , self -> rdx , self -> rmask )"		1215189	0					
ANR	1215331	Callee	unaccum		1215189	0					
ANR	1215332	Identifier	unaccum		1215189	0					
ANR	1215333	ArgumentList	self -> x		1215189	1					
ANR	1215334	Argument	self -> x		1215189	0					
ANR	1215335	PtrMemberAccess	self -> x		1215189	0					
ANR	1215336	Identifier	self		1215189	0					
ANR	1215337	Identifier	x		1215189	1					
ANR	1215338	Argument	self -> rx		1215189	1					
ANR	1215339	PtrMemberAccess	self -> rx		1215189	0					
ANR	1215340	Identifier	self		1215189	0					
ANR	1215341	Identifier	rx		1215189	1					
ANR	1215342	Argument	self -> idx		1215189	2					
ANR	1215343	PtrMemberAccess	self -> idx		1215189	0					
ANR	1215344	Identifier	self		1215189	0					
ANR	1215345	Identifier	idx		1215189	1					
ANR	1215346	Argument	self -> rdx		1215189	3					
ANR	1215347	PtrMemberAccess	self -> rdx		1215189	0					
ANR	1215348	Identifier	self		1215189	0					
ANR	1215349	Identifier	rdx		1215189	1					
ANR	1215350	Argument	self -> rmask		1215189	4					
ANR	1215351	PtrMemberAccess	self -> rmask		1215189	0					
ANR	1215352	Identifier	self		1215189	0					
ANR	1215353	Identifier	rmask		1215189	1					
ANR	1215354	ExpressionStatement	"unaccum ( self -> y , self -> ry , self -> idy , self -> rdy , self -> rmask )"	462:4:17286:17347	1215189	24	True				
ANR	1215355	CallExpression	"unaccum ( self -> y , self -> ry , self -> idy , self -> rdy , self -> rmask )"		1215189	0					
ANR	1215356	Callee	unaccum		1215189	0					
ANR	1215357	Identifier	unaccum		1215189	0					
ANR	1215358	ArgumentList	self -> y		1215189	1					
ANR	1215359	Argument	self -> y		1215189	0					
ANR	1215360	PtrMemberAccess	self -> y		1215189	0					
ANR	1215361	Identifier	self		1215189	0					
ANR	1215362	Identifier	y		1215189	1					
ANR	1215363	Argument	self -> ry		1215189	1					
ANR	1215364	PtrMemberAccess	self -> ry		1215189	0					
ANR	1215365	Identifier	self		1215189	0					
ANR	1215366	Identifier	ry		1215189	1					
ANR	1215367	Argument	self -> idy		1215189	2					
ANR	1215368	PtrMemberAccess	self -> idy		1215189	0					
ANR	1215369	Identifier	self		1215189	0					
ANR	1215370	Identifier	idy		1215189	1					
ANR	1215371	Argument	self -> rdy		1215189	3					
ANR	1215372	PtrMemberAccess	self -> rdy		1215189	0					
ANR	1215373	Identifier	self		1215189	0					
ANR	1215374	Identifier	rdy		1215189	1					
ANR	1215375	Argument	self -> rmask		1215189	4					
ANR	1215376	PtrMemberAccess	self -> rmask		1215189	0					
ANR	1215377	Identifier	self		1215189	0					
ANR	1215378	Identifier	rmask		1215189	1					
ANR	1215379	Statement	undef	463:4:17353:17357	1215189	25	True				
ANR	1215380	Statement	unaccum	463:10:17359:17365	1215189	26	True				
ANR	1215381	ReturnType	static inline void		1215189	1					
ANR	1215382	Identifier	gx_flattened_iterator__unaccum		1215189	2					
ANR	1215383	ParameterList	gx_flattened_iterator * self		1215189	3					
ANR	1215384	Parameter	gx_flattened_iterator * self	452:31:16740:16766	1215189	0	True				
ANR	1215385	ParameterType	gx_flattened_iterator *		1215189	0					
ANR	1215386	Identifier	self		1215189	1					
ANR	1215387	CFGEntryNode	ENTRY		1215189		True				
ANR	1215388	CFGExitNode	EXIT		1215189		True				
ANR	1215389	Symbol	self -> x		1215189						
ANR	1215390	Symbol	self -> y		1215189						
ANR	1215391	Symbol	di		1215189						
ANR	1215392	Symbol	* self		1215189						
ANR	1215393	Symbol	rmask		1215189						
ANR	1215394	Symbol	self -> ry		1215189						
ANR	1215395	Symbol	i		1215189						
ANR	1215396	Symbol	self -> rmask		1215189						
ANR	1215397	Symbol	self -> rx		1215189						
ANR	1215398	Symbol	dr		1215189						
ANR	1215399	Symbol	r		1215189						
ANR	1215400	Symbol	unaccum		1215189						
ANR	1215401	Symbol	self -> rdx		1215189						
ANR	1215402	Symbol	self -> idy		1215189						
ANR	1215403	Symbol	self -> rdy		1215189						
ANR	1215404	Symbol	self -> idx		1215189						
ANR	1215405	Symbol	self		1215189						
ANR	1215406	Symbol	self -> rd3y		1215189						
ANR	1215407	Symbol	self -> rd2x		1215189						
ANR	1215408	Symbol	self -> id3y		1215189						
ANR	1215409	Symbol	self -> id2x		1215189						
ANR	1215410	Symbol	self -> id2y		1215189						
ANR	1215411	Symbol	self -> rd2y		1215189						
ANR	1215412	Function	gx_flattened_iterator__prev	470:0:17590:19003							
ANR	1215413	FunctionDef	gx_flattened_iterator__prev (gx_flattened_iterator * self)		1215412	0					
ANR	1215414	CompoundStatement		472:0:17651:19003	1215412	0					
ANR	1215415	IdentifierDeclStatement	bool last ;	473:4:17657:17666	1215412	0	True				
ANR	1215416	IdentifierDecl	last		1215412	0					
ANR	1215417	IdentifierDeclType	bool		1215412	0					
ANR	1215418	Identifier	last		1215412	1					
ANR	1215419	IfStatement	if ( self -> i >= 1 << self -> k )		1215412	1					
ANR	1215420	Condition	self -> i >= 1 << self -> k	475:8:17722:17744	1215412	0	True				
ANR	1215421	RelationalExpression	self -> i >= 1 << self -> k		1215412	0		>=			
ANR	1215422	PtrMemberAccess	self -> i		1215412	0					
ANR	1215423	Identifier	self		1215412	0					
ANR	1215424	Identifier	i		1215412	1					
ANR	1215425	ShiftExpression	1 << self -> k		1215412	1		<<			
ANR	1215426	PrimaryExpression	1		1215412	0					
ANR	1215427	PtrMemberAccess	self -> k		1215412	1					
ANR	1215428	Identifier	self		1215412	0					
ANR	1215429	Identifier	k		1215412	1					
ANR	1215430	ExpressionStatement	return_error ( gs_error_unregistered )	476:8:17755:17790	1215412	1	True				
ANR	1215431	CallExpression	return_error ( gs_error_unregistered )		1215412	0					
ANR	1215432	Callee	return_error		1215412	0					
ANR	1215433	Identifier	return_error		1215412	0					
ANR	1215434	ArgumentList	gs_error_unregistered		1215412	1					
ANR	1215435	Argument	gs_error_unregistered		1215412	0					
ANR	1215436	Identifier	gs_error_unregistered		1215412	0					
ANR	1215437	ExpressionStatement	self -> lx1 = self -> lx0	477:4:17819:17840	1215412	2	True				
ANR	1215438	AssignmentExpression	self -> lx1 = self -> lx0		1215412	0		=			
ANR	1215439	PtrMemberAccess	self -> lx1		1215412	0					
ANR	1215440	Identifier	self		1215412	0					
ANR	1215441	Identifier	lx1		1215412	1					
ANR	1215442	PtrMemberAccess	self -> lx0		1215412	1					
ANR	1215443	Identifier	self		1215412	0					
ANR	1215444	Identifier	lx0		1215412	1					
ANR	1215445	ExpressionStatement	self -> ly1 = self -> ly0	478:4:17846:17867	1215412	3	True				
ANR	1215446	AssignmentExpression	self -> ly1 = self -> ly0		1215412	0		=			
ANR	1215447	PtrMemberAccess	self -> ly1		1215412	0					
ANR	1215448	Identifier	self		1215412	0					
ANR	1215449	Identifier	ly1		1215412	1					
ANR	1215450	PtrMemberAccess	self -> ly0		1215412	1					
ANR	1215451	Identifier	self		1215412	0					
ANR	1215452	Identifier	ly0		1215412	1					
ANR	1215453	IfStatement	if ( self -> k <= 1 )		1215412	4					
ANR	1215454	Condition	self -> k <= 1	479:8:17877:17888	1215412	0	True				
ANR	1215455	RelationalExpression	self -> k <= 1		1215412	0		<=			
ANR	1215456	PtrMemberAccess	self -> k		1215412	0					
ANR	1215457	Identifier	self		1215412	0					
ANR	1215458	Identifier	k		1215412	1					
ANR	1215459	PrimaryExpression	1		1215412	1					
ANR	1215460	CompoundStatement		8:22:239:239	1215412	1					
ANR	1215461	ExpressionStatement	self -> i ++	486:8:18211:18220	1215412	0	True				
ANR	1215462	PostIncDecOperationExpression	self -> i ++		1215412	0					
ANR	1215463	PtrMemberAccess	self -> i		1215412	0					
ANR	1215464	Identifier	self		1215412	0					
ANR	1215465	Identifier	i		1215412	1					
ANR	1215466	IncDec	++		1215412	1					
ANR	1215467	ExpressionStatement	self -> lx0 = self -> x0	487:8:18230:18250	1215412	1	True				
ANR	1215468	AssignmentExpression	self -> lx0 = self -> x0		1215412	0		=			
ANR	1215469	PtrMemberAccess	self -> lx0		1215412	0					
ANR	1215470	Identifier	self		1215412	0					
ANR	1215471	Identifier	lx0		1215412	1					
ANR	1215472	PtrMemberAccess	self -> x0		1215412	1					
ANR	1215473	Identifier	self		1215412	0					
ANR	1215474	Identifier	x0		1215412	1					
ANR	1215475	ExpressionStatement	self -> ly0 = self -> y0	488:8:18260:18280	1215412	2	True				
ANR	1215476	AssignmentExpression	self -> ly0 = self -> y0		1215412	0		=			
ANR	1215477	PtrMemberAccess	self -> ly0		1215412	0					
ANR	1215478	Identifier	self		1215412	0					
ANR	1215479	Identifier	ly0		1215412	1					
ANR	1215480	PtrMemberAccess	self -> y0		1215412	1					
ANR	1215481	Identifier	self		1215412	0					
ANR	1215482	Identifier	y0		1215412	1					
ANR	1215483	ReturnStatement	return false ;	489:8:18290:18302	1215412	3	True				
ANR	1215484	Identifier	false		1215412	0					
ANR	1215485	ExpressionStatement	gx_flattened_iterator__unaccum ( self )	491:4:18314:18350	1215412	5	True				
ANR	1215486	CallExpression	gx_flattened_iterator__unaccum ( self )		1215412	0					
ANR	1215487	Callee	gx_flattened_iterator__unaccum		1215412	0					
ANR	1215488	Identifier	gx_flattened_iterator__unaccum		1215412	0					
ANR	1215489	ArgumentList	self		1215412	1					
ANR	1215490	Argument	self		1215412	0					
ANR	1215491	Identifier	self		1215412	0					
ANR	1215492	ExpressionStatement	self -> i ++	492:4:18356:18365	1215412	6	True				
ANR	1215493	PostIncDecOperationExpression	self -> i ++		1215412	0					
ANR	1215494	PtrMemberAccess	self -> i		1215412	0					
ANR	1215495	Identifier	self		1215412	0					
ANR	1215496	Identifier	i		1215412	1					
ANR	1215497	IncDec	++		1215412	1					
ANR	1215498	Statement	if	493:4:18371:18372	1215412	7	True				
ANR	1215499	Statement	defined	493:7:18374:18380	1215412	8	True				
ANR	1215500	Statement	(	493:14:18381:18381	1215412	9	True				
ANR	1215501	Statement	DEBUG	493:15:18382:18386	1215412	10	True				
ANR	1215502	Statement	)	493:20:18387:18387	1215412	11	True				
ANR	1215503	Statement	&&	493:22:18389:18390	1215412	12	True				
ANR	1215504	Statement	!	493:25:18392:18392	1215412	13	True				
ANR	1215505	Statement	defined	493:26:18393:18399	1215412	14	True				
ANR	1215506	ExpressionStatement	"( GS_THREADSAFE ) if_debug5 ( '3' , ""[3]%s x=%g, y=%g x=%ld y=%ld\\n"" , ( ( ( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"" ) , fixed2float ( self -> x ) , fixed2float ( self -> y ) , ( long ) self -> x , ( long ) self -> y )"	493:33:18400:18687	1215412	15	True				
ANR	1215507	CastExpression	"( GS_THREADSAFE ) if_debug5 ( '3' , ""[3]%s x=%g, y=%g x=%ld y=%ld\\n"" , ( ( ( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"" ) , fixed2float ( self -> x ) , fixed2float ( self -> y ) , ( long ) self -> x , ( long ) self -> y )"		1215412	0					
ANR	1215508	CastTarget	GS_THREADSAFE		1215412	0					
ANR	1215509	CallExpression	"if_debug5 ( '3' , ""[3]%s x=%g, y=%g x=%ld y=%ld\\n"" , ( ( ( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"" ) , fixed2float ( self -> x ) , fixed2float ( self -> y ) , ( long ) self -> x , ( long ) self -> y )"		1215412	1					
ANR	1215510	Callee	if_debug5		1215412	0					
ANR	1215511	Identifier	if_debug5		1215412	0					
ANR	1215512	ArgumentList	'3'		1215412	1					
ANR	1215513	Argument	'3'		1215412	0					
ANR	1215514	PrimaryExpression	'3'		1215412	0					
ANR	1215515	Argument	"""[3]%s x=%g, y=%g x=%ld y=%ld\\n"""		1215412	1					
ANR	1215516	PrimaryExpression	"""[3]%s x=%g, y=%g x=%ld y=%ld\\n"""		1215412	0					
ANR	1215517	Argument	"( ( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"""		1215412	2					
ANR	1215518	ConditionalExpression	"( ( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 ) ) & float2fixed ( - 0.5 ) ? ""add"" : ""skip"""		1215412	0					
ANR	1215519	Condition	( ( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 ) ) & float2fixed ( - 0.5 )		1215412	0					
ANR	1215520	BitAndExpression	( ( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 ) ) & float2fixed ( - 0.5 )		1215412	0		&			
ANR	1215521	InclusiveOrExpression	( self -> x ^ self -> lx1 ) | ( self -> y ^ self -> ly1 )		1215412	0		|			
ANR	1215522	ExclusiveOrExpression	self -> x ^ self -> lx1		1215412	0		^			
ANR	1215523	PtrMemberAccess	self -> x		1215412	0					
ANR	1215524	Identifier	self		1215412	0					
ANR	1215525	Identifier	x		1215412	1					
ANR	1215526	PtrMemberAccess	self -> lx1		1215412	1					
ANR	1215527	Identifier	self		1215412	0					
ANR	1215528	Identifier	lx1		1215412	1					
ANR	1215529	ExclusiveOrExpression	self -> y ^ self -> ly1		1215412	1		^			
ANR	1215530	PtrMemberAccess	self -> y		1215412	0					
ANR	1215531	Identifier	self		1215412	0					
ANR	1215532	Identifier	y		1215412	1					
ANR	1215533	PtrMemberAccess	self -> ly1		1215412	1					
ANR	1215534	Identifier	self		1215412	0					
ANR	1215535	Identifier	ly1		1215412	1					
ANR	1215536	CallExpression	float2fixed ( - 0.5 )		1215412	1					
ANR	1215537	Callee	float2fixed		1215412	0					
ANR	1215538	Identifier	float2fixed		1215412	0					
ANR	1215539	ArgumentList	- 0.5		1215412	1					
ANR	1215540	Argument	- 0.5		1215412	0					
ANR	1215541	UnaryOperationExpression	- 0.5		1215412	0					
ANR	1215542	UnaryOperator	-		1215412	0					
ANR	1215543	PrimaryExpression	0.5		1215412	1					
ANR	1215544	PrimaryExpression	"""add"""		1215412	1					
ANR	1215545	PrimaryExpression	"""skip"""		1215412	2					
ANR	1215546	Argument	fixed2float ( self -> x )		1215412	3					
ANR	1215547	CallExpression	fixed2float ( self -> x )		1215412	0					
ANR	1215548	Callee	fixed2float		1215412	0					
ANR	1215549	Identifier	fixed2float		1215412	0					
ANR	1215550	ArgumentList	self -> x		1215412	1					
ANR	1215551	Argument	self -> x		1215412	0					
ANR	1215552	PtrMemberAccess	self -> x		1215412	0					
ANR	1215553	Identifier	self		1215412	0					
ANR	1215554	Identifier	x		1215412	1					
ANR	1215555	Argument	fixed2float ( self -> y )		1215412	4					
ANR	1215556	CallExpression	fixed2float ( self -> y )		1215412	0					
ANR	1215557	Callee	fixed2float		1215412	0					
ANR	1215558	Identifier	fixed2float		1215412	0					
ANR	1215559	ArgumentList	self -> y		1215412	1					
ANR	1215560	Argument	self -> y		1215412	0					
ANR	1215561	PtrMemberAccess	self -> y		1215412	0					
ANR	1215562	Identifier	self		1215412	0					
ANR	1215563	Identifier	y		1215412	1					
ANR	1215564	Argument	( long ) self -> x		1215412	5					
ANR	1215565	CastExpression	( long ) self -> x		1215412	0					
ANR	1215566	CastTarget	long		1215412	0					
ANR	1215567	PtrMemberAccess	self -> x		1215412	1					
ANR	1215568	Identifier	self		1215412	0					
ANR	1215569	Identifier	x		1215412	1					
ANR	1215570	Argument	( long ) self -> y		1215412	6					
ANR	1215571	CastExpression	( long ) self -> y		1215412	0					
ANR	1215572	CastTarget	long		1215412	0					
ANR	1215573	PtrMemberAccess	self -> y		1215412	1					
ANR	1215574	Identifier	self		1215412	0					
ANR	1215575	Identifier	y		1215412	1					
ANR	1215576	ExpressionStatement	gx_flattened_iterator__print_state ( self )	499:4:18693:18733	1215412	16	True				
ANR	1215577	CallExpression	gx_flattened_iterator__print_state ( self )		1215412	0					
ANR	1215578	Callee	gx_flattened_iterator__print_state		1215412	0					
ANR	1215579	Identifier	gx_flattened_iterator__print_state		1215412	0					
ANR	1215580	ArgumentList	self		1215412	1					
ANR	1215581	Argument	self		1215412	0					
ANR	1215582	Identifier	self		1215412	0					
ANR	1215583	IdentifierDeclStatement	endif last = ( self -> i == ( 1 << self -> k ) - 1 ) ;	500:4:18739:18787	1215412	17	True				
ANR	1215584	IdentifierDecl	last = ( self -> i == ( 1 << self -> k ) - 1 )		1215412	0					
ANR	1215585	IdentifierDeclType	endif		1215412	0					
ANR	1215586	Identifier	last		1215412	1					
ANR	1215587	AssignmentExpression	last = ( self -> i == ( 1 << self -> k ) - 1 )		1215412	2		=			
ANR	1215588	Identifier	last		1215412	0					
ANR	1215589	EqualityExpression	self -> i == ( 1 << self -> k ) - 1		1215412	1		==			
ANR	1215590	PtrMemberAccess	self -> i		1215412	0					
ANR	1215591	Identifier	self		1215412	0					
ANR	1215592	Identifier	i		1215412	1					
ANR	1215593	AdditiveExpression	( 1 << self -> k ) - 1		1215412	1		-			
ANR	1215594	ShiftExpression	1 << self -> k		1215412	0		<<			
ANR	1215595	PrimaryExpression	1		1215412	0					
ANR	1215596	PtrMemberAccess	self -> k		1215412	1					
ANR	1215597	Identifier	self		1215412	0					
ANR	1215598	Identifier	k		1215412	1					
ANR	1215599	PrimaryExpression	1		1215412	1					
ANR	1215600	ExpressionStatement	self -> lx0 = self -> x	502:4:18793:18812	1215412	18	True				
ANR	1215601	AssignmentExpression	self -> lx0 = self -> x		1215412	0		=			
ANR	1215602	PtrMemberAccess	self -> lx0		1215412	0					
ANR	1215603	Identifier	self		1215412	0					
ANR	1215604	Identifier	lx0		1215412	1					
ANR	1215605	PtrMemberAccess	self -> x		1215412	1					
ANR	1215606	Identifier	self		1215412	0					
ANR	1215607	Identifier	x		1215412	1					
ANR	1215608	ExpressionStatement	self -> ly0 = self -> y	503:4:18818:18837	1215412	19	True				
ANR	1215609	AssignmentExpression	self -> ly0 = self -> y		1215412	0		=			
ANR	1215610	PtrMemberAccess	self -> ly0		1215412	0					
ANR	1215611	Identifier	self		1215412	0					
ANR	1215612	Identifier	ly0		1215412	1					
ANR	1215613	PtrMemberAccess	self -> y		1215412	1					
ANR	1215614	Identifier	self		1215412	0					
ANR	1215615	Identifier	y		1215412	1					
ANR	1215616	IfStatement	if ( last )		1215412	20					
ANR	1215617	Condition	last	504:8:18847:18850	1215412	0	True				
ANR	1215618	Identifier	last		1215412	0					
ANR	1215619	IfStatement	if ( self -> lx0 != self -> x0 || self -> ly0 != self -> y0 )		1215412	1					
ANR	1215620	Condition	self -> lx0 != self -> x0 || self -> ly0 != self -> y0	505:12:18865:18910	1215412	0	True				
ANR	1215621	OrExpression	self -> lx0 != self -> x0 || self -> ly0 != self -> y0		1215412	0		||			
ANR	1215622	EqualityExpression	self -> lx0 != self -> x0		1215412	0		!=			
ANR	1215623	PtrMemberAccess	self -> lx0		1215412	0					
ANR	1215624	Identifier	self		1215412	0					
ANR	1215625	Identifier	lx0		1215412	1					
ANR	1215626	PtrMemberAccess	self -> x0		1215412	1					
ANR	1215627	Identifier	self		1215412	0					
ANR	1215628	Identifier	x0		1215412	1					
ANR	1215629	EqualityExpression	self -> ly0 != self -> y0		1215412	1		!=			
ANR	1215630	PtrMemberAccess	self -> ly0		1215412	0					
ANR	1215631	Identifier	self		1215412	0					
ANR	1215632	Identifier	ly0		1215412	1					
ANR	1215633	PtrMemberAccess	self -> y0		1215412	1					
ANR	1215634	Identifier	self		1215412	0					
ANR	1215635	Identifier	y0		1215412	1					
ANR	1215636	ExpressionStatement	return_error ( gs_error_unregistered )	506:12:18925:18960	1215412	1	True				
ANR	1215637	CallExpression	return_error ( gs_error_unregistered )		1215412	0					
ANR	1215638	Callee	return_error		1215412	0					
ANR	1215639	Identifier	return_error		1215412	0					
ANR	1215640	ArgumentList	gs_error_unregistered		1215412	1					
ANR	1215641	Argument	gs_error_unregistered		1215412	0					
ANR	1215642	Identifier	gs_error_unregistered		1215412	0					
ANR	1215643	ReturnStatement	return ! last ;	507:4:18989:19001	1215412	21	True				
ANR	1215644	UnaryOperationExpression	! last		1215412	0					
ANR	1215645	UnaryOperator	!		1215412	0					
ANR	1215646	Identifier	last		1215412	1					
ANR	1215647	ReturnType	int		1215412	1					
ANR	1215648	Identifier	gx_flattened_iterator__prev		1215412	2					
ANR	1215649	ParameterList	gx_flattened_iterator * self		1215412	3					
ANR	1215650	Parameter	gx_flattened_iterator * self	471:28:17622:17648	1215412	0	True				
ANR	1215651	ParameterType	gx_flattened_iterator *		1215412	0					
ANR	1215652	Identifier	self		1215412	1					
ANR	1215653	CFGEntryNode	ENTRY		1215412		True				
ANR	1215654	CFGExitNode	EXIT		1215412		True				
ANR	1215655	Symbol	self -> x		1215412						
ANR	1215656	Symbol	gs_error_unregistered		1215412						
ANR	1215657	Symbol	self -> y		1215412						
ANR	1215658	Symbol	last		1215412						
ANR	1215659	Symbol	fixed2float		1215412						
ANR	1215660	Symbol	* self		1215412						
ANR	1215661	Symbol	false		1215412						
ANR	1215662	Symbol	self -> k		1215412						
ANR	1215663	Symbol	self -> ly0		1215412						
ANR	1215664	Symbol	self -> lx0		1215412						
ANR	1215665	Symbol	self -> ly1		1215412						
ANR	1215666	Symbol	self -> i		1215412						
ANR	1215667	Symbol	self -> lx1		1215412						
ANR	1215668	Symbol	float2fixed		1215412						
ANR	1215669	Symbol	self -> y0		1215412						
ANR	1215670	Symbol	self		1215412						
ANR	1215671	Symbol	self -> x0		1215412						
ANR	1215672	Function	gx_flattened_iterator__switch_to_backscan	511:0:19092:19601							
ANR	1215673	FunctionDef	"gx_flattened_iterator__switch_to_backscan (gx_flattened_iterator * self , bool not_first)"		1215672	0					
ANR	1215674	CompoundStatement		513:0:19184:19601	1215672	0					
ANR	1215675	IfStatement	if ( not_first )		1215672	0					
ANR	1215676	Condition	not_first	519:8:19454:19462	1215672	0	True				
ANR	1215677	Identifier	not_first		1215672	0					
ANR	1215678	IfStatement	if ( self -> i > 0 && self -> k != 1 )		1215672	1					
ANR	1215679	Condition	self -> i > 0 && self -> k != 1	520:12:19477:19503	1215672	0	True				
ANR	1215680	AndExpression	self -> i > 0 && self -> k != 1		1215672	0		&&			
ANR	1215681	RelationalExpression	self -> i > 0		1215672	0		>			
ANR	1215682	PtrMemberAccess	self -> i		1215672	0					
ANR	1215683	Identifier	self		1215672	0					
ANR	1215684	Identifier	i		1215672	1					
ANR	1215685	PrimaryExpression	0		1215672	1					
ANR	1215686	EqualityExpression	self -> k != 1		1215672	1		!=			
ANR	1215687	PtrMemberAccess	self -> k		1215672	0					
ANR	1215688	Identifier	self		1215672	0					
ANR	1215689	Identifier	k		1215672	1					
ANR	1215690	PrimaryExpression	1		1215672	1					
ANR	1215691	ExpressionStatement	gx_flattened_iterator__unaccum ( self )	521:12:19563:19599	1215672	1	True				
ANR	1215692	CallExpression	gx_flattened_iterator__unaccum ( self )		1215672	0					
ANR	1215693	Callee	gx_flattened_iterator__unaccum		1215672	0					
ANR	1215694	Identifier	gx_flattened_iterator__unaccum		1215672	0					
ANR	1215695	ArgumentList	self		1215672	1					
ANR	1215696	Argument	self		1215672	0					
ANR	1215697	Identifier	self		1215672	0					
ANR	1215698	ReturnType	void		1215672	1					
ANR	1215699	Identifier	gx_flattened_iterator__switch_to_backscan		1215672	2					
ANR	1215700	ParameterList	"gx_flattened_iterator * self , bool not_first"		1215672	3					
ANR	1215701	Parameter	gx_flattened_iterator * self	512:42:19139:19165	1215672	0	True				
ANR	1215702	ParameterType	gx_flattened_iterator *		1215672	0					
ANR	1215703	Identifier	self		1215672	1					
ANR	1215704	Parameter	bool not_first	512:71:19168:19181	1215672	1	True				
ANR	1215705	ParameterType	bool		1215672	0					
ANR	1215706	Identifier	not_first		1215672	1					
ANR	1215707	CFGEntryNode	ENTRY		1215672		True				
ANR	1215708	CFGExitNode	EXIT		1215672		True				
ANR	1215709	Symbol	self -> i		1215672						
ANR	1215710	Symbol	* self		1215672						
ANR	1215711	Symbol	self		1215672						
ANR	1215712	Symbol	not_first		1215672						
ANR	1215713	Symbol	self -> k		1215672						
ANR	1215714	Function	generate_segments	526:0:19644:20246							
ANR	1215715	FunctionDef	"generate_segments (gx_path * ppath , const gs_fixed_point * points , int count , segment_notes notes)"		1215714	0					
ANR	1215716	CompoundStatement		529:0:19772:20246	1215714	0					
ANR	1215717	IfStatement	if ( notes & sn_not_first )		1215714	0					
ANR	1215718	Condition	notes & sn_not_first	530:8:19782:19801	1215714	0	True				
ANR	1215719	BitAndExpression	notes & sn_not_first		1215714	0		&			
ANR	1215720	Identifier	notes		1215714	0					
ANR	1215721	Identifier	sn_not_first		1215714	1					
ANR	1215722	CompoundStatement		2:30:31:31	1215714	1					
ANR	1215723	ExpressionStatement	"print_points ( points , count )"	531:8:19814:19841	1215714	0	True				
ANR	1215724	CallExpression	"print_points ( points , count )"		1215714	0					
ANR	1215725	Callee	print_points		1215714	0					
ANR	1215726	Identifier	print_points		1215714	0					
ANR	1215727	ArgumentList	points		1215714	1					
ANR	1215728	Argument	points		1215714	0					
ANR	1215729	Identifier	points		1215714	0					
ANR	1215730	Argument	count		1215714	1					
ANR	1215731	Identifier	count		1215714	0					
ANR	1215732	ReturnStatement	"return gx_path_add_lines_notes ( ppath , points , count , notes ) ;"	532:8:19851:19910	1215714	1	True				
ANR	1215733	CallExpression	"gx_path_add_lines_notes ( ppath , points , count , notes )"		1215714	0					
ANR	1215734	Callee	gx_path_add_lines_notes		1215714	0					
ANR	1215735	Identifier	gx_path_add_lines_notes		1215714	0					
ANR	1215736	ArgumentList	ppath		1215714	1					
ANR	1215737	Argument	ppath		1215714	0					
ANR	1215738	Identifier	ppath		1215714	0					
ANR	1215739	Argument	points		1215714	1					
ANR	1215740	Identifier	points		1215714	0					
ANR	1215741	Argument	count		1215714	2					
ANR	1215742	Identifier	count		1215714	0					
ANR	1215743	Argument	notes		1215714	3					
ANR	1215744	Identifier	notes		1215714	0					
ANR	1215745	ElseStatement	else		1215714	0					
ANR	1215746	CompoundStatement		6:8:160:168	1215714	0					
ANR	1215747	IdentifierDeclStatement	int code ;	534:8:19933:19941	1215714	0	True				
ANR	1215748	IdentifierDecl	code		1215714	0					
ANR	1215749	IdentifierDeclType	int		1215714	0					
ANR	1215750	Identifier	code		1215714	1					
ANR	1215751	ExpressionStatement	"print_points ( points , 1 )"	536:8:19952:19975	1215714	1	True				
ANR	1215752	CallExpression	"print_points ( points , 1 )"		1215714	0					
ANR	1215753	Callee	print_points		1215714	0					
ANR	1215754	Identifier	print_points		1215714	0					
ANR	1215755	ArgumentList	points		1215714	1					
ANR	1215756	Argument	points		1215714	0					
ANR	1215757	Identifier	points		1215714	0					
ANR	1215758	Argument	1		1215714	1					
ANR	1215759	PrimaryExpression	1		1215714	0					
ANR	1215760	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , points [ 0 ] . x , points [ 0 ] . y , notes )"	537:8:19985:20054	1215714	2	True				
ANR	1215761	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , points [ 0 ] . x , points [ 0 ] . y , notes )"		1215714	0		=			
ANR	1215762	Identifier	code		1215714	0					
ANR	1215763	CallExpression	"gx_path_add_line_notes ( ppath , points [ 0 ] . x , points [ 0 ] . y , notes )"		1215714	1					
ANR	1215764	Callee	gx_path_add_line_notes		1215714	0					
ANR	1215765	Identifier	gx_path_add_line_notes		1215714	0					
ANR	1215766	ArgumentList	ppath		1215714	1					
ANR	1215767	Argument	ppath		1215714	0					
ANR	1215768	Identifier	ppath		1215714	0					
ANR	1215769	Argument	points [ 0 ] . x		1215714	1					
ANR	1215770	MemberAccess	points [ 0 ] . x		1215714	0					
ANR	1215771	ArrayIndexing	points [ 0 ]		1215714	0					
ANR	1215772	Identifier	points		1215714	0					
ANR	1215773	PrimaryExpression	0		1215714	1					
ANR	1215774	Identifier	x		1215714	1					
ANR	1215775	Argument	points [ 0 ] . y		1215714	2					
ANR	1215776	MemberAccess	points [ 0 ] . y		1215714	0					
ANR	1215777	ArrayIndexing	points [ 0 ]		1215714	0					
ANR	1215778	Identifier	points		1215714	0					
ANR	1215779	PrimaryExpression	0		1215714	1					
ANR	1215780	Identifier	y		1215714	1					
ANR	1215781	Argument	notes		1215714	3					
ANR	1215782	Identifier	notes		1215714	0					
ANR	1215783	IfStatement	if ( code < 0 )		1215714	3					
ANR	1215784	Condition	code < 0	538:12:20068:20075	1215714	0	True				
ANR	1215785	RelationalExpression	code < 0		1215714	0		<			
ANR	1215786	Identifier	code		1215714	0					
ANR	1215787	PrimaryExpression	0		1215714	1					
ANR	1215788	ReturnStatement	return code ;	539:12:20090:20101	1215714	1	True				
ANR	1215789	Identifier	code		1215714	0					
ANR	1215790	ExpressionStatement	"print_points ( points + 1 , count - 1 )"	540:8:20111:20146	1215714	4	True				
ANR	1215791	CallExpression	"print_points ( points + 1 , count - 1 )"		1215714	0					
ANR	1215792	Callee	print_points		1215714	0					
ANR	1215793	Identifier	print_points		1215714	0					
ANR	1215794	ArgumentList	points + 1		1215714	1					
ANR	1215795	Argument	points + 1		1215714	0					
ANR	1215796	AdditiveExpression	points + 1		1215714	0		+			
ANR	1215797	Identifier	points		1215714	0					
ANR	1215798	PrimaryExpression	1		1215714	1					
ANR	1215799	Argument	count - 1		1215714	1					
ANR	1215800	AdditiveExpression	count - 1		1215714	0		-			
ANR	1215801	Identifier	count		1215714	0					
ANR	1215802	PrimaryExpression	1		1215714	1					
ANR	1215803	ReturnStatement	"return gx_path_add_lines_notes ( ppath , points + 1 , count - 1 , notes | sn_not_first ) ;"	541:8:20156:20238	1215714	5	True				
ANR	1215804	CallExpression	"gx_path_add_lines_notes ( ppath , points + 1 , count - 1 , notes | sn_not_first )"		1215714	0					
ANR	1215805	Callee	gx_path_add_lines_notes		1215714	0					
ANR	1215806	Identifier	gx_path_add_lines_notes		1215714	0					
ANR	1215807	ArgumentList	ppath		1215714	1					
ANR	1215808	Argument	ppath		1215714	0					
ANR	1215809	Identifier	ppath		1215714	0					
ANR	1215810	Argument	points + 1		1215714	1					
ANR	1215811	AdditiveExpression	points + 1		1215714	0		+			
ANR	1215812	Identifier	points		1215714	0					
ANR	1215813	PrimaryExpression	1		1215714	1					
ANR	1215814	Argument	count - 1		1215714	2					
ANR	1215815	AdditiveExpression	count - 1		1215714	0		-			
ANR	1215816	Identifier	count		1215714	0					
ANR	1215817	PrimaryExpression	1		1215714	1					
ANR	1215818	Argument	notes | sn_not_first		1215714	3					
ANR	1215819	InclusiveOrExpression	notes | sn_not_first		1215714	0		|			
ANR	1215820	Identifier	notes		1215714	0					
ANR	1215821	Identifier	sn_not_first		1215714	1					
ANR	1215822	ReturnType	static int		1215714	1					
ANR	1215823	Identifier	generate_segments		1215714	2					
ANR	1215824	ParameterList	"gx_path * ppath , const gs_fixed_point * points , int count , segment_notes notes"		1215714	3					
ANR	1215825	Parameter	gx_path * ppath	527:18:19673:19687	1215714	0	True				
ANR	1215826	ParameterType	gx_path *		1215714	0					
ANR	1215827	Identifier	ppath		1215714	1					
ANR	1215828	Parameter	const gs_fixed_point * points	527:35:19690:19717	1215714	1	True				
ANR	1215829	ParameterType	const gs_fixed_point *		1215714	0					
ANR	1215830	Identifier	points		1215714	1					
ANR	1215831	Parameter	int count	528:20:19740:19748	1215714	2	True				
ANR	1215832	ParameterType	int		1215714	0					
ANR	1215833	Identifier	count		1215714	1					
ANR	1215834	Parameter	segment_notes notes	528:31:19751:19769	1215714	3	True				
ANR	1215835	ParameterType	segment_notes		1215714	0					
ANR	1215836	Identifier	notes		1215714	1					
ANR	1215837	CFGEntryNode	ENTRY		1215714		True				
ANR	1215838	CFGExitNode	EXIT		1215714		True				
ANR	1215839	Symbol	gx_path_add_lines_notes		1215714						
ANR	1215840	Symbol	notes		1215714						
ANR	1215841	Symbol	code		1215714						
ANR	1215842	Symbol	gx_path_add_line_notes		1215714						
ANR	1215843	Symbol	count		1215714						
ANR	1215844	Symbol	ppath		1215714						
ANR	1215845	Symbol	sn_not_first		1215714						
ANR	1215846	Symbol	* points		1215714						
ANR	1215847	Symbol	points [ 0 ] . y		1215714						
ANR	1215848	Symbol	points [ 0 ] . x		1215714						
ANR	1215849	Symbol	points		1215714						
ANR	1215850	Function	gx_subdivide_curve_rec	545:0:20249:21978							
ANR	1215851	FunctionDef	"gx_subdivide_curve_rec (gx_flattened_iterator * self , gx_path * ppath , int k , curve_segment * pc , segment_notes notes , gs_fixed_point * points)"		1215850	0					
ANR	1215852	CompoundStatement		549:0:20437:21978	1215850	0					
ANR	1215853	IdentifierDeclStatement	int code ;	550:4:20443:20451	1215850	0	True				
ANR	1215854	IdentifierDecl	code		1215850	0					
ANR	1215855	IdentifierDeclType	int		1215850	0					
ANR	1215856	Identifier	code		1215850	1					
ANR	1215857	Label	top :	552:0:20454:20458	1215850	1	True				
ANR	1215858	Identifier	top		1215850	0					
ANR	1215859	IfStatement	"if ( ! gx_flattened_iterator__init ( self , ppath -> position . x , ppath -> position . y , pc , k ) )"		1215850	2					
ANR	1215860	Condition	"! gx_flattened_iterator__init ( self , ppath -> position . x , ppath -> position . y , pc , k )"	553:8:20468:20562	1215850	0	True				
ANR	1215861	UnaryOperationExpression	"! gx_flattened_iterator__init ( self , ppath -> position . x , ppath -> position . y , pc , k )"		1215850	0					
ANR	1215862	UnaryOperator	!		1215850	0					
ANR	1215863	CallExpression	"gx_flattened_iterator__init ( self , ppath -> position . x , ppath -> position . y , pc , k )"		1215850	1					
ANR	1215864	Callee	gx_flattened_iterator__init		1215850	0					
ANR	1215865	Identifier	gx_flattened_iterator__init		1215850	0					
ANR	1215866	ArgumentList	self		1215850	1					
ANR	1215867	Argument	self		1215850	0					
ANR	1215868	Identifier	self		1215850	0					
ANR	1215869	Argument	ppath -> position . x		1215850	1					
ANR	1215870	MemberAccess	ppath -> position . x		1215850	0					
ANR	1215871	PtrMemberAccess	ppath -> position		1215850	0					
ANR	1215872	Identifier	ppath		1215850	0					
ANR	1215873	Identifier	position		1215850	1					
ANR	1215874	Identifier	x		1215850	1					
ANR	1215875	Argument	ppath -> position . y		1215850	2					
ANR	1215876	MemberAccess	ppath -> position . y		1215850	0					
ANR	1215877	PtrMemberAccess	ppath -> position		1215850	0					
ANR	1215878	Identifier	ppath		1215850	0					
ANR	1215879	Identifier	position		1215850	1					
ANR	1215880	Identifier	y		1215850	1					
ANR	1215881	Argument	pc		1215850	3					
ANR	1215882	Identifier	pc		1215850	0					
ANR	1215883	Argument	k		1215850	4					
ANR	1215884	Identifier	k		1215850	0					
ANR	1215885	CompoundStatement		8:8:204:222	1215850	1					
ANR	1215886	IdentifierDeclStatement	curve_segment cseg ;	556:8:20642:20660	1215850	0	True				
ANR	1215887	IdentifierDecl	cseg		1215850	0					
ANR	1215888	IdentifierDeclType	curve_segment		1215850	0					
ANR	1215889	Identifier	cseg		1215850	1					
ANR	1215890	ExpressionStatement	k --	558:8:20671:20674	1215850	1	True				
ANR	1215891	PostIncDecOperationExpression	k --		1215850	0					
ANR	1215892	Identifier	k		1215850	0					
ANR	1215893	IncDec	--		1215850	1					
ANR	1215894	ExpressionStatement	"split_curve_midpoint ( ppath -> position . x , ppath -> position . y , pc , & cseg , pc )"	559:8:20684:20757	1215850	2	True				
ANR	1215895	CallExpression	"split_curve_midpoint ( ppath -> position . x , ppath -> position . y , pc , & cseg , pc )"		1215850	0					
ANR	1215896	Callee	split_curve_midpoint		1215850	0					
ANR	1215897	Identifier	split_curve_midpoint		1215850	0					
ANR	1215898	ArgumentList	ppath -> position . x		1215850	1					
ANR	1215899	Argument	ppath -> position . x		1215850	0					
ANR	1215900	MemberAccess	ppath -> position . x		1215850	0					
ANR	1215901	PtrMemberAccess	ppath -> position		1215850	0					
ANR	1215902	Identifier	ppath		1215850	0					
ANR	1215903	Identifier	position		1215850	1					
ANR	1215904	Identifier	x		1215850	1					
ANR	1215905	Argument	ppath -> position . y		1215850	1					
ANR	1215906	MemberAccess	ppath -> position . y		1215850	0					
ANR	1215907	PtrMemberAccess	ppath -> position		1215850	0					
ANR	1215908	Identifier	ppath		1215850	0					
ANR	1215909	Identifier	position		1215850	1					
ANR	1215910	Identifier	y		1215850	1					
ANR	1215911	Argument	pc		1215850	2					
ANR	1215912	Identifier	pc		1215850	0					
ANR	1215913	Argument	& cseg		1215850	3					
ANR	1215914	UnaryOperationExpression	& cseg		1215850	0					
ANR	1215915	UnaryOperator	&		1215850	0					
ANR	1215916	Identifier	cseg		1215850	1					
ANR	1215917	Argument	pc		1215850	4					
ANR	1215918	Identifier	pc		1215850	0					
ANR	1215919	ExpressionStatement	"code = gx_subdivide_curve_rec ( self , ppath , k , & cseg , notes , points )"	560:8:20767:20834	1215850	3	True				
ANR	1215920	AssignmentExpression	"code = gx_subdivide_curve_rec ( self , ppath , k , & cseg , notes , points )"		1215850	0		=			
ANR	1215921	Identifier	code		1215850	0					
ANR	1215922	CallExpression	"gx_subdivide_curve_rec ( self , ppath , k , & cseg , notes , points )"		1215850	1					
ANR	1215923	Callee	gx_subdivide_curve_rec		1215850	0					
ANR	1215924	Identifier	gx_subdivide_curve_rec		1215850	0					
ANR	1215925	ArgumentList	self		1215850	1					
ANR	1215926	Argument	self		1215850	0					
ANR	1215927	Identifier	self		1215850	0					
ANR	1215928	Argument	ppath		1215850	1					
ANR	1215929	Identifier	ppath		1215850	0					
ANR	1215930	Argument	k		1215850	2					
ANR	1215931	Identifier	k		1215850	0					
ANR	1215932	Argument	& cseg		1215850	3					
ANR	1215933	UnaryOperationExpression	& cseg		1215850	0					
ANR	1215934	UnaryOperator	&		1215850	0					
ANR	1215935	Identifier	cseg		1215850	1					
ANR	1215936	Argument	notes		1215850	4					
ANR	1215937	Identifier	notes		1215850	0					
ANR	1215938	Argument	points		1215850	5					
ANR	1215939	Identifier	points		1215850	0					
ANR	1215940	IfStatement	if ( code < 0 )		1215850	4					
ANR	1215941	Condition	code < 0	561:12:20848:20855	1215850	0	True				
ANR	1215942	RelationalExpression	code < 0		1215850	0		<			
ANR	1215943	Identifier	code		1215850	0					
ANR	1215944	PrimaryExpression	0		1215850	1					
ANR	1215945	ReturnStatement	return code ;	562:12:20870:20881	1215850	1	True				
ANR	1215946	Identifier	code		1215850	0					
ANR	1215947	ExpressionStatement	notes |= sn_not_first	563:8:20891:20912	1215850	5	True				
ANR	1215948	AssignmentExpression	notes |= sn_not_first		1215850	0		|=			
ANR	1215949	Identifier	notes		1215850	0					
ANR	1215950	Identifier	sn_not_first		1215850	1					
ANR	1215951	GotoStatement	goto top ;	564:8:20922:20930	1215850	6	True				
ANR	1215952	Identifier	top		1215850	0					
ANR	1215953	ElseStatement	else		1215850	0					
ANR	1215954	IfStatement	if ( k == - 1 )		1215850	0					
ANR	1215955	Condition	k == - 1	565:15:20947:20953	1215850	0	True				
ANR	1215956	EqualityExpression	k == - 1		1215850	0		==			
ANR	1215957	Identifier	k		1215850	0					
ANR	1215958	UnaryOperationExpression	- 1		1215850	1					
ANR	1215959	UnaryOperator	-		1215850	0					
ANR	1215960	PrimaryExpression	1		1215850	1					
ANR	1215961	CompoundStatement		17:24:518:518	1215850	1					
ANR	1215962	ReturnStatement	"return gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , notes ) ;"	567:8:21052:21180	1215850	0	True				
ANR	1215963	CallExpression	"gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , notes )"		1215850	0					
ANR	1215964	Callee	gx_path_add_curve_notes		1215850	0					
ANR	1215965	Identifier	gx_path_add_curve_notes		1215850	0					
ANR	1215966	ArgumentList	ppath		1215850	1					
ANR	1215967	Argument	ppath		1215850	0					
ANR	1215968	Identifier	ppath		1215850	0					
ANR	1215969	Argument	pc -> p1 . x		1215850	1					
ANR	1215970	MemberAccess	pc -> p1 . x		1215850	0					
ANR	1215971	PtrMemberAccess	pc -> p1		1215850	0					
ANR	1215972	Identifier	pc		1215850	0					
ANR	1215973	Identifier	p1		1215850	1					
ANR	1215974	Identifier	x		1215850	1					
ANR	1215975	Argument	pc -> p1 . y		1215850	2					
ANR	1215976	MemberAccess	pc -> p1 . y		1215850	0					
ANR	1215977	PtrMemberAccess	pc -> p1		1215850	0					
ANR	1215978	Identifier	pc		1215850	0					
ANR	1215979	Identifier	p1		1215850	1					
ANR	1215980	Identifier	y		1215850	1					
ANR	1215981	Argument	pc -> p2 . x		1215850	3					
ANR	1215982	MemberAccess	pc -> p2 . x		1215850	0					
ANR	1215983	PtrMemberAccess	pc -> p2		1215850	0					
ANR	1215984	Identifier	pc		1215850	0					
ANR	1215985	Identifier	p2		1215850	1					
ANR	1215986	Identifier	x		1215850	1					
ANR	1215987	Argument	pc -> p2 . y		1215850	4					
ANR	1215988	MemberAccess	pc -> p2 . y		1215850	0					
ANR	1215989	PtrMemberAccess	pc -> p2		1215850	0					
ANR	1215990	Identifier	pc		1215850	0					
ANR	1215991	Identifier	p2		1215850	1					
ANR	1215992	Identifier	y		1215850	1					
ANR	1215993	Argument	pc -> pt . x		1215850	5					
ANR	1215994	MemberAccess	pc -> pt . x		1215850	0					
ANR	1215995	PtrMemberAccess	pc -> pt		1215850	0					
ANR	1215996	Identifier	pc		1215850	0					
ANR	1215997	Identifier	pt		1215850	1					
ANR	1215998	Identifier	x		1215850	1					
ANR	1215999	Argument	pc -> pt . y		1215850	6					
ANR	1216000	MemberAccess	pc -> pt . y		1215850	0					
ANR	1216001	PtrMemberAccess	pc -> pt		1215850	0					
ANR	1216002	Identifier	pc		1215850	0					
ANR	1216003	Identifier	pt		1215850	1					
ANR	1216004	Identifier	y		1215850	1					
ANR	1216005	Argument	notes		1215850	7					
ANR	1216006	Identifier	notes		1215850	0					
ANR	1216007	ElseStatement	else		1215850	0					
ANR	1216008	CompoundStatement		23:8:803:812	1215850	0					
ANR	1216009	IdentifierDeclStatement	gs_fixed_point * ppt = points ;	570:8:21203:21231	1215850	0	True				
ANR	1216010	IdentifierDecl	* ppt = points		1215850	0					
ANR	1216011	IdentifierDeclType	gs_fixed_point *		1215850	0					
ANR	1216012	Identifier	ppt		1215850	1					
ANR	1216013	AssignmentExpression	* ppt = points		1215850	2		=			
ANR	1216014	Identifier	points		1215850	0					
ANR	1216015	Identifier	points		1215850	1					
ANR	1216016	IdentifierDeclStatement	bool more ;	571:8:21241:21250	1215850	1	True				
ANR	1216017	IdentifierDecl	more		1215850	0					
ANR	1216018	IdentifierDeclType	bool		1215850	0					
ANR	1216019	Identifier	more		1215850	1					
ANR	1216020	ForStatement	for ( ; ; )		1215850	2					
ANR	1216021	CompoundStatement		25:16:831:831	1215850	0					
ANR	1216022	ExpressionStatement	code = gx_flattened_iterator__next ( self )	574:12:21283:21323	1215850	0	True				
ANR	1216023	AssignmentExpression	code = gx_flattened_iterator__next ( self )		1215850	0		=			
ANR	1216024	Identifier	code		1215850	0					
ANR	1216025	CallExpression	gx_flattened_iterator__next ( self )		1215850	1					
ANR	1216026	Callee	gx_flattened_iterator__next		1215850	0					
ANR	1216027	Identifier	gx_flattened_iterator__next		1215850	0					
ANR	1216028	ArgumentList	self		1215850	1					
ANR	1216029	Argument	self		1215850	0					
ANR	1216030	Identifier	self		1215850	0					
ANR	1216031	IfStatement	if ( code < 0 )		1215850	1					
ANR	1216032	Condition	code < 0	576:16:21342:21349	1215850	0	True				
ANR	1216033	RelationalExpression	code < 0		1215850	0		<			
ANR	1216034	Identifier	code		1215850	0					
ANR	1216035	PrimaryExpression	0		1215850	1					
ANR	1216036	ReturnStatement	return code ;	577:16:21368:21379	1215850	1	True				
ANR	1216037	Identifier	code		1215850	0					
ANR	1216038	ExpressionStatement	more = code	578:12:21393:21404	1215850	2	True				
ANR	1216039	AssignmentExpression	more = code		1215850	0		=			
ANR	1216040	Identifier	more		1215850	0					
ANR	1216041	Identifier	code		1215850	1					
ANR	1216042	ExpressionStatement	ppt -> x = self -> lx1	579:12:21418:21436	1215850	3	True				
ANR	1216043	AssignmentExpression	ppt -> x = self -> lx1		1215850	0		=			
ANR	1216044	PtrMemberAccess	ppt -> x		1215850	0					
ANR	1216045	Identifier	ppt		1215850	0					
ANR	1216046	Identifier	x		1215850	1					
ANR	1216047	PtrMemberAccess	self -> lx1		1215850	1					
ANR	1216048	Identifier	self		1215850	0					
ANR	1216049	Identifier	lx1		1215850	1					
ANR	1216050	ExpressionStatement	ppt -> y = self -> ly1	580:12:21450:21468	1215850	4	True				
ANR	1216051	AssignmentExpression	ppt -> y = self -> ly1		1215850	0		=			
ANR	1216052	PtrMemberAccess	ppt -> y		1215850	0					
ANR	1216053	Identifier	ppt		1215850	0					
ANR	1216054	Identifier	y		1215850	1					
ANR	1216055	PtrMemberAccess	self -> ly1		1215850	1					
ANR	1216056	Identifier	self		1215850	0					
ANR	1216057	Identifier	ly1		1215850	1					
ANR	1216058	ExpressionStatement	ppt ++	581:12:21482:21487	1215850	5	True				
ANR	1216059	PostIncDecOperationExpression	ppt ++		1215850	0					
ANR	1216060	Identifier	ppt		1215850	0					
ANR	1216061	IncDec	++		1215850	1					
ANR	1216062	IfStatement	if ( ppt == & points [ max_points ] || ! more )		1215850	6					
ANR	1216063	Condition	ppt == & points [ max_points ] || ! more	582:16:21505:21539	1215850	0	True				
ANR	1216064	OrExpression	ppt == & points [ max_points ] || ! more		1215850	0		||			
ANR	1216065	EqualityExpression	ppt == & points [ max_points ]		1215850	0		==			
ANR	1216066	Identifier	ppt		1215850	0					
ANR	1216067	UnaryOperationExpression	& points [ max_points ]		1215850	1					
ANR	1216068	UnaryOperator	&		1215850	0					
ANR	1216069	ArrayIndexing	points [ max_points ]		1215850	1					
ANR	1216070	Identifier	points		1215850	0					
ANR	1216071	Identifier	max_points		1215850	1					
ANR	1216072	UnaryOperationExpression	! more		1215850	1					
ANR	1216073	UnaryOperator	!		1215850	0					
ANR	1216074	Identifier	more		1215850	1					
ANR	1216075	CompoundStatement		35:16:1122:1166	1215850	1					
ANR	1216076	IdentifierDeclStatement	gs_fixed_point * pe = ( more ? ppt - 2 : ppt ) ;	583:16:21560:21604	1215850	0	True				
ANR	1216077	IdentifierDecl	* pe = ( more ? ppt - 2 : ppt )		1215850	0					
ANR	1216078	IdentifierDeclType	gs_fixed_point *		1215850	0					
ANR	1216079	Identifier	pe		1215850	1					
ANR	1216080	AssignmentExpression	* pe = ( more ? ppt - 2 : ppt )		1215850	2		=			
ANR	1216081	Identifier	pe		1215850	0					
ANR	1216082	ConditionalExpression	more ? ppt - 2 : ppt		1215850	1					
ANR	1216083	Condition	more		1215850	0					
ANR	1216084	Identifier	more		1215850	0					
ANR	1216085	AdditiveExpression	ppt - 2		1215850	1		-			
ANR	1216086	Identifier	ppt		1215850	0					
ANR	1216087	PrimaryExpression	2		1215850	1					
ANR	1216088	Identifier	ppt		1215850	2					
ANR	1216089	ExpressionStatement	"code = generate_segments ( ppath , points , pe - points , notes )"	585:16:21623:21682	1215850	1	True				
ANR	1216090	AssignmentExpression	"code = generate_segments ( ppath , points , pe - points , notes )"		1215850	0		=			
ANR	1216091	Identifier	code		1215850	0					
ANR	1216092	CallExpression	"generate_segments ( ppath , points , pe - points , notes )"		1215850	1					
ANR	1216093	Callee	generate_segments		1215850	0					
ANR	1216094	Identifier	generate_segments		1215850	0					
ANR	1216095	ArgumentList	ppath		1215850	1					
ANR	1216096	Argument	ppath		1215850	0					
ANR	1216097	Identifier	ppath		1215850	0					
ANR	1216098	Argument	points		1215850	1					
ANR	1216099	Identifier	points		1215850	0					
ANR	1216100	Argument	pe - points		1215850	2					
ANR	1216101	AdditiveExpression	pe - points		1215850	0		-			
ANR	1216102	Identifier	pe		1215850	0					
ANR	1216103	Identifier	points		1215850	1					
ANR	1216104	Argument	notes		1215850	3					
ANR	1216105	Identifier	notes		1215850	0					
ANR	1216106	IfStatement	if ( code < 0 )		1215850	2					
ANR	1216107	Condition	code < 0	586:20:21704:21711	1215850	0	True				
ANR	1216108	RelationalExpression	code < 0		1215850	0		<			
ANR	1216109	Identifier	code		1215850	0					
ANR	1216110	PrimaryExpression	0		1215850	1					
ANR	1216111	ReturnStatement	return code ;	587:20:21734:21745	1215850	1	True				
ANR	1216112	Identifier	code		1215850	0					
ANR	1216113	IfStatement	if ( ! more )		1215850	3					
ANR	1216114	Condition	! more	588:20:21767:21771	1215850	0	True				
ANR	1216115	UnaryOperationExpression	! more		1215850	0					
ANR	1216116	UnaryOperator	!		1215850	0					
ANR	1216117	Identifier	more		1215850	1					
ANR	1216118	ReturnStatement	return 0 ;	589:20:21794:21802	1215850	1	True				
ANR	1216119	PrimaryExpression	0		1215850	0					
ANR	1216120	ExpressionStatement	notes |= sn_not_first	590:16:21820:21841	1215850	4	True				
ANR	1216121	AssignmentExpression	notes |= sn_not_first		1215850	0		|=			
ANR	1216122	Identifier	notes		1215850	0					
ANR	1216123	Identifier	sn_not_first		1215850	1					
ANR	1216124	ExpressionStatement	"memcpy ( points , pe , ( char * ) ppt - ( char * ) pe )"	591:16:21859:21903	1215850	5	True				
ANR	1216125	CallExpression	"memcpy ( points , pe , ( char * ) ppt - ( char * ) pe )"		1215850	0					
ANR	1216126	Callee	memcpy		1215850	0					
ANR	1216127	Identifier	memcpy		1215850	0					
ANR	1216128	ArgumentList	points		1215850	1					
ANR	1216129	Argument	points		1215850	0					
ANR	1216130	Identifier	points		1215850	0					
ANR	1216131	Argument	pe		1215850	1					
ANR	1216132	Identifier	pe		1215850	0					
ANR	1216133	Argument	( char * ) ppt - ( char * ) pe		1215850	2					
ANR	1216134	AdditiveExpression	( char * ) ppt - ( char * ) pe		1215850	0		-			
ANR	1216135	CastExpression	( char * ) ppt		1215850	0					
ANR	1216136	CastTarget	char *		1215850	0					
ANR	1216137	Identifier	ppt		1215850	1					
ANR	1216138	CastExpression	( char * ) pe		1215850	1					
ANR	1216139	CastTarget	char *		1215850	0					
ANR	1216140	Identifier	pe		1215850	1					
ANR	1216141	ExpressionStatement	ppt = points + ( ppt - pe )	592:16:21921:21946	1215850	6	True				
ANR	1216142	AssignmentExpression	ppt = points + ( ppt - pe )		1215850	0		=			
ANR	1216143	Identifier	ppt		1215850	0					
ANR	1216144	AdditiveExpression	points + ( ppt - pe )		1215850	1		+			
ANR	1216145	Identifier	points		1215850	0					
ANR	1216146	AdditiveExpression	ppt - pe		1215850	1		-			
ANR	1216147	Identifier	ppt		1215850	0					
ANR	1216148	Identifier	pe		1215850	1					
ANR	1216149	ReturnType	static int		1215850	1					
ANR	1216150	Identifier	gx_subdivide_curve_rec		1215850	2					
ANR	1216151	ParameterList	"gx_flattened_iterator * self , gx_path * ppath , int k , curve_segment * pc , segment_notes notes , gs_fixed_point * points"		1215850	3					
ANR	1216152	Parameter	gx_flattened_iterator * self	546:23:20283:20309	1215850	0	True				
ANR	1216153	ParameterType	gx_flattened_iterator *		1215850	0					
ANR	1216154	Identifier	self		1215850	1					
ANR	1216155	Parameter	gx_path * ppath	547:18:20330:20344	1215850	1	True				
ANR	1216156	ParameterType	gx_path *		1215850	0					
ANR	1216157	Identifier	ppath		1215850	1					
ANR	1216158	Parameter	int k	547:35:20347:20351	1215850	2	True				
ANR	1216159	ParameterType	int		1215850	0					
ANR	1216160	Identifier	k		1215850	1					
ANR	1216161	Parameter	curve_segment * pc	547:42:20354:20371	1215850	3	True				
ANR	1216162	ParameterType	curve_segment *		1215850	0					
ANR	1216163	Identifier	pc		1215850	1					
ANR	1216164	Parameter	segment_notes notes	548:18:20392:20410	1215850	4	True				
ANR	1216165	ParameterType	segment_notes		1215850	0					
ANR	1216166	Identifier	notes		1215850	1					
ANR	1216167	Parameter	gs_fixed_point * points	548:39:20413:20434	1215850	5	True				
ANR	1216168	ParameterType	gs_fixed_point *		1215850	0					
ANR	1216169	Identifier	points		1215850	1					
ANR	1216170	CFGEntryNode	ENTRY		1215850		True				
ANR	1216171	CFGExitNode	EXIT		1215850		True				
ANR	1216172	InfiniteForNode	true		1215850		True				
ANR	1216173	Symbol	max_points		1215850						
ANR	1216174	Symbol	notes		1215850						
ANR	1216175	Symbol	code		1215850						
ANR	1216176	Symbol	& cseg		1215850						
ANR	1216177	Symbol	pc -> p1 . y		1215850						
ANR	1216178	Symbol	pc -> p1 . x		1215850						
ANR	1216179	Symbol	ppath		1215850						
ANR	1216180	Symbol	pc -> pt . x		1215850						
ANR	1216181	Symbol	pc -> pt . y		1215850						
ANR	1216182	Symbol	gx_flattened_iterator__next		1215850						
ANR	1216183	Symbol	points		1215850						
ANR	1216184	Symbol	self -> lx1		1215850						
ANR	1216185	Symbol	pc -> p2 . x		1215850						
ANR	1216186	Symbol	pc -> p2 . y		1215850						
ANR	1216187	Symbol	pc -> pt		1215850						
ANR	1216188	Symbol	pc -> p2		1215850						
ANR	1216189	Symbol	gx_path_add_curve_notes		1215850						
ANR	1216190	Symbol	pc -> p1		1215850						
ANR	1216191	Symbol	* ppt		1215850						
ANR	1216192	Symbol	* ppath		1215850						
ANR	1216193	Symbol	more		1215850						
ANR	1216194	Symbol	* self		1215850						
ANR	1216195	Symbol	ppath -> position . x		1215850						
ANR	1216196	Symbol	k		1215850						
ANR	1216197	Symbol	gx_flattened_iterator__init		1215850						
ANR	1216198	Symbol	ppath -> position . y		1215850						
ANR	1216199	Symbol	generate_segments		1215850						
ANR	1216200	Symbol	gx_subdivide_curve_rec		1215850						
ANR	1216201	Symbol	self -> ly1		1215850						
ANR	1216202	Symbol	pc		1215850						
ANR	1216203	Symbol	ppt		1215850						
ANR	1216204	Symbol	pe		1215850						
ANR	1216205	Symbol	self		1215850						
ANR	1216206	Symbol	* pc		1215850						
ANR	1216207	Symbol	sn_not_first		1215850						
ANR	1216208	Symbol	ppath -> position		1215850						
ANR	1216209	Symbol	cseg		1215850						
ANR	1216210	Symbol	ppt -> x		1215850						
ANR	1216211	Symbol	ppt -> y		1215850						
ANR	1216212	Function	gx_subdivide_curve	598:1:21982:22529							
ANR	1216213	FunctionDef	"gx_subdivide_curve (gx_path * ppath , int k , curve_segment * pc , segment_notes notes)"		1216212	0					
ANR	1216214	CompoundStatement		610:0:22380:22529	1216212	0					
ANR	1216215	IdentifierDeclStatement	gs_fixed_point points [ max_points + 1 ] ;	611:4:22386:22423	1216212	0	True				
ANR	1216216	IdentifierDecl	points [ max_points + 1 ]		1216212	0					
ANR	1216217	IdentifierDeclType	gs_fixed_point [ max_points + 1 ]		1216212	0					
ANR	1216218	Identifier	points		1216212	1					
ANR	1216219	AdditiveExpression	max_points + 1		1216212	2		+			
ANR	1216220	Identifier	max_points		1216212	0					
ANR	1216221	PrimaryExpression	1		1216212	1					
ANR	1216222	IdentifierDeclStatement	gx_flattened_iterator iter ;	612:4:22429:22455	1216212	1	True				
ANR	1216223	IdentifierDecl	iter		1216212	0					
ANR	1216224	IdentifierDeclType	gx_flattened_iterator		1216212	0					
ANR	1216225	Identifier	iter		1216212	1					
ANR	1216226	ReturnStatement	"return gx_subdivide_curve_rec ( & iter , ppath , k , pc , notes , points ) ;"	614:4:22462:22527	1216212	2	True				
ANR	1216227	CallExpression	"gx_subdivide_curve_rec ( & iter , ppath , k , pc , notes , points )"		1216212	0					
ANR	1216228	Callee	gx_subdivide_curve_rec		1216212	0					
ANR	1216229	Identifier	gx_subdivide_curve_rec		1216212	0					
ANR	1216230	ArgumentList	& iter		1216212	1					
ANR	1216231	Argument	& iter		1216212	0					
ANR	1216232	UnaryOperationExpression	& iter		1216212	0					
ANR	1216233	UnaryOperator	&		1216212	0					
ANR	1216234	Identifier	iter		1216212	1					
ANR	1216235	Argument	ppath		1216212	1					
ANR	1216236	Identifier	ppath		1216212	0					
ANR	1216237	Argument	k		1216212	2					
ANR	1216238	Identifier	k		1216212	0					
ANR	1216239	Argument	pc		1216212	3					
ANR	1216240	Identifier	pc		1216212	0					
ANR	1216241	Argument	notes		1216212	4					
ANR	1216242	Identifier	notes		1216212	0					
ANR	1216243	Argument	points		1216212	5					
ANR	1216244	Identifier	points		1216212	0					
ANR	1216245	ReturnType	undef coord_near int		1216212	1					
ANR	1216246	Identifier	gx_subdivide_curve		1216212	2					
ANR	1216247	ParameterList	"gx_path * ppath , int k , curve_segment * pc , segment_notes notes"		1216212	3					
ANR	1216248	Parameter	gx_path * ppath	609:19:22315:22329	1216212	0	True				
ANR	1216249	ParameterType	gx_path *		1216212	0					
ANR	1216250	Identifier	ppath		1216212	1					
ANR	1216251	Parameter	int k	609:36:22332:22336	1216212	1	True				
ANR	1216252	ParameterType	int		1216212	0					
ANR	1216253	Identifier	k		1216212	1					
ANR	1216254	Parameter	curve_segment * pc	609:43:22339:22356	1216212	2	True				
ANR	1216255	ParameterType	curve_segment *		1216212	0					
ANR	1216256	Identifier	pc		1216212	1					
ANR	1216257	Parameter	segment_notes notes	609:63:22359:22377	1216212	3	True				
ANR	1216258	ParameterType	segment_notes		1216212	0					
ANR	1216259	Identifier	notes		1216212	1					
ANR	1216260	CFGEntryNode	ENTRY		1216212		True				
ANR	1216261	CFGExitNode	EXIT		1216212		True				
ANR	1216262	Symbol	gx_subdivide_curve_rec		1216212						
ANR	1216263	Symbol	pc		1216212						
ANR	1216264	Symbol	notes		1216212						
ANR	1216265	Symbol	iter		1216212						
ANR	1216266	Symbol	ppath		1216212						
ANR	1216267	Symbol	k		1216212						
ANR	1216268	Symbol	& iter		1216212						
ANR	1216269	Symbol	points		1216212						
