command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6120409	File	data/converged/CVE-2018-16863_ghostpdl/iptcutil.c								
ANR	6120410	ClassDef	_tag_spec	28:8:403:467							
ANR	6120411	DeclStmt									
ANR	6120412	Decl							short	short	id
ANR	6120413	DeclStmt									
ANR	6120414	Decl							char	char *	name
ANR	6120415	DeclStmt									
ANR	6120416	Decl							_tag_spec	_tag_spec	tag_spec
ANR	6120417	DeclStmt									
ANR	6120418	Decl							tag_spec	tag_spec [ ]	tags
ANR	6120419	Function	formatString	96:0:1993:2539							
ANR	6120420	FunctionDef	"formatString (FILE * ofile , const char * s , int len)"		6120419	0					
ANR	6120421	CompoundStatement		97:0:2048:2539	6120419	0					
ANR	6120422	ExpressionStatement	"putc ( '""' , ofile )"	98:2:2052:2068	6120419	0	True				
ANR	6120423	CallExpression	"putc ( '""' , ofile )"		6120419	0					
ANR	6120424	Callee	putc		6120419	0					
ANR	6120425	Identifier	putc		6120419	0					
ANR	6120426	ArgumentList	"'""'"		6120419	1					
ANR	6120427	Argument	"'""'"		6120419	0					
ANR	6120428	PrimaryExpression	"'""'"		6120419	0					
ANR	6120429	Argument	ofile		6120419	1					
ANR	6120430	Identifier	ofile		6120419	0					
ANR	6120431	ForStatement	"for ( ; len > 0 ; -- len , ++ s )"		6120419	1					
ANR	6120432	Condition	len > 0	99:9:2079:2085	6120419	0	True				
ANR	6120433	RelationalExpression	len > 0		6120419	0		>			
ANR	6120434	Identifier	len		6120419	0					
ANR	6120435	PrimaryExpression	0		6120419	1					
ANR	6120436	Expression	"-- len , ++ s"	99:18:2088:2097	6120419	1	True				
ANR	6120437	UnaryExpression	-- len		6120419	0					
ANR	6120438	IncDec	--		6120419	0					
ANR	6120439	Identifier	len		6120419	1					
ANR	6120440	UnaryExpression	++ s		6120419	1					
ANR	6120441	IncDec	++		6120419	0					
ANR	6120442	Identifier	s		6120419	1					
ANR	6120443	CompoundStatement		4:4:57:67	6120419	2					
ANR	6120444	IdentifierDeclStatement	int c = * s ;	100:4:2106:2116	6120419	0	True				
ANR	6120445	IdentifierDecl	c = * s		6120419	0					
ANR	6120446	IdentifierDeclType	int		6120419	0					
ANR	6120447	Identifier	c		6120419	1					
ANR	6120448	AssignmentExpression	c = * s		6120419	2		=			
ANR	6120449	Identifier	c		6120419	0					
ANR	6120450	UnaryOperationExpression	* s		6120419	1					
ANR	6120451	UnaryOperator	*		6120419	0					
ANR	6120452	Identifier	s		6120419	1					
ANR	6120453	SwitchStatement	switch ( c )		6120419	1					
ANR	6120454	Condition	c	101:12:2130:2130	6120419	0	True				
ANR	6120455	Identifier	c		6120419	0					
ANR	6120456	CompoundStatement		5:15:84:84	6120419	1					
ANR	6120457	Label	case '&' :	102:4:2139:2147	6120419	0	True				
ANR	6120458	ExpressionStatement	"fputs ( ""&amp;"" , ofile )"	103:6:2155:2176	6120419	1	True				
ANR	6120459	CallExpression	"fputs ( ""&amp;"" , ofile )"		6120419	0					
ANR	6120460	Callee	fputs		6120419	0					
ANR	6120461	Identifier	fputs		6120419	0					
ANR	6120462	ArgumentList	"""&amp;"""		6120419	1					
ANR	6120463	Argument	"""&amp;"""		6120419	0					
ANR	6120464	PrimaryExpression	"""&amp;"""		6120419	0					
ANR	6120465	Argument	ofile		6120419	1					
ANR	6120466	Identifier	ofile		6120419	0					
ANR	6120467	BreakStatement	break ;	104:6:2184:2189	6120419	2	True				
ANR	6120468	Label	case '<' :	106:4:2215:2223	6120419	3	True				
ANR	6120469	ExpressionStatement	"fputs ( ""&lt;"" , ofile )"	107:6:2231:2251	6120419	4	True				
ANR	6120470	CallExpression	"fputs ( ""&lt;"" , ofile )"		6120419	0					
ANR	6120471	Callee	fputs		6120419	0					
ANR	6120472	Identifier	fputs		6120419	0					
ANR	6120473	ArgumentList	"""&lt;"""		6120419	1					
ANR	6120474	Argument	"""&lt;"""		6120419	0					
ANR	6120475	PrimaryExpression	"""&lt;"""		6120419	0					
ANR	6120476	Argument	ofile		6120419	1					
ANR	6120477	Identifier	ofile		6120419	0					
ANR	6120478	BreakStatement	break ;	108:6:2259:2264	6120419	5	True				
ANR	6120479	Label	case '>' :	109:4:2270:2278	6120419	6	True				
ANR	6120480	ExpressionStatement	"fputs ( ""&gt;"" , ofile )"	110:6:2286:2306	6120419	7	True				
ANR	6120481	CallExpression	"fputs ( ""&gt;"" , ofile )"		6120419	0					
ANR	6120482	Callee	fputs		6120419	0					
ANR	6120483	Identifier	fputs		6120419	0					
ANR	6120484	ArgumentList	"""&gt;"""		6120419	1					
ANR	6120485	Argument	"""&gt;"""		6120419	0					
ANR	6120486	PrimaryExpression	"""&gt;"""		6120419	0					
ANR	6120487	Argument	ofile		6120419	1					
ANR	6120488	Identifier	ofile		6120419	0					
ANR	6120489	BreakStatement	break ;	111:6:2314:2319	6120419	8	True				
ANR	6120490	Label	"case '""' :"	113:4:2332:2340	6120419	9	True				
ANR	6120491	ExpressionStatement	"fputs ( ""&quot;"" , ofile )"	114:6:2348:2370	6120419	10	True				
ANR	6120492	CallExpression	"fputs ( ""&quot;"" , ofile )"		6120419	0					
ANR	6120493	Callee	fputs		6120419	0					
ANR	6120494	Identifier	fputs		6120419	0					
ANR	6120495	ArgumentList	"""&quot;"""		6120419	1					
ANR	6120496	Argument	"""&quot;"""		6120419	0					
ANR	6120497	PrimaryExpression	"""&quot;"""		6120419	0					
ANR	6120498	Argument	ofile		6120419	1					
ANR	6120499	Identifier	ofile		6120419	0					
ANR	6120500	BreakStatement	break ;	115:6:2378:2383	6120419	11	True				
ANR	6120501	Label	default :	116:4:2389:2396	6120419	12	True				
ANR	6120502	Identifier	default		6120419	0					
ANR	6120503	IfStatement	if ( iscntrl ( c ) )		6120419	13					
ANR	6120504	Condition	iscntrl ( c )	117:10:2408:2417	6120419	0	True				
ANR	6120505	CallExpression	iscntrl ( c )		6120419	0					
ANR	6120506	Callee	iscntrl		6120419	0					
ANR	6120507	Identifier	iscntrl		6120419	0					
ANR	6120508	ArgumentList	c		6120419	1					
ANR	6120509	Argument	c		6120419	0					
ANR	6120510	Identifier	c		6120419	0					
ANR	6120511	ExpressionStatement	"fprintf ( ofile , ""&#%d;"" , c )"	118:8:2428:2454	6120419	1	True				
ANR	6120512	CallExpression	"fprintf ( ofile , ""&#%d;"" , c )"		6120419	0					
ANR	6120513	Callee	fprintf		6120419	0					
ANR	6120514	Identifier	fprintf		6120419	0					
ANR	6120515	ArgumentList	ofile		6120419	1					
ANR	6120516	Argument	ofile		6120419	0					
ANR	6120517	Identifier	ofile		6120419	0					
ANR	6120518	Argument	"""&#%d;"""		6120419	1					
ANR	6120519	PrimaryExpression	"""&#%d;"""		6120419	0					
ANR	6120520	Argument	c		6120419	2					
ANR	6120521	Identifier	c		6120419	0					
ANR	6120522	ElseStatement	else		6120419	0					
ANR	6120523	ExpressionStatement	"putc ( * s , ofile )"	120:8:2475:2490	6120419	0	True				
ANR	6120524	CallExpression	"putc ( * s , ofile )"		6120419	0					
ANR	6120525	Callee	putc		6120419	0					
ANR	6120526	Identifier	putc		6120419	0					
ANR	6120527	ArgumentList	* s		6120419	1					
ANR	6120528	Argument	* s		6120419	0					
ANR	6120529	UnaryOperationExpression	* s		6120419	0					
ANR	6120530	UnaryOperator	*		6120419	0					
ANR	6120531	Identifier	s		6120419	1					
ANR	6120532	Argument	ofile		6120419	1					
ANR	6120533	Identifier	ofile		6120419	0					
ANR	6120534	BreakStatement	break ;	121:6:2498:2503	6120419	14	True				
ANR	6120535	ExpressionStatement	"fputs ( ""\\""\\n"" , ofile )"	124:2:2517:2537	6120419	2	True				
ANR	6120536	CallExpression	"fputs ( ""\\""\\n"" , ofile )"		6120419	0					
ANR	6120537	Callee	fputs		6120419	0					
ANR	6120538	Identifier	fputs		6120419	0					
ANR	6120539	ArgumentList	"""\\""\\n"""		6120419	1					
ANR	6120540	Argument	"""\\""\\n"""		6120419	0					
ANR	6120541	PrimaryExpression	"""\\""\\n"""		6120419	0					
ANR	6120542	Argument	ofile		6120419	1					
ANR	6120543	Identifier	ofile		6120419	0					
ANR	6120544	ReturnType	void		6120419	1					
ANR	6120545	Identifier	formatString		6120419	2					
ANR	6120546	ParameterList	"FILE * ofile , const char * s , int len"		6120419	3					
ANR	6120547	Parameter	FILE * ofile	96:18:2011:2021	6120419	0	True				
ANR	6120548	ParameterType	FILE *		6120419	0					
ANR	6120549	Identifier	ofile		6120419	1					
ANR	6120550	Parameter	const char * s	96:31:2024:2036	6120419	1	True				
ANR	6120551	ParameterType	const char *		6120419	0					
ANR	6120552	Identifier	s		6120419	1					
ANR	6120553	Parameter	int len	96:46:2039:2045	6120419	2	True				
ANR	6120554	ParameterType	int		6120419	0					
ANR	6120555	Identifier	len		6120419	1					
ANR	6120556	CFGEntryNode	ENTRY		6120419		True				
ANR	6120557	CFGExitNode	EXIT		6120419		True				
ANR	6120558	Symbol	s		6120419						
ANR	6120559	Symbol	c		6120419						
ANR	6120560	Symbol	len		6120419						
ANR	6120561	Symbol	ofile		6120419						
ANR	6120562	Symbol	iscntrl		6120419						
ANR	6120563	Symbol	* s		6120419						
ANR	6120564	ClassDef	_html_code	127:8:2550:2630							
ANR	6120565	DeclStmt									
ANR	6120566	Decl							short	short	len
ANR	6120567	DeclStmt									
ANR	6120568	Decl							const char	const char *	code
ANR	6120569	Decl							const char	const char	val
ANR	6120570	DeclStmt									
ANR	6120571	Decl							_html_code	_html_code	html_code
ANR	6120572	DeclStmt									
ANR	6120573	Decl							html_code	html_code [ ]	html_codes
ANR	6120574	Function	convertHTMLcodes	150:0:2934:3820							
ANR	6120575	FunctionDef	"convertHTMLcodes (char * s , int len)"		6120574	0					
ANR	6120576	CompoundStatement		151:0:2973:3820	6120574	0					
ANR	6120577	IfStatement	if ( len <= 0 || s == ( char * ) NULL || * s == '\\0' )		6120574	0					
ANR	6120578	Condition	len <= 0 || s == ( char * ) NULL || * s == '\\0'	152:6:2981:3017	6120574	0	True				
ANR	6120579	OrExpression	len <= 0 || s == ( char * ) NULL || * s == '\\0'		6120574	0		||			
ANR	6120580	RelationalExpression	len <= 0		6120574	0		<=			
ANR	6120581	Identifier	len		6120574	0					
ANR	6120582	PrimaryExpression	0		6120574	1					
ANR	6120583	OrExpression	s == ( char * ) NULL || * s == '\\0'		6120574	1		||			
ANR	6120584	EqualityExpression	s == ( char * ) NULL		6120574	0		==			
ANR	6120585	Identifier	s		6120574	0					
ANR	6120586	CastExpression	( char * ) NULL		6120574	1					
ANR	6120587	CastTarget	char *		6120574	0					
ANR	6120588	Identifier	NULL		6120574	1					
ANR	6120589	EqualityExpression	* s == '\\0'		6120574	1		==			
ANR	6120590	UnaryOperationExpression	* s		6120574	0					
ANR	6120591	UnaryOperator	*		6120574	0					
ANR	6120592	Identifier	s		6120574	1					
ANR	6120593	PrimaryExpression	'\\0'		6120574	1					
ANR	6120594	ReturnStatement	return 0 ;	153:4:3024:3032	6120574	1	True				
ANR	6120595	PrimaryExpression	0		6120574	0					
ANR	6120596	IfStatement	if ( s [ 1 ] == '#' )		6120574	1					
ANR	6120597	Condition	s [ 1 ] == '#'	155:6:3041:3051	6120574	0	True				
ANR	6120598	EqualityExpression	s [ 1 ] == '#'		6120574	0		==			
ANR	6120599	ArrayIndexing	s [ 1 ]		6120574	0					
ANR	6120600	Identifier	s		6120574	0					
ANR	6120601	PrimaryExpression	1		6120574	1					
ANR	6120602	PrimaryExpression	'#'		6120574	1					
ANR	6120603	CompoundStatement		7:6:92:102	6120574	1					
ANR	6120604	IdentifierDeclStatement	"int val , o ;"	157:6:3066:3076	6120574	0	True				
ANR	6120605	IdentifierDecl	val		6120574	0					
ANR	6120606	IdentifierDeclType	int		6120574	0					
ANR	6120607	Identifier	val		6120574	1					
ANR	6120608	IdentifierDecl	o		6120574	1					
ANR	6120609	IdentifierDeclType	int		6120574	0					
ANR	6120610	Identifier	o		6120574	1					
ANR	6120611	IfStatement	"if ( sscanf ( s , ""&#%d;"" , & val ) == 1 )"		6120574	1					
ANR	6120612	Condition	"sscanf ( s , ""&#%d;"" , & val ) == 1"	159:10:3089:3115	6120574	0	True				
ANR	6120613	EqualityExpression	"sscanf ( s , ""&#%d;"" , & val ) == 1"		6120574	0		==			
ANR	6120614	CallExpression	"sscanf ( s , ""&#%d;"" , & val )"		6120574	0					
ANR	6120615	Callee	sscanf		6120574	0					
ANR	6120616	Identifier	sscanf		6120574	0					
ANR	6120617	ArgumentList	s		6120574	1					
ANR	6120618	Argument	s		6120574	0					
ANR	6120619	Identifier	s		6120574	0					
ANR	6120620	Argument	"""&#%d;"""		6120574	1					
ANR	6120621	PrimaryExpression	"""&#%d;"""		6120574	0					
ANR	6120622	Argument	& val		6120574	2					
ANR	6120623	UnaryOperationExpression	& val		6120574	0					
ANR	6120624	UnaryOperator	&		6120574	0					
ANR	6120625	Identifier	val		6120574	1					
ANR	6120626	PrimaryExpression	1		6120574	1					
ANR	6120627	CompoundStatement		10:8:152:152	6120574	1					
ANR	6120628	ExpressionStatement	o = 3	161:10:3138:3143	6120574	0	True				
ANR	6120629	AssignmentExpression	o = 3		6120574	0		=			
ANR	6120630	Identifier	o		6120574	0					
ANR	6120631	PrimaryExpression	3		6120574	1					
ANR	6120632	WhileStatement	while ( s [ o ] != ';' )		6120574	1					
ANR	6120633	Condition	s [ o ] != ';'	162:17:3162:3172	6120574	0	True				
ANR	6120634	EqualityExpression	s [ o ] != ';'		6120574	0		!=			
ANR	6120635	ArrayIndexing	s [ o ]		6120574	0					
ANR	6120636	Identifier	s		6120574	0					
ANR	6120637	Identifier	o		6120574	1					
ANR	6120638	PrimaryExpression	';'		6120574	1					
ANR	6120639	CompoundStatement		13:12:213:213	6120574	1					
ANR	6120640	ExpressionStatement	o ++	164:14:3203:3206	6120574	0	True				
ANR	6120641	PostIncDecOperationExpression	o ++		6120574	0					
ANR	6120642	Identifier	o		6120574	0					
ANR	6120643	IncDec	++		6120574	1					
ANR	6120644	IfStatement	if ( o > 5 )		6120574	1					
ANR	6120645	Condition	o > 5	165:18:3226:3230	6120574	0	True				
ANR	6120646	RelationalExpression	o > 5		6120574	0		>			
ANR	6120647	Identifier	o		6120574	0					
ANR	6120648	PrimaryExpression	5		6120574	1					
ANR	6120649	BreakStatement	break ;	166:16:3249:3254	6120574	1	True				
ANR	6120650	IfStatement	if ( o < 5 )		6120574	2					
ANR	6120651	Condition	o < 5	168:14:3284:3288	6120574	0	True				
ANR	6120652	RelationalExpression	o < 5		6120574	0		<			
ANR	6120653	Identifier	o		6120574	0					
ANR	6120654	PrimaryExpression	5		6120574	1					
ANR	6120655	ExpressionStatement	"strcpy ( s + 1 , s + 1 + o )"	169:12:3303:3321	6120574	1	True				
ANR	6120656	CallExpression	"strcpy ( s + 1 , s + 1 + o )"		6120574	0					
ANR	6120657	Callee	strcpy		6120574	0					
ANR	6120658	Identifier	strcpy		6120574	0					
ANR	6120659	ArgumentList	s + 1		6120574	1					
ANR	6120660	Argument	s + 1		6120574	0					
ANR	6120661	AdditiveExpression	s + 1		6120574	0		+			
ANR	6120662	Identifier	s		6120574	0					
ANR	6120663	PrimaryExpression	1		6120574	1					
ANR	6120664	Argument	s + 1 + o		6120574	1					
ANR	6120665	AdditiveExpression	s + 1 + o		6120574	0		+			
ANR	6120666	Identifier	s		6120574	0					
ANR	6120667	AdditiveExpression	1 + o		6120574	1		+			
ANR	6120668	PrimaryExpression	1		6120574	0					
ANR	6120669	Identifier	o		6120574	1					
ANR	6120670	ExpressionStatement	* s = val	170:10:3333:3341	6120574	3	True				
ANR	6120671	AssignmentExpression	* s = val		6120574	0		=			
ANR	6120672	UnaryOperationExpression	* s		6120574	0					
ANR	6120673	UnaryOperator	*		6120574	0					
ANR	6120674	Identifier	s		6120574	1					
ANR	6120675	Identifier	val		6120574	1					
ANR	6120676	ReturnStatement	return o ;	171:10:3353:3361	6120574	4	True				
ANR	6120677	Identifier	o		6120574	0					
ANR	6120678	ElseStatement	else		6120574	0					
ANR	6120679	CompoundStatement		26:6:424:493	6120574	0					
ANR	6120680	IdentifierDeclStatement	"int i , codes = sizeof ( html_codes ) / sizeof ( html_code ) ;"	176:6:3398:3467	6120574	0	True				
ANR	6120681	IdentifierDecl	i		6120574	0					
ANR	6120682	IdentifierDeclType	int		6120574	0					
ANR	6120683	Identifier	i		6120574	1					
ANR	6120684	IdentifierDecl	codes = sizeof ( html_codes ) / sizeof ( html_code )		6120574	1					
ANR	6120685	IdentifierDeclType	int		6120574	0					
ANR	6120686	Identifier	codes		6120574	1					
ANR	6120687	AssignmentExpression	codes = sizeof ( html_codes ) / sizeof ( html_code )		6120574	2		=			
ANR	6120688	Identifier	codes		6120574	0					
ANR	6120689	MultiplicativeExpression	sizeof ( html_codes ) / sizeof ( html_code )		6120574	1		/			
ANR	6120690	SizeofExpression	sizeof ( html_codes )		6120574	0					
ANR	6120691	Sizeof	sizeof		6120574	0					
ANR	6120692	SizeofOperand	html_codes		6120574	1					
ANR	6120693	SizeofExpression	sizeof ( html_code )		6120574	1					
ANR	6120694	Sizeof	sizeof		6120574	0					
ANR	6120695	SizeofOperand	html_code		6120574	1					
ANR	6120696	ForStatement	for ( i = 0 ; i < codes ; i ++ )		6120574	1					
ANR	6120697	ForInit	i = 0 ;	180:11:3481:3484	6120574	0	True				
ANR	6120698	AssignmentExpression	i = 0		6120574	0		=			
ANR	6120699	Identifier	i		6120574	0					
ANR	6120700	PrimaryExpression	0		6120574	1					
ANR	6120701	Condition	i < codes	180:16:3486:3494	6120574	1	True				
ANR	6120702	RelationalExpression	i < codes		6120574	0		<			
ANR	6120703	Identifier	i		6120574	0					
ANR	6120704	Identifier	codes		6120574	1					
ANR	6120705	PostIncDecOperationExpression	i ++	180:27:3497:3499	6120574	2	True				
ANR	6120706	Identifier	i		6120574	0					
ANR	6120707	IncDec	++		6120574	1					
ANR	6120708	CompoundStatement		31:8:536:536	6120574	3					
ANR	6120709	IfStatement	if ( html_codes [ i ] . len <= len )		6120574	0					
ANR	6120710	Condition	html_codes [ i ] . len <= len	182:14:3526:3549	6120574	0	True				
ANR	6120711	RelationalExpression	html_codes [ i ] . len <= len		6120574	0		<=			
ANR	6120712	MemberAccess	html_codes [ i ] . len		6120574	0					
ANR	6120713	ArrayIndexing	html_codes [ i ]		6120574	0					
ANR	6120714	Identifier	html_codes		6120574	0					
ANR	6120715	Identifier	i		6120574	1					
ANR	6120716	Identifier	len		6120574	1					
ANR	6120717	Identifier	len		6120574	1					
ANR	6120718	IfStatement	"if ( STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len ) == 0 )"		6120574	1					
ANR	6120719	Condition	"STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len ) == 0"	183:16:3568:3622	6120574	0	True				
ANR	6120720	EqualityExpression	"STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len ) == 0"		6120574	0		==			
ANR	6120721	CallExpression	"STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len )"		6120574	0					
ANR	6120722	Callee	STRNICMP		6120574	0					
ANR	6120723	Identifier	STRNICMP		6120574	0					
ANR	6120724	ArgumentList	s		6120574	1					
ANR	6120725	Argument	s		6120574	0					
ANR	6120726	Identifier	s		6120574	0					
ANR	6120727	Argument	html_codes [ i ] . code		6120574	1					
ANR	6120728	MemberAccess	html_codes [ i ] . code		6120574	0					
ANR	6120729	ArrayIndexing	html_codes [ i ]		6120574	0					
ANR	6120730	Identifier	html_codes		6120574	0					
ANR	6120731	Identifier	i		6120574	1					
ANR	6120732	Identifier	code		6120574	1					
ANR	6120733	Argument	html_codes [ i ] . len		6120574	2					
ANR	6120734	MemberAccess	html_codes [ i ] . len		6120574	0					
ANR	6120735	ArrayIndexing	html_codes [ i ]		6120574	0					
ANR	6120736	Identifier	html_codes		6120574	0					
ANR	6120737	Identifier	i		6120574	1					
ANR	6120738	Identifier	len		6120574	1					
ANR	6120739	PrimaryExpression	0		6120574	1					
ANR	6120740	CompoundStatement		34:14:665:665	6120574	1					
ANR	6120741	ExpressionStatement	"strcpy ( s + 1 , s + html_codes [ i ] . len )"	185:16:3657:3689	6120574	0	True				
ANR	6120742	CallExpression	"strcpy ( s + 1 , s + html_codes [ i ] . len )"		6120574	0					
ANR	6120743	Callee	strcpy		6120574	0					
ANR	6120744	Identifier	strcpy		6120574	0					
ANR	6120745	ArgumentList	s + 1		6120574	1					
ANR	6120746	Argument	s + 1		6120574	0					
ANR	6120747	AdditiveExpression	s + 1		6120574	0		+			
ANR	6120748	Identifier	s		6120574	0					
ANR	6120749	PrimaryExpression	1		6120574	1					
ANR	6120750	Argument	s + html_codes [ i ] . len		6120574	1					
ANR	6120751	AdditiveExpression	s + html_codes [ i ] . len		6120574	0		+			
ANR	6120752	Identifier	s		6120574	0					
ANR	6120753	MemberAccess	html_codes [ i ] . len		6120574	1					
ANR	6120754	ArrayIndexing	html_codes [ i ]		6120574	0					
ANR	6120755	Identifier	html_codes		6120574	0					
ANR	6120756	Identifier	i		6120574	1					
ANR	6120757	Identifier	len		6120574	1					
ANR	6120758	ExpressionStatement	* s = html_codes [ i ] . val	186:16:3707:3729	6120574	1	True				
ANR	6120759	AssignmentExpression	* s = html_codes [ i ] . val		6120574	0		=			
ANR	6120760	UnaryOperationExpression	* s		6120574	0					
ANR	6120761	UnaryOperator	*		6120574	0					
ANR	6120762	Identifier	s		6120574	1					
ANR	6120763	MemberAccess	html_codes [ i ] . val		6120574	1					
ANR	6120764	ArrayIndexing	html_codes [ i ]		6120574	0					
ANR	6120765	Identifier	html_codes		6120574	0					
ANR	6120766	Identifier	i		6120574	1					
ANR	6120767	Identifier	val		6120574	1					
ANR	6120768	ReturnStatement	return html_codes [ i ] . len - 1 ;	187:16:3747:3773	6120574	2	True				
ANR	6120769	AdditiveExpression	html_codes [ i ] . len - 1		6120574	0		-			
ANR	6120770	MemberAccess	html_codes [ i ] . len		6120574	0					
ANR	6120771	ArrayIndexing	html_codes [ i ]		6120574	0					
ANR	6120772	Identifier	html_codes		6120574	0					
ANR	6120773	Identifier	i		6120574	1					
ANR	6120774	Identifier	len		6120574	1					
ANR	6120775	PrimaryExpression	1		6120574	1					
ANR	6120776	ReturnStatement	return 0 ;	192:2:3810:3818	6120574	2	True				
ANR	6120777	PrimaryExpression	0		6120574	0					
ANR	6120778	ReturnType	int		6120574	1					
ANR	6120779	Identifier	convertHTMLcodes		6120574	2					
ANR	6120780	ParameterList	"char * s , int len"		6120574	3					
ANR	6120781	Parameter	char * s	150:21:2955:2961	6120574	0	True				
ANR	6120782	ParameterType	char *		6120574	0					
ANR	6120783	Identifier	s		6120574	1					
ANR	6120784	Parameter	int len	150:30:2964:2970	6120574	1	True				
ANR	6120785	ParameterType	int		6120574	0					
ANR	6120786	Identifier	len		6120574	1					
ANR	6120787	CFGEntryNode	ENTRY		6120574		True				
ANR	6120788	CFGExitNode	EXIT		6120574		True				
ANR	6120789	Symbol	val		6120574						
ANR	6120790	Symbol	& val		6120574						
ANR	6120791	Symbol	codes		6120574						
ANR	6120792	Symbol	html_codes [ i ] . code		6120574						
ANR	6120793	Symbol	NULL		6120574						
ANR	6120794	Symbol	i		6120574						
ANR	6120795	Symbol	html_codes [ i ] . val		6120574						
ANR	6120796	Symbol	html_codes		6120574						
ANR	6120797	Symbol	o		6120574						
ANR	6120798	Symbol	* html_codes		6120574						
ANR	6120799	Symbol	s		6120574						
ANR	6120800	Symbol	* i		6120574						
ANR	6120801	Symbol	len		6120574						
ANR	6120802	Symbol	sscanf		6120574						
ANR	6120803	Symbol	html_codes [ i ] . len		6120574						
ANR	6120804	Symbol	* o		6120574						
ANR	6120805	Symbol	* s		6120574						
ANR	6120806	Symbol	STRNICMP		6120574						
ANR	6120807	Function	formatIPTC	195:0:3823:6894							
ANR	6120808	FunctionDef	"formatIPTC (FILE * ifile , FILE * ofile)"		6120807	0					
ANR	6120809	CompoundStatement		196:0:3864:6894	6120807	0					
ANR	6120810	IdentifierDeclStatement	"unsigned int foundiptc , tagsfound ;"	197:2:3868:3909	6120807	0	True				
ANR	6120811	IdentifierDecl	foundiptc		6120807	0					
ANR	6120812	IdentifierDeclType	unsigned int		6120807	0					
ANR	6120813	Identifier	foundiptc		6120807	1					
ANR	6120814	IdentifierDecl	tagsfound		6120807	1					
ANR	6120815	IdentifierDeclType	unsigned int		6120807	0					
ANR	6120816	Identifier	tagsfound		6120807	1					
ANR	6120817	IdentifierDeclStatement	"char * readable , * str ;"	201:2:3914:3942	6120807	1	True				
ANR	6120818	IdentifierDecl	* readable		6120807	0					
ANR	6120819	IdentifierDeclType	char *		6120807	0					
ANR	6120820	Identifier	readable		6120807	1					
ANR	6120821	IdentifierDecl	* str		6120807	1					
ANR	6120822	IdentifierDeclType	char *		6120807	0					
ANR	6120823	Identifier	str		6120807	1					
ANR	6120824	IdentifierDeclStatement	"long tagindx , taglen ;"	205:2:3947:3975	6120807	2	True				
ANR	6120825	IdentifierDecl	tagindx		6120807	0					
ANR	6120826	IdentifierDeclType	long		6120807	0					
ANR	6120827	Identifier	tagindx		6120807	1					
ANR	6120828	IdentifierDecl	taglen		6120807	1					
ANR	6120829	IdentifierDeclType	long		6120807	0					
ANR	6120830	Identifier	taglen		6120807	1					
ANR	6120831	IdentifierDeclStatement	"int i , tagcount = sizeof ( tags ) / sizeof ( tag_spec ) ;"	209:2:3980:4037	6120807	3	True				
ANR	6120832	IdentifierDecl	i		6120807	0					
ANR	6120833	IdentifierDeclType	int		6120807	0					
ANR	6120834	Identifier	i		6120807	1					
ANR	6120835	IdentifierDecl	tagcount = sizeof ( tags ) / sizeof ( tag_spec )		6120807	1					
ANR	6120836	IdentifierDeclType	int		6120807	0					
ANR	6120837	Identifier	tagcount		6120807	1					
ANR	6120838	AssignmentExpression	tagcount = sizeof ( tags ) / sizeof ( tag_spec )		6120807	2		=			
ANR	6120839	Identifier	tagcount		6120807	0					
ANR	6120840	MultiplicativeExpression	sizeof ( tags ) / sizeof ( tag_spec )		6120807	1		/			
ANR	6120841	SizeofExpression	sizeof ( tags )		6120807	0					
ANR	6120842	Sizeof	sizeof		6120807	0					
ANR	6120843	SizeofOperand	tags		6120807	1					
ANR	6120844	SizeofExpression	sizeof ( tag_spec )		6120807	1					
ANR	6120845	Sizeof	sizeof		6120807	0					
ANR	6120846	SizeofOperand	tag_spec		6120807	1					
ANR	6120847	IdentifierDeclStatement	"int c , dataset , recnum ;"	213:2:4042:4076	6120807	4	True				
ANR	6120848	IdentifierDecl	c		6120807	0					
ANR	6120849	IdentifierDeclType	int		6120807	0					
ANR	6120850	Identifier	c		6120807	1					
ANR	6120851	IdentifierDecl	dataset		6120807	1					
ANR	6120852	IdentifierDeclType	int		6120807	0					
ANR	6120853	Identifier	dataset		6120807	1					
ANR	6120854	IdentifierDecl	recnum		6120807	2					
ANR	6120855	IdentifierDeclType	int		6120807	0					
ANR	6120856	Identifier	recnum		6120807	1					
ANR	6120857	ExpressionStatement	foundiptc = 0	218:2:4081:4094	6120807	5	True				
ANR	6120858	AssignmentExpression	foundiptc = 0		6120807	0		=			
ANR	6120859	Identifier	foundiptc		6120807	0					
ANR	6120860	PrimaryExpression	0		6120807	1					
ANR	6120861	ExpressionStatement	tagsfound = 0	219:2:4126:4139	6120807	6	True				
ANR	6120862	AssignmentExpression	tagsfound = 0		6120807	0		=			
ANR	6120863	Identifier	tagsfound		6120807	0					
ANR	6120864	PrimaryExpression	0		6120807	1					
ANR	6120865	ExpressionStatement	c = getc ( ifile )	221:2:4171:4186	6120807	7	True				
ANR	6120866	AssignmentExpression	c = getc ( ifile )		6120807	0		=			
ANR	6120867	Identifier	c		6120807	0					
ANR	6120868	CallExpression	getc ( ifile )		6120807	1					
ANR	6120869	Callee	getc		6120807	0					
ANR	6120870	Identifier	getc		6120807	0					
ANR	6120871	ArgumentList	ifile		6120807	1					
ANR	6120872	Argument	ifile		6120807	0					
ANR	6120873	Identifier	ifile		6120807	0					
ANR	6120874	WhileStatement	while ( c != EOF )		6120807	8					
ANR	6120875	Condition	c != EOF	222:9:4197:4204	6120807	0	True				
ANR	6120876	EqualityExpression	c != EOF		6120807	0		!=			
ANR	6120877	Identifier	c		6120807	0					
ANR	6120878	Identifier	EOF		6120807	1					
ANR	6120879	CompoundStatement		28:4:346:346	6120807	1					
ANR	6120880	IfStatement	if ( c == 0x1c )		6120807	0					
ANR	6120881	Condition	c == 0x1c	224:10:4223:4231	6120807	0	True				
ANR	6120882	EqualityExpression	c == 0x1c		6120807	0		==			
ANR	6120883	Identifier	c		6120807	0					
ANR	6120884	PrimaryExpression	0x1c		6120807	1					
ANR	6120885	ExpressionStatement	foundiptc = 1	225:8:4242:4255	6120807	1	True				
ANR	6120886	AssignmentExpression	foundiptc = 1		6120807	0		=			
ANR	6120887	Identifier	foundiptc		6120807	0					
ANR	6120888	PrimaryExpression	1		6120807	1					
ANR	6120889	ElseStatement	else		6120807	0					
ANR	6120890	CompoundStatement		32:8:411:411	6120807	0					
ANR	6120891	IfStatement	if ( foundiptc )		6120807	0					
ANR	6120892	Condition	foundiptc	228:14:4292:4300	6120807	0	True				
ANR	6120893	Identifier	foundiptc		6120807	0					
ANR	6120894	CompoundStatement		34:12:450:450	6120807	1					
ANR	6120895	ReturnStatement	return - 1 ;	230:14:4331:4340	6120807	0	True				
ANR	6120896	UnaryOperationExpression	- 1		6120807	0					
ANR	6120897	UnaryOperator	-		6120807	0					
ANR	6120898	PrimaryExpression	1		6120807	1					
ANR	6120899	ElseStatement	else		6120807	0					
ANR	6120900	CompoundStatement		38:12:518:518	6120807	0					
ANR	6120901	ExpressionStatement	c = getc ( ifile )	234:14:4399:4414	6120807	0	True				
ANR	6120902	AssignmentExpression	c = getc ( ifile )		6120807	0		=			
ANR	6120903	Identifier	c		6120807	0					
ANR	6120904	CallExpression	getc ( ifile )		6120807	1					
ANR	6120905	Callee	getc		6120807	0					
ANR	6120906	Identifier	getc		6120807	0					
ANR	6120907	ArgumentList	ifile		6120807	1					
ANR	6120908	Argument	ifile		6120807	0					
ANR	6120909	Identifier	ifile		6120807	0					
ANR	6120910	ContinueStatement	continue ;	235:14:4430:4438	6120807	1	True				
ANR	6120911	ExpressionStatement	dataset = getc ( ifile )	240:6:4553:4574	6120807	1	True				
ANR	6120912	AssignmentExpression	dataset = getc ( ifile )		6120807	0		=			
ANR	6120913	Identifier	dataset		6120807	0					
ANR	6120914	CallExpression	getc ( ifile )		6120807	1					
ANR	6120915	Callee	getc		6120807	0					
ANR	6120916	Identifier	getc		6120807	0					
ANR	6120917	ArgumentList	ifile		6120807	1					
ANR	6120918	Argument	ifile		6120807	0					
ANR	6120919	Identifier	ifile		6120807	0					
ANR	6120920	IfStatement	if ( ( char ) dataset == EOF )		6120807	2					
ANR	6120921	Condition	( char ) dataset == EOF	241:10:4586:4606	6120807	0	True				
ANR	6120922	EqualityExpression	( char ) dataset == EOF		6120807	0		==			
ANR	6120923	CastExpression	( char ) dataset		6120807	0					
ANR	6120924	CastTarget	char		6120807	0					
ANR	6120925	Identifier	dataset		6120807	1					
ANR	6120926	Identifier	EOF		6120807	1					
ANR	6120927	ReturnStatement	return - 1 ;	242:8:4617:4626	6120807	1	True				
ANR	6120928	UnaryOperationExpression	- 1		6120807	0					
ANR	6120929	UnaryOperator	-		6120807	0					
ANR	6120930	PrimaryExpression	1		6120807	1					
ANR	6120931	ExpressionStatement	recnum = getc ( ifile )	243:6:4634:4654	6120807	3	True				
ANR	6120932	AssignmentExpression	recnum = getc ( ifile )		6120807	0		=			
ANR	6120933	Identifier	recnum		6120807	0					
ANR	6120934	CallExpression	getc ( ifile )		6120807	1					
ANR	6120935	Callee	getc		6120807	0					
ANR	6120936	Identifier	getc		6120807	0					
ANR	6120937	ArgumentList	ifile		6120807	1					
ANR	6120938	Argument	ifile		6120807	0					
ANR	6120939	Identifier	ifile		6120807	0					
ANR	6120940	IfStatement	if ( ( char ) recnum == EOF )		6120807	4					
ANR	6120941	Condition	( char ) recnum == EOF	244:10:4666:4685	6120807	0	True				
ANR	6120942	EqualityExpression	( char ) recnum == EOF		6120807	0		==			
ANR	6120943	CastExpression	( char ) recnum		6120807	0					
ANR	6120944	CastTarget	char		6120807	0					
ANR	6120945	Identifier	recnum		6120807	1					
ANR	6120946	Identifier	EOF		6120807	1					
ANR	6120947	ReturnStatement	return - 1 ;	245:8:4696:4705	6120807	1	True				
ANR	6120948	UnaryOperationExpression	- 1		6120807	0					
ANR	6120949	UnaryOperator	-		6120807	0					
ANR	6120950	PrimaryExpression	1		6120807	1					
ANR	6120951	ForStatement	for ( i = 0 ; i < tagcount ; i ++ )		6120807	5					
ANR	6120952	ForInit	i = 0 ;	247:11:4793:4796	6120807	0	True				
ANR	6120953	AssignmentExpression	i = 0		6120807	0		=			
ANR	6120954	Identifier	i		6120807	0					
ANR	6120955	PrimaryExpression	0		6120807	1					
ANR	6120956	Condition	i < tagcount	247:16:4798:4808	6120807	1	True				
ANR	6120957	RelationalExpression	i < tagcount		6120807	0		<			
ANR	6120958	Identifier	i		6120807	0					
ANR	6120959	Identifier	tagcount		6120807	1					
ANR	6120960	PostIncDecOperationExpression	i ++	247:29:4811:4813	6120807	2	True				
ANR	6120961	Identifier	i		6120807	0					
ANR	6120962	IncDec	++		6120807	1					
ANR	6120963	CompoundStatement		53:8:959:959	6120807	3					
ANR	6120964	IfStatement	if ( tags [ i ] . id == recnum )		6120807	0					
ANR	6120965	Condition	tags [ i ] . id == recnum	249:14:4840:4859	6120807	0	True				
ANR	6120966	EqualityExpression	tags [ i ] . id == recnum		6120807	0		==			
ANR	6120967	MemberAccess	tags [ i ] . id		6120807	0					
ANR	6120968	ArrayIndexing	tags [ i ]		6120807	0					
ANR	6120969	Identifier	tags		6120807	0					
ANR	6120970	Identifier	i		6120807	1					
ANR	6120971	Identifier	id		6120807	1					
ANR	6120972	Identifier	recnum		6120807	1					
ANR	6120973	BreakStatement	break ;	250:12:4874:4879	6120807	1	True				
ANR	6120974	IfStatement	if ( i < tagcount )		6120807	6					
ANR	6120975	Condition	i < tagcount	252:10:4901:4912	6120807	0	True				
ANR	6120976	RelationalExpression	i < tagcount		6120807	0		<			
ANR	6120977	Identifier	i		6120807	0					
ANR	6120978	Identifier	tagcount		6120807	1					
ANR	6120979	ExpressionStatement	readable = tags [ i ] . name	253:8:4923:4946	6120807	1	True				
ANR	6120980	AssignmentExpression	readable = tags [ i ] . name		6120807	0		=			
ANR	6120981	Identifier	readable		6120807	0					
ANR	6120982	MemberAccess	tags [ i ] . name		6120807	1					
ANR	6120983	ArrayIndexing	tags [ i ]		6120807	0					
ANR	6120984	Identifier	tags		6120807	0					
ANR	6120985	Identifier	i		6120807	1					
ANR	6120986	Identifier	name		6120807	1					
ANR	6120987	ElseStatement	else		6120807	0					
ANR	6120988	ExpressionStatement	"readable = """""	255:8:4967:4980	6120807	0	True				
ANR	6120989	AssignmentExpression	"readable = """""		6120807	0		=			
ANR	6120990	Identifier	readable		6120807	0					
ANR	6120991	PrimaryExpression	""""""		6120807	1					
ANR	6120992	ExpressionStatement	c = getc ( ifile )	258:6:5073:5088	6120807	7	True				
ANR	6120993	AssignmentExpression	c = getc ( ifile )		6120807	0		=			
ANR	6120994	Identifier	c		6120807	0					
ANR	6120995	CallExpression	getc ( ifile )		6120807	1					
ANR	6120996	Callee	getc		6120807	0					
ANR	6120997	Identifier	getc		6120807	0					
ANR	6120998	ArgumentList	ifile		6120807	1					
ANR	6120999	Argument	ifile		6120807	0					
ANR	6121000	Identifier	ifile		6120807	0					
ANR	6121001	IfStatement	if ( c == EOF )		6120807	8					
ANR	6121002	Condition	c == EOF	259:10:5100:5107	6120807	0	True				
ANR	6121003	EqualityExpression	c == EOF		6120807	0		==			
ANR	6121004	Identifier	c		6120807	0					
ANR	6121005	Identifier	EOF		6120807	1					
ANR	6121006	ReturnStatement	return 0 ;	260:8:5118:5126	6120807	1	True				
ANR	6121007	PrimaryExpression	0		6120807	0					
ANR	6121008	IfStatement	if ( c & ( unsigned char ) 0x80 )		6120807	9					
ANR	6121009	Condition	c & ( unsigned char ) 0x80	261:10:5138:5161	6120807	0	True				
ANR	6121010	BitAndExpression	c & ( unsigned char ) 0x80		6120807	0		&			
ANR	6121011	Identifier	c		6120807	0					
ANR	6121012	CastExpression	( unsigned char ) 0x80		6120807	1					
ANR	6121013	CastTarget	unsigned char		6120807	0					
ANR	6121014	PrimaryExpression	0x80		6120807	1					
ANR	6121015	CompoundStatement		68:10:1319:1354	6120807	1					
ANR	6121016	IdentifierDeclStatement	unsigned char buffer [ 4 ] ;	263:10:5184:5219	6120807	0	True				
ANR	6121017	IdentifierDecl	buffer [ 4 ]		6120807	0					
ANR	6121018	IdentifierDeclType	unsigned char [ 4 ]		6120807	0					
ANR	6121019	Identifier	buffer		6120807	1					
ANR	6121020	PrimaryExpression	4		6120807	2					
ANR	6121021	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		6120807	1					
ANR	6121022	ForInit	i = 0 ;	266:15:5237:5240	6120807	0	True				
ANR	6121023	AssignmentExpression	i = 0		6120807	0		=			
ANR	6121024	Identifier	i		6120807	0					
ANR	6121025	PrimaryExpression	0		6120807	1					
ANR	6121026	Condition	i < 4	266:20:5242:5244	6120807	1	True				
ANR	6121027	RelationalExpression	i < 4		6120807	0		<			
ANR	6121028	Identifier	i		6120807	0					
ANR	6121029	PrimaryExpression	4		6120807	1					
ANR	6121030	PostIncDecOperationExpression	i ++	266:25:5247:5249	6120807	2	True				
ANR	6121031	Identifier	i		6120807	0					
ANR	6121032	IncDec	++		6120807	1					
ANR	6121033	CompoundStatement		72:12:1399:1399	6120807	3					
ANR	6121034	ExpressionStatement	c = getc ( ifile )	268:14:5280:5295	6120807	0	True				
ANR	6121035	AssignmentExpression	c = getc ( ifile )		6120807	0		=			
ANR	6121036	Identifier	c		6120807	0					
ANR	6121037	CallExpression	getc ( ifile )		6120807	1					
ANR	6121038	Callee	getc		6120807	0					
ANR	6121039	Identifier	getc		6120807	0					
ANR	6121040	ArgumentList	ifile		6120807	1					
ANR	6121041	Argument	ifile		6120807	0					
ANR	6121042	Identifier	ifile		6120807	0					
ANR	6121043	IfStatement	if ( c == EOF )		6120807	1					
ANR	6121044	Condition	c == EOF	269:18:5315:5322	6120807	0	True				
ANR	6121045	EqualityExpression	c == EOF		6120807	0		==			
ANR	6121046	Identifier	c		6120807	0					
ANR	6121047	Identifier	EOF		6120807	1					
ANR	6121048	ReturnStatement	return - 1 ;	270:16:5341:5350	6120807	1	True				
ANR	6121049	UnaryOperationExpression	- 1		6120807	0					
ANR	6121050	UnaryOperator	-		6120807	0					
ANR	6121051	PrimaryExpression	1		6120807	1					
ANR	6121052	ExpressionStatement	buffer [ i ] = c	271:14:5366:5379	6120807	2	True				
ANR	6121053	AssignmentExpression	buffer [ i ] = c		6120807	0		=			
ANR	6121054	ArrayIndexing	buffer [ i ]		6120807	0					
ANR	6121055	Identifier	buffer		6120807	0					
ANR	6121056	Identifier	i		6120807	1					
ANR	6121057	Identifier	c		6120807	1					
ANR	6121058	ExpressionStatement	taglen = ( ( ( long ) buffer [ 0 ] ) << 24 ) | ( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )	273:10:5405:5566	6120807	2	True				
ANR	6121059	AssignmentExpression	taglen = ( ( ( long ) buffer [ 0 ] ) << 24 ) | ( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		6120807	0		=			
ANR	6121060	Identifier	taglen		6120807	0					
ANR	6121061	InclusiveOrExpression	( ( ( long ) buffer [ 0 ] ) << 24 ) | ( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		6120807	1		|			
ANR	6121062	ShiftExpression	( ( long ) buffer [ 0 ] ) << 24		6120807	0		<<			
ANR	6121063	CastExpression	( long ) buffer [ 0 ]		6120807	0					
ANR	6121064	CastTarget	long		6120807	0					
ANR	6121065	ArrayIndexing	buffer [ 0 ]		6120807	1					
ANR	6121066	Identifier	buffer		6120807	0					
ANR	6121067	PrimaryExpression	0		6120807	1					
ANR	6121068	PrimaryExpression	24		6120807	1					
ANR	6121069	InclusiveOrExpression	( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		6120807	1		|			
ANR	6121070	ShiftExpression	( ( long ) buffer [ 1 ] ) << 16		6120807	0		<<			
ANR	6121071	CastExpression	( long ) buffer [ 1 ]		6120807	0					
ANR	6121072	CastTarget	long		6120807	0					
ANR	6121073	ArrayIndexing	buffer [ 1 ]		6120807	1					
ANR	6121074	Identifier	buffer		6120807	0					
ANR	6121075	PrimaryExpression	1		6120807	1					
ANR	6121076	PrimaryExpression	16		6120807	1					
ANR	6121077	InclusiveOrExpression	( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		6120807	1		|			
ANR	6121078	ShiftExpression	( ( long ) buffer [ 2 ] ) << 8		6120807	0		<<			
ANR	6121079	CastExpression	( long ) buffer [ 2 ]		6120807	0					
ANR	6121080	CastTarget	long		6120807	0					
ANR	6121081	ArrayIndexing	buffer [ 2 ]		6120807	1					
ANR	6121082	Identifier	buffer		6120807	0					
ANR	6121083	PrimaryExpression	2		6120807	1					
ANR	6121084	PrimaryExpression	8		6120807	1					
ANR	6121085	CastExpression	( long ) buffer [ 3 ]		6120807	1					
ANR	6121086	CastTarget	long		6120807	0					
ANR	6121087	ArrayIndexing	buffer [ 3 ]		6120807	1					
ANR	6121088	Identifier	buffer		6120807	0					
ANR	6121089	PrimaryExpression	3		6120807	1					
ANR	6121090	ElseStatement	else		6120807	0					
ANR	6121091	CompoundStatement		85:10:1744:1765	6120807	0					
ANR	6121092	IdentifierDeclStatement	int x = c ;	280:10:5609:5630	6120807	0	True				
ANR	6121093	IdentifierDecl	x = c		6120807	0					
ANR	6121094	IdentifierDeclType	int		6120807	0					
ANR	6121095	Identifier	x		6120807	1					
ANR	6121096	AssignmentExpression	x = c		6120807	2		=			
ANR	6121097	Identifier	c		6120807	0					
ANR	6121098	Identifier	c		6120807	1					
ANR	6121099	ExpressionStatement	taglen = x << 8	283:10:5643:5658	6120807	1	True				
ANR	6121100	AssignmentExpression	taglen = x << 8		6120807	0		=			
ANR	6121101	Identifier	taglen		6120807	0					
ANR	6121102	ShiftExpression	x << 8		6120807	1		<<			
ANR	6121103	Identifier	x		6120807	0					
ANR	6121104	PrimaryExpression	8		6120807	1					
ANR	6121105	ExpressionStatement	x = getc ( ifile )	284:10:5670:5685	6120807	2	True				
ANR	6121106	AssignmentExpression	x = getc ( ifile )		6120807	0		=			
ANR	6121107	Identifier	x		6120807	0					
ANR	6121108	CallExpression	getc ( ifile )		6120807	1					
ANR	6121109	Callee	getc		6120807	0					
ANR	6121110	Identifier	getc		6120807	0					
ANR	6121111	ArgumentList	ifile		6120807	1					
ANR	6121112	Argument	ifile		6120807	0					
ANR	6121113	Identifier	ifile		6120807	0					
ANR	6121114	IfStatement	if ( x == EOF )		6120807	3					
ANR	6121115	Condition	x == EOF	285:14:5701:5708	6120807	0	True				
ANR	6121116	EqualityExpression	x == EOF		6120807	0		==			
ANR	6121117	Identifier	x		6120807	0					
ANR	6121118	Identifier	EOF		6120807	1					
ANR	6121119	ReturnStatement	return - 1 ;	286:12:5723:5732	6120807	1	True				
ANR	6121120	UnaryOperationExpression	- 1		6120807	0					
ANR	6121121	UnaryOperator	-		6120807	0					
ANR	6121122	PrimaryExpression	1		6120807	1					
ANR	6121123	ExpressionStatement	taglen |= ( long ) x	287:10:5744:5762	6120807	4	True				
ANR	6121124	AssignmentExpression	taglen |= ( long ) x		6120807	0		|=			
ANR	6121125	Identifier	taglen		6120807	0					
ANR	6121126	CastExpression	( long ) x		6120807	1					
ANR	6121127	CastTarget	long		6120807	0					
ANR	6121128	Identifier	x		6120807	1					
ANR	6121129	IfStatement	if ( ( taglen <= 0 ) || ( taglen > 1048576 ) )		6120807	10					
ANR	6121130	Condition	( taglen <= 0 ) || ( taglen > 1048576 )	290:10:5823:5857	6120807	0	True				
ANR	6121131	OrExpression	( taglen <= 0 ) || ( taglen > 1048576 )		6120807	0		||			
ANR	6121132	RelationalExpression	taglen <= 0		6120807	0		<=			
ANR	6121133	Identifier	taglen		6120807	0					
ANR	6121134	PrimaryExpression	0		6120807	1					
ANR	6121135	RelationalExpression	taglen > 1048576		6120807	1		>			
ANR	6121136	Identifier	taglen		6120807	0					
ANR	6121137	PrimaryExpression	1048576		6120807	1					
ANR	6121138	CompoundStatement		96:8:2003:2003	6120807	1					
ANR	6121139	ExpressionStatement	"printf ( ""Inappropriate IPTC tag length %ld\\n"" , taglen )"	292:10:5880:5932	6120807	0	True				
ANR	6121140	CallExpression	"printf ( ""Inappropriate IPTC tag length %ld\\n"" , taglen )"		6120807	0					
ANR	6121141	Callee	printf		6120807	0					
ANR	6121142	Identifier	printf		6120807	0					
ANR	6121143	ArgumentList	"""Inappropriate IPTC tag length %ld\\n"""		6120807	1					
ANR	6121144	Argument	"""Inappropriate IPTC tag length %ld\\n"""		6120807	0					
ANR	6121145	PrimaryExpression	"""Inappropriate IPTC tag length %ld\\n"""		6120807	0					
ANR	6121146	Argument	taglen		6120807	1					
ANR	6121147	Identifier	taglen		6120807	0					
ANR	6121148	ReturnStatement	return - 1 ;	293:10:5944:5953	6120807	1	True				
ANR	6121149	UnaryOperationExpression	- 1		6120807	0					
ANR	6121150	UnaryOperator	-		6120807	0					
ANR	6121151	PrimaryExpression	1		6120807	1					
ANR	6121152	ExpressionStatement	str = ( char * ) malloc ( ( unsigned int ) ( taglen + 1 ) )	296:6:6052:6100	6120807	11	True				
ANR	6121153	AssignmentExpression	str = ( char * ) malloc ( ( unsigned int ) ( taglen + 1 ) )		6120807	0		=			
ANR	6121154	Identifier	str		6120807	0					
ANR	6121155	CastExpression	( char * ) malloc ( ( unsigned int ) ( taglen + 1 ) )		6120807	1					
ANR	6121156	CastTarget	char *		6120807	0					
ANR	6121157	CallExpression	malloc ( ( unsigned int ) ( taglen + 1 ) )		6120807	1					
ANR	6121158	Callee	malloc		6120807	0					
ANR	6121159	Identifier	malloc		6120807	0					
ANR	6121160	ArgumentList	( unsigned int ) ( taglen + 1 )		6120807	1					
ANR	6121161	Argument	( unsigned int ) ( taglen + 1 )		6120807	0					
ANR	6121162	CastExpression	( unsigned int ) ( taglen + 1 )		6120807	0					
ANR	6121163	CastTarget	unsigned int		6120807	0					
ANR	6121164	AdditiveExpression	taglen + 1		6120807	1		+			
ANR	6121165	Identifier	taglen		6120807	0					
ANR	6121166	PrimaryExpression	1		6120807	1					
ANR	6121167	IfStatement	if ( str == ( char * ) NULL )		6120807	12					
ANR	6121168	Condition	str == ( char * ) NULL	297:10:6112:6131	6120807	0	True				
ANR	6121169	EqualityExpression	str == ( char * ) NULL		6120807	0		==			
ANR	6121170	Identifier	str		6120807	0					
ANR	6121171	CastExpression	( char * ) NULL		6120807	1					
ANR	6121172	CastTarget	char *		6120807	0					
ANR	6121173	Identifier	NULL		6120807	1					
ANR	6121174	CompoundStatement		103:8:2277:2277	6120807	1					
ANR	6121175	ExpressionStatement	"printf ( ""Memory allocation failed"" )"	299:10:6154:6188	6120807	0	True				
ANR	6121176	CallExpression	"printf ( ""Memory allocation failed"" )"		6120807	0					
ANR	6121177	Callee	printf		6120807	0					
ANR	6121178	Identifier	printf		6120807	0					
ANR	6121179	ArgumentList	"""Memory allocation failed"""		6120807	1					
ANR	6121180	Argument	"""Memory allocation failed"""		6120807	0					
ANR	6121181	PrimaryExpression	"""Memory allocation failed"""		6120807	0					
ANR	6121182	ReturnStatement	return 0 ;	300:10:6200:6208	6120807	1	True				
ANR	6121183	PrimaryExpression	0		6120807	0					
ANR	6121184	ForStatement	for ( tagindx = 0 ; tagindx < taglen ; tagindx ++ )		6120807	13					
ANR	6121185	ForInit	tagindx = 0 ;	302:11:6231:6240	6120807	0	True				
ANR	6121186	AssignmentExpression	tagindx = 0		6120807	0		=			
ANR	6121187	Identifier	tagindx		6120807	0					
ANR	6121188	PrimaryExpression	0		6120807	1					
ANR	6121189	Condition	tagindx < taglen	302:22:6242:6255	6120807	1	True				
ANR	6121190	RelationalExpression	tagindx < taglen		6120807	0		<			
ANR	6121191	Identifier	tagindx		6120807	0					
ANR	6121192	Identifier	taglen		6120807	1					
ANR	6121193	PostIncDecOperationExpression	tagindx ++	302:38:6258:6266	6120807	2	True				
ANR	6121194	Identifier	tagindx		6120807	0					
ANR	6121195	IncDec	++		6120807	1					
ANR	6121196	CompoundStatement		108:8:2412:2412	6120807	3					
ANR	6121197	ExpressionStatement	c = getc ( ifile )	304:10:6289:6304	6120807	0	True				
ANR	6121198	AssignmentExpression	c = getc ( ifile )		6120807	0		=			
ANR	6121199	Identifier	c		6120807	0					
ANR	6121200	CallExpression	getc ( ifile )		6120807	1					
ANR	6121201	Callee	getc		6120807	0					
ANR	6121202	Identifier	getc		6120807	0					
ANR	6121203	ArgumentList	ifile		6120807	1					
ANR	6121204	Argument	ifile		6120807	0					
ANR	6121205	Identifier	ifile		6120807	0					
ANR	6121206	IfStatement	if ( c == EOF )		6120807	1					
ANR	6121207	Condition	c == EOF	305:14:6320:6327	6120807	0	True				
ANR	6121208	EqualityExpression	c == EOF		6120807	0		==			
ANR	6121209	Identifier	c		6120807	0					
ANR	6121210	Identifier	EOF		6120807	1					
ANR	6121211	CompoundStatement		111:12:2477:2477	6120807	1					
ANR	6121212	ExpressionStatement	free ( str )	307:14:6358:6367	6120807	0	True				
ANR	6121213	CallExpression	free ( str )		6120807	0					
ANR	6121214	Callee	free		6120807	0					
ANR	6121215	Identifier	free		6120807	0					
ANR	6121216	ArgumentList	str		6120807	1					
ANR	6121217	Argument	str		6120807	0					
ANR	6121218	Identifier	str		6120807	0					
ANR	6121219	ReturnStatement	return - 1 ;	308:14:6383:6392	6120807	1	True				
ANR	6121220	UnaryOperationExpression	- 1		6120807	0					
ANR	6121221	UnaryOperator	-		6120807	0					
ANR	6121222	PrimaryExpression	1		6120807	1					
ANR	6121223	ExpressionStatement	str [ tagindx ] = c	310:10:6418:6434	6120807	2	True				
ANR	6121224	AssignmentExpression	str [ tagindx ] = c		6120807	0		=			
ANR	6121225	ArrayIndexing	str [ tagindx ]		6120807	0					
ANR	6121226	Identifier	str		6120807	0					
ANR	6121227	Identifier	tagindx		6120807	1					
ANR	6121228	Identifier	c		6120807	1					
ANR	6121229	ExpressionStatement	str [ taglen ] = 0	312:6:6452:6469	6120807	14	True				
ANR	6121230	AssignmentExpression	str [ taglen ] = 0		6120807	0		=			
ANR	6121231	ArrayIndexing	str [ taglen ]		6120807	0					
ANR	6121232	Identifier	str		6120807	0					
ANR	6121233	Identifier	taglen		6120807	1					
ANR	6121234	PrimaryExpression	0		6120807	1					
ANR	6121235	IfStatement	if ( strlen ( readable ) > 0 )		6120807	15					
ANR	6121236	Condition	strlen ( readable ) > 0	315:10:6561:6580	6120807	0	True				
ANR	6121237	RelationalExpression	strlen ( readable ) > 0		6120807	0		>			
ANR	6121238	CallExpression	strlen ( readable )		6120807	0					
ANR	6121239	Callee	strlen		6120807	0					
ANR	6121240	Identifier	strlen		6120807	0					
ANR	6121241	ArgumentList	readable		6120807	1					
ANR	6121242	Argument	readable		6120807	0					
ANR	6121243	Identifier	readable		6120807	0					
ANR	6121244	PrimaryExpression	0		6120807	1					
ANR	6121245	ExpressionStatement	"fprintf ( ofile , ""%d#%d#%s="" , ( unsigned int ) dataset , ( unsigned int ) recnum , readable )"	316:8:6591:6673	6120807	1	True				
ANR	6121246	CallExpression	"fprintf ( ofile , ""%d#%d#%s="" , ( unsigned int ) dataset , ( unsigned int ) recnum , readable )"		6120807	0					
ANR	6121247	Callee	fprintf		6120807	0					
ANR	6121248	Identifier	fprintf		6120807	0					
ANR	6121249	ArgumentList	ofile		6120807	1					
ANR	6121250	Argument	ofile		6120807	0					
ANR	6121251	Identifier	ofile		6120807	0					
ANR	6121252	Argument	"""%d#%d#%s="""		6120807	1					
ANR	6121253	PrimaryExpression	"""%d#%d#%s="""		6120807	0					
ANR	6121254	Argument	( unsigned int ) dataset		6120807	2					
ANR	6121255	CastExpression	( unsigned int ) dataset		6120807	0					
ANR	6121256	CastTarget	unsigned int		6120807	0					
ANR	6121257	Identifier	dataset		6120807	1					
ANR	6121258	Argument	( unsigned int ) recnum		6120807	3					
ANR	6121259	CastExpression	( unsigned int ) recnum		6120807	0					
ANR	6121260	CastTarget	unsigned int		6120807	0					
ANR	6121261	Identifier	recnum		6120807	1					
ANR	6121262	Argument	readable		6120807	4					
ANR	6121263	Identifier	readable		6120807	0					
ANR	6121264	ElseStatement	else		6120807	0					
ANR	6121265	ExpressionStatement	"fprintf ( ofile , ""%d#%d="" , ( unsigned int ) dataset , ( unsigned int ) recnum )"	318:8:6694:6763	6120807	0	True				
ANR	6121266	CallExpression	"fprintf ( ofile , ""%d#%d="" , ( unsigned int ) dataset , ( unsigned int ) recnum )"		6120807	0					
ANR	6121267	Callee	fprintf		6120807	0					
ANR	6121268	Identifier	fprintf		6120807	0					
ANR	6121269	ArgumentList	ofile		6120807	1					
ANR	6121270	Argument	ofile		6120807	0					
ANR	6121271	Identifier	ofile		6120807	0					
ANR	6121272	Argument	"""%d#%d="""		6120807	1					
ANR	6121273	PrimaryExpression	"""%d#%d="""		6120807	0					
ANR	6121274	Argument	( unsigned int ) dataset		6120807	2					
ANR	6121275	CastExpression	( unsigned int ) dataset		6120807	0					
ANR	6121276	CastTarget	unsigned int		6120807	0					
ANR	6121277	Identifier	dataset		6120807	1					
ANR	6121278	Argument	( unsigned int ) recnum		6120807	3					
ANR	6121279	CastExpression	( unsigned int ) recnum		6120807	0					
ANR	6121280	CastTarget	unsigned int		6120807	0					
ANR	6121281	Identifier	recnum		6120807	1					
ANR	6121282	ExpressionStatement	"formatString ( ofile , str , taglen )"	319:6:6771:6805	6120807	16	True				
ANR	6121283	CallExpression	"formatString ( ofile , str , taglen )"		6120807	0					
ANR	6121284	Callee	formatString		6120807	0					
ANR	6121285	Identifier	formatString		6120807	0					
ANR	6121286	ArgumentList	ofile		6120807	1					
ANR	6121287	Argument	ofile		6120807	0					
ANR	6121288	Identifier	ofile		6120807	0					
ANR	6121289	Argument	str		6120807	1					
ANR	6121290	Identifier	str		6120807	0					
ANR	6121291	Argument	taglen		6120807	2					
ANR	6121292	Identifier	taglen		6120807	0					
ANR	6121293	ExpressionStatement	free ( str )	320:6:6813:6822	6120807	17	True				
ANR	6121294	CallExpression	free ( str )		6120807	0					
ANR	6121295	Callee	free		6120807	0					
ANR	6121296	Identifier	free		6120807	0					
ANR	6121297	ArgumentList	str		6120807	1					
ANR	6121298	Argument	str		6120807	0					
ANR	6121299	Identifier	str		6120807	0					
ANR	6121300	ExpressionStatement	tagsfound ++	322:6:6831:6842	6120807	18	True				
ANR	6121301	PostIncDecOperationExpression	tagsfound ++		6120807	0					
ANR	6121302	Identifier	tagsfound		6120807	0					
ANR	6121303	IncDec	++		6120807	1					
ANR	6121304	ExpressionStatement	c = getc ( ifile )	324:6:6851:6866	6120807	19	True				
ANR	6121305	AssignmentExpression	c = getc ( ifile )		6120807	0		=			
ANR	6121306	Identifier	c		6120807	0					
ANR	6121307	CallExpression	getc ( ifile )		6120807	1					
ANR	6121308	Callee	getc		6120807	0					
ANR	6121309	Identifier	getc		6120807	0					
ANR	6121310	ArgumentList	ifile		6120807	1					
ANR	6121311	Argument	ifile		6120807	0					
ANR	6121312	Identifier	ifile		6120807	0					
ANR	6121313	ReturnStatement	return tagsfound ;	326:2:6876:6892	6120807	9	True				
ANR	6121314	Identifier	tagsfound		6120807	0					
ANR	6121315	ReturnType	int		6120807	1					
ANR	6121316	Identifier	formatIPTC		6120807	2					
ANR	6121317	ParameterList	"FILE * ifile , FILE * ofile"		6120807	3					
ANR	6121318	Parameter	FILE * ifile	195:15:3838:3848	6120807	0	True				
ANR	6121319	ParameterType	FILE *		6120807	0					
ANR	6121320	Identifier	ifile		6120807	1					
ANR	6121321	Parameter	FILE * ofile	195:28:3851:3861	6120807	1	True				
ANR	6121322	ParameterType	FILE *		6120807	0					
ANR	6121323	Identifier	ofile		6120807	1					
ANR	6121324	CFGEntryNode	ENTRY		6120807		True				
ANR	6121325	CFGExitNode	EXIT		6120807		True				
ANR	6121326	Symbol	taglen		6120807						
ANR	6121327	Symbol	* taglen		6120807						
ANR	6121328	Symbol	* tagindx		6120807						
ANR	6121329	Symbol	tagsfound		6120807						
ANR	6121330	Symbol	strlen		6120807						
ANR	6121331	Symbol	ifile		6120807						
ANR	6121332	Symbol	tagcount		6120807						
ANR	6121333	Symbol	buffer		6120807						
ANR	6121334	Symbol	* str		6120807						
ANR	6121335	Symbol	EOF		6120807						
ANR	6121336	Symbol	foundiptc		6120807						
ANR	6121337	Symbol	readable		6120807						
ANR	6121338	Symbol	malloc		6120807						
ANR	6121339	Symbol	* buffer		6120807						
ANR	6121340	Symbol	c		6120807						
ANR	6121341	Symbol	NULL		6120807						
ANR	6121342	Symbol	tagindx		6120807						
ANR	6121343	Symbol	ofile		6120807						
ANR	6121344	Symbol	i		6120807						
ANR	6121345	Symbol	* tags		6120807						
ANR	6121346	Symbol	tags		6120807						
ANR	6121347	Symbol	str		6120807						
ANR	6121348	Symbol	recnum		6120807						
ANR	6121349	Symbol	* i		6120807						
ANR	6121350	Symbol	tags [ i ] . id		6120807						
ANR	6121351	Symbol	tags [ i ] . name		6120807						
ANR	6121352	Symbol	x		6120807						
ANR	6121353	Symbol	dataset		6120807						
ANR	6121354	Symbol	getc		6120807						
ANR	6121355	DeclStmt									
ANR	6121356	Decl							int	"int ( unsigned inflag , char * token , int tokmax , char * line , char * white , char * brkchar , char * quote , char eschar , char * brkused , int * next , char * quoted )"	tokenizer
ANR	6121357	Function	super_fgets	333:0:7053:7807							
ANR	6121358	FunctionDef	"super_fgets (char * b , int * blen , FILE * file)"		6121357	0					
ANR	6121359	CompoundStatement		334:0:7103:7807	6121357	0					
ANR	6121360	IdentifierDeclStatement	"int c , len ;"	335:2:7107:7125	6121357	0	True				
ANR	6121361	IdentifierDecl	c		6121357	0					
ANR	6121362	IdentifierDeclType	int		6121357	0					
ANR	6121363	Identifier	c		6121357	1					
ANR	6121364	IdentifierDecl	len		6121357	1					
ANR	6121365	IdentifierDeclType	int		6121357	0					
ANR	6121366	Identifier	len		6121357	1					
ANR	6121367	IdentifierDeclStatement	char * q ;	339:2:7130:7141	6121357	1	True				
ANR	6121368	IdentifierDecl	* q		6121357	0					
ANR	6121369	IdentifierDeclType	char *		6121357	0					
ANR	6121370	Identifier	q		6121357	1					
ANR	6121371	ExpressionStatement	len = * blen	342:2:7146:7155	6121357	2	True				
ANR	6121372	AssignmentExpression	len = * blen		6121357	0		=			
ANR	6121373	Identifier	len		6121357	0					
ANR	6121374	UnaryOperationExpression	* blen		6121357	1					
ANR	6121375	UnaryOperator	*		6121357	0					
ANR	6121376	Identifier	blen		6121357	1					
ANR	6121377	ForStatement	for ( q = b ; ; q ++ )		6121357	3					
ANR	6121378	ForInit	q = b ;	343:7:7164:7167	6121357	0	True				
ANR	6121379	AssignmentExpression	q = b		6121357	0		=			
ANR	6121380	Identifier	q		6121357	0					
ANR	6121381	Identifier	b		6121357	1					
ANR	6121382	PostIncDecOperationExpression	q ++	343:14:7171:7173	6121357	1	True				
ANR	6121383	Identifier	q		6121357	0					
ANR	6121384	IncDec	++		6121357	1					
ANR	6121385	CompoundStatement		11:4:76:76	6121357	2					
ANR	6121386	ExpressionStatement	c = fgetc ( file )	345:6:7188:7201	6121357	0	True				
ANR	6121387	AssignmentExpression	c = fgetc ( file )		6121357	0		=			
ANR	6121388	Identifier	c		6121357	0					
ANR	6121389	CallExpression	fgetc ( file )		6121357	1					
ANR	6121390	Callee	fgetc		6121357	0					
ANR	6121391	Identifier	fgetc		6121357	0					
ANR	6121392	ArgumentList	file		6121357	1					
ANR	6121393	Argument	file		6121357	0					
ANR	6121394	Identifier	file		6121357	0					
ANR	6121395	IfStatement	if ( c == EOF || c == '\\n' )		6121357	1					
ANR	6121396	Condition	c == EOF || c == '\\n'	346:10:7213:7233	6121357	0	True				
ANR	6121397	OrExpression	c == EOF || c == '\\n'		6121357	0		||			
ANR	6121398	EqualityExpression	c == EOF		6121357	0		==			
ANR	6121399	Identifier	c		6121357	0					
ANR	6121400	Identifier	EOF		6121357	1					
ANR	6121401	EqualityExpression	c == '\\n'		6121357	1		==			
ANR	6121402	Identifier	c		6121357	0					
ANR	6121403	PrimaryExpression	'\\n'		6121357	1					
ANR	6121404	BreakStatement	break ;	347:8:7244:7249	6121357	1	True				
ANR	6121405	IfStatement	if ( ( ( long ) q - ( long ) b + 1 ) >= ( long ) len )		6121357	2					
ANR	6121406	Condition	( ( long ) q - ( long ) b + 1 ) >= ( long ) len	348:10:7261:7298	6121357	0	True				
ANR	6121407	RelationalExpression	( ( long ) q - ( long ) b + 1 ) >= ( long ) len		6121357	0		>=			
ANR	6121408	AdditiveExpression	( long ) q - ( long ) b + 1		6121357	0		-			
ANR	6121409	CastExpression	( long ) q		6121357	0					
ANR	6121410	CastTarget	long		6121357	0					
ANR	6121411	Identifier	q		6121357	1					
ANR	6121412	AdditiveExpression	( long ) b + 1		6121357	1		+			
ANR	6121413	CastExpression	( long ) b		6121357	0					
ANR	6121414	CastTarget	long		6121357	0					
ANR	6121415	Identifier	b		6121357	1					
ANR	6121416	PrimaryExpression	1		6121357	1					
ANR	6121417	CastExpression	( long ) len		6121357	1					
ANR	6121418	CastTarget	long		6121357	0					
ANR	6121419	Identifier	len		6121357	1					
ANR	6121420	CompoundStatement		17:10:217:238	6121357	1					
ANR	6121421	IdentifierDeclStatement	long tlen ;	350:10:7321:7342	6121357	0	True				
ANR	6121422	IdentifierDecl	tlen		6121357	0					
ANR	6121423	IdentifierDeclType	long		6121357	0					
ANR	6121424	Identifier	tlen		6121357	1					
ANR	6121425	ExpressionStatement	tlen = ( long ) q - ( long ) b	353:10:7355:7375	6121357	1	True				
ANR	6121426	AssignmentExpression	tlen = ( long ) q - ( long ) b		6121357	0		=			
ANR	6121427	Identifier	tlen		6121357	0					
ANR	6121428	AdditiveExpression	( long ) q - ( long ) b		6121357	1		-			
ANR	6121429	CastExpression	( long ) q		6121357	0					
ANR	6121430	CastTarget	long		6121357	0					
ANR	6121431	Identifier	q		6121357	1					
ANR	6121432	CastExpression	( long ) b		6121357	1					
ANR	6121433	CastTarget	long		6121357	0					
ANR	6121434	Identifier	b		6121357	1					
ANR	6121435	ExpressionStatement	len <<= 1	354:10:7387:7394	6121357	2	True				
ANR	6121436	AssignmentExpression	len <<= 1		6121357	0		<<=			
ANR	6121437	Identifier	len		6121357	0					
ANR	6121438	PrimaryExpression	1		6121357	1					
ANR	6121439	ExpressionStatement	"b = ( char * ) realloc ( ( char * ) b , ( len + 2 ) )"	355:10:7406:7444	6121357	3	True				
ANR	6121440	AssignmentExpression	"b = ( char * ) realloc ( ( char * ) b , ( len + 2 ) )"		6121357	0		=			
ANR	6121441	Identifier	b		6121357	0					
ANR	6121442	CastExpression	"( char * ) realloc ( ( char * ) b , ( len + 2 ) )"		6121357	1					
ANR	6121443	CastTarget	char *		6121357	0					
ANR	6121444	CallExpression	"realloc ( ( char * ) b , ( len + 2 ) )"		6121357	1					
ANR	6121445	Callee	realloc		6121357	0					
ANR	6121446	Identifier	realloc		6121357	0					
ANR	6121447	ArgumentList	( char * ) b		6121357	1					
ANR	6121448	Argument	( char * ) b		6121357	0					
ANR	6121449	CastExpression	( char * ) b		6121357	0					
ANR	6121450	CastTarget	char *		6121357	0					
ANR	6121451	Identifier	b		6121357	1					
ANR	6121452	Argument	len + 2		6121357	1					
ANR	6121453	AdditiveExpression	len + 2		6121357	0		+			
ANR	6121454	Identifier	len		6121357	0					
ANR	6121455	PrimaryExpression	2		6121357	1					
ANR	6121456	IfStatement	if ( ( char * ) b == ( char * ) NULL )		6121357	4					
ANR	6121457	Condition	( char * ) b == ( char * ) NULL	356:14:7460:7486	6121357	0	True				
ANR	6121458	EqualityExpression	( char * ) b == ( char * ) NULL		6121357	0		==			
ANR	6121459	CastExpression	( char * ) b		6121357	0					
ANR	6121460	CastTarget	char *		6121357	0					
ANR	6121461	Identifier	b		6121357	1					
ANR	6121462	CastExpression	( char * ) NULL		6121357	1					
ANR	6121463	CastTarget	char *		6121357	0					
ANR	6121464	Identifier	NULL		6121357	1					
ANR	6121465	BreakStatement	break ;	357:12:7501:7506	6121357	1	True				
ANR	6121466	ExpressionStatement	q = b + tlen	358:10:7518:7526	6121357	5	True				
ANR	6121467	AssignmentExpression	q = b + tlen		6121357	0		=			
ANR	6121468	Identifier	q		6121357	0					
ANR	6121469	AdditiveExpression	b + tlen		6121357	1		+			
ANR	6121470	Identifier	b		6121357	0					
ANR	6121471	Identifier	tlen		6121357	1					
ANR	6121472	ExpressionStatement	* q = ( unsigned char ) c	360:6:7544:7564	6121357	3	True				
ANR	6121473	AssignmentExpression	* q = ( unsigned char ) c		6121357	0		=			
ANR	6121474	UnaryOperationExpression	* q		6121357	0					
ANR	6121475	UnaryOperator	*		6121357	0					
ANR	6121476	Identifier	q		6121357	1					
ANR	6121477	CastExpression	( unsigned char ) c		6121357	1					
ANR	6121478	CastTarget	unsigned char		6121357	0					
ANR	6121479	Identifier	c		6121357	1					
ANR	6121480	ExpressionStatement	* blen = 0	362:2:7574:7581	6121357	4	True				
ANR	6121481	AssignmentExpression	* blen = 0		6121357	0		=			
ANR	6121482	UnaryOperationExpression	* blen		6121357	0					
ANR	6121483	UnaryOperator	*		6121357	0					
ANR	6121484	Identifier	blen		6121357	1					
ANR	6121485	PrimaryExpression	0		6121357	1					
ANR	6121486	IfStatement	if ( ( unsigned char * ) b != ( unsigned char * ) NULL )		6121357	5					
ANR	6121487	Condition	( unsigned char * ) b != ( unsigned char * ) NULL	363:6:7589:7632	6121357	0	True				
ANR	6121488	EqualityExpression	( unsigned char * ) b != ( unsigned char * ) NULL		6121357	0		!=			
ANR	6121489	CastExpression	( unsigned char * ) b		6121357	0					
ANR	6121490	CastTarget	unsigned char *		6121357	0					
ANR	6121491	Identifier	b		6121357	1					
ANR	6121492	CastExpression	( unsigned char * ) NULL		6121357	1					
ANR	6121493	CastTarget	unsigned char *		6121357	0					
ANR	6121494	Identifier	NULL		6121357	1					
ANR	6121495	CompoundStatement		32:6:543:559	6121357	1					
ANR	6121496	IdentifierDeclStatement	int tlen ;	365:6:7647:7663	6121357	0	True				
ANR	6121497	IdentifierDecl	tlen		6121357	0					
ANR	6121498	IdentifierDeclType	int		6121357	0					
ANR	6121499	Identifier	tlen		6121357	1					
ANR	6121500	ExpressionStatement	tlen = ( long ) q - ( long ) b	368:6:7672:7694	6121357	1	True				
ANR	6121501	AssignmentExpression	tlen = ( long ) q - ( long ) b		6121357	0		=			
ANR	6121502	Identifier	tlen		6121357	0					
ANR	6121503	AdditiveExpression	( long ) q - ( long ) b		6121357	1		-			
ANR	6121504	CastExpression	( long ) q		6121357	0					
ANR	6121505	CastTarget	long		6121357	0					
ANR	6121506	Identifier	q		6121357	1					
ANR	6121507	CastExpression	( long ) b		6121357	1					
ANR	6121508	CastTarget	long		6121357	0					
ANR	6121509	Identifier	b		6121357	1					
ANR	6121510	IfStatement	if ( tlen == 0 )		6121357	2					
ANR	6121511	Condition	tlen == 0	369:10:7706:7714	6121357	0	True				
ANR	6121512	EqualityExpression	tlen == 0		6121357	0		==			
ANR	6121513	Identifier	tlen		6121357	0					
ANR	6121514	PrimaryExpression	0		6121357	1					
ANR	6121515	ReturnStatement	return ( char * ) NULL ;	370:8:7725:7745	6121357	1	True				
ANR	6121516	CastExpression	( char * ) NULL		6121357	0					
ANR	6121517	CastTarget	char *		6121357	0					
ANR	6121518	Identifier	NULL		6121357	1					
ANR	6121519	ExpressionStatement	b [ tlen ] = '\\0'	371:6:7753:7767	6121357	3	True				
ANR	6121520	AssignmentExpression	b [ tlen ] = '\\0'		6121357	0		=			
ANR	6121521	ArrayIndexing	b [ tlen ]		6121357	0					
ANR	6121522	Identifier	b		6121357	0					
ANR	6121523	Identifier	tlen		6121357	1					
ANR	6121524	PrimaryExpression	'\\0'		6121357	1					
ANR	6121525	ExpressionStatement	* blen = ++ tlen	372:6:7775:7787	6121357	4	True				
ANR	6121526	AssignmentExpression	* blen = ++ tlen		6121357	0		=			
ANR	6121527	UnaryOperationExpression	* blen		6121357	0					
ANR	6121528	UnaryOperator	*		6121357	0					
ANR	6121529	Identifier	blen		6121357	1					
ANR	6121530	UnaryExpression	++ tlen		6121357	1					
ANR	6121531	IncDec	++		6121357	0					
ANR	6121532	Identifier	tlen		6121357	1					
ANR	6121533	ReturnStatement	return b ;	374:2:7797:7805	6121357	6	True				
ANR	6121534	Identifier	b		6121357	0					
ANR	6121535	ReturnType	char *		6121357	1					
ANR	6121536	Identifier	super_fgets		6121357	2					
ANR	6121537	ParameterList	"char * b , int * blen , FILE * file"		6121357	3					
ANR	6121538	Parameter	char * b	333:18:7071:7077	6121357	0	True				
ANR	6121539	ParameterType	char *		6121357	0					
ANR	6121540	Identifier	b		6121357	1					
ANR	6121541	Parameter	int * blen	333:27:7080:7088	6121357	1	True				
ANR	6121542	ParameterType	int *		6121357	0					
ANR	6121543	Identifier	blen		6121357	1					
ANR	6121544	Parameter	FILE * file	333:38:7091:7100	6121357	2	True				
ANR	6121545	ParameterType	FILE *		6121357	0					
ANR	6121546	Identifier	file		6121357	1					
ANR	6121547	CFGEntryNode	ENTRY		6121357		True				
ANR	6121548	CFGExitNode	EXIT		6121357		True				
ANR	6121549	InfiniteForNode	true		6121357		True				
ANR	6121550	Symbol	b		6121357						
ANR	6121551	Symbol	c		6121357						
ANR	6121552	Symbol	NULL		6121357						
ANR	6121553	Symbol	realloc		6121357						
ANR	6121554	Symbol	* b		6121357						
ANR	6121555	Symbol	q		6121357						
ANR	6121556	Symbol	file		6121357						
ANR	6121557	Symbol	* tlen		6121357						
ANR	6121558	Symbol	len		6121357						
ANR	6121559	Symbol	* blen		6121357						
ANR	6121560	Symbol	tlen		6121357						
ANR	6121561	Symbol	* q		6121357						
ANR	6121562	Symbol	blen		6121357						
ANR	6121563	Symbol	EOF		6121357						
ANR	6121564	Symbol	fgetc		6121357						
ANR	6121565	Function	main	379:0:7834:13061							
ANR	6121566	FunctionDef	"main (int argc , char * argv [ ])"		6121565	0					
ANR	6121567	CompoundStatement		380:0:7867:13061	6121565	0					
ANR	6121568	IdentifierDeclStatement	"int i , mode ;"	387:2:7956:7975	6121565	0	True				
ANR	6121569	IdentifierDecl	i		6121565	0					
ANR	6121570	IdentifierDeclType	int		6121565	0					
ANR	6121571	Identifier	i		6121565	1					
ANR	6121572	IdentifierDecl	mode		6121565	1					
ANR	6121573	IdentifierDeclType	int		6121565	0					
ANR	6121574	Identifier	mode		6121565	1					
ANR	6121575	IdentifierDeclStatement	"FILE * ifile = stdin , * ofile = stdout ;"	391:2:8012:8056	6121565	1	True				
ANR	6121576	IdentifierDecl	* ifile = stdin		6121565	0					
ANR	6121577	IdentifierDeclType	FILE *		6121565	0					
ANR	6121578	Identifier	ifile		6121565	1					
ANR	6121579	AssignmentExpression	* ifile = stdin		6121565	2		=			
ANR	6121580	Identifier	stdin		6121565	0					
ANR	6121581	Identifier	stdin		6121565	1					
ANR	6121582	IdentifierDecl	* ofile = stdout		6121565	1					
ANR	6121583	IdentifierDeclType	FILE *		6121565	0					
ANR	6121584	Identifier	ofile		6121565	1					
ANR	6121585	AssignmentExpression	* ofile = stdout		6121565	2		=			
ANR	6121586	Identifier	stdout		6121565	0					
ANR	6121587	Identifier	stdout		6121565	1					
ANR	6121588	IdentifierDeclStatement	"char c , * usage = ""usage: iptcutil -t | -b [-i file] [-o file] <input >output"" ;"	395:2:8061:8146	6121565	2	True				
ANR	6121589	IdentifierDecl	c		6121565	0					
ANR	6121590	IdentifierDeclType	char		6121565	0					
ANR	6121591	Identifier	c		6121565	1					
ANR	6121592	IdentifierDecl	"* usage = ""usage: iptcutil -t | -b [-i file] [-o file] <input >output"""		6121565	1					
ANR	6121593	IdentifierDeclType	char *		6121565	0					
ANR	6121594	Identifier	usage		6121565	1					
ANR	6121595	AssignmentExpression	"* usage = ""usage: iptcutil -t | -b [-i file] [-o file] <input >output"""		6121565	2		=			
ANR	6121596	Identifier	usage		6121565	0					
ANR	6121597	PrimaryExpression	"""usage: iptcutil -t | -b [-i file] [-o file] <input >output"""		6121565	1					
ANR	6121598	IfStatement	if ( argc < 2 )		6121565	3					
ANR	6121599	Condition	argc < 2	399:6:8155:8162	6121565	0	True				
ANR	6121600	RelationalExpression	argc < 2		6121565	0		<			
ANR	6121601	Identifier	argc		6121565	0					
ANR	6121602	PrimaryExpression	2		6121565	1					
ANR	6121603	CompoundStatement		21:4:302:302	6121565	1					
ANR	6121604	ExpressionStatement	puts ( usage )	401:6:8178:8189	6121565	0	True				
ANR	6121605	CallExpression	puts ( usage )		6121565	0					
ANR	6121606	Callee	puts		6121565	0					
ANR	6121607	Identifier	puts		6121565	0					
ANR	6121608	ArgumentList	usage		6121565	1					
ANR	6121609	Argument	usage		6121565	0					
ANR	6121610	Identifier	usage		6121565	0					
ANR	6121611	ReturnStatement	return 1 ;	402:6:8197:8205	6121565	1	True				
ANR	6121612	PrimaryExpression	1		6121565	0					
ANR	6121613	ExpressionStatement	mode = 0	405:2:8216:8224	6121565	4	True				
ANR	6121614	AssignmentExpression	mode = 0		6121565	0		=			
ANR	6121615	Identifier	mode		6121565	0					
ANR	6121616	PrimaryExpression	0		6121565	1					
ANR	6121617	ForStatement	for ( i = 1 ; i < argc ; i ++ )		6121565	5					
ANR	6121618	ForInit	i = 1 ;	409:7:8295:8298	6121565	0	True				
ANR	6121619	AssignmentExpression	i = 1		6121565	0		=			
ANR	6121620	Identifier	i		6121565	0					
ANR	6121621	PrimaryExpression	1		6121565	1					
ANR	6121622	Condition	i < argc	409:12:8300:8305	6121565	1	True				
ANR	6121623	RelationalExpression	i < argc		6121565	0		<			
ANR	6121624	Identifier	i		6121565	0					
ANR	6121625	Identifier	argc		6121565	1					
ANR	6121626	PostIncDecOperationExpression	i ++	409:20:8308:8310	6121565	2	True				
ANR	6121627	Identifier	i		6121565	0					
ANR	6121628	IncDec	++		6121565	1					
ANR	6121629	CompoundStatement		31:4:449:449	6121565	3					
ANR	6121630	ExpressionStatement	c = argv [ i ] [ 0 ]	411:6:8325:8339	6121565	0	True				
ANR	6121631	AssignmentExpression	c = argv [ i ] [ 0 ]		6121565	0		=			
ANR	6121632	Identifier	c		6121565	0					
ANR	6121633	ArrayIndexing	argv [ i ] [ 0 ]		6121565	1					
ANR	6121634	ArrayIndexing	argv [ i ]		6121565	0					
ANR	6121635	Identifier	argv		6121565	0					
ANR	6121636	Identifier	i		6121565	1					
ANR	6121637	PrimaryExpression	0		6121565	1					
ANR	6121638	IfStatement	if ( c == '-' || c == '/' )		6121565	1					
ANR	6121639	Condition	c == '-' || c == '/'	412:10:8351:8370	6121565	0	True				
ANR	6121640	OrExpression	c == '-' || c == '/'		6121565	0		||			
ANR	6121641	EqualityExpression	c == '-'		6121565	0		==			
ANR	6121642	Identifier	c		6121565	0					
ANR	6121643	PrimaryExpression	'-'		6121565	1					
ANR	6121644	EqualityExpression	c == '/'		6121565	1		==			
ANR	6121645	Identifier	c		6121565	0					
ANR	6121646	PrimaryExpression	'/'		6121565	1					
ANR	6121647	CompoundStatement		34:8:513:513	6121565	1					
ANR	6121648	ExpressionStatement	c = argv [ i ] [ 1 ]	414:10:8393:8407	6121565	0	True				
ANR	6121649	AssignmentExpression	c = argv [ i ] [ 1 ]		6121565	0		=			
ANR	6121650	Identifier	c		6121565	0					
ANR	6121651	ArrayIndexing	argv [ i ] [ 1 ]		6121565	1					
ANR	6121652	ArrayIndexing	argv [ i ]		6121565	0					
ANR	6121653	Identifier	argv		6121565	0					
ANR	6121654	Identifier	i		6121565	1					
ANR	6121655	PrimaryExpression	1		6121565	1					
ANR	6121656	SwitchStatement	switch ( c )		6121565	1					
ANR	6121657	Condition	c	415:18:8427:8427	6121565	0	True				
ANR	6121658	Identifier	c		6121565	0					
ANR	6121659	CompoundStatement		37:12:575:575	6121565	1					
ANR	6121660	Label	case 't' :	417:12:8457:8465	6121565	0	True				
ANR	6121661	ExpressionStatement	mode = 1	418:14:8481:8489	6121565	1	True				
ANR	6121662	AssignmentExpression	mode = 1		6121565	0		=			
ANR	6121663	Identifier	mode		6121565	0					
ANR	6121664	PrimaryExpression	1		6121565	1					
ANR	6121665	ExpressionStatement	"_setmode ( _fileno ( ofile ) , _O_BINARY )"	421:14:8567:8606	6121565	2	True				
ANR	6121666	CallExpression	"_setmode ( _fileno ( ofile ) , _O_BINARY )"		6121565	0					
ANR	6121667	Callee	_setmode		6121565	0					
ANR	6121668	Identifier	_setmode		6121565	0					
ANR	6121669	ArgumentList	_fileno ( ofile )		6121565	1					
ANR	6121670	Argument	_fileno ( ofile )		6121565	0					
ANR	6121671	CallExpression	_fileno ( ofile )		6121565	0					
ANR	6121672	Callee	_fileno		6121565	0					
ANR	6121673	Identifier	_fileno		6121565	0					
ANR	6121674	ArgumentList	ofile		6121565	1					
ANR	6121675	Argument	ofile		6121565	0					
ANR	6121676	Identifier	ofile		6121565	0					
ANR	6121677	Argument	_O_BINARY		6121565	1					
ANR	6121678	Identifier	_O_BINARY		6121565	0					
ANR	6121679	BreakStatement	break ;	423:14:8629:8634	6121565	3	True				
ANR	6121680	Label	case 'b' :	424:12:8648:8656	6121565	4	True				
ANR	6121681	ExpressionStatement	mode = 0	425:14:8672:8680	6121565	5	True				
ANR	6121682	AssignmentExpression	mode = 0		6121565	0		=			
ANR	6121683	Identifier	mode		6121565	0					
ANR	6121684	PrimaryExpression	0		6121565	1					
ANR	6121685	ExpressionStatement	"_setmode ( _fileno ( ifile ) , _O_BINARY )"	428:14:8757:8796	6121565	6	True				
ANR	6121686	CallExpression	"_setmode ( _fileno ( ifile ) , _O_BINARY )"		6121565	0					
ANR	6121687	Callee	_setmode		6121565	0					
ANR	6121688	Identifier	_setmode		6121565	0					
ANR	6121689	ArgumentList	_fileno ( ifile )		6121565	1					
ANR	6121690	Argument	_fileno ( ifile )		6121565	0					
ANR	6121691	CallExpression	_fileno ( ifile )		6121565	0					
ANR	6121692	Callee	_fileno		6121565	0					
ANR	6121693	Identifier	_fileno		6121565	0					
ANR	6121694	ArgumentList	ifile		6121565	1					
ANR	6121695	Argument	ifile		6121565	0					
ANR	6121696	Identifier	ifile		6121565	0					
ANR	6121697	Argument	_O_BINARY		6121565	1					
ANR	6121698	Identifier	_O_BINARY		6121565	0					
ANR	6121699	BreakStatement	break ;	430:14:8819:8824	6121565	7	True				
ANR	6121700	Label	case 'i' :	431:12:8838:8846	6121565	8	True				
ANR	6121701	IfStatement	if ( mode == 0 )		6121565	9					
ANR	6121702	Condition	mode == 0	432:18:8866:8874	6121565	0	True				
ANR	6121703	EqualityExpression	mode == 0		6121565	0		==			
ANR	6121704	Identifier	mode		6121565	0					
ANR	6121705	PrimaryExpression	0		6121565	1					
ANR	6121706	ExpressionStatement	"ifile = fopen ( argv [ ++ i ] , ""rb"" )"	433:16:8893:8923	6121565	1	True				
ANR	6121707	AssignmentExpression	"ifile = fopen ( argv [ ++ i ] , ""rb"" )"		6121565	0		=			
ANR	6121708	Identifier	ifile		6121565	0					
ANR	6121709	CallExpression	"fopen ( argv [ ++ i ] , ""rb"" )"		6121565	1					
ANR	6121710	Callee	fopen		6121565	0					
ANR	6121711	Identifier	fopen		6121565	0					
ANR	6121712	ArgumentList	argv [ ++ i ]		6121565	1					
ANR	6121713	Argument	argv [ ++ i ]		6121565	0					
ANR	6121714	ArrayIndexing	argv [ ++ i ]		6121565	0					
ANR	6121715	Identifier	argv		6121565	0					
ANR	6121716	UnaryExpression	++ i		6121565	1					
ANR	6121717	IncDec	++		6121565	0					
ANR	6121718	Identifier	i		6121565	1					
ANR	6121719	Argument	"""rb"""		6121565	1					
ANR	6121720	PrimaryExpression	"""rb"""		6121565	0					
ANR	6121721	ElseStatement	else		6121565	0					
ANR	6121722	ExpressionStatement	"ifile = fopen ( argv [ ++ i ] , ""rt"" )"	435:16:8960:8990	6121565	0	True				
ANR	6121723	AssignmentExpression	"ifile = fopen ( argv [ ++ i ] , ""rt"" )"		6121565	0		=			
ANR	6121724	Identifier	ifile		6121565	0					
ANR	6121725	CallExpression	"fopen ( argv [ ++ i ] , ""rt"" )"		6121565	1					
ANR	6121726	Callee	fopen		6121565	0					
ANR	6121727	Identifier	fopen		6121565	0					
ANR	6121728	ArgumentList	argv [ ++ i ]		6121565	1					
ANR	6121729	Argument	argv [ ++ i ]		6121565	0					
ANR	6121730	ArrayIndexing	argv [ ++ i ]		6121565	0					
ANR	6121731	Identifier	argv		6121565	0					
ANR	6121732	UnaryExpression	++ i		6121565	1					
ANR	6121733	IncDec	++		6121565	0					
ANR	6121734	Identifier	i		6121565	1					
ANR	6121735	Argument	"""rt"""		6121565	1					
ANR	6121736	PrimaryExpression	"""rt"""		6121565	0					
ANR	6121737	IfStatement	if ( ifile == ( FILE * ) NULL )		6121565	10					
ANR	6121738	Condition	ifile == ( FILE * ) NULL	436:18:9010:9030	6121565	0	True				
ANR	6121739	EqualityExpression	ifile == ( FILE * ) NULL		6121565	0		==			
ANR	6121740	Identifier	ifile		6121565	0					
ANR	6121741	CastExpression	( FILE * ) NULL		6121565	1					
ANR	6121742	CastTarget	FILE *		6121565	0					
ANR	6121743	Identifier	NULL		6121565	1					
ANR	6121744	CompoundStatement		58:16:1181:1181	6121565	1					
ANR	6121745	ExpressionStatement	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"	438:18:9069:9108	6121565	0	True				
ANR	6121746	CallExpression	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"		6121565	0					
ANR	6121747	Callee	printf		6121565	0					
ANR	6121748	Identifier	printf		6121565	0					
ANR	6121749	ArgumentList	"""Unable to open: %s\\n"""		6121565	1					
ANR	6121750	Argument	"""Unable to open: %s\\n"""		6121565	0					
ANR	6121751	PrimaryExpression	"""Unable to open: %s\\n"""		6121565	0					
ANR	6121752	Argument	argv [ i ]		6121565	1					
ANR	6121753	ArrayIndexing	argv [ i ]		6121565	0					
ANR	6121754	Identifier	argv		6121565	0					
ANR	6121755	Identifier	i		6121565	1					
ANR	6121756	ReturnStatement	return 1 ;	439:18:9128:9136	6121565	1	True				
ANR	6121757	PrimaryExpression	1		6121565	0					
ANR	6121758	BreakStatement	break ;	441:14:9170:9175	6121565	11	True				
ANR	6121759	Label	case 'o' :	442:12:9189:9197	6121565	12	True				
ANR	6121760	IfStatement	if ( mode == 0 )		6121565	13					
ANR	6121761	Condition	mode == 0	443:18:9217:9225	6121565	0	True				
ANR	6121762	EqualityExpression	mode == 0		6121565	0		==			
ANR	6121763	Identifier	mode		6121565	0					
ANR	6121764	PrimaryExpression	0		6121565	1					
ANR	6121765	ExpressionStatement	"ofile = fopen ( argv [ ++ i ] , ""wt"" )"	444:16:9244:9274	6121565	1	True				
ANR	6121766	AssignmentExpression	"ofile = fopen ( argv [ ++ i ] , ""wt"" )"		6121565	0		=			
ANR	6121767	Identifier	ofile		6121565	0					
ANR	6121768	CallExpression	"fopen ( argv [ ++ i ] , ""wt"" )"		6121565	1					
ANR	6121769	Callee	fopen		6121565	0					
ANR	6121770	Identifier	fopen		6121565	0					
ANR	6121771	ArgumentList	argv [ ++ i ]		6121565	1					
ANR	6121772	Argument	argv [ ++ i ]		6121565	0					
ANR	6121773	ArrayIndexing	argv [ ++ i ]		6121565	0					
ANR	6121774	Identifier	argv		6121565	0					
ANR	6121775	UnaryExpression	++ i		6121565	1					
ANR	6121776	IncDec	++		6121565	0					
ANR	6121777	Identifier	i		6121565	1					
ANR	6121778	Argument	"""wt"""		6121565	1					
ANR	6121779	PrimaryExpression	"""wt"""		6121565	0					
ANR	6121780	ElseStatement	else		6121565	0					
ANR	6121781	ExpressionStatement	"ofile = fopen ( argv [ ++ i ] , ""wb"" )"	446:16:9311:9341	6121565	0	True				
ANR	6121782	AssignmentExpression	"ofile = fopen ( argv [ ++ i ] , ""wb"" )"		6121565	0		=			
ANR	6121783	Identifier	ofile		6121565	0					
ANR	6121784	CallExpression	"fopen ( argv [ ++ i ] , ""wb"" )"		6121565	1					
ANR	6121785	Callee	fopen		6121565	0					
ANR	6121786	Identifier	fopen		6121565	0					
ANR	6121787	ArgumentList	argv [ ++ i ]		6121565	1					
ANR	6121788	Argument	argv [ ++ i ]		6121565	0					
ANR	6121789	ArrayIndexing	argv [ ++ i ]		6121565	0					
ANR	6121790	Identifier	argv		6121565	0					
ANR	6121791	UnaryExpression	++ i		6121565	1					
ANR	6121792	IncDec	++		6121565	0					
ANR	6121793	Identifier	i		6121565	1					
ANR	6121794	Argument	"""wb"""		6121565	1					
ANR	6121795	PrimaryExpression	"""wb"""		6121565	0					
ANR	6121796	IfStatement	if ( ofile == ( FILE * ) NULL )		6121565	14					
ANR	6121797	Condition	ofile == ( FILE * ) NULL	447:18:9361:9381	6121565	0	True				
ANR	6121798	EqualityExpression	ofile == ( FILE * ) NULL		6121565	0		==			
ANR	6121799	Identifier	ofile		6121565	0					
ANR	6121800	CastExpression	( FILE * ) NULL		6121565	1					
ANR	6121801	CastTarget	FILE *		6121565	0					
ANR	6121802	Identifier	NULL		6121565	1					
ANR	6121803	CompoundStatement		69:16:1532:1532	6121565	1					
ANR	6121804	ExpressionStatement	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"	449:18:9420:9459	6121565	0	True				
ANR	6121805	CallExpression	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"		6121565	0					
ANR	6121806	Callee	printf		6121565	0					
ANR	6121807	Identifier	printf		6121565	0					
ANR	6121808	ArgumentList	"""Unable to open: %s\\n"""		6121565	1					
ANR	6121809	Argument	"""Unable to open: %s\\n"""		6121565	0					
ANR	6121810	PrimaryExpression	"""Unable to open: %s\\n"""		6121565	0					
ANR	6121811	Argument	argv [ i ]		6121565	1					
ANR	6121812	ArrayIndexing	argv [ i ]		6121565	0					
ANR	6121813	Identifier	argv		6121565	0					
ANR	6121814	Identifier	i		6121565	1					
ANR	6121815	ReturnStatement	return 1 ;	450:18:9479:9487	6121565	1	True				
ANR	6121816	PrimaryExpression	1		6121565	0					
ANR	6121817	BreakStatement	break ;	452:14:9521:9526	6121565	15	True				
ANR	6121818	Label	default :	453:12:9540:9547	6121565	16	True				
ANR	6121819	Identifier	default		6121565	0					
ANR	6121820	ExpressionStatement	"printf ( ""Unknown option: %s\\n"" , argv [ i ] )"	454:14:9563:9602	6121565	17	True				
ANR	6121821	CallExpression	"printf ( ""Unknown option: %s\\n"" , argv [ i ] )"		6121565	0					
ANR	6121822	Callee	printf		6121565	0					
ANR	6121823	Identifier	printf		6121565	0					
ANR	6121824	ArgumentList	"""Unknown option: %s\\n"""		6121565	1					
ANR	6121825	Argument	"""Unknown option: %s\\n"""		6121565	0					
ANR	6121826	PrimaryExpression	"""Unknown option: %s\\n"""		6121565	0					
ANR	6121827	Argument	argv [ i ]		6121565	1					
ANR	6121828	ArrayIndexing	argv [ i ]		6121565	0					
ANR	6121829	Identifier	argv		6121565	0					
ANR	6121830	Identifier	i		6121565	1					
ANR	6121831	ReturnStatement	return 1 ;	455:14:9618:9626	6121565	18	True				
ANR	6121832	PrimaryExpression	1		6121565	0					
ANR	6121833	ElseStatement	else		6121565	0					
ANR	6121834	CompoundStatement		80:8:1803:1803	6121565	0					
ANR	6121835	ExpressionStatement	puts ( usage )	460:10:9683:9694	6121565	0	True				
ANR	6121836	CallExpression	puts ( usage )		6121565	0					
ANR	6121837	Callee	puts		6121565	0					
ANR	6121838	Identifier	puts		6121565	0					
ANR	6121839	ArgumentList	usage		6121565	1					
ANR	6121840	Argument	usage		6121565	0					
ANR	6121841	Identifier	usage		6121565	0					
ANR	6121842	ReturnStatement	return 1 ;	461:10:9706:9714	6121565	1	True				
ANR	6121843	PrimaryExpression	1		6121565	0					
ANR	6121844	IfStatement	if ( mode == 0 )		6121565	6					
ANR	6121845	Condition	mode == 0	465:6:9739:9747	6121565	0	True				
ANR	6121846	EqualityExpression	mode == 0		6121565	0		==			
ANR	6121847	Identifier	mode		6121565	0					
ANR	6121848	PrimaryExpression	0		6121565	1					
ANR	6121849	ExpressionStatement	"formatIPTC ( ifile , ofile )"	466:4:9784:9808	6121565	1	True				
ANR	6121850	CallExpression	"formatIPTC ( ifile , ofile )"		6121565	0					
ANR	6121851	Callee	formatIPTC		6121565	0					
ANR	6121852	Identifier	formatIPTC		6121565	0					
ANR	6121853	ArgumentList	ifile		6121565	1					
ANR	6121854	Argument	ifile		6121565	0					
ANR	6121855	Identifier	ifile		6121565	0					
ANR	6121856	Argument	ofile		6121565	1					
ANR	6121857	Identifier	ofile		6121565	0					
ANR	6121858	IfStatement	if ( mode == 1 )		6121565	7					
ANR	6121859	Condition	mode == 1	468:6:9817:9825	6121565	0	True				
ANR	6121860	EqualityExpression	mode == 1		6121565	0		==			
ANR	6121861	Identifier	mode		6121565	0					
ANR	6121862	PrimaryExpression	1		6121565	1					
ANR	6121863	CompoundStatement		106:6:2203:2235	6121565	1					
ANR	6121864	IdentifierDeclStatement	"char brkused , quoted , * line , * token , * newstr ;"	470:6:9876:9960	6121565	0	True				
ANR	6121865	IdentifierDecl	brkused		6121565	0					
ANR	6121866	IdentifierDeclType	char		6121565	0					
ANR	6121867	Identifier	brkused		6121565	1					
ANR	6121868	IdentifierDecl	quoted		6121565	1					
ANR	6121869	IdentifierDeclType	char		6121565	0					
ANR	6121870	Identifier	quoted		6121565	1					
ANR	6121871	IdentifierDecl	* line		6121565	2					
ANR	6121872	IdentifierDeclType	char *		6121565	0					
ANR	6121873	Identifier	line		6121565	1					
ANR	6121874	IdentifierDecl	* token		6121565	3					
ANR	6121875	IdentifierDeclType	char *		6121565	0					
ANR	6121876	Identifier	token		6121565	1					
ANR	6121877	IdentifierDecl	* newstr		6121565	4					
ANR	6121878	IdentifierDeclType	char *		6121565	0					
ANR	6121879	Identifier	newstr		6121565	1					
ANR	6121880	IdentifierDeclStatement	"int state , next ;"	477:6:9969:10000	6121565	1	True				
ANR	6121881	IdentifierDecl	state		6121565	0					
ANR	6121882	IdentifierDeclType	int		6121565	0					
ANR	6121883	Identifier	state		6121565	1					
ANR	6121884	IdentifierDecl	next		6121565	1					
ANR	6121885	IdentifierDeclType	int		6121565	0					
ANR	6121886	Identifier	next		6121565	1					
ANR	6121887	IdentifierDeclStatement	"unsigned char recnum = 0 , dataset = 0 ;"	481:6:10009:10062	6121565	2	True				
ANR	6121888	IdentifierDecl	recnum = 0		6121565	0					
ANR	6121889	IdentifierDeclType	unsigned char		6121565	0					
ANR	6121890	Identifier	recnum		6121565	1					
ANR	6121891	AssignmentExpression	recnum = 0		6121565	2		=			
ANR	6121892	Identifier	recnum		6121565	0					
ANR	6121893	PrimaryExpression	0		6121565	1					
ANR	6121894	IdentifierDecl	dataset = 0		6121565	1					
ANR	6121895	IdentifierDeclType	unsigned char		6121565	0					
ANR	6121896	Identifier	dataset		6121565	1					
ANR	6121897	AssignmentExpression	dataset = 0		6121565	2		=			
ANR	6121898	Identifier	dataset		6121565	0					
ANR	6121899	PrimaryExpression	0		6121565	1					
ANR	6121900	IdentifierDeclStatement	int inputlen = BUFFER_SZ ;	485:6:10071:10103	6121565	3	True				
ANR	6121901	IdentifierDecl	inputlen = BUFFER_SZ		6121565	0					
ANR	6121902	IdentifierDeclType	int		6121565	0					
ANR	6121903	Identifier	inputlen		6121565	1					
ANR	6121904	AssignmentExpression	inputlen = BUFFER_SZ		6121565	2		=			
ANR	6121905	Identifier	BUFFER_SZ		6121565	0					
ANR	6121906	Identifier	BUFFER_SZ		6121565	1					
ANR	6121907	ExpressionStatement	line = ( char * ) malloc ( inputlen )	488:6:10112:10144	6121565	4	True				
ANR	6121908	AssignmentExpression	line = ( char * ) malloc ( inputlen )		6121565	0		=			
ANR	6121909	Identifier	line		6121565	0					
ANR	6121910	CastExpression	( char * ) malloc ( inputlen )		6121565	1					
ANR	6121911	CastTarget	char *		6121565	0					
ANR	6121912	CallExpression	malloc ( inputlen )		6121565	1					
ANR	6121913	Callee	malloc		6121565	0					
ANR	6121914	Identifier	malloc		6121565	0					
ANR	6121915	ArgumentList	inputlen		6121565	1					
ANR	6121916	Argument	inputlen		6121565	0					
ANR	6121917	Identifier	inputlen		6121565	0					
ANR	6121918	ExpressionStatement	token = ( char * ) NULL	489:6:10157:10177	6121565	5	True				
ANR	6121919	AssignmentExpression	token = ( char * ) NULL		6121565	0		=			
ANR	6121920	Identifier	token		6121565	0					
ANR	6121921	CastExpression	( char * ) NULL		6121565	1					
ANR	6121922	CastTarget	char *		6121565	0					
ANR	6121923	Identifier	NULL		6121565	1					
ANR	6121924	WhileStatement	"while ( ( line = super_fgets ( line , & inputlen , ifile ) ) != NULL )"		6121565	6					
ANR	6121925	Condition	"( line = super_fgets ( line , & inputlen , ifile ) ) != NULL"	490:12:10191:10238	6121565	0	True				
ANR	6121926	EqualityExpression	"( line = super_fgets ( line , & inputlen , ifile ) ) != NULL"		6121565	0		!=			
ANR	6121927	AssignmentExpression	"line = super_fgets ( line , & inputlen , ifile )"		6121565	0		=			
ANR	6121928	Identifier	line		6121565	0					
ANR	6121929	CallExpression	"super_fgets ( line , & inputlen , ifile )"		6121565	1					
ANR	6121930	Callee	super_fgets		6121565	0					
ANR	6121931	Identifier	super_fgets		6121565	0					
ANR	6121932	ArgumentList	line		6121565	1					
ANR	6121933	Argument	line		6121565	0					
ANR	6121934	Identifier	line		6121565	0					
ANR	6121935	Argument	& inputlen		6121565	1					
ANR	6121936	UnaryOperationExpression	& inputlen		6121565	0					
ANR	6121937	UnaryOperator	&		6121565	0					
ANR	6121938	Identifier	inputlen		6121565	1					
ANR	6121939	Argument	ifile		6121565	2					
ANR	6121940	Identifier	ifile		6121565	0					
ANR	6121941	Identifier	NULL		6121565	1					
ANR	6121942	CompoundStatement		112:8:2381:2381	6121565	1					
ANR	6121943	ExpressionStatement	state = 0	492:10:10261:10268	6121565	0	True				
ANR	6121944	AssignmentExpression	state = 0		6121565	0		=			
ANR	6121945	Identifier	state		6121565	0					
ANR	6121946	PrimaryExpression	0		6121565	1					
ANR	6121947	ExpressionStatement	next = 0	493:10:10280:10286	6121565	1	True				
ANR	6121948	AssignmentExpression	next = 0		6121565	0		=			
ANR	6121949	Identifier	next		6121565	0					
ANR	6121950	PrimaryExpression	0		6121565	1					
ANR	6121951	ExpressionStatement	token = ( char * ) malloc ( inputlen )	495:10:10299:10332	6121565	2	True				
ANR	6121952	AssignmentExpression	token = ( char * ) malloc ( inputlen )		6121565	0		=			
ANR	6121953	Identifier	token		6121565	0					
ANR	6121954	CastExpression	( char * ) malloc ( inputlen )		6121565	1					
ANR	6121955	CastTarget	char *		6121565	0					
ANR	6121956	CallExpression	malloc ( inputlen )		6121565	1					
ANR	6121957	Callee	malloc		6121565	0					
ANR	6121958	Identifier	malloc		6121565	0					
ANR	6121959	ArgumentList	inputlen		6121565	1					
ANR	6121960	Argument	inputlen		6121565	0					
ANR	6121961	Identifier	inputlen		6121565	0					
ANR	6121962	ExpressionStatement	newstr = ( char * ) malloc ( inputlen )	496:10:10349:10383	6121565	3	True				
ANR	6121963	AssignmentExpression	newstr = ( char * ) malloc ( inputlen )		6121565	0		=			
ANR	6121964	Identifier	newstr		6121565	0					
ANR	6121965	CastExpression	( char * ) malloc ( inputlen )		6121565	1					
ANR	6121966	CastTarget	char *		6121565	0					
ANR	6121967	CallExpression	malloc ( inputlen )		6121565	1					
ANR	6121968	Callee	malloc		6121565	0					
ANR	6121969	Identifier	malloc		6121565	0					
ANR	6121970	ArgumentList	inputlen		6121565	1					
ANR	6121971	Argument	inputlen		6121565	0					
ANR	6121972	Identifier	inputlen		6121565	0					
ANR	6121973	WhileStatement	"while ( tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted ) == 0 )"		6121565	4					
ANR	6121974	Condition	"tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted ) == 0"	497:16:10406:10511	6121565	0	True				
ANR	6121975	EqualityExpression	"tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted ) == 0"		6121565	0		==			
ANR	6121976	CallExpression	"tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted )"		6121565	0					
ANR	6121977	Callee	tokenizer		6121565	0					
ANR	6121978	Identifier	tokenizer		6121565	0					
ANR	6121979	ArgumentList	0		6121565	1					
ANR	6121980	Argument	0		6121565	0					
ANR	6121981	PrimaryExpression	0		6121565	0					
ANR	6121982	Argument	token		6121565	1					
ANR	6121983	Identifier	token		6121565	0					
ANR	6121984	Argument	inputlen		6121565	2					
ANR	6121985	Identifier	inputlen		6121565	0					
ANR	6121986	Argument	line		6121565	3					
ANR	6121987	Identifier	line		6121565	0					
ANR	6121988	Argument	""""""		6121565	4					
ANR	6121989	PrimaryExpression	""""""		6121565	0					
ANR	6121990	Argument	"""="""		6121565	5					
ANR	6121991	PrimaryExpression	"""="""		6121565	0					
ANR	6121992	Argument	"""\\"""""		6121565	6					
ANR	6121993	PrimaryExpression	"""\\"""""		6121565	0					
ANR	6121994	Argument	0		6121565	7					
ANR	6121995	PrimaryExpression	0		6121565	0					
ANR	6121996	Argument	& brkused		6121565	8					
ANR	6121997	UnaryOperationExpression	& brkused		6121565	0					
ANR	6121998	UnaryOperator	&		6121565	0					
ANR	6121999	Identifier	brkused		6121565	1					
ANR	6122000	Argument	& next		6121565	9					
ANR	6122001	UnaryOperationExpression	& next		6121565	0					
ANR	6122002	UnaryOperator	&		6121565	0					
ANR	6122003	Identifier	next		6121565	1					
ANR	6122004	Argument	& quoted		6121565	10					
ANR	6122005	UnaryOperationExpression	& quoted		6121565	0					
ANR	6122006	UnaryOperator	&		6121565	0					
ANR	6122007	Identifier	quoted		6121565	1					
ANR	6122008	PrimaryExpression	0		6121565	1					
ANR	6122009	CompoundStatement		120:12:2658:2658	6121565	1					
ANR	6122010	IfStatement	if ( state == 0 )		6121565	0					
ANR	6122011	Condition	state == 0	500:18:10546:10555	6121565	0	True				
ANR	6122012	EqualityExpression	state == 0		6121565	0		==			
ANR	6122013	Identifier	state		6121565	0					
ANR	6122014	PrimaryExpression	0		6121565	1					
ANR	6122015	CompoundStatement		127:18:2820:2880	6121565	1					
ANR	6122016	IdentifierDeclStatement	"int state , next ;"	502:18:10612:10667	6121565	0	True				
ANR	6122017	IdentifierDecl	state		6121565	0					
ANR	6122018	IdentifierDeclType	int		6121565	0					
ANR	6122019	Identifier	state		6121565	1					
ANR	6122020	IdentifierDecl	next		6121565	1					
ANR	6122021	IdentifierDeclType	int		6121565	0					
ANR	6122022	Identifier	next		6121565	1					
ANR	6122023	IdentifierDeclStatement	"char brkused , quoted ;"	506:18:10688:10748	6121565	1	True				
ANR	6122024	IdentifierDecl	brkused		6121565	0					
ANR	6122025	IdentifierDeclType	char		6121565	0					
ANR	6122026	Identifier	brkused		6121565	1					
ANR	6122027	IdentifierDecl	quoted		6121565	1					
ANR	6122028	IdentifierDeclType	char		6121565	0					
ANR	6122029	Identifier	quoted		6121565	1					
ANR	6122030	ExpressionStatement	state = 0	510:18:10769:10776	6121565	2	True				
ANR	6122031	AssignmentExpression	state = 0		6121565	0		=			
ANR	6122032	Identifier	state		6121565	0					
ANR	6122033	PrimaryExpression	0		6121565	1					
ANR	6122034	ExpressionStatement	next = 0	511:18:10796:10802	6121565	3	True				
ANR	6122035	AssignmentExpression	next = 0		6121565	0		=			
ANR	6122036	Identifier	next		6121565	0					
ANR	6122037	PrimaryExpression	0		6121565	1					
ANR	6122038	WhileStatement	"while ( tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted ) == 0 )"		6121565	4					
ANR	6122039	Condition	"tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted ) == 0"	512:24:10828:10943	6121565	0	True				
ANR	6122040	EqualityExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted ) == 0"		6121565	0		==			
ANR	6122041	CallExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted )"		6121565	0					
ANR	6122042	Callee	tokenizer		6121565	0					
ANR	6122043	Identifier	tokenizer		6121565	0					
ANR	6122044	ArgumentList	0		6121565	1					
ANR	6122045	Argument	0		6121565	0					
ANR	6122046	PrimaryExpression	0		6121565	0					
ANR	6122047	Argument	newstr		6121565	1					
ANR	6122048	Identifier	newstr		6121565	0					
ANR	6122049	Argument	inputlen		6121565	2					
ANR	6122050	Identifier	inputlen		6121565	0					
ANR	6122051	Argument	token		6121565	3					
ANR	6122052	Identifier	token		6121565	0					
ANR	6122053	Argument	""""""		6121565	4					
ANR	6122054	PrimaryExpression	""""""		6121565	0					
ANR	6122055	Argument	"""#"""		6121565	5					
ANR	6122056	PrimaryExpression	"""#"""		6121565	0					
ANR	6122057	Argument	""""""		6121565	6					
ANR	6122058	PrimaryExpression	""""""		6121565	0					
ANR	6122059	Argument	0		6121565	7					
ANR	6122060	PrimaryExpression	0		6121565	0					
ANR	6122061	Argument	& brkused		6121565	8					
ANR	6122062	UnaryOperationExpression	& brkused		6121565	0					
ANR	6122063	UnaryOperator	&		6121565	0					
ANR	6122064	Identifier	brkused		6121565	1					
ANR	6122065	Argument	& next		6121565	9					
ANR	6122066	UnaryOperationExpression	& next		6121565	0					
ANR	6122067	UnaryOperator	&		6121565	0					
ANR	6122068	Identifier	next		6121565	1					
ANR	6122069	Argument	& quoted		6121565	10					
ANR	6122070	UnaryOperationExpression	& quoted		6121565	0					
ANR	6122071	UnaryOperator	&		6121565	0					
ANR	6122072	Identifier	quoted		6121565	1					
ANR	6122073	PrimaryExpression	0		6121565	1					
ANR	6122074	CompoundStatement		135:20:3098:3098	6121565	1					
ANR	6122075	IfStatement	if ( state == 0 )		6121565	0					
ANR	6122076	Condition	state == 0	515:26:10994:11003	6121565	0	True				
ANR	6122077	EqualityExpression	state == 0		6121565	0		==			
ANR	6122078	Identifier	state		6121565	0					
ANR	6122079	PrimaryExpression	0		6121565	1					
ANR	6122080	ExpressionStatement	dataset = ( unsigned char ) atoi ( newstr )	516:24:11030:11068	6121565	1	True				
ANR	6122081	AssignmentExpression	dataset = ( unsigned char ) atoi ( newstr )		6121565	0		=			
ANR	6122082	Identifier	dataset		6121565	0					
ANR	6122083	CastExpression	( unsigned char ) atoi ( newstr )		6121565	1					
ANR	6122084	CastTarget	unsigned char		6121565	0					
ANR	6122085	CallExpression	atoi ( newstr )		6121565	1					
ANR	6122086	Callee	atoi		6121565	0					
ANR	6122087	Identifier	atoi		6121565	0					
ANR	6122088	ArgumentList	newstr		6121565	1					
ANR	6122089	Argument	newstr		6121565	0					
ANR	6122090	Identifier	newstr		6121565	0					
ANR	6122091	ElseStatement	else		6121565	0					
ANR	6122092	IfStatement	if ( state == 1 )		6121565	0					
ANR	6122093	Condition	state == 1	518:28:11125:11134	6121565	0	True				
ANR	6122094	EqualityExpression	state == 1		6121565	0		==			
ANR	6122095	Identifier	state		6121565	0					
ANR	6122096	PrimaryExpression	1		6121565	1					
ANR	6122097	ExpressionStatement	recnum = ( unsigned char ) atoi ( newstr )	519:26:11163:11200	6121565	1	True				
ANR	6122098	AssignmentExpression	recnum = ( unsigned char ) atoi ( newstr )		6121565	0		=			
ANR	6122099	Identifier	recnum		6121565	0					
ANR	6122100	CastExpression	( unsigned char ) atoi ( newstr )		6121565	1					
ANR	6122101	CastTarget	unsigned char		6121565	0					
ANR	6122102	CallExpression	atoi ( newstr )		6121565	1					
ANR	6122103	Callee	atoi		6121565	0					
ANR	6122104	Identifier	atoi		6121565	0					
ANR	6122105	ArgumentList	newstr		6121565	1					
ANR	6122106	Argument	newstr		6121565	0					
ANR	6122107	Identifier	newstr		6121565	0					
ANR	6122108	ExpressionStatement	state ++	520:22:11224:11231	6121565	1	True				
ANR	6122109	PostIncDecOperationExpression	state ++		6121565	0					
ANR	6122110	Identifier	state		6121565	0					
ANR	6122111	IncDec	++		6121565	1					
ANR	6122112	ElseStatement	else		6121565	0					
ANR	6122113	IfStatement	if ( state == 1 )		6121565	0					
ANR	6122114	Condition	state == 1	524:20:11312:11321	6121565	0	True				
ANR	6122115	EqualityExpression	state == 1		6121565	0		==			
ANR	6122116	Identifier	state		6121565	0					
ANR	6122117	PrimaryExpression	1		6121565	1					
ANR	6122118	CompoundStatement		153:20:3611:3675	6121565	1					
ANR	6122119	IdentifierDeclStatement	int next ;	526:20:11364:11394	6121565	0	True				
ANR	6122120	IdentifierDecl	next		6121565	0					
ANR	6122121	IdentifierDeclType	int		6121565	0					
ANR	6122122	Identifier	next		6121565	1					
ANR	6122123	IdentifierDeclStatement	unsigned long len ;	529:20:11417:11456	6121565	1	True				
ANR	6122124	IdentifierDecl	len		6121565	0					
ANR	6122125	IdentifierDeclType	unsigned long		6121565	0					
ANR	6122126	Identifier	len		6121565	1					
ANR	6122127	IdentifierDeclStatement	"char brkused , quoted ;"	532:20:11479:11543	6121565	2	True				
ANR	6122128	IdentifierDecl	brkused		6121565	0					
ANR	6122129	IdentifierDeclType	char		6121565	0					
ANR	6122130	Identifier	brkused		6121565	1					
ANR	6122131	IdentifierDecl	quoted		6121565	1					
ANR	6122132	IdentifierDeclType	char		6121565	0					
ANR	6122133	Identifier	quoted		6121565	1					
ANR	6122134	ExpressionStatement	next = 0	536:20:11566:11572	6121565	3	True				
ANR	6122135	AssignmentExpression	next = 0		6121565	0		=			
ANR	6122136	Identifier	next		6121565	0					
ANR	6122137	PrimaryExpression	0		6121565	1					
ANR	6122138	ExpressionStatement	len = strlen ( token )	537:20:11594:11613	6121565	4	True				
ANR	6122139	AssignmentExpression	len = strlen ( token )		6121565	0		=			
ANR	6122140	Identifier	len		6121565	0					
ANR	6122141	CallExpression	strlen ( token )		6121565	1					
ANR	6122142	Callee	strlen		6121565	0					
ANR	6122143	Identifier	strlen		6121565	0					
ANR	6122144	ArgumentList	token		6121565	1					
ANR	6122145	Argument	token		6121565	0					
ANR	6122146	Identifier	token		6121565	0					
ANR	6122147	WhileStatement	"while ( tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted ) == 0 )"		6121565	5					
ANR	6122148	Condition	"tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted ) == 0"	538:26:11641:11758	6121565	0	True				
ANR	6122149	EqualityExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted ) == 0"		6121565	0		==			
ANR	6122150	CallExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted )"		6121565	0					
ANR	6122151	Callee	tokenizer		6121565	0					
ANR	6122152	Identifier	tokenizer		6121565	0					
ANR	6122153	ArgumentList	0		6121565	1					
ANR	6122154	Argument	0		6121565	0					
ANR	6122155	PrimaryExpression	0		6121565	0					
ANR	6122156	Argument	newstr		6121565	1					
ANR	6122157	Identifier	newstr		6121565	0					
ANR	6122158	Argument	inputlen		6121565	2					
ANR	6122159	Identifier	inputlen		6121565	0					
ANR	6122160	Argument	token		6121565	3					
ANR	6122161	Identifier	token		6121565	0					
ANR	6122162	Argument	""""""		6121565	4					
ANR	6122163	PrimaryExpression	""""""		6121565	0					
ANR	6122164	Argument	"""&"""		6121565	5					
ANR	6122165	PrimaryExpression	"""&"""		6121565	0					
ANR	6122166	Argument	""""""		6121565	6					
ANR	6122167	PrimaryExpression	""""""		6121565	0					
ANR	6122168	Argument	0		6121565	7					
ANR	6122169	PrimaryExpression	0		6121565	0					
ANR	6122170	Argument	& brkused		6121565	8					
ANR	6122171	UnaryOperationExpression	& brkused		6121565	0					
ANR	6122172	UnaryOperator	&		6121565	0					
ANR	6122173	Identifier	brkused		6121565	1					
ANR	6122174	Argument	& next		6121565	9					
ANR	6122175	UnaryOperationExpression	& next		6121565	0					
ANR	6122176	UnaryOperator	&		6121565	0					
ANR	6122177	Identifier	next		6121565	1					
ANR	6122178	Argument	& quoted		6121565	10					
ANR	6122179	UnaryOperationExpression	& quoted		6121565	0					
ANR	6122180	UnaryOperator	&		6121565	0					
ANR	6122181	Identifier	quoted		6121565	1					
ANR	6122182	PrimaryExpression	0		6121565	1					
ANR	6122183	CompoundStatement		161:22:3915:3915	6121565	1					
ANR	6122184	IfStatement	if ( brkused && next > 0 )		6121565	0					
ANR	6122185	Condition	brkused && next > 0	541:28:11813:11831	6121565	0	True				
ANR	6122186	AndExpression	brkused && next > 0		6121565	0		&&			
ANR	6122187	Identifier	brkused		6121565	0					
ANR	6122188	RelationalExpression	next > 0		6121565	1		>			
ANR	6122189	Identifier	next		6121565	0					
ANR	6122190	PrimaryExpression	0		6121565	1					
ANR	6122191	CompoundStatement		164:28:4022:4076	6121565	1					
ANR	6122192	IdentifierDeclStatement	char * s = & token [ next - 1 ] ;	543:28:11890:11944	6121565	0	True				
ANR	6122193	IdentifierDecl	* s = & token [ next - 1 ]		6121565	0					
ANR	6122194	IdentifierDeclType	char *		6121565	0					
ANR	6122195	Identifier	s		6121565	1					
ANR	6122196	AssignmentExpression	* s = & token [ next - 1 ]		6121565	2		=			
ANR	6122197	Identifier	s		6121565	0					
ANR	6122198	UnaryOperationExpression	& token [ next - 1 ]		6121565	1					
ANR	6122199	UnaryOperator	&		6121565	0					
ANR	6122200	ArrayIndexing	token [ next - 1 ]		6121565	1					
ANR	6122201	Identifier	token		6121565	0					
ANR	6122202	AdditiveExpression	next - 1		6121565	1		-			
ANR	6122203	Identifier	next		6121565	0					
ANR	6122204	PrimaryExpression	1		6121565	1					
ANR	6122205	ExpressionStatement	"len -= convertHTMLcodes ( s , strlen ( s ) )"	546:28:11975:12012	6121565	1	True				
ANR	6122206	AssignmentExpression	"len -= convertHTMLcodes ( s , strlen ( s ) )"		6121565	0		-=			
ANR	6122207	Identifier	len		6121565	0					
ANR	6122208	CallExpression	"convertHTMLcodes ( s , strlen ( s ) )"		6121565	1					
ANR	6122209	Callee	convertHTMLcodes		6121565	0					
ANR	6122210	Identifier	convertHTMLcodes		6121565	0					
ANR	6122211	ArgumentList	s		6121565	1					
ANR	6122212	Argument	s		6121565	0					
ANR	6122213	Identifier	s		6121565	0					
ANR	6122214	Argument	strlen ( s )		6121565	1					
ANR	6122215	CallExpression	strlen ( s )		6121565	0					
ANR	6122216	Callee	strlen		6121565	0					
ANR	6122217	Identifier	strlen		6121565	0					
ANR	6122218	ArgumentList	s		6121565	1					
ANR	6122219	Argument	s		6121565	0					
ANR	6122220	Identifier	s		6121565	0					
ANR	6122221	ExpressionStatement	"fputc ( 0x1c , ofile )"	550:20:12087:12105	6121565	6	True				
ANR	6122222	CallExpression	"fputc ( 0x1c , ofile )"		6121565	0					
ANR	6122223	Callee	fputc		6121565	0					
ANR	6122224	Identifier	fputc		6121565	0					
ANR	6122225	ArgumentList	0x1c		6121565	1					
ANR	6122226	Argument	0x1c		6121565	0					
ANR	6122227	PrimaryExpression	0x1c		6121565	0					
ANR	6122228	Argument	ofile		6121565	1					
ANR	6122229	Identifier	ofile		6121565	0					
ANR	6122230	ExpressionStatement	"fputc ( dataset , ofile )"	551:20:12127:12148	6121565	7	True				
ANR	6122231	CallExpression	"fputc ( dataset , ofile )"		6121565	0					
ANR	6122232	Callee	fputc		6121565	0					
ANR	6122233	Identifier	fputc		6121565	0					
ANR	6122234	ArgumentList	dataset		6121565	1					
ANR	6122235	Argument	dataset		6121565	0					
ANR	6122236	Identifier	dataset		6121565	0					
ANR	6122237	Argument	ofile		6121565	1					
ANR	6122238	Identifier	ofile		6121565	0					
ANR	6122239	ExpressionStatement	"fputc ( recnum , ofile )"	552:20:12170:12190	6121565	8	True				
ANR	6122240	CallExpression	"fputc ( recnum , ofile )"		6121565	0					
ANR	6122241	Callee	fputc		6121565	0					
ANR	6122242	Identifier	fputc		6121565	0					
ANR	6122243	ArgumentList	recnum		6121565	1					
ANR	6122244	Argument	recnum		6121565	0					
ANR	6122245	Identifier	recnum		6121565	0					
ANR	6122246	Argument	ofile		6121565	1					
ANR	6122247	Identifier	ofile		6121565	0					
ANR	6122248	IfStatement	if ( len < 0x10000 )		6121565	9					
ANR	6122249	Condition	len < 0x10000	553:24:12216:12228	6121565	0	True				
ANR	6122250	RelationalExpression	len < 0x10000		6121565	0		<			
ANR	6122251	Identifier	len		6121565	0					
ANR	6122252	PrimaryExpression	0x10000		6121565	1					
ANR	6122253	CompoundStatement		175:22:4385:4385	6121565	1					
ANR	6122254	ExpressionStatement	"fputc ( ( len >> 8 ) & 255 , ofile )"	555:24:12279:12309	6121565	0	True				
ANR	6122255	CallExpression	"fputc ( ( len >> 8 ) & 255 , ofile )"		6121565	0					
ANR	6122256	Callee	fputc		6121565	0					
ANR	6122257	Identifier	fputc		6121565	0					
ANR	6122258	ArgumentList	( len >> 8 ) & 255		6121565	1					
ANR	6122259	Argument	( len >> 8 ) & 255		6121565	0					
ANR	6122260	BitAndExpression	( len >> 8 ) & 255		6121565	0		&			
ANR	6122261	ShiftExpression	len >> 8		6121565	0		>>			
ANR	6122262	Identifier	len		6121565	0					
ANR	6122263	PrimaryExpression	8		6121565	1					
ANR	6122264	PrimaryExpression	255		6121565	1					
ANR	6122265	Argument	ofile		6121565	1					
ANR	6122266	Identifier	ofile		6121565	0					
ANR	6122267	ExpressionStatement	"fputc ( len & 255 , ofile )"	556:24:12335:12358	6121565	1	True				
ANR	6122268	CallExpression	"fputc ( len & 255 , ofile )"		6121565	0					
ANR	6122269	Callee	fputc		6121565	0					
ANR	6122270	Identifier	fputc		6121565	0					
ANR	6122271	ArgumentList	len & 255		6121565	1					
ANR	6122272	Argument	len & 255		6121565	0					
ANR	6122273	BitAndExpression	len & 255		6121565	0		&			
ANR	6122274	Identifier	len		6121565	0					
ANR	6122275	PrimaryExpression	255		6121565	1					
ANR	6122276	Argument	ofile		6121565	1					
ANR	6122277	Identifier	ofile		6121565	0					
ANR	6122278	ElseStatement	else		6121565	0					
ANR	6122279	CompoundStatement		180:22:4563:4563	6121565	0					
ANR	6122280	ExpressionStatement	"fputc ( ( ( len >> 24 ) & 255 ) | 0x80 , ofile )"	560:24:12457:12497	6121565	0	True				
ANR	6122281	CallExpression	"fputc ( ( ( len >> 24 ) & 255 ) | 0x80 , ofile )"		6121565	0					
ANR	6122282	Callee	fputc		6121565	0					
ANR	6122283	Identifier	fputc		6121565	0					
ANR	6122284	ArgumentList	( ( len >> 24 ) & 255 ) | 0x80		6121565	1					
ANR	6122285	Argument	( ( len >> 24 ) & 255 ) | 0x80		6121565	0					
ANR	6122286	InclusiveOrExpression	( ( len >> 24 ) & 255 ) | 0x80		6121565	0		|			
ANR	6122287	BitAndExpression	( len >> 24 ) & 255		6121565	0		&			
ANR	6122288	ShiftExpression	len >> 24		6121565	0		>>			
ANR	6122289	Identifier	len		6121565	0					
ANR	6122290	PrimaryExpression	24		6121565	1					
ANR	6122291	PrimaryExpression	255		6121565	1					
ANR	6122292	PrimaryExpression	0x80		6121565	1					
ANR	6122293	Argument	ofile		6121565	1					
ANR	6122294	Identifier	ofile		6121565	0					
ANR	6122295	ExpressionStatement	"fputc ( ( len >> 16 ) & 255 , ofile )"	561:24:12523:12554	6121565	1	True				
ANR	6122296	CallExpression	"fputc ( ( len >> 16 ) & 255 , ofile )"		6121565	0					
ANR	6122297	Callee	fputc		6121565	0					
ANR	6122298	Identifier	fputc		6121565	0					
ANR	6122299	ArgumentList	( len >> 16 ) & 255		6121565	1					
ANR	6122300	Argument	( len >> 16 ) & 255		6121565	0					
ANR	6122301	BitAndExpression	( len >> 16 ) & 255		6121565	0		&			
ANR	6122302	ShiftExpression	len >> 16		6121565	0		>>			
ANR	6122303	Identifier	len		6121565	0					
ANR	6122304	PrimaryExpression	16		6121565	1					
ANR	6122305	PrimaryExpression	255		6121565	1					
ANR	6122306	Argument	ofile		6121565	1					
ANR	6122307	Identifier	ofile		6121565	0					
ANR	6122308	ExpressionStatement	"fputc ( ( len >> 8 ) & 255 , ofile )"	562:24:12580:12610	6121565	2	True				
ANR	6122309	CallExpression	"fputc ( ( len >> 8 ) & 255 , ofile )"		6121565	0					
ANR	6122310	Callee	fputc		6121565	0					
ANR	6122311	Identifier	fputc		6121565	0					
ANR	6122312	ArgumentList	( len >> 8 ) & 255		6121565	1					
ANR	6122313	Argument	( len >> 8 ) & 255		6121565	0					
ANR	6122314	BitAndExpression	( len >> 8 ) & 255		6121565	0		&			
ANR	6122315	ShiftExpression	len >> 8		6121565	0		>>			
ANR	6122316	Identifier	len		6121565	0					
ANR	6122317	PrimaryExpression	8		6121565	1					
ANR	6122318	PrimaryExpression	255		6121565	1					
ANR	6122319	Argument	ofile		6121565	1					
ANR	6122320	Identifier	ofile		6121565	0					
ANR	6122321	ExpressionStatement	"fputc ( len & 255 , ofile )"	563:24:12636:12659	6121565	3	True				
ANR	6122322	CallExpression	"fputc ( len & 255 , ofile )"		6121565	0					
ANR	6122323	Callee	fputc		6121565	0					
ANR	6122324	Identifier	fputc		6121565	0					
ANR	6122325	ArgumentList	len & 255		6121565	1					
ANR	6122326	Argument	len & 255		6121565	0					
ANR	6122327	BitAndExpression	len & 255		6121565	0		&			
ANR	6122328	Identifier	len		6121565	0					
ANR	6122329	PrimaryExpression	255		6121565	1					
ANR	6122330	Argument	ofile		6121565	1					
ANR	6122331	Identifier	ofile		6121565	0					
ANR	6122332	ExpressionStatement	next = 0	565:20:12705:12711	6121565	10	True				
ANR	6122333	AssignmentExpression	next = 0		6121565	0		=			
ANR	6122334	Identifier	next		6121565	0					
ANR	6122335	PrimaryExpression	0		6121565	1					
ANR	6122336	WhileStatement	while ( len -- )		6121565	11					
ANR	6122337	Condition	len --	566:27:12740:12744	6121565	0	True				
ANR	6122338	PostIncDecOperationExpression	len --		6121565	0					
ANR	6122339	Identifier	len		6121565	0					
ANR	6122340	IncDec	--		6121565	1					
ANR	6122341	ExpressionStatement	"fputc ( token [ next ++ ] , ofile )"	567:22:12769:12796	6121565	1	True				
ANR	6122342	CallExpression	"fputc ( token [ next ++ ] , ofile )"		6121565	0					
ANR	6122343	Callee	fputc		6121565	0					
ANR	6122344	Identifier	fputc		6121565	0					
ANR	6122345	ArgumentList	token [ next ++ ]		6121565	1					
ANR	6122346	Argument	token [ next ++ ]		6121565	0					
ANR	6122347	ArrayIndexing	token [ next ++ ]		6121565	0					
ANR	6122348	Identifier	token		6121565	0					
ANR	6122349	PostIncDecOperationExpression	next ++		6121565	1					
ANR	6122350	Identifier	next		6121565	0					
ANR	6122351	IncDec	++		6121565	1					
ANR	6122352	Argument	ofile		6121565	1					
ANR	6122353	Identifier	ofile		6121565	0					
ANR	6122354	ExpressionStatement	state ++	569:14:12832:12839	6121565	1	True				
ANR	6122355	PostIncDecOperationExpression	state ++		6121565	0					
ANR	6122356	Identifier	state		6121565	0					
ANR	6122357	IncDec	++		6121565	1					
ANR	6122358	ExpressionStatement	free ( token )	571:10:12865:12876	6121565	5	True				
ANR	6122359	CallExpression	free ( token )		6121565	0					
ANR	6122360	Callee	free		6121565	0					
ANR	6122361	Identifier	free		6121565	0					
ANR	6122362	ArgumentList	token		6121565	1					
ANR	6122363	Argument	token		6121565	0					
ANR	6122364	Identifier	token		6121565	0					
ANR	6122365	ExpressionStatement	token = ( char * ) NULL	572:10:12888:12908	6121565	6	True				
ANR	6122366	AssignmentExpression	token = ( char * ) NULL		6121565	0		=			
ANR	6122367	Identifier	token		6121565	0					
ANR	6122368	CastExpression	( char * ) NULL		6121565	1					
ANR	6122369	CastTarget	char *		6121565	0					
ANR	6122370	Identifier	NULL		6121565	1					
ANR	6122371	ExpressionStatement	free ( newstr )	573:10:12920:12932	6121565	7	True				
ANR	6122372	CallExpression	free ( newstr )		6121565	0					
ANR	6122373	Callee	free		6121565	0					
ANR	6122374	Identifier	free		6121565	0					
ANR	6122375	ArgumentList	newstr		6121565	1					
ANR	6122376	Argument	newstr		6121565	0					
ANR	6122377	Identifier	newstr		6121565	0					
ANR	6122378	ExpressionStatement	newstr = ( char * ) NULL	574:10:12944:12965	6121565	8	True				
ANR	6122379	AssignmentExpression	newstr = ( char * ) NULL		6121565	0		=			
ANR	6122380	Identifier	newstr		6121565	0					
ANR	6122381	CastExpression	( char * ) NULL		6121565	1					
ANR	6122382	CastTarget	char *		6121565	0					
ANR	6122383	Identifier	NULL		6121565	1					
ANR	6122384	ExpressionStatement	free ( line )	576:6:12983:12993	6121565	7	True				
ANR	6122385	CallExpression	free ( line )		6121565	0					
ANR	6122386	Callee	free		6121565	0					
ANR	6122387	Identifier	free		6121565	0					
ANR	6122388	ArgumentList	line		6121565	1					
ANR	6122389	Argument	line		6121565	0					
ANR	6122390	Identifier	line		6121565	0					
ANR	6122391	ExpressionStatement	fclose ( ifile )	578:6:13002:13017	6121565	8	True				
ANR	6122392	CallExpression	fclose ( ifile )		6121565	0					
ANR	6122393	Callee	fclose		6121565	0					
ANR	6122394	Identifier	fclose		6121565	0					
ANR	6122395	ArgumentList	ifile		6121565	1					
ANR	6122396	Argument	ifile		6121565	0					
ANR	6122397	Identifier	ifile		6121565	0					
ANR	6122398	ExpressionStatement	fclose ( ofile )	579:6:13025:13040	6121565	9	True				
ANR	6122399	CallExpression	fclose ( ofile )		6121565	0					
ANR	6122400	Callee	fclose		6121565	0					
ANR	6122401	Identifier	fclose		6121565	0					
ANR	6122402	ArgumentList	ofile		6121565	1					
ANR	6122403	Argument	ofile		6121565	0					
ANR	6122404	Identifier	ofile		6121565	0					
ANR	6122405	ReturnStatement	return 0 ;	582:2:13051:13059	6121565	8	True				
ANR	6122406	PrimaryExpression	0		6121565	0					
ANR	6122407	ReturnType	int		6121565	1					
ANR	6122408	Identifier	main		6121565	2					
ANR	6122409	ParameterList	"int argc , char * argv [ ]"		6121565	3					
ANR	6122410	Parameter	int argc	379:9:7843:7850	6121565	0	True				
ANR	6122411	ParameterType	int		6121565	0					
ANR	6122412	Identifier	argc		6121565	1					
ANR	6122413	Parameter	char * argv [ ]	379:19:7853:7864	6121565	1	True				
ANR	6122414	ParameterType	char * [ ]		6121565	0					
ANR	6122415	Identifier	argv		6121565	1					
ANR	6122416	CFGEntryNode	ENTRY		6121565		True				
ANR	6122417	CFGExitNode	EXIT		6121565		True				
ANR	6122418	Symbol	next		6121565						
ANR	6122419	Symbol	stdin		6121565						
ANR	6122420	Symbol	stdout		6121565						
ANR	6122421	Symbol	BUFFER_SZ		6121565						
ANR	6122422	Symbol	inputlen		6121565						
ANR	6122423	Symbol	line		6121565						
ANR	6122424	Symbol	& inputlen		6121565						
ANR	6122425	Symbol	usage		6121565						
ANR	6122426	Symbol	* argv		6121565						
ANR	6122427	Symbol	_O_BINARY		6121565						
ANR	6122428	Symbol	argv		6121565						
ANR	6122429	Symbol	& brkused		6121565						
ANR	6122430	Symbol	& quoted		6121565						
ANR	6122431	Symbol	mode		6121565						
ANR	6122432	Symbol	quoted		6121565						
ANR	6122433	Symbol	strlen		6121565						
ANR	6122434	Symbol	ifile		6121565						
ANR	6122435	Symbol	len		6121565						
ANR	6122436	Symbol	* * argv		6121565						
ANR	6122437	Symbol	state		6121565						
ANR	6122438	Symbol	brkused		6121565						
ANR	6122439	Symbol	argc		6121565						
ANR	6122440	Symbol	atoi		6121565						
ANR	6122441	Symbol	fopen		6121565						
ANR	6122442	Symbol	malloc		6121565						
ANR	6122443	Symbol	* * i		6121565						
ANR	6122444	Symbol	c		6121565						
ANR	6122445	Symbol	NULL		6121565						
ANR	6122446	Symbol	& next		6121565						
ANR	6122447	Symbol	convertHTMLcodes		6121565						
ANR	6122448	Symbol	_fileno		6121565						
ANR	6122449	Symbol	ofile		6121565						
ANR	6122450	Symbol	i		6121565						
ANR	6122451	Symbol	newstr		6121565						
ANR	6122452	Symbol	token		6121565						
ANR	6122453	Symbol	tokenizer		6121565						
ANR	6122454	Symbol	recnum		6121565						
ANR	6122455	Symbol	* i		6121565						
ANR	6122456	Symbol	s		6121565						
ANR	6122457	Symbol	* token		6121565						
ANR	6122458	Symbol	super_fgets		6121565						
ANR	6122459	Symbol	dataset		6121565						
ANR	6122460	DeclStmt									
ANR	6122461	Decl							int	int	_p_state
ANR	6122462	DeclStmt									
ANR	6122463	Decl							unsigned	unsigned	_p_flag
ANR	6122464	DeclStmt									
ANR	6122465	Decl							char	char	_p_curquote
ANR	6122466	DeclStmt									
ANR	6122467	Decl							int	int	_p_tokpos
ANR	6122468	Function	sindex	782:0:19048:19246							
ANR	6122469	FunctionDef	"sindex (char ch , char * string)"		6122468	0					
ANR	6122470	CompoundStatement		783:0:19081:19246	6122468	0					
ANR	6122471	IdentifierDeclStatement	char * cp ;	784:2:19085:19093	6122468	0	True				
ANR	6122472	IdentifierDecl	* cp		6122468	0					
ANR	6122473	IdentifierDeclType	char *		6122468	0					
ANR	6122474	Identifier	cp		6122468	1					
ANR	6122475	ForStatement	for ( cp = string ; * cp ; ++ cp )		6122468	1					
ANR	6122476	ForInit	cp = string ;	785:6:19101:19110	6122468	0	True				
ANR	6122477	AssignmentExpression	cp = string		6122468	0		=			
ANR	6122478	Identifier	cp		6122468	0					
ANR	6122479	Identifier	string		6122468	1					
ANR	6122480	Condition	* cp	785:16:19111:19113	6122468	1	True				
ANR	6122481	UnaryOperationExpression	* cp		6122468	0					
ANR	6122482	UnaryOperator	*		6122468	0					
ANR	6122483	Identifier	cp		6122468	1					
ANR	6122484	UnaryExpression	++ cp	785:20:19115:19118	6122468	2	True				
ANR	6122485	IncDec	++		6122468	0					
ANR	6122486	Identifier	cp		6122468	1					
ANR	6122487	IfStatement	if ( ch == * cp )		6122468	3					
ANR	6122488	Condition	ch == * cp	786:7:19128:19134	6122468	0	True				
ANR	6122489	EqualityExpression	ch == * cp		6122468	0		==			
ANR	6122490	Identifier	ch		6122468	0					
ANR	6122491	UnaryOperationExpression	* cp		6122468	1					
ANR	6122492	UnaryOperator	*		6122468	0					
ANR	6122493	Identifier	cp		6122468	1					
ANR	6122494	ReturnStatement	return ( int ) ( cp - string ) ;	787:6:19143:19166	6122468	1	True				
ANR	6122495	CastExpression	( int ) ( cp - string )		6122468	0					
ANR	6122496	CastTarget	int		6122468	0					
ANR	6122497	AdditiveExpression	cp - string		6122468	1		-			
ANR	6122498	Identifier	cp		6122468	0					
ANR	6122499	Identifier	string		6122468	1					
ANR	6122500	ReturnStatement	return - 1 ;	788:2:19204:19213	6122468	2	True				
ANR	6122501	UnaryOperationExpression	- 1		6122468	0					
ANR	6122502	UnaryOperator	-		6122468	0					
ANR	6122503	PrimaryExpression	1		6122468	1					
ANR	6122504	ReturnType	int		6122468	1					
ANR	6122505	Identifier	sindex		6122468	2					
ANR	6122506	ParameterList	"char ch , char * string"		6122468	3					
ANR	6122507	Parameter	char ch	782:11:19059:19065	6122468	0	True				
ANR	6122508	ParameterType	char		6122468	0					
ANR	6122509	Identifier	ch		6122468	1					
ANR	6122510	Parameter	char * string	782:19:19067:19078	6122468	1	True				
ANR	6122511	ParameterType	char *		6122468	0					
ANR	6122512	Identifier	string		6122468	1					
ANR	6122513	CFGEntryNode	ENTRY		6122468		True				
ANR	6122514	CFGExitNode	EXIT		6122468		True				
ANR	6122515	Symbol	* cp		6122468						
ANR	6122516	Symbol	string		6122468						
ANR	6122517	Symbol	ch		6122468						
ANR	6122518	Symbol	cp		6122468						
ANR	6122519	Function	chstore	793:0:19326:19846							
ANR	6122520	FunctionDef	"chstore (char * string , int max , char ch)"		6122519	0					
ANR	6122521	CompoundStatement		794:0:19369:19846	6122519	0					
ANR	6122522	IdentifierDeclStatement	char c ;	795:2:19373:19379	6122519	0	True				
ANR	6122523	IdentifierDecl	c		6122519	0					
ANR	6122524	IdentifierDeclType	char		6122519	0					
ANR	6122525	Identifier	c		6122519	1					
ANR	6122526	IfStatement	if ( _p_tokpos >= 0 && _p_tokpos < max - 1 )		6122519	1					
ANR	6122527	Condition	_p_tokpos >= 0 && _p_tokpos < max - 1	796:5:19386:19414	6122519	0	True				
ANR	6122528	AndExpression	_p_tokpos >= 0 && _p_tokpos < max - 1		6122519	0		&&			
ANR	6122529	RelationalExpression	_p_tokpos >= 0		6122519	0		>=			
ANR	6122530	Identifier	_p_tokpos		6122519	0					
ANR	6122531	PrimaryExpression	0		6122519	1					
ANR	6122532	RelationalExpression	_p_tokpos < max - 1		6122519	1		<			
ANR	6122533	Identifier	_p_tokpos		6122519	0					
ANR	6122534	AdditiveExpression	max - 1		6122519	1		-			
ANR	6122535	Identifier	max		6122519	0					
ANR	6122536	PrimaryExpression	1		6122519	1					
ANR	6122537	CompoundStatement		4:4:51:51	6122519	1					
ANR	6122538	IfStatement	if ( _p_state == IN_QUOTE )		6122519	0					
ANR	6122539	Condition	_p_state == IN_QUOTE	798:9:19432:19449	6122519	0	True				
ANR	6122540	EqualityExpression	_p_state == IN_QUOTE		6122519	0		==			
ANR	6122541	Identifier	_p_state		6122519	0					
ANR	6122542	Identifier	IN_QUOTE		6122519	1					
ANR	6122543	ExpressionStatement	c = ch	799:8:19460:19464	6122519	1	True				
ANR	6122544	AssignmentExpression	c = ch		6122519	0		=			
ANR	6122545	Identifier	c		6122519	0					
ANR	6122546	Identifier	ch		6122519	1					
ANR	6122547	ElseStatement	else		6122519	0					
ANR	6122548	SwitchStatement	switch ( _p_flag & 3 )		6122519	0					
ANR	6122549	Condition	_p_flag & 3	801:15:19492:19500	6122519	0	True				
ANR	6122550	BitAndExpression	_p_flag & 3		6122519	0		&			
ANR	6122551	Identifier	_p_flag		6122519	0					
ANR	6122552	PrimaryExpression	3		6122519	1					
ANR	6122553	CompoundStatement		9:10:143:143	6122519	1					
ANR	6122554	Label	case 1 :	803:10:19525:19531	6122519	0	True				
ANR	6122555	ExpressionStatement	c = toupper ( ( int ) ch )	804:12:19573:19592	6122519	1	True				
ANR	6122556	AssignmentExpression	c = toupper ( ( int ) ch )		6122519	0		=			
ANR	6122557	Identifier	c		6122519	0					
ANR	6122558	CallExpression	toupper ( ( int ) ch )		6122519	1					
ANR	6122559	Callee	toupper		6122519	0					
ANR	6122560	Identifier	toupper		6122519	0					
ANR	6122561	ArgumentList	( int ) ch		6122519	1					
ANR	6122562	Argument	( int ) ch		6122519	0					
ANR	6122563	CastExpression	( int ) ch		6122519	0					
ANR	6122564	CastTarget	int		6122519	0					
ANR	6122565	Identifier	ch		6122519	1					
ANR	6122566	BreakStatement	break ;	805:12:19606:19611	6122519	2	True				
ANR	6122567	Label	case 2 :	807:10:19624:19630	6122519	3	True				
ANR	6122568	ExpressionStatement	c = tolower ( ( int ) ch )	808:12:19672:19691	6122519	4	True				
ANR	6122569	AssignmentExpression	c = tolower ( ( int ) ch )		6122519	0		=			
ANR	6122570	Identifier	c		6122519	0					
ANR	6122571	CallExpression	tolower ( ( int ) ch )		6122519	1					
ANR	6122572	Callee	tolower		6122519	0					
ANR	6122573	Identifier	tolower		6122519	0					
ANR	6122574	ArgumentList	( int ) ch		6122519	1					
ANR	6122575	Argument	( int ) ch		6122519	0					
ANR	6122576	CastExpression	( int ) ch		6122519	0					
ANR	6122577	CastTarget	int		6122519	0					
ANR	6122578	Identifier	ch		6122519	1					
ANR	6122579	BreakStatement	break ;	809:12:19705:19710	6122519	5	True				
ANR	6122580	Label	default :	811:10:19723:19730	6122519	6	True				
ANR	6122581	Identifier	default		6122519	0					
ANR	6122582	ExpressionStatement	c = ch	812:12:19764:19768	6122519	7	True				
ANR	6122583	AssignmentExpression	c = ch		6122519	0		=			
ANR	6122584	Identifier	c		6122519	0					
ANR	6122585	Identifier	ch		6122519	1					
ANR	6122586	BreakStatement	break ;	813:12:19782:19787	6122519	8	True				
ANR	6122587	ExpressionStatement	string [ _p_tokpos ++ ] = c	815:6:19807:19828	6122519	1	True				
ANR	6122588	AssignmentExpression	string [ _p_tokpos ++ ] = c		6122519	0		=			
ANR	6122589	ArrayIndexing	string [ _p_tokpos ++ ]		6122519	0					
ANR	6122590	Identifier	string		6122519	0					
ANR	6122591	PostIncDecOperationExpression	_p_tokpos ++		6122519	1					
ANR	6122592	Identifier	_p_tokpos		6122519	0					
ANR	6122593	IncDec	++		6122519	1					
ANR	6122594	Identifier	c		6122519	1					
ANR	6122595	ReturnStatement	return ;	817:2:19838:19844	6122519	2	True				
ANR	6122596	ReturnType	void		6122519	1					
ANR	6122597	Identifier	chstore		6122519	2					
ANR	6122598	ParameterList	"char * string , int max , char ch"		6122519	3					
ANR	6122599	Parameter	char * string	793:13:19339:19350	6122519	0	True				
ANR	6122600	ParameterType	char *		6122519	0					
ANR	6122601	Identifier	string		6122519	1					
ANR	6122602	Parameter	int max	793:26:19352:19358	6122519	1	True				
ANR	6122603	ParameterType	int		6122519	0					
ANR	6122604	Identifier	max		6122519	1					
ANR	6122605	Parameter	char ch	793:34:19360:19366	6122519	2	True				
ANR	6122606	ParameterType	char		6122519	0					
ANR	6122607	Identifier	ch		6122519	1					
ANR	6122608	CFGEntryNode	ENTRY		6122519		True				
ANR	6122609	CFGExitNode	EXIT		6122519		True				
ANR	6122610	Symbol	c		6122519						
ANR	6122611	Symbol	_p_state		6122519						
ANR	6122612	Symbol	_p_flag		6122519						
ANR	6122613	Symbol	string		6122519						
ANR	6122614	Symbol	tolower		6122519						
ANR	6122615	Symbol	max		6122519						
ANR	6122616	Symbol	ch		6122519						
ANR	6122617	Symbol	toupper		6122519						
ANR	6122618	Symbol	IN_QUOTE		6122519						
ANR	6122619	Symbol	* string		6122519						
ANR	6122620	Symbol	_p_tokpos		6122519						
ANR	6122621	Function	tokenizer	820:0:19849:22987							
ANR	6122622	FunctionDef	"tokenizer (unsigned inflag , char * token , int tokmax , char * line , char * white , char * brkchar , char * quote , char eschar , char * brkused , int * next , char * quoted)"		6122621	0					
ANR	6122623	CompoundStatement		823:0:20031:22987	6122621	0					
ANR	6122624	IdentifierDeclStatement	int qp ;	824:2:20035:20041	6122621	0	True				
ANR	6122625	IdentifierDecl	qp		6122621	0					
ANR	6122626	IdentifierDeclType	int		6122621	0					
ANR	6122627	Identifier	qp		6122621	1					
ANR	6122628	IdentifierDeclStatement	"char c , nc ;"	825:2:20045:20054	6122621	1	True				
ANR	6122629	IdentifierDecl	c		6122621	0					
ANR	6122630	IdentifierDeclType	char		6122621	0					
ANR	6122631	Identifier	c		6122621	1					
ANR	6122632	IdentifierDecl	nc		6122621	1					
ANR	6122633	IdentifierDeclType	char		6122621	0					
ANR	6122634	Identifier	nc		6122621	1					
ANR	6122635	ExpressionStatement	* brkused = 0	827:2:20059:20069	6122621	2	True				
ANR	6122636	AssignmentExpression	* brkused = 0		6122621	0		=			
ANR	6122637	UnaryOperationExpression	* brkused		6122621	0					
ANR	6122638	UnaryOperator	*		6122621	0					
ANR	6122639	Identifier	brkused		6122621	1					
ANR	6122640	PrimaryExpression	0		6122621	1					
ANR	6122641	ExpressionStatement	* quoted = 0	828:2:20099:20108	6122621	3	True				
ANR	6122642	AssignmentExpression	* quoted = 0		6122621	0		=			
ANR	6122643	UnaryOperationExpression	* quoted		6122621	0					
ANR	6122644	UnaryOperator	*		6122621	0					
ANR	6122645	Identifier	quoted		6122621	1					
ANR	6122646	PrimaryExpression	0		6122621	1					
ANR	6122647	IfStatement	if ( ! line [ * next ] )		6122621	4					
ANR	6122648	Condition	! line [ * next ]	830:5:20142:20153	6122621	0	True				
ANR	6122649	UnaryOperationExpression	! line [ * next ]		6122621	0					
ANR	6122650	UnaryOperator	!		6122621	0					
ANR	6122651	ArrayIndexing	line [ * next ]		6122621	1					
ANR	6122652	Identifier	line		6122621	0					
ANR	6122653	UnaryOperationExpression	* next		6122621	1					
ANR	6122654	UnaryOperator	*		6122621	0					
ANR	6122655	Identifier	next		6122621	1					
ANR	6122656	ReturnStatement	return 1 ;	831:4:20205:20213	6122621	1	True				
ANR	6122657	PrimaryExpression	1		6122621	0					
ANR	6122658	ExpressionStatement	_p_state = IN_WHITE	833:2:20218:20235	6122621	5	True				
ANR	6122659	AssignmentExpression	_p_state = IN_WHITE		6122621	0		=			
ANR	6122660	Identifier	_p_state		6122621	0					
ANR	6122661	Identifier	IN_WHITE		6122621	1					
ANR	6122662	ExpressionStatement	_p_curquote = 0	834:2:20264:20277	6122621	6	True				
ANR	6122663	AssignmentExpression	_p_curquote = 0		6122621	0		=			
ANR	6122664	Identifier	_p_curquote		6122621	0					
ANR	6122665	PrimaryExpression	0		6122621	1					
ANR	6122666	ExpressionStatement	_p_flag = inflag	835:2:20321:20335	6122621	7	True				
ANR	6122667	AssignmentExpression	_p_flag = inflag		6122621	0		=			
ANR	6122668	Identifier	_p_flag		6122621	0					
ANR	6122669	Identifier	inflag		6122621	1					
ANR	6122670	ForStatement	for ( _p_tokpos = 0 ; ( c = line [ * next ] ) ; ++ ( * next ) )		6122621	8					
ANR	6122671	ForInit	_p_tokpos = 0 ;	837:6:20369:20380	6122621	0	True				
ANR	6122672	AssignmentExpression	_p_tokpos = 0		6122621	0		=			
ANR	6122673	Identifier	_p_tokpos		6122621	0					
ANR	6122674	PrimaryExpression	0		6122621	1					
ANR	6122675	Condition	c = line [ * next ]	837:18:20381:20395	6122621	1	True				
ANR	6122676	AssignmentExpression	c = line [ * next ]		6122621	0		=			
ANR	6122677	Identifier	c		6122621	0					
ANR	6122678	ArrayIndexing	line [ * next ]		6122621	1					
ANR	6122679	Identifier	line		6122621	0					
ANR	6122680	UnaryOperationExpression	* next		6122621	1					
ANR	6122681	UnaryOperator	*		6122621	0					
ANR	6122682	Identifier	next		6122621	1					
ANR	6122683	UnaryExpression	++ ( * next )	837:34:20397:20405	6122621	2	True				
ANR	6122684	IncDec	++		6122621	0					
ANR	6122685	UnaryOperationExpression	* next		6122621	1					
ANR	6122686	UnaryOperator	*		6122621	0					
ANR	6122687	Identifier	next		6122621	1					
ANR	6122688	CompoundStatement		16:4:396:396	6122621	3					
ANR	6122689	IfStatement	"if ( ( qp = sindex ( c , brkchar ) ) >= 0 )"		6122621	0					
ANR	6122690	Condition	"( qp = sindex ( c , brkchar ) ) >= 0"	839:9:20439:20463	6122621	0	True				
ANR	6122691	RelationalExpression	"( qp = sindex ( c , brkchar ) ) >= 0"		6122621	0		>=			
ANR	6122692	AssignmentExpression	"qp = sindex ( c , brkchar )"		6122621	0		=			
ANR	6122693	Identifier	qp		6122621	0					
ANR	6122694	CallExpression	"sindex ( c , brkchar )"		6122621	1					
ANR	6122695	Callee	sindex		6122621	0					
ANR	6122696	Identifier	sindex		6122621	0					
ANR	6122697	ArgumentList	c		6122621	1					
ANR	6122698	Argument	c		6122621	0					
ANR	6122699	Identifier	c		6122621	0					
ANR	6122700	Argument	brkchar		6122621	1					
ANR	6122701	Identifier	brkchar		6122621	0					
ANR	6122702	PrimaryExpression	0		6122621	1					
ANR	6122703	CompoundStatement		18:8:455:455	6122621	1					
ANR	6122704	SwitchStatement	switch ( _p_state )		6122621	0					
ANR	6122705	Condition	_p_state	841:17:20506:20513	6122621	0	True				
ANR	6122706	Identifier	_p_state		6122621	0					
ANR	6122707	CompoundStatement		20:12:496:496	6122621	1					
ANR	6122708	Label	case IN_WHITE :	843:5:20535:20548	6122621	0	True				
ANR	6122709	Identifier	IN_WHITE		6122621	0					
ANR	6122710	Label	case IN_TOKEN :	844:5:20590:20603	6122621	1	True				
ANR	6122711	Identifier	IN_TOKEN		6122621	0					
ANR	6122712	Label	case IN_OZONE :	845:5:20635:20648	6122621	2	True				
ANR	6122713	Identifier	IN_OZONE		6122621	0					
ANR	6122714	ExpressionStatement	++ ( * next )	846:7:20672:20681	6122621	3	True				
ANR	6122715	UnaryExpression	++ ( * next )		6122621	0					
ANR	6122716	IncDec	++		6122621	0					
ANR	6122717	UnaryOperationExpression	* next		6122621	1					
ANR	6122718	UnaryOperator	*		6122621	0					
ANR	6122719	Identifier	next		6122621	1					
ANR	6122720	ExpressionStatement	* brkused = brkchar [ qp ]	847:7:20690:20710	6122621	4	True				
ANR	6122721	AssignmentExpression	* brkused = brkchar [ qp ]		6122621	0		=			
ANR	6122722	UnaryOperationExpression	* brkused		6122621	0					
ANR	6122723	UnaryOperator	*		6122621	0					
ANR	6122724	Identifier	brkused		6122621	1					
ANR	6122725	ArrayIndexing	brkchar [ qp ]		6122621	1					
ANR	6122726	Identifier	brkchar		6122621	0					
ANR	6122727	Identifier	qp		6122621	1					
ANR	6122728	GotoStatement	goto byebye ;	848:7:20719:20730	6122621	5	True				
ANR	6122729	Identifier	byebye		6122621	0					
ANR	6122730	Label	case IN_QUOTE :	850:5:20738:20751	6122621	6	True				
ANR	6122731	Identifier	IN_QUOTE		6122621	0					
ANR	6122732	ExpressionStatement	"chstore ( token , tokmax , c )"	851:7:20784:20807	6122621	7	True				
ANR	6122733	CallExpression	"chstore ( token , tokmax , c )"		6122621	0					
ANR	6122734	Callee	chstore		6122621	0					
ANR	6122735	Identifier	chstore		6122621	0					
ANR	6122736	ArgumentList	token		6122621	1					
ANR	6122737	Argument	token		6122621	0					
ANR	6122738	Identifier	token		6122621	0					
ANR	6122739	Argument	tokmax		6122621	1					
ANR	6122740	Identifier	tokmax		6122621	0					
ANR	6122741	Argument	c		6122621	2					
ANR	6122742	Identifier	c		6122621	0					
ANR	6122743	BreakStatement	break ;	852:7:20816:20821	6122621	8	True				
ANR	6122744	ElseStatement	else		6122621	0					
ANR	6122745	IfStatement	"if ( ( qp = sindex ( c , quote ) ) >= 0 )"		6122621	0					
ANR	6122746	Condition	"( qp = sindex ( c , quote ) ) >= 0"	855:14:20861:20883	6122621	0	True				
ANR	6122747	RelationalExpression	"( qp = sindex ( c , quote ) ) >= 0"		6122621	0		>=			
ANR	6122748	AssignmentExpression	"qp = sindex ( c , quote )"		6122621	0		=			
ANR	6122749	Identifier	qp		6122621	0					
ANR	6122750	CallExpression	"sindex ( c , quote )"		6122621	1					
ANR	6122751	Callee	sindex		6122621	0					
ANR	6122752	Identifier	sindex		6122621	0					
ANR	6122753	ArgumentList	c		6122621	1					
ANR	6122754	Argument	c		6122621	0					
ANR	6122755	Identifier	c		6122621	0					
ANR	6122756	Argument	quote		6122621	1					
ANR	6122757	Identifier	quote		6122621	0					
ANR	6122758	PrimaryExpression	0		6122621	1					
ANR	6122759	CompoundStatement		34:8:875:875	6122621	1					
ANR	6122760	SwitchStatement	switch ( _p_state )		6122621	0					
ANR	6122761	Condition	_p_state	857:17:20926:20933	6122621	0	True				
ANR	6122762	Identifier	_p_state		6122621	0					
ANR	6122763	CompoundStatement		36:12:916:916	6122621	1					
ANR	6122764	Label	case IN_WHITE :	859:5:20955:20968	6122621	0	True				
ANR	6122765	Identifier	IN_WHITE		6122621	0					
ANR	6122766	ExpressionStatement	_p_state = IN_QUOTE	860:7:21005:21022	6122621	1	True				
ANR	6122767	AssignmentExpression	_p_state = IN_QUOTE		6122621	0		=			
ANR	6122768	Identifier	_p_state		6122621	0					
ANR	6122769	Identifier	IN_QUOTE		6122621	1					
ANR	6122770	ExpressionStatement	_p_curquote = quote [ qp ]	861:7:21053:21074	6122621	2	True				
ANR	6122771	AssignmentExpression	_p_curquote = quote [ qp ]		6122621	0		=			
ANR	6122772	Identifier	_p_curquote		6122621	0					
ANR	6122773	ArrayIndexing	quote [ qp ]		6122621	1					
ANR	6122774	Identifier	quote		6122621	0					
ANR	6122775	Identifier	qp		6122621	1					
ANR	6122776	ExpressionStatement	* quoted = 1	862:7:21105:21114	6122621	3	True				
ANR	6122777	AssignmentExpression	* quoted = 1		6122621	0		=			
ANR	6122778	UnaryOperationExpression	* quoted		6122621	0					
ANR	6122779	UnaryOperator	*		6122621	0					
ANR	6122780	Identifier	quoted		6122621	1					
ANR	6122781	PrimaryExpression	1		6122621	1					
ANR	6122782	BreakStatement	break ;	863:7:21175:21180	6122621	4	True				
ANR	6122783	Label	case IN_QUOTE :	865:5:21188:21201	6122621	5	True				
ANR	6122784	Identifier	IN_QUOTE		6122621	0					
ANR	6122785	IfStatement	if ( quote [ qp ] == _p_curquote )		6122621	6					
ANR	6122786	Condition	quote [ qp ] == _p_curquote	866:10:21213:21234	6122621	0	True				
ANR	6122787	EqualityExpression	quote [ qp ] == _p_curquote		6122621	0		==			
ANR	6122788	ArrayIndexing	quote [ qp ]		6122621	0					
ANR	6122789	Identifier	quote		6122621	0					
ANR	6122790	Identifier	qp		6122621	1					
ANR	6122791	Identifier	_p_curquote		6122621	1					
ANR	6122792	CompoundStatement		45:16:1256:1256	6122621	1					
ANR	6122793	ExpressionStatement	_p_state = IN_OZONE	868:18:21308:21325	6122621	0	True				
ANR	6122794	AssignmentExpression	_p_state = IN_OZONE		6122621	0		=			
ANR	6122795	Identifier	_p_state		6122621	0					
ANR	6122796	Identifier	IN_OZONE		6122621	1					
ANR	6122797	ExpressionStatement	_p_curquote = 0	869:18:21345:21358	6122621	1	True				
ANR	6122798	AssignmentExpression	_p_curquote = 0		6122621	0		=			
ANR	6122799	Identifier	_p_curquote		6122621	0					
ANR	6122800	PrimaryExpression	0		6122621	1					
ANR	6122801	ElseStatement	else		6122621	0					
ANR	6122802	ExpressionStatement	"chstore ( token , tokmax , c )"	872:9:21399:21422	6122621	0	True				
ANR	6122803	CallExpression	"chstore ( token , tokmax , c )"		6122621	0					
ANR	6122804	Callee	chstore		6122621	0					
ANR	6122805	Identifier	chstore		6122621	0					
ANR	6122806	ArgumentList	token		6122621	1					
ANR	6122807	Argument	token		6122621	0					
ANR	6122808	Identifier	token		6122621	0					
ANR	6122809	Argument	tokmax		6122621	1					
ANR	6122810	Identifier	tokmax		6122621	0					
ANR	6122811	Argument	c		6122621	2					
ANR	6122812	Identifier	c		6122621	0					
ANR	6122813	BreakStatement	break ;	873:7:21459:21464	6122621	7	True				
ANR	6122814	Label	case IN_TOKEN :	875:5:21472:21485	6122621	8	True				
ANR	6122815	Identifier	IN_TOKEN		6122621	0					
ANR	6122816	Label	case IN_OZONE :	876:5:21492:21505	6122621	9	True				
ANR	6122817	Identifier	IN_OZONE		6122621	0					
ANR	6122818	ExpressionStatement	* brkused = c	877:7:21514:21524	6122621	10	True				
ANR	6122819	AssignmentExpression	* brkused = c		6122621	0		=			
ANR	6122820	UnaryOperationExpression	* brkused		6122621	0					
ANR	6122821	UnaryOperator	*		6122621	0					
ANR	6122822	Identifier	brkused		6122621	1					
ANR	6122823	Identifier	c		6122621	1					
ANR	6122824	GotoStatement	goto byebye ;	878:7:21564:21575	6122621	11	True				
ANR	6122825	Identifier	byebye		6122621	0					
ANR	6122826	ElseStatement	else		6122621	0					
ANR	6122827	IfStatement	"if ( ( qp = sindex ( c , white ) ) >= 0 )"		6122621	0					
ANR	6122828	Condition	"( qp = sindex ( c , white ) ) >= 0"	881:14:21615:21637	6122621	0	True				
ANR	6122829	RelationalExpression	"( qp = sindex ( c , white ) ) >= 0"		6122621	0		>=			
ANR	6122830	AssignmentExpression	"qp = sindex ( c , white )"		6122621	0		=			
ANR	6122831	Identifier	qp		6122621	0					
ANR	6122832	CallExpression	"sindex ( c , white )"		6122621	1					
ANR	6122833	Callee	sindex		6122621	0					
ANR	6122834	Identifier	sindex		6122621	0					
ANR	6122835	ArgumentList	c		6122621	1					
ANR	6122836	Argument	c		6122621	0					
ANR	6122837	Identifier	c		6122621	0					
ANR	6122838	Argument	white		6122621	1					
ANR	6122839	Identifier	white		6122621	0					
ANR	6122840	PrimaryExpression	0		6122621	1					
ANR	6122841	CompoundStatement		60:8:1628:1628	6122621	1					
ANR	6122842	SwitchStatement	switch ( _p_state )		6122621	0					
ANR	6122843	Condition	_p_state	883:17:21679:21686	6122621	0	True				
ANR	6122844	Identifier	_p_state		6122621	0					
ANR	6122845	CompoundStatement		62:12:1669:1669	6122621	1					
ANR	6122846	Label	case IN_WHITE :	885:5:21708:21721	6122621	0	True				
ANR	6122847	Identifier	IN_WHITE		6122621	0					
ANR	6122848	Label	case IN_OZONE :	886:5:21728:21741	6122621	1	True				
ANR	6122849	Identifier	IN_OZONE		6122621	0					
ANR	6122850	BreakStatement	break ;	887:7:21750:21755	6122621	2	True				
ANR	6122851	Label	case IN_TOKEN :	889:5:21781:21794	6122621	3	True				
ANR	6122852	Identifier	IN_TOKEN		6122621	0					
ANR	6122853	ExpressionStatement	_p_state = IN_OZONE	890:7:21803:21820	6122621	4	True				
ANR	6122854	AssignmentExpression	_p_state = IN_OZONE		6122621	0		=			
ANR	6122855	Identifier	_p_state		6122621	0					
ANR	6122856	Identifier	IN_OZONE		6122621	1					
ANR	6122857	BreakStatement	break ;	891:7:21829:21834	6122621	5	True				
ANR	6122858	Label	case IN_QUOTE :	893:5:21842:21855	6122621	6	True				
ANR	6122859	Identifier	IN_QUOTE		6122621	0					
ANR	6122860	ExpressionStatement	"chstore ( token , tokmax , c )"	894:7:21864:21887	6122621	7	True				
ANR	6122861	CallExpression	"chstore ( token , tokmax , c )"		6122621	0					
ANR	6122862	Callee	chstore		6122621	0					
ANR	6122863	Identifier	chstore		6122621	0					
ANR	6122864	ArgumentList	token		6122621	1					
ANR	6122865	Argument	token		6122621	0					
ANR	6122866	Identifier	token		6122621	0					
ANR	6122867	Argument	tokmax		6122621	1					
ANR	6122868	Identifier	tokmax		6122621	0					
ANR	6122869	Argument	c		6122621	2					
ANR	6122870	Identifier	c		6122621	0					
ANR	6122871	BreakStatement	break ;	895:7:21918:21923	6122621	8	True				
ANR	6122872	ElseStatement	else		6122621	0					
ANR	6122873	IfStatement	if ( c == eschar )		6122621	0					
ANR	6122874	Condition	c == eschar	898:14:21963:21971	6122621	0	True				
ANR	6122875	EqualityExpression	c == eschar		6122621	0		==			
ANR	6122876	Identifier	c		6122621	0					
ANR	6122877	Identifier	eschar		6122621	1					
ANR	6122878	CompoundStatement		77:8:1964:1964	6122621	1					
ANR	6122879	ExpressionStatement	nc = line [ ( * next ) + 1 ]	900:10:22008:22026	6122621	0	True				
ANR	6122880	AssignmentExpression	nc = line [ ( * next ) + 1 ]		6122621	0		=			
ANR	6122881	Identifier	nc		6122621	0					
ANR	6122882	ArrayIndexing	line [ ( * next ) + 1 ]		6122621	1					
ANR	6122883	Identifier	line		6122621	0					
ANR	6122884	AdditiveExpression	( * next ) + 1		6122621	1		+			
ANR	6122885	UnaryOperationExpression	* next		6122621	0					
ANR	6122886	UnaryOperator	*		6122621	0					
ANR	6122887	Identifier	next		6122621	1					
ANR	6122888	PrimaryExpression	1		6122621	1					
ANR	6122889	IfStatement	if ( nc == 0 )		6122621	1					
ANR	6122890	Condition	nc == 0	901:13:22041:22045	6122621	0	True				
ANR	6122891	EqualityExpression	nc == 0		6122621	0		==			
ANR	6122892	Identifier	nc		6122621	0					
ANR	6122893	PrimaryExpression	0		6122621	1					
ANR	6122894	CompoundStatement		80:12:2048:2048	6122621	1					
ANR	6122895	ExpressionStatement	* brkused = 0	903:14:22096:22106	6122621	0	True				
ANR	6122896	AssignmentExpression	* brkused = 0		6122621	0		=			
ANR	6122897	UnaryOperationExpression	* brkused		6122621	0					
ANR	6122898	UnaryOperator	*		6122621	0					
ANR	6122899	Identifier	brkused		6122621	1					
ANR	6122900	PrimaryExpression	0		6122621	1					
ANR	6122901	ExpressionStatement	"chstore ( token , tokmax , c )"	904:14:22122:22145	6122621	1	True				
ANR	6122902	CallExpression	"chstore ( token , tokmax , c )"		6122621	0					
ANR	6122903	Callee	chstore		6122621	0					
ANR	6122904	Identifier	chstore		6122621	0					
ANR	6122905	ArgumentList	token		6122621	1					
ANR	6122906	Argument	token		6122621	0					
ANR	6122907	Identifier	token		6122621	0					
ANR	6122908	Argument	tokmax		6122621	1					
ANR	6122909	Identifier	tokmax		6122621	0					
ANR	6122910	Argument	c		6122621	2					
ANR	6122911	Identifier	c		6122621	0					
ANR	6122912	ExpressionStatement	++ ( * next )	905:14:22161:22170	6122621	2	True				
ANR	6122913	UnaryExpression	++ ( * next )		6122621	0					
ANR	6122914	IncDec	++		6122621	0					
ANR	6122915	UnaryOperationExpression	* next		6122621	1					
ANR	6122916	UnaryOperator	*		6122621	0					
ANR	6122917	Identifier	next		6122621	1					
ANR	6122918	GotoStatement	goto byebye ;	906:14:22186:22197	6122621	3	True				
ANR	6122919	Identifier	byebye		6122621	0					
ANR	6122920	SwitchStatement	switch ( _p_state )		6122621	2					
ANR	6122921	Condition	_p_state	908:17:22230:22237	6122621	0	True				
ANR	6122922	Identifier	_p_state		6122621	0					
ANR	6122923	CompoundStatement		87:12:2220:2220	6122621	1					
ANR	6122924	Label	case IN_WHITE :	910:5:22259:22272	6122621	0	True				
ANR	6122925	Identifier	IN_WHITE		6122621	0					
ANR	6122926	ExpressionStatement	-- ( * next )	911:7:22281:22290	6122621	1	True				
ANR	6122927	UnaryExpression	-- ( * next )		6122621	0					
ANR	6122928	IncDec	--		6122621	0					
ANR	6122929	UnaryOperationExpression	* next		6122621	1					
ANR	6122930	UnaryOperator	*		6122621	0					
ANR	6122931	Identifier	next		6122621	1					
ANR	6122932	ExpressionStatement	_p_state = IN_TOKEN	912:7:22299:22316	6122621	2	True				
ANR	6122933	AssignmentExpression	_p_state = IN_TOKEN		6122621	0		=			
ANR	6122934	Identifier	_p_state		6122621	0					
ANR	6122935	Identifier	IN_TOKEN		6122621	1					
ANR	6122936	BreakStatement	break ;	913:7:22325:22330	6122621	3	True				
ANR	6122937	Label	case IN_TOKEN :	915:5:22338:22351	6122621	4	True				
ANR	6122938	Identifier	IN_TOKEN		6122621	0					
ANR	6122939	Label	case IN_QUOTE :	916:5:22358:22371	6122621	5	True				
ANR	6122940	Identifier	IN_QUOTE		6122621	0					
ANR	6122941	ExpressionStatement	++ ( * next )	917:7:22380:22389	6122621	6	True				
ANR	6122942	UnaryExpression	++ ( * next )		6122621	0					
ANR	6122943	IncDec	++		6122621	0					
ANR	6122944	UnaryOperationExpression	* next		6122621	1					
ANR	6122945	UnaryOperator	*		6122621	0					
ANR	6122946	Identifier	next		6122621	1					
ANR	6122947	ExpressionStatement	"chstore ( token , tokmax , nc )"	918:7:22398:22422	6122621	7	True				
ANR	6122948	CallExpression	"chstore ( token , tokmax , nc )"		6122621	0					
ANR	6122949	Callee	chstore		6122621	0					
ANR	6122950	Identifier	chstore		6122621	0					
ANR	6122951	ArgumentList	token		6122621	1					
ANR	6122952	Argument	token		6122621	0					
ANR	6122953	Identifier	token		6122621	0					
ANR	6122954	Argument	tokmax		6122621	1					
ANR	6122955	Identifier	tokmax		6122621	0					
ANR	6122956	Argument	nc		6122621	2					
ANR	6122957	Identifier	nc		6122621	0					
ANR	6122958	BreakStatement	break ;	919:7:22431:22436	6122621	8	True				
ANR	6122959	Label	case IN_OZONE :	921:5:22444:22457	6122621	9	True				
ANR	6122960	Identifier	IN_OZONE		6122621	0					
ANR	6122961	GotoStatement	goto byebye ;	922:7:22466:22477	6122621	10	True				
ANR	6122962	Identifier	byebye		6122621	0					
ANR	6122963	ElseStatement	else		6122621	0					
ANR	6122964	CompoundStatement		104:8:2535:2535	6122621	0					
ANR	6122965	SwitchStatement	switch ( _p_state )		6122621	0					
ANR	6122966	Condition	_p_state	927:17:22586:22593	6122621	0	True				
ANR	6122967	Identifier	_p_state		6122621	0					
ANR	6122968	CompoundStatement		106:12:2576:2576	6122621	1					
ANR	6122969	Label	case IN_WHITE :	929:5:22615:22628	6122621	0	True				
ANR	6122970	Identifier	IN_WHITE		6122621	0					
ANR	6122971	ExpressionStatement	_p_state = IN_TOKEN	930:7:22637:22654	6122621	1	True				
ANR	6122972	AssignmentExpression	_p_state = IN_TOKEN		6122621	0		=			
ANR	6122973	Identifier	_p_state		6122621	0					
ANR	6122974	Identifier	IN_TOKEN		6122621	1					
ANR	6122975	Label	case IN_TOKEN :	932:5:22682:22695	6122621	2	True				
ANR	6122976	Identifier	IN_TOKEN		6122621	0					
ANR	6122977	Label	case IN_QUOTE :	933:5:22726:22739	6122621	3	True				
ANR	6122978	Identifier	IN_QUOTE		6122621	0					
ANR	6122979	ExpressionStatement	"chstore ( token , tokmax , c )"	934:7:22772:22795	6122621	4	True				
ANR	6122980	CallExpression	"chstore ( token , tokmax , c )"		6122621	0					
ANR	6122981	Callee	chstore		6122621	0					
ANR	6122982	Identifier	chstore		6122621	0					
ANR	6122983	ArgumentList	token		6122621	1					
ANR	6122984	Argument	token		6122621	0					
ANR	6122985	Identifier	token		6122621	0					
ANR	6122986	Argument	tokmax		6122621	1					
ANR	6122987	Identifier	tokmax		6122621	0					
ANR	6122988	Argument	c		6122621	2					
ANR	6122989	Identifier	c		6122621	0					
ANR	6122990	BreakStatement	break ;	935:7:22804:22809	6122621	5	True				
ANR	6122991	Label	case IN_OZONE :	937:5:22817:22830	6122621	6	True				
ANR	6122992	Identifier	IN_OZONE		6122621	0					
ANR	6122993	GotoStatement	goto byebye ;	938:7:22839:22850	6122621	7	True				
ANR	6122994	Identifier	byebye		6122621	0					
ANR	6122995	Label	byebye :	943:1:22908:22914	6122621	9	True				
ANR	6122996	Identifier	byebye		6122621	0					
ANR	6122997	ExpressionStatement	token [ _p_tokpos ] = 0	944:2:22918:22936	6122621	10	True				
ANR	6122998	AssignmentExpression	token [ _p_tokpos ] = 0		6122621	0		=			
ANR	6122999	ArrayIndexing	token [ _p_tokpos ]		6122621	0					
ANR	6123000	Identifier	token		6122621	0					
ANR	6123001	Identifier	_p_tokpos		6122621	1					
ANR	6123002	PrimaryExpression	0		6122621	1					
ANR	6123003	ReturnStatement	return 0 ;	946:2:22977:22985	6122621	11	True				
ANR	6123004	PrimaryExpression	0		6122621	0					
ANR	6123005	ReturnType	int		6122621	1					
ANR	6123006	Identifier	tokenizer		6122621	2					
ANR	6123007	ParameterList	"unsigned inflag , char * token , int tokmax , char * line , char * white , char * brkchar , char * quote , char eschar , char * brkused , int * next , char * quoted"		6122621	3					
ANR	6123008	Parameter	unsigned inflag	820:14:19863:19877	6122621	0	True				
ANR	6123009	ParameterType	unsigned		6122621	0					
ANR	6123010	Identifier	inflag		6122621	1					
ANR	6123011	Parameter	char * token	820:30:19879:19889	6122621	1	True				
ANR	6123012	ParameterType	char *		6122621	0					
ANR	6123013	Identifier	token		6122621	1					
ANR	6123014	Parameter	int tokmax	820:42:19891:19900	6122621	2	True				
ANR	6123015	ParameterType	int		6122621	0					
ANR	6123016	Identifier	tokmax		6122621	1					
ANR	6123017	Parameter	char * line	820:53:19902:19911	6122621	3	True				
ANR	6123018	ParameterType	char *		6122621	0					
ANR	6123019	Identifier	line		6122621	1					
ANR	6123020	Parameter	char * white	821:14:19928:19938	6122621	4	True				
ANR	6123021	ParameterType	char *		6122621	0					
ANR	6123022	Identifier	white		6122621	1					
ANR	6123023	Parameter	char * brkchar	821:26:19940:19952	6122621	5	True				
ANR	6123024	ParameterType	char *		6122621	0					
ANR	6123025	Identifier	brkchar		6122621	1					
ANR	6123026	Parameter	char * quote	821:40:19954:19964	6122621	6	True				
ANR	6123027	ParameterType	char *		6122621	0					
ANR	6123028	Identifier	quote		6122621	1					
ANR	6123029	Parameter	char eschar	821:52:19966:19976	6122621	7	True				
ANR	6123030	ParameterType	char		6122621	0					
ANR	6123031	Identifier	eschar		6122621	1					
ANR	6123032	Parameter	char * brkused	821:64:19978:19990	6122621	8	True				
ANR	6123033	ParameterType	char *		6122621	0					
ANR	6123034	Identifier	brkused		6122621	1					
ANR	6123035	Parameter	int * next	822:14:20007:20015	6122621	9	True				
ANR	6123036	ParameterType	int *		6122621	0					
ANR	6123037	Identifier	next		6122621	1					
ANR	6123038	Parameter	char * quoted	822:24:20017:20028	6122621	10	True				
ANR	6123039	ParameterType	char *		6122621	0					
ANR	6123040	Identifier	quoted		6122621	1					
ANR	6123041	CFGEntryNode	ENTRY		6122621		True				
ANR	6123042	CFGExitNode	EXIT		6122621		True				
ANR	6123043	Symbol	next		6122621						
ANR	6123044	Symbol	_p_flag		6122621						
ANR	6123045	Symbol	IN_TOKEN		6122621						
ANR	6123046	Symbol	* * next		6122621						
ANR	6123047	Symbol	line		6122621						
ANR	6123048	Symbol	* qp		6122621						
ANR	6123049	Symbol	* brkused		6122621						
ANR	6123050	Symbol	sindex		6122621						
ANR	6123051	Symbol	* next		6122621						
ANR	6123052	Symbol	* line		6122621						
ANR	6123053	Symbol	IN_WHITE		6122621						
ANR	6123054	Symbol	_p_tokpos		6122621						
ANR	6123055	Symbol	brkchar		6122621						
ANR	6123056	Symbol	quoted		6122621						
ANR	6123057	Symbol	* _p_tokpos		6122621						
ANR	6123058	Symbol	quote		6122621						
ANR	6123059	Symbol	tokmax		6122621						
ANR	6123060	Symbol	white		6122621						
ANR	6123061	Symbol	* quote		6122621						
ANR	6123062	Symbol	IN_QUOTE		6122621						
ANR	6123063	Symbol	eschar		6122621						
ANR	6123064	Symbol	IN_OZONE		6122621						
ANR	6123065	Symbol	brkused		6122621						
ANR	6123066	Symbol	qp		6122621						
ANR	6123067	Symbol	_p_curquote		6122621						
ANR	6123068	Symbol	c		6122621						
ANR	6123069	Symbol	* brkchar		6122621						
ANR	6123070	Symbol	token		6122621						
ANR	6123071	Symbol	* quoted		6122621						
ANR	6123072	Symbol	_p_state		6122621						
ANR	6123073	Symbol	* token		6122621						
ANR	6123074	Symbol	nc		6122621						
ANR	6123075	Symbol	inflag		6122621						
