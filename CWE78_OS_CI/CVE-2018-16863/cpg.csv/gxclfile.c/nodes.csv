command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5404687	File	data/converged/CVE-2018-16863_ghostpdl/gxclfile.c								
ANR	5404688	DeclStmt									
ANR	5404689	Decl							clist_io_procs_t	clist_io_procs_t	clist_io_procs_file
ANR	5404690	ClassDef	<unnamed>	42:8:1185:1247							
ANR	5404691	DeclStmt									
ANR	5404692	Decl							int64_t	int64_t	blocknum
ANR	5404693	DeclStmt									
ANR	5404694	Decl							byte	byte *	base
ANR	5404695	DeclStmt									
ANR	5404696	Decl									CL_CACHE_SLOT
ANR	5404697	ClassDef	<unnamed>	48:8:1258:1541							
ANR	5404698	DeclStmt									
ANR	5404699	Decl							int	int	block_size
ANR	5404700	DeclStmt									
ANR	5404701	Decl							int	int	nslots
ANR	5404702	DeclStmt									
ANR	5404703	Decl							int64_t	int64_t	filesize
ANR	5404704	DeclStmt									
ANR	5404705	Decl							gs_memory_t	gs_memory_t *	memory
ANR	5404706	DeclStmt									
ANR	5404707	Decl							CL_CACHE_SLOT	CL_CACHE_SLOT *	slots
ANR	5404708	DeclStmt									
ANR	5404709	Decl							byte	byte *	base
ANR	5404710	DeclStmt									
ANR	5404711	Decl									CL_CACHE
ANR	5404712	DeclStmt									
ANR	5404713	Decl							CL_CACHE	CL_CACHE * ( gs_memory_t * mem )	cl_cache_alloc
ANR	5404714	DeclStmt									
ANR	5404715	Decl							void	void ( CL_CACHE * cache )	cl_cache_destroy
ANR	5404716	DeclStmt									
ANR	5404717	Decl							CL_CACHE	"CL_CACHE * ( CL_CACHE * cache , int nslots , int64_t block_size , int64_t filesize )"	cl_cache_read_init
ANR	5404718	DeclStmt									
ANR	5404719	Decl							int	"int ( byte * data , int len , int64_t pos , CL_CACHE * cache )"	cl_cache_read
ANR	5404720	DeclStmt									
ANR	5404721	Decl							CL_CACHE_SLOT	"CL_CACHE_SLOT * ( CL_CACHE * cache , int64_t pos )"	cl_cache_get_empty_slot
ANR	5404722	DeclStmt									
ANR	5404723	Decl							void	"void ( CL_CACHE * cache , CL_CACHE_SLOT * slot , int64_t pos , byte * data , int len )"	cl_cache_load_slot
ANR	5404724	Function	cl_cache_alloc	68:0:2065:2524							
ANR	5404725	FunctionDef	cl_cache_alloc (gs_memory_t * mem)		5404724	0					
ANR	5404726	CompoundStatement		70:0:2109:2524	5404724	0					
ANR	5404727	IdentifierDeclStatement	CL_CACHE * cache ;	71:4:2115:2130	5404724	0	True				
ANR	5404728	IdentifierDecl	* cache		5404724	0					
ANR	5404729	IdentifierDeclType	CL_CACHE *		5404724	0					
ANR	5404730	Identifier	cache		5404724	1					
ANR	5404731	ExpressionStatement	"cache = ( CL_CACHE * ) gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"	74:4:2225:2300	5404724	1	True				
ANR	5404732	AssignmentExpression	"cache = ( CL_CACHE * ) gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"		5404724	0		=			
ANR	5404733	Identifier	cache		5404724	0					
ANR	5404734	CastExpression	"( CL_CACHE * ) gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"		5404724	1					
ANR	5404735	CastTarget	CL_CACHE *		5404724	0					
ANR	5404736	CallExpression	"gs_alloc_bytes ( mem , sizeof ( CL_CACHE ) , ""alloc CL_CACHE"" )"		5404724	1					
ANR	5404737	Callee	gs_alloc_bytes		5404724	0					
ANR	5404738	Identifier	gs_alloc_bytes		5404724	0					
ANR	5404739	ArgumentList	mem		5404724	1					
ANR	5404740	Argument	mem		5404724	0					
ANR	5404741	Identifier	mem		5404724	0					
ANR	5404742	Argument	sizeof ( CL_CACHE )		5404724	1					
ANR	5404743	SizeofExpression	sizeof ( CL_CACHE )		5404724	0					
ANR	5404744	Sizeof	sizeof		5404724	0					
ANR	5404745	SizeofOperand	CL_CACHE		5404724	1					
ANR	5404746	Argument	"""alloc CL_CACHE"""		5404724	2					
ANR	5404747	PrimaryExpression	"""alloc CL_CACHE"""		5404724	0					
ANR	5404748	IfStatement	if ( cache != NULL )		5404724	2					
ANR	5404749	Condition	cache != NULL	75:8:2310:2322	5404724	0	True				
ANR	5404750	EqualityExpression	cache != NULL		5404724	0		!=			
ANR	5404751	Identifier	cache		5404724	0					
ANR	5404752	Identifier	NULL		5404724	1					
ANR	5404753	CompoundStatement		6:23:215:215	5404724	1					
ANR	5404754	ExpressionStatement	cache -> filesize = 0	76:8:2335:2354	5404724	0	True				
ANR	5404755	AssignmentExpression	cache -> filesize = 0		5404724	0		=			
ANR	5404756	PtrMemberAccess	cache -> filesize		5404724	0					
ANR	5404757	Identifier	cache		5404724	0					
ANR	5404758	Identifier	filesize		5404724	1					
ANR	5404759	PrimaryExpression	0		5404724	1					
ANR	5404760	ExpressionStatement	cache -> nslots = 0	77:8:2364:2381	5404724	1	True				
ANR	5404761	AssignmentExpression	cache -> nslots = 0		5404724	0		=			
ANR	5404762	PtrMemberAccess	cache -> nslots		5404724	0					
ANR	5404763	Identifier	cache		5404724	0					
ANR	5404764	Identifier	nslots		5404724	1					
ANR	5404765	PrimaryExpression	0		5404724	1					
ANR	5404766	ExpressionStatement	cache -> block_size = 0	78:8:2391:2412	5404724	2	True				
ANR	5404767	AssignmentExpression	cache -> block_size = 0		5404724	0		=			
ANR	5404768	PtrMemberAccess	cache -> block_size		5404724	0					
ANR	5404769	Identifier	cache		5404724	0					
ANR	5404770	Identifier	block_size		5404724	1					
ANR	5404771	PrimaryExpression	0		5404724	1					
ANR	5404772	ExpressionStatement	cache -> slots = NULL	79:8:2422:2441	5404724	3	True				
ANR	5404773	AssignmentExpression	cache -> slots = NULL		5404724	0		=			
ANR	5404774	PtrMemberAccess	cache -> slots		5404724	0					
ANR	5404775	Identifier	cache		5404724	0					
ANR	5404776	Identifier	slots		5404724	1					
ANR	5404777	Identifier	NULL		5404724	1					
ANR	5404778	ExpressionStatement	cache -> base = NULL	80:8:2451:2469	5404724	4	True				
ANR	5404779	AssignmentExpression	cache -> base = NULL		5404724	0		=			
ANR	5404780	PtrMemberAccess	cache -> base		5404724	0					
ANR	5404781	Identifier	cache		5404724	0					
ANR	5404782	Identifier	base		5404724	1					
ANR	5404783	Identifier	NULL		5404724	1					
ANR	5404784	ExpressionStatement	cache -> memory = mem	81:8:2479:2498	5404724	5	True				
ANR	5404785	AssignmentExpression	cache -> memory = mem		5404724	0		=			
ANR	5404786	PtrMemberAccess	cache -> memory		5404724	0					
ANR	5404787	Identifier	cache		5404724	0					
ANR	5404788	Identifier	memory		5404724	1					
ANR	5404789	Identifier	mem		5404724	1					
ANR	5404790	ReturnStatement	return cache ;	83:4:2510:2522	5404724	3	True				
ANR	5404791	Identifier	cache		5404724	0					
ANR	5404792	ReturnType	CL_CACHE *		5404724	1					
ANR	5404793	Identifier	cl_cache_alloc		5404724	2					
ANR	5404794	ParameterList	gs_memory_t * mem		5404724	3					
ANR	5404795	Parameter	gs_memory_t * mem	69:15:2091:2106	5404724	0	True				
ANR	5404796	ParameterType	gs_memory_t *		5404724	0					
ANR	5404797	Identifier	mem		5404724	1					
ANR	5404798	CFGEntryNode	ENTRY		5404724		True				
ANR	5404799	CFGExitNode	EXIT		5404724		True				
ANR	5404800	Symbol	cache		5404724						
ANR	5404801	Symbol	gs_alloc_bytes		5404724						
ANR	5404802	Symbol	NULL		5404724						
ANR	5404803	Symbol	cache -> slots		5404724						
ANR	5404804	Symbol	mem		5404724						
ANR	5404805	Symbol	* cache		5404724						
ANR	5404806	Symbol	cache -> block_size		5404724						
ANR	5404807	Symbol	cache -> filesize		5404724						
ANR	5404808	Symbol	cache -> nslots		5404724						
ANR	5404809	Symbol	cache -> base		5404724						
ANR	5404810	Symbol	cache -> memory		5404724						
ANR	5404811	Function	cl_cache_destroy	86:0:2527:2861							
ANR	5404812	FunctionDef	cl_cache_destroy (CL_CACHE * cache)		5404811	0					
ANR	5404813	CompoundStatement		88:0:2566:2861	5404811	0					
ANR	5404814	IfStatement	if ( cache == NULL )		5404811	0					
ANR	5404815	Condition	cache == NULL	89:8:2576:2588	5404811	0	True				
ANR	5404816	EqualityExpression	cache == NULL		5404811	0		==			
ANR	5404817	Identifier	cache		5404811	0					
ANR	5404818	Identifier	NULL		5404811	1					
ANR	5404819	ReturnStatement	return ;	90:8:2599:2605	5404811	1	True				
ANR	5404820	IfStatement	if ( cache -> slots != NULL )		5404811	1					
ANR	5404821	Condition	cache -> slots != NULL	92:8:2616:2635	5404811	0	True				
ANR	5404822	EqualityExpression	cache -> slots != NULL		5404811	0		!=			
ANR	5404823	PtrMemberAccess	cache -> slots		5404811	0					
ANR	5404824	Identifier	cache		5404811	0					
ANR	5404825	Identifier	slots		5404811	1					
ANR	5404826	Identifier	NULL		5404811	1					
ANR	5404827	CompoundStatement		5:30:71:71	5404811	1					
ANR	5404828	ExpressionStatement	"gs_free_object ( cache -> memory , cache -> base , ""CL_CACHE SLOT data"" )"	93:8:2648:2712	5404811	0	True				
ANR	5404829	CallExpression	"gs_free_object ( cache -> memory , cache -> base , ""CL_CACHE SLOT data"" )"		5404811	0					
ANR	5404830	Callee	gs_free_object		5404811	0					
ANR	5404831	Identifier	gs_free_object		5404811	0					
ANR	5404832	ArgumentList	cache -> memory		5404811	1					
ANR	5404833	Argument	cache -> memory		5404811	0					
ANR	5404834	PtrMemberAccess	cache -> memory		5404811	0					
ANR	5404835	Identifier	cache		5404811	0					
ANR	5404836	Identifier	memory		5404811	1					
ANR	5404837	Argument	cache -> base		5404811	1					
ANR	5404838	PtrMemberAccess	cache -> base		5404811	0					
ANR	5404839	Identifier	cache		5404811	0					
ANR	5404840	Identifier	base		5404811	1					
ANR	5404841	Argument	"""CL_CACHE SLOT data"""		5404811	2					
ANR	5404842	PrimaryExpression	"""CL_CACHE SLOT data"""		5404811	0					
ANR	5404843	ExpressionStatement	"gs_free_object ( cache -> memory , cache -> slots , ""CL_CACHE slots array"" )"	94:8:2722:2789	5404811	1	True				
ANR	5404844	CallExpression	"gs_free_object ( cache -> memory , cache -> slots , ""CL_CACHE slots array"" )"		5404811	0					
ANR	5404845	Callee	gs_free_object		5404811	0					
ANR	5404846	Identifier	gs_free_object		5404811	0					
ANR	5404847	ArgumentList	cache -> memory		5404811	1					
ANR	5404848	Argument	cache -> memory		5404811	0					
ANR	5404849	PtrMemberAccess	cache -> memory		5404811	0					
ANR	5404850	Identifier	cache		5404811	0					
ANR	5404851	Identifier	memory		5404811	1					
ANR	5404852	Argument	cache -> slots		5404811	1					
ANR	5404853	PtrMemberAccess	cache -> slots		5404811	0					
ANR	5404854	Identifier	cache		5404811	0					
ANR	5404855	Identifier	slots		5404811	1					
ANR	5404856	Argument	"""CL_CACHE slots array"""		5404811	2					
ANR	5404857	PrimaryExpression	"""CL_CACHE slots array"""		5404811	0					
ANR	5404858	ExpressionStatement	"gs_free_object ( cache -> memory , cache , ""CL_CACHE for IFILE"" )"	96:4:2801:2859	5404811	2	True				
ANR	5404859	CallExpression	"gs_free_object ( cache -> memory , cache , ""CL_CACHE for IFILE"" )"		5404811	0					
ANR	5404860	Callee	gs_free_object		5404811	0					
ANR	5404861	Identifier	gs_free_object		5404811	0					
ANR	5404862	ArgumentList	cache -> memory		5404811	1					
ANR	5404863	Argument	cache -> memory		5404811	0					
ANR	5404864	PtrMemberAccess	cache -> memory		5404811	0					
ANR	5404865	Identifier	cache		5404811	0					
ANR	5404866	Identifier	memory		5404811	1					
ANR	5404867	Argument	cache		5404811	1					
ANR	5404868	Identifier	cache		5404811	0					
ANR	5404869	Argument	"""CL_CACHE for IFILE"""		5404811	2					
ANR	5404870	PrimaryExpression	"""CL_CACHE for IFILE"""		5404811	0					
ANR	5404871	ReturnType	void		5404811	1					
ANR	5404872	Identifier	cl_cache_destroy		5404811	2					
ANR	5404873	ParameterList	CL_CACHE * cache		5404811	3					
ANR	5404874	Parameter	CL_CACHE * cache	87:17:2549:2563	5404811	0	True				
ANR	5404875	ParameterType	CL_CACHE *		5404811	0					
ANR	5404876	Identifier	cache		5404811	1					
ANR	5404877	CFGEntryNode	ENTRY		5404811		True				
ANR	5404878	CFGExitNode	EXIT		5404811		True				
ANR	5404879	Symbol	cache		5404811						
ANR	5404880	Symbol	NULL		5404811						
ANR	5404881	Symbol	cache -> slots		5404811						
ANR	5404882	Symbol	* cache		5404811						
ANR	5404883	Symbol	cache -> base		5404811						
ANR	5404884	Symbol	cache -> memory		5404811						
ANR	5404885	Function	cl_cache_read_init	100:0:2929:4751							
ANR	5404886	FunctionDef	"cl_cache_read_init (CL_CACHE * cache , int nslots , int64_t block_size , int64_t filesize)"		5404885	0					
ANR	5404887	CompoundStatement		102:0:3026:4751	5404885	0					
ANR	5404888	IfStatement	if ( cache == NULL || cache -> filesize != 0 )		5404885	0					
ANR	5404889	Condition	cache == NULL || cache -> filesize != 0	104:8:3125:3161	5404885	0	True				
ANR	5404890	OrExpression	cache == NULL || cache -> filesize != 0		5404885	0		||			
ANR	5404891	EqualityExpression	cache == NULL		5404885	0		==			
ANR	5404892	Identifier	cache		5404885	0					
ANR	5404893	Identifier	NULL		5404885	1					
ANR	5404894	EqualityExpression	cache -> filesize != 0		5404885	1		!=			
ANR	5404895	PtrMemberAccess	cache -> filesize		5404885	0					
ANR	5404896	Identifier	cache		5404885	0					
ANR	5404897	Identifier	filesize		5404885	1					
ANR	5404898	PrimaryExpression	0		5404885	1					
ANR	5404899	ReturnStatement	return cache ;	105:8:3172:3184	5404885	1	True				
ANR	5404900	Identifier	cache		5404885	0					
ANR	5404901	IfStatement	if ( ( filesize + block_size ) / block_size < nslots )		5404885	1					
ANR	5404902	Condition	( filesize + block_size ) / block_size < nslots	107:8:3249:3289	5404885	0	True				
ANR	5404903	RelationalExpression	( filesize + block_size ) / block_size < nslots		5404885	0		<			
ANR	5404904	MultiplicativeExpression	( filesize + block_size ) / block_size		5404885	0		/			
ANR	5404905	AdditiveExpression	filesize + block_size		5404885	0		+			
ANR	5404906	Identifier	filesize		5404885	0					
ANR	5404907	Identifier	block_size		5404885	1					
ANR	5404908	Identifier	block_size		5404885	1					
ANR	5404909	Identifier	nslots		5404885	1					
ANR	5404910	ExpressionStatement	nslots = ( filesize + block_size ) / block_size	108:8:3300:3343	5404885	1	True				
ANR	5404911	AssignmentExpression	nslots = ( filesize + block_size ) / block_size		5404885	0		=			
ANR	5404912	Identifier	nslots		5404885	0					
ANR	5404913	MultiplicativeExpression	( filesize + block_size ) / block_size		5404885	1		/			
ANR	5404914	AdditiveExpression	filesize + block_size		5404885	0		+			
ANR	5404915	Identifier	filesize		5404885	0					
ANR	5404916	Identifier	block_size		5404885	1					
ANR	5404917	Identifier	block_size		5404885	1					
ANR	5404918	ExpressionStatement	"cache -> slots = ( CL_CACHE_SLOT * ) gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"	109:4:3394:3566	5404885	2	True				
ANR	5404919	AssignmentExpression	"cache -> slots = ( CL_CACHE_SLOT * ) gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"		5404885	0		=			
ANR	5404920	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5404921	Identifier	cache		5404885	0					
ANR	5404922	Identifier	slots		5404885	1					
ANR	5404923	CastExpression	"( CL_CACHE_SLOT * ) gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"		5404885	1					
ANR	5404924	CastTarget	CL_CACHE_SLOT *		5404885	0					
ANR	5404925	CallExpression	"gs_alloc_bytes ( cache -> memory , nslots * sizeof ( CL_CACHE_SLOT ) , ""CL_CACHE slots array"" )"		5404885	1					
ANR	5404926	Callee	gs_alloc_bytes		5404885	0					
ANR	5404927	Identifier	gs_alloc_bytes		5404885	0					
ANR	5404928	ArgumentList	cache -> memory		5404885	1					
ANR	5404929	Argument	cache -> memory		5404885	0					
ANR	5404930	PtrMemberAccess	cache -> memory		5404885	0					
ANR	5404931	Identifier	cache		5404885	0					
ANR	5404932	Identifier	memory		5404885	1					
ANR	5404933	Argument	nslots * sizeof ( CL_CACHE_SLOT )		5404885	1					
ANR	5404934	MultiplicativeExpression	nslots * sizeof ( CL_CACHE_SLOT )		5404885	0		*			
ANR	5404935	Identifier	nslots		5404885	0					
ANR	5404936	SizeofExpression	sizeof ( CL_CACHE_SLOT )		5404885	1					
ANR	5404937	Sizeof	sizeof		5404885	0					
ANR	5404938	SizeofOperand	CL_CACHE_SLOT		5404885	1					
ANR	5404939	Argument	"""CL_CACHE slots array"""		5404885	2					
ANR	5404940	PrimaryExpression	"""CL_CACHE slots array"""		5404885	0					
ANR	5404941	IfStatement	if ( cache -> slots == NULL )		5404885	3					
ANR	5404942	Condition	cache -> slots == NULL	111:8:3576:3595	5404885	0	True				
ANR	5404943	EqualityExpression	cache -> slots == NULL		5404885	0		==			
ANR	5404944	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5404945	Identifier	cache		5404885	0					
ANR	5404946	Identifier	slots		5404885	1					
ANR	5404947	Identifier	NULL		5404885	1					
ANR	5404948	CompoundStatement		10:30:571:571	5404885	1					
ANR	5404949	ExpressionStatement	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"	112:8:3608:3671	5404885	0	True				
ANR	5404950	CallExpression	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"		5404885	0					
ANR	5404951	Callee	gs_free_object		5404885	0					
ANR	5404952	Identifier	gs_free_object		5404885	0					
ANR	5404953	ArgumentList	cache -> memory		5404885	1					
ANR	5404954	Argument	cache -> memory		5404885	0					
ANR	5404955	PtrMemberAccess	cache -> memory		5404885	0					
ANR	5404956	Identifier	cache		5404885	0					
ANR	5404957	Identifier	memory		5404885	1					
ANR	5404958	Argument	cache		5404885	1					
ANR	5404959	Identifier	cache		5404885	0					
ANR	5404960	Argument	"""Free CL_CACHE for IFILE"""		5404885	2					
ANR	5404961	PrimaryExpression	"""Free CL_CACHE for IFILE"""		5404885	0					
ANR	5404962	ExpressionStatement	cache = NULL	113:8:3681:3693	5404885	1	True				
ANR	5404963	AssignmentExpression	cache = NULL		5404885	0		=			
ANR	5404964	Identifier	cache		5404885	0					
ANR	5404965	Identifier	NULL		5404885	1					
ANR	5404966	ElseStatement	else		5404885	0					
ANR	5404967	CompoundStatement		13:11:706:706	5404885	0					
ANR	5404968	ExpressionStatement	"cache -> slots [ 0 ] . base = ( byte * ) gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"	115:8:3743:3901	5404885	0	True				
ANR	5404969	AssignmentExpression	"cache -> slots [ 0 ] . base = ( byte * ) gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"		5404885	0		=			
ANR	5404970	MemberAccess	cache -> slots [ 0 ] . base		5404885	0					
ANR	5404971	ArrayIndexing	cache -> slots [ 0 ]		5404885	0					
ANR	5404972	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5404973	Identifier	cache		5404885	0					
ANR	5404974	Identifier	slots		5404885	1					
ANR	5404975	PrimaryExpression	0		5404885	1					
ANR	5404976	Identifier	base		5404885	1					
ANR	5404977	CastExpression	"( byte * ) gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"		5404885	1					
ANR	5404978	CastTarget	byte *		5404885	0					
ANR	5404979	CallExpression	"gs_alloc_bytes ( cache -> memory , nslots * block_size , ""CL_CACHE_SLOT data"" )"		5404885	1					
ANR	5404980	Callee	gs_alloc_bytes		5404885	0					
ANR	5404981	Identifier	gs_alloc_bytes		5404885	0					
ANR	5404982	ArgumentList	cache -> memory		5404885	1					
ANR	5404983	Argument	cache -> memory		5404885	0					
ANR	5404984	PtrMemberAccess	cache -> memory		5404885	0					
ANR	5404985	Identifier	cache		5404885	0					
ANR	5404986	Identifier	memory		5404885	1					
ANR	5404987	Argument	nslots * block_size		5404885	1					
ANR	5404988	MultiplicativeExpression	nslots * block_size		5404885	0		*			
ANR	5404989	Identifier	nslots		5404885	0					
ANR	5404990	Identifier	block_size		5404885	1					
ANR	5404991	Argument	"""CL_CACHE_SLOT data"""		5404885	2					
ANR	5404992	PrimaryExpression	"""CL_CACHE_SLOT data"""		5404885	0					
ANR	5404993	IfStatement	if ( cache -> slots [ 0 ] . base == NULL )		5404885	1					
ANR	5404994	Condition	cache -> slots [ 0 ] . base == NULL	117:12:3915:3942	5404885	0	True				
ANR	5404995	EqualityExpression	cache -> slots [ 0 ] . base == NULL		5404885	0		==			
ANR	5404996	MemberAccess	cache -> slots [ 0 ] . base		5404885	0					
ANR	5404997	ArrayIndexing	cache -> slots [ 0 ]		5404885	0					
ANR	5404998	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5404999	Identifier	cache		5404885	0					
ANR	5405000	Identifier	slots		5404885	1					
ANR	5405001	PrimaryExpression	0		5404885	1					
ANR	5405002	Identifier	base		5404885	1					
ANR	5405003	Identifier	NULL		5404885	1					
ANR	5405004	CompoundStatement		16:42:918:918	5404885	1					
ANR	5405005	ExpressionStatement	"gs_free_object ( cache -> memory , cache -> slots , ""Free CL_CACHE for IFILE"" )"	118:12:3959:4029	5404885	0	True				
ANR	5405006	CallExpression	"gs_free_object ( cache -> memory , cache -> slots , ""Free CL_CACHE for IFILE"" )"		5404885	0					
ANR	5405007	Callee	gs_free_object		5404885	0					
ANR	5405008	Identifier	gs_free_object		5404885	0					
ANR	5405009	ArgumentList	cache -> memory		5404885	1					
ANR	5405010	Argument	cache -> memory		5404885	0					
ANR	5405011	PtrMemberAccess	cache -> memory		5404885	0					
ANR	5405012	Identifier	cache		5404885	0					
ANR	5405013	Identifier	memory		5404885	1					
ANR	5405014	Argument	cache -> slots		5404885	1					
ANR	5405015	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5405016	Identifier	cache		5404885	0					
ANR	5405017	Identifier	slots		5404885	1					
ANR	5405018	Argument	"""Free CL_CACHE for IFILE"""		5404885	2					
ANR	5405019	PrimaryExpression	"""Free CL_CACHE for IFILE"""		5404885	0					
ANR	5405020	ExpressionStatement	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"	119:12:4043:4106	5404885	1	True				
ANR	5405021	CallExpression	"gs_free_object ( cache -> memory , cache , ""Free CL_CACHE for IFILE"" )"		5404885	0					
ANR	5405022	Callee	gs_free_object		5404885	0					
ANR	5405023	Identifier	gs_free_object		5404885	0					
ANR	5405024	ArgumentList	cache -> memory		5404885	1					
ANR	5405025	Argument	cache -> memory		5404885	0					
ANR	5405026	PtrMemberAccess	cache -> memory		5404885	0					
ANR	5405027	Identifier	cache		5404885	0					
ANR	5405028	Identifier	memory		5404885	1					
ANR	5405029	Argument	cache		5404885	1					
ANR	5405030	Identifier	cache		5404885	0					
ANR	5405031	Argument	"""Free CL_CACHE for IFILE"""		5404885	2					
ANR	5405032	PrimaryExpression	"""Free CL_CACHE for IFILE"""		5404885	0					
ANR	5405033	ExpressionStatement	cache = NULL	120:12:4120:4132	5404885	2	True				
ANR	5405034	AssignmentExpression	cache = NULL		5404885	0		=			
ANR	5405035	Identifier	cache		5404885	0					
ANR	5405036	Identifier	NULL		5404885	1					
ANR	5405037	ElseStatement	else		5404885	0					
ANR	5405038	CompoundStatement		22:12:1211:1216	5404885	0					
ANR	5405039	IdentifierDeclStatement	int i ;	123:12:4238:4243	5404885	0	True				
ANR	5405040	IdentifierDecl	i		5404885	0					
ANR	5405041	IdentifierDeclType	int		5404885	0					
ANR	5405042	Identifier	i		5404885	1					
ANR	5405043	ForStatement	for ( i = 0 ; i < nslots ; i ++ )		5404885	1					
ANR	5405044	ForInit	i = 0 ;	125:17:4263:4266	5404885	0	True				
ANR	5405045	AssignmentExpression	i = 0		5404885	0		=			
ANR	5405046	Identifier	i		5404885	0					
ANR	5405047	PrimaryExpression	0		5404885	1					
ANR	5405048	Condition	i < nslots	125:22:4268:4277	5404885	1	True				
ANR	5405049	RelationalExpression	i < nslots		5404885	0		<			
ANR	5405050	Identifier	i		5404885	0					
ANR	5405051	Identifier	nslots		5404885	1					
ANR	5405052	PostIncDecOperationExpression	i ++	125:34:4280:4282	5404885	2	True				
ANR	5405053	Identifier	i		5404885	0					
ANR	5405054	IncDec	++		5404885	1					
ANR	5405055	CompoundStatement		24:39:1258:1258	5404885	3					
ANR	5405056	ExpressionStatement	cache -> slots [ i ] . blocknum = CL_CACHE_SLOT_EMPTY	126:16:4303:4349	5404885	0	True				
ANR	5405057	AssignmentExpression	cache -> slots [ i ] . blocknum = CL_CACHE_SLOT_EMPTY		5404885	0		=			
ANR	5405058	MemberAccess	cache -> slots [ i ] . blocknum		5404885	0					
ANR	5405059	ArrayIndexing	cache -> slots [ i ]		5404885	0					
ANR	5405060	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5405061	Identifier	cache		5404885	0					
ANR	5405062	Identifier	slots		5404885	1					
ANR	5405063	Identifier	i		5404885	1					
ANR	5405064	Identifier	blocknum		5404885	1					
ANR	5405065	Identifier	CL_CACHE_SLOT_EMPTY		5404885	1					
ANR	5405066	ExpressionStatement	cache -> slots [ i ] . base = cache -> slots [ 0 ] . base + ( i * block_size )	127:16:4367:4429	5404885	1	True				
ANR	5405067	AssignmentExpression	cache -> slots [ i ] . base = cache -> slots [ 0 ] . base + ( i * block_size )		5404885	0		=			
ANR	5405068	MemberAccess	cache -> slots [ i ] . base		5404885	0					
ANR	5405069	ArrayIndexing	cache -> slots [ i ]		5404885	0					
ANR	5405070	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5405071	Identifier	cache		5404885	0					
ANR	5405072	Identifier	slots		5404885	1					
ANR	5405073	Identifier	i		5404885	1					
ANR	5405074	Identifier	base		5404885	1					
ANR	5405075	AdditiveExpression	cache -> slots [ 0 ] . base + ( i * block_size )		5404885	1		+			
ANR	5405076	MemberAccess	cache -> slots [ 0 ] . base		5404885	0					
ANR	5405077	ArrayIndexing	cache -> slots [ 0 ]		5404885	0					
ANR	5405078	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5405079	Identifier	cache		5404885	0					
ANR	5405080	Identifier	slots		5404885	1					
ANR	5405081	PrimaryExpression	0		5404885	1					
ANR	5405082	Identifier	base		5404885	1					
ANR	5405083	MultiplicativeExpression	i * block_size		5404885	1		*			
ANR	5405084	Identifier	i		5404885	0					
ANR	5405085	Identifier	block_size		5404885	1					
ANR	5405086	ExpressionStatement	cache -> base = cache -> slots [ 0 ] . base	129:12:4457:4491	5404885	2	True				
ANR	5405087	AssignmentExpression	cache -> base = cache -> slots [ 0 ] . base		5404885	0		=			
ANR	5405088	PtrMemberAccess	cache -> base		5404885	0					
ANR	5405089	Identifier	cache		5404885	0					
ANR	5405090	Identifier	base		5404885	1					
ANR	5405091	MemberAccess	cache -> slots [ 0 ] . base		5404885	1					
ANR	5405092	ArrayIndexing	cache -> slots [ 0 ]		5404885	0					
ANR	5405093	PtrMemberAccess	cache -> slots		5404885	0					
ANR	5405094	Identifier	cache		5404885	0					
ANR	5405095	Identifier	slots		5404885	1					
ANR	5405096	PrimaryExpression	0		5404885	1					
ANR	5405097	Identifier	base		5404885	1					
ANR	5405098	ExpressionStatement	cache -> nslots = nslots	130:12:4569:4591	5404885	3	True				
ANR	5405099	AssignmentExpression	cache -> nslots = nslots		5404885	0		=			
ANR	5405100	PtrMemberAccess	cache -> nslots		5404885	0					
ANR	5405101	Identifier	cache		5404885	0					
ANR	5405102	Identifier	nslots		5404885	1					
ANR	5405103	Identifier	nslots		5404885	1					
ANR	5405104	ExpressionStatement	cache -> block_size = block_size	131:12:4605:4635	5404885	4	True				
ANR	5405105	AssignmentExpression	cache -> block_size = block_size		5404885	0		=			
ANR	5405106	PtrMemberAccess	cache -> block_size		5404885	0					
ANR	5405107	Identifier	cache		5404885	0					
ANR	5405108	Identifier	block_size		5404885	1					
ANR	5405109	Identifier	block_size		5404885	1					
ANR	5405110	ExpressionStatement	cache -> filesize = filesize	132:12:4649:4675	5404885	5	True				
ANR	5405111	AssignmentExpression	cache -> filesize = filesize		5404885	0		=			
ANR	5405112	PtrMemberAccess	cache -> filesize		5404885	0					
ANR	5405113	Identifier	cache		5404885	0					
ANR	5405114	Identifier	filesize		5404885	1					
ANR	5405115	Identifier	filesize		5404885	1					
ANR	5405116	ReturnStatement	return cache ;	135:4:4697:4709	5404885	4	True				
ANR	5405117	Identifier	cache		5404885	0					
ANR	5405118	ReturnType	CL_CACHE *		5404885	1					
ANR	5405119	Identifier	cl_cache_read_init		5404885	2					
ANR	5405120	ParameterList	"CL_CACHE * cache , int nslots , int64_t block_size , int64_t filesize"		5404885	3					
ANR	5405121	Parameter	CL_CACHE * cache	101:19:2959:2973	5404885	0	True				
ANR	5405122	ParameterType	CL_CACHE *		5404885	0					
ANR	5405123	Identifier	cache		5404885	1					
ANR	5405124	Parameter	int nslots	101:36:2976:2985	5404885	1	True				
ANR	5405125	ParameterType	int		5404885	0					
ANR	5405126	Identifier	nslots		5404885	1					
ANR	5405127	Parameter	int64_t block_size	101:48:2988:3005	5404885	2	True				
ANR	5405128	ParameterType	int64_t		5404885	0					
ANR	5405129	Identifier	block_size		5404885	1					
ANR	5405130	Parameter	int64_t filesize	101:68:3008:3023	5404885	3	True				
ANR	5405131	ParameterType	int64_t		5404885	0					
ANR	5405132	Identifier	filesize		5404885	1					
ANR	5405133	CFGEntryNode	ENTRY		5404885		True				
ANR	5405134	CFGExitNode	EXIT		5404885		True				
ANR	5405135	Symbol	cache		5404885						
ANR	5405136	Symbol	gs_alloc_bytes		5404885						
ANR	5405137	Symbol	NULL		5404885						
ANR	5405138	Symbol	cache -> slots		5404885						
ANR	5405139	Symbol	cache -> slots [ i ] . base		5404885						
ANR	5405140	Symbol	cache -> slots [ 0 ] . base		5404885						
ANR	5405141	Symbol	i		5404885						
ANR	5405142	Symbol	filesize		5404885						
ANR	5405143	Symbol	* cache		5404885						
ANR	5405144	Symbol	cache -> memory		5404885						
ANR	5405145	Symbol	cache -> nslots		5404885						
ANR	5405146	Symbol	CL_CACHE_SLOT_EMPTY		5404885						
ANR	5405147	Symbol	* i		5404885						
ANR	5405148	Symbol	* * cache		5404885						
ANR	5405149	Symbol	* cache -> slots		5404885						
ANR	5405150	Symbol	nslots		5404885						
ANR	5405151	Symbol	block_size		5404885						
ANR	5405152	Symbol	cache -> slots [ i ] . blocknum		5404885						
ANR	5405153	Symbol	cache -> block_size		5404885						
ANR	5405154	Symbol	cache -> filesize		5404885						
ANR	5405155	Symbol	cache -> base		5404885						
ANR	5405156	Function	cl_cache_read	141:0:4932:6096							
ANR	5405157	FunctionDef	"cl_cache_read (byte * data , int len , int64_t pos , CL_CACHE * cache)"		5405156	0					
ANR	5405158	CompoundStatement		143:0:5001:6096	5405156	0					
ANR	5405159	IdentifierDeclStatement	int nread = 0 ;	144:4:5007:5020	5405156	0	True				
ANR	5405160	IdentifierDecl	nread = 0		5405156	0					
ANR	5405161	IdentifierDeclType	int		5405156	0					
ANR	5405162	Identifier	nread		5405156	1					
ANR	5405163	AssignmentExpression	nread = 0		5405156	2		=			
ANR	5405164	Identifier	nread		5405156	0					
ANR	5405165	PrimaryExpression	0		5405156	1					
ANR	5405166	IdentifierDeclStatement	int slot ;	145:4:5026:5034	5405156	1	True				
ANR	5405167	IdentifierDecl	slot		5405156	0					
ANR	5405168	IdentifierDeclType	int		5405156	0					
ANR	5405169	Identifier	slot		5405156	1					
ANR	5405170	IdentifierDeclStatement	int offset ;	146:4:5040:5050	5405156	2	True				
ANR	5405171	IdentifierDecl	offset		5405156	0					
ANR	5405172	IdentifierDeclType	int		5405156	0					
ANR	5405173	Identifier	offset		5405156	1					
ANR	5405174	IdentifierDeclStatement	int64_t blocknum = pos / cache -> block_size ;	147:4:5056:5098	5405156	3	True				
ANR	5405175	IdentifierDecl	blocknum = pos / cache -> block_size		5405156	0					
ANR	5405176	IdentifierDeclType	int64_t		5405156	0					
ANR	5405177	Identifier	blocknum		5405156	1					
ANR	5405178	AssignmentExpression	blocknum = pos / cache -> block_size		5405156	2		=			
ANR	5405179	Identifier	blocknum		5405156	0					
ANR	5405180	MultiplicativeExpression	pos / cache -> block_size		5405156	1		/			
ANR	5405181	Identifier	pos		5405156	0					
ANR	5405182	PtrMemberAccess	cache -> block_size		5405156	1					
ANR	5405183	Identifier	cache		5405156	0					
ANR	5405184	Identifier	block_size		5405156	1					
ANR	5405185	IfStatement	if ( pos >= cache -> filesize )		5405156	4					
ANR	5405186	Condition	pos >= cache -> filesize	149:8:5109:5130	5405156	0	True				
ANR	5405187	RelationalExpression	pos >= cache -> filesize		5405156	0		>=			
ANR	5405188	Identifier	pos		5405156	0					
ANR	5405189	PtrMemberAccess	cache -> filesize		5405156	1					
ANR	5405190	Identifier	cache		5405156	0					
ANR	5405191	Identifier	filesize		5405156	1					
ANR	5405192	ReturnStatement	return - 1 ;	150:8:5141:5150	5405156	1	True				
ANR	5405193	UnaryOperationExpression	- 1		5405156	0					
ANR	5405194	UnaryOperator	-		5405156	0					
ANR	5405195	PrimaryExpression	1		5405156	1					
ANR	5405196	ForStatement	for ( slot = 0 ; slot < cache -> nslots ; slot ++ )		5405156	5					
ANR	5405197	ForInit	slot = 0 ;	153:9:5186:5194	5405156	0	True				
ANR	5405198	AssignmentExpression	slot = 0		5405156	0		=			
ANR	5405199	Identifier	slot		5405156	0					
ANR	5405200	PrimaryExpression	0		5405156	1					
ANR	5405201	Condition	slot < cache -> nslots	153:19:5196:5215	5405156	1	True				
ANR	5405202	RelationalExpression	slot < cache -> nslots		5405156	0		<			
ANR	5405203	Identifier	slot		5405156	0					
ANR	5405204	PtrMemberAccess	cache -> nslots		5405156	1					
ANR	5405205	Identifier	cache		5405156	0					
ANR	5405206	Identifier	nslots		5405156	1					
ANR	5405207	PostIncDecOperationExpression	slot ++	153:41:5218:5223	5405156	2	True				
ANR	5405208	Identifier	slot		5405156	0					
ANR	5405209	IncDec	++		5405156	1					
ANR	5405210	CompoundStatement		11:49:224:224	5405156	3					
ANR	5405211	IfStatement	if ( blocknum == cache -> slots [ slot ] . blocknum )		5405156	0					
ANR	5405212	Condition	blocknum == cache -> slots [ slot ] . blocknum	154:12:5240:5278	5405156	0	True				
ANR	5405213	EqualityExpression	blocknum == cache -> slots [ slot ] . blocknum		5405156	0		==			
ANR	5405214	Identifier	blocknum		5405156	0					
ANR	5405215	MemberAccess	cache -> slots [ slot ] . blocknum		5405156	1					
ANR	5405216	ArrayIndexing	cache -> slots [ slot ]		5405156	0					
ANR	5405217	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405218	Identifier	cache		5405156	0					
ANR	5405219	Identifier	slots		5405156	1					
ANR	5405220	Identifier	slot		5405156	1					
ANR	5405221	Identifier	blocknum		5405156	1					
ANR	5405222	BreakStatement	break ;	155:12:5293:5298	5405156	1	True				
ANR	5405223	IfStatement	if ( slot >= cache -> nslots )		5405156	6					
ANR	5405224	Condition	slot >= cache -> nslots	157:8:5314:5334	5405156	0	True				
ANR	5405225	RelationalExpression	slot >= cache -> nslots		5405156	0		>=			
ANR	5405226	Identifier	slot		5405156	0					
ANR	5405227	PtrMemberAccess	cache -> nslots		5405156	1					
ANR	5405228	Identifier	cache		5405156	0					
ANR	5405229	Identifier	nslots		5405156	1					
ANR	5405230	ReturnStatement	return 0 ;	158:8:5345:5353	5405156	1	True				
ANR	5405231	PrimaryExpression	0		5405156	0					
ANR	5405232	IfStatement	if ( slot != 0 )		5405156	7					
ANR	5405233	Condition	slot != 0	160:8:5403:5411	5405156	0	True				
ANR	5405234	EqualityExpression	slot != 0		5405156	0		!=			
ANR	5405235	Identifier	slot		5405156	0					
ANR	5405236	PrimaryExpression	0		5405156	1					
ANR	5405237	CompoundStatement		21:8:538:543	5405156	1					
ANR	5405238	IdentifierDeclStatement	byte * base = cache -> slots [ slot ] . base ;	162:8:5494:5530	5405156	0	True				
ANR	5405239	IdentifierDecl	* base = cache -> slots [ slot ] . base		5405156	0					
ANR	5405240	IdentifierDeclType	byte *		5405156	0					
ANR	5405241	Identifier	base		5405156	1					
ANR	5405242	AssignmentExpression	* base = cache -> slots [ slot ] . base		5405156	2		=			
ANR	5405243	Identifier	base		5405156	0					
ANR	5405244	MemberAccess	cache -> slots [ slot ] . base		5405156	1					
ANR	5405245	ArrayIndexing	cache -> slots [ slot ]		5405156	0					
ANR	5405246	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405247	Identifier	cache		5405156	0					
ANR	5405248	Identifier	slots		5405156	1					
ANR	5405249	Identifier	slot		5405156	1					
ANR	5405250	Identifier	base		5405156	1					
ANR	5405251	IdentifierDeclStatement	int i ;	163:8:5540:5545	5405156	1	True				
ANR	5405252	IdentifierDecl	i		5405156	0					
ANR	5405253	IdentifierDeclType	int		5405156	0					
ANR	5405254	Identifier	i		5405156	1					
ANR	5405255	ForStatement	for ( i = slot ; i > 0 ; i -- )		5405156	2					
ANR	5405256	ForInit	i = slot ;	165:13:5561:5569	5405156	0	True				
ANR	5405257	AssignmentExpression	i = slot		5405156	0		=			
ANR	5405258	Identifier	i		5405156	0					
ANR	5405259	Identifier	slot		5405156	1					
ANR	5405260	Condition	i > 0	165:23:5571:5575	5405156	1	True				
ANR	5405261	RelationalExpression	i > 0		5405156	0		>			
ANR	5405262	Identifier	i		5405156	0					
ANR	5405263	PrimaryExpression	0		5405156	1					
ANR	5405264	PostIncDecOperationExpression	i --	165:30:5578:5580	5405156	2	True				
ANR	5405265	Identifier	i		5405156	0					
ANR	5405266	IncDec	--		5405156	1					
ANR	5405267	CompoundStatement		23:35:581:581	5405156	3					
ANR	5405268	ExpressionStatement	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base	166:12:5597:5642	5405156	0	True				
ANR	5405269	AssignmentExpression	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base		5405156	0		=			
ANR	5405270	MemberAccess	cache -> slots [ i ] . base		5405156	0					
ANR	5405271	ArrayIndexing	cache -> slots [ i ]		5405156	0					
ANR	5405272	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405273	Identifier	cache		5405156	0					
ANR	5405274	Identifier	slots		5405156	1					
ANR	5405275	Identifier	i		5405156	1					
ANR	5405276	Identifier	base		5405156	1					
ANR	5405277	MemberAccess	cache -> slots [ i - 1 ] . base		5405156	1					
ANR	5405278	ArrayIndexing	cache -> slots [ i - 1 ]		5405156	0					
ANR	5405279	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405280	Identifier	cache		5405156	0					
ANR	5405281	Identifier	slots		5405156	1					
ANR	5405282	AdditiveExpression	i - 1		5405156	1		-			
ANR	5405283	Identifier	i		5405156	0					
ANR	5405284	PrimaryExpression	1		5405156	1					
ANR	5405285	Identifier	base		5405156	1					
ANR	5405286	ExpressionStatement	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum	167:12:5656:5709	5405156	1	True				
ANR	5405287	AssignmentExpression	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum		5405156	0		=			
ANR	5405288	MemberAccess	cache -> slots [ i ] . blocknum		5405156	0					
ANR	5405289	ArrayIndexing	cache -> slots [ i ]		5405156	0					
ANR	5405290	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405291	Identifier	cache		5405156	0					
ANR	5405292	Identifier	slots		5405156	1					
ANR	5405293	Identifier	i		5405156	1					
ANR	5405294	Identifier	blocknum		5405156	1					
ANR	5405295	MemberAccess	cache -> slots [ i - 1 ] . blocknum		5405156	1					
ANR	5405296	ArrayIndexing	cache -> slots [ i - 1 ]		5405156	0					
ANR	5405297	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405298	Identifier	cache		5405156	0					
ANR	5405299	Identifier	slots		5405156	1					
ANR	5405300	AdditiveExpression	i - 1		5405156	1		-			
ANR	5405301	Identifier	i		5405156	0					
ANR	5405302	PrimaryExpression	1		5405156	1					
ANR	5405303	Identifier	blocknum		5405156	1					
ANR	5405304	ExpressionStatement	cache -> slots [ 0 ] . blocknum = blocknum	169:8:5729:5764	5405156	3	True				
ANR	5405305	AssignmentExpression	cache -> slots [ 0 ] . blocknum = blocknum		5405156	0		=			
ANR	5405306	MemberAccess	cache -> slots [ 0 ] . blocknum		5405156	0					
ANR	5405307	ArrayIndexing	cache -> slots [ 0 ]		5405156	0					
ANR	5405308	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405309	Identifier	cache		5405156	0					
ANR	5405310	Identifier	slots		5405156	1					
ANR	5405311	PrimaryExpression	0		5405156	1					
ANR	5405312	Identifier	blocknum		5405156	1					
ANR	5405313	Identifier	blocknum		5405156	1					
ANR	5405314	ExpressionStatement	cache -> slots [ 0 ] . base = base	170:8:5774:5801	5405156	4	True				
ANR	5405315	AssignmentExpression	cache -> slots [ 0 ] . base = base		5405156	0		=			
ANR	5405316	MemberAccess	cache -> slots [ 0 ] . base		5405156	0					
ANR	5405317	ArrayIndexing	cache -> slots [ 0 ]		5405156	0					
ANR	5405318	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405319	Identifier	cache		5405156	0					
ANR	5405320	Identifier	slots		5405156	1					
ANR	5405321	PrimaryExpression	0		5405156	1					
ANR	5405322	Identifier	base		5405156	1					
ANR	5405323	Identifier	base		5405156	1					
ANR	5405324	ExpressionStatement	offset = pos - cache -> slots [ 0 ] . blocknum * cache -> block_size	172:4:5813:5872	5405156	8	True				
ANR	5405325	AssignmentExpression	offset = pos - cache -> slots [ 0 ] . blocknum * cache -> block_size		5405156	0		=			
ANR	5405326	Identifier	offset		5405156	0					
ANR	5405327	AdditiveExpression	pos - cache -> slots [ 0 ] . blocknum * cache -> block_size		5405156	1		-			
ANR	5405328	Identifier	pos		5405156	0					
ANR	5405329	MultiplicativeExpression	cache -> slots [ 0 ] . blocknum * cache -> block_size		5405156	1		*			
ANR	5405330	MemberAccess	cache -> slots [ 0 ] . blocknum		5405156	0					
ANR	5405331	ArrayIndexing	cache -> slots [ 0 ]		5405156	0					
ANR	5405332	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405333	Identifier	cache		5405156	0					
ANR	5405334	Identifier	slots		5405156	1					
ANR	5405335	PrimaryExpression	0		5405156	1					
ANR	5405336	Identifier	blocknum		5405156	1					
ANR	5405337	PtrMemberAccess	cache -> block_size		5405156	1					
ANR	5405338	Identifier	cache		5405156	0					
ANR	5405339	Identifier	block_size		5405156	1					
ANR	5405340	ExpressionStatement	"nread = min ( cache -> block_size - offset , len )"	173:4:5878:5922	5405156	9	True				
ANR	5405341	AssignmentExpression	"nread = min ( cache -> block_size - offset , len )"		5405156	0		=			
ANR	5405342	Identifier	nread		5405156	0					
ANR	5405343	CallExpression	"min ( cache -> block_size - offset , len )"		5405156	1					
ANR	5405344	Callee	min		5405156	0					
ANR	5405345	Identifier	min		5405156	0					
ANR	5405346	ArgumentList	cache -> block_size - offset		5405156	1					
ANR	5405347	Argument	cache -> block_size - offset		5405156	0					
ANR	5405348	AdditiveExpression	cache -> block_size - offset		5405156	0		-			
ANR	5405349	PtrMemberAccess	cache -> block_size		5405156	0					
ANR	5405350	Identifier	cache		5405156	0					
ANR	5405351	Identifier	block_size		5405156	1					
ANR	5405352	Identifier	offset		5405156	1					
ANR	5405353	Argument	len		5405156	1					
ANR	5405354	Identifier	len		5405156	0					
ANR	5405355	IfStatement	if ( nread + pos > cache -> filesize )		5405156	10					
ANR	5405356	Condition	nread + pos > cache -> filesize	174:8:5932:5960	5405156	0	True				
ANR	5405357	RelationalExpression	nread + pos > cache -> filesize		5405156	0		>			
ANR	5405358	AdditiveExpression	nread + pos		5405156	0		+			
ANR	5405359	Identifier	nread		5405156	0					
ANR	5405360	Identifier	pos		5405156	1					
ANR	5405361	PtrMemberAccess	cache -> filesize		5405156	1					
ANR	5405362	Identifier	cache		5405156	0					
ANR	5405363	Identifier	filesize		5405156	1					
ANR	5405364	ExpressionStatement	nread = cache -> filesize - pos	175:8:5971:6000	5405156	1	True				
ANR	5405365	AssignmentExpression	nread = cache -> filesize - pos		5405156	0		=			
ANR	5405366	Identifier	nread		5405156	0					
ANR	5405367	AdditiveExpression	cache -> filesize - pos		5405156	1		-			
ANR	5405368	PtrMemberAccess	cache -> filesize		5405156	0					
ANR	5405369	Identifier	cache		5405156	0					
ANR	5405370	Identifier	filesize		5405156	1					
ANR	5405371	Identifier	pos		5405156	1					
ANR	5405372	ExpressionStatement	"memcpy ( data , cache -> slots [ 0 ] . base + offset , nread )"	176:4:6026:6076	5405156	11	True				
ANR	5405373	CallExpression	"memcpy ( data , cache -> slots [ 0 ] . base + offset , nread )"		5405156	0					
ANR	5405374	Callee	memcpy		5405156	0					
ANR	5405375	Identifier	memcpy		5405156	0					
ANR	5405376	ArgumentList	data		5405156	1					
ANR	5405377	Argument	data		5405156	0					
ANR	5405378	Identifier	data		5405156	0					
ANR	5405379	Argument	cache -> slots [ 0 ] . base + offset		5405156	1					
ANR	5405380	AdditiveExpression	cache -> slots [ 0 ] . base + offset		5405156	0		+			
ANR	5405381	MemberAccess	cache -> slots [ 0 ] . base		5405156	0					
ANR	5405382	ArrayIndexing	cache -> slots [ 0 ]		5405156	0					
ANR	5405383	PtrMemberAccess	cache -> slots		5405156	0					
ANR	5405384	Identifier	cache		5405156	0					
ANR	5405385	Identifier	slots		5405156	1					
ANR	5405386	PrimaryExpression	0		5405156	1					
ANR	5405387	Identifier	base		5405156	1					
ANR	5405388	Identifier	offset		5405156	1					
ANR	5405389	Argument	nread		5405156	2					
ANR	5405390	Identifier	nread		5405156	0					
ANR	5405391	ReturnStatement	return nread ;	177:4:6082:6094	5405156	12	True				
ANR	5405392	Identifier	nread		5405156	0					
ANR	5405393	ReturnType	int		5405156	1					
ANR	5405394	Identifier	cl_cache_read		5405156	2					
ANR	5405395	ParameterList	"byte * data , int len , int64_t pos , CL_CACHE * cache"		5405156	3					
ANR	5405396	Parameter	byte * data	142:14:4950:4959	5405156	0	True				
ANR	5405397	ParameterType	byte *		5405156	0					
ANR	5405398	Identifier	data		5405156	1					
ANR	5405399	Parameter	int len	142:26:4962:4968	5405156	1	True				
ANR	5405400	ParameterType	int		5405156	0					
ANR	5405401	Identifier	len		5405156	1					
ANR	5405402	Parameter	int64_t pos	142:35:4971:4981	5405156	2	True				
ANR	5405403	ParameterType	int64_t		5405156	0					
ANR	5405404	Identifier	pos		5405156	1					
ANR	5405405	Parameter	CL_CACHE * cache	142:48:4984:4998	5405156	3	True				
ANR	5405406	ParameterType	CL_CACHE *		5405156	0					
ANR	5405407	Identifier	cache		5405156	1					
ANR	5405408	CFGEntryNode	ENTRY		5405156		True				
ANR	5405409	CFGExitNode	EXIT		5405156		True				
ANR	5405410	Symbol	data		5405156						
ANR	5405411	Symbol	cache -> slots [ 0 ] . blocknum		5405156						
ANR	5405412	Symbol	nread		5405156						
ANR	5405413	Symbol	cache -> slots [ i - 1 ] . base		5405156						
ANR	5405414	Symbol	slot		5405156						
ANR	5405415	Symbol	cache -> slots [ i - 1 ] . blocknum		5405156						
ANR	5405416	Symbol	* cache		5405156						
ANR	5405417	Symbol	cache -> nslots		5405156						
ANR	5405418	Symbol	* slot		5405156						
ANR	5405419	Symbol	min		5405156						
ANR	5405420	Symbol	len		5405156						
ANR	5405421	Symbol	pos		5405156						
ANR	5405422	Symbol	cache -> block_size		5405156						
ANR	5405423	Symbol	cache		5405156						
ANR	5405424	Symbol	cache -> slots		5405156						
ANR	5405425	Symbol	offset		5405156						
ANR	5405426	Symbol	cache -> slots [ slot ] . base		5405156						
ANR	5405427	Symbol	cache -> slots [ i ] . base		5405156						
ANR	5405428	Symbol	cache -> slots [ 0 ] . base		5405156						
ANR	5405429	Symbol	i		5405156						
ANR	5405430	Symbol	* i		5405156						
ANR	5405431	Symbol	cache -> slots [ slot ] . blocknum		5405156						
ANR	5405432	Symbol	* * cache		5405156						
ANR	5405433	Symbol	* cache -> slots		5405156						
ANR	5405434	Symbol	blocknum		5405156						
ANR	5405435	Symbol	cache -> slots [ i ] . blocknum		5405156						
ANR	5405436	Symbol	cache -> filesize		5405156						
ANR	5405437	Symbol	base		5405156						
ANR	5405438	Function	cl_cache_get_empty_slot	182:0:6205:7327							
ANR	5405439	FunctionDef	"cl_cache_get_empty_slot (CL_CACHE * cache , int64_t pos)"		5405438	0					
ANR	5405440	CompoundStatement		184:0:6275:7327	5405438	0					
ANR	5405441	IdentifierDeclStatement	CL_CACHE_SLOT * pslot = & ( cache -> slots [ 0 ] ) ;	186:4:6333:6374	5405438	0	True				
ANR	5405442	IdentifierDecl	* pslot = & ( cache -> slots [ 0 ] )		5405438	0					
ANR	5405443	IdentifierDeclType	CL_CACHE_SLOT *		5405438	0					
ANR	5405444	Identifier	pslot		5405438	1					
ANR	5405445	AssignmentExpression	* pslot = & ( cache -> slots [ 0 ] )		5405438	2		=			
ANR	5405446	Identifier	pslot		5405438	0					
ANR	5405447	UnaryOperationExpression	& ( cache -> slots [ 0 ] )		5405438	1					
ANR	5405448	UnaryOperator	&		5405438	0					
ANR	5405449	ArrayIndexing	cache -> slots [ 0 ]		5405438	1					
ANR	5405450	PtrMemberAccess	cache -> slots		5405438	0					
ANR	5405451	Identifier	cache		5405438	0					
ANR	5405452	Identifier	slots		5405438	1					
ANR	5405453	PrimaryExpression	0		5405438	1					
ANR	5405454	IdentifierDeclStatement	int64_t slot0_blocknum = pslot -> blocknum ;	187:4:6452:6492	5405438	1	True				
ANR	5405455	IdentifierDecl	slot0_blocknum = pslot -> blocknum		5405438	0					
ANR	5405456	IdentifierDeclType	int64_t		5405438	0					
ANR	5405457	Identifier	slot0_blocknum		5405438	1					
ANR	5405458	AssignmentExpression	slot0_blocknum = pslot -> blocknum		5405438	2		=			
ANR	5405459	Identifier	slot0_blocknum		5405438	0					
ANR	5405460	PtrMemberAccess	pslot -> blocknum		5405438	1					
ANR	5405461	Identifier	pslot		5405438	0					
ANR	5405462	Identifier	blocknum		5405438	1					
ANR	5405463	IfStatement	if ( slot0_blocknum == CL_CACHE_SLOT_EMPTY )		5405438	2					
ANR	5405464	Condition	slot0_blocknum == CL_CACHE_SLOT_EMPTY	189:8:6503:6539	5405438	0	True				
ANR	5405465	EqualityExpression	slot0_blocknum == CL_CACHE_SLOT_EMPTY		5405438	0		==			
ANR	5405466	Identifier	slot0_blocknum		5405438	0					
ANR	5405467	Identifier	CL_CACHE_SLOT_EMPTY		5405438	1					
ANR	5405468	ReturnStatement	return pslot ;	190:8:6550:6562	5405438	1	True				
ANR	5405469	Identifier	pslot		5405438	0					
ANR	5405470	IfStatement	if ( cache -> nslots > 1 )		5405438	3					
ANR	5405471	Condition	cache -> nslots > 1	194:8:6752:6768	5405438	0	True				
ANR	5405472	RelationalExpression	cache -> nslots > 1		5405438	0		>			
ANR	5405473	PtrMemberAccess	cache -> nslots		5405438	0					
ANR	5405474	Identifier	cache		5405438	0					
ANR	5405475	Identifier	nslots		5405438	1					
ANR	5405476	PrimaryExpression	1		5405438	1					
ANR	5405477	CompoundStatement		14:8:721:726	5405438	1					
ANR	5405478	IdentifierDeclStatement	byte * last_slot_base = cache -> slots [ cache -> nslots - 1 ] . base ;	196:8:6887:6946	5405438	0	True				
ANR	5405479	IdentifierDecl	* last_slot_base = cache -> slots [ cache -> nslots - 1 ] . base		5405438	0					
ANR	5405480	IdentifierDeclType	byte *		5405438	0					
ANR	5405481	Identifier	last_slot_base		5405438	1					
ANR	5405482	AssignmentExpression	* last_slot_base = cache -> slots [ cache -> nslots - 1 ] . base		5405438	2		=			
ANR	5405483	Identifier	last_slot_base		5405438	0					
ANR	5405484	MemberAccess	cache -> slots [ cache -> nslots - 1 ] . base		5405438	1					
ANR	5405485	ArrayIndexing	cache -> slots [ cache -> nslots - 1 ]		5405438	0					
ANR	5405486	PtrMemberAccess	cache -> slots		5405438	0					
ANR	5405487	Identifier	cache		5405438	0					
ANR	5405488	Identifier	slots		5405438	1					
ANR	5405489	AdditiveExpression	cache -> nslots - 1		5405438	1		-			
ANR	5405490	PtrMemberAccess	cache -> nslots		5405438	0					
ANR	5405491	Identifier	cache		5405438	0					
ANR	5405492	Identifier	nslots		5405438	1					
ANR	5405493	PrimaryExpression	1		5405438	1					
ANR	5405494	Identifier	base		5405438	1					
ANR	5405495	IdentifierDeclStatement	int i ;	197:8:6997:7002	5405438	1	True				
ANR	5405496	IdentifierDecl	i		5405438	0					
ANR	5405497	IdentifierDeclType	int		5405438	0					
ANR	5405498	Identifier	i		5405438	1					
ANR	5405499	ForStatement	for ( i = cache -> nslots - 1 ; i > 0 ; i -- )		5405438	2					
ANR	5405500	ForInit	i = cache -> nslots - 1 ;	200:13:7051:7070	5405438	0	True				
ANR	5405501	AssignmentExpression	i = cache -> nslots - 1		5405438	0		=			
ANR	5405502	Identifier	i		5405438	0					
ANR	5405503	AdditiveExpression	cache -> nslots - 1		5405438	1		-			
ANR	5405504	PtrMemberAccess	cache -> nslots		5405438	0					
ANR	5405505	Identifier	cache		5405438	0					
ANR	5405506	Identifier	nslots		5405438	1					
ANR	5405507	PrimaryExpression	1		5405438	1					
ANR	5405508	Condition	i > 0	200:34:7072:7076	5405438	1	True				
ANR	5405509	RelationalExpression	i > 0		5405438	0		>			
ANR	5405510	Identifier	i		5405438	0					
ANR	5405511	PrimaryExpression	0		5405438	1					
ANR	5405512	PostIncDecOperationExpression	i --	200:41:7079:7081	5405438	2	True				
ANR	5405513	Identifier	i		5405438	0					
ANR	5405514	IncDec	--		5405438	1					
ANR	5405515	CompoundStatement		17:46:808:808	5405438	3					
ANR	5405516	ExpressionStatement	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum	201:12:7098:7151	5405438	0	True				
ANR	5405517	AssignmentExpression	cache -> slots [ i ] . blocknum = cache -> slots [ i - 1 ] . blocknum		5405438	0		=			
ANR	5405518	MemberAccess	cache -> slots [ i ] . blocknum		5405438	0					
ANR	5405519	ArrayIndexing	cache -> slots [ i ]		5405438	0					
ANR	5405520	PtrMemberAccess	cache -> slots		5405438	0					
ANR	5405521	Identifier	cache		5405438	0					
ANR	5405522	Identifier	slots		5405438	1					
ANR	5405523	Identifier	i		5405438	1					
ANR	5405524	Identifier	blocknum		5405438	1					
ANR	5405525	MemberAccess	cache -> slots [ i - 1 ] . blocknum		5405438	1					
ANR	5405526	ArrayIndexing	cache -> slots [ i - 1 ]		5405438	0					
ANR	5405527	PtrMemberAccess	cache -> slots		5405438	0					
ANR	5405528	Identifier	cache		5405438	0					
ANR	5405529	Identifier	slots		5405438	1					
ANR	5405530	AdditiveExpression	i - 1		5405438	1		-			
ANR	5405531	Identifier	i		5405438	0					
ANR	5405532	PrimaryExpression	1		5405438	1					
ANR	5405533	Identifier	blocknum		5405438	1					
ANR	5405534	ExpressionStatement	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base	202:12:7165:7210	5405438	1	True				
ANR	5405535	AssignmentExpression	cache -> slots [ i ] . base = cache -> slots [ i - 1 ] . base		5405438	0		=			
ANR	5405536	MemberAccess	cache -> slots [ i ] . base		5405438	0					
ANR	5405537	ArrayIndexing	cache -> slots [ i ]		5405438	0					
ANR	5405538	PtrMemberAccess	cache -> slots		5405438	0					
ANR	5405539	Identifier	cache		5405438	0					
ANR	5405540	Identifier	slots		5405438	1					
ANR	5405541	Identifier	i		5405438	1					
ANR	5405542	Identifier	base		5405438	1					
ANR	5405543	MemberAccess	cache -> slots [ i - 1 ] . base		5405438	1					
ANR	5405544	ArrayIndexing	cache -> slots [ i - 1 ]		5405438	0					
ANR	5405545	PtrMemberAccess	cache -> slots		5405438	0					
ANR	5405546	Identifier	cache		5405438	0					
ANR	5405547	Identifier	slots		5405438	1					
ANR	5405548	AdditiveExpression	i - 1		5405438	1		-			
ANR	5405549	Identifier	i		5405438	0					
ANR	5405550	PrimaryExpression	1		5405438	1					
ANR	5405551	Identifier	base		5405438	1					
ANR	5405552	ExpressionStatement	pslot -> base = last_slot_base	204:8:7230:7258	5405438	3	True				
ANR	5405553	AssignmentExpression	pslot -> base = last_slot_base		5405438	0		=			
ANR	5405554	PtrMemberAccess	pslot -> base		5405438	0					
ANR	5405555	Identifier	pslot		5405438	0					
ANR	5405556	Identifier	base		5405438	1					
ANR	5405557	Identifier	last_slot_base		5405438	1					
ANR	5405558	ExpressionStatement	pslot -> blocknum = CL_CACHE_SLOT_EMPTY	206:4:7270:7307	5405438	4	True				
ANR	5405559	AssignmentExpression	pslot -> blocknum = CL_CACHE_SLOT_EMPTY		5405438	0		=			
ANR	5405560	PtrMemberAccess	pslot -> blocknum		5405438	0					
ANR	5405561	Identifier	pslot		5405438	0					
ANR	5405562	Identifier	blocknum		5405438	1					
ANR	5405563	Identifier	CL_CACHE_SLOT_EMPTY		5405438	1					
ANR	5405564	ReturnStatement	return pslot ;	207:4:7313:7325	5405438	5	True				
ANR	5405565	Identifier	pslot		5405438	0					
ANR	5405566	ReturnType	CL_CACHE_SLOT *		5405438	1					
ANR	5405567	Identifier	cl_cache_get_empty_slot		5405438	2					
ANR	5405568	ParameterList	"CL_CACHE * cache , int64_t pos"		5405438	3					
ANR	5405569	Parameter	CL_CACHE * cache	183:24:6245:6259	5405438	0	True				
ANR	5405570	ParameterType	CL_CACHE *		5405438	0					
ANR	5405571	Identifier	cache		5405438	1					
ANR	5405572	Parameter	int64_t pos	183:41:6262:6272	5405438	1	True				
ANR	5405573	ParameterType	int64_t		5405438	0					
ANR	5405574	Identifier	pos		5405438	1					
ANR	5405575	CFGEntryNode	ENTRY		5405438		True				
ANR	5405576	CFGExitNode	EXIT		5405438		True				
ANR	5405577	Symbol	cache		5405438						
ANR	5405578	Symbol	pslot -> blocknum		5405438						
ANR	5405579	Symbol	cache -> slots		5405438						
ANR	5405580	Symbol	cache -> slots [ i ] . base		5405438						
ANR	5405581	Symbol	i		5405438						
ANR	5405582	Symbol	cache -> slots [ i - 1 ] . base		5405438						
ANR	5405583	Symbol	cache -> slots [ cache -> nslots - 1 ] . base		5405438						
ANR	5405584	Symbol	cache -> slots [ i - 1 ] . blocknum		5405438						
ANR	5405585	Symbol	* cache		5405438						
ANR	5405586	Symbol	pslot		5405438						
ANR	5405587	Symbol	cache -> nslots		5405438						
ANR	5405588	Symbol	CL_CACHE_SLOT_EMPTY		5405438						
ANR	5405589	Symbol	* cache -> nslots		5405438						
ANR	5405590	Symbol	* i		5405438						
ANR	5405591	Symbol	pos		5405438						
ANR	5405592	Symbol	* * cache		5405438						
ANR	5405593	Symbol	* pslot		5405438						
ANR	5405594	Symbol	last_slot_base		5405438						
ANR	5405595	Symbol	* cache -> slots		5405438						
ANR	5405596	Symbol	slot0_blocknum		5405438						
ANR	5405597	Symbol	cache -> slots [ i ] . blocknum		5405438						
ANR	5405598	Symbol	pslot -> base		5405438						
ANR	5405599	Function	cl_cache_load_slot	210:0:7330:7510							
ANR	5405600	FunctionDef	"cl_cache_load_slot (CL_CACHE * cache , CL_CACHE_SLOT * slot , int64_t pos , byte * data , int len)"		5405599	0					
ANR	5405601	CompoundStatement		212:0:7426:7510	5405599	0					
ANR	5405602	ExpressionStatement	slot -> blocknum = pos / cache -> block_size	213:4:7432:7472	5405599	0	True				
ANR	5405603	AssignmentExpression	slot -> blocknum = pos / cache -> block_size		5405599	0		=			
ANR	5405604	PtrMemberAccess	slot -> blocknum		5405599	0					
ANR	5405605	Identifier	slot		5405599	0					
ANR	5405606	Identifier	blocknum		5405599	1					
ANR	5405607	MultiplicativeExpression	pos / cache -> block_size		5405599	1		/			
ANR	5405608	Identifier	pos		5405599	0					
ANR	5405609	PtrMemberAccess	cache -> block_size		5405599	1					
ANR	5405610	Identifier	cache		5405599	0					
ANR	5405611	Identifier	block_size		5405599	1					
ANR	5405612	ExpressionStatement	"memmove ( slot -> base , data , len )"	214:4:7478:7508	5405599	1	True				
ANR	5405613	CallExpression	"memmove ( slot -> base , data , len )"		5405599	0					
ANR	5405614	Callee	memmove		5405599	0					
ANR	5405615	Identifier	memmove		5405599	0					
ANR	5405616	ArgumentList	slot -> base		5405599	1					
ANR	5405617	Argument	slot -> base		5405599	0					
ANR	5405618	PtrMemberAccess	slot -> base		5405599	0					
ANR	5405619	Identifier	slot		5405599	0					
ANR	5405620	Identifier	base		5405599	1					
ANR	5405621	Argument	data		5405599	1					
ANR	5405622	Identifier	data		5405599	0					
ANR	5405623	Argument	len		5405599	2					
ANR	5405624	Identifier	len		5405599	0					
ANR	5405625	ReturnType	void		5405599	1					
ANR	5405626	Identifier	cl_cache_load_slot		5405599	2					
ANR	5405627	ParameterList	"CL_CACHE * cache , CL_CACHE_SLOT * slot , int64_t pos , byte * data , int len"		5405599	3					
ANR	5405628	Parameter	CL_CACHE * cache	211:19:7354:7368	5405599	0	True				
ANR	5405629	ParameterType	CL_CACHE *		5405599	0					
ANR	5405630	Identifier	cache		5405599	1					
ANR	5405631	Parameter	CL_CACHE_SLOT * slot	211:36:7371:7389	5405599	1	True				
ANR	5405632	ParameterType	CL_CACHE_SLOT *		5405599	0					
ANR	5405633	Identifier	slot		5405599	1					
ANR	5405634	Parameter	int64_t pos	211:57:7392:7402	5405599	2	True				
ANR	5405635	ParameterType	int64_t		5405599	0					
ANR	5405636	Identifier	pos		5405599	1					
ANR	5405637	Parameter	byte * data	211:70:7405:7414	5405599	3	True				
ANR	5405638	ParameterType	byte *		5405599	0					
ANR	5405639	Identifier	data		5405599	1					
ANR	5405640	Parameter	int len	211:82:7417:7423	5405599	4	True				
ANR	5405641	ParameterType	int		5405599	0					
ANR	5405642	Identifier	len		5405599	1					
ANR	5405643	CFGEntryNode	ENTRY		5405599		True				
ANR	5405644	CFGExitNode	EXIT		5405599		True				
ANR	5405645	Symbol	* slot		5405599						
ANR	5405646	Symbol	slot -> base		5405599						
ANR	5405647	Symbol	cache		5405599						
ANR	5405648	Symbol	data		5405599						
ANR	5405649	Symbol	len		5405599						
ANR	5405650	Symbol	pos		5405599						
ANR	5405651	Symbol	slot -> blocknum		5405599						
ANR	5405652	Symbol	slot		5405599						
ANR	5405653	Symbol	* cache		5405599						
ANR	5405654	Symbol	cache -> block_size		5405599						
ANR	5405655	ClassDef	<unnamed>	227:8:7989:8143							
ANR	5405656	DeclStmt									
ANR	5405657	Decl							gs_memory_t	gs_memory_t *	mem
ANR	5405658	DeclStmt									
ANR	5405659	Decl							FILE	FILE *	f
ANR	5405660	DeclStmt									
ANR	5405661	Decl							int64_t	int64_t	pos
ANR	5405662	DeclStmt									
ANR	5405663	Decl							int64_t	int64_t	filesize
ANR	5405664	DeclStmt									
ANR	5405665	Decl							CL_CACHE	CL_CACHE *	cache
ANR	5405666	DeclStmt									
ANR	5405667	Decl									IFILE
ANR	5405668	Function	file_to_fake_path	236:0:8146:8275							
ANR	5405669	FunctionDef	"file_to_fake_path (clist_file_ptr file , char fname [ gp_file_name_sizeof ])"		5405668	0					
ANR	5405670	CompoundStatement		238:0:8230:8275	5405668	0					
ANR	5405671	ExpressionStatement	"gs_sprintf ( fname , ENC_FILE_STR , file )"	239:4:8236:8273	5405668	0	True				
ANR	5405672	CallExpression	"gs_sprintf ( fname , ENC_FILE_STR , file )"		5405668	0					
ANR	5405673	Callee	gs_sprintf		5405668	0					
ANR	5405674	Identifier	gs_sprintf		5405668	0					
ANR	5405675	ArgumentList	fname		5405668	1					
ANR	5405676	Argument	fname		5405668	0					
ANR	5405677	Identifier	fname		5405668	0					
ANR	5405678	Argument	ENC_FILE_STR		5405668	1					
ANR	5405679	Identifier	ENC_FILE_STR		5405668	0					
ANR	5405680	Argument	file		5405668	2					
ANR	5405681	Identifier	file		5405668	0					
ANR	5405682	ReturnType	static void		5405668	1					
ANR	5405683	Identifier	file_to_fake_path		5405668	2					
ANR	5405684	ParameterList	"clist_file_ptr file , char fname [ gp_file_name_sizeof ]"		5405668	3					
ANR	5405685	Parameter	clist_file_ptr file	237:18:8176:8194	5405668	0	True				
ANR	5405686	ParameterType	clist_file_ptr		5405668	0					
ANR	5405687	Identifier	file		5405668	1					
ANR	5405688	Parameter	char fname [ gp_file_name_sizeof ]	237:39:8197:8227	5405668	1	True				
ANR	5405689	ParameterType	char [ gp_file_name_sizeof ]		5405668	0					
ANR	5405690	Identifier	fname		5405668	1					
ANR	5405691	CFGEntryNode	ENTRY		5405668		True				
ANR	5405692	CFGExitNode	EXIT		5405668		True				
ANR	5405693	Symbol	fname		5405668						
ANR	5405694	Symbol	file		5405668						
ANR	5405695	Symbol	ENC_FILE_STR		5405668						
ANR	5405696	Function	fake_path_to_file	242:0:8278:8511							
ANR	5405697	FunctionDef	fake_path_to_file (const char * fname)		5405696	0					
ANR	5405698	CompoundStatement		244:0:8337:8511	5405696	0					
ANR	5405699	IdentifierDeclStatement	"clist_file_ptr i1 , i2 ;"	245:4:8343:8364	5405696	0	True				
ANR	5405700	IdentifierDecl	i1		5405696	0					
ANR	5405701	IdentifierDeclType	clist_file_ptr		5405696	0					
ANR	5405702	Identifier	i1		5405696	1					
ANR	5405703	IdentifierDecl	i2		5405696	1					
ANR	5405704	IdentifierDeclType	clist_file_ptr		5405696	0					
ANR	5405705	Identifier	i2		5405696	1					
ANR	5405706	IdentifierDeclStatement	"int r1 = sscanf ( fname , ENC_FILE_STR , & i1 ) ;"	247:4:8371:8412	5405696	1	True				
ANR	5405707	IdentifierDecl	"r1 = sscanf ( fname , ENC_FILE_STR , & i1 )"		5405696	0					
ANR	5405708	IdentifierDeclType	int		5405696	0					
ANR	5405709	Identifier	r1		5405696	1					
ANR	5405710	AssignmentExpression	"r1 = sscanf ( fname , ENC_FILE_STR , & i1 )"		5405696	2		=			
ANR	5405711	Identifier	r1		5405696	0					
ANR	5405712	CallExpression	"sscanf ( fname , ENC_FILE_STR , & i1 )"		5405696	1					
ANR	5405713	Callee	sscanf		5405696	0					
ANR	5405714	Identifier	sscanf		5405696	0					
ANR	5405715	ArgumentList	fname		5405696	1					
ANR	5405716	Argument	fname		5405696	0					
ANR	5405717	Identifier	fname		5405696	0					
ANR	5405718	Argument	ENC_FILE_STR		5405696	1					
ANR	5405719	Identifier	ENC_FILE_STR		5405696	0					
ANR	5405720	Argument	& i1		5405696	2					
ANR	5405721	UnaryOperationExpression	& i1		5405696	0					
ANR	5405722	UnaryOperator	&		5405696	0					
ANR	5405723	Identifier	i1		5405696	1					
ANR	5405724	IdentifierDeclStatement	"int r2 = sscanf ( fname , ENC_FILE_STRX , & i2 ) ;"	248:4:8418:8460	5405696	2	True				
ANR	5405725	IdentifierDecl	"r2 = sscanf ( fname , ENC_FILE_STRX , & i2 )"		5405696	0					
ANR	5405726	IdentifierDeclType	int		5405696	0					
ANR	5405727	Identifier	r2		5405696	1					
ANR	5405728	AssignmentExpression	"r2 = sscanf ( fname , ENC_FILE_STRX , & i2 )"		5405696	2		=			
ANR	5405729	Identifier	r2		5405696	0					
ANR	5405730	CallExpression	"sscanf ( fname , ENC_FILE_STRX , & i2 )"		5405696	1					
ANR	5405731	Callee	sscanf		5405696	0					
ANR	5405732	Identifier	sscanf		5405696	0					
ANR	5405733	ArgumentList	fname		5405696	1					
ANR	5405734	Argument	fname		5405696	0					
ANR	5405735	Identifier	fname		5405696	0					
ANR	5405736	Argument	ENC_FILE_STRX		5405696	1					
ANR	5405737	Identifier	ENC_FILE_STRX		5405696	0					
ANR	5405738	Argument	& i2		5405696	2					
ANR	5405739	UnaryOperationExpression	& i2		5405696	0					
ANR	5405740	UnaryOperator	&		5405696	0					
ANR	5405741	Identifier	i2		5405696	1					
ANR	5405742	ReturnStatement	return r2 == 1 ? i2 : ( r1 == 1 ? i1 : NULL ) ;	249:4:8466:8509	5405696	3	True				
ANR	5405743	ConditionalExpression	r2 == 1 ? i2 : ( r1 == 1 ? i1 : NULL )		5405696	0					
ANR	5405744	Condition	r2 == 1		5405696	0					
ANR	5405745	EqualityExpression	r2 == 1		5405696	0		==			
ANR	5405746	Identifier	r2		5405696	0					
ANR	5405747	PrimaryExpression	1		5405696	1					
ANR	5405748	Identifier	i2		5405696	1					
ANR	5405749	ConditionalExpression	r1 == 1 ? i1 : NULL		5405696	2					
ANR	5405750	Condition	r1 == 1		5405696	0					
ANR	5405751	EqualityExpression	r1 == 1		5405696	0		==			
ANR	5405752	Identifier	r1		5405696	0					
ANR	5405753	PrimaryExpression	1		5405696	1					
ANR	5405754	Identifier	i1		5405696	1					
ANR	5405755	Identifier	NULL		5405696	2					
ANR	5405756	ReturnType	static clist_file_ptr		5405696	1					
ANR	5405757	Identifier	fake_path_to_file		5405696	2					
ANR	5405758	ParameterList	const char * fname		5405696	3					
ANR	5405759	Parameter	const char * fname	243:18:8318:8334	5405696	0	True				
ANR	5405760	ParameterType	const char *		5405696	0					
ANR	5405761	Identifier	fname		5405696	1					
ANR	5405762	CFGEntryNode	ENTRY		5405696		True				
ANR	5405763	CFGExitNode	EXIT		5405696		True				
ANR	5405764	Symbol	r2		5405696						
ANR	5405765	Symbol	fname		5405696						
ANR	5405766	Symbol	& i2		5405696						
ANR	5405767	Symbol	ENC_FILE_STR		5405696						
ANR	5405768	Symbol	& i1		5405696						
ANR	5405769	Symbol	NULL		5405696						
ANR	5405770	Symbol	sscanf		5405696						
ANR	5405771	Symbol	ENC_FILE_STRX		5405696						
ANR	5405772	Symbol	i1		5405696						
ANR	5405773	Symbol	i2		5405696						
ANR	5405774	Symbol	r1		5405696						
ANR	5405775	Function	wrap_file	252:0:8514:8958							
ANR	5405776	FunctionDef	"wrap_file (gs_memory_t * mem , FILE * f , const char * fmode)"		5405775	0					
ANR	5405777	CompoundStatement		253:0:8584:8958	5405775	0					
ANR	5405778	IdentifierDeclStatement	IFILE * ifile ;	254:4:8590:8602	5405775	0	True				
ANR	5405779	IdentifierDecl	* ifile		5405775	0					
ANR	5405780	IdentifierDeclType	IFILE *		5405775	0					
ANR	5405781	Identifier	ifile		5405775	1					
ANR	5405782	IfStatement	if ( ! f )		5405775	1					
ANR	5405783	Condition	! f	256:8:8613:8614	5405775	0	True				
ANR	5405784	UnaryOperationExpression	! f		5405775	0					
ANR	5405785	UnaryOperator	!		5405775	0					
ANR	5405786	Identifier	f		5405775	1					
ANR	5405787	ReturnStatement	return NULL ;	256:12:8617:8628	5405775	1	True				
ANR	5405788	Identifier	NULL		5405775	0					
ANR	5405789	ExpressionStatement	"ifile = ( IFILE * ) gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"	257:4:8634:8727	5405775	2	True				
ANR	5405790	AssignmentExpression	"ifile = ( IFILE * ) gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"		5405775	0		=			
ANR	5405791	Identifier	ifile		5405775	0					
ANR	5405792	CastExpression	"( IFILE * ) gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"		5405775	1					
ANR	5405793	CastTarget	IFILE *		5405775	0					
ANR	5405794	CallExpression	"gs_alloc_bytes ( mem -> non_gc_memory , sizeof ( * ifile ) , ""Allocate wrapped IFILE"" )"		5405775	1					
ANR	5405795	Callee	gs_alloc_bytes		5405775	0					
ANR	5405796	Identifier	gs_alloc_bytes		5405775	0					
ANR	5405797	ArgumentList	mem -> non_gc_memory		5405775	1					
ANR	5405798	Argument	mem -> non_gc_memory		5405775	0					
ANR	5405799	PtrMemberAccess	mem -> non_gc_memory		5405775	0					
ANR	5405800	Identifier	mem		5405775	0					
ANR	5405801	Identifier	non_gc_memory		5405775	1					
ANR	5405802	Argument	sizeof ( * ifile )		5405775	1					
ANR	5405803	SizeofExpression	sizeof ( * ifile )		5405775	0					
ANR	5405804	Sizeof	sizeof		5405775	0					
ANR	5405805	UnaryOperationExpression	* ifile		5405775	1					
ANR	5405806	UnaryOperator	*		5405775	0					
ANR	5405807	Identifier	ifile		5405775	1					
ANR	5405808	Argument	"""Allocate wrapped IFILE"""		5405775	2					
ANR	5405809	PrimaryExpression	"""Allocate wrapped IFILE"""		5405775	0					
ANR	5405810	IfStatement	if ( ! ifile )		5405775	3					
ANR	5405811	Condition	! ifile	258:8:8737:8742	5405775	0	True				
ANR	5405812	UnaryOperationExpression	! ifile		5405775	0					
ANR	5405813	UnaryOperator	!		5405775	0					
ANR	5405814	Identifier	ifile		5405775	1					
ANR	5405815	CompoundStatement		6:16:160:160	5405775	1					
ANR	5405816	ExpressionStatement	fclose ( f )	259:8:8755:8764	5405775	0	True				
ANR	5405817	CallExpression	fclose ( f )		5405775	0					
ANR	5405818	Callee	fclose		5405775	0					
ANR	5405819	Identifier	fclose		5405775	0					
ANR	5405820	ArgumentList	f		5405775	1					
ANR	5405821	Argument	f		5405775	0					
ANR	5405822	Identifier	f		5405775	0					
ANR	5405823	ReturnStatement	return NULL ;	260:8:8774:8785	5405775	1	True				
ANR	5405824	Identifier	NULL		5405775	0					
ANR	5405825	ExpressionStatement	ifile -> mem = mem -> non_gc_memory	262:4:8797:8828	5405775	4	True				
ANR	5405826	AssignmentExpression	ifile -> mem = mem -> non_gc_memory		5405775	0		=			
ANR	5405827	PtrMemberAccess	ifile -> mem		5405775	0					
ANR	5405828	Identifier	ifile		5405775	0					
ANR	5405829	Identifier	mem		5405775	1					
ANR	5405830	PtrMemberAccess	mem -> non_gc_memory		5405775	1					
ANR	5405831	Identifier	mem		5405775	0					
ANR	5405832	Identifier	non_gc_memory		5405775	1					
ANR	5405833	ExpressionStatement	ifile -> f = f	263:4:8834:8846	5405775	5	True				
ANR	5405834	AssignmentExpression	ifile -> f = f		5405775	0		=			
ANR	5405835	PtrMemberAccess	ifile -> f		5405775	0					
ANR	5405836	Identifier	ifile		5405775	0					
ANR	5405837	Identifier	f		5405775	1					
ANR	5405838	Identifier	f		5405775	1					
ANR	5405839	ExpressionStatement	ifile -> pos = 0	264:4:8852:8866	5405775	6	True				
ANR	5405840	AssignmentExpression	ifile -> pos = 0		5405775	0		=			
ANR	5405841	PtrMemberAccess	ifile -> pos		5405775	0					
ANR	5405842	Identifier	ifile		5405775	0					
ANR	5405843	Identifier	pos		5405775	1					
ANR	5405844	PrimaryExpression	0		5405775	1					
ANR	5405845	ExpressionStatement	ifile -> filesize = 0	265:4:8872:8891	5405775	7	True				
ANR	5405846	AssignmentExpression	ifile -> filesize = 0		5405775	0		=			
ANR	5405847	PtrMemberAccess	ifile -> filesize		5405775	0					
ANR	5405848	Identifier	ifile		5405775	0					
ANR	5405849	Identifier	filesize		5405775	1					
ANR	5405850	PrimaryExpression	0		5405775	1					
ANR	5405851	ExpressionStatement	ifile -> cache = cl_cache_alloc ( ifile -> mem )	266:4:8897:8938	5405775	8	True				
ANR	5405852	AssignmentExpression	ifile -> cache = cl_cache_alloc ( ifile -> mem )		5405775	0		=			
ANR	5405853	PtrMemberAccess	ifile -> cache		5405775	0					
ANR	5405854	Identifier	ifile		5405775	0					
ANR	5405855	Identifier	cache		5405775	1					
ANR	5405856	CallExpression	cl_cache_alloc ( ifile -> mem )		5405775	1					
ANR	5405857	Callee	cl_cache_alloc		5405775	0					
ANR	5405858	Identifier	cl_cache_alloc		5405775	0					
ANR	5405859	ArgumentList	ifile -> mem		5405775	1					
ANR	5405860	Argument	ifile -> mem		5405775	0					
ANR	5405861	PtrMemberAccess	ifile -> mem		5405775	0					
ANR	5405862	Identifier	ifile		5405775	0					
ANR	5405863	Identifier	mem		5405775	1					
ANR	5405864	ReturnStatement	return ifile ;	267:4:8944:8956	5405775	9	True				
ANR	5405865	Identifier	ifile		5405775	0					
ANR	5405866	ReturnType	static IFILE *		5405775	1					
ANR	5405867	Identifier	wrap_file		5405775	2					
ANR	5405868	ParameterList	"gs_memory_t * mem , FILE * f , const char * fmode"		5405775	3					
ANR	5405869	Parameter	gs_memory_t * mem	252:24:8538:8553	5405775	0	True				
ANR	5405870	ParameterType	gs_memory_t *		5405775	0					
ANR	5405871	Identifier	mem		5405775	1					
ANR	5405872	Parameter	FILE * f	252:42:8556:8562	5405775	1	True				
ANR	5405873	ParameterType	FILE *		5405775	0					
ANR	5405874	Identifier	f		5405775	1					
ANR	5405875	Parameter	const char * fmode	252:51:8565:8581	5405775	2	True				
ANR	5405876	ParameterType	const char *		5405775	0					
ANR	5405877	Identifier	fmode		5405775	1					
ANR	5405878	CFGEntryNode	ENTRY		5405775		True				
ANR	5405879	CFGExitNode	EXIT		5405775		True				
ANR	5405880	Symbol	gs_alloc_bytes		5405775						
ANR	5405881	Symbol	NULL		5405775						
ANR	5405882	Symbol	ifile -> f		5405775						
ANR	5405883	Symbol	f		5405775						
ANR	5405884	Symbol	cl_cache_alloc		5405775						
ANR	5405885	Symbol	mem -> non_gc_memory		5405775						
ANR	5405886	Symbol	ifile -> filesize		5405775						
ANR	5405887	Symbol	ifile -> cache		5405775						
ANR	5405888	Symbol	ifile		5405775						
ANR	5405889	Symbol	mem		5405775						
ANR	5405890	Symbol	* ifile		5405775						
ANR	5405891	Symbol	fmode		5405775						
ANR	5405892	Symbol	ifile -> pos		5405775						
ANR	5405893	Symbol	ifile -> mem		5405775						
ANR	5405894	Symbol	* mem		5405775						
ANR	5405895	Function	close_file	270:0:8961:9230							
ANR	5405896	FunctionDef	close_file (IFILE * ifile)		5405895	0					
ANR	5405897	CompoundStatement		271:0:8997:9230	5405895	0					
ANR	5405898	IdentifierDeclStatement	int res = 0 ;	272:4:9003:9014	5405895	0	True				
ANR	5405899	IdentifierDecl	res = 0		5405895	0					
ANR	5405900	IdentifierDeclType	int		5405895	0					
ANR	5405901	Identifier	res		5405895	1					
ANR	5405902	AssignmentExpression	res = 0		5405895	2		=			
ANR	5405903	Identifier	res		5405895	0					
ANR	5405904	PrimaryExpression	0		5405895	1					
ANR	5405905	IfStatement	if ( ifile )		5405895	1					
ANR	5405906	Condition	ifile	273:8:9024:9028	5405895	0	True				
ANR	5405907	Identifier	ifile		5405895	0					
ANR	5405908	CompoundStatement		3:15:33:33	5405895	1					
ANR	5405909	ExpressionStatement	res = fclose ( ifile -> f )	274:8:9041:9063	5405895	0	True				
ANR	5405910	AssignmentExpression	res = fclose ( ifile -> f )		5405895	0		=			
ANR	5405911	Identifier	res		5405895	0					
ANR	5405912	CallExpression	fclose ( ifile -> f )		5405895	1					
ANR	5405913	Callee	fclose		5405895	0					
ANR	5405914	Identifier	fclose		5405895	0					
ANR	5405915	ArgumentList	ifile -> f		5405895	1					
ANR	5405916	Argument	ifile -> f		5405895	0					
ANR	5405917	PtrMemberAccess	ifile -> f		5405895	0					
ANR	5405918	Identifier	ifile		5405895	0					
ANR	5405919	Identifier	f		5405895	1					
ANR	5405920	IfStatement	if ( ifile -> cache != NULL )		5405895	1					
ANR	5405921	Condition	ifile -> cache != NULL	275:12:9077:9096	5405895	0	True				
ANR	5405922	EqualityExpression	ifile -> cache != NULL		5405895	0		!=			
ANR	5405923	PtrMemberAccess	ifile -> cache		5405895	0					
ANR	5405924	Identifier	ifile		5405895	0					
ANR	5405925	Identifier	cache		5405895	1					
ANR	5405926	Identifier	NULL		5405895	1					
ANR	5405927	ExpressionStatement	cl_cache_destroy ( ifile -> cache )	276:12:9111:9141	5405895	1	True				
ANR	5405928	CallExpression	cl_cache_destroy ( ifile -> cache )		5405895	0					
ANR	5405929	Callee	cl_cache_destroy		5405895	0					
ANR	5405930	Identifier	cl_cache_destroy		5405895	0					
ANR	5405931	ArgumentList	ifile -> cache		5405895	1					
ANR	5405932	Argument	ifile -> cache		5405895	0					
ANR	5405933	PtrMemberAccess	ifile -> cache		5405895	0					
ANR	5405934	Identifier	ifile		5405895	0					
ANR	5405935	Identifier	cache		5405895	1					
ANR	5405936	ExpressionStatement	"gs_free_object ( ifile -> mem , ifile , ""Free wrapped IFILE"" )"	277:8:9151:9206	5405895	2	True				
ANR	5405937	CallExpression	"gs_free_object ( ifile -> mem , ifile , ""Free wrapped IFILE"" )"		5405895	0					
ANR	5405938	Callee	gs_free_object		5405895	0					
ANR	5405939	Identifier	gs_free_object		5405895	0					
ANR	5405940	ArgumentList	ifile -> mem		5405895	1					
ANR	5405941	Argument	ifile -> mem		5405895	0					
ANR	5405942	PtrMemberAccess	ifile -> mem		5405895	0					
ANR	5405943	Identifier	ifile		5405895	0					
ANR	5405944	Identifier	mem		5405895	1					
ANR	5405945	Argument	ifile		5405895	1					
ANR	5405946	Identifier	ifile		5405895	0					
ANR	5405947	Argument	"""Free wrapped IFILE"""		5405895	2					
ANR	5405948	PrimaryExpression	"""Free wrapped IFILE"""		5405895	0					
ANR	5405949	ReturnStatement	return res ;	279:4:9218:9228	5405895	2	True				
ANR	5405950	Identifier	res		5405895	0					
ANR	5405951	ReturnType	static int		5405895	1					
ANR	5405952	Identifier	close_file		5405895	2					
ANR	5405953	ParameterList	IFILE * ifile		5405895	3					
ANR	5405954	Parameter	IFILE * ifile	270:22:8983:8994	5405895	0	True				
ANR	5405955	ParameterType	IFILE *		5405895	0					
ANR	5405956	Identifier	ifile		5405895	1					
ANR	5405957	CFGEntryNode	ENTRY		5405895		True				
ANR	5405958	CFGExitNode	EXIT		5405895		True				
ANR	5405959	Symbol	res		5405895						
ANR	5405960	Symbol	ifile -> cache		5405895						
ANR	5405961	Symbol	ifile		5405895						
ANR	5405962	Symbol	ifile -> f		5405895						
ANR	5405963	Symbol	NULL		5405895						
ANR	5405964	Symbol	fclose		5405895						
ANR	5405965	Symbol	* ifile		5405895						
ANR	5405966	Symbol	ifile -> mem		5405895						
ANR	5405967	Function	clist_fopen	284:0:9272:11016							
ANR	5405968	FunctionDef	"clist_fopen (char fname [ gp_file_name_sizeof ] , const char * fmode , clist_file_ptr * pcf , gs_memory_t * mem , gs_memory_t * data_mem , bool ok_to_compress)"		5405967	0					
ANR	5405969	CompoundStatement		288:0:9456:11016	5405967	0					
ANR	5405970	IfStatement	if ( * fname == 0 )		5405967	0					
ANR	5405971	Condition	* fname == 0	289:8:9466:9476	5405967	0	True				
ANR	5405972	EqualityExpression	* fname == 0		5405967	0		==			
ANR	5405973	UnaryOperationExpression	* fname		5405967	0					
ANR	5405974	UnaryOperator	*		5405967	0					
ANR	5405975	Identifier	fname		5405967	1					
ANR	5405976	PrimaryExpression	0		5405967	1					
ANR	5405977	CompoundStatement		2:21:22:22	5405967	1					
ANR	5405978	IfStatement	if ( fmode [ 0 ] == 'r' )		5405967	0					
ANR	5405979	Condition	fmode [ 0 ] == 'r'	290:12:9493:9507	5405967	0	True				
ANR	5405980	EqualityExpression	fmode [ 0 ] == 'r'		5405967	0		==			
ANR	5405981	ArrayIndexing	fmode [ 0 ]		5405967	0					
ANR	5405982	Identifier	fmode		5405967	0					
ANR	5405983	PrimaryExpression	0		5405967	1					
ANR	5405984	PrimaryExpression	'r'		5405967	1					
ANR	5405985	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	291:12:9522:9562	5405967	1	True				
ANR	5405986	CallExpression	return_error ( gs_error_invalidfileaccess )		5405967	0					
ANR	5405987	Callee	return_error		5405967	0					
ANR	5405988	Identifier	return_error		5405967	0					
ANR	5405989	ArgumentList	gs_error_invalidfileaccess		5405967	1					
ANR	5405990	Argument	gs_error_invalidfileaccess		5405967	0					
ANR	5405991	Identifier	gs_error_invalidfileaccess		5405967	0					
ANR	5405992	IfStatement	if ( gp_can_share_fdesc ( ) )		5405967	1					
ANR	5405993	Condition	gp_can_share_fdesc ( )	292:12:9576:9595	5405967	0	True				
ANR	5405994	CallExpression	gp_can_share_fdesc ( )		5405967	0					
ANR	5405995	Callee	gp_can_share_fdesc		5405967	0					
ANR	5405996	Identifier	gp_can_share_fdesc		5405967	0					
ANR	5405997	ArgumentList			5405967	1					
ANR	5405998	CompoundStatement		5:34:141:141	5405967	1					
ANR	5405999	ExpressionStatement	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"	293:12:9612:9839	5405967	0	True				
ANR	5406000	AssignmentExpression	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		5405967	0		=			
ANR	5406001	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406002	UnaryOperator	*		5405967	0					
ANR	5406003	Identifier	pcf		5405967	1					
ANR	5406004	CastExpression	"( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		5405967	1					
ANR	5406005	CastTarget	clist_file_ptr		5405967	0					
ANR	5406006	CallExpression	"wrap_file ( mem , gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		5405967	1					
ANR	5406007	Callee	wrap_file		5405967	0					
ANR	5406008	Identifier	wrap_file		5405967	0					
ANR	5406009	ArgumentList	mem		5405967	1					
ANR	5406010	Argument	mem		5405967	0					
ANR	5406011	Identifier	mem		5405967	0					
ANR	5406012	Argument	"gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode )"		5405967	1					
ANR	5406013	CallExpression	"gp_open_scratch_file_rm ( mem , gp_scratch_file_name_prefix , fname , fmode )"		5405967	0					
ANR	5406014	Callee	gp_open_scratch_file_rm		5405967	0					
ANR	5406015	Identifier	gp_open_scratch_file_rm		5405967	0					
ANR	5406016	ArgumentList	mem		5405967	1					
ANR	5406017	Argument	mem		5405967	0					
ANR	5406018	Identifier	mem		5405967	0					
ANR	5406019	Argument	gp_scratch_file_name_prefix		5405967	1					
ANR	5406020	Identifier	gp_scratch_file_name_prefix		5405967	0					
ANR	5406021	Argument	fname		5405967	2					
ANR	5406022	Identifier	fname		5405967	0					
ANR	5406023	Argument	fmode		5405967	3					
ANR	5406024	Identifier	fmode		5405967	0					
ANR	5406025	Argument	fmode		5405967	2					
ANR	5406026	Identifier	fmode		5405967	0					
ANR	5406027	IfStatement	if ( * pcf != NULL )		5405967	1					
ANR	5406028	Condition	* pcf != NULL	298:16:10005:10016	5405967	0	True				
ANR	5406029	EqualityExpression	* pcf != NULL		5405967	0		!=			
ANR	5406030	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406031	UnaryOperator	*		5405967	0					
ANR	5406032	Identifier	pcf		5405967	1					
ANR	5406033	Identifier	NULL		5405967	1					
ANR	5406034	ExpressionStatement	"file_to_fake_path ( * pcf , fname )"	299:16:10035:10065	5405967	1	True				
ANR	5406035	CallExpression	"file_to_fake_path ( * pcf , fname )"		5405967	0					
ANR	5406036	Callee	file_to_fake_path		5405967	0					
ANR	5406037	Identifier	file_to_fake_path		5405967	0					
ANR	5406038	ArgumentList	* pcf		5405967	1					
ANR	5406039	Argument	* pcf		5405967	0					
ANR	5406040	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406041	UnaryOperator	*		5405967	0					
ANR	5406042	Identifier	pcf		5405967	1					
ANR	5406043	Argument	fname		5405967	1					
ANR	5406044	Identifier	fname		5405967	0					
ANR	5406045	ElseStatement	else		5405967	0					
ANR	5406046	CompoundStatement		13:15:625:625	5405967	0					
ANR	5406047	ExpressionStatement	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"	301:12:10096:10323	5405967	0	True				
ANR	5406048	AssignmentExpression	"* pcf = ( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		5405967	0		=			
ANR	5406049	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406050	UnaryOperator	*		5405967	0					
ANR	5406051	Identifier	pcf		5405967	1					
ANR	5406052	CastExpression	"( clist_file_ptr ) wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		5405967	1					
ANR	5406053	CastTarget	clist_file_ptr		5405967	0					
ANR	5406054	CallExpression	"wrap_file ( mem , gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode ) , fmode )"		5405967	1					
ANR	5406055	Callee	wrap_file		5405967	0					
ANR	5406056	Identifier	wrap_file		5405967	0					
ANR	5406057	ArgumentList	mem		5405967	1					
ANR	5406058	Argument	mem		5405967	0					
ANR	5406059	Identifier	mem		5405967	0					
ANR	5406060	Argument	"gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode )"		5405967	1					
ANR	5406061	CallExpression	"gp_open_scratch_file_64 ( mem , gp_scratch_file_name_prefix , fname , fmode )"		5405967	0					
ANR	5406062	Callee	gp_open_scratch_file_64		5405967	0					
ANR	5406063	Identifier	gp_open_scratch_file_64		5405967	0					
ANR	5406064	ArgumentList	mem		5405967	1					
ANR	5406065	Argument	mem		5405967	0					
ANR	5406066	Identifier	mem		5405967	0					
ANR	5406067	Argument	gp_scratch_file_name_prefix		5405967	1					
ANR	5406068	Identifier	gp_scratch_file_name_prefix		5405967	0					
ANR	5406069	Argument	fname		5405967	2					
ANR	5406070	Identifier	fname		5405967	0					
ANR	5406071	Argument	fmode		5405967	3					
ANR	5406072	Identifier	fmode		5405967	0					
ANR	5406073	Argument	fmode		5405967	2					
ANR	5406074	Identifier	fmode		5405967	0					
ANR	5406075	ElseStatement	else		5405967	0					
ANR	5406076	CompoundStatement		19:8:899:944	5405967	0					
ANR	5406077	IdentifierDeclStatement	clist_file_ptr ocf = fake_path_to_file ( fname ) ;	306:8:10356:10401	5405967	0	True				
ANR	5406078	IdentifierDecl	ocf = fake_path_to_file ( fname )		5405967	0					
ANR	5406079	IdentifierDeclType	clist_file_ptr		5405967	0					
ANR	5406080	Identifier	ocf		5405967	1					
ANR	5406081	AssignmentExpression	ocf = fake_path_to_file ( fname )		5405967	2		=			
ANR	5406082	Identifier	ocf		5405967	0					
ANR	5406083	CallExpression	fake_path_to_file ( fname )		5405967	1					
ANR	5406084	Callee	fake_path_to_file		5405967	0					
ANR	5406085	Identifier	fake_path_to_file		5405967	0					
ANR	5406086	ArgumentList	fname		5405967	1					
ANR	5406087	Argument	fname		5405967	0					
ANR	5406088	Identifier	fname		5405967	0					
ANR	5406089	IfStatement	if ( ocf )		5405967	1					
ANR	5406090	Condition	ocf	307:12:10415:10417	5405967	0	True				
ANR	5406091	Identifier	ocf		5405967	0					
ANR	5406092	CompoundStatement		20:17:963:963	5405967	1					
ANR	5406093	ExpressionStatement	"* pcf = wrap_file ( mem , gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode ) , fmode )"	309:12:10519:10582	5405967	0	True				
ANR	5406094	AssignmentExpression	"* pcf = wrap_file ( mem , gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode ) , fmode )"		5405967	0		=			
ANR	5406095	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406096	UnaryOperator	*		5405967	0					
ANR	5406097	Identifier	pcf		5405967	1					
ANR	5406098	CallExpression	"wrap_file ( mem , gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode ) , fmode )"		5405967	1					
ANR	5406099	Callee	wrap_file		5405967	0					
ANR	5406100	Identifier	wrap_file		5405967	0					
ANR	5406101	ArgumentList	mem		5405967	1					
ANR	5406102	Argument	mem		5405967	0					
ANR	5406103	Identifier	mem		5405967	0					
ANR	5406104	Argument	"gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode )"		5405967	1					
ANR	5406105	CallExpression	"gp_fdup ( ( ( IFILE * ) ocf ) -> f , fmode )"		5405967	0					
ANR	5406106	Callee	gp_fdup		5405967	0					
ANR	5406107	Identifier	gp_fdup		5405967	0					
ANR	5406108	ArgumentList	( ( IFILE * ) ocf ) -> f		5405967	1					
ANR	5406109	Argument	( ( IFILE * ) ocf ) -> f		5405967	0					
ANR	5406110	PtrMemberAccess	( ( IFILE * ) ocf ) -> f		5405967	0					
ANR	5406111	CastExpression	( IFILE * ) ocf		5405967	0					
ANR	5406112	CastTarget	IFILE *		5405967	0					
ANR	5406113	Identifier	ocf		5405967	1					
ANR	5406114	Identifier	f		5405967	1					
ANR	5406115	Argument	fmode		5405967	1					
ANR	5406116	Identifier	fmode		5405967	0					
ANR	5406117	Argument	fmode		5405967	2					
ANR	5406118	Identifier	fmode		5405967	0					
ANR	5406119	IfStatement	if ( * pcf )		5405967	1					
ANR	5406120	Condition	* pcf	311:16:10671:10674	5405967	0	True				
ANR	5406121	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406122	UnaryOperator	*		5405967	0					
ANR	5406123	Identifier	pcf		5405967	1					
ANR	5406124	ExpressionStatement	( ( IFILE * ) ( * pcf ) ) -> filesize = ( ( IFILE * ) ocf ) -> filesize	312:16:10693:10747	5405967	1	True				
ANR	5406125	AssignmentExpression	( ( IFILE * ) ( * pcf ) ) -> filesize = ( ( IFILE * ) ocf ) -> filesize		5405967	0		=			
ANR	5406126	PtrMemberAccess	( ( IFILE * ) ( * pcf ) ) -> filesize		5405967	0					
ANR	5406127	CastExpression	( IFILE * ) ( * pcf )		5405967	0					
ANR	5406128	CastTarget	IFILE *		5405967	0					
ANR	5406129	UnaryOperationExpression	* pcf		5405967	1					
ANR	5406130	UnaryOperator	*		5405967	0					
ANR	5406131	Identifier	pcf		5405967	1					
ANR	5406132	Identifier	filesize		5405967	1					
ANR	5406133	PtrMemberAccess	( ( IFILE * ) ocf ) -> filesize		5405967	1					
ANR	5406134	CastExpression	( IFILE * ) ocf		5405967	0					
ANR	5406135	CastTarget	IFILE *		5405967	0					
ANR	5406136	Identifier	ocf		5405967	1					
ANR	5406137	Identifier	filesize		5405967	1					
ANR	5406138	ElseStatement	else		5405967	0					
ANR	5406139	CompoundStatement		26:15:1307:1307	5405967	0					
ANR	5406140	ExpressionStatement	"* pcf = wrap_file ( mem , gp_fopen ( fname , fmode ) , fmode )"	314:12:10778:10830	5405967	0	True				
ANR	5406141	AssignmentExpression	"* pcf = wrap_file ( mem , gp_fopen ( fname , fmode ) , fmode )"		5405967	0		=			
ANR	5406142	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406143	UnaryOperator	*		5405967	0					
ANR	5406144	Identifier	pcf		5405967	1					
ANR	5406145	CallExpression	"wrap_file ( mem , gp_fopen ( fname , fmode ) , fmode )"		5405967	1					
ANR	5406146	Callee	wrap_file		5405967	0					
ANR	5406147	Identifier	wrap_file		5405967	0					
ANR	5406148	ArgumentList	mem		5405967	1					
ANR	5406149	Argument	mem		5405967	0					
ANR	5406150	Identifier	mem		5405967	0					
ANR	5406151	Argument	"gp_fopen ( fname , fmode )"		5405967	1					
ANR	5406152	CallExpression	"gp_fopen ( fname , fmode )"		5405967	0					
ANR	5406153	Callee	gp_fopen		5405967	0					
ANR	5406154	Identifier	gp_fopen		5405967	0					
ANR	5406155	ArgumentList	fname		5405967	1					
ANR	5406156	Argument	fname		5405967	0					
ANR	5406157	Identifier	fname		5405967	0					
ANR	5406158	Argument	fmode		5405967	1					
ANR	5406159	Identifier	fmode		5405967	0					
ANR	5406160	Argument	fmode		5405967	2					
ANR	5406161	Identifier	fmode		5405967	0					
ANR	5406162	IfStatement	if ( * pcf == NULL )		5405967	1					
ANR	5406163	Condition	* pcf == NULL	318:8:10857:10868	5405967	0	True				
ANR	5406164	EqualityExpression	* pcf == NULL		5405967	0		==			
ANR	5406165	UnaryOperationExpression	* pcf		5405967	0					
ANR	5406166	UnaryOperator	*		5405967	0					
ANR	5406167	Identifier	pcf		5405967	1					
ANR	5406168	Identifier	NULL		5405967	1					
ANR	5406169	CompoundStatement		31:22:1414:1414	5405967	1					
ANR	5406170	ExpressionStatement	"emprintf1 ( mem , ""Could not open the scratch file %s.\\n"" , fname )"	319:8:10881:10943	5405967	0	True				
ANR	5406171	CallExpression	"emprintf1 ( mem , ""Could not open the scratch file %s.\\n"" , fname )"		5405967	0					
ANR	5406172	Callee	emprintf1		5405967	0					
ANR	5406173	Identifier	emprintf1		5405967	0					
ANR	5406174	ArgumentList	mem		5405967	1					
ANR	5406175	Argument	mem		5405967	0					
ANR	5406176	Identifier	mem		5405967	0					
ANR	5406177	Argument	"""Could not open the scratch file %s.\\n"""		5405967	1					
ANR	5406178	PrimaryExpression	"""Could not open the scratch file %s.\\n"""		5405967	0					
ANR	5406179	Argument	fname		5405967	2					
ANR	5406180	Identifier	fname		5405967	0					
ANR	5406181	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	320:8:10953:10993	5405967	1	True				
ANR	5406182	CallExpression	return_error ( gs_error_invalidfileaccess )		5405967	0					
ANR	5406183	Callee	return_error		5405967	0					
ANR	5406184	Identifier	return_error		5405967	0					
ANR	5406185	ArgumentList	gs_error_invalidfileaccess		5405967	1					
ANR	5406186	Argument	gs_error_invalidfileaccess		5405967	0					
ANR	5406187	Identifier	gs_error_invalidfileaccess		5405967	0					
ANR	5406188	ReturnStatement	return 0 ;	323:4:11006:11014	5405967	2	True				
ANR	5406189	PrimaryExpression	0		5405967	0					
ANR	5406190	ReturnType	static int		5405967	1					
ANR	5406191	Identifier	clist_fopen		5405967	2					
ANR	5406192	ParameterList	"char fname [ gp_file_name_sizeof ] , const char * fmode , clist_file_ptr * pcf , gs_memory_t * mem , gs_memory_t * data_mem , bool ok_to_compress"		5405967	3					
ANR	5406193	Parameter	char fname [ gp_file_name_sizeof ]	285:12:9295:9325	5405967	0	True				
ANR	5406194	ParameterType	char [ gp_file_name_sizeof ]		5405967	0					
ANR	5406195	Identifier	fname		5405967	1					
ANR	5406196	Parameter	const char * fmode	285:45:9328:9344	5405967	1	True				
ANR	5406197	ParameterType	const char *		5405967	0					
ANR	5406198	Identifier	fmode		5405967	1					
ANR	5406199	Parameter	clist_file_ptr * pcf	286:12:9359:9378	5405967	2	True				
ANR	5406200	ParameterType	clist_file_ptr *		5405967	0					
ANR	5406201	Identifier	pcf		5405967	1					
ANR	5406202	Parameter	gs_memory_t * mem	286:34:9381:9397	5405967	3	True				
ANR	5406203	ParameterType	gs_memory_t *		5405967	0					
ANR	5406204	Identifier	mem		5405967	1					
ANR	5406205	Parameter	gs_memory_t * data_mem	286:53:9400:9420	5405967	4	True				
ANR	5406206	ParameterType	gs_memory_t *		5405967	0					
ANR	5406207	Identifier	data_mem		5405967	1					
ANR	5406208	Parameter	bool ok_to_compress	287:12:9435:9453	5405967	5	True				
ANR	5406209	ParameterType	bool		5405967	0					
ANR	5406210	Identifier	ok_to_compress		5405967	1					
ANR	5406211	CFGEntryNode	ENTRY		5405967		True				
ANR	5406212	CFGExitNode	EXIT		5405967		True				
ANR	5406213	Symbol	ok_to_compress		5405967						
ANR	5406214	Symbol	gp_fdup		5405967						
ANR	5406215	Symbol	* fname		5405967						
ANR	5406216	Symbol	wrap_file		5405967						
ANR	5406217	Symbol	pcf		5405967						
ANR	5406218	Symbol	ocf		5405967						
ANR	5406219	Symbol	mem		5405967						
ANR	5406220	Symbol	gp_scratch_file_name_prefix		5405967						
ANR	5406221	Symbol	gp_can_share_fdesc		5405967						
ANR	5406222	Symbol	fmode		5405967						
ANR	5406223	Symbol	gp_fopen		5405967						
ANR	5406224	Symbol	fname		5405967						
ANR	5406225	Symbol	( ( IFILE * ) ocf ) -> filesize		5405967						
ANR	5406226	Symbol	* fmode		5405967						
ANR	5406227	Symbol	NULL		5405967						
ANR	5406228	Symbol	fake_path_to_file		5405967						
ANR	5406229	Symbol	data_mem		5405967						
ANR	5406230	Symbol	* * pcf		5405967						
ANR	5406231	Symbol	gp_open_scratch_file_rm		5405967						
ANR	5406232	Symbol	( ( IFILE * ) ( * pcf ) ) -> filesize		5405967						
ANR	5406233	Symbol	gp_open_scratch_file_64		5405967						
ANR	5406234	Symbol	( ( IFILE * ) ocf ) -> f		5405967						
ANR	5406235	Symbol	gs_error_invalidfileaccess		5405967						
ANR	5406236	Symbol	* ocf		5405967						
ANR	5406237	Symbol	* pcf		5405967						
ANR	5406238	Function	clist_unlink	326:0:11019:11509							
ANR	5406239	FunctionDef	clist_unlink (const char * fname)		5406238	0					
ANR	5406240	CompoundStatement		328:0:11062:11509	5406238	0					
ANR	5406241	IdentifierDeclStatement	clist_file_ptr ocf = fake_path_to_file ( fname ) ;	329:4:11068:11113	5406238	0	True				
ANR	5406242	IdentifierDecl	ocf = fake_path_to_file ( fname )		5406238	0					
ANR	5406243	IdentifierDeclType	clist_file_ptr		5406238	0					
ANR	5406244	Identifier	ocf		5406238	1					
ANR	5406245	AssignmentExpression	ocf = fake_path_to_file ( fname )		5406238	2		=			
ANR	5406246	Identifier	ocf		5406238	0					
ANR	5406247	CallExpression	fake_path_to_file ( fname )		5406238	1					
ANR	5406248	Callee	fake_path_to_file		5406238	0					
ANR	5406249	Identifier	fake_path_to_file		5406238	0					
ANR	5406250	ArgumentList	fname		5406238	1					
ANR	5406251	Argument	fname		5406238	0					
ANR	5406252	Identifier	fname		5406238	0					
ANR	5406253	IfStatement	if ( ocf )		5406238	1					
ANR	5406254	Condition	ocf	330:8:11123:11125	5406238	0	True				
ANR	5406255	Identifier	ocf		5406238	0					
ANR	5406256	CompoundStatement		3:13:65:65	5406238	1					
ANR	5406257	ReturnStatement	return close_file ( ( IFILE * ) ocf ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0 ;	334:8:11339:11413	5406238	0	True				
ANR	5406258	ConditionalExpression	close_file ( ( IFILE * ) ocf ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0		5406238	0					
ANR	5406259	Condition	close_file ( ( IFILE * ) ocf ) != 0		5406238	0					
ANR	5406260	EqualityExpression	close_file ( ( IFILE * ) ocf ) != 0		5406238	0		!=			
ANR	5406261	CallExpression	close_file ( ( IFILE * ) ocf )		5406238	0					
ANR	5406262	Callee	close_file		5406238	0					
ANR	5406263	Identifier	close_file		5406238	0					
ANR	5406264	ArgumentList	( IFILE * ) ocf		5406238	1					
ANR	5406265	Argument	( IFILE * ) ocf		5406238	0					
ANR	5406266	CastExpression	( IFILE * ) ocf		5406238	0					
ANR	5406267	CastTarget	IFILE *		5406238	0					
ANR	5406268	Identifier	ocf		5406238	1					
ANR	5406269	PrimaryExpression	0		5406238	1					
ANR	5406270	CallExpression	gs_note_error ( gs_error_ioerror )		5406238	1					
ANR	5406271	Callee	gs_note_error		5406238	0					
ANR	5406272	Identifier	gs_note_error		5406238	0					
ANR	5406273	ArgumentList	gs_error_ioerror		5406238	1					
ANR	5406274	Argument	gs_error_ioerror		5406238	0					
ANR	5406275	Identifier	gs_error_ioerror		5406238	0					
ANR	5406276	PrimaryExpression	0		5406238	2					
ANR	5406277	ElseStatement	else		5406238	0					
ANR	5406278	CompoundStatement		8:11:363:363	5406238	0					
ANR	5406279	ReturnStatement	return ( unlink ( fname ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0 ) ;	336:8:11436:11501	5406238	0	True				
ANR	5406280	ConditionalExpression	unlink ( fname ) != 0 ? gs_note_error ( gs_error_ioerror ) : 0		5406238	0					
ANR	5406281	Condition	unlink ( fname ) != 0		5406238	0					
ANR	5406282	EqualityExpression	unlink ( fname ) != 0		5406238	0		!=			
ANR	5406283	CallExpression	unlink ( fname )		5406238	0					
ANR	5406284	Callee	unlink		5406238	0					
ANR	5406285	Identifier	unlink		5406238	0					
ANR	5406286	ArgumentList	fname		5406238	1					
ANR	5406287	Argument	fname		5406238	0					
ANR	5406288	Identifier	fname		5406238	0					
ANR	5406289	PrimaryExpression	0		5406238	1					
ANR	5406290	CallExpression	gs_note_error ( gs_error_ioerror )		5406238	1					
ANR	5406291	Callee	gs_note_error		5406238	0					
ANR	5406292	Identifier	gs_note_error		5406238	0					
ANR	5406293	ArgumentList	gs_error_ioerror		5406238	1					
ANR	5406294	Argument	gs_error_ioerror		5406238	0					
ANR	5406295	Identifier	gs_error_ioerror		5406238	0					
ANR	5406296	PrimaryExpression	0		5406238	2					
ANR	5406297	ReturnType	static int		5406238	1					
ANR	5406298	Identifier	clist_unlink		5406238	2					
ANR	5406299	ParameterList	const char * fname		5406238	3					
ANR	5406300	Parameter	const char * fname	327:13:11043:11059	5406238	0	True				
ANR	5406301	ParameterType	const char *		5406238	0					
ANR	5406302	Identifier	fname		5406238	1					
ANR	5406303	CFGEntryNode	ENTRY		5406238		True				
ANR	5406304	CFGExitNode	EXIT		5406238		True				
ANR	5406305	Symbol	fname		5406238						
ANR	5406306	Symbol	gs_note_error		5406238						
ANR	5406307	Symbol	ocf		5406238						
ANR	5406308	Symbol	fake_path_to_file		5406238						
ANR	5406309	Symbol	unlink		5406238						
ANR	5406310	Symbol	gs_error_ioerror		5406238						
ANR	5406311	Symbol	close_file		5406238						
ANR	5406312	DeclStmt									
ANR	5406313	Decl							clist_file_ptr	clist_file_ptr	ocf
ANR	5406314	Function	clist_fwrite_chars	358:0:12165:12760							
ANR	5406315	FunctionDef	"clist_fwrite_chars (const void * data , uint len , clist_file_ptr cf)"		5406314	0					
ANR	5406316	CompoundStatement		360:0:12242:12760	5406314	0					
ANR	5406317	IdentifierDeclStatement	int res = 0 ;	361:4:12248:12259	5406314	0	True				
ANR	5406318	IdentifierDecl	res = 0		5406314	0					
ANR	5406319	IdentifierDeclType	int		5406314	0					
ANR	5406320	Identifier	res		5406314	1					
ANR	5406321	AssignmentExpression	res = 0		5406314	2		=			
ANR	5406322	Identifier	res		5406314	0					
ANR	5406323	PrimaryExpression	0		5406314	1					
ANR	5406324	IdentifierDeclStatement	IFILE * icf = ( IFILE * ) cf ;	362:4:12265:12289	5406314	1	True				
ANR	5406325	IdentifierDecl	* icf = ( IFILE * ) cf		5406314	0					
ANR	5406326	IdentifierDeclType	IFILE *		5406314	0					
ANR	5406327	Identifier	icf		5406314	1					
ANR	5406328	AssignmentExpression	* icf = ( IFILE * ) cf		5406314	2		=			
ANR	5406329	Identifier	icf		5406314	0					
ANR	5406330	CastExpression	( IFILE * ) cf		5406314	1					
ANR	5406331	CastTarget	IFILE *		5406314	0					
ANR	5406332	Identifier	cf		5406314	1					
ANR	5406333	IfStatement	if ( gp_can_share_fdesc ( ) )		5406314	2					
ANR	5406334	Condition	gp_can_share_fdesc ( )	364:8:12300:12319	5406314	0	True				
ANR	5406335	CallExpression	gp_can_share_fdesc ( )		5406314	0					
ANR	5406336	Callee	gp_can_share_fdesc		5406314	0					
ANR	5406337	Identifier	gp_can_share_fdesc		5406314	0					
ANR	5406338	ArgumentList			5406314	1					
ANR	5406339	CompoundStatement		5:30:79:79	5406314	1					
ANR	5406340	ExpressionStatement	"res = gp_fpwrite ( ( char * ) data , len , ( ( IFILE * ) cf ) -> pos , ( ( IFILE * ) cf ) -> f )"	365:8:12332:12405	5406314	0	True				
ANR	5406341	AssignmentExpression	"res = gp_fpwrite ( ( char * ) data , len , ( ( IFILE * ) cf ) -> pos , ( ( IFILE * ) cf ) -> f )"		5406314	0		=			
ANR	5406342	Identifier	res		5406314	0					
ANR	5406343	CallExpression	"gp_fpwrite ( ( char * ) data , len , ( ( IFILE * ) cf ) -> pos , ( ( IFILE * ) cf ) -> f )"		5406314	1					
ANR	5406344	Callee	gp_fpwrite		5406314	0					
ANR	5406345	Identifier	gp_fpwrite		5406314	0					
ANR	5406346	ArgumentList	( char * ) data		5406314	1					
ANR	5406347	Argument	( char * ) data		5406314	0					
ANR	5406348	CastExpression	( char * ) data		5406314	0					
ANR	5406349	CastTarget	char *		5406314	0					
ANR	5406350	Identifier	data		5406314	1					
ANR	5406351	Argument	len		5406314	1					
ANR	5406352	Identifier	len		5406314	0					
ANR	5406353	Argument	( ( IFILE * ) cf ) -> pos		5406314	2					
ANR	5406354	PtrMemberAccess	( ( IFILE * ) cf ) -> pos		5406314	0					
ANR	5406355	CastExpression	( IFILE * ) cf		5406314	0					
ANR	5406356	CastTarget	IFILE *		5406314	0					
ANR	5406357	Identifier	cf		5406314	1					
ANR	5406358	Identifier	pos		5406314	1					
ANR	5406359	Argument	( ( IFILE * ) cf ) -> f		5406314	3					
ANR	5406360	PtrMemberAccess	( ( IFILE * ) cf ) -> f		5406314	0					
ANR	5406361	CastExpression	( IFILE * ) cf		5406314	0					
ANR	5406362	CastTarget	IFILE *		5406314	0					
ANR	5406363	Identifier	cf		5406314	1					
ANR	5406364	Identifier	f		5406314	1					
ANR	5406365	ElseStatement	else		5406314	0					
ANR	5406366	CompoundStatement		7:11:175:175	5406314	0					
ANR	5406367	ExpressionStatement	"res = fwrite ( data , 1 , len , ( ( IFILE * ) cf ) -> f )"	367:8:12428:12472	5406314	0	True				
ANR	5406368	AssignmentExpression	"res = fwrite ( data , 1 , len , ( ( IFILE * ) cf ) -> f )"		5406314	0		=			
ANR	5406369	Identifier	res		5406314	0					
ANR	5406370	CallExpression	"fwrite ( data , 1 , len , ( ( IFILE * ) cf ) -> f )"		5406314	1					
ANR	5406371	Callee	fwrite		5406314	0					
ANR	5406372	Identifier	fwrite		5406314	0					
ANR	5406373	ArgumentList	data		5406314	1					
ANR	5406374	Argument	data		5406314	0					
ANR	5406375	Identifier	data		5406314	0					
ANR	5406376	Argument	1		5406314	1					
ANR	5406377	PrimaryExpression	1		5406314	0					
ANR	5406378	Argument	len		5406314	2					
ANR	5406379	Identifier	len		5406314	0					
ANR	5406380	Argument	( ( IFILE * ) cf ) -> f		5406314	3					
ANR	5406381	PtrMemberAccess	( ( IFILE * ) cf ) -> f		5406314	0					
ANR	5406382	CastExpression	( IFILE * ) cf		5406314	0					
ANR	5406383	CastTarget	IFILE *		5406314	0					
ANR	5406384	Identifier	cf		5406314	1					
ANR	5406385	Identifier	f		5406314	1					
ANR	5406386	IfStatement	if ( res >= 0 )		5406314	3					
ANR	5406387	Condition	res >= 0	369:8:12488:12495	5406314	0	True				
ANR	5406388	RelationalExpression	res >= 0		5406314	0		>=			
ANR	5406389	Identifier	res		5406314	0					
ANR	5406390	PrimaryExpression	0		5406314	1					
ANR	5406391	ExpressionStatement	icf -> pos += len	370:8:12506:12521	5406314	1	True				
ANR	5406392	AssignmentExpression	icf -> pos += len		5406314	0		+=			
ANR	5406393	PtrMemberAccess	icf -> pos		5406314	0					
ANR	5406394	Identifier	icf		5406314	0					
ANR	5406395	Identifier	pos		5406314	1					
ANR	5406396	Identifier	len		5406314	1					
ANR	5406397	ExpressionStatement	icf -> filesize = icf -> pos	371:4:12527:12551	5406314	4	True				
ANR	5406398	AssignmentExpression	icf -> filesize = icf -> pos		5406314	0		=			
ANR	5406399	PtrMemberAccess	icf -> filesize		5406314	0					
ANR	5406400	Identifier	icf		5406314	0					
ANR	5406401	Identifier	filesize		5406314	1					
ANR	5406402	PtrMemberAccess	icf -> pos		5406314	1					
ANR	5406403	Identifier	icf		5406314	0					
ANR	5406404	Identifier	pos		5406314	1					
ANR	5406405	IfStatement	if ( ! CL_CACHE_NEEDS_INIT ( icf -> cache ) )		5406314	5					
ANR	5406406	Condition	! CL_CACHE_NEEDS_INIT ( icf -> cache )	372:8:12588:12619	5406314	0	True				
ANR	5406407	UnaryOperationExpression	! CL_CACHE_NEEDS_INIT ( icf -> cache )		5406314	0					
ANR	5406408	UnaryOperator	!		5406314	0					
ANR	5406409	CallExpression	CL_CACHE_NEEDS_INIT ( icf -> cache )		5406314	1					
ANR	5406410	Callee	CL_CACHE_NEEDS_INIT		5406314	0					
ANR	5406411	Identifier	CL_CACHE_NEEDS_INIT		5406314	0					
ANR	5406412	ArgumentList	icf -> cache		5406314	1					
ANR	5406413	Argument	icf -> cache		5406314	0					
ANR	5406414	PtrMemberAccess	icf -> cache		5406314	0					
ANR	5406415	Identifier	icf		5406314	0					
ANR	5406416	Identifier	cache		5406314	1					
ANR	5406417	CompoundStatement		13:42:379:379	5406314	1					
ANR	5406418	ExpressionStatement	cl_cache_destroy ( icf -> cache )	374:8:12681:12709	5406314	0	True				
ANR	5406419	CallExpression	cl_cache_destroy ( icf -> cache )		5406314	0					
ANR	5406420	Callee	cl_cache_destroy		5406314	0					
ANR	5406421	Identifier	cl_cache_destroy		5406314	0					
ANR	5406422	ArgumentList	icf -> cache		5406314	1					
ANR	5406423	Argument	icf -> cache		5406314	0					
ANR	5406424	PtrMemberAccess	icf -> cache		5406314	0					
ANR	5406425	Identifier	icf		5406314	0					
ANR	5406426	Identifier	cache		5406314	1					
ANR	5406427	ExpressionStatement	icf -> cache = NULL	375:8:12719:12736	5406314	1	True				
ANR	5406428	AssignmentExpression	icf -> cache = NULL		5406314	0		=			
ANR	5406429	PtrMemberAccess	icf -> cache		5406314	0					
ANR	5406430	Identifier	icf		5406314	0					
ANR	5406431	Identifier	cache		5406314	1					
ANR	5406432	Identifier	NULL		5406314	1					
ANR	5406433	ReturnStatement	return res ;	377:4:12748:12758	5406314	6	True				
ANR	5406434	Identifier	res		5406314	0					
ANR	5406435	ReturnType	static int		5406314	1					
ANR	5406436	Identifier	clist_fwrite_chars		5406314	2					
ANR	5406437	ParameterList	"const void * data , uint len , clist_file_ptr cf"		5406314	3					
ANR	5406438	Parameter	const void * data	359:19:12195:12210	5406314	0	True				
ANR	5406439	ParameterType	const void *		5406314	0					
ANR	5406440	Identifier	data		5406314	1					
ANR	5406441	Parameter	uint len	359:37:12213:12220	5406314	1	True				
ANR	5406442	ParameterType	uint		5406314	0					
ANR	5406443	Identifier	len		5406314	1					
ANR	5406444	Parameter	clist_file_ptr cf	359:47:12223:12239	5406314	2	True				
ANR	5406445	ParameterType	clist_file_ptr		5406314	0					
ANR	5406446	Identifier	cf		5406314	1					
ANR	5406447	CFGEntryNode	ENTRY		5406314		True				
ANR	5406448	CFGExitNode	EXIT		5406314		True				
ANR	5406449	Symbol	icf -> pos		5406314						
ANR	5406450	Symbol	res		5406314						
ANR	5406451	Symbol	cf		5406314						
ANR	5406452	Symbol	NULL		5406314						
ANR	5406453	Symbol	data		5406314						
ANR	5406454	Symbol	( ( IFILE * ) cf ) -> pos		5406314						
ANR	5406455	Symbol	CL_CACHE_NEEDS_INIT		5406314						
ANR	5406456	Symbol	( ( IFILE * ) cf ) -> f		5406314						
ANR	5406457	Symbol	fwrite		5406314						
ANR	5406458	Symbol	* icf		5406314						
ANR	5406459	Symbol	* cf		5406314						
ANR	5406460	Symbol	icf		5406314						
ANR	5406461	Symbol	len		5406314						
ANR	5406462	Symbol	gp_fpwrite		5406314						
ANR	5406463	Symbol	icf -> filesize		5406314						
ANR	5406464	Symbol	icf -> cache		5406314						
ANR	5406465	Symbol	gp_can_share_fdesc		5406314						
ANR	5406466	Function	clist_fread_chars	382:0:12792:15189							
ANR	5406467	FunctionDef	"clist_fread_chars (void * data , uint len , clist_file_ptr cf)"		5406466	0					
ANR	5406468	CompoundStatement		384:0:12862:15189	5406466	0					
ANR	5406469	IdentifierDeclStatement	int nread = 0 ;	385:4:12868:12881	5406466	0	True				
ANR	5406470	IdentifierDecl	nread = 0		5406466	0					
ANR	5406471	IdentifierDeclType	int		5406466	0					
ANR	5406472	Identifier	nread		5406466	1					
ANR	5406473	AssignmentExpression	nread = 0		5406466	2		=			
ANR	5406474	Identifier	nread		5406466	0					
ANR	5406475	PrimaryExpression	0		5406466	1					
ANR	5406476	IfStatement	if ( gp_can_share_fdesc ( ) )		5406466	1					
ANR	5406477	Condition	gp_can_share_fdesc ( )	387:8:12892:12911	5406466	0	True				
ANR	5406478	CallExpression	gp_can_share_fdesc ( )		5406466	0					
ANR	5406479	Callee	gp_can_share_fdesc		5406466	0					
ANR	5406480	Identifier	gp_can_share_fdesc		5406466	0					
ANR	5406481	ArgumentList			5406466	1					
ANR	5406482	CompoundStatement		6:8:95:110	5406466	1					
ANR	5406483	IdentifierDeclStatement	IFILE * icf = ( IFILE * ) cf ;	388:8:12924:12948	5406466	0	True				
ANR	5406484	IdentifierDecl	* icf = ( IFILE * ) cf		5406466	0					
ANR	5406485	IdentifierDeclType	IFILE *		5406466	0					
ANR	5406486	Identifier	icf		5406466	1					
ANR	5406487	AssignmentExpression	* icf = ( IFILE * ) cf		5406466	2		=			
ANR	5406488	Identifier	icf		5406466	0					
ANR	5406489	CastExpression	( IFILE * ) cf		5406466	1					
ANR	5406490	CastTarget	IFILE *		5406466	0					
ANR	5406491	Identifier	cf		5406466	1					
ANR	5406492	IdentifierDeclStatement	byte * dp = data ;	389:8:12958:12973	5406466	1	True				
ANR	5406493	IdentifierDecl	* dp = data		5406466	0					
ANR	5406494	IdentifierDeclType	byte *		5406466	0					
ANR	5406495	Identifier	dp		5406466	1					
ANR	5406496	AssignmentExpression	* dp = data		5406466	2		=			
ANR	5406497	Identifier	data		5406466	0					
ANR	5406498	Identifier	data		5406466	1					
ANR	5406499	IfStatement	if ( CL_CACHE_NEEDS_INIT ( icf -> cache ) )		5406466	2					
ANR	5406500	Condition	CL_CACHE_NEEDS_INIT ( icf -> cache )	392:12:13056:13086	5406466	0	True				
ANR	5406501	CallExpression	CL_CACHE_NEEDS_INIT ( icf -> cache )		5406466	0					
ANR	5406502	Callee	CL_CACHE_NEEDS_INIT		5406466	0					
ANR	5406503	Identifier	CL_CACHE_NEEDS_INIT		5406466	0					
ANR	5406504	ArgumentList	icf -> cache		5406466	1					
ANR	5406505	Argument	icf -> cache		5406466	0					
ANR	5406506	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406507	Identifier	icf		5406466	0					
ANR	5406508	Identifier	cache		5406466	1					
ANR	5406509	CompoundStatement		9:45:226:226	5406466	1					
ANR	5406510	ExpressionStatement	"icf -> cache = cl_cache_read_init ( icf -> cache , CL_CACHE_NSLOTS , 1 << CL_CACHE_SLOT_SIZE_LOG2 , icf -> filesize )"	393:12:13103:13206	5406466	0	True				
ANR	5406511	AssignmentExpression	"icf -> cache = cl_cache_read_init ( icf -> cache , CL_CACHE_NSLOTS , 1 << CL_CACHE_SLOT_SIZE_LOG2 , icf -> filesize )"		5406466	0		=			
ANR	5406512	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406513	Identifier	icf		5406466	0					
ANR	5406514	Identifier	cache		5406466	1					
ANR	5406515	CallExpression	"cl_cache_read_init ( icf -> cache , CL_CACHE_NSLOTS , 1 << CL_CACHE_SLOT_SIZE_LOG2 , icf -> filesize )"		5406466	1					
ANR	5406516	Callee	cl_cache_read_init		5406466	0					
ANR	5406517	Identifier	cl_cache_read_init		5406466	0					
ANR	5406518	ArgumentList	icf -> cache		5406466	1					
ANR	5406519	Argument	icf -> cache		5406466	0					
ANR	5406520	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406521	Identifier	icf		5406466	0					
ANR	5406522	Identifier	cache		5406466	1					
ANR	5406523	Argument	CL_CACHE_NSLOTS		5406466	1					
ANR	5406524	Identifier	CL_CACHE_NSLOTS		5406466	0					
ANR	5406525	Argument	1 << CL_CACHE_SLOT_SIZE_LOG2		5406466	2					
ANR	5406526	ShiftExpression	1 << CL_CACHE_SLOT_SIZE_LOG2		5406466	0		<<			
ANR	5406527	PrimaryExpression	1		5406466	0					
ANR	5406528	Identifier	CL_CACHE_SLOT_SIZE_LOG2		5406466	1					
ANR	5406529	Argument	icf -> filesize		5406466	3					
ANR	5406530	PtrMemberAccess	icf -> filesize		5406466	0					
ANR	5406531	Identifier	icf		5406466	0					
ANR	5406532	Identifier	filesize		5406466	1					
ANR	5406533	IfStatement	if ( icf -> cache != NULL )		5406466	3					
ANR	5406534	Condition	icf -> cache != NULL	396:12:13325:13342	5406466	0	True				
ANR	5406535	EqualityExpression	icf -> cache != NULL		5406466	0		!=			
ANR	5406536	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406537	Identifier	icf		5406466	0					
ANR	5406538	Identifier	cache		5406466	1					
ANR	5406539	Identifier	NULL		5406466	1					
ANR	5406540	CompoundStatement		13:32:482:482	5406466	1					
ANR	5406541	DoStatement	do		5406466	0					
ANR	5406542	CompoundStatement		15:16:517:522	5406466	0					
ANR	5406543	IdentifierDeclStatement	int n ;	398:16:13380:13385	5406466	0	True				
ANR	5406544	IdentifierDecl	n		5406466	0					
ANR	5406545	IdentifierDeclType	int		5406466	0					
ANR	5406546	Identifier	n		5406466	1					
ANR	5406547	IfStatement	"if ( ( n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache ) ) < 0 )"		5406466	1					
ANR	5406548	Condition	"( n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache ) ) < 0"	400:20:13408:13473	5406466	0	True				
ANR	5406549	RelationalExpression	"( n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache ) ) < 0"		5406466	0		<			
ANR	5406550	AssignmentExpression	"n = cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache )"		5406466	0		=			
ANR	5406551	Identifier	n		5406466	0					
ANR	5406552	CallExpression	"cl_cache_read ( dp , len - nread , icf -> pos + nread , icf -> cache )"		5406466	1					
ANR	5406553	Callee	cl_cache_read		5406466	0					
ANR	5406554	Identifier	cl_cache_read		5406466	0					
ANR	5406555	ArgumentList	dp		5406466	1					
ANR	5406556	Argument	dp		5406466	0					
ANR	5406557	Identifier	dp		5406466	0					
ANR	5406558	Argument	len - nread		5406466	1					
ANR	5406559	AdditiveExpression	len - nread		5406466	0		-			
ANR	5406560	Identifier	len		5406466	0					
ANR	5406561	Identifier	nread		5406466	1					
ANR	5406562	Argument	icf -> pos + nread		5406466	2					
ANR	5406563	AdditiveExpression	icf -> pos + nread		5406466	0		+			
ANR	5406564	PtrMemberAccess	icf -> pos		5406466	0					
ANR	5406565	Identifier	icf		5406466	0					
ANR	5406566	Identifier	pos		5406466	1					
ANR	5406567	Identifier	nread		5406466	1					
ANR	5406568	Argument	icf -> cache		5406466	3					
ANR	5406569	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406570	Identifier	icf		5406466	0					
ANR	5406571	Identifier	cache		5406466	1					
ANR	5406572	PrimaryExpression	0		5406466	1					
ANR	5406573	BreakStatement	break ;	401:20:13496:13501	5406466	1	True				
ANR	5406574	IfStatement	if ( n == 0 )		5406466	2					
ANR	5406575	Condition	n == 0	402:20:13523:13528	5406466	0	True				
ANR	5406576	EqualityExpression	n == 0		5406466	0		==			
ANR	5406577	Identifier	n		5406466	0					
ANR	5406578	PrimaryExpression	0		5406466	1					
ANR	5406579	CompoundStatement		23:20:976:1065	5406466	1					
ANR	5406580	IdentifierDeclStatement	"CL_CACHE_SLOT * slot = cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread ) ;"	404:20:13635:13708	5406466	0	True				
ANR	5406581	IdentifierDecl	"* slot = cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread )"		5406466	0					
ANR	5406582	IdentifierDeclType	CL_CACHE_SLOT *		5406466	0					
ANR	5406583	Identifier	slot		5406466	1					
ANR	5406584	AssignmentExpression	"* slot = cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread )"		5406466	2		=			
ANR	5406585	Identifier	slot		5406466	0					
ANR	5406586	CallExpression	"cl_cache_get_empty_slot ( icf -> cache , icf -> pos + nread )"		5406466	1					
ANR	5406587	Callee	cl_cache_get_empty_slot		5406466	0					
ANR	5406588	Identifier	cl_cache_get_empty_slot		5406466	0					
ANR	5406589	ArgumentList	icf -> cache		5406466	1					
ANR	5406590	Argument	icf -> cache		5406466	0					
ANR	5406591	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406592	Identifier	icf		5406466	0					
ANR	5406593	Identifier	cache		5406466	1					
ANR	5406594	Argument	icf -> pos + nread		5406466	1					
ANR	5406595	AdditiveExpression	icf -> pos + nread		5406466	0		+			
ANR	5406596	PtrMemberAccess	icf -> pos		5406466	0					
ANR	5406597	Identifier	icf		5406466	0					
ANR	5406598	Identifier	pos		5406466	1					
ANR	5406599	Identifier	nread		5406466	1					
ANR	5406600	IdentifierDeclStatement	int64_t block_pos = ( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 ) ;	405:20:13749:13817	5406466	1	True				
ANR	5406601	IdentifierDecl	block_pos = ( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 )		5406466	0					
ANR	5406602	IdentifierDeclType	int64_t		5406466	0					
ANR	5406603	Identifier	block_pos		5406466	1					
ANR	5406604	AssignmentExpression	block_pos = ( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 )		5406466	2		=			
ANR	5406605	Identifier	block_pos		5406466	0					
ANR	5406606	BitAndExpression	( icf -> pos + nread ) & ~ ( icf -> cache -> block_size - 1 )		5406466	1		&			
ANR	5406607	AdditiveExpression	icf -> pos + nread		5406466	0		+			
ANR	5406608	PtrMemberAccess	icf -> pos		5406466	0					
ANR	5406609	Identifier	icf		5406466	0					
ANR	5406610	Identifier	pos		5406466	1					
ANR	5406611	Identifier	nread		5406466	1					
ANR	5406612	UnaryOperationExpression	~ ( icf -> cache -> block_size - 1 )		5406466	1					
ANR	5406613	UnaryOperator	~		5406466	0					
ANR	5406614	AdditiveExpression	icf -> cache -> block_size - 1		5406466	1		-			
ANR	5406615	PtrMemberAccess	icf -> cache -> block_size		5406466	0					
ANR	5406616	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406617	Identifier	icf		5406466	0					
ANR	5406618	Identifier	cache		5406466	1					
ANR	5406619	Identifier	block_size		5406466	1					
ANR	5406620	PrimaryExpression	1		5406466	1					
ANR	5406621	IdentifierDeclStatement	"int fill_len = gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f ) ;"	406:20:13839:13928	5406466	2	True				
ANR	5406622	IdentifierDecl	"fill_len = gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f )"		5406466	0					
ANR	5406623	IdentifierDeclType	int		5406466	0					
ANR	5406624	Identifier	fill_len		5406466	1					
ANR	5406625	AssignmentExpression	"fill_len = gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f )"		5406466	2		=			
ANR	5406626	Identifier	fill_len		5406466	0					
ANR	5406627	CallExpression	"gp_fpread ( ( char * ) ( slot -> base ) , icf -> cache -> block_size , block_pos , icf -> f )"		5406466	1					
ANR	5406628	Callee	gp_fpread		5406466	0					
ANR	5406629	Identifier	gp_fpread		5406466	0					
ANR	5406630	ArgumentList	( char * ) ( slot -> base )		5406466	1					
ANR	5406631	Argument	( char * ) ( slot -> base )		5406466	0					
ANR	5406632	CastExpression	( char * ) ( slot -> base )		5406466	0					
ANR	5406633	CastTarget	char *		5406466	0					
ANR	5406634	PtrMemberAccess	slot -> base		5406466	1					
ANR	5406635	Identifier	slot		5406466	0					
ANR	5406636	Identifier	base		5406466	1					
ANR	5406637	Argument	icf -> cache -> block_size		5406466	1					
ANR	5406638	PtrMemberAccess	icf -> cache -> block_size		5406466	0					
ANR	5406639	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406640	Identifier	icf		5406466	0					
ANR	5406641	Identifier	cache		5406466	1					
ANR	5406642	Identifier	block_size		5406466	1					
ANR	5406643	Argument	block_pos		5406466	2					
ANR	5406644	Identifier	block_pos		5406466	0					
ANR	5406645	Argument	icf -> f		5406466	3					
ANR	5406646	PtrMemberAccess	icf -> f		5406466	0					
ANR	5406647	Identifier	icf		5406466	0					
ANR	5406648	Identifier	f		5406466	1					
ANR	5406649	ExpressionStatement	"cl_cache_load_slot ( icf -> cache , slot , block_pos , slot -> base , fill_len )"	408:20:13951:14020	5406466	3	True				
ANR	5406650	CallExpression	"cl_cache_load_slot ( icf -> cache , slot , block_pos , slot -> base , fill_len )"		5406466	0					
ANR	5406651	Callee	cl_cache_load_slot		5406466	0					
ANR	5406652	Identifier	cl_cache_load_slot		5406466	0					
ANR	5406653	ArgumentList	icf -> cache		5406466	1					
ANR	5406654	Argument	icf -> cache		5406466	0					
ANR	5406655	PtrMemberAccess	icf -> cache		5406466	0					
ANR	5406656	Identifier	icf		5406466	0					
ANR	5406657	Identifier	cache		5406466	1					
ANR	5406658	Argument	slot		5406466	1					
ANR	5406659	Identifier	slot		5406466	0					
ANR	5406660	Argument	block_pos		5406466	2					
ANR	5406661	Identifier	block_pos		5406466	0					
ANR	5406662	Argument	slot -> base		5406466	3					
ANR	5406663	PtrMemberAccess	slot -> base		5406466	0					
ANR	5406664	Identifier	slot		5406466	0					
ANR	5406665	Identifier	base		5406466	1					
ANR	5406666	Argument	fill_len		5406466	4					
ANR	5406667	Identifier	fill_len		5406466	0					
ANR	5406668	ExpressionStatement	nread += n	410:16:14056:14066	5406466	3	True				
ANR	5406669	AssignmentExpression	nread += n		5406466	0		+=			
ANR	5406670	Identifier	nread		5406466	0					
ANR	5406671	Identifier	n		5406466	1					
ANR	5406672	ExpressionStatement	dp += n	411:16:14084:14091	5406466	4	True				
ANR	5406673	AssignmentExpression	dp += n		5406466	0		+=			
ANR	5406674	Identifier	dp		5406466	0					
ANR	5406675	Identifier	n		5406466	1					
ANR	5406676	Condition	nread < len	412:21:14114:14124	5406466	1	True				
ANR	5406677	RelationalExpression	nread < len		5406466	0		<			
ANR	5406678	Identifier	nread		5406466	0					
ANR	5406679	Identifier	len		5406466	1					
ANR	5406680	ElseStatement	else		5406466	0					
ANR	5406681	CompoundStatement		30:15:1280:1280	5406466	0					
ANR	5406682	ExpressionStatement	"nread = gp_fpread ( data , len , icf -> pos , icf -> f )"	415:12:14205:14251	5406466	0	True				
ANR	5406683	AssignmentExpression	"nread = gp_fpread ( data , len , icf -> pos , icf -> f )"		5406466	0		=			
ANR	5406684	Identifier	nread		5406466	0					
ANR	5406685	CallExpression	"gp_fpread ( data , len , icf -> pos , icf -> f )"		5406466	1					
ANR	5406686	Callee	gp_fpread		5406466	0					
ANR	5406687	Identifier	gp_fpread		5406466	0					
ANR	5406688	ArgumentList	data		5406466	1					
ANR	5406689	Argument	data		5406466	0					
ANR	5406690	Identifier	data		5406466	0					
ANR	5406691	Argument	len		5406466	1					
ANR	5406692	Identifier	len		5406466	0					
ANR	5406693	Argument	icf -> pos		5406466	2					
ANR	5406694	PtrMemberAccess	icf -> pos		5406466	0					
ANR	5406695	Identifier	icf		5406466	0					
ANR	5406696	Identifier	pos		5406466	1					
ANR	5406697	Argument	icf -> f		5406466	3					
ANR	5406698	PtrMemberAccess	icf -> f		5406466	0					
ANR	5406699	Identifier	icf		5406466	0					
ANR	5406700	Identifier	f		5406466	1					
ANR	5406701	IfStatement	if ( nread >= 0 )		5406466	4					
ANR	5406702	Condition	nread >= 0	417:12:14275:14284	5406466	0	True				
ANR	5406703	RelationalExpression	nread >= 0		5406466	0		>=			
ANR	5406704	Identifier	nread		5406466	0					
ANR	5406705	PrimaryExpression	0		5406466	1					
ANR	5406706	ExpressionStatement	icf -> pos += nread	418:12:14299:14316	5406466	1	True				
ANR	5406707	AssignmentExpression	icf -> pos += nread		5406466	0		+=			
ANR	5406708	PtrMemberAccess	icf -> pos		5406466	0					
ANR	5406709	Identifier	icf		5406466	0					
ANR	5406710	Identifier	pos		5406466	1					
ANR	5406711	Identifier	nread		5406466	1					
ANR	5406712	ElseStatement	else		5406466	0					
ANR	5406713	CompoundStatement		38:8:1512:1528	5406466	0					
ANR	5406714	IdentifierDeclStatement	FILE * f = ( ( IFILE * ) cf ) -> f ;	420:8:14339:14365	5406466	0	True				
ANR	5406715	IdentifierDecl	* f = ( ( IFILE * ) cf ) -> f		5406466	0					
ANR	5406716	IdentifierDeclType	FILE *		5406466	0					
ANR	5406717	Identifier	f		5406466	1					
ANR	5406718	AssignmentExpression	* f = ( ( IFILE * ) cf ) -> f		5406466	2		=			
ANR	5406719	Identifier	f		5406466	0					
ANR	5406720	PtrMemberAccess	( ( IFILE * ) cf ) -> f		5406466	1					
ANR	5406721	CastExpression	( IFILE * ) cf		5406466	0					
ANR	5406722	CastTarget	IFILE *		5406466	0					
ANR	5406723	Identifier	cf		5406466	1					
ANR	5406724	Identifier	f		5406466	1					
ANR	5406725	IdentifierDeclStatement	byte * str = data ;	421:8:14375:14391	5406466	1	True				
ANR	5406726	IdentifierDecl	* str = data		5406466	0					
ANR	5406727	IdentifierDeclType	byte *		5406466	0					
ANR	5406728	Identifier	str		5406466	1					
ANR	5406729	AssignmentExpression	* str = data		5406466	2		=			
ANR	5406730	Identifier	data		5406466	0					
ANR	5406731	Identifier	data		5406466	1					
ANR	5406732	SwitchStatement	switch ( len )		5406466	2					
ANR	5406733	Condition	len	426:16:14574:14576	5406466	0	True				
ANR	5406734	Identifier	len		5406466	0					
ANR	5406735	CompoundStatement		43:21:1716:1716	5406466	1					
ANR	5406736	Label	default :	427:12:14593:14600	5406466	0	True				
ANR	5406737	Identifier	default		5406466	0					
ANR	5406738	ReturnStatement	"return fread ( str , 1 , len , f ) ;"	428:16:14618:14646	5406466	1	True				
ANR	5406739	CallExpression	"fread ( str , 1 , len , f )"		5406466	0					
ANR	5406740	Callee	fread		5406466	0					
ANR	5406741	Identifier	fread		5406466	0					
ANR	5406742	ArgumentList	str		5406466	1					
ANR	5406743	Argument	str		5406466	0					
ANR	5406744	Identifier	str		5406466	0					
ANR	5406745	Argument	1		5406466	1					
ANR	5406746	PrimaryExpression	1		5406466	0					
ANR	5406747	Argument	len		5406466	2					
ANR	5406748	Identifier	len		5406466	0					
ANR	5406749	Argument	f		5406466	3					
ANR	5406750	Identifier	f		5406466	0					
ANR	5406751	Label	case 8 :	429:12:14660:14666	5406466	2	True				
ANR	5406752	ExpressionStatement	* str ++ = ( byte ) getc ( f )	430:16:14684:14707	5406466	3	True				
ANR	5406753	AssignmentExpression	* str ++ = ( byte ) getc ( f )		5406466	0		=			
ANR	5406754	UnaryOperationExpression	* str ++		5406466	0					
ANR	5406755	UnaryOperator	*		5406466	0					
ANR	5406756	PostIncDecOperationExpression	str ++		5406466	1					
ANR	5406757	Identifier	str		5406466	0					
ANR	5406758	IncDec	++		5406466	1					
ANR	5406759	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406760	CastTarget	byte		5406466	0					
ANR	5406761	CallExpression	getc ( f )		5406466	1					
ANR	5406762	Callee	getc		5406466	0					
ANR	5406763	Identifier	getc		5406466	0					
ANR	5406764	ArgumentList	f		5406466	1					
ANR	5406765	Argument	f		5406466	0					
ANR	5406766	Identifier	f		5406466	0					
ANR	5406767	Label	case 7 :	431:12:14721:14727	5406466	4	True				
ANR	5406768	ExpressionStatement	* str ++ = ( byte ) getc ( f )	432:16:14745:14768	5406466	5	True				
ANR	5406769	AssignmentExpression	* str ++ = ( byte ) getc ( f )		5406466	0		=			
ANR	5406770	UnaryOperationExpression	* str ++		5406466	0					
ANR	5406771	UnaryOperator	*		5406466	0					
ANR	5406772	PostIncDecOperationExpression	str ++		5406466	1					
ANR	5406773	Identifier	str		5406466	0					
ANR	5406774	IncDec	++		5406466	1					
ANR	5406775	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406776	CastTarget	byte		5406466	0					
ANR	5406777	CallExpression	getc ( f )		5406466	1					
ANR	5406778	Callee	getc		5406466	0					
ANR	5406779	Identifier	getc		5406466	0					
ANR	5406780	ArgumentList	f		5406466	1					
ANR	5406781	Argument	f		5406466	0					
ANR	5406782	Identifier	f		5406466	0					
ANR	5406783	Label	case 6 :	433:12:14782:14788	5406466	6	True				
ANR	5406784	ExpressionStatement	* str ++ = ( byte ) getc ( f )	434:16:14806:14829	5406466	7	True				
ANR	5406785	AssignmentExpression	* str ++ = ( byte ) getc ( f )		5406466	0		=			
ANR	5406786	UnaryOperationExpression	* str ++		5406466	0					
ANR	5406787	UnaryOperator	*		5406466	0					
ANR	5406788	PostIncDecOperationExpression	str ++		5406466	1					
ANR	5406789	Identifier	str		5406466	0					
ANR	5406790	IncDec	++		5406466	1					
ANR	5406791	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406792	CastTarget	byte		5406466	0					
ANR	5406793	CallExpression	getc ( f )		5406466	1					
ANR	5406794	Callee	getc		5406466	0					
ANR	5406795	Identifier	getc		5406466	0					
ANR	5406796	ArgumentList	f		5406466	1					
ANR	5406797	Argument	f		5406466	0					
ANR	5406798	Identifier	f		5406466	0					
ANR	5406799	Label	case 5 :	435:12:14843:14849	5406466	8	True				
ANR	5406800	ExpressionStatement	* str ++ = ( byte ) getc ( f )	436:16:14867:14890	5406466	9	True				
ANR	5406801	AssignmentExpression	* str ++ = ( byte ) getc ( f )		5406466	0		=			
ANR	5406802	UnaryOperationExpression	* str ++		5406466	0					
ANR	5406803	UnaryOperator	*		5406466	0					
ANR	5406804	PostIncDecOperationExpression	str ++		5406466	1					
ANR	5406805	Identifier	str		5406466	0					
ANR	5406806	IncDec	++		5406466	1					
ANR	5406807	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406808	CastTarget	byte		5406466	0					
ANR	5406809	CallExpression	getc ( f )		5406466	1					
ANR	5406810	Callee	getc		5406466	0					
ANR	5406811	Identifier	getc		5406466	0					
ANR	5406812	ArgumentList	f		5406466	1					
ANR	5406813	Argument	f		5406466	0					
ANR	5406814	Identifier	f		5406466	0					
ANR	5406815	Label	case 4 :	437:12:14904:14910	5406466	10	True				
ANR	5406816	ExpressionStatement	* str ++ = ( byte ) getc ( f )	438:16:14928:14951	5406466	11	True				
ANR	5406817	AssignmentExpression	* str ++ = ( byte ) getc ( f )		5406466	0		=			
ANR	5406818	UnaryOperationExpression	* str ++		5406466	0					
ANR	5406819	UnaryOperator	*		5406466	0					
ANR	5406820	PostIncDecOperationExpression	str ++		5406466	1					
ANR	5406821	Identifier	str		5406466	0					
ANR	5406822	IncDec	++		5406466	1					
ANR	5406823	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406824	CastTarget	byte		5406466	0					
ANR	5406825	CallExpression	getc ( f )		5406466	1					
ANR	5406826	Callee	getc		5406466	0					
ANR	5406827	Identifier	getc		5406466	0					
ANR	5406828	ArgumentList	f		5406466	1					
ANR	5406829	Argument	f		5406466	0					
ANR	5406830	Identifier	f		5406466	0					
ANR	5406831	Label	case 3 :	439:12:14965:14971	5406466	12	True				
ANR	5406832	ExpressionStatement	* str ++ = ( byte ) getc ( f )	440:16:14989:15012	5406466	13	True				
ANR	5406833	AssignmentExpression	* str ++ = ( byte ) getc ( f )		5406466	0		=			
ANR	5406834	UnaryOperationExpression	* str ++		5406466	0					
ANR	5406835	UnaryOperator	*		5406466	0					
ANR	5406836	PostIncDecOperationExpression	str ++		5406466	1					
ANR	5406837	Identifier	str		5406466	0					
ANR	5406838	IncDec	++		5406466	1					
ANR	5406839	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406840	CastTarget	byte		5406466	0					
ANR	5406841	CallExpression	getc ( f )		5406466	1					
ANR	5406842	Callee	getc		5406466	0					
ANR	5406843	Identifier	getc		5406466	0					
ANR	5406844	ArgumentList	f		5406466	1					
ANR	5406845	Argument	f		5406466	0					
ANR	5406846	Identifier	f		5406466	0					
ANR	5406847	Label	case 2 :	441:12:15026:15032	5406466	14	True				
ANR	5406848	ExpressionStatement	* str ++ = ( byte ) getc ( f )	442:16:15050:15073	5406466	15	True				
ANR	5406849	AssignmentExpression	* str ++ = ( byte ) getc ( f )		5406466	0		=			
ANR	5406850	UnaryOperationExpression	* str ++		5406466	0					
ANR	5406851	UnaryOperator	*		5406466	0					
ANR	5406852	PostIncDecOperationExpression	str ++		5406466	1					
ANR	5406853	Identifier	str		5406466	0					
ANR	5406854	IncDec	++		5406466	1					
ANR	5406855	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406856	CastTarget	byte		5406466	0					
ANR	5406857	CallExpression	getc ( f )		5406466	1					
ANR	5406858	Callee	getc		5406466	0					
ANR	5406859	Identifier	getc		5406466	0					
ANR	5406860	ArgumentList	f		5406466	1					
ANR	5406861	Argument	f		5406466	0					
ANR	5406862	Identifier	f		5406466	0					
ANR	5406863	Label	case 1 :	443:12:15087:15093	5406466	16	True				
ANR	5406864	ExpressionStatement	* str = ( byte ) getc ( f )	444:16:15111:15132	5406466	17	True				
ANR	5406865	AssignmentExpression	* str = ( byte ) getc ( f )		5406466	0		=			
ANR	5406866	UnaryOperationExpression	* str		5406466	0					
ANR	5406867	UnaryOperator	*		5406466	0					
ANR	5406868	Identifier	str		5406466	1					
ANR	5406869	CastExpression	( byte ) getc ( f )		5406466	1					
ANR	5406870	CastTarget	byte		5406466	0					
ANR	5406871	CallExpression	getc ( f )		5406466	1					
ANR	5406872	Callee	getc		5406466	0					
ANR	5406873	Identifier	getc		5406466	0					
ANR	5406874	ArgumentList	f		5406466	1					
ANR	5406875	Argument	f		5406466	0					
ANR	5406876	Identifier	f		5406466	0					
ANR	5406877	ExpressionStatement	nread = len	446:8:15152:15163	5406466	3	True				
ANR	5406878	AssignmentExpression	nread = len		5406466	0		=			
ANR	5406879	Identifier	nread		5406466	0					
ANR	5406880	Identifier	len		5406466	1					
ANR	5406881	ReturnStatement	return nread ;	448:4:15175:15187	5406466	2	True				
ANR	5406882	Identifier	nread		5406466	0					
ANR	5406883	ReturnType	static int		5406466	1					
ANR	5406884	Identifier	clist_fread_chars		5406466	2					
ANR	5406885	ParameterList	"void * data , uint len , clist_file_ptr cf"		5406466	3					
ANR	5406886	Parameter	void * data	383:18:12821:12830	5406466	0	True				
ANR	5406887	ParameterType	void *		5406466	0					
ANR	5406888	Identifier	data		5406466	1					
ANR	5406889	Parameter	uint len	383:30:12833:12840	5406466	1	True				
ANR	5406890	ParameterType	uint		5406466	0					
ANR	5406891	Identifier	len		5406466	1					
ANR	5406892	Parameter	clist_file_ptr cf	383:40:12843:12859	5406466	2	True				
ANR	5406893	ParameterType	clist_file_ptr		5406466	0					
ANR	5406894	Identifier	cf		5406466	1					
ANR	5406895	CFGEntryNode	ENTRY		5406466		True				
ANR	5406896	CFGExitNode	EXIT		5406466		True				
ANR	5406897	Symbol	slot -> base		5406466						
ANR	5406898	Symbol	icf -> f		5406466						
ANR	5406899	Symbol	data		5406466						
ANR	5406900	Symbol	CL_CACHE_NEEDS_INIT		5406466						
ANR	5406901	Symbol	CL_CACHE_NSLOTS		5406466						
ANR	5406902	Symbol	nread		5406466						
ANR	5406903	Symbol	( ( IFILE * ) cf ) -> f		5406466						
ANR	5406904	Symbol	* icf		5406466						
ANR	5406905	Symbol	fill_len		5406466						
ANR	5406906	Symbol	* cf		5406466						
ANR	5406907	Symbol	slot		5406466						
ANR	5406908	Symbol	dp		5406466						
ANR	5406909	Symbol	icf		5406466						
ANR	5406910	Symbol	cl_cache_read_init		5406466						
ANR	5406911	Symbol	* slot		5406466						
ANR	5406912	Symbol	len		5406466						
ANR	5406913	Symbol	icf -> cache		5406466						
ANR	5406914	Symbol	icf -> filesize		5406466						
ANR	5406915	Symbol	gp_can_share_fdesc		5406466						
ANR	5406916	Symbol	* str		5406466						
ANR	5406917	Symbol	gp_fpread		5406466						
ANR	5406918	Symbol	icf -> pos		5406466						
ANR	5406919	Symbol	* * icf		5406466						
ANR	5406920	Symbol	cf		5406466						
ANR	5406921	Symbol	NULL		5406466						
ANR	5406922	Symbol	cl_cache_get_empty_slot		5406466						
ANR	5406923	Symbol	f		5406466						
ANR	5406924	Symbol	block_pos		5406466						
ANR	5406925	Symbol	* icf -> cache		5406466						
ANR	5406926	Symbol	* str ++		5406466						
ANR	5406927	Symbol	icf -> cache -> block_size		5406466						
ANR	5406928	Symbol	n		5406466						
ANR	5406929	Symbol	fread		5406466						
ANR	5406930	Symbol	str		5406466						
ANR	5406931	Symbol	getc		5406466						
ANR	5406932	Symbol	CL_CACHE_SLOT_SIZE_LOG2		5406466						
ANR	5406933	Symbol	cl_cache_read		5406466						
ANR	5406934	Function	clist_set_memory_warning	453:0:15229:15330							
ANR	5406935	FunctionDef	"clist_set_memory_warning (clist_file_ptr cf , int bytes_left)"		5406934	0					
ANR	5406936	CompoundStatement		455:0:15300:15330	5406934	0					
ANR	5406937	ReturnStatement	return 0 ;	456:4:15306:15314	5406934	0	True				
ANR	5406938	PrimaryExpression	0		5406934	0					
ANR	5406939	ReturnType	static int		5406934	1					
ANR	5406940	Identifier	clist_set_memory_warning		5406934	2					
ANR	5406941	ParameterList	"clist_file_ptr cf , int bytes_left"		5406934	3					
ANR	5406942	Parameter	clist_file_ptr cf	454:25:15265:15281	5406934	0	True				
ANR	5406943	ParameterType	clist_file_ptr		5406934	0					
ANR	5406944	Identifier	cf		5406934	1					
ANR	5406945	Parameter	int bytes_left	454:44:15284:15297	5406934	1	True				
ANR	5406946	ParameterType	int		5406934	0					
ANR	5406947	Identifier	bytes_left		5406934	1					
ANR	5406948	CFGEntryNode	ENTRY		5406934		True				
ANR	5406949	CFGExitNode	EXIT		5406934		True				
ANR	5406950	Symbol	cf		5406934						
ANR	5406951	Symbol	bytes_left		5406934						
ANR	5406952	Function	clist_ferror_code	459:0:15333:15445							
ANR	5406953	FunctionDef	clist_ferror_code (clist_file_ptr cf)		5406952	0					
ANR	5406954	CompoundStatement		461:0:15381:15445	5406952	0					
ANR	5406955	ReturnStatement	return ( ferror ( ( ( IFILE * ) cf ) -> f ) ? gs_error_ioerror : 0 ) ;	462:4:15387:15443	5406952	0	True				
ANR	5406956	ConditionalExpression	ferror ( ( ( IFILE * ) cf ) -> f ) ? gs_error_ioerror : 0		5406952	0					
ANR	5406957	Condition	ferror ( ( ( IFILE * ) cf ) -> f )		5406952	0					
ANR	5406958	CallExpression	ferror ( ( ( IFILE * ) cf ) -> f )		5406952	0					
ANR	5406959	Callee	ferror		5406952	0					
ANR	5406960	Identifier	ferror		5406952	0					
ANR	5406961	ArgumentList	( ( IFILE * ) cf ) -> f		5406952	1					
ANR	5406962	Argument	( ( IFILE * ) cf ) -> f		5406952	0					
ANR	5406963	PtrMemberAccess	( ( IFILE * ) cf ) -> f		5406952	0					
ANR	5406964	CastExpression	( IFILE * ) cf		5406952	0					
ANR	5406965	CastTarget	IFILE *		5406952	0					
ANR	5406966	Identifier	cf		5406952	1					
ANR	5406967	Identifier	f		5406952	1					
ANR	5406968	Identifier	gs_error_ioerror		5406952	1					
ANR	5406969	PrimaryExpression	0		5406952	2					
ANR	5406970	ReturnType	static int		5406952	1					
ANR	5406971	Identifier	clist_ferror_code		5406952	2					
ANR	5406972	ParameterList	clist_file_ptr cf		5406952	3					
ANR	5406973	Parameter	clist_file_ptr cf	460:18:15362:15378	5406952	0	True				
ANR	5406974	ParameterType	clist_file_ptr		5406952	0					
ANR	5406975	Identifier	cf		5406952	1					
ANR	5406976	CFGEntryNode	ENTRY		5406952		True				
ANR	5406977	CFGExitNode	EXIT		5406952		True				
ANR	5406978	Symbol	ferror		5406952						
ANR	5406979	Symbol	cf		5406952						
ANR	5406980	Symbol	( ( IFILE * ) cf ) -> f		5406952						
ANR	5406981	Symbol	gs_error_ioerror		5406952						
ANR	5406982	Symbol	* cf		5406952						
ANR	5406983	Function	clist_ftell	465:0:15448:15593							
ANR	5406984	FunctionDef	clist_ftell (clist_file_ptr cf)		5406983	0					
ANR	5406985	CompoundStatement		467:0:15494:15593	5406983	0					
ANR	5406986	IdentifierDeclStatement	IFILE * ifile = ( IFILE * ) cf ;	468:4:15500:15526	5406983	0	True				
ANR	5406987	IdentifierDecl	* ifile = ( IFILE * ) cf		5406983	0					
ANR	5406988	IdentifierDeclType	IFILE *		5406983	0					
ANR	5406989	Identifier	ifile		5406983	1					
ANR	5406990	AssignmentExpression	* ifile = ( IFILE * ) cf		5406983	2		=			
ANR	5406991	Identifier	ifile		5406983	0					
ANR	5406992	CastExpression	( IFILE * ) cf		5406983	1					
ANR	5406993	CastTarget	IFILE *		5406983	0					
ANR	5406994	Identifier	cf		5406983	1					
ANR	5406995	ReturnStatement	return gp_can_share_fdesc ( ) ? ifile -> pos : ftell ( ifile -> f ) ;	470:4:15533:15591	5406983	1	True				
ANR	5406996	ConditionalExpression	gp_can_share_fdesc ( ) ? ifile -> pos : ftell ( ifile -> f )		5406983	0					
ANR	5406997	Condition	gp_can_share_fdesc ( )		5406983	0					
ANR	5406998	CallExpression	gp_can_share_fdesc ( )		5406983	0					
ANR	5406999	Callee	gp_can_share_fdesc		5406983	0					
ANR	5407000	Identifier	gp_can_share_fdesc		5406983	0					
ANR	5407001	ArgumentList			5406983	1					
ANR	5407002	PtrMemberAccess	ifile -> pos		5406983	1					
ANR	5407003	Identifier	ifile		5406983	0					
ANR	5407004	Identifier	pos		5406983	1					
ANR	5407005	CallExpression	ftell ( ifile -> f )		5406983	2					
ANR	5407006	Callee	ftell		5406983	0					
ANR	5407007	Identifier	ftell		5406983	0					
ANR	5407008	ArgumentList	ifile -> f		5406983	1					
ANR	5407009	Argument	ifile -> f		5406983	0					
ANR	5407010	PtrMemberAccess	ifile -> f		5406983	0					
ANR	5407011	Identifier	ifile		5406983	0					
ANR	5407012	Identifier	f		5406983	1					
ANR	5407013	ReturnType	static int64_t		5406983	1					
ANR	5407014	Identifier	clist_ftell		5406983	2					
ANR	5407015	ParameterList	clist_file_ptr cf		5406983	3					
ANR	5407016	Parameter	clist_file_ptr cf	466:12:15475:15491	5406983	0	True				
ANR	5407017	ParameterType	clist_file_ptr		5406983	0					
ANR	5407018	Identifier	cf		5406983	1					
ANR	5407019	CFGEntryNode	ENTRY		5406983		True				
ANR	5407020	CFGExitNode	EXIT		5406983		True				
ANR	5407021	Symbol	ifile		5406983						
ANR	5407022	Symbol	cf		5406983						
ANR	5407023	Symbol	ifile -> f		5406983						
ANR	5407024	Symbol	ftell		5406983						
ANR	5407025	Symbol	gp_can_share_fdesc		5406983						
ANR	5407026	Symbol	* ifile		5406983						
ANR	5407027	Symbol	ifile -> pos		5406983						
ANR	5407028	Function	clist_rewind	473:0:15596:17211							
ANR	5407029	FunctionDef	"clist_rewind (clist_file_ptr cf , bool discard_data , const char * fname)"		5407028	0					
ANR	5407030	CompoundStatement		475:0:15678:17211	5407028	0					
ANR	5407031	IdentifierDeclStatement	FILE * f = ( ( IFILE * ) cf ) -> f ;	476:4:15684:15710	5407028	0	True				
ANR	5407032	IdentifierDecl	* f = ( ( IFILE * ) cf ) -> f		5407028	0					
ANR	5407033	IdentifierDeclType	FILE *		5407028	0					
ANR	5407034	Identifier	f		5407028	1					
ANR	5407035	AssignmentExpression	* f = ( ( IFILE * ) cf ) -> f		5407028	2		=			
ANR	5407036	Identifier	f		5407028	0					
ANR	5407037	PtrMemberAccess	( ( IFILE * ) cf ) -> f		5407028	1					
ANR	5407038	CastExpression	( IFILE * ) cf		5407028	0					
ANR	5407039	CastTarget	IFILE *		5407028	0					
ANR	5407040	Identifier	cf		5407028	1					
ANR	5407041	Identifier	f		5407028	1					
ANR	5407042	IdentifierDeclStatement	IFILE * ocf = fake_path_to_file ( fname ) ;	477:4:15716:15753	5407028	1	True				
ANR	5407043	IdentifierDecl	* ocf = fake_path_to_file ( fname )		5407028	0					
ANR	5407044	IdentifierDeclType	IFILE *		5407028	0					
ANR	5407045	Identifier	ocf		5407028	1					
ANR	5407046	AssignmentExpression	* ocf = fake_path_to_file ( fname )		5407028	2		=			
ANR	5407047	Identifier	ocf		5407028	0					
ANR	5407048	CallExpression	fake_path_to_file ( fname )		5407028	1					
ANR	5407049	Callee	fake_path_to_file		5407028	0					
ANR	5407050	Identifier	fake_path_to_file		5407028	0					
ANR	5407051	ArgumentList	fname		5407028	1					
ANR	5407052	Argument	fname		5407028	0					
ANR	5407053	Identifier	fname		5407028	0					
ANR	5407054	IdentifierDeclStatement	char fmode [ 4 ] ;	478:4:15759:15772	5407028	2	True				
ANR	5407055	IdentifierDecl	fmode [ 4 ]		5407028	0					
ANR	5407056	IdentifierDeclType	char [ 4 ]		5407028	0					
ANR	5407057	Identifier	fmode		5407028	1					
ANR	5407058	PrimaryExpression	4		5407028	2					
ANR	5407059	ExpressionStatement	"strcpy ( fmode , ""w+"" )"	480:4:15779:15798	5407028	3	True				
ANR	5407060	CallExpression	"strcpy ( fmode , ""w+"" )"		5407028	0					
ANR	5407061	Callee	strcpy		5407028	0					
ANR	5407062	Identifier	strcpy		5407028	0					
ANR	5407063	ArgumentList	fmode		5407028	1					
ANR	5407064	Argument	fmode		5407028	0					
ANR	5407065	Identifier	fmode		5407028	0					
ANR	5407066	Argument	"""w+"""		5407028	1					
ANR	5407067	PrimaryExpression	"""w+"""		5407028	0					
ANR	5407068	ExpressionStatement	"strcat ( fmode , gp_fmode_binary_suffix )"	481:4:15804:15841	5407028	4	True				
ANR	5407069	CallExpression	"strcat ( fmode , gp_fmode_binary_suffix )"		5407028	0					
ANR	5407070	Callee	strcat		5407028	0					
ANR	5407071	Identifier	strcat		5407028	0					
ANR	5407072	ArgumentList	fmode		5407028	1					
ANR	5407073	Argument	fmode		5407028	0					
ANR	5407074	Identifier	fmode		5407028	0					
ANR	5407075	Argument	gp_fmode_binary_suffix		5407028	1					
ANR	5407076	Identifier	gp_fmode_binary_suffix		5407028	0					
ANR	5407077	IfStatement	if ( ocf )		5407028	5					
ANR	5407078	Condition	ocf	483:8:15852:15854	5407028	0	True				
ANR	5407079	Identifier	ocf		5407028	0					
ANR	5407080	CompoundStatement		9:13:178:178	5407028	1					
ANR	5407081	IfStatement	if ( discard_data )		5407028	0					
ANR	5407082	Condition	discard_data	484:12:15871:15882	5407028	0	True				
ANR	5407083	Identifier	discard_data		5407028	0					
ANR	5407084	CompoundStatement		13:12:329:361	5407028	1					
ANR	5407085	IdentifierDeclStatement	char tfname [ gp_file_name_sizeof ] ;	487:12:16008:16040	5407028	0	True				
ANR	5407086	IdentifierDecl	tfname [ gp_file_name_sizeof ]		5407028	0					
ANR	5407087	IdentifierDeclType	char [ gp_file_name_sizeof ]		5407028	0					
ANR	5407088	Identifier	tfname		5407028	1					
ANR	5407089	Identifier	gp_file_name_sizeof		5407028	2					
ANR	5407090	ExpressionStatement	fclose ( ocf -> f )	488:12:16054:16068	5407028	1	True				
ANR	5407091	CallExpression	fclose ( ocf -> f )		5407028	0					
ANR	5407092	Callee	fclose		5407028	0					
ANR	5407093	Identifier	fclose		5407028	0					
ANR	5407094	ArgumentList	ocf -> f		5407028	1					
ANR	5407095	Argument	ocf -> f		5407028	0					
ANR	5407096	PtrMemberAccess	ocf -> f		5407028	0					
ANR	5407097	Identifier	ocf		5407028	0					
ANR	5407098	Identifier	f		5407028	1					
ANR	5407099	ExpressionStatement	"ocf -> f = gp_open_scratch_file_rm ( NULL , gp_scratch_file_name_prefix , tfname , fmode )"	489:12:16082:16164	5407028	2	True				
ANR	5407100	AssignmentExpression	"ocf -> f = gp_open_scratch_file_rm ( NULL , gp_scratch_file_name_prefix , tfname , fmode )"		5407028	0		=			
ANR	5407101	PtrMemberAccess	ocf -> f		5407028	0					
ANR	5407102	Identifier	ocf		5407028	0					
ANR	5407103	Identifier	f		5407028	1					
ANR	5407104	CallExpression	"gp_open_scratch_file_rm ( NULL , gp_scratch_file_name_prefix , tfname , fmode )"		5407028	1					
ANR	5407105	Callee	gp_open_scratch_file_rm		5407028	0					
ANR	5407106	Identifier	gp_open_scratch_file_rm		5407028	0					
ANR	5407107	ArgumentList	NULL		5407028	1					
ANR	5407108	Argument	NULL		5407028	0					
ANR	5407109	Identifier	NULL		5407028	0					
ANR	5407110	Argument	gp_scratch_file_name_prefix		5407028	1					
ANR	5407111	Identifier	gp_scratch_file_name_prefix		5407028	0					
ANR	5407112	Argument	tfname		5407028	2					
ANR	5407113	Identifier	tfname		5407028	0					
ANR	5407114	Argument	fmode		5407028	3					
ANR	5407115	Identifier	fmode		5407028	0					
ANR	5407116	IfStatement	if ( ocf -> cache != NULL )		5407028	3					
ANR	5407117	Condition	ocf -> cache != NULL	492:16:16349:16366	5407028	0	True				
ANR	5407118	EqualityExpression	ocf -> cache != NULL		5407028	0		!=			
ANR	5407119	PtrMemberAccess	ocf -> cache		5407028	0					
ANR	5407120	Identifier	ocf		5407028	0					
ANR	5407121	Identifier	cache		5407028	1					
ANR	5407122	Identifier	NULL		5407028	1					
ANR	5407123	CompoundStatement		18:36:690:690	5407028	1					
ANR	5407124	ExpressionStatement	cl_cache_destroy ( ocf -> cache )	493:16:16387:16415	5407028	0	True				
ANR	5407125	CallExpression	cl_cache_destroy ( ocf -> cache )		5407028	0					
ANR	5407126	Callee	cl_cache_destroy		5407028	0					
ANR	5407127	Identifier	cl_cache_destroy		5407028	0					
ANR	5407128	ArgumentList	ocf -> cache		5407028	1					
ANR	5407129	Argument	ocf -> cache		5407028	0					
ANR	5407130	PtrMemberAccess	ocf -> cache		5407028	0					
ANR	5407131	Identifier	ocf		5407028	0					
ANR	5407132	Identifier	cache		5407028	1					
ANR	5407133	ExpressionStatement	ocf -> cache = cl_cache_alloc ( ocf -> mem )	494:16:16433:16470	5407028	1	True				
ANR	5407134	AssignmentExpression	ocf -> cache = cl_cache_alloc ( ocf -> mem )		5407028	0		=			
ANR	5407135	PtrMemberAccess	ocf -> cache		5407028	0					
ANR	5407136	Identifier	ocf		5407028	0					
ANR	5407137	Identifier	cache		5407028	1					
ANR	5407138	CallExpression	cl_cache_alloc ( ocf -> mem )		5407028	1					
ANR	5407139	Callee	cl_cache_alloc		5407028	0					
ANR	5407140	Identifier	cl_cache_alloc		5407028	0					
ANR	5407141	ArgumentList	ocf -> mem		5407028	1					
ANR	5407142	Argument	ocf -> mem		5407028	0					
ANR	5407143	PtrMemberAccess	ocf -> mem		5407028	0					
ANR	5407144	Identifier	ocf		5407028	0					
ANR	5407145	Identifier	mem		5407028	1					
ANR	5407146	ExpressionStatement	( ( IFILE * ) cf ) -> filesize = 0	496:12:16498:16525	5407028	4	True				
ANR	5407147	AssignmentExpression	( ( IFILE * ) cf ) -> filesize = 0		5407028	0		=			
ANR	5407148	PtrMemberAccess	( ( IFILE * ) cf ) -> filesize		5407028	0					
ANR	5407149	CastExpression	( IFILE * ) cf		5407028	0					
ANR	5407150	CastTarget	IFILE *		5407028	0					
ANR	5407151	Identifier	cf		5407028	1					
ANR	5407152	Identifier	filesize		5407028	1					
ANR	5407153	PrimaryExpression	0		5407028	1					
ANR	5407154	ExpressionStatement	( ( IFILE * ) cf ) -> pos = 0	498:8:16545:16567	5407028	1	True				
ANR	5407155	AssignmentExpression	( ( IFILE * ) cf ) -> pos = 0		5407028	0		=			
ANR	5407156	PtrMemberAccess	( ( IFILE * ) cf ) -> pos		5407028	0					
ANR	5407157	CastExpression	( IFILE * ) cf		5407028	0					
ANR	5407158	CastTarget	IFILE *		5407028	0					
ANR	5407159	Identifier	cf		5407028	1					
ANR	5407160	Identifier	pos		5407028	1					
ANR	5407161	PrimaryExpression	0		5407028	1					
ANR	5407162	ElseStatement	else		5407028	0					
ANR	5407163	CompoundStatement		25:11:901:901	5407028	0					
ANR	5407164	IfStatement	if ( discard_data )		5407028	0					
ANR	5407165	Condition	discard_data	500:12:16594:16605	5407028	0	True				
ANR	5407166	Identifier	discard_data		5407028	0					
ANR	5407167	CompoundStatement		26:26:929:929	5407028	1					
ANR	5407168	ExpressionStatement	"f = freopen ( fname , gp_fmode_wb , f )"	509:12:16985:17019	5407028	0	True				
ANR	5407169	AssignmentExpression	"f = freopen ( fname , gp_fmode_wb , f )"		5407028	0		=			
ANR	5407170	Identifier	f		5407028	0					
ANR	5407171	CallExpression	"freopen ( fname , gp_fmode_wb , f )"		5407028	1					
ANR	5407172	Callee	freopen		5407028	0					
ANR	5407173	Identifier	freopen		5407028	0					
ANR	5407174	ArgumentList	fname		5407028	1					
ANR	5407175	Argument	fname		5407028	0					
ANR	5407176	Identifier	fname		5407028	0					
ANR	5407177	Argument	gp_fmode_wb		5407028	1					
ANR	5407178	Identifier	gp_fmode_wb		5407028	0					
ANR	5407179	Argument	f		5407028	2					
ANR	5407180	Identifier	f		5407028	0					
ANR	5407181	ExpressionStatement	"( ( IFILE * ) cf ) -> f = freopen ( fname , fmode , f )"	510:12:17033:17076	5407028	1	True				
ANR	5407182	AssignmentExpression	"( ( IFILE * ) cf ) -> f = freopen ( fname , fmode , f )"		5407028	0		=			
ANR	5407183	PtrMemberAccess	( ( IFILE * ) cf ) -> f		5407028	0					
ANR	5407184	CastExpression	( IFILE * ) cf		5407028	0					
ANR	5407185	CastTarget	IFILE *		5407028	0					
ANR	5407186	Identifier	cf		5407028	1					
ANR	5407187	Identifier	f		5407028	1					
ANR	5407188	CallExpression	"freopen ( fname , fmode , f )"		5407028	1					
ANR	5407189	Callee	freopen		5407028	0					
ANR	5407190	Identifier	freopen		5407028	0					
ANR	5407191	ArgumentList	fname		5407028	1					
ANR	5407192	Argument	fname		5407028	0					
ANR	5407193	Identifier	fname		5407028	0					
ANR	5407194	Argument	fmode		5407028	1					
ANR	5407195	Identifier	fmode		5407028	0					
ANR	5407196	Argument	f		5407028	2					
ANR	5407197	Identifier	f		5407028	0					
ANR	5407198	ExpressionStatement	( ( IFILE * ) cf ) -> pos = 0	511:12:17090:17112	5407028	2	True				
ANR	5407199	AssignmentExpression	( ( IFILE * ) cf ) -> pos = 0		5407028	0		=			
ANR	5407200	PtrMemberAccess	( ( IFILE * ) cf ) -> pos		5407028	0					
ANR	5407201	CastExpression	( IFILE * ) cf		5407028	0					
ANR	5407202	CastTarget	IFILE *		5407028	0					
ANR	5407203	Identifier	cf		5407028	1					
ANR	5407204	Identifier	pos		5407028	1					
ANR	5407205	PrimaryExpression	0		5407028	1					
ANR	5407206	ExpressionStatement	( ( IFILE * ) cf ) -> filesize = 0	512:12:17126:17153	5407028	3	True				
ANR	5407207	AssignmentExpression	( ( IFILE * ) cf ) -> filesize = 0		5407028	0		=			
ANR	5407208	PtrMemberAccess	( ( IFILE * ) cf ) -> filesize		5407028	0					
ANR	5407209	CastExpression	( IFILE * ) cf		5407028	0					
ANR	5407210	CastTarget	IFILE *		5407028	0					
ANR	5407211	Identifier	cf		5407028	1					
ANR	5407212	Identifier	filesize		5407028	1					
ANR	5407213	PrimaryExpression	0		5407028	1					
ANR	5407214	ElseStatement	else		5407028	0					
ANR	5407215	CompoundStatement		39:15:1491:1491	5407028	0					
ANR	5407216	ExpressionStatement	rewind ( f )	514:12:17184:17193	5407028	0	True				
ANR	5407217	CallExpression	rewind ( f )		5407028	0					
ANR	5407218	Callee	rewind		5407028	0					
ANR	5407219	Identifier	rewind		5407028	0					
ANR	5407220	ArgumentList	f		5407028	1					
ANR	5407221	Argument	f		5407028	0					
ANR	5407222	Identifier	f		5407028	0					
ANR	5407223	ReturnType	static void		5407028	1					
ANR	5407224	Identifier	clist_rewind		5407028	2					
ANR	5407225	ParameterList	"clist_file_ptr cf , bool discard_data , const char * fname"		5407028	3					
ANR	5407226	Parameter	clist_file_ptr cf	474:13:15621:15637	5407028	0	True				
ANR	5407227	ParameterType	clist_file_ptr		5407028	0					
ANR	5407228	Identifier	cf		5407028	1					
ANR	5407229	Parameter	bool discard_data	474:32:15640:15656	5407028	1	True				
ANR	5407230	ParameterType	bool		5407028	0					
ANR	5407231	Identifier	discard_data		5407028	1					
ANR	5407232	Parameter	const char * fname	474:51:15659:15675	5407028	2	True				
ANR	5407233	ParameterType	const char *		5407028	0					
ANR	5407234	Identifier	fname		5407028	1					
ANR	5407235	CFGEntryNode	ENTRY		5407028		True				
ANR	5407236	CFGExitNode	EXIT		5407028		True				
ANR	5407237	Symbol	fname		5407028						
ANR	5407238	Symbol	cf		5407028						
ANR	5407239	Symbol	NULL		5407028						
ANR	5407240	Symbol	fake_path_to_file		5407028						
ANR	5407241	Symbol	freopen		5407028						
ANR	5407242	Symbol	( ( IFILE * ) cf ) -> pos		5407028						
ANR	5407243	Symbol	discard_data		5407028						
ANR	5407244	Symbol	f		5407028						
ANR	5407245	Symbol	ocf -> mem		5407028						
ANR	5407246	Symbol	( ( IFILE * ) cf ) -> f		5407028						
ANR	5407247	Symbol	( ( IFILE * ) cf ) -> filesize		5407028						
ANR	5407248	Symbol	* cf		5407028						
ANR	5407249	Symbol	cl_cache_alloc		5407028						
ANR	5407250	Symbol	ocf		5407028						
ANR	5407251	Symbol	gp_open_scratch_file_rm		5407028						
ANR	5407252	Symbol	gp_fmode_wb		5407028						
ANR	5407253	Symbol	gp_scratch_file_name_prefix		5407028						
ANR	5407254	Symbol	ocf -> f		5407028						
ANR	5407255	Symbol	fmode		5407028						
ANR	5407256	Symbol	ocf -> cache		5407028						
ANR	5407257	Symbol	* ocf		5407028						
ANR	5407258	Symbol	gp_fmode_binary_suffix		5407028						
ANR	5407259	Symbol	tfname		5407028						
ANR	5407260	Function	clist_fseek	519:0:17214:17935							
ANR	5407261	FunctionDef	"clist_fseek (clist_file_ptr cf , int64_t offset , int mode , const char * ignore_fname)"		5407260	0					
ANR	5407262	CompoundStatement		521:0:17308:17935	5407260	0					
ANR	5407263	IdentifierDeclStatement	IFILE * ifile = ( IFILE * ) cf ;	522:4:17314:17340	5407260	0	True				
ANR	5407264	IdentifierDecl	* ifile = ( IFILE * ) cf		5407260	0					
ANR	5407265	IdentifierDeclType	IFILE *		5407260	0					
ANR	5407266	Identifier	ifile		5407260	1					
ANR	5407267	AssignmentExpression	* ifile = ( IFILE * ) cf		5407260	2		=			
ANR	5407268	Identifier	ifile		5407260	0					
ANR	5407269	CastExpression	( IFILE * ) cf		5407260	1					
ANR	5407270	CastTarget	IFILE *		5407260	0					
ANR	5407271	Identifier	cf		5407260	1					
ANR	5407272	IdentifierDeclStatement	int res = 0 ;	523:4:17346:17357	5407260	1	True				
ANR	5407273	IdentifierDecl	res = 0		5407260	0					
ANR	5407274	IdentifierDeclType	int		5407260	0					
ANR	5407275	Identifier	res		5407260	1					
ANR	5407276	AssignmentExpression	res = 0		5407260	2		=			
ANR	5407277	Identifier	res		5407260	0					
ANR	5407278	PrimaryExpression	0		5407260	1					
ANR	5407279	IfStatement	if ( ! gp_can_share_fdesc ( ) )		5407260	2					
ANR	5407280	Condition	! gp_can_share_fdesc ( )	525:8:17368:17388	5407260	0	True				
ANR	5407281	UnaryOperationExpression	! gp_can_share_fdesc ( )		5407260	0					
ANR	5407282	UnaryOperator	!		5407260	0					
ANR	5407283	CallExpression	gp_can_share_fdesc ( )		5407260	1					
ANR	5407284	Callee	gp_can_share_fdesc		5407260	0					
ANR	5407285	Identifier	gp_can_share_fdesc		5407260	0					
ANR	5407286	ArgumentList			5407260	1					
ANR	5407287	CompoundStatement		5:31:82:82	5407260	1					
ANR	5407288	ExpressionStatement	"res = gp_fseek_64 ( ifile -> f , offset , mode )"	526:8:17401:17442	5407260	0	True				
ANR	5407289	AssignmentExpression	"res = gp_fseek_64 ( ifile -> f , offset , mode )"		5407260	0		=			
ANR	5407290	Identifier	res		5407260	0					
ANR	5407291	CallExpression	"gp_fseek_64 ( ifile -> f , offset , mode )"		5407260	1					
ANR	5407292	Callee	gp_fseek_64		5407260	0					
ANR	5407293	Identifier	gp_fseek_64		5407260	0					
ANR	5407294	ArgumentList	ifile -> f		5407260	1					
ANR	5407295	Argument	ifile -> f		5407260	0					
ANR	5407296	PtrMemberAccess	ifile -> f		5407260	0					
ANR	5407297	Identifier	ifile		5407260	0					
ANR	5407298	Identifier	f		5407260	1					
ANR	5407299	Argument	offset		5407260	1					
ANR	5407300	Identifier	offset		5407260	0					
ANR	5407301	Argument	mode		5407260	2					
ANR	5407302	Identifier	mode		5407260	0					
ANR	5407303	IfStatement	if ( res >= 0 )		5407260	3					
ANR	5407304	Condition	res >= 0	529:8:17518:17525	5407260	0	True				
ANR	5407305	RelationalExpression	res >= 0		5407260	0		>=			
ANR	5407306	Identifier	res		5407260	0					
ANR	5407307	PrimaryExpression	0		5407260	1					
ANR	5407308	CompoundStatement		9:18:219:219	5407260	1					
ANR	5407309	SwitchStatement	switch ( mode )		5407260	0					
ANR	5407310	Condition	mode	531:16:17582:17585	5407260	0	True				
ANR	5407311	Identifier	mode		5407260	0					
ANR	5407312	CompoundStatement		11:22:279:279	5407260	1					
ANR	5407313	Label	case SEEK_SET :	532:12:17602:17615	5407260	0	True				
ANR	5407314	Identifier	SEEK_SET		5407260	0					
ANR	5407315	ExpressionStatement	ifile -> pos = offset	533:16:17633:17652	5407260	1	True				
ANR	5407316	AssignmentExpression	ifile -> pos = offset		5407260	0		=			
ANR	5407317	PtrMemberAccess	ifile -> pos		5407260	0					
ANR	5407318	Identifier	ifile		5407260	0					
ANR	5407319	Identifier	pos		5407260	1					
ANR	5407320	Identifier	offset		5407260	1					
ANR	5407321	BreakStatement	break ;	534:16:17670:17675	5407260	2	True				
ANR	5407322	Label	case SEEK_CUR :	535:12:17689:17702	5407260	3	True				
ANR	5407323	Identifier	SEEK_CUR		5407260	0					
ANR	5407324	ExpressionStatement	ifile -> pos += offset	536:16:17720:17740	5407260	4	True				
ANR	5407325	AssignmentExpression	ifile -> pos += offset		5407260	0		+=			
ANR	5407326	PtrMemberAccess	ifile -> pos		5407260	0					
ANR	5407327	Identifier	ifile		5407260	0					
ANR	5407328	Identifier	pos		5407260	1					
ANR	5407329	Identifier	offset		5407260	1					
ANR	5407330	BreakStatement	break ;	537:16:17758:17763	5407260	5	True				
ANR	5407331	Label	case SEEK_END :	538:12:17777:17790	5407260	6	True				
ANR	5407332	Identifier	SEEK_END		5407260	0					
ANR	5407333	ExpressionStatement	ifile -> pos = ifile -> filesize	539:16:17808:17836	5407260	7	True				
ANR	5407334	AssignmentExpression	ifile -> pos = ifile -> filesize		5407260	0		=			
ANR	5407335	PtrMemberAccess	ifile -> pos		5407260	0					
ANR	5407336	Identifier	ifile		5407260	0					
ANR	5407337	Identifier	pos		5407260	1					
ANR	5407338	PtrMemberAccess	ifile -> filesize		5407260	1					
ANR	5407339	Identifier	ifile		5407260	0					
ANR	5407340	Identifier	filesize		5407260	1					
ANR	5407341	BreakStatement	break ;	540:16:17896:17901	5407260	8	True				
ANR	5407342	ReturnStatement	return res ;	543:4:17923:17933	5407260	4	True				
ANR	5407343	Identifier	res		5407260	0					
ANR	5407344	ReturnType	static int		5407260	1					
ANR	5407345	Identifier	clist_fseek		5407260	2					
ANR	5407346	ParameterList	"clist_file_ptr cf , int64_t offset , int mode , const char * ignore_fname"		5407260	3					
ANR	5407347	Parameter	clist_file_ptr cf	520:12:17237:17253	5407260	0	True				
ANR	5407348	ParameterType	clist_file_ptr		5407260	0					
ANR	5407349	Identifier	cf		5407260	1					
ANR	5407350	Parameter	int64_t offset	520:31:17256:17269	5407260	1	True				
ANR	5407351	ParameterType	int64_t		5407260	0					
ANR	5407352	Identifier	offset		5407260	1					
ANR	5407353	Parameter	int mode	520:47:17272:17279	5407260	2	True				
ANR	5407354	ParameterType	int		5407260	0					
ANR	5407355	Identifier	mode		5407260	1					
ANR	5407356	Parameter	const char * ignore_fname	520:57:17282:17305	5407260	3	True				
ANR	5407357	ParameterType	const char *		5407260	0					
ANR	5407358	Identifier	ignore_fname		5407260	1					
ANR	5407359	CFGEntryNode	ENTRY		5407260		True				
ANR	5407360	CFGExitNode	EXIT		5407260		True				
ANR	5407361	Symbol	mode		5407260						
ANR	5407362	Symbol	ignore_fname		5407260						
ANR	5407363	Symbol	ifile -> filesize		5407260						
ANR	5407364	Symbol	res		5407260						
ANR	5407365	Symbol	ifile		5407260						
ANR	5407366	Symbol	cf		5407260						
ANR	5407367	Symbol	ifile -> f		5407260						
ANR	5407368	Symbol	offset		5407260						
ANR	5407369	Symbol	gp_can_share_fdesc		5407260						
ANR	5407370	Symbol	* ifile		5407260						
ANR	5407371	Symbol	gp_fseek_64		5407260						
ANR	5407372	Symbol	ifile -> pos		5407260						
ANR	5407373	DeclStmt									
ANR	5407374	Decl							clist_io_procs_t	clist_io_procs_t	clist_io_procs_file
ANR	5407375	Function	gs_gxclfile_init	560:0:18224:18463							
ANR	5407376	FunctionDef	gs_gxclfile_init (gs_memory_t * mem)		5407375	0					
ANR	5407377	CompoundStatement		562:0:18263:18463	5407375	0					
ANR	5407378	ExpressionStatement	"VALGRIND_HG_DISABLE_CHECKING ( & clist_io_procs_file_global , sizeof ( clist_io_procs_file_global ) )"	564:4:18292:18385	5407375	0	True				
ANR	5407379	CallExpression	"VALGRIND_HG_DISABLE_CHECKING ( & clist_io_procs_file_global , sizeof ( clist_io_procs_file_global ) )"		5407375	0					
ANR	5407380	Callee	VALGRIND_HG_DISABLE_CHECKING		5407375	0					
ANR	5407381	Identifier	VALGRIND_HG_DISABLE_CHECKING		5407375	0					
ANR	5407382	ArgumentList	& clist_io_procs_file_global		5407375	1					
ANR	5407383	Argument	& clist_io_procs_file_global		5407375	0					
ANR	5407384	UnaryOperationExpression	& clist_io_procs_file_global		5407375	0					
ANR	5407385	UnaryOperator	&		5407375	0					
ANR	5407386	Identifier	clist_io_procs_file_global		5407375	1					
ANR	5407387	Argument	sizeof ( clist_io_procs_file_global )		5407375	1					
ANR	5407388	SizeofExpression	sizeof ( clist_io_procs_file_global )		5407375	0					
ANR	5407389	Sizeof	sizeof		5407375	0					
ANR	5407390	SizeofOperand	clist_io_procs_file_global		5407375	1					
ANR	5407391	ExpressionStatement	clist_io_procs_file_global = & clist_io_procs_file	566:4:18398:18447	5407375	1	True				
ANR	5407392	AssignmentExpression	clist_io_procs_file_global = & clist_io_procs_file		5407375	0		=			
ANR	5407393	Identifier	clist_io_procs_file_global		5407375	0					
ANR	5407394	UnaryOperationExpression	& clist_io_procs_file		5407375	1					
ANR	5407395	UnaryOperator	&		5407375	0					
ANR	5407396	Identifier	clist_io_procs_file		5407375	1					
ANR	5407397	ReturnStatement	return 0 ;	567:4:18453:18461	5407375	2	True				
ANR	5407398	PrimaryExpression	0		5407375	0					
ANR	5407399	ReturnType	int		5407375	1					
ANR	5407400	Identifier	gs_gxclfile_init		5407375	2					
ANR	5407401	ParameterList	gs_memory_t * mem		5407375	3					
ANR	5407402	Parameter	gs_memory_t * mem	561:17:18245:18260	5407375	0	True				
ANR	5407403	ParameterType	gs_memory_t *		5407375	0					
ANR	5407404	Identifier	mem		5407375	1					
ANR	5407405	CFGEntryNode	ENTRY		5407375		True				
ANR	5407406	CFGExitNode	EXIT		5407375		True				
ANR	5407407	Symbol	& clist_io_procs_file_global		5407375						
ANR	5407408	Symbol	& clist_io_procs_file		5407375						
ANR	5407409	Symbol	clist_io_procs_file_global		5407375						
ANR	5407410	Symbol	mem		5407375						
