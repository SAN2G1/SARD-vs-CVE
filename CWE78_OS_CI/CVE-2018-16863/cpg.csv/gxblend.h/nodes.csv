command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5368984	File	data/converged/CVE-2018-16863_ghostpdl/gxblend.h								
ANR	5368985	DeclStmt									
ANR	5368986	Decl							bits16	bits16	ArtPixMaxDepth
ANR	5368987	DeclStmt									
ANR	5368988	Decl							struct pdf14_device_s	struct pdf14_device_s	pdf14_device
ANR	5368989	DeclStmt									
ANR	5368990	Decl							struct pdf14_buf_s	struct pdf14_buf_s	pdf14_buf
ANR	5368991	DeclStmt									
ANR	5368992	Decl							struct gx_device_s	struct gx_device_s	gx_device
ANR	5368993	DeclStmt									
ANR	5368994	Decl							struct gs_separations_s	struct gs_separations_s	gs_separations
ANR	5368995	ClassDef	<unnamed>	70:8:2063:2581							
ANR	5368996	DeclStmt									
ANR	5368997	Decl									pdf14_nonseparable_blending_procs_s
ANR	5368998	DeclStmt									
ANR	5368999	Decl							pdf14_nonseparable_blending_procs_s	pdf14_nonseparable_blending_procs_s	pdf14_nonseparable_blending_procs_t
ANR	5369000	ClassDef	<unnamed>	90:8:2833:2965							
ANR	5369001	DeclStmt									
ANR	5369002	Decl							pdf14_nonseparable_blending_procs_t	pdf14_nonseparable_blending_procs_t	device_procs
ANR	5369003	DeclStmt									
ANR	5369004	Decl							gx_device_procs	gx_device_procs	color_mapping_procs
ANR	5369005	DeclStmt									
ANR	5369006	Decl									pdf14_parent_cs_params_s
ANR	5369007	DeclStmt									
ANR	5369008	Decl							pdf14_parent_cs_params_s	pdf14_parent_cs_params_s	pdf14_parent_cs_params_t
ANR	5369009	DeclStmt									
ANR	5369010	Decl							bool	bool ( gs_blend_mode_t blend_mode )	blend_valid_for_spot
ANR	5369011	DeclStmt									
ANR	5369012	Decl							byte	"byte ( byte alpha1 , byte alpha2 )"	art_pdf_union_8
ANR	5369013	Function	art_pdf_union_mul_8	168:0:5955:6271							
ANR	5369014	FunctionDef	"art_pdf_union_mul_8 (byte alpha1 , byte alpha2 , byte alpha_mask)"		5369013	0					
ANR	5369015	CompoundStatement		170:0:6037:6271	5369013	0					
ANR	5369016	IdentifierDeclStatement	int tmp ;	171:4:6043:6050	5369013	0	True				
ANR	5369017	IdentifierDecl	tmp		5369013	0					
ANR	5369018	IdentifierDeclType	int		5369013	0					
ANR	5369019	Identifier	tmp		5369013	1					
ANR	5369020	IfStatement	if ( alpha_mask != 0xff )		5369013	1					
ANR	5369021	Condition	alpha_mask != 0xff	172:8:6060:6077	5369013	0	True				
ANR	5369022	EqualityExpression	alpha_mask != 0xff		5369013	0		!=			
ANR	5369023	Identifier	alpha_mask		5369013	0					
ANR	5369024	PrimaryExpression	0xff		5369013	1					
ANR	5369025	CompoundStatement		4:4:46:46	5369013	1					
ANR	5369026	ExpressionStatement	tmp = alpha2 * alpha_mask + 0x80	174:8:6094:6126	5369013	0	True				
ANR	5369027	AssignmentExpression	tmp = alpha2 * alpha_mask + 0x80		5369013	0		=			
ANR	5369028	Identifier	tmp		5369013	0					
ANR	5369029	AdditiveExpression	alpha2 * alpha_mask + 0x80		5369013	1		+			
ANR	5369030	MultiplicativeExpression	alpha2 * alpha_mask		5369013	0		*			
ANR	5369031	Identifier	alpha2		5369013	0					
ANR	5369032	Identifier	alpha_mask		5369013	1					
ANR	5369033	PrimaryExpression	0x80		5369013	1					
ANR	5369034	ExpressionStatement	alpha2 = ( tmp + ( tmp >> 8 ) ) >> 8	175:8:6136:6166	5369013	1	True				
ANR	5369035	AssignmentExpression	alpha2 = ( tmp + ( tmp >> 8 ) ) >> 8		5369013	0		=			
ANR	5369036	Identifier	alpha2		5369013	0					
ANR	5369037	ShiftExpression	( tmp + ( tmp >> 8 ) ) >> 8		5369013	1		>>			
ANR	5369038	AdditiveExpression	tmp + ( tmp >> 8 )		5369013	0		+			
ANR	5369039	Identifier	tmp		5369013	0					
ANR	5369040	ShiftExpression	tmp >> 8		5369013	1		>>			
ANR	5369041	Identifier	tmp		5369013	0					
ANR	5369042	PrimaryExpression	8		5369013	1					
ANR	5369043	PrimaryExpression	8		5369013	1					
ANR	5369044	ExpressionStatement	tmp = ( 0xff - alpha1 ) * ( 0xff - alpha2 ) + 0x80	177:4:6178:6224	5369013	2	True				
ANR	5369045	AssignmentExpression	tmp = ( 0xff - alpha1 ) * ( 0xff - alpha2 ) + 0x80		5369013	0		=			
ANR	5369046	Identifier	tmp		5369013	0					
ANR	5369047	AdditiveExpression	( 0xff - alpha1 ) * ( 0xff - alpha2 ) + 0x80		5369013	1		+			
ANR	5369048	MultiplicativeExpression	( 0xff - alpha1 ) * ( 0xff - alpha2 )		5369013	0		*			
ANR	5369049	AdditiveExpression	0xff - alpha1		5369013	0		-			
ANR	5369050	PrimaryExpression	0xff		5369013	0					
ANR	5369051	Identifier	alpha1		5369013	1					
ANR	5369052	AdditiveExpression	0xff - alpha2		5369013	1		-			
ANR	5369053	PrimaryExpression	0xff		5369013	0					
ANR	5369054	Identifier	alpha2		5369013	1					
ANR	5369055	PrimaryExpression	0x80		5369013	1					
ANR	5369056	ReturnStatement	return 0xff - ( ( tmp + ( tmp >> 8 ) ) >> 8 ) ;	178:4:6230:6269	5369013	3	True				
ANR	5369057	AdditiveExpression	0xff - ( ( tmp + ( tmp >> 8 ) ) >> 8 )		5369013	0		-			
ANR	5369058	PrimaryExpression	0xff		5369013	0					
ANR	5369059	ShiftExpression	( tmp + ( tmp >> 8 ) ) >> 8		5369013	1		>>			
ANR	5369060	AdditiveExpression	tmp + ( tmp >> 8 )		5369013	0		+			
ANR	5369061	Identifier	tmp		5369013	0					
ANR	5369062	ShiftExpression	tmp >> 8		5369013	1		>>			
ANR	5369063	Identifier	tmp		5369013	0					
ANR	5369064	PrimaryExpression	8		5369013	1					
ANR	5369065	PrimaryExpression	8		5369013	1					
ANR	5369066	ReturnType	static inline byte		5369013	1					
ANR	5369067	Identifier	art_pdf_union_mul_8		5369013	2					
ANR	5369068	ParameterList	"byte alpha1 , byte alpha2 , byte alpha_mask"		5369013	3					
ANR	5369069	Parameter	byte alpha1	169:20:5994:6004	5369013	0	True				
ANR	5369070	ParameterType	byte		5369013	0					
ANR	5369071	Identifier	alpha1		5369013	1					
ANR	5369072	Parameter	byte alpha2	169:33:6007:6017	5369013	1	True				
ANR	5369073	ParameterType	byte		5369013	0					
ANR	5369074	Identifier	alpha2		5369013	1					
ANR	5369075	Parameter	byte alpha_mask	169:46:6020:6034	5369013	2	True				
ANR	5369076	ParameterType	byte		5369013	0					
ANR	5369077	Identifier	alpha_mask		5369013	1					
ANR	5369078	CFGEntryNode	ENTRY		5369013		True				
ANR	5369079	CFGExitNode	EXIT		5369013		True				
ANR	5369080	Symbol	tmp		5369013						
ANR	5369081	Symbol	alpha2		5369013						
ANR	5369082	Symbol	alpha1		5369013						
ANR	5369083	Symbol	alpha_mask		5369013						
ANR	5369084	DeclStmt									
ANR	5369085	Decl							"void ( * ) ( byte * tos_ptr , bool tos_isolated , int tos_planestride , int tos_rowstride , byte alpha , byte shape , gs_blend_mode_t blend_mode , bool tos_has_shape , int tos_shape_offset , int tos_alpha_g_offset , int tos_tag_offset , bool tos_has_tag , byte * nos_ptr , bool nos_isolated , int nos_planestride , int nos_rowstride , byte * nos_alpha_g_ptr , bool nos_knockout , int nos_shape_offset , int nos_tag_offset , byte * mask_row_ptr , int has_mask , pdf14_buf * maskbuf , byte mask_bg_alpha , byte * mask_tr_fn , byte * backdrop_ptr , bool has_matte , int n_chan , bool additive , int num_spots , bool overprint , gx_color_index drawn_comps , int x0 , int y0 , int x1 , int y1 , const pdf14_nonseparable_blending_procs_t * pblend_procs , pdf14_device * pdev )"	"void ( * ) ( byte * tos_ptr , bool tos_isolated , int tos_planestride , int tos_rowstride , byte alpha , byte shape , gs_blend_mode_t blend_mode , bool tos_has_shape , int tos_shape_offset , int tos_alpha_g_offset , int tos_tag_offset , bool tos_has_tag , byte * nos_ptr , bool nos_isolated , int nos_planestride , int nos_rowstride , byte * nos_alpha_g_ptr , bool nos_knockout , int nos_shape_offset , int nos_tag_offset , byte * mask_row_ptr , int has_mask , pdf14_buf * maskbuf , byte mask_bg_alpha , byte * mask_tr_fn , byte * backdrop_ptr , bool has_matte , int n_chan , bool additive , int num_spots , bool overprint , gx_color_index drawn_comps , int x0 , int y0 , int x1 , int y1 , const pdf14_nonseparable_blending_procs_t * pblend_procs , pdf14_device * pdev )"	art_pdf_compose_group_fn
ANR	5369086	DeclStmt									
ANR	5369087	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_rgb_mix
ANR	5369088	DeclStmt									
ANR	5369089	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_gray_mix
ANR	5369090	DeclStmt									
ANR	5369091	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_additive
ANR	5369092	DeclStmt									
ANR	5369093	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_subtractive
ANR	5369094	DeclStmt									
ANR	5369095	Decl							void	"void ( int num_comp , gx_color_index color , pdf14_device * p14dev , byte * out )"	pdf14_unpack_custom
ANR	5369096	DeclStmt									
ANR	5369097	Decl							void	"void ( pdf14_buf * buf , pdf14_buf * tos , bool knockout_buff )"	pdf14_preserve_backdrop
ANR	5369098	DeclStmt									
ANR	5369099	Decl							int	"int ( pdf14_buf * buf , cmm_profile_t * group_profile , pdf14_buf * tos , cmm_profile_t * tos_profile , gs_memory_t * memory , gs_gstate * pgs , gx_device * dev , bool knockout_buff )"	pdf14_preserve_backdrop_cm
ANR	5369100	DeclStmt									
ANR	5369101	Decl							void	"void ( pdf14_buf * tos , pdf14_buf * nos , pdf14_buf * maskbuf , int x0 , int x1 , int y0 , int y1 , int n_chan , bool additive , const pdf14_nonseparable_blending_procs_t * pblend_procs , bool overprint , gx_color_index drawn_comps , gs_memory_t * memory , gx_device * dev )"	pdf14_compose_group
ANR	5369102	DeclStmt									
ANR	5369103	Decl							void	"void ( pdf14_buf * tos , pdf14_buf * nos , int x0 , int x1 , int y0 , int y1 , gs_memory_t * memory , gx_device * dev )"	pdf14_compose_alphaless_group
ANR	5369104	DeclStmt									
ANR	5369105	Decl							gx_color_index	"gx_color_index ( gx_device * dev , const gx_color_value colors [ ] )"	pdf14_encode_color
ANR	5369106	DeclStmt									
ANR	5369107	Decl							gx_color_index	"gx_color_index ( gx_device * dev , const gx_color_value colors [ ] )"	pdf14_encode_color_tag
ANR	5369108	DeclStmt									
ANR	5369109	Decl							int	"int ( gx_device * dev , gx_color_index color , gx_color_value * out )"	pdf14_decode_color
ANR	5369110	DeclStmt									
ANR	5369111	Decl							void	"void ( gx_device * dev , frac gray , frac out [ ] )"	pdf14_gray_cs_to_cmyk_cm
ANR	5369112	DeclStmt									
ANR	5369113	Decl							void	"void ( gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ] )"	pdf14_rgb_cs_to_cmyk_cm
ANR	5369114	DeclStmt									
ANR	5369115	Decl							void	"void ( gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ] )"	pdf14_cmyk_cs_to_cmyk_cm
ANR	5369116	DeclStmt									
ANR	5369117	Decl							void	"void ( gx_device * dev , frac gray , frac out [ ] )"	pdf14_gray_cs_to_rgbspot_cm
ANR	5369118	DeclStmt									
ANR	5369119	Decl							void	"void ( gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ] )"	pdf14_rgb_cs_to_rgbspot_cm
ANR	5369120	DeclStmt									
ANR	5369121	Decl							void	"void ( gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ] )"	pdf14_cmyk_cs_to_rgbspot_cm
ANR	5369122	DeclStmt									
ANR	5369123	Decl							void	"void ( gx_device * dev , frac gray , frac out [ ] )"	pdf14_gray_cs_to_grayspot_cm
ANR	5369124	DeclStmt									
ANR	5369125	Decl							void	"void ( gx_device * dev , const gs_gstate * pgs , frac r , frac g , frac b , frac out [ ] )"	pdf14_rgb_cs_to_grayspot_cm
ANR	5369126	DeclStmt									
ANR	5369127	Decl							void	"void ( gx_device * dev , frac c , frac m , frac y , frac k , frac out [ ] )"	pdf14_cmyk_cs_to_grayspot_cm
ANR	5369128	DeclStmt									
ANR	5369129	Decl							void	"void ( byte * buf_ptr , int width , int height , int rowstride , int planestride , int num_comp , byte bg )"	gx_blend_image_buffer
ANR	5369130	DeclStmt									
ANR	5369131	Decl							int	"int ( gx_device * target , byte * buf_ptr , int planestride , int rowstride , int x0 , int y0 , int width , int height , int num_comp , byte bg , bool has_tags , gs_int_rect rect , gs_separations * pseparations )"	gx_put_blended_image_cmykspot
ANR	5369132	DeclStmt									
ANR	5369133	Decl							int	"int ( gx_device * target , byte * buf_ptr , int planestride , int rowstride , int x0 , int y0 , int width , int height , int num_comp , byte bg )"	gx_put_blended_image_custom
ANR	5369134	DeclStmt									
ANR	5369135	Decl							int	"int ( gx_device * dev , int x , int y , int w , int h , gx_color_index color , const gx_device_color * pdc , bool devn )"	pdf14_mark_fill_rectangle
ANR	5369136	DeclStmt									
ANR	5369137	Decl							void	"void ( int num_rows , int width , int n_chan , int plane_stride , int rowstride , char filename [ ] , byte * Buffer )"	dump_raw_buffer
