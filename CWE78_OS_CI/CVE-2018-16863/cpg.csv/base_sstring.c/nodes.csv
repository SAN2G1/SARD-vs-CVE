command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1420290	File	data/converged/CVE-2018-16863_ghostpdl/base_sstring.c								
ANR	1420291	Function	s_AXE_init	30:0:861:997							
ANR	1420292	FunctionDef	s_AXE_init (stream_state * st)		1420291	0					
ANR	1420293	CompoundStatement		32:0:902:997	1420291	0					
ANR	1420294	Statement	stream_AXE_state	33:4:908:923	1420291	0	True				
ANR	1420295	Statement	*	33:21:925:925	1420291	1	True				
ANR	1420296	Statement	const	33:22:926:930	1420291	2	True				
ANR	1420297	ExpressionStatement	ss = ( stream_AXE_state * ) st	33:28:932:960	1420291	3	True				
ANR	1420298	AssignmentExpression	ss = ( stream_AXE_state * ) st		1420291	0		=			
ANR	1420299	Identifier	ss		1420291	0					
ANR	1420300	CastExpression	( stream_AXE_state * ) st		1420291	1					
ANR	1420301	CastTarget	stream_AXE_state *		1420291	0					
ANR	1420302	Identifier	st		1420291	1					
ANR	1420303	ReturnStatement	return s_AXE_init_inline ( ss ) ;	35:4:967:995	1420291	4	True				
ANR	1420304	CallExpression	s_AXE_init_inline ( ss )		1420291	0					
ANR	1420305	Callee	s_AXE_init_inline		1420291	0					
ANR	1420306	Identifier	s_AXE_init_inline		1420291	0					
ANR	1420307	ArgumentList	ss		1420291	1					
ANR	1420308	Argument	ss		1420291	0					
ANR	1420309	Identifier	ss		1420291	0					
ANR	1420310	ReturnType	static int		1420291	1					
ANR	1420311	Identifier	s_AXE_init		1420291	2					
ANR	1420312	ParameterList	stream_state * st		1420291	3					
ANR	1420313	Parameter	stream_state * st	31:11:883:899	1420291	0	True				
ANR	1420314	ParameterType	stream_state *		1420291	0					
ANR	1420315	Identifier	st		1420291	1					
ANR	1420316	CFGEntryNode	ENTRY		1420291		True				
ANR	1420317	CFGExitNode	EXIT		1420291		True				
ANR	1420318	Symbol	ss		1420291						
ANR	1420319	Symbol	st		1420291						
ANR	1420320	Symbol	s_AXE_init_inline		1420291						
ANR	1420321	Function	s_AXE_process	39:0:1023:2008							
ANR	1420322	FunctionDef	"s_AXE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1420321	0					
ANR	1420323	CompoundStatement		42:0:1143:2008	1420321	0					
ANR	1420324	Statement	stream_AXE_state	43:4:1149:1164	1420321	0	True				
ANR	1420325	Statement	*	43:21:1166:1166	1420321	1	True				
ANR	1420326	Statement	const	43:22:1167:1171	1420321	2	True				
ANR	1420327	ExpressionStatement	ss = ( stream_AXE_state * ) st	43:28:1173:1201	1420321	3	True				
ANR	1420328	AssignmentExpression	ss = ( stream_AXE_state * ) st		1420321	0		=			
ANR	1420329	Identifier	ss		1420321	0					
ANR	1420330	CastExpression	( stream_AXE_state * ) st		1420321	1					
ANR	1420331	CastTarget	stream_AXE_state *		1420321	0					
ANR	1420332	Identifier	st		1420321	1					
ANR	1420333	IdentifierDeclStatement	const byte * p = pr -> ptr ;	44:4:1207:1230	1420321	4	True				
ANR	1420334	IdentifierDecl	* p = pr -> ptr		1420321	0					
ANR	1420335	IdentifierDeclType	const byte *		1420321	0					
ANR	1420336	Identifier	p		1420321	1					
ANR	1420337	AssignmentExpression	* p = pr -> ptr		1420321	2		=			
ANR	1420338	Identifier	p		1420321	0					
ANR	1420339	PtrMemberAccess	pr -> ptr		1420321	1					
ANR	1420340	Identifier	pr		1420321	0					
ANR	1420341	Identifier	ptr		1420321	1					
ANR	1420342	IdentifierDeclStatement	byte * q = pw -> ptr ;	45:4:1236:1253	1420321	5	True				
ANR	1420343	IdentifierDecl	* q = pw -> ptr		1420321	0					
ANR	1420344	IdentifierDeclType	byte *		1420321	0					
ANR	1420345	Identifier	q		1420321	1					
ANR	1420346	AssignmentExpression	* q = pw -> ptr		1420321	2		=			
ANR	1420347	Identifier	q		1420321	0					
ANR	1420348	PtrMemberAccess	pw -> ptr		1420321	1					
ANR	1420349	Identifier	pw		1420321	0					
ANR	1420350	Identifier	ptr		1420321	1					
ANR	1420351	IdentifierDeclStatement	int rcount = pr -> limit - p ;	46:4:1259:1285	1420321	6	True				
ANR	1420352	IdentifierDecl	rcount = pr -> limit - p		1420321	0					
ANR	1420353	IdentifierDeclType	int		1420321	0					
ANR	1420354	Identifier	rcount		1420321	1					
ANR	1420355	AssignmentExpression	rcount = pr -> limit - p		1420321	2		=			
ANR	1420356	Identifier	rcount		1420321	0					
ANR	1420357	AdditiveExpression	pr -> limit - p		1420321	1		-			
ANR	1420358	PtrMemberAccess	pr -> limit		1420321	0					
ANR	1420359	Identifier	pr		1420321	0					
ANR	1420360	Identifier	limit		1420321	1					
ANR	1420361	Identifier	p		1420321	1					
ANR	1420362	IdentifierDeclStatement	int wcount = pw -> limit - q ;	47:4:1291:1317	1420321	7	True				
ANR	1420363	IdentifierDecl	wcount = pw -> limit - q		1420321	0					
ANR	1420364	IdentifierDeclType	int		1420321	0					
ANR	1420365	Identifier	wcount		1420321	1					
ANR	1420366	AssignmentExpression	wcount = pw -> limit - q		1420321	2		=			
ANR	1420367	Identifier	wcount		1420321	0					
ANR	1420368	AdditiveExpression	pw -> limit - q		1420321	1		-			
ANR	1420369	PtrMemberAccess	pw -> limit		1420321	0					
ANR	1420370	Identifier	pw		1420321	0					
ANR	1420371	Identifier	limit		1420321	1					
ANR	1420372	Identifier	q		1420321	1					
ANR	1420373	IdentifierDeclStatement	int count ;	48:4:1323:1332	1420321	8	True				
ANR	1420374	IdentifierDecl	count		1420321	0					
ANR	1420375	IdentifierDeclType	int		1420321	0					
ANR	1420376	Identifier	count		1420321	1					
ANR	1420377	IdentifierDeclStatement	int pos = ss -> count ;	49:4:1338:1357	1420321	9	True				
ANR	1420378	IdentifierDecl	pos = ss -> count		1420321	0					
ANR	1420379	IdentifierDeclType	int		1420321	0					
ANR	1420380	Identifier	pos		1420321	1					
ANR	1420381	AssignmentExpression	pos = ss -> count		1420321	2		=			
ANR	1420382	Identifier	pos		1420321	0					
ANR	1420383	PtrMemberAccess	ss -> count		1420321	1					
ANR	1420384	Identifier	ss		1420321	0					
ANR	1420385	Identifier	count		1420321	1					
ANR	1420386	IdentifierDeclStatement	"const char * hex_digits = ""0123456789ABCDEF"" ;"	50:4:1363:1406	1420321	10	True				
ANR	1420387	IdentifierDecl	"* hex_digits = ""0123456789ABCDEF"""		1420321	0					
ANR	1420388	IdentifierDeclType	const char *		1420321	0					
ANR	1420389	Identifier	hex_digits		1420321	1					
ANR	1420390	AssignmentExpression	"* hex_digits = ""0123456789ABCDEF"""		1420321	2		=			
ANR	1420391	Identifier	hex_digits		1420321	0					
ANR	1420392	PrimaryExpression	"""0123456789ABCDEF"""		1420321	1					
ANR	1420393	IdentifierDeclStatement	int status = 0 ;	51:4:1412:1426	1420321	11	True				
ANR	1420394	IdentifierDecl	status = 0		1420321	0					
ANR	1420395	IdentifierDeclType	int		1420321	0					
ANR	1420396	Identifier	status		1420321	1					
ANR	1420397	AssignmentExpression	status = 0		1420321	2		=			
ANR	1420398	Identifier	status		1420321	0					
ANR	1420399	PrimaryExpression	0		1420321	1					
ANR	1420400	IfStatement	if ( last && ss -> EndOfData )		1420321	12					
ANR	1420401	Condition	last && ss -> EndOfData	53:8:1437:1457	1420321	0	True				
ANR	1420402	AndExpression	last && ss -> EndOfData		1420321	0		&&			
ANR	1420403	Identifier	last		1420321	0					
ANR	1420404	PtrMemberAccess	ss -> EndOfData		1420321	1					
ANR	1420405	Identifier	ss		1420321	0					
ANR	1420406	Identifier	EndOfData		1420321	1					
ANR	1420407	ExpressionStatement	wcount --	54:8:1468:1476	1420321	1	True				
ANR	1420408	PostIncDecOperationExpression	wcount --		1420321	0					
ANR	1420409	Identifier	wcount		1420321	0					
ANR	1420410	IncDec	--		1420321	1					
ANR	1420411	ExpressionStatement	wcount -= ( wcount + pos * 2 ) / 65	55:4:1508:1541	1420321	13	True				
ANR	1420412	AssignmentExpression	wcount -= ( wcount + pos * 2 ) / 65		1420321	0		-=			
ANR	1420413	Identifier	wcount		1420321	0					
ANR	1420414	MultiplicativeExpression	( wcount + pos * 2 ) / 65		1420321	1		/			
ANR	1420415	AdditiveExpression	wcount + pos * 2		1420321	0		+			
ANR	1420416	Identifier	wcount		1420321	0					
ANR	1420417	MultiplicativeExpression	pos * 2		1420321	1		*			
ANR	1420418	Identifier	pos		1420321	0					
ANR	1420419	PrimaryExpression	2		1420321	1					
ANR	1420420	PrimaryExpression	65		1420321	1					
ANR	1420421	ExpressionStatement	wcount >>= 1	56:4:1571:1583	1420321	14	True				
ANR	1420422	AssignmentExpression	wcount >>= 1		1420321	0		>>=			
ANR	1420423	Identifier	wcount		1420321	0					
ANR	1420424	PrimaryExpression	1		1420321	1					
ANR	1420425	ExpressionStatement	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"	57:4:1619:1676	1420321	15	True				
ANR	1420426	AssignmentExpression	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"		1420321	0		=			
ANR	1420427	Identifier	count		1420321	0					
ANR	1420428	ConditionalExpression	"wcount < rcount ? ( status = 1 , wcount ) : rcount"		1420321	1					
ANR	1420429	Condition	wcount < rcount		1420321	0					
ANR	1420430	RelationalExpression	wcount < rcount		1420321	0		<			
ANR	1420431	Identifier	wcount		1420321	0					
ANR	1420432	Identifier	rcount		1420321	1					
ANR	1420433	Expression	"status = 1 , wcount"		1420321	1					
ANR	1420434	AssignmentExpression	status = 1		1420321	0		=			
ANR	1420435	Identifier	status		1420321	0					
ANR	1420436	PrimaryExpression	1		1420321	1					
ANR	1420437	Identifier	wcount		1420321	1					
ANR	1420438	Identifier	rcount		1420321	2					
ANR	1420439	WhileStatement	while ( -- count >= 0 )		1420321	16					
ANR	1420440	Condition	-- count >= 0	58:11:1689:1700	1420321	0	True				
ANR	1420441	RelationalExpression	-- count >= 0		1420321	0		>=			
ANR	1420442	UnaryExpression	-- count		1420321	0					
ANR	1420443	IncDec	--		1420321	0					
ANR	1420444	Identifier	count		1420321	1					
ANR	1420445	PrimaryExpression	0		1420321	1					
ANR	1420446	CompoundStatement		17:25:559:559	1420321	1					
ANR	1420447	ExpressionStatement	* ++ q = hex_digits [ * ++ p >> 4 ]	59:8:1713:1741	1420321	0	True				
ANR	1420448	AssignmentExpression	* ++ q = hex_digits [ * ++ p >> 4 ]		1420321	0		=			
ANR	1420449	UnaryOperationExpression	* ++ q		1420321	0					
ANR	1420450	UnaryOperator	*		1420321	0					
ANR	1420451	UnaryExpression	++ q		1420321	1					
ANR	1420452	IncDec	++		1420321	0					
ANR	1420453	Identifier	q		1420321	1					
ANR	1420454	ArrayIndexing	hex_digits [ * ++ p >> 4 ]		1420321	1					
ANR	1420455	Identifier	hex_digits		1420321	0					
ANR	1420456	ShiftExpression	* ++ p >> 4		1420321	1		>>			
ANR	1420457	UnaryOperationExpression	* ++ p		1420321	0					
ANR	1420458	UnaryOperator	*		1420321	0					
ANR	1420459	UnaryExpression	++ p		1420321	1					
ANR	1420460	IncDec	++		1420321	0					
ANR	1420461	Identifier	p		1420321	1					
ANR	1420462	PrimaryExpression	4		1420321	1					
ANR	1420463	ExpressionStatement	* ++ q = hex_digits [ * p & 0xf ]	60:8:1751:1778	1420321	1	True				
ANR	1420464	AssignmentExpression	* ++ q = hex_digits [ * p & 0xf ]		1420321	0		=			
ANR	1420465	UnaryOperationExpression	* ++ q		1420321	0					
ANR	1420466	UnaryOperator	*		1420321	0					
ANR	1420467	UnaryExpression	++ q		1420321	1					
ANR	1420468	IncDec	++		1420321	0					
ANR	1420469	Identifier	q		1420321	1					
ANR	1420470	ArrayIndexing	hex_digits [ * p & 0xf ]		1420321	1					
ANR	1420471	Identifier	hex_digits		1420321	0					
ANR	1420472	BitAndExpression	* p & 0xf		1420321	1		&			
ANR	1420473	UnaryOperationExpression	* p		1420321	0					
ANR	1420474	UnaryOperator	*		1420321	0					
ANR	1420475	Identifier	p		1420321	1					
ANR	1420476	PrimaryExpression	0xf		1420321	1					
ANR	1420477	IfStatement	if ( ! ( ++ pos & 31 ) && ( count != 0 || ! last ) )		1420321	2					
ANR	1420478	Condition	! ( ++ pos & 31 ) && ( count != 0 || ! last )	61:12:1792:1829	1420321	0	True				
ANR	1420479	AndExpression	! ( ++ pos & 31 ) && ( count != 0 || ! last )		1420321	0		&&			
ANR	1420480	UnaryOperationExpression	! ( ++ pos & 31 )		1420321	0					
ANR	1420481	UnaryOperator	!		1420321	0					
ANR	1420482	BitAndExpression	++ pos & 31		1420321	1		&			
ANR	1420483	UnaryExpression	++ pos		1420321	0					
ANR	1420484	IncDec	++		1420321	0					
ANR	1420485	Identifier	pos		1420321	1					
ANR	1420486	PrimaryExpression	31		1420321	1					
ANR	1420487	OrExpression	count != 0 || ! last		1420321	1		||			
ANR	1420488	EqualityExpression	count != 0		1420321	0		!=			
ANR	1420489	Identifier	count		1420321	0					
ANR	1420490	PrimaryExpression	0		1420321	1					
ANR	1420491	UnaryOperationExpression	! last		1420321	1					
ANR	1420492	UnaryOperator	!		1420321	0					
ANR	1420493	Identifier	last		1420321	1					
ANR	1420494	ExpressionStatement	* ++ q = '\\n'	62:12:1844:1855	1420321	1	True				
ANR	1420495	AssignmentExpression	* ++ q = '\\n'		1420321	0		=			
ANR	1420496	UnaryOperationExpression	* ++ q		1420321	0					
ANR	1420497	UnaryOperator	*		1420321	0					
ANR	1420498	UnaryExpression	++ q		1420321	1					
ANR	1420499	IncDec	++		1420321	0					
ANR	1420500	Identifier	q		1420321	1					
ANR	1420501	PrimaryExpression	'\\n'		1420321	1					
ANR	1420502	IfStatement	if ( last && status == 0 && ss -> EndOfData )		1420321	17					
ANR	1420503	Condition	last && status == 0 && ss -> EndOfData	64:8:1871:1906	1420321	0	True				
ANR	1420504	AndExpression	last && status == 0 && ss -> EndOfData		1420321	0		&&			
ANR	1420505	Identifier	last		1420321	0					
ANR	1420506	AndExpression	status == 0 && ss -> EndOfData		1420321	1		&&			
ANR	1420507	EqualityExpression	status == 0		1420321	0		==			
ANR	1420508	Identifier	status		1420321	0					
ANR	1420509	PrimaryExpression	0		1420321	1					
ANR	1420510	PtrMemberAccess	ss -> EndOfData		1420321	1					
ANR	1420511	Identifier	ss		1420321	0					
ANR	1420512	Identifier	EndOfData		1420321	1					
ANR	1420513	ExpressionStatement	* ++ q = '>'	65:8:1917:1927	1420321	1	True				
ANR	1420514	AssignmentExpression	* ++ q = '>'		1420321	0		=			
ANR	1420515	UnaryOperationExpression	* ++ q		1420321	0					
ANR	1420516	UnaryOperator	*		1420321	0					
ANR	1420517	UnaryExpression	++ q		1420321	1					
ANR	1420518	IncDec	++		1420321	0					
ANR	1420519	Identifier	q		1420321	1					
ANR	1420520	PrimaryExpression	'>'		1420321	1					
ANR	1420521	ExpressionStatement	pr -> ptr = p	66:4:1933:1944	1420321	18	True				
ANR	1420522	AssignmentExpression	pr -> ptr = p		1420321	0		=			
ANR	1420523	PtrMemberAccess	pr -> ptr		1420321	0					
ANR	1420524	Identifier	pr		1420321	0					
ANR	1420525	Identifier	ptr		1420321	1					
ANR	1420526	Identifier	p		1420321	1					
ANR	1420527	ExpressionStatement	pw -> ptr = q	67:4:1950:1961	1420321	19	True				
ANR	1420528	AssignmentExpression	pw -> ptr = q		1420321	0		=			
ANR	1420529	PtrMemberAccess	pw -> ptr		1420321	0					
ANR	1420530	Identifier	pw		1420321	0					
ANR	1420531	Identifier	ptr		1420321	1					
ANR	1420532	Identifier	q		1420321	1					
ANR	1420533	ExpressionStatement	ss -> count = pos & 31	68:4:1967:1987	1420321	20	True				
ANR	1420534	AssignmentExpression	ss -> count = pos & 31		1420321	0		=			
ANR	1420535	PtrMemberAccess	ss -> count		1420321	0					
ANR	1420536	Identifier	ss		1420321	0					
ANR	1420537	Identifier	count		1420321	1					
ANR	1420538	BitAndExpression	pos & 31		1420321	1		&			
ANR	1420539	Identifier	pos		1420321	0					
ANR	1420540	PrimaryExpression	31		1420321	1					
ANR	1420541	ReturnStatement	return status ;	69:4:1993:2006	1420321	21	True				
ANR	1420542	Identifier	status		1420321	0					
ANR	1420543	ReturnType	static int		1420321	1					
ANR	1420544	Identifier	s_AXE_process		1420321	2					
ANR	1420545	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1420321	3					
ANR	1420546	Parameter	stream_state * st	40:14:1048:1064	1420321	0	True				
ANR	1420547	ParameterType	stream_state *		1420321	0					
ANR	1420548	Identifier	st		1420321	1					
ANR	1420549	Parameter	stream_cursor_read * pr	40:33:1067:1089	1420321	1	True				
ANR	1420550	ParameterType	stream_cursor_read *		1420321	0					
ANR	1420551	Identifier	pr		1420321	1					
ANR	1420552	Parameter	stream_cursor_write * pw	41:14:1106:1129	1420321	2	True				
ANR	1420553	ParameterType	stream_cursor_write *		1420321	0					
ANR	1420554	Identifier	pw		1420321	1					
ANR	1420555	Parameter	bool last	41:40:1132:1140	1420321	3	True				
ANR	1420556	ParameterType	bool		1420321	0					
ANR	1420557	Identifier	last		1420321	1					
ANR	1420558	CFGEntryNode	ENTRY		1420321		True				
ANR	1420559	CFGExitNode	EXIT		1420321		True				
ANR	1420560	Symbol	wcount		1420321						
ANR	1420561	Symbol	ss -> EndOfData		1420321						
ANR	1420562	Symbol	ss -> count		1420321						
ANR	1420563	Symbol	pr		1420321						
ANR	1420564	Symbol	* ss		1420321						
ANR	1420565	Symbol	pw		1420321						
ANR	1420566	Symbol	pr -> limit		1420321						
ANR	1420567	Symbol	pw -> limit		1420321						
ANR	1420568	Symbol	pos		1420321						
ANR	1420569	Symbol	* * p		1420321						
ANR	1420570	Symbol	pr -> ptr		1420321						
ANR	1420571	Symbol	pw -> ptr		1420321						
ANR	1420572	Symbol	ss		1420321						
ANR	1420573	Symbol	st		1420321						
ANR	1420574	Symbol	last		1420321						
ANR	1420575	Symbol	* ++ p		1420321						
ANR	1420576	Symbol	hex_digits		1420321						
ANR	1420577	Symbol	* ++ q		1420321						
ANR	1420578	Symbol	* * ++ p		1420321						
ANR	1420579	Symbol	count		1420321						
ANR	1420580	Symbol	* hex_digits		1420321						
ANR	1420581	Symbol	* pr		1420321						
ANR	1420582	Symbol	* pw		1420321						
ANR	1420583	Symbol	p		1420321						
ANR	1420584	Symbol	q		1420321						
ANR	1420585	Symbol	rcount		1420321						
ANR	1420586	Symbol	* p		1420321						
ANR	1420587	Symbol	* q		1420321						
ANR	1420588	Symbol	status		1420321						
ANR	1420589	DeclStmt									
ANR	1420590	Decl							const stream_template	const stream_template	s_AXE_template
ANR	1420591	Function	s_AXD_init	82:0:2212:2348							
ANR	1420592	FunctionDef	s_AXD_init (stream_state * st)		1420591	0					
ANR	1420593	CompoundStatement		84:0:2253:2348	1420591	0					
ANR	1420594	Statement	stream_AXD_state	85:4:2259:2274	1420591	0	True				
ANR	1420595	Statement	*	85:21:2276:2276	1420591	1	True				
ANR	1420596	Statement	const	85:22:2277:2281	1420591	2	True				
ANR	1420597	ExpressionStatement	ss = ( stream_AXD_state * ) st	85:28:2283:2311	1420591	3	True				
ANR	1420598	AssignmentExpression	ss = ( stream_AXD_state * ) st		1420591	0		=			
ANR	1420599	Identifier	ss		1420591	0					
ANR	1420600	CastExpression	( stream_AXD_state * ) st		1420591	1					
ANR	1420601	CastTarget	stream_AXD_state *		1420591	0					
ANR	1420602	Identifier	st		1420591	1					
ANR	1420603	ReturnStatement	return s_AXD_init_inline ( ss ) ;	87:4:2318:2346	1420591	4	True				
ANR	1420604	CallExpression	s_AXD_init_inline ( ss )		1420591	0					
ANR	1420605	Callee	s_AXD_init_inline		1420591	0					
ANR	1420606	Identifier	s_AXD_init_inline		1420591	0					
ANR	1420607	ArgumentList	ss		1420591	1					
ANR	1420608	Argument	ss		1420591	0					
ANR	1420609	Identifier	ss		1420591	0					
ANR	1420610	ReturnType	static int		1420591	1					
ANR	1420611	Identifier	s_AXD_init		1420591	2					
ANR	1420612	ParameterList	stream_state * st		1420591	3					
ANR	1420613	Parameter	stream_state * st	83:11:2234:2250	1420591	0	True				
ANR	1420614	ParameterType	stream_state *		1420591	0					
ANR	1420615	Identifier	st		1420591	1					
ANR	1420616	CFGEntryNode	ENTRY		1420591		True				
ANR	1420617	CFGExitNode	EXIT		1420591		True				
ANR	1420618	Symbol	ss		1420591						
ANR	1420619	Symbol	st		1420591						
ANR	1420620	Symbol	s_AXD_init_inline		1420591						
ANR	1420621	Function	s_AXD_process	91:0:2374:3886							
ANR	1420622	FunctionDef	"s_AXD_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1420621	0					
ANR	1420623	CompoundStatement		94:0:2494:3886	1420621	0					
ANR	1420624	Statement	stream_AXD_state	95:4:2500:2515	1420621	0	True				
ANR	1420625	Statement	*	95:21:2517:2517	1420621	1	True				
ANR	1420626	Statement	const	95:22:2518:2522	1420621	2	True				
ANR	1420627	ExpressionStatement	ss = ( stream_AXD_state * ) st	95:28:2524:2552	1420621	3	True				
ANR	1420628	AssignmentExpression	ss = ( stream_AXD_state * ) st		1420621	0		=			
ANR	1420629	Identifier	ss		1420621	0					
ANR	1420630	CastExpression	( stream_AXD_state * ) st		1420621	1					
ANR	1420631	CastTarget	stream_AXD_state *		1420621	0					
ANR	1420632	Identifier	st		1420621	1					
ANR	1420633	IdentifierDeclStatement	"int code = s_hex_process ( pr , pw , & ss -> odd , hex_ignore_whitespace ) ;"	96:4:2558:2623	1420621	4	True				
ANR	1420634	IdentifierDecl	"code = s_hex_process ( pr , pw , & ss -> odd , hex_ignore_whitespace )"		1420621	0					
ANR	1420635	IdentifierDeclType	int		1420621	0					
ANR	1420636	Identifier	code		1420621	1					
ANR	1420637	AssignmentExpression	"code = s_hex_process ( pr , pw , & ss -> odd , hex_ignore_whitespace )"		1420621	2		=			
ANR	1420638	Identifier	code		1420621	0					
ANR	1420639	CallExpression	"s_hex_process ( pr , pw , & ss -> odd , hex_ignore_whitespace )"		1420621	1					
ANR	1420640	Callee	s_hex_process		1420621	0					
ANR	1420641	Identifier	s_hex_process		1420621	0					
ANR	1420642	ArgumentList	pr		1420621	1					
ANR	1420643	Argument	pr		1420621	0					
ANR	1420644	Identifier	pr		1420621	0					
ANR	1420645	Argument	pw		1420621	1					
ANR	1420646	Identifier	pw		1420621	0					
ANR	1420647	Argument	& ss -> odd		1420621	2					
ANR	1420648	UnaryOperationExpression	& ss -> odd		1420621	0					
ANR	1420649	UnaryOperator	&		1420621	0					
ANR	1420650	PtrMemberAccess	ss -> odd		1420621	1					
ANR	1420651	Identifier	ss		1420621	0					
ANR	1420652	Identifier	odd		1420621	1					
ANR	1420653	Argument	hex_ignore_whitespace		1420621	3					
ANR	1420654	Identifier	hex_ignore_whitespace		1420621	0					
ANR	1420655	SwitchStatement	switch ( code )		1420621	5					
ANR	1420656	Condition	code	98:12:2638:2641	1420621	0	True				
ANR	1420657	Identifier	code		1420621	0					
ANR	1420658	CompoundStatement		5:18:149:149	1420621	1					
ANR	1420659	Label	case 0 :	99:8:2654:2660	1420621	0	True				
ANR	1420660	IfStatement	if ( ss -> odd >= 0 && last )		1420621	1					
ANR	1420661	Condition	ss -> odd >= 0 && last	100:16:2678:2697	1420621	0	True				
ANR	1420662	AndExpression	ss -> odd >= 0 && last		1420621	0		&&			
ANR	1420663	RelationalExpression	ss -> odd >= 0		1420621	0		>=			
ANR	1420664	PtrMemberAccess	ss -> odd		1420621	0					
ANR	1420665	Identifier	ss		1420621	0					
ANR	1420666	Identifier	odd		1420621	1					
ANR	1420667	PrimaryExpression	0		1420621	1					
ANR	1420668	Identifier	last		1420621	1					
ANR	1420669	CompoundStatement		7:38:205:205	1420621	1					
ANR	1420670	IfStatement	if ( pw -> ptr == pw -> limit )		1420621	0					
ANR	1420671	Condition	pw -> ptr == pw -> limit	101:20:2722:2741	1420621	0	True				
ANR	1420672	EqualityExpression	pw -> ptr == pw -> limit		1420621	0		==			
ANR	1420673	PtrMemberAccess	pw -> ptr		1420621	0					
ANR	1420674	Identifier	pw		1420621	0					
ANR	1420675	Identifier	ptr		1420621	1					
ANR	1420676	PtrMemberAccess	pw -> limit		1420621	1					
ANR	1420677	Identifier	pw		1420621	0					
ANR	1420678	Identifier	limit		1420621	1					
ANR	1420679	ReturnStatement	return 1 ;	102:20:2764:2772	1420621	1	True				
ANR	1420680	PrimaryExpression	1		1420621	0					
ANR	1420681	ExpressionStatement	* ++ ( pw -> ptr ) = ss -> odd << 4	103:16:2790:2817	1420621	1	True				
ANR	1420682	AssignmentExpression	* ++ ( pw -> ptr ) = ss -> odd << 4		1420621	0		=			
ANR	1420683	UnaryOperationExpression	* ++ ( pw -> ptr )		1420621	0					
ANR	1420684	UnaryOperator	*		1420621	0					
ANR	1420685	UnaryExpression	++ ( pw -> ptr )		1420621	1					
ANR	1420686	IncDec	++		1420621	0					
ANR	1420687	PtrMemberAccess	pw -> ptr		1420621	1					
ANR	1420688	Identifier	pw		1420621	0					
ANR	1420689	Identifier	ptr		1420621	1					
ANR	1420690	ShiftExpression	ss -> odd << 4		1420621	1		<<			
ANR	1420691	PtrMemberAccess	ss -> odd		1420621	0					
ANR	1420692	Identifier	ss		1420621	0					
ANR	1420693	Identifier	odd		1420621	1					
ANR	1420694	PrimaryExpression	4		1420621	1					
ANR	1420695	Label	case 1 :	106:8:2873:2879	1420621	2	True				
ANR	1420696	ForStatement	for ( ; pr -> ptr < pr -> limit ; pr -> ptr ++ )		1420621	3					
ANR	1420697	Condition	pr -> ptr < pr -> limit	108:19:2965:2983	1420621	0	True				
ANR	1420698	RelationalExpression	pr -> ptr < pr -> limit		1420621	0		<			
ANR	1420699	PtrMemberAccess	pr -> ptr		1420621	0					
ANR	1420700	Identifier	pr		1420621	0					
ANR	1420701	Identifier	ptr		1420621	1					
ANR	1420702	PtrMemberAccess	pr -> limit		1420621	1					
ANR	1420703	Identifier	pr		1420621	0					
ANR	1420704	Identifier	limit		1420621	1					
ANR	1420705	PostIncDecOperationExpression	pr -> ptr ++	108:40:2986:2994	1420621	1	True				
ANR	1420706	PtrMemberAccess	pr -> ptr		1420621	0					
ANR	1420707	Identifier	pr		1420621	0					
ANR	1420708	Identifier	ptr		1420621	1					
ANR	1420709	IncDec	++		1420621	1					
ANR	1420710	IfStatement	if ( scan_char_decoder [ pr -> ptr [ 1 ] ] != ctype_space )		1420621	2					
ANR	1420711	Condition	scan_char_decoder [ pr -> ptr [ 1 ] ] != ctype_space	109:20:3017:3060	1420621	0	True				
ANR	1420712	EqualityExpression	scan_char_decoder [ pr -> ptr [ 1 ] ] != ctype_space		1420621	0		!=			
ANR	1420713	ArrayIndexing	scan_char_decoder [ pr -> ptr [ 1 ] ]		1420621	0					
ANR	1420714	Identifier	scan_char_decoder		1420621	0					
ANR	1420715	ArrayIndexing	pr -> ptr [ 1 ]		1420621	1					
ANR	1420716	PtrMemberAccess	pr -> ptr		1420621	0					
ANR	1420717	Identifier	pr		1420621	0					
ANR	1420718	Identifier	ptr		1420621	1					
ANR	1420719	PrimaryExpression	1		1420621	1					
ANR	1420720	Identifier	ctype_space		1420621	1					
ANR	1420721	CompoundStatement		16:66:568:568	1420621	1					
ANR	1420722	IfStatement	if ( pr -> ptr [ 1 ] == '>' )		1420621	0					
ANR	1420723	Condition	pr -> ptr [ 1 ] == '>'	110:24:3089:3105	1420621	0	True				
ANR	1420724	EqualityExpression	pr -> ptr [ 1 ] == '>'		1420621	0		==			
ANR	1420725	ArrayIndexing	pr -> ptr [ 1 ]		1420621	0					
ANR	1420726	PtrMemberAccess	pr -> ptr		1420621	0					
ANR	1420727	Identifier	pr		1420621	0					
ANR	1420728	Identifier	ptr		1420621	1					
ANR	1420729	PrimaryExpression	1		1420621	1					
ANR	1420730	PrimaryExpression	'>'		1420621	1					
ANR	1420731	CompoundStatement		17:43:613:613	1420621	1					
ANR	1420732	ExpressionStatement	pr -> ptr ++	111:24:3134:3143	1420621	0	True				
ANR	1420733	PostIncDecOperationExpression	pr -> ptr ++		1420621	0					
ANR	1420734	PtrMemberAccess	pr -> ptr		1420621	0					
ANR	1420735	Identifier	pr		1420621	0					
ANR	1420736	Identifier	ptr		1420621	1					
ANR	1420737	IncDec	++		1420621	1					
ANR	1420738	GotoStatement	goto eod ;	112:24:3169:3177	1420621	1	True				
ANR	1420739	Identifier	eod		1420621	0					
ANR	1420740	ReturnStatement	return 1 ;	114:20:3221:3229	1420621	1	True				
ANR	1420741	PrimaryExpression	1		1420621	0					
ANR	1420742	ReturnStatement	return 0 ;	116:12:3261:3269	1420621	4	True				
ANR	1420743	PrimaryExpression	0		1420621	0					
ANR	1420744	Label	default :	117:8:3311:3318	1420621	5	True				
ANR	1420745	Identifier	default		1420621	0					
ANR	1420746	ReturnStatement	return code ;	118:12:3332:3343	1420621	6	True				
ANR	1420747	Identifier	code		1420621	0					
ANR	1420748	Label	case ERRC :	119:8:3353:3362	1420621	7	True				
ANR	1420749	Identifier	ERRC		1420621	0					
ANR	1420750	ExpressionStatement		120:12:3376:3376	1420621	8	True				
ANR	1420751	IfStatement	if ( * pr -> ptr != '>' )		1420621	6					
ANR	1420752	Condition	* pr -> ptr != '>'	128:8:3667:3681	1420621	0	True				
ANR	1420753	EqualityExpression	* pr -> ptr != '>'		1420621	0		!=			
ANR	1420754	UnaryOperationExpression	* pr -> ptr		1420621	0					
ANR	1420755	UnaryOperator	*		1420621	0					
ANR	1420756	PtrMemberAccess	pr -> ptr		1420621	1					
ANR	1420757	Identifier	pr		1420621	0					
ANR	1420758	Identifier	ptr		1420621	1					
ANR	1420759	PrimaryExpression	'>'		1420621	1					
ANR	1420760	CompoundStatement		35:25:1189:1189	1420621	1					
ANR	1420761	ExpressionStatement	-- ( pr -> ptr )	129:8:3704:3715	1420621	0	True				
ANR	1420762	UnaryExpression	-- ( pr -> ptr )		1420621	0					
ANR	1420763	IncDec	--		1420621	0					
ANR	1420764	PtrMemberAccess	pr -> ptr		1420621	1					
ANR	1420765	Identifier	pr		1420621	0					
ANR	1420766	Identifier	ptr		1420621	1					
ANR	1420767	ReturnStatement	return ERRC ;	130:8:3725:3736	1420621	1	True				
ANR	1420768	Identifier	ERRC		1420621	0					
ANR	1420769	Label	eod :	132:2:3746:3749	1420621	7	True				
ANR	1420770	Identifier	eod		1420621	0					
ANR	1420771	IfStatement	if ( ss -> odd >= 0 )		1420621	8					
ANR	1420772	Condition	ss -> odd >= 0	132:10:3754:3765	1420621	0	True				
ANR	1420773	RelationalExpression	ss -> odd >= 0		1420621	0		>=			
ANR	1420774	PtrMemberAccess	ss -> odd		1420621	0					
ANR	1420775	Identifier	ss		1420621	0					
ANR	1420776	Identifier	odd		1420621	1					
ANR	1420777	PrimaryExpression	0		1420621	1					
ANR	1420778	CompoundStatement		39:24:1273:1273	1420621	1					
ANR	1420779	IfStatement	if ( pw -> ptr == pw -> limit )		1420621	0					
ANR	1420780	Condition	pw -> ptr == pw -> limit	133:12:3782:3801	1420621	0	True				
ANR	1420781	EqualityExpression	pw -> ptr == pw -> limit		1420621	0		==			
ANR	1420782	PtrMemberAccess	pw -> ptr		1420621	0					
ANR	1420783	Identifier	pw		1420621	0					
ANR	1420784	Identifier	ptr		1420621	1					
ANR	1420785	PtrMemberAccess	pw -> limit		1420621	1					
ANR	1420786	Identifier	pw		1420621	0					
ANR	1420787	Identifier	limit		1420621	1					
ANR	1420788	ReturnStatement	return 1 ;	134:12:3816:3824	1420621	1	True				
ANR	1420789	PrimaryExpression	1		1420621	0					
ANR	1420790	ExpressionStatement	* ++ ( pw -> ptr ) = ss -> odd << 4	135:8:3834:3861	1420621	1	True				
ANR	1420791	AssignmentExpression	* ++ ( pw -> ptr ) = ss -> odd << 4		1420621	0		=			
ANR	1420792	UnaryOperationExpression	* ++ ( pw -> ptr )		1420621	0					
ANR	1420793	UnaryOperator	*		1420621	0					
ANR	1420794	UnaryExpression	++ ( pw -> ptr )		1420621	1					
ANR	1420795	IncDec	++		1420621	0					
ANR	1420796	PtrMemberAccess	pw -> ptr		1420621	1					
ANR	1420797	Identifier	pw		1420621	0					
ANR	1420798	Identifier	ptr		1420621	1					
ANR	1420799	ShiftExpression	ss -> odd << 4		1420621	1		<<			
ANR	1420800	PtrMemberAccess	ss -> odd		1420621	0					
ANR	1420801	Identifier	ss		1420621	0					
ANR	1420802	Identifier	odd		1420621	1					
ANR	1420803	PrimaryExpression	4		1420621	1					
ANR	1420804	ReturnStatement	return EOFC ;	137:4:3873:3884	1420621	9	True				
ANR	1420805	Identifier	EOFC		1420621	0					
ANR	1420806	ReturnType	static int		1420621	1					
ANR	1420807	Identifier	s_AXD_process		1420621	2					
ANR	1420808	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1420621	3					
ANR	1420809	Parameter	stream_state * st	92:14:2399:2415	1420621	0	True				
ANR	1420810	ParameterType	stream_state *		1420621	0					
ANR	1420811	Identifier	st		1420621	1					
ANR	1420812	Parameter	stream_cursor_read * pr	92:33:2418:2440	1420621	1	True				
ANR	1420813	ParameterType	stream_cursor_read *		1420621	0					
ANR	1420814	Identifier	pr		1420621	1					
ANR	1420815	Parameter	stream_cursor_write * pw	93:14:2457:2480	1420621	2	True				
ANR	1420816	ParameterType	stream_cursor_write *		1420621	0					
ANR	1420817	Identifier	pw		1420621	1					
ANR	1420818	Parameter	bool last	93:40:2483:2491	1420621	3	True				
ANR	1420819	ParameterType	bool		1420621	0					
ANR	1420820	Identifier	last		1420621	1					
ANR	1420821	CFGEntryNode	ENTRY		1420621		True				
ANR	1420822	CFGExitNode	EXIT		1420621		True				
ANR	1420823	Symbol	* ++ ( pw -> ptr )		1420621						
ANR	1420824	Symbol	pr		1420621						
ANR	1420825	Symbol	code		1420621						
ANR	1420826	Symbol	* ss		1420621						
ANR	1420827	Symbol	pw		1420621						
ANR	1420828	Symbol	EOFC		1420621						
ANR	1420829	Symbol	pr -> limit		1420621						
ANR	1420830	Symbol	pw -> limit		1420621						
ANR	1420831	Symbol	* pr -> ptr		1420621						
ANR	1420832	Symbol	& ss -> odd		1420621						
ANR	1420833	Symbol	* * pr -> ptr		1420621						
ANR	1420834	Symbol	* pw -> ptr		1420621						
ANR	1420835	Symbol	pr -> ptr		1420621						
ANR	1420836	Symbol	* * * pr		1420621						
ANR	1420837	Symbol	pw -> ptr		1420621						
ANR	1420838	Symbol	ss		1420621						
ANR	1420839	Symbol	st		1420621						
ANR	1420840	Symbol	last		1420621						
ANR	1420841	Symbol	s_hex_process		1420621						
ANR	1420842	Symbol	* pr		1420621						
ANR	1420843	Symbol	ctype_space		1420621						
ANR	1420844	Symbol	* * pr		1420621						
ANR	1420845	Symbol	* pw		1420621						
ANR	1420846	Symbol	ss -> odd		1420621						
ANR	1420847	Symbol	* * pw		1420621						
ANR	1420848	Symbol	scan_char_decoder		1420621						
ANR	1420849	Symbol	* scan_char_decoder		1420621						
ANR	1420850	Symbol	hex_ignore_whitespace		1420621						
ANR	1420851	Symbol	ERRC		1420621						
ANR	1420852	DeclStmt									
ANR	1420853	Decl							const stream_template	const stream_template	s_AXD_template
ANR	1420854	Function	s_PSSE_process	148:0:4061:5700							
ANR	1420855	FunctionDef	"s_PSSE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1420854	0					
ANR	1420856	CompoundStatement		151:0:4183:5700	1420854	0					
ANR	1420857	IdentifierDeclStatement	const byte * p = pr -> ptr ;	152:4:4189:4212	1420854	0	True				
ANR	1420858	IdentifierDecl	* p = pr -> ptr		1420854	0					
ANR	1420859	IdentifierDeclType	const byte *		1420854	0					
ANR	1420860	Identifier	p		1420854	1					
ANR	1420861	AssignmentExpression	* p = pr -> ptr		1420854	2		=			
ANR	1420862	Identifier	p		1420854	0					
ANR	1420863	PtrMemberAccess	pr -> ptr		1420854	1					
ANR	1420864	Identifier	pr		1420854	0					
ANR	1420865	Identifier	ptr		1420854	1					
ANR	1420866	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	153:4:4218:4248	1420854	1	True				
ANR	1420867	IdentifierDecl	* rlimit = pr -> limit		1420854	0					
ANR	1420868	IdentifierDeclType	const byte *		1420854	0					
ANR	1420869	Identifier	rlimit		1420854	1					
ANR	1420870	AssignmentExpression	* rlimit = pr -> limit		1420854	2		=			
ANR	1420871	Identifier	rlimit		1420854	0					
ANR	1420872	PtrMemberAccess	pr -> limit		1420854	1					
ANR	1420873	Identifier	pr		1420854	0					
ANR	1420874	Identifier	limit		1420854	1					
ANR	1420875	IdentifierDeclStatement	byte * q = pw -> ptr ;	154:4:4254:4271	1420854	2	True				
ANR	1420876	IdentifierDecl	* q = pw -> ptr		1420854	0					
ANR	1420877	IdentifierDeclType	byte *		1420854	0					
ANR	1420878	Identifier	q		1420854	1					
ANR	1420879	AssignmentExpression	* q = pw -> ptr		1420854	2		=			
ANR	1420880	Identifier	q		1420854	0					
ANR	1420881	PtrMemberAccess	pw -> ptr		1420854	1					
ANR	1420882	Identifier	pw		1420854	0					
ANR	1420883	Identifier	ptr		1420854	1					
ANR	1420884	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	155:4:4277:4301	1420854	3	True				
ANR	1420885	IdentifierDecl	* wlimit = pw -> limit		1420854	0					
ANR	1420886	IdentifierDeclType	byte *		1420854	0					
ANR	1420887	Identifier	wlimit		1420854	1					
ANR	1420888	AssignmentExpression	* wlimit = pw -> limit		1420854	2		=			
ANR	1420889	Identifier	wlimit		1420854	0					
ANR	1420890	PtrMemberAccess	pw -> limit		1420854	1					
ANR	1420891	Identifier	pw		1420854	0					
ANR	1420892	Identifier	limit		1420854	1					
ANR	1420893	IdentifierDeclStatement	int status = 0 ;	156:4:4307:4321	1420854	4	True				
ANR	1420894	IdentifierDecl	status = 0		1420854	0					
ANR	1420895	IdentifierDeclType	int		1420854	0					
ANR	1420896	Identifier	status		1420854	1					
ANR	1420897	AssignmentExpression	status = 0		1420854	2		=			
ANR	1420898	Identifier	status		1420854	0					
ANR	1420899	PrimaryExpression	0		1420854	1					
ANR	1420900	WhileStatement	while ( p < rlimit )		1420854	5					
ANR	1420901	Condition	p < rlimit	159:11:4385:4394	1420854	0	True				
ANR	1420902	RelationalExpression	p < rlimit		1420854	0		<			
ANR	1420903	Identifier	p		1420854	0					
ANR	1420904	Identifier	rlimit		1420854	1					
ANR	1420905	CompoundStatement		10:8:223:235	1420854	1					
ANR	1420906	IdentifierDeclStatement	int c = * ++ p ;	160:8:4407:4419	1420854	0	True				
ANR	1420907	IdentifierDecl	c = * ++ p		1420854	0					
ANR	1420908	IdentifierDeclType	int		1420854	0					
ANR	1420909	Identifier	c		1420854	1					
ANR	1420910	AssignmentExpression	c = * ++ p		1420854	2		=			
ANR	1420911	Identifier	c		1420854	0					
ANR	1420912	UnaryOperationExpression	* ++ p		1420854	1					
ANR	1420913	UnaryOperator	*		1420854	0					
ANR	1420914	UnaryExpression	++ p		1420854	1					
ANR	1420915	IncDec	++		1420854	0					
ANR	1420916	Identifier	p		1420854	1					
ANR	1420917	IfStatement	if ( c < 32 || c >= 127 )		1420854	1					
ANR	1420918	Condition	c < 32 || c >= 127	162:12:4434:4451	1420854	0	True				
ANR	1420919	OrExpression	c < 32 || c >= 127		1420854	0		||			
ANR	1420920	RelationalExpression	c < 32		1420854	0		<			
ANR	1420921	Identifier	c		1420854	0					
ANR	1420922	PrimaryExpression	32		1420854	1					
ANR	1420923	RelationalExpression	c >= 127		1420854	1		>=			
ANR	1420924	Identifier	c		1420854	0					
ANR	1420925	PrimaryExpression	127		1420854	1					
ANR	1420926	CompoundStatement		13:12:284:300	1420854	1					
ANR	1420927	IdentifierDeclStatement	const char * pesc ;	163:12:4468:4484	1420854	0	True				
ANR	1420928	IdentifierDecl	* pesc		1420854	0					
ANR	1420929	IdentifierDeclType	const char *		1420854	0					
ANR	1420930	Identifier	pesc		1420854	1					
ANR	1420931	Statement	const	164:12:4498:4502	1420854	1	True				
ANR	1420932	Statement	char	164:18:4504:4507	1420854	2	True				
ANR	1420933	Statement	*	164:23:4509:4509	1420854	3	True				
ANR	1420934	Statement	const	164:24:4510:4514	1420854	4	True				
ANR	1420935	ExpressionStatement	"esc = ""\\n\\r\\t\\b\\f"""	164:30:4516:4534	1420854	5	True				
ANR	1420936	AssignmentExpression	"esc = ""\\n\\r\\t\\b\\f"""		1420854	0		=			
ANR	1420937	Identifier	esc		1420854	0					
ANR	1420938	PrimaryExpression	"""\\n\\r\\t\\b\\f"""		1420854	1					
ANR	1420939	IfStatement	"if ( c < 32 && c != 0 && ( pesc = strchr ( esc , c ) ) != 0 )"		1420854	6					
ANR	1420940	Condition	"c < 32 && c != 0 && ( pesc = strchr ( esc , c ) ) != 0"	166:16:4553:4600	1420854	0	True				
ANR	1420941	AndExpression	"c < 32 && c != 0 && ( pesc = strchr ( esc , c ) ) != 0"		1420854	0		&&			
ANR	1420942	RelationalExpression	c < 32		1420854	0		<			
ANR	1420943	Identifier	c		1420854	0					
ANR	1420944	PrimaryExpression	32		1420854	1					
ANR	1420945	AndExpression	"c != 0 && ( pesc = strchr ( esc , c ) ) != 0"		1420854	1		&&			
ANR	1420946	EqualityExpression	c != 0		1420854	0		!=			
ANR	1420947	Identifier	c		1420854	0					
ANR	1420948	PrimaryExpression	0		1420854	1					
ANR	1420949	EqualityExpression	"( pesc = strchr ( esc , c ) ) != 0"		1420854	1		!=			
ANR	1420950	AssignmentExpression	"pesc = strchr ( esc , c )"		1420854	0		=			
ANR	1420951	Identifier	pesc		1420854	0					
ANR	1420952	CallExpression	"strchr ( esc , c )"		1420854	1					
ANR	1420953	Callee	strchr		1420854	0					
ANR	1420954	Identifier	strchr		1420854	0					
ANR	1420955	ArgumentList	esc		1420854	1					
ANR	1420956	Argument	esc		1420854	0					
ANR	1420957	Identifier	esc		1420854	0					
ANR	1420958	Argument	c		1420854	1					
ANR	1420959	Identifier	c		1420854	0					
ANR	1420960	PrimaryExpression	0		1420854	1					
ANR	1420961	CompoundStatement		16:66:419:419	1420854	1					
ANR	1420962	IfStatement	if ( wlimit - q < 2 )		1420854	0					
ANR	1420963	Condition	wlimit - q < 2	167:20:4625:4638	1420854	0	True				
ANR	1420964	RelationalExpression	wlimit - q < 2		1420854	0		<			
ANR	1420965	AdditiveExpression	wlimit - q		1420854	0		-			
ANR	1420966	Identifier	wlimit		1420854	0					
ANR	1420967	Identifier	q		1420854	1					
ANR	1420968	PrimaryExpression	2		1420854	1					
ANR	1420969	CompoundStatement		17:36:457:457	1420854	1					
ANR	1420970	ExpressionStatement	-- p	168:20:4663:4666	1420854	0	True				
ANR	1420971	UnaryExpression	-- p		1420854	0					
ANR	1420972	IncDec	--		1420854	0					
ANR	1420973	Identifier	p		1420854	1					
ANR	1420974	ExpressionStatement	status = 1	169:20:4688:4698	1420854	1	True				
ANR	1420975	AssignmentExpression	status = 1		1420854	0		=			
ANR	1420976	Identifier	status		1420854	0					
ANR	1420977	PrimaryExpression	1		1420854	1					
ANR	1420978	BreakStatement	break ;	170:20:4720:4725	1420854	2	True				
ANR	1420979	ExpressionStatement	* ++ q = '\\\\'	172:16:4761:4772	1420854	1	True				
ANR	1420980	AssignmentExpression	* ++ q = '\\\\'		1420854	0		=			
ANR	1420981	UnaryOperationExpression	* ++ q		1420854	0					
ANR	1420982	UnaryOperator	*		1420854	0					
ANR	1420983	UnaryExpression	++ q		1420854	1					
ANR	1420984	IncDec	++		1420854	0					
ANR	1420985	Identifier	q		1420854	1					
ANR	1420986	PrimaryExpression	'\\\\'		1420854	1					
ANR	1420987	ExpressionStatement	"* ++ q = ""nrtbf"" [ pesc - esc ]"	173:16:4790:4816	1420854	2	True				
ANR	1420988	AssignmentExpression	"* ++ q = ""nrtbf"" [ pesc - esc ]"		1420854	0		=			
ANR	1420989	UnaryOperationExpression	* ++ q		1420854	0					
ANR	1420990	UnaryOperator	*		1420854	0					
ANR	1420991	UnaryExpression	++ q		1420854	1					
ANR	1420992	IncDec	++		1420854	0					
ANR	1420993	Identifier	q		1420854	1					
ANR	1420994	ArrayIndexing	"""nrtbf"" [ pesc - esc ]"		1420854	1					
ANR	1420995	PrimaryExpression	"""nrtbf"""		1420854	0					
ANR	1420996	AdditiveExpression	pesc - esc		1420854	1		-			
ANR	1420997	Identifier	pesc		1420854	0					
ANR	1420998	Identifier	esc		1420854	1					
ANR	1420999	ContinueStatement	continue ;	174:16:4834:4842	1420854	3	True				
ANR	1421000	IfStatement	if ( wlimit - q < 4 )		1420854	7					
ANR	1421001	Condition	wlimit - q < 4	176:16:4874:4887	1420854	0	True				
ANR	1421002	RelationalExpression	wlimit - q < 4		1420854	0		<			
ANR	1421003	AdditiveExpression	wlimit - q		1420854	0		-			
ANR	1421004	Identifier	wlimit		1420854	0					
ANR	1421005	Identifier	q		1420854	1					
ANR	1421006	PrimaryExpression	4		1420854	1					
ANR	1421007	CompoundStatement		26:32:706:706	1420854	1					
ANR	1421008	ExpressionStatement	-- p	177:16:4908:4911	1420854	0	True				
ANR	1421009	UnaryExpression	-- p		1420854	0					
ANR	1421010	IncDec	--		1420854	0					
ANR	1421011	Identifier	p		1420854	1					
ANR	1421012	ExpressionStatement	status = 1	178:16:4929:4939	1420854	1	True				
ANR	1421013	AssignmentExpression	status = 1		1420854	0		=			
ANR	1421014	Identifier	status		1420854	0					
ANR	1421015	PrimaryExpression	1		1420854	1					
ANR	1421016	BreakStatement	break ;	179:16:4957:4962	1420854	2	True				
ANR	1421017	ExpressionStatement	q [ 1 ] = '\\\\'	181:12:4990:5001	1420854	8	True				
ANR	1421018	AssignmentExpression	q [ 1 ] = '\\\\'		1420854	0		=			
ANR	1421019	ArrayIndexing	q [ 1 ]		1420854	0					
ANR	1421020	Identifier	q		1420854	0					
ANR	1421021	PrimaryExpression	1		1420854	1					
ANR	1421022	PrimaryExpression	'\\\\'		1420854	1					
ANR	1421023	ExpressionStatement	q [ 2 ] = ( c >> 6 ) + '0'	182:12:5015:5036	1420854	9	True				
ANR	1421024	AssignmentExpression	q [ 2 ] = ( c >> 6 ) + '0'		1420854	0		=			
ANR	1421025	ArrayIndexing	q [ 2 ]		1420854	0					
ANR	1421026	Identifier	q		1420854	0					
ANR	1421027	PrimaryExpression	2		1420854	1					
ANR	1421028	AdditiveExpression	( c >> 6 ) + '0'		1420854	1		+			
ANR	1421029	ShiftExpression	c >> 6		1420854	0		>>			
ANR	1421030	Identifier	c		1420854	0					
ANR	1421031	PrimaryExpression	6		1420854	1					
ANR	1421032	PrimaryExpression	'0'		1420854	1					
ANR	1421033	ExpressionStatement	q [ 3 ] = ( ( c >> 3 ) & 7 ) + '0'	183:12:5050:5077	1420854	10	True				
ANR	1421034	AssignmentExpression	q [ 3 ] = ( ( c >> 3 ) & 7 ) + '0'		1420854	0		=			
ANR	1421035	ArrayIndexing	q [ 3 ]		1420854	0					
ANR	1421036	Identifier	q		1420854	0					
ANR	1421037	PrimaryExpression	3		1420854	1					
ANR	1421038	AdditiveExpression	( ( c >> 3 ) & 7 ) + '0'		1420854	1		+			
ANR	1421039	BitAndExpression	( c >> 3 ) & 7		1420854	0		&			
ANR	1421040	ShiftExpression	c >> 3		1420854	0		>>			
ANR	1421041	Identifier	c		1420854	0					
ANR	1421042	PrimaryExpression	3		1420854	1					
ANR	1421043	PrimaryExpression	7		1420854	1					
ANR	1421044	PrimaryExpression	'0'		1420854	1					
ANR	1421045	ExpressionStatement	q [ 4 ] = ( c & 7 ) + '0'	184:12:5091:5111	1420854	11	True				
ANR	1421046	AssignmentExpression	q [ 4 ] = ( c & 7 ) + '0'		1420854	0		=			
ANR	1421047	ArrayIndexing	q [ 4 ]		1420854	0					
ANR	1421048	Identifier	q		1420854	0					
ANR	1421049	PrimaryExpression	4		1420854	1					
ANR	1421050	AdditiveExpression	( c & 7 ) + '0'		1420854	1		+			
ANR	1421051	BitAndExpression	c & 7		1420854	0		&			
ANR	1421052	Identifier	c		1420854	0					
ANR	1421053	PrimaryExpression	7		1420854	1					
ANR	1421054	PrimaryExpression	'0'		1420854	1					
ANR	1421055	ExpressionStatement	q += 4	185:12:5125:5131	1420854	12	True				
ANR	1421056	AssignmentExpression	q += 4		1420854	0		+=			
ANR	1421057	Identifier	q		1420854	0					
ANR	1421058	PrimaryExpression	4		1420854	1					
ANR	1421059	ContinueStatement	continue ;	186:12:5145:5153	1420854	13	True				
ANR	1421060	ElseStatement	else		1420854	0					
ANR	1421061	IfStatement	if ( c == '(' || c == ')' || c == '\\\\' )		1420854	0					
ANR	1421062	Condition	c == '(' || c == ')' || c == '\\\\'	187:19:5174:5206	1420854	0	True				
ANR	1421063	OrExpression	c == '(' || c == ')' || c == '\\\\'		1420854	0		||			
ANR	1421064	EqualityExpression	c == '('		1420854	0		==			
ANR	1421065	Identifier	c		1420854	0					
ANR	1421066	PrimaryExpression	'('		1420854	1					
ANR	1421067	OrExpression	c == ')' || c == '\\\\'		1420854	1		||			
ANR	1421068	EqualityExpression	c == ')'		1420854	0		==			
ANR	1421069	Identifier	c		1420854	0					
ANR	1421070	PrimaryExpression	')'		1420854	1					
ANR	1421071	EqualityExpression	c == '\\\\'		1420854	1		==			
ANR	1421072	Identifier	c		1420854	0					
ANR	1421073	PrimaryExpression	'\\\\'		1420854	1					
ANR	1421074	CompoundStatement		37:54:1025:1025	1420854	1					
ANR	1421075	IfStatement	if ( wlimit - q < 2 )		1420854	0					
ANR	1421076	Condition	wlimit - q < 2	188:16:5227:5240	1420854	0	True				
ANR	1421077	RelationalExpression	wlimit - q < 2		1420854	0		<			
ANR	1421078	AdditiveExpression	wlimit - q		1420854	0		-			
ANR	1421079	Identifier	wlimit		1420854	0					
ANR	1421080	Identifier	q		1420854	1					
ANR	1421081	PrimaryExpression	2		1420854	1					
ANR	1421082	CompoundStatement		38:32:1059:1059	1420854	1					
ANR	1421083	ExpressionStatement	-- p	189:16:5261:5264	1420854	0	True				
ANR	1421084	UnaryExpression	-- p		1420854	0					
ANR	1421085	IncDec	--		1420854	0					
ANR	1421086	Identifier	p		1420854	1					
ANR	1421087	ExpressionStatement	status = 1	190:16:5282:5292	1420854	1	True				
ANR	1421088	AssignmentExpression	status = 1		1420854	0		=			
ANR	1421089	Identifier	status		1420854	0					
ANR	1421090	PrimaryExpression	1		1420854	1					
ANR	1421091	BreakStatement	break ;	191:16:5310:5315	1420854	2	True				
ANR	1421092	ExpressionStatement	* ++ q = '\\\\'	193:12:5343:5354	1420854	1	True				
ANR	1421093	AssignmentExpression	* ++ q = '\\\\'		1420854	0		=			
ANR	1421094	UnaryOperationExpression	* ++ q		1420854	0					
ANR	1421095	UnaryOperator	*		1420854	0					
ANR	1421096	UnaryExpression	++ q		1420854	1					
ANR	1421097	IncDec	++		1420854	0					
ANR	1421098	Identifier	q		1420854	1					
ANR	1421099	PrimaryExpression	'\\\\'		1420854	1					
ANR	1421100	ElseStatement	else		1420854	0					
ANR	1421101	CompoundStatement		44:15:1187:1187	1420854	0					
ANR	1421102	IfStatement	if ( q == wlimit )		1420854	0					
ANR	1421103	Condition	q == wlimit	195:16:5389:5399	1420854	0	True				
ANR	1421104	EqualityExpression	q == wlimit		1420854	0		==			
ANR	1421105	Identifier	q		1420854	0					
ANR	1421106	Identifier	wlimit		1420854	1					
ANR	1421107	CompoundStatement		45:29:1218:1218	1420854	1					
ANR	1421108	ExpressionStatement	-- p	196:16:5420:5423	1420854	0	True				
ANR	1421109	UnaryExpression	-- p		1420854	0					
ANR	1421110	IncDec	--		1420854	0					
ANR	1421111	Identifier	p		1420854	1					
ANR	1421112	ExpressionStatement	status = 1	197:16:5441:5451	1420854	1	True				
ANR	1421113	AssignmentExpression	status = 1		1420854	0		=			
ANR	1421114	Identifier	status		1420854	0					
ANR	1421115	PrimaryExpression	1		1420854	1					
ANR	1421116	BreakStatement	break ;	198:16:5469:5474	1420854	2	True				
ANR	1421117	ExpressionStatement	* ++ q = c	201:8:5508:5516	1420854	2	True				
ANR	1421118	AssignmentExpression	* ++ q = c		1420854	0		=			
ANR	1421119	UnaryOperationExpression	* ++ q		1420854	0					
ANR	1421120	UnaryOperator	*		1420854	0					
ANR	1421121	UnaryExpression	++ q		1420854	1					
ANR	1421122	IncDec	++		1420854	0					
ANR	1421123	Identifier	q		1420854	1					
ANR	1421124	Identifier	c		1420854	1					
ANR	1421125	IfStatement	if ( last && status == 0 )		1420854	6					
ANR	1421126	Condition	last && status == 0	203:8:5532:5550	1420854	0	True				
ANR	1421127	AndExpression	last && status == 0		1420854	0		&&			
ANR	1421128	Identifier	last		1420854	0					
ANR	1421129	EqualityExpression	status == 0		1420854	1		==			
ANR	1421130	Identifier	status		1420854	0					
ANR	1421131	PrimaryExpression	0		1420854	1					
ANR	1421132	CompoundStatement		53:29:1369:1369	1420854	1					
ANR	1421133	IfStatement	if ( q == wlimit )		1420854	0					
ANR	1421134	Condition	q == wlimit	204:12:5567:5577	1420854	0	True				
ANR	1421135	EqualityExpression	q == wlimit		1420854	0		==			
ANR	1421136	Identifier	q		1420854	0					
ANR	1421137	Identifier	wlimit		1420854	1					
ANR	1421138	ExpressionStatement	status = 1	205:12:5592:5602	1420854	1	True				
ANR	1421139	AssignmentExpression	status = 1		1420854	0		=			
ANR	1421140	Identifier	status		1420854	0					
ANR	1421141	PrimaryExpression	1		1420854	1					
ANR	1421142	ElseStatement	else		1420854	0					
ANR	1421143	ExpressionStatement	* ++ q = ')'	207:12:5629:5639	1420854	0	True				
ANR	1421144	AssignmentExpression	* ++ q = ')'		1420854	0		=			
ANR	1421145	UnaryOperationExpression	* ++ q		1420854	0					
ANR	1421146	UnaryOperator	*		1420854	0					
ANR	1421147	UnaryExpression	++ q		1420854	1					
ANR	1421148	IncDec	++		1420854	0					
ANR	1421149	Identifier	q		1420854	1					
ANR	1421150	PrimaryExpression	')'		1420854	1					
ANR	1421151	ExpressionStatement	pr -> ptr = p	209:4:5651:5662	1420854	7	True				
ANR	1421152	AssignmentExpression	pr -> ptr = p		1420854	0		=			
ANR	1421153	PtrMemberAccess	pr -> ptr		1420854	0					
ANR	1421154	Identifier	pr		1420854	0					
ANR	1421155	Identifier	ptr		1420854	1					
ANR	1421156	Identifier	p		1420854	1					
ANR	1421157	ExpressionStatement	pw -> ptr = q	210:4:5668:5679	1420854	8	True				
ANR	1421158	AssignmentExpression	pw -> ptr = q		1420854	0		=			
ANR	1421159	PtrMemberAccess	pw -> ptr		1420854	0					
ANR	1421160	Identifier	pw		1420854	0					
ANR	1421161	Identifier	ptr		1420854	1					
ANR	1421162	Identifier	q		1420854	1					
ANR	1421163	ReturnStatement	return status ;	211:4:5685:5698	1420854	9	True				
ANR	1421164	Identifier	status		1420854	0					
ANR	1421165	ReturnType	static int		1420854	1					
ANR	1421166	Identifier	s_PSSE_process		1420854	2					
ANR	1421167	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1420854	3					
ANR	1421168	Parameter	stream_state * st	149:15:4087:4103	1420854	0	True				
ANR	1421169	ParameterType	stream_state *		1420854	0					
ANR	1421170	Identifier	st		1420854	1					
ANR	1421171	Parameter	stream_cursor_read * pr	149:34:4106:4128	1420854	1	True				
ANR	1421172	ParameterType	stream_cursor_read *		1420854	0					
ANR	1421173	Identifier	pr		1420854	1					
ANR	1421174	Parameter	stream_cursor_write * pw	150:15:4146:4169	1420854	2	True				
ANR	1421175	ParameterType	stream_cursor_write *		1420854	0					
ANR	1421176	Identifier	pw		1420854	1					
ANR	1421177	Parameter	bool last	150:41:4172:4180	1420854	3	True				
ANR	1421178	ParameterType	bool		1420854	0					
ANR	1421179	Identifier	last		1420854	1					
ANR	1421180	CFGEntryNode	ENTRY		1420854		True				
ANR	1421181	CFGExitNode	EXIT		1420854		True				
ANR	1421182	Symbol	pr		1420854						
ANR	1421183	Symbol	pw		1420854						
ANR	1421184	Symbol	strchr		1420854						
ANR	1421185	Symbol	pr -> limit		1420854						
ANR	1421186	Symbol	pw -> limit		1420854						
ANR	1421187	Symbol	wlimit		1420854						
ANR	1421188	Symbol	* pesc		1420854						
ANR	1421189	Symbol	pr -> ptr		1420854						
ANR	1421190	Symbol	pw -> ptr		1420854						
ANR	1421191	Symbol	* esc		1420854						
ANR	1421192	Symbol	st		1420854						
ANR	1421193	Symbol	rlimit		1420854						
ANR	1421194	Symbol	c		1420854						
ANR	1421195	Symbol	last		1420854						
ANR	1421196	Symbol	* ++ p		1420854						
ANR	1421197	Symbol	* ++ q		1420854						
ANR	1421198	Symbol	* pr		1420854						
ANR	1421199	Symbol	* pw		1420854						
ANR	1421200	Symbol	p		1420854						
ANR	1421201	Symbol	q		1420854						
ANR	1421202	Symbol	pesc		1420854						
ANR	1421203	Symbol	esc		1420854						
ANR	1421204	Symbol	* p		1420854						
ANR	1421205	Symbol	* q		1420854						
ANR	1421206	Symbol	status		1420854						
ANR	1421207	DeclStmt									
ANR	1421208	Decl							const stream_template	const stream_template	s_PSSE_template
ANR	1421209	Function	s_PSSD_init	224:0:5904:6076							
ANR	1421210	FunctionDef	s_PSSD_init (stream_state * st)		1421209	0					
ANR	1421211	CompoundStatement		226:0:5939:6076	1421209	0					
ANR	1421212	Statement	stream_PSSD_state	227:4:5945:5961	1421209	0	True				
ANR	1421213	Statement	*	227:22:5963:5963	1421209	1	True				
ANR	1421214	Statement	const	227:23:5964:5968	1421209	2	True				
ANR	1421215	ExpressionStatement	ss = ( stream_PSSD_state * ) st	227:29:5970:5999	1421209	3	True				
ANR	1421216	AssignmentExpression	ss = ( stream_PSSD_state * ) st		1421209	0		=			
ANR	1421217	Identifier	ss		1421209	0					
ANR	1421218	CastExpression	( stream_PSSD_state * ) st		1421209	1					
ANR	1421219	CastTarget	stream_PSSD_state *		1421209	0					
ANR	1421220	Identifier	st		1421209	1					
ANR	1421221	ExpressionStatement	ss -> from_string = false	229:4:6006:6029	1421209	4	True				
ANR	1421222	AssignmentExpression	ss -> from_string = false		1421209	0		=			
ANR	1421223	PtrMemberAccess	ss -> from_string		1421209	0					
ANR	1421224	Identifier	ss		1421209	0					
ANR	1421225	Identifier	from_string		1421209	1					
ANR	1421226	Identifier	false		1421209	1					
ANR	1421227	ReturnStatement	return s_PSSD_partially_init_inline ( ss ) ;	230:4:6035:6074	1421209	5	True				
ANR	1421228	CallExpression	s_PSSD_partially_init_inline ( ss )		1421209	0					
ANR	1421229	Callee	s_PSSD_partially_init_inline		1421209	0					
ANR	1421230	Identifier	s_PSSD_partially_init_inline		1421209	0					
ANR	1421231	ArgumentList	ss		1421209	1					
ANR	1421232	Argument	ss		1421209	0					
ANR	1421233	Identifier	ss		1421209	0					
ANR	1421234	ReturnType	int		1421209	1					
ANR	1421235	Identifier	s_PSSD_init		1421209	2					
ANR	1421236	ParameterList	stream_state * st		1421209	3					
ANR	1421237	Parameter	stream_state * st	225:12:5920:5936	1421209	0	True				
ANR	1421238	ParameterType	stream_state *		1421209	0					
ANR	1421239	Identifier	st		1421209	1					
ANR	1421240	CFGEntryNode	ENTRY		1421209		True				
ANR	1421241	CFGExitNode	EXIT		1421209		True				
ANR	1421242	Symbol	ss		1421209						
ANR	1421243	Symbol	st		1421209						
ANR	1421244	Symbol	ss -> from_string		1421209						
ANR	1421245	Symbol	* ss		1421209						
ANR	1421246	Symbol	false		1421209						
ANR	1421247	Symbol	s_PSSD_partially_init_inline		1421209						
ANR	1421248	Function	s_PSSD_process	234:0:6102:9707							
ANR	1421249	FunctionDef	"s_PSSD_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1421248	0					
ANR	1421250	CompoundStatement		237:0:6224:9707	1421248	0					
ANR	1421251	Statement	stream_PSSD_state	238:4:6230:6246	1421248	0	True				
ANR	1421252	Statement	*	238:22:6248:6248	1421248	1	True				
ANR	1421253	Statement	const	238:23:6249:6253	1421248	2	True				
ANR	1421254	ExpressionStatement	ss = ( stream_PSSD_state * ) st	238:29:6255:6284	1421248	3	True				
ANR	1421255	AssignmentExpression	ss = ( stream_PSSD_state * ) st		1421248	0		=			
ANR	1421256	Identifier	ss		1421248	0					
ANR	1421257	CastExpression	( stream_PSSD_state * ) st		1421248	1					
ANR	1421258	CastTarget	stream_PSSD_state *		1421248	0					
ANR	1421259	Identifier	st		1421248	1					
ANR	1421260	IdentifierDeclStatement	const byte * p = pr -> ptr ;	239:4:6290:6313	1421248	4	True				
ANR	1421261	IdentifierDecl	* p = pr -> ptr		1421248	0					
ANR	1421262	IdentifierDeclType	const byte *		1421248	0					
ANR	1421263	Identifier	p		1421248	1					
ANR	1421264	AssignmentExpression	* p = pr -> ptr		1421248	2		=			
ANR	1421265	Identifier	p		1421248	0					
ANR	1421266	PtrMemberAccess	pr -> ptr		1421248	1					
ANR	1421267	Identifier	pr		1421248	0					
ANR	1421268	Identifier	ptr		1421248	1					
ANR	1421269	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	240:4:6319:6349	1421248	5	True				
ANR	1421270	IdentifierDecl	* rlimit = pr -> limit		1421248	0					
ANR	1421271	IdentifierDeclType	const byte *		1421248	0					
ANR	1421272	Identifier	rlimit		1421248	1					
ANR	1421273	AssignmentExpression	* rlimit = pr -> limit		1421248	2		=			
ANR	1421274	Identifier	rlimit		1421248	0					
ANR	1421275	PtrMemberAccess	pr -> limit		1421248	1					
ANR	1421276	Identifier	pr		1421248	0					
ANR	1421277	Identifier	limit		1421248	1					
ANR	1421278	IdentifierDeclStatement	byte * q = pw -> ptr ;	241:4:6355:6372	1421248	6	True				
ANR	1421279	IdentifierDecl	* q = pw -> ptr		1421248	0					
ANR	1421280	IdentifierDeclType	byte *		1421248	0					
ANR	1421281	Identifier	q		1421248	1					
ANR	1421282	AssignmentExpression	* q = pw -> ptr		1421248	2		=			
ANR	1421283	Identifier	q		1421248	0					
ANR	1421284	PtrMemberAccess	pw -> ptr		1421248	1					
ANR	1421285	Identifier	pw		1421248	0					
ANR	1421286	Identifier	ptr		1421248	1					
ANR	1421287	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	242:4:6378:6402	1421248	7	True				
ANR	1421288	IdentifierDecl	* wlimit = pw -> limit		1421248	0					
ANR	1421289	IdentifierDeclType	byte *		1421248	0					
ANR	1421290	Identifier	wlimit		1421248	1					
ANR	1421291	AssignmentExpression	* wlimit = pw -> limit		1421248	2		=			
ANR	1421292	Identifier	wlimit		1421248	0					
ANR	1421293	PtrMemberAccess	pw -> limit		1421248	1					
ANR	1421294	Identifier	pw		1421248	0					
ANR	1421295	Identifier	limit		1421248	1					
ANR	1421296	IdentifierDeclStatement	int status = 0 ;	243:4:6408:6422	1421248	8	True				
ANR	1421297	IdentifierDecl	status = 0		1421248	0					
ANR	1421298	IdentifierDeclType	int		1421248	0					
ANR	1421299	Identifier	status		1421248	1					
ANR	1421300	AssignmentExpression	status = 0		1421248	2		=			
ANR	1421301	Identifier	status		1421248	0					
ANR	1421302	PrimaryExpression	0		1421248	1					
ANR	1421303	IdentifierDeclStatement	int c ;	244:4:6428:6433	1421248	9	True				
ANR	1421304	IdentifierDecl	c		1421248	0					
ANR	1421305	IdentifierDeclType	int		1421248	0					
ANR	1421306	Identifier	c		1421248	1					
ANR	1421307	Statement	define	246:1:6437:6442	1421248	10	True				
ANR	1421308	Statement	check_p	246:8:6444:6450	1421248	11	True				
ANR	1421309	Statement	(	246:15:6451:6451	1421248	12	True				
ANR	1421310	Statement	n	246:16:6452:6452	1421248	13	True				
ANR	1421311	Statement	)	246:17:6453:6453	1421248	14	True				
ANR	1421312	IfStatement	if ( p == rlimit )		1421248	15					
ANR	1421313	Condition	p == rlimit	247:7:6463:6473	1421248	0	True				
ANR	1421314	EqualityExpression	p == rlimit		1421248	0		==			
ANR	1421315	Identifier	p		1421248	0					
ANR	1421316	Identifier	rlimit		1421248	1					
ANR	1421317	CompoundStatement		11:21:252:252	1421248	1					
ANR	1421318	ExpressionStatement	p -= n	247:23:6479:6485	1421248	0	True				
ANR	1421319	AssignmentExpression	p -= n		1421248	0		-=			
ANR	1421320	Identifier	p		1421248	0					
ANR	1421321	Identifier	n		1421248	1					
ANR	1421322	GotoStatement	goto out ;	247:31:6487:6495	1421248	1	True				
ANR	1421323	Identifier	out		1421248	0					
ANR	1421324	Statement	define	248:1:6500:6505	1421248	16	True				
ANR	1421325	Statement	check_q	248:8:6507:6513	1421248	17	True				
ANR	1421326	Statement	(	248:15:6514:6514	1421248	18	True				
ANR	1421327	Statement	n	248:16:6515:6515	1421248	19	True				
ANR	1421328	Statement	)	248:17:6516:6516	1421248	20	True				
ANR	1421329	IfStatement	if ( q == wlimit )		1421248	21					
ANR	1421330	Condition	q == wlimit	249:7:6526:6536	1421248	0	True				
ANR	1421331	EqualityExpression	q == wlimit		1421248	0		==			
ANR	1421332	Identifier	q		1421248	0					
ANR	1421333	Identifier	wlimit		1421248	1					
ANR	1421334	CompoundStatement		13:21:315:315	1421248	1					
ANR	1421335	ExpressionStatement	p -= n	249:23:6542:6548	1421248	0	True				
ANR	1421336	AssignmentExpression	p -= n		1421248	0		-=			
ANR	1421337	Identifier	p		1421248	0					
ANR	1421338	Identifier	n		1421248	1					
ANR	1421339	ExpressionStatement	status = 1	249:31:6550:6560	1421248	1	True				
ANR	1421340	AssignmentExpression	status = 1		1421248	0		=			
ANR	1421341	Identifier	status		1421248	0					
ANR	1421342	PrimaryExpression	1		1421248	1					
ANR	1421343	GotoStatement	goto out ;	249:43:6562:6570	1421248	2	True				
ANR	1421344	Identifier	out		1421248	0					
ANR	1421345	WhileStatement	while ( p < rlimit )		1421248	22					
ANR	1421346	Condition	p < rlimit	250:11:6585:6594	1421248	0	True				
ANR	1421347	RelationalExpression	p < rlimit		1421248	0		<			
ANR	1421348	Identifier	p		1421248	0					
ANR	1421349	Identifier	rlimit		1421248	1					
ANR	1421350	CompoundStatement		14:23:372:372	1421248	1					
ANR	1421351	ExpressionStatement	c = * ++ p	251:8:6607:6615	1421248	0	True				
ANR	1421352	AssignmentExpression	c = * ++ p		1421248	0		=			
ANR	1421353	Identifier	c		1421248	0					
ANR	1421354	UnaryOperationExpression	* ++ p		1421248	1					
ANR	1421355	UnaryOperator	*		1421248	0					
ANR	1421356	UnaryExpression	++ p		1421248	1					
ANR	1421357	IncDec	++		1421248	0					
ANR	1421358	Identifier	p		1421248	1					
ANR	1421359	IfStatement	if ( c == '\\\\' && ! ss -> from_string )		1421248	1					
ANR	1421360	Condition	c == '\\\\' && ! ss -> from_string	252:12:6629:6657	1421248	0	True				
ANR	1421361	AndExpression	c == '\\\\' && ! ss -> from_string		1421248	0		&&			
ANR	1421362	EqualityExpression	c == '\\\\'		1421248	0		==			
ANR	1421363	Identifier	c		1421248	0					
ANR	1421364	PrimaryExpression	'\\\\'		1421248	1					
ANR	1421365	UnaryOperationExpression	! ss -> from_string		1421248	1					
ANR	1421366	UnaryOperator	!		1421248	0					
ANR	1421367	PtrMemberAccess	ss -> from_string		1421248	1					
ANR	1421368	Identifier	ss		1421248	0					
ANR	1421369	Identifier	from_string		1421248	1					
ANR	1421370	CompoundStatement		16:43:435:435	1421248	1					
ANR	1421371	ExpressionStatement	check_p ( 1 )	253:12:6674:6684	1421248	0	True				
ANR	1421372	CallExpression	check_p ( 1 )		1421248	0					
ANR	1421373	Callee	check_p		1421248	0					
ANR	1421374	Identifier	check_p		1421248	0					
ANR	1421375	ArgumentList	1		1421248	1					
ANR	1421376	Argument	1		1421248	0					
ANR	1421377	PrimaryExpression	1		1421248	0					
ANR	1421378	SwitchStatement	switch ( ( c = * ++ p ) )		1421248	1					
ANR	1421379	Condition	c = * ++ p	254:20:6706:6715	1421248	0	True				
ANR	1421380	AssignmentExpression	c = * ++ p		1421248	0		=			
ANR	1421381	Identifier	c		1421248	0					
ANR	1421382	UnaryOperationExpression	* ++ p		1421248	1					
ANR	1421383	UnaryOperator	*		1421248	0					
ANR	1421384	UnaryExpression	++ p		1421248	1					
ANR	1421385	IncDec	++		1421248	0					
ANR	1421386	Identifier	p		1421248	1					
ANR	1421387	CompoundStatement		18:32:493:493	1421248	1					
ANR	1421388	Label	case 'n' :	255:16:6736:6744	1421248	0	True				
ANR	1421389	ExpressionStatement	c = '\\n'	256:20:6766:6774	1421248	1	True				
ANR	1421390	AssignmentExpression	c = '\\n'		1421248	0		=			
ANR	1421391	Identifier	c		1421248	0					
ANR	1421392	PrimaryExpression	'\\n'		1421248	1					
ANR	1421393	GotoStatement	goto put ;	257:20:6796:6804	1421248	2	True				
ANR	1421394	Identifier	put		1421248	0					
ANR	1421395	Label	case 'r' :	258:16:6822:6830	1421248	3	True				
ANR	1421396	ExpressionStatement	c = '\\r'	259:20:6852:6860	1421248	4	True				
ANR	1421397	AssignmentExpression	c = '\\r'		1421248	0		=			
ANR	1421398	Identifier	c		1421248	0					
ANR	1421399	PrimaryExpression	'\\r'		1421248	1					
ANR	1421400	GotoStatement	goto put ;	260:20:6882:6890	1421248	5	True				
ANR	1421401	Identifier	put		1421248	0					
ANR	1421402	Label	case 't' :	261:16:6908:6916	1421248	6	True				
ANR	1421403	ExpressionStatement	c = '\\t'	262:20:6938:6946	1421248	7	True				
ANR	1421404	AssignmentExpression	c = '\\t'		1421248	0		=			
ANR	1421405	Identifier	c		1421248	0					
ANR	1421406	PrimaryExpression	'\\t'		1421248	1					
ANR	1421407	GotoStatement	goto put ;	263:20:6968:6976	1421248	8	True				
ANR	1421408	Identifier	put		1421248	0					
ANR	1421409	Label	case 'b' :	264:16:6994:7002	1421248	9	True				
ANR	1421410	ExpressionStatement	c = '\\b'	265:20:7024:7032	1421248	10	True				
ANR	1421411	AssignmentExpression	c = '\\b'		1421248	0		=			
ANR	1421412	Identifier	c		1421248	0					
ANR	1421413	PrimaryExpression	'\\b'		1421248	1					
ANR	1421414	GotoStatement	goto put ;	266:20:7054:7062	1421248	11	True				
ANR	1421415	Identifier	put		1421248	0					
ANR	1421416	Label	case 'f' :	267:16:7080:7088	1421248	12	True				
ANR	1421417	ExpressionStatement	c = '\\f'	268:20:7110:7118	1421248	13	True				
ANR	1421418	AssignmentExpression	c = '\\f'		1421248	0		=			
ANR	1421419	Identifier	c		1421248	0					
ANR	1421420	PrimaryExpression	'\\f'		1421248	1					
ANR	1421421	GotoStatement	goto put ;	269:20:7140:7148	1421248	14	True				
ANR	1421422	Identifier	put		1421248	0					
ANR	1421423	Label	default :	270:16:7166:7173	1421248	15	True				
ANR	1421424	Identifier	default		1421248	0					
ANR	1421425	Label	put :	271:18:7212:7215	1421248	16	True				
ANR	1421426	Identifier	put		1421248	0					
ANR	1421427	ExpressionStatement	check_q ( 2 )	271:22:7216:7226	1421248	17	True				
ANR	1421428	CallExpression	check_q ( 2 )		1421248	0					
ANR	1421429	Callee	check_q		1421248	0					
ANR	1421430	Identifier	check_q		1421248	0					
ANR	1421431	ArgumentList	2		1421248	1					
ANR	1421432	Argument	2		1421248	0					
ANR	1421433	PrimaryExpression	2		1421248	0					
ANR	1421434	ExpressionStatement	* ++ q = c	272:20:7248:7256	1421248	18	True				
ANR	1421435	AssignmentExpression	* ++ q = c		1421248	0		=			
ANR	1421436	UnaryOperationExpression	* ++ q		1421248	0					
ANR	1421437	UnaryOperator	*		1421248	0					
ANR	1421438	UnaryExpression	++ q		1421248	1					
ANR	1421439	IncDec	++		1421248	0					
ANR	1421440	Identifier	q		1421248	1					
ANR	1421441	Identifier	c		1421248	1					
ANR	1421442	ContinueStatement	continue ;	273:20:7278:7286	1421248	19	True				
ANR	1421443	Label	case char_CR :	274:16:7304:7316	1421248	20	True				
ANR	1421444	Identifier	char_CR		1421248	0					
ANR	1421445	ExpressionStatement	check_p ( 2 )	275:20:7375:7385	1421248	21	True				
ANR	1421446	CallExpression	check_p ( 2 )		1421248	0					
ANR	1421447	Callee	check_p		1421248	0					
ANR	1421448	Identifier	check_p		1421248	0					
ANR	1421449	ArgumentList	2		1421248	1					
ANR	1421450	Argument	2		1421248	0					
ANR	1421451	PrimaryExpression	2		1421248	0					
ANR	1421452	IfStatement	if ( p [ 1 ] == char_EOL )		1421248	22					
ANR	1421453	Condition	p [ 1 ] == char_EOL	276:24:7411:7426	1421248	0	True				
ANR	1421454	EqualityExpression	p [ 1 ] == char_EOL		1421248	0		==			
ANR	1421455	ArrayIndexing	p [ 1 ]		1421248	0					
ANR	1421456	Identifier	p		1421248	0					
ANR	1421457	PrimaryExpression	1		1421248	1					
ANR	1421458	Identifier	char_EOL		1421248	1					
ANR	1421459	ExpressionStatement	p ++	277:24:7453:7456	1421248	1	True				
ANR	1421460	PostIncDecOperationExpression	p ++		1421248	0					
ANR	1421461	Identifier	p		1421248	0					
ANR	1421462	IncDec	++		1421248	1					
ANR	1421463	ContinueStatement	continue ;	278:20:7478:7486	1421248	23	True				
ANR	1421464	Label	case char_EOL :	279:16:7504:7517	1421248	24	True				
ANR	1421465	Identifier	char_EOL		1421248	0					
ANR	1421466	ContinueStatement	continue ;	280:20:7552:7560	1421248	25	True				
ANR	1421467	Label	case '0' :	281:16:7578:7586	1421248	26	True				
ANR	1421468	Label	case '1' :	282:16:7604:7612	1421248	27	True				
ANR	1421469	Label	case '2' :	283:16:7630:7638	1421248	28	True				
ANR	1421470	Label	case '3' :	284:16:7656:7664	1421248	29	True				
ANR	1421471	Label	case '4' :	285:16:7682:7690	1421248	30	True				
ANR	1421472	Label	case '5' :	286:16:7708:7716	1421248	31	True				
ANR	1421473	Label	case '6' :	287:16:7734:7742	1421248	32	True				
ANR	1421474	Label	case '7' :	288:16:7760:7768	1421248	33	True				
ANR	1421475	CompoundStatement		54:24:1591:1596	1421248	34					
ANR	1421476	IdentifierDeclStatement	int d ;	290:24:7816:7821	1421248	0	True				
ANR	1421477	IdentifierDecl	d		1421248	0					
ANR	1421478	IdentifierDeclType	int		1421248	0					
ANR	1421479	Identifier	d		1421248	1					
ANR	1421480	ExpressionStatement	check_p ( 2 )	292:24:7848:7858	1421248	1	True				
ANR	1421481	CallExpression	check_p ( 2 )		1421248	0					
ANR	1421482	Callee	check_p		1421248	0					
ANR	1421483	Identifier	check_p		1421248	0					
ANR	1421484	ArgumentList	2		1421248	1					
ANR	1421485	Argument	2		1421248	0					
ANR	1421486	PrimaryExpression	2		1421248	0					
ANR	1421487	ExpressionStatement	d = p [ 1 ]	293:24:7884:7892	1421248	2	True				
ANR	1421488	AssignmentExpression	d = p [ 1 ]		1421248	0		=			
ANR	1421489	Identifier	d		1421248	0					
ANR	1421490	ArrayIndexing	p [ 1 ]		1421248	1					
ANR	1421491	Identifier	p		1421248	0					
ANR	1421492	PrimaryExpression	1		1421248	1					
ANR	1421493	ExpressionStatement	c -= '0'	294:24:7918:7926	1421248	3	True				
ANR	1421494	AssignmentExpression	c -= '0'		1421248	0		-=			
ANR	1421495	Identifier	c		1421248	0					
ANR	1421496	PrimaryExpression	'0'		1421248	1					
ANR	1421497	IfStatement	if ( d >= '0' && d <= '7' )		1421248	4					
ANR	1421498	Condition	d >= '0' && d <= '7'	295:28:7956:7975	1421248	0	True				
ANR	1421499	AndExpression	d >= '0' && d <= '7'		1421248	0		&&			
ANR	1421500	RelationalExpression	d >= '0'		1421248	0		>=			
ANR	1421501	Identifier	d		1421248	0					
ANR	1421502	PrimaryExpression	'0'		1421248	1					
ANR	1421503	RelationalExpression	d <= '7'		1421248	1		<=			
ANR	1421504	Identifier	d		1421248	0					
ANR	1421505	PrimaryExpression	'7'		1421248	1					
ANR	1421506	CompoundStatement		59:50:1753:1753	1421248	1					
ANR	1421507	IfStatement	if ( p + 1 == rlimit )		1421248	0					
ANR	1421508	Condition	p + 1 == rlimit	296:32:8012:8026	1421248	0	True				
ANR	1421509	EqualityExpression	p + 1 == rlimit		1421248	0		==			
ANR	1421510	AdditiveExpression	p + 1		1421248	0		+			
ANR	1421511	Identifier	p		1421248	0					
ANR	1421512	PrimaryExpression	1		1421248	1					
ANR	1421513	Identifier	rlimit		1421248	1					
ANR	1421514	CompoundStatement		60:49:1804:1804	1421248	1					
ANR	1421515	ExpressionStatement	p -= 2	297:32:8063:8069	1421248	0	True				
ANR	1421516	AssignmentExpression	p -= 2		1421248	0		-=			
ANR	1421517	Identifier	p		1421248	0					
ANR	1421518	PrimaryExpression	2		1421248	1					
ANR	1421519	GotoStatement	goto out ;	298:32:8103:8111	1421248	1	True				
ANR	1421520	Identifier	out		1421248	0					
ANR	1421521	ExpressionStatement	check_q ( 2 )	300:28:8171:8181	1421248	1	True				
ANR	1421522	CallExpression	check_q ( 2 )		1421248	0					
ANR	1421523	Callee	check_q		1421248	0					
ANR	1421524	Identifier	check_q		1421248	0					
ANR	1421525	ArgumentList	2		1421248	1					
ANR	1421526	Argument	2		1421248	0					
ANR	1421527	PrimaryExpression	2		1421248	0					
ANR	1421528	ExpressionStatement	c = ( c << 3 ) + d - '0'	301:28:8211:8233	1421248	2	True				
ANR	1421529	AssignmentExpression	c = ( c << 3 ) + d - '0'		1421248	0		=			
ANR	1421530	Identifier	c		1421248	0					
ANR	1421531	AdditiveExpression	( c << 3 ) + d - '0'		1421248	1		+			
ANR	1421532	ShiftExpression	c << 3		1421248	0		<<			
ANR	1421533	Identifier	c		1421248	0					
ANR	1421534	PrimaryExpression	3		1421248	1					
ANR	1421535	AdditiveExpression	d - '0'		1421248	1		-			
ANR	1421536	Identifier	d		1421248	0					
ANR	1421537	PrimaryExpression	'0'		1421248	1					
ANR	1421538	ExpressionStatement	d = p [ 2 ]	302:28:8263:8271	1421248	3	True				
ANR	1421539	AssignmentExpression	d = p [ 2 ]		1421248	0		=			
ANR	1421540	Identifier	d		1421248	0					
ANR	1421541	ArrayIndexing	p [ 2 ]		1421248	1					
ANR	1421542	Identifier	p		1421248	0					
ANR	1421543	PrimaryExpression	2		1421248	1					
ANR	1421544	IfStatement	if ( d >= '0' && d <= '7' )		1421248	4					
ANR	1421545	Condition	d >= '0' && d <= '7'	303:32:8305:8324	1421248	0	True				
ANR	1421546	AndExpression	d >= '0' && d <= '7'		1421248	0		&&			
ANR	1421547	RelationalExpression	d >= '0'		1421248	0		>=			
ANR	1421548	Identifier	d		1421248	0					
ANR	1421549	PrimaryExpression	'0'		1421248	1					
ANR	1421550	RelationalExpression	d <= '7'		1421248	1		<=			
ANR	1421551	Identifier	d		1421248	0					
ANR	1421552	PrimaryExpression	'7'		1421248	1					
ANR	1421553	CompoundStatement		67:54:2102:2102	1421248	1					
ANR	1421554	ExpressionStatement	c = ( c << 3 ) + d - '0'	304:32:8361:8383	1421248	0	True				
ANR	1421555	AssignmentExpression	c = ( c << 3 ) + d - '0'		1421248	0		=			
ANR	1421556	Identifier	c		1421248	0					
ANR	1421557	AdditiveExpression	( c << 3 ) + d - '0'		1421248	1		+			
ANR	1421558	ShiftExpression	c << 3		1421248	0		<<			
ANR	1421559	Identifier	c		1421248	0					
ANR	1421560	PrimaryExpression	3		1421248	1					
ANR	1421561	AdditiveExpression	d - '0'		1421248	1		-			
ANR	1421562	Identifier	d		1421248	0					
ANR	1421563	PrimaryExpression	'0'		1421248	1					
ANR	1421564	ExpressionStatement	p += 2	305:32:8417:8423	1421248	1	True				
ANR	1421565	AssignmentExpression	p += 2		1421248	0		+=			
ANR	1421566	Identifier	p		1421248	0					
ANR	1421567	PrimaryExpression	2		1421248	1					
ANR	1421568	ElseStatement	else		1421248	0					
ANR	1421569	ExpressionStatement	p ++	307:32:8492:8495	1421248	0	True				
ANR	1421570	PostIncDecOperationExpression	p ++		1421248	0					
ANR	1421571	Identifier	p		1421248	0					
ANR	1421572	IncDec	++		1421248	1					
ANR	1421573	ElseStatement	else		1421248	0					
ANR	1421574	ExpressionStatement	check_q ( 2 )	309:28:8556:8566	1421248	0	True				
ANR	1421575	CallExpression	check_q ( 2 )		1421248	0					
ANR	1421576	Callee	check_q		1421248	0					
ANR	1421577	Identifier	check_q		1421248	0					
ANR	1421578	ArgumentList	2		1421248	1					
ANR	1421579	Argument	2		1421248	0					
ANR	1421580	PrimaryExpression	2		1421248	0					
ANR	1421581	ExpressionStatement	* ++ q = c	310:24:8592:8600	1421248	5	True				
ANR	1421582	AssignmentExpression	* ++ q = c		1421248	0		=			
ANR	1421583	UnaryOperationExpression	* ++ q		1421248	0					
ANR	1421584	UnaryOperator	*		1421248	0					
ANR	1421585	UnaryExpression	++ q		1421248	1					
ANR	1421586	IncDec	++		1421248	0					
ANR	1421587	Identifier	q		1421248	1					
ANR	1421588	Identifier	c		1421248	1					
ANR	1421589	ContinueStatement	continue ;	311:24:8626:8634	1421248	6	True				
ANR	1421590	ElseStatement	else		1421248	0					
ANR	1421591	SwitchStatement	switch ( c )		1421248	0					
ANR	1421592	Condition	c	315:20:8707:8707	1421248	0	True				
ANR	1421593	Identifier	c		1421248	0					
ANR	1421594	CompoundStatement		79:23:2485:2485	1421248	1					
ANR	1421595	Label	case '(' :	316:16:8728:8736	1421248	0	True				
ANR	1421596	ExpressionStatement	check_q ( 1 )	317:20:8758:8768	1421248	1	True				
ANR	1421597	CallExpression	check_q ( 1 )		1421248	0					
ANR	1421598	Callee	check_q		1421248	0					
ANR	1421599	Identifier	check_q		1421248	0					
ANR	1421600	ArgumentList	1		1421248	1					
ANR	1421601	Argument	1		1421248	0					
ANR	1421602	PrimaryExpression	1		1421248	0					
ANR	1421603	ExpressionStatement	ss -> depth ++	318:20:8790:8801	1421248	2	True				
ANR	1421604	PostIncDecOperationExpression	ss -> depth ++		1421248	0					
ANR	1421605	PtrMemberAccess	ss -> depth		1421248	0					
ANR	1421606	Identifier	ss		1421248	0					
ANR	1421607	Identifier	depth		1421248	1					
ANR	1421608	IncDec	++		1421248	1					
ANR	1421609	BreakStatement	break ;	319:20:8823:8828	1421248	3	True				
ANR	1421610	Label	case ')' :	320:16:8846:8854	1421248	4	True				
ANR	1421611	IfStatement	if ( ss -> depth == 0 )		1421248	5					
ANR	1421612	Condition	ss -> depth == 0	321:24:8880:8893	1421248	0	True				
ANR	1421613	EqualityExpression	ss -> depth == 0		1421248	0		==			
ANR	1421614	PtrMemberAccess	ss -> depth		1421248	0					
ANR	1421615	Identifier	ss		1421248	0					
ANR	1421616	Identifier	depth		1421248	1					
ANR	1421617	PrimaryExpression	0		1421248	1					
ANR	1421618	CompoundStatement		85:40:2671:2671	1421248	1					
ANR	1421619	ExpressionStatement	status = EOFC	322:24:8922:8935	1421248	0	True				
ANR	1421620	AssignmentExpression	status = EOFC		1421248	0		=			
ANR	1421621	Identifier	status		1421248	0					
ANR	1421622	Identifier	EOFC		1421248	1					
ANR	1421623	GotoStatement	goto out ;	323:24:8961:8969	1421248	1	True				
ANR	1421624	Identifier	out		1421248	0					
ANR	1421625	ExpressionStatement	check_q ( 1 )	325:20:9013:9023	1421248	6	True				
ANR	1421626	CallExpression	check_q ( 1 )		1421248	0					
ANR	1421627	Callee	check_q		1421248	0					
ANR	1421628	Identifier	check_q		1421248	0					
ANR	1421629	ArgumentList	1		1421248	1					
ANR	1421630	Argument	1		1421248	0					
ANR	1421631	PrimaryExpression	1		1421248	0					
ANR	1421632	ExpressionStatement	ss -> depth --	326:20:9045:9056	1421248	7	True				
ANR	1421633	PostIncDecOperationExpression	ss -> depth --		1421248	0					
ANR	1421634	PtrMemberAccess	ss -> depth		1421248	0					
ANR	1421635	Identifier	ss		1421248	0					
ANR	1421636	Identifier	depth		1421248	1					
ANR	1421637	IncDec	--		1421248	1					
ANR	1421638	BreakStatement	break ;	327:20:9078:9083	1421248	8	True				
ANR	1421639	Label	case char_CR :	328:16:9101:9113	1421248	9	True				
ANR	1421640	Identifier	char_CR		1421248	0					
ANR	1421641	ExpressionStatement	check_p ( 1 )	329:20:9155:9165	1421248	10	True				
ANR	1421642	CallExpression	check_p ( 1 )		1421248	0					
ANR	1421643	Callee	check_p		1421248	0					
ANR	1421644	Identifier	check_p		1421248	0					
ANR	1421645	ArgumentList	1		1421248	1					
ANR	1421646	Argument	1		1421248	0					
ANR	1421647	PrimaryExpression	1		1421248	0					
ANR	1421648	ExpressionStatement	check_q ( 1 )	330:20:9187:9197	1421248	11	True				
ANR	1421649	CallExpression	check_q ( 1 )		1421248	0					
ANR	1421650	Callee	check_q		1421248	0					
ANR	1421651	Identifier	check_q		1421248	0					
ANR	1421652	ArgumentList	1		1421248	1					
ANR	1421653	Argument	1		1421248	0					
ANR	1421654	PrimaryExpression	1		1421248	0					
ANR	1421655	IfStatement	if ( p [ 1 ] == char_EOL )		1421248	12					
ANR	1421656	Condition	p [ 1 ] == char_EOL	331:24:9223:9238	1421248	0	True				
ANR	1421657	EqualityExpression	p [ 1 ] == char_EOL		1421248	0		==			
ANR	1421658	ArrayIndexing	p [ 1 ]		1421248	0					
ANR	1421659	Identifier	p		1421248	0					
ANR	1421660	PrimaryExpression	1		1421248	1					
ANR	1421661	Identifier	char_EOL		1421248	1					
ANR	1421662	ExpressionStatement	p ++	332:24:9265:9268	1421248	1	True				
ANR	1421663	PostIncDecOperationExpression	p ++		1421248	0					
ANR	1421664	Identifier	p		1421248	0					
ANR	1421665	IncDec	++		1421248	1					
ANR	1421666	ExpressionStatement	* ++ q = '\\n'	333:20:9290:9301	1421248	13	True				
ANR	1421667	AssignmentExpression	* ++ q = '\\n'		1421248	0		=			
ANR	1421668	UnaryOperationExpression	* ++ q		1421248	0					
ANR	1421669	UnaryOperator	*		1421248	0					
ANR	1421670	UnaryExpression	++ q		1421248	1					
ANR	1421671	IncDec	++		1421248	0					
ANR	1421672	Identifier	q		1421248	1					
ANR	1421673	PrimaryExpression	'\\n'		1421248	1					
ANR	1421674	ContinueStatement	continue ;	334:20:9323:9331	1421248	14	True				
ANR	1421675	Label	case char_EOL :	335:16:9349:9362	1421248	15	True				
ANR	1421676	Identifier	char_EOL		1421248	0					
ANR	1421677	ExpressionStatement	c = '\\n'	336:20:9384:9392	1421248	16	True				
ANR	1421678	AssignmentExpression	c = '\\n'		1421248	0		=			
ANR	1421679	Identifier	c		1421248	0					
ANR	1421680	PrimaryExpression	'\\n'		1421248	1					
ANR	1421681	Label	default :	338:16:9449:9456	1421248	17	True				
ANR	1421682	Identifier	default		1421248	0					
ANR	1421683	ExpressionStatement	check_q ( 1 )	339:20:9478:9488	1421248	18	True				
ANR	1421684	CallExpression	check_q ( 1 )		1421248	0					
ANR	1421685	Callee	check_q		1421248	0					
ANR	1421686	Identifier	check_q		1421248	0					
ANR	1421687	ArgumentList	1		1421248	1					
ANR	1421688	Argument	1		1421248	0					
ANR	1421689	PrimaryExpression	1		1421248	0					
ANR	1421690	BreakStatement	break ;	340:20:9510:9515	1421248	19	True				
ANR	1421691	ExpressionStatement	* ++ q = c	342:8:9539:9547	1421248	2	True				
ANR	1421692	AssignmentExpression	* ++ q = c		1421248	0		=			
ANR	1421693	UnaryOperationExpression	* ++ q		1421248	0					
ANR	1421694	UnaryOperator	*		1421248	0					
ANR	1421695	UnaryExpression	++ q		1421248	1					
ANR	1421696	IncDec	++		1421248	0					
ANR	1421697	Identifier	q		1421248	1					
ANR	1421698	Identifier	c		1421248	1					
ANR	1421699	Statement	undef	344:1:9556:9560	1421248	23	True				
ANR	1421700	Statement	check_p	344:7:9562:9568	1421248	24	True				
ANR	1421701	Statement	undef	345:1:9571:9575	1421248	25	True				
ANR	1421702	Statement	check_q	345:7:9577:9583	1421248	26	True				
ANR	1421703	Label	out :	346:2:9587:9590	1421248	27	True				
ANR	1421704	Identifier	out		1421248	0					
ANR	1421705	ExpressionStatement	pr -> ptr = p	346:6:9591:9602	1421248	28	True				
ANR	1421706	AssignmentExpression	pr -> ptr = p		1421248	0		=			
ANR	1421707	PtrMemberAccess	pr -> ptr		1421248	0					
ANR	1421708	Identifier	pr		1421248	0					
ANR	1421709	Identifier	ptr		1421248	1					
ANR	1421710	Identifier	p		1421248	1					
ANR	1421711	ExpressionStatement	pw -> ptr = q	347:4:9608:9619	1421248	29	True				
ANR	1421712	AssignmentExpression	pw -> ptr = q		1421248	0		=			
ANR	1421713	PtrMemberAccess	pw -> ptr		1421248	0					
ANR	1421714	Identifier	pw		1421248	0					
ANR	1421715	Identifier	ptr		1421248	1					
ANR	1421716	Identifier	q		1421248	1					
ANR	1421717	IfStatement	if ( last && status == 0 && p != rlimit )		1421248	30					
ANR	1421718	Condition	last && status == 0 && p != rlimit	348:8:9629:9662	1421248	0	True				
ANR	1421719	AndExpression	last && status == 0 && p != rlimit		1421248	0		&&			
ANR	1421720	Identifier	last		1421248	0					
ANR	1421721	AndExpression	status == 0 && p != rlimit		1421248	1		&&			
ANR	1421722	EqualityExpression	status == 0		1421248	0		==			
ANR	1421723	Identifier	status		1421248	0					
ANR	1421724	PrimaryExpression	0		1421248	1					
ANR	1421725	EqualityExpression	p != rlimit		1421248	1		!=			
ANR	1421726	Identifier	p		1421248	0					
ANR	1421727	Identifier	rlimit		1421248	1					
ANR	1421728	ExpressionStatement	status = ERRC	349:8:9673:9686	1421248	1	True				
ANR	1421729	AssignmentExpression	status = ERRC		1421248	0		=			
ANR	1421730	Identifier	status		1421248	0					
ANR	1421731	Identifier	ERRC		1421248	1					
ANR	1421732	ReturnStatement	return status ;	350:4:9692:9705	1421248	31	True				
ANR	1421733	Identifier	status		1421248	0					
ANR	1421734	ReturnType	static int		1421248	1					
ANR	1421735	Identifier	s_PSSD_process		1421248	2					
ANR	1421736	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1421248	3					
ANR	1421737	Parameter	stream_state * st	235:15:6128:6144	1421248	0	True				
ANR	1421738	ParameterType	stream_state *		1421248	0					
ANR	1421739	Identifier	st		1421248	1					
ANR	1421740	Parameter	stream_cursor_read * pr	235:34:6147:6169	1421248	1	True				
ANR	1421741	ParameterType	stream_cursor_read *		1421248	0					
ANR	1421742	Identifier	pr		1421248	1					
ANR	1421743	Parameter	stream_cursor_write * pw	236:15:6187:6210	1421248	2	True				
ANR	1421744	ParameterType	stream_cursor_write *		1421248	0					
ANR	1421745	Identifier	pw		1421248	1					
ANR	1421746	Parameter	bool last	236:41:6213:6221	1421248	3	True				
ANR	1421747	ParameterType	bool		1421248	0					
ANR	1421748	Identifier	last		1421248	1					
ANR	1421749	CFGEntryNode	ENTRY		1421248		True				
ANR	1421750	CFGExitNode	EXIT		1421248		True				
ANR	1421751	Symbol	pr		1421248						
ANR	1421752	Symbol	ss -> from_string		1421248						
ANR	1421753	Symbol	* ss		1421248						
ANR	1421754	Symbol	pw		1421248						
ANR	1421755	Symbol	EOFC		1421248						
ANR	1421756	Symbol	pr -> limit		1421248						
ANR	1421757	Symbol	pw -> limit		1421248						
ANR	1421758	Symbol	wlimit		1421248						
ANR	1421759	Symbol	pr -> ptr		1421248						
ANR	1421760	Symbol	pw -> ptr		1421248						
ANR	1421761	Symbol	ss		1421248						
ANR	1421762	Symbol	st		1421248						
ANR	1421763	Symbol	rlimit		1421248						
ANR	1421764	Symbol	c		1421248						
ANR	1421765	Symbol	last		1421248						
ANR	1421766	Symbol	* ++ p		1421248						
ANR	1421767	Symbol	d		1421248						
ANR	1421768	Symbol	* ++ q		1421248						
ANR	1421769	Symbol	* pr		1421248						
ANR	1421770	Symbol	char_EOL		1421248						
ANR	1421771	Symbol	* pw		1421248						
ANR	1421772	Symbol	n		1421248						
ANR	1421773	Symbol	p		1421248						
ANR	1421774	Symbol	q		1421248						
ANR	1421775	Symbol	* p		1421248						
ANR	1421776	Symbol	* q		1421248						
ANR	1421777	Symbol	ERRC		1421248						
ANR	1421778	Symbol	status		1421248						
ANR	1421779	Symbol	ss -> depth		1421248						
ANR	1421780	DeclStmt									
ANR	1421781	Decl							const stream_template	const stream_template	s_PSSD_template
ANR	1421782	Function	s_hex_process	372:0:10365:12970							
ANR	1421783	FunctionDef	"s_hex_process (stream_cursor_read * pr , stream_cursor_write * pw , int * odd_digit , hex_syntax syntax)"		1421782	0					
ANR	1421784	CompoundStatement		375:0:10483:12970	1421782	0					
ANR	1421785	IdentifierDeclStatement	const byte * p = pr -> ptr ;	376:4:10489:10512	1421782	0	True				
ANR	1421786	IdentifierDecl	* p = pr -> ptr		1421782	0					
ANR	1421787	IdentifierDeclType	const byte *		1421782	0					
ANR	1421788	Identifier	p		1421782	1					
ANR	1421789	AssignmentExpression	* p = pr -> ptr		1421782	2		=			
ANR	1421790	Identifier	p		1421782	0					
ANR	1421791	PtrMemberAccess	pr -> ptr		1421782	1					
ANR	1421792	Identifier	pr		1421782	0					
ANR	1421793	Identifier	ptr		1421782	1					
ANR	1421794	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	377:4:10518:10548	1421782	1	True				
ANR	1421795	IdentifierDecl	* rlimit = pr -> limit		1421782	0					
ANR	1421796	IdentifierDeclType	const byte *		1421782	0					
ANR	1421797	Identifier	rlimit		1421782	1					
ANR	1421798	AssignmentExpression	* rlimit = pr -> limit		1421782	2		=			
ANR	1421799	Identifier	rlimit		1421782	0					
ANR	1421800	PtrMemberAccess	pr -> limit		1421782	1					
ANR	1421801	Identifier	pr		1421782	0					
ANR	1421802	Identifier	limit		1421782	1					
ANR	1421803	IdentifierDeclStatement	byte * q = pw -> ptr ;	378:4:10554:10571	1421782	2	True				
ANR	1421804	IdentifierDecl	* q = pw -> ptr		1421782	0					
ANR	1421805	IdentifierDeclType	byte *		1421782	0					
ANR	1421806	Identifier	q		1421782	1					
ANR	1421807	AssignmentExpression	* q = pw -> ptr		1421782	2		=			
ANR	1421808	Identifier	q		1421782	0					
ANR	1421809	PtrMemberAccess	pw -> ptr		1421782	1					
ANR	1421810	Identifier	pw		1421782	0					
ANR	1421811	Identifier	ptr		1421782	1					
ANR	1421812	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	379:4:10577:10601	1421782	3	True				
ANR	1421813	IdentifierDecl	* wlimit = pw -> limit		1421782	0					
ANR	1421814	IdentifierDeclType	byte *		1421782	0					
ANR	1421815	Identifier	wlimit		1421782	1					
ANR	1421816	AssignmentExpression	* wlimit = pw -> limit		1421782	2		=			
ANR	1421817	Identifier	wlimit		1421782	0					
ANR	1421818	PtrMemberAccess	pw -> limit		1421782	1					
ANR	1421819	Identifier	pw		1421782	0					
ANR	1421820	Identifier	limit		1421782	1					
ANR	1421821	IdentifierDeclStatement	byte * q0 = q ;	380:4:10607:10619	1421782	4	True				
ANR	1421822	IdentifierDecl	* q0 = q		1421782	0					
ANR	1421823	IdentifierDeclType	byte *		1421782	0					
ANR	1421824	Identifier	q0		1421782	1					
ANR	1421825	AssignmentExpression	* q0 = q		1421782	2		=			
ANR	1421826	Identifier	q		1421782	0					
ANR	1421827	Identifier	q		1421782	1					
ANR	1421828	IdentifierDeclStatement	byte val1 = ( byte ) * odd_digit ;	381:4:10625:10655	1421782	5	True				
ANR	1421829	IdentifierDecl	val1 = ( byte ) * odd_digit		1421782	0					
ANR	1421830	IdentifierDeclType	byte		1421782	0					
ANR	1421831	Identifier	val1		1421782	1					
ANR	1421832	AssignmentExpression	val1 = ( byte ) * odd_digit		1421782	2		=			
ANR	1421833	Identifier	val1		1421782	0					
ANR	1421834	CastExpression	( byte ) * odd_digit		1421782	1					
ANR	1421835	CastTarget	byte		1421782	0					
ANR	1421836	UnaryOperationExpression	* odd_digit		1421782	1					
ANR	1421837	UnaryOperator	*		1421782	0					
ANR	1421838	Identifier	odd_digit		1421782	1					
ANR	1421839	IdentifierDeclStatement	byte val2 ;	382:4:10661:10670	1421782	6	True				
ANR	1421840	IdentifierDecl	val2		1421782	0					
ANR	1421841	IdentifierDeclType	byte		1421782	0					
ANR	1421842	Identifier	val2		1421782	1					
ANR	1421843	IdentifierDeclStatement	uint rcount ;	383:4:10676:10687	1421782	7	True				
ANR	1421844	IdentifierDecl	rcount		1421782	0					
ANR	1421845	IdentifierDeclType	uint		1421782	0					
ANR	1421846	Identifier	rcount		1421782	1					
ANR	1421847	IdentifierDeclStatement	byte * flimit ;	384:4:10693:10705	1421782	8	True				
ANR	1421848	IdentifierDecl	* flimit		1421782	0					
ANR	1421849	IdentifierDeclType	byte *		1421782	0					
ANR	1421850	Identifier	flimit		1421782	1					
ANR	1421851	Statement	const	385:4:10711:10715	1421782	9	True				
ANR	1421852	Statement	byte	385:10:10717:10720	1421782	10	True				
ANR	1421853	Statement	*	385:15:10722:10722	1421782	11	True				
ANR	1421854	Statement	const	385:16:10723:10727	1421782	12	True				
ANR	1421855	ExpressionStatement	decoder = scan_char_decoder	385:22:10729:10756	1421782	13	True				
ANR	1421856	AssignmentExpression	decoder = scan_char_decoder		1421782	0		=			
ANR	1421857	Identifier	decoder		1421782	0					
ANR	1421858	Identifier	scan_char_decoder		1421782	1					
ANR	1421859	IdentifierDeclStatement	int code = 0 ;	386:4:10762:10774	1421782	14	True				
ANR	1421860	IdentifierDecl	code = 0		1421782	0					
ANR	1421861	IdentifierDeclType	int		1421782	0					
ANR	1421862	Identifier	code		1421782	1					
ANR	1421863	AssignmentExpression	code = 0		1421782	2		=			
ANR	1421864	Identifier	code		1421782	0					
ANR	1421865	PrimaryExpression	0		1421782	1					
ANR	1421866	IfStatement	if ( q >= wlimit )		1421782	15					
ANR	1421867	Condition	q >= wlimit	388:8:10785:10795	1421782	0	True				
ANR	1421868	RelationalExpression	q >= wlimit		1421782	0		>=			
ANR	1421869	Identifier	q		1421782	0					
ANR	1421870	Identifier	wlimit		1421782	1					
ANR	1421871	ReturnStatement	return 1 ;	389:8:10806:10814	1421782	1	True				
ANR	1421872	PrimaryExpression	1		1421782	0					
ANR	1421873	IfStatement	if ( val1 <= 0xf )		1421782	16					
ANR	1421874	Condition	val1 <= 0xf	390:8:10824:10834	1421782	0	True				
ANR	1421875	RelationalExpression	val1 <= 0xf		1421782	0		<=			
ANR	1421876	Identifier	val1		1421782	0					
ANR	1421877	PrimaryExpression	0xf		1421782	1					
ANR	1421878	GotoStatement	goto d2 ;	391:8:10845:10852	1421782	1	True				
ANR	1421879	Identifier	d2		1421782	0					
ANR	1421880	Label	d1 :	392:2:10856:10858	1421782	17	True				
ANR	1421881	Identifier	d1		1421782	0					
ANR	1421882	IfStatement	if ( ( rcount = ( rlimit - p ) >> 1 ) == 0 )		1421782	18					
ANR	1421883	Condition	( rcount = ( rlimit - p ) >> 1 ) == 0	392:9:10863:10895	1421782	0	True				
ANR	1421884	EqualityExpression	( rcount = ( rlimit - p ) >> 1 ) == 0		1421782	0		==			
ANR	1421885	AssignmentExpression	rcount = ( rlimit - p ) >> 1		1421782	0		=			
ANR	1421886	Identifier	rcount		1421782	0					
ANR	1421887	ShiftExpression	( rlimit - p ) >> 1		1421782	1		>>			
ANR	1421888	AdditiveExpression	rlimit - p		1421782	0		-			
ANR	1421889	Identifier	rlimit		1421782	0					
ANR	1421890	Identifier	p		1421782	1					
ANR	1421891	PrimaryExpression	1		1421782	1					
ANR	1421892	PrimaryExpression	0		1421782	1					
ANR	1421893	GotoStatement	goto x1 ;	393:8:10906:10913	1421782	1	True				
ANR	1421894	Identifier	x1		1421782	0					
ANR	1421895	ExpressionStatement	flimit = ( rcount < wlimit - q ? q + rcount : wlimit )	396:4:11043:11095	1421782	19	True				
ANR	1421896	AssignmentExpression	flimit = ( rcount < wlimit - q ? q + rcount : wlimit )		1421782	0		=			
ANR	1421897	Identifier	flimit		1421782	0					
ANR	1421898	ConditionalExpression	rcount < wlimit - q ? q + rcount : wlimit		1421782	1					
ANR	1421899	Condition	rcount < wlimit - q		1421782	0					
ANR	1421900	RelationalExpression	rcount < wlimit - q		1421782	0		<			
ANR	1421901	Identifier	rcount		1421782	0					
ANR	1421902	AdditiveExpression	wlimit - q		1421782	1		-			
ANR	1421903	Identifier	wlimit		1421782	0					
ANR	1421904	Identifier	q		1421782	1					
ANR	1421905	AdditiveExpression	q + rcount		1421782	1		+			
ANR	1421906	Identifier	q		1421782	0					
ANR	1421907	Identifier	rcount		1421782	1					
ANR	1421908	Identifier	wlimit		1421782	2					
ANR	1421909	Label	f1 :	397:2:11099:11101	1421782	20	True				
ANR	1421910	Identifier	f1		1421782	0					
ANR	1421911	IfStatement	if ( ( val1 = decoder [ p [ 1 ] ] ) <= 0xf && ( val2 = decoder [ p [ 2 ] ] ) <= 0xf )		1421782	21					
ANR	1421912	Condition	( val1 = decoder [ p [ 1 ] ] ) <= 0xf && ( val2 = decoder [ p [ 2 ] ] ) <= 0xf	397:9:11106:11175	1421782	0	True				
ANR	1421913	AndExpression	( val1 = decoder [ p [ 1 ] ] ) <= 0xf && ( val2 = decoder [ p [ 2 ] ] ) <= 0xf		1421782	0		&&			
ANR	1421914	RelationalExpression	( val1 = decoder [ p [ 1 ] ] ) <= 0xf		1421782	0		<=			
ANR	1421915	AssignmentExpression	val1 = decoder [ p [ 1 ] ]		1421782	0		=			
ANR	1421916	Identifier	val1		1421782	0					
ANR	1421917	ArrayIndexing	decoder [ p [ 1 ] ]		1421782	1					
ANR	1421918	Identifier	decoder		1421782	0					
ANR	1421919	ArrayIndexing	p [ 1 ]		1421782	1					
ANR	1421920	Identifier	p		1421782	0					
ANR	1421921	PrimaryExpression	1		1421782	1					
ANR	1421922	PrimaryExpression	0xf		1421782	1					
ANR	1421923	RelationalExpression	( val2 = decoder [ p [ 2 ] ] ) <= 0xf		1421782	1		<=			
ANR	1421924	AssignmentExpression	val2 = decoder [ p [ 2 ] ]		1421782	0		=			
ANR	1421925	Identifier	val2		1421782	0					
ANR	1421926	ArrayIndexing	decoder [ p [ 2 ] ]		1421782	1					
ANR	1421927	Identifier	decoder		1421782	0					
ANR	1421928	ArrayIndexing	p [ 2 ]		1421782	1					
ANR	1421929	Identifier	p		1421782	0					
ANR	1421930	PrimaryExpression	2		1421782	1					
ANR	1421931	PrimaryExpression	0xf		1421782	1					
ANR	1421932	CompoundStatement		25:10:703:703	1421782	1					
ANR	1421933	ExpressionStatement	p += 2	400:8:11197:11203	1421782	0	True				
ANR	1421934	AssignmentExpression	p += 2		1421782	0		+=			
ANR	1421935	Identifier	p		1421782	0					
ANR	1421936	PrimaryExpression	2		1421782	1					
ANR	1421937	ExpressionStatement	* ++ q = ( val1 << 4 ) + val2	401:8:11213:11238	1421782	1	True				
ANR	1421938	AssignmentExpression	* ++ q = ( val1 << 4 ) + val2		1421782	0		=			
ANR	1421939	UnaryOperationExpression	* ++ q		1421782	0					
ANR	1421940	UnaryOperator	*		1421782	0					
ANR	1421941	UnaryExpression	++ q		1421782	1					
ANR	1421942	IncDec	++		1421782	0					
ANR	1421943	Identifier	q		1421782	1					
ANR	1421944	AdditiveExpression	( val1 << 4 ) + val2		1421782	1		+			
ANR	1421945	ShiftExpression	val1 << 4		1421782	0		<<			
ANR	1421946	Identifier	val1		1421782	0					
ANR	1421947	PrimaryExpression	4		1421782	1					
ANR	1421948	Identifier	val2		1421782	1					
ANR	1421949	IfStatement	if ( q < flimit )		1421782	2					
ANR	1421950	Condition	q < flimit	402:12:11252:11261	1421782	0	True				
ANR	1421951	RelationalExpression	q < flimit		1421782	0		<			
ANR	1421952	Identifier	q		1421782	0					
ANR	1421953	Identifier	flimit		1421782	1					
ANR	1421954	GotoStatement	goto f1 ;	403:12:11276:11283	1421782	1	True				
ANR	1421955	Identifier	f1		1421782	0					
ANR	1421956	IfStatement	if ( q >= wlimit )		1421782	3					
ANR	1421957	Condition	q >= wlimit	404:12:11297:11307	1421782	0	True				
ANR	1421958	RelationalExpression	q >= wlimit		1421782	0		>=			
ANR	1421959	Identifier	q		1421782	0					
ANR	1421960	Identifier	wlimit		1421782	1					
ANR	1421961	GotoStatement	goto px ;	405:12:11322:11329	1421782	1	True				
ANR	1421962	Identifier	px		1421782	0					
ANR	1421963	Label	x1 :	407:2:11339:11341	1421782	22	True				
ANR	1421964	Identifier	x1		1421782	0					
ANR	1421965	IfStatement	if ( p >= rlimit )		1421782	23					
ANR	1421966	Condition	p >= rlimit	407:9:11346:11356	1421782	0	True				
ANR	1421967	RelationalExpression	p >= rlimit		1421782	0		>=			
ANR	1421968	Identifier	p		1421782	0					
ANR	1421969	Identifier	rlimit		1421782	1					
ANR	1421970	GotoStatement	goto end1 ;	408:8:11367:11376	1421782	1	True				
ANR	1421971	Identifier	end1		1421782	0					
ANR	1421972	IfStatement	if ( ( val1 = decoder [ * ++ p ] ) > 0xf )		1421782	24					
ANR	1421973	Condition	( val1 = decoder [ * ++ p ] ) > 0xf	409:8:11386:11413	1421782	0	True				
ANR	1421974	RelationalExpression	( val1 = decoder [ * ++ p ] ) > 0xf		1421782	0		>			
ANR	1421975	AssignmentExpression	val1 = decoder [ * ++ p ]		1421782	0		=			
ANR	1421976	Identifier	val1		1421782	0					
ANR	1421977	ArrayIndexing	decoder [ * ++ p ]		1421782	1					
ANR	1421978	Identifier	decoder		1421782	0					
ANR	1421979	UnaryOperationExpression	* ++ p		1421782	1					
ANR	1421980	UnaryOperator	*		1421782	0					
ANR	1421981	UnaryExpression	++ p		1421782	1					
ANR	1421982	IncDec	++		1421782	0					
ANR	1421983	Identifier	p		1421782	1					
ANR	1421984	PrimaryExpression	0xf		1421782	1					
ANR	1421985	CompoundStatement		35:38:932:932	1421782	1					
ANR	1421986	IfStatement	if ( val1 == ctype_space )		1421782	0					
ANR	1421987	Condition	val1 == ctype_space	410:12:11430:11448	1421782	0	True				
ANR	1421988	EqualityExpression	val1 == ctype_space		1421782	0		==			
ANR	1421989	Identifier	val1		1421782	0					
ANR	1421990	Identifier	ctype_space		1421782	1					
ANR	1421991	CompoundStatement		36:33:967:967	1421782	1					
ANR	1421992	SwitchStatement	switch ( syntax )		1421782	0					
ANR	1421993	Condition	syntax	411:20:11473:11478	1421782	0	True				
ANR	1421994	Identifier	syntax		1421782	0					
ANR	1421995	CompoundStatement		37:28:997:997	1421782	1					
ANR	1421996	Label	case hex_ignore_garbage :	412:16:11499:11522	1421782	0	True				
ANR	1421997	Identifier	hex_ignore_garbage		1421782	0					
ANR	1421998	Label	case hex_ignore_whitespace :	413:16:11540:11566	1421782	1	True				
ANR	1421999	Identifier	hex_ignore_whitespace		1421782	0					
ANR	1422000	GotoStatement	goto x1 ;	414:20:11588:11595	1421782	2	True				
ANR	1422001	Identifier	x1		1421782	0					
ANR	1422002	Label	case hex_ignore_leading_whitespace :	415:16:11613:11647	1421782	3	True				
ANR	1422003	Identifier	hex_ignore_leading_whitespace		1421782	0					
ANR	1422004	IfStatement	if ( q == q0 && * odd_digit < 0 )		1421782	4					
ANR	1422005	Condition	q == q0 && * odd_digit < 0	416:24:11673:11697	1421782	0	True				
ANR	1422006	AndExpression	q == q0 && * odd_digit < 0		1421782	0		&&			
ANR	1422007	EqualityExpression	q == q0		1421782	0		==			
ANR	1422008	Identifier	q		1421782	0					
ANR	1422009	Identifier	q0		1421782	1					
ANR	1422010	RelationalExpression	* odd_digit < 0		1421782	1		<			
ANR	1422011	UnaryOperationExpression	* odd_digit		1421782	0					
ANR	1422012	UnaryOperator	*		1421782	0					
ANR	1422013	Identifier	odd_digit		1421782	1					
ANR	1422014	PrimaryExpression	0		1421782	1					
ANR	1422015	GotoStatement	goto x1 ;	417:24:11724:11731	1421782	1	True				
ANR	1422016	Identifier	x1		1421782	0					
ANR	1422017	Label	case hex_break_on_whitespace :	419:16:11788:11816	1421782	5	True				
ANR	1422018	Identifier	hex_break_on_whitespace		1421782	0					
ANR	1422019	ExpressionStatement	-- p	420:20:11838:11841	1421782	6	True				
ANR	1422020	UnaryExpression	-- p		1421782	0					
ANR	1422021	IncDec	--		1421782	0					
ANR	1422022	Identifier	p		1421782	1					
ANR	1422023	ExpressionStatement	code = 2	421:20:11863:11871	1421782	7	True				
ANR	1422024	AssignmentExpression	code = 2		1421782	0		=			
ANR	1422025	Identifier	code		1421782	0					
ANR	1422026	PrimaryExpression	2		1421782	1					
ANR	1422027	GotoStatement	goto end1 ;	422:20:11893:11902	1421782	8	True				
ANR	1422028	Identifier	end1		1421782	0					
ANR	1422029	ElseStatement	else		1421782	0					
ANR	1422030	IfStatement	if ( syntax == hex_ignore_garbage )		1421782	0					
ANR	1422031	Condition	syntax == hex_ignore_garbage	424:19:11937:11964	1421782	0	True				
ANR	1422032	EqualityExpression	syntax == hex_ignore_garbage		1421782	0		==			
ANR	1422033	Identifier	syntax		1421782	0					
ANR	1422034	Identifier	hex_ignore_garbage		1421782	1					
ANR	1422035	GotoStatement	goto x1 ;	425:12:11979:11986	1421782	1	True				
ANR	1422036	Identifier	x1		1421782	0					
ANR	1422037	ExpressionStatement	code = ERRC	426:8:11996:12007	1421782	1	True				
ANR	1422038	AssignmentExpression	code = ERRC		1421782	0		=			
ANR	1422039	Identifier	code		1421782	0					
ANR	1422040	Identifier	ERRC		1421782	1					
ANR	1422041	GotoStatement	goto end1 ;	427:8:12017:12026	1421782	2	True				
ANR	1422042	Identifier	end1		1421782	0					
ANR	1422043	Label	d2 :	429:2:12036:12038	1421782	25	True				
ANR	1422044	Identifier	d2		1421782	0					
ANR	1422045	IfStatement	if ( p >= rlimit )		1421782	26					
ANR	1422046	Condition	p >= rlimit	429:9:12043:12053	1421782	0	True				
ANR	1422047	RelationalExpression	p >= rlimit		1421782	0		>=			
ANR	1422048	Identifier	p		1421782	0					
ANR	1422049	Identifier	rlimit		1421782	1					
ANR	1422050	CompoundStatement		55:22:1572:1572	1421782	1					
ANR	1422051	ExpressionStatement	* odd_digit = val1	430:8:12066:12083	1421782	0	True				
ANR	1422052	AssignmentExpression	* odd_digit = val1		1421782	0		=			
ANR	1422053	UnaryOperationExpression	* odd_digit		1421782	0					
ANR	1422054	UnaryOperator	*		1421782	0					
ANR	1422055	Identifier	odd_digit		1421782	1					
ANR	1422056	Identifier	val1		1421782	1					
ANR	1422057	GotoStatement	goto ended ;	431:8:12093:12103	1421782	1	True				
ANR	1422058	Identifier	ended		1421782	0					
ANR	1422059	IfStatement	if ( ( val2 = decoder [ * ++ p ] ) > 0xf )		1421782	27					
ANR	1422060	Condition	( val2 = decoder [ * ++ p ] ) > 0xf	433:8:12119:12146	1421782	0	True				
ANR	1422061	RelationalExpression	( val2 = decoder [ * ++ p ] ) > 0xf		1421782	0		>			
ANR	1422062	AssignmentExpression	val2 = decoder [ * ++ p ]		1421782	0		=			
ANR	1422063	Identifier	val2		1421782	0					
ANR	1422064	ArrayIndexing	decoder [ * ++ p ]		1421782	1					
ANR	1422065	Identifier	decoder		1421782	0					
ANR	1422066	UnaryOperationExpression	* ++ p		1421782	1					
ANR	1422067	UnaryOperator	*		1421782	0					
ANR	1422068	UnaryExpression	++ p		1421782	1					
ANR	1422069	IncDec	++		1421782	0					
ANR	1422070	Identifier	p		1421782	1					
ANR	1422071	PrimaryExpression	0xf		1421782	1					
ANR	1422072	CompoundStatement		59:38:1665:1665	1421782	1					
ANR	1422073	IfStatement	if ( val2 == ctype_space )		1421782	0					
ANR	1422074	Condition	val2 == ctype_space	434:12:12163:12181	1421782	0	True				
ANR	1422075	EqualityExpression	val2 == ctype_space		1421782	0		==			
ANR	1422076	Identifier	val2		1421782	0					
ANR	1422077	Identifier	ctype_space		1421782	1					
ANR	1422078	SwitchStatement	switch ( syntax )		1421782	1					
ANR	1422079	Condition	syntax	435:20:12204:12209	1421782	0	True				
ANR	1422080	Identifier	syntax		1421782	0					
ANR	1422081	CompoundStatement		61:28:1728:1728	1421782	1					
ANR	1422082	Label	case hex_ignore_garbage :	436:16:12230:12253	1421782	0	True				
ANR	1422083	Identifier	hex_ignore_garbage		1421782	0					
ANR	1422084	Label	case hex_ignore_whitespace :	437:16:12271:12297	1421782	1	True				
ANR	1422085	Identifier	hex_ignore_whitespace		1421782	0					
ANR	1422086	GotoStatement	goto d2 ;	438:20:12319:12326	1421782	2	True				
ANR	1422087	Identifier	d2		1421782	0					
ANR	1422088	Label	case hex_ignore_leading_whitespace :	439:16:12344:12378	1421782	3	True				
ANR	1422089	Identifier	hex_ignore_leading_whitespace		1421782	0					
ANR	1422090	IfStatement	if ( q == q0 )		1421782	4					
ANR	1422091	Condition	q == q0	440:24:12404:12410	1421782	0	True				
ANR	1422092	EqualityExpression	q == q0		1421782	0		==			
ANR	1422093	Identifier	q		1421782	0					
ANR	1422094	Identifier	q0		1421782	1					
ANR	1422095	GotoStatement	goto d2 ;	441:24:12437:12444	1421782	1	True				
ANR	1422096	Identifier	d2		1421782	0					
ANR	1422097	Label	case hex_break_on_whitespace :	443:16:12501:12529	1421782	5	True				
ANR	1422098	Identifier	hex_break_on_whitespace		1421782	0					
ANR	1422099	ExpressionStatement	-- p	444:20:12551:12554	1421782	6	True				
ANR	1422100	UnaryExpression	-- p		1421782	0					
ANR	1422101	IncDec	--		1421782	0					
ANR	1422102	Identifier	p		1421782	1					
ANR	1422103	ExpressionStatement	* odd_digit = val1	445:20:12576:12593	1421782	7	True				
ANR	1422104	AssignmentExpression	* odd_digit = val1		1421782	0		=			
ANR	1422105	UnaryOperationExpression	* odd_digit		1421782	0					
ANR	1422106	UnaryOperator	*		1421782	0					
ANR	1422107	Identifier	odd_digit		1421782	1					
ANR	1422108	Identifier	val1		1421782	1					
ANR	1422109	ExpressionStatement	code = 2	446:20:12615:12623	1421782	8	True				
ANR	1422110	AssignmentExpression	code = 2		1421782	0		=			
ANR	1422111	Identifier	code		1421782	0					
ANR	1422112	PrimaryExpression	2		1421782	1					
ANR	1422113	GotoStatement	goto ended ;	447:20:12645:12655	1421782	9	True				
ANR	1422114	Identifier	ended		1421782	0					
ANR	1422115	IfStatement	if ( syntax == hex_ignore_garbage )		1421782	1					
ANR	1422116	Condition	syntax == hex_ignore_garbage	449:12:12683:12710	1421782	0	True				
ANR	1422117	EqualityExpression	syntax == hex_ignore_garbage		1421782	0		==			
ANR	1422118	Identifier	syntax		1421782	0					
ANR	1422119	Identifier	hex_ignore_garbage		1421782	1					
ANR	1422120	GotoStatement	goto d2 ;	450:12:12725:12732	1421782	1	True				
ANR	1422121	Identifier	d2		1421782	0					
ANR	1422122	ExpressionStatement	* odd_digit = val1	451:8:12742:12759	1421782	2	True				
ANR	1422123	AssignmentExpression	* odd_digit = val1		1421782	0		=			
ANR	1422124	UnaryOperationExpression	* odd_digit		1421782	0					
ANR	1422125	UnaryOperator	*		1421782	0					
ANR	1422126	Identifier	odd_digit		1421782	1					
ANR	1422127	Identifier	val1		1421782	1					
ANR	1422128	ExpressionStatement	code = ERRC	452:8:12769:12780	1421782	3	True				
ANR	1422129	AssignmentExpression	code = ERRC		1421782	0		=			
ANR	1422130	Identifier	code		1421782	0					
ANR	1422131	Identifier	ERRC		1421782	1					
ANR	1422132	GotoStatement	goto ended ;	453:8:12790:12800	1421782	4	True				
ANR	1422133	Identifier	ended		1421782	0					
ANR	1422134	ExpressionStatement	* ++ q = ( val1 << 4 ) + val2	455:4:12812:12837	1421782	28	True				
ANR	1422135	AssignmentExpression	* ++ q = ( val1 << 4 ) + val2		1421782	0		=			
ANR	1422136	UnaryOperationExpression	* ++ q		1421782	0					
ANR	1422137	UnaryOperator	*		1421782	0					
ANR	1422138	UnaryExpression	++ q		1421782	1					
ANR	1422139	IncDec	++		1421782	0					
ANR	1422140	Identifier	q		1421782	1					
ANR	1422141	AdditiveExpression	( val1 << 4 ) + val2		1421782	1		+			
ANR	1422142	ShiftExpression	val1 << 4		1421782	0		<<			
ANR	1422143	Identifier	val1		1421782	0					
ANR	1422144	PrimaryExpression	4		1421782	1					
ANR	1422145	Identifier	val2		1421782	1					
ANR	1422146	IfStatement	if ( q < wlimit )		1421782	29					
ANR	1422147	Condition	q < wlimit	456:8:12847:12856	1421782	0	True				
ANR	1422148	RelationalExpression	q < wlimit		1421782	0		<			
ANR	1422149	Identifier	q		1421782	0					
ANR	1422150	Identifier	wlimit		1421782	1					
ANR	1422151	GotoStatement	goto d1 ;	457:8:12867:12874	1421782	1	True				
ANR	1422152	Identifier	d1		1421782	0					
ANR	1422153	Label	px :	458:2:12878:12880	1421782	30	True				
ANR	1422154	Identifier	px		1421782	0					
ANR	1422155	ExpressionStatement	code = 1	458:5:12881:12889	1421782	31	True				
ANR	1422156	AssignmentExpression	code = 1		1421782	0		=			
ANR	1422157	Identifier	code		1421782	0					
ANR	1422158	PrimaryExpression	1		1421782	1					
ANR	1422159	Label	end1 :	459:2:12893:12897	1421782	32	True				
ANR	1422160	Identifier	end1		1421782	0					
ANR	1422161	ExpressionStatement	* odd_digit = - 1	459:7:12898:12913	1421782	33	True				
ANR	1422162	AssignmentExpression	* odd_digit = - 1		1421782	0		=			
ANR	1422163	UnaryOperationExpression	* odd_digit		1421782	0					
ANR	1422164	UnaryOperator	*		1421782	0					
ANR	1422165	Identifier	odd_digit		1421782	1					
ANR	1422166	UnaryOperationExpression	- 1		1421782	1					
ANR	1422167	UnaryOperator	-		1421782	0					
ANR	1422168	PrimaryExpression	1		1421782	1					
ANR	1422169	Label	ended :	460:2:12917:12922	1421782	34	True				
ANR	1422170	Identifier	ended		1421782	0					
ANR	1422171	ExpressionStatement	pr -> ptr = p	460:8:12923:12934	1421782	35	True				
ANR	1422172	AssignmentExpression	pr -> ptr = p		1421782	0		=			
ANR	1422173	PtrMemberAccess	pr -> ptr		1421782	0					
ANR	1422174	Identifier	pr		1421782	0					
ANR	1422175	Identifier	ptr		1421782	1					
ANR	1422176	Identifier	p		1421782	1					
ANR	1422177	ExpressionStatement	pw -> ptr = q	461:4:12940:12951	1421782	36	True				
ANR	1422178	AssignmentExpression	pw -> ptr = q		1421782	0		=			
ANR	1422179	PtrMemberAccess	pw -> ptr		1421782	0					
ANR	1422180	Identifier	pw		1421782	0					
ANR	1422181	Identifier	ptr		1421782	1					
ANR	1422182	Identifier	q		1421782	1					
ANR	1422183	ReturnStatement	return code ;	462:4:12957:12968	1421782	37	True				
ANR	1422184	Identifier	code		1421782	0					
ANR	1422185	ReturnType	int		1421782	1					
ANR	1422186	Identifier	s_hex_process		1421782	2					
ANR	1422187	ParameterList	"stream_cursor_read * pr , stream_cursor_write * pw , int * odd_digit , hex_syntax syntax"		1421782	3					
ANR	1422188	Parameter	stream_cursor_read * pr	373:14:10383:10405	1421782	0	True				
ANR	1422189	ParameterType	stream_cursor_read *		1421782	0					
ANR	1422190	Identifier	pr		1421782	1					
ANR	1422191	Parameter	stream_cursor_write * pw	373:39:10408:10431	1421782	1	True				
ANR	1422192	ParameterType	stream_cursor_write *		1421782	0					
ANR	1422193	Identifier	pw		1421782	1					
ANR	1422194	Parameter	int * odd_digit	374:14:10448:10461	1421782	2	True				
ANR	1422195	ParameterType	int *		1421782	0					
ANR	1422196	Identifier	odd_digit		1421782	1					
ANR	1422197	Parameter	hex_syntax syntax	374:30:10464:10480	1421782	3	True				
ANR	1422198	ParameterType	hex_syntax		1421782	0					
ANR	1422199	Identifier	syntax		1421782	1					
ANR	1422200	CFGEntryNode	ENTRY		1421782		True				
ANR	1422201	CFGExitNode	EXIT		1421782		True				
ANR	1422202	Symbol	* decoder		1421782						
ANR	1422203	Symbol	pr		1421782						
ANR	1422204	Symbol	odd_digit		1421782						
ANR	1422205	Symbol	code		1421782						
ANR	1422206	Symbol	val2		1421782						
ANR	1422207	Symbol	pw		1421782						
ANR	1422208	Symbol	val1		1421782						
ANR	1422209	Symbol	pr -> limit		1421782						
ANR	1422210	Symbol	hex_ignore_garbage		1421782						
ANR	1422211	Symbol	pw -> limit		1421782						
ANR	1422212	Symbol	wlimit		1421782						
ANR	1422213	Symbol	* * p		1421782						
ANR	1422214	Symbol	pr -> ptr		1421782						
ANR	1422215	Symbol	pw -> ptr		1421782						
ANR	1422216	Symbol	q0		1421782						
ANR	1422217	Symbol	rlimit		1421782						
ANR	1422218	Symbol	flimit		1421782						
ANR	1422219	Symbol	* ++ p		1421782						
ANR	1422220	Symbol	* ++ q		1421782						
ANR	1422221	Symbol	* * ++ p		1421782						
ANR	1422222	Symbol	* pr		1421782						
ANR	1422223	Symbol	decoder		1421782						
ANR	1422224	Symbol	ctype_space		1421782						
ANR	1422225	Symbol	* pw		1421782						
ANR	1422226	Symbol	p		1421782						
ANR	1422227	Symbol	q		1421782						
ANR	1422228	Symbol	rcount		1421782						
ANR	1422229	Symbol	scan_char_decoder		1421782						
ANR	1422230	Symbol	* odd_digit		1421782						
ANR	1422231	Symbol	syntax		1421782						
ANR	1422232	Symbol	* p		1421782						
ANR	1422233	Symbol	* q		1421782						
ANR	1422234	Symbol	ERRC		1421782						
