command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11104901	File	data/converged/CVE-2018-16863_ghostpdl/zfilter.c								
ANR	11104902	Function	zAXE	37:0:1102:1196							
ANR	11104903	FunctionDef	zAXE (i_ctx_t * i_ctx_p)		11104902	0					
ANR	11104904	CompoundStatement		39:0:1136:1196	11104902	0					
ANR	11104905	ReturnStatement	"return filter_write_simple ( i_ctx_p , & s_AXE_template ) ;"	40:4:1142:1194	11104902	0	True				
ANR	11104906	CallExpression	"filter_write_simple ( i_ctx_p , & s_AXE_template )"		11104902	0					
ANR	11104907	Callee	filter_write_simple		11104902	0					
ANR	11104908	Identifier	filter_write_simple		11104902	0					
ANR	11104909	ArgumentList	i_ctx_p		11104902	1					
ANR	11104910	Argument	i_ctx_p		11104902	0					
ANR	11104911	Identifier	i_ctx_p		11104902	0					
ANR	11104912	Argument	& s_AXE_template		11104902	1					
ANR	11104913	UnaryOperationExpression	& s_AXE_template		11104902	0					
ANR	11104914	UnaryOperator	&		11104902	0					
ANR	11104915	Identifier	s_AXE_template		11104902	1					
ANR	11104916	ReturnType	static int		11104902	1					
ANR	11104917	Identifier	zAXE		11104902	2					
ANR	11104918	ParameterList	i_ctx_t * i_ctx_p		11104902	3					
ANR	11104919	Parameter	i_ctx_t * i_ctx_p	38:5:1118:1133	11104902	0	True				
ANR	11104920	ParameterType	i_ctx_t *		11104902	0					
ANR	11104921	Identifier	i_ctx_p		11104902	1					
ANR	11104922	CFGEntryNode	ENTRY		11104902		True				
ANR	11104923	CFGExitNode	EXIT		11104902		True				
ANR	11104924	Symbol	filter_write_simple		11104902						
ANR	11104925	Symbol	i_ctx_p		11104902						
ANR	11104926	Symbol	& s_AXE_template		11104902						
ANR	11104927	Function	zAXD	45:0:1294:1387							
ANR	11104928	FunctionDef	zAXD (i_ctx_t * i_ctx_p)		11104927	0					
ANR	11104929	CompoundStatement		47:0:1328:1387	11104927	0					
ANR	11104930	ReturnStatement	"return filter_read_simple ( i_ctx_p , & s_AXD_template ) ;"	48:4:1334:1385	11104927	0	True				
ANR	11104931	CallExpression	"filter_read_simple ( i_ctx_p , & s_AXD_template )"		11104927	0					
ANR	11104932	Callee	filter_read_simple		11104927	0					
ANR	11104933	Identifier	filter_read_simple		11104927	0					
ANR	11104934	ArgumentList	i_ctx_p		11104927	1					
ANR	11104935	Argument	i_ctx_p		11104927	0					
ANR	11104936	Identifier	i_ctx_p		11104927	0					
ANR	11104937	Argument	& s_AXD_template		11104927	1					
ANR	11104938	UnaryOperationExpression	& s_AXD_template		11104927	0					
ANR	11104939	UnaryOperator	&		11104927	0					
ANR	11104940	Identifier	s_AXD_template		11104927	1					
ANR	11104941	ReturnType	static int		11104927	1					
ANR	11104942	Identifier	zAXD		11104927	2					
ANR	11104943	ParameterList	i_ctx_t * i_ctx_p		11104927	3					
ANR	11104944	Parameter	i_ctx_t * i_ctx_p	46:5:1310:1325	11104927	0	True				
ANR	11104945	ParameterType	i_ctx_t *		11104927	0					
ANR	11104946	Identifier	i_ctx_p		11104927	1					
ANR	11104947	CFGEntryNode	ENTRY		11104927		True				
ANR	11104948	CFGExitNode	EXIT		11104927		True				
ANR	11104949	Symbol	filter_read_simple		11104927						
ANR	11104950	Symbol	i_ctx_p		11104927						
ANR	11104951	Symbol	& s_AXD_template		11104927						
ANR	11104952	Function	zNullE	53:0:1485:1583							
ANR	11104953	FunctionDef	zNullE (i_ctx_t * i_ctx_p)		11104952	0					
ANR	11104954	CompoundStatement		55:0:1521:1583	11104952	0					
ANR	11104955	ReturnStatement	"return filter_write_simple ( i_ctx_p , & s_NullE_template ) ;"	56:4:1527:1581	11104952	0	True				
ANR	11104956	CallExpression	"filter_write_simple ( i_ctx_p , & s_NullE_template )"		11104952	0					
ANR	11104957	Callee	filter_write_simple		11104952	0					
ANR	11104958	Identifier	filter_write_simple		11104952	0					
ANR	11104959	ArgumentList	i_ctx_p		11104952	1					
ANR	11104960	Argument	i_ctx_p		11104952	0					
ANR	11104961	Identifier	i_ctx_p		11104952	0					
ANR	11104962	Argument	& s_NullE_template		11104952	1					
ANR	11104963	UnaryOperationExpression	& s_NullE_template		11104952	0					
ANR	11104964	UnaryOperator	&		11104952	0					
ANR	11104965	Identifier	s_NullE_template		11104952	1					
ANR	11104966	ReturnType	static int		11104952	1					
ANR	11104967	Identifier	zNullE		11104952	2					
ANR	11104968	ParameterList	i_ctx_t * i_ctx_p		11104952	3					
ANR	11104969	Parameter	i_ctx_t * i_ctx_p	54:7:1503:1518	11104952	0	True				
ANR	11104970	ParameterType	i_ctx_t *		11104952	0					
ANR	11104971	Identifier	i_ctx_p		11104952	1					
ANR	11104972	CFGEntryNode	ENTRY		11104952		True				
ANR	11104973	CFGExitNode	EXIT		11104952		True				
ANR	11104974	Symbol	filter_write_simple		11104952						
ANR	11104975	Symbol	& s_NullE_template		11104952						
ANR	11104976	Symbol	i_ctx_p		11104952						
ANR	11104977	Function	zPFBD	61:0:1685:1934							
ANR	11104978	FunctionDef	zPFBD (i_ctx_t * i_ctx_p)		11104977	0					
ANR	11104979	CompoundStatement		63:0:1720:1934	11104977	0					
ANR	11104980	IdentifierDeclStatement	os_ptr sop = osp ;	64:4:1726:1742	11104977	0	True				
ANR	11104981	IdentifierDecl	sop = osp		11104977	0					
ANR	11104982	IdentifierDeclType	os_ptr		11104977	0					
ANR	11104983	Identifier	sop		11104977	1					
ANR	11104984	AssignmentExpression	sop = osp		11104977	2		=			
ANR	11104985	Identifier	osp		11104977	0					
ANR	11104986	Identifier	osp		11104977	1					
ANR	11104987	IdentifierDeclStatement	stream_PFBD_state state ;	65:4:1748:1771	11104977	1	True				
ANR	11104988	IdentifierDecl	state		11104977	0					
ANR	11104989	IdentifierDeclType	stream_PFBD_state		11104977	0					
ANR	11104990	Identifier	state		11104977	1					
ANR	11104991	ExpressionStatement	"check_type ( * sop , t_boolean )"	67:4:1778:1805	11104977	2	True				
ANR	11104992	CallExpression	"check_type ( * sop , t_boolean )"		11104977	0					
ANR	11104993	Callee	check_type		11104977	0					
ANR	11104994	Identifier	check_type		11104977	0					
ANR	11104995	ArgumentList	* sop		11104977	1					
ANR	11104996	Argument	* sop		11104977	0					
ANR	11104997	UnaryOperationExpression	* sop		11104977	0					
ANR	11104998	UnaryOperator	*		11104977	0					
ANR	11104999	Identifier	sop		11104977	1					
ANR	11105000	Argument	t_boolean		11104977	1					
ANR	11105001	Identifier	t_boolean		11104977	0					
ANR	11105002	ExpressionStatement	state . binary_to_hex = sop -> value . boolval	68:4:1811:1851	11104977	3	True				
ANR	11105003	AssignmentExpression	state . binary_to_hex = sop -> value . boolval		11104977	0		=			
ANR	11105004	MemberAccess	state . binary_to_hex		11104977	0					
ANR	11105005	Identifier	state		11104977	0					
ANR	11105006	Identifier	binary_to_hex		11104977	1					
ANR	11105007	MemberAccess	sop -> value . boolval		11104977	1					
ANR	11105008	PtrMemberAccess	sop -> value		11104977	0					
ANR	11105009	Identifier	sop		11104977	0					
ANR	11105010	Identifier	value		11104977	1					
ANR	11105011	Identifier	boolval		11104977	1					
ANR	11105012	ReturnStatement	"return filter_read ( i_ctx_p , 1 , & s_PFBD_template , ( stream_state * ) & state , 0 ) ;"	69:4:1857:1932	11104977	4	True				
ANR	11105013	CallExpression	"filter_read ( i_ctx_p , 1 , & s_PFBD_template , ( stream_state * ) & state , 0 )"		11104977	0					
ANR	11105014	Callee	filter_read		11104977	0					
ANR	11105015	Identifier	filter_read		11104977	0					
ANR	11105016	ArgumentList	i_ctx_p		11104977	1					
ANR	11105017	Argument	i_ctx_p		11104977	0					
ANR	11105018	Identifier	i_ctx_p		11104977	0					
ANR	11105019	Argument	1		11104977	1					
ANR	11105020	PrimaryExpression	1		11104977	0					
ANR	11105021	Argument	& s_PFBD_template		11104977	2					
ANR	11105022	UnaryOperationExpression	& s_PFBD_template		11104977	0					
ANR	11105023	UnaryOperator	&		11104977	0					
ANR	11105024	Identifier	s_PFBD_template		11104977	1					
ANR	11105025	Argument	( stream_state * ) & state		11104977	3					
ANR	11105026	CastExpression	( stream_state * ) & state		11104977	0					
ANR	11105027	CastTarget	stream_state *		11104977	0					
ANR	11105028	UnaryOperationExpression	& state		11104977	1					
ANR	11105029	UnaryOperator	&		11104977	0					
ANR	11105030	Identifier	state		11104977	1					
ANR	11105031	Argument	0		11104977	4					
ANR	11105032	PrimaryExpression	0		11104977	0					
ANR	11105033	ReturnType	static int		11104977	1					
ANR	11105034	Identifier	zPFBD		11104977	2					
ANR	11105035	ParameterList	i_ctx_t * i_ctx_p		11104977	3					
ANR	11105036	Parameter	i_ctx_t * i_ctx_p	62:6:1702:1717	11104977	0	True				
ANR	11105037	ParameterType	i_ctx_t *		11104977	0					
ANR	11105038	Identifier	i_ctx_p		11104977	1					
ANR	11105039	CFGEntryNode	ENTRY		11104977		True				
ANR	11105040	CFGExitNode	EXIT		11104977		True				
ANR	11105041	Symbol	t_boolean		11104977						
ANR	11105042	Symbol	sop		11104977						
ANR	11105043	Symbol	& state		11104977						
ANR	11105044	Symbol	& s_PFBD_template		11104977						
ANR	11105045	Symbol	i_ctx_p		11104977						
ANR	11105046	Symbol	state . binary_to_hex		11104977						
ANR	11105047	Symbol	state		11104977						
ANR	11105048	Symbol	sop -> value		11104977						
ANR	11105049	Symbol	osp		11104977						
ANR	11105050	Symbol	* sop		11104977						
ANR	11105051	Symbol	sop -> value . boolval		11104977						
ANR	11105052	Symbol	filter_read		11104977						
ANR	11105053	Function	zPSSE	74:0:2032:2128							
ANR	11105054	FunctionDef	zPSSE (i_ctx_t * i_ctx_p)		11105053	0					
ANR	11105055	CompoundStatement		76:0:2067:2128	11105053	0					
ANR	11105056	ReturnStatement	"return filter_write_simple ( i_ctx_p , & s_PSSE_template ) ;"	77:4:2073:2126	11105053	0	True				
ANR	11105057	CallExpression	"filter_write_simple ( i_ctx_p , & s_PSSE_template )"		11105053	0					
ANR	11105058	Callee	filter_write_simple		11105053	0					
ANR	11105059	Identifier	filter_write_simple		11105053	0					
ANR	11105060	ArgumentList	i_ctx_p		11105053	1					
ANR	11105061	Argument	i_ctx_p		11105053	0					
ANR	11105062	Identifier	i_ctx_p		11105053	0					
ANR	11105063	Argument	& s_PSSE_template		11105053	1					
ANR	11105064	UnaryOperationExpression	& s_PSSE_template		11105053	0					
ANR	11105065	UnaryOperator	&		11105053	0					
ANR	11105066	Identifier	s_PSSE_template		11105053	1					
ANR	11105067	ReturnType	static int		11105053	1					
ANR	11105068	Identifier	zPSSE		11105053	2					
ANR	11105069	ParameterList	i_ctx_t * i_ctx_p		11105053	3					
ANR	11105070	Parameter	i_ctx_t * i_ctx_p	75:6:2049:2064	11105053	0	True				
ANR	11105071	ParameterType	i_ctx_t *		11105053	0					
ANR	11105072	Identifier	i_ctx_p		11105053	1					
ANR	11105073	CFGEntryNode	ENTRY		11105053		True				
ANR	11105074	CFGExitNode	EXIT		11105053		True				
ANR	11105075	Symbol	filter_write_simple		11105053						
ANR	11105076	Symbol	& s_PSSE_template		11105053						
ANR	11105077	Symbol	i_ctx_p		11105053						
ANR	11105078	Function	rl_setup	83:0:2214:2523							
ANR	11105079	FunctionDef	"rl_setup (os_ptr dop , bool * eod)"		11105078	0					
ANR	11105080	CompoundStatement		85:0:2258:2523	11105078	0					
ANR	11105081	IfStatement	"if ( r_has_type ( dop , t_dictionary ) )"		11105078	0					
ANR	11105082	Condition	"r_has_type ( dop , t_dictionary )"	86:8:2268:2296	11105078	0	True				
ANR	11105083	CallExpression	"r_has_type ( dop , t_dictionary )"		11105078	0					
ANR	11105084	Callee	r_has_type		11105078	0					
ANR	11105085	Identifier	r_has_type		11105078	0					
ANR	11105086	ArgumentList	dop		11105078	1					
ANR	11105087	Argument	dop		11105078	0					
ANR	11105088	Identifier	dop		11105078	0					
ANR	11105089	Argument	t_dictionary		11105078	1					
ANR	11105090	Identifier	t_dictionary		11105078	0					
ANR	11105091	CompoundStatement		3:8:50:58	11105078	1					
ANR	11105092	IdentifierDeclStatement	int code ;	87:8:2309:2317	11105078	0	True				
ANR	11105093	IdentifierDecl	code		11105078	0					
ANR	11105094	IdentifierDeclType	int		11105078	0					
ANR	11105095	Identifier	code		11105078	1					
ANR	11105096	ExpressionStatement	check_dict_read ( * dop )	89:8:2328:2349	11105078	1	True				
ANR	11105097	CallExpression	check_dict_read ( * dop )		11105078	0					
ANR	11105098	Callee	check_dict_read		11105078	0					
ANR	11105099	Identifier	check_dict_read		11105078	0					
ANR	11105100	ArgumentList	* dop		11105078	1					
ANR	11105101	Argument	* dop		11105078	0					
ANR	11105102	UnaryOperationExpression	* dop		11105078	0					
ANR	11105103	UnaryOperator	*		11105078	0					
ANR	11105104	Identifier	dop		11105078	1					
ANR	11105105	IfStatement	"if ( ( code = dict_bool_param ( dop , ""EndOfData"" , true , eod ) ) < 0 )"		11105078	2					
ANR	11105106	Condition	"( code = dict_bool_param ( dop , ""EndOfData"" , true , eod ) ) < 0"	90:12:2363:2419	11105078	0	True				
ANR	11105107	RelationalExpression	"( code = dict_bool_param ( dop , ""EndOfData"" , true , eod ) ) < 0"		11105078	0		<			
ANR	11105108	AssignmentExpression	"code = dict_bool_param ( dop , ""EndOfData"" , true , eod )"		11105078	0		=			
ANR	11105109	Identifier	code		11105078	0					
ANR	11105110	CallExpression	"dict_bool_param ( dop , ""EndOfData"" , true , eod )"		11105078	1					
ANR	11105111	Callee	dict_bool_param		11105078	0					
ANR	11105112	Identifier	dict_bool_param		11105078	0					
ANR	11105113	ArgumentList	dop		11105078	1					
ANR	11105114	Argument	dop		11105078	0					
ANR	11105115	Identifier	dop		11105078	0					
ANR	11105116	Argument	"""EndOfData"""		11105078	1					
ANR	11105117	PrimaryExpression	"""EndOfData"""		11105078	0					
ANR	11105118	Argument	true		11105078	2					
ANR	11105119	Identifier	true		11105078	0					
ANR	11105120	Argument	eod		11105078	3					
ANR	11105121	Identifier	eod		11105078	0					
ANR	11105122	PrimaryExpression	0		11105078	1					
ANR	11105123	ReturnStatement	return code ;	91:12:2434:2445	11105078	1	True				
ANR	11105124	Identifier	code		11105078	0					
ANR	11105125	ReturnStatement	return 1 ;	92:8:2455:2463	11105078	3	True				
ANR	11105126	PrimaryExpression	1		11105078	0					
ANR	11105127	ElseStatement	else		11105078	0					
ANR	11105128	CompoundStatement		9:11:217:217	11105078	0					
ANR	11105129	ExpressionStatement	* eod = true	94:8:2486:2497	11105078	0	True				
ANR	11105130	AssignmentExpression	* eod = true		11105078	0		=			
ANR	11105131	UnaryOperationExpression	* eod		11105078	0					
ANR	11105132	UnaryOperator	*		11105078	0					
ANR	11105133	Identifier	eod		11105078	1					
ANR	11105134	Identifier	true		11105078	1					
ANR	11105135	ReturnStatement	return 0 ;	95:8:2507:2515	11105078	1	True				
ANR	11105136	PrimaryExpression	0		11105078	0					
ANR	11105137	ReturnType	static int		11105078	1					
ANR	11105138	Identifier	rl_setup		11105078	2					
ANR	11105139	ParameterList	"os_ptr dop , bool * eod"		11105078	3					
ANR	11105140	Parameter	os_ptr dop	84:9:2234:2243	11105078	0	True				
ANR	11105141	ParameterType	os_ptr		11105078	0					
ANR	11105142	Identifier	dop		11105078	1					
ANR	11105143	Parameter	bool * eod	84:21:2246:2255	11105078	1	True				
ANR	11105144	ParameterType	bool *		11105078	0					
ANR	11105145	Identifier	eod		11105078	1					
ANR	11105146	CFGEntryNode	ENTRY		11105078		True				
ANR	11105147	CFGExitNode	EXIT		11105078		True				
ANR	11105148	Symbol	* dop		11105078						
ANR	11105149	Symbol	r_has_type		11105078						
ANR	11105150	Symbol	t_dictionary		11105078						
ANR	11105151	Symbol	code		11105078						
ANR	11105152	Symbol	dop		11105078						
ANR	11105153	Symbol	dict_bool_param		11105078						
ANR	11105154	Symbol	true		11105078						
ANR	11105155	Symbol	eod		11105078						
ANR	11105156	Symbol	* eod		11105078						
ANR	11105157	Function	zRLE	101:0:2651:3013							
ANR	11105158	FunctionDef	zRLE (i_ctx_t * i_ctx_p)		11105157	0					
ANR	11105159	CompoundStatement		103:0:2685:3013	11105157	0					
ANR	11105160	IdentifierDeclStatement	os_ptr op = osp ;	104:4:2691:2706	11105157	0	True				
ANR	11105161	IdentifierDecl	op = osp		11105157	0					
ANR	11105162	IdentifierDeclType	os_ptr		11105157	0					
ANR	11105163	Identifier	op		11105157	1					
ANR	11105164	AssignmentExpression	op = osp		11105157	2		=			
ANR	11105165	Identifier	osp		11105157	0					
ANR	11105166	Identifier	osp		11105157	1					
ANR	11105167	IdentifierDeclStatement	stream_RLE_state state ;	105:4:2712:2734	11105157	1	True				
ANR	11105168	IdentifierDecl	state		11105157	0					
ANR	11105169	IdentifierDeclType	stream_RLE_state		11105157	0					
ANR	11105170	Identifier	state		11105157	1					
ANR	11105171	IdentifierDeclStatement	int code ;	106:4:2740:2748	11105157	2	True				
ANR	11105172	IdentifierDecl	code		11105157	0					
ANR	11105173	IdentifierDeclType	int		11105157	0					
ANR	11105174	Identifier	code		11105157	1					
ANR	11105175	ExpressionStatement	check_op ( 2 )	108:4:2755:2766	11105157	3	True				
ANR	11105176	CallExpression	check_op ( 2 )		11105157	0					
ANR	11105177	Callee	check_op		11105157	0					
ANR	11105178	Identifier	check_op		11105157	0					
ANR	11105179	ArgumentList	2		11105157	1					
ANR	11105180	Argument	2		11105157	0					
ANR	11105181	PrimaryExpression	2		11105157	0					
ANR	11105182	ExpressionStatement	"code = rl_setup ( op - 1 , & state . EndOfData )"	109:4:2772:2813	11105157	4	True				
ANR	11105183	AssignmentExpression	"code = rl_setup ( op - 1 , & state . EndOfData )"		11105157	0		=			
ANR	11105184	Identifier	code		11105157	0					
ANR	11105185	CallExpression	"rl_setup ( op - 1 , & state . EndOfData )"		11105157	1					
ANR	11105186	Callee	rl_setup		11105157	0					
ANR	11105187	Identifier	rl_setup		11105157	0					
ANR	11105188	ArgumentList	op - 1		11105157	1					
ANR	11105189	Argument	op - 1		11105157	0					
ANR	11105190	AdditiveExpression	op - 1		11105157	0		-			
ANR	11105191	Identifier	op		11105157	0					
ANR	11105192	PrimaryExpression	1		11105157	1					
ANR	11105193	Argument	& state . EndOfData		11105157	1					
ANR	11105194	UnaryOperationExpression	& state . EndOfData		11105157	0					
ANR	11105195	UnaryOperator	&		11105157	0					
ANR	11105196	MemberAccess	state . EndOfData		11105157	1					
ANR	11105197	Identifier	state		11105157	0					
ANR	11105198	Identifier	EndOfData		11105157	1					
ANR	11105199	IfStatement	if ( code < 0 )		11105157	5					
ANR	11105200	Condition	code < 0	110:8:2823:2830	11105157	0	True				
ANR	11105201	RelationalExpression	code < 0		11105157	0		<			
ANR	11105202	Identifier	code		11105157	0					
ANR	11105203	PrimaryExpression	0		11105157	1					
ANR	11105204	ReturnStatement	return code ;	111:8:2841:2852	11105157	1	True				
ANR	11105205	Identifier	code		11105157	0					
ANR	11105206	ExpressionStatement	"check_int_leu ( * op , max_uint )"	112:4:2858:2886	11105157	6	True				
ANR	11105207	CallExpression	"check_int_leu ( * op , max_uint )"		11105157	0					
ANR	11105208	Callee	check_int_leu		11105157	0					
ANR	11105209	Identifier	check_int_leu		11105157	0					
ANR	11105210	ArgumentList	* op		11105157	1					
ANR	11105211	Argument	* op		11105157	0					
ANR	11105212	UnaryOperationExpression	* op		11105157	0					
ANR	11105213	UnaryOperator	*		11105157	0					
ANR	11105214	Identifier	op		11105157	1					
ANR	11105215	Argument	max_uint		11105157	1					
ANR	11105216	Identifier	max_uint		11105157	0					
ANR	11105217	ExpressionStatement	state . record_size = op -> value . intval	113:4:2892:2928	11105157	7	True				
ANR	11105218	AssignmentExpression	state . record_size = op -> value . intval		11105157	0		=			
ANR	11105219	MemberAccess	state . record_size		11105157	0					
ANR	11105220	Identifier	state		11105157	0					
ANR	11105221	Identifier	record_size		11105157	1					
ANR	11105222	MemberAccess	op -> value . intval		11105157	1					
ANR	11105223	PtrMemberAccess	op -> value		11105157	0					
ANR	11105224	Identifier	op		11105157	0					
ANR	11105225	Identifier	value		11105157	1					
ANR	11105226	Identifier	intval		11105157	1					
ANR	11105227	ReturnStatement	"return filter_write ( i_ctx_p , 1 , & s_RLE_template , ( stream_state * ) & state , 0 ) ;"	114:4:2934:3011	11105157	8	True				
ANR	11105228	CallExpression	"filter_write ( i_ctx_p , 1 , & s_RLE_template , ( stream_state * ) & state , 0 )"		11105157	0					
ANR	11105229	Callee	filter_write		11105157	0					
ANR	11105230	Identifier	filter_write		11105157	0					
ANR	11105231	ArgumentList	i_ctx_p		11105157	1					
ANR	11105232	Argument	i_ctx_p		11105157	0					
ANR	11105233	Identifier	i_ctx_p		11105157	0					
ANR	11105234	Argument	1		11105157	1					
ANR	11105235	PrimaryExpression	1		11105157	0					
ANR	11105236	Argument	& s_RLE_template		11105157	2					
ANR	11105237	UnaryOperationExpression	& s_RLE_template		11105157	0					
ANR	11105238	UnaryOperator	&		11105157	0					
ANR	11105239	Identifier	s_RLE_template		11105157	1					
ANR	11105240	Argument	( stream_state * ) & state		11105157	3					
ANR	11105241	CastExpression	( stream_state * ) & state		11105157	0					
ANR	11105242	CastTarget	stream_state *		11105157	0					
ANR	11105243	UnaryOperationExpression	& state		11105157	1					
ANR	11105244	UnaryOperator	&		11105157	0					
ANR	11105245	Identifier	state		11105157	1					
ANR	11105246	Argument	0		11105157	4					
ANR	11105247	PrimaryExpression	0		11105157	0					
ANR	11105248	ReturnType	static int		11105157	1					
ANR	11105249	Identifier	zRLE		11105157	2					
ANR	11105250	ParameterList	i_ctx_t * i_ctx_p		11105157	3					
ANR	11105251	Parameter	i_ctx_t * i_ctx_p	102:5:2667:2682	11105157	0	True				
ANR	11105252	ParameterType	i_ctx_t *		11105157	0					
ANR	11105253	Identifier	i_ctx_p		11105157	1					
ANR	11105254	CFGEntryNode	ENTRY		11105157		True				
ANR	11105255	CFGExitNode	EXIT		11105157		True				
ANR	11105256	Symbol	op		11105157						
ANR	11105257	Symbol	code		11105157						
ANR	11105258	Symbol	* op		11105157						
ANR	11105259	Symbol	state . record_size		11105157						
ANR	11105260	Symbol	& state		11105157						
ANR	11105261	Symbol	max_uint		11105157						
ANR	11105262	Symbol	osp		11105157						
ANR	11105263	Symbol	& state . EndOfData		11105157						
ANR	11105264	Symbol	i_ctx_p		11105157						
ANR	11105265	Symbol	op -> value		11105157						
ANR	11105266	Symbol	filter_write		11105157						
ANR	11105267	Symbol	& s_RLE_template		11105157						
ANR	11105268	Symbol	state		11105157						
ANR	11105269	Symbol	op -> value . intval		11105157						
ANR	11105270	Symbol	rl_setup		11105157						
ANR	11105271	Function	zRLD	119:0:3113:3367							
ANR	11105272	FunctionDef	zRLD (i_ctx_t * i_ctx_p)		11105271	0					
ANR	11105273	CompoundStatement		121:0:3147:3367	11105271	0					
ANR	11105274	IdentifierDeclStatement	os_ptr op = osp ;	122:4:3153:3168	11105271	0	True				
ANR	11105275	IdentifierDecl	op = osp		11105271	0					
ANR	11105276	IdentifierDeclType	os_ptr		11105271	0					
ANR	11105277	Identifier	op		11105271	1					
ANR	11105278	AssignmentExpression	op = osp		11105271	2		=			
ANR	11105279	Identifier	osp		11105271	0					
ANR	11105280	Identifier	osp		11105271	1					
ANR	11105281	IdentifierDeclStatement	stream_RLD_state state ;	123:4:3174:3196	11105271	1	True				
ANR	11105282	IdentifierDecl	state		11105271	0					
ANR	11105283	IdentifierDeclType	stream_RLD_state		11105271	0					
ANR	11105284	Identifier	state		11105271	1					
ANR	11105285	IdentifierDeclStatement	"int code = rl_setup ( op , & state . EndOfData ) ;"	124:4:3202:3243	11105271	2	True				
ANR	11105286	IdentifierDecl	"code = rl_setup ( op , & state . EndOfData )"		11105271	0					
ANR	11105287	IdentifierDeclType	int		11105271	0					
ANR	11105288	Identifier	code		11105271	1					
ANR	11105289	AssignmentExpression	"code = rl_setup ( op , & state . EndOfData )"		11105271	2		=			
ANR	11105290	Identifier	code		11105271	0					
ANR	11105291	CallExpression	"rl_setup ( op , & state . EndOfData )"		11105271	1					
ANR	11105292	Callee	rl_setup		11105271	0					
ANR	11105293	Identifier	rl_setup		11105271	0					
ANR	11105294	ArgumentList	op		11105271	1					
ANR	11105295	Argument	op		11105271	0					
ANR	11105296	Identifier	op		11105271	0					
ANR	11105297	Argument	& state . EndOfData		11105271	1					
ANR	11105298	UnaryOperationExpression	& state . EndOfData		11105271	0					
ANR	11105299	UnaryOperator	&		11105271	0					
ANR	11105300	MemberAccess	state . EndOfData		11105271	1					
ANR	11105301	Identifier	state		11105271	0					
ANR	11105302	Identifier	EndOfData		11105271	1					
ANR	11105303	IfStatement	if ( code < 0 )		11105271	3					
ANR	11105304	Condition	code < 0	126:8:3254:3261	11105271	0	True				
ANR	11105305	RelationalExpression	code < 0		11105271	0		<			
ANR	11105306	Identifier	code		11105271	0					
ANR	11105307	PrimaryExpression	0		11105271	1					
ANR	11105308	ReturnStatement	return code ;	127:8:3272:3283	11105271	1	True				
ANR	11105309	Identifier	code		11105271	0					
ANR	11105310	ReturnStatement	"return filter_read ( i_ctx_p , 0 , & s_RLD_template , ( stream_state * ) & state , 0 ) ;"	128:4:3289:3365	11105271	4	True				
ANR	11105311	CallExpression	"filter_read ( i_ctx_p , 0 , & s_RLD_template , ( stream_state * ) & state , 0 )"		11105271	0					
ANR	11105312	Callee	filter_read		11105271	0					
ANR	11105313	Identifier	filter_read		11105271	0					
ANR	11105314	ArgumentList	i_ctx_p		11105271	1					
ANR	11105315	Argument	i_ctx_p		11105271	0					
ANR	11105316	Identifier	i_ctx_p		11105271	0					
ANR	11105317	Argument	0		11105271	1					
ANR	11105318	PrimaryExpression	0		11105271	0					
ANR	11105319	Argument	& s_RLD_template		11105271	2					
ANR	11105320	UnaryOperationExpression	& s_RLD_template		11105271	0					
ANR	11105321	UnaryOperator	&		11105271	0					
ANR	11105322	Identifier	s_RLD_template		11105271	1					
ANR	11105323	Argument	( stream_state * ) & state		11105271	3					
ANR	11105324	CastExpression	( stream_state * ) & state		11105271	0					
ANR	11105325	CastTarget	stream_state *		11105271	0					
ANR	11105326	UnaryOperationExpression	& state		11105271	1					
ANR	11105327	UnaryOperator	&		11105271	0					
ANR	11105328	Identifier	state		11105271	1					
ANR	11105329	Argument	0		11105271	4					
ANR	11105330	PrimaryExpression	0		11105271	0					
ANR	11105331	ReturnType	static int		11105271	1					
ANR	11105332	Identifier	zRLD		11105271	2					
ANR	11105333	ParameterList	i_ctx_t * i_ctx_p		11105271	3					
ANR	11105334	Parameter	i_ctx_t * i_ctx_p	120:5:3129:3144	11105271	0	True				
ANR	11105335	ParameterType	i_ctx_t *		11105271	0					
ANR	11105336	Identifier	i_ctx_p		11105271	1					
ANR	11105337	CFGEntryNode	ENTRY		11105271		True				
ANR	11105338	CFGExitNode	EXIT		11105271		True				
ANR	11105339	Symbol	op		11105271						
ANR	11105340	Symbol	code		11105271						
ANR	11105341	Symbol	& state		11105271						
ANR	11105342	Symbol	i_ctx_p		11105271						
ANR	11105343	Symbol	& s_RLD_template		11105271						
ANR	11105344	Symbol	state		11105271						
ANR	11105345	Symbol	osp		11105271						
ANR	11105346	Symbol	& state . EndOfData		11105271						
ANR	11105347	Symbol	filter_read		11105271						
ANR	11105348	Symbol	rl_setup		11105271						
ANR	11105349	Function	pwg_setup	131:0:3370:3975							
ANR	11105350	FunctionDef	"pwg_setup (os_ptr dop , int * width , int * bpp)"		11105349	0					
ANR	11105351	CompoundStatement		133:0:3425:3975	11105349	0					
ANR	11105352	IfStatement	"if ( r_has_type ( dop , t_dictionary ) )"		11105349	0					
ANR	11105353	Condition	"r_has_type ( dop , t_dictionary )"	134:8:3435:3463	11105349	0	True				
ANR	11105354	CallExpression	"r_has_type ( dop , t_dictionary )"		11105349	0					
ANR	11105355	Callee	r_has_type		11105349	0					
ANR	11105356	Identifier	r_has_type		11105349	0					
ANR	11105357	ArgumentList	dop		11105349	1					
ANR	11105358	Argument	dop		11105349	0					
ANR	11105359	Identifier	dop		11105349	0					
ANR	11105360	Argument	t_dictionary		11105349	1					
ANR	11105361	Identifier	t_dictionary		11105349	0					
ANR	11105362	CompoundStatement		3:8:50:58	11105349	1					
ANR	11105363	IdentifierDeclStatement	int code ;	135:8:3476:3484	11105349	0	True				
ANR	11105364	IdentifierDecl	code		11105349	0					
ANR	11105365	IdentifierDeclType	int		11105349	0					
ANR	11105366	Identifier	code		11105349	1					
ANR	11105367	ExpressionStatement	check_dict_read ( * dop )	137:8:3495:3516	11105349	1	True				
ANR	11105368	CallExpression	check_dict_read ( * dop )		11105349	0					
ANR	11105369	Callee	check_dict_read		11105349	0					
ANR	11105370	Identifier	check_dict_read		11105349	0					
ANR	11105371	ArgumentList	* dop		11105349	1					
ANR	11105372	Argument	* dop		11105349	0					
ANR	11105373	UnaryOperationExpression	* dop		11105349	0					
ANR	11105374	UnaryOperator	*		11105349	0					
ANR	11105375	Identifier	dop		11105349	1					
ANR	11105376	IfStatement	"if ( ( code = dict_int_param ( dop , ""Width"" , 1 , max_int , PWG_default_width , width ) ) < 0 )"		11105349	2					
ANR	11105377	Condition	"( code = dict_int_param ( dop , ""Width"" , 1 , max_int , PWG_default_width , width ) ) < 0"	138:12:3530:3608	11105349	0	True				
ANR	11105378	RelationalExpression	"( code = dict_int_param ( dop , ""Width"" , 1 , max_int , PWG_default_width , width ) ) < 0"		11105349	0		<			
ANR	11105379	AssignmentExpression	"code = dict_int_param ( dop , ""Width"" , 1 , max_int , PWG_default_width , width )"		11105349	0		=			
ANR	11105380	Identifier	code		11105349	0					
ANR	11105381	CallExpression	"dict_int_param ( dop , ""Width"" , 1 , max_int , PWG_default_width , width )"		11105349	1					
ANR	11105382	Callee	dict_int_param		11105349	0					
ANR	11105383	Identifier	dict_int_param		11105349	0					
ANR	11105384	ArgumentList	dop		11105349	1					
ANR	11105385	Argument	dop		11105349	0					
ANR	11105386	Identifier	dop		11105349	0					
ANR	11105387	Argument	"""Width"""		11105349	1					
ANR	11105388	PrimaryExpression	"""Width"""		11105349	0					
ANR	11105389	Argument	1		11105349	2					
ANR	11105390	PrimaryExpression	1		11105349	0					
ANR	11105391	Argument	max_int		11105349	3					
ANR	11105392	Identifier	max_int		11105349	0					
ANR	11105393	Argument	PWG_default_width		11105349	4					
ANR	11105394	Identifier	PWG_default_width		11105349	0					
ANR	11105395	Argument	width		11105349	5					
ANR	11105396	Identifier	width		11105349	0					
ANR	11105397	PrimaryExpression	0		11105349	1					
ANR	11105398	ReturnStatement	return code ;	139:12:3623:3634	11105349	1	True				
ANR	11105399	Identifier	code		11105349	0					
ANR	11105400	IfStatement	"if ( ( code = dict_int_param ( dop , ""BPP"" , 1 , 120 , PWG_default_bpp , bpp ) ) < 0 )"		11105349	3					
ANR	11105401	Condition	"( code = dict_int_param ( dop , ""BPP"" , 1 , 120 , PWG_default_bpp , bpp ) ) < 0"	140:12:3648:3716	11105349	0	True				
ANR	11105402	RelationalExpression	"( code = dict_int_param ( dop , ""BPP"" , 1 , 120 , PWG_default_bpp , bpp ) ) < 0"		11105349	0		<			
ANR	11105403	AssignmentExpression	"code = dict_int_param ( dop , ""BPP"" , 1 , 120 , PWG_default_bpp , bpp )"		11105349	0		=			
ANR	11105404	Identifier	code		11105349	0					
ANR	11105405	CallExpression	"dict_int_param ( dop , ""BPP"" , 1 , 120 , PWG_default_bpp , bpp )"		11105349	1					
ANR	11105406	Callee	dict_int_param		11105349	0					
ANR	11105407	Identifier	dict_int_param		11105349	0					
ANR	11105408	ArgumentList	dop		11105349	1					
ANR	11105409	Argument	dop		11105349	0					
ANR	11105410	Identifier	dop		11105349	0					
ANR	11105411	Argument	"""BPP"""		11105349	1					
ANR	11105412	PrimaryExpression	"""BPP"""		11105349	0					
ANR	11105413	Argument	1		11105349	2					
ANR	11105414	PrimaryExpression	1		11105349	0					
ANR	11105415	Argument	120		11105349	3					
ANR	11105416	PrimaryExpression	120		11105349	0					
ANR	11105417	Argument	PWG_default_bpp		11105349	4					
ANR	11105418	Identifier	PWG_default_bpp		11105349	0					
ANR	11105419	Argument	bpp		11105349	5					
ANR	11105420	Identifier	bpp		11105349	0					
ANR	11105421	PrimaryExpression	0		11105349	1					
ANR	11105422	ReturnStatement	return code ;	141:12:3731:3742	11105349	1	True				
ANR	11105423	Identifier	code		11105349	0					
ANR	11105424	IfStatement	if ( * bpp != 1 && * bpp != 2 && * bpp != 4 && ( * bpp & 7 ) != 0 )		11105349	4					
ANR	11105425	Condition	* bpp != 1 && * bpp != 2 && * bpp != 4 && ( * bpp & 7 ) != 0	142:12:3756:3809	11105349	0	True				
ANR	11105426	AndExpression	* bpp != 1 && * bpp != 2 && * bpp != 4 && ( * bpp & 7 ) != 0		11105349	0		&&			
ANR	11105427	EqualityExpression	* bpp != 1		11105349	0		!=			
ANR	11105428	UnaryOperationExpression	* bpp		11105349	0					
ANR	11105429	UnaryOperator	*		11105349	0					
ANR	11105430	Identifier	bpp		11105349	1					
ANR	11105431	PrimaryExpression	1		11105349	1					
ANR	11105432	AndExpression	* bpp != 2 && * bpp != 4 && ( * bpp & 7 ) != 0		11105349	1		&&			
ANR	11105433	EqualityExpression	* bpp != 2		11105349	0		!=			
ANR	11105434	UnaryOperationExpression	* bpp		11105349	0					
ANR	11105435	UnaryOperator	*		11105349	0					
ANR	11105436	Identifier	bpp		11105349	1					
ANR	11105437	PrimaryExpression	2		11105349	1					
ANR	11105438	AndExpression	* bpp != 4 && ( * bpp & 7 ) != 0		11105349	1		&&			
ANR	11105439	EqualityExpression	* bpp != 4		11105349	0		!=			
ANR	11105440	UnaryOperationExpression	* bpp		11105349	0					
ANR	11105441	UnaryOperator	*		11105349	0					
ANR	11105442	Identifier	bpp		11105349	1					
ANR	11105443	PrimaryExpression	4		11105349	1					
ANR	11105444	EqualityExpression	( * bpp & 7 ) != 0		11105349	1		!=			
ANR	11105445	BitAndExpression	* bpp & 7		11105349	0		&			
ANR	11105446	UnaryOperationExpression	* bpp		11105349	0					
ANR	11105447	UnaryOperator	*		11105349	0					
ANR	11105448	Identifier	bpp		11105349	1					
ANR	11105449	PrimaryExpression	7		11105349	1					
ANR	11105450	PrimaryExpression	0		11105349	1					
ANR	11105451	ReturnStatement	return gs_error_rangecheck ;	143:12:3824:3850	11105349	1	True				
ANR	11105452	Identifier	gs_error_rangecheck		11105349	0					
ANR	11105453	ReturnStatement	return 1 ;	144:8:3860:3868	11105349	5	True				
ANR	11105454	PrimaryExpression	1		11105349	0					
ANR	11105455	ElseStatement	else		11105349	0					
ANR	11105456	CompoundStatement		13:11:455:455	11105349	0					
ANR	11105457	ExpressionStatement	* width = PWG_default_width	146:8:3891:3917	11105349	0	True				
ANR	11105458	AssignmentExpression	* width = PWG_default_width		11105349	0		=			
ANR	11105459	UnaryOperationExpression	* width		11105349	0					
ANR	11105460	UnaryOperator	*		11105349	0					
ANR	11105461	Identifier	width		11105349	1					
ANR	11105462	Identifier	PWG_default_width		11105349	1					
ANR	11105463	ExpressionStatement	* bpp = PWG_default_bpp	147:8:3927:3949	11105349	1	True				
ANR	11105464	AssignmentExpression	* bpp = PWG_default_bpp		11105349	0		=			
ANR	11105465	UnaryOperationExpression	* bpp		11105349	0					
ANR	11105466	UnaryOperator	*		11105349	0					
ANR	11105467	Identifier	bpp		11105349	1					
ANR	11105468	Identifier	PWG_default_bpp		11105349	1					
ANR	11105469	ReturnStatement	return 0 ;	148:8:3959:3967	11105349	2	True				
ANR	11105470	PrimaryExpression	0		11105349	0					
ANR	11105471	ReturnType	static int		11105349	1					
ANR	11105472	Identifier	pwg_setup		11105349	2					
ANR	11105473	ParameterList	"os_ptr dop , int * width , int * bpp"		11105349	3					
ANR	11105474	Parameter	os_ptr dop	132:10:3391:3400	11105349	0	True				
ANR	11105475	ParameterType	os_ptr		11105349	0					
ANR	11105476	Identifier	dop		11105349	1					
ANR	11105477	Parameter	int * width	132:22:3403:3412	11105349	1	True				
ANR	11105478	ParameterType	int *		11105349	0					
ANR	11105479	Identifier	width		11105349	1					
ANR	11105480	Parameter	int * bpp	132:34:3415:3422	11105349	2	True				
ANR	11105481	ParameterType	int *		11105349	0					
ANR	11105482	Identifier	bpp		11105349	1					
ANR	11105483	CFGEntryNode	ENTRY		11105349		True				
ANR	11105484	CFGExitNode	EXIT		11105349		True				
ANR	11105485	Symbol	max_int		11105349						
ANR	11105486	Symbol	bpp		11105349						
ANR	11105487	Symbol	t_dictionary		11105349						
ANR	11105488	Symbol	code		11105349						
ANR	11105489	Symbol	dop		11105349						
ANR	11105490	Symbol	gs_error_rangecheck		11105349						
ANR	11105491	Symbol	PWG_default_bpp		11105349						
ANR	11105492	Symbol	* width		11105349						
ANR	11105493	Symbol	* dop		11105349						
ANR	11105494	Symbol	r_has_type		11105349						
ANR	11105495	Symbol	PWG_default_width		11105349						
ANR	11105496	Symbol	* bpp		11105349						
ANR	11105497	Symbol	width		11105349						
ANR	11105498	Symbol	dict_int_param		11105349						
ANR	11105499	Function	zPWGD	153:0:4024:4402							
ANR	11105500	FunctionDef	zPWGD (i_ctx_t * i_ctx_p)		11105499	0					
ANR	11105501	CompoundStatement		155:0:4059:4402	11105499	0					
ANR	11105502	IdentifierDeclStatement	os_ptr op = osp ;	156:4:4065:4080	11105499	0	True				
ANR	11105503	IdentifierDecl	op = osp		11105499	0					
ANR	11105504	IdentifierDeclType	os_ptr		11105499	0					
ANR	11105505	Identifier	op		11105499	1					
ANR	11105506	AssignmentExpression	op = osp		11105499	2		=			
ANR	11105507	Identifier	osp		11105499	0					
ANR	11105508	Identifier	osp		11105499	1					
ANR	11105509	IdentifierDeclStatement	stream_PWGD_state state ;	157:4:4086:4109	11105499	1	True				
ANR	11105510	IdentifierDecl	state		11105499	0					
ANR	11105511	IdentifierDeclType	stream_PWGD_state		11105499	0					
ANR	11105512	Identifier	state		11105499	1					
ANR	11105513	IdentifierDeclStatement	int code ;	158:4:4115:4123	11105499	2	True				
ANR	11105514	IdentifierDecl	code		11105499	0					
ANR	11105515	IdentifierDeclType	int		11105499	0					
ANR	11105516	Identifier	code		11105499	1					
ANR	11105517	IfStatement	if ( s_PWGD_template . set_defaults )		11105499	3					
ANR	11105518	Condition	s_PWGD_template . set_defaults	160:8:4134:4161	11105499	0	True				
ANR	11105519	MemberAccess	s_PWGD_template . set_defaults		11105499	0					
ANR	11105520	Identifier	s_PWGD_template		11105499	0					
ANR	11105521	Identifier	set_defaults		11105499	1					
ANR	11105522	ExpressionStatement	s_PWGD_template . set_defaults ( ( stream_state * ) & state )	161:8:4172:4224	11105499	1	True				
ANR	11105523	CallExpression	s_PWGD_template . set_defaults ( ( stream_state * ) & state )		11105499	0					
ANR	11105524	Callee	s_PWGD_template . set_defaults		11105499	0					
ANR	11105525	MemberAccess	s_PWGD_template . set_defaults		11105499	0					
ANR	11105526	Identifier	s_PWGD_template		11105499	0					
ANR	11105527	Identifier	set_defaults		11105499	1					
ANR	11105528	ArgumentList	( stream_state * ) & state		11105499	1					
ANR	11105529	Argument	( stream_state * ) & state		11105499	0					
ANR	11105530	CastExpression	( stream_state * ) & state		11105499	0					
ANR	11105531	CastTarget	stream_state *		11105499	0					
ANR	11105532	UnaryOperationExpression	& state		11105499	1					
ANR	11105533	UnaryOperator	&		11105499	0					
ANR	11105534	Identifier	state		11105499	1					
ANR	11105535	ExpressionStatement	"code = pwg_setup ( op , & state . width , & state . bpp )"	163:4:4231:4277	11105499	4	True				
ANR	11105536	AssignmentExpression	"code = pwg_setup ( op , & state . width , & state . bpp )"		11105499	0		=			
ANR	11105537	Identifier	code		11105499	0					
ANR	11105538	CallExpression	"pwg_setup ( op , & state . width , & state . bpp )"		11105499	1					
ANR	11105539	Callee	pwg_setup		11105499	0					
ANR	11105540	Identifier	pwg_setup		11105499	0					
ANR	11105541	ArgumentList	op		11105499	1					
ANR	11105542	Argument	op		11105499	0					
ANR	11105543	Identifier	op		11105499	0					
ANR	11105544	Argument	& state . width		11105499	1					
ANR	11105545	UnaryOperationExpression	& state . width		11105499	0					
ANR	11105546	UnaryOperator	&		11105499	0					
ANR	11105547	MemberAccess	state . width		11105499	1					
ANR	11105548	Identifier	state		11105499	0					
ANR	11105549	Identifier	width		11105499	1					
ANR	11105550	Argument	& state . bpp		11105499	2					
ANR	11105551	UnaryOperationExpression	& state . bpp		11105499	0					
ANR	11105552	UnaryOperator	&		11105499	0					
ANR	11105553	MemberAccess	state . bpp		11105499	1					
ANR	11105554	Identifier	state		11105499	0					
ANR	11105555	Identifier	bpp		11105499	1					
ANR	11105556	IfStatement	if ( code < 0 )		11105499	5					
ANR	11105557	Condition	code < 0	164:8:4287:4294	11105499	0	True				
ANR	11105558	RelationalExpression	code < 0		11105499	0		<			
ANR	11105559	Identifier	code		11105499	0					
ANR	11105560	PrimaryExpression	0		11105499	1					
ANR	11105561	ReturnStatement	return code ;	165:8:4305:4316	11105499	1	True				
ANR	11105562	Identifier	code		11105499	0					
ANR	11105563	ReturnStatement	"return filter_read ( i_ctx_p , 0 , & s_PWGD_template , ( stream_state * ) & state , 0 ) ;"	167:4:4323:4400	11105499	6	True				
ANR	11105564	CallExpression	"filter_read ( i_ctx_p , 0 , & s_PWGD_template , ( stream_state * ) & state , 0 )"		11105499	0					
ANR	11105565	Callee	filter_read		11105499	0					
ANR	11105566	Identifier	filter_read		11105499	0					
ANR	11105567	ArgumentList	i_ctx_p		11105499	1					
ANR	11105568	Argument	i_ctx_p		11105499	0					
ANR	11105569	Identifier	i_ctx_p		11105499	0					
ANR	11105570	Argument	0		11105499	1					
ANR	11105571	PrimaryExpression	0		11105499	0					
ANR	11105572	Argument	& s_PWGD_template		11105499	2					
ANR	11105573	UnaryOperationExpression	& s_PWGD_template		11105499	0					
ANR	11105574	UnaryOperator	&		11105499	0					
ANR	11105575	Identifier	s_PWGD_template		11105499	1					
ANR	11105576	Argument	( stream_state * ) & state		11105499	3					
ANR	11105577	CastExpression	( stream_state * ) & state		11105499	0					
ANR	11105578	CastTarget	stream_state *		11105499	0					
ANR	11105579	UnaryOperationExpression	& state		11105499	1					
ANR	11105580	UnaryOperator	&		11105499	0					
ANR	11105581	Identifier	state		11105499	1					
ANR	11105582	Argument	0		11105499	4					
ANR	11105583	PrimaryExpression	0		11105499	0					
ANR	11105584	ReturnType	static int		11105499	1					
ANR	11105585	Identifier	zPWGD		11105499	2					
ANR	11105586	ParameterList	i_ctx_t * i_ctx_p		11105499	3					
ANR	11105587	Parameter	i_ctx_t * i_ctx_p	154:6:4041:4056	11105499	0	True				
ANR	11105588	ParameterType	i_ctx_t *		11105499	0					
ANR	11105589	Identifier	i_ctx_p		11105499	1					
ANR	11105590	CFGEntryNode	ENTRY		11105499		True				
ANR	11105591	CFGExitNode	EXIT		11105499		True				
ANR	11105592	Symbol	pwg_setup		11105499						
ANR	11105593	Symbol	op		11105499						
ANR	11105594	Symbol	code		11105499						
ANR	11105595	Symbol	& state		11105499						
ANR	11105596	Symbol	s_PWGD_template . set_defaults		11105499						
ANR	11105597	Symbol	osp		11105499						
ANR	11105598	Symbol	& state . bpp		11105499						
ANR	11105599	Symbol	filter_read		11105499						
ANR	11105600	Symbol	i_ctx_p		11105499						
ANR	11105601	Symbol	s_PWGD_template		11105499						
ANR	11105602	Symbol	& state . width		11105499						
ANR	11105603	Symbol	state		11105499						
ANR	11105604	Symbol	& s_PWGD_template		11105499						
ANR	11105605	Function	zSFD	173:0:4610:5893							
ANR	11105606	FunctionDef	zSFD (i_ctx_t * i_ctx_p)		11105605	0					
ANR	11105607	CompoundStatement		175:0:4668:5893	11105605	0					
ANR	11105608	IdentifierDeclStatement	os_ptr op = osp ;	176:4:4674:4689	11105605	0	True				
ANR	11105609	IdentifierDecl	op = osp		11105605	0					
ANR	11105610	IdentifierDeclType	os_ptr		11105605	0					
ANR	11105611	Identifier	op		11105605	1					
ANR	11105612	AssignmentExpression	op = osp		11105605	2		=			
ANR	11105613	Identifier	osp		11105605	0					
ANR	11105614	Identifier	osp		11105605	1					
ANR	11105615	IdentifierDeclStatement	stream_SFD_state state ;	177:4:4695:4717	11105605	1	True				
ANR	11105616	IdentifierDecl	state		11105605	0					
ANR	11105617	IdentifierDeclType	stream_SFD_state		11105605	0					
ANR	11105618	Identifier	state		11105605	1					
ANR	11105619	IdentifierDeclStatement	ref * sop = op ;	178:4:4723:4736	11105605	2	True				
ANR	11105620	IdentifierDecl	* sop = op		11105605	0					
ANR	11105621	IdentifierDeclType	ref *		11105605	0					
ANR	11105622	Identifier	sop		11105605	1					
ANR	11105623	AssignmentExpression	* sop = op		11105605	2		=			
ANR	11105624	Identifier	op		11105605	0					
ANR	11105625	Identifier	op		11105605	1					
ANR	11105626	IdentifierDeclStatement	int npop ;	179:4:4742:4750	11105605	3	True				
ANR	11105627	IdentifierDecl	npop		11105605	0					
ANR	11105628	IdentifierDeclType	int		11105605	0					
ANR	11105629	Identifier	npop		11105605	1					
ANR	11105630	IfStatement	if ( s_SFD_template . set_defaults )		11105605	4					
ANR	11105631	Condition	s_SFD_template . set_defaults	181:8:4761:4787	11105605	0	True				
ANR	11105632	MemberAccess	s_SFD_template . set_defaults		11105605	0					
ANR	11105633	Identifier	s_SFD_template		11105605	0					
ANR	11105634	Identifier	set_defaults		11105605	1					
ANR	11105635	ExpressionStatement	s_SFD_template . set_defaults ( ( stream_state * ) & state )	182:8:4798:4849	11105605	1	True				
ANR	11105636	CallExpression	s_SFD_template . set_defaults ( ( stream_state * ) & state )		11105605	0					
ANR	11105637	Callee	s_SFD_template . set_defaults		11105605	0					
ANR	11105638	MemberAccess	s_SFD_template . set_defaults		11105605	0					
ANR	11105639	Identifier	s_SFD_template		11105605	0					
ANR	11105640	Identifier	set_defaults		11105605	1					
ANR	11105641	ArgumentList	( stream_state * ) & state		11105605	1					
ANR	11105642	Argument	( stream_state * ) & state		11105605	0					
ANR	11105643	CastExpression	( stream_state * ) & state		11105605	0					
ANR	11105644	CastTarget	stream_state *		11105605	0					
ANR	11105645	UnaryOperationExpression	& state		11105605	1					
ANR	11105646	UnaryOperator	&		11105605	0					
ANR	11105647	Identifier	state		11105605	1					
ANR	11105648	IfStatement	"if ( LL3_ENABLED && r_has_type ( op , t_dictionary ) )"		11105605	5					
ANR	11105649	Condition	"LL3_ENABLED && r_has_type ( op , t_dictionary )"	183:8:4859:4901	11105605	0	True				
ANR	11105650	AndExpression	"LL3_ENABLED && r_has_type ( op , t_dictionary )"		11105605	0		&&			
ANR	11105651	Identifier	LL3_ENABLED		11105605	0					
ANR	11105652	CallExpression	"r_has_type ( op , t_dictionary )"		11105605	1					
ANR	11105653	Callee	r_has_type		11105605	0					
ANR	11105654	Identifier	r_has_type		11105605	0					
ANR	11105655	ArgumentList	op		11105605	1					
ANR	11105656	Argument	op		11105605	0					
ANR	11105657	Identifier	op		11105605	0					
ANR	11105658	Argument	t_dictionary		11105605	1					
ANR	11105659	Identifier	t_dictionary		11105605	0					
ANR	11105660	CompoundStatement		11:8:264:272	11105605	1					
ANR	11105661	IdentifierDeclStatement	int count ;	184:8:4914:4923	11105605	0	True				
ANR	11105662	IdentifierDecl	count		11105605	0					
ANR	11105663	IdentifierDeclType	int		11105605	0					
ANR	11105664	Identifier	count		11105605	1					
ANR	11105665	IdentifierDeclStatement	int code ;	185:8:4933:4941	11105605	1	True				
ANR	11105666	IdentifierDecl	code		11105605	0					
ANR	11105667	IdentifierDeclType	int		11105605	0					
ANR	11105668	Identifier	code		11105605	1					
ANR	11105669	ExpressionStatement	check_dict_read ( * op )	187:8:4952:4972	11105605	2	True				
ANR	11105670	CallExpression	check_dict_read ( * op )		11105605	0					
ANR	11105671	Callee	check_dict_read		11105605	0					
ANR	11105672	Identifier	check_dict_read		11105605	0					
ANR	11105673	ArgumentList	* op		11105605	1					
ANR	11105674	Argument	* op		11105605	0					
ANR	11105675	UnaryOperationExpression	* op		11105605	0					
ANR	11105676	UnaryOperator	*		11105605	0					
ANR	11105677	Identifier	op		11105605	1					
ANR	11105678	IfStatement	"if ( ( code = dict_int_param ( op , ""EODCount"" , 0 , max_int , 0 , & count ) ) < 0 )"		11105605	3					
ANR	11105679	Condition	"( code = dict_int_param ( op , ""EODCount"" , 0 , max_int , 0 , & count ) ) < 0"	193:12:5209:5274	11105605	0	True				
ANR	11105680	RelationalExpression	"( code = dict_int_param ( op , ""EODCount"" , 0 , max_int , 0 , & count ) ) < 0"		11105605	0		<			
ANR	11105681	AssignmentExpression	"code = dict_int_param ( op , ""EODCount"" , 0 , max_int , 0 , & count )"		11105605	0		=			
ANR	11105682	Identifier	code		11105605	0					
ANR	11105683	CallExpression	"dict_int_param ( op , ""EODCount"" , 0 , max_int , 0 , & count )"		11105605	1					
ANR	11105684	Callee	dict_int_param		11105605	0					
ANR	11105685	Identifier	dict_int_param		11105605	0					
ANR	11105686	ArgumentList	op		11105605	1					
ANR	11105687	Argument	op		11105605	0					
ANR	11105688	Identifier	op		11105605	0					
ANR	11105689	Argument	"""EODCount"""		11105605	1					
ANR	11105690	PrimaryExpression	"""EODCount"""		11105605	0					
ANR	11105691	Argument	0		11105605	2					
ANR	11105692	PrimaryExpression	0		11105605	0					
ANR	11105693	Argument	max_int		11105605	3					
ANR	11105694	Identifier	max_int		11105605	0					
ANR	11105695	Argument	0		11105605	4					
ANR	11105696	PrimaryExpression	0		11105605	0					
ANR	11105697	Argument	& count		11105605	5					
ANR	11105698	UnaryOperationExpression	& count		11105605	0					
ANR	11105699	UnaryOperator	&		11105605	0					
ANR	11105700	Identifier	count		11105605	1					
ANR	11105701	PrimaryExpression	0		11105605	1					
ANR	11105702	ReturnStatement	return code ;	194:12:5289:5300	11105605	1	True				
ANR	11105703	Identifier	code		11105605	0					
ANR	11105704	IfStatement	"if ( dict_find_string ( op , ""EODString"" , & sop ) <= 0 )"		11105605	4					
ANR	11105705	Condition	"dict_find_string ( op , ""EODString"" , & sop ) <= 0"	195:12:5314:5357	11105605	0	True				
ANR	11105706	RelationalExpression	"dict_find_string ( op , ""EODString"" , & sop ) <= 0"		11105605	0		<=			
ANR	11105707	CallExpression	"dict_find_string ( op , ""EODString"" , & sop )"		11105605	0					
ANR	11105708	Callee	dict_find_string		11105605	0					
ANR	11105709	Identifier	dict_find_string		11105605	0					
ANR	11105710	ArgumentList	op		11105605	1					
ANR	11105711	Argument	op		11105605	0					
ANR	11105712	Identifier	op		11105605	0					
ANR	11105713	Argument	"""EODString"""		11105605	1					
ANR	11105714	PrimaryExpression	"""EODString"""		11105605	0					
ANR	11105715	Argument	& sop		11105605	2					
ANR	11105716	UnaryOperationExpression	& sop		11105605	0					
ANR	11105717	UnaryOperator	&		11105605	0					
ANR	11105718	Identifier	sop		11105605	1					
ANR	11105719	PrimaryExpression	0		11105605	1					
ANR	11105720	ExpressionStatement	return_error ( gs_error_rangecheck )	196:12:5372:5405	11105605	1	True				
ANR	11105721	CallExpression	return_error ( gs_error_rangecheck )		11105605	0					
ANR	11105722	Callee	return_error		11105605	0					
ANR	11105723	Identifier	return_error		11105605	0					
ANR	11105724	ArgumentList	gs_error_rangecheck		11105605	1					
ANR	11105725	Argument	gs_error_rangecheck		11105605	0					
ANR	11105726	Identifier	gs_error_rangecheck		11105605	0					
ANR	11105727	ExpressionStatement	state . count = count	197:8:5415:5434	11105605	5	True				
ANR	11105728	AssignmentExpression	state . count = count		11105605	0		=			
ANR	11105729	MemberAccess	state . count		11105605	0					
ANR	11105730	Identifier	state		11105605	0					
ANR	11105731	Identifier	count		11105605	1					
ANR	11105732	Identifier	count		11105605	1					
ANR	11105733	ExpressionStatement	npop = 0	198:8:5444:5452	11105605	6	True				
ANR	11105734	AssignmentExpression	npop = 0		11105605	0		=			
ANR	11105735	Identifier	npop		11105605	0					
ANR	11105736	PrimaryExpression	0		11105605	1					
ANR	11105737	ElseStatement	else		11105605	0					
ANR	11105738	CompoundStatement		25:11:796:796	11105605	0					
ANR	11105739	ExpressionStatement	"check_type ( sop [ - 1 ] , t_integer )"	200:8:5475:5505	11105605	0	True				
ANR	11105740	CallExpression	"check_type ( sop [ - 1 ] , t_integer )"		11105605	0					
ANR	11105741	Callee	check_type		11105605	0					
ANR	11105742	Identifier	check_type		11105605	0					
ANR	11105743	ArgumentList	sop [ - 1 ]		11105605	1					
ANR	11105744	Argument	sop [ - 1 ]		11105605	0					
ANR	11105745	ArrayIndexing	sop [ - 1 ]		11105605	0					
ANR	11105746	Identifier	sop		11105605	0					
ANR	11105747	UnaryOperationExpression	- 1		11105605	1					
ANR	11105748	UnaryOperator	-		11105605	0					
ANR	11105749	PrimaryExpression	1		11105605	1					
ANR	11105750	Argument	t_integer		11105605	1					
ANR	11105751	Identifier	t_integer		11105605	0					
ANR	11105752	IfStatement	if ( sop [ - 1 ] . value . intval < 0 )		11105605	1					
ANR	11105753	Condition	sop [ - 1 ] . value . intval < 0	201:12:5519:5542	11105605	0	True				
ANR	11105754	RelationalExpression	sop [ - 1 ] . value . intval < 0		11105605	0		<			
ANR	11105755	MemberAccess	sop [ - 1 ] . value . intval		11105605	0					
ANR	11105756	MemberAccess	sop [ - 1 ] . value		11105605	0					
ANR	11105757	ArrayIndexing	sop [ - 1 ]		11105605	0					
ANR	11105758	Identifier	sop		11105605	0					
ANR	11105759	UnaryOperationExpression	- 1		11105605	1					
ANR	11105760	UnaryOperator	-		11105605	0					
ANR	11105761	PrimaryExpression	1		11105605	1					
ANR	11105762	Identifier	value		11105605	1					
ANR	11105763	Identifier	intval		11105605	1					
ANR	11105764	PrimaryExpression	0		11105605	1					
ANR	11105765	ExpressionStatement	return_error ( gs_error_rangecheck )	202:12:5557:5590	11105605	1	True				
ANR	11105766	CallExpression	return_error ( gs_error_rangecheck )		11105605	0					
ANR	11105767	Callee	return_error		11105605	0					
ANR	11105768	Identifier	return_error		11105605	0					
ANR	11105769	ArgumentList	gs_error_rangecheck		11105605	1					
ANR	11105770	Argument	gs_error_rangecheck		11105605	0					
ANR	11105771	Identifier	gs_error_rangecheck		11105605	0					
ANR	11105772	ExpressionStatement	state . count = sop [ - 1 ] . value . intval	203:8:5600:5634	11105605	2	True				
ANR	11105773	AssignmentExpression	state . count = sop [ - 1 ] . value . intval		11105605	0		=			
ANR	11105774	MemberAccess	state . count		11105605	0					
ANR	11105775	Identifier	state		11105605	0					
ANR	11105776	Identifier	count		11105605	1					
ANR	11105777	MemberAccess	sop [ - 1 ] . value . intval		11105605	1					
ANR	11105778	MemberAccess	sop [ - 1 ] . value		11105605	0					
ANR	11105779	ArrayIndexing	sop [ - 1 ]		11105605	0					
ANR	11105780	Identifier	sop		11105605	0					
ANR	11105781	UnaryOperationExpression	- 1		11105605	1					
ANR	11105782	UnaryOperator	-		11105605	0					
ANR	11105783	PrimaryExpression	1		11105605	1					
ANR	11105784	Identifier	value		11105605	1					
ANR	11105785	Identifier	intval		11105605	1					
ANR	11105786	ExpressionStatement	npop = 2	204:8:5644:5652	11105605	3	True				
ANR	11105787	AssignmentExpression	npop = 2		11105605	0		=			
ANR	11105788	Identifier	npop		11105605	0					
ANR	11105789	PrimaryExpression	2		11105605	1					
ANR	11105790	ExpressionStatement	"check_read_type ( * sop , t_string )"	206:4:5664:5695	11105605	6	True				
ANR	11105791	CallExpression	"check_read_type ( * sop , t_string )"		11105605	0					
ANR	11105792	Callee	check_read_type		11105605	0					
ANR	11105793	Identifier	check_read_type		11105605	0					
ANR	11105794	ArgumentList	* sop		11105605	1					
ANR	11105795	Argument	* sop		11105605	0					
ANR	11105796	UnaryOperationExpression	* sop		11105605	0					
ANR	11105797	UnaryOperator	*		11105605	0					
ANR	11105798	Identifier	sop		11105605	1					
ANR	11105799	Argument	t_string		11105605	1					
ANR	11105800	Identifier	t_string		11105605	0					
ANR	11105801	ExpressionStatement	state . eod . data = sop -> value . const_bytes	207:4:5701:5740	11105605	7	True				
ANR	11105802	AssignmentExpression	state . eod . data = sop -> value . const_bytes		11105605	0		=			
ANR	11105803	MemberAccess	state . eod . data		11105605	0					
ANR	11105804	MemberAccess	state . eod		11105605	0					
ANR	11105805	Identifier	state		11105605	0					
ANR	11105806	Identifier	eod		11105605	1					
ANR	11105807	Identifier	data		11105605	1					
ANR	11105808	MemberAccess	sop -> value . const_bytes		11105605	1					
ANR	11105809	PtrMemberAccess	sop -> value		11105605	0					
ANR	11105810	Identifier	sop		11105605	0					
ANR	11105811	Identifier	value		11105605	1					
ANR	11105812	Identifier	const_bytes		11105605	1					
ANR	11105813	ExpressionStatement	state . eod . size = r_size ( sop )	208:4:5746:5774	11105605	8	True				
ANR	11105814	AssignmentExpression	state . eod . size = r_size ( sop )		11105605	0		=			
ANR	11105815	MemberAccess	state . eod . size		11105605	0					
ANR	11105816	MemberAccess	state . eod		11105605	0					
ANR	11105817	Identifier	state		11105605	0					
ANR	11105818	Identifier	eod		11105605	1					
ANR	11105819	Identifier	size		11105605	1					
ANR	11105820	CallExpression	r_size ( sop )		11105605	1					
ANR	11105821	Callee	r_size		11105605	0					
ANR	11105822	Identifier	r_size		11105605	0					
ANR	11105823	ArgumentList	sop		11105605	1					
ANR	11105824	Argument	sop		11105605	0					
ANR	11105825	Identifier	sop		11105605	0					
ANR	11105826	ReturnStatement	"return filter_read ( i_ctx_p , npop , & s_SFD_template , ( stream_state * ) & state , r_space ( sop ) ) ;"	209:4:5780:5891	11105605	9	True				
ANR	11105827	CallExpression	"filter_read ( i_ctx_p , npop , & s_SFD_template , ( stream_state * ) & state , r_space ( sop ) )"		11105605	0					
ANR	11105828	Callee	filter_read		11105605	0					
ANR	11105829	Identifier	filter_read		11105605	0					
ANR	11105830	ArgumentList	i_ctx_p		11105605	1					
ANR	11105831	Argument	i_ctx_p		11105605	0					
ANR	11105832	Identifier	i_ctx_p		11105605	0					
ANR	11105833	Argument	npop		11105605	1					
ANR	11105834	Identifier	npop		11105605	0					
ANR	11105835	Argument	& s_SFD_template		11105605	2					
ANR	11105836	UnaryOperationExpression	& s_SFD_template		11105605	0					
ANR	11105837	UnaryOperator	&		11105605	0					
ANR	11105838	Identifier	s_SFD_template		11105605	1					
ANR	11105839	Argument	( stream_state * ) & state		11105605	3					
ANR	11105840	CastExpression	( stream_state * ) & state		11105605	0					
ANR	11105841	CastTarget	stream_state *		11105605	0					
ANR	11105842	UnaryOperationExpression	& state		11105605	1					
ANR	11105843	UnaryOperator	&		11105605	0					
ANR	11105844	Identifier	state		11105605	1					
ANR	11105845	Argument	r_space ( sop )		11105605	4					
ANR	11105846	CallExpression	r_space ( sop )		11105605	0					
ANR	11105847	Callee	r_space		11105605	0					
ANR	11105848	Identifier	r_space		11105605	0					
ANR	11105849	ArgumentList	sop		11105605	1					
ANR	11105850	Argument	sop		11105605	0					
ANR	11105851	Identifier	sop		11105605	0					
ANR	11105852	ReturnType	int		11105605	1					
ANR	11105853	Identifier	zSFD		11105605	2					
ANR	11105854	ParameterList	i_ctx_t * i_ctx_p		11105605	3					
ANR	11105855	Parameter	i_ctx_t * i_ctx_p	174:5:4650:4665	11105605	0	True				
ANR	11105856	ParameterType	i_ctx_t *		11105605	0					
ANR	11105857	Identifier	i_ctx_p		11105605	1					
ANR	11105858	CFGEntryNode	ENTRY		11105605		True				
ANR	11105859	CFGExitNode	EXIT		11105605		True				
ANR	11105860	Symbol	s_SFD_template . set_defaults		11105605						
ANR	11105861	Symbol	max_int		11105605						
ANR	11105862	Symbol	t_dictionary		11105605						
ANR	11105863	Symbol	code		11105605						
ANR	11105864	Symbol	* op		11105605						
ANR	11105865	Symbol	gs_error_rangecheck		11105605						
ANR	11105866	Symbol	& state		11105605						
ANR	11105867	Symbol	sop [ - 1 ] . value . intval		11105605						
ANR	11105868	Symbol	sop -> value . const_bytes		11105605						
ANR	11105869	Symbol	state . eod . data		11105605						
ANR	11105870	Symbol	state . eod . size		11105605						
ANR	11105871	Symbol	sop -> value		11105605						
ANR	11105872	Symbol	osp		11105605						
ANR	11105873	Symbol	filter_read		11105605						
ANR	11105874	Symbol	npop		11105605						
ANR	11105875	Symbol	r_has_type		11105605						
ANR	11105876	Symbol	r_space		11105605						
ANR	11105877	Symbol	sop		11105605						
ANR	11105878	Symbol	r_size		11105605						
ANR	11105879	Symbol	state		11105605						
ANR	11105880	Symbol	state . count		11105605						
ANR	11105881	Symbol	sop [ - 1 ] . value		11105605						
ANR	11105882	Symbol	op		11105605						
ANR	11105883	Symbol	dict_find_string		11105605						
ANR	11105884	Symbol	count		11105605						
ANR	11105885	Symbol	LL3_ENABLED		11105605						
ANR	11105886	Symbol	s_SFD_template		11105605						
ANR	11105887	Symbol	t_string		11105605						
ANR	11105888	Symbol	t_integer		11105605						
ANR	11105889	Symbol	i_ctx_p		11105605						
ANR	11105890	Symbol	& s_SFD_template		11105605						
ANR	11105891	Symbol	& count		11105605						
ANR	11105892	Symbol	dict_int_param		11105605						
ANR	11105893	Symbol	state . eod		11105605						
ANR	11105894	Symbol	& sop		11105605						
ANR	11105895	Symbol	* sop		11105605						
ANR	11105896	DeclStmt									
ANR	11105897	Decl							int	"int ( stream * * , uint , gs_ref_memory_t * , bool , int )"	filter_ensure_buf
ANR	11105898	Function	filter_read	219:0:6061:8526							
ANR	11105899	FunctionDef	"filter_read (i_ctx_t * i_ctx_p , int npop , const stream_template * templat , stream_state * st , uint space)"		11105898	0					
ANR	11105900	CompoundStatement		222:0:6181:8526	11105898	0					
ANR	11105901	IdentifierDeclStatement	os_ptr op = osp ;	223:4:6187:6202	11105898	0	True				
ANR	11105902	IdentifierDecl	op = osp		11105898	0					
ANR	11105903	IdentifierDeclType	os_ptr		11105898	0					
ANR	11105904	Identifier	op		11105898	1					
ANR	11105905	AssignmentExpression	op = osp		11105898	2		=			
ANR	11105906	Identifier	osp		11105898	0					
ANR	11105907	Identifier	osp		11105898	1					
ANR	11105908	IdentifierDeclStatement	uint min_size = templat -> min_out_size + max_min_left ;	224:4:6208:6260	11105898	1	True				
ANR	11105909	IdentifierDecl	min_size = templat -> min_out_size + max_min_left		11105898	0					
ANR	11105910	IdentifierDeclType	uint		11105898	0					
ANR	11105911	Identifier	min_size		11105898	1					
ANR	11105912	AssignmentExpression	min_size = templat -> min_out_size + max_min_left		11105898	2		=			
ANR	11105913	Identifier	min_size		11105898	0					
ANR	11105914	AdditiveExpression	templat -> min_out_size + max_min_left		11105898	1		+			
ANR	11105915	PtrMemberAccess	templat -> min_out_size		11105898	0					
ANR	11105916	Identifier	templat		11105898	0					
ANR	11105917	Identifier	min_out_size		11105898	1					
ANR	11105918	Identifier	max_min_left		11105898	1					
ANR	11105919	IdentifierDeclStatement	uint save_space = ialloc_space ( idmemory ) ;	225:4:6266:6306	11105898	2	True				
ANR	11105920	IdentifierDecl	save_space = ialloc_space ( idmemory )		11105898	0					
ANR	11105921	IdentifierDeclType	uint		11105898	0					
ANR	11105922	Identifier	save_space		11105898	1					
ANR	11105923	AssignmentExpression	save_space = ialloc_space ( idmemory )		11105898	2		=			
ANR	11105924	Identifier	save_space		11105898	0					
ANR	11105925	CallExpression	ialloc_space ( idmemory )		11105898	1					
ANR	11105926	Callee	ialloc_space		11105898	0					
ANR	11105927	Identifier	ialloc_space		11105898	0					
ANR	11105928	ArgumentList	idmemory		11105898	1					
ANR	11105929	Argument	idmemory		11105898	0					
ANR	11105930	Identifier	idmemory		11105898	0					
ANR	11105931	IdentifierDeclStatement	"uint use_space = max ( space , avm_system ) ;"	227:4:6382:6421	11105898	3	True				
ANR	11105932	IdentifierDecl	"use_space = max ( space , avm_system )"		11105898	0					
ANR	11105933	IdentifierDeclType	uint		11105898	0					
ANR	11105934	Identifier	use_space		11105898	1					
ANR	11105935	AssignmentExpression	"use_space = max ( space , avm_system )"		11105898	2		=			
ANR	11105936	Identifier	use_space		11105898	0					
ANR	11105937	CallExpression	"max ( space , avm_system )"		11105898	1					
ANR	11105938	Callee	max		11105898	0					
ANR	11105939	Identifier	max		11105898	0					
ANR	11105940	ArgumentList	space		11105898	1					
ANR	11105941	Argument	space		11105898	0					
ANR	11105942	Identifier	space		11105898	0					
ANR	11105943	Argument	avm_system		11105898	1					
ANR	11105944	Identifier	avm_system		11105898	0					
ANR	11105945	IdentifierDeclStatement	os_ptr sop = op - npop ;	228:4:6462:6484	11105898	4	True				
ANR	11105946	IdentifierDecl	sop = op - npop		11105898	0					
ANR	11105947	IdentifierDeclType	os_ptr		11105898	0					
ANR	11105948	Identifier	sop		11105898	1					
ANR	11105949	AssignmentExpression	sop = op - npop		11105898	2		=			
ANR	11105950	Identifier	sop		11105898	0					
ANR	11105951	AdditiveExpression	op - npop		11105898	1		-			
ANR	11105952	Identifier	op		11105898	0					
ANR	11105953	Identifier	npop		11105898	1					
ANR	11105954	IdentifierDeclStatement	stream * s ;	229:4:6490:6499	11105898	5	True				
ANR	11105955	IdentifierDecl	* s		11105898	0					
ANR	11105956	IdentifierDeclType	stream *		11105898	0					
ANR	11105957	Identifier	s		11105898	1					
ANR	11105958	IdentifierDeclStatement	stream * sstrm ;	230:4:6505:6518	11105898	6	True				
ANR	11105959	IdentifierDecl	* sstrm		11105898	0					
ANR	11105960	IdentifierDeclType	stream *		11105898	0					
ANR	11105961	Identifier	sstrm		11105898	1					
ANR	11105962	IdentifierDeclStatement	bool close = false ;	231:4:6524:6542	11105898	7	True				
ANR	11105963	IdentifierDecl	close = false		11105898	0					
ANR	11105964	IdentifierDeclType	bool		11105898	0					
ANR	11105965	Identifier	close		11105898	1					
ANR	11105966	AssignmentExpression	close = false		11105898	2		=			
ANR	11105967	Identifier	false		11105898	0					
ANR	11105968	Identifier	false		11105898	1					
ANR	11105969	IdentifierDeclStatement	int code ;	232:4:6548:6556	11105898	8	True				
ANR	11105970	IdentifierDecl	code		11105898	0					
ANR	11105971	IdentifierDeclType	int		11105898	0					
ANR	11105972	Identifier	code		11105898	1					
ANR	11105973	IfStatement	"if ( r_has_type ( sop , t_dictionary ) )"		11105898	9					
ANR	11105974	Condition	"r_has_type ( sop , t_dictionary )"	235:8:6621:6649	11105898	0	True				
ANR	11105975	CallExpression	"r_has_type ( sop , t_dictionary )"		11105898	0					
ANR	11105976	Callee	r_has_type		11105898	0					
ANR	11105977	Identifier	r_has_type		11105898	0					
ANR	11105978	ArgumentList	sop		11105898	1					
ANR	11105979	Argument	sop		11105898	0					
ANR	11105980	Identifier	sop		11105898	0					
ANR	11105981	Argument	t_dictionary		11105898	1					
ANR	11105982	Identifier	t_dictionary		11105898	0					
ANR	11105983	CompoundStatement		14:39:470:470	11105898	1					
ANR	11105984	ExpressionStatement	check_dict_read ( * sop )	236:8:6662:6683	11105898	0	True				
ANR	11105985	CallExpression	check_dict_read ( * sop )		11105898	0					
ANR	11105986	Callee	check_dict_read		11105898	0					
ANR	11105987	Identifier	check_dict_read		11105898	0					
ANR	11105988	ArgumentList	* sop		11105898	1					
ANR	11105989	Argument	* sop		11105898	0					
ANR	11105990	UnaryOperationExpression	* sop		11105898	0					
ANR	11105991	UnaryOperator	*		11105898	0					
ANR	11105992	Identifier	sop		11105898	1					
ANR	11105993	IfStatement	"if ( ( code = dict_bool_param ( sop , ""CloseSource"" , false , & close ) ) < 0 )"		11105898	1					
ANR	11105994	Condition	"( code = dict_bool_param ( sop , ""CloseSource"" , false , & close ) ) < 0"	237:12:6697:6759	11105898	0	True				
ANR	11105995	RelationalExpression	"( code = dict_bool_param ( sop , ""CloseSource"" , false , & close ) ) < 0"		11105898	0		<			
ANR	11105996	AssignmentExpression	"code = dict_bool_param ( sop , ""CloseSource"" , false , & close )"		11105898	0		=			
ANR	11105997	Identifier	code		11105898	0					
ANR	11105998	CallExpression	"dict_bool_param ( sop , ""CloseSource"" , false , & close )"		11105898	1					
ANR	11105999	Callee	dict_bool_param		11105898	0					
ANR	11106000	Identifier	dict_bool_param		11105898	0					
ANR	11106001	ArgumentList	sop		11105898	1					
ANR	11106002	Argument	sop		11105898	0					
ANR	11106003	Identifier	sop		11105898	0					
ANR	11106004	Argument	"""CloseSource"""		11105898	1					
ANR	11106005	PrimaryExpression	"""CloseSource"""		11105898	0					
ANR	11106006	Argument	false		11105898	2					
ANR	11106007	Identifier	false		11105898	0					
ANR	11106008	Argument	& close		11105898	3					
ANR	11106009	UnaryOperationExpression	& close		11105898	0					
ANR	11106010	UnaryOperator	&		11105898	0					
ANR	11106011	Identifier	close		11105898	1					
ANR	11106012	PrimaryExpression	0		11105898	1					
ANR	11106013	ReturnStatement	return code ;	238:12:6774:6785	11105898	1	True				
ANR	11106014	Identifier	code		11105898	0					
ANR	11106015	ExpressionStatement	-- sop	239:8:6795:6800	11105898	2	True				
ANR	11106016	UnaryExpression	-- sop		11105898	0					
ANR	11106017	IncDec	--		11105898	0					
ANR	11106018	Identifier	sop		11105898	1					
ANR	11106019	ExpressionStatement	"use_space = max ( use_space , r_space ( sop ) )"	245:4:6923:6963	11105898	10	True				
ANR	11106020	AssignmentExpression	"use_space = max ( use_space , r_space ( sop ) )"		11105898	0		=			
ANR	11106021	Identifier	use_space		11105898	0					
ANR	11106022	CallExpression	"max ( use_space , r_space ( sop ) )"		11105898	1					
ANR	11106023	Callee	max		11105898	0					
ANR	11106024	Identifier	max		11105898	0					
ANR	11106025	ArgumentList	use_space		11105898	1					
ANR	11106026	Argument	use_space		11105898	0					
ANR	11106027	Identifier	use_space		11105898	0					
ANR	11106028	Argument	r_space ( sop )		11105898	1					
ANR	11106029	CallExpression	r_space ( sop )		11105898	0					
ANR	11106030	Callee	r_space		11105898	0					
ANR	11106031	Identifier	r_space		11105898	0					
ANR	11106032	ArgumentList	sop		11105898	1					
ANR	11106033	Argument	sop		11105898	0					
ANR	11106034	Identifier	sop		11105898	0					
ANR	11106035	SwitchStatement	switch ( r_type ( sop ) )		11105898	11					
ANR	11106036	Condition	r_type ( sop )	246:12:6977:6987	11105898	0	True				
ANR	11106037	CallExpression	r_type ( sop )		11105898	0					
ANR	11106038	Callee	r_type		11105898	0					
ANR	11106039	Identifier	r_type		11105898	0					
ANR	11106040	ArgumentList	sop		11105898	1					
ANR	11106041	Argument	sop		11105898	0					
ANR	11106042	Identifier	sop		11105898	0					
ANR	11106043	CompoundStatement		25:25:808:808	11105898	1					
ANR	11106044	Label	case t_string :	247:8:7000:7013	11105898	0	True				
ANR	11106045	Identifier	t_string		11105898	0					
ANR	11106046	ExpressionStatement	check_read ( * sop )	248:12:7027:7043	11105898	1	True				
ANR	11106047	CallExpression	check_read ( * sop )		11105898	0					
ANR	11106048	Callee	check_read		11105898	0					
ANR	11106049	Identifier	check_read		11105898	0					
ANR	11106050	ArgumentList	* sop		11105898	1					
ANR	11106051	Argument	* sop		11105898	0					
ANR	11106052	UnaryOperationExpression	* sop		11105898	0					
ANR	11106053	UnaryOperator	*		11105898	0					
ANR	11106054	Identifier	sop		11105898	1					
ANR	11106055	ExpressionStatement	"ialloc_set_space ( idmemory , use_space )"	249:12:7057:7094	11105898	2	True				
ANR	11106056	CallExpression	"ialloc_set_space ( idmemory , use_space )"		11105898	0					
ANR	11106057	Callee	ialloc_set_space		11105898	0					
ANR	11106058	Identifier	ialloc_set_space		11105898	0					
ANR	11106059	ArgumentList	idmemory		11105898	1					
ANR	11106060	Argument	idmemory		11105898	0					
ANR	11106061	Identifier	idmemory		11105898	0					
ANR	11106062	Argument	use_space		11105898	1					
ANR	11106063	Identifier	use_space		11105898	0					
ANR	11106064	ExpressionStatement	"sstrm = file_alloc_stream ( imemory , ""filter_read(string stream)"" )"	250:12:7108:7172	11105898	3	True				
ANR	11106065	AssignmentExpression	"sstrm = file_alloc_stream ( imemory , ""filter_read(string stream)"" )"		11105898	0		=			
ANR	11106066	Identifier	sstrm		11105898	0					
ANR	11106067	CallExpression	"file_alloc_stream ( imemory , ""filter_read(string stream)"" )"		11105898	1					
ANR	11106068	Callee	file_alloc_stream		11105898	0					
ANR	11106069	Identifier	file_alloc_stream		11105898	0					
ANR	11106070	ArgumentList	imemory		11105898	1					
ANR	11106071	Argument	imemory		11105898	0					
ANR	11106072	Identifier	imemory		11105898	0					
ANR	11106073	Argument	"""filter_read(string stream)"""		11105898	1					
ANR	11106074	PrimaryExpression	"""filter_read(string stream)"""		11105898	0					
ANR	11106075	IfStatement	if ( sstrm == 0 )		11105898	4					
ANR	11106076	Condition	sstrm == 0	251:16:7190:7199	11105898	0	True				
ANR	11106077	EqualityExpression	sstrm == 0		11105898	0		==			
ANR	11106078	Identifier	sstrm		11105898	0					
ANR	11106079	PrimaryExpression	0		11105898	1					
ANR	11106080	CompoundStatement		30:28:1020:1020	11105898	1					
ANR	11106081	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	252:16:7220:7258	11105898	0	True				
ANR	11106082	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		11105898	0		=			
ANR	11106083	Identifier	code		11105898	0					
ANR	11106084	CallExpression	gs_note_error ( gs_error_VMerror )		11105898	1					
ANR	11106085	Callee	gs_note_error		11105898	0					
ANR	11106086	Identifier	gs_note_error		11105898	0					
ANR	11106087	ArgumentList	gs_error_VMerror		11105898	1					
ANR	11106088	Argument	gs_error_VMerror		11105898	0					
ANR	11106089	Identifier	gs_error_VMerror		11105898	0					
ANR	11106090	GotoStatement	goto out ;	253:16:7276:7284	11105898	1	True				
ANR	11106091	Identifier	out		11105898	0					
ANR	11106092	ExpressionStatement	"sread_string ( sstrm , sop -> value . bytes , r_size ( sop ) )"	255:12:7312:7362	11105898	5	True				
ANR	11106093	CallExpression	"sread_string ( sstrm , sop -> value . bytes , r_size ( sop ) )"		11105898	0					
ANR	11106094	Callee	sread_string		11105898	0					
ANR	11106095	Identifier	sread_string		11105898	0					
ANR	11106096	ArgumentList	sstrm		11105898	1					
ANR	11106097	Argument	sstrm		11105898	0					
ANR	11106098	Identifier	sstrm		11105898	0					
ANR	11106099	Argument	sop -> value . bytes		11105898	1					
ANR	11106100	MemberAccess	sop -> value . bytes		11105898	0					
ANR	11106101	PtrMemberAccess	sop -> value		11105898	0					
ANR	11106102	Identifier	sop		11105898	0					
ANR	11106103	Identifier	value		11105898	1					
ANR	11106104	Identifier	bytes		11105898	1					
ANR	11106105	Argument	r_size ( sop )		11105898	2					
ANR	11106106	CallExpression	r_size ( sop )		11105898	0					
ANR	11106107	Callee	r_size		11105898	0					
ANR	11106108	Identifier	r_size		11105898	0					
ANR	11106109	ArgumentList	sop		11105898	1					
ANR	11106110	Argument	sop		11105898	0					
ANR	11106111	Identifier	sop		11105898	0					
ANR	11106112	ExpressionStatement	sstrm -> is_temp = 1	256:12:7376:7394	11105898	6	True				
ANR	11106113	AssignmentExpression	sstrm -> is_temp = 1		11105898	0		=			
ANR	11106114	PtrMemberAccess	sstrm -> is_temp		11105898	0					
ANR	11106115	Identifier	sstrm		11105898	0					
ANR	11106116	Identifier	is_temp		11105898	1					
ANR	11106117	PrimaryExpression	1		11105898	1					
ANR	11106118	BreakStatement	break ;	257:12:7408:7413	11105898	7	True				
ANR	11106119	Label	case t_file :	258:8:7423:7434	11105898	8	True				
ANR	11106120	Identifier	t_file		11105898	0					
ANR	11106121	Statement	check_read_known_file_else	259:12:7448:7473	11105898	9	True				
ANR	11106122	Statement	(	259:38:7474:7474	11105898	10	True				
ANR	11106123	Statement	sstrm	259:39:7475:7479	11105898	11	True				
ANR	11106124	Statement	","	259:44:7480:7480	11105898	12	True				
ANR	11106125	Statement	sop	259:46:7482:7484	11105898	13	True				
ANR	11106126	Statement	","	259:49:7485:7485	11105898	14	True				
ANR	11106127	Statement	return	259:51:7487:7492	11105898	15	True				
ANR	11106128	Statement	","	259:57:7493:7493	11105898	16	True				
ANR	11106129	Statement	DO_NOTHING	259:59:7495:7504	11105898	17	True				
ANR	11106130	Statement	)	259:69:7505:7505	11105898	18	True				
ANR	11106131	ExpressionStatement		259:70:7506:7506	11105898	19	True				
ANR	11106132	ExpressionStatement	"ialloc_set_space ( idmemory , use_space )"	260:12:7520:7557	11105898	20	True				
ANR	11106133	CallExpression	"ialloc_set_space ( idmemory , use_space )"		11105898	0					
ANR	11106134	Callee	ialloc_set_space		11105898	0					
ANR	11106135	Identifier	ialloc_set_space		11105898	0					
ANR	11106136	ArgumentList	idmemory		11105898	1					
ANR	11106137	Argument	idmemory		11105898	0					
ANR	11106138	Identifier	idmemory		11105898	0					
ANR	11106139	Argument	use_space		11105898	1					
ANR	11106140	Identifier	use_space		11105898	0					
ANR	11106141	GotoStatement	goto ens ;	261:12:7571:7579	11105898	21	True				
ANR	11106142	Identifier	ens		11105898	0					
ANR	11106143	Label	default :	262:8:7589:7596	11105898	22	True				
ANR	11106144	Identifier	default		11105898	0					
ANR	11106145	ExpressionStatement	check_proc ( * sop )	263:12:7610:7626	11105898	23	True				
ANR	11106146	CallExpression	check_proc ( * sop )		11105898	0					
ANR	11106147	Callee	check_proc		11105898	0					
ANR	11106148	Identifier	check_proc		11105898	0					
ANR	11106149	ArgumentList	* sop		11105898	1					
ANR	11106150	Argument	* sop		11105898	0					
ANR	11106151	UnaryOperationExpression	* sop		11105898	0					
ANR	11106152	UnaryOperator	*		11105898	0					
ANR	11106153	Identifier	sop		11105898	1					
ANR	11106154	ExpressionStatement	"ialloc_set_space ( idmemory , use_space )"	264:12:7640:7677	11105898	24	True				
ANR	11106155	CallExpression	"ialloc_set_space ( idmemory , use_space )"		11105898	0					
ANR	11106156	Callee	ialloc_set_space		11105898	0					
ANR	11106157	Identifier	ialloc_set_space		11105898	0					
ANR	11106158	ArgumentList	idmemory		11105898	1					
ANR	11106159	Argument	idmemory		11105898	0					
ANR	11106160	Identifier	idmemory		11105898	0					
ANR	11106161	Argument	use_space		11105898	1					
ANR	11106162	Identifier	use_space		11105898	0					
ANR	11106163	ExpressionStatement	"code = sread_proc ( sop , & sstrm , iimemory )"	265:12:7691:7731	11105898	25	True				
ANR	11106164	AssignmentExpression	"code = sread_proc ( sop , & sstrm , iimemory )"		11105898	0		=			
ANR	11106165	Identifier	code		11105898	0					
ANR	11106166	CallExpression	"sread_proc ( sop , & sstrm , iimemory )"		11105898	1					
ANR	11106167	Callee	sread_proc		11105898	0					
ANR	11106168	Identifier	sread_proc		11105898	0					
ANR	11106169	ArgumentList	sop		11105898	1					
ANR	11106170	Argument	sop		11105898	0					
ANR	11106171	Identifier	sop		11105898	0					
ANR	11106172	Argument	& sstrm		11105898	1					
ANR	11106173	UnaryOperationExpression	& sstrm		11105898	0					
ANR	11106174	UnaryOperator	&		11105898	0					
ANR	11106175	Identifier	sstrm		11105898	1					
ANR	11106176	Argument	iimemory		11105898	2					
ANR	11106177	Identifier	iimemory		11105898	0					
ANR	11106178	IfStatement	if ( code < 0 )		11105898	26					
ANR	11106179	Condition	code < 0	266:16:7749:7756	11105898	0	True				
ANR	11106180	RelationalExpression	code < 0		11105898	0		<			
ANR	11106181	Identifier	code		11105898	0					
ANR	11106182	PrimaryExpression	0		11105898	1					
ANR	11106183	GotoStatement	goto out ;	267:16:7775:7783	11105898	1	True				
ANR	11106184	Identifier	out		11105898	0					
ANR	11106185	ExpressionStatement	sstrm -> is_temp = 2	268:12:7797:7815	11105898	27	True				
ANR	11106186	AssignmentExpression	sstrm -> is_temp = 2		11105898	0		=			
ANR	11106187	PtrMemberAccess	sstrm -> is_temp		11105898	0					
ANR	11106188	Identifier	sstrm		11105898	0					
ANR	11106189	Identifier	is_temp		11105898	1					
ANR	11106190	PrimaryExpression	2		11105898	1					
ANR	11106191	Label	ens :	269:10:7827:7830	11105898	28	True				
ANR	11106192	Identifier	ens		11105898	0					
ANR	11106193	ExpressionStatement	"code = filter_ensure_buf ( & sstrm , templat -> min_in_size + sstrm -> state -> templat -> min_out_size , iimemory , false , close )"	270:12:7844:8071	11105898	29	True				
ANR	11106194	AssignmentExpression	"code = filter_ensure_buf ( & sstrm , templat -> min_in_size + sstrm -> state -> templat -> min_out_size , iimemory , false , close )"		11105898	0		=			
ANR	11106195	Identifier	code		11105898	0					
ANR	11106196	CallExpression	"filter_ensure_buf ( & sstrm , templat -> min_in_size + sstrm -> state -> templat -> min_out_size , iimemory , false , close )"		11105898	1					
ANR	11106197	Callee	filter_ensure_buf		11105898	0					
ANR	11106198	Identifier	filter_ensure_buf		11105898	0					
ANR	11106199	ArgumentList	& sstrm		11105898	1					
ANR	11106200	Argument	& sstrm		11105898	0					
ANR	11106201	UnaryOperationExpression	& sstrm		11105898	0					
ANR	11106202	UnaryOperator	&		11105898	0					
ANR	11106203	Identifier	sstrm		11105898	1					
ANR	11106204	Argument	templat -> min_in_size + sstrm -> state -> templat -> min_out_size		11105898	1					
ANR	11106205	AdditiveExpression	templat -> min_in_size + sstrm -> state -> templat -> min_out_size		11105898	0		+			
ANR	11106206	PtrMemberAccess	templat -> min_in_size		11105898	0					
ANR	11106207	Identifier	templat		11105898	0					
ANR	11106208	Identifier	min_in_size		11105898	1					
ANR	11106209	PtrMemberAccess	sstrm -> state -> templat -> min_out_size		11105898	1					
ANR	11106210	PtrMemberAccess	sstrm -> state -> templat		11105898	0					
ANR	11106211	PtrMemberAccess	sstrm -> state		11105898	0					
ANR	11106212	Identifier	sstrm		11105898	0					
ANR	11106213	Identifier	state		11105898	1					
ANR	11106214	Identifier	templat		11105898	1					
ANR	11106215	Identifier	min_out_size		11105898	1					
ANR	11106216	Argument	iimemory		11105898	2					
ANR	11106217	Identifier	iimemory		11105898	0					
ANR	11106218	Argument	false		11105898	3					
ANR	11106219	Identifier	false		11105898	0					
ANR	11106220	Argument	close		11105898	4					
ANR	11106221	Identifier	close		11105898	0					
ANR	11106222	IfStatement	if ( code < 0 )		11105898	30					
ANR	11106223	Condition	code < 0	274:16:8089:8096	11105898	0	True				
ANR	11106224	RelationalExpression	code < 0		11105898	0		<			
ANR	11106225	Identifier	code		11105898	0					
ANR	11106226	PrimaryExpression	0		11105898	1					
ANR	11106227	GotoStatement	goto out ;	275:16:8115:8123	11105898	1	True				
ANR	11106228	Identifier	out		11105898	0					
ANR	11106229	BreakStatement	break ;	276:12:8137:8142	11105898	31	True				
ANR	11106230	IfStatement	if ( min_size < 128 )		11105898	12					
ANR	11106231	Condition	min_size < 128	278:8:8158:8171	11105898	0	True				
ANR	11106232	RelationalExpression	min_size < 128		11105898	0		<			
ANR	11106233	Identifier	min_size		11105898	0					
ANR	11106234	PrimaryExpression	128		11105898	1					
ANR	11106235	ExpressionStatement	min_size = file_default_buffer_size	279:8:8182:8217	11105898	1	True				
ANR	11106236	AssignmentExpression	min_size = file_default_buffer_size		11105898	0		=			
ANR	11106237	Identifier	min_size		11105898	0					
ANR	11106238	Identifier	file_default_buffer_size		11105898	1					
ANR	11106239	ExpressionStatement	"code = filter_open ( ""r"" , min_size , ( ref * ) sop , & s_filter_read_procs , templat , st , imemory )"	280:4:8223:8336	11105898	13	True				
ANR	11106240	AssignmentExpression	"code = filter_open ( ""r"" , min_size , ( ref * ) sop , & s_filter_read_procs , templat , st , imemory )"		11105898	0		=			
ANR	11106241	Identifier	code		11105898	0					
ANR	11106242	CallExpression	"filter_open ( ""r"" , min_size , ( ref * ) sop , & s_filter_read_procs , templat , st , imemory )"		11105898	1					
ANR	11106243	Callee	filter_open		11105898	0					
ANR	11106244	Identifier	filter_open		11105898	0					
ANR	11106245	ArgumentList	"""r"""		11105898	1					
ANR	11106246	Argument	"""r"""		11105898	0					
ANR	11106247	PrimaryExpression	"""r"""		11105898	0					
ANR	11106248	Argument	min_size		11105898	1					
ANR	11106249	Identifier	min_size		11105898	0					
ANR	11106250	Argument	( ref * ) sop		11105898	2					
ANR	11106251	CastExpression	( ref * ) sop		11105898	0					
ANR	11106252	CastTarget	ref *		11105898	0					
ANR	11106253	Identifier	sop		11105898	1					
ANR	11106254	Argument	& s_filter_read_procs		11105898	3					
ANR	11106255	UnaryOperationExpression	& s_filter_read_procs		11105898	0					
ANR	11106256	UnaryOperator	&		11105898	0					
ANR	11106257	Identifier	s_filter_read_procs		11105898	1					
ANR	11106258	Argument	templat		11105898	4					
ANR	11106259	Identifier	templat		11105898	0					
ANR	11106260	Argument	st		11105898	5					
ANR	11106261	Identifier	st		11105898	0					
ANR	11106262	Argument	imemory		11105898	6					
ANR	11106263	Identifier	imemory		11105898	0					
ANR	11106264	IfStatement	if ( code < 0 )		11105898	14					
ANR	11106265	Condition	code < 0	282:8:8346:8353	11105898	0	True				
ANR	11106266	RelationalExpression	code < 0		11105898	0		<			
ANR	11106267	Identifier	code		11105898	0					
ANR	11106268	PrimaryExpression	0		11105898	1					
ANR	11106269	GotoStatement	goto out ;	283:8:8364:8372	11105898	1	True				
ANR	11106270	Identifier	out		11105898	0					
ANR	11106271	ExpressionStatement	s = fptr ( sop )	284:4:8378:8391	11105898	15	True				
ANR	11106272	AssignmentExpression	s = fptr ( sop )		11105898	0		=			
ANR	11106273	Identifier	s		11105898	0					
ANR	11106274	CallExpression	fptr ( sop )		11105898	1					
ANR	11106275	Callee	fptr		11105898	0					
ANR	11106276	Identifier	fptr		11105898	0					
ANR	11106277	ArgumentList	sop		11105898	1					
ANR	11106278	Argument	sop		11105898	0					
ANR	11106279	Identifier	sop		11105898	0					
ANR	11106280	ExpressionStatement	s -> strm = sstrm	285:4:8397:8412	11105898	16	True				
ANR	11106281	AssignmentExpression	s -> strm = sstrm		11105898	0		=			
ANR	11106282	PtrMemberAccess	s -> strm		11105898	0					
ANR	11106283	Identifier	s		11105898	0					
ANR	11106284	Identifier	strm		11105898	1					
ANR	11106285	Identifier	sstrm		11105898	1					
ANR	11106286	ExpressionStatement	s -> close_strm = close	286:4:8418:8439	11105898	17	True				
ANR	11106287	AssignmentExpression	s -> close_strm = close		11105898	0		=			
ANR	11106288	PtrMemberAccess	s -> close_strm		11105898	0					
ANR	11106289	Identifier	s		11105898	0					
ANR	11106290	Identifier	close_strm		11105898	1					
ANR	11106291	Identifier	close		11105898	1					
ANR	11106292	ExpressionStatement	pop ( op - sop )	287:4:8445:8458	11105898	18	True				
ANR	11106293	CallExpression	pop ( op - sop )		11105898	0					
ANR	11106294	Callee	pop		11105898	0					
ANR	11106295	Identifier	pop		11105898	0					
ANR	11106296	ArgumentList	op - sop		11105898	1					
ANR	11106297	Argument	op - sop		11105898	0					
ANR	11106298	AdditiveExpression	op - sop		11105898	0		-			
ANR	11106299	Identifier	op		11105898	0					
ANR	11106300	Identifier	sop		11105898	1					
ANR	11106301	Label	out :	288:0:8460:8463	11105898	19	True				
ANR	11106302	Identifier	out		11105898	0					
ANR	11106303	ExpressionStatement	"ialloc_set_space ( idmemory , save_space )"	289:4:8469:8507	11105898	20	True				
ANR	11106304	CallExpression	"ialloc_set_space ( idmemory , save_space )"		11105898	0					
ANR	11106305	Callee	ialloc_set_space		11105898	0					
ANR	11106306	Identifier	ialloc_set_space		11105898	0					
ANR	11106307	ArgumentList	idmemory		11105898	1					
ANR	11106308	Argument	idmemory		11105898	0					
ANR	11106309	Identifier	idmemory		11105898	0					
ANR	11106310	Argument	save_space		11105898	1					
ANR	11106311	Identifier	save_space		11105898	0					
ANR	11106312	ReturnStatement	return code ;	290:4:8513:8524	11105898	21	True				
ANR	11106313	Identifier	code		11105898	0					
ANR	11106314	ReturnType	int		11105898	1					
ANR	11106315	Identifier	filter_read		11105898	2					
ANR	11106316	ParameterList	"i_ctx_t * i_ctx_p , int npop , const stream_template * templat , stream_state * st , uint space"		11105898	3					
ANR	11106317	Parameter	i_ctx_t * i_ctx_p	220:12:6077:6092	11105898	0	True				
ANR	11106318	ParameterType	i_ctx_t *		11105898	0					
ANR	11106319	Identifier	i_ctx_p		11105898	1					
ANR	11106320	Parameter	int npop	220:30:6095:6102	11105898	1	True				
ANR	11106321	ParameterType	int		11105898	0					
ANR	11106322	Identifier	npop		11105898	1					
ANR	11106323	Parameter	const stream_template * templat	220:40:6105:6135	11105898	2	True				
ANR	11106324	ParameterType	const stream_template *		11105898	0					
ANR	11106325	Identifier	templat		11105898	1					
ANR	11106326	Parameter	stream_state * st	221:12:6150:6166	11105898	3	True				
ANR	11106327	ParameterType	stream_state *		11105898	0					
ANR	11106328	Identifier	st		11105898	1					
ANR	11106329	Parameter	uint space	221:31:6169:6178	11105898	4	True				
ANR	11106330	ParameterType	uint		11105898	0					
ANR	11106331	Identifier	space		11105898	1					
ANR	11106332	CFGEntryNode	ENTRY		11105898		True				
ANR	11106333	CFGExitNode	EXIT		11105898		True				
ANR	11106334	Symbol	sop -> value . bytes		11105898						
ANR	11106335	Symbol	& sstrm		11105898						
ANR	11106336	Symbol	templat -> min_out_size		11105898						
ANR	11106337	Symbol	sop -> value		11105898						
ANR	11106338	Symbol	osp		11105898						
ANR	11106339	Symbol	space		11105898						
ANR	11106340	Symbol	npop		11105898						
ANR	11106341	Symbol	r_has_type		11105898						
ANR	11106342	Symbol	& close		11105898						
ANR	11106343	Symbol	* * * sstrm		11105898						
ANR	11106344	Symbol	* templat		11105898						
ANR	11106345	Symbol	sop		11105898						
ANR	11106346	Symbol	dict_bool_param		11105898						
ANR	11106347	Symbol	imemory		11105898						
ANR	11106348	Symbol	sstrm -> state -> templat -> min_out_size		11105898						
ANR	11106349	Symbol	r_type		11105898						
ANR	11106350	Symbol	& s_filter_read_procs		11105898						
ANR	11106351	Symbol	s -> strm		11105898						
ANR	11106352	Symbol	use_space		11105898						
ANR	11106353	Symbol	* * sstrm		11105898						
ANR	11106354	Symbol	s -> close_strm		11105898						
ANR	11106355	Symbol	templat		11105898						
ANR	11106356	Symbol	sstrm -> is_temp		11105898						
ANR	11106357	Symbol	iimemory		11105898						
ANR	11106358	Symbol	* sstrm		11105898						
ANR	11106359	Symbol	i_ctx_p		11105898						
ANR	11106360	Symbol	* sstrm -> state		11105898						
ANR	11106361	Symbol	sstrm -> state		11105898						
ANR	11106362	Symbol	min_size		11105898						
ANR	11106363	Symbol	file_default_buffer_size		11105898						
ANR	11106364	Symbol	avm_system		11105898						
ANR	11106365	Symbol	templat -> min_in_size		11105898						
ANR	11106366	Symbol	max_min_left		11105898						
ANR	11106367	Symbol	code		11105898						
ANR	11106368	Symbol	t_dictionary		11105898						
ANR	11106369	Symbol	filter_open		11105898						
ANR	11106370	Symbol	sstrm		11105898						
ANR	11106371	Symbol	idmemory		11105898						
ANR	11106372	Symbol	r_space		11105898						
ANR	11106373	Symbol	file_alloc_stream		11105898						
ANR	11106374	Symbol	sread_proc		11105898						
ANR	11106375	Symbol	* * sstrm -> state		11105898						
ANR	11106376	Symbol	r_size		11105898						
ANR	11106377	Symbol	ialloc_space		11105898						
ANR	11106378	Symbol	sstrm -> state -> templat		11105898						
ANR	11106379	Symbol	close		11105898						
ANR	11106380	Symbol	filter_ensure_buf		11105898						
ANR	11106381	Symbol	* sstrm -> state -> templat		11105898						
ANR	11106382	Symbol	st		11105898						
ANR	11106383	Symbol	op		11105898						
ANR	11106384	Symbol	max		11105898						
ANR	11106385	Symbol	false		11105898						
ANR	11106386	Symbol	gs_error_VMerror		11105898						
ANR	11106387	Symbol	gs_note_error		11105898						
ANR	11106388	Symbol	s		11105898						
ANR	11106389	Symbol	save_space		11105898						
ANR	11106390	Symbol	fptr		11105898						
ANR	11106391	Symbol	* s		11105898						
ANR	11106392	Symbol	* sop		11105898						
ANR	11106393	Function	filter_read_simple	292:0:8528:8658							
ANR	11106394	FunctionDef	"filter_read_simple (i_ctx_t * i_ctx_p , const stream_template * templat)"		11106393	0					
ANR	11106395	CompoundStatement		294:0:8602:8658	11106393	0					
ANR	11106396	ReturnStatement	"return filter_read ( i_ctx_p , 0 , templat , NULL , 0 ) ;"	295:4:8608:8656	11106393	0	True				
ANR	11106397	CallExpression	"filter_read ( i_ctx_p , 0 , templat , NULL , 0 )"		11106393	0					
ANR	11106398	Callee	filter_read		11106393	0					
ANR	11106399	Identifier	filter_read		11106393	0					
ANR	11106400	ArgumentList	i_ctx_p		11106393	1					
ANR	11106401	Argument	i_ctx_p		11106393	0					
ANR	11106402	Identifier	i_ctx_p		11106393	0					
ANR	11106403	Argument	0		11106393	1					
ANR	11106404	PrimaryExpression	0		11106393	0					
ANR	11106405	Argument	templat		11106393	2					
ANR	11106406	Identifier	templat		11106393	0					
ANR	11106407	Argument	NULL		11106393	3					
ANR	11106408	Identifier	NULL		11106393	0					
ANR	11106409	Argument	0		11106393	4					
ANR	11106410	PrimaryExpression	0		11106393	0					
ANR	11106411	ReturnType	int		11106393	1					
ANR	11106412	Identifier	filter_read_simple		11106393	2					
ANR	11106413	ParameterList	"i_ctx_t * i_ctx_p , const stream_template * templat"		11106393	3					
ANR	11106414	Parameter	i_ctx_t * i_ctx_p	293:19:8551:8566	11106393	0	True				
ANR	11106415	ParameterType	i_ctx_t *		11106393	0					
ANR	11106416	Identifier	i_ctx_p		11106393	1					
ANR	11106417	Parameter	const stream_template * templat	293:37:8569:8599	11106393	1	True				
ANR	11106418	ParameterType	const stream_template *		11106393	0					
ANR	11106419	Identifier	templat		11106393	1					
ANR	11106420	CFGEntryNode	ENTRY		11106393		True				
ANR	11106421	CFGExitNode	EXIT		11106393		True				
ANR	11106422	Symbol	NULL		11106393						
ANR	11106423	Symbol	i_ctx_p		11106393						
ANR	11106424	Symbol	templat		11106393						
ANR	11106425	Symbol	filter_read		11106393						
ANR	11106426	Function	filter_write	299:0:8692:11137							
ANR	11106427	FunctionDef	"filter_write (i_ctx_t * i_ctx_p , int npop , const stream_template * templat , stream_state * st , uint space)"		11106426	0					
ANR	11106428	CompoundStatement		302:0:8814:11137	11106426	0					
ANR	11106429	IdentifierDeclStatement	os_ptr op = osp ;	303:4:8820:8835	11106426	0	True				
ANR	11106430	IdentifierDecl	op = osp		11106426	0					
ANR	11106431	IdentifierDeclType	os_ptr		11106426	0					
ANR	11106432	Identifier	op		11106426	1					
ANR	11106433	AssignmentExpression	op = osp		11106426	2		=			
ANR	11106434	Identifier	osp		11106426	0					
ANR	11106435	Identifier	osp		11106426	1					
ANR	11106436	IdentifierDeclStatement	uint min_size = templat -> min_in_size + max_min_left ;	304:4:8841:8892	11106426	1	True				
ANR	11106437	IdentifierDecl	min_size = templat -> min_in_size + max_min_left		11106426	0					
ANR	11106438	IdentifierDeclType	uint		11106426	0					
ANR	11106439	Identifier	min_size		11106426	1					
ANR	11106440	AssignmentExpression	min_size = templat -> min_in_size + max_min_left		11106426	2		=			
ANR	11106441	Identifier	min_size		11106426	0					
ANR	11106442	AdditiveExpression	templat -> min_in_size + max_min_left		11106426	1		+			
ANR	11106443	PtrMemberAccess	templat -> min_in_size		11106426	0					
ANR	11106444	Identifier	templat		11106426	0					
ANR	11106445	Identifier	min_in_size		11106426	1					
ANR	11106446	Identifier	max_min_left		11106426	1					
ANR	11106447	IdentifierDeclStatement	uint save_space = ialloc_space ( idmemory ) ;	305:4:8898:8938	11106426	2	True				
ANR	11106448	IdentifierDecl	save_space = ialloc_space ( idmemory )		11106426	0					
ANR	11106449	IdentifierDeclType	uint		11106426	0					
ANR	11106450	Identifier	save_space		11106426	1					
ANR	11106451	AssignmentExpression	save_space = ialloc_space ( idmemory )		11106426	2		=			
ANR	11106452	Identifier	save_space		11106426	0					
ANR	11106453	CallExpression	ialloc_space ( idmemory )		11106426	1					
ANR	11106454	Callee	ialloc_space		11106426	0					
ANR	11106455	Identifier	ialloc_space		11106426	0					
ANR	11106456	ArgumentList	idmemory		11106426	1					
ANR	11106457	Argument	idmemory		11106426	0					
ANR	11106458	Identifier	idmemory		11106426	0					
ANR	11106459	IdentifierDeclStatement	"uint use_space = max ( space , avm_system ) ;"	307:4:9014:9053	11106426	3	True				
ANR	11106460	IdentifierDecl	"use_space = max ( space , avm_system )"		11106426	0					
ANR	11106461	IdentifierDeclType	uint		11106426	0					
ANR	11106462	Identifier	use_space		11106426	1					
ANR	11106463	AssignmentExpression	"use_space = max ( space , avm_system )"		11106426	2		=			
ANR	11106464	Identifier	use_space		11106426	0					
ANR	11106465	CallExpression	"max ( space , avm_system )"		11106426	1					
ANR	11106466	Callee	max		11106426	0					
ANR	11106467	Identifier	max		11106426	0					
ANR	11106468	ArgumentList	space		11106426	1					
ANR	11106469	Argument	space		11106426	0					
ANR	11106470	Identifier	space		11106426	0					
ANR	11106471	Argument	avm_system		11106426	1					
ANR	11106472	Identifier	avm_system		11106426	0					
ANR	11106473	IdentifierDeclStatement	os_ptr sop = op - npop ;	308:4:9094:9116	11106426	4	True				
ANR	11106474	IdentifierDecl	sop = op - npop		11106426	0					
ANR	11106475	IdentifierDeclType	os_ptr		11106426	0					
ANR	11106476	Identifier	sop		11106426	1					
ANR	11106477	AssignmentExpression	sop = op - npop		11106426	2		=			
ANR	11106478	Identifier	sop		11106426	0					
ANR	11106479	AdditiveExpression	op - npop		11106426	1		-			
ANR	11106480	Identifier	op		11106426	0					
ANR	11106481	Identifier	npop		11106426	1					
ANR	11106482	IdentifierDeclStatement	stream * s ;	309:4:9122:9131	11106426	5	True				
ANR	11106483	IdentifierDecl	* s		11106426	0					
ANR	11106484	IdentifierDeclType	stream *		11106426	0					
ANR	11106485	Identifier	s		11106426	1					
ANR	11106486	IdentifierDeclStatement	stream * sstrm ;	310:4:9137:9150	11106426	6	True				
ANR	11106487	IdentifierDecl	* sstrm		11106426	0					
ANR	11106488	IdentifierDeclType	stream *		11106426	0					
ANR	11106489	Identifier	sstrm		11106426	1					
ANR	11106490	IdentifierDeclStatement	bool close = false ;	311:4:9156:9174	11106426	7	True				
ANR	11106491	IdentifierDecl	close = false		11106426	0					
ANR	11106492	IdentifierDeclType	bool		11106426	0					
ANR	11106493	Identifier	close		11106426	1					
ANR	11106494	AssignmentExpression	close = false		11106426	2		=			
ANR	11106495	Identifier	false		11106426	0					
ANR	11106496	Identifier	false		11106426	1					
ANR	11106497	IdentifierDeclStatement	int code ;	312:4:9180:9188	11106426	8	True				
ANR	11106498	IdentifierDecl	code		11106426	0					
ANR	11106499	IdentifierDeclType	int		11106426	0					
ANR	11106500	Identifier	code		11106426	1					
ANR	11106501	IfStatement	"if ( r_has_type ( sop , t_dictionary ) )"		11106426	9					
ANR	11106502	Condition	"r_has_type ( sop , t_dictionary )"	315:8:9253:9281	11106426	0	True				
ANR	11106503	CallExpression	"r_has_type ( sop , t_dictionary )"		11106426	0					
ANR	11106504	Callee	r_has_type		11106426	0					
ANR	11106505	Identifier	r_has_type		11106426	0					
ANR	11106506	ArgumentList	sop		11106426	1					
ANR	11106507	Argument	sop		11106426	0					
ANR	11106508	Identifier	sop		11106426	0					
ANR	11106509	Argument	t_dictionary		11106426	1					
ANR	11106510	Identifier	t_dictionary		11106426	0					
ANR	11106511	CompoundStatement		14:39:469:469	11106426	1					
ANR	11106512	ExpressionStatement	check_dict_read ( * sop )	316:8:9294:9315	11106426	0	True				
ANR	11106513	CallExpression	check_dict_read ( * sop )		11106426	0					
ANR	11106514	Callee	check_dict_read		11106426	0					
ANR	11106515	Identifier	check_dict_read		11106426	0					
ANR	11106516	ArgumentList	* sop		11106426	1					
ANR	11106517	Argument	* sop		11106426	0					
ANR	11106518	UnaryOperationExpression	* sop		11106426	0					
ANR	11106519	UnaryOperator	*		11106426	0					
ANR	11106520	Identifier	sop		11106426	1					
ANR	11106521	IfStatement	"if ( ( code = dict_bool_param ( sop , ""CloseTarget"" , false , & close ) ) < 0 )"		11106426	1					
ANR	11106522	Condition	"( code = dict_bool_param ( sop , ""CloseTarget"" , false , & close ) ) < 0"	317:12:9329:9391	11106426	0	True				
ANR	11106523	RelationalExpression	"( code = dict_bool_param ( sop , ""CloseTarget"" , false , & close ) ) < 0"		11106426	0		<			
ANR	11106524	AssignmentExpression	"code = dict_bool_param ( sop , ""CloseTarget"" , false , & close )"		11106426	0		=			
ANR	11106525	Identifier	code		11106426	0					
ANR	11106526	CallExpression	"dict_bool_param ( sop , ""CloseTarget"" , false , & close )"		11106426	1					
ANR	11106527	Callee	dict_bool_param		11106426	0					
ANR	11106528	Identifier	dict_bool_param		11106426	0					
ANR	11106529	ArgumentList	sop		11106426	1					
ANR	11106530	Argument	sop		11106426	0					
ANR	11106531	Identifier	sop		11106426	0					
ANR	11106532	Argument	"""CloseTarget"""		11106426	1					
ANR	11106533	PrimaryExpression	"""CloseTarget"""		11106426	0					
ANR	11106534	Argument	false		11106426	2					
ANR	11106535	Identifier	false		11106426	0					
ANR	11106536	Argument	& close		11106426	3					
ANR	11106537	UnaryOperationExpression	& close		11106426	0					
ANR	11106538	UnaryOperator	&		11106426	0					
ANR	11106539	Identifier	close		11106426	1					
ANR	11106540	PrimaryExpression	0		11106426	1					
ANR	11106541	ReturnStatement	return code ;	318:12:9406:9417	11106426	1	True				
ANR	11106542	Identifier	code		11106426	0					
ANR	11106543	ExpressionStatement	-- sop	319:8:9427:9432	11106426	2	True				
ANR	11106544	UnaryExpression	-- sop		11106426	0					
ANR	11106545	IncDec	--		11106426	0					
ANR	11106546	Identifier	sop		11106426	1					
ANR	11106547	ExpressionStatement	"use_space = max ( use_space , r_space ( sop ) )"	325:4:9553:9593	11106426	10	True				
ANR	11106548	AssignmentExpression	"use_space = max ( use_space , r_space ( sop ) )"		11106426	0		=			
ANR	11106549	Identifier	use_space		11106426	0					
ANR	11106550	CallExpression	"max ( use_space , r_space ( sop ) )"		11106426	1					
ANR	11106551	Callee	max		11106426	0					
ANR	11106552	Identifier	max		11106426	0					
ANR	11106553	ArgumentList	use_space		11106426	1					
ANR	11106554	Argument	use_space		11106426	0					
ANR	11106555	Identifier	use_space		11106426	0					
ANR	11106556	Argument	r_space ( sop )		11106426	1					
ANR	11106557	CallExpression	r_space ( sop )		11106426	0					
ANR	11106558	Callee	r_space		11106426	0					
ANR	11106559	Identifier	r_space		11106426	0					
ANR	11106560	ArgumentList	sop		11106426	1					
ANR	11106561	Argument	sop		11106426	0					
ANR	11106562	Identifier	sop		11106426	0					
ANR	11106563	SwitchStatement	switch ( r_type ( sop ) )		11106426	11					
ANR	11106564	Condition	r_type ( sop )	326:12:9607:9617	11106426	0	True				
ANR	11106565	CallExpression	r_type ( sop )		11106426	0					
ANR	11106566	Callee	r_type		11106426	0					
ANR	11106567	Identifier	r_type		11106426	0					
ANR	11106568	ArgumentList	sop		11106426	1					
ANR	11106569	Argument	sop		11106426	0					
ANR	11106570	Identifier	sop		11106426	0					
ANR	11106571	CompoundStatement		25:25:805:805	11106426	1					
ANR	11106572	Label	case t_string :	327:8:9630:9643	11106426	0	True				
ANR	11106573	Identifier	t_string		11106426	0					
ANR	11106574	ExpressionStatement	check_write ( * sop )	328:12:9657:9674	11106426	1	True				
ANR	11106575	CallExpression	check_write ( * sop )		11106426	0					
ANR	11106576	Callee	check_write		11106426	0					
ANR	11106577	Identifier	check_write		11106426	0					
ANR	11106578	ArgumentList	* sop		11106426	1					
ANR	11106579	Argument	* sop		11106426	0					
ANR	11106580	UnaryOperationExpression	* sop		11106426	0					
ANR	11106581	UnaryOperator	*		11106426	0					
ANR	11106582	Identifier	sop		11106426	1					
ANR	11106583	ExpressionStatement	"ialloc_set_space ( idmemory , use_space )"	329:12:9688:9725	11106426	2	True				
ANR	11106584	CallExpression	"ialloc_set_space ( idmemory , use_space )"		11106426	0					
ANR	11106585	Callee	ialloc_set_space		11106426	0					
ANR	11106586	Identifier	ialloc_set_space		11106426	0					
ANR	11106587	ArgumentList	idmemory		11106426	1					
ANR	11106588	Argument	idmemory		11106426	0					
ANR	11106589	Identifier	idmemory		11106426	0					
ANR	11106590	Argument	use_space		11106426	1					
ANR	11106591	Identifier	use_space		11106426	0					
ANR	11106592	ExpressionStatement	"sstrm = file_alloc_stream ( imemory , ""filter_write(string)"" )"	330:12:9739:9797	11106426	3	True				
ANR	11106593	AssignmentExpression	"sstrm = file_alloc_stream ( imemory , ""filter_write(string)"" )"		11106426	0		=			
ANR	11106594	Identifier	sstrm		11106426	0					
ANR	11106595	CallExpression	"file_alloc_stream ( imemory , ""filter_write(string)"" )"		11106426	1					
ANR	11106596	Callee	file_alloc_stream		11106426	0					
ANR	11106597	Identifier	file_alloc_stream		11106426	0					
ANR	11106598	ArgumentList	imemory		11106426	1					
ANR	11106599	Argument	imemory		11106426	0					
ANR	11106600	Identifier	imemory		11106426	0					
ANR	11106601	Argument	"""filter_write(string)"""		11106426	1					
ANR	11106602	PrimaryExpression	"""filter_write(string)"""		11106426	0					
ANR	11106603	IfStatement	if ( sstrm == 0 )		11106426	4					
ANR	11106604	Condition	sstrm == 0	331:16:9815:9824	11106426	0	True				
ANR	11106605	EqualityExpression	sstrm == 0		11106426	0		==			
ANR	11106606	Identifier	sstrm		11106426	0					
ANR	11106607	PrimaryExpression	0		11106426	1					
ANR	11106608	CompoundStatement		30:28:1012:1012	11106426	1					
ANR	11106609	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	332:16:9845:9883	11106426	0	True				
ANR	11106610	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		11106426	0		=			
ANR	11106611	Identifier	code		11106426	0					
ANR	11106612	CallExpression	gs_note_error ( gs_error_VMerror )		11106426	1					
ANR	11106613	Callee	gs_note_error		11106426	0					
ANR	11106614	Identifier	gs_note_error		11106426	0					
ANR	11106615	ArgumentList	gs_error_VMerror		11106426	1					
ANR	11106616	Argument	gs_error_VMerror		11106426	0					
ANR	11106617	Identifier	gs_error_VMerror		11106426	0					
ANR	11106618	GotoStatement	goto out ;	333:16:9901:9909	11106426	1	True				
ANR	11106619	Identifier	out		11106426	0					
ANR	11106620	ExpressionStatement	"swrite_string ( sstrm , sop -> value . bytes , r_size ( sop ) )"	335:12:9937:9988	11106426	5	True				
ANR	11106621	CallExpression	"swrite_string ( sstrm , sop -> value . bytes , r_size ( sop ) )"		11106426	0					
ANR	11106622	Callee	swrite_string		11106426	0					
ANR	11106623	Identifier	swrite_string		11106426	0					
ANR	11106624	ArgumentList	sstrm		11106426	1					
ANR	11106625	Argument	sstrm		11106426	0					
ANR	11106626	Identifier	sstrm		11106426	0					
ANR	11106627	Argument	sop -> value . bytes		11106426	1					
ANR	11106628	MemberAccess	sop -> value . bytes		11106426	0					
ANR	11106629	PtrMemberAccess	sop -> value		11106426	0					
ANR	11106630	Identifier	sop		11106426	0					
ANR	11106631	Identifier	value		11106426	1					
ANR	11106632	Identifier	bytes		11106426	1					
ANR	11106633	Argument	r_size ( sop )		11106426	2					
ANR	11106634	CallExpression	r_size ( sop )		11106426	0					
ANR	11106635	Callee	r_size		11106426	0					
ANR	11106636	Identifier	r_size		11106426	0					
ANR	11106637	ArgumentList	sop		11106426	1					
ANR	11106638	Argument	sop		11106426	0					
ANR	11106639	Identifier	sop		11106426	0					
ANR	11106640	ExpressionStatement	sstrm -> is_temp = 1	336:12:10002:10020	11106426	6	True				
ANR	11106641	AssignmentExpression	sstrm -> is_temp = 1		11106426	0		=			
ANR	11106642	PtrMemberAccess	sstrm -> is_temp		11106426	0					
ANR	11106643	Identifier	sstrm		11106426	0					
ANR	11106644	Identifier	is_temp		11106426	1					
ANR	11106645	PrimaryExpression	1		11106426	1					
ANR	11106646	BreakStatement	break ;	337:12:10034:10039	11106426	7	True				
ANR	11106647	Label	case t_file :	338:8:10049:10060	11106426	8	True				
ANR	11106648	Identifier	t_file		11106426	0					
ANR	11106649	Statement	check_write_known_file	339:12:10074:10095	11106426	9	True				
ANR	11106650	Statement	(	339:34:10096:10096	11106426	10	True				
ANR	11106651	Statement	sstrm	339:35:10097:10101	11106426	11	True				
ANR	11106652	Statement	","	339:40:10102:10102	11106426	12	True				
ANR	11106653	Statement	sop	339:42:10104:10106	11106426	13	True				
ANR	11106654	Statement	","	339:45:10107:10107	11106426	14	True				
ANR	11106655	Statement	return	339:47:10109:10114	11106426	15	True				
ANR	11106656	Statement	)	339:53:10115:10115	11106426	16	True				
ANR	11106657	ExpressionStatement		339:54:10116:10116	11106426	17	True				
ANR	11106658	ExpressionStatement	"ialloc_set_space ( idmemory , use_space )"	340:12:10130:10167	11106426	18	True				
ANR	11106659	CallExpression	"ialloc_set_space ( idmemory , use_space )"		11106426	0					
ANR	11106660	Callee	ialloc_set_space		11106426	0					
ANR	11106661	Identifier	ialloc_set_space		11106426	0					
ANR	11106662	ArgumentList	idmemory		11106426	1					
ANR	11106663	Argument	idmemory		11106426	0					
ANR	11106664	Identifier	idmemory		11106426	0					
ANR	11106665	Argument	use_space		11106426	1					
ANR	11106666	Identifier	use_space		11106426	0					
ANR	11106667	GotoStatement	goto ens ;	341:12:10181:10189	11106426	19	True				
ANR	11106668	Identifier	ens		11106426	0					
ANR	11106669	Label	default :	342:8:10199:10206	11106426	20	True				
ANR	11106670	Identifier	default		11106426	0					
ANR	11106671	ExpressionStatement	check_proc ( * sop )	343:12:10220:10236	11106426	21	True				
ANR	11106672	CallExpression	check_proc ( * sop )		11106426	0					
ANR	11106673	Callee	check_proc		11106426	0					
ANR	11106674	Identifier	check_proc		11106426	0					
ANR	11106675	ArgumentList	* sop		11106426	1					
ANR	11106676	Argument	* sop		11106426	0					
ANR	11106677	UnaryOperationExpression	* sop		11106426	0					
ANR	11106678	UnaryOperator	*		11106426	0					
ANR	11106679	Identifier	sop		11106426	1					
ANR	11106680	ExpressionStatement	"ialloc_set_space ( idmemory , use_space )"	344:12:10250:10287	11106426	22	True				
ANR	11106681	CallExpression	"ialloc_set_space ( idmemory , use_space )"		11106426	0					
ANR	11106682	Callee	ialloc_set_space		11106426	0					
ANR	11106683	Identifier	ialloc_set_space		11106426	0					
ANR	11106684	ArgumentList	idmemory		11106426	1					
ANR	11106685	Argument	idmemory		11106426	0					
ANR	11106686	Identifier	idmemory		11106426	0					
ANR	11106687	Argument	use_space		11106426	1					
ANR	11106688	Identifier	use_space		11106426	0					
ANR	11106689	ExpressionStatement	"code = swrite_proc ( sop , & sstrm , iimemory )"	345:12:10301:10342	11106426	23	True				
ANR	11106690	AssignmentExpression	"code = swrite_proc ( sop , & sstrm , iimemory )"		11106426	0		=			
ANR	11106691	Identifier	code		11106426	0					
ANR	11106692	CallExpression	"swrite_proc ( sop , & sstrm , iimemory )"		11106426	1					
ANR	11106693	Callee	swrite_proc		11106426	0					
ANR	11106694	Identifier	swrite_proc		11106426	0					
ANR	11106695	ArgumentList	sop		11106426	1					
ANR	11106696	Argument	sop		11106426	0					
ANR	11106697	Identifier	sop		11106426	0					
ANR	11106698	Argument	& sstrm		11106426	1					
ANR	11106699	UnaryOperationExpression	& sstrm		11106426	0					
ANR	11106700	UnaryOperator	&		11106426	0					
ANR	11106701	Identifier	sstrm		11106426	1					
ANR	11106702	Argument	iimemory		11106426	2					
ANR	11106703	Identifier	iimemory		11106426	0					
ANR	11106704	IfStatement	if ( code < 0 )		11106426	24					
ANR	11106705	Condition	code < 0	346:16:10360:10367	11106426	0	True				
ANR	11106706	RelationalExpression	code < 0		11106426	0		<			
ANR	11106707	Identifier	code		11106426	0					
ANR	11106708	PrimaryExpression	0		11106426	1					
ANR	11106709	GotoStatement	goto out ;	347:16:10386:10394	11106426	1	True				
ANR	11106710	Identifier	out		11106426	0					
ANR	11106711	ExpressionStatement	sstrm -> is_temp = 2	348:12:10408:10426	11106426	25	True				
ANR	11106712	AssignmentExpression	sstrm -> is_temp = 2		11106426	0		=			
ANR	11106713	PtrMemberAccess	sstrm -> is_temp		11106426	0					
ANR	11106714	Identifier	sstrm		11106426	0					
ANR	11106715	Identifier	is_temp		11106426	1					
ANR	11106716	PrimaryExpression	2		11106426	1					
ANR	11106717	Label	ens :	349:10:10438:10441	11106426	26	True				
ANR	11106718	Identifier	ens		11106426	0					
ANR	11106719	ExpressionStatement	"code = filter_ensure_buf ( & sstrm , templat -> min_out_size + sstrm -> state -> templat -> min_in_size , iimemory , true , close )"	350:12:10455:10681	11106426	27	True				
ANR	11106720	AssignmentExpression	"code = filter_ensure_buf ( & sstrm , templat -> min_out_size + sstrm -> state -> templat -> min_in_size , iimemory , true , close )"		11106426	0		=			
ANR	11106721	Identifier	code		11106426	0					
ANR	11106722	CallExpression	"filter_ensure_buf ( & sstrm , templat -> min_out_size + sstrm -> state -> templat -> min_in_size , iimemory , true , close )"		11106426	1					
ANR	11106723	Callee	filter_ensure_buf		11106426	0					
ANR	11106724	Identifier	filter_ensure_buf		11106426	0					
ANR	11106725	ArgumentList	& sstrm		11106426	1					
ANR	11106726	Argument	& sstrm		11106426	0					
ANR	11106727	UnaryOperationExpression	& sstrm		11106426	0					
ANR	11106728	UnaryOperator	&		11106426	0					
ANR	11106729	Identifier	sstrm		11106426	1					
ANR	11106730	Argument	templat -> min_out_size + sstrm -> state -> templat -> min_in_size		11106426	1					
ANR	11106731	AdditiveExpression	templat -> min_out_size + sstrm -> state -> templat -> min_in_size		11106426	0		+			
ANR	11106732	PtrMemberAccess	templat -> min_out_size		11106426	0					
ANR	11106733	Identifier	templat		11106426	0					
ANR	11106734	Identifier	min_out_size		11106426	1					
ANR	11106735	PtrMemberAccess	sstrm -> state -> templat -> min_in_size		11106426	1					
ANR	11106736	PtrMemberAccess	sstrm -> state -> templat		11106426	0					
ANR	11106737	PtrMemberAccess	sstrm -> state		11106426	0					
ANR	11106738	Identifier	sstrm		11106426	0					
ANR	11106739	Identifier	state		11106426	1					
ANR	11106740	Identifier	templat		11106426	1					
ANR	11106741	Identifier	min_in_size		11106426	1					
ANR	11106742	Argument	iimemory		11106426	2					
ANR	11106743	Identifier	iimemory		11106426	0					
ANR	11106744	Argument	true		11106426	3					
ANR	11106745	Identifier	true		11106426	0					
ANR	11106746	Argument	close		11106426	4					
ANR	11106747	Identifier	close		11106426	0					
ANR	11106748	IfStatement	if ( code < 0 )		11106426	28					
ANR	11106749	Condition	code < 0	354:16:10699:10706	11106426	0	True				
ANR	11106750	RelationalExpression	code < 0		11106426	0		<			
ANR	11106751	Identifier	code		11106426	0					
ANR	11106752	PrimaryExpression	0		11106426	1					
ANR	11106753	GotoStatement	goto out ;	355:16:10725:10733	11106426	1	True				
ANR	11106754	Identifier	out		11106426	0					
ANR	11106755	BreakStatement	break ;	356:12:10747:10752	11106426	29	True				
ANR	11106756	IfStatement	if ( min_size < 128 )		11106426	12					
ANR	11106757	Condition	min_size < 128	358:8:10768:10781	11106426	0	True				
ANR	11106758	RelationalExpression	min_size < 128		11106426	0		<			
ANR	11106759	Identifier	min_size		11106426	0					
ANR	11106760	PrimaryExpression	128		11106426	1					
ANR	11106761	ExpressionStatement	min_size = file_default_buffer_size	359:8:10792:10827	11106426	1	True				
ANR	11106762	AssignmentExpression	min_size = file_default_buffer_size		11106426	0		=			
ANR	11106763	Identifier	min_size		11106426	0					
ANR	11106764	Identifier	file_default_buffer_size		11106426	1					
ANR	11106765	ExpressionStatement	"code = filter_open ( ""w"" , min_size , ( ref * ) sop , & s_filter_write_procs , templat , st , imemory )"	360:4:10833:10947	11106426	13	True				
ANR	11106766	AssignmentExpression	"code = filter_open ( ""w"" , min_size , ( ref * ) sop , & s_filter_write_procs , templat , st , imemory )"		11106426	0		=			
ANR	11106767	Identifier	code		11106426	0					
ANR	11106768	CallExpression	"filter_open ( ""w"" , min_size , ( ref * ) sop , & s_filter_write_procs , templat , st , imemory )"		11106426	1					
ANR	11106769	Callee	filter_open		11106426	0					
ANR	11106770	Identifier	filter_open		11106426	0					
ANR	11106771	ArgumentList	"""w"""		11106426	1					
ANR	11106772	Argument	"""w"""		11106426	0					
ANR	11106773	PrimaryExpression	"""w"""		11106426	0					
ANR	11106774	Argument	min_size		11106426	1					
ANR	11106775	Identifier	min_size		11106426	0					
ANR	11106776	Argument	( ref * ) sop		11106426	2					
ANR	11106777	CastExpression	( ref * ) sop		11106426	0					
ANR	11106778	CastTarget	ref *		11106426	0					
ANR	11106779	Identifier	sop		11106426	1					
ANR	11106780	Argument	& s_filter_write_procs		11106426	3					
ANR	11106781	UnaryOperationExpression	& s_filter_write_procs		11106426	0					
ANR	11106782	UnaryOperator	&		11106426	0					
ANR	11106783	Identifier	s_filter_write_procs		11106426	1					
ANR	11106784	Argument	templat		11106426	4					
ANR	11106785	Identifier	templat		11106426	0					
ANR	11106786	Argument	st		11106426	5					
ANR	11106787	Identifier	st		11106426	0					
ANR	11106788	Argument	imemory		11106426	6					
ANR	11106789	Identifier	imemory		11106426	0					
ANR	11106790	IfStatement	if ( code < 0 )		11106426	14					
ANR	11106791	Condition	code < 0	362:8:10957:10964	11106426	0	True				
ANR	11106792	RelationalExpression	code < 0		11106426	0		<			
ANR	11106793	Identifier	code		11106426	0					
ANR	11106794	PrimaryExpression	0		11106426	1					
ANR	11106795	GotoStatement	goto out ;	363:8:10975:10983	11106426	1	True				
ANR	11106796	Identifier	out		11106426	0					
ANR	11106797	ExpressionStatement	s = fptr ( sop )	364:4:10989:11002	11106426	15	True				
ANR	11106798	AssignmentExpression	s = fptr ( sop )		11106426	0		=			
ANR	11106799	Identifier	s		11106426	0					
ANR	11106800	CallExpression	fptr ( sop )		11106426	1					
ANR	11106801	Callee	fptr		11106426	0					
ANR	11106802	Identifier	fptr		11106426	0					
ANR	11106803	ArgumentList	sop		11106426	1					
ANR	11106804	Argument	sop		11106426	0					
ANR	11106805	Identifier	sop		11106426	0					
ANR	11106806	ExpressionStatement	s -> strm = sstrm	365:4:11008:11023	11106426	16	True				
ANR	11106807	AssignmentExpression	s -> strm = sstrm		11106426	0		=			
ANR	11106808	PtrMemberAccess	s -> strm		11106426	0					
ANR	11106809	Identifier	s		11106426	0					
ANR	11106810	Identifier	strm		11106426	1					
ANR	11106811	Identifier	sstrm		11106426	1					
ANR	11106812	ExpressionStatement	s -> close_strm = close	366:4:11029:11050	11106426	17	True				
ANR	11106813	AssignmentExpression	s -> close_strm = close		11106426	0		=			
ANR	11106814	PtrMemberAccess	s -> close_strm		11106426	0					
ANR	11106815	Identifier	s		11106426	0					
ANR	11106816	Identifier	close_strm		11106426	1					
ANR	11106817	Identifier	close		11106426	1					
ANR	11106818	ExpressionStatement	pop ( op - sop )	367:4:11056:11069	11106426	18	True				
ANR	11106819	CallExpression	pop ( op - sop )		11106426	0					
ANR	11106820	Callee	pop		11106426	0					
ANR	11106821	Identifier	pop		11106426	0					
ANR	11106822	ArgumentList	op - sop		11106426	1					
ANR	11106823	Argument	op - sop		11106426	0					
ANR	11106824	AdditiveExpression	op - sop		11106426	0		-			
ANR	11106825	Identifier	op		11106426	0					
ANR	11106826	Identifier	sop		11106426	1					
ANR	11106827	Label	out :	368:0:11071:11074	11106426	19	True				
ANR	11106828	Identifier	out		11106426	0					
ANR	11106829	ExpressionStatement	"ialloc_set_space ( idmemory , save_space )"	369:4:11080:11118	11106426	20	True				
ANR	11106830	CallExpression	"ialloc_set_space ( idmemory , save_space )"		11106426	0					
ANR	11106831	Callee	ialloc_set_space		11106426	0					
ANR	11106832	Identifier	ialloc_set_space		11106426	0					
ANR	11106833	ArgumentList	idmemory		11106426	1					
ANR	11106834	Argument	idmemory		11106426	0					
ANR	11106835	Identifier	idmemory		11106426	0					
ANR	11106836	Argument	save_space		11106426	1					
ANR	11106837	Identifier	save_space		11106426	0					
ANR	11106838	ReturnStatement	return code ;	370:4:11124:11135	11106426	21	True				
ANR	11106839	Identifier	code		11106426	0					
ANR	11106840	ReturnType	int		11106426	1					
ANR	11106841	Identifier	filter_write		11106426	2					
ANR	11106842	ParameterList	"i_ctx_t * i_ctx_p , int npop , const stream_template * templat , stream_state * st , uint space"		11106426	3					
ANR	11106843	Parameter	i_ctx_t * i_ctx_p	300:13:8709:8724	11106426	0	True				
ANR	11106844	ParameterType	i_ctx_t *		11106426	0					
ANR	11106845	Identifier	i_ctx_p		11106426	1					
ANR	11106846	Parameter	int npop	300:31:8727:8734	11106426	1	True				
ANR	11106847	ParameterType	int		11106426	0					
ANR	11106848	Identifier	npop		11106426	1					
ANR	11106849	Parameter	const stream_template * templat	300:41:8737:8767	11106426	2	True				
ANR	11106850	ParameterType	const stream_template *		11106426	0					
ANR	11106851	Identifier	templat		11106426	1					
ANR	11106852	Parameter	stream_state * st	301:13:8783:8799	11106426	3	True				
ANR	11106853	ParameterType	stream_state *		11106426	0					
ANR	11106854	Identifier	st		11106426	1					
ANR	11106855	Parameter	uint space	301:32:8802:8811	11106426	4	True				
ANR	11106856	ParameterType	uint		11106426	0					
ANR	11106857	Identifier	space		11106426	1					
ANR	11106858	CFGEntryNode	ENTRY		11106426		True				
ANR	11106859	CFGExitNode	EXIT		11106426		True				
ANR	11106860	Symbol	sop -> value . bytes		11106426						
ANR	11106861	Symbol	& sstrm		11106426						
ANR	11106862	Symbol	sop -> value		11106426						
ANR	11106863	Symbol	templat -> min_out_size		11106426						
ANR	11106864	Symbol	osp		11106426						
ANR	11106865	Symbol	space		11106426						
ANR	11106866	Symbol	npop		11106426						
ANR	11106867	Symbol	r_has_type		11106426						
ANR	11106868	Symbol	& close		11106426						
ANR	11106869	Symbol	* * * sstrm		11106426						
ANR	11106870	Symbol	* templat		11106426						
ANR	11106871	Symbol	sop		11106426						
ANR	11106872	Symbol	dict_bool_param		11106426						
ANR	11106873	Symbol	imemory		11106426						
ANR	11106874	Symbol	r_type		11106426						
ANR	11106875	Symbol	s -> strm		11106426						
ANR	11106876	Symbol	use_space		11106426						
ANR	11106877	Symbol	* * sstrm		11106426						
ANR	11106878	Symbol	s -> close_strm		11106426						
ANR	11106879	Symbol	templat		11106426						
ANR	11106880	Symbol	sstrm -> is_temp		11106426						
ANR	11106881	Symbol	iimemory		11106426						
ANR	11106882	Symbol	* sstrm		11106426						
ANR	11106883	Symbol	i_ctx_p		11106426						
ANR	11106884	Symbol	* sstrm -> state		11106426						
ANR	11106885	Symbol	sstrm -> state		11106426						
ANR	11106886	Symbol	true		11106426						
ANR	11106887	Symbol	swrite_proc		11106426						
ANR	11106888	Symbol	min_size		11106426						
ANR	11106889	Symbol	file_default_buffer_size		11106426						
ANR	11106890	Symbol	avm_system		11106426						
ANR	11106891	Symbol	templat -> min_in_size		11106426						
ANR	11106892	Symbol	max_min_left		11106426						
ANR	11106893	Symbol	code		11106426						
ANR	11106894	Symbol	t_dictionary		11106426						
ANR	11106895	Symbol	filter_open		11106426						
ANR	11106896	Symbol	sstrm		11106426						
ANR	11106897	Symbol	sstrm -> state -> templat -> min_in_size		11106426						
ANR	11106898	Symbol	idmemory		11106426						
ANR	11106899	Symbol	r_space		11106426						
ANR	11106900	Symbol	file_alloc_stream		11106426						
ANR	11106901	Symbol	* * sstrm -> state		11106426						
ANR	11106902	Symbol	r_size		11106426						
ANR	11106903	Symbol	ialloc_space		11106426						
ANR	11106904	Symbol	sstrm -> state -> templat		11106426						
ANR	11106905	Symbol	close		11106426						
ANR	11106906	Symbol	filter_ensure_buf		11106426						
ANR	11106907	Symbol	* sstrm -> state -> templat		11106426						
ANR	11106908	Symbol	& s_filter_write_procs		11106426						
ANR	11106909	Symbol	st		11106426						
ANR	11106910	Symbol	op		11106426						
ANR	11106911	Symbol	max		11106426						
ANR	11106912	Symbol	false		11106426						
ANR	11106913	Symbol	gs_error_VMerror		11106426						
ANR	11106914	Symbol	gs_note_error		11106426						
ANR	11106915	Symbol	s		11106426						
ANR	11106916	Symbol	save_space		11106426						
ANR	11106917	Symbol	fptr		11106426						
ANR	11106918	Symbol	* s		11106426						
ANR	11106919	Symbol	* sop		11106426						
ANR	11106920	Function	filter_write_simple	372:0:11139:11271							
ANR	11106921	FunctionDef	"filter_write_simple (i_ctx_t * i_ctx_p , const stream_template * templat)"		11106920	0					
ANR	11106922	CompoundStatement		374:0:11214:11271	11106920	0					
ANR	11106923	ReturnStatement	"return filter_write ( i_ctx_p , 0 , templat , NULL , 0 ) ;"	375:4:11220:11269	11106920	0	True				
ANR	11106924	CallExpression	"filter_write ( i_ctx_p , 0 , templat , NULL , 0 )"		11106920	0					
ANR	11106925	Callee	filter_write		11106920	0					
ANR	11106926	Identifier	filter_write		11106920	0					
ANR	11106927	ArgumentList	i_ctx_p		11106920	1					
ANR	11106928	Argument	i_ctx_p		11106920	0					
ANR	11106929	Identifier	i_ctx_p		11106920	0					
ANR	11106930	Argument	0		11106920	1					
ANR	11106931	PrimaryExpression	0		11106920	0					
ANR	11106932	Argument	templat		11106920	2					
ANR	11106933	Identifier	templat		11106920	0					
ANR	11106934	Argument	NULL		11106920	3					
ANR	11106935	Identifier	NULL		11106920	0					
ANR	11106936	Argument	0		11106920	4					
ANR	11106937	PrimaryExpression	0		11106920	0					
ANR	11106938	ReturnType	int		11106920	1					
ANR	11106939	Identifier	filter_write_simple		11106920	2					
ANR	11106940	ParameterList	"i_ctx_t * i_ctx_p , const stream_template * templat"		11106920	3					
ANR	11106941	Parameter	i_ctx_t * i_ctx_p	373:20:11163:11178	11106920	0	True				
ANR	11106942	ParameterType	i_ctx_t *		11106920	0					
ANR	11106943	Identifier	i_ctx_p		11106920	1					
ANR	11106944	Parameter	const stream_template * templat	373:38:11181:11211	11106920	1	True				
ANR	11106945	ParameterType	const stream_template *		11106920	0					
ANR	11106946	Identifier	templat		11106920	1					
ANR	11106947	CFGEntryNode	ENTRY		11106920		True				
ANR	11106948	CFGExitNode	EXIT		11106920		True				
ANR	11106949	Symbol	NULL		11106920						
ANR	11106950	Symbol	i_ctx_p		11106920						
ANR	11106951	Symbol	filter_write		11106920						
ANR	11106952	Symbol	templat		11106920						
ANR	11106953	Function	s_Null1D_process	380:0:11411:11682							
ANR	11106954	FunctionDef	"s_Null1D_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		11106953	0					
ANR	11106955	CompoundStatement		383:0:11537:11682	11106953	0					
ANR	11106956	IfStatement	if ( pr -> ptr >= pr -> limit )		11106953	0					
ANR	11106957	Condition	pr -> ptr >= pr -> limit	384:8:11547:11566	11106953	0	True				
ANR	11106958	RelationalExpression	pr -> ptr >= pr -> limit		11106953	0		>=			
ANR	11106959	PtrMemberAccess	pr -> ptr		11106953	0					
ANR	11106960	Identifier	pr		11106953	0					
ANR	11106961	Identifier	ptr		11106953	1					
ANR	11106962	PtrMemberAccess	pr -> limit		11106953	1					
ANR	11106963	Identifier	pr		11106953	0					
ANR	11106964	Identifier	limit		11106953	1					
ANR	11106965	ReturnStatement	return 0 ;	385:8:11577:11585	11106953	1	True				
ANR	11106966	PrimaryExpression	0		11106953	0					
ANR	11106967	IfStatement	if ( pw -> ptr >= pw -> limit )		11106953	1					
ANR	11106968	Condition	pw -> ptr >= pw -> limit	386:8:11595:11614	11106953	0	True				
ANR	11106969	RelationalExpression	pw -> ptr >= pw -> limit		11106953	0		>=			
ANR	11106970	PtrMemberAccess	pw -> ptr		11106953	0					
ANR	11106971	Identifier	pw		11106953	0					
ANR	11106972	Identifier	ptr		11106953	1					
ANR	11106973	PtrMemberAccess	pw -> limit		11106953	1					
ANR	11106974	Identifier	pw		11106953	0					
ANR	11106975	Identifier	limit		11106953	1					
ANR	11106976	ReturnStatement	return 1 ;	387:8:11625:11633	11106953	1	True				
ANR	11106977	PrimaryExpression	1		11106953	0					
ANR	11106978	ExpressionStatement	* ++ ( pw -> ptr ) = * ++ ( pr -> ptr )	388:4:11639:11666	11106953	2	True				
ANR	11106979	AssignmentExpression	* ++ ( pw -> ptr ) = * ++ ( pr -> ptr )		11106953	0		=			
ANR	11106980	UnaryOperationExpression	* ++ ( pw -> ptr )		11106953	0					
ANR	11106981	UnaryOperator	*		11106953	0					
ANR	11106982	UnaryExpression	++ ( pw -> ptr )		11106953	1					
ANR	11106983	IncDec	++		11106953	0					
ANR	11106984	PtrMemberAccess	pw -> ptr		11106953	1					
ANR	11106985	Identifier	pw		11106953	0					
ANR	11106986	Identifier	ptr		11106953	1					
ANR	11106987	UnaryOperationExpression	* ++ ( pr -> ptr )		11106953	1					
ANR	11106988	UnaryOperator	*		11106953	0					
ANR	11106989	UnaryExpression	++ ( pr -> ptr )		11106953	1					
ANR	11106990	IncDec	++		11106953	0					
ANR	11106991	PtrMemberAccess	pr -> ptr		11106953	1					
ANR	11106992	Identifier	pr		11106953	0					
ANR	11106993	Identifier	ptr		11106953	1					
ANR	11106994	ReturnStatement	return 1 ;	389:4:11672:11680	11106953	3	True				
ANR	11106995	PrimaryExpression	1		11106953	0					
ANR	11106996	ReturnType	static int		11106953	1					
ANR	11106997	Identifier	s_Null1D_process		11106953	2					
ANR	11106998	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		11106953	3					
ANR	11106999	Parameter	stream_state * st	381:17:11439:11455	11106953	0	True				
ANR	11107000	ParameterType	stream_state *		11106953	0					
ANR	11107001	Identifier	st		11106953	1					
ANR	11107002	Parameter	stream_cursor_read * pr	381:36:11458:11480	11106953	1	True				
ANR	11107003	ParameterType	stream_cursor_read *		11106953	0					
ANR	11107004	Identifier	pr		11106953	1					
ANR	11107005	Parameter	stream_cursor_write * pw	382:17:11500:11523	11106953	2	True				
ANR	11107006	ParameterType	stream_cursor_write *		11106953	0					
ANR	11107007	Identifier	pw		11106953	1					
ANR	11107008	Parameter	bool last	382:43:11526:11534	11106953	3	True				
ANR	11107009	ParameterType	bool		11106953	0					
ANR	11107010	Identifier	last		11106953	1					
ANR	11107011	CFGEntryNode	ENTRY		11106953		True				
ANR	11107012	CFGExitNode	EXIT		11106953		True				
ANR	11107013	Symbol	* ++ ( pw -> ptr )		11106953						
ANR	11107014	Symbol	st		11106953						
ANR	11107015	Symbol	pr		11106953						
ANR	11107016	Symbol	last		11106953						
ANR	11107017	Symbol	pw		11106953						
ANR	11107018	Symbol	* pr		11106953						
ANR	11107019	Symbol	pr -> limit		11106953						
ANR	11107020	Symbol	* * pr		11106953						
ANR	11107021	Symbol	* pw		11106953						
ANR	11107022	Symbol	pw -> limit		11106953						
ANR	11107023	Symbol	* * pw		11106953						
ANR	11107024	Symbol	* pr -> ptr		11106953						
ANR	11107025	Symbol	* ++ ( pr -> ptr )		11106953						
ANR	11107026	Symbol	* pw -> ptr		11106953						
ANR	11107027	Symbol	pr -> ptr		11106953						
ANR	11107028	Symbol	pw -> ptr		11106953						
ANR	11107029	DeclStmt									
ANR	11107030	Decl							const stream_template	const stream_template	s_Null1D_template
ANR	11107031	Function	s_EOFD_process	398:0:12003:12146							
ANR	11107032	FunctionDef	"s_EOFD_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		11107031	0					
ANR	11107033	CompoundStatement		401:0:12127:12146	11107031	0					
ANR	11107034	ReturnStatement	return EOFC ;	402:4:12133:12144	11107031	0	True				
ANR	11107035	Identifier	EOFC		11107031	0					
ANR	11107036	ReturnType	static int		11107031	1					
ANR	11107037	Identifier	s_EOFD_process		11107031	2					
ANR	11107038	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		11107031	3					
ANR	11107039	Parameter	stream_state * st	399:15:12029:12045	11107031	0	True				
ANR	11107040	ParameterType	stream_state *		11107031	0					
ANR	11107041	Identifier	st		11107031	1					
ANR	11107042	Parameter	stream_cursor_read * pr	399:34:12048:12070	11107031	1	True				
ANR	11107043	ParameterType	stream_cursor_read *		11107031	0					
ANR	11107044	Identifier	pr		11107031	1					
ANR	11107045	Parameter	stream_cursor_write * pw	400:17:12090:12113	11107031	2	True				
ANR	11107046	ParameterType	stream_cursor_write *		11107031	0					
ANR	11107047	Identifier	pw		11107031	1					
ANR	11107048	Parameter	bool last	400:43:12116:12124	11107031	3	True				
ANR	11107049	ParameterType	bool		11107031	0					
ANR	11107050	Identifier	last		11107031	1					
ANR	11107051	CFGEntryNode	ENTRY		11107031		True				
ANR	11107052	CFGExitNode	EXIT		11107031		True				
ANR	11107053	Symbol	st		11107031						
ANR	11107054	Symbol	pr		11107031						
ANR	11107055	Symbol	last		11107031						
ANR	11107056	Symbol	pw		11107031						
ANR	11107057	Symbol	EOFC		11107031						
ANR	11107058	DeclStmt									
ANR	11107059	Decl							const stream_template	const stream_template	s_EOFD_template
ANR	11107060	Function	zEOFD	410:0:12339:12434							
ANR	11107061	FunctionDef	zEOFD (i_ctx_t * i_ctx_p)		11107060	0					
ANR	11107062	CompoundStatement		412:0:12374:12434	11107060	0					
ANR	11107063	ReturnStatement	"return filter_read_simple ( i_ctx_p , & s_EOFD_template ) ;"	413:4:12380:12432	11107060	0	True				
ANR	11107064	CallExpression	"filter_read_simple ( i_ctx_p , & s_EOFD_template )"		11107060	0					
ANR	11107065	Callee	filter_read_simple		11107060	0					
ANR	11107066	Identifier	filter_read_simple		11107060	0					
ANR	11107067	ArgumentList	i_ctx_p		11107060	1					
ANR	11107068	Argument	i_ctx_p		11107060	0					
ANR	11107069	Identifier	i_ctx_p		11107060	0					
ANR	11107070	Argument	& s_EOFD_template		11107060	1					
ANR	11107071	UnaryOperationExpression	& s_EOFD_template		11107060	0					
ANR	11107072	UnaryOperator	&		11107060	0					
ANR	11107073	Identifier	s_EOFD_template		11107060	1					
ANR	11107074	ReturnType	static int		11107060	1					
ANR	11107075	Identifier	zEOFD		11107060	2					
ANR	11107076	ParameterList	i_ctx_t * i_ctx_p		11107060	3					
ANR	11107077	Parameter	i_ctx_t * i_ctx_p	411:6:12356:12371	11107060	0	True				
ANR	11107078	ParameterType	i_ctx_t *		11107060	0					
ANR	11107079	Identifier	i_ctx_p		11107060	1					
ANR	11107080	CFGEntryNode	ENTRY		11107060		True				
ANR	11107081	CFGExitNode	EXIT		11107060		True				
ANR	11107082	Symbol	filter_read_simple		11107060						
ANR	11107083	Symbol	& s_EOFD_template		11107060						
ANR	11107084	Symbol	i_ctx_p		11107060						
ANR	11107085	Function	filter_ensure_buf	418:0:12542:14043							
ANR	11107086	FunctionDef	"filter_ensure_buf (stream * * ps , uint min_buf_size , gs_ref_memory_t * imem , bool writing , int close)"		11107085	0					
ANR	11107087	CompoundStatement		421:0:12670:14043	11107085	0					
ANR	11107088	IdentifierDeclStatement	stream * s = * ps ;	422:4:12676:12691	11107085	0	True				
ANR	11107089	IdentifierDecl	* s = * ps		11107085	0					
ANR	11107090	IdentifierDeclType	stream *		11107085	0					
ANR	11107091	Identifier	s		11107085	1					
ANR	11107092	AssignmentExpression	* s = * ps		11107085	2		=			
ANR	11107093	Identifier	s		11107085	0					
ANR	11107094	UnaryOperationExpression	* ps		11107085	1					
ANR	11107095	UnaryOperator	*		11107085	0					
ANR	11107096	Identifier	ps		11107085	1					
ANR	11107097	IdentifierDeclStatement	uint min_size = min_buf_size + max_min_left ;	423:4:12697:12740	11107085	1	True				
ANR	11107098	IdentifierDecl	min_size = min_buf_size + max_min_left		11107085	0					
ANR	11107099	IdentifierDeclType	uint		11107085	0					
ANR	11107100	Identifier	min_size		11107085	1					
ANR	11107101	AssignmentExpression	min_size = min_buf_size + max_min_left		11107085	2		=			
ANR	11107102	Identifier	min_size		11107085	0					
ANR	11107103	AdditiveExpression	min_buf_size + max_min_left		11107085	1		+			
ANR	11107104	Identifier	min_buf_size		11107085	0					
ANR	11107105	Identifier	max_min_left		11107085	1					
ANR	11107106	IdentifierDeclStatement	stream * bs ;	424:4:12746:12756	11107085	2	True				
ANR	11107107	IdentifierDecl	* bs		11107085	0					
ANR	11107108	IdentifierDeclType	stream *		11107085	0					
ANR	11107109	Identifier	bs		11107085	1					
ANR	11107110	IdentifierDeclStatement	ref bsop ;	425:4:12762:12770	11107085	3	True				
ANR	11107111	IdentifierDecl	bsop		11107085	0					
ANR	11107112	IdentifierDeclType	ref		11107085	0					
ANR	11107113	Identifier	bsop		11107085	1					
ANR	11107114	IdentifierDeclStatement	int code ;	426:4:12776:12784	11107085	4	True				
ANR	11107115	IdentifierDecl	code		11107085	0					
ANR	11107116	IdentifierDeclType	int		11107085	0					
ANR	11107117	Identifier	code		11107085	1					
ANR	11107118	IfStatement	if ( s -> modes == 0 || s -> bsize >= min_size )		11107085	5					
ANR	11107119	Condition	s -> modes == 0 || s -> bsize >= min_size	428:8:12795:12855	11107085	0	True				
ANR	11107120	OrExpression	s -> modes == 0 || s -> bsize >= min_size		11107085	0		||			
ANR	11107121	EqualityExpression	s -> modes == 0		11107085	0		==			
ANR	11107122	PtrMemberAccess	s -> modes		11107085	0					
ANR	11107123	Identifier	s		11107085	0					
ANR	11107124	Identifier	modes		11107085	1					
ANR	11107125	PrimaryExpression	0		11107085	1					
ANR	11107126	RelationalExpression	s -> bsize >= min_size		11107085	1		>=			
ANR	11107127	PtrMemberAccess	s -> bsize		11107085	0					
ANR	11107128	Identifier	s		11107085	0					
ANR	11107129	Identifier	bsize		11107085	1					
ANR	11107130	Identifier	min_size		11107085	1					
ANR	11107131	ReturnStatement	return 0 ;	429:8:12866:12874	11107085	1	True				
ANR	11107132	PrimaryExpression	0		11107085	0					
ANR	11107133	IfStatement	if ( s -> cbuf == 0 )		11107085	6					
ANR	11107134	Condition	s -> cbuf == 0	431:8:12938:12949	11107085	0	True				
ANR	11107135	EqualityExpression	s -> cbuf == 0		11107085	0		==			
ANR	11107136	PtrMemberAccess	s -> cbuf		11107085	0					
ANR	11107137	Identifier	s		11107085	0					
ANR	11107138	Identifier	cbuf		11107085	1					
ANR	11107139	PrimaryExpression	0		11107085	1					
ANR	11107140	CompoundStatement		15:8:431:539	11107085	1					
ANR	11107141	IdentifierDeclStatement	"uint len = max ( min_size , 128 ) ;"	434:8:13063:13092	11107085	0	True				
ANR	11107142	IdentifierDecl	"len = max ( min_size , 128 )"		11107085	0					
ANR	11107143	IdentifierDeclType	uint		11107085	0					
ANR	11107144	Identifier	len		11107085	1					
ANR	11107145	AssignmentExpression	"len = max ( min_size , 128 )"		11107085	2		=			
ANR	11107146	Identifier	len		11107085	0					
ANR	11107147	CallExpression	"max ( min_size , 128 )"		11107085	1					
ANR	11107148	Callee	max		11107085	0					
ANR	11107149	Identifier	max		11107085	0					
ANR	11107150	ArgumentList	min_size		11107085	1					
ANR	11107151	Argument	min_size		11107085	0					
ANR	11107152	Identifier	min_size		11107085	0					
ANR	11107153	Argument	128		11107085	1					
ANR	11107154	PrimaryExpression	128		11107085	0					
ANR	11107155	IdentifierDeclStatement	"byte * buf = gs_alloc_bytes ( ( gs_memory_t * ) imem , len , ""filter_ensure_buf"" ) ;"	435:8:13102:13210	11107085	1	True				
ANR	11107156	IdentifierDecl	"* buf = gs_alloc_bytes ( ( gs_memory_t * ) imem , len , ""filter_ensure_buf"" )"		11107085	0					
ANR	11107157	IdentifierDeclType	byte *		11107085	0					
ANR	11107158	Identifier	buf		11107085	1					
ANR	11107159	AssignmentExpression	"* buf = gs_alloc_bytes ( ( gs_memory_t * ) imem , len , ""filter_ensure_buf"" )"		11107085	2		=			
ANR	11107160	Identifier	buf		11107085	0					
ANR	11107161	CallExpression	"gs_alloc_bytes ( ( gs_memory_t * ) imem , len , ""filter_ensure_buf"" )"		11107085	1					
ANR	11107162	Callee	gs_alloc_bytes		11107085	0					
ANR	11107163	Identifier	gs_alloc_bytes		11107085	0					
ANR	11107164	ArgumentList	( gs_memory_t * ) imem		11107085	1					
ANR	11107165	Argument	( gs_memory_t * ) imem		11107085	0					
ANR	11107166	CastExpression	( gs_memory_t * ) imem		11107085	0					
ANR	11107167	CastTarget	gs_memory_t *		11107085	0					
ANR	11107168	Identifier	imem		11107085	1					
ANR	11107169	Argument	len		11107085	1					
ANR	11107170	Identifier	len		11107085	0					
ANR	11107171	Argument	"""filter_ensure_buf"""		11107085	2					
ANR	11107172	PrimaryExpression	"""filter_ensure_buf"""		11107085	0					
ANR	11107173	IfStatement	if ( buf == 0 )		11107085	2					
ANR	11107174	Condition	buf == 0	438:12:13225:13232	11107085	0	True				
ANR	11107175	EqualityExpression	buf == 0		11107085	0		==			
ANR	11107176	Identifier	buf		11107085	0					
ANR	11107177	PrimaryExpression	0		11107085	1					
ANR	11107178	ExpressionStatement	return_error ( gs_error_VMerror )	439:12:13247:13277	11107085	1	True				
ANR	11107179	CallExpression	return_error ( gs_error_VMerror )		11107085	0					
ANR	11107180	Callee	return_error		11107085	0					
ANR	11107181	Identifier	return_error		11107085	0					
ANR	11107182	ArgumentList	gs_error_VMerror		11107085	1					
ANR	11107183	Argument	gs_error_VMerror		11107085	0					
ANR	11107184	Identifier	gs_error_VMerror		11107085	0					
ANR	11107185	ExpressionStatement	s -> cbuf = buf	440:8:13287:13300	11107085	3	True				
ANR	11107186	AssignmentExpression	s -> cbuf = buf		11107085	0		=			
ANR	11107187	PtrMemberAccess	s -> cbuf		11107085	0					
ANR	11107188	Identifier	s		11107085	0					
ANR	11107189	Identifier	cbuf		11107085	1					
ANR	11107190	Identifier	buf		11107085	1					
ANR	11107191	ExpressionStatement	s -> srptr = s -> srlimit = s -> swptr = buf - 1	441:8:13310:13352	11107085	4	True				
ANR	11107192	AssignmentExpression	s -> srptr = s -> srlimit = s -> swptr = buf - 1		11107085	0		=			
ANR	11107193	PtrMemberAccess	s -> srptr		11107085	0					
ANR	11107194	Identifier	s		11107085	0					
ANR	11107195	Identifier	srptr		11107085	1					
ANR	11107196	AssignmentExpression	s -> srlimit = s -> swptr = buf - 1		11107085	1		=			
ANR	11107197	PtrMemberAccess	s -> srlimit		11107085	0					
ANR	11107198	Identifier	s		11107085	0					
ANR	11107199	Identifier	srlimit		11107085	1					
ANR	11107200	AssignmentExpression	s -> swptr = buf - 1		11107085	1		=			
ANR	11107201	PtrMemberAccess	s -> swptr		11107085	0					
ANR	11107202	Identifier	s		11107085	0					
ANR	11107203	Identifier	swptr		11107085	1					
ANR	11107204	AdditiveExpression	buf - 1		11107085	1		-			
ANR	11107205	Identifier	buf		11107085	0					
ANR	11107206	PrimaryExpression	1		11107085	1					
ANR	11107207	ExpressionStatement	s -> swlimit = buf - 1 + len	442:8:13362:13388	11107085	5	True				
ANR	11107208	AssignmentExpression	s -> swlimit = buf - 1 + len		11107085	0		=			
ANR	11107209	PtrMemberAccess	s -> swlimit		11107085	0					
ANR	11107210	Identifier	s		11107085	0					
ANR	11107211	Identifier	swlimit		11107085	1					
ANR	11107212	AdditiveExpression	buf - 1 + len		11107085	1		-			
ANR	11107213	Identifier	buf		11107085	0					
ANR	11107214	AdditiveExpression	1 + len		11107085	1		+			
ANR	11107215	PrimaryExpression	1		11107085	0					
ANR	11107216	Identifier	len		11107085	1					
ANR	11107217	ExpressionStatement	s -> bsize = s -> cbsize = len	443:8:13398:13424	11107085	6	True				
ANR	11107218	AssignmentExpression	s -> bsize = s -> cbsize = len		11107085	0		=			
ANR	11107219	PtrMemberAccess	s -> bsize		11107085	0					
ANR	11107220	Identifier	s		11107085	0					
ANR	11107221	Identifier	bsize		11107085	1					
ANR	11107222	AssignmentExpression	s -> cbsize = len		11107085	1		=			
ANR	11107223	PtrMemberAccess	s -> cbsize		11107085	0					
ANR	11107224	Identifier	s		11107085	0					
ANR	11107225	Identifier	cbsize		11107085	1					
ANR	11107226	Identifier	len		11107085	1					
ANR	11107227	ReturnStatement	return 0 ;	444:8:13434:13442	11107085	7	True				
ANR	11107228	PrimaryExpression	0		11107085	0					
ANR	11107229	ElseStatement	else		11107085	0					
ANR	11107230	CompoundStatement		25:11:784:784	11107085	0					
ANR	11107231	IfStatement	if ( writing )		11107085	0					
ANR	11107232	Condition	writing	447:12:13516:13522	11107085	0	True				
ANR	11107233	Identifier	writing		11107085	0					
ANR	11107234	ExpressionStatement	"code = filter_open ( ""w"" , min_size , & bsop , & s_filter_write_procs , & s_NullE_template , NULL , ( gs_memory_t * ) imem )"	448:12:13537:13677	11107085	1	True				
ANR	11107235	AssignmentExpression	"code = filter_open ( ""w"" , min_size , & bsop , & s_filter_write_procs , & s_NullE_template , NULL , ( gs_memory_t * ) imem )"		11107085	0		=			
ANR	11107236	Identifier	code		11107085	0					
ANR	11107237	CallExpression	"filter_open ( ""w"" , min_size , & bsop , & s_filter_write_procs , & s_NullE_template , NULL , ( gs_memory_t * ) imem )"		11107085	1					
ANR	11107238	Callee	filter_open		11107085	0					
ANR	11107239	Identifier	filter_open		11107085	0					
ANR	11107240	ArgumentList	"""w"""		11107085	1					
ANR	11107241	Argument	"""w"""		11107085	0					
ANR	11107242	PrimaryExpression	"""w"""		11107085	0					
ANR	11107243	Argument	min_size		11107085	1					
ANR	11107244	Identifier	min_size		11107085	0					
ANR	11107245	Argument	& bsop		11107085	2					
ANR	11107246	UnaryOperationExpression	& bsop		11107085	0					
ANR	11107247	UnaryOperator	&		11107085	0					
ANR	11107248	Identifier	bsop		11107085	1					
ANR	11107249	Argument	& s_filter_write_procs		11107085	3					
ANR	11107250	UnaryOperationExpression	& s_filter_write_procs		11107085	0					
ANR	11107251	UnaryOperator	&		11107085	0					
ANR	11107252	Identifier	s_filter_write_procs		11107085	1					
ANR	11107253	Argument	& s_NullE_template		11107085	4					
ANR	11107254	UnaryOperationExpression	& s_NullE_template		11107085	0					
ANR	11107255	UnaryOperator	&		11107085	0					
ANR	11107256	Identifier	s_NullE_template		11107085	1					
ANR	11107257	Argument	NULL		11107085	5					
ANR	11107258	Identifier	NULL		11107085	0					
ANR	11107259	Argument	( gs_memory_t * ) imem		11107085	6					
ANR	11107260	CastExpression	( gs_memory_t * ) imem		11107085	0					
ANR	11107261	CastTarget	gs_memory_t *		11107085	0					
ANR	11107262	Identifier	imem		11107085	1					
ANR	11107263	ElseStatement	else		11107085	0					
ANR	11107264	ExpressionStatement	"code = filter_open ( ""r"" , min_size , & bsop , & s_filter_read_procs , & s_Null1D_template , NULL , ( gs_memory_t * ) imem )"	451:12:13704:13844	11107085	0	True				
ANR	11107265	AssignmentExpression	"code = filter_open ( ""r"" , min_size , & bsop , & s_filter_read_procs , & s_Null1D_template , NULL , ( gs_memory_t * ) imem )"		11107085	0		=			
ANR	11107266	Identifier	code		11107085	0					
ANR	11107267	CallExpression	"filter_open ( ""r"" , min_size , & bsop , & s_filter_read_procs , & s_Null1D_template , NULL , ( gs_memory_t * ) imem )"		11107085	1					
ANR	11107268	Callee	filter_open		11107085	0					
ANR	11107269	Identifier	filter_open		11107085	0					
ANR	11107270	ArgumentList	"""r"""		11107085	1					
ANR	11107271	Argument	"""r"""		11107085	0					
ANR	11107272	PrimaryExpression	"""r"""		11107085	0					
ANR	11107273	Argument	min_size		11107085	1					
ANR	11107274	Identifier	min_size		11107085	0					
ANR	11107275	Argument	& bsop		11107085	2					
ANR	11107276	UnaryOperationExpression	& bsop		11107085	0					
ANR	11107277	UnaryOperator	&		11107085	0					
ANR	11107278	Identifier	bsop		11107085	1					
ANR	11107279	Argument	& s_filter_read_procs		11107085	3					
ANR	11107280	UnaryOperationExpression	& s_filter_read_procs		11107085	0					
ANR	11107281	UnaryOperator	&		11107085	0					
ANR	11107282	Identifier	s_filter_read_procs		11107085	1					
ANR	11107283	Argument	& s_Null1D_template		11107085	4					
ANR	11107284	UnaryOperationExpression	& s_Null1D_template		11107085	0					
ANR	11107285	UnaryOperator	&		11107085	0					
ANR	11107286	Identifier	s_Null1D_template		11107085	1					
ANR	11107287	Argument	NULL		11107085	5					
ANR	11107288	Identifier	NULL		11107085	0					
ANR	11107289	Argument	( gs_memory_t * ) imem		11107085	6					
ANR	11107290	CastExpression	( gs_memory_t * ) imem		11107085	0					
ANR	11107291	CastTarget	gs_memory_t *		11107085	0					
ANR	11107292	Identifier	imem		11107085	1					
ANR	11107293	IfStatement	if ( code < 0 )		11107085	1					
ANR	11107294	Condition	code < 0	453:12:13858:13865	11107085	0	True				
ANR	11107295	RelationalExpression	code < 0		11107085	0		<			
ANR	11107296	Identifier	code		11107085	0					
ANR	11107297	PrimaryExpression	0		11107085	1					
ANR	11107298	ReturnStatement	return code ;	454:12:13880:13891	11107085	1	True				
ANR	11107299	Identifier	code		11107085	0					
ANR	11107300	ExpressionStatement	bs = fptr ( & bsop )	455:8:13901:13917	11107085	2	True				
ANR	11107301	AssignmentExpression	bs = fptr ( & bsop )		11107085	0		=			
ANR	11107302	Identifier	bs		11107085	0					
ANR	11107303	CallExpression	fptr ( & bsop )		11107085	1					
ANR	11107304	Callee	fptr		11107085	0					
ANR	11107305	Identifier	fptr		11107085	0					
ANR	11107306	ArgumentList	& bsop		11107085	1					
ANR	11107307	Argument	& bsop		11107085	0					
ANR	11107308	UnaryOperationExpression	& bsop		11107085	0					
ANR	11107309	UnaryOperator	&		11107085	0					
ANR	11107310	Identifier	bsop		11107085	1					
ANR	11107311	ExpressionStatement	bs -> strm = s	456:8:13927:13939	11107085	3	True				
ANR	11107312	AssignmentExpression	bs -> strm = s		11107085	0		=			
ANR	11107313	PtrMemberAccess	bs -> strm		11107085	0					
ANR	11107314	Identifier	bs		11107085	0					
ANR	11107315	Identifier	strm		11107085	1					
ANR	11107316	Identifier	s		11107085	1					
ANR	11107317	ExpressionStatement	bs -> is_temp = 2	457:8:13949:13964	11107085	4	True				
ANR	11107318	AssignmentExpression	bs -> is_temp = 2		11107085	0		=			
ANR	11107319	PtrMemberAccess	bs -> is_temp		11107085	0					
ANR	11107320	Identifier	bs		11107085	0					
ANR	11107321	Identifier	is_temp		11107085	1					
ANR	11107322	PrimaryExpression	2		11107085	1					
ANR	11107323	ExpressionStatement	bs -> close_strm = close	458:8:13974:13996	11107085	5	True				
ANR	11107324	AssignmentExpression	bs -> close_strm = close		11107085	0		=			
ANR	11107325	PtrMemberAccess	bs -> close_strm		11107085	0					
ANR	11107326	Identifier	bs		11107085	0					
ANR	11107327	Identifier	close_strm		11107085	1					
ANR	11107328	Identifier	close		11107085	1					
ANR	11107329	ExpressionStatement	* ps = bs	459:8:14006:14014	11107085	6	True				
ANR	11107330	AssignmentExpression	* ps = bs		11107085	0		=			
ANR	11107331	UnaryOperationExpression	* ps		11107085	0					
ANR	11107332	UnaryOperator	*		11107085	0					
ANR	11107333	Identifier	ps		11107085	1					
ANR	11107334	Identifier	bs		11107085	1					
ANR	11107335	ReturnStatement	return code ;	460:8:14024:14035	11107085	7	True				
ANR	11107336	Identifier	code		11107085	0					
ANR	11107337	ReturnType	static int		11107085	1					
ANR	11107338	Identifier	filter_ensure_buf		11107085	2					
ANR	11107339	ParameterList	"stream * * ps , uint min_buf_size , gs_ref_memory_t * imem , bool writing , int close"		11107085	3					
ANR	11107340	Parameter	stream * * ps	419:18:12571:12582	11107085	0	True				
ANR	11107341	ParameterType	stream * *		11107085	0					
ANR	11107342	Identifier	ps		11107085	1					
ANR	11107343	Parameter	uint min_buf_size	419:32:12585:12601	11107085	1	True				
ANR	11107344	ParameterType	uint		11107085	0					
ANR	11107345	Identifier	min_buf_size		11107085	1					
ANR	11107346	Parameter	gs_ref_memory_t * imem	419:51:12604:12624	11107085	2	True				
ANR	11107347	ParameterType	gs_ref_memory_t *		11107085	0					
ANR	11107348	Identifier	imem		11107085	1					
ANR	11107349	Parameter	bool writing	420:18:12645:12656	11107085	3	True				
ANR	11107350	ParameterType	bool		11107085	0					
ANR	11107351	Identifier	writing		11107085	1					
ANR	11107352	Parameter	int close	420:32:12659:12667	11107085	4	True				
ANR	11107353	ParameterType	int		11107085	0					
ANR	11107354	Identifier	close		11107085	1					
ANR	11107355	CFGEntryNode	ENTRY		11107085		True				
ANR	11107356	CFGExitNode	EXIT		11107085		True				
ANR	11107357	Symbol	max_min_left		11107085						
ANR	11107358	Symbol	ps		11107085						
ANR	11107359	Symbol	code		11107085						
ANR	11107360	Symbol	filter_open		11107085						
ANR	11107361	Symbol	bs -> is_temp		11107085						
ANR	11107362	Symbol	s -> srptr		11107085						
ANR	11107363	Symbol	& s_NullE_template		11107085						
ANR	11107364	Symbol	s -> srlimit		11107085						
ANR	11107365	Symbol	s -> cbuf		11107085						
ANR	11107366	Symbol	s -> cbsize		11107085						
ANR	11107367	Symbol	s -> swlimit		11107085						
ANR	11107368	Symbol	bs		11107085						
ANR	11107369	Symbol	len		11107085						
ANR	11107370	Symbol	* bs		11107085						
ANR	11107371	Symbol	min_buf_size		11107085						
ANR	11107372	Symbol	writing		11107085						
ANR	11107373	Symbol	s -> bsize		11107085						
ANR	11107374	Symbol	bsop		11107085						
ANR	11107375	Symbol	close		11107085						
ANR	11107376	Symbol	& s_filter_read_procs		11107085						
ANR	11107377	Symbol	& s_filter_write_procs		11107085						
ANR	11107378	Symbol	gs_alloc_bytes		11107085						
ANR	11107379	Symbol	s -> swptr		11107085						
ANR	11107380	Symbol	bs -> strm		11107085						
ANR	11107381	Symbol	NULL		11107085						
ANR	11107382	Symbol	max		11107085						
ANR	11107383	Symbol	& bsop		11107085						
ANR	11107384	Symbol	bs -> close_strm		11107085						
ANR	11107385	Symbol	* ps		11107085						
ANR	11107386	Symbol	gs_error_VMerror		11107085						
ANR	11107387	Symbol	buf		11107085						
ANR	11107388	Symbol	s		11107085						
ANR	11107389	Symbol	& s_Null1D_template		11107085						
ANR	11107390	Symbol	fptr		11107085						
ANR	11107391	Symbol	min_size		11107085						
ANR	11107392	Symbol	imem		11107085						
ANR	11107393	Symbol	* s		11107085						
ANR	11107394	Symbol	s -> modes		11107085						
ANR	11107395	Function	filter_mark_temp	466:0:14155:14243							
ANR	11107396	FunctionDef	"filter_mark_temp (const ref * fop , int is_temp)"		11107395	0					
ANR	11107397	CompoundStatement		468:0:14207:14243	11107395	0					
ANR	11107398	ExpressionStatement	fptr ( fop ) -> is_temp = is_temp	469:4:14213:14241	11107395	0	True				
ANR	11107399	AssignmentExpression	fptr ( fop ) -> is_temp = is_temp		11107395	0		=			
ANR	11107400	PtrMemberAccess	fptr ( fop ) -> is_temp		11107395	0					
ANR	11107401	CallExpression	fptr ( fop )		11107395	0					
ANR	11107402	Callee	fptr		11107395	0					
ANR	11107403	Identifier	fptr		11107395	0					
ANR	11107404	ArgumentList	fop		11107395	1					
ANR	11107405	Argument	fop		11107395	0					
ANR	11107406	Identifier	fop		11107395	0					
ANR	11107407	Identifier	is_temp		11107395	1					
ANR	11107408	Identifier	is_temp		11107395	1					
ANR	11107409	ReturnType	void		11107395	1					
ANR	11107410	Identifier	filter_mark_temp		11107395	2					
ANR	11107411	ParameterList	"const ref * fop , int is_temp"		11107395	3					
ANR	11107412	Parameter	const ref * fop	467:17:14177:14191	11107395	0	True				
ANR	11107413	ParameterType	const ref *		11107395	0					
ANR	11107414	Identifier	fop		11107395	1					
ANR	11107415	Parameter	int is_temp	467:34:14194:14204	11107395	1	True				
ANR	11107416	ParameterType	int		11107395	0					
ANR	11107417	Identifier	is_temp		11107395	1					
ANR	11107418	CFGEntryNode	ENTRY		11107395		True				
ANR	11107419	CFGExitNode	EXIT		11107395		True				
ANR	11107420	Symbol	* fptr		11107395						
ANR	11107421	Symbol	fptr ( fop ) -> is_temp		11107395						
ANR	11107422	Symbol	is_temp		11107395						
ANR	11107423	Symbol	fop		11107395						
ANR	11107424	Symbol	fptr		11107395						
ANR	11107425	Function	filter_mark_strm_temp	474:0:14376:14558							
ANR	11107426	FunctionDef	"filter_mark_strm_temp (const ref * fop , int is_temp)"		11107425	0					
ANR	11107427	CompoundStatement		476:0:14433:14558	11107425	0					
ANR	11107428	IdentifierDeclStatement	stream * s = fptr ( fop ) ;	477:4:14439:14460	11107425	0	True				
ANR	11107429	IdentifierDecl	* s = fptr ( fop )		11107425	0					
ANR	11107430	IdentifierDeclType	stream *		11107425	0					
ANR	11107431	Identifier	s		11107425	1					
ANR	11107432	AssignmentExpression	* s = fptr ( fop )		11107425	2		=			
ANR	11107433	Identifier	s		11107425	0					
ANR	11107434	CallExpression	fptr ( fop )		11107425	1					
ANR	11107435	Callee	fptr		11107425	0					
ANR	11107436	Identifier	fptr		11107425	0					
ANR	11107437	ArgumentList	fop		11107425	1					
ANR	11107438	Argument	fop		11107425	0					
ANR	11107439	Identifier	fop		11107425	0					
ANR	11107440	IdentifierDeclStatement	stream * strm = s -> strm ;	478:4:14466:14488	11107425	1	True				
ANR	11107441	IdentifierDecl	* strm = s -> strm		11107425	0					
ANR	11107442	IdentifierDeclType	stream *		11107425	0					
ANR	11107443	Identifier	strm		11107425	1					
ANR	11107444	AssignmentExpression	* strm = s -> strm		11107425	2		=			
ANR	11107445	Identifier	strm		11107425	0					
ANR	11107446	PtrMemberAccess	s -> strm		11107425	1					
ANR	11107447	Identifier	s		11107425	0					
ANR	11107448	Identifier	strm		11107425	1					
ANR	11107449	ExpressionStatement	strm -> is_temp = is_temp	480:4:14495:14518	11107425	2	True				
ANR	11107450	AssignmentExpression	strm -> is_temp = is_temp		11107425	0		=			
ANR	11107451	PtrMemberAccess	strm -> is_temp		11107425	0					
ANR	11107452	Identifier	strm		11107425	0					
ANR	11107453	Identifier	is_temp		11107425	1					
ANR	11107454	Identifier	is_temp		11107425	1					
ANR	11107455	ExpressionStatement	s -> close_strm = strm -> close_strm	481:4:14524:14556	11107425	3	True				
ANR	11107456	AssignmentExpression	s -> close_strm = strm -> close_strm		11107425	0		=			
ANR	11107457	PtrMemberAccess	s -> close_strm		11107425	0					
ANR	11107458	Identifier	s		11107425	0					
ANR	11107459	Identifier	close_strm		11107425	1					
ANR	11107460	PtrMemberAccess	strm -> close_strm		11107425	1					
ANR	11107461	Identifier	strm		11107425	0					
ANR	11107462	Identifier	close_strm		11107425	1					
ANR	11107463	ReturnType	void		11107425	1					
ANR	11107464	Identifier	filter_mark_strm_temp		11107425	2					
ANR	11107465	ParameterList	"const ref * fop , int is_temp"		11107425	3					
ANR	11107466	Parameter	const ref * fop	475:22:14403:14417	11107425	0	True				
ANR	11107467	ParameterType	const ref *		11107425	0					
ANR	11107468	Identifier	fop		11107425	1					
ANR	11107469	Parameter	int is_temp	475:39:14420:14430	11107425	1	True				
ANR	11107470	ParameterType	int		11107425	0					
ANR	11107471	Identifier	is_temp		11107425	1					
ANR	11107472	CFGEntryNode	ENTRY		11107425		True				
ANR	11107473	CFGExitNode	EXIT		11107425		True				
ANR	11107474	Symbol	strm -> close_strm		11107425						
ANR	11107475	Symbol	s		11107425						
ANR	11107476	Symbol	is_temp		11107425						
ANR	11107477	Symbol	fop		11107425						
ANR	11107478	Symbol	* strm		11107425						
ANR	11107479	Symbol	fptr		11107425						
ANR	11107480	Symbol	s -> close_strm		11107425						
ANR	11107481	Symbol	strm		11107425						
ANR	11107482	Symbol	* s		11107425						
ANR	11107483	Symbol	strm -> is_temp		11107425						
ANR	11107484	Symbol	s -> strm		11107425						
ANR	11107485	DeclStmt									
ANR	11107486	Decl							const op_def	const op_def [ ]	zfilter_op_defs
