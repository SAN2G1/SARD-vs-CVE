command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1140340	File	data/converged/CVE-2018-16863_ghostpdl/base_gximdecode.c								
ANR	1140341	Function	get_unpack_proc	24:0:847:2410							
ANR	1140342	FunctionDef	"get_unpack_proc (gx_image_enum_common_t * pie , image_decode_t * imd , gs_image_format_t format , const float * decode)"		1140341	0					
ANR	1140343	CompoundStatement		26:63:982:2410	1140341	0					
ANR	1140344	Statement	static	28:4:989:994	1140341	0	True				
ANR	1140345	Statement	sample_unpack_proc_t	28:11:996:1015	1140341	1	True				
ANR	1140346	Statement	procs	28:32:1017:1021	1140341	2	True				
ANR	1140347	Statement	[	28:37:1022:1022	1140341	3	True				
ANR	1140348	Statement	2	28:38:1023:1023	1140341	4	True				
ANR	1140349	Statement	]	28:39:1024:1024	1140341	5	True				
ANR	1140350	Statement	[	28:40:1025:1025	1140341	6	True				
ANR	1140351	Statement	6	28:41:1026:1026	1140341	7	True				
ANR	1140352	Statement	]	28:42:1027:1027	1140341	8	True				
ANR	1140353	Statement	=	28:44:1029:1029	1140341	9	True				
ANR	1140354	CompoundStatement		3:46:48:48	1140341	10					
ANR	1140355	CompoundStatement		4:8:58:58	1140341	0					
ANR	1140356	Statement	sample_unpack_1	29:10:1043:1057	1140341	0	True				
ANR	1140357	Statement	","	29:25:1058:1058	1140341	1	True				
ANR	1140358	Statement	sample_unpack_2	29:27:1060:1074	1140341	2	True				
ANR	1140359	Statement	","	29:42:1075:1075	1140341	3	True				
ANR	1140360	Statement	sample_unpack_4	30:8:1085:1099	1140341	4	True				
ANR	1140361	Statement	","	30:23:1100:1100	1140341	5	True				
ANR	1140362	Statement	sample_unpack_8	30:25:1102:1116	1140341	6	True				
ANR	1140363	Statement	","	30:40:1117:1117	1140341	7	True				
ANR	1140364	Statement	sample_unpack_12	31:8:1127:1142	1140341	8	True				
ANR	1140365	Statement	","	31:24:1143:1143	1140341	9	True				
ANR	1140366	Statement	sample_unpackicc_16	31:26:1145:1163	1140341	10	True				
ANR	1140367	Statement	","	32:9:1174:1174	1140341	1	True				
ANR	1140368	CompoundStatement		8:8:201:201	1140341	2					
ANR	1140369	Statement	sample_unpack_1_interleaved	33:10:1186:1212	1140341	0	True				
ANR	1140370	Statement	","	33:37:1213:1213	1140341	1	True				
ANR	1140371	Statement	sample_unpack_2_interleaved	33:39:1215:1241	1140341	2	True				
ANR	1140372	Statement	","	33:66:1242:1242	1140341	3	True				
ANR	1140373	Statement	sample_unpack_4_interleaved	34:8:1252:1278	1140341	4	True				
ANR	1140374	Statement	","	34:35:1279:1279	1140341	5	True				
ANR	1140375	Statement	sample_unpack_8_interleaved	34:37:1281:1307	1140341	6	True				
ANR	1140376	Statement	","	34:64:1308:1308	1140341	7	True				
ANR	1140377	Statement	sample_unpack_12	35:8:1318:1333	1140341	8	True				
ANR	1140378	Statement	","	35:24:1334:1334	1140341	9	True				
ANR	1140379	Statement	sample_unpackicc_16	35:26:1336:1354	1140341	10	True				
ANR	1140380	ExpressionStatement		36:11:1367:1367	1140341	11	True				
ANR	1140381	IdentifierDeclStatement	int num_planes = pie -> num_planes ;	37:4:1373:1405	1140341	12	True				
ANR	1140382	IdentifierDecl	num_planes = pie -> num_planes		1140341	0					
ANR	1140383	IdentifierDeclType	int		1140341	0					
ANR	1140384	Identifier	num_planes		1140341	1					
ANR	1140385	AssignmentExpression	num_planes = pie -> num_planes		1140341	2		=			
ANR	1140386	Identifier	num_planes		1140341	0					
ANR	1140387	PtrMemberAccess	pie -> num_planes		1140341	1					
ANR	1140388	Identifier	pie		1140341	0					
ANR	1140389	Identifier	num_planes		1140341	1					
ANR	1140390	IdentifierDeclStatement	bool interleaved = ( num_planes == 1 && pie -> plane_depths [ 0 ] != imd -> bps ) ;	38:4:1411:1483	1140341	13	True				
ANR	1140391	IdentifierDecl	interleaved = ( num_planes == 1 && pie -> plane_depths [ 0 ] != imd -> bps )		1140341	0					
ANR	1140392	IdentifierDeclType	bool		1140341	0					
ANR	1140393	Identifier	interleaved		1140341	1					
ANR	1140394	AssignmentExpression	interleaved = ( num_planes == 1 && pie -> plane_depths [ 0 ] != imd -> bps )		1140341	2		=			
ANR	1140395	Identifier	interleaved		1140341	0					
ANR	1140396	AndExpression	num_planes == 1 && pie -> plane_depths [ 0 ] != imd -> bps		1140341	1		&&			
ANR	1140397	EqualityExpression	num_planes == 1		1140341	0		==			
ANR	1140398	Identifier	num_planes		1140341	0					
ANR	1140399	PrimaryExpression	1		1140341	1					
ANR	1140400	EqualityExpression	pie -> plane_depths [ 0 ] != imd -> bps		1140341	1		!=			
ANR	1140401	ArrayIndexing	pie -> plane_depths [ 0 ]		1140341	0					
ANR	1140402	PtrMemberAccess	pie -> plane_depths		1140341	0					
ANR	1140403	Identifier	pie		1140341	0					
ANR	1140404	Identifier	plane_depths		1140341	1					
ANR	1140405	PrimaryExpression	0		1140341	1					
ANR	1140406	PtrMemberAccess	imd -> bps		1140341	1					
ANR	1140407	Identifier	imd		1140341	0					
ANR	1140408	Identifier	bps		1140341	1					
ANR	1140409	IdentifierDeclStatement	int i ;	39:4:1489:1494	1140341	14	True				
ANR	1140410	IdentifierDecl	i		1140341	0					
ANR	1140411	IdentifierDeclType	int		1140341	0					
ANR	1140412	Identifier	i		1140341	1					
ANR	1140413	IdentifierDeclStatement	int index_bps = ( imd -> bps < 8 ? imd -> bps >> 1 : ( imd -> bps >> 2 ) + 1 ) ;	40:4:1500:1568	1140341	15	True				
ANR	1140414	IdentifierDecl	index_bps = ( imd -> bps < 8 ? imd -> bps >> 1 : ( imd -> bps >> 2 ) + 1 )		1140341	0					
ANR	1140415	IdentifierDeclType	int		1140341	0					
ANR	1140416	Identifier	index_bps		1140341	1					
ANR	1140417	AssignmentExpression	index_bps = ( imd -> bps < 8 ? imd -> bps >> 1 : ( imd -> bps >> 2 ) + 1 )		1140341	2		=			
ANR	1140418	Identifier	index_bps		1140341	0					
ANR	1140419	ConditionalExpression	imd -> bps < 8 ? imd -> bps >> 1 : ( imd -> bps >> 2 ) + 1		1140341	1					
ANR	1140420	Condition	imd -> bps < 8		1140341	0					
ANR	1140421	RelationalExpression	imd -> bps < 8		1140341	0		<			
ANR	1140422	PtrMemberAccess	imd -> bps		1140341	0					
ANR	1140423	Identifier	imd		1140341	0					
ANR	1140424	Identifier	bps		1140341	1					
ANR	1140425	PrimaryExpression	8		1140341	1					
ANR	1140426	ShiftExpression	imd -> bps >> 1		1140341	1		>>			
ANR	1140427	PtrMemberAccess	imd -> bps		1140341	0					
ANR	1140428	Identifier	imd		1140341	0					
ANR	1140429	Identifier	bps		1140341	1					
ANR	1140430	PrimaryExpression	1		1140341	1					
ANR	1140431	AdditiveExpression	( imd -> bps >> 2 ) + 1		1140341	2		+			
ANR	1140432	ShiftExpression	imd -> bps >> 2		1140341	0		>>			
ANR	1140433	PtrMemberAccess	imd -> bps		1140341	0					
ANR	1140434	Identifier	imd		1140341	0					
ANR	1140435	Identifier	bps		1140341	1					
ANR	1140436	PrimaryExpression	2		1140341	1					
ANR	1140437	PrimaryExpression	1		1140341	1					
ANR	1140438	IdentifierDeclStatement	int log2_xbytes = ( imd -> bps <= 8 ? 0 : arch_log2_sizeof_frac ) ;	41:4:1574:1635	1140341	16	True				
ANR	1140439	IdentifierDecl	log2_xbytes = ( imd -> bps <= 8 ? 0 : arch_log2_sizeof_frac )		1140341	0					
ANR	1140440	IdentifierDeclType	int		1140341	0					
ANR	1140441	Identifier	log2_xbytes		1140341	1					
ANR	1140442	AssignmentExpression	log2_xbytes = ( imd -> bps <= 8 ? 0 : arch_log2_sizeof_frac )		1140341	2		=			
ANR	1140443	Identifier	log2_xbytes		1140341	0					
ANR	1140444	ConditionalExpression	imd -> bps <= 8 ? 0 : arch_log2_sizeof_frac		1140341	1					
ANR	1140445	Condition	imd -> bps <= 8		1140341	0					
ANR	1140446	RelationalExpression	imd -> bps <= 8		1140341	0		<=			
ANR	1140447	PtrMemberAccess	imd -> bps		1140341	0					
ANR	1140448	Identifier	imd		1140341	0					
ANR	1140449	Identifier	bps		1140341	1					
ANR	1140450	PrimaryExpression	8		1140341	1					
ANR	1140451	PrimaryExpression	0		1140341	1					
ANR	1140452	Identifier	arch_log2_sizeof_frac		1140341	2					
ANR	1140453	SwitchStatement	switch ( format )		1140341	17					
ANR	1140454	Condition	format	43:12:1650:1655	1140341	0	True				
ANR	1140455	Identifier	format		1140341	0					
ANR	1140456	CompoundStatement		18:20:675:675	1140341	1					
ANR	1140457	Label	case gs_image_format_chunky :	44:4:1664:1691	1140341	0	True				
ANR	1140458	Identifier	gs_image_format_chunky		1140341	0					
ANR	1140459	ExpressionStatement	imd -> spread = 1 << log2_xbytes	45:8:1701:1731	1140341	1	True				
ANR	1140460	AssignmentExpression	imd -> spread = 1 << log2_xbytes		1140341	0		=			
ANR	1140461	PtrMemberAccess	imd -> spread		1140341	0					
ANR	1140462	Identifier	imd		1140341	0					
ANR	1140463	Identifier	spread		1140341	1					
ANR	1140464	ShiftExpression	1 << log2_xbytes		1140341	1		<<			
ANR	1140465	PrimaryExpression	1		1140341	0					
ANR	1140466	Identifier	log2_xbytes		1140341	1					
ANR	1140467	BreakStatement	break ;	46:8:1741:1746	1140341	2	True				
ANR	1140468	Label	case gs_image_format_component_planar :	47:4:1752:1789	1140341	3	True				
ANR	1140469	Identifier	gs_image_format_component_planar		1140341	0					
ANR	1140470	ExpressionStatement	imd -> spread = ( imd -> spp ) << log2_xbytes	48:8:1799:1838	1140341	4	True				
ANR	1140471	AssignmentExpression	imd -> spread = ( imd -> spp ) << log2_xbytes		1140341	0		=			
ANR	1140472	PtrMemberAccess	imd -> spread		1140341	0					
ANR	1140473	Identifier	imd		1140341	0					
ANR	1140474	Identifier	spread		1140341	1					
ANR	1140475	ShiftExpression	( imd -> spp ) << log2_xbytes		1140341	1		<<			
ANR	1140476	PtrMemberAccess	imd -> spp		1140341	0					
ANR	1140477	Identifier	imd		1140341	0					
ANR	1140478	Identifier	spp		1140341	1					
ANR	1140479	Identifier	log2_xbytes		1140341	1					
ANR	1140480	BreakStatement	break ;	49:8:1848:1853	1140341	5	True				
ANR	1140481	Label	case gs_image_format_bit_planar :	50:4:1859:1890	1140341	6	True				
ANR	1140482	Identifier	gs_image_format_bit_planar		1140341	0					
ANR	1140483	ExpressionStatement	imd -> spread = ( imd -> spp ) << log2_xbytes	51:8:1900:1939	1140341	7	True				
ANR	1140484	AssignmentExpression	imd -> spread = ( imd -> spp ) << log2_xbytes		1140341	0		=			
ANR	1140485	PtrMemberAccess	imd -> spread		1140341	0					
ANR	1140486	Identifier	imd		1140341	0					
ANR	1140487	Identifier	spread		1140341	1					
ANR	1140488	ShiftExpression	( imd -> spp ) << log2_xbytes		1140341	1		<<			
ANR	1140489	PtrMemberAccess	imd -> spp		1140341	0					
ANR	1140490	Identifier	imd		1140341	0					
ANR	1140491	Identifier	spp		1140341	1					
ANR	1140492	Identifier	log2_xbytes		1140341	1					
ANR	1140493	BreakStatement	break ;	52:8:1949:1954	1140341	8	True				
ANR	1140494	Label	default :	53:4:1960:1967	1140341	9	True				
ANR	1140495	Identifier	default		1140341	0					
ANR	1140496	ExpressionStatement	imd -> spread = 0	54:8:1977:1992	1140341	10	True				
ANR	1140497	AssignmentExpression	imd -> spread = 0		1140341	0		=			
ANR	1140498	PtrMemberAccess	imd -> spread		1140341	0					
ANR	1140499	Identifier	imd		1140341	0					
ANR	1140500	Identifier	spread		1140341	1					
ANR	1140501	PrimaryExpression	0		1140341	1					
ANR	1140502	IfStatement	if ( interleaved )		1140341	18					
ANR	1140503	Condition	interleaved	57:8:2009:2019	1140341	0	True				
ANR	1140504	Identifier	interleaved		1140341	0					
ANR	1140505	CompoundStatement		33:8:1049:1101	1140341	1					
ANR	1140506	IdentifierDeclStatement	int num_components = pie -> plane_depths [ 0 ] / imd -> bps ;	58:8:2032:2084	1140341	0	True				
ANR	1140507	IdentifierDecl	num_components = pie -> plane_depths [ 0 ] / imd -> bps		1140341	0					
ANR	1140508	IdentifierDeclType	int		1140341	0					
ANR	1140509	Identifier	num_components		1140341	1					
ANR	1140510	AssignmentExpression	num_components = pie -> plane_depths [ 0 ] / imd -> bps		1140341	2		=			
ANR	1140511	Identifier	num_components		1140341	0					
ANR	1140512	MultiplicativeExpression	pie -> plane_depths [ 0 ] / imd -> bps		1140341	1		/			
ANR	1140513	ArrayIndexing	pie -> plane_depths [ 0 ]		1140341	0					
ANR	1140514	PtrMemberAccess	pie -> plane_depths		1140341	0					
ANR	1140515	Identifier	pie		1140341	0					
ANR	1140516	Identifier	plane_depths		1140341	1					
ANR	1140517	PrimaryExpression	0		1140341	1					
ANR	1140518	PtrMemberAccess	imd -> bps		1140341	1					
ANR	1140519	Identifier	imd		1140341	0					
ANR	1140520	Identifier	bps		1140341	1					
ANR	1140521	ForStatement	for ( i = 1 ; i < num_components ; i ++ )		1140341	1					
ANR	1140522	ForInit	i = 1 ;	60:13:2100:2105	1140341	0	True				
ANR	1140523	AssignmentExpression	i = 1		1140341	0		=			
ANR	1140524	Identifier	i		1140341	0					
ANR	1140525	PrimaryExpression	1		1140341	1					
ANR	1140526	Condition	i < num_components	60:20:2107:2124	1140341	1	True				
ANR	1140527	RelationalExpression	i < num_components		1140341	0		<			
ANR	1140528	Identifier	i		1140341	0					
ANR	1140529	Identifier	num_components		1140341	1					
ANR	1140530	PostIncDecOperationExpression	i ++	60:40:2127:2129	1140341	2	True				
ANR	1140531	Identifier	i		1140341	0					
ANR	1140532	IncDec	++		1140341	1					
ANR	1140533	CompoundStatement		35:45:1149:1149	1140341	3					
ANR	1140534	IfStatement	if ( decode [ 0 ] != decode [ i * 2 + 0 ] || decode [ 1 ] != decode [ i * 2 + 1 ] )		1140341	0					
ANR	1140535	Condition	decode [ 0 ] != decode [ i * 2 + 0 ] || decode [ 1 ] != decode [ i * 2 + 1 ]	61:16:2150:2229	1140341	0	True				
ANR	1140536	OrExpression	decode [ 0 ] != decode [ i * 2 + 0 ] || decode [ 1 ] != decode [ i * 2 + 1 ]		1140341	0		||			
ANR	1140537	EqualityExpression	decode [ 0 ] != decode [ i * 2 + 0 ]		1140341	0		!=			
ANR	1140538	ArrayIndexing	decode [ 0 ]		1140341	0					
ANR	1140539	Identifier	decode		1140341	0					
ANR	1140540	PrimaryExpression	0		1140341	1					
ANR	1140541	ArrayIndexing	decode [ i * 2 + 0 ]		1140341	1					
ANR	1140542	Identifier	decode		1140341	0					
ANR	1140543	AdditiveExpression	i * 2 + 0		1140341	1		+			
ANR	1140544	MultiplicativeExpression	i * 2		1140341	0		*			
ANR	1140545	Identifier	i		1140341	0					
ANR	1140546	PrimaryExpression	2		1140341	1					
ANR	1140547	PrimaryExpression	0		1140341	1					
ANR	1140548	EqualityExpression	decode [ 1 ] != decode [ i * 2 + 1 ]		1140341	1		!=			
ANR	1140549	ArrayIndexing	decode [ 1 ]		1140341	0					
ANR	1140550	Identifier	decode		1140341	0					
ANR	1140551	PrimaryExpression	1		1140341	1					
ANR	1140552	ArrayIndexing	decode [ i * 2 + 1 ]		1140341	1					
ANR	1140553	Identifier	decode		1140341	0					
ANR	1140554	AdditiveExpression	i * 2 + 1		1140341	1		+			
ANR	1140555	MultiplicativeExpression	i * 2		1140341	0		*			
ANR	1140556	Identifier	i		1140341	0					
ANR	1140557	PrimaryExpression	2		1140341	1					
ANR	1140558	PrimaryExpression	1		1140341	1					
ANR	1140559	BreakStatement	break ;	63:16:2248:2253	1140341	1	True				
ANR	1140560	IfStatement	if ( i == num_components )		1140341	2					
ANR	1140561	Condition	i == num_components	65:12:2277:2295	1140341	0	True				
ANR	1140562	EqualityExpression	i == num_components		1140341	0		==			
ANR	1140563	Identifier	i		1140341	0					
ANR	1140564	Identifier	num_components		1140341	1					
ANR	1140565	ExpressionStatement	interleaved = false	66:12:2310:2329	1140341	1	True				
ANR	1140566	AssignmentExpression	interleaved = false		1140341	0		=			
ANR	1140567	Identifier	interleaved		1140341	0					
ANR	1140568	Identifier	false		1140341	1					
ANR	1140569	ExpressionStatement	imd -> unpack = procs [ interleaved ] [ index_bps ]	68:4:2365:2408	1140341	19	True				
ANR	1140570	AssignmentExpression	imd -> unpack = procs [ interleaved ] [ index_bps ]		1140341	0		=			
ANR	1140571	PtrMemberAccess	imd -> unpack		1140341	0					
ANR	1140572	Identifier	imd		1140341	0					
ANR	1140573	Identifier	unpack		1140341	1					
ANR	1140574	ArrayIndexing	procs [ interleaved ] [ index_bps ]		1140341	1					
ANR	1140575	ArrayIndexing	procs [ interleaved ]		1140341	0					
ANR	1140576	Identifier	procs		1140341	0					
ANR	1140577	Identifier	interleaved		1140341	1					
ANR	1140578	Identifier	index_bps		1140341	1					
ANR	1140579	ReturnType	void		1140341	1					
ANR	1140580	Identifier	get_unpack_proc		1140341	2					
ANR	1140581	ParameterList	"gx_image_enum_common_t * pie , image_decode_t * imd , gs_image_format_t format , const float * decode"		1140341	3					
ANR	1140582	Parameter	gx_image_enum_common_t * pie	25:16:868:894	1140341	0	True				
ANR	1140583	ParameterType	gx_image_enum_common_t *		1140341	0					
ANR	1140584	Identifier	pie		1140341	1					
ANR	1140585	Parameter	image_decode_t * imd	25:45:897:915	1140341	1	True				
ANR	1140586	ParameterType	image_decode_t *		1140341	0					
ANR	1140587	Identifier	imd		1140341	1					
ANR	1140588	Parameter	gs_image_format_t format	26:16:935:958	1140341	2	True				
ANR	1140589	ParameterType	gs_image_format_t		1140341	0					
ANR	1140590	Identifier	format		1140341	1					
ANR	1140591	Parameter	const float * decode	26:42:961:979	1140341	3	True				
ANR	1140592	ParameterType	const float *		1140341	0					
ANR	1140593	Identifier	decode		1140341	1					
ANR	1140594	CFGEntryNode	ENTRY		1140341		True				
ANR	1140595	CFGExitNode	EXIT		1140341		True				
ANR	1140596	Symbol	imd		1140341						
ANR	1140597	Symbol	procs		1140341						
ANR	1140598	Symbol	* interleaved		1140341						
ANR	1140599	Symbol	imd -> unpack		1140341						
ANR	1140600	Symbol	decode		1140341						
ANR	1140601	Symbol	pie		1140341						
ANR	1140602	Symbol	* * interleaved		1140341						
ANR	1140603	Symbol	log2_xbytes		1140341						
ANR	1140604	Symbol	* * procs		1140341						
ANR	1140605	Symbol	num_planes		1140341						
ANR	1140606	Symbol	* index_bps		1140341						
ANR	1140607	Symbol	* imd		1140341						
ANR	1140608	Symbol	imd -> bps		1140341						
ANR	1140609	Symbol	index_bps		1140341						
ANR	1140610	Symbol	pie -> num_planes		1140341						
ANR	1140611	Symbol	* * pie		1140341						
ANR	1140612	Symbol	* pie -> plane_depths		1140341						
ANR	1140613	Symbol	pie -> plane_depths		1140341						
ANR	1140614	Symbol	imd -> spp		1140341						
ANR	1140615	Symbol	* procs		1140341						
ANR	1140616	Symbol	format		1140341						
ANR	1140617	Symbol	false		1140341						
ANR	1140618	Symbol	i		1140341						
ANR	1140619	Symbol	interleaved		1140341						
ANR	1140620	Symbol	num_components		1140341						
ANR	1140621	Symbol	arch_log2_sizeof_frac		1140341						
ANR	1140622	Symbol	* i		1140341						
ANR	1140623	Symbol	* pie		1140341						
ANR	1140624	Symbol	imd -> spread		1140341						
ANR	1140625	Symbol	* decode		1140341						
ANR	1140626	Function	get_map	72:0:2474:6160							
ANR	1140627	FunctionDef	"get_map (image_decode_t * imd , gs_image_format_t format , const float * decode)"		1140626	0					
ANR	1140628	CompoundStatement		74:0:2555:6160	1140626	0					
ANR	1140629	IdentifierDeclStatement	int ci = 0 ;	75:4:2561:2571	1140626	0	True				
ANR	1140630	IdentifierDecl	ci = 0		1140626	0					
ANR	1140631	IdentifierDeclType	int		1140626	0					
ANR	1140632	Identifier	ci		1140626	1					
ANR	1140633	AssignmentExpression	ci = 0		1140626	2		=			
ANR	1140634	Identifier	ci		1140626	0					
ANR	1140635	PrimaryExpression	0		1140626	1					
ANR	1140636	IdentifierDeclStatement	int decode_type ;	76:4:2577:2592	1140626	1	True				
ANR	1140637	IdentifierDecl	decode_type		1140626	0					
ANR	1140638	IdentifierDeclType	int		1140626	0					
ANR	1140639	Identifier	decode_type		1140626	1					
ANR	1140640	IdentifierDeclStatement	int bps = imd -> bps ;	77:4:2598:2616	1140626	2	True				
ANR	1140641	IdentifierDecl	bps = imd -> bps		1140626	0					
ANR	1140642	IdentifierDeclType	int		1140626	0					
ANR	1140643	Identifier	bps		1140626	1					
ANR	1140644	AssignmentExpression	bps = imd -> bps		1140626	2		=			
ANR	1140645	Identifier	bps		1140626	0					
ANR	1140646	PtrMemberAccess	imd -> bps		1140626	1					
ANR	1140647	Identifier	imd		1140626	0					
ANR	1140648	Identifier	bps		1140626	1					
ANR	1140649	IdentifierDeclStatement	int spp = imd -> spp ;	78:4:2622:2640	1140626	3	True				
ANR	1140650	IdentifierDecl	spp = imd -> spp		1140626	0					
ANR	1140651	IdentifierDeclType	int		1140626	0					
ANR	1140652	Identifier	spp		1140626	1					
ANR	1140653	AssignmentExpression	spp = imd -> spp		1140626	2		=			
ANR	1140654	Identifier	spp		1140626	0					
ANR	1140655	PtrMemberAccess	imd -> spp		1140626	1					
ANR	1140656	Identifier	imd		1140626	0					
ANR	1140657	Identifier	spp		1140626	1					
ANR	1140658	Statement	static	79:4:2646:2651	1140626	4	True				
ANR	1140659	IdentifierDeclStatement	"const float default_decode [ ] = { 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 } ;"	79:11:2653:2748	1140626	5	True				
ANR	1140660	IdentifierDecl	"default_decode [ ] = { 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 }"		1140626	0					
ANR	1140661	IdentifierDeclType	const float [ ]		1140626	0					
ANR	1140662	Identifier	default_decode		1140626	1					
ANR	1140663	AssignmentExpression	"default_decode [ ] = { 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 1.0 }"		1140626	2		=			
ANR	1140664	Identifier	default_decode		1140626	0					
ANR	1140665	InitializerList	0.0		1140626	1					
ANR	1140666	PrimaryExpression	0.0		1140626	0					
ANR	1140667	PrimaryExpression	1.0		1140626	1					
ANR	1140668	PrimaryExpression	0.0		1140626	2					
ANR	1140669	PrimaryExpression	1.0		1140626	3					
ANR	1140670	PrimaryExpression	0.0		1140626	4					
ANR	1140671	PrimaryExpression	1.0		1140626	5					
ANR	1140672	PrimaryExpression	0.0		1140626	6					
ANR	1140673	PrimaryExpression	1.0		1140626	7					
ANR	1140674	PrimaryExpression	0.0		1140626	8					
ANR	1140675	PrimaryExpression	1.0		1140626	9					
ANR	1140676	IdentifierDeclStatement	const float * this_decode = & decode [ ci * 2 ] ;	82:4:2754:2796	1140626	6	True				
ANR	1140677	IdentifierDecl	* this_decode = & decode [ ci * 2 ]		1140626	0					
ANR	1140678	IdentifierDeclType	const float *		1140626	0					
ANR	1140679	Identifier	this_decode		1140626	1					
ANR	1140680	AssignmentExpression	* this_decode = & decode [ ci * 2 ]		1140626	2		=			
ANR	1140681	Identifier	this_decode		1140626	0					
ANR	1140682	UnaryOperationExpression	& decode [ ci * 2 ]		1140626	1					
ANR	1140683	UnaryOperator	&		1140626	0					
ANR	1140684	ArrayIndexing	decode [ ci * 2 ]		1140626	1					
ANR	1140685	Identifier	decode		1140626	0					
ANR	1140686	MultiplicativeExpression	ci * 2		1140626	1		*			
ANR	1140687	Identifier	ci		1140626	0					
ANR	1140688	PrimaryExpression	2		1140626	1					
ANR	1140689	IdentifierDeclStatement	const float * map_decode ;	83:4:2802:2825	1140626	7	True				
ANR	1140690	IdentifierDecl	* map_decode		1140626	0					
ANR	1140691	IdentifierDeclType	const float *		1140626	0					
ANR	1140692	Identifier	map_decode		1140626	1					
ANR	1140693	IdentifierDeclStatement	const float * real_decode ;	85:4:2925:2949	1140626	8	True				
ANR	1140694	IdentifierDecl	* real_decode		1140626	0					
ANR	1140695	IdentifierDeclType	const float *		1140626	0					
ANR	1140696	Identifier	real_decode		1140626	1					
ANR	1140697	ExpressionStatement	decode_type = 3	87:4:2998:3013	1140626	9	True				
ANR	1140698	AssignmentExpression	decode_type = 3		1140626	0		=			
ANR	1140699	Identifier	decode_type		1140626	0					
ANR	1140700	PrimaryExpression	3		1140626	1					
ANR	1140701	ForStatement	for ( ci = 0 ; ci < spp ; ci += 2 )		1140626	10					
ANR	1140702	ForInit	ci = 0 ;	88:9:3077:3083	1140626	0	True				
ANR	1140703	AssignmentExpression	ci = 0		1140626	0		=			
ANR	1140704	Identifier	ci		1140626	0					
ANR	1140705	PrimaryExpression	0		1140626	1					
ANR	1140706	Condition	ci < spp	88:17:3085:3092	1140626	1	True				
ANR	1140707	RelationalExpression	ci < spp		1140626	0		<			
ANR	1140708	Identifier	ci		1140626	0					
ANR	1140709	Identifier	spp		1140626	1					
ANR	1140710	AssignmentExpression	ci += 2	88:27:3095:3101	1140626	2	True	+=			
ANR	1140711	Identifier	ci		1140626	0					
ANR	1140712	PrimaryExpression	2		1140626	1					
ANR	1140713	CompoundStatement		15:36:548:548	1140626	3					
ANR	1140714	ExpressionStatement	decode_type &= ( decode [ ci ] == 0. && decode [ ci + 1 ] == 1. ) | ( decode [ ci ] == 1. && decode [ ci + 1 ] == 0. ) << 1	89:8:3114:3233	1140626	0	True				
ANR	1140715	AssignmentExpression	decode_type &= ( decode [ ci ] == 0. && decode [ ci + 1 ] == 1. ) | ( decode [ ci ] == 1. && decode [ ci + 1 ] == 0. ) << 1		1140626	0		&=			
ANR	1140716	Identifier	decode_type		1140626	0					
ANR	1140717	InclusiveOrExpression	( decode [ ci ] == 0. && decode [ ci + 1 ] == 1. ) | ( decode [ ci ] == 1. && decode [ ci + 1 ] == 0. ) << 1		1140626	1		|			
ANR	1140718	AndExpression	decode [ ci ] == 0. && decode [ ci + 1 ] == 1.		1140626	0		&&			
ANR	1140719	EqualityExpression	decode [ ci ] == 0.		1140626	0		==			
ANR	1140720	ArrayIndexing	decode [ ci ]		1140626	0					
ANR	1140721	Identifier	decode		1140626	0					
ANR	1140722	Identifier	ci		1140626	1					
ANR	1140723	PrimaryExpression	0.		1140626	1					
ANR	1140724	EqualityExpression	decode [ ci + 1 ] == 1.		1140626	1		==			
ANR	1140725	ArrayIndexing	decode [ ci + 1 ]		1140626	0					
ANR	1140726	Identifier	decode		1140626	0					
ANR	1140727	AdditiveExpression	ci + 1		1140626	1		+			
ANR	1140728	Identifier	ci		1140626	0					
ANR	1140729	PrimaryExpression	1		1140626	1					
ANR	1140730	PrimaryExpression	1.		1140626	1					
ANR	1140731	ShiftExpression	( decode [ ci ] == 1. && decode [ ci + 1 ] == 0. ) << 1		1140626	1		<<			
ANR	1140732	AndExpression	decode [ ci ] == 1. && decode [ ci + 1 ] == 0.		1140626	0		&&			
ANR	1140733	EqualityExpression	decode [ ci ] == 1.		1140626	0		==			
ANR	1140734	ArrayIndexing	decode [ ci ]		1140626	0					
ANR	1140735	Identifier	decode		1140626	0					
ANR	1140736	Identifier	ci		1140626	1					
ANR	1140737	PrimaryExpression	1.		1140626	1					
ANR	1140738	EqualityExpression	decode [ ci + 1 ] == 0.		1140626	1		==			
ANR	1140739	ArrayIndexing	decode [ ci + 1 ]		1140626	0					
ANR	1140740	Identifier	decode		1140626	0					
ANR	1140741	AdditiveExpression	ci + 1		1140626	1		+			
ANR	1140742	Identifier	ci		1140626	0					
ANR	1140743	PrimaryExpression	1		1140626	1					
ANR	1140744	PrimaryExpression	0.		1140626	1					
ANR	1140745	PrimaryExpression	1		1140626	1					
ANR	1140746	ForStatement	for ( ci = 0 ; ci < spp ; ci ++ )		1140626	11					
ANR	1140747	ForInit	ci = 0 ;	94:9:3310:3316	1140626	0	True				
ANR	1140748	AssignmentExpression	ci = 0		1140626	0		=			
ANR	1140749	Identifier	ci		1140626	0					
ANR	1140750	PrimaryExpression	0		1140626	1					
ANR	1140751	Condition	ci < spp	94:17:3318:3325	1140626	1	True				
ANR	1140752	RelationalExpression	ci < spp		1140626	0		<			
ANR	1140753	Identifier	ci		1140626	0					
ANR	1140754	Identifier	spp		1140626	1					
ANR	1140755	PostIncDecOperationExpression	ci ++	94:27:3328:3331	1140626	2	True				
ANR	1140756	Identifier	ci		1140626	0					
ANR	1140757	IncDec	++		1140626	1					
ANR	1140758	CompoundStatement		22:8:788:820	1140626	3					
ANR	1140759	IdentifierDeclStatement	sample_map * pmap = & imd -> map [ ci ] ;	95:8:3344:3376	1140626	0	True				
ANR	1140760	IdentifierDecl	* pmap = & imd -> map [ ci ]		1140626	0					
ANR	1140761	IdentifierDeclType	sample_map *		1140626	0					
ANR	1140762	Identifier	pmap		1140626	1					
ANR	1140763	AssignmentExpression	* pmap = & imd -> map [ ci ]		1140626	2		=			
ANR	1140764	Identifier	pmap		1140626	0					
ANR	1140765	UnaryOperationExpression	& imd -> map [ ci ]		1140626	1					
ANR	1140766	UnaryOperator	&		1140626	0					
ANR	1140767	ArrayIndexing	imd -> map [ ci ]		1140626	1					
ANR	1140768	PtrMemberAccess	imd -> map		1140626	0					
ANR	1140769	Identifier	imd		1140626	0					
ANR	1140770	Identifier	map		1140626	1					
ANR	1140771	Identifier	ci		1140626	1					
ANR	1140772	IfStatement	if ( bps > 8 )		1140626	1					
ANR	1140773	Condition	bps > 8	97:12:3391:3397	1140626	0	True				
ANR	1140774	RelationalExpression	bps > 8		1140626	0		>			
ANR	1140775	Identifier	bps		1140626	0					
ANR	1140776	PrimaryExpression	8		1140626	1					
ANR	1140777	ExpressionStatement	imd -> applymap = applymap16	98:12:3412:3438	1140626	1	True				
ANR	1140778	AssignmentExpression	imd -> applymap = applymap16		1140626	0		=			
ANR	1140779	PtrMemberAccess	imd -> applymap		1140626	0					
ANR	1140780	Identifier	imd		1140626	0					
ANR	1140781	Identifier	applymap		1140626	1					
ANR	1140782	Identifier	applymap16		1140626	1					
ANR	1140783	ElseStatement	else		1140626	0					
ANR	1140784	ExpressionStatement	imd -> applymap = applymap8	100:12:3465:3490	1140626	0	True				
ANR	1140785	AssignmentExpression	imd -> applymap = applymap8		1140626	0		=			
ANR	1140786	PtrMemberAccess	imd -> applymap		1140626	0					
ANR	1140787	Identifier	imd		1140626	0					
ANR	1140788	Identifier	applymap		1140626	1					
ANR	1140789	Identifier	applymap8		1140626	1					
ANR	1140790	ExpressionStatement	this_decode = & decode [ ci * 2 ]	106:8:3688:3717	1140626	2	True				
ANR	1140791	AssignmentExpression	this_decode = & decode [ ci * 2 ]		1140626	0		=			
ANR	1140792	Identifier	this_decode		1140626	0					
ANR	1140793	UnaryOperationExpression	& decode [ ci * 2 ]		1140626	1					
ANR	1140794	UnaryOperator	&		1140626	0					
ANR	1140795	ArrayIndexing	decode [ ci * 2 ]		1140626	1					
ANR	1140796	Identifier	decode		1140626	0					
ANR	1140797	MultiplicativeExpression	ci * 2		1140626	1		*			
ANR	1140798	Identifier	ci		1140626	0					
ANR	1140799	PrimaryExpression	2		1140626	1					
ANR	1140800	ExpressionStatement	map_decode = real_decode = this_decode	108:8:3728:3766	1140626	3	True				
ANR	1140801	AssignmentExpression	map_decode = real_decode = this_decode		1140626	0		=			
ANR	1140802	Identifier	map_decode		1140626	0					
ANR	1140803	AssignmentExpression	real_decode = this_decode		1140626	1		=			
ANR	1140804	Identifier	real_decode		1140626	0					
ANR	1140805	Identifier	this_decode		1140626	1					
ANR	1140806	IfStatement	if ( ! ( decode_type & 1 ) )		1140626	4					
ANR	1140807	Condition	! ( decode_type & 1 )	109:12:3780:3797	1140626	0	True				
ANR	1140808	UnaryOperationExpression	! ( decode_type & 1 )		1140626	0					
ANR	1140809	UnaryOperator	!		1140626	0					
ANR	1140810	BitAndExpression	decode_type & 1		1140626	1		&			
ANR	1140811	Identifier	decode_type		1140626	0					
ANR	1140812	PrimaryExpression	1		1140626	1					
ANR	1140813	CompoundStatement		36:32:1244:1244	1140626	1					
ANR	1140814	IfStatement	if ( ( decode_type & 2 ) && bps <= 8 )		1140626	0					
ANR	1140815	Condition	( decode_type & 2 ) && bps <= 8	110:16:3818:3846	1140626	0	True				
ANR	1140816	AndExpression	( decode_type & 2 ) && bps <= 8		1140626	0		&&			
ANR	1140817	BitAndExpression	decode_type & 2		1140626	0		&			
ANR	1140818	Identifier	decode_type		1140626	0					
ANR	1140819	PrimaryExpression	2		1140626	1					
ANR	1140820	RelationalExpression	bps <= 8		1140626	1		<=			
ANR	1140821	Identifier	bps		1140626	0					
ANR	1140822	PrimaryExpression	8		1140626	1					
ANR	1140823	CompoundStatement		37:47:1293:1293	1140626	1					
ANR	1140824	ExpressionStatement	real_decode = default_decode	111:16:3867:3895	1140626	0	True				
ANR	1140825	AssignmentExpression	real_decode = default_decode		1140626	0		=			
ANR	1140826	Identifier	real_decode		1140626	0					
ANR	1140827	Identifier	default_decode		1140626	1					
ANR	1140828	ElseStatement	else		1140626	0					
ANR	1140829	CompoundStatement		40:17:1372:1372	1140626	0					
ANR	1140830	ExpressionStatement	map_decode = default_decode	114:16:3946:3973	1140626	0	True				
ANR	1140831	AssignmentExpression	map_decode = default_decode		1140626	0		=			
ANR	1140832	Identifier	map_decode		1140626	0					
ANR	1140833	Identifier	default_decode		1140626	1					
ANR	1140834	IfStatement	if ( bps > 2 || format != gs_image_format_chunky )		1140626	5					
ANR	1140835	Condition	bps > 2 || format != gs_image_format_chunky	117:12:4011:4053	1140626	0	True				
ANR	1140836	OrExpression	bps > 2 || format != gs_image_format_chunky		1140626	0		||			
ANR	1140837	RelationalExpression	bps > 2		1140626	0		>			
ANR	1140838	Identifier	bps		1140626	0					
ANR	1140839	PrimaryExpression	2		1140626	1					
ANR	1140840	EqualityExpression	format != gs_image_format_chunky		1140626	1		!=			
ANR	1140841	Identifier	format		1140626	0					
ANR	1140842	Identifier	gs_image_format_chunky		1140626	1					
ANR	1140843	CompoundStatement		44:57:1500:1500	1140626	1					
ANR	1140844	IfStatement	if ( bps <= 8 )		1140626	0					
ANR	1140845	Condition	bps <= 8	118:16:4074:4081	1140626	0	True				
ANR	1140846	RelationalExpression	bps <= 8		1140626	0		<=			
ANR	1140847	Identifier	bps		1140626	0					
ANR	1140848	PrimaryExpression	8		1140626	1					
ANR	1140849	ExpressionStatement	"image_init_map ( & pmap -> table . lookup8 [ 0 ] , 1 << bps , map_decode )"	119:16:4100:4177	1140626	1	True				
ANR	1140850	CallExpression	"image_init_map ( & pmap -> table . lookup8 [ 0 ] , 1 << bps , map_decode )"		1140626	0					
ANR	1140851	Callee	image_init_map		1140626	0					
ANR	1140852	Identifier	image_init_map		1140626	0					
ANR	1140853	ArgumentList	& pmap -> table . lookup8 [ 0 ]		1140626	1					
ANR	1140854	Argument	& pmap -> table . lookup8 [ 0 ]		1140626	0					
ANR	1140855	UnaryOperationExpression	& pmap -> table . lookup8 [ 0 ]		1140626	0					
ANR	1140856	UnaryOperator	&		1140626	0					
ANR	1140857	ArrayIndexing	pmap -> table . lookup8 [ 0 ]		1140626	1					
ANR	1140858	MemberAccess	pmap -> table . lookup8		1140626	0					
ANR	1140859	PtrMemberAccess	pmap -> table		1140626	0					
ANR	1140860	Identifier	pmap		1140626	0					
ANR	1140861	Identifier	table		1140626	1					
ANR	1140862	Identifier	lookup8		1140626	1					
ANR	1140863	PrimaryExpression	0		1140626	1					
ANR	1140864	Argument	1 << bps		1140626	1					
ANR	1140865	ShiftExpression	1 << bps		1140626	0		<<			
ANR	1140866	PrimaryExpression	1		1140626	0					
ANR	1140867	Identifier	bps		1140626	1					
ANR	1140868	Argument	map_decode		1140626	2					
ANR	1140869	Identifier	map_decode		1140626	0					
ANR	1140870	ElseStatement	else		1140626	0					
ANR	1140871	CompoundStatement		51:21:1762:1767	1140626	0					
ANR	1140872	IdentifierDeclStatement	byte map [ 4 ] ;	123:12:4284:4295	1140626	0	True				
ANR	1140873	IdentifierDecl	map [ 4 ]		1140626	0					
ANR	1140874	IdentifierDeclType	byte [ 4 ]		1140626	0					
ANR	1140875	Identifier	map		1140626	1					
ANR	1140876	PrimaryExpression	4		1140626	2					
ANR	1140877	Statement	register	124:12:4309:4316	1140626	1	True				
ANR	1140878	IdentifierDeclStatement	int i ;	124:21:4318:4323	1140626	2	True				
ANR	1140879	IdentifierDecl	i		1140626	0					
ANR	1140880	IdentifierDeclType	int		1140626	0					
ANR	1140881	Identifier	i		1140626	1					
ANR	1140882	ExpressionStatement	"image_init_map ( & map [ 0 ] , 1 << bps , map_decode )"	126:12:4338:4383	1140626	3	True				
ANR	1140883	CallExpression	"image_init_map ( & map [ 0 ] , 1 << bps , map_decode )"		1140626	0					
ANR	1140884	Callee	image_init_map		1140626	0					
ANR	1140885	Identifier	image_init_map		1140626	0					
ANR	1140886	ArgumentList	& map [ 0 ]		1140626	1					
ANR	1140887	Argument	& map [ 0 ]		1140626	0					
ANR	1140888	UnaryOperationExpression	& map [ 0 ]		1140626	0					
ANR	1140889	UnaryOperator	&		1140626	0					
ANR	1140890	ArrayIndexing	map [ 0 ]		1140626	1					
ANR	1140891	Identifier	map		1140626	0					
ANR	1140892	PrimaryExpression	0		1140626	1					
ANR	1140893	Argument	1 << bps		1140626	1					
ANR	1140894	ShiftExpression	1 << bps		1140626	0		<<			
ANR	1140895	PrimaryExpression	1		1140626	0					
ANR	1140896	Identifier	bps		1140626	1					
ANR	1140897	Argument	map_decode		1140626	2					
ANR	1140898	Identifier	map_decode		1140626	0					
ANR	1140899	SwitchStatement	switch ( bps )		1140626	4					
ANR	1140900	Condition	bps	127:20:4405:4407	1140626	0	True				
ANR	1140901	Identifier	bps		1140626	0					
ANR	1140902	CompoundStatement		54:25:1854:1854	1140626	1					
ANR	1140903	Label	case 1 :	128:12:4424:4430	1140626	0	True				
ANR	1140904	CompoundStatement		57:25:1915:1956	1140626	1					
ANR	1140905	Statement	register	130:16:4462:4469	1140626	0	True				
ANR	1140906	IdentifierDeclStatement	bits32 * p = & pmap -> table . lookup4x1to32 [ 0 ] ;	130:25:4471:4512	1140626	1	True				
ANR	1140907	IdentifierDecl	* p = & pmap -> table . lookup4x1to32 [ 0 ]		1140626	0					
ANR	1140908	IdentifierDeclType	bits32 *		1140626	0					
ANR	1140909	Identifier	p		1140626	1					
ANR	1140910	AssignmentExpression	* p = & pmap -> table . lookup4x1to32 [ 0 ]		1140626	2		=			
ANR	1140911	Identifier	p		1140626	0					
ANR	1140912	UnaryOperationExpression	& pmap -> table . lookup4x1to32 [ 0 ]		1140626	1					
ANR	1140913	UnaryOperator	&		1140626	0					
ANR	1140914	ArrayIndexing	pmap -> table . lookup4x1to32 [ 0 ]		1140626	1					
ANR	1140915	MemberAccess	pmap -> table . lookup4x1to32		1140626	0					
ANR	1140916	PtrMemberAccess	pmap -> table		1140626	0					
ANR	1140917	Identifier	pmap		1140626	0					
ANR	1140918	Identifier	table		1140626	1					
ANR	1140919	Identifier	lookup4x1to32		1140626	1					
ANR	1140920	PrimaryExpression	0		1140626	1					
ANR	1140921	IfStatement	if ( map [ 0 ] == 0 && map [ 1 ] == 0xff )		1140626	2					
ANR	1140922	Condition	map [ 0 ] == 0 && map [ 1 ] == 0xff	132:20:4535:4563	1140626	0	True				
ANR	1140923	AndExpression	map [ 0 ] == 0 && map [ 1 ] == 0xff		1140626	0		&&			
ANR	1140924	EqualityExpression	map [ 0 ] == 0		1140626	0		==			
ANR	1140925	ArrayIndexing	map [ 0 ]		1140626	0					
ANR	1140926	Identifier	map		1140626	0					
ANR	1140927	PrimaryExpression	0		1140626	1					
ANR	1140928	PrimaryExpression	0		1140626	1					
ANR	1140929	EqualityExpression	map [ 1 ] == 0xff		1140626	1		==			
ANR	1140930	ArrayIndexing	map [ 1 ]		1140626	0					
ANR	1140931	Identifier	map		1140626	0					
ANR	1140932	PrimaryExpression	1		1140626	1					
ANR	1140933	PrimaryExpression	0xff		1140626	1					
ANR	1140934	ExpressionStatement	"memcpy ( ( byte * ) p , lookup4x1to32_identity , 16 * 4 )"	133:20:4586:4635	1140626	1	True				
ANR	1140935	CallExpression	"memcpy ( ( byte * ) p , lookup4x1to32_identity , 16 * 4 )"		1140626	0					
ANR	1140936	Callee	memcpy		1140626	0					
ANR	1140937	Identifier	memcpy		1140626	0					
ANR	1140938	ArgumentList	( byte * ) p		1140626	1					
ANR	1140939	Argument	( byte * ) p		1140626	0					
ANR	1140940	CastExpression	( byte * ) p		1140626	0					
ANR	1140941	CastTarget	byte *		1140626	0					
ANR	1140942	Identifier	p		1140626	1					
ANR	1140943	Argument	lookup4x1to32_identity		1140626	1					
ANR	1140944	Identifier	lookup4x1to32_identity		1140626	0					
ANR	1140945	Argument	16 * 4		1140626	2					
ANR	1140946	MultiplicativeExpression	16 * 4		1140626	0		*			
ANR	1140947	PrimaryExpression	16		1140626	0					
ANR	1140948	PrimaryExpression	4		1140626	1					
ANR	1140949	ElseStatement	else		1140626	0					
ANR	1140950	IfStatement	if ( map [ 0 ] == 0xff && map [ 1 ] == 0 )		1140626	0					
ANR	1140951	Condition	map [ 0 ] == 0xff && map [ 1 ] == 0	134:25:4662:4690	1140626	0	True				
ANR	1140952	AndExpression	map [ 0 ] == 0xff && map [ 1 ] == 0		1140626	0		&&			
ANR	1140953	EqualityExpression	map [ 0 ] == 0xff		1140626	0		==			
ANR	1140954	ArrayIndexing	map [ 0 ]		1140626	0					
ANR	1140955	Identifier	map		1140626	0					
ANR	1140956	PrimaryExpression	0		1140626	1					
ANR	1140957	PrimaryExpression	0xff		1140626	1					
ANR	1140958	EqualityExpression	map [ 1 ] == 0		1140626	1		==			
ANR	1140959	ArrayIndexing	map [ 1 ]		1140626	0					
ANR	1140960	Identifier	map		1140626	0					
ANR	1140961	PrimaryExpression	1		1140626	1					
ANR	1140962	PrimaryExpression	0		1140626	1					
ANR	1140963	ExpressionStatement	"memcpy ( ( byte * ) p , lookup4x1to32_inverted , 16 * 4 )"	135:20:4713:4762	1140626	1	True				
ANR	1140964	CallExpression	"memcpy ( ( byte * ) p , lookup4x1to32_inverted , 16 * 4 )"		1140626	0					
ANR	1140965	Callee	memcpy		1140626	0					
ANR	1140966	Identifier	memcpy		1140626	0					
ANR	1140967	ArgumentList	( byte * ) p		1140626	1					
ANR	1140968	Argument	( byte * ) p		1140626	0					
ANR	1140969	CastExpression	( byte * ) p		1140626	0					
ANR	1140970	CastTarget	byte *		1140626	0					
ANR	1140971	Identifier	p		1140626	1					
ANR	1140972	Argument	lookup4x1to32_inverted		1140626	1					
ANR	1140973	Identifier	lookup4x1to32_inverted		1140626	0					
ANR	1140974	Argument	16 * 4		1140626	2					
ANR	1140975	MultiplicativeExpression	16 * 4		1140626	0		*			
ANR	1140976	PrimaryExpression	16		1140626	0					
ANR	1140977	PrimaryExpression	4		1140626	1					
ANR	1140978	ElseStatement	else		1140626	0					
ANR	1140979	ForStatement	"for ( i = 0 ; i < 16 ; i ++ , p ++ )"		1140626	0					
ANR	1140980	ForInit	i = 0 ;	137:25:4810:4815	1140626	0	True				
ANR	1140981	AssignmentExpression	i = 0		1140626	0		=			
ANR	1140982	Identifier	i		1140626	0					
ANR	1140983	PrimaryExpression	0		1140626	1					
ANR	1140984	Condition	i < 16	137:32:4817:4822	1140626	1	True				
ANR	1140985	RelationalExpression	i < 16		1140626	0		<			
ANR	1140986	Identifier	i		1140626	0					
ANR	1140987	PrimaryExpression	16		1140626	1					
ANR	1140988	Expression	"i ++ , p ++"	137:40:4825:4832	1140626	2	True				
ANR	1140989	PostIncDecOperationExpression	i ++		1140626	0					
ANR	1140990	Identifier	i		1140626	0					
ANR	1140991	IncDec	++		1140626	1					
ANR	1140992	PostIncDecOperationExpression	p ++		1140626	1					
ANR	1140993	Identifier	p		1140626	0					
ANR	1140994	IncDec	++		1140626	1					
ANR	1140995	ExpressionStatement	"( ( byte * ) p ) [ 0 ] = map [ i >> 3 ] , ( ( byte * ) p ) [ 1 ] = map [ ( i >> 2 ) & 1 ] , ( ( byte * ) p ) [ 2 ] = map [ ( i >> 1 ) & 1 ] , ( ( byte * ) p ) [ 3 ] = map [ i & 1 ]"	138:24:4859:5060	1140626	3	True				
ANR	1140996	Expression	"( ( byte * ) p ) [ 0 ] = map [ i >> 3 ] , ( ( byte * ) p ) [ 1 ] = map [ ( i >> 2 ) & 1 ] , ( ( byte * ) p ) [ 2 ] = map [ ( i >> 1 ) & 1 ] , ( ( byte * ) p ) [ 3 ] = map [ i & 1 ]"		1140626	0					
ANR	1140997	AssignmentExpression	( ( byte * ) p ) [ 0 ] = map [ i >> 3 ]		1140626	0		=			
ANR	1140998	ArrayIndexing	( ( byte * ) p ) [ 0 ]		1140626	0					
ANR	1140999	CastExpression	( byte * ) p		1140626	0					
ANR	1141000	CastTarget	byte *		1140626	0					
ANR	1141001	Identifier	p		1140626	1					
ANR	1141002	PrimaryExpression	0		1140626	1					
ANR	1141003	ArrayIndexing	map [ i >> 3 ]		1140626	1					
ANR	1141004	Identifier	map		1140626	0					
ANR	1141005	ShiftExpression	i >> 3		1140626	1		>>			
ANR	1141006	Identifier	i		1140626	0					
ANR	1141007	PrimaryExpression	3		1140626	1					
ANR	1141008	Expression	"( ( byte * ) p ) [ 1 ] = map [ ( i >> 2 ) & 1 ] , ( ( byte * ) p ) [ 2 ] = map [ ( i >> 1 ) & 1 ] , ( ( byte * ) p ) [ 3 ] = map [ i & 1 ]"		1140626	1					
ANR	1141009	AssignmentExpression	( ( byte * ) p ) [ 1 ] = map [ ( i >> 2 ) & 1 ]		1140626	0		=			
ANR	1141010	ArrayIndexing	( ( byte * ) p ) [ 1 ]		1140626	0					
ANR	1141011	CastExpression	( byte * ) p		1140626	0					
ANR	1141012	CastTarget	byte *		1140626	0					
ANR	1141013	Identifier	p		1140626	1					
ANR	1141014	PrimaryExpression	1		1140626	1					
ANR	1141015	ArrayIndexing	map [ ( i >> 2 ) & 1 ]		1140626	1					
ANR	1141016	Identifier	map		1140626	0					
ANR	1141017	BitAndExpression	( i >> 2 ) & 1		1140626	1		&			
ANR	1141018	ShiftExpression	i >> 2		1140626	0		>>			
ANR	1141019	Identifier	i		1140626	0					
ANR	1141020	PrimaryExpression	2		1140626	1					
ANR	1141021	PrimaryExpression	1		1140626	1					
ANR	1141022	Expression	"( ( byte * ) p ) [ 2 ] = map [ ( i >> 1 ) & 1 ] , ( ( byte * ) p ) [ 3 ] = map [ i & 1 ]"		1140626	1					
ANR	1141023	AssignmentExpression	( ( byte * ) p ) [ 2 ] = map [ ( i >> 1 ) & 1 ]		1140626	0		=			
ANR	1141024	ArrayIndexing	( ( byte * ) p ) [ 2 ]		1140626	0					
ANR	1141025	CastExpression	( byte * ) p		1140626	0					
ANR	1141026	CastTarget	byte *		1140626	0					
ANR	1141027	Identifier	p		1140626	1					
ANR	1141028	PrimaryExpression	2		1140626	1					
ANR	1141029	ArrayIndexing	map [ ( i >> 1 ) & 1 ]		1140626	1					
ANR	1141030	Identifier	map		1140626	0					
ANR	1141031	BitAndExpression	( i >> 1 ) & 1		1140626	1		&			
ANR	1141032	ShiftExpression	i >> 1		1140626	0		>>			
ANR	1141033	Identifier	i		1140626	0					
ANR	1141034	PrimaryExpression	1		1140626	1					
ANR	1141035	PrimaryExpression	1		1140626	1					
ANR	1141036	AssignmentExpression	( ( byte * ) p ) [ 3 ] = map [ i & 1 ]		1140626	1		=			
ANR	1141037	ArrayIndexing	( ( byte * ) p ) [ 3 ]		1140626	0					
ANR	1141038	CastExpression	( byte * ) p		1140626	0					
ANR	1141039	CastTarget	byte *		1140626	0					
ANR	1141040	Identifier	p		1140626	1					
ANR	1141041	PrimaryExpression	3		1140626	1					
ANR	1141042	ArrayIndexing	map [ i & 1 ]		1140626	1					
ANR	1141043	Identifier	map		1140626	0					
ANR	1141044	BitAndExpression	i & 1		1140626	1		&			
ANR	1141045	Identifier	i		1140626	0					
ANR	1141046	PrimaryExpression	1		1140626	1					
ANR	1141047	BreakStatement	break ;	143:12:5088:5093	1140626	2	True				
ANR	1141048	Label	case 2 :	144:12:5107:5113	1140626	3	True				
ANR	1141049	CompoundStatement		73:25:2598:2639	1140626	4					
ANR	1141050	Statement	register	146:16:5145:5152	1140626	0	True				
ANR	1141051	IdentifierDeclStatement	bits16 * p = & pmap -> table . lookup2x2to16 [ 0 ] ;	146:25:5154:5195	1140626	1	True				
ANR	1141052	IdentifierDecl	* p = & pmap -> table . lookup2x2to16 [ 0 ]		1140626	0					
ANR	1141053	IdentifierDeclType	bits16 *		1140626	0					
ANR	1141054	Identifier	p		1140626	1					
ANR	1141055	AssignmentExpression	* p = & pmap -> table . lookup2x2to16 [ 0 ]		1140626	2		=			
ANR	1141056	Identifier	p		1140626	0					
ANR	1141057	UnaryOperationExpression	& pmap -> table . lookup2x2to16 [ 0 ]		1140626	1					
ANR	1141058	UnaryOperator	&		1140626	0					
ANR	1141059	ArrayIndexing	pmap -> table . lookup2x2to16 [ 0 ]		1140626	1					
ANR	1141060	MemberAccess	pmap -> table . lookup2x2to16		1140626	0					
ANR	1141061	PtrMemberAccess	pmap -> table		1140626	0					
ANR	1141062	Identifier	pmap		1140626	0					
ANR	1141063	Identifier	table		1140626	1					
ANR	1141064	Identifier	lookup2x2to16		1140626	1					
ANR	1141065	PrimaryExpression	0		1140626	1					
ANR	1141066	ForStatement	"for ( i = 0 ; i < 16 ; i ++ , p ++ )"		1140626	2					
ANR	1141067	ForInit	i = 0 ;	148:21:5219:5224	1140626	0	True				
ANR	1141068	AssignmentExpression	i = 0		1140626	0		=			
ANR	1141069	Identifier	i		1140626	0					
ANR	1141070	PrimaryExpression	0		1140626	1					
ANR	1141071	Condition	i < 16	148:28:5226:5231	1140626	1	True				
ANR	1141072	RelationalExpression	i < 16		1140626	0		<			
ANR	1141073	Identifier	i		1140626	0					
ANR	1141074	PrimaryExpression	16		1140626	1					
ANR	1141075	Expression	"i ++ , p ++"	148:36:5234:5241	1140626	2	True				
ANR	1141076	PostIncDecOperationExpression	i ++		1140626	0					
ANR	1141077	Identifier	i		1140626	0					
ANR	1141078	IncDec	++		1140626	1					
ANR	1141079	PostIncDecOperationExpression	p ++		1140626	1					
ANR	1141080	Identifier	p		1140626	0					
ANR	1141081	IncDec	++		1140626	1					
ANR	1141082	ExpressionStatement	"( ( byte * ) p ) [ 0 ] = map [ i >> 2 ] , ( ( byte * ) p ) [ 1 ] = map [ i & 3 ]"	149:20:5264:5341	1140626	3	True				
ANR	1141083	Expression	"( ( byte * ) p ) [ 0 ] = map [ i >> 2 ] , ( ( byte * ) p ) [ 1 ] = map [ i & 3 ]"		1140626	0					
ANR	1141084	AssignmentExpression	( ( byte * ) p ) [ 0 ] = map [ i >> 2 ]		1140626	0		=			
ANR	1141085	ArrayIndexing	( ( byte * ) p ) [ 0 ]		1140626	0					
ANR	1141086	CastExpression	( byte * ) p		1140626	0					
ANR	1141087	CastTarget	byte *		1140626	0					
ANR	1141088	Identifier	p		1140626	1					
ANR	1141089	PrimaryExpression	0		1140626	1					
ANR	1141090	ArrayIndexing	map [ i >> 2 ]		1140626	1					
ANR	1141091	Identifier	map		1140626	0					
ANR	1141092	ShiftExpression	i >> 2		1140626	1		>>			
ANR	1141093	Identifier	i		1140626	0					
ANR	1141094	PrimaryExpression	2		1140626	1					
ANR	1141095	AssignmentExpression	( ( byte * ) p ) [ 1 ] = map [ i & 3 ]		1140626	1		=			
ANR	1141096	ArrayIndexing	( ( byte * ) p ) [ 1 ]		1140626	0					
ANR	1141097	CastExpression	( byte * ) p		1140626	0					
ANR	1141098	CastTarget	byte *		1140626	0					
ANR	1141099	Identifier	p		1140626	1					
ANR	1141100	PrimaryExpression	1		1140626	1					
ANR	1141101	ArrayIndexing	map [ i & 3 ]		1140626	1					
ANR	1141102	Identifier	map		1140626	0					
ANR	1141103	BitAndExpression	i & 3		1140626	1		&			
ANR	1141104	Identifier	i		1140626	0					
ANR	1141105	PrimaryExpression	3		1140626	1					
ANR	1141106	BreakStatement	break ;	152:12:5369:5374	1140626	5	True				
ANR	1141107	ExpressionStatement	pmap -> decode_base = real_decode [ 0 ]	155:8:5408:5467	1140626	6	True				
ANR	1141108	AssignmentExpression	pmap -> decode_base = real_decode [ 0 ]		1140626	0		=			
ANR	1141109	PtrMemberAccess	pmap -> decode_base		1140626	0					
ANR	1141110	Identifier	pmap		1140626	0					
ANR	1141111	Identifier	decode_base		1140626	1					
ANR	1141112	ArrayIndexing	real_decode [ 0 ]		1140626	1					
ANR	1141113	Identifier	real_decode		1140626	0					
ANR	1141114	PrimaryExpression	0		1140626	1					
ANR	1141115	ExpressionStatement	pmap -> decode_factor = ( real_decode [ 1 ] - real_decode [ 0 ] ) / ( bps <= 8 ? 255.0 : ( float ) frac_1 )	156:8:5477:5593	1140626	7	True				
ANR	1141116	AssignmentExpression	pmap -> decode_factor = ( real_decode [ 1 ] - real_decode [ 0 ] ) / ( bps <= 8 ? 255.0 : ( float ) frac_1 )		1140626	0		=			
ANR	1141117	PtrMemberAccess	pmap -> decode_factor		1140626	0					
ANR	1141118	Identifier	pmap		1140626	0					
ANR	1141119	Identifier	decode_factor		1140626	1					
ANR	1141120	MultiplicativeExpression	( real_decode [ 1 ] - real_decode [ 0 ] ) / ( bps <= 8 ? 255.0 : ( float ) frac_1 )		1140626	1		/			
ANR	1141121	AdditiveExpression	real_decode [ 1 ] - real_decode [ 0 ]		1140626	0		-			
ANR	1141122	ArrayIndexing	real_decode [ 1 ]		1140626	0					
ANR	1141123	Identifier	real_decode		1140626	0					
ANR	1141124	PrimaryExpression	1		1140626	1					
ANR	1141125	ArrayIndexing	real_decode [ 0 ]		1140626	1					
ANR	1141126	Identifier	real_decode		1140626	0					
ANR	1141127	PrimaryExpression	0		1140626	1					
ANR	1141128	ConditionalExpression	bps <= 8 ? 255.0 : ( float ) frac_1		1140626	1					
ANR	1141129	Condition	bps <= 8		1140626	0					
ANR	1141130	RelationalExpression	bps <= 8		1140626	0		<=			
ANR	1141131	Identifier	bps		1140626	0					
ANR	1141132	PrimaryExpression	8		1140626	1					
ANR	1141133	PrimaryExpression	255.0		1140626	1					
ANR	1141134	CastExpression	( float ) frac_1		1140626	2					
ANR	1141135	CastTarget	float		1140626	0					
ANR	1141136	Identifier	frac_1		1140626	1					
ANR	1141137	ExpressionStatement	pmap -> decode_max = real_decode [ 1 ]	159:8:5603:5662	1140626	8	True				
ANR	1141138	AssignmentExpression	pmap -> decode_max = real_decode [ 1 ]		1140626	0		=			
ANR	1141139	PtrMemberAccess	pmap -> decode_max		1140626	0					
ANR	1141140	Identifier	pmap		1140626	0					
ANR	1141141	Identifier	decode_max		1140626	1					
ANR	1141142	ArrayIndexing	real_decode [ 1 ]		1140626	1					
ANR	1141143	Identifier	real_decode		1140626	0					
ANR	1141144	PrimaryExpression	1		1140626	1					
ANR	1141145	IfStatement	if ( decode_type )		1140626	9					
ANR	1141146	Condition	decode_type	160:12:5676:5686	1140626	0	True				
ANR	1141147	Identifier	decode_type		1140626	0					
ANR	1141148	CompoundStatement		87:25:3133:3133	1140626	1					
ANR	1141149	ExpressionStatement	pmap -> decoding = sd_none	161:12:5703:5727	1140626	0	True				
ANR	1141150	AssignmentExpression	pmap -> decoding = sd_none		1140626	0		=			
ANR	1141151	PtrMemberAccess	pmap -> decoding		1140626	0					
ANR	1141152	Identifier	pmap		1140626	0					
ANR	1141153	Identifier	decoding		1140626	1					
ANR	1141154	Identifier	sd_none		1140626	1					
ANR	1141155	ExpressionStatement	pmap -> inverted = map_decode [ 0 ] != 0	162:12:5741:5776	1140626	1	True				
ANR	1141156	AssignmentExpression	pmap -> inverted = map_decode [ 0 ] != 0		1140626	0		=			
ANR	1141157	PtrMemberAccess	pmap -> inverted		1140626	0					
ANR	1141158	Identifier	pmap		1140626	0					
ANR	1141159	Identifier	inverted		1140626	1					
ANR	1141160	EqualityExpression	map_decode [ 0 ] != 0		1140626	1		!=			
ANR	1141161	ArrayIndexing	map_decode [ 0 ]		1140626	0					
ANR	1141162	Identifier	map_decode		1140626	0					
ANR	1141163	PrimaryExpression	0		1140626	1					
ANR	1141164	PrimaryExpression	0		1140626	1					
ANR	1141165	ElseStatement	else		1140626	0					
ANR	1141166	IfStatement	if ( bps <= 4 )		1140626	0					
ANR	1141167	Condition	bps <= 4	164:17:5805:5812	1140626	0	True				
ANR	1141168	RelationalExpression	bps <= 4		1140626	0		<=			
ANR	1141169	Identifier	bps		1140626	0					
ANR	1141170	PrimaryExpression	4		1140626	1					
ANR	1141171	CompoundStatement		93:12:3319:3324	1140626	1					
ANR	1141172	IdentifierDeclStatement	int step = 15 / ( ( 1 << bps ) - 1 ) ;	165:12:5829:5861	1140626	0	True				
ANR	1141173	IdentifierDecl	step = 15 / ( ( 1 << bps ) - 1 )		1140626	0					
ANR	1141174	IdentifierDeclType	int		1140626	0					
ANR	1141175	Identifier	step		1140626	1					
ANR	1141176	AssignmentExpression	step = 15 / ( ( 1 << bps ) - 1 )		1140626	2		=			
ANR	1141177	Identifier	step		1140626	0					
ANR	1141178	MultiplicativeExpression	15 / ( ( 1 << bps ) - 1 )		1140626	1		/			
ANR	1141179	PrimaryExpression	15		1140626	0					
ANR	1141180	AdditiveExpression	( 1 << bps ) - 1		1140626	1		-			
ANR	1141181	ShiftExpression	1 << bps		1140626	0		<<			
ANR	1141182	PrimaryExpression	1		1140626	0					
ANR	1141183	Identifier	bps		1140626	1					
ANR	1141184	PrimaryExpression	1		1140626	1					
ANR	1141185	IdentifierDeclStatement	int i ;	166:12:5875:5880	1140626	1	True				
ANR	1141186	IdentifierDecl	i		1140626	0					
ANR	1141187	IdentifierDeclType	int		1140626	0					
ANR	1141188	Identifier	i		1140626	1					
ANR	1141189	ExpressionStatement	pmap -> decoding = sd_lookup	168:12:5895:5921	1140626	2	True				
ANR	1141190	AssignmentExpression	pmap -> decoding = sd_lookup		1140626	0		=			
ANR	1141191	PtrMemberAccess	pmap -> decoding		1140626	0					
ANR	1141192	Identifier	pmap		1140626	0					
ANR	1141193	Identifier	decoding		1140626	1					
ANR	1141194	Identifier	sd_lookup		1140626	1					
ANR	1141195	ForStatement	for ( i = 15 - step ; i > 0 ; i -= step )		1140626	3					
ANR	1141196	ForInit	i = 15 - step ;	169:17:5940:5953	1140626	0	True				
ANR	1141197	AssignmentExpression	i = 15 - step		1140626	0		=			
ANR	1141198	Identifier	i		1140626	0					
ANR	1141199	AdditiveExpression	15 - step		1140626	1		-			
ANR	1141200	PrimaryExpression	15		1140626	0					
ANR	1141201	Identifier	step		1140626	1					
ANR	1141202	Condition	i > 0	169:32:5955:5959	1140626	1	True				
ANR	1141203	RelationalExpression	i > 0		1140626	0		>			
ANR	1141204	Identifier	i		1140626	0					
ANR	1141205	PrimaryExpression	0		1140626	1					
ANR	1141206	AssignmentExpression	i -= step	169:39:5962:5970	1140626	2	True	-=			
ANR	1141207	Identifier	i		1140626	0					
ANR	1141208	Identifier	step		1140626	1					
ANR	1141209	ExpressionStatement	pmap -> decode_lookup [ i ] = pmap -> decode_base + i * ( 255.0 / 15 ) * pmap -> decode_factor	170:16:5989:6088	1140626	3	True				
ANR	1141210	AssignmentExpression	pmap -> decode_lookup [ i ] = pmap -> decode_base + i * ( 255.0 / 15 ) * pmap -> decode_factor		1140626	0		=			
ANR	1141211	ArrayIndexing	pmap -> decode_lookup [ i ]		1140626	0					
ANR	1141212	PtrMemberAccess	pmap -> decode_lookup		1140626	0					
ANR	1141213	Identifier	pmap		1140626	0					
ANR	1141214	Identifier	decode_lookup		1140626	1					
ANR	1141215	Identifier	i		1140626	1					
ANR	1141216	AdditiveExpression	pmap -> decode_base + i * ( 255.0 / 15 ) * pmap -> decode_factor		1140626	1		+			
ANR	1141217	PtrMemberAccess	pmap -> decode_base		1140626	0					
ANR	1141218	Identifier	pmap		1140626	0					
ANR	1141219	Identifier	decode_base		1140626	1					
ANR	1141220	MultiplicativeExpression	i * ( 255.0 / 15 ) * pmap -> decode_factor		1140626	1		*			
ANR	1141221	Identifier	i		1140626	0					
ANR	1141222	MultiplicativeExpression	( 255.0 / 15 ) * pmap -> decode_factor		1140626	1		*			
ANR	1141223	MultiplicativeExpression	255.0 / 15		1140626	0		/			
ANR	1141224	PrimaryExpression	255.0		1140626	0					
ANR	1141225	PrimaryExpression	15		1140626	1					
ANR	1141226	PtrMemberAccess	pmap -> decode_factor		1140626	1					
ANR	1141227	Identifier	pmap		1140626	0					
ANR	1141228	Identifier	decode_factor		1140626	1					
ANR	1141229	ElseStatement	else		1140626	0					
ANR	1141230	ExpressionStatement	pmap -> decoding = sd_compute	174:12:6125:6152	1140626	0	True				
ANR	1141231	AssignmentExpression	pmap -> decoding = sd_compute		1140626	0		=			
ANR	1141232	PtrMemberAccess	pmap -> decoding		1140626	0					
ANR	1141233	Identifier	pmap		1140626	0					
ANR	1141234	Identifier	decoding		1140626	1					
ANR	1141235	Identifier	sd_compute		1140626	1					
ANR	1141236	ReturnType	void		1140626	1					
ANR	1141237	Identifier	get_map		1140626	2					
ANR	1141238	ParameterList	"image_decode_t * imd , gs_image_format_t format , const float * decode"		1140626	3					
ANR	1141239	Parameter	image_decode_t * imd	73:8:2487:2505	1140626	0	True				
ANR	1141240	ParameterType	image_decode_t *		1140626	0					
ANR	1141241	Identifier	imd		1140626	1					
ANR	1141242	Parameter	gs_image_format_t format	73:29:2508:2531	1140626	1	True				
ANR	1141243	ParameterType	gs_image_format_t		1140626	0					
ANR	1141244	Identifier	format		1140626	1					
ANR	1141245	Parameter	const float * decode	73:55:2534:2552	1140626	2	True				
ANR	1141246	ParameterType	const float *		1140626	0					
ANR	1141247	Identifier	decode		1140626	1					
ANR	1141248	CFGEntryNode	ENTRY		1140626		True				
ANR	1141249	CFGExitNode	EXIT		1140626		True				
ANR	1141250	Symbol	* pmap		1140626						
ANR	1141251	Symbol	* pmap -> decode_lookup		1140626						
ANR	1141252	Symbol	* * pmap		1140626						
ANR	1141253	Symbol	pmap -> table . lookup8		1140626						
ANR	1141254	Symbol	* map		1140626						
ANR	1141255	Symbol	decode		1140626						
ANR	1141256	Symbol	pmap -> decode_base		1140626						
ANR	1141257	Symbol	imd -> map		1140626						
ANR	1141258	Symbol	* ci		1140626						
ANR	1141259	Symbol	lookup4x1to32_inverted		1140626						
ANR	1141260	Symbol	pmap -> inverted		1140626						
ANR	1141261	Symbol	* imd		1140626						
ANR	1141262	Symbol	imd -> bps		1140626						
ANR	1141263	Symbol	sd_lookup		1140626						
ANR	1141264	Symbol	applymap8		1140626						
ANR	1141265	Symbol	sd_none		1140626						
ANR	1141266	Symbol	pmap -> table		1140626						
ANR	1141267	Symbol	gs_image_format_chunky		1140626						
ANR	1141268	Symbol	default_decode		1140626						
ANR	1141269	Symbol	frac_1		1140626						
ANR	1141270	Symbol	* map_decode		1140626						
ANR	1141271	Symbol	format		1140626						
ANR	1141272	Symbol	this_decode		1140626						
ANR	1141273	Symbol	spp		1140626						
ANR	1141274	Symbol	map_decode		1140626						
ANR	1141275	Symbol	sd_compute		1140626						
ANR	1141276	Symbol	real_decode		1140626						
ANR	1141277	Symbol	* decode		1140626						
ANR	1141278	Symbol	imd		1140626						
ANR	1141279	Symbol	applymap16		1140626						
ANR	1141280	Symbol	decode_type		1140626						
ANR	1141281	Symbol	pmap -> decode_factor		1140626						
ANR	1141282	Symbol	lookup4x1to32_identity		1140626						
ANR	1141283	Symbol	pmap		1140626						
ANR	1141284	Symbol	pmap -> decoding		1140626						
ANR	1141285	Symbol	map		1140626						
ANR	1141286	Symbol	bps		1140626						
ANR	1141287	Symbol	ci		1140626						
ANR	1141288	Symbol	imd -> spp		1140626						
ANR	1141289	Symbol	i		1140626						
ANR	1141290	Symbol	imd -> applymap		1140626						
ANR	1141291	Symbol	pmap -> table . lookup2x2to16		1140626						
ANR	1141292	Symbol	pmap -> decode_max		1140626						
ANR	1141293	Symbol	pmap -> decode_lookup		1140626						
ANR	1141294	Symbol	p		1140626						
ANR	1141295	Symbol	pmap -> table . lookup4x1to32		1140626						
ANR	1141296	Symbol	* i		1140626						
ANR	1141297	Symbol	* p		1140626						
ANR	1141298	Symbol	step		1140626						
ANR	1141299	Symbol	* real_decode		1140626						
ANR	1141300	Function	applymap8	179:0:6240:7266							
ANR	1141301	FunctionDef	"applymap8 (sample_map map [ ] , const void * psrc_in , int spp , void * pdes , void * bufend)"		1141300	0					
ANR	1141302	CompoundStatement		181:0:6333:7266	1141300	0					
ANR	1141303	IdentifierDeclStatement	byte * psrc = ( byte * ) psrc_in ;	182:4:6339:6366	1141300	0	True				
ANR	1141304	IdentifierDecl	* psrc = ( byte * ) psrc_in		1141300	0					
ANR	1141305	IdentifierDeclType	byte *		1141300	0					
ANR	1141306	Identifier	psrc		1141300	1					
ANR	1141307	AssignmentExpression	* psrc = ( byte * ) psrc_in		1141300	2		=			
ANR	1141308	Identifier	psrc		1141300	0					
ANR	1141309	CastExpression	( byte * ) psrc_in		1141300	1					
ANR	1141310	CastTarget	byte *		1141300	0					
ANR	1141311	Identifier	psrc_in		1141300	1					
ANR	1141312	IdentifierDeclStatement	byte * curr_pos = ( byte * ) pdes ;	183:4:6372:6401	1141300	1	True				
ANR	1141313	IdentifierDecl	* curr_pos = ( byte * ) pdes		1141300	0					
ANR	1141314	IdentifierDeclType	byte *		1141300	0					
ANR	1141315	Identifier	curr_pos		1141300	1					
ANR	1141316	AssignmentExpression	* curr_pos = ( byte * ) pdes		1141300	2		=			
ANR	1141317	Identifier	curr_pos		1141300	0					
ANR	1141318	CastExpression	( byte * ) pdes		1141300	1					
ANR	1141319	CastTarget	byte *		1141300	0					
ANR	1141320	Identifier	pdes		1141300	1					
ANR	1141321	IdentifierDeclStatement	int k ;	184:4:6407:6412	1141300	2	True				
ANR	1141322	IdentifierDecl	k		1141300	0					
ANR	1141323	IdentifierDeclType	int		1141300	0					
ANR	1141324	Identifier	k		1141300	1					
ANR	1141325	IdentifierDeclStatement	float temp ;	185:4:6418:6428	1141300	3	True				
ANR	1141326	IdentifierDecl	temp		1141300	0					
ANR	1141327	IdentifierDeclType	float		1141300	0					
ANR	1141328	Identifier	temp		1141300	1					
ANR	1141329	WhileStatement	while ( curr_pos < ( byte * ) bufend )		1141300	4					
ANR	1141330	Condition	curr_pos < ( byte * ) bufend	187:11:6442:6466	1141300	0	True				
ANR	1141331	RelationalExpression	curr_pos < ( byte * ) bufend		1141300	0		<			
ANR	1141332	Identifier	curr_pos		1141300	0					
ANR	1141333	CastExpression	( byte * ) bufend		1141300	1					
ANR	1141334	CastTarget	byte *		1141300	0					
ANR	1141335	Identifier	bufend		1141300	1					
ANR	1141336	CompoundStatement		7:38:135:135	1141300	1					
ANR	1141337	ForStatement	for ( k = 0 ; k < spp ; k ++ )		1141300	0					
ANR	1141338	ForInit	k = 0 ;	188:13:6484:6489	1141300	0	True				
ANR	1141339	AssignmentExpression	k = 0		1141300	0		=			
ANR	1141340	Identifier	k		1141300	0					
ANR	1141341	PrimaryExpression	0		1141300	1					
ANR	1141342	Condition	k < spp	188:20:6491:6497	1141300	1	True				
ANR	1141343	RelationalExpression	k < spp		1141300	0		<			
ANR	1141344	Identifier	k		1141300	0					
ANR	1141345	Identifier	spp		1141300	1					
ANR	1141346	PostIncDecOperationExpression	k ++	188:29:6500:6502	1141300	2	True				
ANR	1141347	Identifier	k		1141300	0					
ANR	1141348	IncDec	++		1141300	1					
ANR	1141349	CompoundStatement		8:34:171:171	1141300	3					
ANR	1141350	SwitchStatement	switch ( map [ k ] . decoding )		1141300	0					
ANR	1141351	Condition	map [ k ] . decoding	189:20:6527:6541	1141300	0	True				
ANR	1141352	MemberAccess	map [ k ] . decoding		1141300	0					
ANR	1141353	ArrayIndexing	map [ k ]		1141300	0					
ANR	1141354	Identifier	map		1141300	0					
ANR	1141355	Identifier	k		1141300	1					
ANR	1141356	Identifier	decoding		1141300	1					
ANR	1141357	CompoundStatement		9:37:210:210	1141300	1					
ANR	1141358	Label	case sd_none :	190:12:6558:6570	1141300	0	True				
ANR	1141359	Identifier	sd_none		1141300	0					
ANR	1141360	ExpressionStatement	* curr_pos = * psrc	191:16:6588:6605	1141300	1	True				
ANR	1141361	AssignmentExpression	* curr_pos = * psrc		1141300	0		=			
ANR	1141362	UnaryOperationExpression	* curr_pos		1141300	0					
ANR	1141363	UnaryOperator	*		1141300	0					
ANR	1141364	Identifier	curr_pos		1141300	1					
ANR	1141365	UnaryOperationExpression	* psrc		1141300	1					
ANR	1141366	UnaryOperator	*		1141300	0					
ANR	1141367	Identifier	psrc		1141300	1					
ANR	1141368	BreakStatement	break ;	192:16:6623:6628	1141300	2	True				
ANR	1141369	Label	case sd_lookup :	193:12:6642:6656	1141300	3	True				
ANR	1141370	Identifier	sd_lookup		1141300	0					
ANR	1141371	ExpressionStatement	temp = map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255	194:16:6674:6721	1141300	4	True				
ANR	1141372	AssignmentExpression	temp = map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255		1141300	0		=			
ANR	1141373	Identifier	temp		1141300	0					
ANR	1141374	MultiplicativeExpression	map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255		1141300	1		*			
ANR	1141375	ArrayIndexing	map [ k ] . decode_lookup [ ( * psrc ) >> 4 ]		1141300	0					
ANR	1141376	MemberAccess	map [ k ] . decode_lookup		1141300	0					
ANR	1141377	ArrayIndexing	map [ k ]		1141300	0					
ANR	1141378	Identifier	map		1141300	0					
ANR	1141379	Identifier	k		1141300	1					
ANR	1141380	Identifier	decode_lookup		1141300	1					
ANR	1141381	ShiftExpression	( * psrc ) >> 4		1141300	1		>>			
ANR	1141382	UnaryOperationExpression	* psrc		1141300	0					
ANR	1141383	UnaryOperator	*		1141300	0					
ANR	1141384	Identifier	psrc		1141300	1					
ANR	1141385	PrimaryExpression	4		1141300	1					
ANR	1141386	PrimaryExpression	255		1141300	1					
ANR	1141387	IfStatement	if ( temp > 255 )		1141300	5					
ANR	1141388	Condition	temp > 255	195:20:6743:6752	1141300	0	True				
ANR	1141389	RelationalExpression	temp > 255		1141300	0		>			
ANR	1141390	Identifier	temp		1141300	0					
ANR	1141391	PrimaryExpression	255		1141300	1					
ANR	1141392	ExpressionStatement	temp = 255	195:32:6755:6765	1141300	1	True				
ANR	1141393	AssignmentExpression	temp = 255		1141300	0		=			
ANR	1141394	Identifier	temp		1141300	0					
ANR	1141395	PrimaryExpression	255		1141300	1					
ANR	1141396	IfStatement	if ( temp < 0 )		1141300	6					
ANR	1141397	Condition	temp < 0	196:20:6787:6794	1141300	0	True				
ANR	1141398	RelationalExpression	temp < 0		1141300	0		<			
ANR	1141399	Identifier	temp		1141300	0					
ANR	1141400	PrimaryExpression	0		1141300	1					
ANR	1141401	ExpressionStatement	temp = 0	196:30:6797:6805	1141300	1	True				
ANR	1141402	AssignmentExpression	temp = 0		1141300	0		=			
ANR	1141403	Identifier	temp		1141300	0					
ANR	1141404	PrimaryExpression	0		1141300	1					
ANR	1141405	ExpressionStatement	* curr_pos = ( byte ) temp	197:16:6823:6845	1141300	7	True				
ANR	1141406	AssignmentExpression	* curr_pos = ( byte ) temp		1141300	0		=			
ANR	1141407	UnaryOperationExpression	* curr_pos		1141300	0					
ANR	1141408	UnaryOperator	*		1141300	0					
ANR	1141409	Identifier	curr_pos		1141300	1					
ANR	1141410	CastExpression	( byte ) temp		1141300	1					
ANR	1141411	CastTarget	byte		1141300	0					
ANR	1141412	Identifier	temp		1141300	1					
ANR	1141413	BreakStatement	break ;	198:16:6863:6868	1141300	8	True				
ANR	1141414	Label	case sd_compute :	199:12:6882:6897	1141300	9	True				
ANR	1141415	Identifier	sd_compute		1141300	0					
ANR	1141416	ExpressionStatement	temp = map [ k ] . decode_base + * ( psrc ) * map [ k ] . decode_factor	200:16:6915:6993	1141300	10	True				
ANR	1141417	AssignmentExpression	temp = map [ k ] . decode_base + * ( psrc ) * map [ k ] . decode_factor		1141300	0		=			
ANR	1141418	Identifier	temp		1141300	0					
ANR	1141419	AdditiveExpression	map [ k ] . decode_base + * ( psrc ) * map [ k ] . decode_factor		1141300	1		+			
ANR	1141420	MemberAccess	map [ k ] . decode_base		1141300	0					
ANR	1141421	ArrayIndexing	map [ k ]		1141300	0					
ANR	1141422	Identifier	map		1141300	0					
ANR	1141423	Identifier	k		1141300	1					
ANR	1141424	Identifier	decode_base		1141300	1					
ANR	1141425	UnaryOperationExpression	* ( psrc ) * map [ k ] . decode_factor		1141300	1					
ANR	1141426	UnaryOperator	*		1141300	0					
ANR	1141427	CastExpression	( psrc ) * map [ k ] . decode_factor		1141300	1					
ANR	1141428	CastTarget	psrc		1141300	0					
ANR	1141429	UnaryOperationExpression	* map [ k ] . decode_factor		1141300	1					
ANR	1141430	UnaryOperator	*		1141300	0					
ANR	1141431	MemberAccess	map [ k ] . decode_factor		1141300	1					
ANR	1141432	ArrayIndexing	map [ k ]		1141300	0					
ANR	1141433	Identifier	map		1141300	0					
ANR	1141434	Identifier	k		1141300	1					
ANR	1141435	Identifier	decode_factor		1141300	1					
ANR	1141436	ExpressionStatement	temp *= 255	202:16:7011:7022	1141300	11	True				
ANR	1141437	AssignmentExpression	temp *= 255		1141300	0		*=			
ANR	1141438	Identifier	temp		1141300	0					
ANR	1141439	PrimaryExpression	255		1141300	1					
ANR	1141440	IfStatement	if ( temp > 255 )		1141300	12					
ANR	1141441	Condition	temp > 255	203:20:7044:7053	1141300	0	True				
ANR	1141442	RelationalExpression	temp > 255		1141300	0		>			
ANR	1141443	Identifier	temp		1141300	0					
ANR	1141444	PrimaryExpression	255		1141300	1					
ANR	1141445	ExpressionStatement	temp = 255	203:32:7056:7066	1141300	1	True				
ANR	1141446	AssignmentExpression	temp = 255		1141300	0		=			
ANR	1141447	Identifier	temp		1141300	0					
ANR	1141448	PrimaryExpression	255		1141300	1					
ANR	1141449	IfStatement	if ( temp < 0 )		1141300	13					
ANR	1141450	Condition	temp < 0	204:20:7088:7095	1141300	0	True				
ANR	1141451	RelationalExpression	temp < 0		1141300	0		<			
ANR	1141452	Identifier	temp		1141300	0					
ANR	1141453	PrimaryExpression	0		1141300	1					
ANR	1141454	ExpressionStatement	temp = 0	204:30:7098:7106	1141300	1	True				
ANR	1141455	AssignmentExpression	temp = 0		1141300	0		=			
ANR	1141456	Identifier	temp		1141300	0					
ANR	1141457	PrimaryExpression	0		1141300	1					
ANR	1141458	ExpressionStatement	* curr_pos = ( byte ) temp	205:16:7124:7146	1141300	14	True				
ANR	1141459	AssignmentExpression	* curr_pos = ( byte ) temp		1141300	0		=			
ANR	1141460	UnaryOperationExpression	* curr_pos		1141300	0					
ANR	1141461	UnaryOperator	*		1141300	0					
ANR	1141462	Identifier	curr_pos		1141300	1					
ANR	1141463	CastExpression	( byte ) temp		1141300	1					
ANR	1141464	CastTarget	byte		1141300	0					
ANR	1141465	Identifier	temp		1141300	1					
ANR	1141466	Label	default :	206:12:7160:7167	1141300	15	True				
ANR	1141467	Identifier	default		1141300	0					
ANR	1141468	BreakStatement	break ;	207:16:7185:7190	1141300	16	True				
ANR	1141469	ExpressionStatement	curr_pos ++	209:12:7218:7228	1141300	1	True				
ANR	1141470	PostIncDecOperationExpression	curr_pos ++		1141300	0					
ANR	1141471	Identifier	curr_pos		1141300	0					
ANR	1141472	IncDec	++		1141300	1					
ANR	1141473	ExpressionStatement	psrc ++	210:12:7242:7248	1141300	2	True				
ANR	1141474	PostIncDecOperationExpression	psrc ++		1141300	0					
ANR	1141475	Identifier	psrc		1141300	0					
ANR	1141476	IncDec	++		1141300	1					
ANR	1141477	ReturnType	void		1141300	1					
ANR	1141478	Identifier	applymap8		1141300	2					
ANR	1141479	ParameterList	"sample_map map [ ] , const void * psrc_in , int spp , void * pdes , void * bufend"		1141300	3					
ANR	1141480	Parameter	sample_map map [ ]	179:15:6255:6270	1141300	0	True				
ANR	1141481	ParameterType	sample_map [ ]		1141300	0					
ANR	1141482	Identifier	map		1141300	1					
ANR	1141483	Parameter	const void * psrc_in	179:33:6273:6291	1141300	1	True				
ANR	1141484	ParameterType	const void *		1141300	0					
ANR	1141485	Identifier	psrc_in		1141300	1					
ANR	1141486	Parameter	int spp	179:54:6294:6300	1141300	2	True				
ANR	1141487	ParameterType	int		1141300	0					
ANR	1141488	Identifier	spp		1141300	1					
ANR	1141489	Parameter	void * pdes	179:63:6303:6312	1141300	3	True				
ANR	1141490	ParameterType	void *		1141300	0					
ANR	1141491	Identifier	pdes		1141300	1					
ANR	1141492	Parameter	void * bufend	180:4:6319:6330	1141300	4	True				
ANR	1141493	ParameterType	void *		1141300	0					
ANR	1141494	Identifier	bufend		1141300	1					
ANR	1141495	CFGEntryNode	ENTRY		1141300		True				
ANR	1141496	CFGExitNode	EXIT		1141300		True				
ANR	1141497	Symbol	psrc		1141300						
ANR	1141498	Symbol	* ( psrc ) * map [ k ] . decode_factor		1141300						
ANR	1141499	Symbol	* map [ k ] . decode_factor		1141300						
ANR	1141500	Symbol	* map		1141300						
ANR	1141501	Symbol	* psrc		1141300						
ANR	1141502	Symbol	curr_pos		1141300						
ANR	1141503	Symbol	map [ k ] . decode_base		1141300						
ANR	1141504	Symbol	bufend		1141300						
ANR	1141505	Symbol	pdes		1141300						
ANR	1141506	Symbol	map [ k ] . decode_factor		1141300						
ANR	1141507	Symbol	map [ k ] . decode_lookup		1141300						
ANR	1141508	Symbol	* * * map		1141300						
ANR	1141509	Symbol	* map [ k ] . decode_lookup		1141300						
ANR	1141510	Symbol	map		1141300						
ANR	1141511	Symbol	* curr_pos		1141300						
ANR	1141512	Symbol	* * k		1141300						
ANR	1141513	Symbol	temp		1141300						
ANR	1141514	Symbol	k		1141300						
ANR	1141515	Symbol	* * map [ k ] . decode_factor		1141300						
ANR	1141516	Symbol	* * map		1141300						
ANR	1141517	Symbol	spp		1141300						
ANR	1141518	Symbol	* k		1141300						
ANR	1141519	Symbol	* * * k		1141300						
ANR	1141520	Symbol	map [ k ] . decoding		1141300						
ANR	1141521	Symbol	* * psrc		1141300						
ANR	1141522	Symbol	psrc_in		1141300						
ANR	1141523	Function	applymap16	215:0:7269:8377							
ANR	1141524	FunctionDef	"applymap16 (sample_map map [ ] , const void * psrc_in , int spp , void * pdes , void * bufend)"		1141523	0					
ANR	1141525	CompoundStatement		217:0:7363:8377	1141523	0					
ANR	1141526	IdentifierDeclStatement	unsigned short * curr_pos = ( unsigned short * ) pdes ;	218:4:7369:7417	1141523	0	True				
ANR	1141527	IdentifierDecl	* curr_pos = ( unsigned short * ) pdes		1141523	0					
ANR	1141528	IdentifierDeclType	unsigned short *		1141523	0					
ANR	1141529	Identifier	curr_pos		1141523	1					
ANR	1141530	AssignmentExpression	* curr_pos = ( unsigned short * ) pdes		1141523	2		=			
ANR	1141531	Identifier	curr_pos		1141523	0					
ANR	1141532	CastExpression	( unsigned short * ) pdes		1141523	1					
ANR	1141533	CastTarget	unsigned short *		1141523	0					
ANR	1141534	Identifier	pdes		1141523	1					
ANR	1141535	IdentifierDeclStatement	unsigned short * psrc = ( unsigned short * ) psrc_in ;	219:4:7423:7470	1141523	1	True				
ANR	1141536	IdentifierDecl	* psrc = ( unsigned short * ) psrc_in		1141523	0					
ANR	1141537	IdentifierDeclType	unsigned short *		1141523	0					
ANR	1141538	Identifier	psrc		1141523	1					
ANR	1141539	AssignmentExpression	* psrc = ( unsigned short * ) psrc_in		1141523	2		=			
ANR	1141540	Identifier	psrc		1141523	0					
ANR	1141541	CastExpression	( unsigned short * ) psrc_in		1141523	1					
ANR	1141542	CastTarget	unsigned short *		1141523	0					
ANR	1141543	Identifier	psrc_in		1141523	1					
ANR	1141544	IdentifierDeclStatement	int k ;	220:4:7476:7481	1141523	2	True				
ANR	1141545	IdentifierDecl	k		1141523	0					
ANR	1141546	IdentifierDeclType	int		1141523	0					
ANR	1141547	Identifier	k		1141523	1					
ANR	1141548	IdentifierDeclStatement	float temp ;	221:4:7487:7497	1141523	3	True				
ANR	1141549	IdentifierDecl	temp		1141523	0					
ANR	1141550	IdentifierDeclType	float		1141523	0					
ANR	1141551	Identifier	temp		1141523	1					
ANR	1141552	WhileStatement	while ( curr_pos < ( unsigned short * ) bufend )		1141523	4					
ANR	1141553	Condition	curr_pos < ( unsigned short * ) bufend	223:11:7511:7545	1141523	0	True				
ANR	1141554	RelationalExpression	curr_pos < ( unsigned short * ) bufend		1141523	0		<			
ANR	1141555	Identifier	curr_pos		1141523	0					
ANR	1141556	CastExpression	( unsigned short * ) bufend		1141523	1					
ANR	1141557	CastTarget	unsigned short *		1141523	0					
ANR	1141558	Identifier	bufend		1141523	1					
ANR	1141559	CompoundStatement		7:48:184:184	1141523	1					
ANR	1141560	ForStatement	for ( k = 0 ; k < spp ; k ++ )		1141523	0					
ANR	1141561	ForInit	k = 0 ;	224:13:7563:7568	1141523	0	True				
ANR	1141562	AssignmentExpression	k = 0		1141523	0		=			
ANR	1141563	Identifier	k		1141523	0					
ANR	1141564	PrimaryExpression	0		1141523	1					
ANR	1141565	Condition	k < spp	224:20:7570:7576	1141523	1	True				
ANR	1141566	RelationalExpression	k < spp		1141523	0		<			
ANR	1141567	Identifier	k		1141523	0					
ANR	1141568	Identifier	spp		1141523	1					
ANR	1141569	PostIncDecOperationExpression	k ++	224:29:7579:7581	1141523	2	True				
ANR	1141570	Identifier	k		1141523	0					
ANR	1141571	IncDec	++		1141523	1					
ANR	1141572	CompoundStatement		8:34:220:220	1141523	3					
ANR	1141573	SwitchStatement	switch ( map [ k ] . decoding )		1141523	0					
ANR	1141574	Condition	map [ k ] . decoding	225:20:7606:7620	1141523	0	True				
ANR	1141575	MemberAccess	map [ k ] . decoding		1141523	0					
ANR	1141576	ArrayIndexing	map [ k ]		1141523	0					
ANR	1141577	Identifier	map		1141523	0					
ANR	1141578	Identifier	k		1141523	1					
ANR	1141579	Identifier	decoding		1141523	1					
ANR	1141580	CompoundStatement		9:37:259:259	1141523	1					
ANR	1141581	Label	case sd_none :	226:12:7637:7649	1141523	0	True				
ANR	1141582	Identifier	sd_none		1141523	0					
ANR	1141583	ExpressionStatement	* curr_pos = * psrc	227:16:7667:7684	1141523	1	True				
ANR	1141584	AssignmentExpression	* curr_pos = * psrc		1141523	0		=			
ANR	1141585	UnaryOperationExpression	* curr_pos		1141523	0					
ANR	1141586	UnaryOperator	*		1141523	0					
ANR	1141587	Identifier	curr_pos		1141523	1					
ANR	1141588	UnaryOperationExpression	* psrc		1141523	1					
ANR	1141589	UnaryOperator	*		1141523	0					
ANR	1141590	Identifier	psrc		1141523	1					
ANR	1141591	BreakStatement	break ;	228:16:7702:7707	1141523	2	True				
ANR	1141592	Label	case sd_lookup :	229:12:7721:7735	1141523	3	True				
ANR	1141593	Identifier	sd_lookup		1141523	0					
ANR	1141594	ExpressionStatement	temp = map [ k ] . decode_lookup [ * ( psrc ) >> 4 ] * 65535.0	230:16:7753:7804	1141523	4	True				
ANR	1141595	AssignmentExpression	temp = map [ k ] . decode_lookup [ * ( psrc ) >> 4 ] * 65535.0		1141523	0		=			
ANR	1141596	Identifier	temp		1141523	0					
ANR	1141597	MultiplicativeExpression	map [ k ] . decode_lookup [ * ( psrc ) >> 4 ] * 65535.0		1141523	1		*			
ANR	1141598	ArrayIndexing	map [ k ] . decode_lookup [ * ( psrc ) >> 4 ]		1141523	0					
ANR	1141599	MemberAccess	map [ k ] . decode_lookup		1141523	0					
ANR	1141600	ArrayIndexing	map [ k ]		1141523	0					
ANR	1141601	Identifier	map		1141523	0					
ANR	1141602	Identifier	k		1141523	1					
ANR	1141603	Identifier	decode_lookup		1141523	1					
ANR	1141604	ShiftExpression	* ( psrc ) >> 4		1141523	1		>>			
ANR	1141605	UnaryOperationExpression	* ( psrc )		1141523	0					
ANR	1141606	UnaryOperator	*		1141523	0					
ANR	1141607	Identifier	psrc		1141523	1					
ANR	1141608	PrimaryExpression	4		1141523	1					
ANR	1141609	PrimaryExpression	65535.0		1141523	1					
ANR	1141610	IfStatement	if ( temp > 65535 )		1141523	5					
ANR	1141611	Condition	temp > 65535	231:20:7826:7837	1141523	0	True				
ANR	1141612	RelationalExpression	temp > 65535		1141523	0		>			
ANR	1141613	Identifier	temp		1141523	0					
ANR	1141614	PrimaryExpression	65535		1141523	1					
ANR	1141615	ExpressionStatement	temp = 65535	231:34:7840:7852	1141523	1	True				
ANR	1141616	AssignmentExpression	temp = 65535		1141523	0		=			
ANR	1141617	Identifier	temp		1141523	0					
ANR	1141618	PrimaryExpression	65535		1141523	1					
ANR	1141619	IfStatement	if ( temp < 0 )		1141523	6					
ANR	1141620	Condition	temp < 0	232:20:7874:7881	1141523	0	True				
ANR	1141621	RelationalExpression	temp < 0		1141523	0		<			
ANR	1141622	Identifier	temp		1141523	0					
ANR	1141623	PrimaryExpression	0		1141523	1					
ANR	1141624	ExpressionStatement	temp = 0	232:30:7884:7892	1141523	1	True				
ANR	1141625	AssignmentExpression	temp = 0		1141523	0		=			
ANR	1141626	Identifier	temp		1141523	0					
ANR	1141627	PrimaryExpression	0		1141523	1					
ANR	1141628	ExpressionStatement	* curr_pos = ( unsigned short ) temp	233:16:7910:7942	1141523	7	True				
ANR	1141629	AssignmentExpression	* curr_pos = ( unsigned short ) temp		1141523	0		=			
ANR	1141630	UnaryOperationExpression	* curr_pos		1141523	0					
ANR	1141631	UnaryOperator	*		1141523	0					
ANR	1141632	Identifier	curr_pos		1141523	1					
ANR	1141633	CastExpression	( unsigned short ) temp		1141523	1					
ANR	1141634	CastTarget	unsigned short		1141523	0					
ANR	1141635	Identifier	temp		1141523	1					
ANR	1141636	BreakStatement	break ;	234:16:7960:7965	1141523	8	True				
ANR	1141637	Label	case sd_compute :	235:12:7979:7994	1141523	9	True				
ANR	1141638	Identifier	sd_compute		1141523	0					
ANR	1141639	ExpressionStatement	temp = map [ k ] . decode_base + * psrc * map [ k ] . decode_factor	236:16:8012:8088	1141523	10	True				
ANR	1141640	AssignmentExpression	temp = map [ k ] . decode_base + * psrc * map [ k ] . decode_factor		1141523	0		=			
ANR	1141641	Identifier	temp		1141523	0					
ANR	1141642	AdditiveExpression	map [ k ] . decode_base + * psrc * map [ k ] . decode_factor		1141523	1		+			
ANR	1141643	MemberAccess	map [ k ] . decode_base		1141523	0					
ANR	1141644	ArrayIndexing	map [ k ]		1141523	0					
ANR	1141645	Identifier	map		1141523	0					
ANR	1141646	Identifier	k		1141523	1					
ANR	1141647	Identifier	decode_base		1141523	1					
ANR	1141648	MultiplicativeExpression	* psrc * map [ k ] . decode_factor		1141523	1		*			
ANR	1141649	UnaryOperationExpression	* psrc		1141523	0					
ANR	1141650	UnaryOperator	*		1141523	0					
ANR	1141651	Identifier	psrc		1141523	1					
ANR	1141652	MemberAccess	map [ k ] . decode_factor		1141523	1					
ANR	1141653	ArrayIndexing	map [ k ]		1141523	0					
ANR	1141654	Identifier	map		1141523	0					
ANR	1141655	Identifier	k		1141523	1					
ANR	1141656	Identifier	decode_factor		1141523	1					
ANR	1141657	ExpressionStatement	temp *= 65535	238:16:8106:8119	1141523	11	True				
ANR	1141658	AssignmentExpression	temp *= 65535		1141523	0		*=			
ANR	1141659	Identifier	temp		1141523	0					
ANR	1141660	PrimaryExpression	65535		1141523	1					
ANR	1141661	IfStatement	if ( temp > 65535 )		1141523	12					
ANR	1141662	Condition	temp > 65535	239:20:8141:8152	1141523	0	True				
ANR	1141663	RelationalExpression	temp > 65535		1141523	0		>			
ANR	1141664	Identifier	temp		1141523	0					
ANR	1141665	PrimaryExpression	65535		1141523	1					
ANR	1141666	ExpressionStatement	temp = 65535	239:34:8155:8167	1141523	1	True				
ANR	1141667	AssignmentExpression	temp = 65535		1141523	0		=			
ANR	1141668	Identifier	temp		1141523	0					
ANR	1141669	PrimaryExpression	65535		1141523	1					
ANR	1141670	IfStatement	if ( temp < 0 )		1141523	13					
ANR	1141671	Condition	temp < 0	240:20:8189:8196	1141523	0	True				
ANR	1141672	RelationalExpression	temp < 0		1141523	0		<			
ANR	1141673	Identifier	temp		1141523	0					
ANR	1141674	PrimaryExpression	0		1141523	1					
ANR	1141675	ExpressionStatement	temp = 0	240:30:8199:8207	1141523	1	True				
ANR	1141676	AssignmentExpression	temp = 0		1141523	0		=			
ANR	1141677	Identifier	temp		1141523	0					
ANR	1141678	PrimaryExpression	0		1141523	1					
ANR	1141679	ExpressionStatement	* curr_pos = ( unsigned short ) temp	241:16:8225:8257	1141523	14	True				
ANR	1141680	AssignmentExpression	* curr_pos = ( unsigned short ) temp		1141523	0		=			
ANR	1141681	UnaryOperationExpression	* curr_pos		1141523	0					
ANR	1141682	UnaryOperator	*		1141523	0					
ANR	1141683	Identifier	curr_pos		1141523	1					
ANR	1141684	CastExpression	( unsigned short ) temp		1141523	1					
ANR	1141685	CastTarget	unsigned short		1141523	0					
ANR	1141686	Identifier	temp		1141523	1					
ANR	1141687	Label	default :	242:12:8271:8278	1141523	15	True				
ANR	1141688	Identifier	default		1141523	0					
ANR	1141689	BreakStatement	break ;	243:16:8296:8301	1141523	16	True				
ANR	1141690	ExpressionStatement	curr_pos ++	245:12:8329:8339	1141523	1	True				
ANR	1141691	PostIncDecOperationExpression	curr_pos ++		1141523	0					
ANR	1141692	Identifier	curr_pos		1141523	0					
ANR	1141693	IncDec	++		1141523	1					
ANR	1141694	ExpressionStatement	psrc ++	246:12:8353:8359	1141523	2	True				
ANR	1141695	PostIncDecOperationExpression	psrc ++		1141523	0					
ANR	1141696	Identifier	psrc		1141523	0					
ANR	1141697	IncDec	++		1141523	1					
ANR	1141698	ReturnType	void		1141523	1					
ANR	1141699	Identifier	applymap16		1141523	2					
ANR	1141700	ParameterList	"sample_map map [ ] , const void * psrc_in , int spp , void * pdes , void * bufend"		1141523	3					
ANR	1141701	Parameter	sample_map map [ ]	215:16:7285:7300	1141523	0	True				
ANR	1141702	ParameterType	sample_map [ ]		1141523	0					
ANR	1141703	Identifier	map		1141523	1					
ANR	1141704	Parameter	const void * psrc_in	215:34:7303:7321	1141523	1	True				
ANR	1141705	ParameterType	const void *		1141523	0					
ANR	1141706	Identifier	psrc_in		1141523	1					
ANR	1141707	Parameter	int spp	215:55:7324:7330	1141523	2	True				
ANR	1141708	ParameterType	int		1141523	0					
ANR	1141709	Identifier	spp		1141523	1					
ANR	1141710	Parameter	void * pdes	215:64:7333:7342	1141523	3	True				
ANR	1141711	ParameterType	void *		1141523	0					
ANR	1141712	Identifier	pdes		1141523	1					
ANR	1141713	Parameter	void * bufend	216:4:7349:7360	1141523	4	True				
ANR	1141714	ParameterType	void *		1141523	0					
ANR	1141715	Identifier	bufend		1141523	1					
ANR	1141716	CFGEntryNode	ENTRY		1141523		True				
ANR	1141717	CFGExitNode	EXIT		1141523		True				
ANR	1141718	Symbol	psrc		1141523						
ANR	1141719	Symbol	* * k		1141523						
ANR	1141720	Symbol	temp		1141523						
ANR	1141721	Symbol	* map		1141523						
ANR	1141722	Symbol	* psrc		1141523						
ANR	1141723	Symbol	k		1141523						
ANR	1141724	Symbol	curr_pos		1141523						
ANR	1141725	Symbol	map [ k ] . decode_base		1141523						
ANR	1141726	Symbol	* * map		1141523						
ANR	1141727	Symbol	spp		1141523						
ANR	1141728	Symbol	* ( psrc )		1141523						
ANR	1141729	Symbol	bufend		1141523						
ANR	1141730	Symbol	* k		1141523						
ANR	1141731	Symbol	* * ( psrc )		1141523						
ANR	1141732	Symbol	pdes		1141523						
ANR	1141733	Symbol	map [ k ] . decode_factor		1141523						
ANR	1141734	Symbol	map [ k ] . decoding		1141523						
ANR	1141735	Symbol	map [ k ] . decode_lookup		1141523						
ANR	1141736	Symbol	* map [ k ] . decode_lookup		1141523						
ANR	1141737	Symbol	* * psrc		1141523						
ANR	1141738	Symbol	psrc_in		1141523						
ANR	1141739	Symbol	map		1141523						
ANR	1141740	Symbol	* curr_pos		1141523						
