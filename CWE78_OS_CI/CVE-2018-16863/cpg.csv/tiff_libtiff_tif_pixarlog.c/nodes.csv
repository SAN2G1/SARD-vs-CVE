command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10170808	File	data/converged/CVE-2018-16863_ghostpdl/tiff_libtiff_tif_pixarlog.c								
ANR	10170809	DeclStmt									
ANR	10170810	Decl							int	int	i
ANR	10170811	Function	horizontalAccumulateF	110:0:4901:6330							
ANR	10170812	FunctionDef	"horizontalAccumulateF (uint16 * wp , int n , int stride , float * op , float * ToLinearF)"		10170811	0					
ANR	10170813	CompoundStatement		113:0:4996:6330	10170811	0					
ANR	10170814	Statement	register	114:4:5002:5009	10170811	0	True				
ANR	10170815	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	114:13:5011:5045	10170811	1	True				
ANR	10170816	IdentifierDecl	cr		10170811	0					
ANR	10170817	IdentifierDeclType	unsigned int		10170811	0					
ANR	10170818	Identifier	cr		10170811	1					
ANR	10170819	IdentifierDecl	cg		10170811	1					
ANR	10170820	IdentifierDeclType	unsigned int		10170811	0					
ANR	10170821	Identifier	cg		10170811	1					
ANR	10170822	IdentifierDecl	cb		10170811	2					
ANR	10170823	IdentifierDeclType	unsigned int		10170811	0					
ANR	10170824	Identifier	cb		10170811	1					
ANR	10170825	IdentifierDecl	ca		10170811	3					
ANR	10170826	IdentifierDeclType	unsigned int		10170811	0					
ANR	10170827	Identifier	ca		10170811	1					
ANR	10170828	IdentifierDecl	mask		10170811	4					
ANR	10170829	IdentifierDeclType	unsigned int		10170811	0					
ANR	10170830	Identifier	mask		10170811	1					
ANR	10170831	Statement	register	115:4:5051:5058	10170811	2	True				
ANR	10170832	IdentifierDeclStatement	"float t0 , t1 , t2 , t3 ;"	115:13:5060:5081	10170811	3	True				
ANR	10170833	IdentifierDecl	t0		10170811	0					
ANR	10170834	IdentifierDeclType	float		10170811	0					
ANR	10170835	Identifier	t0		10170811	1					
ANR	10170836	IdentifierDecl	t1		10170811	1					
ANR	10170837	IdentifierDeclType	float		10170811	0					
ANR	10170838	Identifier	t1		10170811	1					
ANR	10170839	IdentifierDecl	t2		10170811	2					
ANR	10170840	IdentifierDeclType	float		10170811	0					
ANR	10170841	Identifier	t2		10170811	1					
ANR	10170842	IdentifierDecl	t3		10170811	3					
ANR	10170843	IdentifierDeclType	float		10170811	0					
ANR	10170844	Identifier	t3		10170811	1					
ANR	10170845	IfStatement	if ( n >= stride )		10170811	4					
ANR	10170846	Condition	n >= stride	117:8:5092:5102	10170811	0	True				
ANR	10170847	RelationalExpression	n >= stride		10170811	0		>=			
ANR	10170848	Identifier	n		10170811	0					
ANR	10170849	Identifier	stride		10170811	1					
ANR	10170850	CompoundStatement		5:21:108:108	10170811	1					
ANR	10170851	ExpressionStatement	mask = CODE_MASK	118:1:5108:5124	10170811	0	True				
ANR	10170852	AssignmentExpression	mask = CODE_MASK		10170811	0		=			
ANR	10170853	Identifier	mask		10170811	0					
ANR	10170854	Identifier	CODE_MASK		10170811	1					
ANR	10170855	IfStatement	if ( stride == 3 )		10170811	1					
ANR	10170856	Condition	stride == 3	119:5:5131:5141	10170811	0	True				
ANR	10170857	EqualityExpression	stride == 3		10170811	0		==			
ANR	10170858	Identifier	stride		10170811	0					
ANR	10170859	PrimaryExpression	3		10170811	1					
ANR	10170860	CompoundStatement		7:18:147:147	10170811	1					
ANR	10170861	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]	120:5:5151:5186	10170811	0	True				
ANR	10170862	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		10170811	0		=			
ANR	10170863	Identifier	t0		10170811	0					
ANR	10170864	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		10170811	1					
ANR	10170865	Identifier	ToLinearF		10170811	0					
ANR	10170866	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10170811	1		=			
ANR	10170867	Identifier	cr		10170811	0					
ANR	10170868	BitAndExpression	wp [ 0 ] & mask		10170811	1		&			
ANR	10170869	ArrayIndexing	wp [ 0 ]		10170811	0					
ANR	10170870	Identifier	wp		10170811	0					
ANR	10170871	PrimaryExpression	0		10170811	1					
ANR	10170872	Identifier	mask		10170811	1					
ANR	10170873	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]	121:5:5193:5228	10170811	1	True				
ANR	10170874	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		10170811	0		=			
ANR	10170875	Identifier	t1		10170811	0					
ANR	10170876	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		10170811	1					
ANR	10170877	Identifier	ToLinearF		10170811	0					
ANR	10170878	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10170811	1		=			
ANR	10170879	Identifier	cg		10170811	0					
ANR	10170880	BitAndExpression	wp [ 1 ] & mask		10170811	1		&			
ANR	10170881	ArrayIndexing	wp [ 1 ]		10170811	0					
ANR	10170882	Identifier	wp		10170811	0					
ANR	10170883	PrimaryExpression	1		10170811	1					
ANR	10170884	Identifier	mask		10170811	1					
ANR	10170885	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]	122:5:5235:5270	10170811	2	True				
ANR	10170886	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		10170811	0		=			
ANR	10170887	Identifier	t2		10170811	0					
ANR	10170888	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		10170811	1					
ANR	10170889	Identifier	ToLinearF		10170811	0					
ANR	10170890	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10170811	1		=			
ANR	10170891	Identifier	cb		10170811	0					
ANR	10170892	BitAndExpression	wp [ 2 ] & mask		10170811	1		&			
ANR	10170893	ArrayIndexing	wp [ 2 ]		10170811	0					
ANR	10170894	Identifier	wp		10170811	0					
ANR	10170895	PrimaryExpression	2		10170811	1					
ANR	10170896	Identifier	mask		10170811	1					
ANR	10170897	ExpressionStatement	op [ 0 ] = t0	123:5:5277:5287	10170811	3	True				
ANR	10170898	AssignmentExpression	op [ 0 ] = t0		10170811	0		=			
ANR	10170899	ArrayIndexing	op [ 0 ]		10170811	0					
ANR	10170900	Identifier	op		10170811	0					
ANR	10170901	PrimaryExpression	0		10170811	1					
ANR	10170902	Identifier	t0		10170811	1					
ANR	10170903	ExpressionStatement	op [ 1 ] = t1	124:5:5294:5304	10170811	4	True				
ANR	10170904	AssignmentExpression	op [ 1 ] = t1		10170811	0		=			
ANR	10170905	ArrayIndexing	op [ 1 ]		10170811	0					
ANR	10170906	Identifier	op		10170811	0					
ANR	10170907	PrimaryExpression	1		10170811	1					
ANR	10170908	Identifier	t1		10170811	1					
ANR	10170909	ExpressionStatement	op [ 2 ] = t2	125:5:5311:5321	10170811	5	True				
ANR	10170910	AssignmentExpression	op [ 2 ] = t2		10170811	0		=			
ANR	10170911	ArrayIndexing	op [ 2 ]		10170811	0					
ANR	10170912	Identifier	op		10170811	0					
ANR	10170913	PrimaryExpression	2		10170811	1					
ANR	10170914	Identifier	t2		10170811	1					
ANR	10170915	ExpressionStatement	n -= 3	126:5:5328:5334	10170811	6	True				
ANR	10170916	AssignmentExpression	n -= 3		10170811	0		-=			
ANR	10170917	Identifier	n		10170811	0					
ANR	10170918	PrimaryExpression	3		10170811	1					
ANR	10170919	WhileStatement	while ( n > 0 )		10170811	7					
ANR	10170920	Condition	n > 0	127:12:5348:5352	10170811	0	True				
ANR	10170921	RelationalExpression	n > 0		10170811	0		>			
ANR	10170922	Identifier	n		10170811	0					
ANR	10170923	PrimaryExpression	0		10170811	1					
ANR	10170924	CompoundStatement		15:19:358:358	10170811	1					
ANR	10170925	ExpressionStatement	wp += 3	128:2:5359:5366	10170811	0	True				
ANR	10170926	AssignmentExpression	wp += 3		10170811	0		+=			
ANR	10170927	Identifier	wp		10170811	0					
ANR	10170928	PrimaryExpression	3		10170811	1					
ANR	10170929	ExpressionStatement	op += 3	129:2:5370:5377	10170811	1	True				
ANR	10170930	AssignmentExpression	op += 3		10170811	0		+=			
ANR	10170931	Identifier	op		10170811	0					
ANR	10170932	PrimaryExpression	3		10170811	1					
ANR	10170933	ExpressionStatement	n -= 3	130:2:5381:5387	10170811	2	True				
ANR	10170934	AssignmentExpression	n -= 3		10170811	0		-=			
ANR	10170935	Identifier	n		10170811	0					
ANR	10170936	PrimaryExpression	3		10170811	1					
ANR	10170937	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]	131:2:5391:5427	10170811	3	True				
ANR	10170938	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		10170811	0		=			
ANR	10170939	Identifier	t0		10170811	0					
ANR	10170940	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		10170811	1					
ANR	10170941	Identifier	ToLinearF		10170811	0					
ANR	10170942	BitAndExpression	( cr += wp [ 0 ] ) & mask		10170811	1		&			
ANR	10170943	AssignmentExpression	cr += wp [ 0 ]		10170811	0		+=			
ANR	10170944	Identifier	cr		10170811	0					
ANR	10170945	ArrayIndexing	wp [ 0 ]		10170811	1					
ANR	10170946	Identifier	wp		10170811	0					
ANR	10170947	PrimaryExpression	0		10170811	1					
ANR	10170948	Identifier	mask		10170811	1					
ANR	10170949	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]	132:2:5431:5467	10170811	4	True				
ANR	10170950	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		10170811	0		=			
ANR	10170951	Identifier	t1		10170811	0					
ANR	10170952	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		10170811	1					
ANR	10170953	Identifier	ToLinearF		10170811	0					
ANR	10170954	BitAndExpression	( cg += wp [ 1 ] ) & mask		10170811	1		&			
ANR	10170955	AssignmentExpression	cg += wp [ 1 ]		10170811	0		+=			
ANR	10170956	Identifier	cg		10170811	0					
ANR	10170957	ArrayIndexing	wp [ 1 ]		10170811	1					
ANR	10170958	Identifier	wp		10170811	0					
ANR	10170959	PrimaryExpression	1		10170811	1					
ANR	10170960	Identifier	mask		10170811	1					
ANR	10170961	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]	133:2:5471:5507	10170811	5	True				
ANR	10170962	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		10170811	0		=			
ANR	10170963	Identifier	t2		10170811	0					
ANR	10170964	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		10170811	1					
ANR	10170965	Identifier	ToLinearF		10170811	0					
ANR	10170966	BitAndExpression	( cb += wp [ 2 ] ) & mask		10170811	1		&			
ANR	10170967	AssignmentExpression	cb += wp [ 2 ]		10170811	0		+=			
ANR	10170968	Identifier	cb		10170811	0					
ANR	10170969	ArrayIndexing	wp [ 2 ]		10170811	1					
ANR	10170970	Identifier	wp		10170811	0					
ANR	10170971	PrimaryExpression	2		10170811	1					
ANR	10170972	Identifier	mask		10170811	1					
ANR	10170973	ExpressionStatement	op [ 0 ] = t0	134:2:5511:5521	10170811	6	True				
ANR	10170974	AssignmentExpression	op [ 0 ] = t0		10170811	0		=			
ANR	10170975	ArrayIndexing	op [ 0 ]		10170811	0					
ANR	10170976	Identifier	op		10170811	0					
ANR	10170977	PrimaryExpression	0		10170811	1					
ANR	10170978	Identifier	t0		10170811	1					
ANR	10170979	ExpressionStatement	op [ 1 ] = t1	135:2:5525:5535	10170811	7	True				
ANR	10170980	AssignmentExpression	op [ 1 ] = t1		10170811	0		=			
ANR	10170981	ArrayIndexing	op [ 1 ]		10170811	0					
ANR	10170982	Identifier	op		10170811	0					
ANR	10170983	PrimaryExpression	1		10170811	1					
ANR	10170984	Identifier	t1		10170811	1					
ANR	10170985	ExpressionStatement	op [ 2 ] = t2	136:2:5539:5549	10170811	8	True				
ANR	10170986	AssignmentExpression	op [ 2 ] = t2		10170811	0		=			
ANR	10170987	ArrayIndexing	op [ 2 ]		10170811	0					
ANR	10170988	Identifier	op		10170811	0					
ANR	10170989	PrimaryExpression	2		10170811	1					
ANR	10170990	Identifier	t2		10170811	1					
ANR	10170991	ElseStatement	else		10170811	0					
ANR	10170992	IfStatement	if ( stride == 4 )		10170811	0					
ANR	10170993	Condition	stride == 4	138:12:5570:5580	10170811	0	True				
ANR	10170994	EqualityExpression	stride == 4		10170811	0		==			
ANR	10170995	Identifier	stride		10170811	0					
ANR	10170996	PrimaryExpression	4		10170811	1					
ANR	10170997	CompoundStatement		26:25:586:586	10170811	1					
ANR	10170998	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]	139:5:5590:5625	10170811	0	True				
ANR	10170999	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		10170811	0		=			
ANR	10171000	Identifier	t0		10170811	0					
ANR	10171001	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		10170811	1					
ANR	10171002	Identifier	ToLinearF		10170811	0					
ANR	10171003	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10170811	1		=			
ANR	10171004	Identifier	cr		10170811	0					
ANR	10171005	BitAndExpression	wp [ 0 ] & mask		10170811	1		&			
ANR	10171006	ArrayIndexing	wp [ 0 ]		10170811	0					
ANR	10171007	Identifier	wp		10170811	0					
ANR	10171008	PrimaryExpression	0		10170811	1					
ANR	10171009	Identifier	mask		10170811	1					
ANR	10171010	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]	140:5:5632:5667	10170811	1	True				
ANR	10171011	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		10170811	0		=			
ANR	10171012	Identifier	t1		10170811	0					
ANR	10171013	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		10170811	1					
ANR	10171014	Identifier	ToLinearF		10170811	0					
ANR	10171015	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10170811	1		=			
ANR	10171016	Identifier	cg		10170811	0					
ANR	10171017	BitAndExpression	wp [ 1 ] & mask		10170811	1		&			
ANR	10171018	ArrayIndexing	wp [ 1 ]		10170811	0					
ANR	10171019	Identifier	wp		10170811	0					
ANR	10171020	PrimaryExpression	1		10170811	1					
ANR	10171021	Identifier	mask		10170811	1					
ANR	10171022	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]	141:5:5674:5709	10170811	2	True				
ANR	10171023	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		10170811	0		=			
ANR	10171024	Identifier	t2		10170811	0					
ANR	10171025	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		10170811	1					
ANR	10171026	Identifier	ToLinearF		10170811	0					
ANR	10171027	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10170811	1		=			
ANR	10171028	Identifier	cb		10170811	0					
ANR	10171029	BitAndExpression	wp [ 2 ] & mask		10170811	1		&			
ANR	10171030	ArrayIndexing	wp [ 2 ]		10170811	0					
ANR	10171031	Identifier	wp		10170811	0					
ANR	10171032	PrimaryExpression	2		10170811	1					
ANR	10171033	Identifier	mask		10170811	1					
ANR	10171034	ExpressionStatement	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ]	142:5:5716:5751	10170811	3	True				
ANR	10171035	AssignmentExpression	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ]		10170811	0		=			
ANR	10171036	Identifier	t3		10170811	0					
ANR	10171037	ArrayIndexing	ToLinearF [ ca = ( wp [ 3 ] & mask ) ]		10170811	1					
ANR	10171038	Identifier	ToLinearF		10170811	0					
ANR	10171039	AssignmentExpression	ca = ( wp [ 3 ] & mask )		10170811	1		=			
ANR	10171040	Identifier	ca		10170811	0					
ANR	10171041	BitAndExpression	wp [ 3 ] & mask		10170811	1		&			
ANR	10171042	ArrayIndexing	wp [ 3 ]		10170811	0					
ANR	10171043	Identifier	wp		10170811	0					
ANR	10171044	PrimaryExpression	3		10170811	1					
ANR	10171045	Identifier	mask		10170811	1					
ANR	10171046	ExpressionStatement	op [ 0 ] = t0	143:5:5758:5768	10170811	4	True				
ANR	10171047	AssignmentExpression	op [ 0 ] = t0		10170811	0		=			
ANR	10171048	ArrayIndexing	op [ 0 ]		10170811	0					
ANR	10171049	Identifier	op		10170811	0					
ANR	10171050	PrimaryExpression	0		10170811	1					
ANR	10171051	Identifier	t0		10170811	1					
ANR	10171052	ExpressionStatement	op [ 1 ] = t1	144:5:5775:5785	10170811	5	True				
ANR	10171053	AssignmentExpression	op [ 1 ] = t1		10170811	0		=			
ANR	10171054	ArrayIndexing	op [ 1 ]		10170811	0					
ANR	10171055	Identifier	op		10170811	0					
ANR	10171056	PrimaryExpression	1		10170811	1					
ANR	10171057	Identifier	t1		10170811	1					
ANR	10171058	ExpressionStatement	op [ 2 ] = t2	145:5:5792:5802	10170811	6	True				
ANR	10171059	AssignmentExpression	op [ 2 ] = t2		10170811	0		=			
ANR	10171060	ArrayIndexing	op [ 2 ]		10170811	0					
ANR	10171061	Identifier	op		10170811	0					
ANR	10171062	PrimaryExpression	2		10170811	1					
ANR	10171063	Identifier	t2		10170811	1					
ANR	10171064	ExpressionStatement	op [ 3 ] = t3	146:5:5809:5819	10170811	7	True				
ANR	10171065	AssignmentExpression	op [ 3 ] = t3		10170811	0		=			
ANR	10171066	ArrayIndexing	op [ 3 ]		10170811	0					
ANR	10171067	Identifier	op		10170811	0					
ANR	10171068	PrimaryExpression	3		10170811	1					
ANR	10171069	Identifier	t3		10170811	1					
ANR	10171070	ExpressionStatement	n -= 4	147:5:5826:5832	10170811	8	True				
ANR	10171071	AssignmentExpression	n -= 4		10170811	0		-=			
ANR	10171072	Identifier	n		10170811	0					
ANR	10171073	PrimaryExpression	4		10170811	1					
ANR	10171074	WhileStatement	while ( n > 0 )		10170811	9					
ANR	10171075	Condition	n > 0	148:12:5846:5850	10170811	0	True				
ANR	10171076	RelationalExpression	n > 0		10170811	0		>			
ANR	10171077	Identifier	n		10170811	0					
ANR	10171078	PrimaryExpression	0		10170811	1					
ANR	10171079	CompoundStatement		36:19:856:856	10170811	1					
ANR	10171080	ExpressionStatement	wp += 4	149:2:5857:5864	10170811	0	True				
ANR	10171081	AssignmentExpression	wp += 4		10170811	0		+=			
ANR	10171082	Identifier	wp		10170811	0					
ANR	10171083	PrimaryExpression	4		10170811	1					
ANR	10171084	ExpressionStatement	op += 4	150:2:5868:5875	10170811	1	True				
ANR	10171085	AssignmentExpression	op += 4		10170811	0		+=			
ANR	10171086	Identifier	op		10170811	0					
ANR	10171087	PrimaryExpression	4		10170811	1					
ANR	10171088	ExpressionStatement	n -= 4	151:2:5879:5885	10170811	2	True				
ANR	10171089	AssignmentExpression	n -= 4		10170811	0		-=			
ANR	10171090	Identifier	n		10170811	0					
ANR	10171091	PrimaryExpression	4		10170811	1					
ANR	10171092	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]	152:2:5889:5925	10170811	3	True				
ANR	10171093	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		10170811	0		=			
ANR	10171094	Identifier	t0		10170811	0					
ANR	10171095	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		10170811	1					
ANR	10171096	Identifier	ToLinearF		10170811	0					
ANR	10171097	BitAndExpression	( cr += wp [ 0 ] ) & mask		10170811	1		&			
ANR	10171098	AssignmentExpression	cr += wp [ 0 ]		10170811	0		+=			
ANR	10171099	Identifier	cr		10170811	0					
ANR	10171100	ArrayIndexing	wp [ 0 ]		10170811	1					
ANR	10171101	Identifier	wp		10170811	0					
ANR	10171102	PrimaryExpression	0		10170811	1					
ANR	10171103	Identifier	mask		10170811	1					
ANR	10171104	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]	153:2:5929:5965	10170811	4	True				
ANR	10171105	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		10170811	0		=			
ANR	10171106	Identifier	t1		10170811	0					
ANR	10171107	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		10170811	1					
ANR	10171108	Identifier	ToLinearF		10170811	0					
ANR	10171109	BitAndExpression	( cg += wp [ 1 ] ) & mask		10170811	1		&			
ANR	10171110	AssignmentExpression	cg += wp [ 1 ]		10170811	0		+=			
ANR	10171111	Identifier	cg		10170811	0					
ANR	10171112	ArrayIndexing	wp [ 1 ]		10170811	1					
ANR	10171113	Identifier	wp		10170811	0					
ANR	10171114	PrimaryExpression	1		10170811	1					
ANR	10171115	Identifier	mask		10170811	1					
ANR	10171116	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]	154:2:5969:6005	10170811	5	True				
ANR	10171117	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		10170811	0		=			
ANR	10171118	Identifier	t2		10170811	0					
ANR	10171119	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		10170811	1					
ANR	10171120	Identifier	ToLinearF		10170811	0					
ANR	10171121	BitAndExpression	( cb += wp [ 2 ] ) & mask		10170811	1		&			
ANR	10171122	AssignmentExpression	cb += wp [ 2 ]		10170811	0		+=			
ANR	10171123	Identifier	cb		10170811	0					
ANR	10171124	ArrayIndexing	wp [ 2 ]		10170811	1					
ANR	10171125	Identifier	wp		10170811	0					
ANR	10171126	PrimaryExpression	2		10170811	1					
ANR	10171127	Identifier	mask		10170811	1					
ANR	10171128	ExpressionStatement	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ]	155:2:6009:6045	10170811	6	True				
ANR	10171129	AssignmentExpression	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ]		10170811	0		=			
ANR	10171130	Identifier	t3		10170811	0					
ANR	10171131	ArrayIndexing	ToLinearF [ ( ca += wp [ 3 ] ) & mask ]		10170811	1					
ANR	10171132	Identifier	ToLinearF		10170811	0					
ANR	10171133	BitAndExpression	( ca += wp [ 3 ] ) & mask		10170811	1		&			
ANR	10171134	AssignmentExpression	ca += wp [ 3 ]		10170811	0		+=			
ANR	10171135	Identifier	ca		10170811	0					
ANR	10171136	ArrayIndexing	wp [ 3 ]		10170811	1					
ANR	10171137	Identifier	wp		10170811	0					
ANR	10171138	PrimaryExpression	3		10170811	1					
ANR	10171139	Identifier	mask		10170811	1					
ANR	10171140	ExpressionStatement	op [ 0 ] = t0	156:2:6049:6059	10170811	7	True				
ANR	10171141	AssignmentExpression	op [ 0 ] = t0		10170811	0		=			
ANR	10171142	ArrayIndexing	op [ 0 ]		10170811	0					
ANR	10171143	Identifier	op		10170811	0					
ANR	10171144	PrimaryExpression	0		10170811	1					
ANR	10171145	Identifier	t0		10170811	1					
ANR	10171146	ExpressionStatement	op [ 1 ] = t1	157:2:6063:6073	10170811	8	True				
ANR	10171147	AssignmentExpression	op [ 1 ] = t1		10170811	0		=			
ANR	10171148	ArrayIndexing	op [ 1 ]		10170811	0					
ANR	10171149	Identifier	op		10170811	0					
ANR	10171150	PrimaryExpression	1		10170811	1					
ANR	10171151	Identifier	t1		10170811	1					
ANR	10171152	ExpressionStatement	op [ 2 ] = t2	158:2:6077:6087	10170811	9	True				
ANR	10171153	AssignmentExpression	op [ 2 ] = t2		10170811	0		=			
ANR	10171154	ArrayIndexing	op [ 2 ]		10170811	0					
ANR	10171155	Identifier	op		10170811	0					
ANR	10171156	PrimaryExpression	2		10170811	1					
ANR	10171157	Identifier	t2		10170811	1					
ANR	10171158	ExpressionStatement	op [ 3 ] = t3	159:2:6091:6101	10170811	10	True				
ANR	10171159	AssignmentExpression	op [ 3 ] = t3		10170811	0		=			
ANR	10171160	ArrayIndexing	op [ 3 ]		10170811	0					
ANR	10171161	Identifier	op		10170811	0					
ANR	10171162	PrimaryExpression	3		10170811	1					
ANR	10171163	Identifier	t3		10170811	1					
ANR	10171164	ElseStatement	else		10170811	0					
ANR	10171165	CompoundStatement		49:8:1121:1121	10170811	0					
ANR	10171166	Statement	REPEAT	162:5:6125:6130	10170811	0	True				
ANR	10171167	Statement	(	162:11:6131:6131	10170811	1	True				
ANR	10171168	ExpressionStatement	"stride , * op = ToLinearF [ * wp & mask ]"	162:12:6132:6165	10170811	2	True				
ANR	10171169	Expression	"stride , * op = ToLinearF [ * wp & mask ]"		10170811	0					
ANR	10171170	Identifier	stride		10170811	0					
ANR	10171171	AssignmentExpression	* op = ToLinearF [ * wp & mask ]		10170811	1		=			
ANR	10171172	UnaryOperationExpression	* op		10170811	0					
ANR	10171173	UnaryOperator	*		10170811	0					
ANR	10171174	Identifier	op		10170811	1					
ANR	10171175	ArrayIndexing	ToLinearF [ * wp & mask ]		10170811	1					
ANR	10171176	Identifier	ToLinearF		10170811	0					
ANR	10171177	BitAndExpression	* wp & mask		10170811	1		&			
ANR	10171178	UnaryOperationExpression	* wp		10170811	0					
ANR	10171179	UnaryOperator	*		10170811	0					
ANR	10171180	Identifier	wp		10170811	1					
ANR	10171181	Identifier	mask		10170811	1					
ANR	10171182	ExpressionStatement	wp ++	162:47:6167:6171	10170811	3	True				
ANR	10171183	PostIncDecOperationExpression	wp ++		10170811	0					
ANR	10171184	Identifier	wp		10170811	0					
ANR	10171185	IncDec	++		10170811	1					
ANR	10171186	Statement	op	162:53:6173:6174	10170811	4	True				
ANR	10171187	Statement	++	162:55:6175:6176	10170811	5	True				
ANR	10171188	Statement	)	162:57:6177:6177	10170811	6	True				
ANR	10171189	ExpressionStatement	n -= stride	163:5:6184:6195	10170811	7	True				
ANR	10171190	AssignmentExpression	n -= stride		10170811	0		-=			
ANR	10171191	Identifier	n		10170811	0					
ANR	10171192	Identifier	stride		10170811	1					
ANR	10171193	WhileStatement	while ( n > 0 )		10170811	8					
ANR	10171194	Condition	n > 0	164:12:6209:6213	10170811	0	True				
ANR	10171195	RelationalExpression	n > 0		10170811	0		>			
ANR	10171196	Identifier	n		10170811	0					
ANR	10171197	PrimaryExpression	0		10170811	1					
ANR	10171198	CompoundStatement		52:19:1219:1219	10170811	1					
ANR	10171199	Statement	REPEAT	165:2:6220:6225	10170811	0	True				
ANR	10171200	Statement	(	165:8:6226:6226	10170811	1	True				
ANR	10171201	ExpressionStatement	"stride , wp [ stride ] += * wp"	165:9:6227:6258	10170811	2	True				
ANR	10171202	Expression	"stride , wp [ stride ] += * wp"		10170811	0					
ANR	10171203	Identifier	stride		10170811	0					
ANR	10171204	AssignmentExpression	wp [ stride ] += * wp		10170811	1		+=			
ANR	10171205	ArrayIndexing	wp [ stride ]		10170811	0					
ANR	10171206	Identifier	wp		10170811	0					
ANR	10171207	Identifier	stride		10170811	1					
ANR	10171208	UnaryOperationExpression	* wp		10170811	1					
ANR	10171209	UnaryOperator	*		10170811	0					
ANR	10171210	Identifier	wp		10170811	1					
ANR	10171211	ExpressionStatement	* op = ToLinearF [ * wp & mask ]	166:25:6260:6285	10170811	3	True				
ANR	10171212	AssignmentExpression	* op = ToLinearF [ * wp & mask ]		10170811	0		=			
ANR	10171213	UnaryOperationExpression	* op		10170811	0					
ANR	10171214	UnaryOperator	*		10170811	0					
ANR	10171215	Identifier	op		10170811	1					
ANR	10171216	ArrayIndexing	ToLinearF [ * wp & mask ]		10170811	1					
ANR	10171217	Identifier	ToLinearF		10170811	0					
ANR	10171218	BitAndExpression	* wp & mask		10170811	1		&			
ANR	10171219	UnaryOperationExpression	* wp		10170811	0					
ANR	10171220	UnaryOperator	*		10170811	0					
ANR	10171221	Identifier	wp		10170811	1					
ANR	10171222	Identifier	mask		10170811	1					
ANR	10171223	ExpressionStatement	wp ++	166:52:6287:6291	10170811	4	True				
ANR	10171224	PostIncDecOperationExpression	wp ++		10170811	0					
ANR	10171225	Identifier	wp		10170811	0					
ANR	10171226	IncDec	++		10170811	1					
ANR	10171227	Statement	op	166:58:6293:6294	10170811	5	True				
ANR	10171228	Statement	++	166:60:6295:6296	10170811	6	True				
ANR	10171229	Statement	)	166:62:6297:6297	10170811	7	True				
ANR	10171230	ExpressionStatement	n -= stride	167:2:6301:6312	10170811	8	True				
ANR	10171231	AssignmentExpression	n -= stride		10170811	0		-=			
ANR	10171232	Identifier	n		10170811	0					
ANR	10171233	Identifier	stride		10170811	1					
ANR	10171234	ReturnType	static void		10170811	1					
ANR	10171235	Identifier	horizontalAccumulateF		10170811	2					
ANR	10171236	ParameterList	"uint16 * wp , int n , int stride , float * op , float * ToLinearF"		10170811	3					
ANR	10171237	Parameter	uint16 * wp	111:22:4935:4944	10170811	0	True				
ANR	10171238	ParameterType	uint16 *		10170811	0					
ANR	10171239	Identifier	wp		10170811	1					
ANR	10171240	Parameter	int n	111:34:4947:4951	10170811	1	True				
ANR	10171241	ParameterType	int		10170811	0					
ANR	10171242	Identifier	n		10170811	1					
ANR	10171243	Parameter	int stride	111:41:4954:4963	10170811	2	True				
ANR	10171244	ParameterType	int		10170811	0					
ANR	10171245	Identifier	stride		10170811	1					
ANR	10171246	Parameter	float * op	111:53:4966:4974	10170811	3	True				
ANR	10171247	ParameterType	float *		10170811	0					
ANR	10171248	Identifier	op		10170811	1					
ANR	10171249	Parameter	float * ToLinearF	112:1:4978:4993	10170811	4	True				
ANR	10171250	ParameterType	float *		10170811	0					
ANR	10171251	Identifier	ToLinearF		10170811	1					
ANR	10171252	CFGEntryNode	ENTRY		10170811		True				
ANR	10171253	CFGExitNode	EXIT		10170811		True				
ANR	10171254	Symbol	op		10170811						
ANR	10171255	Symbol	* stride		10170811						
ANR	10171256	Symbol	* mask		10170811						
ANR	10171257	Symbol	cg		10170811						
ANR	10171258	Symbol	* op		10170811						
ANR	10171259	Symbol	* * wp		10170811						
ANR	10171260	Symbol	stride		10170811						
ANR	10171261	Symbol	n		10170811						
ANR	10171262	Symbol	cr		10170811						
ANR	10171263	Symbol	CODE_MASK		10170811						
ANR	10171264	Symbol	wp		10170811						
ANR	10171265	Symbol	ToLinearF		10170811						
ANR	10171266	Symbol	t0		10170811						
ANR	10171267	Symbol	* wp		10170811						
ANR	10171268	Symbol	t1		10170811						
ANR	10171269	Symbol	ca		10170811						
ANR	10171270	Symbol	t2		10170811						
ANR	10171271	Symbol	* ToLinearF		10170811						
ANR	10171272	Symbol	cb		10170811						
ANR	10171273	Symbol	mask		10170811						
ANR	10171274	Symbol	t3		10170811						
ANR	10171275	Function	horizontalAccumulate12	173:0:6333:8205							
ANR	10171276	FunctionDef	"horizontalAccumulate12 (uint16 * wp , int n , int stride , int16 * op , float * ToLinearF)"		10171275	0					
ANR	10171277	CompoundStatement		176:0:6429:8205	10171275	0					
ANR	10171278	Statement	register	177:4:6435:6442	10171275	0	True				
ANR	10171279	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	177:13:6444:6478	10171275	1	True				
ANR	10171280	IdentifierDecl	cr		10171275	0					
ANR	10171281	IdentifierDeclType	unsigned int		10171275	0					
ANR	10171282	Identifier	cr		10171275	1					
ANR	10171283	IdentifierDecl	cg		10171275	1					
ANR	10171284	IdentifierDeclType	unsigned int		10171275	0					
ANR	10171285	Identifier	cg		10171275	1					
ANR	10171286	IdentifierDecl	cb		10171275	2					
ANR	10171287	IdentifierDeclType	unsigned int		10171275	0					
ANR	10171288	Identifier	cb		10171275	1					
ANR	10171289	IdentifierDecl	ca		10171275	3					
ANR	10171290	IdentifierDeclType	unsigned int		10171275	0					
ANR	10171291	Identifier	ca		10171275	1					
ANR	10171292	IdentifierDecl	mask		10171275	4					
ANR	10171293	IdentifierDeclType	unsigned int		10171275	0					
ANR	10171294	Identifier	mask		10171275	1					
ANR	10171295	Statement	register	178:4:6484:6491	10171275	2	True				
ANR	10171296	IdentifierDeclStatement	"float t0 , t1 , t2 , t3 ;"	178:13:6493:6514	10171275	3	True				
ANR	10171297	IdentifierDecl	t0		10171275	0					
ANR	10171298	IdentifierDeclType	float		10171275	0					
ANR	10171299	Identifier	t0		10171275	1					
ANR	10171300	IdentifierDecl	t1		10171275	1					
ANR	10171301	IdentifierDeclType	float		10171275	0					
ANR	10171302	Identifier	t1		10171275	1					
ANR	10171303	IdentifierDecl	t2		10171275	2					
ANR	10171304	IdentifierDeclType	float		10171275	0					
ANR	10171305	Identifier	t2		10171275	1					
ANR	10171306	IdentifierDecl	t3		10171275	3					
ANR	10171307	IdentifierDeclType	float		10171275	0					
ANR	10171308	Identifier	t3		10171275	1					
ANR	10171309	Statement	define	180:1:6518:6523	10171275	4	True				
ANR	10171310	Statement	SCALE12	180:8:6525:6531	10171275	5	True				
ANR	10171311	Statement	2048.0F	180:16:6533:6539	10171275	6	True				
ANR	10171312	Statement	define	181:1:6542:6547	10171275	7	True				
ANR	10171313	Statement	CLAMP12	181:8:6549:6555	10171275	8	True				
ANR	10171314	Statement	(	181:15:6556:6556	10171275	9	True				
ANR	10171315	Statement	t	181:16:6557:6557	10171275	10	True				
ANR	10171316	Statement	)	181:17:6558:6558	10171275	11	True				
ANR	10171317	Statement	(	181:19:6560:6560	10171275	12	True				
ANR	10171318	Statement	(	181:20:6561:6561	10171275	13	True				
ANR	10171319	Statement	(	181:21:6562:6562	10171275	14	True				
ANR	10171320	Statement	t	181:22:6563:6563	10171275	15	True				
ANR	10171321	Statement	)	181:23:6564:6564	10171275	16	True				
ANR	10171322	Statement	<	181:25:6566:6566	10171275	17	True				
ANR	10171323	Statement	3071	181:27:6568:6571	10171275	18	True				
ANR	10171324	Statement	)	181:31:6572:6572	10171275	19	True				
ANR	10171325	Statement	?	181:33:6574:6574	10171275	20	True				
ANR	10171326	Statement	(	181:35:6576:6576	10171275	21	True				
ANR	10171327	Statement	uint16	181:36:6577:6582	10171275	22	True				
ANR	10171328	Statement	)	181:42:6583:6583	10171275	23	True				
ANR	10171329	Statement	(	181:44:6585:6585	10171275	24	True				
ANR	10171330	Statement	t	181:45:6586:6586	10171275	25	True				
ANR	10171331	Statement	)	181:46:6587:6587	10171275	26	True				
ANR	10171332	Statement	:	181:48:6589:6589	10171275	27	True				
ANR	10171333	Statement	3071	181:50:6591:6594	10171275	28	True				
ANR	10171334	Statement	)	181:54:6595:6595	10171275	29	True				
ANR	10171335	IfStatement	if ( n >= stride )		10171275	30					
ANR	10171336	Condition	n >= stride	183:8:6606:6616	10171275	0	True				
ANR	10171337	RelationalExpression	n >= stride		10171275	0		>=			
ANR	10171338	Identifier	n		10171275	0					
ANR	10171339	Identifier	stride		10171275	1					
ANR	10171340	CompoundStatement		8:21:189:189	10171275	1					
ANR	10171341	ExpressionStatement	mask = CODE_MASK	184:1:6622:6638	10171275	0	True				
ANR	10171342	AssignmentExpression	mask = CODE_MASK		10171275	0		=			
ANR	10171343	Identifier	mask		10171275	0					
ANR	10171344	Identifier	CODE_MASK		10171275	1					
ANR	10171345	IfStatement	if ( stride == 3 )		10171275	1					
ANR	10171346	Condition	stride == 3	185:5:6645:6655	10171275	0	True				
ANR	10171347	EqualityExpression	stride == 3		10171275	0		==			
ANR	10171348	Identifier	stride		10171275	0					
ANR	10171349	PrimaryExpression	3		10171275	1					
ANR	10171350	CompoundStatement		10:18:228:228	10171275	1					
ANR	10171351	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12	186:5:6665:6710	10171275	0	True				
ANR	10171352	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		10171275	0		=			
ANR	10171353	Identifier	t0		10171275	0					
ANR	10171354	MultiplicativeExpression	ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		10171275	1		*			
ANR	10171355	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		10171275	0					
ANR	10171356	Identifier	ToLinearF		10171275	0					
ANR	10171357	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10171275	1		=			
ANR	10171358	Identifier	cr		10171275	0					
ANR	10171359	BitAndExpression	wp [ 0 ] & mask		10171275	1		&			
ANR	10171360	ArrayIndexing	wp [ 0 ]		10171275	0					
ANR	10171361	Identifier	wp		10171275	0					
ANR	10171362	PrimaryExpression	0		10171275	1					
ANR	10171363	Identifier	mask		10171275	1					
ANR	10171364	Identifier	SCALE12		10171275	1					
ANR	10171365	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12	187:5:6717:6762	10171275	1	True				
ANR	10171366	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		10171275	0		=			
ANR	10171367	Identifier	t1		10171275	0					
ANR	10171368	MultiplicativeExpression	ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		10171275	1		*			
ANR	10171369	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		10171275	0					
ANR	10171370	Identifier	ToLinearF		10171275	0					
ANR	10171371	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10171275	1		=			
ANR	10171372	Identifier	cg		10171275	0					
ANR	10171373	BitAndExpression	wp [ 1 ] & mask		10171275	1		&			
ANR	10171374	ArrayIndexing	wp [ 1 ]		10171275	0					
ANR	10171375	Identifier	wp		10171275	0					
ANR	10171376	PrimaryExpression	1		10171275	1					
ANR	10171377	Identifier	mask		10171275	1					
ANR	10171378	Identifier	SCALE12		10171275	1					
ANR	10171379	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12	188:5:6769:6814	10171275	2	True				
ANR	10171380	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		10171275	0		=			
ANR	10171381	Identifier	t2		10171275	0					
ANR	10171382	MultiplicativeExpression	ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		10171275	1		*			
ANR	10171383	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		10171275	0					
ANR	10171384	Identifier	ToLinearF		10171275	0					
ANR	10171385	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10171275	1		=			
ANR	10171386	Identifier	cb		10171275	0					
ANR	10171387	BitAndExpression	wp [ 2 ] & mask		10171275	1		&			
ANR	10171388	ArrayIndexing	wp [ 2 ]		10171275	0					
ANR	10171389	Identifier	wp		10171275	0					
ANR	10171390	PrimaryExpression	2		10171275	1					
ANR	10171391	Identifier	mask		10171275	1					
ANR	10171392	Identifier	SCALE12		10171275	1					
ANR	10171393	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	189:5:6821:6840	10171275	3	True				
ANR	10171394	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		10171275	0		=			
ANR	10171395	ArrayIndexing	op [ 0 ]		10171275	0					
ANR	10171396	Identifier	op		10171275	0					
ANR	10171397	PrimaryExpression	0		10171275	1					
ANR	10171398	CallExpression	CLAMP12 ( t0 )		10171275	1					
ANR	10171399	Callee	CLAMP12		10171275	0					
ANR	10171400	Identifier	CLAMP12		10171275	0					
ANR	10171401	ArgumentList	t0		10171275	1					
ANR	10171402	Argument	t0		10171275	0					
ANR	10171403	Identifier	t0		10171275	0					
ANR	10171404	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	190:5:6847:6866	10171275	4	True				
ANR	10171405	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		10171275	0		=			
ANR	10171406	ArrayIndexing	op [ 1 ]		10171275	0					
ANR	10171407	Identifier	op		10171275	0					
ANR	10171408	PrimaryExpression	1		10171275	1					
ANR	10171409	CallExpression	CLAMP12 ( t1 )		10171275	1					
ANR	10171410	Callee	CLAMP12		10171275	0					
ANR	10171411	Identifier	CLAMP12		10171275	0					
ANR	10171412	ArgumentList	t1		10171275	1					
ANR	10171413	Argument	t1		10171275	0					
ANR	10171414	Identifier	t1		10171275	0					
ANR	10171415	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	191:5:6873:6892	10171275	5	True				
ANR	10171416	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		10171275	0		=			
ANR	10171417	ArrayIndexing	op [ 2 ]		10171275	0					
ANR	10171418	Identifier	op		10171275	0					
ANR	10171419	PrimaryExpression	2		10171275	1					
ANR	10171420	CallExpression	CLAMP12 ( t2 )		10171275	1					
ANR	10171421	Callee	CLAMP12		10171275	0					
ANR	10171422	Identifier	CLAMP12		10171275	0					
ANR	10171423	ArgumentList	t2		10171275	1					
ANR	10171424	Argument	t2		10171275	0					
ANR	10171425	Identifier	t2		10171275	0					
ANR	10171426	ExpressionStatement	n -= 3	192:5:6899:6905	10171275	6	True				
ANR	10171427	AssignmentExpression	n -= 3		10171275	0		-=			
ANR	10171428	Identifier	n		10171275	0					
ANR	10171429	PrimaryExpression	3		10171275	1					
ANR	10171430	WhileStatement	while ( n > 0 )		10171275	7					
ANR	10171431	Condition	n > 0	193:12:6919:6923	10171275	0	True				
ANR	10171432	RelationalExpression	n > 0		10171275	0		>			
ANR	10171433	Identifier	n		10171275	0					
ANR	10171434	PrimaryExpression	0		10171275	1					
ANR	10171435	CompoundStatement		18:19:496:496	10171275	1					
ANR	10171436	ExpressionStatement	wp += 3	194:2:6930:6937	10171275	0	True				
ANR	10171437	AssignmentExpression	wp += 3		10171275	0		+=			
ANR	10171438	Identifier	wp		10171275	0					
ANR	10171439	PrimaryExpression	3		10171275	1					
ANR	10171440	ExpressionStatement	op += 3	195:2:6941:6948	10171275	1	True				
ANR	10171441	AssignmentExpression	op += 3		10171275	0		+=			
ANR	10171442	Identifier	op		10171275	0					
ANR	10171443	PrimaryExpression	3		10171275	1					
ANR	10171444	ExpressionStatement	n -= 3	196:2:6952:6958	10171275	2	True				
ANR	10171445	AssignmentExpression	n -= 3		10171275	0		-=			
ANR	10171446	Identifier	n		10171275	0					
ANR	10171447	PrimaryExpression	3		10171275	1					
ANR	10171448	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12	197:2:6962:7008	10171275	3	True				
ANR	10171449	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		10171275	0		=			
ANR	10171450	Identifier	t0		10171275	0					
ANR	10171451	MultiplicativeExpression	ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		10171275	1		*			
ANR	10171452	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		10171275	0					
ANR	10171453	Identifier	ToLinearF		10171275	0					
ANR	10171454	BitAndExpression	( cr += wp [ 0 ] ) & mask		10171275	1		&			
ANR	10171455	AssignmentExpression	cr += wp [ 0 ]		10171275	0		+=			
ANR	10171456	Identifier	cr		10171275	0					
ANR	10171457	ArrayIndexing	wp [ 0 ]		10171275	1					
ANR	10171458	Identifier	wp		10171275	0					
ANR	10171459	PrimaryExpression	0		10171275	1					
ANR	10171460	Identifier	mask		10171275	1					
ANR	10171461	Identifier	SCALE12		10171275	1					
ANR	10171462	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12	198:2:7012:7058	10171275	4	True				
ANR	10171463	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		10171275	0		=			
ANR	10171464	Identifier	t1		10171275	0					
ANR	10171465	MultiplicativeExpression	ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		10171275	1		*			
ANR	10171466	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		10171275	0					
ANR	10171467	Identifier	ToLinearF		10171275	0					
ANR	10171468	BitAndExpression	( cg += wp [ 1 ] ) & mask		10171275	1		&			
ANR	10171469	AssignmentExpression	cg += wp [ 1 ]		10171275	0		+=			
ANR	10171470	Identifier	cg		10171275	0					
ANR	10171471	ArrayIndexing	wp [ 1 ]		10171275	1					
ANR	10171472	Identifier	wp		10171275	0					
ANR	10171473	PrimaryExpression	1		10171275	1					
ANR	10171474	Identifier	mask		10171275	1					
ANR	10171475	Identifier	SCALE12		10171275	1					
ANR	10171476	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12	199:2:7062:7108	10171275	5	True				
ANR	10171477	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		10171275	0		=			
ANR	10171478	Identifier	t2		10171275	0					
ANR	10171479	MultiplicativeExpression	ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		10171275	1		*			
ANR	10171480	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		10171275	0					
ANR	10171481	Identifier	ToLinearF		10171275	0					
ANR	10171482	BitAndExpression	( cb += wp [ 2 ] ) & mask		10171275	1		&			
ANR	10171483	AssignmentExpression	cb += wp [ 2 ]		10171275	0		+=			
ANR	10171484	Identifier	cb		10171275	0					
ANR	10171485	ArrayIndexing	wp [ 2 ]		10171275	1					
ANR	10171486	Identifier	wp		10171275	0					
ANR	10171487	PrimaryExpression	2		10171275	1					
ANR	10171488	Identifier	mask		10171275	1					
ANR	10171489	Identifier	SCALE12		10171275	1					
ANR	10171490	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	200:2:7112:7131	10171275	6	True				
ANR	10171491	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		10171275	0		=			
ANR	10171492	ArrayIndexing	op [ 0 ]		10171275	0					
ANR	10171493	Identifier	op		10171275	0					
ANR	10171494	PrimaryExpression	0		10171275	1					
ANR	10171495	CallExpression	CLAMP12 ( t0 )		10171275	1					
ANR	10171496	Callee	CLAMP12		10171275	0					
ANR	10171497	Identifier	CLAMP12		10171275	0					
ANR	10171498	ArgumentList	t0		10171275	1					
ANR	10171499	Argument	t0		10171275	0					
ANR	10171500	Identifier	t0		10171275	0					
ANR	10171501	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	201:2:7135:7154	10171275	7	True				
ANR	10171502	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		10171275	0		=			
ANR	10171503	ArrayIndexing	op [ 1 ]		10171275	0					
ANR	10171504	Identifier	op		10171275	0					
ANR	10171505	PrimaryExpression	1		10171275	1					
ANR	10171506	CallExpression	CLAMP12 ( t1 )		10171275	1					
ANR	10171507	Callee	CLAMP12		10171275	0					
ANR	10171508	Identifier	CLAMP12		10171275	0					
ANR	10171509	ArgumentList	t1		10171275	1					
ANR	10171510	Argument	t1		10171275	0					
ANR	10171511	Identifier	t1		10171275	0					
ANR	10171512	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	202:2:7158:7177	10171275	8	True				
ANR	10171513	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		10171275	0		=			
ANR	10171514	ArrayIndexing	op [ 2 ]		10171275	0					
ANR	10171515	Identifier	op		10171275	0					
ANR	10171516	PrimaryExpression	2		10171275	1					
ANR	10171517	CallExpression	CLAMP12 ( t2 )		10171275	1					
ANR	10171518	Callee	CLAMP12		10171275	0					
ANR	10171519	Identifier	CLAMP12		10171275	0					
ANR	10171520	ArgumentList	t2		10171275	1					
ANR	10171521	Argument	t2		10171275	0					
ANR	10171522	Identifier	t2		10171275	0					
ANR	10171523	ElseStatement	else		10171275	0					
ANR	10171524	IfStatement	if ( stride == 4 )		10171275	0					
ANR	10171525	Condition	stride == 4	204:12:7198:7208	10171275	0	True				
ANR	10171526	EqualityExpression	stride == 4		10171275	0		==			
ANR	10171527	Identifier	stride		10171275	0					
ANR	10171528	PrimaryExpression	4		10171275	1					
ANR	10171529	CompoundStatement		29:25:781:781	10171275	1					
ANR	10171530	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12	205:5:7218:7263	10171275	0	True				
ANR	10171531	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		10171275	0		=			
ANR	10171532	Identifier	t0		10171275	0					
ANR	10171533	MultiplicativeExpression	ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		10171275	1		*			
ANR	10171534	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		10171275	0					
ANR	10171535	Identifier	ToLinearF		10171275	0					
ANR	10171536	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10171275	1		=			
ANR	10171537	Identifier	cr		10171275	0					
ANR	10171538	BitAndExpression	wp [ 0 ] & mask		10171275	1		&			
ANR	10171539	ArrayIndexing	wp [ 0 ]		10171275	0					
ANR	10171540	Identifier	wp		10171275	0					
ANR	10171541	PrimaryExpression	0		10171275	1					
ANR	10171542	Identifier	mask		10171275	1					
ANR	10171543	Identifier	SCALE12		10171275	1					
ANR	10171544	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12	206:5:7270:7315	10171275	1	True				
ANR	10171545	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		10171275	0		=			
ANR	10171546	Identifier	t1		10171275	0					
ANR	10171547	MultiplicativeExpression	ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		10171275	1		*			
ANR	10171548	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		10171275	0					
ANR	10171549	Identifier	ToLinearF		10171275	0					
ANR	10171550	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10171275	1		=			
ANR	10171551	Identifier	cg		10171275	0					
ANR	10171552	BitAndExpression	wp [ 1 ] & mask		10171275	1		&			
ANR	10171553	ArrayIndexing	wp [ 1 ]		10171275	0					
ANR	10171554	Identifier	wp		10171275	0					
ANR	10171555	PrimaryExpression	1		10171275	1					
ANR	10171556	Identifier	mask		10171275	1					
ANR	10171557	Identifier	SCALE12		10171275	1					
ANR	10171558	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12	207:5:7322:7367	10171275	2	True				
ANR	10171559	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		10171275	0		=			
ANR	10171560	Identifier	t2		10171275	0					
ANR	10171561	MultiplicativeExpression	ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		10171275	1		*			
ANR	10171562	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		10171275	0					
ANR	10171563	Identifier	ToLinearF		10171275	0					
ANR	10171564	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10171275	1		=			
ANR	10171565	Identifier	cb		10171275	0					
ANR	10171566	BitAndExpression	wp [ 2 ] & mask		10171275	1		&			
ANR	10171567	ArrayIndexing	wp [ 2 ]		10171275	0					
ANR	10171568	Identifier	wp		10171275	0					
ANR	10171569	PrimaryExpression	2		10171275	1					
ANR	10171570	Identifier	mask		10171275	1					
ANR	10171571	Identifier	SCALE12		10171275	1					
ANR	10171572	ExpressionStatement	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ] * SCALE12	208:5:7374:7419	10171275	3	True				
ANR	10171573	AssignmentExpression	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ] * SCALE12		10171275	0		=			
ANR	10171574	Identifier	t3		10171275	0					
ANR	10171575	MultiplicativeExpression	ToLinearF [ ca = ( wp [ 3 ] & mask ) ] * SCALE12		10171275	1		*			
ANR	10171576	ArrayIndexing	ToLinearF [ ca = ( wp [ 3 ] & mask ) ]		10171275	0					
ANR	10171577	Identifier	ToLinearF		10171275	0					
ANR	10171578	AssignmentExpression	ca = ( wp [ 3 ] & mask )		10171275	1		=			
ANR	10171579	Identifier	ca		10171275	0					
ANR	10171580	BitAndExpression	wp [ 3 ] & mask		10171275	1		&			
ANR	10171581	ArrayIndexing	wp [ 3 ]		10171275	0					
ANR	10171582	Identifier	wp		10171275	0					
ANR	10171583	PrimaryExpression	3		10171275	1					
ANR	10171584	Identifier	mask		10171275	1					
ANR	10171585	Identifier	SCALE12		10171275	1					
ANR	10171586	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	209:5:7426:7445	10171275	4	True				
ANR	10171587	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		10171275	0		=			
ANR	10171588	ArrayIndexing	op [ 0 ]		10171275	0					
ANR	10171589	Identifier	op		10171275	0					
ANR	10171590	PrimaryExpression	0		10171275	1					
ANR	10171591	CallExpression	CLAMP12 ( t0 )		10171275	1					
ANR	10171592	Callee	CLAMP12		10171275	0					
ANR	10171593	Identifier	CLAMP12		10171275	0					
ANR	10171594	ArgumentList	t0		10171275	1					
ANR	10171595	Argument	t0		10171275	0					
ANR	10171596	Identifier	t0		10171275	0					
ANR	10171597	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	210:5:7452:7471	10171275	5	True				
ANR	10171598	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		10171275	0		=			
ANR	10171599	ArrayIndexing	op [ 1 ]		10171275	0					
ANR	10171600	Identifier	op		10171275	0					
ANR	10171601	PrimaryExpression	1		10171275	1					
ANR	10171602	CallExpression	CLAMP12 ( t1 )		10171275	1					
ANR	10171603	Callee	CLAMP12		10171275	0					
ANR	10171604	Identifier	CLAMP12		10171275	0					
ANR	10171605	ArgumentList	t1		10171275	1					
ANR	10171606	Argument	t1		10171275	0					
ANR	10171607	Identifier	t1		10171275	0					
ANR	10171608	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	211:5:7478:7497	10171275	6	True				
ANR	10171609	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		10171275	0		=			
ANR	10171610	ArrayIndexing	op [ 2 ]		10171275	0					
ANR	10171611	Identifier	op		10171275	0					
ANR	10171612	PrimaryExpression	2		10171275	1					
ANR	10171613	CallExpression	CLAMP12 ( t2 )		10171275	1					
ANR	10171614	Callee	CLAMP12		10171275	0					
ANR	10171615	Identifier	CLAMP12		10171275	0					
ANR	10171616	ArgumentList	t2		10171275	1					
ANR	10171617	Argument	t2		10171275	0					
ANR	10171618	Identifier	t2		10171275	0					
ANR	10171619	ExpressionStatement	op [ 3 ] = CLAMP12 ( t3 )	212:5:7504:7523	10171275	7	True				
ANR	10171620	AssignmentExpression	op [ 3 ] = CLAMP12 ( t3 )		10171275	0		=			
ANR	10171621	ArrayIndexing	op [ 3 ]		10171275	0					
ANR	10171622	Identifier	op		10171275	0					
ANR	10171623	PrimaryExpression	3		10171275	1					
ANR	10171624	CallExpression	CLAMP12 ( t3 )		10171275	1					
ANR	10171625	Callee	CLAMP12		10171275	0					
ANR	10171626	Identifier	CLAMP12		10171275	0					
ANR	10171627	ArgumentList	t3		10171275	1					
ANR	10171628	Argument	t3		10171275	0					
ANR	10171629	Identifier	t3		10171275	0					
ANR	10171630	ExpressionStatement	n -= 4	213:5:7530:7536	10171275	8	True				
ANR	10171631	AssignmentExpression	n -= 4		10171275	0		-=			
ANR	10171632	Identifier	n		10171275	0					
ANR	10171633	PrimaryExpression	4		10171275	1					
ANR	10171634	WhileStatement	while ( n > 0 )		10171275	9					
ANR	10171635	Condition	n > 0	214:12:7550:7554	10171275	0	True				
ANR	10171636	RelationalExpression	n > 0		10171275	0		>			
ANR	10171637	Identifier	n		10171275	0					
ANR	10171638	PrimaryExpression	0		10171275	1					
ANR	10171639	CompoundStatement		39:19:1127:1127	10171275	1					
ANR	10171640	ExpressionStatement	wp += 4	215:2:7561:7568	10171275	0	True				
ANR	10171641	AssignmentExpression	wp += 4		10171275	0		+=			
ANR	10171642	Identifier	wp		10171275	0					
ANR	10171643	PrimaryExpression	4		10171275	1					
ANR	10171644	ExpressionStatement	op += 4	216:2:7572:7579	10171275	1	True				
ANR	10171645	AssignmentExpression	op += 4		10171275	0		+=			
ANR	10171646	Identifier	op		10171275	0					
ANR	10171647	PrimaryExpression	4		10171275	1					
ANR	10171648	ExpressionStatement	n -= 4	217:2:7583:7589	10171275	2	True				
ANR	10171649	AssignmentExpression	n -= 4		10171275	0		-=			
ANR	10171650	Identifier	n		10171275	0					
ANR	10171651	PrimaryExpression	4		10171275	1					
ANR	10171652	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12	218:2:7593:7639	10171275	3	True				
ANR	10171653	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		10171275	0		=			
ANR	10171654	Identifier	t0		10171275	0					
ANR	10171655	MultiplicativeExpression	ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		10171275	1		*			
ANR	10171656	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		10171275	0					
ANR	10171657	Identifier	ToLinearF		10171275	0					
ANR	10171658	BitAndExpression	( cr += wp [ 0 ] ) & mask		10171275	1		&			
ANR	10171659	AssignmentExpression	cr += wp [ 0 ]		10171275	0		+=			
ANR	10171660	Identifier	cr		10171275	0					
ANR	10171661	ArrayIndexing	wp [ 0 ]		10171275	1					
ANR	10171662	Identifier	wp		10171275	0					
ANR	10171663	PrimaryExpression	0		10171275	1					
ANR	10171664	Identifier	mask		10171275	1					
ANR	10171665	Identifier	SCALE12		10171275	1					
ANR	10171666	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12	219:2:7643:7689	10171275	4	True				
ANR	10171667	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		10171275	0		=			
ANR	10171668	Identifier	t1		10171275	0					
ANR	10171669	MultiplicativeExpression	ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		10171275	1		*			
ANR	10171670	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		10171275	0					
ANR	10171671	Identifier	ToLinearF		10171275	0					
ANR	10171672	BitAndExpression	( cg += wp [ 1 ] ) & mask		10171275	1		&			
ANR	10171673	AssignmentExpression	cg += wp [ 1 ]		10171275	0		+=			
ANR	10171674	Identifier	cg		10171275	0					
ANR	10171675	ArrayIndexing	wp [ 1 ]		10171275	1					
ANR	10171676	Identifier	wp		10171275	0					
ANR	10171677	PrimaryExpression	1		10171275	1					
ANR	10171678	Identifier	mask		10171275	1					
ANR	10171679	Identifier	SCALE12		10171275	1					
ANR	10171680	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12	220:2:7693:7739	10171275	5	True				
ANR	10171681	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		10171275	0		=			
ANR	10171682	Identifier	t2		10171275	0					
ANR	10171683	MultiplicativeExpression	ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		10171275	1		*			
ANR	10171684	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		10171275	0					
ANR	10171685	Identifier	ToLinearF		10171275	0					
ANR	10171686	BitAndExpression	( cb += wp [ 2 ] ) & mask		10171275	1		&			
ANR	10171687	AssignmentExpression	cb += wp [ 2 ]		10171275	0		+=			
ANR	10171688	Identifier	cb		10171275	0					
ANR	10171689	ArrayIndexing	wp [ 2 ]		10171275	1					
ANR	10171690	Identifier	wp		10171275	0					
ANR	10171691	PrimaryExpression	2		10171275	1					
ANR	10171692	Identifier	mask		10171275	1					
ANR	10171693	Identifier	SCALE12		10171275	1					
ANR	10171694	ExpressionStatement	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ] * SCALE12	221:2:7743:7789	10171275	6	True				
ANR	10171695	AssignmentExpression	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ] * SCALE12		10171275	0		=			
ANR	10171696	Identifier	t3		10171275	0					
ANR	10171697	MultiplicativeExpression	ToLinearF [ ( ca += wp [ 3 ] ) & mask ] * SCALE12		10171275	1		*			
ANR	10171698	ArrayIndexing	ToLinearF [ ( ca += wp [ 3 ] ) & mask ]		10171275	0					
ANR	10171699	Identifier	ToLinearF		10171275	0					
ANR	10171700	BitAndExpression	( ca += wp [ 3 ] ) & mask		10171275	1		&			
ANR	10171701	AssignmentExpression	ca += wp [ 3 ]		10171275	0		+=			
ANR	10171702	Identifier	ca		10171275	0					
ANR	10171703	ArrayIndexing	wp [ 3 ]		10171275	1					
ANR	10171704	Identifier	wp		10171275	0					
ANR	10171705	PrimaryExpression	3		10171275	1					
ANR	10171706	Identifier	mask		10171275	1					
ANR	10171707	Identifier	SCALE12		10171275	1					
ANR	10171708	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	222:2:7793:7812	10171275	7	True				
ANR	10171709	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		10171275	0		=			
ANR	10171710	ArrayIndexing	op [ 0 ]		10171275	0					
ANR	10171711	Identifier	op		10171275	0					
ANR	10171712	PrimaryExpression	0		10171275	1					
ANR	10171713	CallExpression	CLAMP12 ( t0 )		10171275	1					
ANR	10171714	Callee	CLAMP12		10171275	0					
ANR	10171715	Identifier	CLAMP12		10171275	0					
ANR	10171716	ArgumentList	t0		10171275	1					
ANR	10171717	Argument	t0		10171275	0					
ANR	10171718	Identifier	t0		10171275	0					
ANR	10171719	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	223:2:7816:7835	10171275	8	True				
ANR	10171720	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		10171275	0		=			
ANR	10171721	ArrayIndexing	op [ 1 ]		10171275	0					
ANR	10171722	Identifier	op		10171275	0					
ANR	10171723	PrimaryExpression	1		10171275	1					
ANR	10171724	CallExpression	CLAMP12 ( t1 )		10171275	1					
ANR	10171725	Callee	CLAMP12		10171275	0					
ANR	10171726	Identifier	CLAMP12		10171275	0					
ANR	10171727	ArgumentList	t1		10171275	1					
ANR	10171728	Argument	t1		10171275	0					
ANR	10171729	Identifier	t1		10171275	0					
ANR	10171730	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	224:2:7839:7858	10171275	9	True				
ANR	10171731	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		10171275	0		=			
ANR	10171732	ArrayIndexing	op [ 2 ]		10171275	0					
ANR	10171733	Identifier	op		10171275	0					
ANR	10171734	PrimaryExpression	2		10171275	1					
ANR	10171735	CallExpression	CLAMP12 ( t2 )		10171275	1					
ANR	10171736	Callee	CLAMP12		10171275	0					
ANR	10171737	Identifier	CLAMP12		10171275	0					
ANR	10171738	ArgumentList	t2		10171275	1					
ANR	10171739	Argument	t2		10171275	0					
ANR	10171740	Identifier	t2		10171275	0					
ANR	10171741	ExpressionStatement	op [ 3 ] = CLAMP12 ( t3 )	225:2:7862:7881	10171275	10	True				
ANR	10171742	AssignmentExpression	op [ 3 ] = CLAMP12 ( t3 )		10171275	0		=			
ANR	10171743	ArrayIndexing	op [ 3 ]		10171275	0					
ANR	10171744	Identifier	op		10171275	0					
ANR	10171745	PrimaryExpression	3		10171275	1					
ANR	10171746	CallExpression	CLAMP12 ( t3 )		10171275	1					
ANR	10171747	Callee	CLAMP12		10171275	0					
ANR	10171748	Identifier	CLAMP12		10171275	0					
ANR	10171749	ArgumentList	t3		10171275	1					
ANR	10171750	Argument	t3		10171275	0					
ANR	10171751	Identifier	t3		10171275	0					
ANR	10171752	ElseStatement	else		10171275	0					
ANR	10171753	CompoundStatement		52:8:1468:1468	10171275	0					
ANR	10171754	Statement	REPEAT	228:5:7905:7910	10171275	0	True				
ANR	10171755	Statement	(	228:11:7911:7911	10171275	1	True				
ANR	10171756	ExpressionStatement	"stride , t0 = ToLinearF [ * wp & mask ] * SCALE12"	228:12:7912:7954	10171275	2	True				
ANR	10171757	Expression	"stride , t0 = ToLinearF [ * wp & mask ] * SCALE12"		10171275	0					
ANR	10171758	Identifier	stride		10171275	0					
ANR	10171759	AssignmentExpression	t0 = ToLinearF [ * wp & mask ] * SCALE12		10171275	1		=			
ANR	10171760	Identifier	t0		10171275	0					
ANR	10171761	MultiplicativeExpression	ToLinearF [ * wp & mask ] * SCALE12		10171275	1		*			
ANR	10171762	ArrayIndexing	ToLinearF [ * wp & mask ]		10171275	0					
ANR	10171763	Identifier	ToLinearF		10171275	0					
ANR	10171764	BitAndExpression	* wp & mask		10171275	1		&			
ANR	10171765	UnaryOperationExpression	* wp		10171275	0					
ANR	10171766	UnaryOperator	*		10171275	0					
ANR	10171767	Identifier	wp		10171275	1					
ANR	10171768	Identifier	mask		10171275	1					
ANR	10171769	Identifier	SCALE12		10171275	1					
ANR	10171770	ExpressionStatement	* op = CLAMP12 ( t0 )	229:27:7983:8000	10171275	3	True				
ANR	10171771	AssignmentExpression	* op = CLAMP12 ( t0 )		10171275	0		=			
ANR	10171772	UnaryOperationExpression	* op		10171275	0					
ANR	10171773	UnaryOperator	*		10171275	0					
ANR	10171774	Identifier	op		10171275	1					
ANR	10171775	CallExpression	CLAMP12 ( t0 )		10171275	1					
ANR	10171776	Callee	CLAMP12		10171275	0					
ANR	10171777	Identifier	CLAMP12		10171275	0					
ANR	10171778	ArgumentList	t0		10171275	1					
ANR	10171779	Argument	t0		10171275	0					
ANR	10171780	Identifier	t0		10171275	0					
ANR	10171781	ExpressionStatement	wp ++	229:46:8002:8006	10171275	4	True				
ANR	10171782	PostIncDecOperationExpression	wp ++		10171275	0					
ANR	10171783	Identifier	wp		10171275	0					
ANR	10171784	IncDec	++		10171275	1					
ANR	10171785	Statement	op	229:52:8008:8009	10171275	5	True				
ANR	10171786	Statement	++	229:54:8010:8011	10171275	6	True				
ANR	10171787	Statement	)	229:56:8012:8012	10171275	7	True				
ANR	10171788	ExpressionStatement	n -= stride	230:5:8019:8030	10171275	8	True				
ANR	10171789	AssignmentExpression	n -= stride		10171275	0		-=			
ANR	10171790	Identifier	n		10171275	0					
ANR	10171791	Identifier	stride		10171275	1					
ANR	10171792	WhileStatement	while ( n > 0 )		10171275	9					
ANR	10171793	Condition	n > 0	231:12:8044:8048	10171275	0	True				
ANR	10171794	RelationalExpression	n > 0		10171275	0		>			
ANR	10171795	Identifier	n		10171275	0					
ANR	10171796	PrimaryExpression	0		10171275	1					
ANR	10171797	CompoundStatement		56:19:1621:1621	10171275	1					
ANR	10171798	Statement	REPEAT	232:2:8055:8060	10171275	0	True				
ANR	10171799	Statement	(	232:8:8061:8061	10171275	1	True				
ANR	10171800	ExpressionStatement	"stride , wp [ stride ] += * wp"	232:9:8062:8093	10171275	2	True				
ANR	10171801	Expression	"stride , wp [ stride ] += * wp"		10171275	0					
ANR	10171802	Identifier	stride		10171275	0					
ANR	10171803	AssignmentExpression	wp [ stride ] += * wp		10171275	1		+=			
ANR	10171804	ArrayIndexing	wp [ stride ]		10171275	0					
ANR	10171805	Identifier	wp		10171275	0					
ANR	10171806	Identifier	stride		10171275	1					
ANR	10171807	UnaryOperationExpression	* wp		10171275	1					
ANR	10171808	UnaryOperator	*		10171275	0					
ANR	10171809	Identifier	wp		10171275	1					
ANR	10171810	ExpressionStatement	t0 = ToLinearF [ wp [ stride ] & mask ] * SCALE12	233:25:8095:8134	10171275	3	True				
ANR	10171811	AssignmentExpression	t0 = ToLinearF [ wp [ stride ] & mask ] * SCALE12		10171275	0		=			
ANR	10171812	Identifier	t0		10171275	0					
ANR	10171813	MultiplicativeExpression	ToLinearF [ wp [ stride ] & mask ] * SCALE12		10171275	1		*			
ANR	10171814	ArrayIndexing	ToLinearF [ wp [ stride ] & mask ]		10171275	0					
ANR	10171815	Identifier	ToLinearF		10171275	0					
ANR	10171816	BitAndExpression	wp [ stride ] & mask		10171275	1		&			
ANR	10171817	ArrayIndexing	wp [ stride ]		10171275	0					
ANR	10171818	Identifier	wp		10171275	0					
ANR	10171819	Identifier	stride		10171275	1					
ANR	10171820	Identifier	mask		10171275	1					
ANR	10171821	Identifier	SCALE12		10171275	1					
ANR	10171822	ExpressionStatement	* op = CLAMP12 ( t0 )	234:6:8142:8159	10171275	4	True				
ANR	10171823	AssignmentExpression	* op = CLAMP12 ( t0 )		10171275	0		=			
ANR	10171824	UnaryOperationExpression	* op		10171275	0					
ANR	10171825	UnaryOperator	*		10171275	0					
ANR	10171826	Identifier	op		10171275	1					
ANR	10171827	CallExpression	CLAMP12 ( t0 )		10171275	1					
ANR	10171828	Callee	CLAMP12		10171275	0					
ANR	10171829	Identifier	CLAMP12		10171275	0					
ANR	10171830	ArgumentList	t0		10171275	1					
ANR	10171831	Argument	t0		10171275	0					
ANR	10171832	Identifier	t0		10171275	0					
ANR	10171833	ExpressionStatement	wp ++	234:26:8162:8166	10171275	5	True				
ANR	10171834	PostIncDecOperationExpression	wp ++		10171275	0					
ANR	10171835	Identifier	wp		10171275	0					
ANR	10171836	IncDec	++		10171275	1					
ANR	10171837	Statement	op	234:32:8168:8169	10171275	6	True				
ANR	10171838	Statement	++	234:34:8170:8171	10171275	7	True				
ANR	10171839	Statement	)	234:36:8172:8172	10171275	8	True				
ANR	10171840	ExpressionStatement	n -= stride	235:2:8176:8187	10171275	9	True				
ANR	10171841	AssignmentExpression	n -= stride		10171275	0		-=			
ANR	10171842	Identifier	n		10171275	0					
ANR	10171843	Identifier	stride		10171275	1					
ANR	10171844	ReturnType	static void		10171275	1					
ANR	10171845	Identifier	horizontalAccumulate12		10171275	2					
ANR	10171846	ParameterList	"uint16 * wp , int n , int stride , int16 * op , float * ToLinearF"		10171275	3					
ANR	10171847	Parameter	uint16 * wp	174:23:6368:6377	10171275	0	True				
ANR	10171848	ParameterType	uint16 *		10171275	0					
ANR	10171849	Identifier	wp		10171275	1					
ANR	10171850	Parameter	int n	174:35:6380:6384	10171275	1	True				
ANR	10171851	ParameterType	int		10171275	0					
ANR	10171852	Identifier	n		10171275	1					
ANR	10171853	Parameter	int stride	174:42:6387:6396	10171275	2	True				
ANR	10171854	ParameterType	int		10171275	0					
ANR	10171855	Identifier	stride		10171275	1					
ANR	10171856	Parameter	int16 * op	174:54:6399:6407	10171275	3	True				
ANR	10171857	ParameterType	int16 *		10171275	0					
ANR	10171858	Identifier	op		10171275	1					
ANR	10171859	Parameter	float * ToLinearF	175:1:6411:6426	10171275	4	True				
ANR	10171860	ParameterType	float *		10171275	0					
ANR	10171861	Identifier	ToLinearF		10171275	1					
ANR	10171862	CFGEntryNode	ENTRY		10171275		True				
ANR	10171863	CFGExitNode	EXIT		10171275		True				
ANR	10171864	Symbol	op		10171275						
ANR	10171865	Symbol	* stride		10171275						
ANR	10171866	Symbol	* mask		10171275						
ANR	10171867	Symbol	cg		10171275						
ANR	10171868	Symbol	* op		10171275						
ANR	10171869	Symbol	* * wp		10171275						
ANR	10171870	Symbol	stride		10171275						
ANR	10171871	Symbol	* * stride		10171275						
ANR	10171872	Symbol	n		10171275						
ANR	10171873	Symbol	cr		10171275						
ANR	10171874	Symbol	CODE_MASK		10171275						
ANR	10171875	Symbol	CLAMP12		10171275						
ANR	10171876	Symbol	wp		10171275						
ANR	10171877	Symbol	SCALE12		10171275						
ANR	10171878	Symbol	ToLinearF		10171275						
ANR	10171879	Symbol	t0		10171275						
ANR	10171880	Symbol	* wp		10171275						
ANR	10171881	Symbol	t1		10171275						
ANR	10171882	Symbol	ca		10171275						
ANR	10171883	Symbol	t2		10171275						
ANR	10171884	Symbol	* ToLinearF		10171275						
ANR	10171885	Symbol	cb		10171275						
ANR	10171886	Symbol	mask		10171275						
ANR	10171887	Symbol	t3		10171275						
ANR	10171888	Function	horizontalAccumulate16	241:0:8208:9446							
ANR	10171889	FunctionDef	"horizontalAccumulate16 (uint16 * wp , int n , int stride , uint16 * op , uint16 * ToLinear16)"		10171888	0					
ANR	10171890	CompoundStatement		244:0:8307:9446	10171888	0					
ANR	10171891	Statement	register	245:4:8313:8320	10171888	0	True				
ANR	10171892	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	245:13:8322:8356	10171888	1	True				
ANR	10171893	IdentifierDecl	cr		10171888	0					
ANR	10171894	IdentifierDeclType	unsigned int		10171888	0					
ANR	10171895	Identifier	cr		10171888	1					
ANR	10171896	IdentifierDecl	cg		10171888	1					
ANR	10171897	IdentifierDeclType	unsigned int		10171888	0					
ANR	10171898	Identifier	cg		10171888	1					
ANR	10171899	IdentifierDecl	cb		10171888	2					
ANR	10171900	IdentifierDeclType	unsigned int		10171888	0					
ANR	10171901	Identifier	cb		10171888	1					
ANR	10171902	IdentifierDecl	ca		10171888	3					
ANR	10171903	IdentifierDeclType	unsigned int		10171888	0					
ANR	10171904	Identifier	ca		10171888	1					
ANR	10171905	IdentifierDecl	mask		10171888	4					
ANR	10171906	IdentifierDeclType	unsigned int		10171888	0					
ANR	10171907	Identifier	mask		10171888	1					
ANR	10171908	IfStatement	if ( n >= stride )		10171888	2					
ANR	10171909	Condition	n >= stride	247:8:8367:8377	10171888	0	True				
ANR	10171910	RelationalExpression	n >= stride		10171888	0		>=			
ANR	10171911	Identifier	n		10171888	0					
ANR	10171912	Identifier	stride		10171888	1					
ANR	10171913	CompoundStatement		4:21:72:72	10171888	1					
ANR	10171914	ExpressionStatement	mask = CODE_MASK	248:1:8383:8399	10171888	0	True				
ANR	10171915	AssignmentExpression	mask = CODE_MASK		10171888	0		=			
ANR	10171916	Identifier	mask		10171888	0					
ANR	10171917	Identifier	CODE_MASK		10171888	1					
ANR	10171918	IfStatement	if ( stride == 3 )		10171888	1					
ANR	10171919	Condition	stride == 3	249:5:8406:8416	10171888	0	True				
ANR	10171920	EqualityExpression	stride == 3		10171888	0		==			
ANR	10171921	Identifier	stride		10171888	0					
ANR	10171922	PrimaryExpression	3		10171888	1					
ANR	10171923	CompoundStatement		6:18:111:111	10171888	1					
ANR	10171924	ExpressionStatement	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]	250:5:8426:8465	10171888	0	True				
ANR	10171925	AssignmentExpression	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		10171888	0		=			
ANR	10171926	ArrayIndexing	op [ 0 ]		10171888	0					
ANR	10171927	Identifier	op		10171888	0					
ANR	10171928	PrimaryExpression	0		10171888	1					
ANR	10171929	ArrayIndexing	ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		10171888	1					
ANR	10171930	Identifier	ToLinear16		10171888	0					
ANR	10171931	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10171888	1		=			
ANR	10171932	Identifier	cr		10171888	0					
ANR	10171933	BitAndExpression	wp [ 0 ] & mask		10171888	1		&			
ANR	10171934	ArrayIndexing	wp [ 0 ]		10171888	0					
ANR	10171935	Identifier	wp		10171888	0					
ANR	10171936	PrimaryExpression	0		10171888	1					
ANR	10171937	Identifier	mask		10171888	1					
ANR	10171938	ExpressionStatement	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]	251:5:8472:8511	10171888	1	True				
ANR	10171939	AssignmentExpression	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		10171888	0		=			
ANR	10171940	ArrayIndexing	op [ 1 ]		10171888	0					
ANR	10171941	Identifier	op		10171888	0					
ANR	10171942	PrimaryExpression	1		10171888	1					
ANR	10171943	ArrayIndexing	ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		10171888	1					
ANR	10171944	Identifier	ToLinear16		10171888	0					
ANR	10171945	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10171888	1		=			
ANR	10171946	Identifier	cg		10171888	0					
ANR	10171947	BitAndExpression	wp [ 1 ] & mask		10171888	1		&			
ANR	10171948	ArrayIndexing	wp [ 1 ]		10171888	0					
ANR	10171949	Identifier	wp		10171888	0					
ANR	10171950	PrimaryExpression	1		10171888	1					
ANR	10171951	Identifier	mask		10171888	1					
ANR	10171952	ExpressionStatement	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]	252:5:8518:8557	10171888	2	True				
ANR	10171953	AssignmentExpression	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		10171888	0		=			
ANR	10171954	ArrayIndexing	op [ 2 ]		10171888	0					
ANR	10171955	Identifier	op		10171888	0					
ANR	10171956	PrimaryExpression	2		10171888	1					
ANR	10171957	ArrayIndexing	ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		10171888	1					
ANR	10171958	Identifier	ToLinear16		10171888	0					
ANR	10171959	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10171888	1		=			
ANR	10171960	Identifier	cb		10171888	0					
ANR	10171961	BitAndExpression	wp [ 2 ] & mask		10171888	1		&			
ANR	10171962	ArrayIndexing	wp [ 2 ]		10171888	0					
ANR	10171963	Identifier	wp		10171888	0					
ANR	10171964	PrimaryExpression	2		10171888	1					
ANR	10171965	Identifier	mask		10171888	1					
ANR	10171966	ExpressionStatement	n -= 3	253:5:8564:8570	10171888	3	True				
ANR	10171967	AssignmentExpression	n -= 3		10171888	0		-=			
ANR	10171968	Identifier	n		10171888	0					
ANR	10171969	PrimaryExpression	3		10171888	1					
ANR	10171970	WhileStatement	while ( n > 0 )		10171888	4					
ANR	10171971	Condition	n > 0	254:12:8584:8588	10171888	0	True				
ANR	10171972	RelationalExpression	n > 0		10171888	0		>			
ANR	10171973	Identifier	n		10171888	0					
ANR	10171974	PrimaryExpression	0		10171888	1					
ANR	10171975	CompoundStatement		11:19:283:283	10171888	1					
ANR	10171976	ExpressionStatement	wp += 3	255:2:8595:8602	10171888	0	True				
ANR	10171977	AssignmentExpression	wp += 3		10171888	0		+=			
ANR	10171978	Identifier	wp		10171888	0					
ANR	10171979	PrimaryExpression	3		10171888	1					
ANR	10171980	ExpressionStatement	op += 3	256:2:8606:8613	10171888	1	True				
ANR	10171981	AssignmentExpression	op += 3		10171888	0		+=			
ANR	10171982	Identifier	op		10171888	0					
ANR	10171983	PrimaryExpression	3		10171888	1					
ANR	10171984	ExpressionStatement	n -= 3	257:2:8617:8623	10171888	2	True				
ANR	10171985	AssignmentExpression	n -= 3		10171888	0		-=			
ANR	10171986	Identifier	n		10171888	0					
ANR	10171987	PrimaryExpression	3		10171888	1					
ANR	10171988	ExpressionStatement	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]	258:2:8627:8667	10171888	3	True				
ANR	10171989	AssignmentExpression	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		10171888	0		=			
ANR	10171990	ArrayIndexing	op [ 0 ]		10171888	0					
ANR	10171991	Identifier	op		10171888	0					
ANR	10171992	PrimaryExpression	0		10171888	1					
ANR	10171993	ArrayIndexing	ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		10171888	1					
ANR	10171994	Identifier	ToLinear16		10171888	0					
ANR	10171995	BitAndExpression	( cr += wp [ 0 ] ) & mask		10171888	1		&			
ANR	10171996	AssignmentExpression	cr += wp [ 0 ]		10171888	0		+=			
ANR	10171997	Identifier	cr		10171888	0					
ANR	10171998	ArrayIndexing	wp [ 0 ]		10171888	1					
ANR	10171999	Identifier	wp		10171888	0					
ANR	10172000	PrimaryExpression	0		10171888	1					
ANR	10172001	Identifier	mask		10171888	1					
ANR	10172002	ExpressionStatement	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]	259:2:8671:8711	10171888	4	True				
ANR	10172003	AssignmentExpression	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		10171888	0		=			
ANR	10172004	ArrayIndexing	op [ 1 ]		10171888	0					
ANR	10172005	Identifier	op		10171888	0					
ANR	10172006	PrimaryExpression	1		10171888	1					
ANR	10172007	ArrayIndexing	ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		10171888	1					
ANR	10172008	Identifier	ToLinear16		10171888	0					
ANR	10172009	BitAndExpression	( cg += wp [ 1 ] ) & mask		10171888	1		&			
ANR	10172010	AssignmentExpression	cg += wp [ 1 ]		10171888	0		+=			
ANR	10172011	Identifier	cg		10171888	0					
ANR	10172012	ArrayIndexing	wp [ 1 ]		10171888	1					
ANR	10172013	Identifier	wp		10171888	0					
ANR	10172014	PrimaryExpression	1		10171888	1					
ANR	10172015	Identifier	mask		10171888	1					
ANR	10172016	ExpressionStatement	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]	260:2:8715:8755	10171888	5	True				
ANR	10172017	AssignmentExpression	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		10171888	0		=			
ANR	10172018	ArrayIndexing	op [ 2 ]		10171888	0					
ANR	10172019	Identifier	op		10171888	0					
ANR	10172020	PrimaryExpression	2		10171888	1					
ANR	10172021	ArrayIndexing	ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		10171888	1					
ANR	10172022	Identifier	ToLinear16		10171888	0					
ANR	10172023	BitAndExpression	( cb += wp [ 2 ] ) & mask		10171888	1		&			
ANR	10172024	AssignmentExpression	cb += wp [ 2 ]		10171888	0		+=			
ANR	10172025	Identifier	cb		10171888	0					
ANR	10172026	ArrayIndexing	wp [ 2 ]		10171888	1					
ANR	10172027	Identifier	wp		10171888	0					
ANR	10172028	PrimaryExpression	2		10171888	1					
ANR	10172029	Identifier	mask		10171888	1					
ANR	10172030	ElseStatement	else		10171888	0					
ANR	10172031	IfStatement	if ( stride == 4 )		10171888	0					
ANR	10172032	Condition	stride == 4	262:12:8776:8786	10171888	0	True				
ANR	10172033	EqualityExpression	stride == 4		10171888	0		==			
ANR	10172034	Identifier	stride		10171888	0					
ANR	10172035	PrimaryExpression	4		10171888	1					
ANR	10172036	CompoundStatement		19:25:481:481	10171888	1					
ANR	10172037	ExpressionStatement	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]	263:5:8796:8835	10171888	0	True				
ANR	10172038	AssignmentExpression	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		10171888	0		=			
ANR	10172039	ArrayIndexing	op [ 0 ]		10171888	0					
ANR	10172040	Identifier	op		10171888	0					
ANR	10172041	PrimaryExpression	0		10171888	1					
ANR	10172042	ArrayIndexing	ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		10171888	1					
ANR	10172043	Identifier	ToLinear16		10171888	0					
ANR	10172044	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10171888	1		=			
ANR	10172045	Identifier	cr		10171888	0					
ANR	10172046	BitAndExpression	wp [ 0 ] & mask		10171888	1		&			
ANR	10172047	ArrayIndexing	wp [ 0 ]		10171888	0					
ANR	10172048	Identifier	wp		10171888	0					
ANR	10172049	PrimaryExpression	0		10171888	1					
ANR	10172050	Identifier	mask		10171888	1					
ANR	10172051	ExpressionStatement	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]	264:5:8842:8881	10171888	1	True				
ANR	10172052	AssignmentExpression	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		10171888	0		=			
ANR	10172053	ArrayIndexing	op [ 1 ]		10171888	0					
ANR	10172054	Identifier	op		10171888	0					
ANR	10172055	PrimaryExpression	1		10171888	1					
ANR	10172056	ArrayIndexing	ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		10171888	1					
ANR	10172057	Identifier	ToLinear16		10171888	0					
ANR	10172058	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10171888	1		=			
ANR	10172059	Identifier	cg		10171888	0					
ANR	10172060	BitAndExpression	wp [ 1 ] & mask		10171888	1		&			
ANR	10172061	ArrayIndexing	wp [ 1 ]		10171888	0					
ANR	10172062	Identifier	wp		10171888	0					
ANR	10172063	PrimaryExpression	1		10171888	1					
ANR	10172064	Identifier	mask		10171888	1					
ANR	10172065	ExpressionStatement	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]	265:5:8888:8927	10171888	2	True				
ANR	10172066	AssignmentExpression	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		10171888	0		=			
ANR	10172067	ArrayIndexing	op [ 2 ]		10171888	0					
ANR	10172068	Identifier	op		10171888	0					
ANR	10172069	PrimaryExpression	2		10171888	1					
ANR	10172070	ArrayIndexing	ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		10171888	1					
ANR	10172071	Identifier	ToLinear16		10171888	0					
ANR	10172072	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10171888	1		=			
ANR	10172073	Identifier	cb		10171888	0					
ANR	10172074	BitAndExpression	wp [ 2 ] & mask		10171888	1		&			
ANR	10172075	ArrayIndexing	wp [ 2 ]		10171888	0					
ANR	10172076	Identifier	wp		10171888	0					
ANR	10172077	PrimaryExpression	2		10171888	1					
ANR	10172078	Identifier	mask		10171888	1					
ANR	10172079	ExpressionStatement	op [ 3 ] = ToLinear16 [ ca = ( wp [ 3 ] & mask ) ]	266:5:8934:8973	10171888	3	True				
ANR	10172080	AssignmentExpression	op [ 3 ] = ToLinear16 [ ca = ( wp [ 3 ] & mask ) ]		10171888	0		=			
ANR	10172081	ArrayIndexing	op [ 3 ]		10171888	0					
ANR	10172082	Identifier	op		10171888	0					
ANR	10172083	PrimaryExpression	3		10171888	1					
ANR	10172084	ArrayIndexing	ToLinear16 [ ca = ( wp [ 3 ] & mask ) ]		10171888	1					
ANR	10172085	Identifier	ToLinear16		10171888	0					
ANR	10172086	AssignmentExpression	ca = ( wp [ 3 ] & mask )		10171888	1		=			
ANR	10172087	Identifier	ca		10171888	0					
ANR	10172088	BitAndExpression	wp [ 3 ] & mask		10171888	1		&			
ANR	10172089	ArrayIndexing	wp [ 3 ]		10171888	0					
ANR	10172090	Identifier	wp		10171888	0					
ANR	10172091	PrimaryExpression	3		10171888	1					
ANR	10172092	Identifier	mask		10171888	1					
ANR	10172093	ExpressionStatement	n -= 4	267:5:8980:8986	10171888	4	True				
ANR	10172094	AssignmentExpression	n -= 4		10171888	0		-=			
ANR	10172095	Identifier	n		10171888	0					
ANR	10172096	PrimaryExpression	4		10171888	1					
ANR	10172097	WhileStatement	while ( n > 0 )		10171888	5					
ANR	10172098	Condition	n > 0	268:12:9000:9004	10171888	0	True				
ANR	10172099	RelationalExpression	n > 0		10171888	0		>			
ANR	10172100	Identifier	n		10171888	0					
ANR	10172101	PrimaryExpression	0		10171888	1					
ANR	10172102	CompoundStatement		25:19:699:699	10171888	1					
ANR	10172103	ExpressionStatement	wp += 4	269:2:9011:9018	10171888	0	True				
ANR	10172104	AssignmentExpression	wp += 4		10171888	0		+=			
ANR	10172105	Identifier	wp		10171888	0					
ANR	10172106	PrimaryExpression	4		10171888	1					
ANR	10172107	ExpressionStatement	op += 4	270:2:9022:9029	10171888	1	True				
ANR	10172108	AssignmentExpression	op += 4		10171888	0		+=			
ANR	10172109	Identifier	op		10171888	0					
ANR	10172110	PrimaryExpression	4		10171888	1					
ANR	10172111	ExpressionStatement	n -= 4	271:2:9033:9039	10171888	2	True				
ANR	10172112	AssignmentExpression	n -= 4		10171888	0		-=			
ANR	10172113	Identifier	n		10171888	0					
ANR	10172114	PrimaryExpression	4		10171888	1					
ANR	10172115	ExpressionStatement	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]	272:2:9043:9083	10171888	3	True				
ANR	10172116	AssignmentExpression	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		10171888	0		=			
ANR	10172117	ArrayIndexing	op [ 0 ]		10171888	0					
ANR	10172118	Identifier	op		10171888	0					
ANR	10172119	PrimaryExpression	0		10171888	1					
ANR	10172120	ArrayIndexing	ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		10171888	1					
ANR	10172121	Identifier	ToLinear16		10171888	0					
ANR	10172122	BitAndExpression	( cr += wp [ 0 ] ) & mask		10171888	1		&			
ANR	10172123	AssignmentExpression	cr += wp [ 0 ]		10171888	0		+=			
ANR	10172124	Identifier	cr		10171888	0					
ANR	10172125	ArrayIndexing	wp [ 0 ]		10171888	1					
ANR	10172126	Identifier	wp		10171888	0					
ANR	10172127	PrimaryExpression	0		10171888	1					
ANR	10172128	Identifier	mask		10171888	1					
ANR	10172129	ExpressionStatement	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]	273:2:9087:9127	10171888	4	True				
ANR	10172130	AssignmentExpression	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		10171888	0		=			
ANR	10172131	ArrayIndexing	op [ 1 ]		10171888	0					
ANR	10172132	Identifier	op		10171888	0					
ANR	10172133	PrimaryExpression	1		10171888	1					
ANR	10172134	ArrayIndexing	ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		10171888	1					
ANR	10172135	Identifier	ToLinear16		10171888	0					
ANR	10172136	BitAndExpression	( cg += wp [ 1 ] ) & mask		10171888	1		&			
ANR	10172137	AssignmentExpression	cg += wp [ 1 ]		10171888	0		+=			
ANR	10172138	Identifier	cg		10171888	0					
ANR	10172139	ArrayIndexing	wp [ 1 ]		10171888	1					
ANR	10172140	Identifier	wp		10171888	0					
ANR	10172141	PrimaryExpression	1		10171888	1					
ANR	10172142	Identifier	mask		10171888	1					
ANR	10172143	ExpressionStatement	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]	274:2:9131:9171	10171888	5	True				
ANR	10172144	AssignmentExpression	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		10171888	0		=			
ANR	10172145	ArrayIndexing	op [ 2 ]		10171888	0					
ANR	10172146	Identifier	op		10171888	0					
ANR	10172147	PrimaryExpression	2		10171888	1					
ANR	10172148	ArrayIndexing	ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		10171888	1					
ANR	10172149	Identifier	ToLinear16		10171888	0					
ANR	10172150	BitAndExpression	( cb += wp [ 2 ] ) & mask		10171888	1		&			
ANR	10172151	AssignmentExpression	cb += wp [ 2 ]		10171888	0		+=			
ANR	10172152	Identifier	cb		10171888	0					
ANR	10172153	ArrayIndexing	wp [ 2 ]		10171888	1					
ANR	10172154	Identifier	wp		10171888	0					
ANR	10172155	PrimaryExpression	2		10171888	1					
ANR	10172156	Identifier	mask		10171888	1					
ANR	10172157	ExpressionStatement	op [ 3 ] = ToLinear16 [ ( ca += wp [ 3 ] ) & mask ]	275:2:9175:9215	10171888	6	True				
ANR	10172158	AssignmentExpression	op [ 3 ] = ToLinear16 [ ( ca += wp [ 3 ] ) & mask ]		10171888	0		=			
ANR	10172159	ArrayIndexing	op [ 3 ]		10171888	0					
ANR	10172160	Identifier	op		10171888	0					
ANR	10172161	PrimaryExpression	3		10171888	1					
ANR	10172162	ArrayIndexing	ToLinear16 [ ( ca += wp [ 3 ] ) & mask ]		10171888	1					
ANR	10172163	Identifier	ToLinear16		10171888	0					
ANR	10172164	BitAndExpression	( ca += wp [ 3 ] ) & mask		10171888	1		&			
ANR	10172165	AssignmentExpression	ca += wp [ 3 ]		10171888	0		+=			
ANR	10172166	Identifier	ca		10171888	0					
ANR	10172167	ArrayIndexing	wp [ 3 ]		10171888	1					
ANR	10172168	Identifier	wp		10171888	0					
ANR	10172169	PrimaryExpression	3		10171888	1					
ANR	10172170	Identifier	mask		10171888	1					
ANR	10172171	ElseStatement	else		10171888	0					
ANR	10172172	CompoundStatement		34:8:924:924	10171888	0					
ANR	10172173	Statement	REPEAT	278:5:9239:9244	10171888	0	True				
ANR	10172174	Statement	(	278:11:9245:9245	10171888	1	True				
ANR	10172175	ExpressionStatement	"stride , * op = ToLinear16 [ * wp & mask ]"	278:12:9246:9280	10171888	2	True				
ANR	10172176	Expression	"stride , * op = ToLinear16 [ * wp & mask ]"		10171888	0					
ANR	10172177	Identifier	stride		10171888	0					
ANR	10172178	AssignmentExpression	* op = ToLinear16 [ * wp & mask ]		10171888	1		=			
ANR	10172179	UnaryOperationExpression	* op		10171888	0					
ANR	10172180	UnaryOperator	*		10171888	0					
ANR	10172181	Identifier	op		10171888	1					
ANR	10172182	ArrayIndexing	ToLinear16 [ * wp & mask ]		10171888	1					
ANR	10172183	Identifier	ToLinear16		10171888	0					
ANR	10172184	BitAndExpression	* wp & mask		10171888	1		&			
ANR	10172185	UnaryOperationExpression	* wp		10171888	0					
ANR	10172186	UnaryOperator	*		10171888	0					
ANR	10172187	Identifier	wp		10171888	1					
ANR	10172188	Identifier	mask		10171888	1					
ANR	10172189	ExpressionStatement	wp ++	278:48:9282:9286	10171888	3	True				
ANR	10172190	PostIncDecOperationExpression	wp ++		10171888	0					
ANR	10172191	Identifier	wp		10171888	0					
ANR	10172192	IncDec	++		10171888	1					
ANR	10172193	Statement	op	278:54:9288:9289	10171888	4	True				
ANR	10172194	Statement	++	278:56:9290:9291	10171888	5	True				
ANR	10172195	Statement	)	278:58:9292:9292	10171888	6	True				
ANR	10172196	ExpressionStatement	n -= stride	279:5:9299:9310	10171888	7	True				
ANR	10172197	AssignmentExpression	n -= stride		10171888	0		-=			
ANR	10172198	Identifier	n		10171888	0					
ANR	10172199	Identifier	stride		10171888	1					
ANR	10172200	WhileStatement	while ( n > 0 )		10171888	8					
ANR	10172201	Condition	n > 0	280:12:9324:9328	10171888	0	True				
ANR	10172202	RelationalExpression	n > 0		10171888	0		>			
ANR	10172203	Identifier	n		10171888	0					
ANR	10172204	PrimaryExpression	0		10171888	1					
ANR	10172205	CompoundStatement		37:19:1023:1023	10171888	1					
ANR	10172206	Statement	REPEAT	281:2:9335:9340	10171888	0	True				
ANR	10172207	Statement	(	281:8:9341:9341	10171888	1	True				
ANR	10172208	ExpressionStatement	"stride , wp [ stride ] += * wp"	281:9:9342:9373	10171888	2	True				
ANR	10172209	Expression	"stride , wp [ stride ] += * wp"		10171888	0					
ANR	10172210	Identifier	stride		10171888	0					
ANR	10172211	AssignmentExpression	wp [ stride ] += * wp		10171888	1		+=			
ANR	10172212	ArrayIndexing	wp [ stride ]		10171888	0					
ANR	10172213	Identifier	wp		10171888	0					
ANR	10172214	Identifier	stride		10171888	1					
ANR	10172215	UnaryOperationExpression	* wp		10171888	1					
ANR	10172216	UnaryOperator	*		10171888	0					
ANR	10172217	Identifier	wp		10171888	1					
ANR	10172218	ExpressionStatement	* op = ToLinear16 [ * wp & mask ]	282:25:9375:9401	10171888	3	True				
ANR	10172219	AssignmentExpression	* op = ToLinear16 [ * wp & mask ]		10171888	0		=			
ANR	10172220	UnaryOperationExpression	* op		10171888	0					
ANR	10172221	UnaryOperator	*		10171888	0					
ANR	10172222	Identifier	op		10171888	1					
ANR	10172223	ArrayIndexing	ToLinear16 [ * wp & mask ]		10171888	1					
ANR	10172224	Identifier	ToLinear16		10171888	0					
ANR	10172225	BitAndExpression	* wp & mask		10171888	1		&			
ANR	10172226	UnaryOperationExpression	* wp		10171888	0					
ANR	10172227	UnaryOperator	*		10171888	0					
ANR	10172228	Identifier	wp		10171888	1					
ANR	10172229	Identifier	mask		10171888	1					
ANR	10172230	ExpressionStatement	wp ++	282:53:9403:9407	10171888	4	True				
ANR	10172231	PostIncDecOperationExpression	wp ++		10171888	0					
ANR	10172232	Identifier	wp		10171888	0					
ANR	10172233	IncDec	++		10171888	1					
ANR	10172234	Statement	op	282:59:9409:9410	10171888	5	True				
ANR	10172235	Statement	++	282:61:9411:9412	10171888	6	True				
ANR	10172236	Statement	)	282:63:9413:9413	10171888	7	True				
ANR	10172237	ExpressionStatement	n -= stride	283:2:9417:9428	10171888	8	True				
ANR	10172238	AssignmentExpression	n -= stride		10171888	0		-=			
ANR	10172239	Identifier	n		10171888	0					
ANR	10172240	Identifier	stride		10171888	1					
ANR	10172241	ReturnType	static void		10171888	1					
ANR	10172242	Identifier	horizontalAccumulate16		10171888	2					
ANR	10172243	ParameterList	"uint16 * wp , int n , int stride , uint16 * op , uint16 * ToLinear16"		10171888	3					
ANR	10172244	Parameter	uint16 * wp	242:23:8243:8252	10171888	0	True				
ANR	10172245	ParameterType	uint16 *		10171888	0					
ANR	10172246	Identifier	wp		10171888	1					
ANR	10172247	Parameter	int n	242:35:8255:8259	10171888	1	True				
ANR	10172248	ParameterType	int		10171888	0					
ANR	10172249	Identifier	n		10171888	1					
ANR	10172250	Parameter	int stride	242:42:8262:8271	10171888	2	True				
ANR	10172251	ParameterType	int		10171888	0					
ANR	10172252	Identifier	stride		10171888	1					
ANR	10172253	Parameter	uint16 * op	242:54:8274:8283	10171888	3	True				
ANR	10172254	ParameterType	uint16 *		10171888	0					
ANR	10172255	Identifier	op		10171888	1					
ANR	10172256	Parameter	uint16 * ToLinear16	243:1:8287:8304	10171888	4	True				
ANR	10172257	ParameterType	uint16 *		10171888	0					
ANR	10172258	Identifier	ToLinear16		10171888	1					
ANR	10172259	CFGEntryNode	ENTRY		10171888		True				
ANR	10172260	CFGExitNode	EXIT		10171888		True				
ANR	10172261	Symbol	op		10171888						
ANR	10172262	Symbol	* ToLinear16		10171888						
ANR	10172263	Symbol	* stride		10171888						
ANR	10172264	Symbol	* mask		10171888						
ANR	10172265	Symbol	cg		10171888						
ANR	10172266	Symbol	* op		10171888						
ANR	10172267	Symbol	* * wp		10171888						
ANR	10172268	Symbol	stride		10171888						
ANR	10172269	Symbol	n		10171888						
ANR	10172270	Symbol	cr		10171888						
ANR	10172271	Symbol	CODE_MASK		10171888						
ANR	10172272	Symbol	wp		10171888						
ANR	10172273	Symbol	ToLinear16		10171888						
ANR	10172274	Symbol	* wp		10171888						
ANR	10172275	Symbol	ca		10171888						
ANR	10172276	Symbol	cb		10171888						
ANR	10172277	Symbol	mask		10171888						
ANR	10172278	Function	horizontalAccumulate11	293:0:9542:10633							
ANR	10172279	FunctionDef	"horizontalAccumulate11 (uint16 * wp , int n , int stride , uint16 * op)"		10172278	0					
ANR	10172280	CompoundStatement		295:0:9620:10633	10172278	0					
ANR	10172281	Statement	register	296:4:9626:9633	10172278	0	True				
ANR	10172282	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	296:13:9635:9668	10172278	1	True				
ANR	10172283	IdentifierDecl	cr		10172278	0					
ANR	10172284	IdentifierDeclType	unsigned int		10172278	0					
ANR	10172285	Identifier	cr		10172278	1					
ANR	10172286	IdentifierDecl	cg		10172278	1					
ANR	10172287	IdentifierDeclType	unsigned int		10172278	0					
ANR	10172288	Identifier	cg		10172278	1					
ANR	10172289	IdentifierDecl	cb		10172278	2					
ANR	10172290	IdentifierDeclType	unsigned int		10172278	0					
ANR	10172291	Identifier	cb		10172278	1					
ANR	10172292	IdentifierDecl	ca		10172278	3					
ANR	10172293	IdentifierDeclType	unsigned int		10172278	0					
ANR	10172294	Identifier	ca		10172278	1					
ANR	10172295	IdentifierDecl	mask		10172278	4					
ANR	10172296	IdentifierDeclType	unsigned int		10172278	0					
ANR	10172297	Identifier	mask		10172278	1					
ANR	10172298	IfStatement	if ( n >= stride )		10172278	2					
ANR	10172299	Condition	n >= stride	298:8:9679:9689	10172278	0	True				
ANR	10172300	RelationalExpression	n >= stride		10172278	0		>=			
ANR	10172301	Identifier	n		10172278	0					
ANR	10172302	Identifier	stride		10172278	1					
ANR	10172303	CompoundStatement		4:21:71:71	10172278	1					
ANR	10172304	ExpressionStatement	mask = CODE_MASK	299:1:9695:9711	10172278	0	True				
ANR	10172305	AssignmentExpression	mask = CODE_MASK		10172278	0		=			
ANR	10172306	Identifier	mask		10172278	0					
ANR	10172307	Identifier	CODE_MASK		10172278	1					
ANR	10172308	IfStatement	if ( stride == 3 )		10172278	1					
ANR	10172309	Condition	stride == 3	300:5:9718:9728	10172278	0	True				
ANR	10172310	EqualityExpression	stride == 3		10172278	0		==			
ANR	10172311	Identifier	stride		10172278	0					
ANR	10172312	PrimaryExpression	3		10172278	1					
ANR	10172313	CompoundStatement		6:18:110:110	10172278	1					
ANR	10172314	ExpressionStatement	op [ 0 ] = wp [ 0 ]	301:5:9738:9751	10172278	0	True				
ANR	10172315	AssignmentExpression	op [ 0 ] = wp [ 0 ]		10172278	0		=			
ANR	10172316	ArrayIndexing	op [ 0 ]		10172278	0					
ANR	10172317	Identifier	op		10172278	0					
ANR	10172318	PrimaryExpression	0		10172278	1					
ANR	10172319	ArrayIndexing	wp [ 0 ]		10172278	1					
ANR	10172320	Identifier	wp		10172278	0					
ANR	10172321	PrimaryExpression	0		10172278	1					
ANR	10172322	ExpressionStatement	op [ 1 ] = wp [ 1 ]	301:21:9754:9767	10172278	1	True				
ANR	10172323	AssignmentExpression	op [ 1 ] = wp [ 1 ]		10172278	0		=			
ANR	10172324	ArrayIndexing	op [ 1 ]		10172278	0					
ANR	10172325	Identifier	op		10172278	0					
ANR	10172326	PrimaryExpression	1		10172278	1					
ANR	10172327	ArrayIndexing	wp [ 1 ]		10172278	1					
ANR	10172328	Identifier	wp		10172278	0					
ANR	10172329	PrimaryExpression	1		10172278	1					
ANR	10172330	ExpressionStatement	op [ 2 ] = wp [ 2 ]	301:37:9770:9783	10172278	2	True				
ANR	10172331	AssignmentExpression	op [ 2 ] = wp [ 2 ]		10172278	0		=			
ANR	10172332	ArrayIndexing	op [ 2 ]		10172278	0					
ANR	10172333	Identifier	op		10172278	0					
ANR	10172334	PrimaryExpression	2		10172278	1					
ANR	10172335	ArrayIndexing	wp [ 2 ]		10172278	1					
ANR	10172336	Identifier	wp		10172278	0					
ANR	10172337	PrimaryExpression	2		10172278	1					
ANR	10172338	ExpressionStatement	cr = wp [ 0 ]	302:12:9797:9807	10172278	3	True				
ANR	10172339	AssignmentExpression	cr = wp [ 0 ]		10172278	0		=			
ANR	10172340	Identifier	cr		10172278	0					
ANR	10172341	ArrayIndexing	wp [ 0 ]		10172278	1					
ANR	10172342	Identifier	wp		10172278	0					
ANR	10172343	PrimaryExpression	0		10172278	1					
ANR	10172344	ExpressionStatement	cg = wp [ 1 ]	302:25:9810:9820	10172278	4	True				
ANR	10172345	AssignmentExpression	cg = wp [ 1 ]		10172278	0		=			
ANR	10172346	Identifier	cg		10172278	0					
ANR	10172347	ArrayIndexing	wp [ 1 ]		10172278	1					
ANR	10172348	Identifier	wp		10172278	0					
ANR	10172349	PrimaryExpression	1		10172278	1					
ANR	10172350	ExpressionStatement	cb = wp [ 2 ]	302:38:9823:9833	10172278	5	True				
ANR	10172351	AssignmentExpression	cb = wp [ 2 ]		10172278	0		=			
ANR	10172352	Identifier	cb		10172278	0					
ANR	10172353	ArrayIndexing	wp [ 2 ]		10172278	1					
ANR	10172354	Identifier	wp		10172278	0					
ANR	10172355	PrimaryExpression	2		10172278	1					
ANR	10172356	ExpressionStatement	n -= 3	303:5:9840:9846	10172278	6	True				
ANR	10172357	AssignmentExpression	n -= 3		10172278	0		-=			
ANR	10172358	Identifier	n		10172278	0					
ANR	10172359	PrimaryExpression	3		10172278	1					
ANR	10172360	WhileStatement	while ( n > 0 )		10172278	7					
ANR	10172361	Condition	n > 0	304:12:9860:9864	10172278	0	True				
ANR	10172362	RelationalExpression	n > 0		10172278	0		>			
ANR	10172363	Identifier	n		10172278	0					
ANR	10172364	PrimaryExpression	0		10172278	1					
ANR	10172365	CompoundStatement		10:19:246:246	10172278	1					
ANR	10172366	ExpressionStatement	wp += 3	305:2:9871:9878	10172278	0	True				
ANR	10172367	AssignmentExpression	wp += 3		10172278	0		+=			
ANR	10172368	Identifier	wp		10172278	0					
ANR	10172369	PrimaryExpression	3		10172278	1					
ANR	10172370	ExpressionStatement	op += 3	306:2:9882:9889	10172278	1	True				
ANR	10172371	AssignmentExpression	op += 3		10172278	0		+=			
ANR	10172372	Identifier	op		10172278	0					
ANR	10172373	PrimaryExpression	3		10172278	1					
ANR	10172374	ExpressionStatement	n -= 3	307:2:9893:9899	10172278	2	True				
ANR	10172375	AssignmentExpression	n -= 3		10172278	0		-=			
ANR	10172376	Identifier	n		10172278	0					
ANR	10172377	PrimaryExpression	3		10172278	1					
ANR	10172378	ExpressionStatement	op [ 0 ] = ( uint16 ) ( ( cr += wp [ 0 ] ) & mask )	308:2:9903:9941	10172278	3	True				
ANR	10172379	AssignmentExpression	op [ 0 ] = ( uint16 ) ( ( cr += wp [ 0 ] ) & mask )		10172278	0		=			
ANR	10172380	ArrayIndexing	op [ 0 ]		10172278	0					
ANR	10172381	Identifier	op		10172278	0					
ANR	10172382	PrimaryExpression	0		10172278	1					
ANR	10172383	CastExpression	( uint16 ) ( ( cr += wp [ 0 ] ) & mask )		10172278	1					
ANR	10172384	CastTarget	uint16		10172278	0					
ANR	10172385	BitAndExpression	( cr += wp [ 0 ] ) & mask		10172278	1		&			
ANR	10172386	AssignmentExpression	cr += wp [ 0 ]		10172278	0		+=			
ANR	10172387	Identifier	cr		10172278	0					
ANR	10172388	ArrayIndexing	wp [ 0 ]		10172278	1					
ANR	10172389	Identifier	wp		10172278	0					
ANR	10172390	PrimaryExpression	0		10172278	1					
ANR	10172391	Identifier	mask		10172278	1					
ANR	10172392	ExpressionStatement	op [ 1 ] = ( uint16 ) ( ( cg += wp [ 1 ] ) & mask )	309:2:9945:9983	10172278	4	True				
ANR	10172393	AssignmentExpression	op [ 1 ] = ( uint16 ) ( ( cg += wp [ 1 ] ) & mask )		10172278	0		=			
ANR	10172394	ArrayIndexing	op [ 1 ]		10172278	0					
ANR	10172395	Identifier	op		10172278	0					
ANR	10172396	PrimaryExpression	1		10172278	1					
ANR	10172397	CastExpression	( uint16 ) ( ( cg += wp [ 1 ] ) & mask )		10172278	1					
ANR	10172398	CastTarget	uint16		10172278	0					
ANR	10172399	BitAndExpression	( cg += wp [ 1 ] ) & mask		10172278	1		&			
ANR	10172400	AssignmentExpression	cg += wp [ 1 ]		10172278	0		+=			
ANR	10172401	Identifier	cg		10172278	0					
ANR	10172402	ArrayIndexing	wp [ 1 ]		10172278	1					
ANR	10172403	Identifier	wp		10172278	0					
ANR	10172404	PrimaryExpression	1		10172278	1					
ANR	10172405	Identifier	mask		10172278	1					
ANR	10172406	ExpressionStatement	op [ 2 ] = ( uint16 ) ( ( cb += wp [ 2 ] ) & mask )	310:2:9987:10025	10172278	5	True				
ANR	10172407	AssignmentExpression	op [ 2 ] = ( uint16 ) ( ( cb += wp [ 2 ] ) & mask )		10172278	0		=			
ANR	10172408	ArrayIndexing	op [ 2 ]		10172278	0					
ANR	10172409	Identifier	op		10172278	0					
ANR	10172410	PrimaryExpression	2		10172278	1					
ANR	10172411	CastExpression	( uint16 ) ( ( cb += wp [ 2 ] ) & mask )		10172278	1					
ANR	10172412	CastTarget	uint16		10172278	0					
ANR	10172413	BitAndExpression	( cb += wp [ 2 ] ) & mask		10172278	1		&			
ANR	10172414	AssignmentExpression	cb += wp [ 2 ]		10172278	0		+=			
ANR	10172415	Identifier	cb		10172278	0					
ANR	10172416	ArrayIndexing	wp [ 2 ]		10172278	1					
ANR	10172417	Identifier	wp		10172278	0					
ANR	10172418	PrimaryExpression	2		10172278	1					
ANR	10172419	Identifier	mask		10172278	1					
ANR	10172420	ElseStatement	else		10172278	0					
ANR	10172421	IfStatement	if ( stride == 4 )		10172278	0					
ANR	10172422	Condition	stride == 4	312:12:10046:10056	10172278	0	True				
ANR	10172423	EqualityExpression	stride == 4		10172278	0		==			
ANR	10172424	Identifier	stride		10172278	0					
ANR	10172425	PrimaryExpression	4		10172278	1					
ANR	10172426	CompoundStatement		18:25:438:438	10172278	1					
ANR	10172427	ExpressionStatement	op [ 0 ] = wp [ 0 ]	313:5:10066:10079	10172278	0	True				
ANR	10172428	AssignmentExpression	op [ 0 ] = wp [ 0 ]		10172278	0		=			
ANR	10172429	ArrayIndexing	op [ 0 ]		10172278	0					
ANR	10172430	Identifier	op		10172278	0					
ANR	10172431	PrimaryExpression	0		10172278	1					
ANR	10172432	ArrayIndexing	wp [ 0 ]		10172278	1					
ANR	10172433	Identifier	wp		10172278	0					
ANR	10172434	PrimaryExpression	0		10172278	1					
ANR	10172435	ExpressionStatement	op [ 1 ] = wp [ 1 ]	313:21:10082:10095	10172278	1	True				
ANR	10172436	AssignmentExpression	op [ 1 ] = wp [ 1 ]		10172278	0		=			
ANR	10172437	ArrayIndexing	op [ 1 ]		10172278	0					
ANR	10172438	Identifier	op		10172278	0					
ANR	10172439	PrimaryExpression	1		10172278	1					
ANR	10172440	ArrayIndexing	wp [ 1 ]		10172278	1					
ANR	10172441	Identifier	wp		10172278	0					
ANR	10172442	PrimaryExpression	1		10172278	1					
ANR	10172443	ExpressionStatement	op [ 2 ] = wp [ 2 ]	314:5:10102:10115	10172278	2	True				
ANR	10172444	AssignmentExpression	op [ 2 ] = wp [ 2 ]		10172278	0		=			
ANR	10172445	ArrayIndexing	op [ 2 ]		10172278	0					
ANR	10172446	Identifier	op		10172278	0					
ANR	10172447	PrimaryExpression	2		10172278	1					
ANR	10172448	ArrayIndexing	wp [ 2 ]		10172278	1					
ANR	10172449	Identifier	wp		10172278	0					
ANR	10172450	PrimaryExpression	2		10172278	1					
ANR	10172451	ExpressionStatement	op [ 3 ] = wp [ 3 ]	314:21:10118:10131	10172278	3	True				
ANR	10172452	AssignmentExpression	op [ 3 ] = wp [ 3 ]		10172278	0		=			
ANR	10172453	ArrayIndexing	op [ 3 ]		10172278	0					
ANR	10172454	Identifier	op		10172278	0					
ANR	10172455	PrimaryExpression	3		10172278	1					
ANR	10172456	ArrayIndexing	wp [ 3 ]		10172278	1					
ANR	10172457	Identifier	wp		10172278	0					
ANR	10172458	PrimaryExpression	3		10172278	1					
ANR	10172459	ExpressionStatement	cr = wp [ 0 ]	315:12:10145:10155	10172278	4	True				
ANR	10172460	AssignmentExpression	cr = wp [ 0 ]		10172278	0		=			
ANR	10172461	Identifier	cr		10172278	0					
ANR	10172462	ArrayIndexing	wp [ 0 ]		10172278	1					
ANR	10172463	Identifier	wp		10172278	0					
ANR	10172464	PrimaryExpression	0		10172278	1					
ANR	10172465	ExpressionStatement	cg = wp [ 1 ]	315:24:10157:10167	10172278	5	True				
ANR	10172466	AssignmentExpression	cg = wp [ 1 ]		10172278	0		=			
ANR	10172467	Identifier	cg		10172278	0					
ANR	10172468	ArrayIndexing	wp [ 1 ]		10172278	1					
ANR	10172469	Identifier	wp		10172278	0					
ANR	10172470	PrimaryExpression	1		10172278	1					
ANR	10172471	ExpressionStatement	cb = wp [ 2 ]	315:36:10169:10179	10172278	6	True				
ANR	10172472	AssignmentExpression	cb = wp [ 2 ]		10172278	0		=			
ANR	10172473	Identifier	cb		10172278	0					
ANR	10172474	ArrayIndexing	wp [ 2 ]		10172278	1					
ANR	10172475	Identifier	wp		10172278	0					
ANR	10172476	PrimaryExpression	2		10172278	1					
ANR	10172477	ExpressionStatement	ca = wp [ 3 ]	315:48:10181:10191	10172278	7	True				
ANR	10172478	AssignmentExpression	ca = wp [ 3 ]		10172278	0		=			
ANR	10172479	Identifier	ca		10172278	0					
ANR	10172480	ArrayIndexing	wp [ 3 ]		10172278	1					
ANR	10172481	Identifier	wp		10172278	0					
ANR	10172482	PrimaryExpression	3		10172278	1					
ANR	10172483	ExpressionStatement	n -= 4	316:5:10198:10204	10172278	8	True				
ANR	10172484	AssignmentExpression	n -= 4		10172278	0		-=			
ANR	10172485	Identifier	n		10172278	0					
ANR	10172486	PrimaryExpression	4		10172278	1					
ANR	10172487	WhileStatement	while ( n > 0 )		10172278	9					
ANR	10172488	Condition	n > 0	317:12:10218:10222	10172278	0	True				
ANR	10172489	RelationalExpression	n > 0		10172278	0		>			
ANR	10172490	Identifier	n		10172278	0					
ANR	10172491	PrimaryExpression	0		10172278	1					
ANR	10172492	CompoundStatement		23:19:604:604	10172278	1					
ANR	10172493	ExpressionStatement	wp += 4	318:2:10229:10236	10172278	0	True				
ANR	10172494	AssignmentExpression	wp += 4		10172278	0		+=			
ANR	10172495	Identifier	wp		10172278	0					
ANR	10172496	PrimaryExpression	4		10172278	1					
ANR	10172497	ExpressionStatement	op += 4	319:2:10240:10247	10172278	1	True				
ANR	10172498	AssignmentExpression	op += 4		10172278	0		+=			
ANR	10172499	Identifier	op		10172278	0					
ANR	10172500	PrimaryExpression	4		10172278	1					
ANR	10172501	ExpressionStatement	n -= 4	320:2:10251:10257	10172278	2	True				
ANR	10172502	AssignmentExpression	n -= 4		10172278	0		-=			
ANR	10172503	Identifier	n		10172278	0					
ANR	10172504	PrimaryExpression	4		10172278	1					
ANR	10172505	ExpressionStatement	op [ 0 ] = ( uint16 ) ( ( cr += wp [ 0 ] ) & mask )	321:2:10261:10299	10172278	3	True				
ANR	10172506	AssignmentExpression	op [ 0 ] = ( uint16 ) ( ( cr += wp [ 0 ] ) & mask )		10172278	0		=			
ANR	10172507	ArrayIndexing	op [ 0 ]		10172278	0					
ANR	10172508	Identifier	op		10172278	0					
ANR	10172509	PrimaryExpression	0		10172278	1					
ANR	10172510	CastExpression	( uint16 ) ( ( cr += wp [ 0 ] ) & mask )		10172278	1					
ANR	10172511	CastTarget	uint16		10172278	0					
ANR	10172512	BitAndExpression	( cr += wp [ 0 ] ) & mask		10172278	1		&			
ANR	10172513	AssignmentExpression	cr += wp [ 0 ]		10172278	0		+=			
ANR	10172514	Identifier	cr		10172278	0					
ANR	10172515	ArrayIndexing	wp [ 0 ]		10172278	1					
ANR	10172516	Identifier	wp		10172278	0					
ANR	10172517	PrimaryExpression	0		10172278	1					
ANR	10172518	Identifier	mask		10172278	1					
ANR	10172519	ExpressionStatement	op [ 1 ] = ( uint16 ) ( ( cg += wp [ 1 ] ) & mask )	322:2:10303:10341	10172278	4	True				
ANR	10172520	AssignmentExpression	op [ 1 ] = ( uint16 ) ( ( cg += wp [ 1 ] ) & mask )		10172278	0		=			
ANR	10172521	ArrayIndexing	op [ 1 ]		10172278	0					
ANR	10172522	Identifier	op		10172278	0					
ANR	10172523	PrimaryExpression	1		10172278	1					
ANR	10172524	CastExpression	( uint16 ) ( ( cg += wp [ 1 ] ) & mask )		10172278	1					
ANR	10172525	CastTarget	uint16		10172278	0					
ANR	10172526	BitAndExpression	( cg += wp [ 1 ] ) & mask		10172278	1		&			
ANR	10172527	AssignmentExpression	cg += wp [ 1 ]		10172278	0		+=			
ANR	10172528	Identifier	cg		10172278	0					
ANR	10172529	ArrayIndexing	wp [ 1 ]		10172278	1					
ANR	10172530	Identifier	wp		10172278	0					
ANR	10172531	PrimaryExpression	1		10172278	1					
ANR	10172532	Identifier	mask		10172278	1					
ANR	10172533	ExpressionStatement	op [ 2 ] = ( uint16 ) ( ( cb += wp [ 2 ] ) & mask )	323:2:10345:10383	10172278	5	True				
ANR	10172534	AssignmentExpression	op [ 2 ] = ( uint16 ) ( ( cb += wp [ 2 ] ) & mask )		10172278	0		=			
ANR	10172535	ArrayIndexing	op [ 2 ]		10172278	0					
ANR	10172536	Identifier	op		10172278	0					
ANR	10172537	PrimaryExpression	2		10172278	1					
ANR	10172538	CastExpression	( uint16 ) ( ( cb += wp [ 2 ] ) & mask )		10172278	1					
ANR	10172539	CastTarget	uint16		10172278	0					
ANR	10172540	BitAndExpression	( cb += wp [ 2 ] ) & mask		10172278	1		&			
ANR	10172541	AssignmentExpression	cb += wp [ 2 ]		10172278	0		+=			
ANR	10172542	Identifier	cb		10172278	0					
ANR	10172543	ArrayIndexing	wp [ 2 ]		10172278	1					
ANR	10172544	Identifier	wp		10172278	0					
ANR	10172545	PrimaryExpression	2		10172278	1					
ANR	10172546	Identifier	mask		10172278	1					
ANR	10172547	ExpressionStatement	op [ 3 ] = ( uint16 ) ( ( ca += wp [ 3 ] ) & mask )	324:2:10387:10425	10172278	6	True				
ANR	10172548	AssignmentExpression	op [ 3 ] = ( uint16 ) ( ( ca += wp [ 3 ] ) & mask )		10172278	0		=			
ANR	10172549	ArrayIndexing	op [ 3 ]		10172278	0					
ANR	10172550	Identifier	op		10172278	0					
ANR	10172551	PrimaryExpression	3		10172278	1					
ANR	10172552	CastExpression	( uint16 ) ( ( ca += wp [ 3 ] ) & mask )		10172278	1					
ANR	10172553	CastTarget	uint16		10172278	0					
ANR	10172554	BitAndExpression	( ca += wp [ 3 ] ) & mask		10172278	1		&			
ANR	10172555	AssignmentExpression	ca += wp [ 3 ]		10172278	0		+=			
ANR	10172556	Identifier	ca		10172278	0					
ANR	10172557	ArrayIndexing	wp [ 3 ]		10172278	1					
ANR	10172558	Identifier	wp		10172278	0					
ANR	10172559	PrimaryExpression	3		10172278	1					
ANR	10172560	Identifier	mask		10172278	1					
ANR	10172561	ElseStatement	else		10172278	0					
ANR	10172562	CompoundStatement		32:8:822:822	10172278	0					
ANR	10172563	Statement	REPEAT	327:5:10450:10455	10172278	0	True				
ANR	10172564	Statement	(	327:11:10456:10456	10172278	1	True				
ANR	10172565	ExpressionStatement	"stride , * op = * wp & mask"	327:12:10457:10479	10172278	2	True				
ANR	10172566	Expression	"stride , * op = * wp & mask"		10172278	0					
ANR	10172567	Identifier	stride		10172278	0					
ANR	10172568	AssignmentExpression	* op = * wp & mask		10172278	1		=			
ANR	10172569	UnaryOperationExpression	* op		10172278	0					
ANR	10172570	UnaryOperator	*		10172278	0					
ANR	10172571	Identifier	op		10172278	1					
ANR	10172572	BitAndExpression	* wp & mask		10172278	1		&			
ANR	10172573	UnaryOperationExpression	* wp		10172278	0					
ANR	10172574	UnaryOperator	*		10172278	0					
ANR	10172575	Identifier	wp		10172278	1					
ANR	10172576	Identifier	mask		10172278	1					
ANR	10172577	ExpressionStatement	wp ++	327:36:10481:10485	10172278	3	True				
ANR	10172578	PostIncDecOperationExpression	wp ++		10172278	0					
ANR	10172579	Identifier	wp		10172278	0					
ANR	10172580	IncDec	++		10172278	1					
ANR	10172581	Statement	op	327:42:10487:10488	10172278	4	True				
ANR	10172582	Statement	++	327:44:10489:10490	10172278	5	True				
ANR	10172583	Statement	)	327:46:10491:10491	10172278	6	True				
ANR	10172584	ExpressionStatement	n -= stride	328:5:10498:10509	10172278	7	True				
ANR	10172585	AssignmentExpression	n -= stride		10172278	0		-=			
ANR	10172586	Identifier	n		10172278	0					
ANR	10172587	Identifier	stride		10172278	1					
ANR	10172588	WhileStatement	while ( n > 0 )		10172278	8					
ANR	10172589	Condition	n > 0	329:12:10523:10527	10172278	0	True				
ANR	10172590	RelationalExpression	n > 0		10172278	0		>			
ANR	10172591	Identifier	n		10172278	0					
ANR	10172592	PrimaryExpression	0		10172278	1					
ANR	10172593	CompoundStatement		35:19:909:909	10172278	1					
ANR	10172594	Statement	REPEAT	330:2:10534:10539	10172278	0	True				
ANR	10172595	Statement	(	330:8:10540:10540	10172278	1	True				
ANR	10172596	ExpressionStatement	"stride , wp [ stride ] += * wp"	330:9:10541:10572	10172278	2	True				
ANR	10172597	Expression	"stride , wp [ stride ] += * wp"		10172278	0					
ANR	10172598	Identifier	stride		10172278	0					
ANR	10172599	AssignmentExpression	wp [ stride ] += * wp		10172278	1		+=			
ANR	10172600	ArrayIndexing	wp [ stride ]		10172278	0					
ANR	10172601	Identifier	wp		10172278	0					
ANR	10172602	Identifier	stride		10172278	1					
ANR	10172603	UnaryOperationExpression	* wp		10172278	1					
ANR	10172604	UnaryOperator	*		10172278	0					
ANR	10172605	Identifier	wp		10172278	1					
ANR	10172606	ExpressionStatement	* op = * wp & mask	331:25:10574:10588	10172278	3	True				
ANR	10172607	AssignmentExpression	* op = * wp & mask		10172278	0		=			
ANR	10172608	UnaryOperationExpression	* op		10172278	0					
ANR	10172609	UnaryOperator	*		10172278	0					
ANR	10172610	Identifier	op		10172278	1					
ANR	10172611	BitAndExpression	* wp & mask		10172278	1		&			
ANR	10172612	UnaryOperationExpression	* wp		10172278	0					
ANR	10172613	UnaryOperator	*		10172278	0					
ANR	10172614	Identifier	wp		10172278	1					
ANR	10172615	Identifier	mask		10172278	1					
ANR	10172616	ExpressionStatement	wp ++	331:41:10590:10594	10172278	4	True				
ANR	10172617	PostIncDecOperationExpression	wp ++		10172278	0					
ANR	10172618	Identifier	wp		10172278	0					
ANR	10172619	IncDec	++		10172278	1					
ANR	10172620	Statement	op	331:47:10596:10597	10172278	5	True				
ANR	10172621	Statement	++	331:49:10598:10599	10172278	6	True				
ANR	10172622	Statement	)	331:51:10600:10600	10172278	7	True				
ANR	10172623	ExpressionStatement	n -= stride	332:2:10604:10615	10172278	8	True				
ANR	10172624	AssignmentExpression	n -= stride		10172278	0		-=			
ANR	10172625	Identifier	n		10172278	0					
ANR	10172626	Identifier	stride		10172278	1					
ANR	10172627	ReturnType	static void		10172278	1					
ANR	10172628	Identifier	horizontalAccumulate11		10172278	2					
ANR	10172629	ParameterList	"uint16 * wp , int n , int stride , uint16 * op"		10172278	3					
ANR	10172630	Parameter	uint16 * wp	294:23:9577:9586	10172278	0	True				
ANR	10172631	ParameterType	uint16 *		10172278	0					
ANR	10172632	Identifier	wp		10172278	1					
ANR	10172633	Parameter	int n	294:35:9589:9593	10172278	1	True				
ANR	10172634	ParameterType	int		10172278	0					
ANR	10172635	Identifier	n		10172278	1					
ANR	10172636	Parameter	int stride	294:42:9596:9605	10172278	2	True				
ANR	10172637	ParameterType	int		10172278	0					
ANR	10172638	Identifier	stride		10172278	1					
ANR	10172639	Parameter	uint16 * op	294:54:9608:9617	10172278	3	True				
ANR	10172640	ParameterType	uint16 *		10172278	0					
ANR	10172641	Identifier	op		10172278	1					
ANR	10172642	CFGEntryNode	ENTRY		10172278		True				
ANR	10172643	CFGExitNode	EXIT		10172278		True				
ANR	10172644	Symbol	op		10172278						
ANR	10172645	Symbol	* stride		10172278						
ANR	10172646	Symbol	cg		10172278						
ANR	10172647	Symbol	* op		10172278						
ANR	10172648	Symbol	stride		10172278						
ANR	10172649	Symbol	n		10172278						
ANR	10172650	Symbol	cr		10172278						
ANR	10172651	Symbol	CODE_MASK		10172278						
ANR	10172652	Symbol	wp		10172278						
ANR	10172653	Symbol	* wp		10172278						
ANR	10172654	Symbol	ca		10172278						
ANR	10172655	Symbol	mask		10172278						
ANR	10172656	Symbol	cb		10172278						
ANR	10172657	Function	horizontalAccumulate8	338:0:10636:11870							
ANR	10172658	FunctionDef	"horizontalAccumulate8 (uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8)"		10172657	0					
ANR	10172659	CompoundStatement		341:0:10747:11870	10172657	0					
ANR	10172660	Statement	register	342:4:10753:10760	10172657	0	True				
ANR	10172661	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	342:13:10762:10796	10172657	1	True				
ANR	10172662	IdentifierDecl	cr		10172657	0					
ANR	10172663	IdentifierDeclType	unsigned int		10172657	0					
ANR	10172664	Identifier	cr		10172657	1					
ANR	10172665	IdentifierDecl	cg		10172657	1					
ANR	10172666	IdentifierDeclType	unsigned int		10172657	0					
ANR	10172667	Identifier	cg		10172657	1					
ANR	10172668	IdentifierDecl	cb		10172657	2					
ANR	10172669	IdentifierDeclType	unsigned int		10172657	0					
ANR	10172670	Identifier	cb		10172657	1					
ANR	10172671	IdentifierDecl	ca		10172657	3					
ANR	10172672	IdentifierDeclType	unsigned int		10172657	0					
ANR	10172673	Identifier	ca		10172657	1					
ANR	10172674	IdentifierDecl	mask		10172657	4					
ANR	10172675	IdentifierDeclType	unsigned int		10172657	0					
ANR	10172676	Identifier	mask		10172657	1					
ANR	10172677	IfStatement	if ( n >= stride )		10172657	2					
ANR	10172678	Condition	n >= stride	344:8:10807:10817	10172657	0	True				
ANR	10172679	RelationalExpression	n >= stride		10172657	0		>=			
ANR	10172680	Identifier	n		10172657	0					
ANR	10172681	Identifier	stride		10172657	1					
ANR	10172682	CompoundStatement		4:21:72:72	10172657	1					
ANR	10172683	ExpressionStatement	mask = CODE_MASK	345:1:10823:10839	10172657	0	True				
ANR	10172684	AssignmentExpression	mask = CODE_MASK		10172657	0		=			
ANR	10172685	Identifier	mask		10172657	0					
ANR	10172686	Identifier	CODE_MASK		10172657	1					
ANR	10172687	IfStatement	if ( stride == 3 )		10172657	1					
ANR	10172688	Condition	stride == 3	346:5:10846:10856	10172657	0	True				
ANR	10172689	EqualityExpression	stride == 3		10172657	0		==			
ANR	10172690	Identifier	stride		10172657	0					
ANR	10172691	PrimaryExpression	3		10172657	1					
ANR	10172692	CompoundStatement		6:18:111:111	10172657	1					
ANR	10172693	ExpressionStatement	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	347:5:10866:10904	10172657	0	True				
ANR	10172694	AssignmentExpression	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10172657	0		=			
ANR	10172695	ArrayIndexing	op [ 0 ]		10172657	0					
ANR	10172696	Identifier	op		10172657	0					
ANR	10172697	PrimaryExpression	0		10172657	1					
ANR	10172698	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10172657	1					
ANR	10172699	Identifier	ToLinear8		10172657	0					
ANR	10172700	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10172657	1		=			
ANR	10172701	Identifier	cr		10172657	0					
ANR	10172702	BitAndExpression	wp [ 0 ] & mask		10172657	1		&			
ANR	10172703	ArrayIndexing	wp [ 0 ]		10172657	0					
ANR	10172704	Identifier	wp		10172657	0					
ANR	10172705	PrimaryExpression	0		10172657	1					
ANR	10172706	Identifier	mask		10172657	1					
ANR	10172707	ExpressionStatement	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	348:5:10911:10949	10172657	1	True				
ANR	10172708	AssignmentExpression	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10172657	0		=			
ANR	10172709	ArrayIndexing	op [ 1 ]		10172657	0					
ANR	10172710	Identifier	op		10172657	0					
ANR	10172711	PrimaryExpression	1		10172657	1					
ANR	10172712	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10172657	1					
ANR	10172713	Identifier	ToLinear8		10172657	0					
ANR	10172714	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10172657	1		=			
ANR	10172715	Identifier	cg		10172657	0					
ANR	10172716	BitAndExpression	wp [ 1 ] & mask		10172657	1		&			
ANR	10172717	ArrayIndexing	wp [ 1 ]		10172657	0					
ANR	10172718	Identifier	wp		10172657	0					
ANR	10172719	PrimaryExpression	1		10172657	1					
ANR	10172720	Identifier	mask		10172657	1					
ANR	10172721	ExpressionStatement	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	349:5:10956:10994	10172657	2	True				
ANR	10172722	AssignmentExpression	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10172657	0		=			
ANR	10172723	ArrayIndexing	op [ 2 ]		10172657	0					
ANR	10172724	Identifier	op		10172657	0					
ANR	10172725	PrimaryExpression	2		10172657	1					
ANR	10172726	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10172657	1					
ANR	10172727	Identifier	ToLinear8		10172657	0					
ANR	10172728	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10172657	1		=			
ANR	10172729	Identifier	cb		10172657	0					
ANR	10172730	BitAndExpression	wp [ 2 ] & mask		10172657	1		&			
ANR	10172731	ArrayIndexing	wp [ 2 ]		10172657	0					
ANR	10172732	Identifier	wp		10172657	0					
ANR	10172733	PrimaryExpression	2		10172657	1					
ANR	10172734	Identifier	mask		10172657	1					
ANR	10172735	ExpressionStatement	n -= 3	350:5:11001:11007	10172657	3	True				
ANR	10172736	AssignmentExpression	n -= 3		10172657	0		-=			
ANR	10172737	Identifier	n		10172657	0					
ANR	10172738	PrimaryExpression	3		10172657	1					
ANR	10172739	WhileStatement	while ( n > 0 )		10172657	4					
ANR	10172740	Condition	n > 0	351:12:11021:11025	10172657	0	True				
ANR	10172741	RelationalExpression	n > 0		10172657	0		>			
ANR	10172742	Identifier	n		10172657	0					
ANR	10172743	PrimaryExpression	0		10172657	1					
ANR	10172744	CompoundStatement		11:19:280:280	10172657	1					
ANR	10172745	ExpressionStatement	n -= 3	352:2:11032:11038	10172657	0	True				
ANR	10172746	AssignmentExpression	n -= 3		10172657	0		-=			
ANR	10172747	Identifier	n		10172657	0					
ANR	10172748	PrimaryExpression	3		10172657	1					
ANR	10172749	ExpressionStatement	wp += 3	353:2:11042:11049	10172657	1	True				
ANR	10172750	AssignmentExpression	wp += 3		10172657	0		+=			
ANR	10172751	Identifier	wp		10172657	0					
ANR	10172752	PrimaryExpression	3		10172657	1					
ANR	10172753	ExpressionStatement	op += 3	354:2:11053:11060	10172657	2	True				
ANR	10172754	AssignmentExpression	op += 3		10172657	0		+=			
ANR	10172755	Identifier	op		10172657	0					
ANR	10172756	PrimaryExpression	3		10172657	1					
ANR	10172757	ExpressionStatement	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	355:2:11064:11103	10172657	3	True				
ANR	10172758	AssignmentExpression	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10172657	0		=			
ANR	10172759	ArrayIndexing	op [ 0 ]		10172657	0					
ANR	10172760	Identifier	op		10172657	0					
ANR	10172761	PrimaryExpression	0		10172657	1					
ANR	10172762	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10172657	1					
ANR	10172763	Identifier	ToLinear8		10172657	0					
ANR	10172764	BitAndExpression	( cr += wp [ 0 ] ) & mask		10172657	1		&			
ANR	10172765	AssignmentExpression	cr += wp [ 0 ]		10172657	0		+=			
ANR	10172766	Identifier	cr		10172657	0					
ANR	10172767	ArrayIndexing	wp [ 0 ]		10172657	1					
ANR	10172768	Identifier	wp		10172657	0					
ANR	10172769	PrimaryExpression	0		10172657	1					
ANR	10172770	Identifier	mask		10172657	1					
ANR	10172771	ExpressionStatement	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	356:2:11107:11146	10172657	4	True				
ANR	10172772	AssignmentExpression	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10172657	0		=			
ANR	10172773	ArrayIndexing	op [ 1 ]		10172657	0					
ANR	10172774	Identifier	op		10172657	0					
ANR	10172775	PrimaryExpression	1		10172657	1					
ANR	10172776	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10172657	1					
ANR	10172777	Identifier	ToLinear8		10172657	0					
ANR	10172778	BitAndExpression	( cg += wp [ 1 ] ) & mask		10172657	1		&			
ANR	10172779	AssignmentExpression	cg += wp [ 1 ]		10172657	0		+=			
ANR	10172780	Identifier	cg		10172657	0					
ANR	10172781	ArrayIndexing	wp [ 1 ]		10172657	1					
ANR	10172782	Identifier	wp		10172657	0					
ANR	10172783	PrimaryExpression	1		10172657	1					
ANR	10172784	Identifier	mask		10172657	1					
ANR	10172785	ExpressionStatement	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	357:2:11150:11189	10172657	5	True				
ANR	10172786	AssignmentExpression	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10172657	0		=			
ANR	10172787	ArrayIndexing	op [ 2 ]		10172657	0					
ANR	10172788	Identifier	op		10172657	0					
ANR	10172789	PrimaryExpression	2		10172657	1					
ANR	10172790	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10172657	1					
ANR	10172791	Identifier	ToLinear8		10172657	0					
ANR	10172792	BitAndExpression	( cb += wp [ 2 ] ) & mask		10172657	1		&			
ANR	10172793	AssignmentExpression	cb += wp [ 2 ]		10172657	0		+=			
ANR	10172794	Identifier	cb		10172657	0					
ANR	10172795	ArrayIndexing	wp [ 2 ]		10172657	1					
ANR	10172796	Identifier	wp		10172657	0					
ANR	10172797	PrimaryExpression	2		10172657	1					
ANR	10172798	Identifier	mask		10172657	1					
ANR	10172799	ElseStatement	else		10172657	0					
ANR	10172800	IfStatement	if ( stride == 4 )		10172657	0					
ANR	10172801	Condition	stride == 4	359:12:11210:11220	10172657	0	True				
ANR	10172802	EqualityExpression	stride == 4		10172657	0		==			
ANR	10172803	Identifier	stride		10172657	0					
ANR	10172804	PrimaryExpression	4		10172657	1					
ANR	10172805	CompoundStatement		19:25:475:475	10172657	1					
ANR	10172806	ExpressionStatement	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	360:5:11230:11268	10172657	0	True				
ANR	10172807	AssignmentExpression	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10172657	0		=			
ANR	10172808	ArrayIndexing	op [ 0 ]		10172657	0					
ANR	10172809	Identifier	op		10172657	0					
ANR	10172810	PrimaryExpression	0		10172657	1					
ANR	10172811	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10172657	1					
ANR	10172812	Identifier	ToLinear8		10172657	0					
ANR	10172813	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10172657	1		=			
ANR	10172814	Identifier	cr		10172657	0					
ANR	10172815	BitAndExpression	wp [ 0 ] & mask		10172657	1		&			
ANR	10172816	ArrayIndexing	wp [ 0 ]		10172657	0					
ANR	10172817	Identifier	wp		10172657	0					
ANR	10172818	PrimaryExpression	0		10172657	1					
ANR	10172819	Identifier	mask		10172657	1					
ANR	10172820	ExpressionStatement	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	361:5:11275:11313	10172657	1	True				
ANR	10172821	AssignmentExpression	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10172657	0		=			
ANR	10172822	ArrayIndexing	op [ 1 ]		10172657	0					
ANR	10172823	Identifier	op		10172657	0					
ANR	10172824	PrimaryExpression	1		10172657	1					
ANR	10172825	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10172657	1					
ANR	10172826	Identifier	ToLinear8		10172657	0					
ANR	10172827	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10172657	1		=			
ANR	10172828	Identifier	cg		10172657	0					
ANR	10172829	BitAndExpression	wp [ 1 ] & mask		10172657	1		&			
ANR	10172830	ArrayIndexing	wp [ 1 ]		10172657	0					
ANR	10172831	Identifier	wp		10172657	0					
ANR	10172832	PrimaryExpression	1		10172657	1					
ANR	10172833	Identifier	mask		10172657	1					
ANR	10172834	ExpressionStatement	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	362:5:11320:11358	10172657	2	True				
ANR	10172835	AssignmentExpression	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10172657	0		=			
ANR	10172836	ArrayIndexing	op [ 2 ]		10172657	0					
ANR	10172837	Identifier	op		10172657	0					
ANR	10172838	PrimaryExpression	2		10172657	1					
ANR	10172839	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10172657	1					
ANR	10172840	Identifier	ToLinear8		10172657	0					
ANR	10172841	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10172657	1		=			
ANR	10172842	Identifier	cb		10172657	0					
ANR	10172843	BitAndExpression	wp [ 2 ] & mask		10172657	1		&			
ANR	10172844	ArrayIndexing	wp [ 2 ]		10172657	0					
ANR	10172845	Identifier	wp		10172657	0					
ANR	10172846	PrimaryExpression	2		10172657	1					
ANR	10172847	Identifier	mask		10172657	1					
ANR	10172848	ExpressionStatement	op [ 3 ] = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]	363:5:11365:11403	10172657	3	True				
ANR	10172849	AssignmentExpression	op [ 3 ] = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		10172657	0		=			
ANR	10172850	ArrayIndexing	op [ 3 ]		10172657	0					
ANR	10172851	Identifier	op		10172657	0					
ANR	10172852	PrimaryExpression	3		10172657	1					
ANR	10172853	ArrayIndexing	ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		10172657	1					
ANR	10172854	Identifier	ToLinear8		10172657	0					
ANR	10172855	AssignmentExpression	ca = ( wp [ 3 ] & mask )		10172657	1		=			
ANR	10172856	Identifier	ca		10172657	0					
ANR	10172857	BitAndExpression	wp [ 3 ] & mask		10172657	1		&			
ANR	10172858	ArrayIndexing	wp [ 3 ]		10172657	0					
ANR	10172859	Identifier	wp		10172657	0					
ANR	10172860	PrimaryExpression	3		10172657	1					
ANR	10172861	Identifier	mask		10172657	1					
ANR	10172862	ExpressionStatement	n -= 4	364:5:11410:11416	10172657	4	True				
ANR	10172863	AssignmentExpression	n -= 4		10172657	0		-=			
ANR	10172864	Identifier	n		10172657	0					
ANR	10172865	PrimaryExpression	4		10172657	1					
ANR	10172866	WhileStatement	while ( n > 0 )		10172657	5					
ANR	10172867	Condition	n > 0	365:12:11430:11434	10172657	0	True				
ANR	10172868	RelationalExpression	n > 0		10172657	0		>			
ANR	10172869	Identifier	n		10172657	0					
ANR	10172870	PrimaryExpression	0		10172657	1					
ANR	10172871	CompoundStatement		25:19:689:689	10172657	1					
ANR	10172872	ExpressionStatement	n -= 4	366:2:11441:11447	10172657	0	True				
ANR	10172873	AssignmentExpression	n -= 4		10172657	0		-=			
ANR	10172874	Identifier	n		10172657	0					
ANR	10172875	PrimaryExpression	4		10172657	1					
ANR	10172876	ExpressionStatement	wp += 4	367:2:11451:11458	10172657	1	True				
ANR	10172877	AssignmentExpression	wp += 4		10172657	0		+=			
ANR	10172878	Identifier	wp		10172657	0					
ANR	10172879	PrimaryExpression	4		10172657	1					
ANR	10172880	ExpressionStatement	op += 4	368:2:11462:11469	10172657	2	True				
ANR	10172881	AssignmentExpression	op += 4		10172657	0		+=			
ANR	10172882	Identifier	op		10172657	0					
ANR	10172883	PrimaryExpression	4		10172657	1					
ANR	10172884	ExpressionStatement	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	369:2:11473:11512	10172657	3	True				
ANR	10172885	AssignmentExpression	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10172657	0		=			
ANR	10172886	ArrayIndexing	op [ 0 ]		10172657	0					
ANR	10172887	Identifier	op		10172657	0					
ANR	10172888	PrimaryExpression	0		10172657	1					
ANR	10172889	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10172657	1					
ANR	10172890	Identifier	ToLinear8		10172657	0					
ANR	10172891	BitAndExpression	( cr += wp [ 0 ] ) & mask		10172657	1		&			
ANR	10172892	AssignmentExpression	cr += wp [ 0 ]		10172657	0		+=			
ANR	10172893	Identifier	cr		10172657	0					
ANR	10172894	ArrayIndexing	wp [ 0 ]		10172657	1					
ANR	10172895	Identifier	wp		10172657	0					
ANR	10172896	PrimaryExpression	0		10172657	1					
ANR	10172897	Identifier	mask		10172657	1					
ANR	10172898	ExpressionStatement	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	370:2:11516:11555	10172657	4	True				
ANR	10172899	AssignmentExpression	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10172657	0		=			
ANR	10172900	ArrayIndexing	op [ 1 ]		10172657	0					
ANR	10172901	Identifier	op		10172657	0					
ANR	10172902	PrimaryExpression	1		10172657	1					
ANR	10172903	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10172657	1					
ANR	10172904	Identifier	ToLinear8		10172657	0					
ANR	10172905	BitAndExpression	( cg += wp [ 1 ] ) & mask		10172657	1		&			
ANR	10172906	AssignmentExpression	cg += wp [ 1 ]		10172657	0		+=			
ANR	10172907	Identifier	cg		10172657	0					
ANR	10172908	ArrayIndexing	wp [ 1 ]		10172657	1					
ANR	10172909	Identifier	wp		10172657	0					
ANR	10172910	PrimaryExpression	1		10172657	1					
ANR	10172911	Identifier	mask		10172657	1					
ANR	10172912	ExpressionStatement	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	371:2:11559:11598	10172657	5	True				
ANR	10172913	AssignmentExpression	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10172657	0		=			
ANR	10172914	ArrayIndexing	op [ 2 ]		10172657	0					
ANR	10172915	Identifier	op		10172657	0					
ANR	10172916	PrimaryExpression	2		10172657	1					
ANR	10172917	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10172657	1					
ANR	10172918	Identifier	ToLinear8		10172657	0					
ANR	10172919	BitAndExpression	( cb += wp [ 2 ] ) & mask		10172657	1		&			
ANR	10172920	AssignmentExpression	cb += wp [ 2 ]		10172657	0		+=			
ANR	10172921	Identifier	cb		10172657	0					
ANR	10172922	ArrayIndexing	wp [ 2 ]		10172657	1					
ANR	10172923	Identifier	wp		10172657	0					
ANR	10172924	PrimaryExpression	2		10172657	1					
ANR	10172925	Identifier	mask		10172657	1					
ANR	10172926	ExpressionStatement	op [ 3 ] = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]	372:2:11602:11641	10172657	6	True				
ANR	10172927	AssignmentExpression	op [ 3 ] = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		10172657	0		=			
ANR	10172928	ArrayIndexing	op [ 3 ]		10172657	0					
ANR	10172929	Identifier	op		10172657	0					
ANR	10172930	PrimaryExpression	3		10172657	1					
ANR	10172931	ArrayIndexing	ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		10172657	1					
ANR	10172932	Identifier	ToLinear8		10172657	0					
ANR	10172933	BitAndExpression	( ca += wp [ 3 ] ) & mask		10172657	1		&			
ANR	10172934	AssignmentExpression	ca += wp [ 3 ]		10172657	0		+=			
ANR	10172935	Identifier	ca		10172657	0					
ANR	10172936	ArrayIndexing	wp [ 3 ]		10172657	1					
ANR	10172937	Identifier	wp		10172657	0					
ANR	10172938	PrimaryExpression	3		10172657	1					
ANR	10172939	Identifier	mask		10172657	1					
ANR	10172940	ElseStatement	else		10172657	0					
ANR	10172941	CompoundStatement		34:8:910:910	10172657	0					
ANR	10172942	Statement	REPEAT	375:5:11665:11670	10172657	0	True				
ANR	10172943	Statement	(	375:11:11671:11671	10172657	1	True				
ANR	10172944	ExpressionStatement	"stride , * op = ToLinear8 [ * wp & mask ]"	375:12:11672:11705	10172657	2	True				
ANR	10172945	Expression	"stride , * op = ToLinear8 [ * wp & mask ]"		10172657	0					
ANR	10172946	Identifier	stride		10172657	0					
ANR	10172947	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		10172657	1		=			
ANR	10172948	UnaryOperationExpression	* op		10172657	0					
ANR	10172949	UnaryOperator	*		10172657	0					
ANR	10172950	Identifier	op		10172657	1					
ANR	10172951	ArrayIndexing	ToLinear8 [ * wp & mask ]		10172657	1					
ANR	10172952	Identifier	ToLinear8		10172657	0					
ANR	10172953	BitAndExpression	* wp & mask		10172657	1		&			
ANR	10172954	UnaryOperationExpression	* wp		10172657	0					
ANR	10172955	UnaryOperator	*		10172657	0					
ANR	10172956	Identifier	wp		10172657	1					
ANR	10172957	Identifier	mask		10172657	1					
ANR	10172958	ExpressionStatement	wp ++	375:47:11707:11711	10172657	3	True				
ANR	10172959	PostIncDecOperationExpression	wp ++		10172657	0					
ANR	10172960	Identifier	wp		10172657	0					
ANR	10172961	IncDec	++		10172657	1					
ANR	10172962	Statement	op	375:53:11713:11714	10172657	4	True				
ANR	10172963	Statement	++	375:55:11715:11716	10172657	5	True				
ANR	10172964	Statement	)	375:57:11717:11717	10172657	6	True				
ANR	10172965	ExpressionStatement	n -= stride	376:5:11724:11735	10172657	7	True				
ANR	10172966	AssignmentExpression	n -= stride		10172657	0		-=			
ANR	10172967	Identifier	n		10172657	0					
ANR	10172968	Identifier	stride		10172657	1					
ANR	10172969	WhileStatement	while ( n > 0 )		10172657	8					
ANR	10172970	Condition	n > 0	377:12:11749:11753	10172657	0	True				
ANR	10172971	RelationalExpression	n > 0		10172657	0		>			
ANR	10172972	Identifier	n		10172657	0					
ANR	10172973	PrimaryExpression	0		10172657	1					
ANR	10172974	CompoundStatement		37:19:1008:1008	10172657	1					
ANR	10172975	Statement	REPEAT	378:2:11760:11765	10172657	0	True				
ANR	10172976	Statement	(	378:8:11766:11766	10172657	1	True				
ANR	10172977	ExpressionStatement	"stride , wp [ stride ] += * wp"	378:9:11767:11798	10172657	2	True				
ANR	10172978	Expression	"stride , wp [ stride ] += * wp"		10172657	0					
ANR	10172979	Identifier	stride		10172657	0					
ANR	10172980	AssignmentExpression	wp [ stride ] += * wp		10172657	1		+=			
ANR	10172981	ArrayIndexing	wp [ stride ]		10172657	0					
ANR	10172982	Identifier	wp		10172657	0					
ANR	10172983	Identifier	stride		10172657	1					
ANR	10172984	UnaryOperationExpression	* wp		10172657	1					
ANR	10172985	UnaryOperator	*		10172657	0					
ANR	10172986	Identifier	wp		10172657	1					
ANR	10172987	ExpressionStatement	* op = ToLinear8 [ * wp & mask ]	379:25:11800:11825	10172657	3	True				
ANR	10172988	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		10172657	0		=			
ANR	10172989	UnaryOperationExpression	* op		10172657	0					
ANR	10172990	UnaryOperator	*		10172657	0					
ANR	10172991	Identifier	op		10172657	1					
ANR	10172992	ArrayIndexing	ToLinear8 [ * wp & mask ]		10172657	1					
ANR	10172993	Identifier	ToLinear8		10172657	0					
ANR	10172994	BitAndExpression	* wp & mask		10172657	1		&			
ANR	10172995	UnaryOperationExpression	* wp		10172657	0					
ANR	10172996	UnaryOperator	*		10172657	0					
ANR	10172997	Identifier	wp		10172657	1					
ANR	10172998	Identifier	mask		10172657	1					
ANR	10172999	ExpressionStatement	wp ++	379:52:11827:11831	10172657	4	True				
ANR	10173000	PostIncDecOperationExpression	wp ++		10172657	0					
ANR	10173001	Identifier	wp		10172657	0					
ANR	10173002	IncDec	++		10172657	1					
ANR	10173003	Statement	op	379:58:11833:11834	10172657	5	True				
ANR	10173004	Statement	++	379:60:11835:11836	10172657	6	True				
ANR	10173005	Statement	)	379:62:11837:11837	10172657	7	True				
ANR	10173006	ExpressionStatement	n -= stride	380:2:11841:11852	10172657	8	True				
ANR	10173007	AssignmentExpression	n -= stride		10172657	0		-=			
ANR	10173008	Identifier	n		10172657	0					
ANR	10173009	Identifier	stride		10172657	1					
ANR	10173010	ReturnType	static void		10172657	1					
ANR	10173011	Identifier	horizontalAccumulate8		10172657	2					
ANR	10173012	ParameterList	"uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8"		10172657	3					
ANR	10173013	Parameter	uint16 * wp	339:22:10670:10679	10172657	0	True				
ANR	10173014	ParameterType	uint16 *		10172657	0					
ANR	10173015	Identifier	wp		10172657	1					
ANR	10173016	Parameter	int n	339:34:10682:10686	10172657	1	True				
ANR	10173017	ParameterType	int		10172657	0					
ANR	10173018	Identifier	n		10172657	1					
ANR	10173019	Parameter	int stride	339:41:10689:10698	10172657	2	True				
ANR	10173020	ParameterType	int		10172657	0					
ANR	10173021	Identifier	stride		10172657	1					
ANR	10173022	Parameter	unsigned char * op	339:53:10701:10717	10172657	3	True				
ANR	10173023	ParameterType	unsigned char *		10172657	0					
ANR	10173024	Identifier	op		10172657	1					
ANR	10173025	Parameter	unsigned char * ToLinear8	340:1:10721:10744	10172657	4	True				
ANR	10173026	ParameterType	unsigned char *		10172657	0					
ANR	10173027	Identifier	ToLinear8		10172657	1					
ANR	10173028	CFGEntryNode	ENTRY		10172657		True				
ANR	10173029	CFGExitNode	EXIT		10172657		True				
ANR	10173030	Symbol	op		10172657						
ANR	10173031	Symbol	* stride		10172657						
ANR	10173032	Symbol	ToLinear8		10172657						
ANR	10173033	Symbol	* mask		10172657						
ANR	10173034	Symbol	cg		10172657						
ANR	10173035	Symbol	* op		10172657						
ANR	10173036	Symbol	* * wp		10172657						
ANR	10173037	Symbol	stride		10172657						
ANR	10173038	Symbol	* ToLinear8		10172657						
ANR	10173039	Symbol	n		10172657						
ANR	10173040	Symbol	cr		10172657						
ANR	10173041	Symbol	CODE_MASK		10172657						
ANR	10173042	Symbol	wp		10172657						
ANR	10173043	Symbol	* wp		10172657						
ANR	10173044	Symbol	ca		10172657						
ANR	10173045	Symbol	mask		10172657						
ANR	10173046	Symbol	cb		10172657						
ANR	10173047	Function	horizontalAccumulate8abgr	387:0:11874:13360							
ANR	10173048	FunctionDef	"horizontalAccumulate8abgr (uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8)"		10173047	0					
ANR	10173049	CompoundStatement		390:0:11989:13360	10173047	0					
ANR	10173050	Statement	register	391:4:11995:12002	10173047	0	True				
ANR	10173051	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	391:13:12004:12038	10173047	1	True				
ANR	10173052	IdentifierDecl	cr		10173047	0					
ANR	10173053	IdentifierDeclType	unsigned int		10173047	0					
ANR	10173054	Identifier	cr		10173047	1					
ANR	10173055	IdentifierDecl	cg		10173047	1					
ANR	10173056	IdentifierDeclType	unsigned int		10173047	0					
ANR	10173057	Identifier	cg		10173047	1					
ANR	10173058	IdentifierDecl	cb		10173047	2					
ANR	10173059	IdentifierDeclType	unsigned int		10173047	0					
ANR	10173060	Identifier	cb		10173047	1					
ANR	10173061	IdentifierDecl	ca		10173047	3					
ANR	10173062	IdentifierDeclType	unsigned int		10173047	0					
ANR	10173063	Identifier	ca		10173047	1					
ANR	10173064	IdentifierDecl	mask		10173047	4					
ANR	10173065	IdentifierDeclType	unsigned int		10173047	0					
ANR	10173066	Identifier	mask		10173047	1					
ANR	10173067	Statement	register	392:4:12044:12051	10173047	2	True				
ANR	10173068	IdentifierDeclStatement	"unsigned char t0 , t1 , t2 , t3 ;"	392:13:12053:12082	10173047	3	True				
ANR	10173069	IdentifierDecl	t0		10173047	0					
ANR	10173070	IdentifierDeclType	unsigned char		10173047	0					
ANR	10173071	Identifier	t0		10173047	1					
ANR	10173072	IdentifierDecl	t1		10173047	1					
ANR	10173073	IdentifierDeclType	unsigned char		10173047	0					
ANR	10173074	Identifier	t1		10173047	1					
ANR	10173075	IdentifierDecl	t2		10173047	2					
ANR	10173076	IdentifierDeclType	unsigned char		10173047	0					
ANR	10173077	Identifier	t2		10173047	1					
ANR	10173078	IdentifierDecl	t3		10173047	3					
ANR	10173079	IdentifierDeclType	unsigned char		10173047	0					
ANR	10173080	Identifier	t3		10173047	1					
ANR	10173081	IfStatement	if ( n >= stride )		10173047	4					
ANR	10173082	Condition	n >= stride	394:8:12093:12103	10173047	0	True				
ANR	10173083	RelationalExpression	n >= stride		10173047	0		>=			
ANR	10173084	Identifier	n		10173047	0					
ANR	10173085	Identifier	stride		10173047	1					
ANR	10173086	CompoundStatement		5:21:116:116	10173047	1					
ANR	10173087	ExpressionStatement	mask = CODE_MASK	395:1:12109:12125	10173047	0	True				
ANR	10173088	AssignmentExpression	mask = CODE_MASK		10173047	0		=			
ANR	10173089	Identifier	mask		10173047	0					
ANR	10173090	Identifier	CODE_MASK		10173047	1					
ANR	10173091	IfStatement	if ( stride == 3 )		10173047	1					
ANR	10173092	Condition	stride == 3	396:5:12132:12142	10173047	0	True				
ANR	10173093	EqualityExpression	stride == 3		10173047	0		==			
ANR	10173094	Identifier	stride		10173047	0					
ANR	10173095	PrimaryExpression	3		10173047	1					
ANR	10173096	CompoundStatement		7:18:155:155	10173047	1					
ANR	10173097	ExpressionStatement	op [ 0 ] = 0	397:5:12152:12161	10173047	0	True				
ANR	10173098	AssignmentExpression	op [ 0 ] = 0		10173047	0		=			
ANR	10173099	ArrayIndexing	op [ 0 ]		10173047	0					
ANR	10173100	Identifier	op		10173047	0					
ANR	10173101	PrimaryExpression	0		10173047	1					
ANR	10173102	PrimaryExpression	0		10173047	1					
ANR	10173103	ExpressionStatement	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	398:5:12168:12203	10173047	1	True				
ANR	10173104	AssignmentExpression	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10173047	0		=			
ANR	10173105	Identifier	t1		10173047	0					
ANR	10173106	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10173047	1					
ANR	10173107	Identifier	ToLinear8		10173047	0					
ANR	10173108	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10173047	1		=			
ANR	10173109	Identifier	cb		10173047	0					
ANR	10173110	BitAndExpression	wp [ 2 ] & mask		10173047	1		&			
ANR	10173111	ArrayIndexing	wp [ 2 ]		10173047	0					
ANR	10173112	Identifier	wp		10173047	0					
ANR	10173113	PrimaryExpression	2		10173047	1					
ANR	10173114	Identifier	mask		10173047	1					
ANR	10173115	ExpressionStatement	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	399:5:12210:12245	10173047	2	True				
ANR	10173116	AssignmentExpression	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10173047	0		=			
ANR	10173117	Identifier	t2		10173047	0					
ANR	10173118	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10173047	1					
ANR	10173119	Identifier	ToLinear8		10173047	0					
ANR	10173120	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10173047	1		=			
ANR	10173121	Identifier	cg		10173047	0					
ANR	10173122	BitAndExpression	wp [ 1 ] & mask		10173047	1		&			
ANR	10173123	ArrayIndexing	wp [ 1 ]		10173047	0					
ANR	10173124	Identifier	wp		10173047	0					
ANR	10173125	PrimaryExpression	1		10173047	1					
ANR	10173126	Identifier	mask		10173047	1					
ANR	10173127	ExpressionStatement	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	400:5:12252:12287	10173047	3	True				
ANR	10173128	AssignmentExpression	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10173047	0		=			
ANR	10173129	Identifier	t3		10173047	0					
ANR	10173130	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10173047	1					
ANR	10173131	Identifier	ToLinear8		10173047	0					
ANR	10173132	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10173047	1		=			
ANR	10173133	Identifier	cr		10173047	0					
ANR	10173134	BitAndExpression	wp [ 0 ] & mask		10173047	1		&			
ANR	10173135	ArrayIndexing	wp [ 0 ]		10173047	0					
ANR	10173136	Identifier	wp		10173047	0					
ANR	10173137	PrimaryExpression	0		10173047	1					
ANR	10173138	Identifier	mask		10173047	1					
ANR	10173139	ExpressionStatement	op [ 1 ] = t1	401:5:12294:12304	10173047	4	True				
ANR	10173140	AssignmentExpression	op [ 1 ] = t1		10173047	0		=			
ANR	10173141	ArrayIndexing	op [ 1 ]		10173047	0					
ANR	10173142	Identifier	op		10173047	0					
ANR	10173143	PrimaryExpression	1		10173047	1					
ANR	10173144	Identifier	t1		10173047	1					
ANR	10173145	ExpressionStatement	op [ 2 ] = t2	402:5:12311:12321	10173047	5	True				
ANR	10173146	AssignmentExpression	op [ 2 ] = t2		10173047	0		=			
ANR	10173147	ArrayIndexing	op [ 2 ]		10173047	0					
ANR	10173148	Identifier	op		10173047	0					
ANR	10173149	PrimaryExpression	2		10173047	1					
ANR	10173150	Identifier	t2		10173047	1					
ANR	10173151	ExpressionStatement	op [ 3 ] = t3	403:5:12328:12338	10173047	6	True				
ANR	10173152	AssignmentExpression	op [ 3 ] = t3		10173047	0		=			
ANR	10173153	ArrayIndexing	op [ 3 ]		10173047	0					
ANR	10173154	Identifier	op		10173047	0					
ANR	10173155	PrimaryExpression	3		10173047	1					
ANR	10173156	Identifier	t3		10173047	1					
ANR	10173157	ExpressionStatement	n -= 3	404:5:12345:12351	10173047	7	True				
ANR	10173158	AssignmentExpression	n -= 3		10173047	0		-=			
ANR	10173159	Identifier	n		10173047	0					
ANR	10173160	PrimaryExpression	3		10173047	1					
ANR	10173161	WhileStatement	while ( n > 0 )		10173047	8					
ANR	10173162	Condition	n > 0	405:12:12365:12369	10173047	0	True				
ANR	10173163	RelationalExpression	n > 0		10173047	0		>			
ANR	10173164	Identifier	n		10173047	0					
ANR	10173165	PrimaryExpression	0		10173047	1					
ANR	10173166	CompoundStatement		16:19:382:382	10173047	1					
ANR	10173167	ExpressionStatement	n -= 3	406:2:12376:12382	10173047	0	True				
ANR	10173168	AssignmentExpression	n -= 3		10173047	0		-=			
ANR	10173169	Identifier	n		10173047	0					
ANR	10173170	PrimaryExpression	3		10173047	1					
ANR	10173171	ExpressionStatement	wp += 3	407:2:12386:12393	10173047	1	True				
ANR	10173172	AssignmentExpression	wp += 3		10173047	0		+=			
ANR	10173173	Identifier	wp		10173047	0					
ANR	10173174	PrimaryExpression	3		10173047	1					
ANR	10173175	ExpressionStatement	op += 4	408:2:12397:12404	10173047	2	True				
ANR	10173176	AssignmentExpression	op += 4		10173047	0		+=			
ANR	10173177	Identifier	op		10173047	0					
ANR	10173178	PrimaryExpression	4		10173047	1					
ANR	10173179	ExpressionStatement	op [ 0 ] = 0	409:2:12408:12417	10173047	3	True				
ANR	10173180	AssignmentExpression	op [ 0 ] = 0		10173047	0		=			
ANR	10173181	ArrayIndexing	op [ 0 ]		10173047	0					
ANR	10173182	Identifier	op		10173047	0					
ANR	10173183	PrimaryExpression	0		10173047	1					
ANR	10173184	PrimaryExpression	0		10173047	1					
ANR	10173185	ExpressionStatement	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	410:2:12421:12457	10173047	4	True				
ANR	10173186	AssignmentExpression	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10173047	0		=			
ANR	10173187	Identifier	t1		10173047	0					
ANR	10173188	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10173047	1					
ANR	10173189	Identifier	ToLinear8		10173047	0					
ANR	10173190	BitAndExpression	( cb += wp [ 2 ] ) & mask		10173047	1		&			
ANR	10173191	AssignmentExpression	cb += wp [ 2 ]		10173047	0		+=			
ANR	10173192	Identifier	cb		10173047	0					
ANR	10173193	ArrayIndexing	wp [ 2 ]		10173047	1					
ANR	10173194	Identifier	wp		10173047	0					
ANR	10173195	PrimaryExpression	2		10173047	1					
ANR	10173196	Identifier	mask		10173047	1					
ANR	10173197	ExpressionStatement	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	411:2:12461:12497	10173047	5	True				
ANR	10173198	AssignmentExpression	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10173047	0		=			
ANR	10173199	Identifier	t2		10173047	0					
ANR	10173200	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10173047	1					
ANR	10173201	Identifier	ToLinear8		10173047	0					
ANR	10173202	BitAndExpression	( cg += wp [ 1 ] ) & mask		10173047	1		&			
ANR	10173203	AssignmentExpression	cg += wp [ 1 ]		10173047	0		+=			
ANR	10173204	Identifier	cg		10173047	0					
ANR	10173205	ArrayIndexing	wp [ 1 ]		10173047	1					
ANR	10173206	Identifier	wp		10173047	0					
ANR	10173207	PrimaryExpression	1		10173047	1					
ANR	10173208	Identifier	mask		10173047	1					
ANR	10173209	ExpressionStatement	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	412:2:12501:12537	10173047	6	True				
ANR	10173210	AssignmentExpression	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10173047	0		=			
ANR	10173211	Identifier	t3		10173047	0					
ANR	10173212	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10173047	1					
ANR	10173213	Identifier	ToLinear8		10173047	0					
ANR	10173214	BitAndExpression	( cr += wp [ 0 ] ) & mask		10173047	1		&			
ANR	10173215	AssignmentExpression	cr += wp [ 0 ]		10173047	0		+=			
ANR	10173216	Identifier	cr		10173047	0					
ANR	10173217	ArrayIndexing	wp [ 0 ]		10173047	1					
ANR	10173218	Identifier	wp		10173047	0					
ANR	10173219	PrimaryExpression	0		10173047	1					
ANR	10173220	Identifier	mask		10173047	1					
ANR	10173221	ExpressionStatement	op [ 1 ] = t1	413:2:12541:12551	10173047	7	True				
ANR	10173222	AssignmentExpression	op [ 1 ] = t1		10173047	0		=			
ANR	10173223	ArrayIndexing	op [ 1 ]		10173047	0					
ANR	10173224	Identifier	op		10173047	0					
ANR	10173225	PrimaryExpression	1		10173047	1					
ANR	10173226	Identifier	t1		10173047	1					
ANR	10173227	ExpressionStatement	op [ 2 ] = t2	414:2:12555:12565	10173047	8	True				
ANR	10173228	AssignmentExpression	op [ 2 ] = t2		10173047	0		=			
ANR	10173229	ArrayIndexing	op [ 2 ]		10173047	0					
ANR	10173230	Identifier	op		10173047	0					
ANR	10173231	PrimaryExpression	2		10173047	1					
ANR	10173232	Identifier	t2		10173047	1					
ANR	10173233	ExpressionStatement	op [ 3 ] = t3	415:2:12569:12579	10173047	9	True				
ANR	10173234	AssignmentExpression	op [ 3 ] = t3		10173047	0		=			
ANR	10173235	ArrayIndexing	op [ 3 ]		10173047	0					
ANR	10173236	Identifier	op		10173047	0					
ANR	10173237	PrimaryExpression	3		10173047	1					
ANR	10173238	Identifier	t3		10173047	1					
ANR	10173239	ElseStatement	else		10173047	0					
ANR	10173240	IfStatement	if ( stride == 4 )		10173047	0					
ANR	10173241	Condition	stride == 4	417:12:12600:12610	10173047	0	True				
ANR	10173242	EqualityExpression	stride == 4		10173047	0		==			
ANR	10173243	Identifier	stride		10173047	0					
ANR	10173244	PrimaryExpression	4		10173047	1					
ANR	10173245	CompoundStatement		28:25:623:623	10173047	1					
ANR	10173246	ExpressionStatement	t0 = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]	418:5:12620:12655	10173047	0	True				
ANR	10173247	AssignmentExpression	t0 = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		10173047	0		=			
ANR	10173248	Identifier	t0		10173047	0					
ANR	10173249	ArrayIndexing	ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		10173047	1					
ANR	10173250	Identifier	ToLinear8		10173047	0					
ANR	10173251	AssignmentExpression	ca = ( wp [ 3 ] & mask )		10173047	1		=			
ANR	10173252	Identifier	ca		10173047	0					
ANR	10173253	BitAndExpression	wp [ 3 ] & mask		10173047	1		&			
ANR	10173254	ArrayIndexing	wp [ 3 ]		10173047	0					
ANR	10173255	Identifier	wp		10173047	0					
ANR	10173256	PrimaryExpression	3		10173047	1					
ANR	10173257	Identifier	mask		10173047	1					
ANR	10173258	ExpressionStatement	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	419:5:12662:12697	10173047	1	True				
ANR	10173259	AssignmentExpression	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10173047	0		=			
ANR	10173260	Identifier	t1		10173047	0					
ANR	10173261	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		10173047	1					
ANR	10173262	Identifier	ToLinear8		10173047	0					
ANR	10173263	AssignmentExpression	cb = ( wp [ 2 ] & mask )		10173047	1		=			
ANR	10173264	Identifier	cb		10173047	0					
ANR	10173265	BitAndExpression	wp [ 2 ] & mask		10173047	1		&			
ANR	10173266	ArrayIndexing	wp [ 2 ]		10173047	0					
ANR	10173267	Identifier	wp		10173047	0					
ANR	10173268	PrimaryExpression	2		10173047	1					
ANR	10173269	Identifier	mask		10173047	1					
ANR	10173270	ExpressionStatement	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	420:5:12704:12739	10173047	2	True				
ANR	10173271	AssignmentExpression	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10173047	0		=			
ANR	10173272	Identifier	t2		10173047	0					
ANR	10173273	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		10173047	1					
ANR	10173274	Identifier	ToLinear8		10173047	0					
ANR	10173275	AssignmentExpression	cg = ( wp [ 1 ] & mask )		10173047	1		=			
ANR	10173276	Identifier	cg		10173047	0					
ANR	10173277	BitAndExpression	wp [ 1 ] & mask		10173047	1		&			
ANR	10173278	ArrayIndexing	wp [ 1 ]		10173047	0					
ANR	10173279	Identifier	wp		10173047	0					
ANR	10173280	PrimaryExpression	1		10173047	1					
ANR	10173281	Identifier	mask		10173047	1					
ANR	10173282	ExpressionStatement	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	421:5:12746:12781	10173047	3	True				
ANR	10173283	AssignmentExpression	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10173047	0		=			
ANR	10173284	Identifier	t3		10173047	0					
ANR	10173285	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		10173047	1					
ANR	10173286	Identifier	ToLinear8		10173047	0					
ANR	10173287	AssignmentExpression	cr = ( wp [ 0 ] & mask )		10173047	1		=			
ANR	10173288	Identifier	cr		10173047	0					
ANR	10173289	BitAndExpression	wp [ 0 ] & mask		10173047	1		&			
ANR	10173290	ArrayIndexing	wp [ 0 ]		10173047	0					
ANR	10173291	Identifier	wp		10173047	0					
ANR	10173292	PrimaryExpression	0		10173047	1					
ANR	10173293	Identifier	mask		10173047	1					
ANR	10173294	ExpressionStatement	op [ 0 ] = t0	422:5:12788:12798	10173047	4	True				
ANR	10173295	AssignmentExpression	op [ 0 ] = t0		10173047	0		=			
ANR	10173296	ArrayIndexing	op [ 0 ]		10173047	0					
ANR	10173297	Identifier	op		10173047	0					
ANR	10173298	PrimaryExpression	0		10173047	1					
ANR	10173299	Identifier	t0		10173047	1					
ANR	10173300	ExpressionStatement	op [ 1 ] = t1	423:5:12805:12815	10173047	5	True				
ANR	10173301	AssignmentExpression	op [ 1 ] = t1		10173047	0		=			
ANR	10173302	ArrayIndexing	op [ 1 ]		10173047	0					
ANR	10173303	Identifier	op		10173047	0					
ANR	10173304	PrimaryExpression	1		10173047	1					
ANR	10173305	Identifier	t1		10173047	1					
ANR	10173306	ExpressionStatement	op [ 2 ] = t2	424:5:12822:12832	10173047	6	True				
ANR	10173307	AssignmentExpression	op [ 2 ] = t2		10173047	0		=			
ANR	10173308	ArrayIndexing	op [ 2 ]		10173047	0					
ANR	10173309	Identifier	op		10173047	0					
ANR	10173310	PrimaryExpression	2		10173047	1					
ANR	10173311	Identifier	t2		10173047	1					
ANR	10173312	ExpressionStatement	op [ 3 ] = t3	425:5:12839:12849	10173047	7	True				
ANR	10173313	AssignmentExpression	op [ 3 ] = t3		10173047	0		=			
ANR	10173314	ArrayIndexing	op [ 3 ]		10173047	0					
ANR	10173315	Identifier	op		10173047	0					
ANR	10173316	PrimaryExpression	3		10173047	1					
ANR	10173317	Identifier	t3		10173047	1					
ANR	10173318	ExpressionStatement	n -= 4	426:5:12856:12862	10173047	8	True				
ANR	10173319	AssignmentExpression	n -= 4		10173047	0		-=			
ANR	10173320	Identifier	n		10173047	0					
ANR	10173321	PrimaryExpression	4		10173047	1					
ANR	10173322	WhileStatement	while ( n > 0 )		10173047	9					
ANR	10173323	Condition	n > 0	427:12:12876:12880	10173047	0	True				
ANR	10173324	RelationalExpression	n > 0		10173047	0		>			
ANR	10173325	Identifier	n		10173047	0					
ANR	10173326	PrimaryExpression	0		10173047	1					
ANR	10173327	CompoundStatement		38:19:893:893	10173047	1					
ANR	10173328	ExpressionStatement	n -= 4	428:2:12887:12893	10173047	0	True				
ANR	10173329	AssignmentExpression	n -= 4		10173047	0		-=			
ANR	10173330	Identifier	n		10173047	0					
ANR	10173331	PrimaryExpression	4		10173047	1					
ANR	10173332	ExpressionStatement	wp += 4	429:2:12897:12904	10173047	1	True				
ANR	10173333	AssignmentExpression	wp += 4		10173047	0		+=			
ANR	10173334	Identifier	wp		10173047	0					
ANR	10173335	PrimaryExpression	4		10173047	1					
ANR	10173336	ExpressionStatement	op += 4	430:2:12908:12915	10173047	2	True				
ANR	10173337	AssignmentExpression	op += 4		10173047	0		+=			
ANR	10173338	Identifier	op		10173047	0					
ANR	10173339	PrimaryExpression	4		10173047	1					
ANR	10173340	ExpressionStatement	t0 = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]	431:2:12919:12955	10173047	3	True				
ANR	10173341	AssignmentExpression	t0 = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		10173047	0		=			
ANR	10173342	Identifier	t0		10173047	0					
ANR	10173343	ArrayIndexing	ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		10173047	1					
ANR	10173344	Identifier	ToLinear8		10173047	0					
ANR	10173345	BitAndExpression	( ca += wp [ 3 ] ) & mask		10173047	1		&			
ANR	10173346	AssignmentExpression	ca += wp [ 3 ]		10173047	0		+=			
ANR	10173347	Identifier	ca		10173047	0					
ANR	10173348	ArrayIndexing	wp [ 3 ]		10173047	1					
ANR	10173349	Identifier	wp		10173047	0					
ANR	10173350	PrimaryExpression	3		10173047	1					
ANR	10173351	Identifier	mask		10173047	1					
ANR	10173352	ExpressionStatement	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	432:2:12959:12995	10173047	4	True				
ANR	10173353	AssignmentExpression	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10173047	0		=			
ANR	10173354	Identifier	t1		10173047	0					
ANR	10173355	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		10173047	1					
ANR	10173356	Identifier	ToLinear8		10173047	0					
ANR	10173357	BitAndExpression	( cb += wp [ 2 ] ) & mask		10173047	1		&			
ANR	10173358	AssignmentExpression	cb += wp [ 2 ]		10173047	0		+=			
ANR	10173359	Identifier	cb		10173047	0					
ANR	10173360	ArrayIndexing	wp [ 2 ]		10173047	1					
ANR	10173361	Identifier	wp		10173047	0					
ANR	10173362	PrimaryExpression	2		10173047	1					
ANR	10173363	Identifier	mask		10173047	1					
ANR	10173364	ExpressionStatement	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	433:2:12999:13035	10173047	5	True				
ANR	10173365	AssignmentExpression	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10173047	0		=			
ANR	10173366	Identifier	t2		10173047	0					
ANR	10173367	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		10173047	1					
ANR	10173368	Identifier	ToLinear8		10173047	0					
ANR	10173369	BitAndExpression	( cg += wp [ 1 ] ) & mask		10173047	1		&			
ANR	10173370	AssignmentExpression	cg += wp [ 1 ]		10173047	0		+=			
ANR	10173371	Identifier	cg		10173047	0					
ANR	10173372	ArrayIndexing	wp [ 1 ]		10173047	1					
ANR	10173373	Identifier	wp		10173047	0					
ANR	10173374	PrimaryExpression	1		10173047	1					
ANR	10173375	Identifier	mask		10173047	1					
ANR	10173376	ExpressionStatement	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	434:2:13039:13075	10173047	6	True				
ANR	10173377	AssignmentExpression	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10173047	0		=			
ANR	10173378	Identifier	t3		10173047	0					
ANR	10173379	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		10173047	1					
ANR	10173380	Identifier	ToLinear8		10173047	0					
ANR	10173381	BitAndExpression	( cr += wp [ 0 ] ) & mask		10173047	1		&			
ANR	10173382	AssignmentExpression	cr += wp [ 0 ]		10173047	0		+=			
ANR	10173383	Identifier	cr		10173047	0					
ANR	10173384	ArrayIndexing	wp [ 0 ]		10173047	1					
ANR	10173385	Identifier	wp		10173047	0					
ANR	10173386	PrimaryExpression	0		10173047	1					
ANR	10173387	Identifier	mask		10173047	1					
ANR	10173388	ExpressionStatement	op [ 0 ] = t0	435:2:13079:13089	10173047	7	True				
ANR	10173389	AssignmentExpression	op [ 0 ] = t0		10173047	0		=			
ANR	10173390	ArrayIndexing	op [ 0 ]		10173047	0					
ANR	10173391	Identifier	op		10173047	0					
ANR	10173392	PrimaryExpression	0		10173047	1					
ANR	10173393	Identifier	t0		10173047	1					
ANR	10173394	ExpressionStatement	op [ 1 ] = t1	436:2:13093:13103	10173047	8	True				
ANR	10173395	AssignmentExpression	op [ 1 ] = t1		10173047	0		=			
ANR	10173396	ArrayIndexing	op [ 1 ]		10173047	0					
ANR	10173397	Identifier	op		10173047	0					
ANR	10173398	PrimaryExpression	1		10173047	1					
ANR	10173399	Identifier	t1		10173047	1					
ANR	10173400	ExpressionStatement	op [ 2 ] = t2	437:2:13107:13117	10173047	9	True				
ANR	10173401	AssignmentExpression	op [ 2 ] = t2		10173047	0		=			
ANR	10173402	ArrayIndexing	op [ 2 ]		10173047	0					
ANR	10173403	Identifier	op		10173047	0					
ANR	10173404	PrimaryExpression	2		10173047	1					
ANR	10173405	Identifier	t2		10173047	1					
ANR	10173406	ExpressionStatement	op [ 3 ] = t3	438:2:13121:13131	10173047	10	True				
ANR	10173407	AssignmentExpression	op [ 3 ] = t3		10173047	0		=			
ANR	10173408	ArrayIndexing	op [ 3 ]		10173047	0					
ANR	10173409	Identifier	op		10173047	0					
ANR	10173410	PrimaryExpression	3		10173047	1					
ANR	10173411	Identifier	t3		10173047	1					
ANR	10173412	ElseStatement	else		10173047	0					
ANR	10173413	CompoundStatement		51:8:1158:1158	10173047	0					
ANR	10173414	Statement	REPEAT	441:5:13155:13160	10173047	0	True				
ANR	10173415	Statement	(	441:11:13161:13161	10173047	1	True				
ANR	10173416	ExpressionStatement	"stride , * op = ToLinear8 [ * wp & mask ]"	441:12:13162:13195	10173047	2	True				
ANR	10173417	Expression	"stride , * op = ToLinear8 [ * wp & mask ]"		10173047	0					
ANR	10173418	Identifier	stride		10173047	0					
ANR	10173419	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		10173047	1		=			
ANR	10173420	UnaryOperationExpression	* op		10173047	0					
ANR	10173421	UnaryOperator	*		10173047	0					
ANR	10173422	Identifier	op		10173047	1					
ANR	10173423	ArrayIndexing	ToLinear8 [ * wp & mask ]		10173047	1					
ANR	10173424	Identifier	ToLinear8		10173047	0					
ANR	10173425	BitAndExpression	* wp & mask		10173047	1		&			
ANR	10173426	UnaryOperationExpression	* wp		10173047	0					
ANR	10173427	UnaryOperator	*		10173047	0					
ANR	10173428	Identifier	wp		10173047	1					
ANR	10173429	Identifier	mask		10173047	1					
ANR	10173430	ExpressionStatement	wp ++	441:47:13197:13201	10173047	3	True				
ANR	10173431	PostIncDecOperationExpression	wp ++		10173047	0					
ANR	10173432	Identifier	wp		10173047	0					
ANR	10173433	IncDec	++		10173047	1					
ANR	10173434	Statement	op	441:53:13203:13204	10173047	4	True				
ANR	10173435	Statement	++	441:55:13205:13206	10173047	5	True				
ANR	10173436	Statement	)	441:57:13207:13207	10173047	6	True				
ANR	10173437	ExpressionStatement	n -= stride	442:5:13214:13225	10173047	7	True				
ANR	10173438	AssignmentExpression	n -= stride		10173047	0		-=			
ANR	10173439	Identifier	n		10173047	0					
ANR	10173440	Identifier	stride		10173047	1					
ANR	10173441	WhileStatement	while ( n > 0 )		10173047	8					
ANR	10173442	Condition	n > 0	443:12:13239:13243	10173047	0	True				
ANR	10173443	RelationalExpression	n > 0		10173047	0		>			
ANR	10173444	Identifier	n		10173047	0					
ANR	10173445	PrimaryExpression	0		10173047	1					
ANR	10173446	CompoundStatement		54:19:1256:1256	10173047	1					
ANR	10173447	Statement	REPEAT	444:2:13250:13255	10173047	0	True				
ANR	10173448	Statement	(	444:8:13256:13256	10173047	1	True				
ANR	10173449	ExpressionStatement	"stride , wp [ stride ] += * wp"	444:9:13257:13288	10173047	2	True				
ANR	10173450	Expression	"stride , wp [ stride ] += * wp"		10173047	0					
ANR	10173451	Identifier	stride		10173047	0					
ANR	10173452	AssignmentExpression	wp [ stride ] += * wp		10173047	1		+=			
ANR	10173453	ArrayIndexing	wp [ stride ]		10173047	0					
ANR	10173454	Identifier	wp		10173047	0					
ANR	10173455	Identifier	stride		10173047	1					
ANR	10173456	UnaryOperationExpression	* wp		10173047	1					
ANR	10173457	UnaryOperator	*		10173047	0					
ANR	10173458	Identifier	wp		10173047	1					
ANR	10173459	ExpressionStatement	* op = ToLinear8 [ * wp & mask ]	445:25:13290:13315	10173047	3	True				
ANR	10173460	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		10173047	0		=			
ANR	10173461	UnaryOperationExpression	* op		10173047	0					
ANR	10173462	UnaryOperator	*		10173047	0					
ANR	10173463	Identifier	op		10173047	1					
ANR	10173464	ArrayIndexing	ToLinear8 [ * wp & mask ]		10173047	1					
ANR	10173465	Identifier	ToLinear8		10173047	0					
ANR	10173466	BitAndExpression	* wp & mask		10173047	1		&			
ANR	10173467	UnaryOperationExpression	* wp		10173047	0					
ANR	10173468	UnaryOperator	*		10173047	0					
ANR	10173469	Identifier	wp		10173047	1					
ANR	10173470	Identifier	mask		10173047	1					
ANR	10173471	ExpressionStatement	wp ++	445:52:13317:13321	10173047	4	True				
ANR	10173472	PostIncDecOperationExpression	wp ++		10173047	0					
ANR	10173473	Identifier	wp		10173047	0					
ANR	10173474	IncDec	++		10173047	1					
ANR	10173475	Statement	op	445:58:13323:13324	10173047	5	True				
ANR	10173476	Statement	++	445:60:13325:13326	10173047	6	True				
ANR	10173477	Statement	)	445:62:13327:13327	10173047	7	True				
ANR	10173478	ExpressionStatement	n -= stride	446:2:13331:13342	10173047	8	True				
ANR	10173479	AssignmentExpression	n -= stride		10173047	0		-=			
ANR	10173480	Identifier	n		10173047	0					
ANR	10173481	Identifier	stride		10173047	1					
ANR	10173482	ReturnType	static void		10173047	1					
ANR	10173483	Identifier	horizontalAccumulate8abgr		10173047	2					
ANR	10173484	ParameterList	"uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8"		10173047	3					
ANR	10173485	Parameter	uint16 * wp	388:26:11912:11921	10173047	0	True				
ANR	10173486	ParameterType	uint16 *		10173047	0					
ANR	10173487	Identifier	wp		10173047	1					
ANR	10173488	Parameter	int n	388:38:11924:11928	10173047	1	True				
ANR	10173489	ParameterType	int		10173047	0					
ANR	10173490	Identifier	n		10173047	1					
ANR	10173491	Parameter	int stride	388:45:11931:11940	10173047	2	True				
ANR	10173492	ParameterType	int		10173047	0					
ANR	10173493	Identifier	stride		10173047	1					
ANR	10173494	Parameter	unsigned char * op	388:57:11943:11959	10173047	3	True				
ANR	10173495	ParameterType	unsigned char *		10173047	0					
ANR	10173496	Identifier	op		10173047	1					
ANR	10173497	Parameter	unsigned char * ToLinear8	389:1:11963:11986	10173047	4	True				
ANR	10173498	ParameterType	unsigned char *		10173047	0					
ANR	10173499	Identifier	ToLinear8		10173047	1					
ANR	10173500	CFGEntryNode	ENTRY		10173047		True				
ANR	10173501	CFGExitNode	EXIT		10173047		True				
ANR	10173502	Symbol	op		10173047						
ANR	10173503	Symbol	* stride		10173047						
ANR	10173504	Symbol	ToLinear8		10173047						
ANR	10173505	Symbol	* mask		10173047						
ANR	10173506	Symbol	cg		10173047						
ANR	10173507	Symbol	* op		10173047						
ANR	10173508	Symbol	* * wp		10173047						
ANR	10173509	Symbol	stride		10173047						
ANR	10173510	Symbol	* ToLinear8		10173047						
ANR	10173511	Symbol	n		10173047						
ANR	10173512	Symbol	cr		10173047						
ANR	10173513	Symbol	CODE_MASK		10173047						
ANR	10173514	Symbol	wp		10173047						
ANR	10173515	Symbol	t0		10173047						
ANR	10173516	Symbol	* wp		10173047						
ANR	10173517	Symbol	t1		10173047						
ANR	10173518	Symbol	ca		10173047						
ANR	10173519	Symbol	t2		10173047						
ANR	10173520	Symbol	mask		10173047						
ANR	10173521	Symbol	cb		10173047						
ANR	10173522	Symbol	t3		10173047						
ANR	10173523	ClassDef	<unnamed>	456:8:13462:14026							
ANR	10173524	DeclStmt									
ANR	10173525	Decl							TIFFPredictorState	TIFFPredictorState	predict
ANR	10173526	DeclStmt									
ANR	10173527	Decl							z_stream	z_stream	stream
ANR	10173528	DeclStmt									
ANR	10173529	Decl							tmsize_t	tmsize_t	tbuf_size
ANR	10173530	DeclStmt									
ANR	10173531	Decl							uint16	uint16 *	tbuf
ANR	10173532	DeclStmt									
ANR	10173533	Decl							uint16	uint16	stride
ANR	10173534	DeclStmt									
ANR	10173535	Decl							int	int	state
ANR	10173536	DeclStmt									
ANR	10173537	Decl							int	int	user_datafmt
ANR	10173538	DeclStmt									
ANR	10173539	Decl							int	int	quality
ANR	10173540	DeclStmt									
ANR	10173541	Decl							TIFFVSetMethod	TIFFVSetMethod	vgetparent
ANR	10173542	DeclStmt									
ANR	10173543	Decl							TIFFVSetMethod	TIFFVSetMethod	vsetparent
ANR	10173544	DeclStmt									
ANR	10173545	Decl							float	float *	ToLinearF
ANR	10173546	DeclStmt									
ANR	10173547	Decl							uint16	uint16 *	ToLinear16
ANR	10173548	DeclStmt									
ANR	10173549	Decl							unsigned char	unsigned char *	ToLinear8
ANR	10173550	DeclStmt									
ANR	10173551	Decl							uint16	uint16 *	FromLT2
ANR	10173552	DeclStmt									
ANR	10173553	Decl							uint16	uint16 *	From14
ANR	10173554	DeclStmt									
ANR	10173555	Decl							uint16	uint16 *	From8
ANR	10173556	DeclStmt									
ANR	10173557	Decl							float	float	Fltsize
ANR	10173558	DeclStmt									
ANR	10173559	Decl							float	float	LogK1
ANR	10173560	Decl							float	float	LogK2
ANR	10173561	DeclStmt									
ANR	10173562	Decl									PixarLogState
ANR	10173563	Function	PixarLogMakeTables	482:0:14029:17378							
ANR	10173564	FunctionDef	PixarLogMakeTables (PixarLogState * sp)		10173563	0					
ANR	10173565	CompoundStatement		484:0:14078:17378	10173563	0					
ANR	10173566	IdentifierDeclStatement	"int nlin , lt2size ;"	497:4:14645:14663	10173563	0	True				
ANR	10173567	IdentifierDecl	nlin		10173563	0					
ANR	10173568	IdentifierDeclType	int		10173563	0					
ANR	10173569	Identifier	nlin		10173563	1					
ANR	10173570	IdentifierDecl	lt2size		10173563	1					
ANR	10173571	IdentifierDeclType	int		10173563	0					
ANR	10173572	Identifier	lt2size		10173563	1					
ANR	10173573	IdentifierDeclStatement	"int i , j ;"	498:4:14669:14678	10173563	1	True				
ANR	10173574	IdentifierDecl	i		10173563	0					
ANR	10173575	IdentifierDeclType	int		10173563	0					
ANR	10173576	Identifier	i		10173563	1					
ANR	10173577	IdentifierDecl	j		10173563	1					
ANR	10173578	IdentifierDeclType	int		10173563	0					
ANR	10173579	Identifier	j		10173563	1					
ANR	10173580	IdentifierDeclStatement	"double b , c , linstep , v ;"	499:4:14684:14708	10173563	2	True				
ANR	10173581	IdentifierDecl	b		10173563	0					
ANR	10173582	IdentifierDeclType	double		10173563	0					
ANR	10173583	Identifier	b		10173563	1					
ANR	10173584	IdentifierDecl	c		10173563	1					
ANR	10173585	IdentifierDeclType	double		10173563	0					
ANR	10173586	Identifier	c		10173563	1					
ANR	10173587	IdentifierDecl	linstep		10173563	2					
ANR	10173588	IdentifierDeclType	double		10173563	0					
ANR	10173589	Identifier	linstep		10173563	1					
ANR	10173590	IdentifierDecl	v		10173563	3					
ANR	10173591	IdentifierDeclType	double		10173563	0					
ANR	10173592	Identifier	v		10173563	1					
ANR	10173593	IdentifierDeclStatement	float * ToLinearF ;	500:4:14714:14730	10173563	3	True				
ANR	10173594	IdentifierDecl	* ToLinearF		10173563	0					
ANR	10173595	IdentifierDeclType	float *		10173563	0					
ANR	10173596	Identifier	ToLinearF		10173563	1					
ANR	10173597	IdentifierDeclStatement	uint16 * ToLinear16 ;	501:4:14736:14754	10173563	4	True				
ANR	10173598	IdentifierDecl	* ToLinear16		10173563	0					
ANR	10173599	IdentifierDeclType	uint16 *		10173563	0					
ANR	10173600	Identifier	ToLinear16		10173563	1					
ANR	10173601	IdentifierDeclStatement	unsigned char * ToLinear8 ;	502:4:14760:14784	10173563	5	True				
ANR	10173602	IdentifierDecl	* ToLinear8		10173563	0					
ANR	10173603	IdentifierDeclType	unsigned char *		10173563	0					
ANR	10173604	Identifier	ToLinear8		10173563	1					
ANR	10173605	IdentifierDeclStatement	uint16 * FromLT2 ;	503:4:14790:14806	10173563	6	True				
ANR	10173606	IdentifierDecl	* FromLT2		10173563	0					
ANR	10173607	IdentifierDeclType	uint16 *		10173563	0					
ANR	10173608	Identifier	FromLT2		10173563	1					
ANR	10173609	IdentifierDeclStatement	uint16 * From14 ;	504:4:14812:14827	10173563	7	True				
ANR	10173610	IdentifierDecl	* From14		10173563	0					
ANR	10173611	IdentifierDeclType	uint16 *		10173563	0					
ANR	10173612	Identifier	From14		10173563	1					
ANR	10173613	IdentifierDeclStatement	uint16 * From8 ;	505:4:14883:14897	10173563	8	True				
ANR	10173614	IdentifierDecl	* From8		10173563	0					
ANR	10173615	IdentifierDeclType	uint16 *		10173563	0					
ANR	10173616	Identifier	From8		10173563	1					
ANR	10173617	ExpressionStatement	c = log ( RATIO )	507:4:14904:14918	10173563	9	True				
ANR	10173618	AssignmentExpression	c = log ( RATIO )		10173563	0		=			
ANR	10173619	Identifier	c		10173563	0					
ANR	10173620	CallExpression	log ( RATIO )		10173563	1					
ANR	10173621	Callee	log		10173563	0					
ANR	10173622	Identifier	log		10173563	0					
ANR	10173623	ArgumentList	RATIO		10173563	1					
ANR	10173624	Argument	RATIO		10173563	0					
ANR	10173625	Identifier	RATIO		10173563	0					
ANR	10173626	ExpressionStatement	nlin = ( int ) ( 1. / c )	508:4:14925:14943	10173563	10	True				
ANR	10173627	AssignmentExpression	nlin = ( int ) ( 1. / c )		10173563	0		=			
ANR	10173628	Identifier	nlin		10173563	0					
ANR	10173629	CastExpression	( int ) ( 1. / c )		10173563	1					
ANR	10173630	CastTarget	int		10173563	0					
ANR	10173631	MultiplicativeExpression	1. / c		10173563	1		/			
ANR	10173632	PrimaryExpression	1.		10173563	0					
ANR	10173633	Identifier	c		10173563	1					
ANR	10173634	ExpressionStatement	c = 1. / nlin	509:4:14979:14990	10173563	11	True				
ANR	10173635	AssignmentExpression	c = 1. / nlin		10173563	0		=			
ANR	10173636	Identifier	c		10173563	0					
ANR	10173637	MultiplicativeExpression	1. / nlin		10173563	1		/			
ANR	10173638	PrimaryExpression	1.		10173563	0					
ANR	10173639	Identifier	nlin		10173563	1					
ANR	10173640	ExpressionStatement	b = exp ( - c * ONE )	510:4:14996:15011	10173563	12	True				
ANR	10173641	AssignmentExpression	b = exp ( - c * ONE )		10173563	0		=			
ANR	10173642	Identifier	b		10173563	0					
ANR	10173643	CallExpression	exp ( - c * ONE )		10173563	1					
ANR	10173644	Callee	exp		10173563	0					
ANR	10173645	Identifier	exp		10173563	0					
ANR	10173646	ArgumentList	- c * ONE		10173563	1					
ANR	10173647	Argument	- c * ONE		10173563	0					
ANR	10173648	MultiplicativeExpression	- c * ONE		10173563	0		*			
ANR	10173649	UnaryOperationExpression	- c		10173563	0					
ANR	10173650	UnaryOperator	-		10173563	0					
ANR	10173651	Identifier	c		10173563	1					
ANR	10173652	Identifier	ONE		10173563	1					
ANR	10173653	ExpressionStatement	linstep = b * c * exp ( 1. )	511:4:15070:15091	10173563	13	True				
ANR	10173654	AssignmentExpression	linstep = b * c * exp ( 1. )		10173563	0		=			
ANR	10173655	Identifier	linstep		10173563	0					
ANR	10173656	MultiplicativeExpression	b * c * exp ( 1. )		10173563	1		*			
ANR	10173657	Identifier	b		10173563	0					
ANR	10173658	MultiplicativeExpression	c * exp ( 1. )		10173563	1		*			
ANR	10173659	Identifier	c		10173563	0					
ANR	10173660	CallExpression	exp ( 1. )		10173563	1					
ANR	10173661	Callee	exp		10173563	0					
ANR	10173662	Identifier	exp		10173563	0					
ANR	10173663	ArgumentList	1.		10173563	1					
ANR	10173664	Argument	1.		10173563	0					
ANR	10173665	PrimaryExpression	1.		10173563	0					
ANR	10173666	ExpressionStatement	sp -> LogK1 = ( float ) ( 1. / c )	513:4:15098:15123	10173563	14	True				
ANR	10173667	AssignmentExpression	sp -> LogK1 = ( float ) ( 1. / c )		10173563	0		=			
ANR	10173668	PtrMemberAccess	sp -> LogK1		10173563	0					
ANR	10173669	Identifier	sp		10173563	0					
ANR	10173670	Identifier	LogK1		10173563	1					
ANR	10173671	CastExpression	( float ) ( 1. / c )		10173563	1					
ANR	10173672	CastTarget	float		10173563	0					
ANR	10173673	MultiplicativeExpression	1. / c		10173563	1		/			
ANR	10173674	PrimaryExpression	1.		10173563	0					
ANR	10173675	Identifier	c		10173563	1					
ANR	10173676	ExpressionStatement	sp -> LogK2 = ( float ) ( 1. / b )	514:4:15169:15194	10173563	15	True				
ANR	10173677	AssignmentExpression	sp -> LogK2 = ( float ) ( 1. / b )		10173563	0		=			
ANR	10173678	PtrMemberAccess	sp -> LogK2		10173563	0					
ANR	10173679	Identifier	sp		10173563	0					
ANR	10173680	Identifier	LogK2		10173563	1					
ANR	10173681	CastExpression	( float ) ( 1. / b )		10173563	1					
ANR	10173682	CastTarget	float		10173563	0					
ANR	10173683	MultiplicativeExpression	1. / b		10173563	1		/			
ANR	10173684	PrimaryExpression	1.		10173563	0					
ANR	10173685	Identifier	b		10173563	1					
ANR	10173686	ExpressionStatement	lt2size = ( int ) ( 2. / linstep ) + 1	515:4:15200:15231	10173563	16	True				
ANR	10173687	AssignmentExpression	lt2size = ( int ) ( 2. / linstep ) + 1		10173563	0		=			
ANR	10173688	Identifier	lt2size		10173563	0					
ANR	10173689	AdditiveExpression	( int ) ( 2. / linstep ) + 1		10173563	1		+			
ANR	10173690	CastExpression	( int ) ( 2. / linstep )		10173563	0					
ANR	10173691	CastTarget	int		10173563	0					
ANR	10173692	MultiplicativeExpression	2. / linstep		10173563	1		/			
ANR	10173693	PrimaryExpression	2.		10173563	0					
ANR	10173694	Identifier	linstep		10173563	1					
ANR	10173695	PrimaryExpression	1		10173563	1					
ANR	10173696	ExpressionStatement	FromLT2 = ( uint16 * ) _TIFFmalloc ( lt2size * sizeof ( uint16 ) )	516:4:15237:15292	10173563	17	True				
ANR	10173697	AssignmentExpression	FromLT2 = ( uint16 * ) _TIFFmalloc ( lt2size * sizeof ( uint16 ) )		10173563	0		=			
ANR	10173698	Identifier	FromLT2		10173563	0					
ANR	10173699	CastExpression	( uint16 * ) _TIFFmalloc ( lt2size * sizeof ( uint16 ) )		10173563	1					
ANR	10173700	CastTarget	uint16 *		10173563	0					
ANR	10173701	CallExpression	_TIFFmalloc ( lt2size * sizeof ( uint16 ) )		10173563	1					
ANR	10173702	Callee	_TIFFmalloc		10173563	0					
ANR	10173703	Identifier	_TIFFmalloc		10173563	0					
ANR	10173704	ArgumentList	lt2size * sizeof ( uint16 )		10173563	1					
ANR	10173705	Argument	lt2size * sizeof ( uint16 )		10173563	0					
ANR	10173706	MultiplicativeExpression	lt2size * sizeof ( uint16 )		10173563	0		*			
ANR	10173707	Identifier	lt2size		10173563	0					
ANR	10173708	SizeofExpression	sizeof ( uint16 )		10173563	1					
ANR	10173709	Sizeof	sizeof		10173563	0					
ANR	10173710	SizeofOperand	uint16		10173563	1					
ANR	10173711	ExpressionStatement	From14 = ( uint16 * ) _TIFFmalloc ( 16384 * sizeof ( uint16 ) )	517:4:15298:15350	10173563	18	True				
ANR	10173712	AssignmentExpression	From14 = ( uint16 * ) _TIFFmalloc ( 16384 * sizeof ( uint16 ) )		10173563	0		=			
ANR	10173713	Identifier	From14		10173563	0					
ANR	10173714	CastExpression	( uint16 * ) _TIFFmalloc ( 16384 * sizeof ( uint16 ) )		10173563	1					
ANR	10173715	CastTarget	uint16 *		10173563	0					
ANR	10173716	CallExpression	_TIFFmalloc ( 16384 * sizeof ( uint16 ) )		10173563	1					
ANR	10173717	Callee	_TIFFmalloc		10173563	0					
ANR	10173718	Identifier	_TIFFmalloc		10173563	0					
ANR	10173719	ArgumentList	16384 * sizeof ( uint16 )		10173563	1					
ANR	10173720	Argument	16384 * sizeof ( uint16 )		10173563	0					
ANR	10173721	MultiplicativeExpression	16384 * sizeof ( uint16 )		10173563	0		*			
ANR	10173722	PrimaryExpression	16384		10173563	0					
ANR	10173723	SizeofExpression	sizeof ( uint16 )		10173563	1					
ANR	10173724	Sizeof	sizeof		10173563	0					
ANR	10173725	SizeofOperand	uint16		10173563	1					
ANR	10173726	ExpressionStatement	From8 = ( uint16 * ) _TIFFmalloc ( 256 * sizeof ( uint16 ) )	518:4:15356:15405	10173563	19	True				
ANR	10173727	AssignmentExpression	From8 = ( uint16 * ) _TIFFmalloc ( 256 * sizeof ( uint16 ) )		10173563	0		=			
ANR	10173728	Identifier	From8		10173563	0					
ANR	10173729	CastExpression	( uint16 * ) _TIFFmalloc ( 256 * sizeof ( uint16 ) )		10173563	1					
ANR	10173730	CastTarget	uint16 *		10173563	0					
ANR	10173731	CallExpression	_TIFFmalloc ( 256 * sizeof ( uint16 ) )		10173563	1					
ANR	10173732	Callee	_TIFFmalloc		10173563	0					
ANR	10173733	Identifier	_TIFFmalloc		10173563	0					
ANR	10173734	ArgumentList	256 * sizeof ( uint16 )		10173563	1					
ANR	10173735	Argument	256 * sizeof ( uint16 )		10173563	0					
ANR	10173736	MultiplicativeExpression	256 * sizeof ( uint16 )		10173563	0		*			
ANR	10173737	PrimaryExpression	256		10173563	0					
ANR	10173738	SizeofExpression	sizeof ( uint16 )		10173563	1					
ANR	10173739	Sizeof	sizeof		10173563	0					
ANR	10173740	SizeofOperand	uint16		10173563	1					
ANR	10173741	ExpressionStatement	ToLinearF = ( float * ) _TIFFmalloc ( TSIZEP1 * sizeof ( float ) )	519:4:15411:15468	10173563	20	True				
ANR	10173742	AssignmentExpression	ToLinearF = ( float * ) _TIFFmalloc ( TSIZEP1 * sizeof ( float ) )		10173563	0		=			
ANR	10173743	Identifier	ToLinearF		10173563	0					
ANR	10173744	CastExpression	( float * ) _TIFFmalloc ( TSIZEP1 * sizeof ( float ) )		10173563	1					
ANR	10173745	CastTarget	float *		10173563	0					
ANR	10173746	CallExpression	_TIFFmalloc ( TSIZEP1 * sizeof ( float ) )		10173563	1					
ANR	10173747	Callee	_TIFFmalloc		10173563	0					
ANR	10173748	Identifier	_TIFFmalloc		10173563	0					
ANR	10173749	ArgumentList	TSIZEP1 * sizeof ( float )		10173563	1					
ANR	10173750	Argument	TSIZEP1 * sizeof ( float )		10173563	0					
ANR	10173751	MultiplicativeExpression	TSIZEP1 * sizeof ( float )		10173563	0		*			
ANR	10173752	Identifier	TSIZEP1		10173563	0					
ANR	10173753	SizeofExpression	sizeof ( float )		10173563	1					
ANR	10173754	Sizeof	sizeof		10173563	0					
ANR	10173755	SizeofOperand	float		10173563	1					
ANR	10173756	ExpressionStatement	ToLinear16 = ( uint16 * ) _TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )	520:4:15474:15534	10173563	21	True				
ANR	10173757	AssignmentExpression	ToLinear16 = ( uint16 * ) _TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )		10173563	0		=			
ANR	10173758	Identifier	ToLinear16		10173563	0					
ANR	10173759	CastExpression	( uint16 * ) _TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )		10173563	1					
ANR	10173760	CastTarget	uint16 *		10173563	0					
ANR	10173761	CallExpression	_TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )		10173563	1					
ANR	10173762	Callee	_TIFFmalloc		10173563	0					
ANR	10173763	Identifier	_TIFFmalloc		10173563	0					
ANR	10173764	ArgumentList	TSIZEP1 * sizeof ( uint16 )		10173563	1					
ANR	10173765	Argument	TSIZEP1 * sizeof ( uint16 )		10173563	0					
ANR	10173766	MultiplicativeExpression	TSIZEP1 * sizeof ( uint16 )		10173563	0		*			
ANR	10173767	Identifier	TSIZEP1		10173563	0					
ANR	10173768	SizeofExpression	sizeof ( uint16 )		10173563	1					
ANR	10173769	Sizeof	sizeof		10173563	0					
ANR	10173770	SizeofOperand	uint16		10173563	1					
ANR	10173771	ExpressionStatement	ToLinear8 = ( unsigned char * ) _TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )	521:4:15540:15613	10173563	22	True				
ANR	10173772	AssignmentExpression	ToLinear8 = ( unsigned char * ) _TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )		10173563	0		=			
ANR	10173773	Identifier	ToLinear8		10173563	0					
ANR	10173774	CastExpression	( unsigned char * ) _TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )		10173563	1					
ANR	10173775	CastTarget	unsigned char *		10173563	0					
ANR	10173776	CallExpression	_TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )		10173563	1					
ANR	10173777	Callee	_TIFFmalloc		10173563	0					
ANR	10173778	Identifier	_TIFFmalloc		10173563	0					
ANR	10173779	ArgumentList	TSIZEP1 * sizeof ( unsigned char )		10173563	1					
ANR	10173780	Argument	TSIZEP1 * sizeof ( unsigned char )		10173563	0					
ANR	10173781	MultiplicativeExpression	TSIZEP1 * sizeof ( unsigned char )		10173563	0		*			
ANR	10173782	Identifier	TSIZEP1		10173563	0					
ANR	10173783	SizeofExpression	sizeof ( unsigned char )		10173563	1					
ANR	10173784	Sizeof	sizeof		10173563	0					
ANR	10173785	SizeofOperand	unsigned char		10173563	1					
ANR	10173786	IfStatement	if ( FromLT2 == NULL || From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL )		10173563	23					
ANR	10173787	Condition	FromLT2 == NULL || From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL	522:8:15623:15741	10173563	0	True				
ANR	10173788	OrExpression	FromLT2 == NULL || From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		10173563	0		||			
ANR	10173789	EqualityExpression	FromLT2 == NULL		10173563	0		==			
ANR	10173790	Identifier	FromLT2		10173563	0					
ANR	10173791	Identifier	NULL		10173563	1					
ANR	10173792	OrExpression	From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		10173563	1		||			
ANR	10173793	EqualityExpression	From14 == NULL		10173563	0		==			
ANR	10173794	Identifier	From14		10173563	0					
ANR	10173795	Identifier	NULL		10173563	1					
ANR	10173796	OrExpression	From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		10173563	1		||			
ANR	10173797	EqualityExpression	From8 == NULL		10173563	0		==			
ANR	10173798	Identifier	From8		10173563	0					
ANR	10173799	Identifier	NULL		10173563	1					
ANR	10173800	OrExpression	ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		10173563	1		||			
ANR	10173801	EqualityExpression	ToLinearF == NULL		10173563	0		==			
ANR	10173802	Identifier	ToLinearF		10173563	0					
ANR	10173803	Identifier	NULL		10173563	1					
ANR	10173804	OrExpression	ToLinear16 == NULL || ToLinear8 == NULL		10173563	1		||			
ANR	10173805	EqualityExpression	ToLinear16 == NULL		10173563	0		==			
ANR	10173806	Identifier	ToLinear16		10173563	0					
ANR	10173807	Identifier	NULL		10173563	1					
ANR	10173808	EqualityExpression	ToLinear8 == NULL		10173563	1		==			
ANR	10173809	Identifier	ToLinear8		10173563	0					
ANR	10173810	Identifier	NULL		10173563	1					
ANR	10173811	CompoundStatement		40:64:1665:1665	10173563	1					
ANR	10173812	IfStatement	if ( FromLT2 )		10173563	0					
ANR	10173813	Condition	FromLT2	524:5:15751:15757	10173563	0	True				
ANR	10173814	Identifier	FromLT2		10173563	0					
ANR	10173815	ExpressionStatement	_TIFFfree ( FromLT2 )	524:14:15760:15778	10173563	1	True				
ANR	10173816	CallExpression	_TIFFfree ( FromLT2 )		10173563	0					
ANR	10173817	Callee	_TIFFfree		10173563	0					
ANR	10173818	Identifier	_TIFFfree		10173563	0					
ANR	10173819	ArgumentList	FromLT2		10173563	1					
ANR	10173820	Argument	FromLT2		10173563	0					
ANR	10173821	Identifier	FromLT2		10173563	0					
ANR	10173822	IfStatement	if ( From14 )		10173563	1					
ANR	10173823	Condition	From14	525:5:15785:15790	10173563	0	True				
ANR	10173824	Identifier	From14		10173563	0					
ANR	10173825	ExpressionStatement	_TIFFfree ( From14 )	525:13:15793:15810	10173563	1	True				
ANR	10173826	CallExpression	_TIFFfree ( From14 )		10173563	0					
ANR	10173827	Callee	_TIFFfree		10173563	0					
ANR	10173828	Identifier	_TIFFfree		10173563	0					
ANR	10173829	ArgumentList	From14		10173563	1					
ANR	10173830	Argument	From14		10173563	0					
ANR	10173831	Identifier	From14		10173563	0					
ANR	10173832	IfStatement	if ( From8 )		10173563	2					
ANR	10173833	Condition	From8	526:5:15817:15821	10173563	0	True				
ANR	10173834	Identifier	From8		10173563	0					
ANR	10173835	ExpressionStatement	_TIFFfree ( From8 )	526:12:15824:15840	10173563	1	True				
ANR	10173836	CallExpression	_TIFFfree ( From8 )		10173563	0					
ANR	10173837	Callee	_TIFFfree		10173563	0					
ANR	10173838	Identifier	_TIFFfree		10173563	0					
ANR	10173839	ArgumentList	From8		10173563	1					
ANR	10173840	Argument	From8		10173563	0					
ANR	10173841	Identifier	From8		10173563	0					
ANR	10173842	IfStatement	if ( ToLinearF )		10173563	3					
ANR	10173843	Condition	ToLinearF	527:5:15847:15855	10173563	0	True				
ANR	10173844	Identifier	ToLinearF		10173563	0					
ANR	10173845	ExpressionStatement	_TIFFfree ( ToLinearF )	527:16:15858:15878	10173563	1	True				
ANR	10173846	CallExpression	_TIFFfree ( ToLinearF )		10173563	0					
ANR	10173847	Callee	_TIFFfree		10173563	0					
ANR	10173848	Identifier	_TIFFfree		10173563	0					
ANR	10173849	ArgumentList	ToLinearF		10173563	1					
ANR	10173850	Argument	ToLinearF		10173563	0					
ANR	10173851	Identifier	ToLinearF		10173563	0					
ANR	10173852	IfStatement	if ( ToLinear16 )		10173563	4					
ANR	10173853	Condition	ToLinear16	528:5:15885:15894	10173563	0	True				
ANR	10173854	Identifier	ToLinear16		10173563	0					
ANR	10173855	ExpressionStatement	_TIFFfree ( ToLinear16 )	528:17:15897:15918	10173563	1	True				
ANR	10173856	CallExpression	_TIFFfree ( ToLinear16 )		10173563	0					
ANR	10173857	Callee	_TIFFfree		10173563	0					
ANR	10173858	Identifier	_TIFFfree		10173563	0					
ANR	10173859	ArgumentList	ToLinear16		10173563	1					
ANR	10173860	Argument	ToLinear16		10173563	0					
ANR	10173861	Identifier	ToLinear16		10173563	0					
ANR	10173862	IfStatement	if ( ToLinear8 )		10173563	5					
ANR	10173863	Condition	ToLinear8	529:5:15925:15933	10173563	0	True				
ANR	10173864	Identifier	ToLinear8		10173563	0					
ANR	10173865	ExpressionStatement	_TIFFfree ( ToLinear8 )	529:16:15936:15956	10173563	1	True				
ANR	10173866	CallExpression	_TIFFfree ( ToLinear8 )		10173563	0					
ANR	10173867	Callee	_TIFFfree		10173563	0					
ANR	10173868	Identifier	_TIFFfree		10173563	0					
ANR	10173869	ArgumentList	ToLinear8		10173563	1					
ANR	10173870	Argument	ToLinear8		10173563	0					
ANR	10173871	Identifier	ToLinear8		10173563	0					
ANR	10173872	ExpressionStatement	sp -> FromLT2 = NULL	530:1:15959:15977	10173563	6	True				
ANR	10173873	AssignmentExpression	sp -> FromLT2 = NULL		10173563	0		=			
ANR	10173874	PtrMemberAccess	sp -> FromLT2		10173563	0					
ANR	10173875	Identifier	sp		10173563	0					
ANR	10173876	Identifier	FromLT2		10173563	1					
ANR	10173877	Identifier	NULL		10173563	1					
ANR	10173878	ExpressionStatement	sp -> From14 = NULL	531:1:15980:15997	10173563	7	True				
ANR	10173879	AssignmentExpression	sp -> From14 = NULL		10173563	0		=			
ANR	10173880	PtrMemberAccess	sp -> From14		10173563	0					
ANR	10173881	Identifier	sp		10173563	0					
ANR	10173882	Identifier	From14		10173563	1					
ANR	10173883	Identifier	NULL		10173563	1					
ANR	10173884	ExpressionStatement	sp -> From8 = NULL	532:1:16000:16016	10173563	8	True				
ANR	10173885	AssignmentExpression	sp -> From8 = NULL		10173563	0		=			
ANR	10173886	PtrMemberAccess	sp -> From8		10173563	0					
ANR	10173887	Identifier	sp		10173563	0					
ANR	10173888	Identifier	From8		10173563	1					
ANR	10173889	Identifier	NULL		10173563	1					
ANR	10173890	ExpressionStatement	sp -> ToLinearF = NULL	533:1:16019:16039	10173563	9	True				
ANR	10173891	AssignmentExpression	sp -> ToLinearF = NULL		10173563	0		=			
ANR	10173892	PtrMemberAccess	sp -> ToLinearF		10173563	0					
ANR	10173893	Identifier	sp		10173563	0					
ANR	10173894	Identifier	ToLinearF		10173563	1					
ANR	10173895	Identifier	NULL		10173563	1					
ANR	10173896	ExpressionStatement	sp -> ToLinear16 = NULL	534:1:16042:16063	10173563	10	True				
ANR	10173897	AssignmentExpression	sp -> ToLinear16 = NULL		10173563	0		=			
ANR	10173898	PtrMemberAccess	sp -> ToLinear16		10173563	0					
ANR	10173899	Identifier	sp		10173563	0					
ANR	10173900	Identifier	ToLinear16		10173563	1					
ANR	10173901	Identifier	NULL		10173563	1					
ANR	10173902	ExpressionStatement	sp -> ToLinear8 = NULL	535:1:16066:16086	10173563	11	True				
ANR	10173903	AssignmentExpression	sp -> ToLinear8 = NULL		10173563	0		=			
ANR	10173904	PtrMemberAccess	sp -> ToLinear8		10173563	0					
ANR	10173905	Identifier	sp		10173563	0					
ANR	10173906	Identifier	ToLinear8		10173563	1					
ANR	10173907	Identifier	NULL		10173563	1					
ANR	10173908	ReturnStatement	return 0 ;	536:1:16089:16097	10173563	12	True				
ANR	10173909	PrimaryExpression	0		10173563	0					
ANR	10173910	ExpressionStatement	j = 0	539:4:16110:16115	10173563	24	True				
ANR	10173911	AssignmentExpression	j = 0		10173563	0		=			
ANR	10173912	Identifier	j		10173563	0					
ANR	10173913	PrimaryExpression	0		10173563	1					
ANR	10173914	ForStatement	for ( i = 0 ; i < nlin ; i ++ )		10173563	25					
ANR	10173915	ForInit	i = 0 ;	541:9:16127:16132	10173563	0	True				
ANR	10173916	AssignmentExpression	i = 0		10173563	0		=			
ANR	10173917	Identifier	i		10173563	0					
ANR	10173918	PrimaryExpression	0		10173563	1					
ANR	10173919	Condition	i < nlin	541:16:16134:16141	10173563	1	True				
ANR	10173920	RelationalExpression	i < nlin		10173563	0		<			
ANR	10173921	Identifier	i		10173563	0					
ANR	10173922	Identifier	nlin		10173563	1					
ANR	10173923	PostIncDecOperationExpression	i ++	541:26:16144:16146	10173563	2	True				
ANR	10173924	Identifier	i		10173563	0					
ANR	10173925	IncDec	++		10173563	1					
ANR	10173926	CompoundStatement		58:32:2071:2071	10173563	3					
ANR	10173927	ExpressionStatement	v = i * linstep	542:1:16153:16168	10173563	0	True				
ANR	10173928	AssignmentExpression	v = i * linstep		10173563	0		=			
ANR	10173929	Identifier	v		10173563	0					
ANR	10173930	MultiplicativeExpression	i * linstep		10173563	1		*			
ANR	10173931	Identifier	i		10173563	0					
ANR	10173932	Identifier	linstep		10173563	1					
ANR	10173933	ExpressionStatement	ToLinearF [ j ++ ] = ( float ) v	543:1:16171:16196	10173563	1	True				
ANR	10173934	AssignmentExpression	ToLinearF [ j ++ ] = ( float ) v		10173563	0		=			
ANR	10173935	ArrayIndexing	ToLinearF [ j ++ ]		10173563	0					
ANR	10173936	Identifier	ToLinearF		10173563	0					
ANR	10173937	PostIncDecOperationExpression	j ++		10173563	1					
ANR	10173938	Identifier	j		10173563	0					
ANR	10173939	IncDec	++		10173563	1					
ANR	10173940	CastExpression	( float ) v		10173563	1					
ANR	10173941	CastTarget	float		10173563	0					
ANR	10173942	Identifier	v		10173563	1					
ANR	10173943	ForStatement	for ( i = nlin ; i < TSIZE ; i ++ )		10173563	26					
ANR	10173944	ForInit	i = nlin ;	546:9:16214:16222	10173563	0	True				
ANR	10173945	AssignmentExpression	i = nlin		10173563	0		=			
ANR	10173946	Identifier	i		10173563	0					
ANR	10173947	Identifier	nlin		10173563	1					
ANR	10173948	Condition	i < TSIZE	546:19:16224:16232	10173563	1	True				
ANR	10173949	RelationalExpression	i < TSIZE		10173563	0		<			
ANR	10173950	Identifier	i		10173563	0					
ANR	10173951	Identifier	TSIZE		10173563	1					
ANR	10173952	PostIncDecOperationExpression	i ++	546:30:16235:16237	10173563	2	True				
ANR	10173953	Identifier	i		10173563	0					
ANR	10173954	IncDec	++		10173563	1					
ANR	10173955	ExpressionStatement	ToLinearF [ j ++ ] = ( float ) ( b * exp ( c * i ) )	547:1:16241:16277	10173563	3	True				
ANR	10173956	AssignmentExpression	ToLinearF [ j ++ ] = ( float ) ( b * exp ( c * i ) )		10173563	0		=			
ANR	10173957	ArrayIndexing	ToLinearF [ j ++ ]		10173563	0					
ANR	10173958	Identifier	ToLinearF		10173563	0					
ANR	10173959	PostIncDecOperationExpression	j ++		10173563	1					
ANR	10173960	Identifier	j		10173563	0					
ANR	10173961	IncDec	++		10173563	1					
ANR	10173962	CastExpression	( float ) ( b * exp ( c * i ) )		10173563	1					
ANR	10173963	CastTarget	float		10173563	0					
ANR	10173964	MultiplicativeExpression	b * exp ( c * i )		10173563	1		*			
ANR	10173965	Identifier	b		10173563	0					
ANR	10173966	CallExpression	exp ( c * i )		10173563	1					
ANR	10173967	Callee	exp		10173563	0					
ANR	10173968	Identifier	exp		10173563	0					
ANR	10173969	ArgumentList	c * i		10173563	1					
ANR	10173970	Argument	c * i		10173563	0					
ANR	10173971	MultiplicativeExpression	c * i		10173563	0		*			
ANR	10173972	Identifier	c		10173563	0					
ANR	10173973	Identifier	i		10173563	1					
ANR	10173974	ExpressionStatement	ToLinearF [ 2048 ] = ToLinearF [ 2047 ]	549:4:16284:16317	10173563	27	True				
ANR	10173975	AssignmentExpression	ToLinearF [ 2048 ] = ToLinearF [ 2047 ]		10173563	0		=			
ANR	10173976	ArrayIndexing	ToLinearF [ 2048 ]		10173563	0					
ANR	10173977	Identifier	ToLinearF		10173563	0					
ANR	10173978	PrimaryExpression	2048		10173563	1					
ANR	10173979	ArrayIndexing	ToLinearF [ 2047 ]		10173563	1					
ANR	10173980	Identifier	ToLinearF		10173563	0					
ANR	10173981	PrimaryExpression	2047		10173563	1					
ANR	10173982	ForStatement	for ( i = 0 ; i < TSIZEP1 ; i ++ )		10173563	28					
ANR	10173983	ForInit	i = 0 ;	551:9:16329:16334	10173563	0	True				
ANR	10173984	AssignmentExpression	i = 0		10173563	0		=			
ANR	10173985	Identifier	i		10173563	0					
ANR	10173986	PrimaryExpression	0		10173563	1					
ANR	10173987	Condition	i < TSIZEP1	551:16:16336:16346	10173563	1	True				
ANR	10173988	RelationalExpression	i < TSIZEP1		10173563	0		<			
ANR	10173989	Identifier	i		10173563	0					
ANR	10173990	Identifier	TSIZEP1		10173563	1					
ANR	10173991	PostIncDecOperationExpression	i ++	551:29:16349:16351	10173563	2	True				
ANR	10173992	Identifier	i		10173563	0					
ANR	10173993	IncDec	++		10173563	1					
ANR	10173994	CompoundStatement		68:35:2276:2276	10173563	3					
ANR	10173995	ExpressionStatement	v = ToLinearF [ i ] * 65535.0 + 0.5	552:1:16358:16388	10173563	0	True				
ANR	10173996	AssignmentExpression	v = ToLinearF [ i ] * 65535.0 + 0.5		10173563	0		=			
ANR	10173997	Identifier	v		10173563	0					
ANR	10173998	AdditiveExpression	ToLinearF [ i ] * 65535.0 + 0.5		10173563	1		+			
ANR	10173999	MultiplicativeExpression	ToLinearF [ i ] * 65535.0		10173563	0		*			
ANR	10174000	ArrayIndexing	ToLinearF [ i ]		10173563	0					
ANR	10174001	Identifier	ToLinearF		10173563	0					
ANR	10174002	Identifier	i		10173563	1					
ANR	10174003	PrimaryExpression	65535.0		10173563	1					
ANR	10174004	PrimaryExpression	0.5		10173563	1					
ANR	10174005	ExpressionStatement	ToLinear16 [ i ] = ( v > 65535.0 ) ? 65535 : ( uint16 ) v	553:1:16391:16440	10173563	1	True				
ANR	10174006	AssignmentExpression	ToLinear16 [ i ] = ( v > 65535.0 ) ? 65535 : ( uint16 ) v		10173563	0		=			
ANR	10174007	ArrayIndexing	ToLinear16 [ i ]		10173563	0					
ANR	10174008	Identifier	ToLinear16		10173563	0					
ANR	10174009	Identifier	i		10173563	1					
ANR	10174010	ConditionalExpression	( v > 65535.0 ) ? 65535 : ( uint16 ) v		10173563	1					
ANR	10174011	Condition	v > 65535.0		10173563	0					
ANR	10174012	RelationalExpression	v > 65535.0		10173563	0		>			
ANR	10174013	Identifier	v		10173563	0					
ANR	10174014	PrimaryExpression	65535.0		10173563	1					
ANR	10174015	PrimaryExpression	65535		10173563	1					
ANR	10174016	CastExpression	( uint16 ) v		10173563	2					
ANR	10174017	CastTarget	uint16		10173563	0					
ANR	10174018	Identifier	v		10173563	1					
ANR	10174019	ExpressionStatement	v = ToLinearF [ i ] * 255.0 + 0.5	554:1:16443:16472	10173563	2	True				
ANR	10174020	AssignmentExpression	v = ToLinearF [ i ] * 255.0 + 0.5		10173563	0		=			
ANR	10174021	Identifier	v		10173563	0					
ANR	10174022	AdditiveExpression	ToLinearF [ i ] * 255.0 + 0.5		10173563	1		+			
ANR	10174023	MultiplicativeExpression	ToLinearF [ i ] * 255.0		10173563	0		*			
ANR	10174024	ArrayIndexing	ToLinearF [ i ]		10173563	0					
ANR	10174025	Identifier	ToLinearF		10173563	0					
ANR	10174026	Identifier	i		10173563	1					
ANR	10174027	PrimaryExpression	255.0		10173563	1					
ANR	10174028	PrimaryExpression	0.5		10173563	1					
ANR	10174029	ExpressionStatement	ToLinear8 [ i ] = ( v > 255.0 ) ? 255 : ( unsigned char ) v	555:1:16475:16527	10173563	3	True				
ANR	10174030	AssignmentExpression	ToLinear8 [ i ] = ( v > 255.0 ) ? 255 : ( unsigned char ) v		10173563	0		=			
ANR	10174031	ArrayIndexing	ToLinear8 [ i ]		10173563	0					
ANR	10174032	Identifier	ToLinear8		10173563	0					
ANR	10174033	Identifier	i		10173563	1					
ANR	10174034	ConditionalExpression	( v > 255.0 ) ? 255 : ( unsigned char ) v		10173563	1					
ANR	10174035	Condition	v > 255.0		10173563	0					
ANR	10174036	RelationalExpression	v > 255.0		10173563	0		>			
ANR	10174037	Identifier	v		10173563	0					
ANR	10174038	PrimaryExpression	255.0		10173563	1					
ANR	10174039	PrimaryExpression	255		10173563	1					
ANR	10174040	CastExpression	( unsigned char ) v		10173563	2					
ANR	10174041	CastTarget	unsigned char		10173563	0					
ANR	10174042	Identifier	v		10173563	1					
ANR	10174043	ExpressionStatement	j = 0	558:4:16540:16545	10173563	29	True				
ANR	10174044	AssignmentExpression	j = 0		10173563	0		=			
ANR	10174045	Identifier	j		10173563	0					
ANR	10174046	PrimaryExpression	0		10173563	1					
ANR	10174047	ForStatement	for ( i = 0 ; i < lt2size ; i ++ )		10173563	30					
ANR	10174048	ForInit	i = 0 ;	559:9:16556:16561	10173563	0	True				
ANR	10174049	AssignmentExpression	i = 0		10173563	0		=			
ANR	10174050	Identifier	i		10173563	0					
ANR	10174051	PrimaryExpression	0		10173563	1					
ANR	10174052	Condition	i < lt2size	559:16:16563:16573	10173563	1	True				
ANR	10174053	RelationalExpression	i < lt2size		10173563	0		<			
ANR	10174054	Identifier	i		10173563	0					
ANR	10174055	Identifier	lt2size		10173563	1					
ANR	10174056	PostIncDecOperationExpression	i ++	559:29:16576:16578	10173563	2	True				
ANR	10174057	Identifier	i		10173563	0					
ANR	10174058	IncDec	++		10173563	1					
ANR	10174059	CompoundStatement		76:35:2503:2503	10173563	3					
ANR	10174060	IfStatement	if ( ( i * linstep ) * ( i * linstep ) > ToLinearF [ j ] * ToLinearF [ j + 1 ] )		10173563	0					
ANR	10174061	Condition	( i * linstep ) * ( i * linstep ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]	560:5:16589:16641	10173563	0	True				
ANR	10174062	RelationalExpression	( i * linstep ) * ( i * linstep ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]		10173563	0		>			
ANR	10174063	MultiplicativeExpression	( i * linstep ) * ( i * linstep )		10173563	0		*			
ANR	10174064	MultiplicativeExpression	i * linstep		10173563	0		*			
ANR	10174065	Identifier	i		10173563	0					
ANR	10174066	Identifier	linstep		10173563	1					
ANR	10174067	MultiplicativeExpression	i * linstep		10173563	1		*			
ANR	10174068	Identifier	i		10173563	0					
ANR	10174069	Identifier	linstep		10173563	1					
ANR	10174070	MultiplicativeExpression	ToLinearF [ j ] * ToLinearF [ j + 1 ]		10173563	1		*			
ANR	10174071	ArrayIndexing	ToLinearF [ j ]		10173563	0					
ANR	10174072	Identifier	ToLinearF		10173563	0					
ANR	10174073	Identifier	j		10173563	1					
ANR	10174074	ArrayIndexing	ToLinearF [ j + 1 ]		10173563	1					
ANR	10174075	Identifier	ToLinearF		10173563	0					
ANR	10174076	AdditiveExpression	j + 1		10173563	1		+			
ANR	10174077	Identifier	j		10173563	0					
ANR	10174078	PrimaryExpression	1		10173563	1					
ANR	10174079	ExpressionStatement	j ++	561:5:16649:16652	10173563	1	True				
ANR	10174080	PostIncDecOperationExpression	j ++		10173563	0					
ANR	10174081	Identifier	j		10173563	0					
ANR	10174082	IncDec	++		10173563	1					
ANR	10174083	ExpressionStatement	FromLT2 [ i ] = ( uint16 ) j	562:1:16655:16677	10173563	1	True				
ANR	10174084	AssignmentExpression	FromLT2 [ i ] = ( uint16 ) j		10173563	0		=			
ANR	10174085	ArrayIndexing	FromLT2 [ i ]		10173563	0					
ANR	10174086	Identifier	FromLT2		10173563	0					
ANR	10174087	Identifier	i		10173563	1					
ANR	10174088	CastExpression	( uint16 ) j		10173563	1					
ANR	10174089	CastTarget	uint16		10173563	0					
ANR	10174090	Identifier	j		10173563	1					
ANR	10174091	ExpressionStatement	j = 0	570:4:16869:16874	10173563	31	True				
ANR	10174092	AssignmentExpression	j = 0		10173563	0		=			
ANR	10174093	Identifier	j		10173563	0					
ANR	10174094	PrimaryExpression	0		10173563	1					
ANR	10174095	ForStatement	for ( i = 0 ; i < 16384 ; i ++ )		10173563	32					
ANR	10174096	ForInit	i = 0 ;	571:9:16885:16890	10173563	0	True				
ANR	10174097	AssignmentExpression	i = 0		10173563	0		=			
ANR	10174098	Identifier	i		10173563	0					
ANR	10174099	PrimaryExpression	0		10173563	1					
ANR	10174100	Condition	i < 16384	571:16:16892:16900	10173563	1	True				
ANR	10174101	RelationalExpression	i < 16384		10173563	0		<			
ANR	10174102	Identifier	i		10173563	0					
ANR	10174103	PrimaryExpression	16384		10173563	1					
ANR	10174104	PostIncDecOperationExpression	i ++	571:27:16903:16905	10173563	2	True				
ANR	10174105	Identifier	i		10173563	0					
ANR	10174106	IncDec	++		10173563	1					
ANR	10174107	CompoundStatement		88:33:2830:2830	10173563	3					
ANR	10174108	WhileStatement	while ( ( i / 16383. ) * ( i / 16383. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ] )		10173563	0					
ANR	10174109	Condition	( i / 16383. ) * ( i / 16383. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]	572:8:16919:16969	10173563	0	True				
ANR	10174110	RelationalExpression	( i / 16383. ) * ( i / 16383. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]		10173563	0		>			
ANR	10174111	MultiplicativeExpression	( i / 16383. ) * ( i / 16383. )		10173563	0		*			
ANR	10174112	MultiplicativeExpression	i / 16383.		10173563	0		/			
ANR	10174113	Identifier	i		10173563	0					
ANR	10174114	PrimaryExpression	16383.		10173563	1					
ANR	10174115	MultiplicativeExpression	i / 16383.		10173563	1		/			
ANR	10174116	Identifier	i		10173563	0					
ANR	10174117	PrimaryExpression	16383.		10173563	1					
ANR	10174118	MultiplicativeExpression	ToLinearF [ j ] * ToLinearF [ j + 1 ]		10173563	1		*			
ANR	10174119	ArrayIndexing	ToLinearF [ j ]		10173563	0					
ANR	10174120	Identifier	ToLinearF		10173563	0					
ANR	10174121	Identifier	j		10173563	1					
ANR	10174122	ArrayIndexing	ToLinearF [ j + 1 ]		10173563	1					
ANR	10174123	Identifier	ToLinearF		10173563	0					
ANR	10174124	AdditiveExpression	j + 1		10173563	1		+			
ANR	10174125	Identifier	j		10173563	0					
ANR	10174126	PrimaryExpression	1		10173563	1					
ANR	10174127	ExpressionStatement	j ++	573:5:16977:16980	10173563	1	True				
ANR	10174128	PostIncDecOperationExpression	j ++		10173563	0					
ANR	10174129	Identifier	j		10173563	0					
ANR	10174130	IncDec	++		10173563	1					
ANR	10174131	ExpressionStatement	From14 [ i ] = ( uint16 ) j	574:1:16983:17004	10173563	1	True				
ANR	10174132	AssignmentExpression	From14 [ i ] = ( uint16 ) j		10173563	0		=			
ANR	10174133	ArrayIndexing	From14 [ i ]		10173563	0					
ANR	10174134	Identifier	From14		10173563	0					
ANR	10174135	Identifier	i		10173563	1					
ANR	10174136	CastExpression	( uint16 ) j		10173563	1					
ANR	10174137	CastTarget	uint16		10173563	0					
ANR	10174138	Identifier	j		10173563	1					
ANR	10174139	ExpressionStatement	j = 0	577:4:17017:17022	10173563	33	True				
ANR	10174140	AssignmentExpression	j = 0		10173563	0		=			
ANR	10174141	Identifier	j		10173563	0					
ANR	10174142	PrimaryExpression	0		10173563	1					
ANR	10174143	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		10173563	34					
ANR	10174144	ForInit	i = 0 ;	578:9:17033:17038	10173563	0	True				
ANR	10174145	AssignmentExpression	i = 0		10173563	0		=			
ANR	10174146	Identifier	i		10173563	0					
ANR	10174147	PrimaryExpression	0		10173563	1					
ANR	10174148	Condition	i < 256	578:16:17040:17046	10173563	1	True				
ANR	10174149	RelationalExpression	i < 256		10173563	0		<			
ANR	10174150	Identifier	i		10173563	0					
ANR	10174151	PrimaryExpression	256		10173563	1					
ANR	10174152	PostIncDecOperationExpression	i ++	578:25:17049:17051	10173563	2	True				
ANR	10174153	Identifier	i		10173563	0					
ANR	10174154	IncDec	++		10173563	1					
ANR	10174155	CompoundStatement		95:31:2976:2976	10173563	3					
ANR	10174156	WhileStatement	while ( ( i / 255. ) * ( i / 255. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ] )		10173563	0					
ANR	10174157	Condition	( i / 255. ) * ( i / 255. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]	579:8:17065:17111	10173563	0	True				
ANR	10174158	RelationalExpression	( i / 255. ) * ( i / 255. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]		10173563	0		>			
ANR	10174159	MultiplicativeExpression	( i / 255. ) * ( i / 255. )		10173563	0		*			
ANR	10174160	MultiplicativeExpression	i / 255.		10173563	0		/			
ANR	10174161	Identifier	i		10173563	0					
ANR	10174162	PrimaryExpression	255.		10173563	1					
ANR	10174163	MultiplicativeExpression	i / 255.		10173563	1		/			
ANR	10174164	Identifier	i		10173563	0					
ANR	10174165	PrimaryExpression	255.		10173563	1					
ANR	10174166	MultiplicativeExpression	ToLinearF [ j ] * ToLinearF [ j + 1 ]		10173563	1		*			
ANR	10174167	ArrayIndexing	ToLinearF [ j ]		10173563	0					
ANR	10174168	Identifier	ToLinearF		10173563	0					
ANR	10174169	Identifier	j		10173563	1					
ANR	10174170	ArrayIndexing	ToLinearF [ j + 1 ]		10173563	1					
ANR	10174171	Identifier	ToLinearF		10173563	0					
ANR	10174172	AdditiveExpression	j + 1		10173563	1		+			
ANR	10174173	Identifier	j		10173563	0					
ANR	10174174	PrimaryExpression	1		10173563	1					
ANR	10174175	ExpressionStatement	j ++	580:5:17119:17122	10173563	1	True				
ANR	10174176	PostIncDecOperationExpression	j ++		10173563	0					
ANR	10174177	Identifier	j		10173563	0					
ANR	10174178	IncDec	++		10173563	1					
ANR	10174179	ExpressionStatement	From8 [ i ] = ( uint16 ) j	581:1:17125:17145	10173563	1	True				
ANR	10174180	AssignmentExpression	From8 [ i ] = ( uint16 ) j		10173563	0		=			
ANR	10174181	ArrayIndexing	From8 [ i ]		10173563	0					
ANR	10174182	Identifier	From8		10173563	0					
ANR	10174183	Identifier	i		10173563	1					
ANR	10174184	CastExpression	( uint16 ) j		10173563	1					
ANR	10174185	CastTarget	uint16		10173563	0					
ANR	10174186	Identifier	j		10173563	1					
ANR	10174187	ExpressionStatement	sp -> Fltsize = ( float ) ( lt2size / 2 )	584:4:17158:17190	10173563	35	True				
ANR	10174188	AssignmentExpression	sp -> Fltsize = ( float ) ( lt2size / 2 )		10173563	0		=			
ANR	10174189	PtrMemberAccess	sp -> Fltsize		10173563	0					
ANR	10174190	Identifier	sp		10173563	0					
ANR	10174191	Identifier	Fltsize		10173563	1					
ANR	10174192	CastExpression	( float ) ( lt2size / 2 )		10173563	1					
ANR	10174193	CastTarget	float		10173563	0					
ANR	10174194	MultiplicativeExpression	lt2size / 2		10173563	1		/			
ANR	10174195	Identifier	lt2size		10173563	0					
ANR	10174196	PrimaryExpression	2		10173563	1					
ANR	10174197	ExpressionStatement	sp -> ToLinearF = ToLinearF	586:4:17197:17222	10173563	36	True				
ANR	10174198	AssignmentExpression	sp -> ToLinearF = ToLinearF		10173563	0		=			
ANR	10174199	PtrMemberAccess	sp -> ToLinearF		10173563	0					
ANR	10174200	Identifier	sp		10173563	0					
ANR	10174201	Identifier	ToLinearF		10173563	1					
ANR	10174202	Identifier	ToLinearF		10173563	1					
ANR	10174203	ExpressionStatement	sp -> ToLinear16 = ToLinear16	587:4:17228:17255	10173563	37	True				
ANR	10174204	AssignmentExpression	sp -> ToLinear16 = ToLinear16		10173563	0		=			
ANR	10174205	PtrMemberAccess	sp -> ToLinear16		10173563	0					
ANR	10174206	Identifier	sp		10173563	0					
ANR	10174207	Identifier	ToLinear16		10173563	1					
ANR	10174208	Identifier	ToLinear16		10173563	1					
ANR	10174209	ExpressionStatement	sp -> ToLinear8 = ToLinear8	588:4:17261:17286	10173563	38	True				
ANR	10174210	AssignmentExpression	sp -> ToLinear8 = ToLinear8		10173563	0		=			
ANR	10174211	PtrMemberAccess	sp -> ToLinear8		10173563	0					
ANR	10174212	Identifier	sp		10173563	0					
ANR	10174213	Identifier	ToLinear8		10173563	1					
ANR	10174214	Identifier	ToLinear8		10173563	1					
ANR	10174215	ExpressionStatement	sp -> FromLT2 = FromLT2	589:4:17292:17313	10173563	39	True				
ANR	10174216	AssignmentExpression	sp -> FromLT2 = FromLT2		10173563	0		=			
ANR	10174217	PtrMemberAccess	sp -> FromLT2		10173563	0					
ANR	10174218	Identifier	sp		10173563	0					
ANR	10174219	Identifier	FromLT2		10173563	1					
ANR	10174220	Identifier	FromLT2		10173563	1					
ANR	10174221	ExpressionStatement	sp -> From14 = From14	590:4:17319:17338	10173563	40	True				
ANR	10174222	AssignmentExpression	sp -> From14 = From14		10173563	0		=			
ANR	10174223	PtrMemberAccess	sp -> From14		10173563	0					
ANR	10174224	Identifier	sp		10173563	0					
ANR	10174225	Identifier	From14		10173563	1					
ANR	10174226	Identifier	From14		10173563	1					
ANR	10174227	ExpressionStatement	sp -> From8 = From8	591:4:17344:17361	10173563	41	True				
ANR	10174228	AssignmentExpression	sp -> From8 = From8		10173563	0		=			
ANR	10174229	PtrMemberAccess	sp -> From8		10173563	0					
ANR	10174230	Identifier	sp		10173563	0					
ANR	10174231	Identifier	From8		10173563	1					
ANR	10174232	Identifier	From8		10173563	1					
ANR	10174233	ReturnStatement	return 1 ;	593:4:17368:17376	10173563	42	True				
ANR	10174234	PrimaryExpression	1		10173563	0					
ANR	10174235	ReturnType	static int		10173563	1					
ANR	10174236	Identifier	PixarLogMakeTables		10173563	2					
ANR	10174237	ParameterList	PixarLogState * sp		10173563	3					
ANR	10174238	Parameter	PixarLogState * sp	483:19:14059:14075	10173563	0	True				
ANR	10174239	ParameterType	PixarLogState *		10173563	0					
ANR	10174240	Identifier	sp		10173563	1					
ANR	10174241	CFGEntryNode	ENTRY		10173563		True				
ANR	10174242	CFGExitNode	EXIT		10173563		True				
ANR	10174243	Symbol	From14		10173563						
ANR	10174244	Symbol	* sp		10173563						
ANR	10174245	Symbol	* ToLinear16		10173563						
ANR	10174246	Symbol	* FromLT2		10173563						
ANR	10174247	Symbol	ToLinear8		10173563						
ANR	10174248	Symbol	sp -> FromLT2		10173563						
ANR	10174249	Symbol	log		10173563						
ANR	10174250	Symbol	* From14		10173563						
ANR	10174251	Symbol	ONE		10173563						
ANR	10174252	Symbol	* From8		10173563						
ANR	10174253	Symbol	RATIO		10173563						
ANR	10174254	Symbol	linstep		10173563						
ANR	10174255	Symbol	sp -> From8		10173563						
ANR	10174256	Symbol	nlin		10173563						
ANR	10174257	Symbol	TSIZE		10173563						
ANR	10174258	Symbol	exp		10173563						
ANR	10174259	Symbol	sp		10173563						
ANR	10174260	Symbol	sp -> LogK1		10173563						
ANR	10174261	Symbol	sp -> LogK2		10173563						
ANR	10174262	Symbol	From8		10173563						
ANR	10174263	Symbol	lt2size		10173563						
ANR	10174264	Symbol	b		10173563						
ANR	10174265	Symbol	c		10173563						
ANR	10174266	Symbol	NULL		10173563						
ANR	10174267	Symbol	sp -> Fltsize		10173563						
ANR	10174268	Symbol	i		10173563						
ANR	10174269	Symbol	j		10173563						
ANR	10174270	Symbol	TSIZEP1		10173563						
ANR	10174271	Symbol	FromLT2		10173563						
ANR	10174272	Symbol	sp -> ToLinear8		10173563						
ANR	10174273	Symbol	* ToLinear8		10173563						
ANR	10174274	Symbol	sp -> ToLinear16		10173563						
ANR	10174275	Symbol	* i		10173563						
ANR	10174276	Symbol	* j		10173563						
ANR	10174277	Symbol	v		10173563						
ANR	10174278	Symbol	sp -> From14		10173563						
ANR	10174279	Symbol	_TIFFmalloc		10173563						
ANR	10174280	Symbol	ToLinear16		10173563						
ANR	10174281	Symbol	sp -> ToLinearF		10173563						
ANR	10174282	Symbol	ToLinearF		10173563						
ANR	10174283	Symbol	* ToLinearF		10173563						
ANR	10174284	DeclStmt									
ANR	10174285	Decl							int	"int ( TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s )"	PixarLogEncode
ANR	10174286	DeclStmt									
ANR	10174287	Decl							int	"int ( TIFF * tif , uint8 * op , tmsize_t occ , uint16 s )"	PixarLogDecode
ANR	10174288	Function	PixarLogGuessDataFmt	604:0:17686:18538							
ANR	10174289	FunctionDef	PixarLogGuessDataFmt (TIFFDirectory * td)		10174288	0					
ANR	10174290	CompoundStatement		606:0:17737:18538	10174288	0					
ANR	10174291	IdentifierDeclStatement	int guess = PIXARLOGDATAFMT_UNKNOWN ;	607:1:17740:17775	10174288	0	True				
ANR	10174292	IdentifierDecl	guess = PIXARLOGDATAFMT_UNKNOWN		10174288	0					
ANR	10174293	IdentifierDeclType	int		10174288	0					
ANR	10174294	Identifier	guess		10174288	1					
ANR	10174295	AssignmentExpression	guess = PIXARLOGDATAFMT_UNKNOWN		10174288	2		=			
ANR	10174296	Identifier	PIXARLOGDATAFMT_UNKNOWN		10174288	0					
ANR	10174297	Identifier	PIXARLOGDATAFMT_UNKNOWN		10174288	1					
ANR	10174298	IdentifierDeclStatement	int format = td -> td_sampleformat ;	608:1:17778:17810	10174288	1	True				
ANR	10174299	IdentifierDecl	format = td -> td_sampleformat		10174288	0					
ANR	10174300	IdentifierDeclType	int		10174288	0					
ANR	10174301	Identifier	format		10174288	1					
ANR	10174302	AssignmentExpression	format = td -> td_sampleformat		10174288	2		=			
ANR	10174303	Identifier	format		10174288	0					
ANR	10174304	PtrMemberAccess	td -> td_sampleformat		10174288	1					
ANR	10174305	Identifier	td		10174288	0					
ANR	10174306	Identifier	td_sampleformat		10174288	1					
ANR	10174307	SwitchStatement	switch ( td -> td_bitspersample )		10174288	2					
ANR	10174308	Condition	td -> td_bitspersample	613:9:17919:17938	10174288	0	True				
ANR	10174309	PtrMemberAccess	td -> td_bitspersample		10174288	0					
ANR	10174310	Identifier	td		10174288	0					
ANR	10174311	Identifier	td_bitspersample		10174288	1					
ANR	10174312	CompoundStatement		8:31:203:203	10174288	1					
ANR	10174313	Label	case 32 :	614:2:17945:17952	10174288	0	True				
ANR	10174314	IfStatement	if ( format == SAMPLEFORMAT_IEEEFP )		10174288	1					
ANR	10174315	Condition	format == SAMPLEFORMAT_IEEEFP	615:6:17960:17988	10174288	0	True				
ANR	10174316	EqualityExpression	format == SAMPLEFORMAT_IEEEFP		10174288	0		==			
ANR	10174317	Identifier	format		10174288	0					
ANR	10174318	Identifier	SAMPLEFORMAT_IEEEFP		10174288	1					
ANR	10174319	ExpressionStatement	guess = PIXARLOGDATAFMT_FLOAT	616:3:17994:18023	10174288	1	True				
ANR	10174320	AssignmentExpression	guess = PIXARLOGDATAFMT_FLOAT		10174288	0		=			
ANR	10174321	Identifier	guess		10174288	0					
ANR	10174322	Identifier	PIXARLOGDATAFMT_FLOAT		10174288	1					
ANR	10174323	BreakStatement	break ;	617:2:18027:18032	10174288	2	True				
ANR	10174324	Label	case 16 :	618:2:18036:18043	10174288	3	True				
ANR	10174325	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT )		10174288	4					
ANR	10174326	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT	619:6:18051:18108	10174288	0	True				
ANR	10174327	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT		10174288	0		||			
ANR	10174328	EqualityExpression	format == SAMPLEFORMAT_VOID		10174288	0		==			
ANR	10174329	Identifier	format		10174288	0					
ANR	10174330	Identifier	SAMPLEFORMAT_VOID		10174288	1					
ANR	10174331	EqualityExpression	format == SAMPLEFORMAT_UINT		10174288	1		==			
ANR	10174332	Identifier	format		10174288	0					
ANR	10174333	Identifier	SAMPLEFORMAT_UINT		10174288	1					
ANR	10174334	ExpressionStatement	guess = PIXARLOGDATAFMT_16BIT	620:3:18114:18143	10174288	1	True				
ANR	10174335	AssignmentExpression	guess = PIXARLOGDATAFMT_16BIT		10174288	0		=			
ANR	10174336	Identifier	guess		10174288	0					
ANR	10174337	Identifier	PIXARLOGDATAFMT_16BIT		10174288	1					
ANR	10174338	BreakStatement	break ;	621:2:18147:18152	10174288	5	True				
ANR	10174339	Label	case 12 :	622:2:18156:18163	10174288	6	True				
ANR	10174340	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_INT )		10174288	7					
ANR	10174341	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_INT	623:6:18171:18227	10174288	0	True				
ANR	10174342	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_INT		10174288	0		||			
ANR	10174343	EqualityExpression	format == SAMPLEFORMAT_VOID		10174288	0		==			
ANR	10174344	Identifier	format		10174288	0					
ANR	10174345	Identifier	SAMPLEFORMAT_VOID		10174288	1					
ANR	10174346	EqualityExpression	format == SAMPLEFORMAT_INT		10174288	1		==			
ANR	10174347	Identifier	format		10174288	0					
ANR	10174348	Identifier	SAMPLEFORMAT_INT		10174288	1					
ANR	10174349	ExpressionStatement	guess = PIXARLOGDATAFMT_12BITPICIO	624:3:18233:18267	10174288	1	True				
ANR	10174350	AssignmentExpression	guess = PIXARLOGDATAFMT_12BITPICIO		10174288	0		=			
ANR	10174351	Identifier	guess		10174288	0					
ANR	10174352	Identifier	PIXARLOGDATAFMT_12BITPICIO		10174288	1					
ANR	10174353	BreakStatement	break ;	625:2:18271:18276	10174288	8	True				
ANR	10174354	Label	case 11 :	626:2:18280:18287	10174288	9	True				
ANR	10174355	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT )		10174288	10					
ANR	10174356	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT	627:6:18295:18352	10174288	0	True				
ANR	10174357	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT		10174288	0		||			
ANR	10174358	EqualityExpression	format == SAMPLEFORMAT_VOID		10174288	0		==			
ANR	10174359	Identifier	format		10174288	0					
ANR	10174360	Identifier	SAMPLEFORMAT_VOID		10174288	1					
ANR	10174361	EqualityExpression	format == SAMPLEFORMAT_UINT		10174288	1		==			
ANR	10174362	Identifier	format		10174288	0					
ANR	10174363	Identifier	SAMPLEFORMAT_UINT		10174288	1					
ANR	10174364	ExpressionStatement	guess = PIXARLOGDATAFMT_11BITLOG	628:3:18358:18390	10174288	1	True				
ANR	10174365	AssignmentExpression	guess = PIXARLOGDATAFMT_11BITLOG		10174288	0		=			
ANR	10174366	Identifier	guess		10174288	0					
ANR	10174367	Identifier	PIXARLOGDATAFMT_11BITLOG		10174288	1					
ANR	10174368	BreakStatement	break ;	629:2:18394:18399	10174288	11	True				
ANR	10174369	Label	case 8 :	630:2:18403:18409	10174288	12	True				
ANR	10174370	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT )		10174288	13					
ANR	10174371	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT	631:6:18417:18474	10174288	0	True				
ANR	10174372	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT		10174288	0		||			
ANR	10174373	EqualityExpression	format == SAMPLEFORMAT_VOID		10174288	0		==			
ANR	10174374	Identifier	format		10174288	0					
ANR	10174375	Identifier	SAMPLEFORMAT_VOID		10174288	1					
ANR	10174376	EqualityExpression	format == SAMPLEFORMAT_UINT		10174288	1		==			
ANR	10174377	Identifier	format		10174288	0					
ANR	10174378	Identifier	SAMPLEFORMAT_UINT		10174288	1					
ANR	10174379	ExpressionStatement	guess = PIXARLOGDATAFMT_8BIT	632:3:18480:18508	10174288	1	True				
ANR	10174380	AssignmentExpression	guess = PIXARLOGDATAFMT_8BIT		10174288	0		=			
ANR	10174381	Identifier	guess		10174288	0					
ANR	10174382	Identifier	PIXARLOGDATAFMT_8BIT		10174288	1					
ANR	10174383	BreakStatement	break ;	633:2:18512:18517	10174288	14	True				
ANR	10174384	ReturnStatement	return guess ;	636:1:18524:18536	10174288	3	True				
ANR	10174385	Identifier	guess		10174288	0					
ANR	10174386	ReturnType	static int		10174288	1					
ANR	10174387	Identifier	PixarLogGuessDataFmt		10174288	2					
ANR	10174388	ParameterList	TIFFDirectory * td		10174288	3					
ANR	10174389	Parameter	TIFFDirectory * td	605:21:17718:17734	10174288	0	True				
ANR	10174390	ParameterType	TIFFDirectory *		10174288	0					
ANR	10174391	Identifier	td		10174288	1					
ANR	10174392	CFGEntryNode	ENTRY		10174288		True				
ANR	10174393	CFGExitNode	EXIT		10174288		True				
ANR	10174394	Symbol	SAMPLEFORMAT_UINT		10174288						
ANR	10174395	Symbol	PIXARLOGDATAFMT_FLOAT		10174288						
ANR	10174396	Symbol	PIXARLOGDATAFMT_16BIT		10174288						
ANR	10174397	Symbol	SAMPLEFORMAT_INT		10174288						
ANR	10174398	Symbol	format		10174288						
ANR	10174399	Symbol	PIXARLOGDATAFMT_8BIT		10174288						
ANR	10174400	Symbol	PIXARLOGDATAFMT_11BITLOG		10174288						
ANR	10174401	Symbol	SAMPLEFORMAT_IEEEFP		10174288						
ANR	10174402	Symbol	SAMPLEFORMAT_VOID		10174288						
ANR	10174403	Symbol	PIXARLOGDATAFMT_UNKNOWN		10174288						
ANR	10174404	Symbol	td		10174288						
ANR	10174405	Symbol	guess		10174288						
ANR	10174406	Symbol	td -> td_sampleformat		10174288						
ANR	10174407	Symbol	* td		10174288						
ANR	10174408	Symbol	PIXARLOGDATAFMT_12BITPICIO		10174288						
ANR	10174409	Symbol	td -> td_bitspersample		10174288						
ANR	10174410	Function	multiply_ms	642:0:18650:18805							
ANR	10174411	FunctionDef	"multiply_ms (tmsize_t m1 , tmsize_t m2)"		10174410	0					
ANR	10174412	CompoundStatement		644:0:18704:18805	10174410	0					
ANR	10174413	IfStatement	if ( m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1 )		10174410	0					
ANR	10174414	Condition	m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1	645:12:18718:18755	10174410	0	True				
ANR	10174415	OrExpression	m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1		10174410	0		||			
ANR	10174416	EqualityExpression	m1 == 0		10174410	0		==			
ANR	10174417	Identifier	m1		10174410	0					
ANR	10174418	PrimaryExpression	0		10174410	1					
ANR	10174419	RelationalExpression	m2 > TIFF_TMSIZE_T_MAX / m1		10174410	1		>			
ANR	10174420	Identifier	m2		10174410	0					
ANR	10174421	MultiplicativeExpression	TIFF_TMSIZE_T_MAX / m1		10174410	1		/			
ANR	10174422	Identifier	TIFF_TMSIZE_T_MAX		10174410	0					
ANR	10174423	Identifier	m1		10174410	1					
ANR	10174424	ReturnStatement	return 0 ;	646:12:18771:18779	10174410	1	True				
ANR	10174425	PrimaryExpression	0		10174410	0					
ANR	10174426	ReturnStatement	return m1 * m2 ;	647:8:18789:18803	10174410	1	True				
ANR	10174427	MultiplicativeExpression	m1 * m2		10174410	0		*			
ANR	10174428	Identifier	m1		10174410	0					
ANR	10174429	Identifier	m2		10174410	1					
ANR	10174430	ReturnType	static tmsize_t		10174410	1					
ANR	10174431	Identifier	multiply_ms		10174410	2					
ANR	10174432	ParameterList	"tmsize_t m1 , tmsize_t m2"		10174410	3					
ANR	10174433	Parameter	tmsize_t m1	643:12:18678:18688	10174410	0	True				
ANR	10174434	ParameterType	tmsize_t		10174410	0					
ANR	10174435	Identifier	m1		10174410	1					
ANR	10174436	Parameter	tmsize_t m2	643:25:18691:18701	10174410	1	True				
ANR	10174437	ParameterType	tmsize_t		10174410	0					
ANR	10174438	Identifier	m2		10174410	1					
ANR	10174439	CFGEntryNode	ENTRY		10174410		True				
ANR	10174440	CFGExitNode	EXIT		10174410		True				
ANR	10174441	Symbol	m1		10174410						
ANR	10174442	Symbol	m2		10174410						
ANR	10174443	Symbol	TIFF_TMSIZE_T_MAX		10174410						
ANR	10174444	Function	add_ms	650:0:18808:19030							
ANR	10174445	FunctionDef	"add_ms (tmsize_t m1 , tmsize_t m2)"		10174444	0					
ANR	10174446	CompoundStatement		652:0:18857:19030	10174444	0					
ANR	10174447	IfStatement	if ( m1 == 0 || m2 == 0 )		10174444	0					
ANR	10174448	Condition	m1 == 0 || m2 == 0	654:5:18929:18946	10174444	0	True				
ANR	10174449	OrExpression	m1 == 0 || m2 == 0		10174444	0		||			
ANR	10174450	EqualityExpression	m1 == 0		10174444	0		==			
ANR	10174451	Identifier	m1		10174444	0					
ANR	10174452	PrimaryExpression	0		10174444	1					
ANR	10174453	EqualityExpression	m2 == 0		10174444	1		==			
ANR	10174454	Identifier	m2		10174444	0					
ANR	10174455	PrimaryExpression	0		10174444	1					
ANR	10174456	ReturnStatement	return 0 ;	655:2:18951:18959	10174444	1	True				
ANR	10174457	PrimaryExpression	0		10174444	0					
ANR	10174458	ElseStatement	else		10174444	0					
ANR	10174459	IfStatement	if ( m1 > TIFF_TMSIZE_T_MAX - m2 )		10174444	0					
ANR	10174460	Condition	m1 > TIFF_TMSIZE_T_MAX - m2	656:10:18971:18997	10174444	0	True				
ANR	10174461	RelationalExpression	m1 > TIFF_TMSIZE_T_MAX - m2		10174444	0		>			
ANR	10174462	Identifier	m1		10174444	0					
ANR	10174463	AdditiveExpression	TIFF_TMSIZE_T_MAX - m2		10174444	1		-			
ANR	10174464	Identifier	TIFF_TMSIZE_T_MAX		10174444	0					
ANR	10174465	Identifier	m2		10174444	1					
ANR	10174466	ReturnStatement	return 0 ;	657:2:19002:19010	10174444	1	True				
ANR	10174467	PrimaryExpression	0		10174444	0					
ANR	10174468	ReturnStatement	return m1 + m2 ;	659:1:19014:19028	10174444	1	True				
ANR	10174469	AdditiveExpression	m1 + m2		10174444	0		+			
ANR	10174470	Identifier	m1		10174444	0					
ANR	10174471	Identifier	m2		10174444	1					
ANR	10174472	ReturnType	static tmsize_t		10174444	1					
ANR	10174473	Identifier	add_ms		10174444	2					
ANR	10174474	ParameterList	"tmsize_t m1 , tmsize_t m2"		10174444	3					
ANR	10174475	Parameter	tmsize_t m1	651:7:18831:18841	10174444	0	True				
ANR	10174476	ParameterType	tmsize_t		10174444	0					
ANR	10174477	Identifier	m1		10174444	1					
ANR	10174478	Parameter	tmsize_t m2	651:20:18844:18854	10174444	1	True				
ANR	10174479	ParameterType	tmsize_t		10174444	0					
ANR	10174480	Identifier	m2		10174444	1					
ANR	10174481	CFGEntryNode	ENTRY		10174444		True				
ANR	10174482	CFGExitNode	EXIT		10174444		True				
ANR	10174483	Symbol	m1		10174444						
ANR	10174484	Symbol	m2		10174444						
ANR	10174485	Symbol	TIFF_TMSIZE_T_MAX		10174444						
ANR	10174486	Function	PixarLogFixupTags	662:0:19033:19101							
ANR	10174487	FunctionDef	PixarLogFixupTags (TIFF * tif)		10174486	0					
ANR	10174488	CompoundStatement		664:0:19073:19101	10174486	0					
ANR	10174489	ExpressionStatement	( void ) tif	665:1:19076:19086	10174486	0	True				
ANR	10174490	CastExpression	( void ) tif		10174486	0					
ANR	10174491	CastTarget	void		10174486	0					
ANR	10174492	Identifier	tif		10174486	1					
ANR	10174493	ReturnStatement	return ( 1 ) ;	666:1:19089:19099	10174486	1	True				
ANR	10174494	PrimaryExpression	1		10174486	0					
ANR	10174495	ReturnType	static int		10174486	1					
ANR	10174496	Identifier	PixarLogFixupTags		10174486	2					
ANR	10174497	ParameterList	TIFF * tif		10174486	3					
ANR	10174498	Parameter	TIFF * tif	663:18:19062:19070	10174486	0	True				
ANR	10174499	ParameterType	TIFF *		10174486	0					
ANR	10174500	Identifier	tif		10174486	1					
ANR	10174501	CFGEntryNode	ENTRY		10174486		True				
ANR	10174502	CFGExitNode	EXIT		10174486		True				
ANR	10174503	Symbol	tif		10174486						
ANR	10174504	Function	PixarLogSetupDecode	669:0:19104:21182							
ANR	10174505	FunctionDef	PixarLogSetupDecode (TIFF * tif)		10174504	0					
ANR	10174506	CompoundStatement		671:0:19146:21182	10174504	0					
ANR	10174507	Statement	static	672:1:19149:19154	10174504	0	True				
ANR	10174508	IdentifierDeclStatement	"const char module [ ] = ""PixarLogSetupDecode"" ;"	672:8:19156:19199	10174504	1	True				
ANR	10174509	IdentifierDecl	"module [ ] = ""PixarLogSetupDecode"""		10174504	0					
ANR	10174510	IdentifierDeclType	const char [ ]		10174504	0					
ANR	10174511	Identifier	module		10174504	1					
ANR	10174512	AssignmentExpression	"module [ ] = ""PixarLogSetupDecode"""		10174504	2		=			
ANR	10174513	Identifier	module		10174504	0					
ANR	10174514	PrimaryExpression	"""PixarLogSetupDecode"""		10174504	1					
ANR	10174515	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	673:1:19202:19235	10174504	2	True				
ANR	10174516	IdentifierDecl	* td = & tif -> tif_dir		10174504	0					
ANR	10174517	IdentifierDeclType	TIFFDirectory *		10174504	0					
ANR	10174518	Identifier	td		10174504	1					
ANR	10174519	AssignmentExpression	* td = & tif -> tif_dir		10174504	2		=			
ANR	10174520	Identifier	td		10174504	0					
ANR	10174521	UnaryOperationExpression	& tif -> tif_dir		10174504	1					
ANR	10174522	UnaryOperator	&		10174504	0					
ANR	10174523	PtrMemberAccess	tif -> tif_dir		10174504	1					
ANR	10174524	Identifier	tif		10174504	0					
ANR	10174525	Identifier	tif_dir		10174504	1					
ANR	10174526	IdentifierDeclStatement	PixarLogState * sp = DecoderState ( tif ) ;	674:1:19238:19275	10174504	3	True				
ANR	10174527	IdentifierDecl	* sp = DecoderState ( tif )		10174504	0					
ANR	10174528	IdentifierDeclType	PixarLogState *		10174504	0					
ANR	10174529	Identifier	sp		10174504	1					
ANR	10174530	AssignmentExpression	* sp = DecoderState ( tif )		10174504	2		=			
ANR	10174531	Identifier	sp		10174504	0					
ANR	10174532	CallExpression	DecoderState ( tif )		10174504	1					
ANR	10174533	Callee	DecoderState		10174504	0					
ANR	10174534	Identifier	DecoderState		10174504	0					
ANR	10174535	ArgumentList	tif		10174504	1					
ANR	10174536	Argument	tif		10174504	0					
ANR	10174537	Identifier	tif		10174504	0					
ANR	10174538	IdentifierDeclStatement	tmsize_t tbuf_size ;	675:1:19278:19296	10174504	4	True				
ANR	10174539	IdentifierDecl	tbuf_size		10174504	0					
ANR	10174540	IdentifierDeclType	tmsize_t		10174504	0					
ANR	10174541	Identifier	tbuf_size		10174504	1					
ANR	10174542	IdentifierDeclStatement	uint32 strip_height ;	676:8:19306:19325	10174504	5	True				
ANR	10174543	IdentifierDecl	strip_height		10174504	0					
ANR	10174544	IdentifierDeclType	uint32		10174504	0					
ANR	10174545	Identifier	strip_height		10174504	1					
ANR	10174546	ExpressionStatement	assert ( sp != NULL )	678:1:19329:19347	10174504	6	True				
ANR	10174547	CallExpression	assert ( sp != NULL )		10174504	0					
ANR	10174548	Callee	assert		10174504	0					
ANR	10174549	Identifier	assert		10174504	0					
ANR	10174550	ArgumentList	sp != NULL		10174504	1					
ANR	10174551	Argument	sp != NULL		10174504	0					
ANR	10174552	EqualityExpression	sp != NULL		10174504	0		!=			
ANR	10174553	Identifier	sp		10174504	0					
ANR	10174554	Identifier	NULL		10174504	1					
ANR	10174555	IfStatement	if ( ( sp -> state & PLSTATE_INIT ) != 0 )		10174504	7					
ANR	10174556	Condition	( sp -> state & PLSTATE_INIT ) != 0	683:5:19506:19536	10174504	0	True				
ANR	10174557	EqualityExpression	( sp -> state & PLSTATE_INIT ) != 0		10174504	0		!=			
ANR	10174558	BitAndExpression	sp -> state & PLSTATE_INIT		10174504	0		&			
ANR	10174559	PtrMemberAccess	sp -> state		10174504	0					
ANR	10174560	Identifier	sp		10174504	0					
ANR	10174561	Identifier	state		10174504	1					
ANR	10174562	Identifier	PLSTATE_INIT		10174504	1					
ANR	10174563	PrimaryExpression	0		10174504	1					
ANR	10174564	ReturnStatement	return 1 ;	684:2:19542:19550	10174504	1	True				
ANR	10174565	PrimaryExpression	1		10174504	0					
ANR	10174566	ExpressionStatement	strip_height = td -> td_rowsperstrip	686:8:19561:19595	10174504	8	True				
ANR	10174567	AssignmentExpression	strip_height = td -> td_rowsperstrip		10174504	0		=			
ANR	10174568	Identifier	strip_height		10174504	0					
ANR	10174569	PtrMemberAccess	td -> td_rowsperstrip		10174504	1					
ANR	10174570	Identifier	td		10174504	0					
ANR	10174571	Identifier	td_rowsperstrip		10174504	1					
ANR	10174572	IfStatement	if ( strip_height > td -> td_imagelength )		10174504	9					
ANR	10174573	Condition	strip_height > td -> td_imagelength	687:12:19609:19641	10174504	0	True				
ANR	10174574	RelationalExpression	strip_height > td -> td_imagelength		10174504	0		>			
ANR	10174575	Identifier	strip_height		10174504	0					
ANR	10174576	PtrMemberAccess	td -> td_imagelength		10174504	1					
ANR	10174577	Identifier	td		10174504	0					
ANR	10174578	Identifier	td_imagelength		10174504	1					
ANR	10174579	ExpressionStatement	strip_height = td -> td_imagelength	688:12:19657:19690	10174504	1	True				
ANR	10174580	AssignmentExpression	strip_height = td -> td_imagelength		10174504	0		=			
ANR	10174581	Identifier	strip_height		10174504	0					
ANR	10174582	PtrMemberAccess	td -> td_imagelength		10174504	1					
ANR	10174583	Identifier	td		10174504	0					
ANR	10174584	Identifier	td_imagelength		10174504	1					
ANR	10174585	ExpressionStatement	tif -> tif_postdecode = _TIFFNoPostDecode	692:1:19773:19812	10174504	10	True				
ANR	10174586	AssignmentExpression	tif -> tif_postdecode = _TIFFNoPostDecode		10174504	0		=			
ANR	10174587	PtrMemberAccess	tif -> tif_postdecode		10174504	0					
ANR	10174588	Identifier	tif		10174504	0					
ANR	10174589	Identifier	tif_postdecode		10174504	1					
ANR	10174590	Identifier	_TIFFNoPostDecode		10174504	1					
ANR	10174591	ExpressionStatement	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )	696:1:19880:19971	10174504	11	True				
ANR	10174592	AssignmentExpression	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )		10174504	0		=			
ANR	10174593	PtrMemberAccess	sp -> stride		10174504	0					
ANR	10174594	Identifier	sp		10174504	0					
ANR	10174595	Identifier	stride		10174504	1					
ANR	10174596	ConditionalExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1		10174504	1					
ANR	10174597	Condition	td -> td_planarconfig == PLANARCONFIG_CONTIG		10174504	0					
ANR	10174598	EqualityExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG		10174504	0		==			
ANR	10174599	PtrMemberAccess	td -> td_planarconfig		10174504	0					
ANR	10174600	Identifier	td		10174504	0					
ANR	10174601	Identifier	td_planarconfig		10174504	1					
ANR	10174602	Identifier	PLANARCONFIG_CONTIG		10174504	1					
ANR	10174603	PtrMemberAccess	td -> td_samplesperpixel		10174504	1					
ANR	10174604	Identifier	td		10174504	0					
ANR	10174605	Identifier	td_samplesperpixel		10174504	1					
ANR	10174606	PrimaryExpression	1		10174504	2					
ANR	10174607	ExpressionStatement	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , strip_height ) , sizeof ( uint16 ) )"	698:1:19974:20094	10174504	12	True				
ANR	10174608	AssignmentExpression	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , strip_height ) , sizeof ( uint16 ) )"		10174504	0		=			
ANR	10174609	Identifier	tbuf_size		10174504	0					
ANR	10174610	CallExpression	"multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , strip_height ) , sizeof ( uint16 ) )"		10174504	1					
ANR	10174611	Callee	multiply_ms		10174504	0					
ANR	10174612	Identifier	multiply_ms		10174504	0					
ANR	10174613	ArgumentList	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , strip_height )"		10174504	1					
ANR	10174614	Argument	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , strip_height )"		10174504	0					
ANR	10174615	CallExpression	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , strip_height )"		10174504	0					
ANR	10174616	Callee	multiply_ms		10174504	0					
ANR	10174617	Identifier	multiply_ms		10174504	0					
ANR	10174618	ArgumentList	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		10174504	1					
ANR	10174619	Argument	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		10174504	0					
ANR	10174620	CallExpression	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		10174504	0					
ANR	10174621	Callee	multiply_ms		10174504	0					
ANR	10174622	Identifier	multiply_ms		10174504	0					
ANR	10174623	ArgumentList	sp -> stride		10174504	1					
ANR	10174624	Argument	sp -> stride		10174504	0					
ANR	10174625	PtrMemberAccess	sp -> stride		10174504	0					
ANR	10174626	Identifier	sp		10174504	0					
ANR	10174627	Identifier	stride		10174504	1					
ANR	10174628	Argument	td -> td_imagewidth		10174504	1					
ANR	10174629	PtrMemberAccess	td -> td_imagewidth		10174504	0					
ANR	10174630	Identifier	td		10174504	0					
ANR	10174631	Identifier	td_imagewidth		10174504	1					
ANR	10174632	Argument	strip_height		10174504	1					
ANR	10174633	Identifier	strip_height		10174504	0					
ANR	10174634	Argument	sizeof ( uint16 )		10174504	1					
ANR	10174635	SizeofExpression	sizeof ( uint16 )		10174504	0					
ANR	10174636	Sizeof	sizeof		10174504	0					
ANR	10174637	SizeofOperand	uint16		10174504	1					
ANR	10174638	ExpressionStatement	"tbuf_size = add_ms ( tbuf_size , sizeof ( uint16 ) * sp -> stride )"	701:1:20154:20212	10174504	13	True				
ANR	10174639	AssignmentExpression	"tbuf_size = add_ms ( tbuf_size , sizeof ( uint16 ) * sp -> stride )"		10174504	0		=			
ANR	10174640	Identifier	tbuf_size		10174504	0					
ANR	10174641	CallExpression	"add_ms ( tbuf_size , sizeof ( uint16 ) * sp -> stride )"		10174504	1					
ANR	10174642	Callee	add_ms		10174504	0					
ANR	10174643	Identifier	add_ms		10174504	0					
ANR	10174644	ArgumentList	tbuf_size		10174504	1					
ANR	10174645	Argument	tbuf_size		10174504	0					
ANR	10174646	Identifier	tbuf_size		10174504	0					
ANR	10174647	Argument	sizeof ( uint16 ) * sp -> stride		10174504	1					
ANR	10174648	MultiplicativeExpression	sizeof ( uint16 ) * sp -> stride		10174504	0		*			
ANR	10174649	SizeofExpression	sizeof ( uint16 )		10174504	0					
ANR	10174650	Sizeof	sizeof		10174504	0					
ANR	10174651	SizeofOperand	uint16		10174504	1					
ANR	10174652	PtrMemberAccess	sp -> stride		10174504	1					
ANR	10174653	Identifier	sp		10174504	0					
ANR	10174654	Identifier	stride		10174504	1					
ANR	10174655	IfStatement	if ( tbuf_size == 0 )		10174504	14					
ANR	10174656	Condition	tbuf_size == 0	702:5:20219:20232	10174504	0	True				
ANR	10174657	EqualityExpression	tbuf_size == 0		10174504	0		==			
ANR	10174658	Identifier	tbuf_size		10174504	0					
ANR	10174659	PrimaryExpression	0		10174504	1					
ANR	10174660	ReturnStatement	return ( 0 ) ;	703:2:20237:20247	10174504	1	True				
ANR	10174661	PrimaryExpression	0		10174504	0					
ANR	10174662	ExpressionStatement	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )	704:1:20330:20374	10174504	15	True				
ANR	10174663	AssignmentExpression	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )		10174504	0		=			
ANR	10174664	PtrMemberAccess	sp -> tbuf		10174504	0					
ANR	10174665	Identifier	sp		10174504	0					
ANR	10174666	Identifier	tbuf		10174504	1					
ANR	10174667	CastExpression	( uint16 * ) _TIFFmalloc ( tbuf_size )		10174504	1					
ANR	10174668	CastTarget	uint16 *		10174504	0					
ANR	10174669	CallExpression	_TIFFmalloc ( tbuf_size )		10174504	1					
ANR	10174670	Callee	_TIFFmalloc		10174504	0					
ANR	10174671	Identifier	_TIFFmalloc		10174504	0					
ANR	10174672	ArgumentList	tbuf_size		10174504	1					
ANR	10174673	Argument	tbuf_size		10174504	0					
ANR	10174674	Identifier	tbuf_size		10174504	0					
ANR	10174675	IfStatement	if ( sp -> tbuf == NULL )		10174504	16					
ANR	10174676	Condition	sp -> tbuf == NULL	705:5:20381:20396	10174504	0	True				
ANR	10174677	EqualityExpression	sp -> tbuf == NULL		10174504	0		==			
ANR	10174678	PtrMemberAccess	sp -> tbuf		10174504	0					
ANR	10174679	Identifier	sp		10174504	0					
ANR	10174680	Identifier	tbuf		10174504	1					
ANR	10174681	Identifier	NULL		10174504	1					
ANR	10174682	ReturnStatement	return ( 0 ) ;	706:2:20401:20411	10174504	1	True				
ANR	10174683	PrimaryExpression	0		10174504	0					
ANR	10174684	ExpressionStatement	sp -> tbuf_size = tbuf_size	707:1:20414:20439	10174504	17	True				
ANR	10174685	AssignmentExpression	sp -> tbuf_size = tbuf_size		10174504	0		=			
ANR	10174686	PtrMemberAccess	sp -> tbuf_size		10174504	0					
ANR	10174687	Identifier	sp		10174504	0					
ANR	10174688	Identifier	tbuf_size		10174504	1					
ANR	10174689	Identifier	tbuf_size		10174504	1					
ANR	10174690	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		10174504	18					
ANR	10174691	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	708:5:20446:20488	10174504	0	True				
ANR	10174692	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		10174504	0		==			
ANR	10174693	PtrMemberAccess	sp -> user_datafmt		10174504	0					
ANR	10174694	Identifier	sp		10174504	0					
ANR	10174695	Identifier	user_datafmt		10174504	1					
ANR	10174696	Identifier	PIXARLOGDATAFMT_UNKNOWN		10174504	1					
ANR	10174697	ExpressionStatement	sp -> user_datafmt = PixarLogGuessDataFmt ( td )	709:2:20493:20536	10174504	1	True				
ANR	10174698	AssignmentExpression	sp -> user_datafmt = PixarLogGuessDataFmt ( td )		10174504	0		=			
ANR	10174699	PtrMemberAccess	sp -> user_datafmt		10174504	0					
ANR	10174700	Identifier	sp		10174504	0					
ANR	10174701	Identifier	user_datafmt		10174504	1					
ANR	10174702	CallExpression	PixarLogGuessDataFmt ( td )		10174504	1					
ANR	10174703	Callee	PixarLogGuessDataFmt		10174504	0					
ANR	10174704	Identifier	PixarLogGuessDataFmt		10174504	0					
ANR	10174705	ArgumentList	td		10174504	1					
ANR	10174706	Argument	td		10174504	0					
ANR	10174707	Identifier	td		10174504	0					
ANR	10174708	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		10174504	19					
ANR	10174709	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	710:5:20543:20585	10174504	0	True				
ANR	10174710	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		10174504	0		==			
ANR	10174711	PtrMemberAccess	sp -> user_datafmt		10174504	0					
ANR	10174712	Identifier	sp		10174504	0					
ANR	10174713	Identifier	user_datafmt		10174504	1					
ANR	10174714	Identifier	PIXARLOGDATAFMT_UNKNOWN		10174504	1					
ANR	10174715	CompoundStatement		40:50:1441:1441	10174504	1					
ANR	10174716	ExpressionStatement	_TIFFfree ( sp -> tbuf )	711:16:20606:20625	10174504	0	True				
ANR	10174717	CallExpression	_TIFFfree ( sp -> tbuf )		10174504	0					
ANR	10174718	Callee	_TIFFfree		10174504	0					
ANR	10174719	Identifier	_TIFFfree		10174504	0					
ANR	10174720	ArgumentList	sp -> tbuf		10174504	1					
ANR	10174721	Argument	sp -> tbuf		10174504	0					
ANR	10174722	PtrMemberAccess	sp -> tbuf		10174504	0					
ANR	10174723	Identifier	sp		10174504	0					
ANR	10174724	Identifier	tbuf		10174504	1					
ANR	10174725	ExpressionStatement	sp -> tbuf = NULL	712:16:20643:20658	10174504	1	True				
ANR	10174726	AssignmentExpression	sp -> tbuf = NULL		10174504	0		=			
ANR	10174727	PtrMemberAccess	sp -> tbuf		10174504	0					
ANR	10174728	Identifier	sp		10174504	0					
ANR	10174729	Identifier	tbuf		10174504	1					
ANR	10174730	Identifier	NULL		10174504	1					
ANR	10174731	ExpressionStatement	sp -> tbuf_size = 0	713:16:20676:20693	10174504	2	True				
ANR	10174732	AssignmentExpression	sp -> tbuf_size = 0		10174504	0		=			
ANR	10174733	PtrMemberAccess	sp -> tbuf_size		10174504	0					
ANR	10174734	Identifier	sp		10174504	0					
ANR	10174735	Identifier	tbuf_size		10174504	1					
ANR	10174736	PrimaryExpression	0		10174504	1					
ANR	10174737	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle bits depth/data format combination (depth: %d)"" , td -> td_bitspersample )"	714:2:20697:20851	10174504	3	True				
ANR	10174738	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle bits depth/data format combination (depth: %d)"" , td -> td_bitspersample )"		10174504	0					
ANR	10174739	Callee	TIFFErrorExt		10174504	0					
ANR	10174740	Identifier	TIFFErrorExt		10174504	0					
ANR	10174741	ArgumentList	tif -> tif_clientdata		10174504	1					
ANR	10174742	Argument	tif -> tif_clientdata		10174504	0					
ANR	10174743	PtrMemberAccess	tif -> tif_clientdata		10174504	0					
ANR	10174744	Identifier	tif		10174504	0					
ANR	10174745	Identifier	tif_clientdata		10174504	1					
ANR	10174746	Argument	module		10174504	1					
ANR	10174747	Identifier	module		10174504	0					
ANR	10174748	Argument	"""PixarLog compression can't handle bits depth/data format combination (depth: %d)"""		10174504	2					
ANR	10174749	PrimaryExpression	"""PixarLog compression can't handle bits depth/data format combination (depth: %d)"""		10174504	0					
ANR	10174750	Argument	td -> td_bitspersample		10174504	3					
ANR	10174751	PtrMemberAccess	td -> td_bitspersample		10174504	0					
ANR	10174752	Identifier	td		10174504	0					
ANR	10174753	Identifier	td_bitspersample		10174504	1					
ANR	10174754	ReturnStatement	return ( 0 ) ;	717:2:20855:20865	10174504	4	True				
ANR	10174755	PrimaryExpression	0		10174504	0					
ANR	10174756	IfStatement	if ( inflateInit ( & sp -> stream ) != Z_OK )		10174504	20					
ANR	10174757	Condition	inflateInit ( & sp -> stream ) != Z_OK	720:5:20876:20907	10174504	0	True				
ANR	10174758	EqualityExpression	inflateInit ( & sp -> stream ) != Z_OK		10174504	0		!=			
ANR	10174759	CallExpression	inflateInit ( & sp -> stream )		10174504	0					
ANR	10174760	Callee	inflateInit		10174504	0					
ANR	10174761	Identifier	inflateInit		10174504	0					
ANR	10174762	ArgumentList	& sp -> stream		10174504	1					
ANR	10174763	Argument	& sp -> stream		10174504	0					
ANR	10174764	UnaryOperationExpression	& sp -> stream		10174504	0					
ANR	10174765	UnaryOperator	&		10174504	0					
ANR	10174766	PtrMemberAccess	sp -> stream		10174504	1					
ANR	10174767	Identifier	sp		10174504	0					
ANR	10174768	Identifier	stream		10174504	1					
ANR	10174769	Identifier	Z_OK		10174504	1					
ANR	10174770	CompoundStatement		50:39:1763:1763	10174504	1					
ANR	10174771	ExpressionStatement	_TIFFfree ( sp -> tbuf )	721:16:20928:20947	10174504	0	True				
ANR	10174772	CallExpression	_TIFFfree ( sp -> tbuf )		10174504	0					
ANR	10174773	Callee	_TIFFfree		10174504	0					
ANR	10174774	Identifier	_TIFFfree		10174504	0					
ANR	10174775	ArgumentList	sp -> tbuf		10174504	1					
ANR	10174776	Argument	sp -> tbuf		10174504	0					
ANR	10174777	PtrMemberAccess	sp -> tbuf		10174504	0					
ANR	10174778	Identifier	sp		10174504	0					
ANR	10174779	Identifier	tbuf		10174504	1					
ANR	10174780	ExpressionStatement	sp -> tbuf = NULL	722:16:20965:20980	10174504	1	True				
ANR	10174781	AssignmentExpression	sp -> tbuf = NULL		10174504	0		=			
ANR	10174782	PtrMemberAccess	sp -> tbuf		10174504	0					
ANR	10174783	Identifier	sp		10174504	0					
ANR	10174784	Identifier	tbuf		10174504	1					
ANR	10174785	Identifier	NULL		10174504	1					
ANR	10174786	ExpressionStatement	sp -> tbuf_size = 0	723:16:20998:21015	10174504	2	True				
ANR	10174787	AssignmentExpression	sp -> tbuf_size = 0		10174504	0		=			
ANR	10174788	PtrMemberAccess	sp -> tbuf_size		10174504	0					
ANR	10174789	Identifier	sp		10174504	0					
ANR	10174790	Identifier	tbuf_size		10174504	1					
ANR	10174791	PrimaryExpression	0		10174504	1					
ANR	10174792	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"	724:2:21019:21110	10174504	3	True				
ANR	10174793	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"		10174504	0					
ANR	10174794	Callee	TIFFErrorExt		10174504	0					
ANR	10174795	Identifier	TIFFErrorExt		10174504	0					
ANR	10174796	ArgumentList	tif -> tif_clientdata		10174504	1					
ANR	10174797	Argument	tif -> tif_clientdata		10174504	0					
ANR	10174798	PtrMemberAccess	tif -> tif_clientdata		10174504	0					
ANR	10174799	Identifier	tif		10174504	0					
ANR	10174800	Identifier	tif_clientdata		10174504	1					
ANR	10174801	Argument	module		10174504	1					
ANR	10174802	Identifier	module		10174504	0					
ANR	10174803	Argument	"""%s"""		10174504	2					
ANR	10174804	PrimaryExpression	"""%s"""		10174504	0					
ANR	10174805	Argument	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10174504	3					
ANR	10174806	ConditionalExpression	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10174504	0					
ANR	10174807	Condition	sp -> stream . msg		10174504	0					
ANR	10174808	MemberAccess	sp -> stream . msg		10174504	0					
ANR	10174809	PtrMemberAccess	sp -> stream		10174504	0					
ANR	10174810	Identifier	sp		10174504	0					
ANR	10174811	Identifier	stream		10174504	1					
ANR	10174812	Identifier	msg		10174504	1					
ANR	10174813	MemberAccess	sp -> stream . msg		10174504	1					
ANR	10174814	PtrMemberAccess	sp -> stream		10174504	0					
ANR	10174815	Identifier	sp		10174504	0					
ANR	10174816	Identifier	stream		10174504	1					
ANR	10174817	Identifier	msg		10174504	1					
ANR	10174818	PrimaryExpression	"""(null)"""		10174504	2					
ANR	10174819	ReturnStatement	return ( 0 ) ;	725:2:21114:21124	10174504	4	True				
ANR	10174820	PrimaryExpression	0		10174504	0					
ANR	10174821	ElseStatement	else		10174504	0					
ANR	10174822	CompoundStatement		56:8:1987:1987	10174504	0					
ANR	10174823	ExpressionStatement	sp -> state |= PLSTATE_INIT	727:2:21138:21163	10174504	0	True				
ANR	10174824	AssignmentExpression	sp -> state |= PLSTATE_INIT		10174504	0		|=			
ANR	10174825	PtrMemberAccess	sp -> state		10174504	0					
ANR	10174826	Identifier	sp		10174504	0					
ANR	10174827	Identifier	state		10174504	1					
ANR	10174828	Identifier	PLSTATE_INIT		10174504	1					
ANR	10174829	ReturnStatement	return ( 1 ) ;	728:2:21167:21177	10174504	1	True				
ANR	10174830	PrimaryExpression	1		10174504	0					
ANR	10174831	ReturnType	static int		10174504	1					
ANR	10174832	Identifier	PixarLogSetupDecode		10174504	2					
ANR	10174833	ParameterList	TIFF * tif		10174504	3					
ANR	10174834	Parameter	TIFF * tif	670:20:19135:19143	10174504	0	True				
ANR	10174835	ParameterType	TIFF *		10174504	0					
ANR	10174836	Identifier	tif		10174504	1					
ANR	10174837	CFGEntryNode	ENTRY		10174504		True				
ANR	10174838	CFGExitNode	EXIT		10174504		True				
ANR	10174839	Symbol	* sp		10174504						
ANR	10174840	Symbol	td -> td_planarconfig		10174504						
ANR	10174841	Symbol	& tif -> tif_dir		10174504						
ANR	10174842	Symbol	td -> td_imagelength		10174504						
ANR	10174843	Symbol	tif -> tif_postdecode		10174504						
ANR	10174844	Symbol	& sp -> stream		10174504						
ANR	10174845	Symbol	sp -> tbuf_size		10174504						
ANR	10174846	Symbol	sp -> user_datafmt		10174504						
ANR	10174847	Symbol	inflateInit		10174504						
ANR	10174848	Symbol	Z_OK		10174504						
ANR	10174849	Symbol	PIXARLOGDATAFMT_UNKNOWN		10174504						
ANR	10174850	Symbol	strip_height		10174504						
ANR	10174851	Symbol	tif		10174504						
ANR	10174852	Symbol	sp -> stride		10174504						
ANR	10174853	Symbol	DecoderState		10174504						
ANR	10174854	Symbol	PixarLogGuessDataFmt		10174504						
ANR	10174855	Symbol	sp -> stream . msg		10174504						
ANR	10174856	Symbol	_TIFFNoPostDecode		10174504						
ANR	10174857	Symbol	sp -> tbuf		10174504						
ANR	10174858	Symbol	PLSTATE_INIT		10174504						
ANR	10174859	Symbol	sp		10174504						
ANR	10174860	Symbol	NULL		10174504						
ANR	10174861	Symbol	td -> td_imagewidth		10174504						
ANR	10174862	Symbol	module		10174504						
ANR	10174863	Symbol	PLANARCONFIG_CONTIG		10174504						
ANR	10174864	Symbol	tbuf_size		10174504						
ANR	10174865	Symbol	sp -> state		10174504						
ANR	10174866	Symbol	multiply_ms		10174504						
ANR	10174867	Symbol	tif -> tif_clientdata		10174504						
ANR	10174868	Symbol	td		10174504						
ANR	10174869	Symbol	td -> td_samplesperpixel		10174504						
ANR	10174870	Symbol	add_ms		10174504						
ANR	10174871	Symbol	* td		10174504						
ANR	10174872	Symbol	_TIFFmalloc		10174504						
ANR	10174873	Symbol	sp -> stream		10174504						
ANR	10174874	Symbol	* tif		10174504						
ANR	10174875	Symbol	td -> td_rowsperstrip		10174504						
ANR	10174876	Symbol	td -> td_bitspersample		10174504						
ANR	10174877	Function	PixarLogPreDecode	735:0:21229:21964							
ANR	10174878	FunctionDef	"PixarLogPreDecode (TIFF * tif , uint16 s)"		10174877	0					
ANR	10174879	CompoundStatement		737:0:21279:21964	10174877	0					
ANR	10174880	Statement	static	738:1:21282:21287	10174877	0	True				
ANR	10174881	IdentifierDeclStatement	"const char module [ ] = ""PixarLogPreDecode"" ;"	738:8:21289:21330	10174877	1	True				
ANR	10174882	IdentifierDecl	"module [ ] = ""PixarLogPreDecode"""		10174877	0					
ANR	10174883	IdentifierDeclType	const char [ ]		10174877	0					
ANR	10174884	Identifier	module		10174877	1					
ANR	10174885	AssignmentExpression	"module [ ] = ""PixarLogPreDecode"""		10174877	2		=			
ANR	10174886	Identifier	module		10174877	0					
ANR	10174887	PrimaryExpression	"""PixarLogPreDecode"""		10174877	1					
ANR	10174888	IdentifierDeclStatement	PixarLogState * sp = DecoderState ( tif ) ;	739:1:21333:21370	10174877	2	True				
ANR	10174889	IdentifierDecl	* sp = DecoderState ( tif )		10174877	0					
ANR	10174890	IdentifierDeclType	PixarLogState *		10174877	0					
ANR	10174891	Identifier	sp		10174877	1					
ANR	10174892	AssignmentExpression	* sp = DecoderState ( tif )		10174877	2		=			
ANR	10174893	Identifier	sp		10174877	0					
ANR	10174894	CallExpression	DecoderState ( tif )		10174877	1					
ANR	10174895	Callee	DecoderState		10174877	0					
ANR	10174896	Identifier	DecoderState		10174877	0					
ANR	10174897	ArgumentList	tif		10174877	1					
ANR	10174898	Argument	tif		10174877	0					
ANR	10174899	Identifier	tif		10174877	0					
ANR	10174900	ExpressionStatement	( void ) s	741:1:21374:21382	10174877	3	True				
ANR	10174901	CastExpression	( void ) s		10174877	0					
ANR	10174902	CastTarget	void		10174877	0					
ANR	10174903	Identifier	s		10174877	1					
ANR	10174904	ExpressionStatement	assert ( sp != NULL )	742:1:21385:21403	10174877	4	True				
ANR	10174905	CallExpression	assert ( sp != NULL )		10174877	0					
ANR	10174906	Callee	assert		10174877	0					
ANR	10174907	Identifier	assert		10174877	0					
ANR	10174908	ArgumentList	sp != NULL		10174877	1					
ANR	10174909	Argument	sp != NULL		10174877	0					
ANR	10174910	EqualityExpression	sp != NULL		10174877	0		!=			
ANR	10174911	Identifier	sp		10174877	0					
ANR	10174912	Identifier	NULL		10174877	1					
ANR	10174913	ExpressionStatement	sp -> stream . next_in = tif -> tif_rawdata	743:1:21406:21443	10174877	5	True				
ANR	10174914	AssignmentExpression	sp -> stream . next_in = tif -> tif_rawdata		10174877	0		=			
ANR	10174915	MemberAccess	sp -> stream . next_in		10174877	0					
ANR	10174916	PtrMemberAccess	sp -> stream		10174877	0					
ANR	10174917	Identifier	sp		10174877	0					
ANR	10174918	Identifier	stream		10174877	1					
ANR	10174919	Identifier	next_in		10174877	1					
ANR	10174920	PtrMemberAccess	tif -> tif_rawdata		10174877	1					
ANR	10174921	Identifier	tif		10174877	0					
ANR	10174922	Identifier	tif_rawdata		10174877	1					
ANR	10174923	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_in ) == 4 )	744:1:21446:21484	10174877	6	True				
ANR	10174924	CallExpression	assert ( sizeof ( sp -> stream . avail_in ) == 4 )		10174877	0					
ANR	10174925	Callee	assert		10174877	0					
ANR	10174926	Identifier	assert		10174877	0					
ANR	10174927	ArgumentList	sizeof ( sp -> stream . avail_in ) == 4		10174877	1					
ANR	10174928	Argument	sizeof ( sp -> stream . avail_in ) == 4		10174877	0					
ANR	10174929	EqualityExpression	sizeof ( sp -> stream . avail_in ) == 4		10174877	0		==			
ANR	10174930	SizeofExpression	sizeof ( sp -> stream . avail_in )		10174877	0					
ANR	10174931	Sizeof	sizeof		10174877	0					
ANR	10174932	MemberAccess	sp -> stream . avail_in		10174877	1					
ANR	10174933	PtrMemberAccess	sp -> stream		10174877	0					
ANR	10174934	Identifier	sp		10174877	0					
ANR	10174935	Identifier	stream		10174877	1					
ANR	10174936	Identifier	avail_in		10174877	1					
ANR	10174937	PrimaryExpression	4		10174877	1					
ANR	10174938	ExpressionStatement	sp -> stream . avail_in = ( uInt ) tif -> tif_rawcc	748:1:21712:21755	10174877	7	True				
ANR	10174939	AssignmentExpression	sp -> stream . avail_in = ( uInt ) tif -> tif_rawcc		10174877	0		=			
ANR	10174940	MemberAccess	sp -> stream . avail_in		10174877	0					
ANR	10174941	PtrMemberAccess	sp -> stream		10174877	0					
ANR	10174942	Identifier	sp		10174877	0					
ANR	10174943	Identifier	stream		10174877	1					
ANR	10174944	Identifier	avail_in		10174877	1					
ANR	10174945	CastExpression	( uInt ) tif -> tif_rawcc		10174877	1					
ANR	10174946	CastTarget	uInt		10174877	0					
ANR	10174947	PtrMemberAccess	tif -> tif_rawcc		10174877	1					
ANR	10174948	Identifier	tif		10174877	0					
ANR	10174949	Identifier	tif_rawcc		10174877	1					
ANR	10174950	IfStatement	if ( ( tmsize_t ) sp -> stream . avail_in != tif -> tif_rawcc )		10174877	8					
ANR	10174951	Condition	( tmsize_t ) sp -> stream . avail_in != tif -> tif_rawcc	749:5:21762:21808	10174877	0	True				
ANR	10174952	EqualityExpression	( tmsize_t ) sp -> stream . avail_in != tif -> tif_rawcc		10174877	0		!=			
ANR	10174953	CastExpression	( tmsize_t ) sp -> stream . avail_in		10174877	0					
ANR	10174954	CastTarget	tmsize_t		10174877	0					
ANR	10174955	MemberAccess	sp -> stream . avail_in		10174877	1					
ANR	10174956	PtrMemberAccess	sp -> stream		10174877	0					
ANR	10174957	Identifier	sp		10174877	0					
ANR	10174958	Identifier	stream		10174877	1					
ANR	10174959	Identifier	avail_in		10174877	1					
ANR	10174960	PtrMemberAccess	tif -> tif_rawcc		10174877	1					
ANR	10174961	Identifier	tif		10174877	0					
ANR	10174962	Identifier	tif_rawcc		10174877	1					
ANR	10174963	CompoundStatement		14:1:532:532	10174877	1					
ANR	10174964	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	751:2:21816:21900	10174877	0	True				
ANR	10174965	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		10174877	0					
ANR	10174966	Callee	TIFFErrorExt		10174877	0					
ANR	10174967	Identifier	TIFFErrorExt		10174877	0					
ANR	10174968	ArgumentList	tif -> tif_clientdata		10174877	1					
ANR	10174969	Argument	tif -> tif_clientdata		10174877	0					
ANR	10174970	PtrMemberAccess	tif -> tif_clientdata		10174877	0					
ANR	10174971	Identifier	tif		10174877	0					
ANR	10174972	Identifier	tif_clientdata		10174877	1					
ANR	10174973	Argument	module		10174877	1					
ANR	10174974	Identifier	module		10174877	0					
ANR	10174975	Argument	"""ZLib cannot deal with buffers this size"""		10174877	2					
ANR	10174976	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		10174877	0					
ANR	10174977	ReturnStatement	return ( 0 ) ;	752:2:21904:21914	10174877	1	True				
ANR	10174978	PrimaryExpression	0		10174877	0					
ANR	10174979	ReturnStatement	return ( inflateReset ( & sp -> stream ) == Z_OK ) ;	754:1:21920:21962	10174877	9	True				
ANR	10174980	EqualityExpression	inflateReset ( & sp -> stream ) == Z_OK		10174877	0		==			
ANR	10174981	CallExpression	inflateReset ( & sp -> stream )		10174877	0					
ANR	10174982	Callee	inflateReset		10174877	0					
ANR	10174983	Identifier	inflateReset		10174877	0					
ANR	10174984	ArgumentList	& sp -> stream		10174877	1					
ANR	10174985	Argument	& sp -> stream		10174877	0					
ANR	10174986	UnaryOperationExpression	& sp -> stream		10174877	0					
ANR	10174987	UnaryOperator	&		10174877	0					
ANR	10174988	PtrMemberAccess	sp -> stream		10174877	1					
ANR	10174989	Identifier	sp		10174877	0					
ANR	10174990	Identifier	stream		10174877	1					
ANR	10174991	Identifier	Z_OK		10174877	1					
ANR	10174992	ReturnType	static int		10174877	1					
ANR	10174993	Identifier	PixarLogPreDecode		10174877	2					
ANR	10174994	ParameterList	"TIFF * tif , uint16 s"		10174877	3					
ANR	10174995	Parameter	TIFF * tif	736:18:21258:21266	10174877	0	True				
ANR	10174996	ParameterType	TIFF *		10174877	0					
ANR	10174997	Identifier	tif		10174877	1					
ANR	10174998	Parameter	uint16 s	736:29:21269:21276	10174877	1	True				
ANR	10174999	ParameterType	uint16		10174877	0					
ANR	10175000	Identifier	s		10174877	1					
ANR	10175001	CFGEntryNode	ENTRY		10174877		True				
ANR	10175002	CFGExitNode	EXIT		10174877		True				
ANR	10175003	Symbol	* sp		10174877						
ANR	10175004	Symbol	NULL		10174877						
ANR	10175005	Symbol	& sp -> stream		10174877						
ANR	10175006	Symbol	module		10174877						
ANR	10175007	Symbol	sp -> stream . next_in		10174877						
ANR	10175008	Symbol	Z_OK		10174877						
ANR	10175009	Symbol	tif -> tif_clientdata		10174877						
ANR	10175010	Symbol	tif		10174877						
ANR	10175011	Symbol	tif -> tif_rawcc		10174877						
ANR	10175012	Symbol	s		10174877						
ANR	10175013	Symbol	sp -> stream . avail_in		10174877						
ANR	10175014	Symbol	DecoderState		10174877						
ANR	10175015	Symbol	sp -> stream		10174877						
ANR	10175016	Symbol	* tif		10174877						
ANR	10175017	Symbol	sp		10174877						
ANR	10175018	Symbol	inflateReset		10174877						
ANR	10175019	Symbol	tif -> tif_rawdata		10174877						
ANR	10175020	Function	PixarLogDecode	757:0:21967:26436							
ANR	10175021	FunctionDef	"PixarLogDecode (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		10175020	0					
ANR	10175022	CompoundStatement		759:0:22039:26436	10175020	0					
ANR	10175023	Statement	static	760:1:22042:22047	10175020	0	True				
ANR	10175024	IdentifierDeclStatement	"const char module [ ] = ""PixarLogDecode"" ;"	760:8:22049:22087	10175020	1	True				
ANR	10175025	IdentifierDecl	"module [ ] = ""PixarLogDecode"""		10175020	0					
ANR	10175026	IdentifierDeclType	const char [ ]		10175020	0					
ANR	10175027	Identifier	module		10175020	1					
ANR	10175028	AssignmentExpression	"module [ ] = ""PixarLogDecode"""		10175020	2		=			
ANR	10175029	Identifier	module		10175020	0					
ANR	10175030	PrimaryExpression	"""PixarLogDecode"""		10175020	1					
ANR	10175031	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	761:1:22090:22123	10175020	2	True				
ANR	10175032	IdentifierDecl	* td = & tif -> tif_dir		10175020	0					
ANR	10175033	IdentifierDeclType	TIFFDirectory *		10175020	0					
ANR	10175034	Identifier	td		10175020	1					
ANR	10175035	AssignmentExpression	* td = & tif -> tif_dir		10175020	2		=			
ANR	10175036	Identifier	td		10175020	0					
ANR	10175037	UnaryOperationExpression	& tif -> tif_dir		10175020	1					
ANR	10175038	UnaryOperator	&		10175020	0					
ANR	10175039	PtrMemberAccess	tif -> tif_dir		10175020	1					
ANR	10175040	Identifier	tif		10175020	0					
ANR	10175041	Identifier	tif_dir		10175020	1					
ANR	10175042	IdentifierDeclStatement	PixarLogState * sp = DecoderState ( tif ) ;	762:1:22126:22163	10175020	3	True				
ANR	10175043	IdentifierDecl	* sp = DecoderState ( tif )		10175020	0					
ANR	10175044	IdentifierDeclType	PixarLogState *		10175020	0					
ANR	10175045	Identifier	sp		10175020	1					
ANR	10175046	AssignmentExpression	* sp = DecoderState ( tif )		10175020	2		=			
ANR	10175047	Identifier	sp		10175020	0					
ANR	10175048	CallExpression	DecoderState ( tif )		10175020	1					
ANR	10175049	Callee	DecoderState		10175020	0					
ANR	10175050	Identifier	DecoderState		10175020	0					
ANR	10175051	ArgumentList	tif		10175020	1					
ANR	10175052	Argument	tif		10175020	0					
ANR	10175053	Identifier	tif		10175020	0					
ANR	10175054	IdentifierDeclStatement	tmsize_t i ;	763:1:22166:22176	10175020	4	True				
ANR	10175055	IdentifierDecl	i		10175020	0					
ANR	10175056	IdentifierDeclType	tmsize_t		10175020	0					
ANR	10175057	Identifier	i		10175020	1					
ANR	10175058	IdentifierDeclStatement	tmsize_t nsamples ;	764:1:22179:22196	10175020	5	True				
ANR	10175059	IdentifierDecl	nsamples		10175020	0					
ANR	10175060	IdentifierDeclType	tmsize_t		10175020	0					
ANR	10175061	Identifier	nsamples		10175020	1					
ANR	10175062	IdentifierDeclStatement	int llen ;	765:1:22199:22207	10175020	6	True				
ANR	10175063	IdentifierDecl	llen		10175020	0					
ANR	10175064	IdentifierDeclType	int		10175020	0					
ANR	10175065	Identifier	llen		10175020	1					
ANR	10175066	IdentifierDeclStatement	uint16 * up ;	766:1:22210:22220	10175020	7	True				
ANR	10175067	IdentifierDecl	* up		10175020	0					
ANR	10175068	IdentifierDeclType	uint16 *		10175020	0					
ANR	10175069	Identifier	up		10175020	1					
ANR	10175070	SwitchStatement	switch ( sp -> user_datafmt )		10175020	8					
ANR	10175071	Condition	sp -> user_datafmt	768:9:22232:22247	10175020	0	True				
ANR	10175072	PtrMemberAccess	sp -> user_datafmt		10175020	0					
ANR	10175073	Identifier	sp		10175020	0					
ANR	10175074	Identifier	user_datafmt		10175020	1					
ANR	10175075	CompoundStatement		10:27:210:210	10175020	1					
ANR	10175076	Label	case PIXARLOGDATAFMT_FLOAT :	769:1:22253:22279	10175020	0	True				
ANR	10175077	Identifier	PIXARLOGDATAFMT_FLOAT		10175020	0					
ANR	10175078	ExpressionStatement	nsamples = occ / sizeof ( float )	770:2:22283:22313	10175020	1	True				
ANR	10175079	AssignmentExpression	nsamples = occ / sizeof ( float )		10175020	0		=			
ANR	10175080	Identifier	nsamples		10175020	0					
ANR	10175081	MultiplicativeExpression	occ / sizeof ( float )		10175020	1		/			
ANR	10175082	Identifier	occ		10175020	0					
ANR	10175083	SizeofExpression	sizeof ( float )		10175020	1					
ANR	10175084	Sizeof	sizeof		10175020	0					
ANR	10175085	SizeofOperand	float		10175020	1					
ANR	10175086	BreakStatement	break ;	771:2:22344:22349	10175020	2	True				
ANR	10175087	Label	case PIXARLOGDATAFMT_16BIT :	772:1:22352:22378	10175020	3	True				
ANR	10175088	Identifier	PIXARLOGDATAFMT_16BIT		10175020	0					
ANR	10175089	Label	case PIXARLOGDATAFMT_12BITPICIO :	773:1:22381:22412	10175020	4	True				
ANR	10175090	Identifier	PIXARLOGDATAFMT_12BITPICIO		10175020	0					
ANR	10175091	Label	case PIXARLOGDATAFMT_11BITLOG :	774:1:22415:22444	10175020	5	True				
ANR	10175092	Identifier	PIXARLOGDATAFMT_11BITLOG		10175020	0					
ANR	10175093	ExpressionStatement	nsamples = occ / sizeof ( uint16 )	775:2:22448:22479	10175020	6	True				
ANR	10175094	AssignmentExpression	nsamples = occ / sizeof ( uint16 )		10175020	0		=			
ANR	10175095	Identifier	nsamples		10175020	0					
ANR	10175096	MultiplicativeExpression	occ / sizeof ( uint16 )		10175020	1		/			
ANR	10175097	Identifier	occ		10175020	0					
ANR	10175098	SizeofExpression	sizeof ( uint16 )		10175020	1					
ANR	10175099	Sizeof	sizeof		10175020	0					
ANR	10175100	SizeofOperand	uint16		10175020	1					
ANR	10175101	BreakStatement	break ;	776:2:22511:22516	10175020	7	True				
ANR	10175102	Label	case PIXARLOGDATAFMT_8BIT :	777:1:22519:22544	10175020	8	True				
ANR	10175103	Identifier	PIXARLOGDATAFMT_8BIT		10175020	0					
ANR	10175104	Label	case PIXARLOGDATAFMT_8BITABGR :	778:1:22547:22576	10175020	9	True				
ANR	10175105	Identifier	PIXARLOGDATAFMT_8BITABGR		10175020	0					
ANR	10175106	ExpressionStatement	nsamples = occ	779:2:22580:22594	10175020	10	True				
ANR	10175107	AssignmentExpression	nsamples = occ		10175020	0		=			
ANR	10175108	Identifier	nsamples		10175020	0					
ANR	10175109	Identifier	occ		10175020	1					
ANR	10175110	BreakStatement	break ;	780:2:22598:22603	10175020	11	True				
ANR	10175111	Label	default :	781:1:22606:22613	10175020	12	True				
ANR	10175112	Identifier	default		10175020	0					
ANR	10175113	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"	782:2:22617:22728	10175020	13	True				
ANR	10175114	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"		10175020	0					
ANR	10175115	Callee	TIFFErrorExt		10175020	0					
ANR	10175116	Identifier	TIFFErrorExt		10175020	0					
ANR	10175117	ArgumentList	tif -> tif_clientdata		10175020	1					
ANR	10175118	Argument	tif -> tif_clientdata		10175020	0					
ANR	10175119	PtrMemberAccess	tif -> tif_clientdata		10175020	0					
ANR	10175120	Identifier	tif		10175020	0					
ANR	10175121	Identifier	tif_clientdata		10175020	1					
ANR	10175122	Argument	module		10175020	1					
ANR	10175123	Identifier	module		10175020	0					
ANR	10175124	Argument	"""%d bit input not supported in PixarLog"""		10175020	2					
ANR	10175125	PrimaryExpression	"""%d bit input not supported in PixarLog"""		10175020	0					
ANR	10175126	Argument	td -> td_bitspersample		10175020	3					
ANR	10175127	PtrMemberAccess	td -> td_bitspersample		10175020	0					
ANR	10175128	Identifier	td		10175020	0					
ANR	10175129	Identifier	td_bitspersample		10175020	1					
ANR	10175130	ReturnStatement	return 0 ;	785:2:22732:22740	10175020	14	True				
ANR	10175131	PrimaryExpression	0		10175020	0					
ANR	10175132	ExpressionStatement	llen = sp -> stride * td -> td_imagewidth	788:1:22747:22784	10175020	9	True				
ANR	10175133	AssignmentExpression	llen = sp -> stride * td -> td_imagewidth		10175020	0		=			
ANR	10175134	Identifier	llen		10175020	0					
ANR	10175135	MultiplicativeExpression	sp -> stride * td -> td_imagewidth		10175020	1		*			
ANR	10175136	PtrMemberAccess	sp -> stride		10175020	0					
ANR	10175137	Identifier	sp		10175020	0					
ANR	10175138	Identifier	stride		10175020	1					
ANR	10175139	PtrMemberAccess	td -> td_imagewidth		10175020	1					
ANR	10175140	Identifier	td		10175020	0					
ANR	10175141	Identifier	td_imagewidth		10175020	1					
ANR	10175142	ExpressionStatement	( void ) s	790:1:22788:22796	10175020	10	True				
ANR	10175143	CastExpression	( void ) s		10175020	0					
ANR	10175144	CastTarget	void		10175020	0					
ANR	10175145	Identifier	s		10175020	1					
ANR	10175146	ExpressionStatement	assert ( sp != NULL )	791:1:22799:22817	10175020	11	True				
ANR	10175147	CallExpression	assert ( sp != NULL )		10175020	0					
ANR	10175148	Callee	assert		10175020	0					
ANR	10175149	Identifier	assert		10175020	0					
ANR	10175150	ArgumentList	sp != NULL		10175020	1					
ANR	10175151	Argument	sp != NULL		10175020	0					
ANR	10175152	EqualityExpression	sp != NULL		10175020	0		!=			
ANR	10175153	Identifier	sp		10175020	0					
ANR	10175154	Identifier	NULL		10175020	1					
ANR	10175155	ExpressionStatement	sp -> stream . next_in = tif -> tif_rawcp	793:8:22828:22863	10175020	12	True				
ANR	10175156	AssignmentExpression	sp -> stream . next_in = tif -> tif_rawcp		10175020	0		=			
ANR	10175157	MemberAccess	sp -> stream . next_in		10175020	0					
ANR	10175158	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175159	Identifier	sp		10175020	0					
ANR	10175160	Identifier	stream		10175020	1					
ANR	10175161	Identifier	next_in		10175020	1					
ANR	10175162	PtrMemberAccess	tif -> tif_rawcp		10175020	1					
ANR	10175163	Identifier	tif		10175020	0					
ANR	10175164	Identifier	tif_rawcp		10175020	1					
ANR	10175165	ExpressionStatement	sp -> stream . avail_in = ( uInt ) tif -> tif_rawcc	794:1:22866:22909	10175020	13	True				
ANR	10175166	AssignmentExpression	sp -> stream . avail_in = ( uInt ) tif -> tif_rawcc		10175020	0		=			
ANR	10175167	MemberAccess	sp -> stream . avail_in		10175020	0					
ANR	10175168	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175169	Identifier	sp		10175020	0					
ANR	10175170	Identifier	stream		10175020	1					
ANR	10175171	Identifier	avail_in		10175020	1					
ANR	10175172	CastExpression	( uInt ) tif -> tif_rawcc		10175020	1					
ANR	10175173	CastTarget	uInt		10175020	0					
ANR	10175174	PtrMemberAccess	tif -> tif_rawcc		10175020	1					
ANR	10175175	Identifier	tif		10175020	0					
ANR	10175176	Identifier	tif_rawcc		10175020	1					
ANR	10175177	ExpressionStatement	sp -> stream . next_out = ( unsigned char * ) sp -> tbuf	796:1:22913:22961	10175020	14	True				
ANR	10175178	AssignmentExpression	sp -> stream . next_out = ( unsigned char * ) sp -> tbuf		10175020	0		=			
ANR	10175179	MemberAccess	sp -> stream . next_out		10175020	0					
ANR	10175180	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175181	Identifier	sp		10175020	0					
ANR	10175182	Identifier	stream		10175020	1					
ANR	10175183	Identifier	next_out		10175020	1					
ANR	10175184	CastExpression	( unsigned char * ) sp -> tbuf		10175020	1					
ANR	10175185	CastTarget	unsigned char *		10175020	0					
ANR	10175186	PtrMemberAccess	sp -> tbuf		10175020	1					
ANR	10175187	Identifier	sp		10175020	0					
ANR	10175188	Identifier	tbuf		10175020	1					
ANR	10175189	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_out ) == 4 )	797:1:22964:23003	10175020	15	True				
ANR	10175190	CallExpression	assert ( sizeof ( sp -> stream . avail_out ) == 4 )		10175020	0					
ANR	10175191	Callee	assert		10175020	0					
ANR	10175192	Identifier	assert		10175020	0					
ANR	10175193	ArgumentList	sizeof ( sp -> stream . avail_out ) == 4		10175020	1					
ANR	10175194	Argument	sizeof ( sp -> stream . avail_out ) == 4		10175020	0					
ANR	10175195	EqualityExpression	sizeof ( sp -> stream . avail_out ) == 4		10175020	0		==			
ANR	10175196	SizeofExpression	sizeof ( sp -> stream . avail_out )		10175020	0					
ANR	10175197	Sizeof	sizeof		10175020	0					
ANR	10175198	MemberAccess	sp -> stream . avail_out		10175020	1					
ANR	10175199	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175200	Identifier	sp		10175020	0					
ANR	10175201	Identifier	stream		10175020	1					
ANR	10175202	Identifier	avail_out		10175020	1					
ANR	10175203	PrimaryExpression	4		10175020	1					
ANR	10175204	ExpressionStatement	sp -> stream . avail_out = ( uInt ) ( nsamples * sizeof ( uint16 ) )	801:1:23231:23288	10175020	16	True				
ANR	10175205	AssignmentExpression	sp -> stream . avail_out = ( uInt ) ( nsamples * sizeof ( uint16 ) )		10175020	0		=			
ANR	10175206	MemberAccess	sp -> stream . avail_out		10175020	0					
ANR	10175207	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175208	Identifier	sp		10175020	0					
ANR	10175209	Identifier	stream		10175020	1					
ANR	10175210	Identifier	avail_out		10175020	1					
ANR	10175211	CastExpression	( uInt ) ( nsamples * sizeof ( uint16 ) )		10175020	1					
ANR	10175212	CastTarget	uInt		10175020	0					
ANR	10175213	MultiplicativeExpression	nsamples * sizeof ( uint16 )		10175020	1		*			
ANR	10175214	Identifier	nsamples		10175020	0					
ANR	10175215	SizeofExpression	sizeof ( uint16 )		10175020	1					
ANR	10175216	Sizeof	sizeof		10175020	0					
ANR	10175217	SizeofOperand	uint16		10175020	1					
ANR	10175218	IfStatement	if ( sp -> stream . avail_out != nsamples * sizeof ( uint16 ) )		10175020	17					
ANR	10175219	Condition	sp -> stream . avail_out != nsamples * sizeof ( uint16 )	802:5:23295:23343	10175020	0	True				
ANR	10175220	EqualityExpression	sp -> stream . avail_out != nsamples * sizeof ( uint16 )		10175020	0		!=			
ANR	10175221	MemberAccess	sp -> stream . avail_out		10175020	0					
ANR	10175222	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175223	Identifier	sp		10175020	0					
ANR	10175224	Identifier	stream		10175020	1					
ANR	10175225	Identifier	avail_out		10175020	1					
ANR	10175226	MultiplicativeExpression	nsamples * sizeof ( uint16 )		10175020	1		*			
ANR	10175227	Identifier	nsamples		10175020	0					
ANR	10175228	SizeofExpression	sizeof ( uint16 )		10175020	1					
ANR	10175229	Sizeof	sizeof		10175020	0					
ANR	10175230	SizeofOperand	uint16		10175020	1					
ANR	10175231	CompoundStatement		45:1:1307:1307	10175020	1					
ANR	10175232	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	804:2:23351:23435	10175020	0	True				
ANR	10175233	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		10175020	0					
ANR	10175234	Callee	TIFFErrorExt		10175020	0					
ANR	10175235	Identifier	TIFFErrorExt		10175020	0					
ANR	10175236	ArgumentList	tif -> tif_clientdata		10175020	1					
ANR	10175237	Argument	tif -> tif_clientdata		10175020	0					
ANR	10175238	PtrMemberAccess	tif -> tif_clientdata		10175020	0					
ANR	10175239	Identifier	tif		10175020	0					
ANR	10175240	Identifier	tif_clientdata		10175020	1					
ANR	10175241	Argument	module		10175020	1					
ANR	10175242	Identifier	module		10175020	0					
ANR	10175243	Argument	"""ZLib cannot deal with buffers this size"""		10175020	2					
ANR	10175244	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		10175020	0					
ANR	10175245	ReturnStatement	return ( 0 ) ;	805:2:23439:23449	10175020	1	True				
ANR	10175246	PrimaryExpression	0		10175020	0					
ANR	10175247	IfStatement	if ( ( tmsize_t ) sp -> stream . avail_out > sp -> tbuf_size )		10175020	18					
ANR	10175248	Condition	( tmsize_t ) sp -> stream . avail_out > sp -> tbuf_size	808:5:23523:23568	10175020	0	True				
ANR	10175249	RelationalExpression	( tmsize_t ) sp -> stream . avail_out > sp -> tbuf_size		10175020	0		>			
ANR	10175250	CastExpression	( tmsize_t ) sp -> stream . avail_out		10175020	0					
ANR	10175251	CastTarget	tmsize_t		10175020	0					
ANR	10175252	MemberAccess	sp -> stream . avail_out		10175020	1					
ANR	10175253	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175254	Identifier	sp		10175020	0					
ANR	10175255	Identifier	stream		10175020	1					
ANR	10175256	Identifier	avail_out		10175020	1					
ANR	10175257	PtrMemberAccess	sp -> tbuf_size		10175020	1					
ANR	10175258	Identifier	sp		10175020	0					
ANR	10175259	Identifier	tbuf_size		10175020	1					
ANR	10175260	CompoundStatement		51:1:1532:1532	10175020	1					
ANR	10175261	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""sp->stream.avail_out > sp->tbuf_size"" )"	810:2:23576:23657	10175020	0	True				
ANR	10175262	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""sp->stream.avail_out > sp->tbuf_size"" )"		10175020	0					
ANR	10175263	Callee	TIFFErrorExt		10175020	0					
ANR	10175264	Identifier	TIFFErrorExt		10175020	0					
ANR	10175265	ArgumentList	tif -> tif_clientdata		10175020	1					
ANR	10175266	Argument	tif -> tif_clientdata		10175020	0					
ANR	10175267	PtrMemberAccess	tif -> tif_clientdata		10175020	0					
ANR	10175268	Identifier	tif		10175020	0					
ANR	10175269	Identifier	tif_clientdata		10175020	1					
ANR	10175270	Argument	module		10175020	1					
ANR	10175271	Identifier	module		10175020	0					
ANR	10175272	Argument	"""sp->stream.avail_out > sp->tbuf_size"""		10175020	2					
ANR	10175273	PrimaryExpression	"""sp->stream.avail_out > sp->tbuf_size"""		10175020	0					
ANR	10175274	ReturnStatement	return ( 0 ) ;	811:2:23661:23671	10175020	1	True				
ANR	10175275	PrimaryExpression	0		10175020	0					
ANR	10175276	DoStatement	do		10175020	19					
ANR	10175277	CompoundStatement		56:2:1644:1693	10175020	0					
ANR	10175278	IdentifierDeclStatement	"int state = inflate ( & sp -> stream , Z_PARTIAL_FLUSH ) ;"	814:2:23684:23733	10175020	0	True				
ANR	10175279	IdentifierDecl	"state = inflate ( & sp -> stream , Z_PARTIAL_FLUSH )"		10175020	0					
ANR	10175280	IdentifierDeclType	int		10175020	0					
ANR	10175281	Identifier	state		10175020	1					
ANR	10175282	AssignmentExpression	"state = inflate ( & sp -> stream , Z_PARTIAL_FLUSH )"		10175020	2		=			
ANR	10175283	Identifier	state		10175020	0					
ANR	10175284	CallExpression	"inflate ( & sp -> stream , Z_PARTIAL_FLUSH )"		10175020	1					
ANR	10175285	Callee	inflate		10175020	0					
ANR	10175286	Identifier	inflate		10175020	0					
ANR	10175287	ArgumentList	& sp -> stream		10175020	1					
ANR	10175288	Argument	& sp -> stream		10175020	0					
ANR	10175289	UnaryOperationExpression	& sp -> stream		10175020	0					
ANR	10175290	UnaryOperator	&		10175020	0					
ANR	10175291	PtrMemberAccess	sp -> stream		10175020	1					
ANR	10175292	Identifier	sp		10175020	0					
ANR	10175293	Identifier	stream		10175020	1					
ANR	10175294	Argument	Z_PARTIAL_FLUSH		10175020	1					
ANR	10175295	Identifier	Z_PARTIAL_FLUSH		10175020	0					
ANR	10175296	IfStatement	if ( state == Z_STREAM_END )		10175020	1					
ANR	10175297	Condition	state == Z_STREAM_END	815:6:23741:23761	10175020	0	True				
ANR	10175298	EqualityExpression	state == Z_STREAM_END		10175020	0		==			
ANR	10175299	Identifier	state		10175020	0					
ANR	10175300	Identifier	Z_STREAM_END		10175020	1					
ANR	10175301	CompoundStatement		57:29:1724:1724	10175020	1					
ANR	10175302	BreakStatement	break ;	816:3:23769:23774	10175020	0	True				
ANR	10175303	IfStatement	if ( state == Z_DATA_ERROR )		10175020	2					
ANR	10175304	Condition	state == Z_DATA_ERROR	818:6:23798:23818	10175020	0	True				
ANR	10175305	EqualityExpression	state == Z_DATA_ERROR		10175020	0		==			
ANR	10175306	Identifier	state		10175020	0					
ANR	10175307	Identifier	Z_DATA_ERROR		10175020	1					
ANR	10175308	CompoundStatement		60:29:1781:1781	10175020	1					
ANR	10175309	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Decoding error at scanline %lu, %s"" , ( unsigned long ) tif -> tif_row , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"	819:3:23826:23993	10175020	0	True				
ANR	10175310	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Decoding error at scanline %lu, %s"" , ( unsigned long ) tif -> tif_row , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"		10175020	0					
ANR	10175311	Callee	TIFFErrorExt		10175020	0					
ANR	10175312	Identifier	TIFFErrorExt		10175020	0					
ANR	10175313	ArgumentList	tif -> tif_clientdata		10175020	1					
ANR	10175314	Argument	tif -> tif_clientdata		10175020	0					
ANR	10175315	PtrMemberAccess	tif -> tif_clientdata		10175020	0					
ANR	10175316	Identifier	tif		10175020	0					
ANR	10175317	Identifier	tif_clientdata		10175020	1					
ANR	10175318	Argument	module		10175020	1					
ANR	10175319	Identifier	module		10175020	0					
ANR	10175320	Argument	"""Decoding error at scanline %lu, %s"""		10175020	2					
ANR	10175321	PrimaryExpression	"""Decoding error at scanline %lu, %s"""		10175020	0					
ANR	10175322	Argument	( unsigned long ) tif -> tif_row		10175020	3					
ANR	10175323	CastExpression	( unsigned long ) tif -> tif_row		10175020	0					
ANR	10175324	CastTarget	unsigned long		10175020	0					
ANR	10175325	PtrMemberAccess	tif -> tif_row		10175020	1					
ANR	10175326	Identifier	tif		10175020	0					
ANR	10175327	Identifier	tif_row		10175020	1					
ANR	10175328	Argument	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10175020	4					
ANR	10175329	ConditionalExpression	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10175020	0					
ANR	10175330	Condition	sp -> stream . msg		10175020	0					
ANR	10175331	MemberAccess	sp -> stream . msg		10175020	0					
ANR	10175332	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175333	Identifier	sp		10175020	0					
ANR	10175334	Identifier	stream		10175020	1					
ANR	10175335	Identifier	msg		10175020	1					
ANR	10175336	MemberAccess	sp -> stream . msg		10175020	1					
ANR	10175337	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175338	Identifier	sp		10175020	0					
ANR	10175339	Identifier	stream		10175020	1					
ANR	10175340	Identifier	msg		10175020	1					
ANR	10175341	PrimaryExpression	"""(null)"""		10175020	2					
ANR	10175342	IfStatement	if ( inflateSync ( & sp -> stream ) != Z_OK )		10175020	1					
ANR	10175343	Condition	inflateSync ( & sp -> stream ) != Z_OK	822:7:24002:24033	10175020	0	True				
ANR	10175344	EqualityExpression	inflateSync ( & sp -> stream ) != Z_OK		10175020	0		!=			
ANR	10175345	CallExpression	inflateSync ( & sp -> stream )		10175020	0					
ANR	10175346	Callee	inflateSync		10175020	0					
ANR	10175347	Identifier	inflateSync		10175020	0					
ANR	10175348	ArgumentList	& sp -> stream		10175020	1					
ANR	10175349	Argument	& sp -> stream		10175020	0					
ANR	10175350	UnaryOperationExpression	& sp -> stream		10175020	0					
ANR	10175351	UnaryOperator	&		10175020	0					
ANR	10175352	PtrMemberAccess	sp -> stream		10175020	1					
ANR	10175353	Identifier	sp		10175020	0					
ANR	10175354	Identifier	stream		10175020	1					
ANR	10175355	Identifier	Z_OK		10175020	1					
ANR	10175356	ReturnStatement	return ( 0 ) ;	823:4:24040:24050	10175020	1	True				
ANR	10175357	PrimaryExpression	0		10175020	0					
ANR	10175358	ContinueStatement	continue ;	824:3:24055:24063	10175020	2	True				
ANR	10175359	IfStatement	if ( state != Z_OK )		10175020	3					
ANR	10175360	Condition	state != Z_OK	826:6:24075:24087	10175020	0	True				
ANR	10175361	EqualityExpression	state != Z_OK		10175020	0		!=			
ANR	10175362	Identifier	state		10175020	0					
ANR	10175363	Identifier	Z_OK		10175020	1					
ANR	10175364	CompoundStatement		68:21:2050:2050	10175020	1					
ANR	10175365	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"	827:3:24095:24205	10175020	0	True				
ANR	10175366	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"		10175020	0					
ANR	10175367	Callee	TIFFErrorExt		10175020	0					
ANR	10175368	Identifier	TIFFErrorExt		10175020	0					
ANR	10175369	ArgumentList	tif -> tif_clientdata		10175020	1					
ANR	10175370	Argument	tif -> tif_clientdata		10175020	0					
ANR	10175371	PtrMemberAccess	tif -> tif_clientdata		10175020	0					
ANR	10175372	Identifier	tif		10175020	0					
ANR	10175373	Identifier	tif_clientdata		10175020	1					
ANR	10175374	Argument	module		10175020	1					
ANR	10175375	Identifier	module		10175020	0					
ANR	10175376	Argument	"""ZLib error: %s"""		10175020	2					
ANR	10175377	PrimaryExpression	"""ZLib error: %s"""		10175020	0					
ANR	10175378	Argument	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10175020	3					
ANR	10175379	ConditionalExpression	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10175020	0					
ANR	10175380	Condition	sp -> stream . msg		10175020	0					
ANR	10175381	MemberAccess	sp -> stream . msg		10175020	0					
ANR	10175382	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175383	Identifier	sp		10175020	0					
ANR	10175384	Identifier	stream		10175020	1					
ANR	10175385	Identifier	msg		10175020	1					
ANR	10175386	MemberAccess	sp -> stream . msg		10175020	1					
ANR	10175387	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175388	Identifier	sp		10175020	0					
ANR	10175389	Identifier	stream		10175020	1					
ANR	10175390	Identifier	msg		10175020	1					
ANR	10175391	PrimaryExpression	"""(null)"""		10175020	2					
ANR	10175392	ReturnStatement	return ( 0 ) ;	829:3:24210:24220	10175020	1	True				
ANR	10175393	PrimaryExpression	0		10175020	0					
ANR	10175394	Condition	sp -> stream . avail_out > 0	831:10:24236:24259	10175020	1	True				
ANR	10175395	RelationalExpression	sp -> stream . avail_out > 0		10175020	0		>			
ANR	10175396	MemberAccess	sp -> stream . avail_out		10175020	0					
ANR	10175397	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175398	Identifier	sp		10175020	0					
ANR	10175399	Identifier	stream		10175020	1					
ANR	10175400	Identifier	avail_out		10175020	1					
ANR	10175401	PrimaryExpression	0		10175020	1					
ANR	10175402	IfStatement	if ( sp -> stream . avail_out != 0 )		10175020	20					
ANR	10175403	Condition	sp -> stream . avail_out != 0	834:5:24318:24342	10175020	0	True				
ANR	10175404	EqualityExpression	sp -> stream . avail_out != 0		10175020	0		!=			
ANR	10175405	MemberAccess	sp -> stream . avail_out		10175020	0					
ANR	10175406	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175407	Identifier	sp		10175020	0					
ANR	10175408	Identifier	stream		10175020	1					
ANR	10175409	Identifier	avail_out		10175020	1					
ANR	10175410	PrimaryExpression	0		10175020	1					
ANR	10175411	CompoundStatement		76:32:2305:2305	10175020	1					
ANR	10175412	Statement	TIFFErrorExt	835:2:24349:24360	10175020	0	True				
ANR	10175413	Statement	(	835:14:24361:24361	10175020	1	True				
ANR	10175414	Statement	tif	835:15:24362:24364	10175020	2	True				
ANR	10175415	Statement	->	835:18:24365:24366	10175020	3	True				
ANR	10175416	Statement	tif_clientdata	835:20:24367:24380	10175020	4	True				
ANR	10175417	Statement	","	835:34:24381:24381	10175020	5	True				
ANR	10175418	Statement	module	835:36:24383:24388	10175020	6	True				
ANR	10175419	Statement	","	835:42:24389:24389	10175020	7	True				
ANR	10175420	Statement	"""Not enough data at scanline %lu (short """	836:6:24397:24437	10175020	8	True				
ANR	10175421	Statement	TIFF_UINT64_FORMAT	836:48:24439:24456	10175020	9	True				
ANR	10175422	Statement	""" bytes)"""	836:67:24458:24466	10175020	10	True				
ANR	10175423	Statement	","	836:76:24467:24467	10175020	11	True				
ANR	10175424	Statement	(	837:6:24475:24475	10175020	12	True				
ANR	10175425	Statement	unsigned	837:7:24476:24483	10175020	13	True				
ANR	10175426	Statement	long	837:16:24485:24488	10175020	14	True				
ANR	10175427	Statement	)	837:20:24489:24489	10175020	15	True				
ANR	10175428	Statement	tif	837:22:24491:24493	10175020	16	True				
ANR	10175429	Statement	->	837:25:24494:24495	10175020	17	True				
ANR	10175430	Statement	tif_row	837:27:24496:24502	10175020	18	True				
ANR	10175431	Statement	","	837:34:24503:24503	10175020	19	True				
ANR	10175432	Statement	(	837:36:24505:24505	10175020	20	True				
ANR	10175433	Statement	TIFF_UINT64_T	837:37:24506:24518	10175020	21	True				
ANR	10175434	Statement	)	837:50:24519:24519	10175020	22	True				
ANR	10175435	Statement	sp	837:52:24521:24522	10175020	23	True				
ANR	10175436	Statement	->	837:54:24523:24524	10175020	24	True				
ANR	10175437	Statement	stream	837:56:24525:24530	10175020	25	True				
ANR	10175438	Statement	.	837:62:24531:24531	10175020	26	True				
ANR	10175439	Statement	avail_out	837:63:24532:24540	10175020	27	True				
ANR	10175440	Statement	)	837:72:24541:24541	10175020	28	True				
ANR	10175441	ExpressionStatement		837:73:24542:24542	10175020	29	True				
ANR	10175442	ReturnStatement	return ( 0 ) ;	838:2:24546:24556	10175020	30	True				
ANR	10175443	PrimaryExpression	0		10175020	0					
ANR	10175444	ExpressionStatement	tif -> tif_rawcp = sp -> stream . next_in	841:8:24570:24605	10175020	21	True				
ANR	10175445	AssignmentExpression	tif -> tif_rawcp = sp -> stream . next_in		10175020	0		=			
ANR	10175446	PtrMemberAccess	tif -> tif_rawcp		10175020	0					
ANR	10175447	Identifier	tif		10175020	0					
ANR	10175448	Identifier	tif_rawcp		10175020	1					
ANR	10175449	MemberAccess	sp -> stream . next_in		10175020	1					
ANR	10175450	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175451	Identifier	sp		10175020	0					
ANR	10175452	Identifier	stream		10175020	1					
ANR	10175453	Identifier	next_in		10175020	1					
ANR	10175454	ExpressionStatement	tif -> tif_rawcc = sp -> stream . avail_in	842:8:24615:24651	10175020	22	True				
ANR	10175455	AssignmentExpression	tif -> tif_rawcc = sp -> stream . avail_in		10175020	0		=			
ANR	10175456	PtrMemberAccess	tif -> tif_rawcc		10175020	0					
ANR	10175457	Identifier	tif		10175020	0					
ANR	10175458	Identifier	tif_rawcc		10175020	1					
ANR	10175459	MemberAccess	sp -> stream . avail_in		10175020	1					
ANR	10175460	PtrMemberAccess	sp -> stream		10175020	0					
ANR	10175461	Identifier	sp		10175020	0					
ANR	10175462	Identifier	stream		10175020	1					
ANR	10175463	Identifier	avail_in		10175020	1					
ANR	10175464	ExpressionStatement	up = sp -> tbuf	844:1:24655:24668	10175020	23	True				
ANR	10175465	AssignmentExpression	up = sp -> tbuf		10175020	0		=			
ANR	10175466	Identifier	up		10175020	0					
ANR	10175467	PtrMemberAccess	sp -> tbuf		10175020	1					
ANR	10175468	Identifier	sp		10175020	0					
ANR	10175469	Identifier	tbuf		10175020	1					
ANR	10175470	IfStatement	if ( tif -> tif_flags & TIFF_SWAB )		10175020	24					
ANR	10175471	Condition	tif -> tif_flags & TIFF_SWAB	846:5:24741:24766	10175020	0	True				
ANR	10175472	BitAndExpression	tif -> tif_flags & TIFF_SWAB		10175020	0		&			
ANR	10175473	PtrMemberAccess	tif -> tif_flags		10175020	0					
ANR	10175474	Identifier	tif		10175020	0					
ANR	10175475	Identifier	tif_flags		10175020	1					
ANR	10175476	Identifier	TIFF_SWAB		10175020	1					
ANR	10175477	ExpressionStatement	"TIFFSwabArrayOfShort ( up , nsamples )"	847:2:24771:24805	10175020	1	True				
ANR	10175478	CallExpression	"TIFFSwabArrayOfShort ( up , nsamples )"		10175020	0					
ANR	10175479	Callee	TIFFSwabArrayOfShort		10175020	0					
ANR	10175480	Identifier	TIFFSwabArrayOfShort		10175020	0					
ANR	10175481	ArgumentList	up		10175020	1					
ANR	10175482	Argument	up		10175020	0					
ANR	10175483	Identifier	up		10175020	0					
ANR	10175484	Argument	nsamples		10175020	1					
ANR	10175485	Identifier	nsamples		10175020	0					
ANR	10175486	IfStatement	if ( nsamples % llen )		10175020	25					
ANR	10175487	Condition	nsamples % llen	854:5:25015:25029	10175020	0	True				
ANR	10175488	MultiplicativeExpression	nsamples % llen		10175020	0		%			
ANR	10175489	Identifier	nsamples		10175020	0					
ANR	10175490	Identifier	llen		10175020	1					
ANR	10175491	CompoundStatement		96:22:2992:2992	10175020	1					
ANR	10175492	Statement	TIFFWarningExt	855:2:25037:25050	10175020	0	True				
ANR	10175493	Statement	(	855:16:25051:25051	10175020	1	True				
ANR	10175494	Statement	tif	855:17:25052:25054	10175020	2	True				
ANR	10175495	Statement	->	855:20:25055:25056	10175020	3	True				
ANR	10175496	Statement	tif_clientdata	855:22:25057:25070	10175020	4	True				
ANR	10175497	Statement	","	855:36:25071:25071	10175020	5	True				
ANR	10175498	Statement	module	855:38:25073:25078	10175020	6	True				
ANR	10175499	Statement	","	855:44:25079:25079	10175020	7	True				
ANR	10175500	Statement	"""stride %lu is not a multiple of sample count, """	856:3:25084:25131	10175020	8	True				
ANR	10175501	Statement	"""%lu, data truncated."""	857:3:25136:25157	10175020	9	True				
ANR	10175502	Statement	","	857:25:25158:25158	10175020	10	True				
ANR	10175503	Statement	(	857:27:25160:25160	10175020	11	True				
ANR	10175504	Statement	unsigned	857:28:25161:25168	10175020	12	True				
ANR	10175505	Statement	long	857:37:25170:25173	10175020	13	True				
ANR	10175506	Statement	)	857:41:25174:25174	10175020	14	True				
ANR	10175507	Statement	llen	857:43:25176:25179	10175020	15	True				
ANR	10175508	Statement	","	857:47:25180:25180	10175020	16	True				
ANR	10175509	Statement	(	857:49:25182:25182	10175020	17	True				
ANR	10175510	Statement	unsigned	857:50:25183:25190	10175020	18	True				
ANR	10175511	Statement	long	857:59:25192:25195	10175020	19	True				
ANR	10175512	Statement	)	857:63:25196:25196	10175020	20	True				
ANR	10175513	Statement	nsamples	857:65:25198:25205	10175020	21	True				
ANR	10175514	Statement	)	857:73:25206:25206	10175020	22	True				
ANR	10175515	ExpressionStatement		857:74:25207:25207	10175020	23	True				
ANR	10175516	ExpressionStatement	nsamples -= nsamples % llen	858:2:25211:25238	10175020	24	True				
ANR	10175517	AssignmentExpression	nsamples -= nsamples % llen		10175020	0		-=			
ANR	10175518	Identifier	nsamples		10175020	0					
ANR	10175519	MultiplicativeExpression	nsamples % llen		10175020	1		%			
ANR	10175520	Identifier	nsamples		10175020	0					
ANR	10175521	Identifier	llen		10175020	1					
ANR	10175522	ForStatement	"for ( i = 0 ; i < nsamples ; i += llen , up += llen )"		10175020	26					
ANR	10175523	ForInit	i = 0 ;	861:6:25250:25255	10175020	0	True				
ANR	10175524	AssignmentExpression	i = 0		10175020	0		=			
ANR	10175525	Identifier	i		10175020	0					
ANR	10175526	PrimaryExpression	0		10175020	1					
ANR	10175527	Condition	i < nsamples	861:13:25257:25268	10175020	1	True				
ANR	10175528	RelationalExpression	i < nsamples		10175020	0		<			
ANR	10175529	Identifier	i		10175020	0					
ANR	10175530	Identifier	nsamples		10175020	1					
ANR	10175531	Expression	"i += llen , up += llen"	861:27:25271:25291	10175020	2	True				
ANR	10175532	AssignmentExpression	i += llen		10175020	0		+=			
ANR	10175533	Identifier	i		10175020	0					
ANR	10175534	Identifier	llen		10175020	1					
ANR	10175535	AssignmentExpression	up += llen		10175020	1		+=			
ANR	10175536	Identifier	up		10175020	0					
ANR	10175537	Identifier	llen		10175020	1					
ANR	10175538	CompoundStatement		103:50:3254:3254	10175020	3					
ANR	10175539	SwitchStatement	switch ( sp -> user_datafmt )		10175020	0					
ANR	10175540	Condition	sp -> user_datafmt	862:10:25306:25321	10175020	0	True				
ANR	10175541	PtrMemberAccess	sp -> user_datafmt		10175020	0					
ANR	10175542	Identifier	sp		10175020	0					
ANR	10175543	Identifier	user_datafmt		10175020	1					
ANR	10175544	CompoundStatement		104:29:3285:3285	10175020	1					
ANR	10175545	Label	case PIXARLOGDATAFMT_FLOAT :	863:2:25329:25355	10175020	0	True				
ANR	10175546	Identifier	PIXARLOGDATAFMT_FLOAT		10175020	0					
ANR	10175547	ExpressionStatement	"horizontalAccumulateF ( up , llen , sp -> stride , ( float * ) op , sp -> ToLinearF )"	864:3:25360:25436	10175020	1	True				
ANR	10175548	CallExpression	"horizontalAccumulateF ( up , llen , sp -> stride , ( float * ) op , sp -> ToLinearF )"		10175020	0					
ANR	10175549	Callee	horizontalAccumulateF		10175020	0					
ANR	10175550	Identifier	horizontalAccumulateF		10175020	0					
ANR	10175551	ArgumentList	up		10175020	1					
ANR	10175552	Argument	up		10175020	0					
ANR	10175553	Identifier	up		10175020	0					
ANR	10175554	Argument	llen		10175020	1					
ANR	10175555	Identifier	llen		10175020	0					
ANR	10175556	Argument	sp -> stride		10175020	2					
ANR	10175557	PtrMemberAccess	sp -> stride		10175020	0					
ANR	10175558	Identifier	sp		10175020	0					
ANR	10175559	Identifier	stride		10175020	1					
ANR	10175560	Argument	( float * ) op		10175020	3					
ANR	10175561	CastExpression	( float * ) op		10175020	0					
ANR	10175562	CastTarget	float *		10175020	0					
ANR	10175563	Identifier	op		10175020	1					
ANR	10175564	Argument	sp -> ToLinearF		10175020	4					
ANR	10175565	PtrMemberAccess	sp -> ToLinearF		10175020	0					
ANR	10175566	Identifier	sp		10175020	0					
ANR	10175567	Identifier	ToLinearF		10175020	1					
ANR	10175568	ExpressionStatement	op += llen * sizeof ( float )	866:3:25441:25467	10175020	2	True				
ANR	10175569	AssignmentExpression	op += llen * sizeof ( float )		10175020	0		+=			
ANR	10175570	Identifier	op		10175020	0					
ANR	10175571	MultiplicativeExpression	llen * sizeof ( float )		10175020	1		*			
ANR	10175572	Identifier	llen		10175020	0					
ANR	10175573	SizeofExpression	sizeof ( float )		10175020	1					
ANR	10175574	Sizeof	sizeof		10175020	0					
ANR	10175575	SizeofOperand	float		10175020	1					
ANR	10175576	BreakStatement	break ;	867:3:25472:25477	10175020	3	True				
ANR	10175577	Label	case PIXARLOGDATAFMT_16BIT :	868:2:25481:25507	10175020	4	True				
ANR	10175578	Identifier	PIXARLOGDATAFMT_16BIT		10175020	0					
ANR	10175579	ExpressionStatement	"horizontalAccumulate16 ( up , llen , sp -> stride , ( uint16 * ) op , sp -> ToLinear16 )"	869:3:25512:25591	10175020	5	True				
ANR	10175580	CallExpression	"horizontalAccumulate16 ( up , llen , sp -> stride , ( uint16 * ) op , sp -> ToLinear16 )"		10175020	0					
ANR	10175581	Callee	horizontalAccumulate16		10175020	0					
ANR	10175582	Identifier	horizontalAccumulate16		10175020	0					
ANR	10175583	ArgumentList	up		10175020	1					
ANR	10175584	Argument	up		10175020	0					
ANR	10175585	Identifier	up		10175020	0					
ANR	10175586	Argument	llen		10175020	1					
ANR	10175587	Identifier	llen		10175020	0					
ANR	10175588	Argument	sp -> stride		10175020	2					
ANR	10175589	PtrMemberAccess	sp -> stride		10175020	0					
ANR	10175590	Identifier	sp		10175020	0					
ANR	10175591	Identifier	stride		10175020	1					
ANR	10175592	Argument	( uint16 * ) op		10175020	3					
ANR	10175593	CastExpression	( uint16 * ) op		10175020	0					
ANR	10175594	CastTarget	uint16 *		10175020	0					
ANR	10175595	Identifier	op		10175020	1					
ANR	10175596	Argument	sp -> ToLinear16		10175020	4					
ANR	10175597	PtrMemberAccess	sp -> ToLinear16		10175020	0					
ANR	10175598	Identifier	sp		10175020	0					
ANR	10175599	Identifier	ToLinear16		10175020	1					
ANR	10175600	ExpressionStatement	op += llen * sizeof ( uint16 )	871:3:25596:25623	10175020	6	True				
ANR	10175601	AssignmentExpression	op += llen * sizeof ( uint16 )		10175020	0		+=			
ANR	10175602	Identifier	op		10175020	0					
ANR	10175603	MultiplicativeExpression	llen * sizeof ( uint16 )		10175020	1		*			
ANR	10175604	Identifier	llen		10175020	0					
ANR	10175605	SizeofExpression	sizeof ( uint16 )		10175020	1					
ANR	10175606	Sizeof	sizeof		10175020	0					
ANR	10175607	SizeofOperand	uint16		10175020	1					
ANR	10175608	BreakStatement	break ;	872:3:25628:25633	10175020	7	True				
ANR	10175609	Label	case PIXARLOGDATAFMT_12BITPICIO :	873:2:25637:25668	10175020	8	True				
ANR	10175610	Identifier	PIXARLOGDATAFMT_12BITPICIO		10175020	0					
ANR	10175611	ExpressionStatement	"horizontalAccumulate12 ( up , llen , sp -> stride , ( int16 * ) op , sp -> ToLinearF )"	874:3:25673:25750	10175020	9	True				
ANR	10175612	CallExpression	"horizontalAccumulate12 ( up , llen , sp -> stride , ( int16 * ) op , sp -> ToLinearF )"		10175020	0					
ANR	10175613	Callee	horizontalAccumulate12		10175020	0					
ANR	10175614	Identifier	horizontalAccumulate12		10175020	0					
ANR	10175615	ArgumentList	up		10175020	1					
ANR	10175616	Argument	up		10175020	0					
ANR	10175617	Identifier	up		10175020	0					
ANR	10175618	Argument	llen		10175020	1					
ANR	10175619	Identifier	llen		10175020	0					
ANR	10175620	Argument	sp -> stride		10175020	2					
ANR	10175621	PtrMemberAccess	sp -> stride		10175020	0					
ANR	10175622	Identifier	sp		10175020	0					
ANR	10175623	Identifier	stride		10175020	1					
ANR	10175624	Argument	( int16 * ) op		10175020	3					
ANR	10175625	CastExpression	( int16 * ) op		10175020	0					
ANR	10175626	CastTarget	int16 *		10175020	0					
ANR	10175627	Identifier	op		10175020	1					
ANR	10175628	Argument	sp -> ToLinearF		10175020	4					
ANR	10175629	PtrMemberAccess	sp -> ToLinearF		10175020	0					
ANR	10175630	Identifier	sp		10175020	0					
ANR	10175631	Identifier	ToLinearF		10175020	1					
ANR	10175632	ExpressionStatement	op += llen * sizeof ( int16 )	876:3:25755:25781	10175020	10	True				
ANR	10175633	AssignmentExpression	op += llen * sizeof ( int16 )		10175020	0		+=			
ANR	10175634	Identifier	op		10175020	0					
ANR	10175635	MultiplicativeExpression	llen * sizeof ( int16 )		10175020	1		*			
ANR	10175636	Identifier	llen		10175020	0					
ANR	10175637	SizeofExpression	sizeof ( int16 )		10175020	1					
ANR	10175638	Sizeof	sizeof		10175020	0					
ANR	10175639	SizeofOperand	int16		10175020	1					
ANR	10175640	BreakStatement	break ;	877:3:25786:25791	10175020	11	True				
ANR	10175641	Label	case PIXARLOGDATAFMT_11BITLOG :	878:2:25795:25824	10175020	12	True				
ANR	10175642	Identifier	PIXARLOGDATAFMT_11BITLOG		10175020	0					
ANR	10175643	ExpressionStatement	"horizontalAccumulate11 ( up , llen , sp -> stride , ( uint16 * ) op )"	879:3:25829:25892	10175020	13	True				
ANR	10175644	CallExpression	"horizontalAccumulate11 ( up , llen , sp -> stride , ( uint16 * ) op )"		10175020	0					
ANR	10175645	Callee	horizontalAccumulate11		10175020	0					
ANR	10175646	Identifier	horizontalAccumulate11		10175020	0					
ANR	10175647	ArgumentList	up		10175020	1					
ANR	10175648	Argument	up		10175020	0					
ANR	10175649	Identifier	up		10175020	0					
ANR	10175650	Argument	llen		10175020	1					
ANR	10175651	Identifier	llen		10175020	0					
ANR	10175652	Argument	sp -> stride		10175020	2					
ANR	10175653	PtrMemberAccess	sp -> stride		10175020	0					
ANR	10175654	Identifier	sp		10175020	0					
ANR	10175655	Identifier	stride		10175020	1					
ANR	10175656	Argument	( uint16 * ) op		10175020	3					
ANR	10175657	CastExpression	( uint16 * ) op		10175020	0					
ANR	10175658	CastTarget	uint16 *		10175020	0					
ANR	10175659	Identifier	op		10175020	1					
ANR	10175660	ExpressionStatement	op += llen * sizeof ( uint16 )	881:3:25897:25924	10175020	14	True				
ANR	10175661	AssignmentExpression	op += llen * sizeof ( uint16 )		10175020	0		+=			
ANR	10175662	Identifier	op		10175020	0					
ANR	10175663	MultiplicativeExpression	llen * sizeof ( uint16 )		10175020	1		*			
ANR	10175664	Identifier	llen		10175020	0					
ANR	10175665	SizeofExpression	sizeof ( uint16 )		10175020	1					
ANR	10175666	Sizeof	sizeof		10175020	0					
ANR	10175667	SizeofOperand	uint16		10175020	1					
ANR	10175668	BreakStatement	break ;	882:3:25929:25934	10175020	15	True				
ANR	10175669	Label	case PIXARLOGDATAFMT_8BIT :	883:2:25938:25963	10175020	16	True				
ANR	10175670	Identifier	PIXARLOGDATAFMT_8BIT		10175020	0					
ANR	10175671	ExpressionStatement	"horizontalAccumulate8 ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"	884:3:25968:26052	10175020	17	True				
ANR	10175672	CallExpression	"horizontalAccumulate8 ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"		10175020	0					
ANR	10175673	Callee	horizontalAccumulate8		10175020	0					
ANR	10175674	Identifier	horizontalAccumulate8		10175020	0					
ANR	10175675	ArgumentList	up		10175020	1					
ANR	10175676	Argument	up		10175020	0					
ANR	10175677	Identifier	up		10175020	0					
ANR	10175678	Argument	llen		10175020	1					
ANR	10175679	Identifier	llen		10175020	0					
ANR	10175680	Argument	sp -> stride		10175020	2					
ANR	10175681	PtrMemberAccess	sp -> stride		10175020	0					
ANR	10175682	Identifier	sp		10175020	0					
ANR	10175683	Identifier	stride		10175020	1					
ANR	10175684	Argument	( unsigned char * ) op		10175020	3					
ANR	10175685	CastExpression	( unsigned char * ) op		10175020	0					
ANR	10175686	CastTarget	unsigned char *		10175020	0					
ANR	10175687	Identifier	op		10175020	1					
ANR	10175688	Argument	sp -> ToLinear8		10175020	4					
ANR	10175689	PtrMemberAccess	sp -> ToLinear8		10175020	0					
ANR	10175690	Identifier	sp		10175020	0					
ANR	10175691	Identifier	ToLinear8		10175020	1					
ANR	10175692	ExpressionStatement	op += llen * sizeof ( unsigned char )	886:3:26057:26091	10175020	18	True				
ANR	10175693	AssignmentExpression	op += llen * sizeof ( unsigned char )		10175020	0		+=			
ANR	10175694	Identifier	op		10175020	0					
ANR	10175695	MultiplicativeExpression	llen * sizeof ( unsigned char )		10175020	1		*			
ANR	10175696	Identifier	llen		10175020	0					
ANR	10175697	SizeofExpression	sizeof ( unsigned char )		10175020	1					
ANR	10175698	Sizeof	sizeof		10175020	0					
ANR	10175699	SizeofOperand	unsigned char		10175020	1					
ANR	10175700	BreakStatement	break ;	887:3:26096:26101	10175020	19	True				
ANR	10175701	Label	case PIXARLOGDATAFMT_8BITABGR :	888:2:26105:26134	10175020	20	True				
ANR	10175702	Identifier	PIXARLOGDATAFMT_8BITABGR		10175020	0					
ANR	10175703	ExpressionStatement	"horizontalAccumulate8abgr ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"	889:3:26139:26227	10175020	21	True				
ANR	10175704	CallExpression	"horizontalAccumulate8abgr ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"		10175020	0					
ANR	10175705	Callee	horizontalAccumulate8abgr		10175020	0					
ANR	10175706	Identifier	horizontalAccumulate8abgr		10175020	0					
ANR	10175707	ArgumentList	up		10175020	1					
ANR	10175708	Argument	up		10175020	0					
ANR	10175709	Identifier	up		10175020	0					
ANR	10175710	Argument	llen		10175020	1					
ANR	10175711	Identifier	llen		10175020	0					
ANR	10175712	Argument	sp -> stride		10175020	2					
ANR	10175713	PtrMemberAccess	sp -> stride		10175020	0					
ANR	10175714	Identifier	sp		10175020	0					
ANR	10175715	Identifier	stride		10175020	1					
ANR	10175716	Argument	( unsigned char * ) op		10175020	3					
ANR	10175717	CastExpression	( unsigned char * ) op		10175020	0					
ANR	10175718	CastTarget	unsigned char *		10175020	0					
ANR	10175719	Identifier	op		10175020	1					
ANR	10175720	Argument	sp -> ToLinear8		10175020	4					
ANR	10175721	PtrMemberAccess	sp -> ToLinear8		10175020	0					
ANR	10175722	Identifier	sp		10175020	0					
ANR	10175723	Identifier	ToLinear8		10175020	1					
ANR	10175724	ExpressionStatement	op += llen * sizeof ( unsigned char )	891:3:26232:26266	10175020	22	True				
ANR	10175725	AssignmentExpression	op += llen * sizeof ( unsigned char )		10175020	0		+=			
ANR	10175726	Identifier	op		10175020	0					
ANR	10175727	MultiplicativeExpression	llen * sizeof ( unsigned char )		10175020	1		*			
ANR	10175728	Identifier	llen		10175020	0					
ANR	10175729	SizeofExpression	sizeof ( unsigned char )		10175020	1					
ANR	10175730	Sizeof	sizeof		10175020	0					
ANR	10175731	SizeofOperand	unsigned char		10175020	1					
ANR	10175732	BreakStatement	break ;	892:3:26271:26276	10175020	23	True				
ANR	10175733	Label	default :	893:2:26280:26287	10175020	24	True				
ANR	10175734	Identifier	default		10175020	0					
ANR	10175735	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unsupported bits/sample: %d"" , td -> td_bitspersample )"	894:3:26292:26398	10175020	25	True				
ANR	10175736	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unsupported bits/sample: %d"" , td -> td_bitspersample )"		10175020	0					
ANR	10175737	Callee	TIFFErrorExt		10175020	0					
ANR	10175738	Identifier	TIFFErrorExt		10175020	0					
ANR	10175739	ArgumentList	tif -> tif_clientdata		10175020	1					
ANR	10175740	Argument	tif -> tif_clientdata		10175020	0					
ANR	10175741	PtrMemberAccess	tif -> tif_clientdata		10175020	0					
ANR	10175742	Identifier	tif		10175020	0					
ANR	10175743	Identifier	tif_clientdata		10175020	1					
ANR	10175744	Argument	module		10175020	1					
ANR	10175745	Identifier	module		10175020	0					
ANR	10175746	Argument	"""Unsupported bits/sample: %d"""		10175020	2					
ANR	10175747	PrimaryExpression	"""Unsupported bits/sample: %d"""		10175020	0					
ANR	10175748	Argument	td -> td_bitspersample		10175020	3					
ANR	10175749	PtrMemberAccess	td -> td_bitspersample		10175020	0					
ANR	10175750	Identifier	td		10175020	0					
ANR	10175751	Identifier	td_bitspersample		10175020	1					
ANR	10175752	ReturnStatement	return ( 0 ) ;	897:3:26403:26413	10175020	26	True				
ANR	10175753	PrimaryExpression	0		10175020	0					
ANR	10175754	ReturnStatement	return ( 1 ) ;	901:1:26424:26434	10175020	27	True				
ANR	10175755	PrimaryExpression	1		10175020	0					
ANR	10175756	ReturnType	static int		10175020	1					
ANR	10175757	Identifier	PixarLogDecode		10175020	2					
ANR	10175758	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		10175020	3					
ANR	10175759	Parameter	TIFF * tif	758:15:21993:22001	10175020	0	True				
ANR	10175760	ParameterType	TIFF *		10175020	0					
ANR	10175761	Identifier	tif		10175020	1					
ANR	10175762	Parameter	uint8 * op	758:26:22004:22012	10175020	1	True				
ANR	10175763	ParameterType	uint8 *		10175020	0					
ANR	10175764	Identifier	op		10175020	1					
ANR	10175765	Parameter	tmsize_t occ	758:37:22015:22026	10175020	2	True				
ANR	10175766	ParameterType	tmsize_t		10175020	0					
ANR	10175767	Identifier	occ		10175020	1					
ANR	10175768	Parameter	uint16 s	758:51:22029:22036	10175020	3	True				
ANR	10175769	ParameterType	uint16		10175020	0					
ANR	10175770	Identifier	s		10175020	1					
ANR	10175771	CFGEntryNode	ENTRY		10175020		True				
ANR	10175772	CFGExitNode	EXIT		10175020		True				
ANR	10175773	Symbol	* sp		10175020						
ANR	10175774	Symbol	& tif -> tif_dir		10175020						
ANR	10175775	Symbol	Z_DATA_ERROR		10175020						
ANR	10175776	Symbol	& sp -> stream		10175020						
ANR	10175777	Symbol	inflateSync		10175020						
ANR	10175778	Symbol	sp -> tbuf_size		10175020						
ANR	10175779	Symbol	sp -> user_datafmt		10175020						
ANR	10175780	Symbol	sp -> stream . next_out		10175020						
ANR	10175781	Symbol	Z_OK		10175020						
ANR	10175782	Symbol	occ		10175020						
ANR	10175783	Symbol	tif		10175020						
ANR	10175784	Symbol	tif -> tif_rawcc		10175020						
ANR	10175785	Symbol	sp -> stride		10175020						
ANR	10175786	Symbol	DecoderState		10175020						
ANR	10175787	Symbol	sp -> stream . msg		10175020						
ANR	10175788	Symbol	Z_STREAM_END		10175020						
ANR	10175789	Symbol	sp -> tbuf		10175020						
ANR	10175790	Symbol	llen		10175020						
ANR	10175791	Symbol	up		10175020						
ANR	10175792	Symbol	state		10175020						
ANR	10175793	Symbol	sp		10175020						
ANR	10175794	Symbol	Z_PARTIAL_FLUSH		10175020						
ANR	10175795	Symbol	op		10175020						
ANR	10175796	Symbol	NULL		10175020						
ANR	10175797	Symbol	td -> td_imagewidth		10175020						
ANR	10175798	Symbol	module		10175020						
ANR	10175799	Symbol	sp -> stream . next_in		10175020						
ANR	10175800	Symbol	i		10175020						
ANR	10175801	Symbol	tif -> tif_row		10175020						
ANR	10175802	Symbol	tif -> tif_rawcp		10175020						
ANR	10175803	Symbol	sp -> stream . avail_out		10175020						
ANR	10175804	Symbol	sp -> ToLinear8		10175020						
ANR	10175805	Symbol	tif -> tif_clientdata		10175020						
ANR	10175806	Symbol	td		10175020						
ANR	10175807	Symbol	sp -> ToLinear16		10175020						
ANR	10175808	Symbol	s		10175020						
ANR	10175809	Symbol	nsamples		10175020						
ANR	10175810	Symbol	sp -> stream . avail_in		10175020						
ANR	10175811	Symbol	inflate		10175020						
ANR	10175812	Symbol	* td		10175020						
ANR	10175813	Symbol	sp -> stream		10175020						
ANR	10175814	Symbol	sp -> ToLinearF		10175020						
ANR	10175815	Symbol	* tif		10175020						
ANR	10175816	Symbol	TIFF_SWAB		10175020						
ANR	10175817	Symbol	td -> td_bitspersample		10175020						
ANR	10175818	Symbol	tif -> tif_flags		10175020						
ANR	10175819	Function	PixarLogSetupEncode	904:0:26439:27654							
ANR	10175820	FunctionDef	PixarLogSetupEncode (TIFF * tif)		10175819	0					
ANR	10175821	CompoundStatement		906:0:26481:27654	10175819	0					
ANR	10175822	Statement	static	907:1:26484:26489	10175819	0	True				
ANR	10175823	IdentifierDeclStatement	"const char module [ ] = ""PixarLogSetupEncode"" ;"	907:8:26491:26534	10175819	1	True				
ANR	10175824	IdentifierDecl	"module [ ] = ""PixarLogSetupEncode"""		10175819	0					
ANR	10175825	IdentifierDeclType	const char [ ]		10175819	0					
ANR	10175826	Identifier	module		10175819	1					
ANR	10175827	AssignmentExpression	"module [ ] = ""PixarLogSetupEncode"""		10175819	2		=			
ANR	10175828	Identifier	module		10175819	0					
ANR	10175829	PrimaryExpression	"""PixarLogSetupEncode"""		10175819	1					
ANR	10175830	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	908:1:26537:26570	10175819	2	True				
ANR	10175831	IdentifierDecl	* td = & tif -> tif_dir		10175819	0					
ANR	10175832	IdentifierDeclType	TIFFDirectory *		10175819	0					
ANR	10175833	Identifier	td		10175819	1					
ANR	10175834	AssignmentExpression	* td = & tif -> tif_dir		10175819	2		=			
ANR	10175835	Identifier	td		10175819	0					
ANR	10175836	UnaryOperationExpression	& tif -> tif_dir		10175819	1					
ANR	10175837	UnaryOperator	&		10175819	0					
ANR	10175838	PtrMemberAccess	tif -> tif_dir		10175819	1					
ANR	10175839	Identifier	tif		10175819	0					
ANR	10175840	Identifier	tif_dir		10175819	1					
ANR	10175841	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	909:1:26573:26610	10175819	3	True				
ANR	10175842	IdentifierDecl	* sp = EncoderState ( tif )		10175819	0					
ANR	10175843	IdentifierDeclType	PixarLogState *		10175819	0					
ANR	10175844	Identifier	sp		10175819	1					
ANR	10175845	AssignmentExpression	* sp = EncoderState ( tif )		10175819	2		=			
ANR	10175846	Identifier	sp		10175819	0					
ANR	10175847	CallExpression	EncoderState ( tif )		10175819	1					
ANR	10175848	Callee	EncoderState		10175819	0					
ANR	10175849	Identifier	EncoderState		10175819	0					
ANR	10175850	ArgumentList	tif		10175819	1					
ANR	10175851	Argument	tif		10175819	0					
ANR	10175852	Identifier	tif		10175819	0					
ANR	10175853	IdentifierDeclStatement	tmsize_t tbuf_size ;	910:1:26613:26631	10175819	4	True				
ANR	10175854	IdentifierDecl	tbuf_size		10175819	0					
ANR	10175855	IdentifierDeclType	tmsize_t		10175819	0					
ANR	10175856	Identifier	tbuf_size		10175819	1					
ANR	10175857	ExpressionStatement	assert ( sp != NULL )	912:1:26635:26653	10175819	5	True				
ANR	10175858	CallExpression	assert ( sp != NULL )		10175819	0					
ANR	10175859	Callee	assert		10175819	0					
ANR	10175860	Identifier	assert		10175819	0					
ANR	10175861	ArgumentList	sp != NULL		10175819	1					
ANR	10175862	Argument	sp != NULL		10175819	0					
ANR	10175863	EqualityExpression	sp != NULL		10175819	0		!=			
ANR	10175864	Identifier	sp		10175819	0					
ANR	10175865	Identifier	NULL		10175819	1					
ANR	10175866	ExpressionStatement	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )	916:1:26719:26810	10175819	6	True				
ANR	10175867	AssignmentExpression	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )		10175819	0		=			
ANR	10175868	PtrMemberAccess	sp -> stride		10175819	0					
ANR	10175869	Identifier	sp		10175819	0					
ANR	10175870	Identifier	stride		10175819	1					
ANR	10175871	ConditionalExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1		10175819	1					
ANR	10175872	Condition	td -> td_planarconfig == PLANARCONFIG_CONTIG		10175819	0					
ANR	10175873	EqualityExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG		10175819	0		==			
ANR	10175874	PtrMemberAccess	td -> td_planarconfig		10175819	0					
ANR	10175875	Identifier	td		10175819	0					
ANR	10175876	Identifier	td_planarconfig		10175819	1					
ANR	10175877	Identifier	PLANARCONFIG_CONTIG		10175819	1					
ANR	10175878	PtrMemberAccess	td -> td_samplesperpixel		10175819	1					
ANR	10175879	Identifier	td		10175819	0					
ANR	10175880	Identifier	td_samplesperpixel		10175819	1					
ANR	10175881	PrimaryExpression	1		10175819	2					
ANR	10175882	ExpressionStatement	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"	918:1:26813:26940	10175819	7	True				
ANR	10175883	AssignmentExpression	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"		10175819	0		=			
ANR	10175884	Identifier	tbuf_size		10175819	0					
ANR	10175885	CallExpression	"multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"		10175819	1					
ANR	10175886	Callee	multiply_ms		10175819	0					
ANR	10175887	Identifier	multiply_ms		10175819	0					
ANR	10175888	ArgumentList	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		10175819	1					
ANR	10175889	Argument	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		10175819	0					
ANR	10175890	CallExpression	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		10175819	0					
ANR	10175891	Callee	multiply_ms		10175819	0					
ANR	10175892	Identifier	multiply_ms		10175819	0					
ANR	10175893	ArgumentList	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		10175819	1					
ANR	10175894	Argument	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		10175819	0					
ANR	10175895	CallExpression	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		10175819	0					
ANR	10175896	Callee	multiply_ms		10175819	0					
ANR	10175897	Identifier	multiply_ms		10175819	0					
ANR	10175898	ArgumentList	sp -> stride		10175819	1					
ANR	10175899	Argument	sp -> stride		10175819	0					
ANR	10175900	PtrMemberAccess	sp -> stride		10175819	0					
ANR	10175901	Identifier	sp		10175819	0					
ANR	10175902	Identifier	stride		10175819	1					
ANR	10175903	Argument	td -> td_imagewidth		10175819	1					
ANR	10175904	PtrMemberAccess	td -> td_imagewidth		10175819	0					
ANR	10175905	Identifier	td		10175819	0					
ANR	10175906	Identifier	td_imagewidth		10175819	1					
ANR	10175907	Argument	td -> td_rowsperstrip		10175819	1					
ANR	10175908	PtrMemberAccess	td -> td_rowsperstrip		10175819	0					
ANR	10175909	Identifier	td		10175819	0					
ANR	10175910	Identifier	td_rowsperstrip		10175819	1					
ANR	10175911	Argument	sizeof ( uint16 )		10175819	1					
ANR	10175912	SizeofExpression	sizeof ( uint16 )		10175819	0					
ANR	10175913	Sizeof	sizeof		10175819	0					
ANR	10175914	SizeofOperand	uint16		10175819	1					
ANR	10175915	IfStatement	if ( tbuf_size == 0 )		10175819	8					
ANR	10175916	Condition	tbuf_size == 0	920:5:26947:26960	10175819	0	True				
ANR	10175917	EqualityExpression	tbuf_size == 0		10175819	0		==			
ANR	10175918	Identifier	tbuf_size		10175819	0					
ANR	10175919	PrimaryExpression	0		10175819	1					
ANR	10175920	ReturnStatement	return ( 0 ) ;	921:2:26965:26975	10175819	1	True				
ANR	10175921	PrimaryExpression	0		10175819	0					
ANR	10175922	ExpressionStatement	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )	922:1:27057:27101	10175819	9	True				
ANR	10175923	AssignmentExpression	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )		10175819	0		=			
ANR	10175924	PtrMemberAccess	sp -> tbuf		10175819	0					
ANR	10175925	Identifier	sp		10175819	0					
ANR	10175926	Identifier	tbuf		10175819	1					
ANR	10175927	CastExpression	( uint16 * ) _TIFFmalloc ( tbuf_size )		10175819	1					
ANR	10175928	CastTarget	uint16 *		10175819	0					
ANR	10175929	CallExpression	_TIFFmalloc ( tbuf_size )		10175819	1					
ANR	10175930	Callee	_TIFFmalloc		10175819	0					
ANR	10175931	Identifier	_TIFFmalloc		10175819	0					
ANR	10175932	ArgumentList	tbuf_size		10175819	1					
ANR	10175933	Argument	tbuf_size		10175819	0					
ANR	10175934	Identifier	tbuf_size		10175819	0					
ANR	10175935	IfStatement	if ( sp -> tbuf == NULL )		10175819	10					
ANR	10175936	Condition	sp -> tbuf == NULL	923:5:27108:27123	10175819	0	True				
ANR	10175937	EqualityExpression	sp -> tbuf == NULL		10175819	0		==			
ANR	10175938	PtrMemberAccess	sp -> tbuf		10175819	0					
ANR	10175939	Identifier	sp		10175819	0					
ANR	10175940	Identifier	tbuf		10175819	1					
ANR	10175941	Identifier	NULL		10175819	1					
ANR	10175942	ReturnStatement	return ( 0 ) ;	924:2:27128:27138	10175819	1	True				
ANR	10175943	PrimaryExpression	0		10175819	0					
ANR	10175944	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		10175819	11					
ANR	10175945	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	925:5:27145:27187	10175819	0	True				
ANR	10175946	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		10175819	0		==			
ANR	10175947	PtrMemberAccess	sp -> user_datafmt		10175819	0					
ANR	10175948	Identifier	sp		10175819	0					
ANR	10175949	Identifier	user_datafmt		10175819	1					
ANR	10175950	Identifier	PIXARLOGDATAFMT_UNKNOWN		10175819	1					
ANR	10175951	ExpressionStatement	sp -> user_datafmt = PixarLogGuessDataFmt ( td )	926:2:27192:27235	10175819	1	True				
ANR	10175952	AssignmentExpression	sp -> user_datafmt = PixarLogGuessDataFmt ( td )		10175819	0		=			
ANR	10175953	PtrMemberAccess	sp -> user_datafmt		10175819	0					
ANR	10175954	Identifier	sp		10175819	0					
ANR	10175955	Identifier	user_datafmt		10175819	1					
ANR	10175956	CallExpression	PixarLogGuessDataFmt ( td )		10175819	1					
ANR	10175957	Callee	PixarLogGuessDataFmt		10175819	0					
ANR	10175958	Identifier	PixarLogGuessDataFmt		10175819	0					
ANR	10175959	ArgumentList	td		10175819	1					
ANR	10175960	Argument	td		10175819	0					
ANR	10175961	Identifier	td		10175819	0					
ANR	10175962	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		10175819	12					
ANR	10175963	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	927:5:27242:27284	10175819	0	True				
ANR	10175964	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		10175819	0		==			
ANR	10175965	PtrMemberAccess	sp -> user_datafmt		10175819	0					
ANR	10175966	Identifier	sp		10175819	0					
ANR	10175967	Identifier	user_datafmt		10175819	1					
ANR	10175968	Identifier	PIXARLOGDATAFMT_UNKNOWN		10175819	1					
ANR	10175969	CompoundStatement		22:50:805:805	10175819	1					
ANR	10175970	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle %d bit linear encodings"" , td -> td_bitspersample )"	928:2:27291:27415	10175819	0	True				
ANR	10175971	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle %d bit linear encodings"" , td -> td_bitspersample )"		10175819	0					
ANR	10175972	Callee	TIFFErrorExt		10175819	0					
ANR	10175973	Identifier	TIFFErrorExt		10175819	0					
ANR	10175974	ArgumentList	tif -> tif_clientdata		10175819	1					
ANR	10175975	Argument	tif -> tif_clientdata		10175819	0					
ANR	10175976	PtrMemberAccess	tif -> tif_clientdata		10175819	0					
ANR	10175977	Identifier	tif		10175819	0					
ANR	10175978	Identifier	tif_clientdata		10175819	1					
ANR	10175979	Argument	module		10175819	1					
ANR	10175980	Identifier	module		10175819	0					
ANR	10175981	Argument	"""PixarLog compression can't handle %d bit linear encodings"""		10175819	2					
ANR	10175982	PrimaryExpression	"""PixarLog compression can't handle %d bit linear encodings"""		10175819	0					
ANR	10175983	Argument	td -> td_bitspersample		10175819	3					
ANR	10175984	PtrMemberAccess	td -> td_bitspersample		10175819	0					
ANR	10175985	Identifier	td		10175819	0					
ANR	10175986	Identifier	td_bitspersample		10175819	1					
ANR	10175987	ReturnStatement	return ( 0 ) ;	929:2:27419:27429	10175819	1	True				
ANR	10175988	PrimaryExpression	0		10175819	0					
ANR	10175989	IfStatement	"if ( deflateInit ( & sp -> stream , sp -> quality ) != Z_OK )"		10175819	13					
ANR	10175990	Condition	"deflateInit ( & sp -> stream , sp -> quality ) != Z_OK"	932:5:27440:27484	10175819	0	True				
ANR	10175991	EqualityExpression	"deflateInit ( & sp -> stream , sp -> quality ) != Z_OK"		10175819	0		!=			
ANR	10175992	CallExpression	"deflateInit ( & sp -> stream , sp -> quality )"		10175819	0					
ANR	10175993	Callee	deflateInit		10175819	0					
ANR	10175994	Identifier	deflateInit		10175819	0					
ANR	10175995	ArgumentList	& sp -> stream		10175819	1					
ANR	10175996	Argument	& sp -> stream		10175819	0					
ANR	10175997	UnaryOperationExpression	& sp -> stream		10175819	0					
ANR	10175998	UnaryOperator	&		10175819	0					
ANR	10175999	PtrMemberAccess	sp -> stream		10175819	1					
ANR	10176000	Identifier	sp		10175819	0					
ANR	10176001	Identifier	stream		10175819	1					
ANR	10176002	Argument	sp -> quality		10175819	1					
ANR	10176003	PtrMemberAccess	sp -> quality		10175819	0					
ANR	10176004	Identifier	sp		10175819	0					
ANR	10176005	Identifier	quality		10175819	1					
ANR	10176006	Identifier	Z_OK		10175819	1					
ANR	10176007	CompoundStatement		27:52:1005:1005	10175819	1					
ANR	10176008	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"	933:2:27491:27582	10175819	0	True				
ANR	10176009	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"		10175819	0					
ANR	10176010	Callee	TIFFErrorExt		10175819	0					
ANR	10176011	Identifier	TIFFErrorExt		10175819	0					
ANR	10176012	ArgumentList	tif -> tif_clientdata		10175819	1					
ANR	10176013	Argument	tif -> tif_clientdata		10175819	0					
ANR	10176014	PtrMemberAccess	tif -> tif_clientdata		10175819	0					
ANR	10176015	Identifier	tif		10175819	0					
ANR	10176016	Identifier	tif_clientdata		10175819	1					
ANR	10176017	Argument	module		10175819	1					
ANR	10176018	Identifier	module		10175819	0					
ANR	10176019	Argument	"""%s"""		10175819	2					
ANR	10176020	PrimaryExpression	"""%s"""		10175819	0					
ANR	10176021	Argument	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10175819	3					
ANR	10176022	ConditionalExpression	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10175819	0					
ANR	10176023	Condition	sp -> stream . msg		10175819	0					
ANR	10176024	MemberAccess	sp -> stream . msg		10175819	0					
ANR	10176025	PtrMemberAccess	sp -> stream		10175819	0					
ANR	10176026	Identifier	sp		10175819	0					
ANR	10176027	Identifier	stream		10175819	1					
ANR	10176028	Identifier	msg		10175819	1					
ANR	10176029	MemberAccess	sp -> stream . msg		10175819	1					
ANR	10176030	PtrMemberAccess	sp -> stream		10175819	0					
ANR	10176031	Identifier	sp		10175819	0					
ANR	10176032	Identifier	stream		10175819	1					
ANR	10176033	Identifier	msg		10175819	1					
ANR	10176034	PrimaryExpression	"""(null)"""		10175819	2					
ANR	10176035	ReturnStatement	return ( 0 ) ;	934:2:27586:27596	10175819	1	True				
ANR	10176036	PrimaryExpression	0		10175819	0					
ANR	10176037	ElseStatement	else		10175819	0					
ANR	10176038	CompoundStatement		30:8:1124:1124	10175819	0					
ANR	10176039	ExpressionStatement	sp -> state |= PLSTATE_INIT	936:2:27610:27635	10175819	0	True				
ANR	10176040	AssignmentExpression	sp -> state |= PLSTATE_INIT		10175819	0		|=			
ANR	10176041	PtrMemberAccess	sp -> state		10175819	0					
ANR	10176042	Identifier	sp		10175819	0					
ANR	10176043	Identifier	state		10175819	1					
ANR	10176044	Identifier	PLSTATE_INIT		10175819	1					
ANR	10176045	ReturnStatement	return ( 1 ) ;	937:2:27639:27649	10175819	1	True				
ANR	10176046	PrimaryExpression	1		10175819	0					
ANR	10176047	ReturnType	static int		10175819	1					
ANR	10176048	Identifier	PixarLogSetupEncode		10175819	2					
ANR	10176049	ParameterList	TIFF * tif		10175819	3					
ANR	10176050	Parameter	TIFF * tif	905:20:26470:26478	10175819	0	True				
ANR	10176051	ParameterType	TIFF *		10175819	0					
ANR	10176052	Identifier	tif		10175819	1					
ANR	10176053	CFGEntryNode	ENTRY		10175819		True				
ANR	10176054	CFGExitNode	EXIT		10175819		True				
ANR	10176055	Symbol	td -> td_planarconfig		10175819						
ANR	10176056	Symbol	* sp		10175819						
ANR	10176057	Symbol	& tif -> tif_dir		10175819						
ANR	10176058	Symbol	& sp -> stream		10175819						
ANR	10176059	Symbol	sp -> user_datafmt		10175819						
ANR	10176060	Symbol	Z_OK		10175819						
ANR	10176061	Symbol	PIXARLOGDATAFMT_UNKNOWN		10175819						
ANR	10176062	Symbol	tif		10175819						
ANR	10176063	Symbol	sp -> stride		10175819						
ANR	10176064	Symbol	PixarLogGuessDataFmt		10175819						
ANR	10176065	Symbol	sp -> stream . msg		10175819						
ANR	10176066	Symbol	sp -> tbuf		10175819						
ANR	10176067	Symbol	PLSTATE_INIT		10175819						
ANR	10176068	Symbol	sp		10175819						
ANR	10176069	Symbol	EncoderState		10175819						
ANR	10176070	Symbol	NULL		10175819						
ANR	10176071	Symbol	td -> td_imagewidth		10175819						
ANR	10176072	Symbol	module		10175819						
ANR	10176073	Symbol	PLANARCONFIG_CONTIG		10175819						
ANR	10176074	Symbol	deflateInit		10175819						
ANR	10176075	Symbol	tbuf_size		10175819						
ANR	10176076	Symbol	sp -> state		10175819						
ANR	10176077	Symbol	multiply_ms		10175819						
ANR	10176078	Symbol	tif -> tif_clientdata		10175819						
ANR	10176079	Symbol	sp -> quality		10175819						
ANR	10176080	Symbol	td		10175819						
ANR	10176081	Symbol	td -> td_samplesperpixel		10175819						
ANR	10176082	Symbol	* td		10175819						
ANR	10176083	Symbol	_TIFFmalloc		10175819						
ANR	10176084	Symbol	sp -> stream		10175819						
ANR	10176085	Symbol	* tif		10175819						
ANR	10176086	Symbol	td -> td_rowsperstrip		10175819						
ANR	10176087	Symbol	td -> td_bitspersample		10175819						
ANR	10176088	Function	PixarLogPreEncode	944:0:27713:28463							
ANR	10176089	FunctionDef	"PixarLogPreEncode (TIFF * tif , uint16 s)"		10176088	0					
ANR	10176090	CompoundStatement		946:0:27763:28463	10176088	0					
ANR	10176091	Statement	static	947:1:27766:27771	10176088	0	True				
ANR	10176092	IdentifierDeclStatement	"const char module [ ] = ""PixarLogPreEncode"" ;"	947:8:27773:27814	10176088	1	True				
ANR	10176093	IdentifierDecl	"module [ ] = ""PixarLogPreEncode"""		10176088	0					
ANR	10176094	IdentifierDeclType	const char [ ]		10176088	0					
ANR	10176095	Identifier	module		10176088	1					
ANR	10176096	AssignmentExpression	"module [ ] = ""PixarLogPreEncode"""		10176088	2		=			
ANR	10176097	Identifier	module		10176088	0					
ANR	10176098	PrimaryExpression	"""PixarLogPreEncode"""		10176088	1					
ANR	10176099	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	948:1:27817:27854	10176088	2	True				
ANR	10176100	IdentifierDecl	* sp = EncoderState ( tif )		10176088	0					
ANR	10176101	IdentifierDeclType	PixarLogState *		10176088	0					
ANR	10176102	Identifier	sp		10176088	1					
ANR	10176103	AssignmentExpression	* sp = EncoderState ( tif )		10176088	2		=			
ANR	10176104	Identifier	sp		10176088	0					
ANR	10176105	CallExpression	EncoderState ( tif )		10176088	1					
ANR	10176106	Callee	EncoderState		10176088	0					
ANR	10176107	Identifier	EncoderState		10176088	0					
ANR	10176108	ArgumentList	tif		10176088	1					
ANR	10176109	Argument	tif		10176088	0					
ANR	10176110	Identifier	tif		10176088	0					
ANR	10176111	ExpressionStatement	( void ) s	950:1:27858:27866	10176088	3	True				
ANR	10176112	CastExpression	( void ) s		10176088	0					
ANR	10176113	CastTarget	void		10176088	0					
ANR	10176114	Identifier	s		10176088	1					
ANR	10176115	ExpressionStatement	assert ( sp != NULL )	951:1:27869:27887	10176088	4	True				
ANR	10176116	CallExpression	assert ( sp != NULL )		10176088	0					
ANR	10176117	Callee	assert		10176088	0					
ANR	10176118	Identifier	assert		10176088	0					
ANR	10176119	ArgumentList	sp != NULL		10176088	1					
ANR	10176120	Argument	sp != NULL		10176088	0					
ANR	10176121	EqualityExpression	sp != NULL		10176088	0		!=			
ANR	10176122	Identifier	sp		10176088	0					
ANR	10176123	Identifier	NULL		10176088	1					
ANR	10176124	ExpressionStatement	sp -> stream . next_out = tif -> tif_rawdata	952:1:27890:27928	10176088	5	True				
ANR	10176125	AssignmentExpression	sp -> stream . next_out = tif -> tif_rawdata		10176088	0		=			
ANR	10176126	MemberAccess	sp -> stream . next_out		10176088	0					
ANR	10176127	PtrMemberAccess	sp -> stream		10176088	0					
ANR	10176128	Identifier	sp		10176088	0					
ANR	10176129	Identifier	stream		10176088	1					
ANR	10176130	Identifier	next_out		10176088	1					
ANR	10176131	PtrMemberAccess	tif -> tif_rawdata		10176088	1					
ANR	10176132	Identifier	tif		10176088	0					
ANR	10176133	Identifier	tif_rawdata		10176088	1					
ANR	10176134	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_out ) == 4 )	953:1:27931:27970	10176088	6	True				
ANR	10176135	CallExpression	assert ( sizeof ( sp -> stream . avail_out ) == 4 )		10176088	0					
ANR	10176136	Callee	assert		10176088	0					
ANR	10176137	Identifier	assert		10176088	0					
ANR	10176138	ArgumentList	sizeof ( sp -> stream . avail_out ) == 4		10176088	1					
ANR	10176139	Argument	sizeof ( sp -> stream . avail_out ) == 4		10176088	0					
ANR	10176140	EqualityExpression	sizeof ( sp -> stream . avail_out ) == 4		10176088	0		==			
ANR	10176141	SizeofExpression	sizeof ( sp -> stream . avail_out )		10176088	0					
ANR	10176142	Sizeof	sizeof		10176088	0					
ANR	10176143	MemberAccess	sp -> stream . avail_out		10176088	1					
ANR	10176144	PtrMemberAccess	sp -> stream		10176088	0					
ANR	10176145	Identifier	sp		10176088	0					
ANR	10176146	Identifier	stream		10176088	1					
ANR	10176147	Identifier	avail_out		10176088	1					
ANR	10176148	PrimaryExpression	4		10176088	1					
ANR	10176149	ExpressionStatement	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize	957:1:28198:28247	10176088	7	True				
ANR	10176150	AssignmentExpression	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize		10176088	0		=			
ANR	10176151	MemberAccess	sp -> stream . avail_out		10176088	0					
ANR	10176152	PtrMemberAccess	sp -> stream		10176088	0					
ANR	10176153	Identifier	sp		10176088	0					
ANR	10176154	Identifier	stream		10176088	1					
ANR	10176155	Identifier	avail_out		10176088	1					
ANR	10176156	CastExpression	( uInt ) tif -> tif_rawdatasize		10176088	1					
ANR	10176157	CastTarget	uInt		10176088	0					
ANR	10176158	PtrMemberAccess	tif -> tif_rawdatasize		10176088	1					
ANR	10176159	Identifier	tif		10176088	0					
ANR	10176160	Identifier	tif_rawdatasize		10176088	1					
ANR	10176161	IfStatement	if ( ( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize )		10176088	8					
ANR	10176162	Condition	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize	958:5:28254:28307	10176088	0	True				
ANR	10176163	EqualityExpression	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize		10176088	0		!=			
ANR	10176164	CastExpression	( tmsize_t ) sp -> stream . avail_out		10176088	0					
ANR	10176165	CastTarget	tmsize_t		10176088	0					
ANR	10176166	MemberAccess	sp -> stream . avail_out		10176088	1					
ANR	10176167	PtrMemberAccess	sp -> stream		10176088	0					
ANR	10176168	Identifier	sp		10176088	0					
ANR	10176169	Identifier	stream		10176088	1					
ANR	10176170	Identifier	avail_out		10176088	1					
ANR	10176171	PtrMemberAccess	tif -> tif_rawdatasize		10176088	1					
ANR	10176172	Identifier	tif		10176088	0					
ANR	10176173	Identifier	tif_rawdatasize		10176088	1					
ANR	10176174	CompoundStatement		14:1:547:547	10176088	1					
ANR	10176175	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	960:2:28315:28399	10176088	0	True				
ANR	10176176	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		10176088	0					
ANR	10176177	Callee	TIFFErrorExt		10176088	0					
ANR	10176178	Identifier	TIFFErrorExt		10176088	0					
ANR	10176179	ArgumentList	tif -> tif_clientdata		10176088	1					
ANR	10176180	Argument	tif -> tif_clientdata		10176088	0					
ANR	10176181	PtrMemberAccess	tif -> tif_clientdata		10176088	0					
ANR	10176182	Identifier	tif		10176088	0					
ANR	10176183	Identifier	tif_clientdata		10176088	1					
ANR	10176184	Argument	module		10176088	1					
ANR	10176185	Identifier	module		10176088	0					
ANR	10176186	Argument	"""ZLib cannot deal with buffers this size"""		10176088	2					
ANR	10176187	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		10176088	0					
ANR	10176188	ReturnStatement	return ( 0 ) ;	961:2:28403:28413	10176088	1	True				
ANR	10176189	PrimaryExpression	0		10176088	0					
ANR	10176190	ReturnStatement	return ( deflateReset ( & sp -> stream ) == Z_OK ) ;	963:1:28419:28461	10176088	9	True				
ANR	10176191	EqualityExpression	deflateReset ( & sp -> stream ) == Z_OK		10176088	0		==			
ANR	10176192	CallExpression	deflateReset ( & sp -> stream )		10176088	0					
ANR	10176193	Callee	deflateReset		10176088	0					
ANR	10176194	Identifier	deflateReset		10176088	0					
ANR	10176195	ArgumentList	& sp -> stream		10176088	1					
ANR	10176196	Argument	& sp -> stream		10176088	0					
ANR	10176197	UnaryOperationExpression	& sp -> stream		10176088	0					
ANR	10176198	UnaryOperator	&		10176088	0					
ANR	10176199	PtrMemberAccess	sp -> stream		10176088	1					
ANR	10176200	Identifier	sp		10176088	0					
ANR	10176201	Identifier	stream		10176088	1					
ANR	10176202	Identifier	Z_OK		10176088	1					
ANR	10176203	ReturnType	static int		10176088	1					
ANR	10176204	Identifier	PixarLogPreEncode		10176088	2					
ANR	10176205	ParameterList	"TIFF * tif , uint16 s"		10176088	3					
ANR	10176206	Parameter	TIFF * tif	945:18:27742:27750	10176088	0	True				
ANR	10176207	ParameterType	TIFF *		10176088	0					
ANR	10176208	Identifier	tif		10176088	1					
ANR	10176209	Parameter	uint16 s	945:29:27753:27760	10176088	1	True				
ANR	10176210	ParameterType	uint16		10176088	0					
ANR	10176211	Identifier	s		10176088	1					
ANR	10176212	CFGEntryNode	ENTRY		10176088		True				
ANR	10176213	CFGExitNode	EXIT		10176088		True				
ANR	10176214	Symbol	* sp		10176088						
ANR	10176215	Symbol	EncoderState		10176088						
ANR	10176216	Symbol	NULL		10176088						
ANR	10176217	Symbol	& sp -> stream		10176088						
ANR	10176218	Symbol	module		10176088						
ANR	10176219	Symbol	sp -> stream . next_out		10176088						
ANR	10176220	Symbol	Z_OK		10176088						
ANR	10176221	Symbol	sp -> stream . avail_out		10176088						
ANR	10176222	Symbol	tif -> tif_clientdata		10176088						
ANR	10176223	Symbol	tif		10176088						
ANR	10176224	Symbol	s		10176088						
ANR	10176225	Symbol	tif -> tif_rawdatasize		10176088						
ANR	10176226	Symbol	deflateReset		10176088						
ANR	10176227	Symbol	sp -> stream		10176088						
ANR	10176228	Symbol	* tif		10176088						
ANR	10176229	Symbol	sp		10176088						
ANR	10176230	Symbol	tif -> tif_rawdata		10176088						
ANR	10176231	Function	horizontalDifferenceF	966:0:28466:30177							
ANR	10176232	FunctionDef	"horizontalDifferenceF (PixarLogState * sp , float * ip , int n , int stride , uint16 * wp , uint16 * FromLT2)"		10176231	0					
ANR	10176233	CompoundStatement		968:0:28578:30177	10176231	0					
ANR	10176234	IdentifierDeclStatement	"int32 r1 , g1 , b1 , a1 , r2 , g2 , b2 , a2 , mask ;"	969:4:28584:28626	10176231	0	True				
ANR	10176235	IdentifierDecl	r1		10176231	0					
ANR	10176236	IdentifierDeclType	int32		10176231	0					
ANR	10176237	Identifier	r1		10176231	1					
ANR	10176238	IdentifierDecl	g1		10176231	1					
ANR	10176239	IdentifierDeclType	int32		10176231	0					
ANR	10176240	Identifier	g1		10176231	1					
ANR	10176241	IdentifierDecl	b1		10176231	2					
ANR	10176242	IdentifierDeclType	int32		10176231	0					
ANR	10176243	Identifier	b1		10176231	1					
ANR	10176244	IdentifierDecl	a1		10176231	3					
ANR	10176245	IdentifierDeclType	int32		10176231	0					
ANR	10176246	Identifier	a1		10176231	1					
ANR	10176247	IdentifierDecl	r2		10176231	4					
ANR	10176248	IdentifierDeclType	int32		10176231	0					
ANR	10176249	Identifier	r2		10176231	1					
ANR	10176250	IdentifierDecl	g2		10176231	5					
ANR	10176251	IdentifierDeclType	int32		10176231	0					
ANR	10176252	Identifier	g2		10176231	1					
ANR	10176253	IdentifierDecl	b2		10176231	6					
ANR	10176254	IdentifierDeclType	int32		10176231	0					
ANR	10176255	Identifier	b2		10176231	1					
ANR	10176256	IdentifierDecl	a2		10176231	7					
ANR	10176257	IdentifierDeclType	int32		10176231	0					
ANR	10176258	Identifier	a2		10176231	1					
ANR	10176259	IdentifierDecl	mask		10176231	8					
ANR	10176260	IdentifierDeclType	int32		10176231	0					
ANR	10176261	Identifier	mask		10176231	1					
ANR	10176262	IdentifierDeclStatement	float fltsize = sp -> Fltsize ;	970:4:28632:28659	10176231	1	True				
ANR	10176263	IdentifierDecl	fltsize = sp -> Fltsize		10176231	0					
ANR	10176264	IdentifierDeclType	float		10176231	0					
ANR	10176265	Identifier	fltsize		10176231	1					
ANR	10176266	AssignmentExpression	fltsize = sp -> Fltsize		10176231	2		=			
ANR	10176267	Identifier	fltsize		10176231	0					
ANR	10176268	PtrMemberAccess	sp -> Fltsize		10176231	1					
ANR	10176269	Identifier	sp		10176231	0					
ANR	10176270	Identifier	Fltsize		10176231	1					
ANR	10176271	Statement	define	972:1:28663:28668	10176231	2	True				
ANR	10176272	Statement	CLAMP	972:9:28671:28675	10176231	3	True				
ANR	10176273	Statement	(	972:14:28676:28676	10176231	4	True				
ANR	10176274	Statement	v	972:15:28677:28677	10176231	5	True				
ANR	10176275	Statement	)	972:16:28678:28678	10176231	6	True				
ANR	10176276	Statement	(	972:18:28680:28680	10176231	7	True				
ANR	10176277	Statement	(	972:20:28682:28682	10176231	8	True				
ANR	10176278	Statement	v	972:21:28683:28683	10176231	9	True				
ANR	10176279	Statement	<	972:22:28684:28684	10176231	10	True				
ANR	10176280	Statement	(	972:23:28685:28685	10176231	11	True				
ANR	10176281	Statement	float	972:24:28686:28690	10176231	12	True				
ANR	10176282	Statement	)	972:29:28691:28691	10176231	13	True				
ANR	10176283	Statement	0.	972:30:28692:28693	10176231	14	True				
ANR	10176284	Statement	)	972:32:28694:28694	10176231	15	True				
ANR	10176285	Statement	?	972:36:28698:28698	10176231	16	True				
ANR	10176286	Label	0 :	972:38:28700:28711	10176231	17	True				
ANR	10176287	Statement	(	973:6:28713:28713	10176231	18	True				
ANR	10176288	Statement	v	973:7:28714:28714	10176231	19	True				
ANR	10176289	Statement	<	973:8:28715:28715	10176231	20	True				
ANR	10176290	Statement	(	973:9:28716:28716	10176231	21	True				
ANR	10176291	Statement	float	973:10:28717:28721	10176231	22	True				
ANR	10176292	Statement	)	973:15:28722:28722	10176231	23	True				
ANR	10176293	Statement	2.	973:16:28723:28724	10176231	24	True				
ANR	10176294	Statement	)	973:18:28725:28725	10176231	25	True				
ANR	10176295	Statement	?	973:22:28729:28729	10176231	26	True				
ANR	10176296	Statement	FromLT2	973:24:28731:28737	10176231	27	True				
ANR	10176297	Statement	[	973:31:28738:28738	10176231	28	True				
ANR	10176298	Statement	(	973:32:28739:28739	10176231	29	True				
ANR	10176299	Statement	int	973:33:28740:28742	10176231	30	True				
ANR	10176300	Statement	)	973:36:28743:28743	10176231	31	True				
ANR	10176301	Statement	(	973:37:28744:28744	10176231	32	True				
ANR	10176302	Statement	v	973:38:28745:28745	10176231	33	True				
ANR	10176303	Statement	*	973:39:28746:28746	10176231	34	True				
ANR	10176304	Statement	fltsize	973:40:28747:28753	10176231	35	True				
ANR	10176305	Statement	)	973:47:28754:28754	10176231	36	True				
ANR	10176306	Statement	]	973:48:28755:28755	10176231	37	True				
ANR	10176307	Statement	:	974:4:28763:28763	10176231	38	True				
ANR	10176308	Statement	(	974:6:28765:28765	10176231	39	True				
ANR	10176309	Statement	v	974:7:28766:28766	10176231	40	True				
ANR	10176310	Statement	>	974:8:28767:28767	10176231	41	True				
ANR	10176311	Statement	(	974:9:28768:28768	10176231	42	True				
ANR	10176312	Statement	float	974:10:28769:28773	10176231	43	True				
ANR	10176313	Statement	)	974:15:28774:28774	10176231	44	True				
ANR	10176314	Statement	24.2	974:16:28775:28778	10176231	45	True				
ANR	10176315	Statement	)	974:20:28779:28779	10176231	46	True				
ANR	10176316	Statement	?	974:22:28781:28781	10176231	47	True				
ANR	10176317	Label	2047 :	974:24:28783:28796	10176231	48	True				
ANR	10176318	Statement	sp	975:6:28798:28799	10176231	49	True				
ANR	10176319	Statement	->	975:8:28800:28801	10176231	50	True				
ANR	10176320	Statement	LogK1	975:10:28802:28806	10176231	51	True				
ANR	10176321	Statement	*	975:15:28807:28807	10176231	52	True				
ANR	10176322	Statement	log	975:16:28808:28810	10176231	53	True				
ANR	10176323	Statement	(	975:19:28811:28811	10176231	54	True				
ANR	10176324	Statement	v	975:20:28812:28812	10176231	55	True				
ANR	10176325	Statement	*	975:21:28813:28813	10176231	56	True				
ANR	10176326	Statement	sp	975:22:28814:28815	10176231	57	True				
ANR	10176327	Statement	->	975:24:28816:28817	10176231	58	True				
ANR	10176328	Statement	LogK2	975:26:28818:28822	10176231	59	True				
ANR	10176329	Statement	)	975:31:28823:28823	10176231	60	True				
ANR	10176330	Statement	+	975:33:28825:28825	10176231	61	True				
ANR	10176331	Statement	0.5	975:35:28827:28829	10176231	62	True				
ANR	10176332	Statement	)	975:39:28831:28831	10176231	63	True				
ANR	10176333	ExpressionStatement	mask = CODE_MASK	977:4:28838:28854	10176231	64	True				
ANR	10176334	AssignmentExpression	mask = CODE_MASK		10176231	0		=			
ANR	10176335	Identifier	mask		10176231	0					
ANR	10176336	Identifier	CODE_MASK		10176231	1					
ANR	10176337	IfStatement	if ( n >= stride )		10176231	65					
ANR	10176338	Condition	n >= stride	978:8:28864:28874	10176231	0	True				
ANR	10176339	RelationalExpression	n >= stride		10176231	0		>=			
ANR	10176340	Identifier	n		10176231	0					
ANR	10176341	Identifier	stride		10176231	1					
ANR	10176342	CompoundStatement		11:21:298:298	10176231	1					
ANR	10176343	IfStatement	if ( stride == 3 )		10176231	0					
ANR	10176344	Condition	stride == 3	979:5:28884:28894	10176231	0	True				
ANR	10176345	EqualityExpression	stride == 3		10176231	0		==			
ANR	10176346	Identifier	stride		10176231	0					
ANR	10176347	PrimaryExpression	3		10176231	1					
ANR	10176348	CompoundStatement		12:18:318:318	10176231	1					
ANR	10176349	ExpressionStatement	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )	980:5:28904:28938	10176231	0	True				
ANR	10176350	AssignmentExpression	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		10176231	0		=			
ANR	10176351	Identifier	r2		10176231	0					
ANR	10176352	AssignmentExpression	wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		10176231	1		=			
ANR	10176353	ArrayIndexing	wp [ 0 ]		10176231	0					
ANR	10176354	Identifier	wp		10176231	0					
ANR	10176355	PrimaryExpression	0		10176231	1					
ANR	10176356	CastExpression	( uint16 ) CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176357	CastTarget	uint16		10176231	0					
ANR	10176358	CallExpression	CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176359	Callee	CLAMP		10176231	0					
ANR	10176360	Identifier	CLAMP		10176231	0					
ANR	10176361	ArgumentList	ip [ 0 ]		10176231	1					
ANR	10176362	Argument	ip [ 0 ]		10176231	0					
ANR	10176363	ArrayIndexing	ip [ 0 ]		10176231	0					
ANR	10176364	Identifier	ip		10176231	0					
ANR	10176365	PrimaryExpression	0		10176231	1					
ANR	10176366	ExpressionStatement	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )	981:5:28945:28979	10176231	1	True				
ANR	10176367	AssignmentExpression	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		10176231	0		=			
ANR	10176368	Identifier	g2		10176231	0					
ANR	10176369	AssignmentExpression	wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		10176231	1		=			
ANR	10176370	ArrayIndexing	wp [ 1 ]		10176231	0					
ANR	10176371	Identifier	wp		10176231	0					
ANR	10176372	PrimaryExpression	1		10176231	1					
ANR	10176373	CastExpression	( uint16 ) CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176374	CastTarget	uint16		10176231	0					
ANR	10176375	CallExpression	CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176376	Callee	CLAMP		10176231	0					
ANR	10176377	Identifier	CLAMP		10176231	0					
ANR	10176378	ArgumentList	ip [ 1 ]		10176231	1					
ANR	10176379	Argument	ip [ 1 ]		10176231	0					
ANR	10176380	ArrayIndexing	ip [ 1 ]		10176231	0					
ANR	10176381	Identifier	ip		10176231	0					
ANR	10176382	PrimaryExpression	1		10176231	1					
ANR	10176383	ExpressionStatement	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )	982:5:28986:29020	10176231	2	True				
ANR	10176384	AssignmentExpression	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		10176231	0		=			
ANR	10176385	Identifier	b2		10176231	0					
ANR	10176386	AssignmentExpression	wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		10176231	1		=			
ANR	10176387	ArrayIndexing	wp [ 2 ]		10176231	0					
ANR	10176388	Identifier	wp		10176231	0					
ANR	10176389	PrimaryExpression	2		10176231	1					
ANR	10176390	CastExpression	( uint16 ) CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176391	CastTarget	uint16		10176231	0					
ANR	10176392	CallExpression	CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176393	Callee	CLAMP		10176231	0					
ANR	10176394	Identifier	CLAMP		10176231	0					
ANR	10176395	ArgumentList	ip [ 2 ]		10176231	1					
ANR	10176396	Argument	ip [ 2 ]		10176231	0					
ANR	10176397	ArrayIndexing	ip [ 2 ]		10176231	0					
ANR	10176398	Identifier	ip		10176231	0					
ANR	10176399	PrimaryExpression	2		10176231	1					
ANR	10176400	ExpressionStatement	n -= 3	983:5:29027:29033	10176231	3	True				
ANR	10176401	AssignmentExpression	n -= 3		10176231	0		-=			
ANR	10176402	Identifier	n		10176231	0					
ANR	10176403	PrimaryExpression	3		10176231	1					
ANR	10176404	WhileStatement	while ( n > 0 )		10176231	4					
ANR	10176405	Condition	n > 0	984:12:29047:29051	10176231	0	True				
ANR	10176406	RelationalExpression	n > 0		10176231	0		>			
ANR	10176407	Identifier	n		10176231	0					
ANR	10176408	PrimaryExpression	0		10176231	1					
ANR	10176409	CompoundStatement		17:19:475:475	10176231	1					
ANR	10176410	ExpressionStatement	n -= 3	985:2:29058:29064	10176231	0	True				
ANR	10176411	AssignmentExpression	n -= 3		10176231	0		-=			
ANR	10176412	Identifier	n		10176231	0					
ANR	10176413	PrimaryExpression	3		10176231	1					
ANR	10176414	ExpressionStatement	wp += 3	986:2:29068:29075	10176231	1	True				
ANR	10176415	AssignmentExpression	wp += 3		10176231	0		+=			
ANR	10176416	Identifier	wp		10176231	0					
ANR	10176417	PrimaryExpression	3		10176231	1					
ANR	10176418	ExpressionStatement	ip += 3	987:2:29079:29086	10176231	2	True				
ANR	10176419	AssignmentExpression	ip += 3		10176231	0		+=			
ANR	10176420	Identifier	ip		10176231	0					
ANR	10176421	PrimaryExpression	3		10176231	1					
ANR	10176422	ExpressionStatement	r1 = ( int32 ) CLAMP ( ip [ 0 ] )	988:2:29090:29115	10176231	3	True				
ANR	10176423	AssignmentExpression	r1 = ( int32 ) CLAMP ( ip [ 0 ] )		10176231	0		=			
ANR	10176424	Identifier	r1		10176231	0					
ANR	10176425	CastExpression	( int32 ) CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176426	CastTarget	int32		10176231	0					
ANR	10176427	CallExpression	CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176428	Callee	CLAMP		10176231	0					
ANR	10176429	Identifier	CLAMP		10176231	0					
ANR	10176430	ArgumentList	ip [ 0 ]		10176231	1					
ANR	10176431	Argument	ip [ 0 ]		10176231	0					
ANR	10176432	ArrayIndexing	ip [ 0 ]		10176231	0					
ANR	10176433	Identifier	ip		10176231	0					
ANR	10176434	PrimaryExpression	0		10176231	1					
ANR	10176435	ExpressionStatement	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )	988:29:29117:29149	10176231	4	True				
ANR	10176436	AssignmentExpression	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )		10176231	0		=			
ANR	10176437	ArrayIndexing	wp [ 0 ]		10176231	0					
ANR	10176438	Identifier	wp		10176231	0					
ANR	10176439	PrimaryExpression	0		10176231	1					
ANR	10176440	CastExpression	( uint16 ) ( ( r1 - r2 ) & mask )		10176231	1					
ANR	10176441	CastTarget	uint16		10176231	0					
ANR	10176442	BitAndExpression	( r1 - r2 ) & mask		10176231	1		&			
ANR	10176443	AdditiveExpression	r1 - r2		10176231	0		-			
ANR	10176444	Identifier	r1		10176231	0					
ANR	10176445	Identifier	r2		10176231	1					
ANR	10176446	Identifier	mask		10176231	1					
ANR	10176447	ExpressionStatement	r2 = r1	988:63:29151:29158	10176231	5	True				
ANR	10176448	AssignmentExpression	r2 = r1		10176231	0		=			
ANR	10176449	Identifier	r2		10176231	0					
ANR	10176450	Identifier	r1		10176231	1					
ANR	10176451	ExpressionStatement	g1 = ( int32 ) CLAMP ( ip [ 1 ] )	989:2:29162:29187	10176231	6	True				
ANR	10176452	AssignmentExpression	g1 = ( int32 ) CLAMP ( ip [ 1 ] )		10176231	0		=			
ANR	10176453	Identifier	g1		10176231	0					
ANR	10176454	CastExpression	( int32 ) CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176455	CastTarget	int32		10176231	0					
ANR	10176456	CallExpression	CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176457	Callee	CLAMP		10176231	0					
ANR	10176458	Identifier	CLAMP		10176231	0					
ANR	10176459	ArgumentList	ip [ 1 ]		10176231	1					
ANR	10176460	Argument	ip [ 1 ]		10176231	0					
ANR	10176461	ArrayIndexing	ip [ 1 ]		10176231	0					
ANR	10176462	Identifier	ip		10176231	0					
ANR	10176463	PrimaryExpression	1		10176231	1					
ANR	10176464	ExpressionStatement	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )	989:29:29189:29221	10176231	7	True				
ANR	10176465	AssignmentExpression	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )		10176231	0		=			
ANR	10176466	ArrayIndexing	wp [ 1 ]		10176231	0					
ANR	10176467	Identifier	wp		10176231	0					
ANR	10176468	PrimaryExpression	1		10176231	1					
ANR	10176469	CastExpression	( uint16 ) ( ( g1 - g2 ) & mask )		10176231	1					
ANR	10176470	CastTarget	uint16		10176231	0					
ANR	10176471	BitAndExpression	( g1 - g2 ) & mask		10176231	1		&			
ANR	10176472	AdditiveExpression	g1 - g2		10176231	0		-			
ANR	10176473	Identifier	g1		10176231	0					
ANR	10176474	Identifier	g2		10176231	1					
ANR	10176475	Identifier	mask		10176231	1					
ANR	10176476	ExpressionStatement	g2 = g1	989:63:29223:29230	10176231	8	True				
ANR	10176477	AssignmentExpression	g2 = g1		10176231	0		=			
ANR	10176478	Identifier	g2		10176231	0					
ANR	10176479	Identifier	g1		10176231	1					
ANR	10176480	ExpressionStatement	b1 = ( int32 ) CLAMP ( ip [ 2 ] )	990:2:29234:29259	10176231	9	True				
ANR	10176481	AssignmentExpression	b1 = ( int32 ) CLAMP ( ip [ 2 ] )		10176231	0		=			
ANR	10176482	Identifier	b1		10176231	0					
ANR	10176483	CastExpression	( int32 ) CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176484	CastTarget	int32		10176231	0					
ANR	10176485	CallExpression	CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176486	Callee	CLAMP		10176231	0					
ANR	10176487	Identifier	CLAMP		10176231	0					
ANR	10176488	ArgumentList	ip [ 2 ]		10176231	1					
ANR	10176489	Argument	ip [ 2 ]		10176231	0					
ANR	10176490	ArrayIndexing	ip [ 2 ]		10176231	0					
ANR	10176491	Identifier	ip		10176231	0					
ANR	10176492	PrimaryExpression	2		10176231	1					
ANR	10176493	ExpressionStatement	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )	990:29:29261:29293	10176231	10	True				
ANR	10176494	AssignmentExpression	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )		10176231	0		=			
ANR	10176495	ArrayIndexing	wp [ 2 ]		10176231	0					
ANR	10176496	Identifier	wp		10176231	0					
ANR	10176497	PrimaryExpression	2		10176231	1					
ANR	10176498	CastExpression	( uint16 ) ( ( b1 - b2 ) & mask )		10176231	1					
ANR	10176499	CastTarget	uint16		10176231	0					
ANR	10176500	BitAndExpression	( b1 - b2 ) & mask		10176231	1		&			
ANR	10176501	AdditiveExpression	b1 - b2		10176231	0		-			
ANR	10176502	Identifier	b1		10176231	0					
ANR	10176503	Identifier	b2		10176231	1					
ANR	10176504	Identifier	mask		10176231	1					
ANR	10176505	ExpressionStatement	b2 = b1	990:63:29295:29302	10176231	11	True				
ANR	10176506	AssignmentExpression	b2 = b1		10176231	0		=			
ANR	10176507	Identifier	b2		10176231	0					
ANR	10176508	Identifier	b1		10176231	1					
ANR	10176509	ElseStatement	else		10176231	0					
ANR	10176510	IfStatement	if ( sp -> stride == 4 )		10176231	0					
ANR	10176511	Condition	sp -> stride == 4	992:12:29323:29337	10176231	0	True				
ANR	10176512	EqualityExpression	sp -> stride == 4		10176231	0		==			
ANR	10176513	PtrMemberAccess	sp -> stride		10176231	0					
ANR	10176514	Identifier	sp		10176231	0					
ANR	10176515	Identifier	stride		10176231	1					
ANR	10176516	PrimaryExpression	4		10176231	1					
ANR	10176517	CompoundStatement		25:29:761:761	10176231	1					
ANR	10176518	ExpressionStatement	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )	993:5:29347:29381	10176231	0	True				
ANR	10176519	AssignmentExpression	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		10176231	0		=			
ANR	10176520	Identifier	r2		10176231	0					
ANR	10176521	AssignmentExpression	wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		10176231	1		=			
ANR	10176522	ArrayIndexing	wp [ 0 ]		10176231	0					
ANR	10176523	Identifier	wp		10176231	0					
ANR	10176524	PrimaryExpression	0		10176231	1					
ANR	10176525	CastExpression	( uint16 ) CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176526	CastTarget	uint16		10176231	0					
ANR	10176527	CallExpression	CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176528	Callee	CLAMP		10176231	0					
ANR	10176529	Identifier	CLAMP		10176231	0					
ANR	10176530	ArgumentList	ip [ 0 ]		10176231	1					
ANR	10176531	Argument	ip [ 0 ]		10176231	0					
ANR	10176532	ArrayIndexing	ip [ 0 ]		10176231	0					
ANR	10176533	Identifier	ip		10176231	0					
ANR	10176534	PrimaryExpression	0		10176231	1					
ANR	10176535	ExpressionStatement	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )	994:5:29388:29422	10176231	1	True				
ANR	10176536	AssignmentExpression	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		10176231	0		=			
ANR	10176537	Identifier	g2		10176231	0					
ANR	10176538	AssignmentExpression	wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		10176231	1		=			
ANR	10176539	ArrayIndexing	wp [ 1 ]		10176231	0					
ANR	10176540	Identifier	wp		10176231	0					
ANR	10176541	PrimaryExpression	1		10176231	1					
ANR	10176542	CastExpression	( uint16 ) CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176543	CastTarget	uint16		10176231	0					
ANR	10176544	CallExpression	CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176545	Callee	CLAMP		10176231	0					
ANR	10176546	Identifier	CLAMP		10176231	0					
ANR	10176547	ArgumentList	ip [ 1 ]		10176231	1					
ANR	10176548	Argument	ip [ 1 ]		10176231	0					
ANR	10176549	ArrayIndexing	ip [ 1 ]		10176231	0					
ANR	10176550	Identifier	ip		10176231	0					
ANR	10176551	PrimaryExpression	1		10176231	1					
ANR	10176552	ExpressionStatement	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )	995:5:29429:29463	10176231	2	True				
ANR	10176553	AssignmentExpression	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		10176231	0		=			
ANR	10176554	Identifier	b2		10176231	0					
ANR	10176555	AssignmentExpression	wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		10176231	1		=			
ANR	10176556	ArrayIndexing	wp [ 2 ]		10176231	0					
ANR	10176557	Identifier	wp		10176231	0					
ANR	10176558	PrimaryExpression	2		10176231	1					
ANR	10176559	CastExpression	( uint16 ) CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176560	CastTarget	uint16		10176231	0					
ANR	10176561	CallExpression	CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176562	Callee	CLAMP		10176231	0					
ANR	10176563	Identifier	CLAMP		10176231	0					
ANR	10176564	ArgumentList	ip [ 2 ]		10176231	1					
ANR	10176565	Argument	ip [ 2 ]		10176231	0					
ANR	10176566	ArrayIndexing	ip [ 2 ]		10176231	0					
ANR	10176567	Identifier	ip		10176231	0					
ANR	10176568	PrimaryExpression	2		10176231	1					
ANR	10176569	ExpressionStatement	a2 = wp [ 3 ] = ( uint16 ) CLAMP ( ip [ 3 ] )	996:5:29470:29504	10176231	3	True				
ANR	10176570	AssignmentExpression	a2 = wp [ 3 ] = ( uint16 ) CLAMP ( ip [ 3 ] )		10176231	0		=			
ANR	10176571	Identifier	a2		10176231	0					
ANR	10176572	AssignmentExpression	wp [ 3 ] = ( uint16 ) CLAMP ( ip [ 3 ] )		10176231	1		=			
ANR	10176573	ArrayIndexing	wp [ 3 ]		10176231	0					
ANR	10176574	Identifier	wp		10176231	0					
ANR	10176575	PrimaryExpression	3		10176231	1					
ANR	10176576	CastExpression	( uint16 ) CLAMP ( ip [ 3 ] )		10176231	1					
ANR	10176577	CastTarget	uint16		10176231	0					
ANR	10176578	CallExpression	CLAMP ( ip [ 3 ] )		10176231	1					
ANR	10176579	Callee	CLAMP		10176231	0					
ANR	10176580	Identifier	CLAMP		10176231	0					
ANR	10176581	ArgumentList	ip [ 3 ]		10176231	1					
ANR	10176582	Argument	ip [ 3 ]		10176231	0					
ANR	10176583	ArrayIndexing	ip [ 3 ]		10176231	0					
ANR	10176584	Identifier	ip		10176231	0					
ANR	10176585	PrimaryExpression	3		10176231	1					
ANR	10176586	ExpressionStatement	n -= 4	997:5:29511:29517	10176231	4	True				
ANR	10176587	AssignmentExpression	n -= 4		10176231	0		-=			
ANR	10176588	Identifier	n		10176231	0					
ANR	10176589	PrimaryExpression	4		10176231	1					
ANR	10176590	WhileStatement	while ( n > 0 )		10176231	5					
ANR	10176591	Condition	n > 0	998:12:29531:29535	10176231	0	True				
ANR	10176592	RelationalExpression	n > 0		10176231	0		>			
ANR	10176593	Identifier	n		10176231	0					
ANR	10176594	PrimaryExpression	0		10176231	1					
ANR	10176595	CompoundStatement		31:19:959:959	10176231	1					
ANR	10176596	ExpressionStatement	n -= 4	999:2:29542:29548	10176231	0	True				
ANR	10176597	AssignmentExpression	n -= 4		10176231	0		-=			
ANR	10176598	Identifier	n		10176231	0					
ANR	10176599	PrimaryExpression	4		10176231	1					
ANR	10176600	ExpressionStatement	wp += 4	1000:2:29552:29559	10176231	1	True				
ANR	10176601	AssignmentExpression	wp += 4		10176231	0		+=			
ANR	10176602	Identifier	wp		10176231	0					
ANR	10176603	PrimaryExpression	4		10176231	1					
ANR	10176604	ExpressionStatement	ip += 4	1001:2:29563:29570	10176231	2	True				
ANR	10176605	AssignmentExpression	ip += 4		10176231	0		+=			
ANR	10176606	Identifier	ip		10176231	0					
ANR	10176607	PrimaryExpression	4		10176231	1					
ANR	10176608	ExpressionStatement	r1 = ( int32 ) CLAMP ( ip [ 0 ] )	1002:2:29574:29599	10176231	3	True				
ANR	10176609	AssignmentExpression	r1 = ( int32 ) CLAMP ( ip [ 0 ] )		10176231	0		=			
ANR	10176610	Identifier	r1		10176231	0					
ANR	10176611	CastExpression	( int32 ) CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176612	CastTarget	int32		10176231	0					
ANR	10176613	CallExpression	CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176614	Callee	CLAMP		10176231	0					
ANR	10176615	Identifier	CLAMP		10176231	0					
ANR	10176616	ArgumentList	ip [ 0 ]		10176231	1					
ANR	10176617	Argument	ip [ 0 ]		10176231	0					
ANR	10176618	ArrayIndexing	ip [ 0 ]		10176231	0					
ANR	10176619	Identifier	ip		10176231	0					
ANR	10176620	PrimaryExpression	0		10176231	1					
ANR	10176621	ExpressionStatement	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )	1002:29:29601:29633	10176231	4	True				
ANR	10176622	AssignmentExpression	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )		10176231	0		=			
ANR	10176623	ArrayIndexing	wp [ 0 ]		10176231	0					
ANR	10176624	Identifier	wp		10176231	0					
ANR	10176625	PrimaryExpression	0		10176231	1					
ANR	10176626	CastExpression	( uint16 ) ( ( r1 - r2 ) & mask )		10176231	1					
ANR	10176627	CastTarget	uint16		10176231	0					
ANR	10176628	BitAndExpression	( r1 - r2 ) & mask		10176231	1		&			
ANR	10176629	AdditiveExpression	r1 - r2		10176231	0		-			
ANR	10176630	Identifier	r1		10176231	0					
ANR	10176631	Identifier	r2		10176231	1					
ANR	10176632	Identifier	mask		10176231	1					
ANR	10176633	ExpressionStatement	r2 = r1	1002:63:29635:29642	10176231	5	True				
ANR	10176634	AssignmentExpression	r2 = r1		10176231	0		=			
ANR	10176635	Identifier	r2		10176231	0					
ANR	10176636	Identifier	r1		10176231	1					
ANR	10176637	ExpressionStatement	g1 = ( int32 ) CLAMP ( ip [ 1 ] )	1003:2:29646:29671	10176231	6	True				
ANR	10176638	AssignmentExpression	g1 = ( int32 ) CLAMP ( ip [ 1 ] )		10176231	0		=			
ANR	10176639	Identifier	g1		10176231	0					
ANR	10176640	CastExpression	( int32 ) CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176641	CastTarget	int32		10176231	0					
ANR	10176642	CallExpression	CLAMP ( ip [ 1 ] )		10176231	1					
ANR	10176643	Callee	CLAMP		10176231	0					
ANR	10176644	Identifier	CLAMP		10176231	0					
ANR	10176645	ArgumentList	ip [ 1 ]		10176231	1					
ANR	10176646	Argument	ip [ 1 ]		10176231	0					
ANR	10176647	ArrayIndexing	ip [ 1 ]		10176231	0					
ANR	10176648	Identifier	ip		10176231	0					
ANR	10176649	PrimaryExpression	1		10176231	1					
ANR	10176650	ExpressionStatement	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )	1003:29:29673:29705	10176231	7	True				
ANR	10176651	AssignmentExpression	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )		10176231	0		=			
ANR	10176652	ArrayIndexing	wp [ 1 ]		10176231	0					
ANR	10176653	Identifier	wp		10176231	0					
ANR	10176654	PrimaryExpression	1		10176231	1					
ANR	10176655	CastExpression	( uint16 ) ( ( g1 - g2 ) & mask )		10176231	1					
ANR	10176656	CastTarget	uint16		10176231	0					
ANR	10176657	BitAndExpression	( g1 - g2 ) & mask		10176231	1		&			
ANR	10176658	AdditiveExpression	g1 - g2		10176231	0		-			
ANR	10176659	Identifier	g1		10176231	0					
ANR	10176660	Identifier	g2		10176231	1					
ANR	10176661	Identifier	mask		10176231	1					
ANR	10176662	ExpressionStatement	g2 = g1	1003:63:29707:29714	10176231	8	True				
ANR	10176663	AssignmentExpression	g2 = g1		10176231	0		=			
ANR	10176664	Identifier	g2		10176231	0					
ANR	10176665	Identifier	g1		10176231	1					
ANR	10176666	ExpressionStatement	b1 = ( int32 ) CLAMP ( ip [ 2 ] )	1004:2:29718:29743	10176231	9	True				
ANR	10176667	AssignmentExpression	b1 = ( int32 ) CLAMP ( ip [ 2 ] )		10176231	0		=			
ANR	10176668	Identifier	b1		10176231	0					
ANR	10176669	CastExpression	( int32 ) CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176670	CastTarget	int32		10176231	0					
ANR	10176671	CallExpression	CLAMP ( ip [ 2 ] )		10176231	1					
ANR	10176672	Callee	CLAMP		10176231	0					
ANR	10176673	Identifier	CLAMP		10176231	0					
ANR	10176674	ArgumentList	ip [ 2 ]		10176231	1					
ANR	10176675	Argument	ip [ 2 ]		10176231	0					
ANR	10176676	ArrayIndexing	ip [ 2 ]		10176231	0					
ANR	10176677	Identifier	ip		10176231	0					
ANR	10176678	PrimaryExpression	2		10176231	1					
ANR	10176679	ExpressionStatement	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )	1004:29:29745:29777	10176231	10	True				
ANR	10176680	AssignmentExpression	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )		10176231	0		=			
ANR	10176681	ArrayIndexing	wp [ 2 ]		10176231	0					
ANR	10176682	Identifier	wp		10176231	0					
ANR	10176683	PrimaryExpression	2		10176231	1					
ANR	10176684	CastExpression	( uint16 ) ( ( b1 - b2 ) & mask )		10176231	1					
ANR	10176685	CastTarget	uint16		10176231	0					
ANR	10176686	BitAndExpression	( b1 - b2 ) & mask		10176231	1		&			
ANR	10176687	AdditiveExpression	b1 - b2		10176231	0		-			
ANR	10176688	Identifier	b1		10176231	0					
ANR	10176689	Identifier	b2		10176231	1					
ANR	10176690	Identifier	mask		10176231	1					
ANR	10176691	ExpressionStatement	b2 = b1	1004:63:29779:29786	10176231	11	True				
ANR	10176692	AssignmentExpression	b2 = b1		10176231	0		=			
ANR	10176693	Identifier	b2		10176231	0					
ANR	10176694	Identifier	b1		10176231	1					
ANR	10176695	ExpressionStatement	a1 = ( int32 ) CLAMP ( ip [ 3 ] )	1005:2:29790:29815	10176231	12	True				
ANR	10176696	AssignmentExpression	a1 = ( int32 ) CLAMP ( ip [ 3 ] )		10176231	0		=			
ANR	10176697	Identifier	a1		10176231	0					
ANR	10176698	CastExpression	( int32 ) CLAMP ( ip [ 3 ] )		10176231	1					
ANR	10176699	CastTarget	int32		10176231	0					
ANR	10176700	CallExpression	CLAMP ( ip [ 3 ] )		10176231	1					
ANR	10176701	Callee	CLAMP		10176231	0					
ANR	10176702	Identifier	CLAMP		10176231	0					
ANR	10176703	ArgumentList	ip [ 3 ]		10176231	1					
ANR	10176704	Argument	ip [ 3 ]		10176231	0					
ANR	10176705	ArrayIndexing	ip [ 3 ]		10176231	0					
ANR	10176706	Identifier	ip		10176231	0					
ANR	10176707	PrimaryExpression	3		10176231	1					
ANR	10176708	ExpressionStatement	wp [ 3 ] = ( uint16 ) ( ( a1 - a2 ) & mask )	1005:29:29817:29849	10176231	13	True				
ANR	10176709	AssignmentExpression	wp [ 3 ] = ( uint16 ) ( ( a1 - a2 ) & mask )		10176231	0		=			
ANR	10176710	ArrayIndexing	wp [ 3 ]		10176231	0					
ANR	10176711	Identifier	wp		10176231	0					
ANR	10176712	PrimaryExpression	3		10176231	1					
ANR	10176713	CastExpression	( uint16 ) ( ( a1 - a2 ) & mask )		10176231	1					
ANR	10176714	CastTarget	uint16		10176231	0					
ANR	10176715	BitAndExpression	( a1 - a2 ) & mask		10176231	1		&			
ANR	10176716	AdditiveExpression	a1 - a2		10176231	0		-			
ANR	10176717	Identifier	a1		10176231	0					
ANR	10176718	Identifier	a2		10176231	1					
ANR	10176719	Identifier	mask		10176231	1					
ANR	10176720	ExpressionStatement	a2 = a1	1005:63:29851:29858	10176231	14	True				
ANR	10176721	AssignmentExpression	a2 = a1		10176231	0		=			
ANR	10176722	Identifier	a2		10176231	0					
ANR	10176723	Identifier	a1		10176231	1					
ANR	10176724	ElseStatement	else		10176231	0					
ANR	10176725	CompoundStatement		40:8:1296:1296	10176231	0					
ANR	10176726	Statement	REPEAT	1008:8:29885:29890	10176231	0	True				
ANR	10176727	Statement	(	1008:14:29891:29891	10176231	1	True				
ANR	10176728	ExpressionStatement	"stride , wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )"	1008:15:29892:29929	10176231	2	True				
ANR	10176729	Expression	"stride , wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )"		10176231	0					
ANR	10176730	Identifier	stride		10176231	0					
ANR	10176731	AssignmentExpression	wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		10176231	1		=			
ANR	10176732	ArrayIndexing	wp [ 0 ]		10176231	0					
ANR	10176733	Identifier	wp		10176231	0					
ANR	10176734	PrimaryExpression	0		10176231	1					
ANR	10176735	CastExpression	( uint16 ) CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176736	CastTarget	uint16		10176231	0					
ANR	10176737	CallExpression	CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176738	Callee	CLAMP		10176231	0					
ANR	10176739	Identifier	CLAMP		10176231	0					
ANR	10176740	ArgumentList	ip [ 0 ]		10176231	1					
ANR	10176741	Argument	ip [ 0 ]		10176231	0					
ANR	10176742	ArrayIndexing	ip [ 0 ]		10176231	0					
ANR	10176743	Identifier	ip		10176231	0					
ANR	10176744	PrimaryExpression	0		10176231	1					
ANR	10176745	ExpressionStatement	wp ++	1008:54:29931:29935	10176231	3	True				
ANR	10176746	PostIncDecOperationExpression	wp ++		10176231	0					
ANR	10176747	Identifier	wp		10176231	0					
ANR	10176748	IncDec	++		10176231	1					
ANR	10176749	Statement	ip	1008:60:29937:29938	10176231	4	True				
ANR	10176750	Statement	++	1008:62:29939:29940	10176231	5	True				
ANR	10176751	Statement	)	1008:64:29941:29941	10176231	6	True				
ANR	10176752	ExpressionStatement	n -= stride	1009:8:29951:29962	10176231	7	True				
ANR	10176753	AssignmentExpression	n -= stride		10176231	0		-=			
ANR	10176754	Identifier	n		10176231	0					
ANR	10176755	Identifier	stride		10176231	1					
ANR	10176756	WhileStatement	while ( n > 0 )		10176231	8					
ANR	10176757	Condition	n > 0	1010:15:29979:29983	10176231	0	True				
ANR	10176758	RelationalExpression	n > 0		10176231	0		>			
ANR	10176759	Identifier	n		10176231	0					
ANR	10176760	PrimaryExpression	0		10176231	1					
ANR	10176761	CompoundStatement		43:22:1407:1407	10176231	1					
ANR	10176762	Statement	REPEAT	1011:12:30000:30005	10176231	0	True				
ANR	10176763	Statement	(	1011:18:30006:30006	10176231	1	True				
ANR	10176764	ExpressionStatement	"stride , wp [ 0 ] = ( uint16 ) ( ( ( int32 ) CLAMP ( ip [ 0 ] ) - ( int32 ) CLAMP ( ip [ - stride ] ) ) & mask )"	1011:19:30007:30103	10176231	2	True				
ANR	10176765	Expression	"stride , wp [ 0 ] = ( uint16 ) ( ( ( int32 ) CLAMP ( ip [ 0 ] ) - ( int32 ) CLAMP ( ip [ - stride ] ) ) & mask )"		10176231	0					
ANR	10176766	Identifier	stride		10176231	0					
ANR	10176767	AssignmentExpression	wp [ 0 ] = ( uint16 ) ( ( ( int32 ) CLAMP ( ip [ 0 ] ) - ( int32 ) CLAMP ( ip [ - stride ] ) ) & mask )		10176231	1		=			
ANR	10176768	ArrayIndexing	wp [ 0 ]		10176231	0					
ANR	10176769	Identifier	wp		10176231	0					
ANR	10176770	PrimaryExpression	0		10176231	1					
ANR	10176771	CastExpression	( uint16 ) ( ( ( int32 ) CLAMP ( ip [ 0 ] ) - ( int32 ) CLAMP ( ip [ - stride ] ) ) & mask )		10176231	1					
ANR	10176772	CastTarget	uint16		10176231	0					
ANR	10176773	BitAndExpression	( ( int32 ) CLAMP ( ip [ 0 ] ) - ( int32 ) CLAMP ( ip [ - stride ] ) ) & mask		10176231	1		&			
ANR	10176774	AdditiveExpression	( int32 ) CLAMP ( ip [ 0 ] ) - ( int32 ) CLAMP ( ip [ - stride ] )		10176231	0		-			
ANR	10176775	CastExpression	( int32 ) CLAMP ( ip [ 0 ] )		10176231	0					
ANR	10176776	CastTarget	int32		10176231	0					
ANR	10176777	CallExpression	CLAMP ( ip [ 0 ] )		10176231	1					
ANR	10176778	Callee	CLAMP		10176231	0					
ANR	10176779	Identifier	CLAMP		10176231	0					
ANR	10176780	ArgumentList	ip [ 0 ]		10176231	1					
ANR	10176781	Argument	ip [ 0 ]		10176231	0					
ANR	10176782	ArrayIndexing	ip [ 0 ]		10176231	0					
ANR	10176783	Identifier	ip		10176231	0					
ANR	10176784	PrimaryExpression	0		10176231	1					
ANR	10176785	CastExpression	( int32 ) CLAMP ( ip [ - stride ] )		10176231	1					
ANR	10176786	CastTarget	int32		10176231	0					
ANR	10176787	CallExpression	CLAMP ( ip [ - stride ] )		10176231	1					
ANR	10176788	Callee	CLAMP		10176231	0					
ANR	10176789	Identifier	CLAMP		10176231	0					
ANR	10176790	ArgumentList	ip [ - stride ]		10176231	1					
ANR	10176791	Argument	ip [ - stride ]		10176231	0					
ANR	10176792	ArrayIndexing	ip [ - stride ]		10176231	0					
ANR	10176793	Identifier	ip		10176231	0					
ANR	10176794	UnaryOperationExpression	- stride		10176231	1					
ANR	10176795	UnaryOperator	-		10176231	0					
ANR	10176796	Identifier	stride		10176231	1					
ANR	10176797	Identifier	mask		10176231	1					
ANR	10176798	ExpressionStatement	wp ++	1013:16:30121:30125	10176231	3	True				
ANR	10176799	PostIncDecOperationExpression	wp ++		10176231	0					
ANR	10176800	Identifier	wp		10176231	0					
ANR	10176801	IncDec	++		10176231	1					
ANR	10176802	Statement	ip	1013:22:30127:30128	10176231	4	True				
ANR	10176803	Statement	++	1013:24:30129:30130	10176231	5	True				
ANR	10176804	Statement	)	1013:26:30131:30131	10176231	6	True				
ANR	10176805	ExpressionStatement	n -= stride	1014:12:30145:30156	10176231	7	True				
ANR	10176806	AssignmentExpression	n -= stride		10176231	0		-=			
ANR	10176807	Identifier	n		10176231	0					
ANR	10176808	Identifier	stride		10176231	1					
ANR	10176809	ReturnType	static void		10176231	1					
ANR	10176810	Identifier	horizontalDifferenceF		10176231	2					
ANR	10176811	ParameterList	"PixarLogState * sp , float * ip , int n , int stride , uint16 * wp , uint16 * FromLT2"		10176231	3					
ANR	10176812	Parameter	PixarLogState * sp	967:22:28500:28516	10176231	0	True				
ANR	10176813	ParameterType	PixarLogState *		10176231	0					
ANR	10176814	Identifier	sp		10176231	1					
ANR	10176815	Parameter	float * ip	967:41:28519:28527	10176231	1	True				
ANR	10176816	ParameterType	float *		10176231	0					
ANR	10176817	Identifier	ip		10176231	1					
ANR	10176818	Parameter	int n	967:52:28530:28534	10176231	2	True				
ANR	10176819	ParameterType	int		10176231	0					
ANR	10176820	Identifier	n		10176231	1					
ANR	10176821	Parameter	int stride	967:59:28537:28546	10176231	3	True				
ANR	10176822	ParameterType	int		10176231	0					
ANR	10176823	Identifier	stride		10176231	1					
ANR	10176824	Parameter	uint16 * wp	967:71:28549:28558	10176231	4	True				
ANR	10176825	ParameterType	uint16 *		10176231	0					
ANR	10176826	Identifier	wp		10176231	1					
ANR	10176827	Parameter	uint16 * FromLT2	967:83:28561:28575	10176231	5	True				
ANR	10176828	ParameterType	uint16 *		10176231	0					
ANR	10176829	Identifier	FromLT2		10176231	1					
ANR	10176830	CFGEntryNode	ENTRY		10176231		True				
ANR	10176831	CFGExitNode	EXIT		10176231		True				
ANR	10176832	Symbol	r2		10176231						
ANR	10176833	Symbol	* sp		10176231						
ANR	10176834	Symbol	* stride		10176231						
ANR	10176835	Symbol	ip		10176231						
ANR	10176836	Symbol	sp -> Fltsize		10176231						
ANR	10176837	Symbol	CLAMP		10176231						
ANR	10176838	Symbol	g1		10176231						
ANR	10176839	Symbol	FromLT2		10176231						
ANR	10176840	Symbol	g2		10176231						
ANR	10176841	Symbol	stride		10176231						
ANR	10176842	Symbol	n		10176231						
ANR	10176843	Symbol	* ip		10176231						
ANR	10176844	Symbol	b1		10176231						
ANR	10176845	Symbol	b2		10176231						
ANR	10176846	Symbol	a1		10176231						
ANR	10176847	Symbol	fltsize		10176231						
ANR	10176848	Symbol	a2		10176231						
ANR	10176849	Symbol	sp -> stride		10176231						
ANR	10176850	Symbol	CODE_MASK		10176231						
ANR	10176851	Symbol	wp		10176231						
ANR	10176852	Symbol	* wp		10176231						
ANR	10176853	Symbol	sp		10176231						
ANR	10176854	Symbol	r1		10176231						
ANR	10176855	Symbol	mask		10176231						
ANR	10176856	Function	horizontalDifference16	1020:0:30180:31623							
ANR	10176857	FunctionDef	"horizontalDifference16 (unsigned short * ip , int n , int stride , unsigned short * wp , uint16 * From14)"		10176856	0					
ANR	10176858	CompoundStatement		1023:0:30292:31623	10176856	0					
ANR	10176859	Statement	register	1024:4:30298:30305	10176856	0	True				
ANR	10176860	IdentifierDeclStatement	"int r1 , g1 , b1 , a1 , r2 , g2 , b2 , a2 , mask ;"	1024:13:30307:30348	10176856	1	True				
ANR	10176861	IdentifierDecl	r1		10176856	0					
ANR	10176862	IdentifierDeclType	int		10176856	0					
ANR	10176863	Identifier	r1		10176856	1					
ANR	10176864	IdentifierDecl	g1		10176856	1					
ANR	10176865	IdentifierDeclType	int		10176856	0					
ANR	10176866	Identifier	g1		10176856	1					
ANR	10176867	IdentifierDecl	b1		10176856	2					
ANR	10176868	IdentifierDeclType	int		10176856	0					
ANR	10176869	Identifier	b1		10176856	1					
ANR	10176870	IdentifierDecl	a1		10176856	3					
ANR	10176871	IdentifierDeclType	int		10176856	0					
ANR	10176872	Identifier	a1		10176856	1					
ANR	10176873	IdentifierDecl	r2		10176856	4					
ANR	10176874	IdentifierDeclType	int		10176856	0					
ANR	10176875	Identifier	r2		10176856	1					
ANR	10176876	IdentifierDecl	g2		10176856	5					
ANR	10176877	IdentifierDeclType	int		10176856	0					
ANR	10176878	Identifier	g2		10176856	1					
ANR	10176879	IdentifierDecl	b2		10176856	6					
ANR	10176880	IdentifierDeclType	int		10176856	0					
ANR	10176881	Identifier	b2		10176856	1					
ANR	10176882	IdentifierDecl	a2		10176856	7					
ANR	10176883	IdentifierDeclType	int		10176856	0					
ANR	10176884	Identifier	a2		10176856	1					
ANR	10176885	IdentifierDecl	mask		10176856	8					
ANR	10176886	IdentifierDeclType	int		10176856	0					
ANR	10176887	Identifier	mask		10176856	1					
ANR	10176888	Statement	undef	1027:1:30394:30398	10176856	2	True				
ANR	10176889	Statement	CLAMP	1027:9:30402:30406	10176856	3	True				
ANR	10176890	Statement	define	1028:1:30409:30414	10176856	4	True				
ANR	10176891	Statement	CLAMP	1028:9:30417:30421	10176856	5	True				
ANR	10176892	Statement	(	1028:14:30422:30422	10176856	6	True				
ANR	10176893	Statement	v	1028:15:30423:30423	10176856	7	True				
ANR	10176894	Statement	)	1028:16:30424:30424	10176856	8	True				
ANR	10176895	Statement	From14	1028:18:30426:30431	10176856	9	True				
ANR	10176896	Statement	[	1028:24:30432:30432	10176856	10	True				
ANR	10176897	Statement	(	1028:25:30433:30433	10176856	11	True				
ANR	10176898	Statement	v	1028:26:30434:30434	10176856	12	True				
ANR	10176899	Statement	)	1028:27:30435:30435	10176856	13	True				
ANR	10176900	Statement	>>	1028:29:30437:30438	10176856	14	True				
ANR	10176901	Statement	2	1028:32:30440:30440	10176856	15	True				
ANR	10176902	Statement	]	1028:33:30441:30441	10176856	16	True				
ANR	10176903	ExpressionStatement	mask = CODE_MASK	1030:4:30448:30464	10176856	17	True				
ANR	10176904	AssignmentExpression	mask = CODE_MASK		10176856	0		=			
ANR	10176905	Identifier	mask		10176856	0					
ANR	10176906	Identifier	CODE_MASK		10176856	1					
ANR	10176907	IfStatement	if ( n >= stride )		10176856	18					
ANR	10176908	Condition	n >= stride	1031:8:30474:30484	10176856	0	True				
ANR	10176909	RelationalExpression	n >= stride		10176856	0		>=			
ANR	10176910	Identifier	n		10176856	0					
ANR	10176911	Identifier	stride		10176856	1					
ANR	10176912	CompoundStatement		9:21:194:194	10176856	1					
ANR	10176913	IfStatement	if ( stride == 3 )		10176856	0					
ANR	10176914	Condition	stride == 3	1032:5:30494:30504	10176856	0	True				
ANR	10176915	EqualityExpression	stride == 3		10176856	0		==			
ANR	10176916	Identifier	stride		10176856	0					
ANR	10176917	PrimaryExpression	3		10176856	1					
ANR	10176918	CompoundStatement		10:18:214:214	10176856	1					
ANR	10176919	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1033:5:30514:30539	10176856	0	True				
ANR	10176920	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		10176856	0		=			
ANR	10176921	Identifier	r2		10176856	0					
ANR	10176922	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		10176856	1		=			
ANR	10176923	ArrayIndexing	wp [ 0 ]		10176856	0					
ANR	10176924	Identifier	wp		10176856	0					
ANR	10176925	PrimaryExpression	0		10176856	1					
ANR	10176926	CallExpression	CLAMP ( ip [ 0 ] )		10176856	1					
ANR	10176927	Callee	CLAMP		10176856	0					
ANR	10176928	Identifier	CLAMP		10176856	0					
ANR	10176929	ArgumentList	ip [ 0 ]		10176856	1					
ANR	10176930	Argument	ip [ 0 ]		10176856	0					
ANR	10176931	ArrayIndexing	ip [ 0 ]		10176856	0					
ANR	10176932	Identifier	ip		10176856	0					
ANR	10176933	PrimaryExpression	0		10176856	1					
ANR	10176934	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1033:33:30542:30567	10176856	1	True				
ANR	10176935	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		10176856	0		=			
ANR	10176936	Identifier	g2		10176856	0					
ANR	10176937	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		10176856	1		=			
ANR	10176938	ArrayIndexing	wp [ 1 ]		10176856	0					
ANR	10176939	Identifier	wp		10176856	0					
ANR	10176940	PrimaryExpression	1		10176856	1					
ANR	10176941	CallExpression	CLAMP ( ip [ 1 ] )		10176856	1					
ANR	10176942	Callee	CLAMP		10176856	0					
ANR	10176943	Identifier	CLAMP		10176856	0					
ANR	10176944	ArgumentList	ip [ 1 ]		10176856	1					
ANR	10176945	Argument	ip [ 1 ]		10176856	0					
ANR	10176946	ArrayIndexing	ip [ 1 ]		10176856	0					
ANR	10176947	Identifier	ip		10176856	0					
ANR	10176948	PrimaryExpression	1		10176856	1					
ANR	10176949	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1034:5:30574:30599	10176856	2	True				
ANR	10176950	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		10176856	0		=			
ANR	10176951	Identifier	b2		10176856	0					
ANR	10176952	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		10176856	1		=			
ANR	10176953	ArrayIndexing	wp [ 2 ]		10176856	0					
ANR	10176954	Identifier	wp		10176856	0					
ANR	10176955	PrimaryExpression	2		10176856	1					
ANR	10176956	CallExpression	CLAMP ( ip [ 2 ] )		10176856	1					
ANR	10176957	Callee	CLAMP		10176856	0					
ANR	10176958	Identifier	CLAMP		10176856	0					
ANR	10176959	ArgumentList	ip [ 2 ]		10176856	1					
ANR	10176960	Argument	ip [ 2 ]		10176856	0					
ANR	10176961	ArrayIndexing	ip [ 2 ]		10176856	0					
ANR	10176962	Identifier	ip		10176856	0					
ANR	10176963	PrimaryExpression	2		10176856	1					
ANR	10176964	ExpressionStatement	n -= 3	1035:5:30606:30612	10176856	3	True				
ANR	10176965	AssignmentExpression	n -= 3		10176856	0		-=			
ANR	10176966	Identifier	n		10176856	0					
ANR	10176967	PrimaryExpression	3		10176856	1					
ANR	10176968	WhileStatement	while ( n > 0 )		10176856	4					
ANR	10176969	Condition	n > 0	1036:12:30626:30630	10176856	0	True				
ANR	10176970	RelationalExpression	n > 0		10176856	0		>			
ANR	10176971	Identifier	n		10176856	0					
ANR	10176972	PrimaryExpression	0		10176856	1					
ANR	10176973	CompoundStatement		14:19:340:340	10176856	1					
ANR	10176974	ExpressionStatement	n -= 3	1037:2:30637:30643	10176856	0	True				
ANR	10176975	AssignmentExpression	n -= 3		10176856	0		-=			
ANR	10176976	Identifier	n		10176856	0					
ANR	10176977	PrimaryExpression	3		10176856	1					
ANR	10176978	ExpressionStatement	wp += 3	1038:2:30647:30654	10176856	1	True				
ANR	10176979	AssignmentExpression	wp += 3		10176856	0		+=			
ANR	10176980	Identifier	wp		10176856	0					
ANR	10176981	PrimaryExpression	3		10176856	1					
ANR	10176982	ExpressionStatement	ip += 3	1039:2:30658:30665	10176856	2	True				
ANR	10176983	AssignmentExpression	ip += 3		10176856	0		+=			
ANR	10176984	Identifier	ip		10176856	0					
ANR	10176985	PrimaryExpression	3		10176856	1					
ANR	10176986	ExpressionStatement	r1 = CLAMP ( ip [ 0 ] )	1040:2:30669:30686	10176856	3	True				
ANR	10176987	AssignmentExpression	r1 = CLAMP ( ip [ 0 ] )		10176856	0		=			
ANR	10176988	Identifier	r1		10176856	0					
ANR	10176989	CallExpression	CLAMP ( ip [ 0 ] )		10176856	1					
ANR	10176990	Callee	CLAMP		10176856	0					
ANR	10176991	Identifier	CLAMP		10176856	0					
ANR	10176992	ArgumentList	ip [ 0 ]		10176856	1					
ANR	10176993	Argument	ip [ 0 ]		10176856	0					
ANR	10176994	ArrayIndexing	ip [ 0 ]		10176856	0					
ANR	10176995	Identifier	ip		10176856	0					
ANR	10176996	PrimaryExpression	0		10176856	1					
ANR	10176997	ExpressionStatement	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )	1040:21:30688:30720	10176856	4	True				
ANR	10176998	AssignmentExpression	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )		10176856	0		=			
ANR	10176999	ArrayIndexing	wp [ 0 ]		10176856	0					
ANR	10177000	Identifier	wp		10176856	0					
ANR	10177001	PrimaryExpression	0		10176856	1					
ANR	10177002	CastExpression	( uint16 ) ( ( r1 - r2 ) & mask )		10176856	1					
ANR	10177003	CastTarget	uint16		10176856	0					
ANR	10177004	BitAndExpression	( r1 - r2 ) & mask		10176856	1		&			
ANR	10177005	AdditiveExpression	r1 - r2		10176856	0		-			
ANR	10177006	Identifier	r1		10176856	0					
ANR	10177007	Identifier	r2		10176856	1					
ANR	10177008	Identifier	mask		10176856	1					
ANR	10177009	ExpressionStatement	r2 = r1	1040:55:30722:30729	10176856	5	True				
ANR	10177010	AssignmentExpression	r2 = r1		10176856	0		=			
ANR	10177011	Identifier	r2		10176856	0					
ANR	10177012	Identifier	r1		10176856	1					
ANR	10177013	ExpressionStatement	g1 = CLAMP ( ip [ 1 ] )	1041:2:30733:30750	10176856	6	True				
ANR	10177014	AssignmentExpression	g1 = CLAMP ( ip [ 1 ] )		10176856	0		=			
ANR	10177015	Identifier	g1		10176856	0					
ANR	10177016	CallExpression	CLAMP ( ip [ 1 ] )		10176856	1					
ANR	10177017	Callee	CLAMP		10176856	0					
ANR	10177018	Identifier	CLAMP		10176856	0					
ANR	10177019	ArgumentList	ip [ 1 ]		10176856	1					
ANR	10177020	Argument	ip [ 1 ]		10176856	0					
ANR	10177021	ArrayIndexing	ip [ 1 ]		10176856	0					
ANR	10177022	Identifier	ip		10176856	0					
ANR	10177023	PrimaryExpression	1		10176856	1					
ANR	10177024	ExpressionStatement	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )	1041:21:30752:30784	10176856	7	True				
ANR	10177025	AssignmentExpression	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )		10176856	0		=			
ANR	10177026	ArrayIndexing	wp [ 1 ]		10176856	0					
ANR	10177027	Identifier	wp		10176856	0					
ANR	10177028	PrimaryExpression	1		10176856	1					
ANR	10177029	CastExpression	( uint16 ) ( ( g1 - g2 ) & mask )		10176856	1					
ANR	10177030	CastTarget	uint16		10176856	0					
ANR	10177031	BitAndExpression	( g1 - g2 ) & mask		10176856	1		&			
ANR	10177032	AdditiveExpression	g1 - g2		10176856	0		-			
ANR	10177033	Identifier	g1		10176856	0					
ANR	10177034	Identifier	g2		10176856	1					
ANR	10177035	Identifier	mask		10176856	1					
ANR	10177036	ExpressionStatement	g2 = g1	1041:55:30786:30793	10176856	8	True				
ANR	10177037	AssignmentExpression	g2 = g1		10176856	0		=			
ANR	10177038	Identifier	g2		10176856	0					
ANR	10177039	Identifier	g1		10176856	1					
ANR	10177040	ExpressionStatement	b1 = CLAMP ( ip [ 2 ] )	1042:2:30797:30814	10176856	9	True				
ANR	10177041	AssignmentExpression	b1 = CLAMP ( ip [ 2 ] )		10176856	0		=			
ANR	10177042	Identifier	b1		10176856	0					
ANR	10177043	CallExpression	CLAMP ( ip [ 2 ] )		10176856	1					
ANR	10177044	Callee	CLAMP		10176856	0					
ANR	10177045	Identifier	CLAMP		10176856	0					
ANR	10177046	ArgumentList	ip [ 2 ]		10176856	1					
ANR	10177047	Argument	ip [ 2 ]		10176856	0					
ANR	10177048	ArrayIndexing	ip [ 2 ]		10176856	0					
ANR	10177049	Identifier	ip		10176856	0					
ANR	10177050	PrimaryExpression	2		10176856	1					
ANR	10177051	ExpressionStatement	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )	1042:21:30816:30848	10176856	10	True				
ANR	10177052	AssignmentExpression	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )		10176856	0		=			
ANR	10177053	ArrayIndexing	wp [ 2 ]		10176856	0					
ANR	10177054	Identifier	wp		10176856	0					
ANR	10177055	PrimaryExpression	2		10176856	1					
ANR	10177056	CastExpression	( uint16 ) ( ( b1 - b2 ) & mask )		10176856	1					
ANR	10177057	CastTarget	uint16		10176856	0					
ANR	10177058	BitAndExpression	( b1 - b2 ) & mask		10176856	1		&			
ANR	10177059	AdditiveExpression	b1 - b2		10176856	0		-			
ANR	10177060	Identifier	b1		10176856	0					
ANR	10177061	Identifier	b2		10176856	1					
ANR	10177062	Identifier	mask		10176856	1					
ANR	10177063	ExpressionStatement	b2 = b1	1042:55:30850:30857	10176856	11	True				
ANR	10177064	AssignmentExpression	b2 = b1		10176856	0		=			
ANR	10177065	Identifier	b2		10176856	0					
ANR	10177066	Identifier	b1		10176856	1					
ANR	10177067	ElseStatement	else		10176856	0					
ANR	10177068	IfStatement	if ( stride == 4 )		10176856	0					
ANR	10177069	Condition	stride == 4	1044:12:30878:30888	10176856	0	True				
ANR	10177070	EqualityExpression	stride == 4		10176856	0		==			
ANR	10177071	Identifier	stride		10176856	0					
ANR	10177072	PrimaryExpression	4		10176856	1					
ANR	10177073	CompoundStatement		22:25:598:598	10176856	1					
ANR	10177074	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1045:5:30898:30923	10176856	0	True				
ANR	10177075	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		10176856	0		=			
ANR	10177076	Identifier	r2		10176856	0					
ANR	10177077	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		10176856	1		=			
ANR	10177078	ArrayIndexing	wp [ 0 ]		10176856	0					
ANR	10177079	Identifier	wp		10176856	0					
ANR	10177080	PrimaryExpression	0		10176856	1					
ANR	10177081	CallExpression	CLAMP ( ip [ 0 ] )		10176856	1					
ANR	10177082	Callee	CLAMP		10176856	0					
ANR	10177083	Identifier	CLAMP		10176856	0					
ANR	10177084	ArgumentList	ip [ 0 ]		10176856	1					
ANR	10177085	Argument	ip [ 0 ]		10176856	0					
ANR	10177086	ArrayIndexing	ip [ 0 ]		10176856	0					
ANR	10177087	Identifier	ip		10176856	0					
ANR	10177088	PrimaryExpression	0		10176856	1					
ANR	10177089	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1045:33:30926:30951	10176856	1	True				
ANR	10177090	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		10176856	0		=			
ANR	10177091	Identifier	g2		10176856	0					
ANR	10177092	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		10176856	1		=			
ANR	10177093	ArrayIndexing	wp [ 1 ]		10176856	0					
ANR	10177094	Identifier	wp		10176856	0					
ANR	10177095	PrimaryExpression	1		10176856	1					
ANR	10177096	CallExpression	CLAMP ( ip [ 1 ] )		10176856	1					
ANR	10177097	Callee	CLAMP		10176856	0					
ANR	10177098	Identifier	CLAMP		10176856	0					
ANR	10177099	ArgumentList	ip [ 1 ]		10176856	1					
ANR	10177100	Argument	ip [ 1 ]		10176856	0					
ANR	10177101	ArrayIndexing	ip [ 1 ]		10176856	0					
ANR	10177102	Identifier	ip		10176856	0					
ANR	10177103	PrimaryExpression	1		10176856	1					
ANR	10177104	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1046:5:30958:30983	10176856	2	True				
ANR	10177105	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		10176856	0		=			
ANR	10177106	Identifier	b2		10176856	0					
ANR	10177107	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		10176856	1		=			
ANR	10177108	ArrayIndexing	wp [ 2 ]		10176856	0					
ANR	10177109	Identifier	wp		10176856	0					
ANR	10177110	PrimaryExpression	2		10176856	1					
ANR	10177111	CallExpression	CLAMP ( ip [ 2 ] )		10176856	1					
ANR	10177112	Callee	CLAMP		10176856	0					
ANR	10177113	Identifier	CLAMP		10176856	0					
ANR	10177114	ArgumentList	ip [ 2 ]		10176856	1					
ANR	10177115	Argument	ip [ 2 ]		10176856	0					
ANR	10177116	ArrayIndexing	ip [ 2 ]		10176856	0					
ANR	10177117	Identifier	ip		10176856	0					
ANR	10177118	PrimaryExpression	2		10176856	1					
ANR	10177119	ExpressionStatement	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )	1046:33:30986:31011	10176856	3	True				
ANR	10177120	AssignmentExpression	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )		10176856	0		=			
ANR	10177121	Identifier	a2		10176856	0					
ANR	10177122	AssignmentExpression	wp [ 3 ] = CLAMP ( ip [ 3 ] )		10176856	1		=			
ANR	10177123	ArrayIndexing	wp [ 3 ]		10176856	0					
ANR	10177124	Identifier	wp		10176856	0					
ANR	10177125	PrimaryExpression	3		10176856	1					
ANR	10177126	CallExpression	CLAMP ( ip [ 3 ] )		10176856	1					
ANR	10177127	Callee	CLAMP		10176856	0					
ANR	10177128	Identifier	CLAMP		10176856	0					
ANR	10177129	ArgumentList	ip [ 3 ]		10176856	1					
ANR	10177130	Argument	ip [ 3 ]		10176856	0					
ANR	10177131	ArrayIndexing	ip [ 3 ]		10176856	0					
ANR	10177132	Identifier	ip		10176856	0					
ANR	10177133	PrimaryExpression	3		10176856	1					
ANR	10177134	ExpressionStatement	n -= 4	1047:5:31018:31024	10176856	4	True				
ANR	10177135	AssignmentExpression	n -= 4		10176856	0		-=			
ANR	10177136	Identifier	n		10176856	0					
ANR	10177137	PrimaryExpression	4		10176856	1					
ANR	10177138	WhileStatement	while ( n > 0 )		10176856	5					
ANR	10177139	Condition	n > 0	1048:12:31038:31042	10176856	0	True				
ANR	10177140	RelationalExpression	n > 0		10176856	0		>			
ANR	10177141	Identifier	n		10176856	0					
ANR	10177142	PrimaryExpression	0		10176856	1					
ANR	10177143	CompoundStatement		26:19:752:752	10176856	1					
ANR	10177144	ExpressionStatement	n -= 4	1049:2:31049:31055	10176856	0	True				
ANR	10177145	AssignmentExpression	n -= 4		10176856	0		-=			
ANR	10177146	Identifier	n		10176856	0					
ANR	10177147	PrimaryExpression	4		10176856	1					
ANR	10177148	ExpressionStatement	wp += 4	1050:2:31059:31066	10176856	1	True				
ANR	10177149	AssignmentExpression	wp += 4		10176856	0		+=			
ANR	10177150	Identifier	wp		10176856	0					
ANR	10177151	PrimaryExpression	4		10176856	1					
ANR	10177152	ExpressionStatement	ip += 4	1051:2:31070:31077	10176856	2	True				
ANR	10177153	AssignmentExpression	ip += 4		10176856	0		+=			
ANR	10177154	Identifier	ip		10176856	0					
ANR	10177155	PrimaryExpression	4		10176856	1					
ANR	10177156	ExpressionStatement	r1 = CLAMP ( ip [ 0 ] )	1052:2:31081:31098	10176856	3	True				
ANR	10177157	AssignmentExpression	r1 = CLAMP ( ip [ 0 ] )		10176856	0		=			
ANR	10177158	Identifier	r1		10176856	0					
ANR	10177159	CallExpression	CLAMP ( ip [ 0 ] )		10176856	1					
ANR	10177160	Callee	CLAMP		10176856	0					
ANR	10177161	Identifier	CLAMP		10176856	0					
ANR	10177162	ArgumentList	ip [ 0 ]		10176856	1					
ANR	10177163	Argument	ip [ 0 ]		10176856	0					
ANR	10177164	ArrayIndexing	ip [ 0 ]		10176856	0					
ANR	10177165	Identifier	ip		10176856	0					
ANR	10177166	PrimaryExpression	0		10176856	1					
ANR	10177167	ExpressionStatement	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )	1052:21:31100:31132	10176856	4	True				
ANR	10177168	AssignmentExpression	wp [ 0 ] = ( uint16 ) ( ( r1 - r2 ) & mask )		10176856	0		=			
ANR	10177169	ArrayIndexing	wp [ 0 ]		10176856	0					
ANR	10177170	Identifier	wp		10176856	0					
ANR	10177171	PrimaryExpression	0		10176856	1					
ANR	10177172	CastExpression	( uint16 ) ( ( r1 - r2 ) & mask )		10176856	1					
ANR	10177173	CastTarget	uint16		10176856	0					
ANR	10177174	BitAndExpression	( r1 - r2 ) & mask		10176856	1		&			
ANR	10177175	AdditiveExpression	r1 - r2		10176856	0		-			
ANR	10177176	Identifier	r1		10176856	0					
ANR	10177177	Identifier	r2		10176856	1					
ANR	10177178	Identifier	mask		10176856	1					
ANR	10177179	ExpressionStatement	r2 = r1	1052:55:31134:31141	10176856	5	True				
ANR	10177180	AssignmentExpression	r2 = r1		10176856	0		=			
ANR	10177181	Identifier	r2		10176856	0					
ANR	10177182	Identifier	r1		10176856	1					
ANR	10177183	ExpressionStatement	g1 = CLAMP ( ip [ 1 ] )	1053:2:31145:31162	10176856	6	True				
ANR	10177184	AssignmentExpression	g1 = CLAMP ( ip [ 1 ] )		10176856	0		=			
ANR	10177185	Identifier	g1		10176856	0					
ANR	10177186	CallExpression	CLAMP ( ip [ 1 ] )		10176856	1					
ANR	10177187	Callee	CLAMP		10176856	0					
ANR	10177188	Identifier	CLAMP		10176856	0					
ANR	10177189	ArgumentList	ip [ 1 ]		10176856	1					
ANR	10177190	Argument	ip [ 1 ]		10176856	0					
ANR	10177191	ArrayIndexing	ip [ 1 ]		10176856	0					
ANR	10177192	Identifier	ip		10176856	0					
ANR	10177193	PrimaryExpression	1		10176856	1					
ANR	10177194	ExpressionStatement	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )	1053:21:31164:31196	10176856	7	True				
ANR	10177195	AssignmentExpression	wp [ 1 ] = ( uint16 ) ( ( g1 - g2 ) & mask )		10176856	0		=			
ANR	10177196	ArrayIndexing	wp [ 1 ]		10176856	0					
ANR	10177197	Identifier	wp		10176856	0					
ANR	10177198	PrimaryExpression	1		10176856	1					
ANR	10177199	CastExpression	( uint16 ) ( ( g1 - g2 ) & mask )		10176856	1					
ANR	10177200	CastTarget	uint16		10176856	0					
ANR	10177201	BitAndExpression	( g1 - g2 ) & mask		10176856	1		&			
ANR	10177202	AdditiveExpression	g1 - g2		10176856	0		-			
ANR	10177203	Identifier	g1		10176856	0					
ANR	10177204	Identifier	g2		10176856	1					
ANR	10177205	Identifier	mask		10176856	1					
ANR	10177206	ExpressionStatement	g2 = g1	1053:55:31198:31205	10176856	8	True				
ANR	10177207	AssignmentExpression	g2 = g1		10176856	0		=			
ANR	10177208	Identifier	g2		10176856	0					
ANR	10177209	Identifier	g1		10176856	1					
ANR	10177210	ExpressionStatement	b1 = CLAMP ( ip [ 2 ] )	1054:2:31209:31226	10176856	9	True				
ANR	10177211	AssignmentExpression	b1 = CLAMP ( ip [ 2 ] )		10176856	0		=			
ANR	10177212	Identifier	b1		10176856	0					
ANR	10177213	CallExpression	CLAMP ( ip [ 2 ] )		10176856	1					
ANR	10177214	Callee	CLAMP		10176856	0					
ANR	10177215	Identifier	CLAMP		10176856	0					
ANR	10177216	ArgumentList	ip [ 2 ]		10176856	1					
ANR	10177217	Argument	ip [ 2 ]		10176856	0					
ANR	10177218	ArrayIndexing	ip [ 2 ]		10176856	0					
ANR	10177219	Identifier	ip		10176856	0					
ANR	10177220	PrimaryExpression	2		10176856	1					
ANR	10177221	ExpressionStatement	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )	1054:21:31228:31260	10176856	10	True				
ANR	10177222	AssignmentExpression	wp [ 2 ] = ( uint16 ) ( ( b1 - b2 ) & mask )		10176856	0		=			
ANR	10177223	ArrayIndexing	wp [ 2 ]		10176856	0					
ANR	10177224	Identifier	wp		10176856	0					
ANR	10177225	PrimaryExpression	2		10176856	1					
ANR	10177226	CastExpression	( uint16 ) ( ( b1 - b2 ) & mask )		10176856	1					
ANR	10177227	CastTarget	uint16		10176856	0					
ANR	10177228	BitAndExpression	( b1 - b2 ) & mask		10176856	1		&			
ANR	10177229	AdditiveExpression	b1 - b2		10176856	0		-			
ANR	10177230	Identifier	b1		10176856	0					
ANR	10177231	Identifier	b2		10176856	1					
ANR	10177232	Identifier	mask		10176856	1					
ANR	10177233	ExpressionStatement	b2 = b1	1054:55:31262:31269	10176856	11	True				
ANR	10177234	AssignmentExpression	b2 = b1		10176856	0		=			
ANR	10177235	Identifier	b2		10176856	0					
ANR	10177236	Identifier	b1		10176856	1					
ANR	10177237	ExpressionStatement	a1 = CLAMP ( ip [ 3 ] )	1055:2:31273:31290	10176856	12	True				
ANR	10177238	AssignmentExpression	a1 = CLAMP ( ip [ 3 ] )		10176856	0		=			
ANR	10177239	Identifier	a1		10176856	0					
ANR	10177240	CallExpression	CLAMP ( ip [ 3 ] )		10176856	1					
ANR	10177241	Callee	CLAMP		10176856	0					
ANR	10177242	Identifier	CLAMP		10176856	0					
ANR	10177243	ArgumentList	ip [ 3 ]		10176856	1					
ANR	10177244	Argument	ip [ 3 ]		10176856	0					
ANR	10177245	ArrayIndexing	ip [ 3 ]		10176856	0					
ANR	10177246	Identifier	ip		10176856	0					
ANR	10177247	PrimaryExpression	3		10176856	1					
ANR	10177248	ExpressionStatement	wp [ 3 ] = ( uint16 ) ( ( a1 - a2 ) & mask )	1055:21:31292:31324	10176856	13	True				
ANR	10177249	AssignmentExpression	wp [ 3 ] = ( uint16 ) ( ( a1 - a2 ) & mask )		10176856	0		=			
ANR	10177250	ArrayIndexing	wp [ 3 ]		10176856	0					
ANR	10177251	Identifier	wp		10176856	0					
ANR	10177252	PrimaryExpression	3		10176856	1					
ANR	10177253	CastExpression	( uint16 ) ( ( a1 - a2 ) & mask )		10176856	1					
ANR	10177254	CastTarget	uint16		10176856	0					
ANR	10177255	BitAndExpression	( a1 - a2 ) & mask		10176856	1		&			
ANR	10177256	AdditiveExpression	a1 - a2		10176856	0		-			
ANR	10177257	Identifier	a1		10176856	0					
ANR	10177258	Identifier	a2		10176856	1					
ANR	10177259	Identifier	mask		10176856	1					
ANR	10177260	ExpressionStatement	a2 = a1	1055:55:31326:31333	10176856	14	True				
ANR	10177261	AssignmentExpression	a2 = a1		10176856	0		=			
ANR	10177262	Identifier	a2		10176856	0					
ANR	10177263	Identifier	a1		10176856	1					
ANR	10177264	ElseStatement	else		10176856	0					
ANR	10177265	CompoundStatement		35:8:1057:1057	10176856	0					
ANR	10177266	Statement	REPEAT	1058:8:31360:31365	10176856	0	True				
ANR	10177267	Statement	(	1058:14:31366:31366	10176856	1	True				
ANR	10177268	ExpressionStatement	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"	1058:15:31367:31395	10176856	2	True				
ANR	10177269	Expression	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"		10176856	0					
ANR	10177270	Identifier	stride		10176856	0					
ANR	10177271	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		10176856	1		=			
ANR	10177272	ArrayIndexing	wp [ 0 ]		10176856	0					
ANR	10177273	Identifier	wp		10176856	0					
ANR	10177274	PrimaryExpression	0		10176856	1					
ANR	10177275	CallExpression	CLAMP ( ip [ 0 ] )		10176856	1					
ANR	10177276	Callee	CLAMP		10176856	0					
ANR	10177277	Identifier	CLAMP		10176856	0					
ANR	10177278	ArgumentList	ip [ 0 ]		10176856	1					
ANR	10177279	Argument	ip [ 0 ]		10176856	0					
ANR	10177280	ArrayIndexing	ip [ 0 ]		10176856	0					
ANR	10177281	Identifier	ip		10176856	0					
ANR	10177282	PrimaryExpression	0		10176856	1					
ANR	10177283	ExpressionStatement	wp ++	1058:45:31397:31401	10176856	3	True				
ANR	10177284	PostIncDecOperationExpression	wp ++		10176856	0					
ANR	10177285	Identifier	wp		10176856	0					
ANR	10177286	IncDec	++		10176856	1					
ANR	10177287	Statement	ip	1058:51:31403:31404	10176856	4	True				
ANR	10177288	Statement	++	1058:53:31405:31406	10176856	5	True				
ANR	10177289	Statement	)	1058:55:31407:31407	10176856	6	True				
ANR	10177290	ExpressionStatement	n -= stride	1059:5:31414:31425	10176856	7	True				
ANR	10177291	AssignmentExpression	n -= stride		10176856	0		-=			
ANR	10177292	Identifier	n		10176856	0					
ANR	10177293	Identifier	stride		10176856	1					
ANR	10177294	WhileStatement	while ( n > 0 )		10176856	8					
ANR	10177295	Condition	n > 0	1060:12:31439:31443	10176856	0	True				
ANR	10177296	RelationalExpression	n > 0		10176856	0		>			
ANR	10177297	Identifier	n		10176856	0					
ANR	10177298	PrimaryExpression	0		10176856	1					
ANR	10177299	CompoundStatement		38:19:1153:1153	10176856	1					
ANR	10177300	Statement	REPEAT	1061:12:31460:31465	10176856	0	True				
ANR	10177301	Statement	(	1061:18:31466:31466	10176856	1	True				
ANR	10177302	ExpressionStatement	"stride , wp [ 0 ] = ( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )"	1061:19:31467:31549	10176856	2	True				
ANR	10177303	Expression	"stride , wp [ 0 ] = ( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )"		10176856	0					
ANR	10177304	Identifier	stride		10176856	0					
ANR	10177305	AssignmentExpression	wp [ 0 ] = ( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )		10176856	1		=			
ANR	10177306	ArrayIndexing	wp [ 0 ]		10176856	0					
ANR	10177307	Identifier	wp		10176856	0					
ANR	10177308	PrimaryExpression	0		10176856	1					
ANR	10177309	CastExpression	( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )		10176856	1					
ANR	10177310	CastTarget	uint16		10176856	0					
ANR	10177311	BitAndExpression	( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask		10176856	1		&			
ANR	10177312	AdditiveExpression	CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] )		10176856	0		-			
ANR	10177313	CallExpression	CLAMP ( ip [ 0 ] )		10176856	0					
ANR	10177314	Callee	CLAMP		10176856	0					
ANR	10177315	Identifier	CLAMP		10176856	0					
ANR	10177316	ArgumentList	ip [ 0 ]		10176856	1					
ANR	10177317	Argument	ip [ 0 ]		10176856	0					
ANR	10177318	ArrayIndexing	ip [ 0 ]		10176856	0					
ANR	10177319	Identifier	ip		10176856	0					
ANR	10177320	PrimaryExpression	0		10176856	1					
ANR	10177321	CallExpression	CLAMP ( ip [ - stride ] )		10176856	1					
ANR	10177322	Callee	CLAMP		10176856	0					
ANR	10177323	Identifier	CLAMP		10176856	0					
ANR	10177324	ArgumentList	ip [ - stride ]		10176856	1					
ANR	10177325	Argument	ip [ - stride ]		10176856	0					
ANR	10177326	ArrayIndexing	ip [ - stride ]		10176856	0					
ANR	10177327	Identifier	ip		10176856	0					
ANR	10177328	UnaryOperationExpression	- stride		10176856	1					
ANR	10177329	UnaryOperator	-		10176856	0					
ANR	10177330	Identifier	stride		10176856	1					
ANR	10177331	Identifier	mask		10176856	1					
ANR	10177332	ExpressionStatement	wp ++	1063:16:31567:31571	10176856	3	True				
ANR	10177333	PostIncDecOperationExpression	wp ++		10176856	0					
ANR	10177334	Identifier	wp		10176856	0					
ANR	10177335	IncDec	++		10176856	1					
ANR	10177336	Statement	ip	1063:22:31573:31574	10176856	4	True				
ANR	10177337	Statement	++	1063:24:31575:31576	10176856	5	True				
ANR	10177338	Statement	)	1063:26:31577:31577	10176856	6	True				
ANR	10177339	ExpressionStatement	n -= stride	1064:12:31591:31602	10176856	7	True				
ANR	10177340	AssignmentExpression	n -= stride		10176856	0		-=			
ANR	10177341	Identifier	n		10176856	0					
ANR	10177342	Identifier	stride		10176856	1					
ANR	10177343	ReturnType	static void		10176856	1					
ANR	10177344	Identifier	horizontalDifference16		10176856	2					
ANR	10177345	ParameterList	"unsigned short * ip , int n , int stride , unsigned short * wp , uint16 * From14"		10176856	3					
ANR	10177346	Parameter	unsigned short * ip	1021:23:30215:30232	10176856	0	True				
ANR	10177347	ParameterType	unsigned short *		10176856	0					
ANR	10177348	Identifier	ip		10176856	1					
ANR	10177349	Parameter	int n	1021:43:30235:30239	10176856	1	True				
ANR	10177350	ParameterType	int		10176856	0					
ANR	10177351	Identifier	n		10176856	1					
ANR	10177352	Parameter	int stride	1021:50:30242:30251	10176856	2	True				
ANR	10177353	ParameterType	int		10176856	0					
ANR	10177354	Identifier	stride		10176856	1					
ANR	10177355	Parameter	unsigned short * wp	1022:1:30256:30273	10176856	3	True				
ANR	10177356	ParameterType	unsigned short *		10176856	0					
ANR	10177357	Identifier	wp		10176856	1					
ANR	10177358	Parameter	uint16 * From14	1022:21:30276:30289	10176856	4	True				
ANR	10177359	ParameterType	uint16 *		10176856	0					
ANR	10177360	Identifier	From14		10176856	1					
ANR	10177361	CFGEntryNode	ENTRY		10176856		True				
ANR	10177362	CFGExitNode	EXIT		10176856		True				
ANR	10177363	Symbol	From14		10176856						
ANR	10177364	Symbol	r2		10176856						
ANR	10177365	Symbol	* stride		10176856						
ANR	10177366	Symbol	ip		10176856						
ANR	10177367	Symbol	CLAMP		10176856						
ANR	10177368	Symbol	g1		10176856						
ANR	10177369	Symbol	g2		10176856						
ANR	10177370	Symbol	stride		10176856						
ANR	10177371	Symbol	n		10176856						
ANR	10177372	Symbol	* ip		10176856						
ANR	10177373	Symbol	b1		10176856						
ANR	10177374	Symbol	a1		10176856						
ANR	10177375	Symbol	b2		10176856						
ANR	10177376	Symbol	a2		10176856						
ANR	10177377	Symbol	CODE_MASK		10176856						
ANR	10177378	Symbol	wp		10176856						
ANR	10177379	Symbol	* wp		10176856						
ANR	10177380	Symbol	r1		10176856						
ANR	10177381	Symbol	mask		10176856						
ANR	10177382	Function	horizontalDifference8	1071:0:31627:33029							
ANR	10177383	FunctionDef	"horizontalDifference8 (unsigned char * ip , int n , int stride , unsigned short * wp , uint16 * From8)"		10177382	0					
ANR	10177384	CompoundStatement		1074:0:31736:33029	10177382	0					
ANR	10177385	Statement	register	1075:4:31742:31749	10177382	0	True				
ANR	10177386	IdentifierDeclStatement	"int r1 , g1 , b1 , a1 , r2 , g2 , b2 , a2 , mask ;"	1075:13:31751:31792	10177382	1	True				
ANR	10177387	IdentifierDecl	r1		10177382	0					
ANR	10177388	IdentifierDeclType	int		10177382	0					
ANR	10177389	Identifier	r1		10177382	1					
ANR	10177390	IdentifierDecl	g1		10177382	1					
ANR	10177391	IdentifierDeclType	int		10177382	0					
ANR	10177392	Identifier	g1		10177382	1					
ANR	10177393	IdentifierDecl	b1		10177382	2					
ANR	10177394	IdentifierDeclType	int		10177382	0					
ANR	10177395	Identifier	b1		10177382	1					
ANR	10177396	IdentifierDecl	a1		10177382	3					
ANR	10177397	IdentifierDeclType	int		10177382	0					
ANR	10177398	Identifier	a1		10177382	1					
ANR	10177399	IdentifierDecl	r2		10177382	4					
ANR	10177400	IdentifierDeclType	int		10177382	0					
ANR	10177401	Identifier	r2		10177382	1					
ANR	10177402	IdentifierDecl	g2		10177382	5					
ANR	10177403	IdentifierDeclType	int		10177382	0					
ANR	10177404	Identifier	g2		10177382	1					
ANR	10177405	IdentifierDecl	b2		10177382	6					
ANR	10177406	IdentifierDeclType	int		10177382	0					
ANR	10177407	Identifier	b2		10177382	1					
ANR	10177408	IdentifierDecl	a2		10177382	7					
ANR	10177409	IdentifierDeclType	int		10177382	0					
ANR	10177410	Identifier	a2		10177382	1					
ANR	10177411	IdentifierDecl	mask		10177382	8					
ANR	10177412	IdentifierDeclType	int		10177382	0					
ANR	10177413	Identifier	mask		10177382	1					
ANR	10177414	Statement	undef	1077:1:31796:31800	10177382	2	True				
ANR	10177415	Statement	CLAMP	1077:8:31803:31807	10177382	3	True				
ANR	10177416	Statement	define	1078:1:31810:31815	10177382	4	True				
ANR	10177417	Statement	CLAMP	1078:9:31818:31822	10177382	5	True				
ANR	10177418	Statement	(	1078:14:31823:31823	10177382	6	True				
ANR	10177419	Statement	v	1078:15:31824:31824	10177382	7	True				
ANR	10177420	Statement	)	1078:16:31825:31825	10177382	8	True				
ANR	10177421	Statement	(	1078:18:31827:31827	10177382	9	True				
ANR	10177422	Statement	From8	1078:19:31828:31832	10177382	10	True				
ANR	10177423	Statement	[	1078:24:31833:31833	10177382	11	True				
ANR	10177424	Statement	(	1078:25:31834:31834	10177382	12	True				
ANR	10177425	Statement	v	1078:26:31835:31835	10177382	13	True				
ANR	10177426	Statement	)	1078:27:31836:31836	10177382	14	True				
ANR	10177427	Statement	]	1078:28:31837:31837	10177382	15	True				
ANR	10177428	Statement	)	1078:29:31838:31838	10177382	16	True				
ANR	10177429	ExpressionStatement	mask = CODE_MASK	1080:4:31845:31861	10177382	17	True				
ANR	10177430	AssignmentExpression	mask = CODE_MASK		10177382	0		=			
ANR	10177431	Identifier	mask		10177382	0					
ANR	10177432	Identifier	CODE_MASK		10177382	1					
ANR	10177433	IfStatement	if ( n >= stride )		10177382	18					
ANR	10177434	Condition	n >= stride	1081:8:31871:31881	10177382	0	True				
ANR	10177435	RelationalExpression	n >= stride		10177382	0		>=			
ANR	10177436	Identifier	n		10177382	0					
ANR	10177437	Identifier	stride		10177382	1					
ANR	10177438	CompoundStatement		8:21:147:147	10177382	1					
ANR	10177439	IfStatement	if ( stride == 3 )		10177382	0					
ANR	10177440	Condition	stride == 3	1082:5:31891:31901	10177382	0	True				
ANR	10177441	EqualityExpression	stride == 3		10177382	0		==			
ANR	10177442	Identifier	stride		10177382	0					
ANR	10177443	PrimaryExpression	3		10177382	1					
ANR	10177444	CompoundStatement		9:18:167:167	10177382	1					
ANR	10177445	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1083:5:31911:31936	10177382	0	True				
ANR	10177446	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		10177382	0		=			
ANR	10177447	Identifier	r2		10177382	0					
ANR	10177448	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		10177382	1		=			
ANR	10177449	ArrayIndexing	wp [ 0 ]		10177382	0					
ANR	10177450	Identifier	wp		10177382	0					
ANR	10177451	PrimaryExpression	0		10177382	1					
ANR	10177452	CallExpression	CLAMP ( ip [ 0 ] )		10177382	1					
ANR	10177453	Callee	CLAMP		10177382	0					
ANR	10177454	Identifier	CLAMP		10177382	0					
ANR	10177455	ArgumentList	ip [ 0 ]		10177382	1					
ANR	10177456	Argument	ip [ 0 ]		10177382	0					
ANR	10177457	ArrayIndexing	ip [ 0 ]		10177382	0					
ANR	10177458	Identifier	ip		10177382	0					
ANR	10177459	PrimaryExpression	0		10177382	1					
ANR	10177460	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1083:33:31939:31964	10177382	1	True				
ANR	10177461	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		10177382	0		=			
ANR	10177462	Identifier	g2		10177382	0					
ANR	10177463	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		10177382	1		=			
ANR	10177464	ArrayIndexing	wp [ 1 ]		10177382	0					
ANR	10177465	Identifier	wp		10177382	0					
ANR	10177466	PrimaryExpression	1		10177382	1					
ANR	10177467	CallExpression	CLAMP ( ip [ 1 ] )		10177382	1					
ANR	10177468	Callee	CLAMP		10177382	0					
ANR	10177469	Identifier	CLAMP		10177382	0					
ANR	10177470	ArgumentList	ip [ 1 ]		10177382	1					
ANR	10177471	Argument	ip [ 1 ]		10177382	0					
ANR	10177472	ArrayIndexing	ip [ 1 ]		10177382	0					
ANR	10177473	Identifier	ip		10177382	0					
ANR	10177474	PrimaryExpression	1		10177382	1					
ANR	10177475	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1084:5:31971:31996	10177382	2	True				
ANR	10177476	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		10177382	0		=			
ANR	10177477	Identifier	b2		10177382	0					
ANR	10177478	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		10177382	1		=			
ANR	10177479	ArrayIndexing	wp [ 2 ]		10177382	0					
ANR	10177480	Identifier	wp		10177382	0					
ANR	10177481	PrimaryExpression	2		10177382	1					
ANR	10177482	CallExpression	CLAMP ( ip [ 2 ] )		10177382	1					
ANR	10177483	Callee	CLAMP		10177382	0					
ANR	10177484	Identifier	CLAMP		10177382	0					
ANR	10177485	ArgumentList	ip [ 2 ]		10177382	1					
ANR	10177486	Argument	ip [ 2 ]		10177382	0					
ANR	10177487	ArrayIndexing	ip [ 2 ]		10177382	0					
ANR	10177488	Identifier	ip		10177382	0					
ANR	10177489	PrimaryExpression	2		10177382	1					
ANR	10177490	ExpressionStatement	n -= 3	1085:5:32003:32009	10177382	3	True				
ANR	10177491	AssignmentExpression	n -= 3		10177382	0		-=			
ANR	10177492	Identifier	n		10177382	0					
ANR	10177493	PrimaryExpression	3		10177382	1					
ANR	10177494	WhileStatement	while ( n > 0 )		10177382	4					
ANR	10177495	Condition	n > 0	1086:12:32023:32027	10177382	0	True				
ANR	10177496	RelationalExpression	n > 0		10177382	0		>			
ANR	10177497	Identifier	n		10177382	0					
ANR	10177498	PrimaryExpression	0		10177382	1					
ANR	10177499	CompoundStatement		13:19:293:293	10177382	1					
ANR	10177500	ExpressionStatement	n -= 3	1087:2:32034:32040	10177382	0	True				
ANR	10177501	AssignmentExpression	n -= 3		10177382	0		-=			
ANR	10177502	Identifier	n		10177382	0					
ANR	10177503	PrimaryExpression	3		10177382	1					
ANR	10177504	ExpressionStatement	r1 = CLAMP ( ip [ 3 ] )	1088:2:32044:32061	10177382	1	True				
ANR	10177505	AssignmentExpression	r1 = CLAMP ( ip [ 3 ] )		10177382	0		=			
ANR	10177506	Identifier	r1		10177382	0					
ANR	10177507	CallExpression	CLAMP ( ip [ 3 ] )		10177382	1					
ANR	10177508	Callee	CLAMP		10177382	0					
ANR	10177509	Identifier	CLAMP		10177382	0					
ANR	10177510	ArgumentList	ip [ 3 ]		10177382	1					
ANR	10177511	Argument	ip [ 3 ]		10177382	0					
ANR	10177512	ArrayIndexing	ip [ 3 ]		10177382	0					
ANR	10177513	Identifier	ip		10177382	0					
ANR	10177514	PrimaryExpression	3		10177382	1					
ANR	10177515	ExpressionStatement	wp [ 3 ] = ( uint16 ) ( ( r1 - r2 ) & mask )	1088:21:32063:32095	10177382	2	True				
ANR	10177516	AssignmentExpression	wp [ 3 ] = ( uint16 ) ( ( r1 - r2 ) & mask )		10177382	0		=			
ANR	10177517	ArrayIndexing	wp [ 3 ]		10177382	0					
ANR	10177518	Identifier	wp		10177382	0					
ANR	10177519	PrimaryExpression	3		10177382	1					
ANR	10177520	CastExpression	( uint16 ) ( ( r1 - r2 ) & mask )		10177382	1					
ANR	10177521	CastTarget	uint16		10177382	0					
ANR	10177522	BitAndExpression	( r1 - r2 ) & mask		10177382	1		&			
ANR	10177523	AdditiveExpression	r1 - r2		10177382	0		-			
ANR	10177524	Identifier	r1		10177382	0					
ANR	10177525	Identifier	r2		10177382	1					
ANR	10177526	Identifier	mask		10177382	1					
ANR	10177527	ExpressionStatement	r2 = r1	1088:55:32097:32104	10177382	3	True				
ANR	10177528	AssignmentExpression	r2 = r1		10177382	0		=			
ANR	10177529	Identifier	r2		10177382	0					
ANR	10177530	Identifier	r1		10177382	1					
ANR	10177531	ExpressionStatement	g1 = CLAMP ( ip [ 4 ] )	1089:2:32108:32125	10177382	4	True				
ANR	10177532	AssignmentExpression	g1 = CLAMP ( ip [ 4 ] )		10177382	0		=			
ANR	10177533	Identifier	g1		10177382	0					
ANR	10177534	CallExpression	CLAMP ( ip [ 4 ] )		10177382	1					
ANR	10177535	Callee	CLAMP		10177382	0					
ANR	10177536	Identifier	CLAMP		10177382	0					
ANR	10177537	ArgumentList	ip [ 4 ]		10177382	1					
ANR	10177538	Argument	ip [ 4 ]		10177382	0					
ANR	10177539	ArrayIndexing	ip [ 4 ]		10177382	0					
ANR	10177540	Identifier	ip		10177382	0					
ANR	10177541	PrimaryExpression	4		10177382	1					
ANR	10177542	ExpressionStatement	wp [ 4 ] = ( uint16 ) ( ( g1 - g2 ) & mask )	1089:21:32127:32159	10177382	5	True				
ANR	10177543	AssignmentExpression	wp [ 4 ] = ( uint16 ) ( ( g1 - g2 ) & mask )		10177382	0		=			
ANR	10177544	ArrayIndexing	wp [ 4 ]		10177382	0					
ANR	10177545	Identifier	wp		10177382	0					
ANR	10177546	PrimaryExpression	4		10177382	1					
ANR	10177547	CastExpression	( uint16 ) ( ( g1 - g2 ) & mask )		10177382	1					
ANR	10177548	CastTarget	uint16		10177382	0					
ANR	10177549	BitAndExpression	( g1 - g2 ) & mask		10177382	1		&			
ANR	10177550	AdditiveExpression	g1 - g2		10177382	0		-			
ANR	10177551	Identifier	g1		10177382	0					
ANR	10177552	Identifier	g2		10177382	1					
ANR	10177553	Identifier	mask		10177382	1					
ANR	10177554	ExpressionStatement	g2 = g1	1089:55:32161:32168	10177382	6	True				
ANR	10177555	AssignmentExpression	g2 = g1		10177382	0		=			
ANR	10177556	Identifier	g2		10177382	0					
ANR	10177557	Identifier	g1		10177382	1					
ANR	10177558	ExpressionStatement	b1 = CLAMP ( ip [ 5 ] )	1090:2:32172:32189	10177382	7	True				
ANR	10177559	AssignmentExpression	b1 = CLAMP ( ip [ 5 ] )		10177382	0		=			
ANR	10177560	Identifier	b1		10177382	0					
ANR	10177561	CallExpression	CLAMP ( ip [ 5 ] )		10177382	1					
ANR	10177562	Callee	CLAMP		10177382	0					
ANR	10177563	Identifier	CLAMP		10177382	0					
ANR	10177564	ArgumentList	ip [ 5 ]		10177382	1					
ANR	10177565	Argument	ip [ 5 ]		10177382	0					
ANR	10177566	ArrayIndexing	ip [ 5 ]		10177382	0					
ANR	10177567	Identifier	ip		10177382	0					
ANR	10177568	PrimaryExpression	5		10177382	1					
ANR	10177569	ExpressionStatement	wp [ 5 ] = ( uint16 ) ( ( b1 - b2 ) & mask )	1090:21:32191:32223	10177382	8	True				
ANR	10177570	AssignmentExpression	wp [ 5 ] = ( uint16 ) ( ( b1 - b2 ) & mask )		10177382	0		=			
ANR	10177571	ArrayIndexing	wp [ 5 ]		10177382	0					
ANR	10177572	Identifier	wp		10177382	0					
ANR	10177573	PrimaryExpression	5		10177382	1					
ANR	10177574	CastExpression	( uint16 ) ( ( b1 - b2 ) & mask )		10177382	1					
ANR	10177575	CastTarget	uint16		10177382	0					
ANR	10177576	BitAndExpression	( b1 - b2 ) & mask		10177382	1		&			
ANR	10177577	AdditiveExpression	b1 - b2		10177382	0		-			
ANR	10177578	Identifier	b1		10177382	0					
ANR	10177579	Identifier	b2		10177382	1					
ANR	10177580	Identifier	mask		10177382	1					
ANR	10177581	ExpressionStatement	b2 = b1	1090:55:32225:32232	10177382	9	True				
ANR	10177582	AssignmentExpression	b2 = b1		10177382	0		=			
ANR	10177583	Identifier	b2		10177382	0					
ANR	10177584	Identifier	b1		10177382	1					
ANR	10177585	ExpressionStatement	wp += 3	1091:2:32236:32243	10177382	10	True				
ANR	10177586	AssignmentExpression	wp += 3		10177382	0		+=			
ANR	10177587	Identifier	wp		10177382	0					
ANR	10177588	PrimaryExpression	3		10177382	1					
ANR	10177589	ExpressionStatement	ip += 3	1092:2:32247:32254	10177382	11	True				
ANR	10177590	AssignmentExpression	ip += 3		10177382	0		+=			
ANR	10177591	Identifier	ip		10177382	0					
ANR	10177592	PrimaryExpression	3		10177382	1					
ANR	10177593	ElseStatement	else		10177382	0					
ANR	10177594	IfStatement	if ( stride == 4 )		10177382	0					
ANR	10177595	Condition	stride == 4	1094:12:32275:32285	10177382	0	True				
ANR	10177596	EqualityExpression	stride == 4		10177382	0		==			
ANR	10177597	Identifier	stride		10177382	0					
ANR	10177598	PrimaryExpression	4		10177382	1					
ANR	10177599	CompoundStatement		21:25:551:551	10177382	1					
ANR	10177600	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1095:5:32295:32320	10177382	0	True				
ANR	10177601	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		10177382	0		=			
ANR	10177602	Identifier	r2		10177382	0					
ANR	10177603	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		10177382	1		=			
ANR	10177604	ArrayIndexing	wp [ 0 ]		10177382	0					
ANR	10177605	Identifier	wp		10177382	0					
ANR	10177606	PrimaryExpression	0		10177382	1					
ANR	10177607	CallExpression	CLAMP ( ip [ 0 ] )		10177382	1					
ANR	10177608	Callee	CLAMP		10177382	0					
ANR	10177609	Identifier	CLAMP		10177382	0					
ANR	10177610	ArgumentList	ip [ 0 ]		10177382	1					
ANR	10177611	Argument	ip [ 0 ]		10177382	0					
ANR	10177612	ArrayIndexing	ip [ 0 ]		10177382	0					
ANR	10177613	Identifier	ip		10177382	0					
ANR	10177614	PrimaryExpression	0		10177382	1					
ANR	10177615	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1095:33:32323:32348	10177382	1	True				
ANR	10177616	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		10177382	0		=			
ANR	10177617	Identifier	g2		10177382	0					
ANR	10177618	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		10177382	1		=			
ANR	10177619	ArrayIndexing	wp [ 1 ]		10177382	0					
ANR	10177620	Identifier	wp		10177382	0					
ANR	10177621	PrimaryExpression	1		10177382	1					
ANR	10177622	CallExpression	CLAMP ( ip [ 1 ] )		10177382	1					
ANR	10177623	Callee	CLAMP		10177382	0					
ANR	10177624	Identifier	CLAMP		10177382	0					
ANR	10177625	ArgumentList	ip [ 1 ]		10177382	1					
ANR	10177626	Argument	ip [ 1 ]		10177382	0					
ANR	10177627	ArrayIndexing	ip [ 1 ]		10177382	0					
ANR	10177628	Identifier	ip		10177382	0					
ANR	10177629	PrimaryExpression	1		10177382	1					
ANR	10177630	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1096:5:32355:32380	10177382	2	True				
ANR	10177631	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		10177382	0		=			
ANR	10177632	Identifier	b2		10177382	0					
ANR	10177633	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		10177382	1		=			
ANR	10177634	ArrayIndexing	wp [ 2 ]		10177382	0					
ANR	10177635	Identifier	wp		10177382	0					
ANR	10177636	PrimaryExpression	2		10177382	1					
ANR	10177637	CallExpression	CLAMP ( ip [ 2 ] )		10177382	1					
ANR	10177638	Callee	CLAMP		10177382	0					
ANR	10177639	Identifier	CLAMP		10177382	0					
ANR	10177640	ArgumentList	ip [ 2 ]		10177382	1					
ANR	10177641	Argument	ip [ 2 ]		10177382	0					
ANR	10177642	ArrayIndexing	ip [ 2 ]		10177382	0					
ANR	10177643	Identifier	ip		10177382	0					
ANR	10177644	PrimaryExpression	2		10177382	1					
ANR	10177645	ExpressionStatement	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )	1096:33:32383:32408	10177382	3	True				
ANR	10177646	AssignmentExpression	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )		10177382	0		=			
ANR	10177647	Identifier	a2		10177382	0					
ANR	10177648	AssignmentExpression	wp [ 3 ] = CLAMP ( ip [ 3 ] )		10177382	1		=			
ANR	10177649	ArrayIndexing	wp [ 3 ]		10177382	0					
ANR	10177650	Identifier	wp		10177382	0					
ANR	10177651	PrimaryExpression	3		10177382	1					
ANR	10177652	CallExpression	CLAMP ( ip [ 3 ] )		10177382	1					
ANR	10177653	Callee	CLAMP		10177382	0					
ANR	10177654	Identifier	CLAMP		10177382	0					
ANR	10177655	ArgumentList	ip [ 3 ]		10177382	1					
ANR	10177656	Argument	ip [ 3 ]		10177382	0					
ANR	10177657	ArrayIndexing	ip [ 3 ]		10177382	0					
ANR	10177658	Identifier	ip		10177382	0					
ANR	10177659	PrimaryExpression	3		10177382	1					
ANR	10177660	ExpressionStatement	n -= 4	1097:5:32415:32421	10177382	4	True				
ANR	10177661	AssignmentExpression	n -= 4		10177382	0		-=			
ANR	10177662	Identifier	n		10177382	0					
ANR	10177663	PrimaryExpression	4		10177382	1					
ANR	10177664	WhileStatement	while ( n > 0 )		10177382	5					
ANR	10177665	Condition	n > 0	1098:12:32435:32439	10177382	0	True				
ANR	10177666	RelationalExpression	n > 0		10177382	0		>			
ANR	10177667	Identifier	n		10177382	0					
ANR	10177668	PrimaryExpression	0		10177382	1					
ANR	10177669	CompoundStatement		25:19:705:705	10177382	1					
ANR	10177670	ExpressionStatement	n -= 4	1099:2:32446:32452	10177382	0	True				
ANR	10177671	AssignmentExpression	n -= 4		10177382	0		-=			
ANR	10177672	Identifier	n		10177382	0					
ANR	10177673	PrimaryExpression	4		10177382	1					
ANR	10177674	ExpressionStatement	r1 = CLAMP ( ip [ 4 ] )	1100:2:32456:32473	10177382	1	True				
ANR	10177675	AssignmentExpression	r1 = CLAMP ( ip [ 4 ] )		10177382	0		=			
ANR	10177676	Identifier	r1		10177382	0					
ANR	10177677	CallExpression	CLAMP ( ip [ 4 ] )		10177382	1					
ANR	10177678	Callee	CLAMP		10177382	0					
ANR	10177679	Identifier	CLAMP		10177382	0					
ANR	10177680	ArgumentList	ip [ 4 ]		10177382	1					
ANR	10177681	Argument	ip [ 4 ]		10177382	0					
ANR	10177682	ArrayIndexing	ip [ 4 ]		10177382	0					
ANR	10177683	Identifier	ip		10177382	0					
ANR	10177684	PrimaryExpression	4		10177382	1					
ANR	10177685	ExpressionStatement	wp [ 4 ] = ( uint16 ) ( ( r1 - r2 ) & mask )	1100:21:32475:32507	10177382	2	True				
ANR	10177686	AssignmentExpression	wp [ 4 ] = ( uint16 ) ( ( r1 - r2 ) & mask )		10177382	0		=			
ANR	10177687	ArrayIndexing	wp [ 4 ]		10177382	0					
ANR	10177688	Identifier	wp		10177382	0					
ANR	10177689	PrimaryExpression	4		10177382	1					
ANR	10177690	CastExpression	( uint16 ) ( ( r1 - r2 ) & mask )		10177382	1					
ANR	10177691	CastTarget	uint16		10177382	0					
ANR	10177692	BitAndExpression	( r1 - r2 ) & mask		10177382	1		&			
ANR	10177693	AdditiveExpression	r1 - r2		10177382	0		-			
ANR	10177694	Identifier	r1		10177382	0					
ANR	10177695	Identifier	r2		10177382	1					
ANR	10177696	Identifier	mask		10177382	1					
ANR	10177697	ExpressionStatement	r2 = r1	1100:55:32509:32516	10177382	3	True				
ANR	10177698	AssignmentExpression	r2 = r1		10177382	0		=			
ANR	10177699	Identifier	r2		10177382	0					
ANR	10177700	Identifier	r1		10177382	1					
ANR	10177701	ExpressionStatement	g1 = CLAMP ( ip [ 5 ] )	1101:2:32520:32537	10177382	4	True				
ANR	10177702	AssignmentExpression	g1 = CLAMP ( ip [ 5 ] )		10177382	0		=			
ANR	10177703	Identifier	g1		10177382	0					
ANR	10177704	CallExpression	CLAMP ( ip [ 5 ] )		10177382	1					
ANR	10177705	Callee	CLAMP		10177382	0					
ANR	10177706	Identifier	CLAMP		10177382	0					
ANR	10177707	ArgumentList	ip [ 5 ]		10177382	1					
ANR	10177708	Argument	ip [ 5 ]		10177382	0					
ANR	10177709	ArrayIndexing	ip [ 5 ]		10177382	0					
ANR	10177710	Identifier	ip		10177382	0					
ANR	10177711	PrimaryExpression	5		10177382	1					
ANR	10177712	ExpressionStatement	wp [ 5 ] = ( uint16 ) ( ( g1 - g2 ) & mask )	1101:21:32539:32571	10177382	5	True				
ANR	10177713	AssignmentExpression	wp [ 5 ] = ( uint16 ) ( ( g1 - g2 ) & mask )		10177382	0		=			
ANR	10177714	ArrayIndexing	wp [ 5 ]		10177382	0					
ANR	10177715	Identifier	wp		10177382	0					
ANR	10177716	PrimaryExpression	5		10177382	1					
ANR	10177717	CastExpression	( uint16 ) ( ( g1 - g2 ) & mask )		10177382	1					
ANR	10177718	CastTarget	uint16		10177382	0					
ANR	10177719	BitAndExpression	( g1 - g2 ) & mask		10177382	1		&			
ANR	10177720	AdditiveExpression	g1 - g2		10177382	0		-			
ANR	10177721	Identifier	g1		10177382	0					
ANR	10177722	Identifier	g2		10177382	1					
ANR	10177723	Identifier	mask		10177382	1					
ANR	10177724	ExpressionStatement	g2 = g1	1101:55:32573:32580	10177382	6	True				
ANR	10177725	AssignmentExpression	g2 = g1		10177382	0		=			
ANR	10177726	Identifier	g2		10177382	0					
ANR	10177727	Identifier	g1		10177382	1					
ANR	10177728	ExpressionStatement	b1 = CLAMP ( ip [ 6 ] )	1102:2:32584:32601	10177382	7	True				
ANR	10177729	AssignmentExpression	b1 = CLAMP ( ip [ 6 ] )		10177382	0		=			
ANR	10177730	Identifier	b1		10177382	0					
ANR	10177731	CallExpression	CLAMP ( ip [ 6 ] )		10177382	1					
ANR	10177732	Callee	CLAMP		10177382	0					
ANR	10177733	Identifier	CLAMP		10177382	0					
ANR	10177734	ArgumentList	ip [ 6 ]		10177382	1					
ANR	10177735	Argument	ip [ 6 ]		10177382	0					
ANR	10177736	ArrayIndexing	ip [ 6 ]		10177382	0					
ANR	10177737	Identifier	ip		10177382	0					
ANR	10177738	PrimaryExpression	6		10177382	1					
ANR	10177739	ExpressionStatement	wp [ 6 ] = ( uint16 ) ( ( b1 - b2 ) & mask )	1102:21:32603:32635	10177382	8	True				
ANR	10177740	AssignmentExpression	wp [ 6 ] = ( uint16 ) ( ( b1 - b2 ) & mask )		10177382	0		=			
ANR	10177741	ArrayIndexing	wp [ 6 ]		10177382	0					
ANR	10177742	Identifier	wp		10177382	0					
ANR	10177743	PrimaryExpression	6		10177382	1					
ANR	10177744	CastExpression	( uint16 ) ( ( b1 - b2 ) & mask )		10177382	1					
ANR	10177745	CastTarget	uint16		10177382	0					
ANR	10177746	BitAndExpression	( b1 - b2 ) & mask		10177382	1		&			
ANR	10177747	AdditiveExpression	b1 - b2		10177382	0		-			
ANR	10177748	Identifier	b1		10177382	0					
ANR	10177749	Identifier	b2		10177382	1					
ANR	10177750	Identifier	mask		10177382	1					
ANR	10177751	ExpressionStatement	b2 = b1	1102:55:32637:32644	10177382	9	True				
ANR	10177752	AssignmentExpression	b2 = b1		10177382	0		=			
ANR	10177753	Identifier	b2		10177382	0					
ANR	10177754	Identifier	b1		10177382	1					
ANR	10177755	ExpressionStatement	a1 = CLAMP ( ip [ 7 ] )	1103:2:32648:32665	10177382	10	True				
ANR	10177756	AssignmentExpression	a1 = CLAMP ( ip [ 7 ] )		10177382	0		=			
ANR	10177757	Identifier	a1		10177382	0					
ANR	10177758	CallExpression	CLAMP ( ip [ 7 ] )		10177382	1					
ANR	10177759	Callee	CLAMP		10177382	0					
ANR	10177760	Identifier	CLAMP		10177382	0					
ANR	10177761	ArgumentList	ip [ 7 ]		10177382	1					
ANR	10177762	Argument	ip [ 7 ]		10177382	0					
ANR	10177763	ArrayIndexing	ip [ 7 ]		10177382	0					
ANR	10177764	Identifier	ip		10177382	0					
ANR	10177765	PrimaryExpression	7		10177382	1					
ANR	10177766	ExpressionStatement	wp [ 7 ] = ( uint16 ) ( ( a1 - a2 ) & mask )	1103:21:32667:32699	10177382	11	True				
ANR	10177767	AssignmentExpression	wp [ 7 ] = ( uint16 ) ( ( a1 - a2 ) & mask )		10177382	0		=			
ANR	10177768	ArrayIndexing	wp [ 7 ]		10177382	0					
ANR	10177769	Identifier	wp		10177382	0					
ANR	10177770	PrimaryExpression	7		10177382	1					
ANR	10177771	CastExpression	( uint16 ) ( ( a1 - a2 ) & mask )		10177382	1					
ANR	10177772	CastTarget	uint16		10177382	0					
ANR	10177773	BitAndExpression	( a1 - a2 ) & mask		10177382	1		&			
ANR	10177774	AdditiveExpression	a1 - a2		10177382	0		-			
ANR	10177775	Identifier	a1		10177382	0					
ANR	10177776	Identifier	a2		10177382	1					
ANR	10177777	Identifier	mask		10177382	1					
ANR	10177778	ExpressionStatement	a2 = a1	1103:55:32701:32708	10177382	12	True				
ANR	10177779	AssignmentExpression	a2 = a1		10177382	0		=			
ANR	10177780	Identifier	a2		10177382	0					
ANR	10177781	Identifier	a1		10177382	1					
ANR	10177782	ExpressionStatement	wp += 4	1104:2:32712:32719	10177382	13	True				
ANR	10177783	AssignmentExpression	wp += 4		10177382	0		+=			
ANR	10177784	Identifier	wp		10177382	0					
ANR	10177785	PrimaryExpression	4		10177382	1					
ANR	10177786	ExpressionStatement	ip += 4	1105:2:32723:32730	10177382	14	True				
ANR	10177787	AssignmentExpression	ip += 4		10177382	0		+=			
ANR	10177788	Identifier	ip		10177382	0					
ANR	10177789	PrimaryExpression	4		10177382	1					
ANR	10177790	ElseStatement	else		10177382	0					
ANR	10177791	CompoundStatement		34:8:1010:1010	10177382	0					
ANR	10177792	Statement	REPEAT	1108:8:32757:32762	10177382	0	True				
ANR	10177793	Statement	(	1108:14:32763:32763	10177382	1	True				
ANR	10177794	ExpressionStatement	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"	1108:15:32764:32792	10177382	2	True				
ANR	10177795	Expression	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"		10177382	0					
ANR	10177796	Identifier	stride		10177382	0					
ANR	10177797	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		10177382	1		=			
ANR	10177798	ArrayIndexing	wp [ 0 ]		10177382	0					
ANR	10177799	Identifier	wp		10177382	0					
ANR	10177800	PrimaryExpression	0		10177382	1					
ANR	10177801	CallExpression	CLAMP ( ip [ 0 ] )		10177382	1					
ANR	10177802	Callee	CLAMP		10177382	0					
ANR	10177803	Identifier	CLAMP		10177382	0					
ANR	10177804	ArgumentList	ip [ 0 ]		10177382	1					
ANR	10177805	Argument	ip [ 0 ]		10177382	0					
ANR	10177806	ArrayIndexing	ip [ 0 ]		10177382	0					
ANR	10177807	Identifier	ip		10177382	0					
ANR	10177808	PrimaryExpression	0		10177382	1					
ANR	10177809	ExpressionStatement	wp ++	1108:45:32794:32798	10177382	3	True				
ANR	10177810	PostIncDecOperationExpression	wp ++		10177382	0					
ANR	10177811	Identifier	wp		10177382	0					
ANR	10177812	IncDec	++		10177382	1					
ANR	10177813	Statement	ip	1108:51:32800:32801	10177382	4	True				
ANR	10177814	Statement	++	1108:53:32802:32803	10177382	5	True				
ANR	10177815	Statement	)	1108:55:32804:32804	10177382	6	True				
ANR	10177816	ExpressionStatement	n -= stride	1109:8:32814:32825	10177382	7	True				
ANR	10177817	AssignmentExpression	n -= stride		10177382	0		-=			
ANR	10177818	Identifier	n		10177382	0					
ANR	10177819	Identifier	stride		10177382	1					
ANR	10177820	WhileStatement	while ( n > 0 )		10177382	8					
ANR	10177821	Condition	n > 0	1110:15:32842:32846	10177382	0	True				
ANR	10177822	RelationalExpression	n > 0		10177382	0		>			
ANR	10177823	Identifier	n		10177382	0					
ANR	10177824	PrimaryExpression	0		10177382	1					
ANR	10177825	CompoundStatement		37:22:1112:1112	10177382	1					
ANR	10177826	Statement	REPEAT	1111:12:32863:32868	10177382	0	True				
ANR	10177827	Statement	(	1111:18:32869:32869	10177382	1	True				
ANR	10177828	ExpressionStatement	"stride , wp [ 0 ] = ( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )"	1111:19:32870:32952	10177382	2	True				
ANR	10177829	Expression	"stride , wp [ 0 ] = ( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )"		10177382	0					
ANR	10177830	Identifier	stride		10177382	0					
ANR	10177831	AssignmentExpression	wp [ 0 ] = ( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )		10177382	1		=			
ANR	10177832	ArrayIndexing	wp [ 0 ]		10177382	0					
ANR	10177833	Identifier	wp		10177382	0					
ANR	10177834	PrimaryExpression	0		10177382	1					
ANR	10177835	CastExpression	( uint16 ) ( ( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask )		10177382	1					
ANR	10177836	CastTarget	uint16		10177382	0					
ANR	10177837	BitAndExpression	( CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] ) ) & mask		10177382	1		&			
ANR	10177838	AdditiveExpression	CLAMP ( ip [ 0 ] ) - CLAMP ( ip [ - stride ] )		10177382	0		-			
ANR	10177839	CallExpression	CLAMP ( ip [ 0 ] )		10177382	0					
ANR	10177840	Callee	CLAMP		10177382	0					
ANR	10177841	Identifier	CLAMP		10177382	0					
ANR	10177842	ArgumentList	ip [ 0 ]		10177382	1					
ANR	10177843	Argument	ip [ 0 ]		10177382	0					
ANR	10177844	ArrayIndexing	ip [ 0 ]		10177382	0					
ANR	10177845	Identifier	ip		10177382	0					
ANR	10177846	PrimaryExpression	0		10177382	1					
ANR	10177847	CallExpression	CLAMP ( ip [ - stride ] )		10177382	1					
ANR	10177848	Callee	CLAMP		10177382	0					
ANR	10177849	Identifier	CLAMP		10177382	0					
ANR	10177850	ArgumentList	ip [ - stride ]		10177382	1					
ANR	10177851	Argument	ip [ - stride ]		10177382	0					
ANR	10177852	ArrayIndexing	ip [ - stride ]		10177382	0					
ANR	10177853	Identifier	ip		10177382	0					
ANR	10177854	UnaryOperationExpression	- stride		10177382	1					
ANR	10177855	UnaryOperator	-		10177382	0					
ANR	10177856	Identifier	stride		10177382	1					
ANR	10177857	Identifier	mask		10177382	1					
ANR	10177858	ExpressionStatement	wp ++	1113:16:32970:32974	10177382	3	True				
ANR	10177859	PostIncDecOperationExpression	wp ++		10177382	0					
ANR	10177860	Identifier	wp		10177382	0					
ANR	10177861	IncDec	++		10177382	1					
ANR	10177862	Statement	ip	1113:22:32976:32977	10177382	4	True				
ANR	10177863	Statement	++	1113:24:32978:32979	10177382	5	True				
ANR	10177864	Statement	)	1113:26:32980:32980	10177382	6	True				
ANR	10177865	ExpressionStatement	n -= stride	1114:12:32994:33005	10177382	7	True				
ANR	10177866	AssignmentExpression	n -= stride		10177382	0		-=			
ANR	10177867	Identifier	n		10177382	0					
ANR	10177868	Identifier	stride		10177382	1					
ANR	10177869	ReturnType	static void		10177382	1					
ANR	10177870	Identifier	horizontalDifference8		10177382	2					
ANR	10177871	ParameterList	"unsigned char * ip , int n , int stride , unsigned short * wp , uint16 * From8"		10177382	3					
ANR	10177872	Parameter	unsigned char * ip	1072:22:31661:31677	10177382	0	True				
ANR	10177873	ParameterType	unsigned char *		10177382	0					
ANR	10177874	Identifier	ip		10177382	1					
ANR	10177875	Parameter	int n	1072:41:31680:31684	10177382	1	True				
ANR	10177876	ParameterType	int		10177382	0					
ANR	10177877	Identifier	n		10177382	1					
ANR	10177878	Parameter	int stride	1072:48:31687:31696	10177382	2	True				
ANR	10177879	ParameterType	int		10177382	0					
ANR	10177880	Identifier	stride		10177382	1					
ANR	10177881	Parameter	unsigned short * wp	1073:1:31701:31718	10177382	3	True				
ANR	10177882	ParameterType	unsigned short *		10177382	0					
ANR	10177883	Identifier	wp		10177382	1					
ANR	10177884	Parameter	uint16 * From8	1073:21:31721:31733	10177382	4	True				
ANR	10177885	ParameterType	uint16 *		10177382	0					
ANR	10177886	Identifier	From8		10177382	1					
ANR	10177887	CFGEntryNode	ENTRY		10177382		True				
ANR	10177888	CFGExitNode	EXIT		10177382		True				
ANR	10177889	Symbol	r2		10177382						
ANR	10177890	Symbol	From8		10177382						
ANR	10177891	Symbol	* stride		10177382						
ANR	10177892	Symbol	ip		10177382						
ANR	10177893	Symbol	CLAMP		10177382						
ANR	10177894	Symbol	g1		10177382						
ANR	10177895	Symbol	g2		10177382						
ANR	10177896	Symbol	stride		10177382						
ANR	10177897	Symbol	n		10177382						
ANR	10177898	Symbol	* ip		10177382						
ANR	10177899	Symbol	b1		10177382						
ANR	10177900	Symbol	a1		10177382						
ANR	10177901	Symbol	b2		10177382						
ANR	10177902	Symbol	a2		10177382						
ANR	10177903	Symbol	CODE_MASK		10177382						
ANR	10177904	Symbol	wp		10177382						
ANR	10177905	Symbol	* wp		10177382						
ANR	10177906	Symbol	r1		10177382						
ANR	10177907	Symbol	mask		10177382						
ANR	10177908	Function	PixarLogEncode	1123:0:33068:35967							
ANR	10177909	FunctionDef	"PixarLogEncode (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		10177908	0					
ANR	10177910	CompoundStatement		1125:0:33139:35967	10177908	0					
ANR	10177911	Statement	static	1126:1:33142:33147	10177908	0	True				
ANR	10177912	IdentifierDeclStatement	"const char module [ ] = ""PixarLogEncode"" ;"	1126:8:33149:33187	10177908	1	True				
ANR	10177913	IdentifierDecl	"module [ ] = ""PixarLogEncode"""		10177908	0					
ANR	10177914	IdentifierDeclType	const char [ ]		10177908	0					
ANR	10177915	Identifier	module		10177908	1					
ANR	10177916	AssignmentExpression	"module [ ] = ""PixarLogEncode"""		10177908	2		=			
ANR	10177917	Identifier	module		10177908	0					
ANR	10177918	PrimaryExpression	"""PixarLogEncode"""		10177908	1					
ANR	10177919	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1127:1:33190:33223	10177908	2	True				
ANR	10177920	IdentifierDecl	* td = & tif -> tif_dir		10177908	0					
ANR	10177921	IdentifierDeclType	TIFFDirectory *		10177908	0					
ANR	10177922	Identifier	td		10177908	1					
ANR	10177923	AssignmentExpression	* td = & tif -> tif_dir		10177908	2		=			
ANR	10177924	Identifier	td		10177908	0					
ANR	10177925	UnaryOperationExpression	& tif -> tif_dir		10177908	1					
ANR	10177926	UnaryOperator	&		10177908	0					
ANR	10177927	PtrMemberAccess	tif -> tif_dir		10177908	1					
ANR	10177928	Identifier	tif		10177908	0					
ANR	10177929	Identifier	tif_dir		10177908	1					
ANR	10177930	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	1128:1:33226:33263	10177908	3	True				
ANR	10177931	IdentifierDecl	* sp = EncoderState ( tif )		10177908	0					
ANR	10177932	IdentifierDeclType	PixarLogState *		10177908	0					
ANR	10177933	Identifier	sp		10177908	1					
ANR	10177934	AssignmentExpression	* sp = EncoderState ( tif )		10177908	2		=			
ANR	10177935	Identifier	sp		10177908	0					
ANR	10177936	CallExpression	EncoderState ( tif )		10177908	1					
ANR	10177937	Callee	EncoderState		10177908	0					
ANR	10177938	Identifier	EncoderState		10177908	0					
ANR	10177939	ArgumentList	tif		10177908	1					
ANR	10177940	Argument	tif		10177908	0					
ANR	10177941	Identifier	tif		10177908	0					
ANR	10177942	IdentifierDeclStatement	tmsize_t i ;	1129:1:33266:33276	10177908	4	True				
ANR	10177943	IdentifierDecl	i		10177908	0					
ANR	10177944	IdentifierDeclType	tmsize_t		10177908	0					
ANR	10177945	Identifier	i		10177908	1					
ANR	10177946	IdentifierDeclStatement	tmsize_t n ;	1130:1:33279:33289	10177908	5	True				
ANR	10177947	IdentifierDecl	n		10177908	0					
ANR	10177948	IdentifierDeclType	tmsize_t		10177908	0					
ANR	10177949	Identifier	n		10177908	1					
ANR	10177950	IdentifierDeclStatement	int llen ;	1131:1:33292:33300	10177908	6	True				
ANR	10177951	IdentifierDecl	llen		10177908	0					
ANR	10177952	IdentifierDeclType	int		10177908	0					
ANR	10177953	Identifier	llen		10177908	1					
ANR	10177954	IdentifierDeclStatement	unsigned short * up ;	1132:1:33303:33322	10177908	7	True				
ANR	10177955	IdentifierDecl	* up		10177908	0					
ANR	10177956	IdentifierDeclType	unsigned short *		10177908	0					
ANR	10177957	Identifier	up		10177908	1					
ANR	10177958	ExpressionStatement	( void ) s	1134:1:33326:33334	10177908	8	True				
ANR	10177959	CastExpression	( void ) s		10177908	0					
ANR	10177960	CastTarget	void		10177908	0					
ANR	10177961	Identifier	s		10177908	1					
ANR	10177962	SwitchStatement	switch ( sp -> user_datafmt )		10177908	9					
ANR	10177963	Condition	sp -> user_datafmt	1136:9:33346:33361	10177908	0	True				
ANR	10177964	PtrMemberAccess	sp -> user_datafmt		10177908	0					
ANR	10177965	Identifier	sp		10177908	0					
ANR	10177966	Identifier	user_datafmt		10177908	1					
ANR	10177967	CompoundStatement		12:27:224:224	10177908	1					
ANR	10177968	Label	case PIXARLOGDATAFMT_FLOAT :	1137:1:33367:33393	10177908	0	True				
ANR	10177969	Identifier	PIXARLOGDATAFMT_FLOAT		10177908	0					
ANR	10177970	ExpressionStatement	n = cc / sizeof ( float )	1138:2:33397:33419	10177908	1	True				
ANR	10177971	AssignmentExpression	n = cc / sizeof ( float )		10177908	0		=			
ANR	10177972	Identifier	n		10177908	0					
ANR	10177973	MultiplicativeExpression	cc / sizeof ( float )		10177908	1		/			
ANR	10177974	Identifier	cc		10177908	0					
ANR	10177975	SizeofExpression	sizeof ( float )		10177908	1					
ANR	10177976	Sizeof	sizeof		10177908	0					
ANR	10177977	SizeofOperand	float		10177908	1					
ANR	10177978	BreakStatement	break ;	1139:2:33451:33456	10177908	2	True				
ANR	10177979	Label	case PIXARLOGDATAFMT_16BIT :	1140:1:33459:33485	10177908	3	True				
ANR	10177980	Identifier	PIXARLOGDATAFMT_16BIT		10177908	0					
ANR	10177981	Label	case PIXARLOGDATAFMT_12BITPICIO :	1141:1:33488:33519	10177908	4	True				
ANR	10177982	Identifier	PIXARLOGDATAFMT_12BITPICIO		10177908	0					
ANR	10177983	Label	case PIXARLOGDATAFMT_11BITLOG :	1142:1:33522:33551	10177908	5	True				
ANR	10177984	Identifier	PIXARLOGDATAFMT_11BITLOG		10177908	0					
ANR	10177985	ExpressionStatement	n = cc / sizeof ( uint16 )	1143:2:33555:33578	10177908	6	True				
ANR	10177986	AssignmentExpression	n = cc / sizeof ( uint16 )		10177908	0		=			
ANR	10177987	Identifier	n		10177908	0					
ANR	10177988	MultiplicativeExpression	cc / sizeof ( uint16 )		10177908	1		/			
ANR	10177989	Identifier	cc		10177908	0					
ANR	10177990	SizeofExpression	sizeof ( uint16 )		10177908	1					
ANR	10177991	Sizeof	sizeof		10177908	0					
ANR	10177992	SizeofOperand	uint16		10177908	1					
ANR	10177993	BreakStatement	break ;	1144:2:33610:33615	10177908	7	True				
ANR	10177994	Label	case PIXARLOGDATAFMT_8BIT :	1145:1:33618:33643	10177908	8	True				
ANR	10177995	Identifier	PIXARLOGDATAFMT_8BIT		10177908	0					
ANR	10177996	Label	case PIXARLOGDATAFMT_8BITABGR :	1146:1:33646:33675	10177908	9	True				
ANR	10177997	Identifier	PIXARLOGDATAFMT_8BITABGR		10177908	0					
ANR	10177998	ExpressionStatement	n = cc	1147:2:33679:33685	10177908	10	True				
ANR	10177999	AssignmentExpression	n = cc		10177908	0		=			
ANR	10178000	Identifier	n		10177908	0					
ANR	10178001	Identifier	cc		10177908	1					
ANR	10178002	BreakStatement	break ;	1148:2:33689:33694	10177908	11	True				
ANR	10178003	Label	default :	1149:1:33697:33704	10177908	12	True				
ANR	10178004	Identifier	default		10177908	0					
ANR	10178005	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"	1150:2:33708:33819	10177908	13	True				
ANR	10178006	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"		10177908	0					
ANR	10178007	Callee	TIFFErrorExt		10177908	0					
ANR	10178008	Identifier	TIFFErrorExt		10177908	0					
ANR	10178009	ArgumentList	tif -> tif_clientdata		10177908	1					
ANR	10178010	Argument	tif -> tif_clientdata		10177908	0					
ANR	10178011	PtrMemberAccess	tif -> tif_clientdata		10177908	0					
ANR	10178012	Identifier	tif		10177908	0					
ANR	10178013	Identifier	tif_clientdata		10177908	1					
ANR	10178014	Argument	module		10177908	1					
ANR	10178015	Identifier	module		10177908	0					
ANR	10178016	Argument	"""%d bit input not supported in PixarLog"""		10177908	2					
ANR	10178017	PrimaryExpression	"""%d bit input not supported in PixarLog"""		10177908	0					
ANR	10178018	Argument	td -> td_bitspersample		10177908	3					
ANR	10178019	PtrMemberAccess	td -> td_bitspersample		10177908	0					
ANR	10178020	Identifier	td		10177908	0					
ANR	10178021	Identifier	td_bitspersample		10177908	1					
ANR	10178022	ReturnStatement	return 0 ;	1153:2:33823:33831	10177908	14	True				
ANR	10178023	PrimaryExpression	0		10177908	0					
ANR	10178024	ExpressionStatement	llen = sp -> stride * td -> td_imagewidth	1156:1:33838:33875	10177908	10	True				
ANR	10178025	AssignmentExpression	llen = sp -> stride * td -> td_imagewidth		10177908	0		=			
ANR	10178026	Identifier	llen		10177908	0					
ANR	10178027	MultiplicativeExpression	sp -> stride * td -> td_imagewidth		10177908	1		*			
ANR	10178028	PtrMemberAccess	sp -> stride		10177908	0					
ANR	10178029	Identifier	sp		10177908	0					
ANR	10178030	Identifier	stride		10177908	1					
ANR	10178031	PtrMemberAccess	td -> td_imagewidth		10177908	1					
ANR	10178032	Identifier	td		10177908	0					
ANR	10178033	Identifier	td_imagewidth		10177908	1					
ANR	10178034	IfStatement	if ( n > ( tmsize_t ) ( td -> td_rowsperstrip * llen ) )		10177908	11					
ANR	10178035	Condition	n > ( tmsize_t ) ( td -> td_rowsperstrip * llen )	1158:8:33961:34002	10177908	0	True				
ANR	10178036	RelationalExpression	n > ( tmsize_t ) ( td -> td_rowsperstrip * llen )		10177908	0		>			
ANR	10178037	Identifier	n		10177908	0					
ANR	10178038	CastExpression	( tmsize_t ) ( td -> td_rowsperstrip * llen )		10177908	1					
ANR	10178039	CastTarget	tmsize_t		10177908	0					
ANR	10178040	MultiplicativeExpression	td -> td_rowsperstrip * llen		10177908	1		*			
ANR	10178041	PtrMemberAccess	td -> td_rowsperstrip		10177908	0					
ANR	10178042	Identifier	td		10177908	0					
ANR	10178043	Identifier	td_rowsperstrip		10177908	1					
ANR	10178044	Identifier	llen		10177908	1					
ANR	10178045	CompoundStatement		35:4:870:870	10177908	1					
ANR	10178046	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Too many input bytes provided"" )"	1160:8:34020:34115	10177908	0	True				
ANR	10178047	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Too many input bytes provided"" )"		10177908	0					
ANR	10178048	Callee	TIFFErrorExt		10177908	0					
ANR	10178049	Identifier	TIFFErrorExt		10177908	0					
ANR	10178050	ArgumentList	tif -> tif_clientdata		10177908	1					
ANR	10178051	Argument	tif -> tif_clientdata		10177908	0					
ANR	10178052	PtrMemberAccess	tif -> tif_clientdata		10177908	0					
ANR	10178053	Identifier	tif		10177908	0					
ANR	10178054	Identifier	tif_clientdata		10177908	1					
ANR	10178055	Argument	module		10177908	1					
ANR	10178056	Identifier	module		10177908	0					
ANR	10178057	Argument	"""Too many input bytes provided"""		10177908	2					
ANR	10178058	PrimaryExpression	"""Too many input bytes provided"""		10177908	0					
ANR	10178059	ReturnStatement	return 0 ;	1162:8:34125:34133	10177908	1	True				
ANR	10178060	PrimaryExpression	0		10177908	0					
ANR	10178061	ForStatement	"for ( i = 0 , up = sp -> tbuf ; i < n ; i += llen , up += llen )"		10177908	12					
ANR	10178062	ForInit	"i = 0 , up = sp -> tbuf ;"	1165:6:34148:34168	10177908	0	True				
ANR	10178063	Expression	"i = 0 , up = sp -> tbuf"		10177908	0					
ANR	10178064	AssignmentExpression	i = 0		10177908	0		=			
ANR	10178065	Identifier	i		10177908	0					
ANR	10178066	PrimaryExpression	0		10177908	1					
ANR	10178067	AssignmentExpression	up = sp -> tbuf		10177908	1		=			
ANR	10178068	Identifier	up		10177908	0					
ANR	10178069	PtrMemberAccess	sp -> tbuf		10177908	1					
ANR	10178070	Identifier	sp		10177908	0					
ANR	10178071	Identifier	tbuf		10177908	1					
ANR	10178072	Condition	i < n	1165:28:34170:34174	10177908	1	True				
ANR	10178073	RelationalExpression	i < n		10177908	0		<			
ANR	10178074	Identifier	i		10177908	0					
ANR	10178075	Identifier	n		10177908	1					
ANR	10178076	Expression	"i += llen , up += llen"	1165:35:34177:34197	10177908	2	True				
ANR	10178077	AssignmentExpression	i += llen		10177908	0		+=			
ANR	10178078	Identifier	i		10177908	0					
ANR	10178079	Identifier	llen		10177908	1					
ANR	10178080	AssignmentExpression	up += llen		10177908	1		+=			
ANR	10178081	Identifier	up		10177908	0					
ANR	10178082	Identifier	llen		10177908	1					
ANR	10178083	CompoundStatement		41:58:1060:1060	10177908	3					
ANR	10178084	SwitchStatement	switch ( sp -> user_datafmt )		10177908	0					
ANR	10178085	Condition	sp -> user_datafmt	1166:10:34212:34227	10177908	0	True				
ANR	10178086	PtrMemberAccess	sp -> user_datafmt		10177908	0					
ANR	10178087	Identifier	sp		10177908	0					
ANR	10178088	Identifier	user_datafmt		10177908	1					
ANR	10178089	CompoundStatement		42:29:1091:1091	10177908	1					
ANR	10178090	Label	case PIXARLOGDATAFMT_FLOAT :	1167:2:34235:34261	10177908	0	True				
ANR	10178091	Identifier	PIXARLOGDATAFMT_FLOAT		10177908	0					
ANR	10178092	ExpressionStatement	"horizontalDifferenceF ( sp , ( float * ) bp , llen , sp -> stride , up , sp -> FromLT2 )"	1168:24:34287:34393	10177908	1	True				
ANR	10178093	CallExpression	"horizontalDifferenceF ( sp , ( float * ) bp , llen , sp -> stride , up , sp -> FromLT2 )"		10177908	0					
ANR	10178094	Callee	horizontalDifferenceF		10177908	0					
ANR	10178095	Identifier	horizontalDifferenceF		10177908	0					
ANR	10178096	ArgumentList	sp		10177908	1					
ANR	10178097	Argument	sp		10177908	0					
ANR	10178098	Identifier	sp		10177908	0					
ANR	10178099	Argument	( float * ) bp		10177908	1					
ANR	10178100	CastExpression	( float * ) bp		10177908	0					
ANR	10178101	CastTarget	float *		10177908	0					
ANR	10178102	Identifier	bp		10177908	1					
ANR	10178103	Argument	llen		10177908	2					
ANR	10178104	Identifier	llen		10177908	0					
ANR	10178105	Argument	sp -> stride		10177908	3					
ANR	10178106	PtrMemberAccess	sp -> stride		10177908	0					
ANR	10178107	Identifier	sp		10177908	0					
ANR	10178108	Identifier	stride		10177908	1					
ANR	10178109	Argument	up		10177908	4					
ANR	10178110	Identifier	up		10177908	0					
ANR	10178111	Argument	sp -> FromLT2		10177908	5					
ANR	10178112	PtrMemberAccess	sp -> FromLT2		10177908	0					
ANR	10178113	Identifier	sp		10177908	0					
ANR	10178114	Identifier	FromLT2		10177908	1					
ANR	10178115	ExpressionStatement	bp += llen * sizeof ( float )	1170:3:34398:34424	10177908	2	True				
ANR	10178116	AssignmentExpression	bp += llen * sizeof ( float )		10177908	0		+=			
ANR	10178117	Identifier	bp		10177908	0					
ANR	10178118	MultiplicativeExpression	llen * sizeof ( float )		10177908	1		*			
ANR	10178119	Identifier	llen		10177908	0					
ANR	10178120	SizeofExpression	sizeof ( float )		10177908	1					
ANR	10178121	Sizeof	sizeof		10177908	0					
ANR	10178122	SizeofOperand	float		10177908	1					
ANR	10178123	BreakStatement	break ;	1171:3:34429:34434	10177908	3	True				
ANR	10178124	Label	case PIXARLOGDATAFMT_16BIT :	1172:2:34438:34464	10177908	4	True				
ANR	10178125	Identifier	PIXARLOGDATAFMT_16BIT		10177908	0					
ANR	10178126	ExpressionStatement	"horizontalDifference16 ( ( uint16 * ) bp , llen , sp -> stride , up , sp -> From14 )"	1173:3:34469:34544	10177908	5	True				
ANR	10178127	CallExpression	"horizontalDifference16 ( ( uint16 * ) bp , llen , sp -> stride , up , sp -> From14 )"		10177908	0					
ANR	10178128	Callee	horizontalDifference16		10177908	0					
ANR	10178129	Identifier	horizontalDifference16		10177908	0					
ANR	10178130	ArgumentList	( uint16 * ) bp		10177908	1					
ANR	10178131	Argument	( uint16 * ) bp		10177908	0					
ANR	10178132	CastExpression	( uint16 * ) bp		10177908	0					
ANR	10178133	CastTarget	uint16 *		10177908	0					
ANR	10178134	Identifier	bp		10177908	1					
ANR	10178135	Argument	llen		10177908	1					
ANR	10178136	Identifier	llen		10177908	0					
ANR	10178137	Argument	sp -> stride		10177908	2					
ANR	10178138	PtrMemberAccess	sp -> stride		10177908	0					
ANR	10178139	Identifier	sp		10177908	0					
ANR	10178140	Identifier	stride		10177908	1					
ANR	10178141	Argument	up		10177908	3					
ANR	10178142	Identifier	up		10177908	0					
ANR	10178143	Argument	sp -> From14		10177908	4					
ANR	10178144	PtrMemberAccess	sp -> From14		10177908	0					
ANR	10178145	Identifier	sp		10177908	0					
ANR	10178146	Identifier	From14		10177908	1					
ANR	10178147	ExpressionStatement	bp += llen * sizeof ( uint16 )	1175:3:34549:34576	10177908	6	True				
ANR	10178148	AssignmentExpression	bp += llen * sizeof ( uint16 )		10177908	0		+=			
ANR	10178149	Identifier	bp		10177908	0					
ANR	10178150	MultiplicativeExpression	llen * sizeof ( uint16 )		10177908	1		*			
ANR	10178151	Identifier	llen		10177908	0					
ANR	10178152	SizeofExpression	sizeof ( uint16 )		10177908	1					
ANR	10178153	Sizeof	sizeof		10177908	0					
ANR	10178154	SizeofOperand	uint16		10177908	1					
ANR	10178155	BreakStatement	break ;	1176:3:34581:34586	10177908	7	True				
ANR	10178156	Label	case PIXARLOGDATAFMT_8BIT :	1177:2:34590:34615	10177908	8	True				
ANR	10178157	Identifier	PIXARLOGDATAFMT_8BIT		10177908	0					
ANR	10178158	ExpressionStatement	"horizontalDifference8 ( ( unsigned char * ) bp , llen , sp -> stride , up , sp -> From8 )"	1178:3:34620:34700	10177908	9	True				
ANR	10178159	CallExpression	"horizontalDifference8 ( ( unsigned char * ) bp , llen , sp -> stride , up , sp -> From8 )"		10177908	0					
ANR	10178160	Callee	horizontalDifference8		10177908	0					
ANR	10178161	Identifier	horizontalDifference8		10177908	0					
ANR	10178162	ArgumentList	( unsigned char * ) bp		10177908	1					
ANR	10178163	Argument	( unsigned char * ) bp		10177908	0					
ANR	10178164	CastExpression	( unsigned char * ) bp		10177908	0					
ANR	10178165	CastTarget	unsigned char *		10177908	0					
ANR	10178166	Identifier	bp		10177908	1					
ANR	10178167	Argument	llen		10177908	1					
ANR	10178168	Identifier	llen		10177908	0					
ANR	10178169	Argument	sp -> stride		10177908	2					
ANR	10178170	PtrMemberAccess	sp -> stride		10177908	0					
ANR	10178171	Identifier	sp		10177908	0					
ANR	10178172	Identifier	stride		10177908	1					
ANR	10178173	Argument	up		10177908	3					
ANR	10178174	Identifier	up		10177908	0					
ANR	10178175	Argument	sp -> From8		10177908	4					
ANR	10178176	PtrMemberAccess	sp -> From8		10177908	0					
ANR	10178177	Identifier	sp		10177908	0					
ANR	10178178	Identifier	From8		10177908	1					
ANR	10178179	ExpressionStatement	bp += llen * sizeof ( unsigned char )	1180:3:34705:34739	10177908	10	True				
ANR	10178180	AssignmentExpression	bp += llen * sizeof ( unsigned char )		10177908	0		+=			
ANR	10178181	Identifier	bp		10177908	0					
ANR	10178182	MultiplicativeExpression	llen * sizeof ( unsigned char )		10177908	1		*			
ANR	10178183	Identifier	llen		10177908	0					
ANR	10178184	SizeofExpression	sizeof ( unsigned char )		10177908	1					
ANR	10178185	Sizeof	sizeof		10177908	0					
ANR	10178186	SizeofOperand	unsigned char		10177908	1					
ANR	10178187	BreakStatement	break ;	1181:3:34744:34749	10177908	11	True				
ANR	10178188	Label	default :	1182:2:34753:34760	10177908	12	True				
ANR	10178189	Identifier	default		10177908	0					
ANR	10178190	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"	1183:3:34765:34878	10177908	13	True				
ANR	10178191	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"		10177908	0					
ANR	10178192	Callee	TIFFErrorExt		10177908	0					
ANR	10178193	Identifier	TIFFErrorExt		10177908	0					
ANR	10178194	ArgumentList	tif -> tif_clientdata		10177908	1					
ANR	10178195	Argument	tif -> tif_clientdata		10177908	0					
ANR	10178196	PtrMemberAccess	tif -> tif_clientdata		10177908	0					
ANR	10178197	Identifier	tif		10177908	0					
ANR	10178198	Identifier	tif_clientdata		10177908	1					
ANR	10178199	Argument	module		10177908	1					
ANR	10178200	Identifier	module		10177908	0					
ANR	10178201	Argument	"""%d bit input not supported in PixarLog"""		10177908	2					
ANR	10178202	PrimaryExpression	"""%d bit input not supported in PixarLog"""		10177908	0					
ANR	10178203	Argument	td -> td_bitspersample		10177908	3					
ANR	10178204	PtrMemberAccess	td -> td_bitspersample		10177908	0					
ANR	10178205	Identifier	td		10177908	0					
ANR	10178206	Identifier	td_bitspersample		10177908	1					
ANR	10178207	ReturnStatement	return 0 ;	1186:3:34883:34891	10177908	14	True				
ANR	10178208	PrimaryExpression	0		10177908	0					
ANR	10178209	ExpressionStatement	sp -> stream . next_in = ( unsigned char * ) sp -> tbuf	1190:1:34903:34950	10177908	13	True				
ANR	10178210	AssignmentExpression	sp -> stream . next_in = ( unsigned char * ) sp -> tbuf		10177908	0		=			
ANR	10178211	MemberAccess	sp -> stream . next_in		10177908	0					
ANR	10178212	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178213	Identifier	sp		10177908	0					
ANR	10178214	Identifier	stream		10177908	1					
ANR	10178215	Identifier	next_in		10177908	1					
ANR	10178216	CastExpression	( unsigned char * ) sp -> tbuf		10177908	1					
ANR	10178217	CastTarget	unsigned char *		10177908	0					
ANR	10178218	PtrMemberAccess	sp -> tbuf		10177908	1					
ANR	10178219	Identifier	sp		10177908	0					
ANR	10178220	Identifier	tbuf		10177908	1					
ANR	10178221	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_in ) == 4 )	1191:1:34953:34991	10177908	14	True				
ANR	10178222	CallExpression	assert ( sizeof ( sp -> stream . avail_in ) == 4 )		10177908	0					
ANR	10178223	Callee	assert		10177908	0					
ANR	10178224	Identifier	assert		10177908	0					
ANR	10178225	ArgumentList	sizeof ( sp -> stream . avail_in ) == 4		10177908	1					
ANR	10178226	Argument	sizeof ( sp -> stream . avail_in ) == 4		10177908	0					
ANR	10178227	EqualityExpression	sizeof ( sp -> stream . avail_in ) == 4		10177908	0		==			
ANR	10178228	SizeofExpression	sizeof ( sp -> stream . avail_in )		10177908	0					
ANR	10178229	Sizeof	sizeof		10177908	0					
ANR	10178230	MemberAccess	sp -> stream . avail_in		10177908	1					
ANR	10178231	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178232	Identifier	sp		10177908	0					
ANR	10178233	Identifier	stream		10177908	1					
ANR	10178234	Identifier	avail_in		10177908	1					
ANR	10178235	PrimaryExpression	4		10177908	1					
ANR	10178236	ExpressionStatement	sp -> stream . avail_in = ( uInt ) ( n * sizeof ( uint16 ) )	1195:1:35219:35268	10177908	15	True				
ANR	10178237	AssignmentExpression	sp -> stream . avail_in = ( uInt ) ( n * sizeof ( uint16 ) )		10177908	0		=			
ANR	10178238	MemberAccess	sp -> stream . avail_in		10177908	0					
ANR	10178239	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178240	Identifier	sp		10177908	0					
ANR	10178241	Identifier	stream		10177908	1					
ANR	10178242	Identifier	avail_in		10177908	1					
ANR	10178243	CastExpression	( uInt ) ( n * sizeof ( uint16 ) )		10177908	1					
ANR	10178244	CastTarget	uInt		10177908	0					
ANR	10178245	MultiplicativeExpression	n * sizeof ( uint16 )		10177908	1		*			
ANR	10178246	Identifier	n		10177908	0					
ANR	10178247	SizeofExpression	sizeof ( uint16 )		10177908	1					
ANR	10178248	Sizeof	sizeof		10177908	0					
ANR	10178249	SizeofOperand	uint16		10177908	1					
ANR	10178250	IfStatement	if ( ( sp -> stream . avail_in / sizeof ( uint16 ) ) != ( uInt ) n )		10177908	16					
ANR	10178251	Condition	( sp -> stream . avail_in / sizeof ( uint16 ) ) != ( uInt ) n	1196:5:35275:35324	10177908	0	True				
ANR	10178252	EqualityExpression	( sp -> stream . avail_in / sizeof ( uint16 ) ) != ( uInt ) n		10177908	0		!=			
ANR	10178253	MultiplicativeExpression	sp -> stream . avail_in / sizeof ( uint16 )		10177908	0		/			
ANR	10178254	MemberAccess	sp -> stream . avail_in		10177908	0					
ANR	10178255	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178256	Identifier	sp		10177908	0					
ANR	10178257	Identifier	stream		10177908	1					
ANR	10178258	Identifier	avail_in		10177908	1					
ANR	10178259	SizeofExpression	sizeof ( uint16 )		10177908	1					
ANR	10178260	Sizeof	sizeof		10177908	0					
ANR	10178261	SizeofOperand	uint16		10177908	1					
ANR	10178262	CastExpression	( uInt ) n		10177908	1					
ANR	10178263	CastTarget	uInt		10177908	0					
ANR	10178264	Identifier	n		10177908	1					
ANR	10178265	CompoundStatement		73:1:2188:2188	10177908	1					
ANR	10178266	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	1198:2:35332:35424	10177908	0	True				
ANR	10178267	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		10177908	0					
ANR	10178268	Callee	TIFFErrorExt		10177908	0					
ANR	10178269	Identifier	TIFFErrorExt		10177908	0					
ANR	10178270	ArgumentList	tif -> tif_clientdata		10177908	1					
ANR	10178271	Argument	tif -> tif_clientdata		10177908	0					
ANR	10178272	PtrMemberAccess	tif -> tif_clientdata		10177908	0					
ANR	10178273	Identifier	tif		10177908	0					
ANR	10178274	Identifier	tif_clientdata		10177908	1					
ANR	10178275	Argument	module		10177908	1					
ANR	10178276	Identifier	module		10177908	0					
ANR	10178277	Argument	"""ZLib cannot deal with buffers this size"""		10177908	2					
ANR	10178278	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		10177908	0					
ANR	10178279	ReturnStatement	return ( 0 ) ;	1200:2:35428:35438	10177908	1	True				
ANR	10178280	PrimaryExpression	0		10177908	0					
ANR	10178281	DoStatement	do		10177908	17					
ANR	10178282	CompoundStatement		79:4:2308:2308	10177908	0					
ANR	10178283	IfStatement	"if ( deflate ( & sp -> stream , Z_NO_FLUSH ) != Z_OK )"		10177908	0					
ANR	10178284	Condition	"deflate ( & sp -> stream , Z_NO_FLUSH ) != Z_OK"	1204:6:35456:35495	10177908	0	True				
ANR	10178285	EqualityExpression	"deflate ( & sp -> stream , Z_NO_FLUSH ) != Z_OK"		10177908	0		!=			
ANR	10178286	CallExpression	"deflate ( & sp -> stream , Z_NO_FLUSH )"		10177908	0					
ANR	10178287	Callee	deflate		10177908	0					
ANR	10178288	Identifier	deflate		10177908	0					
ANR	10178289	ArgumentList	& sp -> stream		10177908	1					
ANR	10178290	Argument	& sp -> stream		10177908	0					
ANR	10178291	UnaryOperationExpression	& sp -> stream		10177908	0					
ANR	10178292	UnaryOperator	&		10177908	0					
ANR	10178293	PtrMemberAccess	sp -> stream		10177908	1					
ANR	10178294	Identifier	sp		10177908	0					
ANR	10178295	Identifier	stream		10177908	1					
ANR	10178296	Argument	Z_NO_FLUSH		10177908	1					
ANR	10178297	Identifier	Z_NO_FLUSH		10177908	0					
ANR	10178298	Identifier	Z_OK		10177908	1					
ANR	10178299	CompoundStatement		80:48:2358:2358	10177908	1					
ANR	10178300	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Encoder error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"	1205:3:35503:35616	10177908	0	True				
ANR	10178301	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Encoder error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"		10177908	0					
ANR	10178302	Callee	TIFFErrorExt		10177908	0					
ANR	10178303	Identifier	TIFFErrorExt		10177908	0					
ANR	10178304	ArgumentList	tif -> tif_clientdata		10177908	1					
ANR	10178305	Argument	tif -> tif_clientdata		10177908	0					
ANR	10178306	PtrMemberAccess	tif -> tif_clientdata		10177908	0					
ANR	10178307	Identifier	tif		10177908	0					
ANR	10178308	Identifier	tif_clientdata		10177908	1					
ANR	10178309	Argument	module		10177908	1					
ANR	10178310	Identifier	module		10177908	0					
ANR	10178311	Argument	"""Encoder error: %s"""		10177908	2					
ANR	10178312	PrimaryExpression	"""Encoder error: %s"""		10177908	0					
ANR	10178313	Argument	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10177908	3					
ANR	10178314	ConditionalExpression	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10177908	0					
ANR	10178315	Condition	sp -> stream . msg		10177908	0					
ANR	10178316	MemberAccess	sp -> stream . msg		10177908	0					
ANR	10178317	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178318	Identifier	sp		10177908	0					
ANR	10178319	Identifier	stream		10177908	1					
ANR	10178320	Identifier	msg		10177908	1					
ANR	10178321	MemberAccess	sp -> stream . msg		10177908	1					
ANR	10178322	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178323	Identifier	sp		10177908	0					
ANR	10178324	Identifier	stream		10177908	1					
ANR	10178325	Identifier	msg		10177908	1					
ANR	10178326	PrimaryExpression	"""(null)"""		10177908	2					
ANR	10178327	ReturnStatement	return ( 0 ) ;	1207:3:35621:35631	10177908	1	True				
ANR	10178328	PrimaryExpression	0		10177908	0					
ANR	10178329	IfStatement	if ( sp -> stream . avail_out == 0 )		10177908	1					
ANR	10178330	Condition	sp -> stream . avail_out == 0	1209:6:35643:35667	10177908	0	True				
ANR	10178331	EqualityExpression	sp -> stream . avail_out == 0		10177908	0		==			
ANR	10178332	MemberAccess	sp -> stream . avail_out		10177908	0					
ANR	10178333	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178334	Identifier	sp		10177908	0					
ANR	10178335	Identifier	stream		10177908	1					
ANR	10178336	Identifier	avail_out		10177908	1					
ANR	10178337	PrimaryExpression	0		10177908	1					
ANR	10178338	CompoundStatement		85:33:2530:2530	10177908	1					
ANR	10178339	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize	1210:3:35675:35712	10177908	0	True				
ANR	10178340	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize		10177908	0		=			
ANR	10178341	PtrMemberAccess	tif -> tif_rawcc		10177908	0					
ANR	10178342	Identifier	tif		10177908	0					
ANR	10178343	Identifier	tif_rawcc		10177908	1					
ANR	10178344	PtrMemberAccess	tif -> tif_rawdatasize		10177908	1					
ANR	10178345	Identifier	tif		10177908	0					
ANR	10178346	Identifier	tif_rawdatasize		10177908	1					
ANR	10178347	ExpressionStatement	TIFFFlushData1 ( tif )	1211:3:35717:35736	10177908	1	True				
ANR	10178348	CallExpression	TIFFFlushData1 ( tif )		10177908	0					
ANR	10178349	Callee	TIFFFlushData1		10177908	0					
ANR	10178350	Identifier	TIFFFlushData1		10177908	0					
ANR	10178351	ArgumentList	tif		10177908	1					
ANR	10178352	Argument	tif		10177908	0					
ANR	10178353	Identifier	tif		10177908	0					
ANR	10178354	ExpressionStatement	sp -> stream . next_out = tif -> tif_rawdata	1212:3:35741:35779	10177908	2	True				
ANR	10178355	AssignmentExpression	sp -> stream . next_out = tif -> tif_rawdata		10177908	0		=			
ANR	10178356	MemberAccess	sp -> stream . next_out		10177908	0					
ANR	10178357	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178358	Identifier	sp		10177908	0					
ANR	10178359	Identifier	stream		10177908	1					
ANR	10178360	Identifier	next_out		10177908	1					
ANR	10178361	PtrMemberAccess	tif -> tif_rawdata		10177908	1					
ANR	10178362	Identifier	tif		10177908	0					
ANR	10178363	Identifier	tif_rawdata		10177908	1					
ANR	10178364	ExpressionStatement	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize	1213:3:35784:35834	10177908	3	True				
ANR	10178365	AssignmentExpression	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize		10177908	0		=			
ANR	10178366	MemberAccess	sp -> stream . avail_out		10177908	0					
ANR	10178367	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178368	Identifier	sp		10177908	0					
ANR	10178369	Identifier	stream		10177908	1					
ANR	10178370	Identifier	avail_out		10177908	1					
ANR	10178371	CastExpression	( uInt ) tif -> tif_rawdatasize		10177908	1					
ANR	10178372	CastTarget	uInt		10177908	0					
ANR	10178373	PtrMemberAccess	tif -> tif_rawdatasize		10177908	1					
ANR	10178374	Identifier	tif		10177908	0					
ANR	10178375	Identifier	tif_rawdatasize		10177908	1					
ANR	10178376	Condition	sp -> stream . avail_in > 0	1215:10:35928:35950	10177908	1	True				
ANR	10178377	RelationalExpression	sp -> stream . avail_in > 0		10177908	0		>			
ANR	10178378	MemberAccess	sp -> stream . avail_in		10177908	0					
ANR	10178379	PtrMemberAccess	sp -> stream		10177908	0					
ANR	10178380	Identifier	sp		10177908	0					
ANR	10178381	Identifier	stream		10177908	1					
ANR	10178382	Identifier	avail_in		10177908	1					
ANR	10178383	PrimaryExpression	0		10177908	1					
ANR	10178384	ReturnStatement	return ( 1 ) ;	1216:1:35955:35965	10177908	18	True				
ANR	10178385	PrimaryExpression	1		10177908	0					
ANR	10178386	ReturnType	static int		10177908	1					
ANR	10178387	Identifier	PixarLogEncode		10177908	2					
ANR	10178388	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		10177908	3					
ANR	10178389	Parameter	TIFF * tif	1124:15:33094:33102	10177908	0	True				
ANR	10178390	ParameterType	TIFF *		10177908	0					
ANR	10178391	Identifier	tif		10177908	1					
ANR	10178392	Parameter	uint8 * bp	1124:26:33105:33113	10177908	1	True				
ANR	10178393	ParameterType	uint8 *		10177908	0					
ANR	10178394	Identifier	bp		10177908	1					
ANR	10178395	Parameter	tmsize_t cc	1124:37:33116:33126	10177908	2	True				
ANR	10178396	ParameterType	tmsize_t		10177908	0					
ANR	10178397	Identifier	cc		10177908	1					
ANR	10178398	Parameter	uint16 s	1124:50:33129:33136	10177908	3	True				
ANR	10178399	ParameterType	uint16		10177908	0					
ANR	10178400	Identifier	s		10177908	1					
ANR	10178401	CFGEntryNode	ENTRY		10177908		True				
ANR	10178402	CFGExitNode	EXIT		10177908		True				
ANR	10178403	Symbol	* sp		10177908						
ANR	10178404	Symbol	& tif -> tif_dir		10177908						
ANR	10178405	Symbol	sp -> FromLT2		10177908						
ANR	10178406	Symbol	& sp -> stream		10177908						
ANR	10178407	Symbol	sp -> user_datafmt		10177908						
ANR	10178408	Symbol	Z_OK		10177908						
ANR	10178409	Symbol	sp -> stream . next_out		10177908						
ANR	10178410	Symbol	bp		10177908						
ANR	10178411	Symbol	sp -> From8		10177908						
ANR	10178412	Symbol	tif		10177908						
ANR	10178413	Symbol	tif -> tif_rawcc		10177908						
ANR	10178414	Symbol	Z_NO_FLUSH		10177908						
ANR	10178415	Symbol	sp -> stride		10177908						
ANR	10178416	Symbol	sp -> stream . msg		10177908						
ANR	10178417	Symbol	sp -> tbuf		10177908						
ANR	10178418	Symbol	llen		10177908						
ANR	10178419	Symbol	up		10177908						
ANR	10178420	Symbol	sp		10177908						
ANR	10178421	Symbol	cc		10177908						
ANR	10178422	Symbol	EncoderState		10177908						
ANR	10178423	Symbol	td -> td_imagewidth		10177908						
ANR	10178424	Symbol	module		10177908						
ANR	10178425	Symbol	sp -> stream . next_in		10177908						
ANR	10178426	Symbol	i		10177908						
ANR	10178427	Symbol	sp -> stream . avail_out		10177908						
ANR	10178428	Symbol	n		10177908						
ANR	10178429	Symbol	tif -> tif_clientdata		10177908						
ANR	10178430	Symbol	td		10177908						
ANR	10178431	Symbol	s		10177908						
ANR	10178432	Symbol	sp -> stream . avail_in		10177908						
ANR	10178433	Symbol	deflate		10177908						
ANR	10178434	Symbol	tif -> tif_rawdatasize		10177908						
ANR	10178435	Symbol	* td		10177908						
ANR	10178436	Symbol	sp -> From14		10177908						
ANR	10178437	Symbol	sp -> stream		10177908						
ANR	10178438	Symbol	* tif		10177908						
ANR	10178439	Symbol	td -> td_rowsperstrip		10177908						
ANR	10178440	Symbol	td -> td_bitspersample		10177908						
ANR	10178441	Symbol	tif -> tif_rawdata		10177908						
ANR	10178442	Function	PixarLogPostEncode	1224:0:36083:36924							
ANR	10178443	FunctionDef	PixarLogPostEncode (TIFF * tif)		10178442	0					
ANR	10178444	CompoundStatement		1226:0:36124:36924	10178442	0					
ANR	10178445	Statement	static	1227:1:36127:36132	10178442	0	True				
ANR	10178446	IdentifierDeclStatement	"const char module [ ] = ""PixarLogPostEncode"" ;"	1227:8:36134:36176	10178442	1	True				
ANR	10178447	IdentifierDecl	"module [ ] = ""PixarLogPostEncode"""		10178442	0					
ANR	10178448	IdentifierDeclType	const char [ ]		10178442	0					
ANR	10178449	Identifier	module		10178442	1					
ANR	10178450	AssignmentExpression	"module [ ] = ""PixarLogPostEncode"""		10178442	2		=			
ANR	10178451	Identifier	module		10178442	0					
ANR	10178452	PrimaryExpression	"""PixarLogPostEncode"""		10178442	1					
ANR	10178453	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	1228:1:36179:36216	10178442	2	True				
ANR	10178454	IdentifierDecl	* sp = EncoderState ( tif )		10178442	0					
ANR	10178455	IdentifierDeclType	PixarLogState *		10178442	0					
ANR	10178456	Identifier	sp		10178442	1					
ANR	10178457	AssignmentExpression	* sp = EncoderState ( tif )		10178442	2		=			
ANR	10178458	Identifier	sp		10178442	0					
ANR	10178459	CallExpression	EncoderState ( tif )		10178442	1					
ANR	10178460	Callee	EncoderState		10178442	0					
ANR	10178461	Identifier	EncoderState		10178442	0					
ANR	10178462	ArgumentList	tif		10178442	1					
ANR	10178463	Argument	tif		10178442	0					
ANR	10178464	Identifier	tif		10178442	0					
ANR	10178465	IdentifierDeclStatement	int state ;	1229:1:36219:36228	10178442	3	True				
ANR	10178466	IdentifierDecl	state		10178442	0					
ANR	10178467	IdentifierDeclType	int		10178442	0					
ANR	10178468	Identifier	state		10178442	1					
ANR	10178469	ExpressionStatement	sp -> stream . avail_in = 0	1231:1:36232:36255	10178442	4	True				
ANR	10178470	AssignmentExpression	sp -> stream . avail_in = 0		10178442	0		=			
ANR	10178471	MemberAccess	sp -> stream . avail_in		10178442	0					
ANR	10178472	PtrMemberAccess	sp -> stream		10178442	0					
ANR	10178473	Identifier	sp		10178442	0					
ANR	10178474	Identifier	stream		10178442	1					
ANR	10178475	Identifier	avail_in		10178442	1					
ANR	10178476	PrimaryExpression	0		10178442	1					
ANR	10178477	DoStatement	do		10178442	5					
ANR	10178478	CompoundStatement		8:4:137:137	10178442	0					
ANR	10178479	ExpressionStatement	"state = deflate ( & sp -> stream , Z_FINISH )"	1234:2:36266:36304	10178442	0	True				
ANR	10178480	AssignmentExpression	"state = deflate ( & sp -> stream , Z_FINISH )"		10178442	0		=			
ANR	10178481	Identifier	state		10178442	0					
ANR	10178482	CallExpression	"deflate ( & sp -> stream , Z_FINISH )"		10178442	1					
ANR	10178483	Callee	deflate		10178442	0					
ANR	10178484	Identifier	deflate		10178442	0					
ANR	10178485	ArgumentList	& sp -> stream		10178442	1					
ANR	10178486	Argument	& sp -> stream		10178442	0					
ANR	10178487	UnaryOperationExpression	& sp -> stream		10178442	0					
ANR	10178488	UnaryOperator	&		10178442	0					
ANR	10178489	PtrMemberAccess	sp -> stream		10178442	1					
ANR	10178490	Identifier	sp		10178442	0					
ANR	10178491	Identifier	stream		10178442	1					
ANR	10178492	Argument	Z_FINISH		10178442	1					
ANR	10178493	Identifier	Z_FINISH		10178442	0					
ANR	10178494	SwitchStatement	switch ( state )		10178442	1					
ANR	10178495	Condition	state	1235:10:36316:36320	10178442	0	True				
ANR	10178496	Identifier	state		10178442	0					
ANR	10178497	CompoundStatement		10:17:198:198	10178442	1					
ANR	10178498	Label	case Z_STREAM_END :	1236:2:36327:36344	10178442	0	True				
ANR	10178499	Identifier	Z_STREAM_END		10178442	0					
ANR	10178500	Label	case Z_OK :	1237:2:36348:36357	10178442	1	True				
ANR	10178501	Identifier	Z_OK		10178442	0					
ANR	10178502	IfStatement	if ( ( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize )		10178442	2					
ANR	10178503	Condition	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize	1238:10:36369:36422	10178442	0	True				
ANR	10178504	EqualityExpression	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize		10178442	0		!=			
ANR	10178505	CastExpression	( tmsize_t ) sp -> stream . avail_out		10178442	0					
ANR	10178506	CastTarget	tmsize_t		10178442	0					
ANR	10178507	MemberAccess	sp -> stream . avail_out		10178442	1					
ANR	10178508	PtrMemberAccess	sp -> stream		10178442	0					
ANR	10178509	Identifier	sp		10178442	0					
ANR	10178510	Identifier	stream		10178442	1					
ANR	10178511	Identifier	avail_out		10178442	1					
ANR	10178512	PtrMemberAccess	tif -> tif_rawdatasize		10178442	1					
ANR	10178513	Identifier	tif		10178442	0					
ANR	10178514	Identifier	tif_rawdatasize		10178442	1					
ANR	10178515	CompoundStatement		13:66:300:300	10178442	1					
ANR	10178516	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - sp -> stream . avail_out	1239:7:36434:36498	10178442	0	True				
ANR	10178517	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - sp -> stream . avail_out		10178442	0		=			
ANR	10178518	PtrMemberAccess	tif -> tif_rawcc		10178442	0					
ANR	10178519	Identifier	tif		10178442	0					
ANR	10178520	Identifier	tif_rawcc		10178442	1					
ANR	10178521	AdditiveExpression	tif -> tif_rawdatasize - sp -> stream . avail_out		10178442	1		-			
ANR	10178522	PtrMemberAccess	tif -> tif_rawdatasize		10178442	0					
ANR	10178523	Identifier	tif		10178442	0					
ANR	10178524	Identifier	tif_rawdatasize		10178442	1					
ANR	10178525	MemberAccess	sp -> stream . avail_out		10178442	1					
ANR	10178526	PtrMemberAccess	sp -> stream		10178442	0					
ANR	10178527	Identifier	sp		10178442	0					
ANR	10178528	Identifier	stream		10178442	1					
ANR	10178529	Identifier	avail_out		10178442	1					
ANR	10178530	ExpressionStatement	TIFFFlushData1 ( tif )	1241:7:36507:36526	10178442	1	True				
ANR	10178531	CallExpression	TIFFFlushData1 ( tif )		10178442	0					
ANR	10178532	Callee	TIFFFlushData1		10178442	0					
ANR	10178533	Identifier	TIFFFlushData1		10178442	0					
ANR	10178534	ArgumentList	tif		10178442	1					
ANR	10178535	Argument	tif		10178442	0					
ANR	10178536	Identifier	tif		10178442	0					
ANR	10178537	ExpressionStatement	sp -> stream . next_out = tif -> tif_rawdata	1242:7:36535:36573	10178442	2	True				
ANR	10178538	AssignmentExpression	sp -> stream . next_out = tif -> tif_rawdata		10178442	0		=			
ANR	10178539	MemberAccess	sp -> stream . next_out		10178442	0					
ANR	10178540	PtrMemberAccess	sp -> stream		10178442	0					
ANR	10178541	Identifier	sp		10178442	0					
ANR	10178542	Identifier	stream		10178442	1					
ANR	10178543	Identifier	next_out		10178442	1					
ANR	10178544	PtrMemberAccess	tif -> tif_rawdata		10178442	1					
ANR	10178545	Identifier	tif		10178442	0					
ANR	10178546	Identifier	tif_rawdata		10178442	1					
ANR	10178547	ExpressionStatement	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize	1243:7:36582:36632	10178442	3	True				
ANR	10178548	AssignmentExpression	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize		10178442	0		=			
ANR	10178549	MemberAccess	sp -> stream . avail_out		10178442	0					
ANR	10178550	PtrMemberAccess	sp -> stream		10178442	0					
ANR	10178551	Identifier	sp		10178442	0					
ANR	10178552	Identifier	stream		10178442	1					
ANR	10178553	Identifier	avail_out		10178442	1					
ANR	10178554	CastExpression	( uInt ) tif -> tif_rawdatasize		10178442	1					
ANR	10178555	CastTarget	uInt		10178442	0					
ANR	10178556	PtrMemberAccess	tif -> tif_rawdatasize		10178442	1					
ANR	10178557	Identifier	tif		10178442	0					
ANR	10178558	Identifier	tif_rawdatasize		10178442	1					
ANR	10178559	BreakStatement	break ;	1245:6:36726:36731	10178442	3	True				
ANR	10178560	Label	default :	1246:2:36735:36742	10178442	4	True				
ANR	10178561	Identifier	default		10178442	0					
ANR	10178562	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"	1247:3:36747:36853	10178442	5	True				
ANR	10178563	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"		10178442	0					
ANR	10178564	Callee	TIFFErrorExt		10178442	0					
ANR	10178565	Identifier	TIFFErrorExt		10178442	0					
ANR	10178566	ArgumentList	tif -> tif_clientdata		10178442	1					
ANR	10178567	Argument	tif -> tif_clientdata		10178442	0					
ANR	10178568	PtrMemberAccess	tif -> tif_clientdata		10178442	0					
ANR	10178569	Identifier	tif		10178442	0					
ANR	10178570	Identifier	tif_clientdata		10178442	1					
ANR	10178571	Argument	module		10178442	1					
ANR	10178572	Identifier	module		10178442	0					
ANR	10178573	Argument	"""ZLib error: %s"""		10178442	2					
ANR	10178574	PrimaryExpression	"""ZLib error: %s"""		10178442	0					
ANR	10178575	Argument	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10178442	3					
ANR	10178576	ConditionalExpression	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10178442	0					
ANR	10178577	Condition	sp -> stream . msg		10178442	0					
ANR	10178578	MemberAccess	sp -> stream . msg		10178442	0					
ANR	10178579	PtrMemberAccess	sp -> stream		10178442	0					
ANR	10178580	Identifier	sp		10178442	0					
ANR	10178581	Identifier	stream		10178442	1					
ANR	10178582	Identifier	msg		10178442	1					
ANR	10178583	MemberAccess	sp -> stream . msg		10178442	1					
ANR	10178584	PtrMemberAccess	sp -> stream		10178442	0					
ANR	10178585	Identifier	sp		10178442	0					
ANR	10178586	Identifier	stream		10178442	1					
ANR	10178587	Identifier	msg		10178442	1					
ANR	10178588	PrimaryExpression	"""(null)"""		10178442	2					
ANR	10178589	ReturnStatement	return ( 0 ) ;	1249:6:36861:36871	10178442	6	True				
ANR	10178590	PrimaryExpression	0		10178442	0					
ANR	10178591	Condition	state != Z_STREAM_END	1251:10:36887:36907	10178442	1	True				
ANR	10178592	EqualityExpression	state != Z_STREAM_END		10178442	0		!=			
ANR	10178593	Identifier	state		10178442	0					
ANR	10178594	Identifier	Z_STREAM_END		10178442	1					
ANR	10178595	ReturnStatement	return ( 1 ) ;	1252:1:36912:36922	10178442	6	True				
ANR	10178596	PrimaryExpression	1		10178442	0					
ANR	10178597	ReturnType	static int		10178442	1					
ANR	10178598	Identifier	PixarLogPostEncode		10178442	2					
ANR	10178599	ParameterList	TIFF * tif		10178442	3					
ANR	10178600	Parameter	TIFF * tif	1225:19:36113:36121	10178442	0	True				
ANR	10178601	ParameterType	TIFF *		10178442	0					
ANR	10178602	Identifier	tif		10178442	1					
ANR	10178603	CFGEntryNode	ENTRY		10178442		True				
ANR	10178604	CFGExitNode	EXIT		10178442		True				
ANR	10178605	Symbol	* sp		10178442						
ANR	10178606	Symbol	EncoderState		10178442						
ANR	10178607	Symbol	& sp -> stream		10178442						
ANR	10178608	Symbol	module		10178442						
ANR	10178609	Symbol	sp -> stream . next_out		10178442						
ANR	10178610	Symbol	sp -> stream . avail_out		10178442						
ANR	10178611	Symbol	Z_FINISH		10178442						
ANR	10178612	Symbol	tif -> tif_clientdata		10178442						
ANR	10178613	Symbol	tif		10178442						
ANR	10178614	Symbol	tif -> tif_rawcc		10178442						
ANR	10178615	Symbol	sp -> stream . avail_in		10178442						
ANR	10178616	Symbol	deflate		10178442						
ANR	10178617	Symbol	tif -> tif_rawdatasize		10178442						
ANR	10178618	Symbol	sp -> stream . msg		10178442						
ANR	10178619	Symbol	Z_STREAM_END		10178442						
ANR	10178620	Symbol	sp -> stream		10178442						
ANR	10178621	Symbol	state		10178442						
ANR	10178622	Symbol	* tif		10178442						
ANR	10178623	Symbol	sp		10178442						
ANR	10178624	Symbol	tif -> tif_rawdata		10178442						
ANR	10178625	Function	PixarLogClose	1255:0:36927:38158							
ANR	10178626	FunctionDef	PixarLogClose (TIFF * tif)		10178625	0					
ANR	10178627	CompoundStatement		1257:0:36964:38158	10178625	0					
ANR	10178628	IdentifierDeclStatement	PixarLogState * sp = ( PixarLogState * ) tif -> tif_data ;	1258:8:36974:37024	10178625	0	True				
ANR	10178629	IdentifierDecl	* sp = ( PixarLogState * ) tif -> tif_data		10178625	0					
ANR	10178630	IdentifierDeclType	PixarLogState *		10178625	0					
ANR	10178631	Identifier	sp		10178625	1					
ANR	10178632	AssignmentExpression	* sp = ( PixarLogState * ) tif -> tif_data		10178625	2		=			
ANR	10178633	Identifier	sp		10178625	0					
ANR	10178634	CastExpression	( PixarLogState * ) tif -> tif_data		10178625	1					
ANR	10178635	CastTarget	PixarLogState *		10178625	0					
ANR	10178636	PtrMemberAccess	tif -> tif_data		10178625	1					
ANR	10178637	Identifier	tif		10178625	0					
ANR	10178638	Identifier	tif_data		10178625	1					
ANR	10178639	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1259:1:37027:37060	10178625	1	True				
ANR	10178640	IdentifierDecl	* td = & tif -> tif_dir		10178625	0					
ANR	10178641	IdentifierDeclType	TIFFDirectory *		10178625	0					
ANR	10178642	Identifier	td		10178625	1					
ANR	10178643	AssignmentExpression	* td = & tif -> tif_dir		10178625	2		=			
ANR	10178644	Identifier	td		10178625	0					
ANR	10178645	UnaryOperationExpression	& tif -> tif_dir		10178625	1					
ANR	10178646	UnaryOperator	&		10178625	0					
ANR	10178647	PtrMemberAccess	tif -> tif_dir		10178625	1					
ANR	10178648	Identifier	tif		10178625	0					
ANR	10178649	Identifier	tif_dir		10178625	1					
ANR	10178650	ExpressionStatement	assert ( sp != 0 )	1261:1:37064:37079	10178625	2	True				
ANR	10178651	CallExpression	assert ( sp != 0 )		10178625	0					
ANR	10178652	Callee	assert		10178625	0					
ANR	10178653	Identifier	assert		10178625	0					
ANR	10178654	ArgumentList	sp != 0		10178625	1					
ANR	10178655	Argument	sp != 0		10178625	0					
ANR	10178656	EqualityExpression	sp != 0		10178625	0		!=			
ANR	10178657	Identifier	sp		10178625	0					
ANR	10178658	PrimaryExpression	0		10178625	1					
ANR	10178659	IfStatement	if ( sp -> state & PLSTATE_INIT )		10178625	3					
ANR	10178660	Condition	sp -> state & PLSTATE_INIT	1271:12:37531:37552	10178625	0	True				
ANR	10178661	BitAndExpression	sp -> state & PLSTATE_INIT		10178625	0		&			
ANR	10178662	PtrMemberAccess	sp -> state		10178625	0					
ANR	10178663	Identifier	sp		10178625	0					
ANR	10178664	Identifier	state		10178625	1					
ANR	10178665	Identifier	PLSTATE_INIT		10178625	1					
ANR	10178666	CompoundStatement		15:36:590:590	10178625	1					
ANR	10178667	ExpressionStatement	td -> td_bitspersample = 8	1280:12:38069:38093	10178625	0	True				
ANR	10178668	AssignmentExpression	td -> td_bitspersample = 8		10178625	0		=			
ANR	10178669	PtrMemberAccess	td -> td_bitspersample		10178625	0					
ANR	10178670	Identifier	td		10178625	0					
ANR	10178671	Identifier	td_bitspersample		10178625	1					
ANR	10178672	PrimaryExpression	8		10178625	1					
ANR	10178673	ExpressionStatement	td -> td_sampleformat = SAMPLEFORMAT_UINT	1281:12:38107:38146	10178625	1	True				
ANR	10178674	AssignmentExpression	td -> td_sampleformat = SAMPLEFORMAT_UINT		10178625	0		=			
ANR	10178675	PtrMemberAccess	td -> td_sampleformat		10178625	0					
ANR	10178676	Identifier	td		10178625	0					
ANR	10178677	Identifier	td_sampleformat		10178625	1					
ANR	10178678	Identifier	SAMPLEFORMAT_UINT		10178625	1					
ANR	10178679	ReturnType	static void		10178625	1					
ANR	10178680	Identifier	PixarLogClose		10178625	2					
ANR	10178681	ParameterList	TIFF * tif		10178625	3					
ANR	10178682	Parameter	TIFF * tif	1256:14:36953:36961	10178625	0	True				
ANR	10178683	ParameterType	TIFF *		10178625	0					
ANR	10178684	Identifier	tif		10178625	1					
ANR	10178685	CFGEntryNode	ENTRY		10178625		True				
ANR	10178686	CFGExitNode	EXIT		10178625		True				
ANR	10178687	Symbol	* sp		10178625						
ANR	10178688	Symbol	SAMPLEFORMAT_UINT		10178625						
ANR	10178689	Symbol	& tif -> tif_dir		10178625						
ANR	10178690	Symbol	sp -> state		10178625						
ANR	10178691	Symbol	tif		10178625						
ANR	10178692	Symbol	td		10178625						
ANR	10178693	Symbol	* td		10178625						
ANR	10178694	Symbol	td -> td_sampleformat		10178625						
ANR	10178695	Symbol	PLSTATE_INIT		10178625						
ANR	10178696	Symbol	* tif		10178625						
ANR	10178697	Symbol	sp		10178625						
ANR	10178698	Symbol	td -> td_bitspersample		10178625						
ANR	10178699	Symbol	tif -> tif_data		10178625						
ANR	10178700	Function	PixarLogCleanup	1285:0:38161:38916							
ANR	10178701	FunctionDef	PixarLogCleanup (TIFF * tif)		10178700	0					
ANR	10178702	CompoundStatement		1287:0:38200:38916	10178700	0					
ANR	10178703	IdentifierDeclStatement	PixarLogState * sp = ( PixarLogState * ) tif -> tif_data ;	1288:1:38203:38253	10178700	0	True				
ANR	10178704	IdentifierDecl	* sp = ( PixarLogState * ) tif -> tif_data		10178700	0					
ANR	10178705	IdentifierDeclType	PixarLogState *		10178700	0					
ANR	10178706	Identifier	sp		10178700	1					
ANR	10178707	AssignmentExpression	* sp = ( PixarLogState * ) tif -> tif_data		10178700	2		=			
ANR	10178708	Identifier	sp		10178700	0					
ANR	10178709	CastExpression	( PixarLogState * ) tif -> tif_data		10178700	1					
ANR	10178710	CastTarget	PixarLogState *		10178700	0					
ANR	10178711	PtrMemberAccess	tif -> tif_data		10178700	1					
ANR	10178712	Identifier	tif		10178700	0					
ANR	10178713	Identifier	tif_data		10178700	1					
ANR	10178714	ExpressionStatement	assert ( sp != 0 )	1290:1:38257:38272	10178700	1	True				
ANR	10178715	CallExpression	assert ( sp != 0 )		10178700	0					
ANR	10178716	Callee	assert		10178700	0					
ANR	10178717	Identifier	assert		10178700	0					
ANR	10178718	ArgumentList	sp != 0		10178700	1					
ANR	10178719	Argument	sp != 0		10178700	0					
ANR	10178720	EqualityExpression	sp != 0		10178700	0		!=			
ANR	10178721	Identifier	sp		10178700	0					
ANR	10178722	PrimaryExpression	0		10178700	1					
ANR	10178723	ExpressionStatement	( void ) TIFFPredictorCleanup ( tif )	1292:1:38276:38307	10178700	2	True				
ANR	10178724	CastExpression	( void ) TIFFPredictorCleanup ( tif )		10178700	0					
ANR	10178725	CastTarget	void		10178700	0					
ANR	10178726	CallExpression	TIFFPredictorCleanup ( tif )		10178700	1					
ANR	10178727	Callee	TIFFPredictorCleanup		10178700	0					
ANR	10178728	Identifier	TIFFPredictorCleanup		10178700	0					
ANR	10178729	ArgumentList	tif		10178700	1					
ANR	10178730	Argument	tif		10178700	0					
ANR	10178731	Identifier	tif		10178700	0					
ANR	10178732	ExpressionStatement	tif -> tif_tagmethods . vgetfield = sp -> vgetparent	1294:1:38311:38357	10178700	3	True				
ANR	10178733	AssignmentExpression	tif -> tif_tagmethods . vgetfield = sp -> vgetparent		10178700	0		=			
ANR	10178734	MemberAccess	tif -> tif_tagmethods . vgetfield		10178700	0					
ANR	10178735	PtrMemberAccess	tif -> tif_tagmethods		10178700	0					
ANR	10178736	Identifier	tif		10178700	0					
ANR	10178737	Identifier	tif_tagmethods		10178700	1					
ANR	10178738	Identifier	vgetfield		10178700	1					
ANR	10178739	PtrMemberAccess	sp -> vgetparent		10178700	1					
ANR	10178740	Identifier	sp		10178700	0					
ANR	10178741	Identifier	vgetparent		10178700	1					
ANR	10178742	ExpressionStatement	tif -> tif_tagmethods . vsetfield = sp -> vsetparent	1295:1:38360:38406	10178700	4	True				
ANR	10178743	AssignmentExpression	tif -> tif_tagmethods . vsetfield = sp -> vsetparent		10178700	0		=			
ANR	10178744	MemberAccess	tif -> tif_tagmethods . vsetfield		10178700	0					
ANR	10178745	PtrMemberAccess	tif -> tif_tagmethods		10178700	0					
ANR	10178746	Identifier	tif		10178700	0					
ANR	10178747	Identifier	tif_tagmethods		10178700	1					
ANR	10178748	Identifier	vsetfield		10178700	1					
ANR	10178749	PtrMemberAccess	sp -> vsetparent		10178700	1					
ANR	10178750	Identifier	sp		10178700	0					
ANR	10178751	Identifier	vsetparent		10178700	1					
ANR	10178752	IfStatement	if ( sp -> FromLT2 )		10178700	5					
ANR	10178753	Condition	sp -> FromLT2	1297:5:38414:38424	10178700	0	True				
ANR	10178754	PtrMemberAccess	sp -> FromLT2		10178700	0					
ANR	10178755	Identifier	sp		10178700	0					
ANR	10178756	Identifier	FromLT2		10178700	1					
ANR	10178757	ExpressionStatement	_TIFFfree ( sp -> FromLT2 )	1297:18:38427:38449	10178700	1	True				
ANR	10178758	CallExpression	_TIFFfree ( sp -> FromLT2 )		10178700	0					
ANR	10178759	Callee	_TIFFfree		10178700	0					
ANR	10178760	Identifier	_TIFFfree		10178700	0					
ANR	10178761	ArgumentList	sp -> FromLT2		10178700	1					
ANR	10178762	Argument	sp -> FromLT2		10178700	0					
ANR	10178763	PtrMemberAccess	sp -> FromLT2		10178700	0					
ANR	10178764	Identifier	sp		10178700	0					
ANR	10178765	Identifier	FromLT2		10178700	1					
ANR	10178766	IfStatement	if ( sp -> From14 )		10178700	6					
ANR	10178767	Condition	sp -> From14	1298:5:38456:38465	10178700	0	True				
ANR	10178768	PtrMemberAccess	sp -> From14		10178700	0					
ANR	10178769	Identifier	sp		10178700	0					
ANR	10178770	Identifier	From14		10178700	1					
ANR	10178771	ExpressionStatement	_TIFFfree ( sp -> From14 )	1298:17:38468:38489	10178700	1	True				
ANR	10178772	CallExpression	_TIFFfree ( sp -> From14 )		10178700	0					
ANR	10178773	Callee	_TIFFfree		10178700	0					
ANR	10178774	Identifier	_TIFFfree		10178700	0					
ANR	10178775	ArgumentList	sp -> From14		10178700	1					
ANR	10178776	Argument	sp -> From14		10178700	0					
ANR	10178777	PtrMemberAccess	sp -> From14		10178700	0					
ANR	10178778	Identifier	sp		10178700	0					
ANR	10178779	Identifier	From14		10178700	1					
ANR	10178780	IfStatement	if ( sp -> From8 )		10178700	7					
ANR	10178781	Condition	sp -> From8	1299:5:38496:38504	10178700	0	True				
ANR	10178782	PtrMemberAccess	sp -> From8		10178700	0					
ANR	10178783	Identifier	sp		10178700	0					
ANR	10178784	Identifier	From8		10178700	1					
ANR	10178785	ExpressionStatement	_TIFFfree ( sp -> From8 )	1299:16:38507:38527	10178700	1	True				
ANR	10178786	CallExpression	_TIFFfree ( sp -> From8 )		10178700	0					
ANR	10178787	Callee	_TIFFfree		10178700	0					
ANR	10178788	Identifier	_TIFFfree		10178700	0					
ANR	10178789	ArgumentList	sp -> From8		10178700	1					
ANR	10178790	Argument	sp -> From8		10178700	0					
ANR	10178791	PtrMemberAccess	sp -> From8		10178700	0					
ANR	10178792	Identifier	sp		10178700	0					
ANR	10178793	Identifier	From8		10178700	1					
ANR	10178794	IfStatement	if ( sp -> ToLinearF )		10178700	8					
ANR	10178795	Condition	sp -> ToLinearF	1300:5:38534:38546	10178700	0	True				
ANR	10178796	PtrMemberAccess	sp -> ToLinearF		10178700	0					
ANR	10178797	Identifier	sp		10178700	0					
ANR	10178798	Identifier	ToLinearF		10178700	1					
ANR	10178799	ExpressionStatement	_TIFFfree ( sp -> ToLinearF )	1300:20:38549:38573	10178700	1	True				
ANR	10178800	CallExpression	_TIFFfree ( sp -> ToLinearF )		10178700	0					
ANR	10178801	Callee	_TIFFfree		10178700	0					
ANR	10178802	Identifier	_TIFFfree		10178700	0					
ANR	10178803	ArgumentList	sp -> ToLinearF		10178700	1					
ANR	10178804	Argument	sp -> ToLinearF		10178700	0					
ANR	10178805	PtrMemberAccess	sp -> ToLinearF		10178700	0					
ANR	10178806	Identifier	sp		10178700	0					
ANR	10178807	Identifier	ToLinearF		10178700	1					
ANR	10178808	IfStatement	if ( sp -> ToLinear16 )		10178700	9					
ANR	10178809	Condition	sp -> ToLinear16	1301:5:38580:38593	10178700	0	True				
ANR	10178810	PtrMemberAccess	sp -> ToLinear16		10178700	0					
ANR	10178811	Identifier	sp		10178700	0					
ANR	10178812	Identifier	ToLinear16		10178700	1					
ANR	10178813	ExpressionStatement	_TIFFfree ( sp -> ToLinear16 )	1301:21:38596:38621	10178700	1	True				
ANR	10178814	CallExpression	_TIFFfree ( sp -> ToLinear16 )		10178700	0					
ANR	10178815	Callee	_TIFFfree		10178700	0					
ANR	10178816	Identifier	_TIFFfree		10178700	0					
ANR	10178817	ArgumentList	sp -> ToLinear16		10178700	1					
ANR	10178818	Argument	sp -> ToLinear16		10178700	0					
ANR	10178819	PtrMemberAccess	sp -> ToLinear16		10178700	0					
ANR	10178820	Identifier	sp		10178700	0					
ANR	10178821	Identifier	ToLinear16		10178700	1					
ANR	10178822	IfStatement	if ( sp -> ToLinear8 )		10178700	10					
ANR	10178823	Condition	sp -> ToLinear8	1302:5:38628:38640	10178700	0	True				
ANR	10178824	PtrMemberAccess	sp -> ToLinear8		10178700	0					
ANR	10178825	Identifier	sp		10178700	0					
ANR	10178826	Identifier	ToLinear8		10178700	1					
ANR	10178827	ExpressionStatement	_TIFFfree ( sp -> ToLinear8 )	1302:20:38643:38667	10178700	1	True				
ANR	10178828	CallExpression	_TIFFfree ( sp -> ToLinear8 )		10178700	0					
ANR	10178829	Callee	_TIFFfree		10178700	0					
ANR	10178830	Identifier	_TIFFfree		10178700	0					
ANR	10178831	ArgumentList	sp -> ToLinear8		10178700	1					
ANR	10178832	Argument	sp -> ToLinear8		10178700	0					
ANR	10178833	PtrMemberAccess	sp -> ToLinear8		10178700	0					
ANR	10178834	Identifier	sp		10178700	0					
ANR	10178835	Identifier	ToLinear8		10178700	1					
ANR	10178836	IfStatement	if ( sp -> state & PLSTATE_INIT )		10178700	11					
ANR	10178837	Condition	sp -> state & PLSTATE_INIT	1303:5:38674:38695	10178700	0	True				
ANR	10178838	BitAndExpression	sp -> state & PLSTATE_INIT		10178700	0		&			
ANR	10178839	PtrMemberAccess	sp -> state		10178700	0					
ANR	10178840	Identifier	sp		10178700	0					
ANR	10178841	Identifier	state		10178700	1					
ANR	10178842	Identifier	PLSTATE_INIT		10178700	1					
ANR	10178843	CompoundStatement		17:29:497:497	10178700	1					
ANR	10178844	IfStatement	if ( tif -> tif_mode == O_RDONLY )		10178700	0					
ANR	10178845	Condition	tif -> tif_mode == O_RDONLY	1304:6:38706:38730	10178700	0	True				
ANR	10178846	EqualityExpression	tif -> tif_mode == O_RDONLY		10178700	0		==			
ANR	10178847	PtrMemberAccess	tif -> tif_mode		10178700	0					
ANR	10178848	Identifier	tif		10178700	0					
ANR	10178849	Identifier	tif_mode		10178700	1					
ANR	10178850	Identifier	O_RDONLY		10178700	1					
ANR	10178851	ExpressionStatement	inflateEnd ( & sp -> stream )	1305:3:38736:38759	10178700	1	True				
ANR	10178852	CallExpression	inflateEnd ( & sp -> stream )		10178700	0					
ANR	10178853	Callee	inflateEnd		10178700	0					
ANR	10178854	Identifier	inflateEnd		10178700	0					
ANR	10178855	ArgumentList	& sp -> stream		10178700	1					
ANR	10178856	Argument	& sp -> stream		10178700	0					
ANR	10178857	UnaryOperationExpression	& sp -> stream		10178700	0					
ANR	10178858	UnaryOperator	&		10178700	0					
ANR	10178859	PtrMemberAccess	sp -> stream		10178700	1					
ANR	10178860	Identifier	sp		10178700	0					
ANR	10178861	Identifier	stream		10178700	1					
ANR	10178862	ElseStatement	else		10178700	0					
ANR	10178863	ExpressionStatement	deflateEnd ( & sp -> stream )	1307:3:38771:38794	10178700	0	True				
ANR	10178864	CallExpression	deflateEnd ( & sp -> stream )		10178700	0					
ANR	10178865	Callee	deflateEnd		10178700	0					
ANR	10178866	Identifier	deflateEnd		10178700	0					
ANR	10178867	ArgumentList	& sp -> stream		10178700	1					
ANR	10178868	Argument	& sp -> stream		10178700	0					
ANR	10178869	UnaryOperationExpression	& sp -> stream		10178700	0					
ANR	10178870	UnaryOperator	&		10178700	0					
ANR	10178871	PtrMemberAccess	sp -> stream		10178700	1					
ANR	10178872	Identifier	sp		10178700	0					
ANR	10178873	Identifier	stream		10178700	1					
ANR	10178874	IfStatement	if ( sp -> tbuf )		10178700	12					
ANR	10178875	Condition	sp -> tbuf	1309:5:38804:38811	10178700	0	True				
ANR	10178876	PtrMemberAccess	sp -> tbuf		10178700	0					
ANR	10178877	Identifier	sp		10178700	0					
ANR	10178878	Identifier	tbuf		10178700	1					
ANR	10178879	ExpressionStatement	_TIFFfree ( sp -> tbuf )	1310:2:38816:38835	10178700	1	True				
ANR	10178880	CallExpression	_TIFFfree ( sp -> tbuf )		10178700	0					
ANR	10178881	Callee	_TIFFfree		10178700	0					
ANR	10178882	Identifier	_TIFFfree		10178700	0					
ANR	10178883	ArgumentList	sp -> tbuf		10178700	1					
ANR	10178884	Argument	sp -> tbuf		10178700	0					
ANR	10178885	PtrMemberAccess	sp -> tbuf		10178700	0					
ANR	10178886	Identifier	sp		10178700	0					
ANR	10178887	Identifier	tbuf		10178700	1					
ANR	10178888	ExpressionStatement	_TIFFfree ( sp )	1311:1:38838:38851	10178700	13	True				
ANR	10178889	CallExpression	_TIFFfree ( sp )		10178700	0					
ANR	10178890	Callee	_TIFFfree		10178700	0					
ANR	10178891	Identifier	_TIFFfree		10178700	0					
ANR	10178892	ArgumentList	sp		10178700	1					
ANR	10178893	Argument	sp		10178700	0					
ANR	10178894	Identifier	sp		10178700	0					
ANR	10178895	ExpressionStatement	tif -> tif_data = NULL	1312:1:38854:38874	10178700	14	True				
ANR	10178896	AssignmentExpression	tif -> tif_data = NULL		10178700	0		=			
ANR	10178897	PtrMemberAccess	tif -> tif_data		10178700	0					
ANR	10178898	Identifier	tif		10178700	0					
ANR	10178899	Identifier	tif_data		10178700	1					
ANR	10178900	Identifier	NULL		10178700	1					
ANR	10178901	ExpressionStatement	_TIFFSetDefaultCompressionState ( tif )	1314:1:38878:38914	10178700	15	True				
ANR	10178902	CallExpression	_TIFFSetDefaultCompressionState ( tif )		10178700	0					
ANR	10178903	Callee	_TIFFSetDefaultCompressionState		10178700	0					
ANR	10178904	Identifier	_TIFFSetDefaultCompressionState		10178700	0					
ANR	10178905	ArgumentList	tif		10178700	1					
ANR	10178906	Argument	tif		10178700	0					
ANR	10178907	Identifier	tif		10178700	0					
ANR	10178908	ReturnType	static void		10178700	1					
ANR	10178909	Identifier	PixarLogCleanup		10178700	2					
ANR	10178910	ParameterList	TIFF * tif		10178700	3					
ANR	10178911	Parameter	TIFF * tif	1286:16:38189:38197	10178700	0	True				
ANR	10178912	ParameterType	TIFF *		10178700	0					
ANR	10178913	Identifier	tif		10178700	1					
ANR	10178914	CFGEntryNode	ENTRY		10178700		True				
ANR	10178915	CFGExitNode	EXIT		10178700		True				
ANR	10178916	Symbol	* sp		10178700						
ANR	10178917	Symbol	tif -> tif_tagmethods . vsetfield		10178700						
ANR	10178918	Symbol	sp -> FromLT2		10178700						
ANR	10178919	Symbol	NULL		10178700						
ANR	10178920	Symbol	& sp -> stream		10178700						
ANR	10178921	Symbol	sp -> vgetparent		10178700						
ANR	10178922	Symbol	sp -> ToLinear8		10178700						
ANR	10178923	Symbol	sp -> vsetparent		10178700						
ANR	10178924	Symbol	sp -> state		10178700						
ANR	10178925	Symbol	sp -> From8		10178700						
ANR	10178926	Symbol	tif		10178700						
ANR	10178927	Symbol	sp -> ToLinear16		10178700						
ANR	10178928	Symbol	O_RDONLY		10178700						
ANR	10178929	Symbol	tif -> tif_tagmethods		10178700						
ANR	10178930	Symbol	sp -> From14		10178700						
ANR	10178931	Symbol	sp -> tbuf		10178700						
ANR	10178932	Symbol	tif -> tif_tagmethods . vgetfield		10178700						
ANR	10178933	Symbol	sp -> ToLinearF		10178700						
ANR	10178934	Symbol	PLSTATE_INIT		10178700						
ANR	10178935	Symbol	* tif		10178700						
ANR	10178936	Symbol	tif -> tif_mode		10178700						
ANR	10178937	Symbol	sp		10178700						
ANR	10178938	Symbol	tif -> tif_data		10178700						
ANR	10178939	Function	PixarLogVSetField	1317:0:38919:40991							
ANR	10178940	FunctionDef	"PixarLogVSetField (TIFF * tif , uint32 tag , va_list ap)"		10178939	0					
ANR	10178941	CompoundStatement		1319:0:38983:40991	10178939	0					
ANR	10178942	Statement	static	1320:4:38989:38994	10178939	0	True				
ANR	10178943	IdentifierDeclStatement	"const char module [ ] = ""PixarLogVSetField"" ;"	1320:11:38996:39037	10178939	1	True				
ANR	10178944	IdentifierDecl	"module [ ] = ""PixarLogVSetField"""		10178939	0					
ANR	10178945	IdentifierDeclType	const char [ ]		10178939	0					
ANR	10178946	Identifier	module		10178939	1					
ANR	10178947	AssignmentExpression	"module [ ] = ""PixarLogVSetField"""		10178939	2		=			
ANR	10178948	Identifier	module		10178939	0					
ANR	10178949	PrimaryExpression	"""PixarLogVSetField"""		10178939	1					
ANR	10178950	IdentifierDeclStatement	PixarLogState * sp = ( PixarLogState * ) tif -> tif_data ;	1321:4:39043:39093	10178939	2	True				
ANR	10178951	IdentifierDecl	* sp = ( PixarLogState * ) tif -> tif_data		10178939	0					
ANR	10178952	IdentifierDeclType	PixarLogState *		10178939	0					
ANR	10178953	Identifier	sp		10178939	1					
ANR	10178954	AssignmentExpression	* sp = ( PixarLogState * ) tif -> tif_data		10178939	2		=			
ANR	10178955	Identifier	sp		10178939	0					
ANR	10178956	CastExpression	( PixarLogState * ) tif -> tif_data		10178939	1					
ANR	10178957	CastTarget	PixarLogState *		10178939	0					
ANR	10178958	PtrMemberAccess	tif -> tif_data		10178939	1					
ANR	10178959	Identifier	tif		10178939	0					
ANR	10178960	Identifier	tif_data		10178939	1					
ANR	10178961	IdentifierDeclStatement	int result ;	1322:4:39099:39109	10178939	3	True				
ANR	10178962	IdentifierDecl	result		10178939	0					
ANR	10178963	IdentifierDeclType	int		10178939	0					
ANR	10178964	Identifier	result		10178939	1					
ANR	10178965	SwitchStatement	switch ( tag )		10178939	4					
ANR	10178966	Condition	tag	1324:12:39124:39126	10178939	0	True				
ANR	10178967	Identifier	tag		10178939	0					
ANR	10178968	CompoundStatement		6:17:145:145	10178939	1					
ANR	10178969	Label	case TIFFTAG_PIXARLOGQUALITY :	1325:5:39136:39164	10178939	0	True				
ANR	10178970	Identifier	TIFFTAG_PIXARLOGQUALITY		10178939	0					
ANR	10178971	ExpressionStatement	"sp -> quality = ( int ) va_arg ( ap , int )"	1326:2:39168:39203	10178939	1	True				
ANR	10178972	AssignmentExpression	"sp -> quality = ( int ) va_arg ( ap , int )"		10178939	0		=			
ANR	10178973	PtrMemberAccess	sp -> quality		10178939	0					
ANR	10178974	Identifier	sp		10178939	0					
ANR	10178975	Identifier	quality		10178939	1					
ANR	10178976	CastExpression	"( int ) va_arg ( ap , int )"		10178939	1					
ANR	10178977	CastTarget	int		10178939	0					
ANR	10178978	CallExpression	"va_arg ( ap , int )"		10178939	1					
ANR	10178979	Callee	va_arg		10178939	0					
ANR	10178980	Identifier	va_arg		10178939	0					
ANR	10178981	ArgumentList	ap		10178939	1					
ANR	10178982	Argument	ap		10178939	0					
ANR	10178983	Identifier	ap		10178939	0					
ANR	10178984	Argument	int		10178939	1					
ANR	10178985	Identifier	int		10178939	0					
ANR	10178986	IfStatement	if ( tif -> tif_mode != O_RDONLY && ( sp -> state & PLSTATE_INIT ) )		10178939	2					
ANR	10178987	Condition	tif -> tif_mode != O_RDONLY && ( sp -> state & PLSTATE_INIT )	1327:6:39211:39263	10178939	0	True				
ANR	10178988	AndExpression	tif -> tif_mode != O_RDONLY && ( sp -> state & PLSTATE_INIT )		10178939	0		&&			
ANR	10178989	EqualityExpression	tif -> tif_mode != O_RDONLY		10178939	0		!=			
ANR	10178990	PtrMemberAccess	tif -> tif_mode		10178939	0					
ANR	10178991	Identifier	tif		10178939	0					
ANR	10178992	Identifier	tif_mode		10178939	1					
ANR	10178993	Identifier	O_RDONLY		10178939	1					
ANR	10178994	BitAndExpression	sp -> state & PLSTATE_INIT		10178939	1		&			
ANR	10178995	PtrMemberAccess	sp -> state		10178939	0					
ANR	10178996	Identifier	sp		10178939	0					
ANR	10178997	Identifier	state		10178939	1					
ANR	10178998	Identifier	PLSTATE_INIT		10178939	1					
ANR	10178999	CompoundStatement		9:61:282:282	10178939	1					
ANR	10179000	IfStatement	"if ( deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY ) != Z_OK )"		10178939	0					
ANR	10179001	Condition	"deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY ) != Z_OK"	1328:7:39275:39348	10178939	0	True				
ANR	10179002	EqualityExpression	"deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY ) != Z_OK"		10178939	0		!=			
ANR	10179003	CallExpression	"deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY )"		10178939	0					
ANR	10179004	Callee	deflateParams		10178939	0					
ANR	10179005	Identifier	deflateParams		10178939	0					
ANR	10179006	ArgumentList	& sp -> stream		10178939	1					
ANR	10179007	Argument	& sp -> stream		10178939	0					
ANR	10179008	UnaryOperationExpression	& sp -> stream		10178939	0					
ANR	10179009	UnaryOperator	&		10178939	0					
ANR	10179010	PtrMemberAccess	sp -> stream		10178939	1					
ANR	10179011	Identifier	sp		10178939	0					
ANR	10179012	Identifier	stream		10178939	1					
ANR	10179013	Argument	sp -> quality		10178939	1					
ANR	10179014	PtrMemberAccess	sp -> quality		10178939	0					
ANR	10179015	Identifier	sp		10178939	0					
ANR	10179016	Identifier	quality		10178939	1					
ANR	10179017	Argument	Z_DEFAULT_STRATEGY		10178939	2					
ANR	10179018	Identifier	Z_DEFAULT_STRATEGY		10178939	0					
ANR	10179019	Identifier	Z_OK		10178939	1					
ANR	10179020	CompoundStatement		11:49:367:367	10178939	1					
ANR	10179021	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"	1330:4:39357:39465	10178939	0	True				
ANR	10179022	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg ? sp -> stream . msg : ""(null)"" )"		10178939	0					
ANR	10179023	Callee	TIFFErrorExt		10178939	0					
ANR	10179024	Identifier	TIFFErrorExt		10178939	0					
ANR	10179025	ArgumentList	tif -> tif_clientdata		10178939	1					
ANR	10179026	Argument	tif -> tif_clientdata		10178939	0					
ANR	10179027	PtrMemberAccess	tif -> tif_clientdata		10178939	0					
ANR	10179028	Identifier	tif		10178939	0					
ANR	10179029	Identifier	tif_clientdata		10178939	1					
ANR	10179030	Argument	module		10178939	1					
ANR	10179031	Identifier	module		10178939	0					
ANR	10179032	Argument	"""ZLib error: %s"""		10178939	2					
ANR	10179033	PrimaryExpression	"""ZLib error: %s"""		10178939	0					
ANR	10179034	Argument	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10178939	3					
ANR	10179035	ConditionalExpression	"sp -> stream . msg ? sp -> stream . msg : ""(null)"""		10178939	0					
ANR	10179036	Condition	sp -> stream . msg		10178939	0					
ANR	10179037	MemberAccess	sp -> stream . msg		10178939	0					
ANR	10179038	PtrMemberAccess	sp -> stream		10178939	0					
ANR	10179039	Identifier	sp		10178939	0					
ANR	10179040	Identifier	stream		10178939	1					
ANR	10179041	Identifier	msg		10178939	1					
ANR	10179042	MemberAccess	sp -> stream . msg		10178939	1					
ANR	10179043	PtrMemberAccess	sp -> stream		10178939	0					
ANR	10179044	Identifier	sp		10178939	0					
ANR	10179045	Identifier	stream		10178939	1					
ANR	10179046	Identifier	msg		10178939	1					
ANR	10179047	PrimaryExpression	"""(null)"""		10178939	2					
ANR	10179048	ReturnStatement	return ( 0 ) ;	1332:4:39471:39481	10178939	1	True				
ANR	10179049	PrimaryExpression	0		10178939	0					
ANR	10179050	ReturnStatement	return ( 1 ) ;	1335:2:39494:39504	10178939	3	True				
ANR	10179051	PrimaryExpression	1		10178939	0					
ANR	10179052	Label	case TIFFTAG_PIXARLOGDATAFMT :	1336:5:39511:39539	10178939	4	True				
ANR	10179053	Identifier	TIFFTAG_PIXARLOGDATAFMT		10178939	0					
ANR	10179054	ExpressionStatement	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"	1337:1:39542:39582	10178939	5	True				
ANR	10179055	AssignmentExpression	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"		10178939	0		=			
ANR	10179056	PtrMemberAccess	sp -> user_datafmt		10178939	0					
ANR	10179057	Identifier	sp		10178939	0					
ANR	10179058	Identifier	user_datafmt		10178939	1					
ANR	10179059	CastExpression	"( int ) va_arg ( ap , int )"		10178939	1					
ANR	10179060	CastTarget	int		10178939	0					
ANR	10179061	CallExpression	"va_arg ( ap , int )"		10178939	1					
ANR	10179062	Callee	va_arg		10178939	0					
ANR	10179063	Identifier	va_arg		10178939	0					
ANR	10179064	ArgumentList	ap		10178939	1					
ANR	10179065	Argument	ap		10178939	0					
ANR	10179066	Identifier	ap		10178939	0					
ANR	10179067	Argument	int		10178939	1					
ANR	10179068	Identifier	int		10178939	0					
ANR	10179069	SwitchStatement	switch ( sp -> user_datafmt )		10178939	6					
ANR	10179070	Condition	sp -> user_datafmt	1343:9:39828:39843	10178939	0	True				
ANR	10179071	PtrMemberAccess	sp -> user_datafmt		10178939	0					
ANR	10179072	Identifier	sp		10178939	0					
ANR	10179073	Identifier	user_datafmt		10178939	1					
ANR	10179074	CompoundStatement		25:27:862:862	10178939	1					
ANR	10179075	Label	case PIXARLOGDATAFMT_8BIT :	1344:2:39850:39875	10178939	0	True				
ANR	10179076	Identifier	PIXARLOGDATAFMT_8BIT		10178939	0					
ANR	10179077	Label	case PIXARLOGDATAFMT_8BITABGR :	1345:2:39879:39908	10178939	1	True				
ANR	10179078	Identifier	PIXARLOGDATAFMT_8BITABGR		10178939	0					
ANR	10179079	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )"	1346:5:39915:39958	10178939	2	True				
ANR	10179080	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )"		10178939	0					
ANR	10179081	Callee	TIFFSetField		10178939	0					
ANR	10179082	Identifier	TIFFSetField		10178939	0					
ANR	10179083	ArgumentList	tif		10178939	1					
ANR	10179084	Argument	tif		10178939	0					
ANR	10179085	Identifier	tif		10178939	0					
ANR	10179086	Argument	TIFFTAG_BITSPERSAMPLE		10178939	1					
ANR	10179087	Identifier	TIFFTAG_BITSPERSAMPLE		10178939	0					
ANR	10179088	Argument	8		10178939	2					
ANR	10179089	PrimaryExpression	8		10178939	0					
ANR	10179090	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"	1347:5:39965:40023	10178939	3	True				
ANR	10179091	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"		10178939	0					
ANR	10179092	Callee	TIFFSetField		10178939	0					
ANR	10179093	Identifier	TIFFSetField		10178939	0					
ANR	10179094	ArgumentList	tif		10178939	1					
ANR	10179095	Argument	tif		10178939	0					
ANR	10179096	Identifier	tif		10178939	0					
ANR	10179097	Argument	TIFFTAG_SAMPLEFORMAT		10178939	1					
ANR	10179098	Identifier	TIFFTAG_SAMPLEFORMAT		10178939	0					
ANR	10179099	Argument	SAMPLEFORMAT_UINT		10178939	2					
ANR	10179100	Identifier	SAMPLEFORMAT_UINT		10178939	0					
ANR	10179101	BreakStatement	break ;	1348:5:40030:40035	10178939	4	True				
ANR	10179102	Label	case PIXARLOGDATAFMT_11BITLOG :	1349:2:40039:40068	10178939	5	True				
ANR	10179103	Identifier	PIXARLOGDATAFMT_11BITLOG		10178939	0					
ANR	10179104	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"	1350:5:40075:40119	10178939	6	True				
ANR	10179105	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"		10178939	0					
ANR	10179106	Callee	TIFFSetField		10178939	0					
ANR	10179107	Identifier	TIFFSetField		10178939	0					
ANR	10179108	ArgumentList	tif		10178939	1					
ANR	10179109	Argument	tif		10178939	0					
ANR	10179110	Identifier	tif		10178939	0					
ANR	10179111	Argument	TIFFTAG_BITSPERSAMPLE		10178939	1					
ANR	10179112	Identifier	TIFFTAG_BITSPERSAMPLE		10178939	0					
ANR	10179113	Argument	16		10178939	2					
ANR	10179114	PrimaryExpression	16		10178939	0					
ANR	10179115	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"	1351:5:40126:40184	10178939	7	True				
ANR	10179116	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"		10178939	0					
ANR	10179117	Callee	TIFFSetField		10178939	0					
ANR	10179118	Identifier	TIFFSetField		10178939	0					
ANR	10179119	ArgumentList	tif		10178939	1					
ANR	10179120	Argument	tif		10178939	0					
ANR	10179121	Identifier	tif		10178939	0					
ANR	10179122	Argument	TIFFTAG_SAMPLEFORMAT		10178939	1					
ANR	10179123	Identifier	TIFFTAG_SAMPLEFORMAT		10178939	0					
ANR	10179124	Argument	SAMPLEFORMAT_UINT		10178939	2					
ANR	10179125	Identifier	SAMPLEFORMAT_UINT		10178939	0					
ANR	10179126	BreakStatement	break ;	1352:5:40191:40196	10178939	8	True				
ANR	10179127	Label	case PIXARLOGDATAFMT_12BITPICIO :	1353:2:40200:40231	10178939	9	True				
ANR	10179128	Identifier	PIXARLOGDATAFMT_12BITPICIO		10178939	0					
ANR	10179129	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"	1354:5:40238:40282	10178939	10	True				
ANR	10179130	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"		10178939	0					
ANR	10179131	Callee	TIFFSetField		10178939	0					
ANR	10179132	Identifier	TIFFSetField		10178939	0					
ANR	10179133	ArgumentList	tif		10178939	1					
ANR	10179134	Argument	tif		10178939	0					
ANR	10179135	Identifier	tif		10178939	0					
ANR	10179136	Argument	TIFFTAG_BITSPERSAMPLE		10178939	1					
ANR	10179137	Identifier	TIFFTAG_BITSPERSAMPLE		10178939	0					
ANR	10179138	Argument	16		10178939	2					
ANR	10179139	PrimaryExpression	16		10178939	0					
ANR	10179140	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_INT )"	1355:5:40289:40346	10178939	11	True				
ANR	10179141	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_INT )"		10178939	0					
ANR	10179142	Callee	TIFFSetField		10178939	0					
ANR	10179143	Identifier	TIFFSetField		10178939	0					
ANR	10179144	ArgumentList	tif		10178939	1					
ANR	10179145	Argument	tif		10178939	0					
ANR	10179146	Identifier	tif		10178939	0					
ANR	10179147	Argument	TIFFTAG_SAMPLEFORMAT		10178939	1					
ANR	10179148	Identifier	TIFFTAG_SAMPLEFORMAT		10178939	0					
ANR	10179149	Argument	SAMPLEFORMAT_INT		10178939	2					
ANR	10179150	Identifier	SAMPLEFORMAT_INT		10178939	0					
ANR	10179151	BreakStatement	break ;	1356:5:40353:40358	10178939	12	True				
ANR	10179152	Label	case PIXARLOGDATAFMT_16BIT :	1357:2:40362:40388	10178939	13	True				
ANR	10179153	Identifier	PIXARLOGDATAFMT_16BIT		10178939	0					
ANR	10179154	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"	1358:5:40395:40439	10178939	14	True				
ANR	10179155	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"		10178939	0					
ANR	10179156	Callee	TIFFSetField		10178939	0					
ANR	10179157	Identifier	TIFFSetField		10178939	0					
ANR	10179158	ArgumentList	tif		10178939	1					
ANR	10179159	Argument	tif		10178939	0					
ANR	10179160	Identifier	tif		10178939	0					
ANR	10179161	Argument	TIFFTAG_BITSPERSAMPLE		10178939	1					
ANR	10179162	Identifier	TIFFTAG_BITSPERSAMPLE		10178939	0					
ANR	10179163	Argument	16		10178939	2					
ANR	10179164	PrimaryExpression	16		10178939	0					
ANR	10179165	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"	1359:5:40446:40504	10178939	15	True				
ANR	10179166	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"		10178939	0					
ANR	10179167	Callee	TIFFSetField		10178939	0					
ANR	10179168	Identifier	TIFFSetField		10178939	0					
ANR	10179169	ArgumentList	tif		10178939	1					
ANR	10179170	Argument	tif		10178939	0					
ANR	10179171	Identifier	tif		10178939	0					
ANR	10179172	Argument	TIFFTAG_SAMPLEFORMAT		10178939	1					
ANR	10179173	Identifier	TIFFTAG_SAMPLEFORMAT		10178939	0					
ANR	10179174	Argument	SAMPLEFORMAT_UINT		10178939	2					
ANR	10179175	Identifier	SAMPLEFORMAT_UINT		10178939	0					
ANR	10179176	BreakStatement	break ;	1360:5:40511:40516	10178939	16	True				
ANR	10179177	Label	case PIXARLOGDATAFMT_FLOAT :	1361:2:40520:40546	10178939	17	True				
ANR	10179178	Identifier	PIXARLOGDATAFMT_FLOAT		10178939	0					
ANR	10179179	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 32 )"	1362:5:40553:40597	10178939	18	True				
ANR	10179180	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 32 )"		10178939	0					
ANR	10179181	Callee	TIFFSetField		10178939	0					
ANR	10179182	Identifier	TIFFSetField		10178939	0					
ANR	10179183	ArgumentList	tif		10178939	1					
ANR	10179184	Argument	tif		10178939	0					
ANR	10179185	Identifier	tif		10178939	0					
ANR	10179186	Argument	TIFFTAG_BITSPERSAMPLE		10178939	1					
ANR	10179187	Identifier	TIFFTAG_BITSPERSAMPLE		10178939	0					
ANR	10179188	Argument	32		10178939	2					
ANR	10179189	PrimaryExpression	32		10178939	0					
ANR	10179190	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_IEEEFP )"	1363:5:40604:40664	10178939	19	True				
ANR	10179191	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_IEEEFP )"		10178939	0					
ANR	10179192	Callee	TIFFSetField		10178939	0					
ANR	10179193	Identifier	TIFFSetField		10178939	0					
ANR	10179194	ArgumentList	tif		10178939	1					
ANR	10179195	Argument	tif		10178939	0					
ANR	10179196	Identifier	tif		10178939	0					
ANR	10179197	Argument	TIFFTAG_SAMPLEFORMAT		10178939	1					
ANR	10179198	Identifier	TIFFTAG_SAMPLEFORMAT		10178939	0					
ANR	10179199	Argument	SAMPLEFORMAT_IEEEFP		10178939	2					
ANR	10179200	Identifier	SAMPLEFORMAT_IEEEFP		10178939	0					
ANR	10179201	BreakStatement	break ;	1364:5:40671:40676	10178939	20	True				
ANR	10179202	ExpressionStatement	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) ( - 1 )	1369:1:40745:40814	10178939	7	True				
ANR	10179203	AssignmentExpression	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) ( - 1 )		10178939	0		=			
ANR	10179204	PtrMemberAccess	tif -> tif_tilesize		10178939	0					
ANR	10179205	Identifier	tif		10178939	0					
ANR	10179206	Identifier	tif_tilesize		10178939	1					
ANR	10179207	ConditionalExpression	isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) ( - 1 )		10178939	1					
ANR	10179208	Condition	isTiled ( tif )		10178939	0					
ANR	10179209	CallExpression	isTiled ( tif )		10178939	0					
ANR	10179210	Callee	isTiled		10178939	0					
ANR	10179211	Identifier	isTiled		10178939	0					
ANR	10179212	ArgumentList	tif		10178939	1					
ANR	10179213	Argument	tif		10178939	0					
ANR	10179214	Identifier	tif		10178939	0					
ANR	10179215	CallExpression	TIFFTileSize ( tif )		10178939	1					
ANR	10179216	Callee	TIFFTileSize		10178939	0					
ANR	10179217	Identifier	TIFFTileSize		10178939	0					
ANR	10179218	ArgumentList	tif		10178939	1					
ANR	10179219	Argument	tif		10178939	0					
ANR	10179220	Identifier	tif		10178939	0					
ANR	10179221	CastExpression	( tmsize_t ) ( - 1 )		10178939	2					
ANR	10179222	CastTarget	tmsize_t		10178939	0					
ANR	10179223	UnaryOperationExpression	- 1		10178939	1					
ANR	10179224	UnaryOperator	-		10178939	0					
ANR	10179225	PrimaryExpression	1		10178939	1					
ANR	10179226	ExpressionStatement	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )	1370:1:40817:40862	10178939	8	True				
ANR	10179227	AssignmentExpression	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )		10178939	0		=			
ANR	10179228	PtrMemberAccess	tif -> tif_scanlinesize		10178939	0					
ANR	10179229	Identifier	tif		10178939	0					
ANR	10179230	Identifier	tif_scanlinesize		10178939	1					
ANR	10179231	CallExpression	TIFFScanlineSize ( tif )		10178939	1					
ANR	10179232	Callee	TIFFScanlineSize		10178939	0					
ANR	10179233	Identifier	TIFFScanlineSize		10178939	0					
ANR	10179234	ArgumentList	tif		10178939	1					
ANR	10179235	Argument	tif		10178939	0					
ANR	10179236	Identifier	tif		10178939	0					
ANR	10179237	ExpressionStatement	result = 1	1371:1:40865:40875	10178939	9	True				
ANR	10179238	AssignmentExpression	result = 1		10178939	0		=			
ANR	10179239	Identifier	result		10178939	0					
ANR	10179240	PrimaryExpression	1		10178939	1					
ANR	10179241	BreakStatement	break ;	1372:1:40900:40905	10178939	10	True				
ANR	10179242	Label	default :	1373:5:40912:40919	10178939	11	True				
ANR	10179243	Identifier	default		10178939	0					
ANR	10179244	ExpressionStatement	"result = ( * sp -> vsetparent ) ( tif , tag , ap )"	1374:1:40922:40962	10178939	12	True				
ANR	10179245	AssignmentExpression	"result = ( * sp -> vsetparent ) ( tif , tag , ap )"		10178939	0		=			
ANR	10179246	Identifier	result		10178939	0					
ANR	10179247	CallExpression	"( * sp -> vsetparent ) ( tif , tag , ap )"		10178939	1					
ANR	10179248	Callee	* sp -> vsetparent		10178939	0					
ANR	10179249	UnaryOperationExpression	* sp -> vsetparent		10178939	0					
ANR	10179250	UnaryOperator	*		10178939	0					
ANR	10179251	PtrMemberAccess	sp -> vsetparent		10178939	1					
ANR	10179252	Identifier	sp		10178939	0					
ANR	10179253	Identifier	vsetparent		10178939	1					
ANR	10179254	ArgumentList	tif		10178939	1					
ANR	10179255	Argument	tif		10178939	0					
ANR	10179256	Identifier	tif		10178939	0					
ANR	10179257	Argument	tag		10178939	1					
ANR	10179258	Identifier	tag		10178939	0					
ANR	10179259	Argument	ap		10178939	2					
ANR	10179260	Identifier	ap		10178939	0					
ANR	10179261	ReturnStatement	return ( result ) ;	1376:4:40974:40989	10178939	5	True				
ANR	10179262	Identifier	result		10178939	0					
ANR	10179263	ReturnType	static int		10178939	1					
ANR	10179264	Identifier	PixarLogVSetField		10178939	2					
ANR	10179265	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		10178939	3					
ANR	10179266	Parameter	TIFF * tif	1318:18:38948:38956	10178939	0	True				
ANR	10179267	ParameterType	TIFF *		10178939	0					
ANR	10179268	Identifier	tif		10178939	1					
ANR	10179269	Parameter	uint32 tag	1318:29:38959:38968	10178939	1	True				
ANR	10179270	ParameterType	uint32		10178939	0					
ANR	10179271	Identifier	tag		10178939	1					
ANR	10179272	Parameter	va_list ap	1318:41:38971:38980	10178939	2	True				
ANR	10179273	ParameterType	va_list		10178939	0					
ANR	10179274	Identifier	ap		10178939	1					
ANR	10179275	CFGEntryNode	ENTRY		10178939		True				
ANR	10179276	CFGExitNode	EXIT		10178939		True				
ANR	10179277	Symbol	* sp		10178939						
ANR	10179278	Symbol	SAMPLEFORMAT_UINT		10178939						
ANR	10179279	Symbol	TIFFTAG_SAMPLEFORMAT		10178939						
ANR	10179280	Symbol	tif -> tif_tilesize		10178939						
ANR	10179281	Symbol	& sp -> stream		10178939						
ANR	10179282	Symbol	sp -> user_datafmt		10178939						
ANR	10179283	Symbol	Z_OK		10178939						
ANR	10179284	Symbol	* * sp		10178939						
ANR	10179285	Symbol	tif		10178939						
ANR	10179286	Symbol	result		10178939						
ANR	10179287	Symbol	isTiled		10178939						
ANR	10179288	Symbol	sp -> stream . msg		10178939						
ANR	10179289	Symbol	tif -> tif_scanlinesize		10178939						
ANR	10179290	Symbol	PLSTATE_INIT		10178939						
ANR	10179291	Symbol	tag		10178939						
ANR	10179292	Symbol	tif -> tif_mode		10178939						
ANR	10179293	Symbol	sp		10178939						
ANR	10179294	Symbol	va_arg		10178939						
ANR	10179295	Symbol	tif -> tif_data		10178939						
ANR	10179296	Symbol	Z_DEFAULT_STRATEGY		10178939						
ANR	10179297	Symbol	TIFFScanlineSize		10178939						
ANR	10179298	Symbol	* sp -> vsetparent		10178939						
ANR	10179299	Symbol	SAMPLEFORMAT_INT		10178939						
ANR	10179300	Symbol	module		10178939						
ANR	10179301	Symbol	deflateParams		10178939						
ANR	10179302	Symbol	SAMPLEFORMAT_IEEEFP		10178939						
ANR	10179303	Symbol	sp -> state		10178939						
ANR	10179304	Symbol	sp -> vsetparent		10178939						
ANR	10179305	Symbol	int		10178939						
ANR	10179306	Symbol	ap		10178939						
ANR	10179307	Symbol	sp -> quality		10178939						
ANR	10179308	Symbol	tif -> tif_clientdata		10178939						
ANR	10179309	Symbol	TIFFTAG_BITSPERSAMPLE		10178939						
ANR	10179310	Symbol	O_RDONLY		10178939						
ANR	10179311	Symbol	sp -> stream		10178939						
ANR	10179312	Symbol	* tif		10178939						
ANR	10179313	Symbol	TIFFTileSize		10178939						
ANR	10179314	Function	PixarLogVGetField	1379:0:40994:41372							
ANR	10179315	FunctionDef	"PixarLogVGetField (TIFF * tif , uint32 tag , va_list ap)"		10179314	0					
ANR	10179316	CompoundStatement		1381:0:41058:41372	10179314	0					
ANR	10179317	IdentifierDeclStatement	PixarLogState * sp = ( PixarLogState * ) tif -> tif_data ;	1382:4:41064:41114	10179314	0	True				
ANR	10179318	IdentifierDecl	* sp = ( PixarLogState * ) tif -> tif_data		10179314	0					
ANR	10179319	IdentifierDeclType	PixarLogState *		10179314	0					
ANR	10179320	Identifier	sp		10179314	1					
ANR	10179321	AssignmentExpression	* sp = ( PixarLogState * ) tif -> tif_data		10179314	2		=			
ANR	10179322	Identifier	sp		10179314	0					
ANR	10179323	CastExpression	( PixarLogState * ) tif -> tif_data		10179314	1					
ANR	10179324	CastTarget	PixarLogState *		10179314	0					
ANR	10179325	PtrMemberAccess	tif -> tif_data		10179314	1					
ANR	10179326	Identifier	tif		10179314	0					
ANR	10179327	Identifier	tif_data		10179314	1					
ANR	10179328	SwitchStatement	switch ( tag )		10179314	1					
ANR	10179329	Condition	tag	1384:12:41129:41131	10179314	0	True				
ANR	10179330	Identifier	tag		10179314	0					
ANR	10179331	CompoundStatement		4:17:75:75	10179314	1					
ANR	10179332	Label	case TIFFTAG_PIXARLOGQUALITY :	1385:5:41141:41169	10179314	0	True				
ANR	10179333	Identifier	TIFFTAG_PIXARLOGQUALITY		10179314	0					
ANR	10179334	Statement	*	1386:1:41172:41172	10179314	1	True				
ANR	10179335	Statement	va_arg	1386:2:41173:41178	10179314	2	True				
ANR	10179336	Statement	(	1386:8:41179:41179	10179314	3	True				
ANR	10179337	Statement	ap	1386:9:41180:41181	10179314	4	True				
ANR	10179338	Statement	","	1386:11:41182:41182	10179314	5	True				
ANR	10179339	Statement	int	1386:13:41184:41186	10179314	6	True				
ANR	10179340	Statement	*	1386:16:41187:41187	10179314	7	True				
ANR	10179341	Statement	)	1386:17:41188:41188	10179314	8	True				
ANR	10179342	Statement	=	1386:19:41190:41190	10179314	9	True				
ANR	10179343	ExpressionStatement	sp -> quality	1386:21:41192:41203	10179314	10	True				
ANR	10179344	PtrMemberAccess	sp -> quality		10179314	0					
ANR	10179345	Identifier	sp		10179314	0					
ANR	10179346	Identifier	quality		10179314	1					
ANR	10179347	BreakStatement	break ;	1387:1:41206:41211	10179314	11	True				
ANR	10179348	Label	case TIFFTAG_PIXARLOGDATAFMT :	1388:5:41218:41246	10179314	12	True				
ANR	10179349	Identifier	TIFFTAG_PIXARLOGDATAFMT		10179314	0					
ANR	10179350	Statement	*	1389:1:41249:41249	10179314	13	True				
ANR	10179351	Statement	va_arg	1389:2:41250:41255	10179314	14	True				
ANR	10179352	Statement	(	1389:8:41256:41256	10179314	15	True				
ANR	10179353	Statement	ap	1389:9:41257:41258	10179314	16	True				
ANR	10179354	Statement	","	1389:11:41259:41259	10179314	17	True				
ANR	10179355	Statement	int	1389:13:41261:41263	10179314	18	True				
ANR	10179356	Statement	*	1389:16:41264:41264	10179314	19	True				
ANR	10179357	Statement	)	1389:17:41265:41265	10179314	20	True				
ANR	10179358	Statement	=	1389:19:41267:41267	10179314	21	True				
ANR	10179359	ExpressionStatement	sp -> user_datafmt	1389:21:41269:41285	10179314	22	True				
ANR	10179360	PtrMemberAccess	sp -> user_datafmt		10179314	0					
ANR	10179361	Identifier	sp		10179314	0					
ANR	10179362	Identifier	user_datafmt		10179314	1					
ANR	10179363	BreakStatement	break ;	1390:1:41288:41293	10179314	23	True				
ANR	10179364	Label	default :	1391:5:41300:41307	10179314	24	True				
ANR	10179365	Identifier	default		10179314	0					
ANR	10179366	ReturnStatement	"return ( * sp -> vgetparent ) ( tif , tag , ap ) ;"	1392:1:41310:41348	10179314	25	True				
ANR	10179367	CallExpression	"( * sp -> vgetparent ) ( tif , tag , ap )"		10179314	0					
ANR	10179368	Callee	* sp -> vgetparent		10179314	0					
ANR	10179369	UnaryOperationExpression	* sp -> vgetparent		10179314	0					
ANR	10179370	UnaryOperator	*		10179314	0					
ANR	10179371	PtrMemberAccess	sp -> vgetparent		10179314	1					
ANR	10179372	Identifier	sp		10179314	0					
ANR	10179373	Identifier	vgetparent		10179314	1					
ANR	10179374	ArgumentList	tif		10179314	1					
ANR	10179375	Argument	tif		10179314	0					
ANR	10179376	Identifier	tif		10179314	0					
ANR	10179377	Argument	tag		10179314	1					
ANR	10179378	Identifier	tag		10179314	0					
ANR	10179379	Argument	ap		10179314	2					
ANR	10179380	Identifier	ap		10179314	0					
ANR	10179381	ReturnStatement	return ( 1 ) ;	1394:4:41360:41370	10179314	2	True				
ANR	10179382	PrimaryExpression	1		10179314	0					
ANR	10179383	ReturnType	static int		10179314	1					
ANR	10179384	Identifier	PixarLogVGetField		10179314	2					
ANR	10179385	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		10179314	3					
ANR	10179386	Parameter	TIFF * tif	1380:18:41023:41031	10179314	0	True				
ANR	10179387	ParameterType	TIFF *		10179314	0					
ANR	10179388	Identifier	tif		10179314	1					
ANR	10179389	Parameter	uint32 tag	1380:29:41034:41043	10179314	1	True				
ANR	10179390	ParameterType	uint32		10179314	0					
ANR	10179391	Identifier	tag		10179314	1					
ANR	10179392	Parameter	va_list ap	1380:41:41046:41055	10179314	2	True				
ANR	10179393	ParameterType	va_list		10179314	0					
ANR	10179394	Identifier	ap		10179314	1					
ANR	10179395	CFGEntryNode	ENTRY		10179314		True				
ANR	10179396	CFGExitNode	EXIT		10179314		True				
ANR	10179397	Symbol	tif		10179314						
ANR	10179398	Symbol	* sp		10179314						
ANR	10179399	Symbol	* sp -> vgetparent		10179314						
ANR	10179400	Symbol	tag		10179314						
ANR	10179401	Symbol	* tif		10179314						
ANR	10179402	Symbol	* * sp		10179314						
ANR	10179403	Symbol	sp -> vgetparent		10179314						
ANR	10179404	Symbol	sp		10179314						
ANR	10179405	Symbol	tif -> tif_data		10179314						
ANR	10179406	Symbol	ap		10179314						
ANR	10179407	DeclStmt									
ANR	10179408	Decl							const TIFFField	const TIFFField [ ]	pixarlogFields
ANR	10179409	Function	TIFFInitPixarLog	1402:0:41678:43801							
ANR	10179410	FunctionDef	"TIFFInitPixarLog (TIFF * tif , int scheme)"		10179409	0					
ANR	10179411	CompoundStatement		1404:0:41722:43801	10179409	0					
ANR	10179412	Statement	static	1405:1:41725:41730	10179409	0	True				
ANR	10179413	IdentifierDeclStatement	"const char module [ ] = ""TIFFInitPixarLog"" ;"	1405:8:41732:41772	10179409	1	True				
ANR	10179414	IdentifierDecl	"module [ ] = ""TIFFInitPixarLog"""		10179409	0					
ANR	10179415	IdentifierDeclType	const char [ ]		10179409	0					
ANR	10179416	Identifier	module		10179409	1					
ANR	10179417	AssignmentExpression	"module [ ] = ""TIFFInitPixarLog"""		10179409	2		=			
ANR	10179418	Identifier	module		10179409	0					
ANR	10179419	PrimaryExpression	"""TIFFInitPixarLog"""		10179409	1					
ANR	10179420	IdentifierDeclStatement	PixarLogState * sp ;	1407:1:41776:41793	10179409	2	True				
ANR	10179421	IdentifierDecl	* sp		10179409	0					
ANR	10179422	IdentifierDeclType	PixarLogState *		10179409	0					
ANR	10179423	Identifier	sp		10179409	1					
ANR	10179424	ExpressionStatement	assert ( scheme == COMPRESSION_PIXARLOG )	1409:1:41797:41835	10179409	3	True				
ANR	10179425	CallExpression	assert ( scheme == COMPRESSION_PIXARLOG )		10179409	0					
ANR	10179426	Callee	assert		10179409	0					
ANR	10179427	Identifier	assert		10179409	0					
ANR	10179428	ArgumentList	scheme == COMPRESSION_PIXARLOG		10179409	1					
ANR	10179429	Argument	scheme == COMPRESSION_PIXARLOG		10179409	0					
ANR	10179430	EqualityExpression	scheme == COMPRESSION_PIXARLOG		10179409	0		==			
ANR	10179431	Identifier	scheme		10179409	0					
ANR	10179432	Identifier	COMPRESSION_PIXARLOG		10179409	1					
ANR	10179433	IfStatement	"if ( ! _TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) ) )"		10179409	4					
ANR	10179434	Condition	"! _TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) )"	1414:5:41894:41972	10179409	0	True				
ANR	10179435	UnaryOperationExpression	"! _TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) )"		10179409	0					
ANR	10179436	UnaryOperator	!		10179409	0					
ANR	10179437	CallExpression	"_TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) )"		10179409	1					
ANR	10179438	Callee	_TIFFMergeFields		10179409	0					
ANR	10179439	Identifier	_TIFFMergeFields		10179409	0					
ANR	10179440	ArgumentList	tif		10179409	1					
ANR	10179441	Argument	tif		10179409	0					
ANR	10179442	Identifier	tif		10179409	0					
ANR	10179443	Argument	pixarlogFields		10179409	1					
ANR	10179444	Identifier	pixarlogFields		10179409	0					
ANR	10179445	Argument	TIFFArrayCount ( pixarlogFields )		10179409	2					
ANR	10179446	CallExpression	TIFFArrayCount ( pixarlogFields )		10179409	0					
ANR	10179447	Callee	TIFFArrayCount		10179409	0					
ANR	10179448	Identifier	TIFFArrayCount		10179409	0					
ANR	10179449	ArgumentList	pixarlogFields		10179409	1					
ANR	10179450	Argument	pixarlogFields		10179409	0					
ANR	10179451	Identifier	pixarlogFields		10179409	0					
ANR	10179452	CompoundStatement		12:42:252:252	10179409	1					
ANR	10179453	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging PixarLog codec-specific tags failed"" )"	1416:2:41979:42075	10179409	0	True				
ANR	10179454	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging PixarLog codec-specific tags failed"" )"		10179409	0					
ANR	10179455	Callee	TIFFErrorExt		10179409	0					
ANR	10179456	Identifier	TIFFErrorExt		10179409	0					
ANR	10179457	ArgumentList	tif -> tif_clientdata		10179409	1					
ANR	10179458	Argument	tif -> tif_clientdata		10179409	0					
ANR	10179459	PtrMemberAccess	tif -> tif_clientdata		10179409	0					
ANR	10179460	Identifier	tif		10179409	0					
ANR	10179461	Identifier	tif_clientdata		10179409	1					
ANR	10179462	Argument	module		10179409	1					
ANR	10179463	Identifier	module		10179409	0					
ANR	10179464	Argument	"""Merging PixarLog codec-specific tags failed"""		10179409	2					
ANR	10179465	PrimaryExpression	"""Merging PixarLog codec-specific tags failed"""		10179409	0					
ANR	10179466	ReturnStatement	return 0 ;	1418:2:42079:42087	10179409	1	True				
ANR	10179467	PrimaryExpression	0		10179409	0					
ANR	10179468	ExpressionStatement	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( PixarLogState ) )	1424:1:42174:42234	10179409	5	True				
ANR	10179469	AssignmentExpression	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( PixarLogState ) )		10179409	0		=			
ANR	10179470	PtrMemberAccess	tif -> tif_data		10179409	0					
ANR	10179471	Identifier	tif		10179409	0					
ANR	10179472	Identifier	tif_data		10179409	1					
ANR	10179473	CastExpression	( uint8 * ) _TIFFmalloc ( sizeof ( PixarLogState ) )		10179409	1					
ANR	10179474	CastTarget	uint8 *		10179409	0					
ANR	10179475	CallExpression	_TIFFmalloc ( sizeof ( PixarLogState ) )		10179409	1					
ANR	10179476	Callee	_TIFFmalloc		10179409	0					
ANR	10179477	Identifier	_TIFFmalloc		10179409	0					
ANR	10179478	ArgumentList	sizeof ( PixarLogState )		10179409	1					
ANR	10179479	Argument	sizeof ( PixarLogState )		10179409	0					
ANR	10179480	SizeofExpression	sizeof ( PixarLogState )		10179409	0					
ANR	10179481	Sizeof	sizeof		10179409	0					
ANR	10179482	SizeofOperand	PixarLogState		10179409	1					
ANR	10179483	IfStatement	if ( tif -> tif_data == NULL )		10179409	6					
ANR	10179484	Condition	tif -> tif_data == NULL	1425:5:42241:42261	10179409	0	True				
ANR	10179485	EqualityExpression	tif -> tif_data == NULL		10179409	0		==			
ANR	10179486	PtrMemberAccess	tif -> tif_data		10179409	0					
ANR	10179487	Identifier	tif		10179409	0					
ANR	10179488	Identifier	tif_data		10179409	1					
ANR	10179489	Identifier	NULL		10179409	1					
ANR	10179490	GotoStatement	goto bad ;	1426:2:42266:42274	10179409	1	True				
ANR	10179491	Identifier	bad		10179409	0					
ANR	10179492	ExpressionStatement	sp = ( PixarLogState * ) tif -> tif_data	1427:1:42277:42312	10179409	7	True				
ANR	10179493	AssignmentExpression	sp = ( PixarLogState * ) tif -> tif_data		10179409	0		=			
ANR	10179494	Identifier	sp		10179409	0					
ANR	10179495	CastExpression	( PixarLogState * ) tif -> tif_data		10179409	1					
ANR	10179496	CastTarget	PixarLogState *		10179409	0					
ANR	10179497	PtrMemberAccess	tif -> tif_data		10179409	1					
ANR	10179498	Identifier	tif		10179409	0					
ANR	10179499	Identifier	tif_data		10179409	1					
ANR	10179500	ExpressionStatement	"_TIFFmemset ( sp , 0 , sizeof ( * sp ) )"	1428:1:42315:42347	10179409	8	True				
ANR	10179501	CallExpression	"_TIFFmemset ( sp , 0 , sizeof ( * sp ) )"		10179409	0					
ANR	10179502	Callee	_TIFFmemset		10179409	0					
ANR	10179503	Identifier	_TIFFmemset		10179409	0					
ANR	10179504	ArgumentList	sp		10179409	1					
ANR	10179505	Argument	sp		10179409	0					
ANR	10179506	Identifier	sp		10179409	0					
ANR	10179507	Argument	0		10179409	1					
ANR	10179508	PrimaryExpression	0		10179409	0					
ANR	10179509	Argument	sizeof ( * sp )		10179409	2					
ANR	10179510	SizeofExpression	sizeof ( * sp )		10179409	0					
ANR	10179511	Sizeof	sizeof		10179409	0					
ANR	10179512	UnaryOperationExpression	* sp		10179409	1					
ANR	10179513	UnaryOperator	*		10179409	0					
ANR	10179514	Identifier	sp		10179409	1					
ANR	10179515	ExpressionStatement	sp -> stream . data_type = Z_BINARY	1429:1:42350:42381	10179409	9	True				
ANR	10179516	AssignmentExpression	sp -> stream . data_type = Z_BINARY		10179409	0		=			
ANR	10179517	MemberAccess	sp -> stream . data_type		10179409	0					
ANR	10179518	PtrMemberAccess	sp -> stream		10179409	0					
ANR	10179519	Identifier	sp		10179409	0					
ANR	10179520	Identifier	stream		10179409	1					
ANR	10179521	Identifier	data_type		10179409	1					
ANR	10179522	Identifier	Z_BINARY		10179409	1					
ANR	10179523	ExpressionStatement	sp -> user_datafmt = PIXARLOGDATAFMT_UNKNOWN	1430:1:42384:42426	10179409	10	True				
ANR	10179524	AssignmentExpression	sp -> user_datafmt = PIXARLOGDATAFMT_UNKNOWN		10179409	0		=			
ANR	10179525	PtrMemberAccess	sp -> user_datafmt		10179409	0					
ANR	10179526	Identifier	sp		10179409	0					
ANR	10179527	Identifier	user_datafmt		10179409	1					
ANR	10179528	Identifier	PIXARLOGDATAFMT_UNKNOWN		10179409	1					
ANR	10179529	ExpressionStatement	tif -> tif_fixuptags = PixarLogFixupTags	1435:1:42466:42504	10179409	11	True				
ANR	10179530	AssignmentExpression	tif -> tif_fixuptags = PixarLogFixupTags		10179409	0		=			
ANR	10179531	PtrMemberAccess	tif -> tif_fixuptags		10179409	0					
ANR	10179532	Identifier	tif		10179409	0					
ANR	10179533	Identifier	tif_fixuptags		10179409	1					
ANR	10179534	Identifier	PixarLogFixupTags		10179409	1					
ANR	10179535	ExpressionStatement	tif -> tif_setupdecode = PixarLogSetupDecode	1436:1:42508:42550	10179409	12	True				
ANR	10179536	AssignmentExpression	tif -> tif_setupdecode = PixarLogSetupDecode		10179409	0		=			
ANR	10179537	PtrMemberAccess	tif -> tif_setupdecode		10179409	0					
ANR	10179538	Identifier	tif		10179409	0					
ANR	10179539	Identifier	tif_setupdecode		10179409	1					
ANR	10179540	Identifier	PixarLogSetupDecode		10179409	1					
ANR	10179541	ExpressionStatement	tif -> tif_predecode = PixarLogPreDecode	1437:1:42553:42591	10179409	13	True				
ANR	10179542	AssignmentExpression	tif -> tif_predecode = PixarLogPreDecode		10179409	0		=			
ANR	10179543	PtrMemberAccess	tif -> tif_predecode		10179409	0					
ANR	10179544	Identifier	tif		10179409	0					
ANR	10179545	Identifier	tif_predecode		10179409	1					
ANR	10179546	Identifier	PixarLogPreDecode		10179409	1					
ANR	10179547	ExpressionStatement	tif -> tif_decoderow = PixarLogDecode	1438:1:42594:42629	10179409	14	True				
ANR	10179548	AssignmentExpression	tif -> tif_decoderow = PixarLogDecode		10179409	0		=			
ANR	10179549	PtrMemberAccess	tif -> tif_decoderow		10179409	0					
ANR	10179550	Identifier	tif		10179409	0					
ANR	10179551	Identifier	tif_decoderow		10179409	1					
ANR	10179552	Identifier	PixarLogDecode		10179409	1					
ANR	10179553	ExpressionStatement	tif -> tif_decodestrip = PixarLogDecode	1439:1:42632:42669	10179409	15	True				
ANR	10179554	AssignmentExpression	tif -> tif_decodestrip = PixarLogDecode		10179409	0		=			
ANR	10179555	PtrMemberAccess	tif -> tif_decodestrip		10179409	0					
ANR	10179556	Identifier	tif		10179409	0					
ANR	10179557	Identifier	tif_decodestrip		10179409	1					
ANR	10179558	Identifier	PixarLogDecode		10179409	1					
ANR	10179559	ExpressionStatement	tif -> tif_decodetile = PixarLogDecode	1440:1:42674:42710	10179409	16	True				
ANR	10179560	AssignmentExpression	tif -> tif_decodetile = PixarLogDecode		10179409	0		=			
ANR	10179561	PtrMemberAccess	tif -> tif_decodetile		10179409	0					
ANR	10179562	Identifier	tif		10179409	0					
ANR	10179563	Identifier	tif_decodetile		10179409	1					
ANR	10179564	Identifier	PixarLogDecode		10179409	1					
ANR	10179565	ExpressionStatement	tif -> tif_setupencode = PixarLogSetupEncode	1441:1:42713:42755	10179409	17	True				
ANR	10179566	AssignmentExpression	tif -> tif_setupencode = PixarLogSetupEncode		10179409	0		=			
ANR	10179567	PtrMemberAccess	tif -> tif_setupencode		10179409	0					
ANR	10179568	Identifier	tif		10179409	0					
ANR	10179569	Identifier	tif_setupencode		10179409	1					
ANR	10179570	Identifier	PixarLogSetupEncode		10179409	1					
ANR	10179571	ExpressionStatement	tif -> tif_preencode = PixarLogPreEncode	1442:1:42758:42796	10179409	18	True				
ANR	10179572	AssignmentExpression	tif -> tif_preencode = PixarLogPreEncode		10179409	0		=			
ANR	10179573	PtrMemberAccess	tif -> tif_preencode		10179409	0					
ANR	10179574	Identifier	tif		10179409	0					
ANR	10179575	Identifier	tif_preencode		10179409	1					
ANR	10179576	Identifier	PixarLogPreEncode		10179409	1					
ANR	10179577	ExpressionStatement	tif -> tif_postencode = PixarLogPostEncode	1443:1:42799:42839	10179409	19	True				
ANR	10179578	AssignmentExpression	tif -> tif_postencode = PixarLogPostEncode		10179409	0		=			
ANR	10179579	PtrMemberAccess	tif -> tif_postencode		10179409	0					
ANR	10179580	Identifier	tif		10179409	0					
ANR	10179581	Identifier	tif_postencode		10179409	1					
ANR	10179582	Identifier	PixarLogPostEncode		10179409	1					
ANR	10179583	ExpressionStatement	tif -> tif_encoderow = PixarLogEncode	1444:1:42842:42877	10179409	20	True				
ANR	10179584	AssignmentExpression	tif -> tif_encoderow = PixarLogEncode		10179409	0		=			
ANR	10179585	PtrMemberAccess	tif -> tif_encoderow		10179409	0					
ANR	10179586	Identifier	tif		10179409	0					
ANR	10179587	Identifier	tif_encoderow		10179409	1					
ANR	10179588	Identifier	PixarLogEncode		10179409	1					
ANR	10179589	ExpressionStatement	tif -> tif_encodestrip = PixarLogEncode	1445:1:42882:42919	10179409	21	True				
ANR	10179590	AssignmentExpression	tif -> tif_encodestrip = PixarLogEncode		10179409	0		=			
ANR	10179591	PtrMemberAccess	tif -> tif_encodestrip		10179409	0					
ANR	10179592	Identifier	tif		10179409	0					
ANR	10179593	Identifier	tif_encodestrip		10179409	1					
ANR	10179594	Identifier	PixarLogEncode		10179409	1					
ANR	10179595	ExpressionStatement	tif -> tif_encodetile = PixarLogEncode	1446:1:42922:42958	10179409	22	True				
ANR	10179596	AssignmentExpression	tif -> tif_encodetile = PixarLogEncode		10179409	0		=			
ANR	10179597	PtrMemberAccess	tif -> tif_encodetile		10179409	0					
ANR	10179598	Identifier	tif		10179409	0					
ANR	10179599	Identifier	tif_encodetile		10179409	1					
ANR	10179600	Identifier	PixarLogEncode		10179409	1					
ANR	10179601	ExpressionStatement	tif -> tif_close = PixarLogClose	1447:1:42963:42993	10179409	23	True				
ANR	10179602	AssignmentExpression	tif -> tif_close = PixarLogClose		10179409	0		=			
ANR	10179603	PtrMemberAccess	tif -> tif_close		10179409	0					
ANR	10179604	Identifier	tif		10179409	0					
ANR	10179605	Identifier	tif_close		10179409	1					
ANR	10179606	Identifier	PixarLogClose		10179409	1					
ANR	10179607	ExpressionStatement	tif -> tif_cleanup = PixarLogCleanup	1448:1:42996:43030	10179409	24	True				
ANR	10179608	AssignmentExpression	tif -> tif_cleanup = PixarLogCleanup		10179409	0		=			
ANR	10179609	PtrMemberAccess	tif -> tif_cleanup		10179409	0					
ANR	10179610	Identifier	tif		10179409	0					
ANR	10179611	Identifier	tif_cleanup		10179409	1					
ANR	10179612	Identifier	PixarLogCleanup		10179409	1					
ANR	10179613	ExpressionStatement	sp -> vgetparent = tif -> tif_tagmethods . vgetfield	1451:1:43099:43145	10179409	25	True				
ANR	10179614	AssignmentExpression	sp -> vgetparent = tif -> tif_tagmethods . vgetfield		10179409	0		=			
ANR	10179615	PtrMemberAccess	sp -> vgetparent		10179409	0					
ANR	10179616	Identifier	sp		10179409	0					
ANR	10179617	Identifier	vgetparent		10179409	1					
ANR	10179618	MemberAccess	tif -> tif_tagmethods . vgetfield		10179409	1					
ANR	10179619	PtrMemberAccess	tif -> tif_tagmethods		10179409	0					
ANR	10179620	Identifier	tif		10179409	0					
ANR	10179621	Identifier	tif_tagmethods		10179409	1					
ANR	10179622	Identifier	vgetfield		10179409	1					
ANR	10179623	ExpressionStatement	tif -> tif_tagmethods . vgetfield = PixarLogVGetField	1452:1:43148:43197	10179409	26	True				
ANR	10179624	AssignmentExpression	tif -> tif_tagmethods . vgetfield = PixarLogVGetField		10179409	0		=			
ANR	10179625	MemberAccess	tif -> tif_tagmethods . vgetfield		10179409	0					
ANR	10179626	PtrMemberAccess	tif -> tif_tagmethods		10179409	0					
ANR	10179627	Identifier	tif		10179409	0					
ANR	10179628	Identifier	tif_tagmethods		10179409	1					
ANR	10179629	Identifier	vgetfield		10179409	1					
ANR	10179630	Identifier	PixarLogVGetField		10179409	1					
ANR	10179631	ExpressionStatement	sp -> vsetparent = tif -> tif_tagmethods . vsetfield	1453:1:43228:43274	10179409	27	True				
ANR	10179632	AssignmentExpression	sp -> vsetparent = tif -> tif_tagmethods . vsetfield		10179409	0		=			
ANR	10179633	PtrMemberAccess	sp -> vsetparent		10179409	0					
ANR	10179634	Identifier	sp		10179409	0					
ANR	10179635	Identifier	vsetparent		10179409	1					
ANR	10179636	MemberAccess	tif -> tif_tagmethods . vsetfield		10179409	1					
ANR	10179637	PtrMemberAccess	tif -> tif_tagmethods		10179409	0					
ANR	10179638	Identifier	tif		10179409	0					
ANR	10179639	Identifier	tif_tagmethods		10179409	1					
ANR	10179640	Identifier	vsetfield		10179409	1					
ANR	10179641	ExpressionStatement	tif -> tif_tagmethods . vsetfield = PixarLogVSetField	1454:1:43277:43326	10179409	28	True				
ANR	10179642	AssignmentExpression	tif -> tif_tagmethods . vsetfield = PixarLogVSetField		10179409	0		=			
ANR	10179643	MemberAccess	tif -> tif_tagmethods . vsetfield		10179409	0					
ANR	10179644	PtrMemberAccess	tif -> tif_tagmethods		10179409	0					
ANR	10179645	Identifier	tif		10179409	0					
ANR	10179646	Identifier	tif_tagmethods		10179409	1					
ANR	10179647	Identifier	vsetfield		10179409	1					
ANR	10179648	Identifier	PixarLogVSetField		10179409	1					
ANR	10179649	ExpressionStatement	sp -> quality = Z_DEFAULT_COMPRESSION	1457:1:43406:43441	10179409	29	True				
ANR	10179650	AssignmentExpression	sp -> quality = Z_DEFAULT_COMPRESSION		10179409	0		=			
ANR	10179651	PtrMemberAccess	sp -> quality		10179409	0					
ANR	10179652	Identifier	sp		10179409	0					
ANR	10179653	Identifier	quality		10179409	1					
ANR	10179654	Identifier	Z_DEFAULT_COMPRESSION		10179409	1					
ANR	10179655	ExpressionStatement	sp -> state = 0	1458:1:43470:43483	10179409	30	True				
ANR	10179656	AssignmentExpression	sp -> state = 0		10179409	0		=			
ANR	10179657	PtrMemberAccess	sp -> state		10179409	0					
ANR	10179658	Identifier	sp		10179409	0					
ANR	10179659	Identifier	state		10179409	1					
ANR	10179660	PrimaryExpression	0		10179409	1					
ANR	10179661	ExpressionStatement	( void ) TIFFPredictorInit ( tif )	1463:1:43582:43611	10179409	31	True				
ANR	10179662	CastExpression	( void ) TIFFPredictorInit ( tif )		10179409	0					
ANR	10179663	CastTarget	void		10179409	0					
ANR	10179664	CallExpression	TIFFPredictorInit ( tif )		10179409	1					
ANR	10179665	Callee	TIFFPredictorInit		10179409	0					
ANR	10179666	Identifier	TIFFPredictorInit		10179409	0					
ANR	10179667	ArgumentList	tif		10179409	1					
ANR	10179668	Argument	tif		10179409	0					
ANR	10179669	Identifier	tif		10179409	0					
ANR	10179670	ExpressionStatement	PixarLogMakeTables ( sp )	1468:1:43657:43679	10179409	32	True				
ANR	10179671	CallExpression	PixarLogMakeTables ( sp )		10179409	0					
ANR	10179672	Callee	PixarLogMakeTables		10179409	0					
ANR	10179673	Identifier	PixarLogMakeTables		10179409	0					
ANR	10179674	ArgumentList	sp		10179409	1					
ANR	10179675	Argument	sp		10179409	0					
ANR	10179676	Identifier	sp		10179409	0					
ANR	10179677	ReturnStatement	return ( 1 ) ;	1470:1:43683:43693	10179409	33	True				
ANR	10179678	PrimaryExpression	1		10179409	0					
ANR	10179679	Label	bad :	1471:0:43695:43698	10179409	34	True				
ANR	10179680	Identifier	bad		10179409	0					
ANR	10179681	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for PixarLog state block"" )"	1472:1:43701:43786	10179409	35	True				
ANR	10179682	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for PixarLog state block"" )"		10179409	0					
ANR	10179683	Callee	TIFFErrorExt		10179409	0					
ANR	10179684	Identifier	TIFFErrorExt		10179409	0					
ANR	10179685	ArgumentList	tif -> tif_clientdata		10179409	1					
ANR	10179686	Argument	tif -> tif_clientdata		10179409	0					
ANR	10179687	PtrMemberAccess	tif -> tif_clientdata		10179409	0					
ANR	10179688	Identifier	tif		10179409	0					
ANR	10179689	Identifier	tif_clientdata		10179409	1					
ANR	10179690	Argument	module		10179409	1					
ANR	10179691	Identifier	module		10179409	0					
ANR	10179692	Argument	"""No space for PixarLog state block"""		10179409	2					
ANR	10179693	PrimaryExpression	"""No space for PixarLog state block"""		10179409	0					
ANR	10179694	ReturnStatement	return ( 0 ) ;	1474:1:43789:43799	10179409	36	True				
ANR	10179695	PrimaryExpression	0		10179409	0					
ANR	10179696	ReturnType	int		10179409	1					
ANR	10179697	Identifier	TIFFInitPixarLog		10179409	2					
ANR	10179698	ParameterList	"TIFF * tif , int scheme"		10179409	3					
ANR	10179699	Parameter	TIFF * tif	1403:17:41699:41707	10179409	0	True				
ANR	10179700	ParameterType	TIFF *		10179409	0					
ANR	10179701	Identifier	tif		10179409	1					
ANR	10179702	Parameter	int scheme	1403:28:41710:41719	10179409	1	True				
ANR	10179703	ParameterType	int		10179409	0					
ANR	10179704	Identifier	scheme		10179409	1					
ANR	10179705	CFGEntryNode	ENTRY		10179409		True				
ANR	10179706	CFGExitNode	EXIT		10179409		True				
ANR	10179707	Symbol	* sp		10179409						
ANR	10179708	Symbol	PixarLogClose		10179409						
ANR	10179709	Symbol	tif -> tif_postencode		10179409						
ANR	10179710	Symbol	sp -> vgetparent		10179409						
ANR	10179711	Symbol	PIXARLOGDATAFMT_UNKNOWN		10179409						
ANR	10179712	Symbol	PixarLogSetupEncode		10179409						
ANR	10179713	Symbol	tif		10179409						
ANR	10179714	Symbol	PixarLogVSetField		10179409						
ANR	10179715	Symbol	tif -> tif_cleanup		10179409						
ANR	10179716	Symbol	tif -> tif_fixuptags		10179409						
ANR	10179717	Symbol	tif -> tif_setupdecode		10179409						
ANR	10179718	Symbol	tif -> tif_preencode		10179409						
ANR	10179719	Symbol	tif -> tif_decoderow		10179409						
ANR	10179720	Symbol	COMPRESSION_PIXARLOG		10179409						
ANR	10179721	Symbol	NULL		10179409						
ANR	10179722	Symbol	PixarLogPostEncode		10179409						
ANR	10179723	Symbol	module		10179409						
ANR	10179724	Symbol	PixarLogCleanup		10179409						
ANR	10179725	Symbol	PixarLogSetupDecode		10179409						
ANR	10179726	Symbol	sp -> state		10179409						
ANR	10179727	Symbol	sp -> quality		10179409						
ANR	10179728	Symbol	tif -> tif_encodetile		10179409						
ANR	10179729	Symbol	tif -> tif_setupencode		10179409						
ANR	10179730	Symbol	TIFFArrayCount		10179409						
ANR	10179731	Symbol	_TIFFmalloc		10179409						
ANR	10179732	Symbol	tif -> tif_close		10179409						
ANR	10179733	Symbol	tif -> tif_predecode		10179409						
ANR	10179734	Symbol	sp -> stream . data_type		10179409						
ANR	10179735	Symbol	tif -> tif_encoderow		10179409						
ANR	10179736	Symbol	PixarLogPreDecode		10179409						
ANR	10179737	Symbol	scheme		10179409						
ANR	10179738	Symbol	_TIFFMergeFields		10179409						
ANR	10179739	Symbol	sp -> user_datafmt		10179409						
ANR	10179740	Symbol	tif -> tif_encodestrip		10179409						
ANR	10179741	Symbol	PixarLogDecode		10179409						
ANR	10179742	Symbol	PixarLogPreEncode		10179409						
ANR	10179743	Symbol	PixarLogEncode		10179409						
ANR	10179744	Symbol	tif -> tif_tagmethods		10179409						
ANR	10179745	Symbol	PixarLogFixupTags		10179409						
ANR	10179746	Symbol	tif -> tif_tagmethods . vgetfield		10179409						
ANR	10179747	Symbol	PixarLogVGetField		10179409						
ANR	10179748	Symbol	tif -> tif_decodetile		10179409						
ANR	10179749	Symbol	sp		10179409						
ANR	10179750	Symbol	tif -> tif_data		10179409						
ANR	10179751	Symbol	tif -> tif_decodestrip		10179409						
ANR	10179752	Symbol	tif -> tif_tagmethods . vsetfield		10179409						
ANR	10179753	Symbol	Z_BINARY		10179409						
ANR	10179754	Symbol	Z_DEFAULT_COMPRESSION		10179409						
ANR	10179755	Symbol	sp -> vsetparent		10179409						
ANR	10179756	Symbol	tif -> tif_clientdata		10179409						
ANR	10179757	Symbol	pixarlogFields		10179409						
ANR	10179758	Symbol	sp -> stream		10179409						
ANR	10179759	Symbol	* tif		10179409						
