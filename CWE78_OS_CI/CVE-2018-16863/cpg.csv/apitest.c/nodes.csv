command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	119304	File	data/converged/CVE-2018-16863_ghostpdl/apitest.c								
ANR	119305	DeclStmt									
ANR	119306	Decl							int	int	my_argc
ANR	119307	DeclStmt									
ANR	119308	Decl							char	char * *	my_argv
ANR	119309	DeclStmt									
ANR	119310	Decl							int	int	my_argv_file
ANR	119311	ClassDef	my_stdio_s	15:8:237:303							
ANR	119312	DeclStmt									
ANR	119313	Decl							FILE	FILE *	stdout
ANR	119314	DeclStmt									
ANR	119315	Decl							FILE	FILE *	stderr
ANR	119316	DeclStmt									
ANR	119317	Decl							my_stdio_s	my_stdio_s	my_stdio
ANR	119318	Function	my_stdin	22:0:328:439							
ANR	119319	FunctionDef	"my_stdin (void * instance , char * buf , int len)"		119318	0					
ANR	119320	CompoundStatement		24:0:394:439	119318	0					
ANR	119321	ReturnStatement	return 0 ;	25:4:400:408	119318	0	True				
ANR	119322	PrimaryExpression	0		119318	0					
ANR	119323	ReturnType	static int GSDLLCALL		119318	1					
ANR	119324	Identifier	my_stdin		119318	2					
ANR	119325	ParameterList	"void * instance , char * buf , int len"		119318	3					
ANR	119326	Parameter	void * instance	23:9:358:371	119318	0	True				
ANR	119327	ParameterType	void *		119318	0					
ANR	119328	Identifier	instance		119318	1					
ANR	119329	Parameter	char * buf	23:25:374:382	119318	1	True				
ANR	119330	ParameterType	char *		119318	0					
ANR	119331	Identifier	buf		119318	1					
ANR	119332	Parameter	int len	23:36:385:391	119318	2	True				
ANR	119333	ParameterType	int		119318	0					
ANR	119334	Identifier	len		119318	1					
ANR	119335	CFGEntryNode	ENTRY		119318		True				
ANR	119336	CFGExitNode	EXIT		119318		True				
ANR	119337	Symbol	buf		119318						
ANR	119338	Symbol	instance		119318						
ANR	119339	Symbol	len		119318						
ANR	119340	Function	my_stdout	28:0:442:645							
ANR	119341	FunctionDef	"my_stdout (void * instance , const char * str , int len)"		119340	0					
ANR	119342	CompoundStatement		30:0:515:645	119340	0					
ANR	119343	IdentifierDeclStatement	my_stdio * stdio = ( my_stdio * ) instance ;	31:4:521:559	119340	0	True				
ANR	119344	IdentifierDecl	* stdio = ( my_stdio * ) instance		119340	0					
ANR	119345	IdentifierDeclType	my_stdio *		119340	0					
ANR	119346	Identifier	stdio		119340	1					
ANR	119347	AssignmentExpression	* stdio = ( my_stdio * ) instance		119340	2		=			
ANR	119348	Identifier	stdio		119340	0					
ANR	119349	CastExpression	( my_stdio * ) instance		119340	1					
ANR	119350	CastTarget	my_stdio *		119340	0					
ANR	119351	Identifier	instance		119340	1					
ANR	119352	ExpressionStatement	"fwrite ( str , 1 , len , stdio -> stdout )"	33:4:566:600	119340	1	True				
ANR	119353	CallExpression	"fwrite ( str , 1 , len , stdio -> stdout )"		119340	0					
ANR	119354	Callee	fwrite		119340	0					
ANR	119355	Identifier	fwrite		119340	0					
ANR	119356	ArgumentList	str		119340	1					
ANR	119357	Argument	str		119340	0					
ANR	119358	Identifier	str		119340	0					
ANR	119359	Argument	1		119340	1					
ANR	119360	PrimaryExpression	1		119340	0					
ANR	119361	Argument	len		119340	2					
ANR	119362	Identifier	len		119340	0					
ANR	119363	Argument	stdio -> stdout		119340	3					
ANR	119364	PtrMemberAccess	stdio -> stdout		119340	0					
ANR	119365	Identifier	stdio		119340	0					
ANR	119366	Identifier	stdout		119340	1					
ANR	119367	ExpressionStatement	fflush ( stdio -> stdout )	34:4:606:627	119340	2	True				
ANR	119368	CallExpression	fflush ( stdio -> stdout )		119340	0					
ANR	119369	Callee	fflush		119340	0					
ANR	119370	Identifier	fflush		119340	0					
ANR	119371	ArgumentList	stdio -> stdout		119340	1					
ANR	119372	Argument	stdio -> stdout		119340	0					
ANR	119373	PtrMemberAccess	stdio -> stdout		119340	0					
ANR	119374	Identifier	stdio		119340	0					
ANR	119375	Identifier	stdout		119340	1					
ANR	119376	ReturnStatement	return len ;	35:4:633:643	119340	3	True				
ANR	119377	Identifier	len		119340	0					
ANR	119378	ReturnType	static int GSDLLCALL		119340	1					
ANR	119379	Identifier	my_stdout		119340	2					
ANR	119380	ParameterList	"void * instance , const char * str , int len"		119340	3					
ANR	119381	Parameter	void * instance	29:10:473:486	119340	0	True				
ANR	119382	ParameterType	void *		119340	0					
ANR	119383	Identifier	instance		119340	1					
ANR	119384	Parameter	const char * str	29:26:489:503	119340	1	True				
ANR	119385	ParameterType	const char *		119340	0					
ANR	119386	Identifier	str		119340	1					
ANR	119387	Parameter	int len	29:43:506:512	119340	2	True				
ANR	119388	ParameterType	int		119340	0					
ANR	119389	Identifier	len		119340	1					
ANR	119390	CFGEntryNode	ENTRY		119340		True				
ANR	119391	CFGExitNode	EXIT		119340		True				
ANR	119392	Symbol	str		119340						
ANR	119393	Symbol	instance		119340						
ANR	119394	Symbol	stdio		119340						
ANR	119395	Symbol	len		119340						
ANR	119396	Symbol	* stdio		119340						
ANR	119397	Symbol	stdio -> stdout		119340						
ANR	119398	Function	my_stderr	38:0:648:851							
ANR	119399	FunctionDef	"my_stderr (void * instance , const char * str , int len)"		119398	0					
ANR	119400	CompoundStatement		40:0:721:851	119398	0					
ANR	119401	IdentifierDeclStatement	my_stdio * stdio = ( my_stdio * ) instance ;	41:4:727:765	119398	0	True				
ANR	119402	IdentifierDecl	* stdio = ( my_stdio * ) instance		119398	0					
ANR	119403	IdentifierDeclType	my_stdio *		119398	0					
ANR	119404	Identifier	stdio		119398	1					
ANR	119405	AssignmentExpression	* stdio = ( my_stdio * ) instance		119398	2		=			
ANR	119406	Identifier	stdio		119398	0					
ANR	119407	CastExpression	( my_stdio * ) instance		119398	1					
ANR	119408	CastTarget	my_stdio *		119398	0					
ANR	119409	Identifier	instance		119398	1					
ANR	119410	ExpressionStatement	"fwrite ( str , 1 , len , stdio -> stderr )"	43:4:772:806	119398	1	True				
ANR	119411	CallExpression	"fwrite ( str , 1 , len , stdio -> stderr )"		119398	0					
ANR	119412	Callee	fwrite		119398	0					
ANR	119413	Identifier	fwrite		119398	0					
ANR	119414	ArgumentList	str		119398	1					
ANR	119415	Argument	str		119398	0					
ANR	119416	Identifier	str		119398	0					
ANR	119417	Argument	1		119398	1					
ANR	119418	PrimaryExpression	1		119398	0					
ANR	119419	Argument	len		119398	2					
ANR	119420	Identifier	len		119398	0					
ANR	119421	Argument	stdio -> stderr		119398	3					
ANR	119422	PtrMemberAccess	stdio -> stderr		119398	0					
ANR	119423	Identifier	stdio		119398	0					
ANR	119424	Identifier	stderr		119398	1					
ANR	119425	ExpressionStatement	fflush ( stdio -> stderr )	44:4:812:833	119398	2	True				
ANR	119426	CallExpression	fflush ( stdio -> stderr )		119398	0					
ANR	119427	Callee	fflush		119398	0					
ANR	119428	Identifier	fflush		119398	0					
ANR	119429	ArgumentList	stdio -> stderr		119398	1					
ANR	119430	Argument	stdio -> stderr		119398	0					
ANR	119431	PtrMemberAccess	stdio -> stderr		119398	0					
ANR	119432	Identifier	stdio		119398	0					
ANR	119433	Identifier	stderr		119398	1					
ANR	119434	ReturnStatement	return len ;	45:4:839:849	119398	3	True				
ANR	119435	Identifier	len		119398	0					
ANR	119436	ReturnType	static int GSDLLCALL		119398	1					
ANR	119437	Identifier	my_stderr		119398	2					
ANR	119438	ParameterList	"void * instance , const char * str , int len"		119398	3					
ANR	119439	Parameter	void * instance	39:10:679:692	119398	0	True				
ANR	119440	ParameterType	void *		119398	0					
ANR	119441	Identifier	instance		119398	1					
ANR	119442	Parameter	const char * str	39:26:695:709	119398	1	True				
ANR	119443	ParameterType	const char *		119398	0					
ANR	119444	Identifier	str		119398	1					
ANR	119445	Parameter	int len	39:43:712:718	119398	2	True				
ANR	119446	ParameterType	int		119398	0					
ANR	119447	Identifier	len		119398	1					
ANR	119448	CFGEntryNode	ENTRY		119398		True				
ANR	119449	CFGExitNode	EXIT		119398		True				
ANR	119450	Symbol	str		119398						
ANR	119451	Symbol	instance		119398						
ANR	119452	Symbol	stdio		119398						
ANR	119453	Symbol	stdio -> stderr		119398						
ANR	119454	Symbol	len		119398						
ANR	119455	Symbol	* stdio		119398						
ANR	119456	Function	gs_main	48:0:854:2343							
ANR	119457	FunctionDef	gs_main (void * arg)		119456	0					
ANR	119458	CompoundStatement		49:0:886:2343	119456	0					
ANR	119459	IdentifierDeclStatement	int threadnum = ( int ) ( void * ) arg ;	50:4:892:924	119456	0	True				
ANR	119460	IdentifierDecl	threadnum = ( int ) ( void * ) arg		119456	0					
ANR	119461	IdentifierDeclType	int		119456	0					
ANR	119462	Identifier	threadnum		119456	1					
ANR	119463	AssignmentExpression	threadnum = ( int ) ( void * ) arg		119456	2		=			
ANR	119464	Identifier	threadnum		119456	0					
ANR	119465	CastExpression	( int ) ( void * ) arg		119456	1					
ANR	119466	CastTarget	int		119456	0					
ANR	119467	CastExpression	( void * ) arg		119456	1					
ANR	119468	CastTarget	void *		119456	0					
ANR	119469	Identifier	arg		119456	1					
ANR	119470	IdentifierDeclStatement	"int code , code1 ;"	51:4:930:945	119456	1	True				
ANR	119471	IdentifierDecl	code		119456	0					
ANR	119472	IdentifierDeclType	int		119456	0					
ANR	119473	Identifier	code		119456	1					
ANR	119474	IdentifierDecl	code1		119456	1					
ANR	119475	IdentifierDeclType	int		119456	0					
ANR	119476	Identifier	code1		119456	1					
ANR	119477	IdentifierDeclStatement	char text [ 256 ] ;	52:4:951:965	119456	2	True				
ANR	119478	IdentifierDecl	text [ 256 ]		119456	0					
ANR	119479	IdentifierDeclType	char [ 256 ]		119456	0					
ANR	119480	Identifier	text		119456	1					
ANR	119481	PrimaryExpression	256		119456	2					
ANR	119482	IdentifierDeclStatement	void * minst ;	53:4:971:982	119456	3	True				
ANR	119483	IdentifierDecl	* minst		119456	0					
ANR	119484	IdentifierDeclType	void *		119456	0					
ANR	119485	Identifier	minst		119456	1					
ANR	119486	IdentifierDeclStatement	char * * gsargv ;	54:4:988:1001	119456	4	True				
ANR	119487	IdentifierDecl	* * gsargv		119456	0					
ANR	119488	IdentifierDeclType	char * *		119456	0					
ANR	119489	Identifier	gsargv		119456	1					
ANR	119490	IdentifierDeclStatement	int gsargc ;	55:4:1007:1017	119456	5	True				
ANR	119491	IdentifierDecl	gsargc		119456	0					
ANR	119492	IdentifierDeclType	int		119456	0					
ANR	119493	Identifier	gsargc		119456	1					
ANR	119494	IdentifierDeclStatement	"int i , pos , len ;"	56:4:1023:1038	119456	6	True				
ANR	119495	IdentifierDecl	i		119456	0					
ANR	119496	IdentifierDeclType	int		119456	0					
ANR	119497	Identifier	i		119456	1					
ANR	119498	IdentifierDecl	pos		119456	1					
ANR	119499	IdentifierDeclType	int		119456	0					
ANR	119500	Identifier	pos		119456	1					
ANR	119501	IdentifierDecl	len		119456	2					
ANR	119502	IdentifierDeclType	int		119456	0					
ANR	119503	Identifier	len		119456	1					
ANR	119504	IdentifierDeclStatement	my_stdio stdio ;	57:4:1044:1058	119456	7	True				
ANR	119505	IdentifierDecl	stdio		119456	0					
ANR	119506	IdentifierDeclType	my_stdio		119456	0					
ANR	119507	Identifier	stdio		119456	1					
ANR	119508	ExpressionStatement	"snprintf ( text , sizeof ( text ) , ""stdout.%d"" , threadnum )"	59:4:1065:1117	119456	8	True				
ANR	119509	CallExpression	"snprintf ( text , sizeof ( text ) , ""stdout.%d"" , threadnum )"		119456	0					
ANR	119510	Callee	snprintf		119456	0					
ANR	119511	Identifier	snprintf		119456	0					
ANR	119512	ArgumentList	text		119456	1					
ANR	119513	Argument	text		119456	0					
ANR	119514	Identifier	text		119456	0					
ANR	119515	Argument	sizeof ( text )		119456	1					
ANR	119516	SizeofExpression	sizeof ( text )		119456	0					
ANR	119517	Sizeof	sizeof		119456	0					
ANR	119518	SizeofOperand	text		119456	1					
ANR	119519	Argument	"""stdout.%d"""		119456	2					
ANR	119520	PrimaryExpression	"""stdout.%d"""		119456	0					
ANR	119521	Argument	threadnum		119456	3					
ANR	119522	Identifier	threadnum		119456	0					
ANR	119523	ExpressionStatement	"stdio . stdout = gp_fopen ( text , ""w"" )"	60:4:1123:1157	119456	9	True				
ANR	119524	AssignmentExpression	"stdio . stdout = gp_fopen ( text , ""w"" )"		119456	0		=			
ANR	119525	MemberAccess	stdio . stdout		119456	0					
ANR	119526	Identifier	stdio		119456	0					
ANR	119527	Identifier	stdout		119456	1					
ANR	119528	CallExpression	"gp_fopen ( text , ""w"" )"		119456	1					
ANR	119529	Callee	gp_fopen		119456	0					
ANR	119530	Identifier	gp_fopen		119456	0					
ANR	119531	ArgumentList	text		119456	1					
ANR	119532	Argument	text		119456	0					
ANR	119533	Identifier	text		119456	0					
ANR	119534	Argument	"""w"""		119456	1					
ANR	119535	PrimaryExpression	"""w"""		119456	0					
ANR	119536	ExpressionStatement	"snprintf ( text , sizeof ( text ) , ""stderr.%d"" , threadnum )"	61:4:1163:1215	119456	10	True				
ANR	119537	CallExpression	"snprintf ( text , sizeof ( text ) , ""stderr.%d"" , threadnum )"		119456	0					
ANR	119538	Callee	snprintf		119456	0					
ANR	119539	Identifier	snprintf		119456	0					
ANR	119540	ArgumentList	text		119456	1					
ANR	119541	Argument	text		119456	0					
ANR	119542	Identifier	text		119456	0					
ANR	119543	Argument	sizeof ( text )		119456	1					
ANR	119544	SizeofExpression	sizeof ( text )		119456	0					
ANR	119545	Sizeof	sizeof		119456	0					
ANR	119546	SizeofOperand	text		119456	1					
ANR	119547	Argument	"""stderr.%d"""		119456	2					
ANR	119548	PrimaryExpression	"""stderr.%d"""		119456	0					
ANR	119549	Argument	threadnum		119456	3					
ANR	119550	Identifier	threadnum		119456	0					
ANR	119551	ExpressionStatement	"stdio . stderr = gp_fopen ( text , ""w"" )"	62:4:1221:1255	119456	11	True				
ANR	119552	AssignmentExpression	"stdio . stderr = gp_fopen ( text , ""w"" )"		119456	0		=			
ANR	119553	MemberAccess	stdio . stderr		119456	0					
ANR	119554	Identifier	stdio		119456	0					
ANR	119555	Identifier	stderr		119456	1					
ANR	119556	CallExpression	"gp_fopen ( text , ""w"" )"		119456	1					
ANR	119557	Callee	gp_fopen		119456	0					
ANR	119558	Identifier	gp_fopen		119456	0					
ANR	119559	ArgumentList	text		119456	1					
ANR	119560	Argument	text		119456	0					
ANR	119561	Identifier	text		119456	0					
ANR	119562	Argument	"""w"""		119456	1					
ANR	119563	PrimaryExpression	"""w"""		119456	0					
ANR	119564	ExpressionStatement	gsargv = malloc ( sizeof ( * gsargv ) * my_argc )	64:4:1262:1302	119456	12	True				
ANR	119565	AssignmentExpression	gsargv = malloc ( sizeof ( * gsargv ) * my_argc )		119456	0		=			
ANR	119566	Identifier	gsargv		119456	0					
ANR	119567	CallExpression	malloc ( sizeof ( * gsargv ) * my_argc )		119456	1					
ANR	119568	Callee	malloc		119456	0					
ANR	119569	Identifier	malloc		119456	0					
ANR	119570	ArgumentList	sizeof ( * gsargv ) * my_argc		119456	1					
ANR	119571	Argument	sizeof ( * gsargv ) * my_argc		119456	0					
ANR	119572	MultiplicativeExpression	sizeof ( * gsargv ) * my_argc		119456	0		*			
ANR	119573	SizeofExpression	sizeof ( * gsargv )		119456	0					
ANR	119574	Sizeof	sizeof		119456	0					
ANR	119575	UnaryOperationExpression	* gsargv		119456	1					
ANR	119576	UnaryOperator	*		119456	0					
ANR	119577	Identifier	gsargv		119456	1					
ANR	119578	Identifier	my_argc		119456	1					
ANR	119579	IfStatement	if ( ! gsargv )		119456	13					
ANR	119580	Condition	! gsargv	65:8:1312:1318	119456	0	True				
ANR	119581	UnaryOperationExpression	! gsargv		119456	0					
ANR	119582	UnaryOperator	!		119456	0					
ANR	119583	Identifier	gsargv		119456	1					
ANR	119584	CompoundStatement		18:4:438:438	119456	1					
ANR	119585	ExpressionStatement	"fprintf ( stdio . stderr , ""Failed to allocate arg space in thread %d\\n"" , threadnum )"	67:8:1335:1414	119456	0	True				
ANR	119586	CallExpression	"fprintf ( stdio . stderr , ""Failed to allocate arg space in thread %d\\n"" , threadnum )"		119456	0					
ANR	119587	Callee	fprintf		119456	0					
ANR	119588	Identifier	fprintf		119456	0					
ANR	119589	ArgumentList	stdio . stderr		119456	1					
ANR	119590	Argument	stdio . stderr		119456	0					
ANR	119591	MemberAccess	stdio . stderr		119456	0					
ANR	119592	Identifier	stdio		119456	0					
ANR	119593	Identifier	stderr		119456	1					
ANR	119594	Argument	"""Failed to allocate arg space in thread %d\\n"""		119456	1					
ANR	119595	PrimaryExpression	"""Failed to allocate arg space in thread %d\\n"""		119456	0					
ANR	119596	Argument	threadnum		119456	2					
ANR	119597	Identifier	threadnum		119456	0					
ANR	119598	ReturnStatement	return ( void * ) - 1 ;	68:8:1424:1441	119456	1	True				
ANR	119599	CastExpression	( void * ) - 1		119456	0					
ANR	119600	CastTarget	void *		119456	0					
ANR	119601	UnaryOperationExpression	- 1		119456	1					
ANR	119602	UnaryOperator	-		119456	0					
ANR	119603	PrimaryExpression	1		119456	1					
ANR	119604	ForStatement	for ( i = 0 ; i < my_argc ; i ++ )		119456	14					
ANR	119605	ForInit	i = 0 ;	71:9:1459:1462	119456	0	True				
ANR	119606	AssignmentExpression	i = 0		119456	0		=			
ANR	119607	Identifier	i		119456	0					
ANR	119608	PrimaryExpression	0		119456	1					
ANR	119609	Condition	i < my_argc	71:14:1464:1474	119456	1	True				
ANR	119610	RelationalExpression	i < my_argc		119456	0		<			
ANR	119611	Identifier	i		119456	0					
ANR	119612	Identifier	my_argc		119456	1					
ANR	119613	PostIncDecOperationExpression	i ++	71:27:1477:1479	119456	2	True				
ANR	119614	Identifier	i		119456	0					
ANR	119615	IncDec	++		119456	1					
ANR	119616	ExpressionStatement	gsargv [ i ] = my_argv [ i ]	72:8:1490:1512	119456	3	True				
ANR	119617	AssignmentExpression	gsargv [ i ] = my_argv [ i ]		119456	0		=			
ANR	119618	ArrayIndexing	gsargv [ i ]		119456	0					
ANR	119619	Identifier	gsargv		119456	0					
ANR	119620	Identifier	i		119456	1					
ANR	119621	ArrayIndexing	my_argv [ i ]		119456	1					
ANR	119622	Identifier	my_argv		119456	0					
ANR	119623	Identifier	i		119456	1					
ANR	119624	ExpressionStatement	gsargv [ my_argv_file ] = text	73:4:1518:1545	119456	15	True				
ANR	119625	AssignmentExpression	gsargv [ my_argv_file ] = text		119456	0		=			
ANR	119626	ArrayIndexing	gsargv [ my_argv_file ]		119456	0					
ANR	119627	Identifier	gsargv		119456	0					
ANR	119628	Identifier	my_argv_file		119456	1					
ANR	119629	Identifier	text		119456	1					
ANR	119630	ExpressionStatement	gsargc = my_argc	74:4:1551:1567	119456	16	True				
ANR	119631	AssignmentExpression	gsargc = my_argc		119456	0		=			
ANR	119632	Identifier	gsargc		119456	0					
ANR	119633	Identifier	my_argc		119456	1					
ANR	119634	ExpressionStatement	"strncpy ( text , my_argv [ my_argv_file ] , sizeof ( text ) )"	76:4:1578:1628	119456	17	True				
ANR	119635	CallExpression	"strncpy ( text , my_argv [ my_argv_file ] , sizeof ( text ) )"		119456	0					
ANR	119636	Callee	strncpy		119456	0					
ANR	119637	Identifier	strncpy		119456	0					
ANR	119638	ArgumentList	text		119456	1					
ANR	119639	Argument	text		119456	0					
ANR	119640	Identifier	text		119456	0					
ANR	119641	Argument	my_argv [ my_argv_file ]		119456	1					
ANR	119642	ArrayIndexing	my_argv [ my_argv_file ]		119456	0					
ANR	119643	Identifier	my_argv		119456	0					
ANR	119644	Identifier	my_argv_file		119456	1					
ANR	119645	Argument	sizeof ( text )		119456	2					
ANR	119646	SizeofExpression	sizeof ( text )		119456	0					
ANR	119647	Sizeof	sizeof		119456	0					
ANR	119648	SizeofOperand	text		119456	1					
ANR	119649	ExpressionStatement	text [ sizeof ( text ) - 1 ] = 0	77:4:1634:1656	119456	18	True				
ANR	119650	AssignmentExpression	text [ sizeof ( text ) - 1 ] = 0		119456	0		=			
ANR	119651	ArrayIndexing	text [ sizeof ( text ) - 1 ]		119456	0					
ANR	119652	Identifier	text		119456	0					
ANR	119653	AdditiveExpression	sizeof ( text ) - 1		119456	1		-			
ANR	119654	SizeofExpression	sizeof ( text )		119456	0					
ANR	119655	Sizeof	sizeof		119456	0					
ANR	119656	SizeofOperand	text		119456	1					
ANR	119657	PrimaryExpression	1		119456	1					
ANR	119658	PrimaryExpression	0		119456	1					
ANR	119659	ExpressionStatement	pos = strlen ( text )	78:4:1662:1680	119456	19	True				
ANR	119660	AssignmentExpression	pos = strlen ( text )		119456	0		=			
ANR	119661	Identifier	pos		119456	0					
ANR	119662	CallExpression	strlen ( text )		119456	1					
ANR	119663	Callee	strlen		119456	0					
ANR	119664	Identifier	strlen		119456	0					
ANR	119665	ArgumentList	text		119456	1					
ANR	119666	Argument	text		119456	0					
ANR	119667	Identifier	text		119456	0					
ANR	119668	ExpressionStatement	len = sizeof ( text ) + 1 - pos	79:4:1686:1710	119456	20	True				
ANR	119669	AssignmentExpression	len = sizeof ( text ) + 1 - pos		119456	0		=			
ANR	119670	Identifier	len		119456	0					
ANR	119671	AdditiveExpression	sizeof ( text ) + 1 - pos		119456	1		+			
ANR	119672	SizeofExpression	sizeof ( text )		119456	0					
ANR	119673	Sizeof	sizeof		119456	0					
ANR	119674	SizeofOperand	text		119456	1					
ANR	119675	AdditiveExpression	1 - pos		119456	1		-			
ANR	119676	PrimaryExpression	1		119456	0					
ANR	119677	Identifier	pos		119456	1					
ANR	119678	ExpressionStatement	"snprintf ( text + pos , len , ""%d"" , threadnum )"	80:4:1716:1756	119456	21	True				
ANR	119679	CallExpression	"snprintf ( text + pos , len , ""%d"" , threadnum )"		119456	0					
ANR	119680	Callee	snprintf		119456	0					
ANR	119681	Identifier	snprintf		119456	0					
ANR	119682	ArgumentList	text + pos		119456	1					
ANR	119683	Argument	text + pos		119456	0					
ANR	119684	AdditiveExpression	text + pos		119456	0		+			
ANR	119685	Identifier	text		119456	0					
ANR	119686	Identifier	pos		119456	1					
ANR	119687	Argument	len		119456	1					
ANR	119688	Identifier	len		119456	0					
ANR	119689	Argument	"""%d"""		119456	2					
ANR	119690	PrimaryExpression	"""%d"""		119456	0					
ANR	119691	Argument	threadnum		119456	3					
ANR	119692	Identifier	threadnum		119456	0					
ANR	119693	ExpressionStatement	"code = gsapi_new_instance ( & minst , & stdio )"	82:4:1763:1804	119456	22	True				
ANR	119694	AssignmentExpression	"code = gsapi_new_instance ( & minst , & stdio )"		119456	0		=			
ANR	119695	Identifier	code		119456	0					
ANR	119696	CallExpression	"gsapi_new_instance ( & minst , & stdio )"		119456	1					
ANR	119697	Callee	gsapi_new_instance		119456	0					
ANR	119698	Identifier	gsapi_new_instance		119456	0					
ANR	119699	ArgumentList	& minst		119456	1					
ANR	119700	Argument	& minst		119456	0					
ANR	119701	UnaryOperationExpression	& minst		119456	0					
ANR	119702	UnaryOperator	&		119456	0					
ANR	119703	Identifier	minst		119456	1					
ANR	119704	Argument	& stdio		119456	1					
ANR	119705	UnaryOperationExpression	& stdio		119456	0					
ANR	119706	UnaryOperator	&		119456	0					
ANR	119707	Identifier	stdio		119456	1					
ANR	119708	IfStatement	if ( code < 0 )		119456	23					
ANR	119709	Condition	code < 0	83:8:1814:1821	119456	0	True				
ANR	119710	RelationalExpression	code < 0		119456	0		<			
ANR	119711	Identifier	code		119456	0					
ANR	119712	PrimaryExpression	0		119456	1					
ANR	119713	CompoundStatement		36:4:941:941	119456	1					
ANR	119714	ExpressionStatement	"fprintf ( stdio . stderr , ""gsapi_new_instance failure in thread %d\\n"" , threadnum )"	85:8:1838:1915	119456	0	True				
ANR	119715	CallExpression	"fprintf ( stdio . stderr , ""gsapi_new_instance failure in thread %d\\n"" , threadnum )"		119456	0					
ANR	119716	Callee	fprintf		119456	0					
ANR	119717	Identifier	fprintf		119456	0					
ANR	119718	ArgumentList	stdio . stderr		119456	1					
ANR	119719	Argument	stdio . stderr		119456	0					
ANR	119720	MemberAccess	stdio . stderr		119456	0					
ANR	119721	Identifier	stdio		119456	0					
ANR	119722	Identifier	stderr		119456	1					
ANR	119723	Argument	"""gsapi_new_instance failure in thread %d\\n"""		119456	1					
ANR	119724	PrimaryExpression	"""gsapi_new_instance failure in thread %d\\n"""		119456	0					
ANR	119725	Argument	threadnum		119456	2					
ANR	119726	Identifier	threadnum		119456	0					
ANR	119727	ExpressionStatement	free ( gsargv )	86:8:1925:1937	119456	1	True				
ANR	119728	CallExpression	free ( gsargv )		119456	0					
ANR	119729	Callee	free		119456	0					
ANR	119730	Identifier	free		119456	0					
ANR	119731	ArgumentList	gsargv		119456	1					
ANR	119732	Argument	gsargv		119456	0					
ANR	119733	Identifier	gsargv		119456	0					
ANR	119734	ReturnStatement	return ( void * ) - 1 ;	87:8:1947:1964	119456	2	True				
ANR	119735	CastExpression	( void * ) - 1		119456	0					
ANR	119736	CastTarget	void *		119456	0					
ANR	119737	UnaryOperationExpression	- 1		119456	1					
ANR	119738	UnaryOperator	-		119456	0					
ANR	119739	PrimaryExpression	1		119456	1					
ANR	119740	ExpressionStatement	"gsapi_set_stdio ( minst , my_stdin , my_stdout , my_stderr )"	90:4:1977:2031	119456	24	True				
ANR	119741	CallExpression	"gsapi_set_stdio ( minst , my_stdin , my_stdout , my_stderr )"		119456	0					
ANR	119742	Callee	gsapi_set_stdio		119456	0					
ANR	119743	Identifier	gsapi_set_stdio		119456	0					
ANR	119744	ArgumentList	minst		119456	1					
ANR	119745	Argument	minst		119456	0					
ANR	119746	Identifier	minst		119456	0					
ANR	119747	Argument	my_stdin		119456	1					
ANR	119748	Identifier	my_stdin		119456	0					
ANR	119749	Argument	my_stdout		119456	2					
ANR	119750	Identifier	my_stdout		119456	0					
ANR	119751	Argument	my_stderr		119456	3					
ANR	119752	Identifier	my_stderr		119456	0					
ANR	119753	ExpressionStatement	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"	92:4:2038:2088	119456	25	True				
ANR	119754	AssignmentExpression	"code = gsapi_init_with_args ( minst , gsargc , gsargv )"		119456	0		=			
ANR	119755	Identifier	code		119456	0					
ANR	119756	CallExpression	"gsapi_init_with_args ( minst , gsargc , gsargv )"		119456	1					
ANR	119757	Callee	gsapi_init_with_args		119456	0					
ANR	119758	Identifier	gsapi_init_with_args		119456	0					
ANR	119759	ArgumentList	minst		119456	1					
ANR	119760	Argument	minst		119456	0					
ANR	119761	Identifier	minst		119456	0					
ANR	119762	Argument	gsargc		119456	1					
ANR	119763	Identifier	gsargc		119456	0					
ANR	119764	Argument	gsargv		119456	2					
ANR	119765	Identifier	gsargv		119456	0					
ANR	119766	ExpressionStatement	code1 = gsapi_exit ( minst )	93:4:2094:2119	119456	26	True				
ANR	119767	AssignmentExpression	code1 = gsapi_exit ( minst )		119456	0		=			
ANR	119768	Identifier	code1		119456	0					
ANR	119769	CallExpression	gsapi_exit ( minst )		119456	1					
ANR	119770	Callee	gsapi_exit		119456	0					
ANR	119771	Identifier	gsapi_exit		119456	0					
ANR	119772	ArgumentList	minst		119456	1					
ANR	119773	Argument	minst		119456	0					
ANR	119774	Identifier	minst		119456	0					
ANR	119775	IfStatement	if ( ( code == 0 ) || ( code == gs_error_Quit ) )		119456	27					
ANR	119776	Condition	( code == 0 ) || ( code == gs_error_Quit )	94:8:2129:2166	119456	0	True				
ANR	119777	OrExpression	( code == 0 ) || ( code == gs_error_Quit )		119456	0		||			
ANR	119778	EqualityExpression	code == 0		119456	0		==			
ANR	119779	Identifier	code		119456	0					
ANR	119780	PrimaryExpression	0		119456	1					
ANR	119781	EqualityExpression	code == gs_error_Quit		119456	1		==			
ANR	119782	Identifier	code		119456	0					
ANR	119783	Identifier	gs_error_Quit		119456	1					
ANR	119784	ExpressionStatement	code = code1	95:8:2177:2189	119456	1	True				
ANR	119785	AssignmentExpression	code = code1		119456	0		=			
ANR	119786	Identifier	code		119456	0					
ANR	119787	Identifier	code1		119456	1					
ANR	119788	ExpressionStatement	gsapi_delete_instance ( minst )	97:4:2196:2224	119456	28	True				
ANR	119789	CallExpression	gsapi_delete_instance ( minst )		119456	0					
ANR	119790	Callee	gsapi_delete_instance		119456	0					
ANR	119791	Identifier	gsapi_delete_instance		119456	0					
ANR	119792	ArgumentList	minst		119456	1					
ANR	119793	Argument	minst		119456	0					
ANR	119794	Identifier	minst		119456	0					
ANR	119795	ExpressionStatement	free ( gsargv )	99:4:2231:2243	119456	29	True				
ANR	119796	CallExpression	free ( gsargv )		119456	0					
ANR	119797	Callee	free		119456	0					
ANR	119798	Identifier	free		119456	0					
ANR	119799	ArgumentList	gsargv		119456	1					
ANR	119800	Argument	gsargv		119456	0					
ANR	119801	Identifier	gsargv		119456	0					
ANR	119802	IfStatement	if ( ( code == 0 ) || ( code == gs_error_Quit ) )		119456	30					
ANR	119803	Condition	( code == 0 ) || ( code == gs_error_Quit )	101:8:2254:2291	119456	0	True				
ANR	119804	OrExpression	( code == 0 ) || ( code == gs_error_Quit )		119456	0		||			
ANR	119805	EqualityExpression	code == 0		119456	0		==			
ANR	119806	Identifier	code		119456	0					
ANR	119807	PrimaryExpression	0		119456	1					
ANR	119808	EqualityExpression	code == gs_error_Quit		119456	1		==			
ANR	119809	Identifier	code		119456	0					
ANR	119810	Identifier	gs_error_Quit		119456	1					
ANR	119811	ReturnStatement	return ( void * ) 0 ;	102:8:2302:2318	119456	1	True				
ANR	119812	CastExpression	( void * ) 0		119456	0					
ANR	119813	CastTarget	void *		119456	0					
ANR	119814	PrimaryExpression	0		119456	1					
ANR	119815	ReturnStatement	return ( void * ) 1 ;	104:4:2325:2341	119456	31	True				
ANR	119816	CastExpression	( void * ) 1		119456	0					
ANR	119817	CastTarget	void *		119456	0					
ANR	119818	PrimaryExpression	1		119456	1					
ANR	119819	ReturnType	static void *		119456	1					
ANR	119820	Identifier	gs_main		119456	2					
ANR	119821	ParameterList	void * arg		119456	3					
ANR	119822	Parameter	void * arg	48:21:875:883	119456	0	True				
ANR	119823	ParameterType	void *		119456	0					
ANR	119824	Identifier	arg		119456	1					
ANR	119825	CFGEntryNode	ENTRY		119456		True				
ANR	119826	CFGExitNode	EXIT		119456		True				
ANR	119827	Symbol	& minst		119456						
ANR	119828	Symbol	minst		119456						
ANR	119829	Symbol	code		119456						
ANR	119830	Symbol	code1		119456						
ANR	119831	Symbol	stdio		119456						
ANR	119832	Symbol	* my_argv_file		119456						
ANR	119833	Symbol	my_stderr		119456						
ANR	119834	Symbol	* text		119456						
ANR	119835	Symbol	gsargv		119456						
ANR	119836	Symbol	gsapi_new_instance		119456						
ANR	119837	Symbol	stdio . stdout		119456						
ANR	119838	Symbol	strlen		119456						
ANR	119839	Symbol	len		119456						
ANR	119840	Symbol	* my_argv		119456						
ANR	119841	Symbol	pos		119456						
ANR	119842	Symbol	arg		119456						
ANR	119843	Symbol	gsapi_init_with_args		119456						
ANR	119844	Symbol	gp_fopen		119456						
ANR	119845	Symbol	text		119456						
ANR	119846	Symbol	& stdio		119456						
ANR	119847	Symbol	threadnum		119456						
ANR	119848	Symbol	gs_error_Quit		119456						
ANR	119849	Symbol	malloc		119456						
ANR	119850	Symbol	gsapi_exit		119456						
ANR	119851	Symbol	i		119456						
ANR	119852	Symbol	my_argc		119456						
ANR	119853	Symbol	my_stdin		119456						
ANR	119854	Symbol	my_stdout		119456						
ANR	119855	Symbol	stdio . stderr		119456						
ANR	119856	Symbol	my_argv_file		119456						
ANR	119857	Symbol	* i		119456						
ANR	119858	Symbol	my_argv		119456						
ANR	119859	Symbol	gsargc		119456						
ANR	119860	Symbol	* gsargv		119456						
ANR	119861	Function	main	107:0:2346:3180							
ANR	119862	FunctionDef	"main (int argc , char * argv [ ])"		119861	0					
ANR	119863	CompoundStatement		108:0:2379:3180	119861	0					
ANR	119864	IdentifierDeclStatement	int i ;	109:4:2385:2390	119861	0	True				
ANR	119865	IdentifierDecl	i		119861	0					
ANR	119866	IdentifierDeclType	int		119861	0					
ANR	119867	Identifier	i		119861	1					
ANR	119868	IdentifierDeclStatement	pthread_t thread [ NUM_THREADS ] ;	110:4:2396:2425	119861	1	True				
ANR	119869	IdentifierDecl	thread [ NUM_THREADS ]		119861	0					
ANR	119870	IdentifierDeclType	pthread_t [ NUM_THREADS ]		119861	0					
ANR	119871	Identifier	thread		119861	1					
ANR	119872	Identifier	NUM_THREADS		119861	2					
ANR	119873	ExpressionStatement	my_argc = argc	112:4:2432:2446	119861	2	True				
ANR	119874	AssignmentExpression	my_argc = argc		119861	0		=			
ANR	119875	Identifier	my_argc		119861	0					
ANR	119876	Identifier	argc		119861	1					
ANR	119877	ExpressionStatement	my_argv = argv	113:4:2452:2466	119861	3	True				
ANR	119878	AssignmentExpression	my_argv = argv		119861	0		=			
ANR	119879	Identifier	my_argv		119861	0					
ANR	119880	Identifier	argv		119861	1					
ANR	119881	ForStatement	for ( i = 0 ; i < argc ; i ++ )		119861	4					
ANR	119882	ForInit	i = 0 ;	115:9:2482:2485	119861	0	True				
ANR	119883	AssignmentExpression	i = 0		119861	0		=			
ANR	119884	Identifier	i		119861	0					
ANR	119885	PrimaryExpression	0		119861	1					
ANR	119886	Condition	i < argc	115:14:2487:2494	119861	1	True				
ANR	119887	RelationalExpression	i < argc		119861	0		<			
ANR	119888	Identifier	i		119861	0					
ANR	119889	Identifier	argc		119861	1					
ANR	119890	PostIncDecOperationExpression	i ++	115:24:2497:2499	119861	2	True				
ANR	119891	Identifier	i		119861	0					
ANR	119892	IncDec	++		119861	1					
ANR	119893	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-o"" ) )"		119861	3					
ANR	119894	Condition	"! strcmp ( argv [ i ] , ""-o"" )"	116:12:2514:2535	119861	0	True				
ANR	119895	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-o"" )"		119861	0					
ANR	119896	UnaryOperator	!		119861	0					
ANR	119897	CallExpression	"strcmp ( argv [ i ] , ""-o"" )"		119861	1					
ANR	119898	Callee	strcmp		119861	0					
ANR	119899	Identifier	strcmp		119861	0					
ANR	119900	ArgumentList	argv [ i ]		119861	1					
ANR	119901	Argument	argv [ i ]		119861	0					
ANR	119902	ArrayIndexing	argv [ i ]		119861	0					
ANR	119903	Identifier	argv		119861	0					
ANR	119904	Identifier	i		119861	1					
ANR	119905	Argument	"""-o"""		119861	1					
ANR	119906	PrimaryExpression	"""-o"""		119861	0					
ANR	119907	BreakStatement	break ;	117:12:2550:2555	119861	1	True				
ANR	119908	IfStatement	if ( i >= argc - 1 )		119861	5					
ANR	119909	Condition	i >= argc - 1	119:8:2570:2580	119861	0	True				
ANR	119910	RelationalExpression	i >= argc - 1		119861	0		>=			
ANR	119911	Identifier	i		119861	0					
ANR	119912	AdditiveExpression	argc - 1		119861	1		-			
ANR	119913	Identifier	argc		119861	0					
ANR	119914	PrimaryExpression	1		119861	1					
ANR	119915	CompoundStatement		13:4:207:207	119861	1					
ANR	119916	ExpressionStatement	"fprintf ( stderr , ""Expected a -o argument to rewrite!\\n"" )"	121:8:2597:2652	119861	0	True				
ANR	119917	CallExpression	"fprintf ( stderr , ""Expected a -o argument to rewrite!\\n"" )"		119861	0					
ANR	119918	Callee	fprintf		119861	0					
ANR	119919	Identifier	fprintf		119861	0					
ANR	119920	ArgumentList	stderr		119861	1					
ANR	119921	Argument	stderr		119861	0					
ANR	119922	Identifier	stderr		119861	0					
ANR	119923	Argument	"""Expected a -o argument to rewrite!\\n"""		119861	1					
ANR	119924	PrimaryExpression	"""Expected a -o argument to rewrite!\\n"""		119861	0					
ANR	119925	ExpressionStatement	exit ( EXIT_FAILURE )	122:8:2662:2680	119861	1	True				
ANR	119926	CallExpression	exit ( EXIT_FAILURE )		119861	0					
ANR	119927	Callee	exit		119861	0					
ANR	119928	Identifier	exit		119861	0					
ANR	119929	ArgumentList	EXIT_FAILURE		119861	1					
ANR	119930	Argument	EXIT_FAILURE		119861	0					
ANR	119931	Identifier	EXIT_FAILURE		119861	0					
ANR	119932	ExpressionStatement	my_argv_file = i + 1	124:4:2692:2710	119861	6	True				
ANR	119933	AssignmentExpression	my_argv_file = i + 1		119861	0		=			
ANR	119934	Identifier	my_argv_file		119861	0					
ANR	119935	AdditiveExpression	i + 1		119861	1		+			
ANR	119936	Identifier	i		119861	0					
ANR	119937	PrimaryExpression	1		119861	1					
ANR	119938	ForStatement	for ( i = 0 ; i < NUM_THREADS ; i ++ )		119861	7					
ANR	119939	ForInit	i = 0 ;	126:9:2722:2725	119861	0	True				
ANR	119940	AssignmentExpression	i = 0		119861	0		=			
ANR	119941	Identifier	i		119861	0					
ANR	119942	PrimaryExpression	0		119861	1					
ANR	119943	Condition	i < NUM_THREADS	126:14:2727:2741	119861	1	True				
ANR	119944	RelationalExpression	i < NUM_THREADS		119861	0		<			
ANR	119945	Identifier	i		119861	0					
ANR	119946	Identifier	NUM_THREADS		119861	1					
ANR	119947	PostIncDecOperationExpression	i ++	126:31:2744:2746	119861	2	True				
ANR	119948	Identifier	i		119861	0					
ANR	119949	IncDec	++		119861	1					
ANR	119950	CompoundStatement		20:4:373:373	119861	3					
ANR	119951	IfStatement	"if ( pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i ) != 0 )"		119861	0					
ANR	119952	Condition	"pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i ) != 0"	128:12:2767:2823	119861	0	True				
ANR	119953	EqualityExpression	"pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i ) != 0"		119861	0		!=			
ANR	119954	CallExpression	"pthread_create ( & thread [ i ] , NULL , gs_main , ( void * ) i )"		119861	0					
ANR	119955	Callee	pthread_create		119861	0					
ANR	119956	Identifier	pthread_create		119861	0					
ANR	119957	ArgumentList	& thread [ i ]		119861	1					
ANR	119958	Argument	& thread [ i ]		119861	0					
ANR	119959	UnaryOperationExpression	& thread [ i ]		119861	0					
ANR	119960	UnaryOperator	&		119861	0					
ANR	119961	ArrayIndexing	thread [ i ]		119861	1					
ANR	119962	Identifier	thread		119861	0					
ANR	119963	Identifier	i		119861	1					
ANR	119964	Argument	NULL		119861	1					
ANR	119965	Identifier	NULL		119861	0					
ANR	119966	Argument	gs_main		119861	2					
ANR	119967	Identifier	gs_main		119861	0					
ANR	119968	Argument	( void * ) i		119861	3					
ANR	119969	CastExpression	( void * ) i		119861	0					
ANR	119970	CastTarget	void *		119861	0					
ANR	119971	Identifier	i		119861	1					
ANR	119972	PrimaryExpression	0		119861	1					
ANR	119973	CompoundStatement		22:8:454:454	119861	1					
ANR	119974	ExpressionStatement	"fprintf ( stderr , ""Thread %d creation failed\\n"" , i )"	130:12:2848:2897	119861	0	True				
ANR	119975	CallExpression	"fprintf ( stderr , ""Thread %d creation failed\\n"" , i )"		119861	0					
ANR	119976	Callee	fprintf		119861	0					
ANR	119977	Identifier	fprintf		119861	0					
ANR	119978	ArgumentList	stderr		119861	1					
ANR	119979	Argument	stderr		119861	0					
ANR	119980	Identifier	stderr		119861	0					
ANR	119981	Argument	"""Thread %d creation failed\\n"""		119861	1					
ANR	119982	PrimaryExpression	"""Thread %d creation failed\\n"""		119861	0					
ANR	119983	Argument	i		119861	2					
ANR	119984	Identifier	i		119861	0					
ANR	119985	ExpressionStatement	exit ( EXIT_FAILURE )	131:12:2911:2929	119861	1	True				
ANR	119986	CallExpression	exit ( EXIT_FAILURE )		119861	0					
ANR	119987	Callee	exit		119861	0					
ANR	119988	Identifier	exit		119861	0					
ANR	119989	ArgumentList	EXIT_FAILURE		119861	1					
ANR	119990	Argument	EXIT_FAILURE		119861	0					
ANR	119991	Identifier	EXIT_FAILURE		119861	0					
ANR	119992	ForStatement	for ( i = 0 ; i < NUM_THREADS ; i ++ )		119861	8					
ANR	119993	ForInit	i = 0 ;	135:9:2957:2960	119861	0	True				
ANR	119994	AssignmentExpression	i = 0		119861	0		=			
ANR	119995	Identifier	i		119861	0					
ANR	119996	PrimaryExpression	0		119861	1					
ANR	119997	Condition	i < NUM_THREADS	135:14:2962:2976	119861	1	True				
ANR	119998	RelationalExpression	i < NUM_THREADS		119861	0		<			
ANR	119999	Identifier	i		119861	0					
ANR	120000	Identifier	NUM_THREADS		119861	1					
ANR	120001	PostIncDecOperationExpression	i ++	135:31:2979:2981	119861	2	True				
ANR	120002	Identifier	i		119861	0					
ANR	120003	IncDec	++		119861	1					
ANR	120004	CompoundStatement		29:4:608:608	119861	3					
ANR	120005	IfStatement	"if ( pthread_join ( thread [ i ] , NULL ) != 0 )"		119861	0					
ANR	120006	Condition	"pthread_join ( thread [ i ] , NULL ) != 0"	137:12:3002:3035	119861	0	True				
ANR	120007	EqualityExpression	"pthread_join ( thread [ i ] , NULL ) != 0"		119861	0		!=			
ANR	120008	CallExpression	"pthread_join ( thread [ i ] , NULL )"		119861	0					
ANR	120009	Callee	pthread_join		119861	0					
ANR	120010	Identifier	pthread_join		119861	0					
ANR	120011	ArgumentList	thread [ i ]		119861	1					
ANR	120012	Argument	thread [ i ]		119861	0					
ANR	120013	ArrayIndexing	thread [ i ]		119861	0					
ANR	120014	Identifier	thread		119861	0					
ANR	120015	Identifier	i		119861	1					
ANR	120016	Argument	NULL		119861	1					
ANR	120017	Identifier	NULL		119861	0					
ANR	120018	PrimaryExpression	0		119861	1					
ANR	120019	CompoundStatement		31:8:666:666	119861	1					
ANR	120020	ExpressionStatement	"fprintf ( stderr , ""Thread %d join failed\\n"" , i )"	139:12:3060:3105	119861	0	True				
ANR	120021	CallExpression	"fprintf ( stderr , ""Thread %d join failed\\n"" , i )"		119861	0					
ANR	120022	Callee	fprintf		119861	0					
ANR	120023	Identifier	fprintf		119861	0					
ANR	120024	ArgumentList	stderr		119861	1					
ANR	120025	Argument	stderr		119861	0					
ANR	120026	Identifier	stderr		119861	0					
ANR	120027	Argument	"""Thread %d join failed\\n"""		119861	1					
ANR	120028	PrimaryExpression	"""Thread %d join failed\\n"""		119861	0					
ANR	120029	Argument	i		119861	2					
ANR	120030	Identifier	i		119861	0					
ANR	120031	ExpressionStatement	exit ( EXIT_FAILURE )	140:12:3119:3137	119861	1	True				
ANR	120032	CallExpression	exit ( EXIT_FAILURE )		119861	0					
ANR	120033	Callee	exit		119861	0					
ANR	120034	Identifier	exit		119861	0					
ANR	120035	ArgumentList	EXIT_FAILURE		119861	1					
ANR	120036	Argument	EXIT_FAILURE		119861	0					
ANR	120037	Identifier	EXIT_FAILURE		119861	0					
ANR	120038	ReturnStatement	return EXIT_SUCCESS ;	143:4:3159:3178	119861	9	True				
ANR	120039	Identifier	EXIT_SUCCESS		119861	0					
ANR	120040	ReturnType	int		119861	1					
ANR	120041	Identifier	main		119861	2					
ANR	120042	ParameterList	"int argc , char * argv [ ]"		119861	3					
ANR	120043	Parameter	int argc	107:9:2355:2362	119861	0	True				
ANR	120044	ParameterType	int		119861	0					
ANR	120045	Identifier	argc		119861	1					
ANR	120046	Parameter	char * argv [ ]	107:19:2365:2376	119861	1	True				
ANR	120047	ParameterType	char * [ ]		119861	0					
ANR	120048	Identifier	argv		119861	1					
ANR	120049	CFGEntryNode	ENTRY		119861		True				
ANR	120050	CFGExitNode	EXIT		119861		True				
ANR	120051	Symbol	argc		119861						
ANR	120052	Symbol	strcmp		119861						
ANR	120053	Symbol	gs_main		119861						
ANR	120054	Symbol	pthread_join		119861						
ANR	120055	Symbol	NULL		119861						
ANR	120056	Symbol	i		119861						
ANR	120057	Symbol	my_argc		119861						
ANR	120058	Symbol	* argv		119861						
ANR	120059	Symbol	thread		119861						
ANR	120060	Symbol	stderr		119861						
ANR	120061	Symbol	argv		119861						
ANR	120062	Symbol	my_argv_file		119861						
ANR	120063	Symbol	NUM_THREADS		119861						
ANR	120064	Symbol	* i		119861						
ANR	120065	Symbol	EXIT_FAILURE		119861						
ANR	120066	Symbol	EXIT_SUCCESS		119861						
ANR	120067	Symbol	my_argv		119861						
ANR	120068	Symbol	* thread		119861						
ANR	120069	Symbol	pthread_create		119861						
