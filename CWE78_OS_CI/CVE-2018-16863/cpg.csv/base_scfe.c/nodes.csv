command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1357791	File	data/converged/CVE-2018-16863_ghostpdl/base_scfe.c								
ANR	1357792	ClassDef	stats_runs_s	31:8:872:958							
ANR	1357793	DeclStmt									
ANR	1357794	Decl							ulong	ulong [ 64 ]	termination
ANR	1357795	DeclStmt									
ANR	1357796	Decl							ulong	ulong [ 41 ]	make_up
ANR	1357797	DeclStmt									
ANR	1357798	Decl							stats_runs_s	stats_runs_s	stats_runs_t
ANR	1357799	DeclStmt									
ANR	1357800	Decl							stats_runs_t	stats_runs_t	stats_white_runs
ANR	1357801	Decl							stats_runs_t	stats_runs_t	stats_black_runs
ANR	1357802	Function	print_run_stats	39:0:1056:1525							
ANR	1357803	FunctionDef	"print_run_stats (const gs_memory_t * mem , const stats_runs_t * stats)"		1357802	0					
ANR	1357804	CompoundStatement		41:0:1136:1525	1357802	0					
ANR	1357805	IdentifierDeclStatement	int i ;	42:4:1142:1147	1357802	0	True				
ANR	1357806	IdentifierDecl	i		1357802	0					
ANR	1357807	IdentifierDeclType	int		1357802	0					
ANR	1357808	Identifier	i		1357802	1					
ANR	1357809	IdentifierDeclStatement	ulong total ;	43:4:1153:1164	1357802	1	True				
ANR	1357810	IdentifierDecl	total		1357802	0					
ANR	1357811	IdentifierDeclType	ulong		1357802	0					
ANR	1357812	Identifier	total		1357802	1					
ANR	1357813	ForStatement	"for ( i = 0 , total = 0 ; i < 41 ; i ++ )"		1357802	2					
ANR	1357814	ForInit	"i = 0 , total = 0 ;"	45:9:1176:1192	1357802	0	True				
ANR	1357815	Expression	"i = 0 , total = 0"		1357802	0					
ANR	1357816	AssignmentExpression	i = 0		1357802	0		=			
ANR	1357817	Identifier	i		1357802	0					
ANR	1357818	PrimaryExpression	0		1357802	1					
ANR	1357819	AssignmentExpression	total = 0		1357802	1		=			
ANR	1357820	Identifier	total		1357802	0					
ANR	1357821	PrimaryExpression	0		1357802	1					
ANR	1357822	Condition	i < 41	45:27:1194:1199	1357802	1	True				
ANR	1357823	RelationalExpression	i < 41		1357802	0		<			
ANR	1357824	Identifier	i		1357802	0					
ANR	1357825	PrimaryExpression	41		1357802	1					
ANR	1357826	PostIncDecOperationExpression	i ++	45:35:1202:1204	1357802	2	True				
ANR	1357827	Identifier	i		1357802	0					
ANR	1357828	IncDec	++		1357802	1					
ANR	1357829	ExpressionStatement	"dmprintf1 ( mem , "" %lu"" , stats -> make_up [ i ] ) , total += stats -> make_up [ i ]"	46:8:1215:1296	1357802	3	True				
ANR	1357830	Expression	"dmprintf1 ( mem , "" %lu"" , stats -> make_up [ i ] ) , total += stats -> make_up [ i ]"		1357802	0					
ANR	1357831	CallExpression	"dmprintf1 ( mem , "" %lu"" , stats -> make_up [ i ] )"		1357802	0					
ANR	1357832	Callee	dmprintf1		1357802	0					
ANR	1357833	Identifier	dmprintf1		1357802	0					
ANR	1357834	ArgumentList	mem		1357802	1					
ANR	1357835	Argument	mem		1357802	0					
ANR	1357836	Identifier	mem		1357802	0					
ANR	1357837	Argument	""" %lu"""		1357802	1					
ANR	1357838	PrimaryExpression	""" %lu"""		1357802	0					
ANR	1357839	Argument	stats -> make_up [ i ]		1357802	2					
ANR	1357840	ArrayIndexing	stats -> make_up [ i ]		1357802	0					
ANR	1357841	PtrMemberAccess	stats -> make_up		1357802	0					
ANR	1357842	Identifier	stats		1357802	0					
ANR	1357843	Identifier	make_up		1357802	1					
ANR	1357844	Identifier	i		1357802	1					
ANR	1357845	AssignmentExpression	total += stats -> make_up [ i ]		1357802	1		+=			
ANR	1357846	Identifier	total		1357802	0					
ANR	1357847	ArrayIndexing	stats -> make_up [ i ]		1357802	1					
ANR	1357848	PtrMemberAccess	stats -> make_up		1357802	0					
ANR	1357849	Identifier	stats		1357802	0					
ANR	1357850	Identifier	make_up		1357802	1					
ANR	1357851	Identifier	i		1357802	1					
ANR	1357852	ExpressionStatement	"dmprintf1 ( mem , "" total=%lu\\n\\t"" , total )"	48:4:1302:1341	1357802	3	True				
ANR	1357853	CallExpression	"dmprintf1 ( mem , "" total=%lu\\n\\t"" , total )"		1357802	0					
ANR	1357854	Callee	dmprintf1		1357802	0					
ANR	1357855	Identifier	dmprintf1		1357802	0					
ANR	1357856	ArgumentList	mem		1357802	1					
ANR	1357857	Argument	mem		1357802	0					
ANR	1357858	Identifier	mem		1357802	0					
ANR	1357859	Argument	""" total=%lu\\n\\t"""		1357802	1					
ANR	1357860	PrimaryExpression	""" total=%lu\\n\\t"""		1357802	0					
ANR	1357861	Argument	total		1357802	2					
ANR	1357862	Identifier	total		1357802	0					
ANR	1357863	ForStatement	"for ( i = 0 , total = 0 ; i < 64 ; i ++ )"		1357802	4					
ANR	1357864	ForInit	"i = 0 , total = 0 ;"	49:9:1352:1368	1357802	0	True				
ANR	1357865	Expression	"i = 0 , total = 0"		1357802	0					
ANR	1357866	AssignmentExpression	i = 0		1357802	0		=			
ANR	1357867	Identifier	i		1357802	0					
ANR	1357868	PrimaryExpression	0		1357802	1					
ANR	1357869	AssignmentExpression	total = 0		1357802	1		=			
ANR	1357870	Identifier	total		1357802	0					
ANR	1357871	PrimaryExpression	0		1357802	1					
ANR	1357872	Condition	i < 64	49:27:1370:1375	1357802	1	True				
ANR	1357873	RelationalExpression	i < 64		1357802	0		<			
ANR	1357874	Identifier	i		1357802	0					
ANR	1357875	PrimaryExpression	64		1357802	1					
ANR	1357876	PostIncDecOperationExpression	i ++	49:35:1378:1380	1357802	2	True				
ANR	1357877	Identifier	i		1357802	0					
ANR	1357878	IncDec	++		1357802	1					
ANR	1357879	ExpressionStatement	"dmprintf1 ( mem , "" %lu"" , stats -> termination [ i ] ) , total += stats -> termination [ i ]"	50:8:1391:1480	1357802	3	True				
ANR	1357880	Expression	"dmprintf1 ( mem , "" %lu"" , stats -> termination [ i ] ) , total += stats -> termination [ i ]"		1357802	0					
ANR	1357881	CallExpression	"dmprintf1 ( mem , "" %lu"" , stats -> termination [ i ] )"		1357802	0					
ANR	1357882	Callee	dmprintf1		1357802	0					
ANR	1357883	Identifier	dmprintf1		1357802	0					
ANR	1357884	ArgumentList	mem		1357802	1					
ANR	1357885	Argument	mem		1357802	0					
ANR	1357886	Identifier	mem		1357802	0					
ANR	1357887	Argument	""" %lu"""		1357802	1					
ANR	1357888	PrimaryExpression	""" %lu"""		1357802	0					
ANR	1357889	Argument	stats -> termination [ i ]		1357802	2					
ANR	1357890	ArrayIndexing	stats -> termination [ i ]		1357802	0					
ANR	1357891	PtrMemberAccess	stats -> termination		1357802	0					
ANR	1357892	Identifier	stats		1357802	0					
ANR	1357893	Identifier	termination		1357802	1					
ANR	1357894	Identifier	i		1357802	1					
ANR	1357895	AssignmentExpression	total += stats -> termination [ i ]		1357802	1		+=			
ANR	1357896	Identifier	total		1357802	0					
ANR	1357897	ArrayIndexing	stats -> termination [ i ]		1357802	1					
ANR	1357898	PtrMemberAccess	stats -> termination		1357802	0					
ANR	1357899	Identifier	stats		1357802	0					
ANR	1357900	Identifier	termination		1357802	1					
ANR	1357901	Identifier	i		1357802	1					
ANR	1357902	ExpressionStatement	"dmprintf1 ( mem , "" total=%lu\\n"" , total )"	52:4:1486:1523	1357802	5	True				
ANR	1357903	CallExpression	"dmprintf1 ( mem , "" total=%lu\\n"" , total )"		1357802	0					
ANR	1357904	Callee	dmprintf1		1357802	0					
ANR	1357905	Identifier	dmprintf1		1357802	0					
ANR	1357906	ArgumentList	mem		1357802	1					
ANR	1357907	Argument	mem		1357802	0					
ANR	1357908	Identifier	mem		1357802	0					
ANR	1357909	Argument	""" total=%lu\\n"""		1357802	1					
ANR	1357910	PrimaryExpression	""" total=%lu\\n"""		1357802	0					
ANR	1357911	Argument	total		1357802	2					
ANR	1357912	Identifier	total		1357802	0					
ANR	1357913	ReturnType	static void		1357802	1					
ANR	1357914	Identifier	print_run_stats		1357802	2					
ANR	1357915	ParameterList	"const gs_memory_t * mem , const stats_runs_t * stats"		1357802	3					
ANR	1357916	Parameter	const gs_memory_t * mem	40:16:1084:1105	1357802	0	True				
ANR	1357917	ParameterType	const gs_memory_t *		1357802	0					
ANR	1357918	Identifier	mem		1357802	1					
ANR	1357919	Parameter	const stats_runs_t * stats	40:40:1108:1133	1357802	1	True				
ANR	1357920	ParameterType	const stats_runs_t *		1357802	0					
ANR	1357921	Identifier	stats		1357802	1					
ANR	1357922	CFGEntryNode	ENTRY		1357802		True				
ANR	1357923	CFGExitNode	EXIT		1357802		True				
ANR	1357924	Symbol	total		1357802						
ANR	1357925	Symbol	* stats		1357802						
ANR	1357926	Symbol	* i		1357802						
ANR	1357927	Symbol	mem		1357802						
ANR	1357928	Symbol	stats		1357802						
ANR	1357929	Symbol	* stats -> termination		1357802						
ANR	1357930	Symbol	* * stats		1357802						
ANR	1357931	Symbol	i		1357802						
ANR	1357932	Symbol	stats -> termination		1357802						
ANR	1357933	Symbol	stats -> make_up		1357802						
ANR	1357934	Symbol	* stats -> make_up		1357802						
ANR	1357935	DeclStmt									
ANR	1357936	Decl							BEGIN cfe_run	BEGIN cfe_run	rr
ANR	1357937	Function	cf_put_long_run	79:0:2067:2725							
ANR	1357938	FunctionDef	"cf_put_long_run (stream_CFE_state * ss , byte * q , int lenv , const cf_runs * prt)"		1357937	0					
ANR	1357939	CompoundStatement		81:0:2161:2725	1357937	0					
ANR	1357940	ExpressionStatement	hce_declare_state	82:4:2167:2184	1357937	0	True				
ANR	1357941	Identifier	hce_declare_state		1357937	0					
ANR	1357942	IdentifierDeclStatement	cfe_run rr ;	83:4:2190:2200	1357937	1	True				
ANR	1357943	IdentifierDecl	rr		1357937	0					
ANR	1357944	IdentifierDeclType	cfe_run		1357937	0					
ANR	1357945	Identifier	rr		1357937	1					
ANR	1357946	IdentifierDeclStatement	stats_runs_t * pstats = ( prt == & cf_white_runs ? & stats_white_runs : & stats_black_runs ) ;	86:4:2253:2343	1357937	2	True				
ANR	1357947	IdentifierDecl	* pstats = ( prt == & cf_white_runs ? & stats_white_runs : & stats_black_runs )		1357937	0					
ANR	1357948	IdentifierDeclType	stats_runs_t *		1357937	0					
ANR	1357949	Identifier	pstats		1357937	1					
ANR	1357950	AssignmentExpression	* pstats = ( prt == & cf_white_runs ? & stats_white_runs : & stats_black_runs )		1357937	2		=			
ANR	1357951	Identifier	pstats		1357937	0					
ANR	1357952	ConditionalExpression	prt == & cf_white_runs ? & stats_white_runs : & stats_black_runs		1357937	1					
ANR	1357953	Condition	prt == & cf_white_runs		1357937	0					
ANR	1357954	EqualityExpression	prt == & cf_white_runs		1357937	0		==			
ANR	1357955	Identifier	prt		1357937	0					
ANR	1357956	UnaryOperationExpression	& cf_white_runs		1357937	1					
ANR	1357957	UnaryOperator	&		1357937	0					
ANR	1357958	Identifier	cf_white_runs		1357937	1					
ANR	1357959	UnaryOperationExpression	& stats_white_runs		1357937	1					
ANR	1357960	UnaryOperator	&		1357937	0					
ANR	1357961	Identifier	stats_white_runs		1357937	1					
ANR	1357962	UnaryOperationExpression	& stats_black_runs		1357937	2					
ANR	1357963	UnaryOperator	&		1357937	0					
ANR	1357964	Identifier	stats_black_runs		1357937	1					
ANR	1357965	ExpressionStatement	hce_load_state ( )	91:4:2358:2374	1357937	3	True				
ANR	1357966	CallExpression	hce_load_state ( )		1357937	0					
ANR	1357967	Callee	hce_load_state		1357937	0					
ANR	1357968	Identifier	hce_load_state		1357937	0					
ANR	1357969	ArgumentList			1357937	1					
ANR	1357970	WhileStatement	while ( lenv >= 2560 + 64 )		1357937	4					
ANR	1357971	Condition	lenv >= 2560 + 64	92:11:2387:2403	1357937	0	True				
ANR	1357972	RelationalExpression	lenv >= 2560 + 64		1357937	0		>=			
ANR	1357973	Identifier	lenv		1357937	0					
ANR	1357974	AdditiveExpression	2560 + 64		1357937	1		+			
ANR	1357975	PrimaryExpression	2560		1357937	0					
ANR	1357976	PrimaryExpression	64		1357937	1					
ANR	1357977	CompoundStatement		12:30:244:244	1357937	1					
ANR	1357978	ExpressionStatement	rr = prt -> make_up [ 40 ]	93:8:2416:2437	1357937	0	True				
ANR	1357979	AssignmentExpression	rr = prt -> make_up [ 40 ]		1357937	0		=			
ANR	1357980	Identifier	rr		1357937	0					
ANR	1357981	ArrayIndexing	prt -> make_up [ 40 ]		1357937	1					
ANR	1357982	PtrMemberAccess	prt -> make_up		1357937	0					
ANR	1357983	Identifier	prt		1357937	0					
ANR	1357984	Identifier	make_up		1357937	1					
ANR	1357985	PrimaryExpression	40		1357937	1					
ANR	1357986	ExpressionStatement	"COUNT_RUN ( pstats -> make_up , 40 )"	94:8:2447:2477	1357937	1	True				
ANR	1357987	CallExpression	"COUNT_RUN ( pstats -> make_up , 40 )"		1357937	0					
ANR	1357988	Callee	COUNT_RUN		1357937	0					
ANR	1357989	Identifier	COUNT_RUN		1357937	0					
ANR	1357990	ArgumentList	pstats -> make_up		1357937	1					
ANR	1357991	Argument	pstats -> make_up		1357937	0					
ANR	1357992	PtrMemberAccess	pstats -> make_up		1357937	0					
ANR	1357993	Identifier	pstats		1357937	0					
ANR	1357994	Identifier	make_up		1357937	1					
ANR	1357995	Argument	40		1357937	1					
ANR	1357996	PrimaryExpression	40		1357937	0					
ANR	1357997	ExpressionStatement	"hc_put_value ( ss , q , rr . code , rr . code_length )"	95:8:2487:2531	1357937	2	True				
ANR	1357998	CallExpression	"hc_put_value ( ss , q , rr . code , rr . code_length )"		1357937	0					
ANR	1357999	Callee	hc_put_value		1357937	0					
ANR	1358000	Identifier	hc_put_value		1357937	0					
ANR	1358001	ArgumentList	ss		1357937	1					
ANR	1358002	Argument	ss		1357937	0					
ANR	1358003	Identifier	ss		1357937	0					
ANR	1358004	Argument	q		1357937	1					
ANR	1358005	Identifier	q		1357937	0					
ANR	1358006	Argument	rr . code		1357937	2					
ANR	1358007	MemberAccess	rr . code		1357937	0					
ANR	1358008	Identifier	rr		1357937	0					
ANR	1358009	Identifier	code		1357937	1					
ANR	1358010	Argument	rr . code_length		1357937	3					
ANR	1358011	MemberAccess	rr . code_length		1357937	0					
ANR	1358012	Identifier	rr		1357937	0					
ANR	1358013	Identifier	code_length		1357937	1					
ANR	1358014	ExpressionStatement	lenv -= 2560	96:8:2541:2553	1357937	3	True				
ANR	1358015	AssignmentExpression	lenv -= 2560		1357937	0		-=			
ANR	1358016	Identifier	lenv		1357937	0					
ANR	1358017	PrimaryExpression	2560		1357937	1					
ANR	1358018	ExpressionStatement	rr = prt -> make_up [ lenv >> 6 ]	98:4:2565:2593	1357937	5	True				
ANR	1358019	AssignmentExpression	rr = prt -> make_up [ lenv >> 6 ]		1357937	0		=			
ANR	1358020	Identifier	rr		1357937	0					
ANR	1358021	ArrayIndexing	prt -> make_up [ lenv >> 6 ]		1357937	1					
ANR	1358022	PtrMemberAccess	prt -> make_up		1357937	0					
ANR	1358023	Identifier	prt		1357937	0					
ANR	1358024	Identifier	make_up		1357937	1					
ANR	1358025	ShiftExpression	lenv >> 6		1357937	1		>>			
ANR	1358026	Identifier	lenv		1357937	0					
ANR	1358027	PrimaryExpression	6		1357937	1					
ANR	1358028	ExpressionStatement	"COUNT_RUN ( pstats -> make_up , lenv >> 6 )"	99:4:2599:2636	1357937	6	True				
ANR	1358029	CallExpression	"COUNT_RUN ( pstats -> make_up , lenv >> 6 )"		1357937	0					
ANR	1358030	Callee	COUNT_RUN		1357937	0					
ANR	1358031	Identifier	COUNT_RUN		1357937	0					
ANR	1358032	ArgumentList	pstats -> make_up		1357937	1					
ANR	1358033	Argument	pstats -> make_up		1357937	0					
ANR	1358034	PtrMemberAccess	pstats -> make_up		1357937	0					
ANR	1358035	Identifier	pstats		1357937	0					
ANR	1358036	Identifier	make_up		1357937	1					
ANR	1358037	Argument	lenv >> 6		1357937	1					
ANR	1358038	ShiftExpression	lenv >> 6		1357937	0		>>			
ANR	1358039	Identifier	lenv		1357937	0					
ANR	1358040	PrimaryExpression	6		1357937	1					
ANR	1358041	ExpressionStatement	"hc_put_value ( ss , q , rr . code , rr . code_length )"	100:4:2642:2686	1357937	7	True				
ANR	1358042	CallExpression	"hc_put_value ( ss , q , rr . code , rr . code_length )"		1357937	0					
ANR	1358043	Callee	hc_put_value		1357937	0					
ANR	1358044	Identifier	hc_put_value		1357937	0					
ANR	1358045	ArgumentList	ss		1357937	1					
ANR	1358046	Argument	ss		1357937	0					
ANR	1358047	Identifier	ss		1357937	0					
ANR	1358048	Argument	q		1357937	1					
ANR	1358049	Identifier	q		1357937	0					
ANR	1358050	Argument	rr . code		1357937	2					
ANR	1358051	MemberAccess	rr . code		1357937	0					
ANR	1358052	Identifier	rr		1357937	0					
ANR	1358053	Identifier	code		1357937	1					
ANR	1358054	Argument	rr . code_length		1357937	3					
ANR	1358055	MemberAccess	rr . code_length		1357937	0					
ANR	1358056	Identifier	rr		1357937	0					
ANR	1358057	Identifier	code_length		1357937	1					
ANR	1358058	ExpressionStatement	hce_store_state ( )	101:4:2692:2709	1357937	8	True				
ANR	1358059	CallExpression	hce_store_state ( )		1357937	0					
ANR	1358060	Callee	hce_store_state		1357937	0					
ANR	1358061	Identifier	hce_store_state		1357937	0					
ANR	1358062	ArgumentList			1357937	1					
ANR	1358063	ReturnStatement	return q ;	102:4:2715:2723	1357937	9	True				
ANR	1358064	Identifier	q		1357937	0					
ANR	1358065	ReturnType	static byte *		1357937	1					
ANR	1358066	Identifier	cf_put_long_run		1357937	2					
ANR	1358067	ParameterList	"stream_CFE_state * ss , byte * q , int lenv , const cf_runs * prt"		1357937	3					
ANR	1358068	Parameter	stream_CFE_state * ss	80:16:2097:2117	1357937	0	True				
ANR	1358069	ParameterType	stream_CFE_state *		1357937	0					
ANR	1358070	Identifier	ss		1357937	1					
ANR	1358071	Parameter	byte * q	80:39:2120:2127	1357937	1	True				
ANR	1358072	ParameterType	byte *		1357937	0					
ANR	1358073	Identifier	q		1357937	1					
ANR	1358074	Parameter	int lenv	80:49:2130:2137	1357937	2	True				
ANR	1358075	ParameterType	int		1357937	0					
ANR	1358076	Identifier	lenv		1357937	1					
ANR	1358077	Parameter	const cf_runs * prt	80:59:2140:2158	1357937	3	True				
ANR	1358078	ParameterType	const cf_runs *		1357937	0					
ANR	1358079	Identifier	prt		1357937	1					
ANR	1358080	CFGEntryNode	ENTRY		1357937		True				
ANR	1358081	CFGExitNode	EXIT		1357937		True				
ANR	1358082	Symbol	ss		1357937						
ANR	1358083	Symbol	rr		1357937						
ANR	1358084	Symbol	& cf_white_runs		1357937						
ANR	1358085	Symbol	& stats_black_runs		1357937						
ANR	1358086	Symbol	pstats		1357937						
ANR	1358087	Symbol	* * prt		1357937						
ANR	1358088	Symbol	* pstats		1357937						
ANR	1358089	Symbol	rr . code		1357937						
ANR	1358090	Symbol	& stats_white_runs		1357937						
ANR	1358091	Symbol	q		1357937						
ANR	1358092	Symbol	* prt -> make_up		1357937						
ANR	1358093	Symbol	lenv		1357937						
ANR	1358094	Symbol	prt		1357937						
ANR	1358095	Symbol	prt -> make_up		1357937						
ANR	1358096	Symbol	* lenv		1357937						
ANR	1358097	Symbol	rr . code_length		1357937						
ANR	1358098	Symbol	* prt		1357937						
ANR	1358099	Symbol	pstats -> make_up		1357937						
ANR	1358100	DeclStmt									
ANR	1358101	Decl							void	void ( stream_state * )	s_CFE_release
ANR	1358102	Function	s_CFE_set_defaults	118:0:3055:3210							
ANR	1358103	FunctionDef	s_CFE_set_defaults (register stream_state * st)		1358102	0					
ANR	1358104	CompoundStatement		120:0:3114:3210	1358102	0					
ANR	1358105	Statement	stream_CFE_state	121:4:3120:3135	1358102	0	True				
ANR	1358106	Statement	*	121:21:3137:3137	1358102	1	True				
ANR	1358107	Statement	const	121:22:3138:3142	1358102	2	True				
ANR	1358108	ExpressionStatement	ss = ( stream_CFE_state * ) st	121:28:3144:3172	1358102	3	True				
ANR	1358109	AssignmentExpression	ss = ( stream_CFE_state * ) st		1358102	0		=			
ANR	1358110	Identifier	ss		1358102	0					
ANR	1358111	CastExpression	( stream_CFE_state * ) st		1358102	1					
ANR	1358112	CastTarget	stream_CFE_state *		1358102	0					
ANR	1358113	Identifier	st		1358102	1					
ANR	1358114	ExpressionStatement	s_CFE_set_defaults_inline ( ss )	123:4:3179:3208	1358102	4	True				
ANR	1358115	CallExpression	s_CFE_set_defaults_inline ( ss )		1358102	0					
ANR	1358116	Callee	s_CFE_set_defaults_inline		1358102	0					
ANR	1358117	Identifier	s_CFE_set_defaults_inline		1358102	0					
ANR	1358118	ArgumentList	ss		1358102	1					
ANR	1358119	Argument	ss		1358102	0					
ANR	1358120	Identifier	ss		1358102	0					
ANR	1358121	ReturnType	static void		1358102	1					
ANR	1358122	Identifier	s_CFE_set_defaults		1358102	2					
ANR	1358123	ParameterList	register stream_state * st		1358102	3					
ANR	1358124	Parameter	register stream_state * st	119:19:3086:3111	1358102	0	True				
ANR	1358125	ParameterType	register stream_state *		1358102	0					
ANR	1358126	Identifier	st		1358102	1					
ANR	1358127	CFGEntryNode	ENTRY		1358102		True				
ANR	1358128	CFGExitNode	EXIT		1358102		True				
ANR	1358129	Symbol	ss		1358102						
ANR	1358130	Symbol	st		1358102						
ANR	1358131	Function	s_CFE_init	127:0:3252:5382							
ANR	1358132	FunctionDef	s_CFE_init (register stream_state * st)		1358131	0					
ANR	1358133	CompoundStatement		129:0:3302:5382	1358131	0					
ANR	1358134	Statement	stream_CFE_state	130:4:3308:3323	1358131	0	True				
ANR	1358135	Statement	*	130:21:3325:3325	1358131	1	True				
ANR	1358136	Statement	const	130:22:3326:3330	1358131	2	True				
ANR	1358137	ExpressionStatement	ss = ( stream_CFE_state * ) st	130:28:3332:3360	1358131	3	True				
ANR	1358138	AssignmentExpression	ss = ( stream_CFE_state * ) st		1358131	0		=			
ANR	1358139	Identifier	ss		1358131	0					
ANR	1358140	CastExpression	( stream_CFE_state * ) st		1358131	1					
ANR	1358141	CastTarget	stream_CFE_state *		1358131	0					
ANR	1358142	Identifier	st		1358131	1					
ANR	1358143	IdentifierDeclStatement	int columns = ss -> Columns ;	131:4:3366:3391	1358131	4	True				
ANR	1358144	IdentifierDecl	columns = ss -> Columns		1358131	0					
ANR	1358145	IdentifierDeclType	int		1358131	0					
ANR	1358146	Identifier	columns		1358131	1					
ANR	1358147	AssignmentExpression	columns = ss -> Columns		1358131	2		=			
ANR	1358148	Identifier	columns		1358131	0					
ANR	1358149	PtrMemberAccess	ss -> Columns		1358131	1					
ANR	1358150	Identifier	ss		1358131	0					
ANR	1358151	Identifier	Columns		1358131	1					
ANR	1358152	IdentifierDeclStatement	int code_bytes = ( ( ( columns * ( ss -> K == 0 ? 9 : 14 ) ) + 15 ) >> 4 ) + 20 ;	141:4:3842:3915	1358131	5	True				
ANR	1358153	IdentifierDecl	code_bytes = ( ( ( columns * ( ss -> K == 0 ? 9 : 14 ) ) + 15 ) >> 4 ) + 20		1358131	0					
ANR	1358154	IdentifierDeclType	int		1358131	0					
ANR	1358155	Identifier	code_bytes		1358131	1					
ANR	1358156	AssignmentExpression	code_bytes = ( ( ( columns * ( ss -> K == 0 ? 9 : 14 ) ) + 15 ) >> 4 ) + 20		1358131	2		=			
ANR	1358157	Identifier	code_bytes		1358131	0					
ANR	1358158	AdditiveExpression	( ( ( columns * ( ss -> K == 0 ? 9 : 14 ) ) + 15 ) >> 4 ) + 20		1358131	1		+			
ANR	1358159	ShiftExpression	( ( columns * ( ss -> K == 0 ? 9 : 14 ) ) + 15 ) >> 4		1358131	0		>>			
ANR	1358160	AdditiveExpression	( columns * ( ss -> K == 0 ? 9 : 14 ) ) + 15		1358131	0		+			
ANR	1358161	MultiplicativeExpression	columns * ( ss -> K == 0 ? 9 : 14 )		1358131	0		*			
ANR	1358162	Identifier	columns		1358131	0					
ANR	1358163	ConditionalExpression	ss -> K == 0 ? 9 : 14		1358131	1					
ANR	1358164	Condition	ss -> K == 0		1358131	0					
ANR	1358165	EqualityExpression	ss -> K == 0		1358131	0		==			
ANR	1358166	PtrMemberAccess	ss -> K		1358131	0					
ANR	1358167	Identifier	ss		1358131	0					
ANR	1358168	Identifier	K		1358131	1					
ANR	1358169	PrimaryExpression	0		1358131	1					
ANR	1358170	PrimaryExpression	9		1358131	1					
ANR	1358171	PrimaryExpression	14		1358131	2					
ANR	1358172	PrimaryExpression	15		1358131	1					
ANR	1358173	PrimaryExpression	4		1358131	1					
ANR	1358174	PrimaryExpression	20		1358131	1					
ANR	1358175	IdentifierDeclStatement	"int raster = ss -> raster = ROUND_UP ( ( columns + 7 ) >> 3 , ss -> DecodedByteAlign ) ;"	143:4:3936:4020	1358131	6	True				
ANR	1358176	IdentifierDecl	"raster = ss -> raster = ROUND_UP ( ( columns + 7 ) >> 3 , ss -> DecodedByteAlign )"		1358131	0					
ANR	1358177	IdentifierDeclType	int		1358131	0					
ANR	1358178	Identifier	raster		1358131	1					
ANR	1358179	AssignmentExpression	"raster = ss -> raster = ROUND_UP ( ( columns + 7 ) >> 3 , ss -> DecodedByteAlign )"		1358131	2		=			
ANR	1358180	Identifier	raster		1358131	0					
ANR	1358181	AssignmentExpression	"ss -> raster = ROUND_UP ( ( columns + 7 ) >> 3 , ss -> DecodedByteAlign )"		1358131	1		=			
ANR	1358182	PtrMemberAccess	ss -> raster		1358131	0					
ANR	1358183	Identifier	ss		1358131	0					
ANR	1358184	Identifier	raster		1358131	1					
ANR	1358185	CallExpression	"ROUND_UP ( ( columns + 7 ) >> 3 , ss -> DecodedByteAlign )"		1358131	1					
ANR	1358186	Callee	ROUND_UP		1358131	0					
ANR	1358187	Identifier	ROUND_UP		1358131	0					
ANR	1358188	ArgumentList	( columns + 7 ) >> 3		1358131	1					
ANR	1358189	Argument	( columns + 7 ) >> 3		1358131	0					
ANR	1358190	ShiftExpression	( columns + 7 ) >> 3		1358131	0		>>			
ANR	1358191	AdditiveExpression	columns + 7		1358131	0		+			
ANR	1358192	Identifier	columns		1358131	0					
ANR	1358193	PrimaryExpression	7		1358131	1					
ANR	1358194	PrimaryExpression	3		1358131	1					
ANR	1358195	Argument	ss -> DecodedByteAlign		1358131	1					
ANR	1358196	PtrMemberAccess	ss -> DecodedByteAlign		1358131	0					
ANR	1358197	Identifier	ss		1358131	0					
ANR	1358198	Identifier	DecodedByteAlign		1358131	1					
ANR	1358199	ExpressionStatement	s_hce_init_inline ( ss )	146:4:4027:4048	1358131	7	True				
ANR	1358200	CallExpression	s_hce_init_inline ( ss )		1358131	0					
ANR	1358201	Callee	s_hce_init_inline		1358131	0					
ANR	1358202	Identifier	s_hce_init_inline		1358131	0					
ANR	1358203	ArgumentList	ss		1358131	1					
ANR	1358204	Argument	ss		1358131	0					
ANR	1358205	Identifier	ss		1358131	0					
ANR	1358206	ExpressionStatement	ss -> lbuf = ss -> lprev = ss -> lcode = 0	147:4:4054:4090	1358131	8	True				
ANR	1358207	AssignmentExpression	ss -> lbuf = ss -> lprev = ss -> lcode = 0		1358131	0		=			
ANR	1358208	PtrMemberAccess	ss -> lbuf		1358131	0					
ANR	1358209	Identifier	ss		1358131	0					
ANR	1358210	Identifier	lbuf		1358131	1					
ANR	1358211	AssignmentExpression	ss -> lprev = ss -> lcode = 0		1358131	1		=			
ANR	1358212	PtrMemberAccess	ss -> lprev		1358131	0					
ANR	1358213	Identifier	ss		1358131	0					
ANR	1358214	Identifier	lprev		1358131	1					
ANR	1358215	AssignmentExpression	ss -> lcode = 0		1358131	1		=			
ANR	1358216	PtrMemberAccess	ss -> lcode		1358131	0					
ANR	1358217	Identifier	ss		1358131	0					
ANR	1358218	Identifier	lcode		1358131	1					
ANR	1358219	PrimaryExpression	0		1358131	1					
ANR	1358220	IfStatement	if ( columns > cfe_max_width )		1358131	9					
ANR	1358221	Condition	columns > cfe_max_width	148:8:4133:4155	1358131	0	True				
ANR	1358222	RelationalExpression	columns > cfe_max_width		1358131	0		>			
ANR	1358223	Identifier	columns		1358131	0					
ANR	1358224	Identifier	cfe_max_width		1358131	1					
ANR	1358225	ReturnStatement	return ERRC ;	149:8:4166:4177	1358131	1	True				
ANR	1358226	Identifier	ERRC		1358131	0					
ANR	1358227	ExpressionStatement	"ss -> lbuf = gs_alloc_bytes ( st -> memory , raster + 4 , ""CFE lbuf"" )"	153:4:4348:4409	1358131	10	True				
ANR	1358228	AssignmentExpression	"ss -> lbuf = gs_alloc_bytes ( st -> memory , raster + 4 , ""CFE lbuf"" )"		1358131	0		=			
ANR	1358229	PtrMemberAccess	ss -> lbuf		1358131	0					
ANR	1358230	Identifier	ss		1358131	0					
ANR	1358231	Identifier	lbuf		1358131	1					
ANR	1358232	CallExpression	"gs_alloc_bytes ( st -> memory , raster + 4 , ""CFE lbuf"" )"		1358131	1					
ANR	1358233	Callee	gs_alloc_bytes		1358131	0					
ANR	1358234	Identifier	gs_alloc_bytes		1358131	0					
ANR	1358235	ArgumentList	st -> memory		1358131	1					
ANR	1358236	Argument	st -> memory		1358131	0					
ANR	1358237	PtrMemberAccess	st -> memory		1358131	0					
ANR	1358238	Identifier	st		1358131	0					
ANR	1358239	Identifier	memory		1358131	1					
ANR	1358240	Argument	raster + 4		1358131	1					
ANR	1358241	AdditiveExpression	raster + 4		1358131	0		+			
ANR	1358242	Identifier	raster		1358131	0					
ANR	1358243	PrimaryExpression	4		1358131	1					
ANR	1358244	Argument	"""CFE lbuf"""		1358131	2					
ANR	1358245	PrimaryExpression	"""CFE lbuf"""		1358131	0					
ANR	1358246	ExpressionStatement	"ss -> lcode = gs_alloc_bytes ( st -> memory , code_bytes , ""CFE lcode"" )"	154:4:4415:4478	1358131	11	True				
ANR	1358247	AssignmentExpression	"ss -> lcode = gs_alloc_bytes ( st -> memory , code_bytes , ""CFE lcode"" )"		1358131	0		=			
ANR	1358248	PtrMemberAccess	ss -> lcode		1358131	0					
ANR	1358249	Identifier	ss		1358131	0					
ANR	1358250	Identifier	lcode		1358131	1					
ANR	1358251	CallExpression	"gs_alloc_bytes ( st -> memory , code_bytes , ""CFE lcode"" )"		1358131	1					
ANR	1358252	Callee	gs_alloc_bytes		1358131	0					
ANR	1358253	Identifier	gs_alloc_bytes		1358131	0					
ANR	1358254	ArgumentList	st -> memory		1358131	1					
ANR	1358255	Argument	st -> memory		1358131	0					
ANR	1358256	PtrMemberAccess	st -> memory		1358131	0					
ANR	1358257	Identifier	st		1358131	0					
ANR	1358258	Identifier	memory		1358131	1					
ANR	1358259	Argument	code_bytes		1358131	1					
ANR	1358260	Identifier	code_bytes		1358131	0					
ANR	1358261	Argument	"""CFE lcode"""		1358131	2					
ANR	1358262	PrimaryExpression	"""CFE lcode"""		1358131	0					
ANR	1358263	IfStatement	if ( ss -> lbuf == 0 || ss -> lcode == 0 )		1358131	12					
ANR	1358264	Condition	ss -> lbuf == 0 || ss -> lcode == 0	155:8:4488:4518	1358131	0	True				
ANR	1358265	OrExpression	ss -> lbuf == 0 || ss -> lcode == 0		1358131	0		||			
ANR	1358266	EqualityExpression	ss -> lbuf == 0		1358131	0		==			
ANR	1358267	PtrMemberAccess	ss -> lbuf		1358131	0					
ANR	1358268	Identifier	ss		1358131	0					
ANR	1358269	Identifier	lbuf		1358131	1					
ANR	1358270	PrimaryExpression	0		1358131	1					
ANR	1358271	EqualityExpression	ss -> lcode == 0		1358131	1		==			
ANR	1358272	PtrMemberAccess	ss -> lcode		1358131	0					
ANR	1358273	Identifier	ss		1358131	0					
ANR	1358274	Identifier	lcode		1358131	1					
ANR	1358275	PrimaryExpression	0		1358131	1					
ANR	1358276	CompoundStatement		27:41:1218:1218	1358131	1					
ANR	1358277	ExpressionStatement	s_CFE_release ( st )	156:8:4531:4548	1358131	0	True				
ANR	1358278	CallExpression	s_CFE_release ( st )		1358131	0					
ANR	1358279	Callee	s_CFE_release		1358131	0					
ANR	1358280	Identifier	s_CFE_release		1358131	0					
ANR	1358281	ArgumentList	st		1358131	1					
ANR	1358282	Argument	st		1358131	0					
ANR	1358283	Identifier	st		1358131	0					
ANR	1358284	ReturnStatement	return ERRC ;	157:8:4558:4569	1358131	1	True				
ANR	1358285	Identifier	ERRC		1358131	0					
ANR	1358286	ExpressionStatement	"memset ( ss -> lbuf + raster , 0 , 4 )"	160:4:4603:4634	1358131	13	True				
ANR	1358287	CallExpression	"memset ( ss -> lbuf + raster , 0 , 4 )"		1358131	0					
ANR	1358288	Callee	memset		1358131	0					
ANR	1358289	Identifier	memset		1358131	0					
ANR	1358290	ArgumentList	ss -> lbuf + raster		1358131	1					
ANR	1358291	Argument	ss -> lbuf + raster		1358131	0					
ANR	1358292	AdditiveExpression	ss -> lbuf + raster		1358131	0		+			
ANR	1358293	PtrMemberAccess	ss -> lbuf		1358131	0					
ANR	1358294	Identifier	ss		1358131	0					
ANR	1358295	Identifier	lbuf		1358131	1					
ANR	1358296	Identifier	raster		1358131	1					
ANR	1358297	Argument	0		1358131	1					
ANR	1358298	PrimaryExpression	0		1358131	0					
ANR	1358299	Argument	4		1358131	2					
ANR	1358300	PrimaryExpression	4		1358131	0					
ANR	1358301	IfStatement	if ( ss -> K != 0 )		1358131	14					
ANR	1358302	Condition	ss -> K != 0	161:8:4669:4678	1358131	0	True				
ANR	1358303	EqualityExpression	ss -> K != 0		1358131	0		!=			
ANR	1358304	PtrMemberAccess	ss -> K		1358131	0					
ANR	1358305	Identifier	ss		1358131	0					
ANR	1358306	Identifier	K		1358131	1					
ANR	1358307	PrimaryExpression	0		1358131	1					
ANR	1358308	CompoundStatement		33:20:1378:1378	1358131	1					
ANR	1358309	ExpressionStatement	"ss -> lprev = gs_alloc_bytes ( st -> memory , raster + 4 , ""CFE lprev"" )"	162:8:4691:4754	1358131	0	True				
ANR	1358310	AssignmentExpression	"ss -> lprev = gs_alloc_bytes ( st -> memory , raster + 4 , ""CFE lprev"" )"		1358131	0		=			
ANR	1358311	PtrMemberAccess	ss -> lprev		1358131	0					
ANR	1358312	Identifier	ss		1358131	0					
ANR	1358313	Identifier	lprev		1358131	1					
ANR	1358314	CallExpression	"gs_alloc_bytes ( st -> memory , raster + 4 , ""CFE lprev"" )"		1358131	1					
ANR	1358315	Callee	gs_alloc_bytes		1358131	0					
ANR	1358316	Identifier	gs_alloc_bytes		1358131	0					
ANR	1358317	ArgumentList	st -> memory		1358131	1					
ANR	1358318	Argument	st -> memory		1358131	0					
ANR	1358319	PtrMemberAccess	st -> memory		1358131	0					
ANR	1358320	Identifier	st		1358131	0					
ANR	1358321	Identifier	memory		1358131	1					
ANR	1358322	Argument	raster + 4		1358131	1					
ANR	1358323	AdditiveExpression	raster + 4		1358131	0		+			
ANR	1358324	Identifier	raster		1358131	0					
ANR	1358325	PrimaryExpression	4		1358131	1					
ANR	1358326	Argument	"""CFE lprev"""		1358131	2					
ANR	1358327	PrimaryExpression	"""CFE lprev"""		1358131	0					
ANR	1358328	IfStatement	if ( ss -> lprev == 0 )		1358131	1					
ANR	1358329	Condition	ss -> lprev == 0	163:12:4768:4781	1358131	0	True				
ANR	1358330	EqualityExpression	ss -> lprev == 0		1358131	0		==			
ANR	1358331	PtrMemberAccess	ss -> lprev		1358131	0					
ANR	1358332	Identifier	ss		1358131	0					
ANR	1358333	Identifier	lprev		1358131	1					
ANR	1358334	PrimaryExpression	0		1358131	1					
ANR	1358335	CompoundStatement		35:28:1481:1481	1358131	1					
ANR	1358336	ExpressionStatement	s_CFE_release ( st )	164:12:4798:4815	1358131	0	True				
ANR	1358337	CallExpression	s_CFE_release ( st )		1358131	0					
ANR	1358338	Callee	s_CFE_release		1358131	0					
ANR	1358339	Identifier	s_CFE_release		1358131	0					
ANR	1358340	ArgumentList	st		1358131	1					
ANR	1358341	Argument	st		1358131	0					
ANR	1358342	Identifier	st		1358131	0					
ANR	1358343	ReturnStatement	return ERRC ;	165:12:4829:4840	1358131	1	True				
ANR	1358344	Identifier	ERRC		1358131	0					
ANR	1358345	ExpressionStatement	"memset ( ss -> lprev , ( ss -> BlackIs1 ? 0 : 0xff ) , raster + 4 )"	170:8:4998:5054	1358131	2	True				
ANR	1358346	CallExpression	"memset ( ss -> lprev , ( ss -> BlackIs1 ? 0 : 0xff ) , raster + 4 )"		1358131	0					
ANR	1358347	Callee	memset		1358131	0					
ANR	1358348	Identifier	memset		1358131	0					
ANR	1358349	ArgumentList	ss -> lprev		1358131	1					
ANR	1358350	Argument	ss -> lprev		1358131	0					
ANR	1358351	PtrMemberAccess	ss -> lprev		1358131	0					
ANR	1358352	Identifier	ss		1358131	0					
ANR	1358353	Identifier	lprev		1358131	1					
ANR	1358354	Argument	ss -> BlackIs1 ? 0 : 0xff		1358131	1					
ANR	1358355	ConditionalExpression	ss -> BlackIs1 ? 0 : 0xff		1358131	0					
ANR	1358356	Condition	ss -> BlackIs1		1358131	0					
ANR	1358357	PtrMemberAccess	ss -> BlackIs1		1358131	0					
ANR	1358358	Identifier	ss		1358131	0					
ANR	1358359	Identifier	BlackIs1		1358131	1					
ANR	1358360	PrimaryExpression	0		1358131	1					
ANR	1358361	PrimaryExpression	0xff		1358131	2					
ANR	1358362	Argument	raster + 4		1358131	2					
ANR	1358363	AdditiveExpression	raster + 4		1358131	0		+			
ANR	1358364	Identifier	raster		1358131	0					
ANR	1358365	PrimaryExpression	4		1358131	1					
ANR	1358366	IfStatement	if ( columns & 7 )		1358131	3					
ANR	1358367	Condition	columns & 7	171:12:5096:5106	1358131	0	True				
ANR	1358368	BitAndExpression	columns & 7		1358131	0		&			
ANR	1358369	Identifier	columns		1358131	0					
ANR	1358370	PrimaryExpression	7		1358131	1					
ANR	1358371	ExpressionStatement	ss -> lprev [ raster - 1 ] ^= 0x80 >> ( columns & 7 )	172:12:5121:5167	1358131	1	True				
ANR	1358372	AssignmentExpression	ss -> lprev [ raster - 1 ] ^= 0x80 >> ( columns & 7 )		1358131	0		^=			
ANR	1358373	ArrayIndexing	ss -> lprev [ raster - 1 ]		1358131	0					
ANR	1358374	PtrMemberAccess	ss -> lprev		1358131	0					
ANR	1358375	Identifier	ss		1358131	0					
ANR	1358376	Identifier	lprev		1358131	1					
ANR	1358377	AdditiveExpression	raster - 1		1358131	1		-			
ANR	1358378	Identifier	raster		1358131	0					
ANR	1358379	PrimaryExpression	1		1358131	1					
ANR	1358380	ShiftExpression	0x80 >> ( columns & 7 )		1358131	1		>>			
ANR	1358381	PrimaryExpression	0x80		1358131	0					
ANR	1358382	BitAndExpression	columns & 7		1358131	1		&			
ANR	1358383	Identifier	columns		1358131	0					
ANR	1358384	PrimaryExpression	7		1358131	1					
ANR	1358385	ElseStatement	else		1358131	0					
ANR	1358386	ExpressionStatement	ss -> lprev [ raster ] = ~ss -> lprev [ 0 ]	174:12:5194:5227	1358131	0	True				
ANR	1358387	AssignmentExpression	ss -> lprev [ raster ] = ~ss -> lprev [ 0 ]		1358131	0		=			
ANR	1358388	ArrayIndexing	ss -> lprev [ raster ]		1358131	0					
ANR	1358389	PtrMemberAccess	ss -> lprev		1358131	0					
ANR	1358390	Identifier	ss		1358131	0					
ANR	1358391	Identifier	lprev		1358131	1					
ANR	1358392	Identifier	raster		1358131	1					
ANR	1358393	ArrayIndexing	~ss -> lprev [ 0 ]		1358131	1					
ANR	1358394	PtrMemberAccess	~ss -> lprev		1358131	0					
ANR	1358395	Identifier	~ss		1358131	0					
ANR	1358396	Identifier	lprev		1358131	1					
ANR	1358397	PrimaryExpression	0		1358131	1					
ANR	1358398	ExpressionStatement	ss -> read_count = raster	176:4:5239:5262	1358131	15	True				
ANR	1358399	AssignmentExpression	ss -> read_count = raster		1358131	0		=			
ANR	1358400	PtrMemberAccess	ss -> read_count		1358131	0					
ANR	1358401	Identifier	ss		1358131	0					
ANR	1358402	Identifier	read_count		1358131	1					
ANR	1358403	Identifier	raster		1358131	1					
ANR	1358404	ExpressionStatement	ss -> write_count = 0	177:4:5268:5287	1358131	16	True				
ANR	1358405	AssignmentExpression	ss -> write_count = 0		1358131	0		=			
ANR	1358406	PtrMemberAccess	ss -> write_count		1358131	0					
ANR	1358407	Identifier	ss		1358131	0					
ANR	1358408	Identifier	write_count		1358131	1					
ANR	1358409	PrimaryExpression	0		1358131	1					
ANR	1358410	ExpressionStatement	ss -> k_left = ( ss -> K > 0 ? 1 : ss -> K )	178:4:5293:5329	1358131	17	True				
ANR	1358411	AssignmentExpression	ss -> k_left = ( ss -> K > 0 ? 1 : ss -> K )		1358131	0		=			
ANR	1358412	PtrMemberAccess	ss -> k_left		1358131	0					
ANR	1358413	Identifier	ss		1358131	0					
ANR	1358414	Identifier	k_left		1358131	1					
ANR	1358415	ConditionalExpression	ss -> K > 0 ? 1 : ss -> K		1358131	1					
ANR	1358416	Condition	ss -> K > 0		1358131	0					
ANR	1358417	RelationalExpression	ss -> K > 0		1358131	0		>			
ANR	1358418	PtrMemberAccess	ss -> K		1358131	0					
ANR	1358419	Identifier	ss		1358131	0					
ANR	1358420	Identifier	K		1358131	1					
ANR	1358421	PrimaryExpression	0		1358131	1					
ANR	1358422	PrimaryExpression	1		1358131	1					
ANR	1358423	PtrMemberAccess	ss -> K		1358131	2					
ANR	1358424	Identifier	ss		1358131	0					
ANR	1358425	Identifier	K		1358131	1					
ANR	1358426	ExpressionStatement	ss -> max_code_bytes = code_bytes	179:4:5335:5366	1358131	18	True				
ANR	1358427	AssignmentExpression	ss -> max_code_bytes = code_bytes		1358131	0		=			
ANR	1358428	PtrMemberAccess	ss -> max_code_bytes		1358131	0					
ANR	1358429	Identifier	ss		1358131	0					
ANR	1358430	Identifier	max_code_bytes		1358131	1					
ANR	1358431	Identifier	code_bytes		1358131	1					
ANR	1358432	ReturnStatement	return 0 ;	180:4:5372:5380	1358131	19	True				
ANR	1358433	PrimaryExpression	0		1358131	0					
ANR	1358434	ReturnType	static int		1358131	1					
ANR	1358435	Identifier	s_CFE_init		1358131	2					
ANR	1358436	ParameterList	register stream_state * st		1358131	3					
ANR	1358437	Parameter	register stream_state * st	128:11:3274:3299	1358131	0	True				
ANR	1358438	ParameterType	register stream_state *		1358131	0					
ANR	1358439	Identifier	st		1358131	1					
ANR	1358440	CFGEntryNode	ENTRY		1358131		True				
ANR	1358441	CFGExitNode	EXIT		1358131		True				
ANR	1358442	Symbol	* st		1358131						
ANR	1358443	Symbol	* ss		1358131						
ANR	1358444	Symbol	ss -> max_code_bytes		1358131						
ANR	1358445	Symbol	columns		1358131						
ANR	1358446	Symbol	* ~ss		1358131						
ANR	1358447	Symbol	ss -> lbuf		1358131						
ANR	1358448	Symbol	code_bytes		1358131						
ANR	1358449	Symbol	* * ss		1358131						
ANR	1358450	Symbol	ss -> lprev		1358131						
ANR	1358451	Symbol	ss -> read_count		1358131						
ANR	1358452	Symbol	ss -> K		1358131						
ANR	1358453	Symbol	~ss		1358131						
ANR	1358454	Symbol	ss		1358131						
ANR	1358455	Symbol	st		1358131						
ANR	1358456	Symbol	ss -> BlackIs1		1358131						
ANR	1358457	Symbol	gs_alloc_bytes		1358131						
ANR	1358458	Symbol	~ss -> lprev		1358131						
ANR	1358459	Symbol	cfe_max_width		1358131						
ANR	1358460	Symbol	ss -> write_count		1358131						
ANR	1358461	Symbol	st -> memory		1358131						
ANR	1358462	Symbol	ROUND_UP		1358131						
ANR	1358463	Symbol	ss -> raster		1358131						
ANR	1358464	Symbol	raster		1358131						
ANR	1358465	Symbol	* ss -> lprev		1358131						
ANR	1358466	Symbol	ss -> lcode		1358131						
ANR	1358467	Symbol	* * ~ss		1358131						
ANR	1358468	Symbol	ss -> DecodedByteAlign		1358131						
ANR	1358469	Symbol	ss -> k_left		1358131						
ANR	1358470	Symbol	ss -> Columns		1358131						
ANR	1358471	Symbol	* ~ss -> lprev		1358131						
ANR	1358472	Symbol	* raster		1358131						
ANR	1358473	Symbol	ERRC		1358131						
ANR	1358474	Function	s_CFE_release	184:0:5411:5704							
ANR	1358475	FunctionDef	s_CFE_release (stream_state * st)		1358474	0					
ANR	1358476	CompoundStatement		186:0:5456:5704	1358474	0					
ANR	1358477	Statement	stream_CFE_state	187:4:5462:5477	1358474	0	True				
ANR	1358478	Statement	*	187:21:5479:5479	1358474	1	True				
ANR	1358479	Statement	const	187:22:5480:5484	1358474	2	True				
ANR	1358480	ExpressionStatement	ss = ( stream_CFE_state * ) st	187:28:5486:5514	1358474	3	True				
ANR	1358481	AssignmentExpression	ss = ( stream_CFE_state * ) st		1358474	0		=			
ANR	1358482	Identifier	ss		1358474	0					
ANR	1358483	CastExpression	( stream_CFE_state * ) st		1358474	1					
ANR	1358484	CastTarget	stream_CFE_state *		1358474	0					
ANR	1358485	Identifier	st		1358474	1					
ANR	1358486	ExpressionStatement	"gs_free_object ( st -> memory , ss -> lprev , ""CFE lprev(close)"" )"	189:4:5521:5578	1358474	4	True				
ANR	1358487	CallExpression	"gs_free_object ( st -> memory , ss -> lprev , ""CFE lprev(close)"" )"		1358474	0					
ANR	1358488	Callee	gs_free_object		1358474	0					
ANR	1358489	Identifier	gs_free_object		1358474	0					
ANR	1358490	ArgumentList	st -> memory		1358474	1					
ANR	1358491	Argument	st -> memory		1358474	0					
ANR	1358492	PtrMemberAccess	st -> memory		1358474	0					
ANR	1358493	Identifier	st		1358474	0					
ANR	1358494	Identifier	memory		1358474	1					
ANR	1358495	Argument	ss -> lprev		1358474	1					
ANR	1358496	PtrMemberAccess	ss -> lprev		1358474	0					
ANR	1358497	Identifier	ss		1358474	0					
ANR	1358498	Identifier	lprev		1358474	1					
ANR	1358499	Argument	"""CFE lprev(close)"""		1358474	2					
ANR	1358500	PrimaryExpression	"""CFE lprev(close)"""		1358474	0					
ANR	1358501	ExpressionStatement	"gs_free_object ( st -> memory , ss -> lcode , ""CFE lcode(close)"" )"	190:4:5584:5641	1358474	5	True				
ANR	1358502	CallExpression	"gs_free_object ( st -> memory , ss -> lcode , ""CFE lcode(close)"" )"		1358474	0					
ANR	1358503	Callee	gs_free_object		1358474	0					
ANR	1358504	Identifier	gs_free_object		1358474	0					
ANR	1358505	ArgumentList	st -> memory		1358474	1					
ANR	1358506	Argument	st -> memory		1358474	0					
ANR	1358507	PtrMemberAccess	st -> memory		1358474	0					
ANR	1358508	Identifier	st		1358474	0					
ANR	1358509	Identifier	memory		1358474	1					
ANR	1358510	Argument	ss -> lcode		1358474	1					
ANR	1358511	PtrMemberAccess	ss -> lcode		1358474	0					
ANR	1358512	Identifier	ss		1358474	0					
ANR	1358513	Identifier	lcode		1358474	1					
ANR	1358514	Argument	"""CFE lcode(close)"""		1358474	2					
ANR	1358515	PrimaryExpression	"""CFE lcode(close)"""		1358474	0					
ANR	1358516	ExpressionStatement	"gs_free_object ( st -> memory , ss -> lbuf , ""CFE lbuf(close)"" )"	191:4:5647:5702	1358474	6	True				
ANR	1358517	CallExpression	"gs_free_object ( st -> memory , ss -> lbuf , ""CFE lbuf(close)"" )"		1358474	0					
ANR	1358518	Callee	gs_free_object		1358474	0					
ANR	1358519	Identifier	gs_free_object		1358474	0					
ANR	1358520	ArgumentList	st -> memory		1358474	1					
ANR	1358521	Argument	st -> memory		1358474	0					
ANR	1358522	PtrMemberAccess	st -> memory		1358474	0					
ANR	1358523	Identifier	st		1358474	0					
ANR	1358524	Identifier	memory		1358474	1					
ANR	1358525	Argument	ss -> lbuf		1358474	1					
ANR	1358526	PtrMemberAccess	ss -> lbuf		1358474	0					
ANR	1358527	Identifier	ss		1358474	0					
ANR	1358528	Identifier	lbuf		1358474	1					
ANR	1358529	Argument	"""CFE lbuf(close)"""		1358474	2					
ANR	1358530	PrimaryExpression	"""CFE lbuf(close)"""		1358474	0					
ANR	1358531	ReturnType	static void		1358474	1					
ANR	1358532	Identifier	s_CFE_release		1358474	2					
ANR	1358533	ParameterList	stream_state * st		1358474	3					
ANR	1358534	Parameter	stream_state * st	185:14:5437:5453	1358474	0	True				
ANR	1358535	ParameterType	stream_state *		1358474	0					
ANR	1358536	Identifier	st		1358474	1					
ANR	1358537	CFGEntryNode	ENTRY		1358474		True				
ANR	1358538	CFGExitNode	EXIT		1358474		True				
ANR	1358539	Symbol	ss		1358474						
ANR	1358540	Symbol	ss -> lprev		1358474						
ANR	1358541	Symbol	ss -> lcode		1358474						
ANR	1358542	Symbol	st		1358474						
ANR	1358543	Symbol	* st		1358474						
ANR	1358544	Symbol	* ss		1358474						
ANR	1358545	Symbol	st -> memory		1358474						
ANR	1358546	Symbol	ss -> lbuf		1358474						
ANR	1358547	DeclStmt									
ANR	1358548	Decl							void	"void ( stream_CFE_state * , const byte * , stream_cursor_write * )"	cf_encode_1d
ANR	1358549	DeclStmt									
ANR	1358550	Decl							void	"void ( stream_CFE_state * , const byte * , stream_cursor_write * , const byte * )"	cf_encode_2d
ANR	1358551	Function	s_CFE_process	199:0:5962:12459							
ANR	1358552	FunctionDef	"s_CFE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1358551	0					
ANR	1358553	CompoundStatement		202:0:6082:12459	1358551	0					
ANR	1358554	Statement	stream_CFE_state	203:4:6088:6103	1358551	0	True				
ANR	1358555	Statement	*	203:21:6105:6105	1358551	1	True				
ANR	1358556	Statement	const	203:22:6106:6110	1358551	2	True				
ANR	1358557	ExpressionStatement	ss = ( stream_CFE_state * ) st	203:28:6112:6140	1358551	3	True				
ANR	1358558	AssignmentExpression	ss = ( stream_CFE_state * ) st		1358551	0		=			
ANR	1358559	Identifier	ss		1358551	0					
ANR	1358560	CastExpression	( stream_CFE_state * ) st		1358551	1					
ANR	1358561	CastTarget	stream_CFE_state *		1358551	0					
ANR	1358562	Identifier	st		1358551	1					
ANR	1358563	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	204:4:6146:6176	1358551	4	True				
ANR	1358564	IdentifierDecl	* rlimit = pr -> limit		1358551	0					
ANR	1358565	IdentifierDeclType	const byte *		1358551	0					
ANR	1358566	Identifier	rlimit		1358551	1					
ANR	1358567	AssignmentExpression	* rlimit = pr -> limit		1358551	2		=			
ANR	1358568	Identifier	rlimit		1358551	0					
ANR	1358569	PtrMemberAccess	pr -> limit		1358551	1					
ANR	1358570	Identifier	pr		1358551	0					
ANR	1358571	Identifier	limit		1358551	1					
ANR	1358572	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	205:4:6182:6206	1358551	5	True				
ANR	1358573	IdentifierDecl	* wlimit = pw -> limit		1358551	0					
ANR	1358574	IdentifierDeclType	byte *		1358551	0					
ANR	1358575	Identifier	wlimit		1358551	1					
ANR	1358576	AssignmentExpression	* wlimit = pw -> limit		1358551	2		=			
ANR	1358577	Identifier	wlimit		1358551	0					
ANR	1358578	PtrMemberAccess	pw -> limit		1358551	1					
ANR	1358579	Identifier	pw		1358551	0					
ANR	1358580	Identifier	limit		1358551	1					
ANR	1358581	IdentifierDeclStatement	int raster = ss -> raster ;	206:4:6212:6235	1358551	6	True				
ANR	1358582	IdentifierDecl	raster = ss -> raster		1358551	0					
ANR	1358583	IdentifierDeclType	int		1358551	0					
ANR	1358584	Identifier	raster		1358551	1					
ANR	1358585	AssignmentExpression	raster = ss -> raster		1358551	2		=			
ANR	1358586	Identifier	raster		1358551	0					
ANR	1358587	PtrMemberAccess	ss -> raster		1358551	1					
ANR	1358588	Identifier	ss		1358551	0					
ANR	1358589	Identifier	raster		1358551	1					
ANR	1358590	IdentifierDeclStatement	byte end_mask = 1 << ( - ss -> Columns & 7 ) ;	207:4:6241:6280	1358551	7	True				
ANR	1358591	IdentifierDecl	end_mask = 1 << ( - ss -> Columns & 7 )		1358551	0					
ANR	1358592	IdentifierDeclType	byte		1358551	0					
ANR	1358593	Identifier	end_mask		1358551	1					
ANR	1358594	AssignmentExpression	end_mask = 1 << ( - ss -> Columns & 7 )		1358551	2		=			
ANR	1358595	Identifier	end_mask		1358551	0					
ANR	1358596	ShiftExpression	1 << ( - ss -> Columns & 7 )		1358551	1		<<			
ANR	1358597	PrimaryExpression	1		1358551	0					
ANR	1358598	BitAndExpression	- ss -> Columns & 7		1358551	1		&			
ANR	1358599	UnaryOperationExpression	- ss -> Columns		1358551	0					
ANR	1358600	UnaryOperator	-		1358551	0					
ANR	1358601	PtrMemberAccess	ss -> Columns		1358551	1					
ANR	1358602	Identifier	ss		1358551	0					
ANR	1358603	Identifier	Columns		1358551	1					
ANR	1358604	PrimaryExpression	7		1358551	1					
ANR	1358605	IdentifierDeclStatement	int status = 0 ;	208:4:6286:6300	1358551	8	True				
ANR	1358606	IdentifierDecl	status = 0		1358551	0					
ANR	1358607	IdentifierDeclType	int		1358551	0					
ANR	1358608	Identifier	status		1358551	1					
ANR	1358609	AssignmentExpression	status = 0		1358551	2		=			
ANR	1358610	Identifier	status		1358551	0					
ANR	1358611	PrimaryExpression	0		1358551	1					
ANR	1358612	ForStatement	for ( ; ; )		1358551	9					
ANR	1358613	CompoundStatement		10:8:243:264	1358551	0					
ANR	1358614	IdentifierDeclStatement	stream_cursor_write w ;	211:8:6326:6347	1358551	0	True				
ANR	1358615	IdentifierDecl	w		1358551	0					
ANR	1358616	IdentifierDeclType	stream_cursor_write		1358551	0					
ANR	1358617	Identifier	w		1358551	1					
ANR	1358618	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w]CFE: read_count = %d, write_count=%d,\\n"" , ss -> read_count , ss -> write_count )"	213:8:6358:6483	1358551	1	True				
ANR	1358619	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w]CFE: read_count = %d, write_count=%d,\\n"" , ss -> read_count , ss -> write_count )"		1358551	0					
ANR	1358620	Callee	if_debug2m		1358551	0					
ANR	1358621	Identifier	if_debug2m		1358551	0					
ANR	1358622	ArgumentList	'w'		1358551	1					
ANR	1358623	Argument	'w'		1358551	0					
ANR	1358624	PrimaryExpression	'w'		1358551	0					
ANR	1358625	Argument	ss -> memory		1358551	1					
ANR	1358626	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1358627	Identifier	ss		1358551	0					
ANR	1358628	Identifier	memory		1358551	1					
ANR	1358629	Argument	"""[w]CFE: read_count = %d, write_count=%d,\\n"""		1358551	2					
ANR	1358630	PrimaryExpression	"""[w]CFE: read_count = %d, write_count=%d,\\n"""		1358551	0					
ANR	1358631	Argument	ss -> read_count		1358551	3					
ANR	1358632	PtrMemberAccess	ss -> read_count		1358551	0					
ANR	1358633	Identifier	ss		1358551	0					
ANR	1358634	Identifier	read_count		1358551	1					
ANR	1358635	Argument	ss -> write_count		1358551	4					
ANR	1358636	PtrMemberAccess	ss -> write_count		1358551	0					
ANR	1358637	Identifier	ss		1358551	0					
ANR	1358638	Identifier	write_count		1358551	1					
ANR	1358639	ExpressionStatement	"if_debug6m ( 'w' , ss -> memory , ""    pr = 0x%lx(%d)0x%lx, pw = 0x%lx(%d)0x%lx\\n"" , ( ulong ) pr -> ptr , ( int ) ( rlimit - pr -> ptr ) , ( ulong ) rlimit , ( ulong ) pw -> ptr , ( int ) ( wlimit - pw -> ptr ) , ( ulong ) wlimit )"	215:8:6493:6724	1358551	2	True				
ANR	1358640	CallExpression	"if_debug6m ( 'w' , ss -> memory , ""    pr = 0x%lx(%d)0x%lx, pw = 0x%lx(%d)0x%lx\\n"" , ( ulong ) pr -> ptr , ( int ) ( rlimit - pr -> ptr ) , ( ulong ) rlimit , ( ulong ) pw -> ptr , ( int ) ( wlimit - pw -> ptr ) , ( ulong ) wlimit )"		1358551	0					
ANR	1358641	Callee	if_debug6m		1358551	0					
ANR	1358642	Identifier	if_debug6m		1358551	0					
ANR	1358643	ArgumentList	'w'		1358551	1					
ANR	1358644	Argument	'w'		1358551	0					
ANR	1358645	PrimaryExpression	'w'		1358551	0					
ANR	1358646	Argument	ss -> memory		1358551	1					
ANR	1358647	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1358648	Identifier	ss		1358551	0					
ANR	1358649	Identifier	memory		1358551	1					
ANR	1358650	Argument	"""    pr = 0x%lx(%d)0x%lx, pw = 0x%lx(%d)0x%lx\\n"""		1358551	2					
ANR	1358651	PrimaryExpression	"""    pr = 0x%lx(%d)0x%lx, pw = 0x%lx(%d)0x%lx\\n"""		1358551	0					
ANR	1358652	Argument	( ulong ) pr -> ptr		1358551	3					
ANR	1358653	CastExpression	( ulong ) pr -> ptr		1358551	0					
ANR	1358654	CastTarget	ulong		1358551	0					
ANR	1358655	PtrMemberAccess	pr -> ptr		1358551	1					
ANR	1358656	Identifier	pr		1358551	0					
ANR	1358657	Identifier	ptr		1358551	1					
ANR	1358658	Argument	( int ) ( rlimit - pr -> ptr )		1358551	4					
ANR	1358659	CastExpression	( int ) ( rlimit - pr -> ptr )		1358551	0					
ANR	1358660	CastTarget	int		1358551	0					
ANR	1358661	AdditiveExpression	rlimit - pr -> ptr		1358551	1		-			
ANR	1358662	Identifier	rlimit		1358551	0					
ANR	1358663	PtrMemberAccess	pr -> ptr		1358551	1					
ANR	1358664	Identifier	pr		1358551	0					
ANR	1358665	Identifier	ptr		1358551	1					
ANR	1358666	Argument	( ulong ) rlimit		1358551	5					
ANR	1358667	CastExpression	( ulong ) rlimit		1358551	0					
ANR	1358668	CastTarget	ulong		1358551	0					
ANR	1358669	Identifier	rlimit		1358551	1					
ANR	1358670	Argument	( ulong ) pw -> ptr		1358551	6					
ANR	1358671	CastExpression	( ulong ) pw -> ptr		1358551	0					
ANR	1358672	CastTarget	ulong		1358551	0					
ANR	1358673	PtrMemberAccess	pw -> ptr		1358551	1					
ANR	1358674	Identifier	pw		1358551	0					
ANR	1358675	Identifier	ptr		1358551	1					
ANR	1358676	Argument	( int ) ( wlimit - pw -> ptr )		1358551	7					
ANR	1358677	CastExpression	( int ) ( wlimit - pw -> ptr )		1358551	0					
ANR	1358678	CastTarget	int		1358551	0					
ANR	1358679	AdditiveExpression	wlimit - pw -> ptr		1358551	1		-			
ANR	1358680	Identifier	wlimit		1358551	0					
ANR	1358681	PtrMemberAccess	pw -> ptr		1358551	1					
ANR	1358682	Identifier	pw		1358551	0					
ANR	1358683	Identifier	ptr		1358551	1					
ANR	1358684	Argument	( ulong ) wlimit		1358551	8					
ANR	1358685	CastExpression	( ulong ) wlimit		1358551	0					
ANR	1358686	CastTarget	ulong		1358551	0					
ANR	1358687	Identifier	wlimit		1358551	1					
ANR	1358688	IfStatement	if ( ss -> write_count )		1358551	3					
ANR	1358689	Condition	ss -> write_count	218:12:6738:6752	1358551	0	True				
ANR	1358690	PtrMemberAccess	ss -> write_count		1358551	0					
ANR	1358691	Identifier	ss		1358551	0					
ANR	1358692	Identifier	write_count		1358551	1					
ANR	1358693	CompoundStatement		20:12:791:832	1358551	1					
ANR	1358694	IdentifierDeclStatement	int wcount = wlimit - pw -> ptr ;	220:12:6831:6860	1358551	0	True				
ANR	1358695	IdentifierDecl	wcount = wlimit - pw -> ptr		1358551	0					
ANR	1358696	IdentifierDeclType	int		1358551	0					
ANR	1358697	Identifier	wcount		1358551	1					
ANR	1358698	AssignmentExpression	wcount = wlimit - pw -> ptr		1358551	2		=			
ANR	1358699	Identifier	wcount		1358551	0					
ANR	1358700	AdditiveExpression	wlimit - pw -> ptr		1358551	1		-			
ANR	1358701	Identifier	wlimit		1358551	0					
ANR	1358702	PtrMemberAccess	pw -> ptr		1358551	1					
ANR	1358703	Identifier	pw		1358551	0					
ANR	1358704	Identifier	ptr		1358551	1					
ANR	1358705	IdentifierDeclStatement	"int ccount = min ( wcount , ss -> write_count ) ;"	221:12:6874:6915	1358551	1	True				
ANR	1358706	IdentifierDecl	"ccount = min ( wcount , ss -> write_count )"		1358551	0					
ANR	1358707	IdentifierDeclType	int		1358551	0					
ANR	1358708	Identifier	ccount		1358551	1					
ANR	1358709	AssignmentExpression	"ccount = min ( wcount , ss -> write_count )"		1358551	2		=			
ANR	1358710	Identifier	ccount		1358551	0					
ANR	1358711	CallExpression	"min ( wcount , ss -> write_count )"		1358551	1					
ANR	1358712	Callee	min		1358551	0					
ANR	1358713	Identifier	min		1358551	0					
ANR	1358714	ArgumentList	wcount		1358551	1					
ANR	1358715	Argument	wcount		1358551	0					
ANR	1358716	Identifier	wcount		1358551	0					
ANR	1358717	Argument	ss -> write_count		1358551	1					
ANR	1358718	PtrMemberAccess	ss -> write_count		1358551	0					
ANR	1358719	Identifier	ss		1358551	0					
ANR	1358720	Identifier	write_count		1358551	1					
ANR	1358721	ExpressionStatement	"memcpy ( pw -> ptr + 1 , ss -> lcode + ss -> code_bytes - ss -> write_count , ccount )"	223:12:6930:7022	1358551	2	True				
ANR	1358722	CallExpression	"memcpy ( pw -> ptr + 1 , ss -> lcode + ss -> code_bytes - ss -> write_count , ccount )"		1358551	0					
ANR	1358723	Callee	memcpy		1358551	0					
ANR	1358724	Identifier	memcpy		1358551	0					
ANR	1358725	ArgumentList	pw -> ptr + 1		1358551	1					
ANR	1358726	Argument	pw -> ptr + 1		1358551	0					
ANR	1358727	AdditiveExpression	pw -> ptr + 1		1358551	0		+			
ANR	1358728	PtrMemberAccess	pw -> ptr		1358551	0					
ANR	1358729	Identifier	pw		1358551	0					
ANR	1358730	Identifier	ptr		1358551	1					
ANR	1358731	PrimaryExpression	1		1358551	1					
ANR	1358732	Argument	ss -> lcode + ss -> code_bytes - ss -> write_count		1358551	1					
ANR	1358733	AdditiveExpression	ss -> lcode + ss -> code_bytes - ss -> write_count		1358551	0		+			
ANR	1358734	PtrMemberAccess	ss -> lcode		1358551	0					
ANR	1358735	Identifier	ss		1358551	0					
ANR	1358736	Identifier	lcode		1358551	1					
ANR	1358737	AdditiveExpression	ss -> code_bytes - ss -> write_count		1358551	1		-			
ANR	1358738	PtrMemberAccess	ss -> code_bytes		1358551	0					
ANR	1358739	Identifier	ss		1358551	0					
ANR	1358740	Identifier	code_bytes		1358551	1					
ANR	1358741	PtrMemberAccess	ss -> write_count		1358551	1					
ANR	1358742	Identifier	ss		1358551	0					
ANR	1358743	Identifier	write_count		1358551	1					
ANR	1358744	Argument	ccount		1358551	2					
ANR	1358745	Identifier	ccount		1358551	0					
ANR	1358746	ExpressionStatement	pw -> ptr += ccount	225:12:7036:7053	1358551	3	True				
ANR	1358747	AssignmentExpression	pw -> ptr += ccount		1358551	0		+=			
ANR	1358748	PtrMemberAccess	pw -> ptr		1358551	0					
ANR	1358749	Identifier	pw		1358551	0					
ANR	1358750	Identifier	ptr		1358551	1					
ANR	1358751	Identifier	ccount		1358551	1					
ANR	1358752	IfStatement	if ( ( ss -> write_count -= ccount ) > 0 )		1358551	4					
ANR	1358753	Condition	( ss -> write_count -= ccount ) > 0	226:16:7071:7101	1358551	0	True				
ANR	1358754	RelationalExpression	( ss -> write_count -= ccount ) > 0		1358551	0		>			
ANR	1358755	AssignmentExpression	ss -> write_count -= ccount		1358551	0		-=			
ANR	1358756	PtrMemberAccess	ss -> write_count		1358551	0					
ANR	1358757	Identifier	ss		1358551	0					
ANR	1358758	Identifier	write_count		1358551	1					
ANR	1358759	Identifier	ccount		1358551	1					
ANR	1358760	PrimaryExpression	0		1358551	1					
ANR	1358761	CompoundStatement		25:49:1021:1021	1358551	1					
ANR	1358762	ExpressionStatement	status = 1	227:16:7122:7132	1358551	0	True				
ANR	1358763	AssignmentExpression	status = 1		1358551	0		=			
ANR	1358764	Identifier	status		1358551	0					
ANR	1358765	PrimaryExpression	1		1358551	1					
ANR	1358766	BreakStatement	break ;	228:16:7150:7155	1358551	1	True				
ANR	1358767	IfStatement	if ( ss -> read_count )		1358551	4					
ANR	1358768	Condition	ss -> read_count	231:12:7193:7206	1358551	0	True				
ANR	1358769	PtrMemberAccess	ss -> read_count		1358551	0					
ANR	1358770	Identifier	ss		1358551	0					
ANR	1358771	Identifier	read_count		1358551	1					
ANR	1358772	CompoundStatement		33:12:1249:1289	1358551	1					
ANR	1358773	IdentifierDeclStatement	int rcount = rlimit - pr -> ptr ;	233:12:7289:7318	1358551	0	True				
ANR	1358774	IdentifierDecl	rcount = rlimit - pr -> ptr		1358551	0					
ANR	1358775	IdentifierDeclType	int		1358551	0					
ANR	1358776	Identifier	rcount		1358551	1					
ANR	1358777	AssignmentExpression	rcount = rlimit - pr -> ptr		1358551	2		=			
ANR	1358778	Identifier	rcount		1358551	0					
ANR	1358779	AdditiveExpression	rlimit - pr -> ptr		1358551	1		-			
ANR	1358780	Identifier	rlimit		1358551	0					
ANR	1358781	PtrMemberAccess	pr -> ptr		1358551	1					
ANR	1358782	Identifier	pr		1358551	0					
ANR	1358783	Identifier	ptr		1358551	1					
ANR	1358784	IdentifierDeclStatement	"int ccount = min ( rcount , ss -> read_count ) ;"	234:12:7332:7372	1358551	1	True				
ANR	1358785	IdentifierDecl	"ccount = min ( rcount , ss -> read_count )"		1358551	0					
ANR	1358786	IdentifierDeclType	int		1358551	0					
ANR	1358787	Identifier	ccount		1358551	1					
ANR	1358788	AssignmentExpression	"ccount = min ( rcount , ss -> read_count )"		1358551	2		=			
ANR	1358789	Identifier	ccount		1358551	0					
ANR	1358790	CallExpression	"min ( rcount , ss -> read_count )"		1358551	1					
ANR	1358791	Callee	min		1358551	0					
ANR	1358792	Identifier	min		1358551	0					
ANR	1358793	ArgumentList	rcount		1358551	1					
ANR	1358794	Argument	rcount		1358551	0					
ANR	1358795	Identifier	rcount		1358551	0					
ANR	1358796	Argument	ss -> read_count		1358551	1					
ANR	1358797	PtrMemberAccess	ss -> read_count		1358551	0					
ANR	1358798	Identifier	ss		1358551	0					
ANR	1358799	Identifier	read_count		1358551	1					
ANR	1358800	IfStatement	if ( rcount == 0 && last )		1358551	2					
ANR	1358801	Condition	rcount == 0 && last	236:16:7391:7409	1358551	0	True				
ANR	1358802	AndExpression	rcount == 0 && last		1358551	0		&&			
ANR	1358803	EqualityExpression	rcount == 0		1358551	0		==			
ANR	1358804	Identifier	rcount		1358551	0					
ANR	1358805	PrimaryExpression	0		1358551	1					
ANR	1358806	Identifier	last		1358551	1					
ANR	1358807	BreakStatement	break ;	237:16:7428:7433	1358551	1	True				
ANR	1358808	ExpressionStatement	"memcpy ( ss -> lbuf + raster - ss -> read_count , pr -> ptr + 1 , ccount )"	238:12:7447:7529	1358551	3	True				
ANR	1358809	CallExpression	"memcpy ( ss -> lbuf + raster - ss -> read_count , pr -> ptr + 1 , ccount )"		1358551	0					
ANR	1358810	Callee	memcpy		1358551	0					
ANR	1358811	Identifier	memcpy		1358551	0					
ANR	1358812	ArgumentList	ss -> lbuf + raster - ss -> read_count		1358551	1					
ANR	1358813	Argument	ss -> lbuf + raster - ss -> read_count		1358551	0					
ANR	1358814	AdditiveExpression	ss -> lbuf + raster - ss -> read_count		1358551	0		+			
ANR	1358815	PtrMemberAccess	ss -> lbuf		1358551	0					
ANR	1358816	Identifier	ss		1358551	0					
ANR	1358817	Identifier	lbuf		1358551	1					
ANR	1358818	AdditiveExpression	raster - ss -> read_count		1358551	1		-			
ANR	1358819	Identifier	raster		1358551	0					
ANR	1358820	PtrMemberAccess	ss -> read_count		1358551	1					
ANR	1358821	Identifier	ss		1358551	0					
ANR	1358822	Identifier	read_count		1358551	1					
ANR	1358823	Argument	pr -> ptr + 1		1358551	1					
ANR	1358824	AdditiveExpression	pr -> ptr + 1		1358551	0		+			
ANR	1358825	PtrMemberAccess	pr -> ptr		1358551	0					
ANR	1358826	Identifier	pr		1358551	0					
ANR	1358827	Identifier	ptr		1358551	1					
ANR	1358828	PrimaryExpression	1		1358551	1					
ANR	1358829	Argument	ccount		1358551	2					
ANR	1358830	Identifier	ccount		1358551	0					
ANR	1358831	ExpressionStatement	pr -> ptr += ccount	240:12:7543:7560	1358551	4	True				
ANR	1358832	AssignmentExpression	pr -> ptr += ccount		1358551	0		+=			
ANR	1358833	PtrMemberAccess	pr -> ptr		1358551	0					
ANR	1358834	Identifier	pr		1358551	0					
ANR	1358835	Identifier	ptr		1358551	1					
ANR	1358836	Identifier	ccount		1358551	1					
ANR	1358837	IfStatement	if ( ( ss -> read_count -= ccount ) != 0 )		1358551	5					
ANR	1358838	Condition	( ss -> read_count -= ccount ) != 0	241:16:7578:7608	1358551	0	True				
ANR	1358839	EqualityExpression	( ss -> read_count -= ccount ) != 0		1358551	0		!=			
ANR	1358840	AssignmentExpression	ss -> read_count -= ccount		1358551	0		-=			
ANR	1358841	PtrMemberAccess	ss -> read_count		1358551	0					
ANR	1358842	Identifier	ss		1358551	0					
ANR	1358843	Identifier	read_count		1358551	1					
ANR	1358844	Identifier	ccount		1358551	1					
ANR	1358845	PrimaryExpression	0		1358551	1					
ANR	1358846	BreakStatement	break ;	242:16:7627:7632	1358551	1	True				
ANR	1358847	CompoundStatement		50:12:1801:1834	1358551	5					
ANR	1358848	IdentifierDeclStatement	byte * end = ss -> lbuf + raster - 1 ;	249:12:7793:7826	1358551	0	True				
ANR	1358849	IdentifierDecl	* end = ss -> lbuf + raster - 1		1358551	0					
ANR	1358850	IdentifierDeclType	byte *		1358551	0					
ANR	1358851	Identifier	end		1358551	1					
ANR	1358852	AssignmentExpression	* end = ss -> lbuf + raster - 1		1358551	2		=			
ANR	1358853	Identifier	end		1358551	0					
ANR	1358854	AdditiveExpression	ss -> lbuf + raster - 1		1358551	1		+			
ANR	1358855	PtrMemberAccess	ss -> lbuf		1358551	0					
ANR	1358856	Identifier	ss		1358551	0					
ANR	1358857	Identifier	lbuf		1358551	1					
ANR	1358858	AdditiveExpression	raster - 1		1358551	1		-			
ANR	1358859	Identifier	raster		1358551	0					
ANR	1358860	PrimaryExpression	1		1358551	1					
ANR	1358861	IdentifierDeclStatement	byte end_bit = * end & end_mask ;	250:12:7840:7870	1358551	1	True				
ANR	1358862	IdentifierDecl	end_bit = * end & end_mask		1358551	0					
ANR	1358863	IdentifierDeclType	byte		1358551	0					
ANR	1358864	Identifier	end_bit		1358551	1					
ANR	1358865	AssignmentExpression	end_bit = * end & end_mask		1358551	2		=			
ANR	1358866	Identifier	end_bit		1358551	0					
ANR	1358867	BitAndExpression	* end & end_mask		1358551	1		&			
ANR	1358868	UnaryOperationExpression	* end		1358551	0					
ANR	1358869	UnaryOperator	*		1358551	0					
ANR	1358870	Identifier	end		1358551	1					
ANR	1358871	Identifier	end_mask		1358551	1					
ANR	1358872	IdentifierDeclStatement	byte not_bit = end_bit ^ end_mask ;	251:12:7884:7917	1358551	2	True				
ANR	1358873	IdentifierDecl	not_bit = end_bit ^ end_mask		1358551	0					
ANR	1358874	IdentifierDeclType	byte		1358551	0					
ANR	1358875	Identifier	not_bit		1358551	1					
ANR	1358876	AssignmentExpression	not_bit = end_bit ^ end_mask		1358551	2		=			
ANR	1358877	Identifier	not_bit		1358551	0					
ANR	1358878	ExclusiveOrExpression	end_bit ^ end_mask		1358551	1		^			
ANR	1358879	Identifier	end_bit		1358551	0					
ANR	1358880	Identifier	end_mask		1358551	1					
ANR	1358881	ExpressionStatement	* end &= - end_mask	253:12:7932:7949	1358551	3	True				
ANR	1358882	AssignmentExpression	* end &= - end_mask		1358551	0		&=			
ANR	1358883	UnaryOperationExpression	* end		1358551	0					
ANR	1358884	UnaryOperator	*		1358551	0					
ANR	1358885	Identifier	end		1358551	1					
ANR	1358886	UnaryOperationExpression	- end_mask		1358551	1					
ANR	1358887	UnaryOperator	-		1358551	0					
ANR	1358888	Identifier	end_mask		1358551	1					
ANR	1358889	IfStatement	if ( end_mask == 1 )		1358551	4					
ANR	1358890	Condition	end_mask == 1	254:16:7967:7979	1358551	0	True				
ANR	1358891	EqualityExpression	end_mask == 1		1358551	0		==			
ANR	1358892	Identifier	end_mask		1358551	0					
ANR	1358893	PrimaryExpression	1		1358551	1					
ANR	1358894	ExpressionStatement	end [ 1 ] = ( end_bit ? 0x40 : 0x80 )	255:16:7998:8030	1358551	1	True				
ANR	1358895	AssignmentExpression	end [ 1 ] = ( end_bit ? 0x40 : 0x80 )		1358551	0		=			
ANR	1358896	ArrayIndexing	end [ 1 ]		1358551	0					
ANR	1358897	Identifier	end		1358551	0					
ANR	1358898	PrimaryExpression	1		1358551	1					
ANR	1358899	ConditionalExpression	end_bit ? 0x40 : 0x80		1358551	1					
ANR	1358900	Condition	end_bit		1358551	0					
ANR	1358901	Identifier	end_bit		1358551	0					
ANR	1358902	PrimaryExpression	0x40		1358551	1					
ANR	1358903	PrimaryExpression	0x80		1358551	2					
ANR	1358904	ElseStatement	else		1358551	0					
ANR	1358905	IfStatement	if ( end_mask == 2 )		1358551	0					
ANR	1358906	Condition	end_mask == 2	256:21:8053:8065	1358551	0	True				
ANR	1358907	EqualityExpression	end_mask == 2		1358551	0		==			
ANR	1358908	Identifier	end_mask		1358551	0					
ANR	1358909	PrimaryExpression	2		1358551	1					
ANR	1358910	ExpressionStatement	"* end |= not_bit >> 1 , end [ 1 ] = end_bit << 7"	257:16:8084:8127	1358551	1	True				
ANR	1358911	Expression	"* end |= not_bit >> 1 , end [ 1 ] = end_bit << 7"		1358551	0					
ANR	1358912	AssignmentExpression	* end |= not_bit >> 1		1358551	0		|=			
ANR	1358913	UnaryOperationExpression	* end		1358551	0					
ANR	1358914	UnaryOperator	*		1358551	0					
ANR	1358915	Identifier	end		1358551	1					
ANR	1358916	ShiftExpression	not_bit >> 1		1358551	1		>>			
ANR	1358917	Identifier	not_bit		1358551	0					
ANR	1358918	PrimaryExpression	1		1358551	1					
ANR	1358919	AssignmentExpression	end [ 1 ] = end_bit << 7		1358551	1		=			
ANR	1358920	ArrayIndexing	end [ 1 ]		1358551	0					
ANR	1358921	Identifier	end		1358551	0					
ANR	1358922	PrimaryExpression	1		1358551	1					
ANR	1358923	ShiftExpression	end_bit << 7		1358551	1		<<			
ANR	1358924	Identifier	end_bit		1358551	0					
ANR	1358925	PrimaryExpression	7		1358551	1					
ANR	1358926	ElseStatement	else		1358551	0					
ANR	1358927	ExpressionStatement	* end |= ( not_bit >> 1 ) | ( end_bit >> 2 )	259:16:8162:8201	1358551	0	True				
ANR	1358928	AssignmentExpression	* end |= ( not_bit >> 1 ) | ( end_bit >> 2 )		1358551	0		|=			
ANR	1358929	UnaryOperationExpression	* end		1358551	0					
ANR	1358930	UnaryOperator	*		1358551	0					
ANR	1358931	Identifier	end		1358551	1					
ANR	1358932	InclusiveOrExpression	( not_bit >> 1 ) | ( end_bit >> 2 )		1358551	1		|			
ANR	1358933	ShiftExpression	not_bit >> 1		1358551	0		>>			
ANR	1358934	Identifier	not_bit		1358551	0					
ANR	1358935	PrimaryExpression	1		1358551	1					
ANR	1358936	ShiftExpression	end_bit >> 2		1358551	1		>>			
ANR	1358937	Identifier	end_bit		1358551	0					
ANR	1358938	PrimaryExpression	2		1358551	1					
ANR	1358939	IfStatement	if ( wlimit - pw -> ptr >= ss -> max_code_bytes )		1358551	6					
ANR	1358940	Condition	wlimit - pw -> ptr >= ss -> max_code_bytes	265:12:8370:8407	1358551	0	True				
ANR	1358941	RelationalExpression	wlimit - pw -> ptr >= ss -> max_code_bytes		1358551	0		>=			
ANR	1358942	AdditiveExpression	wlimit - pw -> ptr		1358551	0		-			
ANR	1358943	Identifier	wlimit		1358551	0					
ANR	1358944	PtrMemberAccess	pw -> ptr		1358551	1					
ANR	1358945	Identifier	pw		1358551	0					
ANR	1358946	Identifier	ptr		1358551	1					
ANR	1358947	PtrMemberAccess	ss -> max_code_bytes		1358551	1					
ANR	1358948	Identifier	ss		1358551	0					
ANR	1358949	Identifier	max_code_bytes		1358551	1					
ANR	1358950	CompoundStatement		64:52:2327:2327	1358551	1					
ANR	1358951	ExpressionStatement	w = * pw	266:12:8424:8431	1358551	0	True				
ANR	1358952	AssignmentExpression	w = * pw		1358551	0		=			
ANR	1358953	Identifier	w		1358551	0					
ANR	1358954	UnaryOperationExpression	* pw		1358551	1					
ANR	1358955	UnaryOperator	*		1358551	0					
ANR	1358956	Identifier	pw		1358551	1					
ANR	1358957	ElseStatement	else		1358551	0					
ANR	1358958	CompoundStatement		66:15:2365:2365	1358551	0					
ANR	1358959	ExpressionStatement	w . ptr = ss -> lcode - 1	268:12:8462:8483	1358551	0	True				
ANR	1358960	AssignmentExpression	w . ptr = ss -> lcode - 1		1358551	0		=			
ANR	1358961	MemberAccess	w . ptr		1358551	0					
ANR	1358962	Identifier	w		1358551	0					
ANR	1358963	Identifier	ptr		1358551	1					
ANR	1358964	AdditiveExpression	ss -> lcode - 1		1358551	1		-			
ANR	1358965	PtrMemberAccess	ss -> lcode		1358551	0					
ANR	1358966	Identifier	ss		1358551	0					
ANR	1358967	Identifier	lcode		1358551	1					
ANR	1358968	PrimaryExpression	1		1358551	1					
ANR	1358969	ExpressionStatement	w . limit = w . ptr + ss -> max_code_bytes	269:12:8497:8533	1358551	1	True				
ANR	1358970	AssignmentExpression	w . limit = w . ptr + ss -> max_code_bytes		1358551	0		=			
ANR	1358971	MemberAccess	w . limit		1358551	0					
ANR	1358972	Identifier	w		1358551	0					
ANR	1358973	Identifier	limit		1358551	1					
ANR	1358974	AdditiveExpression	w . ptr + ss -> max_code_bytes		1358551	1		+			
ANR	1358975	MemberAccess	w . ptr		1358551	0					
ANR	1358976	Identifier	w		1358551	0					
ANR	1358977	Identifier	ptr		1358551	1					
ANR	1358978	PtrMemberAccess	ss -> max_code_bytes		1358551	1					
ANR	1358979	Identifier	ss		1358551	0					
ANR	1358980	Identifier	max_code_bytes		1358551	1					
ANR	1358981	IfStatement	if ( ss -> K > 0 )		1358551	7					
ANR	1358982	Condition	ss -> K > 0	272:12:8570:8578	1358551	0	True				
ANR	1358983	RelationalExpression	ss -> K > 0		1358551	0		>			
ANR	1358984	PtrMemberAccess	ss -> K		1358551	0					
ANR	1358985	Identifier	ss		1358551	0					
ANR	1358986	Identifier	K		1358551	1					
ANR	1358987	PrimaryExpression	0		1358551	1					
ANR	1358988	CompoundStatement		71:23:2498:2498	1358551	1					
ANR	1358989	ExpressionStatement	"if_debug2m ( 'w' , ss -> memory , ""[w2]new %d-D row, k_left=%d\\n"" , ( ss -> k_left == 1 ? 1 : 2 ) , ss -> k_left )"	273:12:8595:8717	1358551	0	True				
ANR	1358990	CallExpression	"if_debug2m ( 'w' , ss -> memory , ""[w2]new %d-D row, k_left=%d\\n"" , ( ss -> k_left == 1 ? 1 : 2 ) , ss -> k_left )"		1358551	0					
ANR	1358991	Callee	if_debug2m		1358551	0					
ANR	1358992	Identifier	if_debug2m		1358551	0					
ANR	1358993	ArgumentList	'w'		1358551	1					
ANR	1358994	Argument	'w'		1358551	0					
ANR	1358995	PrimaryExpression	'w'		1358551	0					
ANR	1358996	Argument	ss -> memory		1358551	1					
ANR	1358997	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1358998	Identifier	ss		1358551	0					
ANR	1358999	Identifier	memory		1358551	1					
ANR	1359000	Argument	"""[w2]new %d-D row, k_left=%d\\n"""		1358551	2					
ANR	1359001	PrimaryExpression	"""[w2]new %d-D row, k_left=%d\\n"""		1358551	0					
ANR	1359002	Argument	ss -> k_left == 1 ? 1 : 2		1358551	3					
ANR	1359003	ConditionalExpression	ss -> k_left == 1 ? 1 : 2		1358551	0					
ANR	1359004	Condition	ss -> k_left == 1		1358551	0					
ANR	1359005	EqualityExpression	ss -> k_left == 1		1358551	0		==			
ANR	1359006	PtrMemberAccess	ss -> k_left		1358551	0					
ANR	1359007	Identifier	ss		1358551	0					
ANR	1359008	Identifier	k_left		1358551	1					
ANR	1359009	PrimaryExpression	1		1358551	1					
ANR	1359010	PrimaryExpression	1		1358551	1					
ANR	1359011	PrimaryExpression	2		1358551	2					
ANR	1359012	Argument	ss -> k_left		1358551	4					
ANR	1359013	PtrMemberAccess	ss -> k_left		1358551	0					
ANR	1359014	Identifier	ss		1358551	0					
ANR	1359015	Identifier	k_left		1358551	1					
ANR	1359016	ElseStatement	else		1358551	0					
ANR	1359017	CompoundStatement		74:15:2651:2651	1358551	0					
ANR	1359018	ExpressionStatement	"if_debug1m ( 'w' , ss -> memory , ""[w%d]new row\\n"" , ( ss -> K < 0 ? 2 : 1 ) )"	276:12:8748:8814	1358551	0	True				
ANR	1359019	CallExpression	"if_debug1m ( 'w' , ss -> memory , ""[w%d]new row\\n"" , ( ss -> K < 0 ? 2 : 1 ) )"		1358551	0					
ANR	1359020	Callee	if_debug1m		1358551	0					
ANR	1359021	Identifier	if_debug1m		1358551	0					
ANR	1359022	ArgumentList	'w'		1358551	1					
ANR	1359023	Argument	'w'		1358551	0					
ANR	1359024	PrimaryExpression	'w'		1358551	0					
ANR	1359025	Argument	ss -> memory		1358551	1					
ANR	1359026	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1359027	Identifier	ss		1358551	0					
ANR	1359028	Identifier	memory		1358551	1					
ANR	1359029	Argument	"""[w%d]new row\\n"""		1358551	2					
ANR	1359030	PrimaryExpression	"""[w%d]new row\\n"""		1358551	0					
ANR	1359031	Argument	ss -> K < 0 ? 2 : 1		1358551	3					
ANR	1359032	ConditionalExpression	ss -> K < 0 ? 2 : 1		1358551	0					
ANR	1359033	Condition	ss -> K < 0		1358551	0					
ANR	1359034	RelationalExpression	ss -> K < 0		1358551	0		<			
ANR	1359035	PtrMemberAccess	ss -> K		1358551	0					
ANR	1359036	Identifier	ss		1358551	0					
ANR	1359037	Identifier	K		1358551	1					
ANR	1359038	PrimaryExpression	0		1358551	1					
ANR	1359039	PrimaryExpression	2		1358551	1					
ANR	1359040	PrimaryExpression	1		1358551	2					
ANR	1359041	IfStatement	if ( ss -> EndOfLine )		1358551	8					
ANR	1359042	Condition	ss -> EndOfLine	282:12:8939:8951	1358551	0	True				
ANR	1359043	PtrMemberAccess	ss -> EndOfLine		1358551	0					
ANR	1359044	Identifier	ss		1358551	0					
ANR	1359045	Identifier	EndOfLine		1358551	1					
ANR	1359046	CompoundStatement		86:12:3036:3047	1358551	1					
ANR	1359047	IdentifierDeclStatement	const cfe_run * rp = ( ss -> K <= 0 ? & cf_run_eol : ss -> k_left > 1 ? & cf2_run_eol_2d : & cf2_run_eol_1d ) ;	283:12:8968:9105	1358551	0	True				
ANR	1359048	IdentifierDecl	* rp = ( ss -> K <= 0 ? & cf_run_eol : ss -> k_left > 1 ? & cf2_run_eol_2d : & cf2_run_eol_1d )		1358551	0					
ANR	1359049	IdentifierDeclType	const cfe_run *		1358551	0					
ANR	1359050	Identifier	rp		1358551	1					
ANR	1359051	AssignmentExpression	* rp = ( ss -> K <= 0 ? & cf_run_eol : ss -> k_left > 1 ? & cf2_run_eol_2d : & cf2_run_eol_1d )		1358551	2		=			
ANR	1359052	Identifier	rp		1358551	0					
ANR	1359053	ConditionalExpression	ss -> K <= 0 ? & cf_run_eol : ss -> k_left > 1 ? & cf2_run_eol_2d : & cf2_run_eol_1d		1358551	1					
ANR	1359054	Condition	ss -> K <= 0		1358551	0					
ANR	1359055	RelationalExpression	ss -> K <= 0		1358551	0		<=			
ANR	1359056	PtrMemberAccess	ss -> K		1358551	0					
ANR	1359057	Identifier	ss		1358551	0					
ANR	1359058	Identifier	K		1358551	1					
ANR	1359059	PrimaryExpression	0		1358551	1					
ANR	1359060	UnaryOperationExpression	& cf_run_eol		1358551	1					
ANR	1359061	UnaryOperator	&		1358551	0					
ANR	1359062	Identifier	cf_run_eol		1358551	1					
ANR	1359063	ConditionalExpression	ss -> k_left > 1 ? & cf2_run_eol_2d : & cf2_run_eol_1d		1358551	2					
ANR	1359064	Condition	ss -> k_left > 1		1358551	0					
ANR	1359065	RelationalExpression	ss -> k_left > 1		1358551	0		>			
ANR	1359066	PtrMemberAccess	ss -> k_left		1358551	0					
ANR	1359067	Identifier	ss		1358551	0					
ANR	1359068	Identifier	k_left		1358551	1					
ANR	1359069	PrimaryExpression	1		1358551	1					
ANR	1359070	UnaryOperationExpression	& cf2_run_eol_2d		1358551	1					
ANR	1359071	UnaryOperator	&		1358551	0					
ANR	1359072	Identifier	cf2_run_eol_2d		1358551	1					
ANR	1359073	UnaryOperationExpression	& cf2_run_eol_1d		1358551	2					
ANR	1359074	UnaryOperator	&		1358551	0					
ANR	1359075	Identifier	cf2_run_eol_1d		1358551	1					
ANR	1359076	IdentifierDeclStatement	cfe_run run ;	287:12:9119:9130	1358551	1	True				
ANR	1359077	IdentifierDecl	run		1358551	0					
ANR	1359078	IdentifierDeclType	cfe_run		1358551	0					
ANR	1359079	Identifier	run		1358551	1					
ANR	1359080	ExpressionStatement	hce_declare_state	289:12:9145:9162	1358551	2	True				
ANR	1359081	Identifier	hce_declare_state		1358551	0					
ANR	1359082	ExpressionStatement	hce_load_state ( )	291:12:9177:9193	1358551	3	True				
ANR	1359083	CallExpression	hce_load_state ( )		1358551	0					
ANR	1359084	Callee	hce_load_state		1358551	0					
ANR	1359085	Identifier	hce_load_state		1358551	0					
ANR	1359086	ArgumentList			1358551	1					
ANR	1359087	IfStatement	if ( ss -> EncodedByteAlign )		1358551	4					
ANR	1359088	Condition	ss -> EncodedByteAlign	292:16:9211:9230	1358551	0	True				
ANR	1359089	PtrMemberAccess	ss -> EncodedByteAlign		1358551	0					
ANR	1359090	Identifier	ss		1358551	0					
ANR	1359091	Identifier	EncodedByteAlign		1358551	1					
ANR	1359092	CompoundStatement		91:38:3150:3150	1358551	1					
ANR	1359093	ExpressionStatement	run = * rp	293:16:9251:9260	1358551	0	True				
ANR	1359094	AssignmentExpression	run = * rp		1358551	0		=			
ANR	1359095	Identifier	run		1358551	0					
ANR	1359096	UnaryOperationExpression	* rp		1358551	1					
ANR	1359097	UnaryOperator	*		1358551	0					
ANR	1359098	Identifier	rp		1358551	1					
ANR	1359099	ExpressionStatement	run . code_length += ( bits_left - run_eol_code_length ) & 7	296:16:9375:9451	1358551	1	True				
ANR	1359100	AssignmentExpression	run . code_length += ( bits_left - run_eol_code_length ) & 7		1358551	0		+=			
ANR	1359101	MemberAccess	run . code_length		1358551	0					
ANR	1359102	Identifier	run		1358551	0					
ANR	1359103	Identifier	code_length		1358551	1					
ANR	1359104	BitAndExpression	( bits_left - run_eol_code_length ) & 7		1358551	1		&			
ANR	1359105	AdditiveExpression	bits_left - run_eol_code_length		1358551	0		-			
ANR	1359106	Identifier	bits_left		1358551	0					
ANR	1359107	Identifier	run_eol_code_length		1358551	1					
ANR	1359108	PrimaryExpression	7		1358551	1					
ANR	1359109	IfStatement	if ( run . code_length > 16 )		1358551	2					
ANR	1359110	Condition	run . code_length > 16	298:20:9473:9492	1358551	0	True				
ANR	1359111	RelationalExpression	run . code_length > 16		1358551	0		>			
ANR	1359112	MemberAccess	run . code_length		1358551	0					
ANR	1359113	Identifier	run		1358551	0					
ANR	1359114	Identifier	code_length		1358551	1					
ANR	1359115	PrimaryExpression	16		1358551	1					
ANR	1359116	ExpressionStatement	"bits_left -= run . code_length & 7 , run . code_length = 16"	299:20:9527:9605	1358551	1	True				
ANR	1359117	Expression	"bits_left -= run . code_length & 7 , run . code_length = 16"		1358551	0					
ANR	1359118	AssignmentExpression	bits_left -= run . code_length & 7		1358551	0		-=			
ANR	1359119	Identifier	bits_left		1358551	0					
ANR	1359120	BitAndExpression	run . code_length & 7		1358551	1		&			
ANR	1359121	MemberAccess	run . code_length		1358551	0					
ANR	1359122	Identifier	run		1358551	0					
ANR	1359123	Identifier	code_length		1358551	1					
ANR	1359124	PrimaryExpression	7		1358551	1					
ANR	1359125	AssignmentExpression	run . code_length = 16		1358551	1		=			
ANR	1359126	MemberAccess	run . code_length		1358551	0					
ANR	1359127	Identifier	run		1358551	0					
ANR	1359128	Identifier	code_length		1358551	1					
ANR	1359129	PrimaryExpression	16		1358551	1					
ANR	1359130	ExpressionStatement	rp = & run	301:16:9623:9632	1358551	3	True				
ANR	1359131	AssignmentExpression	rp = & run		1358551	0		=			
ANR	1359132	Identifier	rp		1358551	0					
ANR	1359133	UnaryOperationExpression	& run		1358551	1					
ANR	1359134	UnaryOperator	&		1358551	0					
ANR	1359135	Identifier	run		1358551	1					
ANR	1359136	ExpressionStatement	"hc_put_code ( ss , w . ptr , rp )"	303:12:9660:9686	1358551	5	True				
ANR	1359137	CallExpression	"hc_put_code ( ss , w . ptr , rp )"		1358551	0					
ANR	1359138	Callee	hc_put_code		1358551	0					
ANR	1359139	Identifier	hc_put_code		1358551	0					
ANR	1359140	ArgumentList	ss		1358551	1					
ANR	1359141	Argument	ss		1358551	0					
ANR	1359142	Identifier	ss		1358551	0					
ANR	1359143	Argument	w . ptr		1358551	1					
ANR	1359144	MemberAccess	w . ptr		1358551	0					
ANR	1359145	Identifier	w		1358551	0					
ANR	1359146	Identifier	ptr		1358551	1					
ANR	1359147	Argument	rp		1358551	2					
ANR	1359148	Identifier	rp		1358551	0					
ANR	1359149	ExpressionStatement	hce_store_state ( )	304:12:9700:9717	1358551	6	True				
ANR	1359150	CallExpression	hce_store_state ( )		1358551	0					
ANR	1359151	Callee	hce_store_state		1358551	0					
ANR	1359152	Identifier	hce_store_state		1358551	0					
ANR	1359153	ArgumentList			1358551	1					
ANR	1359154	ElseStatement	else		1358551	0					
ANR	1359155	IfStatement	if ( ss -> EncodedByteAlign )		1358551	0					
ANR	1359156	Condition	ss -> EncodedByteAlign	305:19:9738:9757	1358551	0	True				
ANR	1359157	PtrMemberAccess	ss -> EncodedByteAlign		1358551	0					
ANR	1359158	Identifier	ss		1358551	0					
ANR	1359159	Identifier	EncodedByteAlign		1358551	1					
ANR	1359160	ExpressionStatement	ss -> bits_left &= ~7	306:12:9772:9791	1358551	1	True				
ANR	1359161	AssignmentExpression	ss -> bits_left &= ~7		1358551	0		&=			
ANR	1359162	PtrMemberAccess	ss -> bits_left		1358551	0					
ANR	1359163	Identifier	ss		1358551	0					
ANR	1359164	Identifier	bits_left		1358551	1					
ANR	1359165	Identifier	~7		1358551	1					
ANR	1359166	IfStatement	if ( ss -> K == 0 )		1358551	9					
ANR	1359167	Condition	ss -> K == 0	308:12:9836:9845	1358551	0	True				
ANR	1359168	EqualityExpression	ss -> K == 0		1358551	0		==			
ANR	1359169	PtrMemberAccess	ss -> K		1358551	0					
ANR	1359170	Identifier	ss		1358551	0					
ANR	1359171	Identifier	K		1358551	1					
ANR	1359172	PrimaryExpression	0		1358551	1					
ANR	1359173	ExpressionStatement	"cf_encode_1d ( ss , ss -> lbuf , & w )"	309:12:9860:9890	1358551	1	True				
ANR	1359174	CallExpression	"cf_encode_1d ( ss , ss -> lbuf , & w )"		1358551	0					
ANR	1359175	Callee	cf_encode_1d		1358551	0					
ANR	1359176	Identifier	cf_encode_1d		1358551	0					
ANR	1359177	ArgumentList	ss		1358551	1					
ANR	1359178	Argument	ss		1358551	0					
ANR	1359179	Identifier	ss		1358551	0					
ANR	1359180	Argument	ss -> lbuf		1358551	1					
ANR	1359181	PtrMemberAccess	ss -> lbuf		1358551	0					
ANR	1359182	Identifier	ss		1358551	0					
ANR	1359183	Identifier	lbuf		1358551	1					
ANR	1359184	Argument	& w		1358551	2					
ANR	1359185	UnaryOperationExpression	& w		1358551	0					
ANR	1359186	UnaryOperator	&		1358551	0					
ANR	1359187	Identifier	w		1358551	1					
ANR	1359188	ElseStatement	else		1358551	0					
ANR	1359189	IfStatement	if ( ss -> K < 0 )		1358551	0					
ANR	1359190	Condition	ss -> K < 0	310:17:9924:9932	1358551	0	True				
ANR	1359191	RelationalExpression	ss -> K < 0		1358551	0		<			
ANR	1359192	PtrMemberAccess	ss -> K		1358551	0					
ANR	1359193	Identifier	ss		1358551	0					
ANR	1359194	Identifier	K		1358551	1					
ANR	1359195	PrimaryExpression	0		1358551	1					
ANR	1359196	ExpressionStatement	"cf_encode_2d ( ss , ss -> lbuf , & w , ss -> lprev )"	311:12:9947:9988	1358551	1	True				
ANR	1359197	CallExpression	"cf_encode_2d ( ss , ss -> lbuf , & w , ss -> lprev )"		1358551	0					
ANR	1359198	Callee	cf_encode_2d		1358551	0					
ANR	1359199	Identifier	cf_encode_2d		1358551	0					
ANR	1359200	ArgumentList	ss		1358551	1					
ANR	1359201	Argument	ss		1358551	0					
ANR	1359202	Identifier	ss		1358551	0					
ANR	1359203	Argument	ss -> lbuf		1358551	1					
ANR	1359204	PtrMemberAccess	ss -> lbuf		1358551	0					
ANR	1359205	Identifier	ss		1358551	0					
ANR	1359206	Identifier	lbuf		1358551	1					
ANR	1359207	Argument	& w		1358551	2					
ANR	1359208	UnaryOperationExpression	& w		1358551	0					
ANR	1359209	UnaryOperator	&		1358551	0					
ANR	1359210	Identifier	w		1358551	1					
ANR	1359211	Argument	ss -> lprev		1358551	3					
ANR	1359212	PtrMemberAccess	ss -> lprev		1358551	0					
ANR	1359213	Identifier	ss		1358551	0					
ANR	1359214	Identifier	lprev		1358551	1					
ANR	1359215	ElseStatement	else		1358551	0					
ANR	1359216	IfStatement	if ( -- ( ss -> k_left ) )		1358551	0					
ANR	1359217	Condition	-- ( ss -> k_left )	312:17:10022:10035	1358551	0	True				
ANR	1359218	UnaryExpression	-- ( ss -> k_left )		1358551	0					
ANR	1359219	IncDec	--		1358551	0					
ANR	1359220	PtrMemberAccess	ss -> k_left		1358551	1					
ANR	1359221	Identifier	ss		1358551	0					
ANR	1359222	Identifier	k_left		1358551	1					
ANR	1359223	ExpressionStatement	"cf_encode_2d ( ss , ss -> lbuf , & w , ss -> lprev )"	313:12:10071:10112	1358551	1	True				
ANR	1359224	CallExpression	"cf_encode_2d ( ss , ss -> lbuf , & w , ss -> lprev )"		1358551	0					
ANR	1359225	Callee	cf_encode_2d		1358551	0					
ANR	1359226	Identifier	cf_encode_2d		1358551	0					
ANR	1359227	ArgumentList	ss		1358551	1					
ANR	1359228	Argument	ss		1358551	0					
ANR	1359229	Identifier	ss		1358551	0					
ANR	1359230	Argument	ss -> lbuf		1358551	1					
ANR	1359231	PtrMemberAccess	ss -> lbuf		1358551	0					
ANR	1359232	Identifier	ss		1358551	0					
ANR	1359233	Identifier	lbuf		1358551	1					
ANR	1359234	Argument	& w		1358551	2					
ANR	1359235	UnaryOperationExpression	& w		1358551	0					
ANR	1359236	UnaryOperator	&		1358551	0					
ANR	1359237	Identifier	w		1358551	1					
ANR	1359238	Argument	ss -> lprev		1358551	3					
ANR	1359239	PtrMemberAccess	ss -> lprev		1358551	0					
ANR	1359240	Identifier	ss		1358551	0					
ANR	1359241	Identifier	lprev		1358551	1					
ANR	1359242	ElseStatement	else		1358551	0					
ANR	1359243	CompoundStatement		113:13:4044:4044	1358551	0					
ANR	1359244	ExpressionStatement	"cf_encode_1d ( ss , ss -> lbuf , & w )"	315:12:10164:10194	1358551	0	True				
ANR	1359245	CallExpression	"cf_encode_1d ( ss , ss -> lbuf , & w )"		1358551	0					
ANR	1359246	Callee	cf_encode_1d		1358551	0					
ANR	1359247	Identifier	cf_encode_1d		1358551	0					
ANR	1359248	ArgumentList	ss		1358551	1					
ANR	1359249	Argument	ss		1358551	0					
ANR	1359250	Identifier	ss		1358551	0					
ANR	1359251	Argument	ss -> lbuf		1358551	1					
ANR	1359252	PtrMemberAccess	ss -> lbuf		1358551	0					
ANR	1359253	Identifier	ss		1358551	0					
ANR	1359254	Identifier	lbuf		1358551	1					
ANR	1359255	Argument	& w		1358551	2					
ANR	1359256	UnaryOperationExpression	& w		1358551	0					
ANR	1359257	UnaryOperator	&		1358551	0					
ANR	1359258	Identifier	w		1358551	1					
ANR	1359259	ExpressionStatement	ss -> k_left = ss -> K	316:12:10208:10226	1358551	1	True				
ANR	1359260	AssignmentExpression	ss -> k_left = ss -> K		1358551	0		=			
ANR	1359261	PtrMemberAccess	ss -> k_left		1358551	0					
ANR	1359262	Identifier	ss		1358551	0					
ANR	1359263	Identifier	k_left		1358551	1					
ANR	1359264	PtrMemberAccess	ss -> K		1358551	1					
ANR	1359265	Identifier	ss		1358551	0					
ANR	1359266	Identifier	K		1358551	1					
ANR	1359267	IfStatement	if ( w . limit == wlimit )		1358551	10					
ANR	1359268	Condition	w . limit == wlimit	322:12:10387:10403	1358551	0	True				
ANR	1359269	EqualityExpression	w . limit == wlimit		1358551	0		==			
ANR	1359270	MemberAccess	w . limit		1358551	0					
ANR	1359271	Identifier	w		1358551	0					
ANR	1359272	Identifier	limit		1358551	1					
ANR	1359273	Identifier	wlimit		1358551	1					
ANR	1359274	ExpressionStatement	pw -> ptr = w . ptr	323:12:10418:10433	1358551	1	True				
ANR	1359275	AssignmentExpression	pw -> ptr = w . ptr		1358551	0		=			
ANR	1359276	PtrMemberAccess	pw -> ptr		1358551	0					
ANR	1359277	Identifier	pw		1358551	0					
ANR	1359278	Identifier	ptr		1358551	1					
ANR	1359279	MemberAccess	w . ptr		1358551	1					
ANR	1359280	Identifier	w		1358551	0					
ANR	1359281	Identifier	ptr		1358551	1					
ANR	1359282	ElseStatement	else		1358551	0					
ANR	1359283	ExpressionStatement	ss -> write_count = ss -> code_bytes = w . ptr - ( ss -> lcode - 1 )	325:12:10460:10518	1358551	0	True				
ANR	1359284	AssignmentExpression	ss -> write_count = ss -> code_bytes = w . ptr - ( ss -> lcode - 1 )		1358551	0		=			
ANR	1359285	PtrMemberAccess	ss -> write_count		1358551	0					
ANR	1359286	Identifier	ss		1358551	0					
ANR	1359287	Identifier	write_count		1358551	1					
ANR	1359288	AssignmentExpression	ss -> code_bytes = w . ptr - ( ss -> lcode - 1 )		1358551	1		=			
ANR	1359289	PtrMemberAccess	ss -> code_bytes		1358551	0					
ANR	1359290	Identifier	ss		1358551	0					
ANR	1359291	Identifier	code_bytes		1358551	1					
ANR	1359292	AdditiveExpression	w . ptr - ( ss -> lcode - 1 )		1358551	1		-			
ANR	1359293	MemberAccess	w . ptr		1358551	0					
ANR	1359294	Identifier	w		1358551	0					
ANR	1359295	Identifier	ptr		1358551	1					
ANR	1359296	AdditiveExpression	ss -> lcode - 1		1358551	1		-			
ANR	1359297	PtrMemberAccess	ss -> lcode		1358551	0					
ANR	1359298	Identifier	ss		1358551	0					
ANR	1359299	Identifier	lcode		1358551	1					
ANR	1359300	PrimaryExpression	1		1358551	1					
ANR	1359301	IfStatement	if ( ss -> K != 0 )		1358551	11					
ANR	1359302	Condition	ss -> K != 0	326:12:10532:10541	1358551	0	True				
ANR	1359303	EqualityExpression	ss -> K != 0		1358551	0		!=			
ANR	1359304	PtrMemberAccess	ss -> K		1358551	0					
ANR	1359305	Identifier	ss		1358551	0					
ANR	1359306	Identifier	K		1358551	1					
ANR	1359307	PrimaryExpression	0		1358551	1					
ANR	1359308	CompoundStatement		127:12:4549:4570	1358551	1					
ANR	1359309	IdentifierDeclStatement	byte * temp = ss -> lbuf ;	328:12:10632:10653	1358551	0	True				
ANR	1359310	IdentifierDecl	* temp = ss -> lbuf		1358551	0					
ANR	1359311	IdentifierDeclType	byte *		1358551	0					
ANR	1359312	Identifier	temp		1358551	1					
ANR	1359313	AssignmentExpression	* temp = ss -> lbuf		1358551	2		=			
ANR	1359314	Identifier	temp		1358551	0					
ANR	1359315	PtrMemberAccess	ss -> lbuf		1358551	1					
ANR	1359316	Identifier	ss		1358551	0					
ANR	1359317	Identifier	lbuf		1358551	1					
ANR	1359318	ExpressionStatement	ss -> lbuf = ss -> lprev	330:12:10668:10688	1358551	1	True				
ANR	1359319	AssignmentExpression	ss -> lbuf = ss -> lprev		1358551	0		=			
ANR	1359320	PtrMemberAccess	ss -> lbuf		1358551	0					
ANR	1359321	Identifier	ss		1358551	0					
ANR	1359322	Identifier	lbuf		1358551	1					
ANR	1359323	PtrMemberAccess	ss -> lprev		1358551	1					
ANR	1359324	Identifier	ss		1358551	0					
ANR	1359325	Identifier	lprev		1358551	1					
ANR	1359326	ExpressionStatement	ss -> lprev = temp	331:12:10702:10718	1358551	2	True				
ANR	1359327	AssignmentExpression	ss -> lprev = temp		1358551	0		=			
ANR	1359328	PtrMemberAccess	ss -> lprev		1358551	0					
ANR	1359329	Identifier	ss		1358551	0					
ANR	1359330	Identifier	lprev		1358551	1					
ANR	1359331	Identifier	temp		1358551	1					
ANR	1359332	ExpressionStatement	ss -> read_count = raster	334:8:10796:10819	1358551	12	True				
ANR	1359333	AssignmentExpression	ss -> read_count = raster		1358551	0		=			
ANR	1359334	PtrMemberAccess	ss -> read_count		1358551	0					
ANR	1359335	Identifier	ss		1358551	0					
ANR	1359336	Identifier	read_count		1358551	1					
ANR	1359337	Identifier	raster		1358551	1					
ANR	1359338	IfStatement	if ( last && status == 0 )		1358551	10					
ANR	1359339	Condition	last && status == 0	340:8:10988:11006	1358551	0	True				
ANR	1359340	AndExpression	last && status == 0		1358551	0		&&			
ANR	1359341	Identifier	last		1358551	0					
ANR	1359342	EqualityExpression	status == 0		1358551	1		==			
ANR	1359343	Identifier	status		1358551	0					
ANR	1359344	PrimaryExpression	0		1358551	1					
ANR	1359345	CompoundStatement		145:8:5165:5182	1358551	1					
ANR	1359346	IdentifierDeclStatement	const cfe_run * rp = ( ss -> K > 0 ? & cf2_run_eol_1d : & cf_run_eol ) ;	341:8:11019:11090	1358551	0	True				
ANR	1359347	IdentifierDecl	* rp = ( ss -> K > 0 ? & cf2_run_eol_1d : & cf_run_eol )		1358551	0					
ANR	1359348	IdentifierDeclType	const cfe_run *		1358551	0					
ANR	1359349	Identifier	rp		1358551	1					
ANR	1359350	AssignmentExpression	* rp = ( ss -> K > 0 ? & cf2_run_eol_1d : & cf_run_eol )		1358551	2		=			
ANR	1359351	Identifier	rp		1358551	0					
ANR	1359352	ConditionalExpression	ss -> K > 0 ? & cf2_run_eol_1d : & cf_run_eol		1358551	1					
ANR	1359353	Condition	ss -> K > 0		1358551	0					
ANR	1359354	RelationalExpression	ss -> K > 0		1358551	0		>			
ANR	1359355	PtrMemberAccess	ss -> K		1358551	0					
ANR	1359356	Identifier	ss		1358551	0					
ANR	1359357	Identifier	K		1358551	1					
ANR	1359358	PrimaryExpression	0		1358551	1					
ANR	1359359	UnaryOperationExpression	& cf2_run_eol_1d		1358551	1					
ANR	1359360	UnaryOperator	&		1358551	0					
ANR	1359361	Identifier	cf2_run_eol_1d		1358551	1					
ANR	1359362	UnaryOperationExpression	& cf_run_eol		1358551	2					
ANR	1359363	UnaryOperator	&		1358551	0					
ANR	1359364	Identifier	cf_run_eol		1358551	1					
ANR	1359365	IdentifierDeclStatement	int i = ( ! ss -> EndOfBlock ? 0 : ss -> K < 0 ? 2 : 6 ) ;	343:8:11100:11149	1358551	1	True				
ANR	1359366	IdentifierDecl	i = ( ! ss -> EndOfBlock ? 0 : ss -> K < 0 ? 2 : 6 )		1358551	0					
ANR	1359367	IdentifierDeclType	int		1358551	0					
ANR	1359368	Identifier	i		1358551	1					
ANR	1359369	AssignmentExpression	i = ( ! ss -> EndOfBlock ? 0 : ss -> K < 0 ? 2 : 6 )		1358551	2		=			
ANR	1359370	Identifier	i		1358551	0					
ANR	1359371	ConditionalExpression	! ss -> EndOfBlock ? 0 : ss -> K < 0 ? 2 : 6		1358551	1					
ANR	1359372	Condition	! ss -> EndOfBlock		1358551	0					
ANR	1359373	UnaryOperationExpression	! ss -> EndOfBlock		1358551	0					
ANR	1359374	UnaryOperator	!		1358551	0					
ANR	1359375	PtrMemberAccess	ss -> EndOfBlock		1358551	1					
ANR	1359376	Identifier	ss		1358551	0					
ANR	1359377	Identifier	EndOfBlock		1358551	1					
ANR	1359378	PrimaryExpression	0		1358551	1					
ANR	1359379	ConditionalExpression	ss -> K < 0 ? 2 : 6		1358551	2					
ANR	1359380	Condition	ss -> K < 0		1358551	0					
ANR	1359381	RelationalExpression	ss -> K < 0		1358551	0		<			
ANR	1359382	PtrMemberAccess	ss -> K		1358551	0					
ANR	1359383	Identifier	ss		1358551	0					
ANR	1359384	Identifier	K		1358551	1					
ANR	1359385	PrimaryExpression	0		1358551	1					
ANR	1359386	PrimaryExpression	2		1358551	1					
ANR	1359387	PrimaryExpression	6		1358551	2					
ANR	1359388	IdentifierDeclStatement	uint bits_to_write = hc_bits_size - ss -> bits_left + i * rp -> code_length ;	344:8:11159:11238	1358551	2	True				
ANR	1359389	IdentifierDecl	bits_to_write = hc_bits_size - ss -> bits_left + i * rp -> code_length		1358551	0					
ANR	1359390	IdentifierDeclType	uint		1358551	0					
ANR	1359391	Identifier	bits_to_write		1358551	1					
ANR	1359392	AssignmentExpression	bits_to_write = hc_bits_size - ss -> bits_left + i * rp -> code_length		1358551	2		=			
ANR	1359393	Identifier	bits_to_write		1358551	0					
ANR	1359394	AdditiveExpression	hc_bits_size - ss -> bits_left + i * rp -> code_length		1358551	1		-			
ANR	1359395	Identifier	hc_bits_size		1358551	0					
ANR	1359396	AdditiveExpression	ss -> bits_left + i * rp -> code_length		1358551	1		+			
ANR	1359397	PtrMemberAccess	ss -> bits_left		1358551	0					
ANR	1359398	Identifier	ss		1358551	0					
ANR	1359399	Identifier	bits_left		1358551	1					
ANR	1359400	MultiplicativeExpression	i * rp -> code_length		1358551	1		*			
ANR	1359401	Identifier	i		1358551	0					
ANR	1359402	PtrMemberAccess	rp -> code_length		1358551	1					
ANR	1359403	Identifier	rp		1358551	0					
ANR	1359404	Identifier	code_length		1358551	1					
ANR	1359405	IdentifierDeclStatement	byte * q = pw -> ptr ;	346:8:11248:11265	1358551	3	True				
ANR	1359406	IdentifierDecl	* q = pw -> ptr		1358551	0					
ANR	1359407	IdentifierDeclType	byte *		1358551	0					
ANR	1359408	Identifier	q		1358551	1					
ANR	1359409	AssignmentExpression	* q = pw -> ptr		1358551	2		=			
ANR	1359410	Identifier	q		1358551	0					
ANR	1359411	PtrMemberAccess	pw -> ptr		1358551	1					
ANR	1359412	Identifier	pw		1358551	0					
ANR	1359413	Identifier	ptr		1358551	1					
ANR	1359414	ExpressionStatement	hce_declare_state	348:8:11276:11293	1358551	4	True				
ANR	1359415	Identifier	hce_declare_state		1358551	0					
ANR	1359416	IfStatement	if ( wlimit - q < ( bits_to_write + 7 ) >> 3 )		1358551	5					
ANR	1359417	Condition	wlimit - q < ( bits_to_write + 7 ) >> 3	350:12:11308:11344	1358551	0	True				
ANR	1359418	RelationalExpression	wlimit - q < ( bits_to_write + 7 ) >> 3		1358551	0		<			
ANR	1359419	AdditiveExpression	wlimit - q		1358551	0		-			
ANR	1359420	Identifier	wlimit		1358551	0					
ANR	1359421	Identifier	q		1358551	1					
ANR	1359422	ShiftExpression	( bits_to_write + 7 ) >> 3		1358551	1		>>			
ANR	1359423	AdditiveExpression	bits_to_write + 7		1358551	0		+			
ANR	1359424	Identifier	bits_to_write		1358551	0					
ANR	1359425	PrimaryExpression	7		1358551	1					
ANR	1359426	PrimaryExpression	3		1358551	1					
ANR	1359427	CompoundStatement		149:51:5264:5264	1358551	1					
ANR	1359428	ExpressionStatement	status = 1	351:12:11361:11371	1358551	0	True				
ANR	1359429	AssignmentExpression	status = 1		1358551	0		=			
ANR	1359430	Identifier	status		1358551	0					
ANR	1359431	PrimaryExpression	1		1358551	1					
ANR	1359432	GotoStatement	goto out ;	352:12:11385:11393	1358551	1	True				
ANR	1359433	Identifier	out		1358551	0					
ANR	1359434	ExpressionStatement	hce_load_state ( )	354:8:11413:11429	1358551	6	True				
ANR	1359435	CallExpression	hce_load_state ( )		1358551	0					
ANR	1359436	Callee	hce_load_state		1358551	0					
ANR	1359437	Identifier	hce_load_state		1358551	0					
ANR	1359438	ArgumentList			1358551	1					
ANR	1359439	IfStatement	if ( ss -> EncodedByteAlign )		1358551	7					
ANR	1359440	Condition	ss -> EncodedByteAlign	355:12:11443:11462	1358551	0	True				
ANR	1359441	PtrMemberAccess	ss -> EncodedByteAlign		1358551	0					
ANR	1359442	Identifier	ss		1358551	0					
ANR	1359443	Identifier	EncodedByteAlign		1358551	1					
ANR	1359444	ExpressionStatement	bits_left &= ~7	356:12:11477:11492	1358551	1	True				
ANR	1359445	AssignmentExpression	bits_left &= ~7		1358551	0		&=			
ANR	1359446	Identifier	bits_left		1358551	0					
ANR	1359447	Identifier	~7		1358551	1					
ANR	1359448	WhileStatement	while ( -- i >= 0 )		1358551	8					
ANR	1359449	Condition	-- i >= 0	357:15:11509:11516	1358551	0	True				
ANR	1359450	RelationalExpression	-- i >= 0		1358551	0		>=			
ANR	1359451	UnaryExpression	-- i		1358551	0					
ANR	1359452	IncDec	--		1358551	0					
ANR	1359453	Identifier	i		1358551	1					
ANR	1359454	PrimaryExpression	0		1358551	1					
ANR	1359455	ExpressionStatement	"hc_put_code ( ss , q , rp )"	358:12:11531:11553	1358551	1	True				
ANR	1359456	CallExpression	"hc_put_code ( ss , q , rp )"		1358551	0					
ANR	1359457	Callee	hc_put_code		1358551	0					
ANR	1359458	Identifier	hc_put_code		1358551	0					
ANR	1359459	ArgumentList	ss		1358551	1					
ANR	1359460	Argument	ss		1358551	0					
ANR	1359461	Identifier	ss		1358551	0					
ANR	1359462	Argument	q		1358551	1					
ANR	1359463	Identifier	q		1358551	0					
ANR	1359464	Argument	rp		1358551	2					
ANR	1359465	Identifier	rp		1358551	0					
ANR	1359466	ExpressionStatement	"pw -> ptr = hc_put_last_bits ( ( stream_hc_state * ) ss , q )"	360:8:11611:11664	1358551	9	True				
ANR	1359467	AssignmentExpression	"pw -> ptr = hc_put_last_bits ( ( stream_hc_state * ) ss , q )"		1358551	0		=			
ANR	1359468	PtrMemberAccess	pw -> ptr		1358551	0					
ANR	1359469	Identifier	pw		1358551	0					
ANR	1359470	Identifier	ptr		1358551	1					
ANR	1359471	CallExpression	"hc_put_last_bits ( ( stream_hc_state * ) ss , q )"		1358551	1					
ANR	1359472	Callee	hc_put_last_bits		1358551	0					
ANR	1359473	Identifier	hc_put_last_bits		1358551	0					
ANR	1359474	ArgumentList	( stream_hc_state * ) ss		1358551	1					
ANR	1359475	Argument	( stream_hc_state * ) ss		1358551	0					
ANR	1359476	CastExpression	( stream_hc_state * ) ss		1358551	0					
ANR	1359477	CastTarget	stream_hc_state *		1358551	0					
ANR	1359478	Identifier	ss		1358551	1					
ANR	1359479	Argument	q		1358551	1					
ANR	1359480	Identifier	q		1358551	0					
ANR	1359481	Label	out :	362:2:11674:11677	1358551	11	True				
ANR	1359482	Identifier	out		1358551	0					
ANR	1359483	ExpressionStatement	"if_debug9m ( 'w' , ss -> memory , ""[w]CFE exit %d: read_count = %d, write_count = %d,\\n     pr = 0x%lx(%d)0x%lx; pw = 0x%lx(%d)0x%lx\\n"" , status , ss -> read_count , ss -> write_count , ( ulong ) pr -> ptr , ( int ) ( rlimit - pr -> ptr ) , ( ulong ) rlimit , ( ulong ) pw -> ptr , ( int ) ( wlimit - pw -> ptr ) , ( ulong ) wlimit )"	363:4:11683:12015	1358551	12	True				
ANR	1359484	CallExpression	"if_debug9m ( 'w' , ss -> memory , ""[w]CFE exit %d: read_count = %d, write_count = %d,\\n     pr = 0x%lx(%d)0x%lx; pw = 0x%lx(%d)0x%lx\\n"" , status , ss -> read_count , ss -> write_count , ( ulong ) pr -> ptr , ( int ) ( rlimit - pr -> ptr ) , ( ulong ) rlimit , ( ulong ) pw -> ptr , ( int ) ( wlimit - pw -> ptr ) , ( ulong ) wlimit )"		1358551	0					
ANR	1359485	Callee	if_debug9m		1358551	0					
ANR	1359486	Identifier	if_debug9m		1358551	0					
ANR	1359487	ArgumentList	'w'		1358551	1					
ANR	1359488	Argument	'w'		1358551	0					
ANR	1359489	PrimaryExpression	'w'		1358551	0					
ANR	1359490	Argument	ss -> memory		1358551	1					
ANR	1359491	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1359492	Identifier	ss		1358551	0					
ANR	1359493	Identifier	memory		1358551	1					
ANR	1359494	Argument	"""[w]CFE exit %d: read_count = %d, write_count = %d,\\n     pr = 0x%lx(%d)0x%lx; pw = 0x%lx(%d)0x%lx\\n"""		1358551	2					
ANR	1359495	PrimaryExpression	"""[w]CFE exit %d: read_count = %d, write_count = %d,\\n     pr = 0x%lx(%d)0x%lx; pw = 0x%lx(%d)0x%lx\\n"""		1358551	0					
ANR	1359496	Argument	status		1358551	3					
ANR	1359497	Identifier	status		1358551	0					
ANR	1359498	Argument	ss -> read_count		1358551	4					
ANR	1359499	PtrMemberAccess	ss -> read_count		1358551	0					
ANR	1359500	Identifier	ss		1358551	0					
ANR	1359501	Identifier	read_count		1358551	1					
ANR	1359502	Argument	ss -> write_count		1358551	5					
ANR	1359503	PtrMemberAccess	ss -> write_count		1358551	0					
ANR	1359504	Identifier	ss		1358551	0					
ANR	1359505	Identifier	write_count		1358551	1					
ANR	1359506	Argument	( ulong ) pr -> ptr		1358551	6					
ANR	1359507	CastExpression	( ulong ) pr -> ptr		1358551	0					
ANR	1359508	CastTarget	ulong		1358551	0					
ANR	1359509	PtrMemberAccess	pr -> ptr		1358551	1					
ANR	1359510	Identifier	pr		1358551	0					
ANR	1359511	Identifier	ptr		1358551	1					
ANR	1359512	Argument	( int ) ( rlimit - pr -> ptr )		1358551	7					
ANR	1359513	CastExpression	( int ) ( rlimit - pr -> ptr )		1358551	0					
ANR	1359514	CastTarget	int		1358551	0					
ANR	1359515	AdditiveExpression	rlimit - pr -> ptr		1358551	1		-			
ANR	1359516	Identifier	rlimit		1358551	0					
ANR	1359517	PtrMemberAccess	pr -> ptr		1358551	1					
ANR	1359518	Identifier	pr		1358551	0					
ANR	1359519	Identifier	ptr		1358551	1					
ANR	1359520	Argument	( ulong ) rlimit		1358551	8					
ANR	1359521	CastExpression	( ulong ) rlimit		1358551	0					
ANR	1359522	CastTarget	ulong		1358551	0					
ANR	1359523	Identifier	rlimit		1358551	1					
ANR	1359524	Argument	( ulong ) pw -> ptr		1358551	9					
ANR	1359525	CastExpression	( ulong ) pw -> ptr		1358551	0					
ANR	1359526	CastTarget	ulong		1358551	0					
ANR	1359527	PtrMemberAccess	pw -> ptr		1358551	1					
ANR	1359528	Identifier	pw		1358551	0					
ANR	1359529	Identifier	ptr		1358551	1					
ANR	1359530	Argument	( int ) ( wlimit - pw -> ptr )		1358551	10					
ANR	1359531	CastExpression	( int ) ( wlimit - pw -> ptr )		1358551	0					
ANR	1359532	CastTarget	int		1358551	0					
ANR	1359533	AdditiveExpression	wlimit - pw -> ptr		1358551	1		-			
ANR	1359534	Identifier	wlimit		1358551	0					
ANR	1359535	PtrMemberAccess	pw -> ptr		1358551	1					
ANR	1359536	Identifier	pw		1358551	0					
ANR	1359537	Identifier	ptr		1358551	1					
ANR	1359538	Argument	( ulong ) wlimit		1358551	11					
ANR	1359539	CastExpression	( ulong ) wlimit		1358551	0					
ANR	1359540	CastTarget	ulong		1358551	0					
ANR	1359541	Identifier	wlimit		1358551	1					
ANR	1359542	IfStatement	if ( pr -> ptr > rlimit || pw -> ptr > wlimit )		1358551	13					
ANR	1359543	Condition	pr -> ptr > rlimit || pw -> ptr > wlimit	368:8:12071:12106	1358551	0	True				
ANR	1359544	OrExpression	pr -> ptr > rlimit || pw -> ptr > wlimit		1358551	0		||			
ANR	1359545	RelationalExpression	pr -> ptr > rlimit		1358551	0		>			
ANR	1359546	PtrMemberAccess	pr -> ptr		1358551	0					
ANR	1359547	Identifier	pr		1358551	0					
ANR	1359548	Identifier	ptr		1358551	1					
ANR	1359549	Identifier	rlimit		1358551	1					
ANR	1359550	RelationalExpression	pw -> ptr > wlimit		1358551	1		>			
ANR	1359551	PtrMemberAccess	pw -> ptr		1358551	0					
ANR	1359552	Identifier	pw		1358551	0					
ANR	1359553	Identifier	ptr		1358551	1					
ANR	1359554	Identifier	wlimit		1358551	1					
ANR	1359555	CompoundStatement		167:46:6026:6026	1358551	1					
ANR	1359556	ExpressionStatement	"lprintf ( ""Pointer overrun!\\n"" )"	369:8:12119:12148	1358551	0	True				
ANR	1359557	CallExpression	"lprintf ( ""Pointer overrun!\\n"" )"		1358551	0					
ANR	1359558	Callee	lprintf		1358551	0					
ANR	1359559	Identifier	lprintf		1358551	0					
ANR	1359560	ArgumentList	"""Pointer overrun!\\n"""		1358551	1					
ANR	1359561	Argument	"""Pointer overrun!\\n"""		1358551	0					
ANR	1359562	PrimaryExpression	"""Pointer overrun!\\n"""		1358551	0					
ANR	1359563	ExpressionStatement	status = ERRC	370:8:12158:12171	1358551	1	True				
ANR	1359564	AssignmentExpression	status = ERRC		1358551	0		=			
ANR	1359565	Identifier	status		1358551	0					
ANR	1359566	Identifier	ERRC		1358551	1					
ANR	1359567	IfStatement	if ( gs_debug_c ( 'w' ) && status == 1 )		1358551	14					
ANR	1359568	Condition	gs_debug_c ( 'w' ) && status == 1	372:8:12187:12216	1358551	0	True				
ANR	1359569	AndExpression	gs_debug_c ( 'w' ) && status == 1		1358551	0		&&			
ANR	1359570	CallExpression	gs_debug_c ( 'w' )		1358551	0					
ANR	1359571	Callee	gs_debug_c		1358551	0					
ANR	1359572	Identifier	gs_debug_c		1358551	0					
ANR	1359573	ArgumentList	'w'		1358551	1					
ANR	1359574	Argument	'w'		1358551	0					
ANR	1359575	PrimaryExpression	'w'		1358551	0					
ANR	1359576	EqualityExpression	status == 1		1358551	1		==			
ANR	1359577	Identifier	status		1358551	0					
ANR	1359578	PrimaryExpression	1		1358551	1					
ANR	1359579	CompoundStatement		171:40:6136:6136	1358551	1					
ANR	1359580	ExpressionStatement	"dmlputs ( ss -> memory , ""[w]white runs:"" )"	373:8:12229:12266	1358551	0	True				
ANR	1359581	CallExpression	"dmlputs ( ss -> memory , ""[w]white runs:"" )"		1358551	0					
ANR	1359582	Callee	dmlputs		1358551	0					
ANR	1359583	Identifier	dmlputs		1358551	0					
ANR	1359584	ArgumentList	ss -> memory		1358551	1					
ANR	1359585	Argument	ss -> memory		1358551	0					
ANR	1359586	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1359587	Identifier	ss		1358551	0					
ANR	1359588	Identifier	memory		1358551	1					
ANR	1359589	Argument	"""[w]white runs:"""		1358551	1					
ANR	1359590	PrimaryExpression	"""[w]white runs:"""		1358551	0					
ANR	1359591	ExpressionStatement	"print_run_stats ( ss -> memory , & stats_white_runs )"	374:8:12276:12322	1358551	1	True				
ANR	1359592	CallExpression	"print_run_stats ( ss -> memory , & stats_white_runs )"		1358551	0					
ANR	1359593	Callee	print_run_stats		1358551	0					
ANR	1359594	Identifier	print_run_stats		1358551	0					
ANR	1359595	ArgumentList	ss -> memory		1358551	1					
ANR	1359596	Argument	ss -> memory		1358551	0					
ANR	1359597	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1359598	Identifier	ss		1358551	0					
ANR	1359599	Identifier	memory		1358551	1					
ANR	1359600	Argument	& stats_white_runs		1358551	1					
ANR	1359601	UnaryOperationExpression	& stats_white_runs		1358551	0					
ANR	1359602	UnaryOperator	&		1358551	0					
ANR	1359603	Identifier	stats_white_runs		1358551	1					
ANR	1359604	ExpressionStatement	"dmlputs ( ss -> memory , ""[w]black runs:"" )"	375:8:12332:12369	1358551	2	True				
ANR	1359605	CallExpression	"dmlputs ( ss -> memory , ""[w]black runs:"" )"		1358551	0					
ANR	1359606	Callee	dmlputs		1358551	0					
ANR	1359607	Identifier	dmlputs		1358551	0					
ANR	1359608	ArgumentList	ss -> memory		1358551	1					
ANR	1359609	Argument	ss -> memory		1358551	0					
ANR	1359610	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1359611	Identifier	ss		1358551	0					
ANR	1359612	Identifier	memory		1358551	1					
ANR	1359613	Argument	"""[w]black runs:"""		1358551	1					
ANR	1359614	PrimaryExpression	"""[w]black runs:"""		1358551	0					
ANR	1359615	ExpressionStatement	"print_run_stats ( ss -> memory , & stats_black_runs )"	376:8:12379:12425	1358551	3	True				
ANR	1359616	CallExpression	"print_run_stats ( ss -> memory , & stats_black_runs )"		1358551	0					
ANR	1359617	Callee	print_run_stats		1358551	0					
ANR	1359618	Identifier	print_run_stats		1358551	0					
ANR	1359619	ArgumentList	ss -> memory		1358551	1					
ANR	1359620	Argument	ss -> memory		1358551	0					
ANR	1359621	PtrMemberAccess	ss -> memory		1358551	0					
ANR	1359622	Identifier	ss		1358551	0					
ANR	1359623	Identifier	memory		1358551	1					
ANR	1359624	Argument	& stats_black_runs		1358551	1					
ANR	1359625	UnaryOperationExpression	& stats_black_runs		1358551	0					
ANR	1359626	UnaryOperator	&		1358551	0					
ANR	1359627	Identifier	stats_black_runs		1358551	1					
ANR	1359628	ReturnStatement	return status ;	379:4:12444:12457	1358551	15	True				
ANR	1359629	Identifier	status		1358551	0					
ANR	1359630	ReturnType	static int		1358551	1					
ANR	1359631	Identifier	s_CFE_process		1358551	2					
ANR	1359632	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1358551	3					
ANR	1359633	Parameter	stream_state * st	200:14:5987:6003	1358551	0	True				
ANR	1359634	ParameterType	stream_state *		1358551	0					
ANR	1359635	Identifier	st		1358551	1					
ANR	1359636	Parameter	stream_cursor_read * pr	200:33:6006:6028	1358551	1	True				
ANR	1359637	ParameterType	stream_cursor_read *		1358551	0					
ANR	1359638	Identifier	pr		1358551	1					
ANR	1359639	Parameter	stream_cursor_write * pw	201:14:6045:6068	1358551	2	True				
ANR	1359640	ParameterType	stream_cursor_write *		1358551	0					
ANR	1359641	Identifier	pw		1358551	1					
ANR	1359642	Parameter	bool last	201:40:6071:6079	1358551	3	True				
ANR	1359643	ParameterType	bool		1358551	0					
ANR	1359644	Identifier	last		1358551	1					
ANR	1359645	CFGEntryNode	ENTRY		1358551		True				
ANR	1359646	CFGExitNode	EXIT		1358551		True				
ANR	1359647	InfiniteForNode	true		1358551		True				
ANR	1359648	Symbol	pr		1358551						
ANR	1359649	Symbol	rp -> code_length		1358551						
ANR	1359650	Symbol	* ss		1358551						
ANR	1359651	Symbol	ss -> max_code_bytes		1358551						
ANR	1359652	Symbol	end_mask		1358551						
ANR	1359653	Symbol	ss -> EndOfLine		1358551						
ANR	1359654	Symbol	pw		1358551						
ANR	1359655	Symbol	run		1358551						
ANR	1359656	Symbol	pr -> limit		1358551						
ANR	1359657	Symbol	end_bit		1358551						
ANR	1359658	Symbol	wlimit		1358551						
ANR	1359659	Symbol	gs_debug_c		1358551						
ANR	1359660	Symbol	ss -> read_count		1358551						
ANR	1359661	Symbol	ccount		1358551						
ANR	1359662	Symbol	pr -> ptr		1358551						
ANR	1359663	Symbol	pw -> ptr		1358551						
ANR	1359664	Symbol	rlimit		1358551						
ANR	1359665	Symbol	last		1358551						
ANR	1359666	Symbol	ss -> code_bytes		1358551						
ANR	1359667	Symbol	& stats_black_runs		1358551						
ANR	1359668	Symbol	ss -> raster		1358551						
ANR	1359669	Symbol	w . ptr		1358551						
ANR	1359670	Symbol	& stats_white_runs		1358551						
ANR	1359671	Symbol	* pr		1358551						
ANR	1359672	Symbol	bits_left		1358551						
ANR	1359673	Symbol	* pw		1358551						
ANR	1359674	Symbol	ss -> lcode		1358551						
ANR	1359675	Symbol	w . limit		1358551						
ANR	1359676	Symbol	& run		1358551						
ANR	1359677	Symbol	* end		1358551						
ANR	1359678	Symbol	ss -> Columns		1358551						
ANR	1359679	Symbol	& cf_run_eol		1358551						
ANR	1359680	Symbol	hc_bits_size		1358551						
ANR	1359681	Symbol	rp		1358551						
ANR	1359682	Symbol	ERRC		1358551						
ANR	1359683	Symbol	status		1358551						
ANR	1359684	Symbol	& cf2_run_eol_2d		1358551						
ANR	1359685	Symbol	wcount		1358551						
ANR	1359686	Symbol	ss -> memory		1358551						
ANR	1359687	Symbol	not_bit		1358551						
ANR	1359688	Symbol	ss -> EndOfBlock		1358551						
ANR	1359689	Symbol	ss -> lbuf		1358551						
ANR	1359690	Symbol	pw -> limit		1358551						
ANR	1359691	Symbol	ss -> lprev		1358551						
ANR	1359692	Symbol	min		1358551						
ANR	1359693	Symbol	ss -> EncodedByteAlign		1358551						
ANR	1359694	Symbol	run . code_length		1358551						
ANR	1359695	Symbol	end		1358551						
ANR	1359696	Symbol	ss -> bits_left		1358551						
ANR	1359697	Symbol	& cf2_run_eol_1d		1358551						
ANR	1359698	Symbol	hc_put_last_bits		1358551						
ANR	1359699	Symbol	ss -> K		1358551						
ANR	1359700	Symbol	ss		1358551						
ANR	1359701	Symbol	st		1358551						
ANR	1359702	Symbol	temp		1358551						
ANR	1359703	Symbol	ss -> write_count		1358551						
ANR	1359704	Symbol	* rp		1358551						
ANR	1359705	Symbol	raster		1358551						
ANR	1359706	Symbol	i		1358551						
ANR	1359707	Symbol	bits_to_write		1358551						
ANR	1359708	Symbol	q		1358551						
ANR	1359709	Symbol	rcount		1358551						
ANR	1359710	Symbol	run_eol_code_length		1358551						
ANR	1359711	Symbol	w		1358551						
ANR	1359712	Symbol	ss -> k_left		1358551						
ANR	1359713	Symbol	~7		1358551						
ANR	1359714	Symbol	& w		1358551						
ANR	1359715	Function	cf_encode_1d	383:0:12492:13272							
ANR	1359716	FunctionDef	"cf_encode_1d (stream_CFE_state * ss , const byte * lbuf , stream_cursor_write * pw)"		1359715	0					
ANR	1359717	CompoundStatement		385:0:12585:13272	1359715	0					
ANR	1359718	IdentifierDeclStatement	uint count = ss -> raster << 3 ;	386:4:12591:12619	1359715	0	True				
ANR	1359719	IdentifierDecl	count = ss -> raster << 3		1359715	0					
ANR	1359720	IdentifierDeclType	uint		1359715	0					
ANR	1359721	Identifier	count		1359715	1					
ANR	1359722	AssignmentExpression	count = ss -> raster << 3		1359715	2		=			
ANR	1359723	Identifier	count		1359715	0					
ANR	1359724	ShiftExpression	ss -> raster << 3		1359715	1		<<			
ANR	1359725	PtrMemberAccess	ss -> raster		1359715	0					
ANR	1359726	Identifier	ss		1359715	0					
ANR	1359727	Identifier	raster		1359715	1					
ANR	1359728	PrimaryExpression	3		1359715	1					
ANR	1359729	IdentifierDeclStatement	byte * q = pw -> ptr ;	387:4:12625:12642	1359715	1	True				
ANR	1359730	IdentifierDecl	* q = pw -> ptr		1359715	0					
ANR	1359731	IdentifierDeclType	byte *		1359715	0					
ANR	1359732	Identifier	q		1359715	1					
ANR	1359733	AssignmentExpression	* q = pw -> ptr		1359715	2		=			
ANR	1359734	Identifier	q		1359715	0					
ANR	1359735	PtrMemberAccess	pw -> ptr		1359715	1					
ANR	1359736	Identifier	pw		1359715	0					
ANR	1359737	Identifier	ptr		1359715	1					
ANR	1359738	IdentifierDeclStatement	int end_count = - ss -> Columns & 7 ;	388:4:12648:12680	1359715	2	True				
ANR	1359739	IdentifierDecl	end_count = - ss -> Columns & 7		1359715	0					
ANR	1359740	IdentifierDeclType	int		1359715	0					
ANR	1359741	Identifier	end_count		1359715	1					
ANR	1359742	AssignmentExpression	end_count = - ss -> Columns & 7		1359715	2		=			
ANR	1359743	Identifier	end_count		1359715	0					
ANR	1359744	BitAndExpression	- ss -> Columns & 7		1359715	1		&			
ANR	1359745	UnaryOperationExpression	- ss -> Columns		1359715	0					
ANR	1359746	UnaryOperator	-		1359715	0					
ANR	1359747	PtrMemberAccess	ss -> Columns		1359715	1					
ANR	1359748	Identifier	ss		1359715	0					
ANR	1359749	Identifier	Columns		1359715	1					
ANR	1359750	PrimaryExpression	7		1359715	1					
ANR	1359751	IdentifierDeclStatement	int rlen ;	389:4:12686:12694	1359715	3	True				
ANR	1359752	IdentifierDecl	rlen		1359715	0					
ANR	1359753	IdentifierDeclType	int		1359715	0					
ANR	1359754	Identifier	rlen		1359715	1					
ANR	1359755	ExpressionStatement	hce_declare_state	391:4:12701:12718	1359715	4	True				
ANR	1359756	Identifier	hce_declare_state		1359715	0					
ANR	1359757	IdentifierDeclStatement	const byte * p = lbuf ;	392:4:12724:12744	1359715	5	True				
ANR	1359758	IdentifierDecl	* p = lbuf		1359715	0					
ANR	1359759	IdentifierDeclType	const byte *		1359715	0					
ANR	1359760	Identifier	p		1359715	1					
ANR	1359761	AssignmentExpression	* p = lbuf		1359715	2		=			
ANR	1359762	Identifier	lbuf		1359715	0					
ANR	1359763	Identifier	lbuf		1359715	1					
ANR	1359764	IdentifierDeclStatement	byte invert = ( ss -> BlackIs1 ? 0 : 0xff ) ;	393:4:12750:12789	1359715	6	True				
ANR	1359765	IdentifierDecl	invert = ( ss -> BlackIs1 ? 0 : 0xff )		1359715	0					
ANR	1359766	IdentifierDeclType	byte		1359715	0					
ANR	1359767	Identifier	invert		1359715	1					
ANR	1359768	AssignmentExpression	invert = ( ss -> BlackIs1 ? 0 : 0xff )		1359715	2		=			
ANR	1359769	Identifier	invert		1359715	0					
ANR	1359770	ConditionalExpression	ss -> BlackIs1 ? 0 : 0xff		1359715	1					
ANR	1359771	Condition	ss -> BlackIs1		1359715	0					
ANR	1359772	PtrMemberAccess	ss -> BlackIs1		1359715	0					
ANR	1359773	Identifier	ss		1359715	0					
ANR	1359774	Identifier	BlackIs1		1359715	1					
ANR	1359775	PrimaryExpression	0		1359715	1					
ANR	1359776	PrimaryExpression	0xff		1359715	2					
ANR	1359777	IdentifierDeclStatement	uint data = * p ++ ^ invert ;	396:4:12840:12865	1359715	7	True				
ANR	1359778	IdentifierDecl	data = * p ++ ^ invert		1359715	0					
ANR	1359779	IdentifierDeclType	uint		1359715	0					
ANR	1359780	Identifier	data		1359715	1					
ANR	1359781	AssignmentExpression	data = * p ++ ^ invert		1359715	2		=			
ANR	1359782	Identifier	data		1359715	0					
ANR	1359783	ExclusiveOrExpression	* p ++ ^ invert		1359715	1		^			
ANR	1359784	UnaryOperationExpression	* p ++		1359715	0					
ANR	1359785	UnaryOperator	*		1359715	0					
ANR	1359786	PostIncDecOperationExpression	p ++		1359715	1					
ANR	1359787	Identifier	p		1359715	0					
ANR	1359788	IncDec	++		1359715	1					
ANR	1359789	Identifier	invert		1359715	1					
ANR	1359790	ExpressionStatement	hce_load_state ( )	398:4:12872:12888	1359715	8	True				
ANR	1359791	CallExpression	hce_load_state ( )		1359715	0					
ANR	1359792	Callee	hce_load_state		1359715	0					
ANR	1359793	Identifier	hce_load_state		1359715	0					
ANR	1359794	ArgumentList			1359715	1					
ANR	1359795	WhileStatement	while ( count != end_count )		1359715	9					
ANR	1359796	Condition	count != end_count	399:11:12901:12918	1359715	0	True				
ANR	1359797	EqualityExpression	count != end_count		1359715	0		!=			
ANR	1359798	Identifier	count		1359715	0					
ANR	1359799	Identifier	end_count		1359715	1					
ANR	1359800	CompoundStatement		15:31:335:335	1359715	1					
ANR	1359801	ExpressionStatement	"skip_white_pixels ( data , p , count , invert , rlen )"	401:8:12964:13011	1359715	0	True				
ANR	1359802	CallExpression	"skip_white_pixels ( data , p , count , invert , rlen )"		1359715	0					
ANR	1359803	Callee	skip_white_pixels		1359715	0					
ANR	1359804	Identifier	skip_white_pixels		1359715	0					
ANR	1359805	ArgumentList	data		1359715	1					
ANR	1359806	Argument	data		1359715	0					
ANR	1359807	Identifier	data		1359715	0					
ANR	1359808	Argument	p		1359715	1					
ANR	1359809	Identifier	p		1359715	0					
ANR	1359810	Argument	count		1359715	2					
ANR	1359811	Identifier	count		1359715	0					
ANR	1359812	Argument	invert		1359715	3					
ANR	1359813	Identifier	invert		1359715	0					
ANR	1359814	Argument	rlen		1359715	4					
ANR	1359815	Identifier	rlen		1359715	0					
ANR	1359816	ExpressionStatement	"CF_PUT_WHITE_RUN ( ss , rlen )"	402:8:13021:13047	1359715	1	True				
ANR	1359817	CallExpression	"CF_PUT_WHITE_RUN ( ss , rlen )"		1359715	0					
ANR	1359818	Callee	CF_PUT_WHITE_RUN		1359715	0					
ANR	1359819	Identifier	CF_PUT_WHITE_RUN		1359715	0					
ANR	1359820	ArgumentList	ss		1359715	1					
ANR	1359821	Argument	ss		1359715	0					
ANR	1359822	Identifier	ss		1359715	0					
ANR	1359823	Argument	rlen		1359715	1					
ANR	1359824	Identifier	rlen		1359715	0					
ANR	1359825	IfStatement	if ( count == end_count )		1359715	2					
ANR	1359826	Condition	count == end_count	403:12:13061:13078	1359715	0	True				
ANR	1359827	EqualityExpression	count == end_count		1359715	0		==			
ANR	1359828	Identifier	count		1359715	0					
ANR	1359829	Identifier	end_count		1359715	1					
ANR	1359830	BreakStatement	break ;	404:12:13093:13098	1359715	1	True				
ANR	1359831	ExpressionStatement	"skip_black_pixels ( data , p , count , invert , rlen )"	406:8:13141:13188	1359715	3	True				
ANR	1359832	CallExpression	"skip_black_pixels ( data , p , count , invert , rlen )"		1359715	0					
ANR	1359833	Callee	skip_black_pixels		1359715	0					
ANR	1359834	Identifier	skip_black_pixels		1359715	0					
ANR	1359835	ArgumentList	data		1359715	1					
ANR	1359836	Argument	data		1359715	0					
ANR	1359837	Identifier	data		1359715	0					
ANR	1359838	Argument	p		1359715	1					
ANR	1359839	Identifier	p		1359715	0					
ANR	1359840	Argument	count		1359715	2					
ANR	1359841	Identifier	count		1359715	0					
ANR	1359842	Argument	invert		1359715	3					
ANR	1359843	Identifier	invert		1359715	0					
ANR	1359844	Argument	rlen		1359715	4					
ANR	1359845	Identifier	rlen		1359715	0					
ANR	1359846	ExpressionStatement	"CF_PUT_BLACK_RUN ( ss , rlen )"	407:8:13198:13224	1359715	4	True				
ANR	1359847	CallExpression	"CF_PUT_BLACK_RUN ( ss , rlen )"		1359715	0					
ANR	1359848	Callee	CF_PUT_BLACK_RUN		1359715	0					
ANR	1359849	Identifier	CF_PUT_BLACK_RUN		1359715	0					
ANR	1359850	ArgumentList	ss		1359715	1					
ANR	1359851	Argument	ss		1359715	0					
ANR	1359852	Identifier	ss		1359715	0					
ANR	1359853	Argument	rlen		1359715	1					
ANR	1359854	Identifier	rlen		1359715	0					
ANR	1359855	ExpressionStatement	hce_store_state ( )	409:4:13236:13253	1359715	10	True				
ANR	1359856	CallExpression	hce_store_state ( )		1359715	0					
ANR	1359857	Callee	hce_store_state		1359715	0					
ANR	1359858	Identifier	hce_store_state		1359715	0					
ANR	1359859	ArgumentList			1359715	1					
ANR	1359860	ExpressionStatement	pw -> ptr = q	410:4:13259:13270	1359715	11	True				
ANR	1359861	AssignmentExpression	pw -> ptr = q		1359715	0		=			
ANR	1359862	PtrMemberAccess	pw -> ptr		1359715	0					
ANR	1359863	Identifier	pw		1359715	0					
ANR	1359864	Identifier	ptr		1359715	1					
ANR	1359865	Identifier	q		1359715	1					
ANR	1359866	ReturnType	static void		1359715	1					
ANR	1359867	Identifier	cf_encode_1d		1359715	2					
ANR	1359868	ParameterList	"stream_CFE_state * ss , const byte * lbuf , stream_cursor_write * pw"		1359715	3					
ANR	1359869	Parameter	stream_CFE_state * ss	384:13:12517:12537	1359715	0	True				
ANR	1359870	ParameterType	stream_CFE_state *		1359715	0					
ANR	1359871	Identifier	ss		1359715	1					
ANR	1359872	Parameter	const byte * lbuf	384:36:12540:12556	1359715	1	True				
ANR	1359873	ParameterType	const byte *		1359715	0					
ANR	1359874	Identifier	lbuf		1359715	1					
ANR	1359875	Parameter	stream_cursor_write * pw	384:55:12559:12582	1359715	2	True				
ANR	1359876	ParameterType	stream_cursor_write *		1359715	0					
ANR	1359877	Identifier	pw		1359715	1					
ANR	1359878	CFGEntryNode	ENTRY		1359715		True				
ANR	1359879	CFGExitNode	EXIT		1359715		True				
ANR	1359880	Symbol	ss		1359715						
ANR	1359881	Symbol	ss -> BlackIs1		1359715						
ANR	1359882	Symbol	invert		1359715						
ANR	1359883	Symbol	data		1359715						
ANR	1359884	Symbol	* ss		1359715						
ANR	1359885	Symbol	pw		1359715						
ANR	1359886	Symbol	* p ++		1359715						
ANR	1359887	Symbol	ss -> raster		1359715						
ANR	1359888	Symbol	count		1359715						
ANR	1359889	Symbol	* pw		1359715						
ANR	1359890	Symbol	p		1359715						
ANR	1359891	Symbol	q		1359715						
ANR	1359892	Symbol	lbuf		1359715						
ANR	1359893	Symbol	rlen		1359715						
ANR	1359894	Symbol	end_count		1359715						
ANR	1359895	Symbol	ss -> Columns		1359715						
ANR	1359896	Symbol	pw -> ptr		1359715						
ANR	1359897	Function	cf_encode_2d	414:0:13305:17419							
ANR	1359898	FunctionDef	"cf_encode_2d (stream_CFE_state * ss , const byte * lbuf , stream_cursor_write * pw , const byte * lprev)"		1359897	0					
ANR	1359899	CompoundStatement		417:0:13431:17419	1359897	0					
ANR	1359900	IdentifierDeclStatement	byte invert_white = ( ss -> BlackIs1 ? 0 : 0xff ) ;	418:4:13437:13482	1359897	0	True				
ANR	1359901	IdentifierDecl	invert_white = ( ss -> BlackIs1 ? 0 : 0xff )		1359897	0					
ANR	1359902	IdentifierDeclType	byte		1359897	0					
ANR	1359903	Identifier	invert_white		1359897	1					
ANR	1359904	AssignmentExpression	invert_white = ( ss -> BlackIs1 ? 0 : 0xff )		1359897	2		=			
ANR	1359905	Identifier	invert_white		1359897	0					
ANR	1359906	ConditionalExpression	ss -> BlackIs1 ? 0 : 0xff		1359897	1					
ANR	1359907	Condition	ss -> BlackIs1		1359897	0					
ANR	1359908	PtrMemberAccess	ss -> BlackIs1		1359897	0					
ANR	1359909	Identifier	ss		1359897	0					
ANR	1359910	Identifier	BlackIs1		1359897	1					
ANR	1359911	PrimaryExpression	0		1359897	1					
ANR	1359912	PrimaryExpression	0xff		1359897	2					
ANR	1359913	IdentifierDeclStatement	byte invert = invert_white ;	419:4:13488:13514	1359897	1	True				
ANR	1359914	IdentifierDecl	invert = invert_white		1359897	0					
ANR	1359915	IdentifierDeclType	byte		1359897	0					
ANR	1359916	Identifier	invert		1359897	1					
ANR	1359917	AssignmentExpression	invert = invert_white		1359897	2		=			
ANR	1359918	Identifier	invert_white		1359897	0					
ANR	1359919	Identifier	invert_white		1359897	1					
ANR	1359920	IdentifierDeclStatement	uint count = ss -> raster << 3 ;	420:4:13520:13548	1359897	2	True				
ANR	1359921	IdentifierDecl	count = ss -> raster << 3		1359897	0					
ANR	1359922	IdentifierDeclType	uint		1359897	0					
ANR	1359923	Identifier	count		1359897	1					
ANR	1359924	AssignmentExpression	count = ss -> raster << 3		1359897	2		=			
ANR	1359925	Identifier	count		1359897	0					
ANR	1359926	ShiftExpression	ss -> raster << 3		1359897	1		<<			
ANR	1359927	PtrMemberAccess	ss -> raster		1359897	0					
ANR	1359928	Identifier	ss		1359897	0					
ANR	1359929	Identifier	raster		1359897	1					
ANR	1359930	PrimaryExpression	3		1359897	1					
ANR	1359931	IdentifierDeclStatement	int end_count = - ss -> Columns & 7 ;	421:4:13554:13586	1359897	3	True				
ANR	1359932	IdentifierDecl	end_count = - ss -> Columns & 7		1359897	0					
ANR	1359933	IdentifierDeclType	int		1359897	0					
ANR	1359934	Identifier	end_count		1359897	1					
ANR	1359935	AssignmentExpression	end_count = - ss -> Columns & 7		1359897	2		=			
ANR	1359936	Identifier	end_count		1359897	0					
ANR	1359937	BitAndExpression	- ss -> Columns & 7		1359897	1		&			
ANR	1359938	UnaryOperationExpression	- ss -> Columns		1359897	0					
ANR	1359939	UnaryOperator	-		1359897	0					
ANR	1359940	PtrMemberAccess	ss -> Columns		1359897	1					
ANR	1359941	Identifier	ss		1359897	0					
ANR	1359942	Identifier	Columns		1359897	1					
ANR	1359943	PrimaryExpression	7		1359897	1					
ANR	1359944	IdentifierDeclStatement	const byte * p = lbuf ;	422:4:13592:13612	1359897	4	True				
ANR	1359945	IdentifierDecl	* p = lbuf		1359897	0					
ANR	1359946	IdentifierDeclType	const byte *		1359897	0					
ANR	1359947	Identifier	p		1359897	1					
ANR	1359948	AssignmentExpression	* p = lbuf		1359897	2		=			
ANR	1359949	Identifier	lbuf		1359897	0					
ANR	1359950	Identifier	lbuf		1359897	1					
ANR	1359951	IdentifierDeclStatement	byte * q = pw -> ptr ;	423:4:13618:13635	1359897	5	True				
ANR	1359952	IdentifierDecl	* q = pw -> ptr		1359897	0					
ANR	1359953	IdentifierDeclType	byte *		1359897	0					
ANR	1359954	Identifier	q		1359897	1					
ANR	1359955	AssignmentExpression	* q = pw -> ptr		1359897	2		=			
ANR	1359956	Identifier	q		1359897	0					
ANR	1359957	PtrMemberAccess	pw -> ptr		1359897	1					
ANR	1359958	Identifier	pw		1359897	0					
ANR	1359959	Identifier	ptr		1359897	1					
ANR	1359960	IdentifierDeclStatement	uint data = * p ++ ^ invert ;	424:4:13641:13666	1359897	6	True				
ANR	1359961	IdentifierDecl	data = * p ++ ^ invert		1359897	0					
ANR	1359962	IdentifierDeclType	uint		1359897	0					
ANR	1359963	Identifier	data		1359897	1					
ANR	1359964	AssignmentExpression	data = * p ++ ^ invert		1359897	2		=			
ANR	1359965	Identifier	data		1359897	0					
ANR	1359966	ExclusiveOrExpression	* p ++ ^ invert		1359897	1		^			
ANR	1359967	UnaryOperationExpression	* p ++		1359897	0					
ANR	1359968	UnaryOperator	*		1359897	0					
ANR	1359969	PostIncDecOperationExpression	p ++		1359897	1					
ANR	1359970	Identifier	p		1359897	0					
ANR	1359971	IncDec	++		1359897	1					
ANR	1359972	Identifier	invert		1359897	1					
ANR	1359973	ExpressionStatement	hce_declare_state	426:4:13673:13690	1359897	7	True				
ANR	1359974	Identifier	hce_declare_state		1359897	0					
ANR	1359975	Statement	static	433:4:14010:14015	1359897	8	True				
ANR	1359976	IdentifierDeclStatement	"const byte initial_count_bit [ 8 ] = { 0 , 1 , 2 , 4 , 8 , 0x10 , 0x20 , 0x40 } ;"	433:11:14017:14102	1359897	9	True				
ANR	1359977	IdentifierDecl	"initial_count_bit [ 8 ] = { 0 , 1 , 2 , 4 , 8 , 0x10 , 0x20 , 0x40 }"		1359897	0					
ANR	1359978	IdentifierDeclType	const byte [ 8 ]		1359897	0					
ANR	1359979	Identifier	initial_count_bit		1359897	1					
ANR	1359980	PrimaryExpression	8		1359897	2					
ANR	1359981	AssignmentExpression	"initial_count_bit [ 8 ] = { 0 , 1 , 2 , 4 , 8 , 0x10 , 0x20 , 0x40 }"		1359897	3		=			
ANR	1359982	Identifier	initial_count_bit		1359897	0					
ANR	1359983	InitializerList	0		1359897	1					
ANR	1359984	PrimaryExpression	0		1359897	0					
ANR	1359985	PrimaryExpression	1		1359897	1					
ANR	1359986	PrimaryExpression	2		1359897	2					
ANR	1359987	PrimaryExpression	4		1359897	3					
ANR	1359988	PrimaryExpression	8		1359897	4					
ANR	1359989	PrimaryExpression	0x10		1359897	5					
ANR	1359990	PrimaryExpression	0x20		1359897	6					
ANR	1359991	PrimaryExpression	0x40		1359897	7					
ANR	1359992	Statement	static	437:4:14108:14113	1359897	10	True				
ANR	1359993	IdentifierDeclStatement	"const byte further_count_bit [ 8 ] = { 0x80 , 1 , 2 , 4 , 8 , 0x10 , 0x20 , 0x40 } ;"	437:11:14115:14203	1359897	11	True				
ANR	1359994	IdentifierDecl	"further_count_bit [ 8 ] = { 0x80 , 1 , 2 , 4 , 8 , 0x10 , 0x20 , 0x40 }"		1359897	0					
ANR	1359995	IdentifierDeclType	const byte [ 8 ]		1359897	0					
ANR	1359996	Identifier	further_count_bit		1359897	1					
ANR	1359997	PrimaryExpression	8		1359897	2					
ANR	1359998	AssignmentExpression	"further_count_bit [ 8 ] = { 0x80 , 1 , 2 , 4 , 8 , 0x10 , 0x20 , 0x40 }"		1359897	3		=			
ANR	1359999	Identifier	further_count_bit		1359897	0					
ANR	1360000	InitializerList	0x80		1359897	1					
ANR	1360001	PrimaryExpression	0x80		1359897	0					
ANR	1360002	PrimaryExpression	1		1359897	1					
ANR	1360003	PrimaryExpression	2		1359897	2					
ANR	1360004	PrimaryExpression	4		1359897	3					
ANR	1360005	PrimaryExpression	8		1359897	4					
ANR	1360006	PrimaryExpression	0x10		1359897	5					
ANR	1360007	PrimaryExpression	0x20		1359897	6					
ANR	1360008	PrimaryExpression	0x40		1359897	7					
ANR	1360009	IdentifierDeclStatement	const byte * count_bit = initial_count_bit ;	441:4:14209:14250	1359897	12	True				
ANR	1360010	IdentifierDecl	* count_bit = initial_count_bit		1359897	0					
ANR	1360011	IdentifierDeclType	const byte *		1359897	0					
ANR	1360012	Identifier	count_bit		1359897	1					
ANR	1360013	AssignmentExpression	* count_bit = initial_count_bit		1359897	2		=			
ANR	1360014	Identifier	initial_count_bit		1359897	0					
ANR	1360015	Identifier	initial_count_bit		1359897	1					
ANR	1360016	ExpressionStatement	hce_load_state ( )	443:4:14257:14273	1359897	13	True				
ANR	1360017	CallExpression	hce_load_state ( )		1359897	0					
ANR	1360018	Callee	hce_load_state		1359897	0					
ANR	1360019	Identifier	hce_load_state		1359897	0					
ANR	1360020	ArgumentList			1359897	1					
ANR	1360021	WhileStatement	while ( count != end_count )		1359897	14					
ANR	1360022	Condition	count != end_count	444:11:14286:14303	1359897	0	True				
ANR	1360023	EqualityExpression	count != end_count		1359897	0		!=			
ANR	1360024	Identifier	count		1359897	0					
ANR	1360025	Identifier	end_count		1359897	1					
ANR	1360026	CompoundStatement		42:8:1309:1317	1359897	1					
ANR	1360027	IdentifierDeclStatement	uint a0 = count ;	450:8:14506:14521	1359897	0	True				
ANR	1360028	IdentifierDecl	a0 = count		1359897	0					
ANR	1360029	IdentifierDeclType	uint		1359897	0					
ANR	1360030	Identifier	a0		1359897	1					
ANR	1360031	AssignmentExpression	a0 = count		1359897	2		=			
ANR	1360032	Identifier	count		1359897	0					
ANR	1360033	Identifier	count		1359897	1					
ANR	1360034	IdentifierDeclStatement	uint a1 ;	451:8:14531:14538	1359897	1	True				
ANR	1360035	IdentifierDecl	a1		1359897	0					
ANR	1360036	IdentifierDeclType	uint		1359897	0					
ANR	1360037	Identifier	a1		1359897	1					
ANR	1360038	Statement	define	453:1:14542:14547	1359897	2	True				
ANR	1360039	Statement	b1	453:8:14549:14550	1359897	3	True				
ANR	1360040	Statement	(	453:11:14552:14552	1359897	4	True				
ANR	1360041	Statement	a1	453:12:14553:14554	1359897	5	True				
ANR	1360042	Statement	-	453:15:14556:14556	1359897	6	True				
ANR	1360043	Statement	diff	453:17:14558:14561	1359897	7	True				
ANR	1360044	Statement	)	453:21:14562:14562	1359897	8	True				
ANR	1360045	IdentifierDeclStatement	int diff ;	454:8:14597:14605	1359897	9	True				
ANR	1360046	IdentifierDecl	diff		1359897	0					
ANR	1360047	IdentifierDeclType	int		1359897	0					
ANR	1360048	Identifier	diff		1359897	1					
ANR	1360049	IdentifierDeclStatement	uint prev_count = count ;	455:8:14615:14638	1359897	10	True				
ANR	1360050	IdentifierDecl	prev_count = count		1359897	0					
ANR	1360051	IdentifierDeclType	uint		1359897	0					
ANR	1360052	Identifier	prev_count		1359897	1					
ANR	1360053	AssignmentExpression	prev_count = count		1359897	2		=			
ANR	1360054	Identifier	count		1359897	0					
ANR	1360055	Identifier	count		1359897	1					
ANR	1360056	IdentifierDeclStatement	const byte * prev_p = p - lbuf + lprev ;	456:8:14648:14685	1359897	11	True				
ANR	1360057	IdentifierDecl	* prev_p = p - lbuf + lprev		1359897	0					
ANR	1360058	IdentifierDeclType	const byte *		1359897	0					
ANR	1360059	Identifier	prev_p		1359897	1					
ANR	1360060	AssignmentExpression	* prev_p = p - lbuf + lprev		1359897	2		=			
ANR	1360061	Identifier	prev_p		1359897	0					
ANR	1360062	AdditiveExpression	p - lbuf + lprev		1359897	1		-			
ANR	1360063	Identifier	p		1359897	0					
ANR	1360064	AdditiveExpression	lbuf + lprev		1359897	1		+			
ANR	1360065	Identifier	lbuf		1359897	0					
ANR	1360066	Identifier	lprev		1359897	1					
ANR	1360067	IdentifierDeclStatement	byte prev_data = prev_p [ - 1 ] ^ invert ;	457:8:14695:14731	1359897	12	True				
ANR	1360068	IdentifierDecl	prev_data = prev_p [ - 1 ] ^ invert		1359897	0					
ANR	1360069	IdentifierDeclType	byte		1359897	0					
ANR	1360070	Identifier	prev_data		1359897	1					
ANR	1360071	AssignmentExpression	prev_data = prev_p [ - 1 ] ^ invert		1359897	2		=			
ANR	1360072	Identifier	prev_data		1359897	0					
ANR	1360073	ExclusiveOrExpression	prev_p [ - 1 ] ^ invert		1359897	1		^			
ANR	1360074	ArrayIndexing	prev_p [ - 1 ]		1359897	0					
ANR	1360075	Identifier	prev_p		1359897	0					
ANR	1360076	UnaryOperationExpression	- 1		1359897	1					
ANR	1360077	UnaryOperator	-		1359897	0					
ANR	1360078	PrimaryExpression	1		1359897	1					
ANR	1360079	Identifier	invert		1359897	1					
ANR	1360080	IdentifierDeclStatement	int rlen ;	458:8:14741:14749	1359897	13	True				
ANR	1360081	IdentifierDecl	rlen		1359897	0					
ANR	1360082	IdentifierDeclType	int		1359897	0					
ANR	1360083	Identifier	rlen		1359897	1					
ANR	1360084	ExpressionStatement	"skip_white_pixels ( data , p , count , invert , rlen )"	461:8:14806:14853	1359897	14	True				
ANR	1360085	CallExpression	"skip_white_pixels ( data , p , count , invert , rlen )"		1359897	0					
ANR	1360086	Callee	skip_white_pixels		1359897	0					
ANR	1360087	Identifier	skip_white_pixels		1359897	0					
ANR	1360088	ArgumentList	data		1359897	1					
ANR	1360089	Argument	data		1359897	0					
ANR	1360090	Identifier	data		1359897	0					
ANR	1360091	Argument	p		1359897	1					
ANR	1360092	Identifier	p		1359897	0					
ANR	1360093	Argument	count		1359897	2					
ANR	1360094	Identifier	count		1359897	0					
ANR	1360095	Argument	invert		1359897	3					
ANR	1360096	Identifier	invert		1359897	0					
ANR	1360097	Argument	rlen		1359897	4					
ANR	1360098	Identifier	rlen		1359897	0					
ANR	1360099	ExpressionStatement	a1 = count	462:8:14863:14873	1359897	15	True				
ANR	1360100	AssignmentExpression	a1 = count		1359897	0		=			
ANR	1360101	Identifier	a1		1359897	0					
ANR	1360102	Identifier	count		1359897	1					
ANR	1360103	IfStatement	if ( ( prev_data & count_bit [ prev_count & 7 ] ) )		1359897	16					
ANR	1360104	Condition	prev_data & count_bit [ prev_count & 7 ]	463:12:14887:14925	1359897	0	True				
ANR	1360105	BitAndExpression	prev_data & count_bit [ prev_count & 7 ]		1359897	0		&			
ANR	1360106	Identifier	prev_data		1359897	0					
ANR	1360107	ArrayIndexing	count_bit [ prev_count & 7 ]		1359897	1					
ANR	1360108	Identifier	count_bit		1359897	0					
ANR	1360109	BitAndExpression	prev_count & 7		1359897	1		&			
ANR	1360110	Identifier	prev_count		1359897	0					
ANR	1360111	PrimaryExpression	7		1359897	1					
ANR	1360112	CompoundStatement		47:53:1496:1496	1359897	1					
ANR	1360113	ExpressionStatement	"skip_black_pixels ( prev_data , prev_p , prev_count , invert , rlen )"	465:12:14991:15053	1359897	0	True				
ANR	1360114	CallExpression	"skip_black_pixels ( prev_data , prev_p , prev_count , invert , rlen )"		1359897	0					
ANR	1360115	Callee	skip_black_pixels		1359897	0					
ANR	1360116	Identifier	skip_black_pixels		1359897	0					
ANR	1360117	ArgumentList	prev_data		1359897	1					
ANR	1360118	Argument	prev_data		1359897	0					
ANR	1360119	Identifier	prev_data		1359897	0					
ANR	1360120	Argument	prev_p		1359897	1					
ANR	1360121	Identifier	prev_p		1359897	0					
ANR	1360122	Argument	prev_count		1359897	2					
ANR	1360123	Identifier	prev_count		1359897	0					
ANR	1360124	Argument	invert		1359897	3					
ANR	1360125	Identifier	invert		1359897	0					
ANR	1360126	Argument	rlen		1359897	4					
ANR	1360127	Identifier	rlen		1359897	0					
ANR	1360128	ExpressionStatement	count_bit = further_count_bit	467:8:15073:15102	1359897	17	True				
ANR	1360129	AssignmentExpression	count_bit = further_count_bit		1359897	0		=			
ANR	1360130	Identifier	count_bit		1359897	0					
ANR	1360131	Identifier	further_count_bit		1359897	1					
ANR	1360132	Label	pass :	468:6:15139:15143	1359897	18	True				
ANR	1360133	Identifier	pass		1359897	0					
ANR	1360134	IfStatement	if ( prev_count != end_count )		1359897	19					
ANR	1360135	Condition	prev_count != end_count	469:12:15157:15179	1359897	0	True				
ANR	1360136	EqualityExpression	prev_count != end_count		1359897	0		!=			
ANR	1360137	Identifier	prev_count		1359897	0					
ANR	1360138	Identifier	end_count		1359897	1					
ANR	1360139	ExpressionStatement	"skip_white_pixels ( prev_data , prev_p , prev_count , invert , rlen )"	470:12:15194:15256	1359897	1	True				
ANR	1360140	CallExpression	"skip_white_pixels ( prev_data , prev_p , prev_count , invert , rlen )"		1359897	0					
ANR	1360141	Callee	skip_white_pixels		1359897	0					
ANR	1360142	Identifier	skip_white_pixels		1359897	0					
ANR	1360143	ArgumentList	prev_data		1359897	1					
ANR	1360144	Argument	prev_data		1359897	0					
ANR	1360145	Identifier	prev_data		1359897	0					
ANR	1360146	Argument	prev_p		1359897	1					
ANR	1360147	Identifier	prev_p		1359897	0					
ANR	1360148	Argument	prev_count		1359897	2					
ANR	1360149	Identifier	prev_count		1359897	0					
ANR	1360150	Argument	invert		1359897	3					
ANR	1360151	Identifier	invert		1359897	0					
ANR	1360152	Argument	rlen		1359897	4					
ANR	1360153	Identifier	rlen		1359897	0					
ANR	1360154	ExpressionStatement	diff = a1 - prev_count	471:8:15266:15288	1359897	20	True				
ANR	1360155	AssignmentExpression	diff = a1 - prev_count		1359897	0		=			
ANR	1360156	Identifier	diff		1359897	0					
ANR	1360157	AdditiveExpression	a1 - prev_count		1359897	1		-			
ANR	1360158	Identifier	a1		1359897	0					
ANR	1360159	Identifier	prev_count		1359897	1					
ANR	1360160	IfStatement	if ( diff <= - 2 )		1359897	21					
ANR	1360161	Condition	diff <= - 2	475:12:15482:15491	1359897	0	True				
ANR	1360162	RelationalExpression	diff <= - 2		1359897	0		<=			
ANR	1360163	Identifier	diff		1359897	0					
ANR	1360164	UnaryOperationExpression	- 2		1359897	1					
ANR	1360165	UnaryOperator	-		1359897	0					
ANR	1360166	PrimaryExpression	2		1359897	1					
ANR	1360167	CompoundStatement		59:24:2062:2062	1359897	1					
ANR	1360168	IfStatement	if ( prev_count != end_count )		1359897	0					
ANR	1360169	Condition	prev_count != end_count	477:16:15562:15584	1359897	0	True				
ANR	1360170	EqualityExpression	prev_count != end_count		1359897	0		!=			
ANR	1360171	Identifier	prev_count		1359897	0					
ANR	1360172	Identifier	end_count		1359897	1					
ANR	1360173	ExpressionStatement	"skip_black_pixels ( prev_data , prev_p , prev_count , invert , rlen )"	478:16:15603:15699	1359897	1	True				
ANR	1360174	CallExpression	"skip_black_pixels ( prev_data , prev_p , prev_count , invert , rlen )"		1359897	0					
ANR	1360175	Callee	skip_black_pixels		1359897	0					
ANR	1360176	Identifier	skip_black_pixels		1359897	0					
ANR	1360177	ArgumentList	prev_data		1359897	1					
ANR	1360178	Argument	prev_data		1359897	0					
ANR	1360179	Identifier	prev_data		1359897	0					
ANR	1360180	Argument	prev_p		1359897	1					
ANR	1360181	Identifier	prev_p		1359897	0					
ANR	1360182	Argument	prev_count		1359897	2					
ANR	1360183	Identifier	prev_count		1359897	0					
ANR	1360184	Argument	invert		1359897	3					
ANR	1360185	Identifier	invert		1359897	0					
ANR	1360186	Argument	rlen		1359897	4					
ANR	1360187	Identifier	rlen		1359897	0					
ANR	1360188	IfStatement	if ( prev_count > a1 )		1359897	1					
ANR	1360189	Condition	prev_count > a1	480:16:15717:15731	1359897	0	True				
ANR	1360190	RelationalExpression	prev_count > a1		1359897	0		>			
ANR	1360191	Identifier	prev_count		1359897	0					
ANR	1360192	Identifier	a1		1359897	1					
ANR	1360193	CompoundStatement		64:33:2302:2302	1359897	1					
ANR	1360194	ExpressionStatement	"if_debug4m ( 'W' , ss -> memory , ""[W]pass: count = %d, a1 = %d, b1 = %d, new count = %d\\n"" , a0 , a1 , b1 , prev_count )"	482:16:15789:15926	1359897	0	True				
ANR	1360195	CallExpression	"if_debug4m ( 'W' , ss -> memory , ""[W]pass: count = %d, a1 = %d, b1 = %d, new count = %d\\n"" , a0 , a1 , b1 , prev_count )"		1359897	0					
ANR	1360196	Callee	if_debug4m		1359897	0					
ANR	1360197	Identifier	if_debug4m		1359897	0					
ANR	1360198	ArgumentList	'W'		1359897	1					
ANR	1360199	Argument	'W'		1359897	0					
ANR	1360200	PrimaryExpression	'W'		1359897	0					
ANR	1360201	Argument	ss -> memory		1359897	1					
ANR	1360202	PtrMemberAccess	ss -> memory		1359897	0					
ANR	1360203	Identifier	ss		1359897	0					
ANR	1360204	Identifier	memory		1359897	1					
ANR	1360205	Argument	"""[W]pass: count = %d, a1 = %d, b1 = %d, new count = %d\\n"""		1359897	2					
ANR	1360206	PrimaryExpression	"""[W]pass: count = %d, a1 = %d, b1 = %d, new count = %d\\n"""		1359897	0					
ANR	1360207	Argument	a0		1359897	3					
ANR	1360208	Identifier	a0		1359897	0					
ANR	1360209	Argument	a1		1359897	4					
ANR	1360210	Identifier	a1		1359897	0					
ANR	1360211	Argument	b1		1359897	5					
ANR	1360212	Identifier	b1		1359897	0					
ANR	1360213	Argument	prev_count		1359897	6					
ANR	1360214	Identifier	prev_count		1359897	0					
ANR	1360215	ExpressionStatement	"hc_put_value ( ss , q , cf2_run_pass_value , cf2_run_pass_length )"	484:16:15944:16004	1359897	1	True				
ANR	1360216	CallExpression	"hc_put_value ( ss , q , cf2_run_pass_value , cf2_run_pass_length )"		1359897	0					
ANR	1360217	Callee	hc_put_value		1359897	0					
ANR	1360218	Identifier	hc_put_value		1359897	0					
ANR	1360219	ArgumentList	ss		1359897	1					
ANR	1360220	Argument	ss		1359897	0					
ANR	1360221	Identifier	ss		1359897	0					
ANR	1360222	Argument	q		1359897	1					
ANR	1360223	Identifier	q		1359897	0					
ANR	1360224	Argument	cf2_run_pass_value		1359897	2					
ANR	1360225	Identifier	cf2_run_pass_value		1359897	0					
ANR	1360226	Argument	cf2_run_pass_length		1359897	3					
ANR	1360227	Identifier	cf2_run_pass_length		1359897	0					
ANR	1360228	ExpressionStatement	a0 = prev_count	485:16:16022:16037	1359897	2	True				
ANR	1360229	AssignmentExpression	a0 = prev_count		1359897	0		=			
ANR	1360230	Identifier	a0		1359897	0					
ANR	1360231	Identifier	prev_count		1359897	1					
ANR	1360232	GotoStatement	goto pass ;	486:16:16055:16064	1359897	3	True				
ANR	1360233	Identifier	pass		1359897	0					
ANR	1360234	IfStatement	if ( diff <= 3 && diff >= - 3 )		1359897	22					
ANR	1360235	Condition	diff <= 3 && diff >= - 3	490:12:16143:16165	1359897	0	True				
ANR	1360236	AndExpression	diff <= 3 && diff >= - 3		1359897	0		&&			
ANR	1360237	RelationalExpression	diff <= 3		1359897	0		<=			
ANR	1360238	Identifier	diff		1359897	0					
ANR	1360239	PrimaryExpression	3		1359897	1					
ANR	1360240	RelationalExpression	diff >= - 3		1359897	1		>=			
ANR	1360241	Identifier	diff		1359897	0					
ANR	1360242	UnaryOperationExpression	- 3		1359897	1					
ANR	1360243	UnaryOperator	-		1359897	0					
ANR	1360244	PrimaryExpression	3		1359897	1					
ANR	1360245	CompoundStatement		76:12:2789:2836	1359897	1					
ANR	1360246	IdentifierDeclStatement	const cfe_run * cp = & cf2_run_vertical [ diff + 3 ] ;	492:12:16221:16268	1359897	0	True				
ANR	1360247	IdentifierDecl	* cp = & cf2_run_vertical [ diff + 3 ]		1359897	0					
ANR	1360248	IdentifierDeclType	const cfe_run *		1359897	0					
ANR	1360249	Identifier	cp		1359897	1					
ANR	1360250	AssignmentExpression	* cp = & cf2_run_vertical [ diff + 3 ]		1359897	2		=			
ANR	1360251	Identifier	cp		1359897	0					
ANR	1360252	UnaryOperationExpression	& cf2_run_vertical [ diff + 3 ]		1359897	1					
ANR	1360253	UnaryOperator	&		1359897	0					
ANR	1360254	ArrayIndexing	cf2_run_vertical [ diff + 3 ]		1359897	1					
ANR	1360255	Identifier	cf2_run_vertical		1359897	0					
ANR	1360256	AdditiveExpression	diff + 3		1359897	1		+			
ANR	1360257	Identifier	diff		1359897	0					
ANR	1360258	PrimaryExpression	3		1359897	1					
ANR	1360259	ExpressionStatement	"if_debug5m ( 'W' , ss -> memory , ""[W]vertical %d: count = %d, a1 = %d, b1 = %d, new count = %d\\n"" , diff , a0 , a1 , b1 , count )"	494:12:16283:16424	1359897	1	True				
ANR	1360260	CallExpression	"if_debug5m ( 'W' , ss -> memory , ""[W]vertical %d: count = %d, a1 = %d, b1 = %d, new count = %d\\n"" , diff , a0 , a1 , b1 , count )"		1359897	0					
ANR	1360261	Callee	if_debug5m		1359897	0					
ANR	1360262	Identifier	if_debug5m		1359897	0					
ANR	1360263	ArgumentList	'W'		1359897	1					
ANR	1360264	Argument	'W'		1359897	0					
ANR	1360265	PrimaryExpression	'W'		1359897	0					
ANR	1360266	Argument	ss -> memory		1359897	1					
ANR	1360267	PtrMemberAccess	ss -> memory		1359897	0					
ANR	1360268	Identifier	ss		1359897	0					
ANR	1360269	Identifier	memory		1359897	1					
ANR	1360270	Argument	"""[W]vertical %d: count = %d, a1 = %d, b1 = %d, new count = %d\\n"""		1359897	2					
ANR	1360271	PrimaryExpression	"""[W]vertical %d: count = %d, a1 = %d, b1 = %d, new count = %d\\n"""		1359897	0					
ANR	1360272	Argument	diff		1359897	3					
ANR	1360273	Identifier	diff		1359897	0					
ANR	1360274	Argument	a0		1359897	4					
ANR	1360275	Identifier	a0		1359897	0					
ANR	1360276	Argument	a1		1359897	5					
ANR	1360277	Identifier	a1		1359897	0					
ANR	1360278	Argument	b1		1359897	6					
ANR	1360279	Identifier	b1		1359897	0					
ANR	1360280	Argument	count		1359897	7					
ANR	1360281	Identifier	count		1359897	0					
ANR	1360282	ExpressionStatement	"hc_put_code ( ss , q , cp )"	496:12:16438:16460	1359897	2	True				
ANR	1360283	CallExpression	"hc_put_code ( ss , q , cp )"		1359897	0					
ANR	1360284	Callee	hc_put_code		1359897	0					
ANR	1360285	Identifier	hc_put_code		1359897	0					
ANR	1360286	ArgumentList	ss		1359897	1					
ANR	1360287	Argument	ss		1359897	0					
ANR	1360288	Identifier	ss		1359897	0					
ANR	1360289	Argument	q		1359897	1					
ANR	1360290	Identifier	q		1359897	0					
ANR	1360291	Argument	cp		1359897	2					
ANR	1360292	Identifier	cp		1359897	0					
ANR	1360293	ExpressionStatement	invert = ~invert	497:12:16474:16490	1359897	3	True				
ANR	1360294	AssignmentExpression	invert = ~invert		1359897	0		=			
ANR	1360295	Identifier	invert		1359897	0					
ANR	1360296	Identifier	~invert		1359897	1					
ANR	1360297	ExpressionStatement	data ^= 0xff	498:12:16530:16542	1359897	4	True				
ANR	1360298	AssignmentExpression	data ^= 0xff		1359897	0		^=			
ANR	1360299	Identifier	data		1359897	0					
ANR	1360300	PrimaryExpression	0xff		1359897	1					
ANR	1360301	ContinueStatement	continue ;	499:12:16556:16564	1359897	5	True				
ANR	1360302	IfStatement	if ( count != end_count )		1359897	23					
ANR	1360303	Condition	count != end_count	502:12:16634:16651	1359897	0	True				
ANR	1360304	EqualityExpression	count != end_count		1359897	0		!=			
ANR	1360305	Identifier	count		1359897	0					
ANR	1360306	Identifier	end_count		1359897	1					
ANR	1360307	ExpressionStatement	"skip_black_pixels ( data , p , count , invert , rlen )"	503:12:16666:16713	1359897	1	True				
ANR	1360308	CallExpression	"skip_black_pixels ( data , p , count , invert , rlen )"		1359897	0					
ANR	1360309	Callee	skip_black_pixels		1359897	0					
ANR	1360310	Identifier	skip_black_pixels		1359897	0					
ANR	1360311	ArgumentList	data		1359897	1					
ANR	1360312	Argument	data		1359897	0					
ANR	1360313	Identifier	data		1359897	0					
ANR	1360314	Argument	p		1359897	1					
ANR	1360315	Identifier	p		1359897	0					
ANR	1360316	Argument	count		1359897	2					
ANR	1360317	Identifier	count		1359897	0					
ANR	1360318	Argument	invert		1359897	3					
ANR	1360319	Identifier	invert		1359897	0					
ANR	1360320	Argument	rlen		1359897	4					
ANR	1360321	Identifier	rlen		1359897	0					
ANR	1360322	ExpressionStatement	"hc_put_value ( ss , q , cf2_run_horizontal_value , cf2_run_horizontal_length )"	504:8:16737:16830	1359897	24	True				
ANR	1360323	CallExpression	"hc_put_value ( ss , q , cf2_run_horizontal_value , cf2_run_horizontal_length )"		1359897	0					
ANR	1360324	Callee	hc_put_value		1359897	0					
ANR	1360325	Identifier	hc_put_value		1359897	0					
ANR	1360326	ArgumentList	ss		1359897	1					
ANR	1360327	Argument	ss		1359897	0					
ANR	1360328	Identifier	ss		1359897	0					
ANR	1360329	Argument	q		1359897	1					
ANR	1360330	Identifier	q		1359897	0					
ANR	1360331	Argument	cf2_run_horizontal_value		1359897	2					
ANR	1360332	Identifier	cf2_run_horizontal_value		1359897	0					
ANR	1360333	Argument	cf2_run_horizontal_length		1359897	3					
ANR	1360334	Identifier	cf2_run_horizontal_length		1359897	0					
ANR	1360335	ExpressionStatement	a0 -= a1	506:8:16840:16848	1359897	25	True				
ANR	1360336	AssignmentExpression	a0 -= a1		1359897	0		-=			
ANR	1360337	Identifier	a0		1359897	0					
ANR	1360338	Identifier	a1		1359897	1					
ANR	1360339	ExpressionStatement	a1 -= count	507:8:16858:16869	1359897	26	True				
ANR	1360340	AssignmentExpression	a1 -= count		1359897	0		-=			
ANR	1360341	Identifier	a1		1359897	0					
ANR	1360342	Identifier	count		1359897	1					
ANR	1360343	IfStatement	if ( invert == invert_white )		1359897	27					
ANR	1360344	Condition	invert == invert_white	508:12:16883:16904	1359897	0	True				
ANR	1360345	EqualityExpression	invert == invert_white		1359897	0		==			
ANR	1360346	Identifier	invert		1359897	0					
ANR	1360347	Identifier	invert_white		1359897	1					
ANR	1360348	CompoundStatement		92:36:3475:3475	1359897	1					
ANR	1360349	ExpressionStatement	"if_debug3m ( 'W' , ss -> memory , ""[W]horizontal: white = %d, black = %d, new count = %d\\n"" , a0 , a1 , count )"	509:12:16921:17044	1359897	0	True				
ANR	1360350	CallExpression	"if_debug3m ( 'W' , ss -> memory , ""[W]horizontal: white = %d, black = %d, new count = %d\\n"" , a0 , a1 , count )"		1359897	0					
ANR	1360351	Callee	if_debug3m		1359897	0					
ANR	1360352	Identifier	if_debug3m		1359897	0					
ANR	1360353	ArgumentList	'W'		1359897	1					
ANR	1360354	Argument	'W'		1359897	0					
ANR	1360355	PrimaryExpression	'W'		1359897	0					
ANR	1360356	Argument	ss -> memory		1359897	1					
ANR	1360357	PtrMemberAccess	ss -> memory		1359897	0					
ANR	1360358	Identifier	ss		1359897	0					
ANR	1360359	Identifier	memory		1359897	1					
ANR	1360360	Argument	"""[W]horizontal: white = %d, black = %d, new count = %d\\n"""		1359897	2					
ANR	1360361	PrimaryExpression	"""[W]horizontal: white = %d, black = %d, new count = %d\\n"""		1359897	0					
ANR	1360362	Argument	a0		1359897	3					
ANR	1360363	Identifier	a0		1359897	0					
ANR	1360364	Argument	a1		1359897	4					
ANR	1360365	Identifier	a1		1359897	0					
ANR	1360366	Argument	count		1359897	5					
ANR	1360367	Identifier	count		1359897	0					
ANR	1360368	ExpressionStatement	"CF_PUT_WHITE_RUN ( ss , a0 )"	511:12:17058:17082	1359897	1	True				
ANR	1360369	CallExpression	"CF_PUT_WHITE_RUN ( ss , a0 )"		1359897	0					
ANR	1360370	Callee	CF_PUT_WHITE_RUN		1359897	0					
ANR	1360371	Identifier	CF_PUT_WHITE_RUN		1359897	0					
ANR	1360372	ArgumentList	ss		1359897	1					
ANR	1360373	Argument	ss		1359897	0					
ANR	1360374	Identifier	ss		1359897	0					
ANR	1360375	Argument	a0		1359897	1					
ANR	1360376	Identifier	a0		1359897	0					
ANR	1360377	ExpressionStatement	"CF_PUT_BLACK_RUN ( ss , a1 )"	512:12:17096:17120	1359897	2	True				
ANR	1360378	CallExpression	"CF_PUT_BLACK_RUN ( ss , a1 )"		1359897	0					
ANR	1360379	Callee	CF_PUT_BLACK_RUN		1359897	0					
ANR	1360380	Identifier	CF_PUT_BLACK_RUN		1359897	0					
ANR	1360381	ArgumentList	ss		1359897	1					
ANR	1360382	Argument	ss		1359897	0					
ANR	1360383	Identifier	ss		1359897	0					
ANR	1360384	Argument	a1		1359897	1					
ANR	1360385	Identifier	a1		1359897	0					
ANR	1360386	ElseStatement	else		1359897	0					
ANR	1360387	CompoundStatement		97:15:3705:3705	1359897	0					
ANR	1360388	ExpressionStatement	"if_debug3m ( 'W' , ss -> memory , ""[W]horizontal: black = %d, white = %d, new count = %d\\n"" , a0 , a1 , count )"	514:12:17151:17275	1359897	0	True				
ANR	1360389	CallExpression	"if_debug3m ( 'W' , ss -> memory , ""[W]horizontal: black = %d, white = %d, new count = %d\\n"" , a0 , a1 , count )"		1359897	0					
ANR	1360390	Callee	if_debug3m		1359897	0					
ANR	1360391	Identifier	if_debug3m		1359897	0					
ANR	1360392	ArgumentList	'W'		1359897	1					
ANR	1360393	Argument	'W'		1359897	0					
ANR	1360394	PrimaryExpression	'W'		1359897	0					
ANR	1360395	Argument	ss -> memory		1359897	1					
ANR	1360396	PtrMemberAccess	ss -> memory		1359897	0					
ANR	1360397	Identifier	ss		1359897	0					
ANR	1360398	Identifier	memory		1359897	1					
ANR	1360399	Argument	"""[W]horizontal: black = %d, white = %d, new count = %d\\n"""		1359897	2					
ANR	1360400	PrimaryExpression	"""[W]horizontal: black = %d, white = %d, new count = %d\\n"""		1359897	0					
ANR	1360401	Argument	a0		1359897	3					
ANR	1360402	Identifier	a0		1359897	0					
ANR	1360403	Argument	a1		1359897	4					
ANR	1360404	Identifier	a1		1359897	0					
ANR	1360405	Argument	count		1359897	5					
ANR	1360406	Identifier	count		1359897	0					
ANR	1360407	ExpressionStatement	"CF_PUT_BLACK_RUN ( ss , a0 )"	516:12:17289:17313	1359897	1	True				
ANR	1360408	CallExpression	"CF_PUT_BLACK_RUN ( ss , a0 )"		1359897	0					
ANR	1360409	Callee	CF_PUT_BLACK_RUN		1359897	0					
ANR	1360410	Identifier	CF_PUT_BLACK_RUN		1359897	0					
ANR	1360411	ArgumentList	ss		1359897	1					
ANR	1360412	Argument	ss		1359897	0					
ANR	1360413	Identifier	ss		1359897	0					
ANR	1360414	Argument	a0		1359897	1					
ANR	1360415	Identifier	a0		1359897	0					
ANR	1360416	ExpressionStatement	"CF_PUT_WHITE_RUN ( ss , a1 )"	517:12:17327:17351	1359897	2	True				
ANR	1360417	CallExpression	"CF_PUT_WHITE_RUN ( ss , a1 )"		1359897	0					
ANR	1360418	Callee	CF_PUT_WHITE_RUN		1359897	0					
ANR	1360419	Identifier	CF_PUT_WHITE_RUN		1359897	0					
ANR	1360420	ArgumentList	ss		1359897	1					
ANR	1360421	Argument	ss		1359897	0					
ANR	1360422	Identifier	ss		1359897	0					
ANR	1360423	Argument	a1		1359897	1					
ANR	1360424	Identifier	a1		1359897	0					
ANR	1360425	Statement	undef	518:1:17354:17358	1359897	3	True				
ANR	1360426	Statement	b1	518:7:17360:17361	1359897	4	True				
ANR	1360427	ExpressionStatement	hce_store_state ( )	521:4:17383:17400	1359897	15	True				
ANR	1360428	CallExpression	hce_store_state ( )		1359897	0					
ANR	1360429	Callee	hce_store_state		1359897	0					
ANR	1360430	Identifier	hce_store_state		1359897	0					
ANR	1360431	ArgumentList			1359897	1					
ANR	1360432	ExpressionStatement	pw -> ptr = q	522:4:17406:17417	1359897	16	True				
ANR	1360433	AssignmentExpression	pw -> ptr = q		1359897	0		=			
ANR	1360434	PtrMemberAccess	pw -> ptr		1359897	0					
ANR	1360435	Identifier	pw		1359897	0					
ANR	1360436	Identifier	ptr		1359897	1					
ANR	1360437	Identifier	q		1359897	1					
ANR	1360438	ReturnType	static void		1359897	1					
ANR	1360439	Identifier	cf_encode_2d		1359897	2					
ANR	1360440	ParameterList	"stream_CFE_state * ss , const byte * lbuf , stream_cursor_write * pw , const byte * lprev"		1359897	3					
ANR	1360441	Parameter	stream_CFE_state * ss	415:13:13330:13350	1359897	0	True				
ANR	1360442	ParameterType	stream_CFE_state *		1359897	0					
ANR	1360443	Identifier	ss		1359897	1					
ANR	1360444	Parameter	const byte * lbuf	415:36:13353:13369	1359897	1	True				
ANR	1360445	ParameterType	const byte *		1359897	0					
ANR	1360446	Identifier	lbuf		1359897	1					
ANR	1360447	Parameter	stream_cursor_write * pw	415:55:13372:13395	1359897	2	True				
ANR	1360448	ParameterType	stream_cursor_write *		1359897	0					
ANR	1360449	Identifier	pw		1359897	1					
ANR	1360450	Parameter	const byte * lprev	416:13:13411:13428	1359897	3	True				
ANR	1360451	ParameterType	const byte *		1359897	0					
ANR	1360452	Identifier	lprev		1359897	1					
ANR	1360453	CFGEntryNode	ENTRY		1359897		True				
ANR	1360454	CFGExitNode	EXIT		1359897		True				
ANR	1360455	Symbol	ss -> memory		1359897						
ANR	1360456	Symbol	data		1359897						
ANR	1360457	Symbol	* ss		1359897						
ANR	1360458	Symbol	pw		1359897						
ANR	1360459	Symbol	count_bit		1359897						
ANR	1360460	Symbol	further_count_bit		1359897						
ANR	1360461	Symbol	b1		1359897						
ANR	1360462	Symbol	cf2_run_pass_value		1359897						
ANR	1360463	Symbol	initial_count_bit		1359897						
ANR	1360464	Symbol	rlen		1359897						
ANR	1360465	Symbol	prev_count		1359897						
ANR	1360466	Symbol	* prev_p		1359897						
ANR	1360467	Symbol	~invert		1359897						
ANR	1360468	Symbol	end_count		1359897						
ANR	1360469	Symbol	pw -> ptr		1359897						
ANR	1360470	Symbol	ss		1359897						
ANR	1360471	Symbol	ss -> BlackIs1		1359897						
ANR	1360472	Symbol	invert		1359897						
ANR	1360473	Symbol	* p ++		1359897						
ANR	1360474	Symbol	prev_data		1359897						
ANR	1360475	Symbol	count		1359897						
ANR	1360476	Symbol	ss -> raster		1359897						
ANR	1360477	Symbol	* prev_count		1359897						
ANR	1360478	Symbol	diff		1359897						
ANR	1360479	Symbol	* count_bit		1359897						
ANR	1360480	Symbol	cp		1359897						
ANR	1360481	Symbol	cf2_run_vertical		1359897						
ANR	1360482	Symbol	invert_white		1359897						
ANR	1360483	Symbol	* pw		1359897						
ANR	1360484	Symbol	a0		1359897						
ANR	1360485	Symbol	p		1359897						
ANR	1360486	Symbol	a1		1359897						
ANR	1360487	Symbol	prev_p		1359897						
ANR	1360488	Symbol	q		1359897						
ANR	1360489	Symbol	cf2_run_pass_length		1359897						
ANR	1360490	Symbol	lbuf		1359897						
ANR	1360491	Symbol	cf2_run_horizontal_value		1359897						
ANR	1360492	Symbol	lprev		1359897						
ANR	1360493	Symbol	cf2_run_horizontal_length		1359897						
ANR	1360494	Symbol	ss -> Columns		1359897						
ANR	1360495	DeclStmt									
ANR	1360496	Decl							const stream_template	const stream_template	s_CFE_template
