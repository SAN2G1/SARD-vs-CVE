command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	513801	File	data/converged/CVE-2018-16863_ghostpdl/base_gsdparam.c								
ANR	513802	DeclStmt									
ANR	513803	Decl							bool	"bool ( gx_device * , byte * )"	param_HWColorMap
ANR	513804	Function	gs_get_device_or_hw_params	37:0:1201:2245							
ANR	513805	FunctionDef	"gs_get_device_or_hw_params (gx_device * orig_dev , gs_param_list * plist , bool is_hardware)"		513804	0					
ANR	513806	CompoundStatement		40:0:1322:2245	513804	0					
ANR	513807	IdentifierDeclStatement	gx_device * dev ;	45:4:1430:1444	513804	0	True				
ANR	513808	IdentifierDecl	* dev		513804	0					
ANR	513809	IdentifierDeclType	gx_device *		513804	0					
ANR	513810	Identifier	dev		513804	1					
ANR	513811	IdentifierDeclStatement	int code = 0 ;	46:4:1450:1462	513804	1	True				
ANR	513812	IdentifierDecl	code = 0		513804	0					
ANR	513813	IdentifierDeclType	int		513804	0					
ANR	513814	Identifier	code		513804	1					
ANR	513815	AssignmentExpression	code = 0		513804	2		=			
ANR	513816	Identifier	code		513804	0					
ANR	513817	PrimaryExpression	0		513804	1					
ANR	513818	IfStatement	if ( orig_dev -> memory )		513804	2					
ANR	513819	Condition	orig_dev -> memory	48:8:1473:1488	513804	0	True				
ANR	513820	PtrMemberAccess	orig_dev -> memory		513804	0					
ANR	513821	Identifier	orig_dev		513804	0					
ANR	513822	Identifier	memory		513804	1					
ANR	513823	ExpressionStatement	dev = orig_dev	49:8:1499:1513	513804	1	True				
ANR	513824	AssignmentExpression	dev = orig_dev		513804	0		=			
ANR	513825	Identifier	dev		513804	0					
ANR	513826	Identifier	orig_dev		513804	1					
ANR	513827	ElseStatement	else		513804	0					
ANR	513828	CompoundStatement		11:9:201:201	513804	0					
ANR	513829	ExpressionStatement	"code = gs_copydevice ( & dev , orig_dev , plist -> memory )"	51:8:1534:1585	513804	0	True				
ANR	513830	AssignmentExpression	"code = gs_copydevice ( & dev , orig_dev , plist -> memory )"		513804	0		=			
ANR	513831	Identifier	code		513804	0					
ANR	513832	CallExpression	"gs_copydevice ( & dev , orig_dev , plist -> memory )"		513804	1					
ANR	513833	Callee	gs_copydevice		513804	0					
ANR	513834	Identifier	gs_copydevice		513804	0					
ANR	513835	ArgumentList	& dev		513804	1					
ANR	513836	Argument	& dev		513804	0					
ANR	513837	UnaryOperationExpression	& dev		513804	0					
ANR	513838	UnaryOperator	&		513804	0					
ANR	513839	Identifier	dev		513804	1					
ANR	513840	Argument	orig_dev		513804	1					
ANR	513841	Identifier	orig_dev		513804	0					
ANR	513842	Argument	plist -> memory		513804	2					
ANR	513843	PtrMemberAccess	plist -> memory		513804	0					
ANR	513844	Identifier	plist		513804	0					
ANR	513845	Identifier	memory		513804	1					
ANR	513846	IfStatement	if ( code < 0 )		513804	1					
ANR	513847	Condition	code < 0	52:12:1599:1606	513804	0	True				
ANR	513848	RelationalExpression	code < 0		513804	0		<			
ANR	513849	Identifier	code		513804	0					
ANR	513850	PrimaryExpression	0		513804	1					
ANR	513851	ReturnStatement	return code ;	53:12:1621:1632	513804	1	True				
ANR	513852	Identifier	code		513804	0					
ANR	513853	ExpressionStatement	gx_device_set_procs ( dev )	55:4:1644:1668	513804	3	True				
ANR	513854	CallExpression	gx_device_set_procs ( dev )		513804	0					
ANR	513855	Callee	gx_device_set_procs		513804	0					
ANR	513856	Identifier	gx_device_set_procs		513804	0					
ANR	513857	ArgumentList	dev		513804	1					
ANR	513858	Argument	dev		513804	0					
ANR	513859	Identifier	dev		513804	0					
ANR	513860	ExpressionStatement	"fill_dev_proc ( dev , get_params , gx_default_get_params )"	56:4:1674:1727	513804	4	True				
ANR	513861	CallExpression	"fill_dev_proc ( dev , get_params , gx_default_get_params )"		513804	0					
ANR	513862	Callee	fill_dev_proc		513804	0					
ANR	513863	Identifier	fill_dev_proc		513804	0					
ANR	513864	ArgumentList	dev		513804	1					
ANR	513865	Argument	dev		513804	0					
ANR	513866	Identifier	dev		513804	0					
ANR	513867	Argument	get_params		513804	1					
ANR	513868	Identifier	get_params		513804	0					
ANR	513869	Argument	gx_default_get_params		513804	2					
ANR	513870	Identifier	gx_default_get_params		513804	0					
ANR	513871	ExpressionStatement	"fill_dev_proc ( dev , get_page_device , gx_default_get_page_device )"	57:4:1733:1796	513804	5	True				
ANR	513872	CallExpression	"fill_dev_proc ( dev , get_page_device , gx_default_get_page_device )"		513804	0					
ANR	513873	Callee	fill_dev_proc		513804	0					
ANR	513874	Identifier	fill_dev_proc		513804	0					
ANR	513875	ArgumentList	dev		513804	1					
ANR	513876	Argument	dev		513804	0					
ANR	513877	Identifier	dev		513804	0					
ANR	513878	Argument	get_page_device		513804	1					
ANR	513879	Identifier	get_page_device		513804	0					
ANR	513880	Argument	gx_default_get_page_device		513804	2					
ANR	513881	Identifier	gx_default_get_page_device		513804	0					
ANR	513882	ExpressionStatement	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"	58:4:1802:1863	513804	6	True				
ANR	513883	CallExpression	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"		513804	0					
ANR	513884	Callee	fill_dev_proc		513804	0					
ANR	513885	Identifier	fill_dev_proc		513804	0					
ANR	513886	ArgumentList	dev		513804	1					
ANR	513887	Argument	dev		513804	0					
ANR	513888	Identifier	dev		513804	0					
ANR	513889	Argument	get_alpha_bits		513804	1					
ANR	513890	Identifier	get_alpha_bits		513804	0					
ANR	513891	Argument	gx_default_get_alpha_bits		513804	2					
ANR	513892	Identifier	gx_default_get_alpha_bits		513804	0					
ANR	513893	IfStatement	if ( is_hardware )		513804	7					
ANR	513894	Condition	is_hardware	59:8:1873:1883	513804	0	True				
ANR	513895	Identifier	is_hardware		513804	0					
ANR	513896	CompoundStatement		20:21:563:563	513804	1					
ANR	513897	IfStatement	"if ( dev_proc ( dev , get_hardware_params ) != NULL )"		513804	0					
ANR	513898	Condition	"dev_proc ( dev , get_hardware_params ) != NULL"	60:12:1900:1941	513804	0	True				
ANR	513899	EqualityExpression	"dev_proc ( dev , get_hardware_params ) != NULL"		513804	0		!=			
ANR	513900	CallExpression	"dev_proc ( dev , get_hardware_params )"		513804	0					
ANR	513901	Callee	dev_proc		513804	0					
ANR	513902	Identifier	dev_proc		513804	0					
ANR	513903	ArgumentList	dev		513804	1					
ANR	513904	Argument	dev		513804	0					
ANR	513905	Identifier	dev		513804	0					
ANR	513906	Argument	get_hardware_params		513804	1					
ANR	513907	Identifier	get_hardware_params		513804	0					
ANR	513908	Identifier	NULL		513804	1					
ANR	513909	ExpressionStatement	"code = ( * dev_proc ( dev , get_hardware_params ) ) ( dev , plist )"	61:12:1956:2013	513804	1	True				
ANR	513910	AssignmentExpression	"code = ( * dev_proc ( dev , get_hardware_params ) ) ( dev , plist )"		513804	0		=			
ANR	513911	Identifier	code		513804	0					
ANR	513912	CallExpression	"( * dev_proc ( dev , get_hardware_params ) ) ( dev , plist )"		513804	1					
ANR	513913	Callee	"* dev_proc ( dev , get_hardware_params )"		513804	0					
ANR	513914	UnaryOperationExpression	"* dev_proc ( dev , get_hardware_params )"		513804	0					
ANR	513915	UnaryOperator	*		513804	0					
ANR	513916	CallExpression	"dev_proc ( dev , get_hardware_params )"		513804	1					
ANR	513917	Callee	dev_proc		513804	0					
ANR	513918	Identifier	dev_proc		513804	0					
ANR	513919	ArgumentList	dev		513804	1					
ANR	513920	Argument	dev		513804	0					
ANR	513921	Identifier	dev		513804	0					
ANR	513922	Argument	get_hardware_params		513804	1					
ANR	513923	Identifier	get_hardware_params		513804	0					
ANR	513924	ArgumentList	dev		513804	1					
ANR	513925	Argument	dev		513804	0					
ANR	513926	Identifier	dev		513804	0					
ANR	513927	Argument	plist		513804	1					
ANR	513928	Identifier	plist		513804	0					
ANR	513929	ElseStatement	else		513804	0					
ANR	513930	CompoundStatement		23:11:703:703	513804	0					
ANR	513931	IfStatement	"if ( dev_proc ( dev , get_params ) != NULL )"		513804	0					
ANR	513932	Condition	"dev_proc ( dev , get_params ) != NULL"	63:12:2040:2072	513804	0	True				
ANR	513933	EqualityExpression	"dev_proc ( dev , get_params ) != NULL"		513804	0		!=			
ANR	513934	CallExpression	"dev_proc ( dev , get_params )"		513804	0					
ANR	513935	Callee	dev_proc		513804	0					
ANR	513936	Identifier	dev_proc		513804	0					
ANR	513937	ArgumentList	dev		513804	1					
ANR	513938	Argument	dev		513804	0					
ANR	513939	Identifier	dev		513804	0					
ANR	513940	Argument	get_params		513804	1					
ANR	513941	Identifier	get_params		513804	0					
ANR	513942	Identifier	NULL		513804	1					
ANR	513943	ExpressionStatement	"code = ( * dev_proc ( dev , get_params ) ) ( dev , plist )"	64:12:2087:2135	513804	1	True				
ANR	513944	AssignmentExpression	"code = ( * dev_proc ( dev , get_params ) ) ( dev , plist )"		513804	0		=			
ANR	513945	Identifier	code		513804	0					
ANR	513946	CallExpression	"( * dev_proc ( dev , get_params ) ) ( dev , plist )"		513804	1					
ANR	513947	Callee	"* dev_proc ( dev , get_params )"		513804	0					
ANR	513948	UnaryOperationExpression	"* dev_proc ( dev , get_params )"		513804	0					
ANR	513949	UnaryOperator	*		513804	0					
ANR	513950	CallExpression	"dev_proc ( dev , get_params )"		513804	1					
ANR	513951	Callee	dev_proc		513804	0					
ANR	513952	Identifier	dev_proc		513804	0					
ANR	513953	ArgumentList	dev		513804	1					
ANR	513954	Argument	dev		513804	0					
ANR	513955	Identifier	dev		513804	0					
ANR	513956	Argument	get_params		513804	1					
ANR	513957	Identifier	get_params		513804	0					
ANR	513958	ArgumentList	dev		513804	1					
ANR	513959	Argument	dev		513804	0					
ANR	513960	Identifier	dev		513804	0					
ANR	513961	Argument	plist		513804	1					
ANR	513962	Identifier	plist		513804	0					
ANR	513963	IfStatement	if ( dev != orig_dev )		513804	8					
ANR	513964	Condition	dev != orig_dev	66:8:2151:2165	513804	0	True				
ANR	513965	EqualityExpression	dev != orig_dev		513804	0		!=			
ANR	513966	Identifier	dev		513804	0					
ANR	513967	Identifier	orig_dev		513804	1					
ANR	513968	ExpressionStatement	"gx_device_retain ( dev , false )"	67:8:2176:2204	513804	1	True				
ANR	513969	CallExpression	"gx_device_retain ( dev , false )"		513804	0					
ANR	513970	Callee	gx_device_retain		513804	0					
ANR	513971	Identifier	gx_device_retain		513804	0					
ANR	513972	ArgumentList	dev		513804	1					
ANR	513973	Argument	dev		513804	0					
ANR	513974	Identifier	dev		513804	0					
ANR	513975	Argument	false		513804	1					
ANR	513976	Identifier	false		513804	0					
ANR	513977	ReturnStatement	return code ;	68:4:2232:2243	513804	9	True				
ANR	513978	Identifier	code		513804	0					
ANR	513979	ReturnType	int		513804	1					
ANR	513980	Identifier	gs_get_device_or_hw_params		513804	2					
ANR	513981	ParameterList	"gx_device * orig_dev , gs_param_list * plist , bool is_hardware"		513804	3					
ANR	513982	Parameter	gx_device * orig_dev	38:27:1232:1251	513804	0	True				
ANR	513983	ParameterType	gx_device *		513804	0					
ANR	513984	Identifier	orig_dev		513804	1					
ANR	513985	Parameter	gs_param_list * plist	38:49:1254:1274	513804	1	True				
ANR	513986	ParameterType	gs_param_list *		513804	0					
ANR	513987	Identifier	plist		513804	1					
ANR	513988	Parameter	bool is_hardware	39:27:1304:1319	513804	2	True				
ANR	513989	ParameterType	bool		513804	0					
ANR	513990	Identifier	is_hardware		513804	1					
ANR	513991	CFGEntryNode	ENTRY		513804		True				
ANR	513992	CFGExitNode	EXIT		513804		True				
ANR	513993	Symbol	orig_dev -> memory		513804						
ANR	513994	Symbol	get_params		513804						
ANR	513995	Symbol	code		513804						
ANR	513996	Symbol	NULL		513804						
ANR	513997	Symbol	* orig_dev		513804						
ANR	513998	Symbol	* plist		513804						
ANR	513999	Symbol	* dev_proc		513804						
ANR	514000	Symbol	gs_copydevice		513804						
ANR	514001	Symbol	get_alpha_bits		513804						
ANR	514002	Symbol	false		513804						
ANR	514003	Symbol	get_page_device		513804						
ANR	514004	Symbol	"* dev_proc ( dev , get_params )"		513804						
ANR	514005	Symbol	gx_default_get_params		513804						
ANR	514006	Symbol	plist		513804						
ANR	514007	Symbol	gx_default_get_page_device		513804						
ANR	514008	Symbol	dev		513804						
ANR	514009	Symbol	"* dev_proc ( dev , get_hardware_params )"		513804						
ANR	514010	Symbol	is_hardware		513804						
ANR	514011	Symbol	dev_proc		513804						
ANR	514012	Symbol	gx_default_get_alpha_bits		513804						
ANR	514013	Symbol	get_hardware_params		513804						
ANR	514014	Symbol	orig_dev		513804						
ANR	514015	Symbol	plist -> memory		513804						
ANR	514016	Symbol	& dev		513804						
ANR	514017	Function	gx_default_get_param	71:0:2248:20242							
ANR	514018	FunctionDef	"gx_default_get_param (gx_device * dev , char * Param , void * list)"		514017	0					
ANR	514019	CompoundStatement		72:0:2314:20242	514017	0					
ANR	514020	IdentifierDeclStatement	gs_param_list * plist = ( gs_param_list * ) list ;	73:4:2320:2365	514017	0	True				
ANR	514021	IdentifierDecl	* plist = ( gs_param_list * ) list		514017	0					
ANR	514022	IdentifierDeclType	gs_param_list *		514017	0					
ANR	514023	Identifier	plist		514017	1					
ANR	514024	AssignmentExpression	* plist = ( gs_param_list * ) list		514017	2		=			
ANR	514025	Identifier	plist		514017	0					
ANR	514026	CastExpression	( gs_param_list * ) list		514017	1					
ANR	514027	CastTarget	gs_param_list *		514017	0					
ANR	514028	Identifier	list		514017	1					
ANR	514029	IdentifierDeclStatement	"int k , colors = dev -> color_info . num_components ;"	74:4:2371:2417	514017	1	True				
ANR	514030	IdentifierDecl	k		514017	0					
ANR	514031	IdentifierDeclType	int		514017	0					
ANR	514032	Identifier	k		514017	1					
ANR	514033	IdentifierDecl	colors = dev -> color_info . num_components		514017	1					
ANR	514034	IdentifierDeclType	int		514017	0					
ANR	514035	Identifier	colors		514017	1					
ANR	514036	AssignmentExpression	colors = dev -> color_info . num_components		514017	2		=			
ANR	514037	Identifier	colors		514017	0					
ANR	514038	MemberAccess	dev -> color_info . num_components		514017	1					
ANR	514039	PtrMemberAccess	dev -> color_info		514017	0					
ANR	514040	Identifier	dev		514017	0					
ANR	514041	Identifier	color_info		514017	1					
ANR	514042	Identifier	num_components		514017	1					
ANR	514043	IdentifierDeclStatement	gs_param_string profile_array [ NUM_DEVICE_PROFILES ] ;	75:4:2423:2473	514017	2	True				
ANR	514044	IdentifierDecl	profile_array [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514045	IdentifierDeclType	gs_param_string [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514046	Identifier	profile_array		514017	1					
ANR	514047	Identifier	NUM_DEVICE_PROFILES		514017	2					
ANR	514048	IdentifierDeclStatement	"gs_param_string postren_profile , blend_profile ;"	76:4:2479:2525	514017	3	True				
ANR	514049	IdentifierDecl	postren_profile		514017	0					
ANR	514050	IdentifierDeclType	gs_param_string		514017	0					
ANR	514051	Identifier	postren_profile		514017	1					
ANR	514052	IdentifierDecl	blend_profile		514017	1					
ANR	514053	IdentifierDeclType	gs_param_string		514017	0					
ANR	514054	Identifier	blend_profile		514017	1					
ANR	514055	IdentifierDeclStatement	"gs_param_string proof_profile , link_profile , icc_colorants ;"	77:4:2531:2589	514017	4	True				
ANR	514056	IdentifierDecl	proof_profile		514017	0					
ANR	514057	IdentifierDeclType	gs_param_string		514017	0					
ANR	514058	Identifier	proof_profile		514017	1					
ANR	514059	IdentifierDecl	link_profile		514017	1					
ANR	514060	IdentifierDeclType	gs_param_string		514017	0					
ANR	514061	Identifier	link_profile		514017	1					
ANR	514062	IdentifierDecl	icc_colorants		514017	2					
ANR	514063	IdentifierDeclType	gs_param_string		514017	0					
ANR	514064	Identifier	icc_colorants		514017	1					
ANR	514065	IdentifierDeclStatement	gsicc_rendering_intents_t profile_intents [ NUM_DEVICE_PROFILES ] ;	78:4:2595:2657	514017	5	True				
ANR	514066	IdentifierDecl	profile_intents [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514067	IdentifierDeclType	gsicc_rendering_intents_t [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514068	Identifier	profile_intents		514017	1					
ANR	514069	Identifier	NUM_DEVICE_PROFILES		514017	2					
ANR	514070	IdentifierDeclStatement	gsicc_blackptcomp_t blackptcomps [ NUM_DEVICE_PROFILES ] ;	79:4:2663:2716	514017	6	True				
ANR	514071	IdentifierDecl	blackptcomps [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514072	IdentifierDeclType	gsicc_blackptcomp_t [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514073	Identifier	blackptcomps		514017	1					
ANR	514074	Identifier	NUM_DEVICE_PROFILES		514017	2					
ANR	514075	IdentifierDeclStatement	gsicc_blackpreserve_t blackpreserve [ NUM_DEVICE_PROFILES ] ;	80:4:2722:2778	514017	7	True				
ANR	514076	IdentifierDecl	blackpreserve [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514077	IdentifierDeclType	gsicc_blackpreserve_t [ NUM_DEVICE_PROFILES ]		514017	0					
ANR	514078	Identifier	blackpreserve		514017	1					
ANR	514079	Identifier	NUM_DEVICE_PROFILES		514017	2					
ANR	514080	IdentifierDeclStatement	int color_accuracy = MAX_COLOR_ACCURACY ;	81:4:2784:2823	514017	8	True				
ANR	514081	IdentifierDecl	color_accuracy = MAX_COLOR_ACCURACY		514017	0					
ANR	514082	IdentifierDeclType	int		514017	0					
ANR	514083	Identifier	color_accuracy		514017	1					
ANR	514084	AssignmentExpression	color_accuracy = MAX_COLOR_ACCURACY		514017	2		=			
ANR	514085	Identifier	MAX_COLOR_ACCURACY		514017	0					
ANR	514086	Identifier	MAX_COLOR_ACCURACY		514017	1					
ANR	514087	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	82:4:2829:2862	514017	9	True				
ANR	514088	IdentifierDecl	depth = dev -> color_info . depth		514017	0					
ANR	514089	IdentifierDeclType	int		514017	0					
ANR	514090	Identifier	depth		514017	1					
ANR	514091	AssignmentExpression	depth = dev -> color_info . depth		514017	2		=			
ANR	514092	Identifier	depth		514017	0					
ANR	514093	MemberAccess	dev -> color_info . depth		514017	1					
ANR	514094	PtrMemberAccess	dev -> color_info		514017	0					
ANR	514095	Identifier	dev		514017	0					
ANR	514096	Identifier	color_info		514017	1					
ANR	514097	Identifier	depth		514017	1					
ANR	514098	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	83:4:2868:2898	514017	10	True				
ANR	514099	IdentifierDecl	* dev_profile		514017	0					
ANR	514100	IdentifierDeclType	cmm_dev_profile_t *		514017	0					
ANR	514101	Identifier	dev_profile		514017	1					
ANR	514102	IdentifierDeclStatement	char null_str [ 1 ] = { '\\0' } ;	84:4:2904:2927	514017	11	True				
ANR	514103	IdentifierDecl	null_str [ 1 ] = { '\\0' }		514017	0					
ANR	514104	IdentifierDeclType	char [ 1 ]		514017	0					
ANR	514105	Identifier	null_str		514017	1					
ANR	514106	PrimaryExpression	1		514017	2					
ANR	514107	AssignmentExpression	null_str [ 1 ] = { '\\0' }		514017	3		=			
ANR	514108	Identifier	null_str		514017	0					
ANR	514109	InitializerList	'\\0'		514017	1					
ANR	514110	PrimaryExpression	'\\0'		514017	0					
ANR	514111	IdentifierDeclStatement	"define set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false ) ;"	85:1:2930:3011	514017	12	True				
ANR	514112	IdentifierDecl	"set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false )"		514017	0					
ANR	514113	IdentifierDeclType	"define ( a , d , s )"		514017	0					
ANR	514114	Identifier	set_param_array		514017	1					
ANR	514115	Expression	"a . data = d , a . size = s , a . persistent = false"		514017	2					
ANR	514116	AssignmentExpression	a . data = d		514017	0		=			
ANR	514117	MemberAccess	a . data		514017	0					
ANR	514118	Identifier	a		514017	0					
ANR	514119	Identifier	data		514017	1					
ANR	514120	Identifier	d		514017	1					
ANR	514121	Expression	"a . size = s , a . persistent = false"		514017	1					
ANR	514122	AssignmentExpression	a . size = s		514017	0		=			
ANR	514123	MemberAccess	a . size		514017	0					
ANR	514124	Identifier	a		514017	0					
ANR	514125	Identifier	size		514017	1					
ANR	514126	Identifier	s		514017	1					
ANR	514127	AssignmentExpression	a . persistent = false		514017	1		=			
ANR	514128	MemberAccess	a . persistent		514017	0					
ANR	514129	Identifier	a		514017	0					
ANR	514130	Identifier	persistent		514017	1					
ANR	514131	Identifier	false		514017	1					
ANR	514132	IdentifierDeclStatement	bool devicegraytok = true ;	87:4:3017:3042	514017	13	True				
ANR	514133	IdentifierDecl	devicegraytok = true		514017	0					
ANR	514134	IdentifierDeclType	bool		514017	0					
ANR	514135	Identifier	devicegraytok		514017	1					
ANR	514136	AssignmentExpression	devicegraytok = true		514017	2		=			
ANR	514137	Identifier	true		514017	0					
ANR	514138	Identifier	true		514017	1					
ANR	514139	IdentifierDeclStatement	bool graydetection = false ;	88:4:3095:3121	514017	14	True				
ANR	514140	IdentifierDecl	graydetection = false		514017	0					
ANR	514141	IdentifierDeclType	bool		514017	0					
ANR	514142	Identifier	graydetection		514017	1					
ANR	514143	AssignmentExpression	graydetection = false		514017	2		=			
ANR	514144	Identifier	false		514017	0					
ANR	514145	Identifier	false		514017	1					
ANR	514146	IdentifierDeclStatement	bool usefastcolor = false ;	89:4:3127:3152	514017	15	True				
ANR	514147	IdentifierDecl	usefastcolor = false		514017	0					
ANR	514148	IdentifierDeclType	bool		514017	0					
ANR	514149	Identifier	usefastcolor		514017	1					
ANR	514150	AssignmentExpression	usefastcolor = false		514017	2		=			
ANR	514151	Identifier	false		514017	0					
ANR	514152	Identifier	false		514017	1					
ANR	514153	IdentifierDeclStatement	bool sim_overprint = false ;	90:4:3189:3215	514017	16	True				
ANR	514154	IdentifierDecl	sim_overprint = false		514017	0					
ANR	514155	IdentifierDeclType	bool		514017	0					
ANR	514156	Identifier	sim_overprint		514017	1					
ANR	514157	AssignmentExpression	sim_overprint = false		514017	2		=			
ANR	514158	Identifier	false		514017	0					
ANR	514159	Identifier	false		514017	1					
ANR	514160	IdentifierDeclStatement	"bool prebandthreshold = true , temp_bool = false ;"	91:4:3268:3315	514017	17	True				
ANR	514161	IdentifierDecl	prebandthreshold = true		514017	0					
ANR	514162	IdentifierDeclType	bool		514017	0					
ANR	514163	Identifier	prebandthreshold		514017	1					
ANR	514164	AssignmentExpression	prebandthreshold = true		514017	2		=			
ANR	514165	Identifier	true		514017	0					
ANR	514166	Identifier	true		514017	1					
ANR	514167	IdentifierDecl	temp_bool = false		514017	1					
ANR	514168	IdentifierDeclType	bool		514017	0					
ANR	514169	Identifier	temp_bool		514017	1					
ANR	514170	AssignmentExpression	temp_bool = false		514017	2		=			
ANR	514171	Identifier	false		514017	0					
ANR	514172	Identifier	false		514017	1					
ANR	514173	IfStatement	"if ( strcmp ( Param , ""OutputDevice"" ) == 0 )"		514017	18					
ANR	514174	Condition	"strcmp ( Param , ""OutputDevice"" ) == 0"	93:7:3325:3358	514017	0	True				
ANR	514175	EqualityExpression	"strcmp ( Param , ""OutputDevice"" ) == 0"		514017	0		==			
ANR	514176	CallExpression	"strcmp ( Param , ""OutputDevice"" )"		514017	0					
ANR	514177	Callee	strcmp		514017	0					
ANR	514178	Identifier	strcmp		514017	0					
ANR	514179	ArgumentList	Param		514017	1					
ANR	514180	Argument	Param		514017	0					
ANR	514181	Identifier	Param		514017	0					
ANR	514182	Argument	"""OutputDevice"""		514017	1					
ANR	514183	PrimaryExpression	"""OutputDevice"""		514017	0					
ANR	514184	PrimaryExpression	0		514017	1					
ANR	514185	CompoundStatement		23:8:1055:1074	514017	1					
ANR	514186	IdentifierDeclStatement	gs_param_string dns ;	94:8:3370:3389	514017	0	True				
ANR	514187	IdentifierDecl	dns		514017	0					
ANR	514188	IdentifierDeclType	gs_param_string		514017	0					
ANR	514189	Identifier	dns		514017	1					
ANR	514190	ExpressionStatement	"param_string_from_string ( dns , dev -> dname )"	95:8:3399:3440	514017	1	True				
ANR	514191	CallExpression	"param_string_from_string ( dns , dev -> dname )"		514017	0					
ANR	514192	Callee	param_string_from_string		514017	0					
ANR	514193	Identifier	param_string_from_string		514017	0					
ANR	514194	ArgumentList	dns		514017	1					
ANR	514195	Argument	dns		514017	0					
ANR	514196	Identifier	dns		514017	0					
ANR	514197	Argument	dev -> dname		514017	1					
ANR	514198	PtrMemberAccess	dev -> dname		514017	0					
ANR	514199	Identifier	dev		514017	0					
ANR	514200	Identifier	dname		514017	1					
ANR	514201	ReturnStatement	"return param_write_name ( plist , ""OutputDevice"" , & dns ) ;"	96:8:3450:3502	514017	2	True				
ANR	514202	CallExpression	"param_write_name ( plist , ""OutputDevice"" , & dns )"		514017	0					
ANR	514203	Callee	param_write_name		514017	0					
ANR	514204	Identifier	param_write_name		514017	0					
ANR	514205	ArgumentList	plist		514017	1					
ANR	514206	Argument	plist		514017	0					
ANR	514207	Identifier	plist		514017	0					
ANR	514208	Argument	"""OutputDevice"""		514017	1					
ANR	514209	PrimaryExpression	"""OutputDevice"""		514017	0					
ANR	514210	Argument	& dns		514017	2					
ANR	514211	UnaryOperationExpression	& dns		514017	0					
ANR	514212	UnaryOperator	&		514017	0					
ANR	514213	Identifier	dns		514017	1					
ANR	514214	IfStatement	"if ( strcmp ( Param , ""PageSize"" ) == 0 )"		514017	19					
ANR	514215	Condition	"strcmp ( Param , ""PageSize"" ) == 0"	99:8:3547:3576	514017	0	True				
ANR	514216	EqualityExpression	"strcmp ( Param , ""PageSize"" ) == 0"		514017	0		==			
ANR	514217	CallExpression	"strcmp ( Param , ""PageSize"" )"		514017	0					
ANR	514218	Callee	strcmp		514017	0					
ANR	514219	Identifier	strcmp		514017	0					
ANR	514220	ArgumentList	Param		514017	1					
ANR	514221	Argument	Param		514017	0					
ANR	514222	Identifier	Param		514017	0					
ANR	514223	Argument	"""PageSize"""		514017	1					
ANR	514224	PrimaryExpression	"""PageSize"""		514017	0					
ANR	514225	PrimaryExpression	0		514017	1					
ANR	514226	CompoundStatement		29:8:1274:1298	514017	1					
ANR	514227	IdentifierDeclStatement	gs_param_float_array msa ;	100:8:3589:3613	514017	0	True				
ANR	514228	IdentifierDecl	msa		514017	0					
ANR	514229	IdentifierDeclType	gs_param_float_array		514017	0					
ANR	514230	Identifier	msa		514017	1					
ANR	514231	ExpressionStatement	"set_param_array ( msa , dev -> MediaSize , 2 )"	101:8:3623:3662	514017	1	True				
ANR	514232	CallExpression	"set_param_array ( msa , dev -> MediaSize , 2 )"		514017	0					
ANR	514233	Callee	set_param_array		514017	0					
ANR	514234	Identifier	set_param_array		514017	0					
ANR	514235	ArgumentList	msa		514017	1					
ANR	514236	Argument	msa		514017	0					
ANR	514237	Identifier	msa		514017	0					
ANR	514238	Argument	dev -> MediaSize		514017	1					
ANR	514239	PtrMemberAccess	dev -> MediaSize		514017	0					
ANR	514240	Identifier	dev		514017	0					
ANR	514241	Identifier	MediaSize		514017	1					
ANR	514242	Argument	2		514017	2					
ANR	514243	PrimaryExpression	2		514017	0					
ANR	514244	ReturnStatement	"return param_write_float_array ( plist , ""PageSize"" , & msa ) ;"	102:8:3672:3727	514017	2	True				
ANR	514245	CallExpression	"param_write_float_array ( plist , ""PageSize"" , & msa )"		514017	0					
ANR	514246	Callee	param_write_float_array		514017	0					
ANR	514247	Identifier	param_write_float_array		514017	0					
ANR	514248	ArgumentList	plist		514017	1					
ANR	514249	Argument	plist		514017	0					
ANR	514250	Identifier	plist		514017	0					
ANR	514251	Argument	"""PageSize"""		514017	1					
ANR	514252	PrimaryExpression	"""PageSize"""		514017	0					
ANR	514253	Argument	& msa		514017	2					
ANR	514254	UnaryOperationExpression	& msa		514017	0					
ANR	514255	UnaryOperator	&		514017	0					
ANR	514256	Identifier	msa		514017	1					
ANR	514257	IfStatement	"if ( strcmp ( Param , ""ProcessColorModel"" ) == 0 )"		514017	20					
ANR	514258	Condition	"strcmp ( Param , ""ProcessColorModel"" ) == 0"	105:8:3750:3788	514017	0	True				
ANR	514259	EqualityExpression	"strcmp ( Param , ""ProcessColorModel"" ) == 0"		514017	0		==			
ANR	514260	CallExpression	"strcmp ( Param , ""ProcessColorModel"" )"		514017	0					
ANR	514261	Callee	strcmp		514017	0					
ANR	514262	Identifier	strcmp		514017	0					
ANR	514263	ArgumentList	Param		514017	1					
ANR	514264	Argument	Param		514017	0					
ANR	514265	Identifier	Param		514017	0					
ANR	514266	Argument	"""ProcessColorModel"""		514017	1					
ANR	514267	PrimaryExpression	"""ProcessColorModel"""		514017	0					
ANR	514268	PrimaryExpression	0		514017	1					
ANR	514269	CompoundStatement		35:8:1486:1537	514017	1					
ANR	514270	IdentifierDeclStatement	const char * cms = get_process_color_model_name ( dev ) ;	106:8:3801:3852	514017	0	True				
ANR	514271	IdentifierDecl	* cms = get_process_color_model_name ( dev )		514017	0					
ANR	514272	IdentifierDeclType	const char *		514017	0					
ANR	514273	Identifier	cms		514017	1					
ANR	514274	AssignmentExpression	* cms = get_process_color_model_name ( dev )		514017	2		=			
ANR	514275	Identifier	cms		514017	0					
ANR	514276	CallExpression	get_process_color_model_name ( dev )		514017	1					
ANR	514277	Callee	get_process_color_model_name		514017	0					
ANR	514278	Identifier	get_process_color_model_name		514017	0					
ANR	514279	ArgumentList	dev		514017	1					
ANR	514280	Argument	dev		514017	0					
ANR	514281	Identifier	dev		514017	0					
ANR	514282	IfStatement	if ( ( cms != NULL ) && ( * cms != '\\0' ) )		514017	1					
ANR	514283	Condition	( cms != NULL ) && ( * cms != '\\0' )	110:12:3972:4002	514017	0	True				
ANR	514284	AndExpression	( cms != NULL ) && ( * cms != '\\0' )		514017	0		&&			
ANR	514285	EqualityExpression	cms != NULL		514017	0		!=			
ANR	514286	Identifier	cms		514017	0					
ANR	514287	Identifier	NULL		514017	1					
ANR	514288	EqualityExpression	* cms != '\\0'		514017	1		!=			
ANR	514289	UnaryOperationExpression	* cms		514017	0					
ANR	514290	UnaryOperator	*		514017	0					
ANR	514291	Identifier	cms		514017	1					
ANR	514292	PrimaryExpression	'\\0'		514017	1					
ANR	514293	CompoundStatement		40:12:1704:1724	514017	1					
ANR	514294	IdentifierDeclStatement	gs_param_string pcms ;	111:12:4019:4039	514017	0	True				
ANR	514295	IdentifierDecl	pcms		514017	0					
ANR	514296	IdentifierDeclType	gs_param_string		514017	0					
ANR	514297	Identifier	pcms		514017	1					
ANR	514298	ExpressionStatement	"param_string_from_string ( pcms , cms )"	112:12:4053:4088	514017	1	True				
ANR	514299	CallExpression	"param_string_from_string ( pcms , cms )"		514017	0					
ANR	514300	Callee	param_string_from_string		514017	0					
ANR	514301	Identifier	param_string_from_string		514017	0					
ANR	514302	ArgumentList	pcms		514017	1					
ANR	514303	Argument	pcms		514017	0					
ANR	514304	Identifier	pcms		514017	0					
ANR	514305	Argument	cms		514017	1					
ANR	514306	Identifier	cms		514017	0					
ANR	514307	ReturnStatement	"return param_write_name ( plist , ""ProcessColorModel"" , & pcms ) ;"	113:12:4102:4160	514017	2	True				
ANR	514308	CallExpression	"param_write_name ( plist , ""ProcessColorModel"" , & pcms )"		514017	0					
ANR	514309	Callee	param_write_name		514017	0					
ANR	514310	Identifier	param_write_name		514017	0					
ANR	514311	ArgumentList	plist		514017	1					
ANR	514312	Argument	plist		514017	0					
ANR	514313	Identifier	plist		514017	0					
ANR	514314	Argument	"""ProcessColorModel"""		514017	1					
ANR	514315	PrimaryExpression	"""ProcessColorModel"""		514017	0					
ANR	514316	Argument	& pcms		514017	2					
ANR	514317	UnaryOperationExpression	& pcms		514017	0					
ANR	514318	UnaryOperator	&		514017	0					
ANR	514319	Identifier	pcms		514017	1					
ANR	514320	IfStatement	"if ( strcmp ( Param , ""HWResolution"" ) == 0 )"		514017	21					
ANR	514321	Condition	"strcmp ( Param , ""HWResolution"" ) == 0"	116:8:4186:4219	514017	0	True				
ANR	514322	EqualityExpression	"strcmp ( Param , ""HWResolution"" ) == 0"		514017	0		==			
ANR	514323	CallExpression	"strcmp ( Param , ""HWResolution"" )"		514017	0					
ANR	514324	Callee	strcmp		514017	0					
ANR	514325	Identifier	strcmp		514017	0					
ANR	514326	ArgumentList	Param		514017	1					
ANR	514327	Argument	Param		514017	0					
ANR	514328	Identifier	Param		514017	0					
ANR	514329	Argument	"""HWResolution"""		514017	1					
ANR	514330	PrimaryExpression	"""HWResolution"""		514017	0					
ANR	514331	PrimaryExpression	0		514017	1					
ANR	514332	CompoundStatement		46:8:1917:1942	514017	1					
ANR	514333	IdentifierDeclStatement	gs_param_float_array hwra ;	117:8:4232:4257	514017	0	True				
ANR	514334	IdentifierDecl	hwra		514017	0					
ANR	514335	IdentifierDeclType	gs_param_float_array		514017	0					
ANR	514336	Identifier	hwra		514017	1					
ANR	514337	ExpressionStatement	"set_param_array ( hwra , dev -> HWResolution , 2 )"	118:8:4267:4310	514017	1	True				
ANR	514338	CallExpression	"set_param_array ( hwra , dev -> HWResolution , 2 )"		514017	0					
ANR	514339	Callee	set_param_array		514017	0					
ANR	514340	Identifier	set_param_array		514017	0					
ANR	514341	ArgumentList	hwra		514017	1					
ANR	514342	Argument	hwra		514017	0					
ANR	514343	Identifier	hwra		514017	0					
ANR	514344	Argument	dev -> HWResolution		514017	1					
ANR	514345	PtrMemberAccess	dev -> HWResolution		514017	0					
ANR	514346	Identifier	dev		514017	0					
ANR	514347	Identifier	HWResolution		514017	1					
ANR	514348	Argument	2		514017	2					
ANR	514349	PrimaryExpression	2		514017	0					
ANR	514350	ReturnStatement	"return param_write_float_array ( plist , ""HWResolution"" , & hwra ) ;"	119:8:4320:4380	514017	2	True				
ANR	514351	CallExpression	"param_write_float_array ( plist , ""HWResolution"" , & hwra )"		514017	0					
ANR	514352	Callee	param_write_float_array		514017	0					
ANR	514353	Identifier	param_write_float_array		514017	0					
ANR	514354	ArgumentList	plist		514017	1					
ANR	514355	Argument	plist		514017	0					
ANR	514356	Identifier	plist		514017	0					
ANR	514357	Argument	"""HWResolution"""		514017	1					
ANR	514358	PrimaryExpression	"""HWResolution"""		514017	0					
ANR	514359	Argument	& hwra		514017	2					
ANR	514360	UnaryOperationExpression	& hwra		514017	0					
ANR	514361	UnaryOperator	&		514017	0					
ANR	514362	Identifier	hwra		514017	1					
ANR	514363	IfStatement	"if ( strcmp ( Param , ""ImagingBBox"" ) == 0 )"		514017	22					
ANR	514364	Condition	"strcmp ( Param , ""ImagingBBox"" ) == 0"	121:8:4396:4428	514017	0	True				
ANR	514365	EqualityExpression	"strcmp ( Param , ""ImagingBBox"" ) == 0"		514017	0		==			
ANR	514366	CallExpression	"strcmp ( Param , ""ImagingBBox"" )"		514017	0					
ANR	514367	Callee	strcmp		514017	0					
ANR	514368	Identifier	strcmp		514017	0					
ANR	514369	ArgumentList	Param		514017	1					
ANR	514370	Argument	Param		514017	0					
ANR	514371	Identifier	Param		514017	0					
ANR	514372	Argument	"""ImagingBBox"""		514017	1					
ANR	514373	PrimaryExpression	"""ImagingBBox"""		514017	0					
ANR	514374	PrimaryExpression	0		514017	1					
ANR	514375	CompoundStatement		51:8:2126:2151	514017	1					
ANR	514376	IdentifierDeclStatement	gs_param_float_array ibba ;	122:8:4441:4466	514017	0	True				
ANR	514377	IdentifierDecl	ibba		514017	0					
ANR	514378	IdentifierDeclType	gs_param_float_array		514017	0					
ANR	514379	Identifier	ibba		514017	1					
ANR	514380	ExpressionStatement	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"	123:8:4476:4518	514017	1	True				
ANR	514381	CallExpression	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"		514017	0					
ANR	514382	Callee	set_param_array		514017	0					
ANR	514383	Identifier	set_param_array		514017	0					
ANR	514384	ArgumentList	ibba		514017	1					
ANR	514385	Argument	ibba		514017	0					
ANR	514386	Identifier	ibba		514017	0					
ANR	514387	Argument	dev -> ImagingBBox		514017	1					
ANR	514388	PtrMemberAccess	dev -> ImagingBBox		514017	0					
ANR	514389	Identifier	dev		514017	0					
ANR	514390	Identifier	ImagingBBox		514017	1					
ANR	514391	Argument	4		514017	2					
ANR	514392	PrimaryExpression	4		514017	0					
ANR	514393	IfStatement	if ( dev -> ImagingBBox_set )		514017	2					
ANR	514394	Condition	dev -> ImagingBBox_set	124:12:4532:4551	514017	0	True				
ANR	514395	PtrMemberAccess	dev -> ImagingBBox_set		514017	0					
ANR	514396	Identifier	dev		514017	0					
ANR	514397	Identifier	ImagingBBox_set		514017	1					
ANR	514398	ReturnStatement	"return param_write_float_array ( plist , ""ImagingBBox"" , & ibba ) ;"	125:12:4566:4625	514017	1	True				
ANR	514399	CallExpression	"param_write_float_array ( plist , ""ImagingBBox"" , & ibba )"		514017	0					
ANR	514400	Callee	param_write_float_array		514017	0					
ANR	514401	Identifier	param_write_float_array		514017	0					
ANR	514402	ArgumentList	plist		514017	1					
ANR	514403	Argument	plist		514017	0					
ANR	514404	Identifier	plist		514017	0					
ANR	514405	Argument	"""ImagingBBox"""		514017	1					
ANR	514406	PrimaryExpression	"""ImagingBBox"""		514017	0					
ANR	514407	Argument	& ibba		514017	2					
ANR	514408	UnaryOperationExpression	& ibba		514017	0					
ANR	514409	UnaryOperator	&		514017	0					
ANR	514410	Identifier	ibba		514017	1					
ANR	514411	ElseStatement	else		514017	0					
ANR	514412	ReturnStatement	"return param_write_null ( plist , ""ImagingBBox"" ) ;"	127:12:4652:4697	514017	0	True				
ANR	514413	CallExpression	"param_write_null ( plist , ""ImagingBBox"" )"		514017	0					
ANR	514414	Callee	param_write_null		514017	0					
ANR	514415	Identifier	param_write_null		514017	0					
ANR	514416	ArgumentList	plist		514017	1					
ANR	514417	Argument	plist		514017	0					
ANR	514418	Identifier	plist		514017	0					
ANR	514419	Argument	"""ImagingBBox"""		514017	1					
ANR	514420	PrimaryExpression	"""ImagingBBox"""		514017	0					
ANR	514421	IfStatement	"if ( strcmp ( Param , ""Margins"" ) == 0 )"		514017	23					
ANR	514422	Condition	"strcmp ( Param , ""Margins"" ) == 0"	129:8:4713:4741	514017	0	True				
ANR	514423	EqualityExpression	"strcmp ( Param , ""Margins"" ) == 0"		514017	0		==			
ANR	514424	CallExpression	"strcmp ( Param , ""Margins"" )"		514017	0					
ANR	514425	Callee	strcmp		514017	0					
ANR	514426	Identifier	strcmp		514017	0					
ANR	514427	ArgumentList	Param		514017	1					
ANR	514428	Argument	Param		514017	0					
ANR	514429	Identifier	Param		514017	0					
ANR	514430	Argument	"""Margins"""		514017	1					
ANR	514431	PrimaryExpression	"""Margins"""		514017	0					
ANR	514432	PrimaryExpression	0		514017	1					
ANR	514433	CompoundStatement		59:8:2439:2462	514017	1					
ANR	514434	IdentifierDeclStatement	gs_param_float_array ma ;	130:8:4754:4777	514017	0	True				
ANR	514435	IdentifierDecl	ma		514017	0					
ANR	514436	IdentifierDeclType	gs_param_float_array		514017	0					
ANR	514437	Identifier	ma		514017	1					
ANR	514438	ExpressionStatement	"set_param_array ( ma , dev -> Margins , 2 )"	131:8:4787:4823	514017	1	True				
ANR	514439	CallExpression	"set_param_array ( ma , dev -> Margins , 2 )"		514017	0					
ANR	514440	Callee	set_param_array		514017	0					
ANR	514441	Identifier	set_param_array		514017	0					
ANR	514442	ArgumentList	ma		514017	1					
ANR	514443	Argument	ma		514017	0					
ANR	514444	Identifier	ma		514017	0					
ANR	514445	Argument	dev -> Margins		514017	1					
ANR	514446	PtrMemberAccess	dev -> Margins		514017	0					
ANR	514447	Identifier	dev		514017	0					
ANR	514448	Identifier	Margins		514017	1					
ANR	514449	Argument	2		514017	2					
ANR	514450	PrimaryExpression	2		514017	0					
ANR	514451	ReturnStatement	"return param_write_float_array ( plist , ""Margins"" , & ma ) ;"	132:8:4833:4886	514017	2	True				
ANR	514452	CallExpression	"param_write_float_array ( plist , ""Margins"" , & ma )"		514017	0					
ANR	514453	Callee	param_write_float_array		514017	0					
ANR	514454	Identifier	param_write_float_array		514017	0					
ANR	514455	ArgumentList	plist		514017	1					
ANR	514456	Argument	plist		514017	0					
ANR	514457	Identifier	plist		514017	0					
ANR	514458	Argument	"""Margins"""		514017	1					
ANR	514459	PrimaryExpression	"""Margins"""		514017	0					
ANR	514460	Argument	& ma		514017	2					
ANR	514461	UnaryOperationExpression	& ma		514017	0					
ANR	514462	UnaryOperator	&		514017	0					
ANR	514463	Identifier	ma		514017	1					
ANR	514464	IfStatement	"if ( strcmp ( Param , ""MaxSeparations"" ) == 0 )"		514017	24					
ANR	514465	Condition	"strcmp ( Param , ""MaxSeparations"" ) == 0"	134:8:4902:4937	514017	0	True				
ANR	514466	EqualityExpression	"strcmp ( Param , ""MaxSeparations"" ) == 0"		514017	0		==			
ANR	514467	CallExpression	"strcmp ( Param , ""MaxSeparations"" )"		514017	0					
ANR	514468	Callee	strcmp		514017	0					
ANR	514469	Identifier	strcmp		514017	0					
ANR	514470	ArgumentList	Param		514017	1					
ANR	514471	Argument	Param		514017	0					
ANR	514472	Identifier	Param		514017	0					
ANR	514473	Argument	"""MaxSeparations"""		514017	1					
ANR	514474	PrimaryExpression	"""MaxSeparations"""		514017	0					
ANR	514475	PrimaryExpression	0		514017	1					
ANR	514476	CompoundStatement		64:8:2635:2679	514017	1					
ANR	514477	IdentifierDeclStatement	int max_sep = dev -> color_info . max_components ;	135:8:4950:4994	514017	0	True				
ANR	514478	IdentifierDecl	max_sep = dev -> color_info . max_components		514017	0					
ANR	514479	IdentifierDeclType	int		514017	0					
ANR	514480	Identifier	max_sep		514017	1					
ANR	514481	AssignmentExpression	max_sep = dev -> color_info . max_components		514017	2		=			
ANR	514482	Identifier	max_sep		514017	0					
ANR	514483	MemberAccess	dev -> color_info . max_components		514017	1					
ANR	514484	PtrMemberAccess	dev -> color_info		514017	0					
ANR	514485	Identifier	dev		514017	0					
ANR	514486	Identifier	color_info		514017	1					
ANR	514487	Identifier	max_components		514017	1					
ANR	514488	ReturnStatement	"return param_write_int ( plist , ""MaxSeparations"" , & max_sep ) ;"	136:8:5004:5061	514017	1	True				
ANR	514489	CallExpression	"param_write_int ( plist , ""MaxSeparations"" , & max_sep )"		514017	0					
ANR	514490	Callee	param_write_int		514017	0					
ANR	514491	Identifier	param_write_int		514017	0					
ANR	514492	ArgumentList	plist		514017	1					
ANR	514493	Argument	plist		514017	0					
ANR	514494	Identifier	plist		514017	0					
ANR	514495	Argument	"""MaxSeparations"""		514017	1					
ANR	514496	PrimaryExpression	"""MaxSeparations"""		514017	0					
ANR	514497	Argument	& max_sep		514017	2					
ANR	514498	UnaryOperationExpression	& max_sep		514017	0					
ANR	514499	UnaryOperator	&		514017	0					
ANR	514500	Identifier	max_sep		514017	1					
ANR	514501	IfStatement	"if ( strcmp ( Param , ""NumCopies"" ) == 0 )"		514017	25					
ANR	514502	Condition	"strcmp ( Param , ""NumCopies"" ) == 0"	138:8:5077:5107	514017	0	True				
ANR	514503	EqualityExpression	"strcmp ( Param , ""NumCopies"" ) == 0"		514017	0		==			
ANR	514504	CallExpression	"strcmp ( Param , ""NumCopies"" )"		514017	0					
ANR	514505	Callee	strcmp		514017	0					
ANR	514506	Identifier	strcmp		514017	0					
ANR	514507	ArgumentList	Param		514017	1					
ANR	514508	Argument	Param		514017	0					
ANR	514509	Identifier	Param		514017	0					
ANR	514510	Argument	"""NumCopies"""		514017	1					
ANR	514511	PrimaryExpression	"""NumCopies"""		514017	0					
ANR	514512	PrimaryExpression	0		514017	1					
ANR	514513	CompoundStatement		67:41:2795:2795	514017	1					
ANR	514514	IfStatement	"if ( dev -> NumCopies_set < 0 || ( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0 )"		514017	0					
ANR	514515	Condition	"dev -> NumCopies_set < 0 || ( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"	139:12:5124:5192	514017	0	True				
ANR	514516	OrExpression	"dev -> NumCopies_set < 0 || ( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"		514017	0		||			
ANR	514517	RelationalExpression	dev -> NumCopies_set < 0		514017	0		<			
ANR	514518	PtrMemberAccess	dev -> NumCopies_set		514017	0					
ANR	514519	Identifier	dev		514017	0					
ANR	514520	Identifier	NumCopies_set		514017	1					
ANR	514521	PrimaryExpression	0		514017	1					
ANR	514522	EqualityExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"		514017	1		==			
ANR	514523	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		514017	0					
ANR	514524	Callee	"* dev_proc ( dev , get_page_device )"		514017	0					
ANR	514525	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		514017	0					
ANR	514526	UnaryOperator	*		514017	0					
ANR	514527	CallExpression	"dev_proc ( dev , get_page_device )"		514017	1					
ANR	514528	Callee	dev_proc		514017	0					
ANR	514529	Identifier	dev_proc		514017	0					
ANR	514530	ArgumentList	dev		514017	1					
ANR	514531	Argument	dev		514017	0					
ANR	514532	Identifier	dev		514017	0					
ANR	514533	Argument	get_page_device		514017	1					
ANR	514534	Identifier	get_page_device		514017	0					
ANR	514535	ArgumentList	dev		514017	1					
ANR	514536	Argument	dev		514017	0					
ANR	514537	Identifier	dev		514017	0					
ANR	514538	PrimaryExpression	0		514017	1					
ANR	514539	CompoundStatement		68:83:2880:2880	514017	1					
ANR	514540	ExpressionStatement	return_error ( gs_error_undefined )	140:12:5209:5241	514017	0	True				
ANR	514541	CallExpression	return_error ( gs_error_undefined )		514017	0					
ANR	514542	Callee	return_error		514017	0					
ANR	514543	Identifier	return_error		514017	0					
ANR	514544	ArgumentList	gs_error_undefined		514017	1					
ANR	514545	Argument	gs_error_undefined		514017	0					
ANR	514546	Identifier	gs_error_undefined		514017	0					
ANR	514547	ElseStatement	else		514017	0					
ANR	514548	CompoundStatement		70:15:2943:2943	514017	0					
ANR	514549	IfStatement	if ( dev -> NumCopies_set )		514017	0					
ANR	514550	Condition	dev -> NumCopies_set	142:16:5276:5293	514017	0	True				
ANR	514551	PtrMemberAccess	dev -> NumCopies_set		514017	0					
ANR	514552	Identifier	dev		514017	0					
ANR	514553	Identifier	NumCopies_set		514017	1					
ANR	514554	ReturnStatement	"return param_write_int ( plist , ""NumCopies"" , & dev -> NumCopies ) ;"	143:16:5312:5371	514017	1	True				
ANR	514555	CallExpression	"param_write_int ( plist , ""NumCopies"" , & dev -> NumCopies )"		514017	0					
ANR	514556	Callee	param_write_int		514017	0					
ANR	514557	Identifier	param_write_int		514017	0					
ANR	514558	ArgumentList	plist		514017	1					
ANR	514559	Argument	plist		514017	0					
ANR	514560	Identifier	plist		514017	0					
ANR	514561	Argument	"""NumCopies"""		514017	1					
ANR	514562	PrimaryExpression	"""NumCopies"""		514017	0					
ANR	514563	Argument	& dev -> NumCopies		514017	2					
ANR	514564	UnaryOperationExpression	& dev -> NumCopies		514017	0					
ANR	514565	UnaryOperator	&		514017	0					
ANR	514566	PtrMemberAccess	dev -> NumCopies		514017	1					
ANR	514567	Identifier	dev		514017	0					
ANR	514568	Identifier	NumCopies		514017	1					
ANR	514569	ElseStatement	else		514017	0					
ANR	514570	ReturnStatement	"return param_write_null ( plist , ""NumCopies"" ) ;"	145:16:5406:5449	514017	0	True				
ANR	514571	CallExpression	"param_write_null ( plist , ""NumCopies"" )"		514017	0					
ANR	514572	Callee	param_write_null		514017	0					
ANR	514573	Identifier	param_write_null		514017	0					
ANR	514574	ArgumentList	plist		514017	1					
ANR	514575	Argument	plist		514017	0					
ANR	514576	Identifier	plist		514017	0					
ANR	514577	Argument	"""NumCopies"""		514017	1					
ANR	514578	PrimaryExpression	"""NumCopies"""		514017	0					
ANR	514579	IfStatement	"if ( strcmp ( Param , ""SeparationColorNames"" ) == 0 )"		514017	26					
ANR	514580	Condition	"strcmp ( Param , ""SeparationColorNames"" ) == 0"	148:8:5475:5516	514017	0	True				
ANR	514581	EqualityExpression	"strcmp ( Param , ""SeparationColorNames"" ) == 0"		514017	0		==			
ANR	514582	CallExpression	"strcmp ( Param , ""SeparationColorNames"" )"		514017	0					
ANR	514583	Callee	strcmp		514017	0					
ANR	514584	Identifier	strcmp		514017	0					
ANR	514585	ArgumentList	Param		514017	1					
ANR	514586	Argument	Param		514017	0					
ANR	514587	Identifier	Param		514017	0					
ANR	514588	Argument	"""SeparationColorNames"""		514017	1					
ANR	514589	PrimaryExpression	"""SeparationColorNames"""		514017	0					
ANR	514590	PrimaryExpression	0		514017	1					
ANR	514591	CompoundStatement		78:8:3214:3240	514017	1					
ANR	514592	IdentifierDeclStatement	gs_param_string_array scna ;	149:8:5529:5555	514017	0	True				
ANR	514593	IdentifierDecl	scna		514017	0					
ANR	514594	IdentifierDeclType	gs_param_string_array		514017	0					
ANR	514595	Identifier	scna		514017	1					
ANR	514596	ExpressionStatement	"set_param_array ( scna , NULL , 0 )"	150:8:5565:5595	514017	1	True				
ANR	514597	CallExpression	"set_param_array ( scna , NULL , 0 )"		514017	0					
ANR	514598	Callee	set_param_array		514017	0					
ANR	514599	Identifier	set_param_array		514017	0					
ANR	514600	ArgumentList	scna		514017	1					
ANR	514601	Argument	scna		514017	0					
ANR	514602	Identifier	scna		514017	0					
ANR	514603	Argument	NULL		514017	1					
ANR	514604	Identifier	NULL		514017	0					
ANR	514605	Argument	0		514017	2					
ANR	514606	PrimaryExpression	0		514017	0					
ANR	514607	ReturnStatement	"return param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ;"	151:8:5605:5672	514017	2	True				
ANR	514608	CallExpression	"param_write_name_array ( plist , ""SeparationColorNames"" , & scna )"		514017	0					
ANR	514609	Callee	param_write_name_array		514017	0					
ANR	514610	Identifier	param_write_name_array		514017	0					
ANR	514611	ArgumentList	plist		514017	1					
ANR	514612	Argument	plist		514017	0					
ANR	514613	Identifier	plist		514017	0					
ANR	514614	Argument	"""SeparationColorNames"""		514017	1					
ANR	514615	PrimaryExpression	"""SeparationColorNames"""		514017	0					
ANR	514616	Argument	& scna		514017	2					
ANR	514617	UnaryOperationExpression	& scna		514017	0					
ANR	514618	UnaryOperator	&		514017	0					
ANR	514619	Identifier	scna		514017	1					
ANR	514620	IfStatement	"if ( strcmp ( Param , ""Separations"" ) == 0 )"		514017	27					
ANR	514621	Condition	"strcmp ( Param , ""Separations"" ) == 0"	153:8:5688:5720	514017	0	True				
ANR	514622	EqualityExpression	"strcmp ( Param , ""Separations"" ) == 0"		514017	0		==			
ANR	514623	CallExpression	"strcmp ( Param , ""Separations"" )"		514017	0					
ANR	514624	Callee	strcmp		514017	0					
ANR	514625	Identifier	strcmp		514017	0					
ANR	514626	ArgumentList	Param		514017	1					
ANR	514627	Argument	Param		514017	0					
ANR	514628	Identifier	Param		514017	0					
ANR	514629	Argument	"""Separations"""		514017	1					
ANR	514630	PrimaryExpression	"""Separations"""		514017	0					
ANR	514631	PrimaryExpression	0		514017	1					
ANR	514632	CompoundStatement		83:8:3418:3436	514017	1					
ANR	514633	IdentifierDeclStatement	bool seprs = false ;	154:8:5733:5751	514017	0	True				
ANR	514634	IdentifierDecl	seprs = false		514017	0					
ANR	514635	IdentifierDeclType	bool		514017	0					
ANR	514636	Identifier	seprs		514017	1					
ANR	514637	AssignmentExpression	seprs = false		514017	2		=			
ANR	514638	Identifier	false		514017	0					
ANR	514639	Identifier	false		514017	1					
ANR	514640	ReturnStatement	"return param_write_bool ( plist , ""Separations"" , & seprs ) ;"	155:8:5761:5814	514017	1	True				
ANR	514641	CallExpression	"param_write_bool ( plist , ""Separations"" , & seprs )"		514017	0					
ANR	514642	Callee	param_write_bool		514017	0					
ANR	514643	Identifier	param_write_bool		514017	0					
ANR	514644	ArgumentList	plist		514017	1					
ANR	514645	Argument	plist		514017	0					
ANR	514646	Identifier	plist		514017	0					
ANR	514647	Argument	"""Separations"""		514017	1					
ANR	514648	PrimaryExpression	"""Separations"""		514017	0					
ANR	514649	Argument	& seprs		514017	2					
ANR	514650	UnaryOperationExpression	& seprs		514017	0					
ANR	514651	UnaryOperator	&		514017	0					
ANR	514652	Identifier	seprs		514017	1					
ANR	514653	IfStatement	"if ( strcmp ( Param , ""UseCIEColor"" ) == 0 )"		514017	28					
ANR	514654	Condition	"strcmp ( Param , ""UseCIEColor"" ) == 0"	157:8:5830:5862	514017	0	True				
ANR	514655	EqualityExpression	"strcmp ( Param , ""UseCIEColor"" ) == 0"		514017	0		==			
ANR	514656	CallExpression	"strcmp ( Param , ""UseCIEColor"" )"		514017	0					
ANR	514657	Callee	strcmp		514017	0					
ANR	514658	Identifier	strcmp		514017	0					
ANR	514659	ArgumentList	Param		514017	1					
ANR	514660	Argument	Param		514017	0					
ANR	514661	Identifier	Param		514017	0					
ANR	514662	Argument	"""UseCIEColor"""		514017	1					
ANR	514663	PrimaryExpression	"""UseCIEColor"""		514017	0					
ANR	514664	PrimaryExpression	0		514017	1					
ANR	514665	CompoundStatement		86:43:3550:3550	514017	1					
ANR	514666	ReturnStatement	"return param_write_bool ( plist , ""UseCIEColor"" , & dev -> UseCIEColor ) ;"	158:8:5875:5939	514017	0	True				
ANR	514667	CallExpression	"param_write_bool ( plist , ""UseCIEColor"" , & dev -> UseCIEColor )"		514017	0					
ANR	514668	Callee	param_write_bool		514017	0					
ANR	514669	Identifier	param_write_bool		514017	0					
ANR	514670	ArgumentList	plist		514017	1					
ANR	514671	Argument	plist		514017	0					
ANR	514672	Identifier	plist		514017	0					
ANR	514673	Argument	"""UseCIEColor"""		514017	1					
ANR	514674	PrimaryExpression	"""UseCIEColor"""		514017	0					
ANR	514675	Argument	& dev -> UseCIEColor		514017	2					
ANR	514676	UnaryOperationExpression	& dev -> UseCIEColor		514017	0					
ANR	514677	UnaryOperator	&		514017	0					
ANR	514678	PtrMemberAccess	dev -> UseCIEColor		514017	1					
ANR	514679	Identifier	dev		514017	0					
ANR	514680	Identifier	UseCIEColor		514017	1					
ANR	514681	IfStatement	"if ( strcmp ( Param , ""HWSize"" ) == 0 )"		514017	29					
ANR	514682	Condition	"strcmp ( Param , ""HWSize"" ) == 0"	162:8:5990:6017	514017	0	True				
ANR	514683	EqualityExpression	"strcmp ( Param , ""HWSize"" ) == 0"		514017	0		==			
ANR	514684	CallExpression	"strcmp ( Param , ""HWSize"" )"		514017	0					
ANR	514685	Callee	strcmp		514017	0					
ANR	514686	Identifier	strcmp		514017	0					
ANR	514687	ArgumentList	Param		514017	1					
ANR	514688	Argument	Param		514017	0					
ANR	514689	Identifier	Param		514017	0					
ANR	514690	Argument	"""HWSize"""		514017	1					
ANR	514691	PrimaryExpression	"""HWSize"""		514017	0					
ANR	514692	PrimaryExpression	0		514017	1					
ANR	514693	CompoundStatement		93:8:3738:3761	514017	1					
ANR	514694	IdentifierDeclStatement	int HWSize [ 2 ] ;	163:8:6030:6043	514017	0	True				
ANR	514695	IdentifierDecl	HWSize [ 2 ]		514017	0					
ANR	514696	IdentifierDeclType	int [ 2 ]		514017	0					
ANR	514697	Identifier	HWSize		514017	1					
ANR	514698	PrimaryExpression	2		514017	2					
ANR	514699	IdentifierDeclStatement	gs_param_int_array hwsa ;	164:8:6053:6076	514017	1	True				
ANR	514700	IdentifierDecl	hwsa		514017	0					
ANR	514701	IdentifierDeclType	gs_param_int_array		514017	0					
ANR	514702	Identifier	hwsa		514017	1					
ANR	514703	ExpressionStatement	HWSize [ 0 ] = dev -> width	166:8:6087:6109	514017	2	True				
ANR	514704	AssignmentExpression	HWSize [ 0 ] = dev -> width		514017	0		=			
ANR	514705	ArrayIndexing	HWSize [ 0 ]		514017	0					
ANR	514706	Identifier	HWSize		514017	0					
ANR	514707	PrimaryExpression	0		514017	1					
ANR	514708	PtrMemberAccess	dev -> width		514017	1					
ANR	514709	Identifier	dev		514017	0					
ANR	514710	Identifier	width		514017	1					
ANR	514711	ExpressionStatement	HWSize [ 1 ] = dev -> height	167:8:6119:6142	514017	3	True				
ANR	514712	AssignmentExpression	HWSize [ 1 ] = dev -> height		514017	0		=			
ANR	514713	ArrayIndexing	HWSize [ 1 ]		514017	0					
ANR	514714	Identifier	HWSize		514017	0					
ANR	514715	PrimaryExpression	1		514017	1					
ANR	514716	PtrMemberAccess	dev -> height		514017	1					
ANR	514717	Identifier	dev		514017	0					
ANR	514718	Identifier	height		514017	1					
ANR	514719	ExpressionStatement	"set_param_array ( hwsa , HWSize , 2 )"	168:8:6152:6184	514017	4	True				
ANR	514720	CallExpression	"set_param_array ( hwsa , HWSize , 2 )"		514017	0					
ANR	514721	Callee	set_param_array		514017	0					
ANR	514722	Identifier	set_param_array		514017	0					
ANR	514723	ArgumentList	hwsa		514017	1					
ANR	514724	Argument	hwsa		514017	0					
ANR	514725	Identifier	hwsa		514017	0					
ANR	514726	Argument	HWSize		514017	1					
ANR	514727	Identifier	HWSize		514017	0					
ANR	514728	Argument	2		514017	2					
ANR	514729	PrimaryExpression	2		514017	0					
ANR	514730	ReturnStatement	"return param_write_int_array ( plist , ""HWSize"" , & hwsa ) ;"	169:8:6194:6246	514017	5	True				
ANR	514731	CallExpression	"param_write_int_array ( plist , ""HWSize"" , & hwsa )"		514017	0					
ANR	514732	Callee	param_write_int_array		514017	0					
ANR	514733	Identifier	param_write_int_array		514017	0					
ANR	514734	ArgumentList	plist		514017	1					
ANR	514735	Argument	plist		514017	0					
ANR	514736	Identifier	plist		514017	0					
ANR	514737	Argument	"""HWSize"""		514017	1					
ANR	514738	PrimaryExpression	"""HWSize"""		514017	0					
ANR	514739	Argument	& hwsa		514017	2					
ANR	514740	UnaryOperationExpression	& hwsa		514017	0					
ANR	514741	UnaryOperator	&		514017	0					
ANR	514742	Identifier	hwsa		514017	1					
ANR	514743	IfStatement	"if ( strcmp ( Param , "".HWMargins"" ) == 0 )"		514017	30					
ANR	514744	Condition	"strcmp ( Param , "".HWMargins"" ) == 0"	171:8:6262:6293	514017	0	True				
ANR	514745	EqualityExpression	"strcmp ( Param , "".HWMargins"" ) == 0"		514017	0		==			
ANR	514746	CallExpression	"strcmp ( Param , "".HWMargins"" )"		514017	0					
ANR	514747	Callee	strcmp		514017	0					
ANR	514748	Identifier	strcmp		514017	0					
ANR	514749	ArgumentList	Param		514017	1					
ANR	514750	Argument	Param		514017	0					
ANR	514751	Identifier	Param		514017	0					
ANR	514752	Argument	""".HWMargins"""		514017	1					
ANR	514753	PrimaryExpression	""".HWMargins"""		514017	0					
ANR	514754	PrimaryExpression	0		514017	1					
ANR	514755	CompoundStatement		101:8:3991:4016	514017	1					
ANR	514756	IdentifierDeclStatement	gs_param_float_array hwma ;	172:8:6306:6331	514017	0	True				
ANR	514757	IdentifierDecl	hwma		514017	0					
ANR	514758	IdentifierDeclType	gs_param_float_array		514017	0					
ANR	514759	Identifier	hwma		514017	1					
ANR	514760	ExpressionStatement	"set_param_array ( hwma , dev -> HWMargins , 4 )"	173:8:6341:6381	514017	1	True				
ANR	514761	CallExpression	"set_param_array ( hwma , dev -> HWMargins , 4 )"		514017	0					
ANR	514762	Callee	set_param_array		514017	0					
ANR	514763	Identifier	set_param_array		514017	0					
ANR	514764	ArgumentList	hwma		514017	1					
ANR	514765	Argument	hwma		514017	0					
ANR	514766	Identifier	hwma		514017	0					
ANR	514767	Argument	dev -> HWMargins		514017	1					
ANR	514768	PtrMemberAccess	dev -> HWMargins		514017	0					
ANR	514769	Identifier	dev		514017	0					
ANR	514770	Identifier	HWMargins		514017	1					
ANR	514771	Argument	4		514017	2					
ANR	514772	PrimaryExpression	4		514017	0					
ANR	514773	ReturnStatement	"return param_write_float_array ( plist , "".HWMargins"" , & hwma ) ;"	174:8:6391:6449	514017	2	True				
ANR	514774	CallExpression	"param_write_float_array ( plist , "".HWMargins"" , & hwma )"		514017	0					
ANR	514775	Callee	param_write_float_array		514017	0					
ANR	514776	Identifier	param_write_float_array		514017	0					
ANR	514777	ArgumentList	plist		514017	1					
ANR	514778	Argument	plist		514017	0					
ANR	514779	Identifier	plist		514017	0					
ANR	514780	Argument	""".HWMargins"""		514017	1					
ANR	514781	PrimaryExpression	""".HWMargins"""		514017	0					
ANR	514782	Argument	& hwma		514017	2					
ANR	514783	UnaryOperationExpression	& hwma		514017	0					
ANR	514784	UnaryOperator	&		514017	0					
ANR	514785	Identifier	hwma		514017	1					
ANR	514786	IfStatement	"if ( strcmp ( Param , "".MediaSize"" ) == 0 )"		514017	31					
ANR	514787	Condition	"strcmp ( Param , "".MediaSize"" ) == 0"	176:8:6465:6496	514017	0	True				
ANR	514788	EqualityExpression	"strcmp ( Param , "".MediaSize"" ) == 0"		514017	0		==			
ANR	514789	CallExpression	"strcmp ( Param , "".MediaSize"" )"		514017	0					
ANR	514790	Callee	strcmp		514017	0					
ANR	514791	Identifier	strcmp		514017	0					
ANR	514792	ArgumentList	Param		514017	1					
ANR	514793	Argument	Param		514017	0					
ANR	514794	Identifier	Param		514017	0					
ANR	514795	Argument	""".MediaSize"""		514017	1					
ANR	514796	PrimaryExpression	""".MediaSize"""		514017	0					
ANR	514797	PrimaryExpression	0		514017	1					
ANR	514798	CompoundStatement		106:8:4194:4218	514017	1					
ANR	514799	IdentifierDeclStatement	gs_param_float_array msa ;	177:8:6509:6533	514017	0	True				
ANR	514800	IdentifierDecl	msa		514017	0					
ANR	514801	IdentifierDeclType	gs_param_float_array		514017	0					
ANR	514802	Identifier	msa		514017	1					
ANR	514803	ExpressionStatement	"set_param_array ( msa , dev -> MediaSize , 2 )"	178:8:6543:6582	514017	1	True				
ANR	514804	CallExpression	"set_param_array ( msa , dev -> MediaSize , 2 )"		514017	0					
ANR	514805	Callee	set_param_array		514017	0					
ANR	514806	Identifier	set_param_array		514017	0					
ANR	514807	ArgumentList	msa		514017	1					
ANR	514808	Argument	msa		514017	0					
ANR	514809	Identifier	msa		514017	0					
ANR	514810	Argument	dev -> MediaSize		514017	1					
ANR	514811	PtrMemberAccess	dev -> MediaSize		514017	0					
ANR	514812	Identifier	dev		514017	0					
ANR	514813	Identifier	MediaSize		514017	1					
ANR	514814	Argument	2		514017	2					
ANR	514815	PrimaryExpression	2		514017	0					
ANR	514816	ReturnStatement	"return param_write_float_array ( plist , "".MediaSize"" , & msa ) ;"	179:8:6592:6649	514017	2	True				
ANR	514817	CallExpression	"param_write_float_array ( plist , "".MediaSize"" , & msa )"		514017	0					
ANR	514818	Callee	param_write_float_array		514017	0					
ANR	514819	Identifier	param_write_float_array		514017	0					
ANR	514820	ArgumentList	plist		514017	1					
ANR	514821	Argument	plist		514017	0					
ANR	514822	Identifier	plist		514017	0					
ANR	514823	Argument	""".MediaSize"""		514017	1					
ANR	514824	PrimaryExpression	""".MediaSize"""		514017	0					
ANR	514825	Argument	& msa		514017	2					
ANR	514826	UnaryOperationExpression	& msa		514017	0					
ANR	514827	UnaryOperator	&		514017	0					
ANR	514828	Identifier	msa		514017	1					
ANR	514829	IfStatement	"if ( strcmp ( Param , ""Name"" ) == 0 )"		514017	32					
ANR	514830	Condition	"strcmp ( Param , ""Name"" ) == 0"	181:8:6665:6690	514017	0	True				
ANR	514831	EqualityExpression	"strcmp ( Param , ""Name"" ) == 0"		514017	0		==			
ANR	514832	CallExpression	"strcmp ( Param , ""Name"" )"		514017	0					
ANR	514833	Callee	strcmp		514017	0					
ANR	514834	Identifier	strcmp		514017	0					
ANR	514835	ArgumentList	Param		514017	1					
ANR	514836	Argument	Param		514017	0					
ANR	514837	Identifier	Param		514017	0					
ANR	514838	Argument	"""Name"""		514017	1					
ANR	514839	PrimaryExpression	"""Name"""		514017	0					
ANR	514840	PrimaryExpression	0		514017	1					
ANR	514841	CompoundStatement		111:8:4388:4407	514017	1					
ANR	514842	IdentifierDeclStatement	gs_param_string dns ;	182:8:6703:6722	514017	0	True				
ANR	514843	IdentifierDecl	dns		514017	0					
ANR	514844	IdentifierDeclType	gs_param_string		514017	0					
ANR	514845	Identifier	dns		514017	1					
ANR	514846	ExpressionStatement	"param_string_from_string ( dns , dev -> dname )"	183:8:6732:6773	514017	1	True				
ANR	514847	CallExpression	"param_string_from_string ( dns , dev -> dname )"		514017	0					
ANR	514848	Callee	param_string_from_string		514017	0					
ANR	514849	Identifier	param_string_from_string		514017	0					
ANR	514850	ArgumentList	dns		514017	1					
ANR	514851	Argument	dns		514017	0					
ANR	514852	Identifier	dns		514017	0					
ANR	514853	Argument	dev -> dname		514017	1					
ANR	514854	PtrMemberAccess	dev -> dname		514017	0					
ANR	514855	Identifier	dev		514017	0					
ANR	514856	Identifier	dname		514017	1					
ANR	514857	ReturnStatement	"return param_write_string ( plist , ""Name"" , & dns ) ;"	184:8:6783:6829	514017	2	True				
ANR	514858	CallExpression	"param_write_string ( plist , ""Name"" , & dns )"		514017	0					
ANR	514859	Callee	param_write_string		514017	0					
ANR	514860	Identifier	param_write_string		514017	0					
ANR	514861	ArgumentList	plist		514017	1					
ANR	514862	Argument	plist		514017	0					
ANR	514863	Identifier	plist		514017	0					
ANR	514864	Argument	"""Name"""		514017	1					
ANR	514865	PrimaryExpression	"""Name"""		514017	0					
ANR	514866	Argument	& dns		514017	2					
ANR	514867	UnaryOperationExpression	& dns		514017	0					
ANR	514868	UnaryOperator	&		514017	0					
ANR	514869	Identifier	dns		514017	1					
ANR	514870	IfStatement	"if ( strcmp ( Param , ""Colors"" ) == 0 )"		514017	33					
ANR	514871	Condition	"strcmp ( Param , ""Colors"" ) == 0"	186:8:6845:6872	514017	0	True				
ANR	514872	EqualityExpression	"strcmp ( Param , ""Colors"" ) == 0"		514017	0		==			
ANR	514873	CallExpression	"strcmp ( Param , ""Colors"" )"		514017	0					
ANR	514874	Callee	strcmp		514017	0					
ANR	514875	Identifier	strcmp		514017	0					
ANR	514876	ArgumentList	Param		514017	1					
ANR	514877	Argument	Param		514017	0					
ANR	514878	Identifier	Param		514017	0					
ANR	514879	Argument	"""Colors"""		514017	1					
ANR	514880	PrimaryExpression	"""Colors"""		514017	0					
ANR	514881	PrimaryExpression	0		514017	1					
ANR	514882	CompoundStatement		116:8:4570:4613	514017	1					
ANR	514883	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	187:8:6885:6928	514017	0	True				
ANR	514884	IdentifierDecl	colors = dev -> color_info . num_components		514017	0					
ANR	514885	IdentifierDeclType	int		514017	0					
ANR	514886	Identifier	colors		514017	1					
ANR	514887	AssignmentExpression	colors = dev -> color_info . num_components		514017	2		=			
ANR	514888	Identifier	colors		514017	0					
ANR	514889	MemberAccess	dev -> color_info . num_components		514017	1					
ANR	514890	PtrMemberAccess	dev -> color_info		514017	0					
ANR	514891	Identifier	dev		514017	0					
ANR	514892	Identifier	color_info		514017	1					
ANR	514893	Identifier	num_components		514017	1					
ANR	514894	ReturnStatement	"return param_write_int ( plist , ""Colors"" , & colors ) ;"	188:8:6938:6986	514017	1	True				
ANR	514895	CallExpression	"param_write_int ( plist , ""Colors"" , & colors )"		514017	0					
ANR	514896	Callee	param_write_int		514017	0					
ANR	514897	Identifier	param_write_int		514017	0					
ANR	514898	ArgumentList	plist		514017	1					
ANR	514899	Argument	plist		514017	0					
ANR	514900	Identifier	plist		514017	0					
ANR	514901	Argument	"""Colors"""		514017	1					
ANR	514902	PrimaryExpression	"""Colors"""		514017	0					
ANR	514903	Argument	& colors		514017	2					
ANR	514904	UnaryOperationExpression	& colors		514017	0					
ANR	514905	UnaryOperator	&		514017	0					
ANR	514906	Identifier	colors		514017	1					
ANR	514907	IfStatement	"if ( strcmp ( Param , ""BitsPerPixel"" ) == 0 )"		514017	34					
ANR	514908	Condition	"strcmp ( Param , ""BitsPerPixel"" ) == 0"	190:8:7002:7035	514017	0	True				
ANR	514909	EqualityExpression	"strcmp ( Param , ""BitsPerPixel"" ) == 0"		514017	0		==			
ANR	514910	CallExpression	"strcmp ( Param , ""BitsPerPixel"" )"		514017	0					
ANR	514911	Callee	strcmp		514017	0					
ANR	514912	Identifier	strcmp		514017	0					
ANR	514913	ArgumentList	Param		514017	1					
ANR	514914	Argument	Param		514017	0					
ANR	514915	Identifier	Param		514017	0					
ANR	514916	Argument	"""BitsPerPixel"""		514017	1					
ANR	514917	PrimaryExpression	"""BitsPerPixel"""		514017	0					
ANR	514918	PrimaryExpression	0		514017	1					
ANR	514919	CompoundStatement		119:44:4723:4723	514017	1					
ANR	514920	ReturnStatement	"return param_write_int ( plist , ""BitsPerPixel"" , & depth ) ;"	191:8:7048:7101	514017	0	True				
ANR	514921	CallExpression	"param_write_int ( plist , ""BitsPerPixel"" , & depth )"		514017	0					
ANR	514922	Callee	param_write_int		514017	0					
ANR	514923	Identifier	param_write_int		514017	0					
ANR	514924	ArgumentList	plist		514017	1					
ANR	514925	Argument	plist		514017	0					
ANR	514926	Identifier	plist		514017	0					
ANR	514927	Argument	"""BitsPerPixel"""		514017	1					
ANR	514928	PrimaryExpression	"""BitsPerPixel"""		514017	0					
ANR	514929	Argument	& depth		514017	2					
ANR	514930	UnaryOperationExpression	& depth		514017	0					
ANR	514931	UnaryOperator	&		514017	0					
ANR	514932	Identifier	depth		514017	1					
ANR	514933	IfStatement	"if ( strcmp ( Param , ""GrayValues"" ) == 0 )"		514017	35					
ANR	514934	Condition	"strcmp ( Param , ""GrayValues"" ) == 0"	193:8:7117:7148	514017	0	True				
ANR	514935	EqualityExpression	"strcmp ( Param , ""GrayValues"" ) == 0"		514017	0		==			
ANR	514936	CallExpression	"strcmp ( Param , ""GrayValues"" )"		514017	0					
ANR	514937	Callee	strcmp		514017	0					
ANR	514938	Identifier	strcmp		514017	0					
ANR	514939	ArgumentList	Param		514017	1					
ANR	514940	Argument	Param		514017	0					
ANR	514941	Identifier	Param		514017	0					
ANR	514942	Argument	"""GrayValues"""		514017	1					
ANR	514943	PrimaryExpression	"""GrayValues"""		514017	0					
ANR	514944	PrimaryExpression	0		514017	1					
ANR	514945	CompoundStatement		123:8:4846:4891	514017	1					
ANR	514946	IdentifierDeclStatement	int GrayValues = dev -> color_info . max_gray + 1 ;	194:8:7161:7206	514017	0	True				
ANR	514947	IdentifierDecl	GrayValues = dev -> color_info . max_gray + 1		514017	0					
ANR	514948	IdentifierDeclType	int		514017	0					
ANR	514949	Identifier	GrayValues		514017	1					
ANR	514950	AssignmentExpression	GrayValues = dev -> color_info . max_gray + 1		514017	2		=			
ANR	514951	Identifier	GrayValues		514017	0					
ANR	514952	AdditiveExpression	dev -> color_info . max_gray + 1		514017	1		+			
ANR	514953	MemberAccess	dev -> color_info . max_gray		514017	0					
ANR	514954	PtrMemberAccess	dev -> color_info		514017	0					
ANR	514955	Identifier	dev		514017	0					
ANR	514956	Identifier	color_info		514017	1					
ANR	514957	Identifier	max_gray		514017	1					
ANR	514958	PrimaryExpression	1		514017	1					
ANR	514959	ReturnStatement	"return param_write_int ( plist , ""GrayValues"" , & GrayValues ) ;"	195:8:7216:7272	514017	1	True				
ANR	514960	CallExpression	"param_write_int ( plist , ""GrayValues"" , & GrayValues )"		514017	0					
ANR	514961	Callee	param_write_int		514017	0					
ANR	514962	Identifier	param_write_int		514017	0					
ANR	514963	ArgumentList	plist		514017	1					
ANR	514964	Argument	plist		514017	0					
ANR	514965	Identifier	plist		514017	0					
ANR	514966	Argument	"""GrayValues"""		514017	1					
ANR	514967	PrimaryExpression	"""GrayValues"""		514017	0					
ANR	514968	Argument	& GrayValues		514017	2					
ANR	514969	UnaryOperationExpression	& GrayValues		514017	0					
ANR	514970	UnaryOperator	&		514017	0					
ANR	514971	Identifier	GrayValues		514017	1					
ANR	514972	IfStatement	"if ( strcmp ( Param , ""PageCount"" ) == 0 )"		514017	36					
ANR	514973	Condition	"strcmp ( Param , ""PageCount"" ) == 0"	197:8:7288:7318	514017	0	True				
ANR	514974	EqualityExpression	"strcmp ( Param , ""PageCount"" ) == 0"		514017	0		==			
ANR	514975	CallExpression	"strcmp ( Param , ""PageCount"" )"		514017	0					
ANR	514976	Callee	strcmp		514017	0					
ANR	514977	Identifier	strcmp		514017	0					
ANR	514978	ArgumentList	Param		514017	1					
ANR	514979	Argument	Param		514017	0					
ANR	514980	Identifier	Param		514017	0					
ANR	514981	Argument	"""PageCount"""		514017	1					
ANR	514982	PrimaryExpression	"""PageCount"""		514017	0					
ANR	514983	PrimaryExpression	0		514017	1					
ANR	514984	CompoundStatement		126:41:5006:5006	514017	1					
ANR	514985	ReturnStatement	"return param_write_long ( plist , ""PageCount"" , & dev -> PageCount ) ;"	198:8:7331:7391	514017	0	True				
ANR	514986	CallExpression	"param_write_long ( plist , ""PageCount"" , & dev -> PageCount )"		514017	0					
ANR	514987	Callee	param_write_long		514017	0					
ANR	514988	Identifier	param_write_long		514017	0					
ANR	514989	ArgumentList	plist		514017	1					
ANR	514990	Argument	plist		514017	0					
ANR	514991	Identifier	plist		514017	0					
ANR	514992	Argument	"""PageCount"""		514017	1					
ANR	514993	PrimaryExpression	"""PageCount"""		514017	0					
ANR	514994	Argument	& dev -> PageCount		514017	2					
ANR	514995	UnaryOperationExpression	& dev -> PageCount		514017	0					
ANR	514996	UnaryOperator	&		514017	0					
ANR	514997	PtrMemberAccess	dev -> PageCount		514017	1					
ANR	514998	Identifier	dev		514017	0					
ANR	514999	Identifier	PageCount		514017	1					
ANR	515000	IfStatement	"if ( strcmp ( Param , "".IgnoreNumCopies"" ) == 0 )"		514017	37					
ANR	515001	Condition	"strcmp ( Param , "".IgnoreNumCopies"" ) == 0"	200:8:7407:7444	514017	0	True				
ANR	515002	EqualityExpression	"strcmp ( Param , "".IgnoreNumCopies"" ) == 0"		514017	0		==			
ANR	515003	CallExpression	"strcmp ( Param , "".IgnoreNumCopies"" )"		514017	0					
ANR	515004	Callee	strcmp		514017	0					
ANR	515005	Identifier	strcmp		514017	0					
ANR	515006	ArgumentList	Param		514017	1					
ANR	515007	Argument	Param		514017	0					
ANR	515008	Identifier	Param		514017	0					
ANR	515009	Argument	""".IgnoreNumCopies"""		514017	1					
ANR	515010	PrimaryExpression	""".IgnoreNumCopies"""		514017	0					
ANR	515011	PrimaryExpression	0		514017	1					
ANR	515012	CompoundStatement		129:48:5132:5132	514017	1					
ANR	515013	ReturnStatement	"return param_write_bool ( plist , "".IgnoreNumCopies"" , & dev -> IgnoreNumCopies ) ;"	201:8:7457:7530	514017	0	True				
ANR	515014	CallExpression	"param_write_bool ( plist , "".IgnoreNumCopies"" , & dev -> IgnoreNumCopies )"		514017	0					
ANR	515015	Callee	param_write_bool		514017	0					
ANR	515016	Identifier	param_write_bool		514017	0					
ANR	515017	ArgumentList	plist		514017	1					
ANR	515018	Argument	plist		514017	0					
ANR	515019	Identifier	plist		514017	0					
ANR	515020	Argument	""".IgnoreNumCopies"""		514017	1					
ANR	515021	PrimaryExpression	""".IgnoreNumCopies"""		514017	0					
ANR	515022	Argument	& dev -> IgnoreNumCopies		514017	2					
ANR	515023	UnaryOperationExpression	& dev -> IgnoreNumCopies		514017	0					
ANR	515024	UnaryOperator	&		514017	0					
ANR	515025	PtrMemberAccess	dev -> IgnoreNumCopies		514017	1					
ANR	515026	Identifier	dev		514017	0					
ANR	515027	Identifier	IgnoreNumCopies		514017	1					
ANR	515028	IfStatement	"if ( strcmp ( Param , ""TextAlphaBits"" ) == 0 )"		514017	38					
ANR	515029	Condition	"strcmp ( Param , ""TextAlphaBits"" ) == 0"	203:8:7546:7580	514017	0	True				
ANR	515030	EqualityExpression	"strcmp ( Param , ""TextAlphaBits"" ) == 0"		514017	0		==			
ANR	515031	CallExpression	"strcmp ( Param , ""TextAlphaBits"" )"		514017	0					
ANR	515032	Callee	strcmp		514017	0					
ANR	515033	Identifier	strcmp		514017	0					
ANR	515034	ArgumentList	Param		514017	1					
ANR	515035	Argument	Param		514017	0					
ANR	515036	Identifier	Param		514017	0					
ANR	515037	Argument	"""TextAlphaBits"""		514017	1					
ANR	515038	PrimaryExpression	"""TextAlphaBits"""		514017	0					
ANR	515039	PrimaryExpression	0		514017	1					
ANR	515040	CompoundStatement		132:45:5268:5268	514017	1					
ANR	515041	ReturnStatement	"return param_write_int ( plist , ""TextAlphaBits"" , & dev -> color_info . anti_alias . text_bits ) ;"	204:8:7593:7710	514017	0	True				
ANR	515042	CallExpression	"param_write_int ( plist , ""TextAlphaBits"" , & dev -> color_info . anti_alias . text_bits )"		514017	0					
ANR	515043	Callee	param_write_int		514017	0					
ANR	515044	Identifier	param_write_int		514017	0					
ANR	515045	ArgumentList	plist		514017	1					
ANR	515046	Argument	plist		514017	0					
ANR	515047	Identifier	plist		514017	0					
ANR	515048	Argument	"""TextAlphaBits"""		514017	1					
ANR	515049	PrimaryExpression	"""TextAlphaBits"""		514017	0					
ANR	515050	Argument	& dev -> color_info . anti_alias . text_bits		514017	2					
ANR	515051	UnaryOperationExpression	& dev -> color_info . anti_alias . text_bits		514017	0					
ANR	515052	UnaryOperator	&		514017	0					
ANR	515053	MemberAccess	dev -> color_info . anti_alias . text_bits		514017	1					
ANR	515054	MemberAccess	dev -> color_info . anti_alias		514017	0					
ANR	515055	PtrMemberAccess	dev -> color_info		514017	0					
ANR	515056	Identifier	dev		514017	0					
ANR	515057	Identifier	color_info		514017	1					
ANR	515058	Identifier	anti_alias		514017	1					
ANR	515059	Identifier	text_bits		514017	1					
ANR	515060	IfStatement	"if ( strcmp ( Param , ""GraphicsAlphaBits"" ) == 0 )"		514017	39					
ANR	515061	Condition	"strcmp ( Param , ""GraphicsAlphaBits"" ) == 0"	207:8:7726:7764	514017	0	True				
ANR	515062	EqualityExpression	"strcmp ( Param , ""GraphicsAlphaBits"" ) == 0"		514017	0		==			
ANR	515063	CallExpression	"strcmp ( Param , ""GraphicsAlphaBits"" )"		514017	0					
ANR	515064	Callee	strcmp		514017	0					
ANR	515065	Identifier	strcmp		514017	0					
ANR	515066	ArgumentList	Param		514017	1					
ANR	515067	Argument	Param		514017	0					
ANR	515068	Identifier	Param		514017	0					
ANR	515069	Argument	"""GraphicsAlphaBits"""		514017	1					
ANR	515070	PrimaryExpression	"""GraphicsAlphaBits"""		514017	0					
ANR	515071	PrimaryExpression	0		514017	1					
ANR	515072	CompoundStatement		136:49:5452:5452	514017	1					
ANR	515073	ReturnStatement	"return param_write_int ( plist , ""GraphicsAlphaBits"" , & dev -> color_info . anti_alias . graphics_bits ) ;"	208:8:7777:7902	514017	0	True				
ANR	515074	CallExpression	"param_write_int ( plist , ""GraphicsAlphaBits"" , & dev -> color_info . anti_alias . graphics_bits )"		514017	0					
ANR	515075	Callee	param_write_int		514017	0					
ANR	515076	Identifier	param_write_int		514017	0					
ANR	515077	ArgumentList	plist		514017	1					
ANR	515078	Argument	plist		514017	0					
ANR	515079	Identifier	plist		514017	0					
ANR	515080	Argument	"""GraphicsAlphaBits"""		514017	1					
ANR	515081	PrimaryExpression	"""GraphicsAlphaBits"""		514017	0					
ANR	515082	Argument	& dev -> color_info . anti_alias . graphics_bits		514017	2					
ANR	515083	UnaryOperationExpression	& dev -> color_info . anti_alias . graphics_bits		514017	0					
ANR	515084	UnaryOperator	&		514017	0					
ANR	515085	MemberAccess	dev -> color_info . anti_alias . graphics_bits		514017	1					
ANR	515086	MemberAccess	dev -> color_info . anti_alias		514017	0					
ANR	515087	PtrMemberAccess	dev -> color_info		514017	0					
ANR	515088	Identifier	dev		514017	0					
ANR	515089	Identifier	color_info		514017	1					
ANR	515090	Identifier	anti_alias		514017	1					
ANR	515091	Identifier	graphics_bits		514017	1					
ANR	515092	IfStatement	"if ( strcmp ( Param , ""AntidropoutDownscaler"" ) == 0 )"		514017	40					
ANR	515093	Condition	"strcmp ( Param , ""AntidropoutDownscaler"" ) == 0"	211:8:7918:7960	514017	0	True				
ANR	515094	EqualityExpression	"strcmp ( Param , ""AntidropoutDownscaler"" ) == 0"		514017	0		==			
ANR	515095	CallExpression	"strcmp ( Param , ""AntidropoutDownscaler"" )"		514017	0					
ANR	515096	Callee	strcmp		514017	0					
ANR	515097	Identifier	strcmp		514017	0					
ANR	515098	ArgumentList	Param		514017	1					
ANR	515099	Argument	Param		514017	0					
ANR	515100	Identifier	Param		514017	0					
ANR	515101	Argument	"""AntidropoutDownscaler"""		514017	1					
ANR	515102	PrimaryExpression	"""AntidropoutDownscaler"""		514017	0					
ANR	515103	PrimaryExpression	0		514017	1					
ANR	515104	CompoundStatement		140:53:5648:5648	514017	1					
ANR	515105	ReturnStatement	"return param_write_bool ( plist , ""AntidropoutDownscaler"" , & dev -> color_info . use_antidropout_downscaler ) ;"	212:8:7973:8105	514017	0	True				
ANR	515106	CallExpression	"param_write_bool ( plist , ""AntidropoutDownscaler"" , & dev -> color_info . use_antidropout_downscaler )"		514017	0					
ANR	515107	Callee	param_write_bool		514017	0					
ANR	515108	Identifier	param_write_bool		514017	0					
ANR	515109	ArgumentList	plist		514017	1					
ANR	515110	Argument	plist		514017	0					
ANR	515111	Identifier	plist		514017	0					
ANR	515112	Argument	"""AntidropoutDownscaler"""		514017	1					
ANR	515113	PrimaryExpression	"""AntidropoutDownscaler"""		514017	0					
ANR	515114	Argument	& dev -> color_info . use_antidropout_downscaler		514017	2					
ANR	515115	UnaryOperationExpression	& dev -> color_info . use_antidropout_downscaler		514017	0					
ANR	515116	UnaryOperator	&		514017	0					
ANR	515117	MemberAccess	dev -> color_info . use_antidropout_downscaler		514017	1					
ANR	515118	PtrMemberAccess	dev -> color_info		514017	0					
ANR	515119	Identifier	dev		514017	0					
ANR	515120	Identifier	color_info		514017	1					
ANR	515121	Identifier	use_antidropout_downscaler		514017	1					
ANR	515122	IfStatement	"if ( strcmp ( Param , "".LockSafetyParams"" ) == 0 )"		514017	41					
ANR	515123	Condition	"strcmp ( Param , "".LockSafetyParams"" ) == 0"	215:8:8121:8159	514017	0	True				
ANR	515124	EqualityExpression	"strcmp ( Param , "".LockSafetyParams"" ) == 0"		514017	0		==			
ANR	515125	CallExpression	"strcmp ( Param , "".LockSafetyParams"" )"		514017	0					
ANR	515126	Callee	strcmp		514017	0					
ANR	515127	Identifier	strcmp		514017	0					
ANR	515128	ArgumentList	Param		514017	1					
ANR	515129	Argument	Param		514017	0					
ANR	515130	Identifier	Param		514017	0					
ANR	515131	Argument	""".LockSafetyParams"""		514017	1					
ANR	515132	PrimaryExpression	""".LockSafetyParams"""		514017	0					
ANR	515133	PrimaryExpression	0		514017	1					
ANR	515134	CompoundStatement		144:49:5847:5847	514017	1					
ANR	515135	ReturnStatement	"return param_write_bool ( plist , "".LockSafetyParams"" , & dev -> LockSafetyParams ) ;"	216:8:8172:8247	514017	0	True				
ANR	515136	CallExpression	"param_write_bool ( plist , "".LockSafetyParams"" , & dev -> LockSafetyParams )"		514017	0					
ANR	515137	Callee	param_write_bool		514017	0					
ANR	515138	Identifier	param_write_bool		514017	0					
ANR	515139	ArgumentList	plist		514017	1					
ANR	515140	Argument	plist		514017	0					
ANR	515141	Identifier	plist		514017	0					
ANR	515142	Argument	""".LockSafetyParams"""		514017	1					
ANR	515143	PrimaryExpression	""".LockSafetyParams"""		514017	0					
ANR	515144	Argument	& dev -> LockSafetyParams		514017	2					
ANR	515145	UnaryOperationExpression	& dev -> LockSafetyParams		514017	0					
ANR	515146	UnaryOperator	&		514017	0					
ANR	515147	PtrMemberAccess	dev -> LockSafetyParams		514017	1					
ANR	515148	Identifier	dev		514017	0					
ANR	515149	Identifier	LockSafetyParams		514017	1					
ANR	515150	IfStatement	"if ( strcmp ( Param , ""MaxPatternBitmap"" ) == 0 )"		514017	42					
ANR	515151	Condition	"strcmp ( Param , ""MaxPatternBitmap"" ) == 0"	218:8:8263:8300	514017	0	True				
ANR	515152	EqualityExpression	"strcmp ( Param , ""MaxPatternBitmap"" ) == 0"		514017	0		==			
ANR	515153	CallExpression	"strcmp ( Param , ""MaxPatternBitmap"" )"		514017	0					
ANR	515154	Callee	strcmp		514017	0					
ANR	515155	Identifier	strcmp		514017	0					
ANR	515156	ArgumentList	Param		514017	1					
ANR	515157	Argument	Param		514017	0					
ANR	515158	Identifier	Param		514017	0					
ANR	515159	Argument	"""MaxPatternBitmap"""		514017	1					
ANR	515160	PrimaryExpression	"""MaxPatternBitmap"""		514017	0					
ANR	515161	PrimaryExpression	0		514017	1					
ANR	515162	CompoundStatement		147:48:5988:5988	514017	1					
ANR	515163	ReturnStatement	"return param_write_int ( plist , ""MaxPatternBitmap"" , & dev -> MaxPatternBitmap ) ;"	219:8:8313:8386	514017	0	True				
ANR	515164	CallExpression	"param_write_int ( plist , ""MaxPatternBitmap"" , & dev -> MaxPatternBitmap )"		514017	0					
ANR	515165	Callee	param_write_int		514017	0					
ANR	515166	Identifier	param_write_int		514017	0					
ANR	515167	ArgumentList	plist		514017	1					
ANR	515168	Argument	plist		514017	0					
ANR	515169	Identifier	plist		514017	0					
ANR	515170	Argument	"""MaxPatternBitmap"""		514017	1					
ANR	515171	PrimaryExpression	"""MaxPatternBitmap"""		514017	0					
ANR	515172	Argument	& dev -> MaxPatternBitmap		514017	2					
ANR	515173	UnaryOperationExpression	& dev -> MaxPatternBitmap		514017	0					
ANR	515174	UnaryOperator	&		514017	0					
ANR	515175	PtrMemberAccess	dev -> MaxPatternBitmap		514017	1					
ANR	515176	Identifier	dev		514017	0					
ANR	515177	Identifier	MaxPatternBitmap		514017	1					
ANR	515178	IfStatement	"if ( strcmp ( Param , ""PageUsesTransparency"" ) == 0 )"		514017	43					
ANR	515179	Condition	"strcmp ( Param , ""PageUsesTransparency"" ) == 0"	221:8:8402:8443	514017	0	True				
ANR	515180	EqualityExpression	"strcmp ( Param , ""PageUsesTransparency"" ) == 0"		514017	0		==			
ANR	515181	CallExpression	"strcmp ( Param , ""PageUsesTransparency"" )"		514017	0					
ANR	515182	Callee	strcmp		514017	0					
ANR	515183	Identifier	strcmp		514017	0					
ANR	515184	ArgumentList	Param		514017	1					
ANR	515185	Argument	Param		514017	0					
ANR	515186	Identifier	Param		514017	0					
ANR	515187	Argument	"""PageUsesTransparency"""		514017	1					
ANR	515188	PrimaryExpression	"""PageUsesTransparency"""		514017	0					
ANR	515189	PrimaryExpression	0		514017	1					
ANR	515190	CompoundStatement		150:52:6131:6131	514017	1					
ANR	515191	ReturnStatement	"return param_write_bool ( plist , ""PageUsesTransparency"" , & dev -> page_uses_transparency ) ;"	222:8:8456:8540	514017	0	True				
ANR	515192	CallExpression	"param_write_bool ( plist , ""PageUsesTransparency"" , & dev -> page_uses_transparency )"		514017	0					
ANR	515193	Callee	param_write_bool		514017	0					
ANR	515194	Identifier	param_write_bool		514017	0					
ANR	515195	ArgumentList	plist		514017	1					
ANR	515196	Argument	plist		514017	0					
ANR	515197	Identifier	plist		514017	0					
ANR	515198	Argument	"""PageUsesTransparency"""		514017	1					
ANR	515199	PrimaryExpression	"""PageUsesTransparency"""		514017	0					
ANR	515200	Argument	& dev -> page_uses_transparency		514017	2					
ANR	515201	UnaryOperationExpression	& dev -> page_uses_transparency		514017	0					
ANR	515202	UnaryOperator	&		514017	0					
ANR	515203	PtrMemberAccess	dev -> page_uses_transparency		514017	1					
ANR	515204	Identifier	dev		514017	0					
ANR	515205	Identifier	page_uses_transparency		514017	1					
ANR	515206	IfStatement	"if ( strcmp ( Param , ""MaxBitmap"" ) == 0 )"		514017	44					
ANR	515207	Condition	"strcmp ( Param , ""MaxBitmap"" ) == 0"	224:8:8556:8586	514017	0	True				
ANR	515208	EqualityExpression	"strcmp ( Param , ""MaxBitmap"" ) == 0"		514017	0		==			
ANR	515209	CallExpression	"strcmp ( Param , ""MaxBitmap"" )"		514017	0					
ANR	515210	Callee	strcmp		514017	0					
ANR	515211	Identifier	strcmp		514017	0					
ANR	515212	ArgumentList	Param		514017	1					
ANR	515213	Argument	Param		514017	0					
ANR	515214	Identifier	Param		514017	0					
ANR	515215	Argument	"""MaxBitmap"""		514017	1					
ANR	515216	PrimaryExpression	"""MaxBitmap"""		514017	0					
ANR	515217	PrimaryExpression	0		514017	1					
ANR	515218	CompoundStatement		153:41:6274:6274	514017	1					
ANR	515219	ReturnStatement	"return param_write_long ( plist , ""MaxBitmap"" , & ( dev -> space_params . MaxBitmap ) ) ;"	225:8:8599:8674	514017	0	True				
ANR	515220	CallExpression	"param_write_long ( plist , ""MaxBitmap"" , & ( dev -> space_params . MaxBitmap ) )"		514017	0					
ANR	515221	Callee	param_write_long		514017	0					
ANR	515222	Identifier	param_write_long		514017	0					
ANR	515223	ArgumentList	plist		514017	1					
ANR	515224	Argument	plist		514017	0					
ANR	515225	Identifier	plist		514017	0					
ANR	515226	Argument	"""MaxBitmap"""		514017	1					
ANR	515227	PrimaryExpression	"""MaxBitmap"""		514017	0					
ANR	515228	Argument	& ( dev -> space_params . MaxBitmap )		514017	2					
ANR	515229	UnaryOperationExpression	& ( dev -> space_params . MaxBitmap )		514017	0					
ANR	515230	UnaryOperator	&		514017	0					
ANR	515231	MemberAccess	dev -> space_params . MaxBitmap		514017	1					
ANR	515232	PtrMemberAccess	dev -> space_params		514017	0					
ANR	515233	Identifier	dev		514017	0					
ANR	515234	Identifier	space_params		514017	1					
ANR	515235	Identifier	MaxBitmap		514017	1					
ANR	515236	IfStatement	"if ( strcmp ( Param , ""BandBufferSpace"" ) == 0 )"		514017	45					
ANR	515237	Condition	"strcmp ( Param , ""BandBufferSpace"" ) == 0"	227:8:8690:8726	514017	0	True				
ANR	515238	EqualityExpression	"strcmp ( Param , ""BandBufferSpace"" ) == 0"		514017	0		==			
ANR	515239	CallExpression	"strcmp ( Param , ""BandBufferSpace"" )"		514017	0					
ANR	515240	Callee	strcmp		514017	0					
ANR	515241	Identifier	strcmp		514017	0					
ANR	515242	ArgumentList	Param		514017	1					
ANR	515243	Argument	Param		514017	0					
ANR	515244	Identifier	Param		514017	0					
ANR	515245	Argument	"""BandBufferSpace"""		514017	1					
ANR	515246	PrimaryExpression	"""BandBufferSpace"""		514017	0					
ANR	515247	PrimaryExpression	0		514017	1					
ANR	515248	CompoundStatement		156:47:6414:6414	514017	1					
ANR	515249	ReturnStatement	"return param_write_long ( plist , ""BandBufferSpace"" , & dev -> space_params . band . BandBufferSpace ) ;"	228:8:8739:8829	514017	0	True				
ANR	515250	CallExpression	"param_write_long ( plist , ""BandBufferSpace"" , & dev -> space_params . band . BandBufferSpace )"		514017	0					
ANR	515251	Callee	param_write_long		514017	0					
ANR	515252	Identifier	param_write_long		514017	0					
ANR	515253	ArgumentList	plist		514017	1					
ANR	515254	Argument	plist		514017	0					
ANR	515255	Identifier	plist		514017	0					
ANR	515256	Argument	"""BandBufferSpace"""		514017	1					
ANR	515257	PrimaryExpression	"""BandBufferSpace"""		514017	0					
ANR	515258	Argument	& dev -> space_params . band . BandBufferSpace		514017	2					
ANR	515259	UnaryOperationExpression	& dev -> space_params . band . BandBufferSpace		514017	0					
ANR	515260	UnaryOperator	&		514017	0					
ANR	515261	MemberAccess	dev -> space_params . band . BandBufferSpace		514017	1					
ANR	515262	MemberAccess	dev -> space_params . band		514017	0					
ANR	515263	PtrMemberAccess	dev -> space_params		514017	0					
ANR	515264	Identifier	dev		514017	0					
ANR	515265	Identifier	space_params		514017	1					
ANR	515266	Identifier	band		514017	1					
ANR	515267	Identifier	BandBufferSpace		514017	1					
ANR	515268	IfStatement	"if ( strcmp ( Param , ""BandHeight"" ) == 0 )"		514017	46					
ANR	515269	Condition	"strcmp ( Param , ""BandHeight"" ) == 0"	230:8:8845:8876	514017	0	True				
ANR	515270	EqualityExpression	"strcmp ( Param , ""BandHeight"" ) == 0"		514017	0		==			
ANR	515271	CallExpression	"strcmp ( Param , ""BandHeight"" )"		514017	0					
ANR	515272	Callee	strcmp		514017	0					
ANR	515273	Identifier	strcmp		514017	0					
ANR	515274	ArgumentList	Param		514017	1					
ANR	515275	Argument	Param		514017	0					
ANR	515276	Identifier	Param		514017	0					
ANR	515277	Argument	"""BandHeight"""		514017	1					
ANR	515278	PrimaryExpression	"""BandHeight"""		514017	0					
ANR	515279	PrimaryExpression	0		514017	1					
ANR	515280	CompoundStatement		159:42:6564:6564	514017	1					
ANR	515281	ReturnStatement	"return param_write_int ( plist , ""BandHeight"" , & dev -> space_params . band . BandHeight ) ;"	231:8:8889:8968	514017	0	True				
ANR	515282	CallExpression	"param_write_int ( plist , ""BandHeight"" , & dev -> space_params . band . BandHeight )"		514017	0					
ANR	515283	Callee	param_write_int		514017	0					
ANR	515284	Identifier	param_write_int		514017	0					
ANR	515285	ArgumentList	plist		514017	1					
ANR	515286	Argument	plist		514017	0					
ANR	515287	Identifier	plist		514017	0					
ANR	515288	Argument	"""BandHeight"""		514017	1					
ANR	515289	PrimaryExpression	"""BandHeight"""		514017	0					
ANR	515290	Argument	& dev -> space_params . band . BandHeight		514017	2					
ANR	515291	UnaryOperationExpression	& dev -> space_params . band . BandHeight		514017	0					
ANR	515292	UnaryOperator	&		514017	0					
ANR	515293	MemberAccess	dev -> space_params . band . BandHeight		514017	1					
ANR	515294	MemberAccess	dev -> space_params . band		514017	0					
ANR	515295	PtrMemberAccess	dev -> space_params		514017	0					
ANR	515296	Identifier	dev		514017	0					
ANR	515297	Identifier	space_params		514017	1					
ANR	515298	Identifier	band		514017	1					
ANR	515299	Identifier	BandHeight		514017	1					
ANR	515300	IfStatement	"if ( strcmp ( Param , ""BandWidth"" ) == 0 )"		514017	47					
ANR	515301	Condition	"strcmp ( Param , ""BandWidth"" ) == 0"	233:8:8984:9014	514017	0	True				
ANR	515302	EqualityExpression	"strcmp ( Param , ""BandWidth"" ) == 0"		514017	0		==			
ANR	515303	CallExpression	"strcmp ( Param , ""BandWidth"" )"		514017	0					
ANR	515304	Callee	strcmp		514017	0					
ANR	515305	Identifier	strcmp		514017	0					
ANR	515306	ArgumentList	Param		514017	1					
ANR	515307	Argument	Param		514017	0					
ANR	515308	Identifier	Param		514017	0					
ANR	515309	Argument	"""BandWidth"""		514017	1					
ANR	515310	PrimaryExpression	"""BandWidth"""		514017	0					
ANR	515311	PrimaryExpression	0		514017	1					
ANR	515312	CompoundStatement		162:41:6702:6702	514017	1					
ANR	515313	ReturnStatement	"return param_write_int ( plist , ""BandWidth"" , & dev -> space_params . band . BandWidth ) ;"	234:8:9027:9104	514017	0	True				
ANR	515314	CallExpression	"param_write_int ( plist , ""BandWidth"" , & dev -> space_params . band . BandWidth )"		514017	0					
ANR	515315	Callee	param_write_int		514017	0					
ANR	515316	Identifier	param_write_int		514017	0					
ANR	515317	ArgumentList	plist		514017	1					
ANR	515318	Argument	plist		514017	0					
ANR	515319	Identifier	plist		514017	0					
ANR	515320	Argument	"""BandWidth"""		514017	1					
ANR	515321	PrimaryExpression	"""BandWidth"""		514017	0					
ANR	515322	Argument	& dev -> space_params . band . BandWidth		514017	2					
ANR	515323	UnaryOperationExpression	& dev -> space_params . band . BandWidth		514017	0					
ANR	515324	UnaryOperator	&		514017	0					
ANR	515325	MemberAccess	dev -> space_params . band . BandWidth		514017	1					
ANR	515326	MemberAccess	dev -> space_params . band		514017	0					
ANR	515327	PtrMemberAccess	dev -> space_params		514017	0					
ANR	515328	Identifier	dev		514017	0					
ANR	515329	Identifier	space_params		514017	1					
ANR	515330	Identifier	band		514017	1					
ANR	515331	Identifier	BandWidth		514017	1					
ANR	515332	IfStatement	"if ( strcmp ( Param , ""BufferSpace"" ) == 0 )"		514017	48					
ANR	515333	Condition	"strcmp ( Param , ""BufferSpace"" ) == 0"	236:8:9120:9152	514017	0	True				
ANR	515334	EqualityExpression	"strcmp ( Param , ""BufferSpace"" ) == 0"		514017	0		==			
ANR	515335	CallExpression	"strcmp ( Param , ""BufferSpace"" )"		514017	0					
ANR	515336	Callee	strcmp		514017	0					
ANR	515337	Identifier	strcmp		514017	0					
ANR	515338	ArgumentList	Param		514017	1					
ANR	515339	Argument	Param		514017	0					
ANR	515340	Identifier	Param		514017	0					
ANR	515341	Argument	"""BufferSpace"""		514017	1					
ANR	515342	PrimaryExpression	"""BufferSpace"""		514017	0					
ANR	515343	PrimaryExpression	0		514017	1					
ANR	515344	CompoundStatement		165:43:6840:6840	514017	1					
ANR	515345	ReturnStatement	"return param_write_long ( plist , ""BufferSpace"" , & dev -> space_params . BufferSpace ) ;"	237:8:9165:9242	514017	0	True				
ANR	515346	CallExpression	"param_write_long ( plist , ""BufferSpace"" , & dev -> space_params . BufferSpace )"		514017	0					
ANR	515347	Callee	param_write_long		514017	0					
ANR	515348	Identifier	param_write_long		514017	0					
ANR	515349	ArgumentList	plist		514017	1					
ANR	515350	Argument	plist		514017	0					
ANR	515351	Identifier	plist		514017	0					
ANR	515352	Argument	"""BufferSpace"""		514017	1					
ANR	515353	PrimaryExpression	"""BufferSpace"""		514017	0					
ANR	515354	Argument	& dev -> space_params . BufferSpace		514017	2					
ANR	515355	UnaryOperationExpression	& dev -> space_params . BufferSpace		514017	0					
ANR	515356	UnaryOperator	&		514017	0					
ANR	515357	MemberAccess	dev -> space_params . BufferSpace		514017	1					
ANR	515358	PtrMemberAccess	dev -> space_params		514017	0					
ANR	515359	Identifier	dev		514017	0					
ANR	515360	Identifier	space_params		514017	1					
ANR	515361	Identifier	BufferSpace		514017	1					
ANR	515362	IfStatement	"if ( strcmp ( Param , ""InterpolateControl"" ) == 0 )"		514017	49					
ANR	515363	Condition	"strcmp ( Param , ""InterpolateControl"" ) == 0"	239:8:9258:9297	514017	0	True				
ANR	515364	EqualityExpression	"strcmp ( Param , ""InterpolateControl"" ) == 0"		514017	0		==			
ANR	515365	CallExpression	"strcmp ( Param , ""InterpolateControl"" )"		514017	0					
ANR	515366	Callee	strcmp		514017	0					
ANR	515367	Identifier	strcmp		514017	0					
ANR	515368	ArgumentList	Param		514017	1					
ANR	515369	Argument	Param		514017	0					
ANR	515370	Identifier	Param		514017	0					
ANR	515371	Argument	"""InterpolateControl"""		514017	1					
ANR	515372	PrimaryExpression	"""InterpolateControl"""		514017	0					
ANR	515373	PrimaryExpression	0		514017	1					
ANR	515374	CompoundStatement		169:8:6995:7045	514017	1					
ANR	515375	IdentifierDeclStatement	int interpolate_control = dev -> interpolate_control ;	240:8:9310:9360	514017	0	True				
ANR	515376	IdentifierDecl	interpolate_control = dev -> interpolate_control		514017	0					
ANR	515377	IdentifierDeclType	int		514017	0					
ANR	515378	Identifier	interpolate_control		514017	1					
ANR	515379	AssignmentExpression	interpolate_control = dev -> interpolate_control		514017	2		=			
ANR	515380	Identifier	interpolate_control		514017	0					
ANR	515381	PtrMemberAccess	dev -> interpolate_control		514017	1					
ANR	515382	Identifier	dev		514017	0					
ANR	515383	Identifier	interpolate_control		514017	1					
ANR	515384	ReturnStatement	"return param_write_int ( plist , ""InterpolateControl"" , & interpolate_control ) ;"	241:8:9370:9443	514017	1	True				
ANR	515385	CallExpression	"param_write_int ( plist , ""InterpolateControl"" , & interpolate_control )"		514017	0					
ANR	515386	Callee	param_write_int		514017	0					
ANR	515387	Identifier	param_write_int		514017	0					
ANR	515388	ArgumentList	plist		514017	1					
ANR	515389	Argument	plist		514017	0					
ANR	515390	Identifier	plist		514017	0					
ANR	515391	Argument	"""InterpolateControl"""		514017	1					
ANR	515392	PrimaryExpression	"""InterpolateControl"""		514017	0					
ANR	515393	Argument	& interpolate_control		514017	2					
ANR	515394	UnaryOperationExpression	& interpolate_control		514017	0					
ANR	515395	UnaryOperator	&		514017	0					
ANR	515396	Identifier	interpolate_control		514017	1					
ANR	515397	IfStatement	"if ( strcmp ( Param , ""LeadingEdge"" ) == 0 )"		514017	50					
ANR	515398	Condition	"strcmp ( Param , ""LeadingEdge"" ) == 0"	243:8:9459:9491	514017	0	True				
ANR	515399	EqualityExpression	"strcmp ( Param , ""LeadingEdge"" ) == 0"		514017	0		==			
ANR	515400	CallExpression	"strcmp ( Param , ""LeadingEdge"" )"		514017	0					
ANR	515401	Callee	strcmp		514017	0					
ANR	515402	Identifier	strcmp		514017	0					
ANR	515403	ArgumentList	Param		514017	1					
ANR	515404	Argument	Param		514017	0					
ANR	515405	Identifier	Param		514017	0					
ANR	515406	Argument	"""LeadingEdge"""		514017	1					
ANR	515407	PrimaryExpression	"""LeadingEdge"""		514017	0					
ANR	515408	PrimaryExpression	0		514017	1					
ANR	515409	CompoundStatement		172:43:7179:7179	514017	1					
ANR	515410	IfStatement	if ( dev -> LeadingEdge & LEADINGEDGE_SET_MASK )		514017	0					
ANR	515411	Condition	dev -> LeadingEdge & LEADINGEDGE_SET_MASK	244:12:9508:9546	514017	0	True				
ANR	515412	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_SET_MASK		514017	0		&			
ANR	515413	PtrMemberAccess	dev -> LeadingEdge		514017	0					
ANR	515414	Identifier	dev		514017	0					
ANR	515415	Identifier	LeadingEdge		514017	1					
ANR	515416	Identifier	LEADINGEDGE_SET_MASK		514017	1					
ANR	515417	CompoundStatement		174:12:7248:7301	514017	1					
ANR	515418	IdentifierDeclStatement	int leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK ;	245:12:9563:9616	514017	0	True				
ANR	515419	IdentifierDecl	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		514017	0					
ANR	515420	IdentifierDeclType	int		514017	0					
ANR	515421	Identifier	leadingedge		514017	1					
ANR	515422	AssignmentExpression	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		514017	2		=			
ANR	515423	Identifier	leadingedge		514017	0					
ANR	515424	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_MASK		514017	1		&			
ANR	515425	PtrMemberAccess	dev -> LeadingEdge		514017	0					
ANR	515426	Identifier	dev		514017	0					
ANR	515427	Identifier	LeadingEdge		514017	1					
ANR	515428	Identifier	LEADINGEDGE_MASK		514017	1					
ANR	515429	ReturnStatement	"return param_write_int ( plist , ""LeadingEdge"" , & leadingedge ) ;"	246:12:9630:9688	514017	1	True				
ANR	515430	CallExpression	"param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"		514017	0					
ANR	515431	Callee	param_write_int		514017	0					
ANR	515432	Identifier	param_write_int		514017	0					
ANR	515433	ArgumentList	plist		514017	1					
ANR	515434	Argument	plist		514017	0					
ANR	515435	Identifier	plist		514017	0					
ANR	515436	Argument	"""LeadingEdge"""		514017	1					
ANR	515437	PrimaryExpression	"""LeadingEdge"""		514017	0					
ANR	515438	Argument	& leadingedge		514017	2					
ANR	515439	UnaryOperationExpression	& leadingedge		514017	0					
ANR	515440	UnaryOperator	&		514017	0					
ANR	515441	Identifier	leadingedge		514017	1					
ANR	515442	ElseStatement	else		514017	0					
ANR	515443	ReturnStatement	"return param_write_null ( plist , ""LeadingEdge"" ) ;"	248:12:9717:9762	514017	0	True				
ANR	515444	CallExpression	"param_write_null ( plist , ""LeadingEdge"" )"		514017	0					
ANR	515445	Callee	param_write_null		514017	0					
ANR	515446	Identifier	param_write_null		514017	0					
ANR	515447	ArgumentList	plist		514017	1					
ANR	515448	Argument	plist		514017	0					
ANR	515449	Identifier	plist		514017	0					
ANR	515450	Argument	"""LeadingEdge"""		514017	1					
ANR	515451	PrimaryExpression	"""LeadingEdge"""		514017	0					
ANR	515452	IfStatement	if ( dev -> color_info . num_components > 1 )		514017	51					
ANR	515453	Condition	dev -> color_info . num_components > 1	251:8:9779:9812	514017	0	True				
ANR	515454	RelationalExpression	dev -> color_info . num_components > 1		514017	0		>			
ANR	515455	MemberAccess	dev -> color_info . num_components		514017	0					
ANR	515456	PtrMemberAccess	dev -> color_info		514017	0					
ANR	515457	Identifier	dev		514017	0					
ANR	515458	Identifier	color_info		514017	1					
ANR	515459	Identifier	num_components		514017	1					
ANR	515460	PrimaryExpression	1		514017	1					
ANR	515461	CompoundStatement		182:8:7565:7616	514017	1					
ANR	515462	IdentifierDeclStatement	int RGBValues = dev -> color_info . max_color + 1 ;	252:8:9825:9870	514017	0	True				
ANR	515463	IdentifierDecl	RGBValues = dev -> color_info . max_color + 1		514017	0					
ANR	515464	IdentifierDeclType	int		514017	0					
ANR	515465	Identifier	RGBValues		514017	1					
ANR	515466	AssignmentExpression	RGBValues = dev -> color_info . max_color + 1		514017	2		=			
ANR	515467	Identifier	RGBValues		514017	0					
ANR	515468	AdditiveExpression	dev -> color_info . max_color + 1		514017	1		+			
ANR	515469	MemberAccess	dev -> color_info . max_color		514017	0					
ANR	515470	PtrMemberAccess	dev -> color_info		514017	0					
ANR	515471	Identifier	dev		514017	0					
ANR	515472	Identifier	color_info		514017	1					
ANR	515473	Identifier	max_color		514017	1					
ANR	515474	PrimaryExpression	1		514017	1					
ANR	515475	IdentifierDeclStatement	long ColorValues = ( depth >= 32 ? - 1 : 1L << depth ) ;	253:8:9880:9931	514017	1	True				
ANR	515476	IdentifierDecl	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		514017	0					
ANR	515477	IdentifierDeclType	long		514017	0					
ANR	515478	Identifier	ColorValues		514017	1					
ANR	515479	AssignmentExpression	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		514017	2		=			
ANR	515480	Identifier	ColorValues		514017	0					
ANR	515481	ConditionalExpression	depth >= 32 ? - 1 : 1L << depth		514017	1					
ANR	515482	Condition	depth >= 32		514017	0					
ANR	515483	RelationalExpression	depth >= 32		514017	0		>=			
ANR	515484	Identifier	depth		514017	0					
ANR	515485	PrimaryExpression	32		514017	1					
ANR	515486	UnaryOperationExpression	- 1		514017	1					
ANR	515487	UnaryOperator	-		514017	0					
ANR	515488	PrimaryExpression	1		514017	1					
ANR	515489	ShiftExpression	1L << depth		514017	2		<<			
ANR	515490	PrimaryExpression	1L		514017	0					
ANR	515491	Identifier	depth		514017	1					
ANR	515492	IfStatement	"if ( strcmp ( Param , ""RedValues"" ) == 0 )"		514017	2					
ANR	515493	Condition	"strcmp ( Param , ""RedValues"" ) == 0"	255:12:9978:10008	514017	0	True				
ANR	515494	EqualityExpression	"strcmp ( Param , ""RedValues"" ) == 0"		514017	0		==			
ANR	515495	CallExpression	"strcmp ( Param , ""RedValues"" )"		514017	0					
ANR	515496	Callee	strcmp		514017	0					
ANR	515497	Identifier	strcmp		514017	0					
ANR	515498	ArgumentList	Param		514017	1					
ANR	515499	Argument	Param		514017	0					
ANR	515500	Identifier	Param		514017	0					
ANR	515501	Argument	"""RedValues"""		514017	1					
ANR	515502	PrimaryExpression	"""RedValues"""		514017	0					
ANR	515503	PrimaryExpression	0		514017	1					
ANR	515504	CompoundStatement		184:45:7696:7696	514017	1					
ANR	515505	ReturnStatement	"return param_write_int ( plist , ""RedValues"" , & RGBValues ) ;"	256:12:10025:10079	514017	0	True				
ANR	515506	CallExpression	"param_write_int ( plist , ""RedValues"" , & RGBValues )"		514017	0					
ANR	515507	Callee	param_write_int		514017	0					
ANR	515508	Identifier	param_write_int		514017	0					
ANR	515509	ArgumentList	plist		514017	1					
ANR	515510	Argument	plist		514017	0					
ANR	515511	Identifier	plist		514017	0					
ANR	515512	Argument	"""RedValues"""		514017	1					
ANR	515513	PrimaryExpression	"""RedValues"""		514017	0					
ANR	515514	Argument	& RGBValues		514017	2					
ANR	515515	UnaryOperationExpression	& RGBValues		514017	0					
ANR	515516	UnaryOperator	&		514017	0					
ANR	515517	Identifier	RGBValues		514017	1					
ANR	515518	IfStatement	"if ( strcmp ( Param , ""GreenValues"" ) == 0 )"		514017	3					
ANR	515519	Condition	"strcmp ( Param , ""GreenValues"" ) == 0"	258:12:10103:10135	514017	0	True				
ANR	515520	EqualityExpression	"strcmp ( Param , ""GreenValues"" ) == 0"		514017	0		==			
ANR	515521	CallExpression	"strcmp ( Param , ""GreenValues"" )"		514017	0					
ANR	515522	Callee	strcmp		514017	0					
ANR	515523	Identifier	strcmp		514017	0					
ANR	515524	ArgumentList	Param		514017	1					
ANR	515525	Argument	Param		514017	0					
ANR	515526	Identifier	Param		514017	0					
ANR	515527	Argument	"""GreenValues"""		514017	1					
ANR	515528	PrimaryExpression	"""GreenValues"""		514017	0					
ANR	515529	PrimaryExpression	0		514017	1					
ANR	515530	CompoundStatement		187:47:7823:7823	514017	1					
ANR	515531	ReturnStatement	"return param_write_int ( plist , ""GreenValues"" , & RGBValues ) ;"	259:12:10152:10208	514017	0	True				
ANR	515532	CallExpression	"param_write_int ( plist , ""GreenValues"" , & RGBValues )"		514017	0					
ANR	515533	Callee	param_write_int		514017	0					
ANR	515534	Identifier	param_write_int		514017	0					
ANR	515535	ArgumentList	plist		514017	1					
ANR	515536	Argument	plist		514017	0					
ANR	515537	Identifier	plist		514017	0					
ANR	515538	Argument	"""GreenValues"""		514017	1					
ANR	515539	PrimaryExpression	"""GreenValues"""		514017	0					
ANR	515540	Argument	& RGBValues		514017	2					
ANR	515541	UnaryOperationExpression	& RGBValues		514017	0					
ANR	515542	UnaryOperator	&		514017	0					
ANR	515543	Identifier	RGBValues		514017	1					
ANR	515544	IfStatement	"if ( strcmp ( Param , ""BlueValues"" ) == 0 )"		514017	4					
ANR	515545	Condition	"strcmp ( Param , ""BlueValues"" ) == 0"	261:12:10232:10263	514017	0	True				
ANR	515546	EqualityExpression	"strcmp ( Param , ""BlueValues"" ) == 0"		514017	0		==			
ANR	515547	CallExpression	"strcmp ( Param , ""BlueValues"" )"		514017	0					
ANR	515548	Callee	strcmp		514017	0					
ANR	515549	Identifier	strcmp		514017	0					
ANR	515550	ArgumentList	Param		514017	1					
ANR	515551	Argument	Param		514017	0					
ANR	515552	Identifier	Param		514017	0					
ANR	515553	Argument	"""BlueValues"""		514017	1					
ANR	515554	PrimaryExpression	"""BlueValues"""		514017	0					
ANR	515555	PrimaryExpression	0		514017	1					
ANR	515556	CompoundStatement		190:46:7951:7951	514017	1					
ANR	515557	ReturnStatement	"return param_write_int ( plist , ""BlueValues"" , & RGBValues ) ;"	262:12:10280:10335	514017	0	True				
ANR	515558	CallExpression	"param_write_int ( plist , ""BlueValues"" , & RGBValues )"		514017	0					
ANR	515559	Callee	param_write_int		514017	0					
ANR	515560	Identifier	param_write_int		514017	0					
ANR	515561	ArgumentList	plist		514017	1					
ANR	515562	Argument	plist		514017	0					
ANR	515563	Identifier	plist		514017	0					
ANR	515564	Argument	"""BlueValues"""		514017	1					
ANR	515565	PrimaryExpression	"""BlueValues"""		514017	0					
ANR	515566	Argument	& RGBValues		514017	2					
ANR	515567	UnaryOperationExpression	& RGBValues		514017	0					
ANR	515568	UnaryOperator	&		514017	0					
ANR	515569	Identifier	RGBValues		514017	1					
ANR	515570	IfStatement	"if ( strcmp ( Param , ""ColorValues"" ) == 0 )"		514017	5					
ANR	515571	Condition	"strcmp ( Param , ""ColorValues"" ) == 0"	264:12:10359:10391	514017	0	True				
ANR	515572	EqualityExpression	"strcmp ( Param , ""ColorValues"" ) == 0"		514017	0		==			
ANR	515573	CallExpression	"strcmp ( Param , ""ColorValues"" )"		514017	0					
ANR	515574	Callee	strcmp		514017	0					
ANR	515575	Identifier	strcmp		514017	0					
ANR	515576	ArgumentList	Param		514017	1					
ANR	515577	Argument	Param		514017	0					
ANR	515578	Identifier	Param		514017	0					
ANR	515579	Argument	"""ColorValues"""		514017	1					
ANR	515580	PrimaryExpression	"""ColorValues"""		514017	0					
ANR	515581	PrimaryExpression	0		514017	1					
ANR	515582	CompoundStatement		193:47:8079:8079	514017	1					
ANR	515583	ReturnStatement	"return param_write_long ( plist , ""ColorValues"" , & ColorValues ) ;"	265:12:10408:10467	514017	0	True				
ANR	515584	CallExpression	"param_write_long ( plist , ""ColorValues"" , & ColorValues )"		514017	0					
ANR	515585	Callee	param_write_long		514017	0					
ANR	515586	Identifier	param_write_long		514017	0					
ANR	515587	ArgumentList	plist		514017	1					
ANR	515588	Argument	plist		514017	0					
ANR	515589	Identifier	plist		514017	0					
ANR	515590	Argument	"""ColorValues"""		514017	1					
ANR	515591	PrimaryExpression	"""ColorValues"""		514017	0					
ANR	515592	Argument	& ColorValues		514017	2					
ANR	515593	UnaryOperationExpression	& ColorValues		514017	0					
ANR	515594	UnaryOperator	&		514017	0					
ANR	515595	Identifier	ColorValues		514017	1					
ANR	515596	IfStatement	"if ( strcmp ( Param , ""HWColorMap"" ) == 0 )"		514017	52					
ANR	515597	Condition	"strcmp ( Param , ""HWColorMap"" ) == 0"	268:8:10493:10524	514017	0	True				
ANR	515598	EqualityExpression	"strcmp ( Param , ""HWColorMap"" ) == 0"		514017	0		==			
ANR	515599	CallExpression	"strcmp ( Param , ""HWColorMap"" )"		514017	0					
ANR	515600	Callee	strcmp		514017	0					
ANR	515601	Identifier	strcmp		514017	0					
ANR	515602	ArgumentList	Param		514017	1					
ANR	515603	Argument	Param		514017	0					
ANR	515604	Identifier	Param		514017	0					
ANR	515605	Argument	"""HWColorMap"""		514017	1					
ANR	515606	PrimaryExpression	"""HWColorMap"""		514017	0					
ANR	515607	PrimaryExpression	0		514017	1					
ANR	515608	CompoundStatement		198:8:8222:8242	514017	1					
ANR	515609	IdentifierDeclStatement	byte palette [ 3 << 8 ] ;	269:8:10537:10557	514017	0	True				
ANR	515610	IdentifierDecl	palette [ 3 << 8 ]		514017	0					
ANR	515611	IdentifierDeclType	byte [ 3 << 8 ]		514017	0					
ANR	515612	Identifier	palette		514017	1					
ANR	515613	ShiftExpression	3 << 8		514017	2		<<			
ANR	515614	PrimaryExpression	3		514017	0					
ANR	515615	PrimaryExpression	8		514017	1					
ANR	515616	IfStatement	"if ( param_HWColorMap ( dev , palette ) )"		514017	1					
ANR	515617	Condition	"param_HWColorMap ( dev , palette )"	271:12:10572:10601	514017	0	True				
ANR	515618	CallExpression	"param_HWColorMap ( dev , palette )"		514017	0					
ANR	515619	Callee	param_HWColorMap		514017	0					
ANR	515620	Identifier	param_HWColorMap		514017	0					
ANR	515621	ArgumentList	dev		514017	1					
ANR	515622	Argument	dev		514017	0					
ANR	515623	Identifier	dev		514017	0					
ANR	515624	Argument	palette		514017	1					
ANR	515625	Identifier	palette		514017	0					
ANR	515626	CompoundStatement		201:12:8303:8324	514017	1					
ANR	515627	IdentifierDeclStatement	gs_param_string hwcms ;	272:12:10618:10639	514017	0	True				
ANR	515628	IdentifierDecl	hwcms		514017	0					
ANR	515629	IdentifierDeclType	gs_param_string		514017	0					
ANR	515630	Identifier	hwcms		514017	1					
ANR	515631	ExpressionStatement	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"	274:12:10654:10746	514017	1	True				
ANR	515632	Expression	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"		514017	0					
ANR	515633	AssignmentExpression	hwcms . data = palette		514017	0		=			
ANR	515634	MemberAccess	hwcms . data		514017	0					
ANR	515635	Identifier	hwcms		514017	0					
ANR	515636	Identifier	data		514017	1					
ANR	515637	Identifier	palette		514017	1					
ANR	515638	Expression	"hwcms . size = colors << depth , hwcms . persistent = false"		514017	1					
ANR	515639	AssignmentExpression	hwcms . size = colors << depth		514017	0		=			
ANR	515640	MemberAccess	hwcms . size		514017	0					
ANR	515641	Identifier	hwcms		514017	0					
ANR	515642	Identifier	size		514017	1					
ANR	515643	ShiftExpression	colors << depth		514017	1		<<			
ANR	515644	Identifier	colors		514017	0					
ANR	515645	Identifier	depth		514017	1					
ANR	515646	AssignmentExpression	hwcms . persistent = false		514017	1		=			
ANR	515647	MemberAccess	hwcms . persistent		514017	0					
ANR	515648	Identifier	hwcms		514017	0					
ANR	515649	Identifier	persistent		514017	1					
ANR	515650	Identifier	false		514017	1					
ANR	515651	ReturnStatement	"return param_write_string ( plist , ""HWColorMap"" , & hwcms ) ;"	276:12:10760:10814	514017	2	True				
ANR	515652	CallExpression	"param_write_string ( plist , ""HWColorMap"" , & hwcms )"		514017	0					
ANR	515653	Callee	param_write_string		514017	0					
ANR	515654	Identifier	param_write_string		514017	0					
ANR	515655	ArgumentList	plist		514017	1					
ANR	515656	Argument	plist		514017	0					
ANR	515657	Identifier	plist		514017	0					
ANR	515658	Argument	"""HWColorMap"""		514017	1					
ANR	515659	PrimaryExpression	"""HWColorMap"""		514017	0					
ANR	515660	Argument	& hwcms		514017	2					
ANR	515661	UnaryOperationExpression	& hwcms		514017	0					
ANR	515662	UnaryOperator	&		514017	0					
ANR	515663	Identifier	hwcms		514017	1					
ANR	515664	IfStatement	"if ( dev_proc ( dev , get_profile ) != NULL )"		514017	53					
ANR	515665	Condition	"dev_proc ( dev , get_profile ) != NULL"	288:8:11334:11367	514017	0	True				
ANR	515666	EqualityExpression	"dev_proc ( dev , get_profile ) != NULL"		514017	0		!=			
ANR	515667	CallExpression	"dev_proc ( dev , get_profile )"		514017	0					
ANR	515668	Callee	dev_proc		514017	0					
ANR	515669	Identifier	dev_proc		514017	0					
ANR	515670	ArgumentList	dev		514017	1					
ANR	515671	Argument	dev		514017	0					
ANR	515672	Identifier	dev		514017	0					
ANR	515673	Argument	get_profile		514017	1					
ANR	515674	Identifier	get_profile		514017	0					
ANR	515675	Identifier	NULL		514017	1					
ANR	515676	CompoundStatement		218:8:9065:9073	514017	1					
ANR	515677	IdentifierDeclStatement	int code ;	289:8:11380:11388	514017	0	True				
ANR	515678	IdentifierDecl	code		514017	0					
ANR	515679	IdentifierDeclType	int		514017	0					
ANR	515680	Identifier	code		514017	1					
ANR	515681	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	290:8:11398:11451	514017	1	True				
ANR	515682	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		514017	0		=			
ANR	515683	Identifier	code		514017	0					
ANR	515684	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		514017	1					
ANR	515685	Callee	"dev_proc ( dev , get_profile )"		514017	0					
ANR	515686	CallExpression	"dev_proc ( dev , get_profile )"		514017	0					
ANR	515687	Callee	dev_proc		514017	0					
ANR	515688	Identifier	dev_proc		514017	0					
ANR	515689	ArgumentList	dev		514017	1					
ANR	515690	Argument	dev		514017	0					
ANR	515691	Identifier	dev		514017	0					
ANR	515692	Argument	get_profile		514017	1					
ANR	515693	Identifier	get_profile		514017	0					
ANR	515694	ArgumentList	dev		514017	1					
ANR	515695	Argument	dev		514017	0					
ANR	515696	Identifier	dev		514017	0					
ANR	515697	Argument	& dev_profile		514017	1					
ANR	515698	UnaryOperationExpression	& dev_profile		514017	0					
ANR	515699	UnaryOperator	&		514017	0					
ANR	515700	Identifier	dev_profile		514017	1					
ANR	515701	IfStatement	if ( code < 0 )		514017	2					
ANR	515702	Condition	code < 0	291:12:11465:11472	514017	0	True				
ANR	515703	RelationalExpression	code < 0		514017	0		<			
ANR	515704	Identifier	code		514017	0					
ANR	515705	PrimaryExpression	0		514017	1					
ANR	515706	ReturnStatement	return code ;	292:12:11487:11498	514017	1	True				
ANR	515707	Identifier	code		514017	0					
ANR	515708	IfStatement	if ( dev_profile == NULL )		514017	3					
ANR	515709	Condition	dev_profile == NULL	293:12:11512:11530	514017	0	True				
ANR	515710	EqualityExpression	dev_profile == NULL		514017	0		==			
ANR	515711	Identifier	dev_profile		514017	0					
ANR	515712	Identifier	NULL		514017	1					
ANR	515713	CompoundStatement		222:33:9218:9218	514017	1					
ANR	515714	ExpressionStatement	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"	294:12:11547:11600	514017	0	True				
ANR	515715	AssignmentExpression	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"		514017	0		=			
ANR	515716	Identifier	code		514017	0					
ANR	515717	CallExpression	"gsicc_init_device_profile_struct ( dev , NULL , 0 )"		514017	1					
ANR	515718	Callee	gsicc_init_device_profile_struct		514017	0					
ANR	515719	Identifier	gsicc_init_device_profile_struct		514017	0					
ANR	515720	ArgumentList	dev		514017	1					
ANR	515721	Argument	dev		514017	0					
ANR	515722	Identifier	dev		514017	0					
ANR	515723	Argument	NULL		514017	1					
ANR	515724	Identifier	NULL		514017	0					
ANR	515725	Argument	0		514017	2					
ANR	515726	PrimaryExpression	0		514017	0					
ANR	515727	IfStatement	if ( code < 0 )		514017	1					
ANR	515728	Condition	code < 0	295:16:11618:11625	514017	0	True				
ANR	515729	RelationalExpression	code < 0		514017	0		<			
ANR	515730	Identifier	code		514017	0					
ANR	515731	PrimaryExpression	0		514017	1					
ANR	515732	ReturnStatement	return code ;	296:16:11644:11655	514017	1	True				
ANR	515733	Identifier	code		514017	0					
ANR	515734	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	297:12:11669:11722	514017	2	True				
ANR	515735	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		514017	0		=			
ANR	515736	Identifier	code		514017	0					
ANR	515737	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		514017	1					
ANR	515738	Callee	"dev_proc ( dev , get_profile )"		514017	0					
ANR	515739	CallExpression	"dev_proc ( dev , get_profile )"		514017	0					
ANR	515740	Callee	dev_proc		514017	0					
ANR	515741	Identifier	dev_proc		514017	0					
ANR	515742	ArgumentList	dev		514017	1					
ANR	515743	Argument	dev		514017	0					
ANR	515744	Identifier	dev		514017	0					
ANR	515745	Argument	get_profile		514017	1					
ANR	515746	Identifier	get_profile		514017	0					
ANR	515747	ArgumentList	dev		514017	1					
ANR	515748	Argument	dev		514017	0					
ANR	515749	Identifier	dev		514017	0					
ANR	515750	Argument	& dev_profile		514017	1					
ANR	515751	UnaryOperationExpression	& dev_profile		514017	0					
ANR	515752	UnaryOperator	&		514017	0					
ANR	515753	Identifier	dev_profile		514017	1					
ANR	515754	IfStatement	if ( code < 0 )		514017	3					
ANR	515755	Condition	code < 0	298:16:11740:11747	514017	0	True				
ANR	515756	RelationalExpression	code < 0		514017	0		<			
ANR	515757	Identifier	code		514017	0					
ANR	515758	PrimaryExpression	0		514017	1					
ANR	515759	ReturnStatement	return code ;	299:16:11766:11777	514017	1	True				
ANR	515760	Identifier	code		514017	0					
ANR	515761	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		514017	4					
ANR	515762	ForInit	k = 0 ;	301:13:11802:11807	514017	0	True				
ANR	515763	AssignmentExpression	k = 0		514017	0		=			
ANR	515764	Identifier	k		514017	0					
ANR	515765	PrimaryExpression	0		514017	1					
ANR	515766	Condition	k < NUM_DEVICE_PROFILES	301:20:11809:11831	514017	1	True				
ANR	515767	RelationalExpression	k < NUM_DEVICE_PROFILES		514017	0		<			
ANR	515768	Identifier	k		514017	0					
ANR	515769	Identifier	NUM_DEVICE_PROFILES		514017	1					
ANR	515770	PostIncDecOperationExpression	k ++	301:45:11834:11836	514017	2	True				
ANR	515771	Identifier	k		514017	0					
ANR	515772	IncDec	++		514017	1					
ANR	515773	CompoundStatement		230:50:9524:9524	514017	3					
ANR	515774	IfStatement	if ( dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL )		514017	0					
ANR	515775	Condition	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL	302:16:11857:11958	514017	0	True				
ANR	515776	OrExpression	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL		514017	0		||			
ANR	515777	EqualityExpression	dev_profile -> device_profile [ k ] == NULL		514017	0		==			
ANR	515778	ArrayIndexing	dev_profile -> device_profile [ k ]		514017	0					
ANR	515779	PtrMemberAccess	dev_profile -> device_profile		514017	0					
ANR	515780	Identifier	dev_profile		514017	0					
ANR	515781	Identifier	device_profile		514017	1					
ANR	515782	Identifier	k		514017	1					
ANR	515783	Identifier	NULL		514017	1					
ANR	515784	EqualityExpression	dev_profile -> device_profile [ k ] -> name == NULL		514017	1		==			
ANR	515785	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		514017	0					
ANR	515786	ArrayIndexing	dev_profile -> device_profile [ k ]		514017	0					
ANR	515787	PtrMemberAccess	dev_profile -> device_profile		514017	0					
ANR	515788	Identifier	dev_profile		514017	0					
ANR	515789	Identifier	device_profile		514017	1					
ANR	515790	Identifier	k		514017	1					
ANR	515791	Identifier	name		514017	1					
ANR	515792	Identifier	NULL		514017	1					
ANR	515793	CompoundStatement		232:65:9646:9646	514017	1					
ANR	515794	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	304:16:11979:12031	514017	0	True				
ANR	515795	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		514017	0					
ANR	515796	Callee	param_string_from_string		514017	0					
ANR	515797	Identifier	param_string_from_string		514017	0					
ANR	515798	ArgumentList	profile_array [ k ]		514017	1					
ANR	515799	Argument	profile_array [ k ]		514017	0					
ANR	515800	ArrayIndexing	profile_array [ k ]		514017	0					
ANR	515801	Identifier	profile_array		514017	0					
ANR	515802	Identifier	k		514017	1					
ANR	515803	Argument	null_str		514017	1					
ANR	515804	Identifier	null_str		514017	0					
ANR	515805	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	305:16:12049:12086	514017	1	True				
ANR	515806	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		514017	0		=			
ANR	515807	ArrayIndexing	profile_intents [ k ]		514017	0					
ANR	515808	Identifier	profile_intents		514017	0					
ANR	515809	Identifier	k		514017	1					
ANR	515810	Identifier	gsRINOTSPECIFIED		514017	1					
ANR	515811	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	306:16:12104:12138	514017	2	True				
ANR	515812	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		514017	0		=			
ANR	515813	ArrayIndexing	blackptcomps [ k ]		514017	0					
ANR	515814	Identifier	blackptcomps		514017	0					
ANR	515815	Identifier	k		514017	1					
ANR	515816	Identifier	gsBPNOTSPECIFIED		514017	1					
ANR	515817	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	307:16:12156:12195	514017	3	True				
ANR	515818	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		514017	0		=			
ANR	515819	ArrayIndexing	blackpreserve [ k ]		514017	0					
ANR	515820	Identifier	blackpreserve		514017	0					
ANR	515821	Identifier	k		514017	1					
ANR	515822	Identifier	gsBKPRESNOTSPECIFIED		514017	1					
ANR	515823	ElseStatement	else		514017	0					
ANR	515824	CompoundStatement		237:19:9901:9901	514017	0					
ANR	515825	ExpressionStatement	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"	309:16:12234:12344	514017	0	True				
ANR	515826	CallExpression	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"		514017	0					
ANR	515827	Callee	param_string_from_transient_string		514017	0					
ANR	515828	Identifier	param_string_from_transient_string		514017	0					
ANR	515829	ArgumentList	profile_array [ k ]		514017	1					
ANR	515830	Argument	profile_array [ k ]		514017	0					
ANR	515831	ArrayIndexing	profile_array [ k ]		514017	0					
ANR	515832	Identifier	profile_array		514017	0					
ANR	515833	Identifier	k		514017	1					
ANR	515834	Argument	dev_profile -> device_profile [ k ] -> name		514017	1					
ANR	515835	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		514017	0					
ANR	515836	ArrayIndexing	dev_profile -> device_profile [ k ]		514017	0					
ANR	515837	PtrMemberAccess	dev_profile -> device_profile		514017	0					
ANR	515838	Identifier	dev_profile		514017	0					
ANR	515839	Identifier	device_profile		514017	1					
ANR	515840	Identifier	k		514017	1					
ANR	515841	Identifier	name		514017	1					
ANR	515842	ExpressionStatement	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent	311:16:12362:12426	514017	1	True				
ANR	515843	AssignmentExpression	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent		514017	0		=			
ANR	515844	ArrayIndexing	profile_intents [ k ]		514017	0					
ANR	515845	Identifier	profile_intents		514017	0					
ANR	515846	Identifier	k		514017	1					
ANR	515847	MemberAccess	dev_profile -> rendercond [ k ] . rendering_intent		514017	1					
ANR	515848	ArrayIndexing	dev_profile -> rendercond [ k ]		514017	0					
ANR	515849	PtrMemberAccess	dev_profile -> rendercond		514017	0					
ANR	515850	Identifier	dev_profile		514017	0					
ANR	515851	Identifier	rendercond		514017	1					
ANR	515852	Identifier	k		514017	1					
ANR	515853	Identifier	rendering_intent		514017	1					
ANR	515854	ExpressionStatement	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp	312:16:12444:12505	514017	2	True				
ANR	515855	AssignmentExpression	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp		514017	0		=			
ANR	515856	ArrayIndexing	blackptcomps [ k ]		514017	0					
ANR	515857	Identifier	blackptcomps		514017	0					
ANR	515858	Identifier	k		514017	1					
ANR	515859	MemberAccess	dev_profile -> rendercond [ k ] . black_point_comp		514017	1					
ANR	515860	ArrayIndexing	dev_profile -> rendercond [ k ]		514017	0					
ANR	515861	PtrMemberAccess	dev_profile -> rendercond		514017	0					
ANR	515862	Identifier	dev_profile		514017	0					
ANR	515863	Identifier	rendercond		514017	1					
ANR	515864	Identifier	k		514017	1					
ANR	515865	Identifier	black_point_comp		514017	1					
ANR	515866	ExpressionStatement	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black	313:16:12523:12583	514017	3	True				
ANR	515867	AssignmentExpression	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black		514017	0		=			
ANR	515868	ArrayIndexing	blackpreserve [ k ]		514017	0					
ANR	515869	Identifier	blackpreserve		514017	0					
ANR	515870	Identifier	k		514017	1					
ANR	515871	MemberAccess	dev_profile -> rendercond [ k ] . preserve_black		514017	1					
ANR	515872	ArrayIndexing	dev_profile -> rendercond [ k ]		514017	0					
ANR	515873	PtrMemberAccess	dev_profile -> rendercond		514017	0					
ANR	515874	Identifier	dev_profile		514017	0					
ANR	515875	Identifier	rendercond		514017	1					
ANR	515876	Identifier	k		514017	1					
ANR	515877	Identifier	preserve_black		514017	1					
ANR	515878	IfStatement	if ( dev_profile -> blend_profile == NULL )		514017	5					
ANR	515879	Condition	dev_profile -> blend_profile == NULL	316:12:12621:12654	514017	0	True				
ANR	515880	EqualityExpression	dev_profile -> blend_profile == NULL		514017	0		==			
ANR	515881	PtrMemberAccess	dev_profile -> blend_profile		514017	0					
ANR	515882	Identifier	dev_profile		514017	0					
ANR	515883	Identifier	blend_profile		514017	1					
ANR	515884	Identifier	NULL		514017	1					
ANR	515885	CompoundStatement		245:48:10342:10342	514017	1					
ANR	515886	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	317:12:12671:12720	514017	0	True				
ANR	515887	CallExpression	"param_string_from_string ( blend_profile , null_str )"		514017	0					
ANR	515888	Callee	param_string_from_string		514017	0					
ANR	515889	Identifier	param_string_from_string		514017	0					
ANR	515890	ArgumentList	blend_profile		514017	1					
ANR	515891	Argument	blend_profile		514017	0					
ANR	515892	Identifier	blend_profile		514017	0					
ANR	515893	Argument	null_str		514017	1					
ANR	515894	Identifier	null_str		514017	0					
ANR	515895	ElseStatement	else		514017	0					
ANR	515896	CompoundStatement		247:15:10422:10422	514017	0					
ANR	515897	ExpressionStatement	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"	319:12:12751:12850	514017	0	True				
ANR	515898	CallExpression	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"		514017	0					
ANR	515899	Callee	param_string_from_transient_string		514017	0					
ANR	515900	Identifier	param_string_from_transient_string		514017	0					
ANR	515901	ArgumentList	blend_profile		514017	1					
ANR	515902	Argument	blend_profile		514017	0					
ANR	515903	Identifier	blend_profile		514017	0					
ANR	515904	Argument	dev_profile -> blend_profile -> name		514017	1					
ANR	515905	PtrMemberAccess	dev_profile -> blend_profile -> name		514017	0					
ANR	515906	PtrMemberAccess	dev_profile -> blend_profile		514017	0					
ANR	515907	Identifier	dev_profile		514017	0					
ANR	515908	Identifier	blend_profile		514017	1					
ANR	515909	Identifier	name		514017	1					
ANR	515910	IfStatement	if ( dev_profile -> postren_profile == NULL )		514017	6					
ANR	515911	Condition	dev_profile -> postren_profile == NULL	322:12:12874:12909	514017	0	True				
ANR	515912	EqualityExpression	dev_profile -> postren_profile == NULL		514017	0		==			
ANR	515913	PtrMemberAccess	dev_profile -> postren_profile		514017	0					
ANR	515914	Identifier	dev_profile		514017	0					
ANR	515915	Identifier	postren_profile		514017	1					
ANR	515916	Identifier	NULL		514017	1					
ANR	515917	CompoundStatement		251:50:10597:10597	514017	1					
ANR	515918	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	323:12:12926:12977	514017	0	True				
ANR	515919	CallExpression	"param_string_from_string ( postren_profile , null_str )"		514017	0					
ANR	515920	Callee	param_string_from_string		514017	0					
ANR	515921	Identifier	param_string_from_string		514017	0					
ANR	515922	ArgumentList	postren_profile		514017	1					
ANR	515923	Argument	postren_profile		514017	0					
ANR	515924	Identifier	postren_profile		514017	0					
ANR	515925	Argument	null_str		514017	1					
ANR	515926	Identifier	null_str		514017	0					
ANR	515927	ElseStatement	else		514017	0					
ANR	515928	CompoundStatement		253:15:10679:10679	514017	0					
ANR	515929	ExpressionStatement	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"	325:12:13008:13111	514017	0	True				
ANR	515930	CallExpression	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"		514017	0					
ANR	515931	Callee	param_string_from_transient_string		514017	0					
ANR	515932	Identifier	param_string_from_transient_string		514017	0					
ANR	515933	ArgumentList	postren_profile		514017	1					
ANR	515934	Argument	postren_profile		514017	0					
ANR	515935	Identifier	postren_profile		514017	0					
ANR	515936	Argument	dev_profile -> postren_profile -> name		514017	1					
ANR	515937	PtrMemberAccess	dev_profile -> postren_profile -> name		514017	0					
ANR	515938	PtrMemberAccess	dev_profile -> postren_profile		514017	0					
ANR	515939	Identifier	dev_profile		514017	0					
ANR	515940	Identifier	postren_profile		514017	1					
ANR	515941	Identifier	name		514017	1					
ANR	515942	IfStatement	if ( dev_profile -> proof_profile == NULL )		514017	7					
ANR	515943	Condition	dev_profile -> proof_profile == NULL	328:12:13135:13168	514017	0	True				
ANR	515944	EqualityExpression	dev_profile -> proof_profile == NULL		514017	0		==			
ANR	515945	PtrMemberAccess	dev_profile -> proof_profile		514017	0					
ANR	515946	Identifier	dev_profile		514017	0					
ANR	515947	Identifier	proof_profile		514017	1					
ANR	515948	Identifier	NULL		514017	1					
ANR	515949	CompoundStatement		257:48:10856:10856	514017	1					
ANR	515950	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	329:12:13185:13234	514017	0	True				
ANR	515951	CallExpression	"param_string_from_string ( proof_profile , null_str )"		514017	0					
ANR	515952	Callee	param_string_from_string		514017	0					
ANR	515953	Identifier	param_string_from_string		514017	0					
ANR	515954	ArgumentList	proof_profile		514017	1					
ANR	515955	Argument	proof_profile		514017	0					
ANR	515956	Identifier	proof_profile		514017	0					
ANR	515957	Argument	null_str		514017	1					
ANR	515958	Identifier	null_str		514017	0					
ANR	515959	ElseStatement	else		514017	0					
ANR	515960	CompoundStatement		259:15:10936:10936	514017	0					
ANR	515961	ExpressionStatement	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"	331:12:13265:13385	514017	0	True				
ANR	515962	CallExpression	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"		514017	0					
ANR	515963	Callee	param_string_from_transient_string		514017	0					
ANR	515964	Identifier	param_string_from_transient_string		514017	0					
ANR	515965	ArgumentList	proof_profile		514017	1					
ANR	515966	Argument	proof_profile		514017	0					
ANR	515967	Identifier	proof_profile		514017	0					
ANR	515968	Argument	dev_profile -> proof_profile -> name		514017	1					
ANR	515969	PtrMemberAccess	dev_profile -> proof_profile -> name		514017	0					
ANR	515970	PtrMemberAccess	dev_profile -> proof_profile		514017	0					
ANR	515971	Identifier	dev_profile		514017	0					
ANR	515972	Identifier	proof_profile		514017	1					
ANR	515973	Identifier	name		514017	1					
ANR	515974	IfStatement	if ( dev_profile -> link_profile == NULL )		514017	8					
ANR	515975	Condition	dev_profile -> link_profile == NULL	334:12:13409:13441	514017	0	True				
ANR	515976	EqualityExpression	dev_profile -> link_profile == NULL		514017	0		==			
ANR	515977	PtrMemberAccess	dev_profile -> link_profile		514017	0					
ANR	515978	Identifier	dev_profile		514017	0					
ANR	515979	Identifier	link_profile		514017	1					
ANR	515980	Identifier	NULL		514017	1					
ANR	515981	CompoundStatement		263:47:11129:11129	514017	1					
ANR	515982	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	335:12:13458:13506	514017	0	True				
ANR	515983	CallExpression	"param_string_from_string ( link_profile , null_str )"		514017	0					
ANR	515984	Callee	param_string_from_string		514017	0					
ANR	515985	Identifier	param_string_from_string		514017	0					
ANR	515986	ArgumentList	link_profile		514017	1					
ANR	515987	Argument	link_profile		514017	0					
ANR	515988	Identifier	link_profile		514017	0					
ANR	515989	Argument	null_str		514017	1					
ANR	515990	Identifier	null_str		514017	0					
ANR	515991	ElseStatement	else		514017	0					
ANR	515992	CompoundStatement		265:15:11208:11208	514017	0					
ANR	515993	ExpressionStatement	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"	337:12:13537:13655	514017	0	True				
ANR	515994	CallExpression	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"		514017	0					
ANR	515995	Callee	param_string_from_transient_string		514017	0					
ANR	515996	Identifier	param_string_from_transient_string		514017	0					
ANR	515997	ArgumentList	link_profile		514017	1					
ANR	515998	Argument	link_profile		514017	0					
ANR	515999	Identifier	link_profile		514017	0					
ANR	516000	Argument	dev_profile -> link_profile -> name		514017	1					
ANR	516001	PtrMemberAccess	dev_profile -> link_profile -> name		514017	0					
ANR	516002	PtrMemberAccess	dev_profile -> link_profile		514017	0					
ANR	516003	Identifier	dev_profile		514017	0					
ANR	516004	Identifier	link_profile		514017	1					
ANR	516005	Identifier	name		514017	1					
ANR	516006	ExpressionStatement	devicegraytok = dev_profile -> devicegraytok	340:8:13675:13717	514017	9	True				
ANR	516007	AssignmentExpression	devicegraytok = dev_profile -> devicegraytok		514017	0		=			
ANR	516008	Identifier	devicegraytok		514017	0					
ANR	516009	PtrMemberAccess	dev_profile -> devicegraytok		514017	1					
ANR	516010	Identifier	dev_profile		514017	0					
ANR	516011	Identifier	devicegraytok		514017	1					
ANR	516012	ExpressionStatement	graydetection = dev_profile -> graydetection	341:8:13727:13769	514017	10	True				
ANR	516013	AssignmentExpression	graydetection = dev_profile -> graydetection		514017	0		=			
ANR	516014	Identifier	graydetection		514017	0					
ANR	516015	PtrMemberAccess	dev_profile -> graydetection		514017	1					
ANR	516016	Identifier	dev_profile		514017	0					
ANR	516017	Identifier	graydetection		514017	1					
ANR	516018	ExpressionStatement	usefastcolor = dev_profile -> usefastcolor	342:8:13779:13819	514017	11	True				
ANR	516019	AssignmentExpression	usefastcolor = dev_profile -> usefastcolor		514017	0		=			
ANR	516020	Identifier	usefastcolor		514017	0					
ANR	516021	PtrMemberAccess	dev_profile -> usefastcolor		514017	1					
ANR	516022	Identifier	dev_profile		514017	0					
ANR	516023	Identifier	usefastcolor		514017	1					
ANR	516024	ExpressionStatement	sim_overprint = dev_profile -> sim_overprint	343:8:13829:13871	514017	12	True				
ANR	516025	AssignmentExpression	sim_overprint = dev_profile -> sim_overprint		514017	0		=			
ANR	516026	Identifier	sim_overprint		514017	0					
ANR	516027	PtrMemberAccess	dev_profile -> sim_overprint		514017	1					
ANR	516028	Identifier	dev_profile		514017	0					
ANR	516029	Identifier	sim_overprint		514017	1					
ANR	516030	ExpressionStatement	prebandthreshold = dev_profile -> prebandthreshold	344:8:13881:13929	514017	13	True				
ANR	516031	AssignmentExpression	prebandthreshold = dev_profile -> prebandthreshold		514017	0		=			
ANR	516032	Identifier	prebandthreshold		514017	0					
ANR	516033	PtrMemberAccess	dev_profile -> prebandthreshold		514017	1					
ANR	516034	Identifier	dev_profile		514017	0					
ANR	516035	Identifier	prebandthreshold		514017	1					
ANR	516036	IfStatement	if ( dev_profile -> spotnames == NULL )		514017	14					
ANR	516037	Condition	dev_profile -> spotnames == NULL	348:12:14121:14150	514017	0	True				
ANR	516038	EqualityExpression	dev_profile -> spotnames == NULL		514017	0		==			
ANR	516039	PtrMemberAccess	dev_profile -> spotnames		514017	0					
ANR	516040	Identifier	dev_profile		514017	0					
ANR	516041	Identifier	spotnames		514017	1					
ANR	516042	Identifier	NULL		514017	1					
ANR	516043	CompoundStatement		277:44:11838:11838	514017	1					
ANR	516044	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	349:12:14167:14216	514017	0	True				
ANR	516045	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		514017	0					
ANR	516046	Callee	param_string_from_string		514017	0					
ANR	516047	Identifier	param_string_from_string		514017	0					
ANR	516048	ArgumentList	icc_colorants		514017	1					
ANR	516049	Argument	icc_colorants		514017	0					
ANR	516050	Identifier	icc_colorants		514017	0					
ANR	516051	Argument	null_str		514017	1					
ANR	516052	Identifier	null_str		514017	0					
ANR	516053	ElseStatement	else		514017	0					
ANR	516054	CompoundStatement		280:12:11932:11952	514017	0					
ANR	516055	IdentifierDeclStatement	char * colorant_names ;	351:12:14247:14267	514017	0	True				
ANR	516056	IdentifierDecl	* colorant_names		514017	0					
ANR	516057	IdentifierDeclType	char *		514017	0					
ANR	516058	Identifier	colorant_names		514017	1					
ANR	516059	ExpressionStatement	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )	353:12:14282:14354	514017	1	True				
ANR	516060	AssignmentExpression	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )		514017	0		=			
ANR	516061	Identifier	colorant_names		514017	0					
ANR	516062	CallExpression	gsicc_get_dev_icccolorants ( dev_profile )		514017	1					
ANR	516063	Callee	gsicc_get_dev_icccolorants		514017	0					
ANR	516064	Identifier	gsicc_get_dev_icccolorants		514017	0					
ANR	516065	ArgumentList	dev_profile		514017	1					
ANR	516066	Argument	dev_profile		514017	0					
ANR	516067	Identifier	dev_profile		514017	0					
ANR	516068	IfStatement	if ( colorant_names != NULL )		514017	2					
ANR	516069	Condition	colorant_names != NULL	355:16:14372:14393	514017	0	True				
ANR	516070	EqualityExpression	colorant_names != NULL		514017	0		!=			
ANR	516071	Identifier	colorant_names		514017	0					
ANR	516072	Identifier	NULL		514017	1					
ANR	516073	CompoundStatement		284:40:12081:12081	514017	1					
ANR	516074	ExpressionStatement	"param_string_from_transient_string ( icc_colorants , colorant_names )"	356:16:14414:14479	514017	0	True				
ANR	516075	CallExpression	"param_string_from_transient_string ( icc_colorants , colorant_names )"		514017	0					
ANR	516076	Callee	param_string_from_transient_string		514017	0					
ANR	516077	Identifier	param_string_from_transient_string		514017	0					
ANR	516078	ArgumentList	icc_colorants		514017	1					
ANR	516079	Argument	icc_colorants		514017	0					
ANR	516080	Identifier	icc_colorants		514017	0					
ANR	516081	Argument	colorant_names		514017	1					
ANR	516082	Identifier	colorant_names		514017	0					
ANR	516083	ElseStatement	else		514017	0					
ANR	516084	CompoundStatement		286:19:12185:12185	514017	0					
ANR	516085	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	358:16:14518:14567	514017	0	True				
ANR	516086	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		514017	0					
ANR	516087	Callee	param_string_from_string		514017	0					
ANR	516088	Identifier	param_string_from_string		514017	0					
ANR	516089	ArgumentList	icc_colorants		514017	1					
ANR	516090	Argument	icc_colorants		514017	0					
ANR	516091	Identifier	icc_colorants		514017	0					
ANR	516092	Argument	null_str		514017	1					
ANR	516093	Identifier	null_str		514017	0					
ANR	516094	ElseStatement	else		514017	0					
ANR	516095	CompoundStatement		290:11:12289:12289	514017	0					
ANR	516096	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		514017	0					
ANR	516097	ForInit	k = 0 ;	362:13:14619:14624	514017	0	True				
ANR	516098	AssignmentExpression	k = 0		514017	0		=			
ANR	516099	Identifier	k		514017	0					
ANR	516100	PrimaryExpression	0		514017	1					
ANR	516101	Condition	k < NUM_DEVICE_PROFILES	362:20:14626:14648	514017	1	True				
ANR	516102	RelationalExpression	k < NUM_DEVICE_PROFILES		514017	0		<			
ANR	516103	Identifier	k		514017	0					
ANR	516104	Identifier	NUM_DEVICE_PROFILES		514017	1					
ANR	516105	PostIncDecOperationExpression	k ++	362:45:14651:14653	514017	2	True				
ANR	516106	Identifier	k		514017	0					
ANR	516107	IncDec	++		514017	1					
ANR	516108	CompoundStatement		291:50:12341:12341	514017	3					
ANR	516109	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	363:12:14670:14722	514017	0	True				
ANR	516110	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		514017	0					
ANR	516111	Callee	param_string_from_string		514017	0					
ANR	516112	Identifier	param_string_from_string		514017	0					
ANR	516113	ArgumentList	profile_array [ k ]		514017	1					
ANR	516114	Argument	profile_array [ k ]		514017	0					
ANR	516115	ArrayIndexing	profile_array [ k ]		514017	0					
ANR	516116	Identifier	profile_array		514017	0					
ANR	516117	Identifier	k		514017	1					
ANR	516118	Argument	null_str		514017	1					
ANR	516119	Identifier	null_str		514017	0					
ANR	516120	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	364:12:14736:14773	514017	1	True				
ANR	516121	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		514017	0		=			
ANR	516122	ArrayIndexing	profile_intents [ k ]		514017	0					
ANR	516123	Identifier	profile_intents		514017	0					
ANR	516124	Identifier	k		514017	1					
ANR	516125	Identifier	gsRINOTSPECIFIED		514017	1					
ANR	516126	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	365:12:14787:14821	514017	2	True				
ANR	516127	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		514017	0		=			
ANR	516128	ArrayIndexing	blackptcomps [ k ]		514017	0					
ANR	516129	Identifier	blackptcomps		514017	0					
ANR	516130	Identifier	k		514017	1					
ANR	516131	Identifier	gsBPNOTSPECIFIED		514017	1					
ANR	516132	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	366:12:14835:14874	514017	3	True				
ANR	516133	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		514017	0		=			
ANR	516134	ArrayIndexing	blackpreserve [ k ]		514017	0					
ANR	516135	Identifier	blackpreserve		514017	0					
ANR	516136	Identifier	k		514017	1					
ANR	516137	Identifier	gsBKPRESNOTSPECIFIED		514017	1					
ANR	516138	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	368:8:14894:14943	514017	1	True				
ANR	516139	CallExpression	"param_string_from_string ( blend_profile , null_str )"		514017	0					
ANR	516140	Callee	param_string_from_string		514017	0					
ANR	516141	Identifier	param_string_from_string		514017	0					
ANR	516142	ArgumentList	blend_profile		514017	1					
ANR	516143	Argument	blend_profile		514017	0					
ANR	516144	Identifier	blend_profile		514017	0					
ANR	516145	Argument	null_str		514017	1					
ANR	516146	Identifier	null_str		514017	0					
ANR	516147	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	369:8:14953:15004	514017	2	True				
ANR	516148	CallExpression	"param_string_from_string ( postren_profile , null_str )"		514017	0					
ANR	516149	Callee	param_string_from_string		514017	0					
ANR	516150	Identifier	param_string_from_string		514017	0					
ANR	516151	ArgumentList	postren_profile		514017	1					
ANR	516152	Argument	postren_profile		514017	0					
ANR	516153	Identifier	postren_profile		514017	0					
ANR	516154	Argument	null_str		514017	1					
ANR	516155	Identifier	null_str		514017	0					
ANR	516156	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	370:8:15014:15063	514017	3	True				
ANR	516157	CallExpression	"param_string_from_string ( proof_profile , null_str )"		514017	0					
ANR	516158	Callee	param_string_from_string		514017	0					
ANR	516159	Identifier	param_string_from_string		514017	0					
ANR	516160	ArgumentList	proof_profile		514017	1					
ANR	516161	Argument	proof_profile		514017	0					
ANR	516162	Identifier	proof_profile		514017	0					
ANR	516163	Argument	null_str		514017	1					
ANR	516164	Identifier	null_str		514017	0					
ANR	516165	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	371:8:15073:15121	514017	4	True				
ANR	516166	CallExpression	"param_string_from_string ( link_profile , null_str )"		514017	0					
ANR	516167	Callee	param_string_from_string		514017	0					
ANR	516168	Identifier	param_string_from_string		514017	0					
ANR	516169	ArgumentList	link_profile		514017	1					
ANR	516170	Argument	link_profile		514017	0					
ANR	516171	Identifier	link_profile		514017	0					
ANR	516172	Argument	null_str		514017	1					
ANR	516173	Identifier	null_str		514017	0					
ANR	516174	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	372:8:15131:15180	514017	5	True				
ANR	516175	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		514017	0					
ANR	516176	Callee	param_string_from_string		514017	0					
ANR	516177	Identifier	param_string_from_string		514017	0					
ANR	516178	ArgumentList	icc_colorants		514017	1					
ANR	516179	Argument	icc_colorants		514017	0					
ANR	516180	Identifier	icc_colorants		514017	0					
ANR	516181	Argument	null_str		514017	1					
ANR	516182	Identifier	null_str		514017	0					
ANR	516183	IfStatement	"if ( strcmp ( Param , ""DeviceGrayToK"" ) == 0 )"		514017	54					
ANR	516184	Condition	"strcmp ( Param , ""DeviceGrayToK"" ) == 0"	374:8:15196:15230	514017	0	True				
ANR	516185	EqualityExpression	"strcmp ( Param , ""DeviceGrayToK"" ) == 0"		514017	0		==			
ANR	516186	CallExpression	"strcmp ( Param , ""DeviceGrayToK"" )"		514017	0					
ANR	516187	Callee	strcmp		514017	0					
ANR	516188	Identifier	strcmp		514017	0					
ANR	516189	ArgumentList	Param		514017	1					
ANR	516190	Argument	Param		514017	0					
ANR	516191	Identifier	Param		514017	0					
ANR	516192	Argument	"""DeviceGrayToK"""		514017	1					
ANR	516193	PrimaryExpression	"""DeviceGrayToK"""		514017	0					
ANR	516194	PrimaryExpression	0		514017	1					
ANR	516195	CompoundStatement		303:45:12918:12918	514017	1					
ANR	516196	ReturnStatement	"return param_write_bool ( plist , ""DeviceGrayToK"" , & devicegraytok ) ;"	375:8:15243:15306	514017	0	True				
ANR	516197	CallExpression	"param_write_bool ( plist , ""DeviceGrayToK"" , & devicegraytok )"		514017	0					
ANR	516198	Callee	param_write_bool		514017	0					
ANR	516199	Identifier	param_write_bool		514017	0					
ANR	516200	ArgumentList	plist		514017	1					
ANR	516201	Argument	plist		514017	0					
ANR	516202	Identifier	plist		514017	0					
ANR	516203	Argument	"""DeviceGrayToK"""		514017	1					
ANR	516204	PrimaryExpression	"""DeviceGrayToK"""		514017	0					
ANR	516205	Argument	& devicegraytok		514017	2					
ANR	516206	UnaryOperationExpression	& devicegraytok		514017	0					
ANR	516207	UnaryOperator	&		514017	0					
ANR	516208	Identifier	devicegraytok		514017	1					
ANR	516209	IfStatement	"if ( strcmp ( Param , ""GrayDetection"" ) == 0 )"		514017	55					
ANR	516210	Condition	"strcmp ( Param , ""GrayDetection"" ) == 0"	377:8:15322:15356	514017	0	True				
ANR	516211	EqualityExpression	"strcmp ( Param , ""GrayDetection"" ) == 0"		514017	0		==			
ANR	516212	CallExpression	"strcmp ( Param , ""GrayDetection"" )"		514017	0					
ANR	516213	Callee	strcmp		514017	0					
ANR	516214	Identifier	strcmp		514017	0					
ANR	516215	ArgumentList	Param		514017	1					
ANR	516216	Argument	Param		514017	0					
ANR	516217	Identifier	Param		514017	0					
ANR	516218	Argument	"""GrayDetection"""		514017	1					
ANR	516219	PrimaryExpression	"""GrayDetection"""		514017	0					
ANR	516220	PrimaryExpression	0		514017	1					
ANR	516221	CompoundStatement		306:45:13044:13044	514017	1					
ANR	516222	ReturnStatement	"return param_write_bool ( plist , ""GrayDetection"" , & graydetection ) ;"	378:8:15369:15432	514017	0	True				
ANR	516223	CallExpression	"param_write_bool ( plist , ""GrayDetection"" , & graydetection )"		514017	0					
ANR	516224	Callee	param_write_bool		514017	0					
ANR	516225	Identifier	param_write_bool		514017	0					
ANR	516226	ArgumentList	plist		514017	1					
ANR	516227	Argument	plist		514017	0					
ANR	516228	Identifier	plist		514017	0					
ANR	516229	Argument	"""GrayDetection"""		514017	1					
ANR	516230	PrimaryExpression	"""GrayDetection"""		514017	0					
ANR	516231	Argument	& graydetection		514017	2					
ANR	516232	UnaryOperationExpression	& graydetection		514017	0					
ANR	516233	UnaryOperator	&		514017	0					
ANR	516234	Identifier	graydetection		514017	1					
ANR	516235	IfStatement	"if ( strcmp ( Param , ""UseFastColor"" ) == 0 )"		514017	56					
ANR	516236	Condition	"strcmp ( Param , ""UseFastColor"" ) == 0"	380:8:15448:15481	514017	0	True				
ANR	516237	EqualityExpression	"strcmp ( Param , ""UseFastColor"" ) == 0"		514017	0		==			
ANR	516238	CallExpression	"strcmp ( Param , ""UseFastColor"" )"		514017	0					
ANR	516239	Callee	strcmp		514017	0					
ANR	516240	Identifier	strcmp		514017	0					
ANR	516241	ArgumentList	Param		514017	1					
ANR	516242	Argument	Param		514017	0					
ANR	516243	Identifier	Param		514017	0					
ANR	516244	Argument	"""UseFastColor"""		514017	1					
ANR	516245	PrimaryExpression	"""UseFastColor"""		514017	0					
ANR	516246	PrimaryExpression	0		514017	1					
ANR	516247	CompoundStatement		309:44:13169:13169	514017	1					
ANR	516248	ReturnStatement	"return param_write_bool ( plist , ""UseFastColor"" , & usefastcolor ) ;"	381:8:15494:15555	514017	0	True				
ANR	516249	CallExpression	"param_write_bool ( plist , ""UseFastColor"" , & usefastcolor )"		514017	0					
ANR	516250	Callee	param_write_bool		514017	0					
ANR	516251	Identifier	param_write_bool		514017	0					
ANR	516252	ArgumentList	plist		514017	1					
ANR	516253	Argument	plist		514017	0					
ANR	516254	Identifier	plist		514017	0					
ANR	516255	Argument	"""UseFastColor"""		514017	1					
ANR	516256	PrimaryExpression	"""UseFastColor"""		514017	0					
ANR	516257	Argument	& usefastcolor		514017	2					
ANR	516258	UnaryOperationExpression	& usefastcolor		514017	0					
ANR	516259	UnaryOperator	&		514017	0					
ANR	516260	Identifier	usefastcolor		514017	1					
ANR	516261	IfStatement	"if ( strcmp ( Param , ""SimulateOverprint"" ) == 0 )"		514017	57					
ANR	516262	Condition	"strcmp ( Param , ""SimulateOverprint"" ) == 0"	383:8:15571:15609	514017	0	True				
ANR	516263	EqualityExpression	"strcmp ( Param , ""SimulateOverprint"" ) == 0"		514017	0		==			
ANR	516264	CallExpression	"strcmp ( Param , ""SimulateOverprint"" )"		514017	0					
ANR	516265	Callee	strcmp		514017	0					
ANR	516266	Identifier	strcmp		514017	0					
ANR	516267	ArgumentList	Param		514017	1					
ANR	516268	Argument	Param		514017	0					
ANR	516269	Identifier	Param		514017	0					
ANR	516270	Argument	"""SimulateOverprint"""		514017	1					
ANR	516271	PrimaryExpression	"""SimulateOverprint"""		514017	0					
ANR	516272	PrimaryExpression	0		514017	1					
ANR	516273	CompoundStatement		312:49:13297:13297	514017	1					
ANR	516274	ReturnStatement	"return param_write_bool ( plist , ""SimulateOverprint"" , & sim_overprint ) ;"	384:8:15622:15689	514017	0	True				
ANR	516275	CallExpression	"param_write_bool ( plist , ""SimulateOverprint"" , & sim_overprint )"		514017	0					
ANR	516276	Callee	param_write_bool		514017	0					
ANR	516277	Identifier	param_write_bool		514017	0					
ANR	516278	ArgumentList	plist		514017	1					
ANR	516279	Argument	plist		514017	0					
ANR	516280	Identifier	plist		514017	0					
ANR	516281	Argument	"""SimulateOverprint"""		514017	1					
ANR	516282	PrimaryExpression	"""SimulateOverprint"""		514017	0					
ANR	516283	Argument	& sim_overprint		514017	2					
ANR	516284	UnaryOperationExpression	& sim_overprint		514017	0					
ANR	516285	UnaryOperator	&		514017	0					
ANR	516286	Identifier	sim_overprint		514017	1					
ANR	516287	IfStatement	"if ( strcmp ( Param , ""PreBandThreshold"" ) == 0 )"		514017	58					
ANR	516288	Condition	"strcmp ( Param , ""PreBandThreshold"" ) == 0"	386:8:15705:15742	514017	0	True				
ANR	516289	EqualityExpression	"strcmp ( Param , ""PreBandThreshold"" ) == 0"		514017	0		==			
ANR	516290	CallExpression	"strcmp ( Param , ""PreBandThreshold"" )"		514017	0					
ANR	516291	Callee	strcmp		514017	0					
ANR	516292	Identifier	strcmp		514017	0					
ANR	516293	ArgumentList	Param		514017	1					
ANR	516294	Argument	Param		514017	0					
ANR	516295	Identifier	Param		514017	0					
ANR	516296	Argument	"""PreBandThreshold"""		514017	1					
ANR	516297	PrimaryExpression	"""PreBandThreshold"""		514017	0					
ANR	516298	PrimaryExpression	0		514017	1					
ANR	516299	CompoundStatement		315:48:13430:13430	514017	1					
ANR	516300	ReturnStatement	"return param_write_bool ( plist , ""PreBandThreshold"" , & prebandthreshold ) ;"	387:8:15755:15824	514017	0	True				
ANR	516301	CallExpression	"param_write_bool ( plist , ""PreBandThreshold"" , & prebandthreshold )"		514017	0					
ANR	516302	Callee	param_write_bool		514017	0					
ANR	516303	Identifier	param_write_bool		514017	0					
ANR	516304	ArgumentList	plist		514017	1					
ANR	516305	Argument	plist		514017	0					
ANR	516306	Identifier	plist		514017	0					
ANR	516307	Argument	"""PreBandThreshold"""		514017	1					
ANR	516308	PrimaryExpression	"""PreBandThreshold"""		514017	0					
ANR	516309	Argument	& prebandthreshold		514017	2					
ANR	516310	UnaryOperationExpression	& prebandthreshold		514017	0					
ANR	516311	UnaryOperator	&		514017	0					
ANR	516312	Identifier	prebandthreshold		514017	1					
ANR	516313	IfStatement	"if ( strcmp ( Param , ""PostRenderProfile"" ) == 0 )"		514017	59					
ANR	516314	Condition	"strcmp ( Param , ""PostRenderProfile"" ) == 0"	389:8:15840:15878	514017	0	True				
ANR	516315	EqualityExpression	"strcmp ( Param , ""PostRenderProfile"" ) == 0"		514017	0		==			
ANR	516316	CallExpression	"strcmp ( Param , ""PostRenderProfile"" )"		514017	0					
ANR	516317	Callee	strcmp		514017	0					
ANR	516318	Identifier	strcmp		514017	0					
ANR	516319	ArgumentList	Param		514017	1					
ANR	516320	Argument	Param		514017	0					
ANR	516321	Identifier	Param		514017	0					
ANR	516322	Argument	"""PostRenderProfile"""		514017	1					
ANR	516323	PrimaryExpression	"""PostRenderProfile"""		514017	0					
ANR	516324	PrimaryExpression	0		514017	1					
ANR	516325	CompoundStatement		318:49:13566:13566	514017	1					
ANR	516326	ReturnStatement	"return param_write_string ( plist , ""PostRenderProfile"" , & ( postren_profile ) ) ;"	390:8:15891:15964	514017	0	True				
ANR	516327	CallExpression	"param_write_string ( plist , ""PostRenderProfile"" , & ( postren_profile ) )"		514017	0					
ANR	516328	Callee	param_write_string		514017	0					
ANR	516329	Identifier	param_write_string		514017	0					
ANR	516330	ArgumentList	plist		514017	1					
ANR	516331	Argument	plist		514017	0					
ANR	516332	Identifier	plist		514017	0					
ANR	516333	Argument	"""PostRenderProfile"""		514017	1					
ANR	516334	PrimaryExpression	"""PostRenderProfile"""		514017	0					
ANR	516335	Argument	& ( postren_profile )		514017	2					
ANR	516336	UnaryOperationExpression	& ( postren_profile )		514017	0					
ANR	516337	UnaryOperator	&		514017	0					
ANR	516338	Identifier	postren_profile		514017	1					
ANR	516339	IfStatement	"if ( strcmp ( Param , ""BlendColorProfile"" ) == 0 )"		514017	60					
ANR	516340	Condition	"strcmp ( Param , ""BlendColorProfile"" ) == 0"	392:8:15980:16018	514017	0	True				
ANR	516341	EqualityExpression	"strcmp ( Param , ""BlendColorProfile"" ) == 0"		514017	0		==			
ANR	516342	CallExpression	"strcmp ( Param , ""BlendColorProfile"" )"		514017	0					
ANR	516343	Callee	strcmp		514017	0					
ANR	516344	Identifier	strcmp		514017	0					
ANR	516345	ArgumentList	Param		514017	1					
ANR	516346	Argument	Param		514017	0					
ANR	516347	Identifier	Param		514017	0					
ANR	516348	Argument	"""BlendColorProfile"""		514017	1					
ANR	516349	PrimaryExpression	"""BlendColorProfile"""		514017	0					
ANR	516350	PrimaryExpression	0		514017	1					
ANR	516351	CompoundStatement		321:49:13706:13706	514017	1					
ANR	516352	ReturnStatement	"return param_write_string ( plist , ""BlendColorProfile"" , & ( blend_profile ) ) ;"	393:8:16031:16102	514017	0	True				
ANR	516353	CallExpression	"param_write_string ( plist , ""BlendColorProfile"" , & ( blend_profile ) )"		514017	0					
ANR	516354	Callee	param_write_string		514017	0					
ANR	516355	Identifier	param_write_string		514017	0					
ANR	516356	ArgumentList	plist		514017	1					
ANR	516357	Argument	plist		514017	0					
ANR	516358	Identifier	plist		514017	0					
ANR	516359	Argument	"""BlendColorProfile"""		514017	1					
ANR	516360	PrimaryExpression	"""BlendColorProfile"""		514017	0					
ANR	516361	Argument	& ( blend_profile )		514017	2					
ANR	516362	UnaryOperationExpression	& ( blend_profile )		514017	0					
ANR	516363	UnaryOperator	&		514017	0					
ANR	516364	Identifier	blend_profile		514017	1					
ANR	516365	IfStatement	"if ( strcmp ( Param , ""ProofProfile"" ) == 0 )"		514017	61					
ANR	516366	Condition	"strcmp ( Param , ""ProofProfile"" ) == 0"	395:8:16118:16151	514017	0	True				
ANR	516367	EqualityExpression	"strcmp ( Param , ""ProofProfile"" ) == 0"		514017	0		==			
ANR	516368	CallExpression	"strcmp ( Param , ""ProofProfile"" )"		514017	0					
ANR	516369	Callee	strcmp		514017	0					
ANR	516370	Identifier	strcmp		514017	0					
ANR	516371	ArgumentList	Param		514017	1					
ANR	516372	Argument	Param		514017	0					
ANR	516373	Identifier	Param		514017	0					
ANR	516374	Argument	"""ProofProfile"""		514017	1					
ANR	516375	PrimaryExpression	"""ProofProfile"""		514017	0					
ANR	516376	PrimaryExpression	0		514017	1					
ANR	516377	CompoundStatement		324:44:13839:13839	514017	1					
ANR	516378	ReturnStatement	"return param_write_string ( plist , ""ProofProfile"" , & ( proof_profile ) ) ;"	396:8:16164:16229	514017	0	True				
ANR	516379	CallExpression	"param_write_string ( plist , ""ProofProfile"" , & ( proof_profile ) )"		514017	0					
ANR	516380	Callee	param_write_string		514017	0					
ANR	516381	Identifier	param_write_string		514017	0					
ANR	516382	ArgumentList	plist		514017	1					
ANR	516383	Argument	plist		514017	0					
ANR	516384	Identifier	plist		514017	0					
ANR	516385	Argument	"""ProofProfile"""		514017	1					
ANR	516386	PrimaryExpression	"""ProofProfile"""		514017	0					
ANR	516387	Argument	& ( proof_profile )		514017	2					
ANR	516388	UnaryOperationExpression	& ( proof_profile )		514017	0					
ANR	516389	UnaryOperator	&		514017	0					
ANR	516390	Identifier	proof_profile		514017	1					
ANR	516391	IfStatement	"if ( strcmp ( Param , ""DeviceLinkProfile"" ) == 0 )"		514017	62					
ANR	516392	Condition	"strcmp ( Param , ""DeviceLinkProfile"" ) == 0"	398:8:16245:16283	514017	0	True				
ANR	516393	EqualityExpression	"strcmp ( Param , ""DeviceLinkProfile"" ) == 0"		514017	0		==			
ANR	516394	CallExpression	"strcmp ( Param , ""DeviceLinkProfile"" )"		514017	0					
ANR	516395	Callee	strcmp		514017	0					
ANR	516396	Identifier	strcmp		514017	0					
ANR	516397	ArgumentList	Param		514017	1					
ANR	516398	Argument	Param		514017	0					
ANR	516399	Identifier	Param		514017	0					
ANR	516400	Argument	"""DeviceLinkProfile"""		514017	1					
ANR	516401	PrimaryExpression	"""DeviceLinkProfile"""		514017	0					
ANR	516402	PrimaryExpression	0		514017	1					
ANR	516403	CompoundStatement		327:49:13971:13971	514017	1					
ANR	516404	ReturnStatement	"return param_write_string ( plist , ""DeviceLinkProfile"" , & ( link_profile ) ) ;"	399:8:16296:16365	514017	0	True				
ANR	516405	CallExpression	"param_write_string ( plist , ""DeviceLinkProfile"" , & ( link_profile ) )"		514017	0					
ANR	516406	Callee	param_write_string		514017	0					
ANR	516407	Identifier	param_write_string		514017	0					
ANR	516408	ArgumentList	plist		514017	1					
ANR	516409	Argument	plist		514017	0					
ANR	516410	Identifier	plist		514017	0					
ANR	516411	Argument	"""DeviceLinkProfile"""		514017	1					
ANR	516412	PrimaryExpression	"""DeviceLinkProfile"""		514017	0					
ANR	516413	Argument	& ( link_profile )		514017	2					
ANR	516414	UnaryOperationExpression	& ( link_profile )		514017	0					
ANR	516415	UnaryOperator	&		514017	0					
ANR	516416	Identifier	link_profile		514017	1					
ANR	516417	IfStatement	"if ( strcmp ( Param , ""ICCOutputColors"" ) == 0 )"		514017	63					
ANR	516418	Condition	"strcmp ( Param , ""ICCOutputColors"" ) == 0"	401:8:16381:16417	514017	0	True				
ANR	516419	EqualityExpression	"strcmp ( Param , ""ICCOutputColors"" ) == 0"		514017	0		==			
ANR	516420	CallExpression	"strcmp ( Param , ""ICCOutputColors"" )"		514017	0					
ANR	516421	Callee	strcmp		514017	0					
ANR	516422	Identifier	strcmp		514017	0					
ANR	516423	ArgumentList	Param		514017	1					
ANR	516424	Argument	Param		514017	0					
ANR	516425	Identifier	Param		514017	0					
ANR	516426	Argument	"""ICCOutputColors"""		514017	1					
ANR	516427	PrimaryExpression	"""ICCOutputColors"""		514017	0					
ANR	516428	PrimaryExpression	0		514017	1					
ANR	516429	CompoundStatement		330:47:14105:14105	514017	1					
ANR	516430	ReturnStatement	"return param_write_string ( plist , ""ICCOutputColors"" , & ( icc_colorants ) ) ;"	402:8:16430:16498	514017	0	True				
ANR	516431	CallExpression	"param_write_string ( plist , ""ICCOutputColors"" , & ( icc_colorants ) )"		514017	0					
ANR	516432	Callee	param_write_string		514017	0					
ANR	516433	Identifier	param_write_string		514017	0					
ANR	516434	ArgumentList	plist		514017	1					
ANR	516435	Argument	plist		514017	0					
ANR	516436	Identifier	plist		514017	0					
ANR	516437	Argument	"""ICCOutputColors"""		514017	1					
ANR	516438	PrimaryExpression	"""ICCOutputColors"""		514017	0					
ANR	516439	Argument	& ( icc_colorants )		514017	2					
ANR	516440	UnaryOperationExpression	& ( icc_colorants )		514017	0					
ANR	516441	UnaryOperator	&		514017	0					
ANR	516442	Identifier	icc_colorants		514017	1					
ANR	516443	IfStatement	"if ( strcmp ( Param , ""OutputICCProfile"" ) == 0 )"		514017	64					
ANR	516444	Condition	"strcmp ( Param , ""OutputICCProfile"" ) == 0"	404:8:16514:16551	514017	0	True				
ANR	516445	EqualityExpression	"strcmp ( Param , ""OutputICCProfile"" ) == 0"		514017	0		==			
ANR	516446	CallExpression	"strcmp ( Param , ""OutputICCProfile"" )"		514017	0					
ANR	516447	Callee	strcmp		514017	0					
ANR	516448	Identifier	strcmp		514017	0					
ANR	516449	ArgumentList	Param		514017	1					
ANR	516450	Argument	Param		514017	0					
ANR	516451	Identifier	Param		514017	0					
ANR	516452	Argument	"""OutputICCProfile"""		514017	1					
ANR	516453	PrimaryExpression	"""OutputICCProfile"""		514017	0					
ANR	516454	PrimaryExpression	0		514017	1					
ANR	516455	CompoundStatement		333:48:14239:14239	514017	1					
ANR	516456	ReturnStatement	"return param_write_string ( plist , ""OutputICCProfile"" , & ( profile_array [ 0 ] ) ) ;"	405:8:16564:16636	514017	0	True				
ANR	516457	CallExpression	"param_write_string ( plist , ""OutputICCProfile"" , & ( profile_array [ 0 ] ) )"		514017	0					
ANR	516458	Callee	param_write_string		514017	0					
ANR	516459	Identifier	param_write_string		514017	0					
ANR	516460	ArgumentList	plist		514017	1					
ANR	516461	Argument	plist		514017	0					
ANR	516462	Identifier	plist		514017	0					
ANR	516463	Argument	"""OutputICCProfile"""		514017	1					
ANR	516464	PrimaryExpression	"""OutputICCProfile"""		514017	0					
ANR	516465	Argument	& ( profile_array [ 0 ] )		514017	2					
ANR	516466	UnaryOperationExpression	& ( profile_array [ 0 ] )		514017	0					
ANR	516467	UnaryOperator	&		514017	0					
ANR	516468	ArrayIndexing	profile_array [ 0 ]		514017	1					
ANR	516469	Identifier	profile_array		514017	0					
ANR	516470	PrimaryExpression	0		514017	1					
ANR	516471	IfStatement	"if ( strcmp ( Param , ""GraphicICCProfile"" ) == 0 )"		514017	65					
ANR	516472	Condition	"strcmp ( Param , ""GraphicICCProfile"" ) == 0"	407:8:16652:16690	514017	0	True				
ANR	516473	EqualityExpression	"strcmp ( Param , ""GraphicICCProfile"" ) == 0"		514017	0		==			
ANR	516474	CallExpression	"strcmp ( Param , ""GraphicICCProfile"" )"		514017	0					
ANR	516475	Callee	strcmp		514017	0					
ANR	516476	Identifier	strcmp		514017	0					
ANR	516477	ArgumentList	Param		514017	1					
ANR	516478	Argument	Param		514017	0					
ANR	516479	Identifier	Param		514017	0					
ANR	516480	Argument	"""GraphicICCProfile"""		514017	1					
ANR	516481	PrimaryExpression	"""GraphicICCProfile"""		514017	0					
ANR	516482	PrimaryExpression	0		514017	1					
ANR	516483	CompoundStatement		336:49:14378:14378	514017	1					
ANR	516484	ReturnStatement	"return param_write_string ( plist , ""GraphicICCProfile"" , & ( profile_array [ 1 ] ) ) ;"	408:8:16703:16776	514017	0	True				
ANR	516485	CallExpression	"param_write_string ( plist , ""GraphicICCProfile"" , & ( profile_array [ 1 ] ) )"		514017	0					
ANR	516486	Callee	param_write_string		514017	0					
ANR	516487	Identifier	param_write_string		514017	0					
ANR	516488	ArgumentList	plist		514017	1					
ANR	516489	Argument	plist		514017	0					
ANR	516490	Identifier	plist		514017	0					
ANR	516491	Argument	"""GraphicICCProfile"""		514017	1					
ANR	516492	PrimaryExpression	"""GraphicICCProfile"""		514017	0					
ANR	516493	Argument	& ( profile_array [ 1 ] )		514017	2					
ANR	516494	UnaryOperationExpression	& ( profile_array [ 1 ] )		514017	0					
ANR	516495	UnaryOperator	&		514017	0					
ANR	516496	ArrayIndexing	profile_array [ 1 ]		514017	1					
ANR	516497	Identifier	profile_array		514017	0					
ANR	516498	PrimaryExpression	1		514017	1					
ANR	516499	IfStatement	"if ( strcmp ( Param , ""ImageICCProfile"" ) == 0 )"		514017	66					
ANR	516500	Condition	"strcmp ( Param , ""ImageICCProfile"" ) == 0"	410:8:16792:16828	514017	0	True				
ANR	516501	EqualityExpression	"strcmp ( Param , ""ImageICCProfile"" ) == 0"		514017	0		==			
ANR	516502	CallExpression	"strcmp ( Param , ""ImageICCProfile"" )"		514017	0					
ANR	516503	Callee	strcmp		514017	0					
ANR	516504	Identifier	strcmp		514017	0					
ANR	516505	ArgumentList	Param		514017	1					
ANR	516506	Argument	Param		514017	0					
ANR	516507	Identifier	Param		514017	0					
ANR	516508	Argument	"""ImageICCProfile"""		514017	1					
ANR	516509	PrimaryExpression	"""ImageICCProfile"""		514017	0					
ANR	516510	PrimaryExpression	0		514017	1					
ANR	516511	CompoundStatement		339:47:14516:14516	514017	1					
ANR	516512	ReturnStatement	"return param_write_string ( plist , ""ImageICCProfile"" , & ( profile_array [ 2 ] ) ) ;"	411:8:16841:16912	514017	0	True				
ANR	516513	CallExpression	"param_write_string ( plist , ""ImageICCProfile"" , & ( profile_array [ 2 ] ) )"		514017	0					
ANR	516514	Callee	param_write_string		514017	0					
ANR	516515	Identifier	param_write_string		514017	0					
ANR	516516	ArgumentList	plist		514017	1					
ANR	516517	Argument	plist		514017	0					
ANR	516518	Identifier	plist		514017	0					
ANR	516519	Argument	"""ImageICCProfile"""		514017	1					
ANR	516520	PrimaryExpression	"""ImageICCProfile"""		514017	0					
ANR	516521	Argument	& ( profile_array [ 2 ] )		514017	2					
ANR	516522	UnaryOperationExpression	& ( profile_array [ 2 ] )		514017	0					
ANR	516523	UnaryOperator	&		514017	0					
ANR	516524	ArrayIndexing	profile_array [ 2 ]		514017	1					
ANR	516525	Identifier	profile_array		514017	0					
ANR	516526	PrimaryExpression	2		514017	1					
ANR	516527	IfStatement	"if ( strcmp ( Param , ""TextICCProfile"" ) == 0 )"		514017	67					
ANR	516528	Condition	"strcmp ( Param , ""TextICCProfile"" ) == 0"	413:8:16928:16963	514017	0	True				
ANR	516529	EqualityExpression	"strcmp ( Param , ""TextICCProfile"" ) == 0"		514017	0		==			
ANR	516530	CallExpression	"strcmp ( Param , ""TextICCProfile"" )"		514017	0					
ANR	516531	Callee	strcmp		514017	0					
ANR	516532	Identifier	strcmp		514017	0					
ANR	516533	ArgumentList	Param		514017	1					
ANR	516534	Argument	Param		514017	0					
ANR	516535	Identifier	Param		514017	0					
ANR	516536	Argument	"""TextICCProfile"""		514017	1					
ANR	516537	PrimaryExpression	"""TextICCProfile"""		514017	0					
ANR	516538	PrimaryExpression	0		514017	1					
ANR	516539	CompoundStatement		342:46:14651:14651	514017	1					
ANR	516540	ReturnStatement	"return param_write_string ( plist , ""TextICCProfile"" , & ( profile_array [ 3 ] ) ) ;"	414:8:16976:17046	514017	0	True				
ANR	516541	CallExpression	"param_write_string ( plist , ""TextICCProfile"" , & ( profile_array [ 3 ] ) )"		514017	0					
ANR	516542	Callee	param_write_string		514017	0					
ANR	516543	Identifier	param_write_string		514017	0					
ANR	516544	ArgumentList	plist		514017	1					
ANR	516545	Argument	plist		514017	0					
ANR	516546	Identifier	plist		514017	0					
ANR	516547	Argument	"""TextICCProfile"""		514017	1					
ANR	516548	PrimaryExpression	"""TextICCProfile"""		514017	0					
ANR	516549	Argument	& ( profile_array [ 3 ] )		514017	2					
ANR	516550	UnaryOperationExpression	& ( profile_array [ 3 ] )		514017	0					
ANR	516551	UnaryOperator	&		514017	0					
ANR	516552	ArrayIndexing	profile_array [ 3 ]		514017	1					
ANR	516553	Identifier	profile_array		514017	0					
ANR	516554	PrimaryExpression	3		514017	1					
ANR	516555	IfStatement	"if ( strcmp ( Param , ""ColorAccuracy"" ) == 0 )"		514017	68					
ANR	516556	Condition	"strcmp ( Param , ""ColorAccuracy"" ) == 0"	416:8:17062:17096	514017	0	True				
ANR	516557	EqualityExpression	"strcmp ( Param , ""ColorAccuracy"" ) == 0"		514017	0		==			
ANR	516558	CallExpression	"strcmp ( Param , ""ColorAccuracy"" )"		514017	0					
ANR	516559	Callee	strcmp		514017	0					
ANR	516560	Identifier	strcmp		514017	0					
ANR	516561	ArgumentList	Param		514017	1					
ANR	516562	Argument	Param		514017	0					
ANR	516563	Identifier	Param		514017	0					
ANR	516564	Argument	"""ColorAccuracy"""		514017	1					
ANR	516565	PrimaryExpression	"""ColorAccuracy"""		514017	0					
ANR	516566	PrimaryExpression	0		514017	1					
ANR	516567	CompoundStatement		345:45:14784:14784	514017	1					
ANR	516568	ReturnStatement	"return param_write_int ( plist , ""ColorAccuracy"" , ( const int * ) ( & ( color_accuracy ) ) ) ;"	417:8:17109:17189	514017	0	True				
ANR	516569	CallExpression	"param_write_int ( plist , ""ColorAccuracy"" , ( const int * ) ( & ( color_accuracy ) ) )"		514017	0					
ANR	516570	Callee	param_write_int		514017	0					
ANR	516571	Identifier	param_write_int		514017	0					
ANR	516572	ArgumentList	plist		514017	1					
ANR	516573	Argument	plist		514017	0					
ANR	516574	Identifier	plist		514017	0					
ANR	516575	Argument	"""ColorAccuracy"""		514017	1					
ANR	516576	PrimaryExpression	"""ColorAccuracy"""		514017	0					
ANR	516577	Argument	( const int * ) ( & ( color_accuracy ) )		514017	2					
ANR	516578	CastExpression	( const int * ) ( & ( color_accuracy ) )		514017	0					
ANR	516579	CastTarget	const int *		514017	0					
ANR	516580	UnaryOperationExpression	& ( color_accuracy )		514017	1					
ANR	516581	UnaryOperator	&		514017	0					
ANR	516582	Identifier	color_accuracy		514017	1					
ANR	516583	IfStatement	"if ( strcmp ( Param , ""RenderIntent"" ) == 0 )"		514017	69					
ANR	516584	Condition	"strcmp ( Param , ""RenderIntent"" ) == 0"	419:8:17205:17238	514017	0	True				
ANR	516585	EqualityExpression	"strcmp ( Param , ""RenderIntent"" ) == 0"		514017	0		==			
ANR	516586	CallExpression	"strcmp ( Param , ""RenderIntent"" )"		514017	0					
ANR	516587	Callee	strcmp		514017	0					
ANR	516588	Identifier	strcmp		514017	0					
ANR	516589	ArgumentList	Param		514017	1					
ANR	516590	Argument	Param		514017	0					
ANR	516591	Identifier	Param		514017	0					
ANR	516592	Argument	"""RenderIntent"""		514017	1					
ANR	516593	PrimaryExpression	"""RenderIntent"""		514017	0					
ANR	516594	PrimaryExpression	0		514017	1					
ANR	516595	CompoundStatement		348:44:14926:14926	514017	1					
ANR	516596	ReturnStatement	"return param_write_int ( plist , ""RenderIntent"" , ( const int * ) ( & ( profile_intents [ 0 ] ) ) ) ;"	420:8:17251:17334	514017	0	True				
ANR	516597	CallExpression	"param_write_int ( plist , ""RenderIntent"" , ( const int * ) ( & ( profile_intents [ 0 ] ) ) )"		514017	0					
ANR	516598	Callee	param_write_int		514017	0					
ANR	516599	Identifier	param_write_int		514017	0					
ANR	516600	ArgumentList	plist		514017	1					
ANR	516601	Argument	plist		514017	0					
ANR	516602	Identifier	plist		514017	0					
ANR	516603	Argument	"""RenderIntent"""		514017	1					
ANR	516604	PrimaryExpression	"""RenderIntent"""		514017	0					
ANR	516605	Argument	( const int * ) ( & ( profile_intents [ 0 ] ) )		514017	2					
ANR	516606	CastExpression	( const int * ) ( & ( profile_intents [ 0 ] ) )		514017	0					
ANR	516607	CastTarget	const int *		514017	0					
ANR	516608	UnaryOperationExpression	& ( profile_intents [ 0 ] )		514017	1					
ANR	516609	UnaryOperator	&		514017	0					
ANR	516610	ArrayIndexing	profile_intents [ 0 ]		514017	1					
ANR	516611	Identifier	profile_intents		514017	0					
ANR	516612	PrimaryExpression	0		514017	1					
ANR	516613	IfStatement	"if ( strcmp ( Param , ""GraphicIntent"" ) == 0 )"		514017	70					
ANR	516614	Condition	"strcmp ( Param , ""GraphicIntent"" ) == 0"	422:8:17350:17384	514017	0	True				
ANR	516615	EqualityExpression	"strcmp ( Param , ""GraphicIntent"" ) == 0"		514017	0		==			
ANR	516616	CallExpression	"strcmp ( Param , ""GraphicIntent"" )"		514017	0					
ANR	516617	Callee	strcmp		514017	0					
ANR	516618	Identifier	strcmp		514017	0					
ANR	516619	ArgumentList	Param		514017	1					
ANR	516620	Argument	Param		514017	0					
ANR	516621	Identifier	Param		514017	0					
ANR	516622	Argument	"""GraphicIntent"""		514017	1					
ANR	516623	PrimaryExpression	"""GraphicIntent"""		514017	0					
ANR	516624	PrimaryExpression	0		514017	1					
ANR	516625	CompoundStatement		351:45:15072:15072	514017	1					
ANR	516626	ReturnStatement	"return param_write_int ( plist , ""GraphicIntent"" , ( const int * ) & ( profile_intents [ 1 ] ) ) ;"	423:8:17397:17479	514017	0	True				
ANR	516627	CallExpression	"param_write_int ( plist , ""GraphicIntent"" , ( const int * ) & ( profile_intents [ 1 ] ) )"		514017	0					
ANR	516628	Callee	param_write_int		514017	0					
ANR	516629	Identifier	param_write_int		514017	0					
ANR	516630	ArgumentList	plist		514017	1					
ANR	516631	Argument	plist		514017	0					
ANR	516632	Identifier	plist		514017	0					
ANR	516633	Argument	"""GraphicIntent"""		514017	1					
ANR	516634	PrimaryExpression	"""GraphicIntent"""		514017	0					
ANR	516635	Argument	( const int * ) & ( profile_intents [ 1 ] )		514017	2					
ANR	516636	CastExpression	( const int * ) & ( profile_intents [ 1 ] )		514017	0					
ANR	516637	CastTarget	const int *		514017	0					
ANR	516638	UnaryOperationExpression	& ( profile_intents [ 1 ] )		514017	1					
ANR	516639	UnaryOperator	&		514017	0					
ANR	516640	ArrayIndexing	profile_intents [ 1 ]		514017	1					
ANR	516641	Identifier	profile_intents		514017	0					
ANR	516642	PrimaryExpression	1		514017	1					
ANR	516643	IfStatement	"if ( strcmp ( Param , ""ImageIntent"" ) == 0 )"		514017	71					
ANR	516644	Condition	"strcmp ( Param , ""ImageIntent"" ) == 0"	425:8:17495:17527	514017	0	True				
ANR	516645	EqualityExpression	"strcmp ( Param , ""ImageIntent"" ) == 0"		514017	0		==			
ANR	516646	CallExpression	"strcmp ( Param , ""ImageIntent"" )"		514017	0					
ANR	516647	Callee	strcmp		514017	0					
ANR	516648	Identifier	strcmp		514017	0					
ANR	516649	ArgumentList	Param		514017	1					
ANR	516650	Argument	Param		514017	0					
ANR	516651	Identifier	Param		514017	0					
ANR	516652	Argument	"""ImageIntent"""		514017	1					
ANR	516653	PrimaryExpression	"""ImageIntent"""		514017	0					
ANR	516654	PrimaryExpression	0		514017	1					
ANR	516655	CompoundStatement		354:43:15215:15215	514017	1					
ANR	516656	ReturnStatement	"return param_write_int ( plist , ""ImageIntent"" , ( const int * ) & ( profile_intents [ 2 ] ) ) ;"	426:8:17540:17620	514017	0	True				
ANR	516657	CallExpression	"param_write_int ( plist , ""ImageIntent"" , ( const int * ) & ( profile_intents [ 2 ] ) )"		514017	0					
ANR	516658	Callee	param_write_int		514017	0					
ANR	516659	Identifier	param_write_int		514017	0					
ANR	516660	ArgumentList	plist		514017	1					
ANR	516661	Argument	plist		514017	0					
ANR	516662	Identifier	plist		514017	0					
ANR	516663	Argument	"""ImageIntent"""		514017	1					
ANR	516664	PrimaryExpression	"""ImageIntent"""		514017	0					
ANR	516665	Argument	( const int * ) & ( profile_intents [ 2 ] )		514017	2					
ANR	516666	CastExpression	( const int * ) & ( profile_intents [ 2 ] )		514017	0					
ANR	516667	CastTarget	const int *		514017	0					
ANR	516668	UnaryOperationExpression	& ( profile_intents [ 2 ] )		514017	1					
ANR	516669	UnaryOperator	&		514017	0					
ANR	516670	ArrayIndexing	profile_intents [ 2 ]		514017	1					
ANR	516671	Identifier	profile_intents		514017	0					
ANR	516672	PrimaryExpression	2		514017	1					
ANR	516673	IfStatement	"if ( strcmp ( Param , ""TextIntent"" ) == 0 )"		514017	72					
ANR	516674	Condition	"strcmp ( Param , ""TextIntent"" ) == 0"	428:8:17636:17667	514017	0	True				
ANR	516675	EqualityExpression	"strcmp ( Param , ""TextIntent"" ) == 0"		514017	0		==			
ANR	516676	CallExpression	"strcmp ( Param , ""TextIntent"" )"		514017	0					
ANR	516677	Callee	strcmp		514017	0					
ANR	516678	Identifier	strcmp		514017	0					
ANR	516679	ArgumentList	Param		514017	1					
ANR	516680	Argument	Param		514017	0					
ANR	516681	Identifier	Param		514017	0					
ANR	516682	Argument	"""TextIntent"""		514017	1					
ANR	516683	PrimaryExpression	"""TextIntent"""		514017	0					
ANR	516684	PrimaryExpression	0		514017	1					
ANR	516685	CompoundStatement		357:42:15355:15355	514017	1					
ANR	516686	ReturnStatement	"return param_write_int ( plist , ""TextIntent"" , ( const int * ) & ( profile_intents [ 3 ] ) ) ;"	429:8:17680:17759	514017	0	True				
ANR	516687	CallExpression	"param_write_int ( plist , ""TextIntent"" , ( const int * ) & ( profile_intents [ 3 ] ) )"		514017	0					
ANR	516688	Callee	param_write_int		514017	0					
ANR	516689	Identifier	param_write_int		514017	0					
ANR	516690	ArgumentList	plist		514017	1					
ANR	516691	Argument	plist		514017	0					
ANR	516692	Identifier	plist		514017	0					
ANR	516693	Argument	"""TextIntent"""		514017	1					
ANR	516694	PrimaryExpression	"""TextIntent"""		514017	0					
ANR	516695	Argument	( const int * ) & ( profile_intents [ 3 ] )		514017	2					
ANR	516696	CastExpression	( const int * ) & ( profile_intents [ 3 ] )		514017	0					
ANR	516697	CastTarget	const int *		514017	0					
ANR	516698	UnaryOperationExpression	& ( profile_intents [ 3 ] )		514017	1					
ANR	516699	UnaryOperator	&		514017	0					
ANR	516700	ArrayIndexing	profile_intents [ 3 ]		514017	1					
ANR	516701	Identifier	profile_intents		514017	0					
ANR	516702	PrimaryExpression	3		514017	1					
ANR	516703	IfStatement	"if ( strcmp ( Param , ""BlackPtComp"" ) == 0 )"		514017	73					
ANR	516704	Condition	"strcmp ( Param , ""BlackPtComp"" ) == 0"	431:8:17775:17807	514017	0	True				
ANR	516705	EqualityExpression	"strcmp ( Param , ""BlackPtComp"" ) == 0"		514017	0		==			
ANR	516706	CallExpression	"strcmp ( Param , ""BlackPtComp"" )"		514017	0					
ANR	516707	Callee	strcmp		514017	0					
ANR	516708	Identifier	strcmp		514017	0					
ANR	516709	ArgumentList	Param		514017	1					
ANR	516710	Argument	Param		514017	0					
ANR	516711	Identifier	Param		514017	0					
ANR	516712	Argument	"""BlackPtComp"""		514017	1					
ANR	516713	PrimaryExpression	"""BlackPtComp"""		514017	0					
ANR	516714	PrimaryExpression	0		514017	1					
ANR	516715	CompoundStatement		360:43:15495:15495	514017	1					
ANR	516716	ReturnStatement	"return param_write_int ( plist , ""BlackPtComp"" , ( const int * ) ( & ( blackptcomps [ 0 ] ) ) ) ;"	432:8:17820:17899	514017	0	True				
ANR	516717	CallExpression	"param_write_int ( plist , ""BlackPtComp"" , ( const int * ) ( & ( blackptcomps [ 0 ] ) ) )"		514017	0					
ANR	516718	Callee	param_write_int		514017	0					
ANR	516719	Identifier	param_write_int		514017	0					
ANR	516720	ArgumentList	plist		514017	1					
ANR	516721	Argument	plist		514017	0					
ANR	516722	Identifier	plist		514017	0					
ANR	516723	Argument	"""BlackPtComp"""		514017	1					
ANR	516724	PrimaryExpression	"""BlackPtComp"""		514017	0					
ANR	516725	Argument	( const int * ) ( & ( blackptcomps [ 0 ] ) )		514017	2					
ANR	516726	CastExpression	( const int * ) ( & ( blackptcomps [ 0 ] ) )		514017	0					
ANR	516727	CastTarget	const int *		514017	0					
ANR	516728	UnaryOperationExpression	& ( blackptcomps [ 0 ] )		514017	1					
ANR	516729	UnaryOperator	&		514017	0					
ANR	516730	ArrayIndexing	blackptcomps [ 0 ]		514017	1					
ANR	516731	Identifier	blackptcomps		514017	0					
ANR	516732	PrimaryExpression	0		514017	1					
ANR	516733	IfStatement	"if ( strcmp ( Param , ""GraphicBlackPt"" ) == 0 )"		514017	74					
ANR	516734	Condition	"strcmp ( Param , ""GraphicBlackPt"" ) == 0"	434:8:17915:17950	514017	0	True				
ANR	516735	EqualityExpression	"strcmp ( Param , ""GraphicBlackPt"" ) == 0"		514017	0		==			
ANR	516736	CallExpression	"strcmp ( Param , ""GraphicBlackPt"" )"		514017	0					
ANR	516737	Callee	strcmp		514017	0					
ANR	516738	Identifier	strcmp		514017	0					
ANR	516739	ArgumentList	Param		514017	1					
ANR	516740	Argument	Param		514017	0					
ANR	516741	Identifier	Param		514017	0					
ANR	516742	Argument	"""GraphicBlackPt"""		514017	1					
ANR	516743	PrimaryExpression	"""GraphicBlackPt"""		514017	0					
ANR	516744	PrimaryExpression	0		514017	1					
ANR	516745	CompoundStatement		363:46:15638:15638	514017	1					
ANR	516746	ReturnStatement	"return param_write_int ( plist , ""GraphicBlackPt"" , ( const int * ) & ( blackptcomps [ 1 ] ) ) ;"	435:8:17963:18043	514017	0	True				
ANR	516747	CallExpression	"param_write_int ( plist , ""GraphicBlackPt"" , ( const int * ) & ( blackptcomps [ 1 ] ) )"		514017	0					
ANR	516748	Callee	param_write_int		514017	0					
ANR	516749	Identifier	param_write_int		514017	0					
ANR	516750	ArgumentList	plist		514017	1					
ANR	516751	Argument	plist		514017	0					
ANR	516752	Identifier	plist		514017	0					
ANR	516753	Argument	"""GraphicBlackPt"""		514017	1					
ANR	516754	PrimaryExpression	"""GraphicBlackPt"""		514017	0					
ANR	516755	Argument	( const int * ) & ( blackptcomps [ 1 ] )		514017	2					
ANR	516756	CastExpression	( const int * ) & ( blackptcomps [ 1 ] )		514017	0					
ANR	516757	CastTarget	const int *		514017	0					
ANR	516758	UnaryOperationExpression	& ( blackptcomps [ 1 ] )		514017	1					
ANR	516759	UnaryOperator	&		514017	0					
ANR	516760	ArrayIndexing	blackptcomps [ 1 ]		514017	1					
ANR	516761	Identifier	blackptcomps		514017	0					
ANR	516762	PrimaryExpression	1		514017	1					
ANR	516763	IfStatement	"if ( strcmp ( Param , ""ImageBlackPt"" ) == 0 )"		514017	75					
ANR	516764	Condition	"strcmp ( Param , ""ImageBlackPt"" ) == 0"	437:8:18059:18092	514017	0	True				
ANR	516765	EqualityExpression	"strcmp ( Param , ""ImageBlackPt"" ) == 0"		514017	0		==			
ANR	516766	CallExpression	"strcmp ( Param , ""ImageBlackPt"" )"		514017	0					
ANR	516767	Callee	strcmp		514017	0					
ANR	516768	Identifier	strcmp		514017	0					
ANR	516769	ArgumentList	Param		514017	1					
ANR	516770	Argument	Param		514017	0					
ANR	516771	Identifier	Param		514017	0					
ANR	516772	Argument	"""ImageBlackPt"""		514017	1					
ANR	516773	PrimaryExpression	"""ImageBlackPt"""		514017	0					
ANR	516774	PrimaryExpression	0		514017	1					
ANR	516775	CompoundStatement		366:44:15780:15780	514017	1					
ANR	516776	ReturnStatement	"return param_write_int ( plist , ""ImageBlackPt"" , ( const int * ) & ( blackptcomps [ 2 ] ) ) ;"	438:8:18105:18183	514017	0	True				
ANR	516777	CallExpression	"param_write_int ( plist , ""ImageBlackPt"" , ( const int * ) & ( blackptcomps [ 2 ] ) )"		514017	0					
ANR	516778	Callee	param_write_int		514017	0					
ANR	516779	Identifier	param_write_int		514017	0					
ANR	516780	ArgumentList	plist		514017	1					
ANR	516781	Argument	plist		514017	0					
ANR	516782	Identifier	plist		514017	0					
ANR	516783	Argument	"""ImageBlackPt"""		514017	1					
ANR	516784	PrimaryExpression	"""ImageBlackPt"""		514017	0					
ANR	516785	Argument	( const int * ) & ( blackptcomps [ 2 ] )		514017	2					
ANR	516786	CastExpression	( const int * ) & ( blackptcomps [ 2 ] )		514017	0					
ANR	516787	CastTarget	const int *		514017	0					
ANR	516788	UnaryOperationExpression	& ( blackptcomps [ 2 ] )		514017	1					
ANR	516789	UnaryOperator	&		514017	0					
ANR	516790	ArrayIndexing	blackptcomps [ 2 ]		514017	1					
ANR	516791	Identifier	blackptcomps		514017	0					
ANR	516792	PrimaryExpression	2		514017	1					
ANR	516793	IfStatement	"if ( strcmp ( Param , ""TextBlackPt"" ) == 0 )"		514017	76					
ANR	516794	Condition	"strcmp ( Param , ""TextBlackPt"" ) == 0"	440:8:18199:18231	514017	0	True				
ANR	516795	EqualityExpression	"strcmp ( Param , ""TextBlackPt"" ) == 0"		514017	0		==			
ANR	516796	CallExpression	"strcmp ( Param , ""TextBlackPt"" )"		514017	0					
ANR	516797	Callee	strcmp		514017	0					
ANR	516798	Identifier	strcmp		514017	0					
ANR	516799	ArgumentList	Param		514017	1					
ANR	516800	Argument	Param		514017	0					
ANR	516801	Identifier	Param		514017	0					
ANR	516802	Argument	"""TextBlackPt"""		514017	1					
ANR	516803	PrimaryExpression	"""TextBlackPt"""		514017	0					
ANR	516804	PrimaryExpression	0		514017	1					
ANR	516805	CompoundStatement		369:43:15919:15919	514017	1					
ANR	516806	ReturnStatement	"return param_write_int ( plist , ""TextBlackPt"" , ( const int * ) & ( blackptcomps [ 3 ] ) ) ;"	441:8:18244:18321	514017	0	True				
ANR	516807	CallExpression	"param_write_int ( plist , ""TextBlackPt"" , ( const int * ) & ( blackptcomps [ 3 ] ) )"		514017	0					
ANR	516808	Callee	param_write_int		514017	0					
ANR	516809	Identifier	param_write_int		514017	0					
ANR	516810	ArgumentList	plist		514017	1					
ANR	516811	Argument	plist		514017	0					
ANR	516812	Identifier	plist		514017	0					
ANR	516813	Argument	"""TextBlackPt"""		514017	1					
ANR	516814	PrimaryExpression	"""TextBlackPt"""		514017	0					
ANR	516815	Argument	( const int * ) & ( blackptcomps [ 3 ] )		514017	2					
ANR	516816	CastExpression	( const int * ) & ( blackptcomps [ 3 ] )		514017	0					
ANR	516817	CastTarget	const int *		514017	0					
ANR	516818	UnaryOperationExpression	& ( blackptcomps [ 3 ] )		514017	1					
ANR	516819	UnaryOperator	&		514017	0					
ANR	516820	ArrayIndexing	blackptcomps [ 3 ]		514017	1					
ANR	516821	Identifier	blackptcomps		514017	0					
ANR	516822	PrimaryExpression	3		514017	1					
ANR	516823	IfStatement	"if ( strcmp ( Param , ""KPreserve"" ) == 0 )"		514017	77					
ANR	516824	Condition	"strcmp ( Param , ""KPreserve"" ) == 0"	443:8:18337:18367	514017	0	True				
ANR	516825	EqualityExpression	"strcmp ( Param , ""KPreserve"" ) == 0"		514017	0		==			
ANR	516826	CallExpression	"strcmp ( Param , ""KPreserve"" )"		514017	0					
ANR	516827	Callee	strcmp		514017	0					
ANR	516828	Identifier	strcmp		514017	0					
ANR	516829	ArgumentList	Param		514017	1					
ANR	516830	Argument	Param		514017	0					
ANR	516831	Identifier	Param		514017	0					
ANR	516832	Argument	"""KPreserve"""		514017	1					
ANR	516833	PrimaryExpression	"""KPreserve"""		514017	0					
ANR	516834	PrimaryExpression	0		514017	1					
ANR	516835	CompoundStatement		372:41:16055:16055	514017	1					
ANR	516836	ReturnStatement	"return param_write_int ( plist , ""KPreserve"" , ( const int * ) ( & ( blackpreserve [ 0 ] ) ) ) ;"	444:8:18380:18458	514017	0	True				
ANR	516837	CallExpression	"param_write_int ( plist , ""KPreserve"" , ( const int * ) ( & ( blackpreserve [ 0 ] ) ) )"		514017	0					
ANR	516838	Callee	param_write_int		514017	0					
ANR	516839	Identifier	param_write_int		514017	0					
ANR	516840	ArgumentList	plist		514017	1					
ANR	516841	Argument	plist		514017	0					
ANR	516842	Identifier	plist		514017	0					
ANR	516843	Argument	"""KPreserve"""		514017	1					
ANR	516844	PrimaryExpression	"""KPreserve"""		514017	0					
ANR	516845	Argument	( const int * ) ( & ( blackpreserve [ 0 ] ) )		514017	2					
ANR	516846	CastExpression	( const int * ) ( & ( blackpreserve [ 0 ] ) )		514017	0					
ANR	516847	CastTarget	const int *		514017	0					
ANR	516848	UnaryOperationExpression	& ( blackpreserve [ 0 ] )		514017	1					
ANR	516849	UnaryOperator	&		514017	0					
ANR	516850	ArrayIndexing	blackpreserve [ 0 ]		514017	1					
ANR	516851	Identifier	blackpreserve		514017	0					
ANR	516852	PrimaryExpression	0		514017	1					
ANR	516853	IfStatement	"if ( strcmp ( Param , ""GraphicKPreserve"" ) == 0 )"		514017	78					
ANR	516854	Condition	"strcmp ( Param , ""GraphicKPreserve"" ) == 0"	446:8:18474:18511	514017	0	True				
ANR	516855	EqualityExpression	"strcmp ( Param , ""GraphicKPreserve"" ) == 0"		514017	0		==			
ANR	516856	CallExpression	"strcmp ( Param , ""GraphicKPreserve"" )"		514017	0					
ANR	516857	Callee	strcmp		514017	0					
ANR	516858	Identifier	strcmp		514017	0					
ANR	516859	ArgumentList	Param		514017	1					
ANR	516860	Argument	Param		514017	0					
ANR	516861	Identifier	Param		514017	0					
ANR	516862	Argument	"""GraphicKPreserve"""		514017	1					
ANR	516863	PrimaryExpression	"""GraphicKPreserve"""		514017	0					
ANR	516864	PrimaryExpression	0		514017	1					
ANR	516865	CompoundStatement		375:48:16199:16199	514017	1					
ANR	516866	ReturnStatement	"return param_write_int ( plist , ""GraphicKPreserve"" , ( const int * ) & ( blackpreserve [ 1 ] ) ) ;"	447:8:18524:18607	514017	0	True				
ANR	516867	CallExpression	"param_write_int ( plist , ""GraphicKPreserve"" , ( const int * ) & ( blackpreserve [ 1 ] ) )"		514017	0					
ANR	516868	Callee	param_write_int		514017	0					
ANR	516869	Identifier	param_write_int		514017	0					
ANR	516870	ArgumentList	plist		514017	1					
ANR	516871	Argument	plist		514017	0					
ANR	516872	Identifier	plist		514017	0					
ANR	516873	Argument	"""GraphicKPreserve"""		514017	1					
ANR	516874	PrimaryExpression	"""GraphicKPreserve"""		514017	0					
ANR	516875	Argument	( const int * ) & ( blackpreserve [ 1 ] )		514017	2					
ANR	516876	CastExpression	( const int * ) & ( blackpreserve [ 1 ] )		514017	0					
ANR	516877	CastTarget	const int *		514017	0					
ANR	516878	UnaryOperationExpression	& ( blackpreserve [ 1 ] )		514017	1					
ANR	516879	UnaryOperator	&		514017	0					
ANR	516880	ArrayIndexing	blackpreserve [ 1 ]		514017	1					
ANR	516881	Identifier	blackpreserve		514017	0					
ANR	516882	PrimaryExpression	1		514017	1					
ANR	516883	IfStatement	"if ( strcmp ( Param , ""ImageKPreserve"" ) == 0 )"		514017	79					
ANR	516884	Condition	"strcmp ( Param , ""ImageKPreserve"" ) == 0"	449:8:18623:18658	514017	0	True				
ANR	516885	EqualityExpression	"strcmp ( Param , ""ImageKPreserve"" ) == 0"		514017	0		==			
ANR	516886	CallExpression	"strcmp ( Param , ""ImageKPreserve"" )"		514017	0					
ANR	516887	Callee	strcmp		514017	0					
ANR	516888	Identifier	strcmp		514017	0					
ANR	516889	ArgumentList	Param		514017	1					
ANR	516890	Argument	Param		514017	0					
ANR	516891	Identifier	Param		514017	0					
ANR	516892	Argument	"""ImageKPreserve"""		514017	1					
ANR	516893	PrimaryExpression	"""ImageKPreserve"""		514017	0					
ANR	516894	PrimaryExpression	0		514017	1					
ANR	516895	CompoundStatement		378:46:16346:16346	514017	1					
ANR	516896	ReturnStatement	"return param_write_int ( plist , ""ImageKPreserve"" , ( const int * ) & ( blackpreserve [ 2 ] ) ) ;"	450:8:18671:18752	514017	0	True				
ANR	516897	CallExpression	"param_write_int ( plist , ""ImageKPreserve"" , ( const int * ) & ( blackpreserve [ 2 ] ) )"		514017	0					
ANR	516898	Callee	param_write_int		514017	0					
ANR	516899	Identifier	param_write_int		514017	0					
ANR	516900	ArgumentList	plist		514017	1					
ANR	516901	Argument	plist		514017	0					
ANR	516902	Identifier	plist		514017	0					
ANR	516903	Argument	"""ImageKPreserve"""		514017	1					
ANR	516904	PrimaryExpression	"""ImageKPreserve"""		514017	0					
ANR	516905	Argument	( const int * ) & ( blackpreserve [ 2 ] )		514017	2					
ANR	516906	CastExpression	( const int * ) & ( blackpreserve [ 2 ] )		514017	0					
ANR	516907	CastTarget	const int *		514017	0					
ANR	516908	UnaryOperationExpression	& ( blackpreserve [ 2 ] )		514017	1					
ANR	516909	UnaryOperator	&		514017	0					
ANR	516910	ArrayIndexing	blackpreserve [ 2 ]		514017	1					
ANR	516911	Identifier	blackpreserve		514017	0					
ANR	516912	PrimaryExpression	2		514017	1					
ANR	516913	IfStatement	"if ( strcmp ( Param , ""TextKPreserve"" ) == 0 )"		514017	80					
ANR	516914	Condition	"strcmp ( Param , ""TextKPreserve"" ) == 0"	452:8:18768:18802	514017	0	True				
ANR	516915	EqualityExpression	"strcmp ( Param , ""TextKPreserve"" ) == 0"		514017	0		==			
ANR	516916	CallExpression	"strcmp ( Param , ""TextKPreserve"" )"		514017	0					
ANR	516917	Callee	strcmp		514017	0					
ANR	516918	Identifier	strcmp		514017	0					
ANR	516919	ArgumentList	Param		514017	1					
ANR	516920	Argument	Param		514017	0					
ANR	516921	Identifier	Param		514017	0					
ANR	516922	Argument	"""TextKPreserve"""		514017	1					
ANR	516923	PrimaryExpression	"""TextKPreserve"""		514017	0					
ANR	516924	PrimaryExpression	0		514017	1					
ANR	516925	CompoundStatement		381:45:16490:16490	514017	1					
ANR	516926	ReturnStatement	"return param_write_int ( plist , ""TextKPreserve"" , ( const int * ) & ( blackpreserve [ 3 ] ) ) ;"	453:8:18815:18895	514017	0	True				
ANR	516927	CallExpression	"param_write_int ( plist , ""TextKPreserve"" , ( const int * ) & ( blackpreserve [ 3 ] ) )"		514017	0					
ANR	516928	Callee	param_write_int		514017	0					
ANR	516929	Identifier	param_write_int		514017	0					
ANR	516930	ArgumentList	plist		514017	1					
ANR	516931	Argument	plist		514017	0					
ANR	516932	Identifier	plist		514017	0					
ANR	516933	Argument	"""TextKPreserve"""		514017	1					
ANR	516934	PrimaryExpression	"""TextKPreserve"""		514017	0					
ANR	516935	Argument	( const int * ) & ( blackpreserve [ 3 ] )		514017	2					
ANR	516936	CastExpression	( const int * ) & ( blackpreserve [ 3 ] )		514017	0					
ANR	516937	CastTarget	const int *		514017	0					
ANR	516938	UnaryOperationExpression	& ( blackpreserve [ 3 ] )		514017	1					
ANR	516939	UnaryOperator	&		514017	0					
ANR	516940	ArrayIndexing	blackpreserve [ 3 ]		514017	1					
ANR	516941	Identifier	blackpreserve		514017	0					
ANR	516942	PrimaryExpression	3		514017	1					
ANR	516943	IfStatement	"if ( strcmp ( Param , ""FirstPage"" ) == 0 )"		514017	81					
ANR	516944	Condition	"strcmp ( Param , ""FirstPage"" ) == 0"	455:8:18911:18941	514017	0	True				
ANR	516945	EqualityExpression	"strcmp ( Param , ""FirstPage"" ) == 0"		514017	0		==			
ANR	516946	CallExpression	"strcmp ( Param , ""FirstPage"" )"		514017	0					
ANR	516947	Callee	strcmp		514017	0					
ANR	516948	Identifier	strcmp		514017	0					
ANR	516949	ArgumentList	Param		514017	1					
ANR	516950	Argument	Param		514017	0					
ANR	516951	Identifier	Param		514017	0					
ANR	516952	Argument	"""FirstPage"""		514017	1					
ANR	516953	PrimaryExpression	"""FirstPage"""		514017	0					
ANR	516954	PrimaryExpression	0		514017	1					
ANR	516955	CompoundStatement		384:41:16629:16629	514017	1					
ANR	516956	ReturnStatement	"return param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ;"	456:8:18954:19013	514017	0	True				
ANR	516957	CallExpression	"param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		514017	0					
ANR	516958	Callee	param_write_int		514017	0					
ANR	516959	Identifier	param_write_int		514017	0					
ANR	516960	ArgumentList	plist		514017	1					
ANR	516961	Argument	plist		514017	0					
ANR	516962	Identifier	plist		514017	0					
ANR	516963	Argument	"""FirstPage"""		514017	1					
ANR	516964	PrimaryExpression	"""FirstPage"""		514017	0					
ANR	516965	Argument	& dev -> FirstPage		514017	2					
ANR	516966	UnaryOperationExpression	& dev -> FirstPage		514017	0					
ANR	516967	UnaryOperator	&		514017	0					
ANR	516968	PtrMemberAccess	dev -> FirstPage		514017	1					
ANR	516969	Identifier	dev		514017	0					
ANR	516970	Identifier	FirstPage		514017	1					
ANR	516971	IfStatement	"if ( strcmp ( Param , ""LastPage"" ) == 0 )"		514017	82					
ANR	516972	Condition	"strcmp ( Param , ""LastPage"" ) == 0"	458:8:19029:19058	514017	0	True				
ANR	516973	EqualityExpression	"strcmp ( Param , ""LastPage"" ) == 0"		514017	0		==			
ANR	516974	CallExpression	"strcmp ( Param , ""LastPage"" )"		514017	0					
ANR	516975	Callee	strcmp		514017	0					
ANR	516976	Identifier	strcmp		514017	0					
ANR	516977	ArgumentList	Param		514017	1					
ANR	516978	Argument	Param		514017	0					
ANR	516979	Identifier	Param		514017	0					
ANR	516980	Argument	"""LastPage"""		514017	1					
ANR	516981	PrimaryExpression	"""LastPage"""		514017	0					
ANR	516982	PrimaryExpression	0		514017	1					
ANR	516983	CompoundStatement		387:40:16746:16746	514017	1					
ANR	516984	ReturnStatement	"return param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ;"	459:8:19071:19128	514017	0	True				
ANR	516985	CallExpression	"param_write_int ( plist , ""LastPage"" , & dev -> LastPage )"		514017	0					
ANR	516986	Callee	param_write_int		514017	0					
ANR	516987	Identifier	param_write_int		514017	0					
ANR	516988	ArgumentList	plist		514017	1					
ANR	516989	Argument	plist		514017	0					
ANR	516990	Identifier	plist		514017	0					
ANR	516991	Argument	"""LastPage"""		514017	1					
ANR	516992	PrimaryExpression	"""LastPage"""		514017	0					
ANR	516993	Argument	& dev -> LastPage		514017	2					
ANR	516994	UnaryOperationExpression	& dev -> LastPage		514017	0					
ANR	516995	UnaryOperator	&		514017	0					
ANR	516996	PtrMemberAccess	dev -> LastPage		514017	1					
ANR	516997	Identifier	dev		514017	0					
ANR	516998	Identifier	LastPage		514017	1					
ANR	516999	IfStatement	"if ( strcmp ( Param , ""DisablePageHandler"" ) == 0 )"		514017	83					
ANR	517000	Condition	"strcmp ( Param , ""DisablePageHandler"" ) == 0"	461:8:19144:19183	514017	0	True				
ANR	517001	EqualityExpression	"strcmp ( Param , ""DisablePageHandler"" ) == 0"		514017	0		==			
ANR	517002	CallExpression	"strcmp ( Param , ""DisablePageHandler"" )"		514017	0					
ANR	517003	Callee	strcmp		514017	0					
ANR	517004	Identifier	strcmp		514017	0					
ANR	517005	ArgumentList	Param		514017	1					
ANR	517006	Argument	Param		514017	0					
ANR	517007	Identifier	Param		514017	0					
ANR	517008	Argument	"""DisablePageHandler"""		514017	1					
ANR	517009	PrimaryExpression	"""DisablePageHandler"""		514017	0					
ANR	517010	PrimaryExpression	0		514017	1					
ANR	517011	CompoundStatement		390:50:16871:16871	514017	1					
ANR	517012	ExpressionStatement	temp_bool = dev -> DisablePageHandler	462:8:19196:19231	514017	0	True				
ANR	517013	AssignmentExpression	temp_bool = dev -> DisablePageHandler		514017	0		=			
ANR	517014	Identifier	temp_bool		514017	0					
ANR	517015	PtrMemberAccess	dev -> DisablePageHandler		514017	1					
ANR	517016	Identifier	dev		514017	0					
ANR	517017	Identifier	DisablePageHandler		514017	1					
ANR	517018	ReturnStatement	"return param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ;"	463:8:19241:19305	514017	1	True				
ANR	517019	CallExpression	"param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		514017	0					
ANR	517020	Callee	param_write_bool		514017	0					
ANR	517021	Identifier	param_write_bool		514017	0					
ANR	517022	ArgumentList	plist		514017	1					
ANR	517023	Argument	plist		514017	0					
ANR	517024	Identifier	plist		514017	0					
ANR	517025	Argument	"""DisablePageHandler"""		514017	1					
ANR	517026	PrimaryExpression	"""DisablePageHandler"""		514017	0					
ANR	517027	Argument	& temp_bool		514017	2					
ANR	517028	UnaryOperationExpression	& temp_bool		514017	0					
ANR	517029	UnaryOperator	&		514017	0					
ANR	517030	Identifier	temp_bool		514017	1					
ANR	517031	IfStatement	"if ( strcmp ( Param , ""PageList"" ) == 0 )"		514017	84					
ANR	517032	Condition	"strcmp ( Param , ""PageList"" ) == 0"	465:8:19321:19350	514017	0	True				
ANR	517033	EqualityExpression	"strcmp ( Param , ""PageList"" ) == 0"		514017	0		==			
ANR	517034	CallExpression	"strcmp ( Param , ""PageList"" )"		514017	0					
ANR	517035	Callee	strcmp		514017	0					
ANR	517036	Identifier	strcmp		514017	0					
ANR	517037	ArgumentList	Param		514017	1					
ANR	517038	Argument	Param		514017	0					
ANR	517039	Identifier	Param		514017	0					
ANR	517040	Argument	"""PageList"""		514017	1					
ANR	517041	PrimaryExpression	"""PageList"""		514017	0					
ANR	517042	PrimaryExpression	0		514017	1					
ANR	517043	CompoundStatement		395:8:17047:17071	514017	1					
ANR	517044	IdentifierDeclStatement	gs_param_string pagelist ;	466:8:19362:19386	514017	0	True				
ANR	517045	IdentifierDecl	pagelist		514017	0					
ANR	517046	IdentifierDeclType	gs_param_string		514017	0					
ANR	517047	Identifier	pagelist		514017	1					
ANR	517048	IfStatement	if ( dev -> PageList )		514017	1					
ANR	517049	Condition	dev -> PageList	467:12:19400:19412	514017	0	True				
ANR	517050	PtrMemberAccess	dev -> PageList		514017	0					
ANR	517051	Identifier	dev		514017	0					
ANR	517052	Identifier	PageList		514017	1					
ANR	517053	CompoundStatement		397:12:17114:17163	514017	1					
ANR	517054	IdentifierDeclStatement	gdev_pagelist * p = ( gdev_pagelist * ) dev -> PageList ;	468:12:19429:19478	514017	0	True				
ANR	517055	IdentifierDecl	* p = ( gdev_pagelist * ) dev -> PageList		514017	0					
ANR	517056	IdentifierDeclType	gdev_pagelist *		514017	0					
ANR	517057	Identifier	p		514017	1					
ANR	517058	AssignmentExpression	* p = ( gdev_pagelist * ) dev -> PageList		514017	2		=			
ANR	517059	Identifier	p		514017	0					
ANR	517060	CastExpression	( gdev_pagelist * ) dev -> PageList		514017	1					
ANR	517061	CastTarget	gdev_pagelist *		514017	0					
ANR	517062	PtrMemberAccess	dev -> PageList		514017	1					
ANR	517063	Identifier	dev		514017	0					
ANR	517064	Identifier	PageList		514017	1					
ANR	517065	ExpressionStatement	"param_string_from_string ( pagelist , p -> Pages )"	469:12:19492:19536	514017	1	True				
ANR	517066	CallExpression	"param_string_from_string ( pagelist , p -> Pages )"		514017	0					
ANR	517067	Callee	param_string_from_string		514017	0					
ANR	517068	Identifier	param_string_from_string		514017	0					
ANR	517069	ArgumentList	pagelist		514017	1					
ANR	517070	Argument	pagelist		514017	0					
ANR	517071	Identifier	pagelist		514017	0					
ANR	517072	Argument	p -> Pages		514017	1					
ANR	517073	PtrMemberAccess	p -> Pages		514017	0					
ANR	517074	Identifier	p		514017	0					
ANR	517075	Identifier	Pages		514017	1					
ANR	517076	ElseStatement	else		514017	0					
ANR	517077	ExpressionStatement	"param_string_from_string ( pagelist , null_str )"	472:12:19573:19617	514017	0	True				
ANR	517078	CallExpression	"param_string_from_string ( pagelist , null_str )"		514017	0					
ANR	517079	Callee	param_string_from_string		514017	0					
ANR	517080	Identifier	param_string_from_string		514017	0					
ANR	517081	ArgumentList	pagelist		514017	1					
ANR	517082	Argument	pagelist		514017	0					
ANR	517083	Identifier	pagelist		514017	0					
ANR	517084	Argument	null_str		514017	1					
ANR	517085	Identifier	null_str		514017	0					
ANR	517086	ReturnStatement	"return param_write_string ( plist , ""PageList"" , & pagelist ) ;"	473:8:19627:19682	514017	2	True				
ANR	517087	CallExpression	"param_write_string ( plist , ""PageList"" , & pagelist )"		514017	0					
ANR	517088	Callee	param_write_string		514017	0					
ANR	517089	Identifier	param_write_string		514017	0					
ANR	517090	ArgumentList	plist		514017	1					
ANR	517091	Argument	plist		514017	0					
ANR	517092	Identifier	plist		514017	0					
ANR	517093	Argument	"""PageList"""		514017	1					
ANR	517094	PrimaryExpression	"""PageList"""		514017	0					
ANR	517095	Argument	& pagelist		514017	2					
ANR	517096	UnaryOperationExpression	& pagelist		514017	0					
ANR	517097	UnaryOperator	&		514017	0					
ANR	517098	Identifier	pagelist		514017	1					
ANR	517099	IfStatement	"if ( strcmp ( Param , ""FILTERIMAGE"" ) == 0 )"		514017	85					
ANR	517100	Condition	"strcmp ( Param , ""FILTERIMAGE"" ) == 0"	475:8:19698:19730	514017	0	True				
ANR	517101	EqualityExpression	"strcmp ( Param , ""FILTERIMAGE"" ) == 0"		514017	0		==			
ANR	517102	CallExpression	"strcmp ( Param , ""FILTERIMAGE"" )"		514017	0					
ANR	517103	Callee	strcmp		514017	0					
ANR	517104	Identifier	strcmp		514017	0					
ANR	517105	ArgumentList	Param		514017	1					
ANR	517106	Argument	Param		514017	0					
ANR	517107	Identifier	Param		514017	0					
ANR	517108	Argument	"""FILTERIMAGE"""		514017	1					
ANR	517109	PrimaryExpression	"""FILTERIMAGE"""		514017	0					
ANR	517110	PrimaryExpression	0		514017	1					
ANR	517111	CompoundStatement		404:43:17418:17418	514017	1					
ANR	517112	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERIMAGE	476:8:19743:19786	514017	0	True				
ANR	517113	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERIMAGE		514017	0		=			
ANR	517114	Identifier	temp_bool		514017	0					
ANR	517115	BitAndExpression	dev -> ObjectFilter & FILTERIMAGE		514017	1		&			
ANR	517116	PtrMemberAccess	dev -> ObjectFilter		514017	0					
ANR	517117	Identifier	dev		514017	0					
ANR	517118	Identifier	ObjectFilter		514017	1					
ANR	517119	Identifier	FILTERIMAGE		514017	1					
ANR	517120	ReturnStatement	"return param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ;"	477:8:19796:19853	514017	1	True				
ANR	517121	CallExpression	"param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		514017	0					
ANR	517122	Callee	param_write_bool		514017	0					
ANR	517123	Identifier	param_write_bool		514017	0					
ANR	517124	ArgumentList	plist		514017	1					
ANR	517125	Argument	plist		514017	0					
ANR	517126	Identifier	plist		514017	0					
ANR	517127	Argument	"""FILTERIMAGE"""		514017	1					
ANR	517128	PrimaryExpression	"""FILTERIMAGE"""		514017	0					
ANR	517129	Argument	& temp_bool		514017	2					
ANR	517130	UnaryOperationExpression	& temp_bool		514017	0					
ANR	517131	UnaryOperator	&		514017	0					
ANR	517132	Identifier	temp_bool		514017	1					
ANR	517133	IfStatement	"if ( strcmp ( Param , ""FILTERTEXT"" ) == 0 )"		514017	86					
ANR	517134	Condition	"strcmp ( Param , ""FILTERTEXT"" ) == 0"	479:8:19869:19900	514017	0	True				
ANR	517135	EqualityExpression	"strcmp ( Param , ""FILTERTEXT"" ) == 0"		514017	0		==			
ANR	517136	CallExpression	"strcmp ( Param , ""FILTERTEXT"" )"		514017	0					
ANR	517137	Callee	strcmp		514017	0					
ANR	517138	Identifier	strcmp		514017	0					
ANR	517139	ArgumentList	Param		514017	1					
ANR	517140	Argument	Param		514017	0					
ANR	517141	Identifier	Param		514017	0					
ANR	517142	Argument	"""FILTERTEXT"""		514017	1					
ANR	517143	PrimaryExpression	"""FILTERTEXT"""		514017	0					
ANR	517144	PrimaryExpression	0		514017	1					
ANR	517145	CompoundStatement		408:42:17588:17588	514017	1					
ANR	517146	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERTEXT	480:8:19913:19955	514017	0	True				
ANR	517147	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERTEXT		514017	0		=			
ANR	517148	Identifier	temp_bool		514017	0					
ANR	517149	BitAndExpression	dev -> ObjectFilter & FILTERTEXT		514017	1		&			
ANR	517150	PtrMemberAccess	dev -> ObjectFilter		514017	0					
ANR	517151	Identifier	dev		514017	0					
ANR	517152	Identifier	ObjectFilter		514017	1					
ANR	517153	Identifier	FILTERTEXT		514017	1					
ANR	517154	ReturnStatement	"return param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ;"	481:8:19965:20021	514017	1	True				
ANR	517155	CallExpression	"param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		514017	0					
ANR	517156	Callee	param_write_bool		514017	0					
ANR	517157	Identifier	param_write_bool		514017	0					
ANR	517158	ArgumentList	plist		514017	1					
ANR	517159	Argument	plist		514017	0					
ANR	517160	Identifier	plist		514017	0					
ANR	517161	Argument	"""FILTERTEXT"""		514017	1					
ANR	517162	PrimaryExpression	"""FILTERTEXT"""		514017	0					
ANR	517163	Argument	& temp_bool		514017	2					
ANR	517164	UnaryOperationExpression	& temp_bool		514017	0					
ANR	517165	UnaryOperator	&		514017	0					
ANR	517166	Identifier	temp_bool		514017	1					
ANR	517167	IfStatement	"if ( strcmp ( Param , ""FILTERVECTOR"" ) == 0 )"		514017	87					
ANR	517168	Condition	"strcmp ( Param , ""FILTERVECTOR"" ) == 0"	483:8:20037:20070	514017	0	True				
ANR	517169	EqualityExpression	"strcmp ( Param , ""FILTERVECTOR"" ) == 0"		514017	0		==			
ANR	517170	CallExpression	"strcmp ( Param , ""FILTERVECTOR"" )"		514017	0					
ANR	517171	Callee	strcmp		514017	0					
ANR	517172	Identifier	strcmp		514017	0					
ANR	517173	ArgumentList	Param		514017	1					
ANR	517174	Argument	Param		514017	0					
ANR	517175	Identifier	Param		514017	0					
ANR	517176	Argument	"""FILTERVECTOR"""		514017	1					
ANR	517177	PrimaryExpression	"""FILTERVECTOR"""		514017	0					
ANR	517178	PrimaryExpression	0		514017	1					
ANR	517179	CompoundStatement		412:44:17758:17758	514017	1					
ANR	517180	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERVECTOR	484:8:20083:20127	514017	0	True				
ANR	517181	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERVECTOR		514017	0		=			
ANR	517182	Identifier	temp_bool		514017	0					
ANR	517183	BitAndExpression	dev -> ObjectFilter & FILTERVECTOR		514017	1		&			
ANR	517184	PtrMemberAccess	dev -> ObjectFilter		514017	0					
ANR	517185	Identifier	dev		514017	0					
ANR	517186	Identifier	ObjectFilter		514017	1					
ANR	517187	Identifier	FILTERVECTOR		514017	1					
ANR	517188	ReturnStatement	"return param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ;"	485:8:20137:20195	514017	1	True				
ANR	517189	CallExpression	"param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		514017	0					
ANR	517190	Callee	param_write_bool		514017	0					
ANR	517191	Identifier	param_write_bool		514017	0					
ANR	517192	ArgumentList	plist		514017	1					
ANR	517193	Argument	plist		514017	0					
ANR	517194	Identifier	plist		514017	0					
ANR	517195	Argument	"""FILTERVECTOR"""		514017	1					
ANR	517196	PrimaryExpression	"""FILTERVECTOR"""		514017	0					
ANR	517197	Argument	& temp_bool		514017	2					
ANR	517198	UnaryOperationExpression	& temp_bool		514017	0					
ANR	517199	UnaryOperator	&		514017	0					
ANR	517200	Identifier	temp_bool		514017	1					
ANR	517201	ExpressionStatement	return_error ( gs_error_undefined )	488:4:20208:20240	514017	88	True				
ANR	517202	CallExpression	return_error ( gs_error_undefined )		514017	0					
ANR	517203	Callee	return_error		514017	0					
ANR	517204	Identifier	return_error		514017	0					
ANR	517205	ArgumentList	gs_error_undefined		514017	1					
ANR	517206	Argument	gs_error_undefined		514017	0					
ANR	517207	Identifier	gs_error_undefined		514017	0					
ANR	517208	ReturnType	int		514017	1					
ANR	517209	Identifier	gx_default_get_param		514017	2					
ANR	517210	ParameterList	"gx_device * dev , char * Param , void * list"		514017	3					
ANR	517211	Parameter	gx_device * dev	71:25:2273:2286	514017	0	True				
ANR	517212	ParameterType	gx_device *		514017	0					
ANR	517213	Identifier	dev		514017	1					
ANR	517214	Parameter	char * Param	71:41:2289:2299	514017	1	True				
ANR	517215	ParameterType	char *		514017	0					
ANR	517216	Identifier	Param		514017	1					
ANR	517217	Parameter	void * list	71:54:2302:2311	514017	2	True				
ANR	517218	ParameterType	void *		514017	0					
ANR	517219	Identifier	list		514017	1					
ANR	517220	CFGEntryNode	ENTRY		514017		True				
ANR	517221	CFGExitNode	EXIT		514017		True				
ANR	517222	Symbol	hwcms . data		514017						
ANR	517223	Symbol	& dev -> page_uses_transparency		514017						
ANR	517224	Symbol	blend_profile		514017						
ANR	517225	Symbol	& dns		514017						
ANR	517226	Symbol	* cms		514017						
ANR	517227	Symbol	p -> Pages		514017						
ANR	517228	Symbol	dev		514017						
ANR	517229	Symbol	palette		514017						
ANR	517230	Symbol	& ibba		514017						
ANR	517231	Symbol	devicegraytok		514017						
ANR	517232	Symbol	icc_colorants		514017						
ANR	517233	Symbol	dev -> color_info . num_components		514017						
ANR	517234	Symbol	gsicc_init_device_profile_struct		514017						
ANR	517235	Symbol	& proof_profile		514017						
ANR	517236	Symbol	profile_array		514017						
ANR	517237	Symbol	hwcms		514017						
ANR	517238	Symbol	param_write_name		514017						
ANR	517239	Symbol	MAX_COLOR_ACCURACY		514017						
ANR	517240	Symbol	& depth		514017						
ANR	517241	Symbol	& dev -> space_params . band . BandHeight		514017						
ANR	517242	Symbol	gsBPNOTSPECIFIED		514017						
ANR	517243	Symbol	scna		514017						
ANR	517244	Symbol	& leadingedge		514017						
ANR	517245	Symbol	* dev_profile -> link_profile		514017						
ANR	517246	Symbol	param_HWColorMap		514017						
ANR	517247	Symbol	param_write_long		514017						
ANR	517248	Symbol	ColorValues		514017						
ANR	517249	Symbol	& color_accuracy		514017						
ANR	517250	Symbol	& dev -> FirstPage		514017						
ANR	517251	Symbol	dev_profile -> device_profile		514017						
ANR	517252	Symbol	* dev_proc		514017						
ANR	517253	Symbol	dev -> Margins		514017						
ANR	517254	Symbol	* dev_profile -> blend_profile		514017						
ANR	517255	Symbol	dev -> color_info		514017						
ANR	517256	Symbol	& link_profile		514017						
ANR	517257	Symbol	colors		514017						
ANR	517258	Symbol	hwcms . persistent		514017						
ANR	517259	Symbol	& hwma		514017						
ANR	517260	Symbol	& dev -> color_info . use_antidropout_downscaler		514017						
ANR	517261	Symbol	dev_profile -> blend_profile -> name		514017						
ANR	517262	Symbol	dev -> ImagingBBox		514017						
ANR	517263	Symbol	dev_profile -> rendercond [ k ] . black_point_comp		514017						
ANR	517264	Symbol	dev_profile -> link_profile -> name		514017						
ANR	517265	Symbol	& pcms		514017						
ANR	517266	Symbol	& dev -> space_params . band		514017						
ANR	517267	Symbol	dev_profile -> device_profile [ k ] -> name		514017						
ANR	517268	Symbol	dev_profile -> spotnames		514017						
ANR	517269	Symbol	a		514017						
ANR	517270	Symbol	usefastcolor		514017						
ANR	517271	Symbol	* * * dev_profile		514017						
ANR	517272	Symbol	d		514017						
ANR	517273	Symbol	k		514017						
ANR	517274	Symbol	gsRINOTSPECIFIED		514017						
ANR	517275	Symbol	dev -> HWResolution		514017						
ANR	517276	Symbol	p		514017						
ANR	517277	Symbol	s		514017						
ANR	517278	Symbol	& temp_bool		514017						
ANR	517279	Symbol	LEADINGEDGE_MASK		514017						
ANR	517280	Symbol	dev -> LeadingEdge		514017						
ANR	517281	Symbol	* * dev_profile		514017						
ANR	517282	Symbol	dev_profile -> link_profile		514017						
ANR	517283	Symbol	HWSize		514017						
ANR	517284	Symbol	sim_overprint		514017						
ANR	517285	Symbol	& GrayValues		514017						
ANR	517286	Symbol	dev_profile		514017						
ANR	517287	Symbol	gs_error_undefined		514017						
ANR	517288	Symbol	param_write_name_array		514017						
ANR	517289	Symbol	& RGBValues		514017						
ANR	517290	Symbol	& dev -> IgnoreNumCopies		514017						
ANR	517291	Symbol	FILTERVECTOR		514017						
ANR	517292	Symbol	leadingedge		514017						
ANR	517293	Symbol	dev -> MediaSize		514017						
ANR	517294	Symbol	* * k		514017						
ANR	517295	Symbol	& msa		514017						
ANR	517296	Symbol	& dev -> color_info . anti_alias		514017						
ANR	517297	Symbol	gsBKPRESNOTSPECIFIED		514017						
ANR	517298	Symbol	list		514017						
ANR	517299	Symbol	& dev -> space_params . MaxBitmap		514017						
ANR	517300	Symbol	& sim_overprint		514017						
ANR	517301	Symbol	a . size		514017						
ANR	517302	Symbol	FILTERTEXT		514017						
ANR	517303	Symbol	& dev -> LockSafetyParams		514017						
ANR	517304	Symbol	dev_profile -> proof_profile		514017						
ANR	517305	Symbol	hwma		514017						
ANR	517306	Symbol	hwcms . size		514017						
ANR	517307	Symbol	dev_proc		514017						
ANR	517308	Symbol	blackptcomps		514017						
ANR	517309	Symbol	param_write_int		514017						
ANR	517310	Symbol	& pagelist		514017						
ANR	517311	Symbol	dev -> NumCopies_set		514017						
ANR	517312	Symbol	dev_profile -> postren_profile		514017						
ANR	517313	Symbol	& ColorValues		514017						
ANR	517314	Symbol	false		514017						
ANR	517315	Symbol	pagelist		514017						
ANR	517316	Symbol	dev -> interpolate_control		514017						
ANR	517317	Symbol	dev_profile -> rendercond		514017						
ANR	517318	Symbol	pcms		514017						
ANR	517319	Symbol	color_accuracy		514017						
ANR	517320	Symbol	* profile_array		514017						
ANR	517321	Symbol	dev_profile -> proof_profile -> name		514017						
ANR	517322	Symbol	* dev_profile -> rendercond		514017						
ANR	517323	Symbol	& prebandthreshold		514017						
ANR	517324	Symbol	Param		514017						
ANR	517325	Symbol	"* dev_proc ( dev , get_page_device )"		514017						
ANR	517326	Symbol	dev_profile -> postren_profile -> name		514017						
ANR	517327	Symbol	dev -> HWMargins		514017						
ANR	517328	Symbol	dev -> color_info . max_components		514017						
ANR	517329	Symbol	temp_bool		514017						
ANR	517330	Symbol	FILTERIMAGE		514017						
ANR	517331	Symbol	& icc_colorants		514017						
ANR	517332	Symbol	param_write_string		514017						
ANR	517333	Symbol	null_str		514017						
ANR	517334	Symbol	dev -> ImagingBBox_set		514017						
ANR	517335	Symbol	LEADINGEDGE_SET_MASK		514017						
ANR	517336	Symbol	dev -> color_info . max_color		514017						
ANR	517337	Symbol	& dev_profile		514017						
ANR	517338	Symbol	* dev_profile		514017						
ANR	517339	Symbol	& postren_profile		514017						
ANR	517340	Symbol	dns		514017						
ANR	517341	Symbol	* dev_profile -> proof_profile		514017						
ANR	517342	Symbol	ibba		514017						
ANR	517343	Symbol	param_write_null		514017						
ANR	517344	Symbol	RGBValues		514017						
ANR	517345	Symbol	dev -> DisablePageHandler		514017						
ANR	517346	Symbol	& dev -> UseCIEColor		514017						
ANR	517347	Symbol	& dev -> color_info . anti_alias . text_bits		514017						
ANR	517348	Symbol	& dev -> space_params . BufferSpace		514017						
ANR	517349	Symbol	* dev_profile -> postren_profile		514017						
ANR	517350	Symbol	* dev		514017						
ANR	517351	Symbol	prebandthreshold		514017						
ANR	517352	Symbol	dev -> height		514017						
ANR	517353	Symbol	& blend_profile		514017						
ANR	517354	Symbol	cms		514017						
ANR	517355	Symbol	& dev -> NumCopies		514017						
ANR	517356	Symbol	* profile_intents		514017						
ANR	517357	Symbol	dev -> color_info . depth		514017						
ANR	517358	Symbol	hwra		514017						
ANR	517359	Symbol	plist		514017						
ANR	517360	Symbol	dev -> ObjectFilter		514017						
ANR	517361	Symbol	colorant_names		514017						
ANR	517362	Symbol	& usefastcolor		514017						
ANR	517363	Symbol	max_sep		514017						
ANR	517364	Symbol	dev -> color_info . max_gray		514017						
ANR	517365	Symbol	& dev -> color_info		514017						
ANR	517366	Symbol	* * dev_profile -> device_profile		514017						
ANR	517367	Symbol	& devicegraytok		514017						
ANR	517368	Symbol	& dev -> space_params . band . BandWidth		514017						
ANR	517369	Symbol	a . persistent		514017						
ANR	517370	Symbol	link_profile		514017						
ANR	517371	Symbol	get_process_color_model_name		514017						
ANR	517372	Symbol	& dev -> color_info . anti_alias . graphics_bits		514017						
ANR	517373	Symbol	gsicc_get_dev_icccolorants		514017						
ANR	517374	Symbol	dev_profile -> usefastcolor		514017						
ANR	517375	Symbol	& graydetection		514017						
ANR	517376	Symbol	& scna		514017						
ANR	517377	Symbol	set_param_array		514017						
ANR	517378	Symbol	a . data		514017						
ANR	517379	Symbol	depth		514017						
ANR	517380	Symbol	msa		514017						
ANR	517381	Symbol	proof_profile		514017						
ANR	517382	Symbol	dev -> space_params		514017						
ANR	517383	Symbol	* dev_profile -> device_profile		514017						
ANR	517384	Symbol	dev_profile -> rendercond [ k ] . rendering_intent		514017						
ANR	517385	Symbol	ma		514017						
ANR	517386	Symbol	NUM_DEVICE_PROFILES		514017						
ANR	517387	Symbol	dev_profile -> devicegraytok		514017						
ANR	517388	Symbol	dev -> PageList		514017						
ANR	517389	Symbol	graydetection		514017						
ANR	517390	Symbol	seprs		514017						
ANR	517391	Symbol	& hwsa		514017						
ANR	517392	Symbol	& interpolate_control		514017						
ANR	517393	Symbol	strcmp		514017						
ANR	517394	Symbol	dev -> color_info . anti_alias		514017						
ANR	517395	Symbol	& dev -> space_params . band . BandBufferSpace		514017						
ANR	517396	Symbol	NULL		514017						
ANR	517397	Symbol	profile_intents		514017						
ANR	517398	Symbol	& max_sep		514017						
ANR	517399	Symbol	hwsa		514017						
ANR	517400	Symbol	get_page_device		514017						
ANR	517401	Symbol	dev -> space_params . band		514017						
ANR	517402	Symbol	& dev -> MaxPatternBitmap		514017						
ANR	517403	Symbol	* blackpreserve		514017						
ANR	517404	Symbol	true		514017						
ANR	517405	Symbol	dev_profile -> blend_profile		514017						
ANR	517406	Symbol	param_write_float_array		514017						
ANR	517407	Symbol	& dev -> PageCount		514017						
ANR	517408	Symbol	& dev -> space_params		514017						
ANR	517409	Symbol	postren_profile		514017						
ANR	517410	Symbol	dev_profile -> graydetection		514017						
ANR	517411	Symbol	GrayValues		514017						
ANR	517412	Symbol	code		514017						
ANR	517413	Symbol	dev -> dname		514017						
ANR	517414	Symbol	& dev -> LastPage		514017						
ANR	517415	Symbol	dev_profile -> sim_overprint		514017						
ANR	517416	Symbol	param_write_bool		514017						
ANR	517417	Symbol	interpolate_control		514017						
ANR	517418	Symbol	param_write_int_array		514017						
ANR	517419	Symbol	& colors		514017						
ANR	517420	Symbol	& hwcms		514017						
ANR	517421	Symbol	get_profile		514017						
ANR	517422	Symbol	& ma		514017						
ANR	517423	Symbol	blackpreserve		514017						
ANR	517424	Symbol	* HWSize		514017						
ANR	517425	Symbol	& seprs		514017						
ANR	517426	Symbol	* blackptcomps		514017						
ANR	517427	Symbol	dev_profile -> rendercond [ k ] . preserve_black		514017						
ANR	517428	Symbol	dev_profile -> prebandthreshold		514017						
ANR	517429	Symbol	& hwra		514017						
ANR	517430	Symbol	dev -> width		514017						
ANR	517431	Symbol	* k		514017						
ANR	517432	Symbol	* p		514017						
ANR	517433	Function	gx_default_get_params	492:0:20276:35493							
ANR	517434	FunctionDef	"gx_default_get_params (gx_device * dev , gs_param_list * plist)"		517433	0					
ANR	517435	CompoundStatement		494:0:20342:35493	517433	0					
ANR	517436	IdentifierDeclStatement	int code ;	495:4:20348:20356	517433	0	True				
ANR	517437	IdentifierDecl	code		517433	0					
ANR	517438	IdentifierDeclType	int		517433	0					
ANR	517439	Identifier	code		517433	1					
ANR	517440	IdentifierDeclStatement	bool seprs = false ;	499:4:20407:20425	517433	1	True				
ANR	517441	IdentifierDecl	seprs = false		517433	0					
ANR	517442	IdentifierDeclType	bool		517433	0					
ANR	517443	Identifier	seprs		517433	1					
ANR	517444	AssignmentExpression	seprs = false		517433	2		=			
ANR	517445	Identifier	false		517433	0					
ANR	517446	Identifier	false		517433	1					
ANR	517447	IdentifierDeclStatement	"gs_param_string dns , pcms , profile_array [ NUM_DEVICE_PROFILES ] ;"	500:4:20431:20492	517433	2	True				
ANR	517448	IdentifierDecl	dns		517433	0					
ANR	517449	IdentifierDeclType	gs_param_string		517433	0					
ANR	517450	Identifier	dns		517433	1					
ANR	517451	IdentifierDecl	pcms		517433	1					
ANR	517452	IdentifierDeclType	gs_param_string		517433	0					
ANR	517453	Identifier	pcms		517433	1					
ANR	517454	IdentifierDecl	profile_array [ NUM_DEVICE_PROFILES ]		517433	2					
ANR	517455	IdentifierDeclType	gs_param_string [ NUM_DEVICE_PROFILES ]		517433	0					
ANR	517456	Identifier	profile_array		517433	1					
ANR	517457	Identifier	NUM_DEVICE_PROFILES		517433	2					
ANR	517458	IdentifierDeclStatement	"gs_param_string blend_profile , postren_profile , pagelist ;"	501:4:20498:20554	517433	3	True				
ANR	517459	IdentifierDecl	blend_profile		517433	0					
ANR	517460	IdentifierDeclType	gs_param_string		517433	0					
ANR	517461	Identifier	blend_profile		517433	1					
ANR	517462	IdentifierDecl	postren_profile		517433	1					
ANR	517463	IdentifierDeclType	gs_param_string		517433	0					
ANR	517464	Identifier	postren_profile		517433	1					
ANR	517465	IdentifierDecl	pagelist		517433	2					
ANR	517466	IdentifierDeclType	gs_param_string		517433	0					
ANR	517467	Identifier	pagelist		517433	1					
ANR	517468	IdentifierDeclStatement	"gs_param_string proof_profile , link_profile , icc_colorants ;"	502:4:20560:20618	517433	4	True				
ANR	517469	IdentifierDecl	proof_profile		517433	0					
ANR	517470	IdentifierDeclType	gs_param_string		517433	0					
ANR	517471	Identifier	proof_profile		517433	1					
ANR	517472	IdentifierDecl	link_profile		517433	1					
ANR	517473	IdentifierDeclType	gs_param_string		517433	0					
ANR	517474	Identifier	link_profile		517433	1					
ANR	517475	IdentifierDecl	icc_colorants		517433	2					
ANR	517476	IdentifierDeclType	gs_param_string		517433	0					
ANR	517477	Identifier	icc_colorants		517433	1					
ANR	517478	IdentifierDeclStatement	gsicc_rendering_intents_t profile_intents [ NUM_DEVICE_PROFILES ] ;	503:4:20624:20686	517433	5	True				
ANR	517479	IdentifierDecl	profile_intents [ NUM_DEVICE_PROFILES ]		517433	0					
ANR	517480	IdentifierDeclType	gsicc_rendering_intents_t [ NUM_DEVICE_PROFILES ]		517433	0					
ANR	517481	Identifier	profile_intents		517433	1					
ANR	517482	Identifier	NUM_DEVICE_PROFILES		517433	2					
ANR	517483	IdentifierDeclStatement	gsicc_blackptcomp_t blackptcomps [ NUM_DEVICE_PROFILES ] ;	504:4:20692:20745	517433	6	True				
ANR	517484	IdentifierDecl	blackptcomps [ NUM_DEVICE_PROFILES ]		517433	0					
ANR	517485	IdentifierDeclType	gsicc_blackptcomp_t [ NUM_DEVICE_PROFILES ]		517433	0					
ANR	517486	Identifier	blackptcomps		517433	1					
ANR	517487	Identifier	NUM_DEVICE_PROFILES		517433	2					
ANR	517488	IdentifierDeclStatement	gsicc_blackpreserve_t blackpreserve [ NUM_DEVICE_PROFILES ] ;	505:4:20751:20807	517433	7	True				
ANR	517489	IdentifierDecl	blackpreserve [ NUM_DEVICE_PROFILES ]		517433	0					
ANR	517490	IdentifierDeclType	gsicc_blackpreserve_t [ NUM_DEVICE_PROFILES ]		517433	0					
ANR	517491	Identifier	blackpreserve		517433	1					
ANR	517492	Identifier	NUM_DEVICE_PROFILES		517433	2					
ANR	517493	IdentifierDeclStatement	bool devicegraytok = true ;	506:4:20813:20838	517433	8	True				
ANR	517494	IdentifierDecl	devicegraytok = true		517433	0					
ANR	517495	IdentifierDeclType	bool		517433	0					
ANR	517496	Identifier	devicegraytok		517433	1					
ANR	517497	AssignmentExpression	devicegraytok = true		517433	2		=			
ANR	517498	Identifier	true		517433	0					
ANR	517499	Identifier	true		517433	1					
ANR	517500	IdentifierDeclStatement	bool graydetection = false ;	507:4:20891:20917	517433	9	True				
ANR	517501	IdentifierDecl	graydetection = false		517433	0					
ANR	517502	IdentifierDeclType	bool		517433	0					
ANR	517503	Identifier	graydetection		517433	1					
ANR	517504	AssignmentExpression	graydetection = false		517433	2		=			
ANR	517505	Identifier	false		517433	0					
ANR	517506	Identifier	false		517433	1					
ANR	517507	IdentifierDeclStatement	bool usefastcolor = false ;	508:4:20923:20948	517433	10	True				
ANR	517508	IdentifierDecl	usefastcolor = false		517433	0					
ANR	517509	IdentifierDeclType	bool		517433	0					
ANR	517510	Identifier	usefastcolor		517433	1					
ANR	517511	AssignmentExpression	usefastcolor = false		517433	2		=			
ANR	517512	Identifier	false		517433	0					
ANR	517513	Identifier	false		517433	1					
ANR	517514	IdentifierDeclStatement	bool sim_overprint = false ;	509:4:20985:21011	517433	11	True				
ANR	517515	IdentifierDecl	sim_overprint = false		517433	0					
ANR	517516	IdentifierDeclType	bool		517433	0					
ANR	517517	Identifier	sim_overprint		517433	1					
ANR	517518	AssignmentExpression	sim_overprint = false		517433	2		=			
ANR	517519	Identifier	false		517433	0					
ANR	517520	Identifier	false		517433	1					
ANR	517521	IdentifierDeclStatement	"bool prebandthreshold = true , temp_bool ;"	510:4:21064:21103	517433	12	True				
ANR	517522	IdentifierDecl	prebandthreshold = true		517433	0					
ANR	517523	IdentifierDeclType	bool		517433	0					
ANR	517524	Identifier	prebandthreshold		517433	1					
ANR	517525	AssignmentExpression	prebandthreshold = true		517433	2		=			
ANR	517526	Identifier	true		517433	0					
ANR	517527	Identifier	true		517433	1					
ANR	517528	IdentifierDecl	temp_bool		517433	1					
ANR	517529	IdentifierDeclType	bool		517433	0					
ANR	517530	Identifier	temp_bool		517433	1					
ANR	517531	IdentifierDeclStatement	int k ;	511:4:21109:21114	517433	13	True				
ANR	517532	IdentifierDecl	k		517433	0					
ANR	517533	IdentifierDeclType	int		517433	0					
ANR	517534	Identifier	k		517433	1					
ANR	517535	IdentifierDeclStatement	int color_accuracy = MAX_COLOR_ACCURACY ;	512:4:21120:21159	517433	14	True				
ANR	517536	IdentifierDecl	color_accuracy = MAX_COLOR_ACCURACY		517433	0					
ANR	517537	IdentifierDeclType	int		517433	0					
ANR	517538	Identifier	color_accuracy		517433	1					
ANR	517539	AssignmentExpression	color_accuracy = MAX_COLOR_ACCURACY		517433	2		=			
ANR	517540	Identifier	MAX_COLOR_ACCURACY		517433	0					
ANR	517541	Identifier	MAX_COLOR_ACCURACY		517433	1					
ANR	517542	IdentifierDeclStatement	"gs_param_float_array msa , ibba , hwra , ma ;"	513:4:21165:21205	517433	15	True				
ANR	517543	IdentifierDecl	msa		517433	0					
ANR	517544	IdentifierDeclType	gs_param_float_array		517433	0					
ANR	517545	Identifier	msa		517433	1					
ANR	517546	IdentifierDecl	ibba		517433	1					
ANR	517547	IdentifierDeclType	gs_param_float_array		517433	0					
ANR	517548	Identifier	ibba		517433	1					
ANR	517549	IdentifierDecl	hwra		517433	2					
ANR	517550	IdentifierDeclType	gs_param_float_array		517433	0					
ANR	517551	Identifier	hwra		517433	1					
ANR	517552	IdentifierDecl	ma		517433	3					
ANR	517553	IdentifierDeclType	gs_param_float_array		517433	0					
ANR	517554	Identifier	ma		517433	1					
ANR	517555	IdentifierDeclStatement	gs_param_string_array scna ;	514:4:21211:21237	517433	16	True				
ANR	517556	IdentifierDecl	scna		517433	0					
ANR	517557	IdentifierDeclType	gs_param_string_array		517433	0					
ANR	517558	Identifier	scna		517433	1					
ANR	517559	IdentifierDeclStatement	char null_str [ 1 ] = { '\\0' } ;	515:4:21243:21266	517433	17	True				
ANR	517560	IdentifierDecl	null_str [ 1 ] = { '\\0' }		517433	0					
ANR	517561	IdentifierDeclType	char [ 1 ]		517433	0					
ANR	517562	Identifier	null_str		517433	1					
ANR	517563	PrimaryExpression	1		517433	2					
ANR	517564	AssignmentExpression	null_str [ 1 ] = { '\\0' }		517433	3		=			
ANR	517565	Identifier	null_str		517433	0					
ANR	517566	InitializerList	'\\0'		517433	1					
ANR	517567	PrimaryExpression	'\\0'		517433	0					
ANR	517568	IdentifierDeclStatement	"define set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false ) ;"	517:1:21270:21351	517433	18	True				
ANR	517569	IdentifierDecl	"set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false )"		517433	0					
ANR	517570	IdentifierDeclType	"define ( a , d , s )"		517433	0					
ANR	517571	Identifier	set_param_array		517433	1					
ANR	517572	Expression	"a . data = d , a . size = s , a . persistent = false"		517433	2					
ANR	517573	AssignmentExpression	a . data = d		517433	0		=			
ANR	517574	MemberAccess	a . data		517433	0					
ANR	517575	Identifier	a		517433	0					
ANR	517576	Identifier	data		517433	1					
ANR	517577	Identifier	d		517433	1					
ANR	517578	Expression	"a . size = s , a . persistent = false"		517433	1					
ANR	517579	AssignmentExpression	a . size = s		517433	0		=			
ANR	517580	MemberAccess	a . size		517433	0					
ANR	517581	Identifier	a		517433	0					
ANR	517582	Identifier	size		517433	1					
ANR	517583	Identifier	s		517433	1					
ANR	517584	AssignmentExpression	a . persistent = false		517433	1		=			
ANR	517585	MemberAccess	a . persistent		517433	0					
ANR	517586	Identifier	a		517433	0					
ANR	517587	Identifier	persistent		517433	1					
ANR	517588	Identifier	false		517433	1					
ANR	517589	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	521:4:21393:21436	517433	19	True				
ANR	517590	IdentifierDecl	colors = dev -> color_info . num_components		517433	0					
ANR	517591	IdentifierDeclType	int		517433	0					
ANR	517592	Identifier	colors		517433	1					
ANR	517593	AssignmentExpression	colors = dev -> color_info . num_components		517433	2		=			
ANR	517594	Identifier	colors		517433	0					
ANR	517595	MemberAccess	dev -> color_info . num_components		517433	1					
ANR	517596	PtrMemberAccess	dev -> color_info		517433	0					
ANR	517597	Identifier	dev		517433	0					
ANR	517598	Identifier	color_info		517433	1					
ANR	517599	Identifier	num_components		517433	1					
ANR	517600	IdentifierDeclStatement	int mns = dev -> color_info . max_components ;	522:4:21442:21482	517433	20	True				
ANR	517601	IdentifierDecl	mns = dev -> color_info . max_components		517433	0					
ANR	517602	IdentifierDeclType	int		517433	0					
ANR	517603	Identifier	mns		517433	1					
ANR	517604	AssignmentExpression	mns = dev -> color_info . max_components		517433	2		=			
ANR	517605	Identifier	mns		517433	0					
ANR	517606	MemberAccess	dev -> color_info . max_components		517433	1					
ANR	517607	PtrMemberAccess	dev -> color_info		517433	0					
ANR	517608	Identifier	dev		517433	0					
ANR	517609	Identifier	color_info		517433	1					
ANR	517610	Identifier	max_components		517433	1					
ANR	517611	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	523:4:21488:21521	517433	21	True				
ANR	517612	IdentifierDecl	depth = dev -> color_info . depth		517433	0					
ANR	517613	IdentifierDeclType	int		517433	0					
ANR	517614	Identifier	depth		517433	1					
ANR	517615	AssignmentExpression	depth = dev -> color_info . depth		517433	2		=			
ANR	517616	Identifier	depth		517433	0					
ANR	517617	MemberAccess	dev -> color_info . depth		517433	1					
ANR	517618	PtrMemberAccess	dev -> color_info		517433	0					
ANR	517619	Identifier	dev		517433	0					
ANR	517620	Identifier	color_info		517433	1					
ANR	517621	Identifier	depth		517433	1					
ANR	517622	IdentifierDeclStatement	int GrayValues = dev -> color_info . max_gray + 1 ;	524:4:21527:21572	517433	22	True				
ANR	517623	IdentifierDecl	GrayValues = dev -> color_info . max_gray + 1		517433	0					
ANR	517624	IdentifierDeclType	int		517433	0					
ANR	517625	Identifier	GrayValues		517433	1					
ANR	517626	AssignmentExpression	GrayValues = dev -> color_info . max_gray + 1		517433	2		=			
ANR	517627	Identifier	GrayValues		517433	0					
ANR	517628	AdditiveExpression	dev -> color_info . max_gray + 1		517433	1		+			
ANR	517629	MemberAccess	dev -> color_info . max_gray		517433	0					
ANR	517630	PtrMemberAccess	dev -> color_info		517433	0					
ANR	517631	Identifier	dev		517433	0					
ANR	517632	Identifier	color_info		517433	1					
ANR	517633	Identifier	max_gray		517433	1					
ANR	517634	PrimaryExpression	1		517433	1					
ANR	517635	IdentifierDeclStatement	int HWSize [ 2 ] ;	525:4:21578:21591	517433	23	True				
ANR	517636	IdentifierDecl	HWSize [ 2 ]		517433	0					
ANR	517637	IdentifierDeclType	int [ 2 ]		517433	0					
ANR	517638	Identifier	HWSize		517433	1					
ANR	517639	PrimaryExpression	2		517433	2					
ANR	517640	IdentifierDeclStatement	gs_param_int_array hwsa ;	526:4:21597:21620	517433	24	True				
ANR	517641	IdentifierDecl	hwsa		517433	0					
ANR	517642	IdentifierDeclType	gs_param_int_array		517433	0					
ANR	517643	Identifier	hwsa		517433	1					
ANR	517644	IdentifierDeclStatement	gs_param_float_array hwma ;	527:4:21626:21651	517433	25	True				
ANR	517645	IdentifierDecl	hwma		517433	0					
ANR	517646	IdentifierDeclType	gs_param_float_array		517433	0					
ANR	517647	Identifier	hwma		517433	1					
ANR	517648	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	528:4:21657:21687	517433	26	True				
ANR	517649	IdentifierDecl	* dev_profile		517433	0					
ANR	517650	IdentifierDeclType	cmm_dev_profile_t *		517433	0					
ANR	517651	Identifier	dev_profile		517433	1					
ANR	517652	ExpressionStatement	"param_string_from_string ( dns , dev -> dname )"	532:4:21737:21778	517433	27	True				
ANR	517653	CallExpression	"param_string_from_string ( dns , dev -> dname )"		517433	0					
ANR	517654	Callee	param_string_from_string		517433	0					
ANR	517655	Identifier	param_string_from_string		517433	0					
ANR	517656	ArgumentList	dns		517433	1					
ANR	517657	Argument	dns		517433	0					
ANR	517658	Identifier	dns		517433	0					
ANR	517659	Argument	dev -> dname		517433	1					
ANR	517660	PtrMemberAccess	dev -> dname		517433	0					
ANR	517661	Identifier	dev		517433	0					
ANR	517662	Identifier	dname		517433	1					
ANR	517663	CompoundStatement		41:8:1451:1502	517433	28					
ANR	517664	IdentifierDeclStatement	const char * cms = get_process_color_model_name ( dev ) ;	534:8:21794:21845	517433	0	True				
ANR	517665	IdentifierDecl	* cms = get_process_color_model_name ( dev )		517433	0					
ANR	517666	IdentifierDeclType	const char *		517433	0					
ANR	517667	Identifier	cms		517433	1					
ANR	517668	AssignmentExpression	* cms = get_process_color_model_name ( dev )		517433	2		=			
ANR	517669	Identifier	cms		517433	0					
ANR	517670	CallExpression	get_process_color_model_name ( dev )		517433	1					
ANR	517671	Callee	get_process_color_model_name		517433	0					
ANR	517672	Identifier	get_process_color_model_name		517433	0					
ANR	517673	ArgumentList	dev		517433	1					
ANR	517674	Argument	dev		517433	0					
ANR	517675	Identifier	dev		517433	0					
ANR	517676	IfStatement	if ( ( cms != NULL ) && ( * cms != '\\0' ) )		517433	1					
ANR	517677	Condition	( cms != NULL ) && ( * cms != '\\0' )	538:12:21965:21995	517433	0	True				
ANR	517678	AndExpression	( cms != NULL ) && ( * cms != '\\0' )		517433	0		&&			
ANR	517679	EqualityExpression	cms != NULL		517433	0		!=			
ANR	517680	Identifier	cms		517433	0					
ANR	517681	Identifier	NULL		517433	1					
ANR	517682	EqualityExpression	* cms != '\\0'		517433	1		!=			
ANR	517683	UnaryOperationExpression	* cms		517433	0					
ANR	517684	UnaryOperator	*		517433	0					
ANR	517685	Identifier	cms		517433	1					
ANR	517686	PrimaryExpression	'\\0'		517433	1					
ANR	517687	ExpressionStatement	"param_string_from_string ( pcms , cms )"	539:12:22010:22045	517433	1	True				
ANR	517688	CallExpression	"param_string_from_string ( pcms , cms )"		517433	0					
ANR	517689	Callee	param_string_from_string		517433	0					
ANR	517690	Identifier	param_string_from_string		517433	0					
ANR	517691	ArgumentList	pcms		517433	1					
ANR	517692	Argument	pcms		517433	0					
ANR	517693	Identifier	pcms		517433	0					
ANR	517694	Argument	cms		517433	1					
ANR	517695	Identifier	cms		517433	0					
ANR	517696	ElseStatement	else		517433	0					
ANR	517697	ExpressionStatement	pcms . data = 0	541:12:22072:22085	517433	0	True				
ANR	517698	AssignmentExpression	pcms . data = 0		517433	0		=			
ANR	517699	MemberAccess	pcms . data		517433	0					
ANR	517700	Identifier	pcms		517433	0					
ANR	517701	Identifier	data		517433	1					
ANR	517702	PrimaryExpression	0		517433	1					
ANR	517703	ExpressionStatement	"set_param_array ( hwra , dev -> HWResolution , 2 )"	544:4:22098:22141	517433	29	True				
ANR	517704	CallExpression	"set_param_array ( hwra , dev -> HWResolution , 2 )"		517433	0					
ANR	517705	Callee	set_param_array		517433	0					
ANR	517706	Identifier	set_param_array		517433	0					
ANR	517707	ArgumentList	hwra		517433	1					
ANR	517708	Argument	hwra		517433	0					
ANR	517709	Identifier	hwra		517433	0					
ANR	517710	Argument	dev -> HWResolution		517433	1					
ANR	517711	PtrMemberAccess	dev -> HWResolution		517433	0					
ANR	517712	Identifier	dev		517433	0					
ANR	517713	Identifier	HWResolution		517433	1					
ANR	517714	Argument	2		517433	2					
ANR	517715	PrimaryExpression	2		517433	0					
ANR	517716	ExpressionStatement	"set_param_array ( msa , dev -> MediaSize , 2 )"	545:4:22147:22186	517433	30	True				
ANR	517717	CallExpression	"set_param_array ( msa , dev -> MediaSize , 2 )"		517433	0					
ANR	517718	Callee	set_param_array		517433	0					
ANR	517719	Identifier	set_param_array		517433	0					
ANR	517720	ArgumentList	msa		517433	1					
ANR	517721	Argument	msa		517433	0					
ANR	517722	Identifier	msa		517433	0					
ANR	517723	Argument	dev -> MediaSize		517433	1					
ANR	517724	PtrMemberAccess	dev -> MediaSize		517433	0					
ANR	517725	Identifier	dev		517433	0					
ANR	517726	Identifier	MediaSize		517433	1					
ANR	517727	Argument	2		517433	2					
ANR	517728	PrimaryExpression	2		517433	0					
ANR	517729	ExpressionStatement	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"	546:4:22192:22234	517433	31	True				
ANR	517730	CallExpression	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"		517433	0					
ANR	517731	Callee	set_param_array		517433	0					
ANR	517732	Identifier	set_param_array		517433	0					
ANR	517733	ArgumentList	ibba		517433	1					
ANR	517734	Argument	ibba		517433	0					
ANR	517735	Identifier	ibba		517433	0					
ANR	517736	Argument	dev -> ImagingBBox		517433	1					
ANR	517737	PtrMemberAccess	dev -> ImagingBBox		517433	0					
ANR	517738	Identifier	dev		517433	0					
ANR	517739	Identifier	ImagingBBox		517433	1					
ANR	517740	Argument	4		517433	2					
ANR	517741	PrimaryExpression	4		517433	0					
ANR	517742	ExpressionStatement	"set_param_array ( ma , dev -> Margins , 2 )"	547:4:22240:22276	517433	32	True				
ANR	517743	CallExpression	"set_param_array ( ma , dev -> Margins , 2 )"		517433	0					
ANR	517744	Callee	set_param_array		517433	0					
ANR	517745	Identifier	set_param_array		517433	0					
ANR	517746	ArgumentList	ma		517433	1					
ANR	517747	Argument	ma		517433	0					
ANR	517748	Identifier	ma		517433	0					
ANR	517749	Argument	dev -> Margins		517433	1					
ANR	517750	PtrMemberAccess	dev -> Margins		517433	0					
ANR	517751	Identifier	dev		517433	0					
ANR	517752	Identifier	Margins		517433	1					
ANR	517753	Argument	2		517433	2					
ANR	517754	PrimaryExpression	2		517433	0					
ANR	517755	ExpressionStatement	"set_param_array ( scna , NULL , 0 )"	548:4:22282:22312	517433	33	True				
ANR	517756	CallExpression	"set_param_array ( scna , NULL , 0 )"		517433	0					
ANR	517757	Callee	set_param_array		517433	0					
ANR	517758	Identifier	set_param_array		517433	0					
ANR	517759	ArgumentList	scna		517433	1					
ANR	517760	Argument	scna		517433	0					
ANR	517761	Identifier	scna		517433	0					
ANR	517762	Argument	NULL		517433	1					
ANR	517763	Identifier	NULL		517433	0					
ANR	517764	Argument	0		517433	2					
ANR	517765	PrimaryExpression	0		517433	0					
ANR	517766	ExpressionStatement	HWSize [ 0 ] = dev -> width	551:4:22362:22384	517433	34	True				
ANR	517767	AssignmentExpression	HWSize [ 0 ] = dev -> width		517433	0		=			
ANR	517768	ArrayIndexing	HWSize [ 0 ]		517433	0					
ANR	517769	Identifier	HWSize		517433	0					
ANR	517770	PrimaryExpression	0		517433	1					
ANR	517771	PtrMemberAccess	dev -> width		517433	1					
ANR	517772	Identifier	dev		517433	0					
ANR	517773	Identifier	width		517433	1					
ANR	517774	ExpressionStatement	HWSize [ 1 ] = dev -> height	552:4:22390:22413	517433	35	True				
ANR	517775	AssignmentExpression	HWSize [ 1 ] = dev -> height		517433	0		=			
ANR	517776	ArrayIndexing	HWSize [ 1 ]		517433	0					
ANR	517777	Identifier	HWSize		517433	0					
ANR	517778	PrimaryExpression	1		517433	1					
ANR	517779	PtrMemberAccess	dev -> height		517433	1					
ANR	517780	Identifier	dev		517433	0					
ANR	517781	Identifier	height		517433	1					
ANR	517782	ExpressionStatement	"set_param_array ( hwsa , HWSize , 2 )"	553:4:22419:22451	517433	36	True				
ANR	517783	CallExpression	"set_param_array ( hwsa , HWSize , 2 )"		517433	0					
ANR	517784	Callee	set_param_array		517433	0					
ANR	517785	Identifier	set_param_array		517433	0					
ANR	517786	ArgumentList	hwsa		517433	1					
ANR	517787	Argument	hwsa		517433	0					
ANR	517788	Identifier	hwsa		517433	0					
ANR	517789	Argument	HWSize		517433	1					
ANR	517790	Identifier	HWSize		517433	0					
ANR	517791	Argument	2		517433	2					
ANR	517792	PrimaryExpression	2		517433	0					
ANR	517793	ExpressionStatement	"set_param_array ( hwma , dev -> HWMargins , 4 )"	554:4:22457:22497	517433	37	True				
ANR	517794	CallExpression	"set_param_array ( hwma , dev -> HWMargins , 4 )"		517433	0					
ANR	517795	Callee	set_param_array		517433	0					
ANR	517796	Identifier	set_param_array		517433	0					
ANR	517797	ArgumentList	hwma		517433	1					
ANR	517798	Argument	hwma		517433	0					
ANR	517799	Identifier	hwma		517433	0					
ANR	517800	Argument	dev -> HWMargins		517433	1					
ANR	517801	PtrMemberAccess	dev -> HWMargins		517433	0					
ANR	517802	Identifier	dev		517433	0					
ANR	517803	Identifier	HWMargins		517433	1					
ANR	517804	Argument	4		517433	2					
ANR	517805	PrimaryExpression	4		517433	0					
ANR	517806	IfStatement	"if ( dev_proc ( dev , get_profile ) != NULL )"		517433	38					
ANR	517807	Condition	"dev_proc ( dev , get_profile ) != NULL"	562:8:22977:23010	517433	0	True				
ANR	517808	EqualityExpression	"dev_proc ( dev , get_profile ) != NULL"		517433	0		!=			
ANR	517809	CallExpression	"dev_proc ( dev , get_profile )"		517433	0					
ANR	517810	Callee	dev_proc		517433	0					
ANR	517811	Identifier	dev_proc		517433	0					
ANR	517812	ArgumentList	dev		517433	1					
ANR	517813	Argument	dev		517433	0					
ANR	517814	Identifier	dev		517433	0					
ANR	517815	Argument	get_profile		517433	1					
ANR	517816	Identifier	get_profile		517433	0					
ANR	517817	Identifier	NULL		517433	1					
ANR	517818	CompoundStatement		69:44:2670:2670	517433	1					
ANR	517819	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	563:8:23023:23076	517433	0	True				
ANR	517820	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		517433	0		=			
ANR	517821	Identifier	code		517433	0					
ANR	517822	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		517433	1					
ANR	517823	Callee	"dev_proc ( dev , get_profile )"		517433	0					
ANR	517824	CallExpression	"dev_proc ( dev , get_profile )"		517433	0					
ANR	517825	Callee	dev_proc		517433	0					
ANR	517826	Identifier	dev_proc		517433	0					
ANR	517827	ArgumentList	dev		517433	1					
ANR	517828	Argument	dev		517433	0					
ANR	517829	Identifier	dev		517433	0					
ANR	517830	Argument	get_profile		517433	1					
ANR	517831	Identifier	get_profile		517433	0					
ANR	517832	ArgumentList	dev		517433	1					
ANR	517833	Argument	dev		517433	0					
ANR	517834	Identifier	dev		517433	0					
ANR	517835	Argument	& dev_profile		517433	1					
ANR	517836	UnaryOperationExpression	& dev_profile		517433	0					
ANR	517837	UnaryOperator	&		517433	0					
ANR	517838	Identifier	dev_profile		517433	1					
ANR	517839	IfStatement	if ( code < 0 )		517433	1					
ANR	517840	Condition	code < 0	564:12:23090:23097	517433	0	True				
ANR	517841	RelationalExpression	code < 0		517433	0		<			
ANR	517842	Identifier	code		517433	0					
ANR	517843	PrimaryExpression	0		517433	1					
ANR	517844	ReturnStatement	return code ;	565:12:23112:23123	517433	1	True				
ANR	517845	Identifier	code		517433	0					
ANR	517846	IfStatement	if ( dev_profile == NULL )		517433	2					
ANR	517847	Condition	dev_profile == NULL	567:12:23138:23156	517433	0	True				
ANR	517848	EqualityExpression	dev_profile == NULL		517433	0		==			
ANR	517849	Identifier	dev_profile		517433	0					
ANR	517850	Identifier	NULL		517433	1					
ANR	517851	CompoundStatement		74:33:2816:2816	517433	1					
ANR	517852	ExpressionStatement	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"	568:12:23173:23226	517433	0	True				
ANR	517853	AssignmentExpression	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"		517433	0		=			
ANR	517854	Identifier	code		517433	0					
ANR	517855	CallExpression	"gsicc_init_device_profile_struct ( dev , NULL , 0 )"		517433	1					
ANR	517856	Callee	gsicc_init_device_profile_struct		517433	0					
ANR	517857	Identifier	gsicc_init_device_profile_struct		517433	0					
ANR	517858	ArgumentList	dev		517433	1					
ANR	517859	Argument	dev		517433	0					
ANR	517860	Identifier	dev		517433	0					
ANR	517861	Argument	NULL		517433	1					
ANR	517862	Identifier	NULL		517433	0					
ANR	517863	Argument	0		517433	2					
ANR	517864	PrimaryExpression	0		517433	0					
ANR	517865	IfStatement	if ( code < 0 )		517433	1					
ANR	517866	Condition	code < 0	569:16:23244:23251	517433	0	True				
ANR	517867	RelationalExpression	code < 0		517433	0		<			
ANR	517868	Identifier	code		517433	0					
ANR	517869	PrimaryExpression	0		517433	1					
ANR	517870	ReturnStatement	return code ;	570:16:23270:23281	517433	1	True				
ANR	517871	Identifier	code		517433	0					
ANR	517872	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	571:12:23295:23348	517433	2	True				
ANR	517873	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		517433	0		=			
ANR	517874	Identifier	code		517433	0					
ANR	517875	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		517433	1					
ANR	517876	Callee	"dev_proc ( dev , get_profile )"		517433	0					
ANR	517877	CallExpression	"dev_proc ( dev , get_profile )"		517433	0					
ANR	517878	Callee	dev_proc		517433	0					
ANR	517879	Identifier	dev_proc		517433	0					
ANR	517880	ArgumentList	dev		517433	1					
ANR	517881	Argument	dev		517433	0					
ANR	517882	Identifier	dev		517433	0					
ANR	517883	Argument	get_profile		517433	1					
ANR	517884	Identifier	get_profile		517433	0					
ANR	517885	ArgumentList	dev		517433	1					
ANR	517886	Argument	dev		517433	0					
ANR	517887	Identifier	dev		517433	0					
ANR	517888	Argument	& dev_profile		517433	1					
ANR	517889	UnaryOperationExpression	& dev_profile		517433	0					
ANR	517890	UnaryOperator	&		517433	0					
ANR	517891	Identifier	dev_profile		517433	1					
ANR	517892	IfStatement	if ( code < 0 )		517433	3					
ANR	517893	Condition	code < 0	572:16:23366:23373	517433	0	True				
ANR	517894	RelationalExpression	code < 0		517433	0		<			
ANR	517895	Identifier	code		517433	0					
ANR	517896	PrimaryExpression	0		517433	1					
ANR	517897	ReturnStatement	return code ;	573:16:23392:23403	517433	1	True				
ANR	517898	Identifier	code		517433	0					
ANR	517899	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		517433	3					
ANR	517900	ForInit	k = 0 ;	579:13:23729:23734	517433	0	True				
ANR	517901	AssignmentExpression	k = 0		517433	0		=			
ANR	517902	Identifier	k		517433	0					
ANR	517903	PrimaryExpression	0		517433	1					
ANR	517904	Condition	k < NUM_DEVICE_PROFILES	579:20:23736:23758	517433	1	True				
ANR	517905	RelationalExpression	k < NUM_DEVICE_PROFILES		517433	0		<			
ANR	517906	Identifier	k		517433	0					
ANR	517907	Identifier	NUM_DEVICE_PROFILES		517433	1					
ANR	517908	PostIncDecOperationExpression	k ++	579:45:23761:23763	517433	2	True				
ANR	517909	Identifier	k		517433	0					
ANR	517910	IncDec	++		517433	1					
ANR	517911	CompoundStatement		86:50:3423:3423	517433	3					
ANR	517912	IfStatement	if ( dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL )		517433	0					
ANR	517913	Condition	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL	580:16:23784:23885	517433	0	True				
ANR	517914	OrExpression	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL		517433	0		||			
ANR	517915	EqualityExpression	dev_profile -> device_profile [ k ] == NULL		517433	0		==			
ANR	517916	ArrayIndexing	dev_profile -> device_profile [ k ]		517433	0					
ANR	517917	PtrMemberAccess	dev_profile -> device_profile		517433	0					
ANR	517918	Identifier	dev_profile		517433	0					
ANR	517919	Identifier	device_profile		517433	1					
ANR	517920	Identifier	k		517433	1					
ANR	517921	Identifier	NULL		517433	1					
ANR	517922	EqualityExpression	dev_profile -> device_profile [ k ] -> name == NULL		517433	1		==			
ANR	517923	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		517433	0					
ANR	517924	ArrayIndexing	dev_profile -> device_profile [ k ]		517433	0					
ANR	517925	PtrMemberAccess	dev_profile -> device_profile		517433	0					
ANR	517926	Identifier	dev_profile		517433	0					
ANR	517927	Identifier	device_profile		517433	1					
ANR	517928	Identifier	k		517433	1					
ANR	517929	Identifier	name		517433	1					
ANR	517930	Identifier	NULL		517433	1					
ANR	517931	CompoundStatement		88:65:3545:3545	517433	1					
ANR	517932	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	582:16:23906:23958	517433	0	True				
ANR	517933	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		517433	0					
ANR	517934	Callee	param_string_from_string		517433	0					
ANR	517935	Identifier	param_string_from_string		517433	0					
ANR	517936	ArgumentList	profile_array [ k ]		517433	1					
ANR	517937	Argument	profile_array [ k ]		517433	0					
ANR	517938	ArrayIndexing	profile_array [ k ]		517433	0					
ANR	517939	Identifier	profile_array		517433	0					
ANR	517940	Identifier	k		517433	1					
ANR	517941	Argument	null_str		517433	1					
ANR	517942	Identifier	null_str		517433	0					
ANR	517943	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	583:16:23976:24013	517433	1	True				
ANR	517944	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		517433	0		=			
ANR	517945	ArrayIndexing	profile_intents [ k ]		517433	0					
ANR	517946	Identifier	profile_intents		517433	0					
ANR	517947	Identifier	k		517433	1					
ANR	517948	Identifier	gsRINOTSPECIFIED		517433	1					
ANR	517949	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	584:16:24031:24065	517433	2	True				
ANR	517950	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		517433	0		=			
ANR	517951	ArrayIndexing	blackptcomps [ k ]		517433	0					
ANR	517952	Identifier	blackptcomps		517433	0					
ANR	517953	Identifier	k		517433	1					
ANR	517954	Identifier	gsBPNOTSPECIFIED		517433	1					
ANR	517955	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	585:16:24083:24122	517433	3	True				
ANR	517956	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		517433	0		=			
ANR	517957	ArrayIndexing	blackpreserve [ k ]		517433	0					
ANR	517958	Identifier	blackpreserve		517433	0					
ANR	517959	Identifier	k		517433	1					
ANR	517960	Identifier	gsBKPRESNOTSPECIFIED		517433	1					
ANR	517961	ElseStatement	else		517433	0					
ANR	517962	CompoundStatement		93:19:3800:3800	517433	0					
ANR	517963	ExpressionStatement	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"	587:16:24161:24271	517433	0	True				
ANR	517964	CallExpression	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"		517433	0					
ANR	517965	Callee	param_string_from_transient_string		517433	0					
ANR	517966	Identifier	param_string_from_transient_string		517433	0					
ANR	517967	ArgumentList	profile_array [ k ]		517433	1					
ANR	517968	Argument	profile_array [ k ]		517433	0					
ANR	517969	ArrayIndexing	profile_array [ k ]		517433	0					
ANR	517970	Identifier	profile_array		517433	0					
ANR	517971	Identifier	k		517433	1					
ANR	517972	Argument	dev_profile -> device_profile [ k ] -> name		517433	1					
ANR	517973	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		517433	0					
ANR	517974	ArrayIndexing	dev_profile -> device_profile [ k ]		517433	0					
ANR	517975	PtrMemberAccess	dev_profile -> device_profile		517433	0					
ANR	517976	Identifier	dev_profile		517433	0					
ANR	517977	Identifier	device_profile		517433	1					
ANR	517978	Identifier	k		517433	1					
ANR	517979	Identifier	name		517433	1					
ANR	517980	ExpressionStatement	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent	589:16:24289:24353	517433	1	True				
ANR	517981	AssignmentExpression	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent		517433	0		=			
ANR	517982	ArrayIndexing	profile_intents [ k ]		517433	0					
ANR	517983	Identifier	profile_intents		517433	0					
ANR	517984	Identifier	k		517433	1					
ANR	517985	MemberAccess	dev_profile -> rendercond [ k ] . rendering_intent		517433	1					
ANR	517986	ArrayIndexing	dev_profile -> rendercond [ k ]		517433	0					
ANR	517987	PtrMemberAccess	dev_profile -> rendercond		517433	0					
ANR	517988	Identifier	dev_profile		517433	0					
ANR	517989	Identifier	rendercond		517433	1					
ANR	517990	Identifier	k		517433	1					
ANR	517991	Identifier	rendering_intent		517433	1					
ANR	517992	ExpressionStatement	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp	590:16:24371:24432	517433	2	True				
ANR	517993	AssignmentExpression	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp		517433	0		=			
ANR	517994	ArrayIndexing	blackptcomps [ k ]		517433	0					
ANR	517995	Identifier	blackptcomps		517433	0					
ANR	517996	Identifier	k		517433	1					
ANR	517997	MemberAccess	dev_profile -> rendercond [ k ] . black_point_comp		517433	1					
ANR	517998	ArrayIndexing	dev_profile -> rendercond [ k ]		517433	0					
ANR	517999	PtrMemberAccess	dev_profile -> rendercond		517433	0					
ANR	518000	Identifier	dev_profile		517433	0					
ANR	518001	Identifier	rendercond		517433	1					
ANR	518002	Identifier	k		517433	1					
ANR	518003	Identifier	black_point_comp		517433	1					
ANR	518004	ExpressionStatement	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black	591:16:24450:24510	517433	3	True				
ANR	518005	AssignmentExpression	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black		517433	0		=			
ANR	518006	ArrayIndexing	blackpreserve [ k ]		517433	0					
ANR	518007	Identifier	blackpreserve		517433	0					
ANR	518008	Identifier	k		517433	1					
ANR	518009	MemberAccess	dev_profile -> rendercond [ k ] . preserve_black		517433	1					
ANR	518010	ArrayIndexing	dev_profile -> rendercond [ k ]		517433	0					
ANR	518011	PtrMemberAccess	dev_profile -> rendercond		517433	0					
ANR	518012	Identifier	dev_profile		517433	0					
ANR	518013	Identifier	rendercond		517433	1					
ANR	518014	Identifier	k		517433	1					
ANR	518015	Identifier	preserve_black		517433	1					
ANR	518016	IfStatement	if ( dev_profile -> proof_profile == NULL )		517433	4					
ANR	518017	Condition	dev_profile -> proof_profile == NULL	595:12:24602:24635	517433	0	True				
ANR	518018	EqualityExpression	dev_profile -> proof_profile == NULL		517433	0		==			
ANR	518019	PtrMemberAccess	dev_profile -> proof_profile		517433	0					
ANR	518020	Identifier	dev_profile		517433	0					
ANR	518021	Identifier	proof_profile		517433	1					
ANR	518022	Identifier	NULL		517433	1					
ANR	518023	CompoundStatement		102:48:4295:4295	517433	1					
ANR	518024	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	596:12:24652:24701	517433	0	True				
ANR	518025	CallExpression	"param_string_from_string ( proof_profile , null_str )"		517433	0					
ANR	518026	Callee	param_string_from_string		517433	0					
ANR	518027	Identifier	param_string_from_string		517433	0					
ANR	518028	ArgumentList	proof_profile		517433	1					
ANR	518029	Argument	proof_profile		517433	0					
ANR	518030	Identifier	proof_profile		517433	0					
ANR	518031	Argument	null_str		517433	1					
ANR	518032	Identifier	null_str		517433	0					
ANR	518033	ElseStatement	else		517433	0					
ANR	518034	CompoundStatement		104:15:4375:4375	517433	0					
ANR	518035	ExpressionStatement	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"	598:12:24732:24852	517433	0	True				
ANR	518036	CallExpression	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"		517433	0					
ANR	518037	Callee	param_string_from_transient_string		517433	0					
ANR	518038	Identifier	param_string_from_transient_string		517433	0					
ANR	518039	ArgumentList	proof_profile		517433	1					
ANR	518040	Argument	proof_profile		517433	0					
ANR	518041	Identifier	proof_profile		517433	0					
ANR	518042	Argument	dev_profile -> proof_profile -> name		517433	1					
ANR	518043	PtrMemberAccess	dev_profile -> proof_profile -> name		517433	0					
ANR	518044	PtrMemberAccess	dev_profile -> proof_profile		517433	0					
ANR	518045	Identifier	dev_profile		517433	0					
ANR	518046	Identifier	proof_profile		517433	1					
ANR	518047	Identifier	name		517433	1					
ANR	518048	IfStatement	if ( dev_profile -> link_profile == NULL )		517433	5					
ANR	518049	Condition	dev_profile -> link_profile == NULL	601:12:24876:24908	517433	0	True				
ANR	518050	EqualityExpression	dev_profile -> link_profile == NULL		517433	0		==			
ANR	518051	PtrMemberAccess	dev_profile -> link_profile		517433	0					
ANR	518052	Identifier	dev_profile		517433	0					
ANR	518053	Identifier	link_profile		517433	1					
ANR	518054	Identifier	NULL		517433	1					
ANR	518055	CompoundStatement		108:47:4568:4568	517433	1					
ANR	518056	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	602:12:24925:24973	517433	0	True				
ANR	518057	CallExpression	"param_string_from_string ( link_profile , null_str )"		517433	0					
ANR	518058	Callee	param_string_from_string		517433	0					
ANR	518059	Identifier	param_string_from_string		517433	0					
ANR	518060	ArgumentList	link_profile		517433	1					
ANR	518061	Argument	link_profile		517433	0					
ANR	518062	Identifier	link_profile		517433	0					
ANR	518063	Argument	null_str		517433	1					
ANR	518064	Identifier	null_str		517433	0					
ANR	518065	ElseStatement	else		517433	0					
ANR	518066	CompoundStatement		110:15:4647:4647	517433	0					
ANR	518067	ExpressionStatement	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"	604:12:25004:25122	517433	0	True				
ANR	518068	CallExpression	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"		517433	0					
ANR	518069	Callee	param_string_from_transient_string		517433	0					
ANR	518070	Identifier	param_string_from_transient_string		517433	0					
ANR	518071	ArgumentList	link_profile		517433	1					
ANR	518072	Argument	link_profile		517433	0					
ANR	518073	Identifier	link_profile		517433	0					
ANR	518074	Argument	dev_profile -> link_profile -> name		517433	1					
ANR	518075	PtrMemberAccess	dev_profile -> link_profile -> name		517433	0					
ANR	518076	PtrMemberAccess	dev_profile -> link_profile		517433	0					
ANR	518077	Identifier	dev_profile		517433	0					
ANR	518078	Identifier	link_profile		517433	1					
ANR	518079	Identifier	name		517433	1					
ANR	518080	IfStatement	if ( dev_profile -> postren_profile == NULL )		517433	6					
ANR	518081	Condition	dev_profile -> postren_profile == NULL	607:12:25146:25181	517433	0	True				
ANR	518082	EqualityExpression	dev_profile -> postren_profile == NULL		517433	0		==			
ANR	518083	PtrMemberAccess	dev_profile -> postren_profile		517433	0					
ANR	518084	Identifier	dev_profile		517433	0					
ANR	518085	Identifier	postren_profile		517433	1					
ANR	518086	Identifier	NULL		517433	1					
ANR	518087	CompoundStatement		114:50:4841:4841	517433	1					
ANR	518088	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	608:12:25198:25249	517433	0	True				
ANR	518089	CallExpression	"param_string_from_string ( postren_profile , null_str )"		517433	0					
ANR	518090	Callee	param_string_from_string		517433	0					
ANR	518091	Identifier	param_string_from_string		517433	0					
ANR	518092	ArgumentList	postren_profile		517433	1					
ANR	518093	Argument	postren_profile		517433	0					
ANR	518094	Identifier	postren_profile		517433	0					
ANR	518095	Argument	null_str		517433	1					
ANR	518096	Identifier	null_str		517433	0					
ANR	518097	ElseStatement	else		517433	0					
ANR	518098	CompoundStatement		116:15:4923:4923	517433	0					
ANR	518099	ExpressionStatement	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"	610:12:25280:25383	517433	0	True				
ANR	518100	CallExpression	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"		517433	0					
ANR	518101	Callee	param_string_from_transient_string		517433	0					
ANR	518102	Identifier	param_string_from_transient_string		517433	0					
ANR	518103	ArgumentList	postren_profile		517433	1					
ANR	518104	Argument	postren_profile		517433	0					
ANR	518105	Identifier	postren_profile		517433	0					
ANR	518106	Argument	dev_profile -> postren_profile -> name		517433	1					
ANR	518107	PtrMemberAccess	dev_profile -> postren_profile -> name		517433	0					
ANR	518108	PtrMemberAccess	dev_profile -> postren_profile		517433	0					
ANR	518109	Identifier	dev_profile		517433	0					
ANR	518110	Identifier	postren_profile		517433	1					
ANR	518111	Identifier	name		517433	1					
ANR	518112	IfStatement	if ( dev_profile -> blend_profile == NULL )		517433	7					
ANR	518113	Condition	dev_profile -> blend_profile == NULL	613:12:25407:25440	517433	0	True				
ANR	518114	EqualityExpression	dev_profile -> blend_profile == NULL		517433	0		==			
ANR	518115	PtrMemberAccess	dev_profile -> blend_profile		517433	0					
ANR	518116	Identifier	dev_profile		517433	0					
ANR	518117	Identifier	blend_profile		517433	1					
ANR	518118	Identifier	NULL		517433	1					
ANR	518119	CompoundStatement		120:48:5100:5100	517433	1					
ANR	518120	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	614:12:25457:25506	517433	0	True				
ANR	518121	CallExpression	"param_string_from_string ( blend_profile , null_str )"		517433	0					
ANR	518122	Callee	param_string_from_string		517433	0					
ANR	518123	Identifier	param_string_from_string		517433	0					
ANR	518124	ArgumentList	blend_profile		517433	1					
ANR	518125	Argument	blend_profile		517433	0					
ANR	518126	Identifier	blend_profile		517433	0					
ANR	518127	Argument	null_str		517433	1					
ANR	518128	Identifier	null_str		517433	0					
ANR	518129	ElseStatement	else		517433	0					
ANR	518130	CompoundStatement		122:15:5180:5180	517433	0					
ANR	518131	ExpressionStatement	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"	616:12:25537:25636	517433	0	True				
ANR	518132	CallExpression	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"		517433	0					
ANR	518133	Callee	param_string_from_transient_string		517433	0					
ANR	518134	Identifier	param_string_from_transient_string		517433	0					
ANR	518135	ArgumentList	blend_profile		517433	1					
ANR	518136	Argument	blend_profile		517433	0					
ANR	518137	Identifier	blend_profile		517433	0					
ANR	518138	Argument	dev_profile -> blend_profile -> name		517433	1					
ANR	518139	PtrMemberAccess	dev_profile -> blend_profile -> name		517433	0					
ANR	518140	PtrMemberAccess	dev_profile -> blend_profile		517433	0					
ANR	518141	Identifier	dev_profile		517433	0					
ANR	518142	Identifier	blend_profile		517433	1					
ANR	518143	Identifier	name		517433	1					
ANR	518144	ExpressionStatement	devicegraytok = dev_profile -> devicegraytok	619:8:25656:25698	517433	8	True				
ANR	518145	AssignmentExpression	devicegraytok = dev_profile -> devicegraytok		517433	0		=			
ANR	518146	Identifier	devicegraytok		517433	0					
ANR	518147	PtrMemberAccess	dev_profile -> devicegraytok		517433	1					
ANR	518148	Identifier	dev_profile		517433	0					
ANR	518149	Identifier	devicegraytok		517433	1					
ANR	518150	ExpressionStatement	graydetection = dev_profile -> graydetection	620:8:25708:25750	517433	9	True				
ANR	518151	AssignmentExpression	graydetection = dev_profile -> graydetection		517433	0		=			
ANR	518152	Identifier	graydetection		517433	0					
ANR	518153	PtrMemberAccess	dev_profile -> graydetection		517433	1					
ANR	518154	Identifier	dev_profile		517433	0					
ANR	518155	Identifier	graydetection		517433	1					
ANR	518156	ExpressionStatement	usefastcolor = dev_profile -> usefastcolor	621:8:25760:25800	517433	10	True				
ANR	518157	AssignmentExpression	usefastcolor = dev_profile -> usefastcolor		517433	0		=			
ANR	518158	Identifier	usefastcolor		517433	0					
ANR	518159	PtrMemberAccess	dev_profile -> usefastcolor		517433	1					
ANR	518160	Identifier	dev_profile		517433	0					
ANR	518161	Identifier	usefastcolor		517433	1					
ANR	518162	ExpressionStatement	sim_overprint = dev_profile -> sim_overprint	622:8:25810:25852	517433	11	True				
ANR	518163	AssignmentExpression	sim_overprint = dev_profile -> sim_overprint		517433	0		=			
ANR	518164	Identifier	sim_overprint		517433	0					
ANR	518165	PtrMemberAccess	dev_profile -> sim_overprint		517433	1					
ANR	518166	Identifier	dev_profile		517433	0					
ANR	518167	Identifier	sim_overprint		517433	1					
ANR	518168	ExpressionStatement	prebandthreshold = dev_profile -> prebandthreshold	623:8:25862:25910	517433	12	True				
ANR	518169	AssignmentExpression	prebandthreshold = dev_profile -> prebandthreshold		517433	0		=			
ANR	518170	Identifier	prebandthreshold		517433	0					
ANR	518171	PtrMemberAccess	dev_profile -> prebandthreshold		517433	1					
ANR	518172	Identifier	dev_profile		517433	0					
ANR	518173	Identifier	prebandthreshold		517433	1					
ANR	518174	IfStatement	if ( dev_profile -> spotnames == NULL )		517433	13					
ANR	518175	Condition	dev_profile -> spotnames == NULL	627:12:26102:26131	517433	0	True				
ANR	518176	EqualityExpression	dev_profile -> spotnames == NULL		517433	0		==			
ANR	518177	PtrMemberAccess	dev_profile -> spotnames		517433	0					
ANR	518178	Identifier	dev_profile		517433	0					
ANR	518179	Identifier	spotnames		517433	1					
ANR	518180	Identifier	NULL		517433	1					
ANR	518181	CompoundStatement		134:44:5791:5791	517433	1					
ANR	518182	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	628:12:26148:26197	517433	0	True				
ANR	518183	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		517433	0					
ANR	518184	Callee	param_string_from_string		517433	0					
ANR	518185	Identifier	param_string_from_string		517433	0					
ANR	518186	ArgumentList	icc_colorants		517433	1					
ANR	518187	Argument	icc_colorants		517433	0					
ANR	518188	Identifier	icc_colorants		517433	0					
ANR	518189	Argument	null_str		517433	1					
ANR	518190	Identifier	null_str		517433	0					
ANR	518191	ElseStatement	else		517433	0					
ANR	518192	CompoundStatement		137:12:5885:5905	517433	0					
ANR	518193	IdentifierDeclStatement	char * colorant_names ;	630:12:26228:26248	517433	0	True				
ANR	518194	IdentifierDecl	* colorant_names		517433	0					
ANR	518195	IdentifierDeclType	char *		517433	0					
ANR	518196	Identifier	colorant_names		517433	1					
ANR	518197	ExpressionStatement	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )	632:12:26263:26335	517433	1	True				
ANR	518198	AssignmentExpression	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )		517433	0		=			
ANR	518199	Identifier	colorant_names		517433	0					
ANR	518200	CallExpression	gsicc_get_dev_icccolorants ( dev_profile )		517433	1					
ANR	518201	Callee	gsicc_get_dev_icccolorants		517433	0					
ANR	518202	Identifier	gsicc_get_dev_icccolorants		517433	0					
ANR	518203	ArgumentList	dev_profile		517433	1					
ANR	518204	Argument	dev_profile		517433	0					
ANR	518205	Identifier	dev_profile		517433	0					
ANR	518206	IfStatement	if ( colorant_names != NULL )		517433	2					
ANR	518207	Condition	colorant_names != NULL	634:16:26353:26374	517433	0	True				
ANR	518208	EqualityExpression	colorant_names != NULL		517433	0		!=			
ANR	518209	Identifier	colorant_names		517433	0					
ANR	518210	Identifier	NULL		517433	1					
ANR	518211	CompoundStatement		141:40:6034:6034	517433	1					
ANR	518212	ExpressionStatement	"param_string_from_transient_string ( icc_colorants , colorant_names )"	635:16:26395:26460	517433	0	True				
ANR	518213	CallExpression	"param_string_from_transient_string ( icc_colorants , colorant_names )"		517433	0					
ANR	518214	Callee	param_string_from_transient_string		517433	0					
ANR	518215	Identifier	param_string_from_transient_string		517433	0					
ANR	518216	ArgumentList	icc_colorants		517433	1					
ANR	518217	Argument	icc_colorants		517433	0					
ANR	518218	Identifier	icc_colorants		517433	0					
ANR	518219	Argument	colorant_names		517433	1					
ANR	518220	Identifier	colorant_names		517433	0					
ANR	518221	ElseStatement	else		517433	0					
ANR	518222	CompoundStatement		143:19:6138:6138	517433	0					
ANR	518223	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	637:16:26499:26548	517433	0	True				
ANR	518224	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		517433	0					
ANR	518225	Callee	param_string_from_string		517433	0					
ANR	518226	Identifier	param_string_from_string		517433	0					
ANR	518227	ArgumentList	icc_colorants		517433	1					
ANR	518228	Argument	icc_colorants		517433	0					
ANR	518229	Identifier	icc_colorants		517433	0					
ANR	518230	Argument	null_str		517433	1					
ANR	518231	Identifier	null_str		517433	0					
ANR	518232	ElseStatement	else		517433	0					
ANR	518233	CompoundStatement		147:11:6242:6242	517433	0					
ANR	518234	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		517433	0					
ANR	518235	ForInit	k = 0 ;	641:13:26600:26605	517433	0	True				
ANR	518236	AssignmentExpression	k = 0		517433	0		=			
ANR	518237	Identifier	k		517433	0					
ANR	518238	PrimaryExpression	0		517433	1					
ANR	518239	Condition	k < NUM_DEVICE_PROFILES	641:20:26607:26629	517433	1	True				
ANR	518240	RelationalExpression	k < NUM_DEVICE_PROFILES		517433	0		<			
ANR	518241	Identifier	k		517433	0					
ANR	518242	Identifier	NUM_DEVICE_PROFILES		517433	1					
ANR	518243	PostIncDecOperationExpression	k ++	641:45:26632:26634	517433	2	True				
ANR	518244	Identifier	k		517433	0					
ANR	518245	IncDec	++		517433	1					
ANR	518246	CompoundStatement		148:50:6294:6294	517433	3					
ANR	518247	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	642:12:26651:26703	517433	0	True				
ANR	518248	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		517433	0					
ANR	518249	Callee	param_string_from_string		517433	0					
ANR	518250	Identifier	param_string_from_string		517433	0					
ANR	518251	ArgumentList	profile_array [ k ]		517433	1					
ANR	518252	Argument	profile_array [ k ]		517433	0					
ANR	518253	ArrayIndexing	profile_array [ k ]		517433	0					
ANR	518254	Identifier	profile_array		517433	0					
ANR	518255	Identifier	k		517433	1					
ANR	518256	Argument	null_str		517433	1					
ANR	518257	Identifier	null_str		517433	0					
ANR	518258	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	643:12:26717:26754	517433	1	True				
ANR	518259	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		517433	0		=			
ANR	518260	ArrayIndexing	profile_intents [ k ]		517433	0					
ANR	518261	Identifier	profile_intents		517433	0					
ANR	518262	Identifier	k		517433	1					
ANR	518263	Identifier	gsRINOTSPECIFIED		517433	1					
ANR	518264	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	644:12:26768:26802	517433	2	True				
ANR	518265	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		517433	0		=			
ANR	518266	ArrayIndexing	blackptcomps [ k ]		517433	0					
ANR	518267	Identifier	blackptcomps		517433	0					
ANR	518268	Identifier	k		517433	1					
ANR	518269	Identifier	gsBPNOTSPECIFIED		517433	1					
ANR	518270	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	645:12:26816:26855	517433	3	True				
ANR	518271	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		517433	0		=			
ANR	518272	ArrayIndexing	blackpreserve [ k ]		517433	0					
ANR	518273	Identifier	blackpreserve		517433	0					
ANR	518274	Identifier	k		517433	1					
ANR	518275	Identifier	gsBKPRESNOTSPECIFIED		517433	1					
ANR	518276	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	647:8:26875:26924	517433	1	True				
ANR	518277	CallExpression	"param_string_from_string ( proof_profile , null_str )"		517433	0					
ANR	518278	Callee	param_string_from_string		517433	0					
ANR	518279	Identifier	param_string_from_string		517433	0					
ANR	518280	ArgumentList	proof_profile		517433	1					
ANR	518281	Argument	proof_profile		517433	0					
ANR	518282	Identifier	proof_profile		517433	0					
ANR	518283	Argument	null_str		517433	1					
ANR	518284	Identifier	null_str		517433	0					
ANR	518285	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	648:8:26934:26982	517433	2	True				
ANR	518286	CallExpression	"param_string_from_string ( link_profile , null_str )"		517433	0					
ANR	518287	Callee	param_string_from_string		517433	0					
ANR	518288	Identifier	param_string_from_string		517433	0					
ANR	518289	ArgumentList	link_profile		517433	1					
ANR	518290	Argument	link_profile		517433	0					
ANR	518291	Identifier	link_profile		517433	0					
ANR	518292	Argument	null_str		517433	1					
ANR	518293	Identifier	null_str		517433	0					
ANR	518294	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	649:8:26992:27041	517433	3	True				
ANR	518295	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		517433	0					
ANR	518296	Callee	param_string_from_string		517433	0					
ANR	518297	Identifier	param_string_from_string		517433	0					
ANR	518298	ArgumentList	icc_colorants		517433	1					
ANR	518299	Argument	icc_colorants		517433	0					
ANR	518300	Identifier	icc_colorants		517433	0					
ANR	518301	Argument	null_str		517433	1					
ANR	518302	Identifier	null_str		517433	0					
ANR	518303	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	650:8:27051:27102	517433	4	True				
ANR	518304	CallExpression	"param_string_from_string ( postren_profile , null_str )"		517433	0					
ANR	518305	Callee	param_string_from_string		517433	0					
ANR	518306	Identifier	param_string_from_string		517433	0					
ANR	518307	ArgumentList	postren_profile		517433	1					
ANR	518308	Argument	postren_profile		517433	0					
ANR	518309	Identifier	postren_profile		517433	0					
ANR	518310	Argument	null_str		517433	1					
ANR	518311	Identifier	null_str		517433	0					
ANR	518312	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	651:8:27112:27161	517433	5	True				
ANR	518313	CallExpression	"param_string_from_string ( blend_profile , null_str )"		517433	0					
ANR	518314	Callee	param_string_from_string		517433	0					
ANR	518315	Identifier	param_string_from_string		517433	0					
ANR	518316	ArgumentList	blend_profile		517433	1					
ANR	518317	Argument	blend_profile		517433	0					
ANR	518318	Identifier	blend_profile		517433	0					
ANR	518319	Argument	null_str		517433	1					
ANR	518320	Identifier	null_str		517433	0					
ANR	518321	Statement	if	655:4:27234:27235	517433	39	True				
ANR	518322	Statement	(	655:7:27237:27237	517433	40	True				
ANR	518323	Statement	(	656:8:27247:27247	517433	41	True				
ANR	518324	Statement	code	656:9:27248:27251	517433	42	True				
ANR	518325	Statement	=	656:14:27253:27253	517433	43	True				
ANR	518326	Statement	param_write_name	656:16:27255:27270	517433	44	True				
ANR	518327	Statement	(	656:32:27271:27271	517433	45	True				
ANR	518328	Statement	plist	656:33:27272:27276	517433	46	True				
ANR	518329	Statement	","	656:38:27277:27277	517433	47	True				
ANR	518330	Statement	"""OutputDevice"""	656:40:27279:27292	517433	48	True				
ANR	518331	Statement	","	656:54:27293:27293	517433	49	True				
ANR	518332	Statement	&	656:56:27295:27295	517433	50	True				
ANR	518333	Statement	dns	656:57:27296:27298	517433	51	True				
ANR	518334	Statement	)	656:60:27299:27299	517433	52	True				
ANR	518335	Statement	)	656:61:27300:27300	517433	53	True				
ANR	518336	Statement	<	656:63:27302:27302	517433	54	True				
ANR	518337	Statement	0	656:65:27304:27304	517433	55	True				
ANR	518338	Statement	||	656:67:27306:27307	517433	56	True				
ANR	518339	Statement	(	658:8:27346:27346	517433	57	True				
ANR	518340	Statement	code	658:9:27347:27350	517433	58	True				
ANR	518341	Statement	=	658:14:27352:27352	517433	59	True				
ANR	518342	Statement	param_write_float_array	658:16:27354:27376	517433	60	True				
ANR	518343	Statement	(	658:39:27377:27377	517433	61	True				
ANR	518344	Statement	plist	658:40:27378:27382	517433	62	True				
ANR	518345	Statement	","	658:45:27383:27383	517433	63	True				
ANR	518346	Statement	"""PageSize"""	658:47:27385:27394	517433	64	True				
ANR	518347	Statement	","	658:57:27395:27395	517433	65	True				
ANR	518348	Statement	&	658:59:27397:27397	517433	66	True				
ANR	518349	Statement	msa	658:60:27398:27400	517433	67	True				
ANR	518350	Statement	)	658:63:27401:27401	517433	68	True				
ANR	518351	Statement	)	658:64:27402:27402	517433	69	True				
ANR	518352	Statement	<	658:66:27404:27404	517433	70	True				
ANR	518353	Statement	0	658:68:27406:27406	517433	71	True				
ANR	518354	Statement	||	658:70:27408:27409	517433	72	True				
ANR	518355	Statement	(	660:8:27426:27426	517433	73	True				
ANR	518356	Statement	code	660:9:27427:27430	517433	74	True				
ANR	518357	Statement	=	660:14:27432:27432	517433	75	True				
ANR	518358	Statement	(	660:16:27434:27434	517433	76	True				
ANR	518359	Statement	pcms	660:17:27435:27438	517433	77	True				
ANR	518360	Statement	.	660:21:27439:27439	517433	78	True				
ANR	518361	Statement	data	660:22:27440:27443	517433	79	True				
ANR	518362	Statement	==	660:27:27445:27446	517433	80	True				
ANR	518363	Statement	0	660:30:27448:27448	517433	81	True				
ANR	518364	Statement	?	660:32:27450:27450	517433	82	True				
ANR	518365	Label	0 :	660:34:27452:27454	517433	83	True				
ANR	518366	Statement	param_write_name	661:17:27473:27488	517433	84	True				
ANR	518367	Statement	(	661:33:27489:27489	517433	85	True				
ANR	518368	Statement	plist	661:34:27490:27494	517433	86	True				
ANR	518369	Statement	","	661:39:27495:27495	517433	87	True				
ANR	518370	Statement	"""ProcessColorModel"""	661:41:27497:27515	517433	88	True				
ANR	518371	Statement	","	661:60:27516:27516	517433	89	True				
ANR	518372	Statement	&	661:62:27518:27518	517433	90	True				
ANR	518373	Statement	pcms	661:63:27519:27522	517433	91	True				
ANR	518374	Statement	)	661:67:27523:27523	517433	92	True				
ANR	518375	Statement	)	661:68:27524:27524	517433	93	True				
ANR	518376	Statement	)	661:69:27525:27525	517433	94	True				
ANR	518377	Statement	<	661:71:27527:27527	517433	95	True				
ANR	518378	Statement	0	661:73:27529:27529	517433	96	True				
ANR	518379	Statement	||	661:75:27531:27532	517433	97	True				
ANR	518380	Statement	(	662:8:27542:27542	517433	98	True				
ANR	518381	Statement	code	662:9:27543:27546	517433	99	True				
ANR	518382	Statement	=	662:14:27548:27548	517433	100	True				
ANR	518383	Statement	param_write_float_array	662:16:27550:27572	517433	101	True				
ANR	518384	Statement	(	662:39:27573:27573	517433	102	True				
ANR	518385	Statement	plist	662:40:27574:27578	517433	103	True				
ANR	518386	Statement	","	662:45:27579:27579	517433	104	True				
ANR	518387	Statement	"""HWResolution"""	662:47:27581:27594	517433	105	True				
ANR	518388	Statement	","	662:61:27595:27595	517433	106	True				
ANR	518389	Statement	&	662:63:27597:27597	517433	107	True				
ANR	518390	Statement	hwra	662:64:27598:27601	517433	108	True				
ANR	518391	Statement	)	662:68:27602:27602	517433	109	True				
ANR	518392	Statement	)	662:69:27603:27603	517433	110	True				
ANR	518393	Statement	<	662:71:27605:27605	517433	111	True				
ANR	518394	Statement	0	662:73:27607:27607	517433	112	True				
ANR	518395	Statement	||	662:75:27609:27610	517433	113	True				
ANR	518396	Statement	(	663:8:27620:27620	517433	114	True				
ANR	518397	Statement	code	663:9:27621:27624	517433	115	True				
ANR	518398	Statement	=	663:14:27626:27626	517433	116	True				
ANR	518399	Statement	(	663:16:27628:27628	517433	117	True				
ANR	518400	Statement	dev	663:17:27629:27631	517433	118	True				
ANR	518401	Statement	->	663:20:27632:27633	517433	119	True				
ANR	518402	Statement	ImagingBBox_set	663:22:27634:27648	517433	120	True				
ANR	518403	Statement	?	663:38:27650:27650	517433	121	True				
ANR	518404	Statement	param_write_float_array	664:17:27669:27691	517433	122	True				
ANR	518405	Statement	(	664:40:27692:27692	517433	123	True				
ANR	518406	Statement	plist	664:41:27693:27697	517433	124	True				
ANR	518407	Statement	","	664:46:27698:27698	517433	125	True				
ANR	518408	Statement	"""ImagingBBox"""	664:48:27700:27712	517433	126	True				
ANR	518409	Statement	","	664:61:27713:27713	517433	127	True				
ANR	518410	Statement	&	664:63:27715:27715	517433	128	True				
ANR	518411	Statement	ibba	664:64:27716:27719	517433	129	True				
ANR	518412	Statement	)	664:68:27720:27720	517433	130	True				
ANR	518413	Statement	:	664:70:27722:27722	517433	131	True				
ANR	518414	Statement	param_write_null	665:17:27741:27756	517433	132	True				
ANR	518415	Statement	(	665:33:27757:27757	517433	133	True				
ANR	518416	Statement	plist	665:34:27758:27762	517433	134	True				
ANR	518417	Statement	","	665:39:27763:27763	517433	135	True				
ANR	518418	Statement	"""ImagingBBox"""	665:41:27765:27777	517433	136	True				
ANR	518419	Statement	)	665:54:27778:27778	517433	137	True				
ANR	518420	Statement	)	665:55:27779:27779	517433	138	True				
ANR	518421	Statement	)	665:56:27780:27780	517433	139	True				
ANR	518422	Statement	<	665:58:27782:27782	517433	140	True				
ANR	518423	Statement	0	665:60:27784:27784	517433	141	True				
ANR	518424	Statement	||	665:62:27786:27787	517433	142	True				
ANR	518425	Statement	(	666:8:27797:27797	517433	143	True				
ANR	518426	Statement	code	666:9:27798:27801	517433	144	True				
ANR	518427	Statement	=	666:14:27803:27803	517433	145	True				
ANR	518428	Statement	param_write_float_array	666:16:27805:27827	517433	146	True				
ANR	518429	Statement	(	666:39:27828:27828	517433	147	True				
ANR	518430	Statement	plist	666:40:27829:27833	517433	148	True				
ANR	518431	Statement	","	666:45:27834:27834	517433	149	True				
ANR	518432	Statement	"""Margins"""	666:47:27836:27844	517433	150	True				
ANR	518433	Statement	","	666:56:27845:27845	517433	151	True				
ANR	518434	Statement	&	666:58:27847:27847	517433	152	True				
ANR	518435	Statement	ma	666:59:27848:27849	517433	153	True				
ANR	518436	Statement	)	666:61:27850:27850	517433	154	True				
ANR	518437	Statement	)	666:62:27851:27851	517433	155	True				
ANR	518438	Statement	<	666:64:27853:27853	517433	156	True				
ANR	518439	Statement	0	666:66:27855:27855	517433	157	True				
ANR	518440	Statement	||	666:68:27857:27858	517433	158	True				
ANR	518441	Statement	(	667:8:27868:27868	517433	159	True				
ANR	518442	Statement	code	667:9:27869:27872	517433	160	True				
ANR	518443	Statement	=	667:14:27874:27874	517433	161	True				
ANR	518444	Statement	param_write_int	667:16:27876:27890	517433	162	True				
ANR	518445	Statement	(	667:31:27891:27891	517433	163	True				
ANR	518446	Statement	plist	667:32:27892:27896	517433	164	True				
ANR	518447	Statement	","	667:37:27897:27897	517433	165	True				
ANR	518448	Statement	"""MaxSeparations"""	667:39:27899:27914	517433	166	True				
ANR	518449	Statement	","	667:55:27915:27915	517433	167	True				
ANR	518450	Statement	&	667:57:27917:27917	517433	168	True				
ANR	518451	Statement	mns	667:58:27918:27920	517433	169	True				
ANR	518452	Statement	)	667:61:27921:27921	517433	170	True				
ANR	518453	Statement	)	667:62:27922:27922	517433	171	True				
ANR	518454	Statement	<	667:64:27924:27924	517433	172	True				
ANR	518455	Statement	0	667:66:27926:27926	517433	173	True				
ANR	518456	Statement	||	667:68:27928:27929	517433	174	True				
ANR	518457	Statement	(	668:8:27939:27939	517433	175	True				
ANR	518458	Statement	code	668:9:27940:27943	517433	176	True				
ANR	518459	Statement	=	668:14:27945:27945	517433	177	True				
ANR	518460	Statement	(	668:16:27947:27947	517433	178	True				
ANR	518461	Statement	dev	668:17:27948:27950	517433	179	True				
ANR	518462	Statement	->	668:20:27951:27952	517433	180	True				
ANR	518463	Statement	NumCopies_set	668:22:27953:27965	517433	181	True				
ANR	518464	Statement	<	668:36:27967:27967	517433	182	True				
ANR	518465	Statement	0	668:38:27969:27969	517433	183	True				
ANR	518466	Statement	||	668:40:27971:27972	517433	184	True				
ANR	518467	Statement	(	669:17:27991:27991	517433	185	True				
ANR	518468	Statement	*	669:18:27992:27992	517433	186	True				
ANR	518469	Statement	dev_proc	669:19:27993:28000	517433	187	True				
ANR	518470	Statement	(	669:27:28001:28001	517433	188	True				
ANR	518471	Statement	dev	669:28:28002:28004	517433	189	True				
ANR	518472	Statement	","	669:31:28005:28005	517433	190	True				
ANR	518473	Statement	get_page_device	669:33:28007:28021	517433	191	True				
ANR	518474	Statement	)	669:48:28022:28022	517433	192	True				
ANR	518475	Statement	)	669:49:28023:28023	517433	193	True				
ANR	518476	Statement	(	669:50:28024:28024	517433	194	True				
ANR	518477	Statement	dev	669:51:28025:28027	517433	195	True				
ANR	518478	Statement	)	669:54:28028:28028	517433	196	True				
ANR	518479	Statement	==	669:56:28030:28031	517433	197	True				
ANR	518480	Statement	0	669:59:28033:28033	517433	198	True				
ANR	518481	Statement	?	669:61:28035:28035	517433	199	True				
ANR	518482	Label	0 :	669:63:28037:28038	517433	200	True				
ANR	518483	Statement	dev	670:17:28057:28059	517433	201	True				
ANR	518484	Statement	->	670:20:28060:28061	517433	202	True				
ANR	518485	Statement	NumCopies_set	670:22:28062:28074	517433	203	True				
ANR	518486	Statement	?	670:36:28076:28076	517433	204	True				
ANR	518487	Statement	param_write_int	671:17:28095:28109	517433	205	True				
ANR	518488	Statement	(	671:32:28110:28110	517433	206	True				
ANR	518489	Statement	plist	671:33:28111:28115	517433	207	True				
ANR	518490	Statement	","	671:38:28116:28116	517433	208	True				
ANR	518491	Statement	"""NumCopies"""	671:40:28118:28128	517433	209	True				
ANR	518492	Statement	","	671:51:28129:28129	517433	210	True				
ANR	518493	Statement	&	671:53:28131:28131	517433	211	True				
ANR	518494	Statement	dev	671:54:28132:28134	517433	212	True				
ANR	518495	Statement	->	671:57:28135:28136	517433	213	True				
ANR	518496	Statement	NumCopies	671:59:28137:28145	517433	214	True				
ANR	518497	Statement	)	671:68:28146:28146	517433	215	True				
ANR	518498	Statement	:	671:70:28148:28148	517433	216	True				
ANR	518499	Statement	param_write_null	672:17:28167:28182	517433	217	True				
ANR	518500	Statement	(	672:33:28183:28183	517433	218	True				
ANR	518501	Statement	plist	672:34:28184:28188	517433	219	True				
ANR	518502	Statement	","	672:39:28189:28189	517433	220	True				
ANR	518503	Statement	"""NumCopies"""	672:41:28191:28201	517433	221	True				
ANR	518504	Statement	)	672:52:28202:28202	517433	222	True				
ANR	518505	Statement	)	672:53:28203:28203	517433	223	True				
ANR	518506	Statement	)	672:54:28204:28204	517433	224	True				
ANR	518507	Statement	<	672:56:28206:28206	517433	225	True				
ANR	518508	Statement	0	672:58:28208:28208	517433	226	True				
ANR	518509	Statement	||	672:60:28210:28211	517433	227	True				
ANR	518510	Statement	(	673:8:28221:28221	517433	228	True				
ANR	518511	Statement	code	673:9:28222:28225	517433	229	True				
ANR	518512	Statement	=	673:14:28227:28227	517433	230	True				
ANR	518513	Statement	param_write_name_array	673:16:28229:28250	517433	231	True				
ANR	518514	Statement	(	673:38:28251:28251	517433	232	True				
ANR	518515	Statement	plist	673:39:28252:28256	517433	233	True				
ANR	518516	Statement	","	673:44:28257:28257	517433	234	True				
ANR	518517	Statement	"""SeparationColorNames"""	673:46:28259:28280	517433	235	True				
ANR	518518	Statement	","	673:68:28281:28281	517433	236	True				
ANR	518519	Statement	&	673:70:28283:28283	517433	237	True				
ANR	518520	Statement	scna	673:71:28284:28287	517433	238	True				
ANR	518521	Statement	)	673:75:28288:28288	517433	239	True				
ANR	518522	Statement	)	673:76:28289:28289	517433	240	True				
ANR	518523	Statement	<	673:78:28291:28291	517433	241	True				
ANR	518524	Statement	0	673:80:28293:28293	517433	242	True				
ANR	518525	Statement	||	673:82:28295:28296	517433	243	True				
ANR	518526	Statement	(	674:8:28306:28306	517433	244	True				
ANR	518527	Statement	code	674:9:28307:28310	517433	245	True				
ANR	518528	Statement	=	674:14:28312:28312	517433	246	True				
ANR	518529	Statement	param_write_bool	674:16:28314:28329	517433	247	True				
ANR	518530	Statement	(	674:32:28330:28330	517433	248	True				
ANR	518531	Statement	plist	674:33:28331:28335	517433	249	True				
ANR	518532	Statement	","	674:38:28336:28336	517433	250	True				
ANR	518533	Statement	"""Separations"""	674:40:28338:28350	517433	251	True				
ANR	518534	Statement	","	674:53:28351:28351	517433	252	True				
ANR	518535	Statement	&	674:55:28353:28353	517433	253	True				
ANR	518536	Statement	seprs	674:56:28354:28358	517433	254	True				
ANR	518537	Statement	)	674:61:28359:28359	517433	255	True				
ANR	518538	Statement	)	674:62:28360:28360	517433	256	True				
ANR	518539	Statement	<	674:64:28362:28362	517433	257	True				
ANR	518540	Statement	0	674:66:28364:28364	517433	258	True				
ANR	518541	Statement	||	674:68:28366:28367	517433	259	True				
ANR	518542	Statement	(	675:8:28377:28377	517433	260	True				
ANR	518543	Statement	code	675:9:28378:28381	517433	261	True				
ANR	518544	Statement	=	675:14:28383:28383	517433	262	True				
ANR	518545	Statement	param_write_bool	675:16:28385:28400	517433	263	True				
ANR	518546	Statement	(	675:32:28401:28401	517433	264	True				
ANR	518547	Statement	plist	675:33:28402:28406	517433	265	True				
ANR	518548	Statement	","	675:38:28407:28407	517433	266	True				
ANR	518549	Statement	"""UseCIEColor"""	675:40:28409:28421	517433	267	True				
ANR	518550	Statement	","	675:53:28422:28422	517433	268	True				
ANR	518551	Statement	&	675:55:28424:28424	517433	269	True				
ANR	518552	Statement	dev	675:56:28425:28427	517433	270	True				
ANR	518553	Statement	->	675:59:28428:28429	517433	271	True				
ANR	518554	Statement	UseCIEColor	675:61:28430:28440	517433	272	True				
ANR	518555	Statement	)	675:72:28441:28441	517433	273	True				
ANR	518556	Statement	)	675:73:28442:28442	517433	274	True				
ANR	518557	Statement	<	675:75:28444:28444	517433	275	True				
ANR	518558	Statement	0	675:77:28446:28446	517433	276	True				
ANR	518559	Statement	||	675:79:28448:28449	517433	277	True				
ANR	518560	Statement	(	679:8:28649:28649	517433	278	True				
ANR	518561	Statement	code	679:9:28650:28653	517433	279	True				
ANR	518562	Statement	=	679:14:28655:28655	517433	280	True				
ANR	518563	Statement	param_write_bool	679:16:28657:28672	517433	281	True				
ANR	518564	Statement	(	679:32:28673:28673	517433	282	True				
ANR	518565	Statement	plist	679:33:28674:28678	517433	283	True				
ANR	518566	Statement	","	679:38:28679:28679	517433	284	True				
ANR	518567	Statement	"""DeviceGrayToK"""	679:40:28681:28695	517433	285	True				
ANR	518568	Statement	","	679:55:28696:28696	517433	286	True				
ANR	518569	Statement	&	679:57:28698:28698	517433	287	True				
ANR	518570	Statement	devicegraytok	679:58:28699:28711	517433	288	True				
ANR	518571	Statement	)	679:71:28712:28712	517433	289	True				
ANR	518572	Statement	)	679:72:28713:28713	517433	290	True				
ANR	518573	Statement	<	679:74:28715:28715	517433	291	True				
ANR	518574	Statement	0	679:76:28717:28717	517433	292	True				
ANR	518575	Statement	||	679:78:28719:28720	517433	293	True				
ANR	518576	Statement	(	680:8:28730:28730	517433	294	True				
ANR	518577	Statement	code	680:9:28731:28734	517433	295	True				
ANR	518578	Statement	=	680:14:28736:28736	517433	296	True				
ANR	518579	Statement	param_write_bool	680:16:28738:28753	517433	297	True				
ANR	518580	Statement	(	680:32:28754:28754	517433	298	True				
ANR	518581	Statement	plist	680:33:28755:28759	517433	299	True				
ANR	518582	Statement	","	680:38:28760:28760	517433	300	True				
ANR	518583	Statement	"""GrayDetection"""	680:40:28762:28776	517433	301	True				
ANR	518584	Statement	","	680:55:28777:28777	517433	302	True				
ANR	518585	Statement	&	680:57:28779:28779	517433	303	True				
ANR	518586	Statement	graydetection	680:58:28780:28792	517433	304	True				
ANR	518587	Statement	)	680:71:28793:28793	517433	305	True				
ANR	518588	Statement	)	680:72:28794:28794	517433	306	True				
ANR	518589	Statement	<	680:74:28796:28796	517433	307	True				
ANR	518590	Statement	0	680:76:28798:28798	517433	308	True				
ANR	518591	Statement	||	680:78:28800:28801	517433	309	True				
ANR	518592	Statement	(	681:8:28811:28811	517433	310	True				
ANR	518593	Statement	code	681:9:28812:28815	517433	311	True				
ANR	518594	Statement	=	681:14:28817:28817	517433	312	True				
ANR	518595	Statement	param_write_bool	681:16:28819:28834	517433	313	True				
ANR	518596	Statement	(	681:32:28835:28835	517433	314	True				
ANR	518597	Statement	plist	681:33:28836:28840	517433	315	True				
ANR	518598	Statement	","	681:38:28841:28841	517433	316	True				
ANR	518599	Statement	"""UseFastColor"""	681:40:28843:28856	517433	317	True				
ANR	518600	Statement	","	681:54:28857:28857	517433	318	True				
ANR	518601	Statement	&	681:56:28859:28859	517433	319	True				
ANR	518602	Statement	usefastcolor	681:57:28860:28871	517433	320	True				
ANR	518603	Statement	)	681:69:28872:28872	517433	321	True				
ANR	518604	Statement	)	681:70:28873:28873	517433	322	True				
ANR	518605	Statement	<	681:72:28875:28875	517433	323	True				
ANR	518606	Statement	0	681:74:28877:28877	517433	324	True				
ANR	518607	Statement	||	681:76:28879:28880	517433	325	True				
ANR	518608	Statement	(	682:8:28890:28890	517433	326	True				
ANR	518609	Statement	code	682:9:28891:28894	517433	327	True				
ANR	518610	Statement	=	682:14:28896:28896	517433	328	True				
ANR	518611	Statement	param_write_bool	682:16:28898:28913	517433	329	True				
ANR	518612	Statement	(	682:32:28914:28914	517433	330	True				
ANR	518613	Statement	plist	682:33:28915:28919	517433	331	True				
ANR	518614	Statement	","	682:38:28920:28920	517433	332	True				
ANR	518615	Statement	"""SimulateOverprint"""	682:40:28922:28940	517433	333	True				
ANR	518616	Statement	","	682:59:28941:28941	517433	334	True				
ANR	518617	Statement	&	682:61:28943:28943	517433	335	True				
ANR	518618	Statement	sim_overprint	682:62:28944:28956	517433	336	True				
ANR	518619	Statement	)	682:75:28957:28957	517433	337	True				
ANR	518620	Statement	)	682:76:28958:28958	517433	338	True				
ANR	518621	Statement	<	682:78:28960:28960	517433	339	True				
ANR	518622	Statement	0	682:80:28962:28962	517433	340	True				
ANR	518623	Statement	||	682:82:28964:28965	517433	341	True				
ANR	518624	Statement	(	683:8:28975:28975	517433	342	True				
ANR	518625	Statement	code	683:9:28976:28979	517433	343	True				
ANR	518626	Statement	=	683:14:28981:28981	517433	344	True				
ANR	518627	Statement	param_write_bool	683:16:28983:28998	517433	345	True				
ANR	518628	Statement	(	683:32:28999:28999	517433	346	True				
ANR	518629	Statement	plist	683:33:29000:29004	517433	347	True				
ANR	518630	Statement	","	683:38:29005:29005	517433	348	True				
ANR	518631	Statement	"""PreBandThreshold"""	683:40:29007:29024	517433	349	True				
ANR	518632	Statement	","	683:58:29025:29025	517433	350	True				
ANR	518633	Statement	&	683:60:29027:29027	517433	351	True				
ANR	518634	Statement	prebandthreshold	683:61:29028:29043	517433	352	True				
ANR	518635	Statement	)	683:77:29044:29044	517433	353	True				
ANR	518636	Statement	)	683:78:29045:29045	517433	354	True				
ANR	518637	Statement	<	683:80:29047:29047	517433	355	True				
ANR	518638	Statement	0	683:82:29049:29049	517433	356	True				
ANR	518639	Statement	||	683:84:29051:29052	517433	357	True				
ANR	518640	Statement	(	684:8:29062:29062	517433	358	True				
ANR	518641	Statement	code	684:9:29063:29066	517433	359	True				
ANR	518642	Statement	=	684:14:29068:29068	517433	360	True				
ANR	518643	Statement	param_write_string	684:16:29070:29087	517433	361	True				
ANR	518644	Statement	(	684:34:29088:29088	517433	362	True				
ANR	518645	Statement	plist	684:35:29089:29093	517433	363	True				
ANR	518646	Statement	","	684:40:29094:29094	517433	364	True				
ANR	518647	Statement	"""OutputICCProfile"""	684:41:29095:29112	517433	365	True				
ANR	518648	Statement	","	684:59:29113:29113	517433	366	True				
ANR	518649	Statement	&	684:61:29115:29115	517433	367	True				
ANR	518650	Statement	(	684:62:29116:29116	517433	368	True				
ANR	518651	Statement	profile_array	684:63:29117:29129	517433	369	True				
ANR	518652	Statement	[	684:76:29130:29130	517433	370	True				
ANR	518653	Statement	0	684:77:29131:29131	517433	371	True				
ANR	518654	Statement	]	684:78:29132:29132	517433	372	True				
ANR	518655	Statement	)	684:79:29133:29133	517433	373	True				
ANR	518656	Statement	)	684:80:29134:29134	517433	374	True				
ANR	518657	Statement	)	684:81:29135:29135	517433	375	True				
ANR	518658	Statement	<	684:83:29137:29137	517433	376	True				
ANR	518659	Statement	0	684:85:29139:29139	517433	377	True				
ANR	518660	Statement	||	684:87:29141:29142	517433	378	True				
ANR	518661	Statement	(	685:8:29152:29152	517433	379	True				
ANR	518662	Statement	code	685:9:29153:29156	517433	380	True				
ANR	518663	Statement	=	685:14:29158:29158	517433	381	True				
ANR	518664	Statement	param_write_string	685:16:29160:29177	517433	382	True				
ANR	518665	Statement	(	685:34:29178:29178	517433	383	True				
ANR	518666	Statement	plist	685:35:29179:29183	517433	384	True				
ANR	518667	Statement	","	685:40:29184:29184	517433	385	True				
ANR	518668	Statement	"""GraphicICCProfile"""	685:41:29185:29203	517433	386	True				
ANR	518669	Statement	","	685:60:29204:29204	517433	387	True				
ANR	518670	Statement	&	685:62:29206:29206	517433	388	True				
ANR	518671	Statement	(	685:63:29207:29207	517433	389	True				
ANR	518672	Statement	profile_array	685:64:29208:29220	517433	390	True				
ANR	518673	Statement	[	685:77:29221:29221	517433	391	True				
ANR	518674	Statement	1	685:78:29222:29222	517433	392	True				
ANR	518675	Statement	]	685:79:29223:29223	517433	393	True				
ANR	518676	Statement	)	685:80:29224:29224	517433	394	True				
ANR	518677	Statement	)	685:81:29225:29225	517433	395	True				
ANR	518678	Statement	)	685:82:29226:29226	517433	396	True				
ANR	518679	Statement	<	685:84:29228:29228	517433	397	True				
ANR	518680	Statement	0	685:86:29230:29230	517433	398	True				
ANR	518681	Statement	||	685:88:29232:29233	517433	399	True				
ANR	518682	Statement	(	686:8:29243:29243	517433	400	True				
ANR	518683	Statement	code	686:9:29244:29247	517433	401	True				
ANR	518684	Statement	=	686:14:29249:29249	517433	402	True				
ANR	518685	Statement	param_write_string	686:16:29251:29268	517433	403	True				
ANR	518686	Statement	(	686:34:29269:29269	517433	404	True				
ANR	518687	Statement	plist	686:35:29270:29274	517433	405	True				
ANR	518688	Statement	","	686:40:29275:29275	517433	406	True				
ANR	518689	Statement	"""ImageICCProfile"""	686:41:29276:29292	517433	407	True				
ANR	518690	Statement	","	686:58:29293:29293	517433	408	True				
ANR	518691	Statement	&	686:60:29295:29295	517433	409	True				
ANR	518692	Statement	(	686:61:29296:29296	517433	410	True				
ANR	518693	Statement	profile_array	686:62:29297:29309	517433	411	True				
ANR	518694	Statement	[	686:75:29310:29310	517433	412	True				
ANR	518695	Statement	2	686:76:29311:29311	517433	413	True				
ANR	518696	Statement	]	686:77:29312:29312	517433	414	True				
ANR	518697	Statement	)	686:78:29313:29313	517433	415	True				
ANR	518698	Statement	)	686:79:29314:29314	517433	416	True				
ANR	518699	Statement	)	686:80:29315:29315	517433	417	True				
ANR	518700	Statement	<	686:82:29317:29317	517433	418	True				
ANR	518701	Statement	0	686:84:29319:29319	517433	419	True				
ANR	518702	Statement	||	686:86:29321:29322	517433	420	True				
ANR	518703	Statement	(	687:8:29332:29332	517433	421	True				
ANR	518704	Statement	code	687:9:29333:29336	517433	422	True				
ANR	518705	Statement	=	687:14:29338:29338	517433	423	True				
ANR	518706	Statement	param_write_string	687:16:29340:29357	517433	424	True				
ANR	518707	Statement	(	687:34:29358:29358	517433	425	True				
ANR	518708	Statement	plist	687:35:29359:29363	517433	426	True				
ANR	518709	Statement	","	687:40:29364:29364	517433	427	True				
ANR	518710	Statement	"""TextICCProfile"""	687:41:29365:29380	517433	428	True				
ANR	518711	Statement	","	687:57:29381:29381	517433	429	True				
ANR	518712	Statement	&	687:59:29383:29383	517433	430	True				
ANR	518713	Statement	(	687:60:29384:29384	517433	431	True				
ANR	518714	Statement	profile_array	687:61:29385:29397	517433	432	True				
ANR	518715	Statement	[	687:74:29398:29398	517433	433	True				
ANR	518716	Statement	3	687:75:29399:29399	517433	434	True				
ANR	518717	Statement	]	687:76:29400:29400	517433	435	True				
ANR	518718	Statement	)	687:77:29401:29401	517433	436	True				
ANR	518719	Statement	)	687:78:29402:29402	517433	437	True				
ANR	518720	Statement	)	687:79:29403:29403	517433	438	True				
ANR	518721	Statement	<	687:81:29405:29405	517433	439	True				
ANR	518722	Statement	0	687:83:29407:29407	517433	440	True				
ANR	518723	Statement	||	687:85:29409:29410	517433	441	True				
ANR	518724	Statement	(	688:8:29420:29420	517433	442	True				
ANR	518725	Statement	code	688:9:29421:29424	517433	443	True				
ANR	518726	Statement	=	688:14:29426:29426	517433	444	True				
ANR	518727	Statement	param_write_string	688:16:29428:29445	517433	445	True				
ANR	518728	Statement	(	688:34:29446:29446	517433	446	True				
ANR	518729	Statement	plist	688:35:29447:29451	517433	447	True				
ANR	518730	Statement	","	688:40:29452:29452	517433	448	True				
ANR	518731	Statement	"""ProofProfile"""	688:41:29453:29466	517433	449	True				
ANR	518732	Statement	","	688:55:29467:29467	517433	450	True				
ANR	518733	Statement	&	688:57:29469:29469	517433	451	True				
ANR	518734	Statement	(	688:58:29470:29470	517433	452	True				
ANR	518735	Statement	proof_profile	688:59:29471:29483	517433	453	True				
ANR	518736	Statement	)	688:72:29484:29484	517433	454	True				
ANR	518737	Statement	)	688:73:29485:29485	517433	455	True				
ANR	518738	Statement	)	688:74:29486:29486	517433	456	True				
ANR	518739	Statement	<	688:76:29488:29488	517433	457	True				
ANR	518740	Statement	0	688:78:29490:29490	517433	458	True				
ANR	518741	Statement	||	688:80:29492:29493	517433	459	True				
ANR	518742	Statement	(	689:8:29503:29503	517433	460	True				
ANR	518743	Statement	code	689:9:29504:29507	517433	461	True				
ANR	518744	Statement	=	689:14:29509:29509	517433	462	True				
ANR	518745	Statement	param_write_string	689:16:29511:29528	517433	463	True				
ANR	518746	Statement	(	689:34:29529:29529	517433	464	True				
ANR	518747	Statement	plist	689:35:29530:29534	517433	465	True				
ANR	518748	Statement	","	689:40:29535:29535	517433	466	True				
ANR	518749	Statement	"""PostRenderProfile"""	689:42:29537:29555	517433	467	True				
ANR	518750	Statement	","	689:61:29556:29556	517433	468	True				
ANR	518751	Statement	&	689:63:29558:29558	517433	469	True				
ANR	518752	Statement	(	689:64:29559:29559	517433	470	True				
ANR	518753	Statement	postren_profile	689:65:29560:29574	517433	471	True				
ANR	518754	Statement	)	689:80:29575:29575	517433	472	True				
ANR	518755	Statement	)	689:81:29576:29576	517433	473	True				
ANR	518756	Statement	)	689:82:29577:29577	517433	474	True				
ANR	518757	Statement	<	689:84:29579:29579	517433	475	True				
ANR	518758	Statement	0	689:86:29581:29581	517433	476	True				
ANR	518759	Statement	||	689:88:29583:29584	517433	477	True				
ANR	518760	Statement	(	690:8:29594:29594	517433	478	True				
ANR	518761	Statement	code	690:9:29595:29598	517433	479	True				
ANR	518762	Statement	=	690:14:29600:29600	517433	480	True				
ANR	518763	Statement	param_write_string	690:16:29602:29619	517433	481	True				
ANR	518764	Statement	(	690:34:29620:29620	517433	482	True				
ANR	518765	Statement	plist	690:35:29621:29625	517433	483	True				
ANR	518766	Statement	","	690:40:29626:29626	517433	484	True				
ANR	518767	Statement	"""BlendColorProfile"""	690:42:29628:29646	517433	485	True				
ANR	518768	Statement	","	690:61:29647:29647	517433	486	True				
ANR	518769	Statement	&	690:63:29649:29649	517433	487	True				
ANR	518770	Statement	(	690:64:29650:29650	517433	488	True				
ANR	518771	Statement	blend_profile	690:65:29651:29663	517433	489	True				
ANR	518772	Statement	)	690:78:29664:29664	517433	490	True				
ANR	518773	Statement	)	690:79:29665:29665	517433	491	True				
ANR	518774	Statement	)	690:80:29666:29666	517433	492	True				
ANR	518775	Statement	<	690:82:29668:29668	517433	493	True				
ANR	518776	Statement	0	690:84:29670:29670	517433	494	True				
ANR	518777	Statement	||	690:86:29672:29673	517433	495	True				
ANR	518778	Statement	(	691:8:29683:29683	517433	496	True				
ANR	518779	Statement	code	691:9:29684:29687	517433	497	True				
ANR	518780	Statement	=	691:14:29689:29689	517433	498	True				
ANR	518781	Statement	param_write_string	691:16:29691:29708	517433	499	True				
ANR	518782	Statement	(	691:34:29709:29709	517433	500	True				
ANR	518783	Statement	plist	691:35:29710:29714	517433	501	True				
ANR	518784	Statement	","	691:40:29715:29715	517433	502	True				
ANR	518785	Statement	"""DeviceLinkProfile"""	691:41:29716:29734	517433	503	True				
ANR	518786	Statement	","	691:60:29735:29735	517433	504	True				
ANR	518787	Statement	&	691:62:29737:29737	517433	505	True				
ANR	518788	Statement	(	691:63:29738:29738	517433	506	True				
ANR	518789	Statement	link_profile	691:64:29739:29750	517433	507	True				
ANR	518790	Statement	)	691:76:29751:29751	517433	508	True				
ANR	518791	Statement	)	691:77:29752:29752	517433	509	True				
ANR	518792	Statement	)	691:78:29753:29753	517433	510	True				
ANR	518793	Statement	<	691:80:29755:29755	517433	511	True				
ANR	518794	Statement	0	691:82:29757:29757	517433	512	True				
ANR	518795	Statement	||	691:84:29759:29760	517433	513	True				
ANR	518796	Statement	(	692:8:29770:29770	517433	514	True				
ANR	518797	Statement	code	692:9:29771:29774	517433	515	True				
ANR	518798	Statement	=	692:14:29776:29776	517433	516	True				
ANR	518799	Statement	param_write_string	692:16:29778:29795	517433	517	True				
ANR	518800	Statement	(	692:34:29796:29796	517433	518	True				
ANR	518801	Statement	plist	692:35:29797:29801	517433	519	True				
ANR	518802	Statement	","	692:40:29802:29802	517433	520	True				
ANR	518803	Statement	"""ICCOutputColors"""	692:41:29803:29819	517433	521	True				
ANR	518804	Statement	","	692:58:29820:29820	517433	522	True				
ANR	518805	Statement	&	692:60:29822:29822	517433	523	True				
ANR	518806	Statement	(	692:61:29823:29823	517433	524	True				
ANR	518807	Statement	icc_colorants	692:62:29824:29836	517433	525	True				
ANR	518808	Statement	)	692:75:29837:29837	517433	526	True				
ANR	518809	Statement	)	692:76:29838:29838	517433	527	True				
ANR	518810	Statement	)	692:77:29839:29839	517433	528	True				
ANR	518811	Statement	<	692:79:29841:29841	517433	529	True				
ANR	518812	Statement	0	692:81:29843:29843	517433	530	True				
ANR	518813	Statement	||	692:83:29845:29846	517433	531	True				
ANR	518814	Statement	(	693:8:29856:29856	517433	532	True				
ANR	518815	Statement	code	693:9:29857:29860	517433	533	True				
ANR	518816	Statement	=	693:14:29862:29862	517433	534	True				
ANR	518817	Statement	param_write_int	693:16:29864:29878	517433	535	True				
ANR	518818	Statement	(	693:31:29879:29879	517433	536	True				
ANR	518819	Statement	plist	693:32:29880:29884	517433	537	True				
ANR	518820	Statement	","	693:37:29885:29885	517433	538	True				
ANR	518821	Statement	"""RenderIntent"""	693:39:29887:29900	517433	539	True				
ANR	518822	Statement	","	693:53:29901:29901	517433	540	True				
ANR	518823	Statement	(	693:55:29903:29903	517433	541	True				
ANR	518824	Statement	const	693:56:29904:29908	517433	542	True				
ANR	518825	Statement	int	693:62:29910:29912	517433	543	True				
ANR	518826	Statement	*	693:66:29914:29914	517433	544	True				
ANR	518827	Statement	)	693:67:29915:29915	517433	545	True				
ANR	518828	Statement	(	693:68:29916:29916	517433	546	True				
ANR	518829	Statement	&	693:69:29917:29917	517433	547	True				
ANR	518830	Statement	(	693:70:29918:29918	517433	548	True				
ANR	518831	Statement	profile_intents	693:71:29919:29933	517433	549	True				
ANR	518832	Statement	[	693:86:29934:29934	517433	550	True				
ANR	518833	Statement	0	693:87:29935:29935	517433	551	True				
ANR	518834	Statement	]	693:88:29936:29936	517433	552	True				
ANR	518835	Statement	)	693:89:29937:29937	517433	553	True				
ANR	518836	Statement	)	693:90:29938:29938	517433	554	True				
ANR	518837	Statement	)	693:91:29939:29939	517433	555	True				
ANR	518838	Statement	)	693:92:29940:29940	517433	556	True				
ANR	518839	Statement	<	693:94:29942:29942	517433	557	True				
ANR	518840	Statement	0	693:96:29944:29944	517433	558	True				
ANR	518841	Statement	||	693:98:29946:29947	517433	559	True				
ANR	518842	Statement	(	694:8:29957:29957	517433	560	True				
ANR	518843	Statement	code	694:9:29958:29961	517433	561	True				
ANR	518844	Statement	=	694:14:29963:29963	517433	562	True				
ANR	518845	Statement	param_write_int	694:16:29965:29979	517433	563	True				
ANR	518846	Statement	(	694:31:29980:29980	517433	564	True				
ANR	518847	Statement	plist	694:32:29981:29985	517433	565	True				
ANR	518848	Statement	","	694:37:29986:29986	517433	566	True				
ANR	518849	Statement	"""ColorAccuracy"""	694:39:29988:30002	517433	567	True				
ANR	518850	Statement	","	694:54:30003:30003	517433	568	True				
ANR	518851	Statement	(	694:56:30005:30005	517433	569	True				
ANR	518852	Statement	const	694:57:30006:30010	517433	570	True				
ANR	518853	Statement	int	694:63:30012:30014	517433	571	True				
ANR	518854	Statement	*	694:67:30016:30016	517433	572	True				
ANR	518855	Statement	)	694:68:30017:30017	517433	573	True				
ANR	518856	Statement	(	694:69:30018:30018	517433	574	True				
ANR	518857	Statement	&	694:70:30019:30019	517433	575	True				
ANR	518858	Statement	(	694:71:30020:30020	517433	576	True				
ANR	518859	Statement	color_accuracy	694:72:30021:30034	517433	577	True				
ANR	518860	Statement	)	694:86:30035:30035	517433	578	True				
ANR	518861	Statement	)	694:87:30036:30036	517433	579	True				
ANR	518862	Statement	)	694:88:30037:30037	517433	580	True				
ANR	518863	Statement	)	694:89:30038:30038	517433	581	True				
ANR	518864	Statement	<	694:91:30040:30040	517433	582	True				
ANR	518865	Statement	0	694:93:30042:30042	517433	583	True				
ANR	518866	Statement	||	694:95:30044:30045	517433	584	True				
ANR	518867	Statement	(	695:8:30055:30055	517433	585	True				
ANR	518868	Statement	code	695:9:30056:30059	517433	586	True				
ANR	518869	Statement	=	695:14:30061:30061	517433	587	True				
ANR	518870	Statement	param_write_int	695:16:30063:30077	517433	588	True				
ANR	518871	Statement	(	695:31:30078:30078	517433	589	True				
ANR	518872	Statement	plist	695:32:30079:30083	517433	590	True				
ANR	518873	Statement	","	695:37:30084:30084	517433	591	True				
ANR	518874	Statement	"""GraphicIntent"""	695:38:30085:30099	517433	592	True				
ANR	518875	Statement	","	695:53:30100:30100	517433	593	True				
ANR	518876	Statement	(	695:55:30102:30102	517433	594	True				
ANR	518877	Statement	const	695:56:30103:30107	517433	595	True				
ANR	518878	Statement	int	695:62:30109:30111	517433	596	True				
ANR	518879	Statement	*	695:66:30113:30113	517433	597	True				
ANR	518880	Statement	)	695:67:30114:30114	517433	598	True				
ANR	518881	Statement	&	695:69:30116:30116	517433	599	True				
ANR	518882	Statement	(	695:70:30117:30117	517433	600	True				
ANR	518883	Statement	profile_intents	695:71:30118:30132	517433	601	True				
ANR	518884	Statement	[	695:86:30133:30133	517433	602	True				
ANR	518885	Statement	1	695:87:30134:30134	517433	603	True				
ANR	518886	Statement	]	695:88:30135:30135	517433	604	True				
ANR	518887	Statement	)	695:89:30136:30136	517433	605	True				
ANR	518888	Statement	)	695:90:30137:30137	517433	606	True				
ANR	518889	Statement	)	695:91:30138:30138	517433	607	True				
ANR	518890	Statement	<	695:93:30140:30140	517433	608	True				
ANR	518891	Statement	0	695:95:30142:30142	517433	609	True				
ANR	518892	Statement	||	695:97:30144:30145	517433	610	True				
ANR	518893	Statement	(	696:8:30155:30155	517433	611	True				
ANR	518894	Statement	code	696:9:30156:30159	517433	612	True				
ANR	518895	Statement	=	696:14:30161:30161	517433	613	True				
ANR	518896	Statement	param_write_int	696:16:30163:30177	517433	614	True				
ANR	518897	Statement	(	696:31:30178:30178	517433	615	True				
ANR	518898	Statement	plist	696:32:30179:30183	517433	616	True				
ANR	518899	Statement	","	696:37:30184:30184	517433	617	True				
ANR	518900	Statement	"""ImageIntent"""	696:38:30185:30197	517433	618	True				
ANR	518901	Statement	","	696:51:30198:30198	517433	619	True				
ANR	518902	Statement	(	696:53:30200:30200	517433	620	True				
ANR	518903	Statement	const	696:54:30201:30205	517433	621	True				
ANR	518904	Statement	int	696:60:30207:30209	517433	622	True				
ANR	518905	Statement	*	696:64:30211:30211	517433	623	True				
ANR	518906	Statement	)	696:65:30212:30212	517433	624	True				
ANR	518907	Statement	&	696:67:30214:30214	517433	625	True				
ANR	518908	Statement	(	696:68:30215:30215	517433	626	True				
ANR	518909	Statement	profile_intents	696:69:30216:30230	517433	627	True				
ANR	518910	Statement	[	696:84:30231:30231	517433	628	True				
ANR	518911	Statement	2	696:85:30232:30232	517433	629	True				
ANR	518912	Statement	]	696:86:30233:30233	517433	630	True				
ANR	518913	Statement	)	696:87:30234:30234	517433	631	True				
ANR	518914	Statement	)	696:88:30235:30235	517433	632	True				
ANR	518915	Statement	)	696:89:30236:30236	517433	633	True				
ANR	518916	Statement	<	696:91:30238:30238	517433	634	True				
ANR	518917	Statement	0	696:93:30240:30240	517433	635	True				
ANR	518918	Statement	||	696:95:30242:30243	517433	636	True				
ANR	518919	Statement	(	697:8:30253:30253	517433	637	True				
ANR	518920	Statement	code	697:9:30254:30257	517433	638	True				
ANR	518921	Statement	=	697:14:30259:30259	517433	639	True				
ANR	518922	Statement	param_write_int	697:16:30261:30275	517433	640	True				
ANR	518923	Statement	(	697:31:30276:30276	517433	641	True				
ANR	518924	Statement	plist	697:32:30277:30281	517433	642	True				
ANR	518925	Statement	","	697:37:30282:30282	517433	643	True				
ANR	518926	Statement	"""TextIntent"""	697:38:30283:30294	517433	644	True				
ANR	518927	Statement	","	697:50:30295:30295	517433	645	True				
ANR	518928	Statement	(	697:52:30297:30297	517433	646	True				
ANR	518929	Statement	const	697:53:30298:30302	517433	647	True				
ANR	518930	Statement	int	697:59:30304:30306	517433	648	True				
ANR	518931	Statement	*	697:63:30308:30308	517433	649	True				
ANR	518932	Statement	)	697:64:30309:30309	517433	650	True				
ANR	518933	Statement	&	697:66:30311:30311	517433	651	True				
ANR	518934	Statement	(	697:67:30312:30312	517433	652	True				
ANR	518935	Statement	profile_intents	697:68:30313:30327	517433	653	True				
ANR	518936	Statement	[	697:83:30328:30328	517433	654	True				
ANR	518937	Statement	3	697:84:30329:30329	517433	655	True				
ANR	518938	Statement	]	697:85:30330:30330	517433	656	True				
ANR	518939	Statement	)	697:86:30331:30331	517433	657	True				
ANR	518940	Statement	)	697:87:30332:30332	517433	658	True				
ANR	518941	Statement	)	697:88:30333:30333	517433	659	True				
ANR	518942	Statement	<	697:90:30335:30335	517433	660	True				
ANR	518943	Statement	0	697:92:30337:30337	517433	661	True				
ANR	518944	Statement	||	697:94:30339:30340	517433	662	True				
ANR	518945	Statement	(	698:8:30350:30350	517433	663	True				
ANR	518946	Statement	code	698:9:30351:30354	517433	664	True				
ANR	518947	Statement	=	698:14:30356:30356	517433	665	True				
ANR	518948	Statement	param_write_int	698:16:30358:30372	517433	666	True				
ANR	518949	Statement	(	698:31:30373:30373	517433	667	True				
ANR	518950	Statement	plist	698:32:30374:30378	517433	668	True				
ANR	518951	Statement	","	698:37:30379:30379	517433	669	True				
ANR	518952	Statement	"""BlackPtComp"""	698:38:30380:30392	517433	670	True				
ANR	518953	Statement	","	698:51:30393:30393	517433	671	True				
ANR	518954	Statement	(	698:53:30395:30395	517433	672	True				
ANR	518955	Statement	const	698:54:30396:30400	517433	673	True				
ANR	518956	Statement	int	698:60:30402:30404	517433	674	True				
ANR	518957	Statement	*	698:64:30406:30406	517433	675	True				
ANR	518958	Statement	)	698:65:30407:30407	517433	676	True				
ANR	518959	Statement	(	698:67:30409:30409	517433	677	True				
ANR	518960	Statement	&	698:68:30410:30410	517433	678	True				
ANR	518961	Statement	(	698:69:30411:30411	517433	679	True				
ANR	518962	Statement	blackptcomps	698:70:30412:30423	517433	680	True				
ANR	518963	Statement	[	698:82:30424:30424	517433	681	True				
ANR	518964	Statement	0	698:83:30425:30425	517433	682	True				
ANR	518965	Statement	]	698:84:30426:30426	517433	683	True				
ANR	518966	Statement	)	698:85:30427:30427	517433	684	True				
ANR	518967	Statement	)	698:86:30428:30428	517433	685	True				
ANR	518968	Statement	)	698:87:30429:30429	517433	686	True				
ANR	518969	Statement	)	698:88:30430:30430	517433	687	True				
ANR	518970	Statement	<	698:90:30432:30432	517433	688	True				
ANR	518971	Statement	0	698:92:30434:30434	517433	689	True				
ANR	518972	Statement	||	698:94:30436:30437	517433	690	True				
ANR	518973	Statement	(	699:8:30447:30447	517433	691	True				
ANR	518974	Statement	code	699:9:30448:30451	517433	692	True				
ANR	518975	Statement	=	699:14:30453:30453	517433	693	True				
ANR	518976	Statement	param_write_int	699:16:30455:30469	517433	694	True				
ANR	518977	Statement	(	699:31:30470:30470	517433	695	True				
ANR	518978	Statement	plist	699:32:30471:30475	517433	696	True				
ANR	518979	Statement	","	699:37:30476:30476	517433	697	True				
ANR	518980	Statement	"""GraphicBlackPt"""	699:38:30477:30492	517433	698	True				
ANR	518981	Statement	","	699:54:30493:30493	517433	699	True				
ANR	518982	Statement	(	699:56:30495:30495	517433	700	True				
ANR	518983	Statement	const	699:57:30496:30500	517433	701	True				
ANR	518984	Statement	int	699:63:30502:30504	517433	702	True				
ANR	518985	Statement	*	699:67:30506:30506	517433	703	True				
ANR	518986	Statement	)	699:68:30507:30507	517433	704	True				
ANR	518987	Statement	&	699:70:30509:30509	517433	705	True				
ANR	518988	Statement	(	699:71:30510:30510	517433	706	True				
ANR	518989	Statement	blackptcomps	699:72:30511:30522	517433	707	True				
ANR	518990	Statement	[	699:84:30523:30523	517433	708	True				
ANR	518991	Statement	1	699:85:30524:30524	517433	709	True				
ANR	518992	Statement	]	699:86:30525:30525	517433	710	True				
ANR	518993	Statement	)	699:87:30526:30526	517433	711	True				
ANR	518994	Statement	)	699:88:30527:30527	517433	712	True				
ANR	518995	Statement	)	699:89:30528:30528	517433	713	True				
ANR	518996	Statement	<	699:91:30530:30530	517433	714	True				
ANR	518997	Statement	0	699:93:30532:30532	517433	715	True				
ANR	518998	Statement	||	699:95:30534:30535	517433	716	True				
ANR	518999	Statement	(	700:8:30545:30545	517433	717	True				
ANR	519000	Statement	code	700:9:30546:30549	517433	718	True				
ANR	519001	Statement	=	700:14:30551:30551	517433	719	True				
ANR	519002	Statement	param_write_int	700:16:30553:30567	517433	720	True				
ANR	519003	Statement	(	700:31:30568:30568	517433	721	True				
ANR	519004	Statement	plist	700:32:30569:30573	517433	722	True				
ANR	519005	Statement	","	700:37:30574:30574	517433	723	True				
ANR	519006	Statement	"""ImageBlackPt"""	700:38:30575:30588	517433	724	True				
ANR	519007	Statement	","	700:52:30589:30589	517433	725	True				
ANR	519008	Statement	(	700:54:30591:30591	517433	726	True				
ANR	519009	Statement	const	700:55:30592:30596	517433	727	True				
ANR	519010	Statement	int	700:61:30598:30600	517433	728	True				
ANR	519011	Statement	*	700:65:30602:30602	517433	729	True				
ANR	519012	Statement	)	700:66:30603:30603	517433	730	True				
ANR	519013	Statement	&	700:68:30605:30605	517433	731	True				
ANR	519014	Statement	(	700:69:30606:30606	517433	732	True				
ANR	519015	Statement	blackptcomps	700:70:30607:30618	517433	733	True				
ANR	519016	Statement	[	700:82:30619:30619	517433	734	True				
ANR	519017	Statement	2	700:83:30620:30620	517433	735	True				
ANR	519018	Statement	]	700:84:30621:30621	517433	736	True				
ANR	519019	Statement	)	700:85:30622:30622	517433	737	True				
ANR	519020	Statement	)	700:86:30623:30623	517433	738	True				
ANR	519021	Statement	)	700:87:30624:30624	517433	739	True				
ANR	519022	Statement	<	700:89:30626:30626	517433	740	True				
ANR	519023	Statement	0	700:91:30628:30628	517433	741	True				
ANR	519024	Statement	||	700:93:30630:30631	517433	742	True				
ANR	519025	Statement	(	701:8:30641:30641	517433	743	True				
ANR	519026	Statement	code	701:9:30642:30645	517433	744	True				
ANR	519027	Statement	=	701:14:30647:30647	517433	745	True				
ANR	519028	Statement	param_write_int	701:16:30649:30663	517433	746	True				
ANR	519029	Statement	(	701:31:30664:30664	517433	747	True				
ANR	519030	Statement	plist	701:32:30665:30669	517433	748	True				
ANR	519031	Statement	","	701:37:30670:30670	517433	749	True				
ANR	519032	Statement	"""TextBlackPt"""	701:38:30671:30683	517433	750	True				
ANR	519033	Statement	","	701:51:30684:30684	517433	751	True				
ANR	519034	Statement	(	701:53:30686:30686	517433	752	True				
ANR	519035	Statement	const	701:54:30687:30691	517433	753	True				
ANR	519036	Statement	int	701:60:30693:30695	517433	754	True				
ANR	519037	Statement	*	701:64:30697:30697	517433	755	True				
ANR	519038	Statement	)	701:65:30698:30698	517433	756	True				
ANR	519039	Statement	&	701:67:30700:30700	517433	757	True				
ANR	519040	Statement	(	701:68:30701:30701	517433	758	True				
ANR	519041	Statement	blackptcomps	701:69:30702:30713	517433	759	True				
ANR	519042	Statement	[	701:81:30714:30714	517433	760	True				
ANR	519043	Statement	3	701:82:30715:30715	517433	761	True				
ANR	519044	Statement	]	701:83:30716:30716	517433	762	True				
ANR	519045	Statement	)	701:84:30717:30717	517433	763	True				
ANR	519046	Statement	)	701:85:30718:30718	517433	764	True				
ANR	519047	Statement	)	701:86:30719:30719	517433	765	True				
ANR	519048	Statement	<	701:88:30721:30721	517433	766	True				
ANR	519049	Statement	0	701:90:30723:30723	517433	767	True				
ANR	519050	Statement	||	701:92:30725:30726	517433	768	True				
ANR	519051	Statement	(	702:8:30736:30736	517433	769	True				
ANR	519052	Statement	code	702:9:30737:30740	517433	770	True				
ANR	519053	Statement	=	702:14:30742:30742	517433	771	True				
ANR	519054	Statement	param_write_int	702:16:30744:30758	517433	772	True				
ANR	519055	Statement	(	702:31:30759:30759	517433	773	True				
ANR	519056	Statement	plist	702:32:30760:30764	517433	774	True				
ANR	519057	Statement	","	702:37:30765:30765	517433	775	True				
ANR	519058	Statement	"""KPreserve"""	702:38:30766:30776	517433	776	True				
ANR	519059	Statement	","	702:49:30777:30777	517433	777	True				
ANR	519060	Statement	(	702:51:30779:30779	517433	778	True				
ANR	519061	Statement	const	702:52:30780:30784	517433	779	True				
ANR	519062	Statement	int	702:58:30786:30788	517433	780	True				
ANR	519063	Statement	*	702:62:30790:30790	517433	781	True				
ANR	519064	Statement	)	702:63:30791:30791	517433	782	True				
ANR	519065	Statement	(	702:65:30793:30793	517433	783	True				
ANR	519066	Statement	&	702:66:30794:30794	517433	784	True				
ANR	519067	Statement	(	702:67:30795:30795	517433	785	True				
ANR	519068	Statement	blackpreserve	702:68:30796:30808	517433	786	True				
ANR	519069	Statement	[	702:81:30809:30809	517433	787	True				
ANR	519070	Statement	0	702:82:30810:30810	517433	788	True				
ANR	519071	Statement	]	702:83:30811:30811	517433	789	True				
ANR	519072	Statement	)	702:84:30812:30812	517433	790	True				
ANR	519073	Statement	)	702:85:30813:30813	517433	791	True				
ANR	519074	Statement	)	702:86:30814:30814	517433	792	True				
ANR	519075	Statement	)	702:87:30815:30815	517433	793	True				
ANR	519076	Statement	<	702:89:30817:30817	517433	794	True				
ANR	519077	Statement	0	702:91:30819:30819	517433	795	True				
ANR	519078	Statement	||	702:93:30821:30822	517433	796	True				
ANR	519079	Statement	(	703:8:30832:30832	517433	797	True				
ANR	519080	Statement	code	703:9:30833:30836	517433	798	True				
ANR	519081	Statement	=	703:14:30838:30838	517433	799	True				
ANR	519082	Statement	param_write_int	703:16:30840:30854	517433	800	True				
ANR	519083	Statement	(	703:31:30855:30855	517433	801	True				
ANR	519084	Statement	plist	703:32:30856:30860	517433	802	True				
ANR	519085	Statement	","	703:37:30861:30861	517433	803	True				
ANR	519086	Statement	"""GraphicKPreserve"""	703:38:30862:30879	517433	804	True				
ANR	519087	Statement	","	703:56:30880:30880	517433	805	True				
ANR	519088	Statement	(	703:58:30882:30882	517433	806	True				
ANR	519089	Statement	const	703:59:30883:30887	517433	807	True				
ANR	519090	Statement	int	703:65:30889:30891	517433	808	True				
ANR	519091	Statement	*	703:69:30893:30893	517433	809	True				
ANR	519092	Statement	)	703:70:30894:30894	517433	810	True				
ANR	519093	Statement	&	703:72:30896:30896	517433	811	True				
ANR	519094	Statement	(	703:73:30897:30897	517433	812	True				
ANR	519095	Statement	blackpreserve	703:74:30898:30910	517433	813	True				
ANR	519096	Statement	[	703:87:30911:30911	517433	814	True				
ANR	519097	Statement	1	703:88:30912:30912	517433	815	True				
ANR	519098	Statement	]	703:89:30913:30913	517433	816	True				
ANR	519099	Statement	)	703:90:30914:30914	517433	817	True				
ANR	519100	Statement	)	703:91:30915:30915	517433	818	True				
ANR	519101	Statement	)	703:92:30916:30916	517433	819	True				
ANR	519102	Statement	<	703:94:30918:30918	517433	820	True				
ANR	519103	Statement	0	703:96:30920:30920	517433	821	True				
ANR	519104	Statement	||	703:98:30922:30923	517433	822	True				
ANR	519105	Statement	(	704:8:30933:30933	517433	823	True				
ANR	519106	Statement	code	704:9:30934:30937	517433	824	True				
ANR	519107	Statement	=	704:14:30939:30939	517433	825	True				
ANR	519108	Statement	param_write_int	704:16:30941:30955	517433	826	True				
ANR	519109	Statement	(	704:31:30956:30956	517433	827	True				
ANR	519110	Statement	plist	704:32:30957:30961	517433	828	True				
ANR	519111	Statement	","	704:37:30962:30962	517433	829	True				
ANR	519112	Statement	"""ImageKPreserve"""	704:38:30963:30978	517433	830	True				
ANR	519113	Statement	","	704:54:30979:30979	517433	831	True				
ANR	519114	Statement	(	704:56:30981:30981	517433	832	True				
ANR	519115	Statement	const	704:57:30982:30986	517433	833	True				
ANR	519116	Statement	int	704:63:30988:30990	517433	834	True				
ANR	519117	Statement	*	704:67:30992:30992	517433	835	True				
ANR	519118	Statement	)	704:68:30993:30993	517433	836	True				
ANR	519119	Statement	&	704:70:30995:30995	517433	837	True				
ANR	519120	Statement	(	704:71:30996:30996	517433	838	True				
ANR	519121	Statement	blackpreserve	704:72:30997:31009	517433	839	True				
ANR	519122	Statement	[	704:85:31010:31010	517433	840	True				
ANR	519123	Statement	2	704:86:31011:31011	517433	841	True				
ANR	519124	Statement	]	704:87:31012:31012	517433	842	True				
ANR	519125	Statement	)	704:88:31013:31013	517433	843	True				
ANR	519126	Statement	)	704:89:31014:31014	517433	844	True				
ANR	519127	Statement	)	704:90:31015:31015	517433	845	True				
ANR	519128	Statement	<	704:92:31017:31017	517433	846	True				
ANR	519129	Statement	0	704:94:31019:31019	517433	847	True				
ANR	519130	Statement	||	704:96:31021:31022	517433	848	True				
ANR	519131	Statement	(	705:8:31032:31032	517433	849	True				
ANR	519132	Statement	code	705:9:31033:31036	517433	850	True				
ANR	519133	Statement	=	705:14:31038:31038	517433	851	True				
ANR	519134	Statement	param_write_int	705:16:31040:31054	517433	852	True				
ANR	519135	Statement	(	705:31:31055:31055	517433	853	True				
ANR	519136	Statement	plist	705:32:31056:31060	517433	854	True				
ANR	519137	Statement	","	705:37:31061:31061	517433	855	True				
ANR	519138	Statement	"""TextKPreserve"""	705:38:31062:31076	517433	856	True				
ANR	519139	Statement	","	705:53:31077:31077	517433	857	True				
ANR	519140	Statement	(	705:55:31079:31079	517433	858	True				
ANR	519141	Statement	const	705:56:31080:31084	517433	859	True				
ANR	519142	Statement	int	705:62:31086:31088	517433	860	True				
ANR	519143	Statement	*	705:66:31090:31090	517433	861	True				
ANR	519144	Statement	)	705:67:31091:31091	517433	862	True				
ANR	519145	Statement	&	705:69:31093:31093	517433	863	True				
ANR	519146	Statement	(	705:70:31094:31094	517433	864	True				
ANR	519147	Statement	blackpreserve	705:71:31095:31107	517433	865	True				
ANR	519148	Statement	[	705:84:31108:31108	517433	866	True				
ANR	519149	Statement	3	705:85:31109:31109	517433	867	True				
ANR	519150	Statement	]	705:86:31110:31110	517433	868	True				
ANR	519151	Statement	)	705:87:31111:31111	517433	869	True				
ANR	519152	Statement	)	705:88:31112:31112	517433	870	True				
ANR	519153	Statement	)	705:89:31113:31113	517433	871	True				
ANR	519154	Statement	<	705:91:31115:31115	517433	872	True				
ANR	519155	Statement	0	705:93:31117:31117	517433	873	True				
ANR	519156	Statement	||	705:95:31119:31120	517433	874	True				
ANR	519157	Statement	(	706:8:31130:31130	517433	875	True				
ANR	519158	Statement	code	706:9:31131:31134	517433	876	True				
ANR	519159	Statement	=	706:14:31136:31136	517433	877	True				
ANR	519160	Statement	param_write_int_array	706:16:31138:31158	517433	878	True				
ANR	519161	Statement	(	706:37:31159:31159	517433	879	True				
ANR	519162	Statement	plist	706:38:31160:31164	517433	880	True				
ANR	519163	Statement	","	706:43:31165:31165	517433	881	True				
ANR	519164	Statement	"""HWSize"""	706:45:31167:31174	517433	882	True				
ANR	519165	Statement	","	706:53:31175:31175	517433	883	True				
ANR	519166	Statement	&	706:55:31177:31177	517433	884	True				
ANR	519167	Statement	hwsa	706:56:31178:31181	517433	885	True				
ANR	519168	Statement	)	706:60:31182:31182	517433	886	True				
ANR	519169	Statement	)	706:61:31183:31183	517433	887	True				
ANR	519170	Statement	<	706:63:31185:31185	517433	888	True				
ANR	519171	Statement	0	706:65:31187:31187	517433	889	True				
ANR	519172	Statement	||	706:67:31189:31190	517433	890	True				
ANR	519173	Statement	(	707:8:31200:31200	517433	891	True				
ANR	519174	Statement	code	707:9:31201:31204	517433	892	True				
ANR	519175	Statement	=	707:14:31206:31206	517433	893	True				
ANR	519176	Statement	param_write_float_array	707:16:31208:31230	517433	894	True				
ANR	519177	Statement	(	707:39:31231:31231	517433	895	True				
ANR	519178	Statement	plist	707:40:31232:31236	517433	896	True				
ANR	519179	Statement	","	707:45:31237:31237	517433	897	True				
ANR	519180	Statement	""".HWMargins"""	707:47:31239:31250	517433	898	True				
ANR	519181	Statement	","	707:59:31251:31251	517433	899	True				
ANR	519182	Statement	&	707:61:31253:31253	517433	900	True				
ANR	519183	Statement	hwma	707:62:31254:31257	517433	901	True				
ANR	519184	Statement	)	707:66:31258:31258	517433	902	True				
ANR	519185	Statement	)	707:67:31259:31259	517433	903	True				
ANR	519186	Statement	<	707:69:31261:31261	517433	904	True				
ANR	519187	Statement	0	707:71:31263:31263	517433	905	True				
ANR	519188	Statement	||	707:73:31265:31266	517433	906	True				
ANR	519189	Statement	(	708:8:31276:31276	517433	907	True				
ANR	519190	Statement	code	708:9:31277:31280	517433	908	True				
ANR	519191	Statement	=	708:14:31282:31282	517433	909	True				
ANR	519192	Statement	param_write_float_array	708:16:31284:31306	517433	910	True				
ANR	519193	Statement	(	708:39:31307:31307	517433	911	True				
ANR	519194	Statement	plist	708:40:31308:31312	517433	912	True				
ANR	519195	Statement	","	708:45:31313:31313	517433	913	True				
ANR	519196	Statement	""".MediaSize"""	708:47:31315:31326	517433	914	True				
ANR	519197	Statement	","	708:59:31327:31327	517433	915	True				
ANR	519198	Statement	&	708:61:31329:31329	517433	916	True				
ANR	519199	Statement	msa	708:62:31330:31332	517433	917	True				
ANR	519200	Statement	)	708:65:31333:31333	517433	918	True				
ANR	519201	Statement	)	708:66:31334:31334	517433	919	True				
ANR	519202	Statement	<	708:68:31336:31336	517433	920	True				
ANR	519203	Statement	0	708:70:31338:31338	517433	921	True				
ANR	519204	Statement	||	708:72:31340:31341	517433	922	True				
ANR	519205	Statement	(	709:8:31351:31351	517433	923	True				
ANR	519206	Statement	code	709:9:31352:31355	517433	924	True				
ANR	519207	Statement	=	709:14:31357:31357	517433	925	True				
ANR	519208	Statement	param_write_string	709:16:31359:31376	517433	926	True				
ANR	519209	Statement	(	709:34:31377:31377	517433	927	True				
ANR	519210	Statement	plist	709:35:31378:31382	517433	928	True				
ANR	519211	Statement	","	709:40:31383:31383	517433	929	True				
ANR	519212	Statement	"""Name"""	709:42:31385:31390	517433	930	True				
ANR	519213	Statement	","	709:48:31391:31391	517433	931	True				
ANR	519214	Statement	&	709:50:31393:31393	517433	932	True				
ANR	519215	Statement	dns	709:51:31394:31396	517433	933	True				
ANR	519216	Statement	)	709:54:31397:31397	517433	934	True				
ANR	519217	Statement	)	709:55:31398:31398	517433	935	True				
ANR	519218	Statement	<	709:57:31400:31400	517433	936	True				
ANR	519219	Statement	0	709:59:31402:31402	517433	937	True				
ANR	519220	Statement	||	709:61:31404:31405	517433	938	True				
ANR	519221	Statement	(	710:8:31415:31415	517433	939	True				
ANR	519222	Statement	code	710:9:31416:31419	517433	940	True				
ANR	519223	Statement	=	710:14:31421:31421	517433	941	True				
ANR	519224	Statement	param_write_int	710:16:31423:31437	517433	942	True				
ANR	519225	Statement	(	710:31:31438:31438	517433	943	True				
ANR	519226	Statement	plist	710:32:31439:31443	517433	944	True				
ANR	519227	Statement	","	710:37:31444:31444	517433	945	True				
ANR	519228	Statement	"""Colors"""	710:39:31446:31453	517433	946	True				
ANR	519229	Statement	","	710:47:31454:31454	517433	947	True				
ANR	519230	Statement	&	710:49:31456:31456	517433	948	True				
ANR	519231	Statement	colors	710:50:31457:31462	517433	949	True				
ANR	519232	Statement	)	710:56:31463:31463	517433	950	True				
ANR	519233	Statement	)	710:57:31464:31464	517433	951	True				
ANR	519234	Statement	<	710:59:31466:31466	517433	952	True				
ANR	519235	Statement	0	710:61:31468:31468	517433	953	True				
ANR	519236	Statement	||	710:63:31470:31471	517433	954	True				
ANR	519237	Statement	(	711:8:31481:31481	517433	955	True				
ANR	519238	Statement	code	711:9:31482:31485	517433	956	True				
ANR	519239	Statement	=	711:14:31487:31487	517433	957	True				
ANR	519240	Statement	param_write_int	711:16:31489:31503	517433	958	True				
ANR	519241	Statement	(	711:31:31504:31504	517433	959	True				
ANR	519242	Statement	plist	711:32:31505:31509	517433	960	True				
ANR	519243	Statement	","	711:37:31510:31510	517433	961	True				
ANR	519244	Statement	"""BitsPerPixel"""	711:39:31512:31525	517433	962	True				
ANR	519245	Statement	","	711:53:31526:31526	517433	963	True				
ANR	519246	Statement	&	711:55:31528:31528	517433	964	True				
ANR	519247	Statement	depth	711:56:31529:31533	517433	965	True				
ANR	519248	Statement	)	711:61:31534:31534	517433	966	True				
ANR	519249	Statement	)	711:62:31535:31535	517433	967	True				
ANR	519250	Statement	<	711:64:31537:31537	517433	968	True				
ANR	519251	Statement	0	711:66:31539:31539	517433	969	True				
ANR	519252	Statement	||	711:68:31541:31542	517433	970	True				
ANR	519253	Statement	(	712:8:31552:31552	517433	971	True				
ANR	519254	Statement	code	712:9:31553:31556	517433	972	True				
ANR	519255	Statement	=	712:14:31558:31558	517433	973	True				
ANR	519256	Statement	param_write_int	712:16:31560:31574	517433	974	True				
ANR	519257	Statement	(	712:31:31575:31575	517433	975	True				
ANR	519258	Statement	plist	712:32:31576:31580	517433	976	True				
ANR	519259	Statement	","	712:37:31581:31581	517433	977	True				
ANR	519260	Statement	"""GrayValues"""	712:39:31583:31594	517433	978	True				
ANR	519261	Statement	","	712:51:31595:31595	517433	979	True				
ANR	519262	Statement	&	712:53:31597:31597	517433	980	True				
ANR	519263	Statement	GrayValues	712:54:31598:31607	517433	981	True				
ANR	519264	Statement	)	712:64:31608:31608	517433	982	True				
ANR	519265	Statement	)	712:65:31609:31609	517433	983	True				
ANR	519266	Statement	<	712:67:31611:31611	517433	984	True				
ANR	519267	Statement	0	712:69:31613:31613	517433	985	True				
ANR	519268	Statement	||	712:71:31615:31616	517433	986	True				
ANR	519269	Statement	(	713:8:31626:31626	517433	987	True				
ANR	519270	Statement	code	713:9:31627:31630	517433	988	True				
ANR	519271	Statement	=	713:14:31632:31632	517433	989	True				
ANR	519272	Statement	param_write_long	713:16:31634:31649	517433	990	True				
ANR	519273	Statement	(	713:32:31650:31650	517433	991	True				
ANR	519274	Statement	plist	713:33:31651:31655	517433	992	True				
ANR	519275	Statement	","	713:38:31656:31656	517433	993	True				
ANR	519276	Statement	"""PageCount"""	713:40:31658:31668	517433	994	True				
ANR	519277	Statement	","	713:51:31669:31669	517433	995	True				
ANR	519278	Statement	&	713:53:31671:31671	517433	996	True				
ANR	519279	Statement	dev	713:54:31672:31674	517433	997	True				
ANR	519280	Statement	->	713:57:31675:31676	517433	998	True				
ANR	519281	Statement	PageCount	713:59:31677:31685	517433	999	True				
ANR	519282	Statement	)	713:68:31686:31686	517433	1000	True				
ANR	519283	Statement	)	713:69:31687:31687	517433	1001	True				
ANR	519284	Statement	<	713:71:31689:31689	517433	1002	True				
ANR	519285	Statement	0	713:73:31691:31691	517433	1003	True				
ANR	519286	Statement	||	713:75:31693:31694	517433	1004	True				
ANR	519287	Statement	(	714:8:31704:31704	517433	1005	True				
ANR	519288	Statement	code	714:9:31705:31708	517433	1006	True				
ANR	519289	Statement	=	714:14:31710:31710	517433	1007	True				
ANR	519290	Statement	param_write_bool	714:16:31712:31727	517433	1008	True				
ANR	519291	Statement	(	714:32:31728:31728	517433	1009	True				
ANR	519292	Statement	plist	714:33:31729:31733	517433	1010	True				
ANR	519293	Statement	","	714:38:31734:31734	517433	1011	True				
ANR	519294	Statement	""".IgnoreNumCopies"""	714:40:31736:31753	517433	1012	True				
ANR	519295	Statement	","	714:58:31754:31754	517433	1013	True				
ANR	519296	Statement	&	714:60:31756:31756	517433	1014	True				
ANR	519297	Statement	dev	714:61:31757:31759	517433	1015	True				
ANR	519298	Statement	->	714:64:31760:31761	517433	1016	True				
ANR	519299	Statement	IgnoreNumCopies	714:66:31762:31776	517433	1017	True				
ANR	519300	Statement	)	714:81:31777:31777	517433	1018	True				
ANR	519301	Statement	)	714:82:31778:31778	517433	1019	True				
ANR	519302	Statement	<	714:84:31780:31780	517433	1020	True				
ANR	519303	Statement	0	714:86:31782:31782	517433	1021	True				
ANR	519304	Statement	||	714:88:31784:31785	517433	1022	True				
ANR	519305	Statement	(	715:8:31795:31795	517433	1023	True				
ANR	519306	Statement	code	715:9:31796:31799	517433	1024	True				
ANR	519307	Statement	=	715:14:31801:31801	517433	1025	True				
ANR	519308	Statement	param_write_int	715:16:31803:31817	517433	1026	True				
ANR	519309	Statement	(	715:31:31818:31818	517433	1027	True				
ANR	519310	Statement	plist	715:32:31819:31823	517433	1028	True				
ANR	519311	Statement	","	715:37:31824:31824	517433	1029	True				
ANR	519312	Statement	"""TextAlphaBits"""	715:39:31826:31840	517433	1030	True				
ANR	519313	Statement	","	715:54:31841:31841	517433	1031	True				
ANR	519314	Statement	&	716:32:31875:31875	517433	1032	True				
ANR	519315	Statement	dev	716:33:31876:31878	517433	1033	True				
ANR	519316	Statement	->	716:36:31879:31880	517433	1034	True				
ANR	519317	Statement	color_info	716:38:31881:31890	517433	1035	True				
ANR	519318	Statement	.	716:48:31891:31891	517433	1036	True				
ANR	519319	Statement	anti_alias	716:49:31892:31901	517433	1037	True				
ANR	519320	Statement	.	716:59:31902:31902	517433	1038	True				
ANR	519321	Statement	text_bits	716:60:31903:31911	517433	1039	True				
ANR	519322	Statement	)	716:69:31912:31912	517433	1040	True				
ANR	519323	Statement	)	716:70:31913:31913	517433	1041	True				
ANR	519324	Statement	<	716:72:31915:31915	517433	1042	True				
ANR	519325	Statement	0	716:74:31917:31917	517433	1043	True				
ANR	519326	Statement	||	716:76:31919:31920	517433	1044	True				
ANR	519327	Statement	(	717:8:31930:31930	517433	1045	True				
ANR	519328	Statement	code	717:9:31931:31934	517433	1046	True				
ANR	519329	Statement	=	717:14:31936:31936	517433	1047	True				
ANR	519330	Statement	param_write_int	717:16:31938:31952	517433	1048	True				
ANR	519331	Statement	(	717:31:31953:31953	517433	1049	True				
ANR	519332	Statement	plist	717:32:31954:31958	517433	1050	True				
ANR	519333	Statement	","	717:37:31959:31959	517433	1051	True				
ANR	519334	Statement	"""GraphicsAlphaBits"""	717:39:31961:31979	517433	1052	True				
ANR	519335	Statement	","	717:58:31980:31980	517433	1053	True				
ANR	519336	Statement	&	718:32:32014:32014	517433	1054	True				
ANR	519337	Statement	dev	718:33:32015:32017	517433	1055	True				
ANR	519338	Statement	->	718:36:32018:32019	517433	1056	True				
ANR	519339	Statement	color_info	718:38:32020:32029	517433	1057	True				
ANR	519340	Statement	.	718:48:32030:32030	517433	1058	True				
ANR	519341	Statement	anti_alias	718:49:32031:32040	517433	1059	True				
ANR	519342	Statement	.	718:59:32041:32041	517433	1060	True				
ANR	519343	Statement	graphics_bits	718:60:32042:32054	517433	1061	True				
ANR	519344	Statement	)	718:73:32055:32055	517433	1062	True				
ANR	519345	Statement	)	718:74:32056:32056	517433	1063	True				
ANR	519346	Statement	<	718:76:32058:32058	517433	1064	True				
ANR	519347	Statement	0	718:78:32060:32060	517433	1065	True				
ANR	519348	Statement	||	718:80:32062:32063	517433	1066	True				
ANR	519349	Statement	(	719:8:32073:32073	517433	1067	True				
ANR	519350	Statement	code	719:9:32074:32077	517433	1068	True				
ANR	519351	Statement	=	719:14:32079:32079	517433	1069	True				
ANR	519352	Statement	param_write_bool	719:16:32081:32096	517433	1070	True				
ANR	519353	Statement	(	719:32:32097:32097	517433	1071	True				
ANR	519354	Statement	plist	719:33:32098:32102	517433	1072	True				
ANR	519355	Statement	","	719:38:32103:32103	517433	1073	True				
ANR	519356	Statement	"""AntidropoutDownscaler"""	719:40:32105:32127	517433	1074	True				
ANR	519357	Statement	","	719:63:32128:32128	517433	1075	True				
ANR	519358	Statement	&	720:32:32162:32162	517433	1076	True				
ANR	519359	Statement	dev	720:33:32163:32165	517433	1077	True				
ANR	519360	Statement	->	720:36:32166:32167	517433	1078	True				
ANR	519361	Statement	color_info	720:38:32168:32177	517433	1079	True				
ANR	519362	Statement	.	720:48:32178:32178	517433	1080	True				
ANR	519363	Statement	use_antidropout_downscaler	720:49:32179:32204	517433	1081	True				
ANR	519364	Statement	)	720:75:32205:32205	517433	1082	True				
ANR	519365	Statement	)	720:76:32206:32206	517433	1083	True				
ANR	519366	Statement	<	720:78:32208:32208	517433	1084	True				
ANR	519367	Statement	0	720:80:32210:32210	517433	1085	True				
ANR	519368	Statement	||	720:82:32212:32213	517433	1086	True				
ANR	519369	Statement	(	721:8:32223:32223	517433	1087	True				
ANR	519370	Statement	code	721:9:32224:32227	517433	1088	True				
ANR	519371	Statement	=	721:14:32229:32229	517433	1089	True				
ANR	519372	Statement	param_write_bool	721:16:32231:32246	517433	1090	True				
ANR	519373	Statement	(	721:32:32247:32247	517433	1091	True				
ANR	519374	Statement	plist	721:33:32248:32252	517433	1092	True				
ANR	519375	Statement	","	721:38:32253:32253	517433	1093	True				
ANR	519376	Statement	""".LockSafetyParams"""	721:40:32255:32273	517433	1094	True				
ANR	519377	Statement	","	721:59:32274:32274	517433	1095	True				
ANR	519378	Statement	&	721:61:32276:32276	517433	1096	True				
ANR	519379	Statement	dev	721:62:32277:32279	517433	1097	True				
ANR	519380	Statement	->	721:65:32280:32281	517433	1098	True				
ANR	519381	Statement	LockSafetyParams	721:67:32282:32297	517433	1099	True				
ANR	519382	Statement	)	721:83:32298:32298	517433	1100	True				
ANR	519383	Statement	)	721:84:32299:32299	517433	1101	True				
ANR	519384	Statement	<	721:86:32301:32301	517433	1102	True				
ANR	519385	Statement	0	721:88:32303:32303	517433	1103	True				
ANR	519386	Statement	||	721:90:32305:32306	517433	1104	True				
ANR	519387	Statement	(	722:8:32316:32316	517433	1105	True				
ANR	519388	Statement	code	722:9:32317:32320	517433	1106	True				
ANR	519389	Statement	=	722:14:32322:32322	517433	1107	True				
ANR	519390	Statement	param_write_int	722:16:32324:32338	517433	1108	True				
ANR	519391	Statement	(	722:31:32339:32339	517433	1109	True				
ANR	519392	Statement	plist	722:32:32340:32344	517433	1110	True				
ANR	519393	Statement	","	722:37:32345:32345	517433	1111	True				
ANR	519394	Statement	"""MaxPatternBitmap"""	722:39:32347:32364	517433	1112	True				
ANR	519395	Statement	","	722:57:32365:32365	517433	1113	True				
ANR	519396	Statement	&	722:59:32367:32367	517433	1114	True				
ANR	519397	Statement	dev	722:60:32368:32370	517433	1115	True				
ANR	519398	Statement	->	722:63:32371:32372	517433	1116	True				
ANR	519399	Statement	MaxPatternBitmap	722:65:32373:32388	517433	1117	True				
ANR	519400	Statement	)	722:81:32389:32389	517433	1118	True				
ANR	519401	Statement	)	722:82:32390:32390	517433	1119	True				
ANR	519402	Statement	<	722:84:32392:32392	517433	1120	True				
ANR	519403	Statement	0	722:86:32394:32394	517433	1121	True				
ANR	519404	Statement	||	722:88:32396:32397	517433	1122	True				
ANR	519405	Statement	(	723:8:32407:32407	517433	1123	True				
ANR	519406	Statement	code	723:9:32408:32411	517433	1124	True				
ANR	519407	Statement	=	723:14:32413:32413	517433	1125	True				
ANR	519408	Statement	param_write_bool	723:16:32415:32430	517433	1126	True				
ANR	519409	Statement	(	723:32:32431:32431	517433	1127	True				
ANR	519410	Statement	plist	723:33:32432:32436	517433	1128	True				
ANR	519411	Statement	","	723:38:32437:32437	517433	1129	True				
ANR	519412	Statement	"""PageUsesTransparency"""	723:40:32439:32460	517433	1130	True				
ANR	519413	Statement	","	723:62:32461:32461	517433	1131	True				
ANR	519414	Statement	&	723:64:32463:32463	517433	1132	True				
ANR	519415	Statement	dev	723:65:32464:32466	517433	1133	True				
ANR	519416	Statement	->	723:68:32467:32468	517433	1134	True				
ANR	519417	Statement	page_uses_transparency	723:70:32469:32490	517433	1135	True				
ANR	519418	Statement	)	723:92:32491:32491	517433	1136	True				
ANR	519419	Statement	)	723:93:32492:32492	517433	1137	True				
ANR	519420	Statement	<	723:95:32494:32494	517433	1138	True				
ANR	519421	Statement	0	723:97:32496:32496	517433	1139	True				
ANR	519422	Statement	||	723:99:32498:32499	517433	1140	True				
ANR	519423	Statement	(	724:8:32509:32509	517433	1141	True				
ANR	519424	Statement	code	724:9:32510:32513	517433	1142	True				
ANR	519425	Statement	=	724:14:32515:32515	517433	1143	True				
ANR	519426	Statement	param_write_long	724:16:32517:32532	517433	1144	True				
ANR	519427	Statement	(	724:32:32533:32533	517433	1145	True				
ANR	519428	Statement	plist	724:33:32534:32538	517433	1146	True				
ANR	519429	Statement	","	724:38:32539:32539	517433	1147	True				
ANR	519430	Statement	"""MaxBitmap"""	724:40:32541:32551	517433	1148	True				
ANR	519431	Statement	","	724:51:32552:32552	517433	1149	True				
ANR	519432	Statement	&	724:53:32554:32554	517433	1150	True				
ANR	519433	Statement	(	724:54:32555:32555	517433	1151	True				
ANR	519434	Statement	dev	724:55:32556:32558	517433	1152	True				
ANR	519435	Statement	->	724:58:32559:32560	517433	1153	True				
ANR	519436	Statement	space_params	724:60:32561:32572	517433	1154	True				
ANR	519437	Statement	.	724:72:32573:32573	517433	1155	True				
ANR	519438	Statement	MaxBitmap	724:73:32574:32582	517433	1156	True				
ANR	519439	Statement	)	724:82:32583:32583	517433	1157	True				
ANR	519440	Statement	)	724:83:32584:32584	517433	1158	True				
ANR	519441	Statement	)	724:84:32585:32585	517433	1159	True				
ANR	519442	Statement	<	724:86:32587:32587	517433	1160	True				
ANR	519443	Statement	0	724:88:32589:32589	517433	1161	True				
ANR	519444	Statement	||	724:90:32591:32592	517433	1162	True				
ANR	519445	Statement	(	725:8:32602:32602	517433	1163	True				
ANR	519446	Statement	code	725:9:32603:32606	517433	1164	True				
ANR	519447	Statement	=	725:14:32608:32608	517433	1165	True				
ANR	519448	Statement	param_write_long	725:16:32610:32625	517433	1166	True				
ANR	519449	Statement	(	725:32:32626:32626	517433	1167	True				
ANR	519450	Statement	plist	725:33:32627:32631	517433	1168	True				
ANR	519451	Statement	","	725:38:32632:32632	517433	1169	True				
ANR	519452	Statement	"""BandBufferSpace"""	725:40:32634:32650	517433	1170	True				
ANR	519453	Statement	","	725:57:32651:32651	517433	1171	True				
ANR	519454	Statement	&	725:59:32653:32653	517433	1172	True				
ANR	519455	Statement	dev	725:60:32654:32656	517433	1173	True				
ANR	519456	Statement	->	725:63:32657:32658	517433	1174	True				
ANR	519457	Statement	space_params	725:65:32659:32670	517433	1175	True				
ANR	519458	Statement	.	725:77:32671:32671	517433	1176	True				
ANR	519459	Statement	band	725:78:32672:32675	517433	1177	True				
ANR	519460	Statement	.	725:82:32676:32676	517433	1178	True				
ANR	519461	Statement	BandBufferSpace	725:83:32677:32691	517433	1179	True				
ANR	519462	Statement	)	725:98:32692:32692	517433	1180	True				
ANR	519463	Statement	)	725:99:32693:32693	517433	1181	True				
ANR	519464	Statement	<	725:101:32695:32695	517433	1182	True				
ANR	519465	Statement	0	725:103:32697:32697	517433	1183	True				
ANR	519466	Statement	||	725:105:32699:32700	517433	1184	True				
ANR	519467	Statement	(	726:8:32710:32710	517433	1185	True				
ANR	519468	Statement	code	726:9:32711:32714	517433	1186	True				
ANR	519469	Statement	=	726:14:32716:32716	517433	1187	True				
ANR	519470	Statement	param_write_int	726:16:32718:32732	517433	1188	True				
ANR	519471	Statement	(	726:31:32733:32733	517433	1189	True				
ANR	519472	Statement	plist	726:32:32734:32738	517433	1190	True				
ANR	519473	Statement	","	726:37:32739:32739	517433	1191	True				
ANR	519474	Statement	"""BandHeight"""	726:39:32741:32752	517433	1192	True				
ANR	519475	Statement	","	726:51:32753:32753	517433	1193	True				
ANR	519476	Statement	&	726:53:32755:32755	517433	1194	True				
ANR	519477	Statement	dev	726:54:32756:32758	517433	1195	True				
ANR	519478	Statement	->	726:57:32759:32760	517433	1196	True				
ANR	519479	Statement	space_params	726:59:32761:32772	517433	1197	True				
ANR	519480	Statement	.	726:71:32773:32773	517433	1198	True				
ANR	519481	Statement	band	726:72:32774:32777	517433	1199	True				
ANR	519482	Statement	.	726:76:32778:32778	517433	1200	True				
ANR	519483	Statement	BandHeight	726:77:32779:32788	517433	1201	True				
ANR	519484	Statement	)	726:87:32789:32789	517433	1202	True				
ANR	519485	Statement	)	726:88:32790:32790	517433	1203	True				
ANR	519486	Statement	<	726:90:32792:32792	517433	1204	True				
ANR	519487	Statement	0	726:92:32794:32794	517433	1205	True				
ANR	519488	Statement	||	726:94:32796:32797	517433	1206	True				
ANR	519489	Statement	(	727:8:32807:32807	517433	1207	True				
ANR	519490	Statement	code	727:9:32808:32811	517433	1208	True				
ANR	519491	Statement	=	727:14:32813:32813	517433	1209	True				
ANR	519492	Statement	param_write_int	727:16:32815:32829	517433	1210	True				
ANR	519493	Statement	(	727:31:32830:32830	517433	1211	True				
ANR	519494	Statement	plist	727:32:32831:32835	517433	1212	True				
ANR	519495	Statement	","	727:37:32836:32836	517433	1213	True				
ANR	519496	Statement	"""BandWidth"""	727:39:32838:32848	517433	1214	True				
ANR	519497	Statement	","	727:50:32849:32849	517433	1215	True				
ANR	519498	Statement	&	727:52:32851:32851	517433	1216	True				
ANR	519499	Statement	dev	727:53:32852:32854	517433	1217	True				
ANR	519500	Statement	->	727:56:32855:32856	517433	1218	True				
ANR	519501	Statement	space_params	727:58:32857:32868	517433	1219	True				
ANR	519502	Statement	.	727:70:32869:32869	517433	1220	True				
ANR	519503	Statement	band	727:71:32870:32873	517433	1221	True				
ANR	519504	Statement	.	727:75:32874:32874	517433	1222	True				
ANR	519505	Statement	BandWidth	727:76:32875:32883	517433	1223	True				
ANR	519506	Statement	)	727:85:32884:32884	517433	1224	True				
ANR	519507	Statement	)	727:86:32885:32885	517433	1225	True				
ANR	519508	Statement	<	727:88:32887:32887	517433	1226	True				
ANR	519509	Statement	0	727:90:32889:32889	517433	1227	True				
ANR	519510	Statement	||	727:92:32891:32892	517433	1228	True				
ANR	519511	Statement	(	728:8:32902:32902	517433	1229	True				
ANR	519512	Statement	code	728:9:32903:32906	517433	1230	True				
ANR	519513	Statement	=	728:14:32908:32908	517433	1231	True				
ANR	519514	Statement	param_write_long	728:16:32910:32925	517433	1232	True				
ANR	519515	Statement	(	728:32:32926:32926	517433	1233	True				
ANR	519516	Statement	plist	728:33:32927:32931	517433	1234	True				
ANR	519517	Statement	","	728:38:32932:32932	517433	1235	True				
ANR	519518	Statement	"""BufferSpace"""	728:40:32934:32946	517433	1236	True				
ANR	519519	Statement	","	728:53:32947:32947	517433	1237	True				
ANR	519520	Statement	&	728:55:32949:32949	517433	1238	True				
ANR	519521	Statement	dev	728:56:32950:32952	517433	1239	True				
ANR	519522	Statement	->	728:59:32953:32954	517433	1240	True				
ANR	519523	Statement	space_params	728:61:32955:32966	517433	1241	True				
ANR	519524	Statement	.	728:73:32967:32967	517433	1242	True				
ANR	519525	Statement	BufferSpace	728:74:32968:32978	517433	1243	True				
ANR	519526	Statement	)	728:85:32979:32979	517433	1244	True				
ANR	519527	Statement	)	728:86:32980:32980	517433	1245	True				
ANR	519528	Statement	<	728:88:32982:32982	517433	1246	True				
ANR	519529	Statement	0	728:90:32984:32984	517433	1247	True				
ANR	519530	Statement	||	728:92:32986:32987	517433	1248	True				
ANR	519531	Statement	(	729:8:32997:32997	517433	1249	True				
ANR	519532	Statement	code	729:9:32998:33001	517433	1250	True				
ANR	519533	Statement	=	729:14:33003:33003	517433	1251	True				
ANR	519534	Statement	param_write_int	729:16:33005:33019	517433	1252	True				
ANR	519535	Statement	(	729:31:33020:33020	517433	1253	True				
ANR	519536	Statement	plist	729:32:33021:33025	517433	1254	True				
ANR	519537	Statement	","	729:37:33026:33026	517433	1255	True				
ANR	519538	Statement	"""InterpolateControl"""	729:39:33028:33047	517433	1256	True				
ANR	519539	Statement	","	729:59:33048:33048	517433	1257	True				
ANR	519540	Statement	&	729:61:33050:33050	517433	1258	True				
ANR	519541	Statement	dev	729:62:33051:33053	517433	1259	True				
ANR	519542	Statement	->	729:65:33054:33055	517433	1260	True				
ANR	519543	Statement	interpolate_control	729:67:33056:33074	517433	1261	True				
ANR	519544	Statement	)	729:86:33075:33075	517433	1262	True				
ANR	519545	Statement	)	729:87:33076:33076	517433	1263	True				
ANR	519546	Statement	<	729:89:33078:33078	517433	1264	True				
ANR	519547	Statement	0	729:91:33080:33080	517433	1265	True				
ANR	519548	Statement	)	730:8:33090:33090	517433	1266	True				
ANR	519549	ReturnStatement	return code ;	731:8:33100:33111	517433	1267	True				
ANR	519550	Identifier	code		517433	0					
ANR	519551	IfStatement	if ( dev -> LeadingEdge & LEADINGEDGE_SET_MASK )		517433	1268					
ANR	519552	Condition	dev -> LeadingEdge & LEADINGEDGE_SET_MASK	734:8:33183:33221	517433	0	True				
ANR	519553	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_SET_MASK		517433	0		&			
ANR	519554	PtrMemberAccess	dev -> LeadingEdge		517433	0					
ANR	519555	Identifier	dev		517433	0					
ANR	519556	Identifier	LeadingEdge		517433	1					
ANR	519557	Identifier	LEADINGEDGE_SET_MASK		517433	1					
ANR	519558	CompoundStatement		242:8:12891:12944	517433	1					
ANR	519559	IdentifierDeclStatement	int leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK ;	735:8:33234:33287	517433	0	True				
ANR	519560	IdentifierDecl	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		517433	0					
ANR	519561	IdentifierDeclType	int		517433	0					
ANR	519562	Identifier	leadingedge		517433	1					
ANR	519563	AssignmentExpression	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		517433	2		=			
ANR	519564	Identifier	leadingedge		517433	0					
ANR	519565	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_MASK		517433	1		&			
ANR	519566	PtrMemberAccess	dev -> LeadingEdge		517433	0					
ANR	519567	Identifier	dev		517433	0					
ANR	519568	Identifier	LeadingEdge		517433	1					
ANR	519569	Identifier	LEADINGEDGE_MASK		517433	1					
ANR	519570	ExpressionStatement	"code = param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"	736:8:33297:33355	517433	1	True				
ANR	519571	AssignmentExpression	"code = param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"		517433	0		=			
ANR	519572	Identifier	code		517433	0					
ANR	519573	CallExpression	"param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"		517433	1					
ANR	519574	Callee	param_write_int		517433	0					
ANR	519575	Identifier	param_write_int		517433	0					
ANR	519576	ArgumentList	plist		517433	1					
ANR	519577	Argument	plist		517433	0					
ANR	519578	Identifier	plist		517433	0					
ANR	519579	Argument	"""LeadingEdge"""		517433	1					
ANR	519580	PrimaryExpression	"""LeadingEdge"""		517433	0					
ANR	519581	Argument	& leadingedge		517433	2					
ANR	519582	UnaryOperationExpression	& leadingedge		517433	0					
ANR	519583	UnaryOperator	&		517433	0					
ANR	519584	Identifier	leadingedge		517433	1					
ANR	519585	ElseStatement	else		517433	0					
ANR	519586	ExpressionStatement	"code = param_write_null ( plist , ""LeadingEdge"" )"	738:8:33376:33421	517433	0	True				
ANR	519587	AssignmentExpression	"code = param_write_null ( plist , ""LeadingEdge"" )"		517433	0		=			
ANR	519588	Identifier	code		517433	0					
ANR	519589	CallExpression	"param_write_null ( plist , ""LeadingEdge"" )"		517433	1					
ANR	519590	Callee	param_write_null		517433	0					
ANR	519591	Identifier	param_write_null		517433	0					
ANR	519592	ArgumentList	plist		517433	1					
ANR	519593	Argument	plist		517433	0					
ANR	519594	Identifier	plist		517433	0					
ANR	519595	Argument	"""LeadingEdge"""		517433	1					
ANR	519596	PrimaryExpression	"""LeadingEdge"""		517433	0					
ANR	519597	IfStatement	if ( code < 0 )		517433	1269					
ANR	519598	Condition	code < 0	739:8:33431:33438	517433	0	True				
ANR	519599	RelationalExpression	code < 0		517433	0		<			
ANR	519600	Identifier	code		517433	0					
ANR	519601	PrimaryExpression	0		517433	1					
ANR	519602	ReturnStatement	return code ;	740:8:33449:33460	517433	1	True				
ANR	519603	Identifier	code		517433	0					
ANR	519604	IfStatement	"if ( ( code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ) < 0 )"		517433	1270					
ANR	519605	Condition	"( code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ) < 0"	742:8:33471:33535	517433	0	True				
ANR	519606	RelationalExpression	"( code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ) < 0"		517433	0		<			
ANR	519607	AssignmentExpression	"code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		517433	0		=			
ANR	519608	Identifier	code		517433	0					
ANR	519609	CallExpression	"param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		517433	1					
ANR	519610	Callee	param_write_int		517433	0					
ANR	519611	Identifier	param_write_int		517433	0					
ANR	519612	ArgumentList	plist		517433	1					
ANR	519613	Argument	plist		517433	0					
ANR	519614	Identifier	plist		517433	0					
ANR	519615	Argument	"""FirstPage"""		517433	1					
ANR	519616	PrimaryExpression	"""FirstPage"""		517433	0					
ANR	519617	Argument	& dev -> FirstPage		517433	2					
ANR	519618	UnaryOperationExpression	& dev -> FirstPage		517433	0					
ANR	519619	UnaryOperator	&		517433	0					
ANR	519620	PtrMemberAccess	dev -> FirstPage		517433	1					
ANR	519621	Identifier	dev		517433	0					
ANR	519622	Identifier	FirstPage		517433	1					
ANR	519623	PrimaryExpression	0		517433	1					
ANR	519624	ReturnStatement	return code ;	743:8:33546:33557	517433	1	True				
ANR	519625	Identifier	code		517433	0					
ANR	519626	IfStatement	"if ( ( code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ) < 0 )"		517433	1271					
ANR	519627	Condition	"( code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ) < 0"	744:8:33567:33629	517433	0	True				
ANR	519628	RelationalExpression	"( code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ) < 0"		517433	0		<			
ANR	519629	AssignmentExpression	"code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage )"		517433	0		=			
ANR	519630	Identifier	code		517433	0					
ANR	519631	CallExpression	"param_write_int ( plist , ""LastPage"" , & dev -> LastPage )"		517433	1					
ANR	519632	Callee	param_write_int		517433	0					
ANR	519633	Identifier	param_write_int		517433	0					
ANR	519634	ArgumentList	plist		517433	1					
ANR	519635	Argument	plist		517433	0					
ANR	519636	Identifier	plist		517433	0					
ANR	519637	Argument	"""LastPage"""		517433	1					
ANR	519638	PrimaryExpression	"""LastPage"""		517433	0					
ANR	519639	Argument	& dev -> LastPage		517433	2					
ANR	519640	UnaryOperationExpression	& dev -> LastPage		517433	0					
ANR	519641	UnaryOperator	&		517433	0					
ANR	519642	PtrMemberAccess	dev -> LastPage		517433	1					
ANR	519643	Identifier	dev		517433	0					
ANR	519644	Identifier	LastPage		517433	1					
ANR	519645	PrimaryExpression	0		517433	1					
ANR	519646	ReturnStatement	return code ;	745:8:33640:33651	517433	1	True				
ANR	519647	Identifier	code		517433	0					
ANR	519648	ExpressionStatement	temp_bool = dev -> DisablePageHandler	747:4:33658:33693	517433	1272	True				
ANR	519649	AssignmentExpression	temp_bool = dev -> DisablePageHandler		517433	0		=			
ANR	519650	Identifier	temp_bool		517433	0					
ANR	519651	PtrMemberAccess	dev -> DisablePageHandler		517433	1					
ANR	519652	Identifier	dev		517433	0					
ANR	519653	Identifier	DisablePageHandler		517433	1					
ANR	519654	IfStatement	"if ( ( code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ) < 0 )"		517433	1273					
ANR	519655	Condition	"( code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ) < 0"	748:8:33703:33772	517433	0	True				
ANR	519656	RelationalExpression	"( code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ) < 0"		517433	0		<			
ANR	519657	AssignmentExpression	"code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		517433	0		=			
ANR	519658	Identifier	code		517433	0					
ANR	519659	CallExpression	"param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		517433	1					
ANR	519660	Callee	param_write_bool		517433	0					
ANR	519661	Identifier	param_write_bool		517433	0					
ANR	519662	ArgumentList	plist		517433	1					
ANR	519663	Argument	plist		517433	0					
ANR	519664	Identifier	plist		517433	0					
ANR	519665	Argument	"""DisablePageHandler"""		517433	1					
ANR	519666	PrimaryExpression	"""DisablePageHandler"""		517433	0					
ANR	519667	Argument	& temp_bool		517433	2					
ANR	519668	UnaryOperationExpression	& temp_bool		517433	0					
ANR	519669	UnaryOperator	&		517433	0					
ANR	519670	Identifier	temp_bool		517433	1					
ANR	519671	PrimaryExpression	0		517433	1					
ANR	519672	ReturnStatement	return code ;	749:8:33783:33794	517433	1	True				
ANR	519673	Identifier	code		517433	0					
ANR	519674	IfStatement	if ( dev -> PageList )		517433	1274					
ANR	519675	Condition	dev -> PageList	751:8:33805:33817	517433	0	True				
ANR	519676	PtrMemberAccess	dev -> PageList		517433	0					
ANR	519677	Identifier	dev		517433	0					
ANR	519678	Identifier	PageList		517433	1					
ANR	519679	CompoundStatement		259:8:13487:13536	517433	1					
ANR	519680	IdentifierDeclStatement	gdev_pagelist * p = ( gdev_pagelist * ) dev -> PageList ;	752:8:33830:33879	517433	0	True				
ANR	519681	IdentifierDecl	* p = ( gdev_pagelist * ) dev -> PageList		517433	0					
ANR	519682	IdentifierDeclType	gdev_pagelist *		517433	0					
ANR	519683	Identifier	p		517433	1					
ANR	519684	AssignmentExpression	* p = ( gdev_pagelist * ) dev -> PageList		517433	2		=			
ANR	519685	Identifier	p		517433	0					
ANR	519686	CastExpression	( gdev_pagelist * ) dev -> PageList		517433	1					
ANR	519687	CastTarget	gdev_pagelist *		517433	0					
ANR	519688	PtrMemberAccess	dev -> PageList		517433	1					
ANR	519689	Identifier	dev		517433	0					
ANR	519690	Identifier	PageList		517433	1					
ANR	519691	ExpressionStatement	"param_string_from_string ( pagelist , p -> Pages )"	753:8:33889:33933	517433	1	True				
ANR	519692	CallExpression	"param_string_from_string ( pagelist , p -> Pages )"		517433	0					
ANR	519693	Callee	param_string_from_string		517433	0					
ANR	519694	Identifier	param_string_from_string		517433	0					
ANR	519695	ArgumentList	pagelist		517433	1					
ANR	519696	Argument	pagelist		517433	0					
ANR	519697	Identifier	pagelist		517433	0					
ANR	519698	Argument	p -> Pages		517433	1					
ANR	519699	PtrMemberAccess	p -> Pages		517433	0					
ANR	519700	Identifier	p		517433	0					
ANR	519701	Identifier	Pages		517433	1					
ANR	519702	ElseStatement	else		517433	0					
ANR	519703	ExpressionStatement	"param_string_from_string ( pagelist , null_str )"	756:8:33958:34002	517433	0	True				
ANR	519704	CallExpression	"param_string_from_string ( pagelist , null_str )"		517433	0					
ANR	519705	Callee	param_string_from_string		517433	0					
ANR	519706	Identifier	param_string_from_string		517433	0					
ANR	519707	ArgumentList	pagelist		517433	1					
ANR	519708	Argument	pagelist		517433	0					
ANR	519709	Identifier	pagelist		517433	0					
ANR	519710	Argument	null_str		517433	1					
ANR	519711	Identifier	null_str		517433	0					
ANR	519712	IfStatement	"if ( ( code = param_write_name ( plist , ""PageList"" , & pagelist ) ) < 0 )"		517433	1275					
ANR	519713	Condition	"( code = param_write_name ( plist , ""PageList"" , & pagelist ) ) < 0"	757:8:34012:34070	517433	0	True				
ANR	519714	RelationalExpression	"( code = param_write_name ( plist , ""PageList"" , & pagelist ) ) < 0"		517433	0		<			
ANR	519715	AssignmentExpression	"code = param_write_name ( plist , ""PageList"" , & pagelist )"		517433	0		=			
ANR	519716	Identifier	code		517433	0					
ANR	519717	CallExpression	"param_write_name ( plist , ""PageList"" , & pagelist )"		517433	1					
ANR	519718	Callee	param_write_name		517433	0					
ANR	519719	Identifier	param_write_name		517433	0					
ANR	519720	ArgumentList	plist		517433	1					
ANR	519721	Argument	plist		517433	0					
ANR	519722	Identifier	plist		517433	0					
ANR	519723	Argument	"""PageList"""		517433	1					
ANR	519724	PrimaryExpression	"""PageList"""		517433	0					
ANR	519725	Argument	& pagelist		517433	2					
ANR	519726	UnaryOperationExpression	& pagelist		517433	0					
ANR	519727	UnaryOperator	&		517433	0					
ANR	519728	Identifier	pagelist		517433	1					
ANR	519729	PrimaryExpression	0		517433	1					
ANR	519730	ReturnStatement	return code ;	758:8:34081:34092	517433	1	True				
ANR	519731	Identifier	code		517433	0					
ANR	519732	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERIMAGE	760:4:34099:34142	517433	1276	True				
ANR	519733	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERIMAGE		517433	0		=			
ANR	519734	Identifier	temp_bool		517433	0					
ANR	519735	BitAndExpression	dev -> ObjectFilter & FILTERIMAGE		517433	1		&			
ANR	519736	PtrMemberAccess	dev -> ObjectFilter		517433	0					
ANR	519737	Identifier	dev		517433	0					
ANR	519738	Identifier	ObjectFilter		517433	1					
ANR	519739	Identifier	FILTERIMAGE		517433	1					
ANR	519740	IfStatement	"if ( ( code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ) < 0 )"		517433	1277					
ANR	519741	Condition	"( code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ) < 0"	761:8:34152:34214	517433	0	True				
ANR	519742	RelationalExpression	"( code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ) < 0"		517433	0		<			
ANR	519743	AssignmentExpression	"code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		517433	0		=			
ANR	519744	Identifier	code		517433	0					
ANR	519745	CallExpression	"param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		517433	1					
ANR	519746	Callee	param_write_bool		517433	0					
ANR	519747	Identifier	param_write_bool		517433	0					
ANR	519748	ArgumentList	plist		517433	1					
ANR	519749	Argument	plist		517433	0					
ANR	519750	Identifier	plist		517433	0					
ANR	519751	Argument	"""FILTERIMAGE"""		517433	1					
ANR	519752	PrimaryExpression	"""FILTERIMAGE"""		517433	0					
ANR	519753	Argument	& temp_bool		517433	2					
ANR	519754	UnaryOperationExpression	& temp_bool		517433	0					
ANR	519755	UnaryOperator	&		517433	0					
ANR	519756	Identifier	temp_bool		517433	1					
ANR	519757	PrimaryExpression	0		517433	1					
ANR	519758	ReturnStatement	return code ;	762:8:34225:34236	517433	1	True				
ANR	519759	Identifier	code		517433	0					
ANR	519760	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERTEXT	763:4:34242:34284	517433	1278	True				
ANR	519761	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERTEXT		517433	0		=			
ANR	519762	Identifier	temp_bool		517433	0					
ANR	519763	BitAndExpression	dev -> ObjectFilter & FILTERTEXT		517433	1		&			
ANR	519764	PtrMemberAccess	dev -> ObjectFilter		517433	0					
ANR	519765	Identifier	dev		517433	0					
ANR	519766	Identifier	ObjectFilter		517433	1					
ANR	519767	Identifier	FILTERTEXT		517433	1					
ANR	519768	IfStatement	"if ( ( code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ) < 0 )"		517433	1279					
ANR	519769	Condition	"( code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ) < 0"	764:8:34294:34355	517433	0	True				
ANR	519770	RelationalExpression	"( code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ) < 0"		517433	0		<			
ANR	519771	AssignmentExpression	"code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		517433	0		=			
ANR	519772	Identifier	code		517433	0					
ANR	519773	CallExpression	"param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		517433	1					
ANR	519774	Callee	param_write_bool		517433	0					
ANR	519775	Identifier	param_write_bool		517433	0					
ANR	519776	ArgumentList	plist		517433	1					
ANR	519777	Argument	plist		517433	0					
ANR	519778	Identifier	plist		517433	0					
ANR	519779	Argument	"""FILTERTEXT"""		517433	1					
ANR	519780	PrimaryExpression	"""FILTERTEXT"""		517433	0					
ANR	519781	Argument	& temp_bool		517433	2					
ANR	519782	UnaryOperationExpression	& temp_bool		517433	0					
ANR	519783	UnaryOperator	&		517433	0					
ANR	519784	Identifier	temp_bool		517433	1					
ANR	519785	PrimaryExpression	0		517433	1					
ANR	519786	ReturnStatement	return code ;	765:8:34366:34377	517433	1	True				
ANR	519787	Identifier	code		517433	0					
ANR	519788	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERVECTOR	766:4:34383:34427	517433	1280	True				
ANR	519789	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERVECTOR		517433	0		=			
ANR	519790	Identifier	temp_bool		517433	0					
ANR	519791	BitAndExpression	dev -> ObjectFilter & FILTERVECTOR		517433	1		&			
ANR	519792	PtrMemberAccess	dev -> ObjectFilter		517433	0					
ANR	519793	Identifier	dev		517433	0					
ANR	519794	Identifier	ObjectFilter		517433	1					
ANR	519795	Identifier	FILTERVECTOR		517433	1					
ANR	519796	IfStatement	"if ( ( code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ) < 0 )"		517433	1281					
ANR	519797	Condition	"( code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ) < 0"	767:8:34437:34500	517433	0	True				
ANR	519798	RelationalExpression	"( code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ) < 0"		517433	0		<			
ANR	519799	AssignmentExpression	"code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		517433	0		=			
ANR	519800	Identifier	code		517433	0					
ANR	519801	CallExpression	"param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		517433	1					
ANR	519802	Callee	param_write_bool		517433	0					
ANR	519803	Identifier	param_write_bool		517433	0					
ANR	519804	ArgumentList	plist		517433	1					
ANR	519805	Argument	plist		517433	0					
ANR	519806	Identifier	plist		517433	0					
ANR	519807	Argument	"""FILTERVECTOR"""		517433	1					
ANR	519808	PrimaryExpression	"""FILTERVECTOR"""		517433	0					
ANR	519809	Argument	& temp_bool		517433	2					
ANR	519810	UnaryOperationExpression	& temp_bool		517433	0					
ANR	519811	UnaryOperator	&		517433	0					
ANR	519812	Identifier	temp_bool		517433	1					
ANR	519813	PrimaryExpression	0		517433	1					
ANR	519814	ReturnStatement	return code ;	768:8:34511:34522	517433	1	True				
ANR	519815	Identifier	code		517433	0					
ANR	519816	IfStatement	if ( colors > 1 )		517433	1282					
ANR	519817	Condition	colors > 1	772:8:34571:34580	517433	0	True				
ANR	519818	RelationalExpression	colors > 1		517433	0		>			
ANR	519819	Identifier	colors		517433	0					
ANR	519820	PrimaryExpression	1		517433	1					
ANR	519821	CompoundStatement		281:8:14305:14356	517433	1					
ANR	519822	IdentifierDeclStatement	int RGBValues = dev -> color_info . max_color + 1 ;	773:8:34593:34638	517433	0	True				
ANR	519823	IdentifierDecl	RGBValues = dev -> color_info . max_color + 1		517433	0					
ANR	519824	IdentifierDeclType	int		517433	0					
ANR	519825	Identifier	RGBValues		517433	1					
ANR	519826	AssignmentExpression	RGBValues = dev -> color_info . max_color + 1		517433	2		=			
ANR	519827	Identifier	RGBValues		517433	0					
ANR	519828	AdditiveExpression	dev -> color_info . max_color + 1		517433	1		+			
ANR	519829	MemberAccess	dev -> color_info . max_color		517433	0					
ANR	519830	PtrMemberAccess	dev -> color_info		517433	0					
ANR	519831	Identifier	dev		517433	0					
ANR	519832	Identifier	color_info		517433	1					
ANR	519833	Identifier	max_color		517433	1					
ANR	519834	PrimaryExpression	1		517433	1					
ANR	519835	IdentifierDeclStatement	long ColorValues = ( depth >= 32 ? - 1 : 1L << depth ) ;	774:8:34648:34699	517433	1	True				
ANR	519836	IdentifierDecl	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		517433	0					
ANR	519837	IdentifierDeclType	long		517433	0					
ANR	519838	Identifier	ColorValues		517433	1					
ANR	519839	AssignmentExpression	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		517433	2		=			
ANR	519840	Identifier	ColorValues		517433	0					
ANR	519841	ConditionalExpression	depth >= 32 ? - 1 : 1L << depth		517433	1					
ANR	519842	Condition	depth >= 32		517433	0					
ANR	519843	RelationalExpression	depth >= 32		517433	0		>=			
ANR	519844	Identifier	depth		517433	0					
ANR	519845	PrimaryExpression	32		517433	1					
ANR	519846	UnaryOperationExpression	- 1		517433	1					
ANR	519847	UnaryOperator	-		517433	0					
ANR	519848	PrimaryExpression	1		517433	1					
ANR	519849	ShiftExpression	1L << depth		517433	2		<<			
ANR	519850	PrimaryExpression	1L		517433	0					
ANR	519851	Identifier	depth		517433	1					
ANR	519852	IfStatement	"if ( ( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0 )"		517433	2					
ANR	519853	Condition	"( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"	776:12:34746:35041	517433	0	True				
ANR	519854	OrExpression	"( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		517433	0		||			
ANR	519855	RelationalExpression	"( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0"		517433	0		<			
ANR	519856	AssignmentExpression	"code = param_write_int ( plist , ""RedValues"" , & RGBValues )"		517433	0		=			
ANR	519857	Identifier	code		517433	0					
ANR	519858	CallExpression	"param_write_int ( plist , ""RedValues"" , & RGBValues )"		517433	1					
ANR	519859	Callee	param_write_int		517433	0					
ANR	519860	Identifier	param_write_int		517433	0					
ANR	519861	ArgumentList	plist		517433	1					
ANR	519862	Argument	plist		517433	0					
ANR	519863	Identifier	plist		517433	0					
ANR	519864	Argument	"""RedValues"""		517433	1					
ANR	519865	PrimaryExpression	"""RedValues"""		517433	0					
ANR	519866	Argument	& RGBValues		517433	2					
ANR	519867	UnaryOperationExpression	& RGBValues		517433	0					
ANR	519868	UnaryOperator	&		517433	0					
ANR	519869	Identifier	RGBValues		517433	1					
ANR	519870	PrimaryExpression	0		517433	1					
ANR	519871	OrExpression	"( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		517433	1		||			
ANR	519872	RelationalExpression	"( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0"		517433	0		<			
ANR	519873	AssignmentExpression	"code = param_write_int ( plist , ""GreenValues"" , & RGBValues )"		517433	0		=			
ANR	519874	Identifier	code		517433	0					
ANR	519875	CallExpression	"param_write_int ( plist , ""GreenValues"" , & RGBValues )"		517433	1					
ANR	519876	Callee	param_write_int		517433	0					
ANR	519877	Identifier	param_write_int		517433	0					
ANR	519878	ArgumentList	plist		517433	1					
ANR	519879	Argument	plist		517433	0					
ANR	519880	Identifier	plist		517433	0					
ANR	519881	Argument	"""GreenValues"""		517433	1					
ANR	519882	PrimaryExpression	"""GreenValues"""		517433	0					
ANR	519883	Argument	& RGBValues		517433	2					
ANR	519884	UnaryOperationExpression	& RGBValues		517433	0					
ANR	519885	UnaryOperator	&		517433	0					
ANR	519886	Identifier	RGBValues		517433	1					
ANR	519887	PrimaryExpression	0		517433	1					
ANR	519888	OrExpression	"( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		517433	1		||			
ANR	519889	RelationalExpression	"( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0"		517433	0		<			
ANR	519890	AssignmentExpression	"code = param_write_int ( plist , ""BlueValues"" , & RGBValues )"		517433	0		=			
ANR	519891	Identifier	code		517433	0					
ANR	519892	CallExpression	"param_write_int ( plist , ""BlueValues"" , & RGBValues )"		517433	1					
ANR	519893	Callee	param_write_int		517433	0					
ANR	519894	Identifier	param_write_int		517433	0					
ANR	519895	ArgumentList	plist		517433	1					
ANR	519896	Argument	plist		517433	0					
ANR	519897	Identifier	plist		517433	0					
ANR	519898	Argument	"""BlueValues"""		517433	1					
ANR	519899	PrimaryExpression	"""BlueValues"""		517433	0					
ANR	519900	Argument	& RGBValues		517433	2					
ANR	519901	UnaryOperationExpression	& RGBValues		517433	0					
ANR	519902	UnaryOperator	&		517433	0					
ANR	519903	Identifier	RGBValues		517433	1					
ANR	519904	PrimaryExpression	0		517433	1					
ANR	519905	RelationalExpression	"( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		517433	1		<			
ANR	519906	AssignmentExpression	"code = param_write_long ( plist , ""ColorValues"" , & ColorValues )"		517433	0		=			
ANR	519907	Identifier	code		517433	0					
ANR	519908	CallExpression	"param_write_long ( plist , ""ColorValues"" , & ColorValues )"		517433	1					
ANR	519909	Callee	param_write_long		517433	0					
ANR	519910	Identifier	param_write_long		517433	0					
ANR	519911	ArgumentList	plist		517433	1					
ANR	519912	Argument	plist		517433	0					
ANR	519913	Identifier	plist		517433	0					
ANR	519914	Argument	"""ColorValues"""		517433	1					
ANR	519915	PrimaryExpression	"""ColorValues"""		517433	0					
ANR	519916	Argument	& ColorValues		517433	2					
ANR	519917	UnaryOperationExpression	& ColorValues		517433	0					
ANR	519918	UnaryOperator	&		517433	0					
ANR	519919	Identifier	ColorValues		517433	1					
ANR	519920	PrimaryExpression	0		517433	1					
ANR	519921	ReturnStatement	return code ;	781:12:35069:35080	517433	1	True				
ANR	519922	Identifier	code		517433	0					
ANR	519923	IfStatement	"if ( param_requested ( plist , ""HWColorMap"" ) )"		517433	1283					
ANR	519924	Condition	"param_requested ( plist , ""HWColorMap"" )"	783:8:35096:35131	517433	0	True				
ANR	519925	CallExpression	"param_requested ( plist , ""HWColorMap"" )"		517433	0					
ANR	519926	Callee	param_requested		517433	0					
ANR	519927	Identifier	param_requested		517433	0					
ANR	519928	ArgumentList	plist		517433	1					
ANR	519929	Argument	plist		517433	0					
ANR	519930	Identifier	plist		517433	0					
ANR	519931	Argument	"""HWColorMap"""		517433	1					
ANR	519932	PrimaryExpression	"""HWColorMap"""		517433	0					
ANR	519933	CompoundStatement		291:8:14801:14821	517433	1					
ANR	519934	IdentifierDeclStatement	byte palette [ 3 << 8 ] ;	784:8:35144:35164	517433	0	True				
ANR	519935	IdentifierDecl	palette [ 3 << 8 ]		517433	0					
ANR	519936	IdentifierDeclType	byte [ 3 << 8 ]		517433	0					
ANR	519937	Identifier	palette		517433	1					
ANR	519938	ShiftExpression	3 << 8		517433	2		<<			
ANR	519939	PrimaryExpression	3		517433	0					
ANR	519940	PrimaryExpression	8		517433	1					
ANR	519941	IfStatement	"if ( param_HWColorMap ( dev , palette ) )"		517433	1					
ANR	519942	Condition	"param_HWColorMap ( dev , palette )"	786:12:35179:35208	517433	0	True				
ANR	519943	CallExpression	"param_HWColorMap ( dev , palette )"		517433	0					
ANR	519944	Callee	param_HWColorMap		517433	0					
ANR	519945	Identifier	param_HWColorMap		517433	0					
ANR	519946	ArgumentList	dev		517433	1					
ANR	519947	Argument	dev		517433	0					
ANR	519948	Identifier	dev		517433	0					
ANR	519949	Argument	palette		517433	1					
ANR	519950	Identifier	palette		517433	0					
ANR	519951	CompoundStatement		294:12:14882:14903	517433	1					
ANR	519952	IdentifierDeclStatement	gs_param_string hwcms ;	787:12:35225:35246	517433	0	True				
ANR	519953	IdentifierDecl	hwcms		517433	0					
ANR	519954	IdentifierDeclType	gs_param_string		517433	0					
ANR	519955	Identifier	hwcms		517433	1					
ANR	519956	ExpressionStatement	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"	789:12:35261:35353	517433	1	True				
ANR	519957	Expression	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"		517433	0					
ANR	519958	AssignmentExpression	hwcms . data = palette		517433	0		=			
ANR	519959	MemberAccess	hwcms . data		517433	0					
ANR	519960	Identifier	hwcms		517433	0					
ANR	519961	Identifier	data		517433	1					
ANR	519962	Identifier	palette		517433	1					
ANR	519963	Expression	"hwcms . size = colors << depth , hwcms . persistent = false"		517433	1					
ANR	519964	AssignmentExpression	hwcms . size = colors << depth		517433	0		=			
ANR	519965	MemberAccess	hwcms . size		517433	0					
ANR	519966	Identifier	hwcms		517433	0					
ANR	519967	Identifier	size		517433	1					
ANR	519968	ShiftExpression	colors << depth		517433	1		<<			
ANR	519969	Identifier	colors		517433	0					
ANR	519970	Identifier	depth		517433	1					
ANR	519971	AssignmentExpression	hwcms . persistent = false		517433	1		=			
ANR	519972	MemberAccess	hwcms . persistent		517433	0					
ANR	519973	Identifier	hwcms		517433	0					
ANR	519974	Identifier	persistent		517433	1					
ANR	519975	Identifier	false		517433	1					
ANR	519976	IfStatement	"if ( ( code = param_write_string ( plist , ""HWColorMap"" , & hwcms ) ) < 0 )"		517433	2					
ANR	519977	Condition	"( code = param_write_string ( plist , ""HWColorMap"" , & hwcms ) ) < 0"	791:16:35371:35430	517433	0	True				
ANR	519978	RelationalExpression	"( code = param_write_string ( plist , ""HWColorMap"" , & hwcms ) ) < 0"		517433	0		<			
ANR	519979	AssignmentExpression	"code = param_write_string ( plist , ""HWColorMap"" , & hwcms )"		517433	0		=			
ANR	519980	Identifier	code		517433	0					
ANR	519981	CallExpression	"param_write_string ( plist , ""HWColorMap"" , & hwcms )"		517433	1					
ANR	519982	Callee	param_write_string		517433	0					
ANR	519983	Identifier	param_write_string		517433	0					
ANR	519984	ArgumentList	plist		517433	1					
ANR	519985	Argument	plist		517433	0					
ANR	519986	Identifier	plist		517433	0					
ANR	519987	Argument	"""HWColorMap"""		517433	1					
ANR	519988	PrimaryExpression	"""HWColorMap"""		517433	0					
ANR	519989	Argument	& hwcms		517433	2					
ANR	519990	UnaryOperationExpression	& hwcms		517433	0					
ANR	519991	UnaryOperator	&		517433	0					
ANR	519992	Identifier	hwcms		517433	1					
ANR	519993	PrimaryExpression	0		517433	1					
ANR	519994	ReturnStatement	return code ;	792:16:35449:35460	517433	1	True				
ANR	519995	Identifier	code		517433	0					
ANR	519996	ReturnStatement	return 0 ;	796:4:35483:35491	517433	1284	True				
ANR	519997	PrimaryExpression	0		517433	0					
ANR	519998	ReturnType	int		517433	1					
ANR	519999	Identifier	gx_default_get_params		517433	2					
ANR	520000	ParameterList	"gx_device * dev , gs_param_list * plist"		517433	3					
ANR	520001	Parameter	gx_device * dev	493:22:20302:20316	517433	0	True				
ANR	520002	ParameterType	gx_device *		517433	0					
ANR	520003	Identifier	dev		517433	1					
ANR	520004	Parameter	gs_param_list * plist	493:39:20319:20339	517433	1	True				
ANR	520005	ParameterType	gs_param_list *		517433	0					
ANR	520006	Identifier	plist		517433	1					
ANR	520007	CFGEntryNode	ENTRY		517433		True				
ANR	520008	CFGExitNode	EXIT		517433		True				
ANR	520009	Symbol	hwcms . data		517433						
ANR	520010	Symbol	dev_profile -> postren_profile -> name		517433						
ANR	520011	Symbol	blend_profile		517433						
ANR	520012	Symbol	dev -> HWMargins		517433						
ANR	520013	Symbol	dev -> color_info . max_components		517433						
ANR	520014	Symbol	* cms		517433						
ANR	520015	Symbol	temp_bool		517433						
ANR	520016	Symbol	FILTERIMAGE		517433						
ANR	520017	Symbol	p -> Pages		517433						
ANR	520018	Symbol	dev		517433						
ANR	520019	Symbol	palette		517433						
ANR	520020	Symbol	param_write_string		517433						
ANR	520021	Symbol	null_str		517433						
ANR	520022	Symbol	LEADINGEDGE_SET_MASK		517433						
ANR	520023	Symbol	devicegraytok		517433						
ANR	520024	Symbol	icc_colorants		517433						
ANR	520025	Symbol	dev -> color_info . num_components		517433						
ANR	520026	Symbol	gsicc_init_device_profile_struct		517433						
ANR	520027	Symbol	dev -> color_info . max_color		517433						
ANR	520028	Symbol	& dev_profile		517433						
ANR	520029	Symbol	* dev_profile		517433						
ANR	520030	Symbol	dns		517433						
ANR	520031	Symbol	* dev_profile -> proof_profile		517433						
ANR	520032	Symbol	ibba		517433						
ANR	520033	Symbol	profile_array		517433						
ANR	520034	Symbol	param_write_null		517433						
ANR	520035	Symbol	RGBValues		517433						
ANR	520036	Symbol	hwcms		517433						
ANR	520037	Symbol	dev -> DisablePageHandler		517433						
ANR	520038	Symbol	param_write_name		517433						
ANR	520039	Symbol	MAX_COLOR_ACCURACY		517433						
ANR	520040	Symbol	gsBPNOTSPECIFIED		517433						
ANR	520041	Symbol	scna		517433						
ANR	520042	Symbol	& leadingedge		517433						
ANR	520043	Symbol	* dev_profile -> postren_profile		517433						
ANR	520044	Symbol	* dev_profile -> link_profile		517433						
ANR	520045	Symbol	param_HWColorMap		517433						
ANR	520046	Symbol	param_write_long		517433						
ANR	520047	Symbol	* dev		517433						
ANR	520048	Symbol	ColorValues		517433						
ANR	520049	Symbol	& dev -> FirstPage		517433						
ANR	520050	Symbol	dev_profile -> device_profile		517433						
ANR	520051	Symbol	prebandthreshold		517433						
ANR	520052	Symbol	dev -> height		517433						
ANR	520053	Symbol	cms		517433						
ANR	520054	Symbol	* profile_intents		517433						
ANR	520055	Symbol	dev -> Margins		517433						
ANR	520056	Symbol	* dev_profile -> blend_profile		517433						
ANR	520057	Symbol	dev -> color_info		517433						
ANR	520058	Symbol	dev -> color_info . depth		517433						
ANR	520059	Symbol	colors		517433						
ANR	520060	Symbol	hwra		517433						
ANR	520061	Symbol	hwcms . persistent		517433						
ANR	520062	Symbol	plist		517433						
ANR	520063	Symbol	dev -> ObjectFilter		517433						
ANR	520064	Symbol	dev_profile -> blend_profile -> name		517433						
ANR	520065	Symbol	colorant_names		517433						
ANR	520066	Symbol	dev -> ImagingBBox		517433						
ANR	520067	Symbol	dev_profile -> rendercond [ k ] . black_point_comp		517433						
ANR	520068	Symbol	dev_profile -> link_profile -> name		517433						
ANR	520069	Symbol	dev -> color_info . max_gray		517433						
ANR	520070	Symbol	* * dev_profile -> device_profile		517433						
ANR	520071	Symbol	dev_profile -> device_profile [ k ] -> name		517433						
ANR	520072	Symbol	dev_profile -> spotnames		517433						
ANR	520073	Symbol	a . persistent		517433						
ANR	520074	Symbol	a		517433						
ANR	520075	Symbol	link_profile		517433						
ANR	520076	Symbol	usefastcolor		517433						
ANR	520077	Symbol	* * * dev_profile		517433						
ANR	520078	Symbol	get_process_color_model_name		517433						
ANR	520079	Symbol	d		517433						
ANR	520080	Symbol	gsicc_get_dev_icccolorants		517433						
ANR	520081	Symbol	dev_profile -> usefastcolor		517433						
ANR	520082	Symbol	k		517433						
ANR	520083	Symbol	gsRINOTSPECIFIED		517433						
ANR	520084	Symbol	dev -> HWResolution		517433						
ANR	520085	Symbol	set_param_array		517433						
ANR	520086	Symbol	p		517433						
ANR	520087	Symbol	a . data		517433						
ANR	520088	Symbol	s		517433						
ANR	520089	Symbol	depth		517433						
ANR	520090	Symbol	& temp_bool		517433						
ANR	520091	Symbol	pcms . data		517433						
ANR	520092	Symbol	LEADINGEDGE_MASK		517433						
ANR	520093	Symbol	* * dev_profile		517433						
ANR	520094	Symbol	dev -> LeadingEdge		517433						
ANR	520095	Symbol	dev_profile -> link_profile		517433						
ANR	520096	Symbol	msa		517433						
ANR	520097	Symbol	proof_profile		517433						
ANR	520098	Symbol	HWSize		517433						
ANR	520099	Symbol	sim_overprint		517433						
ANR	520100	Symbol	dev_profile		517433						
ANR	520101	Symbol	* dev_profile -> device_profile		517433						
ANR	520102	Symbol	dev_profile -> rendercond [ k ] . rendering_intent		517433						
ANR	520103	Symbol	& RGBValues		517433						
ANR	520104	Symbol	FILTERVECTOR		517433						
ANR	520105	Symbol	param_requested		517433						
ANR	520106	Symbol	ma		517433						
ANR	520107	Symbol	leadingedge		517433						
ANR	520108	Symbol	dev -> MediaSize		517433						
ANR	520109	Symbol	NUM_DEVICE_PROFILES		517433						
ANR	520110	Symbol	dev_profile -> devicegraytok		517433						
ANR	520111	Symbol	dev -> PageList		517433						
ANR	520112	Symbol	seprs		517433						
ANR	520113	Symbol	graydetection		517433						
ANR	520114	Symbol	* * k		517433						
ANR	520115	Symbol	NULL		517433						
ANR	520116	Symbol	gsBKPRESNOTSPECIFIED		517433						
ANR	520117	Symbol	profile_intents		517433						
ANR	520118	Symbol	hwsa		517433						
ANR	520119	Symbol	* blackpreserve		517433						
ANR	520120	Symbol	true		517433						
ANR	520121	Symbol	dev_profile -> blend_profile		517433						
ANR	520122	Symbol	postren_profile		517433						
ANR	520123	Symbol	dev_profile -> graydetection		517433						
ANR	520124	Symbol	code		517433						
ANR	520125	Symbol	a . size		517433						
ANR	520126	Symbol	GrayValues		517433						
ANR	520127	Symbol	FILTERTEXT		517433						
ANR	520128	Symbol	dev -> dname		517433						
ANR	520129	Symbol	& dev -> LastPage		517433						
ANR	520130	Symbol	dev_profile -> sim_overprint		517433						
ANR	520131	Symbol	dev_profile -> proof_profile		517433						
ANR	520132	Symbol	param_write_bool		517433						
ANR	520133	Symbol	hwma		517433						
ANR	520134	Symbol	hwcms . size		517433						
ANR	520135	Symbol	dev_proc		517433						
ANR	520136	Symbol	blackptcomps		517433						
ANR	520137	Symbol	& hwcms		517433						
ANR	520138	Symbol	get_profile		517433						
ANR	520139	Symbol	param_write_int		517433						
ANR	520140	Symbol	& pagelist		517433						
ANR	520141	Symbol	blackpreserve		517433						
ANR	520142	Symbol	* HWSize		517433						
ANR	520143	Symbol	dev_profile -> postren_profile		517433						
ANR	520144	Symbol	& ColorValues		517433						
ANR	520145	Symbol	false		517433						
ANR	520146	Symbol	pagelist		517433						
ANR	520147	Symbol	* blackptcomps		517433						
ANR	520148	Symbol	dev_profile -> rendercond		517433						
ANR	520149	Symbol	pcms		517433						
ANR	520150	Symbol	dev_profile -> rendercond [ k ] . preserve_black		517433						
ANR	520151	Symbol	color_accuracy		517433						
ANR	520152	Symbol	* profile_array		517433						
ANR	520153	Symbol	dev_profile -> proof_profile -> name		517433						
ANR	520154	Symbol	dev_profile -> prebandthreshold		517433						
ANR	520155	Symbol	mns		517433						
ANR	520156	Symbol	* dev_profile -> rendercond		517433						
ANR	520157	Symbol	dev -> width		517433						
ANR	520158	Symbol	* k		517433						
ANR	520159	Symbol	* p		517433						
ANR	520160	Function	param_HWColorMap	800:0:35564:36236							
ANR	520161	FunctionDef	"param_HWColorMap (gx_device * dev , byte * palette)"		520160	0					
ANR	520162	CompoundStatement		802:0:35640:36236	520160	0					
ANR	520163	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	803:4:35646:35679	520160	0	True				
ANR	520164	IdentifierDecl	depth = dev -> color_info . depth		520160	0					
ANR	520165	IdentifierDeclType	int		520160	0					
ANR	520166	Identifier	depth		520160	1					
ANR	520167	AssignmentExpression	depth = dev -> color_info . depth		520160	2		=			
ANR	520168	Identifier	depth		520160	0					
ANR	520169	MemberAccess	dev -> color_info . depth		520160	1					
ANR	520170	PtrMemberAccess	dev -> color_info		520160	0					
ANR	520171	Identifier	dev		520160	0					
ANR	520172	Identifier	color_info		520160	1					
ANR	520173	Identifier	depth		520160	1					
ANR	520174	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	804:4:35685:35728	520160	1	True				
ANR	520175	IdentifierDecl	colors = dev -> color_info . num_components		520160	0					
ANR	520176	IdentifierDeclType	int		520160	0					
ANR	520177	Identifier	colors		520160	1					
ANR	520178	AssignmentExpression	colors = dev -> color_info . num_components		520160	2		=			
ANR	520179	Identifier	colors		520160	0					
ANR	520180	MemberAccess	dev -> color_info . num_components		520160	1					
ANR	520181	PtrMemberAccess	dev -> color_info		520160	0					
ANR	520182	Identifier	dev		520160	0					
ANR	520183	Identifier	color_info		520160	1					
ANR	520184	Identifier	num_components		520160	1					
ANR	520185	IfStatement	if ( depth <= 8 && colors <= 3 )		520160	2					
ANR	520186	Condition	depth <= 8 && colors <= 3	806:8:35739:35763	520160	0	True				
ANR	520187	AndExpression	depth <= 8 && colors <= 3		520160	0		&&			
ANR	520188	RelationalExpression	depth <= 8		520160	0		<=			
ANR	520189	Identifier	depth		520160	0					
ANR	520190	PrimaryExpression	8		520160	1					
ANR	520191	RelationalExpression	colors <= 3		520160	1		<=			
ANR	520192	Identifier	colors		520160	0					
ANR	520193	PrimaryExpression	3		520160	1					
ANR	520194	CompoundStatement		8:8:193:209	520160	1					
ANR	520195	IdentifierDeclStatement	byte * p = palette ;	807:8:35776:35793	520160	0	True				
ANR	520196	IdentifierDecl	* p = palette		520160	0					
ANR	520197	IdentifierDeclType	byte *		520160	0					
ANR	520198	Identifier	p		520160	1					
ANR	520199	AssignmentExpression	* p = palette		520160	2		=			
ANR	520200	Identifier	palette		520160	0					
ANR	520201	Identifier	palette		520160	1					
ANR	520202	IdentifierDeclStatement	gx_color_value rgb [ 3 ] ;	808:8:35803:35824	520160	1	True				
ANR	520203	IdentifierDecl	rgb [ 3 ]		520160	0					
ANR	520204	IdentifierDeclType	gx_color_value [ 3 ]		520160	0					
ANR	520205	Identifier	rgb		520160	1					
ANR	520206	PrimaryExpression	3		520160	2					
ANR	520207	IdentifierDeclStatement	gx_color_index i ;	809:8:35834:35850	520160	2	True				
ANR	520208	IdentifierDecl	i		520160	0					
ANR	520209	IdentifierDeclType	gx_color_index		520160	0					
ANR	520210	Identifier	i		520160	1					
ANR	520211	ExpressionStatement	"fill_dev_proc ( dev , map_color_rgb , gx_default_map_color_rgb )"	811:8:35861:35920	520160	3	True				
ANR	520212	CallExpression	"fill_dev_proc ( dev , map_color_rgb , gx_default_map_color_rgb )"		520160	0					
ANR	520213	Callee	fill_dev_proc		520160	0					
ANR	520214	Identifier	fill_dev_proc		520160	0					
ANR	520215	ArgumentList	dev		520160	1					
ANR	520216	Argument	dev		520160	0					
ANR	520217	Identifier	dev		520160	0					
ANR	520218	Argument	map_color_rgb		520160	1					
ANR	520219	Identifier	map_color_rgb		520160	0					
ANR	520220	Argument	gx_default_map_color_rgb		520160	2					
ANR	520221	Identifier	gx_default_map_color_rgb		520160	0					
ANR	520222	ForStatement	for ( i = 0 ; ( i >> depth ) == 0 ; i ++ )		520160	4					
ANR	520223	ForInit	i = 0 ;	812:13:35935:35940	520160	0	True				
ANR	520224	AssignmentExpression	i = 0		520160	0		=			
ANR	520225	Identifier	i		520160	0					
ANR	520226	PrimaryExpression	0		520160	1					
ANR	520227	Condition	( i >> depth ) == 0	812:20:35942:35958	520160	1	True				
ANR	520228	EqualityExpression	( i >> depth ) == 0		520160	0		==			
ANR	520229	ShiftExpression	i >> depth		520160	0		>>			
ANR	520230	Identifier	i		520160	0					
ANR	520231	Identifier	depth		520160	1					
ANR	520232	PrimaryExpression	0		520160	1					
ANR	520233	PostIncDecOperationExpression	i ++	812:39:35961:35963	520160	2	True				
ANR	520234	Identifier	i		520160	0					
ANR	520235	IncDec	++		520160	1					
ANR	520236	CompoundStatement		12:12:339:344	520160	3					
ANR	520237	IdentifierDeclStatement	int j ;	813:12:35980:35985	520160	0	True				
ANR	520238	IdentifierDecl	j		520160	0					
ANR	520239	IdentifierDeclType	int		520160	0					
ANR	520240	Identifier	j		520160	1					
ANR	520241	IfStatement	"if ( ( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb ) < 0 )"		520160	1					
ANR	520242	Condition	"( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb ) < 0"	815:16:36004:36052	520160	0	True				
ANR	520243	RelationalExpression	"( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb ) < 0"		520160	0		<			
ANR	520244	CallExpression	"( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb )"		520160	0					
ANR	520245	Callee	"* dev_proc ( dev , map_color_rgb )"		520160	0					
ANR	520246	UnaryOperationExpression	"* dev_proc ( dev , map_color_rgb )"		520160	0					
ANR	520247	UnaryOperator	*		520160	0					
ANR	520248	CallExpression	"dev_proc ( dev , map_color_rgb )"		520160	1					
ANR	520249	Callee	dev_proc		520160	0					
ANR	520250	Identifier	dev_proc		520160	0					
ANR	520251	ArgumentList	dev		520160	1					
ANR	520252	Argument	dev		520160	0					
ANR	520253	Identifier	dev		520160	0					
ANR	520254	Argument	map_color_rgb		520160	1					
ANR	520255	Identifier	map_color_rgb		520160	0					
ANR	520256	ArgumentList	dev		520160	1					
ANR	520257	Argument	dev		520160	0					
ANR	520258	Identifier	dev		520160	0					
ANR	520259	Argument	i		520160	1					
ANR	520260	Identifier	i		520160	0					
ANR	520261	Argument	rgb		520160	2					
ANR	520262	Identifier	rgb		520160	0					
ANR	520263	PrimaryExpression	0		520160	1					
ANR	520264	ReturnStatement	return false ;	816:16:36071:36083	520160	1	True				
ANR	520265	Identifier	false		520160	0					
ANR	520266	ForStatement	for ( j = 0 ; j < colors ; j ++ )		520160	2					
ANR	520267	ForInit	j = 0 ;	817:17:36102:36107	520160	0	True				
ANR	520268	AssignmentExpression	j = 0		520160	0		=			
ANR	520269	Identifier	j		520160	0					
ANR	520270	PrimaryExpression	0		520160	1					
ANR	520271	Condition	j < colors	817:24:36109:36118	520160	1	True				
ANR	520272	RelationalExpression	j < colors		520160	0		<			
ANR	520273	Identifier	j		520160	0					
ANR	520274	Identifier	colors		520160	1					
ANR	520275	PostIncDecOperationExpression	j ++	817:36:36121:36123	520160	2	True				
ANR	520276	Identifier	j		520160	0					
ANR	520277	IncDec	++		520160	1					
ANR	520278	ExpressionStatement	* p ++ = gx_color_value_to_byte ( rgb [ j ] )	818:16:36142:36179	520160	3	True				
ANR	520279	AssignmentExpression	* p ++ = gx_color_value_to_byte ( rgb [ j ] )		520160	0		=			
ANR	520280	UnaryOperationExpression	* p ++		520160	0					
ANR	520281	UnaryOperator	*		520160	0					
ANR	520282	PostIncDecOperationExpression	p ++		520160	1					
ANR	520283	Identifier	p		520160	0					
ANR	520284	IncDec	++		520160	1					
ANR	520285	CallExpression	gx_color_value_to_byte ( rgb [ j ] )		520160	1					
ANR	520286	Callee	gx_color_value_to_byte		520160	0					
ANR	520287	Identifier	gx_color_value_to_byte		520160	0					
ANR	520288	ArgumentList	rgb [ j ]		520160	1					
ANR	520289	Argument	rgb [ j ]		520160	0					
ANR	520290	ArrayIndexing	rgb [ j ]		520160	0					
ANR	520291	Identifier	rgb		520160	0					
ANR	520292	Identifier	j		520160	1					
ANR	520293	ReturnStatement	return true ;	820:8:36199:36210	520160	5	True				
ANR	520294	Identifier	true		520160	0					
ANR	520295	ReturnStatement	return false ;	822:4:36222:36234	520160	3	True				
ANR	520296	Identifier	false		520160	0					
ANR	520297	ReturnType	static bool		520160	1					
ANR	520298	Identifier	param_HWColorMap		520160	2					
ANR	520299	ParameterList	"gx_device * dev , byte * palette"		520160	3					
ANR	520300	Parameter	gx_device * dev	801:17:35593:35607	520160	0	True				
ANR	520301	ParameterType	gx_device *		520160	0					
ANR	520302	Identifier	dev		520160	1					
ANR	520303	Parameter	byte * palette	801:34:35610:35623	520160	1	True				
ANR	520304	ParameterType	byte *		520160	0					
ANR	520305	Identifier	palette		520160	1					
ANR	520306	CFGEntryNode	ENTRY		520160		True				
ANR	520307	CFGExitNode	EXIT		520160		True				
ANR	520308	Symbol	* dev		520160						
ANR	520309	Symbol	gx_color_value_to_byte		520160						
ANR	520310	Symbol	dev -> color_info . num_components		520160						
ANR	520311	Symbol	* dev_proc		520160						
ANR	520312	Symbol	* p ++		520160						
ANR	520313	Symbol	gx_default_map_color_rgb		520160						
ANR	520314	Symbol	"* dev_proc ( dev , map_color_rgb )"		520160						
ANR	520315	Symbol	false		520160						
ANR	520316	Symbol	i		520160						
ANR	520317	Symbol	j		520160						
ANR	520318	Symbol	dev -> color_info		520160						
ANR	520319	Symbol	dev -> color_info . depth		520160						
ANR	520320	Symbol	rgb		520160						
ANR	520321	Symbol	colors		520160						
ANR	520322	Symbol	map_color_rgb		520160						
ANR	520323	Symbol	p		520160						
ANR	520324	Symbol	depth		520160						
ANR	520325	Symbol	dev		520160						
ANR	520326	Symbol	* j		520160						
ANR	520327	Symbol	dev_proc		520160						
ANR	520328	Symbol	* rgb		520160						
ANR	520329	Symbol	true		520160						
ANR	520330	Symbol	palette		520160						
ANR	520331	Function	gx_default_get_hardware_params	826:0:36317:36408							
ANR	520332	FunctionDef	"gx_default_get_hardware_params (gx_device * dev , gs_param_list * plist)"		520331	0					
ANR	520333	CompoundStatement		828:0:36392:36408	520331	0					
ANR	520334	ReturnStatement	return 0 ;	829:4:36398:36406	520331	0	True				
ANR	520335	PrimaryExpression	0		520331	0					
ANR	520336	ReturnType	int		520331	1					
ANR	520337	Identifier	gx_default_get_hardware_params		520331	2					
ANR	520338	ParameterList	"gx_device * dev , gs_param_list * plist"		520331	3					
ANR	520339	Parameter	gx_device * dev	827:31:36352:36366	520331	0	True				
ANR	520340	ParameterType	gx_device *		520331	0					
ANR	520341	Identifier	dev		520331	1					
ANR	520342	Parameter	gs_param_list * plist	827:48:36369:36389	520331	1	True				
ANR	520343	ParameterType	gs_param_list *		520331	0					
ANR	520344	Identifier	plist		520331	1					
ANR	520345	CFGEntryNode	ENTRY		520331		True				
ANR	520346	CFGExitNode	EXIT		520331		True				
ANR	520347	Symbol	plist		520331						
ANR	520348	Symbol	dev		520331						
ANR	520349	Function	finish_media	835:0:36520:36812							
ANR	520350	FunctionDef	"finish_media (gs_param_list * mlist , gs_param_name key , const char * media_type)"		520349	0					
ANR	520351	CompoundStatement		837:0:36610:36812	520349	0					
ANR	520352	IdentifierDeclStatement	int code = 0 ;	838:4:36616:36628	520349	0	True				
ANR	520353	IdentifierDecl	code = 0		520349	0					
ANR	520354	IdentifierDeclType	int		520349	0					
ANR	520355	Identifier	code		520349	1					
ANR	520356	AssignmentExpression	code = 0		520349	2		=			
ANR	520357	Identifier	code		520349	0					
ANR	520358	PrimaryExpression	0		520349	1					
ANR	520359	IfStatement	if ( media_type != 0 )		520349	1					
ANR	520360	Condition	media_type != 0	840:8:36639:36653	520349	0	True				
ANR	520361	EqualityExpression	media_type != 0		520349	0		!=			
ANR	520362	Identifier	media_type		520349	0					
ANR	520363	PrimaryExpression	0		520349	1					
ANR	520364	CompoundStatement		5:8:55:73	520349	1					
ANR	520365	IdentifierDeclStatement	gs_param_string as ;	841:8:36666:36684	520349	0	True				
ANR	520366	IdentifierDecl	as		520349	0					
ANR	520367	IdentifierDeclType	gs_param_string		520349	0					
ANR	520368	Identifier	as		520349	1					
ANR	520369	ExpressionStatement	"param_string_from_string ( as , media_type )"	843:8:36695:36735	520349	1	True				
ANR	520370	CallExpression	"param_string_from_string ( as , media_type )"		520349	0					
ANR	520371	Callee	param_string_from_string		520349	0					
ANR	520372	Identifier	param_string_from_string		520349	0					
ANR	520373	ArgumentList	as		520349	1					
ANR	520374	Argument	as		520349	0					
ANR	520375	Identifier	as		520349	0					
ANR	520376	Argument	media_type		520349	1					
ANR	520377	Identifier	media_type		520349	0					
ANR	520378	ExpressionStatement	"code = param_write_string ( mlist , key , & as )"	844:8:36745:36787	520349	2	True				
ANR	520379	AssignmentExpression	"code = param_write_string ( mlist , key , & as )"		520349	0		=			
ANR	520380	Identifier	code		520349	0					
ANR	520381	CallExpression	"param_write_string ( mlist , key , & as )"		520349	1					
ANR	520382	Callee	param_write_string		520349	0					
ANR	520383	Identifier	param_write_string		520349	0					
ANR	520384	ArgumentList	mlist		520349	1					
ANR	520385	Argument	mlist		520349	0					
ANR	520386	Identifier	mlist		520349	0					
ANR	520387	Argument	key		520349	1					
ANR	520388	Identifier	key		520349	0					
ANR	520389	Argument	& as		520349	2					
ANR	520390	UnaryOperationExpression	& as		520349	0					
ANR	520391	UnaryOperator	&		520349	0					
ANR	520392	Identifier	as		520349	1					
ANR	520393	ReturnStatement	return code ;	846:4:36799:36810	520349	2	True				
ANR	520394	Identifier	code		520349	0					
ANR	520395	ReturnType	static int		520349	1					
ANR	520396	Identifier	finish_media		520349	2					
ANR	520397	ParameterList	"gs_param_list * mlist , gs_param_name key , const char * media_type"		520349	3					
ANR	520398	Parameter	gs_param_list * mlist	836:13:36544:36564	520349	0	True				
ANR	520399	ParameterType	gs_param_list *		520349	0					
ANR	520400	Identifier	mlist		520349	1					
ANR	520401	Parameter	gs_param_name key	836:36:36567:36583	520349	1	True				
ANR	520402	ParameterType	gs_param_name		520349	0					
ANR	520403	Identifier	key		520349	1					
ANR	520404	Parameter	const char * media_type	836:55:36586:36607	520349	2	True				
ANR	520405	ParameterType	const char *		520349	0					
ANR	520406	Identifier	media_type		520349	1					
ANR	520407	CFGEntryNode	ENTRY		520349		True				
ANR	520408	CFGExitNode	EXIT		520349		True				
ANR	520409	Symbol	as		520349						
ANR	520410	Symbol	code		520349						
ANR	520411	Symbol	media_type		520349						
ANR	520412	Symbol	mlist		520349						
ANR	520413	Symbol	param_write_string		520349						
ANR	520414	Symbol	& as		520349						
ANR	520415	Symbol	key		520349						
ANR	520416	DeclStmt									
ANR	520417	Decl							const gdev_input_media_t	const gdev_input_media_t	gdev_input_media_default
ANR	520418	Function	gdev_begin_input_media	856:0:36936:37144							
ANR	520419	FunctionDef	"gdev_begin_input_media (gs_param_list * mlist , gs_param_dict * pdict , int count)"		520418	0					
ANR	520420	CompoundStatement		859:0:37043:37144	520418	0					
ANR	520421	ExpressionStatement	pdict -> size = count	860:4:37049:37068	520418	0	True				
ANR	520422	AssignmentExpression	pdict -> size = count		520418	0		=			
ANR	520423	PtrMemberAccess	pdict -> size		520418	0					
ANR	520424	Identifier	pdict		520418	0					
ANR	520425	Identifier	size		520418	1					
ANR	520426	Identifier	count		520418	1					
ANR	520427	ReturnStatement	"return param_begin_write_dict ( mlist , ""InputAttributes"" , pdict , true ) ;"	861:4:37074:37142	520418	1	True				
ANR	520428	CallExpression	"param_begin_write_dict ( mlist , ""InputAttributes"" , pdict , true )"		520418	0					
ANR	520429	Callee	param_begin_write_dict		520418	0					
ANR	520430	Identifier	param_begin_write_dict		520418	0					
ANR	520431	ArgumentList	mlist		520418	1					
ANR	520432	Argument	mlist		520418	0					
ANR	520433	Identifier	mlist		520418	0					
ANR	520434	Argument	"""InputAttributes"""		520418	1					
ANR	520435	PrimaryExpression	"""InputAttributes"""		520418	0					
ANR	520436	Argument	pdict		520418	2					
ANR	520437	Identifier	pdict		520418	0					
ANR	520438	Argument	true		520418	3					
ANR	520439	Identifier	true		520418	0					
ANR	520440	ReturnType	int		520418	1					
ANR	520441	Identifier	gdev_begin_input_media		520418	2					
ANR	520442	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict , int count"		520418	3					
ANR	520443	Parameter	gs_param_list * mlist	857:23:36963:36983	520418	0	True				
ANR	520444	ParameterType	gs_param_list *		520418	0					
ANR	520445	Identifier	mlist		520418	1					
ANR	520446	Parameter	gs_param_dict * pdict	857:46:36986:37006	520418	1	True				
ANR	520447	ParameterType	gs_param_dict *		520418	0					
ANR	520448	Identifier	pdict		520418	1					
ANR	520449	Parameter	int count	858:23:37032:37040	520418	2	True				
ANR	520450	ParameterType	int		520418	0					
ANR	520451	Identifier	count		520418	1					
ANR	520452	CFGEntryNode	ENTRY		520418		True				
ANR	520453	CFGExitNode	EXIT		520418		True				
ANR	520454	Symbol	pdict -> size		520418						
ANR	520455	Symbol	count		520418						
ANR	520456	Symbol	true		520418						
ANR	520457	Symbol	mlist		520418						
ANR	520458	Symbol	* pdict		520418						
ANR	520459	Symbol	pdict		520418						
ANR	520460	Symbol	param_begin_write_dict		520418						
ANR	520461	Function	gdev_write_input_media	864:0:37147:38813							
ANR	520462	FunctionDef	"gdev_write_input_media (int index , gs_param_dict * pdict , const gdev_input_media_t * pim)"		520461	0					
ANR	520463	CompoundStatement		867:0:37263:38813	520461	0					
ANR	520464	IdentifierDeclStatement	char key [ 25 ] ;	868:4:37269:37281	520461	0	True				
ANR	520465	IdentifierDecl	key [ 25 ]		520461	0					
ANR	520466	IdentifierDeclType	char [ 25 ]		520461	0					
ANR	520467	Identifier	key		520461	1					
ANR	520468	PrimaryExpression	25		520461	2					
ANR	520469	IdentifierDeclStatement	gs_param_dict mdict ;	869:4:37287:37306	520461	1	True				
ANR	520470	IdentifierDecl	mdict		520461	0					
ANR	520471	IdentifierDeclType	gs_param_dict		520461	0					
ANR	520472	Identifier	mdict		520461	1					
ANR	520473	IdentifierDeclStatement	int code ;	870:4:37312:37320	520461	2	True				
ANR	520474	IdentifierDecl	code		520461	0					
ANR	520475	IdentifierDeclType	int		520461	0					
ANR	520476	Identifier	code		520461	1					
ANR	520477	IdentifierDeclStatement	gs_param_string as ;	871:4:37326:37344	520461	3	True				
ANR	520478	IdentifierDecl	as		520461	0					
ANR	520479	IdentifierDeclType	gs_param_string		520461	0					
ANR	520480	Identifier	as		520461	1					
ANR	520481	ExpressionStatement	"gs_sprintf ( key , ""%d"" , index )"	873:4:37351:37379	520461	4	True				
ANR	520482	CallExpression	"gs_sprintf ( key , ""%d"" , index )"		520461	0					
ANR	520483	Callee	gs_sprintf		520461	0					
ANR	520484	Identifier	gs_sprintf		520461	0					
ANR	520485	ArgumentList	key		520461	1					
ANR	520486	Argument	key		520461	0					
ANR	520487	Identifier	key		520461	0					
ANR	520488	Argument	"""%d"""		520461	1					
ANR	520489	PrimaryExpression	"""%d"""		520461	0					
ANR	520490	Argument	index		520461	2					
ANR	520491	Identifier	index		520461	0					
ANR	520492	ExpressionStatement	mdict . size = 4	874:4:37385:37399	520461	5	True				
ANR	520493	AssignmentExpression	mdict . size = 4		520461	0		=			
ANR	520494	MemberAccess	mdict . size		520461	0					
ANR	520495	Identifier	mdict		520461	0					
ANR	520496	Identifier	size		520461	1					
ANR	520497	PrimaryExpression	4		520461	1					
ANR	520498	ExpressionStatement	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"	875:4:37405:37467	520461	6	True				
ANR	520499	AssignmentExpression	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"		520461	0		=			
ANR	520500	Identifier	code		520461	0					
ANR	520501	CallExpression	"param_begin_write_dict ( pdict -> list , key , & mdict , false )"		520461	1					
ANR	520502	Callee	param_begin_write_dict		520461	0					
ANR	520503	Identifier	param_begin_write_dict		520461	0					
ANR	520504	ArgumentList	pdict -> list		520461	1					
ANR	520505	Argument	pdict -> list		520461	0					
ANR	520506	PtrMemberAccess	pdict -> list		520461	0					
ANR	520507	Identifier	pdict		520461	0					
ANR	520508	Identifier	list		520461	1					
ANR	520509	Argument	key		520461	1					
ANR	520510	Identifier	key		520461	0					
ANR	520511	Argument	& mdict		520461	2					
ANR	520512	UnaryOperationExpression	& mdict		520461	0					
ANR	520513	UnaryOperator	&		520461	0					
ANR	520514	Identifier	mdict		520461	1					
ANR	520515	Argument	false		520461	3					
ANR	520516	Identifier	false		520461	0					
ANR	520517	IfStatement	if ( code < 0 )		520461	7					
ANR	520518	Condition	code < 0	876:8:37477:37484	520461	0	True				
ANR	520519	RelationalExpression	code < 0		520461	0		<			
ANR	520520	Identifier	code		520461	0					
ANR	520521	PrimaryExpression	0		520461	1					
ANR	520522	ReturnStatement	return code ;	877:8:37495:37506	520461	1	True				
ANR	520523	Identifier	code		520461	0					
ANR	520524	IfStatement	if ( ( pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0 ) || ( pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0 ) )		520461	8					
ANR	520525	Condition	( pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0 ) || ( pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0 )	878:8:37516:37623	520461	0	True				
ANR	520526	OrExpression	( pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0 ) || ( pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0 )		520461	0		||			
ANR	520527	AndExpression	pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0		520461	0		&&			
ANR	520528	EqualityExpression	pim -> PageSize [ 0 ] != 0		520461	0		!=			
ANR	520529	ArrayIndexing	pim -> PageSize [ 0 ]		520461	0					
ANR	520530	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520531	Identifier	pim		520461	0					
ANR	520532	Identifier	PageSize		520461	1					
ANR	520533	PrimaryExpression	0		520461	1					
ANR	520534	PrimaryExpression	0		520461	1					
ANR	520535	EqualityExpression	pim -> PageSize [ 1 ] != 0		520461	1		!=			
ANR	520536	ArrayIndexing	pim -> PageSize [ 1 ]		520461	0					
ANR	520537	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520538	Identifier	pim		520461	0					
ANR	520539	Identifier	PageSize		520461	1					
ANR	520540	PrimaryExpression	1		520461	1					
ANR	520541	PrimaryExpression	0		520461	1					
ANR	520542	AndExpression	pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0		520461	1		&&			
ANR	520543	EqualityExpression	pim -> PageSize [ 2 ] != 0		520461	0		!=			
ANR	520544	ArrayIndexing	pim -> PageSize [ 2 ]		520461	0					
ANR	520545	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520546	Identifier	pim		520461	0					
ANR	520547	Identifier	PageSize		520461	1					
ANR	520548	PrimaryExpression	2		520461	1					
ANR	520549	PrimaryExpression	0		520461	1					
ANR	520550	EqualityExpression	pim -> PageSize [ 3 ] != 0		520461	1		!=			
ANR	520551	ArrayIndexing	pim -> PageSize [ 3 ]		520461	0					
ANR	520552	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520553	Identifier	pim		520461	0					
ANR	520554	Identifier	PageSize		520461	1					
ANR	520555	PrimaryExpression	3		520461	1					
ANR	520556	PrimaryExpression	0		520461	1					
ANR	520557	CompoundStatement		15:8:381:405	520461	1					
ANR	520558	IdentifierDeclStatement	gs_param_float_array psa ;	881:8:37645:37669	520461	0	True				
ANR	520559	IdentifierDecl	psa		520461	0					
ANR	520560	IdentifierDeclType	gs_param_float_array		520461	0					
ANR	520561	Identifier	psa		520461	1					
ANR	520562	ExpressionStatement	psa . data = pim -> PageSize	883:8:37680:37704	520461	1	True				
ANR	520563	AssignmentExpression	psa . data = pim -> PageSize		520461	0		=			
ANR	520564	MemberAccess	psa . data		520461	0					
ANR	520565	Identifier	psa		520461	0					
ANR	520566	Identifier	data		520461	1					
ANR	520567	PtrMemberAccess	pim -> PageSize		520461	1					
ANR	520568	Identifier	pim		520461	0					
ANR	520569	Identifier	PageSize		520461	1					
ANR	520570	ExpressionStatement	psa . size = ( pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ] ? 2 : 4 )	884:8:37714:37836	520461	2	True				
ANR	520571	AssignmentExpression	psa . size = ( pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ] ? 2 : 4 )		520461	0		=			
ANR	520572	MemberAccess	psa . size		520461	0					
ANR	520573	Identifier	psa		520461	0					
ANR	520574	Identifier	size		520461	1					
ANR	520575	ConditionalExpression	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ] ? 2 : 4		520461	1					
ANR	520576	Condition	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ]		520461	0					
ANR	520577	AndExpression	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ]		520461	0		&&			
ANR	520578	EqualityExpression	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ]		520461	0		==			
ANR	520579	ArrayIndexing	pim -> PageSize [ 0 ]		520461	0					
ANR	520580	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520581	Identifier	pim		520461	0					
ANR	520582	Identifier	PageSize		520461	1					
ANR	520583	PrimaryExpression	0		520461	1					
ANR	520584	ArrayIndexing	pim -> PageSize [ 2 ]		520461	1					
ANR	520585	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520586	Identifier	pim		520461	0					
ANR	520587	Identifier	PageSize		520461	1					
ANR	520588	PrimaryExpression	2		520461	1					
ANR	520589	EqualityExpression	pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ]		520461	1		==			
ANR	520590	ArrayIndexing	pim -> PageSize [ 1 ]		520461	0					
ANR	520591	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520592	Identifier	pim		520461	0					
ANR	520593	Identifier	PageSize		520461	1					
ANR	520594	PrimaryExpression	1		520461	1					
ANR	520595	ArrayIndexing	pim -> PageSize [ 3 ]		520461	1					
ANR	520596	PtrMemberAccess	pim -> PageSize		520461	0					
ANR	520597	Identifier	pim		520461	0					
ANR	520598	Identifier	PageSize		520461	1					
ANR	520599	PrimaryExpression	3		520461	1					
ANR	520600	PrimaryExpression	2		520461	1					
ANR	520601	PrimaryExpression	4		520461	2					
ANR	520602	ExpressionStatement	psa . persistent = false	887:8:37846:37868	520461	3	True				
ANR	520603	AssignmentExpression	psa . persistent = false		520461	0		=			
ANR	520604	MemberAccess	psa . persistent		520461	0					
ANR	520605	Identifier	psa		520461	0					
ANR	520606	Identifier	persistent		520461	1					
ANR	520607	Identifier	false		520461	1					
ANR	520608	ExpressionStatement	"code = param_write_float_array ( mdict . list , ""PageSize"" , & psa )"	888:8:37878:37977	520461	4	True				
ANR	520609	AssignmentExpression	"code = param_write_float_array ( mdict . list , ""PageSize"" , & psa )"		520461	0		=			
ANR	520610	Identifier	code		520461	0					
ANR	520611	CallExpression	"param_write_float_array ( mdict . list , ""PageSize"" , & psa )"		520461	1					
ANR	520612	Callee	param_write_float_array		520461	0					
ANR	520613	Identifier	param_write_float_array		520461	0					
ANR	520614	ArgumentList	mdict . list		520461	1					
ANR	520615	Argument	mdict . list		520461	0					
ANR	520616	MemberAccess	mdict . list		520461	0					
ANR	520617	Identifier	mdict		520461	0					
ANR	520618	Identifier	list		520461	1					
ANR	520619	Argument	"""PageSize"""		520461	1					
ANR	520620	PrimaryExpression	"""PageSize"""		520461	0					
ANR	520621	Argument	& psa		520461	2					
ANR	520622	UnaryOperationExpression	& psa		520461	0					
ANR	520623	UnaryOperator	&		520461	0					
ANR	520624	Identifier	psa		520461	1					
ANR	520625	IfStatement	if ( code < 0 )		520461	5					
ANR	520626	Condition	code < 0	890:12:37991:37998	520461	0	True				
ANR	520627	RelationalExpression	code < 0		520461	0		<			
ANR	520628	Identifier	code		520461	0					
ANR	520629	PrimaryExpression	0		520461	1					
ANR	520630	ReturnStatement	return code ;	891:12:38013:38024	520461	1	True				
ANR	520631	Identifier	code		520461	0					
ANR	520632	IfStatement	if ( pim -> MediaColor != 0 )		520461	9					
ANR	520633	Condition	pim -> MediaColor != 0	893:8:38040:38059	520461	0	True				
ANR	520634	EqualityExpression	pim -> MediaColor != 0		520461	0		!=			
ANR	520635	PtrMemberAccess	pim -> MediaColor		520461	0					
ANR	520636	Identifier	pim		520461	0					
ANR	520637	Identifier	MediaColor		520461	1					
ANR	520638	PrimaryExpression	0		520461	1					
ANR	520639	CompoundStatement		27:30:798:798	520461	1					
ANR	520640	ExpressionStatement	"param_string_from_string ( as , pim -> MediaColor )"	894:8:38072:38117	520461	0	True				
ANR	520641	CallExpression	"param_string_from_string ( as , pim -> MediaColor )"		520461	0					
ANR	520642	Callee	param_string_from_string		520461	0					
ANR	520643	Identifier	param_string_from_string		520461	0					
ANR	520644	ArgumentList	as		520461	1					
ANR	520645	Argument	as		520461	0					
ANR	520646	Identifier	as		520461	0					
ANR	520647	Argument	pim -> MediaColor		520461	1					
ANR	520648	PtrMemberAccess	pim -> MediaColor		520461	0					
ANR	520649	Identifier	pim		520461	0					
ANR	520650	Identifier	MediaColor		520461	1					
ANR	520651	ExpressionStatement	"code = param_write_string ( mdict . list , ""MediaColor"" , & as )"	895:8:38127:38217	520461	1	True				
ANR	520652	AssignmentExpression	"code = param_write_string ( mdict . list , ""MediaColor"" , & as )"		520461	0		=			
ANR	520653	Identifier	code		520461	0					
ANR	520654	CallExpression	"param_write_string ( mdict . list , ""MediaColor"" , & as )"		520461	1					
ANR	520655	Callee	param_write_string		520461	0					
ANR	520656	Identifier	param_write_string		520461	0					
ANR	520657	ArgumentList	mdict . list		520461	1					
ANR	520658	Argument	mdict . list		520461	0					
ANR	520659	MemberAccess	mdict . list		520461	0					
ANR	520660	Identifier	mdict		520461	0					
ANR	520661	Identifier	list		520461	1					
ANR	520662	Argument	"""MediaColor"""		520461	1					
ANR	520663	PrimaryExpression	"""MediaColor"""		520461	0					
ANR	520664	Argument	& as		520461	2					
ANR	520665	UnaryOperationExpression	& as		520461	0					
ANR	520666	UnaryOperator	&		520461	0					
ANR	520667	Identifier	as		520461	1					
ANR	520668	IfStatement	if ( code < 0 )		520461	2					
ANR	520669	Condition	code < 0	897:12:38231:38238	520461	0	True				
ANR	520670	RelationalExpression	code < 0		520461	0		<			
ANR	520671	Identifier	code		520461	0					
ANR	520672	PrimaryExpression	0		520461	1					
ANR	520673	ReturnStatement	return code ;	898:12:38253:38264	520461	1	True				
ANR	520674	Identifier	code		520461	0					
ANR	520675	IfStatement	if ( pim -> MediaWeight != 0 )		520461	10					
ANR	520676	Condition	pim -> MediaWeight != 0	900:8:38280:38300	520461	0	True				
ANR	520677	EqualityExpression	pim -> MediaWeight != 0		520461	0		!=			
ANR	520678	PtrMemberAccess	pim -> MediaWeight		520461	0					
ANR	520679	Identifier	pim		520461	0					
ANR	520680	Identifier	MediaWeight		520461	1					
ANR	520681	PrimaryExpression	0		520461	1					
ANR	520682	CompoundStatement		39:8:1195:1226	520461	1					
ANR	520683	IdentifierDeclStatement	float weight = pim -> MediaWeight ;	905:8:38459:38490	520461	0	True				
ANR	520684	IdentifierDecl	weight = pim -> MediaWeight		520461	0					
ANR	520685	IdentifierDeclType	float		520461	0					
ANR	520686	Identifier	weight		520461	1					
ANR	520687	AssignmentExpression	weight = pim -> MediaWeight		520461	2		=			
ANR	520688	Identifier	weight		520461	0					
ANR	520689	PtrMemberAccess	pim -> MediaWeight		520461	1					
ANR	520690	Identifier	pim		520461	0					
ANR	520691	Identifier	MediaWeight		520461	1					
ANR	520692	ExpressionStatement	"code = param_write_float ( mdict . list , ""MediaWeight"" , & weight )"	907:8:38501:38594	520461	1	True				
ANR	520693	AssignmentExpression	"code = param_write_float ( mdict . list , ""MediaWeight"" , & weight )"		520461	0		=			
ANR	520694	Identifier	code		520461	0					
ANR	520695	CallExpression	"param_write_float ( mdict . list , ""MediaWeight"" , & weight )"		520461	1					
ANR	520696	Callee	param_write_float		520461	0					
ANR	520697	Identifier	param_write_float		520461	0					
ANR	520698	ArgumentList	mdict . list		520461	1					
ANR	520699	Argument	mdict . list		520461	0					
ANR	520700	MemberAccess	mdict . list		520461	0					
ANR	520701	Identifier	mdict		520461	0					
ANR	520702	Identifier	list		520461	1					
ANR	520703	Argument	"""MediaWeight"""		520461	1					
ANR	520704	PrimaryExpression	"""MediaWeight"""		520461	0					
ANR	520705	Argument	& weight		520461	2					
ANR	520706	UnaryOperationExpression	& weight		520461	0					
ANR	520707	UnaryOperator	&		520461	0					
ANR	520708	Identifier	weight		520461	1					
ANR	520709	IfStatement	if ( code < 0 )		520461	2					
ANR	520710	Condition	code < 0	909:12:38608:38615	520461	0	True				
ANR	520711	RelationalExpression	code < 0		520461	0		<			
ANR	520712	Identifier	code		520461	0					
ANR	520713	PrimaryExpression	0		520461	1					
ANR	520714	ReturnStatement	return code ;	910:12:38630:38641	520461	1	True				
ANR	520715	Identifier	code		520461	0					
ANR	520716	ExpressionStatement	"code = finish_media ( mdict . list , ""MediaType"" , pim -> MediaType )"	912:4:38653:38713	520461	11	True				
ANR	520717	AssignmentExpression	"code = finish_media ( mdict . list , ""MediaType"" , pim -> MediaType )"		520461	0		=			
ANR	520718	Identifier	code		520461	0					
ANR	520719	CallExpression	"finish_media ( mdict . list , ""MediaType"" , pim -> MediaType )"		520461	1					
ANR	520720	Callee	finish_media		520461	0					
ANR	520721	Identifier	finish_media		520461	0					
ANR	520722	ArgumentList	mdict . list		520461	1					
ANR	520723	Argument	mdict . list		520461	0					
ANR	520724	MemberAccess	mdict . list		520461	0					
ANR	520725	Identifier	mdict		520461	0					
ANR	520726	Identifier	list		520461	1					
ANR	520727	Argument	"""MediaType"""		520461	1					
ANR	520728	PrimaryExpression	"""MediaType"""		520461	0					
ANR	520729	Argument	pim -> MediaType		520461	2					
ANR	520730	PtrMemberAccess	pim -> MediaType		520461	0					
ANR	520731	Identifier	pim		520461	0					
ANR	520732	Identifier	MediaType		520461	1					
ANR	520733	IfStatement	if ( code < 0 )		520461	12					
ANR	520734	Condition	code < 0	913:8:38723:38730	520461	0	True				
ANR	520735	RelationalExpression	code < 0		520461	0		<			
ANR	520736	Identifier	code		520461	0					
ANR	520737	PrimaryExpression	0		520461	1					
ANR	520738	ReturnStatement	return code ;	914:8:38741:38752	520461	1	True				
ANR	520739	Identifier	code		520461	0					
ANR	520740	ReturnStatement	"return param_end_write_dict ( pdict -> list , key , & mdict ) ;"	915:4:38758:38811	520461	13	True				
ANR	520741	CallExpression	"param_end_write_dict ( pdict -> list , key , & mdict )"		520461	0					
ANR	520742	Callee	param_end_write_dict		520461	0					
ANR	520743	Identifier	param_end_write_dict		520461	0					
ANR	520744	ArgumentList	pdict -> list		520461	1					
ANR	520745	Argument	pdict -> list		520461	0					
ANR	520746	PtrMemberAccess	pdict -> list		520461	0					
ANR	520747	Identifier	pdict		520461	0					
ANR	520748	Identifier	list		520461	1					
ANR	520749	Argument	key		520461	1					
ANR	520750	Identifier	key		520461	0					
ANR	520751	Argument	& mdict		520461	2					
ANR	520752	UnaryOperationExpression	& mdict		520461	0					
ANR	520753	UnaryOperator	&		520461	0					
ANR	520754	Identifier	mdict		520461	1					
ANR	520755	ReturnType	int		520461	1					
ANR	520756	Identifier	gdev_write_input_media		520461	2					
ANR	520757	ParameterList	"int index , gs_param_dict * pdict , const gdev_input_media_t * pim"		520461	3					
ANR	520758	Parameter	int index	865:23:37174:37182	520461	0	True				
ANR	520759	ParameterType	int		520461	0					
ANR	520760	Identifier	index		520461	1					
ANR	520761	Parameter	gs_param_dict * pdict	865:34:37185:37205	520461	1	True				
ANR	520762	ParameterType	gs_param_dict *		520461	0					
ANR	520763	Identifier	pdict		520461	1					
ANR	520764	Parameter	const gdev_input_media_t * pim	866:23:37231:37260	520461	2	True				
ANR	520765	ParameterType	const gdev_input_media_t *		520461	0					
ANR	520766	Identifier	pim		520461	1					
ANR	520767	CFGEntryNode	ENTRY		520461		True				
ANR	520768	CFGExitNode	EXIT		520461		True				
ANR	520769	Symbol	pim -> PageSize		520461						
ANR	520770	Symbol	code		520461						
ANR	520771	Symbol	mdict . size		520461						
ANR	520772	Symbol	finish_media		520461						
ANR	520773	Symbol	* pdict		520461						
ANR	520774	Symbol	pim -> MediaType		520461						
ANR	520775	Symbol	mdict		520461						
ANR	520776	Symbol	pim		520461						
ANR	520777	Symbol	pim -> MediaColor		520461						
ANR	520778	Symbol	psa . data		520461						
ANR	520779	Symbol	param_write_string		520461						
ANR	520780	Symbol	key		520461						
ANR	520781	Symbol	& mdict		520461						
ANR	520782	Symbol	param_write_float		520461						
ANR	520783	Symbol	& psa		520461						
ANR	520784	Symbol	psa . size		520461						
ANR	520785	Symbol	false		520461						
ANR	520786	Symbol	* * pim		520461						
ANR	520787	Symbol	index		520461						
ANR	520788	Symbol	weight		520461						
ANR	520789	Symbol	* pim -> PageSize		520461						
ANR	520790	Symbol	as		520461						
ANR	520791	Symbol	psa . persistent		520461						
ANR	520792	Symbol	& weight		520461						
ANR	520793	Symbol	pim -> MediaWeight		520461						
ANR	520794	Symbol	param_end_write_dict		520461						
ANR	520795	Symbol	param_write_float_array		520461						
ANR	520796	Symbol	& as		520461						
ANR	520797	Symbol	pdict -> list		520461						
ANR	520798	Symbol	* pim		520461						
ANR	520799	Symbol	mdict . list		520461						
ANR	520800	Symbol	pdict		520461						
ANR	520801	Symbol	param_begin_write_dict		520461						
ANR	520802	Symbol	psa		520461						
ANR	520803	Function	gdev_write_input_page_size	918:0:38816:39252							
ANR	520804	FunctionDef	"gdev_write_input_page_size (int index , gs_param_dict * pdict , double width_points , double height_points)"		520803	0					
ANR	520805	CompoundStatement		921:0:38951:39252	520803	0					
ANR	520806	IdentifierDeclStatement	gdev_input_media_t media ;	922:4:38957:38981	520803	0	True				
ANR	520807	IdentifierDecl	media		520803	0					
ANR	520808	IdentifierDeclType	gdev_input_media_t		520803	0					
ANR	520809	Identifier	media		520803	1					
ANR	520810	ExpressionStatement	media . PageSize [ 0 ] = media . PageSize [ 2 ] = ( float ) width_points	924:4:38988:39048	520803	1	True				
ANR	520811	AssignmentExpression	media . PageSize [ 0 ] = media . PageSize [ 2 ] = ( float ) width_points		520803	0		=			
ANR	520812	ArrayIndexing	media . PageSize [ 0 ]		520803	0					
ANR	520813	MemberAccess	media . PageSize		520803	0					
ANR	520814	Identifier	media		520803	0					
ANR	520815	Identifier	PageSize		520803	1					
ANR	520816	PrimaryExpression	0		520803	1					
ANR	520817	AssignmentExpression	media . PageSize [ 2 ] = ( float ) width_points		520803	1		=			
ANR	520818	ArrayIndexing	media . PageSize [ 2 ]		520803	0					
ANR	520819	MemberAccess	media . PageSize		520803	0					
ANR	520820	Identifier	media		520803	0					
ANR	520821	Identifier	PageSize		520803	1					
ANR	520822	PrimaryExpression	2		520803	1					
ANR	520823	CastExpression	( float ) width_points		520803	1					
ANR	520824	CastTarget	float		520803	0					
ANR	520825	Identifier	width_points		520803	1					
ANR	520826	ExpressionStatement	media . PageSize [ 1 ] = media . PageSize [ 3 ] = ( float ) height_points	925:4:39054:39115	520803	2	True				
ANR	520827	AssignmentExpression	media . PageSize [ 1 ] = media . PageSize [ 3 ] = ( float ) height_points		520803	0		=			
ANR	520828	ArrayIndexing	media . PageSize [ 1 ]		520803	0					
ANR	520829	MemberAccess	media . PageSize		520803	0					
ANR	520830	Identifier	media		520803	0					
ANR	520831	Identifier	PageSize		520803	1					
ANR	520832	PrimaryExpression	1		520803	1					
ANR	520833	AssignmentExpression	media . PageSize [ 3 ] = ( float ) height_points		520803	1		=			
ANR	520834	ArrayIndexing	media . PageSize [ 3 ]		520803	0					
ANR	520835	MemberAccess	media . PageSize		520803	0					
ANR	520836	Identifier	media		520803	0					
ANR	520837	Identifier	PageSize		520803	1					
ANR	520838	PrimaryExpression	3		520803	1					
ANR	520839	CastExpression	( float ) height_points		520803	1					
ANR	520840	CastTarget	float		520803	0					
ANR	520841	Identifier	height_points		520803	1					
ANR	520842	ExpressionStatement	media . MediaColor = 0	926:4:39121:39141	520803	3	True				
ANR	520843	AssignmentExpression	media . MediaColor = 0		520803	0		=			
ANR	520844	MemberAccess	media . MediaColor		520803	0					
ANR	520845	Identifier	media		520803	0					
ANR	520846	Identifier	MediaColor		520803	1					
ANR	520847	PrimaryExpression	0		520803	1					
ANR	520848	ExpressionStatement	media . MediaWeight = 0	927:4:39147:39168	520803	4	True				
ANR	520849	AssignmentExpression	media . MediaWeight = 0		520803	0		=			
ANR	520850	MemberAccess	media . MediaWeight		520803	0					
ANR	520851	Identifier	media		520803	0					
ANR	520852	Identifier	MediaWeight		520803	1					
ANR	520853	PrimaryExpression	0		520803	1					
ANR	520854	ExpressionStatement	media . MediaType = 0	928:4:39174:39193	520803	5	True				
ANR	520855	AssignmentExpression	media . MediaType = 0		520803	0		=			
ANR	520856	MemberAccess	media . MediaType		520803	0					
ANR	520857	Identifier	media		520803	0					
ANR	520858	Identifier	MediaType		520803	1					
ANR	520859	PrimaryExpression	0		520803	1					
ANR	520860	ReturnStatement	"return gdev_write_input_media ( index , pdict , & media ) ;"	929:4:39199:39250	520803	6	True				
ANR	520861	CallExpression	"gdev_write_input_media ( index , pdict , & media )"		520803	0					
ANR	520862	Callee	gdev_write_input_media		520803	0					
ANR	520863	Identifier	gdev_write_input_media		520803	0					
ANR	520864	ArgumentList	index		520803	1					
ANR	520865	Argument	index		520803	0					
ANR	520866	Identifier	index		520803	0					
ANR	520867	Argument	pdict		520803	1					
ANR	520868	Identifier	pdict		520803	0					
ANR	520869	Argument	& media		520803	2					
ANR	520870	UnaryOperationExpression	& media		520803	0					
ANR	520871	UnaryOperator	&		520803	0					
ANR	520872	Identifier	media		520803	1					
ANR	520873	ReturnType	int		520803	1					
ANR	520874	Identifier	gdev_write_input_page_size		520803	2					
ANR	520875	ParameterList	"int index , gs_param_dict * pdict , double width_points , double height_points"		520803	3					
ANR	520876	Parameter	int index	919:27:38847:38855	520803	0	True				
ANR	520877	ParameterType	int		520803	0					
ANR	520878	Identifier	index		520803	1					
ANR	520879	Parameter	gs_param_dict * pdict	919:38:38858:38878	520803	1	True				
ANR	520880	ParameterType	gs_param_dict *		520803	0					
ANR	520881	Identifier	pdict		520803	1					
ANR	520882	Parameter	double width_points	920:27:38908:38926	520803	2	True				
ANR	520883	ParameterType	double		520803	0					
ANR	520884	Identifier	width_points		520803	1					
ANR	520885	Parameter	double height_points	920:48:38929:38948	520803	3	True				
ANR	520886	ParameterType	double		520803	0					
ANR	520887	Identifier	height_points		520803	1					
ANR	520888	CFGEntryNode	ENTRY		520803		True				
ANR	520889	CFGExitNode	EXIT		520803		True				
ANR	520890	Symbol	media . MediaColor		520803						
ANR	520891	Symbol	media . MediaType		520803						
ANR	520892	Symbol	* media . PageSize		520803						
ANR	520893	Symbol	height_points		520803						
ANR	520894	Symbol	index		520803						
ANR	520895	Symbol	media		520803						
ANR	520896	Symbol	gdev_write_input_media		520803						
ANR	520897	Symbol	width_points		520803						
ANR	520898	Symbol	media . PageSize		520803						
ANR	520899	Symbol	& media		520803						
ANR	520900	Symbol	* media		520803						
ANR	520901	Symbol	pdict		520803						
ANR	520902	Symbol	media . MediaWeight		520803						
ANR	520903	Function	gdev_end_input_media	932:0:39255:39394							
ANR	520904	FunctionDef	"gdev_end_input_media (gs_param_list * mlist , gs_param_dict * pdict)"		520903	0					
ANR	520905	CompoundStatement		934:0:39326:39394	520903	0					
ANR	520906	ReturnStatement	"return param_end_write_dict ( mlist , ""InputAttributes"" , pdict ) ;"	935:4:39332:39392	520903	0	True				
ANR	520907	CallExpression	"param_end_write_dict ( mlist , ""InputAttributes"" , pdict )"		520903	0					
ANR	520908	Callee	param_end_write_dict		520903	0					
ANR	520909	Identifier	param_end_write_dict		520903	0					
ANR	520910	ArgumentList	mlist		520903	1					
ANR	520911	Argument	mlist		520903	0					
ANR	520912	Identifier	mlist		520903	0					
ANR	520913	Argument	"""InputAttributes"""		520903	1					
ANR	520914	PrimaryExpression	"""InputAttributes"""		520903	0					
ANR	520915	Argument	pdict		520903	2					
ANR	520916	Identifier	pdict		520903	0					
ANR	520917	ReturnType	int		520903	1					
ANR	520918	Identifier	gdev_end_input_media		520903	2					
ANR	520919	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict"		520903	3					
ANR	520920	Parameter	gs_param_list * mlist	933:21:39280:39300	520903	0	True				
ANR	520921	ParameterType	gs_param_list *		520903	0					
ANR	520922	Identifier	mlist		520903	1					
ANR	520923	Parameter	gs_param_dict * pdict	933:44:39303:39323	520903	1	True				
ANR	520924	ParameterType	gs_param_dict *		520903	0					
ANR	520925	Identifier	pdict		520903	1					
ANR	520926	CFGEntryNode	ENTRY		520903		True				
ANR	520927	CFGExitNode	EXIT		520903		True				
ANR	520928	Symbol	mlist		520903						
ANR	520929	Symbol	param_end_write_dict		520903						
ANR	520930	Symbol	pdict		520903						
ANR	520931	DeclStmt									
ANR	520932	Decl							const gdev_output_media_t	const gdev_output_media_t	gdev_output_media_default
ANR	520933	Function	gdev_begin_output_media	945:0:39522:39733							
ANR	520934	FunctionDef	"gdev_begin_output_media (gs_param_list * mlist , gs_param_dict * pdict , int count)"		520933	0					
ANR	520935	CompoundStatement		948:0:39631:39733	520933	0					
ANR	520936	ExpressionStatement	pdict -> size = count	949:4:39637:39656	520933	0	True				
ANR	520937	AssignmentExpression	pdict -> size = count		520933	0		=			
ANR	520938	PtrMemberAccess	pdict -> size		520933	0					
ANR	520939	Identifier	pdict		520933	0					
ANR	520940	Identifier	size		520933	1					
ANR	520941	Identifier	count		520933	1					
ANR	520942	ReturnStatement	"return param_begin_write_dict ( mlist , ""OutputAttributes"" , pdict , true ) ;"	950:4:39662:39731	520933	1	True				
ANR	520943	CallExpression	"param_begin_write_dict ( mlist , ""OutputAttributes"" , pdict , true )"		520933	0					
ANR	520944	Callee	param_begin_write_dict		520933	0					
ANR	520945	Identifier	param_begin_write_dict		520933	0					
ANR	520946	ArgumentList	mlist		520933	1					
ANR	520947	Argument	mlist		520933	0					
ANR	520948	Identifier	mlist		520933	0					
ANR	520949	Argument	"""OutputAttributes"""		520933	1					
ANR	520950	PrimaryExpression	"""OutputAttributes"""		520933	0					
ANR	520951	Argument	pdict		520933	2					
ANR	520952	Identifier	pdict		520933	0					
ANR	520953	Argument	true		520933	3					
ANR	520954	Identifier	true		520933	0					
ANR	520955	ReturnType	int		520933	1					
ANR	520956	Identifier	gdev_begin_output_media		520933	2					
ANR	520957	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict , int count"		520933	3					
ANR	520958	Parameter	gs_param_list * mlist	946:24:39550:39570	520933	0	True				
ANR	520959	ParameterType	gs_param_list *		520933	0					
ANR	520960	Identifier	mlist		520933	1					
ANR	520961	Parameter	gs_param_dict * pdict	946:47:39573:39593	520933	1	True				
ANR	520962	ParameterType	gs_param_dict *		520933	0					
ANR	520963	Identifier	pdict		520933	1					
ANR	520964	Parameter	int count	947:24:39620:39628	520933	2	True				
ANR	520965	ParameterType	int		520933	0					
ANR	520966	Identifier	count		520933	1					
ANR	520967	CFGEntryNode	ENTRY		520933		True				
ANR	520968	CFGExitNode	EXIT		520933		True				
ANR	520969	Symbol	pdict -> size		520933						
ANR	520970	Symbol	count		520933						
ANR	520971	Symbol	true		520933						
ANR	520972	Symbol	mlist		520933						
ANR	520973	Symbol	* pdict		520933						
ANR	520974	Symbol	pdict		520933						
ANR	520975	Symbol	param_begin_write_dict		520933						
ANR	520976	Function	gdev_write_output_media	953:0:39736:40242							
ANR	520977	FunctionDef	"gdev_write_output_media (int index , gs_param_dict * pdict , const gdev_output_media_t * pom)"		520976	0					
ANR	520978	CompoundStatement		956:0:39855:40242	520976	0					
ANR	520979	IdentifierDeclStatement	char key [ 25 ] ;	957:4:39861:39873	520976	0	True				
ANR	520980	IdentifierDecl	key [ 25 ]		520976	0					
ANR	520981	IdentifierDeclType	char [ 25 ]		520976	0					
ANR	520982	Identifier	key		520976	1					
ANR	520983	PrimaryExpression	25		520976	2					
ANR	520984	IdentifierDeclStatement	gs_param_dict mdict ;	958:4:39879:39898	520976	1	True				
ANR	520985	IdentifierDecl	mdict		520976	0					
ANR	520986	IdentifierDeclType	gs_param_dict		520976	0					
ANR	520987	Identifier	mdict		520976	1					
ANR	520988	IdentifierDeclStatement	int code ;	959:4:39904:39912	520976	2	True				
ANR	520989	IdentifierDecl	code		520976	0					
ANR	520990	IdentifierDeclType	int		520976	0					
ANR	520991	Identifier	code		520976	1					
ANR	520992	ExpressionStatement	"gs_sprintf ( key , ""%d"" , index )"	961:4:39919:39947	520976	3	True				
ANR	520993	CallExpression	"gs_sprintf ( key , ""%d"" , index )"		520976	0					
ANR	520994	Callee	gs_sprintf		520976	0					
ANR	520995	Identifier	gs_sprintf		520976	0					
ANR	520996	ArgumentList	key		520976	1					
ANR	520997	Argument	key		520976	0					
ANR	520998	Identifier	key		520976	0					
ANR	520999	Argument	"""%d"""		520976	1					
ANR	521000	PrimaryExpression	"""%d"""		520976	0					
ANR	521001	Argument	index		520976	2					
ANR	521002	Identifier	index		520976	0					
ANR	521003	ExpressionStatement	mdict . size = 4	962:4:39953:39967	520976	4	True				
ANR	521004	AssignmentExpression	mdict . size = 4		520976	0		=			
ANR	521005	MemberAccess	mdict . size		520976	0					
ANR	521006	Identifier	mdict		520976	0					
ANR	521007	Identifier	size		520976	1					
ANR	521008	PrimaryExpression	4		520976	1					
ANR	521009	ExpressionStatement	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"	963:4:39973:40035	520976	5	True				
ANR	521010	AssignmentExpression	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"		520976	0		=			
ANR	521011	Identifier	code		520976	0					
ANR	521012	CallExpression	"param_begin_write_dict ( pdict -> list , key , & mdict , false )"		520976	1					
ANR	521013	Callee	param_begin_write_dict		520976	0					
ANR	521014	Identifier	param_begin_write_dict		520976	0					
ANR	521015	ArgumentList	pdict -> list		520976	1					
ANR	521016	Argument	pdict -> list		520976	0					
ANR	521017	PtrMemberAccess	pdict -> list		520976	0					
ANR	521018	Identifier	pdict		520976	0					
ANR	521019	Identifier	list		520976	1					
ANR	521020	Argument	key		520976	1					
ANR	521021	Identifier	key		520976	0					
ANR	521022	Argument	& mdict		520976	2					
ANR	521023	UnaryOperationExpression	& mdict		520976	0					
ANR	521024	UnaryOperator	&		520976	0					
ANR	521025	Identifier	mdict		520976	1					
ANR	521026	Argument	false		520976	3					
ANR	521027	Identifier	false		520976	0					
ANR	521028	IfStatement	if ( code < 0 )		520976	6					
ANR	521029	Condition	code < 0	964:8:40045:40052	520976	0	True				
ANR	521030	RelationalExpression	code < 0		520976	0		<			
ANR	521031	Identifier	code		520976	0					
ANR	521032	PrimaryExpression	0		520976	1					
ANR	521033	ReturnStatement	return code ;	965:8:40063:40074	520976	1	True				
ANR	521034	Identifier	code		520976	0					
ANR	521035	ExpressionStatement	"code = finish_media ( mdict . list , ""OutputType"" , pom -> OutputType )"	966:4:40080:40142	520976	7	True				
ANR	521036	AssignmentExpression	"code = finish_media ( mdict . list , ""OutputType"" , pom -> OutputType )"		520976	0		=			
ANR	521037	Identifier	code		520976	0					
ANR	521038	CallExpression	"finish_media ( mdict . list , ""OutputType"" , pom -> OutputType )"		520976	1					
ANR	521039	Callee	finish_media		520976	0					
ANR	521040	Identifier	finish_media		520976	0					
ANR	521041	ArgumentList	mdict . list		520976	1					
ANR	521042	Argument	mdict . list		520976	0					
ANR	521043	MemberAccess	mdict . list		520976	0					
ANR	521044	Identifier	mdict		520976	0					
ANR	521045	Identifier	list		520976	1					
ANR	521046	Argument	"""OutputType"""		520976	1					
ANR	521047	PrimaryExpression	"""OutputType"""		520976	0					
ANR	521048	Argument	pom -> OutputType		520976	2					
ANR	521049	PtrMemberAccess	pom -> OutputType		520976	0					
ANR	521050	Identifier	pom		520976	0					
ANR	521051	Identifier	OutputType		520976	1					
ANR	521052	IfStatement	if ( code < 0 )		520976	8					
ANR	521053	Condition	code < 0	967:8:40152:40159	520976	0	True				
ANR	521054	RelationalExpression	code < 0		520976	0		<			
ANR	521055	Identifier	code		520976	0					
ANR	521056	PrimaryExpression	0		520976	1					
ANR	521057	ReturnStatement	return code ;	968:8:40170:40181	520976	1	True				
ANR	521058	Identifier	code		520976	0					
ANR	521059	ReturnStatement	"return param_end_write_dict ( pdict -> list , key , & mdict ) ;"	969:4:40187:40240	520976	9	True				
ANR	521060	CallExpression	"param_end_write_dict ( pdict -> list , key , & mdict )"		520976	0					
ANR	521061	Callee	param_end_write_dict		520976	0					
ANR	521062	Identifier	param_end_write_dict		520976	0					
ANR	521063	ArgumentList	pdict -> list		520976	1					
ANR	521064	Argument	pdict -> list		520976	0					
ANR	521065	PtrMemberAccess	pdict -> list		520976	0					
ANR	521066	Identifier	pdict		520976	0					
ANR	521067	Identifier	list		520976	1					
ANR	521068	Argument	key		520976	1					
ANR	521069	Identifier	key		520976	0					
ANR	521070	Argument	& mdict		520976	2					
ANR	521071	UnaryOperationExpression	& mdict		520976	0					
ANR	521072	UnaryOperator	&		520976	0					
ANR	521073	Identifier	mdict		520976	1					
ANR	521074	ReturnType	int		520976	1					
ANR	521075	Identifier	gdev_write_output_media		520976	2					
ANR	521076	ParameterList	"int index , gs_param_dict * pdict , const gdev_output_media_t * pom"		520976	3					
ANR	521077	Parameter	int index	954:24:39764:39772	520976	0	True				
ANR	521078	ParameterType	int		520976	0					
ANR	521079	Identifier	index		520976	1					
ANR	521080	Parameter	gs_param_dict * pdict	954:35:39775:39795	520976	1	True				
ANR	521081	ParameterType	gs_param_dict *		520976	0					
ANR	521082	Identifier	pdict		520976	1					
ANR	521083	Parameter	const gdev_output_media_t * pom	955:24:39822:39852	520976	2	True				
ANR	521084	ParameterType	const gdev_output_media_t *		520976	0					
ANR	521085	Identifier	pom		520976	1					
ANR	521086	CFGEntryNode	ENTRY		520976		True				
ANR	521087	CFGExitNode	EXIT		520976		True				
ANR	521088	Symbol	code		520976						
ANR	521089	Symbol	pom -> OutputType		520976						
ANR	521090	Symbol	mdict . size		520976						
ANR	521091	Symbol	false		520976						
ANR	521092	Symbol	finish_media		520976						
ANR	521093	Symbol	index		520976						
ANR	521094	Symbol	* pdict		520976						
ANR	521095	Symbol	mdict		520976						
ANR	521096	Symbol	pom		520976						
ANR	521097	Symbol	* pom		520976						
ANR	521098	Symbol	param_end_write_dict		520976						
ANR	521099	Symbol	key		520976						
ANR	521100	Symbol	pdict -> list		520976						
ANR	521101	Symbol	mdict . list		520976						
ANR	521102	Symbol	pdict		520976						
ANR	521103	Symbol	param_begin_write_dict		520976						
ANR	521104	Symbol	& mdict		520976						
ANR	521105	Function	gdev_end_output_media	972:0:40245:40386							
ANR	521106	FunctionDef	"gdev_end_output_media (gs_param_list * mlist , gs_param_dict * pdict)"		521105	0					
ANR	521107	CompoundStatement		974:0:40317:40386	521105	0					
ANR	521108	ReturnStatement	"return param_end_write_dict ( mlist , ""OutputAttributes"" , pdict ) ;"	975:4:40323:40384	521105	0	True				
ANR	521109	CallExpression	"param_end_write_dict ( mlist , ""OutputAttributes"" , pdict )"		521105	0					
ANR	521110	Callee	param_end_write_dict		521105	0					
ANR	521111	Identifier	param_end_write_dict		521105	0					
ANR	521112	ArgumentList	mlist		521105	1					
ANR	521113	Argument	mlist		521105	0					
ANR	521114	Identifier	mlist		521105	0					
ANR	521115	Argument	"""OutputAttributes"""		521105	1					
ANR	521116	PrimaryExpression	"""OutputAttributes"""		521105	0					
ANR	521117	Argument	pdict		521105	2					
ANR	521118	Identifier	pdict		521105	0					
ANR	521119	ReturnType	int		521105	1					
ANR	521120	Identifier	gdev_end_output_media		521105	2					
ANR	521121	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict"		521105	3					
ANR	521122	Parameter	gs_param_list * mlist	973:22:40271:40291	521105	0	True				
ANR	521123	ParameterType	gs_param_list *		521105	0					
ANR	521124	Identifier	mlist		521105	1					
ANR	521125	Parameter	gs_param_dict * pdict	973:45:40294:40314	521105	1	True				
ANR	521126	ParameterType	gs_param_dict *		521105	0					
ANR	521127	Identifier	pdict		521105	1					
ANR	521128	CFGEntryNode	ENTRY		521105		True				
ANR	521129	CFGExitNode	EXIT		521105		True				
ANR	521130	Symbol	mlist		521105						
ANR	521131	Symbol	param_end_write_dict		521105						
ANR	521132	Symbol	pdict		521105						
ANR	521133	DeclStmt									
ANR	521134	Decl							int	"int ( uint max_gray , int bits )"	param_normalize_anti_alias_bits
ANR	521135	DeclStmt									
ANR	521136	Decl							int	"int ( gs_param_list * , gs_param_name , int * )"	param_anti_alias_bits
ANR	521137	DeclStmt									
ANR	521138	Decl							int	"int ( gs_param_list * , gs_param_name , const float * , gs_param_float_array * )"	param_MediaSize
ANR	521139	DeclStmt									
ANR	521140	Decl							int	"int ( gs_param_list * , gs_param_name , bool , bool )"	param_check_bool
ANR	521141	DeclStmt									
ANR	521142	Decl							int	"int ( gs_param_list * , gs_param_name , long , bool )"	param_check_long
ANR	521143	DeclStmt									
ANR	521144	Decl							int	"int ( gs_param_list * , gs_param_name , const byte * , uint , bool )"	param_check_bytes
ANR	521145	Function	gs_putdeviceparams	999:0:41472:41865							
ANR	521146	FunctionDef	"gs_putdeviceparams (gx_device * dev , gs_param_list * plist)"		521145	0					
ANR	521147	CompoundStatement		1001:0:41535:41865	521145	0					
ANR	521148	IdentifierDeclStatement	bool was_open = dev -> is_open ;	1002:4:41541:41569	521145	0	True				
ANR	521149	IdentifierDecl	was_open = dev -> is_open		521145	0					
ANR	521150	IdentifierDeclType	bool		521145	0					
ANR	521151	Identifier	was_open		521145	1					
ANR	521152	AssignmentExpression	was_open = dev -> is_open		521145	2		=			
ANR	521153	Identifier	was_open		521145	0					
ANR	521154	PtrMemberAccess	dev -> is_open		521145	1					
ANR	521155	Identifier	dev		521145	0					
ANR	521156	Identifier	is_open		521145	1					
ANR	521157	IdentifierDeclStatement	int code ;	1003:4:41575:41583	521145	1	True				
ANR	521158	IdentifierDecl	code		521145	0					
ANR	521159	IdentifierDeclType	int		521145	0					
ANR	521160	Identifier	code		521145	1					
ANR	521161	ExpressionStatement	gx_device_set_procs ( dev )	1005:4:41590:41614	521145	2	True				
ANR	521162	CallExpression	gx_device_set_procs ( dev )		521145	0					
ANR	521163	Callee	gx_device_set_procs		521145	0					
ANR	521164	Identifier	gx_device_set_procs		521145	0					
ANR	521165	ArgumentList	dev		521145	1					
ANR	521166	Argument	dev		521145	0					
ANR	521167	Identifier	dev		521145	0					
ANR	521168	ExpressionStatement	"fill_dev_proc ( dev , put_params , gx_default_put_params )"	1006:4:41620:41673	521145	3	True				
ANR	521169	CallExpression	"fill_dev_proc ( dev , put_params , gx_default_put_params )"		521145	0					
ANR	521170	Callee	fill_dev_proc		521145	0					
ANR	521171	Identifier	fill_dev_proc		521145	0					
ANR	521172	ArgumentList	dev		521145	1					
ANR	521173	Argument	dev		521145	0					
ANR	521174	Identifier	dev		521145	0					
ANR	521175	Argument	put_params		521145	1					
ANR	521176	Identifier	put_params		521145	0					
ANR	521177	Argument	gx_default_put_params		521145	2					
ANR	521178	Identifier	gx_default_put_params		521145	0					
ANR	521179	ExpressionStatement	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"	1007:4:41679:41740	521145	4	True				
ANR	521180	CallExpression	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"		521145	0					
ANR	521181	Callee	fill_dev_proc		521145	0					
ANR	521182	Identifier	fill_dev_proc		521145	0					
ANR	521183	ArgumentList	dev		521145	1					
ANR	521184	Argument	dev		521145	0					
ANR	521185	Identifier	dev		521145	0					
ANR	521186	Argument	get_alpha_bits		521145	1					
ANR	521187	Identifier	get_alpha_bits		521145	0					
ANR	521188	Argument	gx_default_get_alpha_bits		521145	2					
ANR	521189	Identifier	gx_default_get_alpha_bits		521145	0					
ANR	521190	ExpressionStatement	"code = ( * dev_proc ( dev , put_params ) ) ( dev , plist )"	1008:4:41746:41794	521145	5	True				
ANR	521191	AssignmentExpression	"code = ( * dev_proc ( dev , put_params ) ) ( dev , plist )"		521145	0		=			
ANR	521192	Identifier	code		521145	0					
ANR	521193	CallExpression	"( * dev_proc ( dev , put_params ) ) ( dev , plist )"		521145	1					
ANR	521194	Callee	"* dev_proc ( dev , put_params )"		521145	0					
ANR	521195	UnaryOperationExpression	"* dev_proc ( dev , put_params )"		521145	0					
ANR	521196	UnaryOperator	*		521145	0					
ANR	521197	CallExpression	"dev_proc ( dev , put_params )"		521145	1					
ANR	521198	Callee	dev_proc		521145	0					
ANR	521199	Identifier	dev_proc		521145	0					
ANR	521200	ArgumentList	dev		521145	1					
ANR	521201	Argument	dev		521145	0					
ANR	521202	Identifier	dev		521145	0					
ANR	521203	Argument	put_params		521145	1					
ANR	521204	Identifier	put_params		521145	0					
ANR	521205	ArgumentList	dev		521145	1					
ANR	521206	Argument	dev		521145	0					
ANR	521207	Identifier	dev		521145	0					
ANR	521208	Argument	plist		521145	1					
ANR	521209	Identifier	plist		521145	0					
ANR	521210	ReturnStatement	return ( code < 0 ? code : was_open && ! dev -> is_open ? 1 : code ) ;	1009:4:41800:41863	521145	6	True				
ANR	521211	ConditionalExpression	code < 0 ? code : was_open && ! dev -> is_open ? 1 : code		521145	0					
ANR	521212	Condition	code < 0		521145	0					
ANR	521213	RelationalExpression	code < 0		521145	0		<			
ANR	521214	Identifier	code		521145	0					
ANR	521215	PrimaryExpression	0		521145	1					
ANR	521216	Identifier	code		521145	1					
ANR	521217	ConditionalExpression	was_open && ! dev -> is_open ? 1 : code		521145	2					
ANR	521218	Condition	was_open && ! dev -> is_open		521145	0					
ANR	521219	AndExpression	was_open && ! dev -> is_open		521145	0		&&			
ANR	521220	Identifier	was_open		521145	0					
ANR	521221	UnaryOperationExpression	! dev -> is_open		521145	1					
ANR	521222	UnaryOperator	!		521145	0					
ANR	521223	PtrMemberAccess	dev -> is_open		521145	1					
ANR	521224	Identifier	dev		521145	0					
ANR	521225	Identifier	is_open		521145	1					
ANR	521226	PrimaryExpression	1		521145	1					
ANR	521227	Identifier	code		521145	2					
ANR	521228	ReturnType	int		521145	1					
ANR	521229	Identifier	gs_putdeviceparams		521145	2					
ANR	521230	ParameterList	"gx_device * dev , gs_param_list * plist"		521145	3					
ANR	521231	Parameter	gx_device * dev	1000:19:41495:41509	521145	0	True				
ANR	521232	ParameterType	gx_device *		521145	0					
ANR	521233	Identifier	dev		521145	1					
ANR	521234	Parameter	gs_param_list * plist	1000:36:41512:41532	521145	1	True				
ANR	521235	ParameterType	gs_param_list *		521145	0					
ANR	521236	Identifier	plist		521145	1					
ANR	521237	CFGEntryNode	ENTRY		521145		True				
ANR	521238	CFGExitNode	EXIT		521145		True				
ANR	521239	Symbol	* dev		521145						
ANR	521240	Symbol	code		521145						
ANR	521241	Symbol	* dev_proc		521145						
ANR	521242	Symbol	get_alpha_bits		521145						
ANR	521243	Symbol	plist		521145						
ANR	521244	Symbol	gx_default_put_params		521145						
ANR	521245	Symbol	dev -> is_open		521145						
ANR	521246	Symbol	dev		521145						
ANR	521247	Symbol	was_open		521145						
ANR	521248	Symbol	dev_proc		521145						
ANR	521249	Symbol	gx_default_get_alpha_bits		521145						
ANR	521250	Symbol	put_params		521145						
ANR	521251	Symbol	"* dev_proc ( dev , put_params )"		521145						
ANR	521252	Function	gx_default_put_graydetection	1012:0:41868:43426							
ANR	521253	FunctionDef	"gx_default_put_graydetection (bool graydetection , gx_device * dev)"		521252	0					
ANR	521254	CompoundStatement		1014:0:41945:43426	521252	0					
ANR	521255	IdentifierDeclStatement	int code = 0 ;	1015:4:41951:41963	521252	0	True				
ANR	521256	IdentifierDecl	code = 0		521252	0					
ANR	521257	IdentifierDeclType	int		521252	0					
ANR	521258	Identifier	code		521252	1					
ANR	521259	AssignmentExpression	code = 0		521252	2		=			
ANR	521260	Identifier	code		521252	0					
ANR	521261	PrimaryExpression	0		521252	1					
ANR	521262	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1016:4:41969:42002	521252	1	True				
ANR	521263	IdentifierDecl	* profile_struct		521252	0					
ANR	521264	IdentifierDeclType	cmm_dev_profile_t *		521252	0					
ANR	521265	Identifier	profile_struct		521252	1					
ANR	521266	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		521252	2					
ANR	521267	Condition	"dev_proc ( dev , get_profile ) == NULL"	1022:8:42282:42315	521252	0	True				
ANR	521268	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		521252	0		==			
ANR	521269	CallExpression	"dev_proc ( dev , get_profile )"		521252	0					
ANR	521270	Callee	dev_proc		521252	0					
ANR	521271	Identifier	dev_proc		521252	0					
ANR	521272	ArgumentList	dev		521252	1					
ANR	521273	Argument	dev		521252	0					
ANR	521274	Identifier	dev		521252	0					
ANR	521275	Argument	get_profile		521252	1					
ANR	521276	Identifier	get_profile		521252	0					
ANR	521277	Identifier	NULL		521252	1					
ANR	521278	CompoundStatement		9:44:372:372	521252	1					
ANR	521279	IfStatement	if ( dev -> icc_struct == NULL )		521252	0					
ANR	521280	Condition	dev -> icc_struct == NULL	1029:12:42730:42752	521252	0	True				
ANR	521281	EqualityExpression	dev -> icc_struct == NULL		521252	0		==			
ANR	521282	PtrMemberAccess	dev -> icc_struct		521252	0					
ANR	521283	Identifier	dev		521252	0					
ANR	521284	Identifier	icc_struct		521252	1					
ANR	521285	Identifier	NULL		521252	1					
ANR	521286	CompoundStatement		16:37:809:809	521252	1					
ANR	521287	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1031:12:42823:42884	521252	0	True				
ANR	521288	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521252	0		=			
ANR	521289	PtrMemberAccess	dev -> icc_struct		521252	0					
ANR	521290	Identifier	dev		521252	0					
ANR	521291	Identifier	icc_struct		521252	1					
ANR	521292	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521252	1					
ANR	521293	Callee	gsicc_new_device_profile_array		521252	0					
ANR	521294	Identifier	gsicc_new_device_profile_array		521252	0					
ANR	521295	ArgumentList	dev -> memory		521252	1					
ANR	521296	Argument	dev -> memory		521252	0					
ANR	521297	PtrMemberAccess	dev -> memory		521252	0					
ANR	521298	Identifier	dev		521252	0					
ANR	521299	Identifier	memory		521252	1					
ANR	521300	ExpressionStatement	dev -> icc_struct -> graydetection = graydetection	1033:8:42904:42950	521252	1	True				
ANR	521301	AssignmentExpression	dev -> icc_struct -> graydetection = graydetection		521252	0		=			
ANR	521302	PtrMemberAccess	dev -> icc_struct -> graydetection		521252	0					
ANR	521303	PtrMemberAccess	dev -> icc_struct		521252	0					
ANR	521304	Identifier	dev		521252	0					
ANR	521305	Identifier	icc_struct		521252	1					
ANR	521306	Identifier	graydetection		521252	1					
ANR	521307	Identifier	graydetection		521252	1					
ANR	521308	ExpressionStatement	dev -> icc_struct -> pageneutralcolor = graydetection	1034:8:42960:43009	521252	2	True				
ANR	521309	AssignmentExpression	dev -> icc_struct -> pageneutralcolor = graydetection		521252	0		=			
ANR	521310	PtrMemberAccess	dev -> icc_struct -> pageneutralcolor		521252	0					
ANR	521311	PtrMemberAccess	dev -> icc_struct		521252	0					
ANR	521312	Identifier	dev		521252	0					
ANR	521313	Identifier	icc_struct		521252	1					
ANR	521314	Identifier	pageneutralcolor		521252	1					
ANR	521315	Identifier	graydetection		521252	1					
ANR	521316	ElseStatement	else		521252	0					
ANR	521317	CompoundStatement		22:11:1076:1076	521252	0					
ANR	521318	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1036:8:43032:43088	521252	0	True				
ANR	521319	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521252	0		=			
ANR	521320	Identifier	code		521252	0					
ANR	521321	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521252	1					
ANR	521322	Callee	"dev_proc ( dev , get_profile )"		521252	0					
ANR	521323	CallExpression	"dev_proc ( dev , get_profile )"		521252	0					
ANR	521324	Callee	dev_proc		521252	0					
ANR	521325	Identifier	dev_proc		521252	0					
ANR	521326	ArgumentList	dev		521252	1					
ANR	521327	Argument	dev		521252	0					
ANR	521328	Identifier	dev		521252	0					
ANR	521329	Argument	get_profile		521252	1					
ANR	521330	Identifier	get_profile		521252	0					
ANR	521331	ArgumentList	dev		521252	1					
ANR	521332	Argument	dev		521252	0					
ANR	521333	Identifier	dev		521252	0					
ANR	521334	Argument	& profile_struct		521252	1					
ANR	521335	UnaryOperationExpression	& profile_struct		521252	0					
ANR	521336	UnaryOperator	&		521252	0					
ANR	521337	Identifier	profile_struct		521252	1					
ANR	521338	IfStatement	if ( profile_struct == NULL )		521252	1					
ANR	521339	Condition	profile_struct == NULL	1037:12:43102:43123	521252	0	True				
ANR	521340	EqualityExpression	profile_struct == NULL		521252	0		==			
ANR	521341	Identifier	profile_struct		521252	0					
ANR	521342	Identifier	NULL		521252	1					
ANR	521343	CompoundStatement		24:36:1180:1180	521252	1					
ANR	521344	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1039:12:43170:43231	521252	0	True				
ANR	521345	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521252	0		=			
ANR	521346	PtrMemberAccess	dev -> icc_struct		521252	0					
ANR	521347	Identifier	dev		521252	0					
ANR	521348	Identifier	icc_struct		521252	1					
ANR	521349	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521252	1					
ANR	521350	Callee	gsicc_new_device_profile_array		521252	0					
ANR	521351	Identifier	gsicc_new_device_profile_array		521252	0					
ANR	521352	ArgumentList	dev -> memory		521252	1					
ANR	521353	Argument	dev -> memory		521252	0					
ANR	521354	PtrMemberAccess	dev -> memory		521252	0					
ANR	521355	Identifier	dev		521252	0					
ANR	521356	Identifier	memory		521252	1					
ANR	521357	ExpressionStatement	profile_struct = dev -> icc_struct	1040:12:43245:43278	521252	1	True				
ANR	521358	AssignmentExpression	profile_struct = dev -> icc_struct		521252	0		=			
ANR	521359	Identifier	profile_struct		521252	0					
ANR	521360	PtrMemberAccess	dev -> icc_struct		521252	1					
ANR	521361	Identifier	dev		521252	0					
ANR	521362	Identifier	icc_struct		521252	1					
ANR	521363	ExpressionStatement	profile_struct -> graydetection = graydetection	1042:8:43298:43343	521252	2	True				
ANR	521364	AssignmentExpression	profile_struct -> graydetection = graydetection		521252	0		=			
ANR	521365	PtrMemberAccess	profile_struct -> graydetection		521252	0					
ANR	521366	Identifier	profile_struct		521252	0					
ANR	521367	Identifier	graydetection		521252	1					
ANR	521368	Identifier	graydetection		521252	1					
ANR	521369	ExpressionStatement	profile_struct -> pageneutralcolor = graydetection	1043:8:43353:43401	521252	3	True				
ANR	521370	AssignmentExpression	profile_struct -> pageneutralcolor = graydetection		521252	0		=			
ANR	521371	PtrMemberAccess	profile_struct -> pageneutralcolor		521252	0					
ANR	521372	Identifier	profile_struct		521252	0					
ANR	521373	Identifier	pageneutralcolor		521252	1					
ANR	521374	Identifier	graydetection		521252	1					
ANR	521375	ReturnStatement	return code ;	1045:4:43413:43424	521252	3	True				
ANR	521376	Identifier	code		521252	0					
ANR	521377	ReturnType	static int		521252	1					
ANR	521378	Identifier	gx_default_put_graydetection		521252	2					
ANR	521379	ParameterList	"bool graydetection , gx_device * dev"		521252	3					
ANR	521380	Parameter	bool graydetection	1013:29:41908:41925	521252	0	True				
ANR	521381	ParameterType	bool		521252	0					
ANR	521382	Identifier	graydetection		521252	1					
ANR	521383	Parameter	gx_device * dev	1013:49:41928:41942	521252	1	True				
ANR	521384	ParameterType	gx_device *		521252	0					
ANR	521385	Identifier	dev		521252	1					
ANR	521386	CFGEntryNode	ENTRY		521252		True				
ANR	521387	CFGExitNode	EXIT		521252		True				
ANR	521388	Symbol	* dev		521252						
ANR	521389	Symbol	dev -> icc_struct -> graydetection		521252						
ANR	521390	Symbol	code		521252						
ANR	521391	Symbol	NULL		521252						
ANR	521392	Symbol	gsicc_new_device_profile_array		521252						
ANR	521393	Symbol	* * dev		521252						
ANR	521394	Symbol	profile_struct		521252						
ANR	521395	Symbol	profile_struct -> graydetection		521252						
ANR	521396	Symbol	& profile_struct		521252						
ANR	521397	Symbol	profile_struct -> pageneutralcolor		521252						
ANR	521398	Symbol	* dev -> icc_struct		521252						
ANR	521399	Symbol	dev -> memory		521252						
ANR	521400	Symbol	dev		521252						
ANR	521401	Symbol	dev_proc		521252						
ANR	521402	Symbol	dev -> icc_struct		521252						
ANR	521403	Symbol	graydetection		521252						
ANR	521404	Symbol	* profile_struct		521252						
ANR	521405	Symbol	get_profile		521252						
ANR	521406	Symbol	dev -> icc_struct -> pageneutralcolor		521252						
ANR	521407	Function	gx_default_put_graytok	1048:0:43429:45023							
ANR	521408	FunctionDef	"gx_default_put_graytok (bool graytok , gx_device * dev)"		521407	0					
ANR	521409	CompoundStatement		1050:0:43494:45023	521407	0					
ANR	521410	IdentifierDeclStatement	int code = 0 ;	1051:4:43500:43512	521407	0	True				
ANR	521411	IdentifierDecl	code = 0		521407	0					
ANR	521412	IdentifierDeclType	int		521407	0					
ANR	521413	Identifier	code		521407	1					
ANR	521414	AssignmentExpression	code = 0		521407	2		=			
ANR	521415	Identifier	code		521407	0					
ANR	521416	PrimaryExpression	0		521407	1					
ANR	521417	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1052:4:43518:43551	521407	1	True				
ANR	521418	IdentifierDecl	* profile_struct		521407	0					
ANR	521419	IdentifierDeclType	cmm_dev_profile_t *		521407	0					
ANR	521420	Identifier	profile_struct		521407	1					
ANR	521421	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		521407	2					
ANR	521422	Condition	"dev_proc ( dev , get_profile ) == NULL"	1058:8:43831:43864	521407	0	True				
ANR	521423	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		521407	0		==			
ANR	521424	CallExpression	"dev_proc ( dev , get_profile )"		521407	0					
ANR	521425	Callee	dev_proc		521407	0					
ANR	521426	Identifier	dev_proc		521407	0					
ANR	521427	ArgumentList	dev		521407	1					
ANR	521428	Argument	dev		521407	0					
ANR	521429	Identifier	dev		521407	0					
ANR	521430	Argument	get_profile		521407	1					
ANR	521431	Identifier	get_profile		521407	0					
ANR	521432	Identifier	NULL		521407	1					
ANR	521433	CompoundStatement		9:44:372:372	521407	1					
ANR	521434	IfStatement	if ( dev -> icc_struct == NULL )		521407	0					
ANR	521435	Condition	dev -> icc_struct == NULL	1065:12:44279:44301	521407	0	True				
ANR	521436	EqualityExpression	dev -> icc_struct == NULL		521407	0		==			
ANR	521437	PtrMemberAccess	dev -> icc_struct		521407	0					
ANR	521438	Identifier	dev		521407	0					
ANR	521439	Identifier	icc_struct		521407	1					
ANR	521440	Identifier	NULL		521407	1					
ANR	521441	CompoundStatement		16:37:809:809	521407	1					
ANR	521442	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1067:12:44372:44433	521407	0	True				
ANR	521443	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521407	0		=			
ANR	521444	PtrMemberAccess	dev -> icc_struct		521407	0					
ANR	521445	Identifier	dev		521407	0					
ANR	521446	Identifier	icc_struct		521407	1					
ANR	521447	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521407	1					
ANR	521448	Callee	gsicc_new_device_profile_array		521407	0					
ANR	521449	Identifier	gsicc_new_device_profile_array		521407	0					
ANR	521450	ArgumentList	dev -> memory		521407	1					
ANR	521451	Argument	dev -> memory		521407	0					
ANR	521452	PtrMemberAccess	dev -> memory		521407	0					
ANR	521453	Identifier	dev		521407	0					
ANR	521454	Identifier	memory		521407	1					
ANR	521455	IfStatement	if ( dev -> icc_struct == NULL )		521407	1					
ANR	521456	Condition	dev -> icc_struct == NULL	1068:16:44451:44473	521407	0	True				
ANR	521457	EqualityExpression	dev -> icc_struct == NULL		521407	0		==			
ANR	521458	PtrMemberAccess	dev -> icc_struct		521407	0					
ANR	521459	Identifier	dev		521407	0					
ANR	521460	Identifier	icc_struct		521407	1					
ANR	521461	Identifier	NULL		521407	1					
ANR	521462	ExpressionStatement	return_error ( gs_error_VMerror )	1069:16:44492:44522	521407	1	True				
ANR	521463	CallExpression	return_error ( gs_error_VMerror )		521407	0					
ANR	521464	Callee	return_error		521407	0					
ANR	521465	Identifier	return_error		521407	0					
ANR	521466	ArgumentList	gs_error_VMerror		521407	1					
ANR	521467	Argument	gs_error_VMerror		521407	0					
ANR	521468	Identifier	gs_error_VMerror		521407	0					
ANR	521469	ExpressionStatement	dev -> icc_struct -> devicegraytok = graytok	1071:8:44542:44582	521407	1	True				
ANR	521470	AssignmentExpression	dev -> icc_struct -> devicegraytok = graytok		521407	0		=			
ANR	521471	PtrMemberAccess	dev -> icc_struct -> devicegraytok		521407	0					
ANR	521472	PtrMemberAccess	dev -> icc_struct		521407	0					
ANR	521473	Identifier	dev		521407	0					
ANR	521474	Identifier	icc_struct		521407	1					
ANR	521475	Identifier	devicegraytok		521407	1					
ANR	521476	Identifier	graytok		521407	1					
ANR	521477	ElseStatement	else		521407	0					
ANR	521478	CompoundStatement		23:11:1100:1100	521407	0					
ANR	521479	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1073:8:44605:44661	521407	0	True				
ANR	521480	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521407	0		=			
ANR	521481	Identifier	code		521407	0					
ANR	521482	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521407	1					
ANR	521483	Callee	"dev_proc ( dev , get_profile )"		521407	0					
ANR	521484	CallExpression	"dev_proc ( dev , get_profile )"		521407	0					
ANR	521485	Callee	dev_proc		521407	0					
ANR	521486	Identifier	dev_proc		521407	0					
ANR	521487	ArgumentList	dev		521407	1					
ANR	521488	Argument	dev		521407	0					
ANR	521489	Identifier	dev		521407	0					
ANR	521490	Argument	get_profile		521407	1					
ANR	521491	Identifier	get_profile		521407	0					
ANR	521492	ArgumentList	dev		521407	1					
ANR	521493	Argument	dev		521407	0					
ANR	521494	Identifier	dev		521407	0					
ANR	521495	Argument	& profile_struct		521407	1					
ANR	521496	UnaryOperationExpression	& profile_struct		521407	0					
ANR	521497	UnaryOperator	&		521407	0					
ANR	521498	Identifier	profile_struct		521407	1					
ANR	521499	IfStatement	if ( profile_struct == NULL )		521407	1					
ANR	521500	Condition	profile_struct == NULL	1074:12:44675:44696	521407	0	True				
ANR	521501	EqualityExpression	profile_struct == NULL		521407	0		==			
ANR	521502	Identifier	profile_struct		521407	0					
ANR	521503	Identifier	NULL		521407	1					
ANR	521504	CompoundStatement		25:36:1204:1204	521407	1					
ANR	521505	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1076:12:44743:44804	521407	0	True				
ANR	521506	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521407	0		=			
ANR	521507	PtrMemberAccess	dev -> icc_struct		521407	0					
ANR	521508	Identifier	dev		521407	0					
ANR	521509	Identifier	icc_struct		521407	1					
ANR	521510	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521407	1					
ANR	521511	Callee	gsicc_new_device_profile_array		521407	0					
ANR	521512	Identifier	gsicc_new_device_profile_array		521407	0					
ANR	521513	ArgumentList	dev -> memory		521407	1					
ANR	521514	Argument	dev -> memory		521407	0					
ANR	521515	PtrMemberAccess	dev -> memory		521407	0					
ANR	521516	Identifier	dev		521407	0					
ANR	521517	Identifier	memory		521407	1					
ANR	521518	ExpressionStatement	profile_struct = dev -> icc_struct	1077:12:44818:44851	521407	1	True				
ANR	521519	AssignmentExpression	profile_struct = dev -> icc_struct		521407	0		=			
ANR	521520	Identifier	profile_struct		521407	0					
ANR	521521	PtrMemberAccess	dev -> icc_struct		521407	1					
ANR	521522	Identifier	dev		521407	0					
ANR	521523	Identifier	icc_struct		521407	1					
ANR	521524	IfStatement	if ( profile_struct == NULL )		521407	2					
ANR	521525	Condition	profile_struct == NULL	1078:16:44869:44890	521407	0	True				
ANR	521526	EqualityExpression	profile_struct == NULL		521407	0		==			
ANR	521527	Identifier	profile_struct		521407	0					
ANR	521528	Identifier	NULL		521407	1					
ANR	521529	ExpressionStatement	return_error ( gs_error_VMerror )	1079:16:44909:44939	521407	1	True				
ANR	521530	CallExpression	return_error ( gs_error_VMerror )		521407	0					
ANR	521531	Callee	return_error		521407	0					
ANR	521532	Identifier	return_error		521407	0					
ANR	521533	ArgumentList	gs_error_VMerror		521407	1					
ANR	521534	Argument	gs_error_VMerror		521407	0					
ANR	521535	Identifier	gs_error_VMerror		521407	0					
ANR	521536	ExpressionStatement	profile_struct -> devicegraytok = graytok	1081:8:44959:44998	521407	2	True				
ANR	521537	AssignmentExpression	profile_struct -> devicegraytok = graytok		521407	0		=			
ANR	521538	PtrMemberAccess	profile_struct -> devicegraytok		521407	0					
ANR	521539	Identifier	profile_struct		521407	0					
ANR	521540	Identifier	devicegraytok		521407	1					
ANR	521541	Identifier	graytok		521407	1					
ANR	521542	ReturnStatement	return code ;	1083:4:45010:45021	521407	3	True				
ANR	521543	Identifier	code		521407	0					
ANR	521544	ReturnType	static int		521407	1					
ANR	521545	Identifier	gx_default_put_graytok		521407	2					
ANR	521546	ParameterList	"bool graytok , gx_device * dev"		521407	3					
ANR	521547	Parameter	bool graytok	1049:23:43463:43474	521407	0	True				
ANR	521548	ParameterType	bool		521407	0					
ANR	521549	Identifier	graytok		521407	1					
ANR	521550	Parameter	gx_device * dev	1049:37:43477:43491	521407	1	True				
ANR	521551	ParameterType	gx_device *		521407	0					
ANR	521552	Identifier	dev		521407	1					
ANR	521553	CFGEntryNode	ENTRY		521407		True				
ANR	521554	CFGExitNode	EXIT		521407		True				
ANR	521555	Symbol	* dev		521407						
ANR	521556	Symbol	code		521407						
ANR	521557	Symbol	NULL		521407						
ANR	521558	Symbol	gsicc_new_device_profile_array		521407						
ANR	521559	Symbol	* * dev		521407						
ANR	521560	Symbol	profile_struct		521407						
ANR	521561	Symbol	& profile_struct		521407						
ANR	521562	Symbol	gs_error_VMerror		521407						
ANR	521563	Symbol	* dev -> icc_struct		521407						
ANR	521564	Symbol	dev -> memory		521407						
ANR	521565	Symbol	graytok		521407						
ANR	521566	Symbol	dev		521407						
ANR	521567	Symbol	dev_proc		521407						
ANR	521568	Symbol	dev -> icc_struct		521407						
ANR	521569	Symbol	dev -> icc_struct -> devicegraytok		521407						
ANR	521570	Symbol	* profile_struct		521407						
ANR	521571	Symbol	profile_struct -> devicegraytok		521407						
ANR	521572	Symbol	get_profile		521407						
ANR	521573	Function	gx_default_put_prebandthreshold	1086:0:45026:46662							
ANR	521574	FunctionDef	"gx_default_put_prebandthreshold (bool prebandthreshold , gx_device * dev)"		521573	0					
ANR	521575	CompoundStatement		1088:0:45109:46662	521573	0					
ANR	521576	IdentifierDeclStatement	int code = 0 ;	1089:4:45115:45127	521573	0	True				
ANR	521577	IdentifierDecl	code = 0		521573	0					
ANR	521578	IdentifierDeclType	int		521573	0					
ANR	521579	Identifier	code		521573	1					
ANR	521580	AssignmentExpression	code = 0		521573	2		=			
ANR	521581	Identifier	code		521573	0					
ANR	521582	PrimaryExpression	0		521573	1					
ANR	521583	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1090:4:45133:45166	521573	1	True				
ANR	521584	IdentifierDecl	* profile_struct		521573	0					
ANR	521585	IdentifierDeclType	cmm_dev_profile_t *		521573	0					
ANR	521586	Identifier	profile_struct		521573	1					
ANR	521587	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		521573	2					
ANR	521588	Condition	"dev_proc ( dev , get_profile ) == NULL"	1096:8:45446:45479	521573	0	True				
ANR	521589	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		521573	0		==			
ANR	521590	CallExpression	"dev_proc ( dev , get_profile )"		521573	0					
ANR	521591	Callee	dev_proc		521573	0					
ANR	521592	Identifier	dev_proc		521573	0					
ANR	521593	ArgumentList	dev		521573	1					
ANR	521594	Argument	dev		521573	0					
ANR	521595	Identifier	dev		521573	0					
ANR	521596	Argument	get_profile		521573	1					
ANR	521597	Identifier	get_profile		521573	0					
ANR	521598	Identifier	NULL		521573	1					
ANR	521599	CompoundStatement		9:44:372:372	521573	1					
ANR	521600	IfStatement	if ( dev -> icc_struct == NULL )		521573	0					
ANR	521601	Condition	dev -> icc_struct == NULL	1103:12:45894:45916	521573	0	True				
ANR	521602	EqualityExpression	dev -> icc_struct == NULL		521573	0		==			
ANR	521603	PtrMemberAccess	dev -> icc_struct		521573	0					
ANR	521604	Identifier	dev		521573	0					
ANR	521605	Identifier	icc_struct		521573	1					
ANR	521606	Identifier	NULL		521573	1					
ANR	521607	CompoundStatement		16:37:809:809	521573	1					
ANR	521608	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1105:12:45987:46048	521573	0	True				
ANR	521609	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521573	0		=			
ANR	521610	PtrMemberAccess	dev -> icc_struct		521573	0					
ANR	521611	Identifier	dev		521573	0					
ANR	521612	Identifier	icc_struct		521573	1					
ANR	521613	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521573	1					
ANR	521614	Callee	gsicc_new_device_profile_array		521573	0					
ANR	521615	Identifier	gsicc_new_device_profile_array		521573	0					
ANR	521616	ArgumentList	dev -> memory		521573	1					
ANR	521617	Argument	dev -> memory		521573	0					
ANR	521618	PtrMemberAccess	dev -> memory		521573	0					
ANR	521619	Identifier	dev		521573	0					
ANR	521620	Identifier	memory		521573	1					
ANR	521621	IfStatement	if ( dev -> icc_struct == NULL )		521573	1					
ANR	521622	Condition	dev -> icc_struct == NULL	1106:16:46066:46088	521573	0	True				
ANR	521623	EqualityExpression	dev -> icc_struct == NULL		521573	0		==			
ANR	521624	PtrMemberAccess	dev -> icc_struct		521573	0					
ANR	521625	Identifier	dev		521573	0					
ANR	521626	Identifier	icc_struct		521573	1					
ANR	521627	Identifier	NULL		521573	1					
ANR	521628	ExpressionStatement	return_error ( gs_error_VMerror )	1107:16:46107:46137	521573	1	True				
ANR	521629	CallExpression	return_error ( gs_error_VMerror )		521573	0					
ANR	521630	Callee	return_error		521573	0					
ANR	521631	Identifier	return_error		521573	0					
ANR	521632	ArgumentList	gs_error_VMerror		521573	1					
ANR	521633	Argument	gs_error_VMerror		521573	0					
ANR	521634	Identifier	gs_error_VMerror		521573	0					
ANR	521635	ExpressionStatement	dev -> icc_struct -> prebandthreshold = prebandthreshold	1109:8:46157:46209	521573	1	True				
ANR	521636	AssignmentExpression	dev -> icc_struct -> prebandthreshold = prebandthreshold		521573	0		=			
ANR	521637	PtrMemberAccess	dev -> icc_struct -> prebandthreshold		521573	0					
ANR	521638	PtrMemberAccess	dev -> icc_struct		521573	0					
ANR	521639	Identifier	dev		521573	0					
ANR	521640	Identifier	icc_struct		521573	1					
ANR	521641	Identifier	prebandthreshold		521573	1					
ANR	521642	Identifier	prebandthreshold		521573	1					
ANR	521643	ElseStatement	else		521573	0					
ANR	521644	CompoundStatement		23:11:1112:1112	521573	0					
ANR	521645	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1111:8:46232:46288	521573	0	True				
ANR	521646	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521573	0		=			
ANR	521647	Identifier	code		521573	0					
ANR	521648	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521573	1					
ANR	521649	Callee	"dev_proc ( dev , get_profile )"		521573	0					
ANR	521650	CallExpression	"dev_proc ( dev , get_profile )"		521573	0					
ANR	521651	Callee	dev_proc		521573	0					
ANR	521652	Identifier	dev_proc		521573	0					
ANR	521653	ArgumentList	dev		521573	1					
ANR	521654	Argument	dev		521573	0					
ANR	521655	Identifier	dev		521573	0					
ANR	521656	Argument	get_profile		521573	1					
ANR	521657	Identifier	get_profile		521573	0					
ANR	521658	ArgumentList	dev		521573	1					
ANR	521659	Argument	dev		521573	0					
ANR	521660	Identifier	dev		521573	0					
ANR	521661	Argument	& profile_struct		521573	1					
ANR	521662	UnaryOperationExpression	& profile_struct		521573	0					
ANR	521663	UnaryOperator	&		521573	0					
ANR	521664	Identifier	profile_struct		521573	1					
ANR	521665	IfStatement	if ( profile_struct == NULL )		521573	1					
ANR	521666	Condition	profile_struct == NULL	1112:12:46302:46323	521573	0	True				
ANR	521667	EqualityExpression	profile_struct == NULL		521573	0		==			
ANR	521668	Identifier	profile_struct		521573	0					
ANR	521669	Identifier	NULL		521573	1					
ANR	521670	CompoundStatement		25:36:1216:1216	521573	1					
ANR	521671	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1114:12:46370:46431	521573	0	True				
ANR	521672	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521573	0		=			
ANR	521673	PtrMemberAccess	dev -> icc_struct		521573	0					
ANR	521674	Identifier	dev		521573	0					
ANR	521675	Identifier	icc_struct		521573	1					
ANR	521676	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521573	1					
ANR	521677	Callee	gsicc_new_device_profile_array		521573	0					
ANR	521678	Identifier	gsicc_new_device_profile_array		521573	0					
ANR	521679	ArgumentList	dev -> memory		521573	1					
ANR	521680	Argument	dev -> memory		521573	0					
ANR	521681	PtrMemberAccess	dev -> memory		521573	0					
ANR	521682	Identifier	dev		521573	0					
ANR	521683	Identifier	memory		521573	1					
ANR	521684	ExpressionStatement	profile_struct = dev -> icc_struct	1115:12:46445:46478	521573	1	True				
ANR	521685	AssignmentExpression	profile_struct = dev -> icc_struct		521573	0		=			
ANR	521686	Identifier	profile_struct		521573	0					
ANR	521687	PtrMemberAccess	dev -> icc_struct		521573	1					
ANR	521688	Identifier	dev		521573	0					
ANR	521689	Identifier	icc_struct		521573	1					
ANR	521690	IfStatement	if ( profile_struct == NULL )		521573	2					
ANR	521691	Condition	profile_struct == NULL	1116:16:46496:46517	521573	0	True				
ANR	521692	EqualityExpression	profile_struct == NULL		521573	0		==			
ANR	521693	Identifier	profile_struct		521573	0					
ANR	521694	Identifier	NULL		521573	1					
ANR	521695	ExpressionStatement	return_error ( gs_error_VMerror )	1117:16:46536:46566	521573	1	True				
ANR	521696	CallExpression	return_error ( gs_error_VMerror )		521573	0					
ANR	521697	Callee	return_error		521573	0					
ANR	521698	Identifier	return_error		521573	0					
ANR	521699	ArgumentList	gs_error_VMerror		521573	1					
ANR	521700	Argument	gs_error_VMerror		521573	0					
ANR	521701	Identifier	gs_error_VMerror		521573	0					
ANR	521702	ExpressionStatement	profile_struct -> prebandthreshold = prebandthreshold	1119:8:46586:46637	521573	2	True				
ANR	521703	AssignmentExpression	profile_struct -> prebandthreshold = prebandthreshold		521573	0		=			
ANR	521704	PtrMemberAccess	profile_struct -> prebandthreshold		521573	0					
ANR	521705	Identifier	profile_struct		521573	0					
ANR	521706	Identifier	prebandthreshold		521573	1					
ANR	521707	Identifier	prebandthreshold		521573	1					
ANR	521708	ReturnStatement	return code ;	1121:4:46649:46660	521573	3	True				
ANR	521709	Identifier	code		521573	0					
ANR	521710	ReturnType	static int		521573	1					
ANR	521711	Identifier	gx_default_put_prebandthreshold		521573	2					
ANR	521712	ParameterList	"bool prebandthreshold , gx_device * dev"		521573	3					
ANR	521713	Parameter	bool prebandthreshold	1087:32:45069:45089	521573	0	True				
ANR	521714	ParameterType	bool		521573	0					
ANR	521715	Identifier	prebandthreshold		521573	1					
ANR	521716	Parameter	gx_device * dev	1087:55:45092:45106	521573	1	True				
ANR	521717	ParameterType	gx_device *		521573	0					
ANR	521718	Identifier	dev		521573	1					
ANR	521719	CFGEntryNode	ENTRY		521573		True				
ANR	521720	CFGExitNode	EXIT		521573		True				
ANR	521721	Symbol	* dev		521573						
ANR	521722	Symbol	code		521573						
ANR	521723	Symbol	NULL		521573						
ANR	521724	Symbol	dev -> icc_struct -> prebandthreshold		521573						
ANR	521725	Symbol	gsicc_new_device_profile_array		521573						
ANR	521726	Symbol	prebandthreshold		521573						
ANR	521727	Symbol	* * dev		521573						
ANR	521728	Symbol	profile_struct		521573						
ANR	521729	Symbol	& profile_struct		521573						
ANR	521730	Symbol	gs_error_VMerror		521573						
ANR	521731	Symbol	* dev -> icc_struct		521573						
ANR	521732	Symbol	dev -> memory		521573						
ANR	521733	Symbol	dev		521573						
ANR	521734	Symbol	dev_proc		521573						
ANR	521735	Symbol	dev -> icc_struct		521573						
ANR	521736	Symbol	profile_struct -> prebandthreshold		521573						
ANR	521737	Symbol	* profile_struct		521573						
ANR	521738	Symbol	get_profile		521573						
ANR	521739	Function	gx_default_put_usefastcolor	1124:0:46665:48268							
ANR	521740	FunctionDef	"gx_default_put_usefastcolor (bool fastcolor , gx_device * dev)"		521739	0					
ANR	521741	CompoundStatement		1126:0:46737:48268	521739	0					
ANR	521742	IdentifierDeclStatement	int code = 0 ;	1127:4:46743:46755	521739	0	True				
ANR	521743	IdentifierDecl	code = 0		521739	0					
ANR	521744	IdentifierDeclType	int		521739	0					
ANR	521745	Identifier	code		521739	1					
ANR	521746	AssignmentExpression	code = 0		521739	2		=			
ANR	521747	Identifier	code		521739	0					
ANR	521748	PrimaryExpression	0		521739	1					
ANR	521749	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1128:4:46761:46794	521739	1	True				
ANR	521750	IdentifierDecl	* profile_struct		521739	0					
ANR	521751	IdentifierDeclType	cmm_dev_profile_t *		521739	0					
ANR	521752	Identifier	profile_struct		521739	1					
ANR	521753	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		521739	2					
ANR	521754	Condition	"dev_proc ( dev , get_profile ) == NULL"	1134:8:47074:47107	521739	0	True				
ANR	521755	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		521739	0		==			
ANR	521756	CallExpression	"dev_proc ( dev , get_profile )"		521739	0					
ANR	521757	Callee	dev_proc		521739	0					
ANR	521758	Identifier	dev_proc		521739	0					
ANR	521759	ArgumentList	dev		521739	1					
ANR	521760	Argument	dev		521739	0					
ANR	521761	Identifier	dev		521739	0					
ANR	521762	Argument	get_profile		521739	1					
ANR	521763	Identifier	get_profile		521739	0					
ANR	521764	Identifier	NULL		521739	1					
ANR	521765	CompoundStatement		9:44:372:372	521739	1					
ANR	521766	IfStatement	if ( dev -> icc_struct == NULL )		521739	0					
ANR	521767	Condition	dev -> icc_struct == NULL	1141:12:47522:47544	521739	0	True				
ANR	521768	EqualityExpression	dev -> icc_struct == NULL		521739	0		==			
ANR	521769	PtrMemberAccess	dev -> icc_struct		521739	0					
ANR	521770	Identifier	dev		521739	0					
ANR	521771	Identifier	icc_struct		521739	1					
ANR	521772	Identifier	NULL		521739	1					
ANR	521773	CompoundStatement		16:37:809:809	521739	1					
ANR	521774	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1143:12:47615:47676	521739	0	True				
ANR	521775	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521739	0		=			
ANR	521776	PtrMemberAccess	dev -> icc_struct		521739	0					
ANR	521777	Identifier	dev		521739	0					
ANR	521778	Identifier	icc_struct		521739	1					
ANR	521779	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521739	1					
ANR	521780	Callee	gsicc_new_device_profile_array		521739	0					
ANR	521781	Identifier	gsicc_new_device_profile_array		521739	0					
ANR	521782	ArgumentList	dev -> memory		521739	1					
ANR	521783	Argument	dev -> memory		521739	0					
ANR	521784	PtrMemberAccess	dev -> memory		521739	0					
ANR	521785	Identifier	dev		521739	0					
ANR	521786	Identifier	memory		521739	1					
ANR	521787	IfStatement	if ( dev -> icc_struct == NULL )		521739	1					
ANR	521788	Condition	dev -> icc_struct == NULL	1144:16:47694:47716	521739	0	True				
ANR	521789	EqualityExpression	dev -> icc_struct == NULL		521739	0		==			
ANR	521790	PtrMemberAccess	dev -> icc_struct		521739	0					
ANR	521791	Identifier	dev		521739	0					
ANR	521792	Identifier	icc_struct		521739	1					
ANR	521793	Identifier	NULL		521739	1					
ANR	521794	ExpressionStatement	return_error ( gs_error_VMerror )	1145:16:47735:47765	521739	1	True				
ANR	521795	CallExpression	return_error ( gs_error_VMerror )		521739	0					
ANR	521796	Callee	return_error		521739	0					
ANR	521797	Identifier	return_error		521739	0					
ANR	521798	ArgumentList	gs_error_VMerror		521739	1					
ANR	521799	Argument	gs_error_VMerror		521739	0					
ANR	521800	Identifier	gs_error_VMerror		521739	0					
ANR	521801	ExpressionStatement	dev -> icc_struct -> usefastcolor = fastcolor	1147:8:47785:47826	521739	1	True				
ANR	521802	AssignmentExpression	dev -> icc_struct -> usefastcolor = fastcolor		521739	0		=			
ANR	521803	PtrMemberAccess	dev -> icc_struct -> usefastcolor		521739	0					
ANR	521804	PtrMemberAccess	dev -> icc_struct		521739	0					
ANR	521805	Identifier	dev		521739	0					
ANR	521806	Identifier	icc_struct		521739	1					
ANR	521807	Identifier	usefastcolor		521739	1					
ANR	521808	Identifier	fastcolor		521739	1					
ANR	521809	ElseStatement	else		521739	0					
ANR	521810	CompoundStatement		23:11:1101:1101	521739	0					
ANR	521811	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1149:8:47849:47905	521739	0	True				
ANR	521812	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521739	0		=			
ANR	521813	Identifier	code		521739	0					
ANR	521814	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521739	1					
ANR	521815	Callee	"dev_proc ( dev , get_profile )"		521739	0					
ANR	521816	CallExpression	"dev_proc ( dev , get_profile )"		521739	0					
ANR	521817	Callee	dev_proc		521739	0					
ANR	521818	Identifier	dev_proc		521739	0					
ANR	521819	ArgumentList	dev		521739	1					
ANR	521820	Argument	dev		521739	0					
ANR	521821	Identifier	dev		521739	0					
ANR	521822	Argument	get_profile		521739	1					
ANR	521823	Identifier	get_profile		521739	0					
ANR	521824	ArgumentList	dev		521739	1					
ANR	521825	Argument	dev		521739	0					
ANR	521826	Identifier	dev		521739	0					
ANR	521827	Argument	& profile_struct		521739	1					
ANR	521828	UnaryOperationExpression	& profile_struct		521739	0					
ANR	521829	UnaryOperator	&		521739	0					
ANR	521830	Identifier	profile_struct		521739	1					
ANR	521831	IfStatement	if ( profile_struct == NULL )		521739	1					
ANR	521832	Condition	profile_struct == NULL	1150:12:47919:47940	521739	0	True				
ANR	521833	EqualityExpression	profile_struct == NULL		521739	0		==			
ANR	521834	Identifier	profile_struct		521739	0					
ANR	521835	Identifier	NULL		521739	1					
ANR	521836	CompoundStatement		25:36:1205:1205	521739	1					
ANR	521837	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1152:12:47987:48048	521739	0	True				
ANR	521838	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521739	0		=			
ANR	521839	PtrMemberAccess	dev -> icc_struct		521739	0					
ANR	521840	Identifier	dev		521739	0					
ANR	521841	Identifier	icc_struct		521739	1					
ANR	521842	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521739	1					
ANR	521843	Callee	gsicc_new_device_profile_array		521739	0					
ANR	521844	Identifier	gsicc_new_device_profile_array		521739	0					
ANR	521845	ArgumentList	dev -> memory		521739	1					
ANR	521846	Argument	dev -> memory		521739	0					
ANR	521847	PtrMemberAccess	dev -> memory		521739	0					
ANR	521848	Identifier	dev		521739	0					
ANR	521849	Identifier	memory		521739	1					
ANR	521850	ExpressionStatement	profile_struct = dev -> icc_struct	1153:12:48062:48095	521739	1	True				
ANR	521851	AssignmentExpression	profile_struct = dev -> icc_struct		521739	0		=			
ANR	521852	Identifier	profile_struct		521739	0					
ANR	521853	PtrMemberAccess	dev -> icc_struct		521739	1					
ANR	521854	Identifier	dev		521739	0					
ANR	521855	Identifier	icc_struct		521739	1					
ANR	521856	IfStatement	if ( profile_struct == NULL )		521739	2					
ANR	521857	Condition	profile_struct == NULL	1154:16:48113:48134	521739	0	True				
ANR	521858	EqualityExpression	profile_struct == NULL		521739	0		==			
ANR	521859	Identifier	profile_struct		521739	0					
ANR	521860	Identifier	NULL		521739	1					
ANR	521861	ExpressionStatement	return_error ( gs_error_VMerror )	1155:16:48153:48183	521739	1	True				
ANR	521862	CallExpression	return_error ( gs_error_VMerror )		521739	0					
ANR	521863	Callee	return_error		521739	0					
ANR	521864	Identifier	return_error		521739	0					
ANR	521865	ArgumentList	gs_error_VMerror		521739	1					
ANR	521866	Argument	gs_error_VMerror		521739	0					
ANR	521867	Identifier	gs_error_VMerror		521739	0					
ANR	521868	ExpressionStatement	profile_struct -> usefastcolor = fastcolor	1157:8:48203:48243	521739	2	True				
ANR	521869	AssignmentExpression	profile_struct -> usefastcolor = fastcolor		521739	0		=			
ANR	521870	PtrMemberAccess	profile_struct -> usefastcolor		521739	0					
ANR	521871	Identifier	profile_struct		521739	0					
ANR	521872	Identifier	usefastcolor		521739	1					
ANR	521873	Identifier	fastcolor		521739	1					
ANR	521874	ReturnStatement	return code ;	1159:4:48255:48266	521739	3	True				
ANR	521875	Identifier	code		521739	0					
ANR	521876	ReturnType	static int		521739	1					
ANR	521877	Identifier	gx_default_put_usefastcolor		521739	2					
ANR	521878	ParameterList	"bool fastcolor , gx_device * dev"		521739	3					
ANR	521879	Parameter	bool fastcolor	1125:28:46704:46717	521739	0	True				
ANR	521880	ParameterType	bool		521739	0					
ANR	521881	Identifier	fastcolor		521739	1					
ANR	521882	Parameter	gx_device * dev	1125:44:46720:46734	521739	1	True				
ANR	521883	ParameterType	gx_device *		521739	0					
ANR	521884	Identifier	dev		521739	1					
ANR	521885	CFGEntryNode	ENTRY		521739		True				
ANR	521886	CFGExitNode	EXIT		521739		True				
ANR	521887	Symbol	* dev		521739						
ANR	521888	Symbol	code		521739						
ANR	521889	Symbol	NULL		521739						
ANR	521890	Symbol	gsicc_new_device_profile_array		521739						
ANR	521891	Symbol	* * dev		521739						
ANR	521892	Symbol	profile_struct -> usefastcolor		521739						
ANR	521893	Symbol	profile_struct		521739						
ANR	521894	Symbol	& profile_struct		521739						
ANR	521895	Symbol	gs_error_VMerror		521739						
ANR	521896	Symbol	* dev -> icc_struct		521739						
ANR	521897	Symbol	dev -> memory		521739						
ANR	521898	Symbol	dev -> icc_struct -> usefastcolor		521739						
ANR	521899	Symbol	dev		521739						
ANR	521900	Symbol	dev_proc		521739						
ANR	521901	Symbol	dev -> icc_struct		521739						
ANR	521902	Symbol	fastcolor		521739						
ANR	521903	Symbol	* profile_struct		521739						
ANR	521904	Symbol	get_profile		521739						
ANR	521905	Function	gx_default_put_simulateoverprint	1162:0:48271:49893							
ANR	521906	FunctionDef	"gx_default_put_simulateoverprint (bool sim_overprint , gx_device * dev)"		521905	0					
ANR	521907	CompoundStatement		1164:0:48352:49893	521905	0					
ANR	521908	IdentifierDeclStatement	int code = 0 ;	1165:4:48358:48370	521905	0	True				
ANR	521909	IdentifierDecl	code = 0		521905	0					
ANR	521910	IdentifierDeclType	int		521905	0					
ANR	521911	Identifier	code		521905	1					
ANR	521912	AssignmentExpression	code = 0		521905	2		=			
ANR	521913	Identifier	code		521905	0					
ANR	521914	PrimaryExpression	0		521905	1					
ANR	521915	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1166:4:48376:48409	521905	1	True				
ANR	521916	IdentifierDecl	* profile_struct		521905	0					
ANR	521917	IdentifierDeclType	cmm_dev_profile_t *		521905	0					
ANR	521918	Identifier	profile_struct		521905	1					
ANR	521919	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		521905	2					
ANR	521920	Condition	"dev_proc ( dev , get_profile ) == NULL"	1172:8:48689:48722	521905	0	True				
ANR	521921	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		521905	0		==			
ANR	521922	CallExpression	"dev_proc ( dev , get_profile )"		521905	0					
ANR	521923	Callee	dev_proc		521905	0					
ANR	521924	Identifier	dev_proc		521905	0					
ANR	521925	ArgumentList	dev		521905	1					
ANR	521926	Argument	dev		521905	0					
ANR	521927	Identifier	dev		521905	0					
ANR	521928	Argument	get_profile		521905	1					
ANR	521929	Identifier	get_profile		521905	0					
ANR	521930	Identifier	NULL		521905	1					
ANR	521931	CompoundStatement		9:44:372:372	521905	1					
ANR	521932	IfStatement	if ( dev -> icc_struct == NULL )		521905	0					
ANR	521933	Condition	dev -> icc_struct == NULL	1179:12:49137:49159	521905	0	True				
ANR	521934	EqualityExpression	dev -> icc_struct == NULL		521905	0		==			
ANR	521935	PtrMemberAccess	dev -> icc_struct		521905	0					
ANR	521936	Identifier	dev		521905	0					
ANR	521937	Identifier	icc_struct		521905	1					
ANR	521938	Identifier	NULL		521905	1					
ANR	521939	CompoundStatement		16:37:809:809	521905	1					
ANR	521940	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1181:12:49230:49291	521905	0	True				
ANR	521941	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521905	0		=			
ANR	521942	PtrMemberAccess	dev -> icc_struct		521905	0					
ANR	521943	Identifier	dev		521905	0					
ANR	521944	Identifier	icc_struct		521905	1					
ANR	521945	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521905	1					
ANR	521946	Callee	gsicc_new_device_profile_array		521905	0					
ANR	521947	Identifier	gsicc_new_device_profile_array		521905	0					
ANR	521948	ArgumentList	dev -> memory		521905	1					
ANR	521949	Argument	dev -> memory		521905	0					
ANR	521950	PtrMemberAccess	dev -> memory		521905	0					
ANR	521951	Identifier	dev		521905	0					
ANR	521952	Identifier	memory		521905	1					
ANR	521953	IfStatement	if ( dev -> icc_struct == NULL )		521905	1					
ANR	521954	Condition	dev -> icc_struct == NULL	1182:16:49309:49331	521905	0	True				
ANR	521955	EqualityExpression	dev -> icc_struct == NULL		521905	0		==			
ANR	521956	PtrMemberAccess	dev -> icc_struct		521905	0					
ANR	521957	Identifier	dev		521905	0					
ANR	521958	Identifier	icc_struct		521905	1					
ANR	521959	Identifier	NULL		521905	1					
ANR	521960	ExpressionStatement	return_error ( gs_error_VMerror )	1183:16:49350:49380	521905	1	True				
ANR	521961	CallExpression	return_error ( gs_error_VMerror )		521905	0					
ANR	521962	Callee	return_error		521905	0					
ANR	521963	Identifier	return_error		521905	0					
ANR	521964	ArgumentList	gs_error_VMerror		521905	1					
ANR	521965	Argument	gs_error_VMerror		521905	0					
ANR	521966	Identifier	gs_error_VMerror		521905	0					
ANR	521967	ExpressionStatement	dev -> icc_struct -> sim_overprint = sim_overprint	1185:8:49400:49446	521905	1	True				
ANR	521968	AssignmentExpression	dev -> icc_struct -> sim_overprint = sim_overprint		521905	0		=			
ANR	521969	PtrMemberAccess	dev -> icc_struct -> sim_overprint		521905	0					
ANR	521970	PtrMemberAccess	dev -> icc_struct		521905	0					
ANR	521971	Identifier	dev		521905	0					
ANR	521972	Identifier	icc_struct		521905	1					
ANR	521973	Identifier	sim_overprint		521905	1					
ANR	521974	Identifier	sim_overprint		521905	1					
ANR	521975	ElseStatement	else		521905	0					
ANR	521976	CompoundStatement		23:11:1106:1106	521905	0					
ANR	521977	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1187:8:49469:49525	521905	0	True				
ANR	521978	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521905	0		=			
ANR	521979	Identifier	code		521905	0					
ANR	521980	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		521905	1					
ANR	521981	Callee	"dev_proc ( dev , get_profile )"		521905	0					
ANR	521982	CallExpression	"dev_proc ( dev , get_profile )"		521905	0					
ANR	521983	Callee	dev_proc		521905	0					
ANR	521984	Identifier	dev_proc		521905	0					
ANR	521985	ArgumentList	dev		521905	1					
ANR	521986	Argument	dev		521905	0					
ANR	521987	Identifier	dev		521905	0					
ANR	521988	Argument	get_profile		521905	1					
ANR	521989	Identifier	get_profile		521905	0					
ANR	521990	ArgumentList	dev		521905	1					
ANR	521991	Argument	dev		521905	0					
ANR	521992	Identifier	dev		521905	0					
ANR	521993	Argument	& profile_struct		521905	1					
ANR	521994	UnaryOperationExpression	& profile_struct		521905	0					
ANR	521995	UnaryOperator	&		521905	0					
ANR	521996	Identifier	profile_struct		521905	1					
ANR	521997	IfStatement	if ( profile_struct == NULL )		521905	1					
ANR	521998	Condition	profile_struct == NULL	1188:12:49539:49560	521905	0	True				
ANR	521999	EqualityExpression	profile_struct == NULL		521905	0		==			
ANR	522000	Identifier	profile_struct		521905	0					
ANR	522001	Identifier	NULL		521905	1					
ANR	522002	CompoundStatement		25:36:1210:1210	521905	1					
ANR	522003	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1190:12:49607:49668	521905	0	True				
ANR	522004	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		521905	0		=			
ANR	522005	PtrMemberAccess	dev -> icc_struct		521905	0					
ANR	522006	Identifier	dev		521905	0					
ANR	522007	Identifier	icc_struct		521905	1					
ANR	522008	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		521905	1					
ANR	522009	Callee	gsicc_new_device_profile_array		521905	0					
ANR	522010	Identifier	gsicc_new_device_profile_array		521905	0					
ANR	522011	ArgumentList	dev -> memory		521905	1					
ANR	522012	Argument	dev -> memory		521905	0					
ANR	522013	PtrMemberAccess	dev -> memory		521905	0					
ANR	522014	Identifier	dev		521905	0					
ANR	522015	Identifier	memory		521905	1					
ANR	522016	ExpressionStatement	profile_struct = dev -> icc_struct	1191:12:49682:49715	521905	1	True				
ANR	522017	AssignmentExpression	profile_struct = dev -> icc_struct		521905	0		=			
ANR	522018	Identifier	profile_struct		521905	0					
ANR	522019	PtrMemberAccess	dev -> icc_struct		521905	1					
ANR	522020	Identifier	dev		521905	0					
ANR	522021	Identifier	icc_struct		521905	1					
ANR	522022	IfStatement	if ( profile_struct == NULL )		521905	2					
ANR	522023	Condition	profile_struct == NULL	1192:16:49733:49754	521905	0	True				
ANR	522024	EqualityExpression	profile_struct == NULL		521905	0		==			
ANR	522025	Identifier	profile_struct		521905	0					
ANR	522026	Identifier	NULL		521905	1					
ANR	522027	ExpressionStatement	return_error ( gs_error_VMerror )	1193:16:49773:49803	521905	1	True				
ANR	522028	CallExpression	return_error ( gs_error_VMerror )		521905	0					
ANR	522029	Callee	return_error		521905	0					
ANR	522030	Identifier	return_error		521905	0					
ANR	522031	ArgumentList	gs_error_VMerror		521905	1					
ANR	522032	Argument	gs_error_VMerror		521905	0					
ANR	522033	Identifier	gs_error_VMerror		521905	0					
ANR	522034	ExpressionStatement	profile_struct -> sim_overprint = sim_overprint	1195:8:49823:49868	521905	2	True				
ANR	522035	AssignmentExpression	profile_struct -> sim_overprint = sim_overprint		521905	0		=			
ANR	522036	PtrMemberAccess	profile_struct -> sim_overprint		521905	0					
ANR	522037	Identifier	profile_struct		521905	0					
ANR	522038	Identifier	sim_overprint		521905	1					
ANR	522039	Identifier	sim_overprint		521905	1					
ANR	522040	ReturnStatement	return code ;	1197:4:49880:49891	521905	3	True				
ANR	522041	Identifier	code		521905	0					
ANR	522042	ReturnType	static int		521905	1					
ANR	522043	Identifier	gx_default_put_simulateoverprint		521905	2					
ANR	522044	ParameterList	"bool sim_overprint , gx_device * dev"		521905	3					
ANR	522045	Parameter	bool sim_overprint	1163:33:48315:48332	521905	0	True				
ANR	522046	ParameterType	bool		521905	0					
ANR	522047	Identifier	sim_overprint		521905	1					
ANR	522048	Parameter	gx_device * dev	1163:53:48335:48349	521905	1	True				
ANR	522049	ParameterType	gx_device *		521905	0					
ANR	522050	Identifier	dev		521905	1					
ANR	522051	CFGEntryNode	ENTRY		521905		True				
ANR	522052	CFGExitNode	EXIT		521905		True				
ANR	522053	Symbol	* dev		521905						
ANR	522054	Symbol	code		521905						
ANR	522055	Symbol	NULL		521905						
ANR	522056	Symbol	gsicc_new_device_profile_array		521905						
ANR	522057	Symbol	dev -> icc_struct -> sim_overprint		521905						
ANR	522058	Symbol	* * dev		521905						
ANR	522059	Symbol	profile_struct		521905						
ANR	522060	Symbol	profile_struct -> sim_overprint		521905						
ANR	522061	Symbol	& profile_struct		521905						
ANR	522062	Symbol	gs_error_VMerror		521905						
ANR	522063	Symbol	* dev -> icc_struct		521905						
ANR	522064	Symbol	dev -> memory		521905						
ANR	522065	Symbol	dev		521905						
ANR	522066	Symbol	dev_proc		521905						
ANR	522067	Symbol	dev -> icc_struct		521905						
ANR	522068	Symbol	* profile_struct		521905						
ANR	522069	Symbol	get_profile		521905						
ANR	522070	Symbol	sim_overprint		521905						
ANR	522071	Function	gx_default_put_intent	1200:0:49896:51477							
ANR	522072	FunctionDef	"gx_default_put_intent (gsicc_rendering_intents_t icc_intent , gx_device * dev , gsicc_profile_types_t index)"		522071	0					
ANR	522073	CompoundStatement		1203:0:50032:51477	522071	0					
ANR	522074	IdentifierDeclStatement	int code ;	1204:4:50038:50046	522071	0	True				
ANR	522075	IdentifierDecl	code		522071	0					
ANR	522076	IdentifierDeclType	int		522071	0					
ANR	522077	Identifier	code		522071	1					
ANR	522078	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1205:4:50052:50085	522071	1	True				
ANR	522079	IdentifierDecl	* profile_struct		522071	0					
ANR	522080	IdentifierDeclType	cmm_dev_profile_t *		522071	0					
ANR	522081	Identifier	profile_struct		522071	1					
ANR	522082	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		522071	2					
ANR	522083	Condition	"dev_proc ( dev , get_profile ) == NULL"	1211:8:50365:50398	522071	0	True				
ANR	522084	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		522071	0		==			
ANR	522085	CallExpression	"dev_proc ( dev , get_profile )"		522071	0					
ANR	522086	Callee	dev_proc		522071	0					
ANR	522087	Identifier	dev_proc		522071	0					
ANR	522088	ArgumentList	dev		522071	1					
ANR	522089	Argument	dev		522071	0					
ANR	522090	Identifier	dev		522071	0					
ANR	522091	Argument	get_profile		522071	1					
ANR	522092	Identifier	get_profile		522071	0					
ANR	522093	Identifier	NULL		522071	1					
ANR	522094	CompoundStatement		9:44:368:368	522071	1					
ANR	522095	IfStatement	if ( dev -> icc_struct == NULL )		522071	0					
ANR	522096	Condition	dev -> icc_struct == NULL	1216:12:50656:50678	522071	0	True				
ANR	522097	EqualityExpression	dev -> icc_struct == NULL		522071	0		==			
ANR	522098	PtrMemberAccess	dev -> icc_struct		522071	0					
ANR	522099	Identifier	dev		522071	0					
ANR	522100	Identifier	icc_struct		522071	1					
ANR	522101	Identifier	NULL		522071	1					
ANR	522102	CompoundStatement		14:37:648:648	522071	1					
ANR	522103	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1218:12:50780:50841	522071	0	True				
ANR	522104	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		522071	0		=			
ANR	522105	PtrMemberAccess	dev -> icc_struct		522071	0					
ANR	522106	Identifier	dev		522071	0					
ANR	522107	Identifier	icc_struct		522071	1					
ANR	522108	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		522071	1					
ANR	522109	Callee	gsicc_new_device_profile_array		522071	0					
ANR	522110	Identifier	gsicc_new_device_profile_array		522071	0					
ANR	522111	ArgumentList	dev -> memory		522071	1					
ANR	522112	Argument	dev -> memory		522071	0					
ANR	522113	PtrMemberAccess	dev -> memory		522071	0					
ANR	522114	Identifier	dev		522071	0					
ANR	522115	Identifier	memory		522071	1					
ANR	522116	IfStatement	if ( dev -> icc_struct == NULL )		522071	1					
ANR	522117	Condition	dev -> icc_struct == NULL	1219:16:50859:50881	522071	0	True				
ANR	522118	EqualityExpression	dev -> icc_struct == NULL		522071	0		==			
ANR	522119	PtrMemberAccess	dev -> icc_struct		522071	0					
ANR	522120	Identifier	dev		522071	0					
ANR	522121	Identifier	icc_struct		522071	1					
ANR	522122	Identifier	NULL		522071	1					
ANR	522123	ExpressionStatement	return_error ( gs_error_VMerror )	1220:16:50900:50930	522071	1	True				
ANR	522124	CallExpression	return_error ( gs_error_VMerror )		522071	0					
ANR	522125	Callee	return_error		522071	0					
ANR	522126	Identifier	return_error		522071	0					
ANR	522127	ArgumentList	gs_error_VMerror		522071	1					
ANR	522128	Argument	gs_error_VMerror		522071	0					
ANR	522129	Identifier	gs_error_VMerror		522071	0					
ANR	522130	ExpressionStatement	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"	1222:8:50950:51012	522071	1	True				
ANR	522131	AssignmentExpression	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"		522071	0		=			
ANR	522132	Identifier	code		522071	0					
ANR	522133	CallExpression	"gsicc_set_device_profile_intent ( dev , icc_intent , index )"		522071	1					
ANR	522134	Callee	gsicc_set_device_profile_intent		522071	0					
ANR	522135	Identifier	gsicc_set_device_profile_intent		522071	0					
ANR	522136	ArgumentList	dev		522071	1					
ANR	522137	Argument	dev		522071	0					
ANR	522138	Identifier	dev		522071	0					
ANR	522139	Argument	icc_intent		522071	1					
ANR	522140	Identifier	icc_intent		522071	0					
ANR	522141	Argument	index		522071	2					
ANR	522142	Identifier	index		522071	0					
ANR	522143	ElseStatement	else		522071	0					
ANR	522144	CompoundStatement		21:11:992:992	522071	0					
ANR	522145	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1224:8:51035:51091	522071	0	True				
ANR	522146	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		522071	0		=			
ANR	522147	Identifier	code		522071	0					
ANR	522148	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		522071	1					
ANR	522149	Callee	"dev_proc ( dev , get_profile )"		522071	0					
ANR	522150	CallExpression	"dev_proc ( dev , get_profile )"		522071	0					
ANR	522151	Callee	dev_proc		522071	0					
ANR	522152	Identifier	dev_proc		522071	0					
ANR	522153	ArgumentList	dev		522071	1					
ANR	522154	Argument	dev		522071	0					
ANR	522155	Identifier	dev		522071	0					
ANR	522156	Argument	get_profile		522071	1					
ANR	522157	Identifier	get_profile		522071	0					
ANR	522158	ArgumentList	dev		522071	1					
ANR	522159	Argument	dev		522071	0					
ANR	522160	Identifier	dev		522071	0					
ANR	522161	Argument	& profile_struct		522071	1					
ANR	522162	UnaryOperationExpression	& profile_struct		522071	0					
ANR	522163	UnaryOperator	&		522071	0					
ANR	522164	Identifier	profile_struct		522071	1					
ANR	522165	IfStatement	if ( code < 0 )		522071	1					
ANR	522166	Condition	code < 0	1225:12:51105:51112	522071	0	True				
ANR	522167	RelationalExpression	code < 0		522071	0		<			
ANR	522168	Identifier	code		522071	0					
ANR	522169	PrimaryExpression	0		522071	1					
ANR	522170	ReturnStatement	return code ;	1226:12:51127:51138	522071	1	True				
ANR	522171	Identifier	code		522071	0					
ANR	522172	IfStatement	if ( profile_struct == NULL )		522071	2					
ANR	522173	Condition	profile_struct == NULL	1227:12:51152:51173	522071	0	True				
ANR	522174	EqualityExpression	profile_struct == NULL		522071	0		==			
ANR	522175	Identifier	profile_struct		522071	0					
ANR	522176	Identifier	NULL		522071	1					
ANR	522177	CompoundStatement		25:36:1143:1143	522071	1					
ANR	522178	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1229:12:51220:51281	522071	0	True				
ANR	522179	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		522071	0		=			
ANR	522180	PtrMemberAccess	dev -> icc_struct		522071	0					
ANR	522181	Identifier	dev		522071	0					
ANR	522182	Identifier	icc_struct		522071	1					
ANR	522183	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		522071	1					
ANR	522184	Callee	gsicc_new_device_profile_array		522071	0					
ANR	522185	Identifier	gsicc_new_device_profile_array		522071	0					
ANR	522186	ArgumentList	dev -> memory		522071	1					
ANR	522187	Argument	dev -> memory		522071	0					
ANR	522188	PtrMemberAccess	dev -> memory		522071	0					
ANR	522189	Identifier	dev		522071	0					
ANR	522190	Identifier	memory		522071	1					
ANR	522191	IfStatement	if ( dev -> icc_struct == NULL )		522071	1					
ANR	522192	Condition	dev -> icc_struct == NULL	1230:16:51299:51321	522071	0	True				
ANR	522193	EqualityExpression	dev -> icc_struct == NULL		522071	0		==			
ANR	522194	PtrMemberAccess	dev -> icc_struct		522071	0					
ANR	522195	Identifier	dev		522071	0					
ANR	522196	Identifier	icc_struct		522071	1					
ANR	522197	Identifier	NULL		522071	1					
ANR	522198	ExpressionStatement	return_error ( gs_error_VMerror )	1231:16:51340:51370	522071	1	True				
ANR	522199	CallExpression	return_error ( gs_error_VMerror )		522071	0					
ANR	522200	Callee	return_error		522071	0					
ANR	522201	Identifier	return_error		522071	0					
ANR	522202	ArgumentList	gs_error_VMerror		522071	1					
ANR	522203	Argument	gs_error_VMerror		522071	0					
ANR	522204	Identifier	gs_error_VMerror		522071	0					
ANR	522205	ExpressionStatement	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"	1233:8:51390:51452	522071	3	True				
ANR	522206	AssignmentExpression	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"		522071	0		=			
ANR	522207	Identifier	code		522071	0					
ANR	522208	CallExpression	"gsicc_set_device_profile_intent ( dev , icc_intent , index )"		522071	1					
ANR	522209	Callee	gsicc_set_device_profile_intent		522071	0					
ANR	522210	Identifier	gsicc_set_device_profile_intent		522071	0					
ANR	522211	ArgumentList	dev		522071	1					
ANR	522212	Argument	dev		522071	0					
ANR	522213	Identifier	dev		522071	0					
ANR	522214	Argument	icc_intent		522071	1					
ANR	522215	Identifier	icc_intent		522071	0					
ANR	522216	Argument	index		522071	2					
ANR	522217	Identifier	index		522071	0					
ANR	522218	ReturnStatement	return code ;	1235:4:51464:51475	522071	3	True				
ANR	522219	Identifier	code		522071	0					
ANR	522220	ReturnType	static int		522071	1					
ANR	522221	Identifier	gx_default_put_intent		522071	2					
ANR	522222	ParameterList	"gsicc_rendering_intents_t icc_intent , gx_device * dev , gsicc_profile_types_t index"		522071	3					
ANR	522223	Parameter	gsicc_rendering_intents_t icc_intent	1201:22:49929:49964	522071	0	True				
ANR	522224	ParameterType	gsicc_rendering_intents_t		522071	0					
ANR	522225	Identifier	icc_intent		522071	1					
ANR	522226	Parameter	gx_device * dev	1201:60:49967:49981	522071	1	True				
ANR	522227	ParameterType	gx_device *		522071	0					
ANR	522228	Identifier	dev		522071	1					
ANR	522229	Parameter	gsicc_profile_types_t index	1202:19:50003:50029	522071	2	True				
ANR	522230	ParameterType	gsicc_profile_types_t		522071	0					
ANR	522231	Identifier	index		522071	1					
ANR	522232	CFGEntryNode	ENTRY		522071		True				
ANR	522233	CFGExitNode	EXIT		522071		True				
ANR	522234	Symbol	* dev		522071						
ANR	522235	Symbol	gsicc_set_device_profile_intent		522071						
ANR	522236	Symbol	code		522071						
ANR	522237	Symbol	NULL		522071						
ANR	522238	Symbol	gsicc_new_device_profile_array		522071						
ANR	522239	Symbol	index		522071						
ANR	522240	Symbol	profile_struct		522071						
ANR	522241	Symbol	& profile_struct		522071						
ANR	522242	Symbol	gs_error_VMerror		522071						
ANR	522243	Symbol	dev -> memory		522071						
ANR	522244	Symbol	dev		522071						
ANR	522245	Symbol	dev_proc		522071						
ANR	522246	Symbol	dev -> icc_struct		522071						
ANR	522247	Symbol	icc_intent		522071						
ANR	522248	Symbol	get_profile		522071						
ANR	522249	Function	gx_default_put_blackpreserve	1238:0:51480:53079							
ANR	522250	FunctionDef	"gx_default_put_blackpreserve (gsicc_blackpreserve_t blackpreserve , gx_device * dev , gsicc_profile_types_t index)"		522249	0					
ANR	522251	CompoundStatement		1241:0:51630:53079	522249	0					
ANR	522252	IdentifierDeclStatement	int code ;	1242:4:51636:51644	522249	0	True				
ANR	522253	IdentifierDecl	code		522249	0					
ANR	522254	IdentifierDeclType	int		522249	0					
ANR	522255	Identifier	code		522249	1					
ANR	522256	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1243:4:51650:51683	522249	1	True				
ANR	522257	IdentifierDecl	* profile_struct		522249	0					
ANR	522258	IdentifierDeclType	cmm_dev_profile_t *		522249	0					
ANR	522259	Identifier	profile_struct		522249	1					
ANR	522260	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		522249	2					
ANR	522261	Condition	"dev_proc ( dev , get_profile ) == NULL"	1249:8:51963:51996	522249	0	True				
ANR	522262	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		522249	0		==			
ANR	522263	CallExpression	"dev_proc ( dev , get_profile )"		522249	0					
ANR	522264	Callee	dev_proc		522249	0					
ANR	522265	Identifier	dev_proc		522249	0					
ANR	522266	ArgumentList	dev		522249	1					
ANR	522267	Argument	dev		522249	0					
ANR	522268	Identifier	dev		522249	0					
ANR	522269	Argument	get_profile		522249	1					
ANR	522270	Identifier	get_profile		522249	0					
ANR	522271	Identifier	NULL		522249	1					
ANR	522272	CompoundStatement		9:44:368:368	522249	1					
ANR	522273	IfStatement	if ( dev -> icc_struct == NULL )		522249	0					
ANR	522274	Condition	dev -> icc_struct == NULL	1254:12:52254:52276	522249	0	True				
ANR	522275	EqualityExpression	dev -> icc_struct == NULL		522249	0		==			
ANR	522276	PtrMemberAccess	dev -> icc_struct		522249	0					
ANR	522277	Identifier	dev		522249	0					
ANR	522278	Identifier	icc_struct		522249	1					
ANR	522279	Identifier	NULL		522249	1					
ANR	522280	CompoundStatement		14:37:648:648	522249	1					
ANR	522281	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1256:12:52378:52439	522249	0	True				
ANR	522282	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		522249	0		=			
ANR	522283	PtrMemberAccess	dev -> icc_struct		522249	0					
ANR	522284	Identifier	dev		522249	0					
ANR	522285	Identifier	icc_struct		522249	1					
ANR	522286	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		522249	1					
ANR	522287	Callee	gsicc_new_device_profile_array		522249	0					
ANR	522288	Identifier	gsicc_new_device_profile_array		522249	0					
ANR	522289	ArgumentList	dev -> memory		522249	1					
ANR	522290	Argument	dev -> memory		522249	0					
ANR	522291	PtrMemberAccess	dev -> memory		522249	0					
ANR	522292	Identifier	dev		522249	0					
ANR	522293	Identifier	memory		522249	1					
ANR	522294	IfStatement	if ( dev -> icc_struct == NULL )		522249	1					
ANR	522295	Condition	dev -> icc_struct == NULL	1257:16:52457:52479	522249	0	True				
ANR	522296	EqualityExpression	dev -> icc_struct == NULL		522249	0		==			
ANR	522297	PtrMemberAccess	dev -> icc_struct		522249	0					
ANR	522298	Identifier	dev		522249	0					
ANR	522299	Identifier	icc_struct		522249	1					
ANR	522300	Identifier	NULL		522249	1					
ANR	522301	ExpressionStatement	return_error ( gs_error_VMerror )	1258:16:52498:52528	522249	1	True				
ANR	522302	CallExpression	return_error ( gs_error_VMerror )		522249	0					
ANR	522303	Callee	return_error		522249	0					
ANR	522304	Identifier	return_error		522249	0					
ANR	522305	ArgumentList	gs_error_VMerror		522249	1					
ANR	522306	Argument	gs_error_VMerror		522249	0					
ANR	522307	Identifier	gs_error_VMerror		522249	0					
ANR	522308	ExpressionStatement	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"	1260:8:52548:52612	522249	1	True				
ANR	522309	AssignmentExpression	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		522249	0		=			
ANR	522310	Identifier	code		522249	0					
ANR	522311	CallExpression	"gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		522249	1					
ANR	522312	Callee	gsicc_set_device_blackpreserve		522249	0					
ANR	522313	Identifier	gsicc_set_device_blackpreserve		522249	0					
ANR	522314	ArgumentList	dev		522249	1					
ANR	522315	Argument	dev		522249	0					
ANR	522316	Identifier	dev		522249	0					
ANR	522317	Argument	blackpreserve		522249	1					
ANR	522318	Identifier	blackpreserve		522249	0					
ANR	522319	Argument	index		522249	2					
ANR	522320	Identifier	index		522249	0					
ANR	522321	ElseStatement	else		522249	0					
ANR	522322	CompoundStatement		21:11:994:994	522249	0					
ANR	522323	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1262:8:52635:52691	522249	0	True				
ANR	522324	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		522249	0		=			
ANR	522325	Identifier	code		522249	0					
ANR	522326	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		522249	1					
ANR	522327	Callee	"dev_proc ( dev , get_profile )"		522249	0					
ANR	522328	CallExpression	"dev_proc ( dev , get_profile )"		522249	0					
ANR	522329	Callee	dev_proc		522249	0					
ANR	522330	Identifier	dev_proc		522249	0					
ANR	522331	ArgumentList	dev		522249	1					
ANR	522332	Argument	dev		522249	0					
ANR	522333	Identifier	dev		522249	0					
ANR	522334	Argument	get_profile		522249	1					
ANR	522335	Identifier	get_profile		522249	0					
ANR	522336	ArgumentList	dev		522249	1					
ANR	522337	Argument	dev		522249	0					
ANR	522338	Identifier	dev		522249	0					
ANR	522339	Argument	& profile_struct		522249	1					
ANR	522340	UnaryOperationExpression	& profile_struct		522249	0					
ANR	522341	UnaryOperator	&		522249	0					
ANR	522342	Identifier	profile_struct		522249	1					
ANR	522343	IfStatement	if ( code < 0 )		522249	1					
ANR	522344	Condition	code < 0	1263:12:52705:52712	522249	0	True				
ANR	522345	RelationalExpression	code < 0		522249	0		<			
ANR	522346	Identifier	code		522249	0					
ANR	522347	PrimaryExpression	0		522249	1					
ANR	522348	ReturnStatement	return code ;	1264:12:52727:52738	522249	1	True				
ANR	522349	Identifier	code		522249	0					
ANR	522350	IfStatement	if ( profile_struct == NULL )		522249	2					
ANR	522351	Condition	profile_struct == NULL	1265:12:52752:52773	522249	0	True				
ANR	522352	EqualityExpression	profile_struct == NULL		522249	0		==			
ANR	522353	Identifier	profile_struct		522249	0					
ANR	522354	Identifier	NULL		522249	1					
ANR	522355	CompoundStatement		25:36:1145:1145	522249	1					
ANR	522356	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1267:12:52820:52881	522249	0	True				
ANR	522357	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		522249	0		=			
ANR	522358	PtrMemberAccess	dev -> icc_struct		522249	0					
ANR	522359	Identifier	dev		522249	0					
ANR	522360	Identifier	icc_struct		522249	1					
ANR	522361	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		522249	1					
ANR	522362	Callee	gsicc_new_device_profile_array		522249	0					
ANR	522363	Identifier	gsicc_new_device_profile_array		522249	0					
ANR	522364	ArgumentList	dev -> memory		522249	1					
ANR	522365	Argument	dev -> memory		522249	0					
ANR	522366	PtrMemberAccess	dev -> memory		522249	0					
ANR	522367	Identifier	dev		522249	0					
ANR	522368	Identifier	memory		522249	1					
ANR	522369	IfStatement	if ( dev -> icc_struct == NULL )		522249	1					
ANR	522370	Condition	dev -> icc_struct == NULL	1268:16:52899:52921	522249	0	True				
ANR	522371	EqualityExpression	dev -> icc_struct == NULL		522249	0		==			
ANR	522372	PtrMemberAccess	dev -> icc_struct		522249	0					
ANR	522373	Identifier	dev		522249	0					
ANR	522374	Identifier	icc_struct		522249	1					
ANR	522375	Identifier	NULL		522249	1					
ANR	522376	ExpressionStatement	return_error ( gs_error_VMerror )	1269:16:52940:52970	522249	1	True				
ANR	522377	CallExpression	return_error ( gs_error_VMerror )		522249	0					
ANR	522378	Callee	return_error		522249	0					
ANR	522379	Identifier	return_error		522249	0					
ANR	522380	ArgumentList	gs_error_VMerror		522249	1					
ANR	522381	Argument	gs_error_VMerror		522249	0					
ANR	522382	Identifier	gs_error_VMerror		522249	0					
ANR	522383	ExpressionStatement	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"	1271:8:52990:53054	522249	3	True				
ANR	522384	AssignmentExpression	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		522249	0		=			
ANR	522385	Identifier	code		522249	0					
ANR	522386	CallExpression	"gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		522249	1					
ANR	522387	Callee	gsicc_set_device_blackpreserve		522249	0					
ANR	522388	Identifier	gsicc_set_device_blackpreserve		522249	0					
ANR	522389	ArgumentList	dev		522249	1					
ANR	522390	Argument	dev		522249	0					
ANR	522391	Identifier	dev		522249	0					
ANR	522392	Argument	blackpreserve		522249	1					
ANR	522393	Identifier	blackpreserve		522249	0					
ANR	522394	Argument	index		522249	2					
ANR	522395	Identifier	index		522249	0					
ANR	522396	ReturnStatement	return code ;	1273:4:53066:53077	522249	3	True				
ANR	522397	Identifier	code		522249	0					
ANR	522398	ReturnType	static int		522249	1					
ANR	522399	Identifier	gx_default_put_blackpreserve		522249	2					
ANR	522400	ParameterList	"gsicc_blackpreserve_t blackpreserve , gx_device * dev , gsicc_profile_types_t index"		522249	3					
ANR	522401	Parameter	gsicc_blackpreserve_t blackpreserve	1239:29:51520:51554	522249	0	True				
ANR	522402	ParameterType	gsicc_blackpreserve_t		522249	0					
ANR	522403	Identifier	blackpreserve		522249	1					
ANR	522404	Parameter	gx_device * dev	1239:66:51557:51571	522249	1	True				
ANR	522405	ParameterType	gx_device *		522249	0					
ANR	522406	Identifier	dev		522249	1					
ANR	522407	Parameter	gsicc_profile_types_t index	1240:27:51601:51627	522249	2	True				
ANR	522408	ParameterType	gsicc_profile_types_t		522249	0					
ANR	522409	Identifier	index		522249	1					
ANR	522410	CFGEntryNode	ENTRY		522249		True				
ANR	522411	CFGExitNode	EXIT		522249		True				
ANR	522412	Symbol	* dev		522249						
ANR	522413	Symbol	blackpreserve		522249						
ANR	522414	Symbol	code		522249						
ANR	522415	Symbol	NULL		522249						
ANR	522416	Symbol	gsicc_new_device_profile_array		522249						
ANR	522417	Symbol	index		522249						
ANR	522418	Symbol	profile_struct		522249						
ANR	522419	Symbol	& profile_struct		522249						
ANR	522420	Symbol	gs_error_VMerror		522249						
ANR	522421	Symbol	dev -> memory		522249						
ANR	522422	Symbol	dev		522249						
ANR	522423	Symbol	dev_proc		522249						
ANR	522424	Symbol	gsicc_set_device_blackpreserve		522249						
ANR	522425	Symbol	dev -> icc_struct		522249						
ANR	522426	Symbol	get_profile		522249						
ANR	522427	Function	gx_default_put_blackptcomp	1279:0:53085:54670							
ANR	522428	FunctionDef	"gx_default_put_blackptcomp (gsicc_blackptcomp_t blackptcomp , gx_device * dev , gsicc_profile_types_t index)"		522427	0					
ANR	522429	CompoundStatement		1282:0:53229:54670	522427	0					
ANR	522430	IdentifierDeclStatement	int code ;	1283:4:53235:53243	522427	0	True				
ANR	522431	IdentifierDecl	code		522427	0					
ANR	522432	IdentifierDeclType	int		522427	0					
ANR	522433	Identifier	code		522427	1					
ANR	522434	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1284:4:53249:53282	522427	1	True				
ANR	522435	IdentifierDecl	* profile_struct		522427	0					
ANR	522436	IdentifierDeclType	cmm_dev_profile_t *		522427	0					
ANR	522437	Identifier	profile_struct		522427	1					
ANR	522438	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		522427	2					
ANR	522439	Condition	"dev_proc ( dev , get_profile ) == NULL"	1290:8:53562:53595	522427	0	True				
ANR	522440	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		522427	0		==			
ANR	522441	CallExpression	"dev_proc ( dev , get_profile )"		522427	0					
ANR	522442	Callee	dev_proc		522427	0					
ANR	522443	Identifier	dev_proc		522427	0					
ANR	522444	ArgumentList	dev		522427	1					
ANR	522445	Argument	dev		522427	0					
ANR	522446	Identifier	dev		522427	0					
ANR	522447	Argument	get_profile		522427	1					
ANR	522448	Identifier	get_profile		522427	0					
ANR	522449	Identifier	NULL		522427	1					
ANR	522450	CompoundStatement		9:44:368:368	522427	1					
ANR	522451	IfStatement	if ( dev -> icc_struct == NULL )		522427	0					
ANR	522452	Condition	dev -> icc_struct == NULL	1295:12:53853:53875	522427	0	True				
ANR	522453	EqualityExpression	dev -> icc_struct == NULL		522427	0		==			
ANR	522454	PtrMemberAccess	dev -> icc_struct		522427	0					
ANR	522455	Identifier	dev		522427	0					
ANR	522456	Identifier	icc_struct		522427	1					
ANR	522457	Identifier	NULL		522427	1					
ANR	522458	CompoundStatement		14:37:648:648	522427	1					
ANR	522459	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1297:12:53977:54038	522427	0	True				
ANR	522460	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		522427	0		=			
ANR	522461	PtrMemberAccess	dev -> icc_struct		522427	0					
ANR	522462	Identifier	dev		522427	0					
ANR	522463	Identifier	icc_struct		522427	1					
ANR	522464	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		522427	1					
ANR	522465	Callee	gsicc_new_device_profile_array		522427	0					
ANR	522466	Identifier	gsicc_new_device_profile_array		522427	0					
ANR	522467	ArgumentList	dev -> memory		522427	1					
ANR	522468	Argument	dev -> memory		522427	0					
ANR	522469	PtrMemberAccess	dev -> memory		522427	0					
ANR	522470	Identifier	dev		522427	0					
ANR	522471	Identifier	memory		522427	1					
ANR	522472	IfStatement	if ( dev -> icc_struct == NULL )		522427	1					
ANR	522473	Condition	dev -> icc_struct == NULL	1298:16:54056:54078	522427	0	True				
ANR	522474	EqualityExpression	dev -> icc_struct == NULL		522427	0		==			
ANR	522475	PtrMemberAccess	dev -> icc_struct		522427	0					
ANR	522476	Identifier	dev		522427	0					
ANR	522477	Identifier	icc_struct		522427	1					
ANR	522478	Identifier	NULL		522427	1					
ANR	522479	ExpressionStatement	return_error ( gs_error_VMerror )	1299:16:54097:54127	522427	1	True				
ANR	522480	CallExpression	return_error ( gs_error_VMerror )		522427	0					
ANR	522481	Callee	return_error		522427	0					
ANR	522482	Identifier	return_error		522427	0					
ANR	522483	ArgumentList	gs_error_VMerror		522427	1					
ANR	522484	Argument	gs_error_VMerror		522427	0					
ANR	522485	Identifier	gs_error_VMerror		522427	0					
ANR	522486	ExpressionStatement	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"	1301:8:54147:54207	522427	1	True				
ANR	522487	AssignmentExpression	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		522427	0		=			
ANR	522488	Identifier	code		522427	0					
ANR	522489	CallExpression	"gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		522427	1					
ANR	522490	Callee	gsicc_set_device_blackptcomp		522427	0					
ANR	522491	Identifier	gsicc_set_device_blackptcomp		522427	0					
ANR	522492	ArgumentList	dev		522427	1					
ANR	522493	Argument	dev		522427	0					
ANR	522494	Identifier	dev		522427	0					
ANR	522495	Argument	blackptcomp		522427	1					
ANR	522496	Identifier	blackptcomp		522427	0					
ANR	522497	Argument	index		522427	2					
ANR	522498	Identifier	index		522427	0					
ANR	522499	ElseStatement	else		522427	0					
ANR	522500	CompoundStatement		21:11:990:990	522427	0					
ANR	522501	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1303:8:54230:54286	522427	0	True				
ANR	522502	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		522427	0		=			
ANR	522503	Identifier	code		522427	0					
ANR	522504	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		522427	1					
ANR	522505	Callee	"dev_proc ( dev , get_profile )"		522427	0					
ANR	522506	CallExpression	"dev_proc ( dev , get_profile )"		522427	0					
ANR	522507	Callee	dev_proc		522427	0					
ANR	522508	Identifier	dev_proc		522427	0					
ANR	522509	ArgumentList	dev		522427	1					
ANR	522510	Argument	dev		522427	0					
ANR	522511	Identifier	dev		522427	0					
ANR	522512	Argument	get_profile		522427	1					
ANR	522513	Identifier	get_profile		522427	0					
ANR	522514	ArgumentList	dev		522427	1					
ANR	522515	Argument	dev		522427	0					
ANR	522516	Identifier	dev		522427	0					
ANR	522517	Argument	& profile_struct		522427	1					
ANR	522518	UnaryOperationExpression	& profile_struct		522427	0					
ANR	522519	UnaryOperator	&		522427	0					
ANR	522520	Identifier	profile_struct		522427	1					
ANR	522521	IfStatement	if ( code < 0 )		522427	1					
ANR	522522	Condition	code < 0	1304:12:54300:54307	522427	0	True				
ANR	522523	RelationalExpression	code < 0		522427	0		<			
ANR	522524	Identifier	code		522427	0					
ANR	522525	PrimaryExpression	0		522427	1					
ANR	522526	ReturnStatement	return code ;	1305:12:54322:54333	522427	1	True				
ANR	522527	Identifier	code		522427	0					
ANR	522528	IfStatement	if ( profile_struct == NULL )		522427	2					
ANR	522529	Condition	profile_struct == NULL	1306:12:54347:54368	522427	0	True				
ANR	522530	EqualityExpression	profile_struct == NULL		522427	0		==			
ANR	522531	Identifier	profile_struct		522427	0					
ANR	522532	Identifier	NULL		522427	1					
ANR	522533	CompoundStatement		25:36:1141:1141	522427	1					
ANR	522534	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1308:12:54415:54476	522427	0	True				
ANR	522535	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		522427	0		=			
ANR	522536	PtrMemberAccess	dev -> icc_struct		522427	0					
ANR	522537	Identifier	dev		522427	0					
ANR	522538	Identifier	icc_struct		522427	1					
ANR	522539	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		522427	1					
ANR	522540	Callee	gsicc_new_device_profile_array		522427	0					
ANR	522541	Identifier	gsicc_new_device_profile_array		522427	0					
ANR	522542	ArgumentList	dev -> memory		522427	1					
ANR	522543	Argument	dev -> memory		522427	0					
ANR	522544	PtrMemberAccess	dev -> memory		522427	0					
ANR	522545	Identifier	dev		522427	0					
ANR	522546	Identifier	memory		522427	1					
ANR	522547	IfStatement	if ( dev -> icc_struct == NULL )		522427	1					
ANR	522548	Condition	dev -> icc_struct == NULL	1309:16:54494:54516	522427	0	True				
ANR	522549	EqualityExpression	dev -> icc_struct == NULL		522427	0		==			
ANR	522550	PtrMemberAccess	dev -> icc_struct		522427	0					
ANR	522551	Identifier	dev		522427	0					
ANR	522552	Identifier	icc_struct		522427	1					
ANR	522553	Identifier	NULL		522427	1					
ANR	522554	ExpressionStatement	return_error ( gs_error_VMerror )	1310:16:54535:54565	522427	1	True				
ANR	522555	CallExpression	return_error ( gs_error_VMerror )		522427	0					
ANR	522556	Callee	return_error		522427	0					
ANR	522557	Identifier	return_error		522427	0					
ANR	522558	ArgumentList	gs_error_VMerror		522427	1					
ANR	522559	Argument	gs_error_VMerror		522427	0					
ANR	522560	Identifier	gs_error_VMerror		522427	0					
ANR	522561	ExpressionStatement	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"	1312:8:54585:54645	522427	3	True				
ANR	522562	AssignmentExpression	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		522427	0		=			
ANR	522563	Identifier	code		522427	0					
ANR	522564	CallExpression	"gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		522427	1					
ANR	522565	Callee	gsicc_set_device_blackptcomp		522427	0					
ANR	522566	Identifier	gsicc_set_device_blackptcomp		522427	0					
ANR	522567	ArgumentList	dev		522427	1					
ANR	522568	Argument	dev		522427	0					
ANR	522569	Identifier	dev		522427	0					
ANR	522570	Argument	blackptcomp		522427	1					
ANR	522571	Identifier	blackptcomp		522427	0					
ANR	522572	Argument	index		522427	2					
ANR	522573	Identifier	index		522427	0					
ANR	522574	ReturnStatement	return code ;	1314:4:54657:54668	522427	3	True				
ANR	522575	Identifier	code		522427	0					
ANR	522576	ReturnType	static int		522427	1					
ANR	522577	Identifier	gx_default_put_blackptcomp		522427	2					
ANR	522578	ParameterList	"gsicc_blackptcomp_t blackptcomp , gx_device * dev , gsicc_profile_types_t index"		522427	3					
ANR	522579	Parameter	gsicc_blackptcomp_t blackptcomp	1280:27:53123:53153	522427	0	True				
ANR	522580	ParameterType	gsicc_blackptcomp_t		522427	0					
ANR	522581	Identifier	blackptcomp		522427	1					
ANR	522582	Parameter	gx_device * dev	1280:60:53156:53170	522427	1	True				
ANR	522583	ParameterType	gx_device *		522427	0					
ANR	522584	Identifier	dev		522427	1					
ANR	522585	Parameter	gsicc_profile_types_t index	1281:27:53200:53226	522427	2	True				
ANR	522586	ParameterType	gsicc_profile_types_t		522427	0					
ANR	522587	Identifier	index		522427	1					
ANR	522588	CFGEntryNode	ENTRY		522427		True				
ANR	522589	CFGExitNode	EXIT		522427		True				
ANR	522590	Symbol	* dev		522427						
ANR	522591	Symbol	code		522427						
ANR	522592	Symbol	NULL		522427						
ANR	522593	Symbol	gsicc_new_device_profile_array		522427						
ANR	522594	Symbol	blackptcomp		522427						
ANR	522595	Symbol	index		522427						
ANR	522596	Symbol	profile_struct		522427						
ANR	522597	Symbol	gsicc_set_device_blackptcomp		522427						
ANR	522598	Symbol	& profile_struct		522427						
ANR	522599	Symbol	gs_error_VMerror		522427						
ANR	522600	Symbol	dev -> memory		522427						
ANR	522601	Symbol	dev		522427						
ANR	522602	Symbol	dev_proc		522427						
ANR	522603	Symbol	dev -> icc_struct		522427						
ANR	522604	Symbol	get_profile		522427						
ANR	522605	Function	gx_default_put_icc_colorants	1317:0:54673:55363							
ANR	522606	FunctionDef	"gx_default_put_icc_colorants (gs_param_string * colorants , gx_device * dev)"		522605	0					
ANR	522607	CompoundStatement		1319:0:54758:55363	522605	0					
ANR	522608	IdentifierDeclStatement	char * tempstr ;	1320:4:54764:54777	522605	0	True				
ANR	522609	IdentifierDecl	* tempstr		522605	0					
ANR	522610	IdentifierDeclType	char *		522605	0					
ANR	522611	Identifier	tempstr		522605	1					
ANR	522612	IdentifierDeclStatement	int code ;	1321:4:54783:54791	522605	1	True				
ANR	522613	IdentifierDecl	code		522605	0					
ANR	522614	IdentifierDeclType	int		522605	0					
ANR	522615	Identifier	code		522605	1					
ANR	522616	IfStatement	if ( colorants -> size == 0 )		522605	2					
ANR	522617	Condition	colorants -> size == 0	1323:8:54802:54821	522605	0	True				
ANR	522618	EqualityExpression	colorants -> size == 0		522605	0		==			
ANR	522619	PtrMemberAccess	colorants -> size		522605	0					
ANR	522620	Identifier	colorants		522605	0					
ANR	522621	Identifier	size		522605	1					
ANR	522622	PrimaryExpression	0		522605	1					
ANR	522623	ReturnStatement	return 0 ;	1323:30:54824:54832	522605	1	True				
ANR	522624	PrimaryExpression	0		522605	0					
ANR	522625	ExpressionStatement	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"	1326:4:54887:54942	522605	3	True				
ANR	522626	CallExpression	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"		522605	0					
ANR	522627	Callee	fill_dev_proc		522605	0					
ANR	522628	Identifier	fill_dev_proc		522605	0					
ANR	522629	ArgumentList	dev		522605	1					
ANR	522630	Argument	dev		522605	0					
ANR	522631	Identifier	dev		522605	0					
ANR	522632	Argument	get_profile		522605	1					
ANR	522633	Identifier	get_profile		522605	0					
ANR	522634	Argument	gx_default_get_profile		522605	2					
ANR	522635	Identifier	gx_default_get_profile		522605	0					
ANR	522636	ExpressionStatement	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"	1327:4:54948:55083	522605	4	True				
ANR	522637	AssignmentExpression	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"		522605	0		=			
ANR	522638	Identifier	tempstr		522605	0					
ANR	522639	CastExpression	"( char * ) gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"		522605	1					
ANR	522640	CastTarget	char *		522605	0					
ANR	522641	CallExpression	"gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"		522605	1					
ANR	522642	Callee	gs_alloc_bytes		522605	0					
ANR	522643	Identifier	gs_alloc_bytes		522605	0					
ANR	522644	ArgumentList	dev -> memory		522605	1					
ANR	522645	Argument	dev -> memory		522605	0					
ANR	522646	PtrMemberAccess	dev -> memory		522605	0					
ANR	522647	Identifier	dev		522605	0					
ANR	522648	Identifier	memory		522605	1					
ANR	522649	Argument	colorants -> size + 1		522605	1					
ANR	522650	AdditiveExpression	colorants -> size + 1		522605	0		+			
ANR	522651	PtrMemberAccess	colorants -> size		522605	0					
ANR	522652	Identifier	colorants		522605	0					
ANR	522653	Identifier	size		522605	1					
ANR	522654	PrimaryExpression	1		522605	1					
ANR	522655	Argument	"""gx_default_put_icc_colorants"""		522605	2					
ANR	522656	PrimaryExpression	"""gx_default_put_icc_colorants"""		522605	0					
ANR	522657	ExpressionStatement	"memcpy ( tempstr , colorants -> data , colorants -> size )"	1329:4:55089:55138	522605	5	True				
ANR	522658	CallExpression	"memcpy ( tempstr , colorants -> data , colorants -> size )"		522605	0					
ANR	522659	Callee	memcpy		522605	0					
ANR	522660	Identifier	memcpy		522605	0					
ANR	522661	ArgumentList	tempstr		522605	1					
ANR	522662	Argument	tempstr		522605	0					
ANR	522663	Identifier	tempstr		522605	0					
ANR	522664	Argument	colorants -> data		522605	1					
ANR	522665	PtrMemberAccess	colorants -> data		522605	0					
ANR	522666	Identifier	colorants		522605	0					
ANR	522667	Identifier	data		522605	1					
ANR	522668	Argument	colorants -> size		522605	2					
ANR	522669	PtrMemberAccess	colorants -> size		522605	0					
ANR	522670	Identifier	colorants		522605	0					
ANR	522671	Identifier	size		522605	1					
ANR	522672	ExpressionStatement	tempstr [ colorants -> size ] = 0	1331:4:55181:55209	522605	6	True				
ANR	522673	AssignmentExpression	tempstr [ colorants -> size ] = 0		522605	0		=			
ANR	522674	ArrayIndexing	tempstr [ colorants -> size ]		522605	0					
ANR	522675	Identifier	tempstr		522605	0					
ANR	522676	PtrMemberAccess	colorants -> size		522605	1					
ANR	522677	Identifier	colorants		522605	0					
ANR	522678	Identifier	size		522605	1					
ANR	522679	PrimaryExpression	0		522605	1					
ANR	522680	ExpressionStatement	"code = gsicc_set_device_profile_colorants ( dev , tempstr )"	1332:4:55215:55270	522605	7	True				
ANR	522681	AssignmentExpression	"code = gsicc_set_device_profile_colorants ( dev , tempstr )"		522605	0		=			
ANR	522682	Identifier	code		522605	0					
ANR	522683	CallExpression	"gsicc_set_device_profile_colorants ( dev , tempstr )"		522605	1					
ANR	522684	Callee	gsicc_set_device_profile_colorants		522605	0					
ANR	522685	Identifier	gsicc_set_device_profile_colorants		522605	0					
ANR	522686	ArgumentList	dev		522605	1					
ANR	522687	Argument	dev		522605	0					
ANR	522688	Identifier	dev		522605	0					
ANR	522689	Argument	tempstr		522605	1					
ANR	522690	Identifier	tempstr		522605	0					
ANR	522691	ExpressionStatement	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc_colorants"" )"	1333:4:55276:55344	522605	8	True				
ANR	522692	CallExpression	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc_colorants"" )"		522605	0					
ANR	522693	Callee	gs_free_object		522605	0					
ANR	522694	Identifier	gs_free_object		522605	0					
ANR	522695	ArgumentList	dev -> memory		522605	1					
ANR	522696	Argument	dev -> memory		522605	0					
ANR	522697	PtrMemberAccess	dev -> memory		522605	0					
ANR	522698	Identifier	dev		522605	0					
ANR	522699	Identifier	memory		522605	1					
ANR	522700	Argument	tempstr		522605	1					
ANR	522701	Identifier	tempstr		522605	0					
ANR	522702	Argument	"""gx_default_put_icc_colorants"""		522605	2					
ANR	522703	PrimaryExpression	"""gx_default_put_icc_colorants"""		522605	0					
ANR	522704	ReturnStatement	return code ;	1334:4:55350:55361	522605	9	True				
ANR	522705	Identifier	code		522605	0					
ANR	522706	ReturnType	static int		522605	1					
ANR	522707	Identifier	gx_default_put_icc_colorants		522605	2					
ANR	522708	ParameterList	"gs_param_string * colorants , gx_device * dev"		522605	3					
ANR	522709	Parameter	gs_param_string * colorants	1318:29:54713:54738	522605	0	True				
ANR	522710	ParameterType	gs_param_string *		522605	0					
ANR	522711	Identifier	colorants		522605	1					
ANR	522712	Parameter	gx_device * dev	1318:57:54741:54755	522605	1	True				
ANR	522713	ParameterType	gx_device *		522605	0					
ANR	522714	Identifier	dev		522605	1					
ANR	522715	CFGEntryNode	ENTRY		522605		True				
ANR	522716	CFGExitNode	EXIT		522605		True				
ANR	522717	Symbol	* dev		522605						
ANR	522718	Symbol	gs_alloc_bytes		522605						
ANR	522719	Symbol	code		522605						
ANR	522720	Symbol	* tempstr		522605						
ANR	522721	Symbol	gsicc_set_device_profile_colorants		522605						
ANR	522722	Symbol	dev -> memory		522605						
ANR	522723	Symbol	colorants -> data		522605						
ANR	522724	Symbol	dev		522605						
ANR	522725	Symbol	* colorants		522605						
ANR	522726	Symbol	gx_default_get_profile		522605						
ANR	522727	Symbol	colorants		522605						
ANR	522728	Symbol	* colorants -> size		522605						
ANR	522729	Symbol	* * colorants		522605						
ANR	522730	Symbol	tempstr		522605						
ANR	522731	Symbol	colorants -> size		522605						
ANR	522732	Symbol	get_profile		522605						
ANR	522733	Function	gx_default_put_icc	1337:0:55366:56572							
ANR	522734	FunctionDef	"gx_default_put_icc (gs_param_string * icc_pro , gx_device * dev , gsicc_profile_types_t index)"		522733	0					
ANR	522735	CompoundStatement		1340:0:55487:56572	522733	0					
ANR	522736	IdentifierDeclStatement	char * tempstr ;	1341:4:55493:55506	522733	0	True				
ANR	522737	IdentifierDecl	* tempstr		522733	0					
ANR	522738	IdentifierDeclType	char *		522733	0					
ANR	522739	Identifier	tempstr		522733	1					
ANR	522740	IdentifierDeclStatement	int code = 0 ;	1342:4:55512:55524	522733	1	True				
ANR	522741	IdentifierDecl	code = 0		522733	0					
ANR	522742	IdentifierDeclType	int		522733	0					
ANR	522743	Identifier	code		522733	1					
ANR	522744	AssignmentExpression	code = 0		522733	2		=			
ANR	522745	Identifier	code		522733	0					
ANR	522746	PrimaryExpression	0		522733	1					
ANR	522747	IfStatement	if ( icc_pro -> size == 0 )		522733	2					
ANR	522748	Condition	icc_pro -> size == 0	1344:8:55535:55552	522733	0	True				
ANR	522749	EqualityExpression	icc_pro -> size == 0		522733	0		==			
ANR	522750	PtrMemberAccess	icc_pro -> size		522733	0					
ANR	522751	Identifier	icc_pro		522733	0					
ANR	522752	Identifier	size		522733	1					
ANR	522753	PrimaryExpression	0		522733	1					
ANR	522754	ReturnStatement	return 0 ;	1344:28:55555:55563	522733	1	True				
ANR	522755	PrimaryExpression	0		522733	0					
ANR	522756	ExpressionStatement	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"	1351:4:55965:56020	522733	3	True				
ANR	522757	CallExpression	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"		522733	0					
ANR	522758	Callee	fill_dev_proc		522733	0					
ANR	522759	Identifier	fill_dev_proc		522733	0					
ANR	522760	ArgumentList	dev		522733	1					
ANR	522761	Argument	dev		522733	0					
ANR	522762	Identifier	dev		522733	0					
ANR	522763	Argument	get_profile		522733	1					
ANR	522764	Identifier	get_profile		522733	0					
ANR	522765	Argument	gx_default_get_profile		522733	2					
ANR	522766	Identifier	gx_default_get_profile		522733	0					
ANR	522767	IfStatement	if ( icc_pro -> size < gp_file_name_sizeof )		522733	4					
ANR	522768	Condition	icc_pro -> size < gp_file_name_sizeof	1352:8:56030:56064	522733	0	True				
ANR	522769	RelationalExpression	icc_pro -> size < gp_file_name_sizeof		522733	0		<			
ANR	522770	PtrMemberAccess	icc_pro -> size		522733	0					
ANR	522771	Identifier	icc_pro		522733	0					
ANR	522772	Identifier	size		522733	1					
ANR	522773	Identifier	gp_file_name_sizeof		522733	1					
ANR	522774	CompoundStatement		13:45:579:579	522733	1					
ANR	522775	ExpressionStatement	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"	1353:8:56077:56204	522733	0	True				
ANR	522776	AssignmentExpression	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"		522733	0		=			
ANR	522777	Identifier	tempstr		522733	0					
ANR	522778	CastExpression	"( char * ) gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"		522733	1					
ANR	522779	CastTarget	char *		522733	0					
ANR	522780	CallExpression	"gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"		522733	1					
ANR	522781	Callee	gs_alloc_bytes		522733	0					
ANR	522782	Identifier	gs_alloc_bytes		522733	0					
ANR	522783	ArgumentList	dev -> memory		522733	1					
ANR	522784	Argument	dev -> memory		522733	0					
ANR	522785	PtrMemberAccess	dev -> memory		522733	0					
ANR	522786	Identifier	dev		522733	0					
ANR	522787	Identifier	memory		522733	1					
ANR	522788	Argument	icc_pro -> size + 1		522733	1					
ANR	522789	AdditiveExpression	icc_pro -> size + 1		522733	0		+			
ANR	522790	PtrMemberAccess	icc_pro -> size		522733	0					
ANR	522791	Identifier	icc_pro		522733	0					
ANR	522792	Identifier	size		522733	1					
ANR	522793	PrimaryExpression	1		522733	1					
ANR	522794	Argument	"""gx_default_put_icc"""		522733	2					
ANR	522795	PrimaryExpression	"""gx_default_put_icc"""		522733	0					
ANR	522796	IfStatement	if ( tempstr == NULL )		522733	1					
ANR	522797	Condition	tempstr == NULL	1355:12:56218:56232	522733	0	True				
ANR	522798	EqualityExpression	tempstr == NULL		522733	0		==			
ANR	522799	Identifier	tempstr		522733	0					
ANR	522800	Identifier	NULL		522733	1					
ANR	522801	ExpressionStatement	return_error ( gs_error_VMerror )	1356:12:56247:56277	522733	1	True				
ANR	522802	CallExpression	return_error ( gs_error_VMerror )		522733	0					
ANR	522803	Callee	return_error		522733	0					
ANR	522804	Identifier	return_error		522733	0					
ANR	522805	ArgumentList	gs_error_VMerror		522733	1					
ANR	522806	Argument	gs_error_VMerror		522733	0					
ANR	522807	Identifier	gs_error_VMerror		522733	0					
ANR	522808	ExpressionStatement	"memcpy ( tempstr , icc_pro -> data , icc_pro -> size )"	1357:8:56287:56332	522733	2	True				
ANR	522809	CallExpression	"memcpy ( tempstr , icc_pro -> data , icc_pro -> size )"		522733	0					
ANR	522810	Callee	memcpy		522733	0					
ANR	522811	Identifier	memcpy		522733	0					
ANR	522812	ArgumentList	tempstr		522733	1					
ANR	522813	Argument	tempstr		522733	0					
ANR	522814	Identifier	tempstr		522733	0					
ANR	522815	Argument	icc_pro -> data		522733	1					
ANR	522816	PtrMemberAccess	icc_pro -> data		522733	0					
ANR	522817	Identifier	icc_pro		522733	0					
ANR	522818	Identifier	data		522733	1					
ANR	522819	Argument	icc_pro -> size		522733	2					
ANR	522820	PtrMemberAccess	icc_pro -> size		522733	0					
ANR	522821	Identifier	icc_pro		522733	0					
ANR	522822	Identifier	size		522733	1					
ANR	522823	ExpressionStatement	tempstr [ icc_pro -> size ] = 0	1359:8:56383:56409	522733	3	True				
ANR	522824	AssignmentExpression	tempstr [ icc_pro -> size ] = 0		522733	0		=			
ANR	522825	ArrayIndexing	tempstr [ icc_pro -> size ]		522733	0					
ANR	522826	Identifier	tempstr		522733	0					
ANR	522827	PtrMemberAccess	icc_pro -> size		522733	1					
ANR	522828	Identifier	icc_pro		522733	0					
ANR	522829	Identifier	size		522733	1					
ANR	522830	PrimaryExpression	0		522733	1					
ANR	522831	ExpressionStatement	"code = gsicc_init_device_profile_struct ( dev , tempstr , index )"	1360:8:56419:56479	522733	4	True				
ANR	522832	AssignmentExpression	"code = gsicc_init_device_profile_struct ( dev , tempstr , index )"		522733	0		=			
ANR	522833	Identifier	code		522733	0					
ANR	522834	CallExpression	"gsicc_init_device_profile_struct ( dev , tempstr , index )"		522733	1					
ANR	522835	Callee	gsicc_init_device_profile_struct		522733	0					
ANR	522836	Identifier	gsicc_init_device_profile_struct		522733	0					
ANR	522837	ArgumentList	dev		522733	1					
ANR	522838	Argument	dev		522733	0					
ANR	522839	Identifier	dev		522733	0					
ANR	522840	Argument	tempstr		522733	1					
ANR	522841	Identifier	tempstr		522733	0					
ANR	522842	Argument	index		522733	2					
ANR	522843	Identifier	index		522733	0					
ANR	522844	ExpressionStatement	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc"" )"	1361:8:56489:56547	522733	5	True				
ANR	522845	CallExpression	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc"" )"		522733	0					
ANR	522846	Callee	gs_free_object		522733	0					
ANR	522847	Identifier	gs_free_object		522733	0					
ANR	522848	ArgumentList	dev -> memory		522733	1					
ANR	522849	Argument	dev -> memory		522733	0					
ANR	522850	PtrMemberAccess	dev -> memory		522733	0					
ANR	522851	Identifier	dev		522733	0					
ANR	522852	Identifier	memory		522733	1					
ANR	522853	Argument	tempstr		522733	1					
ANR	522854	Identifier	tempstr		522733	0					
ANR	522855	Argument	"""gx_default_put_icc"""		522733	2					
ANR	522856	PrimaryExpression	"""gx_default_put_icc"""		522733	0					
ANR	522857	ReturnStatement	return code ;	1363:4:56559:56570	522733	5	True				
ANR	522858	Identifier	code		522733	0					
ANR	522859	ReturnType	static int		522733	1					
ANR	522860	Identifier	gx_default_put_icc		522733	2					
ANR	522861	ParameterList	"gs_param_string * icc_pro , gx_device * dev , gsicc_profile_types_t index"		522733	3					
ANR	522862	Parameter	gs_param_string * icc_pro	1338:19:55396:55419	522733	0	True				
ANR	522863	ParameterType	gs_param_string *		522733	0					
ANR	522864	Identifier	icc_pro		522733	1					
ANR	522865	Parameter	gx_device * dev	1338:45:55422:55436	522733	1	True				
ANR	522866	ParameterType	gx_device *		522733	0					
ANR	522867	Identifier	dev		522733	1					
ANR	522868	Parameter	gsicc_profile_types_t index	1339:19:55458:55484	522733	2	True				
ANR	522869	ParameterType	gsicc_profile_types_t		522733	0					
ANR	522870	Identifier	index		522733	1					
ANR	522871	CFGEntryNode	ENTRY		522733		True				
ANR	522872	CFGExitNode	EXIT		522733		True				
ANR	522873	Symbol	* dev		522733						
ANR	522874	Symbol	gs_alloc_bytes		522733						
ANR	522875	Symbol	code		522733						
ANR	522876	Symbol	NULL		522733						
ANR	522877	Symbol	gsicc_init_device_profile_struct		522733						
ANR	522878	Symbol	* tempstr		522733						
ANR	522879	Symbol	icc_pro		522733						
ANR	522880	Symbol	index		522733						
ANR	522881	Symbol	gp_file_name_sizeof		522733						
ANR	522882	Symbol	icc_pro -> size		522733						
ANR	522883	Symbol	gs_error_VMerror		522733						
ANR	522884	Symbol	dev -> memory		522733						
ANR	522885	Symbol	dev		522733						
ANR	522886	Symbol	gx_default_get_profile		522733						
ANR	522887	Symbol	icc_pro -> data		522733						
ANR	522888	Symbol	* icc_pro -> size		522733						
ANR	522889	Symbol	* * icc_pro		522733						
ANR	522890	Symbol	* icc_pro		522733						
ANR	522891	Symbol	tempstr		522733						
ANR	522892	Symbol	get_profile		522733						
ANR	522893	Function	rc_free_pages_list	1366:0:56575:56958							
ANR	522894	FunctionDef	"rc_free_pages_list (gs_memory_t * mem , void * ptr_in , client_name_t cname)"		522893	0					
ANR	522895	CompoundStatement		1368:0:56660:56958	522893	0					
ANR	522896	IdentifierDeclStatement	gdev_pagelist * PageList = ( gdev_pagelist * ) ptr_in ;	1369:4:56666:56715	522893	0	True				
ANR	522897	IdentifierDecl	* PageList = ( gdev_pagelist * ) ptr_in		522893	0					
ANR	522898	IdentifierDeclType	gdev_pagelist *		522893	0					
ANR	522899	Identifier	PageList		522893	1					
ANR	522900	AssignmentExpression	* PageList = ( gdev_pagelist * ) ptr_in		522893	2		=			
ANR	522901	Identifier	PageList		522893	0					
ANR	522902	CastExpression	( gdev_pagelist * ) ptr_in		522893	1					
ANR	522903	CastTarget	gdev_pagelist *		522893	0					
ANR	522904	Identifier	ptr_in		522893	1					
ANR	522905	IfStatement	if ( PageList -> rc . ref_count <= 1 )		522893	1					
ANR	522906	Condition	PageList -> rc . ref_count <= 1	1371:8:56726:56752	522893	0	True				
ANR	522907	RelationalExpression	PageList -> rc . ref_count <= 1		522893	0		<=			
ANR	522908	MemberAccess	PageList -> rc . ref_count		522893	0					
ANR	522909	PtrMemberAccess	PageList -> rc		522893	0					
ANR	522910	Identifier	PageList		522893	0					
ANR	522911	Identifier	rc		522893	1					
ANR	522912	Identifier	ref_count		522893	1					
ANR	522913	PrimaryExpression	1		522893	1					
ANR	522914	CompoundStatement		4:37:94:94	522893	1					
ANR	522915	ExpressionStatement	"gs_free ( mem -> non_gc_memory , PageList -> Pages , 1 , PagesSize , ""free page list"" )"	1372:8:56765:56841	522893	0	True				
ANR	522916	CallExpression	"gs_free ( mem -> non_gc_memory , PageList -> Pages , 1 , PagesSize , ""free page list"" )"		522893	0					
ANR	522917	Callee	gs_free		522893	0					
ANR	522918	Identifier	gs_free		522893	0					
ANR	522919	ArgumentList	mem -> non_gc_memory		522893	1					
ANR	522920	Argument	mem -> non_gc_memory		522893	0					
ANR	522921	PtrMemberAccess	mem -> non_gc_memory		522893	0					
ANR	522922	Identifier	mem		522893	0					
ANR	522923	Identifier	non_gc_memory		522893	1					
ANR	522924	Argument	PageList -> Pages		522893	1					
ANR	522925	PtrMemberAccess	PageList -> Pages		522893	0					
ANR	522926	Identifier	PageList		522893	0					
ANR	522927	Identifier	Pages		522893	1					
ANR	522928	Argument	1		522893	2					
ANR	522929	PrimaryExpression	1		522893	0					
ANR	522930	Argument	PagesSize		522893	3					
ANR	522931	Identifier	PagesSize		522893	0					
ANR	522932	Argument	"""free page list"""		522893	4					
ANR	522933	PrimaryExpression	"""free page list"""		522893	0					
ANR	522934	ExpressionStatement	"gs_free ( mem -> non_gc_memory , PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"	1373:8:56851:56950	522893	1	True				
ANR	522935	CallExpression	"gs_free ( mem -> non_gc_memory , PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"		522893	0					
ANR	522936	Callee	gs_free		522893	0					
ANR	522937	Identifier	gs_free		522893	0					
ANR	522938	ArgumentList	mem -> non_gc_memory		522893	1					
ANR	522939	Argument	mem -> non_gc_memory		522893	0					
ANR	522940	PtrMemberAccess	mem -> non_gc_memory		522893	0					
ANR	522941	Identifier	mem		522893	0					
ANR	522942	Identifier	non_gc_memory		522893	1					
ANR	522943	Argument	PageList		522893	1					
ANR	522944	Identifier	PageList		522893	0					
ANR	522945	Argument	1		522893	2					
ANR	522946	PrimaryExpression	1		522893	0					
ANR	522947	Argument	sizeof ( gdev_pagelist )		522893	3					
ANR	522948	SizeofExpression	sizeof ( gdev_pagelist )		522893	0					
ANR	522949	Sizeof	sizeof		522893	0					
ANR	522950	SizeofOperand	gdev_pagelist		522893	1					
ANR	522951	Argument	"""free structure to hold page list"""		522893	4					
ANR	522952	PrimaryExpression	"""free structure to hold page list"""		522893	0					
ANR	522953	ReturnType	static void		522893	1					
ANR	522954	Identifier	rc_free_pages_list		522893	2					
ANR	522955	ParameterList	"gs_memory_t * mem , void * ptr_in , client_name_t cname"		522893	3					
ANR	522956	Parameter	gs_memory_t * mem	1367:19:56606:56622	522893	0	True				
ANR	522957	ParameterType	gs_memory_t *		522893	0					
ANR	522958	Identifier	mem		522893	1					
ANR	522959	Parameter	void * ptr_in	1367:38:56625:56636	522893	1	True				
ANR	522960	ParameterType	void *		522893	0					
ANR	522961	Identifier	ptr_in		522893	1					
ANR	522962	Parameter	client_name_t cname	1367:52:56639:56657	522893	2	True				
ANR	522963	ParameterType	client_name_t		522893	0					
ANR	522964	Identifier	cname		522893	1					
ANR	522965	CFGEntryNode	ENTRY		522893		True				
ANR	522966	CFGExitNode	EXIT		522893		True				
ANR	522967	Symbol	ptr_in		522893						
ANR	522968	Symbol	mem		522893						
ANR	522969	Symbol	PageList -> Pages		522893						
ANR	522970	Symbol	cname		522893						
ANR	522971	Symbol	* PageList		522893						
ANR	522972	Symbol	PageList		522893						
ANR	522973	Symbol	PageList -> rc . ref_count		522893						
ANR	522974	Symbol	mem -> non_gc_memory		522893						
ANR	522975	Symbol	PageList -> rc		522893						
ANR	522976	Symbol	PagesSize		522893						
ANR	522977	Symbol	* mem		522893						
ANR	522978	Function	gx_default_put_params	1382:0:57245:86277							
ANR	522979	FunctionDef	"gx_default_put_params (gx_device * dev , gs_param_list * plist)"		522978	0					
ANR	522980	CompoundStatement		1384:0:57311:86277	522978	0					
ANR	522981	IdentifierDeclStatement	int ecode = 0 ;	1385:4:57317:57330	522978	0	True				
ANR	522982	IdentifierDecl	ecode = 0		522978	0					
ANR	522983	IdentifierDeclType	int		522978	0					
ANR	522984	Identifier	ecode		522978	1					
ANR	522985	AssignmentExpression	ecode = 0		522978	2		=			
ANR	522986	Identifier	ecode		522978	0					
ANR	522987	PrimaryExpression	0		522978	1					
ANR	522988	IdentifierDeclStatement	int code ;	1386:4:57336:57344	522978	1	True				
ANR	522989	IdentifierDecl	code		522978	0					
ANR	522990	IdentifierDeclType	int		522978	0					
ANR	522991	Identifier	code		522978	1					
ANR	522992	IdentifierDeclStatement	gs_param_name param_name ;	1387:4:57350:57374	522978	2	True				
ANR	522993	IdentifierDecl	param_name		522978	0					
ANR	522994	IdentifierDeclType	gs_param_name		522978	0					
ANR	522995	Identifier	param_name		522978	1					
ANR	522996	IdentifierDeclStatement	gs_param_float_array hwra ;	1388:4:57380:57405	522978	3	True				
ANR	522997	IdentifierDecl	hwra		522978	0					
ANR	522998	IdentifierDeclType	gs_param_float_array		522978	0					
ANR	522999	Identifier	hwra		522978	1					
ANR	523000	IdentifierDeclStatement	gs_param_int_array hwsa ;	1389:4:57411:57434	522978	4	True				
ANR	523001	IdentifierDecl	hwsa		522978	0					
ANR	523002	IdentifierDeclType	gs_param_int_array		522978	0					
ANR	523003	Identifier	hwsa		522978	1					
ANR	523004	IdentifierDeclStatement	gs_param_float_array msa ;	1390:4:57440:57464	522978	5	True				
ANR	523005	IdentifierDecl	msa		522978	0					
ANR	523006	IdentifierDeclType	gs_param_float_array		522978	0					
ANR	523007	Identifier	msa		522978	1					
ANR	523008	IdentifierDeclStatement	gs_param_float_array ma ;	1391:4:57470:57493	522978	6	True				
ANR	523009	IdentifierDecl	ma		522978	0					
ANR	523010	IdentifierDeclType	gs_param_float_array		522978	0					
ANR	523011	Identifier	ma		522978	1					
ANR	523012	IdentifierDeclStatement	gs_param_float_array hwma ;	1392:4:57499:57524	522978	7	True				
ANR	523013	IdentifierDecl	hwma		522978	0					
ANR	523014	IdentifierDeclType	gs_param_float_array		522978	0					
ANR	523015	Identifier	hwma		522978	1					
ANR	523016	IdentifierDeclStatement	gs_param_string_array scna ;	1393:4:57530:57556	522978	8	True				
ANR	523017	IdentifierDecl	scna		522978	0					
ANR	523018	IdentifierDeclType	gs_param_string_array		522978	0					
ANR	523019	Identifier	scna		522978	1					
ANR	523020	IdentifierDeclStatement	int nci = dev -> NumCopies ;	1394:4:57562:57586	522978	9	True				
ANR	523021	IdentifierDecl	nci = dev -> NumCopies		522978	0					
ANR	523022	IdentifierDeclType	int		522978	0					
ANR	523023	Identifier	nci		522978	1					
ANR	523024	AssignmentExpression	nci = dev -> NumCopies		522978	2		=			
ANR	523025	Identifier	nci		522978	0					
ANR	523026	PtrMemberAccess	dev -> NumCopies		522978	1					
ANR	523027	Identifier	dev		522978	0					
ANR	523028	Identifier	NumCopies		522978	1					
ANR	523029	IdentifierDeclStatement	int ncset = dev -> NumCopies_set ;	1395:4:57592:57622	522978	10	True				
ANR	523030	IdentifierDecl	ncset = dev -> NumCopies_set		522978	0					
ANR	523031	IdentifierDeclType	int		522978	0					
ANR	523032	Identifier	ncset		522978	1					
ANR	523033	AssignmentExpression	ncset = dev -> NumCopies_set		522978	2		=			
ANR	523034	Identifier	ncset		522978	0					
ANR	523035	PtrMemberAccess	dev -> NumCopies_set		522978	1					
ANR	523036	Identifier	dev		522978	0					
ANR	523037	Identifier	NumCopies_set		522978	1					
ANR	523038	IdentifierDeclStatement	bool ignc = dev -> IgnoreNumCopies ;	1396:4:57628:57660	522978	11	True				
ANR	523039	IdentifierDecl	ignc = dev -> IgnoreNumCopies		522978	0					
ANR	523040	IdentifierDeclType	bool		522978	0					
ANR	523041	Identifier	ignc		522978	1					
ANR	523042	AssignmentExpression	ignc = dev -> IgnoreNumCopies		522978	2		=			
ANR	523043	Identifier	ignc		522978	0					
ANR	523044	PtrMemberAccess	dev -> IgnoreNumCopies		522978	1					
ANR	523045	Identifier	dev		522978	0					
ANR	523046	Identifier	IgnoreNumCopies		522978	1					
ANR	523047	IdentifierDeclStatement	bool ucc = dev -> UseCIEColor ;	1397:4:57666:57693	522978	12	True				
ANR	523048	IdentifierDecl	ucc = dev -> UseCIEColor		522978	0					
ANR	523049	IdentifierDeclType	bool		522978	0					
ANR	523050	Identifier	ucc		522978	1					
ANR	523051	AssignmentExpression	ucc = dev -> UseCIEColor		522978	2		=			
ANR	523052	Identifier	ucc		522978	0					
ANR	523053	PtrMemberAccess	dev -> UseCIEColor		522978	1					
ANR	523054	Identifier	dev		522978	0					
ANR	523055	Identifier	UseCIEColor		522978	1					
ANR	523056	IdentifierDeclStatement	gs_param_string icc_pro ;	1398:4:57699:57722	522978	13	True				
ANR	523057	IdentifierDecl	icc_pro		522978	0					
ANR	523058	IdentifierDeclType	gs_param_string		522978	0					
ANR	523059	Identifier	icc_pro		522978	1					
ANR	523060	IdentifierDeclStatement	bool locksafe = dev -> LockSafetyParams ;	1399:4:57728:57765	522978	14	True				
ANR	523061	IdentifierDecl	locksafe = dev -> LockSafetyParams		522978	0					
ANR	523062	IdentifierDeclType	bool		522978	0					
ANR	523063	Identifier	locksafe		522978	1					
ANR	523064	AssignmentExpression	locksafe = dev -> LockSafetyParams		522978	2		=			
ANR	523065	Identifier	locksafe		522978	0					
ANR	523066	PtrMemberAccess	dev -> LockSafetyParams		522978	1					
ANR	523067	Identifier	dev		522978	0					
ANR	523068	Identifier	LockSafetyParams		522978	1					
ANR	523069	IdentifierDeclStatement	gs_param_float_array ibba ;	1400:4:57771:57796	522978	15	True				
ANR	523070	IdentifierDecl	ibba		522978	0					
ANR	523071	IdentifierDeclType	gs_param_float_array		522978	0					
ANR	523072	Identifier	ibba		522978	1					
ANR	523073	IdentifierDeclStatement	bool ibbnull = false ;	1401:4:57802:57822	522978	16	True				
ANR	523074	IdentifierDecl	ibbnull = false		522978	0					
ANR	523075	IdentifierDeclType	bool		522978	0					
ANR	523076	Identifier	ibbnull		522978	1					
ANR	523077	AssignmentExpression	ibbnull = false		522978	2		=			
ANR	523078	Identifier	false		522978	0					
ANR	523079	Identifier	false		522978	1					
ANR	523080	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	1402:4:57828:57871	522978	17	True				
ANR	523081	IdentifierDecl	colors = dev -> color_info . num_components		522978	0					
ANR	523082	IdentifierDeclType	int		522978	0					
ANR	523083	Identifier	colors		522978	1					
ANR	523084	AssignmentExpression	colors = dev -> color_info . num_components		522978	2		=			
ANR	523085	Identifier	colors		522978	0					
ANR	523086	MemberAccess	dev -> color_info . num_components		522978	1					
ANR	523087	PtrMemberAccess	dev -> color_info		522978	0					
ANR	523088	Identifier	dev		522978	0					
ANR	523089	Identifier	color_info		522978	1					
ANR	523090	Identifier	num_components		522978	1					
ANR	523091	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	1403:4:57877:57910	522978	18	True				
ANR	523092	IdentifierDecl	depth = dev -> color_info . depth		522978	0					
ANR	523093	IdentifierDeclType	int		522978	0					
ANR	523094	Identifier	depth		522978	1					
ANR	523095	AssignmentExpression	depth = dev -> color_info . depth		522978	2		=			
ANR	523096	Identifier	depth		522978	0					
ANR	523097	MemberAccess	dev -> color_info . depth		522978	1					
ANR	523098	PtrMemberAccess	dev -> color_info		522978	0					
ANR	523099	Identifier	dev		522978	0					
ANR	523100	Identifier	color_info		522978	1					
ANR	523101	Identifier	depth		522978	1					
ANR	523102	IdentifierDeclStatement	int GrayValues = dev -> color_info . max_gray + 1 ;	1404:4:57916:57961	522978	19	True				
ANR	523103	IdentifierDecl	GrayValues = dev -> color_info . max_gray + 1		522978	0					
ANR	523104	IdentifierDeclType	int		522978	0					
ANR	523105	Identifier	GrayValues		522978	1					
ANR	523106	AssignmentExpression	GrayValues = dev -> color_info . max_gray + 1		522978	2		=			
ANR	523107	Identifier	GrayValues		522978	0					
ANR	523108	AdditiveExpression	dev -> color_info . max_gray + 1		522978	1		+			
ANR	523109	MemberAccess	dev -> color_info . max_gray		522978	0					
ANR	523110	PtrMemberAccess	dev -> color_info		522978	0					
ANR	523111	Identifier	dev		522978	0					
ANR	523112	Identifier	color_info		522978	1					
ANR	523113	Identifier	max_gray		522978	1					
ANR	523114	PrimaryExpression	1		522978	1					
ANR	523115	IdentifierDeclStatement	int RGBValues = dev -> color_info . max_color + 1 ;	1405:4:57967:58012	522978	20	True				
ANR	523116	IdentifierDecl	RGBValues = dev -> color_info . max_color + 1		522978	0					
ANR	523117	IdentifierDeclType	int		522978	0					
ANR	523118	Identifier	RGBValues		522978	1					
ANR	523119	AssignmentExpression	RGBValues = dev -> color_info . max_color + 1		522978	2		=			
ANR	523120	Identifier	RGBValues		522978	0					
ANR	523121	AdditiveExpression	dev -> color_info . max_color + 1		522978	1		+			
ANR	523122	MemberAccess	dev -> color_info . max_color		522978	0					
ANR	523123	PtrMemberAccess	dev -> color_info		522978	0					
ANR	523124	Identifier	dev		522978	0					
ANR	523125	Identifier	color_info		522978	1					
ANR	523126	Identifier	max_color		522978	1					
ANR	523127	PrimaryExpression	1		522978	1					
ANR	523128	IdentifierDeclStatement	long ColorValues = ( depth >= 32 ? - 1 : 1L << depth ) ;	1406:4:58018:58069	522978	21	True				
ANR	523129	IdentifierDecl	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		522978	0					
ANR	523130	IdentifierDeclType	long		522978	0					
ANR	523131	Identifier	ColorValues		522978	1					
ANR	523132	AssignmentExpression	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		522978	2		=			
ANR	523133	Identifier	ColorValues		522978	0					
ANR	523134	ConditionalExpression	depth >= 32 ? - 1 : 1L << depth		522978	1					
ANR	523135	Condition	depth >= 32		522978	0					
ANR	523136	RelationalExpression	depth >= 32		522978	0		>=			
ANR	523137	Identifier	depth		522978	0					
ANR	523138	PrimaryExpression	32		522978	1					
ANR	523139	UnaryOperationExpression	- 1		522978	1					
ANR	523140	UnaryOperator	-		522978	0					
ANR	523141	PrimaryExpression	1		522978	1					
ANR	523142	ShiftExpression	1L << depth		522978	2		<<			
ANR	523143	PrimaryExpression	1L		522978	0					
ANR	523144	Identifier	depth		522978	1					
ANR	523145	IdentifierDeclStatement	int tab = dev -> color_info . anti_alias . text_bits ;	1407:4:58075:58121	522978	22	True				
ANR	523146	IdentifierDecl	tab = dev -> color_info . anti_alias . text_bits		522978	0					
ANR	523147	IdentifierDeclType	int		522978	0					
ANR	523148	Identifier	tab		522978	1					
ANR	523149	AssignmentExpression	tab = dev -> color_info . anti_alias . text_bits		522978	2		=			
ANR	523150	Identifier	tab		522978	0					
ANR	523151	MemberAccess	dev -> color_info . anti_alias . text_bits		522978	1					
ANR	523152	MemberAccess	dev -> color_info . anti_alias		522978	0					
ANR	523153	PtrMemberAccess	dev -> color_info		522978	0					
ANR	523154	Identifier	dev		522978	0					
ANR	523155	Identifier	color_info		522978	1					
ANR	523156	Identifier	anti_alias		522978	1					
ANR	523157	Identifier	text_bits		522978	1					
ANR	523158	IdentifierDeclStatement	int gab = dev -> color_info . anti_alias . graphics_bits ;	1408:4:58127:58177	522978	23	True				
ANR	523159	IdentifierDecl	gab = dev -> color_info . anti_alias . graphics_bits		522978	0					
ANR	523160	IdentifierDeclType	int		522978	0					
ANR	523161	Identifier	gab		522978	1					
ANR	523162	AssignmentExpression	gab = dev -> color_info . anti_alias . graphics_bits		522978	2		=			
ANR	523163	Identifier	gab		522978	0					
ANR	523164	MemberAccess	dev -> color_info . anti_alias . graphics_bits		522978	1					
ANR	523165	MemberAccess	dev -> color_info . anti_alias		522978	0					
ANR	523166	PtrMemberAccess	dev -> color_info		522978	0					
ANR	523167	Identifier	dev		522978	0					
ANR	523168	Identifier	color_info		522978	1					
ANR	523169	Identifier	anti_alias		522978	1					
ANR	523170	Identifier	graphics_bits		522978	1					
ANR	523171	IdentifierDeclStatement	int mpbm = dev -> MaxPatternBitmap ;	1409:4:58183:58215	522978	24	True				
ANR	523172	IdentifierDecl	mpbm = dev -> MaxPatternBitmap		522978	0					
ANR	523173	IdentifierDeclType	int		522978	0					
ANR	523174	Identifier	mpbm		522978	1					
ANR	523175	AssignmentExpression	mpbm = dev -> MaxPatternBitmap		522978	2		=			
ANR	523176	Identifier	mpbm		522978	0					
ANR	523177	PtrMemberAccess	dev -> MaxPatternBitmap		522978	1					
ANR	523178	Identifier	dev		522978	0					
ANR	523179	Identifier	MaxPatternBitmap		522978	1					
ANR	523180	IdentifierDeclStatement	int ic = dev -> interpolate_control ;	1410:4:58221:58254	522978	25	True				
ANR	523181	IdentifierDecl	ic = dev -> interpolate_control		522978	0					
ANR	523182	IdentifierDeclType	int		522978	0					
ANR	523183	Identifier	ic		522978	1					
ANR	523184	AssignmentExpression	ic = dev -> interpolate_control		522978	2		=			
ANR	523185	Identifier	ic		522978	0					
ANR	523186	PtrMemberAccess	dev -> interpolate_control		522978	1					
ANR	523187	Identifier	dev		522978	0					
ANR	523188	Identifier	interpolate_control		522978	1					
ANR	523189	IdentifierDeclStatement	bool page_uses_transparency = dev -> page_uses_transparency ;	1411:4:58260:58317	522978	26	True				
ANR	523190	IdentifierDecl	page_uses_transparency = dev -> page_uses_transparency		522978	0					
ANR	523191	IdentifierDeclType	bool		522978	0					
ANR	523192	Identifier	page_uses_transparency		522978	1					
ANR	523193	AssignmentExpression	page_uses_transparency = dev -> page_uses_transparency		522978	2		=			
ANR	523194	Identifier	page_uses_transparency		522978	0					
ANR	523195	PtrMemberAccess	dev -> page_uses_transparency		522978	1					
ANR	523196	Identifier	dev		522978	0					
ANR	523197	Identifier	page_uses_transparency		522978	1					
ANR	523198	IdentifierDeclStatement	gdev_space_params sp = dev -> space_params ;	1412:4:58323:58363	522978	27	True				
ANR	523199	IdentifierDecl	sp = dev -> space_params		522978	0					
ANR	523200	IdentifierDeclType	gdev_space_params		522978	0					
ANR	523201	Identifier	sp		522978	1					
ANR	523202	AssignmentExpression	sp = dev -> space_params		522978	2		=			
ANR	523203	Identifier	sp		522978	0					
ANR	523204	PtrMemberAccess	dev -> space_params		522978	1					
ANR	523205	Identifier	dev		522978	0					
ANR	523206	Identifier	space_params		522978	1					
ANR	523207	IdentifierDeclStatement	gdev_space_params save_sp = dev -> space_params ;	1413:4:58369:58414	522978	28	True				
ANR	523208	IdentifierDecl	save_sp = dev -> space_params		522978	0					
ANR	523209	IdentifierDeclType	gdev_space_params		522978	0					
ANR	523210	Identifier	save_sp		522978	1					
ANR	523211	AssignmentExpression	save_sp = dev -> space_params		522978	2		=			
ANR	523212	Identifier	save_sp		522978	0					
ANR	523213	PtrMemberAccess	dev -> space_params		522978	1					
ANR	523214	Identifier	dev		522978	0					
ANR	523215	Identifier	space_params		522978	1					
ANR	523216	IdentifierDeclStatement	int rend_intent [ NUM_DEVICE_PROFILES ] ;	1414:4:58420:58456	522978	29	True				
ANR	523217	IdentifierDecl	rend_intent [ NUM_DEVICE_PROFILES ]		522978	0					
ANR	523218	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		522978	0					
ANR	523219	Identifier	rend_intent		522978	1					
ANR	523220	Identifier	NUM_DEVICE_PROFILES		522978	2					
ANR	523221	IdentifierDeclStatement	int blackptcomp [ NUM_DEVICE_PROFILES ] ;	1415:4:58462:58498	522978	30	True				
ANR	523222	IdentifierDecl	blackptcomp [ NUM_DEVICE_PROFILES ]		522978	0					
ANR	523223	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		522978	0					
ANR	523224	Identifier	blackptcomp		522978	1					
ANR	523225	Identifier	NUM_DEVICE_PROFILES		522978	2					
ANR	523226	IdentifierDeclStatement	int blackpreserve [ NUM_DEVICE_PROFILES ] ;	1416:4:58504:58542	522978	31	True				
ANR	523227	IdentifierDecl	blackpreserve [ NUM_DEVICE_PROFILES ]		522978	0					
ANR	523228	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		522978	0					
ANR	523229	Identifier	blackpreserve		522978	1					
ANR	523230	Identifier	NUM_DEVICE_PROFILES		522978	2					
ANR	523231	IdentifierDeclStatement	"gs_param_string cms , pagelist ;"	1417:4:58548:58577	522978	32	True				
ANR	523232	IdentifierDecl	cms		522978	0					
ANR	523233	IdentifierDeclType	gs_param_string		522978	0					
ANR	523234	Identifier	cms		522978	1					
ANR	523235	IdentifierDecl	pagelist		522978	1					
ANR	523236	IdentifierDeclType	gs_param_string		522978	0					
ANR	523237	Identifier	pagelist		522978	1					
ANR	523238	IdentifierDeclStatement	int leadingedge = dev -> LeadingEdge ;	1418:4:58583:58617	522978	33	True				
ANR	523239	IdentifierDecl	leadingedge = dev -> LeadingEdge		522978	0					
ANR	523240	IdentifierDeclType	int		522978	0					
ANR	523241	Identifier	leadingedge		522978	1					
ANR	523242	AssignmentExpression	leadingedge = dev -> LeadingEdge		522978	2		=			
ANR	523243	Identifier	leadingedge		522978	0					
ANR	523244	PtrMemberAccess	dev -> LeadingEdge		522978	1					
ANR	523245	Identifier	dev		522978	0					
ANR	523246	Identifier	LeadingEdge		522978	1					
ANR	523247	IdentifierDeclStatement	int k ;	1419:4:58623:58628	522978	34	True				
ANR	523248	IdentifierDecl	k		522978	0					
ANR	523249	IdentifierDeclType	int		522978	0					
ANR	523250	Identifier	k		522978	1					
ANR	523251	IdentifierDeclStatement	int color_accuracy ;	1420:4:58634:58652	522978	35	True				
ANR	523252	IdentifierDecl	color_accuracy		522978	0					
ANR	523253	IdentifierDeclType	int		522978	0					
ANR	523254	Identifier	color_accuracy		522978	1					
ANR	523255	IdentifierDeclStatement	bool devicegraytok = true ;	1421:4:58658:58683	522978	36	True				
ANR	523256	IdentifierDecl	devicegraytok = true		522978	0					
ANR	523257	IdentifierDeclType	bool		522978	0					
ANR	523258	Identifier	devicegraytok		522978	1					
ANR	523259	AssignmentExpression	devicegraytok = true		522978	2		=			
ANR	523260	Identifier	true		522978	0					
ANR	523261	Identifier	true		522978	1					
ANR	523262	IdentifierDeclStatement	bool graydetection = false ;	1422:4:58689:58715	522978	37	True				
ANR	523263	IdentifierDecl	graydetection = false		522978	0					
ANR	523264	IdentifierDeclType	bool		522978	0					
ANR	523265	Identifier	graydetection		522978	1					
ANR	523266	AssignmentExpression	graydetection = false		522978	2		=			
ANR	523267	Identifier	false		522978	0					
ANR	523268	Identifier	false		522978	1					
ANR	523269	IdentifierDeclStatement	bool usefastcolor = false ;	1423:4:58721:58746	522978	38	True				
ANR	523270	IdentifierDecl	usefastcolor = false		522978	0					
ANR	523271	IdentifierDeclType	bool		522978	0					
ANR	523272	Identifier	usefastcolor		522978	1					
ANR	523273	AssignmentExpression	usefastcolor = false		522978	2		=			
ANR	523274	Identifier	false		522978	0					
ANR	523275	Identifier	false		522978	1					
ANR	523276	IdentifierDeclStatement	bool sim_overprint = false ;	1424:4:58752:58778	522978	39	True				
ANR	523277	IdentifierDecl	sim_overprint = false		522978	0					
ANR	523278	IdentifierDeclType	bool		522978	0					
ANR	523279	Identifier	sim_overprint		522978	1					
ANR	523280	AssignmentExpression	sim_overprint = false		522978	2		=			
ANR	523281	Identifier	false		522978	0					
ANR	523282	Identifier	false		522978	1					
ANR	523283	IdentifierDeclStatement	bool prebandthreshold = false ;	1425:4:58784:58813	522978	40	True				
ANR	523284	IdentifierDecl	prebandthreshold = false		522978	0					
ANR	523285	IdentifierDeclType	bool		522978	0					
ANR	523286	Identifier	prebandthreshold		522978	1					
ANR	523287	AssignmentExpression	prebandthreshold = false		522978	2		=			
ANR	523288	Identifier	false		522978	0					
ANR	523289	Identifier	false		522978	1					
ANR	523290	IdentifierDeclStatement	bool use_antidropout = dev -> color_info . use_antidropout_downscaler ;	1426:4:58819:58884	522978	41	True				
ANR	523291	IdentifierDecl	use_antidropout = dev -> color_info . use_antidropout_downscaler		522978	0					
ANR	523292	IdentifierDeclType	bool		522978	0					
ANR	523293	Identifier	use_antidropout		522978	1					
ANR	523294	AssignmentExpression	use_antidropout = dev -> color_info . use_antidropout_downscaler		522978	2		=			
ANR	523295	Identifier	use_antidropout		522978	0					
ANR	523296	MemberAccess	dev -> color_info . use_antidropout_downscaler		522978	1					
ANR	523297	PtrMemberAccess	dev -> color_info		522978	0					
ANR	523298	Identifier	dev		522978	0					
ANR	523299	Identifier	color_info		522978	1					
ANR	523300	Identifier	use_antidropout_downscaler		522978	1					
ANR	523301	IdentifierDeclStatement	bool temp_bool ;	1427:4:58890:58904	522978	42	True				
ANR	523302	IdentifierDecl	temp_bool		522978	0					
ANR	523303	IdentifierDeclType	bool		522978	0					
ANR	523304	Identifier	temp_bool		522978	1					
ANR	523305	IdentifierDeclStatement	"int profile_types [ NUM_DEVICE_PROFILES ] = { gsDEFAULTPROFILE , gsGRAPHICPROFILE , gsIMAGEPROFILE , gsTEXTPROFILE } ;"	1428:4:58910:59160	522978	43	True				
ANR	523306	IdentifierDecl	"profile_types [ NUM_DEVICE_PROFILES ] = { gsDEFAULTPROFILE , gsGRAPHICPROFILE , gsIMAGEPROFILE , gsTEXTPROFILE }"		522978	0					
ANR	523307	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		522978	0					
ANR	523308	Identifier	profile_types		522978	1					
ANR	523309	Identifier	NUM_DEVICE_PROFILES		522978	2					
ANR	523310	AssignmentExpression	"profile_types [ NUM_DEVICE_PROFILES ] = { gsDEFAULTPROFILE , gsGRAPHICPROFILE , gsIMAGEPROFILE , gsTEXTPROFILE }"		522978	3		=			
ANR	523311	Identifier	NUM_DEVICE_PROFILES		522978	0					
ANR	523312	InitializerList	gsDEFAULTPROFILE		522978	1					
ANR	523313	Identifier	gsDEFAULTPROFILE		522978	0					
ANR	523314	Identifier	gsGRAPHICPROFILE		522978	1					
ANR	523315	Identifier	gsIMAGEPROFILE		522978	2					
ANR	523316	Identifier	gsTEXTPROFILE		522978	3					
ANR	523317	ExpressionStatement	color_accuracy = gsicc_currentcoloraccuracy ( dev -> memory )	1433:4:59167:59223	522978	44	True				
ANR	523318	AssignmentExpression	color_accuracy = gsicc_currentcoloraccuracy ( dev -> memory )		522978	0		=			
ANR	523319	Identifier	color_accuracy		522978	0					
ANR	523320	CallExpression	gsicc_currentcoloraccuracy ( dev -> memory )		522978	1					
ANR	523321	Callee	gsicc_currentcoloraccuracy		522978	0					
ANR	523322	Identifier	gsicc_currentcoloraccuracy		522978	0					
ANR	523323	ArgumentList	dev -> memory		522978	1					
ANR	523324	Argument	dev -> memory		522978	0					
ANR	523325	PtrMemberAccess	dev -> memory		522978	0					
ANR	523326	Identifier	dev		522978	0					
ANR	523327	Identifier	memory		522978	1					
ANR	523328	IfStatement	if ( dev -> icc_struct != NULL )		522978	45					
ANR	523329	Condition	dev -> icc_struct != NULL	1434:8:59233:59255	522978	0	True				
ANR	523330	EqualityExpression	dev -> icc_struct != NULL		522978	0		!=			
ANR	523331	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523332	Identifier	dev		522978	0					
ANR	523333	Identifier	icc_struct		522978	1					
ANR	523334	Identifier	NULL		522978	1					
ANR	523335	CompoundStatement		51:33:1946:1946	522978	1					
ANR	523336	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		522978	0					
ANR	523337	ForInit	k = 0 ;	1435:13:59273:59278	522978	0	True				
ANR	523338	AssignmentExpression	k = 0		522978	0		=			
ANR	523339	Identifier	k		522978	0					
ANR	523340	PrimaryExpression	0		522978	1					
ANR	523341	Condition	k < NUM_DEVICE_PROFILES	1435:20:59280:59302	522978	1	True				
ANR	523342	RelationalExpression	k < NUM_DEVICE_PROFILES		522978	0		<			
ANR	523343	Identifier	k		522978	0					
ANR	523344	Identifier	NUM_DEVICE_PROFILES		522978	1					
ANR	523345	PostIncDecOperationExpression	k ++	1435:45:59305:59307	522978	2	True				
ANR	523346	Identifier	k		522978	0					
ANR	523347	IncDec	++		522978	1					
ANR	523348	CompoundStatement		52:50:1998:1998	522978	3					
ANR	523349	ExpressionStatement	rend_intent [ k ] = dev -> icc_struct -> rendercond [ k ] . rendering_intent	1436:12:59324:59388	522978	0	True				
ANR	523350	AssignmentExpression	rend_intent [ k ] = dev -> icc_struct -> rendercond [ k ] . rendering_intent		522978	0		=			
ANR	523351	ArrayIndexing	rend_intent [ k ]		522978	0					
ANR	523352	Identifier	rend_intent		522978	0					
ANR	523353	Identifier	k		522978	1					
ANR	523354	MemberAccess	dev -> icc_struct -> rendercond [ k ] . rendering_intent		522978	1					
ANR	523355	ArrayIndexing	dev -> icc_struct -> rendercond [ k ]		522978	0					
ANR	523356	PtrMemberAccess	dev -> icc_struct -> rendercond		522978	0					
ANR	523357	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523358	Identifier	dev		522978	0					
ANR	523359	Identifier	icc_struct		522978	1					
ANR	523360	Identifier	rendercond		522978	1					
ANR	523361	Identifier	k		522978	1					
ANR	523362	Identifier	rendering_intent		522978	1					
ANR	523363	ExpressionStatement	blackptcomp [ k ] = dev -> icc_struct -> rendercond [ k ] . black_point_comp	1437:12:59402:59466	522978	1	True				
ANR	523364	AssignmentExpression	blackptcomp [ k ] = dev -> icc_struct -> rendercond [ k ] . black_point_comp		522978	0		=			
ANR	523365	ArrayIndexing	blackptcomp [ k ]		522978	0					
ANR	523366	Identifier	blackptcomp		522978	0					
ANR	523367	Identifier	k		522978	1					
ANR	523368	MemberAccess	dev -> icc_struct -> rendercond [ k ] . black_point_comp		522978	1					
ANR	523369	ArrayIndexing	dev -> icc_struct -> rendercond [ k ]		522978	0					
ANR	523370	PtrMemberAccess	dev -> icc_struct -> rendercond		522978	0					
ANR	523371	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523372	Identifier	dev		522978	0					
ANR	523373	Identifier	icc_struct		522978	1					
ANR	523374	Identifier	rendercond		522978	1					
ANR	523375	Identifier	k		522978	1					
ANR	523376	Identifier	black_point_comp		522978	1					
ANR	523377	ExpressionStatement	blackpreserve [ k ] = dev -> icc_struct -> rendercond [ k ] . preserve_black	1438:12:59480:59544	522978	2	True				
ANR	523378	AssignmentExpression	blackpreserve [ k ] = dev -> icc_struct -> rendercond [ k ] . preserve_black		522978	0		=			
ANR	523379	ArrayIndexing	blackpreserve [ k ]		522978	0					
ANR	523380	Identifier	blackpreserve		522978	0					
ANR	523381	Identifier	k		522978	1					
ANR	523382	MemberAccess	dev -> icc_struct -> rendercond [ k ] . preserve_black		522978	1					
ANR	523383	ArrayIndexing	dev -> icc_struct -> rendercond [ k ]		522978	0					
ANR	523384	PtrMemberAccess	dev -> icc_struct -> rendercond		522978	0					
ANR	523385	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523386	Identifier	dev		522978	0					
ANR	523387	Identifier	icc_struct		522978	1					
ANR	523388	Identifier	rendercond		522978	1					
ANR	523389	Identifier	k		522978	1					
ANR	523390	Identifier	preserve_black		522978	1					
ANR	523391	ExpressionStatement	graydetection = dev -> icc_struct -> graydetection	1440:8:59564:59610	522978	1	True				
ANR	523392	AssignmentExpression	graydetection = dev -> icc_struct -> graydetection		522978	0		=			
ANR	523393	Identifier	graydetection		522978	0					
ANR	523394	PtrMemberAccess	dev -> icc_struct -> graydetection		522978	1					
ANR	523395	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523396	Identifier	dev		522978	0					
ANR	523397	Identifier	icc_struct		522978	1					
ANR	523398	Identifier	graydetection		522978	1					
ANR	523399	ExpressionStatement	devicegraytok = dev -> icc_struct -> devicegraytok	1441:8:59620:59666	522978	2	True				
ANR	523400	AssignmentExpression	devicegraytok = dev -> icc_struct -> devicegraytok		522978	0		=			
ANR	523401	Identifier	devicegraytok		522978	0					
ANR	523402	PtrMemberAccess	dev -> icc_struct -> devicegraytok		522978	1					
ANR	523403	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523404	Identifier	dev		522978	0					
ANR	523405	Identifier	icc_struct		522978	1					
ANR	523406	Identifier	devicegraytok		522978	1					
ANR	523407	ExpressionStatement	usefastcolor = dev -> icc_struct -> usefastcolor	1442:8:59676:59720	522978	3	True				
ANR	523408	AssignmentExpression	usefastcolor = dev -> icc_struct -> usefastcolor		522978	0		=			
ANR	523409	Identifier	usefastcolor		522978	0					
ANR	523410	PtrMemberAccess	dev -> icc_struct -> usefastcolor		522978	1					
ANR	523411	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523412	Identifier	dev		522978	0					
ANR	523413	Identifier	icc_struct		522978	1					
ANR	523414	Identifier	usefastcolor		522978	1					
ANR	523415	ExpressionStatement	prebandthreshold = dev -> icc_struct -> prebandthreshold	1443:8:59730:59782	522978	4	True				
ANR	523416	AssignmentExpression	prebandthreshold = dev -> icc_struct -> prebandthreshold		522978	0		=			
ANR	523417	Identifier	prebandthreshold		522978	0					
ANR	523418	PtrMemberAccess	dev -> icc_struct -> prebandthreshold		522978	1					
ANR	523419	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523420	Identifier	dev		522978	0					
ANR	523421	Identifier	icc_struct		522978	1					
ANR	523422	Identifier	prebandthreshold		522978	1					
ANR	523423	ExpressionStatement	sim_overprint = dev -> icc_struct -> sim_overprint	1444:8:59792:59838	522978	5	True				
ANR	523424	AssignmentExpression	sim_overprint = dev -> icc_struct -> sim_overprint		522978	0		=			
ANR	523425	Identifier	sim_overprint		522978	0					
ANR	523426	PtrMemberAccess	dev -> icc_struct -> sim_overprint		522978	1					
ANR	523427	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	523428	Identifier	dev		522978	0					
ANR	523429	Identifier	icc_struct		522978	1					
ANR	523430	Identifier	sim_overprint		522978	1					
ANR	523431	ElseStatement	else		522978	0					
ANR	523432	CompoundStatement		62:11:2539:2539	522978	0					
ANR	523433	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		522978	0					
ANR	523434	ForInit	k = 0 ;	1446:13:59866:59871	522978	0	True				
ANR	523435	AssignmentExpression	k = 0		522978	0		=			
ANR	523436	Identifier	k		522978	0					
ANR	523437	PrimaryExpression	0		522978	1					
ANR	523438	Condition	k < NUM_DEVICE_PROFILES	1446:20:59873:59895	522978	1	True				
ANR	523439	RelationalExpression	k < NUM_DEVICE_PROFILES		522978	0		<			
ANR	523440	Identifier	k		522978	0					
ANR	523441	Identifier	NUM_DEVICE_PROFILES		522978	1					
ANR	523442	PostIncDecOperationExpression	k ++	1446:45:59898:59900	522978	2	True				
ANR	523443	Identifier	k		522978	0					
ANR	523444	IncDec	++		522978	1					
ANR	523445	CompoundStatement		63:50:2591:2591	522978	3					
ANR	523446	ExpressionStatement	rend_intent [ k ] = gsRINOTSPECIFIED	1447:12:59917:59950	522978	0	True				
ANR	523447	AssignmentExpression	rend_intent [ k ] = gsRINOTSPECIFIED		522978	0		=			
ANR	523448	ArrayIndexing	rend_intent [ k ]		522978	0					
ANR	523449	Identifier	rend_intent		522978	0					
ANR	523450	Identifier	k		522978	1					
ANR	523451	Identifier	gsRINOTSPECIFIED		522978	1					
ANR	523452	ExpressionStatement	blackptcomp [ k ] = gsBPNOTSPECIFIED	1448:12:59964:59997	522978	1	True				
ANR	523453	AssignmentExpression	blackptcomp [ k ] = gsBPNOTSPECIFIED		522978	0		=			
ANR	523454	ArrayIndexing	blackptcomp [ k ]		522978	0					
ANR	523455	Identifier	blackptcomp		522978	0					
ANR	523456	Identifier	k		522978	1					
ANR	523457	Identifier	gsBPNOTSPECIFIED		522978	1					
ANR	523458	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	1449:12:60011:60050	522978	2	True				
ANR	523459	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		522978	0		=			
ANR	523460	ArrayIndexing	blackpreserve [ k ]		522978	0					
ANR	523461	Identifier	blackpreserve		522978	0					
ANR	523462	Identifier	k		522978	1					
ANR	523463	Identifier	gsBKPRESNOTSPECIFIED		522978	1					
ANR	523464	Statement	define	1463:1:60336:60341	522978	46	True				
ANR	523465	Statement	BEGIN_ARRAY_PARAM	1463:8:60343:60359	522978	47	True				
ANR	523466	Statement	(	1463:25:60360:60360	522978	48	True				
ANR	523467	Statement	pread	1463:26:60361:60365	522978	49	True				
ANR	523468	Statement	","	1463:31:60366:60366	522978	50	True				
ANR	523469	Statement	pname	1463:33:60368:60372	522978	51	True				
ANR	523470	Statement	","	1463:38:60373:60373	522978	52	True				
ANR	523471	Statement	pa	1463:40:60375:60376	522978	53	True				
ANR	523472	Statement	","	1463:42:60377:60377	522978	54	True				
ANR	523473	Statement	psize	1463:44:60379:60383	522978	55	True				
ANR	523474	Statement	","	1463:49:60384:60384	522978	56	True				
ANR	523475	Statement	e	1463:51:60386:60386	522978	57	True				
ANR	523476	Statement	)	1463:52:60387:60387	522978	58	True				
ANR	523477	Statement	BEGIN	1464:4:60394:60398	522978	59	True				
ANR	523478	SwitchStatement	"switch ( code = pread ( plist , ( param_name = pname ) , & ( pa ) ) )"		522978	60					
ANR	523479	Condition	"code = pread ( plist , ( param_name = pname ) , & ( pa ) )"	1465:12:60413:60460	522978	0	True				
ANR	523480	AssignmentExpression	"code = pread ( plist , ( param_name = pname ) , & ( pa ) )"		522978	0		=			
ANR	523481	Identifier	code		522978	0					
ANR	523482	CallExpression	"pread ( plist , ( param_name = pname ) , & ( pa ) )"		522978	1					
ANR	523483	Callee	pread		522978	0					
ANR	523484	Identifier	pread		522978	0					
ANR	523485	ArgumentList	plist		522978	1					
ANR	523486	Argument	plist		522978	0					
ANR	523487	Identifier	plist		522978	0					
ANR	523488	Argument	param_name = pname		522978	1					
ANR	523489	AssignmentExpression	param_name = pname		522978	0		=			
ANR	523490	Identifier	param_name		522978	0					
ANR	523491	Identifier	pname		522978	1					
ANR	523492	Argument	& ( pa )		522978	2					
ANR	523493	UnaryOperationExpression	& ( pa )		522978	0					
ANR	523494	UnaryOperator	&		522978	0					
ANR	523495	Identifier	pa		522978	1					
ANR	523496	CompoundStatement		82:62:3151:3151	522978	1					
ANR	523497	Label	case 0 :	1466:6:60472:60478	522978	0	True				
ANR	523498	IfStatement	if ( ( pa ) . size != psize )		522978	1					
ANR	523499	Condition	( pa ) . size != psize	1467:12:60493:60510	522978	0	True				
ANR	523500	EqualityExpression	( pa ) . size != psize		522978	0		!=			
ANR	523501	MemberAccess	( pa ) . size		522978	0					
ANR	523502	Identifier	pa		522978	0					
ANR	523503	Identifier	size		522978	1					
ANR	523504	Identifier	psize		522978	1					
ANR	523505	CompoundStatement		84:32:3201:3201	522978	1					
ANR	523506	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1468:10:60526:60568	522978	0	True				
ANR	523507	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		522978	0		=			
ANR	523508	Identifier	ecode		522978	0					
ANR	523509	CallExpression	gs_note_error ( gs_error_rangecheck )		522978	1					
ANR	523510	Callee	gs_note_error		522978	0					
ANR	523511	Identifier	gs_note_error		522978	0					
ANR	523512	ArgumentList	gs_error_rangecheck		522978	1					
ANR	523513	Argument	gs_error_rangecheck		522978	0					
ANR	523514	Identifier	gs_error_rangecheck		522978	0					
ANR	523515	ExpressionStatement	( pa ) . data = 0	1469:10:60581:60594	522978	1	True				
ANR	523516	AssignmentExpression	( pa ) . data = 0		522978	0		=			
ANR	523517	MemberAccess	( pa ) . data		522978	0					
ANR	523518	Identifier	pa		522978	0					
ANR	523519	Identifier	data		522978	1					
ANR	523520	PrimaryExpression	0		522978	1					
ANR	523521	ElseStatement	else		522978	0					
ANR	523522	Statement	define	1471:1:60638:60643	522978	0	True				
ANR	523523	Statement	END_ARRAY_PARAM	1471:8:60645:60659	522978	2	True				
ANR	523524	Statement	(	1471:23:60660:60660	522978	3	True				
ANR	523525	Statement	pa	1471:24:60661:60662	522978	4	True				
ANR	523526	Statement	","	1471:26:60663:60663	522978	5	True				
ANR	523527	Statement	e	1471:28:60665:60665	522978	6	True				
ANR	523528	Statement	)	1471:29:60666:60666	522978	7	True				
ANR	523529	GotoStatement	goto e ;	1472:8:60677:60683	522978	8	True				
ANR	523530	Identifier	e		522978	0					
ANR	523531	Label	default :	1473:6:60692:60699	522978	9	True				
ANR	523532	Identifier	default		522978	0					
ANR	523533	ExpressionStatement	ecode = code	1474:8:60710:60722	522978	10	True				
ANR	523534	AssignmentExpression	ecode = code		522978	0		=			
ANR	523535	Identifier	ecode		522978	0					
ANR	523536	Identifier	code		522978	1					
ANR	523537	Label	e :	1475:0:60725:60726	522978	11	True				
ANR	523538	Identifier	e		522978	0					
ANR	523539	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1475:3:60728:60772	522978	12	True				
ANR	523540	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	523541	Callee	param_signal_error		522978	0					
ANR	523542	Identifier	param_signal_error		522978	0					
ANR	523543	ArgumentList	plist		522978	1					
ANR	523544	Argument	plist		522978	0					
ANR	523545	Identifier	plist		522978	0					
ANR	523546	Argument	param_name		522978	1					
ANR	523547	Identifier	param_name		522978	0					
ANR	523548	Argument	ecode		522978	2					
ANR	523549	Identifier	ecode		522978	0					
ANR	523550	Label	case 1 :	1476:6:60781:60787	522978	13	True				
ANR	523551	ExpressionStatement	( pa ) . data = 0	1477:8:60798:60811	522978	14	True				
ANR	523552	AssignmentExpression	( pa ) . data = 0		522978	0		=			
ANR	523553	MemberAccess	( pa ) . data		522978	0					
ANR	523554	Identifier	pa		522978	0					
ANR	523555	Identifier	data		522978	1					
ANR	523556	PrimaryExpression	0		522978	1					
ANR	523557	Statement	END	1479:4:60851:60853	522978	61	True				
ANR	523558	IfStatement	if ( leadingedge & LEADINGEDGE_REQ_BIT )		522978	62					
ANR	523559	Condition	leadingedge & LEADINGEDGE_REQ_BIT	1487:8:61121:61153	522978	0	True				
ANR	523560	BitAndExpression	leadingedge & LEADINGEDGE_REQ_BIT		522978	0		&			
ANR	523561	Identifier	leadingedge		522978	0					
ANR	523562	Identifier	LEADINGEDGE_REQ_BIT		522978	1					
ANR	523563	CompoundStatement		104:43:3844:3844	522978	1					
ANR	523564	ExpressionStatement	leadingedge = ( leadingedge & LEADINGEDGE_SET_MASK ) | ( ( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK )	1488:8:61166:61294	522978	0	True				
ANR	523565	AssignmentExpression	leadingedge = ( leadingedge & LEADINGEDGE_SET_MASK ) | ( ( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK )		522978	0		=			
ANR	523566	Identifier	leadingedge		522978	0					
ANR	523567	InclusiveOrExpression	( leadingedge & LEADINGEDGE_SET_MASK ) | ( ( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK )		522978	1		|			
ANR	523568	BitAndExpression	leadingedge & LEADINGEDGE_SET_MASK		522978	0		&			
ANR	523569	Identifier	leadingedge		522978	0					
ANR	523570	Identifier	LEADINGEDGE_SET_MASK		522978	1					
ANR	523571	BitAndExpression	( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK		522978	1		&			
ANR	523572	ShiftExpression	leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT		522978	0		>>			
ANR	523573	Identifier	leadingedge		522978	0					
ANR	523574	Identifier	LEADINGEDGE_REQ_VAL_SHIFT		522978	1					
ANR	523575	Identifier	LEADINGEDGE_MASK		522978	1					
ANR	523576	Statement	BEGIN_ARRAY_PARAM	1511:4:62268:62284	522978	63	True				
ANR	523577	Statement	(	1511:21:62285:62285	522978	64	True				
ANR	523578	Statement	param_read_float_array	1511:22:62286:62307	522978	65	True				
ANR	523579	Statement	","	1511:44:62308:62308	522978	66	True				
ANR	523580	Statement	"""HWResolution"""	1511:46:62310:62323	522978	67	True				
ANR	523581	Statement	","	1511:60:62324:62324	522978	68	True				
ANR	523582	Statement	hwra	1511:62:62326:62329	522978	69	True				
ANR	523583	Statement	","	1511:66:62330:62330	522978	70	True				
ANR	523584	Statement	2	1511:68:62332:62332	522978	71	True				
ANR	523585	Statement	","	1511:69:62333:62333	522978	72	True				
ANR	523586	Statement	hwre	1511:71:62335:62338	522978	73	True				
ANR	523587	Statement	)	1511:75:62339:62339	522978	74	True				
ANR	523588	CompoundStatement		128:77:5029:5029	522978	75					
ANR	523589	IfStatement	if ( hwra . data [ 0 ] <= 0 || hwra . data [ 1 ] <= 0 )		522978	0					
ANR	523590	Condition	hwra . data [ 0 ] <= 0 || hwra . data [ 1 ] <= 0	1512:12:62355:62392	522978	0	True				
ANR	523591	OrExpression	hwra . data [ 0 ] <= 0 || hwra . data [ 1 ] <= 0		522978	0		||			
ANR	523592	RelationalExpression	hwra . data [ 0 ] <= 0		522978	0		<=			
ANR	523593	ArrayIndexing	hwra . data [ 0 ]		522978	0					
ANR	523594	MemberAccess	hwra . data		522978	0					
ANR	523595	Identifier	hwra		522978	0					
ANR	523596	Identifier	data		522978	1					
ANR	523597	PrimaryExpression	0		522978	1					
ANR	523598	PrimaryExpression	0		522978	1					
ANR	523599	RelationalExpression	hwra . data [ 1 ] <= 0		522978	1		<=			
ANR	523600	ArrayIndexing	hwra . data [ 1 ]		522978	0					
ANR	523601	MemberAccess	hwra . data		522978	0					
ANR	523602	Identifier	hwra		522978	0					
ANR	523603	Identifier	data		522978	1					
ANR	523604	PrimaryExpression	1		522978	1					
ANR	523605	PrimaryExpression	0		522978	1					
ANR	523606	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1513:12:62407:62449	522978	1	True				
ANR	523607	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		522978	0		=			
ANR	523608	Identifier	ecode		522978	0					
ANR	523609	CallExpression	gs_note_error ( gs_error_rangecheck )		522978	1					
ANR	523610	Callee	gs_note_error		522978	0					
ANR	523611	Identifier	gs_note_error		522978	0					
ANR	523612	ArgumentList	gs_error_rangecheck		522978	1					
ANR	523613	Argument	gs_error_rangecheck		522978	0					
ANR	523614	Identifier	gs_error_rangecheck		522978	0					
ANR	523615	ElseStatement	else		522978	0					
ANR	523616	BreakStatement	break ;	1515:12:62476:62481	522978	0	True				
ANR	523617	ExpressionStatement	"END_ARRAY_PARAM ( hwra , hwre )"	1516:6:62489:62516	522978	76	True				
ANR	523618	CallExpression	"END_ARRAY_PARAM ( hwra , hwre )"		522978	0					
ANR	523619	Callee	END_ARRAY_PARAM		522978	0					
ANR	523620	Identifier	END_ARRAY_PARAM		522978	0					
ANR	523621	ArgumentList	hwra		522978	1					
ANR	523622	Argument	hwra		522978	0					
ANR	523623	Identifier	hwra		522978	0					
ANR	523624	Argument	hwre		522978	1					
ANR	523625	Identifier	hwre		522978	0					
ANR	523626	Statement	BEGIN_ARRAY_PARAM	1517:4:62522:62538	522978	77	True				
ANR	523627	Statement	(	1517:21:62539:62539	522978	78	True				
ANR	523628	Statement	param_read_int_array	1517:22:62540:62559	522978	79	True				
ANR	523629	Statement	","	1517:42:62560:62560	522978	80	True				
ANR	523630	Statement	"""HWSize"""	1517:44:62562:62569	522978	81	True				
ANR	523631	Statement	","	1517:52:62570:62570	522978	82	True				
ANR	523632	Statement	hwsa	1517:54:62572:62575	522978	83	True				
ANR	523633	Statement	","	1517:58:62576:62576	522978	84	True				
ANR	523634	Statement	2	1517:60:62578:62578	522978	85	True				
ANR	523635	Statement	","	1517:61:62579:62579	522978	86	True				
ANR	523636	Statement	hwsa	1517:63:62581:62584	522978	87	True				
ANR	523637	Statement	)	1517:67:62585:62585	522978	88	True				
ANR	523638	CompoundStatement		134:69:5275:5275	522978	89					
ANR	523639	IfStatement	if ( ( hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width ) || ( hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height ) )		522978	0					
ANR	523640	Condition	( hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width ) || ( hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height )	1520:12:62718:62832	522978	0	True				
ANR	523641	OrExpression	( hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width ) || ( hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height )		522978	0		||			
ANR	523642	AndExpression	hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width		522978	0		&&			
ANR	523643	RelationalExpression	hwsa . data [ 0 ] <= 0		522978	0		<=			
ANR	523644	ArrayIndexing	hwsa . data [ 0 ]		522978	0					
ANR	523645	MemberAccess	hwsa . data		522978	0					
ANR	523646	Identifier	hwsa		522978	0					
ANR	523647	Identifier	data		522978	1					
ANR	523648	PrimaryExpression	0		522978	1					
ANR	523649	PrimaryExpression	0		522978	1					
ANR	523650	EqualityExpression	hwsa . data [ 0 ] != dev -> width		522978	1		!=			
ANR	523651	ArrayIndexing	hwsa . data [ 0 ]		522978	0					
ANR	523652	MemberAccess	hwsa . data		522978	0					
ANR	523653	Identifier	hwsa		522978	0					
ANR	523654	Identifier	data		522978	1					
ANR	523655	PrimaryExpression	0		522978	1					
ANR	523656	PtrMemberAccess	dev -> width		522978	1					
ANR	523657	Identifier	dev		522978	0					
ANR	523658	Identifier	width		522978	1					
ANR	523659	AndExpression	hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height		522978	1		&&			
ANR	523660	RelationalExpression	hwsa . data [ 1 ] <= 0		522978	0		<=			
ANR	523661	ArrayIndexing	hwsa . data [ 1 ]		522978	0					
ANR	523662	MemberAccess	hwsa . data		522978	0					
ANR	523663	Identifier	hwsa		522978	0					
ANR	523664	Identifier	data		522978	1					
ANR	523665	PrimaryExpression	1		522978	1					
ANR	523666	PrimaryExpression	0		522978	1					
ANR	523667	EqualityExpression	hwsa . data [ 1 ] != dev -> height		522978	1		!=			
ANR	523668	ArrayIndexing	hwsa . data [ 1 ]		522978	0					
ANR	523669	MemberAccess	hwsa . data		522978	0					
ANR	523670	Identifier	hwsa		522978	0					
ANR	523671	Identifier	data		522978	1					
ANR	523672	PrimaryExpression	1		522978	1					
ANR	523673	PtrMemberAccess	dev -> height		522978	1					
ANR	523674	Identifier	dev		522978	0					
ANR	523675	Identifier	height		522978	1					
ANR	523676	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1523:12:62856:62898	522978	1	True				
ANR	523677	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		522978	0		=			
ANR	523678	Identifier	ecode		522978	0					
ANR	523679	CallExpression	gs_note_error ( gs_error_rangecheck )		522978	1					
ANR	523680	Callee	gs_note_error		522978	0					
ANR	523681	Identifier	gs_note_error		522978	0					
ANR	523682	ArgumentList	gs_error_rangecheck		522978	1					
ANR	523683	Argument	gs_error_rangecheck		522978	0					
ANR	523684	Identifier	gs_error_rangecheck		522978	0					
ANR	523685	ElseStatement	else		522978	0					
ANR	523686	IfStatement	if ( hwsa . data [ 0 ] > max_coord || hwsa . data [ 1 ] > max_coord )		522978	0					
ANR	523687	Condition	hwsa . data [ 0 ] > max_coord || hwsa . data [ 1 ] > max_coord	1526:17:62981:63032	522978	0	True				
ANR	523688	OrExpression	hwsa . data [ 0 ] > max_coord || hwsa . data [ 1 ] > max_coord		522978	0		||			
ANR	523689	RelationalExpression	hwsa . data [ 0 ] > max_coord		522978	0		>			
ANR	523690	ArrayIndexing	hwsa . data [ 0 ]		522978	0					
ANR	523691	MemberAccess	hwsa . data		522978	0					
ANR	523692	Identifier	hwsa		522978	0					
ANR	523693	Identifier	data		522978	1					
ANR	523694	PrimaryExpression	0		522978	1					
ANR	523695	Identifier	max_coord		522978	1					
ANR	523696	RelationalExpression	hwsa . data [ 1 ] > max_coord		522978	1		>			
ANR	523697	ArrayIndexing	hwsa . data [ 1 ]		522978	0					
ANR	523698	MemberAccess	hwsa . data		522978	0					
ANR	523699	Identifier	hwsa		522978	0					
ANR	523700	Identifier	data		522978	1					
ANR	523701	PrimaryExpression	1		522978	1					
ANR	523702	Identifier	max_coord		522978	1					
ANR	523703	ExpressionStatement	ecode = gs_note_error ( gs_error_limitcheck )	1527:12:63047:63089	522978	1	True				
ANR	523704	AssignmentExpression	ecode = gs_note_error ( gs_error_limitcheck )		522978	0		=			
ANR	523705	Identifier	ecode		522978	0					
ANR	523706	CallExpression	gs_note_error ( gs_error_limitcheck )		522978	1					
ANR	523707	Callee	gs_note_error		522978	0					
ANR	523708	Identifier	gs_note_error		522978	0					
ANR	523709	ArgumentList	gs_error_limitcheck		522978	1					
ANR	523710	Argument	gs_error_limitcheck		522978	0					
ANR	523711	Identifier	gs_error_limitcheck		522978	0					
ANR	523712	ElseStatement	else		522978	0					
ANR	523713	BreakStatement	break ;	1531:12:63140:63145	522978	0	True				
ANR	523714	Statement	define	1524:1:62901:62906	522978	1	True				
ANR	523715	Statement	max_coord	1524:8:62908:62916	522978	2	True				
ANR	523716	Statement	(	1524:18:62918:62918	522978	3	True				
ANR	523717	Statement	max_fixed	1524:19:62919:62927	522978	4	True				
ANR	523718	Statement	/	1524:29:62929:62929	522978	5	True				
ANR	523719	Statement	fixed_1	1524:31:62931:62937	522978	6	True				
ANR	523720	Statement	)	1524:38:62938:62938	522978	7	True				
ANR	523721	Statement	undef	1529:1:63099:63103	522978	8	True				
ANR	523722	Statement	max_coord	1529:7:63105:63113	522978	9	True				
ANR	523723	ExpressionStatement	"END_ARRAY_PARAM ( hwsa , hwse )"	1532:6:63153:63180	522978	90	True				
ANR	523724	CallExpression	"END_ARRAY_PARAM ( hwsa , hwse )"		522978	0					
ANR	523725	Callee	END_ARRAY_PARAM		522978	0					
ANR	523726	Identifier	END_ARRAY_PARAM		522978	0					
ANR	523727	ArgumentList	hwsa		522978	1					
ANR	523728	Argument	hwsa		522978	0					
ANR	523729	Identifier	hwsa		522978	0					
ANR	523730	Argument	hwse		522978	1					
ANR	523731	Identifier	hwse		522978	0					
ANR	523732	CompoundStatement		151:8:5884:5889	522978	91					
ANR	523733	IdentifierDeclStatement	int t ;	1534:8:63196:63201	522978	0	True				
ANR	523734	IdentifierDecl	t		522978	0					
ANR	523735	IdentifierDeclType	int		522978	0					
ANR	523736	Identifier	t		522978	1					
ANR	523737	ExpressionStatement	"code = param_read_int ( plist , ""LeadingEdge"" , & t )"	1536:8:63212:63259	522978	1	True				
ANR	523738	AssignmentExpression	"code = param_read_int ( plist , ""LeadingEdge"" , & t )"		522978	0		=			
ANR	523739	Identifier	code		522978	0					
ANR	523740	CallExpression	"param_read_int ( plist , ""LeadingEdge"" , & t )"		522978	1					
ANR	523741	Callee	param_read_int		522978	0					
ANR	523742	Identifier	param_read_int		522978	0					
ANR	523743	ArgumentList	plist		522978	1					
ANR	523744	Argument	plist		522978	0					
ANR	523745	Identifier	plist		522978	0					
ANR	523746	Argument	"""LeadingEdge"""		522978	1					
ANR	523747	PrimaryExpression	"""LeadingEdge"""		522978	0					
ANR	523748	Argument	& t		522978	2					
ANR	523749	UnaryOperationExpression	& t		522978	0					
ANR	523750	UnaryOperator	&		522978	0					
ANR	523751	Identifier	t		522978	1					
ANR	523752	IfStatement	if ( code < 0 )		522978	2					
ANR	523753	Condition	code < 0	1537:12:63273:63280	522978	0	True				
ANR	523754	RelationalExpression	code < 0		522978	0		<			
ANR	523755	Identifier	code		522978	0					
ANR	523756	PrimaryExpression	0		522978	1					
ANR	523757	CompoundStatement		154:22:5971:5971	522978	1					
ANR	523758	IfStatement	"if ( param_read_null ( plist , ""LeadingEdge"" ) == 0 )"		522978	0					
ANR	523759	Condition	"param_read_null ( plist , ""LeadingEdge"" ) == 0"	1538:16:63301:63342	522978	0	True				
ANR	523760	EqualityExpression	"param_read_null ( plist , ""LeadingEdge"" ) == 0"		522978	0		==			
ANR	523761	CallExpression	"param_read_null ( plist , ""LeadingEdge"" )"		522978	0					
ANR	523762	Callee	param_read_null		522978	0					
ANR	523763	Identifier	param_read_null		522978	0					
ANR	523764	ArgumentList	plist		522978	1					
ANR	523765	Argument	plist		522978	0					
ANR	523766	Identifier	plist		522978	0					
ANR	523767	Argument	"""LeadingEdge"""		522978	1					
ANR	523768	PrimaryExpression	"""LeadingEdge"""		522978	0					
ANR	523769	PrimaryExpression	0		522978	1					
ANR	523770	CompoundStatement		155:60:6033:6033	522978	1					
ANR	523771	ExpressionStatement	leadingedge &= ~LEADINGEDGE_SET_MASK	1540:16:63429:63465	522978	0	True				
ANR	523772	AssignmentExpression	leadingedge &= ~LEADINGEDGE_SET_MASK		522978	0		&=			
ANR	523773	Identifier	leadingedge		522978	0					
ANR	523774	Identifier	~LEADINGEDGE_SET_MASK		522978	1					
ANR	523775	ElseStatement	else		522978	0					
ANR	523776	CompoundStatement		158:19:6174:6174	522978	0					
ANR	523777	ExpressionStatement	ecode = code	1542:16:63504:63516	522978	0	True				
ANR	523778	AssignmentExpression	ecode = code		522978	0		=			
ANR	523779	Identifier	ecode		522978	0					
ANR	523780	Identifier	code		522978	1					
ANR	523781	ElseStatement	else		522978	0					
ANR	523782	IfStatement	if ( code == 0 )		522978	0					
ANR	523783	Condition	code == 0	1544:19:63551:63559	522978	0	True				
ANR	523784	EqualityExpression	code == 0		522978	0		==			
ANR	523785	Identifier	code		522978	0					
ANR	523786	PrimaryExpression	0		522978	1					
ANR	523787	CompoundStatement		161:30:6250:6250	522978	1					
ANR	523788	IfStatement	if ( t < 0 || t > 3 )		522978	0					
ANR	523789	Condition	t < 0 || t > 3	1545:16:63580:63593	522978	0	True				
ANR	523790	OrExpression	t < 0 || t > 3		522978	0		||			
ANR	523791	RelationalExpression	t < 0		522978	0		<			
ANR	523792	Identifier	t		522978	0					
ANR	523793	PrimaryExpression	0		522978	1					
ANR	523794	RelationalExpression	t > 3		522978	1		>			
ANR	523795	Identifier	t		522978	0					
ANR	523796	PrimaryExpression	3		522978	1					
ANR	523797	ExpressionStatement	"param_signal_error ( plist , ""LeadingEdge"" , ecode = gs_error_rangecheck )"	1546:16:63612:63716	522978	1	True				
ANR	523798	CallExpression	"param_signal_error ( plist , ""LeadingEdge"" , ecode = gs_error_rangecheck )"		522978	0					
ANR	523799	Callee	param_signal_error		522978	0					
ANR	523800	Identifier	param_signal_error		522978	0					
ANR	523801	ArgumentList	plist		522978	1					
ANR	523802	Argument	plist		522978	0					
ANR	523803	Identifier	plist		522978	0					
ANR	523804	Argument	"""LeadingEdge"""		522978	1					
ANR	523805	PrimaryExpression	"""LeadingEdge"""		522978	0					
ANR	523806	Argument	ecode = gs_error_rangecheck		522978	2					
ANR	523807	AssignmentExpression	ecode = gs_error_rangecheck		522978	0		=			
ANR	523808	Identifier	ecode		522978	0					
ANR	523809	Identifier	gs_error_rangecheck		522978	1					
ANR	523810	ElseStatement	else		522978	0					
ANR	523811	ExpressionStatement	leadingedge = LEADINGEDGE_SET_MASK | t	1549:16:63751:63789	522978	0	True				
ANR	523812	AssignmentExpression	leadingedge = LEADINGEDGE_SET_MASK | t		522978	0		=			
ANR	523813	Identifier	leadingedge		522978	0					
ANR	523814	InclusiveOrExpression	LEADINGEDGE_SET_MASK | t		522978	1		|			
ANR	523815	Identifier	LEADINGEDGE_SET_MASK		522978	0					
ANR	523816	Identifier	t		522978	1					
ANR	523817	CompoundStatement		173:8:6616:6633	522978	92					
ANR	523818	IdentifierDeclStatement	const float * res = ( hwra . data == 0 ? dev -> HWResolution : hwra . data ) ;	1553:8:63821:63888	522978	0	True				
ANR	523819	IdentifierDecl	* res = ( hwra . data == 0 ? dev -> HWResolution : hwra . data )		522978	0					
ANR	523820	IdentifierDeclType	const float *		522978	0					
ANR	523821	Identifier	res		522978	1					
ANR	523822	AssignmentExpression	* res = ( hwra . data == 0 ? dev -> HWResolution : hwra . data )		522978	2		=			
ANR	523823	Identifier	res		522978	0					
ANR	523824	ConditionalExpression	hwra . data == 0 ? dev -> HWResolution : hwra . data		522978	1					
ANR	523825	Condition	hwra . data == 0		522978	0					
ANR	523826	EqualityExpression	hwra . data == 0		522978	0		==			
ANR	523827	MemberAccess	hwra . data		522978	0					
ANR	523828	Identifier	hwra		522978	0					
ANR	523829	Identifier	data		522978	1					
ANR	523830	PrimaryExpression	0		522978	1					
ANR	523831	PtrMemberAccess	dev -> HWResolution		522978	1					
ANR	523832	Identifier	dev		522978	0					
ANR	523833	Identifier	HWResolution		522978	1					
ANR	523834	MemberAccess	hwra . data		522978	2					
ANR	523835	Identifier	hwra		522978	0					
ANR	523836	Identifier	data		522978	1					
ANR	523837	IdentifierDeclStatement	const float * data ;	1556:8:63928:63945	522978	1	True				
ANR	523838	IdentifierDecl	* data		522978	0					
ANR	523839	IdentifierDeclType	const float *		522978	0					
ANR	523840	Identifier	data		522978	1					
ANR	523841	ExpressionStatement	"code = param_MediaSize ( plist , ""PageSize"" , res , & msa )"	1560:8:64054:64106	522978	2	True				
ANR	523842	AssignmentExpression	"code = param_MediaSize ( plist , ""PageSize"" , res , & msa )"		522978	0		=			
ANR	523843	Identifier	code		522978	0					
ANR	523844	CallExpression	"param_MediaSize ( plist , ""PageSize"" , res , & msa )"		522978	1					
ANR	523845	Callee	param_MediaSize		522978	0					
ANR	523846	Identifier	param_MediaSize		522978	0					
ANR	523847	ArgumentList	plist		522978	1					
ANR	523848	Argument	plist		522978	0					
ANR	523849	Identifier	plist		522978	0					
ANR	523850	Argument	"""PageSize"""		522978	1					
ANR	523851	PrimaryExpression	"""PageSize"""		522978	0					
ANR	523852	Argument	res		522978	2					
ANR	523853	Identifier	res		522978	0					
ANR	523854	Argument	& msa		522978	3					
ANR	523855	UnaryOperationExpression	& msa		522978	0					
ANR	523856	UnaryOperator	&		522978	0					
ANR	523857	Identifier	msa		522978	1					
ANR	523858	IfStatement	if ( code < 0 )		522978	3					
ANR	523859	Condition	code < 0	1561:12:64120:64127	522978	0	True				
ANR	523860	RelationalExpression	code < 0		522978	0		<			
ANR	523861	Identifier	code		522978	0					
ANR	523862	PrimaryExpression	0		522978	1					
ANR	523863	ExpressionStatement	ecode = code	1562:12:64142:64154	522978	1	True				
ANR	523864	AssignmentExpression	ecode = code		522978	0		=			
ANR	523865	Identifier	ecode		522978	0					
ANR	523866	Identifier	code		522978	1					
ANR	523867	ExpressionStatement	data = msa . data	1565:8:64273:64288	522978	4	True				
ANR	523868	AssignmentExpression	data = msa . data		522978	0		=			
ANR	523869	Identifier	data		522978	0					
ANR	523870	MemberAccess	msa . data		522978	1					
ANR	523871	Identifier	msa		522978	0					
ANR	523872	Identifier	data		522978	1					
ANR	523873	ExpressionStatement	"code = param_MediaSize ( plist , "".MediaSize"" , res , & msa )"	1566:8:64298:64352	522978	5	True				
ANR	523874	AssignmentExpression	"code = param_MediaSize ( plist , "".MediaSize"" , res , & msa )"		522978	0		=			
ANR	523875	Identifier	code		522978	0					
ANR	523876	CallExpression	"param_MediaSize ( plist , "".MediaSize"" , res , & msa )"		522978	1					
ANR	523877	Callee	param_MediaSize		522978	0					
ANR	523878	Identifier	param_MediaSize		522978	0					
ANR	523879	ArgumentList	plist		522978	1					
ANR	523880	Argument	plist		522978	0					
ANR	523881	Identifier	plist		522978	0					
ANR	523882	Argument	""".MediaSize"""		522978	1					
ANR	523883	PrimaryExpression	""".MediaSize"""		522978	0					
ANR	523884	Argument	res		522978	2					
ANR	523885	Identifier	res		522978	0					
ANR	523886	Argument	& msa		522978	3					
ANR	523887	UnaryOperationExpression	& msa		522978	0					
ANR	523888	UnaryOperator	&		522978	0					
ANR	523889	Identifier	msa		522978	1					
ANR	523890	IfStatement	if ( code < 0 )		522978	6					
ANR	523891	Condition	code < 0	1567:12:64366:64373	522978	0	True				
ANR	523892	RelationalExpression	code < 0		522978	0		<			
ANR	523893	Identifier	code		522978	0					
ANR	523894	PrimaryExpression	0		522978	1					
ANR	523895	ExpressionStatement	ecode = code	1568:12:64388:64400	522978	1	True				
ANR	523896	AssignmentExpression	ecode = code		522978	0		=			
ANR	523897	Identifier	ecode		522978	0					
ANR	523898	Identifier	code		522978	1					
ANR	523899	ElseStatement	else		522978	0					
ANR	523900	IfStatement	if ( msa . data == 0 )		522978	0					
ANR	523901	Condition	msa . data == 0	1569:17:64419:64431	522978	0	True				
ANR	523902	EqualityExpression	msa . data == 0		522978	0		==			
ANR	523903	MemberAccess	msa . data		522978	0					
ANR	523904	Identifier	msa		522978	0					
ANR	523905	Identifier	data		522978	1					
ANR	523906	PrimaryExpression	0		522978	1					
ANR	523907	ExpressionStatement	msa . data = data	1570:12:64446:64461	522978	1	True				
ANR	523908	AssignmentExpression	msa . data = data		522978	0		=			
ANR	523909	MemberAccess	msa . data		522978	0					
ANR	523910	Identifier	msa		522978	0					
ANR	523911	Identifier	data		522978	1					
ANR	523912	Identifier	data		522978	1					
ANR	523913	Statement	BEGIN_ARRAY_PARAM	1578:4:64599:64615	522978	93	True				
ANR	523914	Statement	(	1578:21:64616:64616	522978	94	True				
ANR	523915	Statement	param_read_float_array	1578:22:64617:64638	522978	95	True				
ANR	523916	Statement	","	1578:44:64639:64639	522978	96	True				
ANR	523917	Statement	"""Margins"""	1578:46:64641:64649	522978	97	True				
ANR	523918	Statement	","	1578:55:64650:64650	522978	98	True				
ANR	523919	Statement	ma	1578:57:64652:64653	522978	99	True				
ANR	523920	Statement	","	1578:59:64654:64654	522978	100	True				
ANR	523921	Statement	2	1578:61:64656:64656	522978	101	True				
ANR	523922	Statement	","	1578:62:64657:64657	522978	102	True				
ANR	523923	Statement	me	1578:64:64659:64660	522978	103	True				
ANR	523924	Statement	)	1578:66:64661:64661	522978	104	True				
ANR	523925	CompoundStatement		195:68:7351:7351	522978	105					
ANR	523926	BreakStatement	break ;	1579:8:64673:64678	522978	0	True				
ANR	523927	ExpressionStatement	"END_ARRAY_PARAM ( ma , me )"	1580:6:64686:64709	522978	106	True				
ANR	523928	CallExpression	"END_ARRAY_PARAM ( ma , me )"		522978	0					
ANR	523929	Callee	END_ARRAY_PARAM		522978	0					
ANR	523930	Identifier	END_ARRAY_PARAM		522978	0					
ANR	523931	ArgumentList	ma		522978	1					
ANR	523932	Argument	ma		522978	0					
ANR	523933	Identifier	ma		522978	0					
ANR	523934	Argument	me		522978	1					
ANR	523935	Identifier	me		522978	0					
ANR	523936	Statement	BEGIN_ARRAY_PARAM	1581:4:64715:64731	522978	107	True				
ANR	523937	Statement	(	1581:21:64732:64732	522978	108	True				
ANR	523938	Statement	param_read_float_array	1581:22:64733:64754	522978	109	True				
ANR	523939	Statement	","	1581:44:64755:64755	522978	110	True				
ANR	523940	Statement	""".HWMargins"""	1581:46:64757:64768	522978	111	True				
ANR	523941	Statement	","	1581:58:64769:64769	522978	112	True				
ANR	523942	Statement	hwma	1581:60:64771:64774	522978	113	True				
ANR	523943	Statement	","	1581:64:64775:64775	522978	114	True				
ANR	523944	Statement	4	1581:66:64777:64777	522978	115	True				
ANR	523945	Statement	","	1581:67:64778:64778	522978	116	True				
ANR	523946	Statement	hwme	1581:69:64780:64783	522978	117	True				
ANR	523947	Statement	)	1581:73:64784:64784	522978	118	True				
ANR	523948	CompoundStatement		198:75:7474:7474	522978	119					
ANR	523949	BreakStatement	break ;	1582:8:64796:64801	522978	0	True				
ANR	523950	ExpressionStatement	"END_ARRAY_PARAM ( hwma , hwme )"	1583:6:64809:64836	522978	120	True				
ANR	523951	CallExpression	"END_ARRAY_PARAM ( hwma , hwme )"		522978	0					
ANR	523952	Callee	END_ARRAY_PARAM		522978	0					
ANR	523953	Identifier	END_ARRAY_PARAM		522978	0					
ANR	523954	ArgumentList	hwma		522978	1					
ANR	523955	Argument	hwma		522978	0					
ANR	523956	Identifier	hwma		522978	0					
ANR	523957	Argument	hwme		522978	1					
ANR	523958	Identifier	hwme		522978	0					
ANR	523959	SwitchStatement	"switch ( code = param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc ) )"		522978	121					
ANR	523960	Condition	"code = param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc )"	1584:12:64850:64920	522978	0	True				
ANR	523961	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc )"		522978	0		=			
ANR	523962	Identifier	code		522978	0					
ANR	523963	CallExpression	"param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc )"		522978	1					
ANR	523964	Callee	param_read_bool		522978	0					
ANR	523965	Identifier	param_read_bool		522978	0					
ANR	523966	ArgumentList	plist		522978	1					
ANR	523967	Argument	plist		522978	0					
ANR	523968	Identifier	plist		522978	0					
ANR	523969	Argument	"param_name = "".IgnoreNumCopies"""		522978	1					
ANR	523970	AssignmentExpression	"param_name = "".IgnoreNumCopies"""		522978	0		=			
ANR	523971	Identifier	param_name		522978	0					
ANR	523972	PrimaryExpression	""".IgnoreNumCopies"""		522978	1					
ANR	523973	Argument	& ignc		522978	2					
ANR	523974	UnaryOperationExpression	& ignc		522978	0					
ANR	523975	UnaryOperator	&		522978	0					
ANR	523976	Identifier	ignc		522978	1					
ANR	523977	CompoundStatement		201:85:7611:7611	522978	1					
ANR	523978	Label	default :	1585:8:64933:64940	522978	0	True				
ANR	523979	Identifier	default		522978	0					
ANR	523980	ExpressionStatement	ecode = code	1586:12:64954:64966	522978	1	True				
ANR	523981	AssignmentExpression	ecode = code		522978	0		=			
ANR	523982	Identifier	ecode		522978	0					
ANR	523983	Identifier	code		522978	1					
ANR	523984	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1587:12:64980:65024	522978	2	True				
ANR	523985	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	523986	Callee	param_signal_error		522978	0					
ANR	523987	Identifier	param_signal_error		522978	0					
ANR	523988	ArgumentList	plist		522978	1					
ANR	523989	Argument	plist		522978	0					
ANR	523990	Identifier	plist		522978	0					
ANR	523991	Argument	param_name		522978	1					
ANR	523992	Identifier	param_name		522978	0					
ANR	523993	Argument	ecode		522978	2					
ANR	523994	Identifier	ecode		522978	0					
ANR	523995	Label	case 0 :	1588:8:65034:65040	522978	3	True				
ANR	523996	Label	case 1 :	1589:8:65050:65056	522978	4	True				
ANR	523997	BreakStatement	break ;	1590:12:65070:65075	522978	5	True				
ANR	523998	IfStatement	"if ( dev -> NumCopies_set >= 0 && ( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0 )"		522978	122					
ANR	523999	Condition	"dev -> NumCopies_set >= 0 && ( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"	1592:8:65091:65168	522978	0	True				
ANR	524000	AndExpression	"dev -> NumCopies_set >= 0 && ( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"		522978	0		&&			
ANR	524001	RelationalExpression	dev -> NumCopies_set >= 0		522978	0		>=			
ANR	524002	PtrMemberAccess	dev -> NumCopies_set		522978	0					
ANR	524003	Identifier	dev		522978	0					
ANR	524004	Identifier	NumCopies_set		522978	1					
ANR	524005	PrimaryExpression	0		522978	1					
ANR	524006	EqualityExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"		522978	1		!=			
ANR	524007	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		522978	0					
ANR	524008	Callee	"* dev_proc ( dev , get_page_device )"		522978	0					
ANR	524009	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		522978	0					
ANR	524010	UnaryOperator	*		522978	0					
ANR	524011	CallExpression	"dev_proc ( dev , get_page_device )"		522978	1					
ANR	524012	Callee	dev_proc		522978	0					
ANR	524013	Identifier	dev_proc		522978	0					
ANR	524014	ArgumentList	dev		522978	1					
ANR	524015	Argument	dev		522978	0					
ANR	524016	Identifier	dev		522978	0					
ANR	524017	Argument	get_page_device		522978	1					
ANR	524018	Identifier	get_page_device		522978	0					
ANR	524019	ArgumentList	dev		522978	1					
ANR	524020	Argument	dev		522978	0					
ANR	524021	Identifier	dev		522978	0					
ANR	524022	PrimaryExpression	0		522978	1					
ANR	524023	CompoundStatement		211:10:7868:7868	522978	1					
ANR	524024	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci ) )"		522978	0					
ANR	524025	Condition	"code = param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci )"	1595:16:65198:65259	522978	0	True				
ANR	524026	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci )"		522978	0		=			
ANR	524027	Identifier	code		522978	0					
ANR	524028	CallExpression	"param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci )"		522978	1					
ANR	524029	Callee	param_read_int		522978	0					
ANR	524030	Identifier	param_read_int		522978	0					
ANR	524031	ArgumentList	plist		522978	1					
ANR	524032	Argument	plist		522978	0					
ANR	524033	Identifier	plist		522978	0					
ANR	524034	Argument	"param_name = ""NumCopies"""		522978	1					
ANR	524035	AssignmentExpression	"param_name = ""NumCopies"""		522978	0		=			
ANR	524036	Identifier	param_name		522978	0					
ANR	524037	PrimaryExpression	"""NumCopies"""		522978	1					
ANR	524038	Argument	& nci		522978	2					
ANR	524039	UnaryOperationExpression	& nci		522978	0					
ANR	524040	UnaryOperator	&		522978	0					
ANR	524041	Identifier	nci		522978	1					
ANR	524042	CompoundStatement		212:80:7950:7950	522978	1					
ANR	524043	Label	case 0 :	1596:12:65276:65282	522978	0	True				
ANR	524044	IfStatement	if ( nci < 0 )		522978	1					
ANR	524045	Condition	nci < 0	1597:20:65304:65310	522978	0	True				
ANR	524046	RelationalExpression	nci < 0		522978	0		<			
ANR	524047	Identifier	nci		522978	0					
ANR	524048	PrimaryExpression	0		522978	1					
ANR	524049	ExpressionStatement	ecode = gs_error_rangecheck	1598:20:65333:65360	522978	1	True				
ANR	524050	AssignmentExpression	ecode = gs_error_rangecheck		522978	0		=			
ANR	524051	Identifier	ecode		522978	0					
ANR	524052	Identifier	gs_error_rangecheck		522978	1					
ANR	524053	ElseStatement	else		522978	0					
ANR	524054	CompoundStatement		216:21:8071:8071	522978	0					
ANR	524055	ExpressionStatement	ncset = 1	1600:20:65405:65414	522978	0	True				
ANR	524056	AssignmentExpression	ncset = 1		522978	0		=			
ANR	524057	Identifier	ncset		522978	0					
ANR	524058	PrimaryExpression	1		522978	1					
ANR	524059	BreakStatement	break ;	1601:20:65436:65441	522978	1	True				
ANR	524060	GotoStatement	goto nce ;	1603:16:65477:65485	522978	2	True				
ANR	524061	Identifier	nce		522978	0					
ANR	524062	Label	default :	1604:12:65499:65506	522978	3	True				
ANR	524063	Identifier	default		522978	0					
ANR	524064	IfStatement	"if ( ( code = param_read_null ( plist , param_name ) ) == 0 )"		522978	4					
ANR	524065	Condition	"( code = param_read_null ( plist , param_name ) ) == 0"	1605:20:65528:65575	522978	0	True				
ANR	524066	EqualityExpression	"( code = param_read_null ( plist , param_name ) ) == 0"		522978	0		==			
ANR	524067	AssignmentExpression	"code = param_read_null ( plist , param_name )"		522978	0		=			
ANR	524068	Identifier	code		522978	0					
ANR	524069	CallExpression	"param_read_null ( plist , param_name )"		522978	1					
ANR	524070	Callee	param_read_null		522978	0					
ANR	524071	Identifier	param_read_null		522978	0					
ANR	524072	ArgumentList	plist		522978	1					
ANR	524073	Argument	plist		522978	0					
ANR	524074	Identifier	plist		522978	0					
ANR	524075	Argument	param_name		522978	1					
ANR	524076	Identifier	param_name		522978	0					
ANR	524077	PrimaryExpression	0		522978	1					
ANR	524078	CompoundStatement		222:70:8266:8266	522978	1					
ANR	524079	ExpressionStatement	ncset = 0	1606:20:65600:65609	522978	0	True				
ANR	524080	AssignmentExpression	ncset = 0		522978	0		=			
ANR	524081	Identifier	ncset		522978	0					
ANR	524082	PrimaryExpression	0		522978	1					
ANR	524083	BreakStatement	break ;	1607:20:65631:65636	522978	1	True				
ANR	524084	ExpressionStatement	ecode = code	1609:16:65672:65684	522978	5	True				
ANR	524085	AssignmentExpression	ecode = code		522978	0		=			
ANR	524086	Identifier	ecode		522978	0					
ANR	524087	Identifier	code		522978	1					
ANR	524088	Label	nce :	1610:0:65703:65706	522978	6	True				
ANR	524089	Identifier	nce		522978	0					
ANR	524090	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1611:16:65724:65768	522978	7	True				
ANR	524091	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524092	Callee	param_signal_error		522978	0					
ANR	524093	Identifier	param_signal_error		522978	0					
ANR	524094	ArgumentList	plist		522978	1					
ANR	524095	Argument	plist		522978	0					
ANR	524096	Identifier	plist		522978	0					
ANR	524097	Argument	param_name		522978	1					
ANR	524098	Identifier	param_name		522978	0					
ANR	524099	Argument	ecode		522978	2					
ANR	524100	Identifier	ecode		522978	0					
ANR	524101	Label	case 1 :	1612:12:65782:65788	522978	8	True				
ANR	524102	BreakStatement	break ;	1613:16:65806:65811	522978	9	True				
ANR	524103	IfStatement	"if ( ( code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro ) ) != 1 )"		522978	123					
ANR	524104	Condition	"( code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro ) ) != 1"	1617:8:65879:65945	522978	0	True				
ANR	524105	EqualityExpression	"( code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524106	AssignmentExpression	"code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro )"		522978	0		=			
ANR	524107	Identifier	code		522978	0					
ANR	524108	CallExpression	"param_read_string ( plist , ""ICCOutputColors"" , & icc_pro )"		522978	1					
ANR	524109	Callee	param_read_string		522978	0					
ANR	524110	Identifier	param_read_string		522978	0					
ANR	524111	ArgumentList	plist		522978	1					
ANR	524112	Argument	plist		522978	0					
ANR	524113	Identifier	plist		522978	0					
ANR	524114	Argument	"""ICCOutputColors"""		522978	1					
ANR	524115	PrimaryExpression	"""ICCOutputColors"""		522978	0					
ANR	524116	Argument	& icc_pro		522978	2					
ANR	524117	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524118	UnaryOperator	&		522978	0					
ANR	524119	Identifier	icc_pro		522978	1					
ANR	524120	PrimaryExpression	1		522978	1					
ANR	524121	CompoundStatement		234:77:8636:8636	522978	1					
ANR	524122	IfStatement	"if ( ( code = gx_default_put_icc_colorants ( & icc_pro , dev ) ) < 0 )"		522978	0					
ANR	524123	Condition	"( code = gx_default_put_icc_colorants ( & icc_pro , dev ) ) < 0"	1618:12:65962:66017	522978	0	True				
ANR	524124	RelationalExpression	"( code = gx_default_put_icc_colorants ( & icc_pro , dev ) ) < 0"		522978	0		<			
ANR	524125	AssignmentExpression	"code = gx_default_put_icc_colorants ( & icc_pro , dev )"		522978	0		=			
ANR	524126	Identifier	code		522978	0					
ANR	524127	CallExpression	"gx_default_put_icc_colorants ( & icc_pro , dev )"		522978	1					
ANR	524128	Callee	gx_default_put_icc_colorants		522978	0					
ANR	524129	Identifier	gx_default_put_icc_colorants		522978	0					
ANR	524130	ArgumentList	& icc_pro		522978	1					
ANR	524131	Argument	& icc_pro		522978	0					
ANR	524132	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524133	UnaryOperator	&		522978	0					
ANR	524134	Identifier	icc_pro		522978	1					
ANR	524135	Argument	dev		522978	1					
ANR	524136	Identifier	dev		522978	0					
ANR	524137	PrimaryExpression	0		522978	1					
ANR	524138	CompoundStatement		235:70:8708:8708	522978	1					
ANR	524139	ExpressionStatement	ecode = code	1619:12:66034:66046	522978	0	True				
ANR	524140	AssignmentExpression	ecode = code		522978	0		=			
ANR	524141	Identifier	ecode		522978	0					
ANR	524142	Identifier	code		522978	1					
ANR	524143	ExpressionStatement	"param_signal_error ( plist , ""ICCOutputColors"" , ecode )"	1620:12:66060:66111	522978	1	True				
ANR	524144	CallExpression	"param_signal_error ( plist , ""ICCOutputColors"" , ecode )"		522978	0					
ANR	524145	Callee	param_signal_error		522978	0					
ANR	524146	Identifier	param_signal_error		522978	0					
ANR	524147	ArgumentList	plist		522978	1					
ANR	524148	Argument	plist		522978	0					
ANR	524149	Identifier	plist		522978	0					
ANR	524150	Argument	"""ICCOutputColors"""		522978	1					
ANR	524151	PrimaryExpression	"""ICCOutputColors"""		522978	0					
ANR	524152	Argument	ecode		522978	2					
ANR	524153	Identifier	ecode		522978	0					
ANR	524154	IfStatement	"if ( ( code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro ) ) != 1 )"		522978	124					
ANR	524155	Condition	"( code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro ) ) != 1"	1623:8:66137:66205	522978	0	True				
ANR	524156	EqualityExpression	"( code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524157	AssignmentExpression	"code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro )"		522978	0		=			
ANR	524158	Identifier	code		522978	0					
ANR	524159	CallExpression	"param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro )"		522978	1					
ANR	524160	Callee	param_read_string		522978	0					
ANR	524161	Identifier	param_read_string		522978	0					
ANR	524162	ArgumentList	plist		522978	1					
ANR	524163	Argument	plist		522978	0					
ANR	524164	Identifier	plist		522978	0					
ANR	524165	Argument	"""DeviceLinkProfile"""		522978	1					
ANR	524166	PrimaryExpression	"""DeviceLinkProfile"""		522978	0					
ANR	524167	Argument	& icc_pro		522978	2					
ANR	524168	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524169	UnaryOperator	&		522978	0					
ANR	524170	Identifier	icc_pro		522978	1					
ANR	524171	PrimaryExpression	1		522978	1					
ANR	524172	CompoundStatement		240:79:8896:8896	522978	1					
ANR	524173	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE ) ) < 0 )"		522978	0					
ANR	524174	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE ) ) < 0"	1624:12:66222:66282	522978	0	True				
ANR	524175	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE ) ) < 0"		522978	0		<			
ANR	524176	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE )"		522978	0		=			
ANR	524177	Identifier	code		522978	0					
ANR	524178	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE )"		522978	1					
ANR	524179	Callee	gx_default_put_icc		522978	0					
ANR	524180	Identifier	gx_default_put_icc		522978	0					
ANR	524181	ArgumentList	& icc_pro		522978	1					
ANR	524182	Argument	& icc_pro		522978	0					
ANR	524183	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524184	UnaryOperator	&		522978	0					
ANR	524185	Identifier	icc_pro		522978	1					
ANR	524186	Argument	dev		522978	1					
ANR	524187	Identifier	dev		522978	0					
ANR	524188	Argument	gsLINKPROFILE		522978	2					
ANR	524189	Identifier	gsLINKPROFILE		522978	0					
ANR	524190	PrimaryExpression	0		522978	1					
ANR	524191	CompoundStatement		241:75:8973:8973	522978	1					
ANR	524192	ExpressionStatement	ecode = code	1625:12:66299:66311	522978	0	True				
ANR	524193	AssignmentExpression	ecode = code		522978	0		=			
ANR	524194	Identifier	ecode		522978	0					
ANR	524195	Identifier	code		522978	1					
ANR	524196	ExpressionStatement	"param_signal_error ( plist , ""DeviceLinkProfile"" , ecode )"	1626:12:66325:66378	522978	1	True				
ANR	524197	CallExpression	"param_signal_error ( plist , ""DeviceLinkProfile"" , ecode )"		522978	0					
ANR	524198	Callee	param_signal_error		522978	0					
ANR	524199	Identifier	param_signal_error		522978	0					
ANR	524200	ArgumentList	plist		522978	1					
ANR	524201	Argument	plist		522978	0					
ANR	524202	Identifier	plist		522978	0					
ANR	524203	Argument	"""DeviceLinkProfile"""		522978	1					
ANR	524204	PrimaryExpression	"""DeviceLinkProfile"""		522978	0					
ANR	524205	Argument	ecode		522978	2					
ANR	524206	Identifier	ecode		522978	0					
ANR	524207	IfStatement	"if ( ( code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro ) ) != 1 )"		522978	125					
ANR	524208	Condition	"( code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro ) ) != 1"	1629:8:66404:66472	522978	0	True				
ANR	524209	EqualityExpression	"( code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524210	AssignmentExpression	"code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro )"		522978	0		=			
ANR	524211	Identifier	code		522978	0					
ANR	524212	CallExpression	"param_read_string ( plist , ""PostRenderProfile"" , & icc_pro )"		522978	1					
ANR	524213	Callee	param_read_string		522978	0					
ANR	524214	Identifier	param_read_string		522978	0					
ANR	524215	ArgumentList	plist		522978	1					
ANR	524216	Argument	plist		522978	0					
ANR	524217	Identifier	plist		522978	0					
ANR	524218	Argument	"""PostRenderProfile"""		522978	1					
ANR	524219	PrimaryExpression	"""PostRenderProfile"""		522978	0					
ANR	524220	Argument	& icc_pro		522978	2					
ANR	524221	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524222	UnaryOperator	&		522978	0					
ANR	524223	Identifier	icc_pro		522978	1					
ANR	524224	PrimaryExpression	1		522978	1					
ANR	524225	CompoundStatement		246:79:9163:9163	522978	1					
ANR	524226	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE ) ) < 0 )"		522978	0					
ANR	524227	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE ) ) < 0"	1630:12:66489:66547	522978	0	True				
ANR	524228	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE ) ) < 0"		522978	0		<			
ANR	524229	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE )"		522978	0		=			
ANR	524230	Identifier	code		522978	0					
ANR	524231	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE )"		522978	1					
ANR	524232	Callee	gx_default_put_icc		522978	0					
ANR	524233	Identifier	gx_default_put_icc		522978	0					
ANR	524234	ArgumentList	& icc_pro		522978	1					
ANR	524235	Argument	& icc_pro		522978	0					
ANR	524236	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524237	UnaryOperator	&		522978	0					
ANR	524238	Identifier	icc_pro		522978	1					
ANR	524239	Argument	dev		522978	1					
ANR	524240	Identifier	dev		522978	0					
ANR	524241	Argument	gsPRPROFILE		522978	2					
ANR	524242	Identifier	gsPRPROFILE		522978	0					
ANR	524243	PrimaryExpression	0		522978	1					
ANR	524244	CompoundStatement		247:73:9238:9238	522978	1					
ANR	524245	ExpressionStatement	ecode = code	1631:12:66564:66576	522978	0	True				
ANR	524246	AssignmentExpression	ecode = code		522978	0		=			
ANR	524247	Identifier	ecode		522978	0					
ANR	524248	Identifier	code		522978	1					
ANR	524249	ExpressionStatement	"param_signal_error ( plist , ""PostRenderProfile"" , ecode )"	1632:12:66590:66643	522978	1	True				
ANR	524250	CallExpression	"param_signal_error ( plist , ""PostRenderProfile"" , ecode )"		522978	0					
ANR	524251	Callee	param_signal_error		522978	0					
ANR	524252	Identifier	param_signal_error		522978	0					
ANR	524253	ArgumentList	plist		522978	1					
ANR	524254	Argument	plist		522978	0					
ANR	524255	Identifier	plist		522978	0					
ANR	524256	Argument	"""PostRenderProfile"""		522978	1					
ANR	524257	PrimaryExpression	"""PostRenderProfile"""		522978	0					
ANR	524258	Argument	ecode		522978	2					
ANR	524259	Identifier	ecode		522978	0					
ANR	524260	IfStatement	"if ( ( code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro ) ) != 1 )"		522978	126					
ANR	524261	Condition	"( code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro ) ) != 1"	1635:8:66669:66736	522978	0	True				
ANR	524262	EqualityExpression	"( code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524263	AssignmentExpression	"code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro )"		522978	0		=			
ANR	524264	Identifier	code		522978	0					
ANR	524265	CallExpression	"param_read_string ( plist , ""OutputICCProfile"" , & icc_pro )"		522978	1					
ANR	524266	Callee	param_read_string		522978	0					
ANR	524267	Identifier	param_read_string		522978	0					
ANR	524268	ArgumentList	plist		522978	1					
ANR	524269	Argument	plist		522978	0					
ANR	524270	Identifier	plist		522978	0					
ANR	524271	Argument	"""OutputICCProfile"""		522978	1					
ANR	524272	PrimaryExpression	"""OutputICCProfile"""		522978	0					
ANR	524273	Argument	& icc_pro		522978	2					
ANR	524274	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524275	UnaryOperator	&		522978	0					
ANR	524276	Identifier	icc_pro		522978	1					
ANR	524277	PrimaryExpression	1		522978	1					
ANR	524278	CompoundStatement		252:78:9427:9427	522978	1					
ANR	524279	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE ) ) < 0 )"		522978	0					
ANR	524280	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE ) ) < 0"	1636:12:66753:66816	522978	0	True				
ANR	524281	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE ) ) < 0"		522978	0		<			
ANR	524282	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE )"		522978	0		=			
ANR	524283	Identifier	code		522978	0					
ANR	524284	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE )"		522978	1					
ANR	524285	Callee	gx_default_put_icc		522978	0					
ANR	524286	Identifier	gx_default_put_icc		522978	0					
ANR	524287	ArgumentList	& icc_pro		522978	1					
ANR	524288	Argument	& icc_pro		522978	0					
ANR	524289	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524290	UnaryOperator	&		522978	0					
ANR	524291	Identifier	icc_pro		522978	1					
ANR	524292	Argument	dev		522978	1					
ANR	524293	Identifier	dev		522978	0					
ANR	524294	Argument	gsDEFAULTPROFILE		522978	2					
ANR	524295	Identifier	gsDEFAULTPROFILE		522978	0					
ANR	524296	PrimaryExpression	0		522978	1					
ANR	524297	CompoundStatement		253:78:9507:9507	522978	1					
ANR	524298	ExpressionStatement	ecode = code	1637:12:66833:66845	522978	0	True				
ANR	524299	AssignmentExpression	ecode = code		522978	0		=			
ANR	524300	Identifier	ecode		522978	0					
ANR	524301	Identifier	code		522978	1					
ANR	524302	ExpressionStatement	"param_signal_error ( plist , ""OutputICCProfile"" , ecode )"	1638:12:66859:66911	522978	1	True				
ANR	524303	CallExpression	"param_signal_error ( plist , ""OutputICCProfile"" , ecode )"		522978	0					
ANR	524304	Callee	param_signal_error		522978	0					
ANR	524305	Identifier	param_signal_error		522978	0					
ANR	524306	ArgumentList	plist		522978	1					
ANR	524307	Argument	plist		522978	0					
ANR	524308	Identifier	plist		522978	0					
ANR	524309	Argument	"""OutputICCProfile"""		522978	1					
ANR	524310	PrimaryExpression	"""OutputICCProfile"""		522978	0					
ANR	524311	Argument	ecode		522978	2					
ANR	524312	Identifier	ecode		522978	0					
ANR	524313	IfStatement	"if ( ( code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro ) ) != 1 )"		522978	127					
ANR	524314	Condition	"( code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro ) ) != 1"	1643:8:67055:67123	522978	0	True				
ANR	524315	EqualityExpression	"( code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524316	AssignmentExpression	"code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro )"		522978	0		=			
ANR	524317	Identifier	code		522978	0					
ANR	524318	CallExpression	"param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro )"		522978	1					
ANR	524319	Callee	param_read_string		522978	0					
ANR	524320	Identifier	param_read_string		522978	0					
ANR	524321	ArgumentList	plist		522978	1					
ANR	524322	Argument	plist		522978	0					
ANR	524323	Identifier	plist		522978	0					
ANR	524324	Argument	"""GraphicICCProfile"""		522978	1					
ANR	524325	PrimaryExpression	"""GraphicICCProfile"""		522978	0					
ANR	524326	Argument	& icc_pro		522978	2					
ANR	524327	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524328	UnaryOperator	&		522978	0					
ANR	524329	Identifier	icc_pro		522978	1					
ANR	524330	PrimaryExpression	1		522978	1					
ANR	524331	CompoundStatement		260:79:9814:9814	522978	1					
ANR	524332	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE ) ) < 0 )"		522978	0					
ANR	524333	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE ) ) < 0"	1644:12:67140:67203	522978	0	True				
ANR	524334	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE ) ) < 0"		522978	0		<			
ANR	524335	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE )"		522978	0		=			
ANR	524336	Identifier	code		522978	0					
ANR	524337	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE )"		522978	1					
ANR	524338	Callee	gx_default_put_icc		522978	0					
ANR	524339	Identifier	gx_default_put_icc		522978	0					
ANR	524340	ArgumentList	& icc_pro		522978	1					
ANR	524341	Argument	& icc_pro		522978	0					
ANR	524342	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524343	UnaryOperator	&		522978	0					
ANR	524344	Identifier	icc_pro		522978	1					
ANR	524345	Argument	dev		522978	1					
ANR	524346	Identifier	dev		522978	0					
ANR	524347	Argument	gsGRAPHICPROFILE		522978	2					
ANR	524348	Identifier	gsGRAPHICPROFILE		522978	0					
ANR	524349	PrimaryExpression	0		522978	1					
ANR	524350	CompoundStatement		261:78:9894:9894	522978	1					
ANR	524351	ExpressionStatement	ecode = code	1645:12:67220:67232	522978	0	True				
ANR	524352	AssignmentExpression	ecode = code		522978	0		=			
ANR	524353	Identifier	ecode		522978	0					
ANR	524354	Identifier	code		522978	1					
ANR	524355	ExpressionStatement	"param_signal_error ( plist , ""GraphicICCProfile"" , ecode )"	1646:12:67246:67299	522978	1	True				
ANR	524356	CallExpression	"param_signal_error ( plist , ""GraphicICCProfile"" , ecode )"		522978	0					
ANR	524357	Callee	param_signal_error		522978	0					
ANR	524358	Identifier	param_signal_error		522978	0					
ANR	524359	ArgumentList	plist		522978	1					
ANR	524360	Argument	plist		522978	0					
ANR	524361	Identifier	plist		522978	0					
ANR	524362	Argument	"""GraphicICCProfile"""		522978	1					
ANR	524363	PrimaryExpression	"""GraphicICCProfile"""		522978	0					
ANR	524364	Argument	ecode		522978	2					
ANR	524365	Identifier	ecode		522978	0					
ANR	524366	IfStatement	"if ( ( code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro ) ) != 1 )"		522978	128					
ANR	524367	Condition	"( code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro ) ) != 1"	1649:8:67325:67391	522978	0	True				
ANR	524368	EqualityExpression	"( code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524369	AssignmentExpression	"code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro )"		522978	0		=			
ANR	524370	Identifier	code		522978	0					
ANR	524371	CallExpression	"param_read_string ( plist , ""ImageICCProfile"" , & icc_pro )"		522978	1					
ANR	524372	Callee	param_read_string		522978	0					
ANR	524373	Identifier	param_read_string		522978	0					
ANR	524374	ArgumentList	plist		522978	1					
ANR	524375	Argument	plist		522978	0					
ANR	524376	Identifier	plist		522978	0					
ANR	524377	Argument	"""ImageICCProfile"""		522978	1					
ANR	524378	PrimaryExpression	"""ImageICCProfile"""		522978	0					
ANR	524379	Argument	& icc_pro		522978	2					
ANR	524380	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524381	UnaryOperator	&		522978	0					
ANR	524382	Identifier	icc_pro		522978	1					
ANR	524383	PrimaryExpression	1		522978	1					
ANR	524384	CompoundStatement		266:77:10082:10082	522978	1					
ANR	524385	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE ) ) < 0 )"		522978	0					
ANR	524386	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE ) ) < 0"	1650:12:67408:67469	522978	0	True				
ANR	524387	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE ) ) < 0"		522978	0		<			
ANR	524388	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE )"		522978	0		=			
ANR	524389	Identifier	code		522978	0					
ANR	524390	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE )"		522978	1					
ANR	524391	Callee	gx_default_put_icc		522978	0					
ANR	524392	Identifier	gx_default_put_icc		522978	0					
ANR	524393	ArgumentList	& icc_pro		522978	1					
ANR	524394	Argument	& icc_pro		522978	0					
ANR	524395	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524396	UnaryOperator	&		522978	0					
ANR	524397	Identifier	icc_pro		522978	1					
ANR	524398	Argument	dev		522978	1					
ANR	524399	Identifier	dev		522978	0					
ANR	524400	Argument	gsIMAGEPROFILE		522978	2					
ANR	524401	Identifier	gsIMAGEPROFILE		522978	0					
ANR	524402	PrimaryExpression	0		522978	1					
ANR	524403	CompoundStatement		267:76:10160:10160	522978	1					
ANR	524404	ExpressionStatement	ecode = code	1651:12:67486:67498	522978	0	True				
ANR	524405	AssignmentExpression	ecode = code		522978	0		=			
ANR	524406	Identifier	ecode		522978	0					
ANR	524407	Identifier	code		522978	1					
ANR	524408	ExpressionStatement	"param_signal_error ( plist , ""ImageICCProfile"" , ecode )"	1652:12:67512:67563	522978	1	True				
ANR	524409	CallExpression	"param_signal_error ( plist , ""ImageICCProfile"" , ecode )"		522978	0					
ANR	524410	Callee	param_signal_error		522978	0					
ANR	524411	Identifier	param_signal_error		522978	0					
ANR	524412	ArgumentList	plist		522978	1					
ANR	524413	Argument	plist		522978	0					
ANR	524414	Identifier	plist		522978	0					
ANR	524415	Argument	"""ImageICCProfile"""		522978	1					
ANR	524416	PrimaryExpression	"""ImageICCProfile"""		522978	0					
ANR	524417	Argument	ecode		522978	2					
ANR	524418	Identifier	ecode		522978	0					
ANR	524419	IfStatement	"if ( ( code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro ) ) != 1 )"		522978	129					
ANR	524420	Condition	"( code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro ) ) != 1"	1655:8:67589:67654	522978	0	True				
ANR	524421	EqualityExpression	"( code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524422	AssignmentExpression	"code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro )"		522978	0		=			
ANR	524423	Identifier	code		522978	0					
ANR	524424	CallExpression	"param_read_string ( plist , ""TextICCProfile"" , & icc_pro )"		522978	1					
ANR	524425	Callee	param_read_string		522978	0					
ANR	524426	Identifier	param_read_string		522978	0					
ANR	524427	ArgumentList	plist		522978	1					
ANR	524428	Argument	plist		522978	0					
ANR	524429	Identifier	plist		522978	0					
ANR	524430	Argument	"""TextICCProfile"""		522978	1					
ANR	524431	PrimaryExpression	"""TextICCProfile"""		522978	0					
ANR	524432	Argument	& icc_pro		522978	2					
ANR	524433	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524434	UnaryOperator	&		522978	0					
ANR	524435	Identifier	icc_pro		522978	1					
ANR	524436	PrimaryExpression	1		522978	1					
ANR	524437	CompoundStatement		272:76:10345:10345	522978	1					
ANR	524438	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE ) ) < 0 )"		522978	0					
ANR	524439	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE ) ) < 0"	1656:12:67671:67731	522978	0	True				
ANR	524440	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE ) ) < 0"		522978	0		<			
ANR	524441	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE )"		522978	0		=			
ANR	524442	Identifier	code		522978	0					
ANR	524443	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE )"		522978	1					
ANR	524444	Callee	gx_default_put_icc		522978	0					
ANR	524445	Identifier	gx_default_put_icc		522978	0					
ANR	524446	ArgumentList	& icc_pro		522978	1					
ANR	524447	Argument	& icc_pro		522978	0					
ANR	524448	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524449	UnaryOperator	&		522978	0					
ANR	524450	Identifier	icc_pro		522978	1					
ANR	524451	Argument	dev		522978	1					
ANR	524452	Identifier	dev		522978	0					
ANR	524453	Argument	gsTEXTPROFILE		522978	2					
ANR	524454	Identifier	gsTEXTPROFILE		522978	0					
ANR	524455	PrimaryExpression	0		522978	1					
ANR	524456	CompoundStatement		273:75:10422:10422	522978	1					
ANR	524457	ExpressionStatement	ecode = code	1657:12:67748:67760	522978	0	True				
ANR	524458	AssignmentExpression	ecode = code		522978	0		=			
ANR	524459	Identifier	ecode		522978	0					
ANR	524460	Identifier	code		522978	1					
ANR	524461	ExpressionStatement	"param_signal_error ( plist , ""TextICCProfile"" , ecode )"	1658:12:67774:67824	522978	1	True				
ANR	524462	CallExpression	"param_signal_error ( plist , ""TextICCProfile"" , ecode )"		522978	0					
ANR	524463	Callee	param_signal_error		522978	0					
ANR	524464	Identifier	param_signal_error		522978	0					
ANR	524465	ArgumentList	plist		522978	1					
ANR	524466	Argument	plist		522978	0					
ANR	524467	Identifier	plist		522978	0					
ANR	524468	Argument	"""TextICCProfile"""		522978	1					
ANR	524469	PrimaryExpression	"""TextICCProfile"""		522978	0					
ANR	524470	Argument	ecode		522978	2					
ANR	524471	Identifier	ecode		522978	0					
ANR	524472	IfStatement	"if ( ( code = param_read_string ( plist , ""ProofProfile"" , & icc_pro ) ) != 1 )"		522978	130					
ANR	524473	Condition	"( code = param_read_string ( plist , ""ProofProfile"" , & icc_pro ) ) != 1"	1661:8:67850:67913	522978	0	True				
ANR	524474	EqualityExpression	"( code = param_read_string ( plist , ""ProofProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524475	AssignmentExpression	"code = param_read_string ( plist , ""ProofProfile"" , & icc_pro )"		522978	0		=			
ANR	524476	Identifier	code		522978	0					
ANR	524477	CallExpression	"param_read_string ( plist , ""ProofProfile"" , & icc_pro )"		522978	1					
ANR	524478	Callee	param_read_string		522978	0					
ANR	524479	Identifier	param_read_string		522978	0					
ANR	524480	ArgumentList	plist		522978	1					
ANR	524481	Argument	plist		522978	0					
ANR	524482	Identifier	plist		522978	0					
ANR	524483	Argument	"""ProofProfile"""		522978	1					
ANR	524484	PrimaryExpression	"""ProofProfile"""		522978	0					
ANR	524485	Argument	& icc_pro		522978	2					
ANR	524486	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524487	UnaryOperator	&		522978	0					
ANR	524488	Identifier	icc_pro		522978	1					
ANR	524489	PrimaryExpression	1		522978	1					
ANR	524490	CompoundStatement		278:74:10604:10604	522978	1					
ANR	524491	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE ) ) < 0 )"		522978	0					
ANR	524492	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE ) ) < 0"	1662:12:67930:67991	522978	0	True				
ANR	524493	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE ) ) < 0"		522978	0		<			
ANR	524494	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE )"		522978	0		=			
ANR	524495	Identifier	code		522978	0					
ANR	524496	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE )"		522978	1					
ANR	524497	Callee	gx_default_put_icc		522978	0					
ANR	524498	Identifier	gx_default_put_icc		522978	0					
ANR	524499	ArgumentList	& icc_pro		522978	1					
ANR	524500	Argument	& icc_pro		522978	0					
ANR	524501	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524502	UnaryOperator	&		522978	0					
ANR	524503	Identifier	icc_pro		522978	1					
ANR	524504	Argument	dev		522978	1					
ANR	524505	Identifier	dev		522978	0					
ANR	524506	Argument	gsPROOFPROFILE		522978	2					
ANR	524507	Identifier	gsPROOFPROFILE		522978	0					
ANR	524508	PrimaryExpression	0		522978	1					
ANR	524509	CompoundStatement		279:76:10682:10682	522978	1					
ANR	524510	ExpressionStatement	ecode = code	1663:12:68008:68020	522978	0	True				
ANR	524511	AssignmentExpression	ecode = code		522978	0		=			
ANR	524512	Identifier	ecode		522978	0					
ANR	524513	Identifier	code		522978	1					
ANR	524514	ExpressionStatement	"param_signal_error ( plist , ""ProofProfile"" , ecode )"	1664:12:68034:68082	522978	1	True				
ANR	524515	CallExpression	"param_signal_error ( plist , ""ProofProfile"" , ecode )"		522978	0					
ANR	524516	Callee	param_signal_error		522978	0					
ANR	524517	Identifier	param_signal_error		522978	0					
ANR	524518	ArgumentList	plist		522978	1					
ANR	524519	Argument	plist		522978	0					
ANR	524520	Identifier	plist		522978	0					
ANR	524521	Argument	"""ProofProfile"""		522978	1					
ANR	524522	PrimaryExpression	"""ProofProfile"""		522978	0					
ANR	524523	Argument	ecode		522978	2					
ANR	524524	Identifier	ecode		522978	0					
ANR	524525	IfStatement	"if ( ( code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro ) ) != 1 )"		522978	131					
ANR	524526	Condition	"( code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro ) ) != 1"	1667:8:68108:68176	522978	0	True				
ANR	524527	EqualityExpression	"( code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro ) ) != 1"		522978	0		!=			
ANR	524528	AssignmentExpression	"code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro )"		522978	0		=			
ANR	524529	Identifier	code		522978	0					
ANR	524530	CallExpression	"param_read_string ( plist , ""BlendColorProfile"" , & icc_pro )"		522978	1					
ANR	524531	Callee	param_read_string		522978	0					
ANR	524532	Identifier	param_read_string		522978	0					
ANR	524533	ArgumentList	plist		522978	1					
ANR	524534	Argument	plist		522978	0					
ANR	524535	Identifier	plist		522978	0					
ANR	524536	Argument	"""BlendColorProfile"""		522978	1					
ANR	524537	PrimaryExpression	"""BlendColorProfile"""		522978	0					
ANR	524538	Argument	& icc_pro		522978	2					
ANR	524539	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524540	UnaryOperator	&		522978	0					
ANR	524541	Identifier	icc_pro		522978	1					
ANR	524542	PrimaryExpression	1		522978	1					
ANR	524543	CompoundStatement		284:79:10867:10867	522978	1					
ANR	524544	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE ) ) < 0 )"		522978	0					
ANR	524545	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE ) ) < 0"	1668:12:68193:68254	522978	0	True				
ANR	524546	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE ) ) < 0"		522978	0		<			
ANR	524547	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE )"		522978	0		=			
ANR	524548	Identifier	code		522978	0					
ANR	524549	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE )"		522978	1					
ANR	524550	Callee	gx_default_put_icc		522978	0					
ANR	524551	Identifier	gx_default_put_icc		522978	0					
ANR	524552	ArgumentList	& icc_pro		522978	1					
ANR	524553	Argument	& icc_pro		522978	0					
ANR	524554	UnaryOperationExpression	& icc_pro		522978	0					
ANR	524555	UnaryOperator	&		522978	0					
ANR	524556	Identifier	icc_pro		522978	1					
ANR	524557	Argument	dev		522978	1					
ANR	524558	Identifier	dev		522978	0					
ANR	524559	Argument	gsBLENDPROFILE		522978	2					
ANR	524560	Identifier	gsBLENDPROFILE		522978	0					
ANR	524561	PrimaryExpression	0		522978	1					
ANR	524562	CompoundStatement		285:76:10945:10945	522978	1					
ANR	524563	ExpressionStatement	ecode = code	1669:12:68271:68283	522978	0	True				
ANR	524564	AssignmentExpression	ecode = code		522978	0		=			
ANR	524565	Identifier	ecode		522978	0					
ANR	524566	Identifier	code		522978	1					
ANR	524567	ExpressionStatement	"param_signal_error ( plist , ""BlendColorProfile"" , ecode )"	1670:12:68297:68350	522978	1	True				
ANR	524568	CallExpression	"param_signal_error ( plist , ""BlendColorProfile"" , ecode )"		522978	0					
ANR	524569	Callee	param_signal_error		522978	0					
ANR	524570	Identifier	param_signal_error		522978	0					
ANR	524571	ArgumentList	plist		522978	1					
ANR	524572	Argument	plist		522978	0					
ANR	524573	Identifier	plist		522978	0					
ANR	524574	Argument	"""BlendColorProfile"""		522978	1					
ANR	524575	PrimaryExpression	"""BlendColorProfile"""		522978	0					
ANR	524576	Argument	ecode		522978	2					
ANR	524577	Identifier	ecode		522978	0					
ANR	524578	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) ) ) < 0 )"		522978	132					
ANR	524579	Condition	"( code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) ) ) < 0"	1673:8:68376:68511	522978	0	True				
ANR	524580	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) ) ) < 0"		522978	0		<			
ANR	524581	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) )"		522978	0		=			
ANR	524582	Identifier	code		522978	0					
ANR	524583	CallExpression	"param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) )"		522978	1					
ANR	524584	Callee	param_read_int		522978	0					
ANR	524585	Identifier	param_read_int		522978	0					
ANR	524586	ArgumentList	plist		522978	1					
ANR	524587	Argument	plist		522978	0					
ANR	524588	Identifier	plist		522978	0					
ANR	524589	Argument	"param_name = ""RenderIntent"""		522978	1					
ANR	524590	AssignmentExpression	"param_name = ""RenderIntent"""		522978	0		=			
ANR	524591	Identifier	param_name		522978	0					
ANR	524592	PrimaryExpression	"""RenderIntent"""		522978	1					
ANR	524593	Argument	& ( rend_intent [ 0 ] )		522978	2					
ANR	524594	UnaryOperationExpression	& ( rend_intent [ 0 ] )		522978	0					
ANR	524595	UnaryOperator	&		522978	0					
ANR	524596	ArrayIndexing	rend_intent [ 0 ]		522978	1					
ANR	524597	Identifier	rend_intent		522978	0					
ANR	524598	PrimaryExpression	0		522978	1					
ANR	524599	PrimaryExpression	0		522978	1					
ANR	524600	CompoundStatement		291:77:11202:11202	522978	1					
ANR	524601	ExpressionStatement	ecode = code	1675:8:68524:68536	522978	0	True				
ANR	524602	AssignmentExpression	ecode = code		522978	0		=			
ANR	524603	Identifier	ecode		522978	0					
ANR	524604	Identifier	code		522978	1					
ANR	524605	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1676:8:68546:68590	522978	1	True				
ANR	524606	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524607	Callee	param_signal_error		522978	0					
ANR	524608	Identifier	param_signal_error		522978	0					
ANR	524609	ArgumentList	plist		522978	1					
ANR	524610	Argument	plist		522978	0					
ANR	524611	Identifier	plist		522978	0					
ANR	524612	Argument	param_name		522978	1					
ANR	524613	Identifier	param_name		522978	0					
ANR	524614	Argument	ecode		522978	2					
ANR	524615	Identifier	ecode		522978	0					
ANR	524616	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) ) ) < 0 )"		522978	133					
ANR	524617	Condition	"( code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) ) ) < 0"	1678:8:68606:68742	522978	0	True				
ANR	524618	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) ) ) < 0"		522978	0		<			
ANR	524619	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) )"		522978	0		=			
ANR	524620	Identifier	code		522978	0					
ANR	524621	CallExpression	"param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) )"		522978	1					
ANR	524622	Callee	param_read_int		522978	0					
ANR	524623	Identifier	param_read_int		522978	0					
ANR	524624	ArgumentList	plist		522978	1					
ANR	524625	Argument	plist		522978	0					
ANR	524626	Identifier	plist		522978	0					
ANR	524627	Argument	"param_name = ""GraphicIntent"""		522978	1					
ANR	524628	AssignmentExpression	"param_name = ""GraphicIntent"""		522978	0		=			
ANR	524629	Identifier	param_name		522978	0					
ANR	524630	PrimaryExpression	"""GraphicIntent"""		522978	1					
ANR	524631	Argument	& ( rend_intent [ 1 ] )		522978	2					
ANR	524632	UnaryOperationExpression	& ( rend_intent [ 1 ] )		522978	0					
ANR	524633	UnaryOperator	&		522978	0					
ANR	524634	ArrayIndexing	rend_intent [ 1 ]		522978	1					
ANR	524635	Identifier	rend_intent		522978	0					
ANR	524636	PrimaryExpression	1		522978	1					
ANR	524637	PrimaryExpression	0		522978	1					
ANR	524638	CompoundStatement		296:77:11433:11433	522978	1					
ANR	524639	ExpressionStatement	ecode = code	1680:8:68755:68767	522978	0	True				
ANR	524640	AssignmentExpression	ecode = code		522978	0		=			
ANR	524641	Identifier	ecode		522978	0					
ANR	524642	Identifier	code		522978	1					
ANR	524643	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1681:8:68777:68821	522978	1	True				
ANR	524644	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524645	Callee	param_signal_error		522978	0					
ANR	524646	Identifier	param_signal_error		522978	0					
ANR	524647	ArgumentList	plist		522978	1					
ANR	524648	Argument	plist		522978	0					
ANR	524649	Identifier	plist		522978	0					
ANR	524650	Argument	param_name		522978	1					
ANR	524651	Identifier	param_name		522978	0					
ANR	524652	Argument	ecode		522978	2					
ANR	524653	Identifier	ecode		522978	0					
ANR	524654	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) ) ) < 0 )"		522978	134					
ANR	524655	Condition	"( code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) ) ) < 0"	1683:8:68837:68971	522978	0	True				
ANR	524656	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) ) ) < 0"		522978	0		<			
ANR	524657	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) )"		522978	0		=			
ANR	524658	Identifier	code		522978	0					
ANR	524659	CallExpression	"param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) )"		522978	1					
ANR	524660	Callee	param_read_int		522978	0					
ANR	524661	Identifier	param_read_int		522978	0					
ANR	524662	ArgumentList	plist		522978	1					
ANR	524663	Argument	plist		522978	0					
ANR	524664	Identifier	plist		522978	0					
ANR	524665	Argument	"param_name = ""ImageIntent"""		522978	1					
ANR	524666	AssignmentExpression	"param_name = ""ImageIntent"""		522978	0		=			
ANR	524667	Identifier	param_name		522978	0					
ANR	524668	PrimaryExpression	"""ImageIntent"""		522978	1					
ANR	524669	Argument	& ( rend_intent [ 2 ] )		522978	2					
ANR	524670	UnaryOperationExpression	& ( rend_intent [ 2 ] )		522978	0					
ANR	524671	UnaryOperator	&		522978	0					
ANR	524672	ArrayIndexing	rend_intent [ 2 ]		522978	1					
ANR	524673	Identifier	rend_intent		522978	0					
ANR	524674	PrimaryExpression	2		522978	1					
ANR	524675	PrimaryExpression	0		522978	1					
ANR	524676	CompoundStatement		301:77:11662:11662	522978	1					
ANR	524677	ExpressionStatement	ecode = code	1685:8:68984:68996	522978	0	True				
ANR	524678	AssignmentExpression	ecode = code		522978	0		=			
ANR	524679	Identifier	ecode		522978	0					
ANR	524680	Identifier	code		522978	1					
ANR	524681	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1686:8:69006:69050	522978	1	True				
ANR	524682	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524683	Callee	param_signal_error		522978	0					
ANR	524684	Identifier	param_signal_error		522978	0					
ANR	524685	ArgumentList	plist		522978	1					
ANR	524686	Argument	plist		522978	0					
ANR	524687	Identifier	plist		522978	0					
ANR	524688	Argument	param_name		522978	1					
ANR	524689	Identifier	param_name		522978	0					
ANR	524690	Argument	ecode		522978	2					
ANR	524691	Identifier	ecode		522978	0					
ANR	524692	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) ) ) < 0 )"		522978	135					
ANR	524693	Condition	"( code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) ) ) < 0"	1688:8:69066:69199	522978	0	True				
ANR	524694	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) ) ) < 0"		522978	0		<			
ANR	524695	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) )"		522978	0		=			
ANR	524696	Identifier	code		522978	0					
ANR	524697	CallExpression	"param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) )"		522978	1					
ANR	524698	Callee	param_read_int		522978	0					
ANR	524699	Identifier	param_read_int		522978	0					
ANR	524700	ArgumentList	plist		522978	1					
ANR	524701	Argument	plist		522978	0					
ANR	524702	Identifier	plist		522978	0					
ANR	524703	Argument	"param_name = ""TextIntent"""		522978	1					
ANR	524704	AssignmentExpression	"param_name = ""TextIntent"""		522978	0		=			
ANR	524705	Identifier	param_name		522978	0					
ANR	524706	PrimaryExpression	"""TextIntent"""		522978	1					
ANR	524707	Argument	& ( rend_intent [ 3 ] )		522978	2					
ANR	524708	UnaryOperationExpression	& ( rend_intent [ 3 ] )		522978	0					
ANR	524709	UnaryOperator	&		522978	0					
ANR	524710	ArrayIndexing	rend_intent [ 3 ]		522978	1					
ANR	524711	Identifier	rend_intent		522978	0					
ANR	524712	PrimaryExpression	3		522978	1					
ANR	524713	PrimaryExpression	0		522978	1					
ANR	524714	CompoundStatement		306:77:11890:11890	522978	1					
ANR	524715	ExpressionStatement	ecode = code	1690:8:69212:69224	522978	0	True				
ANR	524716	AssignmentExpression	ecode = code		522978	0		=			
ANR	524717	Identifier	ecode		522978	0					
ANR	524718	Identifier	code		522978	1					
ANR	524719	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1691:8:69234:69278	522978	1	True				
ANR	524720	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524721	Callee	param_signal_error		522978	0					
ANR	524722	Identifier	param_signal_error		522978	0					
ANR	524723	ArgumentList	plist		522978	1					
ANR	524724	Argument	plist		522978	0					
ANR	524725	Identifier	plist		522978	0					
ANR	524726	Argument	param_name		522978	1					
ANR	524727	Identifier	param_name		522978	0					
ANR	524728	Argument	ecode		522978	2					
ANR	524729	Identifier	ecode		522978	0					
ANR	524730	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) ) ) < 0 )"		522978	136					
ANR	524731	Condition	"( code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) ) ) < 0"	1693:8:69294:69428	522978	0	True				
ANR	524732	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) ) ) < 0"		522978	0		<			
ANR	524733	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) )"		522978	0		=			
ANR	524734	Identifier	code		522978	0					
ANR	524735	CallExpression	"param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) )"		522978	1					
ANR	524736	Callee	param_read_int		522978	0					
ANR	524737	Identifier	param_read_int		522978	0					
ANR	524738	ArgumentList	plist		522978	1					
ANR	524739	Argument	plist		522978	0					
ANR	524740	Identifier	plist		522978	0					
ANR	524741	Argument	"param_name = ""BlackPtComp"""		522978	1					
ANR	524742	AssignmentExpression	"param_name = ""BlackPtComp"""		522978	0		=			
ANR	524743	Identifier	param_name		522978	0					
ANR	524744	PrimaryExpression	"""BlackPtComp"""		522978	1					
ANR	524745	Argument	& ( blackptcomp [ 0 ] )		522978	2					
ANR	524746	UnaryOperationExpression	& ( blackptcomp [ 0 ] )		522978	0					
ANR	524747	UnaryOperator	&		522978	0					
ANR	524748	ArrayIndexing	blackptcomp [ 0 ]		522978	1					
ANR	524749	Identifier	blackptcomp		522978	0					
ANR	524750	PrimaryExpression	0		522978	1					
ANR	524751	PrimaryExpression	0		522978	1					
ANR	524752	CompoundStatement		311:77:12119:12119	522978	1					
ANR	524753	ExpressionStatement	ecode = code	1695:8:69441:69453	522978	0	True				
ANR	524754	AssignmentExpression	ecode = code		522978	0		=			
ANR	524755	Identifier	ecode		522978	0					
ANR	524756	Identifier	code		522978	1					
ANR	524757	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1696:8:69463:69507	522978	1	True				
ANR	524758	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524759	Callee	param_signal_error		522978	0					
ANR	524760	Identifier	param_signal_error		522978	0					
ANR	524761	ArgumentList	plist		522978	1					
ANR	524762	Argument	plist		522978	0					
ANR	524763	Identifier	plist		522978	0					
ANR	524764	Argument	param_name		522978	1					
ANR	524765	Identifier	param_name		522978	0					
ANR	524766	Argument	ecode		522978	2					
ANR	524767	Identifier	ecode		522978	0					
ANR	524768	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) ) ) < 0 )"		522978	137					
ANR	524769	Condition	"( code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) ) ) < 0"	1698:8:69523:69660	522978	0	True				
ANR	524770	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) ) ) < 0"		522978	0		<			
ANR	524771	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) )"		522978	0		=			
ANR	524772	Identifier	code		522978	0					
ANR	524773	CallExpression	"param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) )"		522978	1					
ANR	524774	Callee	param_read_int		522978	0					
ANR	524775	Identifier	param_read_int		522978	0					
ANR	524776	ArgumentList	plist		522978	1					
ANR	524777	Argument	plist		522978	0					
ANR	524778	Identifier	plist		522978	0					
ANR	524779	Argument	"param_name = ""GraphicBlackPt"""		522978	1					
ANR	524780	AssignmentExpression	"param_name = ""GraphicBlackPt"""		522978	0		=			
ANR	524781	Identifier	param_name		522978	0					
ANR	524782	PrimaryExpression	"""GraphicBlackPt"""		522978	1					
ANR	524783	Argument	& ( blackptcomp [ 1 ] )		522978	2					
ANR	524784	UnaryOperationExpression	& ( blackptcomp [ 1 ] )		522978	0					
ANR	524785	UnaryOperator	&		522978	0					
ANR	524786	ArrayIndexing	blackptcomp [ 1 ]		522978	1					
ANR	524787	Identifier	blackptcomp		522978	0					
ANR	524788	PrimaryExpression	1		522978	1					
ANR	524789	PrimaryExpression	0		522978	1					
ANR	524790	CompoundStatement		316:77:12351:12351	522978	1					
ANR	524791	ExpressionStatement	ecode = code	1700:8:69673:69685	522978	0	True				
ANR	524792	AssignmentExpression	ecode = code		522978	0		=			
ANR	524793	Identifier	ecode		522978	0					
ANR	524794	Identifier	code		522978	1					
ANR	524795	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1701:8:69695:69739	522978	1	True				
ANR	524796	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524797	Callee	param_signal_error		522978	0					
ANR	524798	Identifier	param_signal_error		522978	0					
ANR	524799	ArgumentList	plist		522978	1					
ANR	524800	Argument	plist		522978	0					
ANR	524801	Identifier	plist		522978	0					
ANR	524802	Argument	param_name		522978	1					
ANR	524803	Identifier	param_name		522978	0					
ANR	524804	Argument	ecode		522978	2					
ANR	524805	Identifier	ecode		522978	0					
ANR	524806	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) ) ) < 0 )"		522978	138					
ANR	524807	Condition	"( code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) ) ) < 0"	1703:8:69755:69890	522978	0	True				
ANR	524808	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) ) ) < 0"		522978	0		<			
ANR	524809	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) )"		522978	0		=			
ANR	524810	Identifier	code		522978	0					
ANR	524811	CallExpression	"param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) )"		522978	1					
ANR	524812	Callee	param_read_int		522978	0					
ANR	524813	Identifier	param_read_int		522978	0					
ANR	524814	ArgumentList	plist		522978	1					
ANR	524815	Argument	plist		522978	0					
ANR	524816	Identifier	plist		522978	0					
ANR	524817	Argument	"param_name = ""ImageBlackPt"""		522978	1					
ANR	524818	AssignmentExpression	"param_name = ""ImageBlackPt"""		522978	0		=			
ANR	524819	Identifier	param_name		522978	0					
ANR	524820	PrimaryExpression	"""ImageBlackPt"""		522978	1					
ANR	524821	Argument	& ( blackptcomp [ 2 ] )		522978	2					
ANR	524822	UnaryOperationExpression	& ( blackptcomp [ 2 ] )		522978	0					
ANR	524823	UnaryOperator	&		522978	0					
ANR	524824	ArrayIndexing	blackptcomp [ 2 ]		522978	1					
ANR	524825	Identifier	blackptcomp		522978	0					
ANR	524826	PrimaryExpression	2		522978	1					
ANR	524827	PrimaryExpression	0		522978	1					
ANR	524828	CompoundStatement		321:77:12581:12581	522978	1					
ANR	524829	ExpressionStatement	ecode = code	1705:8:69903:69915	522978	0	True				
ANR	524830	AssignmentExpression	ecode = code		522978	0		=			
ANR	524831	Identifier	ecode		522978	0					
ANR	524832	Identifier	code		522978	1					
ANR	524833	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1706:8:69925:69969	522978	1	True				
ANR	524834	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524835	Callee	param_signal_error		522978	0					
ANR	524836	Identifier	param_signal_error		522978	0					
ANR	524837	ArgumentList	plist		522978	1					
ANR	524838	Argument	plist		522978	0					
ANR	524839	Identifier	plist		522978	0					
ANR	524840	Argument	param_name		522978	1					
ANR	524841	Identifier	param_name		522978	0					
ANR	524842	Argument	ecode		522978	2					
ANR	524843	Identifier	ecode		522978	0					
ANR	524844	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) ) ) < 0 )"		522978	139					
ANR	524845	Condition	"( code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) ) ) < 0"	1708:8:69985:70119	522978	0	True				
ANR	524846	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) ) ) < 0"		522978	0		<			
ANR	524847	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) )"		522978	0		=			
ANR	524848	Identifier	code		522978	0					
ANR	524849	CallExpression	"param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) )"		522978	1					
ANR	524850	Callee	param_read_int		522978	0					
ANR	524851	Identifier	param_read_int		522978	0					
ANR	524852	ArgumentList	plist		522978	1					
ANR	524853	Argument	plist		522978	0					
ANR	524854	Identifier	plist		522978	0					
ANR	524855	Argument	"param_name = ""TextBlackPt"""		522978	1					
ANR	524856	AssignmentExpression	"param_name = ""TextBlackPt"""		522978	0		=			
ANR	524857	Identifier	param_name		522978	0					
ANR	524858	PrimaryExpression	"""TextBlackPt"""		522978	1					
ANR	524859	Argument	& ( blackptcomp [ 3 ] )		522978	2					
ANR	524860	UnaryOperationExpression	& ( blackptcomp [ 3 ] )		522978	0					
ANR	524861	UnaryOperator	&		522978	0					
ANR	524862	ArrayIndexing	blackptcomp [ 3 ]		522978	1					
ANR	524863	Identifier	blackptcomp		522978	0					
ANR	524864	PrimaryExpression	3		522978	1					
ANR	524865	PrimaryExpression	0		522978	1					
ANR	524866	CompoundStatement		326:77:12810:12810	522978	1					
ANR	524867	ExpressionStatement	ecode = code	1710:8:70132:70144	522978	0	True				
ANR	524868	AssignmentExpression	ecode = code		522978	0		=			
ANR	524869	Identifier	ecode		522978	0					
ANR	524870	Identifier	code		522978	1					
ANR	524871	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1711:8:70154:70198	522978	1	True				
ANR	524872	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524873	Callee	param_signal_error		522978	0					
ANR	524874	Identifier	param_signal_error		522978	0					
ANR	524875	ArgumentList	plist		522978	1					
ANR	524876	Argument	plist		522978	0					
ANR	524877	Identifier	plist		522978	0					
ANR	524878	Argument	param_name		522978	1					
ANR	524879	Identifier	param_name		522978	0					
ANR	524880	Argument	ecode		522978	2					
ANR	524881	Identifier	ecode		522978	0					
ANR	524882	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) ) ) < 0 )"		522978	140					
ANR	524883	Condition	"( code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) ) ) < 0"	1713:8:70214:70348	522978	0	True				
ANR	524884	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) ) ) < 0"		522978	0		<			
ANR	524885	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) )"		522978	0		=			
ANR	524886	Identifier	code		522978	0					
ANR	524887	CallExpression	"param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) )"		522978	1					
ANR	524888	Callee	param_read_int		522978	0					
ANR	524889	Identifier	param_read_int		522978	0					
ANR	524890	ArgumentList	plist		522978	1					
ANR	524891	Argument	plist		522978	0					
ANR	524892	Identifier	plist		522978	0					
ANR	524893	Argument	"param_name = ""KPreserve"""		522978	1					
ANR	524894	AssignmentExpression	"param_name = ""KPreserve"""		522978	0		=			
ANR	524895	Identifier	param_name		522978	0					
ANR	524896	PrimaryExpression	"""KPreserve"""		522978	1					
ANR	524897	Argument	& ( blackpreserve [ 0 ] )		522978	2					
ANR	524898	UnaryOperationExpression	& ( blackpreserve [ 0 ] )		522978	0					
ANR	524899	UnaryOperator	&		522978	0					
ANR	524900	ArrayIndexing	blackpreserve [ 0 ]		522978	1					
ANR	524901	Identifier	blackpreserve		522978	0					
ANR	524902	PrimaryExpression	0		522978	1					
ANR	524903	PrimaryExpression	0		522978	1					
ANR	524904	CompoundStatement		331:79:13039:13039	522978	1					
ANR	524905	ExpressionStatement	ecode = code	1715:8:70361:70373	522978	0	True				
ANR	524906	AssignmentExpression	ecode = code		522978	0		=			
ANR	524907	Identifier	ecode		522978	0					
ANR	524908	Identifier	code		522978	1					
ANR	524909	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1716:8:70383:70427	522978	1	True				
ANR	524910	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524911	Callee	param_signal_error		522978	0					
ANR	524912	Identifier	param_signal_error		522978	0					
ANR	524913	ArgumentList	plist		522978	1					
ANR	524914	Argument	plist		522978	0					
ANR	524915	Identifier	plist		522978	0					
ANR	524916	Argument	param_name		522978	1					
ANR	524917	Identifier	param_name		522978	0					
ANR	524918	Argument	ecode		522978	2					
ANR	524919	Identifier	ecode		522978	0					
ANR	524920	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) ) ) < 0 )"		522978	141					
ANR	524921	Condition	"( code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) ) ) < 0"	1718:8:70443:70584	522978	0	True				
ANR	524922	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) ) ) < 0"		522978	0		<			
ANR	524923	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) )"		522978	0		=			
ANR	524924	Identifier	code		522978	0					
ANR	524925	CallExpression	"param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) )"		522978	1					
ANR	524926	Callee	param_read_int		522978	0					
ANR	524927	Identifier	param_read_int		522978	0					
ANR	524928	ArgumentList	plist		522978	1					
ANR	524929	Argument	plist		522978	0					
ANR	524930	Identifier	plist		522978	0					
ANR	524931	Argument	"param_name = ""GraphicKPreserve"""		522978	1					
ANR	524932	AssignmentExpression	"param_name = ""GraphicKPreserve"""		522978	0		=			
ANR	524933	Identifier	param_name		522978	0					
ANR	524934	PrimaryExpression	"""GraphicKPreserve"""		522978	1					
ANR	524935	Argument	& ( blackpreserve [ 1 ] )		522978	2					
ANR	524936	UnaryOperationExpression	& ( blackpreserve [ 1 ] )		522978	0					
ANR	524937	UnaryOperator	&		522978	0					
ANR	524938	ArrayIndexing	blackpreserve [ 1 ]		522978	1					
ANR	524939	Identifier	blackpreserve		522978	0					
ANR	524940	PrimaryExpression	1		522978	1					
ANR	524941	PrimaryExpression	0		522978	1					
ANR	524942	CompoundStatement		336:79:13275:13275	522978	1					
ANR	524943	ExpressionStatement	ecode = code	1720:8:70597:70609	522978	0	True				
ANR	524944	AssignmentExpression	ecode = code		522978	0		=			
ANR	524945	Identifier	ecode		522978	0					
ANR	524946	Identifier	code		522978	1					
ANR	524947	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1721:8:70619:70663	522978	1	True				
ANR	524948	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524949	Callee	param_signal_error		522978	0					
ANR	524950	Identifier	param_signal_error		522978	0					
ANR	524951	ArgumentList	plist		522978	1					
ANR	524952	Argument	plist		522978	0					
ANR	524953	Identifier	plist		522978	0					
ANR	524954	Argument	param_name		522978	1					
ANR	524955	Identifier	param_name		522978	0					
ANR	524956	Argument	ecode		522978	2					
ANR	524957	Identifier	ecode		522978	0					
ANR	524958	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) ) ) < 0 )"		522978	142					
ANR	524959	Condition	"( code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) ) ) < 0"	1723:8:70679:70818	522978	0	True				
ANR	524960	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) ) ) < 0"		522978	0		<			
ANR	524961	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) )"		522978	0		=			
ANR	524962	Identifier	code		522978	0					
ANR	524963	CallExpression	"param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) )"		522978	1					
ANR	524964	Callee	param_read_int		522978	0					
ANR	524965	Identifier	param_read_int		522978	0					
ANR	524966	ArgumentList	plist		522978	1					
ANR	524967	Argument	plist		522978	0					
ANR	524968	Identifier	plist		522978	0					
ANR	524969	Argument	"param_name = ""ImageKPreserve"""		522978	1					
ANR	524970	AssignmentExpression	"param_name = ""ImageKPreserve"""		522978	0		=			
ANR	524971	Identifier	param_name		522978	0					
ANR	524972	PrimaryExpression	"""ImageKPreserve"""		522978	1					
ANR	524973	Argument	& ( blackpreserve [ 2 ] )		522978	2					
ANR	524974	UnaryOperationExpression	& ( blackpreserve [ 2 ] )		522978	0					
ANR	524975	UnaryOperator	&		522978	0					
ANR	524976	ArrayIndexing	blackpreserve [ 2 ]		522978	1					
ANR	524977	Identifier	blackpreserve		522978	0					
ANR	524978	PrimaryExpression	2		522978	1					
ANR	524979	PrimaryExpression	0		522978	1					
ANR	524980	CompoundStatement		341:79:13509:13509	522978	1					
ANR	524981	ExpressionStatement	ecode = code	1725:8:70831:70843	522978	0	True				
ANR	524982	AssignmentExpression	ecode = code		522978	0		=			
ANR	524983	Identifier	ecode		522978	0					
ANR	524984	Identifier	code		522978	1					
ANR	524985	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1726:8:70853:70897	522978	1	True				
ANR	524986	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	524987	Callee	param_signal_error		522978	0					
ANR	524988	Identifier	param_signal_error		522978	0					
ANR	524989	ArgumentList	plist		522978	1					
ANR	524990	Argument	plist		522978	0					
ANR	524991	Identifier	plist		522978	0					
ANR	524992	Argument	param_name		522978	1					
ANR	524993	Identifier	param_name		522978	0					
ANR	524994	Argument	ecode		522978	2					
ANR	524995	Identifier	ecode		522978	0					
ANR	524996	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) ) ) < 0 )"		522978	143					
ANR	524997	Condition	"( code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) ) ) < 0"	1728:8:70913:71051	522978	0	True				
ANR	524998	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) ) ) < 0"		522978	0		<			
ANR	524999	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) )"		522978	0		=			
ANR	525000	Identifier	code		522978	0					
ANR	525001	CallExpression	"param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) )"		522978	1					
ANR	525002	Callee	param_read_int		522978	0					
ANR	525003	Identifier	param_read_int		522978	0					
ANR	525004	ArgumentList	plist		522978	1					
ANR	525005	Argument	plist		522978	0					
ANR	525006	Identifier	plist		522978	0					
ANR	525007	Argument	"param_name = ""TextKPreserve"""		522978	1					
ANR	525008	AssignmentExpression	"param_name = ""TextKPreserve"""		522978	0		=			
ANR	525009	Identifier	param_name		522978	0					
ANR	525010	PrimaryExpression	"""TextKPreserve"""		522978	1					
ANR	525011	Argument	& ( blackpreserve [ 3 ] )		522978	2					
ANR	525012	UnaryOperationExpression	& ( blackpreserve [ 3 ] )		522978	0					
ANR	525013	UnaryOperator	&		522978	0					
ANR	525014	ArrayIndexing	blackpreserve [ 3 ]		522978	1					
ANR	525015	Identifier	blackpreserve		522978	0					
ANR	525016	PrimaryExpression	3		522978	1					
ANR	525017	PrimaryExpression	0		522978	1					
ANR	525018	CompoundStatement		346:79:13742:13742	522978	1					
ANR	525019	ExpressionStatement	ecode = code	1730:8:71064:71076	522978	0	True				
ANR	525020	AssignmentExpression	ecode = code		522978	0		=			
ANR	525021	Identifier	ecode		522978	0					
ANR	525022	Identifier	code		522978	1					
ANR	525023	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1731:8:71086:71130	522978	1	True				
ANR	525024	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525025	Callee	param_signal_error		522978	0					
ANR	525026	Identifier	param_signal_error		522978	0					
ANR	525027	ArgumentList	plist		522978	1					
ANR	525028	Argument	plist		522978	0					
ANR	525029	Identifier	plist		522978	0					
ANR	525030	Argument	param_name		522978	1					
ANR	525031	Identifier	param_name		522978	0					
ANR	525032	Argument	ecode		522978	2					
ANR	525033	Identifier	ecode		522978	0					
ANR	525034	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy ) ) < 0 )"		522978	144					
ANR	525035	Condition	"( code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy ) ) < 0"	1733:8:71146:71284	522978	0	True				
ANR	525036	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy ) ) < 0"		522978	0		<			
ANR	525037	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy )"		522978	0		=			
ANR	525038	Identifier	code		522978	0					
ANR	525039	CallExpression	"param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy )"		522978	1					
ANR	525040	Callee	param_read_int		522978	0					
ANR	525041	Identifier	param_read_int		522978	0					
ANR	525042	ArgumentList	plist		522978	1					
ANR	525043	Argument	plist		522978	0					
ANR	525044	Identifier	plist		522978	0					
ANR	525045	Argument	"param_name = ""ColorAccuracy"""		522978	1					
ANR	525046	AssignmentExpression	"param_name = ""ColorAccuracy"""		522978	0		=			
ANR	525047	Identifier	param_name		522978	0					
ANR	525048	PrimaryExpression	"""ColorAccuracy"""		522978	1					
ANR	525049	Argument	& color_accuracy		522978	2					
ANR	525050	UnaryOperationExpression	& color_accuracy		522978	0					
ANR	525051	UnaryOperator	&		522978	0					
ANR	525052	Identifier	color_accuracy		522978	1					
ANR	525053	PrimaryExpression	0		522978	1					
ANR	525054	CompoundStatement		351:79:13975:13975	522978	1					
ANR	525055	ExpressionStatement	ecode = code	1735:8:71297:71309	522978	0	True				
ANR	525056	AssignmentExpression	ecode = code		522978	0		=			
ANR	525057	Identifier	ecode		522978	0					
ANR	525058	Identifier	code		522978	1					
ANR	525059	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1736:8:71319:71363	522978	1	True				
ANR	525060	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525061	Callee	param_signal_error		522978	0					
ANR	525062	Identifier	param_signal_error		522978	0					
ANR	525063	ArgumentList	plist		522978	1					
ANR	525064	Argument	plist		522978	0					
ANR	525065	Identifier	plist		522978	0					
ANR	525066	Argument	param_name		522978	1					
ANR	525067	Identifier	param_name		522978	0					
ANR	525068	Argument	ecode		522978	2					
ANR	525069	Identifier	ecode		522978	0					
ANR	525070	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok ) ) < 0 )"		522978	145					
ANR	525071	Condition	"( code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok ) ) < 0"	1738:8:71379:71517	522978	0	True				
ANR	525072	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok ) ) < 0"		522978	0		<			
ANR	525073	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok )"		522978	0		=			
ANR	525074	Identifier	code		522978	0					
ANR	525075	CallExpression	"param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok )"		522978	1					
ANR	525076	Callee	param_read_bool		522978	0					
ANR	525077	Identifier	param_read_bool		522978	0					
ANR	525078	ArgumentList	plist		522978	1					
ANR	525079	Argument	plist		522978	0					
ANR	525080	Identifier	plist		522978	0					
ANR	525081	Argument	"param_name = ""DeviceGrayToK"""		522978	1					
ANR	525082	AssignmentExpression	"param_name = ""DeviceGrayToK"""		522978	0		=			
ANR	525083	Identifier	param_name		522978	0					
ANR	525084	PrimaryExpression	"""DeviceGrayToK"""		522978	1					
ANR	525085	Argument	& devicegraytok		522978	2					
ANR	525086	UnaryOperationExpression	& devicegraytok		522978	0					
ANR	525087	UnaryOperator	&		522978	0					
ANR	525088	Identifier	devicegraytok		522978	1					
ANR	525089	PrimaryExpression	0		522978	1					
ANR	525090	CompoundStatement		356:78:14208:14208	522978	1					
ANR	525091	ExpressionStatement	ecode = code	1740:8:71530:71542	522978	0	True				
ANR	525092	AssignmentExpression	ecode = code		522978	0		=			
ANR	525093	Identifier	ecode		522978	0					
ANR	525094	Identifier	code		522978	1					
ANR	525095	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1741:8:71552:71596	522978	1	True				
ANR	525096	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525097	Callee	param_signal_error		522978	0					
ANR	525098	Identifier	param_signal_error		522978	0					
ANR	525099	ArgumentList	plist		522978	1					
ANR	525100	Argument	plist		522978	0					
ANR	525101	Identifier	plist		522978	0					
ANR	525102	Argument	param_name		522978	1					
ANR	525103	Identifier	param_name		522978	0					
ANR	525104	Argument	ecode		522978	2					
ANR	525105	Identifier	ecode		522978	0					
ANR	525106	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection ) ) < 0 )"		522978	146					
ANR	525107	Condition	"( code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection ) ) < 0"	1743:8:71612:71750	522978	0	True				
ANR	525108	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection ) ) < 0"		522978	0		<			
ANR	525109	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection )"		522978	0		=			
ANR	525110	Identifier	code		522978	0					
ANR	525111	CallExpression	"param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection )"		522978	1					
ANR	525112	Callee	param_read_bool		522978	0					
ANR	525113	Identifier	param_read_bool		522978	0					
ANR	525114	ArgumentList	plist		522978	1					
ANR	525115	Argument	plist		522978	0					
ANR	525116	Identifier	plist		522978	0					
ANR	525117	Argument	"param_name = ""GrayDetection"""		522978	1					
ANR	525118	AssignmentExpression	"param_name = ""GrayDetection"""		522978	0		=			
ANR	525119	Identifier	param_name		522978	0					
ANR	525120	PrimaryExpression	"""GrayDetection"""		522978	1					
ANR	525121	Argument	& graydetection		522978	2					
ANR	525122	UnaryOperationExpression	& graydetection		522978	0					
ANR	525123	UnaryOperator	&		522978	0					
ANR	525124	Identifier	graydetection		522978	1					
ANR	525125	PrimaryExpression	0		522978	1					
ANR	525126	CompoundStatement		361:78:14441:14441	522978	1					
ANR	525127	ExpressionStatement	ecode = code	1745:8:71763:71775	522978	0	True				
ANR	525128	AssignmentExpression	ecode = code		522978	0		=			
ANR	525129	Identifier	ecode		522978	0					
ANR	525130	Identifier	code		522978	1					
ANR	525131	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1746:8:71785:71829	522978	1	True				
ANR	525132	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525133	Callee	param_signal_error		522978	0					
ANR	525134	Identifier	param_signal_error		522978	0					
ANR	525135	ArgumentList	plist		522978	1					
ANR	525136	Argument	plist		522978	0					
ANR	525137	Identifier	plist		522978	0					
ANR	525138	Argument	param_name		522978	1					
ANR	525139	Identifier	param_name		522978	0					
ANR	525140	Argument	ecode		522978	2					
ANR	525141	Identifier	ecode		522978	0					
ANR	525142	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor ) ) < 0 )"		522978	147					
ANR	525143	Condition	"( code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor ) ) < 0"	1748:8:71845:71981	522978	0	True				
ANR	525144	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor ) ) < 0"		522978	0		<			
ANR	525145	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor )"		522978	0		=			
ANR	525146	Identifier	code		522978	0					
ANR	525147	CallExpression	"param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor )"		522978	1					
ANR	525148	Callee	param_read_bool		522978	0					
ANR	525149	Identifier	param_read_bool		522978	0					
ANR	525150	ArgumentList	plist		522978	1					
ANR	525151	Argument	plist		522978	0					
ANR	525152	Identifier	plist		522978	0					
ANR	525153	Argument	"param_name = ""UseFastColor"""		522978	1					
ANR	525154	AssignmentExpression	"param_name = ""UseFastColor"""		522978	0		=			
ANR	525155	Identifier	param_name		522978	0					
ANR	525156	PrimaryExpression	"""UseFastColor"""		522978	1					
ANR	525157	Argument	& usefastcolor		522978	2					
ANR	525158	UnaryOperationExpression	& usefastcolor		522978	0					
ANR	525159	UnaryOperator	&		522978	0					
ANR	525160	Identifier	usefastcolor		522978	1					
ANR	525161	PrimaryExpression	0		522978	1					
ANR	525162	CompoundStatement		366:77:14672:14672	522978	1					
ANR	525163	ExpressionStatement	ecode = code	1750:8:71994:72006	522978	0	True				
ANR	525164	AssignmentExpression	ecode = code		522978	0		=			
ANR	525165	Identifier	ecode		522978	0					
ANR	525166	Identifier	code		522978	1					
ANR	525167	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1751:8:72016:72060	522978	1	True				
ANR	525168	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525169	Callee	param_signal_error		522978	0					
ANR	525170	Identifier	param_signal_error		522978	0					
ANR	525171	ArgumentList	plist		522978	1					
ANR	525172	Argument	plist		522978	0					
ANR	525173	Identifier	plist		522978	0					
ANR	525174	Argument	param_name		522978	1					
ANR	525175	Identifier	param_name		522978	0					
ANR	525176	Argument	ecode		522978	2					
ANR	525177	Identifier	ecode		522978	0					
ANR	525178	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint ) ) < 0 )"		522978	148					
ANR	525179	Condition	"( code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint ) ) < 0"	1753:8:72076:72218	522978	0	True				
ANR	525180	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint ) ) < 0"		522978	0		<			
ANR	525181	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint )"		522978	0		=			
ANR	525182	Identifier	code		522978	0					
ANR	525183	CallExpression	"param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint )"		522978	1					
ANR	525184	Callee	param_read_bool		522978	0					
ANR	525185	Identifier	param_read_bool		522978	0					
ANR	525186	ArgumentList	plist		522978	1					
ANR	525187	Argument	plist		522978	0					
ANR	525188	Identifier	plist		522978	0					
ANR	525189	Argument	"param_name = ""SimulateOverprint"""		522978	1					
ANR	525190	AssignmentExpression	"param_name = ""SimulateOverprint"""		522978	0		=			
ANR	525191	Identifier	param_name		522978	0					
ANR	525192	PrimaryExpression	"""SimulateOverprint"""		522978	1					
ANR	525193	Argument	& sim_overprint		522978	2					
ANR	525194	UnaryOperationExpression	& sim_overprint		522978	0					
ANR	525195	UnaryOperator	&		522978	0					
ANR	525196	Identifier	sim_overprint		522978	1					
ANR	525197	PrimaryExpression	0		522978	1					
ANR	525198	CompoundStatement		371:78:14909:14909	522978	1					
ANR	525199	ExpressionStatement	ecode = code	1755:8:72231:72243	522978	0	True				
ANR	525200	AssignmentExpression	ecode = code		522978	0		=			
ANR	525201	Identifier	ecode		522978	0					
ANR	525202	Identifier	code		522978	1					
ANR	525203	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1756:8:72253:72297	522978	1	True				
ANR	525204	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525205	Callee	param_signal_error		522978	0					
ANR	525206	Identifier	param_signal_error		522978	0					
ANR	525207	ArgumentList	plist		522978	1					
ANR	525208	Argument	plist		522978	0					
ANR	525209	Identifier	plist		522978	0					
ANR	525210	Argument	param_name		522978	1					
ANR	525211	Identifier	param_name		522978	0					
ANR	525212	Argument	ecode		522978	2					
ANR	525213	Identifier	ecode		522978	0					
ANR	525214	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold ) ) < 0 )"		522978	149					
ANR	525215	Condition	"( code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold ) ) < 0"	1758:8:72313:72457	522978	0	True				
ANR	525216	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold ) ) < 0"		522978	0		<			
ANR	525217	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold )"		522978	0		=			
ANR	525218	Identifier	code		522978	0					
ANR	525219	CallExpression	"param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold )"		522978	1					
ANR	525220	Callee	param_read_bool		522978	0					
ANR	525221	Identifier	param_read_bool		522978	0					
ANR	525222	ArgumentList	plist		522978	1					
ANR	525223	Argument	plist		522978	0					
ANR	525224	Identifier	plist		522978	0					
ANR	525225	Argument	"param_name = ""PreBandThreshold"""		522978	1					
ANR	525226	AssignmentExpression	"param_name = ""PreBandThreshold"""		522978	0		=			
ANR	525227	Identifier	param_name		522978	0					
ANR	525228	PrimaryExpression	"""PreBandThreshold"""		522978	1					
ANR	525229	Argument	& prebandthreshold		522978	2					
ANR	525230	UnaryOperationExpression	& prebandthreshold		522978	0					
ANR	525231	UnaryOperator	&		522978	0					
ANR	525232	Identifier	prebandthreshold		522978	1					
ANR	525233	PrimaryExpression	0		522978	1					
ANR	525234	CompoundStatement		376:81:15148:15148	522978	1					
ANR	525235	ExpressionStatement	ecode = code	1760:8:72470:72482	522978	0	True				
ANR	525236	AssignmentExpression	ecode = code		522978	0		=			
ANR	525237	Identifier	ecode		522978	0					
ANR	525238	Identifier	code		522978	1					
ANR	525239	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1761:8:72492:72536	522978	1	True				
ANR	525240	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525241	Callee	param_signal_error		522978	0					
ANR	525242	Identifier	param_signal_error		522978	0					
ANR	525243	ArgumentList	plist		522978	1					
ANR	525244	Argument	plist		522978	0					
ANR	525245	Identifier	plist		522978	0					
ANR	525246	Argument	param_name		522978	1					
ANR	525247	Identifier	param_name		522978	0					
ANR	525248	Argument	ecode		522978	2					
ANR	525249	Identifier	ecode		522978	0					
ANR	525250	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc ) ) < 0 )"		522978	150					
ANR	525251	Condition	"( code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc ) ) < 0"	1763:8:72552:72622	522978	0	True				
ANR	525252	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc ) ) < 0"		522978	0		<			
ANR	525253	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc )"		522978	0		=			
ANR	525254	Identifier	code		522978	0					
ANR	525255	CallExpression	"param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc )"		522978	1					
ANR	525256	Callee	param_read_bool		522978	0					
ANR	525257	Identifier	param_read_bool		522978	0					
ANR	525258	ArgumentList	plist		522978	1					
ANR	525259	Argument	plist		522978	0					
ANR	525260	Identifier	plist		522978	0					
ANR	525261	Argument	"param_name = ""UseCIEColor"""		522978	1					
ANR	525262	AssignmentExpression	"param_name = ""UseCIEColor"""		522978	0		=			
ANR	525263	Identifier	param_name		522978	0					
ANR	525264	PrimaryExpression	"""UseCIEColor"""		522978	1					
ANR	525265	Argument	& ucc		522978	2					
ANR	525266	UnaryOperationExpression	& ucc		522978	0					
ANR	525267	UnaryOperator	&		522978	0					
ANR	525268	Identifier	ucc		522978	1					
ANR	525269	PrimaryExpression	0		522978	1					
ANR	525270	CompoundStatement		380:81:15313:15313	522978	1					
ANR	525271	ExpressionStatement	ecode = code	1764:8:72635:72647	522978	0	True				
ANR	525272	AssignmentExpression	ecode = code		522978	0		=			
ANR	525273	Identifier	ecode		522978	0					
ANR	525274	Identifier	code		522978	1					
ANR	525275	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1765:8:72657:72701	522978	1	True				
ANR	525276	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525277	Callee	param_signal_error		522978	0					
ANR	525278	Identifier	param_signal_error		522978	0					
ANR	525279	ArgumentList	plist		522978	1					
ANR	525280	Argument	plist		522978	0					
ANR	525281	Identifier	plist		522978	0					
ANR	525282	Argument	param_name		522978	1					
ANR	525283	Identifier	param_name		522978	0					
ANR	525284	Argument	ecode		522978	2					
ANR	525285	Identifier	ecode		522978	0					
ANR	525286	IfStatement	"if ( ( code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab ) ) < 0 )"		522978	151					
ANR	525287	Condition	"( code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab ) ) < 0"	1767:8:72717:72780	522978	0	True				
ANR	525288	RelationalExpression	"( code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab ) ) < 0"		522978	0		<			
ANR	525289	AssignmentExpression	"code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab )"		522978	0		=			
ANR	525290	Identifier	code		522978	0					
ANR	525291	CallExpression	"param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab )"		522978	1					
ANR	525292	Callee	param_anti_alias_bits		522978	0					
ANR	525293	Identifier	param_anti_alias_bits		522978	0					
ANR	525294	ArgumentList	plist		522978	1					
ANR	525295	Argument	plist		522978	0					
ANR	525296	Identifier	plist		522978	0					
ANR	525297	Argument	"""TextAlphaBits"""		522978	1					
ANR	525298	PrimaryExpression	"""TextAlphaBits"""		522978	0					
ANR	525299	Argument	& tab		522978	2					
ANR	525300	UnaryOperationExpression	& tab		522978	0					
ANR	525301	UnaryOperator	&		522978	0					
ANR	525302	Identifier	tab		522978	1					
ANR	525303	PrimaryExpression	0		522978	1					
ANR	525304	ExpressionStatement	ecode = code	1768:8:72791:72803	522978	1	True				
ANR	525305	AssignmentExpression	ecode = code		522978	0		=			
ANR	525306	Identifier	ecode		522978	0					
ANR	525307	Identifier	code		522978	1					
ANR	525308	IfStatement	"if ( ( code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab ) ) < 0 )"		522978	152					
ANR	525309	Condition	"( code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab ) ) < 0"	1769:8:72813:72880	522978	0	True				
ANR	525310	RelationalExpression	"( code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab ) ) < 0"		522978	0		<			
ANR	525311	AssignmentExpression	"code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab )"		522978	0		=			
ANR	525312	Identifier	code		522978	0					
ANR	525313	CallExpression	"param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab )"		522978	1					
ANR	525314	Callee	param_anti_alias_bits		522978	0					
ANR	525315	Identifier	param_anti_alias_bits		522978	0					
ANR	525316	ArgumentList	plist		522978	1					
ANR	525317	Argument	plist		522978	0					
ANR	525318	Identifier	plist		522978	0					
ANR	525319	Argument	"""GraphicsAlphaBits"""		522978	1					
ANR	525320	PrimaryExpression	"""GraphicsAlphaBits"""		522978	0					
ANR	525321	Argument	& gab		522978	2					
ANR	525322	UnaryOperationExpression	& gab		522978	0					
ANR	525323	UnaryOperator	&		522978	0					
ANR	525324	Identifier	gab		522978	1					
ANR	525325	PrimaryExpression	0		522978	1					
ANR	525326	ExpressionStatement	ecode = code	1770:8:72891:72903	522978	1	True				
ANR	525327	AssignmentExpression	ecode = code		522978	0		=			
ANR	525328	Identifier	ecode		522978	0					
ANR	525329	Identifier	code		522978	1					
ANR	525330	IfStatement	"if ( ( code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout ) ) < 0 )"		522978	153					
ANR	525331	Condition	"( code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout ) ) < 0"	1771:8:72913:72990	522978	0	True				
ANR	525332	RelationalExpression	"( code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout ) ) < 0"		522978	0		<			
ANR	525333	AssignmentExpression	"code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout )"		522978	0		=			
ANR	525334	Identifier	code		522978	0					
ANR	525335	CallExpression	"param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout )"		522978	1					
ANR	525336	Callee	param_read_bool		522978	0					
ANR	525337	Identifier	param_read_bool		522978	0					
ANR	525338	ArgumentList	plist		522978	1					
ANR	525339	Argument	plist		522978	0					
ANR	525340	Identifier	plist		522978	0					
ANR	525341	Argument	"""AntidropoutDownscaler"""		522978	1					
ANR	525342	PrimaryExpression	"""AntidropoutDownscaler"""		522978	0					
ANR	525343	Argument	& use_antidropout		522978	2					
ANR	525344	UnaryOperationExpression	& use_antidropout		522978	0					
ANR	525345	UnaryOperator	&		522978	0					
ANR	525346	Identifier	use_antidropout		522978	1					
ANR	525347	PrimaryExpression	0		522978	1					
ANR	525348	ExpressionStatement	ecode = code	1772:8:73001:73013	522978	1	True				
ANR	525349	AssignmentExpression	ecode = code		522978	0		=			
ANR	525350	Identifier	ecode		522978	0					
ANR	525351	Identifier	code		522978	1					
ANR	525352	IfStatement	"if ( ( code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm ) ) < 0 )"		522978	154					
ANR	525353	Condition	"( code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm ) ) < 0"	1773:8:73023:73083	522978	0	True				
ANR	525354	RelationalExpression	"( code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm ) ) < 0"		522978	0		<			
ANR	525355	AssignmentExpression	"code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm )"		522978	0		=			
ANR	525356	Identifier	code		522978	0					
ANR	525357	CallExpression	"param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm )"		522978	1					
ANR	525358	Callee	param_read_int		522978	0					
ANR	525359	Identifier	param_read_int		522978	0					
ANR	525360	ArgumentList	plist		522978	1					
ANR	525361	Argument	plist		522978	0					
ANR	525362	Identifier	plist		522978	0					
ANR	525363	Argument	"""MaxPatternBitmap"""		522978	1					
ANR	525364	PrimaryExpression	"""MaxPatternBitmap"""		522978	0					
ANR	525365	Argument	& mpbm		522978	2					
ANR	525366	UnaryOperationExpression	& mpbm		522978	0					
ANR	525367	UnaryOperator	&		522978	0					
ANR	525368	Identifier	mpbm		522978	1					
ANR	525369	PrimaryExpression	0		522978	1					
ANR	525370	ExpressionStatement	ecode = code	1774:8:73094:73106	522978	1	True				
ANR	525371	AssignmentExpression	ecode = code		522978	0		=			
ANR	525372	Identifier	ecode		522978	0					
ANR	525373	Identifier	code		522978	1					
ANR	525374	IfStatement	"if ( ( code = param_read_int ( plist , ""InterpolateControl"" , & ic ) ) < 0 )"		522978	155					
ANR	525375	Condition	"( code = param_read_int ( plist , ""InterpolateControl"" , & ic ) ) < 0"	1775:8:73116:73176	522978	0	True				
ANR	525376	RelationalExpression	"( code = param_read_int ( plist , ""InterpolateControl"" , & ic ) ) < 0"		522978	0		<			
ANR	525377	AssignmentExpression	"code = param_read_int ( plist , ""InterpolateControl"" , & ic )"		522978	0		=			
ANR	525378	Identifier	code		522978	0					
ANR	525379	CallExpression	"param_read_int ( plist , ""InterpolateControl"" , & ic )"		522978	1					
ANR	525380	Callee	param_read_int		522978	0					
ANR	525381	Identifier	param_read_int		522978	0					
ANR	525382	ArgumentList	plist		522978	1					
ANR	525383	Argument	plist		522978	0					
ANR	525384	Identifier	plist		522978	0					
ANR	525385	Argument	"""InterpolateControl"""		522978	1					
ANR	525386	PrimaryExpression	"""InterpolateControl"""		522978	0					
ANR	525387	Argument	& ic		522978	2					
ANR	525388	UnaryOperationExpression	& ic		522978	0					
ANR	525389	UnaryOperator	&		522978	0					
ANR	525390	Identifier	ic		522978	1					
ANR	525391	PrimaryExpression	0		522978	1					
ANR	525392	ExpressionStatement	ecode = code	1776:8:73187:73199	522978	1	True				
ANR	525393	AssignmentExpression	ecode = code		522978	0		=			
ANR	525394	Identifier	ecode		522978	0					
ANR	525395	Identifier	code		522978	1					
ANR	525396	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency ) ) < 0 )"		522978	156					
ANR	525397	Condition	"( code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency ) ) < 0"	1777:8:73209:73339	522978	0	True				
ANR	525398	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency ) ) < 0"		522978	0		<			
ANR	525399	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency )"		522978	0		=			
ANR	525400	Identifier	code		522978	0					
ANR	525401	CallExpression	"param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency )"		522978	1					
ANR	525402	Callee	param_read_bool		522978	0					
ANR	525403	Identifier	param_read_bool		522978	0					
ANR	525404	ArgumentList	plist		522978	1					
ANR	525405	Argument	plist		522978	0					
ANR	525406	Identifier	plist		522978	0					
ANR	525407	Argument	"param_name = ""PageUsesTransparency"""		522978	1					
ANR	525408	AssignmentExpression	"param_name = ""PageUsesTransparency"""		522978	0		=			
ANR	525409	Identifier	param_name		522978	0					
ANR	525410	PrimaryExpression	"""PageUsesTransparency"""		522978	1					
ANR	525411	Argument	& page_uses_transparency		522978	2					
ANR	525412	UnaryOperationExpression	& page_uses_transparency		522978	0					
ANR	525413	UnaryOperator	&		522978	0					
ANR	525414	Identifier	page_uses_transparency		522978	1					
ANR	525415	PrimaryExpression	0		522978	1					
ANR	525416	CompoundStatement		395:63:16030:16030	522978	1					
ANR	525417	ExpressionStatement	ecode = code	1779:8:73352:73364	522978	0	True				
ANR	525418	AssignmentExpression	ecode = code		522978	0		=			
ANR	525419	Identifier	ecode		522978	0					
ANR	525420	Identifier	code		522978	1					
ANR	525421	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1780:8:73374:73418	522978	1	True				
ANR	525422	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525423	Callee	param_signal_error		522978	0					
ANR	525424	Identifier	param_signal_error		522978	0					
ANR	525425	ArgumentList	plist		522978	1					
ANR	525426	Argument	plist		522978	0					
ANR	525427	Identifier	plist		522978	0					
ANR	525428	Argument	param_name		522978	1					
ANR	525429	Identifier	param_name		522978	0					
ANR	525430	Argument	ecode		522978	2					
ANR	525431	Identifier	ecode		522978	0					
ANR	525432	IfStatement	"if ( ( code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap ) ) < 0 )"		522978	157					
ANR	525433	Condition	"( code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap ) ) < 0"	1782:8:73434:73496	522978	0	True				
ANR	525434	RelationalExpression	"( code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap ) ) < 0"		522978	0		<			
ANR	525435	AssignmentExpression	"code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap )"		522978	0		=			
ANR	525436	Identifier	code		522978	0					
ANR	525437	CallExpression	"param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap )"		522978	1					
ANR	525438	Callee	param_read_long		522978	0					
ANR	525439	Identifier	param_read_long		522978	0					
ANR	525440	ArgumentList	plist		522978	1					
ANR	525441	Argument	plist		522978	0					
ANR	525442	Identifier	plist		522978	0					
ANR	525443	Argument	"""MaxBitmap"""		522978	1					
ANR	525444	PrimaryExpression	"""MaxBitmap"""		522978	0					
ANR	525445	Argument	& sp . MaxBitmap		522978	2					
ANR	525446	UnaryOperationExpression	& sp . MaxBitmap		522978	0					
ANR	525447	UnaryOperator	&		522978	0					
ANR	525448	MemberAccess	sp . MaxBitmap		522978	1					
ANR	525449	Identifier	sp		522978	0					
ANR	525450	Identifier	MaxBitmap		522978	1					
ANR	525451	PrimaryExpression	0		522978	1					
ANR	525452	ExpressionStatement	ecode = code	1783:8:73507:73519	522978	1	True				
ANR	525453	AssignmentExpression	ecode = code		522978	0		=			
ANR	525454	Identifier	ecode		522978	0					
ANR	525455	Identifier	code		522978	1					
ANR	525456	Statement	define	1785:1:73523:73528	522978	158	True				
ANR	525457	Statement	CHECK_PARAM_CASES	1785:8:73530:73546	522978	159	True				
ANR	525458	Statement	(	1785:25:73547:73547	522978	160	True				
ANR	525459	Statement	member	1785:26:73548:73553	522978	161	True				
ANR	525460	Statement	","	1785:32:73554:73554	522978	162	True				
ANR	525461	Statement	bad	1785:34:73556:73558	522978	163	True				
ANR	525462	Statement	","	1785:37:73559:73559	522978	164	True				
ANR	525463	Statement	label	1785:39:73561:73565	522978	165	True				
ANR	525464	Statement	)	1785:44:73566:73566	522978	166	True				
ANR	525465	Label	case 0 :	1786:4:73573:73579	522978	167	True				
ANR	525466	IfStatement	if ( ( sp . params_are_read_only ? sp . member != save_sp . member : bad ) )		522978	168					
ANR	525467	Condition	sp . params_are_read_only ? sp . member != save_sp . member : bad	1787:12:73594:73654	522978	0	True				
ANR	525468	ConditionalExpression	sp . params_are_read_only ? sp . member != save_sp . member : bad		522978	0					
ANR	525469	Condition	sp . params_are_read_only		522978	0					
ANR	525470	MemberAccess	sp . params_are_read_only		522978	0					
ANR	525471	Identifier	sp		522978	0					
ANR	525472	Identifier	params_are_read_only		522978	1					
ANR	525473	EqualityExpression	sp . member != save_sp . member		522978	1		!=			
ANR	525474	MemberAccess	sp . member		522978	0					
ANR	525475	Identifier	sp		522978	0					
ANR	525476	Identifier	member		522978	1					
ANR	525477	MemberAccess	save_sp . member		522978	1					
ANR	525478	Identifier	save_sp		522978	0					
ANR	525479	Identifier	member		522978	1					
ANR	525480	Identifier	bad		522978	2					
ANR	525481	ExpressionStatement	ecode = gs_error_rangecheck	1788:12:73670:73697	522978	1	True				
ANR	525482	AssignmentExpression	ecode = gs_error_rangecheck		522978	0		=			
ANR	525483	Identifier	ecode		522978	0					
ANR	525484	Identifier	gs_error_rangecheck		522978	1					
ANR	525485	ElseStatement	else		522978	0					
ANR	525486	BreakStatement	break ;	1790:12:73726:73731	522978	0	True				
ANR	525487	GotoStatement	goto label ;	1791:8:73742:73752	522978	169	True				
ANR	525488	Identifier	label		522978	0					
ANR	525489	Label	default :	1792:4:73759:73766	522978	170	True				
ANR	525490	Identifier	default		522978	0					
ANR	525491	ExpressionStatement	ecode = code	1793:8:73777:73789	522978	171	True				
ANR	525492	AssignmentExpression	ecode = code		522978	0		=			
ANR	525493	Identifier	ecode		522978	0					
ANR	525494	Identifier	code		522978	1					
ANR	525495	Label	label :	1794:0:73792:73797	522978	172	True				
ANR	525496	Identifier	label		522978	0					
ANR	525497	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1795:8:73808:73852	522978	173	True				
ANR	525498	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525499	Callee	param_signal_error		522978	0					
ANR	525500	Identifier	param_signal_error		522978	0					
ANR	525501	ArgumentList	plist		522978	1					
ANR	525502	Argument	plist		522978	0					
ANR	525503	Identifier	plist		522978	0					
ANR	525504	Argument	param_name		522978	1					
ANR	525505	Identifier	param_name		522978	0					
ANR	525506	Argument	ecode		522978	2					
ANR	525507	Identifier	ecode		522978	0					
ANR	525508	Label	case 1 :	1796:4:73859:73865	522978	174	True				
ANR	525509	Statement	break	1797:8:73876:73880	522978	175	True				
ANR	525510	SwitchStatement	"switch ( code = param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace ) )"		522978	176					
ANR	525511	Condition	"code = param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace )"	1799:12:73895:73970	522978	0	True				
ANR	525512	AssignmentExpression	"code = param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace )"		522978	0		=			
ANR	525513	Identifier	code		522978	0					
ANR	525514	CallExpression	"param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace )"		522978	1					
ANR	525515	Callee	param_read_long		522978	0					
ANR	525516	Identifier	param_read_long		522978	0					
ANR	525517	ArgumentList	plist		522978	1					
ANR	525518	Argument	plist		522978	0					
ANR	525519	Identifier	plist		522978	0					
ANR	525520	Argument	"param_name = ""BufferSpace"""		522978	1					
ANR	525521	AssignmentExpression	"param_name = ""BufferSpace"""		522978	0		=			
ANR	525522	Identifier	param_name		522978	0					
ANR	525523	PrimaryExpression	"""BufferSpace"""		522978	1					
ANR	525524	Argument	& sp . BufferSpace		522978	2					
ANR	525525	UnaryOperationExpression	& sp . BufferSpace		522978	0					
ANR	525526	UnaryOperator	&		522978	0					
ANR	525527	MemberAccess	sp . BufferSpace		522978	1					
ANR	525528	Identifier	sp		522978	0					
ANR	525529	Identifier	BufferSpace		522978	1					
ANR	525530	CompoundStatement		416:90:16661:16661	522978	1					
ANR	525531	ExpressionStatement	"CHECK_PARAM_CASES ( BufferSpace , sp . BufferSpace < 10000 , bse )"	1800:8:73983:74042	522978	0	True				
ANR	525532	CallExpression	"CHECK_PARAM_CASES ( BufferSpace , sp . BufferSpace < 10000 , bse )"		522978	0					
ANR	525533	Callee	CHECK_PARAM_CASES		522978	0					
ANR	525534	Identifier	CHECK_PARAM_CASES		522978	0					
ANR	525535	ArgumentList	BufferSpace		522978	1					
ANR	525536	Argument	BufferSpace		522978	0					
ANR	525537	Identifier	BufferSpace		522978	0					
ANR	525538	Argument	sp . BufferSpace < 10000		522978	1					
ANR	525539	RelationalExpression	sp . BufferSpace < 10000		522978	0		<			
ANR	525540	MemberAccess	sp . BufferSpace		522978	0					
ANR	525541	Identifier	sp		522978	0					
ANR	525542	Identifier	BufferSpace		522978	1					
ANR	525543	PrimaryExpression	10000		522978	1					
ANR	525544	Argument	bse		522978	2					
ANR	525545	Identifier	bse		522978	0					
ANR	525546	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth ) )"		522978	177					
ANR	525547	Condition	"code = param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth )"	1803:12:74063:74138	522978	0	True				
ANR	525548	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth )"		522978	0		=			
ANR	525549	Identifier	code		522978	0					
ANR	525550	CallExpression	"param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth )"		522978	1					
ANR	525551	Callee	param_read_int		522978	0					
ANR	525552	Identifier	param_read_int		522978	0					
ANR	525553	ArgumentList	plist		522978	1					
ANR	525554	Argument	plist		522978	0					
ANR	525555	Identifier	plist		522978	0					
ANR	525556	Argument	"param_name = ""BandWidth"""		522978	1					
ANR	525557	AssignmentExpression	"param_name = ""BandWidth"""		522978	0		=			
ANR	525558	Identifier	param_name		522978	0					
ANR	525559	PrimaryExpression	"""BandWidth"""		522978	1					
ANR	525560	Argument	& sp . band . BandWidth		522978	2					
ANR	525561	UnaryOperationExpression	& sp . band . BandWidth		522978	0					
ANR	525562	UnaryOperator	&		522978	0					
ANR	525563	MemberAccess	sp . band . BandWidth		522978	1					
ANR	525564	MemberAccess	sp . band		522978	0					
ANR	525565	Identifier	sp		522978	0					
ANR	525566	Identifier	band		522978	1					
ANR	525567	Identifier	BandWidth		522978	1					
ANR	525568	CompoundStatement		420:90:16829:16829	522978	1					
ANR	525569	ExpressionStatement	"CHECK_PARAM_CASES ( band . BandWidth , sp . band . BandWidth < 0 , bwe )"	1804:8:74151:74212	522978	0	True				
ANR	525570	CallExpression	"CHECK_PARAM_CASES ( band . BandWidth , sp . band . BandWidth < 0 , bwe )"		522978	0					
ANR	525571	Callee	CHECK_PARAM_CASES		522978	0					
ANR	525572	Identifier	CHECK_PARAM_CASES		522978	0					
ANR	525573	ArgumentList	band . BandWidth		522978	1					
ANR	525574	Argument	band . BandWidth		522978	0					
ANR	525575	MemberAccess	band . BandWidth		522978	0					
ANR	525576	Identifier	band		522978	0					
ANR	525577	Identifier	BandWidth		522978	1					
ANR	525578	Argument	sp . band . BandWidth < 0		522978	1					
ANR	525579	RelationalExpression	sp . band . BandWidth < 0		522978	0		<			
ANR	525580	MemberAccess	sp . band . BandWidth		522978	0					
ANR	525581	MemberAccess	sp . band		522978	0					
ANR	525582	Identifier	sp		522978	0					
ANR	525583	Identifier	band		522978	1					
ANR	525584	Identifier	BandWidth		522978	1					
ANR	525585	PrimaryExpression	0		522978	1					
ANR	525586	Argument	bwe		522978	2					
ANR	525587	Identifier	bwe		522978	0					
ANR	525588	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight ) )"		522978	178					
ANR	525589	Condition	"code = param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight )"	1807:12:74233:74310	522978	0	True				
ANR	525590	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight )"		522978	0		=			
ANR	525591	Identifier	code		522978	0					
ANR	525592	CallExpression	"param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight )"		522978	1					
ANR	525593	Callee	param_read_int		522978	0					
ANR	525594	Identifier	param_read_int		522978	0					
ANR	525595	ArgumentList	plist		522978	1					
ANR	525596	Argument	plist		522978	0					
ANR	525597	Identifier	plist		522978	0					
ANR	525598	Argument	"param_name = ""BandHeight"""		522978	1					
ANR	525599	AssignmentExpression	"param_name = ""BandHeight"""		522978	0		=			
ANR	525600	Identifier	param_name		522978	0					
ANR	525601	PrimaryExpression	"""BandHeight"""		522978	1					
ANR	525602	Argument	& sp . band . BandHeight		522978	2					
ANR	525603	UnaryOperationExpression	& sp . band . BandHeight		522978	0					
ANR	525604	UnaryOperator	&		522978	0					
ANR	525605	MemberAccess	sp . band . BandHeight		522978	1					
ANR	525606	MemberAccess	sp . band		522978	0					
ANR	525607	Identifier	sp		522978	0					
ANR	525608	Identifier	band		522978	1					
ANR	525609	Identifier	BandHeight		522978	1					
ANR	525610	CompoundStatement		424:92:17001:17001	522978	1					
ANR	525611	ExpressionStatement	"CHECK_PARAM_CASES ( band . BandHeight , sp . band . BandHeight < 0 , bhe )"	1808:8:74323:74386	522978	0	True				
ANR	525612	CallExpression	"CHECK_PARAM_CASES ( band . BandHeight , sp . band . BandHeight < 0 , bhe )"		522978	0					
ANR	525613	Callee	CHECK_PARAM_CASES		522978	0					
ANR	525614	Identifier	CHECK_PARAM_CASES		522978	0					
ANR	525615	ArgumentList	band . BandHeight		522978	1					
ANR	525616	Argument	band . BandHeight		522978	0					
ANR	525617	MemberAccess	band . BandHeight		522978	0					
ANR	525618	Identifier	band		522978	0					
ANR	525619	Identifier	BandHeight		522978	1					
ANR	525620	Argument	sp . band . BandHeight < 0		522978	1					
ANR	525621	RelationalExpression	sp . band . BandHeight < 0		522978	0		<			
ANR	525622	MemberAccess	sp . band . BandHeight		522978	0					
ANR	525623	MemberAccess	sp . band		522978	0					
ANR	525624	Identifier	sp		522978	0					
ANR	525625	Identifier	band		522978	1					
ANR	525626	Identifier	BandHeight		522978	1					
ANR	525627	PrimaryExpression	0		522978	1					
ANR	525628	Argument	bhe		522978	2					
ANR	525629	Identifier	bhe		522978	0					
ANR	525630	SwitchStatement	"switch ( code = param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace ) )"		522978	179					
ANR	525631	Condition	"code = param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace )"	1811:12:74407:74495	522978	0	True				
ANR	525632	AssignmentExpression	"code = param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace )"		522978	0		=			
ANR	525633	Identifier	code		522978	0					
ANR	525634	CallExpression	"param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace )"		522978	1					
ANR	525635	Callee	param_read_long		522978	0					
ANR	525636	Identifier	param_read_long		522978	0					
ANR	525637	ArgumentList	plist		522978	1					
ANR	525638	Argument	plist		522978	0					
ANR	525639	Identifier	plist		522978	0					
ANR	525640	Argument	"param_name = ""BandBufferSpace"""		522978	1					
ANR	525641	AssignmentExpression	"param_name = ""BandBufferSpace"""		522978	0		=			
ANR	525642	Identifier	param_name		522978	0					
ANR	525643	PrimaryExpression	"""BandBufferSpace"""		522978	1					
ANR	525644	Argument	& sp . band . BandBufferSpace		522978	2					
ANR	525645	UnaryOperationExpression	& sp . band . BandBufferSpace		522978	0					
ANR	525646	UnaryOperator	&		522978	0					
ANR	525647	MemberAccess	sp . band . BandBufferSpace		522978	1					
ANR	525648	MemberAccess	sp . band		522978	0					
ANR	525649	Identifier	sp		522978	0					
ANR	525650	Identifier	band		522978	1					
ANR	525651	Identifier	BandBufferSpace		522978	1					
ANR	525652	CompoundStatement		428:103:17186:17186	522978	1					
ANR	525653	ExpressionStatement	"CHECK_PARAM_CASES ( band . BandBufferSpace , sp . band . BandBufferSpace < 0 , bbse )"	1812:8:74508:74582	522978	0	True				
ANR	525654	CallExpression	"CHECK_PARAM_CASES ( band . BandBufferSpace , sp . band . BandBufferSpace < 0 , bbse )"		522978	0					
ANR	525655	Callee	CHECK_PARAM_CASES		522978	0					
ANR	525656	Identifier	CHECK_PARAM_CASES		522978	0					
ANR	525657	ArgumentList	band . BandBufferSpace		522978	1					
ANR	525658	Argument	band . BandBufferSpace		522978	0					
ANR	525659	MemberAccess	band . BandBufferSpace		522978	0					
ANR	525660	Identifier	band		522978	0					
ANR	525661	Identifier	BandBufferSpace		522978	1					
ANR	525662	Argument	sp . band . BandBufferSpace < 0		522978	1					
ANR	525663	RelationalExpression	sp . band . BandBufferSpace < 0		522978	0		<			
ANR	525664	MemberAccess	sp . band . BandBufferSpace		522978	0					
ANR	525665	MemberAccess	sp . band		522978	0					
ANR	525666	Identifier	sp		522978	0					
ANR	525667	Identifier	band		522978	1					
ANR	525668	Identifier	BandBufferSpace		522978	1					
ANR	525669	PrimaryExpression	0		522978	1					
ANR	525670	Argument	bbse		522978	2					
ANR	525671	Identifier	bbse		522978	0					
ANR	525672	SwitchStatement	"switch ( code = param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe ) )"		522978	180					
ANR	525673	Condition	"code = param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe )"	1816:12:74604:74679	522978	0	True				
ANR	525674	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe )"		522978	0		=			
ANR	525675	Identifier	code		522978	0					
ANR	525676	CallExpression	"param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe )"		522978	1					
ANR	525677	Callee	param_read_bool		522978	0					
ANR	525678	Identifier	param_read_bool		522978	0					
ANR	525679	ArgumentList	plist		522978	1					
ANR	525680	Argument	plist		522978	0					
ANR	525681	Identifier	plist		522978	0					
ANR	525682	Argument	"param_name = "".LockSafetyParams"""		522978	1					
ANR	525683	AssignmentExpression	"param_name = "".LockSafetyParams"""		522978	0		=			
ANR	525684	Identifier	param_name		522978	0					
ANR	525685	PrimaryExpression	""".LockSafetyParams"""		522978	1					
ANR	525686	Argument	& locksafe		522978	2					
ANR	525687	UnaryOperationExpression	& locksafe		522978	0					
ANR	525688	UnaryOperator	&		522978	0					
ANR	525689	Identifier	locksafe		522978	1					
ANR	525690	CompoundStatement		433:90:17370:17370	522978	1					
ANR	525691	Label	case 0 :	1817:8:74692:74698	522978	0	True				
ANR	525692	IfStatement	if ( dev -> LockSafetyParams && ! locksafe )		522978	1					
ANR	525693	Condition	dev -> LockSafetyParams && ! locksafe	1818:16:74716:74749	522978	0	True				
ANR	525694	AndExpression	dev -> LockSafetyParams && ! locksafe		522978	0		&&			
ANR	525695	PtrMemberAccess	dev -> LockSafetyParams		522978	0					
ANR	525696	Identifier	dev		522978	0					
ANR	525697	Identifier	LockSafetyParams		522978	1					
ANR	525698	UnaryOperationExpression	! locksafe		522978	1					
ANR	525699	UnaryOperator	!		522978	0					
ANR	525700	Identifier	locksafe		522978	1					
ANR	525701	ExpressionStatement	code = gs_note_error ( gs_error_invalidaccess )	1819:16:74768:74812	522978	1	True				
ANR	525702	AssignmentExpression	code = gs_note_error ( gs_error_invalidaccess )		522978	0		=			
ANR	525703	Identifier	code		522978	0					
ANR	525704	CallExpression	gs_note_error ( gs_error_invalidaccess )		522978	1					
ANR	525705	Callee	gs_note_error		522978	0					
ANR	525706	Identifier	gs_note_error		522978	0					
ANR	525707	ArgumentList	gs_error_invalidaccess		522978	1					
ANR	525708	Argument	gs_error_invalidaccess		522978	0					
ANR	525709	Identifier	gs_error_invalidaccess		522978	0					
ANR	525710	ElseStatement	else		522978	0					
ANR	525711	BreakStatement	break ;	1821:16:74847:74852	522978	0	True				
ANR	525712	Label	default :	1822:8:74862:74869	522978	2	True				
ANR	525713	Identifier	default		522978	0					
ANR	525714	ExpressionStatement	ecode = code	1823:12:74883:74895	522978	3	True				
ANR	525715	AssignmentExpression	ecode = code		522978	0		=			
ANR	525716	Identifier	ecode		522978	0					
ANR	525717	Identifier	code		522978	1					
ANR	525718	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1824:12:74909:74953	522978	4	True				
ANR	525719	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525720	Callee	param_signal_error		522978	0					
ANR	525721	Identifier	param_signal_error		522978	0					
ANR	525722	ArgumentList	plist		522978	1					
ANR	525723	Argument	plist		522978	0					
ANR	525724	Identifier	plist		522978	0					
ANR	525725	Argument	param_name		522978	1					
ANR	525726	Identifier	param_name		522978	0					
ANR	525727	Argument	ecode		522978	2					
ANR	525728	Identifier	ecode		522978	0					
ANR	525729	Label	case 1 :	1825:8:74963:74969	522978	5	True				
ANR	525730	BreakStatement	break ;	1826:12:74983:74988	522978	6	True				
ANR	525731	Statement	define	1829:1:75062:75067	522978	181	True				
ANR	525732	Statement	IGNORE_INT_PARAM	1829:8:75069:75084	522978	182	True				
ANR	525733	Statement	(	1829:24:75085:75085	522978	183	True				
ANR	525734	Statement	pname	1829:25:75086:75090	522978	184	True				
ANR	525735	Statement	)	1829:30:75091:75091	522978	185	True				
ANR	525736	CompoundStatement		447:4:17786:17794	522978	186					
ANR	525737	IdentifierDeclStatement	int igni ;	1830:4:75098:75106	522978	0	True				
ANR	525738	IdentifierDecl	igni		522978	0					
ANR	525739	IdentifierDeclType	int		522978	0					
ANR	525740	Identifier	igni		522978	1					
ANR	525741	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = pname ) , & igni ) )"		522978	1					
ANR	525742	Condition	"code = param_read_int ( plist , ( param_name = pname ) , & igni )"	1831:13:75122:75178	522978	0	True				
ANR	525743	AssignmentExpression	"code = param_read_int ( plist , ( param_name = pname ) , & igni )"		522978	0		=			
ANR	525744	Identifier	code		522978	0					
ANR	525745	CallExpression	"param_read_int ( plist , ( param_name = pname ) , & igni )"		522978	1					
ANR	525746	Callee	param_read_int		522978	0					
ANR	525747	Identifier	param_read_int		522978	0					
ANR	525748	ArgumentList	plist		522978	1					
ANR	525749	Argument	plist		522978	0					
ANR	525750	Identifier	plist		522978	0					
ANR	525751	Argument	param_name = pname		522978	1					
ANR	525752	AssignmentExpression	param_name = pname		522978	0		=			
ANR	525753	Identifier	param_name		522978	0					
ANR	525754	Identifier	pname		522978	1					
ANR	525755	Argument	& igni		522978	2					
ANR	525756	UnaryOperationExpression	& igni		522978	0					
ANR	525757	UnaryOperator	&		522978	0					
ANR	525758	Identifier	igni		522978	1					
ANR	525759	CompoundStatement		449:6:17877:17877	522978	1					
ANR	525760	Label	default :	1832:8:75191:75198	522978	0	True				
ANR	525761	Identifier	default		522978	0					
ANR	525762	ExpressionStatement	ecode = code	1833:10:75211:75223	522978	1	True				
ANR	525763	AssignmentExpression	ecode = code		522978	0		=			
ANR	525764	Identifier	ecode		522978	0					
ANR	525765	Identifier	code		522978	1					
ANR	525766	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1834:10:75236:75280	522978	2	True				
ANR	525767	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525768	Callee	param_signal_error		522978	0					
ANR	525769	Identifier	param_signal_error		522978	0					
ANR	525770	ArgumentList	plist		522978	1					
ANR	525771	Argument	plist		522978	0					
ANR	525772	Identifier	plist		522978	0					
ANR	525773	Argument	param_name		522978	1					
ANR	525774	Identifier	param_name		522978	0					
ANR	525775	Argument	ecode		522978	2					
ANR	525776	Identifier	ecode		522978	0					
ANR	525777	Label	case 0 :	1835:8:75291:75297	522978	3	True				
ANR	525778	Label	case 1 :	1836:8:75308:75314	522978	4	True				
ANR	525779	BreakStatement	break ;	1837:10:75327:75332	522978	5	True				
ANR	525780	Statement	IGNORE_INT_PARAM	1840:4:75352:75367	522978	187	True				
ANR	525781	Statement	(	1840:20:75368:75368	522978	188	True				
ANR	525782	Statement	"""%MediaSource"""	1840:21:75369:75382	522978	189	True				
ANR	525783	Statement	)	1840:35:75383:75383	522978	190	True				
ANR	525784	Statement	IGNORE_INT_PARAM	1841:8:75393:75408	522978	191	True				
ANR	525785	Statement	(	1841:24:75409:75409	522978	192	True				
ANR	525786	Statement	"""%MediaDestination"""	1841:25:75410:75428	522978	193	True				
ANR	525787	Statement	)	1841:44:75429:75429	522978	194	True				
ANR	525788	SwitchStatement	"switch ( code = param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba ) )"		522978	195					
ANR	525789	Condition	"code = param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba )"	1842:16:75447:75519	522978	0	True				
ANR	525790	AssignmentExpression	"code = param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba )"		522978	0		=			
ANR	525791	Identifier	code		522978	0					
ANR	525792	CallExpression	"param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba )"		522978	1					
ANR	525793	Callee	param_read_float_array		522978	0					
ANR	525794	Identifier	param_read_float_array		522978	0					
ANR	525795	ArgumentList	plist		522978	1					
ANR	525796	Argument	plist		522978	0					
ANR	525797	Identifier	plist		522978	0					
ANR	525798	Argument	"param_name = ""ImagingBBox"""		522978	1					
ANR	525799	AssignmentExpression	"param_name = ""ImagingBBox"""		522978	0		=			
ANR	525800	Identifier	param_name		522978	0					
ANR	525801	PrimaryExpression	"""ImagingBBox"""		522978	1					
ANR	525802	Argument	& ibba		522978	2					
ANR	525803	UnaryOperationExpression	& ibba		522978	0					
ANR	525804	UnaryOperator	&		522978	0					
ANR	525805	Identifier	ibba		522978	1					
ANR	525806	CompoundStatement		459:91:18210:18210	522978	1					
ANR	525807	Label	case 0 :	1843:8:75532:75538	522978	0	True				
ANR	525808	IfStatement	if ( ibba . size != 4 || ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ] )		522978	1					
ANR	525809	Condition	ibba . size != 4 || ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ]	1844:16:75556:75647	522978	0	True				
ANR	525810	OrExpression	ibba . size != 4 || ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ]		522978	0		||			
ANR	525811	EqualityExpression	ibba . size != 4		522978	0		!=			
ANR	525812	MemberAccess	ibba . size		522978	0					
ANR	525813	Identifier	ibba		522978	0					
ANR	525814	Identifier	size		522978	1					
ANR	525815	PrimaryExpression	4		522978	1					
ANR	525816	OrExpression	ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ]		522978	1		||			
ANR	525817	RelationalExpression	ibba . data [ 2 ] < ibba . data [ 0 ]		522978	0		<			
ANR	525818	ArrayIndexing	ibba . data [ 2 ]		522978	0					
ANR	525819	MemberAccess	ibba . data		522978	0					
ANR	525820	Identifier	ibba		522978	0					
ANR	525821	Identifier	data		522978	1					
ANR	525822	PrimaryExpression	2		522978	1					
ANR	525823	ArrayIndexing	ibba . data [ 0 ]		522978	1					
ANR	525824	MemberAccess	ibba . data		522978	0					
ANR	525825	Identifier	ibba		522978	0					
ANR	525826	Identifier	data		522978	1					
ANR	525827	PrimaryExpression	0		522978	1					
ANR	525828	RelationalExpression	ibba . data [ 3 ] < ibba . data [ 1 ]		522978	1		<			
ANR	525829	ArrayIndexing	ibba . data [ 3 ]		522978	0					
ANR	525830	MemberAccess	ibba . data		522978	0					
ANR	525831	Identifier	ibba		522978	0					
ANR	525832	Identifier	data		522978	1					
ANR	525833	PrimaryExpression	3		522978	1					
ANR	525834	ArrayIndexing	ibba . data [ 1 ]		522978	1					
ANR	525835	MemberAccess	ibba . data		522978	0					
ANR	525836	Identifier	ibba		522978	0					
ANR	525837	Identifier	data		522978	1					
ANR	525838	PrimaryExpression	1		522978	1					
ANR	525839	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1847:16:75683:75725	522978	1	True				
ANR	525840	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		522978	0		=			
ANR	525841	Identifier	ecode		522978	0					
ANR	525842	CallExpression	gs_note_error ( gs_error_rangecheck )		522978	1					
ANR	525843	Callee	gs_note_error		522978	0					
ANR	525844	Identifier	gs_note_error		522978	0					
ANR	525845	ArgumentList	gs_error_rangecheck		522978	1					
ANR	525846	Argument	gs_error_rangecheck		522978	0					
ANR	525847	Identifier	gs_error_rangecheck		522978	0					
ANR	525848	ElseStatement	else		522978	0					
ANR	525849	BreakStatement	break ;	1849:16:75760:75765	522978	0	True				
ANR	525850	GotoStatement	goto ibbe ;	1850:12:75779:75788	522978	2	True				
ANR	525851	Identifier	ibbe		522978	0					
ANR	525852	Label	default :	1851:8:75798:75805	522978	3	True				
ANR	525853	Identifier	default		522978	0					
ANR	525854	IfStatement	"if ( ( code = param_read_null ( plist , param_name ) ) == 0 )"		522978	4					
ANR	525855	Condition	"( code = param_read_null ( plist , param_name ) ) == 0"	1852:16:75823:75870	522978	0	True				
ANR	525856	EqualityExpression	"( code = param_read_null ( plist , param_name ) ) == 0"		522978	0		==			
ANR	525857	AssignmentExpression	"code = param_read_null ( plist , param_name )"		522978	0		=			
ANR	525858	Identifier	code		522978	0					
ANR	525859	CallExpression	"param_read_null ( plist , param_name )"		522978	1					
ANR	525860	Callee	param_read_null		522978	0					
ANR	525861	Identifier	param_read_null		522978	0					
ANR	525862	ArgumentList	plist		522978	1					
ANR	525863	Argument	plist		522978	0					
ANR	525864	Identifier	plist		522978	0					
ANR	525865	Argument	param_name		522978	1					
ANR	525866	Identifier	param_name		522978	0					
ANR	525867	PrimaryExpression	0		522978	1					
ANR	525868	CompoundStatement		469:66:18561:18561	522978	1					
ANR	525869	ExpressionStatement	ibbnull = true	1853:16:75891:75905	522978	0	True				
ANR	525870	AssignmentExpression	ibbnull = true		522978	0		=			
ANR	525871	Identifier	ibbnull		522978	0					
ANR	525872	Identifier	true		522978	1					
ANR	525873	ExpressionStatement	ibba . data = 0	1854:16:75923:75936	522978	1	True				
ANR	525874	AssignmentExpression	ibba . data = 0		522978	0		=			
ANR	525875	MemberAccess	ibba . data		522978	0					
ANR	525876	Identifier	ibba		522978	0					
ANR	525877	Identifier	data		522978	1					
ANR	525878	PrimaryExpression	0		522978	1					
ANR	525879	BreakStatement	break ;	1855:16:75954:75959	522978	2	True				
ANR	525880	ExpressionStatement	ecode = code	1857:12:75987:75999	522978	5	True				
ANR	525881	AssignmentExpression	ecode = code		522978	0		=			
ANR	525882	Identifier	ecode		522978	0					
ANR	525883	Identifier	code		522978	1					
ANR	525884	Label	ibbe :	1858:10:76028:76032	522978	6	True				
ANR	525885	Identifier	ibbe		522978	0					
ANR	525886	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1858:15:76033:76077	522978	7	True				
ANR	525887	CallExpression	"param_signal_error ( plist , param_name , ecode )"		522978	0					
ANR	525888	Callee	param_signal_error		522978	0					
ANR	525889	Identifier	param_signal_error		522978	0					
ANR	525890	ArgumentList	plist		522978	1					
ANR	525891	Argument	plist		522978	0					
ANR	525892	Identifier	plist		522978	0					
ANR	525893	Argument	param_name		522978	1					
ANR	525894	Identifier	param_name		522978	0					
ANR	525895	Argument	ecode		522978	2					
ANR	525896	Identifier	ecode		522978	0					
ANR	525897	Label	case 1 :	1859:8:76087:76093	522978	8	True				
ANR	525898	ExpressionStatement	ibba . data = 0	1860:12:76107:76120	522978	9	True				
ANR	525899	AssignmentExpression	ibba . data = 0		522978	0		=			
ANR	525900	MemberAccess	ibba . data		522978	0					
ANR	525901	Identifier	ibba		522978	0					
ANR	525902	Identifier	data		522978	1					
ANR	525903	PrimaryExpression	0		522978	1					
ANR	525904	BreakStatement	break ;	1861:12:76134:76139	522978	10	True				
ANR	525905	CompoundStatement		483:8:18929:18982	522978	196					
ANR	525906	IdentifierDeclStatement	const char * pcms = get_process_color_model_name ( dev ) ;	1866:8:76241:76294	522978	0	True				
ANR	525907	IdentifierDecl	* pcms = get_process_color_model_name ( dev )		522978	0					
ANR	525908	IdentifierDeclType	const char *		522978	0					
ANR	525909	Identifier	pcms		522978	1					
ANR	525910	AssignmentExpression	* pcms = get_process_color_model_name ( dev )		522978	2		=			
ANR	525911	Identifier	pcms		522978	0					
ANR	525912	CallExpression	get_process_color_model_name ( dev )		522978	1					
ANR	525913	Callee	get_process_color_model_name		522978	0					
ANR	525914	Identifier	get_process_color_model_name		522978	0					
ANR	525915	ArgumentList	dev		522978	1					
ANR	525916	Argument	dev		522978	0					
ANR	525917	Identifier	dev		522978	0					
ANR	525918	IfStatement	"if ( ( code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) ) ) < 0 )"		522978	1					
ANR	525919	Condition	"( code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) ) ) < 0"	1868:12:76384:76464	522978	0	True				
ANR	525920	RelationalExpression	"( code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) ) ) < 0"		522978	0		<			
ANR	525921	AssignmentExpression	"code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) )"		522978	0		=			
ANR	525922	Identifier	code		522978	0					
ANR	525923	CallExpression	"param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) )"		522978	1					
ANR	525924	Callee	param_check_string		522978	0					
ANR	525925	Identifier	param_check_string		522978	0					
ANR	525926	ArgumentList	plist		522978	1					
ANR	525927	Argument	plist		522978	0					
ANR	525928	Identifier	plist		522978	0					
ANR	525929	Argument	"""ProcessColorModel"""		522978	1					
ANR	525930	PrimaryExpression	"""ProcessColorModel"""		522978	0					
ANR	525931	Argument	pcms		522978	2					
ANR	525932	Identifier	pcms		522978	0					
ANR	525933	Argument	pcms != NULL		522978	3					
ANR	525934	EqualityExpression	pcms != NULL		522978	0		!=			
ANR	525935	Identifier	pcms		522978	0					
ANR	525936	Identifier	NULL		522978	1					
ANR	525937	PrimaryExpression	0		522978	1					
ANR	525938	ExpressionStatement	ecode = code	1869:12:76479:76491	522978	1	True				
ANR	525939	AssignmentExpression	ecode = code		522978	0		=			
ANR	525940	Identifier	ecode		522978	0					
ANR	525941	Identifier	code		522978	1					
ANR	525942	Statement	IGNORE_INT_PARAM	1871:4:76503:76518	522978	197	True				
ANR	525943	Statement	(	1871:20:76519:76519	522978	198	True				
ANR	525944	Statement	"""MaxSeparations"""	1871:21:76520:76535	522978	199	True				
ANR	525945	Statement	)	1871:37:76536:76536	522978	200	True				
ANR	525946	IfStatement	"if ( ( code = param_check_bool ( plist , ""Separations"" , false , true ) ) < 0 )"		522978	201					
ANR	525947	Condition	"( code = param_check_bool ( plist , ""Separations"" , false , true ) ) < 0"	1872:8:76546:76609	522978	0	True				
ANR	525948	RelationalExpression	"( code = param_check_bool ( plist , ""Separations"" , false , true ) ) < 0"		522978	0		<			
ANR	525949	AssignmentExpression	"code = param_check_bool ( plist , ""Separations"" , false , true )"		522978	0		=			
ANR	525950	Identifier	code		522978	0					
ANR	525951	CallExpression	"param_check_bool ( plist , ""Separations"" , false , true )"		522978	1					
ANR	525952	Callee	param_check_bool		522978	0					
ANR	525953	Identifier	param_check_bool		522978	0					
ANR	525954	ArgumentList	plist		522978	1					
ANR	525955	Argument	plist		522978	0					
ANR	525956	Identifier	plist		522978	0					
ANR	525957	Argument	"""Separations"""		522978	1					
ANR	525958	PrimaryExpression	"""Separations"""		522978	0					
ANR	525959	Argument	false		522978	2					
ANR	525960	Identifier	false		522978	0					
ANR	525961	Argument	true		522978	3					
ANR	525962	Identifier	true		522978	0					
ANR	525963	PrimaryExpression	0		522978	1					
ANR	525964	ExpressionStatement	ecode = code	1873:8:76620:76632	522978	1	True				
ANR	525965	AssignmentExpression	ecode = code		522978	0		=			
ANR	525966	Identifier	ecode		522978	0					
ANR	525967	Identifier	code		522978	1					
ANR	525968	Statement	BEGIN_ARRAY_PARAM	1875:4:76639:76655	522978	202	True				
ANR	525969	Statement	(	1875:21:76656:76656	522978	203	True				
ANR	525970	Statement	param_read_name_array	1875:22:76657:76677	522978	204	True				
ANR	525971	Statement	","	1875:43:76678:76678	522978	205	True				
ANR	525972	Statement	"""SeparationColorNames"""	1875:45:76680:76701	522978	206	True				
ANR	525973	Statement	","	1875:67:76702:76702	522978	207	True				
ANR	525974	Statement	scna	1875:69:76704:76707	522978	208	True				
ANR	525975	Statement	","	1875:73:76708:76708	522978	209	True				
ANR	525976	Statement	scna	1875:75:76710:76713	522978	210	True				
ANR	525977	Statement	.	1875:79:76714:76714	522978	211	True				
ANR	525978	Statement	size	1875:80:76715:76718	522978	212	True				
ANR	525979	Statement	","	1875:84:76719:76719	522978	213	True				
ANR	525980	Statement	scne	1875:86:76721:76724	522978	214	True				
ANR	525981	Statement	)	1875:90:76725:76725	522978	215	True				
ANR	525982	CompoundStatement		492:92:19415:19415	522978	216					
ANR	525983	BreakStatement	break ;	1876:8:76737:76742	522978	0	True				
ANR	525984	ExpressionStatement	"END_ARRAY_PARAM ( scna , scne )"	1877:6:76750:76777	522978	217	True				
ANR	525985	CallExpression	"END_ARRAY_PARAM ( scna , scne )"		522978	0					
ANR	525986	Callee	END_ARRAY_PARAM		522978	0					
ANR	525987	Identifier	END_ARRAY_PARAM		522978	0					
ANR	525988	ArgumentList	scna		522978	1					
ANR	525989	Argument	scna		522978	0					
ANR	525990	Identifier	scna		522978	0					
ANR	525991	Argument	scne		522978	1					
ANR	525992	Identifier	scne		522978	0					
ANR	525993	IfStatement	"if ( ( code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true ) ) < 0 )"		522978	218					
ANR	525994	Condition	"( code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true ) ) < 0"	1880:8:76840:76911	522978	0	True				
ANR	525995	RelationalExpression	"( code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true ) ) < 0"		522978	0		<			
ANR	525996	AssignmentExpression	"code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true )"		522978	0		=			
ANR	525997	Identifier	code		522978	0					
ANR	525998	CallExpression	"param_check_string ( plist , ""OutputDevice"" , dev -> dname , true )"		522978	1					
ANR	525999	Callee	param_check_string		522978	0					
ANR	526000	Identifier	param_check_string		522978	0					
ANR	526001	ArgumentList	plist		522978	1					
ANR	526002	Argument	plist		522978	0					
ANR	526003	Identifier	plist		522978	0					
ANR	526004	Argument	"""OutputDevice"""		522978	1					
ANR	526005	PrimaryExpression	"""OutputDevice"""		522978	0					
ANR	526006	Argument	dev -> dname		522978	2					
ANR	526007	PtrMemberAccess	dev -> dname		522978	0					
ANR	526008	Identifier	dev		522978	0					
ANR	526009	Identifier	dname		522978	1					
ANR	526010	Argument	true		522978	3					
ANR	526011	Identifier	true		522978	0					
ANR	526012	PrimaryExpression	0		522978	1					
ANR	526013	ExpressionStatement	ecode = code	1881:8:76922:76934	522978	1	True				
ANR	526014	AssignmentExpression	ecode = code		522978	0		=			
ANR	526015	Identifier	ecode		522978	0					
ANR	526016	Identifier	code		522978	1					
ANR	526017	IfStatement	"if ( ( code = param_check_string ( plist , ""Name"" , dev -> dname , true ) ) < 0 )"		522978	219					
ANR	526018	Condition	"( code = param_check_string ( plist , ""Name"" , dev -> dname , true ) ) < 0"	1882:8:76944:77007	522978	0	True				
ANR	526019	RelationalExpression	"( code = param_check_string ( plist , ""Name"" , dev -> dname , true ) ) < 0"		522978	0		<			
ANR	526020	AssignmentExpression	"code = param_check_string ( plist , ""Name"" , dev -> dname , true )"		522978	0		=			
ANR	526021	Identifier	code		522978	0					
ANR	526022	CallExpression	"param_check_string ( plist , ""Name"" , dev -> dname , true )"		522978	1					
ANR	526023	Callee	param_check_string		522978	0					
ANR	526024	Identifier	param_check_string		522978	0					
ANR	526025	ArgumentList	plist		522978	1					
ANR	526026	Argument	plist		522978	0					
ANR	526027	Identifier	plist		522978	0					
ANR	526028	Argument	"""Name"""		522978	1					
ANR	526029	PrimaryExpression	"""Name"""		522978	0					
ANR	526030	Argument	dev -> dname		522978	2					
ANR	526031	PtrMemberAccess	dev -> dname		522978	0					
ANR	526032	Identifier	dev		522978	0					
ANR	526033	Identifier	dname		522978	1					
ANR	526034	Argument	true		522978	3					
ANR	526035	Identifier	true		522978	0					
ANR	526036	PrimaryExpression	0		522978	1					
ANR	526037	ExpressionStatement	ecode = code	1883:8:77018:77030	522978	1	True				
ANR	526038	AssignmentExpression	ecode = code		522978	0		=			
ANR	526039	Identifier	ecode		522978	0					
ANR	526040	Identifier	code		522978	1					
ANR	526041	IfStatement	"if ( ( code = param_check_int ( plist , ""Colors"" , colors , true ) ) < 0 )"		522978	220					
ANR	526042	Condition	"( code = param_check_int ( plist , ""Colors"" , colors , true ) ) < 0"	1884:8:77040:77098	522978	0	True				
ANR	526043	RelationalExpression	"( code = param_check_int ( plist , ""Colors"" , colors , true ) ) < 0"		522978	0		<			
ANR	526044	AssignmentExpression	"code = param_check_int ( plist , ""Colors"" , colors , true )"		522978	0		=			
ANR	526045	Identifier	code		522978	0					
ANR	526046	CallExpression	"param_check_int ( plist , ""Colors"" , colors , true )"		522978	1					
ANR	526047	Callee	param_check_int		522978	0					
ANR	526048	Identifier	param_check_int		522978	0					
ANR	526049	ArgumentList	plist		522978	1					
ANR	526050	Argument	plist		522978	0					
ANR	526051	Identifier	plist		522978	0					
ANR	526052	Argument	"""Colors"""		522978	1					
ANR	526053	PrimaryExpression	"""Colors"""		522978	0					
ANR	526054	Argument	colors		522978	2					
ANR	526055	Identifier	colors		522978	0					
ANR	526056	Argument	true		522978	3					
ANR	526057	Identifier	true		522978	0					
ANR	526058	PrimaryExpression	0		522978	1					
ANR	526059	ExpressionStatement	ecode = code	1885:8:77109:77121	522978	1	True				
ANR	526060	AssignmentExpression	ecode = code		522978	0		=			
ANR	526061	Identifier	ecode		522978	0					
ANR	526062	Identifier	code		522978	1					
ANR	526063	IfStatement	"if ( ( code = param_check_int ( plist , ""BitsPerPixel"" , depth , true ) ) < 0 )"		522978	221					
ANR	526064	Condition	"( code = param_check_int ( plist , ""BitsPerPixel"" , depth , true ) ) < 0"	1886:8:77131:77194	522978	0	True				
ANR	526065	RelationalExpression	"( code = param_check_int ( plist , ""BitsPerPixel"" , depth , true ) ) < 0"		522978	0		<			
ANR	526066	AssignmentExpression	"code = param_check_int ( plist , ""BitsPerPixel"" , depth , true )"		522978	0		=			
ANR	526067	Identifier	code		522978	0					
ANR	526068	CallExpression	"param_check_int ( plist , ""BitsPerPixel"" , depth , true )"		522978	1					
ANR	526069	Callee	param_check_int		522978	0					
ANR	526070	Identifier	param_check_int		522978	0					
ANR	526071	ArgumentList	plist		522978	1					
ANR	526072	Argument	plist		522978	0					
ANR	526073	Identifier	plist		522978	0					
ANR	526074	Argument	"""BitsPerPixel"""		522978	1					
ANR	526075	PrimaryExpression	"""BitsPerPixel"""		522978	0					
ANR	526076	Argument	depth		522978	2					
ANR	526077	Identifier	depth		522978	0					
ANR	526078	Argument	true		522978	3					
ANR	526079	Identifier	true		522978	0					
ANR	526080	PrimaryExpression	0		522978	1					
ANR	526081	ExpressionStatement	ecode = code	1887:8:77205:77217	522978	1	True				
ANR	526082	AssignmentExpression	ecode = code		522978	0		=			
ANR	526083	Identifier	ecode		522978	0					
ANR	526084	Identifier	code		522978	1					
ANR	526085	IfStatement	"if ( ( code = param_check_int ( plist , ""GrayValues"" , GrayValues , true ) ) < 0 )"		522978	222					
ANR	526086	Condition	"( code = param_check_int ( plist , ""GrayValues"" , GrayValues , true ) ) < 0"	1888:8:77227:77293	522978	0	True				
ANR	526087	RelationalExpression	"( code = param_check_int ( plist , ""GrayValues"" , GrayValues , true ) ) < 0"		522978	0		<			
ANR	526088	AssignmentExpression	"code = param_check_int ( plist , ""GrayValues"" , GrayValues , true )"		522978	0		=			
ANR	526089	Identifier	code		522978	0					
ANR	526090	CallExpression	"param_check_int ( plist , ""GrayValues"" , GrayValues , true )"		522978	1					
ANR	526091	Callee	param_check_int		522978	0					
ANR	526092	Identifier	param_check_int		522978	0					
ANR	526093	ArgumentList	plist		522978	1					
ANR	526094	Argument	plist		522978	0					
ANR	526095	Identifier	plist		522978	0					
ANR	526096	Argument	"""GrayValues"""		522978	1					
ANR	526097	PrimaryExpression	"""GrayValues"""		522978	0					
ANR	526098	Argument	GrayValues		522978	2					
ANR	526099	Identifier	GrayValues		522978	0					
ANR	526100	Argument	true		522978	3					
ANR	526101	Identifier	true		522978	0					
ANR	526102	PrimaryExpression	0		522978	1					
ANR	526103	ExpressionStatement	ecode = code	1889:8:77304:77316	522978	1	True				
ANR	526104	AssignmentExpression	ecode = code		522978	0		=			
ANR	526105	Identifier	ecode		522978	0					
ANR	526106	Identifier	code		522978	1					
ANR	526107	Statement	IGNORE_INT_PARAM	1892:4:77408:77423	522978	223	True				
ANR	526108	Statement	(	1892:20:77424:77424	522978	224	True				
ANR	526109	Statement	"""PageCount"""	1892:21:77425:77435	522978	225	True				
ANR	526110	Statement	)	1892:32:77436:77436	522978	226	True				
ANR	526111	IfStatement	"if ( ( code = param_check_int ( plist , ""RedValues"" , RGBValues , true ) ) < 0 )"		522978	227					
ANR	526112	Condition	"( code = param_check_int ( plist , ""RedValues"" , RGBValues , true ) ) < 0"	1894:8:77447:77511	522978	0	True				
ANR	526113	RelationalExpression	"( code = param_check_int ( plist , ""RedValues"" , RGBValues , true ) ) < 0"		522978	0		<			
ANR	526114	AssignmentExpression	"code = param_check_int ( plist , ""RedValues"" , RGBValues , true )"		522978	0		=			
ANR	526115	Identifier	code		522978	0					
ANR	526116	CallExpression	"param_check_int ( plist , ""RedValues"" , RGBValues , true )"		522978	1					
ANR	526117	Callee	param_check_int		522978	0					
ANR	526118	Identifier	param_check_int		522978	0					
ANR	526119	ArgumentList	plist		522978	1					
ANR	526120	Argument	plist		522978	0					
ANR	526121	Identifier	plist		522978	0					
ANR	526122	Argument	"""RedValues"""		522978	1					
ANR	526123	PrimaryExpression	"""RedValues"""		522978	0					
ANR	526124	Argument	RGBValues		522978	2					
ANR	526125	Identifier	RGBValues		522978	0					
ANR	526126	Argument	true		522978	3					
ANR	526127	Identifier	true		522978	0					
ANR	526128	PrimaryExpression	0		522978	1					
ANR	526129	ExpressionStatement	ecode = code	1895:8:77522:77534	522978	1	True				
ANR	526130	AssignmentExpression	ecode = code		522978	0		=			
ANR	526131	Identifier	ecode		522978	0					
ANR	526132	Identifier	code		522978	1					
ANR	526133	IfStatement	"if ( ( code = param_check_int ( plist , ""GreenValues"" , RGBValues , true ) ) < 0 )"		522978	228					
ANR	526134	Condition	"( code = param_check_int ( plist , ""GreenValues"" , RGBValues , true ) ) < 0"	1896:8:77544:77610	522978	0	True				
ANR	526135	RelationalExpression	"( code = param_check_int ( plist , ""GreenValues"" , RGBValues , true ) ) < 0"		522978	0		<			
ANR	526136	AssignmentExpression	"code = param_check_int ( plist , ""GreenValues"" , RGBValues , true )"		522978	0		=			
ANR	526137	Identifier	code		522978	0					
ANR	526138	CallExpression	"param_check_int ( plist , ""GreenValues"" , RGBValues , true )"		522978	1					
ANR	526139	Callee	param_check_int		522978	0					
ANR	526140	Identifier	param_check_int		522978	0					
ANR	526141	ArgumentList	plist		522978	1					
ANR	526142	Argument	plist		522978	0					
ANR	526143	Identifier	plist		522978	0					
ANR	526144	Argument	"""GreenValues"""		522978	1					
ANR	526145	PrimaryExpression	"""GreenValues"""		522978	0					
ANR	526146	Argument	RGBValues		522978	2					
ANR	526147	Identifier	RGBValues		522978	0					
ANR	526148	Argument	true		522978	3					
ANR	526149	Identifier	true		522978	0					
ANR	526150	PrimaryExpression	0		522978	1					
ANR	526151	ExpressionStatement	ecode = code	1897:8:77621:77633	522978	1	True				
ANR	526152	AssignmentExpression	ecode = code		522978	0		=			
ANR	526153	Identifier	ecode		522978	0					
ANR	526154	Identifier	code		522978	1					
ANR	526155	IfStatement	"if ( ( code = param_check_int ( plist , ""BlueValues"" , RGBValues , true ) ) < 0 )"		522978	229					
ANR	526156	Condition	"( code = param_check_int ( plist , ""BlueValues"" , RGBValues , true ) ) < 0"	1898:8:77643:77708	522978	0	True				
ANR	526157	RelationalExpression	"( code = param_check_int ( plist , ""BlueValues"" , RGBValues , true ) ) < 0"		522978	0		<			
ANR	526158	AssignmentExpression	"code = param_check_int ( plist , ""BlueValues"" , RGBValues , true )"		522978	0		=			
ANR	526159	Identifier	code		522978	0					
ANR	526160	CallExpression	"param_check_int ( plist , ""BlueValues"" , RGBValues , true )"		522978	1					
ANR	526161	Callee	param_check_int		522978	0					
ANR	526162	Identifier	param_check_int		522978	0					
ANR	526163	ArgumentList	plist		522978	1					
ANR	526164	Argument	plist		522978	0					
ANR	526165	Identifier	plist		522978	0					
ANR	526166	Argument	"""BlueValues"""		522978	1					
ANR	526167	PrimaryExpression	"""BlueValues"""		522978	0					
ANR	526168	Argument	RGBValues		522978	2					
ANR	526169	Identifier	RGBValues		522978	0					
ANR	526170	Argument	true		522978	3					
ANR	526171	Identifier	true		522978	0					
ANR	526172	PrimaryExpression	0		522978	1					
ANR	526173	ExpressionStatement	ecode = code	1899:8:77719:77731	522978	1	True				
ANR	526174	AssignmentExpression	ecode = code		522978	0		=			
ANR	526175	Identifier	ecode		522978	0					
ANR	526176	Identifier	code		522978	1					
ANR	526177	IfStatement	"if ( ( code = param_check_long ( plist , ""ColorValues"" , ColorValues , true ) ) < 0 )"		522978	230					
ANR	526178	Condition	"( code = param_check_long ( plist , ""ColorValues"" , ColorValues , true ) ) < 0"	1900:8:77741:77810	522978	0	True				
ANR	526179	RelationalExpression	"( code = param_check_long ( plist , ""ColorValues"" , ColorValues , true ) ) < 0"		522978	0		<			
ANR	526180	AssignmentExpression	"code = param_check_long ( plist , ""ColorValues"" , ColorValues , true )"		522978	0		=			
ANR	526181	Identifier	code		522978	0					
ANR	526182	CallExpression	"param_check_long ( plist , ""ColorValues"" , ColorValues , true )"		522978	1					
ANR	526183	Callee	param_check_long		522978	0					
ANR	526184	Identifier	param_check_long		522978	0					
ANR	526185	ArgumentList	plist		522978	1					
ANR	526186	Argument	plist		522978	0					
ANR	526187	Identifier	plist		522978	0					
ANR	526188	Argument	"""ColorValues"""		522978	1					
ANR	526189	PrimaryExpression	"""ColorValues"""		522978	0					
ANR	526190	Argument	ColorValues		522978	2					
ANR	526191	Identifier	ColorValues		522978	0					
ANR	526192	Argument	true		522978	3					
ANR	526193	Identifier	true		522978	0					
ANR	526194	PrimaryExpression	0		522978	1					
ANR	526195	ExpressionStatement	ecode = code	1901:8:77821:77833	522978	1	True				
ANR	526196	AssignmentExpression	ecode = code		522978	0		=			
ANR	526197	Identifier	ecode		522978	0					
ANR	526198	Identifier	code		522978	1					
ANR	526199	IfStatement	"if ( param_read_string ( plist , ""HWColorMap"" , & cms ) != 1 )"		522978	231					
ANR	526200	Condition	"param_read_string ( plist , ""HWColorMap"" , & cms ) != 1"	1902:8:77843:77891	522978	0	True				
ANR	526201	EqualityExpression	"param_read_string ( plist , ""HWColorMap"" , & cms ) != 1"		522978	0		!=			
ANR	526202	CallExpression	"param_read_string ( plist , ""HWColorMap"" , & cms )"		522978	0					
ANR	526203	Callee	param_read_string		522978	0					
ANR	526204	Identifier	param_read_string		522978	0					
ANR	526205	ArgumentList	plist		522978	1					
ANR	526206	Argument	plist		522978	0					
ANR	526207	Identifier	plist		522978	0					
ANR	526208	Argument	"""HWColorMap"""		522978	1					
ANR	526209	PrimaryExpression	"""HWColorMap"""		522978	0					
ANR	526210	Argument	& cms		522978	2					
ANR	526211	UnaryOperationExpression	& cms		522978	0					
ANR	526212	UnaryOperator	&		522978	0					
ANR	526213	Identifier	cms		522978	1					
ANR	526214	PrimaryExpression	1		522978	1					
ANR	526215	CompoundStatement		520:8:20592:20612	522978	1					
ANR	526216	IdentifierDeclStatement	byte palette [ 3 << 8 ] ;	1903:8:77904:77924	522978	0	True				
ANR	526217	IdentifierDecl	palette [ 3 << 8 ]		522978	0					
ANR	526218	IdentifierDeclType	byte [ 3 << 8 ]		522978	0					
ANR	526219	Identifier	palette		522978	1					
ANR	526220	ShiftExpression	3 << 8		522978	2		<<			
ANR	526221	PrimaryExpression	3		522978	0					
ANR	526222	PrimaryExpression	8		522978	1					
ANR	526223	IfStatement	"if ( param_HWColorMap ( dev , palette ) )"		522978	1					
ANR	526224	Condition	"param_HWColorMap ( dev , palette )"	1905:12:77939:77968	522978	0	True				
ANR	526225	CallExpression	"param_HWColorMap ( dev , palette )"		522978	0					
ANR	526226	Callee	param_HWColorMap		522978	0					
ANR	526227	Identifier	param_HWColorMap		522978	0					
ANR	526228	ArgumentList	dev		522978	1					
ANR	526229	Argument	dev		522978	0					
ANR	526230	Identifier	dev		522978	0					
ANR	526231	Argument	palette		522978	1					
ANR	526232	Identifier	palette		522978	0					
ANR	526233	ExpressionStatement	"code = param_check_bytes ( plist , ""HWColorMap"" , palette , colors << depth , true )"	1906:12:77983:78097	522978	1	True				
ANR	526234	AssignmentExpression	"code = param_check_bytes ( plist , ""HWColorMap"" , palette , colors << depth , true )"		522978	0		=			
ANR	526235	Identifier	code		522978	0					
ANR	526236	CallExpression	"param_check_bytes ( plist , ""HWColorMap"" , palette , colors << depth , true )"		522978	1					
ANR	526237	Callee	param_check_bytes		522978	0					
ANR	526238	Identifier	param_check_bytes		522978	0					
ANR	526239	ArgumentList	plist		522978	1					
ANR	526240	Argument	plist		522978	0					
ANR	526241	Identifier	plist		522978	0					
ANR	526242	Argument	"""HWColorMap"""		522978	1					
ANR	526243	PrimaryExpression	"""HWColorMap"""		522978	0					
ANR	526244	Argument	palette		522978	2					
ANR	526245	Identifier	palette		522978	0					
ANR	526246	Argument	colors << depth		522978	3					
ANR	526247	ShiftExpression	colors << depth		522978	0		<<			
ANR	526248	Identifier	colors		522978	0					
ANR	526249	Identifier	depth		522978	1					
ANR	526250	Argument	true		522978	4					
ANR	526251	Identifier	true		522978	0					
ANR	526252	ElseStatement	else		522978	0					
ANR	526253	ExpressionStatement	"code = param_check_bytes ( plist , ""HWColorMap"" , 0 , 0 , false )"	1909:12:78124:78182	522978	0	True				
ANR	526254	AssignmentExpression	"code = param_check_bytes ( plist , ""HWColorMap"" , 0 , 0 , false )"		522978	0		=			
ANR	526255	Identifier	code		522978	0					
ANR	526256	CallExpression	"param_check_bytes ( plist , ""HWColorMap"" , 0 , 0 , false )"		522978	1					
ANR	526257	Callee	param_check_bytes		522978	0					
ANR	526258	Identifier	param_check_bytes		522978	0					
ANR	526259	ArgumentList	plist		522978	1					
ANR	526260	Argument	plist		522978	0					
ANR	526261	Identifier	plist		522978	0					
ANR	526262	Argument	"""HWColorMap"""		522978	1					
ANR	526263	PrimaryExpression	"""HWColorMap"""		522978	0					
ANR	526264	Argument	0		522978	2					
ANR	526265	PrimaryExpression	0		522978	0					
ANR	526266	Argument	0		522978	3					
ANR	526267	PrimaryExpression	0		522978	0					
ANR	526268	Argument	false		522978	4					
ANR	526269	Identifier	false		522978	0					
ANR	526270	IfStatement	if ( code < 0 )		522978	2					
ANR	526271	Condition	code < 0	1910:12:78196:78203	522978	0	True				
ANR	526272	RelationalExpression	code < 0		522978	0		<			
ANR	526273	Identifier	code		522978	0					
ANR	526274	PrimaryExpression	0		522978	1					
ANR	526275	ExpressionStatement	ecode = code	1911:12:78218:78230	522978	1	True				
ANR	526276	AssignmentExpression	ecode = code		522978	0		=			
ANR	526277	Identifier	ecode		522978	0					
ANR	526278	Identifier	code		522978	1					
ANR	526279	ExpressionStatement	"code = param_read_int ( plist , ""FirstPage"" , & dev -> FirstPage )"	1914:4:78243:78301	522978	232	True				
ANR	526280	AssignmentExpression	"code = param_read_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		522978	0		=			
ANR	526281	Identifier	code		522978	0					
ANR	526282	CallExpression	"param_read_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		522978	1					
ANR	526283	Callee	param_read_int		522978	0					
ANR	526284	Identifier	param_read_int		522978	0					
ANR	526285	ArgumentList	plist		522978	1					
ANR	526286	Argument	plist		522978	0					
ANR	526287	Identifier	plist		522978	0					
ANR	526288	Argument	"""FirstPage"""		522978	1					
ANR	526289	PrimaryExpression	"""FirstPage"""		522978	0					
ANR	526290	Argument	& dev -> FirstPage		522978	2					
ANR	526291	UnaryOperationExpression	& dev -> FirstPage		522978	0					
ANR	526292	UnaryOperator	&		522978	0					
ANR	526293	PtrMemberAccess	dev -> FirstPage		522978	1					
ANR	526294	Identifier	dev		522978	0					
ANR	526295	Identifier	FirstPage		522978	1					
ANR	526296	IfStatement	if ( code < 0 )		522978	233					
ANR	526297	Condition	code < 0	1915:8:78311:78318	522978	0	True				
ANR	526298	RelationalExpression	code < 0		522978	0		<			
ANR	526299	Identifier	code		522978	0					
ANR	526300	PrimaryExpression	0		522978	1					
ANR	526301	ExpressionStatement	ecode = code	1916:8:78329:78341	522978	1	True				
ANR	526302	AssignmentExpression	ecode = code		522978	0		=			
ANR	526303	Identifier	ecode		522978	0					
ANR	526304	Identifier	code		522978	1					
ANR	526305	ExpressionStatement	"code = param_read_int ( plist , ""LastPage"" , & dev -> LastPage )"	1918:4:78348:78405	522978	234	True				
ANR	526306	AssignmentExpression	"code = param_read_int ( plist , ""LastPage"" , & dev -> LastPage )"		522978	0		=			
ANR	526307	Identifier	code		522978	0					
ANR	526308	CallExpression	"param_read_int ( plist , ""LastPage"" , & dev -> LastPage )"		522978	1					
ANR	526309	Callee	param_read_int		522978	0					
ANR	526310	Identifier	param_read_int		522978	0					
ANR	526311	ArgumentList	plist		522978	1					
ANR	526312	Argument	plist		522978	0					
ANR	526313	Identifier	plist		522978	0					
ANR	526314	Argument	"""LastPage"""		522978	1					
ANR	526315	PrimaryExpression	"""LastPage"""		522978	0					
ANR	526316	Argument	& dev -> LastPage		522978	2					
ANR	526317	UnaryOperationExpression	& dev -> LastPage		522978	0					
ANR	526318	UnaryOperator	&		522978	0					
ANR	526319	PtrMemberAccess	dev -> LastPage		522978	1					
ANR	526320	Identifier	dev		522978	0					
ANR	526321	Identifier	LastPage		522978	1					
ANR	526322	IfStatement	if ( code < 0 )		522978	235					
ANR	526323	Condition	code < 0	1919:8:78415:78422	522978	0	True				
ANR	526324	RelationalExpression	code < 0		522978	0		<			
ANR	526325	Identifier	code		522978	0					
ANR	526326	PrimaryExpression	0		522978	1					
ANR	526327	ExpressionStatement	ecode = code	1920:8:78433:78445	522978	1	True				
ANR	526328	AssignmentExpression	ecode = code		522978	0		=			
ANR	526329	Identifier	ecode		522978	0					
ANR	526330	Identifier	code		522978	1					
ANR	526331	ExpressionStatement	"code = param_read_bool ( plist , ""DisablePageHandler"" , & temp_bool )"	1922:4:78452:78515	522978	236	True				
ANR	526332	AssignmentExpression	"code = param_read_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		522978	0		=			
ANR	526333	Identifier	code		522978	0					
ANR	526334	CallExpression	"param_read_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		522978	1					
ANR	526335	Callee	param_read_bool		522978	0					
ANR	526336	Identifier	param_read_bool		522978	0					
ANR	526337	ArgumentList	plist		522978	1					
ANR	526338	Argument	plist		522978	0					
ANR	526339	Identifier	plist		522978	0					
ANR	526340	Argument	"""DisablePageHandler"""		522978	1					
ANR	526341	PrimaryExpression	"""DisablePageHandler"""		522978	0					
ANR	526342	Argument	& temp_bool		522978	2					
ANR	526343	UnaryOperationExpression	& temp_bool		522978	0					
ANR	526344	UnaryOperator	&		522978	0					
ANR	526345	Identifier	temp_bool		522978	1					
ANR	526346	IfStatement	if ( code < 0 )		522978	237					
ANR	526347	Condition	code < 0	1923:8:78525:78532	522978	0	True				
ANR	526348	RelationalExpression	code < 0		522978	0		<			
ANR	526349	Identifier	code		522978	0					
ANR	526350	PrimaryExpression	0		522978	1					
ANR	526351	ExpressionStatement	ecode = code	1924:8:78543:78555	522978	1	True				
ANR	526352	AssignmentExpression	ecode = code		522978	0		=			
ANR	526353	Identifier	ecode		522978	0					
ANR	526354	Identifier	code		522978	1					
ANR	526355	IfStatement	if ( code == 0 )		522978	238					
ANR	526356	Condition	code == 0	1925:8:78565:78573	522978	0	True				
ANR	526357	EqualityExpression	code == 0		522978	0		==			
ANR	526358	Identifier	code		522978	0					
ANR	526359	PrimaryExpression	0		522978	1					
ANR	526360	ExpressionStatement	dev -> DisablePageHandler = temp_bool	1926:8:78584:78619	522978	1	True				
ANR	526361	AssignmentExpression	dev -> DisablePageHandler = temp_bool		522978	0		=			
ANR	526362	PtrMemberAccess	dev -> DisablePageHandler		522978	0					
ANR	526363	Identifier	dev		522978	0					
ANR	526364	Identifier	DisablePageHandler		522978	1					
ANR	526365	Identifier	temp_bool		522978	1					
ANR	526366	IfStatement	"if ( ( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1 && pagelist . size > 0 )"		522978	239					
ANR	526367	Condition	"( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1 && pagelist . size > 0"	1928:8:78630:78711	522978	0	True				
ANR	526368	AndExpression	"( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1 && pagelist . size > 0"		522978	0		&&			
ANR	526369	EqualityExpression	"( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1"		522978	0		!=			
ANR	526370	AssignmentExpression	"code = param_read_string ( plist , ""PageList"" , & pagelist )"		522978	0		=			
ANR	526371	Identifier	code		522978	0					
ANR	526372	CallExpression	"param_read_string ( plist , ""PageList"" , & pagelist )"		522978	1					
ANR	526373	Callee	param_read_string		522978	0					
ANR	526374	Identifier	param_read_string		522978	0					
ANR	526375	ArgumentList	plist		522978	1					
ANR	526376	Argument	plist		522978	0					
ANR	526377	Identifier	plist		522978	0					
ANR	526378	Argument	"""PageList"""		522978	1					
ANR	526379	PrimaryExpression	"""PageList"""		522978	0					
ANR	526380	Argument	& pagelist		522978	2					
ANR	526381	UnaryOperationExpression	& pagelist		522978	0					
ANR	526382	UnaryOperator	&		522978	0					
ANR	526383	Identifier	pagelist		522978	1					
ANR	526384	PrimaryExpression	1		522978	1					
ANR	526385	RelationalExpression	pagelist . size > 0		522978	1		>			
ANR	526386	MemberAccess	pagelist . size		522978	0					
ANR	526387	Identifier	pagelist		522978	0					
ANR	526388	Identifier	size		522978	1					
ANR	526389	PrimaryExpression	0		522978	1					
ANR	526390	CompoundStatement		545:92:21402:21402	522978	1					
ANR	526391	IfStatement	if ( dev -> PageList )		522978	0					
ANR	526392	Condition	dev -> PageList	1929:12:78728:78740	522978	0	True				
ANR	526393	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526394	Identifier	dev		522978	0					
ANR	526395	Identifier	PageList		522978	1					
ANR	526396	ExpressionStatement	"rc_decrement ( dev -> PageList , ""default put_params PageList"" )"	1930:12:78755:78813	522978	1	True				
ANR	526397	CallExpression	"rc_decrement ( dev -> PageList , ""default put_params PageList"" )"		522978	0					
ANR	526398	Callee	rc_decrement		522978	0					
ANR	526399	Identifier	rc_decrement		522978	0					
ANR	526400	ArgumentList	dev -> PageList		522978	1					
ANR	526401	Argument	dev -> PageList		522978	0					
ANR	526402	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526403	Identifier	dev		522978	0					
ANR	526404	Identifier	PageList		522978	1					
ANR	526405	Argument	"""default put_params PageList"""		522978	1					
ANR	526406	PrimaryExpression	"""default put_params PageList"""		522978	0					
ANR	526407	ExpressionStatement	"dev -> PageList = ( gdev_pagelist * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"	1931:8:78823:78952	522978	1	True				
ANR	526408	AssignmentExpression	"dev -> PageList = ( gdev_pagelist * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"		522978	0		=			
ANR	526409	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526410	Identifier	dev		522978	0					
ANR	526411	Identifier	PageList		522978	1					
ANR	526412	CastExpression	"( gdev_pagelist * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"		522978	1					
ANR	526413	CastTarget	gdev_pagelist *		522978	0					
ANR	526414	CallExpression	"gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"		522978	1					
ANR	526415	Callee	gs_alloc_bytes		522978	0					
ANR	526416	Identifier	gs_alloc_bytes		522978	0					
ANR	526417	ArgumentList	dev -> memory -> non_gc_memory		522978	1					
ANR	526418	Argument	dev -> memory -> non_gc_memory		522978	0					
ANR	526419	PtrMemberAccess	dev -> memory -> non_gc_memory		522978	0					
ANR	526420	PtrMemberAccess	dev -> memory		522978	0					
ANR	526421	Identifier	dev		522978	0					
ANR	526422	Identifier	memory		522978	1					
ANR	526423	Identifier	non_gc_memory		522978	1					
ANR	526424	Argument	sizeof ( gdev_pagelist )		522978	1					
ANR	526425	SizeofExpression	sizeof ( gdev_pagelist )		522978	0					
ANR	526426	Sizeof	sizeof		522978	0					
ANR	526427	SizeofOperand	gdev_pagelist		522978	1					
ANR	526428	Argument	"""structure to hold page list"""		522978	2					
ANR	526429	PrimaryExpression	"""structure to hold page list"""		522978	0					
ANR	526430	IfStatement	if ( ! dev -> PageList )		522978	2					
ANR	526431	Condition	! dev -> PageList	1932:12:78966:78979	522978	0	True				
ANR	526432	UnaryOperationExpression	! dev -> PageList		522978	0					
ANR	526433	UnaryOperator	!		522978	0					
ANR	526434	PtrMemberAccess	dev -> PageList		522978	1					
ANR	526435	Identifier	dev		522978	0					
ANR	526436	Identifier	PageList		522978	1					
ANR	526437	ReturnStatement	return gs_note_error ( gs_error_VMerror ) ;	1933:12:78994:79032	522978	1	True				
ANR	526438	CallExpression	gs_note_error ( gs_error_VMerror )		522978	0					
ANR	526439	Callee	gs_note_error		522978	0					
ANR	526440	Identifier	gs_note_error		522978	0					
ANR	526441	ArgumentList	gs_error_VMerror		522978	1					
ANR	526442	Argument	gs_error_VMerror		522978	0					
ANR	526443	Identifier	gs_error_VMerror		522978	0					
ANR	526444	ExpressionStatement	"dev -> PageList -> Pages = ( void * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"	1934:8:79042:79162	522978	3	True				
ANR	526445	AssignmentExpression	"dev -> PageList -> Pages = ( void * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"		522978	0		=			
ANR	526446	PtrMemberAccess	dev -> PageList -> Pages		522978	0					
ANR	526447	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526448	Identifier	dev		522978	0					
ANR	526449	Identifier	PageList		522978	1					
ANR	526450	Identifier	Pages		522978	1					
ANR	526451	CastExpression	"( void * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"		522978	1					
ANR	526452	CastTarget	void *		522978	0					
ANR	526453	CallExpression	"gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"		522978	1					
ANR	526454	Callee	gs_alloc_bytes		522978	0					
ANR	526455	Identifier	gs_alloc_bytes		522978	0					
ANR	526456	ArgumentList	dev -> memory -> non_gc_memory		522978	1					
ANR	526457	Argument	dev -> memory -> non_gc_memory		522978	0					
ANR	526458	PtrMemberAccess	dev -> memory -> non_gc_memory		522978	0					
ANR	526459	PtrMemberAccess	dev -> memory		522978	0					
ANR	526460	Identifier	dev		522978	0					
ANR	526461	Identifier	memory		522978	1					
ANR	526462	Identifier	non_gc_memory		522978	1					
ANR	526463	Argument	pagelist . size + 1		522978	1					
ANR	526464	AdditiveExpression	pagelist . size + 1		522978	0		+			
ANR	526465	MemberAccess	pagelist . size		522978	0					
ANR	526466	Identifier	pagelist		522978	0					
ANR	526467	Identifier	size		522978	1					
ANR	526468	PrimaryExpression	1		522978	1					
ANR	526469	Argument	"""String to hold page list"""		522978	2					
ANR	526470	PrimaryExpression	"""String to hold page list"""		522978	0					
ANR	526471	IfStatement	if ( ! dev -> PageList -> Pages )		522978	4					
ANR	526472	Condition	! dev -> PageList -> Pages	1935:12:79176:79196	522978	0	True				
ANR	526473	UnaryOperationExpression	! dev -> PageList -> Pages		522978	0					
ANR	526474	UnaryOperator	!		522978	0					
ANR	526475	PtrMemberAccess	dev -> PageList -> Pages		522978	1					
ANR	526476	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526477	Identifier	dev		522978	0					
ANR	526478	Identifier	PageList		522978	1					
ANR	526479	Identifier	Pages		522978	1					
ANR	526480	CompoundStatement		552:34:21886:21886	522978	1					
ANR	526481	ExpressionStatement	"gs_free ( dev -> memory -> non_gc_memory , dev -> PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"	1936:12:79212:79324	522978	0	True				
ANR	526482	CallExpression	"gs_free ( dev -> memory -> non_gc_memory , dev -> PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"		522978	0					
ANR	526483	Callee	gs_free		522978	0					
ANR	526484	Identifier	gs_free		522978	0					
ANR	526485	ArgumentList	dev -> memory -> non_gc_memory		522978	1					
ANR	526486	Argument	dev -> memory -> non_gc_memory		522978	0					
ANR	526487	PtrMemberAccess	dev -> memory -> non_gc_memory		522978	0					
ANR	526488	PtrMemberAccess	dev -> memory		522978	0					
ANR	526489	Identifier	dev		522978	0					
ANR	526490	Identifier	memory		522978	1					
ANR	526491	Identifier	non_gc_memory		522978	1					
ANR	526492	Argument	dev -> PageList		522978	1					
ANR	526493	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526494	Identifier	dev		522978	0					
ANR	526495	Identifier	PageList		522978	1					
ANR	526496	Argument	1		522978	2					
ANR	526497	PrimaryExpression	1		522978	0					
ANR	526498	Argument	sizeof ( gdev_pagelist )		522978	3					
ANR	526499	SizeofExpression	sizeof ( gdev_pagelist )		522978	0					
ANR	526500	Sizeof	sizeof		522978	0					
ANR	526501	SizeofOperand	gdev_pagelist		522978	1					
ANR	526502	Argument	"""free structure to hold page list"""		522978	4					
ANR	526503	PrimaryExpression	"""free structure to hold page list"""		522978	0					
ANR	526504	ExpressionStatement	dev -> PageList = 0	1937:12:79338:79355	522978	1	True				
ANR	526505	AssignmentExpression	dev -> PageList = 0		522978	0		=			
ANR	526506	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526507	Identifier	dev		522978	0					
ANR	526508	Identifier	PageList		522978	1					
ANR	526509	PrimaryExpression	0		522978	1					
ANR	526510	ReturnStatement	return gs_note_error ( gs_error_VMerror ) ;	1938:12:79369:79407	522978	2	True				
ANR	526511	CallExpression	gs_note_error ( gs_error_VMerror )		522978	0					
ANR	526512	Callee	gs_note_error		522978	0					
ANR	526513	Identifier	gs_note_error		522978	0					
ANR	526514	ArgumentList	gs_error_VMerror		522978	1					
ANR	526515	Argument	gs_error_VMerror		522978	0					
ANR	526516	Identifier	gs_error_VMerror		522978	0					
ANR	526517	ExpressionStatement	"memset ( dev -> PageList -> Pages , 0x00 , pagelist . size + 1 )"	1940:8:79427:79480	522978	5	True				
ANR	526518	CallExpression	"memset ( dev -> PageList -> Pages , 0x00 , pagelist . size + 1 )"		522978	0					
ANR	526519	Callee	memset		522978	0					
ANR	526520	Identifier	memset		522978	0					
ANR	526521	ArgumentList	dev -> PageList -> Pages		522978	1					
ANR	526522	Argument	dev -> PageList -> Pages		522978	0					
ANR	526523	PtrMemberAccess	dev -> PageList -> Pages		522978	0					
ANR	526524	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526525	Identifier	dev		522978	0					
ANR	526526	Identifier	PageList		522978	1					
ANR	526527	Identifier	Pages		522978	1					
ANR	526528	Argument	0x00		522978	1					
ANR	526529	PrimaryExpression	0x00		522978	0					
ANR	526530	Argument	pagelist . size + 1		522978	2					
ANR	526531	AdditiveExpression	pagelist . size + 1		522978	0		+			
ANR	526532	MemberAccess	pagelist . size		522978	0					
ANR	526533	Identifier	pagelist		522978	0					
ANR	526534	Identifier	size		522978	1					
ANR	526535	PrimaryExpression	1		522978	1					
ANR	526536	ExpressionStatement	"memcpy ( dev -> PageList -> Pages , pagelist . data , pagelist . size )"	1941:8:79490:79548	522978	6	True				
ANR	526537	CallExpression	"memcpy ( dev -> PageList -> Pages , pagelist . data , pagelist . size )"		522978	0					
ANR	526538	Callee	memcpy		522978	0					
ANR	526539	Identifier	memcpy		522978	0					
ANR	526540	ArgumentList	dev -> PageList -> Pages		522978	1					
ANR	526541	Argument	dev -> PageList -> Pages		522978	0					
ANR	526542	PtrMemberAccess	dev -> PageList -> Pages		522978	0					
ANR	526543	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526544	Identifier	dev		522978	0					
ANR	526545	Identifier	PageList		522978	1					
ANR	526546	Identifier	Pages		522978	1					
ANR	526547	Argument	pagelist . data		522978	1					
ANR	526548	MemberAccess	pagelist . data		522978	0					
ANR	526549	Identifier	pagelist		522978	0					
ANR	526550	Identifier	data		522978	1					
ANR	526551	Argument	pagelist . size		522978	2					
ANR	526552	MemberAccess	pagelist . size		522978	0					
ANR	526553	Identifier	pagelist		522978	0					
ANR	526554	Identifier	size		522978	1					
ANR	526555	ExpressionStatement	dev -> PageList -> PagesSize = pagelist . size + 1	1942:8:79558:79602	522978	7	True				
ANR	526556	AssignmentExpression	dev -> PageList -> PagesSize = pagelist . size + 1		522978	0		=			
ANR	526557	PtrMemberAccess	dev -> PageList -> PagesSize		522978	0					
ANR	526558	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526559	Identifier	dev		522978	0					
ANR	526560	Identifier	PageList		522978	1					
ANR	526561	Identifier	PagesSize		522978	1					
ANR	526562	AdditiveExpression	pagelist . size + 1		522978	1		+			
ANR	526563	MemberAccess	pagelist . size		522978	0					
ANR	526564	Identifier	pagelist		522978	0					
ANR	526565	Identifier	size		522978	1					
ANR	526566	PrimaryExpression	1		522978	1					
ANR	526567	ExpressionStatement	"rc_init_free ( dev -> PageList , dev -> memory -> non_gc_memory , 1 , rc_free_pages_list )"	1943:8:79612:79690	522978	8	True				
ANR	526568	CallExpression	"rc_init_free ( dev -> PageList , dev -> memory -> non_gc_memory , 1 , rc_free_pages_list )"		522978	0					
ANR	526569	Callee	rc_init_free		522978	0					
ANR	526570	Identifier	rc_init_free		522978	0					
ANR	526571	ArgumentList	dev -> PageList		522978	1					
ANR	526572	Argument	dev -> PageList		522978	0					
ANR	526573	PtrMemberAccess	dev -> PageList		522978	0					
ANR	526574	Identifier	dev		522978	0					
ANR	526575	Identifier	PageList		522978	1					
ANR	526576	Argument	dev -> memory -> non_gc_memory		522978	1					
ANR	526577	PtrMemberAccess	dev -> memory -> non_gc_memory		522978	0					
ANR	526578	PtrMemberAccess	dev -> memory		522978	0					
ANR	526579	Identifier	dev		522978	0					
ANR	526580	Identifier	memory		522978	1					
ANR	526581	Identifier	non_gc_memory		522978	1					
ANR	526582	Argument	1		522978	2					
ANR	526583	PrimaryExpression	1		522978	0					
ANR	526584	Argument	rc_free_pages_list		522978	3					
ANR	526585	Identifier	rc_free_pages_list		522978	0					
ANR	526586	ExpressionStatement	"code = param_read_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"	1946:4:79703:79759	522978	240	True				
ANR	526587	AssignmentExpression	"code = param_read_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		522978	0		=			
ANR	526588	Identifier	code		522978	0					
ANR	526589	CallExpression	"param_read_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		522978	1					
ANR	526590	Callee	param_read_bool		522978	0					
ANR	526591	Identifier	param_read_bool		522978	0					
ANR	526592	ArgumentList	plist		522978	1					
ANR	526593	Argument	plist		522978	0					
ANR	526594	Identifier	plist		522978	0					
ANR	526595	Argument	"""FILTERIMAGE"""		522978	1					
ANR	526596	PrimaryExpression	"""FILTERIMAGE"""		522978	0					
ANR	526597	Argument	& temp_bool		522978	2					
ANR	526598	UnaryOperationExpression	& temp_bool		522978	0					
ANR	526599	UnaryOperator	&		522978	0					
ANR	526600	Identifier	temp_bool		522978	1					
ANR	526601	IfStatement	if ( code < 0 )		522978	241					
ANR	526602	Condition	code < 0	1947:8:79769:79776	522978	0	True				
ANR	526603	RelationalExpression	code < 0		522978	0		<			
ANR	526604	Identifier	code		522978	0					
ANR	526605	PrimaryExpression	0		522978	1					
ANR	526606	ExpressionStatement	ecode = code	1948:8:79787:79799	522978	1	True				
ANR	526607	AssignmentExpression	ecode = code		522978	0		=			
ANR	526608	Identifier	ecode		522978	0					
ANR	526609	Identifier	code		522978	1					
ANR	526610	IfStatement	if ( code == 0 )		522978	242					
ANR	526611	Condition	code == 0	1949:8:79809:79817	522978	0	True				
ANR	526612	EqualityExpression	code == 0		522978	0		==			
ANR	526613	Identifier	code		522978	0					
ANR	526614	PrimaryExpression	0		522978	1					
ANR	526615	CompoundStatement		566:19:22508:22508	522978	1					
ANR	526616	IfStatement	if ( temp_bool )		522978	0					
ANR	526617	Condition	temp_bool	1950:12:79834:79842	522978	0	True				
ANR	526618	Identifier	temp_bool		522978	0					
ANR	526619	ExpressionStatement	dev -> ObjectFilter |= FILTERIMAGE	1951:12:79857:79889	522978	1	True				
ANR	526620	AssignmentExpression	dev -> ObjectFilter |= FILTERIMAGE		522978	0		|=			
ANR	526621	PtrMemberAccess	dev -> ObjectFilter		522978	0					
ANR	526622	Identifier	dev		522978	0					
ANR	526623	Identifier	ObjectFilter		522978	1					
ANR	526624	Identifier	FILTERIMAGE		522978	1					
ANR	526625	ElseStatement	else		522978	0					
ANR	526626	ExpressionStatement	dev -> ObjectFilter &= ~FILTERIMAGE	1953:12:79916:79949	522978	0	True				
ANR	526627	AssignmentExpression	dev -> ObjectFilter &= ~FILTERIMAGE		522978	0		&=			
ANR	526628	PtrMemberAccess	dev -> ObjectFilter		522978	0					
ANR	526629	Identifier	dev		522978	0					
ANR	526630	Identifier	ObjectFilter		522978	1					
ANR	526631	Identifier	~FILTERIMAGE		522978	1					
ANR	526632	ExpressionStatement	"code = param_read_bool ( plist , ""FILTERTEXT"" , & temp_bool )"	1956:4:79962:80017	522978	243	True				
ANR	526633	AssignmentExpression	"code = param_read_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		522978	0		=			
ANR	526634	Identifier	code		522978	0					
ANR	526635	CallExpression	"param_read_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		522978	1					
ANR	526636	Callee	param_read_bool		522978	0					
ANR	526637	Identifier	param_read_bool		522978	0					
ANR	526638	ArgumentList	plist		522978	1					
ANR	526639	Argument	plist		522978	0					
ANR	526640	Identifier	plist		522978	0					
ANR	526641	Argument	"""FILTERTEXT"""		522978	1					
ANR	526642	PrimaryExpression	"""FILTERTEXT"""		522978	0					
ANR	526643	Argument	& temp_bool		522978	2					
ANR	526644	UnaryOperationExpression	& temp_bool		522978	0					
ANR	526645	UnaryOperator	&		522978	0					
ANR	526646	Identifier	temp_bool		522978	1					
ANR	526647	IfStatement	if ( code < 0 )		522978	244					
ANR	526648	Condition	code < 0	1957:8:80027:80034	522978	0	True				
ANR	526649	RelationalExpression	code < 0		522978	0		<			
ANR	526650	Identifier	code		522978	0					
ANR	526651	PrimaryExpression	0		522978	1					
ANR	526652	ExpressionStatement	ecode = code	1958:8:80045:80057	522978	1	True				
ANR	526653	AssignmentExpression	ecode = code		522978	0		=			
ANR	526654	Identifier	ecode		522978	0					
ANR	526655	Identifier	code		522978	1					
ANR	526656	IfStatement	if ( code == 0 )		522978	245					
ANR	526657	Condition	code == 0	1959:8:80067:80075	522978	0	True				
ANR	526658	EqualityExpression	code == 0		522978	0		==			
ANR	526659	Identifier	code		522978	0					
ANR	526660	PrimaryExpression	0		522978	1					
ANR	526661	CompoundStatement		576:19:22766:22766	522978	1					
ANR	526662	IfStatement	if ( temp_bool )		522978	0					
ANR	526663	Condition	temp_bool	1960:12:80092:80100	522978	0	True				
ANR	526664	Identifier	temp_bool		522978	0					
ANR	526665	ExpressionStatement	dev -> ObjectFilter |= FILTERTEXT	1961:12:80115:80146	522978	1	True				
ANR	526666	AssignmentExpression	dev -> ObjectFilter |= FILTERTEXT		522978	0		|=			
ANR	526667	PtrMemberAccess	dev -> ObjectFilter		522978	0					
ANR	526668	Identifier	dev		522978	0					
ANR	526669	Identifier	ObjectFilter		522978	1					
ANR	526670	Identifier	FILTERTEXT		522978	1					
ANR	526671	ElseStatement	else		522978	0					
ANR	526672	ExpressionStatement	dev -> ObjectFilter &= ~FILTERTEXT	1963:12:80173:80205	522978	0	True				
ANR	526673	AssignmentExpression	dev -> ObjectFilter &= ~FILTERTEXT		522978	0		&=			
ANR	526674	PtrMemberAccess	dev -> ObjectFilter		522978	0					
ANR	526675	Identifier	dev		522978	0					
ANR	526676	Identifier	ObjectFilter		522978	1					
ANR	526677	Identifier	~FILTERTEXT		522978	1					
ANR	526678	ExpressionStatement	"code = param_read_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"	1966:4:80218:80275	522978	246	True				
ANR	526679	AssignmentExpression	"code = param_read_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		522978	0		=			
ANR	526680	Identifier	code		522978	0					
ANR	526681	CallExpression	"param_read_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		522978	1					
ANR	526682	Callee	param_read_bool		522978	0					
ANR	526683	Identifier	param_read_bool		522978	0					
ANR	526684	ArgumentList	plist		522978	1					
ANR	526685	Argument	plist		522978	0					
ANR	526686	Identifier	plist		522978	0					
ANR	526687	Argument	"""FILTERVECTOR"""		522978	1					
ANR	526688	PrimaryExpression	"""FILTERVECTOR"""		522978	0					
ANR	526689	Argument	& temp_bool		522978	2					
ANR	526690	UnaryOperationExpression	& temp_bool		522978	0					
ANR	526691	UnaryOperator	&		522978	0					
ANR	526692	Identifier	temp_bool		522978	1					
ANR	526693	IfStatement	if ( code < 0 )		522978	247					
ANR	526694	Condition	code < 0	1967:8:80285:80292	522978	0	True				
ANR	526695	RelationalExpression	code < 0		522978	0		<			
ANR	526696	Identifier	code		522978	0					
ANR	526697	PrimaryExpression	0		522978	1					
ANR	526698	ExpressionStatement	ecode = code	1968:8:80303:80315	522978	1	True				
ANR	526699	AssignmentExpression	ecode = code		522978	0		=			
ANR	526700	Identifier	ecode		522978	0					
ANR	526701	Identifier	code		522978	1					
ANR	526702	IfStatement	if ( code == 0 )		522978	248					
ANR	526703	Condition	code == 0	1969:8:80325:80333	522978	0	True				
ANR	526704	EqualityExpression	code == 0		522978	0		==			
ANR	526705	Identifier	code		522978	0					
ANR	526706	PrimaryExpression	0		522978	1					
ANR	526707	CompoundStatement		586:19:23024:23024	522978	1					
ANR	526708	IfStatement	if ( temp_bool )		522978	0					
ANR	526709	Condition	temp_bool	1970:12:80350:80358	522978	0	True				
ANR	526710	Identifier	temp_bool		522978	0					
ANR	526711	ExpressionStatement	dev -> ObjectFilter |= FILTERVECTOR	1971:12:80373:80406	522978	1	True				
ANR	526712	AssignmentExpression	dev -> ObjectFilter |= FILTERVECTOR		522978	0		|=			
ANR	526713	PtrMemberAccess	dev -> ObjectFilter		522978	0					
ANR	526714	Identifier	dev		522978	0					
ANR	526715	Identifier	ObjectFilter		522978	1					
ANR	526716	Identifier	FILTERVECTOR		522978	1					
ANR	526717	ElseStatement	else		522978	0					
ANR	526718	ExpressionStatement	dev -> ObjectFilter &= ~FILTERVECTOR	1973:12:80433:80467	522978	0	True				
ANR	526719	AssignmentExpression	dev -> ObjectFilter &= ~FILTERVECTOR		522978	0		&=			
ANR	526720	PtrMemberAccess	dev -> ObjectFilter		522978	0					
ANR	526721	Identifier	dev		522978	0					
ANR	526722	Identifier	ObjectFilter		522978	1					
ANR	526723	Identifier	~FILTERVECTOR		522978	1					
ANR	526724	ExpressionStatement	code = param_commit ( plist )	1978:4:80584:80610	522978	249	True				
ANR	526725	AssignmentExpression	code = param_commit ( plist )		522978	0		=			
ANR	526726	Identifier	code		522978	0					
ANR	526727	CallExpression	param_commit ( plist )		522978	1					
ANR	526728	Callee	param_commit		522978	0					
ANR	526729	Identifier	param_commit		522978	0					
ANR	526730	ArgumentList	plist		522978	1					
ANR	526731	Argument	plist		522978	0					
ANR	526732	Identifier	plist		522978	0					
ANR	526733	IfStatement	if ( ecode < 0 )		522978	250					
ANR	526734	Condition	ecode < 0	1979:8:80620:80628	522978	0	True				
ANR	526735	RelationalExpression	ecode < 0		522978	0		<			
ANR	526736	Identifier	ecode		522978	0					
ANR	526737	PrimaryExpression	0		522978	1					
ANR	526738	ReturnStatement	return ecode ;	1980:8:80639:80651	522978	1	True				
ANR	526739	Identifier	ecode		522978	0					
ANR	526740	IfStatement	if ( code < 0 )		522978	251					
ANR	526741	Condition	code < 0	1981:8:80661:80668	522978	0	True				
ANR	526742	RelationalExpression	code < 0		522978	0		<			
ANR	526743	Identifier	code		522978	0					
ANR	526744	PrimaryExpression	0		522978	1					
ANR	526745	ReturnStatement	return code ;	1982:8:80679:80690	522978	1	True				
ANR	526746	Identifier	code		522978	0					
ANR	526747	ExpressionStatement	dev -> color_info . use_antidropout_downscaler = use_antidropout	1992:4:81032:81092	522978	252	True				
ANR	526748	AssignmentExpression	dev -> color_info . use_antidropout_downscaler = use_antidropout		522978	0		=			
ANR	526749	MemberAccess	dev -> color_info . use_antidropout_downscaler		522978	0					
ANR	526750	PtrMemberAccess	dev -> color_info		522978	0					
ANR	526751	Identifier	dev		522978	0					
ANR	526752	Identifier	color_info		522978	1					
ANR	526753	Identifier	use_antidropout_downscaler		522978	1					
ANR	526754	Identifier	use_antidropout		522978	1					
ANR	526755	IfStatement	if ( hwra . data != 0 && ( dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ] ) )		522978	253					
ANR	526756	Condition	hwra . data != 0 && ( dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ] )	1994:8:81103:81215	522978	0	True				
ANR	526757	AndExpression	hwra . data != 0 && ( dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ] )		522978	0		&&			
ANR	526758	EqualityExpression	hwra . data != 0		522978	0		!=			
ANR	526759	MemberAccess	hwra . data		522978	0					
ANR	526760	Identifier	hwra		522978	0					
ANR	526761	Identifier	data		522978	1					
ANR	526762	PrimaryExpression	0		522978	1					
ANR	526763	OrExpression	dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ]		522978	1		||			
ANR	526764	EqualityExpression	dev -> HWResolution [ 0 ] != hwra . data [ 0 ]		522978	0		!=			
ANR	526765	ArrayIndexing	dev -> HWResolution [ 0 ]		522978	0					
ANR	526766	PtrMemberAccess	dev -> HWResolution		522978	0					
ANR	526767	Identifier	dev		522978	0					
ANR	526768	Identifier	HWResolution		522978	1					
ANR	526769	PrimaryExpression	0		522978	1					
ANR	526770	ArrayIndexing	hwra . data [ 0 ]		522978	1					
ANR	526771	MemberAccess	hwra . data		522978	0					
ANR	526772	Identifier	hwra		522978	0					
ANR	526773	Identifier	data		522978	1					
ANR	526774	PrimaryExpression	0		522978	1					
ANR	526775	EqualityExpression	dev -> HWResolution [ 1 ] != hwra . data [ 1 ]		522978	1		!=			
ANR	526776	ArrayIndexing	dev -> HWResolution [ 1 ]		522978	0					
ANR	526777	PtrMemberAccess	dev -> HWResolution		522978	0					
ANR	526778	Identifier	dev		522978	0					
ANR	526779	Identifier	HWResolution		522978	1					
ANR	526780	PrimaryExpression	1		522978	1					
ANR	526781	ArrayIndexing	hwra . data [ 1 ]		522978	1					
ANR	526782	MemberAccess	hwra . data		522978	0					
ANR	526783	Identifier	hwra		522978	0					
ANR	526784	Identifier	data		522978	1					
ANR	526785	PrimaryExpression	1		522978	1					
ANR	526786	CompoundStatement		614:10:23915:23915	522978	1					
ANR	526787	IfStatement	if ( dev -> is_open )		522978	0					
ANR	526788	Condition	dev -> is_open	1998:12:81241:81252	522978	0	True				
ANR	526789	PtrMemberAccess	dev -> is_open		522978	0					
ANR	526790	Identifier	dev		522978	0					
ANR	526791	Identifier	is_open		522978	1					
ANR	526792	ExpressionStatement	gs_closedevice ( dev )	1999:12:81267:81286	522978	1	True				
ANR	526793	CallExpression	gs_closedevice ( dev )		522978	0					
ANR	526794	Callee	gs_closedevice		522978	0					
ANR	526795	Identifier	gs_closedevice		522978	0					
ANR	526796	ArgumentList	dev		522978	1					
ANR	526797	Argument	dev		522978	0					
ANR	526798	Identifier	dev		522978	0					
ANR	526799	ExpressionStatement	"gx_device_set_resolution ( dev , hwra . data [ 0 ] , hwra . data [ 1 ] )"	2000:8:81296:81353	522978	1	True				
ANR	526800	CallExpression	"gx_device_set_resolution ( dev , hwra . data [ 0 ] , hwra . data [ 1 ] )"		522978	0					
ANR	526801	Callee	gx_device_set_resolution		522978	0					
ANR	526802	Identifier	gx_device_set_resolution		522978	0					
ANR	526803	ArgumentList	dev		522978	1					
ANR	526804	Argument	dev		522978	0					
ANR	526805	Identifier	dev		522978	0					
ANR	526806	Argument	hwra . data [ 0 ]		522978	1					
ANR	526807	ArrayIndexing	hwra . data [ 0 ]		522978	0					
ANR	526808	MemberAccess	hwra . data		522978	0					
ANR	526809	Identifier	hwra		522978	0					
ANR	526810	Identifier	data		522978	1					
ANR	526811	PrimaryExpression	0		522978	1					
ANR	526812	Argument	hwra . data [ 1 ]		522978	2					
ANR	526813	ArrayIndexing	hwra . data [ 1 ]		522978	0					
ANR	526814	MemberAccess	hwra . data		522978	0					
ANR	526815	Identifier	hwra		522978	0					
ANR	526816	Identifier	data		522978	1					
ANR	526817	PrimaryExpression	1		522978	1					
ANR	526818	IfStatement	if ( ( leadingedge & LEADINGEDGE_MASK ) != ( dev -> LeadingEdge & LEADINGEDGE_MASK ) )		522978	254					
ANR	526819	Condition	( leadingedge & LEADINGEDGE_MASK ) != ( dev -> LeadingEdge & LEADINGEDGE_MASK )	2002:8:81369:81449	522978	0	True				
ANR	526820	EqualityExpression	( leadingedge & LEADINGEDGE_MASK ) != ( dev -> LeadingEdge & LEADINGEDGE_MASK )		522978	0		!=			
ANR	526821	BitAndExpression	leadingedge & LEADINGEDGE_MASK		522978	0		&			
ANR	526822	Identifier	leadingedge		522978	0					
ANR	526823	Identifier	LEADINGEDGE_MASK		522978	1					
ANR	526824	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_MASK		522978	1		&			
ANR	526825	PtrMemberAccess	dev -> LeadingEdge		522978	0					
ANR	526826	Identifier	dev		522978	0					
ANR	526827	Identifier	LeadingEdge		522978	1					
ANR	526828	Identifier	LEADINGEDGE_MASK		522978	1					
ANR	526829	CompoundStatement		620:47:24140:24140	522978	1					
ANR	526830	ExpressionStatement	dev -> LeadingEdge = leadingedge	2006:8:81613:81643	522978	0	True				
ANR	526831	AssignmentExpression	dev -> LeadingEdge = leadingedge		522978	0		=			
ANR	526832	PtrMemberAccess	dev -> LeadingEdge		522978	0					
ANR	526833	Identifier	dev		522978	0					
ANR	526834	Identifier	LeadingEdge		522978	1					
ANR	526835	Identifier	leadingedge		522978	1					
ANR	526836	IfStatement	if ( dev -> is_open )		522978	1					
ANR	526837	Condition	dev -> is_open	2007:12:81657:81668	522978	0	True				
ANR	526838	PtrMemberAccess	dev -> is_open		522978	0					
ANR	526839	Identifier	dev		522978	0					
ANR	526840	Identifier	is_open		522978	1					
ANR	526841	ExpressionStatement	gs_closedevice ( dev )	2008:12:81683:81702	522978	1	True				
ANR	526842	CallExpression	gs_closedevice ( dev )		522978	0					
ANR	526843	Callee	gs_closedevice		522978	0					
ANR	526844	Identifier	gs_closedevice		522978	0					
ANR	526845	ArgumentList	dev		522978	1					
ANR	526846	Argument	dev		522978	0					
ANR	526847	Identifier	dev		522978	0					
ANR	526848	ExpressionStatement	"gx_device_set_resolution ( dev , dev -> HWResolution [ 0 ] , dev -> HWResolution [ 1 ] )"	2009:8:81712:81785	522978	2	True				
ANR	526849	CallExpression	"gx_device_set_resolution ( dev , dev -> HWResolution [ 0 ] , dev -> HWResolution [ 1 ] )"		522978	0					
ANR	526850	Callee	gx_device_set_resolution		522978	0					
ANR	526851	Identifier	gx_device_set_resolution		522978	0					
ANR	526852	ArgumentList	dev		522978	1					
ANR	526853	Argument	dev		522978	0					
ANR	526854	Identifier	dev		522978	0					
ANR	526855	Argument	dev -> HWResolution [ 0 ]		522978	1					
ANR	526856	ArrayIndexing	dev -> HWResolution [ 0 ]		522978	0					
ANR	526857	PtrMemberAccess	dev -> HWResolution		522978	0					
ANR	526858	Identifier	dev		522978	0					
ANR	526859	Identifier	HWResolution		522978	1					
ANR	526860	PrimaryExpression	0		522978	1					
ANR	526861	Argument	dev -> HWResolution [ 1 ]		522978	2					
ANR	526862	ArrayIndexing	dev -> HWResolution [ 1 ]		522978	0					
ANR	526863	PtrMemberAccess	dev -> HWResolution		522978	0					
ANR	526864	Identifier	dev		522978	0					
ANR	526865	Identifier	HWResolution		522978	1					
ANR	526866	PrimaryExpression	1		522978	1					
ANR	526867	ExpressionStatement	dev -> LeadingEdge &= LEADINGEDGE_MASK	2012:4:81854:81890	522978	255	True				
ANR	526868	AssignmentExpression	dev -> LeadingEdge &= LEADINGEDGE_MASK		522978	0		&=			
ANR	526869	PtrMemberAccess	dev -> LeadingEdge		522978	0					
ANR	526870	Identifier	dev		522978	0					
ANR	526871	Identifier	LeadingEdge		522978	1					
ANR	526872	Identifier	LEADINGEDGE_MASK		522978	1					
ANR	526873	ExpressionStatement	dev -> LeadingEdge |= ( leadingedge & LEADINGEDGE_SET_MASK )	2013:4:81896:81952	522978	256	True				
ANR	526874	AssignmentExpression	dev -> LeadingEdge |= ( leadingedge & LEADINGEDGE_SET_MASK )		522978	0		|=			
ANR	526875	PtrMemberAccess	dev -> LeadingEdge		522978	0					
ANR	526876	Identifier	dev		522978	0					
ANR	526877	Identifier	LeadingEdge		522978	1					
ANR	526878	BitAndExpression	leadingedge & LEADINGEDGE_SET_MASK		522978	1		&			
ANR	526879	Identifier	leadingedge		522978	0					
ANR	526880	Identifier	LEADINGEDGE_SET_MASK		522978	1					
ANR	526881	IfStatement	if ( hwsa . data != 0 && ( dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ] ) )		522978	257					
ANR	526882	Condition	hwsa . data != 0 && ( dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ] )	2015:8:81963:82056	522978	0	True				
ANR	526883	AndExpression	hwsa . data != 0 && ( dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ] )		522978	0		&&			
ANR	526884	EqualityExpression	hwsa . data != 0		522978	0		!=			
ANR	526885	MemberAccess	hwsa . data		522978	0					
ANR	526886	Identifier	hwsa		522978	0					
ANR	526887	Identifier	data		522978	1					
ANR	526888	PrimaryExpression	0		522978	1					
ANR	526889	OrExpression	dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ]		522978	1		||			
ANR	526890	EqualityExpression	dev -> width != hwsa . data [ 0 ]		522978	0		!=			
ANR	526891	PtrMemberAccess	dev -> width		522978	0					
ANR	526892	Identifier	dev		522978	0					
ANR	526893	Identifier	width		522978	1					
ANR	526894	ArrayIndexing	hwsa . data [ 0 ]		522978	1					
ANR	526895	MemberAccess	hwsa . data		522978	0					
ANR	526896	Identifier	hwsa		522978	0					
ANR	526897	Identifier	data		522978	1					
ANR	526898	PrimaryExpression	0		522978	1					
ANR	526899	EqualityExpression	dev -> height != hwsa . data [ 1 ]		522978	1		!=			
ANR	526900	PtrMemberAccess	dev -> height		522978	0					
ANR	526901	Identifier	dev		522978	0					
ANR	526902	Identifier	height		522978	1					
ANR	526903	ArrayIndexing	hwsa . data [ 1 ]		522978	1					
ANR	526904	MemberAccess	hwsa . data		522978	0					
ANR	526905	Identifier	hwsa		522978	0					
ANR	526906	Identifier	data		522978	1					
ANR	526907	PrimaryExpression	1		522978	1					
ANR	526908	CompoundStatement		635:10:24756:24756	522978	1					
ANR	526909	IfStatement	if ( dev -> is_open )		522978	0					
ANR	526910	Condition	dev -> is_open	2019:12:82082:82093	522978	0	True				
ANR	526911	PtrMemberAccess	dev -> is_open		522978	0					
ANR	526912	Identifier	dev		522978	0					
ANR	526913	Identifier	is_open		522978	1					
ANR	526914	ExpressionStatement	gs_closedevice ( dev )	2020:12:82108:82127	522978	1	True				
ANR	526915	CallExpression	gs_closedevice ( dev )		522978	0					
ANR	526916	Callee	gs_closedevice		522978	0					
ANR	526917	Identifier	gs_closedevice		522978	0					
ANR	526918	ArgumentList	dev		522978	1					
ANR	526919	Argument	dev		522978	0					
ANR	526920	Identifier	dev		522978	0					
ANR	526921	ExpressionStatement	"gx_device_set_width_height ( dev , hwsa . data [ 0 ] , hwsa . data [ 1 ] )"	2021:8:82137:82196	522978	1	True				
ANR	526922	CallExpression	"gx_device_set_width_height ( dev , hwsa . data [ 0 ] , hwsa . data [ 1 ] )"		522978	0					
ANR	526923	Callee	gx_device_set_width_height		522978	0					
ANR	526924	Identifier	gx_device_set_width_height		522978	0					
ANR	526925	ArgumentList	dev		522978	1					
ANR	526926	Argument	dev		522978	0					
ANR	526927	Identifier	dev		522978	0					
ANR	526928	Argument	hwsa . data [ 0 ]		522978	1					
ANR	526929	ArrayIndexing	hwsa . data [ 0 ]		522978	0					
ANR	526930	MemberAccess	hwsa . data		522978	0					
ANR	526931	Identifier	hwsa		522978	0					
ANR	526932	Identifier	data		522978	1					
ANR	526933	PrimaryExpression	0		522978	1					
ANR	526934	Argument	hwsa . data [ 1 ]		522978	2					
ANR	526935	ArrayIndexing	hwsa . data [ 1 ]		522978	0					
ANR	526936	MemberAccess	hwsa . data		522978	0					
ANR	526937	Identifier	hwsa		522978	0					
ANR	526938	Identifier	data		522978	1					
ANR	526939	PrimaryExpression	1		522978	1					
ANR	526940	IfStatement	if ( msa . data != 0 && ( dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ] ) )		522978	258					
ANR	526941	Condition	msa . data != 0 && ( dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ] )	2023:8:82212:82315	522978	0	True				
ANR	526942	AndExpression	msa . data != 0 && ( dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ] )		522978	0		&&			
ANR	526943	EqualityExpression	msa . data != 0		522978	0		!=			
ANR	526944	MemberAccess	msa . data		522978	0					
ANR	526945	Identifier	msa		522978	0					
ANR	526946	Identifier	data		522978	1					
ANR	526947	PrimaryExpression	0		522978	1					
ANR	526948	OrExpression	dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ]		522978	1		||			
ANR	526949	EqualityExpression	dev -> MediaSize [ 0 ] != msa . data [ 0 ]		522978	0		!=			
ANR	526950	ArrayIndexing	dev -> MediaSize [ 0 ]		522978	0					
ANR	526951	PtrMemberAccess	dev -> MediaSize		522978	0					
ANR	526952	Identifier	dev		522978	0					
ANR	526953	Identifier	MediaSize		522978	1					
ANR	526954	PrimaryExpression	0		522978	1					
ANR	526955	ArrayIndexing	msa . data [ 0 ]		522978	1					
ANR	526956	MemberAccess	msa . data		522978	0					
ANR	526957	Identifier	msa		522978	0					
ANR	526958	Identifier	data		522978	1					
ANR	526959	PrimaryExpression	0		522978	1					
ANR	526960	EqualityExpression	dev -> MediaSize [ 1 ] != msa . data [ 1 ]		522978	1		!=			
ANR	526961	ArrayIndexing	dev -> MediaSize [ 1 ]		522978	0					
ANR	526962	PtrMemberAccess	dev -> MediaSize		522978	0					
ANR	526963	Identifier	dev		522978	0					
ANR	526964	Identifier	MediaSize		522978	1					
ANR	526965	PrimaryExpression	1		522978	1					
ANR	526966	ArrayIndexing	msa . data [ 1 ]		522978	1					
ANR	526967	MemberAccess	msa . data		522978	0					
ANR	526968	Identifier	msa		522978	0					
ANR	526969	Identifier	data		522978	1					
ANR	526970	PrimaryExpression	1		522978	1					
ANR	526971	CompoundStatement		643:10:25015:25015	522978	1					
ANR	526972	IfStatement	if ( dev -> is_open )		522978	0					
ANR	526973	Condition	dev -> is_open	2027:12:82341:82352	522978	0	True				
ANR	526974	PtrMemberAccess	dev -> is_open		522978	0					
ANR	526975	Identifier	dev		522978	0					
ANR	526976	Identifier	is_open		522978	1					
ANR	526977	ExpressionStatement	gs_closedevice ( dev )	2028:12:82367:82386	522978	1	True				
ANR	526978	CallExpression	gs_closedevice ( dev )		522978	0					
ANR	526979	Callee	gs_closedevice		522978	0					
ANR	526980	Identifier	gs_closedevice		522978	0					
ANR	526981	ArgumentList	dev		522978	1					
ANR	526982	Argument	dev		522978	0					
ANR	526983	Identifier	dev		522978	0					
ANR	526984	ExpressionStatement	"gx_device_set_page_size ( dev , msa . data [ 0 ] , msa . data [ 1 ] )"	2029:8:82396:82450	522978	1	True				
ANR	526985	CallExpression	"gx_device_set_page_size ( dev , msa . data [ 0 ] , msa . data [ 1 ] )"		522978	0					
ANR	526986	Callee	gx_device_set_page_size		522978	0					
ANR	526987	Identifier	gx_device_set_page_size		522978	0					
ANR	526988	ArgumentList	dev		522978	1					
ANR	526989	Argument	dev		522978	0					
ANR	526990	Identifier	dev		522978	0					
ANR	526991	Argument	msa . data [ 0 ]		522978	1					
ANR	526992	ArrayIndexing	msa . data [ 0 ]		522978	0					
ANR	526993	MemberAccess	msa . data		522978	0					
ANR	526994	Identifier	msa		522978	0					
ANR	526995	Identifier	data		522978	1					
ANR	526996	PrimaryExpression	0		522978	1					
ANR	526997	Argument	msa . data [ 1 ]		522978	2					
ANR	526998	ArrayIndexing	msa . data [ 1 ]		522978	0					
ANR	526999	MemberAccess	msa . data		522978	0					
ANR	527000	Identifier	msa		522978	0					
ANR	527001	Identifier	data		522978	1					
ANR	527002	PrimaryExpression	1		522978	1					
ANR	527003	IfStatement	if ( ma . data != 0 )		522978	259					
ANR	527004	Condition	ma . data != 0	2031:8:82466:82477	522978	0	True				
ANR	527005	EqualityExpression	ma . data != 0		522978	0		!=			
ANR	527006	MemberAccess	ma . data		522978	0					
ANR	527007	Identifier	ma		522978	0					
ANR	527008	Identifier	data		522978	1					
ANR	527009	PrimaryExpression	0		522978	1					
ANR	527010	CompoundStatement		648:22:25168:25168	522978	1					
ANR	527011	ExpressionStatement	dev -> Margins [ 0 ] = ma . data [ 0 ]	2032:8:82490:82518	522978	0	True				
ANR	527012	AssignmentExpression	dev -> Margins [ 0 ] = ma . data [ 0 ]		522978	0		=			
ANR	527013	ArrayIndexing	dev -> Margins [ 0 ]		522978	0					
ANR	527014	PtrMemberAccess	dev -> Margins		522978	0					
ANR	527015	Identifier	dev		522978	0					
ANR	527016	Identifier	Margins		522978	1					
ANR	527017	PrimaryExpression	0		522978	1					
ANR	527018	ArrayIndexing	ma . data [ 0 ]		522978	1					
ANR	527019	MemberAccess	ma . data		522978	0					
ANR	527020	Identifier	ma		522978	0					
ANR	527021	Identifier	data		522978	1					
ANR	527022	PrimaryExpression	0		522978	1					
ANR	527023	ExpressionStatement	dev -> Margins [ 1 ] = ma . data [ 1 ]	2033:8:82528:82556	522978	1	True				
ANR	527024	AssignmentExpression	dev -> Margins [ 1 ] = ma . data [ 1 ]		522978	0		=			
ANR	527025	ArrayIndexing	dev -> Margins [ 1 ]		522978	0					
ANR	527026	PtrMemberAccess	dev -> Margins		522978	0					
ANR	527027	Identifier	dev		522978	0					
ANR	527028	Identifier	Margins		522978	1					
ANR	527029	PrimaryExpression	1		522978	1					
ANR	527030	ArrayIndexing	ma . data [ 1 ]		522978	1					
ANR	527031	MemberAccess	ma . data		522978	0					
ANR	527032	Identifier	ma		522978	0					
ANR	527033	Identifier	data		522978	1					
ANR	527034	PrimaryExpression	1		522978	1					
ANR	527035	IfStatement	if ( hwma . data != 0 )		522978	260					
ANR	527036	Condition	hwma . data != 0	2035:8:82572:82585	522978	0	True				
ANR	527037	EqualityExpression	hwma . data != 0		522978	0		!=			
ANR	527038	MemberAccess	hwma . data		522978	0					
ANR	527039	Identifier	hwma		522978	0					
ANR	527040	Identifier	data		522978	1					
ANR	527041	PrimaryExpression	0		522978	1					
ANR	527042	CompoundStatement		652:24:25276:25276	522978	1					
ANR	527043	ExpressionStatement	dev -> HWMargins [ 0 ] = hwma . data [ 0 ]	2036:8:82598:82630	522978	0	True				
ANR	527044	AssignmentExpression	dev -> HWMargins [ 0 ] = hwma . data [ 0 ]		522978	0		=			
ANR	527045	ArrayIndexing	dev -> HWMargins [ 0 ]		522978	0					
ANR	527046	PtrMemberAccess	dev -> HWMargins		522978	0					
ANR	527047	Identifier	dev		522978	0					
ANR	527048	Identifier	HWMargins		522978	1					
ANR	527049	PrimaryExpression	0		522978	1					
ANR	527050	ArrayIndexing	hwma . data [ 0 ]		522978	1					
ANR	527051	MemberAccess	hwma . data		522978	0					
ANR	527052	Identifier	hwma		522978	0					
ANR	527053	Identifier	data		522978	1					
ANR	527054	PrimaryExpression	0		522978	1					
ANR	527055	ExpressionStatement	dev -> HWMargins [ 1 ] = hwma . data [ 1 ]	2037:8:82640:82672	522978	1	True				
ANR	527056	AssignmentExpression	dev -> HWMargins [ 1 ] = hwma . data [ 1 ]		522978	0		=			
ANR	527057	ArrayIndexing	dev -> HWMargins [ 1 ]		522978	0					
ANR	527058	PtrMemberAccess	dev -> HWMargins		522978	0					
ANR	527059	Identifier	dev		522978	0					
ANR	527060	Identifier	HWMargins		522978	1					
ANR	527061	PrimaryExpression	1		522978	1					
ANR	527062	ArrayIndexing	hwma . data [ 1 ]		522978	1					
ANR	527063	MemberAccess	hwma . data		522978	0					
ANR	527064	Identifier	hwma		522978	0					
ANR	527065	Identifier	data		522978	1					
ANR	527066	PrimaryExpression	1		522978	1					
ANR	527067	ExpressionStatement	dev -> HWMargins [ 2 ] = hwma . data [ 2 ]	2038:8:82682:82714	522978	2	True				
ANR	527068	AssignmentExpression	dev -> HWMargins [ 2 ] = hwma . data [ 2 ]		522978	0		=			
ANR	527069	ArrayIndexing	dev -> HWMargins [ 2 ]		522978	0					
ANR	527070	PtrMemberAccess	dev -> HWMargins		522978	0					
ANR	527071	Identifier	dev		522978	0					
ANR	527072	Identifier	HWMargins		522978	1					
ANR	527073	PrimaryExpression	2		522978	1					
ANR	527074	ArrayIndexing	hwma . data [ 2 ]		522978	1					
ANR	527075	MemberAccess	hwma . data		522978	0					
ANR	527076	Identifier	hwma		522978	0					
ANR	527077	Identifier	data		522978	1					
ANR	527078	PrimaryExpression	2		522978	1					
ANR	527079	ExpressionStatement	dev -> HWMargins [ 3 ] = hwma . data [ 3 ]	2039:8:82724:82756	522978	3	True				
ANR	527080	AssignmentExpression	dev -> HWMargins [ 3 ] = hwma . data [ 3 ]		522978	0		=			
ANR	527081	ArrayIndexing	dev -> HWMargins [ 3 ]		522978	0					
ANR	527082	PtrMemberAccess	dev -> HWMargins		522978	0					
ANR	527083	Identifier	dev		522978	0					
ANR	527084	Identifier	HWMargins		522978	1					
ANR	527085	PrimaryExpression	3		522978	1					
ANR	527086	ArrayIndexing	hwma . data [ 3 ]		522978	1					
ANR	527087	MemberAccess	hwma . data		522978	0					
ANR	527088	Identifier	hwma		522978	0					
ANR	527089	Identifier	data		522978	1					
ANR	527090	PrimaryExpression	3		522978	1					
ANR	527091	ExpressionStatement	dev -> NumCopies = nci	2041:4:82768:82788	522978	261	True				
ANR	527092	AssignmentExpression	dev -> NumCopies = nci		522978	0		=			
ANR	527093	PtrMemberAccess	dev -> NumCopies		522978	0					
ANR	527094	Identifier	dev		522978	0					
ANR	527095	Identifier	NumCopies		522978	1					
ANR	527096	Identifier	nci		522978	1					
ANR	527097	ExpressionStatement	dev -> NumCopies_set = ncset	2042:4:82794:82820	522978	262	True				
ANR	527098	AssignmentExpression	dev -> NumCopies_set = ncset		522978	0		=			
ANR	527099	PtrMemberAccess	dev -> NumCopies_set		522978	0					
ANR	527100	Identifier	dev		522978	0					
ANR	527101	Identifier	NumCopies_set		522978	1					
ANR	527102	Identifier	ncset		522978	1					
ANR	527103	ExpressionStatement	dev -> IgnoreNumCopies = ignc	2043:4:82826:82853	522978	263	True				
ANR	527104	AssignmentExpression	dev -> IgnoreNumCopies = ignc		522978	0		=			
ANR	527105	PtrMemberAccess	dev -> IgnoreNumCopies		522978	0					
ANR	527106	Identifier	dev		522978	0					
ANR	527107	Identifier	IgnoreNumCopies		522978	1					
ANR	527108	Identifier	ignc		522978	1					
ANR	527109	IfStatement	if ( ibba . data != 0 )		522978	264					
ANR	527110	Condition	ibba . data != 0	2044:8:82863:82876	522978	0	True				
ANR	527111	EqualityExpression	ibba . data != 0		522978	0		!=			
ANR	527112	MemberAccess	ibba . data		522978	0					
ANR	527113	Identifier	ibba		522978	0					
ANR	527114	Identifier	data		522978	1					
ANR	527115	PrimaryExpression	0		522978	1					
ANR	527116	CompoundStatement		661:24:25567:25567	522978	1					
ANR	527117	ExpressionStatement	dev -> ImagingBBox [ 0 ] = ibba . data [ 0 ]	2045:8:82889:82923	522978	0	True				
ANR	527118	AssignmentExpression	dev -> ImagingBBox [ 0 ] = ibba . data [ 0 ]		522978	0		=			
ANR	527119	ArrayIndexing	dev -> ImagingBBox [ 0 ]		522978	0					
ANR	527120	PtrMemberAccess	dev -> ImagingBBox		522978	0					
ANR	527121	Identifier	dev		522978	0					
ANR	527122	Identifier	ImagingBBox		522978	1					
ANR	527123	PrimaryExpression	0		522978	1					
ANR	527124	ArrayIndexing	ibba . data [ 0 ]		522978	1					
ANR	527125	MemberAccess	ibba . data		522978	0					
ANR	527126	Identifier	ibba		522978	0					
ANR	527127	Identifier	data		522978	1					
ANR	527128	PrimaryExpression	0		522978	1					
ANR	527129	ExpressionStatement	dev -> ImagingBBox [ 1 ] = ibba . data [ 1 ]	2046:8:82933:82967	522978	1	True				
ANR	527130	AssignmentExpression	dev -> ImagingBBox [ 1 ] = ibba . data [ 1 ]		522978	0		=			
ANR	527131	ArrayIndexing	dev -> ImagingBBox [ 1 ]		522978	0					
ANR	527132	PtrMemberAccess	dev -> ImagingBBox		522978	0					
ANR	527133	Identifier	dev		522978	0					
ANR	527134	Identifier	ImagingBBox		522978	1					
ANR	527135	PrimaryExpression	1		522978	1					
ANR	527136	ArrayIndexing	ibba . data [ 1 ]		522978	1					
ANR	527137	MemberAccess	ibba . data		522978	0					
ANR	527138	Identifier	ibba		522978	0					
ANR	527139	Identifier	data		522978	1					
ANR	527140	PrimaryExpression	1		522978	1					
ANR	527141	ExpressionStatement	dev -> ImagingBBox [ 2 ] = ibba . data [ 2 ]	2047:8:82977:83011	522978	2	True				
ANR	527142	AssignmentExpression	dev -> ImagingBBox [ 2 ] = ibba . data [ 2 ]		522978	0		=			
ANR	527143	ArrayIndexing	dev -> ImagingBBox [ 2 ]		522978	0					
ANR	527144	PtrMemberAccess	dev -> ImagingBBox		522978	0					
ANR	527145	Identifier	dev		522978	0					
ANR	527146	Identifier	ImagingBBox		522978	1					
ANR	527147	PrimaryExpression	2		522978	1					
ANR	527148	ArrayIndexing	ibba . data [ 2 ]		522978	1					
ANR	527149	MemberAccess	ibba . data		522978	0					
ANR	527150	Identifier	ibba		522978	0					
ANR	527151	Identifier	data		522978	1					
ANR	527152	PrimaryExpression	2		522978	1					
ANR	527153	ExpressionStatement	dev -> ImagingBBox [ 3 ] = ibba . data [ 3 ]	2048:8:83021:83055	522978	3	True				
ANR	527154	AssignmentExpression	dev -> ImagingBBox [ 3 ] = ibba . data [ 3 ]		522978	0		=			
ANR	527155	ArrayIndexing	dev -> ImagingBBox [ 3 ]		522978	0					
ANR	527156	PtrMemberAccess	dev -> ImagingBBox		522978	0					
ANR	527157	Identifier	dev		522978	0					
ANR	527158	Identifier	ImagingBBox		522978	1					
ANR	527159	PrimaryExpression	3		522978	1					
ANR	527160	ArrayIndexing	ibba . data [ 3 ]		522978	1					
ANR	527161	MemberAccess	ibba . data		522978	0					
ANR	527162	Identifier	ibba		522978	0					
ANR	527163	Identifier	data		522978	1					
ANR	527164	PrimaryExpression	3		522978	1					
ANR	527165	ExpressionStatement	dev -> ImagingBBox_set = true	2049:8:83065:83092	522978	4	True				
ANR	527166	AssignmentExpression	dev -> ImagingBBox_set = true		522978	0		=			
ANR	527167	PtrMemberAccess	dev -> ImagingBBox_set		522978	0					
ANR	527168	Identifier	dev		522978	0					
ANR	527169	Identifier	ImagingBBox_set		522978	1					
ANR	527170	Identifier	true		522978	1					
ANR	527171	ElseStatement	else		522978	0					
ANR	527172	IfStatement	if ( ibbnull )		522978	0					
ANR	527173	Condition	ibbnull	2050:15:83109:83115	522978	0	True				
ANR	527174	Identifier	ibbnull		522978	0					
ANR	527175	CompoundStatement		667:24:25806:25806	522978	1					
ANR	527176	ExpressionStatement	dev -> ImagingBBox_set = false	2051:8:83128:83156	522978	0	True				
ANR	527177	AssignmentExpression	dev -> ImagingBBox_set = false		522978	0		=			
ANR	527178	PtrMemberAccess	dev -> ImagingBBox_set		522978	0					
ANR	527179	Identifier	dev		522978	0					
ANR	527180	Identifier	ImagingBBox_set		522978	1					
ANR	527181	Identifier	false		522978	1					
ANR	527182	ExpressionStatement	dev -> UseCIEColor = ucc	2053:4:83168:83190	522978	265	True				
ANR	527183	AssignmentExpression	dev -> UseCIEColor = ucc		522978	0		=			
ANR	527184	PtrMemberAccess	dev -> UseCIEColor		522978	0					
ANR	527185	Identifier	dev		522978	0					
ANR	527186	Identifier	UseCIEColor		522978	1					
ANR	527187	Identifier	ucc		522978	1					
ANR	527188	ExpressionStatement	"dev -> color_info . anti_alias . text_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , tab )"	2054:8:83200:83373	522978	266	True				
ANR	527189	AssignmentExpression	"dev -> color_info . anti_alias . text_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , tab )"		522978	0		=			
ANR	527190	MemberAccess	dev -> color_info . anti_alias . text_bits		522978	0					
ANR	527191	MemberAccess	dev -> color_info . anti_alias		522978	0					
ANR	527192	PtrMemberAccess	dev -> color_info		522978	0					
ANR	527193	Identifier	dev		522978	0					
ANR	527194	Identifier	color_info		522978	1					
ANR	527195	Identifier	anti_alias		522978	1					
ANR	527196	Identifier	text_bits		522978	1					
ANR	527197	CallExpression	"param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , tab )"		522978	1					
ANR	527198	Callee	param_normalize_anti_alias_bits		522978	0					
ANR	527199	Identifier	param_normalize_anti_alias_bits		522978	0					
ANR	527200	ArgumentList	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		522978	1					
ANR	527201	Argument	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		522978	0					
ANR	527202	CallExpression	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		522978	0					
ANR	527203	Callee	max		522978	0					
ANR	527204	Identifier	max		522978	0					
ANR	527205	ArgumentList	dev -> color_info . max_gray		522978	1					
ANR	527206	Argument	dev -> color_info . max_gray		522978	0					
ANR	527207	MemberAccess	dev -> color_info . max_gray		522978	0					
ANR	527208	PtrMemberAccess	dev -> color_info		522978	0					
ANR	527209	Identifier	dev		522978	0					
ANR	527210	Identifier	color_info		522978	1					
ANR	527211	Identifier	max_gray		522978	1					
ANR	527212	Argument	dev -> color_info . max_color		522978	1					
ANR	527213	MemberAccess	dev -> color_info . max_color		522978	0					
ANR	527214	PtrMemberAccess	dev -> color_info		522978	0					
ANR	527215	Identifier	dev		522978	0					
ANR	527216	Identifier	color_info		522978	1					
ANR	527217	Identifier	max_color		522978	1					
ANR	527218	Argument	tab		522978	1					
ANR	527219	Identifier	tab		522978	0					
ANR	527220	ExpressionStatement	"dev -> color_info . anti_alias . graphics_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , gab )"	2057:8:83383:83560	522978	267	True				
ANR	527221	AssignmentExpression	"dev -> color_info . anti_alias . graphics_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , gab )"		522978	0		=			
ANR	527222	MemberAccess	dev -> color_info . anti_alias . graphics_bits		522978	0					
ANR	527223	MemberAccess	dev -> color_info . anti_alias		522978	0					
ANR	527224	PtrMemberAccess	dev -> color_info		522978	0					
ANR	527225	Identifier	dev		522978	0					
ANR	527226	Identifier	color_info		522978	1					
ANR	527227	Identifier	anti_alias		522978	1					
ANR	527228	Identifier	graphics_bits		522978	1					
ANR	527229	CallExpression	"param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , gab )"		522978	1					
ANR	527230	Callee	param_normalize_anti_alias_bits		522978	0					
ANR	527231	Identifier	param_normalize_anti_alias_bits		522978	0					
ANR	527232	ArgumentList	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		522978	1					
ANR	527233	Argument	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		522978	0					
ANR	527234	CallExpression	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		522978	0					
ANR	527235	Callee	max		522978	0					
ANR	527236	Identifier	max		522978	0					
ANR	527237	ArgumentList	dev -> color_info . max_gray		522978	1					
ANR	527238	Argument	dev -> color_info . max_gray		522978	0					
ANR	527239	MemberAccess	dev -> color_info . max_gray		522978	0					
ANR	527240	PtrMemberAccess	dev -> color_info		522978	0					
ANR	527241	Identifier	dev		522978	0					
ANR	527242	Identifier	color_info		522978	1					
ANR	527243	Identifier	max_gray		522978	1					
ANR	527244	Argument	dev -> color_info . max_color		522978	1					
ANR	527245	MemberAccess	dev -> color_info . max_color		522978	0					
ANR	527246	PtrMemberAccess	dev -> color_info		522978	0					
ANR	527247	Identifier	dev		522978	0					
ANR	527248	Identifier	color_info		522978	1					
ANR	527249	Identifier	max_color		522978	1					
ANR	527250	Argument	gab		522978	1					
ANR	527251	Identifier	gab		522978	0					
ANR	527252	ExpressionStatement	dev -> LockSafetyParams = locksafe	2060:4:83566:83598	522978	268	True				
ANR	527253	AssignmentExpression	dev -> LockSafetyParams = locksafe		522978	0		=			
ANR	527254	PtrMemberAccess	dev -> LockSafetyParams		522978	0					
ANR	527255	Identifier	dev		522978	0					
ANR	527256	Identifier	LockSafetyParams		522978	1					
ANR	527257	Identifier	locksafe		522978	1					
ANR	527258	ExpressionStatement	dev -> MaxPatternBitmap = mpbm	2061:4:83604:83632	522978	269	True				
ANR	527259	AssignmentExpression	dev -> MaxPatternBitmap = mpbm		522978	0		=			
ANR	527260	PtrMemberAccess	dev -> MaxPatternBitmap		522978	0					
ANR	527261	Identifier	dev		522978	0					
ANR	527262	Identifier	MaxPatternBitmap		522978	1					
ANR	527263	Identifier	mpbm		522978	1					
ANR	527264	ExpressionStatement	dev -> interpolate_control = ic	2062:4:83638:83667	522978	270	True				
ANR	527265	AssignmentExpression	dev -> interpolate_control = ic		522978	0		=			
ANR	527266	PtrMemberAccess	dev -> interpolate_control		522978	0					
ANR	527267	Identifier	dev		522978	0					
ANR	527268	Identifier	interpolate_control		522978	1					
ANR	527269	Identifier	ic		522978	1					
ANR	527270	ExpressionStatement	dev -> space_params = sp	2063:4:83673:83695	522978	271	True				
ANR	527271	AssignmentExpression	dev -> space_params = sp		522978	0		=			
ANR	527272	PtrMemberAccess	dev -> space_params		522978	0					
ANR	527273	Identifier	dev		522978	0					
ANR	527274	Identifier	space_params		522978	1					
ANR	527275	Identifier	sp		522978	1					
ANR	527276	ExpressionStatement	dev -> page_uses_transparency = page_uses_transparency	2064:4:83701:83753	522978	272	True				
ANR	527277	AssignmentExpression	dev -> page_uses_transparency = page_uses_transparency		522978	0		=			
ANR	527278	PtrMemberAccess	dev -> page_uses_transparency		522978	0					
ANR	527279	Identifier	dev		522978	0					
ANR	527280	Identifier	page_uses_transparency		522978	1					
ANR	527281	Identifier	page_uses_transparency		522978	1					
ANR	527282	ExpressionStatement	gx_device_decache_colors ( dev )	2065:4:83759:83788	522978	273	True				
ANR	527283	CallExpression	gx_device_decache_colors ( dev )		522978	0					
ANR	527284	Callee	gx_device_decache_colors		522978	0					
ANR	527285	Identifier	gx_device_decache_colors		522978	0					
ANR	527286	ArgumentList	dev		522978	1					
ANR	527287	Argument	dev		522978	0					
ANR	527288	Identifier	dev		522978	0					
ANR	527289	IfStatement	if ( dev -> icc_struct != NULL )		522978	274					
ANR	527290	Condition	dev -> icc_struct != NULL	2069:8:83935:83957	522978	0	True				
ANR	527291	EqualityExpression	dev -> icc_struct != NULL		522978	0		!=			
ANR	527292	PtrMemberAccess	dev -> icc_struct		522978	0					
ANR	527293	Identifier	dev		522978	0					
ANR	527294	Identifier	icc_struct		522978	1					
ANR	527295	Identifier	NULL		522978	1					
ANR	527296	CompoundStatement		686:33:26648:26648	522978	1					
ANR	527297	ExpressionStatement	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , gsDEFAULTPROFILE )"	2071:8:84007:84074	522978	0	True				
ANR	527298	AssignmentExpression	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , gsDEFAULTPROFILE )"		522978	0		=			
ANR	527299	Identifier	code		522978	0					
ANR	527300	CallExpression	"gx_default_put_intent ( rend_intent [ 0 ] , dev , gsDEFAULTPROFILE )"		522978	1					
ANR	527301	Callee	gx_default_put_intent		522978	0					
ANR	527302	Identifier	gx_default_put_intent		522978	0					
ANR	527303	ArgumentList	rend_intent [ 0 ]		522978	1					
ANR	527304	Argument	rend_intent [ 0 ]		522978	0					
ANR	527305	ArrayIndexing	rend_intent [ 0 ]		522978	0					
ANR	527306	Identifier	rend_intent		522978	0					
ANR	527307	PrimaryExpression	0		522978	1					
ANR	527308	Argument	dev		522978	1					
ANR	527309	Identifier	dev		522978	0					
ANR	527310	Argument	gsDEFAULTPROFILE		522978	2					
ANR	527311	Identifier	gsDEFAULTPROFILE		522978	0					
ANR	527312	IfStatement	if ( code < 0 )		522978	1					
ANR	527313	Condition	code < 0	2072:12:84088:84095	522978	0	True				
ANR	527314	RelationalExpression	code < 0		522978	0		<			
ANR	527315	Identifier	code		522978	0					
ANR	527316	PrimaryExpression	0		522978	1					
ANR	527317	ReturnStatement	return code ;	2073:12:84110:84121	522978	1	True				
ANR	527318	Identifier	code		522978	0					
ANR	527319	ExpressionStatement	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , gsDEFAULTPROFILE )"	2074:8:84131:84203	522978	2	True				
ANR	527320	AssignmentExpression	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , gsDEFAULTPROFILE )"		522978	0		=			
ANR	527321	Identifier	code		522978	0					
ANR	527322	CallExpression	"gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , gsDEFAULTPROFILE )"		522978	1					
ANR	527323	Callee	gx_default_put_blackptcomp		522978	0					
ANR	527324	Identifier	gx_default_put_blackptcomp		522978	0					
ANR	527325	ArgumentList	blackptcomp [ 0 ]		522978	1					
ANR	527326	Argument	blackptcomp [ 0 ]		522978	0					
ANR	527327	ArrayIndexing	blackptcomp [ 0 ]		522978	0					
ANR	527328	Identifier	blackptcomp		522978	0					
ANR	527329	PrimaryExpression	0		522978	1					
ANR	527330	Argument	dev		522978	1					
ANR	527331	Identifier	dev		522978	0					
ANR	527332	Argument	gsDEFAULTPROFILE		522978	2					
ANR	527333	Identifier	gsDEFAULTPROFILE		522978	0					
ANR	527334	IfStatement	if ( code < 0 )		522978	3					
ANR	527335	Condition	code < 0	2075:12:84217:84224	522978	0	True				
ANR	527336	RelationalExpression	code < 0		522978	0		<			
ANR	527337	Identifier	code		522978	0					
ANR	527338	PrimaryExpression	0		522978	1					
ANR	527339	ReturnStatement	return code ;	2076:12:84239:84250	522978	1	True				
ANR	527340	Identifier	code		522978	0					
ANR	527341	ExpressionStatement	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , gsDEFAULTPROFILE )"	2077:8:84260:84336	522978	4	True				
ANR	527342	AssignmentExpression	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , gsDEFAULTPROFILE )"		522978	0		=			
ANR	527343	Identifier	code		522978	0					
ANR	527344	CallExpression	"gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , gsDEFAULTPROFILE )"		522978	1					
ANR	527345	Callee	gx_default_put_blackpreserve		522978	0					
ANR	527346	Identifier	gx_default_put_blackpreserve		522978	0					
ANR	527347	ArgumentList	blackpreserve [ 0 ]		522978	1					
ANR	527348	Argument	blackpreserve [ 0 ]		522978	0					
ANR	527349	ArrayIndexing	blackpreserve [ 0 ]		522978	0					
ANR	527350	Identifier	blackpreserve		522978	0					
ANR	527351	PrimaryExpression	0		522978	1					
ANR	527352	Argument	dev		522978	1					
ANR	527353	Identifier	dev		522978	0					
ANR	527354	Argument	gsDEFAULTPROFILE		522978	2					
ANR	527355	Identifier	gsDEFAULTPROFILE		522978	0					
ANR	527356	IfStatement	if ( code < 0 )		522978	5					
ANR	527357	Condition	code < 0	2078:12:84350:84357	522978	0	True				
ANR	527358	RelationalExpression	code < 0		522978	0		<			
ANR	527359	Identifier	code		522978	0					
ANR	527360	PrimaryExpression	0		522978	1					
ANR	527361	ReturnStatement	return code ;	2079:12:84372:84383	522978	1	True				
ANR	527362	Identifier	code		522978	0					
ANR	527363	ForStatement	for ( k = 1 ; k < NUM_DEVICE_PROFILES ; k ++ )		522978	6					
ANR	527364	ForInit	k = 1 ;	2082:13:84558:84563	522978	0	True				
ANR	527365	AssignmentExpression	k = 1		522978	0		=			
ANR	527366	Identifier	k		522978	0					
ANR	527367	PrimaryExpression	1		522978	1					
ANR	527368	Condition	k < NUM_DEVICE_PROFILES	2082:20:84565:84587	522978	1	True				
ANR	527369	RelationalExpression	k < NUM_DEVICE_PROFILES		522978	0		<			
ANR	527370	Identifier	k		522978	0					
ANR	527371	Identifier	NUM_DEVICE_PROFILES		522978	1					
ANR	527372	PostIncDecOperationExpression	k ++	2082:45:84590:84592	522978	2	True				
ANR	527373	Identifier	k		522978	0					
ANR	527374	IncDec	++		522978	1					
ANR	527375	CompoundStatement		699:50:27283:27283	522978	3					
ANR	527376	IfStatement	if ( rend_intent [ 0 ] != gsRINOTSPECIFIED && rend_intent [ k ] == gsRINOTSPECIFIED )		522978	0					
ANR	527377	Condition	rend_intent [ 0 ] != gsRINOTSPECIFIED && rend_intent [ k ] == gsRINOTSPECIFIED	2083:16:84613:84700	522978	0	True				
ANR	527378	AndExpression	rend_intent [ 0 ] != gsRINOTSPECIFIED && rend_intent [ k ] == gsRINOTSPECIFIED		522978	0		&&			
ANR	527379	EqualityExpression	rend_intent [ 0 ] != gsRINOTSPECIFIED		522978	0		!=			
ANR	527380	ArrayIndexing	rend_intent [ 0 ]		522978	0					
ANR	527381	Identifier	rend_intent		522978	0					
ANR	527382	PrimaryExpression	0		522978	1					
ANR	527383	Identifier	gsRINOTSPECIFIED		522978	1					
ANR	527384	EqualityExpression	rend_intent [ k ] == gsRINOTSPECIFIED		522978	1		==			
ANR	527385	ArrayIndexing	rend_intent [ k ]		522978	0					
ANR	527386	Identifier	rend_intent		522978	0					
ANR	527387	Identifier	k		522978	1					
ANR	527388	Identifier	gsRINOTSPECIFIED		522978	1					
ANR	527389	CompoundStatement		701:52:27391:27391	522978	1					
ANR	527390	ExpressionStatement	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , profile_types [ k ] )"	2085:16:84721:84788	522978	0	True				
ANR	527391	AssignmentExpression	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , profile_types [ k ] )"		522978	0		=			
ANR	527392	Identifier	code		522978	0					
ANR	527393	CallExpression	"gx_default_put_intent ( rend_intent [ 0 ] , dev , profile_types [ k ] )"		522978	1					
ANR	527394	Callee	gx_default_put_intent		522978	0					
ANR	527395	Identifier	gx_default_put_intent		522978	0					
ANR	527396	ArgumentList	rend_intent [ 0 ]		522978	1					
ANR	527397	Argument	rend_intent [ 0 ]		522978	0					
ANR	527398	ArrayIndexing	rend_intent [ 0 ]		522978	0					
ANR	527399	Identifier	rend_intent		522978	0					
ANR	527400	PrimaryExpression	0		522978	1					
ANR	527401	Argument	dev		522978	1					
ANR	527402	Identifier	dev		522978	0					
ANR	527403	Argument	profile_types [ k ]		522978	2					
ANR	527404	ArrayIndexing	profile_types [ k ]		522978	0					
ANR	527405	Identifier	profile_types		522978	0					
ANR	527406	Identifier	k		522978	1					
ANR	527407	ElseStatement	else		522978	0					
ANR	527408	CompoundStatement		703:19:27497:27497	522978	0					
ANR	527409	ExpressionStatement	"code = gx_default_put_intent ( rend_intent [ k ] , dev , profile_types [ k ] )"	2087:16:84827:84894	522978	0	True				
ANR	527410	AssignmentExpression	"code = gx_default_put_intent ( rend_intent [ k ] , dev , profile_types [ k ] )"		522978	0		=			
ANR	527411	Identifier	code		522978	0					
ANR	527412	CallExpression	"gx_default_put_intent ( rend_intent [ k ] , dev , profile_types [ k ] )"		522978	1					
ANR	527413	Callee	gx_default_put_intent		522978	0					
ANR	527414	Identifier	gx_default_put_intent		522978	0					
ANR	527415	ArgumentList	rend_intent [ k ]		522978	1					
ANR	527416	Argument	rend_intent [ k ]		522978	0					
ANR	527417	ArrayIndexing	rend_intent [ k ]		522978	0					
ANR	527418	Identifier	rend_intent		522978	0					
ANR	527419	Identifier	k		522978	1					
ANR	527420	Argument	dev		522978	1					
ANR	527421	Identifier	dev		522978	0					
ANR	527422	Argument	profile_types [ k ]		522978	2					
ANR	527423	ArrayIndexing	profile_types [ k ]		522978	0					
ANR	527424	Identifier	profile_types		522978	0					
ANR	527425	Identifier	k		522978	1					
ANR	527426	IfStatement	if ( code < 0 )		522978	1					
ANR	527427	Condition	code < 0	2089:16:84926:84933	522978	0	True				
ANR	527428	RelationalExpression	code < 0		522978	0		<			
ANR	527429	Identifier	code		522978	0					
ANR	527430	PrimaryExpression	0		522978	1					
ANR	527431	ReturnStatement	return code ;	2090:16:84952:84963	522978	1	True				
ANR	527432	Identifier	code		522978	0					
ANR	527433	IfStatement	if ( blackptcomp [ 0 ] != gsBPNOTSPECIFIED && blackptcomp [ k ] == gsBPNOTSPECIFIED )		522978	2					
ANR	527434	Condition	blackptcomp [ 0 ] != gsBPNOTSPECIFIED && blackptcomp [ k ] == gsBPNOTSPECIFIED	2091:16:84981:85068	522978	0	True				
ANR	527435	AndExpression	blackptcomp [ 0 ] != gsBPNOTSPECIFIED && blackptcomp [ k ] == gsBPNOTSPECIFIED		522978	0		&&			
ANR	527436	EqualityExpression	blackptcomp [ 0 ] != gsBPNOTSPECIFIED		522978	0		!=			
ANR	527437	ArrayIndexing	blackptcomp [ 0 ]		522978	0					
ANR	527438	Identifier	blackptcomp		522978	0					
ANR	527439	PrimaryExpression	0		522978	1					
ANR	527440	Identifier	gsBPNOTSPECIFIED		522978	1					
ANR	527441	EqualityExpression	blackptcomp [ k ] == gsBPNOTSPECIFIED		522978	1		==			
ANR	527442	ArrayIndexing	blackptcomp [ k ]		522978	0					
ANR	527443	Identifier	blackptcomp		522978	0					
ANR	527444	Identifier	k		522978	1					
ANR	527445	Identifier	gsBPNOTSPECIFIED		522978	1					
ANR	527446	CompoundStatement		709:52:27759:27759	522978	1					
ANR	527447	ExpressionStatement	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , profile_types [ k ] )"	2093:16:85089:85161	522978	0	True				
ANR	527448	AssignmentExpression	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , profile_types [ k ] )"		522978	0		=			
ANR	527449	Identifier	code		522978	0					
ANR	527450	CallExpression	"gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , profile_types [ k ] )"		522978	1					
ANR	527451	Callee	gx_default_put_blackptcomp		522978	0					
ANR	527452	Identifier	gx_default_put_blackptcomp		522978	0					
ANR	527453	ArgumentList	blackptcomp [ 0 ]		522978	1					
ANR	527454	Argument	blackptcomp [ 0 ]		522978	0					
ANR	527455	ArrayIndexing	blackptcomp [ 0 ]		522978	0					
ANR	527456	Identifier	blackptcomp		522978	0					
ANR	527457	PrimaryExpression	0		522978	1					
ANR	527458	Argument	dev		522978	1					
ANR	527459	Identifier	dev		522978	0					
ANR	527460	Argument	profile_types [ k ]		522978	2					
ANR	527461	ArrayIndexing	profile_types [ k ]		522978	0					
ANR	527462	Identifier	profile_types		522978	0					
ANR	527463	Identifier	k		522978	1					
ANR	527464	ElseStatement	else		522978	0					
ANR	527465	CompoundStatement		711:19:27870:27870	522978	0					
ANR	527466	ExpressionStatement	"code = gx_default_put_blackptcomp ( blackptcomp [ k ] , dev , profile_types [ k ] )"	2095:16:85200:85272	522978	0	True				
ANR	527467	AssignmentExpression	"code = gx_default_put_blackptcomp ( blackptcomp [ k ] , dev , profile_types [ k ] )"		522978	0		=			
ANR	527468	Identifier	code		522978	0					
ANR	527469	CallExpression	"gx_default_put_blackptcomp ( blackptcomp [ k ] , dev , profile_types [ k ] )"		522978	1					
ANR	527470	Callee	gx_default_put_blackptcomp		522978	0					
ANR	527471	Identifier	gx_default_put_blackptcomp		522978	0					
ANR	527472	ArgumentList	blackptcomp [ k ]		522978	1					
ANR	527473	Argument	blackptcomp [ k ]		522978	0					
ANR	527474	ArrayIndexing	blackptcomp [ k ]		522978	0					
ANR	527475	Identifier	blackptcomp		522978	0					
ANR	527476	Identifier	k		522978	1					
ANR	527477	Argument	dev		522978	1					
ANR	527478	Identifier	dev		522978	0					
ANR	527479	Argument	profile_types [ k ]		522978	2					
ANR	527480	ArrayIndexing	profile_types [ k ]		522978	0					
ANR	527481	Identifier	profile_types		522978	0					
ANR	527482	Identifier	k		522978	1					
ANR	527483	IfStatement	if ( code < 0 )		522978	3					
ANR	527484	Condition	code < 0	2097:16:85304:85311	522978	0	True				
ANR	527485	RelationalExpression	code < 0		522978	0		<			
ANR	527486	Identifier	code		522978	0					
ANR	527487	PrimaryExpression	0		522978	1					
ANR	527488	ReturnStatement	return code ;	2098:16:85330:85341	522978	1	True				
ANR	527489	Identifier	code		522978	0					
ANR	527490	IfStatement	if ( blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED && blackpreserve [ k ] == gsBKPRESNOTSPECIFIED )		522978	4					
ANR	527491	Condition	blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED && blackpreserve [ k ] == gsBKPRESNOTSPECIFIED	2099:16:85359:85458	522978	0	True				
ANR	527492	AndExpression	blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED && blackpreserve [ k ] == gsBKPRESNOTSPECIFIED		522978	0		&&			
ANR	527493	EqualityExpression	blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED		522978	0		!=			
ANR	527494	ArrayIndexing	blackpreserve [ 0 ]		522978	0					
ANR	527495	Identifier	blackpreserve		522978	0					
ANR	527496	PrimaryExpression	0		522978	1					
ANR	527497	Identifier	gsBKPRESNOTSPECIFIED		522978	1					
ANR	527498	EqualityExpression	blackpreserve [ k ] == gsBKPRESNOTSPECIFIED		522978	1		==			
ANR	527499	ArrayIndexing	blackpreserve [ k ]		522978	0					
ANR	527500	Identifier	blackpreserve		522978	0					
ANR	527501	Identifier	k		522978	1					
ANR	527502	Identifier	gsBKPRESNOTSPECIFIED		522978	1					
ANR	527503	CompoundStatement		717:58:28149:28149	522978	1					
ANR	527504	ExpressionStatement	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , profile_types [ k ] )"	2101:16:85479:85555	522978	0	True				
ANR	527505	AssignmentExpression	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , profile_types [ k ] )"		522978	0		=			
ANR	527506	Identifier	code		522978	0					
ANR	527507	CallExpression	"gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , profile_types [ k ] )"		522978	1					
ANR	527508	Callee	gx_default_put_blackpreserve		522978	0					
ANR	527509	Identifier	gx_default_put_blackpreserve		522978	0					
ANR	527510	ArgumentList	blackpreserve [ 0 ]		522978	1					
ANR	527511	Argument	blackpreserve [ 0 ]		522978	0					
ANR	527512	ArrayIndexing	blackpreserve [ 0 ]		522978	0					
ANR	527513	Identifier	blackpreserve		522978	0					
ANR	527514	PrimaryExpression	0		522978	1					
ANR	527515	Argument	dev		522978	1					
ANR	527516	Identifier	dev		522978	0					
ANR	527517	Argument	profile_types [ k ]		522978	2					
ANR	527518	ArrayIndexing	profile_types [ k ]		522978	0					
ANR	527519	Identifier	profile_types		522978	0					
ANR	527520	Identifier	k		522978	1					
ANR	527521	ElseStatement	else		522978	0					
ANR	527522	CompoundStatement		719:19:28264:28264	522978	0					
ANR	527523	ExpressionStatement	"code = gx_default_put_blackpreserve ( blackpreserve [ k ] , dev , profile_types [ k ] )"	2103:16:85594:85670	522978	0	True				
ANR	527524	AssignmentExpression	"code = gx_default_put_blackpreserve ( blackpreserve [ k ] , dev , profile_types [ k ] )"		522978	0		=			
ANR	527525	Identifier	code		522978	0					
ANR	527526	CallExpression	"gx_default_put_blackpreserve ( blackpreserve [ k ] , dev , profile_types [ k ] )"		522978	1					
ANR	527527	Callee	gx_default_put_blackpreserve		522978	0					
ANR	527528	Identifier	gx_default_put_blackpreserve		522978	0					
ANR	527529	ArgumentList	blackpreserve [ k ]		522978	1					
ANR	527530	Argument	blackpreserve [ k ]		522978	0					
ANR	527531	ArrayIndexing	blackpreserve [ k ]		522978	0					
ANR	527532	Identifier	blackpreserve		522978	0					
ANR	527533	Identifier	k		522978	1					
ANR	527534	Argument	dev		522978	1					
ANR	527535	Identifier	dev		522978	0					
ANR	527536	Argument	profile_types [ k ]		522978	2					
ANR	527537	ArrayIndexing	profile_types [ k ]		522978	0					
ANR	527538	Identifier	profile_types		522978	0					
ANR	527539	Identifier	k		522978	1					
ANR	527540	IfStatement	if ( code < 0 )		522978	5					
ANR	527541	Condition	code < 0	2105:16:85702:85709	522978	0	True				
ANR	527542	RelationalExpression	code < 0		522978	0		<			
ANR	527543	Identifier	code		522978	0					
ANR	527544	PrimaryExpression	0		522978	1					
ANR	527545	ReturnStatement	return code ;	2106:16:85728:85739	522978	1	True				
ANR	527546	Identifier	code		522978	0					
ANR	527547	ExpressionStatement	"gsicc_setcoloraccuracy ( dev -> memory , color_accuracy )"	2109:4:85761:85812	522978	275	True				
ANR	527548	CallExpression	"gsicc_setcoloraccuracy ( dev -> memory , color_accuracy )"		522978	0					
ANR	527549	Callee	gsicc_setcoloraccuracy		522978	0					
ANR	527550	Identifier	gsicc_setcoloraccuracy		522978	0					
ANR	527551	ArgumentList	dev -> memory		522978	1					
ANR	527552	Argument	dev -> memory		522978	0					
ANR	527553	PtrMemberAccess	dev -> memory		522978	0					
ANR	527554	Identifier	dev		522978	0					
ANR	527555	Identifier	memory		522978	1					
ANR	527556	Argument	color_accuracy		522978	1					
ANR	527557	Identifier	color_accuracy		522978	0					
ANR	527558	ExpressionStatement	"code = gx_default_put_graytok ( devicegraytok , dev )"	2110:4:85818:85867	522978	276	True				
ANR	527559	AssignmentExpression	"code = gx_default_put_graytok ( devicegraytok , dev )"		522978	0		=			
ANR	527560	Identifier	code		522978	0					
ANR	527561	CallExpression	"gx_default_put_graytok ( devicegraytok , dev )"		522978	1					
ANR	527562	Callee	gx_default_put_graytok		522978	0					
ANR	527563	Identifier	gx_default_put_graytok		522978	0					
ANR	527564	ArgumentList	devicegraytok		522978	1					
ANR	527565	Argument	devicegraytok		522978	0					
ANR	527566	Identifier	devicegraytok		522978	0					
ANR	527567	Argument	dev		522978	1					
ANR	527568	Identifier	dev		522978	0					
ANR	527569	IfStatement	if ( code < 0 )		522978	277					
ANR	527570	Condition	code < 0	2111:8:85877:85884	522978	0	True				
ANR	527571	RelationalExpression	code < 0		522978	0		<			
ANR	527572	Identifier	code		522978	0					
ANR	527573	PrimaryExpression	0		522978	1					
ANR	527574	ReturnStatement	return code ;	2112:8:85895:85906	522978	1	True				
ANR	527575	Identifier	code		522978	0					
ANR	527576	ExpressionStatement	"code = gx_default_put_usefastcolor ( usefastcolor , dev )"	2113:4:85912:85965	522978	278	True				
ANR	527577	AssignmentExpression	"code = gx_default_put_usefastcolor ( usefastcolor , dev )"		522978	0		=			
ANR	527578	Identifier	code		522978	0					
ANR	527579	CallExpression	"gx_default_put_usefastcolor ( usefastcolor , dev )"		522978	1					
ANR	527580	Callee	gx_default_put_usefastcolor		522978	0					
ANR	527581	Identifier	gx_default_put_usefastcolor		522978	0					
ANR	527582	ArgumentList	usefastcolor		522978	1					
ANR	527583	Argument	usefastcolor		522978	0					
ANR	527584	Identifier	usefastcolor		522978	0					
ANR	527585	Argument	dev		522978	1					
ANR	527586	Identifier	dev		522978	0					
ANR	527587	IfStatement	if ( code < 0 )		522978	279					
ANR	527588	Condition	code < 0	2114:8:85975:85982	522978	0	True				
ANR	527589	RelationalExpression	code < 0		522978	0		<			
ANR	527590	Identifier	code		522978	0					
ANR	527591	PrimaryExpression	0		522978	1					
ANR	527592	ReturnStatement	return code ;	2115:8:85993:86004	522978	1	True				
ANR	527593	Identifier	code		522978	0					
ANR	527594	ExpressionStatement	"code = gx_default_put_simulateoverprint ( sim_overprint , dev )"	2116:4:86010:86069	522978	280	True				
ANR	527595	AssignmentExpression	"code = gx_default_put_simulateoverprint ( sim_overprint , dev )"		522978	0		=			
ANR	527596	Identifier	code		522978	0					
ANR	527597	CallExpression	"gx_default_put_simulateoverprint ( sim_overprint , dev )"		522978	1					
ANR	527598	Callee	gx_default_put_simulateoverprint		522978	0					
ANR	527599	Identifier	gx_default_put_simulateoverprint		522978	0					
ANR	527600	ArgumentList	sim_overprint		522978	1					
ANR	527601	Argument	sim_overprint		522978	0					
ANR	527602	Identifier	sim_overprint		522978	0					
ANR	527603	Argument	dev		522978	1					
ANR	527604	Identifier	dev		522978	0					
ANR	527605	IfStatement	if ( code < 0 )		522978	281					
ANR	527606	Condition	code < 0	2117:8:86079:86086	522978	0	True				
ANR	527607	RelationalExpression	code < 0		522978	0		<			
ANR	527608	Identifier	code		522978	0					
ANR	527609	PrimaryExpression	0		522978	1					
ANR	527610	ReturnStatement	return code ;	2118:8:86097:86108	522978	1	True				
ANR	527611	Identifier	code		522978	0					
ANR	527612	ExpressionStatement	"code = gx_default_put_graydetection ( graydetection , dev )"	2119:4:86114:86169	522978	282	True				
ANR	527613	AssignmentExpression	"code = gx_default_put_graydetection ( graydetection , dev )"		522978	0		=			
ANR	527614	Identifier	code		522978	0					
ANR	527615	CallExpression	"gx_default_put_graydetection ( graydetection , dev )"		522978	1					
ANR	527616	Callee	gx_default_put_graydetection		522978	0					
ANR	527617	Identifier	gx_default_put_graydetection		522978	0					
ANR	527618	ArgumentList	graydetection		522978	1					
ANR	527619	Argument	graydetection		522978	0					
ANR	527620	Identifier	graydetection		522978	0					
ANR	527621	Argument	dev		522978	1					
ANR	527622	Identifier	dev		522978	0					
ANR	527623	IfStatement	if ( code < 0 )		522978	283					
ANR	527624	Condition	code < 0	2120:8:86179:86186	522978	0	True				
ANR	527625	RelationalExpression	code < 0		522978	0		<			
ANR	527626	Identifier	code		522978	0					
ANR	527627	PrimaryExpression	0		522978	1					
ANR	527628	ReturnStatement	return code ;	2121:8:86197:86208	522978	1	True				
ANR	527629	Identifier	code		522978	0					
ANR	527630	ReturnStatement	"return gx_default_put_prebandthreshold ( prebandthreshold , dev ) ;"	2122:4:86214:86275	522978	284	True				
ANR	527631	CallExpression	"gx_default_put_prebandthreshold ( prebandthreshold , dev )"		522978	0					
ANR	527632	Callee	gx_default_put_prebandthreshold		522978	0					
ANR	527633	Identifier	gx_default_put_prebandthreshold		522978	0					
ANR	527634	ArgumentList	prebandthreshold		522978	1					
ANR	527635	Argument	prebandthreshold		522978	0					
ANR	527636	Identifier	prebandthreshold		522978	0					
ANR	527637	Argument	dev		522978	1					
ANR	527638	Identifier	dev		522978	0					
ANR	527639	ReturnType	int		522978	1					
ANR	527640	Identifier	gx_default_put_params		522978	2					
ANR	527641	ParameterList	"gx_device * dev , gs_param_list * plist"		522978	3					
ANR	527642	Parameter	gx_device * dev	1383:22:57271:57285	522978	0	True				
ANR	527643	ParameterType	gx_device *		522978	0					
ANR	527644	Identifier	dev		522978	1					
ANR	527645	Parameter	gs_param_list * plist	1383:39:57288:57308	522978	1	True				
ANR	527646	ParameterType	gs_param_list *		522978	0					
ANR	527647	Identifier	plist		522978	1					
ANR	527648	CFGEntryNode	ENTRY		522978		True				
ANR	527649	CFGExitNode	EXIT		522978		True				
ANR	527650	CFGErrorNode	ERROR		522978		True				
ANR	527651	Symbol	dev -> icc_struct -> graydetection		522978						
ANR	527652	Symbol	param_read_float_array		522978						
ANR	527653	Symbol	bad		522978						
ANR	527654	Symbol	psize		522978						
ANR	527655	Symbol	dev		522978						
ANR	527656	Symbol	dev -> icc_struct		522978						
ANR	527657	Symbol	rc_free_pages_list		522978						
ANR	527658	Symbol	gs_error_invalidaccess		522978						
ANR	527659	Symbol	palette		522978						
ANR	527660	Symbol	band		522978						
ANR	527661	Symbol	& ibba		522978						
ANR	527662	Symbol	devicegraytok		522978						
ANR	527663	Symbol	dev -> color_info . num_components		522978						
ANR	527664	Symbol	dev -> PageList -> Pages		522978						
ANR	527665	Symbol	& mpbm		522978						
ANR	527666	Symbol	gsicc_currentcoloraccuracy		522978						
ANR	527667	Symbol	sp . params_are_read_only		522978						
ANR	527668	Symbol	* hwra		522978						
ANR	527669	Symbol	dev -> LockSafetyParams		522978						
ANR	527670	Symbol	* hwma . data		522978						
ANR	527671	Symbol	ibbnull		522978						
ANR	527672	Symbol	hwra . data		522978						
ANR	527673	Symbol	scne		522978						
ANR	527674	Symbol	sp . band . BandHeight		522978						
ANR	527675	Symbol	gsBPNOTSPECIFIED		522978						
ANR	527676	Symbol	bse		522978						
ANR	527677	Symbol	* ibba . data		522978						
ANR	527678	Symbol	scna		522978						
ANR	527679	Symbol	& pa		522978						
ANR	527680	Symbol	gx_default_put_icc		522978						
ANR	527681	Symbol	param_HWColorMap		522978						
ANR	527682	Symbol	dev -> color_info . anti_alias . text_bits		522978						
ANR	527683	Symbol	gx_default_put_graytok		522978						
ANR	527684	Symbol	ColorValues		522978						
ANR	527685	Symbol	* hwsa . data		522978						
ANR	527686	Symbol	& color_accuracy		522978						
ANR	527687	Symbol	param_check_bool		522978						
ANR	527688	Symbol	& dev -> FirstPage		522978						
ANR	527689	Symbol	dev -> IgnoreNumCopies		522978						
ANR	527690	Symbol	dev -> icc_struct -> rendercond [ k ] . rendering_intent		522978						
ANR	527691	Symbol	use_antidropout		522978						
ANR	527692	Symbol	* dev_proc		522978						
ANR	527693	Symbol	dev -> Margins		522978						
ANR	527694	Symbol	dev -> color_info		522978						
ANR	527695	Symbol	* hwsa		522978						
ANR	527696	Symbol	colors		522978						
ANR	527697	Symbol	param_read_int		522978						
ANR	527698	Symbol	dev -> ImagingBBox		522978						
ANR	527699	Symbol	dev -> icc_struct -> rendercond		522978						
ANR	527700	Symbol	gx_default_put_usefastcolor		522978						
ANR	527701	Symbol	gs_error_limitcheck		522978						
ANR	527702	Symbol	pread		522978						
ANR	527703	Symbol	dev -> UseCIEColor		522978						
ANR	527704	Symbol	sp		522978						
ANR	527705	Symbol	band . BandHeight		522978						
ANR	527706	Symbol	sp . band . BandWidth		522978						
ANR	527707	Symbol	usefastcolor		522978						
ANR	527708	Symbol	& cms		522978						
ANR	527709	Symbol	k		522978						
ANR	527710	Symbol	gsRINOTSPECIFIED		522978						
ANR	527711	Symbol	gsGRAPHICPROFILE		522978						
ANR	527712	Symbol	ecode		522978						
ANR	527713	Symbol	dev -> HWResolution		522978						
ANR	527714	Symbol	sp . band		522978						
ANR	527715	Symbol	& temp_bool		522978						
ANR	527716	Symbol	t		522978						
ANR	527717	Symbol	gx_default_put_simulateoverprint		522978						
ANR	527718	Symbol	LEADINGEDGE_MASK		522978						
ANR	527719	Symbol	dev -> LeadingEdge		522978						
ANR	527720	Symbol	& nci		522978						
ANR	527721	Symbol	sim_overprint		522978						
ANR	527722	Symbol	save_sp . member		522978						
ANR	527723	Symbol	gs_error_rangecheck		522978						
ANR	527724	Symbol	& sp		522978						
ANR	527725	Symbol	* hwma		522978						
ANR	527726	Symbol	* hwra . data		522978						
ANR	527727	Symbol	( pa ) . size		522978						
ANR	527728	Symbol	FILTERVECTOR		522978						
ANR	527729	Symbol	* ma . data		522978						
ANR	527730	Symbol	leadingedge		522978						
ANR	527731	Symbol	dev -> MediaSize		522978						
ANR	527732	Symbol	param_check_bytes		522978						
ANR	527733	Symbol	~FILTERVECTOR		522978						
ANR	527734	Symbol	res		522978						
ANR	527735	Symbol	& locksafe		522978						
ANR	527736	Symbol	& sp . band . BandWidth		522978						
ANR	527737	Symbol	pname		522978						
ANR	527738	Symbol	& msa		522978						
ANR	527739	Symbol	gsBKPRESNOTSPECIFIED		522978						
ANR	527740	Symbol	dev -> memory -> non_gc_memory		522978						
ANR	527741	Symbol	& sim_overprint		522978						
ANR	527742	Symbol	param_read_null		522978						
ANR	527743	Symbol	ncset		522978						
ANR	527744	Symbol	& icc_pro		522978						
ANR	527745	Symbol	bwe		522978						
ANR	527746	Symbol	param_anti_alias_bits		522978						
ANR	527747	Symbol	param_check_long		522978						
ANR	527748	Symbol	sp . BufferSpace		522978						
ANR	527749	Symbol	sp . band . BandBufferSpace		522978						
ANR	527750	Symbol	& ucc		522978						
ANR	527751	Symbol	& tab		522978						
ANR	527752	Symbol	bbse		522978						
ANR	527753	Symbol	dev -> icc_struct -> rendercond [ k ] . black_point_comp		522978						
ANR	527754	Symbol	gx_default_put_icc_colorants		522978						
ANR	527755	Symbol	gsBLENDPROFILE		522978						
ANR	527756	Symbol	& page_uses_transparency		522978						
ANR	527757	Symbol	param_normalize_anti_alias_bits		522978						
ANR	527758	Symbol	FILTERTEXT		522978						
ANR	527759	Symbol	~FILTERIMAGE		522978						
ANR	527760	Symbol	ma . data		522978						
ANR	527761	Symbol	gab		522978						
ANR	527762	Symbol	* ibba		522978						
ANR	527763	Symbol	hwma		522978						
ANR	527764	Symbol	hwme		522978						
ANR	527765	Symbol	dev_proc		522978						
ANR	527766	Symbol	band . BandBufferSpace		522978						
ANR	527767	Symbol	bhe		522978						
ANR	527768	Symbol	& pagelist		522978						
ANR	527769	Symbol	band . BandWidth		522978						
ANR	527770	Symbol	dev -> NumCopies_set		522978						
ANR	527771	Symbol	locksafe		522978						
ANR	527772	Symbol	dev -> icc_struct -> prebandthreshold		522978						
ANR	527773	Symbol	* msa		522978						
ANR	527774	Symbol	gx_default_put_prebandthreshold		522978						
ANR	527775	Symbol	false		522978						
ANR	527776	Symbol	pagelist		522978						
ANR	527777	Symbol	dev -> interpolate_control		522978						
ANR	527778	Symbol	* dev -> HWResolution		522978						
ANR	527779	Symbol	( pa ) . data		522978						
ANR	527780	Symbol	& sp . MaxBitmap		522978						
ANR	527781	Symbol	pcms		522978						
ANR	527782	Symbol	color_accuracy		522978						
ANR	527783	Symbol	gs_error_VMerror		522978						
ANR	527784	Symbol	gs_note_error		522978						
ANR	527785	Symbol	* dev -> ImagingBBox		522978						
ANR	527786	Symbol	& prebandthreshold		522978						
ANR	527787	Symbol	* blackptcomp		522978						
ANR	527788	Symbol	& t		522978						
ANR	527789	Symbol	dev -> color_info . anti_alias . graphics_bits		522978						
ANR	527790	Symbol	& use_antidropout		522978						
ANR	527791	Symbol	dev -> color_info . use_antidropout_downscaler		522978						
ANR	527792	Symbol	"* dev_proc ( dev , get_page_device )"		522978						
ANR	527793	Symbol	gsPRPROFILE		522978						
ANR	527794	Symbol	dev -> HWMargins		522978						
ANR	527795	Symbol	dev -> icc_struct -> sim_overprint		522978						
ANR	527796	Symbol	icc_pro		522978						
ANR	527797	Symbol	& sp . band		522978						
ANR	527798	Symbol	* dev -> icc_struct -> rendercond		522978						
ANR	527799	Symbol	temp_bool		522978						
ANR	527800	Symbol	FILTERIMAGE		522978						
ANR	527801	Symbol	ibba . size		522978						
ANR	527802	Symbol	ic		522978						
ANR	527803	Symbol	profile_types		522978						
ANR	527804	Symbol	mpbm		522978						
ANR	527805	Symbol	dev -> ImagingBBox_set		522978						
ANR	527806	Symbol	LEADINGEDGE_SET_MASK		522978						
ANR	527807	Symbol	param_check_int		522978						
ANR	527808	Symbol	* msa . data		522978						
ANR	527809	Symbol	BufferSpace		522978						
ANR	527810	Symbol	dev -> color_info . max_color		522978						
ANR	527811	Symbol	gsDEFAULTPROFILE		522978						
ANR	527812	Symbol	~LEADINGEDGE_SET_MASK		522978						
ANR	527813	Symbol	ibba		522978						
ANR	527814	Symbol	param_read_bool		522978						
ANR	527815	Symbol	RGBValues		522978						
ANR	527816	Symbol	msa . data		522978						
ANR	527817	Symbol	param_read_string		522978						
ANR	527818	Symbol	dev -> DisablePageHandler		522978						
ANR	527819	Symbol	dev -> is_open		522978						
ANR	527820	Symbol	dev -> NumCopies		522978						
ANR	527821	Symbol	* dev -> HWMargins		522978						
ANR	527822	Symbol	* * dev -> icc_struct		522978						
ANR	527823	Symbol	* dev -> memory		522978						
ANR	527824	Symbol	* dev		522978						
ANR	527825	Symbol	gsPROOFPROFILE		522978						
ANR	527826	Symbol	pagelist . data		522978						
ANR	527827	Symbol	& sp . BufferSpace		522978						
ANR	527828	Symbol	sp . member		522978						
ANR	527829	Symbol	& ic		522978						
ANR	527830	Symbol	prebandthreshold		522978						
ANR	527831	Symbol	dev -> height		522978						
ANR	527832	Symbol	cms		522978						
ANR	527833	Symbol	dev -> color_info . depth		522978						
ANR	527834	Symbol	gsTEXTPROFILE		522978						
ANR	527835	Symbol	hwra		522978						
ANR	527836	Symbol	* dev -> icc_struct		522978						
ANR	527837	Symbol	plist		522978						
ANR	527838	Symbol	dev -> ObjectFilter		522978						
ANR	527839	Symbol	nci		522978						
ANR	527840	Symbol	& usefastcolor		522978						
ANR	527841	Symbol	~FILTERTEXT		522978						
ANR	527842	Symbol	dev -> PageList -> PagesSize		522978						
ANR	527843	Symbol	* ma		522978						
ANR	527844	Symbol	& sp . band . BandHeight		522978						
ANR	527845	Symbol	dev -> color_info . max_gray		522978						
ANR	527846	Symbol	& devicegraytok		522978						
ANR	527847	Symbol	param_check_string		522978						
ANR	527848	Symbol	gx_default_put_blackpreserve		522978						
ANR	527849	Symbol	ignc		522978						
ANR	527850	Symbol	page_uses_transparency		522978						
ANR	527851	Symbol	get_process_color_model_name		522978						
ANR	527852	Symbol	gsLINKPROFILE		522978						
ANR	527853	Symbol	max		522978						
ANR	527854	Symbol	igni		522978						
ANR	527855	Symbol	* * dev		522978						
ANR	527856	Symbol	hwsa . data		522978						
ANR	527857	Symbol	& graydetection		522978						
ANR	527858	Symbol	LEADINGEDGE_REQ_BIT		522978						
ANR	527859	Symbol	depth		522978						
ANR	527860	Symbol	msa		522978						
ANR	527861	Symbol	rend_intent		522978						
ANR	527862	Symbol	max_coord		522978						
ANR	527863	Symbol	* dev -> PageList		522978						
ANR	527864	Symbol	dev -> icc_struct -> rendercond [ k ] . preserve_black		522978						
ANR	527865	Symbol	hwma . data		522978						
ANR	527866	Symbol	data		522978						
ANR	527867	Symbol	dev -> space_params		522978						
ANR	527868	Symbol	hwse		522978						
ANR	527869	Symbol	* dev -> Margins		522978						
ANR	527870	Symbol	* * * dev		522978						
ANR	527871	Symbol	ma		522978						
ANR	527872	Symbol	ucc		522978						
ANR	527873	Symbol	tab		522978						
ANR	527874	Symbol	NUM_DEVICE_PROFILES		522978						
ANR	527875	Symbol	me		522978						
ANR	527876	Symbol	dev -> PageList		522978						
ANR	527877	Symbol	graydetection		522978						
ANR	527878	Symbol	dev -> page_uses_transparency		522978						
ANR	527879	Symbol	dev -> color_info . anti_alias		522978						
ANR	527880	Symbol	& sp . band . BandBufferSpace		522978						
ANR	527881	Symbol	NULL		522978						
ANR	527882	Symbol	param_read_long		522978						
ANR	527883	Symbol	blackptcomp		522978						
ANR	527884	Symbol	LEADINGEDGE_REQ_VAL_SHIFT		522978						
ANR	527885	Symbol	dev -> MaxPatternBitmap		522978						
ANR	527886	Symbol	hwsa		522978						
ANR	527887	Symbol	get_page_device		522978						
ANR	527888	Symbol	gx_default_put_intent		522978						
ANR	527889	Symbol	hwre		522978						
ANR	527890	Symbol	* dev -> MediaSize		522978						
ANR	527891	Symbol	* blackpreserve		522978						
ANR	527892	Symbol	true		522978						
ANR	527893	Symbol	param_commit		522978						
ANR	527894	Symbol	dev -> icc_struct -> devicegraytok		522978						
ANR	527895	Symbol	* rend_intent		522978						
ANR	527896	Symbol	& ignc		522978						
ANR	527897	Symbol	code		522978						
ANR	527898	Symbol	GrayValues		522978						
ANR	527899	Symbol	ibba . data		522978						
ANR	527900	Symbol	dev -> dname		522978						
ANR	527901	Symbol	& dev -> LastPage		522978						
ANR	527902	Symbol	* profile_types		522978						
ANR	527903	Symbol	& igni		522978						
ANR	527904	Symbol	blackpreserve		522978						
ANR	527905	Symbol	gs_alloc_bytes		522978						
ANR	527906	Symbol	param_MediaSize		522978						
ANR	527907	Symbol	& gab		522978						
ANR	527908	Symbol	gsIMAGEPROFILE		522978						
ANR	527909	Symbol	pa		522978						
ANR	527910	Symbol	dev -> memory		522978						
ANR	527911	Symbol	dev -> icc_struct -> usefastcolor		522978						
ANR	527912	Symbol	pagelist . size		522978						
ANR	527913	Symbol	* k		522978						
ANR	527914	Symbol	dev -> width		522978						
ANR	527915	Symbol	gx_default_put_graydetection		522978						
ANR	527916	Symbol	gx_default_put_blackptcomp		522978						
ANR	527917	Symbol	param_name		522978						
ANR	527918	Symbol	save_sp		522978						
ANR	527919	Function	gx_device_request_leadingedge	2125:0:86280:86513							
ANR	527920	FunctionDef	"gx_device_request_leadingedge (gx_device * dev , int le_req)"		527919	0					
ANR	527921	CompoundStatement		2127:0:86343:86513	527919	0					
ANR	527922	ExpressionStatement	dev -> LeadingEdge = ( dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL ) | ( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT	2128:4:86349:86511	527919	0	True				
ANR	527923	AssignmentExpression	dev -> LeadingEdge = ( dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL ) | ( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT		527919	0		=			
ANR	527924	PtrMemberAccess	dev -> LeadingEdge		527919	0					
ANR	527925	Identifier	dev		527919	0					
ANR	527926	Identifier	LeadingEdge		527919	1					
ANR	527927	InclusiveOrExpression	( dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL ) | ( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT		527919	1		|			
ANR	527928	BitAndExpression	dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL		527919	0		&			
ANR	527929	PtrMemberAccess	dev -> LeadingEdge		527919	0					
ANR	527930	Identifier	dev		527919	0					
ANR	527931	Identifier	LeadingEdge		527919	1					
ANR	527932	Identifier	~LEADINGEDGE_REQ_VAL		527919	1					
ANR	527933	InclusiveOrExpression	( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT		527919	1		|			
ANR	527934	BitAndExpression	( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL		527919	0		&			
ANR	527935	ShiftExpression	le_req << LEADINGEDGE_REQ_VAL_SHIFT		527919	0		<<			
ANR	527936	Identifier	le_req		527919	0					
ANR	527937	Identifier	LEADINGEDGE_REQ_VAL_SHIFT		527919	1					
ANR	527938	Identifier	LEADINGEDGE_REQ_VAL		527919	1					
ANR	527939	Identifier	LEADINGEDGE_REQ_BIT		527919	1					
ANR	527940	ReturnType	void		527919	1					
ANR	527941	Identifier	gx_device_request_leadingedge		527919	2					
ANR	527942	ParameterList	"gx_device * dev , int le_req"		527919	3					
ANR	527943	Parameter	gx_device * dev	2126:30:86315:86328	527919	0	True				
ANR	527944	ParameterType	gx_device *		527919	0					
ANR	527945	Identifier	dev		527919	1					
ANR	527946	Parameter	int le_req	2126:46:86331:86340	527919	1	True				
ANR	527947	ParameterType	int		527919	0					
ANR	527948	Identifier	le_req		527919	1					
ANR	527949	CFGEntryNode	ENTRY		527919		True				
ANR	527950	CFGExitNode	EXIT		527919		True				
ANR	527951	Symbol	* dev		527919						
ANR	527952	Symbol	LEADINGEDGE_REQ_BIT		527919						
ANR	527953	Symbol	dev		527919						
ANR	527954	Symbol	dev -> LeadingEdge		527919						
ANR	527955	Symbol	LEADINGEDGE_REQ_VAL		527919						
ANR	527956	Symbol	LEADINGEDGE_REQ_VAL_SHIFT		527919						
ANR	527957	Symbol	~LEADINGEDGE_REQ_VAL		527919						
ANR	527958	Symbol	le_req		527919						
ANR	527959	Function	param_normalize_anti_alias_bits	2136:0:86614:86785							
ANR	527960	FunctionDef	"param_normalize_anti_alias_bits (uint max_gray , int bits)"		527959	0					
ANR	527961	CompoundStatement		2138:0:86684:86785	527959	0					
ANR	527962	IdentifierDeclStatement	int max_bits = ilog2 ( max_gray + 1 ) ;	2139:8:86694:86729	527959	0	True				
ANR	527963	IdentifierDecl	max_bits = ilog2 ( max_gray + 1 )		527959	0					
ANR	527964	IdentifierDeclType	int		527959	0					
ANR	527965	Identifier	max_bits		527959	1					
ANR	527966	AssignmentExpression	max_bits = ilog2 ( max_gray + 1 )		527959	2		=			
ANR	527967	Identifier	max_bits		527959	0					
ANR	527968	CallExpression	ilog2 ( max_gray + 1 )		527959	1					
ANR	527969	Callee	ilog2		527959	0					
ANR	527970	Identifier	ilog2		527959	0					
ANR	527971	ArgumentList	max_gray + 1		527959	1					
ANR	527972	Argument	max_gray + 1		527959	0					
ANR	527973	AdditiveExpression	max_gray + 1		527959	0		+			
ANR	527974	Identifier	max_gray		527959	0					
ANR	527975	PrimaryExpression	1		527959	1					
ANR	527976	ReturnStatement	return ( bits > max_bits ? max_bits : bits ) ;	2141:8:86740:86783	527959	1	True				
ANR	527977	ConditionalExpression	bits > max_bits ? max_bits : bits		527959	0					
ANR	527978	Condition	bits > max_bits		527959	0					
ANR	527979	RelationalExpression	bits > max_bits		527959	0		>			
ANR	527980	Identifier	bits		527959	0					
ANR	527981	Identifier	max_bits		527959	1					
ANR	527982	Identifier	max_bits		527959	1					
ANR	527983	Identifier	bits		527959	2					
ANR	527984	ReturnType	static int		527959	1					
ANR	527985	Identifier	param_normalize_anti_alias_bits		527959	2					
ANR	527986	ParameterList	"uint max_gray , int bits"		527959	3					
ANR	527987	Parameter	uint max_gray	2137:33:86658:86670	527959	0	True				
ANR	527988	ParameterType	uint		527959	0					
ANR	527989	Identifier	max_gray		527959	1					
ANR	527990	Parameter	int bits	2137:48:86673:86680	527959	1	True				
ANR	527991	ParameterType	int		527959	0					
ANR	527992	Identifier	bits		527959	1					
ANR	527993	CFGEntryNode	ENTRY		527959		True				
ANR	527994	CFGExitNode	EXIT		527959		True				
ANR	527995	Symbol	max_gray		527959						
ANR	527996	Symbol	bits		527959						
ANR	527997	Symbol	max_bits		527959						
ANR	527998	Symbol	ilog2		527959						
ANR	527999	Function	param_anti_alias_bits	2145:0:86835:87297							
ANR	528000	FunctionDef	"param_anti_alias_bits (gs_param_list * plist , gs_param_name param_name , int * pa)"		527999	0					
ANR	528001	CompoundStatement		2147:0:86926:87297	527999	0					
ANR	528002	IdentifierDeclStatement	"int code = param_read_int ( plist , param_name , pa ) ;"	2148:4:86932:86980	527999	0	True				
ANR	528003	IdentifierDecl	"code = param_read_int ( plist , param_name , pa )"		527999	0					
ANR	528004	IdentifierDeclType	int		527999	0					
ANR	528005	Identifier	code		527999	1					
ANR	528006	AssignmentExpression	"code = param_read_int ( plist , param_name , pa )"		527999	2		=			
ANR	528007	Identifier	code		527999	0					
ANR	528008	CallExpression	"param_read_int ( plist , param_name , pa )"		527999	1					
ANR	528009	Callee	param_read_int		527999	0					
ANR	528010	Identifier	param_read_int		527999	0					
ANR	528011	ArgumentList	plist		527999	1					
ANR	528012	Argument	plist		527999	0					
ANR	528013	Identifier	plist		527999	0					
ANR	528014	Argument	param_name		527999	1					
ANR	528015	Identifier	param_name		527999	0					
ANR	528016	Argument	pa		527999	2					
ANR	528017	Identifier	pa		527999	0					
ANR	528018	SwitchStatement	switch ( code )		527999	1					
ANR	528019	Condition	code	2150:12:86995:86998	527999	0	True				
ANR	528020	Identifier	code		527999	0					
ANR	528021	CompoundStatement		4:18:74:74	527999	1					
ANR	528022	Label	case 0 :	2151:4:87007:87013	527999	0	True				
ANR	528023	SwitchStatement	switch ( * pa )		527999	1					
ANR	528024	Condition	* pa	2152:16:87031:87033	527999	0	True				
ANR	528025	UnaryOperationExpression	* pa		527999	0					
ANR	528026	UnaryOperator	*		527999	0					
ANR	528027	Identifier	pa		527999	1					
ANR	528028	CompoundStatement		6:21:109:109	527999	1					
ANR	528029	Label	case 1 :	2153:8:87046:87052	527999	0	True				
ANR	528030	Label	case 2 :	2153:16:87054:87060	527999	1	True				
ANR	528031	Label	case 4 :	2153:24:87062:87068	527999	2	True				
ANR	528032	ReturnStatement	return 0 ;	2154:12:87082:87090	527999	3	True				
ANR	528033	PrimaryExpression	0		527999	0					
ANR	528034	Label	default :	2155:8:87100:87107	527999	4	True				
ANR	528035	Identifier	default		527999	0					
ANR	528036	ExpressionStatement	code = gs_error_rangecheck	2156:12:87121:87147	527999	5	True				
ANR	528037	AssignmentExpression	code = gs_error_rangecheck		527999	0		=			
ANR	528038	Identifier	code		527999	0					
ANR	528039	Identifier	gs_error_rangecheck		527999	1					
ANR	528040	Label	default :	2159:4:87190:87197	527999	2	True				
ANR	528041	Identifier	default		527999	0					
ANR	528042	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2160:8:87207:87250	527999	3	True				
ANR	528043	CallExpression	"param_signal_error ( plist , param_name , code )"		527999	0					
ANR	528044	Callee	param_signal_error		527999	0					
ANR	528045	Identifier	param_signal_error		527999	0					
ANR	528046	ArgumentList	plist		527999	1					
ANR	528047	Argument	plist		527999	0					
ANR	528048	Identifier	plist		527999	0					
ANR	528049	Argument	param_name		527999	1					
ANR	528050	Identifier	param_name		527999	0					
ANR	528051	Argument	code		527999	2					
ANR	528052	Identifier	code		527999	0					
ANR	528053	Label	case 1 :	2161:4:87256:87262	527999	4	True				
ANR	528054	ExpressionStatement		2162:8:87272:87272	527999	5	True				
ANR	528055	ReturnStatement	return code ;	2164:4:87284:87295	527999	2	True				
ANR	528056	Identifier	code		527999	0					
ANR	528057	ReturnType	static int		527999	1					
ANR	528058	Identifier	param_anti_alias_bits		527999	2					
ANR	528059	ParameterList	"gs_param_list * plist , gs_param_name param_name , int * pa"		527999	3					
ANR	528060	Parameter	gs_param_list * plist	2146:22:86868:86888	527999	0	True				
ANR	528061	ParameterType	gs_param_list *		527999	0					
ANR	528062	Identifier	plist		527999	1					
ANR	528063	Parameter	gs_param_name param_name	2146:45:86891:86914	527999	1	True				
ANR	528064	ParameterType	gs_param_name		527999	0					
ANR	528065	Identifier	param_name		527999	1					
ANR	528066	Parameter	int * pa	2146:71:86917:86923	527999	2	True				
ANR	528067	ParameterType	int *		527999	0					
ANR	528068	Identifier	pa		527999	1					
ANR	528069	CFGEntryNode	ENTRY		527999		True				
ANR	528070	CFGExitNode	EXIT		527999		True				
ANR	528071	Symbol	pa		527999						
ANR	528072	Symbol	plist		527999						
ANR	528073	Symbol	param_read_int		527999						
ANR	528074	Symbol	code		527999						
ANR	528075	Symbol	* pa		527999						
ANR	528076	Symbol	gs_error_rangecheck		527999						
ANR	528077	Symbol	param_name		527999						
ANR	528078	Function	param_MediaSize	2168:0:87363:88143							
ANR	528079	FunctionDef	"param_MediaSize (gs_param_list * plist , gs_param_name pname , const float * res , gs_param_float_array * pa)"		528078	0					
ANR	528080	CompoundStatement		2171:0:87495:88143	528078	0					
ANR	528081	IdentifierDeclStatement	gs_param_name param_name ;	2172:4:87501:87525	528078	0	True				
ANR	528082	IdentifierDecl	param_name		528078	0					
ANR	528083	IdentifierDeclType	gs_param_name		528078	0					
ANR	528084	Identifier	param_name		528078	1					
ANR	528085	IdentifierDeclStatement	int ecode = 0 ;	2173:4:87531:87544	528078	1	True				
ANR	528086	IdentifierDecl	ecode = 0		528078	0					
ANR	528087	IdentifierDeclType	int		528078	0					
ANR	528088	Identifier	ecode		528078	1					
ANR	528089	AssignmentExpression	ecode = 0		528078	2		=			
ANR	528090	Identifier	ecode		528078	0					
ANR	528091	PrimaryExpression	0		528078	1					
ANR	528092	IdentifierDeclStatement	int code ;	2174:4:87550:87558	528078	2	True				
ANR	528093	IdentifierDecl	code		528078	0					
ANR	528094	IdentifierDeclType	int		528078	0					
ANR	528095	Identifier	code		528078	1					
ANR	528096	Statement	BEGIN_ARRAY_PARAM	2176:4:87565:87581	528078	3	True				
ANR	528097	Statement	(	2176:21:87582:87582	528078	4	True				
ANR	528098	Statement	param_read_float_array	2176:22:87583:87604	528078	5	True				
ANR	528099	Statement	","	2176:44:87605:87605	528078	6	True				
ANR	528100	Statement	pname	2176:46:87607:87611	528078	7	True				
ANR	528101	Statement	","	2176:51:87612:87612	528078	8	True				
ANR	528102	Statement	*	2176:53:87614:87614	528078	9	True				
ANR	528103	Statement	pa	2176:54:87615:87616	528078	10	True				
ANR	528104	Statement	","	2176:56:87617:87617	528078	11	True				
ANR	528105	Statement	2	2176:58:87619:87619	528078	12	True				
ANR	528106	Statement	","	2176:59:87620:87620	528078	13	True				
ANR	528107	Statement	mse	2176:61:87622:87624	528078	14	True				
ANR	528108	Statement	)	2176:64:87625:87625	528078	15	True				
ANR	528109	CompoundStatement		8:8:194:238	528078	16					
ANR	528110	IdentifierDeclStatement	float width_new = pa -> data [ 0 ] * res [ 0 ] / 72 ;	2177:8:87637:87680	528078	0	True				
ANR	528111	IdentifierDecl	width_new = pa -> data [ 0 ] * res [ 0 ] / 72		528078	0					
ANR	528112	IdentifierDeclType	float		528078	0					
ANR	528113	Identifier	width_new		528078	1					
ANR	528114	AssignmentExpression	width_new = pa -> data [ 0 ] * res [ 0 ] / 72		528078	2		=			
ANR	528115	Identifier	width_new		528078	0					
ANR	528116	MultiplicativeExpression	pa -> data [ 0 ] * res [ 0 ] / 72		528078	1		*			
ANR	528117	ArrayIndexing	pa -> data [ 0 ]		528078	0					
ANR	528118	PtrMemberAccess	pa -> data		528078	0					
ANR	528119	Identifier	pa		528078	0					
ANR	528120	Identifier	data		528078	1					
ANR	528121	PrimaryExpression	0		528078	1					
ANR	528122	MultiplicativeExpression	res [ 0 ] / 72		528078	1		/			
ANR	528123	ArrayIndexing	res [ 0 ]		528078	0					
ANR	528124	Identifier	res		528078	0					
ANR	528125	PrimaryExpression	0		528078	1					
ANR	528126	PrimaryExpression	72		528078	1					
ANR	528127	IdentifierDeclStatement	float height_new = pa -> data [ 1 ] * res [ 1 ] / 72 ;	2178:8:87690:87734	528078	1	True				
ANR	528128	IdentifierDecl	height_new = pa -> data [ 1 ] * res [ 1 ] / 72		528078	0					
ANR	528129	IdentifierDeclType	float		528078	0					
ANR	528130	Identifier	height_new		528078	1					
ANR	528131	AssignmentExpression	height_new = pa -> data [ 1 ] * res [ 1 ] / 72		528078	2		=			
ANR	528132	Identifier	height_new		528078	0					
ANR	528133	MultiplicativeExpression	pa -> data [ 1 ] * res [ 1 ] / 72		528078	1		*			
ANR	528134	ArrayIndexing	pa -> data [ 1 ]		528078	0					
ANR	528135	PtrMemberAccess	pa -> data		528078	0					
ANR	528136	Identifier	pa		528078	0					
ANR	528137	Identifier	data		528078	1					
ANR	528138	PrimaryExpression	1		528078	1					
ANR	528139	MultiplicativeExpression	res [ 1 ] / 72		528078	1		/			
ANR	528140	ArrayIndexing	res [ 1 ]		528078	0					
ANR	528141	Identifier	res		528078	0					
ANR	528142	PrimaryExpression	1		528078	1					
ANR	528143	PrimaryExpression	72		528078	1					
ANR	528144	IfStatement	if ( width_new < 0 || height_new < 0 )		528078	2					
ANR	528145	Condition	width_new < 0 || height_new < 0	2180:12:87749:87779	528078	0	True				
ANR	528146	OrExpression	width_new < 0 || height_new < 0		528078	0		||			
ANR	528147	RelationalExpression	width_new < 0		528078	0		<			
ANR	528148	Identifier	width_new		528078	0					
ANR	528149	PrimaryExpression	0		528078	1					
ANR	528150	RelationalExpression	height_new < 0		528078	1		<			
ANR	528151	Identifier	height_new		528078	0					
ANR	528152	PrimaryExpression	0		528078	1					
ANR	528153	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	2181:12:87794:87836	528078	1	True				
ANR	528154	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		528078	0		=			
ANR	528155	Identifier	ecode		528078	0					
ANR	528156	CallExpression	gs_note_error ( gs_error_rangecheck )		528078	1					
ANR	528157	Callee	gs_note_error		528078	0					
ANR	528158	Identifier	gs_note_error		528078	0					
ANR	528159	ArgumentList	gs_error_rangecheck		528078	1					
ANR	528160	Argument	gs_error_rangecheck		528078	0					
ANR	528161	Identifier	gs_error_rangecheck		528078	0					
ANR	528162	ElseStatement	else		528078	0					
ANR	528163	IfStatement	if ( width_new > ( long ) max_coord || height_new > ( long ) max_coord )		528078	0					
ANR	528164	Condition	width_new > ( long ) max_coord || height_new > ( long ) max_coord	2184:17:87919:87977	528078	0	True				
ANR	528165	OrExpression	width_new > ( long ) max_coord || height_new > ( long ) max_coord		528078	0		||			
ANR	528166	RelationalExpression	width_new > ( long ) max_coord		528078	0		>			
ANR	528167	Identifier	width_new		528078	0					
ANR	528168	CastExpression	( long ) max_coord		528078	1					
ANR	528169	CastTarget	long		528078	0					
ANR	528170	Identifier	max_coord		528078	1					
ANR	528171	RelationalExpression	height_new > ( long ) max_coord		528078	1		>			
ANR	528172	Identifier	height_new		528078	0					
ANR	528173	CastExpression	( long ) max_coord		528078	1					
ANR	528174	CastTarget	long		528078	0					
ANR	528175	Identifier	max_coord		528078	1					
ANR	528176	ExpressionStatement	ecode = gs_note_error ( gs_error_limitcheck )	2185:12:87992:88034	528078	1	True				
ANR	528177	AssignmentExpression	ecode = gs_note_error ( gs_error_limitcheck )		528078	0		=			
ANR	528178	Identifier	ecode		528078	0					
ANR	528179	CallExpression	gs_note_error ( gs_error_limitcheck )		528078	1					
ANR	528180	Callee	gs_note_error		528078	0					
ANR	528181	Identifier	gs_note_error		528078	0					
ANR	528182	ArgumentList	gs_error_limitcheck		528078	1					
ANR	528183	Argument	gs_error_limitcheck		528078	0					
ANR	528184	Identifier	gs_error_limitcheck		528078	0					
ANR	528185	ElseStatement	else		528078	0					
ANR	528186	BreakStatement	break ;	2189:12:88085:88090	528078	0	True				
ANR	528187	Statement	define	2182:1:87839:87844	528078	3	True				
ANR	528188	Statement	max_coord	2182:8:87846:87854	528078	4	True				
ANR	528189	Statement	(	2182:18:87856:87856	528078	5	True				
ANR	528190	Statement	max_fixed	2182:19:87857:87865	528078	6	True				
ANR	528191	Statement	/	2182:29:87867:87867	528078	7	True				
ANR	528192	Statement	fixed_1	2182:31:87869:87875	528078	8	True				
ANR	528193	Statement	)	2182:38:87876:87876	528078	9	True				
ANR	528194	Statement	undef	2187:1:88044:88048	528078	10	True				
ANR	528195	Statement	max_coord	2187:7:88050:88058	528078	11	True				
ANR	528196	ExpressionStatement	"END_ARRAY_PARAM ( * pa , mse )"	2190:6:88098:88123	528078	17	True				
ANR	528197	CallExpression	"END_ARRAY_PARAM ( * pa , mse )"		528078	0					
ANR	528198	Callee	END_ARRAY_PARAM		528078	0					
ANR	528199	Identifier	END_ARRAY_PARAM		528078	0					
ANR	528200	ArgumentList	* pa		528078	1					
ANR	528201	Argument	* pa		528078	0					
ANR	528202	UnaryOperationExpression	* pa		528078	0					
ANR	528203	UnaryOperator	*		528078	0					
ANR	528204	Identifier	pa		528078	1					
ANR	528205	Argument	mse		528078	1					
ANR	528206	Identifier	mse		528078	0					
ANR	528207	ReturnStatement	return ecode ;	2191:4:88129:88141	528078	18	True				
ANR	528208	Identifier	ecode		528078	0					
ANR	528209	ReturnType	static int		528078	1					
ANR	528210	Identifier	param_MediaSize		528078	2					
ANR	528211	ParameterList	"gs_param_list * plist , gs_param_name pname , const float * res , gs_param_float_array * pa"		528078	3					
ANR	528212	Parameter	gs_param_list * plist	2169:16:87390:87410	528078	0	True				
ANR	528213	ParameterType	gs_param_list *		528078	0					
ANR	528214	Identifier	plist		528078	1					
ANR	528215	Parameter	gs_param_name pname	2169:39:87413:87431	528078	1	True				
ANR	528216	ParameterType	gs_param_name		528078	0					
ANR	528217	Identifier	pname		528078	1					
ANR	528218	Parameter	const float * res	2170:16:87450:87465	528078	2	True				
ANR	528219	ParameterType	const float *		528078	0					
ANR	528220	Identifier	res		528078	1					
ANR	528221	Parameter	gs_param_float_array * pa	2170:34:87468:87492	528078	3	True				
ANR	528222	ParameterType	gs_param_float_array *		528078	0					
ANR	528223	Identifier	pa		528078	1					
ANR	528224	CFGEntryNode	ENTRY		528078		True				
ANR	528225	CFGExitNode	EXIT		528078		True				
ANR	528226	CFGErrorNode	ERROR		528078		True				
ANR	528227	Symbol	res		528078						
ANR	528228	Symbol	pa -> data		528078						
ANR	528229	Symbol	code		528078						
ANR	528230	Symbol	gs_error_rangecheck		528078						
ANR	528231	Symbol	pname		528078						
ANR	528232	Symbol	* pa -> data		528078						
ANR	528233	Symbol	* res		528078						
ANR	528234	Symbol	ecode		528078						
ANR	528235	Symbol	pa		528078						
ANR	528236	Symbol	plist		528078						
ANR	528237	Symbol	height_new		528078						
ANR	528238	Symbol	gs_note_error		528078						
ANR	528239	Symbol	* pa		528078						
ANR	528240	Symbol	width_new		528078						
ANR	528241	Symbol	gs_error_limitcheck		528078						
ANR	528242	Symbol	param_name		528078						
ANR	528243	Symbol	max_coord		528078						
ANR	528244	Symbol	mse		528078						
ANR	528245	Symbol	* * pa		528078						
ANR	528246	Function	param_check_bool	2196:0:88237:88820							
ANR	528247	FunctionDef	"param_check_bool (gs_param_list * plist , gs_param_name pname , bool value , bool is_defined)"		528246	0					
ANR	528248	CompoundStatement		2199:0:88355:88820	528246	0					
ANR	528249	IdentifierDeclStatement	int code ;	2200:4:88361:88369	528246	0	True				
ANR	528250	IdentifierDecl	code		528246	0					
ANR	528251	IdentifierDeclType	int		528246	0					
ANR	528252	Identifier	code		528246	1					
ANR	528253	IdentifierDeclStatement	bool new_value ;	2201:4:88375:88389	528246	1	True				
ANR	528254	IdentifierDecl	new_value		528246	0					
ANR	528255	IdentifierDeclType	bool		528246	0					
ANR	528256	Identifier	new_value		528246	1					
ANR	528257	SwitchStatement	"switch ( code = param_read_bool ( plist , pname , & new_value ) )"		528246	2					
ANR	528258	Condition	"code = param_read_bool ( plist , pname , & new_value )"	2203:12:88404:88451	528246	0	True				
ANR	528259	AssignmentExpression	"code = param_read_bool ( plist , pname , & new_value )"		528246	0		=			
ANR	528260	Identifier	code		528246	0					
ANR	528261	CallExpression	"param_read_bool ( plist , pname , & new_value )"		528246	1					
ANR	528262	Callee	param_read_bool		528246	0					
ANR	528263	Identifier	param_read_bool		528246	0					
ANR	528264	ArgumentList	plist		528246	1					
ANR	528265	Argument	plist		528246	0					
ANR	528266	Identifier	plist		528246	0					
ANR	528267	Argument	pname		528246	1					
ANR	528268	Identifier	pname		528246	0					
ANR	528269	Argument	& new_value		528246	2					
ANR	528270	UnaryOperationExpression	& new_value		528246	0					
ANR	528271	UnaryOperator	&		528246	0					
ANR	528272	Identifier	new_value		528246	1					
ANR	528273	CompoundStatement		5:62:98:98	528246	1					
ANR	528274	Label	case 0 :	2204:8:88464:88470	528246	0	True				
ANR	528275	IfStatement	if ( is_defined && new_value == value )		528246	1					
ANR	528276	Condition	is_defined && new_value == value	2205:16:88488:88519	528246	0	True				
ANR	528277	AndExpression	is_defined && new_value == value		528246	0		&&			
ANR	528278	Identifier	is_defined		528246	0					
ANR	528279	EqualityExpression	new_value == value		528246	1		==			
ANR	528280	Identifier	new_value		528246	0					
ANR	528281	Identifier	value		528246	1					
ANR	528282	BreakStatement	break ;	2206:16:88538:88543	528246	1	True				
ANR	528283	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2207:12:88557:88598	528246	2	True				
ANR	528284	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		528246	0		=			
ANR	528285	Identifier	code		528246	0					
ANR	528286	CallExpression	gs_note_error ( gs_error_rangecheck )		528246	1					
ANR	528287	Callee	gs_note_error		528246	0					
ANR	528288	Identifier	gs_note_error		528246	0					
ANR	528289	ArgumentList	gs_error_rangecheck		528246	1					
ANR	528290	Argument	gs_error_rangecheck		528246	0					
ANR	528291	Identifier	gs_error_rangecheck		528246	0					
ANR	528292	GotoStatement	goto e ;	2208:12:88612:88618	528246	3	True				
ANR	528293	Identifier	e		528246	0					
ANR	528294	Label	default :	2209:8:88628:88635	528246	4	True				
ANR	528295	Identifier	default		528246	0					
ANR	528296	IfStatement	"if ( param_read_null ( plist , pname ) == 0 )"		528246	5					
ANR	528297	Condition	"param_read_null ( plist , pname ) == 0"	2210:16:88653:88686	528246	0	True				
ANR	528298	EqualityExpression	"param_read_null ( plist , pname ) == 0"		528246	0		==			
ANR	528299	CallExpression	"param_read_null ( plist , pname )"		528246	0					
ANR	528300	Callee	param_read_null		528246	0					
ANR	528301	Identifier	param_read_null		528246	0					
ANR	528302	ArgumentList	plist		528246	1					
ANR	528303	Argument	plist		528246	0					
ANR	528304	Identifier	plist		528246	0					
ANR	528305	Argument	pname		528246	1					
ANR	528306	Identifier	pname		528246	0					
ANR	528307	PrimaryExpression	0		528246	1					
ANR	528308	ReturnStatement	return 1 ;	2211:16:88705:88713	528246	1	True				
ANR	528309	PrimaryExpression	1		528246	0					
ANR	528310	Label	e :	2212:10:88725:88726	528246	6	True				
ANR	528311	Identifier	e		528246	0					
ANR	528312	ExpressionStatement	"param_signal_error ( plist , pname , code )"	2212:12:88727:88765	528246	7	True				
ANR	528313	CallExpression	"param_signal_error ( plist , pname , code )"		528246	0					
ANR	528314	Callee	param_signal_error		528246	0					
ANR	528315	Identifier	param_signal_error		528246	0					
ANR	528316	ArgumentList	plist		528246	1					
ANR	528317	Argument	plist		528246	0					
ANR	528318	Identifier	plist		528246	0					
ANR	528319	Argument	pname		528246	1					
ANR	528320	Identifier	pname		528246	0					
ANR	528321	Argument	code		528246	2					
ANR	528322	Identifier	code		528246	0					
ANR	528323	Label	case 1 :	2213:8:88775:88781	528246	8	True				
ANR	528324	ExpressionStatement		2214:12:88795:88795	528246	9	True				
ANR	528325	ReturnStatement	return code ;	2216:4:88807:88818	528246	3	True				
ANR	528326	Identifier	code		528246	0					
ANR	528327	ReturnType	static int		528246	1					
ANR	528328	Identifier	param_check_bool		528246	2					
ANR	528329	ParameterList	"gs_param_list * plist , gs_param_name pname , bool value , bool is_defined"		528246	3					
ANR	528330	Parameter	gs_param_list * plist	2197:17:88265:88285	528246	0	True				
ANR	528331	ParameterType	gs_param_list *		528246	0					
ANR	528332	Identifier	plist		528246	1					
ANR	528333	Parameter	gs_param_name pname	2197:40:88288:88306	528246	1	True				
ANR	528334	ParameterType	gs_param_name		528246	0					
ANR	528335	Identifier	pname		528246	1					
ANR	528336	Parameter	bool value	2197:61:88309:88318	528246	2	True				
ANR	528337	ParameterType	bool		528246	0					
ANR	528338	Identifier	value		528246	1					
ANR	528339	Parameter	bool is_defined	2198:17:88338:88352	528246	3	True				
ANR	528340	ParameterType	bool		528246	0					
ANR	528341	Identifier	is_defined		528246	1					
ANR	528342	CFGEntryNode	ENTRY		528246		True				
ANR	528343	CFGExitNode	EXIT		528246		True				
ANR	528344	Symbol	is_defined		528246						
ANR	528345	Symbol	plist		528246						
ANR	528346	Symbol	gs_note_error		528246						
ANR	528347	Symbol	code		528246						
ANR	528348	Symbol	gs_error_rangecheck		528246						
ANR	528349	Symbol	& new_value		528246						
ANR	528350	Symbol	pname		528246						
ANR	528351	Symbol	param_read_bool		528246						
ANR	528352	Symbol	value		528246						
ANR	528353	Symbol	new_value		528246						
ANR	528354	Symbol	param_read_null		528246						
ANR	528355	Function	param_check_long	2218:0:88822:89405							
ANR	528356	FunctionDef	"param_check_long (gs_param_list * plist , gs_param_name pname , long value , bool is_defined)"		528355	0					
ANR	528357	CompoundStatement		2221:0:88940:89405	528355	0					
ANR	528358	IdentifierDeclStatement	int code ;	2222:4:88946:88954	528355	0	True				
ANR	528359	IdentifierDecl	code		528355	0					
ANR	528360	IdentifierDeclType	int		528355	0					
ANR	528361	Identifier	code		528355	1					
ANR	528362	IdentifierDeclStatement	long new_value ;	2223:4:88960:88974	528355	1	True				
ANR	528363	IdentifierDecl	new_value		528355	0					
ANR	528364	IdentifierDeclType	long		528355	0					
ANR	528365	Identifier	new_value		528355	1					
ANR	528366	SwitchStatement	"switch ( code = param_read_long ( plist , pname , & new_value ) )"		528355	2					
ANR	528367	Condition	"code = param_read_long ( plist , pname , & new_value )"	2225:12:88989:89036	528355	0	True				
ANR	528368	AssignmentExpression	"code = param_read_long ( plist , pname , & new_value )"		528355	0		=			
ANR	528369	Identifier	code		528355	0					
ANR	528370	CallExpression	"param_read_long ( plist , pname , & new_value )"		528355	1					
ANR	528371	Callee	param_read_long		528355	0					
ANR	528372	Identifier	param_read_long		528355	0					
ANR	528373	ArgumentList	plist		528355	1					
ANR	528374	Argument	plist		528355	0					
ANR	528375	Identifier	plist		528355	0					
ANR	528376	Argument	pname		528355	1					
ANR	528377	Identifier	pname		528355	0					
ANR	528378	Argument	& new_value		528355	2					
ANR	528379	UnaryOperationExpression	& new_value		528355	0					
ANR	528380	UnaryOperator	&		528355	0					
ANR	528381	Identifier	new_value		528355	1					
ANR	528382	CompoundStatement		5:62:98:98	528355	1					
ANR	528383	Label	case 0 :	2226:8:89049:89055	528355	0	True				
ANR	528384	IfStatement	if ( is_defined && new_value == value )		528355	1					
ANR	528385	Condition	is_defined && new_value == value	2227:16:89073:89104	528355	0	True				
ANR	528386	AndExpression	is_defined && new_value == value		528355	0		&&			
ANR	528387	Identifier	is_defined		528355	0					
ANR	528388	EqualityExpression	new_value == value		528355	1		==			
ANR	528389	Identifier	new_value		528355	0					
ANR	528390	Identifier	value		528355	1					
ANR	528391	BreakStatement	break ;	2228:16:89123:89128	528355	1	True				
ANR	528392	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2229:12:89142:89183	528355	2	True				
ANR	528393	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		528355	0		=			
ANR	528394	Identifier	code		528355	0					
ANR	528395	CallExpression	gs_note_error ( gs_error_rangecheck )		528355	1					
ANR	528396	Callee	gs_note_error		528355	0					
ANR	528397	Identifier	gs_note_error		528355	0					
ANR	528398	ArgumentList	gs_error_rangecheck		528355	1					
ANR	528399	Argument	gs_error_rangecheck		528355	0					
ANR	528400	Identifier	gs_error_rangecheck		528355	0					
ANR	528401	GotoStatement	goto e ;	2230:12:89197:89203	528355	3	True				
ANR	528402	Identifier	e		528355	0					
ANR	528403	Label	default :	2231:8:89213:89220	528355	4	True				
ANR	528404	Identifier	default		528355	0					
ANR	528405	IfStatement	"if ( param_read_null ( plist , pname ) == 0 )"		528355	5					
ANR	528406	Condition	"param_read_null ( plist , pname ) == 0"	2232:16:89238:89271	528355	0	True				
ANR	528407	EqualityExpression	"param_read_null ( plist , pname ) == 0"		528355	0		==			
ANR	528408	CallExpression	"param_read_null ( plist , pname )"		528355	0					
ANR	528409	Callee	param_read_null		528355	0					
ANR	528410	Identifier	param_read_null		528355	0					
ANR	528411	ArgumentList	plist		528355	1					
ANR	528412	Argument	plist		528355	0					
ANR	528413	Identifier	plist		528355	0					
ANR	528414	Argument	pname		528355	1					
ANR	528415	Identifier	pname		528355	0					
ANR	528416	PrimaryExpression	0		528355	1					
ANR	528417	ReturnStatement	return 1 ;	2233:16:89290:89298	528355	1	True				
ANR	528418	PrimaryExpression	1		528355	0					
ANR	528419	Label	e :	2234:10:89310:89311	528355	6	True				
ANR	528420	Identifier	e		528355	0					
ANR	528421	ExpressionStatement	"param_signal_error ( plist , pname , code )"	2234:12:89312:89350	528355	7	True				
ANR	528422	CallExpression	"param_signal_error ( plist , pname , code )"		528355	0					
ANR	528423	Callee	param_signal_error		528355	0					
ANR	528424	Identifier	param_signal_error		528355	0					
ANR	528425	ArgumentList	plist		528355	1					
ANR	528426	Argument	plist		528355	0					
ANR	528427	Identifier	plist		528355	0					
ANR	528428	Argument	pname		528355	1					
ANR	528429	Identifier	pname		528355	0					
ANR	528430	Argument	code		528355	2					
ANR	528431	Identifier	code		528355	0					
ANR	528432	Label	case 1 :	2235:8:89360:89366	528355	8	True				
ANR	528433	ExpressionStatement		2236:12:89380:89380	528355	9	True				
ANR	528434	ReturnStatement	return code ;	2238:4:89392:89403	528355	3	True				
ANR	528435	Identifier	code		528355	0					
ANR	528436	ReturnType	static int		528355	1					
ANR	528437	Identifier	param_check_long		528355	2					
ANR	528438	ParameterList	"gs_param_list * plist , gs_param_name pname , long value , bool is_defined"		528355	3					
ANR	528439	Parameter	gs_param_list * plist	2219:17:88850:88870	528355	0	True				
ANR	528440	ParameterType	gs_param_list *		528355	0					
ANR	528441	Identifier	plist		528355	1					
ANR	528442	Parameter	gs_param_name pname	2219:40:88873:88891	528355	1	True				
ANR	528443	ParameterType	gs_param_name		528355	0					
ANR	528444	Identifier	pname		528355	1					
ANR	528445	Parameter	long value	2219:61:88894:88903	528355	2	True				
ANR	528446	ParameterType	long		528355	0					
ANR	528447	Identifier	value		528355	1					
ANR	528448	Parameter	bool is_defined	2220:17:88923:88937	528355	3	True				
ANR	528449	ParameterType	bool		528355	0					
ANR	528450	Identifier	is_defined		528355	1					
ANR	528451	CFGEntryNode	ENTRY		528355		True				
ANR	528452	CFGExitNode	EXIT		528355		True				
ANR	528453	Symbol	is_defined		528355						
ANR	528454	Symbol	plist		528355						
ANR	528455	Symbol	gs_note_error		528355						
ANR	528456	Symbol	code		528355						
ANR	528457	Symbol	param_read_long		528355						
ANR	528458	Symbol	gs_error_rangecheck		528355						
ANR	528459	Symbol	& new_value		528355						
ANR	528460	Symbol	pname		528355						
ANR	528461	Symbol	value		528355						
ANR	528462	Symbol	new_value		528355						
ANR	528463	Symbol	param_read_null		528355						
ANR	528464	Function	param_check_bytes	2240:0:89407:90149							
ANR	528465	FunctionDef	"param_check_bytes (gs_param_list * plist , gs_param_name pname , const byte * str , uint size , bool is_defined)"		528464	0					
ANR	528466	CompoundStatement		2243:0:89544:90149	528464	0					
ANR	528467	IdentifierDeclStatement	int code ;	2244:4:89550:89558	528464	0	True				
ANR	528468	IdentifierDecl	code		528464	0					
ANR	528469	IdentifierDeclType	int		528464	0					
ANR	528470	Identifier	code		528464	1					
ANR	528471	IdentifierDeclStatement	gs_param_string new_value ;	2245:4:89564:89589	528464	1	True				
ANR	528472	IdentifierDecl	new_value		528464	0					
ANR	528473	IdentifierDeclType	gs_param_string		528464	0					
ANR	528474	Identifier	new_value		528464	1					
ANR	528475	SwitchStatement	"switch ( code = param_read_string ( plist , pname , & new_value ) )"		528464	2					
ANR	528476	Condition	"code = param_read_string ( plist , pname , & new_value )"	2247:12:89604:89653	528464	0	True				
ANR	528477	AssignmentExpression	"code = param_read_string ( plist , pname , & new_value )"		528464	0		=			
ANR	528478	Identifier	code		528464	0					
ANR	528479	CallExpression	"param_read_string ( plist , pname , & new_value )"		528464	1					
ANR	528480	Callee	param_read_string		528464	0					
ANR	528481	Identifier	param_read_string		528464	0					
ANR	528482	ArgumentList	plist		528464	1					
ANR	528483	Argument	plist		528464	0					
ANR	528484	Identifier	plist		528464	0					
ANR	528485	Argument	pname		528464	1					
ANR	528486	Identifier	pname		528464	0					
ANR	528487	Argument	& new_value		528464	2					
ANR	528488	UnaryOperationExpression	& new_value		528464	0					
ANR	528489	UnaryOperator	&		528464	0					
ANR	528490	Identifier	new_value		528464	1					
ANR	528491	CompoundStatement		5:64:111:111	528464	1					
ANR	528492	Label	case 0 :	2248:8:89666:89672	528464	0	True				
ANR	528493	IfStatement	"if ( is_defined && new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size ) )"		528464	1					
ANR	528494	Condition	"is_defined && new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"	2249:16:89690:89831	528464	0	True				
ANR	528495	AndExpression	"is_defined && new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		528464	0		&&			
ANR	528496	Identifier	is_defined		528464	0					
ANR	528497	AndExpression	"new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		528464	1		&&			
ANR	528498	EqualityExpression	new_value . size == size		528464	0		==			
ANR	528499	MemberAccess	new_value . size		528464	0					
ANR	528500	Identifier	new_value		528464	0					
ANR	528501	Identifier	size		528464	1					
ANR	528502	Identifier	size		528464	1					
ANR	528503	UnaryOperationExpression	"! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		528464	1					
ANR	528504	UnaryOperator	!		528464	0					
ANR	528505	CallExpression	"memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		528464	1					
ANR	528506	Callee	memcmp		528464	0					
ANR	528507	Identifier	memcmp		528464	0					
ANR	528508	ArgumentList	( const char * ) str		528464	1					
ANR	528509	Argument	( const char * ) str		528464	0					
ANR	528510	CastExpression	( const char * ) str		528464	0					
ANR	528511	CastTarget	const char *		528464	0					
ANR	528512	Identifier	str		528464	1					
ANR	528513	Argument	( const char * ) new_value . data		528464	1					
ANR	528514	CastExpression	( const char * ) new_value . data		528464	0					
ANR	528515	CastTarget	const char *		528464	0					
ANR	528516	MemberAccess	new_value . data		528464	1					
ANR	528517	Identifier	new_value		528464	0					
ANR	528518	Identifier	data		528464	1					
ANR	528519	Argument	size		528464	2					
ANR	528520	Identifier	size		528464	0					
ANR	528521	BreakStatement	break ;	2253:16:89867:89872	528464	1	True				
ANR	528522	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2254:12:89886:89927	528464	2	True				
ANR	528523	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		528464	0		=			
ANR	528524	Identifier	code		528464	0					
ANR	528525	CallExpression	gs_note_error ( gs_error_rangecheck )		528464	1					
ANR	528526	Callee	gs_note_error		528464	0					
ANR	528527	Identifier	gs_note_error		528464	0					
ANR	528528	ArgumentList	gs_error_rangecheck		528464	1					
ANR	528529	Argument	gs_error_rangecheck		528464	0					
ANR	528530	Identifier	gs_error_rangecheck		528464	0					
ANR	528531	GotoStatement	goto e ;	2255:12:89941:89947	528464	3	True				
ANR	528532	Identifier	e		528464	0					
ANR	528533	Label	default :	2256:8:89957:89964	528464	4	True				
ANR	528534	Identifier	default		528464	0					
ANR	528535	IfStatement	"if ( param_read_null ( plist , pname ) == 0 )"		528464	5					
ANR	528536	Condition	"param_read_null ( plist , pname ) == 0"	2257:16:89982:90015	528464	0	True				
ANR	528537	EqualityExpression	"param_read_null ( plist , pname ) == 0"		528464	0		==			
ANR	528538	CallExpression	"param_read_null ( plist , pname )"		528464	0					
ANR	528539	Callee	param_read_null		528464	0					
ANR	528540	Identifier	param_read_null		528464	0					
ANR	528541	ArgumentList	plist		528464	1					
ANR	528542	Argument	plist		528464	0					
ANR	528543	Identifier	plist		528464	0					
ANR	528544	Argument	pname		528464	1					
ANR	528545	Identifier	pname		528464	0					
ANR	528546	PrimaryExpression	0		528464	1					
ANR	528547	ReturnStatement	return 1 ;	2258:16:90034:90042	528464	1	True				
ANR	528548	PrimaryExpression	1		528464	0					
ANR	528549	Label	e :	2259:10:90054:90055	528464	6	True				
ANR	528550	Identifier	e		528464	0					
ANR	528551	ExpressionStatement	"param_signal_error ( plist , pname , code )"	2259:12:90056:90094	528464	7	True				
ANR	528552	CallExpression	"param_signal_error ( plist , pname , code )"		528464	0					
ANR	528553	Callee	param_signal_error		528464	0					
ANR	528554	Identifier	param_signal_error		528464	0					
ANR	528555	ArgumentList	plist		528464	1					
ANR	528556	Argument	plist		528464	0					
ANR	528557	Identifier	plist		528464	0					
ANR	528558	Argument	pname		528464	1					
ANR	528559	Identifier	pname		528464	0					
ANR	528560	Argument	code		528464	2					
ANR	528561	Identifier	code		528464	0					
ANR	528562	Label	case 1 :	2260:8:90104:90110	528464	8	True				
ANR	528563	ExpressionStatement		2261:12:90124:90124	528464	9	True				
ANR	528564	ReturnStatement	return code ;	2263:4:90136:90147	528464	3	True				
ANR	528565	Identifier	code		528464	0					
ANR	528566	ReturnType	static int		528464	1					
ANR	528567	Identifier	param_check_bytes		528464	2					
ANR	528568	ParameterList	"gs_param_list * plist , gs_param_name pname , const byte * str , uint size , bool is_defined"		528464	3					
ANR	528569	Parameter	gs_param_list * plist	2241:18:89436:89456	528464	0	True				
ANR	528570	ParameterType	gs_param_list *		528464	0					
ANR	528571	Identifier	plist		528464	1					
ANR	528572	Parameter	gs_param_name pname	2241:41:89459:89477	528464	1	True				
ANR	528573	ParameterType	gs_param_name		528464	0					
ANR	528574	Identifier	pname		528464	1					
ANR	528575	Parameter	const byte * str	2241:62:89480:89495	528464	2	True				
ANR	528576	ParameterType	const byte *		528464	0					
ANR	528577	Identifier	str		528464	1					
ANR	528578	Parameter	uint size	2242:18:89516:89524	528464	3	True				
ANR	528579	ParameterType	uint		528464	0					
ANR	528580	Identifier	size		528464	1					
ANR	528581	Parameter	bool is_defined	2242:29:89527:89541	528464	4	True				
ANR	528582	ParameterType	bool		528464	0					
ANR	528583	Identifier	is_defined		528464	1					
ANR	528584	CFGEntryNode	ENTRY		528464		True				
ANR	528585	CFGExitNode	EXIT		528464		True				
ANR	528586	Symbol	code		528464						
ANR	528587	Symbol	gs_error_rangecheck		528464						
ANR	528588	Symbol	pname		528464						
ANR	528589	Symbol	param_read_string		528464						
ANR	528590	Symbol	param_read_null		528464						
ANR	528591	Symbol	str		528464						
ANR	528592	Symbol	is_defined		528464						
ANR	528593	Symbol	plist		528464						
ANR	528594	Symbol	gs_note_error		528464						
ANR	528595	Symbol	memcmp		528464						
ANR	528596	Symbol	size		528464						
ANR	528597	Symbol	& new_value		528464						
ANR	528598	Symbol	new_value . size		528464						
ANR	528599	Symbol	new_value . data		528464						
ANR	528600	Symbol	new_value		528464						
