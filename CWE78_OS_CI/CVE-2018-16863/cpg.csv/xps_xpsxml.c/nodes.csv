command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10870143	File	data/converged/CVE-2018-16863_ghostpdl/xps_xpsxml.c								
ANR	10870144	DeclStmt									
ANR	10870145	Decl							struct xps_parser_s	struct xps_parser_s	xps_parser_t
ANR	10870146	ClassDef	xps_parser_s	30:0:935:1092							
ANR	10870147	DeclStmt									
ANR	10870148	Decl							xps_context_t	xps_context_t *	ctx
ANR	10870149	DeclStmt									
ANR	10870150	Decl							xps_item_t	xps_item_t *	root
ANR	10870151	DeclStmt									
ANR	10870152	Decl							xps_item_t	xps_item_t *	head
ANR	10870153	DeclStmt									
ANR	10870154	Decl							const char	const char *	error
ANR	10870155	DeclStmt									
ANR	10870156	Decl							char	char *	base
ANR	10870157	ClassDef	xps_item_s	39:0:1096:1235							
ANR	10870158	DeclStmt									
ANR	10870159	Decl							char	char *	name
ANR	10870160	DeclStmt									
ANR	10870161	Decl							char	char * *	atts
ANR	10870162	DeclStmt									
ANR	10870163	Decl							xps_item_t	xps_item_t *	up
ANR	10870164	DeclStmt									
ANR	10870165	Decl							xps_item_t	xps_item_t *	down
ANR	10870166	DeclStmt									
ANR	10870167	Decl							xps_item_t	xps_item_t *	tail
ANR	10870168	DeclStmt									
ANR	10870169	Decl							xps_item_t	xps_item_t *	next
ANR	10870170	Function	skip_namespace	49:0:1239:1374							
ANR	10870171	FunctionDef	skip_namespace (const char * s)		10870170	0					
ANR	10870172	CompoundStatement		51:0:1289:1374	10870170	0					
ANR	10870173	IdentifierDeclStatement	"const char * p = strchr ( s , ' ' ) ;"	52:4:1295:1325	10870170	0	True				
ANR	10870174	IdentifierDecl	"* p = strchr ( s , ' ' )"		10870170	0					
ANR	10870175	IdentifierDeclType	const char *		10870170	0					
ANR	10870176	Identifier	p		10870170	1					
ANR	10870177	AssignmentExpression	"* p = strchr ( s , ' ' )"		10870170	2		=			
ANR	10870178	Identifier	p		10870170	0					
ANR	10870179	CallExpression	"strchr ( s , ' ' )"		10870170	1					
ANR	10870180	Callee	strchr		10870170	0					
ANR	10870181	Identifier	strchr		10870170	0					
ANR	10870182	ArgumentList	s		10870170	1					
ANR	10870183	Argument	s		10870170	0					
ANR	10870184	Identifier	s		10870170	0					
ANR	10870185	Argument	' '		10870170	1					
ANR	10870186	PrimaryExpression	' '		10870170	0					
ANR	10870187	IfStatement	if ( p )		10870170	1					
ANR	10870188	Condition	p	53:8:1335:1335	10870170	0	True				
ANR	10870189	Identifier	p		10870170	0					
ANR	10870190	ReturnStatement	return p + 1 ;	54:8:1346:1358	10870170	1	True				
ANR	10870191	AdditiveExpression	p + 1		10870170	0		+			
ANR	10870192	Identifier	p		10870170	0					
ANR	10870193	PrimaryExpression	1		10870170	1					
ANR	10870194	ReturnStatement	return s ;	55:4:1364:1372	10870170	2	True				
ANR	10870195	Identifier	s		10870170	0					
ANR	10870196	ReturnType	static const char *		10870170	1					
ANR	10870197	Identifier	skip_namespace		10870170	2					
ANR	10870198	ParameterList	const char * s		10870170	3					
ANR	10870199	Parameter	const char * s	50:15:1274:1286	10870170	0	True				
ANR	10870200	ParameterType	const char *		10870170	0					
ANR	10870201	Identifier	s		10870170	1					
ANR	10870202	CFGEntryNode	ENTRY		10870170		True				
ANR	10870203	CFGExitNode	EXIT		10870170		True				
ANR	10870204	Symbol	p		10870170						
ANR	10870205	Symbol	s		10870170						
ANR	10870206	Symbol	strchr		10870170						
ANR	10870207	Function	on_open_tag	58:0:1377:3800							
ANR	10870208	FunctionDef	"on_open_tag (void * zp , const char * ns_name , const char * * atts)"		10870207	0					
ANR	10870209	CompoundStatement		60:0:1451:3800	10870207	0					
ANR	10870210	IdentifierDeclStatement	xps_parser_t * parser = zp ;	61:4:1457:1482	10870207	0	True				
ANR	10870211	IdentifierDecl	* parser = zp		10870207	0					
ANR	10870212	IdentifierDeclType	xps_parser_t *		10870207	0					
ANR	10870213	Identifier	parser		10870207	1					
ANR	10870214	AssignmentExpression	* parser = zp		10870207	2		=			
ANR	10870215	Identifier	zp		10870207	0					
ANR	10870216	Identifier	zp		10870207	1					
ANR	10870217	IdentifierDeclStatement	xps_context_t * ctx = parser -> ctx ;	62:4:1488:1520	10870207	1	True				
ANR	10870218	IdentifierDecl	* ctx = parser -> ctx		10870207	0					
ANR	10870219	IdentifierDeclType	xps_context_t *		10870207	0					
ANR	10870220	Identifier	ctx		10870207	1					
ANR	10870221	AssignmentExpression	* ctx = parser -> ctx		10870207	2		=			
ANR	10870222	Identifier	ctx		10870207	0					
ANR	10870223	PtrMemberAccess	parser -> ctx		10870207	1					
ANR	10870224	Identifier	parser		10870207	0					
ANR	10870225	Identifier	ctx		10870207	1					
ANR	10870226	IdentifierDeclStatement	xps_item_t * item ;	63:4:1526:1542	10870207	2	True				
ANR	10870227	IdentifierDecl	* item		10870207	0					
ANR	10870228	IdentifierDeclType	xps_item_t *		10870207	0					
ANR	10870229	Identifier	item		10870207	1					
ANR	10870230	IdentifierDeclStatement	xps_item_t * tail ;	64:4:1548:1564	10870207	3	True				
ANR	10870231	IdentifierDecl	* tail		10870207	0					
ANR	10870232	IdentifierDeclType	xps_item_t *		10870207	0					
ANR	10870233	Identifier	tail		10870207	1					
ANR	10870234	IdentifierDeclStatement	int namelen ;	65:4:1570:1581	10870207	4	True				
ANR	10870235	IdentifierDecl	namelen		10870207	0					
ANR	10870236	IdentifierDeclType	int		10870207	0					
ANR	10870237	Identifier	namelen		10870207	1					
ANR	10870238	IdentifierDeclStatement	int attslen ;	66:4:1587:1598	10870207	5	True				
ANR	10870239	IdentifierDecl	attslen		10870207	0					
ANR	10870240	IdentifierDeclType	int		10870207	0					
ANR	10870241	Identifier	attslen		10870207	1					
ANR	10870242	IdentifierDeclStatement	int textlen ;	67:4:1604:1615	10870207	6	True				
ANR	10870243	IdentifierDecl	textlen		10870207	0					
ANR	10870244	IdentifierDeclType	int		10870207	0					
ANR	10870245	Identifier	textlen		10870207	1					
ANR	10870246	IdentifierDeclStatement	const char * name ;	68:4:1621:1637	10870207	7	True				
ANR	10870247	IdentifierDecl	* name		10870207	0					
ANR	10870248	IdentifierDeclType	const char *		10870207	0					
ANR	10870249	Identifier	name		10870207	1					
ANR	10870250	IdentifierDeclStatement	char * p ;	69:4:1643:1650	10870207	8	True				
ANR	10870251	IdentifierDecl	* p		10870207	0					
ANR	10870252	IdentifierDeclType	char *		10870207	0					
ANR	10870253	Identifier	p		10870207	1					
ANR	10870254	IdentifierDeclStatement	int i ;	70:4:1656:1661	10870207	9	True				
ANR	10870255	IdentifierDecl	i		10870207	0					
ANR	10870256	IdentifierDeclType	int		10870207	0					
ANR	10870257	Identifier	i		10870207	1					
ANR	10870258	IfStatement	if ( parser -> error )		10870207	10					
ANR	10870259	Condition	parser -> error	72:8:1672:1684	10870207	0	True				
ANR	10870260	PtrMemberAccess	parser -> error		10870207	0					
ANR	10870261	Identifier	parser		10870207	0					
ANR	10870262	Identifier	error		10870207	1					
ANR	10870263	ReturnStatement	return ;	73:8:1695:1701	10870207	1	True				
ANR	10870264	ExpressionStatement	name = NULL	77:4:1735:1746	10870207	11	True				
ANR	10870265	AssignmentExpression	name = NULL		10870207	0		=			
ANR	10870266	Identifier	name		10870207	0					
ANR	10870267	Identifier	NULL		10870207	1					
ANR	10870268	ExpressionStatement	"p = strstr ( ns_name , NS_XPS )"	79:4:1753:1780	10870207	12	True				
ANR	10870269	AssignmentExpression	"p = strstr ( ns_name , NS_XPS )"		10870207	0		=			
ANR	10870270	Identifier	p		10870207	0					
ANR	10870271	CallExpression	"strstr ( ns_name , NS_XPS )"		10870207	1					
ANR	10870272	Callee	strstr		10870207	0					
ANR	10870273	Identifier	strstr		10870207	0					
ANR	10870274	ArgumentList	ns_name		10870207	1					
ANR	10870275	Argument	ns_name		10870207	0					
ANR	10870276	Identifier	ns_name		10870207	0					
ANR	10870277	Argument	NS_XPS		10870207	1					
ANR	10870278	Identifier	NS_XPS		10870207	0					
ANR	10870279	IfStatement	if ( p == ns_name )		10870207	13					
ANR	10870280	Condition	p == ns_name	80:8:1790:1801	10870207	0	True				
ANR	10870281	EqualityExpression	p == ns_name		10870207	0		==			
ANR	10870282	Identifier	p		10870207	0					
ANR	10870283	Identifier	ns_name		10870207	1					
ANR	10870284	CompoundStatement		22:4:356:356	10870207	1					
ANR	10870285	ExpressionStatement	"name = strchr ( ns_name , ' ' ) + 1"	82:8:1818:1849	10870207	0	True				
ANR	10870286	AssignmentExpression	"name = strchr ( ns_name , ' ' ) + 1"		10870207	0		=			
ANR	10870287	Identifier	name		10870207	0					
ANR	10870288	AdditiveExpression	"strchr ( ns_name , ' ' ) + 1"		10870207	1		+			
ANR	10870289	CallExpression	"strchr ( ns_name , ' ' )"		10870207	0					
ANR	10870290	Callee	strchr		10870207	0					
ANR	10870291	Identifier	strchr		10870207	0					
ANR	10870292	ArgumentList	ns_name		10870207	1					
ANR	10870293	Argument	ns_name		10870207	0					
ANR	10870294	Identifier	ns_name		10870207	0					
ANR	10870295	Argument	' '		10870207	1					
ANR	10870296	PrimaryExpression	' '		10870207	0					
ANR	10870297	PrimaryExpression	1		10870207	1					
ANR	10870298	ExpressionStatement	"p = strstr ( ns_name , NS_MC )"	85:4:1862:1888	10870207	14	True				
ANR	10870299	AssignmentExpression	"p = strstr ( ns_name , NS_MC )"		10870207	0		=			
ANR	10870300	Identifier	p		10870207	0					
ANR	10870301	CallExpression	"strstr ( ns_name , NS_MC )"		10870207	1					
ANR	10870302	Callee	strstr		10870207	0					
ANR	10870303	Identifier	strstr		10870207	0					
ANR	10870304	ArgumentList	ns_name		10870207	1					
ANR	10870305	Argument	ns_name		10870207	0					
ANR	10870306	Identifier	ns_name		10870207	0					
ANR	10870307	Argument	NS_MC		10870207	1					
ANR	10870308	Identifier	NS_MC		10870207	0					
ANR	10870309	IfStatement	if ( p == ns_name )		10870207	15					
ANR	10870310	Condition	p == ns_name	86:8:1898:1909	10870207	0	True				
ANR	10870311	EqualityExpression	p == ns_name		10870207	0		==			
ANR	10870312	Identifier	p		10870207	0					
ANR	10870313	Identifier	ns_name		10870207	1					
ANR	10870314	CompoundStatement		28:4:464:464	10870207	1					
ANR	10870315	ExpressionStatement	"name = strchr ( ns_name , ' ' ) + 1"	88:8:1926:1957	10870207	0	True				
ANR	10870316	AssignmentExpression	"name = strchr ( ns_name , ' ' ) + 1"		10870207	0		=			
ANR	10870317	Identifier	name		10870207	0					
ANR	10870318	AdditiveExpression	"strchr ( ns_name , ' ' ) + 1"		10870207	1		+			
ANR	10870319	CallExpression	"strchr ( ns_name , ' ' )"		10870207	0					
ANR	10870320	Callee	strchr		10870207	0					
ANR	10870321	Identifier	strchr		10870207	0					
ANR	10870322	ArgumentList	ns_name		10870207	1					
ANR	10870323	Argument	ns_name		10870207	0					
ANR	10870324	Identifier	ns_name		10870207	0					
ANR	10870325	Argument	' '		10870207	1					
ANR	10870326	PrimaryExpression	' '		10870207	0					
ANR	10870327	PrimaryExpression	1		10870207	1					
ANR	10870328	ExpressionStatement	"p = strstr ( ns_name , NS_OXPS )"	91:4:1970:1998	10870207	16	True				
ANR	10870329	AssignmentExpression	"p = strstr ( ns_name , NS_OXPS )"		10870207	0		=			
ANR	10870330	Identifier	p		10870207	0					
ANR	10870331	CallExpression	"strstr ( ns_name , NS_OXPS )"		10870207	1					
ANR	10870332	Callee	strstr		10870207	0					
ANR	10870333	Identifier	strstr		10870207	0					
ANR	10870334	ArgumentList	ns_name		10870207	1					
ANR	10870335	Argument	ns_name		10870207	0					
ANR	10870336	Identifier	ns_name		10870207	0					
ANR	10870337	Argument	NS_OXPS		10870207	1					
ANR	10870338	Identifier	NS_OXPS		10870207	0					
ANR	10870339	IfStatement	if ( p == ns_name )		10870207	17					
ANR	10870340	Condition	p == ns_name	92:8:2008:2019	10870207	0	True				
ANR	10870341	EqualityExpression	p == ns_name		10870207	0		==			
ANR	10870342	Identifier	p		10870207	0					
ANR	10870343	Identifier	ns_name		10870207	1					
ANR	10870344	CompoundStatement		34:4:574:574	10870207	1					
ANR	10870345	ExpressionStatement	"name = strchr ( ns_name , ' ' ) + 1"	94:8:2036:2067	10870207	0	True				
ANR	10870346	AssignmentExpression	"name = strchr ( ns_name , ' ' ) + 1"		10870207	0		=			
ANR	10870347	Identifier	name		10870207	0					
ANR	10870348	AdditiveExpression	"strchr ( ns_name , ' ' ) + 1"		10870207	1		+			
ANR	10870349	CallExpression	"strchr ( ns_name , ' ' )"		10870207	0					
ANR	10870350	Callee	strchr		10870207	0					
ANR	10870351	Identifier	strchr		10870207	0					
ANR	10870352	ArgumentList	ns_name		10870207	1					
ANR	10870353	Argument	ns_name		10870207	0					
ANR	10870354	Identifier	ns_name		10870207	0					
ANR	10870355	Argument	' '		10870207	1					
ANR	10870356	PrimaryExpression	' '		10870207	0					
ANR	10870357	PrimaryExpression	1		10870207	1					
ANR	10870358	IfStatement	if ( ! name )		10870207	18					
ANR	10870359	Condition	! name	97:8:2084:2088	10870207	0	True				
ANR	10870360	UnaryOperationExpression	! name		10870207	0					
ANR	10870361	UnaryOperator	!		10870207	0					
ANR	10870362	Identifier	name		10870207	1					
ANR	10870363	CompoundStatement		39:4:643:643	10870207	1					
ANR	10870364	ExpressionStatement	"dmprintf1 ( ctx -> memory , ""unknown namespace: %s\\n"" , ns_name )"	99:8:2105:2163	10870207	0	True				
ANR	10870365	CallExpression	"dmprintf1 ( ctx -> memory , ""unknown namespace: %s\\n"" , ns_name )"		10870207	0					
ANR	10870366	Callee	dmprintf1		10870207	0					
ANR	10870367	Identifier	dmprintf1		10870207	0					
ANR	10870368	ArgumentList	ctx -> memory		10870207	1					
ANR	10870369	Argument	ctx -> memory		10870207	0					
ANR	10870370	PtrMemberAccess	ctx -> memory		10870207	0					
ANR	10870371	Identifier	ctx		10870207	0					
ANR	10870372	Identifier	memory		10870207	1					
ANR	10870373	Argument	"""unknown namespace: %s\\n"""		10870207	1					
ANR	10870374	PrimaryExpression	"""unknown namespace: %s\\n"""		10870207	0					
ANR	10870375	Argument	ns_name		10870207	2					
ANR	10870376	Identifier	ns_name		10870207	0					
ANR	10870377	ExpressionStatement	name = ns_name	100:8:2173:2187	10870207	1	True				
ANR	10870378	AssignmentExpression	name = ns_name		10870207	0		=			
ANR	10870379	Identifier	name		10870207	0					
ANR	10870380	Identifier	ns_name		10870207	1					
ANR	10870381	ExpressionStatement	namelen = strlen ( name ) + 1	105:4:2231:2257	10870207	19	True				
ANR	10870382	AssignmentExpression	namelen = strlen ( name ) + 1		10870207	0		=			
ANR	10870383	Identifier	namelen		10870207	0					
ANR	10870384	AdditiveExpression	strlen ( name ) + 1		10870207	1		+			
ANR	10870385	CallExpression	strlen ( name )		10870207	0					
ANR	10870386	Callee	strlen		10870207	0					
ANR	10870387	Identifier	strlen		10870207	0					
ANR	10870388	ArgumentList	name		10870207	1					
ANR	10870389	Argument	name		10870207	0					
ANR	10870390	Identifier	name		10870207	0					
ANR	10870391	PrimaryExpression	1		10870207	1					
ANR	10870392	ExpressionStatement	attslen = sizeof ( char * )	106:4:2285:2308	10870207	20	True				
ANR	10870393	AssignmentExpression	attslen = sizeof ( char * )		10870207	0		=			
ANR	10870394	Identifier	attslen		10870207	0					
ANR	10870395	SizeofExpression	sizeof ( char * )		10870207	1					
ANR	10870396	Sizeof	sizeof		10870207	0					
ANR	10870397	SizeofOperand	char *		10870207	1					
ANR	10870398	ExpressionStatement	textlen = 0	107:4:2344:2355	10870207	21	True				
ANR	10870399	AssignmentExpression	textlen = 0		10870207	0		=			
ANR	10870400	Identifier	textlen		10870207	0					
ANR	10870401	PrimaryExpression	0		10870207	1					
ANR	10870402	ForStatement	for ( i = 0 ; atts [ i ] ; i ++ )		10870207	22					
ANR	10870403	ForInit	i = 0 ;	108:9:2366:2371	10870207	0	True				
ANR	10870404	AssignmentExpression	i = 0		10870207	0		=			
ANR	10870405	Identifier	i		10870207	0					
ANR	10870406	PrimaryExpression	0		10870207	1					
ANR	10870407	Condition	atts [ i ]	108:16:2373:2379	10870207	1	True				
ANR	10870408	ArrayIndexing	atts [ i ]		10870207	0					
ANR	10870409	Identifier	atts		10870207	0					
ANR	10870410	Identifier	i		10870207	1					
ANR	10870411	PostIncDecOperationExpression	i ++	108:25:2382:2384	10870207	2	True				
ANR	10870412	Identifier	i		10870207	0					
ANR	10870413	IncDec	++		10870207	1					
ANR	10870414	CompoundStatement		50:4:939:939	10870207	3					
ANR	10870415	ExpressionStatement	attslen += sizeof ( char * )	110:8:2401:2425	10870207	0	True				
ANR	10870416	AssignmentExpression	attslen += sizeof ( char * )		10870207	0		+=			
ANR	10870417	Identifier	attslen		10870207	0					
ANR	10870418	SizeofExpression	sizeof ( char * )		10870207	1					
ANR	10870419	Sizeof	sizeof		10870207	0					
ANR	10870420	SizeofOperand	char *		10870207	1					
ANR	10870421	IfStatement	if ( ( i & 1 ) == 0 )		10870207	1					
ANR	10870422	Condition	( i & 1 ) == 0	111:12:2439:2450	10870207	0	True				
ANR	10870423	EqualityExpression	( i & 1 ) == 0		10870207	0		==			
ANR	10870424	BitAndExpression	i & 1		10870207	0		&			
ANR	10870425	Identifier	i		10870207	0					
ANR	10870426	PrimaryExpression	1		10870207	1					
ANR	10870427	PrimaryExpression	0		10870207	1					
ANR	10870428	ExpressionStatement	textlen += strlen ( skip_namespace ( atts [ i ] ) ) + 1	112:12:2465:2511	10870207	1	True				
ANR	10870429	AssignmentExpression	textlen += strlen ( skip_namespace ( atts [ i ] ) ) + 1		10870207	0		+=			
ANR	10870430	Identifier	textlen		10870207	0					
ANR	10870431	AdditiveExpression	strlen ( skip_namespace ( atts [ i ] ) ) + 1		10870207	1		+			
ANR	10870432	CallExpression	strlen ( skip_namespace ( atts [ i ] ) )		10870207	0					
ANR	10870433	Callee	strlen		10870207	0					
ANR	10870434	Identifier	strlen		10870207	0					
ANR	10870435	ArgumentList	skip_namespace ( atts [ i ] )		10870207	1					
ANR	10870436	Argument	skip_namespace ( atts [ i ] )		10870207	0					
ANR	10870437	CallExpression	skip_namespace ( atts [ i ] )		10870207	0					
ANR	10870438	Callee	skip_namespace		10870207	0					
ANR	10870439	Identifier	skip_namespace		10870207	0					
ANR	10870440	ArgumentList	atts [ i ]		10870207	1					
ANR	10870441	Argument	atts [ i ]		10870207	0					
ANR	10870442	ArrayIndexing	atts [ i ]		10870207	0					
ANR	10870443	Identifier	atts		10870207	0					
ANR	10870444	Identifier	i		10870207	1					
ANR	10870445	PrimaryExpression	1		10870207	1					
ANR	10870446	ElseStatement	else		10870207	0					
ANR	10870447	ExpressionStatement	textlen += strlen ( atts [ i ] ) + 1	114:12:2538:2568	10870207	0	True				
ANR	10870448	AssignmentExpression	textlen += strlen ( atts [ i ] ) + 1		10870207	0		+=			
ANR	10870449	Identifier	textlen		10870207	0					
ANR	10870450	AdditiveExpression	strlen ( atts [ i ] ) + 1		10870207	1		+			
ANR	10870451	CallExpression	strlen ( atts [ i ] )		10870207	0					
ANR	10870452	Callee	strlen		10870207	0					
ANR	10870453	Identifier	strlen		10870207	0					
ANR	10870454	ArgumentList	atts [ i ]		10870207	1					
ANR	10870455	Argument	atts [ i ]		10870207	0					
ANR	10870456	ArrayIndexing	atts [ i ]		10870207	0					
ANR	10870457	Identifier	atts		10870207	0					
ANR	10870458	Identifier	i		10870207	1					
ANR	10870459	PrimaryExpression	1		10870207	1					
ANR	10870460	ExpressionStatement	"item = xps_alloc ( ctx , sizeof ( xps_item_t ) + attslen + namelen + textlen )"	117:4:2581:2652	10870207	23	True				
ANR	10870461	AssignmentExpression	"item = xps_alloc ( ctx , sizeof ( xps_item_t ) + attslen + namelen + textlen )"		10870207	0		=			
ANR	10870462	Identifier	item		10870207	0					
ANR	10870463	CallExpression	"xps_alloc ( ctx , sizeof ( xps_item_t ) + attslen + namelen + textlen )"		10870207	1					
ANR	10870464	Callee	xps_alloc		10870207	0					
ANR	10870465	Identifier	xps_alloc		10870207	0					
ANR	10870466	ArgumentList	ctx		10870207	1					
ANR	10870467	Argument	ctx		10870207	0					
ANR	10870468	Identifier	ctx		10870207	0					
ANR	10870469	Argument	sizeof ( xps_item_t ) + attslen + namelen + textlen		10870207	1					
ANR	10870470	AdditiveExpression	sizeof ( xps_item_t ) + attslen + namelen + textlen		10870207	0		+			
ANR	10870471	SizeofExpression	sizeof ( xps_item_t )		10870207	0					
ANR	10870472	Sizeof	sizeof		10870207	0					
ANR	10870473	SizeofOperand	xps_item_t		10870207	1					
ANR	10870474	AdditiveExpression	attslen + namelen + textlen		10870207	1		+			
ANR	10870475	Identifier	attslen		10870207	0					
ANR	10870476	AdditiveExpression	namelen + textlen		10870207	1		+			
ANR	10870477	Identifier	namelen		10870207	0					
ANR	10870478	Identifier	textlen		10870207	1					
ANR	10870479	IfStatement	if ( ! item )		10870207	24					
ANR	10870480	Condition	! item	118:8:2662:2666	10870207	0	True				
ANR	10870481	UnaryOperationExpression	! item		10870207	0					
ANR	10870482	UnaryOperator	!		10870207	0					
ANR	10870483	Identifier	item		10870207	1					
ANR	10870484	CompoundStatement		59:15:1217:1217	10870207	1					
ANR	10870485	ExpressionStatement	"parser -> error = ""out of memory"""	119:8:2679:2710	10870207	0	True				
ANR	10870486	AssignmentExpression	"parser -> error = ""out of memory"""		10870207	0		=			
ANR	10870487	PtrMemberAccess	parser -> error		10870207	0					
ANR	10870488	Identifier	parser		10870207	0					
ANR	10870489	Identifier	error		10870207	1					
ANR	10870490	PrimaryExpression	"""out of memory"""		10870207	1					
ANR	10870491	ExpressionStatement	"gs_throw ( gs_error_VMerror , ""out of memory.\\n"" )"	120:8:2720:2766	10870207	1	True				
ANR	10870492	CallExpression	"gs_throw ( gs_error_VMerror , ""out of memory.\\n"" )"		10870207	0					
ANR	10870493	Callee	gs_throw		10870207	0					
ANR	10870494	Identifier	gs_throw		10870207	0					
ANR	10870495	ArgumentList	gs_error_VMerror		10870207	1					
ANR	10870496	Argument	gs_error_VMerror		10870207	0					
ANR	10870497	Identifier	gs_error_VMerror		10870207	0					
ANR	10870498	Argument	"""out of memory.\\n"""		10870207	1					
ANR	10870499	PrimaryExpression	"""out of memory.\\n"""		10870207	0					
ANR	10870500	ReturnStatement	return ;	121:8:2776:2782	10870207	2	True				
ANR	10870501	ExpressionStatement	item -> atts = ( char * * ) ( ( ( char * ) item ) + sizeof ( xps_item_t ) )	126:4:2833:2891	10870207	25	True				
ANR	10870502	AssignmentExpression	item -> atts = ( char * * ) ( ( ( char * ) item ) + sizeof ( xps_item_t ) )		10870207	0		=			
ANR	10870503	PtrMemberAccess	item -> atts		10870207	0					
ANR	10870504	Identifier	item		10870207	0					
ANR	10870505	Identifier	atts		10870207	1					
ANR	10870506	CastExpression	( char * * ) ( ( ( char * ) item ) + sizeof ( xps_item_t ) )		10870207	1					
ANR	10870507	CastTarget	char * *		10870207	0					
ANR	10870508	AdditiveExpression	( ( char * ) item ) + sizeof ( xps_item_t )		10870207	1		+			
ANR	10870509	CastExpression	( char * ) item		10870207	0					
ANR	10870510	CastTarget	char *		10870207	0					
ANR	10870511	Identifier	item		10870207	1					
ANR	10870512	SizeofExpression	sizeof ( xps_item_t )		10870207	1					
ANR	10870513	Sizeof	sizeof		10870207	0					
ANR	10870514	SizeofOperand	xps_item_t		10870207	1					
ANR	10870515	ExpressionStatement	item -> name = ( ( char * ) item ) + sizeof ( xps_item_t ) + attslen	127:4:2897:2954	10870207	26	True				
ANR	10870516	AssignmentExpression	item -> name = ( ( char * ) item ) + sizeof ( xps_item_t ) + attslen		10870207	0		=			
ANR	10870517	PtrMemberAccess	item -> name		10870207	0					
ANR	10870518	Identifier	item		10870207	0					
ANR	10870519	Identifier	name		10870207	1					
ANR	10870520	AdditiveExpression	( ( char * ) item ) + sizeof ( xps_item_t ) + attslen		10870207	1		+			
ANR	10870521	CastExpression	( char * ) item		10870207	0					
ANR	10870522	CastTarget	char *		10870207	0					
ANR	10870523	Identifier	item		10870207	1					
ANR	10870524	AdditiveExpression	sizeof ( xps_item_t ) + attslen		10870207	1		+			
ANR	10870525	SizeofExpression	sizeof ( xps_item_t )		10870207	0					
ANR	10870526	Sizeof	sizeof		10870207	0					
ANR	10870527	SizeofOperand	xps_item_t		10870207	1					
ANR	10870528	Identifier	attslen		10870207	1					
ANR	10870529	ExpressionStatement	p = ( ( char * ) item ) + sizeof ( xps_item_t ) + attslen + namelen	128:4:2960:3018	10870207	27	True				
ANR	10870530	AssignmentExpression	p = ( ( char * ) item ) + sizeof ( xps_item_t ) + attslen + namelen		10870207	0		=			
ANR	10870531	Identifier	p		10870207	0					
ANR	10870532	AdditiveExpression	( ( char * ) item ) + sizeof ( xps_item_t ) + attslen + namelen		10870207	1		+			
ANR	10870533	CastExpression	( char * ) item		10870207	0					
ANR	10870534	CastTarget	char *		10870207	0					
ANR	10870535	Identifier	item		10870207	1					
ANR	10870536	AdditiveExpression	sizeof ( xps_item_t ) + attslen + namelen		10870207	1		+			
ANR	10870537	SizeofExpression	sizeof ( xps_item_t )		10870207	0					
ANR	10870538	Sizeof	sizeof		10870207	0					
ANR	10870539	SizeofOperand	xps_item_t		10870207	1					
ANR	10870540	AdditiveExpression	attslen + namelen		10870207	1		+			
ANR	10870541	Identifier	attslen		10870207	0					
ANR	10870542	Identifier	namelen		10870207	1					
ANR	10870543	ExpressionStatement	"strcpy ( item -> name , name )"	130:4:3025:3049	10870207	28	True				
ANR	10870544	CallExpression	"strcpy ( item -> name , name )"		10870207	0					
ANR	10870545	Callee	strcpy		10870207	0					
ANR	10870546	Identifier	strcpy		10870207	0					
ANR	10870547	ArgumentList	item -> name		10870207	1					
ANR	10870548	Argument	item -> name		10870207	0					
ANR	10870549	PtrMemberAccess	item -> name		10870207	0					
ANR	10870550	Identifier	item		10870207	0					
ANR	10870551	Identifier	name		10870207	1					
ANR	10870552	Argument	name		10870207	1					
ANR	10870553	Identifier	name		10870207	0					
ANR	10870554	ForStatement	for ( i = 0 ; atts [ i ] ; i ++ )		10870207	29					
ANR	10870555	ForInit	i = 0 ;	131:9:3060:3065	10870207	0	True				
ANR	10870556	AssignmentExpression	i = 0		10870207	0		=			
ANR	10870557	Identifier	i		10870207	0					
ANR	10870558	PrimaryExpression	0		10870207	1					
ANR	10870559	Condition	atts [ i ]	131:16:3067:3073	10870207	1	True				
ANR	10870560	ArrayIndexing	atts [ i ]		10870207	0					
ANR	10870561	Identifier	atts		10870207	0					
ANR	10870562	Identifier	i		10870207	1					
ANR	10870563	PostIncDecOperationExpression	i ++	131:25:3076:3078	10870207	2	True				
ANR	10870564	Identifier	i		10870207	0					
ANR	10870565	IncDec	++		10870207	1					
ANR	10870566	CompoundStatement		73:4:1633:1633	10870207	3					
ANR	10870567	ExpressionStatement	item -> atts [ i ] = p	133:8:3095:3112	10870207	0	True				
ANR	10870568	AssignmentExpression	item -> atts [ i ] = p		10870207	0		=			
ANR	10870569	ArrayIndexing	item -> atts [ i ]		10870207	0					
ANR	10870570	PtrMemberAccess	item -> atts		10870207	0					
ANR	10870571	Identifier	item		10870207	0					
ANR	10870572	Identifier	atts		10870207	1					
ANR	10870573	Identifier	i		10870207	1					
ANR	10870574	Identifier	p		10870207	1					
ANR	10870575	IfStatement	if ( ( i & 1 ) == 0 )		10870207	1					
ANR	10870576	Condition	( i & 1 ) == 0	134:12:3126:3137	10870207	0	True				
ANR	10870577	EqualityExpression	( i & 1 ) == 0		10870207	0		==			
ANR	10870578	BitAndExpression	i & 1		10870207	0		&			
ANR	10870579	Identifier	i		10870207	0					
ANR	10870580	PrimaryExpression	1		10870207	1					
ANR	10870581	PrimaryExpression	0		10870207	1					
ANR	10870582	ExpressionStatement	"strcpy ( item -> atts [ i ] , skip_namespace ( atts [ i ] ) )"	135:12:3152:3198	10870207	1	True				
ANR	10870583	CallExpression	"strcpy ( item -> atts [ i ] , skip_namespace ( atts [ i ] ) )"		10870207	0					
ANR	10870584	Callee	strcpy		10870207	0					
ANR	10870585	Identifier	strcpy		10870207	0					
ANR	10870586	ArgumentList	item -> atts [ i ]		10870207	1					
ANR	10870587	Argument	item -> atts [ i ]		10870207	0					
ANR	10870588	ArrayIndexing	item -> atts [ i ]		10870207	0					
ANR	10870589	PtrMemberAccess	item -> atts		10870207	0					
ANR	10870590	Identifier	item		10870207	0					
ANR	10870591	Identifier	atts		10870207	1					
ANR	10870592	Identifier	i		10870207	1					
ANR	10870593	Argument	skip_namespace ( atts [ i ] )		10870207	1					
ANR	10870594	CallExpression	skip_namespace ( atts [ i ] )		10870207	0					
ANR	10870595	Callee	skip_namespace		10870207	0					
ANR	10870596	Identifier	skip_namespace		10870207	0					
ANR	10870597	ArgumentList	atts [ i ]		10870207	1					
ANR	10870598	Argument	atts [ i ]		10870207	0					
ANR	10870599	ArrayIndexing	atts [ i ]		10870207	0					
ANR	10870600	Identifier	atts		10870207	0					
ANR	10870601	Identifier	i		10870207	1					
ANR	10870602	ElseStatement	else		10870207	0					
ANR	10870603	ExpressionStatement	"strcpy ( item -> atts [ i ] , atts [ i ] )"	137:12:3225:3255	10870207	0	True				
ANR	10870604	CallExpression	"strcpy ( item -> atts [ i ] , atts [ i ] )"		10870207	0					
ANR	10870605	Callee	strcpy		10870207	0					
ANR	10870606	Identifier	strcpy		10870207	0					
ANR	10870607	ArgumentList	item -> atts [ i ]		10870207	1					
ANR	10870608	Argument	item -> atts [ i ]		10870207	0					
ANR	10870609	ArrayIndexing	item -> atts [ i ]		10870207	0					
ANR	10870610	PtrMemberAccess	item -> atts		10870207	0					
ANR	10870611	Identifier	item		10870207	0					
ANR	10870612	Identifier	atts		10870207	1					
ANR	10870613	Identifier	i		10870207	1					
ANR	10870614	Argument	atts [ i ]		10870207	1					
ANR	10870615	ArrayIndexing	atts [ i ]		10870207	0					
ANR	10870616	Identifier	atts		10870207	0					
ANR	10870617	Identifier	i		10870207	1					
ANR	10870618	ExpressionStatement	p += strlen ( p ) + 1	138:8:3265:3283	10870207	2	True				
ANR	10870619	AssignmentExpression	p += strlen ( p ) + 1		10870207	0		+=			
ANR	10870620	Identifier	p		10870207	0					
ANR	10870621	AdditiveExpression	strlen ( p ) + 1		10870207	1		+			
ANR	10870622	CallExpression	strlen ( p )		10870207	0					
ANR	10870623	Callee	strlen		10870207	0					
ANR	10870624	Identifier	strlen		10870207	0					
ANR	10870625	ArgumentList	p		10870207	1					
ANR	10870626	Argument	p		10870207	0					
ANR	10870627	Identifier	p		10870207	0					
ANR	10870628	PrimaryExpression	1		10870207	1					
ANR	10870629	ExpressionStatement	item -> atts [ i ] = 0	141:4:3296:3313	10870207	30	True				
ANR	10870630	AssignmentExpression	item -> atts [ i ] = 0		10870207	0		=			
ANR	10870631	ArrayIndexing	item -> atts [ i ]		10870207	0					
ANR	10870632	PtrMemberAccess	item -> atts		10870207	0					
ANR	10870633	Identifier	item		10870207	0					
ANR	10870634	Identifier	atts		10870207	1					
ANR	10870635	Identifier	i		10870207	1					
ANR	10870636	PrimaryExpression	0		10870207	1					
ANR	10870637	ExpressionStatement	item -> up = parser -> head	145:4:3351:3374	10870207	31	True				
ANR	10870638	AssignmentExpression	item -> up = parser -> head		10870207	0		=			
ANR	10870639	PtrMemberAccess	item -> up		10870207	0					
ANR	10870640	Identifier	item		10870207	0					
ANR	10870641	Identifier	up		10870207	1					
ANR	10870642	PtrMemberAccess	parser -> head		10870207	1					
ANR	10870643	Identifier	parser		10870207	0					
ANR	10870644	Identifier	head		10870207	1					
ANR	10870645	ExpressionStatement	item -> down = NULL	146:4:3380:3397	10870207	32	True				
ANR	10870646	AssignmentExpression	item -> down = NULL		10870207	0		=			
ANR	10870647	PtrMemberAccess	item -> down		10870207	0					
ANR	10870648	Identifier	item		10870207	0					
ANR	10870649	Identifier	down		10870207	1					
ANR	10870650	Identifier	NULL		10870207	1					
ANR	10870651	ExpressionStatement	item -> next = NULL	147:4:3403:3420	10870207	33	True				
ANR	10870652	AssignmentExpression	item -> next = NULL		10870207	0		=			
ANR	10870653	PtrMemberAccess	item -> next		10870207	0					
ANR	10870654	Identifier	item		10870207	0					
ANR	10870655	Identifier	next		10870207	1					
ANR	10870656	Identifier	NULL		10870207	1					
ANR	10870657	IfStatement	if ( ! parser -> head )		10870207	34					
ANR	10870658	Condition	! parser -> head	149:8:3431:3443	10870207	0	True				
ANR	10870659	UnaryOperationExpression	! parser -> head		10870207	0					
ANR	10870660	UnaryOperator	!		10870207	0					
ANR	10870661	PtrMemberAccess	parser -> head		10870207	1					
ANR	10870662	Identifier	parser		10870207	0					
ANR	10870663	Identifier	head		10870207	1					
ANR	10870664	CompoundStatement		91:4:1998:1998	10870207	1					
ANR	10870665	ExpressionStatement	parser -> root = item	151:8:3460:3479	10870207	0	True				
ANR	10870666	AssignmentExpression	parser -> root = item		10870207	0		=			
ANR	10870667	PtrMemberAccess	parser -> root		10870207	0					
ANR	10870668	Identifier	parser		10870207	0					
ANR	10870669	Identifier	root		10870207	1					
ANR	10870670	Identifier	item		10870207	1					
ANR	10870671	ExpressionStatement	parser -> head = item	152:8:3489:3508	10870207	1	True				
ANR	10870672	AssignmentExpression	parser -> head = item		10870207	0		=			
ANR	10870673	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870674	Identifier	parser		10870207	0					
ANR	10870675	Identifier	head		10870207	1					
ANR	10870676	Identifier	item		10870207	1					
ANR	10870677	ReturnStatement	return ;	153:8:3518:3524	10870207	2	True				
ANR	10870678	IfStatement	if ( ! parser -> head -> down )		10870207	35					
ANR	10870679	Condition	! parser -> head -> down	156:8:3541:3559	10870207	0	True				
ANR	10870680	UnaryOperationExpression	! parser -> head -> down		10870207	0					
ANR	10870681	UnaryOperator	!		10870207	0					
ANR	10870682	PtrMemberAccess	parser -> head -> down		10870207	1					
ANR	10870683	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870684	Identifier	parser		10870207	0					
ANR	10870685	Identifier	head		10870207	1					
ANR	10870686	Identifier	down		10870207	1					
ANR	10870687	CompoundStatement		98:4:2114:2114	10870207	1					
ANR	10870688	ExpressionStatement	parser -> head -> down = item	158:8:3576:3601	10870207	0	True				
ANR	10870689	AssignmentExpression	parser -> head -> down = item		10870207	0		=			
ANR	10870690	PtrMemberAccess	parser -> head -> down		10870207	0					
ANR	10870691	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870692	Identifier	parser		10870207	0					
ANR	10870693	Identifier	head		10870207	1					
ANR	10870694	Identifier	down		10870207	1					
ANR	10870695	Identifier	item		10870207	1					
ANR	10870696	ExpressionStatement	parser -> head -> tail = item	159:8:3611:3636	10870207	1	True				
ANR	10870697	AssignmentExpression	parser -> head -> tail = item		10870207	0		=			
ANR	10870698	PtrMemberAccess	parser -> head -> tail		10870207	0					
ANR	10870699	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870700	Identifier	parser		10870207	0					
ANR	10870701	Identifier	head		10870207	1					
ANR	10870702	Identifier	tail		10870207	1					
ANR	10870703	Identifier	item		10870207	1					
ANR	10870704	ExpressionStatement	parser -> head = item	160:8:3646:3665	10870207	2	True				
ANR	10870705	AssignmentExpression	parser -> head = item		10870207	0		=			
ANR	10870706	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870707	Identifier	parser		10870207	0					
ANR	10870708	Identifier	head		10870207	1					
ANR	10870709	Identifier	item		10870207	1					
ANR	10870710	ReturnStatement	return ;	161:8:3675:3681	10870207	3	True				
ANR	10870711	ExpressionStatement	tail = parser -> head -> tail	164:4:3694:3719	10870207	36	True				
ANR	10870712	AssignmentExpression	tail = parser -> head -> tail		10870207	0		=			
ANR	10870713	Identifier	tail		10870207	0					
ANR	10870714	PtrMemberAccess	parser -> head -> tail		10870207	1					
ANR	10870715	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870716	Identifier	parser		10870207	0					
ANR	10870717	Identifier	head		10870207	1					
ANR	10870718	Identifier	tail		10870207	1					
ANR	10870719	ExpressionStatement	tail -> next = item	165:4:3725:3742	10870207	37	True				
ANR	10870720	AssignmentExpression	tail -> next = item		10870207	0		=			
ANR	10870721	PtrMemberAccess	tail -> next		10870207	0					
ANR	10870722	Identifier	tail		10870207	0					
ANR	10870723	Identifier	next		10870207	1					
ANR	10870724	Identifier	item		10870207	1					
ANR	10870725	ExpressionStatement	parser -> head -> tail = item	166:4:3748:3773	10870207	38	True				
ANR	10870726	AssignmentExpression	parser -> head -> tail = item		10870207	0		=			
ANR	10870727	PtrMemberAccess	parser -> head -> tail		10870207	0					
ANR	10870728	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870729	Identifier	parser		10870207	0					
ANR	10870730	Identifier	head		10870207	1					
ANR	10870731	Identifier	tail		10870207	1					
ANR	10870732	Identifier	item		10870207	1					
ANR	10870733	ExpressionStatement	parser -> head = item	167:4:3779:3798	10870207	39	True				
ANR	10870734	AssignmentExpression	parser -> head = item		10870207	0		=			
ANR	10870735	PtrMemberAccess	parser -> head		10870207	0					
ANR	10870736	Identifier	parser		10870207	0					
ANR	10870737	Identifier	head		10870207	1					
ANR	10870738	Identifier	item		10870207	1					
ANR	10870739	ReturnType	static void		10870207	1					
ANR	10870740	Identifier	on_open_tag		10870207	2					
ANR	10870741	ParameterList	"void * zp , const char * ns_name , const char * * atts"		10870207	3					
ANR	10870742	Parameter	void * zp	59:12:1401:1408	10870207	0	True				
ANR	10870743	ParameterType	void *		10870207	0					
ANR	10870744	Identifier	zp		10870207	1					
ANR	10870745	Parameter	const char * ns_name	59:22:1411:1429	10870207	1	True				
ANR	10870746	ParameterType	const char *		10870207	0					
ANR	10870747	Identifier	ns_name		10870207	1					
ANR	10870748	Parameter	const char * * atts	59:43:1432:1448	10870207	2	True				
ANR	10870749	ParameterType	const char * *		10870207	0					
ANR	10870750	Identifier	atts		10870207	1					
ANR	10870751	CFGEntryNode	ENTRY		10870207		True				
ANR	10870752	CFGExitNode	EXIT		10870207		True				
ANR	10870753	Symbol	item -> atts		10870207						
ANR	10870754	Symbol	parser -> head -> down		10870207						
ANR	10870755	Symbol	namelen		10870207						
ANR	10870756	Symbol	strchr		10870207						
ANR	10870757	Symbol	NS_OXPS		10870207						
ANR	10870758	Symbol	item -> next		10870207						
ANR	10870759	Symbol	parser -> ctx		10870207						
ANR	10870760	Symbol	strlen		10870207						
ANR	10870761	Symbol	* item -> atts		10870207						
ANR	10870762	Symbol	item -> down		10870207						
ANR	10870763	Symbol	* item		10870207						
ANR	10870764	Symbol	* parser -> head		10870207						
ANR	10870765	Symbol	parser -> error		10870207						
ANR	10870766	Symbol	xps_alloc		10870207						
ANR	10870767	Symbol	ns_name		10870207						
ANR	10870768	Symbol	atts		10870207						
ANR	10870769	Symbol	item		10870207						
ANR	10870770	Symbol	NS_MC		10870207						
ANR	10870771	Symbol	* tail		10870207						
ANR	10870772	Symbol	NULL		10870207						
ANR	10870773	Symbol	attslen		10870207						
ANR	10870774	Symbol	ctx		10870207						
ANR	10870775	Symbol	tail		10870207						
ANR	10870776	Symbol	* * item		10870207						
ANR	10870777	Symbol	i		10870207						
ANR	10870778	Symbol	parser -> root		10870207						
ANR	10870779	Symbol	item -> up		10870207						
ANR	10870780	Symbol	* ctx		10870207						
ANR	10870781	Symbol	skip_namespace		10870207						
ANR	10870782	Symbol	parser -> head -> tail		10870207						
ANR	10870783	Symbol	p		10870207						
ANR	10870784	Symbol	* parser		10870207						
ANR	10870785	Symbol	ctx -> memory		10870207						
ANR	10870786	Symbol	gs_error_VMerror		10870207						
ANR	10870787	Symbol	* i		10870207						
ANR	10870788	Symbol	parser		10870207						
ANR	10870789	Symbol	* atts		10870207						
ANR	10870790	Symbol	textlen		10870207						
ANR	10870791	Symbol	strstr		10870207						
ANR	10870792	Symbol	* * parser		10870207						
ANR	10870793	Symbol	zp		10870207						
ANR	10870794	Symbol	item -> name		10870207						
ANR	10870795	Symbol	tail -> next		10870207						
ANR	10870796	Symbol	name		10870207						
ANR	10870797	Symbol	parser -> head		10870207						
ANR	10870798	Symbol	NS_XPS		10870207						
ANR	10870799	Function	on_close_tag	170:0:3803:3993							
ANR	10870800	FunctionDef	"on_close_tag (void * zp , const char * name)"		10870799	0					
ANR	10870801	CompoundStatement		172:0:3856:3993	10870799	0					
ANR	10870802	IdentifierDeclStatement	xps_parser_t * parser = zp ;	173:4:3862:3887	10870799	0	True				
ANR	10870803	IdentifierDecl	* parser = zp		10870799	0					
ANR	10870804	IdentifierDeclType	xps_parser_t *		10870799	0					
ANR	10870805	Identifier	parser		10870799	1					
ANR	10870806	AssignmentExpression	* parser = zp		10870799	2		=			
ANR	10870807	Identifier	zp		10870799	0					
ANR	10870808	Identifier	zp		10870799	1					
ANR	10870809	IfStatement	if ( parser -> error )		10870799	1					
ANR	10870810	Condition	parser -> error	175:8:3898:3910	10870799	0	True				
ANR	10870811	PtrMemberAccess	parser -> error		10870799	0					
ANR	10870812	Identifier	parser		10870799	0					
ANR	10870813	Identifier	error		10870799	1					
ANR	10870814	ReturnStatement	return ;	176:8:3921:3927	10870799	1	True				
ANR	10870815	IfStatement	if ( parser -> head )		10870799	2					
ANR	10870816	Condition	parser -> head	178:8:3938:3949	10870799	0	True				
ANR	10870817	PtrMemberAccess	parser -> head		10870799	0					
ANR	10870818	Identifier	parser		10870799	0					
ANR	10870819	Identifier	head		10870799	1					
ANR	10870820	ExpressionStatement	parser -> head = parser -> head -> up	179:8:3960:3991	10870799	1	True				
ANR	10870821	AssignmentExpression	parser -> head = parser -> head -> up		10870799	0		=			
ANR	10870822	PtrMemberAccess	parser -> head		10870799	0					
ANR	10870823	Identifier	parser		10870799	0					
ANR	10870824	Identifier	head		10870799	1					
ANR	10870825	PtrMemberAccess	parser -> head -> up		10870799	1					
ANR	10870826	PtrMemberAccess	parser -> head		10870799	0					
ANR	10870827	Identifier	parser		10870799	0					
ANR	10870828	Identifier	head		10870799	1					
ANR	10870829	Identifier	up		10870799	1					
ANR	10870830	ReturnType	static void		10870799	1					
ANR	10870831	Identifier	on_close_tag		10870799	2					
ANR	10870832	ParameterList	"void * zp , const char * name"		10870799	3					
ANR	10870833	Parameter	void * zp	171:13:3828:3835	10870799	0	True				
ANR	10870834	ParameterType	void *		10870799	0					
ANR	10870835	Identifier	zp		10870799	1					
ANR	10870836	Parameter	const char * name	171:23:3838:3853	10870799	1	True				
ANR	10870837	ParameterType	const char *		10870799	0					
ANR	10870838	Identifier	name		10870799	1					
ANR	10870839	CFGEntryNode	ENTRY		10870799		True				
ANR	10870840	CFGExitNode	EXIT		10870799		True				
ANR	10870841	Symbol	* parser		10870799						
ANR	10870842	Symbol	parser -> head -> up		10870799						
ANR	10870843	Symbol	parser		10870799						
ANR	10870844	Symbol	* * parser		10870799						
ANR	10870845	Symbol	zp		10870799						
ANR	10870846	Symbol	* parser -> head		10870799						
ANR	10870847	Symbol	name		10870799						
ANR	10870848	Symbol	parser -> head		10870799						
ANR	10870849	Symbol	parser -> error		10870799						
ANR	10870850	Function	is_xml_space	182:0:3996:4096							
ANR	10870851	FunctionDef	is_xml_space (int c)		10870850	0					
ANR	10870852	CompoundStatement		184:0:4034:4096	10870850	0					
ANR	10870853	ReturnStatement	return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n' ;	185:4:4040:4094	10870850	0	True				
ANR	10870854	OrExpression	c == ' ' || c == '\\t' || c == '\\r' || c == '\\n'		10870850	0		||			
ANR	10870855	EqualityExpression	c == ' '		10870850	0		==			
ANR	10870856	Identifier	c		10870850	0					
ANR	10870857	PrimaryExpression	' '		10870850	1					
ANR	10870858	OrExpression	c == '\\t' || c == '\\r' || c == '\\n'		10870850	1		||			
ANR	10870859	EqualityExpression	c == '\\t'		10870850	0		==			
ANR	10870860	Identifier	c		10870850	0					
ANR	10870861	PrimaryExpression	'\\t'		10870850	1					
ANR	10870862	OrExpression	c == '\\r' || c == '\\n'		10870850	1		||			
ANR	10870863	EqualityExpression	c == '\\r'		10870850	0		==			
ANR	10870864	Identifier	c		10870850	0					
ANR	10870865	PrimaryExpression	'\\r'		10870850	1					
ANR	10870866	EqualityExpression	c == '\\n'		10870850	1		==			
ANR	10870867	Identifier	c		10870850	0					
ANR	10870868	PrimaryExpression	'\\n'		10870850	1					
ANR	10870869	ReturnType	static inline int		10870850	1					
ANR	10870870	Identifier	is_xml_space		10870850	2					
ANR	10870871	ParameterList	int c		10870850	3					
ANR	10870872	Parameter	int c	183:13:4027:4031	10870850	0	True				
ANR	10870873	ParameterType	int		10870850	0					
ANR	10870874	Identifier	c		10870850	1					
ANR	10870875	CFGEntryNode	ENTRY		10870850		True				
ANR	10870876	CFGExitNode	EXIT		10870850		True				
ANR	10870877	Symbol	c		10870850						
ANR	10870878	Function	on_text	188:0:4099:4899							
ANR	10870879	FunctionDef	"on_text (void * zp , char * buf , int len)"		10870878	0					
ANR	10870880	CompoundStatement		190:0:4149:4899	10870878	0					
ANR	10870881	IdentifierDeclStatement	xps_parser_t * parser = zp ;	191:4:4155:4180	10870878	0	True				
ANR	10870882	IdentifierDecl	* parser = zp		10870878	0					
ANR	10870883	IdentifierDeclType	xps_parser_t *		10870878	0					
ANR	10870884	Identifier	parser		10870878	1					
ANR	10870885	AssignmentExpression	* parser = zp		10870878	2		=			
ANR	10870886	Identifier	zp		10870878	0					
ANR	10870887	Identifier	zp		10870878	1					
ANR	10870888	IdentifierDeclStatement	xps_context_t * ctx = parser -> ctx ;	192:4:4186:4218	10870878	1	True				
ANR	10870889	IdentifierDecl	* ctx = parser -> ctx		10870878	0					
ANR	10870890	IdentifierDeclType	xps_context_t *		10870878	0					
ANR	10870891	Identifier	ctx		10870878	1					
ANR	10870892	AssignmentExpression	* ctx = parser -> ctx		10870878	2		=			
ANR	10870893	Identifier	ctx		10870878	0					
ANR	10870894	PtrMemberAccess	parser -> ctx		10870878	1					
ANR	10870895	Identifier	parser		10870878	0					
ANR	10870896	Identifier	ctx		10870878	1					
ANR	10870897	IdentifierDeclStatement	const char * atts [ 3 ] ;	193:4:4224:4243	10870878	2	True				
ANR	10870898	IdentifierDecl	* atts [ 3 ]		10870878	0					
ANR	10870899	IdentifierDeclType	const char * [ 3 ]		10870878	0					
ANR	10870900	Identifier	atts		10870878	1					
ANR	10870901	PrimaryExpression	3		10870878	2					
ANR	10870902	IdentifierDeclStatement	int i ;	194:4:4249:4254	10870878	3	True				
ANR	10870903	IdentifierDecl	i		10870878	0					
ANR	10870904	IdentifierDeclType	int		10870878	0					
ANR	10870905	Identifier	i		10870878	1					
ANR	10870906	IfStatement	if ( parser -> error )		10870878	4					
ANR	10870907	Condition	parser -> error	196:8:4265:4277	10870878	0	True				
ANR	10870908	PtrMemberAccess	parser -> error		10870878	0					
ANR	10870909	Identifier	parser		10870878	0					
ANR	10870910	Identifier	error		10870878	1					
ANR	10870911	ReturnStatement	return ;	197:8:4288:4294	10870878	1	True				
ANR	10870912	ForStatement	for ( i = 0 ; i < len ; i ++ )		10870878	5					
ANR	10870913	ForInit	i = 0 ;	199:9:4306:4311	10870878	0	True				
ANR	10870914	AssignmentExpression	i = 0		10870878	0		=			
ANR	10870915	Identifier	i		10870878	0					
ANR	10870916	PrimaryExpression	0		10870878	1					
ANR	10870917	Condition	i < len	199:16:4313:4319	10870878	1	True				
ANR	10870918	RelationalExpression	i < len		10870878	0		<			
ANR	10870919	Identifier	i		10870878	0					
ANR	10870920	Identifier	len		10870878	1					
ANR	10870921	PostIncDecOperationExpression	i ++	199:25:4322:4324	10870878	2	True				
ANR	10870922	Identifier	i		10870878	0					
ANR	10870923	IncDec	++		10870878	1					
ANR	10870924	CompoundStatement		11:4:181:181	10870878	3					
ANR	10870925	IfStatement	if ( ! is_xml_space ( buf [ i ] ) )		10870878	0					
ANR	10870926	Condition	! is_xml_space ( buf [ i ] )	201:12:4345:4365	10870878	0	True				
ANR	10870927	UnaryOperationExpression	! is_xml_space ( buf [ i ] )		10870878	0					
ANR	10870928	UnaryOperator	!		10870878	0					
ANR	10870929	CallExpression	is_xml_space ( buf [ i ] )		10870878	1					
ANR	10870930	Callee	is_xml_space		10870878	0					
ANR	10870931	Identifier	is_xml_space		10870878	0					
ANR	10870932	ArgumentList	buf [ i ]		10870878	1					
ANR	10870933	Argument	buf [ i ]		10870878	0					
ANR	10870934	ArrayIndexing	buf [ i ]		10870878	0					
ANR	10870935	Identifier	buf		10870878	0					
ANR	10870936	Identifier	i		10870878	1					
ANR	10870937	CompoundStatement		14:12:240:275	10870878	1					
ANR	10870938	IdentifierDeclStatement	"char * tmp = xps_alloc ( ctx , len + 1 ) ;"	203:12:4390:4425	10870878	0	True				
ANR	10870939	IdentifierDecl	"* tmp = xps_alloc ( ctx , len + 1 )"		10870878	0					
ANR	10870940	IdentifierDeclType	char *		10870878	0					
ANR	10870941	Identifier	tmp		10870878	1					
ANR	10870942	AssignmentExpression	"* tmp = xps_alloc ( ctx , len + 1 )"		10870878	2		=			
ANR	10870943	Identifier	tmp		10870878	0					
ANR	10870944	CallExpression	"xps_alloc ( ctx , len + 1 )"		10870878	1					
ANR	10870945	Callee	xps_alloc		10870878	0					
ANR	10870946	Identifier	xps_alloc		10870878	0					
ANR	10870947	ArgumentList	ctx		10870878	1					
ANR	10870948	Argument	ctx		10870878	0					
ANR	10870949	Identifier	ctx		10870878	0					
ANR	10870950	Argument	len + 1		10870878	1					
ANR	10870951	AdditiveExpression	len + 1		10870878	0		+			
ANR	10870952	Identifier	len		10870878	0					
ANR	10870953	PrimaryExpression	1		10870878	1					
ANR	10870954	IfStatement	if ( ! tmp )		10870878	1					
ANR	10870955	Condition	! tmp	204:16:4443:4446	10870878	0	True				
ANR	10870956	UnaryOperationExpression	! tmp		10870878	0					
ANR	10870957	UnaryOperator	!		10870878	0					
ANR	10870958	Identifier	tmp		10870878	1					
ANR	10870959	CompoundStatement		16:12:311:311	10870878	1					
ANR	10870960	ExpressionStatement	"parser -> error = ""out of memory"""	206:16:4479:4510	10870878	0	True				
ANR	10870961	AssignmentExpression	"parser -> error = ""out of memory"""		10870878	0		=			
ANR	10870962	PtrMemberAccess	parser -> error		10870878	0					
ANR	10870963	Identifier	parser		10870878	0					
ANR	10870964	Identifier	error		10870878	1					
ANR	10870965	PrimaryExpression	"""out of memory"""		10870878	1					
ANR	10870966	ExpressionStatement	"gs_throw ( gs_error_VMerror , ""out of memory.\\n"" )"	207:16:4528:4574	10870878	1	True				
ANR	10870967	CallExpression	"gs_throw ( gs_error_VMerror , ""out of memory.\\n"" )"		10870878	0					
ANR	10870968	Callee	gs_throw		10870878	0					
ANR	10870969	Identifier	gs_throw		10870878	0					
ANR	10870970	ArgumentList	gs_error_VMerror		10870878	1					
ANR	10870971	Argument	gs_error_VMerror		10870878	0					
ANR	10870972	Identifier	gs_error_VMerror		10870878	0					
ANR	10870973	Argument	"""out of memory.\\n"""		10870878	1					
ANR	10870974	PrimaryExpression	"""out of memory.\\n"""		10870878	0					
ANR	10870975	ReturnStatement	return ;	208:16:4592:4598	10870878	2	True				
ANR	10870976	ExpressionStatement	"atts [ 0 ] = """""	211:12:4627:4639	10870878	2	True				
ANR	10870977	AssignmentExpression	"atts [ 0 ] = """""		10870878	0		=			
ANR	10870978	ArrayIndexing	atts [ 0 ]		10870878	0					
ANR	10870979	Identifier	atts		10870878	0					
ANR	10870980	PrimaryExpression	0		10870878	1					
ANR	10870981	PrimaryExpression	""""""		10870878	1					
ANR	10870982	ExpressionStatement	atts [ 1 ] = tmp	212:12:4653:4666	10870878	3	True				
ANR	10870983	AssignmentExpression	atts [ 1 ] = tmp		10870878	0		=			
ANR	10870984	ArrayIndexing	atts [ 1 ]		10870878	0					
ANR	10870985	Identifier	atts		10870878	0					
ANR	10870986	PrimaryExpression	1		10870878	1					
ANR	10870987	Identifier	tmp		10870878	1					
ANR	10870988	ExpressionStatement	atts [ 2 ] = NULL	213:12:4680:4694	10870878	4	True				
ANR	10870989	AssignmentExpression	atts [ 2 ] = NULL		10870878	0		=			
ANR	10870990	ArrayIndexing	atts [ 2 ]		10870878	0					
ANR	10870991	Identifier	atts		10870878	0					
ANR	10870992	PrimaryExpression	2		10870878	1					
ANR	10870993	Identifier	NULL		10870878	1					
ANR	10870994	ExpressionStatement	"memcpy ( tmp , buf , len )"	215:12:4709:4730	10870878	5	True				
ANR	10870995	CallExpression	"memcpy ( tmp , buf , len )"		10870878	0					
ANR	10870996	Callee	memcpy		10870878	0					
ANR	10870997	Identifier	memcpy		10870878	0					
ANR	10870998	ArgumentList	tmp		10870878	1					
ANR	10870999	Argument	tmp		10870878	0					
ANR	10871000	Identifier	tmp		10870878	0					
ANR	10871001	Argument	buf		10870878	1					
ANR	10871002	Identifier	buf		10870878	0					
ANR	10871003	Argument	len		10870878	2					
ANR	10871004	Identifier	len		10870878	0					
ANR	10871005	ExpressionStatement	tmp [ len ] = 0	216:12:4744:4756	10870878	6	True				
ANR	10871006	AssignmentExpression	tmp [ len ] = 0		10870878	0		=			
ANR	10871007	ArrayIndexing	tmp [ len ]		10870878	0					
ANR	10871008	Identifier	tmp		10870878	0					
ANR	10871009	Identifier	len		10870878	1					
ANR	10871010	PrimaryExpression	0		10870878	1					
ANR	10871011	ExpressionStatement	"on_open_tag ( zp , """" , atts )"	217:12:4770:4795	10870878	7	True				
ANR	10871012	CallExpression	"on_open_tag ( zp , """" , atts )"		10870878	0					
ANR	10871013	Callee	on_open_tag		10870878	0					
ANR	10871014	Identifier	on_open_tag		10870878	0					
ANR	10871015	ArgumentList	zp		10870878	1					
ANR	10871016	Argument	zp		10870878	0					
ANR	10871017	Identifier	zp		10870878	0					
ANR	10871018	Argument	""""""		10870878	1					
ANR	10871019	PrimaryExpression	""""""		10870878	0					
ANR	10871020	Argument	atts		10870878	2					
ANR	10871021	Identifier	atts		10870878	0					
ANR	10871022	ExpressionStatement	"on_close_tag ( zp , """" )"	218:12:4809:4829	10870878	8	True				
ANR	10871023	CallExpression	"on_close_tag ( zp , """" )"		10870878	0					
ANR	10871024	Callee	on_close_tag		10870878	0					
ANR	10871025	Identifier	on_close_tag		10870878	0					
ANR	10871026	ArgumentList	zp		10870878	1					
ANR	10871027	Argument	zp		10870878	0					
ANR	10871028	Identifier	zp		10870878	0					
ANR	10871029	Argument	""""""		10870878	1					
ANR	10871030	PrimaryExpression	""""""		10870878	0					
ANR	10871031	ExpressionStatement	"xps_free ( ctx , tmp )"	219:12:4843:4861	10870878	9	True				
ANR	10871032	CallExpression	"xps_free ( ctx , tmp )"		10870878	0					
ANR	10871033	Callee	xps_free		10870878	0					
ANR	10871034	Identifier	xps_free		10870878	0					
ANR	10871035	ArgumentList	ctx		10870878	1					
ANR	10871036	Argument	ctx		10870878	0					
ANR	10871037	Identifier	ctx		10870878	0					
ANR	10871038	Argument	tmp		10870878	1					
ANR	10871039	Identifier	tmp		10870878	0					
ANR	10871040	ReturnStatement	return ;	220:12:4875:4881	10870878	10	True				
ANR	10871041	ReturnType	static void		10870878	1					
ANR	10871042	Identifier	on_text		10870878	2					
ANR	10871043	ParameterList	"void * zp , char * buf , int len"		10870878	3					
ANR	10871044	Parameter	void * zp	189:8:4119:4126	10870878	0	True				
ANR	10871045	ParameterType	void *		10870878	0					
ANR	10871046	Identifier	zp		10870878	1					
ANR	10871047	Parameter	char * buf	189:18:4129:4137	10870878	1	True				
ANR	10871048	ParameterType	char *		10870878	0					
ANR	10871049	Identifier	buf		10870878	1					
ANR	10871050	Parameter	int len	189:29:4140:4146	10870878	2	True				
ANR	10871051	ParameterType	int		10870878	0					
ANR	10871052	Identifier	len		10870878	1					
ANR	10871053	CFGEntryNode	ENTRY		10870878		True				
ANR	10871054	CFGExitNode	EXIT		10870878		True				
ANR	10871055	Symbol	* tmp		10870878						
ANR	10871056	Symbol	* buf		10870878						
ANR	10871057	Symbol	NULL		10870878						
ANR	10871058	Symbol	ctx		10870878						
ANR	10871059	Symbol	i		10870878						
ANR	10871060	Symbol	* parser		10870878						
ANR	10871061	Symbol	parser -> ctx		10870878						
ANR	10871062	Symbol	gs_error_VMerror		10870878						
ANR	10871063	Symbol	buf		10870878						
ANR	10871064	Symbol	* i		10870878						
ANR	10871065	Symbol	len		10870878						
ANR	10871066	Symbol	parser		10870878						
ANR	10871067	Symbol	* atts		10870878						
ANR	10871068	Symbol	zp		10870878						
ANR	10871069	Symbol	tmp		10870878						
ANR	10871070	Symbol	parser -> error		10870878						
ANR	10871071	Symbol	xps_alloc		10870878						
ANR	10871072	Symbol	is_xml_space		10870878						
ANR	10871073	Symbol	atts		10870878						
ANR	10871074	Symbol	* len		10870878						
ANR	10871075	Function	xps_parse_xml	225:0:4902:6082							
ANR	10871076	FunctionDef	"xps_parse_xml (xps_context_t * ctx , byte * buf , int len)"		10871075	0					
ANR	10871077	CompoundStatement		227:0:4969:6082	10871075	0					
ANR	10871078	IdentifierDeclStatement	xps_parser_t parser ;	228:4:4975:4994	10871075	0	True				
ANR	10871079	IdentifierDecl	parser		10871075	0					
ANR	10871080	IdentifierDeclType	xps_parser_t		10871075	0					
ANR	10871081	Identifier	parser		10871075	1					
ANR	10871082	IdentifierDeclStatement	XML_Parser xp ;	229:4:5000:5013	10871075	1	True				
ANR	10871083	IdentifierDecl	xp		10871075	0					
ANR	10871084	IdentifierDeclType	XML_Parser		10871075	0					
ANR	10871085	Identifier	xp		10871075	1					
ANR	10871086	IdentifierDeclStatement	int code ;	230:4:5019:5027	10871075	2	True				
ANR	10871087	IdentifierDecl	code		10871075	0					
ANR	10871088	IdentifierDeclType	int		10871075	0					
ANR	10871089	Identifier	code		10871075	1					
ANR	10871090	ExpressionStatement	parser . ctx = ctx	232:4:5034:5050	10871075	3	True				
ANR	10871091	AssignmentExpression	parser . ctx = ctx		10871075	0		=			
ANR	10871092	MemberAccess	parser . ctx		10871075	0					
ANR	10871093	Identifier	parser		10871075	0					
ANR	10871094	Identifier	ctx		10871075	1					
ANR	10871095	Identifier	ctx		10871075	1					
ANR	10871096	ExpressionStatement	parser . root = NULL	233:4:5056:5074	10871075	4	True				
ANR	10871097	AssignmentExpression	parser . root = NULL		10871075	0		=			
ANR	10871098	MemberAccess	parser . root		10871075	0					
ANR	10871099	Identifier	parser		10871075	0					
ANR	10871100	Identifier	root		10871075	1					
ANR	10871101	Identifier	NULL		10871075	1					
ANR	10871102	ExpressionStatement	parser . head = NULL	234:4:5080:5098	10871075	5	True				
ANR	10871103	AssignmentExpression	parser . head = NULL		10871075	0		=			
ANR	10871104	MemberAccess	parser . head		10871075	0					
ANR	10871105	Identifier	parser		10871075	0					
ANR	10871106	Identifier	head		10871075	1					
ANR	10871107	Identifier	NULL		10871075	1					
ANR	10871108	ExpressionStatement	parser . error = NULL	235:4:5104:5123	10871075	6	True				
ANR	10871109	AssignmentExpression	parser . error = NULL		10871075	0		=			
ANR	10871110	MemberAccess	parser . error		10871075	0					
ANR	10871111	Identifier	parser		10871075	0					
ANR	10871112	Identifier	error		10871075	1					
ANR	10871113	Identifier	NULL		10871075	1					
ANR	10871114	ExpressionStatement	"xp = XML_ParserCreateNS ( NULL , ' ' )"	237:4:5130:5164	10871075	7	True				
ANR	10871115	AssignmentExpression	"xp = XML_ParserCreateNS ( NULL , ' ' )"		10871075	0		=			
ANR	10871116	Identifier	xp		10871075	0					
ANR	10871117	CallExpression	"XML_ParserCreateNS ( NULL , ' ' )"		10871075	1					
ANR	10871118	Callee	XML_ParserCreateNS		10871075	0					
ANR	10871119	Identifier	XML_ParserCreateNS		10871075	0					
ANR	10871120	ArgumentList	NULL		10871075	1					
ANR	10871121	Argument	NULL		10871075	0					
ANR	10871122	Identifier	NULL		10871075	0					
ANR	10871123	Argument	' '		10871075	1					
ANR	10871124	PrimaryExpression	' '		10871075	0					
ANR	10871125	IfStatement	if ( ! xp )		10871075	8					
ANR	10871126	Condition	! xp	238:8:5174:5176	10871075	0	True				
ANR	10871127	UnaryOperationExpression	! xp		10871075	0					
ANR	10871128	UnaryOperator	!		10871075	0					
ANR	10871129	Identifier	xp		10871075	1					
ANR	10871130	CompoundStatement		13:4:213:213	10871075	1					
ANR	10871131	ExpressionStatement	"gs_throw ( - 1 , ""xml error: could not create expat parser"" )"	240:8:5193:5249	10871075	0	True				
ANR	10871132	CallExpression	"gs_throw ( - 1 , ""xml error: could not create expat parser"" )"		10871075	0					
ANR	10871133	Callee	gs_throw		10871075	0					
ANR	10871134	Identifier	gs_throw		10871075	0					
ANR	10871135	ArgumentList	- 1		10871075	1					
ANR	10871136	Argument	- 1		10871075	0					
ANR	10871137	UnaryOperationExpression	- 1		10871075	0					
ANR	10871138	UnaryOperator	-		10871075	0					
ANR	10871139	PrimaryExpression	1		10871075	1					
ANR	10871140	Argument	"""xml error: could not create expat parser"""		10871075	1					
ANR	10871141	PrimaryExpression	"""xml error: could not create expat parser"""		10871075	0					
ANR	10871142	ReturnStatement	return NULL ;	241:8:5259:5270	10871075	1	True				
ANR	10871143	Identifier	NULL		10871075	0					
ANR	10871144	ExpressionStatement	"XML_SetUserData ( xp , & parser )"	244:4:5283:5311	10871075	9	True				
ANR	10871145	CallExpression	"XML_SetUserData ( xp , & parser )"		10871075	0					
ANR	10871146	Callee	XML_SetUserData		10871075	0					
ANR	10871147	Identifier	XML_SetUserData		10871075	0					
ANR	10871148	ArgumentList	xp		10871075	1					
ANR	10871149	Argument	xp		10871075	0					
ANR	10871150	Identifier	xp		10871075	0					
ANR	10871151	Argument	& parser		10871075	1					
ANR	10871152	UnaryOperationExpression	& parser		10871075	0					
ANR	10871153	UnaryOperator	&		10871075	0					
ANR	10871154	Identifier	parser		10871075	1					
ANR	10871155	ExpressionStatement	"XML_SetParamEntityParsing ( xp , XML_PARAM_ENTITY_PARSING_NEVER )"	245:4:5317:5378	10871075	10	True				
ANR	10871156	CallExpression	"XML_SetParamEntityParsing ( xp , XML_PARAM_ENTITY_PARSING_NEVER )"		10871075	0					
ANR	10871157	Callee	XML_SetParamEntityParsing		10871075	0					
ANR	10871158	Identifier	XML_SetParamEntityParsing		10871075	0					
ANR	10871159	ArgumentList	xp		10871075	1					
ANR	10871160	Argument	xp		10871075	0					
ANR	10871161	Identifier	xp		10871075	0					
ANR	10871162	Argument	XML_PARAM_ENTITY_PARSING_NEVER		10871075	1					
ANR	10871163	Identifier	XML_PARAM_ENTITY_PARSING_NEVER		10871075	0					
ANR	10871164	ExpressionStatement	"XML_SetStartElementHandler ( xp , ( XML_StartElementHandler ) on_open_tag )"	246:4:5384:5452	10871075	11	True				
ANR	10871165	CallExpression	"XML_SetStartElementHandler ( xp , ( XML_StartElementHandler ) on_open_tag )"		10871075	0					
ANR	10871166	Callee	XML_SetStartElementHandler		10871075	0					
ANR	10871167	Identifier	XML_SetStartElementHandler		10871075	0					
ANR	10871168	ArgumentList	xp		10871075	1					
ANR	10871169	Argument	xp		10871075	0					
ANR	10871170	Identifier	xp		10871075	0					
ANR	10871171	Argument	( XML_StartElementHandler ) on_open_tag		10871075	1					
ANR	10871172	CastExpression	( XML_StartElementHandler ) on_open_tag		10871075	0					
ANR	10871173	CastTarget	XML_StartElementHandler		10871075	0					
ANR	10871174	Identifier	on_open_tag		10871075	1					
ANR	10871175	ExpressionStatement	"XML_SetEndElementHandler ( xp , ( XML_EndElementHandler ) on_close_tag )"	247:4:5458:5523	10871075	12	True				
ANR	10871176	CallExpression	"XML_SetEndElementHandler ( xp , ( XML_EndElementHandler ) on_close_tag )"		10871075	0					
ANR	10871177	Callee	XML_SetEndElementHandler		10871075	0					
ANR	10871178	Identifier	XML_SetEndElementHandler		10871075	0					
ANR	10871179	ArgumentList	xp		10871075	1					
ANR	10871180	Argument	xp		10871075	0					
ANR	10871181	Identifier	xp		10871075	0					
ANR	10871182	Argument	( XML_EndElementHandler ) on_close_tag		10871075	1					
ANR	10871183	CastExpression	( XML_EndElementHandler ) on_close_tag		10871075	0					
ANR	10871184	CastTarget	XML_EndElementHandler		10871075	0					
ANR	10871185	Identifier	on_close_tag		10871075	1					
ANR	10871186	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , ( XML_CharacterDataHandler ) on_text )"	248:4:5529:5595	10871075	13	True				
ANR	10871187	CallExpression	"XML_SetCharacterDataHandler ( xp , ( XML_CharacterDataHandler ) on_text )"		10871075	0					
ANR	10871188	Callee	XML_SetCharacterDataHandler		10871075	0					
ANR	10871189	Identifier	XML_SetCharacterDataHandler		10871075	0					
ANR	10871190	ArgumentList	xp		10871075	1					
ANR	10871191	Argument	xp		10871075	0					
ANR	10871192	Identifier	xp		10871075	0					
ANR	10871193	Argument	( XML_CharacterDataHandler ) on_text		10871075	1					
ANR	10871194	CastExpression	( XML_CharacterDataHandler ) on_text		10871075	0					
ANR	10871195	CastTarget	XML_CharacterDataHandler		10871075	0					
ANR	10871196	Identifier	on_text		10871075	1					
ANR	10871197	ExpressionStatement	"code = XML_Parse ( xp , ( char * ) buf , len , 1 )"	250:4:5602:5642	10871075	14	True				
ANR	10871198	AssignmentExpression	"code = XML_Parse ( xp , ( char * ) buf , len , 1 )"		10871075	0		=			
ANR	10871199	Identifier	code		10871075	0					
ANR	10871200	CallExpression	"XML_Parse ( xp , ( char * ) buf , len , 1 )"		10871075	1					
ANR	10871201	Callee	XML_Parse		10871075	0					
ANR	10871202	Identifier	XML_Parse		10871075	0					
ANR	10871203	ArgumentList	xp		10871075	1					
ANR	10871204	Argument	xp		10871075	0					
ANR	10871205	Identifier	xp		10871075	0					
ANR	10871206	Argument	( char * ) buf		10871075	1					
ANR	10871207	CastExpression	( char * ) buf		10871075	0					
ANR	10871208	CastTarget	char *		10871075	0					
ANR	10871209	Identifier	buf		10871075	1					
ANR	10871210	Argument	len		10871075	2					
ANR	10871211	Identifier	len		10871075	0					
ANR	10871212	Argument	1		10871075	3					
ANR	10871213	PrimaryExpression	1		10871075	0					
ANR	10871214	IfStatement	if ( code == 0 || parser . error != NULL )		10871075	15					
ANR	10871215	Condition	code == 0 || parser . error != NULL	251:8:5652:5684	10871075	0	True				
ANR	10871216	OrExpression	code == 0 || parser . error != NULL		10871075	0		||			
ANR	10871217	EqualityExpression	code == 0		10871075	0		==			
ANR	10871218	Identifier	code		10871075	0					
ANR	10871219	PrimaryExpression	0		10871075	1					
ANR	10871220	EqualityExpression	parser . error != NULL		10871075	1		!=			
ANR	10871221	MemberAccess	parser . error		10871075	0					
ANR	10871222	Identifier	parser		10871075	0					
ANR	10871223	Identifier	error		10871075	1					
ANR	10871224	Identifier	NULL		10871075	1					
ANR	10871225	CompoundStatement		26:4:721:721	10871075	1					
ANR	10871226	IfStatement	if ( parser . root )		10871075	0					
ANR	10871227	Condition	parser . root	253:12:5705:5715	10871075	0	True				
ANR	10871228	MemberAccess	parser . root		10871075	0					
ANR	10871229	Identifier	parser		10871075	0					
ANR	10871230	Identifier	root		10871075	1					
ANR	10871231	ExpressionStatement	"xps_free_item ( ctx , parser . root )"	254:12:5730:5761	10871075	1	True				
ANR	10871232	CallExpression	"xps_free_item ( ctx , parser . root )"		10871075	0					
ANR	10871233	Callee	xps_free_item		10871075	0					
ANR	10871234	Identifier	xps_free_item		10871075	0					
ANR	10871235	ArgumentList	ctx		10871075	1					
ANR	10871236	Argument	ctx		10871075	0					
ANR	10871237	Identifier	ctx		10871075	0					
ANR	10871238	Argument	parser . root		10871075	1					
ANR	10871239	MemberAccess	parser . root		10871075	0					
ANR	10871240	Identifier	parser		10871075	0					
ANR	10871241	Identifier	root		10871075	1					
ANR	10871242	IfStatement	if ( XML_ErrorString ( XML_GetErrorCode ( xp ) ) != 0 )		10871075	1					
ANR	10871243	Condition	XML_ErrorString ( XML_GetErrorCode ( xp ) ) != 0	255:12:5775:5816	10871075	0	True				
ANR	10871244	EqualityExpression	XML_ErrorString ( XML_GetErrorCode ( xp ) ) != 0		10871075	0		!=			
ANR	10871245	CallExpression	XML_ErrorString ( XML_GetErrorCode ( xp ) )		10871075	0					
ANR	10871246	Callee	XML_ErrorString		10871075	0					
ANR	10871247	Identifier	XML_ErrorString		10871075	0					
ANR	10871248	ArgumentList	XML_GetErrorCode ( xp )		10871075	1					
ANR	10871249	Argument	XML_GetErrorCode ( xp )		10871075	0					
ANR	10871250	CallExpression	XML_GetErrorCode ( xp )		10871075	0					
ANR	10871251	Callee	XML_GetErrorCode		10871075	0					
ANR	10871252	Identifier	XML_GetErrorCode		10871075	0					
ANR	10871253	ArgumentList	xp		10871075	1					
ANR	10871254	Argument	xp		10871075	0					
ANR	10871255	Identifier	xp		10871075	0					
ANR	10871256	PrimaryExpression	0		10871075	1					
ANR	10871257	ExpressionStatement	"emprintf1 ( parser . ctx -> memory , ""XML_Error: %s\\n"" , XML_ErrorString ( XML_GetErrorCode ( xp ) ) )"	256:12:5831:5918	10871075	1	True				
ANR	10871258	CallExpression	"emprintf1 ( parser . ctx -> memory , ""XML_Error: %s\\n"" , XML_ErrorString ( XML_GetErrorCode ( xp ) ) )"		10871075	0					
ANR	10871259	Callee	emprintf1		10871075	0					
ANR	10871260	Identifier	emprintf1		10871075	0					
ANR	10871261	ArgumentList	parser . ctx -> memory		10871075	1					
ANR	10871262	Argument	parser . ctx -> memory		10871075	0					
ANR	10871263	PtrMemberAccess	parser . ctx -> memory		10871075	0					
ANR	10871264	MemberAccess	parser . ctx		10871075	0					
ANR	10871265	Identifier	parser		10871075	0					
ANR	10871266	Identifier	ctx		10871075	1					
ANR	10871267	Identifier	memory		10871075	1					
ANR	10871268	Argument	"""XML_Error: %s\\n"""		10871075	1					
ANR	10871269	PrimaryExpression	"""XML_Error: %s\\n"""		10871075	0					
ANR	10871270	Argument	XML_ErrorString ( XML_GetErrorCode ( xp ) )		10871075	2					
ANR	10871271	CallExpression	XML_ErrorString ( XML_GetErrorCode ( xp ) )		10871075	0					
ANR	10871272	Callee	XML_ErrorString		10871075	0					
ANR	10871273	Identifier	XML_ErrorString		10871075	0					
ANR	10871274	ArgumentList	XML_GetErrorCode ( xp )		10871075	1					
ANR	10871275	Argument	XML_GetErrorCode ( xp )		10871075	0					
ANR	10871276	CallExpression	XML_GetErrorCode ( xp )		10871075	0					
ANR	10871277	Callee	XML_GetErrorCode		10871075	0					
ANR	10871278	Identifier	XML_GetErrorCode		10871075	0					
ANR	10871279	ArgumentList	xp		10871075	1					
ANR	10871280	Argument	xp		10871075	0					
ANR	10871281	Identifier	xp		10871075	0					
ANR	10871282	ExpressionStatement	XML_ParserFree ( xp )	257:8:5928:5946	10871075	2	True				
ANR	10871283	CallExpression	XML_ParserFree ( xp )		10871075	0					
ANR	10871284	Callee	XML_ParserFree		10871075	0					
ANR	10871285	Identifier	XML_ParserFree		10871075	0					
ANR	10871286	ArgumentList	xp		10871075	1					
ANR	10871287	Argument	xp		10871075	0					
ANR	10871288	Identifier	xp		10871075	0					
ANR	10871289	ExpressionStatement	"gs_throw1 ( - 1 , ""parser error: %s"" , parser . error )"	258:8:5956:6003	10871075	3	True				
ANR	10871290	CallExpression	"gs_throw1 ( - 1 , ""parser error: %s"" , parser . error )"		10871075	0					
ANR	10871291	Callee	gs_throw1		10871075	0					
ANR	10871292	Identifier	gs_throw1		10871075	0					
ANR	10871293	ArgumentList	- 1		10871075	1					
ANR	10871294	Argument	- 1		10871075	0					
ANR	10871295	UnaryOperationExpression	- 1		10871075	0					
ANR	10871296	UnaryOperator	-		10871075	0					
ANR	10871297	PrimaryExpression	1		10871075	1					
ANR	10871298	Argument	"""parser error: %s"""		10871075	1					
ANR	10871299	PrimaryExpression	"""parser error: %s"""		10871075	0					
ANR	10871300	Argument	parser . error		10871075	2					
ANR	10871301	MemberAccess	parser . error		10871075	0					
ANR	10871302	Identifier	parser		10871075	0					
ANR	10871303	Identifier	error		10871075	1					
ANR	10871304	ReturnStatement	return NULL ;	259:8:6013:6024	10871075	4	True				
ANR	10871305	Identifier	NULL		10871075	0					
ANR	10871306	ExpressionStatement	XML_ParserFree ( xp )	262:4:6037:6055	10871075	16	True				
ANR	10871307	CallExpression	XML_ParserFree ( xp )		10871075	0					
ANR	10871308	Callee	XML_ParserFree		10871075	0					
ANR	10871309	Identifier	XML_ParserFree		10871075	0					
ANR	10871310	ArgumentList	xp		10871075	1					
ANR	10871311	Argument	xp		10871075	0					
ANR	10871312	Identifier	xp		10871075	0					
ANR	10871313	ReturnStatement	return parser . root ;	264:4:6062:6080	10871075	17	True				
ANR	10871314	MemberAccess	parser . root		10871075	0					
ANR	10871315	Identifier	parser		10871075	0					
ANR	10871316	Identifier	root		10871075	1					
ANR	10871317	ReturnType	xps_item_t *		10871075	1					
ANR	10871318	Identifier	xps_parse_xml		10871075	2					
ANR	10871319	ParameterList	"xps_context_t * ctx , byte * buf , int len"		10871075	3					
ANR	10871320	Parameter	xps_context_t * ctx	226:14:4929:4946	10871075	0	True				
ANR	10871321	ParameterType	xps_context_t *		10871075	0					
ANR	10871322	Identifier	ctx		10871075	1					
ANR	10871323	Parameter	byte * buf	226:34:4949:4957	10871075	1	True				
ANR	10871324	ParameterType	byte *		10871075	0					
ANR	10871325	Identifier	buf		10871075	1					
ANR	10871326	Parameter	int len	226:45:4960:4966	10871075	2	True				
ANR	10871327	ParameterType	int		10871075	0					
ANR	10871328	Identifier	len		10871075	1					
ANR	10871329	CFGEntryNode	ENTRY		10871075		True				
ANR	10871330	CFGExitNode	EXIT		10871075		True				
ANR	10871331	Symbol	XML_Parse		10871075						
ANR	10871332	Symbol	code		10871075						
ANR	10871333	Symbol	NULL		10871075						
ANR	10871334	Symbol	parser . head		10871075						
ANR	10871335	Symbol	ctx		10871075						
ANR	10871336	Symbol	& parser		10871075						
ANR	10871337	Symbol	XML_GetErrorCode		10871075						
ANR	10871338	Symbol	parser . root		10871075						
ANR	10871339	Symbol	parser . error		10871075						
ANR	10871340	Symbol	XML_PARAM_ENTITY_PARSING_NEVER		10871075						
ANR	10871341	Symbol	parser . ctx -> memory		10871075						
ANR	10871342	Symbol	on_open_tag		10871075						
ANR	10871343	Symbol	* parser . ctx		10871075						
ANR	10871344	Symbol	* parser		10871075						
ANR	10871345	Symbol	buf		10871075						
ANR	10871346	Symbol	len		10871075						
ANR	10871347	Symbol	parser		10871075						
ANR	10871348	Symbol	on_text		10871075						
ANR	10871349	Symbol	parser . ctx		10871075						
ANR	10871350	Symbol	xp		10871075						
ANR	10871351	Symbol	XML_ErrorString		10871075						
ANR	10871352	Symbol	XML_ParserCreateNS		10871075						
ANR	10871353	Symbol	on_close_tag		10871075						
ANR	10871354	Function	xps_next	267:0:6085:6150							
ANR	10871355	FunctionDef	xps_next (xps_item_t * item)		10871354	0					
ANR	10871356	CompoundStatement		269:0:6125:6150	10871354	0					
ANR	10871357	ReturnStatement	return item -> next ;	270:4:6131:6148	10871354	0	True				
ANR	10871358	PtrMemberAccess	item -> next		10871354	0					
ANR	10871359	Identifier	item		10871354	0					
ANR	10871360	Identifier	next		10871354	1					
ANR	10871361	ReturnType	xps_item_t *		10871354	1					
ANR	10871362	Identifier	xps_next		10871354	2					
ANR	10871363	ParameterList	xps_item_t * item		10871354	3					
ANR	10871364	Parameter	xps_item_t * item	268:9:6107:6122	10871354	0	True				
ANR	10871365	ParameterType	xps_item_t *		10871354	0					
ANR	10871366	Identifier	item		10871354	1					
ANR	10871367	CFGEntryNode	ENTRY		10871354		True				
ANR	10871368	CFGExitNode	EXIT		10871354		True				
ANR	10871369	Symbol	item		10871354						
ANR	10871370	Symbol	* item		10871354						
ANR	10871371	Symbol	item -> next		10871354						
ANR	10871372	Function	xps_down	273:0:6153:6218							
ANR	10871373	FunctionDef	xps_down (xps_item_t * item)		10871372	0					
ANR	10871374	CompoundStatement		275:0:6193:6218	10871372	0					
ANR	10871375	ReturnStatement	return item -> down ;	276:4:6199:6216	10871372	0	True				
ANR	10871376	PtrMemberAccess	item -> down		10871372	0					
ANR	10871377	Identifier	item		10871372	0					
ANR	10871378	Identifier	down		10871372	1					
ANR	10871379	ReturnType	xps_item_t *		10871372	1					
ANR	10871380	Identifier	xps_down		10871372	2					
ANR	10871381	ParameterList	xps_item_t * item		10871372	3					
ANR	10871382	Parameter	xps_item_t * item	274:9:6175:6190	10871372	0	True				
ANR	10871383	ParameterType	xps_item_t *		10871372	0					
ANR	10871384	Identifier	item		10871372	1					
ANR	10871385	CFGEntryNode	ENTRY		10871372		True				
ANR	10871386	CFGExitNode	EXIT		10871372		True				
ANR	10871387	Symbol	item		10871372						
ANR	10871388	Symbol	item -> down		10871372						
ANR	10871389	Symbol	* item		10871372						
ANR	10871390	Function	xps_tag	279:0:6221:6279							
ANR	10871391	FunctionDef	xps_tag (xps_item_t * item)		10871390	0					
ANR	10871392	CompoundStatement		281:0:6254:6279	10871390	0					
ANR	10871393	ReturnStatement	return item -> name ;	282:4:6260:6277	10871390	0	True				
ANR	10871394	PtrMemberAccess	item -> name		10871390	0					
ANR	10871395	Identifier	item		10871390	0					
ANR	10871396	Identifier	name		10871390	1					
ANR	10871397	ReturnType	char *		10871390	1					
ANR	10871398	Identifier	xps_tag		10871390	2					
ANR	10871399	ParameterList	xps_item_t * item		10871390	3					
ANR	10871400	Parameter	xps_item_t * item	280:8:6236:6251	10871390	0	True				
ANR	10871401	ParameterType	xps_item_t *		10871390	0					
ANR	10871402	Identifier	item		10871390	1					
ANR	10871403	CFGEntryNode	ENTRY		10871390		True				
ANR	10871404	CFGExitNode	EXIT		10871390		True				
ANR	10871405	Symbol	item		10871390						
ANR	10871406	Symbol	item -> name		10871390						
ANR	10871407	Symbol	* item		10871390						
ANR	10871408	Function	xps_att	285:0:6282:6480							
ANR	10871409	FunctionDef	"xps_att (xps_item_t * item , const char * att)"		10871408	0					
ANR	10871410	CompoundStatement		287:0:6332:6480	10871408	0					
ANR	10871411	IdentifierDeclStatement	int i ;	288:4:6338:6343	10871408	0	True				
ANR	10871412	IdentifierDecl	i		10871408	0					
ANR	10871413	IdentifierDeclType	int		10871408	0					
ANR	10871414	Identifier	i		10871408	1					
ANR	10871415	ForStatement	for ( i = 0 ; item -> atts [ i ] ; i += 2 )		10871408	1					
ANR	10871416	ForInit	i = 0 ;	289:9:6354:6359	10871408	0	True				
ANR	10871417	AssignmentExpression	i = 0		10871408	0		=			
ANR	10871418	Identifier	i		10871408	0					
ANR	10871419	PrimaryExpression	0		10871408	1					
ANR	10871420	Condition	item -> atts [ i ]	289:16:6361:6373	10871408	1	True				
ANR	10871421	ArrayIndexing	item -> atts [ i ]		10871408	0					
ANR	10871422	PtrMemberAccess	item -> atts		10871408	0					
ANR	10871423	Identifier	item		10871408	0					
ANR	10871424	Identifier	atts		10871408	1					
ANR	10871425	Identifier	i		10871408	1					
ANR	10871426	AssignmentExpression	i += 2	289:31:6376:6381	10871408	2	True	+=			
ANR	10871427	Identifier	i		10871408	0					
ANR	10871428	PrimaryExpression	2		10871408	1					
ANR	10871429	IfStatement	"if ( ! strcmp ( item -> atts [ i ] , att ) )"		10871408	3					
ANR	10871430	Condition	"! strcmp ( item -> atts [ i ] , att )"	290:12:6396:6422	10871408	0	True				
ANR	10871431	UnaryOperationExpression	"! strcmp ( item -> atts [ i ] , att )"		10871408	0					
ANR	10871432	UnaryOperator	!		10871408	0					
ANR	10871433	CallExpression	"strcmp ( item -> atts [ i ] , att )"		10871408	1					
ANR	10871434	Callee	strcmp		10871408	0					
ANR	10871435	Identifier	strcmp		10871408	0					
ANR	10871436	ArgumentList	item -> atts [ i ]		10871408	1					
ANR	10871437	Argument	item -> atts [ i ]		10871408	0					
ANR	10871438	ArrayIndexing	item -> atts [ i ]		10871408	0					
ANR	10871439	PtrMemberAccess	item -> atts		10871408	0					
ANR	10871440	Identifier	item		10871408	0					
ANR	10871441	Identifier	atts		10871408	1					
ANR	10871442	Identifier	i		10871408	1					
ANR	10871443	Argument	att		10871408	1					
ANR	10871444	Identifier	att		10871408	0					
ANR	10871445	ReturnStatement	return item -> atts [ i + 1 ] ;	291:12:6437:6461	10871408	1	True				
ANR	10871446	ArrayIndexing	item -> atts [ i + 1 ]		10871408	0					
ANR	10871447	PtrMemberAccess	item -> atts		10871408	0					
ANR	10871448	Identifier	item		10871408	0					
ANR	10871449	Identifier	atts		10871408	1					
ANR	10871450	AdditiveExpression	i + 1		10871408	1		+			
ANR	10871451	Identifier	i		10871408	0					
ANR	10871452	PrimaryExpression	1		10871408	1					
ANR	10871453	ReturnStatement	return NULL ;	292:4:6467:6478	10871408	2	True				
ANR	10871454	Identifier	NULL		10871408	0					
ANR	10871455	ReturnType	char *		10871408	1					
ANR	10871456	Identifier	xps_att		10871408	2					
ANR	10871457	ParameterList	"xps_item_t * item , const char * att"		10871408	3					
ANR	10871458	Parameter	xps_item_t * item	286:8:6297:6312	10871408	0	True				
ANR	10871459	ParameterType	xps_item_t *		10871408	0					
ANR	10871460	Identifier	item		10871408	1					
ANR	10871461	Parameter	const char * att	286:26:6315:6329	10871408	1	True				
ANR	10871462	ParameterType	const char *		10871408	0					
ANR	10871463	Identifier	att		10871408	1					
ANR	10871464	CFGEntryNode	ENTRY		10871408		True				
ANR	10871465	CFGExitNode	EXIT		10871408		True				
ANR	10871466	Symbol	att		10871408						
ANR	10871467	Symbol	strcmp		10871408						
ANR	10871468	Symbol	item -> atts		10871408						
ANR	10871469	Symbol	item		10871408						
ANR	10871470	Symbol	* item -> atts		10871408						
ANR	10871471	Symbol	* i		10871408						
ANR	10871472	Symbol	NULL		10871408						
ANR	10871473	Symbol	* item		10871408						
ANR	10871474	Symbol	* * item		10871408						
ANR	10871475	Symbol	i		10871408						
ANR	10871476	Function	xps_detach_and_free_remainder	295:0:6483:6716							
ANR	10871477	FunctionDef	"xps_detach_and_free_remainder (xps_context_t * ctx , xps_item_t * root , xps_item_t * item)"		10871476	0					
ANR	10871478	CompoundStatement		297:0:6574:6716	10871476	0					
ANR	10871479	IfStatement	if ( item -> up )		10871476	0					
ANR	10871480	Condition	item -> up	298:8:6584:6591	10871476	0	True				
ANR	10871481	PtrMemberAccess	item -> up		10871476	0					
ANR	10871482	Identifier	item		10871476	0					
ANR	10871483	Identifier	up		10871476	1					
ANR	10871484	ExpressionStatement	item -> up -> down = NULL	299:8:6602:6623	10871476	1	True				
ANR	10871485	AssignmentExpression	item -> up -> down = NULL		10871476	0		=			
ANR	10871486	PtrMemberAccess	item -> up -> down		10871476	0					
ANR	10871487	PtrMemberAccess	item -> up		10871476	0					
ANR	10871488	Identifier	item		10871476	0					
ANR	10871489	Identifier	up		10871476	1					
ANR	10871490	Identifier	down		10871476	1					
ANR	10871491	Identifier	NULL		10871476	1					
ANR	10871492	ExpressionStatement	"xps_free_item ( ctx , item -> next )"	301:4:6630:6660	10871476	1	True				
ANR	10871493	CallExpression	"xps_free_item ( ctx , item -> next )"		10871476	0					
ANR	10871494	Callee	xps_free_item		10871476	0					
ANR	10871495	Identifier	xps_free_item		10871476	0					
ANR	10871496	ArgumentList	ctx		10871476	1					
ANR	10871497	Argument	ctx		10871476	0					
ANR	10871498	Identifier	ctx		10871476	0					
ANR	10871499	Argument	item -> next		10871476	1					
ANR	10871500	PtrMemberAccess	item -> next		10871476	0					
ANR	10871501	Identifier	item		10871476	0					
ANR	10871502	Identifier	next		10871476	1					
ANR	10871503	ExpressionStatement	item -> next = NULL	302:4:6666:6683	10871476	2	True				
ANR	10871504	AssignmentExpression	item -> next = NULL		10871476	0		=			
ANR	10871505	PtrMemberAccess	item -> next		10871476	0					
ANR	10871506	Identifier	item		10871476	0					
ANR	10871507	Identifier	next		10871476	1					
ANR	10871508	Identifier	NULL		10871476	1					
ANR	10871509	ExpressionStatement	"xps_free_item ( ctx , root )"	304:4:6690:6714	10871476	3	True				
ANR	10871510	CallExpression	"xps_free_item ( ctx , root )"		10871476	0					
ANR	10871511	Callee	xps_free_item		10871476	0					
ANR	10871512	Identifier	xps_free_item		10871476	0					
ANR	10871513	ArgumentList	ctx		10871476	1					
ANR	10871514	Argument	ctx		10871476	0					
ANR	10871515	Identifier	ctx		10871476	0					
ANR	10871516	Argument	root		10871476	1					
ANR	10871517	Identifier	root		10871476	0					
ANR	10871518	ReturnType	void		10871476	1					
ANR	10871519	Identifier	xps_detach_and_free_remainder		10871476	2					
ANR	10871520	ParameterList	"xps_context_t * ctx , xps_item_t * root , xps_item_t * item"		10871476	3					
ANR	10871521	Parameter	xps_context_t * ctx	296:30:6518:6535	10871476	0	True				
ANR	10871522	ParameterType	xps_context_t *		10871476	0					
ANR	10871523	Identifier	ctx		10871476	1					
ANR	10871524	Parameter	xps_item_t * root	296:50:6538:6553	10871476	1	True				
ANR	10871525	ParameterType	xps_item_t *		10871476	0					
ANR	10871526	Identifier	root		10871476	1					
ANR	10871527	Parameter	xps_item_t * item	296:68:6556:6571	10871476	2	True				
ANR	10871528	ParameterType	xps_item_t *		10871476	0					
ANR	10871529	Identifier	item		10871476	1					
ANR	10871530	CFGEntryNode	ENTRY		10871476		True				
ANR	10871531	CFGExitNode	EXIT		10871476		True				
ANR	10871532	Symbol	item		10871476						
ANR	10871533	Symbol	NULL		10871476						
ANR	10871534	Symbol	ctx		10871476						
ANR	10871535	Symbol	* item		10871476						
ANR	10871536	Symbol	root		10871476						
ANR	10871537	Symbol	* * item		10871476						
ANR	10871538	Symbol	item -> up		10871476						
ANR	10871539	Symbol	item -> up -> down		10871476						
ANR	10871540	Symbol	* item -> up		10871476						
ANR	10871541	Symbol	item -> next		10871476						
ANR	10871542	Function	xps_free_item	307:0:6719:6974							
ANR	10871543	FunctionDef	"xps_free_item (xps_context_t * ctx , xps_item_t * item)"		10871542	0					
ANR	10871544	CompoundStatement		309:0:6776:6974	10871542	0					
ANR	10871545	IdentifierDeclStatement	xps_item_t * next ;	310:4:6782:6798	10871542	0	True				
ANR	10871546	IdentifierDecl	* next		10871542	0					
ANR	10871547	IdentifierDeclType	xps_item_t *		10871542	0					
ANR	10871548	Identifier	next		10871542	1					
ANR	10871549	WhileStatement	while ( item )		10871542	1					
ANR	10871550	Condition	item	311:11:6811:6814	10871542	0	True				
ANR	10871551	Identifier	item		10871542	0					
ANR	10871552	CompoundStatement		4:4:44:44	10871542	1					
ANR	10871553	ExpressionStatement	next = item -> next	313:8:6831:6848	10871542	0	True				
ANR	10871554	AssignmentExpression	next = item -> next		10871542	0		=			
ANR	10871555	Identifier	next		10871542	0					
ANR	10871556	PtrMemberAccess	item -> next		10871542	1					
ANR	10871557	Identifier	item		10871542	0					
ANR	10871558	Identifier	next		10871542	1					
ANR	10871559	IfStatement	if ( item -> down )		10871542	1					
ANR	10871560	Condition	item -> down	314:12:6862:6871	10871542	0	True				
ANR	10871561	PtrMemberAccess	item -> down		10871542	0					
ANR	10871562	Identifier	item		10871542	0					
ANR	10871563	Identifier	down		10871542	1					
ANR	10871564	ExpressionStatement	"xps_free_item ( ctx , item -> down )"	315:12:6886:6916	10871542	1	True				
ANR	10871565	CallExpression	"xps_free_item ( ctx , item -> down )"		10871542	0					
ANR	10871566	Callee	xps_free_item		10871542	0					
ANR	10871567	Identifier	xps_free_item		10871542	0					
ANR	10871568	ArgumentList	ctx		10871542	1					
ANR	10871569	Argument	ctx		10871542	0					
ANR	10871570	Identifier	ctx		10871542	0					
ANR	10871571	Argument	item -> down		10871542	1					
ANR	10871572	PtrMemberAccess	item -> down		10871542	0					
ANR	10871573	Identifier	item		10871542	0					
ANR	10871574	Identifier	down		10871542	1					
ANR	10871575	ExpressionStatement	"xps_free ( ctx , item )"	316:8:6926:6945	10871542	2	True				
ANR	10871576	CallExpression	"xps_free ( ctx , item )"		10871542	0					
ANR	10871577	Callee	xps_free		10871542	0					
ANR	10871578	Identifier	xps_free		10871542	0					
ANR	10871579	ArgumentList	ctx		10871542	1					
ANR	10871580	Argument	ctx		10871542	0					
ANR	10871581	Identifier	ctx		10871542	0					
ANR	10871582	Argument	item		10871542	1					
ANR	10871583	Identifier	item		10871542	0					
ANR	10871584	ExpressionStatement	item = next	317:8:6955:6966	10871542	3	True				
ANR	10871585	AssignmentExpression	item = next		10871542	0		=			
ANR	10871586	Identifier	item		10871542	0					
ANR	10871587	Identifier	next		10871542	1					
ANR	10871588	ReturnType	void		10871542	1					
ANR	10871589	Identifier	xps_free_item		10871542	2					
ANR	10871590	ParameterList	"xps_context_t * ctx , xps_item_t * item"		10871542	3					
ANR	10871591	Parameter	xps_context_t * ctx	308:14:6738:6755	10871542	0	True				
ANR	10871592	ParameterType	xps_context_t *		10871542	0					
ANR	10871593	Identifier	ctx		10871542	1					
ANR	10871594	Parameter	xps_item_t * item	308:34:6758:6773	10871542	1	True				
ANR	10871595	ParameterType	xps_item_t *		10871542	0					
ANR	10871596	Identifier	item		10871542	1					
ANR	10871597	CFGEntryNode	ENTRY		10871542		True				
ANR	10871598	CFGExitNode	EXIT		10871542		True				
ANR	10871599	Symbol	next		10871542						
ANR	10871600	Symbol	item		10871542						
ANR	10871601	Symbol	item -> down		10871542						
ANR	10871602	Symbol	ctx		10871542						
ANR	10871603	Symbol	* item		10871542						
ANR	10871604	Symbol	item -> next		10871542						
ANR	10871605	Function	indent	321:0:6977:7045							
ANR	10871606	FunctionDef	indent (int n)		10871605	0					
ANR	10871607	CompoundStatement		322:0:7003:7045	10871605	0					
ANR	10871608	WhileStatement	while ( n -- )		10871605	0					
ANR	10871609	Condition	n --	323:11:7016:7018	10871605	0	True				
ANR	10871610	PostIncDecOperationExpression	n --		10871605	0					
ANR	10871611	Identifier	n		10871605	0					
ANR	10871612	IncDec	--		10871605	1					
ANR	10871613	ExpressionStatement	"dlprintf ( ""  "" )"	324:8:7029:7043	10871605	1	True				
ANR	10871614	CallExpression	"dlprintf ( ""  "" )"		10871605	0					
ANR	10871615	Callee	dlprintf		10871605	0					
ANR	10871616	Identifier	dlprintf		10871605	0					
ANR	10871617	ArgumentList	"""  """		10871605	1					
ANR	10871618	Argument	"""  """		10871605	0					
ANR	10871619	PrimaryExpression	"""  """		10871605	0					
ANR	10871620	ReturnType	static void		10871605	1					
ANR	10871621	Identifier	indent		10871605	2					
ANR	10871622	ParameterList	int n		10871605	3					
ANR	10871623	Parameter	int n	321:19:6996:7000	10871605	0	True				
ANR	10871624	ParameterType	int		10871605	0					
ANR	10871625	Identifier	n		10871605	1					
ANR	10871626	CFGEntryNode	ENTRY		10871605		True				
ANR	10871627	CFGExitNode	EXIT		10871605		True				
ANR	10871628	Symbol	n		10871605						
ANR	10871629	Function	xps_debug_item_imp	327:0:7048:7817							
ANR	10871630	FunctionDef	"xps_debug_item_imp (xps_item_t * item , int level , int loop)"		10871629	0					
ANR	10871631	CompoundStatement		329:0:7118:7817	10871629	0					
ANR	10871632	IdentifierDeclStatement	int i ;	330:4:7124:7129	10871629	0	True				
ANR	10871633	IdentifierDecl	i		10871629	0					
ANR	10871634	IdentifierDeclType	int		10871629	0					
ANR	10871635	Identifier	i		10871629	1					
ANR	10871636	WhileStatement	while ( item )		10871629	1					
ANR	10871637	Condition	item	332:11:7143:7146	10871629	0	True				
ANR	10871638	Identifier	item		10871629	0					
ANR	10871639	CompoundStatement		5:4:34:34	10871629	1					
ANR	10871640	ExpressionStatement	indent ( level )	334:8:7163:7176	10871629	0	True				
ANR	10871641	CallExpression	indent ( level )		10871629	0					
ANR	10871642	Callee	indent		10871629	0					
ANR	10871643	Identifier	indent		10871629	0					
ANR	10871644	ArgumentList	level		10871629	1					
ANR	10871645	Argument	level		10871629	0					
ANR	10871646	Identifier	level		10871629	0					
ANR	10871647	IfStatement	if ( strlen ( item -> name ) == 0 )		10871629	1					
ANR	10871648	Condition	strlen ( item -> name ) == 0	336:12:7191:7213	10871629	0	True				
ANR	10871649	EqualityExpression	strlen ( item -> name ) == 0		10871629	0		==			
ANR	10871650	CallExpression	strlen ( item -> name )		10871629	0					
ANR	10871651	Callee	strlen		10871629	0					
ANR	10871652	Identifier	strlen		10871629	0					
ANR	10871653	ArgumentList	item -> name		10871629	1					
ANR	10871654	Argument	item -> name		10871629	0					
ANR	10871655	PtrMemberAccess	item -> name		10871629	0					
ANR	10871656	Identifier	item		10871629	0					
ANR	10871657	Identifier	name		10871629	1					
ANR	10871658	PrimaryExpression	0		10871629	1					
ANR	10871659	ExpressionStatement	"dlprintf1 ( ""%s\\n"" , item -> atts [ 1 ] )"	337:12:7228:7260	10871629	1	True				
ANR	10871660	CallExpression	"dlprintf1 ( ""%s\\n"" , item -> atts [ 1 ] )"		10871629	0					
ANR	10871661	Callee	dlprintf1		10871629	0					
ANR	10871662	Identifier	dlprintf1		10871629	0					
ANR	10871663	ArgumentList	"""%s\\n"""		10871629	1					
ANR	10871664	Argument	"""%s\\n"""		10871629	0					
ANR	10871665	PrimaryExpression	"""%s\\n"""		10871629	0					
ANR	10871666	Argument	item -> atts [ 1 ]		10871629	1					
ANR	10871667	ArrayIndexing	item -> atts [ 1 ]		10871629	0					
ANR	10871668	PtrMemberAccess	item -> atts		10871629	0					
ANR	10871669	Identifier	item		10871629	0					
ANR	10871670	Identifier	atts		10871629	1					
ANR	10871671	PrimaryExpression	1		10871629	1					
ANR	10871672	ElseStatement	else		10871629	0					
ANR	10871673	CompoundStatement		11:8:164:164	10871629	0					
ANR	10871674	ExpressionStatement	"dlprintf1 ( ""<%s"" , item -> name )"	340:12:7297:7325	10871629	0	True				
ANR	10871675	CallExpression	"dlprintf1 ( ""<%s"" , item -> name )"		10871629	0					
ANR	10871676	Callee	dlprintf1		10871629	0					
ANR	10871677	Identifier	dlprintf1		10871629	0					
ANR	10871678	ArgumentList	"""<%s"""		10871629	1					
ANR	10871679	Argument	"""<%s"""		10871629	0					
ANR	10871680	PrimaryExpression	"""<%s"""		10871629	0					
ANR	10871681	Argument	item -> name		10871629	1					
ANR	10871682	PtrMemberAccess	item -> name		10871629	0					
ANR	10871683	Identifier	item		10871629	0					
ANR	10871684	Identifier	name		10871629	1					
ANR	10871685	ForStatement	for ( i = 0 ; item -> atts [ i ] ; i += 2 )		10871629	1					
ANR	10871686	ForInit	i = 0 ;	342:17:7345:7350	10871629	0	True				
ANR	10871687	AssignmentExpression	i = 0		10871629	0		=			
ANR	10871688	Identifier	i		10871629	0					
ANR	10871689	PrimaryExpression	0		10871629	1					
ANR	10871690	Condition	item -> atts [ i ]	342:24:7352:7364	10871629	1	True				
ANR	10871691	ArrayIndexing	item -> atts [ i ]		10871629	0					
ANR	10871692	PtrMemberAccess	item -> atts		10871629	0					
ANR	10871693	Identifier	item		10871629	0					
ANR	10871694	Identifier	atts		10871629	1					
ANR	10871695	Identifier	i		10871629	1					
ANR	10871696	AssignmentExpression	i += 2	342:39:7367:7372	10871629	2	True	+=			
ANR	10871697	Identifier	i		10871629	0					
ANR	10871698	PrimaryExpression	2		10871629	1					
ANR	10871699	ExpressionStatement	"dlprintf2 ( "" %s=\\""%s\\"""" , item -> atts [ i ] , item -> atts [ i + 1 ] )"	343:16:7391:7446	10871629	3	True				
ANR	10871700	CallExpression	"dlprintf2 ( "" %s=\\""%s\\"""" , item -> atts [ i ] , item -> atts [ i + 1 ] )"		10871629	0					
ANR	10871701	Callee	dlprintf2		10871629	0					
ANR	10871702	Identifier	dlprintf2		10871629	0					
ANR	10871703	ArgumentList	""" %s=\\""%s\\"""""		10871629	1					
ANR	10871704	Argument	""" %s=\\""%s\\"""""		10871629	0					
ANR	10871705	PrimaryExpression	""" %s=\\""%s\\"""""		10871629	0					
ANR	10871706	Argument	item -> atts [ i ]		10871629	1					
ANR	10871707	ArrayIndexing	item -> atts [ i ]		10871629	0					
ANR	10871708	PtrMemberAccess	item -> atts		10871629	0					
ANR	10871709	Identifier	item		10871629	0					
ANR	10871710	Identifier	atts		10871629	1					
ANR	10871711	Identifier	i		10871629	1					
ANR	10871712	Argument	item -> atts [ i + 1 ]		10871629	2					
ANR	10871713	ArrayIndexing	item -> atts [ i + 1 ]		10871629	0					
ANR	10871714	PtrMemberAccess	item -> atts		10871629	0					
ANR	10871715	Identifier	item		10871629	0					
ANR	10871716	Identifier	atts		10871629	1					
ANR	10871717	AdditiveExpression	i + 1		10871629	1		+			
ANR	10871718	Identifier	i		10871629	0					
ANR	10871719	PrimaryExpression	1		10871629	1					
ANR	10871720	IfStatement	if ( item -> down )		10871629	2					
ANR	10871721	Condition	item -> down	345:16:7465:7474	10871629	0	True				
ANR	10871722	PtrMemberAccess	item -> down		10871629	0					
ANR	10871723	Identifier	item		10871629	0					
ANR	10871724	Identifier	down		10871629	1					
ANR	10871725	CompoundStatement		18:12:370:370	10871629	1					
ANR	10871726	ExpressionStatement	"dlprintf ( "">\\n"" )"	347:16:7507:7522	10871629	0	True				
ANR	10871727	CallExpression	"dlprintf ( "">\\n"" )"		10871629	0					
ANR	10871728	Callee	dlprintf		10871629	0					
ANR	10871729	Identifier	dlprintf		10871629	0					
ANR	10871730	ArgumentList	""">\\n"""		10871629	1					
ANR	10871731	Argument	""">\\n"""		10871629	0					
ANR	10871732	PrimaryExpression	""">\\n"""		10871629	0					
ANR	10871733	ExpressionStatement	"xps_debug_item_imp ( item -> down , level + 1 , 1 )"	348:16:7540:7584	10871629	1	True				
ANR	10871734	CallExpression	"xps_debug_item_imp ( item -> down , level + 1 , 1 )"		10871629	0					
ANR	10871735	Callee	xps_debug_item_imp		10871629	0					
ANR	10871736	Identifier	xps_debug_item_imp		10871629	0					
ANR	10871737	ArgumentList	item -> down		10871629	1					
ANR	10871738	Argument	item -> down		10871629	0					
ANR	10871739	PtrMemberAccess	item -> down		10871629	0					
ANR	10871740	Identifier	item		10871629	0					
ANR	10871741	Identifier	down		10871629	1					
ANR	10871742	Argument	level + 1		10871629	1					
ANR	10871743	AdditiveExpression	level + 1		10871629	0		+			
ANR	10871744	Identifier	level		10871629	0					
ANR	10871745	PrimaryExpression	1		10871629	1					
ANR	10871746	Argument	1		10871629	2					
ANR	10871747	PrimaryExpression	1		10871629	0					
ANR	10871748	ExpressionStatement	indent ( level )	349:16:7602:7615	10871629	2	True				
ANR	10871749	CallExpression	indent ( level )		10871629	0					
ANR	10871750	Callee	indent		10871629	0					
ANR	10871751	Identifier	indent		10871629	0					
ANR	10871752	ArgumentList	level		10871629	1					
ANR	10871753	Argument	level		10871629	0					
ANR	10871754	Identifier	level		10871629	0					
ANR	10871755	ExpressionStatement	"dlprintf1 ( ""</%s>\\n"" , item -> name )"	350:16:7633:7665	10871629	3	True				
ANR	10871756	CallExpression	"dlprintf1 ( ""</%s>\\n"" , item -> name )"		10871629	0					
ANR	10871757	Callee	dlprintf1		10871629	0					
ANR	10871758	Identifier	dlprintf1		10871629	0					
ANR	10871759	ArgumentList	"""</%s>\\n"""		10871629	1					
ANR	10871760	Argument	"""</%s>\\n"""		10871629	0					
ANR	10871761	PrimaryExpression	"""</%s>\\n"""		10871629	0					
ANR	10871762	Argument	item -> name		10871629	1					
ANR	10871763	PtrMemberAccess	item -> name		10871629	0					
ANR	10871764	Identifier	item		10871629	0					
ANR	10871765	Identifier	name		10871629	1					
ANR	10871766	ElseStatement	else		10871629	0					
ANR	10871767	ExpressionStatement	"dlprintf ( "" />\\n"" )"	353:16:7714:7731	10871629	0	True				
ANR	10871768	CallExpression	"dlprintf ( "" />\\n"" )"		10871629	0					
ANR	10871769	Callee	dlprintf		10871629	0					
ANR	10871770	Identifier	dlprintf		10871629	0					
ANR	10871771	ArgumentList	""" />\\n"""		10871629	1					
ANR	10871772	Argument	""" />\\n"""		10871629	0					
ANR	10871773	PrimaryExpression	""" />\\n"""		10871629	0					
ANR	10871774	ExpressionStatement	item = item -> next	356:8:7752:7769	10871629	2	True				
ANR	10871775	AssignmentExpression	item = item -> next		10871629	0		=			
ANR	10871776	Identifier	item		10871629	0					
ANR	10871777	PtrMemberAccess	item -> next		10871629	1					
ANR	10871778	Identifier	item		10871629	0					
ANR	10871779	Identifier	next		10871629	1					
ANR	10871780	IfStatement	if ( ! loop )		10871629	3					
ANR	10871781	Condition	! loop	358:12:7784:7788	10871629	0	True				
ANR	10871782	UnaryOperationExpression	! loop		10871629	0					
ANR	10871783	UnaryOperator	!		10871629	0					
ANR	10871784	Identifier	loop		10871629	1					
ANR	10871785	ReturnStatement	return ;	359:12:7803:7809	10871629	1	True				
ANR	10871786	ReturnType	static void		10871629	1					
ANR	10871787	Identifier	xps_debug_item_imp		10871629	2					
ANR	10871788	ParameterList	"xps_item_t * item , int level , int loop"		10871629	3					
ANR	10871789	Parameter	xps_item_t * item	328:19:7079:7094	10871629	0	True				
ANR	10871790	ParameterType	xps_item_t *		10871629	0					
ANR	10871791	Identifier	item		10871629	1					
ANR	10871792	Parameter	int level	328:37:7097:7105	10871629	1	True				
ANR	10871793	ParameterType	int		10871629	0					
ANR	10871794	Identifier	level		10871629	1					
ANR	10871795	Parameter	int loop	328:48:7108:7115	10871629	2	True				
ANR	10871796	ParameterType	int		10871629	0					
ANR	10871797	Identifier	loop		10871629	1					
ANR	10871798	CFGEntryNode	ENTRY		10871629		True				
ANR	10871799	CFGExitNode	EXIT		10871629		True				
ANR	10871800	Symbol	item -> atts		10871629						
ANR	10871801	Symbol	item		10871629						
ANR	10871802	Symbol	level		10871629						
ANR	10871803	Symbol	* * item		10871629						
ANR	10871804	Symbol	i		10871629						
ANR	10871805	Symbol	item -> next		10871629						
ANR	10871806	Symbol	strlen		10871629						
ANR	10871807	Symbol	* item -> atts		10871629						
ANR	10871808	Symbol	* i		10871629						
ANR	10871809	Symbol	item -> down		10871629						
ANR	10871810	Symbol	loop		10871629						
ANR	10871811	Symbol	item -> name		10871629						
ANR	10871812	Symbol	* item		10871629						
ANR	10871813	Function	xps_debug_item	363:0:7820:7911							
ANR	10871814	FunctionDef	"xps_debug_item (xps_item_t * item , int level)"		10871813	0					
ANR	10871815	CompoundStatement		365:0:7869:7911	10871813	0					
ANR	10871816	ExpressionStatement	"xps_debug_item_imp ( item , level , 0 )"	366:4:7875:7909	10871813	0	True				
ANR	10871817	CallExpression	"xps_debug_item_imp ( item , level , 0 )"		10871813	0					
ANR	10871818	Callee	xps_debug_item_imp		10871813	0					
ANR	10871819	Identifier	xps_debug_item_imp		10871813	0					
ANR	10871820	ArgumentList	item		10871813	1					
ANR	10871821	Argument	item		10871813	0					
ANR	10871822	Identifier	item		10871813	0					
ANR	10871823	Argument	level		10871813	1					
ANR	10871824	Identifier	level		10871813	0					
ANR	10871825	Argument	0		10871813	2					
ANR	10871826	PrimaryExpression	0		10871813	0					
ANR	10871827	ReturnType	void		10871813	1					
ANR	10871828	Identifier	xps_debug_item		10871813	2					
ANR	10871829	ParameterList	"xps_item_t * item , int level"		10871813	3					
ANR	10871830	Parameter	xps_item_t * item	364:15:7840:7855	10871813	0	True				
ANR	10871831	ParameterType	xps_item_t *		10871813	0					
ANR	10871832	Identifier	item		10871813	1					
ANR	10871833	Parameter	int level	364:33:7858:7866	10871813	1	True				
ANR	10871834	ParameterType	int		10871813	0					
ANR	10871835	Identifier	level		10871813	1					
ANR	10871836	CFGEntryNode	ENTRY		10871813		True				
ANR	10871837	CFGExitNode	EXIT		10871813		True				
ANR	10871838	Symbol	item		10871813						
ANR	10871839	Symbol	level		10871813						
