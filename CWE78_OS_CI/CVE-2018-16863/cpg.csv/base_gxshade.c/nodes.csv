command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1225428	File	data/converged/CVE-2018-16863_ghostpdl/base_gxshade.c								
ANR	1225429	DeclStmt									
ANR	1225430	Decl							int	"int ( shade_coord_stream_t * , int , uint * )"	cs_next_packed_value
ANR	1225431	DeclStmt									
ANR	1225432	Decl							int	"int ( shade_coord_stream_t * , int , uint * )"	cs_next_array_value
ANR	1225433	DeclStmt									
ANR	1225434	Decl							int	"int ( shade_coord_stream_t * , int , const float [ 2 ] , float * )"	cs_next_packed_decoded
ANR	1225435	DeclStmt									
ANR	1225436	Decl							int	"int ( shade_coord_stream_t * , int , const float [ 2 ] , float * )"	cs_next_array_decoded
ANR	1225437	DeclStmt									
ANR	1225438	Decl							void	"void ( shade_coord_stream_t * cs , int radix )"	cs_packed_align
ANR	1225439	DeclStmt									
ANR	1225440	Decl							void	"void ( shade_coord_stream_t * cs , int radix )"	cs_array_align
ANR	1225441	DeclStmt									
ANR	1225442	Decl							bool	bool ( const shade_coord_stream_t * cs )	cs_eod
ANR	1225443	Function	shade_next_init	54:0:1862:3043							
ANR	1225444	FunctionDef	"shade_next_init (shade_coord_stream_t * cs , const gs_shading_mesh_params_t * params , const gs_gstate * pgs)"		1225443	0					
ANR	1225445	CompoundStatement		58:0:2006:3043	1225443	0					
ANR	1225446	ExpressionStatement	cs -> params = params	59:4:2012:2031	1225443	0	True				
ANR	1225447	AssignmentExpression	cs -> params = params		1225443	0		=			
ANR	1225448	PtrMemberAccess	cs -> params		1225443	0					
ANR	1225449	Identifier	cs		1225443	0					
ANR	1225450	Identifier	params		1225443	1					
ANR	1225451	Identifier	params		1225443	1					
ANR	1225452	ExpressionStatement	cs -> pctm = & pgs -> ctm	60:4:2037:2057	1225443	1	True				
ANR	1225453	AssignmentExpression	cs -> pctm = & pgs -> ctm		1225443	0		=			
ANR	1225454	PtrMemberAccess	cs -> pctm		1225443	0					
ANR	1225455	Identifier	cs		1225443	0					
ANR	1225456	Identifier	pctm		1225443	1					
ANR	1225457	UnaryOperationExpression	& pgs -> ctm		1225443	1					
ANR	1225458	UnaryOperator	&		1225443	0					
ANR	1225459	PtrMemberAccess	pgs -> ctm		1225443	1					
ANR	1225460	Identifier	pgs		1225443	0					
ANR	1225461	Identifier	ctm		1225443	1					
ANR	1225462	IfStatement	if ( data_source_is_stream ( params -> DataSource ) )		1225443	2					
ANR	1225463	Condition	data_source_is_stream ( params -> DataSource )	61:8:2067:2107	1225443	0	True				
ANR	1225464	CallExpression	data_source_is_stream ( params -> DataSource )		1225443	0					
ANR	1225465	Callee	data_source_is_stream		1225443	0					
ANR	1225466	Identifier	data_source_is_stream		1225443	0					
ANR	1225467	ArgumentList	params -> DataSource		1225443	1					
ANR	1225468	Argument	params -> DataSource		1225443	0					
ANR	1225469	PtrMemberAccess	params -> DataSource		1225443	0					
ANR	1225470	Identifier	params		1225443	0					
ANR	1225471	Identifier	DataSource		1225443	1					
ANR	1225472	CompoundStatement		9:8:248:296	1225443	1					
ANR	1225473	IdentifierDeclStatement	stream * s = cs -> s = params -> DataSource . data . strm ;	66:8:2255:2303	1225443	0	True				
ANR	1225474	IdentifierDecl	* s = cs -> s = params -> DataSource . data . strm		1225443	0					
ANR	1225475	IdentifierDeclType	stream *		1225443	0					
ANR	1225476	Identifier	s		1225443	1					
ANR	1225477	AssignmentExpression	* s = cs -> s = params -> DataSource . data . strm		1225443	2		=			
ANR	1225478	Identifier	s		1225443	0					
ANR	1225479	AssignmentExpression	cs -> s = params -> DataSource . data . strm		1225443	1		=			
ANR	1225480	PtrMemberAccess	cs -> s		1225443	0					
ANR	1225481	Identifier	cs		1225443	0					
ANR	1225482	Identifier	s		1225443	1					
ANR	1225483	MemberAccess	params -> DataSource . data . strm		1225443	1					
ANR	1225484	MemberAccess	params -> DataSource . data		1225443	0					
ANR	1225485	PtrMemberAccess	params -> DataSource		1225443	0					
ANR	1225486	Identifier	params		1225443	0					
ANR	1225487	Identifier	DataSource		1225443	1					
ANR	1225488	Identifier	data		1225443	1					
ANR	1225489	Identifier	strm		1225443	1					
ANR	1225490	IfStatement	if ( ( s -> file != 0 && s -> file_limit != max_long ) || ( s -> file == 0 && s -> strm == 0 ) )		1225443	1					
ANR	1225491	Condition	( s -> file != 0 && s -> file_limit != max_long ) || ( s -> file == 0 && s -> strm == 0 )	68:12:2318:2406	1225443	0	True				
ANR	1225492	OrExpression	( s -> file != 0 && s -> file_limit != max_long ) || ( s -> file == 0 && s -> strm == 0 )		1225443	0		||			
ANR	1225493	AndExpression	s -> file != 0 && s -> file_limit != max_long		1225443	0		&&			
ANR	1225494	EqualityExpression	s -> file != 0		1225443	0		!=			
ANR	1225495	PtrMemberAccess	s -> file		1225443	0					
ANR	1225496	Identifier	s		1225443	0					
ANR	1225497	Identifier	file		1225443	1					
ANR	1225498	PrimaryExpression	0		1225443	1					
ANR	1225499	EqualityExpression	s -> file_limit != max_long		1225443	1		!=			
ANR	1225500	PtrMemberAccess	s -> file_limit		1225443	0					
ANR	1225501	Identifier	s		1225443	0					
ANR	1225502	Identifier	file_limit		1225443	1					
ANR	1225503	Identifier	max_long		1225443	1					
ANR	1225504	AndExpression	s -> file == 0 && s -> strm == 0		1225443	1		&&			
ANR	1225505	EqualityExpression	s -> file == 0		1225443	0		==			
ANR	1225506	PtrMemberAccess	s -> file		1225443	0					
ANR	1225507	Identifier	s		1225443	0					
ANR	1225508	Identifier	file		1225443	1					
ANR	1225509	PrimaryExpression	0		1225443	1					
ANR	1225510	EqualityExpression	s -> strm == 0		1225443	1		==			
ANR	1225511	PtrMemberAccess	s -> strm		1225443	0					
ANR	1225512	Identifier	s		1225443	0					
ANR	1225513	Identifier	strm		1225443	1					
ANR	1225514	PrimaryExpression	0		1225443	1					
ANR	1225515	ExpressionStatement	"sseek ( s , 0 )"	71:12:2434:2445	1225443	1	True				
ANR	1225516	CallExpression	"sseek ( s , 0 )"		1225443	0					
ANR	1225517	Callee	sseek		1225443	0					
ANR	1225518	Identifier	sseek		1225443	0					
ANR	1225519	ArgumentList	s		1225443	1					
ANR	1225520	Argument	s		1225443	0					
ANR	1225521	Identifier	s		1225443	0					
ANR	1225522	Argument	0		1225443	1					
ANR	1225523	PrimaryExpression	0		1225443	0					
ANR	1225524	ElseStatement	else		1225443	0					
ANR	1225525	CompoundStatement		15:11:451:451	1225443	0					
ANR	1225526	ExpressionStatement	"s_init ( & cs -> ds , NULL )"	73:8:2468:2489	1225443	0	True				
ANR	1225527	CallExpression	"s_init ( & cs -> ds , NULL )"		1225443	0					
ANR	1225528	Callee	s_init		1225443	0					
ANR	1225529	Identifier	s_init		1225443	0					
ANR	1225530	ArgumentList	& cs -> ds		1225443	1					
ANR	1225531	Argument	& cs -> ds		1225443	0					
ANR	1225532	UnaryOperationExpression	& cs -> ds		1225443	0					
ANR	1225533	UnaryOperator	&		1225443	0					
ANR	1225534	PtrMemberAccess	cs -> ds		1225443	1					
ANR	1225535	Identifier	cs		1225443	0					
ANR	1225536	Identifier	ds		1225443	1					
ANR	1225537	Argument	NULL		1225443	1					
ANR	1225538	Identifier	NULL		1225443	0					
ANR	1225539	ExpressionStatement	"sread_string ( & cs -> ds , params -> DataSource . data . str . data , params -> DataSource . data . str . size )"	74:8:2499:2609	1225443	1	True				
ANR	1225540	CallExpression	"sread_string ( & cs -> ds , params -> DataSource . data . str . data , params -> DataSource . data . str . size )"		1225443	0					
ANR	1225541	Callee	sread_string		1225443	0					
ANR	1225542	Identifier	sread_string		1225443	0					
ANR	1225543	ArgumentList	& cs -> ds		1225443	1					
ANR	1225544	Argument	& cs -> ds		1225443	0					
ANR	1225545	UnaryOperationExpression	& cs -> ds		1225443	0					
ANR	1225546	UnaryOperator	&		1225443	0					
ANR	1225547	PtrMemberAccess	cs -> ds		1225443	1					
ANR	1225548	Identifier	cs		1225443	0					
ANR	1225549	Identifier	ds		1225443	1					
ANR	1225550	Argument	params -> DataSource . data . str . data		1225443	1					
ANR	1225551	MemberAccess	params -> DataSource . data . str . data		1225443	0					
ANR	1225552	MemberAccess	params -> DataSource . data . str		1225443	0					
ANR	1225553	MemberAccess	params -> DataSource . data		1225443	0					
ANR	1225554	PtrMemberAccess	params -> DataSource		1225443	0					
ANR	1225555	Identifier	params		1225443	0					
ANR	1225556	Identifier	DataSource		1225443	1					
ANR	1225557	Identifier	data		1225443	1					
ANR	1225558	Identifier	str		1225443	1					
ANR	1225559	Identifier	data		1225443	1					
ANR	1225560	Argument	params -> DataSource . data . str . size		1225443	2					
ANR	1225561	MemberAccess	params -> DataSource . data . str . size		1225443	0					
ANR	1225562	MemberAccess	params -> DataSource . data . str		1225443	0					
ANR	1225563	MemberAccess	params -> DataSource . data		1225443	0					
ANR	1225564	PtrMemberAccess	params -> DataSource		1225443	0					
ANR	1225565	Identifier	params		1225443	0					
ANR	1225566	Identifier	DataSource		1225443	1					
ANR	1225567	Identifier	data		1225443	1					
ANR	1225568	Identifier	str		1225443	1					
ANR	1225569	Identifier	size		1225443	1					
ANR	1225570	ExpressionStatement	cs -> s = & cs -> ds	76:8:2619:2634	1225443	2	True				
ANR	1225571	AssignmentExpression	cs -> s = & cs -> ds		1225443	0		=			
ANR	1225572	PtrMemberAccess	cs -> s		1225443	0					
ANR	1225573	Identifier	cs		1225443	0					
ANR	1225574	Identifier	s		1225443	1					
ANR	1225575	UnaryOperationExpression	& cs -> ds		1225443	1					
ANR	1225576	UnaryOperator	&		1225443	0					
ANR	1225577	PtrMemberAccess	cs -> ds		1225443	1					
ANR	1225578	Identifier	cs		1225443	0					
ANR	1225579	Identifier	ds		1225443	1					
ANR	1225580	IfStatement	if ( data_source_is_array ( params -> DataSource ) )		1225443	3					
ANR	1225581	Condition	data_source_is_array ( params -> DataSource )	78:8:2650:2689	1225443	0	True				
ANR	1225582	CallExpression	data_source_is_array ( params -> DataSource )		1225443	0					
ANR	1225583	Callee	data_source_is_array		1225443	0					
ANR	1225584	Identifier	data_source_is_array		1225443	0					
ANR	1225585	ArgumentList	params -> DataSource		1225443	1					
ANR	1225586	Argument	params -> DataSource		1225443	0					
ANR	1225587	PtrMemberAccess	params -> DataSource		1225443	0					
ANR	1225588	Identifier	params		1225443	0					
ANR	1225589	Identifier	DataSource		1225443	1					
ANR	1225590	CompoundStatement		21:50:685:685	1225443	1					
ANR	1225591	ExpressionStatement	cs -> get_value = cs_next_array_value	79:8:2702:2737	1225443	0	True				
ANR	1225592	AssignmentExpression	cs -> get_value = cs_next_array_value		1225443	0		=			
ANR	1225593	PtrMemberAccess	cs -> get_value		1225443	0					
ANR	1225594	Identifier	cs		1225443	0					
ANR	1225595	Identifier	get_value		1225443	1					
ANR	1225596	Identifier	cs_next_array_value		1225443	1					
ANR	1225597	ExpressionStatement	cs -> get_decoded = cs_next_array_decoded	80:8:2747:2786	1225443	1	True				
ANR	1225598	AssignmentExpression	cs -> get_decoded = cs_next_array_decoded		1225443	0		=			
ANR	1225599	PtrMemberAccess	cs -> get_decoded		1225443	0					
ANR	1225600	Identifier	cs		1225443	0					
ANR	1225601	Identifier	get_decoded		1225443	1					
ANR	1225602	Identifier	cs_next_array_decoded		1225443	1					
ANR	1225603	ExpressionStatement	cs -> align = cs_array_align	81:8:2796:2822	1225443	2	True				
ANR	1225604	AssignmentExpression	cs -> align = cs_array_align		1225443	0		=			
ANR	1225605	PtrMemberAccess	cs -> align		1225443	0					
ANR	1225606	Identifier	cs		1225443	0					
ANR	1225607	Identifier	align		1225443	1					
ANR	1225608	Identifier	cs_array_align		1225443	1					
ANR	1225609	ElseStatement	else		1225443	0					
ANR	1225610	CompoundStatement		25:11:828:828	1225443	0					
ANR	1225611	ExpressionStatement	cs -> get_value = cs_next_packed_value	83:8:2845:2881	1225443	0	True				
ANR	1225612	AssignmentExpression	cs -> get_value = cs_next_packed_value		1225443	0		=			
ANR	1225613	PtrMemberAccess	cs -> get_value		1225443	0					
ANR	1225614	Identifier	cs		1225443	0					
ANR	1225615	Identifier	get_value		1225443	1					
ANR	1225616	Identifier	cs_next_packed_value		1225443	1					
ANR	1225617	ExpressionStatement	cs -> get_decoded = cs_next_packed_decoded	84:8:2891:2931	1225443	1	True				
ANR	1225618	AssignmentExpression	cs -> get_decoded = cs_next_packed_decoded		1225443	0		=			
ANR	1225619	PtrMemberAccess	cs -> get_decoded		1225443	0					
ANR	1225620	Identifier	cs		1225443	0					
ANR	1225621	Identifier	get_decoded		1225443	1					
ANR	1225622	Identifier	cs_next_packed_decoded		1225443	1					
ANR	1225623	ExpressionStatement	cs -> align = cs_packed_align	85:8:2941:2968	1225443	2	True				
ANR	1225624	AssignmentExpression	cs -> align = cs_packed_align		1225443	0		=			
ANR	1225625	PtrMemberAccess	cs -> align		1225443	0					
ANR	1225626	Identifier	cs		1225443	0					
ANR	1225627	Identifier	align		1225443	1					
ANR	1225628	Identifier	cs_packed_align		1225443	1					
ANR	1225629	ExpressionStatement	cs -> is_eod = cs_eod	87:4:2980:2999	1225443	4	True				
ANR	1225630	AssignmentExpression	cs -> is_eod = cs_eod		1225443	0		=			
ANR	1225631	PtrMemberAccess	cs -> is_eod		1225443	0					
ANR	1225632	Identifier	cs		1225443	0					
ANR	1225633	Identifier	is_eod		1225443	1					
ANR	1225634	Identifier	cs_eod		1225443	1					
ANR	1225635	ExpressionStatement	cs -> left = 0	88:4:3005:3017	1225443	5	True				
ANR	1225636	AssignmentExpression	cs -> left = 0		1225443	0		=			
ANR	1225637	PtrMemberAccess	cs -> left		1225443	0					
ANR	1225638	Identifier	cs		1225443	0					
ANR	1225639	Identifier	left		1225443	1					
ANR	1225640	PrimaryExpression	0		1225443	1					
ANR	1225641	ExpressionStatement	cs -> ds_EOF = false	89:4:3023:3041	1225443	6	True				
ANR	1225642	AssignmentExpression	cs -> ds_EOF = false		1225443	0		=			
ANR	1225643	PtrMemberAccess	cs -> ds_EOF		1225443	0					
ANR	1225644	Identifier	cs		1225443	0					
ANR	1225645	Identifier	ds_EOF		1225443	1					
ANR	1225646	Identifier	false		1225443	1					
ANR	1225647	ReturnType	void		1225443	1					
ANR	1225648	Identifier	shade_next_init		1225443	2					
ANR	1225649	ParameterList	"shade_coord_stream_t * cs , const gs_shading_mesh_params_t * params , const gs_gstate * pgs"		1225443	3					
ANR	1225650	Parameter	shade_coord_stream_t * cs	55:16:1883:1907	1225443	0	True				
ANR	1225651	ParameterType	shade_coord_stream_t *		1225443	0					
ANR	1225652	Identifier	cs		1225443	1					
ANR	1225653	Parameter	const gs_shading_mesh_params_t * params	56:16:1926:1964	1225443	1	True				
ANR	1225654	ParameterType	const gs_shading_mesh_params_t *		1225443	0					
ANR	1225655	Identifier	params		1225443	1					
ANR	1225656	Parameter	const gs_gstate * pgs	57:16:1983:2003	1225443	2	True				
ANR	1225657	ParameterType	const gs_gstate *		1225443	0					
ANR	1225658	Identifier	pgs		1225443	1					
ANR	1225659	CFGEntryNode	ENTRY		1225443		True				
ANR	1225660	CFGExitNode	EXIT		1225443		True				
ANR	1225661	Symbol	params -> DataSource . data		1225443						
ANR	1225662	Symbol	cs -> params		1225443						
ANR	1225663	Symbol	s -> file		1225443						
ANR	1225664	Symbol	cs_packed_align		1225443						
ANR	1225665	Symbol	params -> DataSource . data . strm		1225443						
ANR	1225666	Symbol	data_source_is_array		1225443						
ANR	1225667	Symbol	cs -> pctm		1225443						
ANR	1225668	Symbol	s -> file_limit		1225443						
ANR	1225669	Symbol	& cs -> ds		1225443						
ANR	1225670	Symbol	cs -> ds_EOF		1225443						
ANR	1225671	Symbol	cs_next_packed_value		1225443						
ANR	1225672	Symbol	params -> DataSource . data . str . data		1225443						
ANR	1225673	Symbol	cs_next_array_decoded		1225443						
ANR	1225674	Symbol	cs_next_array_value		1225443						
ANR	1225675	Symbol	cs_eod		1225443						
ANR	1225676	Symbol	pgs		1225443						
ANR	1225677	Symbol	params -> DataSource		1225443						
ANR	1225678	Symbol	cs -> get_decoded		1225443						
ANR	1225679	Symbol	* params		1225443						
ANR	1225680	Symbol	s -> strm		1225443						
ANR	1225681	Symbol	cs -> left		1225443						
ANR	1225682	Symbol	NULL		1225443						
ANR	1225683	Symbol	data_source_is_stream		1225443						
ANR	1225684	Symbol	params -> DataSource . data . str . size		1225443						
ANR	1225685	Symbol	cs -> is_eod		1225443						
ANR	1225686	Symbol	params -> DataSource . data . str		1225443						
ANR	1225687	Symbol	false		1225443						
ANR	1225688	Symbol	cs -> s		1225443						
ANR	1225689	Symbol	cs -> get_value		1225443						
ANR	1225690	Symbol	params		1225443						
ANR	1225691	Symbol	cs		1225443						
ANR	1225692	Symbol	s		1225443						
ANR	1225693	Symbol	* cs		1225443						
ANR	1225694	Symbol	max_long		1225443						
ANR	1225695	Symbol	& pgs -> ctm		1225443						
ANR	1225696	Symbol	cs_array_align		1225443						
ANR	1225697	Symbol	cs_next_packed_decoded		1225443						
ANR	1225698	Symbol	* s		1225443						
ANR	1225699	Symbol	cs -> align		1225443						
ANR	1225700	Function	cs_eod	93:0:3099:3176							
ANR	1225701	FunctionDef	cs_eod (const shade_coord_stream_t * cs)		1225700	0					
ANR	1225702	CompoundStatement		95:0:3151:3176	1225700	0					
ANR	1225703	ReturnStatement	return cs -> ds_EOF ;	96:4:3157:3174	1225700	0	True				
ANR	1225704	PtrMemberAccess	cs -> ds_EOF		1225700	0					
ANR	1225705	Identifier	cs		1225700	0					
ANR	1225706	Identifier	ds_EOF		1225700	1					
ANR	1225707	ReturnType	static bool		1225700	1					
ANR	1225708	Identifier	cs_eod		1225700	2					
ANR	1225709	ParameterList	const shade_coord_stream_t * cs		1225700	3					
ANR	1225710	Parameter	const shade_coord_stream_t * cs	94:7:3118:3148	1225700	0	True				
ANR	1225711	ParameterType	const shade_coord_stream_t *		1225700	0					
ANR	1225712	Identifier	cs		1225700	1					
ANR	1225713	CFGEntryNode	ENTRY		1225700		True				
ANR	1225714	CFGExitNode	EXIT		1225700		True				
ANR	1225715	Symbol	cs		1225700						
ANR	1225716	Symbol	cs -> ds_EOF		1225700						
ANR	1225717	Symbol	* cs		1225700						
ANR	1225718	Function	cs_next_packed_value	101:0:3283:4446							
ANR	1225719	FunctionDef	"cs_next_packed_value (shade_coord_stream_t * cs , int num_bits , uint * pvalue)"		1225718	0					
ANR	1225720	CompoundStatement		103:0:3371:4446	1225718	0					
ANR	1225721	IdentifierDeclStatement	uint bits = cs -> bits ;	104:4:3377:3397	1225718	0	True				
ANR	1225722	IdentifierDecl	bits = cs -> bits		1225718	0					
ANR	1225723	IdentifierDeclType	uint		1225718	0					
ANR	1225724	Identifier	bits		1225718	1					
ANR	1225725	AssignmentExpression	bits = cs -> bits		1225718	2		=			
ANR	1225726	Identifier	bits		1225718	0					
ANR	1225727	PtrMemberAccess	cs -> bits		1225718	1					
ANR	1225728	Identifier	cs		1225718	0					
ANR	1225729	Identifier	bits		1225718	1					
ANR	1225730	IdentifierDeclStatement	int left = cs -> left ;	105:4:3403:3422	1225718	1	True				
ANR	1225731	IdentifierDecl	left = cs -> left		1225718	0					
ANR	1225732	IdentifierDeclType	int		1225718	0					
ANR	1225733	Identifier	left		1225718	1					
ANR	1225734	AssignmentExpression	left = cs -> left		1225718	2		=			
ANR	1225735	Identifier	left		1225718	0					
ANR	1225736	PtrMemberAccess	cs -> left		1225718	1					
ANR	1225737	Identifier	cs		1225718	0					
ANR	1225738	Identifier	left		1225718	1					
ANR	1225739	IfStatement	if ( left >= num_bits )		1225718	2					
ANR	1225740	Condition	left >= num_bits	107:8:3433:3448	1225718	0	True				
ANR	1225741	RelationalExpression	left >= num_bits		1225718	0		>=			
ANR	1225742	Identifier	left		1225718	0					
ANR	1225743	Identifier	num_bits		1225718	1					
ANR	1225744	CompoundStatement		5:26:79:79	1225718	1					
ANR	1225745	ExpressionStatement	cs -> left = left -= num_bits	109:8:3535:3562	1225718	0	True				
ANR	1225746	AssignmentExpression	cs -> left = left -= num_bits		1225718	0		=			
ANR	1225747	PtrMemberAccess	cs -> left		1225718	0					
ANR	1225748	Identifier	cs		1225718	0					
ANR	1225749	Identifier	left		1225718	1					
ANR	1225750	AssignmentExpression	left -= num_bits		1225718	1		-=			
ANR	1225751	Identifier	left		1225718	0					
ANR	1225752	Identifier	num_bits		1225718	1					
ANR	1225753	ExpressionStatement	* pvalue = ( bits >> left ) & ( ( 1 << num_bits ) - 1 )	110:8:3572:3620	1225718	1	True				
ANR	1225754	AssignmentExpression	* pvalue = ( bits >> left ) & ( ( 1 << num_bits ) - 1 )		1225718	0		=			
ANR	1225755	UnaryOperationExpression	* pvalue		1225718	0					
ANR	1225756	UnaryOperator	*		1225718	0					
ANR	1225757	Identifier	pvalue		1225718	1					
ANR	1225758	BitAndExpression	( bits >> left ) & ( ( 1 << num_bits ) - 1 )		1225718	1		&			
ANR	1225759	ShiftExpression	bits >> left		1225718	0		>>			
ANR	1225760	Identifier	bits		1225718	0					
ANR	1225761	Identifier	left		1225718	1					
ANR	1225762	AdditiveExpression	( 1 << num_bits ) - 1		1225718	1		-			
ANR	1225763	ShiftExpression	1 << num_bits		1225718	0		<<			
ANR	1225764	PrimaryExpression	1		1225718	0					
ANR	1225765	Identifier	num_bits		1225718	1					
ANR	1225766	PrimaryExpression	1		1225718	1					
ANR	1225767	ElseStatement	else		1225718	0					
ANR	1225768	CompoundStatement		12:8:342:379	1225718	0					
ANR	1225769	IdentifierDeclStatement	int needed = num_bits - left ;	113:8:3676:3704	1225718	0	True				
ANR	1225770	IdentifierDecl	needed = num_bits - left		1225718	0					
ANR	1225771	IdentifierDeclType	int		1225718	0					
ANR	1225772	Identifier	needed		1225718	1					
ANR	1225773	AssignmentExpression	needed = num_bits - left		1225718	2		=			
ANR	1225774	Identifier	needed		1225718	0					
ANR	1225775	AdditiveExpression	num_bits - left		1225718	1		-			
ANR	1225776	Identifier	num_bits		1225718	0					
ANR	1225777	Identifier	left		1225718	1					
ANR	1225778	IdentifierDeclStatement	uint value = bits & ( ( 1 << left ) - 1 ) ;	114:8:3714:3751	1225718	1	True				
ANR	1225779	IdentifierDecl	value = bits & ( ( 1 << left ) - 1 )		1225718	0					
ANR	1225780	IdentifierDeclType	uint		1225718	0					
ANR	1225781	Identifier	value		1225718	1					
ANR	1225782	AssignmentExpression	value = bits & ( ( 1 << left ) - 1 )		1225718	2		=			
ANR	1225783	Identifier	value		1225718	0					
ANR	1225784	BitAndExpression	bits & ( ( 1 << left ) - 1 )		1225718	1		&			
ANR	1225785	Identifier	bits		1225718	0					
ANR	1225786	AdditiveExpression	( 1 << left ) - 1		1225718	1		-			
ANR	1225787	ShiftExpression	1 << left		1225718	0		<<			
ANR	1225788	PrimaryExpression	1		1225718	0					
ANR	1225789	Identifier	left		1225718	1					
ANR	1225790	PrimaryExpression	1		1225718	1					
ANR	1225791	ForStatement	for ( ; needed >= 8 ; needed -= 8 )		1225718	2					
ANR	1225792	Condition	needed >= 8	116:15:3798:3808	1225718	0	True				
ANR	1225793	RelationalExpression	needed >= 8		1225718	0		>=			
ANR	1225794	Identifier	needed		1225718	0					
ANR	1225795	PrimaryExpression	8		1225718	1					
ANR	1225796	AssignmentExpression	needed -= 8	116:28:3811:3821	1225718	1	True	-=			
ANR	1225797	Identifier	needed		1225718	0					
ANR	1225798	PrimaryExpression	8		1225718	1					
ANR	1225799	CompoundStatement		15:12:466:486	1225718	2					
ANR	1225800	IdentifierDeclStatement	int b = sgetc ( cs -> s ) ;	117:12:3838:3858	1225718	0	True				
ANR	1225801	IdentifierDecl	b = sgetc ( cs -> s )		1225718	0					
ANR	1225802	IdentifierDeclType	int		1225718	0					
ANR	1225803	Identifier	b		1225718	1					
ANR	1225804	AssignmentExpression	b = sgetc ( cs -> s )		1225718	2		=			
ANR	1225805	Identifier	b		1225718	0					
ANR	1225806	CallExpression	sgetc ( cs -> s )		1225718	1					
ANR	1225807	Callee	sgetc		1225718	0					
ANR	1225808	Identifier	sgetc		1225718	0					
ANR	1225809	ArgumentList	cs -> s		1225718	1					
ANR	1225810	Argument	cs -> s		1225718	0					
ANR	1225811	PtrMemberAccess	cs -> s		1225718	0					
ANR	1225812	Identifier	cs		1225718	0					
ANR	1225813	Identifier	s		1225718	1					
ANR	1225814	IfStatement	if ( b < 0 )		1225718	1					
ANR	1225815	Condition	b < 0	119:16:3877:3881	1225718	0	True				
ANR	1225816	RelationalExpression	b < 0		1225718	0		<			
ANR	1225817	Identifier	b		1225718	0					
ANR	1225818	PrimaryExpression	0		1225718	1					
ANR	1225819	CompoundStatement		17:23:512:512	1225718	1					
ANR	1225820	ExpressionStatement	cs -> ds_EOF = true	120:16:3902:3919	1225718	0	True				
ANR	1225821	AssignmentExpression	cs -> ds_EOF = true		1225718	0		=			
ANR	1225822	PtrMemberAccess	cs -> ds_EOF		1225718	0					
ANR	1225823	Identifier	cs		1225718	0					
ANR	1225824	Identifier	ds_EOF		1225718	1					
ANR	1225825	Identifier	true		1225718	1					
ANR	1225826	ExpressionStatement	return_error ( gs_error_rangecheck )	121:16:3937:3970	1225718	1	True				
ANR	1225827	CallExpression	return_error ( gs_error_rangecheck )		1225718	0					
ANR	1225828	Callee	return_error		1225718	0					
ANR	1225829	Identifier	return_error		1225718	0					
ANR	1225830	ArgumentList	gs_error_rangecheck		1225718	1					
ANR	1225831	Argument	gs_error_rangecheck		1225718	0					
ANR	1225832	Identifier	gs_error_rangecheck		1225718	0					
ANR	1225833	ExpressionStatement	value = ( value << 8 ) + b	123:12:3998:4022	1225718	2	True				
ANR	1225834	AssignmentExpression	value = ( value << 8 ) + b		1225718	0		=			
ANR	1225835	Identifier	value		1225718	0					
ANR	1225836	AdditiveExpression	( value << 8 ) + b		1225718	1		+			
ANR	1225837	ShiftExpression	value << 8		1225718	0		<<			
ANR	1225838	Identifier	value		1225718	0					
ANR	1225839	PrimaryExpression	8		1225718	1					
ANR	1225840	Identifier	b		1225718	1					
ANR	1225841	IfStatement	if ( needed == 0 )		1225718	3					
ANR	1225842	Condition	needed == 0	125:12:4046:4056	1225718	0	True				
ANR	1225843	EqualityExpression	needed == 0		1225718	0		==			
ANR	1225844	Identifier	needed		1225718	0					
ANR	1225845	PrimaryExpression	0		1225718	1					
ANR	1225846	CompoundStatement		23:25:687:687	1225718	1					
ANR	1225847	ExpressionStatement	cs -> left = 0	126:12:4073:4085	1225718	0	True				
ANR	1225848	AssignmentExpression	cs -> left = 0		1225718	0		=			
ANR	1225849	PtrMemberAccess	cs -> left		1225718	0					
ANR	1225850	Identifier	cs		1225718	0					
ANR	1225851	Identifier	left		1225718	1					
ANR	1225852	PrimaryExpression	0		1225718	1					
ANR	1225853	ExpressionStatement	* pvalue = value	127:12:4099:4114	1225718	1	True				
ANR	1225854	AssignmentExpression	* pvalue = value		1225718	0		=			
ANR	1225855	UnaryOperationExpression	* pvalue		1225718	0					
ANR	1225856	UnaryOperator	*		1225718	0					
ANR	1225857	Identifier	pvalue		1225718	1					
ANR	1225858	Identifier	value		1225718	1					
ANR	1225859	ElseStatement	else		1225718	0					
ANR	1225860	CompoundStatement		27:12:773:793	1225718	0					
ANR	1225861	IdentifierDeclStatement	int b = sgetc ( cs -> s ) ;	129:12:4145:4165	1225718	0	True				
ANR	1225862	IdentifierDecl	b = sgetc ( cs -> s )		1225718	0					
ANR	1225863	IdentifierDeclType	int		1225718	0					
ANR	1225864	Identifier	b		1225718	1					
ANR	1225865	AssignmentExpression	b = sgetc ( cs -> s )		1225718	2		=			
ANR	1225866	Identifier	b		1225718	0					
ANR	1225867	CallExpression	sgetc ( cs -> s )		1225718	1					
ANR	1225868	Callee	sgetc		1225718	0					
ANR	1225869	Identifier	sgetc		1225718	0					
ANR	1225870	ArgumentList	cs -> s		1225718	1					
ANR	1225871	Argument	cs -> s		1225718	0					
ANR	1225872	PtrMemberAccess	cs -> s		1225718	0					
ANR	1225873	Identifier	cs		1225718	0					
ANR	1225874	Identifier	s		1225718	1					
ANR	1225875	IfStatement	if ( b < 0 )		1225718	1					
ANR	1225876	Condition	b < 0	131:16:4184:4188	1225718	0	True				
ANR	1225877	RelationalExpression	b < 0		1225718	0		<			
ANR	1225878	Identifier	b		1225718	0					
ANR	1225879	PrimaryExpression	0		1225718	1					
ANR	1225880	CompoundStatement		29:23:819:819	1225718	1					
ANR	1225881	ExpressionStatement	cs -> ds_EOF = true	132:16:4209:4226	1225718	0	True				
ANR	1225882	AssignmentExpression	cs -> ds_EOF = true		1225718	0		=			
ANR	1225883	PtrMemberAccess	cs -> ds_EOF		1225718	0					
ANR	1225884	Identifier	cs		1225718	0					
ANR	1225885	Identifier	ds_EOF		1225718	1					
ANR	1225886	Identifier	true		1225718	1					
ANR	1225887	ExpressionStatement	return_error ( gs_error_rangecheck )	133:16:4244:4277	1225718	1	True				
ANR	1225888	CallExpression	return_error ( gs_error_rangecheck )		1225718	0					
ANR	1225889	Callee	return_error		1225718	0					
ANR	1225890	Identifier	return_error		1225718	0					
ANR	1225891	ArgumentList	gs_error_rangecheck		1225718	1					
ANR	1225892	Argument	gs_error_rangecheck		1225718	0					
ANR	1225893	Identifier	gs_error_rangecheck		1225718	0					
ANR	1225894	ExpressionStatement	cs -> bits = b	135:12:4305:4317	1225718	2	True				
ANR	1225895	AssignmentExpression	cs -> bits = b		1225718	0		=			
ANR	1225896	PtrMemberAccess	cs -> bits		1225718	0					
ANR	1225897	Identifier	cs		1225718	0					
ANR	1225898	Identifier	bits		1225718	1					
ANR	1225899	Identifier	b		1225718	1					
ANR	1225900	ExpressionStatement	cs -> left = left = 8 - needed	136:12:4331:4359	1225718	3	True				
ANR	1225901	AssignmentExpression	cs -> left = left = 8 - needed		1225718	0		=			
ANR	1225902	PtrMemberAccess	cs -> left		1225718	0					
ANR	1225903	Identifier	cs		1225718	0					
ANR	1225904	Identifier	left		1225718	1					
ANR	1225905	AssignmentExpression	left = 8 - needed		1225718	1		=			
ANR	1225906	Identifier	left		1225718	0					
ANR	1225907	AdditiveExpression	8 - needed		1225718	1		-			
ANR	1225908	PrimaryExpression	8		1225718	0					
ANR	1225909	Identifier	needed		1225718	1					
ANR	1225910	ExpressionStatement	* pvalue = ( value << needed ) + ( b >> left )	137:12:4373:4414	1225718	4	True				
ANR	1225911	AssignmentExpression	* pvalue = ( value << needed ) + ( b >> left )		1225718	0		=			
ANR	1225912	UnaryOperationExpression	* pvalue		1225718	0					
ANR	1225913	UnaryOperator	*		1225718	0					
ANR	1225914	Identifier	pvalue		1225718	1					
ANR	1225915	AdditiveExpression	( value << needed ) + ( b >> left )		1225718	1		+			
ANR	1225916	ShiftExpression	value << needed		1225718	0		<<			
ANR	1225917	Identifier	value		1225718	0					
ANR	1225918	Identifier	needed		1225718	1					
ANR	1225919	ShiftExpression	b >> left		1225718	1		>>			
ANR	1225920	Identifier	b		1225718	0					
ANR	1225921	Identifier	left		1225718	1					
ANR	1225922	ReturnStatement	return 0 ;	140:4:4436:4444	1225718	3	True				
ANR	1225923	PrimaryExpression	0		1225718	0					
ANR	1225924	ReturnType	static int		1225718	1					
ANR	1225925	Identifier	cs_next_packed_value		1225718	2					
ANR	1225926	ParameterList	"shade_coord_stream_t * cs , int num_bits , uint * pvalue"		1225718	3					
ANR	1225927	Parameter	shade_coord_stream_t * cs	102:21:3315:3339	1225718	0	True				
ANR	1225928	ParameterType	shade_coord_stream_t *		1225718	0					
ANR	1225929	Identifier	cs		1225718	1					
ANR	1225930	Parameter	int num_bits	102:48:3342:3353	1225718	1	True				
ANR	1225931	ParameterType	int		1225718	0					
ANR	1225932	Identifier	num_bits		1225718	1					
ANR	1225933	Parameter	uint * pvalue	102:62:3356:3368	1225718	2	True				
ANR	1225934	ParameterType	uint *		1225718	0					
ANR	1225935	Identifier	pvalue		1225718	1					
ANR	1225936	CFGEntryNode	ENTRY		1225718		True				
ANR	1225937	CFGExitNode	EXIT		1225718		True				
ANR	1225938	Symbol	cs -> left		1225718						
ANR	1225939	Symbol	b		1225718						
ANR	1225940	Symbol	sgetc		1225718						
ANR	1225941	Symbol	gs_error_rangecheck		1225718						
ANR	1225942	Symbol	cs -> bits		1225718						
ANR	1225943	Symbol	needed		1225718						
ANR	1225944	Symbol	bits		1225718						
ANR	1225945	Symbol	pvalue		1225718						
ANR	1225946	Symbol	cs -> s		1225718						
ANR	1225947	Symbol	cs		1225718						
ANR	1225948	Symbol	cs -> ds_EOF		1225718						
ANR	1225949	Symbol	* pvalue		1225718						
ANR	1225950	Symbol	* cs		1225718						
ANR	1225951	Symbol	left		1225718						
ANR	1225952	Symbol	true		1225718						
ANR	1225953	Symbol	num_bits		1225718						
ANR	1225954	Symbol	value		1225718						
ANR	1225955	Function	cs_next_array_value	147:0:4591:5120							
ANR	1225956	FunctionDef	"cs_next_array_value (shade_coord_stream_t * cs , int num_bits , uint * pvalue)"		1225955	0					
ANR	1225957	CompoundStatement		149:0:4678:5120	1225955	0					
ANR	1225958	IdentifierDeclStatement	float value ;	150:4:4684:4695	1225955	0	True				
ANR	1225959	IdentifierDecl	value		1225955	0					
ANR	1225960	IdentifierDeclType	float		1225955	0					
ANR	1225961	Identifier	value		1225955	1					
ANR	1225962	IdentifierDeclStatement	uint read ;	151:4:4701:4710	1225955	1	True				
ANR	1225963	IdentifierDecl	read		1225955	0					
ANR	1225964	IdentifierDeclType	uint		1225955	0					
ANR	1225965	Identifier	read		1225955	1					
ANR	1225966	IfStatement	"if ( sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0 || read != sizeof ( float ) )"		1225955	2					
ANR	1225967	Condition	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0 || read != sizeof ( float )"	153:8:4721:4807	1225955	0	True				
ANR	1225968	OrExpression	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0 || read != sizeof ( float )"		1225955	0		||			
ANR	1225969	RelationalExpression	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0"		1225955	0		<			
ANR	1225970	CallExpression	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read )"		1225955	0					
ANR	1225971	Callee	sgets		1225955	0					
ANR	1225972	Identifier	sgets		1225955	0					
ANR	1225973	ArgumentList	cs -> s		1225955	1					
ANR	1225974	Argument	cs -> s		1225955	0					
ANR	1225975	PtrMemberAccess	cs -> s		1225955	0					
ANR	1225976	Identifier	cs		1225955	0					
ANR	1225977	Identifier	s		1225955	1					
ANR	1225978	Argument	( byte * ) & value		1225955	1					
ANR	1225979	CastExpression	( byte * ) & value		1225955	0					
ANR	1225980	CastTarget	byte *		1225955	0					
ANR	1225981	UnaryOperationExpression	& value		1225955	1					
ANR	1225982	UnaryOperator	&		1225955	0					
ANR	1225983	Identifier	value		1225955	1					
ANR	1225984	Argument	sizeof ( float )		1225955	2					
ANR	1225985	SizeofExpression	sizeof ( float )		1225955	0					
ANR	1225986	Sizeof	sizeof		1225955	0					
ANR	1225987	SizeofOperand	float		1225955	1					
ANR	1225988	Argument	& read		1225955	3					
ANR	1225989	UnaryOperationExpression	& read		1225955	0					
ANR	1225990	UnaryOperator	&		1225955	0					
ANR	1225991	Identifier	read		1225955	1					
ANR	1225992	PrimaryExpression	0		1225955	1					
ANR	1225993	EqualityExpression	read != sizeof ( float )		1225955	1		!=			
ANR	1225994	Identifier	read		1225955	0					
ANR	1225995	SizeofExpression	sizeof ( float )		1225955	1					
ANR	1225996	Sizeof	sizeof		1225955	0					
ANR	1225997	SizeofOperand	float		1225955	1					
ANR	1225998	CompoundStatement		6:31:131:131	1225955	1					
ANR	1225999	ExpressionStatement	cs -> ds_EOF = true	155:8:4820:4837	1225955	0	True				
ANR	1226000	AssignmentExpression	cs -> ds_EOF = true		1225955	0		=			
ANR	1226001	PtrMemberAccess	cs -> ds_EOF		1225955	0					
ANR	1226002	Identifier	cs		1225955	0					
ANR	1226003	Identifier	ds_EOF		1225955	1					
ANR	1226004	Identifier	true		1225955	1					
ANR	1226005	ExpressionStatement	return_error ( gs_error_rangecheck )	156:8:4847:4880	1225955	1	True				
ANR	1226006	CallExpression	return_error ( gs_error_rangecheck )		1225955	0					
ANR	1226007	Callee	return_error		1225955	0					
ANR	1226008	Identifier	return_error		1225955	0					
ANR	1226009	ArgumentList	gs_error_rangecheck		1225955	1					
ANR	1226010	Argument	gs_error_rangecheck		1225955	0					
ANR	1226011	Identifier	gs_error_rangecheck		1225955	0					
ANR	1226012	IfStatement	if ( value < 0 || ( num_bits != 0 && num_bits < sizeof ( uint ) * 8 && value >= ( 1 << num_bits ) ) || value != ( uint ) value )		1225955	3					
ANR	1226013	Condition	value < 0 || ( num_bits != 0 && num_bits < sizeof ( uint ) * 8 && value >= ( 1 << num_bits ) ) || value != ( uint ) value	158:8:4896:5023	1225955	0	True				
ANR	1226014	OrExpression	value < 0 || ( num_bits != 0 && num_bits < sizeof ( uint ) * 8 && value >= ( 1 << num_bits ) ) || value != ( uint ) value		1225955	0		||			
ANR	1226015	RelationalExpression	value < 0		1225955	0		<			
ANR	1226016	Identifier	value		1225955	0					
ANR	1226017	PrimaryExpression	0		1225955	1					
ANR	1226018	OrExpression	( num_bits != 0 && num_bits < sizeof ( uint ) * 8 && value >= ( 1 << num_bits ) ) || value != ( uint ) value		1225955	1		||			
ANR	1226019	AndExpression	num_bits != 0 && num_bits < sizeof ( uint ) * 8 && value >= ( 1 << num_bits )		1225955	0		&&			
ANR	1226020	EqualityExpression	num_bits != 0		1225955	0		!=			
ANR	1226021	Identifier	num_bits		1225955	0					
ANR	1226022	PrimaryExpression	0		1225955	1					
ANR	1226023	AndExpression	num_bits < sizeof ( uint ) * 8 && value >= ( 1 << num_bits )		1225955	1		&&			
ANR	1226024	RelationalExpression	num_bits < sizeof ( uint ) * 8		1225955	0		<			
ANR	1226025	Identifier	num_bits		1225955	0					
ANR	1226026	MultiplicativeExpression	sizeof ( uint ) * 8		1225955	1		*			
ANR	1226027	SizeofExpression	sizeof ( uint )		1225955	0					
ANR	1226028	Sizeof	sizeof		1225955	0					
ANR	1226029	SizeofOperand	uint		1225955	1					
ANR	1226030	PrimaryExpression	8		1225955	1					
ANR	1226031	RelationalExpression	value >= ( 1 << num_bits )		1225955	1		>=			
ANR	1226032	Identifier	value		1225955	0					
ANR	1226033	ShiftExpression	1 << num_bits		1225955	1		<<			
ANR	1226034	PrimaryExpression	1		1225955	0					
ANR	1226035	Identifier	num_bits		1225955	1					
ANR	1226036	EqualityExpression	value != ( uint ) value		1225955	1		!=			
ANR	1226037	Identifier	value		1225955	0					
ANR	1226038	CastExpression	( uint ) value		1225955	1					
ANR	1226039	CastTarget	uint		1225955	0					
ANR	1226040	Identifier	value		1225955	1					
ANR	1226041	ExpressionStatement	return_error ( gs_error_rangecheck )	162:8:5043:5076	1225955	1	True				
ANR	1226042	CallExpression	return_error ( gs_error_rangecheck )		1225955	0					
ANR	1226043	Callee	return_error		1225955	0					
ANR	1226044	Identifier	return_error		1225955	0					
ANR	1226045	ArgumentList	gs_error_rangecheck		1225955	1					
ANR	1226046	Argument	gs_error_rangecheck		1225955	0					
ANR	1226047	Identifier	gs_error_rangecheck		1225955	0					
ANR	1226048	ExpressionStatement	* pvalue = ( uint ) value	163:4:5082:5104	1225955	4	True				
ANR	1226049	AssignmentExpression	* pvalue = ( uint ) value		1225955	0		=			
ANR	1226050	UnaryOperationExpression	* pvalue		1225955	0					
ANR	1226051	UnaryOperator	*		1225955	0					
ANR	1226052	Identifier	pvalue		1225955	1					
ANR	1226053	CastExpression	( uint ) value		1225955	1					
ANR	1226054	CastTarget	uint		1225955	0					
ANR	1226055	Identifier	value		1225955	1					
ANR	1226056	ReturnStatement	return 0 ;	164:4:5110:5118	1225955	5	True				
ANR	1226057	PrimaryExpression	0		1225955	0					
ANR	1226058	ReturnType	static int		1225955	1					
ANR	1226059	Identifier	cs_next_array_value		1225955	2					
ANR	1226060	ParameterList	"shade_coord_stream_t * cs , int num_bits , uint * pvalue"		1225955	3					
ANR	1226061	Parameter	shade_coord_stream_t * cs	148:20:4622:4646	1225955	0	True				
ANR	1226062	ParameterType	shade_coord_stream_t *		1225955	0					
ANR	1226063	Identifier	cs		1225955	1					
ANR	1226064	Parameter	int num_bits	148:47:4649:4660	1225955	1	True				
ANR	1226065	ParameterType	int		1225955	0					
ANR	1226066	Identifier	num_bits		1225955	1					
ANR	1226067	Parameter	uint * pvalue	148:61:4663:4675	1225955	2	True				
ANR	1226068	ParameterType	uint *		1225955	0					
ANR	1226069	Identifier	pvalue		1225955	1					
ANR	1226070	CFGEntryNode	ENTRY		1225955		True				
ANR	1226071	CFGExitNode	EXIT		1225955		True				
ANR	1226072	Symbol	& read		1225955						
ANR	1226073	Symbol	read		1225955						
ANR	1226074	Symbol	& value		1225955						
ANR	1226075	Symbol	gs_error_rangecheck		1225955						
ANR	1226076	Symbol	pvalue		1225955						
ANR	1226077	Symbol	cs -> s		1225955						
ANR	1226078	Symbol	cs		1225955						
ANR	1226079	Symbol	cs -> ds_EOF		1225955						
ANR	1226080	Symbol	* pvalue		1225955						
ANR	1226081	Symbol	sgets		1225955						
ANR	1226082	Symbol	* cs		1225955						
ANR	1226083	Symbol	true		1225955						
ANR	1226084	Symbol	num_bits		1225955						
ANR	1226085	Symbol	value		1225955						
ANR	1226086	Function	cs_next_packed_decoded	168:0:5172:5663							
ANR	1226087	FunctionDef	"cs_next_packed_decoded (shade_coord_stream_t * cs , int num_bits , const float decode [ 2 ] , float * pvalue)"		1226086	0					
ANR	1226088	CompoundStatement		171:0:5308:5663	1226086	0					
ANR	1226089	IdentifierDeclStatement	uint value ;	172:4:5314:5324	1226086	0	True				
ANR	1226090	IdentifierDecl	value		1226086	0					
ANR	1226091	IdentifierDeclType	uint		1226086	0					
ANR	1226092	Identifier	value		1226086	1					
ANR	1226093	IdentifierDeclStatement	"int code = cs -> get_value ( cs , num_bits , & value ) ;"	173:4:5330:5376	1226086	1	True				
ANR	1226094	IdentifierDecl	"code = cs -> get_value ( cs , num_bits , & value )"		1226086	0					
ANR	1226095	IdentifierDeclType	int		1226086	0					
ANR	1226096	Identifier	code		1226086	1					
ANR	1226097	AssignmentExpression	"code = cs -> get_value ( cs , num_bits , & value )"		1226086	2		=			
ANR	1226098	Identifier	code		1226086	0					
ANR	1226099	CallExpression	"cs -> get_value ( cs , num_bits , & value )"		1226086	1					
ANR	1226100	Callee	cs -> get_value		1226086	0					
ANR	1226101	PtrMemberAccess	cs -> get_value		1226086	0					
ANR	1226102	Identifier	cs		1226086	0					
ANR	1226103	Identifier	get_value		1226086	1					
ANR	1226104	ArgumentList	cs		1226086	1					
ANR	1226105	Argument	cs		1226086	0					
ANR	1226106	Identifier	cs		1226086	0					
ANR	1226107	Argument	num_bits		1226086	1					
ANR	1226108	Identifier	num_bits		1226086	0					
ANR	1226109	Argument	& value		1226086	2					
ANR	1226110	UnaryOperationExpression	& value		1226086	0					
ANR	1226111	UnaryOperator	&		1226086	0					
ANR	1226112	Identifier	value		1226086	1					
ANR	1226113	IdentifierDeclStatement	double max_value = ( double ) ( uint ) ( num_bits == sizeof ( uint ) * 8 ? ~0 : ( ( 1 << num_bits ) - 1 ) ) ;	174:4:5382:5483	1226086	2	True				
ANR	1226114	IdentifierDecl	max_value = ( double ) ( uint ) ( num_bits == sizeof ( uint ) * 8 ? ~0 : ( ( 1 << num_bits ) - 1 ) )		1226086	0					
ANR	1226115	IdentifierDeclType	double		1226086	0					
ANR	1226116	Identifier	max_value		1226086	1					
ANR	1226117	AssignmentExpression	max_value = ( double ) ( uint ) ( num_bits == sizeof ( uint ) * 8 ? ~0 : ( ( 1 << num_bits ) - 1 ) )		1226086	2		=			
ANR	1226118	Identifier	max_value		1226086	0					
ANR	1226119	CastExpression	( double ) ( uint ) ( num_bits == sizeof ( uint ) * 8 ? ~0 : ( ( 1 << num_bits ) - 1 ) )		1226086	1					
ANR	1226120	CastTarget	double		1226086	0					
ANR	1226121	CastExpression	( uint ) ( num_bits == sizeof ( uint ) * 8 ? ~0 : ( ( 1 << num_bits ) - 1 ) )		1226086	1					
ANR	1226122	CastTarget	uint		1226086	0					
ANR	1226123	ConditionalExpression	num_bits == sizeof ( uint ) * 8 ? ~0 : ( ( 1 << num_bits ) - 1 )		1226086	1					
ANR	1226124	Condition	num_bits == sizeof ( uint ) * 8		1226086	0					
ANR	1226125	EqualityExpression	num_bits == sizeof ( uint ) * 8		1226086	0		==			
ANR	1226126	Identifier	num_bits		1226086	0					
ANR	1226127	MultiplicativeExpression	sizeof ( uint ) * 8		1226086	1		*			
ANR	1226128	SizeofExpression	sizeof ( uint )		1226086	0					
ANR	1226129	Sizeof	sizeof		1226086	0					
ANR	1226130	SizeofOperand	uint		1226086	1					
ANR	1226131	PrimaryExpression	8		1226086	1					
ANR	1226132	Identifier	~0		1226086	1					
ANR	1226133	AdditiveExpression	( 1 << num_bits ) - 1		1226086	2		-			
ANR	1226134	ShiftExpression	1 << num_bits		1226086	0		<<			
ANR	1226135	PrimaryExpression	1		1226086	0					
ANR	1226136	Identifier	num_bits		1226086	1					
ANR	1226137	PrimaryExpression	1		1226086	1					
ANR	1226138	IfStatement	if ( code < 0 )		1226086	3					
ANR	1226139	Condition	code < 0	177:8:5494:5501	1226086	0	True				
ANR	1226140	RelationalExpression	code < 0		1226086	0		<			
ANR	1226141	Identifier	code		1226086	0					
ANR	1226142	PrimaryExpression	0		1226086	1					
ANR	1226143	ReturnStatement	return code ;	178:8:5512:5523	1226086	1	True				
ANR	1226144	Identifier	code		1226086	0					
ANR	1226145	ExpressionStatement	* pvalue = ( decode == 0 ? value / max_value : decode [ 0 ] + value * ( decode [ 1 ] - decode [ 0 ] ) / max_value )	179:4:5529:5647	1226086	4	True				
ANR	1226146	AssignmentExpression	* pvalue = ( decode == 0 ? value / max_value : decode [ 0 ] + value * ( decode [ 1 ] - decode [ 0 ] ) / max_value )		1226086	0		=			
ANR	1226147	UnaryOperationExpression	* pvalue		1226086	0					
ANR	1226148	UnaryOperator	*		1226086	0					
ANR	1226149	Identifier	pvalue		1226086	1					
ANR	1226150	ConditionalExpression	decode == 0 ? value / max_value : decode [ 0 ] + value * ( decode [ 1 ] - decode [ 0 ] ) / max_value		1226086	1					
ANR	1226151	Condition	decode == 0		1226086	0					
ANR	1226152	EqualityExpression	decode == 0		1226086	0		==			
ANR	1226153	Identifier	decode		1226086	0					
ANR	1226154	PrimaryExpression	0		1226086	1					
ANR	1226155	MultiplicativeExpression	value / max_value		1226086	1		/			
ANR	1226156	Identifier	value		1226086	0					
ANR	1226157	Identifier	max_value		1226086	1					
ANR	1226158	AdditiveExpression	decode [ 0 ] + value * ( decode [ 1 ] - decode [ 0 ] ) / max_value		1226086	2		+			
ANR	1226159	ArrayIndexing	decode [ 0 ]		1226086	0					
ANR	1226160	Identifier	decode		1226086	0					
ANR	1226161	PrimaryExpression	0		1226086	1					
ANR	1226162	MultiplicativeExpression	value * ( decode [ 1 ] - decode [ 0 ] ) / max_value		1226086	1		*			
ANR	1226163	Identifier	value		1226086	0					
ANR	1226164	MultiplicativeExpression	( decode [ 1 ] - decode [ 0 ] ) / max_value		1226086	1		/			
ANR	1226165	AdditiveExpression	decode [ 1 ] - decode [ 0 ]		1226086	0		-			
ANR	1226166	ArrayIndexing	decode [ 1 ]		1226086	0					
ANR	1226167	Identifier	decode		1226086	0					
ANR	1226168	PrimaryExpression	1		1226086	1					
ANR	1226169	ArrayIndexing	decode [ 0 ]		1226086	1					
ANR	1226170	Identifier	decode		1226086	0					
ANR	1226171	PrimaryExpression	0		1226086	1					
ANR	1226172	Identifier	max_value		1226086	1					
ANR	1226173	ReturnStatement	return 0 ;	182:4:5653:5661	1226086	5	True				
ANR	1226174	PrimaryExpression	0		1226086	0					
ANR	1226175	ReturnType	static int		1226086	1					
ANR	1226176	Identifier	cs_next_packed_decoded		1226086	2					
ANR	1226177	ParameterList	"shade_coord_stream_t * cs , int num_bits , const float decode [ 2 ] , float * pvalue"		1226086	3					
ANR	1226178	Parameter	shade_coord_stream_t * cs	169:23:5206:5230	1226086	0	True				
ANR	1226179	ParameterType	shade_coord_stream_t *		1226086	0					
ANR	1226180	Identifier	cs		1226086	1					
ANR	1226181	Parameter	int num_bits	169:50:5233:5244	1226086	1	True				
ANR	1226182	ParameterType	int		1226086	0					
ANR	1226183	Identifier	num_bits		1226086	1					
ANR	1226184	Parameter	const float decode [ 2 ]	170:23:5270:5290	1226086	2	True				
ANR	1226185	ParameterType	const float [ 2 ]		1226086	0					
ANR	1226186	Identifier	decode		1226086	1					
ANR	1226187	Parameter	float * pvalue	170:46:5293:5305	1226086	3	True				
ANR	1226188	ParameterType	float *		1226086	0					
ANR	1226189	Identifier	pvalue		1226086	1					
ANR	1226190	CFGEntryNode	ENTRY		1226086		True				
ANR	1226191	CFGExitNode	EXIT		1226086		True				
ANR	1226192	Symbol	& value		1226086						
ANR	1226193	Symbol	code		1226086						
ANR	1226194	Symbol	pvalue		1226086						
ANR	1226195	Symbol	cs -> get_value		1226086						
ANR	1226196	Symbol	decode		1226086						
ANR	1226197	Symbol	cs		1226086						
ANR	1226198	Symbol	~0		1226086						
ANR	1226199	Symbol	* pvalue		1226086						
ANR	1226200	Symbol	* cs		1226086						
ANR	1226201	Symbol	num_bits		1226086						
ANR	1226202	Symbol	value		1226086						
ANR	1226203	Symbol	max_value		1226086						
ANR	1226204	Symbol	* decode		1226086						
ANR	1226205	Function	cs_next_array_decoded	186:0:5739:6123							
ANR	1226206	FunctionDef	"cs_next_array_decoded (shade_coord_stream_t * cs , int num_bits , const float decode [ 2 ] , float * pvalue)"		1226205	0					
ANR	1226207	CompoundStatement		189:0:5873:6123	1226205	0					
ANR	1226208	IdentifierDeclStatement	float value ;	190:4:5879:5890	1226205	0	True				
ANR	1226209	IdentifierDecl	value		1226205	0					
ANR	1226210	IdentifierDeclType	float		1226205	0					
ANR	1226211	Identifier	value		1226205	1					
ANR	1226212	IdentifierDeclStatement	uint read ;	191:4:5896:5905	1226205	1	True				
ANR	1226213	IdentifierDecl	read		1226205	0					
ANR	1226214	IdentifierDeclType	uint		1226205	0					
ANR	1226215	Identifier	read		1226205	1					
ANR	1226216	IfStatement	"if ( sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0 || read != sizeof ( float ) )"		1226205	2					
ANR	1226217	Condition	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0 || read != sizeof ( float )"	193:8:5916:6002	1226205	0	True				
ANR	1226218	OrExpression	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0 || read != sizeof ( float )"		1226205	0		||			
ANR	1226219	RelationalExpression	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read ) < 0"		1226205	0		<			
ANR	1226220	CallExpression	"sgets ( cs -> s , ( byte * ) & value , sizeof ( float ) , & read )"		1226205	0					
ANR	1226221	Callee	sgets		1226205	0					
ANR	1226222	Identifier	sgets		1226205	0					
ANR	1226223	ArgumentList	cs -> s		1226205	1					
ANR	1226224	Argument	cs -> s		1226205	0					
ANR	1226225	PtrMemberAccess	cs -> s		1226205	0					
ANR	1226226	Identifier	cs		1226205	0					
ANR	1226227	Identifier	s		1226205	1					
ANR	1226228	Argument	( byte * ) & value		1226205	1					
ANR	1226229	CastExpression	( byte * ) & value		1226205	0					
ANR	1226230	CastTarget	byte *		1226205	0					
ANR	1226231	UnaryOperationExpression	& value		1226205	1					
ANR	1226232	UnaryOperator	&		1226205	0					
ANR	1226233	Identifier	value		1226205	1					
ANR	1226234	Argument	sizeof ( float )		1226205	2					
ANR	1226235	SizeofExpression	sizeof ( float )		1226205	0					
ANR	1226236	Sizeof	sizeof		1226205	0					
ANR	1226237	SizeofOperand	float		1226205	1					
ANR	1226238	Argument	& read		1226205	3					
ANR	1226239	UnaryOperationExpression	& read		1226205	0					
ANR	1226240	UnaryOperator	&		1226205	0					
ANR	1226241	Identifier	read		1226205	1					
ANR	1226242	PrimaryExpression	0		1226205	1					
ANR	1226243	EqualityExpression	read != sizeof ( float )		1226205	1		!=			
ANR	1226244	Identifier	read		1226205	0					
ANR	1226245	SizeofExpression	sizeof ( float )		1226205	1					
ANR	1226246	Sizeof	sizeof		1226205	0					
ANR	1226247	SizeofOperand	float		1226205	1					
ANR	1226248	CompoundStatement		7:6:136:136	1226205	1					
ANR	1226249	ExpressionStatement	cs -> ds_EOF = true	196:8:6020:6037	1226205	0	True				
ANR	1226250	AssignmentExpression	cs -> ds_EOF = true		1226205	0		=			
ANR	1226251	PtrMemberAccess	cs -> ds_EOF		1226205	0					
ANR	1226252	Identifier	cs		1226205	0					
ANR	1226253	Identifier	ds_EOF		1226205	1					
ANR	1226254	Identifier	true		1226205	1					
ANR	1226255	ExpressionStatement	return_error ( gs_error_rangecheck )	197:8:6047:6080	1226205	1	True				
ANR	1226256	CallExpression	return_error ( gs_error_rangecheck )		1226205	0					
ANR	1226257	Callee	return_error		1226205	0					
ANR	1226258	Identifier	return_error		1226205	0					
ANR	1226259	ArgumentList	gs_error_rangecheck		1226205	1					
ANR	1226260	Argument	gs_error_rangecheck		1226205	0					
ANR	1226261	Identifier	gs_error_rangecheck		1226205	0					
ANR	1226262	ExpressionStatement	* pvalue = value	199:4:6092:6107	1226205	3	True				
ANR	1226263	AssignmentExpression	* pvalue = value		1226205	0		=			
ANR	1226264	UnaryOperationExpression	* pvalue		1226205	0					
ANR	1226265	UnaryOperator	*		1226205	0					
ANR	1226266	Identifier	pvalue		1226205	1					
ANR	1226267	Identifier	value		1226205	1					
ANR	1226268	ReturnStatement	return 0 ;	200:4:6113:6121	1226205	4	True				
ANR	1226269	PrimaryExpression	0		1226205	0					
ANR	1226270	ReturnType	static int		1226205	1					
ANR	1226271	Identifier	cs_next_array_decoded		1226205	2					
ANR	1226272	ParameterList	"shade_coord_stream_t * cs , int num_bits , const float decode [ 2 ] , float * pvalue"		1226205	3					
ANR	1226273	Parameter	shade_coord_stream_t * cs	187:22:5772:5796	1226205	0	True				
ANR	1226274	ParameterType	shade_coord_stream_t *		1226205	0					
ANR	1226275	Identifier	cs		1226205	1					
ANR	1226276	Parameter	int num_bits	187:49:5799:5810	1226205	1	True				
ANR	1226277	ParameterType	int		1226205	0					
ANR	1226278	Identifier	num_bits		1226205	1					
ANR	1226279	Parameter	const float decode [ 2 ]	188:22:5835:5855	1226205	2	True				
ANR	1226280	ParameterType	const float [ 2 ]		1226205	0					
ANR	1226281	Identifier	decode		1226205	1					
ANR	1226282	Parameter	float * pvalue	188:45:5858:5870	1226205	3	True				
ANR	1226283	ParameterType	float *		1226205	0					
ANR	1226284	Identifier	pvalue		1226205	1					
ANR	1226285	CFGEntryNode	ENTRY		1226205		True				
ANR	1226286	CFGExitNode	EXIT		1226205		True				
ANR	1226287	Symbol	& read		1226205						
ANR	1226288	Symbol	read		1226205						
ANR	1226289	Symbol	& value		1226205						
ANR	1226290	Symbol	gs_error_rangecheck		1226205						
ANR	1226291	Symbol	pvalue		1226205						
ANR	1226292	Symbol	cs -> s		1226205						
ANR	1226293	Symbol	decode		1226205						
ANR	1226294	Symbol	cs		1226205						
ANR	1226295	Symbol	cs -> ds_EOF		1226205						
ANR	1226296	Symbol	* pvalue		1226205						
ANR	1226297	Symbol	sgets		1226205						
ANR	1226298	Symbol	* cs		1226205						
ANR	1226299	Symbol	true		1226205						
ANR	1226300	Symbol	num_bits		1226205						
ANR	1226301	Symbol	value		1226205						
ANR	1226302	Function	cs_packed_align	203:0:6126:6234							
ANR	1226303	FunctionDef	"cs_packed_align (shade_coord_stream_t * cs , int radix)"		1226302	0					
ANR	1226304	CompoundStatement		205:0:6191:6234	1226302	0					
ANR	1226305	ExpressionStatement	cs -> left = cs -> left / radix * radix	206:4:6197:6232	1226302	0	True				
ANR	1226306	AssignmentExpression	cs -> left = cs -> left / radix * radix		1226302	0		=			
ANR	1226307	PtrMemberAccess	cs -> left		1226302	0					
ANR	1226308	Identifier	cs		1226302	0					
ANR	1226309	Identifier	left		1226302	1					
ANR	1226310	MultiplicativeExpression	cs -> left / radix * radix		1226302	1		/			
ANR	1226311	PtrMemberAccess	cs -> left		1226302	0					
ANR	1226312	Identifier	cs		1226302	0					
ANR	1226313	Identifier	left		1226302	1					
ANR	1226314	MultiplicativeExpression	radix * radix		1226302	1		*			
ANR	1226315	Identifier	radix		1226302	0					
ANR	1226316	Identifier	radix		1226302	1					
ANR	1226317	ReturnType	static void		1226302	1					
ANR	1226318	Identifier	cs_packed_align		1226302	2					
ANR	1226319	ParameterList	"shade_coord_stream_t * cs , int radix"		1226302	3					
ANR	1226320	Parameter	shade_coord_stream_t * cs	204:16:6154:6177	1226302	0	True				
ANR	1226321	ParameterType	shade_coord_stream_t *		1226302	0					
ANR	1226322	Identifier	cs		1226302	1					
ANR	1226323	Parameter	int radix	204:42:6180:6188	1226302	1	True				
ANR	1226324	ParameterType	int		1226302	0					
ANR	1226325	Identifier	radix		1226302	1					
ANR	1226326	CFGEntryNode	ENTRY		1226302		True				
ANR	1226327	CFGExitNode	EXIT		1226302		True				
ANR	1226328	Symbol	cs		1226302						
ANR	1226329	Symbol	radix		1226302						
ANR	1226330	Symbol	cs -> left		1226302						
ANR	1226331	Symbol	* cs		1226302						
ANR	1226332	Function	cs_array_align	209:0:6237:6303							
ANR	1226333	FunctionDef	"cs_array_align (shade_coord_stream_t * cs , int radix)"		1226332	0					
ANR	1226334	CompoundStatement		211:0:6301:6303	1226332	0					
ANR	1226335	ReturnType	static void		1226332	1					
ANR	1226336	Identifier	cs_array_align		1226332	2					
ANR	1226337	ParameterList	"shade_coord_stream_t * cs , int radix"		1226332	3					
ANR	1226338	Parameter	shade_coord_stream_t * cs	210:15:6264:6287	1226332	0	True				
ANR	1226339	ParameterType	shade_coord_stream_t *		1226332	0					
ANR	1226340	Identifier	cs		1226332	1					
ANR	1226341	Parameter	int radix	210:41:6290:6298	1226332	1	True				
ANR	1226342	ParameterType	int		1226332	0					
ANR	1226343	Identifier	radix		1226332	1					
ANR	1226344	CFGEntryNode	ENTRY		1226332		True				
ANR	1226345	CFGExitNode	EXIT		1226332		True				
ANR	1226346	Symbol	cs		1226332						
ANR	1226347	Symbol	radix		1226332						
ANR	1226348	Function	shade_next_flag	216:0:6389:6624							
ANR	1226349	FunctionDef	"shade_next_flag (shade_coord_stream_t * cs , int BitsPerFlag)"		1226348	0					
ANR	1226350	CompoundStatement		218:0:6453:6624	1226348	0					
ANR	1226351	IdentifierDeclStatement	uint flag ;	219:4:6459:6468	1226348	0	True				
ANR	1226352	IdentifierDecl	flag		1226348	0					
ANR	1226353	IdentifierDeclType	uint		1226348	0					
ANR	1226354	Identifier	flag		1226348	1					
ANR	1226355	IdentifierDeclStatement	int code ;	220:4:6474:6482	1226348	1	True				
ANR	1226356	IdentifierDecl	code		1226348	0					
ANR	1226357	IdentifierDeclType	int		1226348	0					
ANR	1226358	Identifier	code		1226348	1					
ANR	1226359	ExpressionStatement	cs -> left = 0	222:4:6489:6501	1226348	2	True				
ANR	1226360	AssignmentExpression	cs -> left = 0		1226348	0		=			
ANR	1226361	PtrMemberAccess	cs -> left		1226348	0					
ANR	1226362	Identifier	cs		1226348	0					
ANR	1226363	Identifier	left		1226348	1					
ANR	1226364	PrimaryExpression	0		1226348	1					
ANR	1226365	ExpressionStatement	"code = cs -> get_value ( cs , BitsPerFlag , & flag )"	223:4:6541:6585	1226348	3	True				
ANR	1226366	AssignmentExpression	"code = cs -> get_value ( cs , BitsPerFlag , & flag )"		1226348	0		=			
ANR	1226367	Identifier	code		1226348	0					
ANR	1226368	CallExpression	"cs -> get_value ( cs , BitsPerFlag , & flag )"		1226348	1					
ANR	1226369	Callee	cs -> get_value		1226348	0					
ANR	1226370	PtrMemberAccess	cs -> get_value		1226348	0					
ANR	1226371	Identifier	cs		1226348	0					
ANR	1226372	Identifier	get_value		1226348	1					
ANR	1226373	ArgumentList	cs		1226348	1					
ANR	1226374	Argument	cs		1226348	0					
ANR	1226375	Identifier	cs		1226348	0					
ANR	1226376	Argument	BitsPerFlag		1226348	1					
ANR	1226377	Identifier	BitsPerFlag		1226348	0					
ANR	1226378	Argument	& flag		1226348	2					
ANR	1226379	UnaryOperationExpression	& flag		1226348	0					
ANR	1226380	UnaryOperator	&		1226348	0					
ANR	1226381	Identifier	flag		1226348	1					
ANR	1226382	ReturnStatement	return ( code < 0 ? code : flag ) ;	224:4:6591:6622	1226348	4	True				
ANR	1226383	ConditionalExpression	code < 0 ? code : flag		1226348	0					
ANR	1226384	Condition	code < 0		1226348	0					
ANR	1226385	RelationalExpression	code < 0		1226348	0		<			
ANR	1226386	Identifier	code		1226348	0					
ANR	1226387	PrimaryExpression	0		1226348	1					
ANR	1226388	Identifier	code		1226348	1					
ANR	1226389	Identifier	flag		1226348	2					
ANR	1226390	ReturnType	int		1226348	1					
ANR	1226391	Identifier	shade_next_flag		1226348	2					
ANR	1226392	ParameterList	"shade_coord_stream_t * cs , int BitsPerFlag"		1226348	3					
ANR	1226393	Parameter	shade_coord_stream_t * cs	217:16:6409:6433	1226348	0	True				
ANR	1226394	ParameterType	shade_coord_stream_t *		1226348	0					
ANR	1226395	Identifier	cs		1226348	1					
ANR	1226396	Parameter	int BitsPerFlag	217:43:6436:6450	1226348	1	True				
ANR	1226397	ParameterType	int		1226348	0					
ANR	1226398	Identifier	BitsPerFlag		1226348	1					
ANR	1226399	CFGEntryNode	ENTRY		1226348		True				
ANR	1226400	CFGExitNode	EXIT		1226348		True				
ANR	1226401	Symbol	cs		1226348						
ANR	1226402	Symbol	BitsPerFlag		1226348						
ANR	1226403	Symbol	cs -> left		1226348						
ANR	1226404	Symbol	flag		1226348						
ANR	1226405	Symbol	code		1226348						
ANR	1226406	Symbol	* cs		1226348						
ANR	1226407	Symbol	cs -> get_value		1226348						
ANR	1226408	Symbol	& flag		1226348						
ANR	1226409	Function	shade_next_coords	228:0:6667:7235							
ANR	1226410	FunctionDef	"shade_next_coords (shade_coord_stream_t * cs , gs_fixed_point * ppt , int num_points)"		1226409	0					
ANR	1226411	CompoundStatement		231:0:6772:7235	1226409	0					
ANR	1226412	IdentifierDeclStatement	int num_bits = cs -> params -> BitsPerCoordinate ;	232:4:6778:6822	1226409	0	True				
ANR	1226413	IdentifierDecl	num_bits = cs -> params -> BitsPerCoordinate		1226409	0					
ANR	1226414	IdentifierDeclType	int		1226409	0					
ANR	1226415	Identifier	num_bits		1226409	1					
ANR	1226416	AssignmentExpression	num_bits = cs -> params -> BitsPerCoordinate		1226409	2		=			
ANR	1226417	Identifier	num_bits		1226409	0					
ANR	1226418	PtrMemberAccess	cs -> params -> BitsPerCoordinate		1226409	1					
ANR	1226419	PtrMemberAccess	cs -> params		1226409	0					
ANR	1226420	Identifier	cs		1226409	0					
ANR	1226421	Identifier	params		1226409	1					
ANR	1226422	Identifier	BitsPerCoordinate		1226409	1					
ANR	1226423	IdentifierDeclStatement	const float * decode = cs -> params -> Decode ;	233:4:6828:6868	1226409	1	True				
ANR	1226424	IdentifierDecl	* decode = cs -> params -> Decode		1226409	0					
ANR	1226425	IdentifierDeclType	const float *		1226409	0					
ANR	1226426	Identifier	decode		1226409	1					
ANR	1226427	AssignmentExpression	* decode = cs -> params -> Decode		1226409	2		=			
ANR	1226428	Identifier	decode		1226409	0					
ANR	1226429	PtrMemberAccess	cs -> params -> Decode		1226409	1					
ANR	1226430	PtrMemberAccess	cs -> params		1226409	0					
ANR	1226431	Identifier	cs		1226409	0					
ANR	1226432	Identifier	params		1226409	1					
ANR	1226433	Identifier	Decode		1226409	1					
ANR	1226434	IdentifierDeclStatement	int code = 0 ;	234:4:6874:6886	1226409	2	True				
ANR	1226435	IdentifierDecl	code = 0		1226409	0					
ANR	1226436	IdentifierDeclType	int		1226409	0					
ANR	1226437	Identifier	code		1226409	1					
ANR	1226438	AssignmentExpression	code = 0		1226409	2		=			
ANR	1226439	Identifier	code		1226409	0					
ANR	1226440	PrimaryExpression	0		1226409	1					
ANR	1226441	IdentifierDeclStatement	int i ;	235:4:6892:6897	1226409	3	True				
ANR	1226442	IdentifierDecl	i		1226409	0					
ANR	1226443	IdentifierDeclType	int		1226409	0					
ANR	1226444	Identifier	i		1226409	1					
ANR	1226445	ForStatement	for ( i = 0 ; i < num_points ; ++ i )		1226409	4					
ANR	1226446	ForInit	i = 0 ;	237:9:6909:6914	1226409	0	True				
ANR	1226447	AssignmentExpression	i = 0		1226409	0		=			
ANR	1226448	Identifier	i		1226409	0					
ANR	1226449	PrimaryExpression	0		1226409	1					
ANR	1226450	Condition	i < num_points	237:16:6916:6929	1226409	1	True				
ANR	1226451	RelationalExpression	i < num_points		1226409	0		<			
ANR	1226452	Identifier	i		1226409	0					
ANR	1226453	Identifier	num_points		1226409	1					
ANR	1226454	UnaryExpression	++ i	237:32:6932:6934	1226409	2	True				
ANR	1226455	IncDec	++		1226409	0					
ANR	1226456	Identifier	i		1226409	1					
ANR	1226457	CompoundStatement		8:8:174:184	1226409	3					
ANR	1226458	IdentifierDeclStatement	"float x , y ;"	238:8:6947:6957	1226409	0	True				
ANR	1226459	IdentifierDecl	x		1226409	0					
ANR	1226460	IdentifierDeclType	float		1226409	0					
ANR	1226461	Identifier	x		1226409	1					
ANR	1226462	IdentifierDecl	y		1226409	1					
ANR	1226463	IdentifierDeclType	float		1226409	0					
ANR	1226464	Identifier	y		1226409	1					
ANR	1226465	IfStatement	"if ( ( code = cs -> get_decoded ( cs , num_bits , decode , & x ) ) < 0 || ( code = cs -> get_decoded ( cs , num_bits , decode + 2 , & y ) ) < 0 || ( code = gs_point_transform2fixed ( cs -> pctm , x , y , & ppt [ i ] ) ) < 0 )"		1226409	1					
ANR	1226466	Condition	"( code = cs -> get_decoded ( cs , num_bits , decode , & x ) ) < 0 || ( code = cs -> get_decoded ( cs , num_bits , decode + 2 , & y ) ) < 0 || ( code = gs_point_transform2fixed ( cs -> pctm , x , y , & ppt [ i ] ) ) < 0"	240:12:6972:7177	1226409	0	True				
ANR	1226467	OrExpression	"( code = cs -> get_decoded ( cs , num_bits , decode , & x ) ) < 0 || ( code = cs -> get_decoded ( cs , num_bits , decode + 2 , & y ) ) < 0 || ( code = gs_point_transform2fixed ( cs -> pctm , x , y , & ppt [ i ] ) ) < 0"		1226409	0		||			
ANR	1226468	RelationalExpression	"( code = cs -> get_decoded ( cs , num_bits , decode , & x ) ) < 0"		1226409	0		<			
ANR	1226469	AssignmentExpression	"code = cs -> get_decoded ( cs , num_bits , decode , & x )"		1226409	0		=			
ANR	1226470	Identifier	code		1226409	0					
ANR	1226471	CallExpression	"cs -> get_decoded ( cs , num_bits , decode , & x )"		1226409	1					
ANR	1226472	Callee	cs -> get_decoded		1226409	0					
ANR	1226473	PtrMemberAccess	cs -> get_decoded		1226409	0					
ANR	1226474	Identifier	cs		1226409	0					
ANR	1226475	Identifier	get_decoded		1226409	1					
ANR	1226476	ArgumentList	cs		1226409	1					
ANR	1226477	Argument	cs		1226409	0					
ANR	1226478	Identifier	cs		1226409	0					
ANR	1226479	Argument	num_bits		1226409	1					
ANR	1226480	Identifier	num_bits		1226409	0					
ANR	1226481	Argument	decode		1226409	2					
ANR	1226482	Identifier	decode		1226409	0					
ANR	1226483	Argument	& x		1226409	3					
ANR	1226484	UnaryOperationExpression	& x		1226409	0					
ANR	1226485	UnaryOperator	&		1226409	0					
ANR	1226486	Identifier	x		1226409	1					
ANR	1226487	PrimaryExpression	0		1226409	1					
ANR	1226488	OrExpression	"( code = cs -> get_decoded ( cs , num_bits , decode + 2 , & y ) ) < 0 || ( code = gs_point_transform2fixed ( cs -> pctm , x , y , & ppt [ i ] ) ) < 0"		1226409	1		||			
ANR	1226489	RelationalExpression	"( code = cs -> get_decoded ( cs , num_bits , decode + 2 , & y ) ) < 0"		1226409	0		<			
ANR	1226490	AssignmentExpression	"code = cs -> get_decoded ( cs , num_bits , decode + 2 , & y )"		1226409	0		=			
ANR	1226491	Identifier	code		1226409	0					
ANR	1226492	CallExpression	"cs -> get_decoded ( cs , num_bits , decode + 2 , & y )"		1226409	1					
ANR	1226493	Callee	cs -> get_decoded		1226409	0					
ANR	1226494	PtrMemberAccess	cs -> get_decoded		1226409	0					
ANR	1226495	Identifier	cs		1226409	0					
ANR	1226496	Identifier	get_decoded		1226409	1					
ANR	1226497	ArgumentList	cs		1226409	1					
ANR	1226498	Argument	cs		1226409	0					
ANR	1226499	Identifier	cs		1226409	0					
ANR	1226500	Argument	num_bits		1226409	1					
ANR	1226501	Identifier	num_bits		1226409	0					
ANR	1226502	Argument	decode + 2		1226409	2					
ANR	1226503	AdditiveExpression	decode + 2		1226409	0		+			
ANR	1226504	Identifier	decode		1226409	0					
ANR	1226505	PrimaryExpression	2		1226409	1					
ANR	1226506	Argument	& y		1226409	3					
ANR	1226507	UnaryOperationExpression	& y		1226409	0					
ANR	1226508	UnaryOperator	&		1226409	0					
ANR	1226509	Identifier	y		1226409	1					
ANR	1226510	PrimaryExpression	0		1226409	1					
ANR	1226511	RelationalExpression	"( code = gs_point_transform2fixed ( cs -> pctm , x , y , & ppt [ i ] ) ) < 0"		1226409	1		<			
ANR	1226512	AssignmentExpression	"code = gs_point_transform2fixed ( cs -> pctm , x , y , & ppt [ i ] )"		1226409	0		=			
ANR	1226513	Identifier	code		1226409	0					
ANR	1226514	CallExpression	"gs_point_transform2fixed ( cs -> pctm , x , y , & ppt [ i ] )"		1226409	1					
ANR	1226515	Callee	gs_point_transform2fixed		1226409	0					
ANR	1226516	Identifier	gs_point_transform2fixed		1226409	0					
ANR	1226517	ArgumentList	cs -> pctm		1226409	1					
ANR	1226518	Argument	cs -> pctm		1226409	0					
ANR	1226519	PtrMemberAccess	cs -> pctm		1226409	0					
ANR	1226520	Identifier	cs		1226409	0					
ANR	1226521	Identifier	pctm		1226409	1					
ANR	1226522	Argument	x		1226409	1					
ANR	1226523	Identifier	x		1226409	0					
ANR	1226524	Argument	y		1226409	2					
ANR	1226525	Identifier	y		1226409	0					
ANR	1226526	Argument	& ppt [ i ]		1226409	3					
ANR	1226527	UnaryOperationExpression	& ppt [ i ]		1226409	0					
ANR	1226528	UnaryOperator	&		1226409	0					
ANR	1226529	ArrayIndexing	ppt [ i ]		1226409	1					
ANR	1226530	Identifier	ppt		1226409	0					
ANR	1226531	Identifier	i		1226409	1					
ANR	1226532	PrimaryExpression	0		1226409	1					
ANR	1226533	BreakStatement	break ;	244:12:7205:7210	1226409	1	True				
ANR	1226534	ReturnStatement	return code ;	246:4:7222:7233	1226409	5	True				
ANR	1226535	Identifier	code		1226409	0					
ANR	1226536	ReturnType	int		1226409	1					
ANR	1226537	Identifier	shade_next_coords		1226409	2					
ANR	1226538	ParameterList	"shade_coord_stream_t * cs , gs_fixed_point * ppt , int num_points"		1226409	3					
ANR	1226539	Parameter	shade_coord_stream_t * cs	229:18:6689:6713	1226409	0	True				
ANR	1226540	ParameterType	shade_coord_stream_t *		1226409	0					
ANR	1226541	Identifier	cs		1226409	1					
ANR	1226542	Parameter	gs_fixed_point * ppt	229:45:6716:6735	1226409	1	True				
ANR	1226543	ParameterType	gs_fixed_point *		1226409	0					
ANR	1226544	Identifier	ppt		1226409	1					
ANR	1226545	Parameter	int num_points	230:18:6756:6769	1226409	2	True				
ANR	1226546	ParameterType	int		1226409	0					
ANR	1226547	Identifier	num_points		1226409	1					
ANR	1226548	CFGEntryNode	ENTRY		1226409		True				
ANR	1226549	CFGExitNode	EXIT		1226409		True				
ANR	1226550	Symbol	code		1226409						
ANR	1226551	Symbol	gs_point_transform2fixed		1226409						
ANR	1226552	Symbol	cs -> params		1226409						
ANR	1226553	Symbol	i		1226409						
ANR	1226554	Symbol	decode		1226409						
ANR	1226555	Symbol	num_points		1226409						
ANR	1226556	Symbol	cs -> pctm		1226409						
ANR	1226557	Symbol	cs		1226409						
ANR	1226558	Symbol	cs -> params -> Decode		1226409						
ANR	1226559	Symbol	ppt		1226409						
ANR	1226560	Symbol	* cs		1226409						
ANR	1226561	Symbol	cs -> params -> BitsPerCoordinate		1226409						
ANR	1226562	Symbol	x		1226409						
ANR	1226563	Symbol	y		1226409						
ANR	1226564	Symbol	num_bits		1226409						
ANR	1226565	Symbol	* * cs		1226409						
ANR	1226566	Symbol	& x		1226409						
ANR	1226567	Symbol	cs -> get_decoded		1226409						
ANR	1226568	Symbol	* cs -> params		1226409						
ANR	1226569	Symbol	& y		1226409						
ANR	1226570	Function	shade_next_color	250:0:7309:8974							
ANR	1226571	FunctionDef	"shade_next_color (shade_coord_stream_t * cs , float * pc)"		1226570	0					
ANR	1226572	CompoundStatement		252:0:7368:8974	1226570	0					
ANR	1226573	IdentifierDeclStatement	const float * decode = cs -> params -> Decode + 4 ;	253:4:7374:7418	1226570	0	True				
ANR	1226574	IdentifierDecl	* decode = cs -> params -> Decode + 4		1226570	0					
ANR	1226575	IdentifierDeclType	const float *		1226570	0					
ANR	1226576	Identifier	decode		1226570	1					
ANR	1226577	AssignmentExpression	* decode = cs -> params -> Decode + 4		1226570	2		=			
ANR	1226578	Identifier	decode		1226570	0					
ANR	1226579	AdditiveExpression	cs -> params -> Decode + 4		1226570	1		+			
ANR	1226580	PtrMemberAccess	cs -> params -> Decode		1226570	0					
ANR	1226581	PtrMemberAccess	cs -> params		1226570	0					
ANR	1226582	Identifier	cs		1226570	0					
ANR	1226583	Identifier	params		1226570	1					
ANR	1226584	Identifier	Decode		1226570	1					
ANR	1226585	PrimaryExpression	4		1226570	1					
ANR	1226586	IdentifierDeclStatement	const gs_color_space * pcs = cs -> params -> ColorSpace ;	254:4:7448:7498	1226570	1	True				
ANR	1226587	IdentifierDecl	* pcs = cs -> params -> ColorSpace		1226570	0					
ANR	1226588	IdentifierDeclType	const gs_color_space *		1226570	0					
ANR	1226589	Identifier	pcs		1226570	1					
ANR	1226590	AssignmentExpression	* pcs = cs -> params -> ColorSpace		1226570	2		=			
ANR	1226591	Identifier	pcs		1226570	0					
ANR	1226592	PtrMemberAccess	cs -> params -> ColorSpace		1226570	1					
ANR	1226593	PtrMemberAccess	cs -> params		1226570	0					
ANR	1226594	Identifier	cs		1226570	0					
ANR	1226595	Identifier	params		1226570	1					
ANR	1226596	Identifier	ColorSpace		1226570	1					
ANR	1226597	IdentifierDeclStatement	gs_color_space_index index = gs_color_space_get_index ( pcs ) ;	255:4:7504:7562	1226570	2	True				
ANR	1226598	IdentifierDecl	index = gs_color_space_get_index ( pcs )		1226570	0					
ANR	1226599	IdentifierDeclType	gs_color_space_index		1226570	0					
ANR	1226600	Identifier	index		1226570	1					
ANR	1226601	AssignmentExpression	index = gs_color_space_get_index ( pcs )		1226570	2		=			
ANR	1226602	Identifier	index		1226570	0					
ANR	1226603	CallExpression	gs_color_space_get_index ( pcs )		1226570	1					
ANR	1226604	Callee	gs_color_space_get_index		1226570	0					
ANR	1226605	Identifier	gs_color_space_get_index		1226570	0					
ANR	1226606	ArgumentList	pcs		1226570	1					
ANR	1226607	Argument	pcs		1226570	0					
ANR	1226608	Identifier	pcs		1226570	0					
ANR	1226609	IdentifierDeclStatement	int num_bits = cs -> params -> BitsPerComponent ;	256:4:7568:7611	1226570	3	True				
ANR	1226610	IdentifierDecl	num_bits = cs -> params -> BitsPerComponent		1226570	0					
ANR	1226611	IdentifierDeclType	int		1226570	0					
ANR	1226612	Identifier	num_bits		1226570	1					
ANR	1226613	AssignmentExpression	num_bits = cs -> params -> BitsPerComponent		1226570	2		=			
ANR	1226614	Identifier	num_bits		1226570	0					
ANR	1226615	PtrMemberAccess	cs -> params -> BitsPerComponent		1226570	1					
ANR	1226616	PtrMemberAccess	cs -> params		1226570	0					
ANR	1226617	Identifier	cs		1226570	0					
ANR	1226618	Identifier	params		1226570	1					
ANR	1226619	Identifier	BitsPerComponent		1226570	1					
ANR	1226620	IfStatement	if ( index == gs_color_space_index_Indexed )		1226570	4					
ANR	1226621	Condition	index == gs_color_space_index_Indexed	258:8:7622:7658	1226570	0	True				
ANR	1226622	EqualityExpression	index == gs_color_space_index_Indexed		1226570	0		==			
ANR	1226623	Identifier	index		1226570	0					
ANR	1226624	Identifier	gs_color_space_index_Indexed		1226570	1					
ANR	1226625	CompoundStatement		13:8:505:510	1226570	1					
ANR	1226626	IdentifierDeclStatement	int ncomp = gs_color_space_num_components ( gs_cspace_base_space ( pcs ) ) ;	259:8:7671:7739	1226570	0	True				
ANR	1226627	IdentifierDecl	ncomp = gs_color_space_num_components ( gs_cspace_base_space ( pcs ) )		1226570	0					
ANR	1226628	IdentifierDeclType	int		1226570	0					
ANR	1226629	Identifier	ncomp		1226570	1					
ANR	1226630	AssignmentExpression	ncomp = gs_color_space_num_components ( gs_cspace_base_space ( pcs ) )		1226570	2		=			
ANR	1226631	Identifier	ncomp		1226570	0					
ANR	1226632	CallExpression	gs_color_space_num_components ( gs_cspace_base_space ( pcs ) )		1226570	1					
ANR	1226633	Callee	gs_color_space_num_components		1226570	0					
ANR	1226634	Identifier	gs_color_space_num_components		1226570	0					
ANR	1226635	ArgumentList	gs_cspace_base_space ( pcs )		1226570	1					
ANR	1226636	Argument	gs_cspace_base_space ( pcs )		1226570	0					
ANR	1226637	CallExpression	gs_cspace_base_space ( pcs )		1226570	0					
ANR	1226638	Callee	gs_cspace_base_space		1226570	0					
ANR	1226639	Identifier	gs_cspace_base_space		1226570	0					
ANR	1226640	ArgumentList	pcs		1226570	1					
ANR	1226641	Argument	pcs		1226570	0					
ANR	1226642	Identifier	pcs		1226570	0					
ANR	1226643	IdentifierDeclStatement	int ci ;	260:8:7749:7755	1226570	1	True				
ANR	1226644	IdentifierDecl	ci		1226570	0					
ANR	1226645	IdentifierDeclType	int		1226570	0					
ANR	1226646	Identifier	ci		1226570	1					
ANR	1226647	IdentifierDeclStatement	float cf ;	261:8:7765:7773	1226570	2	True				
ANR	1226648	IdentifierDecl	cf		1226570	0					
ANR	1226649	IdentifierDeclType	float		1226570	0					
ANR	1226650	Identifier	cf		1226570	1					
ANR	1226651	IdentifierDeclStatement	"int code = cs -> get_decoded ( cs , num_bits , decode , & cf ) ;"	262:8:7783:7836	1226570	3	True				
ANR	1226652	IdentifierDecl	"code = cs -> get_decoded ( cs , num_bits , decode , & cf )"		1226570	0					
ANR	1226653	IdentifierDeclType	int		1226570	0					
ANR	1226654	Identifier	code		1226570	1					
ANR	1226655	AssignmentExpression	"code = cs -> get_decoded ( cs , num_bits , decode , & cf )"		1226570	2		=			
ANR	1226656	Identifier	code		1226570	0					
ANR	1226657	CallExpression	"cs -> get_decoded ( cs , num_bits , decode , & cf )"		1226570	1					
ANR	1226658	Callee	cs -> get_decoded		1226570	0					
ANR	1226659	PtrMemberAccess	cs -> get_decoded		1226570	0					
ANR	1226660	Identifier	cs		1226570	0					
ANR	1226661	Identifier	get_decoded		1226570	1					
ANR	1226662	ArgumentList	cs		1226570	1					
ANR	1226663	Argument	cs		1226570	0					
ANR	1226664	Identifier	cs		1226570	0					
ANR	1226665	Argument	num_bits		1226570	1					
ANR	1226666	Identifier	num_bits		1226570	0					
ANR	1226667	Argument	decode		1226570	2					
ANR	1226668	Identifier	decode		1226570	0					
ANR	1226669	Argument	& cf		1226570	3					
ANR	1226670	UnaryOperationExpression	& cf		1226570	0					
ANR	1226671	UnaryOperator	&		1226570	0					
ANR	1226672	Identifier	cf		1226570	1					
ANR	1226673	IdentifierDeclStatement	gs_client_color cc ;	263:8:7846:7864	1226570	4	True				
ANR	1226674	IdentifierDecl	cc		1226570	0					
ANR	1226675	IdentifierDeclType	gs_client_color		1226570	0					
ANR	1226676	Identifier	cc		1226570	1					
ANR	1226677	IdentifierDeclStatement	int i ;	264:8:7874:7879	1226570	5	True				
ANR	1226678	IdentifierDecl	i		1226570	0					
ANR	1226679	IdentifierDeclType	int		1226570	0					
ANR	1226680	Identifier	i		1226570	1					
ANR	1226681	IfStatement	if ( code < 0 )		1226570	6					
ANR	1226682	Condition	code < 0	266:12:7894:7901	1226570	0	True				
ANR	1226683	RelationalExpression	code < 0		1226570	0		<			
ANR	1226684	Identifier	code		1226570	0					
ANR	1226685	PrimaryExpression	0		1226570	1					
ANR	1226686	ReturnStatement	return code ;	267:12:7916:7927	1226570	1	True				
ANR	1226687	Identifier	code		1226570	0					
ANR	1226688	IfStatement	if ( cf < 0 )		1226570	7					
ANR	1226689	Condition	cf < 0	268:12:7941:7946	1226570	0	True				
ANR	1226690	RelationalExpression	cf < 0		1226570	0		<			
ANR	1226691	Identifier	cf		1226570	0					
ANR	1226692	PrimaryExpression	0		1226570	1					
ANR	1226693	ExpressionStatement	return_error ( gs_error_rangecheck )	269:12:7961:7994	1226570	1	True				
ANR	1226694	CallExpression	return_error ( gs_error_rangecheck )		1226570	0					
ANR	1226695	Callee	return_error		1226570	0					
ANR	1226696	Identifier	return_error		1226570	0					
ANR	1226697	ArgumentList	gs_error_rangecheck		1226570	1					
ANR	1226698	Argument	gs_error_rangecheck		1226570	0					
ANR	1226699	Identifier	gs_error_rangecheck		1226570	0					
ANR	1226700	ExpressionStatement	ci = ( int ) cf	270:8:8004:8016	1226570	8	True				
ANR	1226701	AssignmentExpression	ci = ( int ) cf		1226570	0		=			
ANR	1226702	Identifier	ci		1226570	0					
ANR	1226703	CastExpression	( int ) cf		1226570	1					
ANR	1226704	CastTarget	int		1226570	0					
ANR	1226705	Identifier	cf		1226570	1					
ANR	1226706	IfStatement	if ( ci >= gs_cspace_indexed_num_entries ( pcs ) )		1226570	9					
ANR	1226707	Condition	ci >= gs_cspace_indexed_num_entries ( pcs )	271:12:8030:8069	1226570	0	True				
ANR	1226708	RelationalExpression	ci >= gs_cspace_indexed_num_entries ( pcs )		1226570	0		>=			
ANR	1226709	Identifier	ci		1226570	0					
ANR	1226710	CallExpression	gs_cspace_indexed_num_entries ( pcs )		1226570	1					
ANR	1226711	Callee	gs_cspace_indexed_num_entries		1226570	0					
ANR	1226712	Identifier	gs_cspace_indexed_num_entries		1226570	0					
ANR	1226713	ArgumentList	pcs		1226570	1					
ANR	1226714	Argument	pcs		1226570	0					
ANR	1226715	Identifier	pcs		1226570	0					
ANR	1226716	ExpressionStatement	return_error ( gs_error_rangecheck )	272:12:8084:8117	1226570	1	True				
ANR	1226717	CallExpression	return_error ( gs_error_rangecheck )		1226570	0					
ANR	1226718	Callee	return_error		1226570	0					
ANR	1226719	Identifier	return_error		1226570	0					
ANR	1226720	ArgumentList	gs_error_rangecheck		1226570	1					
ANR	1226721	Argument	gs_error_rangecheck		1226570	0					
ANR	1226722	Identifier	gs_error_rangecheck		1226570	0					
ANR	1226723	ExpressionStatement	"code = gs_cspace_indexed_lookup ( pcs , ci , & cc )"	273:8:8127:8172	1226570	10	True				
ANR	1226724	AssignmentExpression	"code = gs_cspace_indexed_lookup ( pcs , ci , & cc )"		1226570	0		=			
ANR	1226725	Identifier	code		1226570	0					
ANR	1226726	CallExpression	"gs_cspace_indexed_lookup ( pcs , ci , & cc )"		1226570	1					
ANR	1226727	Callee	gs_cspace_indexed_lookup		1226570	0					
ANR	1226728	Identifier	gs_cspace_indexed_lookup		1226570	0					
ANR	1226729	ArgumentList	pcs		1226570	1					
ANR	1226730	Argument	pcs		1226570	0					
ANR	1226731	Identifier	pcs		1226570	0					
ANR	1226732	Argument	ci		1226570	1					
ANR	1226733	Identifier	ci		1226570	0					
ANR	1226734	Argument	& cc		1226570	2					
ANR	1226735	UnaryOperationExpression	& cc		1226570	0					
ANR	1226736	UnaryOperator	&		1226570	0					
ANR	1226737	Identifier	cc		1226570	1					
ANR	1226738	IfStatement	if ( code < 0 )		1226570	11					
ANR	1226739	Condition	code < 0	274:12:8186:8193	1226570	0	True				
ANR	1226740	RelationalExpression	code < 0		1226570	0		<			
ANR	1226741	Identifier	code		1226570	0					
ANR	1226742	PrimaryExpression	0		1226570	1					
ANR	1226743	ReturnStatement	return code ;	275:12:8208:8219	1226570	1	True				
ANR	1226744	Identifier	code		1226570	0					
ANR	1226745	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		1226570	12					
ANR	1226746	ForInit	i = 0 ;	276:13:8234:8239	1226570	0	True				
ANR	1226747	AssignmentExpression	i = 0		1226570	0		=			
ANR	1226748	Identifier	i		1226570	0					
ANR	1226749	PrimaryExpression	0		1226570	1					
ANR	1226750	Condition	i < ncomp	276:20:8241:8249	1226570	1	True				
ANR	1226751	RelationalExpression	i < ncomp		1226570	0		<			
ANR	1226752	Identifier	i		1226570	0					
ANR	1226753	Identifier	ncomp		1226570	1					
ANR	1226754	UnaryExpression	++ i	276:31:8252:8254	1226570	2	True				
ANR	1226755	IncDec	++		1226570	0					
ANR	1226756	Identifier	i		1226570	1					
ANR	1226757	ExpressionStatement	pc [ i ] = cc . paint . values [ i ]	277:12:8269:8295	1226570	3	True				
ANR	1226758	AssignmentExpression	pc [ i ] = cc . paint . values [ i ]		1226570	0		=			
ANR	1226759	ArrayIndexing	pc [ i ]		1226570	0					
ANR	1226760	Identifier	pc		1226570	0					
ANR	1226761	Identifier	i		1226570	1					
ANR	1226762	ArrayIndexing	cc . paint . values [ i ]		1226570	1					
ANR	1226763	MemberAccess	cc . paint . values		1226570	0					
ANR	1226764	MemberAccess	cc . paint		1226570	0					
ANR	1226765	Identifier	cc		1226570	0					
ANR	1226766	Identifier	paint		1226570	1					
ANR	1226767	Identifier	values		1226570	1					
ANR	1226768	Identifier	i		1226570	1					
ANR	1226769	ElseStatement	else		1226570	0					
ANR	1226770	CompoundStatement		29:8:970:1071	1226570	0					
ANR	1226771	IdentifierDeclStatement	"int i , code ;"	279:8:8318:8329	1226570	0	True				
ANR	1226772	IdentifierDecl	i		1226570	0					
ANR	1226773	IdentifierDeclType	int		1226570	0					
ANR	1226774	Identifier	i		1226570	1					
ANR	1226775	IdentifierDecl	code		1226570	1					
ANR	1226776	IdentifierDeclType	int		1226570	0					
ANR	1226777	Identifier	code		1226570	1					
ANR	1226778	IdentifierDeclStatement	int ncomp = ( cs -> params -> Function != 0 ? 1 : gs_color_space_num_components ( pcs ) ) ;	280:8:8339:8440	1226570	1	True				
ANR	1226779	IdentifierDecl	ncomp = ( cs -> params -> Function != 0 ? 1 : gs_color_space_num_components ( pcs ) )		1226570	0					
ANR	1226780	IdentifierDeclType	int		1226570	0					
ANR	1226781	Identifier	ncomp		1226570	1					
ANR	1226782	AssignmentExpression	ncomp = ( cs -> params -> Function != 0 ? 1 : gs_color_space_num_components ( pcs ) )		1226570	2		=			
ANR	1226783	Identifier	ncomp		1226570	0					
ANR	1226784	ConditionalExpression	cs -> params -> Function != 0 ? 1 : gs_color_space_num_components ( pcs )		1226570	1					
ANR	1226785	Condition	cs -> params -> Function != 0		1226570	0					
ANR	1226786	EqualityExpression	cs -> params -> Function != 0		1226570	0		!=			
ANR	1226787	PtrMemberAccess	cs -> params -> Function		1226570	0					
ANR	1226788	PtrMemberAccess	cs -> params		1226570	0					
ANR	1226789	Identifier	cs		1226570	0					
ANR	1226790	Identifier	params		1226570	1					
ANR	1226791	Identifier	Function		1226570	1					
ANR	1226792	PrimaryExpression	0		1226570	1					
ANR	1226793	PrimaryExpression	1		1226570	1					
ANR	1226794	CallExpression	gs_color_space_num_components ( pcs )		1226570	2					
ANR	1226795	Callee	gs_color_space_num_components		1226570	0					
ANR	1226796	Identifier	gs_color_space_num_components		1226570	0					
ANR	1226797	ArgumentList	pcs		1226570	1					
ANR	1226798	Argument	pcs		1226570	0					
ANR	1226799	Identifier	pcs		1226570	0					
ANR	1226800	ForStatement	for ( i = 0 ; i < ncomp ; ++ i )		1226570	2					
ANR	1226801	ForInit	i = 0 ;	283:13:8456:8461	1226570	0	True				
ANR	1226802	AssignmentExpression	i = 0		1226570	0		=			
ANR	1226803	Identifier	i		1226570	0					
ANR	1226804	PrimaryExpression	0		1226570	1					
ANR	1226805	Condition	i < ncomp	283:20:8463:8471	1226570	1	True				
ANR	1226806	RelationalExpression	i < ncomp		1226570	0		<			
ANR	1226807	Identifier	i		1226570	0					
ANR	1226808	Identifier	ncomp		1226570	1					
ANR	1226809	UnaryExpression	++ i	283:31:8474:8476	1226570	2	True				
ANR	1226810	IncDec	++		1226570	0					
ANR	1226811	Identifier	i		1226570	1					
ANR	1226812	CompoundStatement		32:36:1110:1110	1226570	3					
ANR	1226813	IfStatement	"if ( ( code = cs -> get_decoded ( cs , num_bits , decode + i * 2 , & pc [ i ] ) ) < 0 )"		1226570	0					
ANR	1226814	Condition	"( code = cs -> get_decoded ( cs , num_bits , decode + i * 2 , & pc [ i ] ) ) < 0"	284:16:8497:8562	1226570	0	True				
ANR	1226815	RelationalExpression	"( code = cs -> get_decoded ( cs , num_bits , decode + i * 2 , & pc [ i ] ) ) < 0"		1226570	0		<			
ANR	1226816	AssignmentExpression	"code = cs -> get_decoded ( cs , num_bits , decode + i * 2 , & pc [ i ] )"		1226570	0		=			
ANR	1226817	Identifier	code		1226570	0					
ANR	1226818	CallExpression	"cs -> get_decoded ( cs , num_bits , decode + i * 2 , & pc [ i ] )"		1226570	1					
ANR	1226819	Callee	cs -> get_decoded		1226570	0					
ANR	1226820	PtrMemberAccess	cs -> get_decoded		1226570	0					
ANR	1226821	Identifier	cs		1226570	0					
ANR	1226822	Identifier	get_decoded		1226570	1					
ANR	1226823	ArgumentList	cs		1226570	1					
ANR	1226824	Argument	cs		1226570	0					
ANR	1226825	Identifier	cs		1226570	0					
ANR	1226826	Argument	num_bits		1226570	1					
ANR	1226827	Identifier	num_bits		1226570	0					
ANR	1226828	Argument	decode + i * 2		1226570	2					
ANR	1226829	AdditiveExpression	decode + i * 2		1226570	0		+			
ANR	1226830	Identifier	decode		1226570	0					
ANR	1226831	MultiplicativeExpression	i * 2		1226570	1		*			
ANR	1226832	Identifier	i		1226570	0					
ANR	1226833	PrimaryExpression	2		1226570	1					
ANR	1226834	Argument	& pc [ i ]		1226570	3					
ANR	1226835	UnaryOperationExpression	& pc [ i ]		1226570	0					
ANR	1226836	UnaryOperator	&		1226570	0					
ANR	1226837	ArrayIndexing	pc [ i ]		1226570	1					
ANR	1226838	Identifier	pc		1226570	0					
ANR	1226839	Identifier	i		1226570	1					
ANR	1226840	PrimaryExpression	0		1226570	1					
ANR	1226841	ReturnStatement	return code ;	285:16:8581:8592	1226570	1	True				
ANR	1226842	Identifier	code		1226570	0					
ANR	1226843	IfStatement	if ( cs -> params -> Function )		1226570	1					
ANR	1226844	Condition	cs -> params -> Function	286:16:8610:8629	1226570	0	True				
ANR	1226845	PtrMemberAccess	cs -> params -> Function		1226570	0					
ANR	1226846	PtrMemberAccess	cs -> params		1226570	0					
ANR	1226847	Identifier	cs		1226570	0					
ANR	1226848	Identifier	params		1226570	1					
ANR	1226849	Identifier	Function		1226570	1					
ANR	1226850	CompoundStatement		36:16:1281:1341	1226570	1					
ANR	1226851	IdentifierDeclStatement	gs_function_params_t * params = & cs -> params -> Function -> params ;	287:16:8650:8710	1226570	0	True				
ANR	1226852	IdentifierDecl	* params = & cs -> params -> Function -> params		1226570	0					
ANR	1226853	IdentifierDeclType	gs_function_params_t *		1226570	0					
ANR	1226854	Identifier	params		1226570	1					
ANR	1226855	AssignmentExpression	* params = & cs -> params -> Function -> params		1226570	2		=			
ANR	1226856	Identifier	params		1226570	0					
ANR	1226857	UnaryOperationExpression	& cs -> params -> Function -> params		1226570	1					
ANR	1226858	UnaryOperator	&		1226570	0					
ANR	1226859	PtrMemberAccess	cs -> params -> Function -> params		1226570	1					
ANR	1226860	PtrMemberAccess	cs -> params -> Function		1226570	0					
ANR	1226861	PtrMemberAccess	cs -> params		1226570	0					
ANR	1226862	Identifier	cs		1226570	0					
ANR	1226863	Identifier	params		1226570	1					
ANR	1226864	Identifier	Function		1226570	1					
ANR	1226865	Identifier	params		1226570	1					
ANR	1226866	IfStatement	if ( pc [ i ] < params -> Domain [ i + i ] )		1226570	1					
ANR	1226867	Condition	pc [ i ] < params -> Domain [ i + i ]	289:20:8733:8761	1226570	0	True				
ANR	1226868	RelationalExpression	pc [ i ] < params -> Domain [ i + i ]		1226570	0		<			
ANR	1226869	ArrayIndexing	pc [ i ]		1226570	0					
ANR	1226870	Identifier	pc		1226570	0					
ANR	1226871	Identifier	i		1226570	1					
ANR	1226872	ArrayIndexing	params -> Domain [ i + i ]		1226570	1					
ANR	1226873	PtrMemberAccess	params -> Domain		1226570	0					
ANR	1226874	Identifier	params		1226570	0					
ANR	1226875	Identifier	Domain		1226570	1					
ANR	1226876	AdditiveExpression	i + i		1226570	1		+			
ANR	1226877	Identifier	i		1226570	0					
ANR	1226878	Identifier	i		1226570	1					
ANR	1226879	ExpressionStatement	pc [ i ] = params -> Domain [ i + i ]	290:20:8784:8813	1226570	1	True				
ANR	1226880	AssignmentExpression	pc [ i ] = params -> Domain [ i + i ]		1226570	0		=			
ANR	1226881	ArrayIndexing	pc [ i ]		1226570	0					
ANR	1226882	Identifier	pc		1226570	0					
ANR	1226883	Identifier	i		1226570	1					
ANR	1226884	ArrayIndexing	params -> Domain [ i + i ]		1226570	1					
ANR	1226885	PtrMemberAccess	params -> Domain		1226570	0					
ANR	1226886	Identifier	params		1226570	0					
ANR	1226887	Identifier	Domain		1226570	1					
ANR	1226888	AdditiveExpression	i + i		1226570	1		+			
ANR	1226889	Identifier	i		1226570	0					
ANR	1226890	Identifier	i		1226570	1					
ANR	1226891	ElseStatement	else		1226570	0					
ANR	1226892	IfStatement	if ( pc [ i ] > params -> Domain [ i + i + 1 ] )		1226570	0					
ANR	1226893	Condition	pc [ i ] > params -> Domain [ i + i + 1 ]	291:25:8840:8872	1226570	0	True				
ANR	1226894	RelationalExpression	pc [ i ] > params -> Domain [ i + i + 1 ]		1226570	0		>			
ANR	1226895	ArrayIndexing	pc [ i ]		1226570	0					
ANR	1226896	Identifier	pc		1226570	0					
ANR	1226897	Identifier	i		1226570	1					
ANR	1226898	ArrayIndexing	params -> Domain [ i + i + 1 ]		1226570	1					
ANR	1226899	PtrMemberAccess	params -> Domain		1226570	0					
ANR	1226900	Identifier	params		1226570	0					
ANR	1226901	Identifier	Domain		1226570	1					
ANR	1226902	AdditiveExpression	i + i + 1		1226570	1		+			
ANR	1226903	Identifier	i		1226570	0					
ANR	1226904	AdditiveExpression	i + 1		1226570	1		+			
ANR	1226905	Identifier	i		1226570	0					
ANR	1226906	PrimaryExpression	1		1226570	1					
ANR	1226907	ExpressionStatement	pc [ i ] = params -> Domain [ i + i + 1 ]	292:20:8895:8928	1226570	1	True				
ANR	1226908	AssignmentExpression	pc [ i ] = params -> Domain [ i + i + 1 ]		1226570	0		=			
ANR	1226909	ArrayIndexing	pc [ i ]		1226570	0					
ANR	1226910	Identifier	pc		1226570	0					
ANR	1226911	Identifier	i		1226570	1					
ANR	1226912	ArrayIndexing	params -> Domain [ i + i + 1 ]		1226570	1					
ANR	1226913	PtrMemberAccess	params -> Domain		1226570	0					
ANR	1226914	Identifier	params		1226570	0					
ANR	1226915	Identifier	Domain		1226570	1					
ANR	1226916	AdditiveExpression	i + i + 1		1226570	1		+			
ANR	1226917	Identifier	i		1226570	0					
ANR	1226918	AdditiveExpression	i + 1		1226570	1		+			
ANR	1226919	Identifier	i		1226570	0					
ANR	1226920	PrimaryExpression	1		1226570	1					
ANR	1226921	ReturnStatement	return 0 ;	296:4:8964:8972	1226570	5	True				
ANR	1226922	PrimaryExpression	0		1226570	0					
ANR	1226923	ReturnType	int		1226570	1					
ANR	1226924	Identifier	shade_next_color		1226570	2					
ANR	1226925	ParameterList	"shade_coord_stream_t * cs , float * pc"		1226570	3					
ANR	1226926	Parameter	shade_coord_stream_t * cs	251:17:7330:7354	1226570	0	True				
ANR	1226927	ParameterType	shade_coord_stream_t *		1226570	0					
ANR	1226928	Identifier	cs		1226570	1					
ANR	1226929	Parameter	float * pc	251:44:7357:7365	1226570	1	True				
ANR	1226930	ParameterType	float *		1226570	0					
ANR	1226931	Identifier	pc		1226570	1					
ANR	1226932	CFGEntryNode	ENTRY		1226570		True				
ANR	1226933	CFGExitNode	EXIT		1226570		True				
ANR	1226934	Symbol	ncomp		1226570						
ANR	1226935	Symbol	params -> Domain		1226570						
ANR	1226936	Symbol	code		1226570						
ANR	1226937	Symbol	gs_error_rangecheck		1226570						
ANR	1226938	Symbol	cs -> params		1226570						
ANR	1226939	Symbol	* cc		1226570						
ANR	1226940	Symbol	& cs -> params -> Function -> params		1226570						
ANR	1226941	Symbol	* params -> Domain		1226570						
ANR	1226942	Symbol	& cc		1226570						
ANR	1226943	Symbol	decode		1226570						
ANR	1226944	Symbol	& cf		1226570						
ANR	1226945	Symbol	* * params		1226570						
ANR	1226946	Symbol	gs_cspace_indexed_num_entries		1226570						
ANR	1226947	Symbol	gs_color_space_index_Indexed		1226570						
ANR	1226948	Symbol	cs -> params -> Decode		1226570						
ANR	1226949	Symbol	* cc . paint . values		1226570						
ANR	1226950	Symbol	gs_cspace_base_space		1226570						
ANR	1226951	Symbol	gs_color_space_num_components		1226570						
ANR	1226952	Symbol	* * cs		1226570						
ANR	1226953	Symbol	cs -> get_decoded		1226570						
ANR	1226954	Symbol	gs_cspace_indexed_lookup		1226570						
ANR	1226955	Symbol	* params		1226570						
ANR	1226956	Symbol	cc		1226570						
ANR	1226957	Symbol	pcs		1226570						
ANR	1226958	Symbol	cf		1226570						
ANR	1226959	Symbol	ci		1226570						
ANR	1226960	Symbol	index		1226570						
ANR	1226961	Symbol	i		1226570						
ANR	1226962	Symbol	params		1226570						
ANR	1226963	Symbol	cs		1226570						
ANR	1226964	Symbol	* cc . paint		1226570						
ANR	1226965	Symbol	pc		1226570						
ANR	1226966	Symbol	cs -> params -> BitsPerComponent		1226570						
ANR	1226967	Symbol	* i		1226570						
ANR	1226968	Symbol	* cs		1226570						
ANR	1226969	Symbol	cc . paint		1226570						
ANR	1226970	Symbol	* pc		1226570						
ANR	1226971	Symbol	cs -> params -> Function		1226570						
ANR	1226972	Symbol	gs_color_space_get_index		1226570						
ANR	1226973	Symbol	num_bits		1226570						
ANR	1226974	Symbol	cc . paint . values		1226570						
ANR	1226975	Symbol	cs -> params -> ColorSpace		1226570						
ANR	1226976	Symbol	* cs -> params		1226570						
ANR	1226977	Function	shade_next_vertex	300:0:9023:9410							
ANR	1226978	FunctionDef	"shade_next_vertex (shade_coord_stream_t * cs , shading_vertex_t * vertex , patch_color_t * c)"		1226977	0					
ANR	1226979	CompoundStatement		302:0:9117:9410	1226977	0					
ANR	1226980	IdentifierDeclStatement	"int code = shade_next_coords ( cs , & vertex -> p , 1 ) ;"	303:4:9180:9227	1226977	0	True				
ANR	1226981	IdentifierDecl	"code = shade_next_coords ( cs , & vertex -> p , 1 )"		1226977	0					
ANR	1226982	IdentifierDeclType	int		1226977	0					
ANR	1226983	Identifier	code		1226977	1					
ANR	1226984	AssignmentExpression	"code = shade_next_coords ( cs , & vertex -> p , 1 )"		1226977	2		=			
ANR	1226985	Identifier	code		1226977	0					
ANR	1226986	CallExpression	"shade_next_coords ( cs , & vertex -> p , 1 )"		1226977	1					
ANR	1226987	Callee	shade_next_coords		1226977	0					
ANR	1226988	Identifier	shade_next_coords		1226977	0					
ANR	1226989	ArgumentList	cs		1226977	1					
ANR	1226990	Argument	cs		1226977	0					
ANR	1226991	Identifier	cs		1226977	0					
ANR	1226992	Argument	& vertex -> p		1226977	1					
ANR	1226993	UnaryOperationExpression	& vertex -> p		1226977	0					
ANR	1226994	UnaryOperator	&		1226977	0					
ANR	1226995	PtrMemberAccess	vertex -> p		1226977	1					
ANR	1226996	Identifier	vertex		1226977	0					
ANR	1226997	Identifier	p		1226977	1					
ANR	1226998	Argument	1		1226977	2					
ANR	1226999	PrimaryExpression	1		1226977	0					
ANR	1227000	IfStatement	if ( code >= 0 )		1226977	1					
ANR	1227001	Condition	code >= 0	305:8:9238:9246	1226977	0	True				
ANR	1227002	RelationalExpression	code >= 0		1226977	0		>=			
ANR	1227003	Identifier	code		1226977	0					
ANR	1227004	PrimaryExpression	0		1226977	1					
ANR	1227005	ExpressionStatement	"code = shade_next_color ( cs , c -> cc . paint . values )"	306:8:9257:9304	1226977	1	True				
ANR	1227006	AssignmentExpression	"code = shade_next_color ( cs , c -> cc . paint . values )"		1226977	0		=			
ANR	1227007	Identifier	code		1226977	0					
ANR	1227008	CallExpression	"shade_next_color ( cs , c -> cc . paint . values )"		1226977	1					
ANR	1227009	Callee	shade_next_color		1226977	0					
ANR	1227010	Identifier	shade_next_color		1226977	0					
ANR	1227011	ArgumentList	cs		1226977	1					
ANR	1227012	Argument	cs		1226977	0					
ANR	1227013	Identifier	cs		1226977	0					
ANR	1227014	Argument	c -> cc . paint . values		1226977	1					
ANR	1227015	MemberAccess	c -> cc . paint . values		1226977	0					
ANR	1227016	MemberAccess	c -> cc . paint		1226977	0					
ANR	1227017	PtrMemberAccess	c -> cc		1226977	0					
ANR	1227018	Identifier	c		1226977	0					
ANR	1227019	Identifier	cc		1226977	1					
ANR	1227020	Identifier	paint		1226977	1					
ANR	1227021	Identifier	values		1226977	1					
ANR	1227022	IfStatement	if ( code >= 0 )		1226977	2					
ANR	1227023	Condition	code >= 0	307:8:9314:9322	1226977	0	True				
ANR	1227024	RelationalExpression	code >= 0		1226977	0		>=			
ANR	1227025	Identifier	code		1226977	0					
ANR	1227026	PrimaryExpression	0		1226977	1					
ANR	1227027	ExpressionStatement	"cs -> align ( cs , 8 )"	308:8:9333:9349	1226977	1	True				
ANR	1227028	CallExpression	"cs -> align ( cs , 8 )"		1226977	0					
ANR	1227029	Callee	cs -> align		1226977	0					
ANR	1227030	PtrMemberAccess	cs -> align		1226977	0					
ANR	1227031	Identifier	cs		1226977	0					
ANR	1227032	Identifier	align		1226977	1					
ANR	1227033	ArgumentList	cs		1226977	1					
ANR	1227034	Argument	cs		1226977	0					
ANR	1227035	Identifier	cs		1226977	0					
ANR	1227036	Argument	8		1226977	1					
ANR	1227037	PrimaryExpression	8		1226977	0					
ANR	1227038	ReturnStatement	return code ;	309:4:9397:9408	1226977	3	True				
ANR	1227039	Identifier	code		1226977	0					
ANR	1227040	ReturnType	int		1226977	1					
ANR	1227041	Identifier	shade_next_vertex		1226977	2					
ANR	1227042	ParameterList	"shade_coord_stream_t * cs , shading_vertex_t * vertex , patch_color_t * c"		1226977	3					
ANR	1227043	Parameter	shade_coord_stream_t * cs	301:18:9045:9069	1226977	0	True				
ANR	1227044	ParameterType	shade_coord_stream_t *		1226977	0					
ANR	1227045	Identifier	cs		1226977	1					
ANR	1227046	Parameter	shading_vertex_t * vertex	301:45:9072:9096	1226977	1	True				
ANR	1227047	ParameterType	shading_vertex_t *		1226977	0					
ANR	1227048	Identifier	vertex		1226977	1					
ANR	1227049	Parameter	patch_color_t * c	301:72:9099:9114	1226977	2	True				
ANR	1227050	ParameterType	patch_color_t *		1226977	0					
ANR	1227051	Identifier	c		1226977	1					
ANR	1227052	CFGEntryNode	ENTRY		1226977		True				
ANR	1227053	CFGExitNode	EXIT		1226977		True				
ANR	1227054	Symbol	cs		1226977						
ANR	1227055	Symbol	shade_next_color		1226977						
ANR	1227056	Symbol	c -> cc . paint		1226977						
ANR	1227057	Symbol	c		1226977						
ANR	1227058	Symbol	& vertex -> p		1226977						
ANR	1227059	Symbol	code		1226977						
ANR	1227060	Symbol	vertex		1226977						
ANR	1227061	Symbol	shade_next_coords		1226977						
ANR	1227062	Symbol	c -> cc		1226977						
ANR	1227063	Symbol	c -> cc . paint . values		1226977						
ANR	1227064	Symbol	* c		1226977						
ANR	1227065	Function	shade_init_fill_state	315:0:9530:14536							
ANR	1227066	FunctionDef	"shade_init_fill_state (shading_fill_state_t * pfs , const gs_shading_t * psh , gx_device * dev , gs_gstate * pgs)"		1227065	0					
ANR	1227067	CompoundStatement		318:0:9666:14536	1227065	0					
ANR	1227068	IdentifierDeclStatement	const gs_color_space * pcs = psh -> params . ColorSpace ;	319:4:9672:9722	1227065	0	True				
ANR	1227069	IdentifierDecl	* pcs = psh -> params . ColorSpace		1227065	0					
ANR	1227070	IdentifierDeclType	const gs_color_space *		1227065	0					
ANR	1227071	Identifier	pcs		1227065	1					
ANR	1227072	AssignmentExpression	* pcs = psh -> params . ColorSpace		1227065	2		=			
ANR	1227073	Identifier	pcs		1227065	0					
ANR	1227074	MemberAccess	psh -> params . ColorSpace		1227065	1					
ANR	1227075	PtrMemberAccess	psh -> params		1227065	0					
ANR	1227076	Identifier	psh		1227065	0					
ANR	1227077	Identifier	params		1227065	1					
ANR	1227078	Identifier	ColorSpace		1227065	1					
ANR	1227079	IdentifierDeclStatement	"float max_error = min ( pgs -> smoothness , MAX_SMOOTHNESS ) ;"	320:4:9728:9782	1227065	1	True				
ANR	1227080	IdentifierDecl	"max_error = min ( pgs -> smoothness , MAX_SMOOTHNESS )"		1227065	0					
ANR	1227081	IdentifierDeclType	float		1227065	0					
ANR	1227082	Identifier	max_error		1227065	1					
ANR	1227083	AssignmentExpression	"max_error = min ( pgs -> smoothness , MAX_SMOOTHNESS )"		1227065	2		=			
ANR	1227084	Identifier	max_error		1227065	0					
ANR	1227085	CallExpression	"min ( pgs -> smoothness , MAX_SMOOTHNESS )"		1227065	1					
ANR	1227086	Callee	min		1227065	0					
ANR	1227087	Identifier	min		1227065	0					
ANR	1227088	ArgumentList	pgs -> smoothness		1227065	1					
ANR	1227089	Argument	pgs -> smoothness		1227065	0					
ANR	1227090	PtrMemberAccess	pgs -> smoothness		1227065	0					
ANR	1227091	Identifier	pgs		1227065	0					
ANR	1227092	Identifier	smoothness		1227065	1					
ANR	1227093	Argument	MAX_SMOOTHNESS		1227065	1					
ANR	1227094	Identifier	MAX_SMOOTHNESS		1227065	0					
ANR	1227095	IdentifierDeclStatement	bool is_lab ;	321:4:9788:9799	1227065	2	True				
ANR	1227096	IdentifierDecl	is_lab		1227065	0					
ANR	1227097	IdentifierDeclType	bool		1227065	0					
ANR	1227098	Identifier	is_lab		1227065	1					
ANR	1227099	IdentifierDeclStatement	bool cs_lin_test ;	322:4:9805:9821	1227065	3	True				
ANR	1227100	IdentifierDecl	cs_lin_test		1227065	0					
ANR	1227101	IdentifierDeclType	bool		1227065	0					
ANR	1227102	Identifier	cs_lin_test		1227065	1					
ANR	1227103	IdentifierDeclStatement	int code ;	323:4:9827:9835	1227065	4	True				
ANR	1227104	IdentifierDecl	code		1227065	0					
ANR	1227105	IdentifierDeclType	int		1227065	0					
ANR	1227106	Identifier	code		1227065	1					
ANR	1227107	IdentifierDeclStatement	"long num_colors = max ( dev -> color_info . max_gray , dev -> color_info . max_color ) + 1 ;"	330:4:10043:10129	1227065	5	True				
ANR	1227108	IdentifierDecl	"num_colors = max ( dev -> color_info . max_gray , dev -> color_info . max_color ) + 1"		1227065	0					
ANR	1227109	IdentifierDeclType	long		1227065	0					
ANR	1227110	Identifier	num_colors		1227065	1					
ANR	1227111	AssignmentExpression	"num_colors = max ( dev -> color_info . max_gray , dev -> color_info . max_color ) + 1"		1227065	2		=			
ANR	1227112	Identifier	num_colors		1227065	0					
ANR	1227113	AdditiveExpression	"max ( dev -> color_info . max_gray , dev -> color_info . max_color ) + 1"		1227065	1		+			
ANR	1227114	CallExpression	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		1227065	0					
ANR	1227115	Callee	max		1227065	0					
ANR	1227116	Identifier	max		1227065	0					
ANR	1227117	ArgumentList	dev -> color_info . max_gray		1227065	1					
ANR	1227118	Argument	dev -> color_info . max_gray		1227065	0					
ANR	1227119	MemberAccess	dev -> color_info . max_gray		1227065	0					
ANR	1227120	PtrMemberAccess	dev -> color_info		1227065	0					
ANR	1227121	Identifier	dev		1227065	0					
ANR	1227122	Identifier	color_info		1227065	1					
ANR	1227123	Identifier	max_gray		1227065	1					
ANR	1227124	Argument	dev -> color_info . max_color		1227065	1					
ANR	1227125	MemberAccess	dev -> color_info . max_color		1227065	0					
ANR	1227126	PtrMemberAccess	dev -> color_info		1227065	0					
ANR	1227127	Identifier	dev		1227065	0					
ANR	1227128	Identifier	color_info		1227065	1					
ANR	1227129	Identifier	max_color		1227065	1					
ANR	1227130	PrimaryExpression	1		1227065	1					
ANR	1227131	IdentifierDeclStatement	const gs_range * ranges = 0 ;	332:4:10135:10161	1227065	6	True				
ANR	1227132	IdentifierDecl	* ranges = 0		1227065	0					
ANR	1227133	IdentifierDeclType	const gs_range *		1227065	0					
ANR	1227134	Identifier	ranges		1227065	1					
ANR	1227135	AssignmentExpression	* ranges = 0		1227065	2		=			
ANR	1227136	Identifier	ranges		1227065	0					
ANR	1227137	PrimaryExpression	0		1227065	1					
ANR	1227138	IdentifierDeclStatement	int ci ;	333:4:10167:10173	1227065	7	True				
ANR	1227139	IdentifierDecl	ci		1227065	0					
ANR	1227140	IdentifierDeclType	int		1227065	0					
ANR	1227141	Identifier	ci		1227065	1					
ANR	1227142	IdentifierDeclStatement	gsicc_rendering_param_t rendering_params ;	334:4:10179:10219	1227065	8	True				
ANR	1227143	IdentifierDecl	rendering_params		1227065	0					
ANR	1227144	IdentifierDeclType	gsicc_rendering_param_t		1227065	0					
ANR	1227145	Identifier	rendering_params		1227065	1					
ANR	1227146	ExpressionStatement	pfs -> cs_always_linear = false	336:4:10226:10255	1227065	9	True				
ANR	1227147	AssignmentExpression	pfs -> cs_always_linear = false		1227065	0		=			
ANR	1227148	PtrMemberAccess	pfs -> cs_always_linear		1227065	0					
ANR	1227149	Identifier	pfs		1227065	0					
ANR	1227150	Identifier	cs_always_linear		1227065	1					
ANR	1227151	Identifier	false		1227065	1					
ANR	1227152	ExpressionStatement	pfs -> dev = dev	337:4:10261:10275	1227065	10	True				
ANR	1227153	AssignmentExpression	pfs -> dev = dev		1227065	0		=			
ANR	1227154	PtrMemberAccess	pfs -> dev		1227065	0					
ANR	1227155	Identifier	pfs		1227065	0					
ANR	1227156	Identifier	dev		1227065	1					
ANR	1227157	Identifier	dev		1227065	1					
ANR	1227158	ExpressionStatement	pfs -> pgs = pgs	338:4:10281:10295	1227065	11	True				
ANR	1227159	AssignmentExpression	pfs -> pgs = pgs		1227065	0		=			
ANR	1227160	PtrMemberAccess	pfs -> pgs		1227065	0					
ANR	1227161	Identifier	pfs		1227065	0					
ANR	1227162	Identifier	pgs		1227065	1					
ANR	1227163	Identifier	pgs		1227065	1					
ANR	1227164	Label	top :	339:0:10297:10300	1227065	12	True				
ANR	1227165	Identifier	top		1227065	0					
ANR	1227166	ExpressionStatement	pfs -> direct_space = pcs	340:4:10306:10329	1227065	13	True				
ANR	1227167	AssignmentExpression	pfs -> direct_space = pcs		1227065	0		=			
ANR	1227168	PtrMemberAccess	pfs -> direct_space		1227065	0					
ANR	1227169	Identifier	pfs		1227065	0					
ANR	1227170	Identifier	direct_space		1227065	1					
ANR	1227171	Identifier	pcs		1227065	1					
ANR	1227172	ExpressionStatement	pfs -> num_components = gs_color_space_num_components ( pcs )	341:4:10335:10391	1227065	14	True				
ANR	1227173	AssignmentExpression	pfs -> num_components = gs_color_space_num_components ( pcs )		1227065	0		=			
ANR	1227174	PtrMemberAccess	pfs -> num_components		1227065	0					
ANR	1227175	Identifier	pfs		1227065	0					
ANR	1227176	Identifier	num_components		1227065	1					
ANR	1227177	CallExpression	gs_color_space_num_components ( pcs )		1227065	1					
ANR	1227178	Callee	gs_color_space_num_components		1227065	0					
ANR	1227179	Identifier	gs_color_space_num_components		1227065	0					
ANR	1227180	ArgumentList	pcs		1227065	1					
ANR	1227181	Argument	pcs		1227065	0					
ANR	1227182	Identifier	pcs		1227065	0					
ANR	1227183	SwitchStatement	switch ( gs_color_space_get_index ( pcs ) )		1227065	15					
ANR	1227184	Condition	gs_color_space_get_index ( pcs )	342:13:10406:10434	1227065	0	True				
ANR	1227185	CallExpression	gs_color_space_get_index ( pcs )		1227065	0					
ANR	1227186	Callee	gs_color_space_get_index		1227065	0					
ANR	1227187	Identifier	gs_color_space_get_index		1227065	0					
ANR	1227188	ArgumentList	pcs		1227065	1					
ANR	1227189	Argument	pcs		1227065	0					
ANR	1227190	Identifier	pcs		1227065	0					
ANR	1227191	CompoundStatement		26:8:779:779	1227065	1					
ANR	1227192	Label	case gs_color_space_index_Indexed :	344:8:10456:10489	1227065	0	True				
ANR	1227193	Identifier	gs_color_space_index_Indexed		1227065	0					
ANR	1227194	ExpressionStatement	pcs = gs_cspace_base_space ( pcs )	345:12:10503:10534	1227065	1	True				
ANR	1227195	AssignmentExpression	pcs = gs_cspace_base_space ( pcs )		1227065	0		=			
ANR	1227196	Identifier	pcs		1227065	0					
ANR	1227197	CallExpression	gs_cspace_base_space ( pcs )		1227065	1					
ANR	1227198	Callee	gs_cspace_base_space		1227065	0					
ANR	1227199	Identifier	gs_cspace_base_space		1227065	0					
ANR	1227200	ArgumentList	pcs		1227065	1					
ANR	1227201	Argument	pcs		1227065	0					
ANR	1227202	Identifier	pcs		1227065	0					
ANR	1227203	GotoStatement	goto top ;	346:12:10548:10556	1227065	2	True				
ANR	1227204	Identifier	top		1227065	0					
ANR	1227205	Label	case gs_color_space_index_CIEDEFG :	347:8:10566:10599	1227065	3	True				
ANR	1227206	Identifier	gs_color_space_index_CIEDEFG		1227065	0					
ANR	1227207	ExpressionStatement	ranges = pcs -> params . defg -> RangeDEFG . ranges	348:12:10613:10656	1227065	4	True				
ANR	1227208	AssignmentExpression	ranges = pcs -> params . defg -> RangeDEFG . ranges		1227065	0		=			
ANR	1227209	Identifier	ranges		1227065	0					
ANR	1227210	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		1227065	1					
ANR	1227211	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		1227065	0					
ANR	1227212	MemberAccess	pcs -> params . defg		1227065	0					
ANR	1227213	PtrMemberAccess	pcs -> params		1227065	0					
ANR	1227214	Identifier	pcs		1227065	0					
ANR	1227215	Identifier	params		1227065	1					
ANR	1227216	Identifier	defg		1227065	1					
ANR	1227217	Identifier	RangeDEFG		1227065	1					
ANR	1227218	Identifier	ranges		1227065	1					
ANR	1227219	BreakStatement	break ;	349:12:10670:10675	1227065	5	True				
ANR	1227220	Label	case gs_color_space_index_CIEDEF :	350:8:10685:10717	1227065	6	True				
ANR	1227221	Identifier	gs_color_space_index_CIEDEF		1227065	0					
ANR	1227222	ExpressionStatement	ranges = pcs -> params . def -> RangeDEF . ranges	351:12:10731:10772	1227065	7	True				
ANR	1227223	AssignmentExpression	ranges = pcs -> params . def -> RangeDEF . ranges		1227065	0		=			
ANR	1227224	Identifier	ranges		1227065	0					
ANR	1227225	MemberAccess	pcs -> params . def -> RangeDEF . ranges		1227065	1					
ANR	1227226	PtrMemberAccess	pcs -> params . def -> RangeDEF		1227065	0					
ANR	1227227	MemberAccess	pcs -> params . def		1227065	0					
ANR	1227228	PtrMemberAccess	pcs -> params		1227065	0					
ANR	1227229	Identifier	pcs		1227065	0					
ANR	1227230	Identifier	params		1227065	1					
ANR	1227231	Identifier	def		1227065	1					
ANR	1227232	Identifier	RangeDEF		1227065	1					
ANR	1227233	Identifier	ranges		1227065	1					
ANR	1227234	BreakStatement	break ;	352:12:10786:10791	1227065	8	True				
ANR	1227235	Label	case gs_color_space_index_CIEABC :	353:8:10801:10833	1227065	9	True				
ANR	1227236	Identifier	gs_color_space_index_CIEABC		1227065	0					
ANR	1227237	ExpressionStatement	ranges = pcs -> params . abc -> RangeABC . ranges	354:12:10847:10888	1227065	10	True				
ANR	1227238	AssignmentExpression	ranges = pcs -> params . abc -> RangeABC . ranges		1227065	0		=			
ANR	1227239	Identifier	ranges		1227065	0					
ANR	1227240	MemberAccess	pcs -> params . abc -> RangeABC . ranges		1227065	1					
ANR	1227241	PtrMemberAccess	pcs -> params . abc -> RangeABC		1227065	0					
ANR	1227242	MemberAccess	pcs -> params . abc		1227065	0					
ANR	1227243	PtrMemberAccess	pcs -> params		1227065	0					
ANR	1227244	Identifier	pcs		1227065	0					
ANR	1227245	Identifier	params		1227065	1					
ANR	1227246	Identifier	abc		1227065	1					
ANR	1227247	Identifier	RangeABC		1227065	1					
ANR	1227248	Identifier	ranges		1227065	1					
ANR	1227249	BreakStatement	break ;	355:12:10902:10907	1227065	11	True				
ANR	1227250	Label	case gs_color_space_index_CIEA :	356:8:10917:10947	1227065	12	True				
ANR	1227251	Identifier	gs_color_space_index_CIEA		1227065	0					
ANR	1227252	ExpressionStatement	ranges = & pcs -> params . a -> RangeA	357:12:10961:10992	1227065	13	True				
ANR	1227253	AssignmentExpression	ranges = & pcs -> params . a -> RangeA		1227065	0		=			
ANR	1227254	Identifier	ranges		1227065	0					
ANR	1227255	UnaryOperationExpression	& pcs -> params . a -> RangeA		1227065	1					
ANR	1227256	UnaryOperator	&		1227065	0					
ANR	1227257	PtrMemberAccess	pcs -> params . a -> RangeA		1227065	1					
ANR	1227258	MemberAccess	pcs -> params . a		1227065	0					
ANR	1227259	PtrMemberAccess	pcs -> params		1227065	0					
ANR	1227260	Identifier	pcs		1227065	0					
ANR	1227261	Identifier	params		1227065	1					
ANR	1227262	Identifier	a		1227065	1					
ANR	1227263	Identifier	RangeA		1227065	1					
ANR	1227264	BreakStatement	break ;	358:12:11006:11011	1227065	14	True				
ANR	1227265	Label	case gs_color_space_index_ICC :	359:8:11021:11050	1227065	15	True				
ANR	1227266	Identifier	gs_color_space_index_ICC		1227065	0					
ANR	1227267	ExpressionStatement	ranges = pcs -> cmm_icc_profile_data -> Range . ranges	360:12:11064:11112	1227065	16	True				
ANR	1227268	AssignmentExpression	ranges = pcs -> cmm_icc_profile_data -> Range . ranges		1227065	0		=			
ANR	1227269	Identifier	ranges		1227065	0					
ANR	1227270	MemberAccess	pcs -> cmm_icc_profile_data -> Range . ranges		1227065	1					
ANR	1227271	PtrMemberAccess	pcs -> cmm_icc_profile_data -> Range		1227065	0					
ANR	1227272	PtrMemberAccess	pcs -> cmm_icc_profile_data		1227065	0					
ANR	1227273	Identifier	pcs		1227065	0					
ANR	1227274	Identifier	cmm_icc_profile_data		1227065	1					
ANR	1227275	Identifier	Range		1227065	1					
ANR	1227276	Identifier	ranges		1227065	1					
ANR	1227277	BreakStatement	break ;	361:12:11126:11131	1227065	17	True				
ANR	1227278	Label	default :	362:8:11141:11148	1227065	18	True				
ANR	1227279	Identifier	default		1227065	0					
ANR	1227280	BreakStatement	break ;	363:12:11162:11167	1227065	19	True				
ANR	1227281	IfStatement	if ( num_colors <= 32 )		1227065	16					
ANR	1227282	Condition	num_colors <= 32	365:8:11187:11202	1227065	0	True				
ANR	1227283	RelationalExpression	num_colors <= 32		1227065	0		<=			
ANR	1227284	Identifier	num_colors		1227065	0					
ANR	1227285	PrimaryExpression	32		1227065	1					
ANR	1227286	CompoundStatement		48:26:1538:1538	1227065	1					
ANR	1227287	ExpressionStatement	num_colors *= pgs -> dev_ht -> components [ 0 ] . corder . num_levels	367:8:11271:11329	1227065	0	True				
ANR	1227288	AssignmentExpression	num_colors *= pgs -> dev_ht -> components [ 0 ] . corder . num_levels		1227065	0		*=			
ANR	1227289	Identifier	num_colors		1227065	0					
ANR	1227290	MemberAccess	pgs -> dev_ht -> components [ 0 ] . corder . num_levels		1227065	1					
ANR	1227291	MemberAccess	pgs -> dev_ht -> components [ 0 ] . corder		1227065	0					
ANR	1227292	ArrayIndexing	pgs -> dev_ht -> components [ 0 ]		1227065	0					
ANR	1227293	PtrMemberAccess	pgs -> dev_ht -> components		1227065	0					
ANR	1227294	PtrMemberAccess	pgs -> dev_ht		1227065	0					
ANR	1227295	Identifier	pgs		1227065	0					
ANR	1227296	Identifier	dev_ht		1227065	1					
ANR	1227297	Identifier	components		1227065	1					
ANR	1227298	PrimaryExpression	0		1227065	1					
ANR	1227299	Identifier	corder		1227065	1					
ANR	1227300	Identifier	num_levels		1227065	1					
ANR	1227301	IfStatement	if ( psh -> head . type == 2 || psh -> head . type == 3 )		1227065	17					
ANR	1227302	Condition	psh -> head . type == 2 || psh -> head . type == 3	369:8:11345:11386	1227065	0	True				
ANR	1227303	OrExpression	psh -> head . type == 2 || psh -> head . type == 3		1227065	0		||			
ANR	1227304	EqualityExpression	psh -> head . type == 2		1227065	0		==			
ANR	1227305	MemberAccess	psh -> head . type		1227065	0					
ANR	1227306	PtrMemberAccess	psh -> head		1227065	0					
ANR	1227307	Identifier	psh		1227065	0					
ANR	1227308	Identifier	head		1227065	1					
ANR	1227309	Identifier	type		1227065	1					
ANR	1227310	PrimaryExpression	2		1227065	1					
ANR	1227311	EqualityExpression	psh -> head . type == 3		1227065	1		==			
ANR	1227312	MemberAccess	psh -> head . type		1227065	0					
ANR	1227313	PtrMemberAccess	psh -> head		1227065	0					
ANR	1227314	Identifier	psh		1227065	0					
ANR	1227315	Identifier	head		1227065	1					
ANR	1227316	Identifier	type		1227065	1					
ANR	1227317	PrimaryExpression	3		1227065	1					
ANR	1227318	CompoundStatement		52:52:1722:1722	1227065	1					
ANR	1227319	ExpressionStatement	max_error *= 0.25	370:8:11399:11416	1227065	0	True				
ANR	1227320	AssignmentExpression	max_error *= 0.25		1227065	0		*=			
ANR	1227321	Identifier	max_error		1227065	0					
ANR	1227322	PrimaryExpression	0.25		1227065	1					
ANR	1227323	ExpressionStatement	num_colors *= 2	371:8:11426:11441	1227065	1	True				
ANR	1227324	AssignmentExpression	num_colors *= 2		1227065	0		*=			
ANR	1227325	Identifier	num_colors		1227065	0					
ANR	1227326	PrimaryExpression	2		1227065	1					
ANR	1227327	IfStatement	if ( max_error < 1.0 / num_colors )		1227065	18					
ANR	1227328	Condition	max_error < 1.0 / num_colors	373:8:11457:11484	1227065	0	True				
ANR	1227329	RelationalExpression	max_error < 1.0 / num_colors		1227065	0		<			
ANR	1227330	Identifier	max_error		1227065	0					
ANR	1227331	MultiplicativeExpression	1.0 / num_colors		1227065	1		/			
ANR	1227332	PrimaryExpression	1.0		1227065	0					
ANR	1227333	Identifier	num_colors		1227065	1					
ANR	1227334	ExpressionStatement	max_error = 1.0 / num_colors	374:8:11495:11523	1227065	1	True				
ANR	1227335	AssignmentExpression	max_error = 1.0 / num_colors		1227065	0		=			
ANR	1227336	Identifier	max_error		1227065	0					
ANR	1227337	MultiplicativeExpression	1.0 / num_colors		1227065	1		/			
ANR	1227338	PrimaryExpression	1.0		1227065	0					
ANR	1227339	Identifier	num_colors		1227065	1					
ANR	1227340	ForStatement	for ( ci = 0 ; ci < pfs -> num_components ; ++ ci )		1227065	19					
ANR	1227341	ForInit	ci = 0 ;	375:9:11534:11540	1227065	0	True				
ANR	1227342	AssignmentExpression	ci = 0		1227065	0		=			
ANR	1227343	Identifier	ci		1227065	0					
ANR	1227344	PrimaryExpression	0		1227065	1					
ANR	1227345	Condition	ci < pfs -> num_components	375:17:11542:11565	1227065	1	True				
ANR	1227346	RelationalExpression	ci < pfs -> num_components		1227065	0		<			
ANR	1227347	Identifier	ci		1227065	0					
ANR	1227348	PtrMemberAccess	pfs -> num_components		1227065	1					
ANR	1227349	Identifier	pfs		1227065	0					
ANR	1227350	Identifier	num_components		1227065	1					
ANR	1227351	UnaryExpression	++ ci	375:43:11568:11571	1227065	2	True				
ANR	1227352	IncDec	++		1227065	0					
ANR	1227353	Identifier	ci		1227065	1					
ANR	1227354	ExpressionStatement	pfs -> cc_max_error [ ci ] = ( ranges == 0 ? max_error : max_error * ( ranges [ ci ] . rmax - ranges [ ci ] . rmin ) )	376:8:11582:11706	1227065	3	True				
ANR	1227355	AssignmentExpression	pfs -> cc_max_error [ ci ] = ( ranges == 0 ? max_error : max_error * ( ranges [ ci ] . rmax - ranges [ ci ] . rmin ) )		1227065	0		=			
ANR	1227356	ArrayIndexing	pfs -> cc_max_error [ ci ]		1227065	0					
ANR	1227357	PtrMemberAccess	pfs -> cc_max_error		1227065	0					
ANR	1227358	Identifier	pfs		1227065	0					
ANR	1227359	Identifier	cc_max_error		1227065	1					
ANR	1227360	Identifier	ci		1227065	1					
ANR	1227361	ConditionalExpression	ranges == 0 ? max_error : max_error * ( ranges [ ci ] . rmax - ranges [ ci ] . rmin )		1227065	1					
ANR	1227362	Condition	ranges == 0		1227065	0					
ANR	1227363	EqualityExpression	ranges == 0		1227065	0		==			
ANR	1227364	Identifier	ranges		1227065	0					
ANR	1227365	PrimaryExpression	0		1227065	1					
ANR	1227366	Identifier	max_error		1227065	1					
ANR	1227367	MultiplicativeExpression	max_error * ( ranges [ ci ] . rmax - ranges [ ci ] . rmin )		1227065	2		*			
ANR	1227368	Identifier	max_error		1227065	0					
ANR	1227369	AdditiveExpression	ranges [ ci ] . rmax - ranges [ ci ] . rmin		1227065	1		-			
ANR	1227370	MemberAccess	ranges [ ci ] . rmax		1227065	0					
ANR	1227371	ArrayIndexing	ranges [ ci ]		1227065	0					
ANR	1227372	Identifier	ranges		1227065	0					
ANR	1227373	Identifier	ci		1227065	1					
ANR	1227374	Identifier	rmax		1227065	1					
ANR	1227375	MemberAccess	ranges [ ci ] . rmin		1227065	1					
ANR	1227376	ArrayIndexing	ranges [ ci ]		1227065	0					
ANR	1227377	Identifier	ranges		1227065	0					
ANR	1227378	Identifier	ci		1227065	1					
ANR	1227379	Identifier	rmin		1227065	1					
ANR	1227380	IfStatement	if ( pgs -> has_transparency && pgs -> trans_device != NULL )		1227065	20					
ANR	1227381	Condition	pgs -> has_transparency && pgs -> trans_device != NULL	379:8:11716:11765	1227065	0	True				
ANR	1227382	AndExpression	pgs -> has_transparency && pgs -> trans_device != NULL		1227065	0		&&			
ANR	1227383	PtrMemberAccess	pgs -> has_transparency		1227065	0					
ANR	1227384	Identifier	pgs		1227065	0					
ANR	1227385	Identifier	has_transparency		1227065	1					
ANR	1227386	EqualityExpression	pgs -> trans_device != NULL		1227065	1		!=			
ANR	1227387	PtrMemberAccess	pgs -> trans_device		1227065	0					
ANR	1227388	Identifier	pgs		1227065	0					
ANR	1227389	Identifier	trans_device		1227065	1					
ANR	1227390	Identifier	NULL		1227065	1					
ANR	1227391	CompoundStatement		62:60:2101:2101	1227065	1					
ANR	1227392	ExpressionStatement	pfs -> trans_device = pgs -> trans_device	380:8:11778:11815	1227065	0	True				
ANR	1227393	AssignmentExpression	pfs -> trans_device = pgs -> trans_device		1227065	0		=			
ANR	1227394	PtrMemberAccess	pfs -> trans_device		1227065	0					
ANR	1227395	Identifier	pfs		1227065	0					
ANR	1227396	Identifier	trans_device		1227065	1					
ANR	1227397	PtrMemberAccess	pgs -> trans_device		1227065	1					
ANR	1227398	Identifier	pgs		1227065	0					
ANR	1227399	Identifier	trans_device		1227065	1					
ANR	1227400	ElseStatement	else		1227065	0					
ANR	1227401	CompoundStatement		64:11:2161:2161	1227065	0					
ANR	1227402	ExpressionStatement	pfs -> trans_device = dev	382:8:11838:11861	1227065	0	True				
ANR	1227403	AssignmentExpression	pfs -> trans_device = dev		1227065	0		=			
ANR	1227404	PtrMemberAccess	pfs -> trans_device		1227065	0					
ANR	1227405	Identifier	pfs		1227065	0					
ANR	1227406	Identifier	trans_device		1227065	1					
ANR	1227407	Identifier	dev		1227065	1					
ANR	1227408	IfStatement	if ( gs_color_space_is_PSCIE ( pcs ) && pcs -> icc_equivalent == NULL )		1227065	21					
ANR	1227409	Condition	gs_color_space_is_PSCIE ( pcs ) && pcs -> icc_equivalent == NULL	386:8:11992:12050	1227065	0	True				
ANR	1227410	AndExpression	gs_color_space_is_PSCIE ( pcs ) && pcs -> icc_equivalent == NULL		1227065	0		&&			
ANR	1227411	CallExpression	gs_color_space_is_PSCIE ( pcs )		1227065	0					
ANR	1227412	Callee	gs_color_space_is_PSCIE		1227065	0					
ANR	1227413	Identifier	gs_color_space_is_PSCIE		1227065	0					
ANR	1227414	ArgumentList	pcs		1227065	1					
ANR	1227415	Argument	pcs		1227065	0					
ANR	1227416	Identifier	pcs		1227065	0					
ANR	1227417	EqualityExpression	pcs -> icc_equivalent == NULL		1227065	1		==			
ANR	1227418	PtrMemberAccess	pcs -> icc_equivalent		1227065	0					
ANR	1227419	Identifier	pcs		1227065	0					
ANR	1227420	Identifier	icc_equivalent		1227065	1					
ANR	1227421	Identifier	NULL		1227065	1					
ANR	1227422	CompoundStatement		69:69:2386:2386	1227065	1					
ANR	1227423	ExpressionStatement	"code = gs_colorspace_set_icc_equivalent ( ( gs_color_space * ) pcs , & ( is_lab ) , pgs -> memory )"	387:8:12063:12149	1227065	0	True				
ANR	1227424	AssignmentExpression	"code = gs_colorspace_set_icc_equivalent ( ( gs_color_space * ) pcs , & ( is_lab ) , pgs -> memory )"		1227065	0		=			
ANR	1227425	Identifier	code		1227065	0					
ANR	1227426	CallExpression	"gs_colorspace_set_icc_equivalent ( ( gs_color_space * ) pcs , & ( is_lab ) , pgs -> memory )"		1227065	1					
ANR	1227427	Callee	gs_colorspace_set_icc_equivalent		1227065	0					
ANR	1227428	Identifier	gs_colorspace_set_icc_equivalent		1227065	0					
ANR	1227429	ArgumentList	( gs_color_space * ) pcs		1227065	1					
ANR	1227430	Argument	( gs_color_space * ) pcs		1227065	0					
ANR	1227431	CastExpression	( gs_color_space * ) pcs		1227065	0					
ANR	1227432	CastTarget	gs_color_space *		1227065	0					
ANR	1227433	Identifier	pcs		1227065	1					
ANR	1227434	Argument	& ( is_lab )		1227065	1					
ANR	1227435	UnaryOperationExpression	& ( is_lab )		1227065	0					
ANR	1227436	UnaryOperator	&		1227065	0					
ANR	1227437	Identifier	is_lab		1227065	1					
ANR	1227438	Argument	pgs -> memory		1227065	2					
ANR	1227439	PtrMemberAccess	pgs -> memory		1227065	0					
ANR	1227440	Identifier	pgs		1227065	0					
ANR	1227441	Identifier	memory		1227065	1					
ANR	1227442	IfStatement	if ( code < 0 )		1227065	1					
ANR	1227443	Condition	code < 0	388:12:12163:12170	1227065	0	True				
ANR	1227444	RelationalExpression	code < 0		1227065	0		<			
ANR	1227445	Identifier	code		1227065	0					
ANR	1227446	PrimaryExpression	0		1227065	1					
ANR	1227447	ReturnStatement	return code ;	389:12:12185:12196	1227065	1	True				
ANR	1227448	Identifier	code		1227065	0					
ANR	1227449	ExpressionStatement	rendering_params . black_point_comp = pgs -> blackptcomp	391:4:12208:12260	1227065	22	True				
ANR	1227450	AssignmentExpression	rendering_params . black_point_comp = pgs -> blackptcomp		1227065	0		=			
ANR	1227451	MemberAccess	rendering_params . black_point_comp		1227065	0					
ANR	1227452	Identifier	rendering_params		1227065	0					
ANR	1227453	Identifier	black_point_comp		1227065	1					
ANR	1227454	PtrMemberAccess	pgs -> blackptcomp		1227065	1					
ANR	1227455	Identifier	pgs		1227065	0					
ANR	1227456	Identifier	blackptcomp		1227065	1					
ANR	1227457	ExpressionStatement	rendering_params . graphics_type_tag = GS_PATH_TAG	392:4:12266:12314	1227065	23	True				
ANR	1227458	AssignmentExpression	rendering_params . graphics_type_tag = GS_PATH_TAG		1227065	0		=			
ANR	1227459	MemberAccess	rendering_params . graphics_type_tag		1227065	0					
ANR	1227460	Identifier	rendering_params		1227065	0					
ANR	1227461	Identifier	graphics_type_tag		1227065	1					
ANR	1227462	Identifier	GS_PATH_TAG		1227065	1					
ANR	1227463	ExpressionStatement	rendering_params . override_icc = false	393:4:12320:12357	1227065	24	True				
ANR	1227464	AssignmentExpression	rendering_params . override_icc = false		1227065	0		=			
ANR	1227465	MemberAccess	rendering_params . override_icc		1227065	0					
ANR	1227466	Identifier	rendering_params		1227065	0					
ANR	1227467	Identifier	override_icc		1227065	1					
ANR	1227468	Identifier	false		1227065	1					
ANR	1227469	ExpressionStatement	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED	394:4:12363:12417	1227065	25	True				
ANR	1227470	AssignmentExpression	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED		1227065	0		=			
ANR	1227471	MemberAccess	rendering_params . preserve_black		1227065	0					
ANR	1227472	Identifier	rendering_params		1227065	0					
ANR	1227473	Identifier	preserve_black		1227065	1					
ANR	1227474	Identifier	gsBKPRESNOTSPECIFIED		1227065	1					
ANR	1227475	ExpressionStatement	rendering_params . rendering_intent = pgs -> renderingintent	395:4:12423:12479	1227065	26	True				
ANR	1227476	AssignmentExpression	rendering_params . rendering_intent = pgs -> renderingintent		1227065	0		=			
ANR	1227477	MemberAccess	rendering_params . rendering_intent		1227065	0					
ANR	1227478	Identifier	rendering_params		1227065	0					
ANR	1227479	Identifier	rendering_intent		1227065	1					
ANR	1227480	PtrMemberAccess	pgs -> renderingintent		1227065	1					
ANR	1227481	Identifier	pgs		1227065	0					
ANR	1227482	Identifier	renderingintent		1227065	1					
ANR	1227483	ExpressionStatement	rendering_params . cmm = gsCMM_DEFAULT	396:4:12485:12521	1227065	27	True				
ANR	1227484	AssignmentExpression	rendering_params . cmm = gsCMM_DEFAULT		1227065	0		=			
ANR	1227485	MemberAccess	rendering_params . cmm		1227065	0					
ANR	1227486	Identifier	rendering_params		1227065	0					
ANR	1227487	Identifier	cmm		1227065	1					
ANR	1227488	Identifier	gsCMM_DEFAULT		1227065	1					
ANR	1227489	IfStatement	if ( pcs -> cmm_icc_profile_data != NULL )		1227065	28					
ANR	1227490	Condition	pcs -> cmm_icc_profile_data != NULL	398:8:12586:12618	1227065	0	True				
ANR	1227491	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		1227065	0		!=			
ANR	1227492	PtrMemberAccess	pcs -> cmm_icc_profile_data		1227065	0					
ANR	1227493	Identifier	pcs		1227065	0					
ANR	1227494	Identifier	cmm_icc_profile_data		1227065	1					
ANR	1227495	Identifier	NULL		1227065	1					
ANR	1227496	CompoundStatement		81:43:2954:2954	1227065	1					
ANR	1227497	ExpressionStatement	"pfs -> icclink = gsicc_get_link ( pgs , pgs -> trans_device , pcs , NULL , & rendering_params , pgs -> memory )"	399:8:12631:12765	1227065	0	True				
ANR	1227498	AssignmentExpression	"pfs -> icclink = gsicc_get_link ( pgs , pgs -> trans_device , pcs , NULL , & rendering_params , pgs -> memory )"		1227065	0		=			
ANR	1227499	PtrMemberAccess	pfs -> icclink		1227065	0					
ANR	1227500	Identifier	pfs		1227065	0					
ANR	1227501	Identifier	icclink		1227065	1					
ANR	1227502	CallExpression	"gsicc_get_link ( pgs , pgs -> trans_device , pcs , NULL , & rendering_params , pgs -> memory )"		1227065	1					
ANR	1227503	Callee	gsicc_get_link		1227065	0					
ANR	1227504	Identifier	gsicc_get_link		1227065	0					
ANR	1227505	ArgumentList	pgs		1227065	1					
ANR	1227506	Argument	pgs		1227065	0					
ANR	1227507	Identifier	pgs		1227065	0					
ANR	1227508	Argument	pgs -> trans_device		1227065	1					
ANR	1227509	PtrMemberAccess	pgs -> trans_device		1227065	0					
ANR	1227510	Identifier	pgs		1227065	0					
ANR	1227511	Identifier	trans_device		1227065	1					
ANR	1227512	Argument	pcs		1227065	2					
ANR	1227513	Identifier	pcs		1227065	0					
ANR	1227514	Argument	NULL		1227065	3					
ANR	1227515	Identifier	NULL		1227065	0					
ANR	1227516	Argument	& rendering_params		1227065	4					
ANR	1227517	UnaryOperationExpression	& rendering_params		1227065	0					
ANR	1227518	UnaryOperator	&		1227065	0					
ANR	1227519	Identifier	rendering_params		1227065	1					
ANR	1227520	Argument	pgs -> memory		1227065	5					
ANR	1227521	PtrMemberAccess	pgs -> memory		1227065	0					
ANR	1227522	Identifier	pgs		1227065	0					
ANR	1227523	Identifier	memory		1227065	1					
ANR	1227524	IfStatement	if ( pfs -> icclink == NULL )		1227065	1					
ANR	1227525	Condition	pfs -> icclink == NULL	401:12:12779:12798	1227065	0	True				
ANR	1227526	EqualityExpression	pfs -> icclink == NULL		1227065	0		==			
ANR	1227527	PtrMemberAccess	pfs -> icclink		1227065	0					
ANR	1227528	Identifier	pfs		1227065	0					
ANR	1227529	Identifier	icclink		1227065	1					
ANR	1227530	Identifier	NULL		1227065	1					
ANR	1227531	ExpressionStatement	return_error ( gs_error_VMerror )	402:12:12813:12843	1227065	1	True				
ANR	1227532	CallExpression	return_error ( gs_error_VMerror )		1227065	0					
ANR	1227533	Callee	return_error		1227065	0					
ANR	1227534	Identifier	return_error		1227065	0					
ANR	1227535	ArgumentList	gs_error_VMerror		1227065	1					
ANR	1227536	Argument	gs_error_VMerror		1227065	0					
ANR	1227537	Identifier	gs_error_VMerror		1227065	0					
ANR	1227538	ElseStatement	else		1227065	0					
ANR	1227539	CompoundStatement		86:11:3189:3189	1227065	0					
ANR	1227540	IfStatement	if ( pcs -> icc_equivalent != NULL )		1227065	0					
ANR	1227541	Condition	pcs -> icc_equivalent != NULL	404:12:12870:12896	1227065	0	True				
ANR	1227542	EqualityExpression	pcs -> icc_equivalent != NULL		1227065	0		!=			
ANR	1227543	PtrMemberAccess	pcs -> icc_equivalent		1227065	0					
ANR	1227544	Identifier	pcs		1227065	0					
ANR	1227545	Identifier	icc_equivalent		1227065	1					
ANR	1227546	Identifier	NULL		1227065	1					
ANR	1227547	CompoundStatement		87:42:3233:3233	1227065	1					
ANR	1227548	ExpressionStatement	"pfs -> icclink = gsicc_get_link ( pgs , pgs -> trans_device , pcs -> icc_equivalent , NULL , & rendering_params , pgs -> memory )"	407:12:13050:13246	1227065	0	True				
ANR	1227549	AssignmentExpression	"pfs -> icclink = gsicc_get_link ( pgs , pgs -> trans_device , pcs -> icc_equivalent , NULL , & rendering_params , pgs -> memory )"		1227065	0		=			
ANR	1227550	PtrMemberAccess	pfs -> icclink		1227065	0					
ANR	1227551	Identifier	pfs		1227065	0					
ANR	1227552	Identifier	icclink		1227065	1					
ANR	1227553	CallExpression	"gsicc_get_link ( pgs , pgs -> trans_device , pcs -> icc_equivalent , NULL , & rendering_params , pgs -> memory )"		1227065	1					
ANR	1227554	Callee	gsicc_get_link		1227065	0					
ANR	1227555	Identifier	gsicc_get_link		1227065	0					
ANR	1227556	ArgumentList	pgs		1227065	1					
ANR	1227557	Argument	pgs		1227065	0					
ANR	1227558	Identifier	pgs		1227065	0					
ANR	1227559	Argument	pgs -> trans_device		1227065	1					
ANR	1227560	PtrMemberAccess	pgs -> trans_device		1227065	0					
ANR	1227561	Identifier	pgs		1227065	0					
ANR	1227562	Identifier	trans_device		1227065	1					
ANR	1227563	Argument	pcs -> icc_equivalent		1227065	2					
ANR	1227564	PtrMemberAccess	pcs -> icc_equivalent		1227065	0					
ANR	1227565	Identifier	pcs		1227065	0					
ANR	1227566	Identifier	icc_equivalent		1227065	1					
ANR	1227567	Argument	NULL		1227065	3					
ANR	1227568	Identifier	NULL		1227065	0					
ANR	1227569	Argument	& rendering_params		1227065	4					
ANR	1227570	UnaryOperationExpression	& rendering_params		1227065	0					
ANR	1227571	UnaryOperator	&		1227065	0					
ANR	1227572	Identifier	rendering_params		1227065	1					
ANR	1227573	Argument	pgs -> memory		1227065	5					
ANR	1227574	PtrMemberAccess	pgs -> memory		1227065	0					
ANR	1227575	Identifier	pgs		1227065	0					
ANR	1227576	Identifier	memory		1227065	1					
ANR	1227577	IfStatement	if ( pfs -> icclink == NULL )		1227065	1					
ANR	1227578	Condition	pfs -> icclink == NULL	410:16:13264:13283	1227065	0	True				
ANR	1227579	EqualityExpression	pfs -> icclink == NULL		1227065	0		==			
ANR	1227580	PtrMemberAccess	pfs -> icclink		1227065	0					
ANR	1227581	Identifier	pfs		1227065	0					
ANR	1227582	Identifier	icclink		1227065	1					
ANR	1227583	Identifier	NULL		1227065	1					
ANR	1227584	ExpressionStatement	return_error ( gs_error_VMerror )	411:16:13302:13332	1227065	1	True				
ANR	1227585	CallExpression	return_error ( gs_error_VMerror )		1227065	0					
ANR	1227586	Callee	return_error		1227065	0					
ANR	1227587	Identifier	return_error		1227065	0					
ANR	1227588	ArgumentList	gs_error_VMerror		1227065	1					
ANR	1227589	Argument	gs_error_VMerror		1227065	0					
ANR	1227590	Identifier	gs_error_VMerror		1227065	0					
ANR	1227591	ElseStatement	else		1227065	0					
ANR	1227592	CompoundStatement		95:15:3682:3682	1227065	0					
ANR	1227593	ExpressionStatement	pfs -> icclink = NULL	413:12:13363:13382	1227065	0	True				
ANR	1227594	AssignmentExpression	pfs -> icclink = NULL		1227065	0		=			
ANR	1227595	PtrMemberAccess	pfs -> icclink		1227065	0					
ANR	1227596	Identifier	pfs		1227065	0					
ANR	1227597	Identifier	icclink		1227065	1					
ANR	1227598	Identifier	NULL		1227065	1					
ANR	1227599	IfStatement	if ( pfs -> icclink == NULL )		1227065	29					
ANR	1227600	Condition	pfs -> icclink == NULL	428:8:14248:14267	1227065	0	True				
ANR	1227601	EqualityExpression	pfs -> icclink == NULL		1227065	0		==			
ANR	1227602	PtrMemberAccess	pfs -> icclink		1227065	0					
ANR	1227603	Identifier	pfs		1227065	0					
ANR	1227604	Identifier	icclink		1227065	1					
ANR	1227605	Identifier	NULL		1227065	1					
ANR	1227606	ExpressionStatement	cs_lin_test = ! ( using_alt_color_space ( ( gs_gstate * ) pgs ) )	429:12:14282:14337	1227065	1	True				
ANR	1227607	AssignmentExpression	cs_lin_test = ! ( using_alt_color_space ( ( gs_gstate * ) pgs ) )		1227065	0		=			
ANR	1227608	Identifier	cs_lin_test		1227065	0					
ANR	1227609	UnaryOperationExpression	! ( using_alt_color_space ( ( gs_gstate * ) pgs ) )		1227065	1					
ANR	1227610	UnaryOperator	!		1227065	0					
ANR	1227611	CallExpression	using_alt_color_space ( ( gs_gstate * ) pgs )		1227065	1					
ANR	1227612	Callee	using_alt_color_space		1227065	0					
ANR	1227613	Identifier	using_alt_color_space		1227065	0					
ANR	1227614	ArgumentList	( gs_gstate * ) pgs		1227065	1					
ANR	1227615	Argument	( gs_gstate * ) pgs		1227065	0					
ANR	1227616	CastExpression	( gs_gstate * ) pgs		1227065	0					
ANR	1227617	CastTarget	gs_gstate *		1227065	0					
ANR	1227618	Identifier	pgs		1227065	1					
ANR	1227619	ElseStatement	else		1227065	0					
ANR	1227620	ExpressionStatement	cs_lin_test = pfs -> icclink -> is_identity	431:8:14356:14395	1227065	0	True				
ANR	1227621	AssignmentExpression	cs_lin_test = pfs -> icclink -> is_identity		1227065	0		=			
ANR	1227622	Identifier	cs_lin_test		1227065	0					
ANR	1227623	PtrMemberAccess	pfs -> icclink -> is_identity		1227065	1					
ANR	1227624	PtrMemberAccess	pfs -> icclink		1227065	0					
ANR	1227625	Identifier	pfs		1227065	0					
ANR	1227626	Identifier	icclink		1227065	1					
ANR	1227627	Identifier	is_identity		1227065	1					
ANR	1227628	IfStatement	"if ( cs_lin_test && ! gx_has_transfer ( pgs , dev -> color_info . num_components ) )"		1227065	30					
ANR	1227629	Condition	"cs_lin_test && ! gx_has_transfer ( pgs , dev -> color_info . num_components )"	433:8:14406:14473	1227065	0	True				
ANR	1227630	AndExpression	"cs_lin_test && ! gx_has_transfer ( pgs , dev -> color_info . num_components )"		1227065	0		&&			
ANR	1227631	Identifier	cs_lin_test		1227065	0					
ANR	1227632	UnaryOperationExpression	"! gx_has_transfer ( pgs , dev -> color_info . num_components )"		1227065	1					
ANR	1227633	UnaryOperator	!		1227065	0					
ANR	1227634	CallExpression	"gx_has_transfer ( pgs , dev -> color_info . num_components )"		1227065	1					
ANR	1227635	Callee	gx_has_transfer		1227065	0					
ANR	1227636	Identifier	gx_has_transfer		1227065	0					
ANR	1227637	ArgumentList	pgs		1227065	1					
ANR	1227638	Argument	pgs		1227065	0					
ANR	1227639	Identifier	pgs		1227065	0					
ANR	1227640	Argument	dev -> color_info . num_components		1227065	1					
ANR	1227641	MemberAccess	dev -> color_info . num_components		1227065	0					
ANR	1227642	PtrMemberAccess	dev -> color_info		1227065	0					
ANR	1227643	Identifier	dev		1227065	0					
ANR	1227644	Identifier	color_info		1227065	1					
ANR	1227645	Identifier	num_components		1227065	1					
ANR	1227646	CompoundStatement		116:78:4809:4809	1227065	1					
ANR	1227647	ExpressionStatement	pfs -> cs_always_linear = true	434:8:14486:14514	1227065	0	True				
ANR	1227648	AssignmentExpression	pfs -> cs_always_linear = true		1227065	0		=			
ANR	1227649	PtrMemberAccess	pfs -> cs_always_linear		1227065	0					
ANR	1227650	Identifier	pfs		1227065	0					
ANR	1227651	Identifier	cs_always_linear		1227065	1					
ANR	1227652	Identifier	true		1227065	1					
ANR	1227653	ReturnStatement	return 0 ;	436:4:14526:14534	1227065	31	True				
ANR	1227654	PrimaryExpression	0		1227065	0					
ANR	1227655	ReturnType	int		1227065	1					
ANR	1227656	Identifier	shade_init_fill_state		1227065	2					
ANR	1227657	ParameterList	"shading_fill_state_t * pfs , const gs_shading_t * psh , gx_device * dev , gs_gstate * pgs"		1227065	3					
ANR	1227658	Parameter	shading_fill_state_t * pfs	316:22:9556:9581	1227065	0	True				
ANR	1227659	ParameterType	shading_fill_state_t *		1227065	0					
ANR	1227660	Identifier	pfs		1227065	1					
ANR	1227661	Parameter	const gs_shading_t * psh	316:50:9584:9607	1227065	1	True				
ANR	1227662	ParameterType	const gs_shading_t *		1227065	0					
ANR	1227663	Identifier	psh		1227065	1					
ANR	1227664	Parameter	gx_device * dev	317:22:9632:9646	1227065	2	True				
ANR	1227665	ParameterType	gx_device *		1227065	0					
ANR	1227666	Identifier	dev		1227065	1					
ANR	1227667	Parameter	gs_gstate * pgs	317:39:9649:9663	1227065	3	True				
ANR	1227668	ParameterType	gs_gstate *		1227065	0					
ANR	1227669	Identifier	pgs		1227065	1					
ANR	1227670	CFGEntryNode	ENTRY		1227065		True				
ANR	1227671	CFGExitNode	EXIT		1227065		True				
ANR	1227672	Symbol	gs_colorspace_set_icc_equivalent		1227065						
ANR	1227673	Symbol	psh -> params		1227065						
ANR	1227674	Symbol	* pcs -> params . defg		1227065						
ANR	1227675	Symbol	* pgs		1227065						
ANR	1227676	Symbol	cs_lin_test		1227065						
ANR	1227677	Symbol	* ci		1227065						
ANR	1227678	Symbol	pcs -> params . def -> RangeDEF . ranges		1227065						
ANR	1227679	Symbol	* * pfs		1227065						
ANR	1227680	Symbol	pfs -> icclink		1227065						
ANR	1227681	Symbol	gx_has_transfer		1227065						
ANR	1227682	Symbol	dev		1227065						
ANR	1227683	Symbol	gs_color_space_is_PSCIE		1227065						
ANR	1227684	Symbol	pgs -> dev_ht -> components		1227065						
ANR	1227685	Symbol	pgs -> trans_device		1227065						
ANR	1227686	Symbol	pcs -> params . defg -> RangeDEFG		1227065						
ANR	1227687	Symbol	dev -> color_info . max_color		1227065						
ANR	1227688	Symbol	dev -> color_info . num_components		1227065						
ANR	1227689	Symbol	pcs -> cmm_icc_profile_data		1227065						
ANR	1227690	Symbol	* pfs		1227065						
ANR	1227691	Symbol	pfs -> pgs		1227065						
ANR	1227692	Symbol	* pcs -> params . def		1227065						
ANR	1227693	Symbol	num_colors		1227065						
ANR	1227694	Symbol	max_error		1227065						
ANR	1227695	Symbol	* * pgs		1227065						
ANR	1227696	Symbol	pgs -> renderingintent		1227065						
ANR	1227697	Symbol	gs_color_space_get_index		1227065						
ANR	1227698	Symbol	psh -> head . type		1227065						
ANR	1227699	Symbol	pfs		1227065						
ANR	1227700	Symbol	* dev		1227065						
ANR	1227701	Symbol	pcs -> params . abc -> RangeABC . ranges		1227065						
ANR	1227702	Symbol	pcs -> params . abc -> RangeABC		1227065						
ANR	1227703	Symbol	using_alt_color_space		1227065						
ANR	1227704	Symbol	* ranges		1227065						
ANR	1227705	Symbol	* pgs -> dev_ht -> components		1227065						
ANR	1227706	Symbol	dev -> color_info		1227065						
ANR	1227707	Symbol	min		1227065						
ANR	1227708	Symbol	pfs -> cs_always_linear		1227065						
ANR	1227709	Symbol	pfs -> num_components		1227065						
ANR	1227710	Symbol	is_lab		1227065						
ANR	1227711	Symbol	pcs -> params . defg		1227065						
ANR	1227712	Symbol	dev -> color_info . max_gray		1227065						
ANR	1227713	Symbol	pgs		1227065						
ANR	1227714	Symbol	* pfs -> cc_max_error		1227065						
ANR	1227715	Symbol	pgs -> memory		1227065						
ANR	1227716	Symbol	& rendering_params		1227065						
ANR	1227717	Symbol	pcs -> params . def		1227065						
ANR	1227718	Symbol	rendering_params . rendering_intent		1227065						
ANR	1227719	Symbol	max		1227065						
ANR	1227720	Symbol	ci		1227065						
ANR	1227721	Symbol	pcs -> params . defg -> RangeDEFG . ranges		1227065						
ANR	1227722	Symbol	pcs -> params		1227065						
ANR	1227723	Symbol	pcs -> icc_equivalent		1227065						
ANR	1227724	Symbol	pgs -> smoothness		1227065						
ANR	1227725	Symbol	pgs -> dev_ht		1227065						
ANR	1227726	Symbol	pcs -> params . a		1227065						
ANR	1227727	Symbol	rendering_params . graphics_type_tag		1227065						
ANR	1227728	Symbol	ranges [ ci ] . rmax		1227065						
ANR	1227729	Symbol	* pcs		1227065						
ANR	1227730	Symbol	pfs -> trans_device		1227065						
ANR	1227731	Symbol	pfs -> direct_space		1227065						
ANR	1227732	Symbol	pcs -> params . abc		1227065						
ANR	1227733	Symbol	pgs -> dev_ht -> components [ 0 ] . corder		1227065						
ANR	1227734	Symbol	ranges [ ci ] . rmin		1227065						
ANR	1227735	Symbol	gs_cspace_base_space		1227065						
ANR	1227736	Symbol	gs_color_space_num_components		1227065						
ANR	1227737	Symbol	rendering_params . cmm		1227065						
ANR	1227738	Symbol	psh -> head		1227065						
ANR	1227739	Symbol	pgs -> has_transparency		1227065						
ANR	1227740	Symbol	NULL		1227065						
ANR	1227741	Symbol	pgs -> blackptcomp		1227065						
ANR	1227742	Symbol	pcs -> cmm_icc_profile_data -> Range . ranges		1227065						
ANR	1227743	Symbol	gsBKPRESNOTSPECIFIED		1227065						
ANR	1227744	Symbol	MAX_SMOOTHNESS		1227065						
ANR	1227745	Symbol	rendering_params . preserve_black		1227065						
ANR	1227746	Symbol	* pfs -> icclink		1227065						
ANR	1227747	Symbol	* psh		1227065						
ANR	1227748	Symbol	rendering_params		1227065						
ANR	1227749	Symbol	* * pcs		1227065						
ANR	1227750	Symbol	* pcs -> params		1227065						
ANR	1227751	Symbol	pfs -> icclink -> is_identity		1227065						
ANR	1227752	Symbol	true		1227065						
ANR	1227753	Symbol	* pgs -> dev_ht		1227065						
ANR	1227754	Symbol	GS_PATH_TAG		1227065						
ANR	1227755	Symbol	code		1227065						
ANR	1227756	Symbol	psh		1227065						
ANR	1227757	Symbol	ranges		1227065						
ANR	1227758	Symbol	& pcs -> params . a -> RangeA		1227065						
ANR	1227759	Symbol	pcs -> cmm_icc_profile_data -> Range		1227065						
ANR	1227760	Symbol	psh -> params . ColorSpace		1227065						
ANR	1227761	Symbol	pcs -> params . def -> RangeDEF		1227065						
ANR	1227762	Symbol	& is_lab		1227065						
ANR	1227763	Symbol	* pcs -> params . abc		1227065						
ANR	1227764	Symbol	* * pgs -> dev_ht		1227065						
ANR	1227765	Symbol	* * * pgs		1227065						
ANR	1227766	Symbol	rendering_params . override_icc		1227065						
ANR	1227767	Symbol	gsicc_get_link		1227065						
ANR	1227768	Symbol	rendering_params . black_point_comp		1227065						
ANR	1227769	Symbol	pcs		1227065						
ANR	1227770	Symbol	gsCMM_DEFAULT		1227065						
ANR	1227771	Symbol	false		1227065						
ANR	1227772	Symbol	* pcs -> cmm_icc_profile_data		1227065						
ANR	1227773	Symbol	pgs -> dev_ht -> components [ 0 ] . corder . num_levels		1227065						
ANR	1227774	Symbol	pfs -> dev		1227065						
ANR	1227775	Symbol	gs_error_VMerror		1227065						
ANR	1227776	Symbol	pfs -> cc_max_error		1227065						
ANR	1227777	Function	shade_fill_path	440:0:14574:15007							
ANR	1227778	FunctionDef	"shade_fill_path (const shading_fill_state_t * pfs , gx_path * ppath , gx_device_color * pdevc , const gs_fixed_point * fill_adjust)"		1227777	0					
ANR	1227779	CompoundStatement		443:0:14721:15007	1227777	0					
ANR	1227780	IdentifierDeclStatement	gx_fill_params params ;	444:4:14727:14748	1227777	0	True				
ANR	1227781	IdentifierDecl	params		1227777	0					
ANR	1227782	IdentifierDeclType	gx_fill_params		1227777	0					
ANR	1227783	Identifier	params		1227777	1					
ANR	1227784	ExpressionStatement	params . rule = - 1	446:4:14755:14771	1227777	1	True				
ANR	1227785	AssignmentExpression	params . rule = - 1		1227777	0		=			
ANR	1227786	MemberAccess	params . rule		1227777	0					
ANR	1227787	Identifier	params		1227777	0					
ANR	1227788	Identifier	rule		1227777	1					
ANR	1227789	UnaryOperationExpression	- 1		1227777	1					
ANR	1227790	UnaryOperator	-		1227777	0					
ANR	1227791	PrimaryExpression	1		1227777	1					
ANR	1227792	ExpressionStatement	params . adjust = * fill_adjust	447:4:14795:14823	1227777	2	True				
ANR	1227793	AssignmentExpression	params . adjust = * fill_adjust		1227777	0		=			
ANR	1227794	MemberAccess	params . adjust		1227777	0					
ANR	1227795	Identifier	params		1227777	0					
ANR	1227796	Identifier	adjust		1227777	1					
ANR	1227797	UnaryOperationExpression	* fill_adjust		1227777	1					
ANR	1227798	UnaryOperator	*		1227777	0					
ANR	1227799	Identifier	fill_adjust		1227777	1					
ANR	1227800	ExpressionStatement	params . flatness = 0	448:4:14829:14848	1227777	3	True				
ANR	1227801	AssignmentExpression	params . flatness = 0		1227777	0		=			
ANR	1227802	MemberAccess	params . flatness		1227777	0					
ANR	1227803	Identifier	params		1227777	0					
ANR	1227804	Identifier	flatness		1227777	1					
ANR	1227805	PrimaryExpression	0		1227777	1					
ANR	1227806	ReturnStatement	"return ( * dev_proc ( pfs -> dev , fill_path ) ) ( pfs -> dev , pfs -> pgs , ppath , & params , pdevc , NULL ) ;"	449:4:14871:15005	1227777	4	True				
ANR	1227807	CallExpression	"( * dev_proc ( pfs -> dev , fill_path ) ) ( pfs -> dev , pfs -> pgs , ppath , & params , pdevc , NULL )"		1227777	0					
ANR	1227808	Callee	"* dev_proc ( pfs -> dev , fill_path )"		1227777	0					
ANR	1227809	UnaryOperationExpression	"* dev_proc ( pfs -> dev , fill_path )"		1227777	0					
ANR	1227810	UnaryOperator	*		1227777	0					
ANR	1227811	CallExpression	"dev_proc ( pfs -> dev , fill_path )"		1227777	1					
ANR	1227812	Callee	dev_proc		1227777	0					
ANR	1227813	Identifier	dev_proc		1227777	0					
ANR	1227814	ArgumentList	pfs -> dev		1227777	1					
ANR	1227815	Argument	pfs -> dev		1227777	0					
ANR	1227816	PtrMemberAccess	pfs -> dev		1227777	0					
ANR	1227817	Identifier	pfs		1227777	0					
ANR	1227818	Identifier	dev		1227777	1					
ANR	1227819	Argument	fill_path		1227777	1					
ANR	1227820	Identifier	fill_path		1227777	0					
ANR	1227821	ArgumentList	pfs -> dev		1227777	1					
ANR	1227822	Argument	pfs -> dev		1227777	0					
ANR	1227823	PtrMemberAccess	pfs -> dev		1227777	0					
ANR	1227824	Identifier	pfs		1227777	0					
ANR	1227825	Identifier	dev		1227777	1					
ANR	1227826	Argument	pfs -> pgs		1227777	1					
ANR	1227827	PtrMemberAccess	pfs -> pgs		1227777	0					
ANR	1227828	Identifier	pfs		1227777	0					
ANR	1227829	Identifier	pgs		1227777	1					
ANR	1227830	Argument	ppath		1227777	2					
ANR	1227831	Identifier	ppath		1227777	0					
ANR	1227832	Argument	& params		1227777	3					
ANR	1227833	UnaryOperationExpression	& params		1227777	0					
ANR	1227834	UnaryOperator	&		1227777	0					
ANR	1227835	Identifier	params		1227777	1					
ANR	1227836	Argument	pdevc		1227777	4					
ANR	1227837	Identifier	pdevc		1227777	0					
ANR	1227838	Argument	NULL		1227777	5					
ANR	1227839	Identifier	NULL		1227777	0					
ANR	1227840	ReturnType	int		1227777	1					
ANR	1227841	Identifier	shade_fill_path		1227777	2					
ANR	1227842	ParameterList	"const shading_fill_state_t * pfs , gx_path * ppath , gx_device_color * pdevc , const gs_fixed_point * fill_adjust"		1227777	3					
ANR	1227843	Parameter	const shading_fill_state_t * pfs	441:16:14594:14625	1227777	0	True				
ANR	1227844	ParameterType	const shading_fill_state_t *		1227777	0					
ANR	1227845	Identifier	pfs		1227777	1					
ANR	1227846	Parameter	gx_path * ppath	441:50:14628:14642	1227777	1	True				
ANR	1227847	ParameterType	gx_path *		1227777	0					
ANR	1227848	Identifier	ppath		1227777	1					
ANR	1227849	Parameter	gx_device_color * pdevc	442:16:14661:14683	1227777	2	True				
ANR	1227850	ParameterType	gx_device_color *		1227777	0					
ANR	1227851	Identifier	pdevc		1227777	1					
ANR	1227852	Parameter	const gs_fixed_point * fill_adjust	442:41:14686:14718	1227777	3	True				
ANR	1227853	ParameterType	const gs_fixed_point *		1227777	0					
ANR	1227854	Identifier	fill_adjust		1227777	1					
ANR	1227855	CFGEntryNode	ENTRY		1227777		True				
ANR	1227856	CFGExitNode	EXIT		1227777		True				
ANR	1227857	Symbol	NULL		1227777						
ANR	1227858	Symbol	* dev_proc		1227777						
ANR	1227859	Symbol	pdevc		1227777						
ANR	1227860	Symbol	* pfs		1227777						
ANR	1227861	Symbol	pfs -> pgs		1227777						
ANR	1227862	Symbol	params . adjust		1227777						
ANR	1227863	Symbol	ppath		1227777						
ANR	1227864	Symbol	params . flatness		1227777						
ANR	1227865	Symbol	params		1227777						
ANR	1227866	Symbol	* fill_adjust		1227777						
ANR	1227867	Symbol	fill_adjust		1227777						
ANR	1227868	Symbol	pfs -> dev		1227777						
ANR	1227869	Symbol	dev_proc		1227777						
ANR	1227870	Symbol	fill_path		1227777						
ANR	1227871	Symbol	pfs		1227777						
ANR	1227872	Symbol	"* dev_proc ( pfs -> dev , fill_path )"		1227777						
ANR	1227873	Symbol	params . rule		1227777						
ANR	1227874	Symbol	& params		1227777						
