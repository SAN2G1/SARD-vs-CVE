command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3464675	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_cid_cidparse.c								
ANR	3464676	Function	cid_parser_new	57:2:2839:8908							
ANR	3464677	FunctionDef	"cid_parser_new (CID_Parser * parser , FT_Stream stream , FT_Memory memory , PSAux_Service psaux)"		3464676	0					
ANR	3464678	CompoundStatement		61:2:3003:8908	3464676	0					
ANR	3464679	IdentifierDeclStatement	FT_Error error ;	62:4:3009:3024	3464676	0	True				
ANR	3464680	IdentifierDecl	error		3464676	0					
ANR	3464681	IdentifierDeclType	FT_Error		3464676	0					
ANR	3464682	Identifier	error		3464676	1					
ANR	3464683	IdentifierDeclStatement	"FT_ULong base_offset , offset , ps_len ;"	63:4:3030:3067	3464676	1	True				
ANR	3464684	IdentifierDecl	base_offset		3464676	0					
ANR	3464685	IdentifierDeclType	FT_ULong		3464676	0					
ANR	3464686	Identifier	base_offset		3464676	1					
ANR	3464687	IdentifierDecl	offset		3464676	1					
ANR	3464688	IdentifierDeclType	FT_ULong		3464676	0					
ANR	3464689	Identifier	offset		3464676	1					
ANR	3464690	IdentifierDecl	ps_len		3464676	2					
ANR	3464691	IdentifierDeclType	FT_ULong		3464676	0					
ANR	3464692	Identifier	ps_len		3464676	1					
ANR	3464693	IdentifierDeclStatement	"FT_Byte * cur , * limit ;"	64:4:3073:3095	3464676	2	True				
ANR	3464694	IdentifierDecl	* cur		3464676	0					
ANR	3464695	IdentifierDeclType	FT_Byte *		3464676	0					
ANR	3464696	Identifier	cur		3464676	1					
ANR	3464697	IdentifierDecl	* limit		3464676	1					
ANR	3464698	IdentifierDeclType	FT_Byte *		3464676	0					
ANR	3464699	Identifier	limit		3464676	1					
ANR	3464700	IdentifierDeclStatement	"FT_Byte * arg1 , * arg2 ;"	65:4:3101:3123	3464676	3	True				
ANR	3464701	IdentifierDecl	* arg1		3464676	0					
ANR	3464702	IdentifierDeclType	FT_Byte *		3464676	0					
ANR	3464703	Identifier	arg1		3464676	1					
ANR	3464704	IdentifierDecl	* arg2		3464676	1					
ANR	3464705	IdentifierDeclType	FT_Byte *		3464676	0					
ANR	3464706	Identifier	arg2		3464676	1					
ANR	3464707	ExpressionStatement	FT_ZERO ( parser )	68:4:3131:3148	3464676	4	True				
ANR	3464708	CallExpression	FT_ZERO ( parser )		3464676	0					
ANR	3464709	Callee	FT_ZERO		3464676	0					
ANR	3464710	Identifier	FT_ZERO		3464676	0					
ANR	3464711	ArgumentList	parser		3464676	1					
ANR	3464712	Argument	parser		3464676	0					
ANR	3464713	Identifier	parser		3464676	0					
ANR	3464714	ExpressionStatement	"psaux -> ps_parser_funcs -> init ( & parser -> root , 0 , 0 , memory )"	69:4:3154:3213	3464676	5	True				
ANR	3464715	CallExpression	"psaux -> ps_parser_funcs -> init ( & parser -> root , 0 , 0 , memory )"		3464676	0					
ANR	3464716	Callee	psaux -> ps_parser_funcs -> init		3464676	0					
ANR	3464717	PtrMemberAccess	psaux -> ps_parser_funcs -> init		3464676	0					
ANR	3464718	PtrMemberAccess	psaux -> ps_parser_funcs		3464676	0					
ANR	3464719	Identifier	psaux		3464676	0					
ANR	3464720	Identifier	ps_parser_funcs		3464676	1					
ANR	3464721	Identifier	init		3464676	1					
ANR	3464722	ArgumentList	& parser -> root		3464676	1					
ANR	3464723	Argument	& parser -> root		3464676	0					
ANR	3464724	UnaryOperationExpression	& parser -> root		3464676	0					
ANR	3464725	UnaryOperator	&		3464676	0					
ANR	3464726	PtrMemberAccess	parser -> root		3464676	1					
ANR	3464727	Identifier	parser		3464676	0					
ANR	3464728	Identifier	root		3464676	1					
ANR	3464729	Argument	0		3464676	1					
ANR	3464730	PrimaryExpression	0		3464676	0					
ANR	3464731	Argument	0		3464676	2					
ANR	3464732	PrimaryExpression	0		3464676	0					
ANR	3464733	Argument	memory		3464676	3					
ANR	3464734	Identifier	memory		3464676	0					
ANR	3464735	ExpressionStatement	parser -> stream = stream	71:4:3220:3243	3464676	6	True				
ANR	3464736	AssignmentExpression	parser -> stream = stream		3464676	0		=			
ANR	3464737	PtrMemberAccess	parser -> stream		3464676	0					
ANR	3464738	Identifier	parser		3464676	0					
ANR	3464739	Identifier	stream		3464676	1					
ANR	3464740	Identifier	stream		3464676	1					
ANR	3464741	ExpressionStatement	base_offset = FT_STREAM_POS ( )	73:4:3250:3279	3464676	7	True				
ANR	3464742	AssignmentExpression	base_offset = FT_STREAM_POS ( )		3464676	0		=			
ANR	3464743	Identifier	base_offset		3464676	0					
ANR	3464744	CallExpression	FT_STREAM_POS ( )		3464676	1					
ANR	3464745	Callee	FT_STREAM_POS		3464676	0					
ANR	3464746	Identifier	FT_STREAM_POS		3464676	0					
ANR	3464747	ArgumentList			3464676	1					
ANR	3464748	IfStatement	if ( FT_FRAME_ENTER ( 31 ) )		3464676	8					
ANR	3464749	Condition	FT_FRAME_ENTER ( 31 )	76:9:3351:3370	3464676	0	True				
ANR	3464750	CallExpression	FT_FRAME_ENTER ( 31 )		3464676	0					
ANR	3464751	Callee	FT_FRAME_ENTER		3464676	0					
ANR	3464752	Identifier	FT_FRAME_ENTER		3464676	0					
ANR	3464753	ArgumentList	31		3464676	1					
ANR	3464754	Argument	31		3464676	0					
ANR	3464755	PrimaryExpression	31		3464676	0					
ANR	3464756	GotoStatement	goto Exit ;	77:6:3380:3389	3464676	1	True				
ANR	3464757	Identifier	Exit		3464676	0					
ANR	3464758	IfStatement	"if ( ft_strncmp ( ( char * ) stream -> cursor , ""%!PS-Adobe-3.0 Resource-CIDFont"" , 31 ) )"		3464676	9					
ANR	3464759	Condition	"ft_strncmp ( ( char * ) stream -> cursor , ""%!PS-Adobe-3.0 Resource-CIDFont"" , 31 )"	79:9:3401:3496	3464676	0	True				
ANR	3464760	CallExpression	"ft_strncmp ( ( char * ) stream -> cursor , ""%!PS-Adobe-3.0 Resource-CIDFont"" , 31 )"		3464676	0					
ANR	3464761	Callee	ft_strncmp		3464676	0					
ANR	3464762	Identifier	ft_strncmp		3464676	0					
ANR	3464763	ArgumentList	( char * ) stream -> cursor		3464676	1					
ANR	3464764	Argument	( char * ) stream -> cursor		3464676	0					
ANR	3464765	CastExpression	( char * ) stream -> cursor		3464676	0					
ANR	3464766	CastTarget	char *		3464676	0					
ANR	3464767	PtrMemberAccess	stream -> cursor		3464676	1					
ANR	3464768	Identifier	stream		3464676	0					
ANR	3464769	Identifier	cursor		3464676	1					
ANR	3464770	Argument	"""%!PS-Adobe-3.0 Resource-CIDFont"""		3464676	1					
ANR	3464771	PrimaryExpression	"""%!PS-Adobe-3.0 Resource-CIDFont"""		3464676	0					
ANR	3464772	Argument	31		3464676	2					
ANR	3464773	PrimaryExpression	31		3464676	0					
ANR	3464774	CompoundStatement		21:4:500:500	3464676	1					
ANR	3464775	ExpressionStatement	"FT_TRACE2 ( ( ""  not a CID-keyed font\\n"" ) )"	82:6:3512:3553	3464676	0	True				
ANR	3464776	CallExpression	"FT_TRACE2 ( ( ""  not a CID-keyed font\\n"" ) )"		3464676	0					
ANR	3464777	Callee	FT_TRACE2		3464676	0					
ANR	3464778	Identifier	FT_TRACE2		3464676	0					
ANR	3464779	ArgumentList	"""  not a CID-keyed font\\n"""		3464676	1					
ANR	3464780	Argument	"""  not a CID-keyed font\\n"""		3464676	0					
ANR	3464781	PrimaryExpression	"""  not a CID-keyed font\\n"""		3464676	0					
ANR	3464782	ExpressionStatement	error = FT_THROW ( Unknown_File_Format )	83:6:3561:3600	3464676	1	True				
ANR	3464783	AssignmentExpression	error = FT_THROW ( Unknown_File_Format )		3464676	0		=			
ANR	3464784	Identifier	error		3464676	0					
ANR	3464785	CallExpression	FT_THROW ( Unknown_File_Format )		3464676	1					
ANR	3464786	Callee	FT_THROW		3464676	0					
ANR	3464787	Identifier	FT_THROW		3464676	0					
ANR	3464788	ArgumentList	Unknown_File_Format		3464676	1					
ANR	3464789	Argument	Unknown_File_Format		3464676	0					
ANR	3464790	Identifier	Unknown_File_Format		3464676	0					
ANR	3464791	ExpressionStatement	FT_FRAME_EXIT ( )	86:4:3613:3628	3464676	10	True				
ANR	3464792	CallExpression	FT_FRAME_EXIT ( )		3464676	0					
ANR	3464793	Callee	FT_FRAME_EXIT		3464676	0					
ANR	3464794	Identifier	FT_FRAME_EXIT		3464676	0					
ANR	3464795	ArgumentList			3464676	1					
ANR	3464796	IfStatement	if ( error )		3464676	11					
ANR	3464797	Condition	error	87:9:3639:3643	3464676	0	True				
ANR	3464798	Identifier	error		3464676	0					
ANR	3464799	GotoStatement	goto Exit ;	88:6:3653:3662	3464676	1	True				
ANR	3464800	Identifier	Exit		3464676	0					
ANR	3464801	Label	Again :	90:2:3667:3672	3464676	12	True				
ANR	3464802	Identifier	Again		3464676	0					
ANR	3464803	CompoundStatement		56:6:1534:1564	3464676	13					
ANR	3464804	IdentifierDeclStatement	FT_Byte buffer [ 256 + STARTDATA_LEN + 1 ] ;	111:6:4367:4407	3464676	0	True				
ANR	3464805	IdentifierDecl	buffer [ 256 + STARTDATA_LEN + 1 ]		3464676	0					
ANR	3464806	IdentifierDeclType	FT_Byte [ 256 + STARTDATA_LEN + 1 ]		3464676	0					
ANR	3464807	Identifier	buffer		3464676	1					
ANR	3464808	AdditiveExpression	256 + STARTDATA_LEN + 1		3464676	2		+			
ANR	3464809	PrimaryExpression	256		3464676	0					
ANR	3464810	AdditiveExpression	STARTDATA_LEN + 1		3464676	1		+			
ANR	3464811	Identifier	STARTDATA_LEN		3464676	0					
ANR	3464812	PrimaryExpression	1		3464676	1					
ANR	3464813	IdentifierDeclStatement	FT_ULong read_len = 256 + STARTDATA_LEN ;	114:6:4454:4497	3464676	1	True				
ANR	3464814	IdentifierDecl	read_len = 256 + STARTDATA_LEN		3464676	0					
ANR	3464815	IdentifierDeclType	FT_ULong		3464676	0					
ANR	3464816	Identifier	read_len		3464676	1					
ANR	3464817	AssignmentExpression	read_len = 256 + STARTDATA_LEN		3464676	2		=			
ANR	3464818	Identifier	read_len		3464676	0					
ANR	3464819	AdditiveExpression	256 + STARTDATA_LEN		3464676	1		+			
ANR	3464820	PrimaryExpression	256		3464676	0					
ANR	3464821	Identifier	STARTDATA_LEN		3464676	1					
ANR	3464822	IdentifierDeclStatement	FT_ULong read_offset = 0 ;	115:6:4505:4530	3464676	2	True				
ANR	3464823	IdentifierDecl	read_offset = 0		3464676	0					
ANR	3464824	IdentifierDeclType	FT_ULong		3464676	0					
ANR	3464825	Identifier	read_offset		3464676	1					
ANR	3464826	AssignmentExpression	read_offset = 0		3464676	2		=			
ANR	3464827	Identifier	read_offset		3464676	0					
ANR	3464828	PrimaryExpression	0		3464676	1					
ANR	3464829	IdentifierDeclStatement	FT_Byte * p = buffer ;	116:6:4538:4568	3464676	3	True				
ANR	3464830	IdentifierDecl	* p = buffer		3464676	0					
ANR	3464831	IdentifierDeclType	FT_Byte *		3464676	0					
ANR	3464832	Identifier	p		3464676	1					
ANR	3464833	AssignmentExpression	* p = buffer		3464676	2		=			
ANR	3464834	Identifier	buffer		3464676	0					
ANR	3464835	Identifier	buffer		3464676	1					
ANR	3464836	ForStatement	for ( offset = FT_STREAM_POS ( ) ; ; offset += 256 )		3464676	4					
ANR	3464837	ForInit	offset = FT_STREAM_POS ( ) ;	119:12:4584:4608	3464676	0	True				
ANR	3464838	AssignmentExpression	offset = FT_STREAM_POS ( )		3464676	0		=			
ANR	3464839	Identifier	offset		3464676	0					
ANR	3464840	CallExpression	FT_STREAM_POS ( )		3464676	1					
ANR	3464841	Callee	FT_STREAM_POS		3464676	0					
ANR	3464842	Identifier	FT_STREAM_POS		3464676	0					
ANR	3464843	ArgumentList			3464676	1					
ANR	3464844	AssignmentExpression	offset += 256	119:40:4612:4624	3464676	1	True	+=			
ANR	3464845	Identifier	offset		3464676	0					
ANR	3464846	PrimaryExpression	256		3464676	1					
ANR	3464847	CompoundStatement		61:8:1640:1660	3464676	2					
ANR	3464848	IdentifierDeclStatement	FT_ULong stream_len ;	121:8:4644:4664	3464676	0	True				
ANR	3464849	IdentifierDecl	stream_len		3464676	0					
ANR	3464850	IdentifierDeclType	FT_ULong		3464676	0					
ANR	3464851	Identifier	stream_len		3464676	1					
ANR	3464852	ExpressionStatement	stream_len = stream -> size - FT_STREAM_POS ( )	124:8:4676:4719	3464676	1	True				
ANR	3464853	AssignmentExpression	stream_len = stream -> size - FT_STREAM_POS ( )		3464676	0		=			
ANR	3464854	Identifier	stream_len		3464676	0					
ANR	3464855	AdditiveExpression	stream -> size - FT_STREAM_POS ( )		3464676	1		-			
ANR	3464856	PtrMemberAccess	stream -> size		3464676	0					
ANR	3464857	Identifier	stream		3464676	0					
ANR	3464858	Identifier	size		3464676	1					
ANR	3464859	CallExpression	FT_STREAM_POS ( )		3464676	1					
ANR	3464860	Callee	FT_STREAM_POS		3464676	0					
ANR	3464861	Identifier	FT_STREAM_POS		3464676	0					
ANR	3464862	ArgumentList			3464676	1					
ANR	3464863	ExpressionStatement	"read_len = FT_MIN ( read_len , stream_len )"	126:8:4730:4771	3464676	2	True				
ANR	3464864	AssignmentExpression	"read_len = FT_MIN ( read_len , stream_len )"		3464676	0		=			
ANR	3464865	Identifier	read_len		3464676	0					
ANR	3464866	CallExpression	"FT_MIN ( read_len , stream_len )"		3464676	1					
ANR	3464867	Callee	FT_MIN		3464676	0					
ANR	3464868	Identifier	FT_MIN		3464676	0					
ANR	3464869	ArgumentList	read_len		3464676	1					
ANR	3464870	Argument	read_len		3464676	0					
ANR	3464871	Identifier	read_len		3464676	0					
ANR	3464872	Argument	stream_len		3464676	1					
ANR	3464873	Identifier	stream_len		3464676	0					
ANR	3464874	IfStatement	"if ( FT_STREAM_READ ( p , read_len ) )"		3464676	3					
ANR	3464875	Condition	"FT_STREAM_READ ( p , read_len )"	127:13:4786:4814	3464676	0	True				
ANR	3464876	CallExpression	"FT_STREAM_READ ( p , read_len )"		3464676	0					
ANR	3464877	Callee	FT_STREAM_READ		3464676	0					
ANR	3464878	Identifier	FT_STREAM_READ		3464676	0					
ANR	3464879	ArgumentList	p		3464676	1					
ANR	3464880	Argument	p		3464676	0					
ANR	3464881	Identifier	p		3464676	0					
ANR	3464882	Argument	read_len		3464676	1					
ANR	3464883	Identifier	read_len		3464676	0					
ANR	3464884	GotoStatement	goto Exit ;	128:10:4828:4837	3464676	1	True				
ANR	3464885	Identifier	Exit		3464676	0					
ANR	3464886	ExpressionStatement	p [ read_len ] = '\\0'	131:8:4920:4938	3464676	4	True				
ANR	3464887	AssignmentExpression	p [ read_len ] = '\\0'		3464676	0		=			
ANR	3464888	ArrayIndexing	p [ read_len ]		3464676	0					
ANR	3464889	Identifier	p		3464676	0					
ANR	3464890	Identifier	read_len		3464676	1					
ANR	3464891	PrimaryExpression	'\\0'		3464676	1					
ANR	3464892	ExpressionStatement	limit = p + read_len - SFNTS_LEN	133:8:4949:4981	3464676	5	True				
ANR	3464893	AssignmentExpression	limit = p + read_len - SFNTS_LEN		3464676	0		=			
ANR	3464894	Identifier	limit		3464676	0					
ANR	3464895	AdditiveExpression	p + read_len - SFNTS_LEN		3464676	1		+			
ANR	3464896	Identifier	p		3464676	0					
ANR	3464897	AdditiveExpression	read_len - SFNTS_LEN		3464676	1		-			
ANR	3464898	Identifier	read_len		3464676	0					
ANR	3464899	Identifier	SFNTS_LEN		3464676	1					
ANR	3464900	ForStatement	for ( p = buffer ; p < limit ; p ++ )		3464676	6					
ANR	3464901	ForInit	p = buffer ;	135:14:4998:5008	3464676	0	True				
ANR	3464902	AssignmentExpression	p = buffer		3464676	0		=			
ANR	3464903	Identifier	p		3464676	0					
ANR	3464904	Identifier	buffer		3464676	1					
ANR	3464905	Condition	p < limit	135:26:5010:5018	3464676	1	True				
ANR	3464906	RelationalExpression	p < limit		3464676	0		<			
ANR	3464907	Identifier	p		3464676	0					
ANR	3464908	Identifier	limit		3464676	1					
ANR	3464909	PostIncDecOperationExpression	p ++	135:37:5021:5023	3464676	2	True				
ANR	3464910	Identifier	p		3464676	0					
ANR	3464911	IncDec	++		3464676	1					
ANR	3464912	CompoundStatement		76:8:2031:2031	3464676	3					
ANR	3464913	IfStatement	"if ( p [ 0 ] == 'S' && ft_strncmp ( ( char * ) p , STARTDATA , STARTDATA_LEN ) == 0 )"		3464676	0					
ANR	3464914	Condition	"p [ 0 ] == 'S' && ft_strncmp ( ( char * ) p , STARTDATA , STARTDATA_LEN ) == 0"	137:15:5052:5176	3464676	0	True				
ANR	3464915	AndExpression	"p [ 0 ] == 'S' && ft_strncmp ( ( char * ) p , STARTDATA , STARTDATA_LEN ) == 0"		3464676	0		&&			
ANR	3464916	EqualityExpression	p [ 0 ] == 'S'		3464676	0		==			
ANR	3464917	ArrayIndexing	p [ 0 ]		3464676	0					
ANR	3464918	Identifier	p		3464676	0					
ANR	3464919	PrimaryExpression	0		3464676	1					
ANR	3464920	PrimaryExpression	'S'		3464676	1					
ANR	3464921	EqualityExpression	"ft_strncmp ( ( char * ) p , STARTDATA , STARTDATA_LEN ) == 0"		3464676	1		==			
ANR	3464922	CallExpression	"ft_strncmp ( ( char * ) p , STARTDATA , STARTDATA_LEN )"		3464676	0					
ANR	3464923	Callee	ft_strncmp		3464676	0					
ANR	3464924	Identifier	ft_strncmp		3464676	0					
ANR	3464925	ArgumentList	( char * ) p		3464676	1					
ANR	3464926	Argument	( char * ) p		3464676	0					
ANR	3464927	CastExpression	( char * ) p		3464676	0					
ANR	3464928	CastTarget	char *		3464676	0					
ANR	3464929	Identifier	p		3464676	1					
ANR	3464930	Argument	STARTDATA		3464676	1					
ANR	3464931	Identifier	STARTDATA		3464676	0					
ANR	3464932	Argument	STARTDATA_LEN		3464676	2					
ANR	3464933	Identifier	STARTDATA_LEN		3464676	0					
ANR	3464934	PrimaryExpression	0		3464676	1					
ANR	3464935	CompoundStatement		79:10:2186:2186	3464676	1					
ANR	3464936	ExpressionStatement	offset += ( FT_ULong ) ( p - buffer ) + STARTDATA_LEN + 1	141:12:5267:5321	3464676	0	True				
ANR	3464937	AssignmentExpression	offset += ( FT_ULong ) ( p - buffer ) + STARTDATA_LEN + 1		3464676	0		+=			
ANR	3464938	Identifier	offset		3464676	0					
ANR	3464939	AdditiveExpression	( FT_ULong ) ( p - buffer ) + STARTDATA_LEN + 1		3464676	1		+			
ANR	3464940	CastExpression	( FT_ULong ) ( p - buffer )		3464676	0					
ANR	3464941	CastTarget	FT_ULong		3464676	0					
ANR	3464942	AdditiveExpression	p - buffer		3464676	1		-			
ANR	3464943	Identifier	p		3464676	0					
ANR	3464944	Identifier	buffer		3464676	1					
ANR	3464945	AdditiveExpression	STARTDATA_LEN + 1		3464676	1		+			
ANR	3464946	Identifier	STARTDATA_LEN		3464676	0					
ANR	3464947	PrimaryExpression	1		3464676	1					
ANR	3464948	GotoStatement	goto Found ;	142:12:5335:5345	3464676	1	True				
ANR	3464949	Identifier	Found		3464676	0					
ANR	3464950	ElseStatement	else		3464676	0					
ANR	3464951	IfStatement	"if ( p [ 1 ] == 's' && ft_strncmp ( ( char * ) p , SFNTS , SFNTS_LEN ) == 0 )"		3464676	0					
ANR	3464952	Condition	"p [ 1 ] == 's' && ft_strncmp ( ( char * ) p , SFNTS , SFNTS_LEN ) == 0"	144:20:5379:5492	3464676	0	True				
ANR	3464953	AndExpression	"p [ 1 ] == 's' && ft_strncmp ( ( char * ) p , SFNTS , SFNTS_LEN ) == 0"		3464676	0		&&			
ANR	3464954	EqualityExpression	p [ 1 ] == 's'		3464676	0		==			
ANR	3464955	ArrayIndexing	p [ 1 ]		3464676	0					
ANR	3464956	Identifier	p		3464676	0					
ANR	3464957	PrimaryExpression	1		3464676	1					
ANR	3464958	PrimaryExpression	's'		3464676	1					
ANR	3464959	EqualityExpression	"ft_strncmp ( ( char * ) p , SFNTS , SFNTS_LEN ) == 0"		3464676	1		==			
ANR	3464960	CallExpression	"ft_strncmp ( ( char * ) p , SFNTS , SFNTS_LEN )"		3464676	0					
ANR	3464961	Callee	ft_strncmp		3464676	0					
ANR	3464962	Identifier	ft_strncmp		3464676	0					
ANR	3464963	ArgumentList	( char * ) p		3464676	1					
ANR	3464964	Argument	( char * ) p		3464676	0					
ANR	3464965	CastExpression	( char * ) p		3464676	0					
ANR	3464966	CastTarget	char *		3464676	0					
ANR	3464967	Identifier	p		3464676	1					
ANR	3464968	Argument	SFNTS		3464676	1					
ANR	3464969	Identifier	SFNTS		3464676	0					
ANR	3464970	Argument	SFNTS_LEN		3464676	2					
ANR	3464971	Identifier	SFNTS_LEN		3464676	0					
ANR	3464972	PrimaryExpression	0		3464676	1					
ANR	3464973	CompoundStatement		86:10:2502:2502	3464676	1					
ANR	3464974	ExpressionStatement	offset += ( FT_ULong ) ( p - buffer ) + SFNTS_LEN + 1	147:12:5520:5570	3464676	0	True				
ANR	3464975	AssignmentExpression	offset += ( FT_ULong ) ( p - buffer ) + SFNTS_LEN + 1		3464676	0		+=			
ANR	3464976	Identifier	offset		3464676	0					
ANR	3464977	AdditiveExpression	( FT_ULong ) ( p - buffer ) + SFNTS_LEN + 1		3464676	1		+			
ANR	3464978	CastExpression	( FT_ULong ) ( p - buffer )		3464676	0					
ANR	3464979	CastTarget	FT_ULong		3464676	0					
ANR	3464980	AdditiveExpression	p - buffer		3464676	1		-			
ANR	3464981	Identifier	p		3464676	0					
ANR	3464982	Identifier	buffer		3464676	1					
ANR	3464983	AdditiveExpression	SFNTS_LEN + 1		3464676	1		+			
ANR	3464984	Identifier	SFNTS_LEN		3464676	0					
ANR	3464985	PrimaryExpression	1		3464676	1					
ANR	3464986	GotoStatement	goto Found ;	148:12:5584:5594	3464676	1	True				
ANR	3464987	Identifier	Found		3464676	0					
ANR	3464988	IfStatement	if ( read_offset + read_len < STARTDATA_LEN )		3464676	7					
ANR	3464989	Condition	read_offset + read_len < STARTDATA_LEN	152:13:5632:5669	3464676	0	True				
ANR	3464990	RelationalExpression	read_offset + read_len < STARTDATA_LEN		3464676	0		<			
ANR	3464991	AdditiveExpression	read_offset + read_len		3464676	0		+			
ANR	3464992	Identifier	read_offset		3464676	0					
ANR	3464993	Identifier	read_len		3464676	1					
ANR	3464994	Identifier	STARTDATA_LEN		3464676	1					
ANR	3464995	CompoundStatement		93:8:2677:2677	3464676	1					
ANR	3464996	ExpressionStatement	"FT_TRACE2 ( ( ""cid_parser_new: no `StartData' keyword found\\n"" ) )"	154:10:5693:5756	3464676	0	True				
ANR	3464997	CallExpression	"FT_TRACE2 ( ( ""cid_parser_new: no `StartData' keyword found\\n"" ) )"		3464676	0					
ANR	3464998	Callee	FT_TRACE2		3464676	0					
ANR	3464999	Identifier	FT_TRACE2		3464676	0					
ANR	3465000	ArgumentList	"""cid_parser_new: no `StartData' keyword found\\n"""		3464676	1					
ANR	3465001	Argument	"""cid_parser_new: no `StartData' keyword found\\n"""		3464676	0					
ANR	3465002	PrimaryExpression	"""cid_parser_new: no `StartData' keyword found\\n"""		3464676	0					
ANR	3465003	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	155:10:5768:5807	3464676	1	True				
ANR	3465004	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3464676	0		=			
ANR	3465005	Identifier	error		3464676	0					
ANR	3465006	CallExpression	FT_THROW ( Invalid_File_Format )		3464676	1					
ANR	3465007	Callee	FT_THROW		3464676	0					
ANR	3465008	Identifier	FT_THROW		3464676	0					
ANR	3465009	ArgumentList	Invalid_File_Format		3464676	1					
ANR	3465010	Argument	Invalid_File_Format		3464676	0					
ANR	3465011	Identifier	Invalid_File_Format		3464676	0					
ANR	3465012	GotoStatement	goto Exit ;	156:10:5819:5828	3464676	2	True				
ANR	3465013	Identifier	Exit		3464676	0					
ANR	3465014	ExpressionStatement	"FT_MEM_MOVE ( buffer , buffer + read_offset + read_len - STARTDATA_LEN , STARTDATA_LEN )"	159:8:5849:5976	3464676	8	True				
ANR	3465015	CallExpression	"FT_MEM_MOVE ( buffer , buffer + read_offset + read_len - STARTDATA_LEN , STARTDATA_LEN )"		3464676	0					
ANR	3465016	Callee	FT_MEM_MOVE		3464676	0					
ANR	3465017	Identifier	FT_MEM_MOVE		3464676	0					
ANR	3465018	ArgumentList	buffer		3464676	1					
ANR	3465019	Argument	buffer		3464676	0					
ANR	3465020	Identifier	buffer		3464676	0					
ANR	3465021	Argument	buffer + read_offset + read_len - STARTDATA_LEN		3464676	1					
ANR	3465022	AdditiveExpression	buffer + read_offset + read_len - STARTDATA_LEN		3464676	0		+			
ANR	3465023	Identifier	buffer		3464676	0					
ANR	3465024	AdditiveExpression	read_offset + read_len - STARTDATA_LEN		3464676	1		+			
ANR	3465025	Identifier	read_offset		3464676	0					
ANR	3465026	AdditiveExpression	read_len - STARTDATA_LEN		3464676	1		-			
ANR	3465027	Identifier	read_len		3464676	0					
ANR	3465028	Identifier	STARTDATA_LEN		3464676	1					
ANR	3465029	Argument	STARTDATA_LEN		3464676	2					
ANR	3465030	Identifier	STARTDATA_LEN		3464676	0					
ANR	3465031	ExpressionStatement	read_len = 256	164:8:6026:6043	3464676	9	True				
ANR	3465032	AssignmentExpression	read_len = 256		3464676	0		=			
ANR	3465033	Identifier	read_len		3464676	0					
ANR	3465034	PrimaryExpression	256		3464676	1					
ANR	3465035	ExpressionStatement	read_offset = STARTDATA_LEN	165:8:6053:6080	3464676	10	True				
ANR	3465036	AssignmentExpression	read_offset = STARTDATA_LEN		3464676	0		=			
ANR	3465037	Identifier	read_offset		3464676	0					
ANR	3465038	Identifier	STARTDATA_LEN		3464676	1					
ANR	3465039	ExpressionStatement	p = buffer + read_offset	166:8:6090:6124	3464676	11	True				
ANR	3465040	AssignmentExpression	p = buffer + read_offset		3464676	0		=			
ANR	3465041	Identifier	p		3464676	0					
ANR	3465042	AdditiveExpression	buffer + read_offset		3464676	1		+			
ANR	3465043	Identifier	buffer		3464676	0					
ANR	3465044	Identifier	read_offset		3464676	1					
ANR	3465045	Label	Found :	170:2:6143:6148	3464676	14	True				
ANR	3465046	Identifier	Found		3464676	0					
ANR	3465047	ExpressionStatement	ps_len = offset - base_offset	175:4:6383:6412	3464676	15	True				
ANR	3465048	AssignmentExpression	ps_len = offset - base_offset		3464676	0		=			
ANR	3465049	Identifier	ps_len		3464676	0					
ANR	3465050	AdditiveExpression	offset - base_offset		3464676	1		-			
ANR	3465051	Identifier	offset		3464676	0					
ANR	3465052	Identifier	base_offset		3464676	1					
ANR	3465053	IfStatement	"if ( FT_STREAM_SEEK ( base_offset ) || FT_FRAME_EXTRACT ( ps_len , parser -> postscript ) )"		3464676	16					
ANR	3465054	Condition	"FT_STREAM_SEEK ( base_offset ) || FT_FRAME_EXTRACT ( ps_len , parser -> postscript )"	176:9:6423:6527	3464676	0	True				
ANR	3465055	OrExpression	"FT_STREAM_SEEK ( base_offset ) || FT_FRAME_EXTRACT ( ps_len , parser -> postscript )"		3464676	0		||			
ANR	3465056	CallExpression	FT_STREAM_SEEK ( base_offset )		3464676	0					
ANR	3465057	Callee	FT_STREAM_SEEK		3464676	0					
ANR	3465058	Identifier	FT_STREAM_SEEK		3464676	0					
ANR	3465059	ArgumentList	base_offset		3464676	1					
ANR	3465060	Argument	base_offset		3464676	0					
ANR	3465061	Identifier	base_offset		3464676	0					
ANR	3465062	CallExpression	"FT_FRAME_EXTRACT ( ps_len , parser -> postscript )"		3464676	1					
ANR	3465063	Callee	FT_FRAME_EXTRACT		3464676	0					
ANR	3465064	Identifier	FT_FRAME_EXTRACT		3464676	0					
ANR	3465065	ArgumentList	ps_len		3464676	1					
ANR	3465066	Argument	ps_len		3464676	0					
ANR	3465067	Identifier	ps_len		3464676	0					
ANR	3465068	Argument	parser -> postscript		3464676	1					
ANR	3465069	PtrMemberAccess	parser -> postscript		3464676	0					
ANR	3465070	Identifier	parser		3464676	0					
ANR	3465071	Identifier	postscript		3464676	1					
ANR	3465072	GotoStatement	goto Exit ;	178:6:6537:6546	3464676	1	True				
ANR	3465073	Identifier	Exit		3464676	0					
ANR	3465074	ExpressionStatement	parser -> data_offset = offset	180:4:6553:6584	3464676	17	True				
ANR	3465075	AssignmentExpression	parser -> data_offset = offset		3464676	0		=			
ANR	3465076	PtrMemberAccess	parser -> data_offset		3464676	0					
ANR	3465077	Identifier	parser		3464676	0					
ANR	3465078	Identifier	data_offset		3464676	1					
ANR	3465079	Identifier	offset		3464676	1					
ANR	3465080	ExpressionStatement	parser -> postscript_len = ps_len	181:4:6590:6621	3464676	18	True				
ANR	3465081	AssignmentExpression	parser -> postscript_len = ps_len		3464676	0		=			
ANR	3465082	PtrMemberAccess	parser -> postscript_len		3464676	0					
ANR	3465083	Identifier	parser		3464676	0					
ANR	3465084	Identifier	postscript_len		3464676	1					
ANR	3465085	Identifier	ps_len		3464676	1					
ANR	3465086	ExpressionStatement	parser -> root . base = parser -> postscript	182:4:6627:6670	3464676	19	True				
ANR	3465087	AssignmentExpression	parser -> root . base = parser -> postscript		3464676	0		=			
ANR	3465088	MemberAccess	parser -> root . base		3464676	0					
ANR	3465089	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465090	Identifier	parser		3464676	0					
ANR	3465091	Identifier	root		3464676	1					
ANR	3465092	Identifier	base		3464676	1					
ANR	3465093	PtrMemberAccess	parser -> postscript		3464676	1					
ANR	3465094	Identifier	parser		3464676	0					
ANR	3465095	Identifier	postscript		3464676	1					
ANR	3465096	ExpressionStatement	parser -> root . cursor = parser -> postscript	183:4:6676:6719	3464676	20	True				
ANR	3465097	AssignmentExpression	parser -> root . cursor = parser -> postscript		3464676	0		=			
ANR	3465098	MemberAccess	parser -> root . cursor		3464676	0					
ANR	3465099	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465100	Identifier	parser		3464676	0					
ANR	3465101	Identifier	root		3464676	1					
ANR	3465102	Identifier	cursor		3464676	1					
ANR	3465103	PtrMemberAccess	parser -> postscript		3464676	1					
ANR	3465104	Identifier	parser		3464676	0					
ANR	3465105	Identifier	postscript		3464676	1					
ANR	3465106	ExpressionStatement	parser -> root . limit = parser -> root . cursor + ps_len	184:4:6725:6778	3464676	21	True				
ANR	3465107	AssignmentExpression	parser -> root . limit = parser -> root . cursor + ps_len		3464676	0		=			
ANR	3465108	MemberAccess	parser -> root . limit		3464676	0					
ANR	3465109	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465110	Identifier	parser		3464676	0					
ANR	3465111	Identifier	root		3464676	1					
ANR	3465112	Identifier	limit		3464676	1					
ANR	3465113	AdditiveExpression	parser -> root . cursor + ps_len		3464676	1		+			
ANR	3465114	MemberAccess	parser -> root . cursor		3464676	0					
ANR	3465115	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465116	Identifier	parser		3464676	0					
ANR	3465117	Identifier	root		3464676	1					
ANR	3465118	Identifier	cursor		3464676	1					
ANR	3465119	Identifier	ps_len		3464676	1					
ANR	3465120	ExpressionStatement	parser -> num_dict = - 1	185:4:6784:6811	3464676	22	True				
ANR	3465121	AssignmentExpression	parser -> num_dict = - 1		3464676	0		=			
ANR	3465122	PtrMemberAccess	parser -> num_dict		3464676	0					
ANR	3465123	Identifier	parser		3464676	0					
ANR	3465124	Identifier	num_dict		3464676	1					
ANR	3465125	UnaryOperationExpression	- 1		3464676	1					
ANR	3465126	UnaryOperator	-		3464676	0					
ANR	3465127	PrimaryExpression	1		3464676	1					
ANR	3465128	ExpressionStatement	arg1 = parser -> root . cursor	192:4:7111:7137	3464676	23	True				
ANR	3465129	AssignmentExpression	arg1 = parser -> root . cursor		3464676	0		=			
ANR	3465130	Identifier	arg1		3464676	0					
ANR	3465131	MemberAccess	parser -> root . cursor		3464676	1					
ANR	3465132	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465133	Identifier	parser		3464676	0					
ANR	3465134	Identifier	root		3464676	1					
ANR	3465135	Identifier	cursor		3464676	1					
ANR	3465136	ExpressionStatement	cid_parser_skip_PS_token ( parser )	193:4:7143:7177	3464676	24	True				
ANR	3465137	CallExpression	cid_parser_skip_PS_token ( parser )		3464676	0					
ANR	3465138	Callee	cid_parser_skip_PS_token		3464676	0					
ANR	3465139	Identifier	cid_parser_skip_PS_token		3464676	0					
ANR	3465140	ArgumentList	parser		3464676	1					
ANR	3465141	Argument	parser		3464676	0					
ANR	3465142	Identifier	parser		3464676	0					
ANR	3465143	ExpressionStatement	cid_parser_skip_spaces ( parser )	194:4:7183:7217	3464676	25	True				
ANR	3465144	CallExpression	cid_parser_skip_spaces ( parser )		3464676	0					
ANR	3465145	Callee	cid_parser_skip_spaces		3464676	0					
ANR	3465146	Identifier	cid_parser_skip_spaces		3464676	0					
ANR	3465147	ArgumentList	parser		3464676	1					
ANR	3465148	Argument	parser		3464676	0					
ANR	3465149	Identifier	parser		3464676	0					
ANR	3465150	ExpressionStatement	arg2 = parser -> root . cursor	195:4:7223:7249	3464676	26	True				
ANR	3465151	AssignmentExpression	arg2 = parser -> root . cursor		3464676	0		=			
ANR	3465152	Identifier	arg2		3464676	0					
ANR	3465153	MemberAccess	parser -> root . cursor		3464676	1					
ANR	3465154	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465155	Identifier	parser		3464676	0					
ANR	3465156	Identifier	root		3464676	1					
ANR	3465157	Identifier	cursor		3464676	1					
ANR	3465158	ExpressionStatement	cid_parser_skip_PS_token ( parser )	196:4:7255:7289	3464676	27	True				
ANR	3465159	CallExpression	cid_parser_skip_PS_token ( parser )		3464676	0					
ANR	3465160	Callee	cid_parser_skip_PS_token		3464676	0					
ANR	3465161	Identifier	cid_parser_skip_PS_token		3464676	0					
ANR	3465162	ArgumentList	parser		3464676	1					
ANR	3465163	Argument	parser		3464676	0					
ANR	3465164	Identifier	parser		3464676	0					
ANR	3465165	ExpressionStatement	cid_parser_skip_spaces ( parser )	197:4:7295:7329	3464676	28	True				
ANR	3465166	CallExpression	cid_parser_skip_spaces ( parser )		3464676	0					
ANR	3465167	Callee	cid_parser_skip_spaces		3464676	0					
ANR	3465168	Identifier	cid_parser_skip_spaces		3464676	0					
ANR	3465169	ArgumentList	parser		3464676	1					
ANR	3465170	Argument	parser		3464676	0					
ANR	3465171	Identifier	parser		3464676	0					
ANR	3465172	ExpressionStatement	limit = parser -> root . limit	199:4:7336:7362	3464676	29	True				
ANR	3465173	AssignmentExpression	limit = parser -> root . limit		3464676	0		=			
ANR	3465174	Identifier	limit		3464676	0					
ANR	3465175	MemberAccess	parser -> root . limit		3464676	1					
ANR	3465176	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465177	Identifier	parser		3464676	0					
ANR	3465178	Identifier	root		3464676	1					
ANR	3465179	Identifier	limit		3464676	1					
ANR	3465180	ExpressionStatement	cur = parser -> root . cursor	200:4:7368:7395	3464676	30	True				
ANR	3465181	AssignmentExpression	cur = parser -> root . cursor		3464676	0		=			
ANR	3465182	Identifier	cur		3464676	0					
ANR	3465183	MemberAccess	parser -> root . cursor		3464676	1					
ANR	3465184	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465185	Identifier	parser		3464676	0					
ANR	3465186	Identifier	root		3464676	1					
ANR	3465187	Identifier	cursor		3464676	1					
ANR	3465188	WhileStatement	while ( cur <= limit - SFNTS_LEN )		3464676	31					
ANR	3465189	Condition	cur <= limit - SFNTS_LEN	202:12:7410:7433	3464676	0	True				
ANR	3465190	RelationalExpression	cur <= limit - SFNTS_LEN		3464676	0		<=			
ANR	3465191	Identifier	cur		3464676	0					
ANR	3465192	AdditiveExpression	limit - SFNTS_LEN		3464676	1		-			
ANR	3465193	Identifier	limit		3464676	0					
ANR	3465194	Identifier	SFNTS_LEN		3464676	1					
ANR	3465195	CompoundStatement		143:4:4437:4437	3464676	1					
ANR	3465196	IfStatement	if ( parser -> root . error )		3464676	0					
ANR	3465197	Condition	parser -> root . error	204:11:7454:7471	3464676	0	True				
ANR	3465198	MemberAccess	parser -> root . error		3464676	0					
ANR	3465199	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465200	Identifier	parser		3464676	0					
ANR	3465201	Identifier	root		3464676	1					
ANR	3465202	Identifier	error		3464676	1					
ANR	3465203	CompoundStatement		145:6:4477:4477	3464676	1					
ANR	3465204	ExpressionStatement	error = parser -> root . error	206:8:7491:7517	3464676	0	True				
ANR	3465205	AssignmentExpression	error = parser -> root . error		3464676	0		=			
ANR	3465206	Identifier	error		3464676	0					
ANR	3465207	MemberAccess	parser -> root . error		3464676	1					
ANR	3465208	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465209	Identifier	parser		3464676	0					
ANR	3465210	Identifier	root		3464676	1					
ANR	3465211	Identifier	error		3464676	1					
ANR	3465212	GotoStatement	goto Exit ;	207:8:7527:7536	3464676	1	True				
ANR	3465213	Identifier	Exit		3464676	0					
ANR	3465214	IfStatement	"if ( cur [ 0 ] == 'S' && cur <= limit - STARTDATA_LEN && ft_strncmp ( ( char * ) cur , STARTDATA , STARTDATA_LEN ) == 0 )"		3464676	1					
ANR	3465215	Condition	"cur [ 0 ] == 'S' && cur <= limit - STARTDATA_LEN && ft_strncmp ( ( char * ) cur , STARTDATA , STARTDATA_LEN ) == 0"	210:11:7558:7752	3464676	0	True				
ANR	3465216	AndExpression	"cur [ 0 ] == 'S' && cur <= limit - STARTDATA_LEN && ft_strncmp ( ( char * ) cur , STARTDATA , STARTDATA_LEN ) == 0"		3464676	0		&&			
ANR	3465217	EqualityExpression	cur [ 0 ] == 'S'		3464676	0		==			
ANR	3465218	ArrayIndexing	cur [ 0 ]		3464676	0					
ANR	3465219	Identifier	cur		3464676	0					
ANR	3465220	PrimaryExpression	0		3464676	1					
ANR	3465221	PrimaryExpression	'S'		3464676	1					
ANR	3465222	AndExpression	"cur <= limit - STARTDATA_LEN && ft_strncmp ( ( char * ) cur , STARTDATA , STARTDATA_LEN ) == 0"		3464676	1		&&			
ANR	3465223	RelationalExpression	cur <= limit - STARTDATA_LEN		3464676	0		<=			
ANR	3465224	Identifier	cur		3464676	0					
ANR	3465225	AdditiveExpression	limit - STARTDATA_LEN		3464676	1		-			
ANR	3465226	Identifier	limit		3464676	0					
ANR	3465227	Identifier	STARTDATA_LEN		3464676	1					
ANR	3465228	EqualityExpression	"ft_strncmp ( ( char * ) cur , STARTDATA , STARTDATA_LEN ) == 0"		3464676	1		==			
ANR	3465229	CallExpression	"ft_strncmp ( ( char * ) cur , STARTDATA , STARTDATA_LEN )"		3464676	0					
ANR	3465230	Callee	ft_strncmp		3464676	0					
ANR	3465231	Identifier	ft_strncmp		3464676	0					
ANR	3465232	ArgumentList	( char * ) cur		3464676	1					
ANR	3465233	Argument	( char * ) cur		3464676	0					
ANR	3465234	CastExpression	( char * ) cur		3464676	0					
ANR	3465235	CastTarget	char *		3464676	0					
ANR	3465236	Identifier	cur		3464676	1					
ANR	3465237	Argument	STARTDATA		3464676	1					
ANR	3465238	Identifier	STARTDATA		3464676	0					
ANR	3465239	Argument	STARTDATA_LEN		3464676	2					
ANR	3465240	Identifier	STARTDATA_LEN		3464676	0					
ANR	3465241	PrimaryExpression	0		3464676	1					
ANR	3465242	CompoundStatement		153:6:4758:4758	3464676	1					
ANR	3465243	IfStatement	"if ( ft_strncmp ( ( char * ) arg1 , ""(Hex)"" , 5 ) == 0 )"		3464676	0					
ANR	3465244	Condition	"ft_strncmp ( ( char * ) arg1 , ""(Hex)"" , 5 ) == 0"	214:13:7777:7818	3464676	0	True				
ANR	3465245	EqualityExpression	"ft_strncmp ( ( char * ) arg1 , ""(Hex)"" , 5 ) == 0"		3464676	0		==			
ANR	3465246	CallExpression	"ft_strncmp ( ( char * ) arg1 , ""(Hex)"" , 5 )"		3464676	0					
ANR	3465247	Callee	ft_strncmp		3464676	0					
ANR	3465248	Identifier	ft_strncmp		3464676	0					
ANR	3465249	ArgumentList	( char * ) arg1		3464676	1					
ANR	3465250	Argument	( char * ) arg1		3464676	0					
ANR	3465251	CastExpression	( char * ) arg1		3464676	0					
ANR	3465252	CastTarget	char *		3464676	0					
ANR	3465253	Identifier	arg1		3464676	1					
ANR	3465254	Argument	"""(Hex)"""		3464676	1					
ANR	3465255	PrimaryExpression	"""(Hex)"""		3464676	0					
ANR	3465256	Argument	5		3464676	2					
ANR	3465257	PrimaryExpression	5		3464676	0					
ANR	3465258	PrimaryExpression	0		3464676	1					
ANR	3465259	CompoundStatement		156:10:4838:4894	3464676	1					
ANR	3465260	IdentifierDeclStatement	"FT_Long tmp = ft_strtol ( ( const char * ) arg2 , NULL , 10 ) ;"	216:10:7842:7898	3464676	0	True				
ANR	3465261	IdentifierDecl	"tmp = ft_strtol ( ( const char * ) arg2 , NULL , 10 )"		3464676	0					
ANR	3465262	IdentifierDeclType	FT_Long		3464676	0					
ANR	3465263	Identifier	tmp		3464676	1					
ANR	3465264	AssignmentExpression	"tmp = ft_strtol ( ( const char * ) arg2 , NULL , 10 )"		3464676	2		=			
ANR	3465265	Identifier	tmp		3464676	0					
ANR	3465266	CallExpression	"ft_strtol ( ( const char * ) arg2 , NULL , 10 )"		3464676	1					
ANR	3465267	Callee	ft_strtol		3464676	0					
ANR	3465268	Identifier	ft_strtol		3464676	0					
ANR	3465269	ArgumentList	( const char * ) arg2		3464676	1					
ANR	3465270	Argument	( const char * ) arg2		3464676	0					
ANR	3465271	CastExpression	( const char * ) arg2		3464676	0					
ANR	3465272	CastTarget	const char *		3464676	0					
ANR	3465273	Identifier	arg2		3464676	1					
ANR	3465274	Argument	NULL		3464676	1					
ANR	3465275	Identifier	NULL		3464676	0					
ANR	3465276	Argument	10		3464676	2					
ANR	3465277	PrimaryExpression	10		3464676	0					
ANR	3465278	IfStatement	if ( tmp < 0 )		3464676	1					
ANR	3465279	Condition	tmp < 0	219:15:7917:7923	3464676	0	True				
ANR	3465280	RelationalExpression	tmp < 0		3464676	0		<			
ANR	3465281	Identifier	tmp		3464676	0					
ANR	3465282	PrimaryExpression	0		3464676	1					
ANR	3465283	CompoundStatement		160:10:4933:4933	3464676	1					
ANR	3465284	ExpressionStatement	"FT_ERROR ( ( ""cid_parser_new: invalid length of hex data\\n"" ) )"	221:12:7951:8011	3464676	0	True				
ANR	3465285	CallExpression	"FT_ERROR ( ( ""cid_parser_new: invalid length of hex data\\n"" ) )"		3464676	0					
ANR	3465286	Callee	FT_ERROR		3464676	0					
ANR	3465287	Identifier	FT_ERROR		3464676	0					
ANR	3465288	ArgumentList	"""cid_parser_new: invalid length of hex data\\n"""		3464676	1					
ANR	3465289	Argument	"""cid_parser_new: invalid length of hex data\\n"""		3464676	0					
ANR	3465290	PrimaryExpression	"""cid_parser_new: invalid length of hex data\\n"""		3464676	0					
ANR	3465291	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	222:12:8025:8064	3464676	1	True				
ANR	3465292	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3464676	0		=			
ANR	3465293	Identifier	error		3464676	0					
ANR	3465294	CallExpression	FT_THROW ( Invalid_File_Format )		3464676	1					
ANR	3465295	Callee	FT_THROW		3464676	0					
ANR	3465296	Identifier	FT_THROW		3464676	0					
ANR	3465297	ArgumentList	Invalid_File_Format		3464676	1					
ANR	3465298	Argument	Invalid_File_Format		3464676	0					
ANR	3465299	Identifier	Invalid_File_Format		3464676	0					
ANR	3465300	ElseStatement	else		3464676	0					
ANR	3465301	ExpressionStatement	parser -> binary_length = ( FT_ULong ) tmp	225:12:8105:8142	3464676	0	True				
ANR	3465302	AssignmentExpression	parser -> binary_length = ( FT_ULong ) tmp		3464676	0		=			
ANR	3465303	PtrMemberAccess	parser -> binary_length		3464676	0					
ANR	3465304	Identifier	parser		3464676	0					
ANR	3465305	Identifier	binary_length		3464676	1					
ANR	3465306	CastExpression	( FT_ULong ) tmp		3464676	1					
ANR	3465307	CastTarget	FT_ULong		3464676	0					
ANR	3465308	Identifier	tmp		3464676	1					
ANR	3465309	GotoStatement	goto Exit ;	228:8:8163:8172	3464676	1	True				
ANR	3465310	Identifier	Exit		3464676	0					
ANR	3465311	ElseStatement	else		3464676	0					
ANR	3465312	IfStatement	"if ( cur [ 1 ] == 's' && ft_strncmp ( ( char * ) cur , SFNTS , SFNTS_LEN ) == 0 )"		3464676	0					
ANR	3465313	Condition	"cur [ 1 ] == 's' && ft_strncmp ( ( char * ) cur , SFNTS , SFNTS_LEN ) == 0"	230:16:8198:8311	3464676	0	True				
ANR	3465314	AndExpression	"cur [ 1 ] == 's' && ft_strncmp ( ( char * ) cur , SFNTS , SFNTS_LEN ) == 0"		3464676	0		&&			
ANR	3465315	EqualityExpression	cur [ 1 ] == 's'		3464676	0		==			
ANR	3465316	ArrayIndexing	cur [ 1 ]		3464676	0					
ANR	3465317	Identifier	cur		3464676	0					
ANR	3465318	PrimaryExpression	1		3464676	1					
ANR	3465319	PrimaryExpression	's'		3464676	1					
ANR	3465320	EqualityExpression	"ft_strncmp ( ( char * ) cur , SFNTS , SFNTS_LEN ) == 0"		3464676	1		==			
ANR	3465321	CallExpression	"ft_strncmp ( ( char * ) cur , SFNTS , SFNTS_LEN )"		3464676	0					
ANR	3465322	Callee	ft_strncmp		3464676	0					
ANR	3465323	Identifier	ft_strncmp		3464676	0					
ANR	3465324	ArgumentList	( char * ) cur		3464676	1					
ANR	3465325	Argument	( char * ) cur		3464676	0					
ANR	3465326	CastExpression	( char * ) cur		3464676	0					
ANR	3465327	CastTarget	char *		3464676	0					
ANR	3465328	Identifier	cur		3464676	1					
ANR	3465329	Argument	SFNTS		3464676	1					
ANR	3465330	Identifier	SFNTS		3464676	0					
ANR	3465331	Argument	SFNTS_LEN		3464676	2					
ANR	3465332	Identifier	SFNTS_LEN		3464676	0					
ANR	3465333	PrimaryExpression	0		3464676	1					
ANR	3465334	CompoundStatement		172:6:5317:5317	3464676	1					
ANR	3465335	ExpressionStatement	"FT_TRACE2 ( ( ""cid_parser_new: cannot handle Type 11 fonts\\n"" ) )"	233:8:8331:8393	3464676	0	True				
ANR	3465336	CallExpression	"FT_TRACE2 ( ( ""cid_parser_new: cannot handle Type 11 fonts\\n"" ) )"		3464676	0					
ANR	3465337	Callee	FT_TRACE2		3464676	0					
ANR	3465338	Identifier	FT_TRACE2		3464676	0					
ANR	3465339	ArgumentList	"""cid_parser_new: cannot handle Type 11 fonts\\n"""		3464676	1					
ANR	3465340	Argument	"""cid_parser_new: cannot handle Type 11 fonts\\n"""		3464676	0					
ANR	3465341	PrimaryExpression	"""cid_parser_new: cannot handle Type 11 fonts\\n"""		3464676	0					
ANR	3465342	ExpressionStatement	error = FT_THROW ( Unknown_File_Format )	234:8:8403:8442	3464676	1	True				
ANR	3465343	AssignmentExpression	error = FT_THROW ( Unknown_File_Format )		3464676	0		=			
ANR	3465344	Identifier	error		3464676	0					
ANR	3465345	CallExpression	FT_THROW ( Unknown_File_Format )		3464676	1					
ANR	3465346	Callee	FT_THROW		3464676	0					
ANR	3465347	Identifier	FT_THROW		3464676	0					
ANR	3465348	ArgumentList	Unknown_File_Format		3464676	1					
ANR	3465349	Argument	Unknown_File_Format		3464676	0					
ANR	3465350	Identifier	Unknown_File_Format		3464676	0					
ANR	3465351	GotoStatement	goto Exit ;	235:8:8452:8461	3464676	2	True				
ANR	3465352	Identifier	Exit		3464676	0					
ANR	3465353	ExpressionStatement	cid_parser_skip_PS_token ( parser )	238:6:8478:8512	3464676	2	True				
ANR	3465354	CallExpression	cid_parser_skip_PS_token ( parser )		3464676	0					
ANR	3465355	Callee	cid_parser_skip_PS_token		3464676	0					
ANR	3465356	Identifier	cid_parser_skip_PS_token		3464676	0					
ANR	3465357	ArgumentList	parser		3464676	1					
ANR	3465358	Argument	parser		3464676	0					
ANR	3465359	Identifier	parser		3464676	0					
ANR	3465360	ExpressionStatement	cid_parser_skip_spaces ( parser )	239:6:8520:8554	3464676	3	True				
ANR	3465361	CallExpression	cid_parser_skip_spaces ( parser )		3464676	0					
ANR	3465362	Callee	cid_parser_skip_spaces		3464676	0					
ANR	3465363	Identifier	cid_parser_skip_spaces		3464676	0					
ANR	3465364	ArgumentList	parser		3464676	1					
ANR	3465365	Argument	parser		3464676	0					
ANR	3465366	Identifier	parser		3464676	0					
ANR	3465367	ExpressionStatement	arg1 = arg2	240:6:8562:8573	3464676	4	True				
ANR	3465368	AssignmentExpression	arg1 = arg2		3464676	0		=			
ANR	3465369	Identifier	arg1		3464676	0					
ANR	3465370	Identifier	arg2		3464676	1					
ANR	3465371	ExpressionStatement	arg2 = cur	241:6:8581:8591	3464676	5	True				
ANR	3465372	AssignmentExpression	arg2 = cur		3464676	0		=			
ANR	3465373	Identifier	arg2		3464676	0					
ANR	3465374	Identifier	cur		3464676	1					
ANR	3465375	ExpressionStatement	cur = parser -> root . cursor	242:6:8599:8625	3464676	6	True				
ANR	3465376	AssignmentExpression	cur = parser -> root . cursor		3464676	0		=			
ANR	3465377	Identifier	cur		3464676	0					
ANR	3465378	MemberAccess	parser -> root . cursor		3464676	1					
ANR	3465379	PtrMemberAccess	parser -> root		3464676	0					
ANR	3465380	Identifier	parser		3464676	0					
ANR	3465381	Identifier	root		3464676	1					
ANR	3465382	Identifier	cursor		3464676	1					
ANR	3465383	ExpressionStatement	FT_FRAME_RELEASE ( parser -> postscript )	247:4:8784:8822	3464676	32	True				
ANR	3465384	CallExpression	FT_FRAME_RELEASE ( parser -> postscript )		3464676	0					
ANR	3465385	Callee	FT_FRAME_RELEASE		3464676	0					
ANR	3465386	Identifier	FT_FRAME_RELEASE		3464676	0					
ANR	3465387	ArgumentList	parser -> postscript		3464676	1					
ANR	3465388	Argument	parser -> postscript		3464676	0					
ANR	3465389	PtrMemberAccess	parser -> postscript		3464676	0					
ANR	3465390	Identifier	parser		3464676	0					
ANR	3465391	Identifier	postscript		3464676	1					
ANR	3465392	IfStatement	if ( ! FT_STREAM_SEEK ( offset ) )		3464676	33					
ANR	3465393	Condition	! FT_STREAM_SEEK ( offset )	248:9:8833:8857	3464676	0	True				
ANR	3465394	UnaryOperationExpression	! FT_STREAM_SEEK ( offset )		3464676	0					
ANR	3465395	UnaryOperator	!		3464676	0					
ANR	3465396	CallExpression	FT_STREAM_SEEK ( offset )		3464676	1					
ANR	3465397	Callee	FT_STREAM_SEEK		3464676	0					
ANR	3465398	Identifier	FT_STREAM_SEEK		3464676	0					
ANR	3465399	ArgumentList	offset		3464676	1					
ANR	3465400	Argument	offset		3464676	0					
ANR	3465401	Identifier	offset		3464676	0					
ANR	3465402	GotoStatement	goto Again ;	249:6:8867:8877	3464676	1	True				
ANR	3465403	Identifier	Again		3464676	0					
ANR	3465404	Label	Exit :	251:2:8882:8886	3464676	34	True				
ANR	3465405	Identifier	Exit		3464676	0					
ANR	3465406	ReturnStatement	return error ;	252:4:8892:8904	3464676	35	True				
ANR	3465407	Identifier	error		3464676	0					
ANR	3465408	Identifier	cid_parser_new		3464676	1					
ANR	3465409	ParameterList	"CID_Parser * parser , FT_Stream stream , FT_Memory memory , PSAux_Service psaux"		3464676	2					
ANR	3465410	Parameter	CID_Parser * parser	57:18:2855:2875	3464676	0	True				
ANR	3465411	ParameterType	CID_Parser *		3464676	0					
ANR	3465412	Identifier	parser		3464676	1					
ANR	3465413	Parameter	FT_Stream stream	58:18:2896:2916	3464676	1	True				
ANR	3465414	ParameterType	FT_Stream		3464676	0					
ANR	3465415	Identifier	stream		3464676	1					
ANR	3465416	Parameter	FT_Memory memory	59:18:2937:2957	3464676	2	True				
ANR	3465417	ParameterType	FT_Memory		3464676	0					
ANR	3465418	Identifier	memory		3464676	1					
ANR	3465419	Parameter	PSAux_Service psaux	60:18:2978:2997	3464676	3	True				
ANR	3465420	ParameterType	PSAux_Service		3464676	0					
ANR	3465421	Identifier	psaux		3464676	1					
ANR	3465422	CFGEntryNode	ENTRY		3464676		True				
ANR	3465423	CFGExitNode	EXIT		3464676		True				
ANR	3465424	InfiniteForNode	true		3464676		True				
ANR	3465425	Symbol	read_offset		3464676						
ANR	3465426	Symbol	psaux		3464676						
ANR	3465427	Symbol	FT_FRAME_ENTER		3464676						
ANR	3465428	Symbol	ft_strtol		3464676						
ANR	3465429	Symbol	parser -> binary_length		3464676						
ANR	3465430	Symbol	STARTDATA_LEN		3464676						
ANR	3465431	Symbol	parser -> root . limit		3464676						
ANR	3465432	Symbol	* cur		3464676						
ANR	3465433	Symbol	parser -> postscript		3464676						
ANR	3465434	Symbol	tmp		3464676						
ANR	3465435	Symbol	limit		3464676						
ANR	3465436	Symbol	stream_len		3464676						
ANR	3465437	Symbol	buffer		3464676						
ANR	3465438	Symbol	FT_STREAM_READ		3464676						
ANR	3465439	Symbol	read_len		3464676						
ANR	3465440	Symbol	parser -> postscript_len		3464676						
ANR	3465441	Symbol	NULL		3464676						
ANR	3465442	Symbol	offset		3464676						
ANR	3465443	Symbol	parser -> root . base		3464676						
ANR	3465444	Symbol	SFNTS		3464676						
ANR	3465445	Symbol	* psaux		3464676						
ANR	3465446	Symbol	parser -> root		3464676						
ANR	3465447	Symbol	FT_FRAME_EXTRACT		3464676						
ANR	3465448	Symbol	SFNTS_LEN		3464676						
ANR	3465449	Symbol	arg2		3464676						
ANR	3465450	Symbol	* parser		3464676						
ANR	3465451	Symbol	parser		3464676						
ANR	3465452	Symbol	arg1		3464676						
ANR	3465453	Symbol	stream -> cursor		3464676						
ANR	3465454	Symbol	* stream		3464676						
ANR	3465455	Symbol	Invalid_File_Format		3464676						
ANR	3465456	Symbol	cur		3464676						
ANR	3465457	Symbol	stream -> size		3464676						
ANR	3465458	Symbol	FT_STREAM_SEEK		3464676						
ANR	3465459	Symbol	memory		3464676						
ANR	3465460	Symbol	& parser -> root		3464676						
ANR	3465461	Symbol	FT_STREAM_POS		3464676						
ANR	3465462	Symbol	* read_len		3464676						
ANR	3465463	Symbol	parser -> root . error		3464676						
ANR	3465464	Symbol	error		3464676						
ANR	3465465	Symbol	parser -> stream		3464676						
ANR	3465466	Symbol	stream		3464676						
ANR	3465467	Symbol	STARTDATA		3464676						
ANR	3465468	Symbol	base_offset		3464676						
ANR	3465469	Symbol	parser -> data_offset		3464676						
ANR	3465470	Symbol	psaux -> ps_parser_funcs		3464676						
ANR	3465471	Symbol	FT_THROW		3464676						
ANR	3465472	Symbol	parser -> num_dict		3464676						
ANR	3465473	Symbol	p		3464676						
ANR	3465474	Symbol	Unknown_File_Format		3464676						
ANR	3465475	Symbol	ft_strncmp		3464676						
ANR	3465476	Symbol	parser -> root . cursor		3464676						
ANR	3465477	Symbol	ps_len		3464676						
ANR	3465478	Symbol	* p		3464676						
ANR	3465479	Symbol	FT_MIN		3464676						
ANR	3465480	Function	cid_parser_done	263:2:9007:9275							
ANR	3465481	FunctionDef	cid_parser_done (CID_Parser * parser)		3465480	0					
ANR	3465482	CompoundStatement		264:2:9048:9275	3465480	0					
ANR	3465483	IfStatement	if ( parser -> postscript )		3465480	0					
ANR	3465484	Condition	parser -> postscript	266:9:9104:9121	3465480	0	True				
ANR	3465485	PtrMemberAccess	parser -> postscript		3465480	0					
ANR	3465486	Identifier	parser		3465480	0					
ANR	3465487	Identifier	postscript		3465480	1					
ANR	3465488	CompoundStatement		5:6:88:122	3465480	1					
ANR	3465489	IdentifierDeclStatement	FT_Stream stream = parser -> stream ;	268:6:9137:9171	3465480	0	True				
ANR	3465490	IdentifierDecl	stream = parser -> stream		3465480	0					
ANR	3465491	IdentifierDeclType	FT_Stream		3465480	0					
ANR	3465492	Identifier	stream		3465480	1					
ANR	3465493	AssignmentExpression	stream = parser -> stream		3465480	2		=			
ANR	3465494	Identifier	stream		3465480	0					
ANR	3465495	PtrMemberAccess	parser -> stream		3465480	1					
ANR	3465496	Identifier	parser		3465480	0					
ANR	3465497	Identifier	stream		3465480	1					
ANR	3465498	ExpressionStatement	FT_FRAME_RELEASE ( parser -> postscript )	271:6:9181:9219	3465480	1	True				
ANR	3465499	CallExpression	FT_FRAME_RELEASE ( parser -> postscript )		3465480	0					
ANR	3465500	Callee	FT_FRAME_RELEASE		3465480	0					
ANR	3465501	Identifier	FT_FRAME_RELEASE		3465480	0					
ANR	3465502	ArgumentList	parser -> postscript		3465480	1					
ANR	3465503	Argument	parser -> postscript		3465480	0					
ANR	3465504	PtrMemberAccess	parser -> postscript		3465480	0					
ANR	3465505	Identifier	parser		3465480	0					
ANR	3465506	Identifier	postscript		3465480	1					
ANR	3465507	ExpressionStatement	parser -> root . funcs . done ( & parser -> root )	273:4:9231:9271	3465480	1	True				
ANR	3465508	CallExpression	parser -> root . funcs . done ( & parser -> root )		3465480	0					
ANR	3465509	Callee	parser -> root . funcs . done		3465480	0					
ANR	3465510	MemberAccess	parser -> root . funcs . done		3465480	0					
ANR	3465511	MemberAccess	parser -> root . funcs		3465480	0					
ANR	3465512	PtrMemberAccess	parser -> root		3465480	0					
ANR	3465513	Identifier	parser		3465480	0					
ANR	3465514	Identifier	root		3465480	1					
ANR	3465515	Identifier	funcs		3465480	1					
ANR	3465516	Identifier	done		3465480	1					
ANR	3465517	ArgumentList	& parser -> root		3465480	1					
ANR	3465518	Argument	& parser -> root		3465480	0					
ANR	3465519	UnaryOperationExpression	& parser -> root		3465480	0					
ANR	3465520	UnaryOperator	&		3465480	0					
ANR	3465521	PtrMemberAccess	parser -> root		3465480	1					
ANR	3465522	Identifier	parser		3465480	0					
ANR	3465523	Identifier	root		3465480	1					
ANR	3465524	Identifier	cid_parser_done		3465480	1					
ANR	3465525	ParameterList	CID_Parser * parser		3465480	2					
ANR	3465526	Parameter	CID_Parser * parser	263:19:9024:9042	3465480	0	True				
ANR	3465527	ParameterType	CID_Parser *		3465480	0					
ANR	3465528	Identifier	parser		3465480	1					
ANR	3465529	CFGEntryNode	ENTRY		3465480		True				
ANR	3465530	CFGExitNode	EXIT		3465480		True				
ANR	3465531	Symbol	parser -> root . funcs		3465480						
ANR	3465532	Symbol	* parser		3465480						
ANR	3465533	Symbol	parser -> stream		3465480						
ANR	3465534	Symbol	parser		3465480						
ANR	3465535	Symbol	stream		3465480						
ANR	3465536	Symbol	& parser -> root		3465480						
ANR	3465537	Symbol	parser -> postscript		3465480						
ANR	3465538	Symbol	parser -> root		3465480						
