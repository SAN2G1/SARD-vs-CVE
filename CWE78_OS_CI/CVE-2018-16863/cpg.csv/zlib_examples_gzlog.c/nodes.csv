command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11226348	File	data/converged/CVE-2018-16863_ghostpdl/zlib_examples_gzlog.c								
ANR	11226349	DeclStmt									
ANR	11226350	Decl							unsigned int	unsigned int	uint
ANR	11226351	DeclStmt									
ANR	11226352	Decl							unsigned long	unsigned long	ulong
ANR	11226353	DeclStmt									
ANR	11226354	Decl							jmp_buf	jmp_buf	gzlog_jump
ANR	11226355	DeclStmt									
ANR	11226356	Decl							int	int	gzlog_bail
ANR	11226357	DeclStmt									
ANR	11226358	Decl							int	int	gzlog_count
ANR	11226359	ClassDef	log	289:0:15604:16477							
ANR	11226360	DeclStmt									
ANR	11226361	Decl							char	char [ 4 ]	id
ANR	11226362	DeclStmt									
ANR	11226363	Decl							int	int	fd
ANR	11226364	DeclStmt									
ANR	11226365	Decl							char	char *	path
ANR	11226366	DeclStmt									
ANR	11226367	Decl							char	char *	end
ANR	11226368	DeclStmt									
ANR	11226369	Decl							off_t	off_t	first
ANR	11226370	DeclStmt									
ANR	11226371	Decl							int	int	back
ANR	11226372	DeclStmt									
ANR	11226373	Decl							uint	uint	stored
ANR	11226374	DeclStmt									
ANR	11226375	Decl							off_t	off_t	last
ANR	11226376	DeclStmt									
ANR	11226377	Decl							ulong	ulong	ccrc
ANR	11226378	DeclStmt									
ANR	11226379	Decl							ulong	ulong	clen
ANR	11226380	DeclStmt									
ANR	11226381	Decl							ulong	ulong	tcrc
ANR	11226382	DeclStmt									
ANR	11226383	Decl							ulong	ulong	tlen
ANR	11226384	DeclStmt									
ANR	11226385	Decl							time_t	time_t	lock
ANR	11226386	DeclStmt									
ANR	11226387	Decl							unsigned char	unsigned char [ ]	log_gzhead
ANR	11226388	DeclStmt									
ANR	11226389	Decl							unsigned char	unsigned char [ ]	log_gzext
ANR	11226390	DeclStmt									
ANR	11226391	Decl							unsigned char	unsigned char [ ]	log_gzbody
ANR	11226392	Function	log_lock	348:0:18573:19117							
ANR	11226393	FunctionDef	log_lock (struct log * log)		11226392	0					
ANR	11226394	CompoundStatement		349:0:18609:19117	11226392	0					
ANR	11226395	IdentifierDeclStatement	int fd ;	350:4:18615:18621	11226392	0	True				
ANR	11226396	IdentifierDecl	fd		11226392	0					
ANR	11226397	IdentifierDeclType	int		11226392	0					
ANR	11226398	Identifier	fd		11226392	1					
ANR	11226399	IdentifierDeclStatement	struct stat st ;	351:4:18627:18641	11226392	1	True				
ANR	11226400	IdentifierDecl	st		11226392	0					
ANR	11226401	IdentifierDeclType	struct stat		11226392	0					
ANR	11226402	Identifier	st		11226392	1					
ANR	11226403	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	353:4:18648:18673	11226392	2	True				
ANR	11226404	CallExpression	"strcpy ( log -> end , "".lock"" )"		11226392	0					
ANR	11226405	Callee	strcpy		11226392	0					
ANR	11226406	Identifier	strcpy		11226392	0					
ANR	11226407	ArgumentList	log -> end		11226392	1					
ANR	11226408	Argument	log -> end		11226392	0					
ANR	11226409	PtrMemberAccess	log -> end		11226392	0					
ANR	11226410	Identifier	log		11226392	0					
ANR	11226411	Identifier	end		11226392	1					
ANR	11226412	Argument	""".lock"""		11226392	1					
ANR	11226413	PrimaryExpression	""".lock"""		11226392	0					
ANR	11226414	WhileStatement	"while ( ( fd = open ( log -> path , O_CREAT | O_EXCL , 0644 ) ) < 0 )"		11226392	3					
ANR	11226415	Condition	"( fd = open ( log -> path , O_CREAT | O_EXCL , 0644 ) ) < 0"	354:11:18686:18735	11226392	0	True				
ANR	11226416	RelationalExpression	"( fd = open ( log -> path , O_CREAT | O_EXCL , 0644 ) ) < 0"		11226392	0		<			
ANR	11226417	AssignmentExpression	"fd = open ( log -> path , O_CREAT | O_EXCL , 0644 )"		11226392	0		=			
ANR	11226418	Identifier	fd		11226392	0					
ANR	11226419	CallExpression	"open ( log -> path , O_CREAT | O_EXCL , 0644 )"		11226392	1					
ANR	11226420	Callee	open		11226392	0					
ANR	11226421	Identifier	open		11226392	0					
ANR	11226422	ArgumentList	log -> path		11226392	1					
ANR	11226423	Argument	log -> path		11226392	0					
ANR	11226424	PtrMemberAccess	log -> path		11226392	0					
ANR	11226425	Identifier	log		11226392	0					
ANR	11226426	Identifier	path		11226392	1					
ANR	11226427	Argument	O_CREAT | O_EXCL		11226392	1					
ANR	11226428	InclusiveOrExpression	O_CREAT | O_EXCL		11226392	0		|			
ANR	11226429	Identifier	O_CREAT		11226392	0					
ANR	11226430	Identifier	O_EXCL		11226392	1					
ANR	11226431	Argument	0644		11226392	2					
ANR	11226432	PrimaryExpression	0644		11226392	0					
ANR	11226433	PrimaryExpression	0		11226392	1					
ANR	11226434	CompoundStatement		6:63:128:128	11226392	1					
ANR	11226435	IfStatement	if ( errno != EEXIST )		11226392	0					
ANR	11226436	Condition	errno != EEXIST	355:12:18752:18766	11226392	0	True				
ANR	11226437	EqualityExpression	errno != EEXIST		11226392	0		!=			
ANR	11226438	Identifier	errno		11226392	0					
ANR	11226439	Identifier	EEXIST		11226392	1					
ANR	11226440	ReturnStatement	return - 1 ;	356:12:18781:18790	11226392	1	True				
ANR	11226441	UnaryOperationExpression	- 1		11226392	0					
ANR	11226442	UnaryOperator	-		11226392	0					
ANR	11226443	PrimaryExpression	1		11226392	1					
ANR	11226444	IfStatement	"if ( stat ( log -> path , & st ) == 0 && time ( NULL ) - st . st_mtime > PATIENCE )"		11226392	1					
ANR	11226445	Condition	"stat ( log -> path , & st ) == 0 && time ( NULL ) - st . st_mtime > PATIENCE"	357:12:18804:18867	11226392	0	True				
ANR	11226446	AndExpression	"stat ( log -> path , & st ) == 0 && time ( NULL ) - st . st_mtime > PATIENCE"		11226392	0		&&			
ANR	11226447	EqualityExpression	"stat ( log -> path , & st ) == 0"		11226392	0		==			
ANR	11226448	CallExpression	"stat ( log -> path , & st )"		11226392	0					
ANR	11226449	Callee	stat		11226392	0					
ANR	11226450	Identifier	stat		11226392	0					
ANR	11226451	ArgumentList	log -> path		11226392	1					
ANR	11226452	Argument	log -> path		11226392	0					
ANR	11226453	PtrMemberAccess	log -> path		11226392	0					
ANR	11226454	Identifier	log		11226392	0					
ANR	11226455	Identifier	path		11226392	1					
ANR	11226456	Argument	& st		11226392	1					
ANR	11226457	UnaryOperationExpression	& st		11226392	0					
ANR	11226458	UnaryOperator	&		11226392	0					
ANR	11226459	Identifier	st		11226392	1					
ANR	11226460	PrimaryExpression	0		11226392	1					
ANR	11226461	RelationalExpression	time ( NULL ) - st . st_mtime > PATIENCE		11226392	1		>			
ANR	11226462	AdditiveExpression	time ( NULL ) - st . st_mtime		11226392	0		-			
ANR	11226463	CallExpression	time ( NULL )		11226392	0					
ANR	11226464	Callee	time		11226392	0					
ANR	11226465	Identifier	time		11226392	0					
ANR	11226466	ArgumentList	NULL		11226392	1					
ANR	11226467	Argument	NULL		11226392	0					
ANR	11226468	Identifier	NULL		11226392	0					
ANR	11226469	MemberAccess	st . st_mtime		11226392	1					
ANR	11226470	Identifier	st		11226392	0					
ANR	11226471	Identifier	st_mtime		11226392	1					
ANR	11226472	Identifier	PATIENCE		11226392	1					
ANR	11226473	CompoundStatement		9:78:260:260	11226392	1					
ANR	11226474	ExpressionStatement	unlink ( log -> path )	358:12:18884:18901	11226392	0	True				
ANR	11226475	CallExpression	unlink ( log -> path )		11226392	0					
ANR	11226476	Callee	unlink		11226392	0					
ANR	11226477	Identifier	unlink		11226392	0					
ANR	11226478	ArgumentList	log -> path		11226392	1					
ANR	11226479	Argument	log -> path		11226392	0					
ANR	11226480	PtrMemberAccess	log -> path		11226392	0					
ANR	11226481	Identifier	log		11226392	0					
ANR	11226482	Identifier	path		11226392	1					
ANR	11226483	ContinueStatement	continue ;	359:12:18915:18923	11226392	1	True				
ANR	11226484	ExpressionStatement	sleep ( 2 )	361:8:18943:18951	11226392	2	True				
ANR	11226485	CallExpression	sleep ( 2 )		11226392	0					
ANR	11226486	Callee	sleep		11226392	0					
ANR	11226487	Identifier	sleep		11226392	0					
ANR	11226488	ArgumentList	2		11226392	1					
ANR	11226489	Argument	2		11226392	0					
ANR	11226490	PrimaryExpression	2		11226392	0					
ANR	11226491	ExpressionStatement	close ( fd )	363:4:19024:19033	11226392	4	True				
ANR	11226492	CallExpression	close ( fd )		11226392	0					
ANR	11226493	Callee	close		11226392	0					
ANR	11226494	Identifier	close		11226392	0					
ANR	11226495	ArgumentList	fd		11226392	1					
ANR	11226496	Argument	fd		11226392	0					
ANR	11226497	Identifier	fd		11226392	0					
ANR	11226498	IfStatement	"if ( stat ( log -> path , & st ) == 0 )"		11226392	5					
ANR	11226499	Condition	"stat ( log -> path , & st ) == 0"	364:8:19043:19067	11226392	0	True				
ANR	11226500	EqualityExpression	"stat ( log -> path , & st ) == 0"		11226392	0		==			
ANR	11226501	CallExpression	"stat ( log -> path , & st )"		11226392	0					
ANR	11226502	Callee	stat		11226392	0					
ANR	11226503	Identifier	stat		11226392	0					
ANR	11226504	ArgumentList	log -> path		11226392	1					
ANR	11226505	Argument	log -> path		11226392	0					
ANR	11226506	PtrMemberAccess	log -> path		11226392	0					
ANR	11226507	Identifier	log		11226392	0					
ANR	11226508	Identifier	path		11226392	1					
ANR	11226509	Argument	& st		11226392	1					
ANR	11226510	UnaryOperationExpression	& st		11226392	0					
ANR	11226511	UnaryOperator	&		11226392	0					
ANR	11226512	Identifier	st		11226392	1					
ANR	11226513	PrimaryExpression	0		11226392	1					
ANR	11226514	ExpressionStatement	log -> lock = st . st_mtime	365:8:19078:19101	11226392	1	True				
ANR	11226515	AssignmentExpression	log -> lock = st . st_mtime		11226392	0		=			
ANR	11226516	PtrMemberAccess	log -> lock		11226392	0					
ANR	11226517	Identifier	log		11226392	0					
ANR	11226518	Identifier	lock		11226392	1					
ANR	11226519	MemberAccess	st . st_mtime		11226392	1					
ANR	11226520	Identifier	st		11226392	0					
ANR	11226521	Identifier	st_mtime		11226392	1					
ANR	11226522	ReturnStatement	return 0 ;	366:4:19107:19115	11226392	6	True				
ANR	11226523	PrimaryExpression	0		11226392	0					
ANR	11226524	ReturnType	local int		11226392	1					
ANR	11226525	Identifier	log_lock		11226392	2					
ANR	11226526	ParameterList	struct log * log		11226392	3					
ANR	11226527	Parameter	struct log * log	348:19:18592:18606	11226392	0	True				
ANR	11226528	ParameterType	struct log *		11226392	0					
ANR	11226529	Identifier	log		11226392	1					
ANR	11226530	CFGEntryNode	ENTRY		11226392		True				
ANR	11226531	CFGExitNode	EXIT		11226392		True				
ANR	11226532	Symbol	st		11226392						
ANR	11226533	Symbol	EEXIST		11226392						
ANR	11226534	Symbol	errno		11226392						
ANR	11226535	Symbol	stat		11226392						
ANR	11226536	Symbol	log -> lock		11226392						
ANR	11226537	Symbol	NULL		11226392						
ANR	11226538	Symbol	log -> end		11226392						
ANR	11226539	Symbol	log		11226392						
ANR	11226540	Symbol	log -> path		11226392						
ANR	11226541	Symbol	O_CREAT		11226392						
ANR	11226542	Symbol	O_EXCL		11226392						
ANR	11226543	Symbol	& st		11226392						
ANR	11226544	Symbol	* log		11226392						
ANR	11226545	Symbol	st . st_mtime		11226392						
ANR	11226546	Symbol	time		11226392						
ANR	11226547	Symbol	fd		11226392						
ANR	11226548	Symbol	open		11226392						
ANR	11226549	Symbol	PATIENCE		11226392						
ANR	11226550	Function	log_touch	372:0:19314:19503							
ANR	11226551	FunctionDef	log_touch (struct log * log)		11226550	0					
ANR	11226552	CompoundStatement		373:0:19352:19503	11226550	0					
ANR	11226553	IdentifierDeclStatement	struct stat st ;	374:4:19358:19372	11226550	0	True				
ANR	11226554	IdentifierDecl	st		11226550	0					
ANR	11226555	IdentifierDeclType	struct stat		11226550	0					
ANR	11226556	Identifier	st		11226550	1					
ANR	11226557	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	376:4:19379:19404	11226550	1	True				
ANR	11226558	CallExpression	"strcpy ( log -> end , "".lock"" )"		11226550	0					
ANR	11226559	Callee	strcpy		11226550	0					
ANR	11226560	Identifier	strcpy		11226550	0					
ANR	11226561	ArgumentList	log -> end		11226550	1					
ANR	11226562	Argument	log -> end		11226550	0					
ANR	11226563	PtrMemberAccess	log -> end		11226550	0					
ANR	11226564	Identifier	log		11226550	0					
ANR	11226565	Identifier	end		11226550	1					
ANR	11226566	Argument	""".lock"""		11226550	1					
ANR	11226567	PrimaryExpression	""".lock"""		11226550	0					
ANR	11226568	ExpressionStatement	"utimes ( log -> path , NULL )"	377:4:19410:19433	11226550	2	True				
ANR	11226569	CallExpression	"utimes ( log -> path , NULL )"		11226550	0					
ANR	11226570	Callee	utimes		11226550	0					
ANR	11226571	Identifier	utimes		11226550	0					
ANR	11226572	ArgumentList	log -> path		11226550	1					
ANR	11226573	Argument	log -> path		11226550	0					
ANR	11226574	PtrMemberAccess	log -> path		11226550	0					
ANR	11226575	Identifier	log		11226550	0					
ANR	11226576	Identifier	path		11226550	1					
ANR	11226577	Argument	NULL		11226550	1					
ANR	11226578	Identifier	NULL		11226550	0					
ANR	11226579	IfStatement	"if ( stat ( log -> path , & st ) == 0 )"		11226550	3					
ANR	11226580	Condition	"stat ( log -> path , & st ) == 0"	378:8:19443:19467	11226550	0	True				
ANR	11226581	EqualityExpression	"stat ( log -> path , & st ) == 0"		11226550	0		==			
ANR	11226582	CallExpression	"stat ( log -> path , & st )"		11226550	0					
ANR	11226583	Callee	stat		11226550	0					
ANR	11226584	Identifier	stat		11226550	0					
ANR	11226585	ArgumentList	log -> path		11226550	1					
ANR	11226586	Argument	log -> path		11226550	0					
ANR	11226587	PtrMemberAccess	log -> path		11226550	0					
ANR	11226588	Identifier	log		11226550	0					
ANR	11226589	Identifier	path		11226550	1					
ANR	11226590	Argument	& st		11226550	1					
ANR	11226591	UnaryOperationExpression	& st		11226550	0					
ANR	11226592	UnaryOperator	&		11226550	0					
ANR	11226593	Identifier	st		11226550	1					
ANR	11226594	PrimaryExpression	0		11226550	1					
ANR	11226595	ExpressionStatement	log -> lock = st . st_mtime	379:8:19478:19501	11226550	1	True				
ANR	11226596	AssignmentExpression	log -> lock = st . st_mtime		11226550	0		=			
ANR	11226597	PtrMemberAccess	log -> lock		11226550	0					
ANR	11226598	Identifier	log		11226550	0					
ANR	11226599	Identifier	lock		11226550	1					
ANR	11226600	MemberAccess	st . st_mtime		11226550	1					
ANR	11226601	Identifier	st		11226550	0					
ANR	11226602	Identifier	st_mtime		11226550	1					
ANR	11226603	ReturnType	local void		11226550	1					
ANR	11226604	Identifier	log_touch		11226550	2					
ANR	11226605	ParameterList	struct log * log		11226550	3					
ANR	11226606	Parameter	struct log * log	372:21:19335:19349	11226550	0	True				
ANR	11226607	ParameterType	struct log *		11226550	0					
ANR	11226608	Identifier	log		11226550	1					
ANR	11226609	CFGEntryNode	ENTRY		11226550		True				
ANR	11226610	CFGExitNode	EXIT		11226550		True				
ANR	11226611	Symbol	st		11226550						
ANR	11226612	Symbol	stat		11226550						
ANR	11226613	Symbol	log -> lock		11226550						
ANR	11226614	Symbol	NULL		11226550						
ANR	11226615	Symbol	st . st_mtime		11226550						
ANR	11226616	Symbol	log -> end		11226550						
ANR	11226617	Symbol	log		11226550						
ANR	11226618	Symbol	log -> path		11226550						
ANR	11226619	Symbol	& st		11226550						
ANR	11226620	Symbol	* log		11226550						
ANR	11226621	Function	log_check	384:0:19651:19852							
ANR	11226622	FunctionDef	log_check (struct log * log)		11226621	0					
ANR	11226623	CompoundStatement		385:0:19688:19852	11226621	0					
ANR	11226624	IdentifierDeclStatement	struct stat st ;	386:4:19694:19708	11226621	0	True				
ANR	11226625	IdentifierDecl	st		11226621	0					
ANR	11226626	IdentifierDeclType	struct stat		11226621	0					
ANR	11226627	Identifier	st		11226621	1					
ANR	11226628	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	388:4:19715:19740	11226621	1	True				
ANR	11226629	CallExpression	"strcpy ( log -> end , "".lock"" )"		11226621	0					
ANR	11226630	Callee	strcpy		11226621	0					
ANR	11226631	Identifier	strcpy		11226621	0					
ANR	11226632	ArgumentList	log -> end		11226621	1					
ANR	11226633	Argument	log -> end		11226621	0					
ANR	11226634	PtrMemberAccess	log -> end		11226621	0					
ANR	11226635	Identifier	log		11226621	0					
ANR	11226636	Identifier	end		11226621	1					
ANR	11226637	Argument	""".lock"""		11226621	1					
ANR	11226638	PrimaryExpression	""".lock"""		11226621	0					
ANR	11226639	IfStatement	"if ( stat ( log -> path , & st ) || st . st_mtime != log -> lock )"		11226621	2					
ANR	11226640	Condition	"stat ( log -> path , & st ) || st . st_mtime != log -> lock"	389:8:19750:19797	11226621	0	True				
ANR	11226641	OrExpression	"stat ( log -> path , & st ) || st . st_mtime != log -> lock"		11226621	0		||			
ANR	11226642	CallExpression	"stat ( log -> path , & st )"		11226621	0					
ANR	11226643	Callee	stat		11226621	0					
ANR	11226644	Identifier	stat		11226621	0					
ANR	11226645	ArgumentList	log -> path		11226621	1					
ANR	11226646	Argument	log -> path		11226621	0					
ANR	11226647	PtrMemberAccess	log -> path		11226621	0					
ANR	11226648	Identifier	log		11226621	0					
ANR	11226649	Identifier	path		11226621	1					
ANR	11226650	Argument	& st		11226621	1					
ANR	11226651	UnaryOperationExpression	& st		11226621	0					
ANR	11226652	UnaryOperator	&		11226621	0					
ANR	11226653	Identifier	st		11226621	1					
ANR	11226654	EqualityExpression	st . st_mtime != log -> lock		11226621	1		!=			
ANR	11226655	MemberAccess	st . st_mtime		11226621	0					
ANR	11226656	Identifier	st		11226621	0					
ANR	11226657	Identifier	st_mtime		11226621	1					
ANR	11226658	PtrMemberAccess	log -> lock		11226621	1					
ANR	11226659	Identifier	log		11226621	0					
ANR	11226660	Identifier	lock		11226621	1					
ANR	11226661	ReturnStatement	return 1 ;	390:8:19808:19816	11226621	1	True				
ANR	11226662	PrimaryExpression	1		11226621	0					
ANR	11226663	ExpressionStatement	log_touch ( log )	391:4:19822:19836	11226621	3	True				
ANR	11226664	CallExpression	log_touch ( log )		11226621	0					
ANR	11226665	Callee	log_touch		11226621	0					
ANR	11226666	Identifier	log_touch		11226621	0					
ANR	11226667	ArgumentList	log		11226621	1					
ANR	11226668	Argument	log		11226621	0					
ANR	11226669	Identifier	log		11226621	0					
ANR	11226670	ReturnStatement	return 0 ;	392:4:19842:19850	11226621	4	True				
ANR	11226671	PrimaryExpression	0		11226621	0					
ANR	11226672	ReturnType	local int		11226621	1					
ANR	11226673	Identifier	log_check		11226621	2					
ANR	11226674	ParameterList	struct log * log		11226621	3					
ANR	11226675	Parameter	struct log * log	384:20:19671:19685	11226621	0	True				
ANR	11226676	ParameterType	struct log *		11226621	0					
ANR	11226677	Identifier	log		11226621	1					
ANR	11226678	CFGEntryNode	ENTRY		11226621		True				
ANR	11226679	CFGExitNode	EXIT		11226621		True				
ANR	11226680	Symbol	st		11226621						
ANR	11226681	Symbol	stat		11226621						
ANR	11226682	Symbol	log -> lock		11226621						
ANR	11226683	Symbol	st . st_mtime		11226621						
ANR	11226684	Symbol	log -> end		11226621						
ANR	11226685	Symbol	log		11226621						
ANR	11226686	Symbol	log -> path		11226621						
ANR	11226687	Symbol	& st		11226621						
ANR	11226688	Symbol	* log		11226621						
ANR	11226689	Function	log_unlock	396:0:19919:20073							
ANR	11226690	FunctionDef	log_unlock (struct log * log)		11226689	0					
ANR	11226691	CompoundStatement		397:0:19958:20073	11226689	0					
ANR	11226692	IfStatement	if ( log_check ( log ) )		11226689	0					
ANR	11226693	Condition	log_check ( log )	398:8:19968:19981	11226689	0	True				
ANR	11226694	CallExpression	log_check ( log )		11226689	0					
ANR	11226695	Callee	log_check		11226689	0					
ANR	11226696	Identifier	log_check		11226689	0					
ANR	11226697	ArgumentList	log		11226689	1					
ANR	11226698	Argument	log		11226689	0					
ANR	11226699	Identifier	log		11226689	0					
ANR	11226700	ReturnStatement	return ;	399:8:19992:19998	11226689	1	True				
ANR	11226701	ExpressionStatement	"strcpy ( log -> end , "".lock"" )"	400:4:20004:20029	11226689	1	True				
ANR	11226702	CallExpression	"strcpy ( log -> end , "".lock"" )"		11226689	0					
ANR	11226703	Callee	strcpy		11226689	0					
ANR	11226704	Identifier	strcpy		11226689	0					
ANR	11226705	ArgumentList	log -> end		11226689	1					
ANR	11226706	Argument	log -> end		11226689	0					
ANR	11226707	PtrMemberAccess	log -> end		11226689	0					
ANR	11226708	Identifier	log		11226689	0					
ANR	11226709	Identifier	end		11226689	1					
ANR	11226710	Argument	""".lock"""		11226689	1					
ANR	11226711	PrimaryExpression	""".lock"""		11226689	0					
ANR	11226712	ExpressionStatement	unlink ( log -> path )	401:4:20035:20052	11226689	2	True				
ANR	11226713	CallExpression	unlink ( log -> path )		11226689	0					
ANR	11226714	Callee	unlink		11226689	0					
ANR	11226715	Identifier	unlink		11226689	0					
ANR	11226716	ArgumentList	log -> path		11226689	1					
ANR	11226717	Argument	log -> path		11226689	0					
ANR	11226718	PtrMemberAccess	log -> path		11226689	0					
ANR	11226719	Identifier	log		11226689	0					
ANR	11226720	Identifier	path		11226689	1					
ANR	11226721	ExpressionStatement	log -> lock = 0	402:4:20058:20071	11226689	3	True				
ANR	11226722	AssignmentExpression	log -> lock = 0		11226689	0		=			
ANR	11226723	PtrMemberAccess	log -> lock		11226689	0					
ANR	11226724	Identifier	log		11226689	0					
ANR	11226725	Identifier	lock		11226689	1					
ANR	11226726	PrimaryExpression	0		11226689	1					
ANR	11226727	ReturnType	local void		11226689	1					
ANR	11226728	Identifier	log_unlock		11226689	2					
ANR	11226729	ParameterList	struct log * log		11226689	3					
ANR	11226730	Parameter	struct log * log	396:22:19941:19955	11226689	0	True				
ANR	11226731	ParameterType	struct log *		11226689	0					
ANR	11226732	Identifier	log		11226689	1					
ANR	11226733	CFGEntryNode	ENTRY		11226689		True				
ANR	11226734	CFGExitNode	EXIT		11226689		True				
ANR	11226735	Symbol	log -> lock		11226689						
ANR	11226736	Symbol	log -> end		11226689						
ANR	11226737	Symbol	log		11226689						
ANR	11226738	Symbol	log -> path		11226689						
ANR	11226739	Symbol	log_check		11226689						
ANR	11226740	Symbol	* log		11226689						
ANR	11226741	Function	log_head	410:0:20423:21050							
ANR	11226742	FunctionDef	log_head (struct log * log)		11226741	0					
ANR	11226743	CompoundStatement		411:0:20459:21050	11226741	0					
ANR	11226744	IdentifierDeclStatement	int op ;	412:4:20465:20471	11226741	0	True				
ANR	11226745	IdentifierDecl	op		11226741	0					
ANR	11226746	IdentifierDeclType	int		11226741	0					
ANR	11226747	Identifier	op		11226741	1					
ANR	11226748	IdentifierDeclStatement	unsigned char buf [ HEAD + EXTRA ] ;	413:4:20477:20508	11226741	1	True				
ANR	11226749	IdentifierDecl	buf [ HEAD + EXTRA ]		11226741	0					
ANR	11226750	IdentifierDeclType	unsigned char [ HEAD + EXTRA ]		11226741	0					
ANR	11226751	Identifier	buf		11226741	1					
ANR	11226752	AdditiveExpression	HEAD + EXTRA		11226741	2		+			
ANR	11226753	Identifier	HEAD		11226741	0					
ANR	11226754	Identifier	EXTRA		11226741	1					
ANR	11226755	IfStatement	"if ( lseek ( log -> fd , 0 , SEEK_SET ) < 0 || read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD ) )"		11226741	2					
ANR	11226756	Condition	"lseek ( log -> fd , 0 , SEEK_SET ) < 0 || read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD )"	415:8:20519:20650	11226741	0	True				
ANR	11226757	OrExpression	"lseek ( log -> fd , 0 , SEEK_SET ) < 0 || read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD )"		11226741	0		||			
ANR	11226758	RelationalExpression	"lseek ( log -> fd , 0 , SEEK_SET ) < 0"		11226741	0		<			
ANR	11226759	CallExpression	"lseek ( log -> fd , 0 , SEEK_SET )"		11226741	0					
ANR	11226760	Callee	lseek		11226741	0					
ANR	11226761	Identifier	lseek		11226741	0					
ANR	11226762	ArgumentList	log -> fd		11226741	1					
ANR	11226763	Argument	log -> fd		11226741	0					
ANR	11226764	PtrMemberAccess	log -> fd		11226741	0					
ANR	11226765	Identifier	log		11226741	0					
ANR	11226766	Identifier	fd		11226741	1					
ANR	11226767	Argument	0		11226741	1					
ANR	11226768	PrimaryExpression	0		11226741	0					
ANR	11226769	Argument	SEEK_SET		11226741	2					
ANR	11226770	Identifier	SEEK_SET		11226741	0					
ANR	11226771	PrimaryExpression	0		11226741	1					
ANR	11226772	OrExpression	"read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA || memcmp ( buf , log_gzhead , HEAD )"		11226741	1		||			
ANR	11226773	EqualityExpression	"read ( log -> fd , buf , HEAD + EXTRA ) != HEAD + EXTRA"		11226741	0		!=			
ANR	11226774	CallExpression	"read ( log -> fd , buf , HEAD + EXTRA )"		11226741	0					
ANR	11226775	Callee	read		11226741	0					
ANR	11226776	Identifier	read		11226741	0					
ANR	11226777	ArgumentList	log -> fd		11226741	1					
ANR	11226778	Argument	log -> fd		11226741	0					
ANR	11226779	PtrMemberAccess	log -> fd		11226741	0					
ANR	11226780	Identifier	log		11226741	0					
ANR	11226781	Identifier	fd		11226741	1					
ANR	11226782	Argument	buf		11226741	1					
ANR	11226783	Identifier	buf		11226741	0					
ANR	11226784	Argument	HEAD + EXTRA		11226741	2					
ANR	11226785	AdditiveExpression	HEAD + EXTRA		11226741	0		+			
ANR	11226786	Identifier	HEAD		11226741	0					
ANR	11226787	Identifier	EXTRA		11226741	1					
ANR	11226788	AdditiveExpression	HEAD + EXTRA		11226741	1		+			
ANR	11226789	Identifier	HEAD		11226741	0					
ANR	11226790	Identifier	EXTRA		11226741	1					
ANR	11226791	CallExpression	"memcmp ( buf , log_gzhead , HEAD )"		11226741	1					
ANR	11226792	Callee	memcmp		11226741	0					
ANR	11226793	Identifier	memcmp		11226741	0					
ANR	11226794	ArgumentList	buf		11226741	1					
ANR	11226795	Argument	buf		11226741	0					
ANR	11226796	Identifier	buf		11226741	0					
ANR	11226797	Argument	log_gzhead		11226741	1					
ANR	11226798	Identifier	log_gzhead		11226741	0					
ANR	11226799	Argument	HEAD		11226741	2					
ANR	11226800	Identifier	HEAD		11226741	0					
ANR	11226801	CompoundStatement		7:39:193:193	11226741	1					
ANR	11226802	ReturnStatement	return - 1 ;	418:8:20663:20672	11226741	0	True				
ANR	11226803	UnaryOperationExpression	- 1		11226741	0					
ANR	11226804	UnaryOperator	-		11226741	0					
ANR	11226805	PrimaryExpression	1		11226741	1					
ANR	11226806	ExpressionStatement	log -> first = PULL8 ( buf + HEAD )	420:4:20684:20714	11226741	3	True				
ANR	11226807	AssignmentExpression	log -> first = PULL8 ( buf + HEAD )		11226741	0		=			
ANR	11226808	PtrMemberAccess	log -> first		11226741	0					
ANR	11226809	Identifier	log		11226741	0					
ANR	11226810	Identifier	first		11226741	1					
ANR	11226811	CallExpression	PULL8 ( buf + HEAD )		11226741	1					
ANR	11226812	Callee	PULL8		11226741	0					
ANR	11226813	Identifier	PULL8		11226741	0					
ANR	11226814	ArgumentList	buf + HEAD		11226741	1					
ANR	11226815	Argument	buf + HEAD		11226741	0					
ANR	11226816	AdditiveExpression	buf + HEAD		11226741	0		+			
ANR	11226817	Identifier	buf		11226741	0					
ANR	11226818	Identifier	HEAD		11226741	1					
ANR	11226819	ExpressionStatement	log -> last = PULL8 ( buf + HEAD + 8 )	421:4:20720:20753	11226741	4	True				
ANR	11226820	AssignmentExpression	log -> last = PULL8 ( buf + HEAD + 8 )		11226741	0		=			
ANR	11226821	PtrMemberAccess	log -> last		11226741	0					
ANR	11226822	Identifier	log		11226741	0					
ANR	11226823	Identifier	last		11226741	1					
ANR	11226824	CallExpression	PULL8 ( buf + HEAD + 8 )		11226741	1					
ANR	11226825	Callee	PULL8		11226741	0					
ANR	11226826	Identifier	PULL8		11226741	0					
ANR	11226827	ArgumentList	buf + HEAD + 8		11226741	1					
ANR	11226828	Argument	buf + HEAD + 8		11226741	0					
ANR	11226829	AdditiveExpression	buf + HEAD + 8		11226741	0		+			
ANR	11226830	Identifier	buf		11226741	0					
ANR	11226831	AdditiveExpression	HEAD + 8		11226741	1		+			
ANR	11226832	Identifier	HEAD		11226741	0					
ANR	11226833	PrimaryExpression	8		11226741	1					
ANR	11226834	ExpressionStatement	log -> ccrc = PULL4 ( buf + HEAD + 16 )	422:4:20759:20793	11226741	5	True				
ANR	11226835	AssignmentExpression	log -> ccrc = PULL4 ( buf + HEAD + 16 )		11226741	0		=			
ANR	11226836	PtrMemberAccess	log -> ccrc		11226741	0					
ANR	11226837	Identifier	log		11226741	0					
ANR	11226838	Identifier	ccrc		11226741	1					
ANR	11226839	CallExpression	PULL4 ( buf + HEAD + 16 )		11226741	1					
ANR	11226840	Callee	PULL4		11226741	0					
ANR	11226841	Identifier	PULL4		11226741	0					
ANR	11226842	ArgumentList	buf + HEAD + 16		11226741	1					
ANR	11226843	Argument	buf + HEAD + 16		11226741	0					
ANR	11226844	AdditiveExpression	buf + HEAD + 16		11226741	0		+			
ANR	11226845	Identifier	buf		11226741	0					
ANR	11226846	AdditiveExpression	HEAD + 16		11226741	1		+			
ANR	11226847	Identifier	HEAD		11226741	0					
ANR	11226848	PrimaryExpression	16		11226741	1					
ANR	11226849	ExpressionStatement	log -> clen = PULL4 ( buf + HEAD + 20 )	423:4:20799:20833	11226741	6	True				
ANR	11226850	AssignmentExpression	log -> clen = PULL4 ( buf + HEAD + 20 )		11226741	0		=			
ANR	11226851	PtrMemberAccess	log -> clen		11226741	0					
ANR	11226852	Identifier	log		11226741	0					
ANR	11226853	Identifier	clen		11226741	1					
ANR	11226854	CallExpression	PULL4 ( buf + HEAD + 20 )		11226741	1					
ANR	11226855	Callee	PULL4		11226741	0					
ANR	11226856	Identifier	PULL4		11226741	0					
ANR	11226857	ArgumentList	buf + HEAD + 20		11226741	1					
ANR	11226858	Argument	buf + HEAD + 20		11226741	0					
ANR	11226859	AdditiveExpression	buf + HEAD + 20		11226741	0		+			
ANR	11226860	Identifier	buf		11226741	0					
ANR	11226861	AdditiveExpression	HEAD + 20		11226741	1		+			
ANR	11226862	Identifier	HEAD		11226741	0					
ANR	11226863	PrimaryExpression	20		11226741	1					
ANR	11226864	ExpressionStatement	log -> tcrc = PULL4 ( buf + HEAD + 24 )	424:4:20839:20873	11226741	7	True				
ANR	11226865	AssignmentExpression	log -> tcrc = PULL4 ( buf + HEAD + 24 )		11226741	0		=			
ANR	11226866	PtrMemberAccess	log -> tcrc		11226741	0					
ANR	11226867	Identifier	log		11226741	0					
ANR	11226868	Identifier	tcrc		11226741	1					
ANR	11226869	CallExpression	PULL4 ( buf + HEAD + 24 )		11226741	1					
ANR	11226870	Callee	PULL4		11226741	0					
ANR	11226871	Identifier	PULL4		11226741	0					
ANR	11226872	ArgumentList	buf + HEAD + 24		11226741	1					
ANR	11226873	Argument	buf + HEAD + 24		11226741	0					
ANR	11226874	AdditiveExpression	buf + HEAD + 24		11226741	0		+			
ANR	11226875	Identifier	buf		11226741	0					
ANR	11226876	AdditiveExpression	HEAD + 24		11226741	1		+			
ANR	11226877	Identifier	HEAD		11226741	0					
ANR	11226878	PrimaryExpression	24		11226741	1					
ANR	11226879	ExpressionStatement	log -> tlen = PULL4 ( buf + HEAD + 28 )	425:4:20879:20913	11226741	8	True				
ANR	11226880	AssignmentExpression	log -> tlen = PULL4 ( buf + HEAD + 28 )		11226741	0		=			
ANR	11226881	PtrMemberAccess	log -> tlen		11226741	0					
ANR	11226882	Identifier	log		11226741	0					
ANR	11226883	Identifier	tlen		11226741	1					
ANR	11226884	CallExpression	PULL4 ( buf + HEAD + 28 )		11226741	1					
ANR	11226885	Callee	PULL4		11226741	0					
ANR	11226886	Identifier	PULL4		11226741	0					
ANR	11226887	ArgumentList	buf + HEAD + 28		11226741	1					
ANR	11226888	Argument	buf + HEAD + 28		11226741	0					
ANR	11226889	AdditiveExpression	buf + HEAD + 28		11226741	0		+			
ANR	11226890	Identifier	buf		11226741	0					
ANR	11226891	AdditiveExpression	HEAD + 28		11226741	1		+			
ANR	11226892	Identifier	HEAD		11226741	0					
ANR	11226893	PrimaryExpression	28		11226741	1					
ANR	11226894	ExpressionStatement	log -> stored = PULL2 ( buf + HEAD + 32 )	426:4:20919:20955	11226741	9	True				
ANR	11226895	AssignmentExpression	log -> stored = PULL2 ( buf + HEAD + 32 )		11226741	0		=			
ANR	11226896	PtrMemberAccess	log -> stored		11226741	0					
ANR	11226897	Identifier	log		11226741	0					
ANR	11226898	Identifier	stored		11226741	1					
ANR	11226899	CallExpression	PULL2 ( buf + HEAD + 32 )		11226741	1					
ANR	11226900	Callee	PULL2		11226741	0					
ANR	11226901	Identifier	PULL2		11226741	0					
ANR	11226902	ArgumentList	buf + HEAD + 32		11226741	1					
ANR	11226903	Argument	buf + HEAD + 32		11226741	0					
ANR	11226904	AdditiveExpression	buf + HEAD + 32		11226741	0		+			
ANR	11226905	Identifier	buf		11226741	0					
ANR	11226906	AdditiveExpression	HEAD + 32		11226741	1		+			
ANR	11226907	Identifier	HEAD		11226741	0					
ANR	11226908	PrimaryExpression	32		11226741	1					
ANR	11226909	ExpressionStatement	log -> back = 3 + ( buf [ HEAD + 34 ] & 7 )	427:4:20961:20997	11226741	10	True				
ANR	11226910	AssignmentExpression	log -> back = 3 + ( buf [ HEAD + 34 ] & 7 )		11226741	0		=			
ANR	11226911	PtrMemberAccess	log -> back		11226741	0					
ANR	11226912	Identifier	log		11226741	0					
ANR	11226913	Identifier	back		11226741	1					
ANR	11226914	AdditiveExpression	3 + ( buf [ HEAD + 34 ] & 7 )		11226741	1		+			
ANR	11226915	PrimaryExpression	3		11226741	0					
ANR	11226916	BitAndExpression	buf [ HEAD + 34 ] & 7		11226741	1		&			
ANR	11226917	ArrayIndexing	buf [ HEAD + 34 ]		11226741	0					
ANR	11226918	Identifier	buf		11226741	0					
ANR	11226919	AdditiveExpression	HEAD + 34		11226741	1		+			
ANR	11226920	Identifier	HEAD		11226741	0					
ANR	11226921	PrimaryExpression	34		11226741	1					
ANR	11226922	PrimaryExpression	7		11226741	1					
ANR	11226923	ExpressionStatement	op = ( buf [ HEAD + 34 ] >> 3 ) & 3	428:4:21003:21033	11226741	11	True				
ANR	11226924	AssignmentExpression	op = ( buf [ HEAD + 34 ] >> 3 ) & 3		11226741	0		=			
ANR	11226925	Identifier	op		11226741	0					
ANR	11226926	BitAndExpression	( buf [ HEAD + 34 ] >> 3 ) & 3		11226741	1		&			
ANR	11226927	ShiftExpression	buf [ HEAD + 34 ] >> 3		11226741	0		>>			
ANR	11226928	ArrayIndexing	buf [ HEAD + 34 ]		11226741	0					
ANR	11226929	Identifier	buf		11226741	0					
ANR	11226930	AdditiveExpression	HEAD + 34		11226741	1		+			
ANR	11226931	Identifier	HEAD		11226741	0					
ANR	11226932	PrimaryExpression	34		11226741	1					
ANR	11226933	PrimaryExpression	3		11226741	1					
ANR	11226934	PrimaryExpression	3		11226741	1					
ANR	11226935	ReturnStatement	return op ;	429:4:21039:21048	11226741	12	True				
ANR	11226936	Identifier	op		11226741	0					
ANR	11226937	ReturnType	local int		11226741	1					
ANR	11226938	Identifier	log_head		11226741	2					
ANR	11226939	ParameterList	struct log * log		11226741	3					
ANR	11226940	Parameter	struct log * log	410:19:20442:20456	11226741	0	True				
ANR	11226941	ParameterType	struct log *		11226741	0					
ANR	11226942	Identifier	log		11226741	1					
ANR	11226943	CFGEntryNode	ENTRY		11226741		True				
ANR	11226944	CFGExitNode	EXIT		11226741		True				
ANR	11226945	Symbol	PULL4		11226741						
ANR	11226946	Symbol	HEAD		11226741						
ANR	11226947	Symbol	PULL2		11226741						
ANR	11226948	Symbol	lseek		11226741						
ANR	11226949	Symbol	log		11226741						
ANR	11226950	Symbol	EXTRA		11226741						
ANR	11226951	Symbol	* HEAD		11226741						
ANR	11226952	Symbol	memcmp		11226741						
ANR	11226953	Symbol	PULL8		11226741						
ANR	11226954	Symbol	SEEK_SET		11226741						
ANR	11226955	Symbol	op		11226741						
ANR	11226956	Symbol	* buf		11226741						
ANR	11226957	Symbol	read		11226741						
ANR	11226958	Symbol	log -> fd		11226741						
ANR	11226959	Symbol	log -> first		11226741						
ANR	11226960	Symbol	log -> tlen		11226741						
ANR	11226961	Symbol	log -> tcrc		11226741						
ANR	11226962	Symbol	log -> back		11226741						
ANR	11226963	Symbol	* log		11226741						
ANR	11226964	Symbol	buf		11226741						
ANR	11226965	Symbol	log_gzhead		11226741						
ANR	11226966	Symbol	log -> last		11226741						
ANR	11226967	Symbol	log -> ccrc		11226741						
ANR	11226968	Symbol	log -> clen		11226741						
ANR	11226969	Symbol	log -> stored		11226741						
ANR	11226970	Function	log_mark	437:0:21433:21938							
ANR	11226971	FunctionDef	"log_mark (struct log * log , int op)"		11226970	0					
ANR	11226972	CompoundStatement		438:0:21477:21938	11226970	0					
ANR	11226973	IdentifierDeclStatement	int ret ;	439:4:21483:21490	11226970	0	True				
ANR	11226974	IdentifierDecl	ret		11226970	0					
ANR	11226975	IdentifierDeclType	int		11226970	0					
ANR	11226976	Identifier	ret		11226970	1					
ANR	11226977	IdentifierDeclStatement	unsigned char ext [ EXTRA ] ;	440:4:21496:21520	11226970	1	True				
ANR	11226978	IdentifierDecl	ext [ EXTRA ]		11226970	0					
ANR	11226979	IdentifierDeclType	unsigned char [ EXTRA ]		11226970	0					
ANR	11226980	Identifier	ext		11226970	1					
ANR	11226981	Identifier	EXTRA		11226970	2					
ANR	11226982	ExpressionStatement	"PUT8 ( ext , log -> first )"	442:4:21527:21548	11226970	2	True				
ANR	11226983	CallExpression	"PUT8 ( ext , log -> first )"		11226970	0					
ANR	11226984	Callee	PUT8		11226970	0					
ANR	11226985	Identifier	PUT8		11226970	0					
ANR	11226986	ArgumentList	ext		11226970	1					
ANR	11226987	Argument	ext		11226970	0					
ANR	11226988	Identifier	ext		11226970	0					
ANR	11226989	Argument	log -> first		11226970	1					
ANR	11226990	PtrMemberAccess	log -> first		11226970	0					
ANR	11226991	Identifier	log		11226970	0					
ANR	11226992	Identifier	first		11226970	1					
ANR	11226993	ExpressionStatement	"PUT8 ( ext + 8 , log -> last )"	443:4:21554:21578	11226970	3	True				
ANR	11226994	CallExpression	"PUT8 ( ext + 8 , log -> last )"		11226970	0					
ANR	11226995	Callee	PUT8		11226970	0					
ANR	11226996	Identifier	PUT8		11226970	0					
ANR	11226997	ArgumentList	ext + 8		11226970	1					
ANR	11226998	Argument	ext + 8		11226970	0					
ANR	11226999	AdditiveExpression	ext + 8		11226970	0		+			
ANR	11227000	Identifier	ext		11226970	0					
ANR	11227001	PrimaryExpression	8		11226970	1					
ANR	11227002	Argument	log -> last		11226970	1					
ANR	11227003	PtrMemberAccess	log -> last		11226970	0					
ANR	11227004	Identifier	log		11226970	0					
ANR	11227005	Identifier	last		11226970	1					
ANR	11227006	ExpressionStatement	"PUT4 ( ext + 16 , log -> ccrc )"	444:4:21584:21609	11226970	4	True				
ANR	11227007	CallExpression	"PUT4 ( ext + 16 , log -> ccrc )"		11226970	0					
ANR	11227008	Callee	PUT4		11226970	0					
ANR	11227009	Identifier	PUT4		11226970	0					
ANR	11227010	ArgumentList	ext + 16		11226970	1					
ANR	11227011	Argument	ext + 16		11226970	0					
ANR	11227012	AdditiveExpression	ext + 16		11226970	0		+			
ANR	11227013	Identifier	ext		11226970	0					
ANR	11227014	PrimaryExpression	16		11226970	1					
ANR	11227015	Argument	log -> ccrc		11226970	1					
ANR	11227016	PtrMemberAccess	log -> ccrc		11226970	0					
ANR	11227017	Identifier	log		11226970	0					
ANR	11227018	Identifier	ccrc		11226970	1					
ANR	11227019	ExpressionStatement	"PUT4 ( ext + 20 , log -> clen )"	445:4:21615:21640	11226970	5	True				
ANR	11227020	CallExpression	"PUT4 ( ext + 20 , log -> clen )"		11226970	0					
ANR	11227021	Callee	PUT4		11226970	0					
ANR	11227022	Identifier	PUT4		11226970	0					
ANR	11227023	ArgumentList	ext + 20		11226970	1					
ANR	11227024	Argument	ext + 20		11226970	0					
ANR	11227025	AdditiveExpression	ext + 20		11226970	0		+			
ANR	11227026	Identifier	ext		11226970	0					
ANR	11227027	PrimaryExpression	20		11226970	1					
ANR	11227028	Argument	log -> clen		11226970	1					
ANR	11227029	PtrMemberAccess	log -> clen		11226970	0					
ANR	11227030	Identifier	log		11226970	0					
ANR	11227031	Identifier	clen		11226970	1					
ANR	11227032	ExpressionStatement	"PUT4 ( ext + 24 , log -> tcrc )"	446:4:21646:21671	11226970	6	True				
ANR	11227033	CallExpression	"PUT4 ( ext + 24 , log -> tcrc )"		11226970	0					
ANR	11227034	Callee	PUT4		11226970	0					
ANR	11227035	Identifier	PUT4		11226970	0					
ANR	11227036	ArgumentList	ext + 24		11226970	1					
ANR	11227037	Argument	ext + 24		11226970	0					
ANR	11227038	AdditiveExpression	ext + 24		11226970	0		+			
ANR	11227039	Identifier	ext		11226970	0					
ANR	11227040	PrimaryExpression	24		11226970	1					
ANR	11227041	Argument	log -> tcrc		11226970	1					
ANR	11227042	PtrMemberAccess	log -> tcrc		11226970	0					
ANR	11227043	Identifier	log		11226970	0					
ANR	11227044	Identifier	tcrc		11226970	1					
ANR	11227045	ExpressionStatement	"PUT4 ( ext + 28 , log -> tlen )"	447:4:21677:21702	11226970	7	True				
ANR	11227046	CallExpression	"PUT4 ( ext + 28 , log -> tlen )"		11226970	0					
ANR	11227047	Callee	PUT4		11226970	0					
ANR	11227048	Identifier	PUT4		11226970	0					
ANR	11227049	ArgumentList	ext + 28		11226970	1					
ANR	11227050	Argument	ext + 28		11226970	0					
ANR	11227051	AdditiveExpression	ext + 28		11226970	0		+			
ANR	11227052	Identifier	ext		11226970	0					
ANR	11227053	PrimaryExpression	28		11226970	1					
ANR	11227054	Argument	log -> tlen		11226970	1					
ANR	11227055	PtrMemberAccess	log -> tlen		11226970	0					
ANR	11227056	Identifier	log		11226970	0					
ANR	11227057	Identifier	tlen		11226970	1					
ANR	11227058	ExpressionStatement	"PUT2 ( ext + 32 , log -> stored )"	448:4:21708:21735	11226970	8	True				
ANR	11227059	CallExpression	"PUT2 ( ext + 32 , log -> stored )"		11226970	0					
ANR	11227060	Callee	PUT2		11226970	0					
ANR	11227061	Identifier	PUT2		11226970	0					
ANR	11227062	ArgumentList	ext + 32		11226970	1					
ANR	11227063	Argument	ext + 32		11226970	0					
ANR	11227064	AdditiveExpression	ext + 32		11226970	0		+			
ANR	11227065	Identifier	ext		11226970	0					
ANR	11227066	PrimaryExpression	32		11226970	1					
ANR	11227067	Argument	log -> stored		11226970	1					
ANR	11227068	PtrMemberAccess	log -> stored		11226970	0					
ANR	11227069	Identifier	log		11226970	0					
ANR	11227070	Identifier	stored		11226970	1					
ANR	11227071	ExpressionStatement	ext [ 34 ] = log -> back - 3 + ( op << 3 )	449:4:21741:21776	11226970	9	True				
ANR	11227072	AssignmentExpression	ext [ 34 ] = log -> back - 3 + ( op << 3 )		11226970	0		=			
ANR	11227073	ArrayIndexing	ext [ 34 ]		11226970	0					
ANR	11227074	Identifier	ext		11226970	0					
ANR	11227075	PrimaryExpression	34		11226970	1					
ANR	11227076	AdditiveExpression	log -> back - 3 + ( op << 3 )		11226970	1		-			
ANR	11227077	PtrMemberAccess	log -> back		11226970	0					
ANR	11227078	Identifier	log		11226970	0					
ANR	11227079	Identifier	back		11226970	1					
ANR	11227080	AdditiveExpression	3 + ( op << 3 )		11226970	1		+			
ANR	11227081	PrimaryExpression	3		11226970	0					
ANR	11227082	ShiftExpression	op << 3		11226970	1		<<			
ANR	11227083	Identifier	op		11226970	0					
ANR	11227084	PrimaryExpression	3		11226970	1					
ANR	11227085	ExpressionStatement	fsync ( log -> fd )	450:4:21782:21796	11226970	10	True				
ANR	11227086	CallExpression	fsync ( log -> fd )		11226970	0					
ANR	11227087	Callee	fsync		11226970	0					
ANR	11227088	Identifier	fsync		11226970	0					
ANR	11227089	ArgumentList	log -> fd		11226970	1					
ANR	11227090	Argument	log -> fd		11226970	0					
ANR	11227091	PtrMemberAccess	log -> fd		11226970	0					
ANR	11227092	Identifier	log		11226970	0					
ANR	11227093	Identifier	fd		11226970	1					
ANR	11227094	ExpressionStatement	"ret = lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA ? - 1 : 0"	451:4:21802:21900	11226970	11	True				
ANR	11227095	AssignmentExpression	"ret = lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA ? - 1 : 0"		11226970	0		=			
ANR	11227096	Identifier	ret		11226970	0					
ANR	11227097	ConditionalExpression	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA ? - 1 : 0"		11226970	1					
ANR	11227098	Condition	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA"		11226970	0					
ANR	11227099	OrExpression	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0 || write ( log -> fd , ext , EXTRA ) != EXTRA"		11226970	0		||			
ANR	11227100	RelationalExpression	"lseek ( log -> fd , HEAD , SEEK_SET ) < 0"		11226970	0		<			
ANR	11227101	CallExpression	"lseek ( log -> fd , HEAD , SEEK_SET )"		11226970	0					
ANR	11227102	Callee	lseek		11226970	0					
ANR	11227103	Identifier	lseek		11226970	0					
ANR	11227104	ArgumentList	log -> fd		11226970	1					
ANR	11227105	Argument	log -> fd		11226970	0					
ANR	11227106	PtrMemberAccess	log -> fd		11226970	0					
ANR	11227107	Identifier	log		11226970	0					
ANR	11227108	Identifier	fd		11226970	1					
ANR	11227109	Argument	HEAD		11226970	1					
ANR	11227110	Identifier	HEAD		11226970	0					
ANR	11227111	Argument	SEEK_SET		11226970	2					
ANR	11227112	Identifier	SEEK_SET		11226970	0					
ANR	11227113	PrimaryExpression	0		11226970	1					
ANR	11227114	EqualityExpression	"write ( log -> fd , ext , EXTRA ) != EXTRA"		11226970	1		!=			
ANR	11227115	CallExpression	"write ( log -> fd , ext , EXTRA )"		11226970	0					
ANR	11227116	Callee	write		11226970	0					
ANR	11227117	Identifier	write		11226970	0					
ANR	11227118	ArgumentList	log -> fd		11226970	1					
ANR	11227119	Argument	log -> fd		11226970	0					
ANR	11227120	PtrMemberAccess	log -> fd		11226970	0					
ANR	11227121	Identifier	log		11226970	0					
ANR	11227122	Identifier	fd		11226970	1					
ANR	11227123	Argument	ext		11226970	1					
ANR	11227124	Identifier	ext		11226970	0					
ANR	11227125	Argument	EXTRA		11226970	2					
ANR	11227126	Identifier	EXTRA		11226970	0					
ANR	11227127	Identifier	EXTRA		11226970	1					
ANR	11227128	UnaryOperationExpression	- 1		11226970	1					
ANR	11227129	UnaryOperator	-		11226970	0					
ANR	11227130	PrimaryExpression	1		11226970	1					
ANR	11227131	PrimaryExpression	0		11226970	2					
ANR	11227132	ExpressionStatement	fsync ( log -> fd )	453:4:21906:21920	11226970	12	True				
ANR	11227133	CallExpression	fsync ( log -> fd )		11226970	0					
ANR	11227134	Callee	fsync		11226970	0					
ANR	11227135	Identifier	fsync		11226970	0					
ANR	11227136	ArgumentList	log -> fd		11226970	1					
ANR	11227137	Argument	log -> fd		11226970	0					
ANR	11227138	PtrMemberAccess	log -> fd		11226970	0					
ANR	11227139	Identifier	log		11226970	0					
ANR	11227140	Identifier	fd		11226970	1					
ANR	11227141	ReturnStatement	return ret ;	454:4:21926:21936	11226970	13	True				
ANR	11227142	Identifier	ret		11226970	0					
ANR	11227143	ReturnType	local int		11226970	1					
ANR	11227144	Identifier	log_mark		11226970	2					
ANR	11227145	ParameterList	"struct log * log , int op"		11226970	3					
ANR	11227146	Parameter	struct log * log	437:19:21452:21466	11226970	0	True				
ANR	11227147	ParameterType	struct log *		11226970	0					
ANR	11227148	Identifier	log		11226970	1					
ANR	11227149	Parameter	int op	437:36:21469:21474	11226970	1	True				
ANR	11227150	ParameterType	int		11226970	0					
ANR	11227151	Identifier	op		11226970	1					
ANR	11227152	CFGEntryNode	ENTRY		11226970		True				
ANR	11227153	CFGExitNode	EXIT		11226970		True				
ANR	11227154	Symbol	ret		11226970						
ANR	11227155	Symbol	ext		11226970						
ANR	11227156	Symbol	SEEK_SET		11226970						
ANR	11227157	Symbol	op		11226970						
ANR	11227158	Symbol	HEAD		11226970						
ANR	11227159	Symbol	lseek		11226970						
ANR	11227160	Symbol	log -> fd		11226970						
ANR	11227161	Symbol	log		11226970						
ANR	11227162	Symbol	EXTRA		11226970						
ANR	11227163	Symbol	log -> first		11226970						
ANR	11227164	Symbol	log -> tlen		11226970						
ANR	11227165	Symbol	log -> tcrc		11226970						
ANR	11227166	Symbol	log -> back		11226970						
ANR	11227167	Symbol	* log		11226970						
ANR	11227168	Symbol	* ext		11226970						
ANR	11227169	Symbol	log -> last		11226970						
ANR	11227170	Symbol	log -> ccrc		11226970						
ANR	11227171	Symbol	log -> clen		11226970						
ANR	11227172	Symbol	log -> stored		11226970						
ANR	11227173	Symbol	write		11226970						
ANR	11227174	Function	log_last	462:0:22312:23782							
ANR	11227175	FunctionDef	"log_last (struct log * log , int last)"		11227174	0					
ANR	11227176	CompoundStatement		463:0:22358:23782	11227174	0					
ANR	11227177	IdentifierDeclStatement	"int back , len , mask ;"	464:4:22364:22383	11227174	0	True				
ANR	11227178	IdentifierDecl	back		11227174	0					
ANR	11227179	IdentifierDeclType	int		11227174	0					
ANR	11227180	Identifier	back		11227174	1					
ANR	11227181	IdentifierDecl	len		11227174	1					
ANR	11227182	IdentifierDeclType	int		11227174	0					
ANR	11227183	Identifier	len		11227174	1					
ANR	11227184	IdentifierDecl	mask		11227174	2					
ANR	11227185	IdentifierDeclType	int		11227174	0					
ANR	11227186	Identifier	mask		11227174	1					
ANR	11227187	IdentifierDeclStatement	unsigned char buf [ 6 ] ;	465:4:22389:22409	11227174	1	True				
ANR	11227188	IdentifierDecl	buf [ 6 ]		11227174	0					
ANR	11227189	IdentifierDeclType	unsigned char [ 6 ]		11227174	0					
ANR	11227190	Identifier	buf		11227174	1					
ANR	11227191	PrimaryExpression	6		11227174	2					
ANR	11227192	ExpressionStatement	back = log -> last == log -> first ? log -> back : 8	468:4:22482:22528	11227174	2	True				
ANR	11227193	AssignmentExpression	back = log -> last == log -> first ? log -> back : 8		11227174	0		=			
ANR	11227194	Identifier	back		11227174	0					
ANR	11227195	ConditionalExpression	log -> last == log -> first ? log -> back : 8		11227174	1					
ANR	11227196	Condition	log -> last == log -> first		11227174	0					
ANR	11227197	EqualityExpression	log -> last == log -> first		11227174	0		==			
ANR	11227198	PtrMemberAccess	log -> last		11227174	0					
ANR	11227199	Identifier	log		11227174	0					
ANR	11227200	Identifier	last		11227174	1					
ANR	11227201	PtrMemberAccess	log -> first		11227174	1					
ANR	11227202	Identifier	log		11227174	0					
ANR	11227203	Identifier	first		11227174	1					
ANR	11227204	PtrMemberAccess	log -> back		11227174	1					
ANR	11227205	Identifier	log		11227174	0					
ANR	11227206	Identifier	back		11227174	1					
ANR	11227207	PrimaryExpression	8		11227174	2					
ANR	11227208	ExpressionStatement	len = back > 8 ? 2 : 1	469:4:22534:22556	11227174	3	True				
ANR	11227209	AssignmentExpression	len = back > 8 ? 2 : 1		11227174	0		=			
ANR	11227210	Identifier	len		11227174	0					
ANR	11227211	ConditionalExpression	back > 8 ? 2 : 1		11227174	1					
ANR	11227212	Condition	back > 8		11227174	0					
ANR	11227213	RelationalExpression	back > 8		11227174	0		>			
ANR	11227214	Identifier	back		11227174	0					
ANR	11227215	PrimaryExpression	8		11227174	1					
ANR	11227216	PrimaryExpression	2		11227174	1					
ANR	11227217	PrimaryExpression	1		11227174	2					
ANR	11227218	ExpressionStatement	mask = 0x80 >> ( ( back - 1 ) & 7 )	470:4:22610:22641	11227174	4	True				
ANR	11227219	AssignmentExpression	mask = 0x80 >> ( ( back - 1 ) & 7 )		11227174	0		=			
ANR	11227220	Identifier	mask		11227174	0					
ANR	11227221	ShiftExpression	0x80 >> ( ( back - 1 ) & 7 )		11227174	1		>>			
ANR	11227222	PrimaryExpression	0x80		11227174	0					
ANR	11227223	BitAndExpression	( back - 1 ) & 7		11227174	1		&			
ANR	11227224	AdditiveExpression	back - 1		11227174	0		-			
ANR	11227225	Identifier	back		11227174	0					
ANR	11227226	PrimaryExpression	1		11227174	1					
ANR	11227227	PrimaryExpression	7		11227174	1					
ANR	11227228	ExpressionStatement	buf [ 0 ] = 0	475:4:22881:22891	11227174	5	True				
ANR	11227229	AssignmentExpression	buf [ 0 ] = 0		11227174	0		=			
ANR	11227230	ArrayIndexing	buf [ 0 ]		11227174	0					
ANR	11227231	Identifier	buf		11227174	0					
ANR	11227232	PrimaryExpression	0		11227174	1					
ANR	11227233	PrimaryExpression	0		11227174	1					
ANR	11227234	IfStatement	"if ( back != 8 && ( lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 ) )"		11227174	6					
ANR	11227235	Condition	"back != 8 && ( lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 )"	476:8:22901:23012	11227174	0	True				
ANR	11227236	AndExpression	"back != 8 && ( lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 )"		11227174	0		&&			
ANR	11227237	EqualityExpression	back != 8		11227174	0		!=			
ANR	11227238	Identifier	back		11227174	0					
ANR	11227239	PrimaryExpression	8		11227174	1					
ANR	11227240	OrExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1"		11227174	1		||			
ANR	11227241	RelationalExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0"		11227174	0		<			
ANR	11227242	CallExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET )"		11227174	0					
ANR	11227243	Callee	lseek		11227174	0					
ANR	11227244	Identifier	lseek		11227174	0					
ANR	11227245	ArgumentList	log -> fd		11227174	1					
ANR	11227246	Argument	log -> fd		11227174	0					
ANR	11227247	PtrMemberAccess	log -> fd		11227174	0					
ANR	11227248	Identifier	log		11227174	0					
ANR	11227249	Identifier	fd		11227174	1					
ANR	11227250	Argument	log -> last - len		11227174	1					
ANR	11227251	AdditiveExpression	log -> last - len		11227174	0		-			
ANR	11227252	PtrMemberAccess	log -> last		11227174	0					
ANR	11227253	Identifier	log		11227174	0					
ANR	11227254	Identifier	last		11227174	1					
ANR	11227255	Identifier	len		11227174	1					
ANR	11227256	Argument	SEEK_SET		11227174	2					
ANR	11227257	Identifier	SEEK_SET		11227174	0					
ANR	11227258	PrimaryExpression	0		11227174	1					
ANR	11227259	EqualityExpression	"read ( log -> fd , buf , 1 ) != 1"		11227174	1		!=			
ANR	11227260	CallExpression	"read ( log -> fd , buf , 1 )"		11227174	0					
ANR	11227261	Callee	read		11227174	0					
ANR	11227262	Identifier	read		11227174	0					
ANR	11227263	ArgumentList	log -> fd		11227174	1					
ANR	11227264	Argument	log -> fd		11227174	0					
ANR	11227265	PtrMemberAccess	log -> fd		11227174	0					
ANR	11227266	Identifier	log		11227174	0					
ANR	11227267	Identifier	fd		11227174	1					
ANR	11227268	Argument	buf		11227174	1					
ANR	11227269	Identifier	buf		11227174	0					
ANR	11227270	Argument	1		11227174	2					
ANR	11227271	PrimaryExpression	1		11227174	0					
ANR	11227272	PrimaryExpression	1		11227174	1					
ANR	11227273	ReturnStatement	return - 1 ;	478:8:23023:23032	11227174	1	True				
ANR	11227274	UnaryOperationExpression	- 1		11227174	0					
ANR	11227275	UnaryOperator	-		11227174	0					
ANR	11227276	PrimaryExpression	1		11227174	1					
ANR	11227277	ExpressionStatement	buf [ 1 ] = 0	484:4:23322:23332	11227174	7	True				
ANR	11227278	AssignmentExpression	buf [ 1 ] = 0		11227174	0		=			
ANR	11227279	ArrayIndexing	buf [ 1 ]		11227174	0					
ANR	11227280	Identifier	buf		11227174	0					
ANR	11227281	PrimaryExpression	1		11227174	1					
ANR	11227282	PrimaryExpression	0		11227174	1					
ANR	11227283	ExpressionStatement	buf [ 2 - len ] = ( * buf & ( mask - 1 ) ) + ( last ? mask : 0 )	485:4:23338:23392	11227174	8	True				
ANR	11227284	AssignmentExpression	buf [ 2 - len ] = ( * buf & ( mask - 1 ) ) + ( last ? mask : 0 )		11227174	0		=			
ANR	11227285	ArrayIndexing	buf [ 2 - len ]		11227174	0					
ANR	11227286	Identifier	buf		11227174	0					
ANR	11227287	AdditiveExpression	2 - len		11227174	1		-			
ANR	11227288	PrimaryExpression	2		11227174	0					
ANR	11227289	Identifier	len		11227174	1					
ANR	11227290	AdditiveExpression	( * buf & ( mask - 1 ) ) + ( last ? mask : 0 )		11227174	1		+			
ANR	11227291	BitAndExpression	* buf & ( mask - 1 )		11227174	0		&			
ANR	11227292	UnaryOperationExpression	* buf		11227174	0					
ANR	11227293	UnaryOperator	*		11227174	0					
ANR	11227294	Identifier	buf		11227174	1					
ANR	11227295	AdditiveExpression	mask - 1		11227174	1		-			
ANR	11227296	Identifier	mask		11227174	0					
ANR	11227297	PrimaryExpression	1		11227174	1					
ANR	11227298	ConditionalExpression	last ? mask : 0		11227174	1					
ANR	11227299	Condition	last		11227174	0					
ANR	11227300	Identifier	last		11227174	0					
ANR	11227301	Identifier	mask		11227174	1					
ANR	11227302	PrimaryExpression	0		11227174	2					
ANR	11227303	ExpressionStatement	"PUT2 ( buf + 2 , log -> stored )"	489:4:23526:23552	11227174	9	True				
ANR	11227304	CallExpression	"PUT2 ( buf + 2 , log -> stored )"		11227174	0					
ANR	11227305	Callee	PUT2		11227174	0					
ANR	11227306	Identifier	PUT2		11227174	0					
ANR	11227307	ArgumentList	buf + 2		11227174	1					
ANR	11227308	Argument	buf + 2		11227174	0					
ANR	11227309	AdditiveExpression	buf + 2		11227174	0		+			
ANR	11227310	Identifier	buf		11227174	0					
ANR	11227311	PrimaryExpression	2		11227174	1					
ANR	11227312	Argument	log -> stored		11227174	1					
ANR	11227313	PtrMemberAccess	log -> stored		11227174	0					
ANR	11227314	Identifier	log		11227174	0					
ANR	11227315	Identifier	stored		11227174	1					
ANR	11227316	ExpressionStatement	"PUT2 ( buf + 4 , log -> stored ^ 0xffff )"	490:4:23558:23593	11227174	10	True				
ANR	11227317	CallExpression	"PUT2 ( buf + 4 , log -> stored ^ 0xffff )"		11227174	0					
ANR	11227318	Callee	PUT2		11227174	0					
ANR	11227319	Identifier	PUT2		11227174	0					
ANR	11227320	ArgumentList	buf + 4		11227174	1					
ANR	11227321	Argument	buf + 4		11227174	0					
ANR	11227322	AdditiveExpression	buf + 4		11227174	0		+			
ANR	11227323	Identifier	buf		11227174	0					
ANR	11227324	PrimaryExpression	4		11227174	1					
ANR	11227325	Argument	log -> stored ^ 0xffff		11227174	1					
ANR	11227326	ExclusiveOrExpression	log -> stored ^ 0xffff		11227174	0		^			
ANR	11227327	PtrMemberAccess	log -> stored		11227174	0					
ANR	11227328	Identifier	log		11227174	0					
ANR	11227329	Identifier	stored		11227174	1					
ANR	11227330	PrimaryExpression	0xffff		11227174	1					
ANR	11227331	ReturnStatement	"return lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0 ? - 1 : 0 ;"	491:4:23599:23780	11227174	11	True				
ANR	11227332	ConditionalExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0 ? - 1 : 0"		11227174	0					
ANR	11227333	Condition	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		11227174	0					
ANR	11227334	OrExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0 || write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		11227174	0		||			
ANR	11227335	RelationalExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET ) < 0"		11227174	0		<			
ANR	11227336	CallExpression	"lseek ( log -> fd , log -> last - len , SEEK_SET )"		11227174	0					
ANR	11227337	Callee	lseek		11227174	0					
ANR	11227338	Identifier	lseek		11227174	0					
ANR	11227339	ArgumentList	log -> fd		11227174	1					
ANR	11227340	Argument	log -> fd		11227174	0					
ANR	11227341	PtrMemberAccess	log -> fd		11227174	0					
ANR	11227342	Identifier	log		11227174	0					
ANR	11227343	Identifier	fd		11227174	1					
ANR	11227344	Argument	log -> last - len		11227174	1					
ANR	11227345	AdditiveExpression	log -> last - len		11227174	0		-			
ANR	11227346	PtrMemberAccess	log -> last		11227174	0					
ANR	11227347	Identifier	log		11227174	0					
ANR	11227348	Identifier	last		11227174	1					
ANR	11227349	Identifier	len		11227174	1					
ANR	11227350	Argument	SEEK_SET		11227174	2					
ANR	11227351	Identifier	SEEK_SET		11227174	0					
ANR	11227352	PrimaryExpression	0		11227174	1					
ANR	11227353	OrExpression	"write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4 || lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		11227174	1		||			
ANR	11227354	EqualityExpression	"write ( log -> fd , buf + 2 - len , len + 4 ) != len + 4"		11227174	0		!=			
ANR	11227355	CallExpression	"write ( log -> fd , buf + 2 - len , len + 4 )"		11227174	0					
ANR	11227356	Callee	write		11227174	0					
ANR	11227357	Identifier	write		11227174	0					
ANR	11227358	ArgumentList	log -> fd		11227174	1					
ANR	11227359	Argument	log -> fd		11227174	0					
ANR	11227360	PtrMemberAccess	log -> fd		11227174	0					
ANR	11227361	Identifier	log		11227174	0					
ANR	11227362	Identifier	fd		11227174	1					
ANR	11227363	Argument	buf + 2 - len		11227174	1					
ANR	11227364	AdditiveExpression	buf + 2 - len		11227174	0		+			
ANR	11227365	Identifier	buf		11227174	0					
ANR	11227366	AdditiveExpression	2 - len		11227174	1		-			
ANR	11227367	PrimaryExpression	2		11227174	0					
ANR	11227368	Identifier	len		11227174	1					
ANR	11227369	Argument	len + 4		11227174	2					
ANR	11227370	AdditiveExpression	len + 4		11227174	0		+			
ANR	11227371	Identifier	len		11227174	0					
ANR	11227372	PrimaryExpression	4		11227174	1					
ANR	11227373	AdditiveExpression	len + 4		11227174	1		+			
ANR	11227374	Identifier	len		11227174	0					
ANR	11227375	PrimaryExpression	4		11227174	1					
ANR	11227376	RelationalExpression	"lseek ( log -> fd , log -> stored , SEEK_CUR ) < 0"		11227174	1		<			
ANR	11227377	CallExpression	"lseek ( log -> fd , log -> stored , SEEK_CUR )"		11227174	0					
ANR	11227378	Callee	lseek		11227174	0					
ANR	11227379	Identifier	lseek		11227174	0					
ANR	11227380	ArgumentList	log -> fd		11227174	1					
ANR	11227381	Argument	log -> fd		11227174	0					
ANR	11227382	PtrMemberAccess	log -> fd		11227174	0					
ANR	11227383	Identifier	log		11227174	0					
ANR	11227384	Identifier	fd		11227174	1					
ANR	11227385	Argument	log -> stored		11227174	1					
ANR	11227386	PtrMemberAccess	log -> stored		11227174	0					
ANR	11227387	Identifier	log		11227174	0					
ANR	11227388	Identifier	stored		11227174	1					
ANR	11227389	Argument	SEEK_CUR		11227174	2					
ANR	11227390	Identifier	SEEK_CUR		11227174	0					
ANR	11227391	PrimaryExpression	0		11227174	1					
ANR	11227392	UnaryOperationExpression	- 1		11227174	1					
ANR	11227393	UnaryOperator	-		11227174	0					
ANR	11227394	PrimaryExpression	1		11227174	1					
ANR	11227395	PrimaryExpression	0		11227174	2					
ANR	11227396	ReturnType	local int		11227174	1					
ANR	11227397	Identifier	log_last		11227174	2					
ANR	11227398	ParameterList	"struct log * log , int last"		11227174	3					
ANR	11227399	Parameter	struct log * log	462:19:22331:22345	11227174	0	True				
ANR	11227400	ParameterType	struct log *		11227174	0					
ANR	11227401	Identifier	log		11227174	1					
ANR	11227402	Parameter	int last	462:36:22348:22355	11227174	1	True				
ANR	11227403	ParameterType	int		11227174	0					
ANR	11227404	Identifier	last		11227174	1					
ANR	11227405	CFGEntryNode	ENTRY		11227174		True				
ANR	11227406	CFGExitNode	EXIT		11227174		True				
ANR	11227407	Symbol	SEEK_SET		11227174						
ANR	11227408	Symbol	* buf		11227174						
ANR	11227409	Symbol	lseek		11227174						
ANR	11227410	Symbol	read		11227174						
ANR	11227411	Symbol	SEEK_CUR		11227174						
ANR	11227412	Symbol	last		11227174						
ANR	11227413	Symbol	log -> fd		11227174						
ANR	11227414	Symbol	log		11227174						
ANR	11227415	Symbol	back		11227174						
ANR	11227416	Symbol	log -> first		11227174						
ANR	11227417	Symbol	log -> back		11227174						
ANR	11227418	Symbol	* log		11227174						
ANR	11227419	Symbol	buf		11227174						
ANR	11227420	Symbol	len		11227174						
ANR	11227421	Symbol	log -> last		11227174						
ANR	11227422	Symbol	log -> stored		11227174						
ANR	11227423	Symbol	write		11227174						
ANR	11227424	Symbol	mask		11227174						
ANR	11227425	Symbol	* len		11227174						
ANR	11227426	Function	log_append	501:0:24118:26107							
ANR	11227427	FunctionDef	"log_append (struct log * log , unsigned char * data , size_t len)"		11227426	0					
ANR	11227428	CompoundStatement		502:0:24189:26107	11227426	0					
ANR	11227429	IdentifierDeclStatement	uint put ;	503:4:24195:24203	11227426	0	True				
ANR	11227430	IdentifierDecl	put		11227426	0					
ANR	11227431	IdentifierDeclType	uint		11227426	0					
ANR	11227432	Identifier	put		11227426	1					
ANR	11227433	IdentifierDeclStatement	off_t end ;	504:4:24209:24218	11227426	1	True				
ANR	11227434	IdentifierDecl	end		11227426	0					
ANR	11227435	IdentifierDeclType	off_t		11227426	0					
ANR	11227436	Identifier	end		11227426	1					
ANR	11227437	IdentifierDeclStatement	unsigned char buf [ 8 ] ;	505:4:24224:24244	11227426	2	True				
ANR	11227438	IdentifierDecl	buf [ 8 ]		11227426	0					
ANR	11227439	IdentifierDeclType	unsigned char [ 8 ]		11227426	0					
ANR	11227440	Identifier	buf		11227426	1					
ANR	11227441	PrimaryExpression	8		11227426	2					
ANR	11227442	IfStatement	"if ( log_last ( log , 1 ) )"		11227426	3					
ANR	11227443	Condition	"log_last ( log , 1 )"	510:8:24415:24430	11227426	0	True				
ANR	11227444	CallExpression	"log_last ( log , 1 )"		11227426	0					
ANR	11227445	Callee	log_last		11227426	0					
ANR	11227446	Identifier	log_last		11227426	0					
ANR	11227447	ArgumentList	log		11227426	1					
ANR	11227448	Argument	log		11227426	0					
ANR	11227449	Identifier	log		11227426	0					
ANR	11227450	Argument	1		11227426	1					
ANR	11227451	PrimaryExpression	1		11227426	0					
ANR	11227452	ReturnStatement	return - 1 ;	511:8:24441:24450	11227426	1	True				
ANR	11227453	UnaryOperationExpression	- 1		11227426	0					
ANR	11227454	UnaryOperator	-		11227426	0					
ANR	11227455	PrimaryExpression	1		11227426	1					
ANR	11227456	WhileStatement	while ( len )		11227426	4					
ANR	11227457	Condition	len	515:11:24606:24608	11227426	0	True				
ANR	11227458	Identifier	len		11227426	0					
ANR	11227459	CompoundStatement		14:16:421:421	11227426	1					
ANR	11227460	ExpressionStatement	put = ( MAX_STORE << 10 ) - log -> stored	517:8:24678:24715	11227426	0	True				
ANR	11227461	AssignmentExpression	put = ( MAX_STORE << 10 ) - log -> stored		11227426	0		=			
ANR	11227462	Identifier	put		11227426	0					
ANR	11227463	AdditiveExpression	( MAX_STORE << 10 ) - log -> stored		11227426	1		-			
ANR	11227464	ShiftExpression	MAX_STORE << 10		11227426	0		<<			
ANR	11227465	Identifier	MAX_STORE		11227426	0					
ANR	11227466	PrimaryExpression	10		11227426	1					
ANR	11227467	PtrMemberAccess	log -> stored		11227426	1					
ANR	11227468	Identifier	log		11227426	0					
ANR	11227469	Identifier	stored		11227426	1					
ANR	11227470	IfStatement	if ( put > len )		11227426	1					
ANR	11227471	Condition	put > len	518:12:24729:24737	11227426	0	True				
ANR	11227472	RelationalExpression	put > len		11227426	0		>			
ANR	11227473	Identifier	put		11227426	0					
ANR	11227474	Identifier	len		11227426	1					
ANR	11227475	ExpressionStatement	put = ( uint ) len	519:12:24752:24767	11227426	1	True				
ANR	11227476	AssignmentExpression	put = ( uint ) len		11227426	0		=			
ANR	11227477	Identifier	put		11227426	0					
ANR	11227478	CastExpression	( uint ) len		11227426	1					
ANR	11227479	CastTarget	uint		11227426	0					
ANR	11227480	Identifier	len		11227426	1					
ANR	11227481	IfStatement	if ( put )		11227426	2					
ANR	11227482	Condition	put	520:12:24781:24783	11227426	0	True				
ANR	11227483	Identifier	put		11227426	0					
ANR	11227484	CompoundStatement		19:17:596:596	11227426	1					
ANR	11227485	IfStatement	"if ( write ( log -> fd , data , put ) != put )"		11227426	0					
ANR	11227486	Condition	"write ( log -> fd , data , put ) != put"	521:16:24804:24835	11227426	0	True				
ANR	11227487	EqualityExpression	"write ( log -> fd , data , put ) != put"		11227426	0		!=			
ANR	11227488	CallExpression	"write ( log -> fd , data , put )"		11227426	0					
ANR	11227489	Callee	write		11227426	0					
ANR	11227490	Identifier	write		11227426	0					
ANR	11227491	ArgumentList	log -> fd		11227426	1					
ANR	11227492	Argument	log -> fd		11227426	0					
ANR	11227493	PtrMemberAccess	log -> fd		11227426	0					
ANR	11227494	Identifier	log		11227426	0					
ANR	11227495	Identifier	fd		11227426	1					
ANR	11227496	Argument	data		11227426	1					
ANR	11227497	Identifier	data		11227426	0					
ANR	11227498	Argument	put		11227426	2					
ANR	11227499	Identifier	put		11227426	0					
ANR	11227500	Identifier	put		11227426	1					
ANR	11227501	ReturnStatement	return - 1 ;	522:16:24854:24863	11227426	1	True				
ANR	11227502	UnaryOperationExpression	- 1		11227426	0					
ANR	11227503	UnaryOperator	-		11227426	0					
ANR	11227504	PrimaryExpression	1		11227426	1					
ANR	11227505	ExpressionStatement	BAIL ( 1 )	523:12:24877:24884	11227426	1	True				
ANR	11227506	CallExpression	BAIL ( 1 )		11227426	0					
ANR	11227507	Callee	BAIL		11227426	0					
ANR	11227508	Identifier	BAIL		11227426	0					
ANR	11227509	ArgumentList	1		11227426	1					
ANR	11227510	Argument	1		11227426	0					
ANR	11227511	PrimaryExpression	1		11227426	0					
ANR	11227512	ExpressionStatement	"log -> tcrc = crc32 ( log -> tcrc , data , put )"	524:12:24898:24937	11227426	2	True				
ANR	11227513	AssignmentExpression	"log -> tcrc = crc32 ( log -> tcrc , data , put )"		11227426	0		=			
ANR	11227514	PtrMemberAccess	log -> tcrc		11227426	0					
ANR	11227515	Identifier	log		11227426	0					
ANR	11227516	Identifier	tcrc		11227426	1					
ANR	11227517	CallExpression	"crc32 ( log -> tcrc , data , put )"		11227426	1					
ANR	11227518	Callee	crc32		11227426	0					
ANR	11227519	Identifier	crc32		11227426	0					
ANR	11227520	ArgumentList	log -> tcrc		11227426	1					
ANR	11227521	Argument	log -> tcrc		11227426	0					
ANR	11227522	PtrMemberAccess	log -> tcrc		11227426	0					
ANR	11227523	Identifier	log		11227426	0					
ANR	11227524	Identifier	tcrc		11227426	1					
ANR	11227525	Argument	data		11227426	1					
ANR	11227526	Identifier	data		11227426	0					
ANR	11227527	Argument	put		11227426	2					
ANR	11227528	Identifier	put		11227426	0					
ANR	11227529	ExpressionStatement	log -> tlen += put	525:12:24951:24967	11227426	3	True				
ANR	11227530	AssignmentExpression	log -> tlen += put		11227426	0		+=			
ANR	11227531	PtrMemberAccess	log -> tlen		11227426	0					
ANR	11227532	Identifier	log		11227426	0					
ANR	11227533	Identifier	tlen		11227426	1					
ANR	11227534	Identifier	put		11227426	1					
ANR	11227535	ExpressionStatement	log -> stored += put	526:12:24981:24999	11227426	4	True				
ANR	11227536	AssignmentExpression	log -> stored += put		11227426	0		+=			
ANR	11227537	PtrMemberAccess	log -> stored		11227426	0					
ANR	11227538	Identifier	log		11227426	0					
ANR	11227539	Identifier	stored		11227426	1					
ANR	11227540	Identifier	put		11227426	1					
ANR	11227541	ExpressionStatement	data += put	527:12:25013:25024	11227426	5	True				
ANR	11227542	AssignmentExpression	data += put		11227426	0		+=			
ANR	11227543	Identifier	data		11227426	0					
ANR	11227544	Identifier	put		11227426	1					
ANR	11227545	ExpressionStatement	len -= put	528:12:25038:25048	11227426	6	True				
ANR	11227546	AssignmentExpression	len -= put		11227426	0		-=			
ANR	11227547	Identifier	len		11227426	0					
ANR	11227548	Identifier	put		11227426	1					
ANR	11227549	IfStatement	if ( len )		11227426	3					
ANR	11227550	Condition	len	532:12:25131:25133	11227426	0	True				
ANR	11227551	Identifier	len		11227426	0					
ANR	11227552	CompoundStatement		31:17:946:946	11227426	1					
ANR	11227553	IfStatement	"if ( log_last ( log , 0 ) )"		11227426	0					
ANR	11227554	Condition	"log_last ( log , 0 )"	534:16:25203:25218	11227426	0	True				
ANR	11227555	CallExpression	"log_last ( log , 0 )"		11227426	0					
ANR	11227556	Callee	log_last		11227426	0					
ANR	11227557	Identifier	log_last		11227426	0					
ANR	11227558	ArgumentList	log		11227426	1					
ANR	11227559	Argument	log		11227426	0					
ANR	11227560	Identifier	log		11227426	0					
ANR	11227561	Argument	0		11227426	1					
ANR	11227562	PrimaryExpression	0		11227426	0					
ANR	11227563	ReturnStatement	return - 1 ;	535:16:25237:25246	11227426	1	True				
ANR	11227564	UnaryOperationExpression	- 1		11227426	0					
ANR	11227565	UnaryOperator	-		11227426	0					
ANR	11227566	PrimaryExpression	1		11227426	1					
ANR	11227567	ExpressionStatement	log -> last += 4 + log -> stored + 1	538:12:25312:25344	11227426	1	True				
ANR	11227568	AssignmentExpression	log -> last += 4 + log -> stored + 1		11227426	0		+=			
ANR	11227569	PtrMemberAccess	log -> last		11227426	0					
ANR	11227570	Identifier	log		11227426	0					
ANR	11227571	Identifier	last		11227426	1					
ANR	11227572	AdditiveExpression	4 + log -> stored + 1		11227426	1		+			
ANR	11227573	PrimaryExpression	4		11227426	0					
ANR	11227574	AdditiveExpression	log -> stored + 1		11227426	1		+			
ANR	11227575	PtrMemberAccess	log -> stored		11227426	0					
ANR	11227576	Identifier	log		11227426	0					
ANR	11227577	Identifier	stored		11227426	1					
ANR	11227578	PrimaryExpression	1		11227426	1					
ANR	11227579	ExpressionStatement	log -> stored = 0	539:12:25358:25373	11227426	2	True				
ANR	11227580	AssignmentExpression	log -> stored = 0		11227426	0		=			
ANR	11227581	PtrMemberAccess	log -> stored		11227426	0					
ANR	11227582	Identifier	log		11227426	0					
ANR	11227583	Identifier	stored		11227426	1					
ANR	11227584	PrimaryExpression	0		11227426	1					
ANR	11227585	IfStatement	"if ( log_last ( log , 1 ) )"		11227426	4					
ANR	11227586	Condition	"log_last ( log , 1 )"	543:12:25455:25470	11227426	0	True				
ANR	11227587	CallExpression	"log_last ( log , 1 )"		11227426	0					
ANR	11227588	Callee	log_last		11227426	0					
ANR	11227589	Identifier	log_last		11227426	0					
ANR	11227590	ArgumentList	log		11227426	1					
ANR	11227591	Argument	log		11227426	0					
ANR	11227592	Identifier	log		11227426	0					
ANR	11227593	Argument	1		11227426	1					
ANR	11227594	PrimaryExpression	1		11227426	0					
ANR	11227595	ReturnStatement	return - 1 ;	544:12:25485:25494	11227426	1	True				
ANR	11227596	UnaryOperationExpression	- 1		11227426	0					
ANR	11227597	UnaryOperator	-		11227426	0					
ANR	11227598	PrimaryExpression	1		11227426	1					
ANR	11227599	ExpressionStatement	BAIL ( 2 )	545:8:25504:25511	11227426	5	True				
ANR	11227600	CallExpression	BAIL ( 2 )		11227426	0					
ANR	11227601	Callee	BAIL		11227426	0					
ANR	11227602	Identifier	BAIL		11227426	0					
ANR	11227603	ArgumentList	2		11227426	1					
ANR	11227604	Argument	2		11227426	0					
ANR	11227605	PrimaryExpression	2		11227426	0					
ANR	11227606	ExpressionStatement	"PUT4 ( buf , log -> tcrc )"	550:4:25675:25695	11227426	5	True				
ANR	11227607	CallExpression	"PUT4 ( buf , log -> tcrc )"		11227426	0					
ANR	11227608	Callee	PUT4		11227426	0					
ANR	11227609	Identifier	PUT4		11227426	0					
ANR	11227610	ArgumentList	buf		11227426	1					
ANR	11227611	Argument	buf		11227426	0					
ANR	11227612	Identifier	buf		11227426	0					
ANR	11227613	Argument	log -> tcrc		11227426	1					
ANR	11227614	PtrMemberAccess	log -> tcrc		11227426	0					
ANR	11227615	Identifier	log		11227426	0					
ANR	11227616	Identifier	tcrc		11227426	1					
ANR	11227617	ExpressionStatement	"PUT4 ( buf + 4 , log -> tlen )"	551:4:25701:25725	11227426	6	True				
ANR	11227618	CallExpression	"PUT4 ( buf + 4 , log -> tlen )"		11227426	0					
ANR	11227619	Callee	PUT4		11227426	0					
ANR	11227620	Identifier	PUT4		11227426	0					
ANR	11227621	ArgumentList	buf + 4		11227426	1					
ANR	11227622	Argument	buf + 4		11227426	0					
ANR	11227623	AdditiveExpression	buf + 4		11227426	0		+			
ANR	11227624	Identifier	buf		11227426	0					
ANR	11227625	PrimaryExpression	4		11227426	1					
ANR	11227626	Argument	log -> tlen		11227426	1					
ANR	11227627	PtrMemberAccess	log -> tlen		11227426	0					
ANR	11227628	Identifier	log		11227426	0					
ANR	11227629	Identifier	tlen		11227426	1					
ANR	11227630	IfStatement	"if ( write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end ) )"		11227426	7					
ANR	11227631	Condition	"write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"	552:8:25735:25839	11227426	0	True				
ANR	11227632	OrExpression	"write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		11227426	0		||			
ANR	11227633	EqualityExpression	"write ( log -> fd , buf , 8 ) != 8"		11227426	0		!=			
ANR	11227634	CallExpression	"write ( log -> fd , buf , 8 )"		11227426	0					
ANR	11227635	Callee	write		11227426	0					
ANR	11227636	Identifier	write		11227426	0					
ANR	11227637	ArgumentList	log -> fd		11227426	1					
ANR	11227638	Argument	log -> fd		11227426	0					
ANR	11227639	PtrMemberAccess	log -> fd		11227426	0					
ANR	11227640	Identifier	log		11227426	0					
ANR	11227641	Identifier	fd		11227426	1					
ANR	11227642	Argument	buf		11227426	1					
ANR	11227643	Identifier	buf		11227426	0					
ANR	11227644	Argument	8		11227426	2					
ANR	11227645	PrimaryExpression	8		11227426	0					
ANR	11227646	PrimaryExpression	8		11227426	1					
ANR	11227647	OrExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		11227426	1		||			
ANR	11227648	RelationalExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0"		11227426	0		<			
ANR	11227649	AssignmentExpression	"end = lseek ( log -> fd , 0 , SEEK_CUR )"		11227426	0		=			
ANR	11227650	Identifier	end		11227426	0					
ANR	11227651	CallExpression	"lseek ( log -> fd , 0 , SEEK_CUR )"		11227426	1					
ANR	11227652	Callee	lseek		11227426	0					
ANR	11227653	Identifier	lseek		11227426	0					
ANR	11227654	ArgumentList	log -> fd		11227426	1					
ANR	11227655	Argument	log -> fd		11227426	0					
ANR	11227656	PtrMemberAccess	log -> fd		11227426	0					
ANR	11227657	Identifier	log		11227426	0					
ANR	11227658	Identifier	fd		11227426	1					
ANR	11227659	Argument	0		11227426	1					
ANR	11227660	PrimaryExpression	0		11227426	0					
ANR	11227661	Argument	SEEK_CUR		11227426	2					
ANR	11227662	Identifier	SEEK_CUR		11227426	0					
ANR	11227663	PrimaryExpression	0		11227426	1					
ANR	11227664	CallExpression	"ftruncate ( log -> fd , end )"		11227426	1					
ANR	11227665	Callee	ftruncate		11227426	0					
ANR	11227666	Identifier	ftruncate		11227426	0					
ANR	11227667	ArgumentList	log -> fd		11227426	1					
ANR	11227668	Argument	log -> fd		11227426	0					
ANR	11227669	PtrMemberAccess	log -> fd		11227426	0					
ANR	11227670	Identifier	log		11227426	0					
ANR	11227671	Identifier	fd		11227426	1					
ANR	11227672	Argument	end		11227426	1					
ANR	11227673	Identifier	end		11227426	0					
ANR	11227674	ReturnStatement	return - 1 ;	554:8:25850:25859	11227426	1	True				
ANR	11227675	UnaryOperationExpression	- 1		11227426	0					
ANR	11227676	UnaryOperator	-		11227426	0					
ANR	11227677	PrimaryExpression	1		11227426	1					
ANR	11227678	IfStatement	"if ( log_mark ( log , NO_OP ) )"		11227426	8					
ANR	11227679	Condition	"log_mark ( log , NO_OP )"	557:8:25950:25969	11227426	0	True				
ANR	11227680	CallExpression	"log_mark ( log , NO_OP )"		11227426	0					
ANR	11227681	Callee	log_mark		11227426	0					
ANR	11227682	Identifier	log_mark		11227426	0					
ANR	11227683	ArgumentList	log		11227426	1					
ANR	11227684	Argument	log		11227426	0					
ANR	11227685	Identifier	log		11227426	0					
ANR	11227686	Argument	NO_OP		11227426	1					
ANR	11227687	Identifier	NO_OP		11227426	0					
ANR	11227688	ReturnStatement	return - 1 ;	558:8:25980:25989	11227426	1	True				
ANR	11227689	UnaryOperationExpression	- 1		11227426	0					
ANR	11227690	UnaryOperator	-		11227426	0					
ANR	11227691	PrimaryExpression	1		11227426	1					
ANR	11227692	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	559:4:25995:26019	11227426	9	True				
ANR	11227693	CallExpression	"strcpy ( log -> end , "".add"" )"		11227426	0					
ANR	11227694	Callee	strcpy		11227426	0					
ANR	11227695	Identifier	strcpy		11227426	0					
ANR	11227696	ArgumentList	log -> end		11227426	1					
ANR	11227697	Argument	log -> end		11227426	0					
ANR	11227698	PtrMemberAccess	log -> end		11227426	0					
ANR	11227699	Identifier	log		11227426	0					
ANR	11227700	Identifier	end		11227426	1					
ANR	11227701	Argument	""".add"""		11227426	1					
ANR	11227702	PrimaryExpression	""".add"""		11227426	0					
ANR	11227703	ExpressionStatement	unlink ( log -> path )	560:4:26025:26042	11227426	10	True				
ANR	11227704	CallExpression	unlink ( log -> path )		11227426	0					
ANR	11227705	Callee	unlink		11227426	0					
ANR	11227706	Identifier	unlink		11227426	0					
ANR	11227707	ArgumentList	log -> path		11227426	1					
ANR	11227708	Argument	log -> path		11227426	0					
ANR	11227709	PtrMemberAccess	log -> path		11227426	0					
ANR	11227710	Identifier	log		11227426	0					
ANR	11227711	Identifier	path		11227426	1					
ANR	11227712	ReturnStatement	return 0 ;	561:4:26097:26105	11227426	11	True				
ANR	11227713	PrimaryExpression	0		11227426	0					
ANR	11227714	ReturnType	local int		11227426	1					
ANR	11227715	Identifier	log_append		11227426	2					
ANR	11227716	ParameterList	"struct log * log , unsigned char * data , size_t len"		11227426	3					
ANR	11227717	Parameter	struct log * log	501:21:24139:24153	11227426	0	True				
ANR	11227718	ParameterType	struct log *		11227426	0					
ANR	11227719	Identifier	log		11227426	1					
ANR	11227720	Parameter	unsigned char * data	501:38:24156:24174	11227426	1	True				
ANR	11227721	ParameterType	unsigned char *		11227426	0					
ANR	11227722	Identifier	data		11227426	1					
ANR	11227723	Parameter	size_t len	501:59:24177:24186	11227426	2	True				
ANR	11227724	ParameterType	size_t		11227426	0					
ANR	11227725	Identifier	len		11227426	1					
ANR	11227726	CFGEntryNode	ENTRY		11227426		True				
ANR	11227727	CFGExitNode	EXIT		11227426		True				
ANR	11227728	Symbol	lseek		11227426						
ANR	11227729	Symbol	SEEK_CUR		11227426						
ANR	11227730	Symbol	data		11227426						
ANR	11227731	Symbol	log -> fd		11227426						
ANR	11227732	Symbol	log -> end		11227426						
ANR	11227733	Symbol	log		11227426						
ANR	11227734	Symbol	log -> path		11227426						
ANR	11227735	Symbol	log -> tlen		11227426						
ANR	11227736	Symbol	log_mark		11227426						
ANR	11227737	Symbol	log -> tcrc		11227426						
ANR	11227738	Symbol	put		11227426						
ANR	11227739	Symbol	* log		11227426						
ANR	11227740	Symbol	NO_OP		11227426						
ANR	11227741	Symbol	buf		11227426						
ANR	11227742	Symbol	log_last		11227426						
ANR	11227743	Symbol	len		11227426						
ANR	11227744	Symbol	log -> last		11227426						
ANR	11227745	Symbol	end		11227426						
ANR	11227746	Symbol	ftruncate		11227426						
ANR	11227747	Symbol	crc32		11227426						
ANR	11227748	Symbol	log -> stored		11227426						
ANR	11227749	Symbol	MAX_STORE		11227426						
ANR	11227750	Symbol	write		11227426						
ANR	11227751	Function	log_replace	571:0:26618:27267							
ANR	11227752	FunctionDef	log_replace (struct log * log)		11227751	0					
ANR	11227753	CompoundStatement		572:0:26657:27267	11227751	0					
ANR	11227754	IdentifierDeclStatement	int ret ;	573:4:26663:26670	11227751	0	True				
ANR	11227755	IdentifierDecl	ret		11227751	0					
ANR	11227756	IdentifierDeclType	int		11227751	0					
ANR	11227757	Identifier	ret		11227751	1					
ANR	11227758	IdentifierDeclStatement	char * dest ;	574:4:26676:26686	11227751	1	True				
ANR	11227759	IdentifierDecl	* dest		11227751	0					
ANR	11227760	IdentifierDeclType	char *		11227751	0					
ANR	11227761	Identifier	dest		11227751	1					
ANR	11227762	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	577:4:26723:26747	11227751	2	True				
ANR	11227763	CallExpression	"strcpy ( log -> end , "".add"" )"		11227751	0					
ANR	11227764	Callee	strcpy		11227751	0					
ANR	11227765	Identifier	strcpy		11227751	0					
ANR	11227766	ArgumentList	log -> end		11227751	1					
ANR	11227767	Argument	log -> end		11227751	0					
ANR	11227768	PtrMemberAccess	log -> end		11227751	0					
ANR	11227769	Identifier	log		11227751	0					
ANR	11227770	Identifier	end		11227751	1					
ANR	11227771	Argument	""".add"""		11227751	1					
ANR	11227772	PrimaryExpression	""".add"""		11227751	0					
ANR	11227773	ExpressionStatement	unlink ( log -> path )	578:4:26753:26770	11227751	3	True				
ANR	11227774	CallExpression	unlink ( log -> path )		11227751	0					
ANR	11227775	Callee	unlink		11227751	0					
ANR	11227776	Identifier	unlink		11227751	0					
ANR	11227777	ArgumentList	log -> path		11227751	1					
ANR	11227778	Argument	log -> path		11227751	0					
ANR	11227779	PtrMemberAccess	log -> path		11227751	0					
ANR	11227780	Identifier	log		11227751	0					
ANR	11227781	Identifier	path		11227751	1					
ANR	11227782	ExpressionStatement	BAIL ( 3 )	579:4:26824:26831	11227751	4	True				
ANR	11227783	CallExpression	BAIL ( 3 )		11227751	0					
ANR	11227784	Callee	BAIL		11227751	0					
ANR	11227785	Identifier	BAIL		11227751	0					
ANR	11227786	ArgumentList	3		11227751	1					
ANR	11227787	Argument	3		11227751	0					
ANR	11227788	PrimaryExpression	3		11227751	0					
ANR	11227789	ExpressionStatement	"strcpy ( log -> end , "".dict"" )"	582:4:26909:26934	11227751	5	True				
ANR	11227790	CallExpression	"strcpy ( log -> end , "".dict"" )"		11227751	0					
ANR	11227791	Callee	strcpy		11227751	0					
ANR	11227792	Identifier	strcpy		11227751	0					
ANR	11227793	ArgumentList	log -> end		11227751	1					
ANR	11227794	Argument	log -> end		11227751	0					
ANR	11227795	PtrMemberAccess	log -> end		11227751	0					
ANR	11227796	Identifier	log		11227751	0					
ANR	11227797	Identifier	end		11227751	1					
ANR	11227798	Argument	""".dict"""		11227751	1					
ANR	11227799	PrimaryExpression	""".dict"""		11227751	0					
ANR	11227800	ExpressionStatement	dest = malloc ( strlen ( log -> path ) + 1 )	583:4:26940:26976	11227751	6	True				
ANR	11227801	AssignmentExpression	dest = malloc ( strlen ( log -> path ) + 1 )		11227751	0		=			
ANR	11227802	Identifier	dest		11227751	0					
ANR	11227803	CallExpression	malloc ( strlen ( log -> path ) + 1 )		11227751	1					
ANR	11227804	Callee	malloc		11227751	0					
ANR	11227805	Identifier	malloc		11227751	0					
ANR	11227806	ArgumentList	strlen ( log -> path ) + 1		11227751	1					
ANR	11227807	Argument	strlen ( log -> path ) + 1		11227751	0					
ANR	11227808	AdditiveExpression	strlen ( log -> path ) + 1		11227751	0		+			
ANR	11227809	CallExpression	strlen ( log -> path )		11227751	0					
ANR	11227810	Callee	strlen		11227751	0					
ANR	11227811	Identifier	strlen		11227751	0					
ANR	11227812	ArgumentList	log -> path		11227751	1					
ANR	11227813	Argument	log -> path		11227751	0					
ANR	11227814	PtrMemberAccess	log -> path		11227751	0					
ANR	11227815	Identifier	log		11227751	0					
ANR	11227816	Identifier	path		11227751	1					
ANR	11227817	PrimaryExpression	1		11227751	1					
ANR	11227818	IfStatement	if ( dest == NULL )		11227751	7					
ANR	11227819	Condition	dest == NULL	584:8:26986:26997	11227751	0	True				
ANR	11227820	EqualityExpression	dest == NULL		11227751	0		==			
ANR	11227821	Identifier	dest		11227751	0					
ANR	11227822	Identifier	NULL		11227751	1					
ANR	11227823	ReturnStatement	return - 2 ;	585:8:27008:27017	11227751	1	True				
ANR	11227824	UnaryOperationExpression	- 2		11227751	0					
ANR	11227825	UnaryOperator	-		11227751	0					
ANR	11227826	PrimaryExpression	2		11227751	1					
ANR	11227827	ExpressionStatement	"strcpy ( dest , log -> path )"	586:4:27023:27046	11227751	8	True				
ANR	11227828	CallExpression	"strcpy ( dest , log -> path )"		11227751	0					
ANR	11227829	Callee	strcpy		11227751	0					
ANR	11227830	Identifier	strcpy		11227751	0					
ANR	11227831	ArgumentList	dest		11227751	1					
ANR	11227832	Argument	dest		11227751	0					
ANR	11227833	Identifier	dest		11227751	0					
ANR	11227834	Argument	log -> path		11227751	1					
ANR	11227835	PtrMemberAccess	log -> path		11227751	0					
ANR	11227836	Identifier	log		11227751	0					
ANR	11227837	Identifier	path		11227751	1					
ANR	11227838	ExpressionStatement	"strcpy ( log -> end , "".temp"" )"	587:4:27052:27077	11227751	9	True				
ANR	11227839	CallExpression	"strcpy ( log -> end , "".temp"" )"		11227751	0					
ANR	11227840	Callee	strcpy		11227751	0					
ANR	11227841	Identifier	strcpy		11227751	0					
ANR	11227842	ArgumentList	log -> end		11227751	1					
ANR	11227843	Argument	log -> end		11227751	0					
ANR	11227844	PtrMemberAccess	log -> end		11227751	0					
ANR	11227845	Identifier	log		11227751	0					
ANR	11227846	Identifier	end		11227751	1					
ANR	11227847	Argument	""".temp"""		11227751	1					
ANR	11227848	PrimaryExpression	""".temp"""		11227751	0					
ANR	11227849	ExpressionStatement	"ret = rename ( log -> path , dest )"	588:4:27083:27112	11227751	10	True				
ANR	11227850	AssignmentExpression	"ret = rename ( log -> path , dest )"		11227751	0		=			
ANR	11227851	Identifier	ret		11227751	0					
ANR	11227852	CallExpression	"rename ( log -> path , dest )"		11227751	1					
ANR	11227853	Callee	rename		11227751	0					
ANR	11227854	Identifier	rename		11227751	0					
ANR	11227855	ArgumentList	log -> path		11227751	1					
ANR	11227856	Argument	log -> path		11227751	0					
ANR	11227857	PtrMemberAccess	log -> path		11227751	0					
ANR	11227858	Identifier	log		11227751	0					
ANR	11227859	Identifier	path		11227751	1					
ANR	11227860	Argument	dest		11227751	1					
ANR	11227861	Identifier	dest		11227751	0					
ANR	11227862	ExpressionStatement	free ( dest )	589:4:27118:27128	11227751	11	True				
ANR	11227863	CallExpression	free ( dest )		11227751	0					
ANR	11227864	Callee	free		11227751	0					
ANR	11227865	Identifier	free		11227751	0					
ANR	11227866	ArgumentList	dest		11227751	1					
ANR	11227867	Argument	dest		11227751	0					
ANR	11227868	Identifier	dest		11227751	0					
ANR	11227869	IfStatement	if ( ret && errno != ENOENT )		11227751	12					
ANR	11227870	Condition	ret && errno != ENOENT	590:8:27138:27159	11227751	0	True				
ANR	11227871	AndExpression	ret && errno != ENOENT		11227751	0		&&			
ANR	11227872	Identifier	ret		11227751	0					
ANR	11227873	EqualityExpression	errno != ENOENT		11227751	1		!=			
ANR	11227874	Identifier	errno		11227751	0					
ANR	11227875	Identifier	ENOENT		11227751	1					
ANR	11227876	ReturnStatement	return - 1 ;	591:8:27170:27179	11227751	1	True				
ANR	11227877	UnaryOperationExpression	- 1		11227751	0					
ANR	11227878	UnaryOperator	-		11227751	0					
ANR	11227879	PrimaryExpression	1		11227751	1					
ANR	11227880	ExpressionStatement	BAIL ( 4 )	592:4:27185:27192	11227751	13	True				
ANR	11227881	CallExpression	BAIL ( 4 )		11227751	0					
ANR	11227882	Callee	BAIL		11227751	0					
ANR	11227883	Identifier	BAIL		11227751	0					
ANR	11227884	ArgumentList	4		11227751	1					
ANR	11227885	Argument	4		11227751	0					
ANR	11227886	PrimaryExpression	4		11227751	0					
ANR	11227887	ReturnStatement	"return log_mark ( log , NO_OP ) ;"	595:4:27238:27265	11227751	14	True				
ANR	11227888	CallExpression	"log_mark ( log , NO_OP )"		11227751	0					
ANR	11227889	Callee	log_mark		11227751	0					
ANR	11227890	Identifier	log_mark		11227751	0					
ANR	11227891	ArgumentList	log		11227751	1					
ANR	11227892	Argument	log		11227751	0					
ANR	11227893	Identifier	log		11227751	0					
ANR	11227894	Argument	NO_OP		11227751	1					
ANR	11227895	Identifier	NO_OP		11227751	0					
ANR	11227896	ReturnType	local int		11227751	1					
ANR	11227897	Identifier	log_replace		11227751	2					
ANR	11227898	ParameterList	struct log * log		11227751	3					
ANR	11227899	Parameter	struct log * log	571:22:26640:26654	11227751	0	True				
ANR	11227900	ParameterType	struct log *		11227751	0					
ANR	11227901	Identifier	log		11227751	1					
ANR	11227902	CFGEntryNode	ENTRY		11227751		True				
ANR	11227903	CFGExitNode	EXIT		11227751		True				
ANR	11227904	Symbol	ret		11227751						
ANR	11227905	Symbol	malloc		11227751						
ANR	11227906	Symbol	errno		11227751						
ANR	11227907	Symbol	NULL		11227751						
ANR	11227908	Symbol	log -> end		11227751						
ANR	11227909	Symbol	log		11227751						
ANR	11227910	Symbol	log -> path		11227751						
ANR	11227911	Symbol	ENOENT		11227751						
ANR	11227912	Symbol	log_mark		11227751						
ANR	11227913	Symbol	dest		11227751						
ANR	11227914	Symbol	* log		11227751						
ANR	11227915	Symbol	NO_OP		11227751						
ANR	11227916	Symbol	strlen		11227751						
ANR	11227917	Symbol	rename		11227751						
ANR	11227918	Function	log_compress	608:0:27963:31634							
ANR	11227919	FunctionDef	"log_compress (struct log * log , unsigned char * data , size_t len)"		11227918	0					
ANR	11227920	CompoundStatement		609:0:28036:31634	11227918	0					
ANR	11227921	IdentifierDeclStatement	int fd ;	610:4:28042:28048	11227918	0	True				
ANR	11227922	IdentifierDecl	fd		11227918	0					
ANR	11227923	IdentifierDeclType	int		11227918	0					
ANR	11227924	Identifier	fd		11227918	1					
ANR	11227925	IdentifierDeclStatement	"uint got , max ;"	611:4:28054:28067	11227918	1	True				
ANR	11227926	IdentifierDecl	got		11227918	0					
ANR	11227927	IdentifierDeclType	uint		11227918	0					
ANR	11227928	Identifier	got		11227918	1					
ANR	11227929	IdentifierDecl	max		11227918	1					
ANR	11227930	IdentifierDeclType	uint		11227918	0					
ANR	11227931	Identifier	max		11227918	1					
ANR	11227932	IdentifierDeclStatement	ssize_t dict ;	612:4:28073:28085	11227918	2	True				
ANR	11227933	IdentifierDecl	dict		11227918	0					
ANR	11227934	IdentifierDeclType	ssize_t		11227918	0					
ANR	11227935	Identifier	dict		11227918	1					
ANR	11227936	IdentifierDeclStatement	off_t end ;	613:4:28091:28100	11227918	3	True				
ANR	11227937	IdentifierDecl	end		11227918	0					
ANR	11227938	IdentifierDeclType	off_t		11227918	0					
ANR	11227939	Identifier	end		11227918	1					
ANR	11227940	IdentifierDeclStatement	z_stream strm ;	614:4:28106:28119	11227918	4	True				
ANR	11227941	IdentifierDecl	strm		11227918	0					
ANR	11227942	IdentifierDeclType	z_stream		11227918	0					
ANR	11227943	Identifier	strm		11227918	1					
ANR	11227944	IdentifierDeclStatement	unsigned char buf [ DICT ] ;	615:4:28125:28148	11227918	5	True				
ANR	11227945	IdentifierDecl	buf [ DICT ]		11227918	0					
ANR	11227946	IdentifierDeclType	unsigned char [ DICT ]		11227918	0					
ANR	11227947	Identifier	buf		11227918	1					
ANR	11227948	Identifier	DICT		11227918	2					
ANR	11227949	IfStatement	if ( len )		11227918	6					
ANR	11227950	Condition	len	618:8:28205:28207	11227918	0	True				
ANR	11227951	Identifier	len		11227918	0					
ANR	11227952	CompoundStatement		10:13:173:173	11227918	1					
ANR	11227953	ExpressionStatement	strm . zalloc = Z_NULL	620:8:28272:28292	11227918	0	True				
ANR	11227954	AssignmentExpression	strm . zalloc = Z_NULL		11227918	0		=			
ANR	11227955	MemberAccess	strm . zalloc		11227918	0					
ANR	11227956	Identifier	strm		11227918	0					
ANR	11227957	Identifier	zalloc		11227918	1					
ANR	11227958	Identifier	Z_NULL		11227918	1					
ANR	11227959	ExpressionStatement	strm . zfree = Z_NULL	621:8:28302:28321	11227918	1	True				
ANR	11227960	AssignmentExpression	strm . zfree = Z_NULL		11227918	0		=			
ANR	11227961	MemberAccess	strm . zfree		11227918	0					
ANR	11227962	Identifier	strm		11227918	0					
ANR	11227963	Identifier	zfree		11227918	1					
ANR	11227964	Identifier	Z_NULL		11227918	1					
ANR	11227965	ExpressionStatement	strm . opaque = Z_NULL	622:8:28331:28351	11227918	2	True				
ANR	11227966	AssignmentExpression	strm . opaque = Z_NULL		11227918	0		=			
ANR	11227967	MemberAccess	strm . opaque		11227918	0					
ANR	11227968	Identifier	strm		11227918	0					
ANR	11227969	Identifier	opaque		11227918	1					
ANR	11227970	Identifier	Z_NULL		11227918	1					
ANR	11227971	IfStatement	"if ( deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY ) != Z_OK )"		11227918	3					
ANR	11227972	Condition	"deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY ) != Z_OK"	623:12:28365:28479	11227918	0	True				
ANR	11227973	EqualityExpression	"deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY ) != Z_OK"		11227918	0		!=			
ANR	11227974	CallExpression	"deflateInit2 ( & strm , Z_DEFAULT_COMPRESSION , Z_DEFLATED , - 15 , 8 , Z_DEFAULT_STRATEGY )"		11227918	0					
ANR	11227975	Callee	deflateInit2		11227918	0					
ANR	11227976	Identifier	deflateInit2		11227918	0					
ANR	11227977	ArgumentList	& strm		11227918	1					
ANR	11227978	Argument	& strm		11227918	0					
ANR	11227979	UnaryOperationExpression	& strm		11227918	0					
ANR	11227980	UnaryOperator	&		11227918	0					
ANR	11227981	Identifier	strm		11227918	1					
ANR	11227982	Argument	Z_DEFAULT_COMPRESSION		11227918	1					
ANR	11227983	Identifier	Z_DEFAULT_COMPRESSION		11227918	0					
ANR	11227984	Argument	Z_DEFLATED		11227918	2					
ANR	11227985	Identifier	Z_DEFLATED		11227918	0					
ANR	11227986	Argument	- 15		11227918	3					
ANR	11227987	UnaryOperationExpression	- 15		11227918	0					
ANR	11227988	UnaryOperator	-		11227918	0					
ANR	11227989	PrimaryExpression	15		11227918	1					
ANR	11227990	Argument	8		11227918	4					
ANR	11227991	PrimaryExpression	8		11227918	0					
ANR	11227992	Argument	Z_DEFAULT_STRATEGY		11227918	5					
ANR	11227993	Identifier	Z_DEFAULT_STRATEGY		11227918	0					
ANR	11227994	Identifier	Z_OK		11227918	1					
ANR	11227995	ReturnStatement	return - 2 ;	625:12:28494:28503	11227918	1	True				
ANR	11227996	UnaryOperationExpression	- 2		11227918	0					
ANR	11227997	UnaryOperator	-		11227918	0					
ANR	11227998	PrimaryExpression	2		11227918	1					
ANR	11227999	ExpressionStatement	"strcpy ( log -> end , "".dict"" )"	628:8:28586:28611	11227918	4	True				
ANR	11228000	CallExpression	"strcpy ( log -> end , "".dict"" )"		11227918	0					
ANR	11228001	Callee	strcpy		11227918	0					
ANR	11228002	Identifier	strcpy		11227918	0					
ANR	11228003	ArgumentList	log -> end		11227918	1					
ANR	11228004	Argument	log -> end		11227918	0					
ANR	11228005	PtrMemberAccess	log -> end		11227918	0					
ANR	11228006	Identifier	log		11227918	0					
ANR	11228007	Identifier	end		11227918	1					
ANR	11228008	Argument	""".dict"""		11227918	1					
ANR	11228009	PrimaryExpression	""".dict"""		11227918	0					
ANR	11228010	ExpressionStatement	"fd = open ( log -> path , O_RDONLY , 0 )"	629:8:28621:28654	11227918	5	True				
ANR	11228011	AssignmentExpression	"fd = open ( log -> path , O_RDONLY , 0 )"		11227918	0		=			
ANR	11228012	Identifier	fd		11227918	0					
ANR	11228013	CallExpression	"open ( log -> path , O_RDONLY , 0 )"		11227918	1					
ANR	11228014	Callee	open		11227918	0					
ANR	11228015	Identifier	open		11227918	0					
ANR	11228016	ArgumentList	log -> path		11227918	1					
ANR	11228017	Argument	log -> path		11227918	0					
ANR	11228018	PtrMemberAccess	log -> path		11227918	0					
ANR	11228019	Identifier	log		11227918	0					
ANR	11228020	Identifier	path		11227918	1					
ANR	11228021	Argument	O_RDONLY		11227918	1					
ANR	11228022	Identifier	O_RDONLY		11227918	0					
ANR	11228023	Argument	0		11227918	2					
ANR	11228024	PrimaryExpression	0		11227918	0					
ANR	11228025	IfStatement	if ( fd >= 0 )		11227918	6					
ANR	11228026	Condition	fd >= 0	630:12:28668:28674	11227918	0	True				
ANR	11228027	RelationalExpression	fd >= 0		11227918	0		>=			
ANR	11228028	Identifier	fd		11227918	0					
ANR	11228029	PrimaryExpression	0		11227918	1					
ANR	11228030	CompoundStatement		22:21:640:640	11227918	1					
ANR	11228031	ExpressionStatement	"dict = read ( fd , buf , DICT )"	631:12:28691:28717	11227918	0	True				
ANR	11228032	AssignmentExpression	"dict = read ( fd , buf , DICT )"		11227918	0		=			
ANR	11228033	Identifier	dict		11227918	0					
ANR	11228034	CallExpression	"read ( fd , buf , DICT )"		11227918	1					
ANR	11228035	Callee	read		11227918	0					
ANR	11228036	Identifier	read		11227918	0					
ANR	11228037	ArgumentList	fd		11227918	1					
ANR	11228038	Argument	fd		11227918	0					
ANR	11228039	Identifier	fd		11227918	0					
ANR	11228040	Argument	buf		11227918	1					
ANR	11228041	Identifier	buf		11227918	0					
ANR	11228042	Argument	DICT		11227918	2					
ANR	11228043	Identifier	DICT		11227918	0					
ANR	11228044	ExpressionStatement	close ( fd )	632:12:28731:28740	11227918	1	True				
ANR	11228045	CallExpression	close ( fd )		11227918	0					
ANR	11228046	Callee	close		11227918	0					
ANR	11228047	Identifier	close		11227918	0					
ANR	11228048	ArgumentList	fd		11227918	1					
ANR	11228049	Argument	fd		11227918	0					
ANR	11228050	Identifier	fd		11227918	0					
ANR	11228051	IfStatement	if ( dict < 0 )		11227918	2					
ANR	11228052	Condition	dict < 0	633:16:28758:28765	11227918	0	True				
ANR	11228053	RelationalExpression	dict < 0		11227918	0		<			
ANR	11228054	Identifier	dict		11227918	0					
ANR	11228055	PrimaryExpression	0		11227918	1					
ANR	11228056	CompoundStatement		25:26:731:731	11227918	1					
ANR	11228057	ExpressionStatement	deflateEnd ( & strm )	634:16:28786:28803	11227918	0	True				
ANR	11228058	CallExpression	deflateEnd ( & strm )		11227918	0					
ANR	11228059	Callee	deflateEnd		11227918	0					
ANR	11228060	Identifier	deflateEnd		11227918	0					
ANR	11228061	ArgumentList	& strm		11227918	1					
ANR	11228062	Argument	& strm		11227918	0					
ANR	11228063	UnaryOperationExpression	& strm		11227918	0					
ANR	11228064	UnaryOperator	&		11227918	0					
ANR	11228065	Identifier	strm		11227918	1					
ANR	11228066	ReturnStatement	return - 1 ;	635:16:28821:28830	11227918	1	True				
ANR	11228067	UnaryOperationExpression	- 1		11227918	0					
ANR	11228068	UnaryOperator	-		11227918	0					
ANR	11228069	PrimaryExpression	1		11227918	1					
ANR	11228070	IfStatement	if ( dict )		11227918	3					
ANR	11228071	Condition	dict	637:16:28862:28865	11227918	0	True				
ANR	11228072	Identifier	dict		11227918	0					
ANR	11228073	ExpressionStatement	"deflateSetDictionary ( & strm , buf , ( uint ) dict )"	638:16:28884:28928	11227918	1	True				
ANR	11228074	CallExpression	"deflateSetDictionary ( & strm , buf , ( uint ) dict )"		11227918	0					
ANR	11228075	Callee	deflateSetDictionary		11227918	0					
ANR	11228076	Identifier	deflateSetDictionary		11227918	0					
ANR	11228077	ArgumentList	& strm		11227918	1					
ANR	11228078	Argument	& strm		11227918	0					
ANR	11228079	UnaryOperationExpression	& strm		11227918	0					
ANR	11228080	UnaryOperator	&		11227918	0					
ANR	11228081	Identifier	strm		11227918	1					
ANR	11228082	Argument	buf		11227918	1					
ANR	11228083	Identifier	buf		11227918	0					
ANR	11228084	Argument	( uint ) dict		11227918	2					
ANR	11228085	CastExpression	( uint ) dict		11227918	0					
ANR	11228086	CastTarget	uint		11227918	0					
ANR	11228087	Identifier	dict		11227918	1					
ANR	11228088	ExpressionStatement	log_touch ( log )	640:8:28948:28962	11227918	7	True				
ANR	11228089	CallExpression	log_touch ( log )		11227918	0					
ANR	11228090	Callee	log_touch		11227918	0					
ANR	11228091	Identifier	log_touch		11227918	0					
ANR	11228092	ArgumentList	log		11227918	1					
ANR	11228093	Argument	log		11227918	0					
ANR	11228094	Identifier	log		11227918	0					
ANR	11228095	IfStatement	"if ( lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0 )"		11227918	8					
ANR	11228096	Condition	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"	644:12:29120:29279	11227918	0	True				
ANR	11228097	OrExpression	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0 || read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"		11227918	0		||			
ANR	11228098	RelationalExpression	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET ) < 0"		11227918	0		<			
ANR	11228099	CallExpression	"lseek ( log -> fd , log -> first - ( log -> back > 8 ? 2 : 1 ) , SEEK_SET )"		11227918	0					
ANR	11228100	Callee	lseek		11227918	0					
ANR	11228101	Identifier	lseek		11227918	0					
ANR	11228102	ArgumentList	log -> fd		11227918	1					
ANR	11228103	Argument	log -> fd		11227918	0					
ANR	11228104	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228105	Identifier	log		11227918	0					
ANR	11228106	Identifier	fd		11227918	1					
ANR	11228107	Argument	log -> first - ( log -> back > 8 ? 2 : 1 )		11227918	1					
ANR	11228108	AdditiveExpression	log -> first - ( log -> back > 8 ? 2 : 1 )		11227918	0		-			
ANR	11228109	PtrMemberAccess	log -> first		11227918	0					
ANR	11228110	Identifier	log		11227918	0					
ANR	11228111	Identifier	first		11227918	1					
ANR	11228112	ConditionalExpression	log -> back > 8 ? 2 : 1		11227918	1					
ANR	11228113	Condition	log -> back > 8		11227918	0					
ANR	11228114	RelationalExpression	log -> back > 8		11227918	0		>			
ANR	11228115	PtrMemberAccess	log -> back		11227918	0					
ANR	11228116	Identifier	log		11227918	0					
ANR	11228117	Identifier	back		11227918	1					
ANR	11228118	PrimaryExpression	8		11227918	1					
ANR	11228119	PrimaryExpression	2		11227918	1					
ANR	11228120	PrimaryExpression	1		11227918	2					
ANR	11228121	Argument	SEEK_SET		11227918	2					
ANR	11228122	Identifier	SEEK_SET		11227918	0					
ANR	11228123	PrimaryExpression	0		11227918	1					
ANR	11228124	OrExpression	"read ( log -> fd , buf , 1 ) != 1 || lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"		11227918	1		||			
ANR	11228125	EqualityExpression	"read ( log -> fd , buf , 1 ) != 1"		11227918	0		!=			
ANR	11228126	CallExpression	"read ( log -> fd , buf , 1 )"		11227918	0					
ANR	11228127	Callee	read		11227918	0					
ANR	11228128	Identifier	read		11227918	0					
ANR	11228129	ArgumentList	log -> fd		11227918	1					
ANR	11228130	Argument	log -> fd		11227918	0					
ANR	11228131	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228132	Identifier	log		11227918	0					
ANR	11228133	Identifier	fd		11227918	1					
ANR	11228134	Argument	buf		11227918	1					
ANR	11228135	Identifier	buf		11227918	0					
ANR	11228136	Argument	1		11227918	2					
ANR	11228137	PrimaryExpression	1		11227918	0					
ANR	11228138	PrimaryExpression	1		11227918	1					
ANR	11228139	RelationalExpression	"lseek ( log -> fd , - 1 , SEEK_CUR ) < 0"		11227918	1		<			
ANR	11228140	CallExpression	"lseek ( log -> fd , - 1 , SEEK_CUR )"		11227918	0					
ANR	11228141	Callee	lseek		11227918	0					
ANR	11228142	Identifier	lseek		11227918	0					
ANR	11228143	ArgumentList	log -> fd		11227918	1					
ANR	11228144	Argument	log -> fd		11227918	0					
ANR	11228145	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228146	Identifier	log		11227918	0					
ANR	11228147	Identifier	fd		11227918	1					
ANR	11228148	Argument	- 1		11227918	1					
ANR	11228149	UnaryOperationExpression	- 1		11227918	0					
ANR	11228150	UnaryOperator	-		11227918	0					
ANR	11228151	PrimaryExpression	1		11227918	1					
ANR	11228152	Argument	SEEK_CUR		11227918	2					
ANR	11228153	Identifier	SEEK_CUR		11227918	0					
ANR	11228154	PrimaryExpression	0		11227918	1					
ANR	11228155	CompoundStatement		38:76:1245:1245	11227918	1					
ANR	11228156	ExpressionStatement	deflateEnd ( & strm )	647:12:29296:29313	11227918	0	True				
ANR	11228157	CallExpression	deflateEnd ( & strm )		11227918	0					
ANR	11228158	Callee	deflateEnd		11227918	0					
ANR	11228159	Identifier	deflateEnd		11227918	0					
ANR	11228160	ArgumentList	& strm		11227918	1					
ANR	11228161	Argument	& strm		11227918	0					
ANR	11228162	UnaryOperationExpression	& strm		11227918	0					
ANR	11228163	UnaryOperator	&		11227918	0					
ANR	11228164	Identifier	strm		11227918	1					
ANR	11228165	ReturnStatement	return - 1 ;	648:12:29327:29336	11227918	1	True				
ANR	11228166	UnaryOperationExpression	- 1		11227918	0					
ANR	11228167	UnaryOperator	-		11227918	0					
ANR	11228168	PrimaryExpression	1		11227918	1					
ANR	11228169	ExpressionStatement	"deflatePrime ( & strm , ( 8 - log -> back ) & 7 , * buf )"	650:8:29356:29402	11227918	9	True				
ANR	11228170	CallExpression	"deflatePrime ( & strm , ( 8 - log -> back ) & 7 , * buf )"		11227918	0					
ANR	11228171	Callee	deflatePrime		11227918	0					
ANR	11228172	Identifier	deflatePrime		11227918	0					
ANR	11228173	ArgumentList	& strm		11227918	1					
ANR	11228174	Argument	& strm		11227918	0					
ANR	11228175	UnaryOperationExpression	& strm		11227918	0					
ANR	11228176	UnaryOperator	&		11227918	0					
ANR	11228177	Identifier	strm		11227918	1					
ANR	11228178	Argument	( 8 - log -> back ) & 7		11227918	1					
ANR	11228179	BitAndExpression	( 8 - log -> back ) & 7		11227918	0		&			
ANR	11228180	AdditiveExpression	8 - log -> back		11227918	0		-			
ANR	11228181	PrimaryExpression	8		11227918	0					
ANR	11228182	PtrMemberAccess	log -> back		11227918	1					
ANR	11228183	Identifier	log		11227918	0					
ANR	11228184	Identifier	back		11227918	1					
ANR	11228185	PrimaryExpression	7		11227918	1					
ANR	11228186	Argument	* buf		11227918	2					
ANR	11228187	UnaryOperationExpression	* buf		11227918	0					
ANR	11228188	UnaryOperator	*		11227918	0					
ANR	11228189	Identifier	buf		11227918	1					
ANR	11228190	ExpressionStatement	strm . next_in = data	653:8:29490:29509	11227918	10	True				
ANR	11228191	AssignmentExpression	strm . next_in = data		11227918	0		=			
ANR	11228192	MemberAccess	strm . next_in		11227918	0					
ANR	11228193	Identifier	strm		11227918	0					
ANR	11228194	Identifier	next_in		11227918	1					
ANR	11228195	Identifier	data		11227918	1					
ANR	11228196	ExpressionStatement	max = ( ( ( uint ) 0 - 1 ) >> 1 ) + 1	654:8:29519:29549	11227918	11	True				
ANR	11228197	AssignmentExpression	max = ( ( ( uint ) 0 - 1 ) >> 1 ) + 1		11227918	0		=			
ANR	11228198	Identifier	max		11227918	0					
ANR	11228199	AdditiveExpression	( ( ( uint ) 0 - 1 ) >> 1 ) + 1		11227918	1		+			
ANR	11228200	ShiftExpression	( ( uint ) 0 - 1 ) >> 1		11227918	0		>>			
ANR	11228201	AdditiveExpression	( uint ) 0 - 1		11227918	0		-			
ANR	11228202	CastExpression	( uint ) 0		11227918	0					
ANR	11228203	CastTarget	uint		11227918	0					
ANR	11228204	PrimaryExpression	0		11227918	1					
ANR	11228205	PrimaryExpression	1		11227918	1					
ANR	11228206	PrimaryExpression	1		11227918	1					
ANR	11228207	PrimaryExpression	1		11227918	1					
ANR	11228208	DoStatement	do		11227918	12					
ANR	11228209	CompoundStatement		47:11:1563:1563	11227918	0					
ANR	11228210	ExpressionStatement	strm . avail_in = len > max ? max : ( uint ) len	656:12:29614:29657	11227918	0	True				
ANR	11228211	AssignmentExpression	strm . avail_in = len > max ? max : ( uint ) len		11227918	0		=			
ANR	11228212	MemberAccess	strm . avail_in		11227918	0					
ANR	11228213	Identifier	strm		11227918	0					
ANR	11228214	Identifier	avail_in		11227918	1					
ANR	11228215	ConditionalExpression	len > max ? max : ( uint ) len		11227918	1					
ANR	11228216	Condition	len > max		11227918	0					
ANR	11228217	RelationalExpression	len > max		11227918	0		>			
ANR	11228218	Identifier	len		11227918	0					
ANR	11228219	Identifier	max		11227918	1					
ANR	11228220	Identifier	max		11227918	1					
ANR	11228221	CastExpression	( uint ) len		11227918	2					
ANR	11228222	CastTarget	uint		11227918	0					
ANR	11228223	Identifier	len		11227918	1					
ANR	11228224	ExpressionStatement	len -= strm . avail_in	657:12:29671:29691	11227918	1	True				
ANR	11228225	AssignmentExpression	len -= strm . avail_in		11227918	0		-=			
ANR	11228226	Identifier	len		11227918	0					
ANR	11228227	MemberAccess	strm . avail_in		11227918	1					
ANR	11228228	Identifier	strm		11227918	0					
ANR	11228229	Identifier	avail_in		11227918	1					
ANR	11228230	DoStatement	do		11227918	2					
ANR	11228231	CompoundStatement		50:15:1671:1671	11227918	0					
ANR	11228232	ExpressionStatement	strm . avail_out = DICT	659:16:29726:29747	11227918	0	True				
ANR	11228233	AssignmentExpression	strm . avail_out = DICT		11227918	0		=			
ANR	11228234	MemberAccess	strm . avail_out		11227918	0					
ANR	11228235	Identifier	strm		11227918	0					
ANR	11228236	Identifier	avail_out		11227918	1					
ANR	11228237	Identifier	DICT		11227918	1					
ANR	11228238	ExpressionStatement	strm . next_out = buf	660:16:29765:29784	11227918	1	True				
ANR	11228239	AssignmentExpression	strm . next_out = buf		11227918	0		=			
ANR	11228240	MemberAccess	strm . next_out		11227918	0					
ANR	11228241	Identifier	strm		11227918	0					
ANR	11228242	Identifier	next_out		11227918	1					
ANR	11228243	Identifier	buf		11227918	1					
ANR	11228244	ExpressionStatement	"deflate ( & strm , len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH )"	661:16:29802:29852	11227918	2	True				
ANR	11228245	CallExpression	"deflate ( & strm , len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH )"		11227918	0					
ANR	11228246	Callee	deflate		11227918	0					
ANR	11228247	Identifier	deflate		11227918	0					
ANR	11228248	ArgumentList	& strm		11227918	1					
ANR	11228249	Argument	& strm		11227918	0					
ANR	11228250	UnaryOperationExpression	& strm		11227918	0					
ANR	11228251	UnaryOperator	&		11227918	0					
ANR	11228252	Identifier	strm		11227918	1					
ANR	11228253	Argument	len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH		11227918	1					
ANR	11228254	ConditionalExpression	len ? Z_NO_FLUSH : Z_PARTIAL_FLUSH		11227918	0					
ANR	11228255	Condition	len		11227918	0					
ANR	11228256	Identifier	len		11227918	0					
ANR	11228257	Identifier	Z_NO_FLUSH		11227918	1					
ANR	11228258	Identifier	Z_PARTIAL_FLUSH		11227918	2					
ANR	11228259	ExpressionStatement	got = DICT - strm . avail_out	662:16:29870:29897	11227918	3	True				
ANR	11228260	AssignmentExpression	got = DICT - strm . avail_out		11227918	0		=			
ANR	11228261	Identifier	got		11227918	0					
ANR	11228262	AdditiveExpression	DICT - strm . avail_out		11227918	1		-			
ANR	11228263	Identifier	DICT		11227918	0					
ANR	11228264	MemberAccess	strm . avail_out		11227918	1					
ANR	11228265	Identifier	strm		11227918	0					
ANR	11228266	Identifier	avail_out		11227918	1					
ANR	11228267	IfStatement	"if ( got && write ( log -> fd , buf , got ) != got )"		11227918	4					
ANR	11228268	Condition	"got && write ( log -> fd , buf , got ) != got"	663:20:29919:29956	11227918	0	True				
ANR	11228269	AndExpression	"got && write ( log -> fd , buf , got ) != got"		11227918	0		&&			
ANR	11228270	Identifier	got		11227918	0					
ANR	11228271	EqualityExpression	"write ( log -> fd , buf , got ) != got"		11227918	1		!=			
ANR	11228272	CallExpression	"write ( log -> fd , buf , got )"		11227918	0					
ANR	11228273	Callee	write		11227918	0					
ANR	11228274	Identifier	write		11227918	0					
ANR	11228275	ArgumentList	log -> fd		11227918	1					
ANR	11228276	Argument	log -> fd		11227918	0					
ANR	11228277	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228278	Identifier	log		11227918	0					
ANR	11228279	Identifier	fd		11227918	1					
ANR	11228280	Argument	buf		11227918	1					
ANR	11228281	Identifier	buf		11227918	0					
ANR	11228282	Argument	got		11227918	2					
ANR	11228283	Identifier	got		11227918	0					
ANR	11228284	Identifier	got		11227918	1					
ANR	11228285	CompoundStatement		55:60:1922:1922	11227918	1					
ANR	11228286	ExpressionStatement	deflateEnd ( & strm )	664:20:29981:29998	11227918	0	True				
ANR	11228287	CallExpression	deflateEnd ( & strm )		11227918	0					
ANR	11228288	Callee	deflateEnd		11227918	0					
ANR	11228289	Identifier	deflateEnd		11227918	0					
ANR	11228290	ArgumentList	& strm		11227918	1					
ANR	11228291	Argument	& strm		11227918	0					
ANR	11228292	UnaryOperationExpression	& strm		11227918	0					
ANR	11228293	UnaryOperator	&		11227918	0					
ANR	11228294	Identifier	strm		11227918	1					
ANR	11228295	ReturnStatement	return - 1 ;	665:20:30020:30029	11227918	1	True				
ANR	11228296	UnaryOperationExpression	- 1		11227918	0					
ANR	11228297	UnaryOperator	-		11227918	0					
ANR	11228298	PrimaryExpression	1		11227918	1					
ANR	11228299	ExpressionStatement	log_touch ( log )	667:16:30065:30079	11227918	5	True				
ANR	11228300	CallExpression	log_touch ( log )		11227918	0					
ANR	11228301	Callee	log_touch		11227918	0					
ANR	11228302	Identifier	log_touch		11227918	0					
ANR	11228303	ArgumentList	log		11227918	1					
ANR	11228304	Argument	log		11227918	0					
ANR	11228305	Identifier	log		11227918	0					
ANR	11228306	Condition	strm . avail_out == 0	668:21:30102:30120	11227918	1	True				
ANR	11228307	EqualityExpression	strm . avail_out == 0		11227918	0		==			
ANR	11228308	MemberAccess	strm . avail_out		11227918	0					
ANR	11228309	Identifier	strm		11227918	0					
ANR	11228310	Identifier	avail_out		11227918	1					
ANR	11228311	PrimaryExpression	0		11227918	1					
ANR	11228312	Condition	len	669:17:30141:30143	11227918	1	True				
ANR	11228313	Identifier	len		11227918	0					
ANR	11228314	ExpressionStatement	deflateEnd ( & strm )	670:8:30155:30172	11227918	13	True				
ANR	11228315	CallExpression	deflateEnd ( & strm )		11227918	0					
ANR	11228316	Callee	deflateEnd		11227918	0					
ANR	11228317	Identifier	deflateEnd		11227918	0					
ANR	11228318	ArgumentList	& strm		11227918	1					
ANR	11228319	Argument	& strm		11227918	0					
ANR	11228320	UnaryOperationExpression	& strm		11227918	0					
ANR	11228321	UnaryOperator	&		11227918	0					
ANR	11228322	Identifier	strm		11227918	1					
ANR	11228323	ExpressionStatement	BAIL ( 5 )	671:8:30182:30189	11227918	14	True				
ANR	11228324	CallExpression	BAIL ( 5 )		11227918	0					
ANR	11228325	Callee	BAIL		11227918	0					
ANR	11228326	Identifier	BAIL		11227918	0					
ANR	11228327	ArgumentList	5		11227918	1					
ANR	11228328	Argument	5		11227918	0					
ANR	11228329	PrimaryExpression	5		11227918	0					
ANR	11228330	IfStatement	"if ( ( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0 || read ( log -> fd , buf , 1 ) != 1 )"		11227918	15					
ANR	11228331	Condition	"( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0 || read ( log -> fd , buf , 1 ) != 1"	677:12:30487:30575	11227918	0	True				
ANR	11228332	OrExpression	"( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0 || read ( log -> fd , buf , 1 ) != 1"		11227918	0		||			
ANR	11228333	RelationalExpression	"( log -> first = lseek ( log -> fd , - 1 , SEEK_CUR ) ) < 0"		11227918	0		<			
ANR	11228334	AssignmentExpression	"log -> first = lseek ( log -> fd , - 1 , SEEK_CUR )"		11227918	0		=			
ANR	11228335	PtrMemberAccess	log -> first		11227918	0					
ANR	11228336	Identifier	log		11227918	0					
ANR	11228337	Identifier	first		11227918	1					
ANR	11228338	CallExpression	"lseek ( log -> fd , - 1 , SEEK_CUR )"		11227918	1					
ANR	11228339	Callee	lseek		11227918	0					
ANR	11228340	Identifier	lseek		11227918	0					
ANR	11228341	ArgumentList	log -> fd		11227918	1					
ANR	11228342	Argument	log -> fd		11227918	0					
ANR	11228343	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228344	Identifier	log		11227918	0					
ANR	11228345	Identifier	fd		11227918	1					
ANR	11228346	Argument	- 1		11227918	1					
ANR	11228347	UnaryOperationExpression	- 1		11227918	0					
ANR	11228348	UnaryOperator	-		11227918	0					
ANR	11228349	PrimaryExpression	1		11227918	1					
ANR	11228350	Argument	SEEK_CUR		11227918	2					
ANR	11228351	Identifier	SEEK_CUR		11227918	0					
ANR	11228352	PrimaryExpression	0		11227918	1					
ANR	11228353	EqualityExpression	"read ( log -> fd , buf , 1 ) != 1"		11227918	1		!=			
ANR	11228354	CallExpression	"read ( log -> fd , buf , 1 )"		11227918	0					
ANR	11228355	Callee	read		11227918	0					
ANR	11228356	Identifier	read		11227918	0					
ANR	11228357	ArgumentList	log -> fd		11227918	1					
ANR	11228358	Argument	log -> fd		11227918	0					
ANR	11228359	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228360	Identifier	log		11227918	0					
ANR	11228361	Identifier	fd		11227918	1					
ANR	11228362	Argument	buf		11227918	1					
ANR	11228363	Identifier	buf		11227918	0					
ANR	11228364	Argument	1		11227918	2					
ANR	11228365	PrimaryExpression	1		11227918	0					
ANR	11228366	PrimaryExpression	1		11227918	1					
ANR	11228367	ReturnStatement	return - 1 ;	679:12:30590:30599	11227918	1	True				
ANR	11228368	UnaryOperationExpression	- 1		11227918	0					
ANR	11228369	UnaryOperator	-		11227918	0					
ANR	11228370	PrimaryExpression	1		11227918	1					
ANR	11228371	ExpressionStatement	log -> first ++	680:8:30609:30621	11227918	16	True				
ANR	11228372	PostIncDecOperationExpression	log -> first ++		11227918	0					
ANR	11228373	PtrMemberAccess	log -> first		11227918	0					
ANR	11228374	Identifier	log		11227918	0					
ANR	11228375	Identifier	first		11227918	1					
ANR	11228376	IncDec	++		11227918	1					
ANR	11228377	IfStatement	if ( * buf )		11227918	17					
ANR	11228378	Condition	* buf	681:12:30635:30638	11227918	0	True				
ANR	11228379	UnaryOperationExpression	* buf		11227918	0					
ANR	11228380	UnaryOperator	*		11227918	0					
ANR	11228381	Identifier	buf		11227918	1					
ANR	11228382	CompoundStatement		73:18:2604:2604	11227918	1					
ANR	11228383	ExpressionStatement	log -> back = 1	682:12:30655:30668	11227918	0	True				
ANR	11228384	AssignmentExpression	log -> back = 1		11227918	0		=			
ANR	11228385	PtrMemberAccess	log -> back		11227918	0					
ANR	11228386	Identifier	log		11227918	0					
ANR	11228387	Identifier	back		11227918	1					
ANR	11228388	PrimaryExpression	1		11227918	1					
ANR	11228389	WhileStatement	while ( ( * buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) ) ) == 0 )		11227918	1					
ANR	11228390	Condition	( * buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) ) ) == 0	683:19:30689:30732	11227918	0	True				
ANR	11228391	EqualityExpression	( * buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) ) ) == 0		11227918	0		==			
ANR	11228392	BitAndExpression	* buf & ( ( uint ) 1 << ( 8 - log -> back ++ ) )		11227918	0		&			
ANR	11228393	UnaryOperationExpression	* buf		11227918	0					
ANR	11228394	UnaryOperator	*		11227918	0					
ANR	11228395	Identifier	buf		11227918	1					
ANR	11228396	ShiftExpression	( uint ) 1 << ( 8 - log -> back ++ )		11227918	1		<<			
ANR	11228397	CastExpression	( uint ) 1		11227918	0					
ANR	11228398	CastTarget	uint		11227918	0					
ANR	11228399	PrimaryExpression	1		11227918	1					
ANR	11228400	AdditiveExpression	8 - log -> back ++		11227918	1		-			
ANR	11228401	PrimaryExpression	8		11227918	0					
ANR	11228402	PostIncDecOperationExpression	log -> back ++		11227918	1					
ANR	11228403	PtrMemberAccess	log -> back		11227918	0					
ANR	11228404	Identifier	log		11227918	0					
ANR	11228405	Identifier	back		11227918	1					
ANR	11228406	IncDec	++		11227918	1					
ANR	11228407	PrimaryExpression	0		11227918	1					
ANR	11228408	ExpressionStatement		684:16:30751:30751	11227918	1	True				
ANR	11228409	ElseStatement	else		11227918	0					
ANR	11228410	ExpressionStatement	log -> back = 10	687:12:30841:30855	11227918	0	True				
ANR	11228411	AssignmentExpression	log -> back = 10		11227918	0		=			
ANR	11228412	PtrMemberAccess	log -> back		11227918	0					
ANR	11228413	Identifier	log		11227918	0					
ANR	11228414	Identifier	back		11227918	1					
ANR	11228415	PrimaryExpression	10		11227918	1					
ANR	11228416	ExpressionStatement	log -> ccrc = log -> tcrc	690:8:30913:30934	11227918	18	True				
ANR	11228417	AssignmentExpression	log -> ccrc = log -> tcrc		11227918	0		=			
ANR	11228418	PtrMemberAccess	log -> ccrc		11227918	0					
ANR	11228419	Identifier	log		11227918	0					
ANR	11228420	Identifier	ccrc		11227918	1					
ANR	11228421	PtrMemberAccess	log -> tcrc		11227918	1					
ANR	11228422	Identifier	log		11227918	0					
ANR	11228423	Identifier	tcrc		11227918	1					
ANR	11228424	ExpressionStatement	log -> clen = log -> tlen	691:8:30944:30965	11227918	19	True				
ANR	11228425	AssignmentExpression	log -> clen = log -> tlen		11227918	0		=			
ANR	11228426	PtrMemberAccess	log -> clen		11227918	0					
ANR	11228427	Identifier	log		11227918	0					
ANR	11228428	Identifier	clen		11227918	1					
ANR	11228429	PtrMemberAccess	log -> tlen		11227918	1					
ANR	11228430	Identifier	log		11227918	0					
ANR	11228431	Identifier	tlen		11227918	1					
ANR	11228432	ElseStatement	else		11227918	0					
ANR	11228433	CompoundStatement		85:9:2945:2945	11227918	0					
ANR	11228434	ExpressionStatement	log -> tcrc = log -> ccrc	695:8:31057:31078	11227918	0	True				
ANR	11228435	AssignmentExpression	log -> tcrc = log -> ccrc		11227918	0		=			
ANR	11228436	PtrMemberAccess	log -> tcrc		11227918	0					
ANR	11228437	Identifier	log		11227918	0					
ANR	11228438	Identifier	tcrc		11227918	1					
ANR	11228439	PtrMemberAccess	log -> ccrc		11227918	1					
ANR	11228440	Identifier	log		11227918	0					
ANR	11228441	Identifier	ccrc		11227918	1					
ANR	11228442	ExpressionStatement	log -> tlen = log -> clen	696:8:31088:31109	11227918	1	True				
ANR	11228443	AssignmentExpression	log -> tlen = log -> clen		11227918	0		=			
ANR	11228444	PtrMemberAccess	log -> tlen		11227918	0					
ANR	11228445	Identifier	log		11227918	0					
ANR	11228446	Identifier	tlen		11227918	1					
ANR	11228447	PtrMemberAccess	log -> clen		11227918	1					
ANR	11228448	Identifier	log		11227918	0					
ANR	11228449	Identifier	clen		11227918	1					
ANR	11228450	ExpressionStatement	log -> last = log -> first	700:4:31166:31188	11227918	7	True				
ANR	11228451	AssignmentExpression	log -> last = log -> first		11227918	0		=			
ANR	11228452	PtrMemberAccess	log -> last		11227918	0					
ANR	11228453	Identifier	log		11227918	0					
ANR	11228454	Identifier	last		11227918	1					
ANR	11228455	PtrMemberAccess	log -> first		11227918	1					
ANR	11228456	Identifier	log		11227918	0					
ANR	11228457	Identifier	first		11227918	1					
ANR	11228458	ExpressionStatement	log -> stored = 0	701:4:31194:31209	11227918	8	True				
ANR	11228459	AssignmentExpression	log -> stored = 0		11227918	0		=			
ANR	11228460	PtrMemberAccess	log -> stored		11227918	0					
ANR	11228461	Identifier	log		11227918	0					
ANR	11228462	Identifier	stored		11227918	1					
ANR	11228463	PrimaryExpression	0		11227918	1					
ANR	11228464	ExpressionStatement	"PUT4 ( buf , log -> tcrc )"	702:4:31215:31235	11227918	9	True				
ANR	11228465	CallExpression	"PUT4 ( buf , log -> tcrc )"		11227918	0					
ANR	11228466	Callee	PUT4		11227918	0					
ANR	11228467	Identifier	PUT4		11227918	0					
ANR	11228468	ArgumentList	buf		11227918	1					
ANR	11228469	Argument	buf		11227918	0					
ANR	11228470	Identifier	buf		11227918	0					
ANR	11228471	Argument	log -> tcrc		11227918	1					
ANR	11228472	PtrMemberAccess	log -> tcrc		11227918	0					
ANR	11228473	Identifier	log		11227918	0					
ANR	11228474	Identifier	tcrc		11227918	1					
ANR	11228475	ExpressionStatement	"PUT4 ( buf + 4 , log -> tlen )"	703:4:31241:31265	11227918	10	True				
ANR	11228476	CallExpression	"PUT4 ( buf + 4 , log -> tlen )"		11227918	0					
ANR	11228477	Callee	PUT4		11227918	0					
ANR	11228478	Identifier	PUT4		11227918	0					
ANR	11228479	ArgumentList	buf + 4		11227918	1					
ANR	11228480	Argument	buf + 4		11227918	0					
ANR	11228481	AdditiveExpression	buf + 4		11227918	0		+			
ANR	11228482	Identifier	buf		11227918	0					
ANR	11228483	PrimaryExpression	4		11227918	1					
ANR	11228484	Argument	log -> tlen		11227918	1					
ANR	11228485	PtrMemberAccess	log -> tlen		11227918	0					
ANR	11228486	Identifier	log		11227918	0					
ANR	11228487	Identifier	tlen		11227918	1					
ANR	11228488	IfStatement	"if ( log_last ( log , 1 ) || write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end ) )"		11227918	11					
ANR	11228489	Condition	"log_last ( log , 1 ) || write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"	704:8:31275:31399	11227918	0	True				
ANR	11228490	OrExpression	"log_last ( log , 1 ) || write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		11227918	0		||			
ANR	11228491	CallExpression	"log_last ( log , 1 )"		11227918	0					
ANR	11228492	Callee	log_last		11227918	0					
ANR	11228493	Identifier	log_last		11227918	0					
ANR	11228494	ArgumentList	log		11227918	1					
ANR	11228495	Argument	log		11227918	0					
ANR	11228496	Identifier	log		11227918	0					
ANR	11228497	Argument	1		11227918	1					
ANR	11228498	PrimaryExpression	1		11227918	0					
ANR	11228499	OrExpression	"write ( log -> fd , buf , 8 ) != 8 || ( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		11227918	1		||			
ANR	11228500	EqualityExpression	"write ( log -> fd , buf , 8 ) != 8"		11227918	0		!=			
ANR	11228501	CallExpression	"write ( log -> fd , buf , 8 )"		11227918	0					
ANR	11228502	Callee	write		11227918	0					
ANR	11228503	Identifier	write		11227918	0					
ANR	11228504	ArgumentList	log -> fd		11227918	1					
ANR	11228505	Argument	log -> fd		11227918	0					
ANR	11228506	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228507	Identifier	log		11227918	0					
ANR	11228508	Identifier	fd		11227918	1					
ANR	11228509	Argument	buf		11227918	1					
ANR	11228510	Identifier	buf		11227918	0					
ANR	11228511	Argument	8		11227918	2					
ANR	11228512	PrimaryExpression	8		11227918	0					
ANR	11228513	PrimaryExpression	8		11227918	1					
ANR	11228514	OrExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0 || ftruncate ( log -> fd , end )"		11227918	1		||			
ANR	11228515	RelationalExpression	"( end = lseek ( log -> fd , 0 , SEEK_CUR ) ) < 0"		11227918	0		<			
ANR	11228516	AssignmentExpression	"end = lseek ( log -> fd , 0 , SEEK_CUR )"		11227918	0		=			
ANR	11228517	Identifier	end		11227918	0					
ANR	11228518	CallExpression	"lseek ( log -> fd , 0 , SEEK_CUR )"		11227918	1					
ANR	11228519	Callee	lseek		11227918	0					
ANR	11228520	Identifier	lseek		11227918	0					
ANR	11228521	ArgumentList	log -> fd		11227918	1					
ANR	11228522	Argument	log -> fd		11227918	0					
ANR	11228523	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228524	Identifier	log		11227918	0					
ANR	11228525	Identifier	fd		11227918	1					
ANR	11228526	Argument	0		11227918	1					
ANR	11228527	PrimaryExpression	0		11227918	0					
ANR	11228528	Argument	SEEK_CUR		11227918	2					
ANR	11228529	Identifier	SEEK_CUR		11227918	0					
ANR	11228530	PrimaryExpression	0		11227918	1					
ANR	11228531	CallExpression	"ftruncate ( log -> fd , end )"		11227918	1					
ANR	11228532	Callee	ftruncate		11227918	0					
ANR	11228533	Identifier	ftruncate		11227918	0					
ANR	11228534	ArgumentList	log -> fd		11227918	1					
ANR	11228535	Argument	log -> fd		11227918	0					
ANR	11228536	PtrMemberAccess	log -> fd		11227918	0					
ANR	11228537	Identifier	log		11227918	0					
ANR	11228538	Identifier	fd		11227918	1					
ANR	11228539	Argument	end		11227918	1					
ANR	11228540	Identifier	end		11227918	0					
ANR	11228541	ReturnStatement	return - 1 ;	706:8:31410:31419	11227918	1	True				
ANR	11228542	UnaryOperationExpression	- 1		11227918	0					
ANR	11228543	UnaryOperator	-		11227918	0					
ANR	11228544	PrimaryExpression	1		11227918	1					
ANR	11228545	ExpressionStatement	BAIL ( 6 )	707:4:31425:31432	11227918	12	True				
ANR	11228546	CallExpression	BAIL ( 6 )		11227918	0					
ANR	11228547	Callee	BAIL		11227918	0					
ANR	11228548	Identifier	BAIL		11227918	0					
ANR	11228549	ArgumentList	6		11227918	1					
ANR	11228550	Argument	6		11227918	0					
ANR	11228551	PrimaryExpression	6		11227918	0					
ANR	11228552	IfStatement	"if ( log_mark ( log , REPLACE_OP ) )"		11227918	13					
ANR	11228553	Condition	"log_mark ( log , REPLACE_OP )"	710:8:31492:31516	11227918	0	True				
ANR	11228554	CallExpression	"log_mark ( log , REPLACE_OP )"		11227918	0					
ANR	11228555	Callee	log_mark		11227918	0					
ANR	11228556	Identifier	log_mark		11227918	0					
ANR	11228557	ArgumentList	log		11227918	1					
ANR	11228558	Argument	log		11227918	0					
ANR	11228559	Identifier	log		11227918	0					
ANR	11228560	Argument	REPLACE_OP		11227918	1					
ANR	11228561	Identifier	REPLACE_OP		11227918	0					
ANR	11228562	ReturnStatement	return - 1 ;	711:8:31527:31536	11227918	1	True				
ANR	11228563	UnaryOperationExpression	- 1		11227918	0					
ANR	11228564	UnaryOperator	-		11227918	0					
ANR	11228565	PrimaryExpression	1		11227918	1					
ANR	11228566	ReturnStatement	return log_replace ( log ) ;	714:4:31609:31632	11227918	14	True				
ANR	11228567	CallExpression	log_replace ( log )		11227918	0					
ANR	11228568	Callee	log_replace		11227918	0					
ANR	11228569	Identifier	log_replace		11227918	0					
ANR	11228570	ArgumentList	log		11227918	1					
ANR	11228571	Argument	log		11227918	0					
ANR	11228572	Identifier	log		11227918	0					
ANR	11228573	ReturnType	local int		11227918	1					
ANR	11228574	Identifier	log_compress		11227918	2					
ANR	11228575	ParameterList	"struct log * log , unsigned char * data , size_t len"		11227918	3					
ANR	11228576	Parameter	struct log * log	608:23:27986:28000	11227918	0	True				
ANR	11228577	ParameterType	struct log *		11227918	0					
ANR	11228578	Identifier	log		11227918	1					
ANR	11228579	Parameter	unsigned char * data	608:40:28003:28021	11227918	1	True				
ANR	11228580	ParameterType	unsigned char *		11227918	0					
ANR	11228581	Identifier	data		11227918	1					
ANR	11228582	Parameter	size_t len	608:61:28024:28033	11227918	2	True				
ANR	11228583	ParameterType	size_t		11227918	0					
ANR	11228584	Identifier	len		11227918	1					
ANR	11228585	CFGEntryNode	ENTRY		11227918		True				
ANR	11228586	CFGExitNode	EXIT		11227918		True				
ANR	11228587	Symbol	data		11227918						
ANR	11228588	Symbol	log -> end		11227918						
ANR	11228589	Symbol	REPLACE_OP		11227918						
ANR	11228590	Symbol	strm . zalloc		11227918						
ANR	11228591	Symbol	Z_DEFLATED		11227918						
ANR	11228592	Symbol	got		11227918						
ANR	11228593	Symbol	strm . next_in		11227918						
ANR	11228594	Symbol	log_replace		11227918						
ANR	11228595	Symbol	strm . opaque		11227918						
ANR	11228596	Symbol	len		11227918						
ANR	11228597	Symbol	DICT		11227918						
ANR	11228598	Symbol	dict		11227918						
ANR	11228599	Symbol	Z_PARTIAL_FLUSH		11227918						
ANR	11228600	Symbol	write		11227918						
ANR	11228601	Symbol	Z_DEFAULT_STRATEGY		11227918						
ANR	11228602	Symbol	* buf		11227918						
ANR	11228603	Symbol	read		11227918						
ANR	11228604	Symbol	log -> first		11227918						
ANR	11228605	Symbol	log -> tcrc		11227918						
ANR	11228606	Symbol	log -> back		11227918						
ANR	11228607	Symbol	* log		11227918						
ANR	11228608	Symbol	log_last		11227918						
ANR	11228609	Symbol	strm . next_out		11227918						
ANR	11228610	Symbol	log -> clen		11227918						
ANR	11228611	Symbol	log -> stored		11227918						
ANR	11228612	Symbol	fd		11227918						
ANR	11228613	Symbol	Z_NULL		11227918						
ANR	11228614	Symbol	strm . avail_in		11227918						
ANR	11228615	Symbol	deflateInit2		11227918						
ANR	11228616	Symbol	lseek		11227918						
ANR	11228617	Symbol	SEEK_CUR		11227918						
ANR	11228618	Symbol	log		11227918						
ANR	11228619	Symbol	& strm		11227918						
ANR	11228620	Symbol	Z_OK		11227918						
ANR	11228621	Symbol	Z_NO_FLUSH		11227918						
ANR	11228622	Symbol	end		11227918						
ANR	11228623	Symbol	SEEK_SET		11227918						
ANR	11228624	Symbol	log -> fd		11227918						
ANR	11228625	Symbol	max		11227918						
ANR	11228626	Symbol	log -> path		11227918						
ANR	11228627	Symbol	strm		11227918						
ANR	11228628	Symbol	log -> tlen		11227918						
ANR	11228629	Symbol	log_mark		11227918						
ANR	11228630	Symbol	Z_DEFAULT_COMPRESSION		11227918						
ANR	11228631	Symbol	buf		11227918						
ANR	11228632	Symbol	O_RDONLY		11227918						
ANR	11228633	Symbol	strm . avail_out		11227918						
ANR	11228634	Symbol	log -> last		11227918						
ANR	11228635	Symbol	ftruncate		11227918						
ANR	11228636	Symbol	strm . zfree		11227918						
ANR	11228637	Symbol	log -> ccrc		11227918						
ANR	11228638	Symbol	open		11227918						
ANR	11228639	Function	log_log	718:0:31684:32084							
ANR	11228640	FunctionDef	"log_log (struct log * log , int op , char * record)"		11228639	0					
ANR	11228641	CompoundStatement		719:0:31742:32084	11228639	0					
ANR	11228642	IdentifierDeclStatement	time_t now ;	720:4:31748:31758	11228639	0	True				
ANR	11228643	IdentifierDecl	now		11228639	0					
ANR	11228644	IdentifierDeclType	time_t		11228639	0					
ANR	11228645	Identifier	now		11228639	1					
ANR	11228646	IdentifierDeclStatement	FILE * rec ;	721:4:31764:31773	11228639	1	True				
ANR	11228647	IdentifierDecl	* rec		11228639	0					
ANR	11228648	IdentifierDeclType	FILE *		11228639	0					
ANR	11228649	Identifier	rec		11228639	1					
ANR	11228650	ExpressionStatement	now = time ( NULL )	723:4:31780:31796	11228639	2	True				
ANR	11228651	AssignmentExpression	now = time ( NULL )		11228639	0		=			
ANR	11228652	Identifier	now		11228639	0					
ANR	11228653	CallExpression	time ( NULL )		11228639	1					
ANR	11228654	Callee	time		11228639	0					
ANR	11228655	Identifier	time		11228639	0					
ANR	11228656	ArgumentList	NULL		11228639	1					
ANR	11228657	Argument	NULL		11228639	0					
ANR	11228658	Identifier	NULL		11228639	0					
ANR	11228659	ExpressionStatement	"strcpy ( log -> end , "".repairs"" )"	724:4:31802:31830	11228639	3	True				
ANR	11228660	CallExpression	"strcpy ( log -> end , "".repairs"" )"		11228639	0					
ANR	11228661	Callee	strcpy		11228639	0					
ANR	11228662	Identifier	strcpy		11228639	0					
ANR	11228663	ArgumentList	log -> end		11228639	1					
ANR	11228664	Argument	log -> end		11228639	0					
ANR	11228665	PtrMemberAccess	log -> end		11228639	0					
ANR	11228666	Identifier	log		11228639	0					
ANR	11228667	Identifier	end		11228639	1					
ANR	11228668	Argument	""".repairs"""		11228639	1					
ANR	11228669	PrimaryExpression	""".repairs"""		11228639	0					
ANR	11228670	ExpressionStatement	"rec = fopen ( log -> path , ""a"" )"	725:4:31836:31863	11228639	4	True				
ANR	11228671	AssignmentExpression	"rec = fopen ( log -> path , ""a"" )"		11228639	0		=			
ANR	11228672	Identifier	rec		11228639	0					
ANR	11228673	CallExpression	"fopen ( log -> path , ""a"" )"		11228639	1					
ANR	11228674	Callee	fopen		11228639	0					
ANR	11228675	Identifier	fopen		11228639	0					
ANR	11228676	ArgumentList	log -> path		11228639	1					
ANR	11228677	Argument	log -> path		11228639	0					
ANR	11228678	PtrMemberAccess	log -> path		11228639	0					
ANR	11228679	Identifier	log		11228639	0					
ANR	11228680	Identifier	path		11228639	1					
ANR	11228681	Argument	"""a"""		11228639	1					
ANR	11228682	PrimaryExpression	"""a"""		11228639	0					
ANR	11228683	IfStatement	if ( rec == NULL )		11228639	5					
ANR	11228684	Condition	rec == NULL	726:8:31873:31883	11228639	0	True				
ANR	11228685	EqualityExpression	rec == NULL		11228639	0		==			
ANR	11228686	Identifier	rec		11228639	0					
ANR	11228687	Identifier	NULL		11228639	1					
ANR	11228688	ReturnStatement	return ;	727:8:31894:31900	11228639	1	True				
ANR	11228689	ExpressionStatement	"fprintf ( rec , ""%.24s %s recovery: %s\\n"" , ctime ( & now ) , op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" ) , record )"	728:4:31906:32053	11228639	6	True				
ANR	11228690	CallExpression	"fprintf ( rec , ""%.24s %s recovery: %s\\n"" , ctime ( & now ) , op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" ) , record )"		11228639	0					
ANR	11228691	Callee	fprintf		11228639	0					
ANR	11228692	Identifier	fprintf		11228639	0					
ANR	11228693	ArgumentList	rec		11228639	1					
ANR	11228694	Argument	rec		11228639	0					
ANR	11228695	Identifier	rec		11228639	0					
ANR	11228696	Argument	"""%.24s %s recovery: %s\\n"""		11228639	1					
ANR	11228697	PrimaryExpression	"""%.24s %s recovery: %s\\n"""		11228639	0					
ANR	11228698	Argument	ctime ( & now )		11228639	2					
ANR	11228699	CallExpression	ctime ( & now )		11228639	0					
ANR	11228700	Callee	ctime		11228639	0					
ANR	11228701	Identifier	ctime		11228639	0					
ANR	11228702	ArgumentList	& now		11228639	1					
ANR	11228703	Argument	& now		11228639	0					
ANR	11228704	UnaryOperationExpression	& now		11228639	0					
ANR	11228705	UnaryOperator	&		11228639	0					
ANR	11228706	Identifier	now		11228639	1					
ANR	11228707	Argument	"op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" )"		11228639	3					
ANR	11228708	ConditionalExpression	"op == APPEND_OP ? ""append"" : ( op == COMPRESS_OP ? ""compress"" : ""replace"" )"		11228639	0					
ANR	11228709	Condition	op == APPEND_OP		11228639	0					
ANR	11228710	EqualityExpression	op == APPEND_OP		11228639	0		==			
ANR	11228711	Identifier	op		11228639	0					
ANR	11228712	Identifier	APPEND_OP		11228639	1					
ANR	11228713	PrimaryExpression	"""append"""		11228639	1					
ANR	11228714	ConditionalExpression	"op == COMPRESS_OP ? ""compress"" : ""replace"""		11228639	2					
ANR	11228715	Condition	op == COMPRESS_OP		11228639	0					
ANR	11228716	EqualityExpression	op == COMPRESS_OP		11228639	0		==			
ANR	11228717	Identifier	op		11228639	0					
ANR	11228718	Identifier	COMPRESS_OP		11228639	1					
ANR	11228719	PrimaryExpression	"""compress"""		11228639	1					
ANR	11228720	PrimaryExpression	"""replace"""		11228639	2					
ANR	11228721	Argument	record		11228639	4					
ANR	11228722	Identifier	record		11228639	0					
ANR	11228723	ExpressionStatement	fclose ( rec )	730:4:32059:32070	11228639	7	True				
ANR	11228724	CallExpression	fclose ( rec )		11228639	0					
ANR	11228725	Callee	fclose		11228639	0					
ANR	11228726	Identifier	fclose		11228639	0					
ANR	11228727	ArgumentList	rec		11228639	1					
ANR	11228728	Argument	rec		11228639	0					
ANR	11228729	Identifier	rec		11228639	0					
ANR	11228730	ReturnStatement	return ;	731:4:32076:32082	11228639	8	True				
ANR	11228731	ReturnType	local void		11228639	1					
ANR	11228732	Identifier	log_log		11228639	2					
ANR	11228733	ParameterList	"struct log * log , int op , char * record"		11228639	3					
ANR	11228734	Parameter	struct log * log	718:19:31703:31717	11228639	0	True				
ANR	11228735	ParameterType	struct log *		11228639	0					
ANR	11228736	Identifier	log		11228639	1					
ANR	11228737	Parameter	int op	718:36:31720:31725	11228639	1	True				
ANR	11228738	ParameterType	int		11228639	0					
ANR	11228739	Identifier	op		11228639	1					
ANR	11228740	Parameter	char * record	718:44:31728:31739	11228639	2	True				
ANR	11228741	ParameterType	char *		11228639	0					
ANR	11228742	Identifier	record		11228639	1					
ANR	11228743	CFGEntryNode	ENTRY		11228639		True				
ANR	11228744	CFGExitNode	EXIT		11228639		True				
ANR	11228745	Symbol	op		11228639						
ANR	11228746	Symbol	fopen		11228639						
ANR	11228747	Symbol	NULL		11228639						
ANR	11228748	Symbol	log -> end		11228639						
ANR	11228749	Symbol	log		11228639						
ANR	11228750	Symbol	log -> path		11228639						
ANR	11228751	Symbol	* log		11228639						
ANR	11228752	Symbol	COMPRESS_OP		11228639						
ANR	11228753	Symbol	rec		11228639						
ANR	11228754	Symbol	record		11228639						
ANR	11228755	Symbol	now		11228639						
ANR	11228756	Symbol	ctime		11228639						
ANR	11228757	Symbol	time		11228639						
ANR	11228758	Symbol	& now		11228639						
ANR	11228759	Symbol	APPEND_OP		11228639						
ANR	11228760	Function	log_recover	738:0:32347:33898							
ANR	11228761	FunctionDef	"log_recover (struct log * log , int op)"		11228760	0					
ANR	11228762	CompoundStatement		739:0:32394:33898	11228760	0					
ANR	11228763	IdentifierDeclStatement	"int fd , ret = 0 ;"	740:4:32400:32415	11228760	0	True				
ANR	11228764	IdentifierDecl	fd		11228760	0					
ANR	11228765	IdentifierDeclType	int		11228760	0					
ANR	11228766	Identifier	fd		11228760	1					
ANR	11228767	IdentifierDecl	ret = 0		11228760	1					
ANR	11228768	IdentifierDeclType	int		11228760	0					
ANR	11228769	Identifier	ret		11228760	1					
ANR	11228770	AssignmentExpression	ret = 0		11228760	2		=			
ANR	11228771	Identifier	ret		11228760	0					
ANR	11228772	PrimaryExpression	0		11228760	1					
ANR	11228773	IdentifierDeclStatement	unsigned char * data = NULL ;	741:4:32421:32447	11228760	1	True				
ANR	11228774	IdentifierDecl	* data = NULL		11228760	0					
ANR	11228775	IdentifierDeclType	unsigned char *		11228760	0					
ANR	11228776	Identifier	data		11228760	1					
ANR	11228777	AssignmentExpression	* data = NULL		11228760	2		=			
ANR	11228778	Identifier	NULL		11228760	0					
ANR	11228779	Identifier	NULL		11228760	1					
ANR	11228780	IdentifierDeclStatement	size_t len = 0 ;	742:4:32453:32467	11228760	2	True				
ANR	11228781	IdentifierDecl	len = 0		11228760	0					
ANR	11228782	IdentifierDeclType	size_t		11228760	0					
ANR	11228783	Identifier	len		11228760	1					
ANR	11228784	AssignmentExpression	len = 0		11228760	2		=			
ANR	11228785	Identifier	len		11228760	0					
ANR	11228786	PrimaryExpression	0		11228760	1					
ANR	11228787	IdentifierDeclStatement	struct stat st ;	743:4:32473:32487	11228760	3	True				
ANR	11228788	IdentifierDecl	st		11228760	0					
ANR	11228789	IdentifierDeclType	struct stat		11228760	0					
ANR	11228790	Identifier	st		11228760	1					
ANR	11228791	ExpressionStatement	"log_log ( log , op , ""start"" )"	746:4:32517:32542	11228760	4	True				
ANR	11228792	CallExpression	"log_log ( log , op , ""start"" )"		11228760	0					
ANR	11228793	Callee	log_log		11228760	0					
ANR	11228794	Identifier	log_log		11228760	0					
ANR	11228795	ArgumentList	log		11228760	1					
ANR	11228796	Argument	log		11228760	0					
ANR	11228797	Identifier	log		11228760	0					
ANR	11228798	Argument	op		11228760	1					
ANR	11228799	Identifier	op		11228760	0					
ANR	11228800	Argument	"""start"""		11228760	2					
ANR	11228801	PrimaryExpression	"""start"""		11228760	0					
ANR	11228802	IfStatement	if ( op == APPEND_OP || op == COMPRESS_OP )		11228760	5					
ANR	11228803	Condition	op == APPEND_OP || op == COMPRESS_OP	749:8:32605:32640	11228760	0	True				
ANR	11228804	OrExpression	op == APPEND_OP || op == COMPRESS_OP		11228760	0		||			
ANR	11228805	EqualityExpression	op == APPEND_OP		11228760	0		==			
ANR	11228806	Identifier	op		11228760	0					
ANR	11228807	Identifier	APPEND_OP		11228760	1					
ANR	11228808	EqualityExpression	op == COMPRESS_OP		11228760	1		==			
ANR	11228809	Identifier	op		11228760	0					
ANR	11228810	Identifier	COMPRESS_OP		11228760	1					
ANR	11228811	CompoundStatement		11:46:248:248	11228760	1					
ANR	11228812	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	750:8:32653:32677	11228760	0	True				
ANR	11228813	CallExpression	"strcpy ( log -> end , "".add"" )"		11228760	0					
ANR	11228814	Callee	strcpy		11228760	0					
ANR	11228815	Identifier	strcpy		11228760	0					
ANR	11228816	ArgumentList	log -> end		11228760	1					
ANR	11228817	Argument	log -> end		11228760	0					
ANR	11228818	PtrMemberAccess	log -> end		11228760	0					
ANR	11228819	Identifier	log		11228760	0					
ANR	11228820	Identifier	end		11228760	1					
ANR	11228821	Argument	""".add"""		11228760	1					
ANR	11228822	PrimaryExpression	""".add"""		11228760	0					
ANR	11228823	IfStatement	"if ( stat ( log -> path , & st ) == 0 && st . st_size )"		11228760	1					
ANR	11228824	Condition	"stat ( log -> path , & st ) == 0 && st . st_size"	751:12:32691:32729	11228760	0	True				
ANR	11228825	AndExpression	"stat ( log -> path , & st ) == 0 && st . st_size"		11228760	0		&&			
ANR	11228826	EqualityExpression	"stat ( log -> path , & st ) == 0"		11228760	0		==			
ANR	11228827	CallExpression	"stat ( log -> path , & st )"		11228760	0					
ANR	11228828	Callee	stat		11228760	0					
ANR	11228829	Identifier	stat		11228760	0					
ANR	11228830	ArgumentList	log -> path		11228760	1					
ANR	11228831	Argument	log -> path		11228760	0					
ANR	11228832	PtrMemberAccess	log -> path		11228760	0					
ANR	11228833	Identifier	log		11228760	0					
ANR	11228834	Identifier	path		11228760	1					
ANR	11228835	Argument	& st		11228760	1					
ANR	11228836	UnaryOperationExpression	& st		11228760	0					
ANR	11228837	UnaryOperator	&		11228760	0					
ANR	11228838	Identifier	st		11228760	1					
ANR	11228839	PrimaryExpression	0		11228760	1					
ANR	11228840	MemberAccess	st . st_size		11228760	1					
ANR	11228841	Identifier	st		11228760	0					
ANR	11228842	Identifier	st_size		11228760	1					
ANR	11228843	CompoundStatement		13:53:337:337	11228760	1					
ANR	11228844	ExpressionStatement	len = ( size_t ) ( st . st_size )	752:12:32746:32772	11228760	0	True				
ANR	11228845	AssignmentExpression	len = ( size_t ) ( st . st_size )		11228760	0		=			
ANR	11228846	Identifier	len		11228760	0					
ANR	11228847	CastExpression	( size_t ) ( st . st_size )		11228760	1					
ANR	11228848	CastTarget	size_t		11228760	0					
ANR	11228849	MemberAccess	st . st_size		11228760	1					
ANR	11228850	Identifier	st		11228760	0					
ANR	11228851	Identifier	st_size		11228760	1					
ANR	11228852	IfStatement	if ( ( off_t ) len != st . st_size || ( data = malloc ( st . st_size ) ) == NULL )		11228760	1					
ANR	11228853	Condition	( off_t ) len != st . st_size || ( data = malloc ( st . st_size ) ) == NULL	753:16:32790:32872	11228760	0	True				
ANR	11228854	OrExpression	( off_t ) len != st . st_size || ( data = malloc ( st . st_size ) ) == NULL		11228760	0		||			
ANR	11228855	EqualityExpression	( off_t ) len != st . st_size		11228760	0		!=			
ANR	11228856	CastExpression	( off_t ) len		11228760	0					
ANR	11228857	CastTarget	off_t		11228760	0					
ANR	11228858	Identifier	len		11228760	1					
ANR	11228859	MemberAccess	st . st_size		11228760	1					
ANR	11228860	Identifier	st		11228760	0					
ANR	11228861	Identifier	st_size		11228760	1					
ANR	11228862	EqualityExpression	( data = malloc ( st . st_size ) ) == NULL		11228760	1		==			
ANR	11228863	AssignmentExpression	data = malloc ( st . st_size )		11228760	0		=			
ANR	11228864	Identifier	data		11228760	0					
ANR	11228865	CallExpression	malloc ( st . st_size )		11228760	1					
ANR	11228866	Callee	malloc		11228760	0					
ANR	11228867	Identifier	malloc		11228760	0					
ANR	11228868	ArgumentList	st . st_size		11228760	1					
ANR	11228869	Argument	st . st_size		11228760	0					
ANR	11228870	MemberAccess	st . st_size		11228760	0					
ANR	11228871	Identifier	st		11228760	0					
ANR	11228872	Identifier	st_size		11228760	1					
ANR	11228873	Identifier	NULL		11228760	1					
ANR	11228874	CompoundStatement		16:57:480:480	11228760	1					
ANR	11228875	ExpressionStatement	"log_log ( log , op , ""allocation failure"" )"	755:16:32893:32931	11228760	0	True				
ANR	11228876	CallExpression	"log_log ( log , op , ""allocation failure"" )"		11228760	0					
ANR	11228877	Callee	log_log		11228760	0					
ANR	11228878	Identifier	log_log		11228760	0					
ANR	11228879	ArgumentList	log		11228760	1					
ANR	11228880	Argument	log		11228760	0					
ANR	11228881	Identifier	log		11228760	0					
ANR	11228882	Argument	op		11228760	1					
ANR	11228883	Identifier	op		11228760	0					
ANR	11228884	Argument	"""allocation failure"""		11228760	2					
ANR	11228885	PrimaryExpression	"""allocation failure"""		11228760	0					
ANR	11228886	ReturnStatement	return - 2 ;	756:16:32949:32958	11228760	1	True				
ANR	11228887	UnaryOperationExpression	- 2		11228760	0					
ANR	11228888	UnaryOperator	-		11228760	0					
ANR	11228889	PrimaryExpression	2		11228760	1					
ANR	11228890	IfStatement	"if ( ( fd = open ( log -> path , O_RDONLY , 0 ) ) < 0 )"		11228760	2					
ANR	11228891	Condition	"( fd = open ( log -> path , O_RDONLY , 0 ) ) < 0"	758:16:32990:33028	11228760	0	True				
ANR	11228892	RelationalExpression	"( fd = open ( log -> path , O_RDONLY , 0 ) ) < 0"		11228760	0		<			
ANR	11228893	AssignmentExpression	"fd = open ( log -> path , O_RDONLY , 0 )"		11228760	0		=			
ANR	11228894	Identifier	fd		11228760	0					
ANR	11228895	CallExpression	"open ( log -> path , O_RDONLY , 0 )"		11228760	1					
ANR	11228896	Callee	open		11228760	0					
ANR	11228897	Identifier	open		11228760	0					
ANR	11228898	ArgumentList	log -> path		11228760	1					
ANR	11228899	Argument	log -> path		11228760	0					
ANR	11228900	PtrMemberAccess	log -> path		11228760	0					
ANR	11228901	Identifier	log		11228760	0					
ANR	11228902	Identifier	path		11228760	1					
ANR	11228903	Argument	O_RDONLY		11228760	1					
ANR	11228904	Identifier	O_RDONLY		11228760	0					
ANR	11228905	Argument	0		11228760	2					
ANR	11228906	PrimaryExpression	0		11228760	0					
ANR	11228907	PrimaryExpression	0		11228760	1					
ANR	11228908	CompoundStatement		20:57:636:636	11228760	1					
ANR	11228909	ExpressionStatement	"log_log ( log , op , "".add file read failure"" )"	759:16:33049:33091	11228760	0	True				
ANR	11228910	CallExpression	"log_log ( log , op , "".add file read failure"" )"		11228760	0					
ANR	11228911	Callee	log_log		11228760	0					
ANR	11228912	Identifier	log_log		11228760	0					
ANR	11228913	ArgumentList	log		11228760	1					
ANR	11228914	Argument	log		11228760	0					
ANR	11228915	Identifier	log		11228760	0					
ANR	11228916	Argument	op		11228760	1					
ANR	11228917	Identifier	op		11228760	0					
ANR	11228918	Argument	""".add file read failure"""		11228760	2					
ANR	11228919	PrimaryExpression	""".add file read failure"""		11228760	0					
ANR	11228920	ReturnStatement	return - 1 ;	760:16:33109:33118	11228760	1	True				
ANR	11228921	UnaryOperationExpression	- 1		11228760	0					
ANR	11228922	UnaryOperator	-		11228760	0					
ANR	11228923	PrimaryExpression	1		11228760	1					
ANR	11228924	ExpressionStatement	"ret = ( size_t ) read ( fd , data , len ) != len"	762:12:33146:33186	11228760	3	True				
ANR	11228925	AssignmentExpression	"ret = ( size_t ) read ( fd , data , len ) != len"		11228760	0		=			
ANR	11228926	Identifier	ret		11228760	0					
ANR	11228927	EqualityExpression	"( size_t ) read ( fd , data , len ) != len"		11228760	1		!=			
ANR	11228928	CastExpression	"( size_t ) read ( fd , data , len )"		11228760	0					
ANR	11228929	CastTarget	size_t		11228760	0					
ANR	11228930	CallExpression	"read ( fd , data , len )"		11228760	1					
ANR	11228931	Callee	read		11228760	0					
ANR	11228932	Identifier	read		11228760	0					
ANR	11228933	ArgumentList	fd		11228760	1					
ANR	11228934	Argument	fd		11228760	0					
ANR	11228935	Identifier	fd		11228760	0					
ANR	11228936	Argument	data		11228760	1					
ANR	11228937	Identifier	data		11228760	0					
ANR	11228938	Argument	len		11228760	2					
ANR	11228939	Identifier	len		11228760	0					
ANR	11228940	Identifier	len		11228760	1					
ANR	11228941	ExpressionStatement	close ( fd )	763:12:33200:33209	11228760	4	True				
ANR	11228942	CallExpression	close ( fd )		11228760	0					
ANR	11228943	Callee	close		11228760	0					
ANR	11228944	Identifier	close		11228760	0					
ANR	11228945	ArgumentList	fd		11228760	1					
ANR	11228946	Argument	fd		11228760	0					
ANR	11228947	Identifier	fd		11228760	0					
ANR	11228948	IfStatement	if ( ret )		11228760	5					
ANR	11228949	Condition	ret	764:16:33227:33229	11228760	0	True				
ANR	11228950	Identifier	ret		11228760	0					
ANR	11228951	CompoundStatement		26:21:837:837	11228760	1					
ANR	11228952	ExpressionStatement	"log_log ( log , op , "".add file read failure"" )"	765:16:33250:33292	11228760	0	True				
ANR	11228953	CallExpression	"log_log ( log , op , "".add file read failure"" )"		11228760	0					
ANR	11228954	Callee	log_log		11228760	0					
ANR	11228955	Identifier	log_log		11228760	0					
ANR	11228956	ArgumentList	log		11228760	1					
ANR	11228957	Argument	log		11228760	0					
ANR	11228958	Identifier	log		11228760	0					
ANR	11228959	Argument	op		11228760	1					
ANR	11228960	Identifier	op		11228760	0					
ANR	11228961	Argument	""".add file read failure"""		11228760	2					
ANR	11228962	PrimaryExpression	""".add file read failure"""		11228760	0					
ANR	11228963	ReturnStatement	return - 1 ;	766:16:33310:33319	11228760	1	True				
ANR	11228964	UnaryOperationExpression	- 1		11228760	0					
ANR	11228965	UnaryOperator	-		11228760	0					
ANR	11228966	PrimaryExpression	1		11228760	1					
ANR	11228967	ExpressionStatement	"log_log ( log , op , ""loaded .add file"" )"	768:12:33347:33383	11228760	6	True				
ANR	11228968	CallExpression	"log_log ( log , op , ""loaded .add file"" )"		11228760	0					
ANR	11228969	Callee	log_log		11228760	0					
ANR	11228970	Identifier	log_log		11228760	0					
ANR	11228971	ArgumentList	log		11228760	1					
ANR	11228972	Argument	log		11228760	0					
ANR	11228973	Identifier	log		11228760	0					
ANR	11228974	Argument	op		11228760	1					
ANR	11228975	Identifier	op		11228760	0					
ANR	11228976	Argument	"""loaded .add file"""		11228760	2					
ANR	11228977	PrimaryExpression	"""loaded .add file"""		11228760	0					
ANR	11228978	ElseStatement	else		11228760	0					
ANR	11228979	ExpressionStatement	"log_log ( log , op , ""missing .add file!"" )"	771:12:33420:33458	11228760	0	True				
ANR	11228980	CallExpression	"log_log ( log , op , ""missing .add file!"" )"		11228760	0					
ANR	11228981	Callee	log_log		11228760	0					
ANR	11228982	Identifier	log_log		11228760	0					
ANR	11228983	ArgumentList	log		11228760	1					
ANR	11228984	Argument	log		11228760	0					
ANR	11228985	Identifier	log		11228760	0					
ANR	11228986	Argument	op		11228760	1					
ANR	11228987	Identifier	op		11228760	0					
ANR	11228988	Argument	"""missing .add file!"""		11228760	2					
ANR	11228989	PrimaryExpression	"""missing .add file!"""		11228760	0					
ANR	11228990	SwitchStatement	switch ( op )		11228760	6					
ANR	11228991	Condition	op	775:12:33523:33524	11228760	0	True				
ANR	11228992	Identifier	op		11228760	0					
ANR	11228993	CompoundStatement		37:16:1132:1132	11228760	1					
ANR	11228994	Label	case APPEND_OP :	776:4:33533:33547	11228760	0	True				
ANR	11228995	Identifier	APPEND_OP		11228760	0					
ANR	11228996	ExpressionStatement	"ret = log_append ( log , data , len )"	777:8:33557:33589	11228760	1	True				
ANR	11228997	AssignmentExpression	"ret = log_append ( log , data , len )"		11228760	0		=			
ANR	11228998	Identifier	ret		11228760	0					
ANR	11228999	CallExpression	"log_append ( log , data , len )"		11228760	1					
ANR	11229000	Callee	log_append		11228760	0					
ANR	11229001	Identifier	log_append		11228760	0					
ANR	11229002	ArgumentList	log		11228760	1					
ANR	11229003	Argument	log		11228760	0					
ANR	11229004	Identifier	log		11228760	0					
ANR	11229005	Argument	data		11228760	1					
ANR	11229006	Identifier	data		11228760	0					
ANR	11229007	Argument	len		11228760	2					
ANR	11229008	Identifier	len		11228760	0					
ANR	11229009	BreakStatement	break ;	778:8:33599:33604	11228760	2	True				
ANR	11229010	Label	case COMPRESS_OP :	779:4:33610:33626	11228760	3	True				
ANR	11229011	Identifier	COMPRESS_OP		11228760	0					
ANR	11229012	ExpressionStatement	"ret = log_compress ( log , data , len )"	780:8:33636:33670	11228760	4	True				
ANR	11229013	AssignmentExpression	"ret = log_compress ( log , data , len )"		11228760	0		=			
ANR	11229014	Identifier	ret		11228760	0					
ANR	11229015	CallExpression	"log_compress ( log , data , len )"		11228760	1					
ANR	11229016	Callee	log_compress		11228760	0					
ANR	11229017	Identifier	log_compress		11228760	0					
ANR	11229018	ArgumentList	log		11228760	1					
ANR	11229019	Argument	log		11228760	0					
ANR	11229020	Identifier	log		11228760	0					
ANR	11229021	Argument	data		11228760	1					
ANR	11229022	Identifier	data		11228760	0					
ANR	11229023	Argument	len		11228760	2					
ANR	11229024	Identifier	len		11228760	0					
ANR	11229025	BreakStatement	break ;	781:8:33680:33685	11228760	5	True				
ANR	11229026	Label	case REPLACE_OP :	782:4:33691:33706	11228760	6	True				
ANR	11229027	Identifier	REPLACE_OP		11228760	0					
ANR	11229028	ExpressionStatement	ret = log_replace ( log )	783:8:33716:33738	11228760	7	True				
ANR	11229029	AssignmentExpression	ret = log_replace ( log )		11228760	0		=			
ANR	11229030	Identifier	ret		11228760	0					
ANR	11229031	CallExpression	log_replace ( log )		11228760	1					
ANR	11229032	Callee	log_replace		11228760	0					
ANR	11229033	Identifier	log_replace		11228760	0					
ANR	11229034	ArgumentList	log		11228760	1					
ANR	11229035	Argument	log		11228760	0					
ANR	11229036	Identifier	log		11228760	0					
ANR	11229037	ExpressionStatement	"log_log ( log , op , ret ? ""failure"" : ""complete"" )"	787:4:33772:33818	11228760	7	True				
ANR	11229038	CallExpression	"log_log ( log , op , ret ? ""failure"" : ""complete"" )"		11228760	0					
ANR	11229039	Callee	log_log		11228760	0					
ANR	11229040	Identifier	log_log		11228760	0					
ANR	11229041	ArgumentList	log		11228760	1					
ANR	11229042	Argument	log		11228760	0					
ANR	11229043	Identifier	log		11228760	0					
ANR	11229044	Argument	op		11228760	1					
ANR	11229045	Identifier	op		11228760	0					
ANR	11229046	Argument	"ret ? ""failure"" : ""complete"""		11228760	2					
ANR	11229047	ConditionalExpression	"ret ? ""failure"" : ""complete"""		11228760	0					
ANR	11229048	Condition	ret		11228760	0					
ANR	11229049	Identifier	ret		11228760	0					
ANR	11229050	PrimaryExpression	"""failure"""		11228760	1					
ANR	11229051	PrimaryExpression	"""complete"""		11228760	2					
ANR	11229052	IfStatement	if ( data != NULL )		11228760	8					
ANR	11229053	Condition	data != NULL	790:8:33848:33859	11228760	0	True				
ANR	11229054	EqualityExpression	data != NULL		11228760	0		!=			
ANR	11229055	Identifier	data		11228760	0					
ANR	11229056	Identifier	NULL		11228760	1					
ANR	11229057	ExpressionStatement	free ( data )	791:8:33870:33880	11228760	1	True				
ANR	11229058	CallExpression	free ( data )		11228760	0					
ANR	11229059	Callee	free		11228760	0					
ANR	11229060	Identifier	free		11228760	0					
ANR	11229061	ArgumentList	data		11228760	1					
ANR	11229062	Argument	data		11228760	0					
ANR	11229063	Identifier	data		11228760	0					
ANR	11229064	ReturnStatement	return ret ;	792:4:33886:33896	11228760	9	True				
ANR	11229065	Identifier	ret		11228760	0					
ANR	11229066	ReturnType	local int		11228760	1					
ANR	11229067	Identifier	log_recover		11228760	2					
ANR	11229068	ParameterList	"struct log * log , int op"		11228760	3					
ANR	11229069	Parameter	struct log * log	738:22:32369:32383	11228760	0	True				
ANR	11229070	ParameterType	struct log *		11228760	0					
ANR	11229071	Identifier	log		11228760	1					
ANR	11229072	Parameter	int op	738:39:32386:32391	11228760	1	True				
ANR	11229073	ParameterType	int		11228760	0					
ANR	11229074	Identifier	op		11228760	1					
ANR	11229075	CFGEntryNode	ENTRY		11228760		True				
ANR	11229076	CFGExitNode	EXIT		11228760		True				
ANR	11229077	Symbol	ret		11228760						
ANR	11229078	Symbol	log_append		11228760						
ANR	11229079	Symbol	op		11228760						
ANR	11229080	Symbol	st		11228760						
ANR	11229081	Symbol	malloc		11228760						
ANR	11229082	Symbol	stat		11228760						
ANR	11229083	Symbol	NULL		11228760						
ANR	11229084	Symbol	read		11228760						
ANR	11229085	Symbol	data		11228760						
ANR	11229086	Symbol	log -> end		11228760						
ANR	11229087	Symbol	log		11228760						
ANR	11229088	Symbol	log -> path		11228760						
ANR	11229089	Symbol	log_compress		11228760						
ANR	11229090	Symbol	& st		11228760						
ANR	11229091	Symbol	* log		11228760						
ANR	11229092	Symbol	COMPRESS_OP		11228760						
ANR	11229093	Symbol	log_replace		11228760						
ANR	11229094	Symbol	st . st_size		11228760						
ANR	11229095	Symbol	O_RDONLY		11228760						
ANR	11229096	Symbol	len		11228760						
ANR	11229097	Symbol	APPEND_OP		11228760						
ANR	11229098	Symbol	fd		11228760						
ANR	11229099	Symbol	open		11228760						
ANR	11229100	Function	log_close	796:0:33961:34086							
ANR	11229101	FunctionDef	log_close (struct log * log)		11229100	0					
ANR	11229102	CompoundStatement		797:0:33999:34086	11229100	0					
ANR	11229103	IfStatement	if ( log -> fd >= 0 )		11229100	0					
ANR	11229104	Condition	log -> fd >= 0	798:8:34009:34020	11229100	0	True				
ANR	11229105	RelationalExpression	log -> fd >= 0		11229100	0		>=			
ANR	11229106	PtrMemberAccess	log -> fd		11229100	0					
ANR	11229107	Identifier	log		11229100	0					
ANR	11229108	Identifier	fd		11229100	1					
ANR	11229109	PrimaryExpression	0		11229100	1					
ANR	11229110	ExpressionStatement	close ( log -> fd )	799:8:34031:34045	11229100	1	True				
ANR	11229111	CallExpression	close ( log -> fd )		11229100	0					
ANR	11229112	Callee	close		11229100	0					
ANR	11229113	Identifier	close		11229100	0					
ANR	11229114	ArgumentList	log -> fd		11229100	1					
ANR	11229115	Argument	log -> fd		11229100	0					
ANR	11229116	PtrMemberAccess	log -> fd		11229100	0					
ANR	11229117	Identifier	log		11229100	0					
ANR	11229118	Identifier	fd		11229100	1					
ANR	11229119	ExpressionStatement	log -> fd = - 1	800:4:34051:34063	11229100	1	True				
ANR	11229120	AssignmentExpression	log -> fd = - 1		11229100	0		=			
ANR	11229121	PtrMemberAccess	log -> fd		11229100	0					
ANR	11229122	Identifier	log		11229100	0					
ANR	11229123	Identifier	fd		11229100	1					
ANR	11229124	UnaryOperationExpression	- 1		11229100	1					
ANR	11229125	UnaryOperator	-		11229100	0					
ANR	11229126	PrimaryExpression	1		11229100	1					
ANR	11229127	ExpressionStatement	log_unlock ( log )	801:4:34069:34084	11229100	2	True				
ANR	11229128	CallExpression	log_unlock ( log )		11229100	0					
ANR	11229129	Callee	log_unlock		11229100	0					
ANR	11229130	Identifier	log_unlock		11229100	0					
ANR	11229131	ArgumentList	log		11229100	1					
ANR	11229132	Argument	log		11229100	0					
ANR	11229133	Identifier	log		11229100	0					
ANR	11229134	ReturnType	local void		11229100	1					
ANR	11229135	Identifier	log_close		11229100	2					
ANR	11229136	ParameterList	struct log * log		11229100	3					
ANR	11229137	Parameter	struct log * log	796:21:33982:33996	11229100	0	True				
ANR	11229138	ParameterType	struct log *		11229100	0					
ANR	11229139	Identifier	log		11229100	1					
ANR	11229140	CFGEntryNode	ENTRY		11229100		True				
ANR	11229141	CFGExitNode	EXIT		11229100		True				
ANR	11229142	Symbol	log -> fd		11229100						
ANR	11229143	Symbol	log		11229100						
ANR	11229144	Symbol	* log		11229100						
ANR	11229145	Function	log_open	813:0:34747:36091							
ANR	11229146	FunctionDef	log_open (struct log * log)		11229145	0					
ANR	11229147	CompoundStatement		814:0:34783:36091	11229145	0					
ANR	11229148	IdentifierDeclStatement	int op ;	815:4:34789:34795	11229145	0	True				
ANR	11229149	IdentifierDecl	op		11229145	0					
ANR	11229150	IdentifierDeclType	int		11229145	0					
ANR	11229151	Identifier	op		11229145	1					
ANR	11229152	IfStatement	if ( log -> fd >= 0 )		11229145	1					
ANR	11229153	Condition	log -> fd >= 0	819:8:34928:34939	11229145	0	True				
ANR	11229154	RelationalExpression	log -> fd >= 0		11229145	0		>=			
ANR	11229155	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229156	Identifier	log		11229145	0					
ANR	11229157	Identifier	fd		11229145	1					
ANR	11229158	PrimaryExpression	0		11229145	1					
ANR	11229159	ExpressionStatement	close ( log -> fd )	820:8:34950:34964	11229145	1	True				
ANR	11229160	CallExpression	close ( log -> fd )		11229145	0					
ANR	11229161	Callee	close		11229145	0					
ANR	11229162	Identifier	close		11229145	0					
ANR	11229163	ArgumentList	log -> fd		11229145	1					
ANR	11229164	Argument	log -> fd		11229145	0					
ANR	11229165	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229166	Identifier	log		11229145	0					
ANR	11229167	Identifier	fd		11229145	1					
ANR	11229168	ExpressionStatement	log -> fd = - 1	821:4:34970:34982	11229145	2	True				
ANR	11229169	AssignmentExpression	log -> fd = - 1		11229145	0		=			
ANR	11229170	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229171	Identifier	log		11229145	0					
ANR	11229172	Identifier	fd		11229145	1					
ANR	11229173	UnaryOperationExpression	- 1		11229145	1					
ANR	11229174	UnaryOperator	-		11229145	0					
ANR	11229175	PrimaryExpression	1		11229145	1					
ANR	11229176	IfStatement	if ( log_lock ( log ) < 0 )		11229145	3					
ANR	11229177	Condition	log_lock ( log ) < 0	824:8:35030:35046	11229145	0	True				
ANR	11229178	RelationalExpression	log_lock ( log ) < 0		11229145	0		<			
ANR	11229179	CallExpression	log_lock ( log )		11229145	0					
ANR	11229180	Callee	log_lock		11229145	0					
ANR	11229181	Identifier	log_lock		11229145	0					
ANR	11229182	ArgumentList	log		11229145	1					
ANR	11229183	Argument	log		11229145	0					
ANR	11229184	Identifier	log		11229145	0					
ANR	11229185	PrimaryExpression	0		11229145	1					
ANR	11229186	ReturnStatement	return - 1 ;	825:8:35057:35066	11229145	1	True				
ANR	11229187	UnaryOperationExpression	- 1		11229145	0					
ANR	11229188	UnaryOperator	-		11229145	0					
ANR	11229189	PrimaryExpression	1		11229145	1					
ANR	11229190	ExpressionStatement	"strcpy ( log -> end , "".gz"" )"	828:4:35109:35132	11229145	4	True				
ANR	11229191	CallExpression	"strcpy ( log -> end , "".gz"" )"		11229145	0					
ANR	11229192	Callee	strcpy		11229145	0					
ANR	11229193	Identifier	strcpy		11229145	0					
ANR	11229194	ArgumentList	log -> end		11229145	1					
ANR	11229195	Argument	log -> end		11229145	0					
ANR	11229196	PtrMemberAccess	log -> end		11229145	0					
ANR	11229197	Identifier	log		11229145	0					
ANR	11229198	Identifier	end		11229145	1					
ANR	11229199	Argument	""".gz"""		11229145	1					
ANR	11229200	PrimaryExpression	""".gz"""		11229145	0					
ANR	11229201	ExpressionStatement	"log -> fd = open ( log -> path , O_RDWR | O_CREAT , 0644 )"	829:4:35138:35187	11229145	5	True				
ANR	11229202	AssignmentExpression	"log -> fd = open ( log -> path , O_RDWR | O_CREAT , 0644 )"		11229145	0		=			
ANR	11229203	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229204	Identifier	log		11229145	0					
ANR	11229205	Identifier	fd		11229145	1					
ANR	11229206	CallExpression	"open ( log -> path , O_RDWR | O_CREAT , 0644 )"		11229145	1					
ANR	11229207	Callee	open		11229145	0					
ANR	11229208	Identifier	open		11229145	0					
ANR	11229209	ArgumentList	log -> path		11229145	1					
ANR	11229210	Argument	log -> path		11229145	0					
ANR	11229211	PtrMemberAccess	log -> path		11229145	0					
ANR	11229212	Identifier	log		11229145	0					
ANR	11229213	Identifier	path		11229145	1					
ANR	11229214	Argument	O_RDWR | O_CREAT		11229145	1					
ANR	11229215	InclusiveOrExpression	O_RDWR | O_CREAT		11229145	0		|			
ANR	11229216	Identifier	O_RDWR		11229145	0					
ANR	11229217	Identifier	O_CREAT		11229145	1					
ANR	11229218	Argument	0644		11229145	2					
ANR	11229219	PrimaryExpression	0644		11229145	0					
ANR	11229220	IfStatement	if ( log -> fd < 0 )		11229145	6					
ANR	11229221	Condition	log -> fd < 0	830:8:35197:35207	11229145	0	True				
ANR	11229222	RelationalExpression	log -> fd < 0		11229145	0		<			
ANR	11229223	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229224	Identifier	log		11229145	0					
ANR	11229225	Identifier	fd		11229145	1					
ANR	11229226	PrimaryExpression	0		11229145	1					
ANR	11229227	CompoundStatement		17:21:426:426	11229145	1					
ANR	11229228	ExpressionStatement	log_close ( log )	831:8:35220:35234	11229145	0	True				
ANR	11229229	CallExpression	log_close ( log )		11229145	0					
ANR	11229230	Callee	log_close		11229145	0					
ANR	11229231	Identifier	log_close		11229145	0					
ANR	11229232	ArgumentList	log		11229145	1					
ANR	11229233	Argument	log		11229145	0					
ANR	11229234	Identifier	log		11229145	0					
ANR	11229235	ReturnStatement	return - 1 ;	832:8:35244:35253	11229145	1	True				
ANR	11229236	UnaryOperationExpression	- 1		11229145	0					
ANR	11229237	UnaryOperator	-		11229145	0					
ANR	11229238	PrimaryExpression	1		11229145	1					
ANR	11229239	IfStatement	"if ( lseek ( log -> fd , 0 , SEEK_END ) == 0 )"		11229145	7					
ANR	11229240	Condition	"lseek ( log -> fd , 0 , SEEK_END ) == 0"	836:8:35347:35378	11229145	0	True				
ANR	11229241	EqualityExpression	"lseek ( log -> fd , 0 , SEEK_END ) == 0"		11229145	0		==			
ANR	11229242	CallExpression	"lseek ( log -> fd , 0 , SEEK_END )"		11229145	0					
ANR	11229243	Callee	lseek		11229145	0					
ANR	11229244	Identifier	lseek		11229145	0					
ANR	11229245	ArgumentList	log -> fd		11229145	1					
ANR	11229246	Argument	log -> fd		11229145	0					
ANR	11229247	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229248	Identifier	log		11229145	0					
ANR	11229249	Identifier	fd		11229145	1					
ANR	11229250	Argument	0		11229145	1					
ANR	11229251	PrimaryExpression	0		11229145	0					
ANR	11229252	Argument	SEEK_END		11229145	2					
ANR	11229253	Identifier	SEEK_END		11229145	0					
ANR	11229254	PrimaryExpression	0		11229145	1					
ANR	11229255	CompoundStatement		23:42:597:597	11229145	1					
ANR	11229256	IfStatement	"if ( write ( log -> fd , log_gzhead , HEAD ) != HEAD || write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY )"		11229145	0					
ANR	11229257	Condition	"write ( log -> fd , log_gzhead , HEAD ) != HEAD || write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY"	837:12:35395:35547	11229145	0	True				
ANR	11229258	OrExpression	"write ( log -> fd , log_gzhead , HEAD ) != HEAD || write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY"		11229145	0		||			
ANR	11229259	EqualityExpression	"write ( log -> fd , log_gzhead , HEAD ) != HEAD"		11229145	0		!=			
ANR	11229260	CallExpression	"write ( log -> fd , log_gzhead , HEAD )"		11229145	0					
ANR	11229261	Callee	write		11229145	0					
ANR	11229262	Identifier	write		11229145	0					
ANR	11229263	ArgumentList	log -> fd		11229145	1					
ANR	11229264	Argument	log -> fd		11229145	0					
ANR	11229265	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229266	Identifier	log		11229145	0					
ANR	11229267	Identifier	fd		11229145	1					
ANR	11229268	Argument	log_gzhead		11229145	1					
ANR	11229269	Identifier	log_gzhead		11229145	0					
ANR	11229270	Argument	HEAD		11229145	2					
ANR	11229271	Identifier	HEAD		11229145	0					
ANR	11229272	Identifier	HEAD		11229145	1					
ANR	11229273	OrExpression	"write ( log -> fd , log_gzext , EXTRA ) != EXTRA || write ( log -> fd , log_gzbody , BODY ) != BODY"		11229145	1		||			
ANR	11229274	EqualityExpression	"write ( log -> fd , log_gzext , EXTRA ) != EXTRA"		11229145	0		!=			
ANR	11229275	CallExpression	"write ( log -> fd , log_gzext , EXTRA )"		11229145	0					
ANR	11229276	Callee	write		11229145	0					
ANR	11229277	Identifier	write		11229145	0					
ANR	11229278	ArgumentList	log -> fd		11229145	1					
ANR	11229279	Argument	log -> fd		11229145	0					
ANR	11229280	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229281	Identifier	log		11229145	0					
ANR	11229282	Identifier	fd		11229145	1					
ANR	11229283	Argument	log_gzext		11229145	1					
ANR	11229284	Identifier	log_gzext		11229145	0					
ANR	11229285	Argument	EXTRA		11229145	2					
ANR	11229286	Identifier	EXTRA		11229145	0					
ANR	11229287	Identifier	EXTRA		11229145	1					
ANR	11229288	EqualityExpression	"write ( log -> fd , log_gzbody , BODY ) != BODY"		11229145	1		!=			
ANR	11229289	CallExpression	"write ( log -> fd , log_gzbody , BODY )"		11229145	0					
ANR	11229290	Callee	write		11229145	0					
ANR	11229291	Identifier	write		11229145	0					
ANR	11229292	ArgumentList	log -> fd		11229145	1					
ANR	11229293	Argument	log -> fd		11229145	0					
ANR	11229294	PtrMemberAccess	log -> fd		11229145	0					
ANR	11229295	Identifier	log		11229145	0					
ANR	11229296	Identifier	fd		11229145	1					
ANR	11229297	Argument	log_gzbody		11229145	1					
ANR	11229298	Identifier	log_gzbody		11229145	0					
ANR	11229299	Argument	BODY		11229145	2					
ANR	11229300	Identifier	BODY		11229145	0					
ANR	11229301	Identifier	BODY		11229145	1					
ANR	11229302	CompoundStatement		26:54:766:766	11229145	1					
ANR	11229303	ExpressionStatement	log_close ( log )	840:12:35564:35578	11229145	0	True				
ANR	11229304	CallExpression	log_close ( log )		11229145	0					
ANR	11229305	Callee	log_close		11229145	0					
ANR	11229306	Identifier	log_close		11229145	0					
ANR	11229307	ArgumentList	log		11229145	1					
ANR	11229308	Argument	log		11229145	0					
ANR	11229309	Identifier	log		11229145	0					
ANR	11229310	ReturnStatement	return - 1 ;	841:12:35592:35601	11229145	1	True				
ANR	11229311	UnaryOperationExpression	- 1		11229145	0					
ANR	11229312	UnaryOperator	-		11229145	0					
ANR	11229313	PrimaryExpression	1		11229145	1					
ANR	11229314	ExpressionStatement	"strcpy ( log -> end , "".dict"" )"	843:8:35621:35646	11229145	1	True				
ANR	11229315	CallExpression	"strcpy ( log -> end , "".dict"" )"		11229145	0					
ANR	11229316	Callee	strcpy		11229145	0					
ANR	11229317	Identifier	strcpy		11229145	0					
ANR	11229318	ArgumentList	log -> end		11229145	1					
ANR	11229319	Argument	log -> end		11229145	0					
ANR	11229320	PtrMemberAccess	log -> end		11229145	0					
ANR	11229321	Identifier	log		11229145	0					
ANR	11229322	Identifier	end		11229145	1					
ANR	11229323	Argument	""".dict"""		11229145	1					
ANR	11229324	PrimaryExpression	""".dict"""		11229145	0					
ANR	11229325	ExpressionStatement	unlink ( log -> path )	844:8:35656:35673	11229145	2	True				
ANR	11229326	CallExpression	unlink ( log -> path )		11229145	0					
ANR	11229327	Callee	unlink		11229145	0					
ANR	11229328	Identifier	unlink		11229145	0					
ANR	11229329	ArgumentList	log -> path		11229145	1					
ANR	11229330	Argument	log -> path		11229145	0					
ANR	11229331	PtrMemberAccess	log -> path		11229145	0					
ANR	11229332	Identifier	log		11229145	0					
ANR	11229333	Identifier	path		11229145	1					
ANR	11229334	IfStatement	if ( ( op = log_head ( log ) ) < 0 )		11229145	8					
ANR	11229335	Condition	( op = log_head ( log ) ) < 0	848:8:35749:35772	11229145	0	True				
ANR	11229336	RelationalExpression	( op = log_head ( log ) ) < 0		11229145	0		<			
ANR	11229337	AssignmentExpression	op = log_head ( log )		11229145	0		=			
ANR	11229338	Identifier	op		11229145	0					
ANR	11229339	CallExpression	log_head ( log )		11229145	1					
ANR	11229340	Callee	log_head		11229145	0					
ANR	11229341	Identifier	log_head		11229145	0					
ANR	11229342	ArgumentList	log		11229145	1					
ANR	11229343	Argument	log		11229145	0					
ANR	11229344	Identifier	log		11229145	0					
ANR	11229345	PrimaryExpression	0		11229145	1					
ANR	11229346	CompoundStatement		35:34:991:991	11229145	1					
ANR	11229347	ExpressionStatement	log_close ( log )	849:8:35785:35799	11229145	0	True				
ANR	11229348	CallExpression	log_close ( log )		11229145	0					
ANR	11229349	Callee	log_close		11229145	0					
ANR	11229350	Identifier	log_close		11229145	0					
ANR	11229351	ArgumentList	log		11229145	1					
ANR	11229352	Argument	log		11229145	0					
ANR	11229353	Identifier	log		11229145	0					
ANR	11229354	ReturnStatement	return - 1 ;	850:8:35809:35818	11229145	1	True				
ANR	11229355	UnaryOperationExpression	- 1		11229145	0					
ANR	11229356	UnaryOperator	-		11229145	0					
ANR	11229357	PrimaryExpression	1		11229145	1					
ANR	11229358	IfStatement	"if ( op != NO_OP && log_recover ( log , op ) )"		11229145	9					
ANR	11229359	Condition	"op != NO_OP && log_recover ( log , op )"	854:8:35894:35928	11229145	0	True				
ANR	11229360	AndExpression	"op != NO_OP && log_recover ( log , op )"		11229145	0		&&			
ANR	11229361	EqualityExpression	op != NO_OP		11229145	0		!=			
ANR	11229362	Identifier	op		11229145	0					
ANR	11229363	Identifier	NO_OP		11229145	1					
ANR	11229364	CallExpression	"log_recover ( log , op )"		11229145	1					
ANR	11229365	Callee	log_recover		11229145	0					
ANR	11229366	Identifier	log_recover		11229145	0					
ANR	11229367	ArgumentList	log		11229145	1					
ANR	11229368	Argument	log		11229145	0					
ANR	11229369	Identifier	log		11229145	0					
ANR	11229370	Argument	op		11229145	1					
ANR	11229371	Identifier	op		11229145	0					
ANR	11229372	CompoundStatement		41:45:1147:1147	11229145	1					
ANR	11229373	ExpressionStatement	log_close ( log )	855:8:35941:35955	11229145	0	True				
ANR	11229374	CallExpression	log_close ( log )		11229145	0					
ANR	11229375	Callee	log_close		11229145	0					
ANR	11229376	Identifier	log_close		11229145	0					
ANR	11229377	ArgumentList	log		11229145	1					
ANR	11229378	Argument	log		11229145	0					
ANR	11229379	Identifier	log		11229145	0					
ANR	11229380	ReturnStatement	return - 1 ;	856:8:35965:35974	11229145	1	True				
ANR	11229381	UnaryOperationExpression	- 1		11229145	0					
ANR	11229382	UnaryOperator	-		11229145	0					
ANR	11229383	PrimaryExpression	1		11229145	1					
ANR	11229384	ExpressionStatement	log_touch ( log )	860:4:36061:36075	11229145	10	True				
ANR	11229385	CallExpression	log_touch ( log )		11229145	0					
ANR	11229386	Callee	log_touch		11229145	0					
ANR	11229387	Identifier	log_touch		11229145	0					
ANR	11229388	ArgumentList	log		11229145	1					
ANR	11229389	Argument	log		11229145	0					
ANR	11229390	Identifier	log		11229145	0					
ANR	11229391	ReturnStatement	return 0 ;	861:4:36081:36089	11229145	11	True				
ANR	11229392	PrimaryExpression	0		11229145	0					
ANR	11229393	ReturnType	local int		11229145	1					
ANR	11229394	Identifier	log_open		11229145	2					
ANR	11229395	ParameterList	struct log * log		11229145	3					
ANR	11229396	Parameter	struct log * log	813:19:34766:34780	11229145	0	True				
ANR	11229397	ParameterType	struct log *		11229145	0					
ANR	11229398	Identifier	log		11229145	1					
ANR	11229399	CFGEntryNode	ENTRY		11229145		True				
ANR	11229400	CFGExitNode	EXIT		11229145		True				
ANR	11229401	Symbol	op		11229145						
ANR	11229402	Symbol	HEAD		11229145						
ANR	11229403	Symbol	lseek		11229145						
ANR	11229404	Symbol	log -> fd		11229145						
ANR	11229405	Symbol	log -> end		11229145						
ANR	11229406	Symbol	log		11229145						
ANR	11229407	Symbol	log_lock		11229145						
ANR	11229408	Symbol	log -> path		11229145						
ANR	11229409	Symbol	EXTRA		11229145						
ANR	11229410	Symbol	O_CREAT		11229145						
ANR	11229411	Symbol	log_gzbody		11229145						
ANR	11229412	Symbol	* log		11229145						
ANR	11229413	Symbol	SEEK_END		11229145						
ANR	11229414	Symbol	NO_OP		11229145						
ANR	11229415	Symbol	log_gzext		11229145						
ANR	11229416	Symbol	O_RDWR		11229145						
ANR	11229417	Symbol	log_gzhead		11229145						
ANR	11229418	Symbol	log_head		11229145						
ANR	11229419	Symbol	log_recover		11229145						
ANR	11229420	Symbol	write		11229145						
ANR	11229421	Symbol	BODY		11229145						
ANR	11229422	Symbol	open		11229145						
ANR	11229423	Function	gzlog_open	865:0:36162:37035							
ANR	11229424	FunctionDef	gzlog_open (char * path)		11229423	0					
ANR	11229425	CompoundStatement		866:0:36192:37035	11229423	0					
ANR	11229426	IdentifierDeclStatement	size_t n ;	867:4:36198:36206	11229423	0	True				
ANR	11229427	IdentifierDecl	n		11229423	0					
ANR	11229428	IdentifierDeclType	size_t		11229423	0					
ANR	11229429	Identifier	n		11229423	1					
ANR	11229430	IdentifierDeclStatement	struct log * log ;	868:4:36212:36227	11229423	1	True				
ANR	11229431	IdentifierDecl	* log		11229423	0					
ANR	11229432	IdentifierDeclType	struct log *		11229423	0					
ANR	11229433	Identifier	log		11229423	1					
ANR	11229434	IfStatement	if ( path == NULL || * path == 0 )		11229423	2					
ANR	11229435	Condition	path == NULL || * path == 0	871:8:36264:36289	11229423	0	True				
ANR	11229436	OrExpression	path == NULL || * path == 0		11229423	0		||			
ANR	11229437	EqualityExpression	path == NULL		11229423	0		==			
ANR	11229438	Identifier	path		11229423	0					
ANR	11229439	Identifier	NULL		11229423	1					
ANR	11229440	EqualityExpression	* path == 0		11229423	1		==			
ANR	11229441	UnaryOperationExpression	* path		11229423	0					
ANR	11229442	UnaryOperator	*		11229423	0					
ANR	11229443	Identifier	path		11229423	1					
ANR	11229444	PrimaryExpression	0		11229423	1					
ANR	11229445	ReturnStatement	return NULL ;	872:8:36300:36311	11229423	1	True				
ANR	11229446	Identifier	NULL		11229423	0					
ANR	11229447	ExpressionStatement	log = malloc ( sizeof ( struct log ) )	875:4:36366:36398	11229423	3	True				
ANR	11229448	AssignmentExpression	log = malloc ( sizeof ( struct log ) )		11229423	0		=			
ANR	11229449	Identifier	log		11229423	0					
ANR	11229450	CallExpression	malloc ( sizeof ( struct log ) )		11229423	1					
ANR	11229451	Callee	malloc		11229423	0					
ANR	11229452	Identifier	malloc		11229423	0					
ANR	11229453	ArgumentList	sizeof ( struct log )		11229423	1					
ANR	11229454	Argument	sizeof ( struct log )		11229423	0					
ANR	11229455	SizeofExpression	sizeof ( struct log )		11229423	0					
ANR	11229456	Sizeof	sizeof		11229423	0					
ANR	11229457	SizeofOperand	struct log		11229423	1					
ANR	11229458	IfStatement	if ( log == NULL )		11229423	4					
ANR	11229459	Condition	log == NULL	876:8:36408:36418	11229423	0	True				
ANR	11229460	EqualityExpression	log == NULL		11229423	0		==			
ANR	11229461	Identifier	log		11229423	0					
ANR	11229462	Identifier	NULL		11229423	1					
ANR	11229463	ReturnStatement	return NULL ;	877:8:36429:36440	11229423	1	True				
ANR	11229464	Identifier	NULL		11229423	0					
ANR	11229465	ExpressionStatement	"strcpy ( log -> id , LOGID )"	878:4:36446:36468	11229423	5	True				
ANR	11229466	CallExpression	"strcpy ( log -> id , LOGID )"		11229423	0					
ANR	11229467	Callee	strcpy		11229423	0					
ANR	11229468	Identifier	strcpy		11229423	0					
ANR	11229469	ArgumentList	log -> id		11229423	1					
ANR	11229470	Argument	log -> id		11229423	0					
ANR	11229471	PtrMemberAccess	log -> id		11229423	0					
ANR	11229472	Identifier	log		11229423	0					
ANR	11229473	Identifier	id		11229423	1					
ANR	11229474	Argument	LOGID		11229423	1					
ANR	11229475	Identifier	LOGID		11229423	0					
ANR	11229476	ExpressionStatement	log -> fd = - 1	879:4:36474:36486	11229423	6	True				
ANR	11229477	AssignmentExpression	log -> fd = - 1		11229423	0		=			
ANR	11229478	PtrMemberAccess	log -> fd		11229423	0					
ANR	11229479	Identifier	log		11229423	0					
ANR	11229480	Identifier	fd		11229423	1					
ANR	11229481	UnaryOperationExpression	- 1		11229423	1					
ANR	11229482	UnaryOperator	-		11229423	0					
ANR	11229483	PrimaryExpression	1		11229423	1					
ANR	11229484	ExpressionStatement	n = strlen ( path )	882:4:36551:36567	11229423	7	True				
ANR	11229485	AssignmentExpression	n = strlen ( path )		11229423	0		=			
ANR	11229486	Identifier	n		11229423	0					
ANR	11229487	CallExpression	strlen ( path )		11229423	1					
ANR	11229488	Callee	strlen		11229423	0					
ANR	11229489	Identifier	strlen		11229423	0					
ANR	11229490	ArgumentList	path		11229423	1					
ANR	11229491	Argument	path		11229423	0					
ANR	11229492	Identifier	path		11229423	0					
ANR	11229493	ExpressionStatement	log -> path = malloc ( n + 9 )	883:4:36573:36598	11229423	8	True				
ANR	11229494	AssignmentExpression	log -> path = malloc ( n + 9 )		11229423	0		=			
ANR	11229495	PtrMemberAccess	log -> path		11229423	0					
ANR	11229496	Identifier	log		11229423	0					
ANR	11229497	Identifier	path		11229423	1					
ANR	11229498	CallExpression	malloc ( n + 9 )		11229423	1					
ANR	11229499	Callee	malloc		11229423	0					
ANR	11229500	Identifier	malloc		11229423	0					
ANR	11229501	ArgumentList	n + 9		11229423	1					
ANR	11229502	Argument	n + 9		11229423	0					
ANR	11229503	AdditiveExpression	n + 9		11229423	0		+			
ANR	11229504	Identifier	n		11229423	0					
ANR	11229505	PrimaryExpression	9		11229423	1					
ANR	11229506	IfStatement	if ( log -> path == NULL )		11229423	9					
ANR	11229507	Condition	log -> path == NULL	884:8:36648:36664	11229423	0	True				
ANR	11229508	EqualityExpression	log -> path == NULL		11229423	0		==			
ANR	11229509	PtrMemberAccess	log -> path		11229423	0					
ANR	11229510	Identifier	log		11229423	0					
ANR	11229511	Identifier	path		11229423	1					
ANR	11229512	Identifier	NULL		11229423	1					
ANR	11229513	CompoundStatement		19:27:474:474	11229423	1					
ANR	11229514	ExpressionStatement	free ( log )	885:8:36677:36686	11229423	0	True				
ANR	11229515	CallExpression	free ( log )		11229423	0					
ANR	11229516	Callee	free		11229423	0					
ANR	11229517	Identifier	free		11229423	0					
ANR	11229518	ArgumentList	log		11229423	1					
ANR	11229519	Argument	log		11229423	0					
ANR	11229520	Identifier	log		11229423	0					
ANR	11229521	ReturnStatement	return NULL ;	886:8:36696:36707	11229423	1	True				
ANR	11229522	Identifier	NULL		11229423	0					
ANR	11229523	ExpressionStatement	"strcpy ( log -> path , path )"	888:4:36719:36742	11229423	10	True				
ANR	11229524	CallExpression	"strcpy ( log -> path , path )"		11229423	0					
ANR	11229525	Callee	strcpy		11229423	0					
ANR	11229526	Identifier	strcpy		11229423	0					
ANR	11229527	ArgumentList	log -> path		11229423	1					
ANR	11229528	Argument	log -> path		11229423	0					
ANR	11229529	PtrMemberAccess	log -> path		11229423	0					
ANR	11229530	Identifier	log		11229423	0					
ANR	11229531	Identifier	path		11229423	1					
ANR	11229532	Argument	path		11229423	1					
ANR	11229533	Identifier	path		11229423	0					
ANR	11229534	ExpressionStatement	log -> end = log -> path + n	889:4:36748:36772	11229423	11	True				
ANR	11229535	AssignmentExpression	log -> end = log -> path + n		11229423	0		=			
ANR	11229536	PtrMemberAccess	log -> end		11229423	0					
ANR	11229537	Identifier	log		11229423	0					
ANR	11229538	Identifier	end		11229423	1					
ANR	11229539	AdditiveExpression	log -> path + n		11229423	1		+			
ANR	11229540	PtrMemberAccess	log -> path		11229423	0					
ANR	11229541	Identifier	log		11229423	0					
ANR	11229542	Identifier	path		11229423	1					
ANR	11229543	Identifier	n		11229423	1					
ANR	11229544	IfStatement	if ( log_open ( log ) )		11229423	12					
ANR	11229545	Condition	log_open ( log )	893:8:36888:36900	11229423	0	True				
ANR	11229546	CallExpression	log_open ( log )		11229423	0					
ANR	11229547	Callee	log_open		11229423	0					
ANR	11229548	Identifier	log_open		11229423	0					
ANR	11229549	ArgumentList	log		11229423	1					
ANR	11229550	Argument	log		11229423	0					
ANR	11229551	Identifier	log		11229423	0					
ANR	11229552	CompoundStatement		28:23:710:710	11229423	1					
ANR	11229553	ExpressionStatement	free ( log -> path )	894:8:36913:36928	11229423	0	True				
ANR	11229554	CallExpression	free ( log -> path )		11229423	0					
ANR	11229555	Callee	free		11229423	0					
ANR	11229556	Identifier	free		11229423	0					
ANR	11229557	ArgumentList	log -> path		11229423	1					
ANR	11229558	Argument	log -> path		11229423	0					
ANR	11229559	PtrMemberAccess	log -> path		11229423	0					
ANR	11229560	Identifier	log		11229423	0					
ANR	11229561	Identifier	path		11229423	1					
ANR	11229562	ExpressionStatement	free ( log )	895:8:36938:36947	11229423	1	True				
ANR	11229563	CallExpression	free ( log )		11229423	0					
ANR	11229564	Callee	free		11229423	0					
ANR	11229565	Identifier	free		11229423	0					
ANR	11229566	ArgumentList	log		11229423	1					
ANR	11229567	Argument	log		11229423	0					
ANR	11229568	Identifier	log		11229423	0					
ANR	11229569	ReturnStatement	return NULL ;	896:8:36957:36968	11229423	2	True				
ANR	11229570	Identifier	NULL		11229423	0					
ANR	11229571	ReturnStatement	return log ;	900:4:37023:37033	11229423	13	True				
ANR	11229572	Identifier	log		11229423	0					
ANR	11229573	ReturnType	gzlog *		11229423	1					
ANR	11229574	Identifier	gzlog_open		11229423	2					
ANR	11229575	ParameterList	char * path		11229423	3					
ANR	11229576	Parameter	char * path	865:18:36180:36189	11229423	0	True				
ANR	11229577	ParameterType	char *		11229423	0					
ANR	11229578	Identifier	path		11229423	1					
ANR	11229579	CFGEntryNode	ENTRY		11229423		True				
ANR	11229580	CFGExitNode	EXIT		11229423		True				
ANR	11229581	Symbol	malloc		11229423						
ANR	11229582	Symbol	log_open		11229423						
ANR	11229583	Symbol	NULL		11229423						
ANR	11229584	Symbol	log -> fd		11229423						
ANR	11229585	Symbol	log -> end		11229423						
ANR	11229586	Symbol	log		11229423						
ANR	11229587	Symbol	log -> path		11229423						
ANR	11229588	Symbol	LOGID		11229423						
ANR	11229589	Symbol	n		11229423						
ANR	11229590	Symbol	* log		11229423						
ANR	11229591	Symbol	path		11229423						
ANR	11229592	Symbol	strlen		11229423						
ANR	11229593	Symbol	* path		11229423						
ANR	11229594	Symbol	log -> id		11229423						
ANR	11229595	Function	gzlog_compress	908:0:37206:39677							
ANR	11229596	FunctionDef	gzlog_compress (gzlog * logd)		11229595	0					
ANR	11229597	CompoundStatement		909:0:37238:39677	11229595	0					
ANR	11229598	IdentifierDeclStatement	"int fd , ret ;"	910:4:37244:37255	11229595	0	True				
ANR	11229599	IdentifierDecl	fd		11229595	0					
ANR	11229600	IdentifierDeclType	int		11229595	0					
ANR	11229601	Identifier	fd		11229595	1					
ANR	11229602	IdentifierDecl	ret		11229595	1					
ANR	11229603	IdentifierDeclType	int		11229595	0					
ANR	11229604	Identifier	ret		11229595	1					
ANR	11229605	IdentifierDeclStatement	uint block ;	911:4:37261:37271	11229595	1	True				
ANR	11229606	IdentifierDecl	block		11229595	0					
ANR	11229607	IdentifierDeclType	uint		11229595	0					
ANR	11229608	Identifier	block		11229595	1					
ANR	11229609	IdentifierDeclStatement	"size_t len , next ;"	912:4:37277:37293	11229595	2	True				
ANR	11229610	IdentifierDecl	len		11229595	0					
ANR	11229611	IdentifierDeclType	size_t		11229595	0					
ANR	11229612	Identifier	len		11229595	1					
ANR	11229613	IdentifierDecl	next		11229595	1					
ANR	11229614	IdentifierDeclType	size_t		11229595	0					
ANR	11229615	Identifier	next		11229595	1					
ANR	11229616	IdentifierDeclStatement	"unsigned char * data , buf [ 5 ] ;"	913:4:37299:37326	11229595	3	True				
ANR	11229617	IdentifierDecl	* data		11229595	0					
ANR	11229618	IdentifierDeclType	unsigned char *		11229595	0					
ANR	11229619	Identifier	data		11229595	1					
ANR	11229620	IdentifierDecl	buf [ 5 ]		11229595	1					
ANR	11229621	IdentifierDeclType	unsigned char [ 5 ]		11229595	0					
ANR	11229622	Identifier	buf		11229595	1					
ANR	11229623	PrimaryExpression	5		11229595	2					
ANR	11229624	IdentifierDeclStatement	struct log * log = logd ;	914:4:37332:37354	11229595	4	True				
ANR	11229625	IdentifierDecl	* log = logd		11229595	0					
ANR	11229626	IdentifierDeclType	struct log *		11229595	0					
ANR	11229627	Identifier	log		11229595	1					
ANR	11229628	AssignmentExpression	* log = logd		11229595	2		=			
ANR	11229629	Identifier	logd		11229595	0					
ANR	11229630	Identifier	logd		11229595	1					
ANR	11229631	IfStatement	"if ( log == NULL || strcmp ( log -> id , LOGID ) )"		11229595	5					
ANR	11229632	Condition	"log == NULL || strcmp ( log -> id , LOGID )"	917:8:37391:37427	11229595	0	True				
ANR	11229633	OrExpression	"log == NULL || strcmp ( log -> id , LOGID )"		11229595	0		||			
ANR	11229634	EqualityExpression	log == NULL		11229595	0		==			
ANR	11229635	Identifier	log		11229595	0					
ANR	11229636	Identifier	NULL		11229595	1					
ANR	11229637	CallExpression	"strcmp ( log -> id , LOGID )"		11229595	1					
ANR	11229638	Callee	strcmp		11229595	0					
ANR	11229639	Identifier	strcmp		11229595	0					
ANR	11229640	ArgumentList	log -> id		11229595	1					
ANR	11229641	Argument	log -> id		11229595	0					
ANR	11229642	PtrMemberAccess	log -> id		11229595	0					
ANR	11229643	Identifier	log		11229595	0					
ANR	11229644	Identifier	id		11229595	1					
ANR	11229645	Argument	LOGID		11229595	1					
ANR	11229646	Identifier	LOGID		11229595	0					
ANR	11229647	ReturnStatement	return - 3 ;	918:8:37438:37447	11229595	1	True				
ANR	11229648	UnaryOperationExpression	- 3		11229595	0					
ANR	11229649	UnaryOperator	-		11229595	0					
ANR	11229650	PrimaryExpression	3		11229595	1					
ANR	11229651	IfStatement	if ( log_check ( log ) && log_open ( log ) )		11229595	6					
ANR	11229652	Condition	log_check ( log ) && log_open ( log )	923:8:37626:37656	11229595	0	True				
ANR	11229653	AndExpression	log_check ( log ) && log_open ( log )		11229595	0		&&			
ANR	11229654	CallExpression	log_check ( log )		11229595	0					
ANR	11229655	Callee	log_check		11229595	0					
ANR	11229656	Identifier	log_check		11229595	0					
ANR	11229657	ArgumentList	log		11229595	1					
ANR	11229658	Argument	log		11229595	0					
ANR	11229659	Identifier	log		11229595	0					
ANR	11229660	CallExpression	log_open ( log )		11229595	1					
ANR	11229661	Callee	log_open		11229595	0					
ANR	11229662	Identifier	log_open		11229595	0					
ANR	11229663	ArgumentList	log		11229595	1					
ANR	11229664	Argument	log		11229595	0					
ANR	11229665	Identifier	log		11229595	0					
ANR	11229666	ReturnStatement	return - 1 ;	924:8:37667:37676	11229595	1	True				
ANR	11229667	UnaryOperationExpression	- 1		11229595	0					
ANR	11229668	UnaryOperator	-		11229595	0					
ANR	11229669	PrimaryExpression	1		11229595	1					
ANR	11229670	ExpressionStatement	len = ( ( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 ) ) + log -> stored	927:4:37728:37819	11229595	7	True				
ANR	11229671	AssignmentExpression	len = ( ( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 ) ) + log -> stored		11229595	0		=			
ANR	11229672	Identifier	len		11229595	0					
ANR	11229673	AdditiveExpression	( ( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 ) ) + log -> stored		11229595	1		+			
ANR	11229674	BitAndExpression	( size_t ) ( log -> last - log -> first ) & ~ ( ( ( size_t ) 1 << 10 ) - 1 )		11229595	0		&			
ANR	11229675	CastExpression	( size_t ) ( log -> last - log -> first )		11229595	0					
ANR	11229676	CastTarget	size_t		11229595	0					
ANR	11229677	AdditiveExpression	log -> last - log -> first		11229595	1		-			
ANR	11229678	PtrMemberAccess	log -> last		11229595	0					
ANR	11229679	Identifier	log		11229595	0					
ANR	11229680	Identifier	last		11229595	1					
ANR	11229681	PtrMemberAccess	log -> first		11229595	1					
ANR	11229682	Identifier	log		11229595	0					
ANR	11229683	Identifier	first		11229595	1					
ANR	11229684	UnaryOperationExpression	~ ( ( ( size_t ) 1 << 10 ) - 1 )		11229595	1					
ANR	11229685	UnaryOperator	~		11229595	0					
ANR	11229686	AdditiveExpression	( ( size_t ) 1 << 10 ) - 1		11229595	1		-			
ANR	11229687	ShiftExpression	( size_t ) 1 << 10		11229595	0		<<			
ANR	11229688	CastExpression	( size_t ) 1		11229595	0					
ANR	11229689	CastTarget	size_t		11229595	0					
ANR	11229690	PrimaryExpression	1		11229595	1					
ANR	11229691	PrimaryExpression	10		11229595	1					
ANR	11229692	PrimaryExpression	1		11229595	1					
ANR	11229693	PtrMemberAccess	log -> stored		11229595	1					
ANR	11229694	Identifier	log		11229595	0					
ANR	11229695	Identifier	stored		11229595	1					
ANR	11229696	IfStatement	if ( ( data = malloc ( len ) ) == NULL )		11229595	8					
ANR	11229697	Condition	( data = malloc ( len ) ) == NULL	929:8:37829:37856	11229595	0	True				
ANR	11229698	EqualityExpression	( data = malloc ( len ) ) == NULL		11229595	0		==			
ANR	11229699	AssignmentExpression	data = malloc ( len )		11229595	0		=			
ANR	11229700	Identifier	data		11229595	0					
ANR	11229701	CallExpression	malloc ( len )		11229595	1					
ANR	11229702	Callee	malloc		11229595	0					
ANR	11229703	Identifier	malloc		11229595	0					
ANR	11229704	ArgumentList	len		11229595	1					
ANR	11229705	Argument	len		11229595	0					
ANR	11229706	Identifier	len		11229595	0					
ANR	11229707	Identifier	NULL		11229595	1					
ANR	11229708	ReturnStatement	return - 2 ;	930:8:37867:37876	11229595	1	True				
ANR	11229709	UnaryOperationExpression	- 2		11229595	0					
ANR	11229710	UnaryOperator	-		11229595	0					
ANR	11229711	PrimaryExpression	2		11229595	1					
ANR	11229712	DoStatement	do		11229595	9					
ANR	11229713	CompoundStatement		25:7:716:716	11229595	0					
ANR	11229714	IfStatement	"if ( lseek ( log -> fd , log -> first - 1 , SEEK_SET ) < 0 )"		11229595	0					
ANR	11229715	Condition	"lseek ( log -> fd , log -> first - 1 , SEEK_SET ) < 0"	935:12:38013:38056	11229595	0	True				
ANR	11229716	RelationalExpression	"lseek ( log -> fd , log -> first - 1 , SEEK_SET ) < 0"		11229595	0		<			
ANR	11229717	CallExpression	"lseek ( log -> fd , log -> first - 1 , SEEK_SET )"		11229595	0					
ANR	11229718	Callee	lseek		11229595	0					
ANR	11229719	Identifier	lseek		11229595	0					
ANR	11229720	ArgumentList	log -> fd		11229595	1					
ANR	11229721	Argument	log -> fd		11229595	0					
ANR	11229722	PtrMemberAccess	log -> fd		11229595	0					
ANR	11229723	Identifier	log		11229595	0					
ANR	11229724	Identifier	fd		11229595	1					
ANR	11229725	Argument	log -> first - 1		11229595	1					
ANR	11229726	AdditiveExpression	log -> first - 1		11229595	0		-			
ANR	11229727	PtrMemberAccess	log -> first		11229595	0					
ANR	11229728	Identifier	log		11229595	0					
ANR	11229729	Identifier	first		11229595	1					
ANR	11229730	PrimaryExpression	1		11229595	1					
ANR	11229731	Argument	SEEK_SET		11229595	2					
ANR	11229732	Identifier	SEEK_SET		11229595	0					
ANR	11229733	PrimaryExpression	0		11229595	1					
ANR	11229734	BreakStatement	break ;	936:12:38071:38076	11229595	1	True				
ANR	11229735	ExpressionStatement	next = 0	937:8:38086:38094	11229595	1	True				
ANR	11229736	AssignmentExpression	next = 0		11229595	0		=			
ANR	11229737	Identifier	next		11229595	0					
ANR	11229738	PrimaryExpression	0		11229595	1					
ANR	11229739	WhileStatement	while ( next < len )		11229595	2					
ANR	11229740	Condition	next < len	938:15:38111:38120	11229595	0	True				
ANR	11229741	RelationalExpression	next < len		11229595	0		<			
ANR	11229742	Identifier	next		11229595	0					
ANR	11229743	Identifier	len		11229595	1					
ANR	11229744	CompoundStatement		30:27:884:884	11229595	1					
ANR	11229745	IfStatement	"if ( read ( log -> fd , buf , 5 ) != 5 )"		11229595	0					
ANR	11229746	Condition	"read ( log -> fd , buf , 5 ) != 5"	939:16:38141:38166	11229595	0	True				
ANR	11229747	EqualityExpression	"read ( log -> fd , buf , 5 ) != 5"		11229595	0		!=			
ANR	11229748	CallExpression	"read ( log -> fd , buf , 5 )"		11229595	0					
ANR	11229749	Callee	read		11229595	0					
ANR	11229750	Identifier	read		11229595	0					
ANR	11229751	ArgumentList	log -> fd		11229595	1					
ANR	11229752	Argument	log -> fd		11229595	0					
ANR	11229753	PtrMemberAccess	log -> fd		11229595	0					
ANR	11229754	Identifier	log		11229595	0					
ANR	11229755	Identifier	fd		11229595	1					
ANR	11229756	Argument	buf		11229595	1					
ANR	11229757	Identifier	buf		11229595	0					
ANR	11229758	Argument	5		11229595	2					
ANR	11229759	PrimaryExpression	5		11229595	0					
ANR	11229760	PrimaryExpression	5		11229595	1					
ANR	11229761	BreakStatement	break ;	940:16:38185:38190	11229595	1	True				
ANR	11229762	ExpressionStatement	block = PULL2 ( buf + 1 )	941:12:38204:38226	11229595	1	True				
ANR	11229763	AssignmentExpression	block = PULL2 ( buf + 1 )		11229595	0		=			
ANR	11229764	Identifier	block		11229595	0					
ANR	11229765	CallExpression	PULL2 ( buf + 1 )		11229595	1					
ANR	11229766	Callee	PULL2		11229595	0					
ANR	11229767	Identifier	PULL2		11229595	0					
ANR	11229768	ArgumentList	buf + 1		11229595	1					
ANR	11229769	Argument	buf + 1		11229595	0					
ANR	11229770	AdditiveExpression	buf + 1		11229595	0		+			
ANR	11229771	Identifier	buf		11229595	0					
ANR	11229772	PrimaryExpression	1		11229595	1					
ANR	11229773	IfStatement	"if ( next + block > len || read ( log -> fd , ( char * ) data + next , block ) != block )"		11229595	2					
ANR	11229774	Condition	"next + block > len || read ( log -> fd , ( char * ) data + next , block ) != block"	942:16:38244:38331	11229595	0	True				
ANR	11229775	OrExpression	"next + block > len || read ( log -> fd , ( char * ) data + next , block ) != block"		11229595	0		||			
ANR	11229776	RelationalExpression	next + block > len		11229595	0		>			
ANR	11229777	AdditiveExpression	next + block		11229595	0		+			
ANR	11229778	Identifier	next		11229595	0					
ANR	11229779	Identifier	block		11229595	1					
ANR	11229780	Identifier	len		11229595	1					
ANR	11229781	EqualityExpression	"read ( log -> fd , ( char * ) data + next , block ) != block"		11229595	1		!=			
ANR	11229782	CallExpression	"read ( log -> fd , ( char * ) data + next , block )"		11229595	0					
ANR	11229783	Callee	read		11229595	0					
ANR	11229784	Identifier	read		11229595	0					
ANR	11229785	ArgumentList	log -> fd		11229595	1					
ANR	11229786	Argument	log -> fd		11229595	0					
ANR	11229787	PtrMemberAccess	log -> fd		11229595	0					
ANR	11229788	Identifier	log		11229595	0					
ANR	11229789	Identifier	fd		11229595	1					
ANR	11229790	Argument	( char * ) data + next		11229595	1					
ANR	11229791	AdditiveExpression	( char * ) data + next		11229595	0		+			
ANR	11229792	CastExpression	( char * ) data		11229595	0					
ANR	11229793	CastTarget	char *		11229595	0					
ANR	11229794	Identifier	data		11229595	1					
ANR	11229795	Identifier	next		11229595	1					
ANR	11229796	Argument	block		11229595	2					
ANR	11229797	Identifier	block		11229595	0					
ANR	11229798	Identifier	block		11229595	1					
ANR	11229799	BreakStatement	break ;	944:16:38350:38355	11229595	1	True				
ANR	11229800	ExpressionStatement	next += block	945:12:38369:38382	11229595	3	True				
ANR	11229801	AssignmentExpression	next += block		11229595	0		+=			
ANR	11229802	Identifier	next		11229595	0					
ANR	11229803	Identifier	block		11229595	1					
ANR	11229804	IfStatement	"if ( lseek ( log -> fd , 0 , SEEK_CUR ) != log -> last + 4 + log -> stored )"		11229595	3					
ANR	11229805	Condition	"lseek ( log -> fd , 0 , SEEK_CUR ) != log -> last + 4 + log -> stored"	947:12:38406:38463	11229595	0	True				
ANR	11229806	EqualityExpression	"lseek ( log -> fd , 0 , SEEK_CUR ) != log -> last + 4 + log -> stored"		11229595	0		!=			
ANR	11229807	CallExpression	"lseek ( log -> fd , 0 , SEEK_CUR )"		11229595	0					
ANR	11229808	Callee	lseek		11229595	0					
ANR	11229809	Identifier	lseek		11229595	0					
ANR	11229810	ArgumentList	log -> fd		11229595	1					
ANR	11229811	Argument	log -> fd		11229595	0					
ANR	11229812	PtrMemberAccess	log -> fd		11229595	0					
ANR	11229813	Identifier	log		11229595	0					
ANR	11229814	Identifier	fd		11229595	1					
ANR	11229815	Argument	0		11229595	1					
ANR	11229816	PrimaryExpression	0		11229595	0					
ANR	11229817	Argument	SEEK_CUR		11229595	2					
ANR	11229818	Identifier	SEEK_CUR		11229595	0					
ANR	11229819	AdditiveExpression	log -> last + 4 + log -> stored		11229595	1		+			
ANR	11229820	PtrMemberAccess	log -> last		11229595	0					
ANR	11229821	Identifier	log		11229595	0					
ANR	11229822	Identifier	last		11229595	1					
ANR	11229823	AdditiveExpression	4 + log -> stored		11229595	1		+			
ANR	11229824	PrimaryExpression	4		11229595	0					
ANR	11229825	PtrMemberAccess	log -> stored		11229595	1					
ANR	11229826	Identifier	log		11229595	0					
ANR	11229827	Identifier	stored		11229595	1					
ANR	11229828	BreakStatement	break ;	948:12:38478:38483	11229595	1	True				
ANR	11229829	ExpressionStatement	log_touch ( log )	949:8:38493:38507	11229595	4	True				
ANR	11229830	CallExpression	log_touch ( log )		11229595	0					
ANR	11229831	Callee	log_touch		11229595	0					
ANR	11229832	Identifier	log_touch		11229595	0					
ANR	11229833	ArgumentList	log		11229595	1					
ANR	11229834	Argument	log		11229595	0					
ANR	11229835	Identifier	log		11229595	0					
ANR	11229836	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	952:8:38577:38601	11229595	5	True				
ANR	11229837	CallExpression	"strcpy ( log -> end , "".add"" )"		11229595	0					
ANR	11229838	Callee	strcpy		11229595	0					
ANR	11229839	Identifier	strcpy		11229595	0					
ANR	11229840	ArgumentList	log -> end		11229595	1					
ANR	11229841	Argument	log -> end		11229595	0					
ANR	11229842	PtrMemberAccess	log -> end		11229595	0					
ANR	11229843	Identifier	log		11229595	0					
ANR	11229844	Identifier	end		11229595	1					
ANR	11229845	Argument	""".add"""		11229595	1					
ANR	11229846	PrimaryExpression	""".add"""		11229595	0					
ANR	11229847	ExpressionStatement	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"	953:8:38611:38667	11229595	6	True				
ANR	11229848	AssignmentExpression	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		11229595	0		=			
ANR	11229849	Identifier	fd		11229595	0					
ANR	11229850	CallExpression	"open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		11229595	1					
ANR	11229851	Callee	open		11229595	0					
ANR	11229852	Identifier	open		11229595	0					
ANR	11229853	ArgumentList	log -> path		11229595	1					
ANR	11229854	Argument	log -> path		11229595	0					
ANR	11229855	PtrMemberAccess	log -> path		11229595	0					
ANR	11229856	Identifier	log		11229595	0					
ANR	11229857	Identifier	path		11229595	1					
ANR	11229858	Argument	O_WRONLY | O_CREAT | O_TRUNC		11229595	1					
ANR	11229859	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		11229595	0		|			
ANR	11229860	Identifier	O_WRONLY		11229595	0					
ANR	11229861	InclusiveOrExpression	O_CREAT | O_TRUNC		11229595	1		|			
ANR	11229862	Identifier	O_CREAT		11229595	0					
ANR	11229863	Identifier	O_TRUNC		11229595	1					
ANR	11229864	Argument	0644		11229595	2					
ANR	11229865	PrimaryExpression	0644		11229595	0					
ANR	11229866	IfStatement	if ( fd < 0 )		11229595	7					
ANR	11229867	Condition	fd < 0	954:12:38681:38686	11229595	0	True				
ANR	11229868	RelationalExpression	fd < 0		11229595	0		<			
ANR	11229869	Identifier	fd		11229595	0					
ANR	11229870	PrimaryExpression	0		11229595	1					
ANR	11229871	BreakStatement	break ;	955:12:38701:38706	11229595	1	True				
ANR	11229872	ExpressionStatement	"ret = ( size_t ) write ( fd , data , len ) != len"	956:8:38716:38757	11229595	8	True				
ANR	11229873	AssignmentExpression	"ret = ( size_t ) write ( fd , data , len ) != len"		11229595	0		=			
ANR	11229874	Identifier	ret		11229595	0					
ANR	11229875	EqualityExpression	"( size_t ) write ( fd , data , len ) != len"		11229595	1		!=			
ANR	11229876	CastExpression	"( size_t ) write ( fd , data , len )"		11229595	0					
ANR	11229877	CastTarget	size_t		11229595	0					
ANR	11229878	CallExpression	"write ( fd , data , len )"		11229595	1					
ANR	11229879	Callee	write		11229595	0					
ANR	11229880	Identifier	write		11229595	0					
ANR	11229881	ArgumentList	fd		11229595	1					
ANR	11229882	Argument	fd		11229595	0					
ANR	11229883	Identifier	fd		11229595	0					
ANR	11229884	Argument	data		11229595	1					
ANR	11229885	Identifier	data		11229595	0					
ANR	11229886	Argument	len		11229595	2					
ANR	11229887	Identifier	len		11229595	0					
ANR	11229888	Identifier	len		11229595	1					
ANR	11229889	IfStatement	if ( ret | close ( fd ) )		11229595	9					
ANR	11229890	Condition	ret | close ( fd )	957:12:38771:38785	11229595	0	True				
ANR	11229891	InclusiveOrExpression	ret | close ( fd )		11229595	0		|			
ANR	11229892	Identifier	ret		11229595	0					
ANR	11229893	CallExpression	close ( fd )		11229595	1					
ANR	11229894	Callee	close		11229595	0					
ANR	11229895	Identifier	close		11229595	0					
ANR	11229896	ArgumentList	fd		11229595	1					
ANR	11229897	Argument	fd		11229595	0					
ANR	11229898	Identifier	fd		11229595	0					
ANR	11229899	BreakStatement	break ;	958:12:38800:38805	11229595	1	True				
ANR	11229900	ExpressionStatement	log_touch ( log )	959:8:38815:38829	11229595	10	True				
ANR	11229901	CallExpression	log_touch ( log )		11229595	0					
ANR	11229902	Callee	log_touch		11229595	0					
ANR	11229903	Identifier	log_touch		11229595	0					
ANR	11229904	ArgumentList	log		11229595	1					
ANR	11229905	Argument	log		11229595	0					
ANR	11229906	Identifier	log		11229595	0					
ANR	11229907	ExpressionStatement	"strcpy ( log -> end , "".temp"" )"	962:8:38915:38940	11229595	11	True				
ANR	11229908	CallExpression	"strcpy ( log -> end , "".temp"" )"		11229595	0					
ANR	11229909	Callee	strcpy		11229595	0					
ANR	11229910	Identifier	strcpy		11229595	0					
ANR	11229911	ArgumentList	log -> end		11229595	1					
ANR	11229912	Argument	log -> end		11229595	0					
ANR	11229913	PtrMemberAccess	log -> end		11229595	0					
ANR	11229914	Identifier	log		11229595	0					
ANR	11229915	Identifier	end		11229595	1					
ANR	11229916	Argument	""".temp"""		11229595	1					
ANR	11229917	PrimaryExpression	""".temp"""		11229595	0					
ANR	11229918	ExpressionStatement	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"	963:8:38950:39006	11229595	12	True				
ANR	11229919	AssignmentExpression	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		11229595	0		=			
ANR	11229920	Identifier	fd		11229595	0					
ANR	11229921	CallExpression	"open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		11229595	1					
ANR	11229922	Callee	open		11229595	0					
ANR	11229923	Identifier	open		11229595	0					
ANR	11229924	ArgumentList	log -> path		11229595	1					
ANR	11229925	Argument	log -> path		11229595	0					
ANR	11229926	PtrMemberAccess	log -> path		11229595	0					
ANR	11229927	Identifier	log		11229595	0					
ANR	11229928	Identifier	path		11229595	1					
ANR	11229929	Argument	O_WRONLY | O_CREAT | O_TRUNC		11229595	1					
ANR	11229930	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		11229595	0		|			
ANR	11229931	Identifier	O_WRONLY		11229595	0					
ANR	11229932	InclusiveOrExpression	O_CREAT | O_TRUNC		11229595	1		|			
ANR	11229933	Identifier	O_CREAT		11229595	0					
ANR	11229934	Identifier	O_TRUNC		11229595	1					
ANR	11229935	Argument	0644		11229595	2					
ANR	11229936	PrimaryExpression	0644		11229595	0					
ANR	11229937	IfStatement	if ( fd < 0 )		11229595	13					
ANR	11229938	Condition	fd < 0	964:12:39020:39025	11229595	0	True				
ANR	11229939	RelationalExpression	fd < 0		11229595	0		<			
ANR	11229940	Identifier	fd		11229595	0					
ANR	11229941	PrimaryExpression	0		11229595	1					
ANR	11229942	BreakStatement	break ;	965:12:39040:39045	11229595	1	True				
ANR	11229943	ExpressionStatement	next = DICT > len ? len : DICT	966:8:39055:39085	11229595	14	True				
ANR	11229944	AssignmentExpression	next = DICT > len ? len : DICT		11229595	0		=			
ANR	11229945	Identifier	next		11229595	0					
ANR	11229946	ConditionalExpression	DICT > len ? len : DICT		11229595	1					
ANR	11229947	Condition	DICT > len		11229595	0					
ANR	11229948	RelationalExpression	DICT > len		11229595	0		>			
ANR	11229949	Identifier	DICT		11229595	0					
ANR	11229950	Identifier	len		11229595	1					
ANR	11229951	Identifier	len		11229595	1					
ANR	11229952	Identifier	DICT		11229595	2					
ANR	11229953	ExpressionStatement	"ret = ( size_t ) write ( fd , ( char * ) data + len - next , next ) != next"	967:8:39095:39159	11229595	15	True				
ANR	11229954	AssignmentExpression	"ret = ( size_t ) write ( fd , ( char * ) data + len - next , next ) != next"		11229595	0		=			
ANR	11229955	Identifier	ret		11229595	0					
ANR	11229956	EqualityExpression	"( size_t ) write ( fd , ( char * ) data + len - next , next ) != next"		11229595	1		!=			
ANR	11229957	CastExpression	"( size_t ) write ( fd , ( char * ) data + len - next , next )"		11229595	0					
ANR	11229958	CastTarget	size_t		11229595	0					
ANR	11229959	CallExpression	"write ( fd , ( char * ) data + len - next , next )"		11229595	1					
ANR	11229960	Callee	write		11229595	0					
ANR	11229961	Identifier	write		11229595	0					
ANR	11229962	ArgumentList	fd		11229595	1					
ANR	11229963	Argument	fd		11229595	0					
ANR	11229964	Identifier	fd		11229595	0					
ANR	11229965	Argument	( char * ) data + len - next		11229595	1					
ANR	11229966	AdditiveExpression	( char * ) data + len - next		11229595	0		+			
ANR	11229967	CastExpression	( char * ) data		11229595	0					
ANR	11229968	CastTarget	char *		11229595	0					
ANR	11229969	Identifier	data		11229595	1					
ANR	11229970	AdditiveExpression	len - next		11229595	1		-			
ANR	11229971	Identifier	len		11229595	0					
ANR	11229972	Identifier	next		11229595	1					
ANR	11229973	Argument	next		11229595	2					
ANR	11229974	Identifier	next		11229595	0					
ANR	11229975	Identifier	next		11229595	1					
ANR	11229976	IfStatement	if ( ret | close ( fd ) )		11229595	16					
ANR	11229977	Condition	ret | close ( fd )	968:12:39173:39187	11229595	0	True				
ANR	11229978	InclusiveOrExpression	ret | close ( fd )		11229595	0		|			
ANR	11229979	Identifier	ret		11229595	0					
ANR	11229980	CallExpression	close ( fd )		11229595	1					
ANR	11229981	Callee	close		11229595	0					
ANR	11229982	Identifier	close		11229595	0					
ANR	11229983	ArgumentList	fd		11229595	1					
ANR	11229984	Argument	fd		11229595	0					
ANR	11229985	Identifier	fd		11229595	0					
ANR	11229986	BreakStatement	break ;	969:12:39202:39207	11229595	1	True				
ANR	11229987	ExpressionStatement	log_touch ( log )	970:8:39217:39231	11229595	17	True				
ANR	11229988	CallExpression	log_touch ( log )		11229595	0					
ANR	11229989	Callee	log_touch		11229595	0					
ANR	11229990	Identifier	log_touch		11229595	0					
ANR	11229991	ArgumentList	log		11229595	1					
ANR	11229992	Argument	log		11229595	0					
ANR	11229993	Identifier	log		11229595	0					
ANR	11229994	ExpressionStatement	log -> last = log -> first	973:8:39316:39338	11229595	18	True				
ANR	11229995	AssignmentExpression	log -> last = log -> first		11229595	0		=			
ANR	11229996	PtrMemberAccess	log -> last		11229595	0					
ANR	11229997	Identifier	log		11229595	0					
ANR	11229998	Identifier	last		11229595	1					
ANR	11229999	PtrMemberAccess	log -> first		11229595	1					
ANR	11230000	Identifier	log		11229595	0					
ANR	11230001	Identifier	first		11229595	1					
ANR	11230002	ExpressionStatement	log -> stored = 0	974:8:39348:39363	11229595	19	True				
ANR	11230003	AssignmentExpression	log -> stored = 0		11229595	0		=			
ANR	11230004	PtrMemberAccess	log -> stored		11229595	0					
ANR	11230005	Identifier	log		11229595	0					
ANR	11230006	Identifier	stored		11229595	1					
ANR	11230007	PrimaryExpression	0		11229595	1					
ANR	11230008	IfStatement	"if ( log_mark ( log , COMPRESS_OP ) )"		11229595	20					
ANR	11230009	Condition	"log_mark ( log , COMPRESS_OP )"	975:12:39377:39402	11229595	0	True				
ANR	11230010	CallExpression	"log_mark ( log , COMPRESS_OP )"		11229595	0					
ANR	11230011	Callee	log_mark		11229595	0					
ANR	11230012	Identifier	log_mark		11229595	0					
ANR	11230013	ArgumentList	log		11229595	1					
ANR	11230014	Argument	log		11229595	0					
ANR	11230015	Identifier	log		11229595	0					
ANR	11230016	Argument	COMPRESS_OP		11229595	1					
ANR	11230017	Identifier	COMPRESS_OP		11229595	0					
ANR	11230018	BreakStatement	break ;	976:12:39417:39422	11229595	1	True				
ANR	11230019	ExpressionStatement	BAIL ( 7 )	977:8:39432:39439	11229595	21	True				
ANR	11230020	CallExpression	BAIL ( 7 )		11229595	0					
ANR	11230021	Callee	BAIL		11229595	0					
ANR	11230022	Identifier	BAIL		11229595	0					
ANR	11230023	ArgumentList	7		11229595	1					
ANR	11230024	Argument	7		11229595	0					
ANR	11230025	PrimaryExpression	7		11229595	0					
ANR	11230026	ExpressionStatement	"ret = log_compress ( log , data , len )"	980:8:39507:39541	11229595	22	True				
ANR	11230027	AssignmentExpression	"ret = log_compress ( log , data , len )"		11229595	0		=			
ANR	11230028	Identifier	ret		11229595	0					
ANR	11230029	CallExpression	"log_compress ( log , data , len )"		11229595	1					
ANR	11230030	Callee	log_compress		11229595	0					
ANR	11230031	Identifier	log_compress		11229595	0					
ANR	11230032	ArgumentList	log		11229595	1					
ANR	11230033	Argument	log		11229595	0					
ANR	11230034	Identifier	log		11229595	0					
ANR	11230035	Argument	data		11229595	1					
ANR	11230036	Identifier	data		11229595	0					
ANR	11230037	Argument	len		11229595	2					
ANR	11230038	Identifier	len		11229595	0					
ANR	11230039	ExpressionStatement	free ( data )	981:8:39551:39561	11229595	23	True				
ANR	11230040	CallExpression	free ( data )		11229595	0					
ANR	11230041	Callee	free		11229595	0					
ANR	11230042	Identifier	free		11229595	0					
ANR	11230043	ArgumentList	data		11229595	1					
ANR	11230044	Argument	data		11229595	0					
ANR	11230045	Identifier	data		11229595	0					
ANR	11230046	ReturnStatement	return ret ;	982:8:39571:39581	11229595	24	True				
ANR	11230047	Identifier	ret		11229595	0					
ANR	11230048	Condition	0	983:13:39596:39596	11229595	1	True				
ANR	11230049	PrimaryExpression	0		11229595	0					
ANR	11230050	ExpressionStatement	free ( data )	986:4:39650:39660	11229595	10	True				
ANR	11230051	CallExpression	free ( data )		11229595	0					
ANR	11230052	Callee	free		11229595	0					
ANR	11230053	Identifier	free		11229595	0					
ANR	11230054	ArgumentList	data		11229595	1					
ANR	11230055	Argument	data		11229595	0					
ANR	11230056	Identifier	data		11229595	0					
ANR	11230057	ReturnStatement	return - 1 ;	987:4:39666:39675	11229595	11	True				
ANR	11230058	UnaryOperationExpression	- 1		11229595	0					
ANR	11230059	UnaryOperator	-		11229595	0					
ANR	11230060	PrimaryExpression	1		11229595	1					
ANR	11230061	ReturnType	int		11229595	1					
ANR	11230062	Identifier	gzlog_compress		11229595	2					
ANR	11230063	ParameterList	gzlog * logd		11229595	3					
ANR	11230064	Parameter	gzlog * logd	908:19:37225:37235	11229595	0	True				
ANR	11230065	ParameterType	gzlog *		11229595	0					
ANR	11230066	Identifier	logd		11229595	1					
ANR	11230067	CFGEntryNode	ENTRY		11229595		True				
ANR	11230068	CFGExitNode	EXIT		11229595		True				
ANR	11230069	Symbol	next		11229595						
ANR	11230070	Symbol	PULL2		11229595						
ANR	11230071	Symbol	lseek		11229595						
ANR	11230072	Symbol	SEEK_CUR		11229595						
ANR	11230073	Symbol	data		11229595						
ANR	11230074	Symbol	log -> end		11229595						
ANR	11230075	Symbol	log		11229595						
ANR	11230076	Symbol	O_CREAT		11229595						
ANR	11230077	Symbol	logd		11229595						
ANR	11230078	Symbol	len		11229595						
ANR	11230079	Symbol	DICT		11229595						
ANR	11230080	Symbol	block		11229595						
ANR	11230081	Symbol	log -> id		11229595						
ANR	11230082	Symbol	write		11229595						
ANR	11230083	Symbol	close		11229595						
ANR	11230084	Symbol	ret		11229595						
ANR	11230085	Symbol	strcmp		11229595						
ANR	11230086	Symbol	SEEK_SET		11229595						
ANR	11230087	Symbol	log_open		11229595						
ANR	11230088	Symbol	malloc		11229595						
ANR	11230089	Symbol	NULL		11229595						
ANR	11230090	Symbol	read		11229595						
ANR	11230091	Symbol	log -> fd		11229595						
ANR	11230092	Symbol	log -> path		11229595						
ANR	11230093	Symbol	log_compress		11229595						
ANR	11230094	Symbol	log -> first		11229595						
ANR	11230095	Symbol	log_mark		11229595						
ANR	11230096	Symbol	LOGID		11229595						
ANR	11230097	Symbol	* log		11229595						
ANR	11230098	Symbol	log_check		11229595						
ANR	11230099	Symbol	COMPRESS_OP		11229595						
ANR	11230100	Symbol	buf		11229595						
ANR	11230101	Symbol	O_TRUNC		11229595						
ANR	11230102	Symbol	log -> last		11229595						
ANR	11230103	Symbol	O_WRONLY		11229595						
ANR	11230104	Symbol	log -> stored		11229595						
ANR	11230105	Symbol	fd		11229595						
ANR	11230106	Symbol	open		11229595						
ANR	11230107	Function	gzlog_write	995:0:39845:41024							
ANR	11230108	FunctionDef	"gzlog_write (gzlog * logd , void * data , size_t len)"		11230107	0					
ANR	11230109	CompoundStatement		996:0:39898:41024	11230107	0					
ANR	11230110	IdentifierDeclStatement	"int fd , ret ;"	997:4:39904:39915	11230107	0	True				
ANR	11230111	IdentifierDecl	fd		11230107	0					
ANR	11230112	IdentifierDeclType	int		11230107	0					
ANR	11230113	Identifier	fd		11230107	1					
ANR	11230114	IdentifierDecl	ret		11230107	1					
ANR	11230115	IdentifierDeclType	int		11230107	0					
ANR	11230116	Identifier	ret		11230107	1					
ANR	11230117	IdentifierDeclStatement	struct log * log = logd ;	998:4:39921:39943	11230107	1	True				
ANR	11230118	IdentifierDecl	* log = logd		11230107	0					
ANR	11230119	IdentifierDeclType	struct log *		11230107	0					
ANR	11230120	Identifier	log		11230107	1					
ANR	11230121	AssignmentExpression	* log = logd		11230107	2		=			
ANR	11230122	Identifier	logd		11230107	0					
ANR	11230123	Identifier	logd		11230107	1					
ANR	11230124	IfStatement	"if ( log == NULL || strcmp ( log -> id , LOGID ) )"		11230107	2					
ANR	11230125	Condition	"log == NULL || strcmp ( log -> id , LOGID )"	1001:8:39980:40016	11230107	0	True				
ANR	11230126	OrExpression	"log == NULL || strcmp ( log -> id , LOGID )"		11230107	0		||			
ANR	11230127	EqualityExpression	log == NULL		11230107	0		==			
ANR	11230128	Identifier	log		11230107	0					
ANR	11230129	Identifier	NULL		11230107	1					
ANR	11230130	CallExpression	"strcmp ( log -> id , LOGID )"		11230107	1					
ANR	11230131	Callee	strcmp		11230107	0					
ANR	11230132	Identifier	strcmp		11230107	0					
ANR	11230133	ArgumentList	log -> id		11230107	1					
ANR	11230134	Argument	log -> id		11230107	0					
ANR	11230135	PtrMemberAccess	log -> id		11230107	0					
ANR	11230136	Identifier	log		11230107	0					
ANR	11230137	Identifier	id		11230107	1					
ANR	11230138	Argument	LOGID		11230107	1					
ANR	11230139	Identifier	LOGID		11230107	0					
ANR	11230140	ReturnStatement	return - 3 ;	1002:8:40027:40036	11230107	1	True				
ANR	11230141	UnaryOperationExpression	- 3		11230107	0					
ANR	11230142	UnaryOperator	-		11230107	0					
ANR	11230143	PrimaryExpression	3		11230107	1					
ANR	11230144	IfStatement	if ( data == NULL || len <= 0 )		11230107	3					
ANR	11230145	Condition	data == NULL || len <= 0	1003:8:40046:40069	11230107	0	True				
ANR	11230146	OrExpression	data == NULL || len <= 0		11230107	0		||			
ANR	11230147	EqualityExpression	data == NULL		11230107	0		==			
ANR	11230148	Identifier	data		11230107	0					
ANR	11230149	Identifier	NULL		11230107	1					
ANR	11230150	RelationalExpression	len <= 0		11230107	1		<=			
ANR	11230151	Identifier	len		11230107	0					
ANR	11230152	PrimaryExpression	0		11230107	1					
ANR	11230153	ReturnStatement	return 0 ;	1004:8:40080:40088	11230107	1	True				
ANR	11230154	PrimaryExpression	0		11230107	0					
ANR	11230155	IfStatement	if ( log_check ( log ) && log_open ( log ) )		11230107	4					
ANR	11230156	Condition	log_check ( log ) && log_open ( log )	1009:8:40267:40297	11230107	0	True				
ANR	11230157	AndExpression	log_check ( log ) && log_open ( log )		11230107	0		&&			
ANR	11230158	CallExpression	log_check ( log )		11230107	0					
ANR	11230159	Callee	log_check		11230107	0					
ANR	11230160	Identifier	log_check		11230107	0					
ANR	11230161	ArgumentList	log		11230107	1					
ANR	11230162	Argument	log		11230107	0					
ANR	11230163	Identifier	log		11230107	0					
ANR	11230164	CallExpression	log_open ( log )		11230107	1					
ANR	11230165	Callee	log_open		11230107	0					
ANR	11230166	Identifier	log_open		11230107	0					
ANR	11230167	ArgumentList	log		11230107	1					
ANR	11230168	Argument	log		11230107	0					
ANR	11230169	Identifier	log		11230107	0					
ANR	11230170	ReturnStatement	return - 1 ;	1010:8:40308:40317	11230107	1	True				
ANR	11230171	UnaryOperationExpression	- 1		11230107	0					
ANR	11230172	UnaryOperator	-		11230107	0					
ANR	11230173	PrimaryExpression	1		11230107	1					
ANR	11230174	ExpressionStatement	"strcpy ( log -> end , "".add"" )"	1013:4:40361:40385	11230107	5	True				
ANR	11230175	CallExpression	"strcpy ( log -> end , "".add"" )"		11230107	0					
ANR	11230176	Callee	strcpy		11230107	0					
ANR	11230177	Identifier	strcpy		11230107	0					
ANR	11230178	ArgumentList	log -> end		11230107	1					
ANR	11230179	Argument	log -> end		11230107	0					
ANR	11230180	PtrMemberAccess	log -> end		11230107	0					
ANR	11230181	Identifier	log		11230107	0					
ANR	11230182	Identifier	end		11230107	1					
ANR	11230183	Argument	""".add"""		11230107	1					
ANR	11230184	PrimaryExpression	""".add"""		11230107	0					
ANR	11230185	ExpressionStatement	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"	1014:4:40391:40447	11230107	6	True				
ANR	11230186	AssignmentExpression	"fd = open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		11230107	0		=			
ANR	11230187	Identifier	fd		11230107	0					
ANR	11230188	CallExpression	"open ( log -> path , O_WRONLY | O_CREAT | O_TRUNC , 0644 )"		11230107	1					
ANR	11230189	Callee	open		11230107	0					
ANR	11230190	Identifier	open		11230107	0					
ANR	11230191	ArgumentList	log -> path		11230107	1					
ANR	11230192	Argument	log -> path		11230107	0					
ANR	11230193	PtrMemberAccess	log -> path		11230107	0					
ANR	11230194	Identifier	log		11230107	0					
ANR	11230195	Identifier	path		11230107	1					
ANR	11230196	Argument	O_WRONLY | O_CREAT | O_TRUNC		11230107	1					
ANR	11230197	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		11230107	0		|			
ANR	11230198	Identifier	O_WRONLY		11230107	0					
ANR	11230199	InclusiveOrExpression	O_CREAT | O_TRUNC		11230107	1		|			
ANR	11230200	Identifier	O_CREAT		11230107	0					
ANR	11230201	Identifier	O_TRUNC		11230107	1					
ANR	11230202	Argument	0644		11230107	2					
ANR	11230203	PrimaryExpression	0644		11230107	0					
ANR	11230204	IfStatement	if ( fd < 0 )		11230107	7					
ANR	11230205	Condition	fd < 0	1015:8:40457:40462	11230107	0	True				
ANR	11230206	RelationalExpression	fd < 0		11230107	0		<			
ANR	11230207	Identifier	fd		11230107	0					
ANR	11230208	PrimaryExpression	0		11230107	1					
ANR	11230209	ReturnStatement	return - 1 ;	1016:8:40473:40482	11230107	1	True				
ANR	11230210	UnaryOperationExpression	- 1		11230107	0					
ANR	11230211	UnaryOperator	-		11230107	0					
ANR	11230212	PrimaryExpression	1		11230107	1					
ANR	11230213	ExpressionStatement	"ret = ( size_t ) write ( fd , data , len ) != len"	1017:4:40488:40529	11230107	8	True				
ANR	11230214	AssignmentExpression	"ret = ( size_t ) write ( fd , data , len ) != len"		11230107	0		=			
ANR	11230215	Identifier	ret		11230107	0					
ANR	11230216	EqualityExpression	"( size_t ) write ( fd , data , len ) != len"		11230107	1		!=			
ANR	11230217	CastExpression	"( size_t ) write ( fd , data , len )"		11230107	0					
ANR	11230218	CastTarget	size_t		11230107	0					
ANR	11230219	CallExpression	"write ( fd , data , len )"		11230107	1					
ANR	11230220	Callee	write		11230107	0					
ANR	11230221	Identifier	write		11230107	0					
ANR	11230222	ArgumentList	fd		11230107	1					
ANR	11230223	Argument	fd		11230107	0					
ANR	11230224	Identifier	fd		11230107	0					
ANR	11230225	Argument	data		11230107	1					
ANR	11230226	Identifier	data		11230107	0					
ANR	11230227	Argument	len		11230107	2					
ANR	11230228	Identifier	len		11230107	0					
ANR	11230229	Identifier	len		11230107	1					
ANR	11230230	IfStatement	if ( ret | close ( fd ) )		11230107	9					
ANR	11230231	Condition	ret | close ( fd )	1018:8:40539:40553	11230107	0	True				
ANR	11230232	InclusiveOrExpression	ret | close ( fd )		11230107	0		|			
ANR	11230233	Identifier	ret		11230107	0					
ANR	11230234	CallExpression	close ( fd )		11230107	1					
ANR	11230235	Callee	close		11230107	0					
ANR	11230236	Identifier	close		11230107	0					
ANR	11230237	ArgumentList	fd		11230107	1					
ANR	11230238	Argument	fd		11230107	0					
ANR	11230239	Identifier	fd		11230107	0					
ANR	11230240	ReturnStatement	return - 1 ;	1019:8:40564:40573	11230107	1	True				
ANR	11230241	UnaryOperationExpression	- 1		11230107	0					
ANR	11230242	UnaryOperator	-		11230107	0					
ANR	11230243	PrimaryExpression	1		11230107	1					
ANR	11230244	ExpressionStatement	log_touch ( log )	1020:4:40579:40593	11230107	10	True				
ANR	11230245	CallExpression	log_touch ( log )		11230107	0					
ANR	11230246	Callee	log_touch		11230107	0					
ANR	11230247	Identifier	log_touch		11230107	0					
ANR	11230248	ArgumentList	log		11230107	1					
ANR	11230249	Argument	log		11230107	0					
ANR	11230250	Identifier	log		11230107	0					
ANR	11230251	IfStatement	"if ( log_mark ( log , APPEND_OP ) )"		11230107	11					
ANR	11230252	Condition	"log_mark ( log , APPEND_OP )"	1023:8:40652:40675	11230107	0	True				
ANR	11230253	CallExpression	"log_mark ( log , APPEND_OP )"		11230107	0					
ANR	11230254	Callee	log_mark		11230107	0					
ANR	11230255	Identifier	log_mark		11230107	0					
ANR	11230256	ArgumentList	log		11230107	1					
ANR	11230257	Argument	log		11230107	0					
ANR	11230258	Identifier	log		11230107	0					
ANR	11230259	Argument	APPEND_OP		11230107	1					
ANR	11230260	Identifier	APPEND_OP		11230107	0					
ANR	11230261	ReturnStatement	return - 1 ;	1024:8:40686:40695	11230107	1	True				
ANR	11230262	UnaryOperationExpression	- 1		11230107	0					
ANR	11230263	UnaryOperator	-		11230107	0					
ANR	11230264	PrimaryExpression	1		11230107	1					
ANR	11230265	ExpressionStatement	BAIL ( 8 )	1025:4:40701:40708	11230107	12	True				
ANR	11230266	CallExpression	BAIL ( 8 )		11230107	0					
ANR	11230267	Callee	BAIL		11230107	0					
ANR	11230268	Identifier	BAIL		11230107	0					
ANR	11230269	ArgumentList	8		11230107	1					
ANR	11230270	Argument	8		11230107	0					
ANR	11230271	PrimaryExpression	8		11230107	0					
ANR	11230272	IfStatement	"if ( log_append ( log , data , len ) )"		11230107	13					
ANR	11230273	Condition	"log_append ( log , data , len )"	1028:8:40755:40780	11230107	0	True				
ANR	11230274	CallExpression	"log_append ( log , data , len )"		11230107	0					
ANR	11230275	Callee	log_append		11230107	0					
ANR	11230276	Identifier	log_append		11230107	0					
ANR	11230277	ArgumentList	log		11230107	1					
ANR	11230278	Argument	log		11230107	0					
ANR	11230279	Identifier	log		11230107	0					
ANR	11230280	Argument	data		11230107	1					
ANR	11230281	Identifier	data		11230107	0					
ANR	11230282	Argument	len		11230107	2					
ANR	11230283	Identifier	len		11230107	0					
ANR	11230284	ReturnStatement	return - 1 ;	1029:8:40791:40800	11230107	1	True				
ANR	11230285	UnaryOperationExpression	- 1		11230107	0					
ANR	11230286	UnaryOperator	-		11230107	0					
ANR	11230287	PrimaryExpression	1		11230107	1					
ANR	11230288	IfStatement	if ( ( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 ) < TRIGGER )		11230107	14					
ANR	11230289	Condition	( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 ) < TRIGGER	1032:8:40880:40943	11230107	0	True				
ANR	11230290	RelationalExpression	( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 ) < TRIGGER		11230107	0		<			
ANR	11230291	AdditiveExpression	( ( log -> last - log -> first ) >> 10 ) + ( log -> stored >> 10 )		11230107	0		+			
ANR	11230292	ShiftExpression	( log -> last - log -> first ) >> 10		11230107	0		>>			
ANR	11230293	AdditiveExpression	log -> last - log -> first		11230107	0		-			
ANR	11230294	PtrMemberAccess	log -> last		11230107	0					
ANR	11230295	Identifier	log		11230107	0					
ANR	11230296	Identifier	last		11230107	1					
ANR	11230297	PtrMemberAccess	log -> first		11230107	1					
ANR	11230298	Identifier	log		11230107	0					
ANR	11230299	Identifier	first		11230107	1					
ANR	11230300	PrimaryExpression	10		11230107	1					
ANR	11230301	ShiftExpression	log -> stored >> 10		11230107	1		>>			
ANR	11230302	PtrMemberAccess	log -> stored		11230107	0					
ANR	11230303	Identifier	log		11230107	0					
ANR	11230304	Identifier	stored		11230107	1					
ANR	11230305	PrimaryExpression	10		11230107	1					
ANR	11230306	Identifier	TRIGGER		11230107	1					
ANR	11230307	ReturnStatement	return 0 ;	1033:8:40954:40962	11230107	1	True				
ANR	11230308	PrimaryExpression	0		11230107	0					
ANR	11230309	ReturnStatement	return gzlog_compress ( log ) ;	1036:4:40996:41022	11230107	15	True				
ANR	11230310	CallExpression	gzlog_compress ( log )		11230107	0					
ANR	11230311	Callee	gzlog_compress		11230107	0					
ANR	11230312	Identifier	gzlog_compress		11230107	0					
ANR	11230313	ArgumentList	log		11230107	1					
ANR	11230314	Argument	log		11230107	0					
ANR	11230315	Identifier	log		11230107	0					
ANR	11230316	ReturnType	int		11230107	1					
ANR	11230317	Identifier	gzlog_write		11230107	2					
ANR	11230318	ParameterList	"gzlog * logd , void * data , size_t len"		11230107	3					
ANR	11230319	Parameter	gzlog * logd	995:16:39861:39871	11230107	0	True				
ANR	11230320	ParameterType	gzlog *		11230107	0					
ANR	11230321	Identifier	logd		11230107	1					
ANR	11230322	Parameter	void * data	995:29:39874:39883	11230107	1	True				
ANR	11230323	ParameterType	void *		11230107	0					
ANR	11230324	Identifier	data		11230107	1					
ANR	11230325	Parameter	size_t len	995:41:39886:39895	11230107	2	True				
ANR	11230326	ParameterType	size_t		11230107	0					
ANR	11230327	Identifier	len		11230107	1					
ANR	11230328	CFGEntryNode	ENTRY		11230107		True				
ANR	11230329	CFGExitNode	EXIT		11230107		True				
ANR	11230330	Symbol	data		11230107						
ANR	11230331	Symbol	log -> end		11230107						
ANR	11230332	Symbol	log		11230107						
ANR	11230333	Symbol	O_CREAT		11230107						
ANR	11230334	Symbol	TRIGGER		11230107						
ANR	11230335	Symbol	logd		11230107						
ANR	11230336	Symbol	len		11230107						
ANR	11230337	Symbol	log -> id		11230107						
ANR	11230338	Symbol	write		11230107						
ANR	11230339	Symbol	close		11230107						
ANR	11230340	Symbol	ret		11230107						
ANR	11230341	Symbol	strcmp		11230107						
ANR	11230342	Symbol	log_append		11230107						
ANR	11230343	Symbol	log_open		11230107						
ANR	11230344	Symbol	NULL		11230107						
ANR	11230345	Symbol	log -> path		11230107						
ANR	11230346	Symbol	log_mark		11230107						
ANR	11230347	Symbol	log -> first		11230107						
ANR	11230348	Symbol	LOGID		11230107						
ANR	11230349	Symbol	* log		11230107						
ANR	11230350	Symbol	log_check		11230107						
ANR	11230351	Symbol	O_TRUNC		11230107						
ANR	11230352	Symbol	gzlog_compress		11230107						
ANR	11230353	Symbol	log -> last		11230107						
ANR	11230354	Symbol	O_WRONLY		11230107						
ANR	11230355	Symbol	APPEND_OP		11230107						
ANR	11230356	Symbol	log -> stored		11230107						
ANR	11230357	Symbol	fd		11230107						
ANR	11230358	Symbol	open		11230107						
ANR	11230359	Function	gzlog_close	1042:0:41108:41477							
ANR	11230360	FunctionDef	gzlog_close (gzlog * logd)		11230359	0					
ANR	11230361	CompoundStatement		1043:0:41137:41477	11230359	0					
ANR	11230362	IdentifierDeclStatement	struct log * log = logd ;	1044:4:41143:41165	11230359	0	True				
ANR	11230363	IdentifierDecl	* log = logd		11230359	0					
ANR	11230364	IdentifierDeclType	struct log *		11230359	0					
ANR	11230365	Identifier	log		11230359	1					
ANR	11230366	AssignmentExpression	* log = logd		11230359	2		=			
ANR	11230367	Identifier	logd		11230359	0					
ANR	11230368	Identifier	logd		11230359	1					
ANR	11230369	IfStatement	"if ( log == NULL || strcmp ( log -> id , LOGID ) )"		11230359	1					
ANR	11230370	Condition	"log == NULL || strcmp ( log -> id , LOGID )"	1047:8:41202:41238	11230359	0	True				
ANR	11230371	OrExpression	"log == NULL || strcmp ( log -> id , LOGID )"		11230359	0		||			
ANR	11230372	EqualityExpression	log == NULL		11230359	0		==			
ANR	11230373	Identifier	log		11230359	0					
ANR	11230374	Identifier	NULL		11230359	1					
ANR	11230375	CallExpression	"strcmp ( log -> id , LOGID )"		11230359	1					
ANR	11230376	Callee	strcmp		11230359	0					
ANR	11230377	Identifier	strcmp		11230359	0					
ANR	11230378	ArgumentList	log -> id		11230359	1					
ANR	11230379	Argument	log -> id		11230359	0					
ANR	11230380	PtrMemberAccess	log -> id		11230359	0					
ANR	11230381	Identifier	log		11230359	0					
ANR	11230382	Identifier	id		11230359	1					
ANR	11230383	Argument	LOGID		11230359	1					
ANR	11230384	Identifier	LOGID		11230359	0					
ANR	11230385	ReturnStatement	return - 3 ;	1048:8:41249:41258	11230359	1	True				
ANR	11230386	UnaryOperationExpression	- 3		11230359	0					
ANR	11230387	UnaryOperator	-		11230359	0					
ANR	11230388	PrimaryExpression	3		11230359	1					
ANR	11230389	ExpressionStatement	log_close ( log )	1051:4:41315:41329	11230359	2	True				
ANR	11230390	CallExpression	log_close ( log )		11230359	0					
ANR	11230391	Callee	log_close		11230359	0					
ANR	11230392	Identifier	log_close		11230359	0					
ANR	11230393	ArgumentList	log		11230359	1					
ANR	11230394	Argument	log		11230359	0					
ANR	11230395	Identifier	log		11230359	0					
ANR	11230396	IfStatement	if ( log -> path != NULL )		11230359	3					
ANR	11230397	Condition	log -> path != NULL	1054:8:41376:41392	11230359	0	True				
ANR	11230398	EqualityExpression	log -> path != NULL		11230359	0		!=			
ANR	11230399	PtrMemberAccess	log -> path		11230359	0					
ANR	11230400	Identifier	log		11230359	0					
ANR	11230401	Identifier	path		11230359	1					
ANR	11230402	Identifier	NULL		11230359	1					
ANR	11230403	ExpressionStatement	free ( log -> path )	1055:8:41403:41418	11230359	1	True				
ANR	11230404	CallExpression	free ( log -> path )		11230359	0					
ANR	11230405	Callee	free		11230359	0					
ANR	11230406	Identifier	free		11230359	0					
ANR	11230407	ArgumentList	log -> path		11230359	1					
ANR	11230408	Argument	log -> path		11230359	0					
ANR	11230409	PtrMemberAccess	log -> path		11230359	0					
ANR	11230410	Identifier	log		11230359	0					
ANR	11230411	Identifier	path		11230359	1					
ANR	11230412	ExpressionStatement	"strcpy ( log -> id , ""bad"" )"	1056:4:41424:41446	11230359	4	True				
ANR	11230413	CallExpression	"strcpy ( log -> id , ""bad"" )"		11230359	0					
ANR	11230414	Callee	strcpy		11230359	0					
ANR	11230415	Identifier	strcpy		11230359	0					
ANR	11230416	ArgumentList	log -> id		11230359	1					
ANR	11230417	Argument	log -> id		11230359	0					
ANR	11230418	PtrMemberAccess	log -> id		11230359	0					
ANR	11230419	Identifier	log		11230359	0					
ANR	11230420	Identifier	id		11230359	1					
ANR	11230421	Argument	"""bad"""		11230359	1					
ANR	11230422	PrimaryExpression	"""bad"""		11230359	0					
ANR	11230423	ExpressionStatement	free ( log )	1057:4:41452:41461	11230359	5	True				
ANR	11230424	CallExpression	free ( log )		11230359	0					
ANR	11230425	Callee	free		11230359	0					
ANR	11230426	Identifier	free		11230359	0					
ANR	11230427	ArgumentList	log		11230359	1					
ANR	11230428	Argument	log		11230359	0					
ANR	11230429	Identifier	log		11230359	0					
ANR	11230430	ReturnStatement	return 0 ;	1058:4:41467:41475	11230359	6	True				
ANR	11230431	PrimaryExpression	0		11230359	0					
ANR	11230432	ReturnType	int		11230359	1					
ANR	11230433	Identifier	gzlog_close		11230359	2					
ANR	11230434	ParameterList	gzlog * logd		11230359	3					
ANR	11230435	Parameter	gzlog * logd	1042:16:41124:41134	11230359	0	True				
ANR	11230436	ParameterType	gzlog *		11230359	0					
ANR	11230437	Identifier	logd		11230359	1					
ANR	11230438	CFGEntryNode	ENTRY		11230359		True				
ANR	11230439	CFGExitNode	EXIT		11230359		True				
ANR	11230440	Symbol	strcmp		11230359						
ANR	11230441	Symbol	logd		11230359						
ANR	11230442	Symbol	NULL		11230359						
ANR	11230443	Symbol	log		11230359						
ANR	11230444	Symbol	log -> path		11230359						
ANR	11230445	Symbol	log -> id		11230359						
ANR	11230446	Symbol	LOGID		11230359						
ANR	11230447	Symbol	* log		11230359						
