command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10748046	File	data/converged/CVE-2018-16863_ghostpdl/xgetopt.c								
ANR	10748047	DeclStmt									
ANR	10748048	Decl							int	int	xoptind
ANR	10748049	DeclStmt									
ANR	10748050	Decl							char	char *	xoptarg
ANR	10748051	DeclStmt									
ANR	10748052	Decl							int	int	xopterr
ANR	10748053	DeclStmt									
ANR	10748054	Decl							char	char *	letP
ANR	10748055	DeclStmt									
ANR	10748056	Decl							char	char	SW
ANR	10748057	Function	xgetopt	26:0:554:1721							
ANR	10748058	FunctionDef	"xgetopt (int argc , char * argv [ ] , char * optionS)"		10748057	0					
ANR	10748059	CompoundStatement		27:0:605:1721	10748057	0					
ANR	10748060	IdentifierDeclStatement	unsigned char ch ;	28:4:611:627	10748057	0	True				
ANR	10748061	IdentifierDecl	ch		10748057	0					
ANR	10748062	IdentifierDeclType	unsigned char		10748057	0					
ANR	10748063	Identifier	ch		10748057	1					
ANR	10748064	IdentifierDeclStatement	char * optP ;	29:4:633:643	10748057	1	True				
ANR	10748065	IdentifierDecl	* optP		10748057	0					
ANR	10748066	IdentifierDeclType	char *		10748057	0					
ANR	10748067	Identifier	optP		10748057	1					
ANR	10748068	IfStatement	if ( SW == 0 )		10748057	2					
ANR	10748069	Condition	SW == 0	31:8:654:660	10748057	0	True				
ANR	10748070	EqualityExpression	SW == 0		10748057	0		==			
ANR	10748071	Identifier	SW		10748057	0					
ANR	10748072	PrimaryExpression	0		10748057	1					
ANR	10748073	CompoundStatement		5:17:57:57	10748057	1					
ANR	10748074	ExpressionStatement	SW = '/'	32:8:673:681	10748057	0	True				
ANR	10748075	AssignmentExpression	SW = '/'		10748057	0		=			
ANR	10748076	Identifier	SW		10748057	0					
ANR	10748077	PrimaryExpression	'/'		10748057	1					
ANR	10748078	IfStatement	if ( argc > xoptind )		10748057	3					
ANR	10748079	Condition	argc > xoptind	35:8:698:711	10748057	0	True				
ANR	10748080	RelationalExpression	argc > xoptind		10748057	0		>			
ANR	10748081	Identifier	argc		10748057	0					
ANR	10748082	Identifier	xoptind		10748057	1					
ANR	10748083	CompoundStatement		9:24:108:108	10748057	1					
ANR	10748084	IfStatement	if ( letP == NULL )		10748057	0					
ANR	10748085	Condition	letP == NULL	36:12:728:739	10748057	0	True				
ANR	10748086	EqualityExpression	letP == NULL		10748057	0		==			
ANR	10748087	Identifier	letP		10748057	0					
ANR	10748088	Identifier	NULL		10748057	1					
ANR	10748089	CompoundStatement		10:26:136:136	10748057	1					
ANR	10748090	IfStatement	if ( ( letP = argv [ xoptind ] ) == NULL || * ( letP ++ ) != SW )		10748057	0					
ANR	10748091	Condition	( letP = argv [ xoptind ] ) == NULL || * ( letP ++ ) != SW	37:16:760:824	10748057	0	True				
ANR	10748092	OrExpression	( letP = argv [ xoptind ] ) == NULL || * ( letP ++ ) != SW		10748057	0		||			
ANR	10748093	EqualityExpression	( letP = argv [ xoptind ] ) == NULL		10748057	0		==			
ANR	10748094	AssignmentExpression	letP = argv [ xoptind ]		10748057	0		=			
ANR	10748095	Identifier	letP		10748057	0					
ANR	10748096	ArrayIndexing	argv [ xoptind ]		10748057	1					
ANR	10748097	Identifier	argv		10748057	0					
ANR	10748098	Identifier	xoptind		10748057	1					
ANR	10748099	Identifier	NULL		10748057	1					
ANR	10748100	EqualityExpression	* ( letP ++ ) != SW		10748057	1		!=			
ANR	10748101	UnaryOperationExpression	* ( letP ++ )		10748057	0					
ANR	10748102	UnaryOperator	*		10748057	0					
ANR	10748103	PostIncDecOperationExpression	letP ++		10748057	1					
ANR	10748104	Identifier	letP		10748057	0					
ANR	10748105	IncDec	++		10748057	1					
ANR	10748106	Identifier	SW		10748057	1					
ANR	10748107	GotoStatement	goto gopEOF ;	38:34:828:839	10748057	1	True				
ANR	10748108	Identifier	gopEOF		10748057	0					
ANR	10748109	IfStatement	if ( * letP == SW )		10748057	1					
ANR	10748110	Condition	* letP == SW	39:16:857:867	10748057	0	True				
ANR	10748111	EqualityExpression	* letP == SW		10748057	0		==			
ANR	10748112	UnaryOperationExpression	* letP		10748057	0					
ANR	10748113	UnaryOperator	*		10748057	0					
ANR	10748114	Identifier	letP		10748057	1					
ANR	10748115	Identifier	SW		10748057	1					
ANR	10748116	CompoundStatement		13:29:264:264	10748057	1					
ANR	10748117	ExpressionStatement	xoptind ++	40:16:888:897	10748057	0	True				
ANR	10748118	PostIncDecOperationExpression	xoptind ++		10748057	0					
ANR	10748119	Identifier	xoptind		10748057	0					
ANR	10748120	IncDec	++		10748057	1					
ANR	10748121	GotoStatement	goto gopEOF ;	40:28:900:911	10748057	1	True				
ANR	10748122	Identifier	gopEOF		10748057	0					
ANR	10748123	IfStatement	if ( 0 == ( ch = * ( letP ++ ) ) )		10748057	1					
ANR	10748124	Condition	0 == ( ch = * ( letP ++ ) )	43:12:949:969	10748057	0	True				
ANR	10748125	EqualityExpression	0 == ( ch = * ( letP ++ ) )		10748057	0		==			
ANR	10748126	PrimaryExpression	0		10748057	0					
ANR	10748127	AssignmentExpression	ch = * ( letP ++ )		10748057	1		=			
ANR	10748128	Identifier	ch		10748057	0					
ANR	10748129	UnaryOperationExpression	* ( letP ++ )		10748057	1					
ANR	10748130	UnaryOperator	*		10748057	0					
ANR	10748131	PostIncDecOperationExpression	letP ++		10748057	1					
ANR	10748132	Identifier	letP		10748057	0					
ANR	10748133	IncDec	++		10748057	1					
ANR	10748134	CompoundStatement		17:35:366:366	10748057	1					
ANR	10748135	ExpressionStatement	xoptind ++	44:12:986:995	10748057	0	True				
ANR	10748136	PostIncDecOperationExpression	xoptind ++		10748057	0					
ANR	10748137	Identifier	xoptind		10748057	0					
ANR	10748138	IncDec	++		10748057	1					
ANR	10748139	GotoStatement	goto gopEOF ;	44:24:998:1009	10748057	1	True				
ANR	10748140	Identifier	gopEOF		10748057	0					
ANR	10748141	IfStatement	"if ( ':' == ch || ( optP = strchr ( optionS , ch ) ) == NULL )"		10748057	2					
ANR	10748142	Condition	"':' == ch || ( optP = strchr ( optionS , ch ) ) == NULL"	46:12:1033:1083	10748057	0	True				
ANR	10748143	OrExpression	"':' == ch || ( optP = strchr ( optionS , ch ) ) == NULL"		10748057	0		||			
ANR	10748144	EqualityExpression	':' == ch		10748057	0		==			
ANR	10748145	PrimaryExpression	':'		10748057	0					
ANR	10748146	Identifier	ch		10748057	1					
ANR	10748147	EqualityExpression	"( optP = strchr ( optionS , ch ) ) == NULL"		10748057	1		==			
ANR	10748148	AssignmentExpression	"optP = strchr ( optionS , ch )"		10748057	0		=			
ANR	10748149	Identifier	optP		10748057	0					
ANR	10748150	CallExpression	"strchr ( optionS , ch )"		10748057	1					
ANR	10748151	Callee	strchr		10748057	0					
ANR	10748152	Identifier	strchr		10748057	0					
ANR	10748153	ArgumentList	optionS		10748057	1					
ANR	10748154	Argument	optionS		10748057	0					
ANR	10748155	Identifier	optionS		10748057	0					
ANR	10748156	Argument	ch		10748057	1					
ANR	10748157	Identifier	ch		10748057	0					
ANR	10748158	Identifier	NULL		10748057	1					
ANR	10748159	GotoStatement	goto gopError ;	47:12:1098:1111	10748057	1	True				
ANR	10748160	Identifier	gopError		10748057	0					
ANR	10748161	IfStatement	if ( ':' == * ( ++ optP ) )		10748057	3					
ANR	10748162	Condition	':' == * ( ++ optP )	48:12:1125:1140	10748057	0	True				
ANR	10748163	EqualityExpression	':' == * ( ++ optP )		10748057	0		==			
ANR	10748164	PrimaryExpression	':'		10748057	0					
ANR	10748165	UnaryOperationExpression	* ( ++ optP )		10748057	1					
ANR	10748166	UnaryOperator	*		10748057	0					
ANR	10748167	UnaryExpression	++ optP		10748057	1					
ANR	10748168	IncDec	++		10748057	0					
ANR	10748169	Identifier	optP		10748057	1					
ANR	10748170	CompoundStatement		22:30:537:537	10748057	1					
ANR	10748171	ExpressionStatement	xoptind ++	49:12:1157:1166	10748057	0	True				
ANR	10748172	PostIncDecOperationExpression	xoptind ++		10748057	0					
ANR	10748173	Identifier	xoptind		10748057	0					
ANR	10748174	IncDec	++		10748057	1					
ANR	10748175	IfStatement	if ( 0 == * letP )		10748057	1					
ANR	10748176	Condition	0 == * letP	50:16:1184:1193	10748057	0	True				
ANR	10748177	EqualityExpression	0 == * letP		10748057	0		==			
ANR	10748178	PrimaryExpression	0		10748057	0					
ANR	10748179	UnaryOperationExpression	* letP		10748057	1					
ANR	10748180	UnaryOperator	*		10748057	0					
ANR	10748181	Identifier	letP		10748057	1					
ANR	10748182	CompoundStatement		24:28:590:590	10748057	1					
ANR	10748183	IfStatement	if ( argc <= xoptind )		10748057	0					
ANR	10748184	Condition	argc <= xoptind	51:20:1218:1232	10748057	0	True				
ANR	10748185	RelationalExpression	argc <= xoptind		10748057	0		<=			
ANR	10748186	Identifier	argc		10748057	0					
ANR	10748187	Identifier	xoptind		10748057	1					
ANR	10748188	GotoStatement	goto gopError ;	51:38:1236:1250	10748057	1	True				
ANR	10748189	Identifier	gopError		10748057	0					
ANR	10748190	ExpressionStatement	letP = argv [ xoptind ++ ]	52:16:1268:1290	10748057	1	True				
ANR	10748191	AssignmentExpression	letP = argv [ xoptind ++ ]		10748057	0		=			
ANR	10748192	Identifier	letP		10748057	0					
ANR	10748193	ArrayIndexing	argv [ xoptind ++ ]		10748057	1					
ANR	10748194	Identifier	argv		10748057	0					
ANR	10748195	PostIncDecOperationExpression	xoptind ++		10748057	1					
ANR	10748196	Identifier	xoptind		10748057	0					
ANR	10748197	IncDec	++		10748057	1					
ANR	10748198	ExpressionStatement	xoptarg = letP	54:12:1318:1332	10748057	2	True				
ANR	10748199	AssignmentExpression	xoptarg = letP		10748057	0		=			
ANR	10748200	Identifier	xoptarg		10748057	0					
ANR	10748201	Identifier	letP		10748057	1					
ANR	10748202	ExpressionStatement	letP = NULL	55:12:1346:1357	10748057	3	True				
ANR	10748203	AssignmentExpression	letP = NULL		10748057	0		=			
ANR	10748204	Identifier	letP		10748057	0					
ANR	10748205	Identifier	NULL		10748057	1					
ANR	10748206	ElseStatement	else		10748057	0					
ANR	10748207	CompoundStatement		30:15:768:768	10748057	0					
ANR	10748208	IfStatement	if ( 0 == * letP )		10748057	0					
ANR	10748209	Condition	0 == * letP	57:16:1392:1401	10748057	0	True				
ANR	10748210	EqualityExpression	0 == * letP		10748057	0		==			
ANR	10748211	PrimaryExpression	0		10748057	0					
ANR	10748212	UnaryOperationExpression	* letP		10748057	1					
ANR	10748213	UnaryOperator	*		10748057	0					
ANR	10748214	Identifier	letP		10748057	1					
ANR	10748215	CompoundStatement		31:28:798:798	10748057	1					
ANR	10748216	ExpressionStatement	xoptind ++	58:16:1422:1431	10748057	0	True				
ANR	10748217	PostIncDecOperationExpression	xoptind ++		10748057	0					
ANR	10748218	Identifier	xoptind		10748057	0					
ANR	10748219	IncDec	++		10748057	1					
ANR	10748220	ExpressionStatement	letP = NULL	59:16:1449:1460	10748057	1	True				
ANR	10748221	AssignmentExpression	letP = NULL		10748057	0		=			
ANR	10748222	Identifier	letP		10748057	0					
ANR	10748223	Identifier	NULL		10748057	1					
ANR	10748224	ExpressionStatement	xoptarg = NULL	61:12:1488:1502	10748057	1	True				
ANR	10748225	AssignmentExpression	xoptarg = NULL		10748057	0		=			
ANR	10748226	Identifier	xoptarg		10748057	0					
ANR	10748227	Identifier	NULL		10748057	1					
ANR	10748228	ReturnStatement	return ch ;	63:8:1522:1531	10748057	4	True				
ANR	10748229	Identifier	ch		10748057	0					
ANR	10748230	Label	gopEOF :	65:0:1539:1545	10748057	4	True				
ANR	10748231	Identifier	gopEOF		10748057	0					
ANR	10748232	ExpressionStatement	xoptarg = letP = NULL	66:4:1551:1572	10748057	5	True				
ANR	10748233	AssignmentExpression	xoptarg = letP = NULL		10748057	0		=			
ANR	10748234	Identifier	xoptarg		10748057	0					
ANR	10748235	AssignmentExpression	letP = NULL		10748057	1		=			
ANR	10748236	Identifier	letP		10748057	0					
ANR	10748237	Identifier	NULL		10748057	1					
ANR	10748238	ReturnStatement	return EOF ;	67:4:1578:1588	10748057	6	True				
ANR	10748239	Identifier	EOF		10748057	0					
ANR	10748240	Label	gopError :	69:0:1591:1599	10748057	7	True				
ANR	10748241	Identifier	gopError		10748057	0					
ANR	10748242	ExpressionStatement	xoptarg = NULL	70:4:1605:1619	10748057	8	True				
ANR	10748243	AssignmentExpression	xoptarg = NULL		10748057	0		=			
ANR	10748244	Identifier	xoptarg		10748057	0					
ANR	10748245	Identifier	NULL		10748057	1					
ANR	10748246	ExpressionStatement	errno = EINVAL	71:4:1625:1640	10748057	9	True				
ANR	10748247	AssignmentExpression	errno = EINVAL		10748057	0		=			
ANR	10748248	Identifier	errno		10748057	0					
ANR	10748249	Identifier	EINVAL		10748057	1					
ANR	10748250	IfStatement	if ( xopterr )		10748057	10					
ANR	10748251	Condition	xopterr	72:8:1650:1656	10748057	0	True				
ANR	10748252	Identifier	xopterr		10748057	0					
ANR	10748253	ExpressionStatement	"perror ( ""get command line option"" )"	73:8:1667:1701	10748057	1	True				
ANR	10748254	CallExpression	"perror ( ""get command line option"" )"		10748057	0					
ANR	10748255	Callee	perror		10748057	0					
ANR	10748256	Identifier	perror		10748057	0					
ANR	10748257	ArgumentList	"""get command line option"""		10748057	1					
ANR	10748258	Argument	"""get command line option"""		10748057	0					
ANR	10748259	PrimaryExpression	"""get command line option"""		10748057	0					
ANR	10748260	ReturnStatement	return ( '?' ) ;	74:4:1707:1719	10748057	11	True				
ANR	10748261	PrimaryExpression	'?'		10748057	0					
ANR	10748262	ReturnType	int		10748057	1					
ANR	10748263	Identifier	xgetopt		10748057	2					
ANR	10748264	ParameterList	"int argc , char * argv [ ] , char * optionS"		10748057	3					
ANR	10748265	Parameter	int argc	26:12:566:573	10748057	0	True				
ANR	10748266	ParameterType	int		10748057	0					
ANR	10748267	Identifier	argc		10748057	1					
ANR	10748268	Parameter	char * argv [ ]	26:22:576:587	10748057	1	True				
ANR	10748269	ParameterType	char * [ ]		10748057	0					
ANR	10748270	Identifier	argv		10748057	1					
ANR	10748271	Parameter	char * optionS	26:36:590:602	10748057	2	True				
ANR	10748272	ParameterType	char *		10748057	0					
ANR	10748273	Identifier	optionS		10748057	1					
ANR	10748274	CFGEntryNode	ENTRY		10748057		True				
ANR	10748275	CFGExitNode	EXIT		10748057		True				
ANR	10748276	Symbol	argc		10748057						
ANR	10748277	Symbol	errno		10748057						
ANR	10748278	Symbol	NULL		10748057						
ANR	10748279	Symbol	SW		10748057						
ANR	10748280	Symbol	ch		10748057						
ANR	10748281	Symbol	letP		10748057						
ANR	10748282	Symbol	* ( letP ++ )		10748057						
ANR	10748283	Symbol	optP		10748057						
ANR	10748284	Symbol	strchr		10748057						
ANR	10748285	Symbol	* argv		10748057						
ANR	10748286	Symbol	* letP		10748057						
ANR	10748287	Symbol	argv		10748057						
ANR	10748288	Symbol	xoptarg		10748057						
ANR	10748289	Symbol	EINVAL		10748057						
ANR	10748290	Symbol	* optP		10748057						
ANR	10748291	Symbol	xoptind		10748057						
ANR	10748292	Symbol	optionS		10748057						
ANR	10748293	Symbol	* xoptind		10748057						
ANR	10748294	Symbol	* ( ++ optP )		10748057						
ANR	10748295	Symbol	xopterr		10748057						
ANR	10748296	Symbol	EOF		10748057						
