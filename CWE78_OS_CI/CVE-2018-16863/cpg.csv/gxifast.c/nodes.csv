command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5673979	File	data/converged/CVE-2018-16863_ghostpdl/gxifast.c								
ANR	5673980	Function	gs_image_class_1_simple	53:0:1490:6515							
ANR	5673981	FunctionDef	gs_image_class_1_simple (gx_image_enum * penum)		5673980	0					
ANR	5673982	CompoundStatement		55:0:1552:6515	5673980	0					
ANR	5673983	IdentifierDeclStatement	irender_proc_t rproc ;	56:4:1558:1578	5673980	0	True				
ANR	5673984	IdentifierDecl	rproc		5673980	0					
ANR	5673985	IdentifierDeclType	irender_proc_t		5673980	0					
ANR	5673986	Identifier	rproc		5673980	1					
ANR	5673987	IdentifierDeclStatement	fixed ox = dda_current ( penum -> dda . pixel0 . x ) ;	57:4:1584:1627	5673980	1	True				
ANR	5673988	IdentifierDecl	ox = dda_current ( penum -> dda . pixel0 . x )		5673980	0					
ANR	5673989	IdentifierDeclType	fixed		5673980	0					
ANR	5673990	Identifier	ox		5673980	1					
ANR	5673991	AssignmentExpression	ox = dda_current ( penum -> dda . pixel0 . x )		5673980	2		=			
ANR	5673992	Identifier	ox		5673980	0					
ANR	5673993	CallExpression	dda_current ( penum -> dda . pixel0 . x )		5673980	1					
ANR	5673994	Callee	dda_current		5673980	0					
ANR	5673995	Identifier	dda_current		5673980	0					
ANR	5673996	ArgumentList	penum -> dda . pixel0 . x		5673980	1					
ANR	5673997	Argument	penum -> dda . pixel0 . x		5673980	0					
ANR	5673998	MemberAccess	penum -> dda . pixel0 . x		5673980	0					
ANR	5673999	MemberAccess	penum -> dda . pixel0		5673980	0					
ANR	5674000	PtrMemberAccess	penum -> dda		5673980	0					
ANR	5674001	Identifier	penum		5673980	0					
ANR	5674002	Identifier	dda		5673980	1					
ANR	5674003	Identifier	pixel0		5673980	1					
ANR	5674004	Identifier	x		5673980	1					
ANR	5674005	IdentifierDeclStatement	fixed oy = dda_current ( penum -> dda . pixel0 . y ) ;	58:4:1633:1676	5673980	2	True				
ANR	5674006	IdentifierDecl	oy = dda_current ( penum -> dda . pixel0 . y )		5673980	0					
ANR	5674007	IdentifierDeclType	fixed		5673980	0					
ANR	5674008	Identifier	oy		5673980	1					
ANR	5674009	AssignmentExpression	oy = dda_current ( penum -> dda . pixel0 . y )		5673980	2		=			
ANR	5674010	Identifier	oy		5673980	0					
ANR	5674011	CallExpression	dda_current ( penum -> dda . pixel0 . y )		5673980	1					
ANR	5674012	Callee	dda_current		5673980	0					
ANR	5674013	Identifier	dda_current		5673980	0					
ANR	5674014	ArgumentList	penum -> dda . pixel0 . y		5673980	1					
ANR	5674015	Argument	penum -> dda . pixel0 . y		5673980	0					
ANR	5674016	MemberAccess	penum -> dda . pixel0 . y		5673980	0					
ANR	5674017	MemberAccess	penum -> dda . pixel0		5673980	0					
ANR	5674018	PtrMemberAccess	penum -> dda		5673980	0					
ANR	5674019	Identifier	penum		5673980	0					
ANR	5674020	Identifier	dda		5673980	1					
ANR	5674021	Identifier	pixel0		5673980	1					
ANR	5674022	Identifier	y		5673980	1					
ANR	5674023	IfStatement	if ( penum -> use_rop || penum -> spp != 1 || penum -> bps != 1 )		5673980	3					
ANR	5674024	Condition	penum -> use_rop || penum -> spp != 1 || penum -> bps != 1	60:8:1687:1738	5673980	0	True				
ANR	5674025	OrExpression	penum -> use_rop || penum -> spp != 1 || penum -> bps != 1		5673980	0		||			
ANR	5674026	PtrMemberAccess	penum -> use_rop		5673980	0					
ANR	5674027	Identifier	penum		5673980	0					
ANR	5674028	Identifier	use_rop		5673980	1					
ANR	5674029	OrExpression	penum -> spp != 1 || penum -> bps != 1		5673980	1		||			
ANR	5674030	EqualityExpression	penum -> spp != 1		5673980	0		!=			
ANR	5674031	PtrMemberAccess	penum -> spp		5673980	0					
ANR	5674032	Identifier	penum		5673980	0					
ANR	5674033	Identifier	spp		5673980	1					
ANR	5674034	PrimaryExpression	1		5673980	1					
ANR	5674035	EqualityExpression	penum -> bps != 1		5673980	1		!=			
ANR	5674036	PtrMemberAccess	penum -> bps		5673980	0					
ANR	5674037	Identifier	penum		5673980	0					
ANR	5674038	Identifier	bps		5673980	1					
ANR	5674039	PrimaryExpression	1		5673980	1					
ANR	5674040	ReturnStatement	return 0 ;	61:8:1749:1757	5673980	1	True				
ANR	5674041	PrimaryExpression	0		5673980	0					
ANR	5674042	SwitchStatement	switch ( penum -> posture )		5673980	4					
ANR	5674043	Condition	penum -> posture	62:12:1771:1784	5673980	0	True				
ANR	5674044	PtrMemberAccess	penum -> posture		5673980	0					
ANR	5674045	Identifier	penum		5673980	0					
ANR	5674046	Identifier	posture		5673980	1					
ANR	5674047	CompoundStatement		8:28:234:234	5673980	1					
ANR	5674048	Label	case image_portrait :	63:8:1797:1816	5673980	0	True				
ANR	5674049	Identifier	image_portrait		5673980	0					
ANR	5674050	CompoundStatement		11:16:332:458	5673980	1					
ANR	5674051	IdentifierDeclStatement	long dev_width = fixed2long_pixround ( ox + penum -> x_extent . x ) - fixed2long_pixround ( ox ) ;	65:16:1885:2011	5673980	0	True				
ANR	5674052	IdentifierDecl	dev_width = fixed2long_pixround ( ox + penum -> x_extent . x ) - fixed2long_pixround ( ox )		5673980	0					
ANR	5674053	IdentifierDeclType	long		5673980	0					
ANR	5674054	Identifier	dev_width		5673980	1					
ANR	5674055	AssignmentExpression	dev_width = fixed2long_pixround ( ox + penum -> x_extent . x ) - fixed2long_pixround ( ox )		5673980	2		=			
ANR	5674056	Identifier	dev_width		5673980	0					
ANR	5674057	AdditiveExpression	fixed2long_pixround ( ox + penum -> x_extent . x ) - fixed2long_pixround ( ox )		5673980	1		-			
ANR	5674058	CallExpression	fixed2long_pixround ( ox + penum -> x_extent . x )		5673980	0					
ANR	5674059	Callee	fixed2long_pixround		5673980	0					
ANR	5674060	Identifier	fixed2long_pixround		5673980	0					
ANR	5674061	ArgumentList	ox + penum -> x_extent . x		5673980	1					
ANR	5674062	Argument	ox + penum -> x_extent . x		5673980	0					
ANR	5674063	AdditiveExpression	ox + penum -> x_extent . x		5673980	0		+			
ANR	5674064	Identifier	ox		5673980	0					
ANR	5674065	MemberAccess	penum -> x_extent . x		5673980	1					
ANR	5674066	PtrMemberAccess	penum -> x_extent		5673980	0					
ANR	5674067	Identifier	penum		5673980	0					
ANR	5674068	Identifier	x_extent		5673980	1					
ANR	5674069	Identifier	x		5673980	1					
ANR	5674070	CallExpression	fixed2long_pixround ( ox )		5673980	1					
ANR	5674071	Callee	fixed2long_pixround		5673980	0					
ANR	5674072	Identifier	fixed2long_pixround		5673980	0					
ANR	5674073	ArgumentList	ox		5673980	1					
ANR	5674074	Argument	ox		5673980	0					
ANR	5674075	Identifier	ox		5673980	0					
ANR	5674076	IfStatement	if ( dev_width != penum -> rect . w )		5673980	1					
ANR	5674077	Condition	dev_width != penum -> rect . w	69:20:2034:2059	5673980	0	True				
ANR	5674078	EqualityExpression	dev_width != penum -> rect . w		5673980	0		!=			
ANR	5674079	Identifier	dev_width		5673980	0					
ANR	5674080	MemberAccess	penum -> rect . w		5673980	1					
ANR	5674081	PtrMemberAccess	penum -> rect		5673980	0					
ANR	5674082	Identifier	penum		5673980	0					
ANR	5674083	Identifier	rect		5673980	1					
ANR	5674084	Identifier	w		5673980	1					
ANR	5674085	CompoundStatement		20:20:715:808	5673980	1					
ANR	5674086	IdentifierDeclStatement	long line_size = bitmap_raster ( any_abs ( dev_width ) ) + align_bitmap_mod ;	74:20:2268:2361	5673980	0	True				
ANR	5674087	IdentifierDecl	line_size = bitmap_raster ( any_abs ( dev_width ) ) + align_bitmap_mod		5673980	0					
ANR	5674088	IdentifierDeclType	long		5673980	0					
ANR	5674089	Identifier	line_size		5673980	1					
ANR	5674090	AssignmentExpression	line_size = bitmap_raster ( any_abs ( dev_width ) ) + align_bitmap_mod		5673980	2		=			
ANR	5674091	Identifier	line_size		5673980	0					
ANR	5674092	AdditiveExpression	bitmap_raster ( any_abs ( dev_width ) ) + align_bitmap_mod		5673980	1		+			
ANR	5674093	CallExpression	bitmap_raster ( any_abs ( dev_width ) )		5673980	0					
ANR	5674094	Callee	bitmap_raster		5673980	0					
ANR	5674095	Identifier	bitmap_raster		5673980	0					
ANR	5674096	ArgumentList	any_abs ( dev_width )		5673980	1					
ANR	5674097	Argument	any_abs ( dev_width )		5673980	0					
ANR	5674098	CallExpression	any_abs ( dev_width )		5673980	0					
ANR	5674099	Callee	any_abs		5673980	0					
ANR	5674100	Identifier	any_abs		5673980	0					
ANR	5674101	ArgumentList	dev_width		5673980	1					
ANR	5674102	Argument	dev_width		5673980	0					
ANR	5674103	Identifier	dev_width		5673980	0					
ANR	5674104	Identifier	align_bitmap_mod		5673980	1					
ANR	5674105	IfStatement	if ( penum -> adjust != 0 || line_size > max_uint )		5673980	1					
ANR	5674106	Condition	penum -> adjust != 0 || line_size > max_uint	77:24:2388:2429	5673980	0	True				
ANR	5674107	OrExpression	penum -> adjust != 0 || line_size > max_uint		5673980	0		||			
ANR	5674108	EqualityExpression	penum -> adjust != 0		5673980	0		!=			
ANR	5674109	PtrMemberAccess	penum -> adjust		5673980	0					
ANR	5674110	Identifier	penum		5673980	0					
ANR	5674111	Identifier	adjust		5673980	1					
ANR	5674112	PrimaryExpression	0		5673980	1					
ANR	5674113	RelationalExpression	line_size > max_uint		5673980	1		>			
ANR	5674114	Identifier	line_size		5673980	0					
ANR	5674115	Identifier	max_uint		5673980	1					
ANR	5674116	ReturnStatement	return 0 ;	78:24:2456:2464	5673980	1	True				
ANR	5674117	PrimaryExpression	0		5673980	0					
ANR	5674118	ExpressionStatement	penum -> line_width = any_abs ( dev_width )	80:20:2537:2575	5673980	2	True				
ANR	5674119	AssignmentExpression	penum -> line_width = any_abs ( dev_width )		5673980	0		=			
ANR	5674120	PtrMemberAccess	penum -> line_width		5673980	0					
ANR	5674121	Identifier	penum		5673980	0					
ANR	5674122	Identifier	line_width		5673980	1					
ANR	5674123	CallExpression	any_abs ( dev_width )		5673980	1					
ANR	5674124	Callee	any_abs		5673980	0					
ANR	5674125	Identifier	any_abs		5673980	0					
ANR	5674126	ArgumentList	dev_width		5673980	1					
ANR	5674127	Argument	dev_width		5673980	0					
ANR	5674128	Identifier	dev_width		5673980	0					
ANR	5674129	ExpressionStatement	penum -> line_size = ( uint ) line_size	81:20:2597:2632	5673980	3	True				
ANR	5674130	AssignmentExpression	penum -> line_size = ( uint ) line_size		5673980	0		=			
ANR	5674131	PtrMemberAccess	penum -> line_size		5673980	0					
ANR	5674132	Identifier	penum		5673980	0					
ANR	5674133	Identifier	line_size		5673980	1					
ANR	5674134	CastExpression	( uint ) line_size		5673980	1					
ANR	5674135	CastTarget	uint		5673980	0					
ANR	5674136	Identifier	line_size		5673980	1					
ANR	5674137	ExpressionStatement	"penum -> line = gs_alloc_bytes ( penum -> memory , penum -> line_size , ""image line"" )"	82:20:2654:2773	5673980	4	True				
ANR	5674138	AssignmentExpression	"penum -> line = gs_alloc_bytes ( penum -> memory , penum -> line_size , ""image line"" )"		5673980	0		=			
ANR	5674139	PtrMemberAccess	penum -> line		5673980	0					
ANR	5674140	Identifier	penum		5673980	0					
ANR	5674141	Identifier	line		5673980	1					
ANR	5674142	CallExpression	"gs_alloc_bytes ( penum -> memory , penum -> line_size , ""image line"" )"		5673980	1					
ANR	5674143	Callee	gs_alloc_bytes		5673980	0					
ANR	5674144	Identifier	gs_alloc_bytes		5673980	0					
ANR	5674145	ArgumentList	penum -> memory		5673980	1					
ANR	5674146	Argument	penum -> memory		5673980	0					
ANR	5674147	PtrMemberAccess	penum -> memory		5673980	0					
ANR	5674148	Identifier	penum		5673980	0					
ANR	5674149	Identifier	memory		5673980	1					
ANR	5674150	Argument	penum -> line_size		5673980	1					
ANR	5674151	PtrMemberAccess	penum -> line_size		5673980	0					
ANR	5674152	Identifier	penum		5673980	0					
ANR	5674153	Identifier	line_size		5673980	1					
ANR	5674154	Argument	"""image line"""		5673980	2					
ANR	5674155	PrimaryExpression	"""image line"""		5673980	0					
ANR	5674156	IfStatement	if ( penum -> line == 0 )		5673980	5					
ANR	5674157	Condition	penum -> line == 0	84:24:2799:2814	5673980	0	True				
ANR	5674158	EqualityExpression	penum -> line == 0		5673980	0		==			
ANR	5674159	PtrMemberAccess	penum -> line		5673980	0					
ANR	5674160	Identifier	penum		5673980	0					
ANR	5674161	Identifier	line		5673980	1					
ANR	5674162	PrimaryExpression	0		5673980	1					
ANR	5674163	CompoundStatement		30:42:1264:1264	5673980	1					
ANR	5674164	ReturnStatement	return 0 ;	85:24:2843:2851	5673980	0	True				
ANR	5674165	PrimaryExpression	0		5673980	0					
ANR	5674166	ExpressionStatement	"if_debug2m ( 'b' , penum -> memory , ""[b]render=simple, unpack=copy; rect.w=%d, dev_width=%ld\\n"" , penum -> rect . w , dev_width )"	88:16:2909:3053	5673980	2	True				
ANR	5674167	CallExpression	"if_debug2m ( 'b' , penum -> memory , ""[b]render=simple, unpack=copy; rect.w=%d, dev_width=%ld\\n"" , penum -> rect . w , dev_width )"		5673980	0					
ANR	5674168	Callee	if_debug2m		5673980	0					
ANR	5674169	Identifier	if_debug2m		5673980	0					
ANR	5674170	ArgumentList	'b'		5673980	1					
ANR	5674171	Argument	'b'		5673980	0					
ANR	5674172	PrimaryExpression	'b'		5673980	0					
ANR	5674173	Argument	penum -> memory		5673980	1					
ANR	5674174	PtrMemberAccess	penum -> memory		5673980	0					
ANR	5674175	Identifier	penum		5673980	0					
ANR	5674176	Identifier	memory		5673980	1					
ANR	5674177	Argument	"""[b]render=simple, unpack=copy; rect.w=%d, dev_width=%ld\\n"""		5673980	2					
ANR	5674178	PrimaryExpression	"""[b]render=simple, unpack=copy; rect.w=%d, dev_width=%ld\\n"""		5673980	0					
ANR	5674179	Argument	penum -> rect . w		5673980	3					
ANR	5674180	MemberAccess	penum -> rect . w		5673980	0					
ANR	5674181	PtrMemberAccess	penum -> rect		5673980	0					
ANR	5674182	Identifier	penum		5673980	0					
ANR	5674183	Identifier	rect		5673980	1					
ANR	5674184	Identifier	w		5673980	1					
ANR	5674185	Argument	dev_width		5673980	4					
ANR	5674186	Identifier	dev_width		5673980	0					
ANR	5674187	ExpressionStatement	rproc = image_render_simple	90:16:3071:3098	5673980	3	True				
ANR	5674188	AssignmentExpression	rproc = image_render_simple		5673980	0		=			
ANR	5674189	Identifier	rproc		5673980	0					
ANR	5674190	Identifier	image_render_simple		5673980	1					
ANR	5674191	BreakStatement	break ;	91:16:3116:3121	5673980	4	True				
ANR	5674192	Label	case image_landscape :	93:8:3145:3165	5673980	2	True				
ANR	5674193	Identifier	image_landscape		5673980	0					
ANR	5674194	CompoundStatement		44:16:1826:2011	5673980	3					
ANR	5674195	IdentifierDeclStatement	long dev_width = fixed2long_pixround ( oy + penum -> x_extent . y ) - fixed2long_pixround ( oy ) ;	95:16:3235:3361	5673980	0	True				
ANR	5674196	IdentifierDecl	dev_width = fixed2long_pixround ( oy + penum -> x_extent . y ) - fixed2long_pixround ( oy )		5673980	0					
ANR	5674197	IdentifierDeclType	long		5673980	0					
ANR	5674198	Identifier	dev_width		5673980	1					
ANR	5674199	AssignmentExpression	dev_width = fixed2long_pixround ( oy + penum -> x_extent . y ) - fixed2long_pixround ( oy )		5673980	2		=			
ANR	5674200	Identifier	dev_width		5673980	0					
ANR	5674201	AdditiveExpression	fixed2long_pixround ( oy + penum -> x_extent . y ) - fixed2long_pixround ( oy )		5673980	1		-			
ANR	5674202	CallExpression	fixed2long_pixround ( oy + penum -> x_extent . y )		5673980	0					
ANR	5674203	Callee	fixed2long_pixround		5673980	0					
ANR	5674204	Identifier	fixed2long_pixround		5673980	0					
ANR	5674205	ArgumentList	oy + penum -> x_extent . y		5673980	1					
ANR	5674206	Argument	oy + penum -> x_extent . y		5673980	0					
ANR	5674207	AdditiveExpression	oy + penum -> x_extent . y		5673980	0		+			
ANR	5674208	Identifier	oy		5673980	0					
ANR	5674209	MemberAccess	penum -> x_extent . y		5673980	1					
ANR	5674210	PtrMemberAccess	penum -> x_extent		5673980	0					
ANR	5674211	Identifier	penum		5673980	0					
ANR	5674212	Identifier	x_extent		5673980	1					
ANR	5674213	Identifier	y		5673980	1					
ANR	5674214	CallExpression	fixed2long_pixround ( oy )		5673980	1					
ANR	5674215	Callee	fixed2long_pixround		5673980	0					
ANR	5674216	Identifier	fixed2long_pixround		5673980	0					
ANR	5674217	ArgumentList	oy		5673980	1					
ANR	5674218	Argument	oy		5673980	0					
ANR	5674219	Identifier	oy		5673980	0					
ANR	5674220	IdentifierDeclStatement	"long line_size = ( dev_width = any_abs ( dev_width ) , bitmap_raster ( dev_width ) * 8 + ROUND_UP ( dev_width , 8 ) * align_bitmap_mod ) ;"	98:16:3379:3564	5673980	1	True				
ANR	5674221	IdentifierDecl	"line_size = ( dev_width = any_abs ( dev_width ) , bitmap_raster ( dev_width ) * 8 + ROUND_UP ( dev_width , 8 ) * align_bitmap_mod )"		5673980	0					
ANR	5674222	IdentifierDeclType	long		5673980	0					
ANR	5674223	Identifier	line_size		5673980	1					
ANR	5674224	AssignmentExpression	"line_size = ( dev_width = any_abs ( dev_width ) , bitmap_raster ( dev_width ) * 8 + ROUND_UP ( dev_width , 8 ) * align_bitmap_mod )"		5673980	2		=			
ANR	5674225	Identifier	line_size		5673980	0					
ANR	5674226	Expression	"dev_width = any_abs ( dev_width ) , bitmap_raster ( dev_width ) * 8 + ROUND_UP ( dev_width , 8 ) * align_bitmap_mod"		5673980	1					
ANR	5674227	AssignmentExpression	dev_width = any_abs ( dev_width )		5673980	0		=			
ANR	5674228	Identifier	dev_width		5673980	0					
ANR	5674229	CallExpression	any_abs ( dev_width )		5673980	1					
ANR	5674230	Callee	any_abs		5673980	0					
ANR	5674231	Identifier	any_abs		5673980	0					
ANR	5674232	ArgumentList	dev_width		5673980	1					
ANR	5674233	Argument	dev_width		5673980	0					
ANR	5674234	Identifier	dev_width		5673980	0					
ANR	5674235	AdditiveExpression	"bitmap_raster ( dev_width ) * 8 + ROUND_UP ( dev_width , 8 ) * align_bitmap_mod"		5673980	1		+			
ANR	5674236	MultiplicativeExpression	bitmap_raster ( dev_width ) * 8		5673980	0		*			
ANR	5674237	CallExpression	bitmap_raster ( dev_width )		5673980	0					
ANR	5674238	Callee	bitmap_raster		5673980	0					
ANR	5674239	Identifier	bitmap_raster		5673980	0					
ANR	5674240	ArgumentList	dev_width		5673980	1					
ANR	5674241	Argument	dev_width		5673980	0					
ANR	5674242	Identifier	dev_width		5673980	0					
ANR	5674243	PrimaryExpression	8		5673980	1					
ANR	5674244	MultiplicativeExpression	"ROUND_UP ( dev_width , 8 ) * align_bitmap_mod"		5673980	1		*			
ANR	5674245	CallExpression	"ROUND_UP ( dev_width , 8 )"		5673980	0					
ANR	5674246	Callee	ROUND_UP		5673980	0					
ANR	5674247	Identifier	ROUND_UP		5673980	0					
ANR	5674248	ArgumentList	dev_width		5673980	1					
ANR	5674249	Argument	dev_width		5673980	0					
ANR	5674250	Identifier	dev_width		5673980	0					
ANR	5674251	Argument	8		5673980	1					
ANR	5674252	PrimaryExpression	8		5673980	0					
ANR	5674253	Identifier	align_bitmap_mod		5673980	1					
ANR	5674254	IfStatement	if ( ( dev_width != penum -> rect . w && penum -> adjust != 0 ) || line_size > max_uint )		5673980	2					
ANR	5674255	Condition	( dev_width != penum -> rect . w && penum -> adjust != 0 ) || line_size > max_uint	103:20:3587:3680	5673980	0	True				
ANR	5674256	OrExpression	( dev_width != penum -> rect . w && penum -> adjust != 0 ) || line_size > max_uint		5673980	0		||			
ANR	5674257	AndExpression	dev_width != penum -> rect . w && penum -> adjust != 0		5673980	0		&&			
ANR	5674258	EqualityExpression	dev_width != penum -> rect . w		5673980	0		!=			
ANR	5674259	Identifier	dev_width		5673980	0					
ANR	5674260	MemberAccess	penum -> rect . w		5673980	1					
ANR	5674261	PtrMemberAccess	penum -> rect		5673980	0					
ANR	5674262	Identifier	penum		5673980	0					
ANR	5674263	Identifier	rect		5673980	1					
ANR	5674264	Identifier	w		5673980	1					
ANR	5674265	EqualityExpression	penum -> adjust != 0		5673980	1		!=			
ANR	5674266	PtrMemberAccess	penum -> adjust		5673980	0					
ANR	5674267	Identifier	penum		5673980	0					
ANR	5674268	Identifier	adjust		5673980	1					
ANR	5674269	PrimaryExpression	0		5673980	1					
ANR	5674270	RelationalExpression	line_size > max_uint		5673980	1		>			
ANR	5674271	Identifier	line_size		5673980	0					
ANR	5674272	Identifier	max_uint		5673980	1					
ANR	5674273	ReturnStatement	return 0 ;	106:20:3724:3732	5673980	1	True				
ANR	5674274	PrimaryExpression	0		5673980	0					
ANR	5674275	ExpressionStatement	penum -> line_width = dev_width	108:16:3810:3839	5673980	3	True				
ANR	5674276	AssignmentExpression	penum -> line_width = dev_width		5673980	0		=			
ANR	5674277	PtrMemberAccess	penum -> line_width		5673980	0					
ANR	5674278	Identifier	penum		5673980	0					
ANR	5674279	Identifier	line_width		5673980	1					
ANR	5674280	Identifier	dev_width		5673980	1					
ANR	5674281	ExpressionStatement	penum -> line_size = ( uint ) line_size	109:16:3857:3892	5673980	4	True				
ANR	5674282	AssignmentExpression	penum -> line_size = ( uint ) line_size		5673980	0		=			
ANR	5674283	PtrMemberAccess	penum -> line_size		5673980	0					
ANR	5674284	Identifier	penum		5673980	0					
ANR	5674285	Identifier	line_size		5673980	1					
ANR	5674286	CastExpression	( uint ) line_size		5673980	1					
ANR	5674287	CastTarget	uint		5673980	0					
ANR	5674288	Identifier	line_size		5673980	1					
ANR	5674289	ExpressionStatement	"penum -> line = gs_alloc_bytes ( penum -> memory , penum -> line_size , ""image line"" )"	110:16:3910:4030	5673980	5	True				
ANR	5674290	AssignmentExpression	"penum -> line = gs_alloc_bytes ( penum -> memory , penum -> line_size , ""image line"" )"		5673980	0		=			
ANR	5674291	PtrMemberAccess	penum -> line		5673980	0					
ANR	5674292	Identifier	penum		5673980	0					
ANR	5674293	Identifier	line		5673980	1					
ANR	5674294	CallExpression	"gs_alloc_bytes ( penum -> memory , penum -> line_size , ""image line"" )"		5673980	1					
ANR	5674295	Callee	gs_alloc_bytes		5673980	0					
ANR	5674296	Identifier	gs_alloc_bytes		5673980	0					
ANR	5674297	ArgumentList	penum -> memory		5673980	1					
ANR	5674298	Argument	penum -> memory		5673980	0					
ANR	5674299	PtrMemberAccess	penum -> memory		5673980	0					
ANR	5674300	Identifier	penum		5673980	0					
ANR	5674301	Identifier	memory		5673980	1					
ANR	5674302	Argument	penum -> line_size		5673980	1					
ANR	5674303	PtrMemberAccess	penum -> line_size		5673980	0					
ANR	5674304	Identifier	penum		5673980	0					
ANR	5674305	Identifier	line_size		5673980	1					
ANR	5674306	Argument	"""image line"""		5673980	2					
ANR	5674307	PrimaryExpression	"""image line"""		5673980	0					
ANR	5674308	IfStatement	if ( penum -> line == 0 )		5673980	6					
ANR	5674309	Condition	penum -> line == 0	112:20:4052:4067	5673980	0	True				
ANR	5674310	EqualityExpression	penum -> line == 0		5673980	0		==			
ANR	5674311	PtrMemberAccess	penum -> line		5673980	0					
ANR	5674312	Identifier	penum		5673980	0					
ANR	5674313	Identifier	line		5673980	1					
ANR	5674314	PrimaryExpression	0		5673980	1					
ANR	5674315	CompoundStatement		58:38:2517:2517	5673980	1					
ANR	5674316	ExpressionStatement	"gx_default_end_image ( penum -> dev , ( gx_image_enum_common_t * ) penum , false )"	113:20:4092:4247	5673980	0	True				
ANR	5674317	CallExpression	"gx_default_end_image ( penum -> dev , ( gx_image_enum_common_t * ) penum , false )"		5673980	0					
ANR	5674318	Callee	gx_default_end_image		5673980	0					
ANR	5674319	Identifier	gx_default_end_image		5673980	0					
ANR	5674320	ArgumentList	penum -> dev		5673980	1					
ANR	5674321	Argument	penum -> dev		5673980	0					
ANR	5674322	PtrMemberAccess	penum -> dev		5673980	0					
ANR	5674323	Identifier	penum		5673980	0					
ANR	5674324	Identifier	dev		5673980	1					
ANR	5674325	Argument	( gx_image_enum_common_t * ) penum		5673980	1					
ANR	5674326	CastExpression	( gx_image_enum_common_t * ) penum		5673980	0					
ANR	5674327	CastTarget	gx_image_enum_common_t *		5673980	0					
ANR	5674328	Identifier	penum		5673980	1					
ANR	5674329	Argument	false		5673980	2					
ANR	5674330	Identifier	false		5673980	0					
ANR	5674331	ReturnStatement	return 0 ;	116:20:4269:4277	5673980	1	True				
ANR	5674332	PrimaryExpression	0		5673980	0					
ANR	5674333	ExpressionStatement	"memset ( penum -> line , 0 , penum -> line_size )"	119:16:4336:4376	5673980	7	True				
ANR	5674334	CallExpression	"memset ( penum -> line , 0 , penum -> line_size )"		5673980	0					
ANR	5674335	Callee	memset		5673980	0					
ANR	5674336	Identifier	memset		5673980	0					
ANR	5674337	ArgumentList	penum -> line		5673980	1					
ANR	5674338	Argument	penum -> line		5673980	0					
ANR	5674339	PtrMemberAccess	penum -> line		5673980	0					
ANR	5674340	Identifier	penum		5673980	0					
ANR	5674341	Identifier	line		5673980	1					
ANR	5674342	Argument	0		5673980	1					
ANR	5674343	PrimaryExpression	0		5673980	0					
ANR	5674344	Argument	penum -> line_size		5673980	2					
ANR	5674345	PtrMemberAccess	penum -> line_size		5673980	0					
ANR	5674346	Identifier	penum		5673980	0					
ANR	5674347	Identifier	line_size		5673980	1					
ANR	5674348	ExpressionStatement	penum -> xi_next = penum -> line_xy = fixed2int_var_rounded ( ox )	121:16:4440:4499	5673980	8	True				
ANR	5674349	AssignmentExpression	penum -> xi_next = penum -> line_xy = fixed2int_var_rounded ( ox )		5673980	0		=			
ANR	5674350	PtrMemberAccess	penum -> xi_next		5673980	0					
ANR	5674351	Identifier	penum		5673980	0					
ANR	5674352	Identifier	xi_next		5673980	1					
ANR	5674353	AssignmentExpression	penum -> line_xy = fixed2int_var_rounded ( ox )		5673980	1		=			
ANR	5674354	PtrMemberAccess	penum -> line_xy		5673980	0					
ANR	5674355	Identifier	penum		5673980	0					
ANR	5674356	Identifier	line_xy		5673980	1					
ANR	5674357	CallExpression	fixed2int_var_rounded ( ox )		5673980	1					
ANR	5674358	Callee	fixed2int_var_rounded		5673980	0					
ANR	5674359	Identifier	fixed2int_var_rounded		5673980	0					
ANR	5674360	ArgumentList	ox		5673980	1					
ANR	5674361	Argument	ox		5673980	0					
ANR	5674362	Identifier	ox		5673980	0					
ANR	5674363	ExpressionStatement	"if_debug3m ( 'b' , penum -> memory , ""[b]render=landscape, unpack=copy; rect.w=%d, dev_width=%ld, line_size=%ld\\n"" , penum -> rect . w , dev_width , line_size )"	122:16:4517:4717	5673980	9	True				
ANR	5674364	CallExpression	"if_debug3m ( 'b' , penum -> memory , ""[b]render=landscape, unpack=copy; rect.w=%d, dev_width=%ld, line_size=%ld\\n"" , penum -> rect . w , dev_width , line_size )"		5673980	0					
ANR	5674365	Callee	if_debug3m		5673980	0					
ANR	5674366	Identifier	if_debug3m		5673980	0					
ANR	5674367	ArgumentList	'b'		5673980	1					
ANR	5674368	Argument	'b'		5673980	0					
ANR	5674369	PrimaryExpression	'b'		5673980	0					
ANR	5674370	Argument	penum -> memory		5673980	1					
ANR	5674371	PtrMemberAccess	penum -> memory		5673980	0					
ANR	5674372	Identifier	penum		5673980	0					
ANR	5674373	Identifier	memory		5673980	1					
ANR	5674374	Argument	"""[b]render=landscape, unpack=copy; rect.w=%d, dev_width=%ld, line_size=%ld\\n"""		5673980	2					
ANR	5674375	PrimaryExpression	"""[b]render=landscape, unpack=copy; rect.w=%d, dev_width=%ld, line_size=%ld\\n"""		5673980	0					
ANR	5674376	Argument	penum -> rect . w		5673980	3					
ANR	5674377	MemberAccess	penum -> rect . w		5673980	0					
ANR	5674378	PtrMemberAccess	penum -> rect		5673980	0					
ANR	5674379	Identifier	penum		5673980	0					
ANR	5674380	Identifier	rect		5673980	1					
ANR	5674381	Identifier	w		5673980	1					
ANR	5674382	Argument	dev_width		5673980	4					
ANR	5674383	Identifier	dev_width		5673980	0					
ANR	5674384	Argument	line_size		5673980	5					
ANR	5674385	Identifier	line_size		5673980	0					
ANR	5674386	ExpressionStatement	rproc = image_render_landscape	125:16:4735:4765	5673980	10	True				
ANR	5674387	AssignmentExpression	rproc = image_render_landscape		5673980	0		=			
ANR	5674388	Identifier	rproc		5673980	0					
ANR	5674389	Identifier	image_render_landscape		5673980	1					
ANR	5674390	ExpressionStatement	penum -> dxy = float2fixed ( penum -> matrix . xy + fixed2float ( fixed_epsilon ) / 2 )	127:16:4847:4974	5673980	11	True				
ANR	5674391	AssignmentExpression	penum -> dxy = float2fixed ( penum -> matrix . xy + fixed2float ( fixed_epsilon ) / 2 )		5673980	0		=			
ANR	5674392	PtrMemberAccess	penum -> dxy		5673980	0					
ANR	5674393	Identifier	penum		5673980	0					
ANR	5674394	Identifier	dxy		5673980	1					
ANR	5674395	CallExpression	float2fixed ( penum -> matrix . xy + fixed2float ( fixed_epsilon ) / 2 )		5673980	1					
ANR	5674396	Callee	float2fixed		5673980	0					
ANR	5674397	Identifier	float2fixed		5673980	0					
ANR	5674398	ArgumentList	penum -> matrix . xy + fixed2float ( fixed_epsilon ) / 2		5673980	1					
ANR	5674399	Argument	penum -> matrix . xy + fixed2float ( fixed_epsilon ) / 2		5673980	0					
ANR	5674400	AdditiveExpression	penum -> matrix . xy + fixed2float ( fixed_epsilon ) / 2		5673980	0		+			
ANR	5674401	MemberAccess	penum -> matrix . xy		5673980	0					
ANR	5674402	PtrMemberAccess	penum -> matrix		5673980	0					
ANR	5674403	Identifier	penum		5673980	0					
ANR	5674404	Identifier	matrix		5673980	1					
ANR	5674405	Identifier	xy		5673980	1					
ANR	5674406	MultiplicativeExpression	fixed2float ( fixed_epsilon ) / 2		5673980	1		/			
ANR	5674407	CallExpression	fixed2float ( fixed_epsilon )		5673980	0					
ANR	5674408	Callee	fixed2float		5673980	0					
ANR	5674409	Identifier	fixed2float		5673980	0					
ANR	5674410	ArgumentList	fixed_epsilon		5673980	1					
ANR	5674411	Argument	fixed_epsilon		5673980	0					
ANR	5674412	Identifier	fixed_epsilon		5673980	0					
ANR	5674413	PrimaryExpression	2		5673980	1					
ANR	5674414	BreakStatement	break ;	130:16:4992:4997	5673980	12	True				
ANR	5674415	Label	default :	132:8:5021:5028	5673980	4	True				
ANR	5674416	Identifier	default		5673980	0					
ANR	5674417	ReturnStatement	return 0 ;	133:12:5042:5050	5673980	5	True				
ANR	5674418	PrimaryExpression	0		5673980	0					
ANR	5674419	ExpressionStatement	penum -> dxx = float2fixed ( penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2 )	136:4:5114:5197	5673980	5	True				
ANR	5674420	AssignmentExpression	penum -> dxx = float2fixed ( penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2 )		5673980	0		=			
ANR	5674421	PtrMemberAccess	penum -> dxx		5673980	0					
ANR	5674422	Identifier	penum		5673980	0					
ANR	5674423	Identifier	dxx		5673980	1					
ANR	5674424	CallExpression	float2fixed ( penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2 )		5673980	1					
ANR	5674425	Callee	float2fixed		5673980	0					
ANR	5674426	Identifier	float2fixed		5673980	0					
ANR	5674427	ArgumentList	penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2		5673980	1					
ANR	5674428	Argument	penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2		5673980	0					
ANR	5674429	AdditiveExpression	penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2		5673980	0		+			
ANR	5674430	MemberAccess	penum -> matrix . xx		5673980	0					
ANR	5674431	PtrMemberAccess	penum -> matrix		5673980	0					
ANR	5674432	Identifier	penum		5673980	0					
ANR	5674433	Identifier	matrix		5673980	1					
ANR	5674434	Identifier	xx		5673980	1					
ANR	5674435	MultiplicativeExpression	fixed2float ( fixed_epsilon ) / 2		5673980	1		/			
ANR	5674436	CallExpression	fixed2float ( fixed_epsilon )		5673980	0					
ANR	5674437	Callee	fixed2float		5673980	0					
ANR	5674438	Identifier	fixed2float		5673980	0					
ANR	5674439	ArgumentList	fixed_epsilon		5673980	1					
ANR	5674440	Argument	fixed_epsilon		5673980	0					
ANR	5674441	Identifier	fixed_epsilon		5673980	0					
ANR	5674442	PrimaryExpression	2		5673980	1					
ANR	5674443	ExpressionStatement	penum -> unpack = sample_unpack_copy	143:4:5388:5422	5673980	6	True				
ANR	5674444	AssignmentExpression	penum -> unpack = sample_unpack_copy		5673980	0		=			
ANR	5674445	PtrMemberAccess	penum -> unpack		5673980	0					
ANR	5674446	Identifier	penum		5673980	0					
ANR	5674447	Identifier	unpack		5673980	1					
ANR	5674448	Identifier	sample_unpack_copy		5673980	1					
ANR	5674449	ExpressionStatement	penum -> unpack_bps = 8	144:4:5428:5449	5673980	7	True				
ANR	5674450	AssignmentExpression	penum -> unpack_bps = 8		5673980	0		=			
ANR	5674451	PtrMemberAccess	penum -> unpack_bps		5673980	0					
ANR	5674452	Identifier	penum		5673980	0					
ANR	5674453	Identifier	unpack_bps		5673980	1					
ANR	5674454	PrimaryExpression	8		5673980	1					
ANR	5674455	IfStatement	if ( penum -> use_mask_color )		5673980	8					
ANR	5674456	Condition	penum -> use_mask_color	145:8:5459:5479	5673980	0	True				
ANR	5674457	PtrMemberAccess	penum -> use_mask_color		5673980	0					
ANR	5674458	Identifier	penum		5673980	0					
ANR	5674459	Identifier	use_mask_color		5673980	1					
ANR	5674460	CompoundStatement		91:31:3929:3929	5673980	1					
ANR	5674461	ExpressionStatement	penum -> masked = true	150:8:5648:5668	5673980	0	True				
ANR	5674462	AssignmentExpression	penum -> masked = true		5673980	0		=			
ANR	5674463	PtrMemberAccess	penum -> masked		5673980	0					
ANR	5674464	Identifier	penum		5673980	0					
ANR	5674465	Identifier	masked		5673980	1					
ANR	5674466	Identifier	true		5673980	1					
ANR	5674467	IfStatement	if ( penum -> mask_color . values [ 0 ] == 1 )		5673980	1					
ANR	5674468	Condition	penum -> mask_color . values [ 0 ] == 1	151:12:5682:5713	5673980	0	True				
ANR	5674469	EqualityExpression	penum -> mask_color . values [ 0 ] == 1		5673980	0		==			
ANR	5674470	ArrayIndexing	penum -> mask_color . values [ 0 ]		5673980	0					
ANR	5674471	MemberAccess	penum -> mask_color . values		5673980	0					
ANR	5674472	PtrMemberAccess	penum -> mask_color		5673980	0					
ANR	5674473	Identifier	penum		5673980	0					
ANR	5674474	Identifier	mask_color		5673980	1					
ANR	5674475	Identifier	values		5673980	1					
ANR	5674476	PrimaryExpression	0		5673980	1					
ANR	5674477	PrimaryExpression	1		5673980	1					
ANR	5674478	CompoundStatement		97:46:4163:4163	5673980	1					
ANR	5674479	ExpressionStatement	"set_nonclient_dev_color ( penum -> map [ 0 ] . inverted ? penum -> icolor0 : penum -> icolor1 , gx_no_color_index )"	153:12:5819:5943	5673980	0	True				
ANR	5674480	CallExpression	"set_nonclient_dev_color ( penum -> map [ 0 ] . inverted ? penum -> icolor0 : penum -> icolor1 , gx_no_color_index )"		5673980	0					
ANR	5674481	Callee	set_nonclient_dev_color		5673980	0					
ANR	5674482	Identifier	set_nonclient_dev_color		5673980	0					
ANR	5674483	ArgumentList	penum -> map [ 0 ] . inverted ? penum -> icolor0 : penum -> icolor1		5673980	1					
ANR	5674484	Argument	penum -> map [ 0 ] . inverted ? penum -> icolor0 : penum -> icolor1		5673980	0					
ANR	5674485	ConditionalExpression	penum -> map [ 0 ] . inverted ? penum -> icolor0 : penum -> icolor1		5673980	0					
ANR	5674486	Condition	penum -> map [ 0 ] . inverted		5673980	0					
ANR	5674487	MemberAccess	penum -> map [ 0 ] . inverted		5673980	0					
ANR	5674488	ArrayIndexing	penum -> map [ 0 ]		5673980	0					
ANR	5674489	PtrMemberAccess	penum -> map		5673980	0					
ANR	5674490	Identifier	penum		5673980	0					
ANR	5674491	Identifier	map		5673980	1					
ANR	5674492	PrimaryExpression	0		5673980	1					
ANR	5674493	Identifier	inverted		5673980	1					
ANR	5674494	PtrMemberAccess	penum -> icolor0		5673980	1					
ANR	5674495	Identifier	penum		5673980	0					
ANR	5674496	Identifier	icolor0		5673980	1					
ANR	5674497	PtrMemberAccess	penum -> icolor1		5673980	2					
ANR	5674498	Identifier	penum		5673980	0					
ANR	5674499	Identifier	icolor1		5673980	1					
ANR	5674500	Argument	gx_no_color_index		5673980	1					
ANR	5674501	Identifier	gx_no_color_index		5673980	0					
ANR	5674502	ElseStatement	else		5673980	0					
ANR	5674503	IfStatement	if ( penum -> mask_color . values [ 1 ] == 0 )		5673980	0					
ANR	5674504	Condition	penum -> mask_color . values [ 1 ] == 0	155:19:5964:5995	5673980	0	True				
ANR	5674505	EqualityExpression	penum -> mask_color . values [ 1 ] == 0		5673980	0		==			
ANR	5674506	ArrayIndexing	penum -> mask_color . values [ 1 ]		5673980	0					
ANR	5674507	MemberAccess	penum -> mask_color . values		5673980	0					
ANR	5674508	PtrMemberAccess	penum -> mask_color		5673980	0					
ANR	5674509	Identifier	penum		5673980	0					
ANR	5674510	Identifier	mask_color		5673980	1					
ANR	5674511	Identifier	values		5673980	1					
ANR	5674512	PrimaryExpression	1		5673980	1					
ANR	5674513	PrimaryExpression	0		5673980	1					
ANR	5674514	CompoundStatement		101:53:4445:4445	5673980	1					
ANR	5674515	ExpressionStatement	"set_nonclient_dev_color ( penum -> map [ 0 ] . inverted ? penum -> icolor1 : penum -> icolor0 , gx_no_color_index )"	157:12:6101:6225	5673980	0	True				
ANR	5674516	CallExpression	"set_nonclient_dev_color ( penum -> map [ 0 ] . inverted ? penum -> icolor1 : penum -> icolor0 , gx_no_color_index )"		5673980	0					
ANR	5674517	Callee	set_nonclient_dev_color		5673980	0					
ANR	5674518	Identifier	set_nonclient_dev_color		5673980	0					
ANR	5674519	ArgumentList	penum -> map [ 0 ] . inverted ? penum -> icolor1 : penum -> icolor0		5673980	1					
ANR	5674520	Argument	penum -> map [ 0 ] . inverted ? penum -> icolor1 : penum -> icolor0		5673980	0					
ANR	5674521	ConditionalExpression	penum -> map [ 0 ] . inverted ? penum -> icolor1 : penum -> icolor0		5673980	0					
ANR	5674522	Condition	penum -> map [ 0 ] . inverted		5673980	0					
ANR	5674523	MemberAccess	penum -> map [ 0 ] . inverted		5673980	0					
ANR	5674524	ArrayIndexing	penum -> map [ 0 ]		5673980	0					
ANR	5674525	PtrMemberAccess	penum -> map		5673980	0					
ANR	5674526	Identifier	penum		5673980	0					
ANR	5674527	Identifier	map		5673980	1					
ANR	5674528	PrimaryExpression	0		5673980	1					
ANR	5674529	Identifier	inverted		5673980	1					
ANR	5674530	PtrMemberAccess	penum -> icolor1		5673980	1					
ANR	5674531	Identifier	penum		5673980	0					
ANR	5674532	Identifier	icolor1		5673980	1					
ANR	5674533	PtrMemberAccess	penum -> icolor0		5673980	2					
ANR	5674534	Identifier	penum		5673980	0					
ANR	5674535	Identifier	icolor0		5673980	1					
ANR	5674536	Argument	gx_no_color_index		5673980	1					
ANR	5674537	Identifier	gx_no_color_index		5673980	0					
ANR	5674538	ElseStatement	else		5673980	0					
ANR	5674539	CompoundStatement		105:15:4689:4689	5673980	0					
ANR	5674540	ExpressionStatement	rproc = image_render_skip	164:12:6412:6437	5673980	0	True				
ANR	5674541	AssignmentExpression	rproc = image_render_skip		5673980	0		=			
ANR	5674542	Identifier	rproc		5673980	0					
ANR	5674543	Identifier	image_render_skip		5673980	1					
ANR	5674544	ExpressionStatement	penum -> map [ 0 ] . decoding = sd_none	166:8:6457:6489	5673980	2	True				
ANR	5674545	AssignmentExpression	penum -> map [ 0 ] . decoding = sd_none		5673980	0		=			
ANR	5674546	MemberAccess	penum -> map [ 0 ] . decoding		5673980	0					
ANR	5674547	ArrayIndexing	penum -> map [ 0 ]		5673980	0					
ANR	5674548	PtrMemberAccess	penum -> map		5673980	0					
ANR	5674549	Identifier	penum		5673980	0					
ANR	5674550	Identifier	map		5673980	1					
ANR	5674551	PrimaryExpression	0		5673980	1					
ANR	5674552	Identifier	decoding		5673980	1					
ANR	5674553	Identifier	sd_none		5673980	1					
ANR	5674554	ReturnStatement	return rproc ;	168:4:6501:6513	5673980	9	True				
ANR	5674555	Identifier	rproc		5673980	0					
ANR	5674556	ReturnType	irender_proc_t		5673980	1					
ANR	5674557	Identifier	gs_image_class_1_simple		5673980	2					
ANR	5674558	ParameterList	gx_image_enum * penum		5673980	3					
ANR	5674559	Parameter	gx_image_enum * penum	54:24:1529:1549	5673980	0	True				
ANR	5674560	ParameterType	gx_image_enum *		5673980	0					
ANR	5674561	Identifier	penum		5673980	1					
ANR	5674562	CFGEntryNode	ENTRY		5673980		True				
ANR	5674563	CFGExitNode	EXIT		5673980		True				
ANR	5674564	Symbol	penum -> rect		5673980						
ANR	5674565	Symbol	penum -> x_extent . x		5673980						
ANR	5674566	Symbol	penum -> x_extent		5673980						
ANR	5674567	Symbol	penum -> dda . pixel0		5673980						
ANR	5674568	Symbol	penum -> matrix . xx		5673980						
ANR	5674569	Symbol	penum -> masked		5673980						
ANR	5674570	Symbol	max_uint		5673980						
ANR	5674571	Symbol	penum -> dev		5673980						
ANR	5674572	Symbol	penum -> matrix . xy		5673980						
ANR	5674573	Symbol	* penum -> mask_color		5673980						
ANR	5674574	Symbol	penum -> x_extent . y		5673980						
ANR	5674575	Symbol	* penum -> mask_color . values		5673980						
ANR	5674576	Symbol	penum -> line_width		5673980						
ANR	5674577	Symbol	gx_no_color_index		5673980						
ANR	5674578	Symbol	penum -> line		5673980						
ANR	5674579	Symbol	fixed2long_pixround		5673980						
ANR	5674580	Symbol	dev_width		5673980						
ANR	5674581	Symbol	sd_none		5673980						
ANR	5674582	Symbol	fixed_epsilon		5673980						
ANR	5674583	Symbol	line_size		5673980						
ANR	5674584	Symbol	* * penum		5673980						
ANR	5674585	Symbol	penum -> rect . w		5673980						
ANR	5674586	Symbol	penum -> use_rop		5673980						
ANR	5674587	Symbol	penum		5673980						
ANR	5674588	Symbol	ROUND_UP		5673980						
ANR	5674589	Symbol	image_render_simple		5673980						
ANR	5674590	Symbol	penum -> dda		5673980						
ANR	5674591	Symbol	rproc		5673980						
ANR	5674592	Symbol	dda_current		5673980						
ANR	5674593	Symbol	penum -> bps		5673980						
ANR	5674594	Symbol	penum -> dxy		5673980						
ANR	5674595	Symbol	penum -> dxx		5673980						
ANR	5674596	Symbol	align_bitmap_mod		5673980						
ANR	5674597	Symbol	true		5673980						
ANR	5674598	Symbol	penum -> line_xy		5673980						
ANR	5674599	Symbol	penum -> map [ 0 ] . decoding		5673980						
ANR	5674600	Symbol	* penum		5673980						
ANR	5674601	Symbol	sample_unpack_copy		5673980						
ANR	5674602	Symbol	penum -> memory		5673980						
ANR	5674603	Symbol	* penum -> map		5673980						
ANR	5674604	Symbol	fixed2int_var_rounded		5673980						
ANR	5674605	Symbol	penum -> map		5673980						
ANR	5674606	Symbol	image_render_landscape		5673980						
ANR	5674607	Symbol	penum -> matrix		5673980						
ANR	5674608	Symbol	penum -> xi_next		5673980						
ANR	5674609	Symbol	float2fixed		5673980						
ANR	5674610	Symbol	penum -> mask_color		5673980						
ANR	5674611	Symbol	penum -> line_size		5673980						
ANR	5674612	Symbol	any_abs		5673980						
ANR	5674613	Symbol	penum -> unpack		5673980						
ANR	5674614	Symbol	penum -> map [ 0 ] . inverted		5673980						
ANR	5674615	Symbol	penum -> spp		5673980						
ANR	5674616	Symbol	gs_alloc_bytes		5673980						
ANR	5674617	Symbol	fixed2float		5673980						
ANR	5674618	Symbol	image_render_skip		5673980						
ANR	5674619	Symbol	penum -> mask_color . values		5673980						
ANR	5674620	Symbol	false		5673980						
ANR	5674621	Symbol	ox		5673980						
ANR	5674622	Symbol	oy		5673980						
ANR	5674623	Symbol	penum -> icolor0		5673980						
ANR	5674624	Symbol	bitmap_raster		5673980						
ANR	5674625	Symbol	penum -> icolor1		5673980						
ANR	5674626	Symbol	penum -> posture		5673980						
ANR	5674627	Symbol	penum -> adjust		5673980						
ANR	5674628	Symbol	penum -> use_mask_color		5673980						
ANR	5674629	Symbol	penum -> unpack_bps		5673980						
ANR	5674630	Symbol	penum -> dda . pixel0 . x		5673980						
ANR	5674631	Symbol	penum -> dda . pixel0 . y		5673980						
ANR	5674632	Function	image_render_skip	177:0:6700:6851							
ANR	5674633	FunctionDef	"image_render_skip (gx_image_enum * penum , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5674632	0					
ANR	5674634	CompoundStatement		180:0:6835:6851	5674632	0					
ANR	5674635	ReturnStatement	return h ;	181:4:6841:6849	5674632	0	True				
ANR	5674636	Identifier	h		5674632	0					
ANR	5674637	ReturnType	static int		5674632	1					
ANR	5674638	Identifier	image_render_skip		5674632	2					
ANR	5674639	ParameterList	"gx_image_enum * penum , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5674632	3					
ANR	5674640	Parameter	gx_image_enum * penum	178:18:6729:6749	5674632	0	True				
ANR	5674641	ParameterType	gx_image_enum *		5674632	0					
ANR	5674642	Identifier	penum		5674632	1					
ANR	5674643	Parameter	const byte * buffer	178:41:6752:6770	5674632	1	True				
ANR	5674644	ParameterType	const byte *		5674632	0					
ANR	5674645	Identifier	buffer		5674632	1					
ANR	5674646	Parameter	int data_x	178:62:6773:6782	5674632	2	True				
ANR	5674647	ParameterType	int		5674632	0					
ANR	5674648	Identifier	data_x		5674632	1					
ANR	5674649	Parameter	uint w	179:18:6803:6808	5674632	3	True				
ANR	5674650	ParameterType	uint		5674632	0					
ANR	5674651	Identifier	w		5674632	1					
ANR	5674652	Parameter	int h	179:26:6811:6815	5674632	4	True				
ANR	5674653	ParameterType	int		5674632	0					
ANR	5674654	Identifier	h		5674632	1					
ANR	5674655	Parameter	gx_device * dev	179:33:6818:6832	5674632	5	True				
ANR	5674656	ParameterType	gx_device *		5674632	0					
ANR	5674657	Identifier	dev		5674632	1					
ANR	5674658	CFGEntryNode	ENTRY		5674632		True				
ANR	5674659	CFGExitNode	EXIT		5674632		True				
ANR	5674660	Symbol	data_x		5674632						
ANR	5674661	Symbol	dev		5674632						
ANR	5674662	Symbol	w		5674632						
ANR	5674663	Symbol	penum		5674632						
ANR	5674664	Symbol	h		5674632						
ANR	5674665	Symbol	buffer		5674632						
ANR	5674666	ClassDef	stats_image_fast_s	200:0:7621:7846							
ANR	5674667	DeclStmt									
ANR	5674668	Decl							long	long	calls
ANR	5674669	Decl							long	long	all0s
ANR	5674670	Decl							long	long	all1s
ANR	5674671	Decl							long	long	runs
ANR	5674672	Decl							long	long	lbit0
ANR	5674673	Decl							long	long	byte00
ANR	5674674	Decl							long	long	byte01
ANR	5674675	Decl							long	long	byte02
ANR	5674676	Decl							long	long	byte03
ANR	5674677	Decl							long	long	byte04
ANR	5674678	Decl							long	long	rbit0
ANR	5674679	Decl							long	long	lbit1
ANR	5674680	Decl							long	long	byte1
ANR	5674681	Decl							long	long	rbit1
ANR	5674682	Decl							long	long	thin
ANR	5674683	Decl							long	long	thin2
ANR	5674684	Decl							long	long	nwide
ANR	5674685	Decl							long	long	bwide
ANR	5674686	Decl							long	long	nfill
ANR	5674687	Decl							long	long	bfill
ANR	5674688	DeclStmt									
ANR	5674689	Decl							stats_image_fast_s	stats_image_fast_s	stats_image_fast
ANR	5674690	Function	fill_row	212:0:8024:8167							
ANR	5674691	FunctionDef	"fill_row (byte * line , int line_x , uint raster , int value)"		5674690	0					
ANR	5674692	CompoundStatement		214:0:8100:8167	5674690	0					
ANR	5674693	ExpressionStatement	"memset ( line + ( line_x >> 3 ) , value , raster - ( line_x >> 3 ) )"	215:4:8106:8165	5674690	0	True				
ANR	5674694	CallExpression	"memset ( line + ( line_x >> 3 ) , value , raster - ( line_x >> 3 ) )"		5674690	0					
ANR	5674695	Callee	memset		5674690	0					
ANR	5674696	Identifier	memset		5674690	0					
ANR	5674697	ArgumentList	line + ( line_x >> 3 )		5674690	1					
ANR	5674698	Argument	line + ( line_x >> 3 )		5674690	0					
ANR	5674699	AdditiveExpression	line + ( line_x >> 3 )		5674690	0		+			
ANR	5674700	Identifier	line		5674690	0					
ANR	5674701	ShiftExpression	line_x >> 3		5674690	1		>>			
ANR	5674702	Identifier	line_x		5674690	0					
ANR	5674703	PrimaryExpression	3		5674690	1					
ANR	5674704	Argument	value		5674690	1					
ANR	5674705	Identifier	value		5674690	0					
ANR	5674706	Argument	raster - ( line_x >> 3 )		5674690	2					
ANR	5674707	AdditiveExpression	raster - ( line_x >> 3 )		5674690	0		-			
ANR	5674708	Identifier	raster		5674690	0					
ANR	5674709	ShiftExpression	line_x >> 3		5674690	1		>>			
ANR	5674710	Identifier	line_x		5674690	0					
ANR	5674711	PrimaryExpression	3		5674690	1					
ANR	5674712	ReturnType	static inline void		5674690	1					
ANR	5674713	Identifier	fill_row		5674690	2					
ANR	5674714	ParameterList	"byte * line , int line_x , uint raster , int value"		5674690	3					
ANR	5674715	Parameter	byte * line	213:9:8052:8061	5674690	0	True				
ANR	5674716	ParameterType	byte *		5674690	0					
ANR	5674717	Identifier	line		5674690	1					
ANR	5674718	Parameter	int line_x	213:21:8064:8073	5674690	1	True				
ANR	5674719	ParameterType	int		5674690	0					
ANR	5674720	Identifier	line_x		5674690	1					
ANR	5674721	Parameter	uint raster	213:33:8076:8086	5674690	2	True				
ANR	5674722	ParameterType	uint		5674690	0					
ANR	5674723	Identifier	raster		5674690	1					
ANR	5674724	Parameter	int value	213:46:8089:8097	5674690	3	True				
ANR	5674725	ParameterType	int		5674690	0					
ANR	5674726	Identifier	value		5674690	1					
ANR	5674727	CFGEntryNode	ENTRY		5674690		True				
ANR	5674728	CFGExitNode	EXIT		5674690		True				
ANR	5674729	Symbol	line		5674690						
ANR	5674730	Symbol	raster		5674690						
ANR	5674731	Symbol	line_x		5674690						
ANR	5674732	Symbol	value		5674690						
ANR	5674733	Function	image_simple_expand	217:0:8169:16570							
ANR	5674734	FunctionDef	"image_simple_expand (byte * line , int line_x , uint raster , const byte * buffer , int data_x , uint w , fixed xcur , fixed x_extent , byte zero)"		5674733	0					
ANR	5674735	CompoundStatement		221:0:8376:16570	5674733	0					
ANR	5674736	IdentifierDeclStatement	int dbitx = data_x & 7 ;	222:4:8382:8404	5674733	0	True				
ANR	5674737	IdentifierDecl	dbitx = data_x & 7		5674733	0					
ANR	5674738	IdentifierDeclType	int		5674733	0					
ANR	5674739	Identifier	dbitx		5674733	1					
ANR	5674740	AssignmentExpression	dbitx = data_x & 7		5674733	2		=			
ANR	5674741	Identifier	dbitx		5674733	0					
ANR	5674742	BitAndExpression	data_x & 7		5674733	1		&			
ANR	5674743	Identifier	data_x		5674733	0					
ANR	5674744	PrimaryExpression	7		5674733	1					
ANR	5674745	IdentifierDeclStatement	byte sbit = 0x80 >> dbitx ;	223:4:8410:8435	5674733	1	True				
ANR	5674746	IdentifierDecl	sbit = 0x80 >> dbitx		5674733	0					
ANR	5674747	IdentifierDeclType	byte		5674733	0					
ANR	5674748	Identifier	sbit		5674733	1					
ANR	5674749	AssignmentExpression	sbit = 0x80 >> dbitx		5674733	2		=			
ANR	5674750	Identifier	sbit		5674733	0					
ANR	5674751	ShiftExpression	0x80 >> dbitx		5674733	1		>>			
ANR	5674752	PrimaryExpression	0x80		5674733	0					
ANR	5674753	Identifier	dbitx		5674733	1					
ANR	5674754	IdentifierDeclStatement	byte sbitmask = 0xff >> dbitx ;	224:4:8441:8470	5674733	2	True				
ANR	5674755	IdentifierDecl	sbitmask = 0xff >> dbitx		5674733	0					
ANR	5674756	IdentifierDeclType	byte		5674733	0					
ANR	5674757	Identifier	sbitmask		5674733	1					
ANR	5674758	AssignmentExpression	sbitmask = 0xff >> dbitx		5674733	2		=			
ANR	5674759	Identifier	sbitmask		5674733	0					
ANR	5674760	ShiftExpression	0xff >> dbitx		5674733	1		>>			
ANR	5674761	PrimaryExpression	0xff		5674733	0					
ANR	5674762	Identifier	dbitx		5674733	1					
ANR	5674763	IdentifierDeclStatement	uint wx = dbitx + w ;	225:4:8476:8495	5674733	3	True				
ANR	5674764	IdentifierDecl	wx = dbitx + w		5674733	0					
ANR	5674765	IdentifierDeclType	uint		5674733	0					
ANR	5674766	Identifier	wx		5674733	1					
ANR	5674767	AssignmentExpression	wx = dbitx + w		5674733	2		=			
ANR	5674768	Identifier	wx		5674733	0					
ANR	5674769	AdditiveExpression	dbitx + w		5674733	1		+			
ANR	5674770	Identifier	dbitx		5674733	0					
ANR	5674771	Identifier	w		5674733	1					
ANR	5674772	IdentifierDeclStatement	gx_dda_fixed xl ;	226:4:8501:8516	5674733	4	True				
ANR	5674773	IdentifierDecl	xl		5674733	0					
ANR	5674774	IdentifierDeclType	gx_dda_fixed		5674733	0					
ANR	5674775	Identifier	xl		5674733	1					
ANR	5674776	IdentifierDeclStatement	"gx_dda_step_fixed dxx4 , dxx8 , dxx16 , dxx24 , dxx32 ;"	227:4:8522:8571	5674733	5	True				
ANR	5674777	IdentifierDecl	dxx4		5674733	0					
ANR	5674778	IdentifierDeclType	gx_dda_step_fixed		5674733	0					
ANR	5674779	Identifier	dxx4		5674733	1					
ANR	5674780	IdentifierDecl	dxx8		5674733	1					
ANR	5674781	IdentifierDeclType	gx_dda_step_fixed		5674733	0					
ANR	5674782	Identifier	dxx8		5674733	1					
ANR	5674783	IdentifierDecl	dxx16		5674733	2					
ANR	5674784	IdentifierDeclType	gx_dda_step_fixed		5674733	0					
ANR	5674785	Identifier	dxx16		5674733	1					
ANR	5674786	IdentifierDecl	dxx24		5674733	3					
ANR	5674787	IdentifierDeclType	gx_dda_step_fixed		5674733	0					
ANR	5674788	Identifier	dxx24		5674733	1					
ANR	5674789	IdentifierDecl	dxx32		5674733	4					
ANR	5674790	IdentifierDeclType	gx_dda_step_fixed		5674733	0					
ANR	5674791	Identifier	dxx32		5674733	1					
ANR	5674792	Statement	register	228:4:8577:8584	5674733	6	True				
ANR	5674793	IdentifierDeclStatement	const byte * psrc = buffer + ( data_x >> 3 ) ;	228:13:8586:8627	5674733	7	True				
ANR	5674794	IdentifierDecl	* psrc = buffer + ( data_x >> 3 )		5674733	0					
ANR	5674795	IdentifierDeclType	const byte *		5674733	0					
ANR	5674796	Identifier	psrc		5674733	1					
ANR	5674797	AssignmentExpression	* psrc = buffer + ( data_x >> 3 )		5674733	2		=			
ANR	5674798	Identifier	psrc		5674733	0					
ANR	5674799	AdditiveExpression	buffer + ( data_x >> 3 )		5674733	1		+			
ANR	5674800	Identifier	buffer		5674733	0					
ANR	5674801	ShiftExpression	data_x >> 3		5674733	1		>>			
ANR	5674802	Identifier	data_x		5674733	0					
ANR	5674803	PrimaryExpression	3		5674733	1					
ANR	5674804	IdentifierDeclStatement	const byte * endp = psrc + ( wx >> 3 ) ;	241:4:9170:9205	5674733	8	True				
ANR	5674805	IdentifierDecl	* endp = psrc + ( wx >> 3 )		5674733	0					
ANR	5674806	IdentifierDeclType	const byte *		5674733	0					
ANR	5674807	Identifier	endp		5674733	1					
ANR	5674808	AssignmentExpression	* endp = psrc + ( wx >> 3 )		5674733	2		=			
ANR	5674809	Identifier	endp		5674733	0					
ANR	5674810	AdditiveExpression	psrc + ( wx >> 3 )		5674733	1		+			
ANR	5674811	Identifier	psrc		5674733	0					
ANR	5674812	ShiftExpression	wx >> 3		5674733	1		>>			
ANR	5674813	Identifier	wx		5674733	0					
ANR	5674814	PrimaryExpression	3		5674733	1					
ANR	5674815	IdentifierDeclStatement	int endx = ~wx & 7 ;	242:4:9211:9229	5674733	9	True				
ANR	5674816	IdentifierDecl	endx = ~wx & 7		5674733	0					
ANR	5674817	IdentifierDeclType	int		5674733	0					
ANR	5674818	Identifier	endx		5674733	1					
ANR	5674819	AssignmentExpression	endx = ~wx & 7		5674733	2		=			
ANR	5674820	Identifier	endx		5674733	0					
ANR	5674821	BitAndExpression	~wx & 7		5674733	1		&			
ANR	5674822	Identifier	~wx		5674733	0					
ANR	5674823	PrimaryExpression	7		5674733	1					
ANR	5674824	IdentifierDeclStatement	byte endbit = 1 << endx ;	243:4:9235:9258	5674733	10	True				
ANR	5674825	IdentifierDecl	endbit = 1 << endx		5674733	0					
ANR	5674826	IdentifierDeclType	byte		5674733	0					
ANR	5674827	Identifier	endbit		5674733	1					
ANR	5674828	AssignmentExpression	endbit = 1 << endx		5674733	2		=			
ANR	5674829	Identifier	endbit		5674733	0					
ANR	5674830	ShiftExpression	1 << endx		5674733	1		<<			
ANR	5674831	PrimaryExpression	1		5674733	0					
ANR	5674832	Identifier	endx		5674733	1					
ANR	5674833	IdentifierDeclStatement	const byte * stop = endp ;	250:4:9457:9480	5674733	11	True				
ANR	5674834	IdentifierDecl	* stop = endp		5674733	0					
ANR	5674835	IdentifierDeclType	const byte *		5674733	0					
ANR	5674836	Identifier	stop		5674733	1					
ANR	5674837	AssignmentExpression	* stop = endp		5674733	2		=			
ANR	5674838	Identifier	endp		5674733	0					
ANR	5674839	Identifier	endp		5674733	1					
ANR	5674840	IdentifierDeclStatement	int stopx ;	251:4:9486:9495	5674733	12	True				
ANR	5674841	IdentifierDecl	stopx		5674733	0					
ANR	5674842	IdentifierDeclType	int		5674733	0					
ANR	5674843	Identifier	stopx		5674733	1					
ANR	5674844	IdentifierDeclStatement	byte stopbit = endbit ;	252:4:9501:9522	5674733	13	True				
ANR	5674845	IdentifierDecl	stopbit = endbit		5674733	0					
ANR	5674846	IdentifierDeclType	byte		5674733	0					
ANR	5674847	Identifier	stopbit		5674733	1					
ANR	5674848	AssignmentExpression	stopbit = endbit		5674733	2		=			
ANR	5674849	Identifier	endbit		5674733	0					
ANR	5674850	Identifier	endbit		5674733	1					
ANR	5674851	IdentifierDeclStatement	byte data ;	253:4:9528:9537	5674733	14	True				
ANR	5674852	IdentifierDecl	data		5674733	0					
ANR	5674853	IdentifierDeclType	byte		5674733	0					
ANR	5674854	Identifier	data		5674733	1					
ANR	5674855	IdentifierDeclStatement	byte one = ~zero ;	254:4:9543:9559	5674733	15	True				
ANR	5674856	IdentifierDecl	one = ~zero		5674733	0					
ANR	5674857	IdentifierDeclType	byte		5674733	0					
ANR	5674858	Identifier	one		5674733	1					
ANR	5674859	AssignmentExpression	one = ~zero		5674733	2		=			
ANR	5674860	Identifier	~zero		5674733	0					
ANR	5674861	Identifier	~zero		5674733	1					
ANR	5674862	IdentifierDeclStatement	fixed xl0 ;	255:4:9565:9574	5674733	16	True				
ANR	5674863	IdentifierDecl	xl0		5674733	0					
ANR	5674864	IdentifierDeclType	fixed		5674733	0					
ANR	5674865	Identifier	xl0		5674733	1					
ANR	5674866	IfStatement	if ( w == 0 )		5674733	17					
ANR	5674867	Condition	w == 0	257:8:9585:9590	5674733	0	True				
ANR	5674868	EqualityExpression	w == 0		5674733	0		==			
ANR	5674869	Identifier	w		5674733	0					
ANR	5674870	PrimaryExpression	0		5674733	1					
ANR	5674871	ReturnStatement	return ;	258:8:9601:9607	5674733	1	True				
ANR	5674872	ExpressionStatement	INCS ( calls )	259:4:9613:9624	5674733	18	True				
ANR	5674873	CallExpression	INCS ( calls )		5674733	0					
ANR	5674874	Callee	INCS		5674733	0					
ANR	5674875	Identifier	INCS		5674733	0					
ANR	5674876	ArgumentList	calls		5674733	1					
ANR	5674877	Argument	calls		5674733	0					
ANR	5674878	Identifier	calls		5674733	0					
ANR	5674879	IfStatement	if ( stopbit == 0x80 )		5674733	19					
ANR	5674880	Condition	stopbit == 0x80	262:8:9684:9698	5674733	0	True				
ANR	5674881	EqualityExpression	stopbit == 0x80		5674733	0		==			
ANR	5674882	Identifier	stopbit		5674733	0					
ANR	5674883	PrimaryExpression	0x80		5674733	1					
ANR	5674884	ExpressionStatement	"-- stop , stopbit = 1"	263:8:9709:9728	5674733	1	True				
ANR	5674885	Expression	"-- stop , stopbit = 1"		5674733	0					
ANR	5674886	UnaryExpression	-- stop		5674733	0					
ANR	5674887	IncDec	--		5674733	0					
ANR	5674888	Identifier	stop		5674733	1					
ANR	5674889	AssignmentExpression	stopbit = 1		5674733	1		=			
ANR	5674890	Identifier	stopbit		5674733	0					
ANR	5674891	PrimaryExpression	1		5674733	1					
ANR	5674892	ElseStatement	else		5674733	0					
ANR	5674893	ExpressionStatement	stopbit <<= 1	265:8:9747:9760	5674733	0	True				
ANR	5674894	AssignmentExpression	stopbit <<= 1		5674733	0		<<=			
ANR	5674895	Identifier	stopbit		5674733	0					
ANR	5674896	PrimaryExpression	1		5674733	1					
ANR	5674897	CompoundStatement		49:8:1498:1515	5674733	20					
ANR	5674898	IdentifierDeclStatement	byte stopmask = - stopbit << 1 ;	268:8:9836:9865	5674733	0	True				
ANR	5674899	IdentifierDecl	stopmask = - stopbit << 1		5674733	0					
ANR	5674900	IdentifierDeclType	byte		5674733	0					
ANR	5674901	Identifier	stopmask		5674733	1					
ANR	5674902	AssignmentExpression	stopmask = - stopbit << 1		5674733	2		=			
ANR	5674903	Identifier	stopmask		5674733	0					
ANR	5674904	ShiftExpression	- stopbit << 1		5674733	1		<<			
ANR	5674905	UnaryOperationExpression	- stopbit		5674733	0					
ANR	5674906	UnaryOperator	-		5674733	0					
ANR	5674907	Identifier	stopbit		5674733	1					
ANR	5674908	PrimaryExpression	1		5674733	1					
ANR	5674909	IdentifierDeclStatement	byte last = * stop ;	269:8:9875:9892	5674733	1	True				
ANR	5674910	IdentifierDecl	last = * stop		5674733	0					
ANR	5674911	IdentifierDeclType	byte		5674733	0					
ANR	5674912	Identifier	last		5674733	1					
ANR	5674913	AssignmentExpression	last = * stop		5674733	2		=			
ANR	5674914	Identifier	last		5674733	0					
ANR	5674915	UnaryOperationExpression	* stop		5674733	1					
ANR	5674916	UnaryOperator	*		5674733	0					
ANR	5674917	Identifier	stop		5674733	1					
ANR	5674918	IfStatement	if ( stop == psrc )		5674733	2					
ANR	5674919	Condition	stop == psrc	271:12:9907:9918	5674733	0	True				
ANR	5674920	EqualityExpression	stop == psrc		5674733	0		==			
ANR	5674921	Identifier	stop		5674733	0					
ANR	5674922	Identifier	psrc		5674733	1					
ANR	5674923	ExpressionStatement	stopmask &= sbitmask	272:12:9957:9977	5674733	1	True				
ANR	5674924	AssignmentExpression	stopmask &= sbitmask		5674733	0		&=			
ANR	5674925	Identifier	stopmask		5674733	0					
ANR	5674926	Identifier	sbitmask		5674733	1					
ANR	5674927	IfStatement	if ( last & stopbit )		5674733	3					
ANR	5674928	Condition	last & stopbit	273:12:9991:10004	5674733	0	True				
ANR	5674929	BitAndExpression	last & stopbit		5674733	0		&			
ANR	5674930	Identifier	last		5674733	0					
ANR	5674931	Identifier	stopbit		5674733	1					
ANR	5674932	CompoundStatement		53:28:1630:1630	5674733	1					
ANR	5674933	IfStatement	if ( ~last & stopmask )		5674733	0					
ANR	5674934	Condition	~last & stopmask	275:16:10094:10109	5674733	0	True				
ANR	5674935	BitAndExpression	~last & stopmask		5674733	0		&			
ANR	5674936	Identifier	~last		5674733	0					
ANR	5674937	Identifier	stopmask		5674733	1					
ANR	5674938	CompoundStatement		55:34:1735:1735	5674733	1					
ANR	5674939	ExpressionStatement	last |= stopbit - 1	276:16:10161:10180	5674733	0	True				
ANR	5674940	AssignmentExpression	last |= stopbit - 1		5674733	0		|=			
ANR	5674941	Identifier	last		5674733	0					
ANR	5674942	AdditiveExpression	stopbit - 1		5674733	1		-			
ANR	5674943	Identifier	stopbit		5674733	0					
ANR	5674944	PrimaryExpression	1		5674733	1					
ANR	5674945	ElseStatement	else		5674733	0					
ANR	5674946	CompoundStatement		57:19:1824:1824	5674733	0					
ANR	5674947	WhileStatement	while ( stop > psrc && stop [ - 1 ] == 0xff )		5674733	0					
ANR	5674948	Condition	stop > psrc && stop [ - 1 ] == 0xff	278:23:10265:10295	5674733	0	True				
ANR	5674949	AndExpression	stop > psrc && stop [ - 1 ] == 0xff		5674733	0		&&			
ANR	5674950	RelationalExpression	stop > psrc		5674733	0		>			
ANR	5674951	Identifier	stop		5674733	0					
ANR	5674952	Identifier	psrc		5674733	1					
ANR	5674953	EqualityExpression	stop [ - 1 ] == 0xff		5674733	1		==			
ANR	5674954	ArrayIndexing	stop [ - 1 ]		5674733	0					
ANR	5674955	Identifier	stop		5674733	0					
ANR	5674956	UnaryOperationExpression	- 1		5674733	1					
ANR	5674957	UnaryOperator	-		5674733	0					
ANR	5674958	PrimaryExpression	1		5674733	1					
ANR	5674959	PrimaryExpression	0xff		5674733	1					
ANR	5674960	ExpressionStatement	-- stop	279:20:10318:10324	5674733	1	True				
ANR	5674961	UnaryExpression	-- stop		5674733	0					
ANR	5674962	IncDec	--		5674733	0					
ANR	5674963	Identifier	stop		5674733	1					
ANR	5674964	IfStatement	if ( stop == psrc || ( stop == psrc + 1 && ! ( ~ * psrc & sbitmask ) ) )		5674733	1					
ANR	5674965	Condition	stop == psrc || ( stop == psrc + 1 && ! ( ~ * psrc & sbitmask ) )	280:20:10346:10423	5674733	0	True				
ANR	5674966	OrExpression	stop == psrc || ( stop == psrc + 1 && ! ( ~ * psrc & sbitmask ) )		5674733	0		||			
ANR	5674967	EqualityExpression	stop == psrc		5674733	0		==			
ANR	5674968	Identifier	stop		5674733	0					
ANR	5674969	Identifier	psrc		5674733	1					
ANR	5674970	AndExpression	stop == psrc + 1 && ! ( ~ * psrc & sbitmask )		5674733	1		&&			
ANR	5674971	EqualityExpression	stop == psrc + 1		5674733	0		==			
ANR	5674972	Identifier	stop		5674733	0					
ANR	5674973	AdditiveExpression	psrc + 1		5674733	1		+			
ANR	5674974	Identifier	psrc		5674733	0					
ANR	5674975	PrimaryExpression	1		5674733	1					
ANR	5674976	UnaryOperationExpression	! ( ~ * psrc & sbitmask )		5674733	1					
ANR	5674977	UnaryOperator	!		5674733	0					
ANR	5674978	BitAndExpression	~ * psrc & sbitmask		5674733	1		&			
ANR	5674979	UnaryOperationExpression	~ * psrc		5674733	0					
ANR	5674980	UnaryOperator	~		5674733	0					
ANR	5674981	UnaryOperationExpression	* psrc		5674733	1					
ANR	5674982	UnaryOperator	*		5674733	0					
ANR	5674983	Identifier	psrc		5674733	1					
ANR	5674984	Identifier	sbitmask		5674733	1					
ANR	5674985	CompoundStatement		62:22:2070:2070	5674733	1					
ANR	5674986	ExpressionStatement	INCS ( all1s )	284:20:10541:10552	5674733	0	True				
ANR	5674987	CallExpression	INCS ( all1s )		5674733	0					
ANR	5674988	Callee	INCS		5674733	0					
ANR	5674989	Identifier	INCS		5674733	0					
ANR	5674990	ArgumentList	all1s		5674733	1					
ANR	5674991	Argument	all1s		5674733	0					
ANR	5674992	Identifier	all1s		5674733	0					
ANR	5674993	ExpressionStatement	"fill_row ( line , line_x , raster , one )"	285:20:10574:10609	5674733	1	True				
ANR	5674994	CallExpression	"fill_row ( line , line_x , raster , one )"		5674733	0					
ANR	5674995	Callee	fill_row		5674733	0					
ANR	5674996	Identifier	fill_row		5674733	0					
ANR	5674997	ArgumentList	line		5674733	1					
ANR	5674998	Argument	line		5674733	0					
ANR	5674999	Identifier	line		5674733	0					
ANR	5675000	Argument	line_x		5674733	1					
ANR	5675001	Identifier	line_x		5674733	0					
ANR	5675002	Argument	raster		5674733	2					
ANR	5675003	Identifier	raster		5674733	0					
ANR	5675004	Argument	one		5674733	3					
ANR	5675005	Identifier	one		5674733	0					
ANR	5675006	ReturnStatement	return ;	286:20:10631:10637	5674733	2	True				
ANR	5675007	ExpressionStatement	last = * -- stop	288:16:10673:10687	5674733	2	True				
ANR	5675008	AssignmentExpression	last = * -- stop		5674733	0		=			
ANR	5675009	Identifier	last		5674733	0					
ANR	5675010	UnaryOperationExpression	* -- stop		5674733	1					
ANR	5675011	UnaryOperator	*		5674733	0					
ANR	5675012	UnaryExpression	-- stop		5674733	1					
ANR	5675013	IncDec	--		5674733	0					
ANR	5675014	Identifier	stop		5674733	1					
ANR	5675015	ExpressionStatement	stopx = byte_bit_run_length_0 [ byte_reverse_bits [ last ] ] - 1	290:12:10715:10773	5674733	1	True				
ANR	5675016	AssignmentExpression	stopx = byte_bit_run_length_0 [ byte_reverse_bits [ last ] ] - 1		5674733	0		=			
ANR	5675017	Identifier	stopx		5674733	0					
ANR	5675018	AdditiveExpression	byte_bit_run_length_0 [ byte_reverse_bits [ last ] ] - 1		5674733	1		-			
ANR	5675019	ArrayIndexing	byte_bit_run_length_0 [ byte_reverse_bits [ last ] ]		5674733	0					
ANR	5675020	Identifier	byte_bit_run_length_0		5674733	0					
ANR	5675021	ArrayIndexing	byte_reverse_bits [ last ]		5674733	1					
ANR	5675022	Identifier	byte_reverse_bits		5674733	0					
ANR	5675023	Identifier	last		5674733	1					
ANR	5675024	PrimaryExpression	1		5674733	1					
ANR	5675025	ElseStatement	else		5674733	0					
ANR	5675026	CompoundStatement		71:15:2413:2413	5674733	0					
ANR	5675027	IfStatement	if ( last & stopmask )		5674733	0					
ANR	5675028	Condition	last & stopmask	293:16:10877:10891	5674733	0	True				
ANR	5675029	BitAndExpression	last & stopmask		5674733	0		&			
ANR	5675030	Identifier	last		5674733	0					
ANR	5675031	Identifier	stopmask		5674733	1					
ANR	5675032	CompoundStatement		73:33:2517:2517	5674733	1					
ANR	5675033	ExpressionStatement	last &= - stopbit	294:16:10943:10959	5674733	0	True				
ANR	5675034	AssignmentExpression	last &= - stopbit		5674733	0		&=			
ANR	5675035	Identifier	last		5674733	0					
ANR	5675036	UnaryOperationExpression	- stopbit		5674733	1					
ANR	5675037	UnaryOperator	-		5674733	0					
ANR	5675038	Identifier	stopbit		5674733	1					
ANR	5675039	ElseStatement	else		5674733	0					
ANR	5675040	CompoundStatement		75:19:2603:2603	5674733	0					
ANR	5675041	WhileStatement	while ( stop > psrc && stop [ - 1 ] == 0 )		5674733	0					
ANR	5675042	Condition	stop > psrc && stop [ - 1 ] == 0	296:23:11044:11071	5674733	0	True				
ANR	5675043	AndExpression	stop > psrc && stop [ - 1 ] == 0		5674733	0		&&			
ANR	5675044	RelationalExpression	stop > psrc		5674733	0		>			
ANR	5675045	Identifier	stop		5674733	0					
ANR	5675046	Identifier	psrc		5674733	1					
ANR	5675047	EqualityExpression	stop [ - 1 ] == 0		5674733	1		==			
ANR	5675048	ArrayIndexing	stop [ - 1 ]		5674733	0					
ANR	5675049	Identifier	stop		5674733	0					
ANR	5675050	UnaryOperationExpression	- 1		5674733	1					
ANR	5675051	UnaryOperator	-		5674733	0					
ANR	5675052	PrimaryExpression	1		5674733	1					
ANR	5675053	PrimaryExpression	0		5674733	1					
ANR	5675054	ExpressionStatement	-- stop	297:20:11094:11100	5674733	1	True				
ANR	5675055	UnaryExpression	-- stop		5674733	0					
ANR	5675056	IncDec	--		5674733	0					
ANR	5675057	Identifier	stop		5674733	1					
ANR	5675058	IfStatement	if ( stop == psrc || ( stop == psrc + 1 && ! ( * psrc & sbitmask ) ) )		5674733	1					
ANR	5675059	Condition	stop == psrc || ( stop == psrc + 1 && ! ( * psrc & sbitmask ) )	298:20:11122:11198	5674733	0	True				
ANR	5675060	OrExpression	stop == psrc || ( stop == psrc + 1 && ! ( * psrc & sbitmask ) )		5674733	0		||			
ANR	5675061	EqualityExpression	stop == psrc		5674733	0		==			
ANR	5675062	Identifier	stop		5674733	0					
ANR	5675063	Identifier	psrc		5674733	1					
ANR	5675064	AndExpression	stop == psrc + 1 && ! ( * psrc & sbitmask )		5674733	1		&&			
ANR	5675065	EqualityExpression	stop == psrc + 1		5674733	0		==			
ANR	5675066	Identifier	stop		5674733	0					
ANR	5675067	AdditiveExpression	psrc + 1		5674733	1		+			
ANR	5675068	Identifier	psrc		5674733	0					
ANR	5675069	PrimaryExpression	1		5674733	1					
ANR	5675070	UnaryOperationExpression	! ( * psrc & sbitmask )		5674733	1					
ANR	5675071	UnaryOperator	!		5674733	0					
ANR	5675072	BitAndExpression	* psrc & sbitmask		5674733	1		&			
ANR	5675073	UnaryOperationExpression	* psrc		5674733	0					
ANR	5675074	UnaryOperator	*		5674733	0					
ANR	5675075	Identifier	psrc		5674733	1					
ANR	5675076	Identifier	sbitmask		5674733	1					
ANR	5675077	CompoundStatement		80:22:2845:2845	5674733	1					
ANR	5675078	ExpressionStatement	INCS ( all0s )	302:20:11316:11327	5674733	0	True				
ANR	5675079	CallExpression	INCS ( all0s )		5674733	0					
ANR	5675080	Callee	INCS		5674733	0					
ANR	5675081	Identifier	INCS		5674733	0					
ANR	5675082	ArgumentList	all0s		5674733	1					
ANR	5675083	Argument	all0s		5674733	0					
ANR	5675084	Identifier	all0s		5674733	0					
ANR	5675085	ExpressionStatement	"fill_row ( line , line_x , raster , zero )"	303:20:11349:11385	5674733	1	True				
ANR	5675086	CallExpression	"fill_row ( line , line_x , raster , zero )"		5674733	0					
ANR	5675087	Callee	fill_row		5674733	0					
ANR	5675088	Identifier	fill_row		5674733	0					
ANR	5675089	ArgumentList	line		5674733	1					
ANR	5675090	Argument	line		5674733	0					
ANR	5675091	Identifier	line		5674733	0					
ANR	5675092	Argument	line_x		5674733	1					
ANR	5675093	Identifier	line_x		5674733	0					
ANR	5675094	Argument	raster		5674733	2					
ANR	5675095	Identifier	raster		5674733	0					
ANR	5675096	Argument	zero		5674733	3					
ANR	5675097	Identifier	zero		5674733	0					
ANR	5675098	ReturnStatement	return ;	304:20:11407:11413	5674733	2	True				
ANR	5675099	ExpressionStatement	last = * -- stop	306:16:11449:11463	5674733	2	True				
ANR	5675100	AssignmentExpression	last = * -- stop		5674733	0		=			
ANR	5675101	Identifier	last		5674733	0					
ANR	5675102	UnaryOperationExpression	* -- stop		5674733	1					
ANR	5675103	UnaryOperator	*		5674733	0					
ANR	5675104	UnaryExpression	-- stop		5674733	1					
ANR	5675105	IncDec	--		5674733	0					
ANR	5675106	Identifier	stop		5674733	1					
ANR	5675107	ExpressionStatement	stopx = byte_bit_run_length_0 [ byte_reverse_bits [ last ^ 0xff ] ] - 1	308:12:11491:11556	5674733	1	True				
ANR	5675108	AssignmentExpression	stopx = byte_bit_run_length_0 [ byte_reverse_bits [ last ^ 0xff ] ] - 1		5674733	0		=			
ANR	5675109	Identifier	stopx		5674733	0					
ANR	5675110	AdditiveExpression	byte_bit_run_length_0 [ byte_reverse_bits [ last ^ 0xff ] ] - 1		5674733	1		-			
ANR	5675111	ArrayIndexing	byte_bit_run_length_0 [ byte_reverse_bits [ last ^ 0xff ] ]		5674733	0					
ANR	5675112	Identifier	byte_bit_run_length_0		5674733	0					
ANR	5675113	ArrayIndexing	byte_reverse_bits [ last ^ 0xff ]		5674733	1					
ANR	5675114	Identifier	byte_reverse_bits		5674733	0					
ANR	5675115	ExclusiveOrExpression	last ^ 0xff		5674733	1		^			
ANR	5675116	Identifier	last		5674733	0					
ANR	5675117	PrimaryExpression	0xff		5674733	1					
ANR	5675118	PrimaryExpression	1		5674733	1					
ANR	5675119	IfStatement	if ( stopx < 0 )		5674733	4					
ANR	5675120	Condition	stopx < 0	310:12:11580:11588	5674733	0	True				
ANR	5675121	RelationalExpression	stopx < 0		5674733	0		<			
ANR	5675122	Identifier	stopx		5674733	0					
ANR	5675123	PrimaryExpression	0		5674733	1					
ANR	5675124	ExpressionStatement	"stopx = 7 , ++ stop"	311:12:11603:11620	5674733	1	True				
ANR	5675125	Expression	"stopx = 7 , ++ stop"		5674733	0					
ANR	5675126	AssignmentExpression	stopx = 7		5674733	0		=			
ANR	5675127	Identifier	stopx		5674733	0					
ANR	5675128	PrimaryExpression	7		5674733	1					
ANR	5675129	UnaryExpression	++ stop		5674733	1					
ANR	5675130	IncDec	++		5674733	0					
ANR	5675131	Identifier	stop		5674733	1					
ANR	5675132	ExpressionStatement	stopbit = 1 << stopx	312:8:11630:11650	5674733	5	True				
ANR	5675133	AssignmentExpression	stopbit = 1 << stopx		5674733	0		=			
ANR	5675134	Identifier	stopbit		5674733	0					
ANR	5675135	ShiftExpression	1 << stopx		5674733	1		<<			
ANR	5675136	PrimaryExpression	1		5674733	0					
ANR	5675137	Identifier	stopx		5674733	1					
ANR	5675138	ExpressionStatement	"fill_row ( line , line_x , raster , zero )"	316:4:11692:11728	5674733	21	True				
ANR	5675139	CallExpression	"fill_row ( line , line_x , raster , zero )"		5674733	0					
ANR	5675140	Callee	fill_row		5674733	0					
ANR	5675141	Identifier	fill_row		5674733	0					
ANR	5675142	ArgumentList	line		5674733	1					
ANR	5675143	Argument	line		5674733	0					
ANR	5675144	Identifier	line		5674733	0					
ANR	5675145	Argument	line_x		5674733	1					
ANR	5675146	Identifier	line_x		5674733	0					
ANR	5675147	Argument	raster		5674733	2					
ANR	5675148	Identifier	raster		5674733	0					
ANR	5675149	Argument	zero		5674733	3					
ANR	5675150	Identifier	zero		5674733	0					
ANR	5675151	IfStatement	if ( x_extent < min_int + 0x100 )		5674733	22					
ANR	5675152	Condition	x_extent < min_int + 0x100	321:8:11853:11878	5674733	0	True				
ANR	5675153	RelationalExpression	x_extent < min_int + 0x100		5674733	0		<			
ANR	5675154	Identifier	x_extent		5674733	0					
ANR	5675155	AdditiveExpression	min_int + 0x100		5674733	1		+			
ANR	5675156	Identifier	min_int		5674733	0					
ANR	5675157	PrimaryExpression	0x100		5674733	1					
ANR	5675158	ExpressionStatement	x_extent += 0x100	322:6:11887:11904	5674733	1	True				
ANR	5675159	AssignmentExpression	x_extent += 0x100		5674733	0		+=			
ANR	5675160	Identifier	x_extent		5674733	0					
ANR	5675161	PrimaryExpression	0x100		5674733	1					
ANR	5675162	ExpressionStatement	xl0 = ( x_extent >= 0 ? fixed_fraction ( fixed_pre_pixround ( xcur ) ) : fixed_fraction ( fixed_pre_pixround ( xcur + x_extent ) ) - x_extent )	325:4:11938:12093	5674733	23	True				
ANR	5675163	AssignmentExpression	xl0 = ( x_extent >= 0 ? fixed_fraction ( fixed_pre_pixround ( xcur ) ) : fixed_fraction ( fixed_pre_pixround ( xcur + x_extent ) ) - x_extent )		5674733	0		=			
ANR	5675164	Identifier	xl0		5674733	0					
ANR	5675165	ConditionalExpression	x_extent >= 0 ? fixed_fraction ( fixed_pre_pixround ( xcur ) ) : fixed_fraction ( fixed_pre_pixround ( xcur + x_extent ) ) - x_extent		5674733	1					
ANR	5675166	Condition	x_extent >= 0		5674733	0					
ANR	5675167	RelationalExpression	x_extent >= 0		5674733	0		>=			
ANR	5675168	Identifier	x_extent		5674733	0					
ANR	5675169	PrimaryExpression	0		5674733	1					
ANR	5675170	CallExpression	fixed_fraction ( fixed_pre_pixround ( xcur ) )		5674733	1					
ANR	5675171	Callee	fixed_fraction		5674733	0					
ANR	5675172	Identifier	fixed_fraction		5674733	0					
ANR	5675173	ArgumentList	fixed_pre_pixround ( xcur )		5674733	1					
ANR	5675174	Argument	fixed_pre_pixround ( xcur )		5674733	0					
ANR	5675175	CallExpression	fixed_pre_pixround ( xcur )		5674733	0					
ANR	5675176	Callee	fixed_pre_pixround		5674733	0					
ANR	5675177	Identifier	fixed_pre_pixround		5674733	0					
ANR	5675178	ArgumentList	xcur		5674733	1					
ANR	5675179	Argument	xcur		5674733	0					
ANR	5675180	Identifier	xcur		5674733	0					
ANR	5675181	AdditiveExpression	fixed_fraction ( fixed_pre_pixround ( xcur + x_extent ) ) - x_extent		5674733	2		-			
ANR	5675182	CallExpression	fixed_fraction ( fixed_pre_pixround ( xcur + x_extent ) )		5674733	0					
ANR	5675183	Callee	fixed_fraction		5674733	0					
ANR	5675184	Identifier	fixed_fraction		5674733	0					
ANR	5675185	ArgumentList	fixed_pre_pixround ( xcur + x_extent )		5674733	1					
ANR	5675186	Argument	fixed_pre_pixround ( xcur + x_extent )		5674733	0					
ANR	5675187	CallExpression	fixed_pre_pixround ( xcur + x_extent )		5674733	0					
ANR	5675188	Callee	fixed_pre_pixround		5674733	0					
ANR	5675189	Identifier	fixed_pre_pixround		5674733	0					
ANR	5675190	ArgumentList	xcur + x_extent		5674733	1					
ANR	5675191	Argument	xcur + x_extent		5674733	0					
ANR	5675192	AdditiveExpression	xcur + x_extent		5674733	0		+			
ANR	5675193	Identifier	xcur		5674733	0					
ANR	5675194	Identifier	x_extent		5674733	1					
ANR	5675195	Identifier	x_extent		5674733	1					
ANR	5675196	ExpressionStatement	xl0 += int2fixed ( line_x )	329:4:12099:12123	5674733	24	True				
ANR	5675197	AssignmentExpression	xl0 += int2fixed ( line_x )		5674733	0		+=			
ANR	5675198	Identifier	xl0		5674733	0					
ANR	5675199	CallExpression	int2fixed ( line_x )		5674733	1					
ANR	5675200	Callee	int2fixed		5674733	0					
ANR	5675201	Identifier	int2fixed		5674733	0					
ANR	5675202	ArgumentList	line_x		5674733	1					
ANR	5675203	Argument	line_x		5674733	0					
ANR	5675204	Identifier	line_x		5674733	0					
ANR	5675205	IfStatement	if ( xl0 < 0 )		5674733	25					
ANR	5675206	Condition	xl0 < 0	331:8:12212:12218	5674733	0	True				
ANR	5675207	RelationalExpression	xl0 < 0		5674733	0		<			
ANR	5675208	Identifier	xl0		5674733	0					
ANR	5675209	PrimaryExpression	0		5674733	1					
ANR	5675210	ExpressionStatement	"xl0 = 0 , x_extent = 0"	332:8:12229:12250	5674733	1	True				
ANR	5675211	Expression	"xl0 = 0 , x_extent = 0"		5674733	0					
ANR	5675212	AssignmentExpression	xl0 = 0		5674733	0		=			
ANR	5675213	Identifier	xl0		5674733	0					
ANR	5675214	PrimaryExpression	0		5674733	1					
ANR	5675215	AssignmentExpression	x_extent = 0		5674733	1		=			
ANR	5675216	Identifier	x_extent		5674733	0					
ANR	5675217	PrimaryExpression	0		5674733	1					
ANR	5675218	ExpressionStatement	"dda_init ( xl , xl0 , x_extent , w )"	333:4:12256:12286	5674733	26	True				
ANR	5675219	CallExpression	"dda_init ( xl , xl0 , x_extent , w )"		5674733	0					
ANR	5675220	Callee	dda_init		5674733	0					
ANR	5675221	Identifier	dda_init		5674733	0					
ANR	5675222	ArgumentList	xl		5674733	1					
ANR	5675223	Argument	xl		5674733	0					
ANR	5675224	Identifier	xl		5674733	0					
ANR	5675225	Argument	xl0		5674733	1					
ANR	5675226	Identifier	xl0		5674733	0					
ANR	5675227	Argument	x_extent		5674733	2					
ANR	5675228	Identifier	x_extent		5674733	0					
ANR	5675229	Argument	w		5674733	3					
ANR	5675230	Identifier	w		5674733	0					
ANR	5675231	ExpressionStatement	dxx4 = xl . step	334:4:12292:12306	5674733	27	True				
ANR	5675232	AssignmentExpression	dxx4 = xl . step		5674733	0		=			
ANR	5675233	Identifier	dxx4		5674733	0					
ANR	5675234	MemberAccess	xl . step		5674733	1					
ANR	5675235	Identifier	xl		5674733	0					
ANR	5675236	Identifier	step		5674733	1					
ANR	5675237	ExpressionStatement	"dda_step_add ( dxx4 , xl . step )"	335:4:12312:12339	5674733	28	True				
ANR	5675238	CallExpression	"dda_step_add ( dxx4 , xl . step )"		5674733	0					
ANR	5675239	Callee	dda_step_add		5674733	0					
ANR	5675240	Identifier	dda_step_add		5674733	0					
ANR	5675241	ArgumentList	dxx4		5674733	1					
ANR	5675242	Argument	dxx4		5674733	0					
ANR	5675243	Identifier	dxx4		5674733	0					
ANR	5675244	Argument	xl . step		5674733	1					
ANR	5675245	MemberAccess	xl . step		5674733	0					
ANR	5675246	Identifier	xl		5674733	0					
ANR	5675247	Identifier	step		5674733	1					
ANR	5675248	ExpressionStatement	dxx8 = dxx4	340:4:12469:12480	5674733	29	True				
ANR	5675249	AssignmentExpression	dxx8 = dxx4		5674733	0		=			
ANR	5675250	Identifier	dxx8		5674733	0					
ANR	5675251	Identifier	dxx4		5674733	1					
ANR	5675252	ExpressionStatement	"dda_step_add ( dxx4 , dxx8 )"	341:4:12486:12510	5674733	30	True				
ANR	5675253	CallExpression	"dda_step_add ( dxx4 , dxx8 )"		5674733	0					
ANR	5675254	Callee	dda_step_add		5674733	0					
ANR	5675255	Identifier	dda_step_add		5674733	0					
ANR	5675256	ArgumentList	dxx4		5674733	1					
ANR	5675257	Argument	dxx4		5674733	0					
ANR	5675258	Identifier	dxx4		5674733	0					
ANR	5675259	Argument	dxx8		5674733	1					
ANR	5675260	Identifier	dxx8		5674733	0					
ANR	5675261	ExpressionStatement	dxx8 = dxx4	342:4:12516:12527	5674733	31	True				
ANR	5675262	AssignmentExpression	dxx8 = dxx4		5674733	0		=			
ANR	5675263	Identifier	dxx8		5674733	0					
ANR	5675264	Identifier	dxx4		5674733	1					
ANR	5675265	ExpressionStatement	"dda_step_add ( dxx8 , dxx4 )"	343:4:12533:12557	5674733	32	True				
ANR	5675266	CallExpression	"dda_step_add ( dxx8 , dxx4 )"		5674733	0					
ANR	5675267	Callee	dda_step_add		5674733	0					
ANR	5675268	Identifier	dda_step_add		5674733	0					
ANR	5675269	ArgumentList	dxx8		5674733	1					
ANR	5675270	Argument	dxx8		5674733	0					
ANR	5675271	Identifier	dxx8		5674733	0					
ANR	5675272	Argument	dxx4		5674733	1					
ANR	5675273	Identifier	dxx4		5674733	0					
ANR	5675274	ExpressionStatement	dxx16 = dxx8	344:4:12563:12575	5674733	33	True				
ANR	5675275	AssignmentExpression	dxx16 = dxx8		5674733	0		=			
ANR	5675276	Identifier	dxx16		5674733	0					
ANR	5675277	Identifier	dxx8		5674733	1					
ANR	5675278	ExpressionStatement	"dda_step_add ( dxx16 , dxx8 )"	345:4:12581:12606	5674733	34	True				
ANR	5675279	CallExpression	"dda_step_add ( dxx16 , dxx8 )"		5674733	0					
ANR	5675280	Callee	dda_step_add		5674733	0					
ANR	5675281	Identifier	dda_step_add		5674733	0					
ANR	5675282	ArgumentList	dxx16		5674733	1					
ANR	5675283	Argument	dxx16		5674733	0					
ANR	5675284	Identifier	dxx16		5674733	0					
ANR	5675285	Argument	dxx8		5674733	1					
ANR	5675286	Identifier	dxx8		5674733	0					
ANR	5675287	ExpressionStatement	dxx24 = dxx16	346:4:12612:12625	5674733	35	True				
ANR	5675288	AssignmentExpression	dxx24 = dxx16		5674733	0		=			
ANR	5675289	Identifier	dxx24		5674733	0					
ANR	5675290	Identifier	dxx16		5674733	1					
ANR	5675291	ExpressionStatement	"dda_step_add ( dxx24 , dxx8 )"	347:4:12631:12656	5674733	36	True				
ANR	5675292	CallExpression	"dda_step_add ( dxx24 , dxx8 )"		5674733	0					
ANR	5675293	Callee	dda_step_add		5674733	0					
ANR	5675294	Identifier	dda_step_add		5674733	0					
ANR	5675295	ArgumentList	dxx24		5674733	1					
ANR	5675296	Argument	dxx24		5674733	0					
ANR	5675297	Identifier	dxx24		5674733	0					
ANR	5675298	Argument	dxx8		5674733	1					
ANR	5675299	Identifier	dxx8		5674733	0					
ANR	5675300	ExpressionStatement	dxx32 = dxx24	348:4:12662:12675	5674733	37	True				
ANR	5675301	AssignmentExpression	dxx32 = dxx24		5674733	0		=			
ANR	5675302	Identifier	dxx32		5674733	0					
ANR	5675303	Identifier	dxx24		5674733	1					
ANR	5675304	ExpressionStatement	"dda_step_add ( dxx32 , dxx8 )"	349:4:12681:12706	5674733	38	True				
ANR	5675305	CallExpression	"dda_step_add ( dxx32 , dxx8 )"		5674733	0					
ANR	5675306	Callee	dda_step_add		5674733	0					
ANR	5675307	Identifier	dda_step_add		5674733	0					
ANR	5675308	ArgumentList	dxx32		5674733	1					
ANR	5675309	Argument	dxx32		5674733	0					
ANR	5675310	Identifier	dxx32		5674733	0					
ANR	5675311	Argument	dxx8		5674733	1					
ANR	5675312	Identifier	dxx8		5674733	0					
ANR	5675313	ForStatement	for ( data = * psrc ; ; )		5674733	39					
ANR	5675314	ForInit	data = * psrc ;	356:9:12819:12831	5674733	0	True				
ANR	5675315	AssignmentExpression	data = * psrc		5674733	0		=			
ANR	5675316	Identifier	data		5674733	0					
ANR	5675317	UnaryOperationExpression	* psrc		5674733	1					
ANR	5675318	UnaryOperator	*		5674733	0					
ANR	5675319	Identifier	psrc		5674733	1					
ANR	5675320	CompoundStatement		142:15:4620:4716	5674733	1					
ANR	5675321	IdentifierDeclStatement	"int x0 , n , bit ;"	357:8:12845:12859	5674733	0	True				
ANR	5675322	IdentifierDecl	x0		5674733	0					
ANR	5675323	IdentifierDeclType	int		5674733	0					
ANR	5675324	Identifier	x0		5674733	1					
ANR	5675325	IdentifierDecl	n		5674733	1					
ANR	5675326	IdentifierDeclType	int		5674733	0					
ANR	5675327	Identifier	n		5674733	1					
ANR	5675328	IdentifierDecl	bit		5674733	2					
ANR	5675329	IdentifierDeclType	int		5674733	0					
ANR	5675330	Identifier	bit		5674733	1					
ANR	5675331	IdentifierDeclStatement	byte * bp ;	358:8:12869:12877	5674733	1	True				
ANR	5675332	IdentifierDecl	* bp		5674733	0					
ANR	5675333	IdentifierDeclType	byte *		5674733	0					
ANR	5675334	Identifier	bp		5674733	1					
ANR	5675335	Statement	static	359:8:12887:12892	5674733	2	True				
ANR	5675336	IdentifierDeclStatement	"const byte lmasks [ 9 ] = { 0xff , 0x7f , 0x3f , 0x1f , 0xf , 7 , 3 , 1 , 0 } ;"	359:15:12894:12980	5674733	3	True				
ANR	5675337	IdentifierDecl	"lmasks [ 9 ] = { 0xff , 0x7f , 0x3f , 0x1f , 0xf , 7 , 3 , 1 , 0 }"		5674733	0					
ANR	5675338	IdentifierDeclType	const byte [ 9 ]		5674733	0					
ANR	5675339	Identifier	lmasks		5674733	1					
ANR	5675340	PrimaryExpression	9		5674733	2					
ANR	5675341	AssignmentExpression	"lmasks [ 9 ] = { 0xff , 0x7f , 0x3f , 0x1f , 0xf , 7 , 3 , 1 , 0 }"		5674733	3		=			
ANR	5675342	Identifier	lmasks		5674733	0					
ANR	5675343	InitializerList	0xff		5674733	1					
ANR	5675344	PrimaryExpression	0xff		5674733	0					
ANR	5675345	PrimaryExpression	0x7f		5674733	1					
ANR	5675346	PrimaryExpression	0x3f		5674733	2					
ANR	5675347	PrimaryExpression	0x1f		5674733	3					
ANR	5675348	PrimaryExpression	0xf		5674733	4					
ANR	5675349	PrimaryExpression	7		5674733	5					
ANR	5675350	PrimaryExpression	3		5674733	6					
ANR	5675351	PrimaryExpression	1		5674733	7					
ANR	5675352	PrimaryExpression	0		5674733	8					
ANR	5675353	Statement	static	362:8:12990:12995	5674733	4	True				
ANR	5675354	IdentifierDeclStatement	"const byte rmasks [ 9 ] = { 0 , 0x80 , 0xc0 , 0xe0 , 0xf0 , 0xf8 , 0xfc , 0xfe , 0xff } ;"	362:15:12997:13093	5674733	5	True				
ANR	5675355	IdentifierDecl	"rmasks [ 9 ] = { 0 , 0x80 , 0xc0 , 0xe0 , 0xf0 , 0xf8 , 0xfc , 0xfe , 0xff }"		5674733	0					
ANR	5675356	IdentifierDeclType	const byte [ 9 ]		5674733	0					
ANR	5675357	Identifier	rmasks		5674733	1					
ANR	5675358	PrimaryExpression	9		5674733	2					
ANR	5675359	AssignmentExpression	"rmasks [ 9 ] = { 0 , 0x80 , 0xc0 , 0xe0 , 0xf0 , 0xf8 , 0xfc , 0xfe , 0xff }"		5674733	3		=			
ANR	5675360	Identifier	rmasks		5674733	0					
ANR	5675361	InitializerList	0		5674733	1					
ANR	5675362	PrimaryExpression	0		5674733	0					
ANR	5675363	PrimaryExpression	0x80		5674733	1					
ANR	5675364	PrimaryExpression	0xc0		5674733	2					
ANR	5675365	PrimaryExpression	0xe0		5674733	3					
ANR	5675366	PrimaryExpression	0xf0		5674733	4					
ANR	5675367	PrimaryExpression	0xf8		5674733	5					
ANR	5675368	PrimaryExpression	0xfc		5674733	6					
ANR	5675369	PrimaryExpression	0xfe		5674733	7					
ANR	5675370	PrimaryExpression	0xff		5674733	8					
ANR	5675371	ExpressionStatement	INCS ( runs )	366:8:13104:13114	5674733	6	True				
ANR	5675372	CallExpression	INCS ( runs )		5674733	0					
ANR	5675373	Callee	INCS		5674733	0					
ANR	5675374	Identifier	INCS		5674733	0					
ANR	5675375	ArgumentList	runs		5674733	1					
ANR	5675376	Argument	runs		5674733	0					
ANR	5675377	Identifier	runs		5674733	0					
ANR	5675378	ExpressionStatement	data ^= 0xff	369:8:13160:13172	5674733	7	True				
ANR	5675379	AssignmentExpression	data ^= 0xff		5674733	0		^=			
ANR	5675380	Identifier	data		5674733	0					
ANR	5675381	PrimaryExpression	0xff		5674733	1					
ANR	5675382	WhileStatement	while ( data & sbit )		5674733	8					
ANR	5675383	Condition	data & sbit	370:15:13203:13213	5674733	0	True				
ANR	5675384	BitAndExpression	data & sbit		5674733	0		&			
ANR	5675385	Identifier	data		5674733	0					
ANR	5675386	Identifier	sbit		5674733	1					
ANR	5675387	CompoundStatement		150:28:4839:4839	5674733	1					
ANR	5675388	ExpressionStatement	dda_next ( xl )	371:12:13230:13242	5674733	0	True				
ANR	5675389	CallExpression	dda_next ( xl )		5674733	0					
ANR	5675390	Callee	dda_next		5674733	0					
ANR	5675391	Identifier	dda_next		5674733	0					
ANR	5675392	ArgumentList	xl		5674733	1					
ANR	5675393	Argument	xl		5674733	0					
ANR	5675394	Identifier	xl		5674733	0					
ANR	5675395	ExpressionStatement	sbit >>= 1	372:12:13256:13266	5674733	1	True				
ANR	5675396	AssignmentExpression	sbit >>= 1		5674733	0		>>=			
ANR	5675397	Identifier	sbit		5674733	0					
ANR	5675398	PrimaryExpression	1		5674733	1					
ANR	5675399	ExpressionStatement	INCS ( lbit0 )	373:12:13280:13291	5674733	2	True				
ANR	5675400	CallExpression	INCS ( lbit0 )		5674733	0					
ANR	5675401	Callee	INCS		5674733	0					
ANR	5675402	Identifier	INCS		5674733	0					
ANR	5675403	ArgumentList	lbit0		5674733	1					
ANR	5675404	Argument	lbit0		5674733	0					
ANR	5675405	Identifier	lbit0		5674733	0					
ANR	5675406	IfStatement	if ( ! sbit )		5674733	9					
ANR	5675407	Condition	! sbit	375:12:13315:13319	5674733	0	True				
ANR	5675408	UnaryOperationExpression	! sbit		5674733	0					
ANR	5675409	UnaryOperator	!		5674733	0					
ANR	5675410	Identifier	sbit		5674733	1					
ANR	5675411	CompoundStatement		155:19:4945:4945	5674733	1					
ANR	5675412	Label	sw :	376:0:13357:13359	5674733	0	True				
ANR	5675413	Identifier	sw		5674733	0					
ANR	5675414	IfStatement	if ( ( data = psrc [ 1 ] ) != 0 )		5674733	1					
ANR	5675415	Condition	( data = psrc [ 1 ] ) != 0	376:12:13369:13389	5674733	0	True				
ANR	5675416	EqualityExpression	( data = psrc [ 1 ] ) != 0		5674733	0		!=			
ANR	5675417	AssignmentExpression	data = psrc [ 1 ]		5674733	0		=			
ANR	5675418	Identifier	data		5674733	0					
ANR	5675419	ArrayIndexing	psrc [ 1 ]		5674733	1					
ANR	5675420	Identifier	psrc		5674733	0					
ANR	5675421	PrimaryExpression	1		5674733	1					
ANR	5675422	PrimaryExpression	0		5674733	1					
ANR	5675423	CompoundStatement		156:35:5015:5015	5674733	1					
ANR	5675424	ExpressionStatement	psrc ++	377:16:13410:13416	5674733	0	True				
ANR	5675425	PostIncDecOperationExpression	psrc ++		5674733	0					
ANR	5675426	Identifier	psrc		5674733	0					
ANR	5675427	IncDec	++		5674733	1					
ANR	5675428	ExpressionStatement	INCS ( byte00 )	378:16:13434:13446	5674733	1	True				
ANR	5675429	CallExpression	INCS ( byte00 )		5674733	0					
ANR	5675430	Callee	INCS		5674733	0					
ANR	5675431	Identifier	INCS		5674733	0					
ANR	5675432	ArgumentList	byte00		5674733	1					
ANR	5675433	Argument	byte00		5674733	0					
ANR	5675434	Identifier	byte00		5674733	0					
ANR	5675435	ElseStatement	else		5674733	0					
ANR	5675436	IfStatement	if ( ( data = psrc [ 2 ] ) != 0 )		5674733	0					
ANR	5675437	Condition	( data = psrc [ 2 ] ) != 0	379:23:13471:13491	5674733	0	True				
ANR	5675438	EqualityExpression	( data = psrc [ 2 ] ) != 0		5674733	0		!=			
ANR	5675439	AssignmentExpression	data = psrc [ 2 ]		5674733	0		=			
ANR	5675440	Identifier	data		5674733	0					
ANR	5675441	ArrayIndexing	psrc [ 2 ]		5674733	1					
ANR	5675442	Identifier	psrc		5674733	0					
ANR	5675443	PrimaryExpression	2		5674733	1					
ANR	5675444	PrimaryExpression	0		5674733	1					
ANR	5675445	CompoundStatement		159:46:5117:5117	5674733	1					
ANR	5675446	ExpressionStatement	"dda_state_next ( xl . state , dxx8 )"	380:16:13512:13542	5674733	0	True				
ANR	5675447	CallExpression	"dda_state_next ( xl . state , dxx8 )"		5674733	0					
ANR	5675448	Callee	dda_state_next		5674733	0					
ANR	5675449	Identifier	dda_state_next		5674733	0					
ANR	5675450	ArgumentList	xl . state		5674733	1					
ANR	5675451	Argument	xl . state		5674733	0					
ANR	5675452	MemberAccess	xl . state		5674733	0					
ANR	5675453	Identifier	xl		5674733	0					
ANR	5675454	Identifier	state		5674733	1					
ANR	5675455	Argument	dxx8		5674733	1					
ANR	5675456	Identifier	dxx8		5674733	0					
ANR	5675457	ExpressionStatement	psrc += 2	381:16:13560:13569	5674733	1	True				
ANR	5675458	AssignmentExpression	psrc += 2		5674733	0		+=			
ANR	5675459	Identifier	psrc		5674733	0					
ANR	5675460	PrimaryExpression	2		5674733	1					
ANR	5675461	ExpressionStatement	INCS ( byte01 )	382:16:13587:13599	5674733	2	True				
ANR	5675462	CallExpression	INCS ( byte01 )		5674733	0					
ANR	5675463	Callee	INCS		5674733	0					
ANR	5675464	Identifier	INCS		5674733	0					
ANR	5675465	ArgumentList	byte01		5674733	1					
ANR	5675466	Argument	byte01		5674733	0					
ANR	5675467	Identifier	byte01		5674733	0					
ANR	5675468	ElseStatement	else		5674733	0					
ANR	5675469	IfStatement	if ( ( data = psrc [ 3 ] ) != 0 )		5674733	0					
ANR	5675470	Condition	( data = psrc [ 3 ] ) != 0	383:23:13624:13644	5674733	0	True				
ANR	5675471	EqualityExpression	( data = psrc [ 3 ] ) != 0		5674733	0		!=			
ANR	5675472	AssignmentExpression	data = psrc [ 3 ]		5674733	0		=			
ANR	5675473	Identifier	data		5674733	0					
ANR	5675474	ArrayIndexing	psrc [ 3 ]		5674733	1					
ANR	5675475	Identifier	psrc		5674733	0					
ANR	5675476	PrimaryExpression	3		5674733	1					
ANR	5675477	PrimaryExpression	0		5674733	1					
ANR	5675478	CompoundStatement		163:46:5270:5270	5674733	1					
ANR	5675479	ExpressionStatement	"dda_state_next ( xl . state , dxx16 )"	384:16:13665:13696	5674733	0	True				
ANR	5675480	CallExpression	"dda_state_next ( xl . state , dxx16 )"		5674733	0					
ANR	5675481	Callee	dda_state_next		5674733	0					
ANR	5675482	Identifier	dda_state_next		5674733	0					
ANR	5675483	ArgumentList	xl . state		5674733	1					
ANR	5675484	Argument	xl . state		5674733	0					
ANR	5675485	MemberAccess	xl . state		5674733	0					
ANR	5675486	Identifier	xl		5674733	0					
ANR	5675487	Identifier	state		5674733	1					
ANR	5675488	Argument	dxx16		5674733	1					
ANR	5675489	Identifier	dxx16		5674733	0					
ANR	5675490	ExpressionStatement	psrc += 3	385:16:13714:13723	5674733	1	True				
ANR	5675491	AssignmentExpression	psrc += 3		5674733	0		+=			
ANR	5675492	Identifier	psrc		5674733	0					
ANR	5675493	PrimaryExpression	3		5674733	1					
ANR	5675494	ExpressionStatement	INCS ( byte02 )	386:16:13741:13753	5674733	2	True				
ANR	5675495	CallExpression	INCS ( byte02 )		5674733	0					
ANR	5675496	Callee	INCS		5674733	0					
ANR	5675497	Identifier	INCS		5674733	0					
ANR	5675498	ArgumentList	byte02		5674733	1					
ANR	5675499	Argument	byte02		5674733	0					
ANR	5675500	Identifier	byte02		5674733	0					
ANR	5675501	ElseStatement	else		5674733	0					
ANR	5675502	IfStatement	if ( ( data = psrc [ 4 ] ) != 0 )		5674733	0					
ANR	5675503	Condition	( data = psrc [ 4 ] ) != 0	387:23:13778:13798	5674733	0	True				
ANR	5675504	EqualityExpression	( data = psrc [ 4 ] ) != 0		5674733	0		!=			
ANR	5675505	AssignmentExpression	data = psrc [ 4 ]		5674733	0		=			
ANR	5675506	Identifier	data		5674733	0					
ANR	5675507	ArrayIndexing	psrc [ 4 ]		5674733	1					
ANR	5675508	Identifier	psrc		5674733	0					
ANR	5675509	PrimaryExpression	4		5674733	1					
ANR	5675510	PrimaryExpression	0		5674733	1					
ANR	5675511	CompoundStatement		167:46:5424:5424	5674733	1					
ANR	5675512	ExpressionStatement	"dda_state_next ( xl . state , dxx24 )"	388:16:13819:13850	5674733	0	True				
ANR	5675513	CallExpression	"dda_state_next ( xl . state , dxx24 )"		5674733	0					
ANR	5675514	Callee	dda_state_next		5674733	0					
ANR	5675515	Identifier	dda_state_next		5674733	0					
ANR	5675516	ArgumentList	xl . state		5674733	1					
ANR	5675517	Argument	xl . state		5674733	0					
ANR	5675518	MemberAccess	xl . state		5674733	0					
ANR	5675519	Identifier	xl		5674733	0					
ANR	5675520	Identifier	state		5674733	1					
ANR	5675521	Argument	dxx24		5674733	1					
ANR	5675522	Identifier	dxx24		5674733	0					
ANR	5675523	ExpressionStatement	psrc += 4	389:16:13868:13877	5674733	1	True				
ANR	5675524	AssignmentExpression	psrc += 4		5674733	0		+=			
ANR	5675525	Identifier	psrc		5674733	0					
ANR	5675526	PrimaryExpression	4		5674733	1					
ANR	5675527	ExpressionStatement	INCS ( byte03 )	390:16:13895:13907	5674733	2	True				
ANR	5675528	CallExpression	INCS ( byte03 )		5674733	0					
ANR	5675529	Callee	INCS		5674733	0					
ANR	5675530	Identifier	INCS		5674733	0					
ANR	5675531	ArgumentList	byte03		5674733	1					
ANR	5675532	Argument	byte03		5674733	0					
ANR	5675533	Identifier	byte03		5674733	0					
ANR	5675534	ElseStatement	else		5674733	0					
ANR	5675535	CompoundStatement		171:19:5551:5551	5674733	0					
ANR	5675536	ExpressionStatement	"dda_state_next ( xl . state , dxx32 )"	392:16:13946:13977	5674733	0	True				
ANR	5675537	CallExpression	"dda_state_next ( xl . state , dxx32 )"		5674733	0					
ANR	5675538	Callee	dda_state_next		5674733	0					
ANR	5675539	Identifier	dda_state_next		5674733	0					
ANR	5675540	ArgumentList	xl . state		5674733	1					
ANR	5675541	Argument	xl . state		5674733	0					
ANR	5675542	MemberAccess	xl . state		5674733	0					
ANR	5675543	Identifier	xl		5674733	0					
ANR	5675544	Identifier	state		5674733	1					
ANR	5675545	Argument	dxx32		5674733	1					
ANR	5675546	Identifier	dxx32		5674733	0					
ANR	5675547	ExpressionStatement	psrc += 4	393:16:13995:14004	5674733	1	True				
ANR	5675548	AssignmentExpression	psrc += 4		5674733	0		+=			
ANR	5675549	Identifier	psrc		5674733	0					
ANR	5675550	PrimaryExpression	4		5674733	1					
ANR	5675551	ExpressionStatement	INCS ( byte04 )	394:16:14022:14034	5674733	2	True				
ANR	5675552	CallExpression	INCS ( byte04 )		5674733	0					
ANR	5675553	Callee	INCS		5674733	0					
ANR	5675554	Identifier	INCS		5674733	0					
ANR	5675555	ArgumentList	byte04		5674733	1					
ANR	5675556	Argument	byte04		5674733	0					
ANR	5675557	Identifier	byte04		5674733	0					
ANR	5675558	GotoStatement	goto sw ;	395:16:14052:14059	5674733	3	True				
ANR	5675559	Identifier	sw		5674733	0					
ANR	5675560	IfStatement	if ( data > 0xf )		5674733	2					
ANR	5675561	Condition	data > 0xf	397:16:14091:14100	5674733	0	True				
ANR	5675562	RelationalExpression	data > 0xf		5674733	0		>			
ANR	5675563	Identifier	data		5674733	0					
ANR	5675564	PrimaryExpression	0xf		5674733	1					
ANR	5675565	ExpressionStatement	sbit = 0x80	398:16:14119:14130	5674733	1	True				
ANR	5675566	AssignmentExpression	sbit = 0x80		5674733	0		=			
ANR	5675567	Identifier	sbit		5674733	0					
ANR	5675568	PrimaryExpression	0x80		5674733	1					
ANR	5675569	ElseStatement	else		5674733	0					
ANR	5675570	CompoundStatement		179:17:5772:5772	5674733	0					
ANR	5675571	ExpressionStatement	sbit = 0x08	400:16:14167:14178	5674733	0	True				
ANR	5675572	AssignmentExpression	sbit = 0x08		5674733	0		=			
ANR	5675573	Identifier	sbit		5674733	0					
ANR	5675574	PrimaryExpression	0x08		5674733	1					
ANR	5675575	ExpressionStatement	"dda_state_next ( xl . state , dxx4 )"	401:16:14196:14226	5674733	1	True				
ANR	5675576	CallExpression	"dda_state_next ( xl . state , dxx4 )"		5674733	0					
ANR	5675577	Callee	dda_state_next		5674733	0					
ANR	5675578	Identifier	dda_state_next		5674733	0					
ANR	5675579	ArgumentList	xl . state		5674733	1					
ANR	5675580	Argument	xl . state		5674733	0					
ANR	5675581	MemberAccess	xl . state		5674733	0					
ANR	5675582	Identifier	xl		5674733	0					
ANR	5675583	Identifier	state		5674733	1					
ANR	5675584	Argument	dxx4		5674733	1					
ANR	5675585	Identifier	dxx4		5674733	0					
ANR	5675586	ExpressionStatement	data ^= 0xff	403:12:14254:14266	5674733	3	True				
ANR	5675587	AssignmentExpression	data ^= 0xff		5674733	0		^=			
ANR	5675588	Identifier	data		5674733	0					
ANR	5675589	PrimaryExpression	0xff		5674733	1					
ANR	5675590	WhileStatement	while ( data & sbit )		5674733	4					
ANR	5675591	Condition	data & sbit	404:19:14300:14310	5674733	0	True				
ANR	5675592	BitAndExpression	data & sbit		5674733	0		&			
ANR	5675593	Identifier	data		5674733	0					
ANR	5675594	Identifier	sbit		5674733	1					
ANR	5675595	CompoundStatement		184:32:5936:5936	5674733	1					
ANR	5675596	ExpressionStatement	dda_next ( xl )	405:16:14331:14343	5674733	0	True				
ANR	5675597	CallExpression	dda_next ( xl )		5674733	0					
ANR	5675598	Callee	dda_next		5674733	0					
ANR	5675599	Identifier	dda_next		5674733	0					
ANR	5675600	ArgumentList	xl		5674733	1					
ANR	5675601	Argument	xl		5674733	0					
ANR	5675602	Identifier	xl		5674733	0					
ANR	5675603	ExpressionStatement	sbit >>= 1	406:16:14361:14371	5674733	1	True				
ANR	5675604	AssignmentExpression	sbit >>= 1		5674733	0		>>=			
ANR	5675605	Identifier	sbit		5674733	0					
ANR	5675606	PrimaryExpression	1		5674733	1					
ANR	5675607	ExpressionStatement	INCS ( rbit0 )	407:16:14389:14400	5674733	2	True				
ANR	5675608	CallExpression	INCS ( rbit0 )		5674733	0					
ANR	5675609	Callee	INCS		5674733	0					
ANR	5675610	Identifier	INCS		5674733	0					
ANR	5675611	ArgumentList	rbit0		5674733	1					
ANR	5675612	Argument	rbit0		5674733	0					
ANR	5675613	Identifier	rbit0		5674733	0					
ANR	5675614	ExpressionStatement	x0 = dda_current_fixed2int ( xl )	410:8:14434:14464	5674733	10	True				
ANR	5675615	AssignmentExpression	x0 = dda_current_fixed2int ( xl )		5674733	0		=			
ANR	5675616	Identifier	x0		5674733	0					
ANR	5675617	CallExpression	dda_current_fixed2int ( xl )		5674733	1					
ANR	5675618	Callee	dda_current_fixed2int		5674733	0					
ANR	5675619	Identifier	dda_current_fixed2int		5674733	0					
ANR	5675620	ArgumentList	xl		5674733	1					
ANR	5675621	Argument	xl		5674733	0					
ANR	5675622	Identifier	xl		5674733	0					
ANR	5675623	IfStatement	if ( psrc >= stop && sbit == stopbit )		5674733	11					
ANR	5675624	Condition	psrc >= stop && sbit == stopbit	411:12:14478:14508	5674733	0	True				
ANR	5675625	AndExpression	psrc >= stop && sbit == stopbit		5674733	0		&&			
ANR	5675626	RelationalExpression	psrc >= stop		5674733	0		>=			
ANR	5675627	Identifier	psrc		5674733	0					
ANR	5675628	Identifier	stop		5674733	1					
ANR	5675629	EqualityExpression	sbit == stopbit		5674733	1		==			
ANR	5675630	Identifier	sbit		5674733	0					
ANR	5675631	Identifier	stopbit		5674733	1					
ANR	5675632	CompoundStatement		191:45:6134:6134	5674733	1					
ANR	5675633	ExpressionStatement	n = fixed2int ( ( int64_t ) xl0 + ( int64_t ) x_extent ) - x0	417:12:14703:14755	5674733	0	True				
ANR	5675634	AssignmentExpression	n = fixed2int ( ( int64_t ) xl0 + ( int64_t ) x_extent ) - x0		5674733	0		=			
ANR	5675635	Identifier	n		5674733	0					
ANR	5675636	AdditiveExpression	fixed2int ( ( int64_t ) xl0 + ( int64_t ) x_extent ) - x0		5674733	1		-			
ANR	5675637	CallExpression	fixed2int ( ( int64_t ) xl0 + ( int64_t ) x_extent )		5674733	0					
ANR	5675638	Callee	fixed2int		5674733	0					
ANR	5675639	Identifier	fixed2int		5674733	0					
ANR	5675640	ArgumentList	( int64_t ) xl0 + ( int64_t ) x_extent		5674733	1					
ANR	5675641	Argument	( int64_t ) xl0 + ( int64_t ) x_extent		5674733	0					
ANR	5675642	AdditiveExpression	( int64_t ) xl0 + ( int64_t ) x_extent		5674733	0		+			
ANR	5675643	CastExpression	( int64_t ) xl0		5674733	0					
ANR	5675644	CastTarget	int64_t		5674733	0					
ANR	5675645	Identifier	xl0		5674733	1					
ANR	5675646	CastExpression	( int64_t ) x_extent		5674733	1					
ANR	5675647	CastTarget	int64_t		5674733	0					
ANR	5675648	Identifier	x_extent		5674733	1					
ANR	5675649	Identifier	x0		5674733	1					
ANR	5675650	ElseStatement	else		5674733	0					
ANR	5675651	CompoundStatement		198:15:6395:6395	5674733	0					
ANR	5675652	ExpressionStatement	data ^= 0xff	420:12:14865:14877	5674733	0	True				
ANR	5675653	AssignmentExpression	data ^= 0xff		5674733	0		^=			
ANR	5675654	Identifier	data		5674733	0					
ANR	5675655	PrimaryExpression	0xff		5674733	1					
ANR	5675656	DoStatement	do		5674733	1					
ANR	5675657	CompoundStatement		201:15:6533:6533	5674733	0					
ANR	5675658	ExpressionStatement	dda_next ( xl )	422:16:14928:14940	5674733	0	True				
ANR	5675659	CallExpression	dda_next ( xl )		5674733	0					
ANR	5675660	Callee	dda_next		5674733	0					
ANR	5675661	Identifier	dda_next		5674733	0					
ANR	5675662	ArgumentList	xl		5674733	1					
ANR	5675663	Argument	xl		5674733	0					
ANR	5675664	Identifier	xl		5674733	0					
ANR	5675665	ExpressionStatement	sbit >>= 1	423:16:14958:14968	5674733	1	True				
ANR	5675666	AssignmentExpression	sbit >>= 1		5674733	0		>>=			
ANR	5675667	Identifier	sbit		5674733	0					
ANR	5675668	PrimaryExpression	1		5674733	1					
ANR	5675669	ExpressionStatement	INCS ( lbit1 )	424:16:14986:14997	5674733	2	True				
ANR	5675670	CallExpression	INCS ( lbit1 )		5674733	0					
ANR	5675671	Callee	INCS		5674733	0					
ANR	5675672	Identifier	INCS		5674733	0					
ANR	5675673	ArgumentList	lbit1		5674733	1					
ANR	5675674	Argument	lbit1		5674733	0					
ANR	5675675	Identifier	lbit1		5674733	0					
ANR	5675676	Condition	data & sbit	426:19:15032:15042	5674733	1	True				
ANR	5675677	BitAndExpression	data & sbit		5674733	0		&			
ANR	5675678	Identifier	data		5674733	0					
ANR	5675679	Identifier	sbit		5674733	1					
ANR	5675680	IfStatement	if ( ! sbit )		5674733	2					
ANR	5675681	Condition	! sbit	427:16:15062:15066	5674733	0	True				
ANR	5675682	UnaryOperationExpression	! sbit		5674733	0					
ANR	5675683	UnaryOperator	!		5674733	0					
ANR	5675684	Identifier	sbit		5674733	1					
ANR	5675685	CompoundStatement		207:23:6692:6692	5674733	1					
ANR	5675686	WhileStatement	while ( ( data = * ++ psrc ) == 0xff )		5674733	0					
ANR	5675687	Condition	( data = * ++ psrc ) == 0xff	428:23:15126:15149	5674733	0	True				
ANR	5675688	EqualityExpression	( data = * ++ psrc ) == 0xff		5674733	0		==			
ANR	5675689	AssignmentExpression	data = * ++ psrc		5674733	0		=			
ANR	5675690	Identifier	data		5674733	0					
ANR	5675691	UnaryOperationExpression	* ++ psrc		5674733	1					
ANR	5675692	UnaryOperator	*		5674733	0					
ANR	5675693	UnaryExpression	++ psrc		5674733	1					
ANR	5675694	IncDec	++		5674733	0					
ANR	5675695	Identifier	psrc		5674733	1					
ANR	5675696	PrimaryExpression	0xff		5674733	1					
ANR	5675697	CompoundStatement		208:49:6775:6775	5674733	1					
ANR	5675698	ExpressionStatement	"dda_state_next ( xl . state , dxx8 )"	429:20:15174:15204	5674733	0	True				
ANR	5675699	CallExpression	"dda_state_next ( xl . state , dxx8 )"		5674733	0					
ANR	5675700	Callee	dda_state_next		5674733	0					
ANR	5675701	Identifier	dda_state_next		5674733	0					
ANR	5675702	ArgumentList	xl . state		5674733	1					
ANR	5675703	Argument	xl . state		5674733	0					
ANR	5675704	MemberAccess	xl . state		5674733	0					
ANR	5675705	Identifier	xl		5674733	0					
ANR	5675706	Identifier	state		5674733	1					
ANR	5675707	Argument	dxx8		5674733	1					
ANR	5675708	Identifier	dxx8		5674733	0					
ANR	5675709	ExpressionStatement	INCS ( byte1 )	430:20:15226:15237	5674733	1	True				
ANR	5675710	CallExpression	INCS ( byte1 )		5674733	0					
ANR	5675711	Callee	INCS		5674733	0					
ANR	5675712	Identifier	INCS		5674733	0					
ANR	5675713	ArgumentList	byte1		5674733	1					
ANR	5675714	Argument	byte1		5674733	0					
ANR	5675715	Identifier	byte1		5674733	0					
ANR	5675716	IfStatement	if ( data < 0xf0 )		5674733	1					
ANR	5675717	Condition	data < 0xf0	432:20:15277:15287	5674733	0	True				
ANR	5675718	RelationalExpression	data < 0xf0		5674733	0		<			
ANR	5675719	Identifier	data		5674733	0					
ANR	5675720	PrimaryExpression	0xf0		5674733	1					
ANR	5675721	ExpressionStatement	sbit = 0x80	433:20:15310:15321	5674733	1	True				
ANR	5675722	AssignmentExpression	sbit = 0x80		5674733	0		=			
ANR	5675723	Identifier	sbit		5674733	0					
ANR	5675724	PrimaryExpression	0x80		5674733	1					
ANR	5675725	ElseStatement	else		5674733	0					
ANR	5675726	CompoundStatement		214:21:6967:6967	5674733	0					
ANR	5675727	ExpressionStatement	sbit = 0x08	435:20:15366:15377	5674733	0	True				
ANR	5675728	AssignmentExpression	sbit = 0x08		5674733	0		=			
ANR	5675729	Identifier	sbit		5674733	0					
ANR	5675730	PrimaryExpression	0x08		5674733	1					
ANR	5675731	ExpressionStatement	"dda_state_next ( xl . state , dxx4 )"	436:20:15399:15429	5674733	1	True				
ANR	5675732	CallExpression	"dda_state_next ( xl . state , dxx4 )"		5674733	0					
ANR	5675733	Callee	dda_state_next		5674733	0					
ANR	5675734	Identifier	dda_state_next		5674733	0					
ANR	5675735	ArgumentList	xl . state		5674733	1					
ANR	5675736	Argument	xl . state		5674733	0					
ANR	5675737	MemberAccess	xl . state		5674733	0					
ANR	5675738	Identifier	xl		5674733	0					
ANR	5675739	Identifier	state		5674733	1					
ANR	5675740	Argument	dxx4		5674733	1					
ANR	5675741	Identifier	dxx4		5674733	0					
ANR	5675742	WhileStatement	while ( data & sbit )		5674733	2					
ANR	5675743	Condition	data & sbit	438:23:15472:15482	5674733	0	True				
ANR	5675744	BitAndExpression	data & sbit		5674733	0		&			
ANR	5675745	Identifier	data		5674733	0					
ANR	5675746	Identifier	sbit		5674733	1					
ANR	5675747	CompoundStatement		218:36:7108:7108	5674733	1					
ANR	5675748	ExpressionStatement	dda_next ( xl )	439:20:15507:15519	5674733	0	True				
ANR	5675749	CallExpression	dda_next ( xl )		5674733	0					
ANR	5675750	Callee	dda_next		5674733	0					
ANR	5675751	Identifier	dda_next		5674733	0					
ANR	5675752	ArgumentList	xl		5674733	1					
ANR	5675753	Argument	xl		5674733	0					
ANR	5675754	Identifier	xl		5674733	0					
ANR	5675755	ExpressionStatement	sbit >>= 1	440:20:15541:15551	5674733	1	True				
ANR	5675756	AssignmentExpression	sbit >>= 1		5674733	0		>>=			
ANR	5675757	Identifier	sbit		5674733	0					
ANR	5675758	PrimaryExpression	1		5674733	1					
ANR	5675759	ExpressionStatement	INCS ( rbit1 )	441:20:15573:15584	5674733	2	True				
ANR	5675760	CallExpression	INCS ( rbit1 )		5674733	0					
ANR	5675761	Callee	INCS		5674733	0					
ANR	5675762	Identifier	INCS		5674733	0					
ANR	5675763	ArgumentList	rbit1		5674733	1					
ANR	5675764	Argument	rbit1		5674733	0					
ANR	5675765	Identifier	rbit1		5674733	0					
ANR	5675766	ExpressionStatement	n = dda_current_fixed2int ( xl ) - x0	444:12:15630:15664	5674733	3	True				
ANR	5675767	AssignmentExpression	n = dda_current_fixed2int ( xl ) - x0		5674733	0		=			
ANR	5675768	Identifier	n		5674733	0					
ANR	5675769	AdditiveExpression	dda_current_fixed2int ( xl ) - x0		5674733	1		-			
ANR	5675770	CallExpression	dda_current_fixed2int ( xl )		5674733	0					
ANR	5675771	Callee	dda_current_fixed2int		5674733	0					
ANR	5675772	Identifier	dda_current_fixed2int		5674733	0					
ANR	5675773	ArgumentList	xl		5674733	1					
ANR	5675774	Argument	xl		5674733	0					
ANR	5675775	Identifier	xl		5674733	0					
ANR	5675776	Identifier	x0		5674733	1					
ANR	5675777	IfStatement	if ( n < 0 )		5674733	12					
ANR	5675778	Condition	n < 0	448:12:15734:15738	5674733	0	True				
ANR	5675779	RelationalExpression	n < 0		5674733	0		<			
ANR	5675780	Identifier	n		5674733	0					
ANR	5675781	PrimaryExpression	0		5674733	1					
ANR	5675782	ExpressionStatement	"x0 += n , n = - n"	449:12:15753:15768	5674733	1	True				
ANR	5675783	Expression	"x0 += n , n = - n"		5674733	0					
ANR	5675784	AssignmentExpression	x0 += n		5674733	0		+=			
ANR	5675785	Identifier	x0		5674733	0					
ANR	5675786	Identifier	n		5674733	1					
ANR	5675787	AssignmentExpression	n = - n		5674733	1		=			
ANR	5675788	Identifier	n		5674733	0					
ANR	5675789	UnaryOperationExpression	- n		5674733	1					
ANR	5675790	UnaryOperator	-		5674733	0					
ANR	5675791	Identifier	n		5674733	1					
ANR	5675792	ExpressionStatement	bp = line + ( x0 >> 3 )	450:8:15778:15799	5674733	13	True				
ANR	5675793	AssignmentExpression	bp = line + ( x0 >> 3 )		5674733	0		=			
ANR	5675794	Identifier	bp		5674733	0					
ANR	5675795	AdditiveExpression	line + ( x0 >> 3 )		5674733	1		+			
ANR	5675796	Identifier	line		5674733	0					
ANR	5675797	ShiftExpression	x0 >> 3		5674733	1		>>			
ANR	5675798	Identifier	x0		5674733	0					
ANR	5675799	PrimaryExpression	3		5674733	1					
ANR	5675800	ExpressionStatement	bit = x0 & 7	451:8:15809:15821	5674733	14	True				
ANR	5675801	AssignmentExpression	bit = x0 & 7		5674733	0		=			
ANR	5675802	Identifier	bit		5674733	0					
ANR	5675803	BitAndExpression	x0 & 7		5674733	1		&			
ANR	5675804	Identifier	x0		5674733	0					
ANR	5675805	PrimaryExpression	7		5674733	1					
ANR	5675806	IfStatement	if ( ( n += bit ) <= 8 )		5674733	15					
ANR	5675807	Condition	( n += bit ) <= 8	452:12:15835:15849	5674733	0	True				
ANR	5675808	RelationalExpression	( n += bit ) <= 8		5674733	0		<=			
ANR	5675809	AssignmentExpression	n += bit		5674733	0		+=			
ANR	5675810	Identifier	n		5674733	0					
ANR	5675811	Identifier	bit		5674733	1					
ANR	5675812	PrimaryExpression	8		5674733	1					
ANR	5675813	CompoundStatement		232:29:7475:7475	5674733	1					
ANR	5675814	ExpressionStatement	* bp ^= lmasks [ bit ] - lmasks [ n ]	453:12:15866:15896	5674733	0	True				
ANR	5675815	AssignmentExpression	* bp ^= lmasks [ bit ] - lmasks [ n ]		5674733	0		^=			
ANR	5675816	UnaryOperationExpression	* bp		5674733	0					
ANR	5675817	UnaryOperator	*		5674733	0					
ANR	5675818	Identifier	bp		5674733	1					
ANR	5675819	AdditiveExpression	lmasks [ bit ] - lmasks [ n ]		5674733	1		-			
ANR	5675820	ArrayIndexing	lmasks [ bit ]		5674733	0					
ANR	5675821	Identifier	lmasks		5674733	0					
ANR	5675822	Identifier	bit		5674733	1					
ANR	5675823	ArrayIndexing	lmasks [ n ]		5674733	1					
ANR	5675824	Identifier	lmasks		5674733	0					
ANR	5675825	Identifier	n		5674733	1					
ANR	5675826	ExpressionStatement	INCS ( thin )	454:12:15910:15920	5674733	1	True				
ANR	5675827	CallExpression	INCS ( thin )		5674733	0					
ANR	5675828	Callee	INCS		5674733	0					
ANR	5675829	Identifier	INCS		5674733	0					
ANR	5675830	ArgumentList	thin		5674733	1					
ANR	5675831	Argument	thin		5674733	0					
ANR	5675832	Identifier	thin		5674733	0					
ANR	5675833	ElseStatement	else		5674733	0					
ANR	5675834	IfStatement	if ( ( n -= 8 ) <= 8 )		5674733	0					
ANR	5675835	Condition	( n -= 8 ) <= 8	455:19:15941:15953	5674733	0	True				
ANR	5675836	RelationalExpression	( n -= 8 ) <= 8		5674733	0		<=			
ANR	5675837	AssignmentExpression	n -= 8		5674733	0		-=			
ANR	5675838	Identifier	n		5674733	0					
ANR	5675839	PrimaryExpression	8		5674733	1					
ANR	5675840	PrimaryExpression	8		5674733	1					
ANR	5675841	CompoundStatement		235:34:7579:7579	5674733	1					
ANR	5675842	ExpressionStatement	* bp ^= lmasks [ bit ]	456:12:15970:15988	5674733	0	True				
ANR	5675843	AssignmentExpression	* bp ^= lmasks [ bit ]		5674733	0		^=			
ANR	5675844	UnaryOperationExpression	* bp		5674733	0					
ANR	5675845	UnaryOperator	*		5674733	0					
ANR	5675846	Identifier	bp		5674733	1					
ANR	5675847	ArrayIndexing	lmasks [ bit ]		5674733	1					
ANR	5675848	Identifier	lmasks		5674733	0					
ANR	5675849	Identifier	bit		5674733	1					
ANR	5675850	ExpressionStatement	bp [ 1 ] ^= rmasks [ n ]	457:12:16002:16020	5674733	1	True				
ANR	5675851	AssignmentExpression	bp [ 1 ] ^= rmasks [ n ]		5674733	0		^=			
ANR	5675852	ArrayIndexing	bp [ 1 ]		5674733	0					
ANR	5675853	Identifier	bp		5674733	0					
ANR	5675854	PrimaryExpression	1		5674733	1					
ANR	5675855	ArrayIndexing	rmasks [ n ]		5674733	1					
ANR	5675856	Identifier	rmasks		5674733	0					
ANR	5675857	Identifier	n		5674733	1					
ANR	5675858	ExpressionStatement	INCS ( thin2 )	458:12:16034:16045	5674733	2	True				
ANR	5675859	CallExpression	INCS ( thin2 )		5674733	0					
ANR	5675860	Callee	INCS		5674733	0					
ANR	5675861	Identifier	INCS		5674733	0					
ANR	5675862	ArgumentList	thin2		5674733	1					
ANR	5675863	Argument	thin2		5674733	0					
ANR	5675864	Identifier	thin2		5674733	0					
ANR	5675865	ElseStatement	else		5674733	0					
ANR	5675866	CompoundStatement		239:15:7685:7685	5674733	0					
ANR	5675867	ExpressionStatement	* bp ++ ^= lmasks [ bit ]	460:12:16076:16096	5674733	0	True				
ANR	5675868	AssignmentExpression	* bp ++ ^= lmasks [ bit ]		5674733	0		^=			
ANR	5675869	UnaryOperationExpression	* bp ++		5674733	0					
ANR	5675870	UnaryOperator	*		5674733	0					
ANR	5675871	PostIncDecOperationExpression	bp ++		5674733	1					
ANR	5675872	Identifier	bp		5674733	0					
ANR	5675873	IncDec	++		5674733	1					
ANR	5675874	ArrayIndexing	lmasks [ bit ]		5674733	1					
ANR	5675875	Identifier	lmasks		5674733	0					
ANR	5675876	Identifier	bit		5674733	1					
ANR	5675877	IfStatement	if ( n >= 56 )		5674733	1					
ANR	5675878	Condition	n >= 56	461:16:16114:16120	5674733	0	True				
ANR	5675879	RelationalExpression	n >= 56		5674733	0		>=			
ANR	5675880	Identifier	n		5674733	0					
ANR	5675881	PrimaryExpression	56		5674733	1					
ANR	5675882	CompoundStatement		242:16:7764:7779	5674733	1					
ANR	5675883	IdentifierDeclStatement	int nb = n >> 3 ;	462:16:16141:16156	5674733	0	True				
ANR	5675884	IdentifierDecl	nb = n >> 3		5674733	0					
ANR	5675885	IdentifierDeclType	int		5674733	0					
ANR	5675886	Identifier	nb		5674733	1					
ANR	5675887	AssignmentExpression	nb = n >> 3		5674733	2		=			
ANR	5675888	Identifier	nb		5674733	0					
ANR	5675889	ShiftExpression	n >> 3		5674733	1		>>			
ANR	5675890	Identifier	n		5674733	0					
ANR	5675891	PrimaryExpression	3		5674733	1					
ANR	5675892	ExpressionStatement	"memset ( bp , one , nb )"	464:16:16175:16194	5674733	1	True				
ANR	5675893	CallExpression	"memset ( bp , one , nb )"		5674733	0					
ANR	5675894	Callee	memset		5674733	0					
ANR	5675895	Identifier	memset		5674733	0					
ANR	5675896	ArgumentList	bp		5674733	1					
ANR	5675897	Argument	bp		5674733	0					
ANR	5675898	Identifier	bp		5674733	0					
ANR	5675899	Argument	one		5674733	1					
ANR	5675900	Identifier	one		5674733	0					
ANR	5675901	Argument	nb		5674733	2					
ANR	5675902	Identifier	nb		5674733	0					
ANR	5675903	ExpressionStatement	bp += nb	465:16:16212:16220	5674733	2	True				
ANR	5675904	AssignmentExpression	bp += nb		5674733	0		+=			
ANR	5675905	Identifier	bp		5674733	0					
ANR	5675906	Identifier	nb		5674733	1					
ANR	5675907	ExpressionStatement	INCS ( nwide )	466:16:16238:16249	5674733	3	True				
ANR	5675908	CallExpression	INCS ( nwide )		5674733	0					
ANR	5675909	Callee	INCS		5674733	0					
ANR	5675910	Identifier	INCS		5674733	0					
ANR	5675911	ArgumentList	nwide		5674733	1					
ANR	5675912	Argument	nwide		5674733	0					
ANR	5675913	Identifier	nwide		5674733	0					
ANR	5675914	ExpressionStatement	"ADDS ( bwide , nb )"	467:16:16267:16282	5674733	4	True				
ANR	5675915	CallExpression	"ADDS ( bwide , nb )"		5674733	0					
ANR	5675916	Callee	ADDS		5674733	0					
ANR	5675917	Identifier	ADDS		5674733	0					
ANR	5675918	ArgumentList	bwide		5674733	1					
ANR	5675919	Argument	bwide		5674733	0					
ANR	5675920	Identifier	bwide		5674733	0					
ANR	5675921	Argument	nb		5674733	1					
ANR	5675922	Identifier	nb		5674733	0					
ANR	5675923	ElseStatement	else		5674733	0					
ANR	5675924	CompoundStatement		248:19:7926:7926	5674733	0					
ANR	5675925	ExpressionStatement	"ADDS ( bfill , n >> 3 )"	469:16:16321:16340	5674733	0	True				
ANR	5675926	CallExpression	"ADDS ( bfill , n >> 3 )"		5674733	0					
ANR	5675927	Callee	ADDS		5674733	0					
ANR	5675928	Identifier	ADDS		5674733	0					
ANR	5675929	ArgumentList	bfill		5674733	1					
ANR	5675930	Argument	bfill		5674733	0					
ANR	5675931	Identifier	bfill		5674733	0					
ANR	5675932	Argument	n >> 3		5674733	1					
ANR	5675933	ShiftExpression	n >> 3		5674733	0		>>			
ANR	5675934	Identifier	n		5674733	0					
ANR	5675935	PrimaryExpression	3		5674733	1					
ANR	5675936	WhileStatement	while ( ( n -= 8 ) >= 0 )		5674733	1					
ANR	5675937	Condition	( n -= 8 ) >= 0	470:23:16365:16377	5674733	0	True				
ANR	5675938	RelationalExpression	( n -= 8 ) >= 0		5674733	0		>=			
ANR	5675939	AssignmentExpression	n -= 8		5674733	0		-=			
ANR	5675940	Identifier	n		5674733	0					
ANR	5675941	PrimaryExpression	8		5674733	1					
ANR	5675942	PrimaryExpression	0		5674733	1					
ANR	5675943	ExpressionStatement	* bp ++ = one	471:20:16400:16411	5674733	1	True				
ANR	5675944	AssignmentExpression	* bp ++ = one		5674733	0		=			
ANR	5675945	UnaryOperationExpression	* bp ++		5674733	0					
ANR	5675946	UnaryOperator	*		5674733	0					
ANR	5675947	PostIncDecOperationExpression	bp ++		5674733	1					
ANR	5675948	Identifier	bp		5674733	0					
ANR	5675949	IncDec	++		5674733	1					
ANR	5675950	Identifier	one		5674733	1					
ANR	5675951	ExpressionStatement	INCS ( nfill )	472:16:16429:16440	5674733	2	True				
ANR	5675952	CallExpression	INCS ( nfill )		5674733	0					
ANR	5675953	Callee	INCS		5674733	0					
ANR	5675954	Identifier	INCS		5674733	0					
ANR	5675955	ArgumentList	nfill		5674733	1					
ANR	5675956	Argument	nfill		5674733	0					
ANR	5675957	Identifier	nfill		5674733	0					
ANR	5675958	ExpressionStatement	* bp ^= rmasks [ n & 7 ]	474:12:16468:16488	5674733	2	True				
ANR	5675959	AssignmentExpression	* bp ^= rmasks [ n & 7 ]		5674733	0		^=			
ANR	5675960	UnaryOperationExpression	* bp		5674733	0					
ANR	5675961	UnaryOperator	*		5674733	0					
ANR	5675962	Identifier	bp		5674733	1					
ANR	5675963	ArrayIndexing	rmasks [ n & 7 ]		5674733	1					
ANR	5675964	Identifier	rmasks		5674733	0					
ANR	5675965	BitAndExpression	n & 7		5674733	1		&			
ANR	5675966	Identifier	n		5674733	0					
ANR	5675967	PrimaryExpression	7		5674733	1					
ANR	5675968	IfStatement	if ( psrc >= stop && sbit == stopbit )		5674733	16					
ANR	5675969	Condition	psrc >= stop && sbit == stopbit	476:12:16512:16542	5674733	0	True				
ANR	5675970	AndExpression	psrc >= stop && sbit == stopbit		5674733	0		&&			
ANR	5675971	RelationalExpression	psrc >= stop		5674733	0		>=			
ANR	5675972	Identifier	psrc		5674733	0					
ANR	5675973	Identifier	stop		5674733	1					
ANR	5675974	EqualityExpression	sbit == stopbit		5674733	1		==			
ANR	5675975	Identifier	sbit		5674733	0					
ANR	5675976	Identifier	stopbit		5674733	1					
ANR	5675977	BreakStatement	break ;	477:12:16557:16562	5674733	1	True				
ANR	5675978	ReturnType	static void		5674733	1					
ANR	5675979	Identifier	image_simple_expand		5674733	2					
ANR	5675980	ParameterList	"byte * line , int line_x , uint raster , const byte * buffer , int data_x , uint w , fixed xcur , fixed x_extent , byte zero"		5674733	3					
ANR	5675981	Parameter	byte * line	218:20:8201:8211	5674733	0	True				
ANR	5675982	ParameterType	byte *		5674733	0					
ANR	5675983	Identifier	line		5674733	1					
ANR	5675984	Parameter	int line_x	218:33:8214:8223	5674733	1	True				
ANR	5675985	ParameterType	int		5674733	0					
ANR	5675986	Identifier	line_x		5674733	1					
ANR	5675987	Parameter	uint raster	218:45:8226:8236	5674733	2	True				
ANR	5675988	ParameterType	uint		5674733	0					
ANR	5675989	Identifier	raster		5674733	1					
ANR	5675990	Parameter	const byte * buffer	219:20:8259:8277	5674733	3	True				
ANR	5675991	ParameterType	const byte *		5674733	0					
ANR	5675992	Identifier	buffer		5674733	1					
ANR	5675993	Parameter	int data_x	219:41:8280:8289	5674733	4	True				
ANR	5675994	ParameterType	int		5674733	0					
ANR	5675995	Identifier	data_x		5674733	1					
ANR	5675996	Parameter	uint w	219:53:8292:8297	5674733	5	True				
ANR	5675997	ParameterType	uint		5674733	0					
ANR	5675998	Identifier	w		5674733	1					
ANR	5675999	Parameter	fixed xcur	220:20:8320:8329	5674733	6	True				
ANR	5676000	ParameterType	fixed		5674733	0					
ANR	5676001	Identifier	xcur		5674733	1					
ANR	5676002	Parameter	fixed x_extent	220:32:8332:8345	5674733	7	True				
ANR	5676003	ParameterType	fixed		5674733	0					
ANR	5676004	Identifier	x_extent		5674733	1					
ANR	5676005	Parameter	byte zero	220:48:8348:8356	5674733	8	True				
ANR	5676006	ParameterType	byte		5674733	0					
ANR	5676007	Identifier	zero		5674733	1					
ANR	5676008	CFGEntryNode	ENTRY		5674733		True				
ANR	5676009	CFGExitNode	EXIT		5674733		True				
ANR	5676010	InfiniteForNode	true		5674733		True				
ANR	5676011	Symbol	* * byte_reverse_bits		5674733						
ANR	5676012	Symbol	data		5674733						
ANR	5676013	Symbol	nwide		5674733						
ANR	5676014	Symbol	* bp ++		5674733						
ANR	5676015	Symbol	xl . state		5674733						
ANR	5676016	Symbol	* psrc		5674733						
ANR	5676017	Symbol	bit		5674733						
ANR	5676018	Symbol	~zero		5674733						
ANR	5676019	Symbol	sbit		5674733						
ANR	5676020	Symbol	lbit0		5674733						
ANR	5676021	Symbol	fixed2int		5674733						
ANR	5676022	Symbol	zero		5674733						
ANR	5676023	Symbol	byte02		5674733						
ANR	5676024	Symbol	lbit1		5674733						
ANR	5676025	Symbol	byte03		5674733						
ANR	5676026	Symbol	data_x		5674733						
ANR	5676027	Symbol	byte00		5674733						
ANR	5676028	Symbol	byte01		5674733						
ANR	5676029	Symbol	byte04		5674733						
ANR	5676030	Symbol	* -- stop		5674733						
ANR	5676031	Symbol	* bp		5674733						
ANR	5676032	Symbol	buffer		5674733						
ANR	5676033	Symbol	* stop		5674733						
ANR	5676034	Symbol	dxx24		5674733						
ANR	5676035	Symbol	last		5674733						
ANR	5676036	Symbol	dda_current_fixed2int		5674733						
ANR	5676037	Symbol	bwide		5674733						
ANR	5676038	Symbol	sbitmask		5674733						
ANR	5676039	Symbol	thin2		5674733						
ANR	5676040	Symbol	line_x		5674733						
ANR	5676041	Symbol	all0s		5674733						
ANR	5676042	Symbol	stopmask		5674733						
ANR	5676043	Symbol	thin		5674733						
ANR	5676044	Symbol	dxx16		5674733						
ANR	5676045	Symbol	byte_reverse_bits		5674733						
ANR	5676046	Symbol	stop		5674733						
ANR	5676047	Symbol	byte1		5674733						
ANR	5676048	Symbol	nb		5674733						
ANR	5676049	Symbol	~last		5674733						
ANR	5676050	Symbol	x0		5674733						
ANR	5676051	Symbol	* byte_bit_run_length_0		5674733						
ANR	5676052	Symbol	stopx		5674733						
ANR	5676053	Symbol	xl0		5674733						
ANR	5676054	Symbol	dbitx		5674733						
ANR	5676055	Symbol	psrc		5674733						
ANR	5676056	Symbol	rbit0		5674733						
ANR	5676057	Symbol	rbit1		5674733						
ANR	5676058	Symbol	endbit		5674733						
ANR	5676059	Symbol	line		5674733						
ANR	5676060	Symbol	* bit		5674733						
ANR	5676061	Symbol	all1s		5674733						
ANR	5676062	Symbol	bp		5674733						
ANR	5676063	Symbol	nfill		5674733						
ANR	5676064	Symbol	endx		5674733						
ANR	5676065	Symbol	byte_bit_run_length_0		5674733						
ANR	5676066	Symbol	endp		5674733						
ANR	5676067	Symbol	* * last		5674733						
ANR	5676068	Symbol	* ++ psrc		5674733						
ANR	5676069	Symbol	~wx		5674733						
ANR	5676070	Symbol	* lmasks		5674733						
ANR	5676071	Symbol	wx		5674733						
ANR	5676072	Symbol	lmasks		5674733						
ANR	5676073	Symbol	rmasks		5674733						
ANR	5676074	Symbol	stopbit		5674733						
ANR	5676075	Symbol	* rmasks		5674733						
ANR	5676076	Symbol	one		5674733						
ANR	5676077	Symbol	raster		5674733						
ANR	5676078	Symbol	min_int		5674733						
ANR	5676079	Symbol	* last		5674733						
ANR	5676080	Symbol	n		5674733						
ANR	5676081	Symbol	xcur		5674733						
ANR	5676082	Symbol	bfill		5674733						
ANR	5676083	Symbol	fixed_fraction		5674733						
ANR	5676084	Symbol	xl		5674733						
ANR	5676085	Symbol	calls		5674733						
ANR	5676086	Symbol	x_extent		5674733						
ANR	5676087	Symbol	fixed_pre_pixround		5674733						
ANR	5676088	Symbol	w		5674733						
ANR	5676089	Symbol	int2fixed		5674733						
ANR	5676090	Symbol	xl . step		5674733						
ANR	5676091	Symbol	* n		5674733						
ANR	5676092	Symbol	dxx32		5674733						
ANR	5676093	Symbol	dxx8		5674733						
ANR	5676094	Symbol	runs		5674733						
ANR	5676095	Symbol	* byte_reverse_bits		5674733						
ANR	5676096	Symbol	dxx4		5674733						
ANR	5676097	Function	copy_portrait	482:0:16622:18560							
ANR	5676098	FunctionDef	"copy_portrait (gx_image_enum * penum , const byte * data , int dx , int raster , int x , int y , int w , int h , gx_device * dev)"		5676097	0					
ANR	5676099	CompoundStatement		485:0:16768:18560	5676097	0					
ANR	5676100	IdentifierDeclStatement	const gx_device_color * pdc0 ;	486:4:16774:16801	5676097	0	True				
ANR	5676101	IdentifierDecl	* pdc0		5676097	0					
ANR	5676102	IdentifierDeclType	const gx_device_color *		5676097	0					
ANR	5676103	Identifier	pdc0		5676097	1					
ANR	5676104	IdentifierDeclStatement	const gx_device_color * pdc1 ;	487:4:16807:16834	5676097	1	True				
ANR	5676105	IdentifierDecl	* pdc1		5676097	0					
ANR	5676106	IdentifierDeclType	const gx_device_color *		5676097	0					
ANR	5676107	Identifier	pdc1		5676097	1					
ANR	5676108	IdentifierDeclStatement	"uint align = ALIGNMENT_MOD ( data , align_bitmap_mod ) ;"	488:4:16840:16890	5676097	2	True				
ANR	5676109	IdentifierDecl	"align = ALIGNMENT_MOD ( data , align_bitmap_mod )"		5676097	0					
ANR	5676110	IdentifierDeclType	uint		5676097	0					
ANR	5676111	Identifier	align		5676097	1					
ANR	5676112	AssignmentExpression	"align = ALIGNMENT_MOD ( data , align_bitmap_mod )"		5676097	2		=			
ANR	5676113	Identifier	align		5676097	0					
ANR	5676114	CallExpression	"ALIGNMENT_MOD ( data , align_bitmap_mod )"		5676097	1					
ANR	5676115	Callee	ALIGNMENT_MOD		5676097	0					
ANR	5676116	Identifier	ALIGNMENT_MOD		5676097	0					
ANR	5676117	ArgumentList	data		5676097	1					
ANR	5676118	Argument	data		5676097	0					
ANR	5676119	Identifier	data		5676097	0					
ANR	5676120	Argument	align_bitmap_mod		5676097	1					
ANR	5676121	Identifier	align_bitmap_mod		5676097	0					
ANR	5676122	IfStatement	if ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] )		5676097	3					
ANR	5676123	Condition	penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ]	494:8:17039:17074	5676097	0	True				
ANR	5676124	ArrayIndexing	penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ]		5676097	0					
ANR	5676125	MemberAccess	penum -> map [ 0 ] . table . lookup4x1to32		5676097	0					
ANR	5676126	MemberAccess	penum -> map [ 0 ] . table		5676097	0					
ANR	5676127	ArrayIndexing	penum -> map [ 0 ]		5676097	0					
ANR	5676128	PtrMemberAccess	penum -> map		5676097	0					
ANR	5676129	Identifier	penum		5676097	0					
ANR	5676130	Identifier	map		5676097	1					
ANR	5676131	PrimaryExpression	0		5676097	1					
ANR	5676132	Identifier	table		5676097	1					
ANR	5676133	Identifier	lookup4x1to32		5676097	1					
ANR	5676134	PrimaryExpression	0		5676097	1					
ANR	5676135	ExpressionStatement	"pdc0 = penum -> icolor1 , pdc1 = penum -> icolor0"	495:8:17085:17129	5676097	1	True				
ANR	5676136	Expression	"pdc0 = penum -> icolor1 , pdc1 = penum -> icolor0"		5676097	0					
ANR	5676137	AssignmentExpression	pdc0 = penum -> icolor1		5676097	0		=			
ANR	5676138	Identifier	pdc0		5676097	0					
ANR	5676139	PtrMemberAccess	penum -> icolor1		5676097	1					
ANR	5676140	Identifier	penum		5676097	0					
ANR	5676141	Identifier	icolor1		5676097	1					
ANR	5676142	AssignmentExpression	pdc1 = penum -> icolor0		5676097	1		=			
ANR	5676143	Identifier	pdc1		5676097	0					
ANR	5676144	PtrMemberAccess	penum -> icolor0		5676097	1					
ANR	5676145	Identifier	penum		5676097	0					
ANR	5676146	Identifier	icolor0		5676097	1					
ANR	5676147	ElseStatement	else		5676097	0					
ANR	5676148	ExpressionStatement	"pdc0 = penum -> icolor0 , pdc1 = penum -> icolor1"	497:8:17148:17192	5676097	0	True				
ANR	5676149	Expression	"pdc0 = penum -> icolor0 , pdc1 = penum -> icolor1"		5676097	0					
ANR	5676150	AssignmentExpression	pdc0 = penum -> icolor0		5676097	0		=			
ANR	5676151	Identifier	pdc0		5676097	0					
ANR	5676152	PtrMemberAccess	penum -> icolor0		5676097	1					
ANR	5676153	Identifier	penum		5676097	0					
ANR	5676154	Identifier	icolor0		5676097	1					
ANR	5676155	AssignmentExpression	pdc1 = penum -> icolor1		5676097	1		=			
ANR	5676156	Identifier	pdc1		5676097	0					
ANR	5676157	PtrMemberAccess	penum -> icolor1		5676097	1					
ANR	5676158	Identifier	penum		5676097	0					
ANR	5676159	Identifier	icolor1		5676097	1					
ANR	5676160	ExpressionStatement	data -= align	498:4:17198:17211	5676097	4	True				
ANR	5676161	AssignmentExpression	data -= align		5676097	0		-=			
ANR	5676162	Identifier	data		5676097	0					
ANR	5676163	Identifier	align		5676097	1					
ANR	5676164	ExpressionStatement	dx += align << 3	499:4:17217:17233	5676097	5	True				
ANR	5676165	AssignmentExpression	dx += align << 3		5676097	0		+=			
ANR	5676166	Identifier	dx		5676097	0					
ANR	5676167	ShiftExpression	align << 3		5676097	1		<<			
ANR	5676168	Identifier	align		5676097	0					
ANR	5676169	PrimaryExpression	3		5676097	1					
ANR	5676170	IfStatement	if ( gx_dc_is_pure ( pdc0 ) && gx_dc_is_pure ( pdc1 ) )		5676097	6					
ANR	5676171	Condition	gx_dc_is_pure ( pdc0 ) && gx_dc_is_pure ( pdc1 )	500:8:17243:17284	5676097	0	True				
ANR	5676172	AndExpression	gx_dc_is_pure ( pdc0 ) && gx_dc_is_pure ( pdc1 )		5676097	0		&&			
ANR	5676173	CallExpression	gx_dc_is_pure ( pdc0 )		5676097	0					
ANR	5676174	Callee	gx_dc_is_pure		5676097	0					
ANR	5676175	Identifier	gx_dc_is_pure		5676097	0					
ANR	5676176	ArgumentList	pdc0		5676097	1					
ANR	5676177	Argument	pdc0		5676097	0					
ANR	5676178	Identifier	pdc0		5676097	0					
ANR	5676179	CallExpression	gx_dc_is_pure ( pdc1 )		5676097	1					
ANR	5676180	Callee	gx_dc_is_pure		5676097	0					
ANR	5676181	Identifier	gx_dc_is_pure		5676097	0					
ANR	5676182	ArgumentList	pdc1		5676097	1					
ANR	5676183	Argument	pdc1		5676097	0					
ANR	5676184	Identifier	pdc1		5676097	0					
ANR	5676185	CompoundStatement		16:52:518:518	5676097	1					
ANR	5676186	ExpressionStatement	"dev_proc_copy_mono ( ( * copy_mono ) ) = ( h == 1 || ( raster & ( align_bitmap_mod - 1 ) ) == 0 ? dev_proc ( dev , copy_mono ) : gx_copy_mono_unaligned )"	502:8:17331:17493	5676097	0	True				
ANR	5676187	AssignmentExpression	"dev_proc_copy_mono ( ( * copy_mono ) ) = ( h == 1 || ( raster & ( align_bitmap_mod - 1 ) ) == 0 ? dev_proc ( dev , copy_mono ) : gx_copy_mono_unaligned )"		5676097	0		=			
ANR	5676188	CallExpression	dev_proc_copy_mono ( ( * copy_mono ) )		5676097	0					
ANR	5676189	Callee	dev_proc_copy_mono		5676097	0					
ANR	5676190	Identifier	dev_proc_copy_mono		5676097	0					
ANR	5676191	ArgumentList	* copy_mono		5676097	1					
ANR	5676192	Argument	* copy_mono		5676097	0					
ANR	5676193	UnaryOperationExpression	* copy_mono		5676097	0					
ANR	5676194	UnaryOperator	*		5676097	0					
ANR	5676195	Identifier	copy_mono		5676097	1					
ANR	5676196	ConditionalExpression	"h == 1 || ( raster & ( align_bitmap_mod - 1 ) ) == 0 ? dev_proc ( dev , copy_mono ) : gx_copy_mono_unaligned"		5676097	1					
ANR	5676197	Condition	h == 1 || ( raster & ( align_bitmap_mod - 1 ) ) == 0		5676097	0					
ANR	5676198	OrExpression	h == 1 || ( raster & ( align_bitmap_mod - 1 ) ) == 0		5676097	0		||			
ANR	5676199	EqualityExpression	h == 1		5676097	0		==			
ANR	5676200	Identifier	h		5676097	0					
ANR	5676201	PrimaryExpression	1		5676097	1					
ANR	5676202	EqualityExpression	( raster & ( align_bitmap_mod - 1 ) ) == 0		5676097	1		==			
ANR	5676203	BitAndExpression	raster & ( align_bitmap_mod - 1 )		5676097	0		&			
ANR	5676204	Identifier	raster		5676097	0					
ANR	5676205	AdditiveExpression	align_bitmap_mod - 1		5676097	1		-			
ANR	5676206	Identifier	align_bitmap_mod		5676097	0					
ANR	5676207	PrimaryExpression	1		5676097	1					
ANR	5676208	PrimaryExpression	0		5676097	1					
ANR	5676209	CallExpression	"dev_proc ( dev , copy_mono )"		5676097	1					
ANR	5676210	Callee	dev_proc		5676097	0					
ANR	5676211	Identifier	dev_proc		5676097	0					
ANR	5676212	ArgumentList	dev		5676097	1					
ANR	5676213	Argument	dev		5676097	0					
ANR	5676214	Identifier	dev		5676097	0					
ANR	5676215	Argument	copy_mono		5676097	1					
ANR	5676216	Identifier	copy_mono		5676097	0					
ANR	5676217	Identifier	gx_copy_mono_unaligned		5676097	2					
ANR	5676218	ReturnStatement	"return ( * copy_mono ) ( dev , data , dx , raster , gx_no_bitmap_id , x , y , w , h , pdc0 -> colors . pure , pdc1 -> colors . pure ) ;"	505:8:17503:17638	5676097	1	True				
ANR	5676219	CallExpression	"( * copy_mono ) ( dev , data , dx , raster , gx_no_bitmap_id , x , y , w , h , pdc0 -> colors . pure , pdc1 -> colors . pure )"		5676097	0					
ANR	5676220	Callee	* copy_mono		5676097	0					
ANR	5676221	UnaryOperationExpression	* copy_mono		5676097	0					
ANR	5676222	UnaryOperator	*		5676097	0					
ANR	5676223	Identifier	copy_mono		5676097	1					
ANR	5676224	ArgumentList	dev		5676097	1					
ANR	5676225	Argument	dev		5676097	0					
ANR	5676226	Identifier	dev		5676097	0					
ANR	5676227	Argument	data		5676097	1					
ANR	5676228	Identifier	data		5676097	0					
ANR	5676229	Argument	dx		5676097	2					
ANR	5676230	Identifier	dx		5676097	0					
ANR	5676231	Argument	raster		5676097	3					
ANR	5676232	Identifier	raster		5676097	0					
ANR	5676233	Argument	gx_no_bitmap_id		5676097	4					
ANR	5676234	Identifier	gx_no_bitmap_id		5676097	0					
ANR	5676235	Argument	x		5676097	5					
ANR	5676236	Identifier	x		5676097	0					
ANR	5676237	Argument	y		5676097	6					
ANR	5676238	Identifier	y		5676097	0					
ANR	5676239	Argument	w		5676097	7					
ANR	5676240	Identifier	w		5676097	0					
ANR	5676241	Argument	h		5676097	8					
ANR	5676242	Identifier	h		5676097	0					
ANR	5676243	Argument	pdc0 -> colors . pure		5676097	9					
ANR	5676244	MemberAccess	pdc0 -> colors . pure		5676097	0					
ANR	5676245	PtrMemberAccess	pdc0 -> colors		5676097	0					
ANR	5676246	Identifier	pdc0		5676097	0					
ANR	5676247	Identifier	colors		5676097	1					
ANR	5676248	Identifier	pure		5676097	1					
ANR	5676249	Argument	pdc1 -> colors . pure		5676097	10					
ANR	5676250	MemberAccess	pdc1 -> colors . pure		5676097	0					
ANR	5676251	PtrMemberAccess	pdc1 -> colors		5676097	0					
ANR	5676252	Identifier	pdc1		5676097	0					
ANR	5676253	Identifier	colors		5676097	1					
ANR	5676254	Identifier	pure		5676097	1					
ANR	5676255	CompoundStatement		33:8:1225:1236	5676097	7					
ANR	5676256	IdentifierDeclStatement	const gx_device_color * pdc ;	516:8:17958:17984	5676097	0	True				
ANR	5676257	IdentifierDecl	* pdc		5676097	0					
ANR	5676258	IdentifierDeclType	const gx_device_color *		5676097	0					
ANR	5676259	Identifier	pdc		5676097	1					
ANR	5676260	IdentifierDeclStatement	bool invert ;	517:8:17994:18005	5676097	1	True				
ANR	5676261	IdentifierDecl	invert		5676097	0					
ANR	5676262	IdentifierDeclType	bool		5676097	0					
ANR	5676263	Identifier	invert		5676097	1					
ANR	5676264	IfStatement	if ( DC_IS_NULL ( pdc1 ) )		5676097	2					
ANR	5676265	Condition	DC_IS_NULL ( pdc1 )	519:12:18020:18035	5676097	0	True				
ANR	5676266	CallExpression	DC_IS_NULL ( pdc1 )		5676097	0					
ANR	5676267	Callee	DC_IS_NULL		5676097	0					
ANR	5676268	Identifier	DC_IS_NULL		5676097	0					
ANR	5676269	ArgumentList	pdc1		5676097	1					
ANR	5676270	Argument	pdc1		5676097	0					
ANR	5676271	Identifier	pdc1		5676097	0					
ANR	5676272	CompoundStatement		35:30:1269:1269	5676097	1					
ANR	5676273	ExpressionStatement	pdc = pdc0	520:12:18052:18062	5676097	0	True				
ANR	5676274	AssignmentExpression	pdc = pdc0		5676097	0		=			
ANR	5676275	Identifier	pdc		5676097	0					
ANR	5676276	Identifier	pdc0		5676097	1					
ANR	5676277	ExpressionStatement	invert = true	521:12:18076:18089	5676097	1	True				
ANR	5676278	AssignmentExpression	invert = true		5676097	0		=			
ANR	5676279	Identifier	invert		5676097	0					
ANR	5676280	Identifier	true		5676097	1					
ANR	5676281	ElseStatement	else		5676097	0					
ANR	5676282	CompoundStatement		38:15:1337:1337	5676097	0					
ANR	5676283	IfStatement	if ( ! DC_IS_NULL ( pdc0 ) )		5676097	0					
ANR	5676284	Condition	! DC_IS_NULL ( pdc0 )	523:16:18124:18140	5676097	0	True				
ANR	5676285	UnaryOperationExpression	! DC_IS_NULL ( pdc0 )		5676097	0					
ANR	5676286	UnaryOperator	!		5676097	0					
ANR	5676287	CallExpression	DC_IS_NULL ( pdc0 )		5676097	1					
ANR	5676288	Callee	DC_IS_NULL		5676097	0					
ANR	5676289	Identifier	DC_IS_NULL		5676097	0					
ANR	5676290	ArgumentList	pdc0		5676097	1					
ANR	5676291	Argument	pdc0		5676097	0					
ANR	5676292	Identifier	pdc0		5676097	0					
ANR	5676293	CompoundStatement		40:16:1392:1496	5676097	1					
ANR	5676294	IdentifierDeclStatement	"int code = gx_device_color_fill_rectangle ( pdc0 , x , y , w , h , dev , lop_default , NULL ) ;"	524:16:18161:18265	5676097	0	True				
ANR	5676295	IdentifierDecl	"code = gx_device_color_fill_rectangle ( pdc0 , x , y , w , h , dev , lop_default , NULL )"		5676097	0					
ANR	5676296	IdentifierDeclType	int		5676097	0					
ANR	5676297	Identifier	code		5676097	1					
ANR	5676298	AssignmentExpression	"code = gx_device_color_fill_rectangle ( pdc0 , x , y , w , h , dev , lop_default , NULL )"		5676097	2		=			
ANR	5676299	Identifier	code		5676097	0					
ANR	5676300	CallExpression	"gx_device_color_fill_rectangle ( pdc0 , x , y , w , h , dev , lop_default , NULL )"		5676097	1					
ANR	5676301	Callee	gx_device_color_fill_rectangle		5676097	0					
ANR	5676302	Identifier	gx_device_color_fill_rectangle		5676097	0					
ANR	5676303	ArgumentList	pdc0		5676097	1					
ANR	5676304	Argument	pdc0		5676097	0					
ANR	5676305	Identifier	pdc0		5676097	0					
ANR	5676306	Argument	x		5676097	1					
ANR	5676307	Identifier	x		5676097	0					
ANR	5676308	Argument	y		5676097	2					
ANR	5676309	Identifier	y		5676097	0					
ANR	5676310	Argument	w		5676097	3					
ANR	5676311	Identifier	w		5676097	0					
ANR	5676312	Argument	h		5676097	4					
ANR	5676313	Identifier	h		5676097	0					
ANR	5676314	Argument	dev		5676097	5					
ANR	5676315	Identifier	dev		5676097	0					
ANR	5676316	Argument	lop_default		5676097	6					
ANR	5676317	Identifier	lop_default		5676097	0					
ANR	5676318	Argument	NULL		5676097	7					
ANR	5676319	Identifier	NULL		5676097	0					
ANR	5676320	IfStatement	if ( code < 0 )		5676097	1					
ANR	5676321	Condition	code < 0	527:20:18288:18295	5676097	0	True				
ANR	5676322	RelationalExpression	code < 0		5676097	0		<			
ANR	5676323	Identifier	code		5676097	0					
ANR	5676324	PrimaryExpression	0		5676097	1					
ANR	5676325	ReturnStatement	return code ;	528:20:18318:18329	5676097	1	True				
ANR	5676326	Identifier	code		5676097	0					
ANR	5676327	ExpressionStatement	pdc = pdc1	530:12:18357:18367	5676097	1	True				
ANR	5676328	AssignmentExpression	pdc = pdc1		5676097	0		=			
ANR	5676329	Identifier	pdc		5676097	0					
ANR	5676330	Identifier	pdc1		5676097	1					
ANR	5676331	ExpressionStatement	invert = false	531:12:18381:18395	5676097	2	True				
ANR	5676332	AssignmentExpression	invert = false		5676097	0		=			
ANR	5676333	Identifier	invert		5676097	0					
ANR	5676334	Identifier	false		5676097	1					
ANR	5676335	ReturnStatement	"return ( * pdc -> type -> fill_masked ) ( pdc , data , dx , raster , gx_no_bitmap_id , x , y , w , h , dev , lop_default , invert ) ;"	533:8:18415:18551	5676097	3	True				
ANR	5676336	CallExpression	"( * pdc -> type -> fill_masked ) ( pdc , data , dx , raster , gx_no_bitmap_id , x , y , w , h , dev , lop_default , invert )"		5676097	0					
ANR	5676337	Callee	* pdc -> type -> fill_masked		5676097	0					
ANR	5676338	UnaryOperationExpression	* pdc -> type -> fill_masked		5676097	0					
ANR	5676339	UnaryOperator	*		5676097	0					
ANR	5676340	PtrMemberAccess	pdc -> type -> fill_masked		5676097	1					
ANR	5676341	PtrMemberAccess	pdc -> type		5676097	0					
ANR	5676342	Identifier	pdc		5676097	0					
ANR	5676343	Identifier	type		5676097	1					
ANR	5676344	Identifier	fill_masked		5676097	1					
ANR	5676345	ArgumentList	pdc		5676097	1					
ANR	5676346	Argument	pdc		5676097	0					
ANR	5676347	Identifier	pdc		5676097	0					
ANR	5676348	Argument	data		5676097	1					
ANR	5676349	Identifier	data		5676097	0					
ANR	5676350	Argument	dx		5676097	2					
ANR	5676351	Identifier	dx		5676097	0					
ANR	5676352	Argument	raster		5676097	3					
ANR	5676353	Identifier	raster		5676097	0					
ANR	5676354	Argument	gx_no_bitmap_id		5676097	4					
ANR	5676355	Identifier	gx_no_bitmap_id		5676097	0					
ANR	5676356	Argument	x		5676097	5					
ANR	5676357	Identifier	x		5676097	0					
ANR	5676358	Argument	y		5676097	6					
ANR	5676359	Identifier	y		5676097	0					
ANR	5676360	Argument	w		5676097	7					
ANR	5676361	Identifier	w		5676097	0					
ANR	5676362	Argument	h		5676097	8					
ANR	5676363	Identifier	h		5676097	0					
ANR	5676364	Argument	dev		5676097	9					
ANR	5676365	Identifier	dev		5676097	0					
ANR	5676366	Argument	lop_default		5676097	10					
ANR	5676367	Identifier	lop_default		5676097	0					
ANR	5676368	Argument	invert		5676097	11					
ANR	5676369	Identifier	invert		5676097	0					
ANR	5676370	ReturnType	static int		5676097	1					
ANR	5676371	Identifier	copy_portrait		5676097	2					
ANR	5676372	ParameterList	"gx_image_enum * penum , const byte * data , int dx , int raster , int x , int y , int w , int h , gx_device * dev"		5676097	3					
ANR	5676373	Parameter	gx_image_enum * penum	483:14:16647:16667	5676097	0	True				
ANR	5676374	ParameterType	gx_image_enum *		5676097	0					
ANR	5676375	Identifier	penum		5676097	1					
ANR	5676376	Parameter	const byte * data	483:37:16670:16686	5676097	1	True				
ANR	5676377	ParameterType	const byte *		5676097	0					
ANR	5676378	Identifier	data		5676097	1					
ANR	5676379	Parameter	int dx	483:56:16689:16694	5676097	2	True				
ANR	5676380	ParameterType	int		5676097	0					
ANR	5676381	Identifier	dx		5676097	1					
ANR	5676382	Parameter	int raster	483:64:16697:16706	5676097	3	True				
ANR	5676383	ParameterType	int		5676097	0					
ANR	5676384	Identifier	raster		5676097	1					
ANR	5676385	Parameter	int x	484:14:16723:16727	5676097	4	True				
ANR	5676386	ParameterType	int		5676097	0					
ANR	5676387	Identifier	x		5676097	1					
ANR	5676388	Parameter	int y	484:21:16730:16734	5676097	5	True				
ANR	5676389	ParameterType	int		5676097	0					
ANR	5676390	Identifier	y		5676097	1					
ANR	5676391	Parameter	int w	484:28:16737:16741	5676097	6	True				
ANR	5676392	ParameterType	int		5676097	0					
ANR	5676393	Identifier	w		5676097	1					
ANR	5676394	Parameter	int h	484:35:16744:16748	5676097	7	True				
ANR	5676395	ParameterType	int		5676097	0					
ANR	5676396	Identifier	h		5676097	1					
ANR	5676397	Parameter	gx_device * dev	484:42:16751:16765	5676097	8	True				
ANR	5676398	ParameterType	gx_device *		5676097	0					
ANR	5676399	Identifier	dev		5676097	1					
ANR	5676400	CFGEntryNode	ENTRY		5676097		True				
ANR	5676401	CFGExitNode	EXIT		5676097		True				
ANR	5676402	Symbol	pdc -> type		5676097						
ANR	5676403	Symbol	data		5676097						
ANR	5676404	Symbol	align		5676097						
ANR	5676405	Symbol	pdc0 -> colors		5676097						
ANR	5676406	Symbol	dx		5676097						
ANR	5676407	Symbol	dev		5676097						
ANR	5676408	Symbol	pdc0		5676097						
ANR	5676409	Symbol	pdc1		5676097						
ANR	5676410	Symbol	gx_dc_is_pure		5676097						
ANR	5676411	Symbol	* copy_mono		5676097						
ANR	5676412	Symbol	* pdc		5676097						
ANR	5676413	Symbol	* * penum		5676097						
ANR	5676414	Symbol	DC_IS_NULL		5676097						
ANR	5676415	Symbol	gx_device_color_fill_rectangle		5676097						
ANR	5676416	Symbol	NULL		5676097						
ANR	5676417	Symbol	invert		5676097						
ANR	5676418	Symbol	penum		5676097						
ANR	5676419	Symbol	lop_default		5676097						
ANR	5676420	Symbol	* * pdc -> type		5676097						
ANR	5676421	Symbol	* * * pdc		5676097						
ANR	5676422	Symbol	gx_no_bitmap_id		5676097						
ANR	5676423	Symbol	pdc1 -> colors		5676097						
ANR	5676424	Symbol	align_bitmap_mod		5676097						
ANR	5676425	Symbol	true		5676097						
ANR	5676426	Symbol	* * penum -> map		5676097						
ANR	5676427	Symbol	* penum		5676097						
ANR	5676428	Symbol	* * * penum		5676097						
ANR	5676429	Symbol	code		5676097						
ANR	5676430	Symbol	* * pdc		5676097						
ANR	5676431	Symbol	* penum -> map		5676097						
ANR	5676432	Symbol	pdc0 -> colors . pure		5676097						
ANR	5676433	Symbol	* penum -> map [ 0 ] . table . lookup4x1to32		5676097						
ANR	5676434	Symbol	penum -> map		5676097						
ANR	5676435	Symbol	dev_proc_copy_mono		5676097						
ANR	5676436	Symbol	dev_proc		5676097						
ANR	5676437	Symbol	copy_mono		5676097						
ANR	5676438	Symbol	gx_copy_mono_unaligned		5676097						
ANR	5676439	Symbol	pdc -> type -> fill_masked		5676097						
ANR	5676440	Symbol	raster		5676097						
ANR	5676441	Symbol	h		5676097						
ANR	5676442	Symbol	false		5676097						
ANR	5676443	Symbol	* penum -> map [ 0 ] . table		5676097						
ANR	5676444	Symbol	penum -> map [ 0 ] . table		5676097						
ANR	5676445	Symbol	penum -> icolor0		5676097						
ANR	5676446	Symbol	pdc		5676097						
ANR	5676447	Symbol	penum -> icolor1		5676097						
ANR	5676448	Symbol	* pdc -> type		5676097						
ANR	5676449	Symbol	penum -> map [ 0 ] . table . lookup4x1to32		5676097						
ANR	5676450	Symbol	* pdc0		5676097						
ANR	5676451	Symbol	w		5676097						
ANR	5676452	Symbol	x		5676097						
ANR	5676453	Symbol	* pdc -> type -> fill_masked		5676097						
ANR	5676454	Symbol	y		5676097						
ANR	5676455	Symbol	ALIGNMENT_MOD		5676097						
ANR	5676456	Symbol	* pdc1		5676097						
ANR	5676457	Symbol	pdc1 -> colors . pure		5676097						
ANR	5676458	Function	image_render_simple	542:0:18657:22834							
ANR	5676459	FunctionDef	"image_render_simple (gx_image_enum * penum , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5676458	0					
ANR	5676460	CompoundStatement		545:0:18796:22834	5676458	0					
ANR	5676461	ExpressionStatement	"dev_proc_copy_mono ( ( * copy_mono ) ) = dev_proc ( dev , copy_mono )"	546:4:18802:18861	5676458	0	True				
ANR	5676462	AssignmentExpression	"dev_proc_copy_mono ( ( * copy_mono ) ) = dev_proc ( dev , copy_mono )"		5676458	0		=			
ANR	5676463	CallExpression	dev_proc_copy_mono ( ( * copy_mono ) )		5676458	0					
ANR	5676464	Callee	dev_proc_copy_mono		5676458	0					
ANR	5676465	Identifier	dev_proc_copy_mono		5676458	0					
ANR	5676466	ArgumentList	* copy_mono		5676458	1					
ANR	5676467	Argument	* copy_mono		5676458	0					
ANR	5676468	UnaryOperationExpression	* copy_mono		5676458	0					
ANR	5676469	UnaryOperator	*		5676458	0					
ANR	5676470	Identifier	copy_mono		5676458	1					
ANR	5676471	CallExpression	"dev_proc ( dev , copy_mono )"		5676458	1					
ANR	5676472	Callee	dev_proc		5676458	0					
ANR	5676473	Identifier	dev_proc		5676458	0					
ANR	5676474	ArgumentList	dev		5676458	1					
ANR	5676475	Argument	dev		5676458	0					
ANR	5676476	Identifier	dev		5676458	0					
ANR	5676477	Argument	copy_mono		5676458	1					
ANR	5676478	Identifier	copy_mono		5676458	0					
ANR	5676479	IdentifierDeclStatement	const fixed dxx = penum -> dxx ;	547:4:18867:18895	5676458	1	True				
ANR	5676480	IdentifierDecl	dxx = penum -> dxx		5676458	0					
ANR	5676481	IdentifierDeclType	const fixed		5676458	0					
ANR	5676482	Identifier	dxx		5676458	1					
ANR	5676483	AssignmentExpression	dxx = penum -> dxx		5676458	2		=			
ANR	5676484	Identifier	dxx		5676458	0					
ANR	5676485	PtrMemberAccess	penum -> dxx		5676458	1					
ANR	5676486	Identifier	penum		5676458	0					
ANR	5676487	Identifier	dxx		5676458	1					
ANR	5676488	IdentifierDeclStatement	const byte * line ;	548:4:18901:18917	5676458	2	True				
ANR	5676489	IdentifierDecl	* line		5676458	0					
ANR	5676490	IdentifierDeclType	const byte *		5676458	0					
ANR	5676491	Identifier	line		5676458	1					
ANR	5676492	IdentifierDeclStatement	"uint line_width , line_size ;"	549:4:18923:18949	5676458	3	True				
ANR	5676493	IdentifierDecl	line_width		5676458	0					
ANR	5676494	IdentifierDeclType	uint		5676458	0					
ANR	5676495	Identifier	line_width		5676458	1					
ANR	5676496	IdentifierDecl	line_size		5676458	1					
ANR	5676497	IdentifierDeclType	uint		5676458	0					
ANR	5676498	Identifier	line_size		5676458	1					
ANR	5676499	IdentifierDeclStatement	int line_x ;	550:4:18955:18965	5676458	4	True				
ANR	5676500	IdentifierDecl	line_x		5676458	0					
ANR	5676501	IdentifierDeclType	int		5676458	0					
ANR	5676502	Identifier	line_x		5676458	1					
ANR	5676503	IdentifierDeclStatement	fixed xcur = dda_current ( penum -> dda . pixel0 . x ) ;	551:4:18971:19016	5676458	5	True				
ANR	5676504	IdentifierDecl	xcur = dda_current ( penum -> dda . pixel0 . x )		5676458	0					
ANR	5676505	IdentifierDeclType	fixed		5676458	0					
ANR	5676506	Identifier	xcur		5676458	1					
ANR	5676507	AssignmentExpression	xcur = dda_current ( penum -> dda . pixel0 . x )		5676458	2		=			
ANR	5676508	Identifier	xcur		5676458	0					
ANR	5676509	CallExpression	dda_current ( penum -> dda . pixel0 . x )		5676458	1					
ANR	5676510	Callee	dda_current		5676458	0					
ANR	5676511	Identifier	dda_current		5676458	0					
ANR	5676512	ArgumentList	penum -> dda . pixel0 . x		5676458	1					
ANR	5676513	Argument	penum -> dda . pixel0 . x		5676458	0					
ANR	5676514	MemberAccess	penum -> dda . pixel0 . x		5676458	0					
ANR	5676515	MemberAccess	penum -> dda . pixel0		5676458	0					
ANR	5676516	PtrMemberAccess	penum -> dda		5676458	0					
ANR	5676517	Identifier	penum		5676458	0					
ANR	5676518	Identifier	dda		5676458	1					
ANR	5676519	Identifier	pixel0		5676458	1					
ANR	5676520	Identifier	x		5676458	1					
ANR	5676521	IdentifierDeclStatement	int ix = fixed2int_pixround ( xcur ) ;	552:4:19022:19055	5676458	6	True				
ANR	5676522	IdentifierDecl	ix = fixed2int_pixround ( xcur )		5676458	0					
ANR	5676523	IdentifierDeclType	int		5676458	0					
ANR	5676524	Identifier	ix		5676458	1					
ANR	5676525	AssignmentExpression	ix = fixed2int_pixround ( xcur )		5676458	2		=			
ANR	5676526	Identifier	ix		5676458	0					
ANR	5676527	CallExpression	fixed2int_pixround ( xcur )		5676458	1					
ANR	5676528	Callee	fixed2int_pixround		5676458	0					
ANR	5676529	Identifier	fixed2int_pixround		5676458	0					
ANR	5676530	ArgumentList	xcur		5676458	1					
ANR	5676531	Argument	xcur		5676458	0					
ANR	5676532	Identifier	xcur		5676458	0					
ANR	5676533	IdentifierDeclStatement	int ixr ;	553:4:19061:19068	5676458	7	True				
ANR	5676534	IdentifierDecl	ixr		5676458	0					
ANR	5676535	IdentifierDeclType	int		5676458	0					
ANR	5676536	Identifier	ixr		5676458	1					
ANR	5676537	IdentifierDeclStatement	"const int iy = penum -> yci , ih = penum -> hci ;"	554:4:19074:19116	5676458	8	True				
ANR	5676538	IdentifierDecl	iy = penum -> yci		5676458	0					
ANR	5676539	IdentifierDeclType	const int		5676458	0					
ANR	5676540	Identifier	iy		5676458	1					
ANR	5676541	AssignmentExpression	iy = penum -> yci		5676458	2		=			
ANR	5676542	Identifier	iy		5676458	0					
ANR	5676543	PtrMemberAccess	penum -> yci		5676458	1					
ANR	5676544	Identifier	penum		5676458	0					
ANR	5676545	Identifier	yci		5676458	1					
ANR	5676546	IdentifierDecl	ih = penum -> hci		5676458	1					
ANR	5676547	IdentifierDeclType	const int		5676458	0					
ANR	5676548	Identifier	ih		5676458	1					
ANR	5676549	AssignmentExpression	ih = penum -> hci		5676458	2		=			
ANR	5676550	Identifier	ih		5676458	0					
ANR	5676551	PtrMemberAccess	penum -> hci		5676458	1					
ANR	5676552	Identifier	penum		5676458	0					
ANR	5676553	Identifier	hci		5676458	1					
ANR	5676554	Statement	gx_device_color	555:4:19122:19136	5676458	9	True				
ANR	5676555	Statement	*	555:20:19138:19138	5676458	10	True				
ANR	5676556	Statement	const	555:22:19140:19144	5676458	11	True				
ANR	5676557	ExpressionStatement	pdc0 = penum -> icolor0	555:28:19146:19167	5676458	12	True				
ANR	5676558	AssignmentExpression	pdc0 = penum -> icolor0		5676458	0		=			
ANR	5676559	Identifier	pdc0		5676458	0					
ANR	5676560	PtrMemberAccess	penum -> icolor0		5676458	1					
ANR	5676561	Identifier	penum		5676458	0					
ANR	5676562	Identifier	icolor0		5676458	1					
ANR	5676563	Statement	gx_device_color	556:4:19173:19187	5676458	13	True				
ANR	5676564	Statement	*	556:20:19189:19189	5676458	14	True				
ANR	5676565	Statement	const	556:22:19191:19195	5676458	15	True				
ANR	5676566	ExpressionStatement	pdc1 = penum -> icolor1	556:28:19197:19218	5676458	16	True				
ANR	5676567	AssignmentExpression	pdc1 = penum -> icolor1		5676458	0		=			
ANR	5676568	Identifier	pdc1		5676458	0					
ANR	5676569	PtrMemberAccess	penum -> icolor1		5676458	1					
ANR	5676570	Identifier	penum		5676458	0					
ANR	5676571	Identifier	icolor1		5676458	1					
ANR	5676572	IdentifierDeclStatement	int dy ;	557:4:19224:19230	5676458	17	True				
ANR	5676573	IdentifierDecl	dy		5676458	0					
ANR	5676574	IdentifierDeclType	int		5676458	0					
ANR	5676575	Identifier	dy		5676458	1					
ANR	5676576	IdentifierDeclStatement	int code ;	558:4:19236:19244	5676458	18	True				
ANR	5676577	IdentifierDecl	code		5676458	0					
ANR	5676578	IdentifierDeclType	int		5676458	0					
ANR	5676579	Identifier	code		5676458	1					
ANR	5676580	IfStatement	if ( h == 0 )		5676458	19					
ANR	5676581	Condition	h == 0	560:8:19255:19260	5676458	0	True				
ANR	5676582	EqualityExpression	h == 0		5676458	0		==			
ANR	5676583	Identifier	h		5676458	0					
ANR	5676584	PrimaryExpression	0		5676458	1					
ANR	5676585	ReturnStatement	return 0 ;	561:8:19271:19279	5676458	1	True				
ANR	5676586	PrimaryExpression	0		5676458	0					
ANR	5676587	IfStatement	"if ( ( ! DC_IS_NULL ( pdc0 ) && ( code = gx_color_load ( pdc0 , penum -> pgs , dev ) ) < 0 ) || ( ! DC_IS_NULL ( pdc1 ) && ( code = gx_color_load ( pdc1 , penum -> pgs , dev ) ) < 0 ) )"		5676458	20					
ANR	5676588	Condition	"( ! DC_IS_NULL ( pdc0 ) && ( code = gx_color_load ( pdc0 , penum -> pgs , dev ) ) < 0 ) || ( ! DC_IS_NULL ( pdc1 ) && ( code = gx_color_load ( pdc1 , penum -> pgs , dev ) ) < 0 )"	562:8:19289:19462	5676458	0	True				
ANR	5676589	OrExpression	"( ! DC_IS_NULL ( pdc0 ) && ( code = gx_color_load ( pdc0 , penum -> pgs , dev ) ) < 0 ) || ( ! DC_IS_NULL ( pdc1 ) && ( code = gx_color_load ( pdc1 , penum -> pgs , dev ) ) < 0 )"		5676458	0		||			
ANR	5676590	AndExpression	"! DC_IS_NULL ( pdc0 ) && ( code = gx_color_load ( pdc0 , penum -> pgs , dev ) ) < 0"		5676458	0		&&			
ANR	5676591	UnaryOperationExpression	! DC_IS_NULL ( pdc0 )		5676458	0					
ANR	5676592	UnaryOperator	!		5676458	0					
ANR	5676593	CallExpression	DC_IS_NULL ( pdc0 )		5676458	1					
ANR	5676594	Callee	DC_IS_NULL		5676458	0					
ANR	5676595	Identifier	DC_IS_NULL		5676458	0					
ANR	5676596	ArgumentList	pdc0		5676458	1					
ANR	5676597	Argument	pdc0		5676458	0					
ANR	5676598	Identifier	pdc0		5676458	0					
ANR	5676599	RelationalExpression	"( code = gx_color_load ( pdc0 , penum -> pgs , dev ) ) < 0"		5676458	1		<			
ANR	5676600	AssignmentExpression	"code = gx_color_load ( pdc0 , penum -> pgs , dev )"		5676458	0		=			
ANR	5676601	Identifier	code		5676458	0					
ANR	5676602	CallExpression	"gx_color_load ( pdc0 , penum -> pgs , dev )"		5676458	1					
ANR	5676603	Callee	gx_color_load		5676458	0					
ANR	5676604	Identifier	gx_color_load		5676458	0					
ANR	5676605	ArgumentList	pdc0		5676458	1					
ANR	5676606	Argument	pdc0		5676458	0					
ANR	5676607	Identifier	pdc0		5676458	0					
ANR	5676608	Argument	penum -> pgs		5676458	1					
ANR	5676609	PtrMemberAccess	penum -> pgs		5676458	0					
ANR	5676610	Identifier	penum		5676458	0					
ANR	5676611	Identifier	pgs		5676458	1					
ANR	5676612	Argument	dev		5676458	2					
ANR	5676613	Identifier	dev		5676458	0					
ANR	5676614	PrimaryExpression	0		5676458	1					
ANR	5676615	AndExpression	"! DC_IS_NULL ( pdc1 ) && ( code = gx_color_load ( pdc1 , penum -> pgs , dev ) ) < 0"		5676458	1		&&			
ANR	5676616	UnaryOperationExpression	! DC_IS_NULL ( pdc1 )		5676458	0					
ANR	5676617	UnaryOperator	!		5676458	0					
ANR	5676618	CallExpression	DC_IS_NULL ( pdc1 )		5676458	1					
ANR	5676619	Callee	DC_IS_NULL		5676458	0					
ANR	5676620	Identifier	DC_IS_NULL		5676458	0					
ANR	5676621	ArgumentList	pdc1		5676458	1					
ANR	5676622	Argument	pdc1		5676458	0					
ANR	5676623	Identifier	pdc1		5676458	0					
ANR	5676624	RelationalExpression	"( code = gx_color_load ( pdc1 , penum -> pgs , dev ) ) < 0"		5676458	1		<			
ANR	5676625	AssignmentExpression	"code = gx_color_load ( pdc1 , penum -> pgs , dev )"		5676458	0		=			
ANR	5676626	Identifier	code		5676458	0					
ANR	5676627	CallExpression	"gx_color_load ( pdc1 , penum -> pgs , dev )"		5676458	1					
ANR	5676628	Callee	gx_color_load		5676458	0					
ANR	5676629	Identifier	gx_color_load		5676458	0					
ANR	5676630	ArgumentList	pdc1		5676458	1					
ANR	5676631	Argument	pdc1		5676458	0					
ANR	5676632	Identifier	pdc1		5676458	0					
ANR	5676633	Argument	penum -> pgs		5676458	1					
ANR	5676634	PtrMemberAccess	penum -> pgs		5676458	0					
ANR	5676635	Identifier	penum		5676458	0					
ANR	5676636	Identifier	pgs		5676458	1					
ANR	5676637	Argument	dev		5676458	2					
ANR	5676638	Identifier	dev		5676458	0					
ANR	5676639	PrimaryExpression	0		5676458	1					
ANR	5676640	ReturnStatement	return code ;	567:8:19482:19493	5676458	1	True				
ANR	5676641	Identifier	code		5676458	0					
ANR	5676642	IfStatement	if ( penum -> line == 0 )		5676458	21					
ANR	5676643	Condition	penum -> line == 0	568:8:19503:19518	5676458	0	True				
ANR	5676644	EqualityExpression	penum -> line == 0		5676458	0		==			
ANR	5676645	PtrMemberAccess	penum -> line		5676458	0					
ANR	5676646	Identifier	penum		5676458	0					
ANR	5676647	Identifier	line		5676458	1					
ANR	5676648	PrimaryExpression	0		5676458	1					
ANR	5676649	CompoundStatement		24:26:724:724	5676458	1					
ANR	5676650	ExpressionStatement	line = buffer	569:8:19566:19579	5676458	0	True				
ANR	5676651	AssignmentExpression	line = buffer		5676458	0		=			
ANR	5676652	Identifier	line		5676458	0					
ANR	5676653	Identifier	buffer		5676458	1					
ANR	5676654	ExpressionStatement	line_size = ( w + 7 ) >> 3	570:8:19589:19613	5676458	1	True				
ANR	5676655	AssignmentExpression	line_size = ( w + 7 ) >> 3		5676458	0		=			
ANR	5676656	Identifier	line_size		5676458	0					
ANR	5676657	ShiftExpression	( w + 7 ) >> 3		5676458	1		>>			
ANR	5676658	AdditiveExpression	w + 7		5676458	0		+			
ANR	5676659	Identifier	w		5676458	0					
ANR	5676660	PrimaryExpression	7		5676458	1					
ANR	5676661	PrimaryExpression	3		5676458	1					
ANR	5676662	ExpressionStatement	line_width = w	571:8:19623:19637	5676458	2	True				
ANR	5676663	AssignmentExpression	line_width = w		5676458	0		=			
ANR	5676664	Identifier	line_width		5676458	0					
ANR	5676665	Identifier	w		5676458	1					
ANR	5676666	ExpressionStatement	line_x = 0	572:8:19647:19657	5676458	3	True				
ANR	5676667	AssignmentExpression	line_x = 0		5676458	0		=			
ANR	5676668	Identifier	line_x		5676458	0					
ANR	5676669	PrimaryExpression	0		5676458	1					
ANR	5676670	ElseStatement	else		5676458	0					
ANR	5676671	IfStatement	"if ( copy_mono == dev_proc ( & mem_mono_device , copy_mono ) && dxx > 0 && gx_dc_is_pure ( pdc1 ) && gx_dc_is_pure ( pdc0 ) && ( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1 && ! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height )"		5676458	0					
ANR	5676672	Condition	"copy_mono == dev_proc ( & mem_mono_device , copy_mono ) && dxx > 0 && gx_dc_is_pure ( pdc1 ) && gx_dc_is_pure ( pdc0 ) && ( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1 && ! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height"	573:15:19674:20374	5676458	0	True				
ANR	5676673	AndExpression	"copy_mono == dev_proc ( & mem_mono_device , copy_mono ) && dxx > 0 && gx_dc_is_pure ( pdc1 ) && gx_dc_is_pure ( pdc0 ) && ( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1 && ! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height"		5676458	0		&&			
ANR	5676674	EqualityExpression	"copy_mono == dev_proc ( & mem_mono_device , copy_mono )"		5676458	0		==			
ANR	5676675	Identifier	copy_mono		5676458	0					
ANR	5676676	CallExpression	"dev_proc ( & mem_mono_device , copy_mono )"		5676458	1					
ANR	5676677	Callee	dev_proc		5676458	0					
ANR	5676678	Identifier	dev_proc		5676458	0					
ANR	5676679	ArgumentList	& mem_mono_device		5676458	1					
ANR	5676680	Argument	& mem_mono_device		5676458	0					
ANR	5676681	UnaryOperationExpression	& mem_mono_device		5676458	0					
ANR	5676682	UnaryOperator	&		5676458	0					
ANR	5676683	Identifier	mem_mono_device		5676458	1					
ANR	5676684	Argument	copy_mono		5676458	1					
ANR	5676685	Identifier	copy_mono		5676458	0					
ANR	5676686	AndExpression	dxx > 0 && gx_dc_is_pure ( pdc1 ) && gx_dc_is_pure ( pdc0 ) && ( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1 && ! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676687	RelationalExpression	dxx > 0		5676458	0		>			
ANR	5676688	Identifier	dxx		5676458	0					
ANR	5676689	PrimaryExpression	0		5676458	1					
ANR	5676690	AndExpression	gx_dc_is_pure ( pdc1 ) && gx_dc_is_pure ( pdc0 ) && ( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1 && ! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676691	CallExpression	gx_dc_is_pure ( pdc1 )		5676458	0					
ANR	5676692	Callee	gx_dc_is_pure		5676458	0					
ANR	5676693	Identifier	gx_dc_is_pure		5676458	0					
ANR	5676694	ArgumentList	pdc1		5676458	1					
ANR	5676695	Argument	pdc1		5676458	0					
ANR	5676696	Identifier	pdc1		5676458	0					
ANR	5676697	AndExpression	gx_dc_is_pure ( pdc0 ) && ( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1 && ! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676698	CallExpression	gx_dc_is_pure ( pdc0 )		5676458	0					
ANR	5676699	Callee	gx_dc_is_pure		5676458	0					
ANR	5676700	Identifier	gx_dc_is_pure		5676458	0					
ANR	5676701	ArgumentList	pdc0		5676458	1					
ANR	5676702	Argument	pdc0		5676458	0					
ANR	5676703	Identifier	pdc0		5676458	0					
ANR	5676704	AndExpression	( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1 && ! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676705	EqualityExpression	( pdc0 -> colors . pure ^ pdc1 -> colors . pure ) == 1		5676458	0		==			
ANR	5676706	ExclusiveOrExpression	pdc0 -> colors . pure ^ pdc1 -> colors . pure		5676458	0		^			
ANR	5676707	MemberAccess	pdc0 -> colors . pure		5676458	0					
ANR	5676708	PtrMemberAccess	pdc0 -> colors		5676458	0					
ANR	5676709	Identifier	pdc0		5676458	0					
ANR	5676710	Identifier	colors		5676458	1					
ANR	5676711	Identifier	pure		5676458	1					
ANR	5676712	MemberAccess	pdc1 -> colors . pure		5676458	1					
ANR	5676713	PtrMemberAccess	pdc1 -> colors		5676458	0					
ANR	5676714	Identifier	pdc1		5676458	0					
ANR	5676715	Identifier	colors		5676458	1					
ANR	5676716	Identifier	pure		5676458	1					
ANR	5676717	PrimaryExpression	1		5676458	1					
ANR	5676718	AndExpression	! penum -> clip_image && ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676719	UnaryOperationExpression	! penum -> clip_image		5676458	0					
ANR	5676720	UnaryOperator	!		5676458	0					
ANR	5676721	PtrMemberAccess	penum -> clip_image		5676458	1					
ANR	5676722	Identifier	penum		5676458	0					
ANR	5676723	Identifier	clip_image		5676458	1					
ANR	5676724	AndExpression	ix >= 0 && ( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676725	RelationalExpression	ix >= 0		5676458	0		>=			
ANR	5676726	Identifier	ix		5676458	0					
ANR	5676727	PrimaryExpression	0		5676458	1					
ANR	5676728	AndExpression	( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width && iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676729	RelationalExpression	( ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1 ) < dev -> width		5676458	0		<			
ANR	5676730	AssignmentExpression	ixr = fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1		5676458	0		=			
ANR	5676731	Identifier	ixr		5676458	0					
ANR	5676732	AdditiveExpression	fixed2int_pixround ( xcur + penum -> x_extent . x ) - 1		5676458	1		-			
ANR	5676733	CallExpression	fixed2int_pixround ( xcur + penum -> x_extent . x )		5676458	0					
ANR	5676734	Callee	fixed2int_pixround		5676458	0					
ANR	5676735	Identifier	fixed2int_pixround		5676458	0					
ANR	5676736	ArgumentList	xcur + penum -> x_extent . x		5676458	1					
ANR	5676737	Argument	xcur + penum -> x_extent . x		5676458	0					
ANR	5676738	AdditiveExpression	xcur + penum -> x_extent . x		5676458	0		+			
ANR	5676739	Identifier	xcur		5676458	0					
ANR	5676740	MemberAccess	penum -> x_extent . x		5676458	1					
ANR	5676741	PtrMemberAccess	penum -> x_extent		5676458	0					
ANR	5676742	Identifier	penum		5676458	0					
ANR	5676743	Identifier	x_extent		5676458	1					
ANR	5676744	Identifier	x		5676458	1					
ANR	5676745	PrimaryExpression	1		5676458	1					
ANR	5676746	PtrMemberAccess	dev -> width		5676458	1					
ANR	5676747	Identifier	dev		5676458	0					
ANR	5676748	Identifier	width		5676458	1					
ANR	5676749	AndExpression	iy >= 0 && iy + ih <= dev -> height		5676458	1		&&			
ANR	5676750	RelationalExpression	iy >= 0		5676458	0		>=			
ANR	5676751	Identifier	iy		5676458	0					
ANR	5676752	PrimaryExpression	0		5676458	1					
ANR	5676753	RelationalExpression	iy + ih <= dev -> height		5676458	1		<=			
ANR	5676754	AdditiveExpression	iy + ih		5676458	0		+			
ANR	5676755	Identifier	iy		5676458	0					
ANR	5676756	Identifier	ih		5676458	1					
ANR	5676757	PtrMemberAccess	dev -> height		5676458	1					
ANR	5676758	Identifier	dev		5676458	0					
ANR	5676759	Identifier	height		5676458	1					
ANR	5676760	CompoundStatement		48:8:1815:1847	5676458	1					
ANR	5676761	IdentifierDeclStatement	int line_ix ;	589:8:20467:20478	5676458	0	True				
ANR	5676762	IdentifierDecl	line_ix		5676458	0					
ANR	5676763	IdentifierDeclType	int		5676458	0					
ANR	5676764	Identifier	line_ix		5676458	1					
ANR	5676765	IdentifierDeclStatement	"int ib_left = ix >> 3 , ib_right = ixr >> 3 ;"	590:8:20488:20530	5676458	1	True				
ANR	5676766	IdentifierDecl	ib_left = ix >> 3		5676458	0					
ANR	5676767	IdentifierDeclType	int		5676458	0					
ANR	5676768	Identifier	ib_left		5676458	1					
ANR	5676769	AssignmentExpression	ib_left = ix >> 3		5676458	2		=			
ANR	5676770	Identifier	ib_left		5676458	0					
ANR	5676771	ShiftExpression	ix >> 3		5676458	1		>>			
ANR	5676772	Identifier	ix		5676458	0					
ANR	5676773	PrimaryExpression	3		5676458	1					
ANR	5676774	IdentifierDecl	ib_right = ixr >> 3		5676458	1					
ANR	5676775	IdentifierDeclType	int		5676458	0					
ANR	5676776	Identifier	ib_right		5676458	1					
ANR	5676777	AssignmentExpression	ib_right = ixr >> 3		5676458	2		=			
ANR	5676778	Identifier	ib_right		5676458	0					
ANR	5676779	ShiftExpression	ixr >> 3		5676458	1		>>			
ANR	5676780	Identifier	ixr		5676458	0					
ANR	5676781	PrimaryExpression	3		5676458	1					
ANR	5676782	IdentifierDeclStatement	"byte * scan_line = scan_line_base ( ( gx_device_memory * ) dev , iy ) ;"	591:8:20540:20602	5676458	2	True				
ANR	5676783	IdentifierDecl	"* scan_line = scan_line_base ( ( gx_device_memory * ) dev , iy )"		5676458	0					
ANR	5676784	IdentifierDeclType	byte *		5676458	0					
ANR	5676785	Identifier	scan_line		5676458	1					
ANR	5676786	AssignmentExpression	"* scan_line = scan_line_base ( ( gx_device_memory * ) dev , iy )"		5676458	2		=			
ANR	5676787	Identifier	scan_line		5676458	0					
ANR	5676788	CallExpression	"scan_line_base ( ( gx_device_memory * ) dev , iy )"		5676458	1					
ANR	5676789	Callee	scan_line_base		5676458	0					
ANR	5676790	Identifier	scan_line_base		5676458	0					
ANR	5676791	ArgumentList	( gx_device_memory * ) dev		5676458	1					
ANR	5676792	Argument	( gx_device_memory * ) dev		5676458	0					
ANR	5676793	CastExpression	( gx_device_memory * ) dev		5676458	0					
ANR	5676794	CastTarget	gx_device_memory *		5676458	0					
ANR	5676795	Identifier	dev		5676458	1					
ANR	5676796	Argument	iy		5676458	1					
ANR	5676797	Identifier	iy		5676458	0					
ANR	5676798	IdentifierDeclStatement	"byte save_left , save_right , mask ;"	592:8:20612:20644	5676458	3	True				
ANR	5676799	IdentifierDecl	save_left		5676458	0					
ANR	5676800	IdentifierDeclType	byte		5676458	0					
ANR	5676801	Identifier	save_left		5676458	1					
ANR	5676802	IdentifierDecl	save_right		5676458	1					
ANR	5676803	IdentifierDeclType	byte		5676458	0					
ANR	5676804	Identifier	save_right		5676458	1					
ANR	5676805	IdentifierDecl	mask		5676458	2					
ANR	5676806	IdentifierDeclType	byte		5676458	0					
ANR	5676807	Identifier	mask		5676458	1					
ANR	5676808	ExpressionStatement	line_x = ix & ( align_bitmap_mod * 8 - 1 )	594:8:20655:20695	5676458	4	True				
ANR	5676809	AssignmentExpression	line_x = ix & ( align_bitmap_mod * 8 - 1 )		5676458	0		=			
ANR	5676810	Identifier	line_x		5676458	0					
ANR	5676811	BitAndExpression	ix & ( align_bitmap_mod * 8 - 1 )		5676458	1		&			
ANR	5676812	Identifier	ix		5676458	0					
ANR	5676813	AdditiveExpression	align_bitmap_mod * 8 - 1		5676458	1		-			
ANR	5676814	MultiplicativeExpression	align_bitmap_mod * 8		5676458	0		*			
ANR	5676815	Identifier	align_bitmap_mod		5676458	0					
ANR	5676816	PrimaryExpression	8		5676458	1					
ANR	5676817	PrimaryExpression	1		5676458	1					
ANR	5676818	ExpressionStatement	line_ix = ix - line_x	595:8:20705:20726	5676458	5	True				
ANR	5676819	AssignmentExpression	line_ix = ix - line_x		5676458	0		=			
ANR	5676820	Identifier	line_ix		5676458	0					
ANR	5676821	AdditiveExpression	ix - line_x		5676458	1		-			
ANR	5676822	Identifier	ix		5676458	0					
ANR	5676823	Identifier	line_x		5676458	1					
ANR	5676824	ExpressionStatement	line_size = ( ixr >> 3 ) + 1 - ( line_ix >> 3 )	596:8:20736:20779	5676458	6	True				
ANR	5676825	AssignmentExpression	line_size = ( ixr >> 3 ) + 1 - ( line_ix >> 3 )		5676458	0		=			
ANR	5676826	Identifier	line_size		5676458	0					
ANR	5676827	AdditiveExpression	( ixr >> 3 ) + 1 - ( line_ix >> 3 )		5676458	1		+			
ANR	5676828	ShiftExpression	ixr >> 3		5676458	0		>>			
ANR	5676829	Identifier	ixr		5676458	0					
ANR	5676830	PrimaryExpression	3		5676458	1					
ANR	5676831	AdditiveExpression	1 - ( line_ix >> 3 )		5676458	1		-			
ANR	5676832	PrimaryExpression	1		5676458	0					
ANR	5676833	ShiftExpression	line_ix >> 3		5676458	1		>>			
ANR	5676834	Identifier	line_ix		5676458	0					
ANR	5676835	PrimaryExpression	3		5676458	1					
ANR	5676836	ExpressionStatement	line_width = ixr + 1 - ix	597:8:20789:20814	5676458	7	True				
ANR	5676837	AssignmentExpression	line_width = ixr + 1 - ix		5676458	0		=			
ANR	5676838	Identifier	line_width		5676458	0					
ANR	5676839	AdditiveExpression	ixr + 1 - ix		5676458	1		+			
ANR	5676840	Identifier	ixr		5676458	0					
ANR	5676841	AdditiveExpression	1 - ix		5676458	1		-			
ANR	5676842	PrimaryExpression	1		5676458	0					
ANR	5676843	Identifier	ix		5676458	1					
ANR	5676844	ExpressionStatement	save_left = scan_line [ ib_left ]	600:8:20920:20950	5676458	8	True				
ANR	5676845	AssignmentExpression	save_left = scan_line [ ib_left ]		5676458	0		=			
ANR	5676846	Identifier	save_left		5676458	0					
ANR	5676847	ArrayIndexing	scan_line [ ib_left ]		5676458	1					
ANR	5676848	Identifier	scan_line		5676458	0					
ANR	5676849	Identifier	ib_left		5676458	1					
ANR	5676850	ExpressionStatement	save_right = scan_line [ ib_right ]	601:8:20960:20992	5676458	9	True				
ANR	5676851	AssignmentExpression	save_right = scan_line [ ib_right ]		5676458	0		=			
ANR	5676852	Identifier	save_right		5676458	0					
ANR	5676853	ArrayIndexing	scan_line [ ib_right ]		5676458	1					
ANR	5676854	Identifier	scan_line		5676458	0					
ANR	5676855	Identifier	ib_right		5676458	1					
ANR	5676856	ExpressionStatement	"image_simple_expand ( scan_line + ( line_ix >> 3 ) , line_x , line_size , buffer , data_x , w , xcur , penum -> x_extent . x , ( byte ) ( ( pdc0 -> colors . pure == 0 ) != ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0 ) ? 0xff : 0 ) )"	602:8:21002:21346	5676458	10	True				
ANR	5676857	CallExpression	"image_simple_expand ( scan_line + ( line_ix >> 3 ) , line_x , line_size , buffer , data_x , w , xcur , penum -> x_extent . x , ( byte ) ( ( pdc0 -> colors . pure == 0 ) != ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0 ) ? 0xff : 0 ) )"		5676458	0					
ANR	5676858	Callee	image_simple_expand		5676458	0					
ANR	5676859	Identifier	image_simple_expand		5676458	0					
ANR	5676860	ArgumentList	scan_line + ( line_ix >> 3 )		5676458	1					
ANR	5676861	Argument	scan_line + ( line_ix >> 3 )		5676458	0					
ANR	5676862	AdditiveExpression	scan_line + ( line_ix >> 3 )		5676458	0		+			
ANR	5676863	Identifier	scan_line		5676458	0					
ANR	5676864	ShiftExpression	line_ix >> 3		5676458	1		>>			
ANR	5676865	Identifier	line_ix		5676458	0					
ANR	5676866	PrimaryExpression	3		5676458	1					
ANR	5676867	Argument	line_x		5676458	1					
ANR	5676868	Identifier	line_x		5676458	0					
ANR	5676869	Argument	line_size		5676458	2					
ANR	5676870	Identifier	line_size		5676458	0					
ANR	5676871	Argument	buffer		5676458	3					
ANR	5676872	Identifier	buffer		5676458	0					
ANR	5676873	Argument	data_x		5676458	4					
ANR	5676874	Identifier	data_x		5676458	0					
ANR	5676875	Argument	w		5676458	5					
ANR	5676876	Identifier	w		5676458	0					
ANR	5676877	Argument	xcur		5676458	6					
ANR	5676878	Identifier	xcur		5676458	0					
ANR	5676879	Argument	penum -> x_extent . x		5676458	7					
ANR	5676880	MemberAccess	penum -> x_extent . x		5676458	0					
ANR	5676881	PtrMemberAccess	penum -> x_extent		5676458	0					
ANR	5676882	Identifier	penum		5676458	0					
ANR	5676883	Identifier	x_extent		5676458	1					
ANR	5676884	Identifier	x		5676458	1					
ANR	5676885	Argument	( byte ) ( ( pdc0 -> colors . pure == 0 ) != ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0 ) ? 0xff : 0 )		5676458	8					
ANR	5676886	CastExpression	( byte ) ( ( pdc0 -> colors . pure == 0 ) != ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0 ) ? 0xff : 0 )		5676458	0					
ANR	5676887	CastTarget	byte		5676458	0					
ANR	5676888	ConditionalExpression	( pdc0 -> colors . pure == 0 ) != ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0 ) ? 0xff : 0		5676458	1					
ANR	5676889	Condition	( pdc0 -> colors . pure == 0 ) != ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0 )		5676458	0					
ANR	5676890	EqualityExpression	( pdc0 -> colors . pure == 0 ) != ( penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0 )		5676458	0		!=			
ANR	5676891	EqualityExpression	pdc0 -> colors . pure == 0		5676458	0		==			
ANR	5676892	MemberAccess	pdc0 -> colors . pure		5676458	0					
ANR	5676893	PtrMemberAccess	pdc0 -> colors		5676458	0					
ANR	5676894	Identifier	pdc0		5676458	0					
ANR	5676895	Identifier	colors		5676458	1					
ANR	5676896	Identifier	pure		5676458	1					
ANR	5676897	PrimaryExpression	0		5676458	1					
ANR	5676898	EqualityExpression	penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ] == 0		5676458	1		==			
ANR	5676899	ArrayIndexing	penum -> map [ 0 ] . table . lookup4x1to32 [ 0 ]		5676458	0					
ANR	5676900	MemberAccess	penum -> map [ 0 ] . table . lookup4x1to32		5676458	0					
ANR	5676901	MemberAccess	penum -> map [ 0 ] . table		5676458	0					
ANR	5676902	ArrayIndexing	penum -> map [ 0 ]		5676458	0					
ANR	5676903	PtrMemberAccess	penum -> map		5676458	0					
ANR	5676904	Identifier	penum		5676458	0					
ANR	5676905	Identifier	map		5676458	1					
ANR	5676906	PrimaryExpression	0		5676458	1					
ANR	5676907	Identifier	table		5676458	1					
ANR	5676908	Identifier	lookup4x1to32		5676458	1					
ANR	5676909	PrimaryExpression	0		5676458	1					
ANR	5676910	PrimaryExpression	0		5676458	1					
ANR	5676911	PrimaryExpression	0xff		5676458	1					
ANR	5676912	PrimaryExpression	0		5676458	2					
ANR	5676913	IfStatement	if ( ix & 7 )		5676458	11					
ANR	5676914	Condition	ix & 7	608:12:21360:21365	5676458	0	True				
ANR	5676915	BitAndExpression	ix & 7		5676458	0		&			
ANR	5676916	Identifier	ix		5676458	0					
ANR	5676917	PrimaryExpression	7		5676458	1					
ANR	5676918	ExpressionStatement	"mask = ( byte ) ( 0xff00 >> ( ix & 7 ) ) , scan_line [ ib_left ] = ( save_left & mask ) + ( scan_line [ ib_left ] & ~mask )"	609:12:21380:21518	5676458	1	True				
ANR	5676919	Expression	"mask = ( byte ) ( 0xff00 >> ( ix & 7 ) ) , scan_line [ ib_left ] = ( save_left & mask ) + ( scan_line [ ib_left ] & ~mask )"		5676458	0					
ANR	5676920	AssignmentExpression	mask = ( byte ) ( 0xff00 >> ( ix & 7 ) )		5676458	0		=			
ANR	5676921	Identifier	mask		5676458	0					
ANR	5676922	CastExpression	( byte ) ( 0xff00 >> ( ix & 7 ) )		5676458	1					
ANR	5676923	CastTarget	byte		5676458	0					
ANR	5676924	ShiftExpression	0xff00 >> ( ix & 7 )		5676458	1		>>			
ANR	5676925	PrimaryExpression	0xff00		5676458	0					
ANR	5676926	BitAndExpression	ix & 7		5676458	1		&			
ANR	5676927	Identifier	ix		5676458	0					
ANR	5676928	PrimaryExpression	7		5676458	1					
ANR	5676929	AssignmentExpression	scan_line [ ib_left ] = ( save_left & mask ) + ( scan_line [ ib_left ] & ~mask )		5676458	1		=			
ANR	5676930	ArrayIndexing	scan_line [ ib_left ]		5676458	0					
ANR	5676931	Identifier	scan_line		5676458	0					
ANR	5676932	Identifier	ib_left		5676458	1					
ANR	5676933	AdditiveExpression	( save_left & mask ) + ( scan_line [ ib_left ] & ~mask )		5676458	1		+			
ANR	5676934	BitAndExpression	save_left & mask		5676458	0		&			
ANR	5676935	Identifier	save_left		5676458	0					
ANR	5676936	Identifier	mask		5676458	1					
ANR	5676937	BitAndExpression	scan_line [ ib_left ] & ~mask		5676458	1		&			
ANR	5676938	ArrayIndexing	scan_line [ ib_left ]		5676458	0					
ANR	5676939	Identifier	scan_line		5676458	0					
ANR	5676940	Identifier	ib_left		5676458	1					
ANR	5676941	Identifier	~mask		5676458	1					
ANR	5676942	IfStatement	if ( ( ixr + 1 ) & 7 )		5676458	12					
ANR	5676943	Condition	( ixr + 1 ) & 7	612:12:21532:21544	5676458	0	True				
ANR	5676944	BitAndExpression	( ixr + 1 ) & 7		5676458	0		&			
ANR	5676945	AdditiveExpression	ixr + 1		5676458	0		+			
ANR	5676946	Identifier	ixr		5676458	0					
ANR	5676947	PrimaryExpression	1		5676458	1					
ANR	5676948	PrimaryExpression	7		5676458	1					
ANR	5676949	ExpressionStatement	"mask = ( byte ) ( 0xff00 >> ( ( ixr + 1 ) & 7 ) ) , scan_line [ ib_right ] = ( scan_line [ ib_right ] & mask ) + ( save_right & ~mask )"	613:12:21559:21707	5676458	1	True				
ANR	5676950	Expression	"mask = ( byte ) ( 0xff00 >> ( ( ixr + 1 ) & 7 ) ) , scan_line [ ib_right ] = ( scan_line [ ib_right ] & mask ) + ( save_right & ~mask )"		5676458	0					
ANR	5676951	AssignmentExpression	mask = ( byte ) ( 0xff00 >> ( ( ixr + 1 ) & 7 ) )		5676458	0		=			
ANR	5676952	Identifier	mask		5676458	0					
ANR	5676953	CastExpression	( byte ) ( 0xff00 >> ( ( ixr + 1 ) & 7 ) )		5676458	1					
ANR	5676954	CastTarget	byte		5676458	0					
ANR	5676955	ShiftExpression	0xff00 >> ( ( ixr + 1 ) & 7 )		5676458	1		>>			
ANR	5676956	PrimaryExpression	0xff00		5676458	0					
ANR	5676957	BitAndExpression	( ixr + 1 ) & 7		5676458	1		&			
ANR	5676958	AdditiveExpression	ixr + 1		5676458	0		+			
ANR	5676959	Identifier	ixr		5676458	0					
ANR	5676960	PrimaryExpression	1		5676458	1					
ANR	5676961	PrimaryExpression	7		5676458	1					
ANR	5676962	AssignmentExpression	scan_line [ ib_right ] = ( scan_line [ ib_right ] & mask ) + ( save_right & ~mask )		5676458	1		=			
ANR	5676963	ArrayIndexing	scan_line [ ib_right ]		5676458	0					
ANR	5676964	Identifier	scan_line		5676458	0					
ANR	5676965	Identifier	ib_right		5676458	1					
ANR	5676966	AdditiveExpression	( scan_line [ ib_right ] & mask ) + ( save_right & ~mask )		5676458	1		+			
ANR	5676967	BitAndExpression	scan_line [ ib_right ] & mask		5676458	0		&			
ANR	5676968	ArrayIndexing	scan_line [ ib_right ]		5676458	0					
ANR	5676969	Identifier	scan_line		5676458	0					
ANR	5676970	Identifier	ib_right		5676458	1					
ANR	5676971	Identifier	mask		5676458	1					
ANR	5676972	BitAndExpression	save_right & ~mask		5676458	1		&			
ANR	5676973	Identifier	save_right		5676458	0					
ANR	5676974	Identifier	~mask		5676458	1					
ANR	5676975	IfStatement	if ( ih <= 1 )		5676458	13					
ANR	5676976	Condition	ih <= 1	616:12:21721:21727	5676458	0	True				
ANR	5676977	RelationalExpression	ih <= 1		5676458	0		<=			
ANR	5676978	Identifier	ih		5676458	0					
ANR	5676979	PrimaryExpression	1		5676458	1					
ANR	5676980	ReturnStatement	return 1 ;	617:12:21742:21750	5676458	1	True				
ANR	5676981	PrimaryExpression	1		5676458	0					
ANR	5676982	ExpressionStatement	line = scan_line + ( line_ix >> 3 )	619:8:21801:21834	5676458	14	True				
ANR	5676983	AssignmentExpression	line = scan_line + ( line_ix >> 3 )		5676458	0		=			
ANR	5676984	Identifier	line		5676458	0					
ANR	5676985	AdditiveExpression	scan_line + ( line_ix >> 3 )		5676458	1		+			
ANR	5676986	Identifier	scan_line		5676458	0					
ANR	5676987	ShiftExpression	line_ix >> 3		5676458	1		>>			
ANR	5676988	Identifier	line_ix		5676458	0					
ANR	5676989	PrimaryExpression	3		5676458	1					
ANR	5676990	ForStatement	for ( dy = 1 ; dy < ih ; dy ++ )		5676458	15					
ANR	5676991	ForInit	dy = 1 ;	620:13:21849:21855	5676458	0	True				
ANR	5676992	AssignmentExpression	dy = 1		5676458	0		=			
ANR	5676993	Identifier	dy		5676458	0					
ANR	5676994	PrimaryExpression	1		5676458	1					
ANR	5676995	Condition	dy < ih	620:21:21857:21863	5676458	1	True				
ANR	5676996	RelationalExpression	dy < ih		5676458	0		<			
ANR	5676997	Identifier	dy		5676458	0					
ANR	5676998	Identifier	ih		5676458	1					
ANR	5676999	PostIncDecOperationExpression	dy ++	620:30:21866:21869	5676458	2	True				
ANR	5677000	Identifier	dy		5676458	0					
ANR	5677001	IncDec	++		5676458	1					
ANR	5677002	CompoundStatement		77:12:3089:3276	5676458	3					
ANR	5677003	IdentifierDeclStatement	"int code = ( * copy_mono ) ( dev , line , line_x , line_size , gx_no_bitmap_id , ix , iy + dy , line_width , 1 , ( gx_color_index ) 0 , ( gx_color_index ) 1 ) ;"	621:12:21886:22073	5676458	0	True				
ANR	5677004	IdentifierDecl	"code = ( * copy_mono ) ( dev , line , line_x , line_size , gx_no_bitmap_id , ix , iy + dy , line_width , 1 , ( gx_color_index ) 0 , ( gx_color_index ) 1 )"		5676458	0					
ANR	5677005	IdentifierDeclType	int		5676458	0					
ANR	5677006	Identifier	code		5676458	1					
ANR	5677007	AssignmentExpression	"code = ( * copy_mono ) ( dev , line , line_x , line_size , gx_no_bitmap_id , ix , iy + dy , line_width , 1 , ( gx_color_index ) 0 , ( gx_color_index ) 1 )"		5676458	2		=			
ANR	5677008	Identifier	code		5676458	0					
ANR	5677009	CallExpression	"( * copy_mono ) ( dev , line , line_x , line_size , gx_no_bitmap_id , ix , iy + dy , line_width , 1 , ( gx_color_index ) 0 , ( gx_color_index ) 1 )"		5676458	1					
ANR	5677010	Callee	* copy_mono		5676458	0					
ANR	5677011	UnaryOperationExpression	* copy_mono		5676458	0					
ANR	5677012	UnaryOperator	*		5676458	0					
ANR	5677013	Identifier	copy_mono		5676458	1					
ANR	5677014	ArgumentList	dev		5676458	1					
ANR	5677015	Argument	dev		5676458	0					
ANR	5677016	Identifier	dev		5676458	0					
ANR	5677017	Argument	line		5676458	1					
ANR	5677018	Identifier	line		5676458	0					
ANR	5677019	Argument	line_x		5676458	2					
ANR	5677020	Identifier	line_x		5676458	0					
ANR	5677021	Argument	line_size		5676458	3					
ANR	5677022	Identifier	line_size		5676458	0					
ANR	5677023	Argument	gx_no_bitmap_id		5676458	4					
ANR	5677024	Identifier	gx_no_bitmap_id		5676458	0					
ANR	5677025	Argument	ix		5676458	5					
ANR	5677026	Identifier	ix		5676458	0					
ANR	5677027	Argument	iy + dy		5676458	6					
ANR	5677028	AdditiveExpression	iy + dy		5676458	0		+			
ANR	5677029	Identifier	iy		5676458	0					
ANR	5677030	Identifier	dy		5676458	1					
ANR	5677031	Argument	line_width		5676458	7					
ANR	5677032	Identifier	line_width		5676458	0					
ANR	5677033	Argument	1		5676458	8					
ANR	5677034	PrimaryExpression	1		5676458	0					
ANR	5677035	Argument	( gx_color_index ) 0		5676458	9					
ANR	5677036	CastExpression	( gx_color_index ) 0		5676458	0					
ANR	5677037	CastTarget	gx_color_index		5676458	0					
ANR	5677038	PrimaryExpression	0		5676458	1					
ANR	5677039	Argument	( gx_color_index ) 1		5676458	10					
ANR	5677040	CastExpression	( gx_color_index ) 1		5676458	0					
ANR	5677041	CastTarget	gx_color_index		5676458	0					
ANR	5677042	PrimaryExpression	1		5676458	1					
ANR	5677043	IfStatement	if ( code < 0 )		5676458	1					
ANR	5677044	Condition	code < 0	626:16:22092:22099	5676458	0	True				
ANR	5677045	RelationalExpression	code < 0		5676458	0		<			
ANR	5677046	Identifier	code		5676458	0					
ANR	5677047	PrimaryExpression	0		5676458	1					
ANR	5677048	ReturnStatement	return code ;	627:16:22118:22129	5676458	1	True				
ANR	5677049	Identifier	code		5676458	0					
ANR	5677050	ReturnStatement	return 0 ;	629:8:22149:22157	5676458	16	True				
ANR	5677051	PrimaryExpression	0		5676458	0					
ANR	5677052	ElseStatement	else		5676458	0					
ANR	5677053	CompoundStatement		86:11:3373:3373	5676458	0					
ANR	5677054	ExpressionStatement	line = penum -> line	631:8:22180:22198	5676458	0	True				
ANR	5677055	AssignmentExpression	line = penum -> line		5676458	0		=			
ANR	5677056	Identifier	line		5676458	0					
ANR	5677057	PtrMemberAccess	penum -> line		5676458	1					
ANR	5677058	Identifier	penum		5676458	0					
ANR	5677059	Identifier	line		5676458	1					
ANR	5677060	ExpressionStatement	line_size = penum -> line_size	632:8:22208:22236	5676458	1	True				
ANR	5677061	AssignmentExpression	line_size = penum -> line_size		5676458	0		=			
ANR	5677062	Identifier	line_size		5676458	0					
ANR	5677063	PtrMemberAccess	penum -> line_size		5676458	1					
ANR	5677064	Identifier	penum		5676458	0					
ANR	5677065	Identifier	line_size		5676458	1					
ANR	5677066	ExpressionStatement	line_width = penum -> line_width	633:8:22246:22276	5676458	2	True				
ANR	5677067	AssignmentExpression	line_width = penum -> line_width		5676458	0		=			
ANR	5677068	Identifier	line_width		5676458	0					
ANR	5677069	PtrMemberAccess	penum -> line_width		5676458	1					
ANR	5677070	Identifier	penum		5676458	0					
ANR	5677071	Identifier	line_width		5676458	1					
ANR	5677072	ExpressionStatement	line_x = ix & ( align_bitmap_mod * 8 - 1 )	634:8:22286:22326	5676458	3	True				
ANR	5677073	AssignmentExpression	line_x = ix & ( align_bitmap_mod * 8 - 1 )		5676458	0		=			
ANR	5677074	Identifier	line_x		5676458	0					
ANR	5677075	BitAndExpression	ix & ( align_bitmap_mod * 8 - 1 )		5676458	1		&			
ANR	5677076	Identifier	ix		5676458	0					
ANR	5677077	AdditiveExpression	align_bitmap_mod * 8 - 1		5676458	1		-			
ANR	5677078	MultiplicativeExpression	align_bitmap_mod * 8		5676458	0		*			
ANR	5677079	Identifier	align_bitmap_mod		5676458	0					
ANR	5677080	PrimaryExpression	8		5676458	1					
ANR	5677081	PrimaryExpression	1		5676458	1					
ANR	5677082	ExpressionStatement	"image_simple_expand ( penum -> line , line_x , line_size , buffer , data_x , w , xcur , penum -> x_extent . x , 0 )"	635:8:22336:22490	5676458	4	True				
ANR	5677083	CallExpression	"image_simple_expand ( penum -> line , line_x , line_size , buffer , data_x , w , xcur , penum -> x_extent . x , 0 )"		5676458	0					
ANR	5677084	Callee	image_simple_expand		5676458	0					
ANR	5677085	Identifier	image_simple_expand		5676458	0					
ANR	5677086	ArgumentList	penum -> line		5676458	1					
ANR	5677087	Argument	penum -> line		5676458	0					
ANR	5677088	PtrMemberAccess	penum -> line		5676458	0					
ANR	5677089	Identifier	penum		5676458	0					
ANR	5677090	Identifier	line		5676458	1					
ANR	5677091	Argument	line_x		5676458	1					
ANR	5677092	Identifier	line_x		5676458	0					
ANR	5677093	Argument	line_size		5676458	2					
ANR	5677094	Identifier	line_size		5676458	0					
ANR	5677095	Argument	buffer		5676458	3					
ANR	5677096	Identifier	buffer		5676458	0					
ANR	5677097	Argument	data_x		5676458	4					
ANR	5677098	Identifier	data_x		5676458	0					
ANR	5677099	Argument	w		5676458	5					
ANR	5677100	Identifier	w		5676458	0					
ANR	5677101	Argument	xcur		5676458	6					
ANR	5677102	Identifier	xcur		5676458	0					
ANR	5677103	Argument	penum -> x_extent . x		5676458	7					
ANR	5677104	MemberAccess	penum -> x_extent . x		5676458	0					
ANR	5677105	PtrMemberAccess	penum -> x_extent		5676458	0					
ANR	5677106	Identifier	penum		5676458	0					
ANR	5677107	Identifier	x_extent		5676458	1					
ANR	5677108	Identifier	x		5676458	1					
ANR	5677109	Argument	0		5676458	8					
ANR	5677110	PrimaryExpression	0		5676458	0					
ANR	5677111	IfStatement	if ( dxx < 0 )		5676458	22					
ANR	5677112	Condition	dxx < 0	641:8:22564:22570	5676458	0	True				
ANR	5677113	RelationalExpression	dxx < 0		5676458	0		<			
ANR	5677114	Identifier	dxx		5676458	0					
ANR	5677115	PrimaryExpression	0		5676458	1					
ANR	5677116	ExpressionStatement	ix -= line_width	642:8:22581:22597	5676458	1	True				
ANR	5677117	AssignmentExpression	ix -= line_width		5676458	0		-=			
ANR	5677118	Identifier	ix		5676458	0					
ANR	5677119	Identifier	line_width		5676458	1					
ANR	5677120	ForStatement	for ( dy = 0 ; dy < ih ; dy ++ )		5676458	23					
ANR	5677121	ForInit	dy = 0 ;	643:9:22608:22614	5676458	0	True				
ANR	5677122	AssignmentExpression	dy = 0		5676458	0		=			
ANR	5677123	Identifier	dy		5676458	0					
ANR	5677124	PrimaryExpression	0		5676458	1					
ANR	5677125	Condition	dy < ih	643:17:22616:22622	5676458	1	True				
ANR	5677126	RelationalExpression	dy < ih		5676458	0		<			
ANR	5677127	Identifier	dy		5676458	0					
ANR	5677128	Identifier	ih		5676458	1					
ANR	5677129	PostIncDecOperationExpression	dy ++	643:26:22625:22628	5676458	2	True				
ANR	5677130	Identifier	dy		5676458	0					
ANR	5677131	IncDec	++		5676458	1					
ANR	5677132	CompoundStatement		100:8:3844:3966	5676458	3					
ANR	5677133	IdentifierDeclStatement	"int code = copy_portrait ( penum , line , line_x , line_size , ix , iy + dy , line_width , 1 , dev ) ;"	644:8:22641:22763	5676458	0	True				
ANR	5677134	IdentifierDecl	"code = copy_portrait ( penum , line , line_x , line_size , ix , iy + dy , line_width , 1 , dev )"		5676458	0					
ANR	5677135	IdentifierDeclType	int		5676458	0					
ANR	5677136	Identifier	code		5676458	1					
ANR	5677137	AssignmentExpression	"code = copy_portrait ( penum , line , line_x , line_size , ix , iy + dy , line_width , 1 , dev )"		5676458	2		=			
ANR	5677138	Identifier	code		5676458	0					
ANR	5677139	CallExpression	"copy_portrait ( penum , line , line_x , line_size , ix , iy + dy , line_width , 1 , dev )"		5676458	1					
ANR	5677140	Callee	copy_portrait		5676458	0					
ANR	5677141	Identifier	copy_portrait		5676458	0					
ANR	5677142	ArgumentList	penum		5676458	1					
ANR	5677143	Argument	penum		5676458	0					
ANR	5677144	Identifier	penum		5676458	0					
ANR	5677145	Argument	line		5676458	1					
ANR	5677146	Identifier	line		5676458	0					
ANR	5677147	Argument	line_x		5676458	2					
ANR	5677148	Identifier	line_x		5676458	0					
ANR	5677149	Argument	line_size		5676458	3					
ANR	5677150	Identifier	line_size		5676458	0					
ANR	5677151	Argument	ix		5676458	4					
ANR	5677152	Identifier	ix		5676458	0					
ANR	5677153	Argument	iy + dy		5676458	5					
ANR	5677154	AdditiveExpression	iy + dy		5676458	0		+			
ANR	5677155	Identifier	iy		5676458	0					
ANR	5677156	Identifier	dy		5676458	1					
ANR	5677157	Argument	line_width		5676458	6					
ANR	5677158	Identifier	line_width		5676458	0					
ANR	5677159	Argument	1		5676458	7					
ANR	5677160	PrimaryExpression	1		5676458	0					
ANR	5677161	Argument	dev		5676458	8					
ANR	5677162	Identifier	dev		5676458	0					
ANR	5677163	IfStatement	if ( code < 0 )		5676458	1					
ANR	5677164	Condition	code < 0	647:12:22778:22785	5676458	0	True				
ANR	5677165	RelationalExpression	code < 0		5676458	0		<			
ANR	5677166	Identifier	code		5676458	0					
ANR	5677167	PrimaryExpression	0		5676458	1					
ANR	5677168	ReturnStatement	return code ;	648:12:22800:22811	5676458	1	True				
ANR	5677169	Identifier	code		5676458	0					
ANR	5677170	ReturnStatement	return 1 ;	651:4:22824:22832	5676458	24	True				
ANR	5677171	PrimaryExpression	1		5676458	0					
ANR	5677172	ReturnType	static int		5676458	1					
ANR	5677173	Identifier	image_render_simple		5676458	2					
ANR	5677174	ParameterList	"gx_image_enum * penum , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5676458	3					
ANR	5677175	Parameter	gx_image_enum * penum	543:20:18688:18708	5676458	0	True				
ANR	5677176	ParameterType	gx_image_enum *		5676458	0					
ANR	5677177	Identifier	penum		5676458	1					
ANR	5677178	Parameter	const byte * buffer	543:43:18711:18729	5676458	1	True				
ANR	5677179	ParameterType	const byte *		5676458	0					
ANR	5677180	Identifier	buffer		5676458	1					
ANR	5677181	Parameter	int data_x	543:64:18732:18741	5676458	2	True				
ANR	5677182	ParameterType	int		5676458	0					
ANR	5677183	Identifier	data_x		5676458	1					
ANR	5677184	Parameter	uint w	544:20:18764:18769	5676458	3	True				
ANR	5677185	ParameterType	uint		5676458	0					
ANR	5677186	Identifier	w		5676458	1					
ANR	5677187	Parameter	int h	544:28:18772:18776	5676458	4	True				
ANR	5677188	ParameterType	int		5676458	0					
ANR	5677189	Identifier	h		5676458	1					
ANR	5677190	Parameter	gx_device * dev	544:35:18779:18793	5676458	5	True				
ANR	5677191	ParameterType	gx_device *		5676458	0					
ANR	5677192	Identifier	dev		5676458	1					
ANR	5677193	CFGEntryNode	ENTRY		5676458		True				
ANR	5677194	CFGExitNode	EXIT		5676458		True				
ANR	5677195	Symbol	* ib_right		5676458						
ANR	5677196	Symbol	penum -> x_extent . x		5676458						
ANR	5677197	Symbol	* ib_left		5676458						
ANR	5677198	Symbol	penum -> x_extent		5676458						
ANR	5677199	Symbol	penum -> dda . pixel0		5676458						
ANR	5677200	Symbol	penum -> yci		5676458						
ANR	5677201	Symbol	pdc0 -> colors		5676458						
ANR	5677202	Symbol	data_x		5676458						
ANR	5677203	Symbol	penum -> line_width		5676458						
ANR	5677204	Symbol	dev		5676458						
ANR	5677205	Symbol	pdc0		5676458						
ANR	5677206	Symbol	dy		5676458						
ANR	5677207	Symbol	penum -> line		5676458						
ANR	5677208	Symbol	pdc1		5676458						
ANR	5677209	Symbol	gx_dc_is_pure		5676458						
ANR	5677210	Symbol	* copy_mono		5676458						
ANR	5677211	Symbol	buffer		5676458						
ANR	5677212	Symbol	line_size		5676458						
ANR	5677213	Symbol	ih		5676458						
ANR	5677214	Symbol	DC_IS_NULL		5676458						
ANR	5677215	Symbol	* * penum		5676458						
ANR	5677216	Symbol	ixr		5676458						
ANR	5677217	Symbol	penum		5676458						
ANR	5677218	Symbol	fixed2int_pixround		5676458						
ANR	5677219	Symbol	line_x		5676458						
ANR	5677220	Symbol	ix		5676458						
ANR	5677221	Symbol	iy		5676458						
ANR	5677222	Symbol	penum -> dda		5676458						
ANR	5677223	Symbol	gx_no_bitmap_id		5676458						
ANR	5677224	Symbol	dda_current		5676458						
ANR	5677225	Symbol	pdc1 -> colors		5676458						
ANR	5677226	Symbol	penum -> dxx		5676458						
ANR	5677227	Symbol	align_bitmap_mod		5676458						
ANR	5677228	Symbol	* * penum -> map		5676458						
ANR	5677229	Symbol	* dev		5676458						
ANR	5677230	Symbol	* penum		5676458						
ANR	5677231	Symbol	* * * penum		5676458						
ANR	5677232	Symbol	code		5676458						
ANR	5677233	Symbol	line_width		5676458						
ANR	5677234	Symbol	* penum -> map		5676458						
ANR	5677235	Symbol	line		5676458						
ANR	5677236	Symbol	dev -> height		5676458						
ANR	5677237	Symbol	scan_line		5676458						
ANR	5677238	Symbol	pdc0 -> colors . pure		5676458						
ANR	5677239	Symbol	~mask		5676458						
ANR	5677240	Symbol	* penum -> map [ 0 ] . table . lookup4x1to32		5676458						
ANR	5677241	Symbol	penum -> pgs		5676458						
ANR	5677242	Symbol	penum -> map		5676458						
ANR	5677243	Symbol	dev_proc_copy_mono		5676458						
ANR	5677244	Symbol	line_ix		5676458						
ANR	5677245	Symbol	penum -> line_size		5676458						
ANR	5677246	Symbol	copy_mono		5676458						
ANR	5677247	Symbol	dev_proc		5676458						
ANR	5677248	Symbol	penum -> hci		5676458						
ANR	5677249	Symbol	mask		5676458						
ANR	5677250	Symbol	ib_right		5676458						
ANR	5677251	Symbol	* scan_line		5676458						
ANR	5677252	Symbol	dxx		5676458						
ANR	5677253	Symbol	gx_color_load		5676458						
ANR	5677254	Symbol	h		5676458						
ANR	5677255	Symbol	* penum -> map [ 0 ] . table		5676458						
ANR	5677256	Symbol	penum -> icolor0		5676458						
ANR	5677257	Symbol	penum -> map [ 0 ] . table		5676458						
ANR	5677258	Symbol	penum -> icolor1		5676458						
ANR	5677259	Symbol	xcur		5676458						
ANR	5677260	Symbol	penum -> clip_image		5676458						
ANR	5677261	Symbol	penum -> map [ 0 ] . table . lookup4x1to32		5676458						
ANR	5677262	Symbol	dev -> width		5676458						
ANR	5677263	Symbol	* pdc0		5676458						
ANR	5677264	Symbol	scan_line_base		5676458						
ANR	5677265	Symbol	copy_portrait		5676458						
ANR	5677266	Symbol	w		5676458						
ANR	5677267	Symbol	* pdc1		5676458						
ANR	5677268	Symbol	save_right		5676458						
ANR	5677269	Symbol	ib_left		5676458						
ANR	5677270	Symbol	penum -> dda . pixel0 . x		5676458						
ANR	5677271	Symbol	save_left		5676458						
ANR	5677272	Symbol	pdc1 -> colors . pure		5676458						
ANR	5677273	Symbol	& mem_mono_device		5676458						
ANR	5677274	DeclStmt									
ANR	5677275	Decl							int	"int ( gx_image_enum * , int , int , bool , gx_device * )"	copy_landscape
ANR	5677276	Function	image_render_landscape	657:0:23047:25287							
ANR	5677277	FunctionDef	"image_render_landscape (gx_image_enum * penum , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5677276	0					
ANR	5677278	CompoundStatement		660:0:23192:25287	5677276	0					
ANR	5677279	IdentifierDeclStatement	byte * line = penum -> line ;	661:4:23198:23222	5677276	0	True				
ANR	5677280	IdentifierDecl	* line = penum -> line		5677276	0					
ANR	5677281	IdentifierDeclType	byte *		5677276	0					
ANR	5677282	Identifier	line		5677276	1					
ANR	5677283	AssignmentExpression	* line = penum -> line		5677276	2		=			
ANR	5677284	Identifier	line		5677276	0					
ANR	5677285	PtrMemberAccess	penum -> line		5677276	1					
ANR	5677286	Identifier	penum		5677276	0					
ANR	5677287	Identifier	line		5677276	1					
ANR	5677288	IdentifierDeclStatement	uint raster = bitmap_raster ( penum -> line_width ) ;	662:4:23228:23274	5677276	1	True				
ANR	5677289	IdentifierDecl	raster = bitmap_raster ( penum -> line_width )		5677276	0					
ANR	5677290	IdentifierDeclType	uint		5677276	0					
ANR	5677291	Identifier	raster		5677276	1					
ANR	5677292	AssignmentExpression	raster = bitmap_raster ( penum -> line_width )		5677276	2		=			
ANR	5677293	Identifier	raster		5677276	0					
ANR	5677294	CallExpression	bitmap_raster ( penum -> line_width )		5677276	1					
ANR	5677295	Callee	bitmap_raster		5677276	0					
ANR	5677296	Identifier	bitmap_raster		5677276	0					
ANR	5677297	ArgumentList	penum -> line_width		5677276	1					
ANR	5677298	Argument	penum -> line_width		5677276	0					
ANR	5677299	PtrMemberAccess	penum -> line_width		5677276	0					
ANR	5677300	Identifier	penum		5677276	0					
ANR	5677301	Identifier	line_width		5677276	1					
ANR	5677302	IdentifierDeclStatement	"int ix = penum -> xci , iw = penum -> wci ;"	663:4:23280:23316	5677276	2	True				
ANR	5677303	IdentifierDecl	ix = penum -> xci		5677276	0					
ANR	5677304	IdentifierDeclType	int		5677276	0					
ANR	5677305	Identifier	ix		5677276	1					
ANR	5677306	AssignmentExpression	ix = penum -> xci		5677276	2		=			
ANR	5677307	Identifier	ix		5677276	0					
ANR	5677308	PtrMemberAccess	penum -> xci		5677276	1					
ANR	5677309	Identifier	penum		5677276	0					
ANR	5677310	Identifier	xci		5677276	1					
ANR	5677311	IdentifierDecl	iw = penum -> wci		5677276	1					
ANR	5677312	IdentifierDeclType	int		5677276	0					
ANR	5677313	Identifier	iw		5677276	1					
ANR	5677314	AssignmentExpression	iw = penum -> wci		5677276	2		=			
ANR	5677315	Identifier	iw		5677276	0					
ANR	5677316	PtrMemberAccess	penum -> wci		5677276	1					
ANR	5677317	Identifier	penum		5677276	0					
ANR	5677318	Identifier	wci		5677276	1					
ANR	5677319	IdentifierDeclStatement	"int xinc , xmod ;"	664:4:23322:23336	5677276	3	True				
ANR	5677320	IdentifierDecl	xinc		5677276	0					
ANR	5677321	IdentifierDeclType	int		5677276	0					
ANR	5677322	Identifier	xinc		5677276	1					
ANR	5677323	IdentifierDecl	xmod		5677276	1					
ANR	5677324	IdentifierDeclType	int		5677276	0					
ANR	5677325	Identifier	xmod		5677276	1					
ANR	5677326	IdentifierDeclStatement	byte * row ;	665:4:23342:23351	5677276	4	True				
ANR	5677327	IdentifierDecl	* row		5677276	0					
ANR	5677328	IdentifierDeclType	byte *		5677276	0					
ANR	5677329	Identifier	row		5677276	1					
ANR	5677330	IdentifierDeclStatement	const byte * orig_row = 0 ;	666:4:23357:23381	5677276	5	True				
ANR	5677331	IdentifierDecl	* orig_row = 0		5677276	0					
ANR	5677332	IdentifierDeclType	const byte *		5677276	0					
ANR	5677333	Identifier	orig_row		5677276	1					
ANR	5677334	AssignmentExpression	* orig_row = 0		5677276	2		=			
ANR	5677335	Identifier	orig_row		5677276	0					
ANR	5677336	PrimaryExpression	0		5677276	1					
ANR	5677337	IdentifierDeclStatement	bool y_neg = penum -> dxy < 0 ;	667:4:23387:23414	5677276	6	True				
ANR	5677338	IdentifierDecl	y_neg = penum -> dxy < 0		5677276	0					
ANR	5677339	IdentifierDeclType	bool		5677276	0					
ANR	5677340	Identifier	y_neg		5677276	1					
ANR	5677341	AssignmentExpression	y_neg = penum -> dxy < 0		5677276	2		=			
ANR	5677342	Identifier	y_neg		5677276	0					
ANR	5677343	RelationalExpression	penum -> dxy < 0		5677276	1		<			
ANR	5677344	PtrMemberAccess	penum -> dxy		5677276	0					
ANR	5677345	Identifier	penum		5677276	0					
ANR	5677346	Identifier	dxy		5677276	1					
ANR	5677347	PrimaryExpression	0		5677276	1					
ANR	5677348	IfStatement	if ( is_fneg ( penum -> matrix . yx ) )		5677276	7					
ANR	5677349	Condition	is_fneg ( penum -> matrix . yx )	669:8:23425:23449	5677276	0	True				
ANR	5677350	CallExpression	is_fneg ( penum -> matrix . yx )		5677276	0					
ANR	5677351	Callee	is_fneg		5677276	0					
ANR	5677352	Identifier	is_fneg		5677276	0					
ANR	5677353	ArgumentList	penum -> matrix . yx		5677276	1					
ANR	5677354	Argument	penum -> matrix . yx		5677276	0					
ANR	5677355	MemberAccess	penum -> matrix . yx		5677276	0					
ANR	5677356	PtrMemberAccess	penum -> matrix		5677276	0					
ANR	5677357	Identifier	penum		5677276	0					
ANR	5677358	Identifier	matrix		5677276	1					
ANR	5677359	Identifier	yx		5677276	1					
ANR	5677360	ExpressionStatement	"ix += iw , iw = - iw , xinc = - 1"	670:8:23460:23489	5677276	1	True				
ANR	5677361	Expression	"ix += iw , iw = - iw , xinc = - 1"		5677276	0					
ANR	5677362	AssignmentExpression	ix += iw		5677276	0		+=			
ANR	5677363	Identifier	ix		5677276	0					
ANR	5677364	Identifier	iw		5677276	1					
ANR	5677365	Expression	"iw = - iw , xinc = - 1"		5677276	1					
ANR	5677366	AssignmentExpression	iw = - iw		5677276	0		=			
ANR	5677367	Identifier	iw		5677276	0					
ANR	5677368	UnaryOperationExpression	- iw		5677276	1					
ANR	5677369	UnaryOperator	-		5677276	0					
ANR	5677370	Identifier	iw		5677276	1					
ANR	5677371	AssignmentExpression	xinc = - 1		5677276	1		=			
ANR	5677372	Identifier	xinc		5677276	0					
ANR	5677373	UnaryOperationExpression	- 1		5677276	1					
ANR	5677374	UnaryOperator	-		5677276	0					
ANR	5677375	PrimaryExpression	1		5677276	1					
ANR	5677376	ElseStatement	else		5677276	0					
ANR	5677377	ExpressionStatement	xinc = 1	672:8:23508:23516	5677276	0	True				
ANR	5677378	AssignmentExpression	xinc = 1		5677276	0		=			
ANR	5677379	Identifier	xinc		5677276	0					
ANR	5677380	PrimaryExpression	1		5677276	1					
ANR	5677381	IfStatement	if ( ix != penum -> xi_next || h == 0 )		5677276	8					
ANR	5677382	Condition	ix != penum -> xi_next || h == 0	678:8:23760:23789	5677276	0	True				
ANR	5677383	OrExpression	ix != penum -> xi_next || h == 0		5677276	0		||			
ANR	5677384	EqualityExpression	ix != penum -> xi_next		5677276	0		!=			
ANR	5677385	Identifier	ix		5677276	0					
ANR	5677386	PtrMemberAccess	penum -> xi_next		5677276	1					
ANR	5677387	Identifier	penum		5677276	0					
ANR	5677388	Identifier	xi_next		5677276	1					
ANR	5677389	EqualityExpression	h == 0		5677276	1		==			
ANR	5677390	Identifier	h		5677276	0					
ANR	5677391	PrimaryExpression	0		5677276	1					
ANR	5677392	CompoundStatement		21:8:642:813	5677276	1					
ANR	5677393	IdentifierDeclStatement	int xi = penum -> xi_next ;	679:8:23802:23825	5677276	0	True				
ANR	5677394	IdentifierDecl	xi = penum -> xi_next		5677276	0					
ANR	5677395	IdentifierDeclType	int		5677276	0					
ANR	5677396	Identifier	xi		5677276	1					
ANR	5677397	AssignmentExpression	xi = penum -> xi_next		5677276	2		=			
ANR	5677398	Identifier	xi		5677276	0					
ANR	5677399	PtrMemberAccess	penum -> xi_next		5677276	1					
ANR	5677400	Identifier	penum		5677276	0					
ANR	5677401	Identifier	xi_next		5677276	1					
ANR	5677402	IdentifierDeclStatement	"int code = ( xinc > 0 ? copy_landscape ( penum , penum -> line_xy , xi , y_neg , dev ) : copy_landscape ( penum , xi , penum -> line_xy , y_neg , dev ) ) ;"	680:8:23835:24006	5677276	1	True				
ANR	5677403	IdentifierDecl	"code = ( xinc > 0 ? copy_landscape ( penum , penum -> line_xy , xi , y_neg , dev ) : copy_landscape ( penum , xi , penum -> line_xy , y_neg , dev ) )"		5677276	0					
ANR	5677404	IdentifierDeclType	int		5677276	0					
ANR	5677405	Identifier	code		5677276	1					
ANR	5677406	AssignmentExpression	"code = ( xinc > 0 ? copy_landscape ( penum , penum -> line_xy , xi , y_neg , dev ) : copy_landscape ( penum , xi , penum -> line_xy , y_neg , dev ) )"		5677276	2		=			
ANR	5677407	Identifier	code		5677276	0					
ANR	5677408	ConditionalExpression	"xinc > 0 ? copy_landscape ( penum , penum -> line_xy , xi , y_neg , dev ) : copy_landscape ( penum , xi , penum -> line_xy , y_neg , dev )"		5677276	1					
ANR	5677409	Condition	xinc > 0		5677276	0					
ANR	5677410	RelationalExpression	xinc > 0		5677276	0		>			
ANR	5677411	Identifier	xinc		5677276	0					
ANR	5677412	PrimaryExpression	0		5677276	1					
ANR	5677413	CallExpression	"copy_landscape ( penum , penum -> line_xy , xi , y_neg , dev )"		5677276	1					
ANR	5677414	Callee	copy_landscape		5677276	0					
ANR	5677415	Identifier	copy_landscape		5677276	0					
ANR	5677416	ArgumentList	penum		5677276	1					
ANR	5677417	Argument	penum		5677276	0					
ANR	5677418	Identifier	penum		5677276	0					
ANR	5677419	Argument	penum -> line_xy		5677276	1					
ANR	5677420	PtrMemberAccess	penum -> line_xy		5677276	0					
ANR	5677421	Identifier	penum		5677276	0					
ANR	5677422	Identifier	line_xy		5677276	1					
ANR	5677423	Argument	xi		5677276	2					
ANR	5677424	Identifier	xi		5677276	0					
ANR	5677425	Argument	y_neg		5677276	3					
ANR	5677426	Identifier	y_neg		5677276	0					
ANR	5677427	Argument	dev		5677276	4					
ANR	5677428	Identifier	dev		5677276	0					
ANR	5677429	CallExpression	"copy_landscape ( penum , xi , penum -> line_xy , y_neg , dev )"		5677276	2					
ANR	5677430	Callee	copy_landscape		5677276	0					
ANR	5677431	Identifier	copy_landscape		5677276	0					
ANR	5677432	ArgumentList	penum		5677276	1					
ANR	5677433	Argument	penum		5677276	0					
ANR	5677434	Identifier	penum		5677276	0					
ANR	5677435	Argument	xi		5677276	1					
ANR	5677436	Identifier	xi		5677276	0					
ANR	5677437	Argument	penum -> line_xy		5677276	2					
ANR	5677438	PtrMemberAccess	penum -> line_xy		5677276	0					
ANR	5677439	Identifier	penum		5677276	0					
ANR	5677440	Identifier	line_xy		5677276	1					
ANR	5677441	Argument	y_neg		5677276	3					
ANR	5677442	Identifier	y_neg		5677276	0					
ANR	5677443	Argument	dev		5677276	4					
ANR	5677444	Identifier	dev		5677276	0					
ANR	5677445	IfStatement	if ( code < 0 )		5677276	2					
ANR	5677446	Condition	code < 0	685:12:24021:24028	5677276	0	True				
ANR	5677447	RelationalExpression	code < 0		5677276	0		<			
ANR	5677448	Identifier	code		5677276	0					
ANR	5677449	PrimaryExpression	0		5677276	1					
ANR	5677450	ReturnStatement	return code ;	686:12:24043:24054	5677276	1	True				
ANR	5677451	Identifier	code		5677276	0					
ANR	5677452	ExpressionStatement	penum -> line_xy = penum -> xi_next = ix	687:8:24064:24100	5677276	3	True				
ANR	5677453	AssignmentExpression	penum -> line_xy = penum -> xi_next = ix		5677276	0		=			
ANR	5677454	PtrMemberAccess	penum -> line_xy		5677276	0					
ANR	5677455	Identifier	penum		5677276	0					
ANR	5677456	Identifier	line_xy		5677276	1					
ANR	5677457	AssignmentExpression	penum -> xi_next = ix		5677276	1		=			
ANR	5677458	PtrMemberAccess	penum -> xi_next		5677276	0					
ANR	5677459	Identifier	penum		5677276	0					
ANR	5677460	Identifier	xi_next		5677276	1					
ANR	5677461	Identifier	ix		5677276	1					
ANR	5677462	IfStatement	if ( h == 0 )		5677276	4					
ANR	5677463	Condition	h == 0	688:12:24114:24119	5677276	0	True				
ANR	5677464	EqualityExpression	h == 0		5677276	0		==			
ANR	5677465	Identifier	h		5677276	0					
ANR	5677466	PrimaryExpression	0		5677276	1					
ANR	5677467	ReturnStatement	return code ;	689:12:24134:24145	5677276	1	True				
ANR	5677468	Identifier	code		5677276	0					
ANR	5677469	ForStatement	for ( ; iw != 0 ; iw -= xinc )		5677276	9					
ANR	5677470	Condition	iw != 0	691:11:24164:24170	5677276	0	True				
ANR	5677471	EqualityExpression	iw != 0		5677276	0		!=			
ANR	5677472	Identifier	iw		5677276	0					
ANR	5677473	PrimaryExpression	0		5677276	1					
ANR	5677474	AssignmentExpression	iw -= xinc	691:20:24173:24182	5677276	1	True	-=			
ANR	5677475	Identifier	iw		5677276	0					
ANR	5677476	Identifier	xinc		5677276	1					
ANR	5677477	CompoundStatement		32:32:992:992	5677276	2					
ANR	5677478	IfStatement	if ( xinc < 0 )		5677276	0					
ANR	5677479	Condition	xinc < 0	692:12:24199:24206	5677276	0	True				
ANR	5677480	RelationalExpression	xinc < 0		5677276	0		<			
ANR	5677481	Identifier	xinc		5677276	0					
ANR	5677482	PrimaryExpression	0		5677276	1					
ANR	5677483	ExpressionStatement	-- ix	693:12:24221:24225	5677276	1	True				
ANR	5677484	UnaryExpression	-- ix		5677276	0					
ANR	5677485	IncDec	--		5677276	0					
ANR	5677486	Identifier	ix		5677276	1					
ANR	5677487	ExpressionStatement	xmod = ix & 7	694:8:24235:24248	5677276	1	True				
ANR	5677488	AssignmentExpression	xmod = ix & 7		5677276	0		=			
ANR	5677489	Identifier	xmod		5677276	0					
ANR	5677490	BitAndExpression	ix & 7		5677276	1		&			
ANR	5677491	Identifier	ix		5677276	0					
ANR	5677492	PrimaryExpression	7		5677276	1					
ANR	5677493	ExpressionStatement	row = line + xmod * raster	695:8:24258:24284	5677276	2	True				
ANR	5677494	AssignmentExpression	row = line + xmod * raster		5677276	0		=			
ANR	5677495	Identifier	row		5677276	0					
ANR	5677496	AdditiveExpression	line + xmod * raster		5677276	1		+			
ANR	5677497	Identifier	line		5677276	0					
ANR	5677498	MultiplicativeExpression	xmod * raster		5677276	1		*			
ANR	5677499	Identifier	xmod		5677276	0					
ANR	5677500	Identifier	raster		5677276	1					
ANR	5677501	IfStatement	if ( orig_row == 0 )		5677276	3					
ANR	5677502	Condition	orig_row == 0	696:12:24298:24310	5677276	0	True				
ANR	5677503	EqualityExpression	orig_row == 0		5677276	0		==			
ANR	5677504	Identifier	orig_row		5677276	0					
ANR	5677505	PrimaryExpression	0		5677276	1					
ANR	5677506	CompoundStatement		37:27:1120:1120	5677276	1					
ANR	5677507	ExpressionStatement	"image_simple_expand ( row , 0 , raster , buffer , data_x , w , dda_current ( penum -> dda . pixel0 . y ) , penum -> x_extent . y , 0 )"	697:12:24327:24533	5677276	0	True				
ANR	5677508	CallExpression	"image_simple_expand ( row , 0 , raster , buffer , data_x , w , dda_current ( penum -> dda . pixel0 . y ) , penum -> x_extent . y , 0 )"		5677276	0					
ANR	5677509	Callee	image_simple_expand		5677276	0					
ANR	5677510	Identifier	image_simple_expand		5677276	0					
ANR	5677511	ArgumentList	row		5677276	1					
ANR	5677512	Argument	row		5677276	0					
ANR	5677513	Identifier	row		5677276	0					
ANR	5677514	Argument	0		5677276	1					
ANR	5677515	PrimaryExpression	0		5677276	0					
ANR	5677516	Argument	raster		5677276	2					
ANR	5677517	Identifier	raster		5677276	0					
ANR	5677518	Argument	buffer		5677276	3					
ANR	5677519	Identifier	buffer		5677276	0					
ANR	5677520	Argument	data_x		5677276	4					
ANR	5677521	Identifier	data_x		5677276	0					
ANR	5677522	Argument	w		5677276	5					
ANR	5677523	Identifier	w		5677276	0					
ANR	5677524	Argument	dda_current ( penum -> dda . pixel0 . y )		5677276	6					
ANR	5677525	CallExpression	dda_current ( penum -> dda . pixel0 . y )		5677276	0					
ANR	5677526	Callee	dda_current		5677276	0					
ANR	5677527	Identifier	dda_current		5677276	0					
ANR	5677528	ArgumentList	penum -> dda . pixel0 . y		5677276	1					
ANR	5677529	Argument	penum -> dda . pixel0 . y		5677276	0					
ANR	5677530	MemberAccess	penum -> dda . pixel0 . y		5677276	0					
ANR	5677531	MemberAccess	penum -> dda . pixel0		5677276	0					
ANR	5677532	PtrMemberAccess	penum -> dda		5677276	0					
ANR	5677533	Identifier	penum		5677276	0					
ANR	5677534	Identifier	dda		5677276	1					
ANR	5677535	Identifier	pixel0		5677276	1					
ANR	5677536	Identifier	y		5677276	1					
ANR	5677537	Argument	penum -> x_extent . y		5677276	7					
ANR	5677538	MemberAccess	penum -> x_extent . y		5677276	0					
ANR	5677539	PtrMemberAccess	penum -> x_extent		5677276	0					
ANR	5677540	Identifier	penum		5677276	0					
ANR	5677541	Identifier	x_extent		5677276	1					
ANR	5677542	Identifier	y		5677276	1					
ANR	5677543	Argument	0		5677276	8					
ANR	5677544	PrimaryExpression	0		5677276	0					
ANR	5677545	ExpressionStatement	orig_row = row	701:12:24547:24561	5677276	1	True				
ANR	5677546	AssignmentExpression	orig_row = row		5677276	0		=			
ANR	5677547	Identifier	orig_row		5677276	0					
ANR	5677548	Identifier	row		5677276	1					
ANR	5677549	ElseStatement	else		5677276	0					
ANR	5677550	ExpressionStatement	"memcpy ( row , orig_row , raster )"	703:12:24590:24619	5677276	0	True				
ANR	5677551	CallExpression	"memcpy ( row , orig_row , raster )"		5677276	0					
ANR	5677552	Callee	memcpy		5677276	0					
ANR	5677553	Identifier	memcpy		5677276	0					
ANR	5677554	ArgumentList	row		5677276	1					
ANR	5677555	Argument	row		5677276	0					
ANR	5677556	Identifier	row		5677276	0					
ANR	5677557	Argument	orig_row		5677276	1					
ANR	5677558	Identifier	orig_row		5677276	0					
ANR	5677559	Argument	raster		5677276	2					
ANR	5677560	Identifier	raster		5677276	0					
ANR	5677561	IfStatement	if ( xinc > 0 )		5677276	4					
ANR	5677562	Condition	xinc > 0	704:12:24633:24640	5677276	0	True				
ANR	5677563	RelationalExpression	xinc > 0		5677276	0		>			
ANR	5677564	Identifier	xinc		5677276	0					
ANR	5677565	PrimaryExpression	0		5677276	1					
ANR	5677566	CompoundStatement		45:22:1450:1450	5677276	1					
ANR	5677567	ExpressionStatement	++ ix	705:12:24657:24661	5677276	0	True				
ANR	5677568	UnaryExpression	++ ix		5677276	0					
ANR	5677569	IncDec	++		5677276	0					
ANR	5677570	Identifier	ix		5677276	1					
ANR	5677571	IfStatement	if ( xmod == 7 )		5677276	1					
ANR	5677572	Condition	xmod == 7	706:16:24679:24687	5677276	0	True				
ANR	5677573	EqualityExpression	xmod == 7		5677276	0		==			
ANR	5677574	Identifier	xmod		5677276	0					
ANR	5677575	PrimaryExpression	7		5677276	1					
ANR	5677576	CompoundStatement		48:16:1515:1599	5677276	1					
ANR	5677577	IdentifierDeclStatement	"int code = copy_landscape ( penum , penum -> line_xy , ix , y_neg , dev ) ;"	707:16:24708:24792	5677276	0	True				
ANR	5677578	IdentifierDecl	"code = copy_landscape ( penum , penum -> line_xy , ix , y_neg , dev )"		5677276	0					
ANR	5677579	IdentifierDeclType	int		5677276	0					
ANR	5677580	Identifier	code		5677276	1					
ANR	5677581	AssignmentExpression	"code = copy_landscape ( penum , penum -> line_xy , ix , y_neg , dev )"		5677276	2		=			
ANR	5677582	Identifier	code		5677276	0					
ANR	5677583	CallExpression	"copy_landscape ( penum , penum -> line_xy , ix , y_neg , dev )"		5677276	1					
ANR	5677584	Callee	copy_landscape		5677276	0					
ANR	5677585	Identifier	copy_landscape		5677276	0					
ANR	5677586	ArgumentList	penum		5677276	1					
ANR	5677587	Argument	penum		5677276	0					
ANR	5677588	Identifier	penum		5677276	0					
ANR	5677589	Argument	penum -> line_xy		5677276	1					
ANR	5677590	PtrMemberAccess	penum -> line_xy		5677276	0					
ANR	5677591	Identifier	penum		5677276	0					
ANR	5677592	Identifier	line_xy		5677276	1					
ANR	5677593	Argument	ix		5677276	2					
ANR	5677594	Identifier	ix		5677276	0					
ANR	5677595	Argument	y_neg		5677276	3					
ANR	5677596	Identifier	y_neg		5677276	0					
ANR	5677597	Argument	dev		5677276	4					
ANR	5677598	Identifier	dev		5677276	0					
ANR	5677599	IfStatement	if ( code < 0 )		5677276	1					
ANR	5677600	Condition	code < 0	710:20:24815:24822	5677276	0	True				
ANR	5677601	RelationalExpression	code < 0		5677276	0		<			
ANR	5677602	Identifier	code		5677276	0					
ANR	5677603	PrimaryExpression	0		5677276	1					
ANR	5677604	ReturnStatement	return code ;	711:20:24845:24856	5677276	1	True				
ANR	5677605	Identifier	code		5677276	0					
ANR	5677606	ExpressionStatement	orig_row = 0	712:16:24874:24886	5677276	2	True				
ANR	5677607	AssignmentExpression	orig_row = 0		5677276	0		=			
ANR	5677608	Identifier	orig_row		5677276	0					
ANR	5677609	PrimaryExpression	0		5677276	1					
ANR	5677610	ExpressionStatement	penum -> line_xy = ix	713:16:24904:24923	5677276	3	True				
ANR	5677611	AssignmentExpression	penum -> line_xy = ix		5677276	0		=			
ANR	5677612	PtrMemberAccess	penum -> line_xy		5677276	0					
ANR	5677613	Identifier	penum		5677276	0					
ANR	5677614	Identifier	line_xy		5677276	1					
ANR	5677615	Identifier	ix		5677276	1					
ANR	5677616	ElseStatement	else		5677276	0					
ANR	5677617	CompoundStatement		56:15:1761:1761	5677276	0					
ANR	5677618	IfStatement	if ( xmod == 0 )		5677276	0					
ANR	5677619	Condition	xmod == 0	716:16:24972:24980	5677276	0	True				
ANR	5677620	EqualityExpression	xmod == 0		5677276	0		==			
ANR	5677621	Identifier	xmod		5677276	0					
ANR	5677622	PrimaryExpression	0		5677276	1					
ANR	5677623	CompoundStatement		58:16:1808:1892	5677276	1					
ANR	5677624	IdentifierDeclStatement	"int code = copy_landscape ( penum , ix , penum -> line_xy , y_neg , dev ) ;"	717:16:25001:25085	5677276	0	True				
ANR	5677625	IdentifierDecl	"code = copy_landscape ( penum , ix , penum -> line_xy , y_neg , dev )"		5677276	0					
ANR	5677626	IdentifierDeclType	int		5677276	0					
ANR	5677627	Identifier	code		5677276	1					
ANR	5677628	AssignmentExpression	"code = copy_landscape ( penum , ix , penum -> line_xy , y_neg , dev )"		5677276	2		=			
ANR	5677629	Identifier	code		5677276	0					
ANR	5677630	CallExpression	"copy_landscape ( penum , ix , penum -> line_xy , y_neg , dev )"		5677276	1					
ANR	5677631	Callee	copy_landscape		5677276	0					
ANR	5677632	Identifier	copy_landscape		5677276	0					
ANR	5677633	ArgumentList	penum		5677276	1					
ANR	5677634	Argument	penum		5677276	0					
ANR	5677635	Identifier	penum		5677276	0					
ANR	5677636	Argument	ix		5677276	1					
ANR	5677637	Identifier	ix		5677276	0					
ANR	5677638	Argument	penum -> line_xy		5677276	2					
ANR	5677639	PtrMemberAccess	penum -> line_xy		5677276	0					
ANR	5677640	Identifier	penum		5677276	0					
ANR	5677641	Identifier	line_xy		5677276	1					
ANR	5677642	Argument	y_neg		5677276	3					
ANR	5677643	Identifier	y_neg		5677276	0					
ANR	5677644	Argument	dev		5677276	4					
ANR	5677645	Identifier	dev		5677276	0					
ANR	5677646	IfStatement	if ( code < 0 )		5677276	1					
ANR	5677647	Condition	code < 0	720:20:25108:25115	5677276	0	True				
ANR	5677648	RelationalExpression	code < 0		5677276	0		<			
ANR	5677649	Identifier	code		5677276	0					
ANR	5677650	PrimaryExpression	0		5677276	1					
ANR	5677651	ReturnStatement	return code ;	721:20:25138:25149	5677276	1	True				
ANR	5677652	Identifier	code		5677276	0					
ANR	5677653	ExpressionStatement	orig_row = 0	722:16:25167:25179	5677276	2	True				
ANR	5677654	AssignmentExpression	orig_row = 0		5677276	0		=			
ANR	5677655	Identifier	orig_row		5677276	0					
ANR	5677656	PrimaryExpression	0		5677276	1					
ANR	5677657	ExpressionStatement	penum -> line_xy = ix	723:16:25197:25216	5677276	3	True				
ANR	5677658	AssignmentExpression	penum -> line_xy = ix		5677276	0		=			
ANR	5677659	PtrMemberAccess	penum -> line_xy		5677276	0					
ANR	5677660	Identifier	penum		5677276	0					
ANR	5677661	Identifier	line_xy		5677276	1					
ANR	5677662	Identifier	ix		5677276	1					
ANR	5677663	ExpressionStatement	penum -> xi_next = ix	727:4:25252:25271	5677276	10	True				
ANR	5677664	AssignmentExpression	penum -> xi_next = ix		5677276	0		=			
ANR	5677665	PtrMemberAccess	penum -> xi_next		5677276	0					
ANR	5677666	Identifier	penum		5677276	0					
ANR	5677667	Identifier	xi_next		5677276	1					
ANR	5677668	Identifier	ix		5677276	1					
ANR	5677669	ReturnStatement	return 0 ;	728:4:25277:25285	5677276	11	True				
ANR	5677670	PrimaryExpression	0		5677276	0					
ANR	5677671	ReturnType	static int		5677276	1					
ANR	5677672	Identifier	image_render_landscape		5677276	2					
ANR	5677673	ParameterList	"gx_image_enum * penum , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5677276	3					
ANR	5677674	Parameter	gx_image_enum * penum	658:23:23081:23101	5677276	0	True				
ANR	5677675	ParameterType	gx_image_enum *		5677276	0					
ANR	5677676	Identifier	penum		5677276	1					
ANR	5677677	Parameter	const byte * buffer	658:46:23104:23122	5677276	1	True				
ANR	5677678	ParameterType	const byte *		5677276	0					
ANR	5677679	Identifier	buffer		5677276	1					
ANR	5677680	Parameter	int data_x	658:67:23125:23134	5677276	2	True				
ANR	5677681	ParameterType	int		5677276	0					
ANR	5677682	Identifier	data_x		5677276	1					
ANR	5677683	Parameter	uint w	659:23:23160:23165	5677276	3	True				
ANR	5677684	ParameterType	uint		5677276	0					
ANR	5677685	Identifier	w		5677276	1					
ANR	5677686	Parameter	int h	659:31:23168:23172	5677276	4	True				
ANR	5677687	ParameterType	int		5677276	0					
ANR	5677688	Identifier	h		5677276	1					
ANR	5677689	Parameter	gx_device * dev	659:38:23175:23189	5677276	5	True				
ANR	5677690	ParameterType	gx_device *		5677276	0					
ANR	5677691	Identifier	dev		5677276	1					
ANR	5677692	CFGEntryNode	ENTRY		5677276		True				
ANR	5677693	CFGExitNode	EXIT		5677276		True				
ANR	5677694	Symbol	* penum		5677276						
ANR	5677695	Symbol	penum -> x_extent		5677276						
ANR	5677696	Symbol	code		5677276						
ANR	5677697	Symbol	penum -> dda . pixel0		5677276						
ANR	5677698	Symbol	line		5677276						
ANR	5677699	Symbol	is_fneg		5677276						
ANR	5677700	Symbol	penum -> xci		5677276						
ANR	5677701	Symbol	penum -> wci		5677276						
ANR	5677702	Symbol	penum -> x_extent . y		5677276						
ANR	5677703	Symbol	penum -> matrix		5677276						
ANR	5677704	Symbol	data_x		5677276						
ANR	5677705	Symbol	penum -> line_width		5677276						
ANR	5677706	Symbol	penum -> xi_next		5677276						
ANR	5677707	Symbol	dev		5677276						
ANR	5677708	Symbol	penum -> line		5677276						
ANR	5677709	Symbol	buffer		5677276						
ANR	5677710	Symbol	row		5677276						
ANR	5677711	Symbol	copy_landscape		5677276						
ANR	5677712	Symbol	xinc		5677276						
ANR	5677713	Symbol	y_neg		5677276						
ANR	5677714	Symbol	penum -> matrix . yx		5677276						
ANR	5677715	Symbol	penum		5677276						
ANR	5677716	Symbol	h		5677276						
ANR	5677717	Symbol	raster		5677276						
ANR	5677718	Symbol	iw		5677276						
ANR	5677719	Symbol	bitmap_raster		5677276						
ANR	5677720	Symbol	ix		5677276						
ANR	5677721	Symbol	xi		5677276						
ANR	5677722	Symbol	xmod		5677276						
ANR	5677723	Symbol	orig_row		5677276						
ANR	5677724	Symbol	penum -> dda		5677276						
ANR	5677725	Symbol	dda_current		5677276						
ANR	5677726	Symbol	penum -> dxy		5677276						
ANR	5677727	Symbol	w		5677276						
ANR	5677728	Symbol	penum -> line_xy		5677276						
ANR	5677729	Symbol	penum -> dda . pixel0 . y		5677276						
ANR	5677730	Function	copy_landscape	732:0:25335:26337							
ANR	5677731	FunctionDef	"copy_landscape (gx_image_enum * penum , int x0 , int x1 , bool y_neg , gx_device * dev)"		5677730	0					
ANR	5677732	CompoundStatement		735:0:25444:26337	5677730	0					
ANR	5677733	IdentifierDeclStatement	byte * line = penum -> line ;	736:4:25450:25474	5677730	0	True				
ANR	5677734	IdentifierDecl	* line = penum -> line		5677730	0					
ANR	5677735	IdentifierDeclType	byte *		5677730	0					
ANR	5677736	Identifier	line		5677730	1					
ANR	5677737	AssignmentExpression	* line = penum -> line		5677730	2		=			
ANR	5677738	Identifier	line		5677730	0					
ANR	5677739	PtrMemberAccess	penum -> line		5677730	1					
ANR	5677740	Identifier	penum		5677730	0					
ANR	5677741	Identifier	line		5677730	1					
ANR	5677742	IdentifierDeclStatement	uint line_width = penum -> line_width ;	737:4:25480:25515	5677730	1	True				
ANR	5677743	IdentifierDecl	line_width = penum -> line_width		5677730	0					
ANR	5677744	IdentifierDeclType	uint		5677730	0					
ANR	5677745	Identifier	line_width		5677730	1					
ANR	5677746	AssignmentExpression	line_width = penum -> line_width		5677730	2		=			
ANR	5677747	Identifier	line_width		5677730	0					
ANR	5677748	PtrMemberAccess	penum -> line_width		5677730	1					
ANR	5677749	Identifier	penum		5677730	0					
ANR	5677750	Identifier	line_width		5677730	1					
ANR	5677751	IdentifierDeclStatement	uint raster = bitmap_raster ( line_width ) ;	738:4:25521:25560	5677730	2	True				
ANR	5677752	IdentifierDecl	raster = bitmap_raster ( line_width )		5677730	0					
ANR	5677753	IdentifierDeclType	uint		5677730	0					
ANR	5677754	Identifier	raster		5677730	1					
ANR	5677755	AssignmentExpression	raster = bitmap_raster ( line_width )		5677730	2		=			
ANR	5677756	Identifier	raster		5677730	0					
ANR	5677757	CallExpression	bitmap_raster ( line_width )		5677730	1					
ANR	5677758	Callee	bitmap_raster		5677730	0					
ANR	5677759	Identifier	bitmap_raster		5677730	0					
ANR	5677760	ArgumentList	line_width		5677730	1					
ANR	5677761	Argument	line_width		5677730	0					
ANR	5677762	Identifier	line_width		5677730	0					
ANR	5677763	IdentifierDeclStatement	byte * flipped = line + raster * 8 ;	739:4:25566:25599	5677730	3	True				
ANR	5677764	IdentifierDecl	* flipped = line + raster * 8		5677730	0					
ANR	5677765	IdentifierDeclType	byte *		5677730	0					
ANR	5677766	Identifier	flipped		5677730	1					
ANR	5677767	AssignmentExpression	* flipped = line + raster * 8		5677730	2		=			
ANR	5677768	Identifier	flipped		5677730	0					
ANR	5677769	AdditiveExpression	line + raster * 8		5677730	1		+			
ANR	5677770	Identifier	line		5677730	0					
ANR	5677771	MultiplicativeExpression	raster * 8		5677730	1		*			
ANR	5677772	Identifier	raster		5677730	0					
ANR	5677773	PrimaryExpression	8		5677730	1					
ANR	5677774	IdentifierDeclStatement	int w = x1 - x0 ;	740:4:25605:25620	5677730	4	True				
ANR	5677775	IdentifierDecl	w = x1 - x0		5677730	0					
ANR	5677776	IdentifierDeclType	int		5677730	0					
ANR	5677777	Identifier	w		5677730	1					
ANR	5677778	AssignmentExpression	w = x1 - x0		5677730	2		=			
ANR	5677779	Identifier	w		5677730	0					
ANR	5677780	AdditiveExpression	x1 - x0		5677730	1		-			
ANR	5677781	Identifier	x1		5677730	0					
ANR	5677782	Identifier	x0		5677730	1					
ANR	5677783	IdentifierDeclStatement	int y = fixed2int_pixround ( dda_current ( penum -> dda . pixel0 . y ) ) ;	741:4:25626:25686	5677730	5	True				
ANR	5677784	IdentifierDecl	y = fixed2int_pixround ( dda_current ( penum -> dda . pixel0 . y ) )		5677730	0					
ANR	5677785	IdentifierDeclType	int		5677730	0					
ANR	5677786	Identifier	y		5677730	1					
ANR	5677787	AssignmentExpression	y = fixed2int_pixround ( dda_current ( penum -> dda . pixel0 . y ) )		5677730	2		=			
ANR	5677788	Identifier	y		5677730	0					
ANR	5677789	CallExpression	fixed2int_pixround ( dda_current ( penum -> dda . pixel0 . y ) )		5677730	1					
ANR	5677790	Callee	fixed2int_pixround		5677730	0					
ANR	5677791	Identifier	fixed2int_pixround		5677730	0					
ANR	5677792	ArgumentList	dda_current ( penum -> dda . pixel0 . y )		5677730	1					
ANR	5677793	Argument	dda_current ( penum -> dda . pixel0 . y )		5677730	0					
ANR	5677794	CallExpression	dda_current ( penum -> dda . pixel0 . y )		5677730	0					
ANR	5677795	Callee	dda_current		5677730	0					
ANR	5677796	Identifier	dda_current		5677730	0					
ANR	5677797	ArgumentList	penum -> dda . pixel0 . y		5677730	1					
ANR	5677798	Argument	penum -> dda . pixel0 . y		5677730	0					
ANR	5677799	MemberAccess	penum -> dda . pixel0 . y		5677730	0					
ANR	5677800	MemberAccess	penum -> dda . pixel0		5677730	0					
ANR	5677801	PtrMemberAccess	penum -> dda		5677730	0					
ANR	5677802	Identifier	penum		5677730	0					
ANR	5677803	Identifier	dda		5677730	1					
ANR	5677804	Identifier	pixel0		5677730	1					
ANR	5677805	Identifier	y		5677730	1					
ANR	5677806	IfStatement	if ( w == 0 || line_width == 0 )		5677730	6					
ANR	5677807	Condition	w == 0 || line_width == 0	743:8:25697:25721	5677730	0	True				
ANR	5677808	OrExpression	w == 0 || line_width == 0		5677730	0		||			
ANR	5677809	EqualityExpression	w == 0		5677730	0		==			
ANR	5677810	Identifier	w		5677730	0					
ANR	5677811	PrimaryExpression	0		5677730	1					
ANR	5677812	EqualityExpression	line_width == 0		5677730	1		==			
ANR	5677813	Identifier	line_width		5677730	0					
ANR	5677814	PrimaryExpression	0		5677730	1					
ANR	5677815	ReturnStatement	return 0 ;	744:8:25732:25740	5677730	1	True				
ANR	5677816	PrimaryExpression	0		5677730	0					
ANR	5677817	IfStatement	if ( line_width > 0 )		5677730	7					
ANR	5677818	Condition	line_width > 0	747:8:25843:25856	5677730	0	True				
ANR	5677819	RelationalExpression	line_width > 0		5677730	0		>			
ANR	5677820	Identifier	line_width		5677730	0					
ANR	5677821	PrimaryExpression	0		5677730	1					
ANR	5677822	CompoundStatement		14:8:424:429	5677730	1					
ANR	5677823	IdentifierDeclStatement	int i ;	748:8:25869:25874	5677730	0	True				
ANR	5677824	IdentifierDecl	i		5677730	0					
ANR	5677825	IdentifierDeclType	int		5677730	0					
ANR	5677826	Identifier	i		5677730	1					
ANR	5677827	ForStatement	for ( i = ( line_width - 1 ) >> 3 ; i >= 0 ; -- i )		5677730	1					
ANR	5677828	ForInit	i = ( line_width - 1 ) >> 3 ;	750:13:25890:25915	5677730	0	True				
ANR	5677829	AssignmentExpression	i = ( line_width - 1 ) >> 3		5677730	0		=			
ANR	5677830	Identifier	i		5677730	0					
ANR	5677831	ShiftExpression	( line_width - 1 ) >> 3		5677730	1		>>			
ANR	5677832	AdditiveExpression	line_width - 1		5677730	0		-			
ANR	5677833	Identifier	line_width		5677730	0					
ANR	5677834	PrimaryExpression	1		5677730	1					
ANR	5677835	PrimaryExpression	3		5677730	1					
ANR	5677836	Condition	i >= 0	750:40:25917:25922	5677730	1	True				
ANR	5677837	RelationalExpression	i >= 0		5677730	0		>=			
ANR	5677838	Identifier	i		5677730	0					
ANR	5677839	PrimaryExpression	0		5677730	1					
ANR	5677840	UnaryExpression	-- i	750:48:25925:25927	5677730	2	True				
ANR	5677841	IncDec	--		5677730	0					
ANR	5677842	Identifier	i		5677730	1					
ANR	5677843	ExpressionStatement	"memflip8x8 ( line + i , raster , flipped + ( i << ( log2_align_bitmap_mod + 3 ) ) , align_bitmap_mod )"	751:12:25942:26080	5677730	3	True				
ANR	5677844	CallExpression	"memflip8x8 ( line + i , raster , flipped + ( i << ( log2_align_bitmap_mod + 3 ) ) , align_bitmap_mod )"		5677730	0					
ANR	5677845	Callee	memflip8x8		5677730	0					
ANR	5677846	Identifier	memflip8x8		5677730	0					
ANR	5677847	ArgumentList	line + i		5677730	1					
ANR	5677848	Argument	line + i		5677730	0					
ANR	5677849	AdditiveExpression	line + i		5677730	0		+			
ANR	5677850	Identifier	line		5677730	0					
ANR	5677851	Identifier	i		5677730	1					
ANR	5677852	Argument	raster		5677730	1					
ANR	5677853	Identifier	raster		5677730	0					
ANR	5677854	Argument	flipped + ( i << ( log2_align_bitmap_mod + 3 ) )		5677730	2					
ANR	5677855	AdditiveExpression	flipped + ( i << ( log2_align_bitmap_mod + 3 ) )		5677730	0		+			
ANR	5677856	Identifier	flipped		5677730	0					
ANR	5677857	ShiftExpression	i << ( log2_align_bitmap_mod + 3 )		5677730	1		<<			
ANR	5677858	Identifier	i		5677730	0					
ANR	5677859	AdditiveExpression	log2_align_bitmap_mod + 3		5677730	1		+			
ANR	5677860	Identifier	log2_align_bitmap_mod		5677730	0					
ANR	5677861	PrimaryExpression	3		5677730	1					
ANR	5677862	Argument	align_bitmap_mod		5677730	3					
ANR	5677863	Identifier	align_bitmap_mod		5677730	0					
ANR	5677864	IfStatement	if ( w < 0 )		5677730	8					
ANR	5677865	Condition	w < 0	756:8:26145:26149	5677730	0	True				
ANR	5677866	RelationalExpression	w < 0		5677730	0		<			
ANR	5677867	Identifier	w		5677730	0					
ANR	5677868	PrimaryExpression	0		5677730	1					
ANR	5677869	ExpressionStatement	"x0 = x1 , w = - w"	757:8:26160:26175	5677730	1	True				
ANR	5677870	Expression	"x0 = x1 , w = - w"		5677730	0					
ANR	5677871	AssignmentExpression	x0 = x1		5677730	0		=			
ANR	5677872	Identifier	x0		5677730	0					
ANR	5677873	Identifier	x1		5677730	1					
ANR	5677874	AssignmentExpression	w = - w		5677730	1		=			
ANR	5677875	Identifier	w		5677730	0					
ANR	5677876	UnaryOperationExpression	- w		5677730	1					
ANR	5677877	UnaryOperator	-		5677730	0					
ANR	5677878	Identifier	w		5677730	1					
ANR	5677879	IfStatement	if ( y_neg )		5677730	9					
ANR	5677880	Condition	y_neg	758:8:26185:26189	5677730	0	True				
ANR	5677881	Identifier	y_neg		5677730	0					
ANR	5677882	ExpressionStatement	y -= line_width	759:8:26200:26215	5677730	1	True				
ANR	5677883	AssignmentExpression	y -= line_width		5677730	0		-=			
ANR	5677884	Identifier	y		5677730	0					
ANR	5677885	Identifier	line_width		5677730	1					
ANR	5677886	ReturnStatement	"return copy_portrait ( penum , flipped , x0 & 7 , align_bitmap_mod , x0 , y , w , line_width , dev ) ;"	760:4:26221:26335	5677730	10	True				
ANR	5677887	CallExpression	"copy_portrait ( penum , flipped , x0 & 7 , align_bitmap_mod , x0 , y , w , line_width , dev )"		5677730	0					
ANR	5677888	Callee	copy_portrait		5677730	0					
ANR	5677889	Identifier	copy_portrait		5677730	0					
ANR	5677890	ArgumentList	penum		5677730	1					
ANR	5677891	Argument	penum		5677730	0					
ANR	5677892	Identifier	penum		5677730	0					
ANR	5677893	Argument	flipped		5677730	1					
ANR	5677894	Identifier	flipped		5677730	0					
ANR	5677895	Argument	x0 & 7		5677730	2					
ANR	5677896	BitAndExpression	x0 & 7		5677730	0		&			
ANR	5677897	Identifier	x0		5677730	0					
ANR	5677898	PrimaryExpression	7		5677730	1					
ANR	5677899	Argument	align_bitmap_mod		5677730	3					
ANR	5677900	Identifier	align_bitmap_mod		5677730	0					
ANR	5677901	Argument	x0		5677730	4					
ANR	5677902	Identifier	x0		5677730	0					
ANR	5677903	Argument	y		5677730	5					
ANR	5677904	Identifier	y		5677730	0					
ANR	5677905	Argument	w		5677730	6					
ANR	5677906	Identifier	w		5677730	0					
ANR	5677907	Argument	line_width		5677730	7					
ANR	5677908	Identifier	line_width		5677730	0					
ANR	5677909	Argument	dev		5677730	8					
ANR	5677910	Identifier	dev		5677730	0					
ANR	5677911	ReturnType	static int		5677730	1					
ANR	5677912	Identifier	copy_landscape		5677730	2					
ANR	5677913	ParameterList	"gx_image_enum * penum , int x0 , int x1 , bool y_neg , gx_device * dev"		5677730	3					
ANR	5677914	Parameter	gx_image_enum * penum	733:15:25361:25381	5677730	0	True				
ANR	5677915	ParameterType	gx_image_enum *		5677730	0					
ANR	5677916	Identifier	penum		5677730	1					
ANR	5677917	Parameter	int x0	733:38:25384:25389	5677730	1	True				
ANR	5677918	ParameterType	int		5677730	0					
ANR	5677919	Identifier	x0		5677730	1					
ANR	5677920	Parameter	int x1	733:46:25392:25397	5677730	2	True				
ANR	5677921	ParameterType	int		5677730	0					
ANR	5677922	Identifier	x1		5677730	1					
ANR	5677923	Parameter	bool y_neg	733:54:25400:25409	5677730	3	True				
ANR	5677924	ParameterType	bool		5677730	0					
ANR	5677925	Identifier	y_neg		5677730	1					
ANR	5677926	Parameter	gx_device * dev	734:15:25427:25441	5677730	4	True				
ANR	5677927	ParameterType	gx_device *		5677730	0					
ANR	5677928	Identifier	dev		5677730	1					
ANR	5677929	CFGEntryNode	ENTRY		5677730		True				
ANR	5677930	CFGExitNode	EXIT		5677730		True				
ANR	5677931	Symbol	* penum		5677730						
ANR	5677932	Symbol	flipped		5677730						
ANR	5677933	Symbol	log2_align_bitmap_mod		5677730						
ANR	5677934	Symbol	penum -> dda . pixel0		5677730						
ANR	5677935	Symbol	line_width		5677730						
ANR	5677936	Symbol	line		5677730						
ANR	5677937	Symbol	penum		5677730						
ANR	5677938	Symbol	raster		5677730						
ANR	5677939	Symbol	i		5677730						
ANR	5677940	Symbol	fixed2int_pixround		5677730						
ANR	5677941	Symbol	bitmap_raster		5677730						
ANR	5677942	Symbol	penum -> line_width		5677730						
ANR	5677943	Symbol	penum -> dda		5677730						
ANR	5677944	Symbol	dev		5677730						
ANR	5677945	Symbol	dda_current		5677730						
ANR	5677946	Symbol	penum -> line		5677730						
ANR	5677947	Symbol	copy_portrait		5677730						
ANR	5677948	Symbol	w		5677730						
ANR	5677949	Symbol	x0		5677730						
ANR	5677950	Symbol	align_bitmap_mod		5677730						
ANR	5677951	Symbol	x1		5677730						
ANR	5677952	Symbol	y		5677730						
ANR	5677953	Symbol	y_neg		5677730						
ANR	5677954	Symbol	penum -> dda . pixel0 . y		5677730						
