command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4853580	File	data/converged/CVE-2018-16863_ghostpdl/gdevxalt.c								
ANR	4853581	DeclStmt									
ANR	4853582	Decl							void	void ( void )	gs_shared_init
ANR	4853583	DeclStmt									
ANR	4853584	Decl							const gx_device_X	const gx_device_X	gs_x11_device
ANR	4853585	DeclStmt									
ANR	4853586	Decl							const gx_device_X	const gx_device_X	gs_x11alpha_device
ANR	4853587	ClassDef	<unnamed>	40:8:1244:1534							
ANR	4853588	DeclStmt									
ANR	4853589	Decl							gx_color_index	gx_color_index [ 16 ]	color_cache
ANR	4853590	DeclStmt									
ANR	4853591	Decl									gx_device_X_wrapper
ANR	4853592	DeclStmt									
ANR	4853593	Decl							amc_proc	amc_proc	gs_private_st_suffix_add0_final
ANR	4853594	DeclStmt									
ANR	4853595	Decl							int	"int ( gx_device * * , gx_device * )"	get_dev_target
ANR	4853596	DeclStmt									
ANR	4853597	Decl							int	int ( gx_device * )	get_target_info
ANR	4853598	DeclStmt									
ANR	4853599	Decl							gx_color_index	"gx_color_index ( gx_device * , gx_color_index )"	x_alt_map_color
ANR	4853600	Function	x_clear_color_cache	69:0:2216:2504							
ANR	4853601	FunctionDef	x_clear_color_cache (gx_device * dev)		4853600	0					
ANR	4853602	CompoundStatement		71:0:2291:2504	4853600	0					
ANR	4853603	IdentifierDeclStatement	gx_device_X_wrapper * xdev = ( gx_device_X_wrapper * ) dev ;	72:4:2297:2352	4853600	0	True				
ANR	4853604	IdentifierDecl	* xdev = ( gx_device_X_wrapper * ) dev		4853600	0					
ANR	4853605	IdentifierDeclType	gx_device_X_wrapper *		4853600	0					
ANR	4853606	Identifier	xdev		4853600	1					
ANR	4853607	AssignmentExpression	* xdev = ( gx_device_X_wrapper * ) dev		4853600	2		=			
ANR	4853608	Identifier	xdev		4853600	0					
ANR	4853609	CastExpression	( gx_device_X_wrapper * ) dev		4853600	1					
ANR	4853610	CastTarget	gx_device_X_wrapper *		4853600	0					
ANR	4853611	Identifier	dev		4853600	1					
ANR	4853612	IdentifierDeclStatement	int i ;	73:4:2358:2363	4853600	1	True				
ANR	4853613	IdentifierDecl	i		4853600	0					
ANR	4853614	IdentifierDeclType	int		4853600	0					
ANR	4853615	Identifier	i		4853600	1					
ANR	4853616	ForStatement	for ( i = 0 ; i < countof ( xdev -> color_cache ) ; ++ i )		4853600	2					
ANR	4853617	ForInit	i = 0 ;	75:9:2375:2380	4853600	0	True				
ANR	4853618	AssignmentExpression	i = 0		4853600	0		=			
ANR	4853619	Identifier	i		4853600	0					
ANR	4853620	PrimaryExpression	0		4853600	1					
ANR	4853621	Condition	i < countof ( xdev -> color_cache )	75:16:2382:2411	4853600	1	True				
ANR	4853622	RelationalExpression	i < countof ( xdev -> color_cache )		4853600	0		<			
ANR	4853623	Identifier	i		4853600	0					
ANR	4853624	CallExpression	countof ( xdev -> color_cache )		4853600	1					
ANR	4853625	Callee	countof		4853600	0					
ANR	4853626	Identifier	countof		4853600	0					
ANR	4853627	ArgumentList	xdev -> color_cache		4853600	1					
ANR	4853628	Argument	xdev -> color_cache		4853600	0					
ANR	4853629	PtrMemberAccess	xdev -> color_cache		4853600	0					
ANR	4853630	Identifier	xdev		4853600	0					
ANR	4853631	Identifier	color_cache		4853600	1					
ANR	4853632	UnaryExpression	++ i	75:48:2414:2416	4853600	2	True				
ANR	4853633	IncDec	++		4853600	0					
ANR	4853634	Identifier	i		4853600	1					
ANR	4853635	ExpressionStatement	xdev -> color_cache [ i ] = gx_no_color_index	76:8:2427:2467	4853600	3	True				
ANR	4853636	AssignmentExpression	xdev -> color_cache [ i ] = gx_no_color_index		4853600	0		=			
ANR	4853637	ArrayIndexing	xdev -> color_cache [ i ]		4853600	0					
ANR	4853638	PtrMemberAccess	xdev -> color_cache		4853600	0					
ANR	4853639	Identifier	xdev		4853600	0					
ANR	4853640	Identifier	color_cache		4853600	1					
ANR	4853641	Identifier	i		4853600	1					
ANR	4853642	Identifier	gx_no_color_index		4853600	1					
ANR	4853643	ExpressionStatement	gx_device_decache_colors ( dev )	77:4:2473:2502	4853600	3	True				
ANR	4853644	CallExpression	gx_device_decache_colors ( dev )		4853600	0					
ANR	4853645	Callee	gx_device_decache_colors		4853600	0					
ANR	4853646	Identifier	gx_device_decache_colors		4853600	0					
ANR	4853647	ArgumentList	dev		4853600	1					
ANR	4853648	Argument	dev		4853600	0					
ANR	4853649	Identifier	dev		4853600	0					
ANR	4853650	ReturnType	static void		4853600	1					
ANR	4853651	Identifier	x_clear_color_cache		4853600	2					
ANR	4853652	ParameterList	gx_device * dev		4853600	3					
ANR	4853653	Parameter	gx_device * dev	70:20:2248:2288	4853600	0	True				
ANR	4853654	ParameterType	gx_device *		4853600	0					
ANR	4853655	Identifier	dev		4853600	1					
ANR	4853656	CFGEntryNode	ENTRY		4853600		True				
ANR	4853657	CFGExitNode	EXIT		4853600		True				
ANR	4853658	Symbol	countof		4853600						
ANR	4853659	Symbol	* xdev -> color_cache		4853600						
ANR	4853660	Symbol	gx_no_color_index		4853600						
ANR	4853661	Symbol	* i		4853600						
ANR	4853662	Symbol	dev		4853600						
ANR	4853663	Symbol	xdev		4853600						
ANR	4853664	Symbol	* xdev		4853600						
ANR	4853665	Symbol	* * xdev		4853600						
ANR	4853666	Symbol	xdev -> color_cache		4853600						
ANR	4853667	Symbol	i		4853600						
ANR	4853668	Function	x_wrap_open	82:0:2547:2891							
ANR	4853669	FunctionDef	x_wrap_open (gx_device * dev)		4853668	0					
ANR	4853670	CompoundStatement		84:0:2587:2891	4853668	0					
ANR	4853671	IdentifierDeclStatement	gx_device * tdev ;	85:4:2593:2608	4853668	0	True				
ANR	4853672	IdentifierDecl	* tdev		4853668	0					
ANR	4853673	IdentifierDeclType	gx_device *		4853668	0					
ANR	4853674	Identifier	tdev		4853668	1					
ANR	4853675	IdentifierDeclStatement	"int rcode , code ;"	86:4:2614:2629	4853668	1	True				
ANR	4853676	IdentifierDecl	rcode		4853668	0					
ANR	4853677	IdentifierDeclType	int		4853668	0					
ANR	4853678	Identifier	rcode		4853668	1					
ANR	4853679	IdentifierDecl	code		4853668	1					
ANR	4853680	IdentifierDeclType	int		4853668	0					
ANR	4853681	Identifier	code		4853668	1					
ANR	4853682	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4853668	2					
ANR	4853683	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	88:8:2640:2678	4853668	0	True				
ANR	4853684	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4853668	0		<			
ANR	4853685	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4853668	0		=			
ANR	4853686	Identifier	code		4853668	0					
ANR	4853687	CallExpression	"get_dev_target ( & tdev , dev )"		4853668	1					
ANR	4853688	Callee	get_dev_target		4853668	0					
ANR	4853689	Identifier	get_dev_target		4853668	0					
ANR	4853690	ArgumentList	& tdev		4853668	1					
ANR	4853691	Argument	& tdev		4853668	0					
ANR	4853692	UnaryOperationExpression	& tdev		4853668	0					
ANR	4853693	UnaryOperator	&		4853668	0					
ANR	4853694	Identifier	tdev		4853668	1					
ANR	4853695	Argument	dev		4853668	1					
ANR	4853696	Identifier	dev		4853668	0					
ANR	4853697	PrimaryExpression	0		4853668	1					
ANR	4853698	ReturnStatement	return code ;	89:8:2689:2700	4853668	1	True				
ANR	4853699	Identifier	code		4853668	0					
ANR	4853700	ExpressionStatement	"rcode = ( * dev_proc ( tdev , open_device ) ) ( tdev )"	90:4:2706:2751	4853668	3	True				
ANR	4853701	AssignmentExpression	"rcode = ( * dev_proc ( tdev , open_device ) ) ( tdev )"		4853668	0		=			
ANR	4853702	Identifier	rcode		4853668	0					
ANR	4853703	CallExpression	"( * dev_proc ( tdev , open_device ) ) ( tdev )"		4853668	1					
ANR	4853704	Callee	"* dev_proc ( tdev , open_device )"		4853668	0					
ANR	4853705	UnaryOperationExpression	"* dev_proc ( tdev , open_device )"		4853668	0					
ANR	4853706	UnaryOperator	*		4853668	0					
ANR	4853707	CallExpression	"dev_proc ( tdev , open_device )"		4853668	1					
ANR	4853708	Callee	dev_proc		4853668	0					
ANR	4853709	Identifier	dev_proc		4853668	0					
ANR	4853710	ArgumentList	tdev		4853668	1					
ANR	4853711	Argument	tdev		4853668	0					
ANR	4853712	Identifier	tdev		4853668	0					
ANR	4853713	Argument	open_device		4853668	1					
ANR	4853714	Identifier	open_device		4853668	0					
ANR	4853715	ArgumentList	tdev		4853668	1					
ANR	4853716	Argument	tdev		4853668	0					
ANR	4853717	Identifier	tdev		4853668	0					
ANR	4853718	IfStatement	if ( rcode < 0 )		4853668	4					
ANR	4853719	Condition	rcode < 0	91:8:2761:2769	4853668	0	True				
ANR	4853720	RelationalExpression	rcode < 0		4853668	0		<			
ANR	4853721	Identifier	rcode		4853668	0					
ANR	4853722	PrimaryExpression	0		4853668	1					
ANR	4853723	ReturnStatement	return rcode ;	92:8:2780:2792	4853668	1	True				
ANR	4853724	Identifier	rcode		4853668	0					
ANR	4853725	ExpressionStatement	tdev -> is_open = true	93:4:2798:2818	4853668	5	True				
ANR	4853726	AssignmentExpression	tdev -> is_open = true		4853668	0		=			
ANR	4853727	PtrMemberAccess	tdev -> is_open		4853668	0					
ANR	4853728	Identifier	tdev		4853668	0					
ANR	4853729	Identifier	is_open		4853668	1					
ANR	4853730	Identifier	true		4853668	1					
ANR	4853731	ExpressionStatement	code = get_target_info ( dev )	94:4:2824:2851	4853668	6	True				
ANR	4853732	AssignmentExpression	code = get_target_info ( dev )		4853668	0		=			
ANR	4853733	Identifier	code		4853668	0					
ANR	4853734	CallExpression	get_target_info ( dev )		4853668	1					
ANR	4853735	Callee	get_target_info		4853668	0					
ANR	4853736	Identifier	get_target_info		4853668	0					
ANR	4853737	ArgumentList	dev		4853668	1					
ANR	4853738	Argument	dev		4853668	0					
ANR	4853739	Identifier	dev		4853668	0					
ANR	4853740	ReturnStatement	return ( code < 0 ? code : rcode ) ;	95:4:2857:2889	4853668	7	True				
ANR	4853741	ConditionalExpression	code < 0 ? code : rcode		4853668	0					
ANR	4853742	Condition	code < 0		4853668	0					
ANR	4853743	RelationalExpression	code < 0		4853668	0		<			
ANR	4853744	Identifier	code		4853668	0					
ANR	4853745	PrimaryExpression	0		4853668	1					
ANR	4853746	Identifier	code		4853668	1					
ANR	4853747	Identifier	rcode		4853668	2					
ANR	4853748	ReturnType	static int		4853668	1					
ANR	4853749	Identifier	x_wrap_open		4853668	2					
ANR	4853750	ParameterList	gx_device * dev		4853668	3					
ANR	4853751	Parameter	gx_device * dev	83:12:2570:2584	4853668	0	True				
ANR	4853752	ParameterType	gx_device *		4853668	0					
ANR	4853753	Identifier	dev		4853668	1					
ANR	4853754	CFGEntryNode	ENTRY		4853668		True				
ANR	4853755	CFGExitNode	EXIT		4853668		True				
ANR	4853756	Symbol	code		4853668						
ANR	4853757	Symbol	* dev_proc		4853668						
ANR	4853758	Symbol	rcode		4853668						
ANR	4853759	Symbol	& tdev		4853668						
ANR	4853760	Symbol	open_device		4853668						
ANR	4853761	Symbol	get_dev_target		4853668						
ANR	4853762	Symbol	* tdev		4853668						
ANR	4853763	Symbol	dev		4853668						
ANR	4853764	Symbol	dev_proc		4853668						
ANR	4853765	Symbol	tdev		4853668						
ANR	4853766	Symbol	true		4853668						
ANR	4853767	Symbol	tdev -> is_open		4853668						
ANR	4853768	Symbol	get_target_info		4853668						
ANR	4853769	Symbol	"* dev_proc ( tdev , open_device )"		4853668						
ANR	4853770	Function	x_forward_sync_output	98:0:2894:3102							
ANR	4853771	FunctionDef	x_forward_sync_output (gx_device * dev)		4853770	0					
ANR	4853772	CompoundStatement		100:0:2944:3102	4853770	0					
ANR	4853773	IdentifierDeclStatement	gx_device * tdev ;	101:4:2950:2965	4853770	0	True				
ANR	4853774	IdentifierDecl	* tdev		4853770	0					
ANR	4853775	IdentifierDeclType	gx_device *		4853770	0					
ANR	4853776	Identifier	tdev		4853770	1					
ANR	4853777	IdentifierDeclStatement	int code ;	102:4:2971:2979	4853770	1	True				
ANR	4853778	IdentifierDecl	code		4853770	0					
ANR	4853779	IdentifierDeclType	int		4853770	0					
ANR	4853780	Identifier	code		4853770	1					
ANR	4853781	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4853770	2					
ANR	4853782	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	104:8:2990:3028	4853770	0	True				
ANR	4853783	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4853770	0		<			
ANR	4853784	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4853770	0		=			
ANR	4853785	Identifier	code		4853770	0					
ANR	4853786	CallExpression	"get_dev_target ( & tdev , dev )"		4853770	1					
ANR	4853787	Callee	get_dev_target		4853770	0					
ANR	4853788	Identifier	get_dev_target		4853770	0					
ANR	4853789	ArgumentList	& tdev		4853770	1					
ANR	4853790	Argument	& tdev		4853770	0					
ANR	4853791	UnaryOperationExpression	& tdev		4853770	0					
ANR	4853792	UnaryOperator	&		4853770	0					
ANR	4853793	Identifier	tdev		4853770	1					
ANR	4853794	Argument	dev		4853770	1					
ANR	4853795	Identifier	dev		4853770	0					
ANR	4853796	PrimaryExpression	0		4853770	1					
ANR	4853797	ReturnStatement	return code ;	105:8:3039:3050	4853770	1	True				
ANR	4853798	Identifier	code		4853770	0					
ANR	4853799	ReturnStatement	"return ( * dev_proc ( tdev , sync_output ) ) ( tdev ) ;"	106:4:3056:3100	4853770	3	True				
ANR	4853800	CallExpression	"( * dev_proc ( tdev , sync_output ) ) ( tdev )"		4853770	0					
ANR	4853801	Callee	"* dev_proc ( tdev , sync_output )"		4853770	0					
ANR	4853802	UnaryOperationExpression	"* dev_proc ( tdev , sync_output )"		4853770	0					
ANR	4853803	UnaryOperator	*		4853770	0					
ANR	4853804	CallExpression	"dev_proc ( tdev , sync_output )"		4853770	1					
ANR	4853805	Callee	dev_proc		4853770	0					
ANR	4853806	Identifier	dev_proc		4853770	0					
ANR	4853807	ArgumentList	tdev		4853770	1					
ANR	4853808	Argument	tdev		4853770	0					
ANR	4853809	Identifier	tdev		4853770	0					
ANR	4853810	Argument	sync_output		4853770	1					
ANR	4853811	Identifier	sync_output		4853770	0					
ANR	4853812	ArgumentList	tdev		4853770	1					
ANR	4853813	Argument	tdev		4853770	0					
ANR	4853814	Identifier	tdev		4853770	0					
ANR	4853815	ReturnType	static int		4853770	1					
ANR	4853816	Identifier	x_forward_sync_output		4853770	2					
ANR	4853817	ParameterList	gx_device * dev		4853770	3					
ANR	4853818	Parameter	gx_device * dev	99:22:2927:2941	4853770	0	True				
ANR	4853819	ParameterType	gx_device *		4853770	0					
ANR	4853820	Identifier	dev		4853770	1					
ANR	4853821	CFGEntryNode	ENTRY		4853770		True				
ANR	4853822	CFGExitNode	EXIT		4853770		True				
ANR	4853823	Symbol	get_dev_target		4853770						
ANR	4853824	Symbol	"* dev_proc ( tdev , sync_output )"		4853770						
ANR	4853825	Symbol	code		4853770						
ANR	4853826	Symbol	dev		4853770						
ANR	4853827	Symbol	dev_proc		4853770						
ANR	4853828	Symbol	* dev_proc		4853770						
ANR	4853829	Symbol	tdev		4853770						
ANR	4853830	Symbol	& tdev		4853770						
ANR	4853831	Symbol	sync_output		4853770						
ANR	4853832	Function	x_forward_output_page	109:0:3105:3359							
ANR	4853833	FunctionDef	"x_forward_output_page (gx_device * dev , int num_copies , int flush)"		4853832	0					
ANR	4853834	CompoundStatement		111:0:3182:3359	4853832	0					
ANR	4853835	IdentifierDeclStatement	gx_device * tdev ;	112:4:3188:3203	4853832	0	True				
ANR	4853836	IdentifierDecl	* tdev		4853832	0					
ANR	4853837	IdentifierDeclType	gx_device *		4853832	0					
ANR	4853838	Identifier	tdev		4853832	1					
ANR	4853839	IdentifierDeclStatement	int code ;	113:4:3209:3217	4853832	1	True				
ANR	4853840	IdentifierDecl	code		4853832	0					
ANR	4853841	IdentifierDeclType	int		4853832	0					
ANR	4853842	Identifier	code		4853832	1					
ANR	4853843	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4853832	2					
ANR	4853844	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	115:8:3228:3266	4853832	0	True				
ANR	4853845	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4853832	0		<			
ANR	4853846	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4853832	0		=			
ANR	4853847	Identifier	code		4853832	0					
ANR	4853848	CallExpression	"get_dev_target ( & tdev , dev )"		4853832	1					
ANR	4853849	Callee	get_dev_target		4853832	0					
ANR	4853850	Identifier	get_dev_target		4853832	0					
ANR	4853851	ArgumentList	& tdev		4853832	1					
ANR	4853852	Argument	& tdev		4853832	0					
ANR	4853853	UnaryOperationExpression	& tdev		4853832	0					
ANR	4853854	UnaryOperator	&		4853832	0					
ANR	4853855	Identifier	tdev		4853832	1					
ANR	4853856	Argument	dev		4853832	1					
ANR	4853857	Identifier	dev		4853832	0					
ANR	4853858	PrimaryExpression	0		4853832	1					
ANR	4853859	ReturnStatement	return code ;	116:8:3277:3288	4853832	1	True				
ANR	4853860	Identifier	code		4853832	0					
ANR	4853861	ReturnStatement	"return ( * dev_proc ( tdev , output_page ) ) ( tdev , num_copies , flush ) ;"	117:4:3294:3357	4853832	3	True				
ANR	4853862	CallExpression	"( * dev_proc ( tdev , output_page ) ) ( tdev , num_copies , flush )"		4853832	0					
ANR	4853863	Callee	"* dev_proc ( tdev , output_page )"		4853832	0					
ANR	4853864	UnaryOperationExpression	"* dev_proc ( tdev , output_page )"		4853832	0					
ANR	4853865	UnaryOperator	*		4853832	0					
ANR	4853866	CallExpression	"dev_proc ( tdev , output_page )"		4853832	1					
ANR	4853867	Callee	dev_proc		4853832	0					
ANR	4853868	Identifier	dev_proc		4853832	0					
ANR	4853869	ArgumentList	tdev		4853832	1					
ANR	4853870	Argument	tdev		4853832	0					
ANR	4853871	Identifier	tdev		4853832	0					
ANR	4853872	Argument	output_page		4853832	1					
ANR	4853873	Identifier	output_page		4853832	0					
ANR	4853874	ArgumentList	tdev		4853832	1					
ANR	4853875	Argument	tdev		4853832	0					
ANR	4853876	Identifier	tdev		4853832	0					
ANR	4853877	Argument	num_copies		4853832	1					
ANR	4853878	Identifier	num_copies		4853832	0					
ANR	4853879	Argument	flush		4853832	2					
ANR	4853880	Identifier	flush		4853832	0					
ANR	4853881	ReturnType	static int		4853832	1					
ANR	4853882	Identifier	x_forward_output_page		4853832	2					
ANR	4853883	ParameterList	"gx_device * dev , int num_copies , int flush"		4853832	3					
ANR	4853884	Parameter	gx_device * dev	110:22:3138:3152	4853832	0	True				
ANR	4853885	ParameterType	gx_device *		4853832	0					
ANR	4853886	Identifier	dev		4853832	1					
ANR	4853887	Parameter	int num_copies	110:39:3155:3168	4853832	1	True				
ANR	4853888	ParameterType	int		4853832	0					
ANR	4853889	Identifier	num_copies		4853832	1					
ANR	4853890	Parameter	int flush	110:55:3171:3179	4853832	2	True				
ANR	4853891	ParameterType	int		4853832	0					
ANR	4853892	Identifier	flush		4853832	1					
ANR	4853893	CFGEntryNode	ENTRY		4853832		True				
ANR	4853894	CFGExitNode	EXIT		4853832		True				
ANR	4853895	Symbol	get_dev_target		4853832						
ANR	4853896	Symbol	code		4853832						
ANR	4853897	Symbol	dev		4853832						
ANR	4853898	Symbol	flush		4853832						
ANR	4853899	Symbol	"* dev_proc ( tdev , output_page )"		4853832						
ANR	4853900	Symbol	* dev_proc		4853832						
ANR	4853901	Symbol	dev_proc		4853832						
ANR	4853902	Symbol	tdev		4853832						
ANR	4853903	Symbol	output_page		4853832						
ANR	4853904	Symbol	num_copies		4853832						
ANR	4853905	Symbol	& tdev		4853832						
ANR	4853906	Function	x_wrap_close	120:0:3362:3684							
ANR	4853907	FunctionDef	x_wrap_close (gx_device * dev)		4853906	0					
ANR	4853908	CompoundStatement		122:0:3403:3684	4853906	0					
ANR	4853909	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) dev , NULL )"	128:4:3586:3638	4853906	0	True				
ANR	4853910	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) dev , NULL )"		4853906	0					
ANR	4853911	Callee	gx_device_set_target		4853906	0					
ANR	4853912	Identifier	gx_device_set_target		4853906	0					
ANR	4853913	ArgumentList	( gx_device_forward * ) dev		4853906	1					
ANR	4853914	Argument	( gx_device_forward * ) dev		4853906	0					
ANR	4853915	CastExpression	( gx_device_forward * ) dev		4853906	0					
ANR	4853916	CastTarget	gx_device_forward *		4853906	0					
ANR	4853917	Identifier	dev		4853906	1					
ANR	4853918	Argument	NULL		4853906	1					
ANR	4853919	Identifier	NULL		4853906	0					
ANR	4853920	ExpressionStatement	x_clear_color_cache ( dev )	129:4:3644:3668	4853906	1	True				
ANR	4853921	CallExpression	x_clear_color_cache ( dev )		4853906	0					
ANR	4853922	Callee	x_clear_color_cache		4853906	0					
ANR	4853923	Identifier	x_clear_color_cache		4853906	0					
ANR	4853924	ArgumentList	dev		4853906	1					
ANR	4853925	Argument	dev		4853906	0					
ANR	4853926	Identifier	dev		4853906	0					
ANR	4853927	ReturnStatement	return 0 ;	130:4:3674:3682	4853906	2	True				
ANR	4853928	PrimaryExpression	0		4853906	0					
ANR	4853929	ReturnType	static int		4853906	1					
ANR	4853930	Identifier	x_wrap_close		4853906	2					
ANR	4853931	ParameterList	gx_device * dev		4853906	3					
ANR	4853932	Parameter	gx_device * dev	121:13:3386:3400	4853906	0	True				
ANR	4853933	ParameterType	gx_device *		4853906	0					
ANR	4853934	Identifier	dev		4853906	1					
ANR	4853935	CFGEntryNode	ENTRY		4853906		True				
ANR	4853936	CFGExitNode	EXIT		4853906		True				
ANR	4853937	Symbol	NULL		4853906						
ANR	4853938	Symbol	dev		4853906						
ANR	4853939	Function	x_wrap_map_color_rgb	133:0:3687:4088							
ANR	4853940	FunctionDef	"x_wrap_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		4853939	0					
ANR	4853941	CompoundStatement		136:0:3803:4088	4853939	0					
ANR	4853942	IdentifierDeclStatement	gx_device * tdev ;	137:4:3809:3824	4853939	0	True				
ANR	4853943	IdentifierDecl	* tdev		4853939	0					
ANR	4853944	IdentifierDeclType	gx_device *		4853939	0					
ANR	4853945	Identifier	tdev		4853939	1					
ANR	4853946	IdentifierDeclStatement	int code ;	138:4:3830:3838	4853939	1	True				
ANR	4853947	IdentifierDecl	code		4853939	0					
ANR	4853948	IdentifierDeclType	int		4853939	0					
ANR	4853949	Identifier	code		4853939	1					
ANR	4853950	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4853939	2					
ANR	4853951	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	140:8:3849:3887	4853939	0	True				
ANR	4853952	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4853939	0		<			
ANR	4853953	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4853939	0		=			
ANR	4853954	Identifier	code		4853939	0					
ANR	4853955	CallExpression	"get_dev_target ( & tdev , dev )"		4853939	1					
ANR	4853956	Callee	get_dev_target		4853939	0					
ANR	4853957	Identifier	get_dev_target		4853939	0					
ANR	4853958	ArgumentList	& tdev		4853939	1					
ANR	4853959	Argument	& tdev		4853939	0					
ANR	4853960	UnaryOperationExpression	& tdev		4853939	0					
ANR	4853961	UnaryOperator	&		4853939	0					
ANR	4853962	Identifier	tdev		4853939	1					
ANR	4853963	Argument	dev		4853939	1					
ANR	4853964	Identifier	dev		4853939	0					
ANR	4853965	PrimaryExpression	0		4853939	1					
ANR	4853966	ReturnStatement	return code ;	141:8:3898:3909	4853939	1	True				
ANR	4853967	Identifier	code		4853939	0					
ANR	4853968	ReturnStatement	"return ( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , x_alt_map_color ( dev , color ) , prgb ) ;"	142:4:3915:4086	4853939	3	True				
ANR	4853969	CallExpression	"( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , x_alt_map_color ( dev , color ) , prgb )"		4853939	0					
ANR	4853970	Callee	"* dev_proc ( tdev , map_color_rgb )"		4853939	0					
ANR	4853971	UnaryOperationExpression	"* dev_proc ( tdev , map_color_rgb )"		4853939	0					
ANR	4853972	UnaryOperator	*		4853939	0					
ANR	4853973	CallExpression	"dev_proc ( tdev , map_color_rgb )"		4853939	1					
ANR	4853974	Callee	dev_proc		4853939	0					
ANR	4853975	Identifier	dev_proc		4853939	0					
ANR	4853976	ArgumentList	tdev		4853939	1					
ANR	4853977	Argument	tdev		4853939	0					
ANR	4853978	Identifier	tdev		4853939	0					
ANR	4853979	Argument	map_color_rgb		4853939	1					
ANR	4853980	Identifier	map_color_rgb		4853939	0					
ANR	4853981	ArgumentList	tdev		4853939	1					
ANR	4853982	Argument	tdev		4853939	0					
ANR	4853983	Identifier	tdev		4853939	0					
ANR	4853984	Argument	"x_alt_map_color ( dev , color )"		4853939	1					
ANR	4853985	CallExpression	"x_alt_map_color ( dev , color )"		4853939	0					
ANR	4853986	Callee	x_alt_map_color		4853939	0					
ANR	4853987	Identifier	x_alt_map_color		4853939	0					
ANR	4853988	ArgumentList	dev		4853939	1					
ANR	4853989	Argument	dev		4853939	0					
ANR	4853990	Identifier	dev		4853939	0					
ANR	4853991	Argument	color		4853939	1					
ANR	4853992	Identifier	color		4853939	0					
ANR	4853993	Argument	prgb		4853939	2					
ANR	4853994	Identifier	prgb		4853939	0					
ANR	4853995	ReturnType	static int		4853939	1					
ANR	4853996	Identifier	x_wrap_map_color_rgb		4853939	2					
ANR	4853997	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		4853939	3					
ANR	4853998	Parameter	gx_device * dev	134:21:3719:3733	4853939	0	True				
ANR	4853999	ParameterType	gx_device *		4853939	0					
ANR	4854000	Identifier	dev		4853939	1					
ANR	4854001	Parameter	gx_color_index color	134:38:3736:3755	4853939	1	True				
ANR	4854002	ParameterType	gx_color_index		4853939	0					
ANR	4854003	Identifier	color		4853939	1					
ANR	4854004	Parameter	gx_color_value prgb [ 3 ]	135:21:3779:3800	4853939	2	True				
ANR	4854005	ParameterType	gx_color_value [ 3 ]		4853939	0					
ANR	4854006	Identifier	prgb		4853939	1					
ANR	4854007	CFGEntryNode	ENTRY		4853939		True				
ANR	4854008	CFGExitNode	EXIT		4853939		True				
ANR	4854009	Symbol	get_dev_target		4853939						
ANR	4854010	Symbol	x_alt_map_color		4853939						
ANR	4854011	Symbol	code		4853939						
ANR	4854012	Symbol	dev		4853939						
ANR	4854013	Symbol	color		4853939						
ANR	4854014	Symbol	* dev_proc		4853939						
ANR	4854015	Symbol	dev_proc		4853939						
ANR	4854016	Symbol	tdev		4853939						
ANR	4854017	Symbol	prgb		4853939						
ANR	4854018	Symbol	& tdev		4853939						
ANR	4854019	Symbol	"* dev_proc ( tdev , map_color_rgb )"		4853939						
ANR	4854020	Symbol	map_color_rgb		4853939						
ANR	4854021	Function	x_wrap_fill_rectangle	147:0:4091:4461							
ANR	4854022	FunctionDef	"x_wrap_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		4854021	0					
ANR	4854023	CompoundStatement		150:0:4213:4461	4854021	0					
ANR	4854024	IdentifierDeclStatement	gx_device * tdev ;	151:4:4219:4234	4854021	0	True				
ANR	4854025	IdentifierDecl	* tdev		4854021	0					
ANR	4854026	IdentifierDeclType	gx_device *		4854021	0					
ANR	4854027	Identifier	tdev		4854021	1					
ANR	4854028	IdentifierDeclStatement	int code ;	152:4:4240:4248	4854021	1	True				
ANR	4854029	IdentifierDecl	code		4854021	0					
ANR	4854030	IdentifierDeclType	int		4854021	0					
ANR	4854031	Identifier	code		4854021	1					
ANR	4854032	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4854021	2					
ANR	4854033	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	154:8:4259:4297	4854021	0	True				
ANR	4854034	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4854021	0		<			
ANR	4854035	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4854021	0		=			
ANR	4854036	Identifier	code		4854021	0					
ANR	4854037	CallExpression	"get_dev_target ( & tdev , dev )"		4854021	1					
ANR	4854038	Callee	get_dev_target		4854021	0					
ANR	4854039	Identifier	get_dev_target		4854021	0					
ANR	4854040	ArgumentList	& tdev		4854021	1					
ANR	4854041	Argument	& tdev		4854021	0					
ANR	4854042	UnaryOperationExpression	& tdev		4854021	0					
ANR	4854043	UnaryOperator	&		4854021	0					
ANR	4854044	Identifier	tdev		4854021	1					
ANR	4854045	Argument	dev		4854021	1					
ANR	4854046	Identifier	dev		4854021	0					
ANR	4854047	PrimaryExpression	0		4854021	1					
ANR	4854048	ReturnStatement	return code ;	155:8:4308:4319	4854021	1	True				
ANR	4854049	Identifier	code		4854021	0					
ANR	4854050	ReturnStatement	"return ( * dev_proc ( tdev , fill_rectangle ) ) ( tdev , x , y , w , h , x_alt_map_color ( dev , color ) ) ;"	156:4:4325:4459	4854021	3	True				
ANR	4854051	CallExpression	"( * dev_proc ( tdev , fill_rectangle ) ) ( tdev , x , y , w , h , x_alt_map_color ( dev , color ) )"		4854021	0					
ANR	4854052	Callee	"* dev_proc ( tdev , fill_rectangle )"		4854021	0					
ANR	4854053	UnaryOperationExpression	"* dev_proc ( tdev , fill_rectangle )"		4854021	0					
ANR	4854054	UnaryOperator	*		4854021	0					
ANR	4854055	CallExpression	"dev_proc ( tdev , fill_rectangle )"		4854021	1					
ANR	4854056	Callee	dev_proc		4854021	0					
ANR	4854057	Identifier	dev_proc		4854021	0					
ANR	4854058	ArgumentList	tdev		4854021	1					
ANR	4854059	Argument	tdev		4854021	0					
ANR	4854060	Identifier	tdev		4854021	0					
ANR	4854061	Argument	fill_rectangle		4854021	1					
ANR	4854062	Identifier	fill_rectangle		4854021	0					
ANR	4854063	ArgumentList	tdev		4854021	1					
ANR	4854064	Argument	tdev		4854021	0					
ANR	4854065	Identifier	tdev		4854021	0					
ANR	4854066	Argument	x		4854021	1					
ANR	4854067	Identifier	x		4854021	0					
ANR	4854068	Argument	y		4854021	2					
ANR	4854069	Identifier	y		4854021	0					
ANR	4854070	Argument	w		4854021	3					
ANR	4854071	Identifier	w		4854021	0					
ANR	4854072	Argument	h		4854021	4					
ANR	4854073	Identifier	h		4854021	0					
ANR	4854074	Argument	"x_alt_map_color ( dev , color )"		4854021	5					
ANR	4854075	CallExpression	"x_alt_map_color ( dev , color )"		4854021	0					
ANR	4854076	Callee	x_alt_map_color		4854021	0					
ANR	4854077	Identifier	x_alt_map_color		4854021	0					
ANR	4854078	ArgumentList	dev		4854021	1					
ANR	4854079	Argument	dev		4854021	0					
ANR	4854080	Identifier	dev		4854021	0					
ANR	4854081	Argument	color		4854021	1					
ANR	4854082	Identifier	color		4854021	0					
ANR	4854083	ReturnType	static int		4854021	1					
ANR	4854084	Identifier	x_wrap_fill_rectangle		4854021	2					
ANR	4854085	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		4854021	3					
ANR	4854086	Parameter	gx_device * dev	148:22:4124:4138	4854021	0	True				
ANR	4854087	ParameterType	gx_device *		4854021	0					
ANR	4854088	Identifier	dev		4854021	1					
ANR	4854089	Parameter	int x	148:39:4141:4145	4854021	1	True				
ANR	4854090	ParameterType	int		4854021	0					
ANR	4854091	Identifier	x		4854021	1					
ANR	4854092	Parameter	int y	148:46:4148:4152	4854021	2	True				
ANR	4854093	ParameterType	int		4854021	0					
ANR	4854094	Identifier	y		4854021	1					
ANR	4854095	Parameter	int w	148:53:4155:4159	4854021	3	True				
ANR	4854096	ParameterType	int		4854021	0					
ANR	4854097	Identifier	w		4854021	1					
ANR	4854098	Parameter	int h	148:60:4162:4166	4854021	4	True				
ANR	4854099	ParameterType	int		4854021	0					
ANR	4854100	Identifier	h		4854021	1					
ANR	4854101	Parameter	gx_color_index color	149:22:4191:4210	4854021	5	True				
ANR	4854102	ParameterType	gx_color_index		4854021	0					
ANR	4854103	Identifier	color		4854021	1					
ANR	4854104	CFGEntryNode	ENTRY		4854021		True				
ANR	4854105	CFGExitNode	EXIT		4854021		True				
ANR	4854106	Symbol	code		4854021						
ANR	4854107	Symbol	color		4854021						
ANR	4854108	Symbol	* dev_proc		4854021						
ANR	4854109	Symbol	h		4854021						
ANR	4854110	Symbol	& tdev		4854021						
ANR	4854111	Symbol	fill_rectangle		4854021						
ANR	4854112	Symbol	"* dev_proc ( tdev , fill_rectangle )"		4854021						
ANR	4854113	Symbol	get_dev_target		4854021						
ANR	4854114	Symbol	x_alt_map_color		4854021						
ANR	4854115	Symbol	dev		4854021						
ANR	4854116	Symbol	dev_proc		4854021						
ANR	4854117	Symbol	w		4854021						
ANR	4854118	Symbol	tdev		4854021						
ANR	4854119	Symbol	x		4854021						
ANR	4854120	Symbol	y		4854021						
ANR	4854121	Function	x_wrap_copy_mono	160:0:4464:5064							
ANR	4854122	FunctionDef	"x_wrap_copy_mono (gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one)"		4854121	0					
ANR	4854123	CompoundStatement		165:0:4690:5064	4854121	0					
ANR	4854124	IdentifierDeclStatement	gx_device * tdev ;	166:4:4696:4711	4854121	0	True				
ANR	4854125	IdentifierDecl	* tdev		4854121	0					
ANR	4854126	IdentifierDeclType	gx_device *		4854121	0					
ANR	4854127	Identifier	tdev		4854121	1					
ANR	4854128	IdentifierDeclStatement	int code ;	167:4:4717:4725	4854121	1	True				
ANR	4854129	IdentifierDecl	code		4854121	0					
ANR	4854130	IdentifierDeclType	int		4854121	0					
ANR	4854131	Identifier	code		4854121	1					
ANR	4854132	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4854121	2					
ANR	4854133	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	169:8:4736:4774	4854121	0	True				
ANR	4854134	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4854121	0		<			
ANR	4854135	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4854121	0		=			
ANR	4854136	Identifier	code		4854121	0					
ANR	4854137	CallExpression	"get_dev_target ( & tdev , dev )"		4854121	1					
ANR	4854138	Callee	get_dev_target		4854121	0					
ANR	4854139	Identifier	get_dev_target		4854121	0					
ANR	4854140	ArgumentList	& tdev		4854121	1					
ANR	4854141	Argument	& tdev		4854121	0					
ANR	4854142	UnaryOperationExpression	& tdev		4854121	0					
ANR	4854143	UnaryOperator	&		4854121	0					
ANR	4854144	Identifier	tdev		4854121	1					
ANR	4854145	Argument	dev		4854121	1					
ANR	4854146	Identifier	dev		4854121	0					
ANR	4854147	PrimaryExpression	0		4854121	1					
ANR	4854148	ReturnStatement	return code ;	170:8:4785:4796	4854121	1	True				
ANR	4854149	Identifier	code		4854121	0					
ANR	4854150	ReturnStatement	"return ( * dev_proc ( tdev , copy_mono ) ) ( tdev , base , sourcex , raster , id , x , y , w , h , x_alt_map_color ( dev , zero ) , x_alt_map_color ( dev , one ) ) ;"	171:4:4802:5061	4854121	3	True				
ANR	4854151	CallExpression	"( * dev_proc ( tdev , copy_mono ) ) ( tdev , base , sourcex , raster , id , x , y , w , h , x_alt_map_color ( dev , zero ) , x_alt_map_color ( dev , one ) )"		4854121	0					
ANR	4854152	Callee	"* dev_proc ( tdev , copy_mono )"		4854121	0					
ANR	4854153	UnaryOperationExpression	"* dev_proc ( tdev , copy_mono )"		4854121	0					
ANR	4854154	UnaryOperator	*		4854121	0					
ANR	4854155	CallExpression	"dev_proc ( tdev , copy_mono )"		4854121	1					
ANR	4854156	Callee	dev_proc		4854121	0					
ANR	4854157	Identifier	dev_proc		4854121	0					
ANR	4854158	ArgumentList	tdev		4854121	1					
ANR	4854159	Argument	tdev		4854121	0					
ANR	4854160	Identifier	tdev		4854121	0					
ANR	4854161	Argument	copy_mono		4854121	1					
ANR	4854162	Identifier	copy_mono		4854121	0					
ANR	4854163	ArgumentList	tdev		4854121	1					
ANR	4854164	Argument	tdev		4854121	0					
ANR	4854165	Identifier	tdev		4854121	0					
ANR	4854166	Argument	base		4854121	1					
ANR	4854167	Identifier	base		4854121	0					
ANR	4854168	Argument	sourcex		4854121	2					
ANR	4854169	Identifier	sourcex		4854121	0					
ANR	4854170	Argument	raster		4854121	3					
ANR	4854171	Identifier	raster		4854121	0					
ANR	4854172	Argument	id		4854121	4					
ANR	4854173	Identifier	id		4854121	0					
ANR	4854174	Argument	x		4854121	5					
ANR	4854175	Identifier	x		4854121	0					
ANR	4854176	Argument	y		4854121	6					
ANR	4854177	Identifier	y		4854121	0					
ANR	4854178	Argument	w		4854121	7					
ANR	4854179	Identifier	w		4854121	0					
ANR	4854180	Argument	h		4854121	8					
ANR	4854181	Identifier	h		4854121	0					
ANR	4854182	Argument	"x_alt_map_color ( dev , zero )"		4854121	9					
ANR	4854183	CallExpression	"x_alt_map_color ( dev , zero )"		4854121	0					
ANR	4854184	Callee	x_alt_map_color		4854121	0					
ANR	4854185	Identifier	x_alt_map_color		4854121	0					
ANR	4854186	ArgumentList	dev		4854121	1					
ANR	4854187	Argument	dev		4854121	0					
ANR	4854188	Identifier	dev		4854121	0					
ANR	4854189	Argument	zero		4854121	1					
ANR	4854190	Identifier	zero		4854121	0					
ANR	4854191	Argument	"x_alt_map_color ( dev , one )"		4854121	10					
ANR	4854192	CallExpression	"x_alt_map_color ( dev , one )"		4854121	0					
ANR	4854193	Callee	x_alt_map_color		4854121	0					
ANR	4854194	Identifier	x_alt_map_color		4854121	0					
ANR	4854195	ArgumentList	dev		4854121	1					
ANR	4854196	Argument	dev		4854121	0					
ANR	4854197	Identifier	dev		4854121	0					
ANR	4854198	Argument	one		4854121	1					
ANR	4854199	Identifier	one		4854121	0					
ANR	4854200	ReturnType	static int		4854121	1					
ANR	4854201	Identifier	x_wrap_copy_mono		4854121	2					
ANR	4854202	ParameterList	"gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one"		4854121	3					
ANR	4854203	Parameter	gx_device * dev	161:17:4492:4506	4854121	0	True				
ANR	4854204	ParameterType	gx_device *		4854121	0					
ANR	4854205	Identifier	dev		4854121	1					
ANR	4854206	Parameter	const byte * base	162:17:4526:4542	4854121	1	True				
ANR	4854207	ParameterType	const byte *		4854121	0					
ANR	4854208	Identifier	base		4854121	1					
ANR	4854209	Parameter	int sourcex	162:36:4545:4555	4854121	2	True				
ANR	4854210	ParameterType	int		4854121	0					
ANR	4854211	Identifier	sourcex		4854121	1					
ANR	4854212	Parameter	int raster	162:49:4558:4567	4854121	3	True				
ANR	4854213	ParameterType	int		4854121	0					
ANR	4854214	Identifier	raster		4854121	1					
ANR	4854215	Parameter	gx_bitmap_id id	162:61:4570:4584	4854121	4	True				
ANR	4854216	ParameterType	gx_bitmap_id		4854121	0					
ANR	4854217	Identifier	id		4854121	1					
ANR	4854218	Parameter	int x	163:17:4604:4608	4854121	5	True				
ANR	4854219	ParameterType	int		4854121	0					
ANR	4854220	Identifier	x		4854121	1					
ANR	4854221	Parameter	int y	163:24:4611:4615	4854121	6	True				
ANR	4854222	ParameterType	int		4854121	0					
ANR	4854223	Identifier	y		4854121	1					
ANR	4854224	Parameter	int w	163:31:4618:4622	4854121	7	True				
ANR	4854225	ParameterType	int		4854121	0					
ANR	4854226	Identifier	w		4854121	1					
ANR	4854227	Parameter	int h	163:38:4625:4629	4854121	8	True				
ANR	4854228	ParameterType	int		4854121	0					
ANR	4854229	Identifier	h		4854121	1					
ANR	4854230	Parameter	gx_color_index zero	164:17:4649:4667	4854121	9	True				
ANR	4854231	ParameterType	gx_color_index		4854121	0					
ANR	4854232	Identifier	zero		4854121	1					
ANR	4854233	Parameter	gx_color_index one	164:38:4670:4687	4854121	10	True				
ANR	4854234	ParameterType	gx_color_index		4854121	0					
ANR	4854235	Identifier	one		4854121	1					
ANR	4854236	CFGEntryNode	ENTRY		4854121		True				
ANR	4854237	CFGExitNode	EXIT		4854121		True				
ANR	4854238	Symbol	sourcex		4854121						
ANR	4854239	Symbol	code		4854121						
ANR	4854240	Symbol	* dev_proc		4854121						
ANR	4854241	Symbol	one		4854121						
ANR	4854242	Symbol	raster		4854121						
ANR	4854243	Symbol	h		4854121						
ANR	4854244	Symbol	& tdev		4854121						
ANR	4854245	Symbol	zero		4854121						
ANR	4854246	Symbol	get_dev_target		4854121						
ANR	4854247	Symbol	x_alt_map_color		4854121						
ANR	4854248	Symbol	"* dev_proc ( tdev , copy_mono )"		4854121						
ANR	4854249	Symbol	dev		4854121						
ANR	4854250	Symbol	copy_mono		4854121						
ANR	4854251	Symbol	dev_proc		4854121						
ANR	4854252	Symbol	w		4854121						
ANR	4854253	Symbol	tdev		4854121						
ANR	4854254	Symbol	x		4854121						
ANR	4854255	Symbol	y		4854121						
ANR	4854256	Symbol	id		4854121						
ANR	4854257	Symbol	base		4854121						
ANR	4854258	Function	x_wrap_copy_color	178:0:5067:7888							
ANR	4854259	FunctionDef	"x_wrap_copy_color (gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h)"		4854258	0					
ANR	4854260	CompoundStatement		181:0:5220:7888	4854258	0					
ANR	4854261	IdentifierDeclStatement	gx_device * tdev ;	182:4:5226:5241	4854258	0	True				
ANR	4854262	IdentifierDecl	* tdev		4854258	0					
ANR	4854263	IdentifierDeclType	gx_device *		4854258	0					
ANR	4854264	Identifier	tdev		4854258	1					
ANR	4854265	Statement	define	184:1:5245:5250	4854258	1	True				
ANR	4854266	Statement	mapped_bytes	184:8:5252:5263	4854258	2	True				
ANR	4854267	Statement	480	184:21:5265:5267	4854258	3	True				
ANR	4854268	IdentifierDeclStatement	"int depth_bytes , source_bits ;"	185:4:5307:5335	4854258	4	True				
ANR	4854269	IdentifierDecl	depth_bytes		4854258	0					
ANR	4854270	IdentifierDeclType	int		4854258	0					
ANR	4854271	Identifier	depth_bytes		4854258	1					
ANR	4854272	IdentifierDecl	source_bits		4854258	1					
ANR	4854273	IdentifierDeclType	int		4854258	0					
ANR	4854274	Identifier	source_bits		4854258	1					
ANR	4854275	IdentifierDeclStatement	"int block_w , block_h ;"	186:4:5341:5361	4854258	5	True				
ANR	4854276	IdentifierDecl	block_w		4854258	0					
ANR	4854277	IdentifierDeclType	int		4854258	0					
ANR	4854278	Identifier	block_w		4854258	1					
ANR	4854279	IdentifierDecl	block_h		4854258	1					
ANR	4854280	IdentifierDeclType	int		4854258	0					
ANR	4854281	Identifier	block_h		4854258	1					
ANR	4854282	IdentifierDeclStatement	"int xblock , yblock ;"	187:4:5367:5385	4854258	6	True				
ANR	4854283	IdentifierDecl	xblock		4854258	0					
ANR	4854284	IdentifierDeclType	int		4854258	0					
ANR	4854285	Identifier	xblock		4854258	1					
ANR	4854286	IdentifierDecl	yblock		4854258	1					
ANR	4854287	IdentifierDeclType	int		4854258	0					
ANR	4854288	Identifier	yblock		4854258	1					
ANR	4854289	IdentifierDeclStatement	byte mapped [ mapped_bytes ] ;	188:4:5391:5416	4854258	7	True				
ANR	4854290	IdentifierDecl	mapped [ mapped_bytes ]		4854258	0					
ANR	4854291	IdentifierDeclType	byte [ mapped_bytes ]		4854258	0					
ANR	4854292	Identifier	mapped		4854258	1					
ANR	4854293	Identifier	mapped_bytes		4854258	2					
ANR	4854294	IdentifierDeclStatement	int code ;	189:4:5422:5430	4854258	8	True				
ANR	4854295	IdentifierDecl	code		4854258	0					
ANR	4854296	IdentifierDeclType	int		4854258	0					
ANR	4854297	Identifier	code		4854258	1					
ANR	4854298	ExpressionStatement	"fit_copy ( dev , base , sourcex , raster , id , x , y , w , h )"	191:4:5437:5489	4854258	9	True				
ANR	4854299	CallExpression	"fit_copy ( dev , base , sourcex , raster , id , x , y , w , h )"		4854258	0					
ANR	4854300	Callee	fit_copy		4854258	0					
ANR	4854301	Identifier	fit_copy		4854258	0					
ANR	4854302	ArgumentList	dev		4854258	1					
ANR	4854303	Argument	dev		4854258	0					
ANR	4854304	Identifier	dev		4854258	0					
ANR	4854305	Argument	base		4854258	1					
ANR	4854306	Identifier	base		4854258	0					
ANR	4854307	Argument	sourcex		4854258	2					
ANR	4854308	Identifier	sourcex		4854258	0					
ANR	4854309	Argument	raster		4854258	3					
ANR	4854310	Identifier	raster		4854258	0					
ANR	4854311	Argument	id		4854258	4					
ANR	4854312	Identifier	id		4854258	0					
ANR	4854313	Argument	x		4854258	5					
ANR	4854314	Identifier	x		4854258	0					
ANR	4854315	Argument	y		4854258	6					
ANR	4854316	Identifier	y		4854258	0					
ANR	4854317	Argument	w		4854258	7					
ANR	4854318	Identifier	w		4854258	0					
ANR	4854319	Argument	h		4854258	8					
ANR	4854320	Identifier	h		4854258	0					
ANR	4854321	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4854258	10					
ANR	4854322	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	192:8:5499:5537	4854258	0	True				
ANR	4854323	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4854258	0		<			
ANR	4854324	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4854258	0		=			
ANR	4854325	Identifier	code		4854258	0					
ANR	4854326	CallExpression	"get_dev_target ( & tdev , dev )"		4854258	1					
ANR	4854327	Callee	get_dev_target		4854258	0					
ANR	4854328	Identifier	get_dev_target		4854258	0					
ANR	4854329	ArgumentList	& tdev		4854258	1					
ANR	4854330	Argument	& tdev		4854258	0					
ANR	4854331	UnaryOperationExpression	& tdev		4854258	0					
ANR	4854332	UnaryOperator	&		4854258	0					
ANR	4854333	Identifier	tdev		4854258	1					
ANR	4854334	Argument	dev		4854258	1					
ANR	4854335	Identifier	dev		4854258	0					
ANR	4854336	PrimaryExpression	0		4854258	1					
ANR	4854337	ReturnStatement	return code ;	193:8:5548:5559	4854258	1	True				
ANR	4854338	Identifier	code		4854258	0					
ANR	4854339	IfStatement	if ( tdev -> color_info . depth & 7 )		4854258	11					
ANR	4854340	Condition	tdev -> color_info . depth & 7	195:8:5630:5655	4854258	0	True				
ANR	4854341	BitAndExpression	tdev -> color_info . depth & 7		4854258	0		&			
ANR	4854342	MemberAccess	tdev -> color_info . depth		4854258	0					
ANR	4854343	PtrMemberAccess	tdev -> color_info		4854258	0					
ANR	4854344	Identifier	tdev		4854258	0					
ANR	4854345	Identifier	color_info		4854258	1					
ANR	4854346	Identifier	depth		4854258	1					
ANR	4854347	PrimaryExpression	7		4854258	1					
ANR	4854348	ReturnStatement	"return gx_default_copy_color ( dev , base , sourcex , raster , id , x , y , w , h ) ;"	196:8:5666:5775	4854258	1	True				
ANR	4854349	CallExpression	"gx_default_copy_color ( dev , base , sourcex , raster , id , x , y , w , h )"		4854258	0					
ANR	4854350	Callee	gx_default_copy_color		4854258	0					
ANR	4854351	Identifier	gx_default_copy_color		4854258	0					
ANR	4854352	ArgumentList	dev		4854258	1					
ANR	4854353	Argument	dev		4854258	0					
ANR	4854354	Identifier	dev		4854258	0					
ANR	4854355	Argument	base		4854258	1					
ANR	4854356	Identifier	base		4854258	0					
ANR	4854357	Argument	sourcex		4854258	2					
ANR	4854358	Identifier	sourcex		4854258	0					
ANR	4854359	Argument	raster		4854258	3					
ANR	4854360	Identifier	raster		4854258	0					
ANR	4854361	Argument	id		4854258	4					
ANR	4854362	Identifier	id		4854258	0					
ANR	4854363	Argument	x		4854258	5					
ANR	4854364	Identifier	x		4854258	0					
ANR	4854365	Argument	y		4854258	6					
ANR	4854366	Identifier	y		4854258	0					
ANR	4854367	Argument	w		4854258	7					
ANR	4854368	Identifier	w		4854258	0					
ANR	4854369	Argument	h		4854258	8					
ANR	4854370	Identifier	h		4854258	0					
ANR	4854371	ExpressionStatement	depth_bytes = tdev -> color_info . depth >> 3	198:4:5781:5822	4854258	12	True				
ANR	4854372	AssignmentExpression	depth_bytes = tdev -> color_info . depth >> 3		4854258	0		=			
ANR	4854373	Identifier	depth_bytes		4854258	0					
ANR	4854374	ShiftExpression	tdev -> color_info . depth >> 3		4854258	1		>>			
ANR	4854375	MemberAccess	tdev -> color_info . depth		4854258	0					
ANR	4854376	PtrMemberAccess	tdev -> color_info		4854258	0					
ANR	4854377	Identifier	tdev		4854258	0					
ANR	4854378	Identifier	color_info		4854258	1					
ANR	4854379	Identifier	depth		4854258	1					
ANR	4854380	PrimaryExpression	3		4854258	1					
ANR	4854381	ExpressionStatement	source_bits = dev -> color_info . depth	199:4:5828:5863	4854258	13	True				
ANR	4854382	AssignmentExpression	source_bits = dev -> color_info . depth		4854258	0		=			
ANR	4854383	Identifier	source_bits		4854258	0					
ANR	4854384	MemberAccess	dev -> color_info . depth		4854258	1					
ANR	4854385	PtrMemberAccess	dev -> color_info		4854258	0					
ANR	4854386	Identifier	dev		4854258	0					
ANR	4854387	Identifier	color_info		4854258	1					
ANR	4854388	Identifier	depth		4854258	1					
ANR	4854389	CompoundStatement		21:8:658:704	4854258	14					
ANR	4854390	IdentifierDeclStatement	int mapped_pixels = mapped_bytes / depth_bytes ;	201:8:5879:5925	4854258	0	True				
ANR	4854391	IdentifierDecl	mapped_pixels = mapped_bytes / depth_bytes		4854258	0					
ANR	4854392	IdentifierDeclType	int		4854258	0					
ANR	4854393	Identifier	mapped_pixels		4854258	1					
ANR	4854394	AssignmentExpression	mapped_pixels = mapped_bytes / depth_bytes		4854258	2		=			
ANR	4854395	Identifier	mapped_pixels		4854258	0					
ANR	4854396	MultiplicativeExpression	mapped_bytes / depth_bytes		4854258	1		/			
ANR	4854397	Identifier	mapped_bytes		4854258	0					
ANR	4854398	Identifier	depth_bytes		4854258	1					
ANR	4854399	IfStatement	if ( w > mapped_pixels >> 1 )		4854258	1					
ANR	4854400	Condition	w > mapped_pixels >> 1	203:12:5940:5961	4854258	0	True				
ANR	4854401	RelationalExpression	w > mapped_pixels >> 1		4854258	0		>			
ANR	4854402	Identifier	w		4854258	0					
ANR	4854403	ShiftExpression	mapped_pixels >> 1		4854258	1		>>			
ANR	4854404	Identifier	mapped_pixels		4854258	0					
ANR	4854405	PrimaryExpression	1		4854258	1					
ANR	4854406	ExpressionStatement	"block_w = min ( w , mapped_pixels ) , block_h = 1"	204:12:5976:6020	4854258	1	True				
ANR	4854407	Expression	"block_w = min ( w , mapped_pixels ) , block_h = 1"		4854258	0					
ANR	4854408	AssignmentExpression	"block_w = min ( w , mapped_pixels )"		4854258	0		=			
ANR	4854409	Identifier	block_w		4854258	0					
ANR	4854410	CallExpression	"min ( w , mapped_pixels )"		4854258	1					
ANR	4854411	Callee	min		4854258	0					
ANR	4854412	Identifier	min		4854258	0					
ANR	4854413	ArgumentList	w		4854258	1					
ANR	4854414	Argument	w		4854258	0					
ANR	4854415	Identifier	w		4854258	0					
ANR	4854416	Argument	mapped_pixels		4854258	1					
ANR	4854417	Identifier	mapped_pixels		4854258	0					
ANR	4854418	AssignmentExpression	block_h = 1		4854258	1		=			
ANR	4854419	Identifier	block_h		4854258	0					
ANR	4854420	PrimaryExpression	1		4854258	1					
ANR	4854421	ElseStatement	else		4854258	0					
ANR	4854422	ExpressionStatement	"block_w = w , block_h = mapped_pixels / w"	206:12:6047:6087	4854258	0	True				
ANR	4854423	Expression	"block_w = w , block_h = mapped_pixels / w"		4854258	0					
ANR	4854424	AssignmentExpression	block_w = w		4854258	0		=			
ANR	4854425	Identifier	block_w		4854258	0					
ANR	4854426	Identifier	w		4854258	1					
ANR	4854427	AssignmentExpression	block_h = mapped_pixels / w		4854258	1		=			
ANR	4854428	Identifier	block_h		4854258	0					
ANR	4854429	MultiplicativeExpression	mapped_pixels / w		4854258	1		/			
ANR	4854430	Identifier	mapped_pixels		4854258	0					
ANR	4854431	Identifier	w		4854258	1					
ANR	4854432	ForStatement	for ( yblock = y ; yblock < y + h ; yblock += block_h )		4854258	15					
ANR	4854433	ForInit	yblock = y ;	208:9:6104:6114	4854258	0	True				
ANR	4854434	AssignmentExpression	yblock = y		4854258	0		=			
ANR	4854435	Identifier	yblock		4854258	0					
ANR	4854436	Identifier	y		4854258	1					
ANR	4854437	Condition	yblock < y + h	208:21:6116:6129	4854258	1	True				
ANR	4854438	RelationalExpression	yblock < y + h		4854258	0		<			
ANR	4854439	Identifier	yblock		4854258	0					
ANR	4854440	AdditiveExpression	y + h		4854258	1		+			
ANR	4854441	Identifier	y		4854258	0					
ANR	4854442	Identifier	h		4854258	1					
ANR	4854443	AssignmentExpression	yblock += block_h	208:37:6132:6148	4854258	2	True	+=			
ANR	4854444	Identifier	yblock		4854258	0					
ANR	4854445	Identifier	block_h		4854258	1					
ANR	4854446	ForStatement	for ( xblock = x ; xblock < x + w ; xblock += block_w )		4854258	3					
ANR	4854447	ForInit	xblock = x ;	209:13:6164:6174	4854258	0	True				
ANR	4854448	AssignmentExpression	xblock = x		4854258	0		=			
ANR	4854449	Identifier	xblock		4854258	0					
ANR	4854450	Identifier	x		4854258	1					
ANR	4854451	Condition	xblock < x + w	209:25:6176:6189	4854258	1	True				
ANR	4854452	RelationalExpression	xblock < x + w		4854258	0		<			
ANR	4854453	Identifier	xblock		4854258	0					
ANR	4854454	AdditiveExpression	x + w		4854258	1		+			
ANR	4854455	Identifier	x		4854258	0					
ANR	4854456	Identifier	w		4854258	1					
ANR	4854457	AssignmentExpression	xblock += block_w	209:41:6192:6208	4854258	2	True	+=			
ANR	4854458	Identifier	xblock		4854258	0					
ANR	4854459	Identifier	block_w		4854258	1					
ANR	4854460	CompoundStatement		34:12:1168:1176	4854258	3					
ANR	4854461	IdentifierDeclStatement	byte * p = mapped ;	210:12:6225:6241	4854258	0	True				
ANR	4854462	IdentifierDecl	* p = mapped		4854258	0					
ANR	4854463	IdentifierDeclType	byte *		4854258	0					
ANR	4854464	Identifier	p		4854258	1					
ANR	4854465	AssignmentExpression	* p = mapped		4854258	2		=			
ANR	4854466	Identifier	mapped		4854258	0					
ANR	4854467	Identifier	mapped		4854258	1					
ANR	4854468	IdentifierDeclStatement	"int xend = min ( xblock + block_w , x + w ) ;"	211:12:6255:6294	4854258	1	True				
ANR	4854469	IdentifierDecl	"xend = min ( xblock + block_w , x + w )"		4854258	0					
ANR	4854470	IdentifierDeclType	int		4854258	0					
ANR	4854471	Identifier	xend		4854258	1					
ANR	4854472	AssignmentExpression	"xend = min ( xblock + block_w , x + w )"		4854258	2		=			
ANR	4854473	Identifier	xend		4854258	0					
ANR	4854474	CallExpression	"min ( xblock + block_w , x + w )"		4854258	1					
ANR	4854475	Callee	min		4854258	0					
ANR	4854476	Identifier	min		4854258	0					
ANR	4854477	ArgumentList	xblock + block_w		4854258	1					
ANR	4854478	Argument	xblock + block_w		4854258	0					
ANR	4854479	AdditiveExpression	xblock + block_w		4854258	0		+			
ANR	4854480	Identifier	xblock		4854258	0					
ANR	4854481	Identifier	block_w		4854258	1					
ANR	4854482	Argument	x + w		4854258	1					
ANR	4854483	AdditiveExpression	x + w		4854258	0		+			
ANR	4854484	Identifier	x		4854258	0					
ANR	4854485	Identifier	w		4854258	1					
ANR	4854486	IdentifierDeclStatement	"int yend = min ( yblock + block_h , y + h ) ;"	212:12:6308:6347	4854258	2	True				
ANR	4854487	IdentifierDecl	"yend = min ( yblock + block_h , y + h )"		4854258	0					
ANR	4854488	IdentifierDeclType	int		4854258	0					
ANR	4854489	Identifier	yend		4854258	1					
ANR	4854490	AssignmentExpression	"yend = min ( yblock + block_h , y + h )"		4854258	2		=			
ANR	4854491	Identifier	yend		4854258	0					
ANR	4854492	CallExpression	"min ( yblock + block_h , y + h )"		4854258	1					
ANR	4854493	Callee	min		4854258	0					
ANR	4854494	Identifier	min		4854258	0					
ANR	4854495	ArgumentList	yblock + block_h		4854258	1					
ANR	4854496	Argument	yblock + block_h		4854258	0					
ANR	4854497	AdditiveExpression	yblock + block_h		4854258	0		+			
ANR	4854498	Identifier	yblock		4854258	0					
ANR	4854499	Identifier	block_h		4854258	1					
ANR	4854500	Argument	y + h		4854258	1					
ANR	4854501	AdditiveExpression	y + h		4854258	0		+			
ANR	4854502	Identifier	y		4854258	0					
ANR	4854503	Identifier	h		4854258	1					
ANR	4854504	IdentifierDeclStatement	"int xcur , ycur ;"	213:12:6361:6375	4854258	3	True				
ANR	4854505	IdentifierDecl	xcur		4854258	0					
ANR	4854506	IdentifierDeclType	int		4854258	0					
ANR	4854507	Identifier	xcur		4854258	1					
ANR	4854508	IdentifierDecl	ycur		4854258	1					
ANR	4854509	IdentifierDeclType	int		4854258	0					
ANR	4854510	Identifier	ycur		4854258	1					
ANR	4854511	IdentifierDeclStatement	int code ;	214:12:6389:6397	4854258	4	True				
ANR	4854512	IdentifierDecl	code		4854258	0					
ANR	4854513	IdentifierDeclType	int		4854258	0					
ANR	4854514	Identifier	code		4854258	1					
ANR	4854515	ForStatement	for ( ycur = yblock ; ycur < yend ; ++ ycur )		4854258	5					
ANR	4854516	ForInit	ycur = yblock ;	216:17:6417:6430	4854258	0	True				
ANR	4854517	AssignmentExpression	ycur = yblock		4854258	0		=			
ANR	4854518	Identifier	ycur		4854258	0					
ANR	4854519	Identifier	yblock		4854258	1					
ANR	4854520	Condition	ycur < yend	216:32:6432:6442	4854258	1	True				
ANR	4854521	RelationalExpression	ycur < yend		4854258	0		<			
ANR	4854522	Identifier	ycur		4854258	0					
ANR	4854523	Identifier	yend		4854258	1					
ANR	4854524	UnaryExpression	++ ycur	216:45:6445:6450	4854258	2	True				
ANR	4854525	IncDec	++		4854258	0					
ANR	4854526	Identifier	ycur		4854258	1					
ANR	4854527	ForStatement	for ( xcur = xblock ; xcur < xend ; ++ xcur )		4854258	3					
ANR	4854528	ForInit	xcur = xblock ;	217:21:6474:6487	4854258	0	True				
ANR	4854529	AssignmentExpression	xcur = xblock		4854258	0		=			
ANR	4854530	Identifier	xcur		4854258	0					
ANR	4854531	Identifier	xblock		4854258	1					
ANR	4854532	Condition	xcur < xend	217:36:6489:6499	4854258	1	True				
ANR	4854533	RelationalExpression	xcur < xend		4854258	0		<			
ANR	4854534	Identifier	xcur		4854258	0					
ANR	4854535	Identifier	xend		4854258	1					
ANR	4854536	UnaryExpression	++ xcur	217:49:6502:6507	4854258	2	True				
ANR	4854537	IncDec	++		4854258	0					
ANR	4854538	Identifier	xcur		4854258	1					
ANR	4854539	CompoundStatement		43:20:1587:1685	4854258	3					
ANR	4854540	IdentifierDeclStatement	int sbit = ( xcur - x + sourcex ) * source_bits ;	218:20:6532:6577	4854258	0	True				
ANR	4854541	IdentifierDecl	sbit = ( xcur - x + sourcex ) * source_bits		4854258	0					
ANR	4854542	IdentifierDeclType	int		4854258	0					
ANR	4854543	Identifier	sbit		4854258	1					
ANR	4854544	AssignmentExpression	sbit = ( xcur - x + sourcex ) * source_bits		4854258	2		=			
ANR	4854545	Identifier	sbit		4854258	0					
ANR	4854546	MultiplicativeExpression	( xcur - x + sourcex ) * source_bits		4854258	1		*			
ANR	4854547	AdditiveExpression	xcur - x + sourcex		4854258	0		-			
ANR	4854548	Identifier	xcur		4854258	0					
ANR	4854549	AdditiveExpression	x + sourcex		4854258	1		+			
ANR	4854550	Identifier	x		4854258	0					
ANR	4854551	Identifier	sourcex		4854258	1					
ANR	4854552	Identifier	source_bits		4854258	1					
ANR	4854553	IdentifierDeclStatement	uint sbyte = base [ ( ycur - y ) * raster + ( sbit >> 3 ) ] ;	219:20:6599:6675	4854258	1	True				
ANR	4854554	IdentifierDecl	sbyte = base [ ( ycur - y ) * raster + ( sbit >> 3 ) ]		4854258	0					
ANR	4854555	IdentifierDeclType	uint		4854258	0					
ANR	4854556	Identifier	sbyte		4854258	1					
ANR	4854557	AssignmentExpression	sbyte = base [ ( ycur - y ) * raster + ( sbit >> 3 ) ]		4854258	2		=			
ANR	4854558	Identifier	sbyte		4854258	0					
ANR	4854559	ArrayIndexing	base [ ( ycur - y ) * raster + ( sbit >> 3 ) ]		4854258	1					
ANR	4854560	Identifier	base		4854258	0					
ANR	4854561	AdditiveExpression	( ycur - y ) * raster + ( sbit >> 3 )		4854258	1		+			
ANR	4854562	MultiplicativeExpression	( ycur - y ) * raster		4854258	0		*			
ANR	4854563	AdditiveExpression	ycur - y		4854258	0		-			
ANR	4854564	Identifier	ycur		4854258	0					
ANR	4854565	Identifier	y		4854258	1					
ANR	4854566	Identifier	raster		4854258	1					
ANR	4854567	ShiftExpression	sbit >> 3		4854258	1		>>			
ANR	4854568	Identifier	sbit		4854258	0					
ANR	4854569	PrimaryExpression	3		4854258	1					
ANR	4854570	IdentifierDeclStatement	uint spixel = ( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits ) ;	221:20:6697:6786	4854258	2	True				
ANR	4854571	IdentifierDecl	spixel = ( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits )		4854258	0					
ANR	4854572	IdentifierDeclType	uint		4854258	0					
ANR	4854573	Identifier	spixel		4854258	1					
ANR	4854574	AssignmentExpression	spixel = ( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits )		4854258	2		=			
ANR	4854575	Identifier	spixel		4854258	0					
ANR	4854576	ShiftExpression	( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits )		4854258	1		>>			
ANR	4854577	BitAndExpression	( sbyte << ( sbit & 7 ) ) & 0xff		4854258	0		&			
ANR	4854578	ShiftExpression	sbyte << ( sbit & 7 )		4854258	0		<<			
ANR	4854579	Identifier	sbyte		4854258	0					
ANR	4854580	BitAndExpression	sbit & 7		4854258	1		&			
ANR	4854581	Identifier	sbit		4854258	0					
ANR	4854582	PrimaryExpression	7		4854258	1					
ANR	4854583	PrimaryExpression	0xff		4854258	1					
ANR	4854584	AdditiveExpression	8 - source_bits		4854258	1		-			
ANR	4854585	PrimaryExpression	8		4854258	0					
ANR	4854586	Identifier	source_bits		4854258	1					
ANR	4854587	IdentifierDeclStatement	gx_color_index cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ] ;	223:20:6808:6906	4854258	3	True				
ANR	4854588	IdentifierDecl	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ]		4854258	0					
ANR	4854589	IdentifierDeclType	gx_color_index		4854258	0					
ANR	4854590	Identifier	cindex		4854258	1					
ANR	4854591	AssignmentExpression	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ]		4854258	2		=			
ANR	4854592	Identifier	cindex		4854258	0					
ANR	4854593	ArrayIndexing	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ]		4854258	1					
ANR	4854594	PtrMemberAccess	( ( gx_device_X_wrapper * ) dev ) -> color_cache		4854258	0					
ANR	4854595	CastExpression	( gx_device_X_wrapper * ) dev		4854258	0					
ANR	4854596	CastTarget	gx_device_X_wrapper *		4854258	0					
ANR	4854597	Identifier	dev		4854258	1					
ANR	4854598	Identifier	color_cache		4854258	1					
ANR	4854599	Identifier	spixel		4854258	1					
ANR	4854600	IfStatement	if ( cindex == gx_no_color_index )		4854258	4					
ANR	4854601	Condition	cindex == gx_no_color_index	226:24:6933:6959	4854258	0	True				
ANR	4854602	EqualityExpression	cindex == gx_no_color_index		4854258	0		==			
ANR	4854603	Identifier	cindex		4854258	0					
ANR	4854604	Identifier	gx_no_color_index		4854258	1					
ANR	4854605	ExpressionStatement	"cindex = x_alt_map_color ( dev , spixel )"	227:24:6986:7023	4854258	1	True				
ANR	4854606	AssignmentExpression	"cindex = x_alt_map_color ( dev , spixel )"		4854258	0		=			
ANR	4854607	Identifier	cindex		4854258	0					
ANR	4854608	CallExpression	"x_alt_map_color ( dev , spixel )"		4854258	1					
ANR	4854609	Callee	x_alt_map_color		4854258	0					
ANR	4854610	Identifier	x_alt_map_color		4854258	0					
ANR	4854611	ArgumentList	dev		4854258	1					
ANR	4854612	Argument	dev		4854258	0					
ANR	4854613	Identifier	dev		4854258	0					
ANR	4854614	Argument	spixel		4854258	1					
ANR	4854615	Identifier	spixel		4854258	0					
ANR	4854616	SwitchStatement	switch ( depth_bytes )		4854258	5					
ANR	4854617	Condition	depth_bytes	228:28:7053:7063	4854258	0	True				
ANR	4854618	Identifier	depth_bytes		4854258	0					
ANR	4854619	CompoundStatement		48:41:1845:1845	4854258	1					
ANR	4854620	Label	case 4 :	229:24:7092:7098	4854258	0	True				
ANR	4854621	ExpressionStatement	* p ++ = ( byte ) ( cindex >> 24 )	230:28:7128:7156	4854258	1	True				
ANR	4854622	AssignmentExpression	* p ++ = ( byte ) ( cindex >> 24 )		4854258	0		=			
ANR	4854623	UnaryOperationExpression	* p ++		4854258	0					
ANR	4854624	UnaryOperator	*		4854258	0					
ANR	4854625	PostIncDecOperationExpression	p ++		4854258	1					
ANR	4854626	Identifier	p		4854258	0					
ANR	4854627	IncDec	++		4854258	1					
ANR	4854628	CastExpression	( byte ) ( cindex >> 24 )		4854258	1					
ANR	4854629	CastTarget	byte		4854258	0					
ANR	4854630	ShiftExpression	cindex >> 24		4854258	1		>>			
ANR	4854631	Identifier	cindex		4854258	0					
ANR	4854632	PrimaryExpression	24		4854258	1					
ANR	4854633	Label	case 3 :	232:24:7229:7235	4854258	2	True				
ANR	4854634	ExpressionStatement	* p ++ = ( byte ) ( cindex >> 16 )	233:28:7265:7293	4854258	3	True				
ANR	4854635	AssignmentExpression	* p ++ = ( byte ) ( cindex >> 16 )		4854258	0		=			
ANR	4854636	UnaryOperationExpression	* p ++		4854258	0					
ANR	4854637	UnaryOperator	*		4854258	0					
ANR	4854638	PostIncDecOperationExpression	p ++		4854258	1					
ANR	4854639	Identifier	p		4854258	0					
ANR	4854640	IncDec	++		4854258	1					
ANR	4854641	CastExpression	( byte ) ( cindex >> 16 )		4854258	1					
ANR	4854642	CastTarget	byte		4854258	0					
ANR	4854643	ShiftExpression	cindex >> 16		4854258	1		>>			
ANR	4854644	Identifier	cindex		4854258	0					
ANR	4854645	PrimaryExpression	16		4854258	1					
ANR	4854646	Label	case 2 :	235:24:7366:7372	4854258	4	True				
ANR	4854647	ExpressionStatement	* p ++ = ( byte ) ( cindex >> 8 )	236:28:7402:7429	4854258	5	True				
ANR	4854648	AssignmentExpression	* p ++ = ( byte ) ( cindex >> 8 )		4854258	0		=			
ANR	4854649	UnaryOperationExpression	* p ++		4854258	0					
ANR	4854650	UnaryOperator	*		4854258	0					
ANR	4854651	PostIncDecOperationExpression	p ++		4854258	1					
ANR	4854652	Identifier	p		4854258	0					
ANR	4854653	IncDec	++		4854258	1					
ANR	4854654	CastExpression	( byte ) ( cindex >> 8 )		4854258	1					
ANR	4854655	CastTarget	byte		4854258	0					
ANR	4854656	ShiftExpression	cindex >> 8		4854258	1		>>			
ANR	4854657	Identifier	cindex		4854258	0					
ANR	4854658	PrimaryExpression	8		4854258	1					
ANR	4854659	Label	default :	238:24:7502:7522	4854258	6	True				
ANR	4854660	Identifier	default		4854258	0					
ANR	4854661	ExpressionStatement	* p ++ = ( byte ) cindex	239:28:7552:7572	4854258	7	True				
ANR	4854662	AssignmentExpression	* p ++ = ( byte ) cindex		4854258	0		=			
ANR	4854663	UnaryOperationExpression	* p ++		4854258	0					
ANR	4854664	UnaryOperator	*		4854258	0					
ANR	4854665	PostIncDecOperationExpression	p ++		4854258	1					
ANR	4854666	Identifier	p		4854258	0					
ANR	4854667	IncDec	++		4854258	1					
ANR	4854668	CastExpression	( byte ) cindex		4854258	1					
ANR	4854669	CastTarget	byte		4854258	0					
ANR	4854670	Identifier	cindex		4854258	1					
ANR	4854671	ExpressionStatement	"code = ( * dev_proc ( tdev , copy_color ) ) ( tdev , mapped , 0 , ( xend - xblock ) * depth_bytes , gx_no_bitmap_id , xblock , yblock , xend - xblock , yend - yblock )"	242:12:7626:7807	4854258	6	True				
ANR	4854672	AssignmentExpression	"code = ( * dev_proc ( tdev , copy_color ) ) ( tdev , mapped , 0 , ( xend - xblock ) * depth_bytes , gx_no_bitmap_id , xblock , yblock , xend - xblock , yend - yblock )"		4854258	0		=			
ANR	4854673	Identifier	code		4854258	0					
ANR	4854674	CallExpression	"( * dev_proc ( tdev , copy_color ) ) ( tdev , mapped , 0 , ( xend - xblock ) * depth_bytes , gx_no_bitmap_id , xblock , yblock , xend - xblock , yend - yblock )"		4854258	1					
ANR	4854675	Callee	"* dev_proc ( tdev , copy_color )"		4854258	0					
ANR	4854676	UnaryOperationExpression	"* dev_proc ( tdev , copy_color )"		4854258	0					
ANR	4854677	UnaryOperator	*		4854258	0					
ANR	4854678	CallExpression	"dev_proc ( tdev , copy_color )"		4854258	1					
ANR	4854679	Callee	dev_proc		4854258	0					
ANR	4854680	Identifier	dev_proc		4854258	0					
ANR	4854681	ArgumentList	tdev		4854258	1					
ANR	4854682	Argument	tdev		4854258	0					
ANR	4854683	Identifier	tdev		4854258	0					
ANR	4854684	Argument	copy_color		4854258	1					
ANR	4854685	Identifier	copy_color		4854258	0					
ANR	4854686	ArgumentList	tdev		4854258	1					
ANR	4854687	Argument	tdev		4854258	0					
ANR	4854688	Identifier	tdev		4854258	0					
ANR	4854689	Argument	mapped		4854258	1					
ANR	4854690	Identifier	mapped		4854258	0					
ANR	4854691	Argument	0		4854258	2					
ANR	4854692	PrimaryExpression	0		4854258	0					
ANR	4854693	Argument	( xend - xblock ) * depth_bytes		4854258	3					
ANR	4854694	MultiplicativeExpression	( xend - xblock ) * depth_bytes		4854258	0		*			
ANR	4854695	AdditiveExpression	xend - xblock		4854258	0		-			
ANR	4854696	Identifier	xend		4854258	0					
ANR	4854697	Identifier	xblock		4854258	1					
ANR	4854698	Identifier	depth_bytes		4854258	1					
ANR	4854699	Argument	gx_no_bitmap_id		4854258	4					
ANR	4854700	Identifier	gx_no_bitmap_id		4854258	0					
ANR	4854701	Argument	xblock		4854258	5					
ANR	4854702	Identifier	xblock		4854258	0					
ANR	4854703	Argument	yblock		4854258	6					
ANR	4854704	Identifier	yblock		4854258	0					
ANR	4854705	Argument	xend - xblock		4854258	7					
ANR	4854706	AdditiveExpression	xend - xblock		4854258	0		-			
ANR	4854707	Identifier	xend		4854258	0					
ANR	4854708	Identifier	xblock		4854258	1					
ANR	4854709	Argument	yend - yblock		4854258	8					
ANR	4854710	AdditiveExpression	yend - yblock		4854258	0		-			
ANR	4854711	Identifier	yend		4854258	0					
ANR	4854712	Identifier	yblock		4854258	1					
ANR	4854713	IfStatement	if ( code < 0 )		4854258	7					
ANR	4854714	Condition	code < 0	245:16:7825:7832	4854258	0	True				
ANR	4854715	RelationalExpression	code < 0		4854258	0		<			
ANR	4854716	Identifier	code		4854258	0					
ANR	4854717	PrimaryExpression	0		4854258	1					
ANR	4854718	ReturnStatement	return code ;	246:16:7851:7862	4854258	1	True				
ANR	4854719	Identifier	code		4854258	0					
ANR	4854720	ReturnStatement	return 0 ;	248:4:7878:7886	4854258	16	True				
ANR	4854721	PrimaryExpression	0		4854258	0					
ANR	4854722	ReturnType	static int		4854258	1					
ANR	4854723	Identifier	x_wrap_copy_color		4854258	2					
ANR	4854724	ParameterList	"gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h"		4854258	3					
ANR	4854725	Parameter	gx_device * dev	179:18:5096:5110	4854258	0	True				
ANR	4854726	ParameterType	gx_device *		4854258	0					
ANR	4854727	Identifier	dev		4854258	1					
ANR	4854728	Parameter	const byte * base	179:35:5113:5129	4854258	1	True				
ANR	4854729	ParameterType	const byte *		4854258	0					
ANR	4854730	Identifier	base		4854258	1					
ANR	4854731	Parameter	int sourcex	179:54:5132:5142	4854258	2	True				
ANR	4854732	ParameterType	int		4854258	0					
ANR	4854733	Identifier	sourcex		4854258	1					
ANR	4854734	Parameter	int raster	180:18:5163:5172	4854258	3	True				
ANR	4854735	ParameterType	int		4854258	0					
ANR	4854736	Identifier	raster		4854258	1					
ANR	4854737	Parameter	gx_bitmap_id id	180:30:5175:5189	4854258	4	True				
ANR	4854738	ParameterType	gx_bitmap_id		4854258	0					
ANR	4854739	Identifier	id		4854258	1					
ANR	4854740	Parameter	int x	180:47:5192:5196	4854258	5	True				
ANR	4854741	ParameterType	int		4854258	0					
ANR	4854742	Identifier	x		4854258	1					
ANR	4854743	Parameter	int y	180:54:5199:5203	4854258	6	True				
ANR	4854744	ParameterType	int		4854258	0					
ANR	4854745	Identifier	y		4854258	1					
ANR	4854746	Parameter	int w	180:61:5206:5210	4854258	7	True				
ANR	4854747	ParameterType	int		4854258	0					
ANR	4854748	Identifier	w		4854258	1					
ANR	4854749	Parameter	int h	180:68:5213:5217	4854258	8	True				
ANR	4854750	ParameterType	int		4854258	0					
ANR	4854751	Identifier	h		4854258	1					
ANR	4854752	CFGEntryNode	ENTRY		4854258		True				
ANR	4854753	CFGExitNode	EXIT		4854258		True				
ANR	4854754	Symbol	mapped_bytes		4854258						
ANR	4854755	Symbol	"* dev_proc ( tdev , copy_color )"		4854258						
ANR	4854756	Symbol	* y		4854258						
ANR	4854757	Symbol	& tdev		4854258						
ANR	4854758	Symbol	block_h		4854258						
ANR	4854759	Symbol	sbit		4854258						
ANR	4854760	Symbol	gx_no_color_index		4854258						
ANR	4854761	Symbol	dev		4854258						
ANR	4854762	Symbol	tdev		4854258						
ANR	4854763	Symbol	id		4854258						
ANR	4854764	Symbol	* base		4854258						
ANR	4854765	Symbol	ycur		4854258						
ANR	4854766	Symbol	cindex		4854258						
ANR	4854767	Symbol	yblock		4854258						
ANR	4854768	Symbol	tdev -> color_info . depth		4854258						
ANR	4854769	Symbol	* ( ( gx_device_X_wrapper * ) dev ) -> color_cache		4854258						
ANR	4854770	Symbol	get_dev_target		4854258						
ANR	4854771	Symbol	x_alt_map_color		4854258						
ANR	4854772	Symbol	gx_no_bitmap_id		4854258						
ANR	4854773	Symbol	copy_color		4854258						
ANR	4854774	Symbol	mapped		4854258						
ANR	4854775	Symbol	* dev		4854258						
ANR	4854776	Symbol	sourcex		4854258						
ANR	4854777	Symbol	code		4854258						
ANR	4854778	Symbol	source_bits		4854258						
ANR	4854779	Symbol	tdev -> color_info		4854258						
ANR	4854780	Symbol	* dev_proc		4854258						
ANR	4854781	Symbol	xblock		4854258						
ANR	4854782	Symbol	dev -> color_info . depth		4854258						
ANR	4854783	Symbol	dev -> color_info		4854258						
ANR	4854784	Symbol	( ( gx_device_X_wrapper * ) dev ) -> color_cache		4854258						
ANR	4854785	Symbol	min		4854258						
ANR	4854786	Symbol	* sbit		4854258						
ANR	4854787	Symbol	dev_proc		4854258						
ANR	4854788	Symbol	xend		4854258						
ANR	4854789	Symbol	depth_bytes		4854258						
ANR	4854790	Symbol	* p ++		4854258						
ANR	4854791	Symbol	raster		4854258						
ANR	4854792	Symbol	h		4854258						
ANR	4854793	Symbol	* * dev		4854258						
ANR	4854794	Symbol	spixel		4854258						
ANR	4854795	Symbol	p		4854258						
ANR	4854796	Symbol	xcur		4854258						
ANR	4854797	Symbol	* tdev		4854258						
ANR	4854798	Symbol	gx_default_copy_color		4854258						
ANR	4854799	Symbol	mapped_pixels		4854258						
ANR	4854800	Symbol	w		4854258						
ANR	4854801	Symbol	x		4854258						
ANR	4854802	Symbol	* spixel		4854258						
ANR	4854803	Symbol	y		4854258						
ANR	4854804	Symbol	sbyte		4854258						
ANR	4854805	Symbol	yend		4854258						
ANR	4854806	Symbol	* ycur		4854258						
ANR	4854807	Symbol	block_w		4854258						
ANR	4854808	Symbol	* raster		4854258						
ANR	4854809	Symbol	base		4854258						
ANR	4854810	Function	x_forward_copy_color	251:0:7891:8288							
ANR	4854811	FunctionDef	"x_forward_copy_color (gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h)"		4854810	0					
ANR	4854812	CompoundStatement		254:0:8050:8288	4854810	0					
ANR	4854813	IdentifierDeclStatement	gx_device * tdev ;	255:4:8056:8071	4854810	0	True				
ANR	4854814	IdentifierDecl	* tdev		4854810	0					
ANR	4854815	IdentifierDeclType	gx_device *		4854810	0					
ANR	4854816	Identifier	tdev		4854810	1					
ANR	4854817	IdentifierDeclStatement	int code ;	256:4:8077:8085	4854810	1	True				
ANR	4854818	IdentifierDecl	code		4854810	0					
ANR	4854819	IdentifierDeclType	int		4854810	0					
ANR	4854820	Identifier	code		4854810	1					
ANR	4854821	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4854810	2					
ANR	4854822	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	258:8:8096:8134	4854810	0	True				
ANR	4854823	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4854810	0		<			
ANR	4854824	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4854810	0		=			
ANR	4854825	Identifier	code		4854810	0					
ANR	4854826	CallExpression	"get_dev_target ( & tdev , dev )"		4854810	1					
ANR	4854827	Callee	get_dev_target		4854810	0					
ANR	4854828	Identifier	get_dev_target		4854810	0					
ANR	4854829	ArgumentList	& tdev		4854810	1					
ANR	4854830	Argument	& tdev		4854810	0					
ANR	4854831	UnaryOperationExpression	& tdev		4854810	0					
ANR	4854832	UnaryOperator	&		4854810	0					
ANR	4854833	Identifier	tdev		4854810	1					
ANR	4854834	Argument	dev		4854810	1					
ANR	4854835	Identifier	dev		4854810	0					
ANR	4854836	PrimaryExpression	0		4854810	1					
ANR	4854837	ReturnStatement	return code ;	259:8:8145:8156	4854810	1	True				
ANR	4854838	Identifier	code		4854810	0					
ANR	4854839	ReturnStatement	"return ( * dev_proc ( tdev , copy_color ) ) ( tdev , base , sourcex , raster , id , x , y , w , h ) ;"	260:4:8162:8286	4854810	3	True				
ANR	4854840	CallExpression	"( * dev_proc ( tdev , copy_color ) ) ( tdev , base , sourcex , raster , id , x , y , w , h )"		4854810	0					
ANR	4854841	Callee	"* dev_proc ( tdev , copy_color )"		4854810	0					
ANR	4854842	UnaryOperationExpression	"* dev_proc ( tdev , copy_color )"		4854810	0					
ANR	4854843	UnaryOperator	*		4854810	0					
ANR	4854844	CallExpression	"dev_proc ( tdev , copy_color )"		4854810	1					
ANR	4854845	Callee	dev_proc		4854810	0					
ANR	4854846	Identifier	dev_proc		4854810	0					
ANR	4854847	ArgumentList	tdev		4854810	1					
ANR	4854848	Argument	tdev		4854810	0					
ANR	4854849	Identifier	tdev		4854810	0					
ANR	4854850	Argument	copy_color		4854810	1					
ANR	4854851	Identifier	copy_color		4854810	0					
ANR	4854852	ArgumentList	tdev		4854810	1					
ANR	4854853	Argument	tdev		4854810	0					
ANR	4854854	Identifier	tdev		4854810	0					
ANR	4854855	Argument	base		4854810	1					
ANR	4854856	Identifier	base		4854810	0					
ANR	4854857	Argument	sourcex		4854810	2					
ANR	4854858	Identifier	sourcex		4854810	0					
ANR	4854859	Argument	raster		4854810	3					
ANR	4854860	Identifier	raster		4854810	0					
ANR	4854861	Argument	id		4854810	4					
ANR	4854862	Identifier	id		4854810	0					
ANR	4854863	Argument	x		4854810	5					
ANR	4854864	Identifier	x		4854810	0					
ANR	4854865	Argument	y		4854810	6					
ANR	4854866	Identifier	y		4854810	0					
ANR	4854867	Argument	w		4854810	7					
ANR	4854868	Identifier	w		4854810	0					
ANR	4854869	Argument	h		4854810	8					
ANR	4854870	Identifier	h		4854810	0					
ANR	4854871	ReturnType	static int		4854810	1					
ANR	4854872	Identifier	x_forward_copy_color		4854810	2					
ANR	4854873	ParameterList	"gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h"		4854810	3					
ANR	4854874	Parameter	gx_device * dev	252:21:7923:7937	4854810	0	True				
ANR	4854875	ParameterType	gx_device *		4854810	0					
ANR	4854876	Identifier	dev		4854810	1					
ANR	4854877	Parameter	const byte * base	252:38:7940:7956	4854810	1	True				
ANR	4854878	ParameterType	const byte *		4854810	0					
ANR	4854879	Identifier	base		4854810	1					
ANR	4854880	Parameter	int sourcex	252:57:7959:7969	4854810	2	True				
ANR	4854881	ParameterType	int		4854810	0					
ANR	4854882	Identifier	sourcex		4854810	1					
ANR	4854883	Parameter	int raster	253:21:7993:8002	4854810	3	True				
ANR	4854884	ParameterType	int		4854810	0					
ANR	4854885	Identifier	raster		4854810	1					
ANR	4854886	Parameter	gx_bitmap_id id	253:33:8005:8019	4854810	4	True				
ANR	4854887	ParameterType	gx_bitmap_id		4854810	0					
ANR	4854888	Identifier	id		4854810	1					
ANR	4854889	Parameter	int x	253:50:8022:8026	4854810	5	True				
ANR	4854890	ParameterType	int		4854810	0					
ANR	4854891	Identifier	x		4854810	1					
ANR	4854892	Parameter	int y	253:57:8029:8033	4854810	6	True				
ANR	4854893	ParameterType	int		4854810	0					
ANR	4854894	Identifier	y		4854810	1					
ANR	4854895	Parameter	int w	253:64:8036:8040	4854810	7	True				
ANR	4854896	ParameterType	int		4854810	0					
ANR	4854897	Identifier	w		4854810	1					
ANR	4854898	Parameter	int h	253:71:8043:8047	4854810	8	True				
ANR	4854899	ParameterType	int		4854810	0					
ANR	4854900	Identifier	h		4854810	1					
ANR	4854901	CFGEntryNode	ENTRY		4854810		True				
ANR	4854902	CFGExitNode	EXIT		4854810		True				
ANR	4854903	Symbol	sourcex		4854810						
ANR	4854904	Symbol	"* dev_proc ( tdev , copy_color )"		4854810						
ANR	4854905	Symbol	code		4854810						
ANR	4854906	Symbol	* dev_proc		4854810						
ANR	4854907	Symbol	raster		4854810						
ANR	4854908	Symbol	h		4854810						
ANR	4854909	Symbol	& tdev		4854810						
ANR	4854910	Symbol	get_dev_target		4854810						
ANR	4854911	Symbol	dev		4854810						
ANR	4854912	Symbol	copy_color		4854810						
ANR	4854913	Symbol	dev_proc		4854810						
ANR	4854914	Symbol	w		4854810						
ANR	4854915	Symbol	tdev		4854810						
ANR	4854916	Symbol	x		4854810						
ANR	4854917	Symbol	y		4854810						
ANR	4854918	Symbol	id		4854810						
ANR	4854919	Symbol	base		4854810						
ANR	4854920	Function	x_forward_get_bits	264:0:8291:8554							
ANR	4854921	FunctionDef	"x_forward_get_bits (gx_device * dev , int y , byte * str , byte * * actual_data)"		4854920	0					
ANR	4854922	CompoundStatement		266:0:8378:8554	4854920	0					
ANR	4854923	IdentifierDeclStatement	gx_device * tdev ;	267:4:8384:8399	4854920	0	True				
ANR	4854924	IdentifierDecl	* tdev		4854920	0					
ANR	4854925	IdentifierDeclType	gx_device *		4854920	0					
ANR	4854926	Identifier	tdev		4854920	1					
ANR	4854927	IdentifierDeclStatement	int code ;	268:4:8405:8413	4854920	1	True				
ANR	4854928	IdentifierDecl	code		4854920	0					
ANR	4854929	IdentifierDeclType	int		4854920	0					
ANR	4854930	Identifier	code		4854920	1					
ANR	4854931	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4854920	2					
ANR	4854932	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	270:8:8424:8462	4854920	0	True				
ANR	4854933	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4854920	0		<			
ANR	4854934	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4854920	0		=			
ANR	4854935	Identifier	code		4854920	0					
ANR	4854936	CallExpression	"get_dev_target ( & tdev , dev )"		4854920	1					
ANR	4854937	Callee	get_dev_target		4854920	0					
ANR	4854938	Identifier	get_dev_target		4854920	0					
ANR	4854939	ArgumentList	& tdev		4854920	1					
ANR	4854940	Argument	& tdev		4854920	0					
ANR	4854941	UnaryOperationExpression	& tdev		4854920	0					
ANR	4854942	UnaryOperator	&		4854920	0					
ANR	4854943	Identifier	tdev		4854920	1					
ANR	4854944	Argument	dev		4854920	1					
ANR	4854945	Identifier	dev		4854920	0					
ANR	4854946	PrimaryExpression	0		4854920	1					
ANR	4854947	ReturnStatement	return code ;	271:8:8473:8484	4854920	1	True				
ANR	4854948	Identifier	code		4854920	0					
ANR	4854949	ReturnStatement	"return ( * dev_proc ( tdev , get_bits ) ) ( tdev , y , str , actual_data ) ;"	272:4:8490:8552	4854920	3	True				
ANR	4854950	CallExpression	"( * dev_proc ( tdev , get_bits ) ) ( tdev , y , str , actual_data )"		4854920	0					
ANR	4854951	Callee	"* dev_proc ( tdev , get_bits )"		4854920	0					
ANR	4854952	UnaryOperationExpression	"* dev_proc ( tdev , get_bits )"		4854920	0					
ANR	4854953	UnaryOperator	*		4854920	0					
ANR	4854954	CallExpression	"dev_proc ( tdev , get_bits )"		4854920	1					
ANR	4854955	Callee	dev_proc		4854920	0					
ANR	4854956	Identifier	dev_proc		4854920	0					
ANR	4854957	ArgumentList	tdev		4854920	1					
ANR	4854958	Argument	tdev		4854920	0					
ANR	4854959	Identifier	tdev		4854920	0					
ANR	4854960	Argument	get_bits		4854920	1					
ANR	4854961	Identifier	get_bits		4854920	0					
ANR	4854962	ArgumentList	tdev		4854920	1					
ANR	4854963	Argument	tdev		4854920	0					
ANR	4854964	Identifier	tdev		4854920	0					
ANR	4854965	Argument	y		4854920	1					
ANR	4854966	Identifier	y		4854920	0					
ANR	4854967	Argument	str		4854920	2					
ANR	4854968	Identifier	str		4854920	0					
ANR	4854969	Argument	actual_data		4854920	3					
ANR	4854970	Identifier	actual_data		4854920	0					
ANR	4854971	ReturnType	static int		4854920	1					
ANR	4854972	Identifier	x_forward_get_bits		4854920	2					
ANR	4854973	ParameterList	"gx_device * dev , int y , byte * str , byte * * actual_data"		4854920	3					
ANR	4854974	Parameter	gx_device * dev	265:19:8321:8335	4854920	0	True				
ANR	4854975	ParameterType	gx_device *		4854920	0					
ANR	4854976	Identifier	dev		4854920	1					
ANR	4854977	Parameter	int y	265:36:8338:8342	4854920	1	True				
ANR	4854978	ParameterType	int		4854920	0					
ANR	4854979	Identifier	y		4854920	1					
ANR	4854980	Parameter	byte * str	265:43:8345:8354	4854920	2	True				
ANR	4854981	ParameterType	byte *		4854920	0					
ANR	4854982	Identifier	str		4854920	1					
ANR	4854983	Parameter	byte * * actual_data	265:55:8357:8375	4854920	3	True				
ANR	4854984	ParameterType	byte * *		4854920	0					
ANR	4854985	Identifier	actual_data		4854920	1					
ANR	4854986	CFGEntryNode	ENTRY		4854920		True				
ANR	4854987	CFGExitNode	EXIT		4854920		True				
ANR	4854988	Symbol	str		4854920						
ANR	4854989	Symbol	actual_data		4854920						
ANR	4854990	Symbol	get_dev_target		4854920						
ANR	4854991	Symbol	code		4854920						
ANR	4854992	Symbol	dev		4854920						
ANR	4854993	Symbol	get_bits		4854920						
ANR	4854994	Symbol	* dev_proc		4854920						
ANR	4854995	Symbol	dev_proc		4854920						
ANR	4854996	Symbol	tdev		4854920						
ANR	4854997	Symbol	y		4854920						
ANR	4854998	Symbol	& tdev		4854920						
ANR	4854999	Symbol	"* dev_proc ( tdev , get_bits )"		4854920						
ANR	4855000	Function	x_wrap_get_bits	275:0:8557:11569							
ANR	4855001	FunctionDef	"x_wrap_get_bits (gx_device * dev , int y , byte * str , byte * * actual_data)"		4855000	0					
ANR	4855002	CompoundStatement		277:0:8641:11569	4855000	0					
ANR	4855003	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	278:4:8647:8680	4855000	0	True				
ANR	4855004	IdentifierDecl	depth = dev -> color_info . depth		4855000	0					
ANR	4855005	IdentifierDeclType	int		4855000	0					
ANR	4855006	Identifier	depth		4855000	1					
ANR	4855007	AssignmentExpression	depth = dev -> color_info . depth		4855000	2		=			
ANR	4855008	Identifier	depth		4855000	0					
ANR	4855009	MemberAccess	dev -> color_info . depth		4855000	1					
ANR	4855010	PtrMemberAccess	dev -> color_info		4855000	0					
ANR	4855011	Identifier	dev		4855000	0					
ANR	4855012	Identifier	color_info		4855000	1					
ANR	4855013	Identifier	depth		4855000	1					
ANR	4855014	IdentifierDeclStatement	gx_device * tdev ;	279:4:8686:8701	4855000	1	True				
ANR	4855015	IdentifierDecl	* tdev		4855000	0					
ANR	4855016	IdentifierDeclType	gx_device *		4855000	0					
ANR	4855017	Identifier	tdev		4855000	1					
ANR	4855018	IdentifierDeclStatement	int width ;	280:4:8707:8716	4855000	2	True				
ANR	4855019	IdentifierDecl	width		4855000	0					
ANR	4855020	IdentifierDeclType	int		4855000	0					
ANR	4855021	Identifier	width		4855000	1					
ANR	4855022	IdentifierDeclStatement	int sdepth ;	281:4:8722:8732	4855000	3	True				
ANR	4855023	IdentifierDecl	sdepth		4855000	0					
ANR	4855024	IdentifierDeclType	int		4855000	0					
ANR	4855025	Identifier	sdepth		4855000	1					
ANR	4855026	IdentifierDeclStatement	byte smask ;	282:4:8738:8748	4855000	4	True				
ANR	4855027	IdentifierDecl	smask		4855000	0					
ANR	4855028	IdentifierDeclType	byte		4855000	0					
ANR	4855029	Identifier	smask		4855000	1					
ANR	4855030	IdentifierDeclStatement	uint dsize ;	283:4:8754:8764	4855000	5	True				
ANR	4855031	IdentifierDecl	dsize		4855000	0					
ANR	4855032	IdentifierDeclType	uint		4855000	0					
ANR	4855033	Identifier	dsize		4855000	1					
ANR	4855034	IdentifierDeclStatement	gs_memory_t * mem = dev -> memory ;	284:4:8770:8800	4855000	6	True				
ANR	4855035	IdentifierDecl	* mem = dev -> memory		4855000	0					
ANR	4855036	IdentifierDeclType	gs_memory_t *		4855000	0					
ANR	4855037	Identifier	mem		4855000	1					
ANR	4855038	AssignmentExpression	* mem = dev -> memory		4855000	2		=			
ANR	4855039	Identifier	mem		4855000	0					
ANR	4855040	PtrMemberAccess	dev -> memory		4855000	1					
ANR	4855041	Identifier	dev		4855000	0					
ANR	4855042	Identifier	memory		4855000	1					
ANR	4855043	IdentifierDeclStatement	byte * row ;	285:4:8806:8815	4855000	7	True				
ANR	4855044	IdentifierDecl	* row		4855000	0					
ANR	4855045	IdentifierDeclType	byte *		4855000	0					
ANR	4855046	Identifier	row		4855000	1					
ANR	4855047	IdentifierDeclStatement	byte * base ;	286:4:8821:8831	4855000	8	True				
ANR	4855048	IdentifierDecl	* base		4855000	0					
ANR	4855049	IdentifierDeclType	byte *		4855000	0					
ANR	4855050	Identifier	base		4855000	1					
ANR	4855051	IdentifierDeclStatement	int code ;	287:4:8837:8845	4855000	9	True				
ANR	4855052	IdentifierDecl	code		4855000	0					
ANR	4855053	IdentifierDeclType	int		4855000	0					
ANR	4855054	Identifier	code		4855000	1					
ANR	4855055	IdentifierDeclStatement	gx_color_index pixel_in = gx_no_color_index ;	288:4:8851:8894	4855000	10	True				
ANR	4855056	IdentifierDecl	pixel_in = gx_no_color_index		4855000	0					
ANR	4855057	IdentifierDeclType	gx_color_index		4855000	0					
ANR	4855058	Identifier	pixel_in		4855000	1					
ANR	4855059	AssignmentExpression	pixel_in = gx_no_color_index		4855000	2		=			
ANR	4855060	Identifier	gx_no_color_index		4855000	0					
ANR	4855061	Identifier	gx_no_color_index		4855000	1					
ANR	4855062	IdentifierDeclStatement	gx_color_index pixel_out = 0 ;	296:4:9272:9300	4855000	11	True				
ANR	4855063	IdentifierDecl	pixel_out = 0		4855000	0					
ANR	4855064	IdentifierDeclType	gx_color_index		4855000	0					
ANR	4855065	Identifier	pixel_out		4855000	1					
ANR	4855066	AssignmentExpression	pixel_out = 0		4855000	2		=			
ANR	4855067	Identifier	pixel_out		4855000	0					
ANR	4855068	PrimaryExpression	0		4855000	1					
ANR	4855069	IdentifierDeclStatement	int xi ;	297:4:9306:9312	4855000	12	True				
ANR	4855070	IdentifierDecl	xi		4855000	0					
ANR	4855071	IdentifierDeclType	int		4855000	0					
ANR	4855072	Identifier	xi		4855000	1					
ANR	4855073	IdentifierDeclStatement	int sbit ;	298:4:9318:9326	4855000	13	True				
ANR	4855074	IdentifierDecl	sbit		4855000	0					
ANR	4855075	IdentifierDeclType	int		4855000	0					
ANR	4855076	Identifier	sbit		4855000	1					
ANR	4855077	IdentifierDeclStatement	byte * l_dptr = str ;	300:4:9333:9351	4855000	14	True				
ANR	4855078	IdentifierDecl	* l_dptr = str		4855000	0					
ANR	4855079	IdentifierDeclType	byte *		4855000	0					
ANR	4855080	Identifier	l_dptr		4855000	1					
ANR	4855081	AssignmentExpression	* l_dptr = str		4855000	2		=			
ANR	4855082	Identifier	str		4855000	0					
ANR	4855083	Identifier	str		4855000	1					
ANR	4855084	IdentifierDeclStatement	int l_dbit = 0 ;	301:4:9357:9371	4855000	15	True				
ANR	4855085	IdentifierDecl	l_dbit = 0		4855000	0					
ANR	4855086	IdentifierDeclType	int		4855000	0					
ANR	4855087	Identifier	l_dbit		4855000	1					
ANR	4855088	AssignmentExpression	l_dbit = 0		4855000	2		=			
ANR	4855089	Identifier	l_dbit		4855000	0					
ANR	4855090	PrimaryExpression	0		4855000	1					
ANR	4855091	IdentifierDeclStatement	byte l_dbyte = 0 ;	302:4:9377:9393	4855000	16	True				
ANR	4855092	IdentifierDecl	l_dbyte = 0		4855000	0					
ANR	4855093	IdentifierDeclType	byte		4855000	0					
ANR	4855094	Identifier	l_dbyte		4855000	1					
ANR	4855095	AssignmentExpression	l_dbyte = 0		4855000	2		=			
ANR	4855096	Identifier	l_dbyte		4855000	0					
ANR	4855097	PrimaryExpression	0		4855000	1					
ANR	4855098	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4855000	17					
ANR	4855099	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	304:8:9404:9442	4855000	0	True				
ANR	4855100	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4855000	0		<			
ANR	4855101	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4855000	0		=			
ANR	4855102	Identifier	code		4855000	0					
ANR	4855103	CallExpression	"get_dev_target ( & tdev , dev )"		4855000	1					
ANR	4855104	Callee	get_dev_target		4855000	0					
ANR	4855105	Identifier	get_dev_target		4855000	0					
ANR	4855106	ArgumentList	& tdev		4855000	1					
ANR	4855107	Argument	& tdev		4855000	0					
ANR	4855108	UnaryOperationExpression	& tdev		4855000	0					
ANR	4855109	UnaryOperator	&		4855000	0					
ANR	4855110	Identifier	tdev		4855000	1					
ANR	4855111	Argument	dev		4855000	1					
ANR	4855112	Identifier	dev		4855000	0					
ANR	4855113	PrimaryExpression	0		4855000	1					
ANR	4855114	ReturnStatement	return code ;	305:8:9453:9464	4855000	1	True				
ANR	4855115	Identifier	code		4855000	0					
ANR	4855116	ExpressionStatement	width = tdev -> width	306:4:9470:9489	4855000	18	True				
ANR	4855117	AssignmentExpression	width = tdev -> width		4855000	0		=			
ANR	4855118	Identifier	width		4855000	0					
ANR	4855119	PtrMemberAccess	tdev -> width		4855000	1					
ANR	4855120	Identifier	tdev		4855000	0					
ANR	4855121	Identifier	width		4855000	1					
ANR	4855122	ExpressionStatement	sdepth = tdev -> color_info . depth	307:4:9495:9526	4855000	19	True				
ANR	4855123	AssignmentExpression	sdepth = tdev -> color_info . depth		4855000	0		=			
ANR	4855124	Identifier	sdepth		4855000	0					
ANR	4855125	MemberAccess	tdev -> color_info . depth		4855000	1					
ANR	4855126	PtrMemberAccess	tdev -> color_info		4855000	0					
ANR	4855127	Identifier	tdev		4855000	0					
ANR	4855128	Identifier	color_info		4855000	1					
ANR	4855129	Identifier	depth		4855000	1					
ANR	4855130	ExpressionStatement	smask = ( sdepth <= 8 ? ( 1 << sdepth ) - 1 : 0xff )	308:4:9532:9580	4855000	20	True				
ANR	4855131	AssignmentExpression	smask = ( sdepth <= 8 ? ( 1 << sdepth ) - 1 : 0xff )		4855000	0		=			
ANR	4855132	Identifier	smask		4855000	0					
ANR	4855133	ConditionalExpression	sdepth <= 8 ? ( 1 << sdepth ) - 1 : 0xff		4855000	1					
ANR	4855134	Condition	sdepth <= 8		4855000	0					
ANR	4855135	RelationalExpression	sdepth <= 8		4855000	0		<=			
ANR	4855136	Identifier	sdepth		4855000	0					
ANR	4855137	PrimaryExpression	8		4855000	1					
ANR	4855138	AdditiveExpression	( 1 << sdepth ) - 1		4855000	1		-			
ANR	4855139	ShiftExpression	1 << sdepth		4855000	0		<<			
ANR	4855140	PrimaryExpression	1		4855000	0					
ANR	4855141	Identifier	sdepth		4855000	1					
ANR	4855142	PrimaryExpression	1		4855000	1					
ANR	4855143	PrimaryExpression	0xff		4855000	2					
ANR	4855144	ExpressionStatement	dsize = ( width * sdepth + 7 ) / 8	309:4:9586:9618	4855000	21	True				
ANR	4855145	AssignmentExpression	dsize = ( width * sdepth + 7 ) / 8		4855000	0		=			
ANR	4855146	Identifier	dsize		4855000	0					
ANR	4855147	MultiplicativeExpression	( width * sdepth + 7 ) / 8		4855000	1		/			
ANR	4855148	AdditiveExpression	width * sdepth + 7		4855000	0		+			
ANR	4855149	MultiplicativeExpression	width * sdepth		4855000	0		*			
ANR	4855150	Identifier	width		4855000	0					
ANR	4855151	Identifier	sdepth		4855000	1					
ANR	4855152	PrimaryExpression	7		4855000	1					
ANR	4855153	PrimaryExpression	8		4855000	1					
ANR	4855154	ExpressionStatement	"row = gs_alloc_bytes ( mem , dsize , ""x_wrap_get_bits"" )"	310:4:9624:9675	4855000	22	True				
ANR	4855155	AssignmentExpression	"row = gs_alloc_bytes ( mem , dsize , ""x_wrap_get_bits"" )"		4855000	0		=			
ANR	4855156	Identifier	row		4855000	0					
ANR	4855157	CallExpression	"gs_alloc_bytes ( mem , dsize , ""x_wrap_get_bits"" )"		4855000	1					
ANR	4855158	Callee	gs_alloc_bytes		4855000	0					
ANR	4855159	Identifier	gs_alloc_bytes		4855000	0					
ANR	4855160	ArgumentList	mem		4855000	1					
ANR	4855161	Argument	mem		4855000	0					
ANR	4855162	Identifier	mem		4855000	0					
ANR	4855163	Argument	dsize		4855000	1					
ANR	4855164	Identifier	dsize		4855000	0					
ANR	4855165	Argument	"""x_wrap_get_bits"""		4855000	2					
ANR	4855166	PrimaryExpression	"""x_wrap_get_bits"""		4855000	0					
ANR	4855167	IfStatement	if ( row == 0 )		4855000	23					
ANR	4855168	Condition	row == 0	311:8:9685:9692	4855000	0	True				
ANR	4855169	EqualityExpression	row == 0		4855000	0		==			
ANR	4855170	Identifier	row		4855000	0					
ANR	4855171	PrimaryExpression	0		4855000	1					
ANR	4855172	ExpressionStatement	return_error ( gs_error_VMerror )	312:8:9703:9733	4855000	1	True				
ANR	4855173	CallExpression	return_error ( gs_error_VMerror )		4855000	0					
ANR	4855174	Callee	return_error		4855000	0					
ANR	4855175	Identifier	return_error		4855000	0					
ANR	4855176	ArgumentList	gs_error_VMerror		4855000	1					
ANR	4855177	Argument	gs_error_VMerror		4855000	0					
ANR	4855178	Identifier	gs_error_VMerror		4855000	0					
ANR	4855179	ExpressionStatement	"code = ( * dev_proc ( tdev , get_bits ) ) ( tdev , y , row , & base )"	313:4:9739:9795	4855000	24	True				
ANR	4855180	AssignmentExpression	"code = ( * dev_proc ( tdev , get_bits ) ) ( tdev , y , row , & base )"		4855000	0		=			
ANR	4855181	Identifier	code		4855000	0					
ANR	4855182	CallExpression	"( * dev_proc ( tdev , get_bits ) ) ( tdev , y , row , & base )"		4855000	1					
ANR	4855183	Callee	"* dev_proc ( tdev , get_bits )"		4855000	0					
ANR	4855184	UnaryOperationExpression	"* dev_proc ( tdev , get_bits )"		4855000	0					
ANR	4855185	UnaryOperator	*		4855000	0					
ANR	4855186	CallExpression	"dev_proc ( tdev , get_bits )"		4855000	1					
ANR	4855187	Callee	dev_proc		4855000	0					
ANR	4855188	Identifier	dev_proc		4855000	0					
ANR	4855189	ArgumentList	tdev		4855000	1					
ANR	4855190	Argument	tdev		4855000	0					
ANR	4855191	Identifier	tdev		4855000	0					
ANR	4855192	Argument	get_bits		4855000	1					
ANR	4855193	Identifier	get_bits		4855000	0					
ANR	4855194	ArgumentList	tdev		4855000	1					
ANR	4855195	Argument	tdev		4855000	0					
ANR	4855196	Identifier	tdev		4855000	0					
ANR	4855197	Argument	y		4855000	1					
ANR	4855198	Identifier	y		4855000	0					
ANR	4855199	Argument	row		4855000	2					
ANR	4855200	Identifier	row		4855000	0					
ANR	4855201	Argument	& base		4855000	3					
ANR	4855202	UnaryOperationExpression	& base		4855000	0					
ANR	4855203	UnaryOperator	&		4855000	0					
ANR	4855204	Identifier	base		4855000	1					
ANR	4855205	IfStatement	if ( code < 0 )		4855000	25					
ANR	4855206	Condition	code < 0	314:8:9805:9812	4855000	0	True				
ANR	4855207	RelationalExpression	code < 0		4855000	0		<			
ANR	4855208	Identifier	code		4855000	0					
ANR	4855209	PrimaryExpression	0		4855000	1					
ANR	4855210	GotoStatement	goto gx ;	315:8:9823:9830	4855000	1	True				
ANR	4855211	Identifier	gx		4855000	0					
ANR	4855212	ForStatement	"for ( sbit = 0 , xi = 0 ; xi < width ; sbit += sdepth , ++ xi )"		4855000	26					
ANR	4855213	ForInit	"sbit = 0 , xi = 0 ;"	316:9:9841:9857	4855000	0	True				
ANR	4855214	Expression	"sbit = 0 , xi = 0"		4855000	0					
ANR	4855215	AssignmentExpression	sbit = 0		4855000	0		=			
ANR	4855216	Identifier	sbit		4855000	0					
ANR	4855217	PrimaryExpression	0		4855000	1					
ANR	4855218	AssignmentExpression	xi = 0		4855000	1		=			
ANR	4855219	Identifier	xi		4855000	0					
ANR	4855220	PrimaryExpression	0		4855000	1					
ANR	4855221	Condition	xi < width	316:27:9859:9868	4855000	1	True				
ANR	4855222	RelationalExpression	xi < width		4855000	0		<			
ANR	4855223	Identifier	xi		4855000	0					
ANR	4855224	Identifier	width		4855000	1					
ANR	4855225	Expression	"sbit += sdepth , ++ xi"	316:39:9871:9890	4855000	2	True				
ANR	4855226	AssignmentExpression	sbit += sdepth		4855000	0		+=			
ANR	4855227	Identifier	sbit		4855000	0					
ANR	4855228	Identifier	sdepth		4855000	1					
ANR	4855229	UnaryExpression	++ xi		4855000	1					
ANR	4855230	IncDec	++		4855000	0					
ANR	4855231	Identifier	xi		4855000	1					
ANR	4855232	CompoundStatement		44:8:1369:1374	4855000	3					
ANR	4855233	IdentifierDeclStatement	const byte * sptr = base + ( sbit >> 3 ) ;	317:8:9903:9940	4855000	0	True				
ANR	4855234	IdentifierDecl	* sptr = base + ( sbit >> 3 )		4855000	0					
ANR	4855235	IdentifierDeclType	const byte *		4855000	0					
ANR	4855236	Identifier	sptr		4855000	1					
ANR	4855237	AssignmentExpression	* sptr = base + ( sbit >> 3 )		4855000	2		=			
ANR	4855238	Identifier	sptr		4855000	0					
ANR	4855239	AdditiveExpression	base + ( sbit >> 3 )		4855000	1		+			
ANR	4855240	Identifier	base		4855000	0					
ANR	4855241	ShiftExpression	sbit >> 3		4855000	1		>>			
ANR	4855242	Identifier	sbit		4855000	0					
ANR	4855243	PrimaryExpression	3		4855000	1					
ANR	4855244	IdentifierDeclStatement	gx_color_index pixel ;	318:8:9950:9970	4855000	1	True				
ANR	4855245	IdentifierDecl	pixel		4855000	0					
ANR	4855246	IdentifierDeclType	gx_color_index		4855000	0					
ANR	4855247	Identifier	pixel		4855000	1					
ANR	4855248	IdentifierDeclStatement	gx_color_value rgb [ 3 ] ;	319:8:9980:10001	4855000	2	True				
ANR	4855249	IdentifierDecl	rgb [ 3 ]		4855000	0					
ANR	4855250	IdentifierDeclType	gx_color_value [ 3 ]		4855000	0					
ANR	4855251	Identifier	rgb		4855000	1					
ANR	4855252	PrimaryExpression	3		4855000	2					
ANR	4855253	IdentifierDeclStatement	int i ;	320:8:10011:10016	4855000	3	True				
ANR	4855254	IdentifierDecl	i		4855000	0					
ANR	4855255	IdentifierDeclType	int		4855000	0					
ANR	4855256	Identifier	i		4855000	1					
ANR	4855257	IfStatement	if ( sdepth <= 8 )		4855000	4					
ANR	4855258	Condition	sdepth <= 8	322:12:10031:10041	4855000	0	True				
ANR	4855259	RelationalExpression	sdepth <= 8		4855000	0		<=			
ANR	4855260	Identifier	sdepth		4855000	0					
ANR	4855261	PrimaryExpression	8		4855000	1					
ANR	4855262	ExpressionStatement	pixel = ( * sptr >> ( 8 - sdepth - ( sbit & 7 ) ) ) & smask	323:12:10056:10108	4855000	1	True				
ANR	4855263	AssignmentExpression	pixel = ( * sptr >> ( 8 - sdepth - ( sbit & 7 ) ) ) & smask		4855000	0		=			
ANR	4855264	Identifier	pixel		4855000	0					
ANR	4855265	BitAndExpression	( * sptr >> ( 8 - sdepth - ( sbit & 7 ) ) ) & smask		4855000	1		&			
ANR	4855266	ShiftExpression	* sptr >> ( 8 - sdepth - ( sbit & 7 ) )		4855000	0		>>			
ANR	4855267	UnaryOperationExpression	* sptr		4855000	0					
ANR	4855268	UnaryOperator	*		4855000	0					
ANR	4855269	Identifier	sptr		4855000	1					
ANR	4855270	AdditiveExpression	8 - sdepth - ( sbit & 7 )		4855000	1		-			
ANR	4855271	PrimaryExpression	8		4855000	0					
ANR	4855272	AdditiveExpression	sdepth - ( sbit & 7 )		4855000	1		-			
ANR	4855273	Identifier	sdepth		4855000	0					
ANR	4855274	BitAndExpression	sbit & 7		4855000	1		&			
ANR	4855275	Identifier	sbit		4855000	0					
ANR	4855276	PrimaryExpression	7		4855000	1					
ANR	4855277	Identifier	smask		4855000	1					
ANR	4855278	ElseStatement	else		4855000	0					
ANR	4855279	CompoundStatement		48:13:1481:1481	4855000	0					
ANR	4855280	ExpressionStatement	pixel = 0	325:12:10137:10146	4855000	0	True				
ANR	4855281	AssignmentExpression	pixel = 0		4855000	0		=			
ANR	4855282	Identifier	pixel		4855000	0					
ANR	4855283	PrimaryExpression	0		4855000	1					
ANR	4855284	ForStatement	"for ( i = 0 ; i < sdepth ; i += 8 , ++ sptr )"		4855000	1					
ANR	4855285	ForInit	i = 0 ;	326:17:10165:10170	4855000	0	True				
ANR	4855286	AssignmentExpression	i = 0		4855000	0		=			
ANR	4855287	Identifier	i		4855000	0					
ANR	4855288	PrimaryExpression	0		4855000	1					
ANR	4855289	Condition	i < sdepth	326:24:10172:10181	4855000	1	True				
ANR	4855290	RelationalExpression	i < sdepth		4855000	0		<			
ANR	4855291	Identifier	i		4855000	0					
ANR	4855292	Identifier	sdepth		4855000	1					
ANR	4855293	Expression	"i += 8 , ++ sptr"	326:36:10184:10197	4855000	2	True				
ANR	4855294	AssignmentExpression	i += 8		4855000	0		+=			
ANR	4855295	Identifier	i		4855000	0					
ANR	4855296	PrimaryExpression	8		4855000	1					
ANR	4855297	UnaryExpression	++ sptr		4855000	1					
ANR	4855298	IncDec	++		4855000	0					
ANR	4855299	Identifier	sptr		4855000	1					
ANR	4855300	ExpressionStatement	pixel = ( pixel << 8 ) + * sptr	327:16:10216:10244	4855000	3	True				
ANR	4855301	AssignmentExpression	pixel = ( pixel << 8 ) + * sptr		4855000	0		=			
ANR	4855302	Identifier	pixel		4855000	0					
ANR	4855303	AdditiveExpression	( pixel << 8 ) + * sptr		4855000	1		+			
ANR	4855304	ShiftExpression	pixel << 8		4855000	0		<<			
ANR	4855305	Identifier	pixel		4855000	0					
ANR	4855306	PrimaryExpression	8		4855000	1					
ANR	4855307	UnaryOperationExpression	* sptr		4855000	1					
ANR	4855308	UnaryOperator	*		4855000	0					
ANR	4855309	Identifier	sptr		4855000	1					
ANR	4855310	IfStatement	if ( pixel != pixel_in )		4855000	5					
ANR	4855311	Condition	pixel != pixel_in	329:12:10268:10284	4855000	0	True				
ANR	4855312	EqualityExpression	pixel != pixel_in		4855000	0		!=			
ANR	4855313	Identifier	pixel		4855000	0					
ANR	4855314	Identifier	pixel_in		4855000	1					
ANR	4855315	CompoundStatement		53:31:1645:1645	4855000	1					
ANR	4855316	ExpressionStatement	"( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , pixel , rgb )"	330:12:10301:10351	4855000	0	True				
ANR	4855317	CallExpression	"( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , pixel , rgb )"		4855000	0					
ANR	4855318	Callee	"* dev_proc ( tdev , map_color_rgb )"		4855000	0					
ANR	4855319	UnaryOperationExpression	"* dev_proc ( tdev , map_color_rgb )"		4855000	0					
ANR	4855320	UnaryOperator	*		4855000	0					
ANR	4855321	CallExpression	"dev_proc ( tdev , map_color_rgb )"		4855000	1					
ANR	4855322	Callee	dev_proc		4855000	0					
ANR	4855323	Identifier	dev_proc		4855000	0					
ANR	4855324	ArgumentList	tdev		4855000	1					
ANR	4855325	Argument	tdev		4855000	0					
ANR	4855326	Identifier	tdev		4855000	0					
ANR	4855327	Argument	map_color_rgb		4855000	1					
ANR	4855328	Identifier	map_color_rgb		4855000	0					
ANR	4855329	ArgumentList	tdev		4855000	1					
ANR	4855330	Argument	tdev		4855000	0					
ANR	4855331	Identifier	tdev		4855000	0					
ANR	4855332	Argument	pixel		4855000	1					
ANR	4855333	Identifier	pixel		4855000	0					
ANR	4855334	Argument	rgb		4855000	2					
ANR	4855335	Identifier	rgb		4855000	0					
ANR	4855336	ExpressionStatement	pixel_in = pixel	331:12:10365:10381	4855000	1	True				
ANR	4855337	AssignmentExpression	pixel_in = pixel		4855000	0		=			
ANR	4855338	Identifier	pixel_in		4855000	0					
ANR	4855339	Identifier	pixel		4855000	1					
ANR	4855340	IfStatement	if ( dev -> color_info . num_components <= 3 )		4855000	2					
ANR	4855341	Condition	dev -> color_info . num_components <= 3	332:16:10399:10433	4855000	0	True				
ANR	4855342	RelationalExpression	dev -> color_info . num_components <= 3		4855000	0		<=			
ANR	4855343	MemberAccess	dev -> color_info . num_components		4855000	0					
ANR	4855344	PtrMemberAccess	dev -> color_info		4855000	0					
ANR	4855345	Identifier	dev		4855000	0					
ANR	4855346	Identifier	color_info		4855000	1					
ANR	4855347	Identifier	num_components		4855000	1					
ANR	4855348	PrimaryExpression	3		4855000	1					
ANR	4855349	ExpressionStatement	"pixel_out = ( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb )"	333:16:10452:10505	4855000	1	True				
ANR	4855350	AssignmentExpression	"pixel_out = ( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb )"		4855000	0		=			
ANR	4855351	Identifier	pixel_out		4855000	0					
ANR	4855352	CallExpression	"( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb )"		4855000	1					
ANR	4855353	Callee	"* dev_proc ( dev , map_rgb_color )"		4855000	0					
ANR	4855354	UnaryOperationExpression	"* dev_proc ( dev , map_rgb_color )"		4855000	0					
ANR	4855355	UnaryOperator	*		4855000	0					
ANR	4855356	CallExpression	"dev_proc ( dev , map_rgb_color )"		4855000	1					
ANR	4855357	Callee	dev_proc		4855000	0					
ANR	4855358	Identifier	dev_proc		4855000	0					
ANR	4855359	ArgumentList	dev		4855000	1					
ANR	4855360	Argument	dev		4855000	0					
ANR	4855361	Identifier	dev		4855000	0					
ANR	4855362	Argument	map_rgb_color		4855000	1					
ANR	4855363	Identifier	map_rgb_color		4855000	0					
ANR	4855364	ArgumentList	dev		4855000	1					
ANR	4855365	Argument	dev		4855000	0					
ANR	4855366	Identifier	dev		4855000	0					
ANR	4855367	Argument	rgb		4855000	1					
ANR	4855368	Identifier	rgb		4855000	0					
ANR	4855369	ElseStatement	else		4855000	0					
ANR	4855370	CompoundStatement		65:16:2204:2226	4855000	0					
ANR	4855371	IdentifierDeclStatement	gx_color_value c = gx_max_color_value - rgb [ 0 ] ;	336:16:10585:10631	4855000	0	True				
ANR	4855372	IdentifierDecl	c = gx_max_color_value - rgb [ 0 ]		4855000	0					
ANR	4855373	IdentifierDeclType	gx_color_value		4855000	0					
ANR	4855374	Identifier	c		4855000	1					
ANR	4855375	AssignmentExpression	c = gx_max_color_value - rgb [ 0 ]		4855000	2		=			
ANR	4855376	Identifier	c		4855000	0					
ANR	4855377	AdditiveExpression	gx_max_color_value - rgb [ 0 ]		4855000	1		-			
ANR	4855378	Identifier	gx_max_color_value		4855000	0					
ANR	4855379	ArrayIndexing	rgb [ 0 ]		4855000	1					
ANR	4855380	Identifier	rgb		4855000	0					
ANR	4855381	PrimaryExpression	0		4855000	1					
ANR	4855382	IdentifierDeclStatement	gx_color_value m = gx_max_color_value - rgb [ 1 ] ;	337:16:10649:10695	4855000	1	True				
ANR	4855383	IdentifierDecl	m = gx_max_color_value - rgb [ 1 ]		4855000	0					
ANR	4855384	IdentifierDeclType	gx_color_value		4855000	0					
ANR	4855385	Identifier	m		4855000	1					
ANR	4855386	AssignmentExpression	m = gx_max_color_value - rgb [ 1 ]		4855000	2		=			
ANR	4855387	Identifier	m		4855000	0					
ANR	4855388	AdditiveExpression	gx_max_color_value - rgb [ 1 ]		4855000	1		-			
ANR	4855389	Identifier	gx_max_color_value		4855000	0					
ANR	4855390	ArrayIndexing	rgb [ 1 ]		4855000	1					
ANR	4855391	Identifier	rgb		4855000	0					
ANR	4855392	PrimaryExpression	1		4855000	1					
ANR	4855393	IdentifierDeclStatement	gx_color_value y = gx_max_color_value - rgb [ 2 ] ;	338:16:10713:10759	4855000	2	True				
ANR	4855394	IdentifierDecl	y = gx_max_color_value - rgb [ 2 ]		4855000	0					
ANR	4855395	IdentifierDeclType	gx_color_value		4855000	0					
ANR	4855396	Identifier	y		4855000	1					
ANR	4855397	AssignmentExpression	y = gx_max_color_value - rgb [ 2 ]		4855000	2		=			
ANR	4855398	Identifier	y		4855000	0					
ANR	4855399	AdditiveExpression	gx_max_color_value - rgb [ 2 ]		4855000	1		-			
ANR	4855400	Identifier	gx_max_color_value		4855000	0					
ANR	4855401	ArrayIndexing	rgb [ 2 ]		4855000	1					
ANR	4855402	Identifier	rgb		4855000	0					
ANR	4855403	PrimaryExpression	2		4855000	1					
ANR	4855404	IdentifierDeclStatement	"gx_color_value k = ( c < m ? min ( c , y ) : min ( m , y ) ) ;"	339:16:10777:10827	4855000	3	True				
ANR	4855405	IdentifierDecl	"k = ( c < m ? min ( c , y ) : min ( m , y ) )"		4855000	0					
ANR	4855406	IdentifierDeclType	gx_color_value		4855000	0					
ANR	4855407	Identifier	k		4855000	1					
ANR	4855408	AssignmentExpression	"k = ( c < m ? min ( c , y ) : min ( m , y ) )"		4855000	2		=			
ANR	4855409	Identifier	k		4855000	0					
ANR	4855410	ConditionalExpression	"c < m ? min ( c , y ) : min ( m , y )"		4855000	1					
ANR	4855411	Condition	c < m		4855000	0					
ANR	4855412	RelationalExpression	c < m		4855000	0		<			
ANR	4855413	Identifier	c		4855000	0					
ANR	4855414	Identifier	m		4855000	1					
ANR	4855415	CallExpression	"min ( c , y )"		4855000	1					
ANR	4855416	Callee	min		4855000	0					
ANR	4855417	Identifier	min		4855000	0					
ANR	4855418	ArgumentList	c		4855000	1					
ANR	4855419	Argument	c		4855000	0					
ANR	4855420	Identifier	c		4855000	0					
ANR	4855421	Argument	y		4855000	1					
ANR	4855422	Identifier	y		4855000	0					
ANR	4855423	CallExpression	"min ( m , y )"		4855000	2					
ANR	4855424	Callee	min		4855000	0					
ANR	4855425	Identifier	min		4855000	0					
ANR	4855426	ArgumentList	m		4855000	1					
ANR	4855427	Argument	m		4855000	0					
ANR	4855428	Identifier	m		4855000	0					
ANR	4855429	Argument	y		4855000	1					
ANR	4855430	Identifier	y		4855000	0					
ANR	4855431	IdentifierDeclStatement	gx_color_value cmyk [ 4 ] ;	341:16:10846:10868	4855000	4	True				
ANR	4855432	IdentifierDecl	cmyk [ 4 ]		4855000	0					
ANR	4855433	IdentifierDeclType	gx_color_value [ 4 ]		4855000	0					
ANR	4855434	Identifier	cmyk		4855000	1					
ANR	4855435	PrimaryExpression	4		4855000	2					
ANR	4855436	ExpressionStatement	cmyk [ 0 ] = c - k	342:16:10886:10901	4855000	5	True				
ANR	4855437	AssignmentExpression	cmyk [ 0 ] = c - k		4855000	0		=			
ANR	4855438	ArrayIndexing	cmyk [ 0 ]		4855000	0					
ANR	4855439	Identifier	cmyk		4855000	0					
ANR	4855440	PrimaryExpression	0		4855000	1					
ANR	4855441	AdditiveExpression	c - k		4855000	1		-			
ANR	4855442	Identifier	c		4855000	0					
ANR	4855443	Identifier	k		4855000	1					
ANR	4855444	ExpressionStatement	cmyk [ 1 ] = m - k	342:33:10903:10918	4855000	6	True				
ANR	4855445	AssignmentExpression	cmyk [ 1 ] = m - k		4855000	0		=			
ANR	4855446	ArrayIndexing	cmyk [ 1 ]		4855000	0					
ANR	4855447	Identifier	cmyk		4855000	0					
ANR	4855448	PrimaryExpression	1		4855000	1					
ANR	4855449	AdditiveExpression	m - k		4855000	1		-			
ANR	4855450	Identifier	m		4855000	0					
ANR	4855451	Identifier	k		4855000	1					
ANR	4855452	ExpressionStatement	cmyk [ 2 ] = y - k	342:50:10920:10935	4855000	7	True				
ANR	4855453	AssignmentExpression	cmyk [ 2 ] = y - k		4855000	0		=			
ANR	4855454	ArrayIndexing	cmyk [ 2 ]		4855000	0					
ANR	4855455	Identifier	cmyk		4855000	0					
ANR	4855456	PrimaryExpression	2		4855000	1					
ANR	4855457	AdditiveExpression	y - k		4855000	1		-			
ANR	4855458	Identifier	y		4855000	0					
ANR	4855459	Identifier	k		4855000	1					
ANR	4855460	ExpressionStatement	cmyk [ 3 ] = k	342:67:10937:10948	4855000	8	True				
ANR	4855461	AssignmentExpression	cmyk [ 3 ] = k		4855000	0		=			
ANR	4855462	ArrayIndexing	cmyk [ 3 ]		4855000	0					
ANR	4855463	Identifier	cmyk		4855000	0					
ANR	4855464	PrimaryExpression	3		4855000	1					
ANR	4855465	Identifier	k		4855000	1					
ANR	4855466	ExpressionStatement	"pixel_out = ( * dev_proc ( dev , map_cmyk_color ) ) ( dev , cmyk )"	343:16:10966:11021	4855000	9	True				
ANR	4855467	AssignmentExpression	"pixel_out = ( * dev_proc ( dev , map_cmyk_color ) ) ( dev , cmyk )"		4855000	0		=			
ANR	4855468	Identifier	pixel_out		4855000	0					
ANR	4855469	CallExpression	"( * dev_proc ( dev , map_cmyk_color ) ) ( dev , cmyk )"		4855000	1					
ANR	4855470	Callee	"* dev_proc ( dev , map_cmyk_color )"		4855000	0					
ANR	4855471	UnaryOperationExpression	"* dev_proc ( dev , map_cmyk_color )"		4855000	0					
ANR	4855472	UnaryOperator	*		4855000	0					
ANR	4855473	CallExpression	"dev_proc ( dev , map_cmyk_color )"		4855000	1					
ANR	4855474	Callee	dev_proc		4855000	0					
ANR	4855475	Identifier	dev_proc		4855000	0					
ANR	4855476	ArgumentList	dev		4855000	1					
ANR	4855477	Argument	dev		4855000	0					
ANR	4855478	Identifier	dev		4855000	0					
ANR	4855479	Argument	map_cmyk_color		4855000	1					
ANR	4855480	Identifier	map_cmyk_color		4855000	0					
ANR	4855481	ArgumentList	dev		4855000	1					
ANR	4855482	Argument	dev		4855000	0					
ANR	4855483	Identifier	dev		4855000	0					
ANR	4855484	Argument	cmyk		4855000	1					
ANR	4855485	Identifier	cmyk		4855000	0					
ANR	4855486	IfStatement	if ( sizeof ( pixel_out ) > 4 )		4855000	6					
ANR	4855487	Condition	sizeof ( pixel_out ) > 4	346:12:11059:11079	4855000	0	True				
ANR	4855488	RelationalExpression	sizeof ( pixel_out ) > 4		4855000	0		>			
ANR	4855489	SizeofExpression	sizeof ( pixel_out )		4855000	0					
ANR	4855490	Sizeof	sizeof		4855000	0					
ANR	4855491	SizeofOperand	pixel_out		4855000	1					
ANR	4855492	PrimaryExpression	4		4855000	1					
ANR	4855493	CompoundStatement		70:35:2440:2440	4855000	1					
ANR	4855494	IfStatement	"if ( sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0 )"		4855000	0					
ANR	4855495	Condition	"sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"	347:16:11100:11168	4855000	0	True				
ANR	4855496	RelationalExpression	"sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"		4855000	0		<			
ANR	4855497	CallExpression	"sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte )"		4855000	0					
ANR	4855498	Callee	sample_store_next64		4855000	0					
ANR	4855499	Identifier	sample_store_next64		4855000	0					
ANR	4855500	ArgumentList	pixel_out		4855000	1					
ANR	4855501	Argument	pixel_out		4855000	0					
ANR	4855502	Identifier	pixel_out		4855000	0					
ANR	4855503	Argument	& l_dptr		4855000	1					
ANR	4855504	UnaryOperationExpression	& l_dptr		4855000	0					
ANR	4855505	UnaryOperator	&		4855000	0					
ANR	4855506	Identifier	l_dptr		4855000	1					
ANR	4855507	Argument	& l_dbit		4855000	2					
ANR	4855508	UnaryOperationExpression	& l_dbit		4855000	0					
ANR	4855509	UnaryOperator	&		4855000	0					
ANR	4855510	Identifier	l_dbit		4855000	1					
ANR	4855511	Argument	depth		4855000	3					
ANR	4855512	Identifier	depth		4855000	0					
ANR	4855513	Argument	& l_dbyte		4855000	4					
ANR	4855514	UnaryOperationExpression	& l_dbyte		4855000	0					
ANR	4855515	UnaryOperator	&		4855000	0					
ANR	4855516	Identifier	l_dbyte		4855000	1					
ANR	4855517	PrimaryExpression	0		4855000	1					
ANR	4855518	ExpressionStatement	return_error ( gs_error_rangecheck )	348:16:11187:11220	4855000	1	True				
ANR	4855519	CallExpression	return_error ( gs_error_rangecheck )		4855000	0					
ANR	4855520	Callee	return_error		4855000	0					
ANR	4855521	Identifier	return_error		4855000	0					
ANR	4855522	ArgumentList	gs_error_rangecheck		4855000	1					
ANR	4855523	Argument	gs_error_rangecheck		4855000	0					
ANR	4855524	Identifier	gs_error_rangecheck		4855000	0					
ANR	4855525	ElseStatement	else		4855000	0					
ANR	4855526	CompoundStatement		74:13:2603:2603	4855000	0					
ANR	4855527	IfStatement	"if ( sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0 )"		4855000	0					
ANR	4855528	Condition	"sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"	351:16:11263:11331	4855000	0	True				
ANR	4855529	RelationalExpression	"sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"		4855000	0		<			
ANR	4855530	CallExpression	"sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte )"		4855000	0					
ANR	4855531	Callee	sample_store_next32		4855000	0					
ANR	4855532	Identifier	sample_store_next32		4855000	0					
ANR	4855533	ArgumentList	pixel_out		4855000	1					
ANR	4855534	Argument	pixel_out		4855000	0					
ANR	4855535	Identifier	pixel_out		4855000	0					
ANR	4855536	Argument	& l_dptr		4855000	1					
ANR	4855537	UnaryOperationExpression	& l_dptr		4855000	0					
ANR	4855538	UnaryOperator	&		4855000	0					
ANR	4855539	Identifier	l_dptr		4855000	1					
ANR	4855540	Argument	& l_dbit		4855000	2					
ANR	4855541	UnaryOperationExpression	& l_dbit		4855000	0					
ANR	4855542	UnaryOperator	&		4855000	0					
ANR	4855543	Identifier	l_dbit		4855000	1					
ANR	4855544	Argument	depth		4855000	3					
ANR	4855545	Identifier	depth		4855000	0					
ANR	4855546	Argument	& l_dbyte		4855000	4					
ANR	4855547	UnaryOperationExpression	& l_dbyte		4855000	0					
ANR	4855548	UnaryOperator	&		4855000	0					
ANR	4855549	Identifier	l_dbyte		4855000	1					
ANR	4855550	PrimaryExpression	0		4855000	1					
ANR	4855551	ExpressionStatement	return_error ( gs_error_rangecheck )	352:16:11350:11383	4855000	1	True				
ANR	4855552	CallExpression	return_error ( gs_error_rangecheck )		4855000	0					
ANR	4855553	Callee	return_error		4855000	0					
ANR	4855554	Identifier	return_error		4855000	0					
ANR	4855555	ArgumentList	gs_error_rangecheck		4855000	1					
ANR	4855556	Argument	gs_error_rangecheck		4855000	0					
ANR	4855557	Identifier	gs_error_rangecheck		4855000	0					
ANR	4855558	ExpressionStatement	"sample_store_flush ( l_dptr , l_dbit , l_dbyte )"	355:4:11405:11448	4855000	27	True				
ANR	4855559	CallExpression	"sample_store_flush ( l_dptr , l_dbit , l_dbyte )"		4855000	0					
ANR	4855560	Callee	sample_store_flush		4855000	0					
ANR	4855561	Identifier	sample_store_flush		4855000	0					
ANR	4855562	ArgumentList	l_dptr		4855000	1					
ANR	4855563	Argument	l_dptr		4855000	0					
ANR	4855564	Identifier	l_dptr		4855000	0					
ANR	4855565	Argument	l_dbit		4855000	1					
ANR	4855566	Identifier	l_dbit		4855000	0					
ANR	4855567	Argument	l_dbyte		4855000	2					
ANR	4855568	Identifier	l_dbyte		4855000	0					
ANR	4855569	Label	gx :	356:0:11450:11452	4855000	28	True				
ANR	4855570	Identifier	gx		4855000	0					
ANR	4855571	ExpressionStatement	"gs_free_object ( mem , row , ""x_wrap_get_bits"" )"	357:4:11458:11501	4855000	29	True				
ANR	4855572	CallExpression	"gs_free_object ( mem , row , ""x_wrap_get_bits"" )"		4855000	0					
ANR	4855573	Callee	gs_free_object		4855000	0					
ANR	4855574	Identifier	gs_free_object		4855000	0					
ANR	4855575	ArgumentList	mem		4855000	1					
ANR	4855576	Argument	mem		4855000	0					
ANR	4855577	Identifier	mem		4855000	0					
ANR	4855578	Argument	row		4855000	1					
ANR	4855579	Identifier	row		4855000	0					
ANR	4855580	Argument	"""x_wrap_get_bits"""		4855000	2					
ANR	4855581	PrimaryExpression	"""x_wrap_get_bits"""		4855000	0					
ANR	4855582	IfStatement	if ( actual_data )		4855000	30					
ANR	4855583	Condition	actual_data	358:8:11511:11521	4855000	0	True				
ANR	4855584	Identifier	actual_data		4855000	0					
ANR	4855585	ExpressionStatement	* actual_data = str	359:8:11532:11550	4855000	1	True				
ANR	4855586	AssignmentExpression	* actual_data = str		4855000	0		=			
ANR	4855587	UnaryOperationExpression	* actual_data		4855000	0					
ANR	4855588	UnaryOperator	*		4855000	0					
ANR	4855589	Identifier	actual_data		4855000	1					
ANR	4855590	Identifier	str		4855000	1					
ANR	4855591	ReturnStatement	return code ;	360:4:11556:11567	4855000	31	True				
ANR	4855592	Identifier	code		4855000	0					
ANR	4855593	ReturnType	static int		4855000	1					
ANR	4855594	Identifier	x_wrap_get_bits		4855000	2					
ANR	4855595	ParameterList	"gx_device * dev , int y , byte * str , byte * * actual_data"		4855000	3					
ANR	4855596	Parameter	gx_device * dev	276:16:8584:8598	4855000	0	True				
ANR	4855597	ParameterType	gx_device *		4855000	0					
ANR	4855598	Identifier	dev		4855000	1					
ANR	4855599	Parameter	int y	276:33:8601:8605	4855000	1	True				
ANR	4855600	ParameterType	int		4855000	0					
ANR	4855601	Identifier	y		4855000	1					
ANR	4855602	Parameter	byte * str	276:40:8608:8617	4855000	2	True				
ANR	4855603	ParameterType	byte *		4855000	0					
ANR	4855604	Identifier	str		4855000	1					
ANR	4855605	Parameter	byte * * actual_data	276:52:8620:8638	4855000	3	True				
ANR	4855606	ParameterType	byte * *		4855000	0					
ANR	4855607	Identifier	actual_data		4855000	1					
ANR	4855608	CFGEntryNode	ENTRY		4855000		True				
ANR	4855609	CFGExitNode	EXIT		4855000		True				
ANR	4855610	Symbol	map_cmyk_color		4855000						
ANR	4855611	Symbol	gs_error_rangecheck		4855000						
ANR	4855612	Symbol	"* dev_proc ( dev , map_cmyk_color )"		4855000						
ANR	4855613	Symbol	get_bits		4855000						
ANR	4855614	Symbol	pixel_in		4855000						
ANR	4855615	Symbol	& tdev		4855000						
ANR	4855616	Symbol	sample_store_next32		4855000						
ANR	4855617	Symbol	sbit		4855000						
ANR	4855618	Symbol	"* dev_proc ( tdev , get_bits )"		4855000						
ANR	4855619	Symbol	"* dev_proc ( dev , map_rgb_color )"		4855000						
ANR	4855620	Symbol	gx_no_color_index		4855000						
ANR	4855621	Symbol	dev		4855000						
ANR	4855622	Symbol	tdev		4855000						
ANR	4855623	Symbol	tdev -> width		4855000						
ANR	4855624	Symbol	dev -> color_info . num_components		4855000						
ANR	4855625	Symbol	tdev -> color_info . depth		4855000						
ANR	4855626	Symbol	l_dbit		4855000						
ANR	4855627	Symbol	sample_store_next64		4855000						
ANR	4855628	Symbol	sptr		4855000						
ANR	4855629	Symbol	map_rgb_color		4855000						
ANR	4855630	Symbol	* cmyk		4855000						
ANR	4855631	Symbol	str		4855000						
ANR	4855632	Symbol	get_dev_target		4855000						
ANR	4855633	Symbol	l_dbyte		4855000						
ANR	4855634	Symbol	gx_max_color_value		4855000						
ANR	4855635	Symbol	* rgb		4855000						
ANR	4855636	Symbol	pixel_out		4855000						
ANR	4855637	Symbol	& l_dbit		4855000						
ANR	4855638	Symbol	* dev		4855000						
ANR	4855639	Symbol	& base		4855000						
ANR	4855640	Symbol	code		4855000						
ANR	4855641	Symbol	tdev -> color_info		4855000						
ANR	4855642	Symbol	* dev_proc		4855000						
ANR	4855643	Symbol	l_dptr		4855000						
ANR	4855644	Symbol	dev -> color_info		4855000						
ANR	4855645	Symbol	dev -> color_info . depth		4855000						
ANR	4855646	Symbol	rgb		4855000						
ANR	4855647	Symbol	map_color_rgb		4855000						
ANR	4855648	Symbol	actual_data		4855000						
ANR	4855649	Symbol	dsize		4855000						
ANR	4855650	Symbol	cmyk		4855000						
ANR	4855651	Symbol	min		4855000						
ANR	4855652	Symbol	mem		4855000						
ANR	4855653	Symbol	dev_proc		4855000						
ANR	4855654	Symbol	smask		4855000						
ANR	4855655	Symbol	* actual_data		4855000						
ANR	4855656	Symbol	row		4855000						
ANR	4855657	Symbol	pixel		4855000						
ANR	4855658	Symbol	sdepth		4855000						
ANR	4855659	Symbol	& l_dptr		4855000						
ANR	4855660	Symbol	gs_alloc_bytes		4855000						
ANR	4855661	Symbol	c		4855000						
ANR	4855662	Symbol	& l_dbyte		4855000						
ANR	4855663	Symbol	i		4855000						
ANR	4855664	Symbol	k		4855000						
ANR	4855665	Symbol	m		4855000						
ANR	4855666	Symbol	xi		4855000						
ANR	4855667	Symbol	gs_error_VMerror		4855000						
ANR	4855668	Symbol	dev -> memory		4855000						
ANR	4855669	Symbol	depth		4855000						
ANR	4855670	Symbol	* tdev		4855000						
ANR	4855671	Symbol	* sptr		4855000						
ANR	4855672	Symbol	width		4855000						
ANR	4855673	Symbol	y		4855000						
ANR	4855674	Symbol	base		4855000						
ANR	4855675	Function	x_wrap_get_params	363:0:11572:12177							
ANR	4855676	FunctionDef	"x_wrap_get_params (gx_device * dev , gs_param_list * plist)"		4855675	0					
ANR	4855677	CompoundStatement		365:0:11641:12177	4855675	0					
ANR	4855678	IdentifierDeclStatement	gx_device * tdev ;	366:4:11647:11662	4855675	0	True				
ANR	4855679	IdentifierDecl	* tdev		4855675	0					
ANR	4855680	IdentifierDeclType	gx_device *		4855675	0					
ANR	4855681	Identifier	tdev		4855675	1					
ANR	4855682	IdentifierDeclStatement	"gx_device_X save_dev , * xdev ;"	368:4:11735:11762	4855675	1	True				
ANR	4855683	IdentifierDecl	save_dev		4855675	0					
ANR	4855684	IdentifierDeclType	gx_device_X		4855675	0					
ANR	4855685	Identifier	save_dev		4855675	1					
ANR	4855686	IdentifierDecl	* xdev		4855675	1					
ANR	4855687	IdentifierDeclType	gx_device_X *		4855675	0					
ANR	4855688	Identifier	xdev		4855675	1					
ANR	4855689	IdentifierDeclStatement	int ecode ;	369:4:11768:11777	4855675	2	True				
ANR	4855690	IdentifierDecl	ecode		4855675	0					
ANR	4855691	IdentifierDeclType	int		4855675	0					
ANR	4855692	Identifier	ecode		4855675	1					
ANR	4855693	IdentifierDeclStatement	int code ;	370:4:11783:11791	4855675	3	True				
ANR	4855694	IdentifierDecl	code		4855675	0					
ANR	4855695	IdentifierDeclType	int		4855675	0					
ANR	4855696	Identifier	code		4855675	1					
ANR	4855697	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4855675	4					
ANR	4855698	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	372:8:11802:11840	4855675	0	True				
ANR	4855699	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4855675	0		<			
ANR	4855700	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4855675	0		=			
ANR	4855701	Identifier	code		4855675	0					
ANR	4855702	CallExpression	"get_dev_target ( & tdev , dev )"		4855675	1					
ANR	4855703	Callee	get_dev_target		4855675	0					
ANR	4855704	Identifier	get_dev_target		4855675	0					
ANR	4855705	ArgumentList	& tdev		4855675	1					
ANR	4855706	Argument	& tdev		4855675	0					
ANR	4855707	UnaryOperationExpression	& tdev		4855675	0					
ANR	4855708	UnaryOperator	&		4855675	0					
ANR	4855709	Identifier	tdev		4855675	1					
ANR	4855710	Argument	dev		4855675	1					
ANR	4855711	Identifier	dev		4855675	0					
ANR	4855712	PrimaryExpression	0		4855675	1					
ANR	4855713	ReturnStatement	return code ;	373:8:11851:11862	4855675	1	True				
ANR	4855714	Identifier	code		4855675	0					
ANR	4855715	ExpressionStatement	xdev = ( gx_device_X * ) tdev	374:4:11868:11895	4855675	5	True				
ANR	4855716	AssignmentExpression	xdev = ( gx_device_X * ) tdev		4855675	0		=			
ANR	4855717	Identifier	xdev		4855675	0					
ANR	4855718	CastExpression	( gx_device_X * ) tdev		4855675	1					
ANR	4855719	CastTarget	gx_device_X *		4855675	0					
ANR	4855720	Identifier	tdev		4855675	1					
ANR	4855721	ExpressionStatement	xdev -> orig_color_info = xdev -> color_info	375:4:11901:11941	4855675	6	True				
ANR	4855722	AssignmentExpression	xdev -> orig_color_info = xdev -> color_info		4855675	0		=			
ANR	4855723	PtrMemberAccess	xdev -> orig_color_info		4855675	0					
ANR	4855724	Identifier	xdev		4855675	0					
ANR	4855725	Identifier	orig_color_info		4855675	1					
ANR	4855726	PtrMemberAccess	xdev -> color_info		4855675	1					
ANR	4855727	Identifier	xdev		4855675	0					
ANR	4855728	Identifier	color_info		4855675	1					
ANR	4855729	ExpressionStatement	save_dev = * xdev	377:4:11948:11964	4855675	7	True				
ANR	4855730	AssignmentExpression	save_dev = * xdev		4855675	0		=			
ANR	4855731	Identifier	save_dev		4855675	0					
ANR	4855732	UnaryOperationExpression	* xdev		4855675	1					
ANR	4855733	UnaryOperator	*		4855675	0					
ANR	4855734	Identifier	xdev		4855675	1					
ANR	4855735	IfStatement	if ( tdev -> is_open )		4855675	8					
ANR	4855736	Condition	tdev -> is_open	379:8:11975:11987	4855675	0	True				
ANR	4855737	PtrMemberAccess	tdev -> is_open		4855675	0					
ANR	4855738	Identifier	tdev		4855675	0					
ANR	4855739	Identifier	is_open		4855675	1					
ANR	4855740	ExpressionStatement	tdev -> color_info = dev -> color_info	380:8:11998:12032	4855675	1	True				
ANR	4855741	AssignmentExpression	tdev -> color_info = dev -> color_info		4855675	0		=			
ANR	4855742	PtrMemberAccess	tdev -> color_info		4855675	0					
ANR	4855743	Identifier	tdev		4855675	0					
ANR	4855744	Identifier	color_info		4855675	1					
ANR	4855745	PtrMemberAccess	dev -> color_info		4855675	1					
ANR	4855746	Identifier	dev		4855675	0					
ANR	4855747	Identifier	color_info		4855675	1					
ANR	4855748	ExpressionStatement	tdev -> dname = dev -> dname	381:4:12038:12062	4855675	9	True				
ANR	4855749	AssignmentExpression	tdev -> dname = dev -> dname		4855675	0		=			
ANR	4855750	PtrMemberAccess	tdev -> dname		4855675	0					
ANR	4855751	Identifier	tdev		4855675	0					
ANR	4855752	Identifier	dname		4855675	1					
ANR	4855753	PtrMemberAccess	dev -> dname		4855675	1					
ANR	4855754	Identifier	dev		4855675	0					
ANR	4855755	Identifier	dname		4855675	1					
ANR	4855756	ExpressionStatement	"ecode = ( * dev_proc ( tdev , get_params ) ) ( tdev , plist )"	382:4:12068:12119	4855675	10	True				
ANR	4855757	AssignmentExpression	"ecode = ( * dev_proc ( tdev , get_params ) ) ( tdev , plist )"		4855675	0		=			
ANR	4855758	Identifier	ecode		4855675	0					
ANR	4855759	CallExpression	"( * dev_proc ( tdev , get_params ) ) ( tdev , plist )"		4855675	1					
ANR	4855760	Callee	"* dev_proc ( tdev , get_params )"		4855675	0					
ANR	4855761	UnaryOperationExpression	"* dev_proc ( tdev , get_params )"		4855675	0					
ANR	4855762	UnaryOperator	*		4855675	0					
ANR	4855763	CallExpression	"dev_proc ( tdev , get_params )"		4855675	1					
ANR	4855764	Callee	dev_proc		4855675	0					
ANR	4855765	Identifier	dev_proc		4855675	0					
ANR	4855766	ArgumentList	tdev		4855675	1					
ANR	4855767	Argument	tdev		4855675	0					
ANR	4855768	Identifier	tdev		4855675	0					
ANR	4855769	Argument	get_params		4855675	1					
ANR	4855770	Identifier	get_params		4855675	0					
ANR	4855771	ArgumentList	tdev		4855675	1					
ANR	4855772	Argument	tdev		4855675	0					
ANR	4855773	Identifier	tdev		4855675	0					
ANR	4855774	Argument	plist		4855675	1					
ANR	4855775	Identifier	plist		4855675	0					
ANR	4855776	ExpressionStatement	* ( gx_device_X * ) tdev = save_dev	383:4:12125:12157	4855675	11	True				
ANR	4855777	AssignmentExpression	* ( gx_device_X * ) tdev = save_dev		4855675	0		=			
ANR	4855778	UnaryOperationExpression	* ( gx_device_X * ) tdev		4855675	0					
ANR	4855779	UnaryOperator	*		4855675	0					
ANR	4855780	CastExpression	( gx_device_X * ) tdev		4855675	1					
ANR	4855781	CastTarget	gx_device_X *		4855675	0					
ANR	4855782	Identifier	tdev		4855675	1					
ANR	4855783	Identifier	save_dev		4855675	1					
ANR	4855784	ReturnStatement	return ecode ;	384:4:12163:12175	4855675	12	True				
ANR	4855785	Identifier	ecode		4855675	0					
ANR	4855786	ReturnType	static int		4855675	1					
ANR	4855787	Identifier	x_wrap_get_params		4855675	2					
ANR	4855788	ParameterList	"gx_device * dev , gs_param_list * plist"		4855675	3					
ANR	4855789	Parameter	gx_device * dev	364:18:11601:11615	4855675	0	True				
ANR	4855790	ParameterType	gx_device *		4855675	0					
ANR	4855791	Identifier	dev		4855675	1					
ANR	4855792	Parameter	gs_param_list * plist	364:35:11618:11638	4855675	1	True				
ANR	4855793	ParameterType	gs_param_list *		4855675	0					
ANR	4855794	Identifier	plist		4855675	1					
ANR	4855795	CFGEntryNode	ENTRY		4855675		True				
ANR	4855796	CFGExitNode	EXIT		4855675		True				
ANR	4855797	Symbol	* dev		4855675						
ANR	4855798	Symbol	get_params		4855675						
ANR	4855799	Symbol	code		4855675						
ANR	4855800	Symbol	xdev		4855675						
ANR	4855801	Symbol	dev -> dname		4855675						
ANR	4855802	Symbol	tdev -> color_info		4855675						
ANR	4855803	Symbol	* dev_proc		4855675						
ANR	4855804	Symbol	save_dev		4855675						
ANR	4855805	Symbol	xdev -> orig_color_info		4855675						
ANR	4855806	Symbol	& tdev		4855675						
ANR	4855807	Symbol	dev -> color_info		4855675						
ANR	4855808	Symbol	ecode		4855675						
ANR	4855809	Symbol	"* dev_proc ( tdev , get_params )"		4855675						
ANR	4855810	Symbol	get_dev_target		4855675						
ANR	4855811	Symbol	plist		4855675						
ANR	4855812	Symbol	xdev -> color_info		4855675						
ANR	4855813	Symbol	tdev -> dname		4855675						
ANR	4855814	Symbol	* ( gx_device_X * ) tdev		4855675						
ANR	4855815	Symbol	* tdev		4855675						
ANR	4855816	Symbol	dev		4855675						
ANR	4855817	Symbol	* xdev		4855675						
ANR	4855818	Symbol	dev_proc		4855675						
ANR	4855819	Symbol	tdev		4855675						
ANR	4855820	Symbol	tdev -> is_open		4855675						
ANR	4855821	Function	x_wrap_put_params	387:0:12180:12969							
ANR	4855822	FunctionDef	"x_wrap_put_params (gx_device * dev , gs_param_list * plist)"		4855821	0					
ANR	4855823	CompoundStatement		389:0:12249:12969	4855821	0					
ANR	4855824	IdentifierDeclStatement	gx_device * tdev ;	390:4:12255:12270	4855821	0	True				
ANR	4855825	IdentifierDecl	* tdev		4855821	0					
ANR	4855826	IdentifierDeclType	gx_device *		4855821	0					
ANR	4855827	Identifier	tdev		4855821	1					
ANR	4855828	IdentifierDeclStatement	gx_device_X * xdev ;	391:4:12276:12293	4855821	1	True				
ANR	4855829	IdentifierDecl	* xdev		4855821	0					
ANR	4855830	IdentifierDeclType	gx_device_X *		4855821	0					
ANR	4855831	Identifier	xdev		4855821	1					
ANR	4855832	IdentifierDeclStatement	const char * dname ;	392:4:12299:12316	4855821	2	True				
ANR	4855833	IdentifierDecl	* dname		4855821	0					
ANR	4855834	IdentifierDeclType	const char *		4855821	0					
ANR	4855835	Identifier	dname		4855821	1					
ANR	4855836	IdentifierDeclStatement	"int rcode , code ;"	393:4:12322:12337	4855821	3	True				
ANR	4855837	IdentifierDecl	rcode		4855821	0					
ANR	4855838	IdentifierDeclType	int		4855821	0					
ANR	4855839	Identifier	rcode		4855821	1					
ANR	4855840	IdentifierDecl	code		4855821	1					
ANR	4855841	IdentifierDeclType	int		4855821	0					
ANR	4855842	Identifier	code		4855821	1					
ANR	4855843	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4855821	4					
ANR	4855844	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	395:8:12348:12386	4855821	0	True				
ANR	4855845	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4855821	0		<			
ANR	4855846	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4855821	0		=			
ANR	4855847	Identifier	code		4855821	0					
ANR	4855848	CallExpression	"get_dev_target ( & tdev , dev )"		4855821	1					
ANR	4855849	Callee	get_dev_target		4855821	0					
ANR	4855850	Identifier	get_dev_target		4855821	0					
ANR	4855851	ArgumentList	& tdev		4855821	1					
ANR	4855852	Argument	& tdev		4855821	0					
ANR	4855853	UnaryOperationExpression	& tdev		4855821	0					
ANR	4855854	UnaryOperator	&		4855821	0					
ANR	4855855	Identifier	tdev		4855821	1					
ANR	4855856	Argument	dev		4855821	1					
ANR	4855857	Identifier	dev		4855821	0					
ANR	4855858	PrimaryExpression	0		4855821	1					
ANR	4855859	ReturnStatement	return code ;	396:8:12397:12408	4855821	1	True				
ANR	4855860	Identifier	code		4855821	0					
ANR	4855861	ExpressionStatement	xdev = ( gx_device_X * ) tdev	401:4:12559:12586	4855821	5	True				
ANR	4855862	AssignmentExpression	xdev = ( gx_device_X * ) tdev		4855821	0		=			
ANR	4855863	Identifier	xdev		4855821	0					
ANR	4855864	CastExpression	( gx_device_X * ) tdev		4855821	1					
ANR	4855865	CastTarget	gx_device_X *		4855821	0					
ANR	4855866	Identifier	tdev		4855821	1					
ANR	4855867	ExpressionStatement	xdev -> orig_color_info = xdev -> color_info	402:4:12592:12632	4855821	6	True				
ANR	4855868	AssignmentExpression	xdev -> orig_color_info = xdev -> color_info		4855821	0		=			
ANR	4855869	PtrMemberAccess	xdev -> orig_color_info		4855821	0					
ANR	4855870	Identifier	xdev		4855821	0					
ANR	4855871	Identifier	orig_color_info		4855821	1					
ANR	4855872	PtrMemberAccess	xdev -> color_info		4855821	1					
ANR	4855873	Identifier	xdev		4855821	0					
ANR	4855874	Identifier	color_info		4855821	1					
ANR	4855875	ExpressionStatement	dname = tdev -> dname	403:4:12638:12657	4855821	7	True				
ANR	4855876	AssignmentExpression	dname = tdev -> dname		4855821	0		=			
ANR	4855877	Identifier	dname		4855821	0					
ANR	4855878	PtrMemberAccess	tdev -> dname		4855821	1					
ANR	4855879	Identifier	tdev		4855821	0					
ANR	4855880	Identifier	dname		4855821	1					
ANR	4855881	ExpressionStatement	tdev -> color_info = dev -> color_info	404:4:12663:12697	4855821	8	True				
ANR	4855882	AssignmentExpression	tdev -> color_info = dev -> color_info		4855821	0		=			
ANR	4855883	PtrMemberAccess	tdev -> color_info		4855821	0					
ANR	4855884	Identifier	tdev		4855821	0					
ANR	4855885	Identifier	color_info		4855821	1					
ANR	4855886	PtrMemberAccess	dev -> color_info		4855821	1					
ANR	4855887	Identifier	dev		4855821	0					
ANR	4855888	Identifier	color_info		4855821	1					
ANR	4855889	ExpressionStatement	tdev -> dname = dev -> dname	405:4:12703:12727	4855821	9	True				
ANR	4855890	AssignmentExpression	tdev -> dname = dev -> dname		4855821	0		=			
ANR	4855891	PtrMemberAccess	tdev -> dname		4855821	0					
ANR	4855892	Identifier	tdev		4855821	0					
ANR	4855893	Identifier	dname		4855821	1					
ANR	4855894	PtrMemberAccess	dev -> dname		4855821	1					
ANR	4855895	Identifier	dev		4855821	0					
ANR	4855896	Identifier	dname		4855821	1					
ANR	4855897	ExpressionStatement	"rcode = ( * dev_proc ( tdev , put_params ) ) ( tdev , plist )"	406:4:12733:12784	4855821	10	True				
ANR	4855898	AssignmentExpression	"rcode = ( * dev_proc ( tdev , put_params ) ) ( tdev , plist )"		4855821	0		=			
ANR	4855899	Identifier	rcode		4855821	0					
ANR	4855900	CallExpression	"( * dev_proc ( tdev , put_params ) ) ( tdev , plist )"		4855821	1					
ANR	4855901	Callee	"* dev_proc ( tdev , put_params )"		4855821	0					
ANR	4855902	UnaryOperationExpression	"* dev_proc ( tdev , put_params )"		4855821	0					
ANR	4855903	UnaryOperator	*		4855821	0					
ANR	4855904	CallExpression	"dev_proc ( tdev , put_params )"		4855821	1					
ANR	4855905	Callee	dev_proc		4855821	0					
ANR	4855906	Identifier	dev_proc		4855821	0					
ANR	4855907	ArgumentList	tdev		4855821	1					
ANR	4855908	Argument	tdev		4855821	0					
ANR	4855909	Identifier	tdev		4855821	0					
ANR	4855910	Argument	put_params		4855821	1					
ANR	4855911	Identifier	put_params		4855821	0					
ANR	4855912	ArgumentList	tdev		4855821	1					
ANR	4855913	Argument	tdev		4855821	0					
ANR	4855914	Identifier	tdev		4855821	0					
ANR	4855915	Argument	plist		4855821	1					
ANR	4855916	Identifier	plist		4855821	0					
ANR	4855917	ExpressionStatement	tdev -> color_info = xdev -> orig_color_info	407:4:12790:12830	4855821	11	True				
ANR	4855918	AssignmentExpression	tdev -> color_info = xdev -> orig_color_info		4855821	0		=			
ANR	4855919	PtrMemberAccess	tdev -> color_info		4855821	0					
ANR	4855920	Identifier	tdev		4855821	0					
ANR	4855921	Identifier	color_info		4855821	1					
ANR	4855922	PtrMemberAccess	xdev -> orig_color_info		4855821	1					
ANR	4855923	Identifier	xdev		4855821	0					
ANR	4855924	Identifier	orig_color_info		4855821	1					
ANR	4855925	ExpressionStatement	tdev -> dname = dname	408:4:12836:12855	4855821	12	True				
ANR	4855926	AssignmentExpression	tdev -> dname = dname		4855821	0		=			
ANR	4855927	PtrMemberAccess	tdev -> dname		4855821	0					
ANR	4855928	Identifier	tdev		4855821	0					
ANR	4855929	Identifier	dname		4855821	1					
ANR	4855930	Identifier	dname		4855821	1					
ANR	4855931	IfStatement	if ( rcode < 0 )		4855821	13					
ANR	4855932	Condition	rcode < 0	409:8:12865:12873	4855821	0	True				
ANR	4855933	RelationalExpression	rcode < 0		4855821	0		<			
ANR	4855934	Identifier	rcode		4855821	0					
ANR	4855935	PrimaryExpression	0		4855821	1					
ANR	4855936	ReturnStatement	return rcode ;	410:8:12884:12896	4855821	1	True				
ANR	4855937	Identifier	rcode		4855821	0					
ANR	4855938	ExpressionStatement	code = get_target_info ( dev )	411:4:12902:12929	4855821	14	True				
ANR	4855939	AssignmentExpression	code = get_target_info ( dev )		4855821	0		=			
ANR	4855940	Identifier	code		4855821	0					
ANR	4855941	CallExpression	get_target_info ( dev )		4855821	1					
ANR	4855942	Callee	get_target_info		4855821	0					
ANR	4855943	Identifier	get_target_info		4855821	0					
ANR	4855944	ArgumentList	dev		4855821	1					
ANR	4855945	Argument	dev		4855821	0					
ANR	4855946	Identifier	dev		4855821	0					
ANR	4855947	ReturnStatement	return ( code < 0 ? code : rcode ) ;	412:4:12935:12967	4855821	15	True				
ANR	4855948	ConditionalExpression	code < 0 ? code : rcode		4855821	0					
ANR	4855949	Condition	code < 0		4855821	0					
ANR	4855950	RelationalExpression	code < 0		4855821	0		<			
ANR	4855951	Identifier	code		4855821	0					
ANR	4855952	PrimaryExpression	0		4855821	1					
ANR	4855953	Identifier	code		4855821	1					
ANR	4855954	Identifier	rcode		4855821	2					
ANR	4855955	ReturnType	static int		4855821	1					
ANR	4855956	Identifier	x_wrap_put_params		4855821	2					
ANR	4855957	ParameterList	"gx_device * dev , gs_param_list * plist"		4855821	3					
ANR	4855958	Parameter	gx_device * dev	388:18:12209:12223	4855821	0	True				
ANR	4855959	ParameterType	gx_device *		4855821	0					
ANR	4855960	Identifier	dev		4855821	1					
ANR	4855961	Parameter	gs_param_list * plist	388:35:12226:12246	4855821	1	True				
ANR	4855962	ParameterType	gs_param_list *		4855821	0					
ANR	4855963	Identifier	plist		4855821	1					
ANR	4855964	CFGEntryNode	ENTRY		4855821		True				
ANR	4855965	CFGExitNode	EXIT		4855821		True				
ANR	4855966	Symbol	* dev		4855821						
ANR	4855967	Symbol	"* dev_proc ( tdev , put_params )"		4855821						
ANR	4855968	Symbol	code		4855821						
ANR	4855969	Symbol	xdev		4855821						
ANR	4855970	Symbol	dev -> dname		4855821						
ANR	4855971	Symbol	tdev -> color_info		4855821						
ANR	4855972	Symbol	* dev_proc		4855821						
ANR	4855973	Symbol	xdev -> orig_color_info		4855821						
ANR	4855974	Symbol	rcode		4855821						
ANR	4855975	Symbol	& tdev		4855821						
ANR	4855976	Symbol	dev -> color_info		4855821						
ANR	4855977	Symbol	get_dev_target		4855821						
ANR	4855978	Symbol	plist		4855821						
ANR	4855979	Symbol	xdev -> color_info		4855821						
ANR	4855980	Symbol	tdev -> dname		4855821						
ANR	4855981	Symbol	* tdev		4855821						
ANR	4855982	Symbol	dev		4855821						
ANR	4855983	Symbol	* xdev		4855821						
ANR	4855984	Symbol	dev_proc		4855821						
ANR	4855985	Symbol	tdev		4855821						
ANR	4855986	Symbol	dname		4855821						
ANR	4855987	Symbol	put_params		4855821						
ANR	4855988	Symbol	get_target_info		4855821						
ANR	4855989	Function	get_dev_target	418:0:13047:13615							
ANR	4855990	FunctionDef	"get_dev_target (gx_device * * ptdev , gx_device * dev)"		4855989	0					
ANR	4855991	CompoundStatement		420:0:13110:13615	4855989	0					
ANR	4855992	IdentifierDeclStatement	gx_device * tdev = ( ( gx_device_forward * ) dev ) -> target ;	421:4:13116:13169	4855989	0	True				
ANR	4855993	IdentifierDecl	* tdev = ( ( gx_device_forward * ) dev ) -> target		4855989	0					
ANR	4855994	IdentifierDeclType	gx_device *		4855989	0					
ANR	4855995	Identifier	tdev		4855989	1					
ANR	4855996	AssignmentExpression	* tdev = ( ( gx_device_forward * ) dev ) -> target		4855989	2		=			
ANR	4855997	Identifier	tdev		4855989	0					
ANR	4855998	PtrMemberAccess	( ( gx_device_forward * ) dev ) -> target		4855989	1					
ANR	4855999	CastExpression	( gx_device_forward * ) dev		4855989	0					
ANR	4856000	CastTarget	gx_device_forward *		4855989	0					
ANR	4856001	Identifier	dev		4855989	1					
ANR	4856002	Identifier	target		4855989	1					
ANR	4856003	IfStatement	if ( tdev == 0 )		4855989	1					
ANR	4856004	Condition	tdev == 0	423:8:13180:13188	4855989	0	True				
ANR	4856005	EqualityExpression	tdev == 0		4855989	0		==			
ANR	4856006	Identifier	tdev		4855989	0					
ANR	4856007	PrimaryExpression	0		4855989	1					
ANR	4856008	CompoundStatement		6:8:133:245	4855989	1					
ANR	4856009	IdentifierDeclStatement	"int code = gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory ) ;"	425:8:13244:13356	4855989	0	True				
ANR	4856010	IdentifierDecl	"code = gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory )"		4855989	0					
ANR	4856011	IdentifierDeclType	int		4855989	0					
ANR	4856012	Identifier	code		4855989	1					
ANR	4856013	AssignmentExpression	"code = gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory )"		4855989	2		=			
ANR	4856014	Identifier	code		4855989	0					
ANR	4856015	CallExpression	"gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory )"		4855989	1					
ANR	4856016	Callee	gs_copydevice		4855989	0					
ANR	4856017	Identifier	gs_copydevice		4855989	0					
ANR	4856018	ArgumentList	& tdev		4855989	1					
ANR	4856019	Argument	& tdev		4855989	0					
ANR	4856020	UnaryOperationExpression	& tdev		4855989	0					
ANR	4856021	UnaryOperator	&		4855989	0					
ANR	4856022	Identifier	tdev		4855989	1					
ANR	4856023	Argument	( const gx_device * ) & gs_x11_device		4855989	1					
ANR	4856024	CastExpression	( const gx_device * ) & gs_x11_device		4855989	0					
ANR	4856025	CastTarget	const gx_device *		4855989	0					
ANR	4856026	UnaryOperationExpression	& gs_x11_device		4855989	1					
ANR	4856027	UnaryOperator	&		4855989	0					
ANR	4856028	Identifier	gs_x11_device		4855989	1					
ANR	4856029	Argument	dev -> memory		4855989	2					
ANR	4856030	PtrMemberAccess	dev -> memory		4855989	0					
ANR	4856031	Identifier	dev		4855989	0					
ANR	4856032	Identifier	memory		4855989	1					
ANR	4856033	IfStatement	if ( code < 0 )		4855989	1					
ANR	4856034	Condition	code < 0	428:12:13371:13378	4855989	0	True				
ANR	4856035	RelationalExpression	code < 0		4855989	0		<			
ANR	4856036	Identifier	code		4855989	0					
ANR	4856037	PrimaryExpression	0		4855989	1					
ANR	4856038	ReturnStatement	return 0 ;	429:12:13393:13401	4855989	1	True				
ANR	4856039	PrimaryExpression	0		4855989	0					
ANR	4856040	ExpressionStatement	check_device_separable ( tdev )	430:8:13411:13439	4855989	2	True				
ANR	4856041	CallExpression	check_device_separable ( tdev )		4855989	0					
ANR	4856042	Callee	check_device_separable		4855989	0					
ANR	4856043	Identifier	check_device_separable		4855989	0					
ANR	4856044	ArgumentList	tdev		4855989	1					
ANR	4856045	Argument	tdev		4855989	0					
ANR	4856046	Identifier	tdev		4855989	0					
ANR	4856047	ExpressionStatement	gx_device_fill_in_procs ( tdev )	431:8:13449:13478	4855989	3	True				
ANR	4856048	CallExpression	gx_device_fill_in_procs ( tdev )		4855989	0					
ANR	4856049	Callee	gx_device_fill_in_procs		4855989	0					
ANR	4856050	Identifier	gx_device_fill_in_procs		4855989	0					
ANR	4856051	ArgumentList	tdev		4855989	1					
ANR	4856052	Argument	tdev		4855989	0					
ANR	4856053	Identifier	tdev		4855989	0					
ANR	4856054	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) dev , tdev )"	432:8:13488:13540	4855989	4	True				
ANR	4856055	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) dev , tdev )"		4855989	0					
ANR	4856056	Callee	gx_device_set_target		4855989	0					
ANR	4856057	Identifier	gx_device_set_target		4855989	0					
ANR	4856058	ArgumentList	( gx_device_forward * ) dev		4855989	1					
ANR	4856059	Argument	( gx_device_forward * ) dev		4855989	0					
ANR	4856060	CastExpression	( gx_device_forward * ) dev		4855989	0					
ANR	4856061	CastTarget	gx_device_forward *		4855989	0					
ANR	4856062	Identifier	dev		4855989	1					
ANR	4856063	Argument	tdev		4855989	1					
ANR	4856064	Identifier	tdev		4855989	0					
ANR	4856065	ExpressionStatement	x_clear_color_cache ( dev )	433:8:13550:13574	4855989	5	True				
ANR	4856066	CallExpression	x_clear_color_cache ( dev )		4855989	0					
ANR	4856067	Callee	x_clear_color_cache		4855989	0					
ANR	4856068	Identifier	x_clear_color_cache		4855989	0					
ANR	4856069	ArgumentList	dev		4855989	1					
ANR	4856070	Argument	dev		4855989	0					
ANR	4856071	Identifier	dev		4855989	0					
ANR	4856072	ExpressionStatement	* ptdev = tdev	435:4:13586:13599	4855989	2	True				
ANR	4856073	AssignmentExpression	* ptdev = tdev		4855989	0		=			
ANR	4856074	UnaryOperationExpression	* ptdev		4855989	0					
ANR	4856075	UnaryOperator	*		4855989	0					
ANR	4856076	Identifier	ptdev		4855989	1					
ANR	4856077	Identifier	tdev		4855989	1					
ANR	4856078	ReturnStatement	return 0 ;	436:4:13605:13613	4855989	3	True				
ANR	4856079	PrimaryExpression	0		4855989	0					
ANR	4856080	ReturnType	static int		4855989	1					
ANR	4856081	Identifier	get_dev_target		4855989	2					
ANR	4856082	ParameterList	"gx_device * * ptdev , gx_device * dev"		4855989	3					
ANR	4856083	Parameter	gx_device * * ptdev	419:15:13073:13090	4855989	0	True				
ANR	4856084	ParameterType	gx_device * *		4855989	0					
ANR	4856085	Identifier	ptdev		4855989	1					
ANR	4856086	Parameter	gx_device * dev	419:35:13093:13107	4855989	1	True				
ANR	4856087	ParameterType	gx_device *		4855989	0					
ANR	4856088	Identifier	dev		4855989	1					
ANR	4856089	CFGEntryNode	ENTRY		4855989		True				
ANR	4856090	CFGExitNode	EXIT		4855989		True				
ANR	4856091	Symbol	* dev		4855989						
ANR	4856092	Symbol	ptdev		4855989						
ANR	4856093	Symbol	dev -> memory		4855989						
ANR	4856094	Symbol	code		4855989						
ANR	4856095	Symbol	dev		4855989						
ANR	4856096	Symbol	tdev		4855989						
ANR	4856097	Symbol	( ( gx_device_forward * ) dev ) -> target		4855989						
ANR	4856098	Symbol	gs_copydevice		4855989						
ANR	4856099	Symbol	& tdev		4855989						
ANR	4856100	Symbol	* ptdev		4855989						
ANR	4856101	Symbol	& gs_x11_device		4855989						
ANR	4856102	Function	get_target_info	440:0:13662:14456							
ANR	4856103	FunctionDef	get_target_info (gx_device * dev)		4856102	0					
ANR	4856104	CompoundStatement		442:0:13706:14456	4856102	0					
ANR	4856105	IdentifierDeclStatement	gx_device * tdev ;	443:4:13712:13727	4856102	0	True				
ANR	4856106	IdentifierDecl	* tdev		4856102	0					
ANR	4856107	IdentifierDeclType	gx_device *		4856102	0					
ANR	4856108	Identifier	tdev		4856102	1					
ANR	4856109	IdentifierDeclStatement	int code ;	444:4:13733:13741	4856102	1	True				
ANR	4856110	IdentifierDecl	code		4856102	0					
ANR	4856111	IdentifierDeclType	int		4856102	0					
ANR	4856112	Identifier	code		4856102	1					
ANR	4856113	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4856102	2					
ANR	4856114	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	446:8:13752:13790	4856102	0	True				
ANR	4856115	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4856102	0		<			
ANR	4856116	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4856102	0		=			
ANR	4856117	Identifier	code		4856102	0					
ANR	4856118	CallExpression	"get_dev_target ( & tdev , dev )"		4856102	1					
ANR	4856119	Callee	get_dev_target		4856102	0					
ANR	4856120	Identifier	get_dev_target		4856102	0					
ANR	4856121	ArgumentList	& tdev		4856102	1					
ANR	4856122	Argument	& tdev		4856102	0					
ANR	4856123	UnaryOperationExpression	& tdev		4856102	0					
ANR	4856124	UnaryOperator	&		4856102	0					
ANR	4856125	Identifier	tdev		4856102	1					
ANR	4856126	Argument	dev		4856102	1					
ANR	4856127	Identifier	dev		4856102	0					
ANR	4856128	PrimaryExpression	0		4856102	1					
ANR	4856129	ReturnStatement	return code ;	447:8:13801:13812	4856102	1	True				
ANR	4856130	Identifier	code		4856102	0					
ANR	4856131	Statement	define	449:1:13816:13821	4856102	3	True				
ANR	4856132	Statement	copy	449:8:13823:13826	4856102	4	True				
ANR	4856133	ExpressionStatement	( m ) dev -> m = tdev -> m	449:12:13827:13847	4856102	5	True				
ANR	4856134	AssignmentExpression	( m ) dev -> m = tdev -> m		4856102	0		=			
ANR	4856135	CastExpression	( m ) dev -> m		4856102	0					
ANR	4856136	CastTarget	m		4856102	0					
ANR	4856137	PtrMemberAccess	dev -> m		4856102	1					
ANR	4856138	Identifier	dev		4856102	0					
ANR	4856139	Identifier	m		4856102	1					
ANR	4856140	PtrMemberAccess	tdev -> m		4856102	1					
ANR	4856141	Identifier	tdev		4856102	0					
ANR	4856142	Identifier	m		4856102	1					
ANR	4856143	Statement	define	450:1:13850:13855	4856102	6	True				
ANR	4856144	Statement	copy2	450:8:13857:13861	4856102	7	True				
ANR	4856145	ExpressionStatement	( m ) copy ( m [ 0 ] )	450:13:13862:13876	4856102	8	True				
ANR	4856146	CastExpression	( m ) copy ( m [ 0 ] )		4856102	0					
ANR	4856147	CastTarget	m		4856102	0					
ANR	4856148	CallExpression	copy ( m [ 0 ] )		4856102	1					
ANR	4856149	Callee	copy		4856102	0					
ANR	4856150	Identifier	copy		4856102	0					
ANR	4856151	ArgumentList	m [ 0 ]		4856102	1					
ANR	4856152	Argument	m [ 0 ]		4856102	0					
ANR	4856153	ArrayIndexing	m [ 0 ]		4856102	0					
ANR	4856154	Identifier	m		4856102	0					
ANR	4856155	PrimaryExpression	0		4856102	1					
ANR	4856156	Statement	copy	450:29:13878:13881	4856102	9	True				
ANR	4856157	Statement	(	450:33:13882:13882	4856102	10	True				
ANR	4856158	Statement	m	450:34:13883:13883	4856102	11	True				
ANR	4856159	Statement	[	450:35:13884:13884	4856102	12	True				
ANR	4856160	Statement	1	450:36:13885:13885	4856102	13	True				
ANR	4856161	Statement	]	450:37:13886:13886	4856102	14	True				
ANR	4856162	Statement	)	450:38:13887:13887	4856102	15	True				
ANR	4856163	Statement	define	451:1:13890:13895	4856102	16	True				
ANR	4856164	Statement	copy4	451:8:13897:13901	4856102	17	True				
ANR	4856165	ExpressionStatement	( m ) copy2 ( m )	451:13:13902:13914	4856102	18	True				
ANR	4856166	CastExpression	( m ) copy2 ( m )		4856102	0					
ANR	4856167	CastTarget	m		4856102	0					
ANR	4856168	CallExpression	copy2 ( m )		4856102	1					
ANR	4856169	Callee	copy2		4856102	0					
ANR	4856170	Identifier	copy2		4856102	0					
ANR	4856171	ArgumentList	m		4856102	1					
ANR	4856172	Argument	m		4856102	0					
ANR	4856173	Identifier	m		4856102	0					
ANR	4856174	ExpressionStatement	copy ( m [ 2 ] )	451:27:13916:13926	4856102	19	True				
ANR	4856175	CallExpression	copy ( m [ 2 ] )		4856102	0					
ANR	4856176	Callee	copy		4856102	0					
ANR	4856177	Identifier	copy		4856102	0					
ANR	4856178	ArgumentList	m [ 2 ]		4856102	1					
ANR	4856179	Argument	m [ 2 ]		4856102	0					
ANR	4856180	ArrayIndexing	m [ 2 ]		4856102	0					
ANR	4856181	Identifier	m		4856102	0					
ANR	4856182	PrimaryExpression	2		4856102	1					
ANR	4856183	Statement	copy	451:39:13928:13931	4856102	20	True				
ANR	4856184	Statement	(	451:43:13932:13932	4856102	21	True				
ANR	4856185	Statement	m	451:44:13933:13933	4856102	22	True				
ANR	4856186	Statement	[	451:45:13934:13934	4856102	23	True				
ANR	4856187	Statement	3	451:46:13935:13935	4856102	24	True				
ANR	4856188	Statement	]	451:47:13936:13936	4856102	25	True				
ANR	4856189	Statement	)	451:48:13937:13937	4856102	26	True				
ANR	4856190	ExpressionStatement	copy ( width )	453:4:13944:13955	4856102	27	True				
ANR	4856191	CallExpression	copy ( width )		4856102	0					
ANR	4856192	Callee	copy		4856102	0					
ANR	4856193	Identifier	copy		4856102	0					
ANR	4856194	ArgumentList	width		4856102	1					
ANR	4856195	Argument	width		4856102	0					
ANR	4856196	Identifier	width		4856102	0					
ANR	4856197	ExpressionStatement	copy ( height )	454:4:13961:13973	4856102	28	True				
ANR	4856198	CallExpression	copy ( height )		4856102	0					
ANR	4856199	Callee	copy		4856102	0					
ANR	4856200	Identifier	copy		4856102	0					
ANR	4856201	ArgumentList	height		4856102	1					
ANR	4856202	Argument	height		4856102	0					
ANR	4856203	Identifier	height		4856102	0					
ANR	4856204	ExpressionStatement	copy2 ( MediaSize )	455:4:13979:13995	4856102	29	True				
ANR	4856205	CallExpression	copy2 ( MediaSize )		4856102	0					
ANR	4856206	Callee	copy2		4856102	0					
ANR	4856207	Identifier	copy2		4856102	0					
ANR	4856208	ArgumentList	MediaSize		4856102	1					
ANR	4856209	Argument	MediaSize		4856102	0					
ANR	4856210	Identifier	MediaSize		4856102	0					
ANR	4856211	ExpressionStatement	copy4 ( ImagingBBox )	456:4:14001:14019	4856102	30	True				
ANR	4856212	CallExpression	copy4 ( ImagingBBox )		4856102	0					
ANR	4856213	Callee	copy4		4856102	0					
ANR	4856214	Identifier	copy4		4856102	0					
ANR	4856215	ArgumentList	ImagingBBox		4856102	1					
ANR	4856216	Argument	ImagingBBox		4856102	0					
ANR	4856217	Identifier	ImagingBBox		4856102	0					
ANR	4856218	ExpressionStatement	copy ( ImagingBBox_set )	457:4:14025:14046	4856102	31	True				
ANR	4856219	CallExpression	copy ( ImagingBBox_set )		4856102	0					
ANR	4856220	Callee	copy		4856102	0					
ANR	4856221	Identifier	copy		4856102	0					
ANR	4856222	ArgumentList	ImagingBBox_set		4856102	1					
ANR	4856223	Argument	ImagingBBox_set		4856102	0					
ANR	4856224	Identifier	ImagingBBox_set		4856102	0					
ANR	4856225	ExpressionStatement	copy2 ( HWResolution )	458:4:14052:14071	4856102	32	True				
ANR	4856226	CallExpression	copy2 ( HWResolution )		4856102	0					
ANR	4856227	Callee	copy2		4856102	0					
ANR	4856228	Identifier	copy2		4856102	0					
ANR	4856229	ArgumentList	HWResolution		4856102	1					
ANR	4856230	Argument	HWResolution		4856102	0					
ANR	4856231	Identifier	HWResolution		4856102	0					
ANR	4856232	ExpressionStatement	copy2 ( Margins )	459:4:14077:14091	4856102	33	True				
ANR	4856233	CallExpression	copy2 ( Margins )		4856102	0					
ANR	4856234	Callee	copy2		4856102	0					
ANR	4856235	Identifier	copy2		4856102	0					
ANR	4856236	ArgumentList	Margins		4856102	1					
ANR	4856237	Argument	Margins		4856102	0					
ANR	4856238	Identifier	Margins		4856102	0					
ANR	4856239	ExpressionStatement	copy4 ( HWMargins )	460:4:14097:14113	4856102	34	True				
ANR	4856240	CallExpression	copy4 ( HWMargins )		4856102	0					
ANR	4856241	Callee	copy4		4856102	0					
ANR	4856242	Identifier	copy4		4856102	0					
ANR	4856243	ArgumentList	HWMargins		4856102	1					
ANR	4856244	Argument	HWMargins		4856102	0					
ANR	4856245	Identifier	HWMargins		4856102	0					
ANR	4856246	IfStatement	if ( dev -> color_info . num_components == 3 )		4856102	35					
ANR	4856247	Condition	dev -> color_info . num_components == 3	461:8:14123:14157	4856102	0	True				
ANR	4856248	EqualityExpression	dev -> color_info . num_components == 3		4856102	0		==			
ANR	4856249	MemberAccess	dev -> color_info . num_components		4856102	0					
ANR	4856250	PtrMemberAccess	dev -> color_info		4856102	0					
ANR	4856251	Identifier	dev		4856102	0					
ANR	4856252	Identifier	color_info		4856102	1					
ANR	4856253	Identifier	num_components		4856102	1					
ANR	4856254	PrimaryExpression	3		4856102	1					
ANR	4856255	CompoundStatement		22:8:520:548	4856102	1					
ANR	4856256	IdentifierDeclStatement	gx_device_anti_alias_info aa ;	463:8:14227:14255	4856102	0	True				
ANR	4856257	IdentifierDecl	aa		4856102	0					
ANR	4856258	IdentifierDeclType	gx_device_anti_alias_info		4856102	0					
ANR	4856259	Identifier	aa		4856102	1					
ANR	4856260	ExpressionStatement	aa = dev -> color_info . anti_alias	465:8:14266:14297	4856102	1	True				
ANR	4856261	AssignmentExpression	aa = dev -> color_info . anti_alias		4856102	0		=			
ANR	4856262	Identifier	aa		4856102	0					
ANR	4856263	MemberAccess	dev -> color_info . anti_alias		4856102	1					
ANR	4856264	PtrMemberAccess	dev -> color_info		4856102	0					
ANR	4856265	Identifier	dev		4856102	0					
ANR	4856266	Identifier	color_info		4856102	1					
ANR	4856267	Identifier	anti_alias		4856102	1					
ANR	4856268	ExpressionStatement	copy ( color_info )	466:8:14307:14323	4856102	2	True				
ANR	4856269	CallExpression	copy ( color_info )		4856102	0					
ANR	4856270	Callee	copy		4856102	0					
ANR	4856271	Identifier	copy		4856102	0					
ANR	4856272	ArgumentList	color_info		4856102	1					
ANR	4856273	Argument	color_info		4856102	0					
ANR	4856274	Identifier	color_info		4856102	0					
ANR	4856275	ExpressionStatement	dev -> color_info . anti_alias = aa	467:8:14333:14364	4856102	3	True				
ANR	4856276	AssignmentExpression	dev -> color_info . anti_alias = aa		4856102	0		=			
ANR	4856277	MemberAccess	dev -> color_info . anti_alias		4856102	0					
ANR	4856278	PtrMemberAccess	dev -> color_info		4856102	0					
ANR	4856279	Identifier	dev		4856102	0					
ANR	4856280	Identifier	color_info		4856102	1					
ANR	4856281	Identifier	anti_alias		4856102	1					
ANR	4856282	Identifier	aa		4856102	1					
ANR	4856283	IdentifierDeclStatement	undef copy4 undef copy2 undef copy x_clear_color_cache ( dev ) ;	470:1:14374:14440	4856102	36	True				
ANR	4856284	IdentifierDecl	x_clear_color_cache ( dev )		4856102	0					
ANR	4856285	IdentifierDeclType	undef copy4 undef copy2 undef copy		4856102	0					
ANR	4856286	Identifier	x_clear_color_cache		4856102	1					
ANR	4856287	Identifier	dev		4856102	2					
ANR	4856288	ReturnStatement	return 0 ;	475:4:14446:14454	4856102	37	True				
ANR	4856289	PrimaryExpression	0		4856102	0					
ANR	4856290	ReturnType	static int		4856102	1					
ANR	4856291	Identifier	get_target_info		4856102	2					
ANR	4856292	ParameterList	gx_device * dev		4856102	3					
ANR	4856293	Parameter	gx_device * dev	441:16:13689:13703	4856102	0	True				
ANR	4856294	ParameterType	gx_device *		4856102	0					
ANR	4856295	Identifier	dev		4856102	1					
ANR	4856296	CFGEntryNode	ENTRY		4856102		True				
ANR	4856297	CFGExitNode	EXIT		4856102		True				
ANR	4856298	Symbol	* dev		4856102						
ANR	4856299	Symbol	code		4856102						
ANR	4856300	Symbol	x_clear_color_cache		4856102						
ANR	4856301	Symbol	& tdev		4856102						
ANR	4856302	Symbol	dev -> color_info		4856102						
ANR	4856303	Symbol	ImagingBBox		4856102						
ANR	4856304	Symbol	color_info		4856102						
ANR	4856305	Symbol	dev		4856102						
ANR	4856306	Symbol	dev -> m		4856102						
ANR	4856307	Symbol	tdev		4856102						
ANR	4856308	Symbol	Margins		4856102						
ANR	4856309	Symbol	ImagingBBox_set		4856102						
ANR	4856310	Symbol	tdev -> m		4856102						
ANR	4856311	Symbol	height		4856102						
ANR	4856312	Symbol	aa		4856102						
ANR	4856313	Symbol	dev -> color_info . anti_alias		4856102						
ANR	4856314	Symbol	MediaSize		4856102						
ANR	4856315	Symbol	dev -> color_info . num_components		4856102						
ANR	4856316	Symbol	m		4856102						
ANR	4856317	Symbol	get_dev_target		4856102						
ANR	4856318	Symbol	* tdev		4856102						
ANR	4856319	Symbol	HWMargins		4856102						
ANR	4856320	Symbol	* m		4856102						
ANR	4856321	Symbol	width		4856102						
ANR	4856322	Symbol	HWResolution		4856102						
ANR	4856323	Function	x_alt_map_color	479:0:14534:15344							
ANR	4856324	FunctionDef	"x_alt_map_color (gx_device * dev , gx_color_index color)"		4856323	0					
ANR	4856325	CompoundStatement		481:0:14611:15344	4856323	0					
ANR	4856326	IdentifierDeclStatement	gx_device_X_wrapper * xdev = ( gx_device_X_wrapper * ) dev ;	482:4:14617:14672	4856323	0	True				
ANR	4856327	IdentifierDecl	* xdev = ( gx_device_X_wrapper * ) dev		4856323	0					
ANR	4856328	IdentifierDeclType	gx_device_X_wrapper *		4856323	0					
ANR	4856329	Identifier	xdev		4856323	1					
ANR	4856330	AssignmentExpression	* xdev = ( gx_device_X_wrapper * ) dev		4856323	2		=			
ANR	4856331	Identifier	xdev		4856323	0					
ANR	4856332	CastExpression	( gx_device_X_wrapper * ) dev		4856323	1					
ANR	4856333	CastTarget	gx_device_X_wrapper *		4856323	0					
ANR	4856334	Identifier	dev		4856323	1					
ANR	4856335	IdentifierDeclStatement	gx_device * tdev ;	483:4:14678:14693	4856323	1	True				
ANR	4856336	IdentifierDecl	* tdev		4856323	0					
ANR	4856337	IdentifierDeclType	gx_device *		4856323	0					
ANR	4856338	Identifier	tdev		4856323	1					
ANR	4856339	IdentifierDeclStatement	gx_color_value rgb [ 3 ] ;	484:4:14699:14720	4856323	2	True				
ANR	4856340	IdentifierDecl	rgb [ 3 ]		4856323	0					
ANR	4856341	IdentifierDeclType	gx_color_value [ 3 ]		4856323	0					
ANR	4856342	Identifier	rgb		4856323	1					
ANR	4856343	PrimaryExpression	3		4856323	2					
ANR	4856344	IdentifierDeclStatement	gx_color_index cindex ;	485:4:14726:14747	4856323	3	True				
ANR	4856345	IdentifierDecl	cindex		4856323	0					
ANR	4856346	IdentifierDeclType	gx_color_index		4856323	0					
ANR	4856347	Identifier	cindex		4856323	1					
ANR	4856348	IdentifierDeclStatement	int result ;	486:4:14753:14763	4856323	4	True				
ANR	4856349	IdentifierDecl	result		4856323	0					
ANR	4856350	IdentifierDeclType	int		4856323	0					
ANR	4856351	Identifier	result		4856323	1					
ANR	4856352	IdentifierDeclStatement	int code ;	487:4:14769:14777	4856323	5	True				
ANR	4856353	IdentifierDecl	code		4856323	0					
ANR	4856354	IdentifierDeclType	int		4856323	0					
ANR	4856355	Identifier	code		4856323	1					
ANR	4856356	IfStatement	if ( color == gx_no_color_index )		4856323	6					
ANR	4856357	Condition	color == gx_no_color_index	489:8:14788:14813	4856323	0	True				
ANR	4856358	EqualityExpression	color == gx_no_color_index		4856323	0		==			
ANR	4856359	Identifier	color		4856323	0					
ANR	4856360	Identifier	gx_no_color_index		4856323	1					
ANR	4856361	ReturnStatement	return color ;	490:8:14824:14836	4856323	1	True				
ANR	4856362	Identifier	color		4856323	0					
ANR	4856363	IfStatement	if ( color < 16 )		4856323	7					
ANR	4856364	Condition	color < 16	491:8:14846:14855	4856323	0	True				
ANR	4856365	RelationalExpression	color < 16		4856323	0		<			
ANR	4856366	Identifier	color		4856323	0					
ANR	4856367	PrimaryExpression	16		4856323	1					
ANR	4856368	CompoundStatement		11:20:246:246	4856323	1					
ANR	4856369	ExpressionStatement	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]	492:8:14868:14926	4856323	0	True				
ANR	4856370	AssignmentExpression	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]		4856323	0		=			
ANR	4856371	Identifier	cindex		4856323	0					
ANR	4856372	ArrayIndexing	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]		4856323	1					
ANR	4856373	PtrMemberAccess	( ( gx_device_X_wrapper * ) dev ) -> color_cache		4856323	0					
ANR	4856374	CastExpression	( gx_device_X_wrapper * ) dev		4856323	0					
ANR	4856375	CastTarget	gx_device_X_wrapper *		4856323	0					
ANR	4856376	Identifier	dev		4856323	1					
ANR	4856377	Identifier	color_cache		4856323	1					
ANR	4856378	Identifier	color		4856323	1					
ANR	4856379	IfStatement	if ( cindex != gx_no_color_index )		4856323	1					
ANR	4856380	Condition	cindex != gx_no_color_index	493:12:14940:14966	4856323	0	True				
ANR	4856381	EqualityExpression	cindex != gx_no_color_index		4856323	0		!=			
ANR	4856382	Identifier	cindex		4856323	0					
ANR	4856383	Identifier	gx_no_color_index		4856323	1					
ANR	4856384	ReturnStatement	return cindex ;	494:12:14981:14994	4856323	1	True				
ANR	4856385	Identifier	cindex		4856323	0					
ANR	4856386	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		4856323	8					
ANR	4856387	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	496:8:15010:15048	4856323	0	True				
ANR	4856388	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		4856323	0		<			
ANR	4856389	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		4856323	0		=			
ANR	4856390	Identifier	code		4856323	0					
ANR	4856391	CallExpression	"get_dev_target ( & tdev , dev )"		4856323	1					
ANR	4856392	Callee	get_dev_target		4856323	0					
ANR	4856393	Identifier	get_dev_target		4856323	0					
ANR	4856394	ArgumentList	& tdev		4856323	1					
ANR	4856395	Argument	& tdev		4856323	0					
ANR	4856396	UnaryOperationExpression	& tdev		4856323	0					
ANR	4856397	UnaryOperator	&		4856323	0					
ANR	4856398	Identifier	tdev		4856323	1					
ANR	4856399	Argument	dev		4856323	1					
ANR	4856400	Identifier	dev		4856323	0					
ANR	4856401	PrimaryExpression	0		4856323	1					
ANR	4856402	ReturnStatement	return code ;	497:8:15059:15070	4856323	1	True				
ANR	4856403	Identifier	code		4856323	0					
ANR	4856404	ExpressionStatement	"result = xdev -> alt_map_color ( dev , color , rgb )"	498:4:15076:15121	4856323	9	True				
ANR	4856405	AssignmentExpression	"result = xdev -> alt_map_color ( dev , color , rgb )"		4856323	0		=			
ANR	4856406	Identifier	result		4856323	0					
ANR	4856407	CallExpression	"xdev -> alt_map_color ( dev , color , rgb )"		4856323	1					
ANR	4856408	Callee	xdev -> alt_map_color		4856323	0					
ANR	4856409	PtrMemberAccess	xdev -> alt_map_color		4856323	0					
ANR	4856410	Identifier	xdev		4856323	0					
ANR	4856411	Identifier	alt_map_color		4856323	1					
ANR	4856412	ArgumentList	dev		4856323	1					
ANR	4856413	Argument	dev		4856323	0					
ANR	4856414	Identifier	dev		4856323	0					
ANR	4856415	Argument	color		4856323	1					
ANR	4856416	Identifier	color		4856323	0					
ANR	4856417	Argument	rgb		4856323	2					
ANR	4856418	Identifier	rgb		4856323	0					
ANR	4856419	IfStatement	if ( result >= 0 )		4856323	10					
ANR	4856420	Condition	result >= 0	499:8:15131:15141	4856323	0	True				
ANR	4856421	RelationalExpression	result >= 0		4856323	0		>=			
ANR	4856422	Identifier	result		4856323	0					
ANR	4856423	PrimaryExpression	0		4856323	1					
ANR	4856424	ExpressionStatement	cindex = result	500:8:15152:15167	4856323	1	True				
ANR	4856425	AssignmentExpression	cindex = result		4856323	0		=			
ANR	4856426	Identifier	cindex		4856323	0					
ANR	4856427	Identifier	result		4856323	1					
ANR	4856428	ElseStatement	else		4856323	0					
ANR	4856429	ExpressionStatement	"cindex = dev_proc ( tdev , map_rgb_color ) ( tdev , rgb )"	502:8:15186:15235	4856323	0	True				
ANR	4856430	AssignmentExpression	"cindex = dev_proc ( tdev , map_rgb_color ) ( tdev , rgb )"		4856323	0		=			
ANR	4856431	Identifier	cindex		4856323	0					
ANR	4856432	CallExpression	"dev_proc ( tdev , map_rgb_color ) ( tdev , rgb )"		4856323	1					
ANR	4856433	Callee	"dev_proc ( tdev , map_rgb_color )"		4856323	0					
ANR	4856434	CallExpression	"dev_proc ( tdev , map_rgb_color )"		4856323	0					
ANR	4856435	Callee	dev_proc		4856323	0					
ANR	4856436	Identifier	dev_proc		4856323	0					
ANR	4856437	ArgumentList	tdev		4856323	1					
ANR	4856438	Argument	tdev		4856323	0					
ANR	4856439	Identifier	tdev		4856323	0					
ANR	4856440	Argument	map_rgb_color		4856323	1					
ANR	4856441	Identifier	map_rgb_color		4856323	0					
ANR	4856442	ArgumentList	tdev		4856323	1					
ANR	4856443	Argument	tdev		4856323	0					
ANR	4856444	Identifier	tdev		4856323	0					
ANR	4856445	Argument	rgb		4856323	1					
ANR	4856446	Identifier	rgb		4856323	0					
ANR	4856447	IfStatement	if ( color < 16 )		4856323	11					
ANR	4856448	Condition	color < 16	503:8:15245:15254	4856323	0	True				
ANR	4856449	RelationalExpression	color < 16		4856323	0		<			
ANR	4856450	Identifier	color		4856323	0					
ANR	4856451	PrimaryExpression	16		4856323	1					
ANR	4856452	ExpressionStatement	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ] = cindex	504:8:15265:15323	4856323	1	True				
ANR	4856453	AssignmentExpression	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ] = cindex		4856323	0		=			
ANR	4856454	ArrayIndexing	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]		4856323	0					
ANR	4856455	PtrMemberAccess	( ( gx_device_X_wrapper * ) dev ) -> color_cache		4856323	0					
ANR	4856456	CastExpression	( gx_device_X_wrapper * ) dev		4856323	0					
ANR	4856457	CastTarget	gx_device_X_wrapper *		4856323	0					
ANR	4856458	Identifier	dev		4856323	1					
ANR	4856459	Identifier	color_cache		4856323	1					
ANR	4856460	Identifier	color		4856323	1					
ANR	4856461	Identifier	cindex		4856323	1					
ANR	4856462	ReturnStatement	return cindex ;	505:4:15329:15342	4856323	12	True				
ANR	4856463	Identifier	cindex		4856323	0					
ANR	4856464	ReturnType	static gx_color_index		4856323	1					
ANR	4856465	Identifier	x_alt_map_color		4856323	2					
ANR	4856466	ParameterList	"gx_device * dev , gx_color_index color"		4856323	3					
ANR	4856467	Parameter	gx_device * dev	480:16:14572:14586	4856323	0	True				
ANR	4856468	ParameterType	gx_device *		4856323	0					
ANR	4856469	Identifier	dev		4856323	1					
ANR	4856470	Parameter	gx_color_index color	480:33:14589:14608	4856323	1	True				
ANR	4856471	ParameterType	gx_color_index		4856323	0					
ANR	4856472	Identifier	color		4856323	1					
ANR	4856473	CFGEntryNode	ENTRY		4856323		True				
ANR	4856474	CFGExitNode	EXIT		4856323		True				
ANR	4856475	Symbol	* dev		4856323						
ANR	4856476	Symbol	code		4856323						
ANR	4856477	Symbol	color		4856323						
ANR	4856478	Symbol	xdev		4856323						
ANR	4856479	Symbol	cindex		4856323						
ANR	4856480	Symbol	* * dev		4856323						
ANR	4856481	Symbol	* color		4856323						
ANR	4856482	Symbol	& tdev		4856323						
ANR	4856483	Symbol	* ( ( gx_device_X_wrapper * ) dev ) -> color_cache		4856323						
ANR	4856484	Symbol	rgb		4856323						
ANR	4856485	Symbol	( ( gx_device_X_wrapper * ) dev ) -> color_cache		4856323						
ANR	4856486	Symbol	map_rgb_color		4856323						
ANR	4856487	Symbol	result		4856323						
ANR	4856488	Symbol	get_dev_target		4856323						
ANR	4856489	Symbol	gx_no_color_index		4856323						
ANR	4856490	Symbol	dev		4856323						
ANR	4856491	Symbol	xdev -> alt_map_color		4856323						
ANR	4856492	Symbol	* xdev		4856323						
ANR	4856493	Symbol	dev_proc		4856323						
ANR	4856494	Symbol	tdev		4856323						
ANR	4856495	DeclStmt									
ANR	4856496	Decl							const gx_device_procs	const gx_device_procs	x_cmyk_procs
ANR	4856497	DeclStmt									
ANR	4856498	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk_device
ANR	4856499	DeclStmt									
ANR	4856500	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk2_device
ANR	4856501	DeclStmt									
ANR	4856502	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk4_device
ANR	4856503	DeclStmt									
ANR	4856504	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk8_device
ANR	4856505	Function	x_cmyk_alt_map_color	578:0:17856:18448							
ANR	4856506	FunctionDef	"x_cmyk_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		4856505	0					
ANR	4856507	CompoundStatement		581:0:17971:18448	4856505	0					
ANR	4856508	IdentifierDeclStatement	int shift = dev -> color_info . depth >> 2 ;	582:4:17977:18015	4856505	0	True				
ANR	4856509	IdentifierDecl	shift = dev -> color_info . depth >> 2		4856505	0					
ANR	4856510	IdentifierDeclType	int		4856505	0					
ANR	4856511	Identifier	shift		4856505	1					
ANR	4856512	AssignmentExpression	shift = dev -> color_info . depth >> 2		4856505	2		=			
ANR	4856513	Identifier	shift		4856505	0					
ANR	4856514	ShiftExpression	dev -> color_info . depth >> 2		4856505	1		>>			
ANR	4856515	MemberAccess	dev -> color_info . depth		4856505	0					
ANR	4856516	PtrMemberAccess	dev -> color_info		4856505	0					
ANR	4856517	Identifier	dev		4856505	0					
ANR	4856518	Identifier	color_info		4856505	1					
ANR	4856519	Identifier	depth		4856505	1					
ANR	4856520	PrimaryExpression	2		4856505	1					
ANR	4856521	IdentifierDeclStatement	int mask = ( 1 << shift ) - 1 ;	583:4:18021:18048	4856505	1	True				
ANR	4856522	IdentifierDecl	mask = ( 1 << shift ) - 1		4856505	0					
ANR	4856523	IdentifierDeclType	int		4856505	0					
ANR	4856524	Identifier	mask		4856505	1					
ANR	4856525	AssignmentExpression	mask = ( 1 << shift ) - 1		4856505	2		=			
ANR	4856526	Identifier	mask		4856505	0					
ANR	4856527	AdditiveExpression	( 1 << shift ) - 1		4856505	1		-			
ANR	4856528	ShiftExpression	1 << shift		4856505	0		<<			
ANR	4856529	PrimaryExpression	1		4856505	0					
ANR	4856530	Identifier	shift		4856505	1					
ANR	4856531	PrimaryExpression	1		4856505	1					
ANR	4856532	IdentifierDeclStatement	gx_color_value scale = gx_max_color_value / mask ;	585:4:18108:18156	4856505	2	True				
ANR	4856533	IdentifierDecl	scale = gx_max_color_value / mask		4856505	0					
ANR	4856534	IdentifierDeclType	gx_color_value		4856505	0					
ANR	4856535	Identifier	scale		4856505	1					
ANR	4856536	AssignmentExpression	scale = gx_max_color_value / mask		4856505	2		=			
ANR	4856537	Identifier	scale		4856505	0					
ANR	4856538	MultiplicativeExpression	gx_max_color_value / mask		4856505	1		/			
ANR	4856539	Identifier	gx_max_color_value		4856505	0					
ANR	4856540	Identifier	mask		4856505	1					
ANR	4856541	IdentifierDeclStatement	int cw = ~color & mask ;	586:4:18162:18184	4856505	3	True				
ANR	4856542	IdentifierDecl	cw = ~color & mask		4856505	0					
ANR	4856543	IdentifierDeclType	int		4856505	0					
ANR	4856544	Identifier	cw		4856505	1					
ANR	4856545	AssignmentExpression	cw = ~color & mask		4856505	2		=			
ANR	4856546	Identifier	cw		4856505	0					
ANR	4856547	BitAndExpression	~color & mask		4856505	1		&			
ANR	4856548	Identifier	~color		4856505	0					
ANR	4856549	Identifier	mask		4856505	1					
ANR	4856550	IdentifierDeclStatement	int cb = cw - ( ( color >> shift ) & mask ) ;	587:4:18190:18229	4856505	4	True				
ANR	4856551	IdentifierDecl	cb = cw - ( ( color >> shift ) & mask )		4856505	0					
ANR	4856552	IdentifierDeclType	int		4856505	0					
ANR	4856553	Identifier	cb		4856505	1					
ANR	4856554	AssignmentExpression	cb = cw - ( ( color >> shift ) & mask )		4856505	2		=			
ANR	4856555	Identifier	cb		4856505	0					
ANR	4856556	AdditiveExpression	cw - ( ( color >> shift ) & mask )		4856505	1		-			
ANR	4856557	Identifier	cw		4856505	0					
ANR	4856558	BitAndExpression	( color >> shift ) & mask		4856505	1		&			
ANR	4856559	ShiftExpression	color >> shift		4856505	0		>>			
ANR	4856560	Identifier	color		4856505	0					
ANR	4856561	Identifier	shift		4856505	1					
ANR	4856562	Identifier	mask		4856505	1					
ANR	4856563	IdentifierDeclStatement	int cg = cw - ( ( color >> ( shift * 2 ) ) & mask ) ;	588:4:18235:18280	4856505	5	True				
ANR	4856564	IdentifierDecl	cg = cw - ( ( color >> ( shift * 2 ) ) & mask )		4856505	0					
ANR	4856565	IdentifierDeclType	int		4856505	0					
ANR	4856566	Identifier	cg		4856505	1					
ANR	4856567	AssignmentExpression	cg = cw - ( ( color >> ( shift * 2 ) ) & mask )		4856505	2		=			
ANR	4856568	Identifier	cg		4856505	0					
ANR	4856569	AdditiveExpression	cw - ( ( color >> ( shift * 2 ) ) & mask )		4856505	1		-			
ANR	4856570	Identifier	cw		4856505	0					
ANR	4856571	BitAndExpression	( color >> ( shift * 2 ) ) & mask		4856505	1		&			
ANR	4856572	ShiftExpression	color >> ( shift * 2 )		4856505	0		>>			
ANR	4856573	Identifier	color		4856505	0					
ANR	4856574	MultiplicativeExpression	shift * 2		4856505	1		*			
ANR	4856575	Identifier	shift		4856505	0					
ANR	4856576	PrimaryExpression	2		4856505	1					
ANR	4856577	Identifier	mask		4856505	1					
ANR	4856578	IdentifierDeclStatement	int cr = cw - ( ( color >> ( shift * 3 ) ) & mask ) ;	589:4:18286:18331	4856505	6	True				
ANR	4856579	IdentifierDecl	cr = cw - ( ( color >> ( shift * 3 ) ) & mask )		4856505	0					
ANR	4856580	IdentifierDeclType	int		4856505	0					
ANR	4856581	Identifier	cr		4856505	1					
ANR	4856582	AssignmentExpression	cr = cw - ( ( color >> ( shift * 3 ) ) & mask )		4856505	2		=			
ANR	4856583	Identifier	cr		4856505	0					
ANR	4856584	AdditiveExpression	cw - ( ( color >> ( shift * 3 ) ) & mask )		4856505	1		-			
ANR	4856585	Identifier	cw		4856505	0					
ANR	4856586	BitAndExpression	( color >> ( shift * 3 ) ) & mask		4856505	1		&			
ANR	4856587	ShiftExpression	color >> ( shift * 3 )		4856505	0		>>			
ANR	4856588	Identifier	color		4856505	0					
ANR	4856589	MultiplicativeExpression	shift * 3		4856505	1		*			
ANR	4856590	Identifier	shift		4856505	0					
ANR	4856591	PrimaryExpression	3		4856505	1					
ANR	4856592	Identifier	mask		4856505	1					
ANR	4856593	ExpressionStatement	"rgb [ 0 ] = max ( cr , 0 ) * scale"	591:4:18338:18365	4856505	7	True				
ANR	4856594	AssignmentExpression	"rgb [ 0 ] = max ( cr , 0 ) * scale"		4856505	0		=			
ANR	4856595	ArrayIndexing	rgb [ 0 ]		4856505	0					
ANR	4856596	Identifier	rgb		4856505	0					
ANR	4856597	PrimaryExpression	0		4856505	1					
ANR	4856598	MultiplicativeExpression	"max ( cr , 0 ) * scale"		4856505	1		*			
ANR	4856599	CallExpression	"max ( cr , 0 )"		4856505	0					
ANR	4856600	Callee	max		4856505	0					
ANR	4856601	Identifier	max		4856505	0					
ANR	4856602	ArgumentList	cr		4856505	1					
ANR	4856603	Argument	cr		4856505	0					
ANR	4856604	Identifier	cr		4856505	0					
ANR	4856605	Argument	0		4856505	1					
ANR	4856606	PrimaryExpression	0		4856505	0					
ANR	4856607	Identifier	scale		4856505	1					
ANR	4856608	ExpressionStatement	"rgb [ 1 ] = max ( cg , 0 ) * scale"	592:4:18371:18398	4856505	8	True				
ANR	4856609	AssignmentExpression	"rgb [ 1 ] = max ( cg , 0 ) * scale"		4856505	0		=			
ANR	4856610	ArrayIndexing	rgb [ 1 ]		4856505	0					
ANR	4856611	Identifier	rgb		4856505	0					
ANR	4856612	PrimaryExpression	1		4856505	1					
ANR	4856613	MultiplicativeExpression	"max ( cg , 0 ) * scale"		4856505	1		*			
ANR	4856614	CallExpression	"max ( cg , 0 )"		4856505	0					
ANR	4856615	Callee	max		4856505	0					
ANR	4856616	Identifier	max		4856505	0					
ANR	4856617	ArgumentList	cg		4856505	1					
ANR	4856618	Argument	cg		4856505	0					
ANR	4856619	Identifier	cg		4856505	0					
ANR	4856620	Argument	0		4856505	1					
ANR	4856621	PrimaryExpression	0		4856505	0					
ANR	4856622	Identifier	scale		4856505	1					
ANR	4856623	ExpressionStatement	"rgb [ 2 ] = max ( cb , 0 ) * scale"	593:4:18404:18431	4856505	9	True				
ANR	4856624	AssignmentExpression	"rgb [ 2 ] = max ( cb , 0 ) * scale"		4856505	0		=			
ANR	4856625	ArrayIndexing	rgb [ 2 ]		4856505	0					
ANR	4856626	Identifier	rgb		4856505	0					
ANR	4856627	PrimaryExpression	2		4856505	1					
ANR	4856628	MultiplicativeExpression	"max ( cb , 0 ) * scale"		4856505	1		*			
ANR	4856629	CallExpression	"max ( cb , 0 )"		4856505	0					
ANR	4856630	Callee	max		4856505	0					
ANR	4856631	Identifier	max		4856505	0					
ANR	4856632	ArgumentList	cb		4856505	1					
ANR	4856633	Argument	cb		4856505	0					
ANR	4856634	Identifier	cb		4856505	0					
ANR	4856635	Argument	0		4856505	1					
ANR	4856636	PrimaryExpression	0		4856505	0					
ANR	4856637	Identifier	scale		4856505	1					
ANR	4856638	ReturnStatement	return - 1 ;	594:4:18437:18446	4856505	10	True				
ANR	4856639	UnaryOperationExpression	- 1		4856505	0					
ANR	4856640	UnaryOperator	-		4856505	0					
ANR	4856641	PrimaryExpression	1		4856505	1					
ANR	4856642	ReturnType	static int		4856505	1					
ANR	4856643	Identifier	x_cmyk_alt_map_color		4856505	2					
ANR	4856644	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		4856505	3					
ANR	4856645	Parameter	gx_device * dev	579:21:17888:17902	4856505	0	True				
ANR	4856646	ParameterType	gx_device *		4856505	0					
ANR	4856647	Identifier	dev		4856505	1					
ANR	4856648	Parameter	gx_color_index color	579:38:17905:17924	4856505	1	True				
ANR	4856649	ParameterType	gx_color_index		4856505	0					
ANR	4856650	Identifier	color		4856505	1					
ANR	4856651	Parameter	gx_color_value rgb [ 3 ]	580:21:17948:17968	4856505	2	True				
ANR	4856652	ParameterType	gx_color_value [ 3 ]		4856505	0					
ANR	4856653	Identifier	rgb		4856505	1					
ANR	4856654	CFGEntryNode	ENTRY		4856505		True				
ANR	4856655	CFGExitNode	EXIT		4856505		True				
ANR	4856656	Symbol	* dev		4856505						
ANR	4856657	Symbol	color		4856505						
ANR	4856658	Symbol	cg		4856505						
ANR	4856659	Symbol	max		4856505						
ANR	4856660	Symbol	shift		4856505						
ANR	4856661	Symbol	scale		4856505						
ANR	4856662	Symbol	rgb		4856505						
ANR	4856663	Symbol	dev -> color_info		4856505						
ANR	4856664	Symbol	dev -> color_info . depth		4856505						
ANR	4856665	Symbol	~color		4856505						
ANR	4856666	Symbol	cr		4856505						
ANR	4856667	Symbol	dev		4856505						
ANR	4856668	Symbol	cw		4856505						
ANR	4856669	Symbol	gx_max_color_value		4856505						
ANR	4856670	Symbol	* rgb		4856505						
ANR	4856671	Symbol	mask		4856505						
ANR	4856672	Symbol	cb		4856505						
ANR	4856673	Function	x_cmyk_set_procs	598:0:18486:18725							
ANR	4856674	FunctionDef	x_cmyk_set_procs (gx_device * dev)		4856673	0					
ANR	4856675	CompoundStatement		600:0:18531:18725	4856673	0					
ANR	4856676	IfStatement	if ( dev -> color_info . depth == 4 )		4856673	0					
ANR	4856677	Condition	dev -> color_info . depth == 4	601:8:18541:18566	4856673	0	True				
ANR	4856678	EqualityExpression	dev -> color_info . depth == 4		4856673	0		==			
ANR	4856679	MemberAccess	dev -> color_info . depth		4856673	0					
ANR	4856680	PtrMemberAccess	dev -> color_info		4856673	0					
ANR	4856681	Identifier	dev		4856673	0					
ANR	4856682	Identifier	color_info		4856673	1					
ANR	4856683	Identifier	depth		4856673	1					
ANR	4856684	PrimaryExpression	4		4856673	1					
ANR	4856685	CompoundStatement		2:36:37:37	4856673	1					
ANR	4856686	ExpressionStatement	"set_dev_proc ( dev , map_cmyk_color , cmyk_1bit_map_cmyk_color )"	602:8:18579:18638	4856673	0	True				
ANR	4856687	CallExpression	"set_dev_proc ( dev , map_cmyk_color , cmyk_1bit_map_cmyk_color )"		4856673	0					
ANR	4856688	Callee	set_dev_proc		4856673	0					
ANR	4856689	Identifier	set_dev_proc		4856673	0					
ANR	4856690	ArgumentList	dev		4856673	1					
ANR	4856691	Argument	dev		4856673	0					
ANR	4856692	Identifier	dev		4856673	0					
ANR	4856693	Argument	map_cmyk_color		4856673	1					
ANR	4856694	Identifier	map_cmyk_color		4856673	0					
ANR	4856695	Argument	cmyk_1bit_map_cmyk_color		4856673	2					
ANR	4856696	Identifier	cmyk_1bit_map_cmyk_color		4856673	0					
ANR	4856697	ElseStatement	else		4856673	0					
ANR	4856698	CompoundStatement		4:11:119:119	4856673	0					
ANR	4856699	ExpressionStatement	"set_dev_proc ( dev , map_cmyk_color , x_cmyk_map_cmyk_color )"	604:8:18661:18717	4856673	0	True				
ANR	4856700	CallExpression	"set_dev_proc ( dev , map_cmyk_color , x_cmyk_map_cmyk_color )"		4856673	0					
ANR	4856701	Callee	set_dev_proc		4856673	0					
ANR	4856702	Identifier	set_dev_proc		4856673	0					
ANR	4856703	ArgumentList	dev		4856673	1					
ANR	4856704	Argument	dev		4856673	0					
ANR	4856705	Identifier	dev		4856673	0					
ANR	4856706	Argument	map_cmyk_color		4856673	1					
ANR	4856707	Identifier	map_cmyk_color		4856673	0					
ANR	4856708	Argument	x_cmyk_map_cmyk_color		4856673	2					
ANR	4856709	Identifier	x_cmyk_map_cmyk_color		4856673	0					
ANR	4856710	ReturnType	static void		4856673	1					
ANR	4856711	Identifier	x_cmyk_set_procs		4856673	2					
ANR	4856712	ParameterList	gx_device * dev		4856673	3					
ANR	4856713	Parameter	gx_device * dev	599:17:18515:18528	4856673	0	True				
ANR	4856714	ParameterType	gx_device *		4856673	0					
ANR	4856715	Identifier	dev		4856673	1					
ANR	4856716	CFGEntryNode	ENTRY		4856673		True				
ANR	4856717	CFGExitNode	EXIT		4856673		True				
ANR	4856718	Symbol	* dev		4856673						
ANR	4856719	Symbol	cmyk_1bit_map_cmyk_color		4856673						
ANR	4856720	Symbol	map_cmyk_color		4856673						
ANR	4856721	Symbol	dev		4856673						
ANR	4856722	Symbol	dev -> color_info . depth		4856673						
ANR	4856723	Symbol	dev -> color_info		4856673						
ANR	4856724	Symbol	x_cmyk_map_cmyk_color		4856673						
ANR	4856725	Function	x_cmyk_open	610:0:18753:18895							
ANR	4856726	FunctionDef	x_cmyk_open (gx_device * dev)		4856725	0					
ANR	4856727	CompoundStatement		612:0:18792:18895	4856725	0					
ANR	4856728	IdentifierDeclStatement	int code = x_wrap_open ( dev ) ;	613:4:18798:18825	4856725	0	True				
ANR	4856729	IdentifierDecl	code = x_wrap_open ( dev )		4856725	0					
ANR	4856730	IdentifierDeclType	int		4856725	0					
ANR	4856731	Identifier	code		4856725	1					
ANR	4856732	AssignmentExpression	code = x_wrap_open ( dev )		4856725	2		=			
ANR	4856733	Identifier	code		4856725	0					
ANR	4856734	CallExpression	x_wrap_open ( dev )		4856725	1					
ANR	4856735	Callee	x_wrap_open		4856725	0					
ANR	4856736	Identifier	x_wrap_open		4856725	0					
ANR	4856737	ArgumentList	dev		4856725	1					
ANR	4856738	Argument	dev		4856725	0					
ANR	4856739	Identifier	dev		4856725	0					
ANR	4856740	IfStatement	if ( code >= 0 )		4856725	1					
ANR	4856741	Condition	code >= 0	615:8:18836:18844	4856725	0	True				
ANR	4856742	RelationalExpression	code >= 0		4856725	0		>=			
ANR	4856743	Identifier	code		4856725	0					
ANR	4856744	PrimaryExpression	0		4856725	1					
ANR	4856745	ExpressionStatement	x_cmyk_set_procs ( dev )	616:8:18855:18876	4856725	1	True				
ANR	4856746	CallExpression	x_cmyk_set_procs ( dev )		4856725	0					
ANR	4856747	Callee	x_cmyk_set_procs		4856725	0					
ANR	4856748	Identifier	x_cmyk_set_procs		4856725	0					
ANR	4856749	ArgumentList	dev		4856725	1					
ANR	4856750	Argument	dev		4856725	0					
ANR	4856751	Identifier	dev		4856725	0					
ANR	4856752	ReturnStatement	return code ;	617:4:18882:18893	4856725	2	True				
ANR	4856753	Identifier	code		4856725	0					
ANR	4856754	ReturnType	static int		4856725	1					
ANR	4856755	Identifier	x_cmyk_open		4856725	2					
ANR	4856756	ParameterList	gx_device * dev		4856725	3					
ANR	4856757	Parameter	gx_device * dev	611:12:18776:18789	4856725	0	True				
ANR	4856758	ParameterType	gx_device *		4856725	0					
ANR	4856759	Identifier	dev		4856725	1					
ANR	4856760	CFGEntryNode	ENTRY		4856725		True				
ANR	4856761	CFGExitNode	EXIT		4856725		True				
ANR	4856762	Symbol	code		4856725						
ANR	4856763	Symbol	dev		4856725						
ANR	4856764	Symbol	x_wrap_open		4856725						
ANR	4856765	Function	x_cmyk_put_params	620:0:18898:19083							
ANR	4856766	FunctionDef	"x_cmyk_put_params (gx_device * dev , gs_param_list * plist)"		4856765	0					
ANR	4856767	CompoundStatement		622:0:18967:19083	4856765	0					
ANR	4856768	IdentifierDeclStatement	"int code = x_wrap_put_params ( dev , plist ) ;"	623:4:18973:19013	4856765	0	True				
ANR	4856769	IdentifierDecl	"code = x_wrap_put_params ( dev , plist )"		4856765	0					
ANR	4856770	IdentifierDeclType	int		4856765	0					
ANR	4856771	Identifier	code		4856765	1					
ANR	4856772	AssignmentExpression	"code = x_wrap_put_params ( dev , plist )"		4856765	2		=			
ANR	4856773	Identifier	code		4856765	0					
ANR	4856774	CallExpression	"x_wrap_put_params ( dev , plist )"		4856765	1					
ANR	4856775	Callee	x_wrap_put_params		4856765	0					
ANR	4856776	Identifier	x_wrap_put_params		4856765	0					
ANR	4856777	ArgumentList	dev		4856765	1					
ANR	4856778	Argument	dev		4856765	0					
ANR	4856779	Identifier	dev		4856765	0					
ANR	4856780	Argument	plist		4856765	1					
ANR	4856781	Identifier	plist		4856765	0					
ANR	4856782	IfStatement	if ( code >= 0 )		4856765	1					
ANR	4856783	Condition	code >= 0	625:8:19024:19032	4856765	0	True				
ANR	4856784	RelationalExpression	code >= 0		4856765	0		>=			
ANR	4856785	Identifier	code		4856765	0					
ANR	4856786	PrimaryExpression	0		4856765	1					
ANR	4856787	ExpressionStatement	x_cmyk_set_procs ( dev )	626:8:19043:19064	4856765	1	True				
ANR	4856788	CallExpression	x_cmyk_set_procs ( dev )		4856765	0					
ANR	4856789	Callee	x_cmyk_set_procs		4856765	0					
ANR	4856790	Identifier	x_cmyk_set_procs		4856765	0					
ANR	4856791	ArgumentList	dev		4856765	1					
ANR	4856792	Argument	dev		4856765	0					
ANR	4856793	Identifier	dev		4856765	0					
ANR	4856794	ReturnStatement	return code ;	627:4:19070:19081	4856765	2	True				
ANR	4856795	Identifier	code		4856765	0					
ANR	4856796	ReturnType	static int		4856765	1					
ANR	4856797	Identifier	x_cmyk_put_params		4856765	2					
ANR	4856798	ParameterList	"gx_device * dev , gs_param_list * plist"		4856765	3					
ANR	4856799	Parameter	gx_device * dev	621:18:18927:18941	4856765	0	True				
ANR	4856800	ParameterType	gx_device *		4856765	0					
ANR	4856801	Identifier	dev		4856765	1					
ANR	4856802	Parameter	gs_param_list * plist	621:35:18944:18964	4856765	1	True				
ANR	4856803	ParameterType	gs_param_list *		4856765	0					
ANR	4856804	Identifier	plist		4856765	1					
ANR	4856805	CFGEntryNode	ENTRY		4856765		True				
ANR	4856806	CFGExitNode	EXIT		4856765		True				
ANR	4856807	Symbol	plist		4856765						
ANR	4856808	Symbol	code		4856765						
ANR	4856809	Symbol	dev		4856765						
ANR	4856810	Symbol	x_wrap_put_params		4856765						
ANR	4856811	Function	x_cmyk_map_cmyk_color	630:0:19086:19579							
ANR	4856812	FunctionDef	"x_cmyk_map_cmyk_color (gx_device * dev , const gx_color_value cv [ ])"		4856811	0					
ANR	4856813	CompoundStatement		632:0:19174:19579	4856811	0					
ANR	4856814	IdentifierDeclStatement	int shift = dev -> color_info . depth >> 2 ;	633:4:19180:19218	4856811	0	True				
ANR	4856815	IdentifierDecl	shift = dev -> color_info . depth >> 2		4856811	0					
ANR	4856816	IdentifierDeclType	int		4856811	0					
ANR	4856817	Identifier	shift		4856811	1					
ANR	4856818	AssignmentExpression	shift = dev -> color_info . depth >> 2		4856811	2		=			
ANR	4856819	Identifier	shift		4856811	0					
ANR	4856820	ShiftExpression	dev -> color_info . depth >> 2		4856811	1		>>			
ANR	4856821	MemberAccess	dev -> color_info . depth		4856811	0					
ANR	4856822	PtrMemberAccess	dev -> color_info		4856811	0					
ANR	4856823	Identifier	dev		4856811	0					
ANR	4856824	Identifier	color_info		4856811	1					
ANR	4856825	Identifier	depth		4856811	1					
ANR	4856826	PrimaryExpression	2		4856811	1					
ANR	4856827	IdentifierDeclStatement	gx_color_index pixel ;	634:4:19224:19244	4856811	1	True				
ANR	4856828	IdentifierDecl	pixel		4856811	0					
ANR	4856829	IdentifierDeclType	gx_color_index		4856811	0					
ANR	4856830	Identifier	pixel		4856811	1					
ANR	4856831	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	635:4:19250:19275	4856811	2	True				
ANR	4856832	IdentifierDecl	c		4856811	0					
ANR	4856833	IdentifierDeclType	gx_color_value		4856811	0					
ANR	4856834	Identifier	c		4856811	1					
ANR	4856835	IdentifierDecl	m		4856811	1					
ANR	4856836	IdentifierDeclType	gx_color_value		4856811	0					
ANR	4856837	Identifier	m		4856811	1					
ANR	4856838	IdentifierDecl	y		4856811	2					
ANR	4856839	IdentifierDeclType	gx_color_value		4856811	0					
ANR	4856840	Identifier	y		4856811	1					
ANR	4856841	IdentifierDecl	k		4856811	3					
ANR	4856842	IdentifierDeclType	gx_color_value		4856811	0					
ANR	4856843	Identifier	k		4856811	1					
ANR	4856844	ExpressionStatement	c = cv [ 0 ]	636:4:19281:19290	4856811	3	True				
ANR	4856845	AssignmentExpression	c = cv [ 0 ]		4856811	0		=			
ANR	4856846	Identifier	c		4856811	0					
ANR	4856847	ArrayIndexing	cv [ 0 ]		4856811	1					
ANR	4856848	Identifier	cv		4856811	0					
ANR	4856849	PrimaryExpression	0		4856811	1					
ANR	4856850	ExpressionStatement	m = cv [ 1 ]	636:15:19292:19301	4856811	4	True				
ANR	4856851	AssignmentExpression	m = cv [ 1 ]		4856811	0		=			
ANR	4856852	Identifier	m		4856811	0					
ANR	4856853	ArrayIndexing	cv [ 1 ]		4856811	1					
ANR	4856854	Identifier	cv		4856811	0					
ANR	4856855	PrimaryExpression	1		4856811	1					
ANR	4856856	ExpressionStatement	y = cv [ 2 ]	636:26:19303:19312	4856811	5	True				
ANR	4856857	AssignmentExpression	y = cv [ 2 ]		4856811	0		=			
ANR	4856858	Identifier	y		4856811	0					
ANR	4856859	ArrayIndexing	cv [ 2 ]		4856811	1					
ANR	4856860	Identifier	cv		4856811	0					
ANR	4856861	PrimaryExpression	2		4856811	1					
ANR	4856862	ExpressionStatement	k = cv [ 3 ]	636:37:19314:19323	4856811	6	True				
ANR	4856863	AssignmentExpression	k = cv [ 3 ]		4856811	0		=			
ANR	4856864	Identifier	k		4856811	0					
ANR	4856865	ArrayIndexing	cv [ 3 ]		4856811	1					
ANR	4856866	Identifier	cv		4856811	0					
ANR	4856867	PrimaryExpression	3		4856811	1					
ANR	4856868	ExpressionStatement	pixel = c >> ( gx_color_value_bits - shift )	637:4:19329:19371	4856811	7	True				
ANR	4856869	AssignmentExpression	pixel = c >> ( gx_color_value_bits - shift )		4856811	0		=			
ANR	4856870	Identifier	pixel		4856811	0					
ANR	4856871	ShiftExpression	c >> ( gx_color_value_bits - shift )		4856811	1		>>			
ANR	4856872	Identifier	c		4856811	0					
ANR	4856873	AdditiveExpression	gx_color_value_bits - shift		4856811	1		-			
ANR	4856874	Identifier	gx_color_value_bits		4856811	0					
ANR	4856875	Identifier	shift		4856811	1					
ANR	4856876	ExpressionStatement	pixel = ( pixel << shift ) | ( m >> ( gx_color_value_bits - shift ) )	638:4:19377:19440	4856811	8	True				
ANR	4856877	AssignmentExpression	pixel = ( pixel << shift ) | ( m >> ( gx_color_value_bits - shift ) )		4856811	0		=			
ANR	4856878	Identifier	pixel		4856811	0					
ANR	4856879	InclusiveOrExpression	( pixel << shift ) | ( m >> ( gx_color_value_bits - shift ) )		4856811	1		|			
ANR	4856880	ShiftExpression	pixel << shift		4856811	0		<<			
ANR	4856881	Identifier	pixel		4856811	0					
ANR	4856882	Identifier	shift		4856811	1					
ANR	4856883	ShiftExpression	m >> ( gx_color_value_bits - shift )		4856811	1		>>			
ANR	4856884	Identifier	m		4856811	0					
ANR	4856885	AdditiveExpression	gx_color_value_bits - shift		4856811	1		-			
ANR	4856886	Identifier	gx_color_value_bits		4856811	0					
ANR	4856887	Identifier	shift		4856811	1					
ANR	4856888	ExpressionStatement	pixel = ( pixel << shift ) | ( y >> ( gx_color_value_bits - shift ) )	639:4:19446:19509	4856811	9	True				
ANR	4856889	AssignmentExpression	pixel = ( pixel << shift ) | ( y >> ( gx_color_value_bits - shift ) )		4856811	0		=			
ANR	4856890	Identifier	pixel		4856811	0					
ANR	4856891	InclusiveOrExpression	( pixel << shift ) | ( y >> ( gx_color_value_bits - shift ) )		4856811	1		|			
ANR	4856892	ShiftExpression	pixel << shift		4856811	0		<<			
ANR	4856893	Identifier	pixel		4856811	0					
ANR	4856894	Identifier	shift		4856811	1					
ANR	4856895	ShiftExpression	y >> ( gx_color_value_bits - shift )		4856811	1		>>			
ANR	4856896	Identifier	y		4856811	0					
ANR	4856897	AdditiveExpression	gx_color_value_bits - shift		4856811	1		-			
ANR	4856898	Identifier	gx_color_value_bits		4856811	0					
ANR	4856899	Identifier	shift		4856811	1					
ANR	4856900	ReturnStatement	return ( pixel << shift ) | ( k >> ( gx_color_value_bits - shift ) ) ;	640:4:19515:19577	4856811	10	True				
ANR	4856901	InclusiveOrExpression	( pixel << shift ) | ( k >> ( gx_color_value_bits - shift ) )		4856811	0		|			
ANR	4856902	ShiftExpression	pixel << shift		4856811	0		<<			
ANR	4856903	Identifier	pixel		4856811	0					
ANR	4856904	Identifier	shift		4856811	1					
ANR	4856905	ShiftExpression	k >> ( gx_color_value_bits - shift )		4856811	1		>>			
ANR	4856906	Identifier	k		4856811	0					
ANR	4856907	AdditiveExpression	gx_color_value_bits - shift		4856811	1		-			
ANR	4856908	Identifier	gx_color_value_bits		4856811	0					
ANR	4856909	Identifier	shift		4856811	1					
ANR	4856910	ReturnType	static gx_color_index		4856811	1					
ANR	4856911	Identifier	x_cmyk_map_cmyk_color		4856811	2					
ANR	4856912	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		4856811	3					
ANR	4856913	Parameter	gx_device * dev	631:22:19130:19144	4856811	0	True				
ANR	4856914	ParameterType	gx_device *		4856811	0					
ANR	4856915	Identifier	dev		4856811	1					
ANR	4856916	Parameter	const gx_color_value cv [ ]	631:39:19147:19171	4856811	1	True				
ANR	4856917	ParameterType	const gx_color_value [ ]		4856811	0					
ANR	4856918	Identifier	cv		4856811	1					
ANR	4856919	CFGEntryNode	ENTRY		4856811		True				
ANR	4856920	CFGExitNode	EXIT		4856811		True				
ANR	4856921	Symbol	* dev		4856811						
ANR	4856922	Symbol	c		4856811						
ANR	4856923	Symbol	shift		4856811						
ANR	4856924	Symbol	k		4856811						
ANR	4856925	Symbol	dev -> color_info		4856811						
ANR	4856926	Symbol	dev -> color_info . depth		4856811						
ANR	4856927	Symbol	m		4856811						
ANR	4856928	Symbol	cv		4856811						
ANR	4856929	Symbol	dev		4856811						
ANR	4856930	Symbol	y		4856811						
ANR	4856931	Symbol	* cv		4856811						
ANR	4856932	Symbol	pixel		4856811						
ANR	4856933	Symbol	gx_color_value_bits		4856811						
ANR	4856934	DeclStmt									
ANR	4856935	Decl							const gx_device_procs	const gx_device_procs	x_mono_procs
ANR	4856936	DeclStmt									
ANR	4856937	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11mono_device
ANR	4856938	Function	x_mono_alt_map_color	685:0:20883:21080							
ANR	4856939	FunctionDef	"x_mono_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		4856938	0					
ANR	4856940	CompoundStatement		688:0:20998:21080	4856938	0					
ANR	4856941	ExpressionStatement	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = ( color ? 0 : gx_max_color_value )	689:4:21004:21063	4856938	0	True				
ANR	4856942	AssignmentExpression	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = ( color ? 0 : gx_max_color_value )		4856938	0		=			
ANR	4856943	ArrayIndexing	rgb [ 0 ]		4856938	0					
ANR	4856944	Identifier	rgb		4856938	0					
ANR	4856945	PrimaryExpression	0		4856938	1					
ANR	4856946	AssignmentExpression	rgb [ 1 ] = rgb [ 2 ] = ( color ? 0 : gx_max_color_value )		4856938	1		=			
ANR	4856947	ArrayIndexing	rgb [ 1 ]		4856938	0					
ANR	4856948	Identifier	rgb		4856938	0					
ANR	4856949	PrimaryExpression	1		4856938	1					
ANR	4856950	AssignmentExpression	rgb [ 2 ] = ( color ? 0 : gx_max_color_value )		4856938	1		=			
ANR	4856951	ArrayIndexing	rgb [ 2 ]		4856938	0					
ANR	4856952	Identifier	rgb		4856938	0					
ANR	4856953	PrimaryExpression	2		4856938	1					
ANR	4856954	ConditionalExpression	color ? 0 : gx_max_color_value		4856938	1					
ANR	4856955	Condition	color		4856938	0					
ANR	4856956	Identifier	color		4856938	0					
ANR	4856957	PrimaryExpression	0		4856938	1					
ANR	4856958	Identifier	gx_max_color_value		4856938	2					
ANR	4856959	ReturnStatement	return - 1 ;	690:4:21069:21078	4856938	1	True				
ANR	4856960	UnaryOperationExpression	- 1		4856938	0					
ANR	4856961	UnaryOperator	-		4856938	0					
ANR	4856962	PrimaryExpression	1		4856938	1					
ANR	4856963	ReturnType	static int		4856938	1					
ANR	4856964	Identifier	x_mono_alt_map_color		4856938	2					
ANR	4856965	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		4856938	3					
ANR	4856966	Parameter	gx_device * dev	686:21:20915:20929	4856938	0	True				
ANR	4856967	ParameterType	gx_device *		4856938	0					
ANR	4856968	Identifier	dev		4856938	1					
ANR	4856969	Parameter	gx_color_index color	686:38:20932:20951	4856938	1	True				
ANR	4856970	ParameterType	gx_color_index		4856938	0					
ANR	4856971	Identifier	color		4856938	1					
ANR	4856972	Parameter	gx_color_value rgb [ 3 ]	687:21:20975:20995	4856938	2	True				
ANR	4856973	ParameterType	gx_color_value [ 3 ]		4856938	0					
ANR	4856974	Identifier	rgb		4856938	1					
ANR	4856975	CFGEntryNode	ENTRY		4856938		True				
ANR	4856976	CFGExitNode	EXIT		4856938		True				
ANR	4856977	Symbol	dev		4856938						
ANR	4856978	Symbol	color		4856938						
ANR	4856979	Symbol	gx_max_color_value		4856938						
ANR	4856980	Symbol	* rgb		4856938						
ANR	4856981	Symbol	rgb		4856938						
ANR	4856982	DeclStmt									
ANR	4856983	Decl							const gx_device_procs	const gx_device_procs	x_gray_procs
ANR	4856984	DeclStmt									
ANR	4856985	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11gray2_device
ANR	4856986	DeclStmt									
ANR	4856987	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11gray4_device
ANR	4856988	Function	x_gray_alt_map_color	744:0:22719:22945							
ANR	4856989	FunctionDef	"x_gray_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		4856988	0					
ANR	4856990	CompoundStatement		747:0:22834:22945	4856988	0					
ANR	4856991	ExpressionStatement	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray	748:4:22840:22928	4856988	0	True				
ANR	4856992	AssignmentExpression	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray		4856988	0		=			
ANR	4856993	ArrayIndexing	rgb [ 0 ]		4856988	0					
ANR	4856994	Identifier	rgb		4856988	0					
ANR	4856995	PrimaryExpression	0		4856988	1					
ANR	4856996	AssignmentExpression	rgb [ 1 ] = rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray		4856988	1		=			
ANR	4856997	ArrayIndexing	rgb [ 1 ]		4856988	0					
ANR	4856998	Identifier	rgb		4856988	0					
ANR	4856999	PrimaryExpression	1		4856988	1					
ANR	4857000	AssignmentExpression	rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray		4856988	1		=			
ANR	4857001	ArrayIndexing	rgb [ 2 ]		4856988	0					
ANR	4857002	Identifier	rgb		4856988	0					
ANR	4857003	PrimaryExpression	2		4856988	1					
ANR	4857004	MultiplicativeExpression	color * gx_max_color_value / dev -> color_info . max_gray		4856988	1		*			
ANR	4857005	Identifier	color		4856988	0					
ANR	4857006	MultiplicativeExpression	gx_max_color_value / dev -> color_info . max_gray		4856988	1		/			
ANR	4857007	Identifier	gx_max_color_value		4856988	0					
ANR	4857008	MemberAccess	dev -> color_info . max_gray		4856988	1					
ANR	4857009	PtrMemberAccess	dev -> color_info		4856988	0					
ANR	4857010	Identifier	dev		4856988	0					
ANR	4857011	Identifier	color_info		4856988	1					
ANR	4857012	Identifier	max_gray		4856988	1					
ANR	4857013	ReturnStatement	return - 1 ;	750:4:22934:22943	4856988	1	True				
ANR	4857014	UnaryOperationExpression	- 1		4856988	0					
ANR	4857015	UnaryOperator	-		4856988	0					
ANR	4857016	PrimaryExpression	1		4856988	1					
ANR	4857017	ReturnType	static int		4856988	1					
ANR	4857018	Identifier	x_gray_alt_map_color		4856988	2					
ANR	4857019	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		4856988	3					
ANR	4857020	Parameter	gx_device * dev	745:21:22751:22765	4856988	0	True				
ANR	4857021	ParameterType	gx_device *		4856988	0					
ANR	4857022	Identifier	dev		4856988	1					
ANR	4857023	Parameter	gx_color_index color	745:38:22768:22787	4856988	1	True				
ANR	4857024	ParameterType	gx_color_index		4856988	0					
ANR	4857025	Identifier	color		4856988	1					
ANR	4857026	Parameter	gx_color_value rgb [ 3 ]	746:21:22811:22831	4856988	2	True				
ANR	4857027	ParameterType	gx_color_value [ 3 ]		4856988	0					
ANR	4857028	Identifier	rgb		4856988	1					
ANR	4857029	CFGEntryNode	ENTRY		4856988		True				
ANR	4857030	CFGExitNode	EXIT		4856988		True				
ANR	4857031	Symbol	* dev		4856988						
ANR	4857032	Symbol	dev		4856988						
ANR	4857033	Symbol	color		4856988						
ANR	4857034	Symbol	gx_max_color_value		4856988						
ANR	4857035	Symbol	* rgb		4856988						
ANR	4857036	Symbol	rgb		4856988						
ANR	4857037	Symbol	dev -> color_info		4856988						
ANR	4857038	Symbol	dev -> color_info . max_gray		4856988						
ANR	4857039	Function	x_alpha_map_rgb_alpha_color	757:0:23061:23512							
ANR	4857040	FunctionDef	"x_alpha_map_rgb_alpha_color (gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha)"		4857039	0					
ANR	4857041	CompoundStatement		760:0:23205:23512	4857039	0					
ANR	4857042	IdentifierDeclStatement	gx_color_index color ;	761:4:23211:23231	4857039	0	True				
ANR	4857043	IdentifierDecl	color		4857039	0					
ANR	4857044	IdentifierDeclType	gx_color_index		4857039	0					
ANR	4857045	Identifier	color		4857039	1					
ANR	4857046	IdentifierDeclStatement	gx_color_value cv [ 3 ] ;	762:4:23237:23257	4857039	1	True				
ANR	4857047	IdentifierDecl	cv [ 3 ]		4857039	0					
ANR	4857048	IdentifierDeclType	gx_color_value [ 3 ]		4857039	0					
ANR	4857049	Identifier	cv		4857039	1					
ANR	4857050	PrimaryExpression	3		4857039	2					
ANR	4857051	IdentifierDeclStatement	byte abyte = alpha >> ( gx_color_value_bits - 8 ) ;	763:4:23263:23310	4857039	2	True				
ANR	4857052	IdentifierDecl	abyte = alpha >> ( gx_color_value_bits - 8 )		4857039	0					
ANR	4857053	IdentifierDeclType	byte		4857039	0					
ANR	4857054	Identifier	abyte		4857039	1					
ANR	4857055	AssignmentExpression	abyte = alpha >> ( gx_color_value_bits - 8 )		4857039	2		=			
ANR	4857056	Identifier	abyte		4857039	0					
ANR	4857057	ShiftExpression	alpha >> ( gx_color_value_bits - 8 )		4857039	1		>>			
ANR	4857058	Identifier	alpha		4857039	0					
ANR	4857059	AdditiveExpression	gx_color_value_bits - 8		4857039	1		-			
ANR	4857060	Identifier	gx_color_value_bits		4857039	0					
ANR	4857061	PrimaryExpression	8		4857039	1					
ANR	4857062	ExpressionStatement	cv [ 0 ] = r	764:4:23316:23325	4857039	3	True				
ANR	4857063	AssignmentExpression	cv [ 0 ] = r		4857039	0		=			
ANR	4857064	ArrayIndexing	cv [ 0 ]		4857039	0					
ANR	4857065	Identifier	cv		4857039	0					
ANR	4857066	PrimaryExpression	0		4857039	1					
ANR	4857067	Identifier	r		4857039	1					
ANR	4857068	ExpressionStatement	cv [ 1 ] = g	764:15:23327:23336	4857039	4	True				
ANR	4857069	AssignmentExpression	cv [ 1 ] = g		4857039	0		=			
ANR	4857070	ArrayIndexing	cv [ 1 ]		4857039	0					
ANR	4857071	Identifier	cv		4857039	0					
ANR	4857072	PrimaryExpression	1		4857039	1					
ANR	4857073	Identifier	g		4857039	1					
ANR	4857074	ExpressionStatement	cv [ 2 ] = b	764:26:23338:23347	4857039	5	True				
ANR	4857075	AssignmentExpression	cv [ 2 ] = b		4857039	0		=			
ANR	4857076	ArrayIndexing	cv [ 2 ]		4857039	0					
ANR	4857077	Identifier	cv		4857039	0					
ANR	4857078	PrimaryExpression	2		4857039	1					
ANR	4857079	Identifier	b		4857039	1					
ANR	4857080	ExpressionStatement	"color = gx_forward_map_rgb_color ( dev , cv )"	765:4:23353:23394	4857039	6	True				
ANR	4857081	AssignmentExpression	"color = gx_forward_map_rgb_color ( dev , cv )"		4857039	0		=			
ANR	4857082	Identifier	color		4857039	0					
ANR	4857083	CallExpression	"gx_forward_map_rgb_color ( dev , cv )"		4857039	1					
ANR	4857084	Callee	gx_forward_map_rgb_color		4857039	0					
ANR	4857085	Identifier	gx_forward_map_rgb_color		4857039	0					
ANR	4857086	ArgumentList	dev		4857039	1					
ANR	4857087	Argument	dev		4857039	0					
ANR	4857088	Identifier	dev		4857039	0					
ANR	4857089	Argument	cv		4857039	1					
ANR	4857090	Identifier	cv		4857039	0					
ANR	4857091	ReturnStatement	return ( abyte == 0 ? ( gx_color_index ) 0xff << 24 : ( ( gx_color_index ) ( abyte ^ 0xff ) << 24 ) + color ) ;	766:4:23400:23510	4857039	7	True				
ANR	4857092	ConditionalExpression	abyte == 0 ? ( gx_color_index ) 0xff << 24 : ( ( gx_color_index ) ( abyte ^ 0xff ) << 24 ) + color		4857039	0					
ANR	4857093	Condition	abyte == 0		4857039	0					
ANR	4857094	EqualityExpression	abyte == 0		4857039	0		==			
ANR	4857095	Identifier	abyte		4857039	0					
ANR	4857096	PrimaryExpression	0		4857039	1					
ANR	4857097	ShiftExpression	( gx_color_index ) 0xff << 24		4857039	1		<<			
ANR	4857098	CastExpression	( gx_color_index ) 0xff		4857039	0					
ANR	4857099	CastTarget	gx_color_index		4857039	0					
ANR	4857100	PrimaryExpression	0xff		4857039	1					
ANR	4857101	PrimaryExpression	24		4857039	1					
ANR	4857102	AdditiveExpression	( ( gx_color_index ) ( abyte ^ 0xff ) << 24 ) + color		4857039	2		+			
ANR	4857103	ShiftExpression	( gx_color_index ) ( abyte ^ 0xff ) << 24		4857039	0		<<			
ANR	4857104	CastExpression	( gx_color_index ) ( abyte ^ 0xff )		4857039	0					
ANR	4857105	CastTarget	gx_color_index		4857039	0					
ANR	4857106	ExclusiveOrExpression	abyte ^ 0xff		4857039	1		^			
ANR	4857107	Identifier	abyte		4857039	0					
ANR	4857108	PrimaryExpression	0xff		4857039	1					
ANR	4857109	PrimaryExpression	24		4857039	1					
ANR	4857110	Identifier	color		4857039	1					
ANR	4857111	ReturnType	static gx_color_index		4857039	1					
ANR	4857112	Identifier	x_alpha_map_rgb_alpha_color		4857039	2					
ANR	4857113	ParameterList	"gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha"		4857039	3					
ANR	4857114	Parameter	gx_device * dev	758:28:23111:23125	4857039	0	True				
ANR	4857115	ParameterType	gx_device *		4857039	0					
ANR	4857116	Identifier	dev		4857039	1					
ANR	4857117	Parameter	gx_color_value r	759:1:23129:23144	4857039	1	True				
ANR	4857118	ParameterType	gx_color_value		4857039	0					
ANR	4857119	Identifier	r		4857039	1					
ANR	4857120	Parameter	gx_color_value g	759:19:23147:23162	4857039	2	True				
ANR	4857121	ParameterType	gx_color_value		4857039	0					
ANR	4857122	Identifier	g		4857039	1					
ANR	4857123	Parameter	gx_color_value b	759:37:23165:23180	4857039	3	True				
ANR	4857124	ParameterType	gx_color_value		4857039	0					
ANR	4857125	Identifier	b		4857039	1					
ANR	4857126	Parameter	gx_color_value alpha	759:55:23183:23202	4857039	4	True				
ANR	4857127	ParameterType	gx_color_value		4857039	0					
ANR	4857128	Identifier	alpha		4857039	1					
ANR	4857129	CFGEntryNode	ENTRY		4857039		True				
ANR	4857130	CFGExitNode	EXIT		4857039		True				
ANR	4857131	Symbol	r		4857039						
ANR	4857132	Symbol	b		4857039						
ANR	4857133	Symbol	gx_forward_map_rgb_color		4857039						
ANR	4857134	Symbol	cv		4857039						
ANR	4857135	Symbol	dev		4857039						
ANR	4857136	Symbol	color		4857039						
ANR	4857137	Symbol	g		4857039						
ANR	4857138	Symbol	alpha		4857039						
ANR	4857139	Symbol	* cv		4857039						
ANR	4857140	Symbol	abyte		4857039						
ANR	4857141	Symbol	gx_color_value_bits		4857039						
ANR	4857142	DeclStmt									
ANR	4857143	Decl							const gx_device_procs	const gx_device_procs	x_rg16x_procs
ANR	4857144	DeclStmt									
ANR	4857145	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11rg16x_device
ANR	4857146	DeclStmt									
ANR	4857147	Decl							const gx_device_procs	const gx_device_procs	x_rg32x_procs
ANR	4857148	DeclStmt									
ANR	4857149	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11rg32x_device
ANR	4857150	Function	x_rg16x_map_rgb_color	829:0:25499:25842							
ANR	4857151	FunctionDef	"x_rg16x_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		4857150	0					
ANR	4857152	CompoundStatement		831:0:25587:25842	4857150	0					
ANR	4857153	IdentifierDeclStatement	"gx_color_value r , g , b ;"	833:4:25635:25657	4857150	0	True				
ANR	4857154	IdentifierDecl	r		4857150	0					
ANR	4857155	IdentifierDeclType	gx_color_value		4857150	0					
ANR	4857156	Identifier	r		4857150	1					
ANR	4857157	IdentifierDecl	g		4857150	1					
ANR	4857158	IdentifierDeclType	gx_color_value		4857150	0					
ANR	4857159	Identifier	g		4857150	1					
ANR	4857160	IdentifierDecl	b		4857150	2					
ANR	4857161	IdentifierDeclType	gx_color_value		4857150	0					
ANR	4857162	Identifier	b		4857150	1					
ANR	4857163	ExpressionStatement	r = cv [ 0 ]	834:4:25663:25672	4857150	1	True				
ANR	4857164	AssignmentExpression	r = cv [ 0 ]		4857150	0		=			
ANR	4857165	Identifier	r		4857150	0					
ANR	4857166	ArrayIndexing	cv [ 0 ]		4857150	1					
ANR	4857167	Identifier	cv		4857150	0					
ANR	4857168	PrimaryExpression	0		4857150	1					
ANR	4857169	ExpressionStatement	g = cv [ 1 ]	834:15:25674:25683	4857150	2	True				
ANR	4857170	AssignmentExpression	g = cv [ 1 ]		4857150	0		=			
ANR	4857171	Identifier	g		4857150	0					
ANR	4857172	ArrayIndexing	cv [ 1 ]		4857150	1					
ANR	4857173	Identifier	cv		4857150	0					
ANR	4857174	PrimaryExpression	1		4857150	1					
ANR	4857175	ExpressionStatement	b = cv [ 2 ]	834:26:25685:25694	4857150	3	True				
ANR	4857176	AssignmentExpression	b = cv [ 2 ]		4857150	0		=			
ANR	4857177	Identifier	b		4857150	0					
ANR	4857178	ArrayIndexing	cv [ 2 ]		4857150	1					
ANR	4857179	Identifier	cv		4857150	0					
ANR	4857180	PrimaryExpression	2		4857150	1					
ANR	4857181	ReturnStatement	return ( r >> ( gx_color_value_bits - 6 ) ) + ( ( g >> ( gx_color_value_bits - 5 ) ) << 11 ) + ( ( b >> ( gx_color_value_bits - 5 ) ) << 6 ) ;	835:4:25700:25840	4857150	4	True				
ANR	4857182	AdditiveExpression	( r >> ( gx_color_value_bits - 6 ) ) + ( ( g >> ( gx_color_value_bits - 5 ) ) << 11 ) + ( ( b >> ( gx_color_value_bits - 5 ) ) << 6 )		4857150	0		+			
ANR	4857183	ShiftExpression	r >> ( gx_color_value_bits - 6 )		4857150	0		>>			
ANR	4857184	Identifier	r		4857150	0					
ANR	4857185	AdditiveExpression	gx_color_value_bits - 6		4857150	1		-			
ANR	4857186	Identifier	gx_color_value_bits		4857150	0					
ANR	4857187	PrimaryExpression	6		4857150	1					
ANR	4857188	AdditiveExpression	( ( g >> ( gx_color_value_bits - 5 ) ) << 11 ) + ( ( b >> ( gx_color_value_bits - 5 ) ) << 6 )		4857150	1		+			
ANR	4857189	ShiftExpression	( g >> ( gx_color_value_bits - 5 ) ) << 11		4857150	0		<<			
ANR	4857190	ShiftExpression	g >> ( gx_color_value_bits - 5 )		4857150	0		>>			
ANR	4857191	Identifier	g		4857150	0					
ANR	4857192	AdditiveExpression	gx_color_value_bits - 5		4857150	1		-			
ANR	4857193	Identifier	gx_color_value_bits		4857150	0					
ANR	4857194	PrimaryExpression	5		4857150	1					
ANR	4857195	PrimaryExpression	11		4857150	1					
ANR	4857196	ShiftExpression	( b >> ( gx_color_value_bits - 5 ) ) << 6		4857150	1		<<			
ANR	4857197	ShiftExpression	b >> ( gx_color_value_bits - 5 )		4857150	0		>>			
ANR	4857198	Identifier	b		4857150	0					
ANR	4857199	AdditiveExpression	gx_color_value_bits - 5		4857150	1		-			
ANR	4857200	Identifier	gx_color_value_bits		4857150	0					
ANR	4857201	PrimaryExpression	5		4857150	1					
ANR	4857202	PrimaryExpression	6		4857150	1					
ANR	4857203	ReturnType	static gx_color_index		4857150	1					
ANR	4857204	Identifier	x_rg16x_map_rgb_color		4857150	2					
ANR	4857205	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		4857150	3					
ANR	4857206	Parameter	gx_device * dev	830:22:25543:25557	4857150	0	True				
ANR	4857207	ParameterType	gx_device *		4857150	0					
ANR	4857208	Identifier	dev		4857150	1					
ANR	4857209	Parameter	const gx_color_value cv [ ]	830:39:25560:25584	4857150	1	True				
ANR	4857210	ParameterType	const gx_color_value [ ]		4857150	0					
ANR	4857211	Identifier	cv		4857150	1					
ANR	4857212	CFGEntryNode	ENTRY		4857150		True				
ANR	4857213	CFGExitNode	EXIT		4857150		True				
ANR	4857214	Symbol	b		4857150						
ANR	4857215	Symbol	r		4857150						
ANR	4857216	Symbol	cv		4857150						
ANR	4857217	Symbol	dev		4857150						
ANR	4857218	Symbol	g		4857150						
ANR	4857219	Symbol	* cv		4857150						
ANR	4857220	Symbol	gx_color_value_bits		4857150						
ANR	4857221	Function	x_rg32x_map_rgb_color	839:0:25844:26226							
ANR	4857222	FunctionDef	"x_rg32x_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		4857221	0					
ANR	4857223	CompoundStatement		841:0:25932:26226	4857221	0					
ANR	4857224	IdentifierDeclStatement	"gx_color_value r , g , b ;"	843:4:25983:26005	4857221	0	True				
ANR	4857225	IdentifierDecl	r		4857221	0					
ANR	4857226	IdentifierDeclType	gx_color_value		4857221	0					
ANR	4857227	Identifier	r		4857221	1					
ANR	4857228	IdentifierDecl	g		4857221	1					
ANR	4857229	IdentifierDeclType	gx_color_value		4857221	0					
ANR	4857230	Identifier	g		4857221	1					
ANR	4857231	IdentifierDecl	b		4857221	2					
ANR	4857232	IdentifierDeclType	gx_color_value		4857221	0					
ANR	4857233	Identifier	b		4857221	1					
ANR	4857234	ExpressionStatement	r = cv [ 0 ]	844:4:26011:26020	4857221	1	True				
ANR	4857235	AssignmentExpression	r = cv [ 0 ]		4857221	0		=			
ANR	4857236	Identifier	r		4857221	0					
ANR	4857237	ArrayIndexing	cv [ 0 ]		4857221	1					
ANR	4857238	Identifier	cv		4857221	0					
ANR	4857239	PrimaryExpression	0		4857221	1					
ANR	4857240	ExpressionStatement	g = cv [ 1 ]	844:15:26022:26031	4857221	2	True				
ANR	4857241	AssignmentExpression	g = cv [ 1 ]		4857221	0		=			
ANR	4857242	Identifier	g		4857221	0					
ANR	4857243	ArrayIndexing	cv [ 1 ]		4857221	1					
ANR	4857244	Identifier	cv		4857221	0					
ANR	4857245	PrimaryExpression	1		4857221	1					
ANR	4857246	ExpressionStatement	b = cv [ 2 ]	844:26:26033:26042	4857221	3	True				
ANR	4857247	AssignmentExpression	b = cv [ 2 ]		4857221	0		=			
ANR	4857248	Identifier	b		4857221	0					
ANR	4857249	ArrayIndexing	cv [ 2 ]		4857221	1					
ANR	4857250	Identifier	cv		4857221	0					
ANR	4857251	PrimaryExpression	2		4857221	1					
ANR	4857252	ReturnStatement	return ( r >> ( gx_color_value_bits - 11 ) ) + ( ( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21 ) + ( ( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11 ) ;	845:4:26048:26224	4857221	4	True				
ANR	4857253	AdditiveExpression	( r >> ( gx_color_value_bits - 11 ) ) + ( ( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21 ) + ( ( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11 )		4857221	0		+			
ANR	4857254	ShiftExpression	r >> ( gx_color_value_bits - 11 )		4857221	0		>>			
ANR	4857255	Identifier	r		4857221	0					
ANR	4857256	AdditiveExpression	gx_color_value_bits - 11		4857221	1		-			
ANR	4857257	Identifier	gx_color_value_bits		4857221	0					
ANR	4857258	PrimaryExpression	11		4857221	1					
ANR	4857259	AdditiveExpression	( ( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21 ) + ( ( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11 )		4857221	1		+			
ANR	4857260	ShiftExpression	( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21		4857221	0		<<			
ANR	4857261	CastExpression	( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) )		4857221	0					
ANR	4857262	CastTarget	gx_color_index		4857221	0					
ANR	4857263	ShiftExpression	g >> ( gx_color_value_bits - 11 )		4857221	1		>>			
ANR	4857264	Identifier	g		4857221	0					
ANR	4857265	AdditiveExpression	gx_color_value_bits - 11		4857221	1		-			
ANR	4857266	Identifier	gx_color_value_bits		4857221	0					
ANR	4857267	PrimaryExpression	11		4857221	1					
ANR	4857268	PrimaryExpression	21		4857221	1					
ANR	4857269	ShiftExpression	( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11		4857221	1		<<			
ANR	4857270	CastExpression	( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) )		4857221	0					
ANR	4857271	CastTarget	gx_color_index		4857221	0					
ANR	4857272	ShiftExpression	b >> ( gx_color_value_bits - 10 )		4857221	1		>>			
ANR	4857273	Identifier	b		4857221	0					
ANR	4857274	AdditiveExpression	gx_color_value_bits - 10		4857221	1		-			
ANR	4857275	Identifier	gx_color_value_bits		4857221	0					
ANR	4857276	PrimaryExpression	10		4857221	1					
ANR	4857277	PrimaryExpression	11		4857221	1					
ANR	4857278	ReturnType	static gx_color_index		4857221	1					
ANR	4857279	Identifier	x_rg32x_map_rgb_color		4857221	2					
ANR	4857280	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		4857221	3					
ANR	4857281	Parameter	gx_device * dev	840:22:25888:25902	4857221	0	True				
ANR	4857282	ParameterType	gx_device *		4857221	0					
ANR	4857283	Identifier	dev		4857221	1					
ANR	4857284	Parameter	const gx_color_value cv [ ]	840:39:25905:25929	4857221	1	True				
ANR	4857285	ParameterType	const gx_color_value [ ]		4857221	0					
ANR	4857286	Identifier	cv		4857221	1					
ANR	4857287	CFGEntryNode	ENTRY		4857221		True				
ANR	4857288	CFGExitNode	EXIT		4857221		True				
ANR	4857289	Symbol	r		4857221						
ANR	4857290	Symbol	b		4857221						
ANR	4857291	Symbol	cv		4857221						
ANR	4857292	Symbol	dev		4857221						
ANR	4857293	Symbol	g		4857221						
ANR	4857294	Symbol	* cv		4857221						
ANR	4857295	Symbol	gx_color_value_bits		4857221						
ANR	4857296	Function	x_rg16x_alt_map_color	851:0:26260:26580							
ANR	4857297	FunctionDef	"x_rg16x_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		4857296	0					
ANR	4857298	CompoundStatement		854:0:26377:26580	4857296	0					
ANR	4857299	ExpressionStatement	rgb [ 0 ] = ( color & 0x3f ) * gx_max_color_value / 0x3f	855:4:26383:26434	4857296	0	True				
ANR	4857300	AssignmentExpression	rgb [ 0 ] = ( color & 0x3f ) * gx_max_color_value / 0x3f		4857296	0		=			
ANR	4857301	ArrayIndexing	rgb [ 0 ]		4857296	0					
ANR	4857302	Identifier	rgb		4857296	0					
ANR	4857303	PrimaryExpression	0		4857296	1					
ANR	4857304	MultiplicativeExpression	( color & 0x3f ) * gx_max_color_value / 0x3f		4857296	1		*			
ANR	4857305	BitAndExpression	color & 0x3f		4857296	0		&			
ANR	4857306	Identifier	color		4857296	0					
ANR	4857307	PrimaryExpression	0x3f		4857296	1					
ANR	4857308	MultiplicativeExpression	gx_max_color_value / 0x3f		4857296	1		/			
ANR	4857309	Identifier	gx_max_color_value		4857296	0					
ANR	4857310	PrimaryExpression	0x3f		4857296	1					
ANR	4857311	ExpressionStatement	rgb [ 1 ] = ( ( color >> 11 ) & 0x1f ) * gx_max_color_value / 0x1f	856:4:26440:26499	4857296	1	True				
ANR	4857312	AssignmentExpression	rgb [ 1 ] = ( ( color >> 11 ) & 0x1f ) * gx_max_color_value / 0x1f		4857296	0		=			
ANR	4857313	ArrayIndexing	rgb [ 1 ]		4857296	0					
ANR	4857314	Identifier	rgb		4857296	0					
ANR	4857315	PrimaryExpression	1		4857296	1					
ANR	4857316	MultiplicativeExpression	( ( color >> 11 ) & 0x1f ) * gx_max_color_value / 0x1f		4857296	1		*			
ANR	4857317	BitAndExpression	( color >> 11 ) & 0x1f		4857296	0		&			
ANR	4857318	ShiftExpression	color >> 11		4857296	0		>>			
ANR	4857319	Identifier	color		4857296	0					
ANR	4857320	PrimaryExpression	11		4857296	1					
ANR	4857321	PrimaryExpression	0x1f		4857296	1					
ANR	4857322	MultiplicativeExpression	gx_max_color_value / 0x1f		4857296	1		/			
ANR	4857323	Identifier	gx_max_color_value		4857296	0					
ANR	4857324	PrimaryExpression	0x1f		4857296	1					
ANR	4857325	ExpressionStatement	rgb [ 2 ] = ( ( color >> 6 ) & 0x1f ) * gx_max_color_value / 0x1f	857:4:26505:26563	4857296	2	True				
ANR	4857326	AssignmentExpression	rgb [ 2 ] = ( ( color >> 6 ) & 0x1f ) * gx_max_color_value / 0x1f		4857296	0		=			
ANR	4857327	ArrayIndexing	rgb [ 2 ]		4857296	0					
ANR	4857328	Identifier	rgb		4857296	0					
ANR	4857329	PrimaryExpression	2		4857296	1					
ANR	4857330	MultiplicativeExpression	( ( color >> 6 ) & 0x1f ) * gx_max_color_value / 0x1f		4857296	1		*			
ANR	4857331	BitAndExpression	( color >> 6 ) & 0x1f		4857296	0		&			
ANR	4857332	ShiftExpression	color >> 6		4857296	0		>>			
ANR	4857333	Identifier	color		4857296	0					
ANR	4857334	PrimaryExpression	6		4857296	1					
ANR	4857335	PrimaryExpression	0x1f		4857296	1					
ANR	4857336	MultiplicativeExpression	gx_max_color_value / 0x1f		4857296	1		/			
ANR	4857337	Identifier	gx_max_color_value		4857296	0					
ANR	4857338	PrimaryExpression	0x1f		4857296	1					
ANR	4857339	ReturnStatement	return - 1 ;	858:4:26569:26578	4857296	3	True				
ANR	4857340	UnaryOperationExpression	- 1		4857296	0					
ANR	4857341	UnaryOperator	-		4857296	0					
ANR	4857342	PrimaryExpression	1		4857296	1					
ANR	4857343	ReturnType	static int		4857296	1					
ANR	4857344	Identifier	x_rg16x_alt_map_color		4857296	2					
ANR	4857345	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		4857296	3					
ANR	4857346	Parameter	gx_device * dev	852:22:26293:26307	4857296	0	True				
ANR	4857347	ParameterType	gx_device *		4857296	0					
ANR	4857348	Identifier	dev		4857296	1					
ANR	4857349	Parameter	gx_color_index color	852:39:26310:26329	4857296	1	True				
ANR	4857350	ParameterType	gx_color_index		4857296	0					
ANR	4857351	Identifier	color		4857296	1					
ANR	4857352	Parameter	gx_color_value rgb [ 3 ]	853:22:26354:26374	4857296	2	True				
ANR	4857353	ParameterType	gx_color_value [ 3 ]		4857296	0					
ANR	4857354	Identifier	rgb		4857296	1					
ANR	4857355	CFGEntryNode	ENTRY		4857296		True				
ANR	4857356	CFGExitNode	EXIT		4857296		True				
ANR	4857357	Symbol	dev		4857296						
ANR	4857358	Symbol	color		4857296						
ANR	4857359	Symbol	gx_max_color_value		4857296						
ANR	4857360	Symbol	* rgb		4857296						
ANR	4857361	Symbol	rgb		4857296						
ANR	4857362	Function	x_rg32x_alt_map_color	860:0:26582:26909							
ANR	4857363	FunctionDef	"x_rg32x_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		4857362	0					
ANR	4857364	CompoundStatement		863:0:26699:26909	4857362	0					
ANR	4857365	ExpressionStatement	rgb [ 0 ] = ( color & 0x7ff ) * gx_max_color_value / 0x7ff	864:4:26705:26758	4857362	0	True				
ANR	4857366	AssignmentExpression	rgb [ 0 ] = ( color & 0x7ff ) * gx_max_color_value / 0x7ff		4857362	0		=			
ANR	4857367	ArrayIndexing	rgb [ 0 ]		4857362	0					
ANR	4857368	Identifier	rgb		4857362	0					
ANR	4857369	PrimaryExpression	0		4857362	1					
ANR	4857370	MultiplicativeExpression	( color & 0x7ff ) * gx_max_color_value / 0x7ff		4857362	1		*			
ANR	4857371	BitAndExpression	color & 0x7ff		4857362	0		&			
ANR	4857372	Identifier	color		4857362	0					
ANR	4857373	PrimaryExpression	0x7ff		4857362	1					
ANR	4857374	MultiplicativeExpression	gx_max_color_value / 0x7ff		4857362	1		/			
ANR	4857375	Identifier	gx_max_color_value		4857362	0					
ANR	4857376	PrimaryExpression	0x7ff		4857362	1					
ANR	4857377	ExpressionStatement	rgb [ 1 ] = ( ( color >> 21 ) & 0x7ff ) * gx_max_color_value / 0x7ff	865:4:26764:26825	4857362	1	True				
ANR	4857378	AssignmentExpression	rgb [ 1 ] = ( ( color >> 21 ) & 0x7ff ) * gx_max_color_value / 0x7ff		4857362	0		=			
ANR	4857379	ArrayIndexing	rgb [ 1 ]		4857362	0					
ANR	4857380	Identifier	rgb		4857362	0					
ANR	4857381	PrimaryExpression	1		4857362	1					
ANR	4857382	MultiplicativeExpression	( ( color >> 21 ) & 0x7ff ) * gx_max_color_value / 0x7ff		4857362	1		*			
ANR	4857383	BitAndExpression	( color >> 21 ) & 0x7ff		4857362	0		&			
ANR	4857384	ShiftExpression	color >> 21		4857362	0		>>			
ANR	4857385	Identifier	color		4857362	0					
ANR	4857386	PrimaryExpression	21		4857362	1					
ANR	4857387	PrimaryExpression	0x7ff		4857362	1					
ANR	4857388	MultiplicativeExpression	gx_max_color_value / 0x7ff		4857362	1		/			
ANR	4857389	Identifier	gx_max_color_value		4857362	0					
ANR	4857390	PrimaryExpression	0x7ff		4857362	1					
ANR	4857391	ExpressionStatement	rgb [ 2 ] = ( ( color >> 11 ) & 0x3ff ) * gx_max_color_value / 0x3ff	866:4:26831:26892	4857362	2	True				
ANR	4857392	AssignmentExpression	rgb [ 2 ] = ( ( color >> 11 ) & 0x3ff ) * gx_max_color_value / 0x3ff		4857362	0		=			
ANR	4857393	ArrayIndexing	rgb [ 2 ]		4857362	0					
ANR	4857394	Identifier	rgb		4857362	0					
ANR	4857395	PrimaryExpression	2		4857362	1					
ANR	4857396	MultiplicativeExpression	( ( color >> 11 ) & 0x3ff ) * gx_max_color_value / 0x3ff		4857362	1		*			
ANR	4857397	BitAndExpression	( color >> 11 ) & 0x3ff		4857362	0		&			
ANR	4857398	ShiftExpression	color >> 11		4857362	0		>>			
ANR	4857399	Identifier	color		4857362	0					
ANR	4857400	PrimaryExpression	11		4857362	1					
ANR	4857401	PrimaryExpression	0x3ff		4857362	1					
ANR	4857402	MultiplicativeExpression	gx_max_color_value / 0x3ff		4857362	1		/			
ANR	4857403	Identifier	gx_max_color_value		4857362	0					
ANR	4857404	PrimaryExpression	0x3ff		4857362	1					
ANR	4857405	ReturnStatement	return - 1 ;	867:4:26898:26907	4857362	3	True				
ANR	4857406	UnaryOperationExpression	- 1		4857362	0					
ANR	4857407	UnaryOperator	-		4857362	0					
ANR	4857408	PrimaryExpression	1		4857362	1					
ANR	4857409	ReturnType	static int		4857362	1					
ANR	4857410	Identifier	x_rg32x_alt_map_color		4857362	2					
ANR	4857411	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		4857362	3					
ANR	4857412	Parameter	gx_device * dev	861:22:26615:26629	4857362	0	True				
ANR	4857413	ParameterType	gx_device *		4857362	0					
ANR	4857414	Identifier	dev		4857362	1					
ANR	4857415	Parameter	gx_color_index color	861:39:26632:26651	4857362	1	True				
ANR	4857416	ParameterType	gx_color_index		4857362	0					
ANR	4857417	Identifier	color		4857362	1					
ANR	4857418	Parameter	gx_color_value rgb [ 3 ]	862:22:26676:26696	4857362	2	True				
ANR	4857419	ParameterType	gx_color_value [ 3 ]		4857362	0					
ANR	4857420	Identifier	rgb		4857362	1					
ANR	4857421	CFGEntryNode	ENTRY		4857362		True				
ANR	4857422	CFGExitNode	EXIT		4857362		True				
ANR	4857423	Symbol	dev		4857362						
ANR	4857424	Symbol	color		4857362						
ANR	4857425	Symbol	gx_max_color_value		4857362						
ANR	4857426	Symbol	* rgb		4857362						
ANR	4857427	Symbol	rgb		4857362						
ANR	4857428	DeclStmt									
ANR	4857429	Decl							extern void	extern void ( const gx_device * dev )	gs_lib_register_device
ANR	4857430	Function	gs_shared_init	872:0:26992:27607							
ANR	4857431	FunctionDef	gs_shared_init ()		4857430	0					
ANR	4857432	CompoundStatement		874:0:27018:27607	4857430	0					
ANR	4857433	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11_device )	875:2:27022:27079	4857430	0	True				
ANR	4857434	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11_device )		4857430	0					
ANR	4857435	Callee	gs_lib_register_device		4857430	0					
ANR	4857436	Identifier	gs_lib_register_device		4857430	0					
ANR	4857437	ArgumentList	( const gx_device * ) & gs_x11_device		4857430	1					
ANR	4857438	Argument	( const gx_device * ) & gs_x11_device		4857430	0					
ANR	4857439	CastExpression	( const gx_device * ) & gs_x11_device		4857430	0					
ANR	4857440	CastTarget	const gx_device *		4857430	0					
ANR	4857441	UnaryOperationExpression	& gs_x11_device		4857430	1					
ANR	4857442	UnaryOperator	&		4857430	0					
ANR	4857443	Identifier	gs_x11_device		4857430	1					
ANR	4857444	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11alpha_device )	876:2:27083:27145	4857430	1	True				
ANR	4857445	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11alpha_device )		4857430	0					
ANR	4857446	Callee	gs_lib_register_device		4857430	0					
ANR	4857447	Identifier	gs_lib_register_device		4857430	0					
ANR	4857448	ArgumentList	( const gx_device * ) & gs_x11alpha_device		4857430	1					
ANR	4857449	Argument	( const gx_device * ) & gs_x11alpha_device		4857430	0					
ANR	4857450	CastExpression	( const gx_device * ) & gs_x11alpha_device		4857430	0					
ANR	4857451	CastTarget	const gx_device *		4857430	0					
ANR	4857452	UnaryOperationExpression	& gs_x11alpha_device		4857430	1					
ANR	4857453	UnaryOperator	&		4857430	0					
ANR	4857454	Identifier	gs_x11alpha_device		4857430	1					
ANR	4857455	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk_device )	877:2:27149:27210	4857430	2	True				
ANR	4857456	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk_device )		4857430	0					
ANR	4857457	Callee	gs_lib_register_device		4857430	0					
ANR	4857458	Identifier	gs_lib_register_device		4857430	0					
ANR	4857459	ArgumentList	( const gx_device * ) & gs_x11cmyk_device		4857430	1					
ANR	4857460	Argument	( const gx_device * ) & gs_x11cmyk_device		4857430	0					
ANR	4857461	CastExpression	( const gx_device * ) & gs_x11cmyk_device		4857430	0					
ANR	4857462	CastTarget	const gx_device *		4857430	0					
ANR	4857463	UnaryOperationExpression	& gs_x11cmyk_device		4857430	1					
ANR	4857464	UnaryOperator	&		4857430	0					
ANR	4857465	Identifier	gs_x11cmyk_device		4857430	1					
ANR	4857466	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk2_device )	878:2:27214:27276	4857430	3	True				
ANR	4857467	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk2_device )		4857430	0					
ANR	4857468	Callee	gs_lib_register_device		4857430	0					
ANR	4857469	Identifier	gs_lib_register_device		4857430	0					
ANR	4857470	ArgumentList	( const gx_device * ) & gs_x11cmyk2_device		4857430	1					
ANR	4857471	Argument	( const gx_device * ) & gs_x11cmyk2_device		4857430	0					
ANR	4857472	CastExpression	( const gx_device * ) & gs_x11cmyk2_device		4857430	0					
ANR	4857473	CastTarget	const gx_device *		4857430	0					
ANR	4857474	UnaryOperationExpression	& gs_x11cmyk2_device		4857430	1					
ANR	4857475	UnaryOperator	&		4857430	0					
ANR	4857476	Identifier	gs_x11cmyk2_device		4857430	1					
ANR	4857477	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk4_device )	879:2:27280:27342	4857430	4	True				
ANR	4857478	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk4_device )		4857430	0					
ANR	4857479	Callee	gs_lib_register_device		4857430	0					
ANR	4857480	Identifier	gs_lib_register_device		4857430	0					
ANR	4857481	ArgumentList	( const gx_device * ) & gs_x11cmyk4_device		4857430	1					
ANR	4857482	Argument	( const gx_device * ) & gs_x11cmyk4_device		4857430	0					
ANR	4857483	CastExpression	( const gx_device * ) & gs_x11cmyk4_device		4857430	0					
ANR	4857484	CastTarget	const gx_device *		4857430	0					
ANR	4857485	UnaryOperationExpression	& gs_x11cmyk4_device		4857430	1					
ANR	4857486	UnaryOperator	&		4857430	0					
ANR	4857487	Identifier	gs_x11cmyk4_device		4857430	1					
ANR	4857488	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk8_device )	880:2:27346:27408	4857430	5	True				
ANR	4857489	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk8_device )		4857430	0					
ANR	4857490	Callee	gs_lib_register_device		4857430	0					
ANR	4857491	Identifier	gs_lib_register_device		4857430	0					
ANR	4857492	ArgumentList	( const gx_device * ) & gs_x11cmyk8_device		4857430	1					
ANR	4857493	Argument	( const gx_device * ) & gs_x11cmyk8_device		4857430	0					
ANR	4857494	CastExpression	( const gx_device * ) & gs_x11cmyk8_device		4857430	0					
ANR	4857495	CastTarget	const gx_device *		4857430	0					
ANR	4857496	UnaryOperationExpression	& gs_x11cmyk8_device		4857430	1					
ANR	4857497	UnaryOperator	&		4857430	0					
ANR	4857498	Identifier	gs_x11cmyk8_device		4857430	1					
ANR	4857499	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray2_device )	881:2:27412:27474	4857430	6	True				
ANR	4857500	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray2_device )		4857430	0					
ANR	4857501	Callee	gs_lib_register_device		4857430	0					
ANR	4857502	Identifier	gs_lib_register_device		4857430	0					
ANR	4857503	ArgumentList	( const gx_device * ) & gs_x11gray2_device		4857430	1					
ANR	4857504	Argument	( const gx_device * ) & gs_x11gray2_device		4857430	0					
ANR	4857505	CastExpression	( const gx_device * ) & gs_x11gray2_device		4857430	0					
ANR	4857506	CastTarget	const gx_device *		4857430	0					
ANR	4857507	UnaryOperationExpression	& gs_x11gray2_device		4857430	1					
ANR	4857508	UnaryOperator	&		4857430	0					
ANR	4857509	Identifier	gs_x11gray2_device		4857430	1					
ANR	4857510	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray4_device )	882:2:27478:27540	4857430	7	True				
ANR	4857511	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray4_device )		4857430	0					
ANR	4857512	Callee	gs_lib_register_device		4857430	0					
ANR	4857513	Identifier	gs_lib_register_device		4857430	0					
ANR	4857514	ArgumentList	( const gx_device * ) & gs_x11gray4_device		4857430	1					
ANR	4857515	Argument	( const gx_device * ) & gs_x11gray4_device		4857430	0					
ANR	4857516	CastExpression	( const gx_device * ) & gs_x11gray4_device		4857430	0					
ANR	4857517	CastTarget	const gx_device *		4857430	0					
ANR	4857518	UnaryOperationExpression	& gs_x11gray4_device		4857430	1					
ANR	4857519	UnaryOperator	&		4857430	0					
ANR	4857520	Identifier	gs_x11gray4_device		4857430	1					
ANR	4857521	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11mono_device )	883:2:27544:27605	4857430	8	True				
ANR	4857522	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11mono_device )		4857430	0					
ANR	4857523	Callee	gs_lib_register_device		4857430	0					
ANR	4857524	Identifier	gs_lib_register_device		4857430	0					
ANR	4857525	ArgumentList	( const gx_device * ) & gs_x11mono_device		4857430	1					
ANR	4857526	Argument	( const gx_device * ) & gs_x11mono_device		4857430	0					
ANR	4857527	CastExpression	( const gx_device * ) & gs_x11mono_device		4857430	0					
ANR	4857528	CastTarget	const gx_device *		4857430	0					
ANR	4857529	UnaryOperationExpression	& gs_x11mono_device		4857430	1					
ANR	4857530	UnaryOperator	&		4857430	0					
ANR	4857531	Identifier	gs_x11mono_device		4857430	1					
ANR	4857532	ReturnType	void		4857430	1					
ANR	4857533	Identifier	gs_shared_init		4857430	2					
ANR	4857534	ParameterList			4857430	3					
ANR	4857535	CFGEntryNode	ENTRY		4857430		True				
ANR	4857536	CFGExitNode	EXIT		4857430		True				
ANR	4857537	Symbol	& gs_x11cmyk2_device		4857430						
ANR	4857538	Symbol	& gs_x11gray4_device		4857430						
ANR	4857539	Symbol	& gs_x11mono_device		4857430						
ANR	4857540	Symbol	& gs_x11alpha_device		4857430						
ANR	4857541	Symbol	& gs_x11gray2_device		4857430						
ANR	4857542	Symbol	& gs_x11cmyk4_device		4857430						
ANR	4857543	Symbol	& gs_x11cmyk8_device		4857430						
ANR	4857544	Symbol	& gs_x11_device		4857430						
ANR	4857545	Symbol	& gs_x11cmyk_device		4857430						
