command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	389266	File	data/converged/CVE-2018-16863_ghostpdl/base_genht.c								
ANR	389267	Function	read_file	65:0:2279:2683							
ANR	389268	FunctionDef	"read_file (FILE * in , char * cname)"		389267	0					
ANR	389269	CompoundStatement		67:0:2326:2683	389267	0					
ANR	389270	IdentifierDeclStatement	"int len , nread ;"	68:4:2332:2346	389267	0	True				
ANR	389271	IdentifierDecl	len		389267	0					
ANR	389272	IdentifierDeclType	int		389267	0					
ANR	389273	Identifier	len		389267	1					
ANR	389274	IdentifierDecl	nread		389267	1					
ANR	389275	IdentifierDeclType	int		389267	0					
ANR	389276	Identifier	nread		389267	1					
ANR	389277	IdentifierDeclStatement	char * cont ;	69:4:2352:2362	389267	1	True				
ANR	389278	IdentifierDecl	* cont		389267	0					
ANR	389279	IdentifierDeclType	char *		389267	0					
ANR	389280	Identifier	cont		389267	1					
ANR	389281	ExpressionStatement	"fseek ( in , 0L , 2 )"	71:4:2369:2398	389267	2	True				
ANR	389282	CallExpression	"fseek ( in , 0L , 2 )"		389267	0					
ANR	389283	Callee	fseek		389267	0					
ANR	389284	Identifier	fseek		389267	0					
ANR	389285	ArgumentList	in		389267	1					
ANR	389286	Argument	in		389267	0					
ANR	389287	Identifier	in		389267	0					
ANR	389288	Argument	0L		389267	1					
ANR	389289	PrimaryExpression	0L		389267	0					
ANR	389290	Argument	2		389267	2					
ANR	389291	PrimaryExpression	2		389267	0					
ANR	389292	ExpressionStatement	len = ftell ( in )	72:4:2404:2419	389267	3	True				
ANR	389293	AssignmentExpression	len = ftell ( in )		389267	0		=			
ANR	389294	Identifier	len		389267	0					
ANR	389295	CallExpression	ftell ( in )		389267	1					
ANR	389296	Callee	ftell		389267	0					
ANR	389297	Identifier	ftell		389267	0					
ANR	389298	ArgumentList	in		389267	1					
ANR	389299	Argument	in		389267	0					
ANR	389300	Identifier	in		389267	0					
ANR	389301	ExpressionStatement	cont = malloc ( len + 1 )	73:4:2425:2447	389267	4	True				
ANR	389302	AssignmentExpression	cont = malloc ( len + 1 )		389267	0		=			
ANR	389303	Identifier	cont		389267	0					
ANR	389304	CallExpression	malloc ( len + 1 )		389267	1					
ANR	389305	Callee	malloc		389267	0					
ANR	389306	Identifier	malloc		389267	0					
ANR	389307	ArgumentList	len + 1		389267	1					
ANR	389308	Argument	len + 1		389267	0					
ANR	389309	AdditiveExpression	len + 1		389267	0		+			
ANR	389310	Identifier	len		389267	0					
ANR	389311	PrimaryExpression	1		389267	1					
ANR	389312	IfStatement	if ( cont == 0 )		389267	5					
ANR	389313	Condition	cont == 0	74:8:2457:2465	389267	0	True				
ANR	389314	EqualityExpression	cont == 0		389267	0		==			
ANR	389315	Identifier	cont		389267	0					
ANR	389316	PrimaryExpression	0		389267	1					
ANR	389317	CompoundStatement		8:19:141:141	389267	1					
ANR	389318	ExpressionStatement	"fprintf ( stderr , ""Can't allocate %d bytes to read %s.\\n"" , len + 1 , cname )"	75:8:2478:2566	389267	0	True				
ANR	389319	CallExpression	"fprintf ( stderr , ""Can't allocate %d bytes to read %s.\\n"" , len + 1 , cname )"		389267	0					
ANR	389320	Callee	fprintf		389267	0					
ANR	389321	Identifier	fprintf		389267	0					
ANR	389322	ArgumentList	stderr		389267	1					
ANR	389323	Argument	stderr		389267	0					
ANR	389324	Identifier	stderr		389267	0					
ANR	389325	Argument	"""Can't allocate %d bytes to read %s.\\n"""		389267	1					
ANR	389326	PrimaryExpression	"""Can't allocate %d bytes to read %s.\\n"""		389267	0					
ANR	389327	Argument	len + 1		389267	2					
ANR	389328	AdditiveExpression	len + 1		389267	0		+			
ANR	389329	Identifier	len		389267	0					
ANR	389330	PrimaryExpression	1		389267	1					
ANR	389331	Argument	cname		389267	3					
ANR	389332	Identifier	cname		389267	0					
ANR	389333	ReturnStatement	return 0 ;	77:8:2576:2584	389267	1	True				
ANR	389334	PrimaryExpression	0		389267	0					
ANR	389335	ExpressionStatement	rewind ( in )	79:4:2596:2606	389267	6	True				
ANR	389336	CallExpression	rewind ( in )		389267	0					
ANR	389337	Callee	rewind		389267	0					
ANR	389338	Identifier	rewind		389267	0					
ANR	389339	ArgumentList	in		389267	1					
ANR	389340	Argument	in		389267	0					
ANR	389341	Identifier	in		389267	0					
ANR	389342	ExpressionStatement	"nread = fread ( cont , 1 , len , in )"	80:4:2612:2643	389267	7	True				
ANR	389343	AssignmentExpression	"nread = fread ( cont , 1 , len , in )"		389267	0		=			
ANR	389344	Identifier	nread		389267	0					
ANR	389345	CallExpression	"fread ( cont , 1 , len , in )"		389267	1					
ANR	389346	Callee	fread		389267	0					
ANR	389347	Identifier	fread		389267	0					
ANR	389348	ArgumentList	cont		389267	1					
ANR	389349	Argument	cont		389267	0					
ANR	389350	Identifier	cont		389267	0					
ANR	389351	Argument	1		389267	1					
ANR	389352	PrimaryExpression	1		389267	0					
ANR	389353	Argument	len		389267	2					
ANR	389354	Identifier	len		389267	0					
ANR	389355	Argument	in		389267	3					
ANR	389356	Identifier	in		389267	0					
ANR	389357	ExpressionStatement	cont [ nread ] = 0	81:4:2649:2664	389267	8	True				
ANR	389358	AssignmentExpression	cont [ nread ] = 0		389267	0		=			
ANR	389359	ArrayIndexing	cont [ nread ]		389267	0					
ANR	389360	Identifier	cont		389267	0					
ANR	389361	Identifier	nread		389267	1					
ANR	389362	PrimaryExpression	0		389267	1					
ANR	389363	ReturnStatement	return cont ;	82:4:2670:2681	389267	9	True				
ANR	389364	Identifier	cont		389267	0					
ANR	389365	ReturnType	static char *		389267	1					
ANR	389366	Identifier	read_file		389267	2					
ANR	389367	ParameterList	"FILE * in , char * cname"		389267	3					
ANR	389368	Parameter	FILE * in	66:10:2303:2310	389267	0	True				
ANR	389369	ParameterType	FILE *		389267	0					
ANR	389370	Identifier	in		389267	1					
ANR	389371	Parameter	char * cname	66:20:2313:2323	389267	1	True				
ANR	389372	ParameterType	char *		389267	0					
ANR	389373	Identifier	cname		389267	1					
ANR	389374	CFGEntryNode	ENTRY		389267		True				
ANR	389375	CFGExitNode	EXIT		389267		True				
ANR	389376	Symbol	malloc		389267						
ANR	389377	Symbol	len		389267						
ANR	389378	Symbol	ftell		389267						
ANR	389379	Symbol	in		389267						
ANR	389380	Symbol	* cont		389267						
ANR	389381	Symbol	nread		389267						
ANR	389382	Symbol	cname		389267						
ANR	389383	Symbol	* nread		389267						
ANR	389384	Symbol	cont		389267						
ANR	389385	Symbol	stderr		389267						
ANR	389386	Symbol	fread		389267						
ANR	389387	Function	parse_line	86:0:2736:3204							
ANR	389388	FunctionDef	"parse_line (char * * pstr , char * * pline)"		389387	0					
ANR	389389	CompoundStatement		88:0:2786:3204	389387	0					
ANR	389390	IdentifierDeclStatement	char * str = * pstr ;	89:4:2792:2809	389387	0	True				
ANR	389391	IdentifierDecl	* str = * pstr		389387	0					
ANR	389392	IdentifierDeclType	char *		389387	0					
ANR	389393	Identifier	str		389387	1					
ANR	389394	AssignmentExpression	* str = * pstr		389387	2		=			
ANR	389395	Identifier	str		389387	0					
ANR	389396	UnaryOperationExpression	* pstr		389387	1					
ANR	389397	UnaryOperator	*		389387	0					
ANR	389398	Identifier	pstr		389387	1					
ANR	389399	Label	top :	91:0:2812:2815	389387	1	True				
ANR	389400	Identifier	top		389387	0					
ANR	389401	WhileStatement	"while ( * str && strchr ( "" \\t\\r\\n"" , * str ) )"		389387	2					
ANR	389402	Condition	"* str && strchr ( "" \\t\\r\\n"" , * str )"	92:11:2828:2858	389387	0	True				
ANR	389403	AndExpression	"* str && strchr ( "" \\t\\r\\n"" , * str )"		389387	0		&&			
ANR	389404	UnaryOperationExpression	* str		389387	0					
ANR	389405	UnaryOperator	*		389387	0					
ANR	389406	Identifier	str		389387	1					
ANR	389407	CallExpression	"strchr ( "" \\t\\r\\n"" , * str )"		389387	1					
ANR	389408	Callee	strchr		389387	0					
ANR	389409	Identifier	strchr		389387	0					
ANR	389410	ArgumentList	""" \\t\\r\\n"""		389387	1					
ANR	389411	Argument	""" \\t\\r\\n"""		389387	0					
ANR	389412	PrimaryExpression	""" \\t\\r\\n"""		389387	0					
ANR	389413	Argument	* str		389387	1					
ANR	389414	UnaryOperationExpression	* str		389387	0					
ANR	389415	UnaryOperator	*		389387	0					
ANR	389416	Identifier	str		389387	1					
ANR	389417	ExpressionStatement	++ str	93:8:2894:2899	389387	1	True				
ANR	389418	UnaryExpression	++ str		389387	0					
ANR	389419	IncDec	++		389387	0					
ANR	389420	Identifier	str		389387	1					
ANR	389421	IfStatement	if ( * str == 0 )		389387	3					
ANR	389422	Condition	* str == 0	94:8:2909:2917	389387	0	True				
ANR	389423	EqualityExpression	* str == 0		389387	0		==			
ANR	389424	UnaryOperationExpression	* str		389387	0					
ANR	389425	UnaryOperator	*		389387	0					
ANR	389426	Identifier	str		389387	1					
ANR	389427	PrimaryExpression	0		389387	1					
ANR	389428	CompoundStatement		7:19:133:133	389387	1					
ANR	389429	ExpressionStatement	* pline = 0	95:8:2930:2940	389387	0	True				
ANR	389430	AssignmentExpression	* pline = 0		389387	0		=			
ANR	389431	UnaryOperationExpression	* pline		389387	0					
ANR	389432	UnaryOperator	*		389387	0					
ANR	389433	Identifier	pline		389387	1					
ANR	389434	PrimaryExpression	0		389387	1					
ANR	389435	ReturnStatement	return false ;	96:8:2950:2962	389387	1	True				
ANR	389436	Identifier	false		389387	0					
ANR	389437	ExpressionStatement	* pline = str	98:4:2974:2986	389387	4	True				
ANR	389438	AssignmentExpression	* pline = str		389387	0		=			
ANR	389439	UnaryOperationExpression	* pline		389387	0					
ANR	389440	UnaryOperator	*		389387	0					
ANR	389441	Identifier	pline		389387	1					
ANR	389442	Identifier	str		389387	1					
ANR	389443	WhileStatement	"while ( * str && ! strchr ( ""\\r\\n"" , * str ) )"		389387	5					
ANR	389444	Condition	"* str && ! strchr ( ""\\r\\n"" , * str )"	99:11:2999:3027	389387	0	True				
ANR	389445	AndExpression	"* str && ! strchr ( ""\\r\\n"" , * str )"		389387	0		&&			
ANR	389446	UnaryOperationExpression	* str		389387	0					
ANR	389447	UnaryOperator	*		389387	0					
ANR	389448	Identifier	str		389387	1					
ANR	389449	UnaryOperationExpression	"! strchr ( ""\\r\\n"" , * str )"		389387	1					
ANR	389450	UnaryOperator	!		389387	0					
ANR	389451	CallExpression	"strchr ( ""\\r\\n"" , * str )"		389387	1					
ANR	389452	Callee	strchr		389387	0					
ANR	389453	Identifier	strchr		389387	0					
ANR	389454	ArgumentList	"""\\r\\n"""		389387	1					
ANR	389455	Argument	"""\\r\\n"""		389387	0					
ANR	389456	PrimaryExpression	"""\\r\\n"""		389387	0					
ANR	389457	Argument	* str		389387	1					
ANR	389458	UnaryOperationExpression	* str		389387	0					
ANR	389459	UnaryOperator	*		389387	0					
ANR	389460	Identifier	str		389387	1					
ANR	389461	ExpressionStatement	++ str	100:8:3053:3058	389387	1	True				
ANR	389462	UnaryExpression	++ str		389387	0					
ANR	389463	IncDec	++		389387	0					
ANR	389464	Identifier	str		389387	1					
ANR	389465	WhileStatement	"while ( str > * pline && strchr ( "" \\t"" , str [ - 1 ] ) )"		389387	6					
ANR	389466	Condition	"str > * pline && strchr ( "" \\t"" , str [ - 1 ] )"	101:11:3071:3108	389387	0	True				
ANR	389467	AndExpression	"str > * pline && strchr ( "" \\t"" , str [ - 1 ] )"		389387	0		&&			
ANR	389468	RelationalExpression	str > * pline		389387	0		>			
ANR	389469	Identifier	str		389387	0					
ANR	389470	UnaryOperationExpression	* pline		389387	1					
ANR	389471	UnaryOperator	*		389387	0					
ANR	389472	Identifier	pline		389387	1					
ANR	389473	CallExpression	"strchr ( "" \\t"" , str [ - 1 ] )"		389387	1					
ANR	389474	Callee	strchr		389387	0					
ANR	389475	Identifier	strchr		389387	0					
ANR	389476	ArgumentList	""" \\t"""		389387	1					
ANR	389477	Argument	""" \\t"""		389387	0					
ANR	389478	PrimaryExpression	""" \\t"""		389387	0					
ANR	389479	Argument	str [ - 1 ]		389387	1					
ANR	389480	ArrayIndexing	str [ - 1 ]		389387	0					
ANR	389481	Identifier	str		389387	0					
ANR	389482	UnaryOperationExpression	- 1		389387	1					
ANR	389483	UnaryOperator	-		389387	0					
ANR	389484	PrimaryExpression	1		389387	1					
ANR	389485	ExpressionStatement	-- str	102:8:3145:3150	389387	1	True				
ANR	389486	UnaryExpression	-- str		389387	0					
ANR	389487	IncDec	--		389387	0					
ANR	389488	Identifier	str		389387	1					
ANR	389489	ExpressionStatement	* str = 0	103:4:3156:3164	389387	7	True				
ANR	389490	AssignmentExpression	* str = 0		389387	0		=			
ANR	389491	UnaryOperationExpression	* str		389387	0					
ANR	389492	UnaryOperator	*		389387	0					
ANR	389493	Identifier	str		389387	1					
ANR	389494	PrimaryExpression	0		389387	1					
ANR	389495	ExpressionStatement	* pstr = str + 1	104:4:3170:3185	389387	8	True				
ANR	389496	AssignmentExpression	* pstr = str + 1		389387	0		=			
ANR	389497	UnaryOperationExpression	* pstr		389387	0					
ANR	389498	UnaryOperator	*		389387	0					
ANR	389499	Identifier	pstr		389387	1					
ANR	389500	AdditiveExpression	str + 1		389387	1		+			
ANR	389501	Identifier	str		389387	0					
ANR	389502	PrimaryExpression	1		389387	1					
ANR	389503	ReturnStatement	return true ;	105:4:3191:3202	389387	9	True				
ANR	389504	Identifier	true		389387	0					
ANR	389505	ReturnType	static bool		389387	1					
ANR	389506	Identifier	parse_line		389387	2					
ANR	389507	ParameterList	"char * * pstr , char * * pline"		389387	3					
ANR	389508	Parameter	char * * pstr	87:11:2759:2769	389387	0	True				
ANR	389509	ParameterType	char * *		389387	0					
ANR	389510	Identifier	pstr		389387	1					
ANR	389511	Parameter	char * * pline	87:24:2772:2783	389387	1	True				
ANR	389512	ParameterType	char * *		389387	0					
ANR	389513	Identifier	pline		389387	1					
ANR	389514	CFGEntryNode	ENTRY		389387		True				
ANR	389515	CFGExitNode	EXIT		389387		True				
ANR	389516	Symbol	str		389387						
ANR	389517	Symbol	* pline		389387						
ANR	389518	Symbol	* pstr		389387						
ANR	389519	Symbol	pstr		389387						
ANR	389520	Symbol	pline		389387						
ANR	389521	Symbol	false		389387						
ANR	389522	Symbol	true		389387						
ANR	389523	Symbol	strchr		389387						
ANR	389524	Symbol	* str		389387						
ANR	389525	Function	parse_halftone	107:0:3206:7264							
ANR	389526	FunctionDef	"parse_halftone (gx_device_halftone_resource_t * phtr , byte * * pThresholds , char * * pprefix , char * * pcont)"		389525	0					
ANR	389527	CompoundStatement		110:0:3334:7264	389525	0					
ANR	389528	IdentifierDeclStatement	char * str ;	111:4:3340:3349	389525	0	True				
ANR	389529	IdentifierDecl	* str		389525	0					
ANR	389530	IdentifierDeclType	char *		389525	0					
ANR	389531	Identifier	str		389525	1					
ANR	389532	IdentifierDeclStatement	char * line ;	112:4:3355:3365	389525	1	True				
ANR	389533	IdentifierDecl	* line		389525	0					
ANR	389534	IdentifierDeclType	char *		389525	0					
ANR	389535	Identifier	line		389525	1					
ANR	389536	IdentifierDeclStatement	char * rname = 0 ;	113:4:3371:3386	389525	2	True				
ANR	389537	IdentifierDecl	* rname = 0		389525	0					
ANR	389538	IdentifierDeclType	char *		389525	0					
ANR	389539	Identifier	rname		389525	1					
ANR	389540	AssignmentExpression	* rname = 0		389525	2		=			
ANR	389541	Identifier	rname		389525	0					
ANR	389542	PrimaryExpression	0		389525	1					
ANR	389543	IdentifierDeclStatement	int HalftoneType = - 1 ;	114:4:3392:3413	389525	3	True				
ANR	389544	IdentifierDecl	HalftoneType = - 1		389525	0					
ANR	389545	IdentifierDeclType	int		389525	0					
ANR	389546	Identifier	HalftoneType		389525	1					
ANR	389547	AssignmentExpression	HalftoneType = - 1		389525	2		=			
ANR	389548	Identifier	HalftoneType		389525	0					
ANR	389549	UnaryOperationExpression	- 1		389525	1					
ANR	389550	UnaryOperator	-		389525	0					
ANR	389551	PrimaryExpression	1		389525	1					
ANR	389552	IdentifierDeclStatement	"int Width = - 1 , Height = - 1 ;"	115:4:3419:3446	389525	4	True				
ANR	389553	IdentifierDecl	Width = - 1		389525	0					
ANR	389554	IdentifierDeclType	int		389525	0					
ANR	389555	Identifier	Width		389525	1					
ANR	389556	AssignmentExpression	Width = - 1		389525	2		=			
ANR	389557	Identifier	Width		389525	0					
ANR	389558	UnaryOperationExpression	- 1		389525	1					
ANR	389559	UnaryOperator	-		389525	0					
ANR	389560	PrimaryExpression	1		389525	1					
ANR	389561	IdentifierDecl	Height = - 1		389525	1					
ANR	389562	IdentifierDeclType	int		389525	0					
ANR	389563	Identifier	Height		389525	1					
ANR	389564	AssignmentExpression	Height = - 1		389525	2		=			
ANR	389565	Identifier	Height		389525	0					
ANR	389566	UnaryOperationExpression	- 1		389525	1					
ANR	389567	UnaryOperator	-		389525	0					
ANR	389568	PrimaryExpression	1		389525	1					
ANR	389569	IdentifierDeclStatement	byte * Thresholds = 0 ;	116:4:3452:3472	389525	5	True				
ANR	389570	IdentifierDecl	* Thresholds = 0		389525	0					
ANR	389571	IdentifierDeclType	byte *		389525	0					
ANR	389572	Identifier	Thresholds		389525	1					
ANR	389573	AssignmentExpression	* Thresholds = 0		389525	2		=			
ANR	389574	Identifier	Thresholds		389525	0					
ANR	389575	PrimaryExpression	0		389525	1					
ANR	389576	IdentifierDeclStatement	stream_AXD_state ss ;	117:4:3478:3497	389525	6	True				
ANR	389577	IdentifierDecl	ss		389525	0					
ANR	389578	IdentifierDeclType	stream_AXD_state		389525	0					
ANR	389579	Identifier	ss		389525	1					
ANR	389580	ForStatement	"for ( str = * pcont ; parse_line ( & str , & line ) ; )"		389525	7					
ANR	389581	ForInit	str = * pcont ;	120:9:3535:3547	389525	0	True				
ANR	389582	AssignmentExpression	str = * pcont		389525	0		=			
ANR	389583	Identifier	str		389525	0					
ANR	389584	UnaryOperationExpression	* pcont		389525	1					
ANR	389585	UnaryOperator	*		389525	0					
ANR	389586	Identifier	pcont		389525	1					
ANR	389587	Condition	"parse_line ( & str , & line )"	120:23:3549:3571	389525	1	True				
ANR	389588	CallExpression	"parse_line ( & str , & line )"		389525	0					
ANR	389589	Callee	parse_line		389525	0					
ANR	389590	Identifier	parse_line		389525	0					
ANR	389591	ArgumentList	& str		389525	1					
ANR	389592	Argument	& str		389525	0					
ANR	389593	UnaryOperationExpression	& str		389525	0					
ANR	389594	UnaryOperator	&		389525	0					
ANR	389595	Identifier	str		389525	1					
ANR	389596	Argument	& line		389525	1					
ANR	389597	UnaryOperationExpression	& line		389525	0					
ANR	389598	UnaryOperator	&		389525	0					
ANR	389599	Identifier	line		389525	1					
ANR	389600	CompoundStatement		14:8:291:306	389525	2					
ANR	389601	IdentifierDeclStatement	char * end ;	121:8:3585:3594	389525	0	True				
ANR	389602	IdentifierDecl	* end		389525	0					
ANR	389603	IdentifierDeclType	char *		389525	0					
ANR	389604	Identifier	end		389525	1					
ANR	389605	IdentifierDeclStatement	char * prefix ;	122:8:3604:3616	389525	1	True				
ANR	389606	IdentifierDecl	* prefix		389525	0					
ANR	389607	IdentifierDeclType	char *		389525	0					
ANR	389608	Identifier	prefix		389525	1					
ANR	389609	IdentifierDeclStatement	char terminator ;	123:8:3626:3641	389525	2	True				
ANR	389610	IdentifierDecl	terminator		389525	0					
ANR	389611	IdentifierDeclType	char		389525	0					
ANR	389612	Identifier	terminator		389525	1					
ANR	389613	IfStatement	if ( line [ 0 ] == '%' )		389525	3					
ANR	389614	Condition	line [ 0 ] == '%'	125:12:3656:3669	389525	0	True				
ANR	389615	EqualityExpression	line [ 0 ] == '%'		389525	0		==			
ANR	389616	ArrayIndexing	line [ 0 ]		389525	0					
ANR	389617	Identifier	line		389525	0					
ANR	389618	PrimaryExpression	0		389525	1					
ANR	389619	PrimaryExpression	'%'		389525	1					
ANR	389620	ContinueStatement	continue ;	126:12:3684:3692	389525	1	True				
ANR	389621	IfStatement	"if ( strlen ( line ) >= 14 && ! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" ) )"		389525	4					
ANR	389622	Condition	"strlen ( line ) >= 14 && ! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"	127:12:3706:3790	389525	0	True				
ANR	389623	AndExpression	"strlen ( line ) >= 14 && ! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"		389525	0		&&			
ANR	389624	RelationalExpression	strlen ( line ) >= 14		389525	0		>=			
ANR	389625	CallExpression	strlen ( line )		389525	0					
ANR	389626	Callee	strlen		389525	0					
ANR	389627	Identifier	strlen		389525	0					
ANR	389628	ArgumentList	line		389525	1					
ANR	389629	Argument	line		389525	0					
ANR	389630	Identifier	line		389525	0					
ANR	389631	PrimaryExpression	14		389525	1					
ANR	389632	UnaryOperationExpression	"! strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"		389525	1					
ANR	389633	UnaryOperator	!		389525	0					
ANR	389634	CallExpression	"strcmp ( line + strlen ( line ) - 14 , ""defineresource"" )"		389525	1					
ANR	389635	Callee	strcmp		389525	0					
ANR	389636	Identifier	strcmp		389525	0					
ANR	389637	ArgumentList	line + strlen ( line ) - 14		389525	1					
ANR	389638	Argument	line + strlen ( line ) - 14		389525	0					
ANR	389639	AdditiveExpression	line + strlen ( line ) - 14		389525	0		+			
ANR	389640	Identifier	line		389525	0					
ANR	389641	AdditiveExpression	strlen ( line ) - 14		389525	1		-			
ANR	389642	CallExpression	strlen ( line )		389525	0					
ANR	389643	Callee	strlen		389525	0					
ANR	389644	Identifier	strlen		389525	0					
ANR	389645	ArgumentList	line		389525	1					
ANR	389646	Argument	line		389525	0					
ANR	389647	Identifier	line		389525	0					
ANR	389648	PrimaryExpression	14		389525	1					
ANR	389649	Argument	"""defineresource"""		389525	1					
ANR	389650	PrimaryExpression	"""defineresource"""		389525	0					
ANR	389651	BreakStatement	break ;	130:12:3818:3823	389525	1	True				
ANR	389652	IfStatement	if ( line [ 0 ] != '/' )		389525	5					
ANR	389653	Condition	line [ 0 ] != '/'	131:12:3837:3850	389525	0	True				
ANR	389654	EqualityExpression	line [ 0 ] != '/'		389525	0		!=			
ANR	389655	ArrayIndexing	line [ 0 ]		389525	0					
ANR	389656	Identifier	line		389525	0					
ANR	389657	PrimaryExpression	0		389525	1					
ANR	389658	PrimaryExpression	'/'		389525	1					
ANR	389659	ContinueStatement	continue ;	132:12:3865:3873	389525	1	True				
ANR	389660	IfStatement	"if ( strlen ( line ) >= 8 && ! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" ) )"		389525	6					
ANR	389661	Condition	"strlen ( line ) >= 8 && ! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"	133:12:3887:3963	389525	0	True				
ANR	389662	AndExpression	"strlen ( line ) >= 8 && ! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"		389525	0		&&			
ANR	389663	RelationalExpression	strlen ( line ) >= 8		389525	0		>=			
ANR	389664	CallExpression	strlen ( line )		389525	0					
ANR	389665	Callee	strlen		389525	0					
ANR	389666	Identifier	strlen		389525	0					
ANR	389667	ArgumentList	line		389525	1					
ANR	389668	Argument	line		389525	0					
ANR	389669	Identifier	line		389525	0					
ANR	389670	PrimaryExpression	8		389525	1					
ANR	389671	UnaryOperationExpression	"! strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"		389525	1					
ANR	389672	UnaryOperator	!		389525	0					
ANR	389673	CallExpression	"strcmp ( line + strlen ( line ) - 8 , "" 1 index"" )"		389525	1					
ANR	389674	Callee	strcmp		389525	0					
ANR	389675	Identifier	strcmp		389525	0					
ANR	389676	ArgumentList	line + strlen ( line ) - 8		389525	1					
ANR	389677	Argument	line + strlen ( line ) - 8		389525	0					
ANR	389678	AdditiveExpression	line + strlen ( line ) - 8		389525	0		+			
ANR	389679	Identifier	line		389525	0					
ANR	389680	AdditiveExpression	strlen ( line ) - 8		389525	1		-			
ANR	389681	CallExpression	strlen ( line )		389525	0					
ANR	389682	Callee	strlen		389525	0					
ANR	389683	Identifier	strlen		389525	0					
ANR	389684	ArgumentList	line		389525	1					
ANR	389685	Argument	line		389525	0					
ANR	389686	Identifier	line		389525	0					
ANR	389687	PrimaryExpression	8		389525	1					
ANR	389688	Argument	""" 1 index"""		389525	1					
ANR	389689	PrimaryExpression	""" 1 index"""		389525	0					
ANR	389690	ContinueStatement	continue ;	136:12:3991:3999	389525	1	True				
ANR	389691	ExpressionStatement	end = ++ line	137:8:4009:4021	389525	7	True				
ANR	389692	AssignmentExpression	end = ++ line		389525	0		=			
ANR	389693	Identifier	end		389525	0					
ANR	389694	UnaryExpression	++ line		389525	1					
ANR	389695	IncDec	++		389525	0					
ANR	389696	Identifier	line		389525	1					
ANR	389697	WhileStatement	"while ( * end && ! strchr ( "" \\t<"" , * end ) )"		389525	8					
ANR	389698	Condition	"* end && ! strchr ( "" \\t<"" , * end )"	138:15:4038:4066	389525	0	True				
ANR	389699	AndExpression	"* end && ! strchr ( "" \\t<"" , * end )"		389525	0		&&			
ANR	389700	UnaryOperationExpression	* end		389525	0					
ANR	389701	UnaryOperator	*		389525	0					
ANR	389702	Identifier	end		389525	1					
ANR	389703	UnaryOperationExpression	"! strchr ( "" \\t<"" , * end )"		389525	1					
ANR	389704	UnaryOperator	!		389525	0					
ANR	389705	CallExpression	"strchr ( "" \\t<"" , * end )"		389525	1					
ANR	389706	Callee	strchr		389525	0					
ANR	389707	Identifier	strchr		389525	0					
ANR	389708	ArgumentList	""" \\t<"""		389525	1					
ANR	389709	Argument	""" \\t<"""		389525	0					
ANR	389710	PrimaryExpression	""" \\t<"""		389525	0					
ANR	389711	Argument	* end		389525	1					
ANR	389712	UnaryOperationExpression	* end		389525	0					
ANR	389713	UnaryOperator	*		389525	0					
ANR	389714	Identifier	end		389525	1					
ANR	389715	ExpressionStatement	++ end	139:12:4104:4109	389525	1	True				
ANR	389716	UnaryExpression	++ end		389525	0					
ANR	389717	IncDec	++		389525	0					
ANR	389718	Identifier	end		389525	1					
ANR	389719	ExpressionStatement	terminator = * end	140:8:4119:4136	389525	9	True				
ANR	389720	AssignmentExpression	terminator = * end		389525	0		=			
ANR	389721	Identifier	terminator		389525	0					
ANR	389722	UnaryOperationExpression	* end		389525	1					
ANR	389723	UnaryOperator	*		389525	0					
ANR	389724	Identifier	end		389525	1					
ANR	389725	ExpressionStatement	* end = 0	141:8:4146:4154	389525	10	True				
ANR	389726	AssignmentExpression	* end = 0		389525	0		=			
ANR	389727	UnaryOperationExpression	* end		389525	0					
ANR	389728	UnaryOperator	*		389525	0					
ANR	389729	Identifier	end		389525	1					
ANR	389730	PrimaryExpression	0		389525	1					
ANR	389731	IfStatement	if ( rname == 0 )		389525	11					
ANR	389732	Condition	rname == 0	142:12:4168:4177	389525	0	True				
ANR	389733	EqualityExpression	rname == 0		389525	0		==			
ANR	389734	Identifier	rname		389525	0					
ANR	389735	PrimaryExpression	0		389525	1					
ANR	389736	CompoundStatement		33:24:845:845	389525	1					
ANR	389737	ExpressionStatement	rname = malloc ( strlen ( line ) + 1 )	143:12:4228:4260	389525	0	True				
ANR	389738	AssignmentExpression	rname = malloc ( strlen ( line ) + 1 )		389525	0		=			
ANR	389739	Identifier	rname		389525	0					
ANR	389740	CallExpression	malloc ( strlen ( line ) + 1 )		389525	1					
ANR	389741	Callee	malloc		389525	0					
ANR	389742	Identifier	malloc		389525	0					
ANR	389743	ArgumentList	strlen ( line ) + 1		389525	1					
ANR	389744	Argument	strlen ( line ) + 1		389525	0					
ANR	389745	AdditiveExpression	strlen ( line ) + 1		389525	0		+			
ANR	389746	CallExpression	strlen ( line )		389525	0					
ANR	389747	Callee	strlen		389525	0					
ANR	389748	Identifier	strlen		389525	0					
ANR	389749	ArgumentList	line		389525	1					
ANR	389750	Argument	line		389525	0					
ANR	389751	Identifier	line		389525	0					
ANR	389752	PrimaryExpression	1		389525	1					
ANR	389753	ExpressionStatement	"strcpy ( rname , line )"	144:12:4274:4293	389525	1	True				
ANR	389754	CallExpression	"strcpy ( rname , line )"		389525	0					
ANR	389755	Callee	strcpy		389525	0					
ANR	389756	Identifier	strcpy		389525	0					
ANR	389757	ArgumentList	rname		389525	1					
ANR	389758	Argument	rname		389525	0					
ANR	389759	Identifier	rname		389525	0					
ANR	389760	Argument	line		389525	1					
ANR	389761	Identifier	line		389525	0					
ANR	389762	ContinueStatement	continue ;	145:12:4307:4315	389525	2	True				
ANR	389763	IfStatement	if ( terminator == 0 )		389525	12					
ANR	389764	Condition	terminator == 0	147:12:4339:4353	389525	0	True				
ANR	389765	EqualityExpression	terminator == 0		389525	0		==			
ANR	389766	Identifier	terminator		389525	0					
ANR	389767	PrimaryExpression	0		389525	1					
ANR	389768	ContinueStatement	continue ;	148:12:4386:4394	389525	1	True				
ANR	389769	ExpressionStatement	++ end	149:8:4404:4409	389525	13	True				
ANR	389770	UnaryExpression	++ end		389525	0					
ANR	389771	IncDec	++		389525	0					
ANR	389772	Identifier	end		389525	1					
ANR	389773	IfStatement	"if ( ! strcmp ( line , ""HalftoneType"" ) )"		389525	14					
ANR	389774	Condition	"! strcmp ( line , ""HalftoneType"" )"	150:12:4423:4451	389525	0	True				
ANR	389775	UnaryOperationExpression	"! strcmp ( line , ""HalftoneType"" )"		389525	0					
ANR	389776	UnaryOperator	!		389525	0					
ANR	389777	CallExpression	"strcmp ( line , ""HalftoneType"" )"		389525	1					
ANR	389778	Callee	strcmp		389525	0					
ANR	389779	Identifier	strcmp		389525	0					
ANR	389780	ArgumentList	line		389525	1					
ANR	389781	Argument	line		389525	0					
ANR	389782	Identifier	line		389525	0					
ANR	389783	Argument	"""HalftoneType"""		389525	1					
ANR	389784	PrimaryExpression	"""HalftoneType"""		389525	0					
ANR	389785	CompoundStatement		41:43:1119:1119	389525	1					
ANR	389786	IfStatement	"if ( sscanf ( end , ""%d"" , & HalftoneType ) != 1 )"		389525	0					
ANR	389787	Condition	"sscanf ( end , ""%d"" , & HalftoneType ) != 1"	151:16:4472:4508	389525	0	True				
ANR	389788	EqualityExpression	"sscanf ( end , ""%d"" , & HalftoneType ) != 1"		389525	0		!=			
ANR	389789	CallExpression	"sscanf ( end , ""%d"" , & HalftoneType )"		389525	0					
ANR	389790	Callee	sscanf		389525	0					
ANR	389791	Identifier	sscanf		389525	0					
ANR	389792	ArgumentList	end		389525	1					
ANR	389793	Argument	end		389525	0					
ANR	389794	Identifier	end		389525	0					
ANR	389795	Argument	"""%d"""		389525	1					
ANR	389796	PrimaryExpression	"""%d"""		389525	0					
ANR	389797	Argument	& HalftoneType		389525	2					
ANR	389798	UnaryOperationExpression	& HalftoneType		389525	0					
ANR	389799	UnaryOperator	&		389525	0					
ANR	389800	Identifier	HalftoneType		389525	1					
ANR	389801	PrimaryExpression	1		389525	1					
ANR	389802	CompoundStatement		42:55:1176:1176	389525	1					
ANR	389803	ExpressionStatement	"fprintf ( stderr , ""Invalid HalftoneType syntax: %s\\n"" , line - 1 )"	152:16:4529:4591	389525	0	True				
ANR	389804	CallExpression	"fprintf ( stderr , ""Invalid HalftoneType syntax: %s\\n"" , line - 1 )"		389525	0					
ANR	389805	Callee	fprintf		389525	0					
ANR	389806	Identifier	fprintf		389525	0					
ANR	389807	ArgumentList	stderr		389525	1					
ANR	389808	Argument	stderr		389525	0					
ANR	389809	Identifier	stderr		389525	0					
ANR	389810	Argument	"""Invalid HalftoneType syntax: %s\\n"""		389525	1					
ANR	389811	PrimaryExpression	"""Invalid HalftoneType syntax: %s\\n"""		389525	0					
ANR	389812	Argument	line - 1		389525	2					
ANR	389813	AdditiveExpression	line - 1		389525	0		-			
ANR	389814	Identifier	line		389525	0					
ANR	389815	PrimaryExpression	1		389525	1					
ANR	389816	ReturnStatement	return - 1 ;	153:16:4609:4618	389525	1	True				
ANR	389817	UnaryOperationExpression	- 1		389525	0					
ANR	389818	UnaryOperator	-		389525	0					
ANR	389819	PrimaryExpression	1		389525	1					
ANR	389820	SwitchStatement	switch ( HalftoneType )		389525	1					
ANR	389821	Condition	HalftoneType	155:20:4654:4665	389525	0	True				
ANR	389822	Identifier	HalftoneType		389525	0					
ANR	389823	CompoundStatement		46:34:1333:1333	389525	1					
ANR	389824	Label	case 3 :	156:12:4682:4688	389525	0	True				
ANR	389825	BreakStatement	break ;	157:16:4706:4711	389525	1	True				
ANR	389826	Label	case 5 :	158:12:4725:4731	389525	2	True				
ANR	389827	IfStatement	if ( * pprefix )		389525	3					
ANR	389828	Condition	* pprefix	159:20:4753:4760	389525	0	True				
ANR	389829	UnaryOperationExpression	* pprefix		389525	0					
ANR	389830	UnaryOperator	*		389525	0					
ANR	389831	Identifier	pprefix		389525	1					
ANR	389832	ExpressionStatement	free ( * pprefix )	160:20:4783:4797	389525	1	True				
ANR	389833	CallExpression	free ( * pprefix )		389525	0					
ANR	389834	Callee	free		389525	0					
ANR	389835	Identifier	free		389525	0					
ANR	389836	ArgumentList	* pprefix		389525	1					
ANR	389837	Argument	* pprefix		389525	0					
ANR	389838	UnaryOperationExpression	* pprefix		389525	0					
ANR	389839	UnaryOperator	*		389525	0					
ANR	389840	Identifier	pprefix		389525	1					
ANR	389841	ExpressionStatement	* pprefix = rname	161:16:4815:4831	389525	4	True				
ANR	389842	AssignmentExpression	* pprefix = rname		389525	0		=			
ANR	389843	UnaryOperationExpression	* pprefix		389525	0					
ANR	389844	UnaryOperator	*		389525	0					
ANR	389845	Identifier	pprefix		389525	1					
ANR	389846	Identifier	rname		389525	1					
ANR	389847	ExpressionStatement	rname = 0	162:16:4849:4858	389525	5	True				
ANR	389848	AssignmentExpression	rname = 0		389525	0		=			
ANR	389849	Identifier	rname		389525	0					
ANR	389850	PrimaryExpression	0		389525	1					
ANR	389851	BreakStatement	break ;	163:16:4876:4881	389525	6	True				
ANR	389852	Label	default :	164:12:4895:4902	389525	7	True				
ANR	389853	Identifier	default		389525	0					
ANR	389854	ExpressionStatement	"fprintf ( stderr , ""Invalid HalftoneType: %s\\n"" , end )"	165:16:4920:4970	389525	8	True				
ANR	389855	CallExpression	"fprintf ( stderr , ""Invalid HalftoneType: %s\\n"" , end )"		389525	0					
ANR	389856	Callee	fprintf		389525	0					
ANR	389857	Identifier	fprintf		389525	0					
ANR	389858	ArgumentList	stderr		389525	1					
ANR	389859	Argument	stderr		389525	0					
ANR	389860	Identifier	stderr		389525	0					
ANR	389861	Argument	"""Invalid HalftoneType: %s\\n"""		389525	1					
ANR	389862	PrimaryExpression	"""Invalid HalftoneType: %s\\n"""		389525	0					
ANR	389863	Argument	end		389525	2					
ANR	389864	Identifier	end		389525	0					
ANR	389865	ReturnStatement	return - 1 ;	166:16:4988:4997	389525	9	True				
ANR	389866	UnaryOperationExpression	- 1		389525	0					
ANR	389867	UnaryOperator	-		389525	0					
ANR	389868	PrimaryExpression	1		389525	1					
ANR	389869	ContinueStatement	continue ;	168:12:5025:5033	389525	2	True				
ANR	389870	ElseStatement	else		389525	0					
ANR	389871	IfStatement	"if ( ! strcmp ( line , ""Width"" ) )"		389525	0					
ANR	389872	Condition	"! strcmp ( line , ""Width"" )"	169:19:5054:5075	389525	0	True				
ANR	389873	UnaryOperationExpression	"! strcmp ( line , ""Width"" )"		389525	0					
ANR	389874	UnaryOperator	!		389525	0					
ANR	389875	CallExpression	"strcmp ( line , ""Width"" )"		389525	1					
ANR	389876	Callee	strcmp		389525	0					
ANR	389877	Identifier	strcmp		389525	0					
ANR	389878	ArgumentList	line		389525	1					
ANR	389879	Argument	line		389525	0					
ANR	389880	Identifier	line		389525	0					
ANR	389881	Argument	"""Width"""		389525	1					
ANR	389882	PrimaryExpression	"""Width"""		389525	0					
ANR	389883	CompoundStatement		60:43:1743:1743	389525	1					
ANR	389884	IfStatement	"if ( sscanf ( end , ""%d"" , & Width ) != 1 || Width <= 0 || Width > 0x4000 )"		389525	0					
ANR	389885	Condition	"sscanf ( end , ""%d"" , & Width ) != 1 || Width <= 0 || Width > 0x4000"	170:16:5096:5173	389525	0	True				
ANR	389886	OrExpression	"sscanf ( end , ""%d"" , & Width ) != 1 || Width <= 0 || Width > 0x4000"		389525	0		||			
ANR	389887	EqualityExpression	"sscanf ( end , ""%d"" , & Width ) != 1"		389525	0		!=			
ANR	389888	CallExpression	"sscanf ( end , ""%d"" , & Width )"		389525	0					
ANR	389889	Callee	sscanf		389525	0					
ANR	389890	Identifier	sscanf		389525	0					
ANR	389891	ArgumentList	end		389525	1					
ANR	389892	Argument	end		389525	0					
ANR	389893	Identifier	end		389525	0					
ANR	389894	Argument	"""%d"""		389525	1					
ANR	389895	PrimaryExpression	"""%d"""		389525	0					
ANR	389896	Argument	& Width		389525	2					
ANR	389897	UnaryOperationExpression	& Width		389525	0					
ANR	389898	UnaryOperator	&		389525	0					
ANR	389899	Identifier	Width		389525	1					
ANR	389900	PrimaryExpression	1		389525	1					
ANR	389901	OrExpression	Width <= 0 || Width > 0x4000		389525	1		||			
ANR	389902	RelationalExpression	Width <= 0		389525	0		<=			
ANR	389903	Identifier	Width		389525	0					
ANR	389904	PrimaryExpression	0		389525	1					
ANR	389905	RelationalExpression	Width > 0x4000		389525	1		>			
ANR	389906	Identifier	Width		389525	0					
ANR	389907	PrimaryExpression	0x4000		389525	1					
ANR	389908	CompoundStatement		63:18:1858:1858	389525	1					
ANR	389909	ExpressionStatement	"fprintf ( stderr , ""Invalid Width: %s\\n"" , end )"	173:16:5211:5254	389525	0	True				
ANR	389910	CallExpression	"fprintf ( stderr , ""Invalid Width: %s\\n"" , end )"		389525	0					
ANR	389911	Callee	fprintf		389525	0					
ANR	389912	Identifier	fprintf		389525	0					
ANR	389913	ArgumentList	stderr		389525	1					
ANR	389914	Argument	stderr		389525	0					
ANR	389915	Identifier	stderr		389525	0					
ANR	389916	Argument	"""Invalid Width: %s\\n"""		389525	1					
ANR	389917	PrimaryExpression	"""Invalid Width: %s\\n"""		389525	0					
ANR	389918	Argument	end		389525	2					
ANR	389919	Identifier	end		389525	0					
ANR	389920	ReturnStatement	return - 1 ;	174:16:5272:5281	389525	1	True				
ANR	389921	UnaryOperationExpression	- 1		389525	0					
ANR	389922	UnaryOperator	-		389525	0					
ANR	389923	PrimaryExpression	1		389525	1					
ANR	389924	ElseStatement	else		389525	0					
ANR	389925	IfStatement	"if ( ! strcmp ( line , ""Height"" ) )"		389525	0					
ANR	389926	Condition	"! strcmp ( line , ""Height"" )"	176:19:5316:5338	389525	0	True				
ANR	389927	UnaryOperationExpression	"! strcmp ( line , ""Height"" )"		389525	0					
ANR	389928	UnaryOperator	!		389525	0					
ANR	389929	CallExpression	"strcmp ( line , ""Height"" )"		389525	1					
ANR	389930	Callee	strcmp		389525	0					
ANR	389931	Identifier	strcmp		389525	0					
ANR	389932	ArgumentList	line		389525	1					
ANR	389933	Argument	line		389525	0					
ANR	389934	Identifier	line		389525	0					
ANR	389935	Argument	"""Height"""		389525	1					
ANR	389936	PrimaryExpression	"""Height"""		389525	0					
ANR	389937	CompoundStatement		67:44:2006:2006	389525	1					
ANR	389938	IfStatement	"if ( sscanf ( end , ""%d"" , & Height ) != 1 || Height <= 0 || Height > 0x4000 )"		389525	0					
ANR	389939	Condition	"sscanf ( end , ""%d"" , & Height ) != 1 || Height <= 0 || Height > 0x4000"	177:16:5359:5439	389525	0	True				
ANR	389940	OrExpression	"sscanf ( end , ""%d"" , & Height ) != 1 || Height <= 0 || Height > 0x4000"		389525	0		||			
ANR	389941	EqualityExpression	"sscanf ( end , ""%d"" , & Height ) != 1"		389525	0		!=			
ANR	389942	CallExpression	"sscanf ( end , ""%d"" , & Height )"		389525	0					
ANR	389943	Callee	sscanf		389525	0					
ANR	389944	Identifier	sscanf		389525	0					
ANR	389945	ArgumentList	end		389525	1					
ANR	389946	Argument	end		389525	0					
ANR	389947	Identifier	end		389525	0					
ANR	389948	Argument	"""%d"""		389525	1					
ANR	389949	PrimaryExpression	"""%d"""		389525	0					
ANR	389950	Argument	& Height		389525	2					
ANR	389951	UnaryOperationExpression	& Height		389525	0					
ANR	389952	UnaryOperator	&		389525	0					
ANR	389953	Identifier	Height		389525	1					
ANR	389954	PrimaryExpression	1		389525	1					
ANR	389955	OrExpression	Height <= 0 || Height > 0x4000		389525	1		||			
ANR	389956	RelationalExpression	Height <= 0		389525	0		<=			
ANR	389957	Identifier	Height		389525	0					
ANR	389958	PrimaryExpression	0		389525	1					
ANR	389959	RelationalExpression	Height > 0x4000		389525	1		>			
ANR	389960	Identifier	Height		389525	0					
ANR	389961	PrimaryExpression	0x4000		389525	1					
ANR	389962	CompoundStatement		70:18:2124:2124	389525	1					
ANR	389963	ExpressionStatement	"fprintf ( stderr , ""Invalid Height: %s\\n"" , end )"	180:16:5477:5521	389525	0	True				
ANR	389964	CallExpression	"fprintf ( stderr , ""Invalid Height: %s\\n"" , end )"		389525	0					
ANR	389965	Callee	fprintf		389525	0					
ANR	389966	Identifier	fprintf		389525	0					
ANR	389967	ArgumentList	stderr		389525	1					
ANR	389968	Argument	stderr		389525	0					
ANR	389969	Identifier	stderr		389525	0					
ANR	389970	Argument	"""Invalid Height: %s\\n"""		389525	1					
ANR	389971	PrimaryExpression	"""Invalid Height: %s\\n"""		389525	0					
ANR	389972	Argument	end		389525	2					
ANR	389973	Identifier	end		389525	0					
ANR	389974	ReturnStatement	return - 1 ;	181:16:5539:5548	389525	1	True				
ANR	389975	UnaryOperationExpression	- 1		389525	0					
ANR	389976	UnaryOperator	-		389525	0					
ANR	389977	PrimaryExpression	1		389525	1					
ANR	389978	ElseStatement	else		389525	0					
ANR	389979	IfStatement	"if ( ! strcmp ( line , ""Thresholds"" ) )"		389525	0					
ANR	389980	Condition	"! strcmp ( line , ""Thresholds"" )"	183:19:5583:5609	389525	0	True				
ANR	389981	UnaryOperationExpression	"! strcmp ( line , ""Thresholds"" )"		389525	0					
ANR	389982	UnaryOperator	!		389525	0					
ANR	389983	CallExpression	"strcmp ( line , ""Thresholds"" )"		389525	1					
ANR	389984	Callee	strcmp		389525	0					
ANR	389985	Identifier	strcmp		389525	0					
ANR	389986	ArgumentList	line		389525	1					
ANR	389987	Argument	line		389525	0					
ANR	389988	Identifier	line		389525	0					
ANR	389989	Argument	"""Thresholds"""		389525	1					
ANR	389990	PrimaryExpression	"""Thresholds"""		389525	0					
ANR	389991	CompoundStatement		80:12:2496:2517	389525	1					
ANR	389992	IdentifierDeclStatement	uint ignore ;	184:12:5626:5637	389525	0	True				
ANR	389993	IdentifierDecl	ignore		389525	0					
ANR	389994	IdentifierDeclType	uint		389525	0					
ANR	389995	Identifier	ignore		389525	1					
ANR	389996	IdentifierDeclStatement	uint num_levels = 256 ;	185:12:5651:5672	389525	1	True				
ANR	389997	IdentifierDecl	num_levels = 256		389525	0					
ANR	389998	IdentifierDeclType	uint		389525	0					
ANR	389999	Identifier	num_levels		389525	1					
ANR	390000	AssignmentExpression	num_levels = 256		389525	2		=			
ANR	390001	Identifier	num_levels		389525	0					
ANR	390002	PrimaryExpression	256		389525	1					
ANR	390003	IdentifierDeclStatement	uint num_bits = Width * Height ;	186:12:5686:5716	389525	2	True				
ANR	390004	IdentifierDecl	num_bits = Width * Height		389525	0					
ANR	390005	IdentifierDeclType	uint		389525	0					
ANR	390006	Identifier	num_bits		389525	1					
ANR	390007	AssignmentExpression	num_bits = Width * Height		389525	2		=			
ANR	390008	Identifier	num_bits		389525	0					
ANR	390009	MultiplicativeExpression	Width * Height		389525	1		*			
ANR	390010	Identifier	Width		389525	0					
ANR	390011	Identifier	Height		389525	1					
ANR	390012	IdentifierDeclStatement	char * eol = end + strlen ( end ) ;	187:12:5730:5759	389525	3	True				
ANR	390013	IdentifierDecl	* eol = end + strlen ( end )		389525	0					
ANR	390014	IdentifierDeclType	char *		389525	0					
ANR	390015	Identifier	eol		389525	1					
ANR	390016	AssignmentExpression	* eol = end + strlen ( end )		389525	2		=			
ANR	390017	Identifier	eol		389525	0					
ANR	390018	AdditiveExpression	end + strlen ( end )		389525	1		+			
ANR	390019	Identifier	end		389525	0					
ANR	390020	CallExpression	strlen ( end )		389525	1					
ANR	390021	Callee	strlen		389525	0					
ANR	390022	Identifier	strlen		389525	0					
ANR	390023	ArgumentList	end		389525	1					
ANR	390024	Argument	end		389525	0					
ANR	390025	Identifier	end		389525	0					
ANR	390026	IdentifierDeclStatement	stream_cursor_read r ;	188:12:5797:5817	389525	4	True				
ANR	390027	IdentifierDecl	r		389525	0					
ANR	390028	IdentifierDeclType	stream_cursor_read		389525	0					
ANR	390029	Identifier	r		389525	1					
ANR	390030	IdentifierDeclStatement	stream_cursor_write w ;	189:12:5831:5852	389525	5	True				
ANR	390031	IdentifierDecl	w		389525	0					
ANR	390032	IdentifierDeclType	stream_cursor_write		389525	0					
ANR	390033	Identifier	w		389525	1					
ANR	390034	IfStatement	if ( Width < 0 || Height < 0 )		389525	6					
ANR	390035	Condition	Width < 0 || Height < 0	191:16:5871:5893	389525	0	True				
ANR	390036	OrExpression	Width < 0 || Height < 0		389525	0		||			
ANR	390037	RelationalExpression	Width < 0		389525	0		<			
ANR	390038	Identifier	Width		389525	0					
ANR	390039	PrimaryExpression	0		389525	1					
ANR	390040	RelationalExpression	Height < 0		389525	1		<			
ANR	390041	Identifier	Height		389525	0					
ANR	390042	PrimaryExpression	0		389525	1					
ANR	390043	CompoundStatement		82:41:2561:2561	389525	1					
ANR	390044	ExpressionStatement	"fprintf ( stderr , ""Width and Height must precede Thresholds.\\n"" )"	192:16:5914:5976	389525	0	True				
ANR	390045	CallExpression	"fprintf ( stderr , ""Width and Height must precede Thresholds.\\n"" )"		389525	0					
ANR	390046	Callee	fprintf		389525	0					
ANR	390047	Identifier	fprintf		389525	0					
ANR	390048	ArgumentList	stderr		389525	1					
ANR	390049	Argument	stderr		389525	0					
ANR	390050	Identifier	stderr		389525	0					
ANR	390051	Argument	"""Width and Height must precede Thresholds.\\n"""		389525	1					
ANR	390052	PrimaryExpression	"""Width and Height must precede Thresholds.\\n"""		389525	0					
ANR	390053	ReturnStatement	return - 1 ;	193:16:5994:6003	389525	1	True				
ANR	390054	UnaryOperationExpression	- 1		389525	0					
ANR	390055	UnaryOperator	-		389525	0					
ANR	390056	PrimaryExpression	1		389525	1					
ANR	390057	ExpressionStatement	phtr -> num_levels = num_levels	195:12:6031:6060	389525	7	True				
ANR	390058	AssignmentExpression	phtr -> num_levels = num_levels		389525	0		=			
ANR	390059	PtrMemberAccess	phtr -> num_levels		389525	0					
ANR	390060	Identifier	phtr		389525	0					
ANR	390061	Identifier	num_levels		389525	1					
ANR	390062	Identifier	num_levels		389525	1					
ANR	390063	ExpressionStatement	phtr -> levels = malloc ( num_levels * sizeof ( * phtr -> levels ) )	196:12:6074:6147	389525	8	True				
ANR	390064	AssignmentExpression	phtr -> levels = malloc ( num_levels * sizeof ( * phtr -> levels ) )		389525	0		=			
ANR	390065	PtrMemberAccess	phtr -> levels		389525	0					
ANR	390066	Identifier	phtr		389525	0					
ANR	390067	Identifier	levels		389525	1					
ANR	390068	CallExpression	malloc ( num_levels * sizeof ( * phtr -> levels ) )		389525	1					
ANR	390069	Callee	malloc		389525	0					
ANR	390070	Identifier	malloc		389525	0					
ANR	390071	ArgumentList	num_levels * sizeof ( * phtr -> levels )		389525	1					
ANR	390072	Argument	num_levels * sizeof ( * phtr -> levels )		389525	0					
ANR	390073	MultiplicativeExpression	num_levels * sizeof ( * phtr -> levels )		389525	0		*			
ANR	390074	Identifier	num_levels		389525	0					
ANR	390075	SizeofExpression	sizeof ( * phtr -> levels )		389525	1					
ANR	390076	Sizeof	sizeof		389525	0					
ANR	390077	UnaryOperationExpression	* phtr -> levels		389525	1					
ANR	390078	UnaryOperator	*		389525	0					
ANR	390079	PtrMemberAccess	phtr -> levels		389525	1					
ANR	390080	Identifier	phtr		389525	0					
ANR	390081	Identifier	levels		389525	1					
ANR	390082	ExpressionStatement	phtr -> bit_data = malloc ( num_bits * sizeof ( ushort ) )	198:12:6161:6227	389525	9	True				
ANR	390083	AssignmentExpression	phtr -> bit_data = malloc ( num_bits * sizeof ( ushort ) )		389525	0		=			
ANR	390084	PtrMemberAccess	phtr -> bit_data		389525	0					
ANR	390085	Identifier	phtr		389525	0					
ANR	390086	Identifier	bit_data		389525	1					
ANR	390087	CallExpression	malloc ( num_bits * sizeof ( ushort ) )		389525	1					
ANR	390088	Callee	malloc		389525	0					
ANR	390089	Identifier	malloc		389525	0					
ANR	390090	ArgumentList	num_bits * sizeof ( ushort )		389525	1					
ANR	390091	Argument	num_bits * sizeof ( ushort )		389525	0					
ANR	390092	MultiplicativeExpression	num_bits * sizeof ( ushort )		389525	0		*			
ANR	390093	Identifier	num_bits		389525	0					
ANR	390094	SizeofExpression	sizeof ( ushort )		389525	1					
ANR	390095	Sizeof	sizeof		389525	0					
ANR	390096	SizeofOperand	ushort		389525	1					
ANR	390097	ExpressionStatement	Thresholds = malloc ( num_bits )	200:12:6241:6270	389525	10	True				
ANR	390098	AssignmentExpression	Thresholds = malloc ( num_bits )		389525	0		=			
ANR	390099	Identifier	Thresholds		389525	0					
ANR	390100	CallExpression	malloc ( num_bits )		389525	1					
ANR	390101	Callee	malloc		389525	0					
ANR	390102	Identifier	malloc		389525	0					
ANR	390103	ArgumentList	num_bits		389525	1					
ANR	390104	Argument	num_bits		389525	0					
ANR	390105	Identifier	num_bits		389525	0					
ANR	390106	ExpressionStatement	( void ) s_AXD_init_inline ( & ss )	201:12:6284:6312	389525	11	True				
ANR	390107	CastExpression	( void ) s_AXD_init_inline ( & ss )		389525	0					
ANR	390108	CastTarget	void		389525	0					
ANR	390109	CallExpression	s_AXD_init_inline ( & ss )		389525	1					
ANR	390110	Callee	s_AXD_init_inline		389525	0					
ANR	390111	Identifier	s_AXD_init_inline		389525	0					
ANR	390112	ArgumentList	& ss		389525	1					
ANR	390113	Argument	& ss		389525	0					
ANR	390114	UnaryOperationExpression	& ss		389525	0					
ANR	390115	UnaryOperator	&		389525	0					
ANR	390116	Identifier	ss		389525	1					
ANR	390117	ExpressionStatement	r . ptr = ( const byte * ) eol	202:12:6326:6351	389525	12	True				
ANR	390118	AssignmentExpression	r . ptr = ( const byte * ) eol		389525	0		=			
ANR	390119	MemberAccess	r . ptr		389525	0					
ANR	390120	Identifier	r		389525	0					
ANR	390121	Identifier	ptr		389525	1					
ANR	390122	CastExpression	( const byte * ) eol		389525	1					
ANR	390123	CastTarget	const byte *		389525	0					
ANR	390124	Identifier	eol		389525	1					
ANR	390125	ExpressionStatement	r . limit = ( const byte * ) eol + strlen ( eol + 1 )	203:12:6365:6410	389525	13	True				
ANR	390126	AssignmentExpression	r . limit = ( const byte * ) eol + strlen ( eol + 1 )		389525	0		=			
ANR	390127	MemberAccess	r . limit		389525	0					
ANR	390128	Identifier	r		389525	0					
ANR	390129	Identifier	limit		389525	1					
ANR	390130	AdditiveExpression	( const byte * ) eol + strlen ( eol + 1 )		389525	1		+			
ANR	390131	CastExpression	( const byte * ) eol		389525	0					
ANR	390132	CastTarget	const byte *		389525	0					
ANR	390133	Identifier	eol		389525	1					
ANR	390134	CallExpression	strlen ( eol + 1 )		389525	1					
ANR	390135	Callee	strlen		389525	0					
ANR	390136	Identifier	strlen		389525	0					
ANR	390137	ArgumentList	eol + 1		389525	1					
ANR	390138	Argument	eol + 1		389525	0					
ANR	390139	AdditiveExpression	eol + 1		389525	0		+			
ANR	390140	Identifier	eol		389525	0					
ANR	390141	PrimaryExpression	1		389525	1					
ANR	390142	ExpressionStatement	w . ptr = Thresholds - 1	204:12:6424:6446	389525	14	True				
ANR	390143	AssignmentExpression	w . ptr = Thresholds - 1		389525	0		=			
ANR	390144	MemberAccess	w . ptr		389525	0					
ANR	390145	Identifier	w		389525	0					
ANR	390146	Identifier	ptr		389525	1					
ANR	390147	AdditiveExpression	Thresholds - 1		389525	1		-			
ANR	390148	Identifier	Thresholds		389525	0					
ANR	390149	PrimaryExpression	1		389525	1					
ANR	390150	ExpressionStatement	w . limit = w . ptr + num_bits	205:12:6460:6486	389525	15	True				
ANR	390151	AssignmentExpression	w . limit = w . ptr + num_bits		389525	0		=			
ANR	390152	MemberAccess	w . limit		389525	0					
ANR	390153	Identifier	w		389525	0					
ANR	390154	Identifier	limit		389525	1					
ANR	390155	AdditiveExpression	w . ptr + num_bits		389525	1		+			
ANR	390156	MemberAccess	w . ptr		389525	0					
ANR	390157	Identifier	w		389525	0					
ANR	390158	Identifier	ptr		389525	1					
ANR	390159	Identifier	num_bits		389525	1					
ANR	390160	ExpressionStatement	"s_AXD_template . process ( ( stream_state * ) & ss , & r , & w , true )"	206:12:6500:6557	389525	16	True				
ANR	390161	CallExpression	"s_AXD_template . process ( ( stream_state * ) & ss , & r , & w , true )"		389525	0					
ANR	390162	Callee	s_AXD_template . process		389525	0					
ANR	390163	MemberAccess	s_AXD_template . process		389525	0					
ANR	390164	Identifier	s_AXD_template		389525	0					
ANR	390165	Identifier	process		389525	1					
ANR	390166	ArgumentList	( stream_state * ) & ss		389525	1					
ANR	390167	Argument	( stream_state * ) & ss		389525	0					
ANR	390168	CastExpression	( stream_state * ) & ss		389525	0					
ANR	390169	CastTarget	stream_state *		389525	0					
ANR	390170	UnaryOperationExpression	& ss		389525	1					
ANR	390171	UnaryOperator	&		389525	0					
ANR	390172	Identifier	ss		389525	1					
ANR	390173	Argument	& r		389525	1					
ANR	390174	UnaryOperationExpression	& r		389525	0					
ANR	390175	UnaryOperator	&		389525	0					
ANR	390176	Identifier	r		389525	1					
ANR	390177	Argument	& w		389525	2					
ANR	390178	UnaryOperationExpression	& w		389525	0					
ANR	390179	UnaryOperator	&		389525	0					
ANR	390180	Identifier	w		389525	1					
ANR	390181	Argument	true		389525	3					
ANR	390182	Identifier	true		389525	0					
ANR	390183	ExpressionStatement	str = ( char * ) r . ptr + 1	207:12:6571:6594	389525	17	True				
ANR	390184	AssignmentExpression	str = ( char * ) r . ptr + 1		389525	0		=			
ANR	390185	Identifier	str		389525	0					
ANR	390186	AdditiveExpression	( char * ) r . ptr + 1		389525	1		+			
ANR	390187	CastExpression	( char * ) r . ptr		389525	0					
ANR	390188	CastTarget	char *		389525	0					
ANR	390189	MemberAccess	r . ptr		389525	1					
ANR	390190	Identifier	r		389525	0					
ANR	390191	Identifier	ptr		389525	1					
ANR	390192	PrimaryExpression	1		389525	1					
ANR	390193	BreakStatement	break ;	208:12:6608:6613	389525	18	True				
ANR	390194	IfStatement	if ( rname == 0 )		389525	8					
ANR	390195	Condition	rname == 0	213:8:6680:6689	389525	0	True				
ANR	390196	EqualityExpression	rname == 0		389525	0		==			
ANR	390197	Identifier	rname		389525	0					
ANR	390198	PrimaryExpression	0		389525	1					
ANR	390199	ReturnStatement	return 1 ;	214:8:6700:6708	389525	1	True				
ANR	390200	PrimaryExpression	1		389525	0					
ANR	390201	IfStatement	if ( HalftoneType < 0 )		389525	9					
ANR	390202	Condition	HalftoneType < 0	215:8:6744:6759	389525	0	True				
ANR	390203	RelationalExpression	HalftoneType < 0		389525	0		<			
ANR	390204	Identifier	HalftoneType		389525	0					
ANR	390205	PrimaryExpression	0		389525	1					
ANR	390206	ExpressionStatement	"fprintf ( stderr , ""HalftoneType not found.\\n"" )"	216:8:6770:6814	389525	1	True				
ANR	390207	CallExpression	"fprintf ( stderr , ""HalftoneType not found.\\n"" )"		389525	0					
ANR	390208	Callee	fprintf		389525	0					
ANR	390209	Identifier	fprintf		389525	0					
ANR	390210	ArgumentList	stderr		389525	1					
ANR	390211	Argument	stderr		389525	0					
ANR	390212	Identifier	stderr		389525	0					
ANR	390213	Argument	"""HalftoneType not found.\\n"""		389525	1					
ANR	390214	PrimaryExpression	"""HalftoneType not found.\\n"""		389525	0					
ANR	390215	IfStatement	if ( Width < 0 )		389525	10					
ANR	390216	Condition	Width < 0	217:8:6824:6832	389525	0	True				
ANR	390217	RelationalExpression	Width < 0		389525	0		<			
ANR	390218	Identifier	Width		389525	0					
ANR	390219	PrimaryExpression	0		389525	1					
ANR	390220	ExpressionStatement	"fprintf ( stderr , ""Width not found.\\n"" )"	218:8:6843:6880	389525	1	True				
ANR	390221	CallExpression	"fprintf ( stderr , ""Width not found.\\n"" )"		389525	0					
ANR	390222	Callee	fprintf		389525	0					
ANR	390223	Identifier	fprintf		389525	0					
ANR	390224	ArgumentList	stderr		389525	1					
ANR	390225	Argument	stderr		389525	0					
ANR	390226	Identifier	stderr		389525	0					
ANR	390227	Argument	"""Width not found.\\n"""		389525	1					
ANR	390228	PrimaryExpression	"""Width not found.\\n"""		389525	0					
ANR	390229	IfStatement	if ( Height < 0 )		389525	11					
ANR	390230	Condition	Height < 0	219:8:6890:6899	389525	0	True				
ANR	390231	RelationalExpression	Height < 0		389525	0		<			
ANR	390232	Identifier	Height		389525	0					
ANR	390233	PrimaryExpression	0		389525	1					
ANR	390234	ExpressionStatement	"fprintf ( stderr , ""Height not found.\\n"" )"	220:8:6910:6948	389525	1	True				
ANR	390235	CallExpression	"fprintf ( stderr , ""Height not found.\\n"" )"		389525	0					
ANR	390236	Callee	fprintf		389525	0					
ANR	390237	Identifier	fprintf		389525	0					
ANR	390238	ArgumentList	stderr		389525	1					
ANR	390239	Argument	stderr		389525	0					
ANR	390240	Identifier	stderr		389525	0					
ANR	390241	Argument	"""Height not found.\\n"""		389525	1					
ANR	390242	PrimaryExpression	"""Height not found.\\n"""		389525	0					
ANR	390243	IfStatement	if ( Thresholds == 0 )		389525	12					
ANR	390244	Condition	Thresholds == 0	221:8:6958:6972	389525	0	True				
ANR	390245	EqualityExpression	Thresholds == 0		389525	0		==			
ANR	390246	Identifier	Thresholds		389525	0					
ANR	390247	PrimaryExpression	0		389525	1					
ANR	390248	ExpressionStatement	"fprintf ( stderr , ""Thresholds not found.\\n"" )"	222:8:6983:7025	389525	1	True				
ANR	390249	CallExpression	"fprintf ( stderr , ""Thresholds not found.\\n"" )"		389525	0					
ANR	390250	Callee	fprintf		389525	0					
ANR	390251	Identifier	fprintf		389525	0					
ANR	390252	ArgumentList	stderr		389525	1					
ANR	390253	Argument	stderr		389525	0					
ANR	390254	Identifier	stderr		389525	0					
ANR	390255	Argument	"""Thresholds not found.\\n"""		389525	1					
ANR	390256	PrimaryExpression	"""Thresholds not found.\\n"""		389525	0					
ANR	390257	IfStatement	if ( rname == 0 || Thresholds == 0 )		389525	13					
ANR	390258	Condition	rname == 0 || Thresholds == 0	223:8:7035:7063	389525	0	True				
ANR	390259	OrExpression	rname == 0 || Thresholds == 0		389525	0		||			
ANR	390260	EqualityExpression	rname == 0		389525	0		==			
ANR	390261	Identifier	rname		389525	0					
ANR	390262	PrimaryExpression	0		389525	1					
ANR	390263	EqualityExpression	Thresholds == 0		389525	1		==			
ANR	390264	Identifier	Thresholds		389525	0					
ANR	390265	PrimaryExpression	0		389525	1					
ANR	390266	ReturnStatement	return - 1 ;	224:8:7074:7083	389525	1	True				
ANR	390267	UnaryOperationExpression	- 1		389525	0					
ANR	390268	UnaryOperator	-		389525	0					
ANR	390269	PrimaryExpression	1		389525	1					
ANR	390270	ExpressionStatement	phtr -> rname = rname	225:4:7089:7108	389525	14	True				
ANR	390271	AssignmentExpression	phtr -> rname = rname		389525	0		=			
ANR	390272	PtrMemberAccess	phtr -> rname		389525	0					
ANR	390273	Identifier	phtr		389525	0					
ANR	390274	Identifier	rname		389525	1					
ANR	390275	Identifier	rname		389525	1					
ANR	390276	ExpressionStatement	phtr -> HalftoneType = HalftoneType	226:4:7114:7147	389525	15	True				
ANR	390277	AssignmentExpression	phtr -> HalftoneType = HalftoneType		389525	0		=			
ANR	390278	PtrMemberAccess	phtr -> HalftoneType		389525	0					
ANR	390279	Identifier	phtr		389525	0					
ANR	390280	Identifier	HalftoneType		389525	1					
ANR	390281	Identifier	HalftoneType		389525	1					
ANR	390282	ExpressionStatement	phtr -> Width = Width	227:4:7153:7172	389525	16	True				
ANR	390283	AssignmentExpression	phtr -> Width = Width		389525	0		=			
ANR	390284	PtrMemberAccess	phtr -> Width		389525	0					
ANR	390285	Identifier	phtr		389525	0					
ANR	390286	Identifier	Width		389525	1					
ANR	390287	Identifier	Width		389525	1					
ANR	390288	ExpressionStatement	phtr -> Height = Height	228:4:7178:7199	389525	17	True				
ANR	390289	AssignmentExpression	phtr -> Height = Height		389525	0		=			
ANR	390290	PtrMemberAccess	phtr -> Height		389525	0					
ANR	390291	Identifier	phtr		389525	0					
ANR	390292	Identifier	Height		389525	1					
ANR	390293	Identifier	Height		389525	1					
ANR	390294	ExpressionStatement	* pThresholds = Thresholds	229:4:7205:7230	389525	18	True				
ANR	390295	AssignmentExpression	* pThresholds = Thresholds		389525	0		=			
ANR	390296	UnaryOperationExpression	* pThresholds		389525	0					
ANR	390297	UnaryOperator	*		389525	0					
ANR	390298	Identifier	pThresholds		389525	1					
ANR	390299	Identifier	Thresholds		389525	1					
ANR	390300	ExpressionStatement	* pcont = str	230:4:7236:7248	389525	19	True				
ANR	390301	AssignmentExpression	* pcont = str		389525	0		=			
ANR	390302	UnaryOperationExpression	* pcont		389525	0					
ANR	390303	UnaryOperator	*		389525	0					
ANR	390304	Identifier	pcont		389525	1					
ANR	390305	Identifier	str		389525	1					
ANR	390306	ReturnStatement	return 0 ;	231:4:7254:7262	389525	20	True				
ANR	390307	PrimaryExpression	0		389525	0					
ANR	390308	ReturnType	static int		389525	1					
ANR	390309	Identifier	parse_halftone		389525	2					
ANR	390310	ParameterList	"gx_device_halftone_resource_t * phtr , byte * * pThresholds , char * * pprefix , char * * pcont"		389525	3					
ANR	390311	Parameter	gx_device_halftone_resource_t * phtr	108:15:3232:3266	389525	0	True				
ANR	390312	ParameterType	gx_device_halftone_resource_t *		389525	0					
ANR	390313	Identifier	phtr		389525	1					
ANR	390314	Parameter	byte * * pThresholds	108:52:3269:3286	389525	1	True				
ANR	390315	ParameterType	byte * *		389525	0					
ANR	390316	Identifier	pThresholds		389525	1					
ANR	390317	Parameter	char * * pprefix	109:15:3304:3317	389525	2	True				
ANR	390318	ParameterType	char * *		389525	0					
ANR	390319	Identifier	pprefix		389525	1					
ANR	390320	Parameter	char * * pcont	109:31:3320:3331	389525	3	True				
ANR	390321	ParameterType	char * *		389525	0					
ANR	390322	Identifier	pcont		389525	1					
ANR	390323	CFGEntryNode	ENTRY		389525		True				
ANR	390324	CFGExitNode	EXIT		389525		True				
ANR	390325	Symbol	eol		389525						
ANR	390326	Symbol	rname		389525						
ANR	390327	Symbol	prefix		389525						
ANR	390328	Symbol	phtr -> bit_data		389525						
ANR	390329	Symbol	parse_line		389525						
ANR	390330	Symbol	strchr		389525						
ANR	390331	Symbol	* line		389525						
ANR	390332	Symbol	& ss		389525						
ANR	390333	Symbol	* phtr		389525						
ANR	390334	Symbol	& str		389525						
ANR	390335	Symbol	strlen		389525						
ANR	390336	Symbol	* pcont		389525						
ANR	390337	Symbol	terminator		389525						
ANR	390338	Symbol	strcmp		389525						
ANR	390339	Symbol	* pprefix		389525						
ANR	390340	Symbol	Thresholds		389525						
ANR	390341	Symbol	phtr -> levels		389525						
ANR	390342	Symbol	r . limit		389525						
ANR	390343	Symbol	& HalftoneType		389525						
ANR	390344	Symbol	w . ptr		389525						
ANR	390345	Symbol	stderr		389525						
ANR	390346	Symbol	phtr -> Width		389525						
ANR	390347	Symbol	str		389525						
ANR	390348	Symbol	w . limit		389525						
ANR	390349	Symbol	sscanf		389525						
ANR	390350	Symbol	true		389525						
ANR	390351	Symbol	HalftoneType		389525						
ANR	390352	Symbol	* * phtr		389525						
ANR	390353	Symbol	* end		389525						
ANR	390354	Symbol	phtr		389525						
ANR	390355	Symbol	pThresholds		389525						
ANR	390356	Symbol	s_AXD_template		389525						
ANR	390357	Symbol	line		389525						
ANR	390358	Symbol	* phtr -> levels		389525						
ANR	390359	Symbol	pprefix		389525						
ANR	390360	Symbol	& Height		389525						
ANR	390361	Symbol	phtr -> Height		389525						
ANR	390362	Symbol	phtr -> HalftoneType		389525						
ANR	390363	Symbol	ignore		389525						
ANR	390364	Symbol	Height		389525						
ANR	390365	Symbol	end		389525						
ANR	390366	Symbol	phtr -> num_levels		389525						
ANR	390367	Symbol	Width		389525						
ANR	390368	Symbol	ss		389525						
ANR	390369	Symbol	malloc		389525						
ANR	390370	Symbol	& line		389525						
ANR	390371	Symbol	* pThresholds		389525						
ANR	390372	Symbol	& Width		389525						
ANR	390373	Symbol	r		389525						
ANR	390374	Symbol	phtr -> rname		389525						
ANR	390375	Symbol	w		389525						
ANR	390376	Symbol	r . ptr		389525						
ANR	390377	Symbol	& r		389525						
ANR	390378	Symbol	pcont		389525						
ANR	390379	Symbol	num_bits		389525						
ANR	390380	Symbol	& w		389525						
ANR	390381	Symbol	num_levels		389525						
ANR	390382	Function	write_halftone	235:0:7308:8603							
ANR	390383	FunctionDef	"write_halftone (FILE * out , gx_device_halftone_resource_t * phtr , const char * prefix , int index)"		390382	0					
ANR	390384	CompoundStatement		238:0:7428:8603	390382	0					
ANR	390385	IdentifierDeclStatement	int num_bits = phtr -> Width * phtr -> Height ;	239:4:7434:7475	390382	0	True				
ANR	390386	IdentifierDecl	num_bits = phtr -> Width * phtr -> Height		390382	0					
ANR	390387	IdentifierDeclType	int		390382	0					
ANR	390388	Identifier	num_bits		390382	1					
ANR	390389	AssignmentExpression	num_bits = phtr -> Width * phtr -> Height		390382	2		=			
ANR	390390	Identifier	num_bits		390382	0					
ANR	390391	MultiplicativeExpression	phtr -> Width * phtr -> Height		390382	1		*			
ANR	390392	PtrMemberAccess	phtr -> Width		390382	0					
ANR	390393	Identifier	phtr		390382	0					
ANR	390394	Identifier	Width		390382	1					
ANR	390395	PtrMemberAccess	phtr -> Height		390382	1					
ANR	390396	Identifier	phtr		390382	0					
ANR	390397	Identifier	Height		390382	1					
ANR	390398	IdentifierDeclStatement	int i ;	240:4:7481:7486	390382	1	True				
ANR	390399	IdentifierDecl	i		390382	0					
ANR	390400	IdentifierDeclType	int		390382	0					
ANR	390401	Identifier	i		390382	1					
ANR	390402	ExpressionStatement	"fputs ( ""\\n/* "" , out )"	243:4:7530:7549	390382	2	True				
ANR	390403	CallExpression	"fputs ( ""\\n/* "" , out )"		390382	0					
ANR	390404	Callee	fputs		390382	0					
ANR	390405	Identifier	fputs		390382	0					
ANR	390406	ArgumentList	"""\\n/* """		390382	1					
ANR	390407	Argument	"""\\n/* """		390382	0					
ANR	390408	PrimaryExpression	"""\\n/* """		390382	0					
ANR	390409	Argument	out		390382	1					
ANR	390410	Identifier	out		390382	0					
ANR	390411	IfStatement	if ( prefix )		390382	3					
ANR	390412	Condition	prefix	244:8:7559:7564	390382	0	True				
ANR	390413	Identifier	prefix		390382	0					
ANR	390414	ExpressionStatement	"fprintf ( out , ""%s."" , prefix )"	245:8:7575:7602	390382	1	True				
ANR	390415	CallExpression	"fprintf ( out , ""%s."" , prefix )"		390382	0					
ANR	390416	Callee	fprintf		390382	0					
ANR	390417	Identifier	fprintf		390382	0					
ANR	390418	ArgumentList	out		390382	1					
ANR	390419	Argument	out		390382	0					
ANR	390420	Identifier	out		390382	0					
ANR	390421	Argument	"""%s."""		390382	1					
ANR	390422	PrimaryExpression	"""%s."""		390382	0					
ANR	390423	Argument	prefix		390382	2					
ANR	390424	Identifier	prefix		390382	0					
ANR	390425	ExpressionStatement	"fprintf ( out , ""%s */\\n"" , phtr -> rname )"	246:4:7608:7644	390382	4	True				
ANR	390426	CallExpression	"fprintf ( out , ""%s */\\n"" , phtr -> rname )"		390382	0					
ANR	390427	Callee	fprintf		390382	0					
ANR	390428	Identifier	fprintf		390382	0					
ANR	390429	ArgumentList	out		390382	1					
ANR	390430	Argument	out		390382	0					
ANR	390431	Identifier	out		390382	0					
ANR	390432	Argument	"""%s */\\n"""		390382	1					
ANR	390433	PrimaryExpression	"""%s */\\n"""		390382	0					
ANR	390434	Argument	phtr -> rname		390382	2					
ANR	390435	PtrMemberAccess	phtr -> rname		390382	0					
ANR	390436	Identifier	phtr		390382	0					
ANR	390437	Identifier	rname		390382	1					
ANR	390438	ExpressionStatement	"fprintf ( out , ""static const unsigned int levels_%d[] = {"" , index )"	249:4:7685:7749	390382	5	True				
ANR	390439	CallExpression	"fprintf ( out , ""static const unsigned int levels_%d[] = {"" , index )"		390382	0					
ANR	390440	Callee	fprintf		390382	0					
ANR	390441	Identifier	fprintf		390382	0					
ANR	390442	ArgumentList	out		390382	1					
ANR	390443	Argument	out		390382	0					
ANR	390444	Identifier	out		390382	0					
ANR	390445	Argument	"""static const unsigned int levels_%d[] = {"""		390382	1					
ANR	390446	PrimaryExpression	"""static const unsigned int levels_%d[] = {"""		390382	0					
ANR	390447	Argument	index		390382	2					
ANR	390448	Identifier	index		390382	0					
ANR	390449	ForStatement	for ( i = 0 ; i < phtr -> num_levels ; ++ i )		390382	6					
ANR	390450	ForInit	i = 0 ;	250:9:7760:7765	390382	0	True				
ANR	390451	AssignmentExpression	i = 0		390382	0		=			
ANR	390452	Identifier	i		390382	0					
ANR	390453	PrimaryExpression	0		390382	1					
ANR	390454	Condition	i < phtr -> num_levels	250:16:7767:7786	390382	1	True				
ANR	390455	RelationalExpression	i < phtr -> num_levels		390382	0		<			
ANR	390456	Identifier	i		390382	0					
ANR	390457	PtrMemberAccess	phtr -> num_levels		390382	1					
ANR	390458	Identifier	phtr		390382	0					
ANR	390459	Identifier	num_levels		390382	1					
ANR	390460	UnaryExpression	++ i	250:38:7789:7791	390382	2	True				
ANR	390461	IncDec	++		390382	0					
ANR	390462	Identifier	i		390382	1					
ANR	390463	CompoundStatement		13:43:365:365	390382	3					
ANR	390464	IfStatement	if ( i % 10 == 0 )		390382	0					
ANR	390465	Condition	i % 10 == 0	251:12:7808:7818	390382	0	True				
ANR	390466	EqualityExpression	i % 10 == 0		390382	0		==			
ANR	390467	MultiplicativeExpression	i % 10		390382	0		%			
ANR	390468	Identifier	i		390382	0					
ANR	390469	PrimaryExpression	10		390382	1					
ANR	390470	PrimaryExpression	0		390382	1					
ANR	390471	ExpressionStatement	"fputs ( ""\\n"" , out )"	252:12:7833:7849	390382	1	True				
ANR	390472	CallExpression	"fputs ( ""\\n"" , out )"		390382	0					
ANR	390473	Callee	fputs		390382	0					
ANR	390474	Identifier	fputs		390382	0					
ANR	390475	ArgumentList	"""\\n"""		390382	1					
ANR	390476	Argument	"""\\n"""		390382	0					
ANR	390477	PrimaryExpression	"""\\n"""		390382	0					
ANR	390478	Argument	out		390382	1					
ANR	390479	Identifier	out		390382	0					
ANR	390480	ExpressionStatement	"fprintf ( out , ""%5u,"" , phtr -> levels [ i ] )"	253:8:7859:7896	390382	1	True				
ANR	390481	CallExpression	"fprintf ( out , ""%5u,"" , phtr -> levels [ i ] )"		390382	0					
ANR	390482	Callee	fprintf		390382	0					
ANR	390483	Identifier	fprintf		390382	0					
ANR	390484	ArgumentList	out		390382	1					
ANR	390485	Argument	out		390382	0					
ANR	390486	Identifier	out		390382	0					
ANR	390487	Argument	"""%5u,"""		390382	1					
ANR	390488	PrimaryExpression	"""%5u,"""		390382	0					
ANR	390489	Argument	phtr -> levels [ i ]		390382	2					
ANR	390490	ArrayIndexing	phtr -> levels [ i ]		390382	0					
ANR	390491	PtrMemberAccess	phtr -> levels		390382	0					
ANR	390492	Identifier	phtr		390382	0					
ANR	390493	Identifier	levels		390382	1					
ANR	390494	Identifier	i		390382	1					
ANR	390495	ExpressionStatement	"fputs ( ""\\n0};\\n"" , out )"	255:4:7908:7929	390382	7	True				
ANR	390496	CallExpression	"fputs ( ""\\n0};\\n"" , out )"		390382	0					
ANR	390497	Callee	fputs		390382	0					
ANR	390498	Identifier	fputs		390382	0					
ANR	390499	ArgumentList	"""\\n0};\\n"""		390382	1					
ANR	390500	Argument	"""\\n0};\\n"""		390382	0					
ANR	390501	PrimaryExpression	"""\\n0};\\n"""		390382	0					
ANR	390502	Argument	out		390382	1					
ANR	390503	Identifier	out		390382	0					
ANR	390504	ExpressionStatement	"fprintf ( out , ""static const unsigned short bit_data_%d[] = {"" , index )"	258:4:7972:8040	390382	8	True				
ANR	390505	CallExpression	"fprintf ( out , ""static const unsigned short bit_data_%d[] = {"" , index )"		390382	0					
ANR	390506	Callee	fprintf		390382	0					
ANR	390507	Identifier	fprintf		390382	0					
ANR	390508	ArgumentList	out		390382	1					
ANR	390509	Argument	out		390382	0					
ANR	390510	Identifier	out		390382	0					
ANR	390511	Argument	"""static const unsigned short bit_data_%d[] = {"""		390382	1					
ANR	390512	PrimaryExpression	"""static const unsigned short bit_data_%d[] = {"""		390382	0					
ANR	390513	Argument	index		390382	2					
ANR	390514	Identifier	index		390382	0					
ANR	390515	ForStatement	for ( i = 0 ; i < num_bits ; ++ i )		390382	9					
ANR	390516	ForInit	i = 0 ;	259:9:8051:8056	390382	0	True				
ANR	390517	AssignmentExpression	i = 0		390382	0		=			
ANR	390518	Identifier	i		390382	0					
ANR	390519	PrimaryExpression	0		390382	1					
ANR	390520	Condition	i < num_bits	259:16:8058:8069	390382	1	True				
ANR	390521	RelationalExpression	i < num_bits		390382	0		<			
ANR	390522	Identifier	i		390382	0					
ANR	390523	Identifier	num_bits		390382	1					
ANR	390524	UnaryExpression	++ i	259:30:8072:8074	390382	2	True				
ANR	390525	IncDec	++		390382	0					
ANR	390526	Identifier	i		390382	1					
ANR	390527	CompoundStatement		22:35:648:648	390382	3					
ANR	390528	IfStatement	if ( i % 10 == 0 )		390382	0					
ANR	390529	Condition	i % 10 == 0	260:12:8091:8101	390382	0	True				
ANR	390530	EqualityExpression	i % 10 == 0		390382	0		==			
ANR	390531	MultiplicativeExpression	i % 10		390382	0		%			
ANR	390532	Identifier	i		390382	0					
ANR	390533	PrimaryExpression	10		390382	1					
ANR	390534	PrimaryExpression	0		390382	1					
ANR	390535	ExpressionStatement	"fputs ( ""\\n"" , out )"	261:12:8116:8132	390382	1	True				
ANR	390536	CallExpression	"fputs ( ""\\n"" , out )"		390382	0					
ANR	390537	Callee	fputs		390382	0					
ANR	390538	Identifier	fputs		390382	0					
ANR	390539	ArgumentList	"""\\n"""		390382	1					
ANR	390540	Argument	"""\\n"""		390382	0					
ANR	390541	PrimaryExpression	"""\\n"""		390382	0					
ANR	390542	Argument	out		390382	1					
ANR	390543	Identifier	out		390382	0					
ANR	390544	ExpressionStatement	"fprintf ( out , ""%5u,"" , ( ( const ushort * ) phtr -> bit_data ) [ i ] )"	262:8:8142:8199	390382	1	True				
ANR	390545	CallExpression	"fprintf ( out , ""%5u,"" , ( ( const ushort * ) phtr -> bit_data ) [ i ] )"		390382	0					
ANR	390546	Callee	fprintf		390382	0					
ANR	390547	Identifier	fprintf		390382	0					
ANR	390548	ArgumentList	out		390382	1					
ANR	390549	Argument	out		390382	0					
ANR	390550	Identifier	out		390382	0					
ANR	390551	Argument	"""%5u,"""		390382	1					
ANR	390552	PrimaryExpression	"""%5u,"""		390382	0					
ANR	390553	Argument	( ( const ushort * ) phtr -> bit_data ) [ i ]		390382	2					
ANR	390554	ArrayIndexing	( ( const ushort * ) phtr -> bit_data ) [ i ]		390382	0					
ANR	390555	CastExpression	( const ushort * ) phtr -> bit_data		390382	0					
ANR	390556	CastTarget	const ushort *		390382	0					
ANR	390557	PtrMemberAccess	phtr -> bit_data		390382	1					
ANR	390558	Identifier	phtr		390382	0					
ANR	390559	Identifier	bit_data		390382	1					
ANR	390560	Identifier	i		390382	1					
ANR	390561	ExpressionStatement	"fputs ( ""\\n0};\\n"" , out )"	264:4:8211:8232	390382	10	True				
ANR	390562	CallExpression	"fputs ( ""\\n0};\\n"" , out )"		390382	0					
ANR	390563	Callee	fputs		390382	0					
ANR	390564	Identifier	fputs		390382	0					
ANR	390565	ArgumentList	"""\\n0};\\n"""		390382	1					
ANR	390566	Argument	"""\\n0};\\n"""		390382	0					
ANR	390567	PrimaryExpression	"""\\n0};\\n"""		390382	0					
ANR	390568	Argument	out		390382	1					
ANR	390569	Identifier	out		390382	0					
ANR	390570	ExpressionStatement	"fprintf ( out , ""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"" , index , phtr -> rname , phtr -> HalftoneType , phtr -> Width , phtr -> Height , phtr -> num_levels , index , index , ht_order_procs_short . bit_data_elt_size )"	267:4:8280:8586	390382	11	True				
ANR	390571	CallExpression	"fprintf ( out , ""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"" , index , phtr -> rname , phtr -> HalftoneType , phtr -> Width , phtr -> Height , phtr -> num_levels , index , index , ht_order_procs_short . bit_data_elt_size )"		390382	0					
ANR	390572	Callee	fprintf		390382	0					
ANR	390573	Identifier	fprintf		390382	0					
ANR	390574	ArgumentList	out		390382	1					
ANR	390575	Argument	out		390382	0					
ANR	390576	Identifier	out		390382	0					
ANR	390577	Argument	"""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"""		390382	1					
ANR	390578	PrimaryExpression	"""static const gx_device_halftone_resource_t res_%d = {\\n    \\""%s\\"", %d, %d, %d, %d, levels_%d, bit_data_%d, %u\\n};\\n"""		390382	0					
ANR	390579	Argument	index		390382	2					
ANR	390580	Identifier	index		390382	0					
ANR	390581	Argument	phtr -> rname		390382	3					
ANR	390582	PtrMemberAccess	phtr -> rname		390382	0					
ANR	390583	Identifier	phtr		390382	0					
ANR	390584	Identifier	rname		390382	1					
ANR	390585	Argument	phtr -> HalftoneType		390382	4					
ANR	390586	PtrMemberAccess	phtr -> HalftoneType		390382	0					
ANR	390587	Identifier	phtr		390382	0					
ANR	390588	Identifier	HalftoneType		390382	1					
ANR	390589	Argument	phtr -> Width		390382	5					
ANR	390590	PtrMemberAccess	phtr -> Width		390382	0					
ANR	390591	Identifier	phtr		390382	0					
ANR	390592	Identifier	Width		390382	1					
ANR	390593	Argument	phtr -> Height		390382	6					
ANR	390594	PtrMemberAccess	phtr -> Height		390382	0					
ANR	390595	Identifier	phtr		390382	0					
ANR	390596	Identifier	Height		390382	1					
ANR	390597	Argument	phtr -> num_levels		390382	7					
ANR	390598	PtrMemberAccess	phtr -> num_levels		390382	0					
ANR	390599	Identifier	phtr		390382	0					
ANR	390600	Identifier	num_levels		390382	1					
ANR	390601	Argument	index		390382	8					
ANR	390602	Identifier	index		390382	0					
ANR	390603	Argument	index		390382	9					
ANR	390604	Identifier	index		390382	0					
ANR	390605	Argument	ht_order_procs_short . bit_data_elt_size		390382	10					
ANR	390606	MemberAccess	ht_order_procs_short . bit_data_elt_size		390382	0					
ANR	390607	Identifier	ht_order_procs_short		390382	0					
ANR	390608	Identifier	bit_data_elt_size		390382	1					
ANR	390609	ReturnStatement	return 0 ;	272:4:8593:8601	390382	12	True				
ANR	390610	PrimaryExpression	0		390382	0					
ANR	390611	ReturnType	static int		390382	1					
ANR	390612	Identifier	write_halftone		390382	2					
ANR	390613	ParameterList	"FILE * out , gx_device_halftone_resource_t * phtr , const char * prefix , int index"		390382	3					
ANR	390614	Parameter	FILE * out	236:15:7334:7342	390382	0	True				
ANR	390615	ParameterType	FILE *		390382	0					
ANR	390616	Identifier	out		390382	1					
ANR	390617	Parameter	gx_device_halftone_resource_t * phtr	236:26:7345:7379	390382	1	True				
ANR	390618	ParameterType	gx_device_halftone_resource_t *		390382	0					
ANR	390619	Identifier	phtr		390382	1					
ANR	390620	Parameter	const char * prefix	237:15:7397:7414	390382	2	True				
ANR	390621	ParameterType	const char *		390382	0					
ANR	390622	Identifier	prefix		390382	1					
ANR	390623	Parameter	int index	237:35:7417:7425	390382	3	True				
ANR	390624	ParameterType	int		390382	0					
ANR	390625	Identifier	index		390382	1					
ANR	390626	CFGEntryNode	ENTRY		390382		True				
ANR	390627	CFGExitNode	EXIT		390382		True				
ANR	390628	Symbol	phtr		390382						
ANR	390629	Symbol	* phtr -> bit_data		390382						
ANR	390630	Symbol	phtr -> levels		390382						
ANR	390631	Symbol	prefix		390382						
ANR	390632	Symbol	* phtr -> levels		390382						
ANR	390633	Symbol	phtr -> bit_data		390382						
ANR	390634	Symbol	index		390382						
ANR	390635	Symbol	i		390382						
ANR	390636	Symbol	ht_order_procs_short		390382						
ANR	390637	Symbol	* phtr		390382						
ANR	390638	Symbol	out		390382						
ANR	390639	Symbol	phtr -> Width		390382						
ANR	390640	Symbol	phtr -> Height		390382						
ANR	390641	Symbol	* i		390382						
ANR	390642	Symbol	phtr -> HalftoneType		390382						
ANR	390643	Symbol	phtr -> rname		390382						
ANR	390644	Symbol	ht_order_procs_short . bit_data_elt_size		390382						
ANR	390645	Symbol	* * phtr		390382						
ANR	390646	Symbol	phtr -> num_levels		390382						
ANR	390647	Symbol	num_bits		390382						
ANR	390648	Function	main	276:0:8625:10855							
ANR	390649	FunctionDef	"main (int argc , char * argv [ ])"		390648	0					
ANR	390650	CompoundStatement		278:0:8658:10855	390648	0					
ANR	390651	IdentifierDeclStatement	char * iname ;	279:4:8664:8675	390648	0	True				
ANR	390652	IdentifierDecl	* iname		390648	0					
ANR	390653	IdentifierDeclType	char *		390648	0					
ANR	390654	Identifier	iname		390648	1					
ANR	390655	IdentifierDeclStatement	FILE * in ;	280:4:8681:8689	390648	1	True				
ANR	390656	IdentifierDecl	* in		390648	0					
ANR	390657	IdentifierDeclType	FILE *		390648	0					
ANR	390658	Identifier	in		390648	1					
ANR	390659	IdentifierDeclStatement	char * oname ;	281:4:8695:8706	390648	2	True				
ANR	390660	IdentifierDecl	* oname		390648	0					
ANR	390661	IdentifierDeclType	char *		390648	0					
ANR	390662	Identifier	oname		390648	1					
ANR	390663	IdentifierDeclStatement	FILE * out ;	282:4:8712:8721	390648	3	True				
ANR	390664	IdentifierDecl	* out		390648	0					
ANR	390665	IdentifierDeclType	FILE *		390648	0					
ANR	390666	Identifier	out		390648	1					
ANR	390667	IdentifierDeclStatement	int code ;	283:4:8727:8735	390648	4	True				
ANR	390668	IdentifierDecl	code		390648	0					
ANR	390669	IdentifierDeclType	int		390648	0					
ANR	390670	Identifier	code		390648	1					
ANR	390671	IdentifierDeclStatement	char * cont ;	284:4:8741:8751	390648	5	True				
ANR	390672	IdentifierDecl	* cont		390648	0					
ANR	390673	IdentifierDeclType	char *		390648	0					
ANR	390674	Identifier	cont		390648	1					
ANR	390675	IdentifierDeclStatement	char * line ;	285:4:8757:8767	390648	6	True				
ANR	390676	IdentifierDecl	* line		390648	0					
ANR	390677	IdentifierDeclType	char *		390648	0					
ANR	390678	Identifier	line		390648	1					
ANR	390679	IdentifierDeclStatement	gx_device_halftone_resource_t res ;	286:4:8773:8806	390648	7	True				
ANR	390680	IdentifierDecl	res		390648	0					
ANR	390681	IdentifierDeclType	gx_device_halftone_resource_t		390648	0					
ANR	390682	Identifier	res		390648	1					
ANR	390683	IdentifierDeclStatement	char * prefix = 0 ;	287:4:8812:8828	390648	8	True				
ANR	390684	IdentifierDecl	* prefix = 0		390648	0					
ANR	390685	IdentifierDeclType	char *		390648	0					
ANR	390686	Identifier	prefix		390648	1					
ANR	390687	AssignmentExpression	* prefix = 0		390648	2		=			
ANR	390688	Identifier	prefix		390648	0					
ANR	390689	PrimaryExpression	0		390648	1					
ANR	390690	IdentifierDeclStatement	byte * Thresholds ;	288:4:8834:8850	390648	9	True				
ANR	390691	IdentifierDecl	* Thresholds		390648	0					
ANR	390692	IdentifierDeclType	byte *		390648	0					
ANR	390693	Identifier	Thresholds		390648	1					
ANR	390694	IdentifierDeclStatement	gx_ht_order order ;	289:4:8856:8873	390648	10	True				
ANR	390695	IdentifierDecl	order		390648	0					
ANR	390696	IdentifierDeclType	gx_ht_order		390648	0					
ANR	390697	Identifier	order		390648	1					
ANR	390698	IdentifierDeclStatement	"int index , i ;"	290:4:8879:8891	390648	11	True				
ANR	390699	IdentifierDecl	index		390648	0					
ANR	390700	IdentifierDeclType	int		390648	0					
ANR	390701	Identifier	index		390648	1					
ANR	390702	IdentifierDecl	i		390648	1					
ANR	390703	IdentifierDeclType	int		390648	0					
ANR	390704	Identifier	i		390648	1					
ANR	390705	IfStatement	if ( argc != 3 )		390648	12					
ANR	390706	Condition	argc != 3	292:8:8902:8910	390648	0	True				
ANR	390707	EqualityExpression	argc != 3		390648	0		!=			
ANR	390708	Identifier	argc		390648	0					
ANR	390709	PrimaryExpression	3		390648	1					
ANR	390710	CompoundStatement		15:19:254:254	390648	1					
ANR	390711	ExpressionStatement	"fprintf ( stderr , ""Usage: genht ht_res.ps ht_data.c\\n"" )"	293:8:8923:8976	390648	0	True				
ANR	390712	CallExpression	"fprintf ( stderr , ""Usage: genht ht_res.ps ht_data.c\\n"" )"		390648	0					
ANR	390713	Callee	fprintf		390648	0					
ANR	390714	Identifier	fprintf		390648	0					
ANR	390715	ArgumentList	stderr		390648	1					
ANR	390716	Argument	stderr		390648	0					
ANR	390717	Identifier	stderr		390648	0					
ANR	390718	Argument	"""Usage: genht ht_res.ps ht_data.c\\n"""		390648	1					
ANR	390719	PrimaryExpression	"""Usage: genht ht_res.ps ht_data.c\\n"""		390648	0					
ANR	390720	ExpressionStatement	exit ( 1 )	294:8:8986:8993	390648	1	True				
ANR	390721	CallExpression	exit ( 1 )		390648	0					
ANR	390722	Callee	exit		390648	0					
ANR	390723	Identifier	exit		390648	0					
ANR	390724	ArgumentList	1		390648	1					
ANR	390725	Argument	1		390648	0					
ANR	390726	PrimaryExpression	1		390648	0					
ANR	390727	ExpressionStatement	iname = argv [ 1 ]	296:4:9005:9020	390648	13	True				
ANR	390728	AssignmentExpression	iname = argv [ 1 ]		390648	0		=			
ANR	390729	Identifier	iname		390648	0					
ANR	390730	ArrayIndexing	argv [ 1 ]		390648	1					
ANR	390731	Identifier	argv		390648	0					
ANR	390732	PrimaryExpression	1		390648	1					
ANR	390733	ExpressionStatement	oname = argv [ 2 ]	297:4:9026:9041	390648	14	True				
ANR	390734	AssignmentExpression	oname = argv [ 2 ]		390648	0		=			
ANR	390735	Identifier	oname		390648	0					
ANR	390736	ArrayIndexing	argv [ 2 ]		390648	1					
ANR	390737	Identifier	argv		390648	0					
ANR	390738	PrimaryExpression	2		390648	1					
ANR	390739	ExpressionStatement	"in = fopen ( iname , ""rb"" )"	298:4:9047:9070	390648	15	True				
ANR	390740	AssignmentExpression	"in = fopen ( iname , ""rb"" )"		390648	0		=			
ANR	390741	Identifier	in		390648	0					
ANR	390742	CallExpression	"fopen ( iname , ""rb"" )"		390648	1					
ANR	390743	Callee	fopen		390648	0					
ANR	390744	Identifier	fopen		390648	0					
ANR	390745	ArgumentList	iname		390648	1					
ANR	390746	Argument	iname		390648	0					
ANR	390747	Identifier	iname		390648	0					
ANR	390748	Argument	"""rb"""		390648	1					
ANR	390749	PrimaryExpression	"""rb"""		390648	0					
ANR	390750	IfStatement	if ( in == 0 )		390648	16					
ANR	390751	Condition	in == 0	299:8:9080:9086	390648	0	True				
ANR	390752	EqualityExpression	in == 0		390648	0		==			
ANR	390753	Identifier	in		390648	0					
ANR	390754	PrimaryExpression	0		390648	1					
ANR	390755	CompoundStatement		22:17:430:430	390648	1					
ANR	390756	ExpressionStatement	"in = fopen ( iname , ""r"" )"	300:8:9099:9121	390648	0	True				
ANR	390757	AssignmentExpression	"in = fopen ( iname , ""r"" )"		390648	0		=			
ANR	390758	Identifier	in		390648	0					
ANR	390759	CallExpression	"fopen ( iname , ""r"" )"		390648	1					
ANR	390760	Callee	fopen		390648	0					
ANR	390761	Identifier	fopen		390648	0					
ANR	390762	ArgumentList	iname		390648	1					
ANR	390763	Argument	iname		390648	0					
ANR	390764	Identifier	iname		390648	0					
ANR	390765	Argument	"""r"""		390648	1					
ANR	390766	PrimaryExpression	"""r"""		390648	0					
ANR	390767	IfStatement	if ( in == 0 )		390648	1					
ANR	390768	Condition	in == 0	301:12:9135:9141	390648	0	True				
ANR	390769	EqualityExpression	in == 0		390648	0		==			
ANR	390770	Identifier	in		390648	0					
ANR	390771	PrimaryExpression	0		390648	1					
ANR	390772	CompoundStatement		24:21:485:485	390648	1					
ANR	390773	ExpressionStatement	"fprintf ( stderr , ""Can't read %s.\\n"" , iname )"	302:12:9158:9200	390648	0	True				
ANR	390774	CallExpression	"fprintf ( stderr , ""Can't read %s.\\n"" , iname )"		390648	0					
ANR	390775	Callee	fprintf		390648	0					
ANR	390776	Identifier	fprintf		390648	0					
ANR	390777	ArgumentList	stderr		390648	1					
ANR	390778	Argument	stderr		390648	0					
ANR	390779	Identifier	stderr		390648	0					
ANR	390780	Argument	"""Can't read %s.\\n"""		390648	1					
ANR	390781	PrimaryExpression	"""Can't read %s.\\n"""		390648	0					
ANR	390782	Argument	iname		390648	2					
ANR	390783	Identifier	iname		390648	0					
ANR	390784	ExpressionStatement	exit ( 1 )	303:12:9214:9221	390648	1	True				
ANR	390785	CallExpression	exit ( 1 )		390648	0					
ANR	390786	Callee	exit		390648	0					
ANR	390787	Identifier	exit		390648	0					
ANR	390788	ArgumentList	1		390648	1					
ANR	390789	Argument	1		390648	0					
ANR	390790	PrimaryExpression	1		390648	0					
ANR	390791	ExpressionStatement	"cont = read_file ( in , iname )"	306:4:9243:9270	390648	17	True				
ANR	390792	AssignmentExpression	"cont = read_file ( in , iname )"		390648	0		=			
ANR	390793	Identifier	cont		390648	0					
ANR	390794	CallExpression	"read_file ( in , iname )"		390648	1					
ANR	390795	Callee	read_file		390648	0					
ANR	390796	Identifier	read_file		390648	0					
ANR	390797	ArgumentList	in		390648	1					
ANR	390798	Argument	in		390648	0					
ANR	390799	Identifier	in		390648	0					
ANR	390800	Argument	iname		390648	1					
ANR	390801	Identifier	iname		390648	0					
ANR	390802	IfStatement	if ( cont == 0 )		390648	18					
ANR	390803	Condition	cont == 0	307:8:9280:9288	390648	0	True				
ANR	390804	EqualityExpression	cont == 0		390648	0		==			
ANR	390805	Identifier	cont		390648	0					
ANR	390806	PrimaryExpression	0		390648	1					
ANR	390807	ExpressionStatement	exit ( 1 )	308:8:9299:9306	390648	1	True				
ANR	390808	CallExpression	exit ( 1 )		390648	0					
ANR	390809	Callee	exit		390648	0					
ANR	390810	Identifier	exit		390648	0					
ANR	390811	ArgumentList	1		390648	1					
ANR	390812	Argument	1		390648	0					
ANR	390813	PrimaryExpression	1		390648	0					
ANR	390814	ExpressionStatement	fclose ( in )	309:4:9312:9322	390648	19	True				
ANR	390815	CallExpression	fclose ( in )		390648	0					
ANR	390816	Callee	fclose		390648	0					
ANR	390817	Identifier	fclose		390648	0					
ANR	390818	ArgumentList	in		390648	1					
ANR	390819	Argument	in		390648	0					
ANR	390820	Identifier	in		390648	0					
ANR	390821	ExpressionStatement	"out = fopen ( oname , ""w"" )"	310:4:9328:9351	390648	20	True				
ANR	390822	AssignmentExpression	"out = fopen ( oname , ""w"" )"		390648	0		=			
ANR	390823	Identifier	out		390648	0					
ANR	390824	CallExpression	"fopen ( oname , ""w"" )"		390648	1					
ANR	390825	Callee	fopen		390648	0					
ANR	390826	Identifier	fopen		390648	0					
ANR	390827	ArgumentList	oname		390648	1					
ANR	390828	Argument	oname		390648	0					
ANR	390829	Identifier	oname		390648	0					
ANR	390830	Argument	"""w"""		390648	1					
ANR	390831	PrimaryExpression	"""w"""		390648	0					
ANR	390832	IfStatement	if ( out == 0 )		390648	21					
ANR	390833	Condition	out == 0	311:8:9361:9368	390648	0	True				
ANR	390834	EqualityExpression	out == 0		390648	0		==			
ANR	390835	Identifier	out		390648	0					
ANR	390836	PrimaryExpression	0		390648	1					
ANR	390837	CompoundStatement		34:18:712:712	390648	1					
ANR	390838	ExpressionStatement	"fprintf ( stderr , ""Can't open %s for output.\\n"" , oname )"	312:8:9381:9434	390648	0	True				
ANR	390839	CallExpression	"fprintf ( stderr , ""Can't open %s for output.\\n"" , oname )"		390648	0					
ANR	390840	Callee	fprintf		390648	0					
ANR	390841	Identifier	fprintf		390648	0					
ANR	390842	ArgumentList	stderr		390648	1					
ANR	390843	Argument	stderr		390648	0					
ANR	390844	Identifier	stderr		390648	0					
ANR	390845	Argument	"""Can't open %s for output.\\n"""		390648	1					
ANR	390846	PrimaryExpression	"""Can't open %s for output.\\n"""		390648	0					
ANR	390847	Argument	oname		390648	2					
ANR	390848	Identifier	oname		390648	0					
ANR	390849	ExpressionStatement	exit ( 1 )	313:8:9444:9451	390648	1	True				
ANR	390850	CallExpression	exit ( 1 )		390648	0					
ANR	390851	Callee	exit		390648	0					
ANR	390852	Identifier	exit		390648	0					
ANR	390853	ArgumentList	1		390648	1					
ANR	390854	Argument	1		390648	0					
ANR	390855	PrimaryExpression	1		390648	0					
ANR	390856	ExpressionStatement	"fprintf ( out , ""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"" , oname , iname )"	315:4:9463:9577	390648	22	True				
ANR	390857	CallExpression	"fprintf ( out , ""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"" , oname , iname )"		390648	0					
ANR	390858	Callee	fprintf		390648	0					
ANR	390859	Identifier	fprintf		390648	0					
ANR	390860	ArgumentList	out		390648	1					
ANR	390861	Argument	out		390648	0					
ANR	390862	Identifier	out		390648	0					
ANR	390863	Argument	"""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"""		390648	1					
ANR	390864	PrimaryExpression	"""/*\\n * This file %s was generated from %s by genht.\\n * Do not edit this file.\\n *\\n"""		390648	0					
ANR	390865	Argument	oname		390648	2					
ANR	390866	Identifier	oname		390648	0					
ANR	390867	Argument	iname		390648	3					
ANR	390868	Identifier	iname		390648	0					
ANR	390869	WhileStatement	"while ( parse_line ( & cont , & line ) && line [ 0 ] == '%' )"		390648	23					
ANR	390870	Condition	"parse_line ( & cont , & line ) && line [ 0 ] == '%'"	317:11:9643:9684	390648	0	True				
ANR	390871	AndExpression	"parse_line ( & cont , & line ) && line [ 0 ] == '%'"		390648	0		&&			
ANR	390872	CallExpression	"parse_line ( & cont , & line )"		390648	0					
ANR	390873	Callee	parse_line		390648	0					
ANR	390874	Identifier	parse_line		390648	0					
ANR	390875	ArgumentList	& cont		390648	1					
ANR	390876	Argument	& cont		390648	0					
ANR	390877	UnaryOperationExpression	& cont		390648	0					
ANR	390878	UnaryOperator	&		390648	0					
ANR	390879	Identifier	cont		390648	1					
ANR	390880	Argument	& line		390648	1					
ANR	390881	UnaryOperationExpression	& line		390648	0					
ANR	390882	UnaryOperator	&		390648	0					
ANR	390883	Identifier	line		390648	1					
ANR	390884	EqualityExpression	line [ 0 ] == '%'		390648	1		==			
ANR	390885	ArrayIndexing	line [ 0 ]		390648	0					
ANR	390886	Identifier	line		390648	0					
ANR	390887	PrimaryExpression	0		390648	1					
ANR	390888	PrimaryExpression	'%'		390648	1					
ANR	390889	IfStatement	if ( line [ 1 ] != '!' )		390648	1					
ANR	390890	Condition	line [ 1 ] != '!'	318:12:9699:9712	390648	0	True				
ANR	390891	EqualityExpression	line [ 1 ] != '!'		390648	0		!=			
ANR	390892	ArrayIndexing	line [ 1 ]		390648	0					
ANR	390893	Identifier	line		390648	0					
ANR	390894	PrimaryExpression	1		390648	1					
ANR	390895	PrimaryExpression	'!'		390648	1					
ANR	390896	ExpressionStatement	"fprintf ( out , "" * %s\\n"" , line + 1 )"	319:12:9727:9760	390648	1	True				
ANR	390897	CallExpression	"fprintf ( out , "" * %s\\n"" , line + 1 )"		390648	0					
ANR	390898	Callee	fprintf		390648	0					
ANR	390899	Identifier	fprintf		390648	0					
ANR	390900	ArgumentList	out		390648	1					
ANR	390901	Argument	out		390648	0					
ANR	390902	Identifier	out		390648	0					
ANR	390903	Argument	""" * %s\\n"""		390648	1					
ANR	390904	PrimaryExpression	""" * %s\\n"""		390648	0					
ANR	390905	Argument	line + 1		390648	2					
ANR	390906	AdditiveExpression	line + 1		390648	0		+			
ANR	390907	Identifier	line		390648	0					
ANR	390908	PrimaryExpression	1		390648	1					
ANR	390909	ExpressionStatement	cont [ - 1 ] = '\\n'	320:4:9766:9781	390648	24	True				
ANR	390910	AssignmentExpression	cont [ - 1 ] = '\\n'		390648	0		=			
ANR	390911	ArrayIndexing	cont [ - 1 ]		390648	0					
ANR	390912	Identifier	cont		390648	0					
ANR	390913	UnaryOperationExpression	- 1		390648	1					
ANR	390914	UnaryOperator	-		390648	0					
ANR	390915	PrimaryExpression	1		390648	1					
ANR	390916	PrimaryExpression	'\\n'		390648	1					
ANR	390917	ExpressionStatement	cont = line	321:4:9787:9798	390648	25	True				
ANR	390918	AssignmentExpression	cont = line		390648	0		=			
ANR	390919	Identifier	cont		390648	0					
ANR	390920	Identifier	line		390648	1					
ANR	390921	ExpressionStatement	"fputs ( "" */\\n#include \\""gxdhtres.h\\""\\n"" , out )"	322:4:9804:9848	390648	26	True				
ANR	390922	CallExpression	"fputs ( "" */\\n#include \\""gxdhtres.h\\""\\n"" , out )"		390648	0					
ANR	390923	Callee	fputs		390648	0					
ANR	390924	Identifier	fputs		390648	0					
ANR	390925	ArgumentList	""" */\\n#include \\""gxdhtres.h\\""\\n"""		390648	1					
ANR	390926	Argument	""" */\\n#include \\""gxdhtres.h\\""\\n"""		390648	0					
ANR	390927	PrimaryExpression	""" */\\n#include \\""gxdhtres.h\\""\\n"""		390648	0					
ANR	390928	Argument	out		390648	1					
ANR	390929	Identifier	out		390648	0					
ANR	390930	ForStatement	"for ( index = 0 ; ( code = parse_halftone ( & res , & Thresholds , & prefix , & cont ) ) == 0 ; ++ index )"		390648	27					
ANR	390931	ForInit	index = 0 ;	323:9:9859:9868	390648	0	True				
ANR	390932	AssignmentExpression	index = 0		390648	0		=			
ANR	390933	Identifier	index		390648	0					
ANR	390934	PrimaryExpression	0		390648	1					
ANR	390935	Condition	"( code = parse_halftone ( & res , & Thresholds , & prefix , & cont ) ) == 0"	324:9:9879:9941	390648	1	True				
ANR	390936	EqualityExpression	"( code = parse_halftone ( & res , & Thresholds , & prefix , & cont ) ) == 0"		390648	0		==			
ANR	390937	AssignmentExpression	"code = parse_halftone ( & res , & Thresholds , & prefix , & cont )"		390648	0		=			
ANR	390938	Identifier	code		390648	0					
ANR	390939	CallExpression	"parse_halftone ( & res , & Thresholds , & prefix , & cont )"		390648	1					
ANR	390940	Callee	parse_halftone		390648	0					
ANR	390941	Identifier	parse_halftone		390648	0					
ANR	390942	ArgumentList	& res		390648	1					
ANR	390943	Argument	& res		390648	0					
ANR	390944	UnaryOperationExpression	& res		390648	0					
ANR	390945	UnaryOperator	&		390648	0					
ANR	390946	Identifier	res		390648	1					
ANR	390947	Argument	& Thresholds		390648	1					
ANR	390948	UnaryOperationExpression	& Thresholds		390648	0					
ANR	390949	UnaryOperator	&		390648	0					
ANR	390950	Identifier	Thresholds		390648	1					
ANR	390951	Argument	& prefix		390648	2					
ANR	390952	UnaryOperationExpression	& prefix		390648	0					
ANR	390953	UnaryOperator	&		390648	0					
ANR	390954	Identifier	prefix		390648	1					
ANR	390955	Argument	& cont		390648	3					
ANR	390956	UnaryOperationExpression	& cont		390648	0					
ANR	390957	UnaryOperator	&		390648	0					
ANR	390958	Identifier	cont		390648	1					
ANR	390959	PrimaryExpression	0		390648	1					
ANR	390960	UnaryExpression	++ index	325:9:9953:9959	390648	2	True				
ANR	390961	IncDec	++		390648	0					
ANR	390962	Identifier	index		390648	1					
ANR	390963	CompoundStatement		48:18:1303:1303	390648	3					
ANR	390964	ExpressionStatement	order . width = res . Width	326:8:9972:9995	390648	0	True				
ANR	390965	AssignmentExpression	order . width = res . Width		390648	0		=			
ANR	390966	MemberAccess	order . width		390648	0					
ANR	390967	Identifier	order		390648	0					
ANR	390968	Identifier	width		390648	1					
ANR	390969	MemberAccess	res . Width		390648	1					
ANR	390970	Identifier	res		390648	0					
ANR	390971	Identifier	Width		390648	1					
ANR	390972	ExpressionStatement	order . num_levels = res . num_levels	327:8:10005:10038	390648	1	True				
ANR	390973	AssignmentExpression	order . num_levels = res . num_levels		390648	0		=			
ANR	390974	MemberAccess	order . num_levels		390648	0					
ANR	390975	Identifier	order		390648	0					
ANR	390976	Identifier	num_levels		390648	1					
ANR	390977	MemberAccess	res . num_levels		390648	1					
ANR	390978	Identifier	res		390648	0					
ANR	390979	Identifier	num_levels		390648	1					
ANR	390980	ExpressionStatement	order . levels = ( uint * ) res . levels	328:8:10048:10081	390648	2	True				
ANR	390981	AssignmentExpression	order . levels = ( uint * ) res . levels		390648	0		=			
ANR	390982	MemberAccess	order . levels		390648	0					
ANR	390983	Identifier	order		390648	0					
ANR	390984	Identifier	levels		390648	1					
ANR	390985	CastExpression	( uint * ) res . levels		390648	1					
ANR	390986	CastTarget	uint *		390648	0					
ANR	390987	MemberAccess	res . levels		390648	1					
ANR	390988	Identifier	res		390648	0					
ANR	390989	Identifier	levels		390648	1					
ANR	390990	ExpressionStatement	order . num_bits = res . Width * res . Height	329:8:10091:10130	390648	3	True				
ANR	390991	AssignmentExpression	order . num_bits = res . Width * res . Height		390648	0		=			
ANR	390992	MemberAccess	order . num_bits		390648	0					
ANR	390993	Identifier	order		390648	0					
ANR	390994	Identifier	num_bits		390648	1					
ANR	390995	MultiplicativeExpression	res . Width * res . Height		390648	1		*			
ANR	390996	MemberAccess	res . Width		390648	0					
ANR	390997	Identifier	res		390648	0					
ANR	390998	Identifier	Width		390648	1					
ANR	390999	MemberAccess	res . Height		390648	1					
ANR	391000	Identifier	res		390648	0					
ANR	391001	Identifier	Height		390648	1					
ANR	391002	ExpressionStatement	order . bit_data = ( void * ) res . bit_data	330:8:10140:10177	390648	4	True				
ANR	391003	AssignmentExpression	order . bit_data = ( void * ) res . bit_data		390648	0		=			
ANR	391004	MemberAccess	order . bit_data		390648	0					
ANR	391005	Identifier	order		390648	0					
ANR	391006	Identifier	bit_data		390648	1					
ANR	391007	CastExpression	( void * ) res . bit_data		390648	1					
ANR	391008	CastTarget	void *		390648	0					
ANR	391009	MemberAccess	res . bit_data		390648	1					
ANR	391010	Identifier	res		390648	0					
ANR	391011	Identifier	bit_data		390648	1					
ANR	391012	ExpressionStatement	"ht_order_procs_short . construct_order ( & order , Thresholds )"	331:8:10187:10243	390648	5	True				
ANR	391013	CallExpression	"ht_order_procs_short . construct_order ( & order , Thresholds )"		390648	0					
ANR	391014	Callee	ht_order_procs_short . construct_order		390648	0					
ANR	391015	MemberAccess	ht_order_procs_short . construct_order		390648	0					
ANR	391016	Identifier	ht_order_procs_short		390648	0					
ANR	391017	Identifier	construct_order		390648	1					
ANR	391018	ArgumentList	& order		390648	1					
ANR	391019	Argument	& order		390648	0					
ANR	391020	UnaryOperationExpression	& order		390648	0					
ANR	391021	UnaryOperator	&		390648	0					
ANR	391022	Identifier	order		390648	1					
ANR	391023	Argument	Thresholds		390648	1					
ANR	391024	Identifier	Thresholds		390648	0					
ANR	391025	ExpressionStatement	"write_halftone ( out , & res , prefix , index )"	332:8:10253:10293	390648	6	True				
ANR	391026	CallExpression	"write_halftone ( out , & res , prefix , index )"		390648	0					
ANR	391027	Callee	write_halftone		390648	0					
ANR	391028	Identifier	write_halftone		390648	0					
ANR	391029	ArgumentList	out		390648	1					
ANR	391030	Argument	out		390648	0					
ANR	391031	Identifier	out		390648	0					
ANR	391032	Argument	& res		390648	1					
ANR	391033	UnaryOperationExpression	& res		390648	0					
ANR	391034	UnaryOperator	&		390648	0					
ANR	391035	Identifier	res		390648	1					
ANR	391036	Argument	prefix		390648	2					
ANR	391037	Identifier	prefix		390648	0					
ANR	391038	Argument	index		390648	3					
ANR	391039	Identifier	index		390648	0					
ANR	391040	IfStatement	if ( prefix == 0 )		390648	28					
ANR	391041	Condition	prefix == 0	334:8:10309:10319	390648	0	True				
ANR	391042	EqualityExpression	prefix == 0		390648	0		==			
ANR	391043	Identifier	prefix		390648	0					
ANR	391044	PrimaryExpression	0		390648	1					
ANR	391045	ExpressionStatement	prefix = res . rname	335:8:10330:10348	390648	1	True				
ANR	391046	AssignmentExpression	prefix = res . rname		390648	0		=			
ANR	391047	Identifier	prefix		390648	0					
ANR	391048	MemberAccess	res . rname		390648	1					
ANR	391049	Identifier	res		390648	0					
ANR	391050	Identifier	rname		390648	1					
ANR	391051	ExpressionStatement	"fputs ( ""/* Check the prototype. */\\n"" , out )"	336:4:10354:10396	390648	29	True				
ANR	391052	CallExpression	"fputs ( ""/* Check the prototype. */\\n"" , out )"		390648	0					
ANR	391053	Callee	fputs		390648	0					
ANR	391054	Identifier	fputs		390648	0					
ANR	391055	ArgumentList	"""/* Check the prototype. */\\n"""		390648	1					
ANR	391056	Argument	"""/* Check the prototype. */\\n"""		390648	0					
ANR	391057	PrimaryExpression	"""/* Check the prototype. */\\n"""		390648	0					
ANR	391058	Argument	out		390648	1					
ANR	391059	Identifier	out		390648	0					
ANR	391060	ExpressionStatement	"fprintf ( out , ""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"" , prefix )"	337:4:10402:10469	390648	30	True				
ANR	391061	CallExpression	"fprintf ( out , ""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"" , prefix )"		390648	0					
ANR	391062	Callee	fprintf		390648	0					
ANR	391063	Identifier	fprintf		390648	0					
ANR	391064	ArgumentList	out		390648	1					
ANR	391065	Argument	out		390648	0					
ANR	391066	Identifier	out		390648	0					
ANR	391067	Argument	"""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"""		390648	1					
ANR	391068	PrimaryExpression	"""DEVICE_HALFTONE_RESOURCE_PROC(gs_dht_%s);\\n"""		390648	0					
ANR	391069	Argument	prefix		390648	2					
ANR	391070	Identifier	prefix		390648	0					
ANR	391071	ExpressionStatement	"fputs ( ""\\nconst gx_device_halftone_resource_t *const *\\n"" , out )"	338:4:10475:10537	390648	31	True				
ANR	391072	CallExpression	"fputs ( ""\\nconst gx_device_halftone_resource_t *const *\\n"" , out )"		390648	0					
ANR	391073	Callee	fputs		390648	0					
ANR	391074	Identifier	fputs		390648	0					
ANR	391075	ArgumentList	"""\\nconst gx_device_halftone_resource_t *const *\\n"""		390648	1					
ANR	391076	Argument	"""\\nconst gx_device_halftone_resource_t *const *\\n"""		390648	0					
ANR	391077	PrimaryExpression	"""\\nconst gx_device_halftone_resource_t *const *\\n"""		390648	0					
ANR	391078	Argument	out		390648	1					
ANR	391079	Identifier	out		390648	0					
ANR	391080	ExpressionStatement	"fprintf ( out , ""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"" , prefix )"	339:4:10543:10666	390648	32	True				
ANR	391081	CallExpression	"fprintf ( out , ""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"" , prefix )"		390648	0					
ANR	391082	Callee	fprintf		390648	0					
ANR	391083	Identifier	fprintf		390648	0					
ANR	391084	ArgumentList	out		390648	1					
ANR	391085	Argument	out		390648	0					
ANR	391086	Identifier	out		390648	0					
ANR	391087	Argument	"""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"""		390648	1					
ANR	391088	PrimaryExpression	"""gs_dht_%s(void)\\n{\\n    static const gx_device_halftone_resource_t *const res[] = {\\n\\t"""		390648	0					
ANR	391089	Argument	prefix		390648	2					
ANR	391090	Identifier	prefix		390648	0					
ANR	391091	ForStatement	for ( i = 0 ; i < index ; ++ i )		390648	33					
ANR	391092	ForInit	i = 0 ;	341:9:10677:10682	390648	0	True				
ANR	391093	AssignmentExpression	i = 0		390648	0		=			
ANR	391094	Identifier	i		390648	0					
ANR	391095	PrimaryExpression	0		390648	1					
ANR	391096	Condition	i < index	341:16:10684:10692	390648	1	True				
ANR	391097	RelationalExpression	i < index		390648	0		<			
ANR	391098	Identifier	i		390648	0					
ANR	391099	Identifier	index		390648	1					
ANR	391100	UnaryExpression	++ i	341:27:10695:10697	390648	2	True				
ANR	391101	IncDec	++		390648	0					
ANR	391102	Identifier	i		390648	1					
ANR	391103	ExpressionStatement	"fprintf ( out , ""&res_%d, "" , i )"	342:8:10708:10736	390648	3	True				
ANR	391104	CallExpression	"fprintf ( out , ""&res_%d, "" , i )"		390648	0					
ANR	391105	Callee	fprintf		390648	0					
ANR	391106	Identifier	fprintf		390648	0					
ANR	391107	ArgumentList	out		390648	1					
ANR	391108	Argument	out		390648	0					
ANR	391109	Identifier	out		390648	0					
ANR	391110	Argument	"""&res_%d, """		390648	1					
ANR	391111	PrimaryExpression	"""&res_%d, """		390648	0					
ANR	391112	Argument	i		390648	2					
ANR	391113	Identifier	i		390648	0					
ANR	391114	ExpressionStatement	"fputs ( ""0\\n    };\\n    return res;\\n}\\n"" , out )"	343:4:10742:10787	390648	34	True				
ANR	391115	CallExpression	"fputs ( ""0\\n    };\\n    return res;\\n}\\n"" , out )"		390648	0					
ANR	391116	Callee	fputs		390648	0					
ANR	391117	Identifier	fputs		390648	0					
ANR	391118	ArgumentList	"""0\\n    };\\n    return res;\\n}\\n"""		390648	1					
ANR	391119	Argument	"""0\\n    };\\n    return res;\\n}\\n"""		390648	0					
ANR	391120	PrimaryExpression	"""0\\n    };\\n    return res;\\n}\\n"""		390648	0					
ANR	391121	Argument	out		390648	1					
ANR	391122	Identifier	out		390648	0					
ANR	391123	ExpressionStatement	fclose ( out )	344:4:10793:10804	390648	35	True				
ANR	391124	CallExpression	fclose ( out )		390648	0					
ANR	391125	Callee	fclose		390648	0					
ANR	391126	Identifier	fclose		390648	0					
ANR	391127	ArgumentList	out		390648	1					
ANR	391128	Argument	out		390648	0					
ANR	391129	Identifier	out		390648	0					
ANR	391130	IfStatement	if ( code < 0 )		390648	36					
ANR	391131	Condition	code < 0	345:8:10814:10821	390648	0	True				
ANR	391132	RelationalExpression	code < 0		390648	0		<			
ANR	391133	Identifier	code		390648	0					
ANR	391134	PrimaryExpression	0		390648	1					
ANR	391135	ExpressionStatement	exit ( 1 )	346:8:10832:10839	390648	1	True				
ANR	391136	CallExpression	exit ( 1 )		390648	0					
ANR	391137	Callee	exit		390648	0					
ANR	391138	Identifier	exit		390648	0					
ANR	391139	ArgumentList	1		390648	1					
ANR	391140	Argument	1		390648	0					
ANR	391141	PrimaryExpression	1		390648	0					
ANR	391142	ReturnStatement	return 0 ;	347:4:10845:10853	390648	37	True				
ANR	391143	PrimaryExpression	0		390648	0					
ANR	391144	ReturnType	int		390648	1					
ANR	391145	Identifier	main		390648	2					
ANR	391146	ParameterList	"int argc , char * argv [ ]"		390648	3					
ANR	391147	Parameter	int argc	277:5:8634:8641	390648	0	True				
ANR	391148	ParameterType	int		390648	0					
ANR	391149	Identifier	argc		390648	1					
ANR	391150	Parameter	char * argv [ ]	277:15:8644:8655	390648	1	True				
ANR	391151	ParameterType	char * [ ]		390648	0					
ANR	391152	Identifier	argv		390648	1					
ANR	391153	CFGEntryNode	ENTRY		390648		True				
ANR	391154	CFGExitNode	EXIT		390648		True				
ANR	391155	Symbol	order . levels		390648						
ANR	391156	Symbol	& res		390648						
ANR	391157	Symbol	code		390648						
ANR	391158	Symbol	order . num_levels		390648						
ANR	391159	Symbol	& prefix		390648						
ANR	391160	Symbol	res . Height		390648						
ANR	391161	Symbol	line		390648						
ANR	391162	Symbol	prefix		390648						
ANR	391163	Symbol	parse_line		390648						
ANR	391164	Symbol	ht_order_procs_short		390648						
ANR	391165	Symbol	* argv		390648						
ANR	391166	Symbol	* line		390648						
ANR	391167	Symbol	parse_halftone		390648						
ANR	391168	Symbol	argv		390648						
ANR	391169	Symbol	& order		390648						
ANR	391170	Symbol	iname		390648						
ANR	391171	Symbol	out		390648						
ANR	391172	Symbol	res . levels		390648						
ANR	391173	Symbol	order . width		390648						
ANR	391174	Symbol	res . bit_data		390648						
ANR	391175	Symbol	order . bit_data		390648						
ANR	391176	Symbol	cont		390648						
ANR	391177	Symbol	res . Width		390648						
ANR	391178	Symbol	read_file		390648						
ANR	391179	Symbol	order		390648						
ANR	391180	Symbol	argc		390648						
ANR	391181	Symbol	res		390648						
ANR	391182	Symbol	fopen		390648						
ANR	391183	Symbol	& line		390648						
ANR	391184	Symbol	& Thresholds		390648						
ANR	391185	Symbol	res . rname		390648						
ANR	391186	Symbol	Thresholds		390648						
ANR	391187	Symbol	in		390648						
ANR	391188	Symbol	& cont		390648						
ANR	391189	Symbol	index		390648						
ANR	391190	Symbol	i		390648						
ANR	391191	Symbol	stderr		390648						
ANR	391192	Symbol	oname		390648						
ANR	391193	Symbol	* cont		390648						
ANR	391194	Symbol	res . num_levels		390648						
ANR	391195	Symbol	order . num_bits		390648						
ANR	391196	DeclStmt									
ANR	391197	Decl							RELOC_PTRS_END	RELOC_PTRS_END ( )	public_st_stream_state
ANR	391198	Function	gx_ht_complete_threshold_order	361:0:11043:11102							
ANR	391199	FunctionDef	gx_ht_complete_threshold_order (gx_ht_order * porder)		391198	0					
ANR	391200	CompoundStatement		363:0:11100:11102	391198	0					
ANR	391201	ReturnType	void		391198	1					
ANR	391202	Identifier	gx_ht_complete_threshold_order		391198	2					
ANR	391203	ParameterList	gx_ht_order * porder		391198	3					
ANR	391204	Parameter	gx_ht_order * porder	362:31:11079:11097	391198	0	True				
ANR	391205	ParameterType	gx_ht_order *		391198	0					
ANR	391206	Identifier	porder		391198	1					
ANR	391207	CFGEntryNode	ENTRY		391198		True				
ANR	391208	CFGExitNode	EXIT		391198		True				
ANR	391209	Symbol	porder		391198						
ANR	391210	DeclStmt									
ANR	391211	Decl							const gx_dht_proc	const gx_dht_proc [ ]	gx_device_halftone_list
