command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	436387	File	data/converged/CVE-2018-16863_ghostpdl/base_gsargs.c								
ANR	436388	Function	codepoint_to_utf8	26:0:769:1848							
ANR	436389	FunctionDef	"codepoint_to_utf8 (char * cstr , int rune)"		436388	0					
ANR	436390	CompoundStatement		27:0:813:1848	436388	0					
ANR	436391	IdentifierDeclStatement	int idx = 0 ;	28:4:819:830	436388	0	True				
ANR	436392	IdentifierDecl	idx = 0		436388	0					
ANR	436393	IdentifierDeclType	int		436388	0					
ANR	436394	Identifier	idx		436388	1					
ANR	436395	AssignmentExpression	idx = 0		436388	2		=			
ANR	436396	Identifier	idx		436388	0					
ANR	436397	PrimaryExpression	0		436388	1					
ANR	436398	IfStatement	if ( rune < 0x80 )		436388	1					
ANR	436399	Condition	rune < 0x80	30:8:841:851	436388	0	True				
ANR	436400	RelationalExpression	rune < 0x80		436388	0		<			
ANR	436401	Identifier	rune		436388	0					
ANR	436402	PrimaryExpression	0x80		436388	1					
ANR	436403	CompoundStatement		4:21:40:40	436388	1					
ANR	436404	ExpressionStatement	cstr [ idx ++ ] = rune	31:8:864:882	436388	0	True				
ANR	436405	AssignmentExpression	cstr [ idx ++ ] = rune		436388	0		=			
ANR	436406	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436407	Identifier	cstr		436388	0					
ANR	436408	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436409	Identifier	idx		436388	0					
ANR	436410	IncDec	++		436388	1					
ANR	436411	Identifier	rune		436388	1					
ANR	436412	ElseStatement	else		436388	0					
ANR	436413	CompoundStatement		6:11:81:81	436388	0					
ANR	436414	IfStatement	if ( rune < 0x800 )		436388	0					
ANR	436415	Condition	rune < 0x800	33:12:909:920	436388	0	True				
ANR	436416	RelationalExpression	rune < 0x800		436388	0		<			
ANR	436417	Identifier	rune		436388	0					
ANR	436418	PrimaryExpression	0x800		436388	1					
ANR	436419	CompoundStatement		7:26:109:109	436388	1					
ANR	436420	ExpressionStatement	cstr [ idx ++ ] = 0xc0 | ( rune >> 6 )	34:12:937:967	436388	0	True				
ANR	436421	AssignmentExpression	cstr [ idx ++ ] = 0xc0 | ( rune >> 6 )		436388	0		=			
ANR	436422	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436423	Identifier	cstr		436388	0					
ANR	436424	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436425	Identifier	idx		436388	0					
ANR	436426	IncDec	++		436388	1					
ANR	436427	InclusiveOrExpression	0xc0 | ( rune >> 6 )		436388	1		|			
ANR	436428	PrimaryExpression	0xc0		436388	0					
ANR	436429	ShiftExpression	rune >> 6		436388	1		>>			
ANR	436430	Identifier	rune		436388	0					
ANR	436431	PrimaryExpression	6		436388	1					
ANR	436432	ElseStatement	else		436388	0					
ANR	436433	CompoundStatement		9:15:170:170	436388	0					
ANR	436434	IfStatement	if ( rune < 0x10000 )		436388	0					
ANR	436435	Condition	rune < 0x10000	36:16:1002:1015	436388	0	True				
ANR	436436	RelationalExpression	rune < 0x10000		436388	0		<			
ANR	436437	Identifier	rune		436388	0					
ANR	436438	PrimaryExpression	0x10000		436388	1					
ANR	436439	CompoundStatement		10:32:204:204	436388	1					
ANR	436440	ExpressionStatement	cstr [ idx ++ ] = 0xe0 | ( rune >> 12 )	37:16:1036:1067	436388	0	True				
ANR	436441	AssignmentExpression	cstr [ idx ++ ] = 0xe0 | ( rune >> 12 )		436388	0		=			
ANR	436442	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436443	Identifier	cstr		436388	0					
ANR	436444	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436445	Identifier	idx		436388	0					
ANR	436446	IncDec	++		436388	1					
ANR	436447	InclusiveOrExpression	0xe0 | ( rune >> 12 )		436388	1		|			
ANR	436448	PrimaryExpression	0xe0		436388	0					
ANR	436449	ShiftExpression	rune >> 12		436388	1		>>			
ANR	436450	Identifier	rune		436388	0					
ANR	436451	PrimaryExpression	12		436388	1					
ANR	436452	ElseStatement	else		436388	0					
ANR	436453	CompoundStatement		12:19:274:274	436388	0					
ANR	436454	IfStatement	if ( rune < 0x200000 )		436388	0					
ANR	436455	Condition	rune < 0x200000	39:20:1110:1124	436388	0	True				
ANR	436456	RelationalExpression	rune < 0x200000		436388	0		<			
ANR	436457	Identifier	rune		436388	0					
ANR	436458	PrimaryExpression	0x200000		436388	1					
ANR	436459	CompoundStatement		13:37:313:313	436388	1					
ANR	436460	ExpressionStatement	cstr [ idx ++ ] = 0xf0 | ( rune >> 18 )	40:20:1149:1180	436388	0	True				
ANR	436461	AssignmentExpression	cstr [ idx ++ ] = 0xf0 | ( rune >> 18 )		436388	0		=			
ANR	436462	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436463	Identifier	cstr		436388	0					
ANR	436464	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436465	Identifier	idx		436388	0					
ANR	436466	IncDec	++		436388	1					
ANR	436467	InclusiveOrExpression	0xf0 | ( rune >> 18 )		436388	1		|			
ANR	436468	PrimaryExpression	0xf0		436388	0					
ANR	436469	ShiftExpression	rune >> 18		436388	1		>>			
ANR	436470	Identifier	rune		436388	0					
ANR	436471	PrimaryExpression	18		436388	1					
ANR	436472	ElseStatement	else		436388	0					
ANR	436473	CompoundStatement		15:23:391:391	436388	0					
ANR	436474	IfStatement	if ( rune < 0x4000000 )		436388	0					
ANR	436475	Condition	rune < 0x4000000	43:24:1315:1330	436388	0	True				
ANR	436476	RelationalExpression	rune < 0x4000000		436388	0		<			
ANR	436477	Identifier	rune		436388	0					
ANR	436478	PrimaryExpression	0x4000000		436388	1					
ANR	436479	CompoundStatement		17:42:519:519	436388	1					
ANR	436480	ExpressionStatement	cstr [ idx ++ ] = 0xf8 | ( rune >> 24 )	44:24:1359:1390	436388	0	True				
ANR	436481	AssignmentExpression	cstr [ idx ++ ] = 0xf8 | ( rune >> 24 )		436388	0		=			
ANR	436482	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436483	Identifier	cstr		436388	0					
ANR	436484	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436485	Identifier	idx		436388	0					
ANR	436486	IncDec	++		436388	1					
ANR	436487	InclusiveOrExpression	0xf8 | ( rune >> 24 )		436388	1		|			
ANR	436488	PrimaryExpression	0xf8		436388	0					
ANR	436489	ShiftExpression	rune >> 24		436388	1		>>			
ANR	436490	Identifier	rune		436388	0					
ANR	436491	PrimaryExpression	24		436388	1					
ANR	436492	ElseStatement	else		436388	0					
ANR	436493	CompoundStatement		19:27:605:605	436388	0					
ANR	436494	ExpressionStatement	cstr [ idx ++ ] = 0xfc | ( rune >> 30 )	46:24:1445:1476	436388	0	True				
ANR	436495	AssignmentExpression	cstr [ idx ++ ] = 0xfc | ( rune >> 30 )		436388	0		=			
ANR	436496	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436497	Identifier	cstr		436388	0					
ANR	436498	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436499	Identifier	idx		436388	0					
ANR	436500	IncDec	++		436388	1					
ANR	436501	InclusiveOrExpression	0xfc | ( rune >> 30 )		436388	1		|			
ANR	436502	PrimaryExpression	0xfc		436388	0					
ANR	436503	ShiftExpression	rune >> 30		436388	1		>>			
ANR	436504	Identifier	rune		436388	0					
ANR	436505	PrimaryExpression	30		436388	1					
ANR	436506	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 24 ) & 0x3f )	47:24:1502:1542	436388	1	True				
ANR	436507	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 24 ) & 0x3f )		436388	0		=			
ANR	436508	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436509	Identifier	cstr		436388	0					
ANR	436510	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436511	Identifier	idx		436388	0					
ANR	436512	IncDec	++		436388	1					
ANR	436513	InclusiveOrExpression	0x80 | ( ( rune >> 24 ) & 0x3f )		436388	1		|			
ANR	436514	PrimaryExpression	0x80		436388	0					
ANR	436515	BitAndExpression	( rune >> 24 ) & 0x3f		436388	1		&			
ANR	436516	ShiftExpression	rune >> 24		436388	0		>>			
ANR	436517	Identifier	rune		436388	0					
ANR	436518	PrimaryExpression	24		436388	1					
ANR	436519	PrimaryExpression	0x3f		436388	1					
ANR	436520	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 18 ) & 0x3f )	49:20:1586:1626	436388	1	True				
ANR	436521	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 18 ) & 0x3f )		436388	0		=			
ANR	436522	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436523	Identifier	cstr		436388	0					
ANR	436524	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436525	Identifier	idx		436388	0					
ANR	436526	IncDec	++		436388	1					
ANR	436527	InclusiveOrExpression	0x80 | ( ( rune >> 18 ) & 0x3f )		436388	1		|			
ANR	436528	PrimaryExpression	0x80		436388	0					
ANR	436529	BitAndExpression	( rune >> 18 ) & 0x3f		436388	1		&			
ANR	436530	ShiftExpression	rune >> 18		436388	0		>>			
ANR	436531	Identifier	rune		436388	0					
ANR	436532	PrimaryExpression	18		436388	1					
ANR	436533	PrimaryExpression	0x3f		436388	1					
ANR	436534	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 12 ) & 0x3f )	51:16:1662:1702	436388	1	True				
ANR	436535	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 12 ) & 0x3f )		436388	0		=			
ANR	436536	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436537	Identifier	cstr		436388	0					
ANR	436538	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436539	Identifier	idx		436388	0					
ANR	436540	IncDec	++		436388	1					
ANR	436541	InclusiveOrExpression	0x80 | ( ( rune >> 12 ) & 0x3f )		436388	1		|			
ANR	436542	PrimaryExpression	0x80		436388	0					
ANR	436543	BitAndExpression	( rune >> 12 ) & 0x3f		436388	1		&			
ANR	436544	ShiftExpression	rune >> 12		436388	0		>>			
ANR	436545	Identifier	rune		436388	0					
ANR	436546	PrimaryExpression	12		436388	1					
ANR	436547	PrimaryExpression	0x3f		436388	1					
ANR	436548	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( ( rune >> 6 ) & 0x3f )	53:12:1730:1769	436388	1	True				
ANR	436549	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( ( rune >> 6 ) & 0x3f )		436388	0		=			
ANR	436550	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436551	Identifier	cstr		436388	0					
ANR	436552	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436553	Identifier	idx		436388	0					
ANR	436554	IncDec	++		436388	1					
ANR	436555	InclusiveOrExpression	0x80 | ( ( rune >> 6 ) & 0x3f )		436388	1		|			
ANR	436556	PrimaryExpression	0x80		436388	0					
ANR	436557	BitAndExpression	( rune >> 6 ) & 0x3f		436388	1		&			
ANR	436558	ShiftExpression	rune >> 6		436388	0		>>			
ANR	436559	Identifier	rune		436388	0					
ANR	436560	PrimaryExpression	6		436388	1					
ANR	436561	PrimaryExpression	0x3f		436388	1					
ANR	436562	ExpressionStatement	cstr [ idx ++ ] = 0x80 | ( rune & 0x3f )	55:8:1789:1823	436388	1	True				
ANR	436563	AssignmentExpression	cstr [ idx ++ ] = 0x80 | ( rune & 0x3f )		436388	0		=			
ANR	436564	ArrayIndexing	cstr [ idx ++ ]		436388	0					
ANR	436565	Identifier	cstr		436388	0					
ANR	436566	PostIncDecOperationExpression	idx ++		436388	1					
ANR	436567	Identifier	idx		436388	0					
ANR	436568	IncDec	++		436388	1					
ANR	436569	InclusiveOrExpression	0x80 | ( rune & 0x3f )		436388	1		|			
ANR	436570	PrimaryExpression	0x80		436388	0					
ANR	436571	BitAndExpression	rune & 0x3f		436388	1		&			
ANR	436572	Identifier	rune		436388	0					
ANR	436573	PrimaryExpression	0x3f		436388	1					
ANR	436574	ReturnStatement	return idx ;	58:4:1836:1846	436388	2	True				
ANR	436575	Identifier	idx		436388	0					
ANR	436576	ReturnType	int		436388	1					
ANR	436577	Identifier	codepoint_to_utf8		436388	2					
ANR	436578	ParameterList	"char * cstr , int rune"		436388	3					
ANR	436579	Parameter	char * cstr	26:22:791:800	436388	0	True				
ANR	436580	ParameterType	char *		436388	0					
ANR	436581	Identifier	cstr		436388	1					
ANR	436582	Parameter	int rune	26:34:803:810	436388	1	True				
ANR	436583	ParameterType	int		436388	0					
ANR	436584	Identifier	rune		436388	1					
ANR	436585	CFGEntryNode	ENTRY		436388		True				
ANR	436586	CFGExitNode	EXIT		436388		True				
ANR	436587	Symbol	cstr		436388						
ANR	436588	Symbol	* cstr		436388						
ANR	436589	Symbol	idx		436388						
ANR	436590	Symbol	rune		436388						
ANR	436591	Function	get_codepoint_utf8	61:0:1851:3644							
ANR	436592	FunctionDef	"get_codepoint_utf8 (FILE * file , const char * * astr)"		436591	0					
ANR	436593	CompoundStatement		62:0:1912:3644	436591	0					
ANR	436594	IdentifierDeclStatement	int c ;	63:4:1918:1923	436591	0	True				
ANR	436595	IdentifierDecl	c		436591	0					
ANR	436596	IdentifierDeclType	int		436591	0					
ANR	436597	Identifier	c		436591	1					
ANR	436598	IdentifierDeclStatement	int rune ;	64:4:1929:1937	436591	1	True				
ANR	436599	IdentifierDecl	rune		436591	0					
ANR	436600	IdentifierDeclType	int		436591	0					
ANR	436601	Identifier	rune		436591	1					
ANR	436602	IdentifierDeclStatement	int len ;	65:4:1943:1950	436591	2	True				
ANR	436603	IdentifierDecl	len		436591	0					
ANR	436604	IdentifierDeclType	int		436591	0					
ANR	436605	Identifier	len		436591	1					
ANR	436606	DoStatement	do		436591	3					
ANR	436607	CompoundStatement		12:7:383:383	436591	0					
ANR	436608	ExpressionStatement	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )	74:8:2306:2380	436591	0	True				
ANR	436609	AssignmentExpression	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )		436591	0		=			
ANR	436610	Identifier	c		436591	0					
ANR	436611	ConditionalExpression	file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF )		436591	1					
ANR	436612	Condition	file		436591	0					
ANR	436613	Identifier	file		436591	0					
ANR	436614	CallExpression	fgetc ( file )		436591	1					
ANR	436615	Callee	fgetc		436591	0					
ANR	436616	Identifier	fgetc		436591	0					
ANR	436617	ArgumentList	file		436591	1					
ANR	436618	Argument	file		436591	0					
ANR	436619	Identifier	file		436591	0					
ANR	436620	ConditionalExpression	* * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF		436591	2					
ANR	436621	Condition	* * astr		436591	0					
ANR	436622	UnaryOperationExpression	* * astr		436591	0					
ANR	436623	UnaryOperator	*		436591	0					
ANR	436624	UnaryOperationExpression	* astr		436591	1					
ANR	436625	UnaryOperator	*		436591	0					
ANR	436626	Identifier	astr		436591	1					
ANR	436627	CastExpression	( int ) ( unsigned char ) * ( * astr ) ++		436591	1					
ANR	436628	CastTarget	int		436591	0					
ANR	436629	CastExpression	( unsigned char ) * ( * astr ) ++		436591	1					
ANR	436630	CastTarget	unsigned char		436591	0					
ANR	436631	UnaryOperationExpression	* ( * astr ) ++		436591	1					
ANR	436632	UnaryOperator	*		436591	0					
ANR	436633	PostIncDecOperationExpression	( * astr ) ++		436591	1					
ANR	436634	UnaryOperationExpression	* astr		436591	0					
ANR	436635	UnaryOperator	*		436591	0					
ANR	436636	Identifier	astr		436591	1					
ANR	436637	IncDec	++		436591	1					
ANR	436638	Identifier	EOF		436591	2					
ANR	436639	IfStatement	if ( c == EOF )		436591	1					
ANR	436640	Condition	c == EOF	75:12:2394:2401	436591	0	True				
ANR	436641	EqualityExpression	c == EOF		436591	0		==			
ANR	436642	Identifier	c		436591	0					
ANR	436643	Identifier	EOF		436591	1					
ANR	436644	ReturnStatement	return EOF ;	76:12:2416:2426	436591	1	True				
ANR	436645	Identifier	EOF		436591	0					
ANR	436646	IfStatement	if ( c < 0x80 )		436591	2					
ANR	436647	Condition	c < 0x80	77:12:2440:2447	436591	0	True				
ANR	436648	RelationalExpression	c < 0x80		436591	0		<			
ANR	436649	Identifier	c		436591	0					
ANR	436650	PrimaryExpression	0x80		436591	1					
ANR	436651	ReturnStatement	return c ;	78:12:2462:2470	436591	1	True				
ANR	436652	Identifier	c		436591	0					
ANR	436653	Label	lead :	79:0:2472:2476	436591	3	True				
ANR	436654	Identifier	lead		436591	0					
ANR	436655	IfStatement	if ( c < 0xc0 )		436591	4					
ANR	436656	Condition	c < 0xc0	80:12:2554:2561	436591	0	True				
ANR	436657	RelationalExpression	c < 0xc0		436591	0		<			
ANR	436658	Identifier	c		436591	0					
ANR	436659	PrimaryExpression	0xc0		436591	1					
ANR	436660	ContinueStatement	continue ;	81:12:2576:2584	436591	1	True				
ANR	436661	ElseStatement	else		436591	0					
ANR	436662	IfStatement	if ( c < 0xe0 )		436591	0					
ANR	436663	Condition	c < 0xe0	82:17:2627:2634	436591	0	True				
ANR	436664	RelationalExpression	c < 0xe0		436591	0		<			
ANR	436665	Identifier	c		436591	0					
ANR	436666	PrimaryExpression	0xe0		436591	1					
ANR	436667	ExpressionStatement	"len = 1 , rune = c & 0x1f"	83:12:2649:2673	436591	1	True				
ANR	436668	Expression	"len = 1 , rune = c & 0x1f"		436591	0					
ANR	436669	AssignmentExpression	len = 1		436591	0		=			
ANR	436670	Identifier	len		436591	0					
ANR	436671	PrimaryExpression	1		436591	1					
ANR	436672	AssignmentExpression	rune = c & 0x1f		436591	1		=			
ANR	436673	Identifier	rune		436591	0					
ANR	436674	BitAndExpression	c & 0x1f		436591	1		&			
ANR	436675	Identifier	c		436591	0					
ANR	436676	PrimaryExpression	0x1f		436591	1					
ANR	436677	ElseStatement	else		436591	0					
ANR	436678	IfStatement	if ( c < 0xf0 )		436591	0					
ANR	436679	Condition	c < 0xf0	84:17:2692:2699	436591	0	True				
ANR	436680	RelationalExpression	c < 0xf0		436591	0		<			
ANR	436681	Identifier	c		436591	0					
ANR	436682	PrimaryExpression	0xf0		436591	1					
ANR	436683	ExpressionStatement	"len = 2 , rune = c & 0xf"	85:12:2714:2737	436591	1	True				
ANR	436684	Expression	"len = 2 , rune = c & 0xf"		436591	0					
ANR	436685	AssignmentExpression	len = 2		436591	0		=			
ANR	436686	Identifier	len		436591	0					
ANR	436687	PrimaryExpression	2		436591	1					
ANR	436688	AssignmentExpression	rune = c & 0xf		436591	1		=			
ANR	436689	Identifier	rune		436591	0					
ANR	436690	BitAndExpression	c & 0xf		436591	1		&			
ANR	436691	Identifier	c		436591	0					
ANR	436692	PrimaryExpression	0xf		436591	1					
ANR	436693	ElseStatement	else		436591	0					
ANR	436694	IfStatement	if ( c < 0xf8 )		436591	0					
ANR	436695	Condition	c < 0xf8	86:17:2756:2763	436591	0	True				
ANR	436696	RelationalExpression	c < 0xf8		436591	0		<			
ANR	436697	Identifier	c		436591	0					
ANR	436698	PrimaryExpression	0xf8		436591	1					
ANR	436699	ExpressionStatement	"len = 3 , rune = c & 7"	87:12:2778:2799	436591	1	True				
ANR	436700	Expression	"len = 3 , rune = c & 7"		436591	0					
ANR	436701	AssignmentExpression	len = 3		436591	0		=			
ANR	436702	Identifier	len		436591	0					
ANR	436703	PrimaryExpression	3		436591	1					
ANR	436704	AssignmentExpression	rune = c & 7		436591	1		=			
ANR	436705	Identifier	rune		436591	0					
ANR	436706	BitAndExpression	c & 7		436591	1		&			
ANR	436707	Identifier	c		436591	0					
ANR	436708	PrimaryExpression	7		436591	1					
ANR	436709	ElseStatement	else		436591	0					
ANR	436710	IfStatement	if ( c < 0xfc )		436591	0					
ANR	436711	Condition	c < 0xfc	88:17:2818:2825	436591	0	True				
ANR	436712	RelationalExpression	c < 0xfc		436591	0		<			
ANR	436713	Identifier	c		436591	0					
ANR	436714	PrimaryExpression	0xfc		436591	1					
ANR	436715	ExpressionStatement	"len = 4 , rune = c & 3"	89:12:2840:2861	436591	1	True				
ANR	436716	Expression	"len = 4 , rune = c & 3"		436591	0					
ANR	436717	AssignmentExpression	len = 4		436591	0		=			
ANR	436718	Identifier	len		436591	0					
ANR	436719	PrimaryExpression	4		436591	1					
ANR	436720	AssignmentExpression	rune = c & 3		436591	1		=			
ANR	436721	Identifier	rune		436591	0					
ANR	436722	BitAndExpression	c & 3		436591	1		&			
ANR	436723	Identifier	c		436591	0					
ANR	436724	PrimaryExpression	3		436591	1					
ANR	436725	ElseStatement	else		436591	0					
ANR	436726	IfStatement	if ( c < 0xfe )		436591	0					
ANR	436727	Condition	c < 0xfe	90:17:2880:2887	436591	0	True				
ANR	436728	RelationalExpression	c < 0xfe		436591	0		<			
ANR	436729	Identifier	c		436591	0					
ANR	436730	PrimaryExpression	0xfe		436591	1					
ANR	436731	ExpressionStatement	"len = 5 , rune = c & 1"	91:12:2902:2923	436591	1	True				
ANR	436732	Expression	"len = 5 , rune = c & 1"		436591	0					
ANR	436733	AssignmentExpression	len = 5		436591	0		=			
ANR	436734	Identifier	len		436591	0					
ANR	436735	PrimaryExpression	5		436591	1					
ANR	436736	AssignmentExpression	rune = c & 1		436591	1		=			
ANR	436737	Identifier	rune		436591	0					
ANR	436738	BitAndExpression	c & 1		436591	1		&			
ANR	436739	Identifier	c		436591	0					
ANR	436740	PrimaryExpression	1		436591	1					
ANR	436741	ElseStatement	else		436591	0					
ANR	436742	ContinueStatement	continue ;	93:12:2950:2958	436591	0	True				
ANR	436743	DoStatement	do		436591	5					
ANR	436744	CompoundStatement		33:11:1082:1082	436591	0					
ANR	436745	ExpressionStatement	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )	95:12:3009:3083	436591	0	True				
ANR	436746	AssignmentExpression	c = ( file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF ) )		436591	0		=			
ANR	436747	Identifier	c		436591	0					
ANR	436748	ConditionalExpression	file ? fgetc ( file ) : ( * * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF )		436591	1					
ANR	436749	Condition	file		436591	0					
ANR	436750	Identifier	file		436591	0					
ANR	436751	CallExpression	fgetc ( file )		436591	1					
ANR	436752	Callee	fgetc		436591	0					
ANR	436753	Identifier	fgetc		436591	0					
ANR	436754	ArgumentList	file		436591	1					
ANR	436755	Argument	file		436591	0					
ANR	436756	Identifier	file		436591	0					
ANR	436757	ConditionalExpression	* * astr ? ( int ) ( unsigned char ) * ( * astr ) ++ : EOF		436591	2					
ANR	436758	Condition	* * astr		436591	0					
ANR	436759	UnaryOperationExpression	* * astr		436591	0					
ANR	436760	UnaryOperator	*		436591	0					
ANR	436761	UnaryOperationExpression	* astr		436591	1					
ANR	436762	UnaryOperator	*		436591	0					
ANR	436763	Identifier	astr		436591	1					
ANR	436764	CastExpression	( int ) ( unsigned char ) * ( * astr ) ++		436591	1					
ANR	436765	CastTarget	int		436591	0					
ANR	436766	CastExpression	( unsigned char ) * ( * astr ) ++		436591	1					
ANR	436767	CastTarget	unsigned char		436591	0					
ANR	436768	UnaryOperationExpression	* ( * astr ) ++		436591	1					
ANR	436769	UnaryOperator	*		436591	0					
ANR	436770	PostIncDecOperationExpression	( * astr ) ++		436591	1					
ANR	436771	UnaryOperationExpression	* astr		436591	0					
ANR	436772	UnaryOperator	*		436591	0					
ANR	436773	Identifier	astr		436591	1					
ANR	436774	IncDec	++		436591	1					
ANR	436775	Identifier	EOF		436591	2					
ANR	436776	IfStatement	if ( c == EOF )		436591	1					
ANR	436777	Condition	c == EOF	96:16:3101:3108	436591	0	True				
ANR	436778	EqualityExpression	c == EOF		436591	0		==			
ANR	436779	Identifier	c		436591	0					
ANR	436780	Identifier	EOF		436591	1					
ANR	436781	ReturnStatement	return EOF ;	97:16:3127:3137	436591	1	True				
ANR	436782	Identifier	EOF		436591	0					
ANR	436783	ExpressionStatement	rune = ( rune << 6 ) | ( c & 0x3f )	98:12:3151:3180	436591	2	True				
ANR	436784	AssignmentExpression	rune = ( rune << 6 ) | ( c & 0x3f )		436591	0		=			
ANR	436785	Identifier	rune		436591	0					
ANR	436786	InclusiveOrExpression	( rune << 6 ) | ( c & 0x3f )		436591	1		|			
ANR	436787	ShiftExpression	rune << 6		436591	0		<<			
ANR	436788	Identifier	rune		436591	0					
ANR	436789	PrimaryExpression	6		436591	1					
ANR	436790	BitAndExpression	c & 0x3f		436591	1		&			
ANR	436791	Identifier	c		436591	0					
ANR	436792	PrimaryExpression	0x3f		436591	1					
ANR	436793	Condition	( ( c & 0xC0 ) == 0x80 ) && -- len	99:17:3199:3227	436591	1	True				
ANR	436794	AndExpression	( ( c & 0xC0 ) == 0x80 ) && -- len		436591	0		&&			
ANR	436795	EqualityExpression	( c & 0xC0 ) == 0x80		436591	0		==			
ANR	436796	BitAndExpression	c & 0xC0		436591	0		&			
ANR	436797	Identifier	c		436591	0					
ANR	436798	PrimaryExpression	0xC0		436591	1					
ANR	436799	PrimaryExpression	0x80		436591	1					
ANR	436800	UnaryExpression	-- len		436591	1					
ANR	436801	IncDec	--		436591	0					
ANR	436802	Identifier	len		436591	1					
ANR	436803	IfStatement	if ( len )		436591	6					
ANR	436804	Condition	len	100:12:3243:3245	436591	0	True				
ANR	436805	Identifier	len		436591	0					
ANR	436806	CompoundStatement		39:17:1335:1335	436591	1					
ANR	436807	IfStatement	if ( c < 0x80 )		436591	0					
ANR	436808	Condition	c < 0x80	102:16:3333:3340	436591	0	True				
ANR	436809	RelationalExpression	c < 0x80		436591	0		<			
ANR	436810	Identifier	c		436591	0					
ANR	436811	PrimaryExpression	0x80		436591	1					
ANR	436812	CompoundStatement		41:26:1430:1430	436591	1					
ANR	436813	ReturnStatement	return c ;	104:16:3427:3435	436591	0	True				
ANR	436814	Identifier	c		436591	0					
ANR	436815	GotoStatement	goto lead ;	107:12:3504:3513	436591	1	True				
ANR	436816	Identifier	lead		436591	0					
ANR	436817	IfStatement	if ( rune == 0xFEFF )		436591	7					
ANR	436818	Condition	rune == 0xFEFF	109:12:3537:3550	436591	0	True				
ANR	436819	EqualityExpression	rune == 0xFEFF		436591	0		==			
ANR	436820	Identifier	rune		436591	0					
ANR	436821	PrimaryExpression	0xFEFF		436591	1					
ANR	436822	ContinueStatement	continue ;	110:12:3565:3573	436591	1	True				
ANR	436823	BreakStatement	break ;	111:8:3602:3607	436591	8	True				
ANR	436824	Condition	1	112:13:3622:3622	436591	1	True				
ANR	436825	PrimaryExpression	1		436591	0					
ANR	436826	ReturnStatement	return rune ;	114:4:3631:3642	436591	4	True				
ANR	436827	Identifier	rune		436591	0					
ANR	436828	ReturnType	static int		436591	1					
ANR	436829	Identifier	get_codepoint_utf8		436591	2					
ANR	436830	ParameterList	"FILE * file , const char * * astr"		436591	3					
ANR	436831	Parameter	FILE * file	61:30:1881:1890	436591	0	True				
ANR	436832	ParameterType	FILE *		436591	0					
ANR	436833	Identifier	file		436591	1					
ANR	436834	Parameter	const char * * astr	61:42:1893:1909	436591	1	True				
ANR	436835	ParameterType	const char * *		436591	0					
ANR	436836	Identifier	astr		436591	1					
ANR	436837	CFGEntryNode	ENTRY		436591		True				
ANR	436838	CFGExitNode	EXIT		436591		True				
ANR	436839	Symbol	file		436591						
ANR	436840	Symbol	c		436591						
ANR	436841	Symbol	* ( * astr ) ++		436591						
ANR	436842	Symbol	len		436591						
ANR	436843	Symbol	* * astr		436591						
ANR	436844	Symbol	* astr		436591						
ANR	436845	Symbol	astr		436591						
ANR	436846	Symbol	EOF		436591						
ANR	436847	Symbol	fgetc		436591						
ANR	436848	Symbol	rune		436591						
ANR	436849	Function	arg_init	118:0:3677:4366							
ANR	436850	FunctionDef	"arg_init (arg_list * pal , const char * * argv , int argc , FILE * ( * arg_fopen ) ( const char * fname , void * fopen_data ) , void * fopen_data , int ( * get_codepoint ) ( FILE * file , const char * * astr ) , gs_memory_t * memory)"		436849	0					
ANR	436851	CompoundStatement		124:0:3948:4366	436849	0					
ANR	436852	ExpressionStatement	pal -> expand_ats = true	125:4:3954:3976	436849	0	True				
ANR	436853	AssignmentExpression	pal -> expand_ats = true		436849	0		=			
ANR	436854	PtrMemberAccess	pal -> expand_ats		436849	0					
ANR	436855	Identifier	pal		436849	0					
ANR	436856	Identifier	expand_ats		436849	1					
ANR	436857	Identifier	true		436849	1					
ANR	436858	ExpressionStatement	pal -> arg_fopen = arg_fopen	126:4:3982:4008	436849	1	True				
ANR	436859	AssignmentExpression	pal -> arg_fopen = arg_fopen		436849	0		=			
ANR	436860	PtrMemberAccess	pal -> arg_fopen		436849	0					
ANR	436861	Identifier	pal		436849	0					
ANR	436862	Identifier	arg_fopen		436849	1					
ANR	436863	Identifier	arg_fopen		436849	1					
ANR	436864	ExpressionStatement	pal -> fopen_data = fopen_data	127:4:4014:4042	436849	2	True				
ANR	436865	AssignmentExpression	pal -> fopen_data = fopen_data		436849	0		=			
ANR	436866	PtrMemberAccess	pal -> fopen_data		436849	0					
ANR	436867	Identifier	pal		436849	0					
ANR	436868	Identifier	fopen_data		436849	1					
ANR	436869	Identifier	fopen_data		436849	1					
ANR	436870	ExpressionStatement	pal -> get_codepoint = ( get_codepoint ? get_codepoint : get_codepoint_utf8 )	128:4:4048:4121	436849	3	True				
ANR	436871	AssignmentExpression	pal -> get_codepoint = ( get_codepoint ? get_codepoint : get_codepoint_utf8 )		436849	0		=			
ANR	436872	PtrMemberAccess	pal -> get_codepoint		436849	0					
ANR	436873	Identifier	pal		436849	0					
ANR	436874	Identifier	get_codepoint		436849	1					
ANR	436875	ConditionalExpression	get_codepoint ? get_codepoint : get_codepoint_utf8		436849	1					
ANR	436876	Condition	get_codepoint		436849	0					
ANR	436877	Identifier	get_codepoint		436849	0					
ANR	436878	Identifier	get_codepoint		436849	1					
ANR	436879	Identifier	get_codepoint_utf8		436849	2					
ANR	436880	ExpressionStatement	pal -> memory = memory	129:4:4127:4147	436849	4	True				
ANR	436881	AssignmentExpression	pal -> memory = memory		436849	0		=			
ANR	436882	PtrMemberAccess	pal -> memory		436849	0					
ANR	436883	Identifier	pal		436849	0					
ANR	436884	Identifier	memory		436849	1					
ANR	436885	Identifier	memory		436849	1					
ANR	436886	ExpressionStatement	pal -> argp = argv + 1	130:4:4153:4173	436849	5	True				
ANR	436887	AssignmentExpression	pal -> argp = argv + 1		436849	0		=			
ANR	436888	PtrMemberAccess	pal -> argp		436849	0					
ANR	436889	Identifier	pal		436849	0					
ANR	436890	Identifier	argp		436849	1					
ANR	436891	AdditiveExpression	argv + 1		436849	1		+			
ANR	436892	Identifier	argv		436849	0					
ANR	436893	PrimaryExpression	1		436849	1					
ANR	436894	ExpressionStatement	pal -> argn = argc - 1	131:4:4179:4199	436849	6	True				
ANR	436895	AssignmentExpression	pal -> argn = argc - 1		436849	0		=			
ANR	436896	PtrMemberAccess	pal -> argn		436849	0					
ANR	436897	Identifier	pal		436849	0					
ANR	436898	Identifier	argn		436849	1					
ANR	436899	AdditiveExpression	argc - 1		436849	1		-			
ANR	436900	Identifier	argc		436849	0					
ANR	436901	PrimaryExpression	1		436849	1					
ANR	436902	ExpressionStatement	pal -> depth = 0	132:4:4205:4219	436849	7	True				
ANR	436903	AssignmentExpression	pal -> depth = 0		436849	0		=			
ANR	436904	PtrMemberAccess	pal -> depth		436849	0					
ANR	436905	Identifier	pal		436849	0					
ANR	436906	Identifier	depth		436849	1					
ANR	436907	PrimaryExpression	0		436849	1					
ANR	436908	ExpressionStatement	pal -> sources [ 0 ] . is_file = 0	133:4:4225:4252	436849	8	True				
ANR	436909	AssignmentExpression	pal -> sources [ 0 ] . is_file = 0		436849	0		=			
ANR	436910	MemberAccess	pal -> sources [ 0 ] . is_file		436849	0					
ANR	436911	ArrayIndexing	pal -> sources [ 0 ]		436849	0					
ANR	436912	PtrMemberAccess	pal -> sources		436849	0					
ANR	436913	Identifier	pal		436849	0					
ANR	436914	Identifier	sources		436849	1					
ANR	436915	PrimaryExpression	0		436849	1					
ANR	436916	Identifier	is_file		436849	1					
ANR	436917	PrimaryExpression	0		436849	1					
ANR	436918	ExpressionStatement	pal -> sources [ 0 ] . u . s . memory = NULL	134:4:4258:4291	436849	9	True				
ANR	436919	AssignmentExpression	pal -> sources [ 0 ] . u . s . memory = NULL		436849	0		=			
ANR	436920	MemberAccess	pal -> sources [ 0 ] . u . s . memory		436849	0					
ANR	436921	MemberAccess	pal -> sources [ 0 ] . u . s		436849	0					
ANR	436922	MemberAccess	pal -> sources [ 0 ] . u		436849	0					
ANR	436923	ArrayIndexing	pal -> sources [ 0 ]		436849	0					
ANR	436924	PtrMemberAccess	pal -> sources		436849	0					
ANR	436925	Identifier	pal		436849	0					
ANR	436926	Identifier	sources		436849	1					
ANR	436927	PrimaryExpression	0		436849	1					
ANR	436928	Identifier	u		436849	1					
ANR	436929	Identifier	s		436849	1					
ANR	436930	Identifier	memory		436849	1					
ANR	436931	Identifier	NULL		436849	1					
ANR	436932	ExpressionStatement	pal -> sources [ 0 ] . u . s . decoded = 0	135:4:4297:4328	436849	10	True				
ANR	436933	AssignmentExpression	pal -> sources [ 0 ] . u . s . decoded = 0		436849	0		=			
ANR	436934	MemberAccess	pal -> sources [ 0 ] . u . s . decoded		436849	0					
ANR	436935	MemberAccess	pal -> sources [ 0 ] . u . s		436849	0					
ANR	436936	MemberAccess	pal -> sources [ 0 ] . u		436849	0					
ANR	436937	ArrayIndexing	pal -> sources [ 0 ]		436849	0					
ANR	436938	PtrMemberAccess	pal -> sources		436849	0					
ANR	436939	Identifier	pal		436849	0					
ANR	436940	Identifier	sources		436849	1					
ANR	436941	PrimaryExpression	0		436849	1					
ANR	436942	Identifier	u		436849	1					
ANR	436943	Identifier	s		436849	1					
ANR	436944	Identifier	decoded		436849	1					
ANR	436945	PrimaryExpression	0		436849	1					
ANR	436946	ExpressionStatement	pal -> sources [ 0 ] . u . s . parsed = 0	136:4:4334:4364	436849	11	True				
ANR	436947	AssignmentExpression	pal -> sources [ 0 ] . u . s . parsed = 0		436849	0		=			
ANR	436948	MemberAccess	pal -> sources [ 0 ] . u . s . parsed		436849	0					
ANR	436949	MemberAccess	pal -> sources [ 0 ] . u . s		436849	0					
ANR	436950	MemberAccess	pal -> sources [ 0 ] . u		436849	0					
ANR	436951	ArrayIndexing	pal -> sources [ 0 ]		436849	0					
ANR	436952	PtrMemberAccess	pal -> sources		436849	0					
ANR	436953	Identifier	pal		436849	0					
ANR	436954	Identifier	sources		436849	1					
ANR	436955	PrimaryExpression	0		436849	1					
ANR	436956	Identifier	u		436849	1					
ANR	436957	Identifier	s		436849	1					
ANR	436958	Identifier	parsed		436849	1					
ANR	436959	PrimaryExpression	0		436849	1					
ANR	436960	ReturnType	void		436849	1					
ANR	436961	Identifier	arg_init		436849	2					
ANR	436962	ParameterList	"arg_list * pal , const char * * argv , int argc , FILE * ( * arg_fopen ) ( const char * fname , void * fopen_data ) , void * fopen_data , int ( * get_codepoint ) ( FILE * file , const char * * astr ) , gs_memory_t * memory"		436849	3					
ANR	436963	Parameter	arg_list * pal	119:9:3691:3704	436849	0	True				
ANR	436964	ParameterType	arg_list *		436849	0					
ANR	436965	Identifier	pal		436849	1					
ANR	436966	Parameter	const char * * argv	119:25:3707:3723	436849	1	True				
ANR	436967	ParameterType	const char * *		436849	0					
ANR	436968	Identifier	argv		436849	1					
ANR	436969	Parameter	int argc	119:44:3726:3733	436849	2	True				
ANR	436970	ParameterType	int		436849	0					
ANR	436971	Identifier	argc		436849	1					
ANR	436972	Parameter	"FILE * ( * arg_fopen ) ( const char * fname , void * fopen_data )"	120:9:3745:3807	436849	3	True				
ANR	436973	ParameterType	"(* ( const char * fname , void * fopen_data ) FILE) *"		436849	0					
ANR	436974	Identifier	arg_fopen		436849	1					
ANR	436975	Parameter	void * fopen_data	121:9:3819:3842	436849	4	True				
ANR	436976	ParameterType	void *		436849	0					
ANR	436977	Identifier	fopen_data		436849	1					
ANR	436978	Parameter	"int ( * get_codepoint ) ( FILE * file , const char * * astr )"	122:9:3854:3914	436849	5	True				
ANR	436979	ParameterType	"(( FILE * file , const char * * astr ) int) *"		436849	0					
ANR	436980	Identifier	get_codepoint		436849	1					
ANR	436981	Parameter	gs_memory_t * memory	123:9:3926:3945	436849	6	True				
ANR	436982	ParameterType	gs_memory_t *		436849	0					
ANR	436983	Identifier	memory		436849	1					
ANR	436984	CFGEntryNode	ENTRY		436849		True				
ANR	436985	CFGExitNode	EXIT		436849		True				
ANR	436986	Symbol	memory		436849						
ANR	436987	Symbol	arg_fopen		436849						
ANR	436988	Symbol	* pal		436849						
ANR	436989	Symbol	pal -> get_codepoint		436849						
ANR	436990	Symbol	pal -> arg_fopen		436849						
ANR	436991	Symbol	pal -> fopen_data		436849						
ANR	436992	Symbol	* pal -> sources		436849						
ANR	436993	Symbol	pal -> sources [ 0 ] . u . s		436849						
ANR	436994	Symbol	pal -> sources [ 0 ] . u . s . decoded		436849						
ANR	436995	Symbol	argv		436849						
ANR	436996	Symbol	pal -> sources [ 0 ] . u . s . memory		436849						
ANR	436997	Symbol	pal		436849						
ANR	436998	Symbol	pal -> sources [ 0 ] . u . s . parsed		436849						
ANR	436999	Symbol	get_codepoint_utf8		436849						
ANR	437000	Symbol	argc		436849						
ANR	437001	Symbol	NULL		436849						
ANR	437002	Symbol	pal -> sources [ 0 ] . is_file		436849						
ANR	437003	Symbol	get_codepoint		436849						
ANR	437004	Symbol	pal -> memory		436849						
ANR	437005	Symbol	* * pal		436849						
ANR	437006	Symbol	pal -> expand_ats		436849						
ANR	437007	Symbol	pal -> sources [ 0 ] . u		436849						
ANR	437008	Symbol	pal -> depth		436849						
ANR	437009	Symbol	true		436849						
ANR	437010	Symbol	pal -> argp		436849						
ANR	437011	Symbol	pal -> sources		436849						
ANR	437012	Symbol	pal -> argn		436849						
ANR	437013	Symbol	fopen_data		436849						
ANR	437014	Function	arg_push_memory_string	140:0:4407:4569							
ANR	437015	FunctionDef	"arg_push_memory_string (arg_list * pal , char * str , bool parsed , gs_memory_t * mem)"		437014	0					
ANR	437016	CompoundStatement		142:0:4493:4569	437014	0					
ANR	437017	ReturnStatement	"return arg_push_decoded_memory_string ( pal , str , parsed , parsed , mem ) ;"	143:4:4499:4567	437014	0	True				
ANR	437018	CallExpression	"arg_push_decoded_memory_string ( pal , str , parsed , parsed , mem )"		437014	0					
ANR	437019	Callee	arg_push_decoded_memory_string		437014	0					
ANR	437020	Identifier	arg_push_decoded_memory_string		437014	0					
ANR	437021	ArgumentList	pal		437014	1					
ANR	437022	Argument	pal		437014	0					
ANR	437023	Identifier	pal		437014	0					
ANR	437024	Argument	str		437014	1					
ANR	437025	Identifier	str		437014	0					
ANR	437026	Argument	parsed		437014	2					
ANR	437027	Identifier	parsed		437014	0					
ANR	437028	Argument	parsed		437014	3					
ANR	437029	Identifier	parsed		437014	0					
ANR	437030	Argument	mem		437014	4					
ANR	437031	Identifier	mem		437014	0					
ANR	437032	ReturnType	int		437014	1					
ANR	437033	Identifier	arg_push_memory_string		437014	2					
ANR	437034	ParameterList	"arg_list * pal , char * str , bool parsed , gs_memory_t * mem"		437014	3					
ANR	437035	Parameter	arg_list * pal	141:23:4434:4447	437014	0	True				
ANR	437036	ParameterType	arg_list *		437014	0					
ANR	437037	Identifier	pal		437014	1					
ANR	437038	Parameter	char * str	141:39:4450:4458	437014	1	True				
ANR	437039	ParameterType	char *		437014	0					
ANR	437040	Identifier	str		437014	1					
ANR	437041	Parameter	bool parsed	141:50:4461:4471	437014	2	True				
ANR	437042	ParameterType	bool		437014	0					
ANR	437043	Identifier	parsed		437014	1					
ANR	437044	Parameter	gs_memory_t * mem	141:63:4474:4490	437014	3	True				
ANR	437045	ParameterType	gs_memory_t *		437014	0					
ANR	437046	Identifier	mem		437014	1					
ANR	437047	CFGEntryNode	ENTRY		437014		True				
ANR	437048	CFGExitNode	EXIT		437014		True				
ANR	437049	Symbol	str		437014						
ANR	437050	Symbol	mem		437014						
ANR	437051	Symbol	arg_push_decoded_memory_string		437014						
ANR	437052	Symbol	pal		437014						
ANR	437053	Symbol	parsed		437014						
ANR	437054	Function	arg_push_decoded_memory_string	146:0:4572:5038							
ANR	437055	FunctionDef	"arg_push_decoded_memory_string (arg_list * pal , char * str , bool parsed , bool decoded , gs_memory_t * mem)"		437054	0					
ANR	437056	CompoundStatement		148:0:4680:5038	437054	0					
ANR	437057	IdentifierDeclStatement	arg_source * pas ;	149:4:4686:4701	437054	0	True				
ANR	437058	IdentifierDecl	* pas		437054	0					
ANR	437059	IdentifierDeclType	arg_source *		437054	0					
ANR	437060	Identifier	pas		437054	1					
ANR	437061	IfStatement	if ( pal -> depth + 1 == arg_depth_max )		437054	1					
ANR	437062	Condition	pal -> depth + 1 == arg_depth_max	151:8:4712:4740	437054	0	True				
ANR	437063	EqualityExpression	pal -> depth + 1 == arg_depth_max		437054	0		==			
ANR	437064	AdditiveExpression	pal -> depth + 1		437054	0		+			
ANR	437065	PtrMemberAccess	pal -> depth		437054	0					
ANR	437066	Identifier	pal		437054	0					
ANR	437067	Identifier	depth		437054	1					
ANR	437068	PrimaryExpression	1		437054	1					
ANR	437069	Identifier	arg_depth_max		437054	1					
ANR	437070	CompoundStatement		4:39:62:62	437054	1					
ANR	437071	ExpressionStatement	"lprintf ( ""Too much nesting of @-files.\\n"" )"	152:8:4753:4794	437054	0	True				
ANR	437072	CallExpression	"lprintf ( ""Too much nesting of @-files.\\n"" )"		437054	0					
ANR	437073	Callee	lprintf		437054	0					
ANR	437074	Identifier	lprintf		437054	0					
ANR	437075	ArgumentList	"""Too much nesting of @-files.\\n"""		437054	1					
ANR	437076	Argument	"""Too much nesting of @-files.\\n"""		437054	0					
ANR	437077	PrimaryExpression	"""Too much nesting of @-files.\\n"""		437054	0					
ANR	437078	ReturnStatement	return 1 ;	153:8:4804:4812	437054	1	True				
ANR	437079	PrimaryExpression	1		437054	0					
ANR	437080	ExpressionStatement	pas = & pal -> sources [ ++ pal -> depth ]	155:4:4824:4857	437054	2	True				
ANR	437081	AssignmentExpression	pas = & pal -> sources [ ++ pal -> depth ]		437054	0		=			
ANR	437082	Identifier	pas		437054	0					
ANR	437083	UnaryOperationExpression	& pal -> sources [ ++ pal -> depth ]		437054	1					
ANR	437084	UnaryOperator	&		437054	0					
ANR	437085	ArrayIndexing	pal -> sources [ ++ pal -> depth ]		437054	1					
ANR	437086	PtrMemberAccess	pal -> sources		437054	0					
ANR	437087	Identifier	pal		437054	0					
ANR	437088	Identifier	sources		437054	1					
ANR	437089	UnaryExpression	++ pal -> depth		437054	1					
ANR	437090	IncDec	++		437054	0					
ANR	437091	PtrMemberAccess	pal -> depth		437054	1					
ANR	437092	Identifier	pal		437054	0					
ANR	437093	Identifier	depth		437054	1					
ANR	437094	ExpressionStatement	pas -> is_file = false	156:4:4863:4883	437054	3	True				
ANR	437095	AssignmentExpression	pas -> is_file = false		437054	0		=			
ANR	437096	PtrMemberAccess	pas -> is_file		437054	0					
ANR	437097	Identifier	pas		437054	0					
ANR	437098	Identifier	is_file		437054	1					
ANR	437099	Identifier	false		437054	1					
ANR	437100	ExpressionStatement	pas -> u . s . parsed = parsed	157:4:4889:4913	437054	4	True				
ANR	437101	AssignmentExpression	pas -> u . s . parsed = parsed		437054	0		=			
ANR	437102	MemberAccess	pas -> u . s . parsed		437054	0					
ANR	437103	MemberAccess	pas -> u . s		437054	0					
ANR	437104	PtrMemberAccess	pas -> u		437054	0					
ANR	437105	Identifier	pas		437054	0					
ANR	437106	Identifier	u		437054	1					
ANR	437107	Identifier	s		437054	1					
ANR	437108	Identifier	parsed		437054	1					
ANR	437109	Identifier	parsed		437054	1					
ANR	437110	ExpressionStatement	pas -> u . s . decoded = decoded	158:4:4919:4945	437054	5	True				
ANR	437111	AssignmentExpression	pas -> u . s . decoded = decoded		437054	0		=			
ANR	437112	MemberAccess	pas -> u . s . decoded		437054	0					
ANR	437113	MemberAccess	pas -> u . s		437054	0					
ANR	437114	PtrMemberAccess	pas -> u		437054	0					
ANR	437115	Identifier	pas		437054	0					
ANR	437116	Identifier	u		437054	1					
ANR	437117	Identifier	s		437054	1					
ANR	437118	Identifier	decoded		437054	1					
ANR	437119	Identifier	decoded		437054	1					
ANR	437120	ExpressionStatement	pas -> u . s . chars = str	159:4:4951:4971	437054	6	True				
ANR	437121	AssignmentExpression	pas -> u . s . chars = str		437054	0		=			
ANR	437122	MemberAccess	pas -> u . s . chars		437054	0					
ANR	437123	MemberAccess	pas -> u . s		437054	0					
ANR	437124	PtrMemberAccess	pas -> u		437054	0					
ANR	437125	Identifier	pas		437054	0					
ANR	437126	Identifier	u		437054	1					
ANR	437127	Identifier	s		437054	1					
ANR	437128	Identifier	chars		437054	1					
ANR	437129	Identifier	str		437054	1					
ANR	437130	ExpressionStatement	pas -> u . s . memory = mem	160:4:4977:4998	437054	7	True				
ANR	437131	AssignmentExpression	pas -> u . s . memory = mem		437054	0		=			
ANR	437132	MemberAccess	pas -> u . s . memory		437054	0					
ANR	437133	MemberAccess	pas -> u . s		437054	0					
ANR	437134	PtrMemberAccess	pas -> u		437054	0					
ANR	437135	Identifier	pas		437054	0					
ANR	437136	Identifier	u		437054	1					
ANR	437137	Identifier	s		437054	1					
ANR	437138	Identifier	memory		437054	1					
ANR	437139	Identifier	mem		437054	1					
ANR	437140	ExpressionStatement	pas -> u . s . str = str	161:4:5004:5022	437054	8	True				
ANR	437141	AssignmentExpression	pas -> u . s . str = str		437054	0		=			
ANR	437142	MemberAccess	pas -> u . s . str		437054	0					
ANR	437143	MemberAccess	pas -> u . s		437054	0					
ANR	437144	PtrMemberAccess	pas -> u		437054	0					
ANR	437145	Identifier	pas		437054	0					
ANR	437146	Identifier	u		437054	1					
ANR	437147	Identifier	s		437054	1					
ANR	437148	Identifier	str		437054	1					
ANR	437149	Identifier	str		437054	1					
ANR	437150	ReturnStatement	return 0 ;	162:4:5028:5036	437054	9	True				
ANR	437151	PrimaryExpression	0		437054	0					
ANR	437152	ReturnType	int		437054	1					
ANR	437153	Identifier	arg_push_decoded_memory_string		437054	2					
ANR	437154	ParameterList	"arg_list * pal , char * str , bool parsed , bool decoded , gs_memory_t * mem"		437054	3					
ANR	437155	Parameter	arg_list * pal	147:31:4607:4620	437054	0	True				
ANR	437156	ParameterType	arg_list *		437054	0					
ANR	437157	Identifier	pal		437054	1					
ANR	437158	Parameter	char * str	147:47:4623:4631	437054	1	True				
ANR	437159	ParameterType	char *		437054	0					
ANR	437160	Identifier	str		437054	1					
ANR	437161	Parameter	bool parsed	147:58:4634:4644	437054	2	True				
ANR	437162	ParameterType	bool		437054	0					
ANR	437163	Identifier	parsed		437054	1					
ANR	437164	Parameter	bool decoded	147:71:4647:4658	437054	3	True				
ANR	437165	ParameterType	bool		437054	0					
ANR	437166	Identifier	decoded		437054	1					
ANR	437167	Parameter	gs_memory_t * mem	147:85:4661:4677	437054	4	True				
ANR	437168	ParameterType	gs_memory_t *		437054	0					
ANR	437169	Identifier	mem		437054	1					
ANR	437170	CFGEntryNode	ENTRY		437054		True				
ANR	437171	CFGExitNode	EXIT		437054		True				
ANR	437172	Symbol	pas -> u . s . memory		437054						
ANR	437173	Symbol	pas		437054						
ANR	437174	Symbol	* pal		437054						
ANR	437175	Symbol	pas -> is_file		437054						
ANR	437176	Symbol	false		437054						
ANR	437177	Symbol	pas -> u . s . parsed		437054						
ANR	437178	Symbol	* pas		437054						
ANR	437179	Symbol	pas -> u . s . decoded		437054						
ANR	437180	Symbol	str		437054						
ANR	437181	Symbol	pas -> u . s . chars		437054						
ANR	437182	Symbol	pas -> u		437054						
ANR	437183	Symbol	pas -> u . s . str		437054						
ANR	437184	Symbol	mem		437054						
ANR	437185	Symbol	pal -> depth		437054						
ANR	437186	Symbol	arg_depth_max		437054						
ANR	437187	Symbol	decoded		437054						
ANR	437188	Symbol	pal		437054						
ANR	437189	Symbol	parsed		437054						
ANR	437190	Symbol	pas -> u . s		437054						
ANR	437191	Symbol	pal -> sources		437054						
ANR	437192	Function	arg_finit	166:0:5069:5401							
ANR	437193	FunctionDef	arg_finit (arg_list * pal)		437192	0					
ANR	437194	CompoundStatement		168:0:5100:5401	437192	0					
ANR	437195	WhileStatement	while ( pal -> depth )		437192	0					
ANR	437196	Condition	pal -> depth	170:11:5158:5167	437192	0	True				
ANR	437197	PtrMemberAccess	pal -> depth		437192	0					
ANR	437198	Identifier	pal		437192	0					
ANR	437199	Identifier	depth		437192	1					
ANR	437200	CompoundStatement		4:8:79:124	437192	1					
ANR	437201	IdentifierDeclStatement	arg_source * pas = & pal -> sources [ pal -> depth -- ] ;	171:8:5180:5225	437192	0	True				
ANR	437202	IdentifierDecl	* pas = & pal -> sources [ pal -> depth -- ]		437192	0					
ANR	437203	IdentifierDeclType	arg_source *		437192	0					
ANR	437204	Identifier	pas		437192	1					
ANR	437205	AssignmentExpression	* pas = & pal -> sources [ pal -> depth -- ]		437192	2		=			
ANR	437206	Identifier	pas		437192	0					
ANR	437207	UnaryOperationExpression	& pal -> sources [ pal -> depth -- ]		437192	1					
ANR	437208	UnaryOperator	&		437192	0					
ANR	437209	ArrayIndexing	pal -> sources [ pal -> depth -- ]		437192	1					
ANR	437210	PtrMemberAccess	pal -> sources		437192	0					
ANR	437211	Identifier	pal		437192	0					
ANR	437212	Identifier	sources		437192	1					
ANR	437213	PostIncDecOperationExpression	pal -> depth --		437192	1					
ANR	437214	PtrMemberAccess	pal -> depth		437192	0					
ANR	437215	Identifier	pal		437192	0					
ANR	437216	Identifier	depth		437192	1					
ANR	437217	IncDec	--		437192	1					
ANR	437218	IfStatement	if ( pas -> is_file )		437192	1					
ANR	437219	Condition	pas -> is_file	173:12:5240:5251	437192	0	True				
ANR	437220	PtrMemberAccess	pas -> is_file		437192	0					
ANR	437221	Identifier	pas		437192	0					
ANR	437222	Identifier	is_file		437192	1					
ANR	437223	ExpressionStatement	fclose ( pas -> u . file )	174:12:5266:5285	437192	1	True				
ANR	437224	CallExpression	fclose ( pas -> u . file )		437192	0					
ANR	437225	Callee	fclose		437192	0					
ANR	437226	Identifier	fclose		437192	0					
ANR	437227	ArgumentList	pas -> u . file		437192	1					
ANR	437228	Argument	pas -> u . file		437192	0					
ANR	437229	MemberAccess	pas -> u . file		437192	0					
ANR	437230	PtrMemberAccess	pas -> u		437192	0					
ANR	437231	Identifier	pas		437192	0					
ANR	437232	Identifier	u		437192	1					
ANR	437233	Identifier	file		437192	1					
ANR	437234	ElseStatement	else		437192	0					
ANR	437235	IfStatement	if ( pas -> u . s . memory )		437192	0					
ANR	437236	Condition	pas -> u . s . memory	175:17:5304:5318	437192	0	True				
ANR	437237	MemberAccess	pas -> u . s . memory		437192	0					
ANR	437238	MemberAccess	pas -> u . s		437192	0					
ANR	437239	PtrMemberAccess	pas -> u		437192	0					
ANR	437240	Identifier	pas		437192	0					
ANR	437241	Identifier	u		437192	1					
ANR	437242	Identifier	s		437192	1					
ANR	437243	Identifier	memory		437192	1					
ANR	437244	ExpressionStatement	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_finit"" )"	176:12:5333:5393	437192	1	True				
ANR	437245	CallExpression	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_finit"" )"		437192	0					
ANR	437246	Callee	gs_free_object		437192	0					
ANR	437247	Identifier	gs_free_object		437192	0					
ANR	437248	ArgumentList	pas -> u . s . memory		437192	1					
ANR	437249	Argument	pas -> u . s . memory		437192	0					
ANR	437250	MemberAccess	pas -> u . s . memory		437192	0					
ANR	437251	MemberAccess	pas -> u . s		437192	0					
ANR	437252	PtrMemberAccess	pas -> u		437192	0					
ANR	437253	Identifier	pas		437192	0					
ANR	437254	Identifier	u		437192	1					
ANR	437255	Identifier	s		437192	1					
ANR	437256	Identifier	memory		437192	1					
ANR	437257	Argument	pas -> u . s . chars		437192	1					
ANR	437258	MemberAccess	pas -> u . s . chars		437192	0					
ANR	437259	MemberAccess	pas -> u . s		437192	0					
ANR	437260	PtrMemberAccess	pas -> u		437192	0					
ANR	437261	Identifier	pas		437192	0					
ANR	437262	Identifier	u		437192	1					
ANR	437263	Identifier	s		437192	1					
ANR	437264	Identifier	chars		437192	1					
ANR	437265	Argument	"""arg_finit"""		437192	2					
ANR	437266	PrimaryExpression	"""arg_finit"""		437192	0					
ANR	437267	ReturnType	void		437192	1					
ANR	437268	Identifier	arg_finit		437192	2					
ANR	437269	ParameterList	arg_list * pal		437192	3					
ANR	437270	Parameter	arg_list * pal	167:10:5084:5097	437192	0	True				
ANR	437271	ParameterType	arg_list *		437192	0					
ANR	437272	Identifier	pal		437192	1					
ANR	437273	CFGEntryNode	ENTRY		437192		True				
ANR	437274	CFGExitNode	EXIT		437192		True				
ANR	437275	Symbol	pas -> u . s . chars		437192						
ANR	437276	Symbol	pas -> u		437192						
ANR	437277	Symbol	pas -> u . s . memory		437192						
ANR	437278	Symbol	pas		437192						
ANR	437279	Symbol	* pal		437192						
ANR	437280	Symbol	pal -> depth		437192						
ANR	437281	Symbol	pas -> is_file		437192						
ANR	437282	Symbol	pal		437192						
ANR	437283	Symbol	pas -> u . s		437192						
ANR	437284	Symbol	* pas		437192						
ANR	437285	Symbol	pal -> sources		437192						
ANR	437286	Symbol	pas -> u . file		437192						
ANR	437287	Function	get_codepoint	180:0:5404:5640							
ANR	437288	FunctionDef	"get_codepoint (arg_list * pal , arg_source * pas)"		437287	0					
ANR	437289	CompoundStatement		181:0:5461:5640	437287	0					
ANR	437290	IdentifierDeclStatement	"int ( * fn ) ( FILE * file , const char * * str ) ;"	182:4:5467:5506	437287	0	True				
ANR	437291	IdentifierDecl	"( * fn ) ( FILE * file , const char * * str )"		437287	0					
ANR	437292	IdentifierDeclType	"int ( * ) ( FILE * file , const char * * str )"		437287	0					
ANR	437293	Identifier	fn		437287	1					
ANR	437294	Identifier	file		437287	2					
ANR	437295	Identifier	str		437287	3					
ANR	437296	ExpressionStatement	fn = ( ! pas -> is_file && pas -> u . s . decoded ? get_codepoint_utf8 : pal -> get_codepoint )	184:4:5513:5595	437287	1	True				
ANR	437297	AssignmentExpression	fn = ( ! pas -> is_file && pas -> u . s . decoded ? get_codepoint_utf8 : pal -> get_codepoint )		437287	0		=			
ANR	437298	Identifier	fn		437287	0					
ANR	437299	ConditionalExpression	! pas -> is_file && pas -> u . s . decoded ? get_codepoint_utf8 : pal -> get_codepoint		437287	1					
ANR	437300	Condition	! pas -> is_file && pas -> u . s . decoded		437287	0					
ANR	437301	AndExpression	! pas -> is_file && pas -> u . s . decoded		437287	0		&&			
ANR	437302	UnaryOperationExpression	! pas -> is_file		437287	0					
ANR	437303	UnaryOperator	!		437287	0					
ANR	437304	PtrMemberAccess	pas -> is_file		437287	1					
ANR	437305	Identifier	pas		437287	0					
ANR	437306	Identifier	is_file		437287	1					
ANR	437307	MemberAccess	pas -> u . s . decoded		437287	1					
ANR	437308	MemberAccess	pas -> u . s		437287	0					
ANR	437309	PtrMemberAccess	pas -> u		437287	0					
ANR	437310	Identifier	pas		437287	0					
ANR	437311	Identifier	u		437287	1					
ANR	437312	Identifier	s		437287	1					
ANR	437313	Identifier	decoded		437287	1					
ANR	437314	Identifier	get_codepoint_utf8		437287	1					
ANR	437315	PtrMemberAccess	pal -> get_codepoint		437287	2					
ANR	437316	Identifier	pal		437287	0					
ANR	437317	Identifier	get_codepoint		437287	1					
ANR	437318	ReturnStatement	"return fn ( pas -> u . file , & pas -> u . s . str ) ;"	185:4:5601:5638	437287	2	True				
ANR	437319	CallExpression	"fn ( pas -> u . file , & pas -> u . s . str )"		437287	0					
ANR	437320	Callee	fn		437287	0					
ANR	437321	Identifier	fn		437287	0					
ANR	437322	ArgumentList	pas -> u . file		437287	1					
ANR	437323	Argument	pas -> u . file		437287	0					
ANR	437324	MemberAccess	pas -> u . file		437287	0					
ANR	437325	PtrMemberAccess	pas -> u		437287	0					
ANR	437326	Identifier	pas		437287	0					
ANR	437327	Identifier	u		437287	1					
ANR	437328	Identifier	file		437287	1					
ANR	437329	Argument	& pas -> u . s . str		437287	1					
ANR	437330	UnaryOperationExpression	& pas -> u . s . str		437287	0					
ANR	437331	UnaryOperator	&		437287	0					
ANR	437332	MemberAccess	pas -> u . s . str		437287	1					
ANR	437333	MemberAccess	pas -> u . s		437287	0					
ANR	437334	PtrMemberAccess	pas -> u		437287	0					
ANR	437335	Identifier	pas		437287	0					
ANR	437336	Identifier	u		437287	1					
ANR	437337	Identifier	s		437287	1					
ANR	437338	Identifier	str		437287	1					
ANR	437339	ReturnType	static int		437287	1					
ANR	437340	Identifier	get_codepoint		437287	2					
ANR	437341	ParameterList	"arg_list * pal , arg_source * pas"		437287	3					
ANR	437342	Parameter	arg_list * pal	180:25:5429:5441	437287	0	True				
ANR	437343	ParameterType	arg_list *		437287	0					
ANR	437344	Identifier	pal		437287	1					
ANR	437345	Parameter	arg_source * pas	180:40:5444:5458	437287	1	True				
ANR	437346	ParameterType	arg_source *		437287	0					
ANR	437347	Identifier	pas		437287	1					
ANR	437348	CFGEntryNode	ENTRY		437287		True				
ANR	437349	CFGExitNode	EXIT		437287		True				
ANR	437350	Symbol	pas		437287						
ANR	437351	Symbol	pal -> get_codepoint		437287						
ANR	437352	Symbol	* pal		437287						
ANR	437353	Symbol	fn		437287						
ANR	437354	Symbol	pas -> is_file		437287						
ANR	437355	Symbol	* pas		437287						
ANR	437356	Symbol	pas -> u . s . decoded		437287						
ANR	437357	Symbol	pas -> u . file		437287						
ANR	437358	Symbol	pas -> u		437287						
ANR	437359	Symbol	& pas -> u		437287						
ANR	437360	Symbol	& pas -> u . s		437287						
ANR	437361	Symbol	& pas -> u . s . str		437287						
ANR	437362	Symbol	pal		437287						
ANR	437363	Symbol	pas -> u . s		437287						
ANR	437364	Symbol	get_codepoint_utf8		437287						
ANR	437365	Function	arg_next	197:0:5906:12367							
ANR	437366	FunctionDef	"arg_next (arg_list * pal , const char * * argstr , const gs_memory_t * errmem)"		437365	0					
ANR	437367	CompoundStatement		199:0:5983:12367	437365	0					
ANR	437368	IdentifierDeclStatement	arg_source * pas ;	200:4:5989:6004	437365	0	True				
ANR	437369	IdentifierDecl	* pas		437365	0					
ANR	437370	IdentifierDeclType	arg_source *		437365	0					
ANR	437371	Identifier	pas		437365	1					
ANR	437372	IdentifierDeclStatement	char * cstr ;	201:4:6010:6020	437365	1	True				
ANR	437373	IdentifierDecl	* cstr		437365	0					
ANR	437374	IdentifierDeclType	char *		437365	0					
ANR	437375	Identifier	cstr		437365	1					
ANR	437376	IdentifierDeclStatement	int c ;	202:4:6026:6031	437365	2	True				
ANR	437377	IdentifierDecl	c		437365	0					
ANR	437378	IdentifierDeclType	int		437365	0					
ANR	437379	Identifier	c		437365	1					
ANR	437380	IdentifierDeclStatement	int i ;	203:4:6037:6042	437365	3	True				
ANR	437381	IdentifierDecl	i		437365	0					
ANR	437382	IdentifierDeclType	int		437365	0					
ANR	437383	Identifier	i		437365	1					
ANR	437384	IdentifierDeclStatement	"bool in_quote , eol ;"	204:4:6048:6066	437365	4	True				
ANR	437385	IdentifierDecl	in_quote		437365	0					
ANR	437386	IdentifierDeclType	bool		437365	0					
ANR	437387	Identifier	in_quote		437365	1					
ANR	437388	IdentifierDecl	eol		437365	1					
ANR	437389	IdentifierDeclType	bool		437365	0					
ANR	437390	Identifier	eol		437365	1					
ANR	437391	ExpressionStatement	* argstr = NULL	206:4:6073:6087	437365	5	True				
ANR	437392	AssignmentExpression	* argstr = NULL		437365	0		=			
ANR	437393	UnaryOperationExpression	* argstr		437365	0					
ANR	437394	UnaryOperator	*		437365	0					
ANR	437395	Identifier	argstr		437365	1					
ANR	437396	Identifier	NULL		437365	1					
ANR	437397	DoStatement	do		437365	6					
ANR	437398	CompoundStatement		11:7:167:167	437365	0					
ANR	437399	ExpressionStatement	pas = & pal -> sources [ pal -> depth ]	210:8:6161:6192	437365	0	True				
ANR	437400	AssignmentExpression	pas = & pal -> sources [ pal -> depth ]		437365	0		=			
ANR	437401	Identifier	pas		437365	0					
ANR	437402	UnaryOperationExpression	& pal -> sources [ pal -> depth ]		437365	1					
ANR	437403	UnaryOperator	&		437365	0					
ANR	437404	ArrayIndexing	pal -> sources [ pal -> depth ]		437365	1					
ANR	437405	PtrMemberAccess	pal -> sources		437365	0					
ANR	437406	Identifier	pal		437365	0					
ANR	437407	Identifier	sources		437365	1					
ANR	437408	PtrMemberAccess	pal -> depth		437365	1					
ANR	437409	Identifier	pal		437365	0					
ANR	437410	Identifier	depth		437365	1					
ANR	437411	IfStatement	if ( ! pas -> is_file && pas -> u . s . parsed )		437365	1					
ANR	437412	Condition	! pas -> is_file && pas -> u . s . parsed	211:12:6206:6237	437365	0	True				
ANR	437413	AndExpression	! pas -> is_file && pas -> u . s . parsed		437365	0		&&			
ANR	437414	UnaryOperationExpression	! pas -> is_file		437365	0					
ANR	437415	UnaryOperator	!		437365	0					
ANR	437416	PtrMemberAccess	pas -> is_file		437365	1					
ANR	437417	Identifier	pas		437365	0					
ANR	437418	Identifier	is_file		437365	1					
ANR	437419	MemberAccess	pas -> u . s . parsed		437365	1					
ANR	437420	MemberAccess	pas -> u . s		437365	0					
ANR	437421	PtrMemberAccess	pas -> u		437365	0					
ANR	437422	Identifier	pas		437365	0					
ANR	437423	Identifier	u		437365	1					
ANR	437424	Identifier	s		437365	1					
ANR	437425	Identifier	parsed		437365	1					
ANR	437426	CompoundStatement		13:46:256:256	437365	1					
ANR	437427	IfStatement	if ( strlen ( pas -> u . s . str ) >= arg_str_max )		437365	0					
ANR	437428	Condition	strlen ( pas -> u . s . str ) >= arg_str_max	216:16:6473:6507	437365	0	True				
ANR	437429	RelationalExpression	strlen ( pas -> u . s . str ) >= arg_str_max		437365	0		>=			
ANR	437430	CallExpression	strlen ( pas -> u . s . str )		437365	0					
ANR	437431	Callee	strlen		437365	0					
ANR	437432	Identifier	strlen		437365	0					
ANR	437433	ArgumentList	pas -> u . s . str		437365	1					
ANR	437434	Argument	pas -> u . s . str		437365	0					
ANR	437435	MemberAccess	pas -> u . s . str		437365	0					
ANR	437436	MemberAccess	pas -> u . s		437365	0					
ANR	437437	PtrMemberAccess	pas -> u		437365	0					
ANR	437438	Identifier	pas		437365	0					
ANR	437439	Identifier	u		437365	1					
ANR	437440	Identifier	s		437365	1					
ANR	437441	Identifier	str		437365	1					
ANR	437442	Identifier	arg_str_max		437365	1					
ANR	437443	CompoundStatement		18:53:526:526	437365	1					
ANR	437444	ExpressionStatement	"errprintf ( errmem , ""Command too long: %s\\n"" , pas -> u . s . str )"	217:16:6528:6585	437365	0	True				
ANR	437445	CallExpression	"errprintf ( errmem , ""Command too long: %s\\n"" , pas -> u . s . str )"		437365	0					
ANR	437446	Callee	errprintf		437365	0					
ANR	437447	Identifier	errprintf		437365	0					
ANR	437448	ArgumentList	errmem		437365	1					
ANR	437449	Argument	errmem		437365	0					
ANR	437450	Identifier	errmem		437365	0					
ANR	437451	Argument	"""Command too long: %s\\n"""		437365	1					
ANR	437452	PrimaryExpression	"""Command too long: %s\\n"""		437365	0					
ANR	437453	Argument	pas -> u . s . str		437365	2					
ANR	437454	MemberAccess	pas -> u . s . str		437365	0					
ANR	437455	MemberAccess	pas -> u . s		437365	0					
ANR	437456	PtrMemberAccess	pas -> u		437365	0					
ANR	437457	Identifier	pas		437365	0					
ANR	437458	Identifier	u		437365	1					
ANR	437459	Identifier	s		437365	1					
ANR	437460	Identifier	str		437365	1					
ANR	437461	ExpressionStatement	return_error ( gs_error_Fatal )	218:16:6603:6631	437365	1	True				
ANR	437462	CallExpression	return_error ( gs_error_Fatal )		437365	0					
ANR	437463	Callee	return_error		437365	0					
ANR	437464	Identifier	return_error		437365	0					
ANR	437465	ArgumentList	gs_error_Fatal		437365	1					
ANR	437466	Argument	gs_error_Fatal		437365	0					
ANR	437467	Identifier	gs_error_Fatal		437365	0					
ANR	437468	ExpressionStatement	"strcpy ( pal -> cstr , pas -> u . s . str )"	220:12:6659:6690	437365	1	True				
ANR	437469	CallExpression	"strcpy ( pal -> cstr , pas -> u . s . str )"		437365	0					
ANR	437470	Callee	strcpy		437365	0					
ANR	437471	Identifier	strcpy		437365	0					
ANR	437472	ArgumentList	pal -> cstr		437365	1					
ANR	437473	Argument	pal -> cstr		437365	0					
ANR	437474	PtrMemberAccess	pal -> cstr		437365	0					
ANR	437475	Identifier	pal		437365	0					
ANR	437476	Identifier	cstr		437365	1					
ANR	437477	Argument	pas -> u . s . str		437365	1					
ANR	437478	MemberAccess	pas -> u . s . str		437365	0					
ANR	437479	MemberAccess	pas -> u . s		437365	0					
ANR	437480	PtrMemberAccess	pas -> u		437365	0					
ANR	437481	Identifier	pas		437365	0					
ANR	437482	Identifier	u		437365	1					
ANR	437483	Identifier	s		437365	1					
ANR	437484	Identifier	str		437365	1					
ANR	437485	ExpressionStatement	* argstr = pal -> cstr	221:12:6704:6723	437365	2	True				
ANR	437486	AssignmentExpression	* argstr = pal -> cstr		437365	0		=			
ANR	437487	UnaryOperationExpression	* argstr		437365	0					
ANR	437488	UnaryOperator	*		437365	0					
ANR	437489	Identifier	argstr		437365	1					
ANR	437490	PtrMemberAccess	pal -> cstr		437365	1					
ANR	437491	Identifier	pal		437365	0					
ANR	437492	Identifier	cstr		437365	1					
ANR	437493	IfStatement	if ( pas -> u . s . memory )		437365	3					
ANR	437494	Condition	pas -> u . s . memory	222:16:6741:6755	437365	0	True				
ANR	437495	MemberAccess	pas -> u . s . memory		437365	0					
ANR	437496	MemberAccess	pas -> u . s		437365	0					
ANR	437497	PtrMemberAccess	pas -> u		437365	0					
ANR	437498	Identifier	pas		437365	0					
ANR	437499	Identifier	u		437365	1					
ANR	437500	Identifier	s		437365	1					
ANR	437501	Identifier	memory		437365	1					
ANR	437502	ExpressionStatement	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"	223:16:6774:6833	437365	1	True				
ANR	437503	CallExpression	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"		437365	0					
ANR	437504	Callee	gs_free_object		437365	0					
ANR	437505	Identifier	gs_free_object		437365	0					
ANR	437506	ArgumentList	pas -> u . s . memory		437365	1					
ANR	437507	Argument	pas -> u . s . memory		437365	0					
ANR	437508	MemberAccess	pas -> u . s . memory		437365	0					
ANR	437509	MemberAccess	pas -> u . s		437365	0					
ANR	437510	PtrMemberAccess	pas -> u		437365	0					
ANR	437511	Identifier	pas		437365	0					
ANR	437512	Identifier	u		437365	1					
ANR	437513	Identifier	s		437365	1					
ANR	437514	Identifier	memory		437365	1					
ANR	437515	Argument	pas -> u . s . chars		437365	1					
ANR	437516	MemberAccess	pas -> u . s . chars		437365	0					
ANR	437517	MemberAccess	pas -> u . s		437365	0					
ANR	437518	PtrMemberAccess	pas -> u		437365	0					
ANR	437519	Identifier	pas		437365	0					
ANR	437520	Identifier	u		437365	1					
ANR	437521	Identifier	s		437365	1					
ANR	437522	Identifier	chars		437365	1					
ANR	437523	Argument	"""arg_next"""		437365	2					
ANR	437524	PrimaryExpression	"""arg_next"""		437365	0					
ANR	437525	ExpressionStatement	pal -> depth --	224:12:6847:6859	437365	4	True				
ANR	437526	PostIncDecOperationExpression	pal -> depth --		437365	0					
ANR	437527	PtrMemberAccess	pal -> depth		437365	0					
ANR	437528	Identifier	pal		437365	0					
ANR	437529	Identifier	depth		437365	1					
ANR	437530	IncDec	--		437365	1					
ANR	437531	ElseStatement	else		437365	0					
ANR	437532	CompoundStatement		27:15:892:892	437365	0					
ANR	437533	IfStatement	if ( pal -> depth == 0 )		437365	0					
ANR	437534	Condition	pal -> depth == 0	227:16:6948:6962	437365	0	True				
ANR	437535	EqualityExpression	pal -> depth == 0		437365	0		==			
ANR	437536	PtrMemberAccess	pal -> depth		437365	0					
ANR	437537	Identifier	pal		437365	0					
ANR	437538	Identifier	depth		437365	1					
ANR	437539	PrimaryExpression	0		437365	1					
ANR	437540	CompoundStatement		29:33:981:981	437365	1					
ANR	437541	IfStatement	if ( pal -> argn <= 0 )		437365	0					
ANR	437542	Condition	pal -> argn <= 0	228:20:6987:7000	437365	0	True				
ANR	437543	RelationalExpression	pal -> argn <= 0		437365	0		<=			
ANR	437544	PtrMemberAccess	pal -> argn		437365	0					
ANR	437545	Identifier	pal		437365	0					
ANR	437546	Identifier	argn		437365	1					
ANR	437547	PrimaryExpression	0		437365	1					
ANR	437548	ReturnStatement	return 0 ;	229:20:7023:7031	437365	1	True				
ANR	437549	PrimaryExpression	0		437365	0					
ANR	437550	ExpressionStatement	pal -> argn --	231:16:7131:7142	437365	1	True				
ANR	437551	PostIncDecOperationExpression	pal -> argn --		437365	0					
ANR	437552	PtrMemberAccess	pal -> argn		437365	0					
ANR	437553	Identifier	pal		437365	0					
ANR	437554	Identifier	argn		437365	1					
ANR	437555	IncDec	--		437365	1					
ANR	437556	ExpressionStatement	pas -> u . s . str = * ( pal -> argp ++ )	232:16:7160:7189	437365	2	True				
ANR	437557	AssignmentExpression	pas -> u . s . str = * ( pal -> argp ++ )		437365	0		=			
ANR	437558	MemberAccess	pas -> u . s . str		437365	0					
ANR	437559	MemberAccess	pas -> u . s		437365	0					
ANR	437560	PtrMemberAccess	pas -> u		437365	0					
ANR	437561	Identifier	pas		437365	0					
ANR	437562	Identifier	u		437365	1					
ANR	437563	Identifier	s		437365	1					
ANR	437564	Identifier	str		437365	1					
ANR	437565	UnaryOperationExpression	* ( pal -> argp ++ )		437365	1					
ANR	437566	UnaryOperator	*		437365	0					
ANR	437567	PostIncDecOperationExpression	pal -> argp ++		437365	1					
ANR	437568	PtrMemberAccess	pal -> argp		437365	0					
ANR	437569	Identifier	pal		437365	0					
ANR	437570	Identifier	argp		437365	1					
ANR	437571	IncDec	++		437365	1					
ANR	437572	DoStatement	do		437365	1					
ANR	437573	CompoundStatement		37:15:1283:1283	437365	0					
ANR	437574	ExpressionStatement	"c = get_codepoint ( pal , pas )"	236:16:7285:7312	437365	0	True				
ANR	437575	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	437576	Identifier	c		437365	0					
ANR	437577	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	437578	Callee	get_codepoint		437365	0					
ANR	437579	Identifier	get_codepoint		437365	0					
ANR	437580	ArgumentList	pal		437365	1					
ANR	437581	Argument	pal		437365	0					
ANR	437582	Identifier	pal		437365	0					
ANR	437583	Argument	pas		437365	1					
ANR	437584	Identifier	pas		437365	0					
ANR	437585	Condition	c > 0 && c < 256 && isspace ( c )	237:21:7335:7364	437365	1	True				
ANR	437586	AndExpression	c > 0 && c < 256 && isspace ( c )		437365	0		&&			
ANR	437587	RelationalExpression	c > 0		437365	0		>			
ANR	437588	Identifier	c		437365	0					
ANR	437589	PrimaryExpression	0		437365	1					
ANR	437590	AndExpression	c < 256 && isspace ( c )		437365	1		&&			
ANR	437591	RelationalExpression	c < 256		437365	0		<			
ANR	437592	Identifier	c		437365	0					
ANR	437593	PrimaryExpression	256		437365	1					
ANR	437594	CallExpression	isspace ( c )		437365	1					
ANR	437595	Callee	isspace		437365	0					
ANR	437596	Identifier	isspace		437365	0					
ANR	437597	ArgumentList	c		437365	1					
ANR	437598	Argument	c		437365	0					
ANR	437599	Identifier	c		437365	0					
ANR	437600	IfStatement	if ( c == EOF )		437365	2					
ANR	437601	Condition	c == EOF	238:16:7384:7391	437365	0	True				
ANR	437602	EqualityExpression	c == EOF		437365	0		==			
ANR	437603	Identifier	c		437365	0					
ANR	437604	Identifier	EOF		437365	1					
ANR	437605	CompoundStatement		40:26:1410:1410	437365	1					
ANR	437606	IfStatement	if ( pas -> is_file )		437365	0					
ANR	437607	Condition	pas -> is_file	240:20:7474:7485	437365	0	True				
ANR	437608	PtrMemberAccess	pas -> is_file		437365	0					
ANR	437609	Identifier	pas		437365	0					
ANR	437610	Identifier	is_file		437365	1					
ANR	437611	ExpressionStatement	fclose ( pas -> u . file )	241:20:7508:7527	437365	1	True				
ANR	437612	CallExpression	fclose ( pas -> u . file )		437365	0					
ANR	437613	Callee	fclose		437365	0					
ANR	437614	Identifier	fclose		437365	0					
ANR	437615	ArgumentList	pas -> u . file		437365	1					
ANR	437616	Argument	pas -> u . file		437365	0					
ANR	437617	MemberAccess	pas -> u . file		437365	0					
ANR	437618	PtrMemberAccess	pas -> u		437365	0					
ANR	437619	Identifier	pas		437365	0					
ANR	437620	Identifier	u		437365	1					
ANR	437621	Identifier	file		437365	1					
ANR	437622	ElseStatement	else		437365	0					
ANR	437623	IfStatement	if ( pas -> u . s . memory )		437365	0					
ANR	437624	Condition	pas -> u . s . memory	242:25:7554:7568	437365	0	True				
ANR	437625	MemberAccess	pas -> u . s . memory		437365	0					
ANR	437626	MemberAccess	pas -> u . s		437365	0					
ANR	437627	PtrMemberAccess	pas -> u		437365	0					
ANR	437628	Identifier	pas		437365	0					
ANR	437629	Identifier	u		437365	1					
ANR	437630	Identifier	s		437365	1					
ANR	437631	Identifier	memory		437365	1					
ANR	437632	ExpressionStatement	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"	243:20:7591:7685	437365	1	True				
ANR	437633	CallExpression	"gs_free_object ( pas -> u . s . memory , pas -> u . s . chars , ""arg_next"" )"		437365	0					
ANR	437634	Callee	gs_free_object		437365	0					
ANR	437635	Identifier	gs_free_object		437365	0					
ANR	437636	ArgumentList	pas -> u . s . memory		437365	1					
ANR	437637	Argument	pas -> u . s . memory		437365	0					
ANR	437638	MemberAccess	pas -> u . s . memory		437365	0					
ANR	437639	MemberAccess	pas -> u . s		437365	0					
ANR	437640	PtrMemberAccess	pas -> u		437365	0					
ANR	437641	Identifier	pas		437365	0					
ANR	437642	Identifier	u		437365	1					
ANR	437643	Identifier	s		437365	1					
ANR	437644	Identifier	memory		437365	1					
ANR	437645	Argument	pas -> u . s . chars		437365	1					
ANR	437646	MemberAccess	pas -> u . s . chars		437365	0					
ANR	437647	MemberAccess	pas -> u . s		437365	0					
ANR	437648	PtrMemberAccess	pas -> u		437365	0					
ANR	437649	Identifier	pas		437365	0					
ANR	437650	Identifier	u		437365	1					
ANR	437651	Identifier	s		437365	1					
ANR	437652	Identifier	chars		437365	1					
ANR	437653	Argument	"""arg_next"""		437365	2					
ANR	437654	PrimaryExpression	"""arg_next"""		437365	0					
ANR	437655	ExpressionStatement	pal -> depth --	245:16:7703:7715	437365	1	True				
ANR	437656	PostIncDecOperationExpression	pal -> depth --		437365	0					
ANR	437657	PtrMemberAccess	pal -> depth		437365	0					
ANR	437658	Identifier	pal		437365	0					
ANR	437659	Identifier	depth		437365	1					
ANR	437660	IncDec	--		437365	1					
ANR	437661	ContinueStatement	continue ;	246:16:7733:7741	437365	2	True				
ANR	437662	Statement	define	248:5:7782:7787	437365	3	True				
ANR	437663	ExpressionStatement	is_eol ( c ) ( c == '\\r' || c == '\\n' ) * argstr = cstr = pal -> cstr	248:12:7789:7940	437365	4	True				
ANR	437664	AssignmentExpression	is_eol ( c ) ( c == '\\r' || c == '\\n' ) * argstr = cstr = pal -> cstr		437365	0		=			
ANR	437665	MultiplicativeExpression	is_eol ( c ) ( c == '\\r' || c == '\\n' ) * argstr		437365	0		*			
ANR	437666	CallExpression	is_eol ( c ) ( c == '\\r' || c == '\\n' )		437365	0					
ANR	437667	Callee	is_eol ( c )		437365	0					
ANR	437668	CallExpression	is_eol ( c )		437365	0					
ANR	437669	Callee	is_eol		437365	0					
ANR	437670	Identifier	is_eol		437365	0					
ANR	437671	ArgumentList	c		437365	1					
ANR	437672	Argument	c		437365	0					
ANR	437673	Identifier	c		437365	0					
ANR	437674	ArgumentList	c == '\\r' || c == '\\n'		437365	1					
ANR	437675	Argument	c == '\\r' || c == '\\n'		437365	0					
ANR	437676	OrExpression	c == '\\r' || c == '\\n'		437365	0		||			
ANR	437677	EqualityExpression	c == '\\r'		437365	0		==			
ANR	437678	Identifier	c		437365	0					
ANR	437679	PrimaryExpression	'\\r'		437365	1					
ANR	437680	EqualityExpression	c == '\\n'		437365	1		==			
ANR	437681	Identifier	c		437365	0					
ANR	437682	PrimaryExpression	'\\n'		437365	1					
ANR	437683	Identifier	argstr		437365	1					
ANR	437684	AssignmentExpression	cstr = pal -> cstr		437365	1		=			
ANR	437685	Identifier	cstr		437365	0					
ANR	437686	PtrMemberAccess	pal -> cstr		437365	1					
ANR	437687	Identifier	pal		437365	0					
ANR	437688	Identifier	cstr		437365	1					
ANR	437689	ExpressionStatement	in_quote = false	251:12:7954:7970	437365	5	True				
ANR	437690	AssignmentExpression	in_quote = false		437365	0		=			
ANR	437691	Identifier	in_quote		437365	0					
ANR	437692	Identifier	false		437365	1					
ANR	437693	ExpressionStatement	eol = pal -> depth > 0	257:12:8332:8352	437365	6	True				
ANR	437694	AssignmentExpression	eol = pal -> depth > 0		437365	0		=			
ANR	437695	Identifier	eol		437365	0					
ANR	437696	RelationalExpression	pal -> depth > 0		437365	1		>			
ANR	437697	PtrMemberAccess	pal -> depth		437365	0					
ANR	437698	Identifier	pal		437365	0					
ANR	437699	Identifier	depth		437365	1					
ANR	437700	PrimaryExpression	0		437365	1					
ANR	437701	ForStatement	for ( i = 0 ; ; )		437365	7					
ANR	437702	ForInit	i = 0 ;	258:17:8371:8376	437365	0	True				
ANR	437703	AssignmentExpression	i = 0		437365	0		=			
ANR	437704	Identifier	i		437365	0					
ANR	437705	PrimaryExpression	0		437365	1					
ANR	437706	CompoundStatement		60:26:2396:2396	437365	1					
ANR	437707	IfStatement	if ( c == EOF )		437365	0					
ANR	437708	Condition	c == EOF	259:20:8402:8409	437365	0	True				
ANR	437709	EqualityExpression	c == EOF		437365	0		==			
ANR	437710	Identifier	c		437365	0					
ANR	437711	Identifier	EOF		437365	1					
ANR	437712	CompoundStatement		61:30:2428:2428	437365	1					
ANR	437713	IfStatement	if ( in_quote )		437365	0					
ANR	437714	Condition	in_quote	260:24:8438:8445	437365	0	True				
ANR	437715	Identifier	in_quote		437365	0					
ANR	437716	CompoundStatement		62:34:2464:2464	437365	1					
ANR	437717	ExpressionStatement	cstr [ i ] = 0	261:24:8474:8485	437365	0	True				
ANR	437718	AssignmentExpression	cstr [ i ] = 0		437365	0		=			
ANR	437719	ArrayIndexing	cstr [ i ]		437365	0					
ANR	437720	Identifier	cstr		437365	0					
ANR	437721	Identifier	i		437365	1					
ANR	437722	PrimaryExpression	0		437365	1					
ANR	437723	ExpressionStatement	"errprintf ( errmem , ""Unterminated quote in @-file: %s\\n"" , cstr )"	262:24:8511:8606	437365	1	True				
ANR	437724	CallExpression	"errprintf ( errmem , ""Unterminated quote in @-file: %s\\n"" , cstr )"		437365	0					
ANR	437725	Callee	errprintf		437365	0					
ANR	437726	Identifier	errprintf		437365	0					
ANR	437727	ArgumentList	errmem		437365	1					
ANR	437728	Argument	errmem		437365	0					
ANR	437729	Identifier	errmem		437365	0					
ANR	437730	Argument	"""Unterminated quote in @-file: %s\\n"""		437365	1					
ANR	437731	PrimaryExpression	"""Unterminated quote in @-file: %s\\n"""		437365	0					
ANR	437732	Argument	cstr		437365	2					
ANR	437733	Identifier	cstr		437365	0					
ANR	437734	ExpressionStatement	return_error ( gs_error_Fatal )	264:24:8632:8660	437365	2	True				
ANR	437735	CallExpression	return_error ( gs_error_Fatal )		437365	0					
ANR	437736	Callee	return_error		437365	0					
ANR	437737	Identifier	return_error		437365	0					
ANR	437738	ArgumentList	gs_error_Fatal		437365	1					
ANR	437739	Argument	gs_error_Fatal		437365	0					
ANR	437740	Identifier	gs_error_Fatal		437365	0					
ANR	437741	BreakStatement	break ;	266:20:8704:8709	437365	1	True				
ANR	437742	IfStatement	if ( pal -> depth > 0 && ! in_quote && c > 0 && c < 256 && isspace ( c ) )		437365	1					
ANR	437743	Condition	pal -> depth > 0 && ! in_quote && c > 0 && c < 256 && isspace ( c )	271:20:8945:9005	437365	0	True				
ANR	437744	AndExpression	pal -> depth > 0 && ! in_quote && c > 0 && c < 256 && isspace ( c )		437365	0		&&			
ANR	437745	RelationalExpression	pal -> depth > 0		437365	0		>			
ANR	437746	PtrMemberAccess	pal -> depth		437365	0					
ANR	437747	Identifier	pal		437365	0					
ANR	437748	Identifier	depth		437365	1					
ANR	437749	PrimaryExpression	0		437365	1					
ANR	437750	AndExpression	! in_quote && c > 0 && c < 256 && isspace ( c )		437365	1		&&			
ANR	437751	UnaryOperationExpression	! in_quote		437365	0					
ANR	437752	UnaryOperator	!		437365	0					
ANR	437753	Identifier	in_quote		437365	1					
ANR	437754	AndExpression	c > 0 && c < 256 && isspace ( c )		437365	1		&&			
ANR	437755	RelationalExpression	c > 0		437365	0		>			
ANR	437756	Identifier	c		437365	0					
ANR	437757	PrimaryExpression	0		437365	1					
ANR	437758	AndExpression	c < 256 && isspace ( c )		437365	1		&&			
ANR	437759	RelationalExpression	c < 256		437365	0		<			
ANR	437760	Identifier	c		437365	0					
ANR	437761	PrimaryExpression	256		437365	1					
ANR	437762	CallExpression	isspace ( c )		437365	1					
ANR	437763	Callee	isspace		437365	0					
ANR	437764	Identifier	isspace		437365	0					
ANR	437765	ArgumentList	c		437365	1					
ANR	437766	Argument	c		437365	0					
ANR	437767	Identifier	c		437365	0					
ANR	437768	BreakStatement	break ;	272:20:9028:9033	437365	1	True				
ANR	437769	IfStatement	if ( c == '#' && eol )		437365	2					
ANR	437770	Condition	c == '#' && eol	274:20:9137:9151	437365	0	True				
ANR	437771	AndExpression	c == '#' && eol		437365	0		&&			
ANR	437772	EqualityExpression	c == '#'		437365	0		==			
ANR	437773	Identifier	c		437365	0					
ANR	437774	PrimaryExpression	'#'		437365	1					
ANR	437775	Identifier	eol		437365	1					
ANR	437776	CompoundStatement		76:37:3170:3170	437365	1					
ANR	437777	DoStatement	do		437365	0					
ANR	437778	CompoundStatement		78:23:3237:3237	437365	0					
ANR	437779	ExpressionStatement	"c = get_codepoint ( pal , pas )"	277:24:9247:9274	437365	0	True				
ANR	437780	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	437781	Identifier	c		437365	0					
ANR	437782	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	437783	Callee	get_codepoint		437365	0					
ANR	437784	Identifier	get_codepoint		437365	0					
ANR	437785	ArgumentList	pal		437365	1					
ANR	437786	Argument	pal		437365	0					
ANR	437787	Identifier	pal		437365	0					
ANR	437788	Argument	pas		437365	1					
ANR	437789	Identifier	pas		437365	0					
ANR	437790	Condition	c != 0 && ! is_eol ( c ) && c != EOF	278:29:9305:9336	437365	1	True				
ANR	437791	AndExpression	c != 0 && ! is_eol ( c ) && c != EOF		437365	0		&&			
ANR	437792	EqualityExpression	c != 0		437365	0		!=			
ANR	437793	Identifier	c		437365	0					
ANR	437794	PrimaryExpression	0		437365	1					
ANR	437795	AndExpression	! is_eol ( c ) && c != EOF		437365	1		&&			
ANR	437796	UnaryOperationExpression	! is_eol ( c )		437365	0					
ANR	437797	UnaryOperator	!		437365	0					
ANR	437798	CallExpression	is_eol ( c )		437365	1					
ANR	437799	Callee	is_eol		437365	0					
ANR	437800	Identifier	is_eol		437365	0					
ANR	437801	ArgumentList	c		437365	1					
ANR	437802	Argument	c		437365	0					
ANR	437803	Identifier	c		437365	0					
ANR	437804	EqualityExpression	c != EOF		437365	1		!=			
ANR	437805	Identifier	c		437365	0					
ANR	437806	Identifier	EOF		437365	1					
ANR	437807	IfStatement	if ( c == '\\r' )		437365	1					
ANR	437808	Condition	c == '\\r'	279:24:9364:9372	437365	0	True				
ANR	437809	EqualityExpression	c == '\\r'		437365	0		==			
ANR	437810	Identifier	c		437365	0					
ANR	437811	PrimaryExpression	'\\r'		437365	1					
ANR	437812	ExpressionStatement	"c = get_codepoint ( pal , pas )"	280:24:9399:9426	437365	1	True				
ANR	437813	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	437814	Identifier	c		437365	0					
ANR	437815	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	437816	Callee	get_codepoint		437365	0					
ANR	437817	Identifier	get_codepoint		437365	0					
ANR	437818	ArgumentList	pal		437365	1					
ANR	437819	Argument	pal		437365	0					
ANR	437820	Identifier	pal		437365	0					
ANR	437821	Argument	pas		437365	1					
ANR	437822	Identifier	pas		437365	0					
ANR	437823	IfStatement	if ( c == '\\n' )		437365	2					
ANR	437824	Condition	c == '\\n'	281:24:9452:9460	437365	0	True				
ANR	437825	EqualityExpression	c == '\\n'		437365	0		==			
ANR	437826	Identifier	c		437365	0					
ANR	437827	PrimaryExpression	'\\n'		437365	1					
ANR	437828	ExpressionStatement	"c = get_codepoint ( pal , pas )"	282:24:9487:9514	437365	1	True				
ANR	437829	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	437830	Identifier	c		437365	0					
ANR	437831	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	437832	Callee	get_codepoint		437365	0					
ANR	437833	Identifier	get_codepoint		437365	0					
ANR	437834	ArgumentList	pal		437365	1					
ANR	437835	Argument	pal		437365	0					
ANR	437836	Identifier	pal		437365	0					
ANR	437837	Argument	pas		437365	1					
ANR	437838	Identifier	pas		437365	0					
ANR	437839	ContinueStatement	continue ;	283:20:9536:9544	437365	3	True				
ANR	437840	IfStatement	if ( c == '\\\\' )		437365	3					
ANR	437841	Condition	c == '\\\\'	285:20:9600:9608	437365	0	True				
ANR	437842	EqualityExpression	c == '\\\\'		437365	0		==			
ANR	437843	Identifier	c		437365	0					
ANR	437844	PrimaryExpression	'\\\\'		437365	1					
ANR	437845	CompoundStatement		87:31:3627:3627	437365	1					
ANR	437846	ExpressionStatement	"c = get_codepoint ( pal , pas )"	287:20:9692:9719	437365	0	True				
ANR	437847	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	437848	Identifier	c		437365	0					
ANR	437849	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	437850	Callee	get_codepoint		437365	0					
ANR	437851	Identifier	get_codepoint		437365	0					
ANR	437852	ArgumentList	pal		437365	1					
ANR	437853	Argument	pal		437365	0					
ANR	437854	Identifier	pal		437365	0					
ANR	437855	Argument	pas		437365	1					
ANR	437856	Identifier	pas		437365	0					
ANR	437857	IfStatement	if ( is_eol ( c ) )		437365	1					
ANR	437858	Condition	is_eol ( c )	288:24:9745:9753	437365	0	True				
ANR	437859	CallExpression	is_eol ( c )		437365	0					
ANR	437860	Callee	is_eol		437365	0					
ANR	437861	Identifier	is_eol		437365	0					
ANR	437862	ArgumentList	c		437365	1					
ANR	437863	Argument	c		437365	0					
ANR	437864	Identifier	c		437365	0					
ANR	437865	CompoundStatement		90:35:3772:3772	437365	1					
ANR	437866	IfStatement	if ( c == '\\r' )		437365	0					
ANR	437867	Condition	c == '\\r'	289:28:9786:9794	437365	0	True				
ANR	437868	EqualityExpression	c == '\\r'		437365	0		==			
ANR	437869	Identifier	c		437365	0					
ANR	437870	PrimaryExpression	'\\r'		437365	1					
ANR	437871	ExpressionStatement	"c = get_codepoint ( pal , pas )"	290:28:9825:9852	437365	1	True				
ANR	437872	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	437873	Identifier	c		437365	0					
ANR	437874	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	437875	Callee	get_codepoint		437365	0					
ANR	437876	Identifier	get_codepoint		437365	0					
ANR	437877	ArgumentList	pal		437365	1					
ANR	437878	Argument	pal		437365	0					
ANR	437879	Identifier	pal		437365	0					
ANR	437880	Argument	pas		437365	1					
ANR	437881	Identifier	pas		437365	0					
ANR	437882	IfStatement	if ( c == '\\n' )		437365	1					
ANR	437883	Condition	c == '\\n'	291:28:9882:9890	437365	0	True				
ANR	437884	EqualityExpression	c == '\\n'		437365	0		==			
ANR	437885	Identifier	c		437365	0					
ANR	437886	PrimaryExpression	'\\n'		437365	1					
ANR	437887	ExpressionStatement	"c = get_codepoint ( pal , pas )"	292:28:9921:9948	437365	1	True				
ANR	437888	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	437889	Identifier	c		437365	0					
ANR	437890	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	437891	Callee	get_codepoint		437365	0					
ANR	437892	Identifier	get_codepoint		437365	0					
ANR	437893	ArgumentList	pal		437365	1					
ANR	437894	Argument	pal		437365	0					
ANR	437895	Identifier	pal		437365	0					
ANR	437896	Argument	pas		437365	1					
ANR	437897	Identifier	pas		437365	0					
ANR	437898	ExpressionStatement	eol = true	293:24:9974:9984	437365	2	True				
ANR	437899	AssignmentExpression	eol = true		437365	0		=			
ANR	437900	Identifier	eol		437365	0					
ANR	437901	Identifier	true		437365	1					
ANR	437902	ContinueStatement	continue ;	294:24:10010:10018	437365	3	True				
ANR	437903	IfStatement	if ( i >= arg_str_max - 1 )		437365	2					
ANR	437904	Condition	i >= arg_str_max - 1	298:24:10226:10245	437365	0	True				
ANR	437905	RelationalExpression	i >= arg_str_max - 1		437365	0		>=			
ANR	437906	Identifier	i		437365	0					
ANR	437907	AdditiveExpression	arg_str_max - 1		437365	1		-			
ANR	437908	Identifier	arg_str_max		437365	0					
ANR	437909	PrimaryExpression	1		437365	1					
ANR	437910	CompoundStatement		100:46:4264:4264	437365	1					
ANR	437911	ExpressionStatement	cstr [ i ] = 0	299:24:10274:10285	437365	0	True				
ANR	437912	AssignmentExpression	cstr [ i ] = 0		437365	0		=			
ANR	437913	ArrayIndexing	cstr [ i ]		437365	0					
ANR	437914	Identifier	cstr		437365	0					
ANR	437915	Identifier	i		437365	1					
ANR	437916	PrimaryExpression	0		437365	1					
ANR	437917	ExpressionStatement	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"	300:24:10311:10360	437365	1	True				
ANR	437918	CallExpression	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"		437365	0					
ANR	437919	Callee	errprintf		437365	0					
ANR	437920	Identifier	errprintf		437365	0					
ANR	437921	ArgumentList	errmem		437365	1					
ANR	437922	Argument	errmem		437365	0					
ANR	437923	Identifier	errmem		437365	0					
ANR	437924	Argument	"""Command too long: %s\\n"""		437365	1					
ANR	437925	PrimaryExpression	"""Command too long: %s\\n"""		437365	0					
ANR	437926	Argument	cstr		437365	2					
ANR	437927	Identifier	cstr		437365	0					
ANR	437928	ExpressionStatement	return_error ( gs_error_Fatal )	301:24:10386:10414	437365	2	True				
ANR	437929	CallExpression	return_error ( gs_error_Fatal )		437365	0					
ANR	437930	Callee	return_error		437365	0					
ANR	437931	Identifier	return_error		437365	0					
ANR	437932	ArgumentList	gs_error_Fatal		437365	1					
ANR	437933	Argument	gs_error_Fatal		437365	0					
ANR	437934	Identifier	gs_error_Fatal		437365	0					
ANR	437935	ExpressionStatement	cstr [ i ++ ] = '\\\\'	303:20:10458:10474	437365	3	True				
ANR	437936	AssignmentExpression	cstr [ i ++ ] = '\\\\'		437365	0		=			
ANR	437937	ArrayIndexing	cstr [ i ++ ]		437365	0					
ANR	437938	Identifier	cstr		437365	0					
ANR	437939	PostIncDecOperationExpression	i ++		437365	1					
ANR	437940	Identifier	i		437365	0					
ANR	437941	IncDec	++		437365	1					
ANR	437942	PrimaryExpression	'\\\\'		437365	1					
ANR	437943	ExpressionStatement	eol = false	304:20:10496:10507	437365	4	True				
ANR	437944	AssignmentExpression	eol = false		437365	0		=			
ANR	437945	Identifier	eol		437365	0					
ANR	437946	Identifier	false		437365	1					
ANR	437947	ContinueStatement	continue ;	305:20:10529:10537	437365	5	True				
ANR	437948	IfStatement	if ( i >= arg_str_max - 1 )		437365	4					
ANR	437949	Condition	i >= arg_str_max - 1	308:20:10650:10669	437365	0	True				
ANR	437950	RelationalExpression	i >= arg_str_max - 1		437365	0		>=			
ANR	437951	Identifier	i		437365	0					
ANR	437952	AdditiveExpression	arg_str_max - 1		437365	1		-			
ANR	437953	Identifier	arg_str_max		437365	0					
ANR	437954	PrimaryExpression	1		437365	1					
ANR	437955	CompoundStatement		110:42:4688:4688	437365	1					
ANR	437956	ExpressionStatement	cstr [ i ] = 0	309:20:10694:10705	437365	0	True				
ANR	437957	AssignmentExpression	cstr [ i ] = 0		437365	0		=			
ANR	437958	ArrayIndexing	cstr [ i ]		437365	0					
ANR	437959	Identifier	cstr		437365	0					
ANR	437960	Identifier	i		437365	1					
ANR	437961	PrimaryExpression	0		437365	1					
ANR	437962	ExpressionStatement	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"	310:20:10727:10776	437365	1	True				
ANR	437963	CallExpression	"errprintf ( errmem , ""Command too long: %s\\n"" , cstr )"		437365	0					
ANR	437964	Callee	errprintf		437365	0					
ANR	437965	Identifier	errprintf		437365	0					
ANR	437966	ArgumentList	errmem		437365	1					
ANR	437967	Argument	errmem		437365	0					
ANR	437968	Identifier	errmem		437365	0					
ANR	437969	Argument	"""Command too long: %s\\n"""		437365	1					
ANR	437970	PrimaryExpression	"""Command too long: %s\\n"""		437365	0					
ANR	437971	Argument	cstr		437365	2					
ANR	437972	Identifier	cstr		437365	0					
ANR	437973	ExpressionStatement	return_error ( gs_error_Fatal )	311:20:10798:10826	437365	2	True				
ANR	437974	CallExpression	return_error ( gs_error_Fatal )		437365	0					
ANR	437975	Callee	return_error		437365	0					
ANR	437976	Identifier	return_error		437365	0					
ANR	437977	ArgumentList	gs_error_Fatal		437365	1					
ANR	437978	Argument	gs_error_Fatal		437365	0					
ANR	437979	Identifier	gs_error_Fatal		437365	0					
ANR	437980	IfStatement	"if ( c == '""' )"		437365	5					
ANR	437981	Condition	"c == '""'"	315:20:11015:11022	437365	0	True				
ANR	437982	EqualityExpression	"c == '""'"		437365	0		==			
ANR	437983	Identifier	c		437365	0					
ANR	437984	PrimaryExpression	"'""'"		437365	1					
ANR	437985	ExpressionStatement	in_quote = ! in_quote	316:20:11045:11065	437365	1	True				
ANR	437986	AssignmentExpression	in_quote = ! in_quote		437365	0		=			
ANR	437987	Identifier	in_quote		437365	0					
ANR	437988	UnaryOperationExpression	! in_quote		437365	1					
ANR	437989	UnaryOperator	!		437365	0					
ANR	437990	Identifier	in_quote		437365	1					
ANR	437991	ElseStatement	else		437365	0					
ANR	437992	ExpressionStatement	cstr [ i ++ ] = c	319:20:11130:11143	437365	0	True				
ANR	437993	AssignmentExpression	cstr [ i ++ ] = c		437365	0		=			
ANR	437994	ArrayIndexing	cstr [ i ++ ]		437365	0					
ANR	437995	Identifier	cstr		437365	0					
ANR	437996	PostIncDecOperationExpression	i ++		437365	1					
ANR	437997	Identifier	i		437365	0					
ANR	437998	IncDec	++		437365	1					
ANR	437999	Identifier	c		437365	1					
ANR	438000	ExpressionStatement	eol = is_eol ( c )	323:16:11239:11254	437365	6	True				
ANR	438001	AssignmentExpression	eol = is_eol ( c )		437365	0		=			
ANR	438002	Identifier	eol		437365	0					
ANR	438003	CallExpression	is_eol ( c )		437365	1					
ANR	438004	Callee	is_eol		437365	0					
ANR	438005	Identifier	is_eol		437365	0					
ANR	438006	ArgumentList	c		437365	1					
ANR	438007	Argument	c		437365	0					
ANR	438008	Identifier	c		437365	0					
ANR	438009	ExpressionStatement	"c = get_codepoint ( pal , pas )"	324:16:11272:11299	437365	7	True				
ANR	438010	AssignmentExpression	"c = get_codepoint ( pal , pas )"		437365	0		=			
ANR	438011	Identifier	c		437365	0					
ANR	438012	CallExpression	"get_codepoint ( pal , pas )"		437365	1					
ANR	438013	Callee	get_codepoint		437365	0					
ANR	438014	Identifier	get_codepoint		437365	0					
ANR	438015	ArgumentList	pal		437365	1					
ANR	438016	Argument	pal		437365	0					
ANR	438017	Identifier	pal		437365	0					
ANR	438018	Argument	pas		437365	1					
ANR	438019	Identifier	pas		437365	0					
ANR	438020	ExpressionStatement	cstr [ i ] = 0	326:12:11327:11338	437365	8	True				
ANR	438021	AssignmentExpression	cstr [ i ] = 0		437365	0		=			
ANR	438022	ArrayIndexing	cstr [ i ]		437365	0					
ANR	438023	Identifier	cstr		437365	0					
ANR	438024	Identifier	i		437365	1					
ANR	438025	PrimaryExpression	0		437365	1					
ANR	438026	IfStatement	if ( pal -> expand_ats && * * argstr == '@' )		437365	2					
ANR	438027	Condition	pal -> expand_ats && * * argstr == '@'	332:12:11543:11576	437365	0	True				
ANR	438028	AndExpression	pal -> expand_ats && * * argstr == '@'		437365	0		&&			
ANR	438029	PtrMemberAccess	pal -> expand_ats		437365	0					
ANR	438030	Identifier	pal		437365	0					
ANR	438031	Identifier	expand_ats		437365	1					
ANR	438032	EqualityExpression	* * argstr == '@'		437365	1		==			
ANR	438033	UnaryOperationExpression	* * argstr		437365	0					
ANR	438034	UnaryOperator	*		437365	0					
ANR	438035	UnaryOperationExpression	* argstr		437365	1					
ANR	438036	UnaryOperator	*		437365	0					
ANR	438037	Identifier	argstr		437365	1					
ANR	438038	PrimaryExpression	'@'		437365	1					
ANR	438039	CompoundStatement		136:12:5634:5641	437365	1					
ANR	438040	IdentifierDeclStatement	char * fname ;	333:12:11593:11604	437365	0	True				
ANR	438041	IdentifierDecl	* fname		437365	0					
ANR	438042	IdentifierDeclType	char *		437365	0					
ANR	438043	Identifier	fname		437365	1					
ANR	438044	IdentifierDeclStatement	FILE * f ;	334:12:11618:11625	437365	1	True				
ANR	438045	IdentifierDecl	* f		437365	0					
ANR	438046	IdentifierDeclType	FILE *		437365	0					
ANR	438047	Identifier	f		437365	1					
ANR	438048	IfStatement	if ( pal -> depth + 1 == arg_depth_max )		437365	2					
ANR	438049	Condition	pal -> depth + 1 == arg_depth_max	335:16:11643:11671	437365	0	True				
ANR	438050	EqualityExpression	pal -> depth + 1 == arg_depth_max		437365	0		==			
ANR	438051	AdditiveExpression	pal -> depth + 1		437365	0		+			
ANR	438052	PtrMemberAccess	pal -> depth		437365	0					
ANR	438053	Identifier	pal		437365	0					
ANR	438054	Identifier	depth		437365	1					
ANR	438055	PrimaryExpression	1		437365	1					
ANR	438056	Identifier	arg_depth_max		437365	1					
ANR	438057	CompoundStatement		137:47:5690:5690	437365	1					
ANR	438058	ExpressionStatement	"errprintf ( errmem , ""Too much nesting of @-files.\\n"" )"	336:16:11692:11743	437365	0	True				
ANR	438059	CallExpression	"errprintf ( errmem , ""Too much nesting of @-files.\\n"" )"		437365	0					
ANR	438060	Callee	errprintf		437365	0					
ANR	438061	Identifier	errprintf		437365	0					
ANR	438062	ArgumentList	errmem		437365	1					
ANR	438063	Argument	errmem		437365	0					
ANR	438064	Identifier	errmem		437365	0					
ANR	438065	Argument	"""Too much nesting of @-files.\\n"""		437365	1					
ANR	438066	PrimaryExpression	"""Too much nesting of @-files.\\n"""		437365	0					
ANR	438067	ExpressionStatement	return_error ( gs_error_Fatal )	337:16:11761:11789	437365	1	True				
ANR	438068	CallExpression	return_error ( gs_error_Fatal )		437365	0					
ANR	438069	Callee	return_error		437365	0					
ANR	438070	Identifier	return_error		437365	0					
ANR	438071	ArgumentList	gs_error_Fatal		437365	1					
ANR	438072	Argument	gs_error_Fatal		437365	0					
ANR	438073	Identifier	gs_error_Fatal		437365	0					
ANR	438074	ExpressionStatement	fname = ( char * ) * argstr + 1	339:12:11817:11844	437365	3	True				
ANR	438075	AssignmentExpression	fname = ( char * ) * argstr + 1		437365	0		=			
ANR	438076	Identifier	fname		437365	0					
ANR	438077	AdditiveExpression	( char * ) * argstr + 1		437365	1		+			
ANR	438078	CastExpression	( char * ) * argstr		437365	0					
ANR	438079	CastTarget	char *		437365	0					
ANR	438080	UnaryOperationExpression	* argstr		437365	1					
ANR	438081	UnaryOperator	*		437365	0					
ANR	438082	Identifier	argstr		437365	1					
ANR	438083	PrimaryExpression	1		437365	1					
ANR	438084	ExpressionStatement	"f = ( * pal -> arg_fopen ) ( fname , pal -> fopen_data )"	340:12:11871:11917	437365	4	True				
ANR	438085	AssignmentExpression	"f = ( * pal -> arg_fopen ) ( fname , pal -> fopen_data )"		437365	0		=			
ANR	438086	Identifier	f		437365	0					
ANR	438087	CallExpression	"( * pal -> arg_fopen ) ( fname , pal -> fopen_data )"		437365	1					
ANR	438088	Callee	* pal -> arg_fopen		437365	0					
ANR	438089	UnaryOperationExpression	* pal -> arg_fopen		437365	0					
ANR	438090	UnaryOperator	*		437365	0					
ANR	438091	PtrMemberAccess	pal -> arg_fopen		437365	1					
ANR	438092	Identifier	pal		437365	0					
ANR	438093	Identifier	arg_fopen		437365	1					
ANR	438094	ArgumentList	fname		437365	1					
ANR	438095	Argument	fname		437365	0					
ANR	438096	Identifier	fname		437365	0					
ANR	438097	Argument	pal -> fopen_data		437365	1					
ANR	438098	PtrMemberAccess	pal -> fopen_data		437365	0					
ANR	438099	Identifier	pal		437365	0					
ANR	438100	Identifier	fopen_data		437365	1					
ANR	438101	IfStatement	if ( f == NULL )		437365	5					
ANR	438102	Condition	f == NULL	341:16:11935:11943	437365	0	True				
ANR	438103	EqualityExpression	f == NULL		437365	0		==			
ANR	438104	Identifier	f		437365	0					
ANR	438105	Identifier	NULL		437365	1					
ANR	438106	CompoundStatement		143:27:5962:5962	437365	1					
ANR	438107	ExpressionStatement	"errprintf ( errmem , ""Unable to open command line file %s\\n"" , * argstr )"	342:16:11964:12031	437365	0	True				
ANR	438108	CallExpression	"errprintf ( errmem , ""Unable to open command line file %s\\n"" , * argstr )"		437365	0					
ANR	438109	Callee	errprintf		437365	0					
ANR	438110	Identifier	errprintf		437365	0					
ANR	438111	ArgumentList	errmem		437365	1					
ANR	438112	Argument	errmem		437365	0					
ANR	438113	Identifier	errmem		437365	0					
ANR	438114	Argument	"""Unable to open command line file %s\\n"""		437365	1					
ANR	438115	PrimaryExpression	"""Unable to open command line file %s\\n"""		437365	0					
ANR	438116	Argument	* argstr		437365	2					
ANR	438117	UnaryOperationExpression	* argstr		437365	0					
ANR	438118	UnaryOperator	*		437365	0					
ANR	438119	Identifier	argstr		437365	1					
ANR	438120	ExpressionStatement	return_error ( gs_error_Fatal )	343:16:12049:12077	437365	1	True				
ANR	438121	CallExpression	return_error ( gs_error_Fatal )		437365	0					
ANR	438122	Callee	return_error		437365	0					
ANR	438123	Identifier	return_error		437365	0					
ANR	438124	ArgumentList	gs_error_Fatal		437365	1					
ANR	438125	Argument	gs_error_Fatal		437365	0					
ANR	438126	Identifier	gs_error_Fatal		437365	0					
ANR	438127	ExpressionStatement	pas = & pal -> sources [ ++ pal -> depth ]	345:12:12105:12138	437365	6	True				
ANR	438128	AssignmentExpression	pas = & pal -> sources [ ++ pal -> depth ]		437365	0		=			
ANR	438129	Identifier	pas		437365	0					
ANR	438130	UnaryOperationExpression	& pal -> sources [ ++ pal -> depth ]		437365	1					
ANR	438131	UnaryOperator	&		437365	0					
ANR	438132	ArrayIndexing	pal -> sources [ ++ pal -> depth ]		437365	1					
ANR	438133	PtrMemberAccess	pal -> sources		437365	0					
ANR	438134	Identifier	pal		437365	0					
ANR	438135	Identifier	sources		437365	1					
ANR	438136	UnaryExpression	++ pal -> depth		437365	1					
ANR	438137	IncDec	++		437365	0					
ANR	438138	PtrMemberAccess	pal -> depth		437365	1					
ANR	438139	Identifier	pal		437365	0					
ANR	438140	Identifier	depth		437365	1					
ANR	438141	ExpressionStatement	pas -> is_file = true	346:12:12152:12171	437365	7	True				
ANR	438142	AssignmentExpression	pas -> is_file = true		437365	0		=			
ANR	438143	PtrMemberAccess	pas -> is_file		437365	0					
ANR	438144	Identifier	pas		437365	0					
ANR	438145	Identifier	is_file		437365	1					
ANR	438146	Identifier	true		437365	1					
ANR	438147	ExpressionStatement	pas -> u . file = f	347:12:12185:12200	437365	8	True				
ANR	438148	AssignmentExpression	pas -> u . file = f		437365	0		=			
ANR	438149	MemberAccess	pas -> u . file		437365	0					
ANR	438150	PtrMemberAccess	pas -> u		437365	0					
ANR	438151	Identifier	pas		437365	0					
ANR	438152	Identifier	u		437365	1					
ANR	438153	Identifier	file		437365	1					
ANR	438154	Identifier	f		437365	1					
ANR	438155	ContinueStatement	continue ;	348:12:12214:12222	437365	9	True				
ANR	438156	Condition	* * argstr == 0	350:13:12301:12313	437365	1	True				
ANR	438157	EqualityExpression	* * argstr == 0		437365	0		==			
ANR	438158	UnaryOperationExpression	* * argstr		437365	0					
ANR	438159	UnaryOperator	*		437365	0					
ANR	438160	UnaryOperationExpression	* argstr		437365	1					
ANR	438161	UnaryOperator	*		437365	0					
ANR	438162	Identifier	argstr		437365	1					
ANR	438163	PrimaryExpression	0		437365	1					
ANR	438164	ReturnStatement	return 1 ;	352:4:12357:12365	437365	7	True				
ANR	438165	PrimaryExpression	1		437365	0					
ANR	438166	ReturnType	int		437365	1					
ANR	438167	Identifier	arg_next		437365	2					
ANR	438168	ParameterList	"arg_list * pal , const char * * argstr , const gs_memory_t * errmem"		437365	3					
ANR	438169	Parameter	arg_list * pal	198:9:5919:5932	437365	0	True				
ANR	438170	ParameterType	arg_list *		437365	0					
ANR	438171	Identifier	pal		437365	1					
ANR	438172	Parameter	const char * * argstr	198:25:5935:5953	437365	1	True				
ANR	438173	ParameterType	const char * *		437365	0					
ANR	438174	Identifier	argstr		437365	1					
ANR	438175	Parameter	const gs_memory_t * errmem	198:46:5956:5980	437365	2	True				
ANR	438176	ParameterType	const gs_memory_t *		437365	0					
ANR	438177	Identifier	errmem		437365	1					
ANR	438178	CFGEntryNode	ENTRY		437365		True				
ANR	438179	CFGExitNode	EXIT		437365		True				
ANR	438180	InfiniteForNode	true		437365		True				
ANR	438181	Symbol	cstr		437365						
ANR	438182	Symbol	eol		437365						
ANR	438183	Symbol	is_eol		437365						
ANR	438184	Symbol	errmem		437365						
ANR	438185	Symbol	* pal		437365						
ANR	438186	Symbol	pas -> is_file		437365						
ANR	438187	Symbol	pal -> fopen_data		437365						
ANR	438188	Symbol	pal -> arg_fopen		437365						
ANR	438189	Symbol	pas -> u . s . parsed		437365						
ANR	438190	Symbol	* pas		437365						
ANR	438191	Symbol	* ( pal -> argp ++ )		437365						
ANR	438192	Symbol	pas -> u . file		437365						
ANR	438193	Symbol	pas -> u		437365						
ANR	438194	Symbol	strlen		437365						
ANR	438195	Symbol	pas -> u . s . str		437365						
ANR	438196	Symbol	* pal -> arg_fopen		437365						
ANR	438197	Symbol	arg_depth_max		437365						
ANR	438198	Symbol	* * argstr		437365						
ANR	438199	Symbol	pal		437365						
ANR	438200	Symbol	EOF		437365						
ANR	438201	Symbol	gs_error_Fatal		437365						
ANR	438202	Symbol	fname		437365						
ANR	438203	Symbol	pas -> u . s . memory		437365						
ANR	438204	Symbol	pas		437365						
ANR	438205	Symbol	c		437365						
ANR	438206	Symbol	NULL		437365						
ANR	438207	Symbol	* argstr		437365						
ANR	438208	Symbol	pal -> cstr		437365						
ANR	438209	Symbol	argstr		437365						
ANR	438210	Symbol	f		437365						
ANR	438211	Symbol	isspace		437365						
ANR	438212	Symbol	false		437365						
ANR	438213	Symbol	i		437365						
ANR	438214	Symbol	get_codepoint		437365						
ANR	438215	Symbol	arg_str_max		437365						
ANR	438216	Symbol	* * pal		437365						
ANR	438217	Symbol	pas -> u . s . chars		437365						
ANR	438218	Symbol	pal -> expand_ats		437365						
ANR	438219	Symbol	* i		437365						
ANR	438220	Symbol	pal -> depth		437365						
ANR	438221	Symbol	in_quote		437365						
ANR	438222	Symbol	pal -> argp		437365						
ANR	438223	Symbol	true		437365						
ANR	438224	Symbol	* cstr		437365						
ANR	438225	Symbol	pas -> u . s		437365						
ANR	438226	Symbol	pal -> sources		437365						
ANR	438227	Symbol	pal -> argn		437365						
ANR	438228	Function	arg_copy	356:0:12413:12668							
ANR	438229	FunctionDef	"arg_copy (const char * str , gs_memory_t * mem)"		438228	0					
ANR	438230	CompoundStatement		358:0:12465:12668	438228	0					
ANR	438231	IdentifierDeclStatement	"char * sstr = ( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" ) ;"	359:4:12471:12540	438228	0	True				
ANR	438232	IdentifierDecl	"* sstr = ( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		438228	0					
ANR	438233	IdentifierDeclType	char *		438228	0					
ANR	438234	Identifier	sstr		438228	1					
ANR	438235	AssignmentExpression	"* sstr = ( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		438228	2		=			
ANR	438236	Identifier	sstr		438228	0					
ANR	438237	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		438228	1					
ANR	438238	CastTarget	char *		438228	0					
ANR	438239	CallExpression	"gs_alloc_bytes ( mem , strlen ( str ) + 1 , ""arg_copy"" )"		438228	1					
ANR	438240	Callee	gs_alloc_bytes		438228	0					
ANR	438241	Identifier	gs_alloc_bytes		438228	0					
ANR	438242	ArgumentList	mem		438228	1					
ANR	438243	Argument	mem		438228	0					
ANR	438244	Identifier	mem		438228	0					
ANR	438245	Argument	strlen ( str ) + 1		438228	1					
ANR	438246	AdditiveExpression	strlen ( str ) + 1		438228	0		+			
ANR	438247	CallExpression	strlen ( str )		438228	0					
ANR	438248	Callee	strlen		438228	0					
ANR	438249	Identifier	strlen		438228	0					
ANR	438250	ArgumentList	str		438228	1					
ANR	438251	Argument	str		438228	0					
ANR	438252	Identifier	str		438228	0					
ANR	438253	PrimaryExpression	1		438228	1					
ANR	438254	Argument	"""arg_copy"""		438228	2					
ANR	438255	PrimaryExpression	"""arg_copy"""		438228	0					
ANR	438256	IfStatement	if ( sstr == 0 )		438228	1					
ANR	438257	Condition	sstr == 0	361:8:12551:12559	438228	0	True				
ANR	438258	EqualityExpression	sstr == 0		438228	0		==			
ANR	438259	Identifier	sstr		438228	0					
ANR	438260	PrimaryExpression	0		438228	1					
ANR	438261	CompoundStatement		4:19:96:96	438228	1					
ANR	438262	ExpressionStatement	"lprintf ( ""Out of memory!\\n"" )"	362:8:12572:12599	438228	0	True				
ANR	438263	CallExpression	"lprintf ( ""Out of memory!\\n"" )"		438228	0					
ANR	438264	Callee	lprintf		438228	0					
ANR	438265	Identifier	lprintf		438228	0					
ANR	438266	ArgumentList	"""Out of memory!\\n"""		438228	1					
ANR	438267	Argument	"""Out of memory!\\n"""		438228	0					
ANR	438268	PrimaryExpression	"""Out of memory!\\n"""		438228	0					
ANR	438269	ReturnStatement	return NULL ;	363:8:12609:12620	438228	1	True				
ANR	438270	Identifier	NULL		438228	0					
ANR	438271	ExpressionStatement	"strcpy ( sstr , str )"	365:4:12632:12649	438228	2	True				
ANR	438272	CallExpression	"strcpy ( sstr , str )"		438228	0					
ANR	438273	Callee	strcpy		438228	0					
ANR	438274	Identifier	strcpy		438228	0					
ANR	438275	ArgumentList	sstr		438228	1					
ANR	438276	Argument	sstr		438228	0					
ANR	438277	Identifier	sstr		438228	0					
ANR	438278	Argument	str		438228	1					
ANR	438279	Identifier	str		438228	0					
ANR	438280	ReturnStatement	return sstr ;	366:4:12655:12666	438228	3	True				
ANR	438281	Identifier	sstr		438228	0					
ANR	438282	ReturnType	char *		438228	1					
ANR	438283	Identifier	arg_copy		438228	2					
ANR	438284	ParameterList	"const char * str , gs_memory_t * mem"		438228	3					
ANR	438285	Parameter	const char * str	357:9:12429:12443	438228	0	True				
ANR	438286	ParameterType	const char *		438228	0					
ANR	438287	Identifier	str		438228	1					
ANR	438288	Parameter	gs_memory_t * mem	357:26:12446:12462	438228	1	True				
ANR	438289	ParameterType	gs_memory_t *		438228	0					
ANR	438290	Identifier	mem		438228	1					
ANR	438291	CFGEntryNode	ENTRY		438228		True				
ANR	438292	CFGExitNode	EXIT		438228		True				
ANR	438293	Symbol	str		438228						
ANR	438294	Symbol	strlen		438228						
ANR	438295	Symbol	gs_alloc_bytes		438228						
ANR	438296	Symbol	NULL		438228						
ANR	438297	Symbol	mem		438228						
ANR	438298	Symbol	sstr		438228						
ANR	438299	Function	arg_free	370:0:12713:12801							
ANR	438300	FunctionDef	"arg_free (char * str , gs_memory_t * mem)"		438299	0					
ANR	438301	CompoundStatement		372:0:12757:12801	438299	0					
ANR	438302	ExpressionStatement	"gs_free_object ( mem , str , ""arg_copy"" )"	373:4:12763:12799	438299	0	True				
ANR	438303	CallExpression	"gs_free_object ( mem , str , ""arg_copy"" )"		438299	0					
ANR	438304	Callee	gs_free_object		438299	0					
ANR	438305	Identifier	gs_free_object		438299	0					
ANR	438306	ArgumentList	mem		438299	1					
ANR	438307	Argument	mem		438299	0					
ANR	438308	Identifier	mem		438299	0					
ANR	438309	Argument	str		438299	1					
ANR	438310	Identifier	str		438299	0					
ANR	438311	Argument	"""arg_copy"""		438299	2					
ANR	438312	PrimaryExpression	"""arg_copy"""		438299	0					
ANR	438313	ReturnType	void		438299	1					
ANR	438314	Identifier	arg_free		438299	2					
ANR	438315	ParameterList	"char * str , gs_memory_t * mem"		438299	3					
ANR	438316	Parameter	char * str	371:9:12727:12735	438299	0	True				
ANR	438317	ParameterType	char *		438299	0					
ANR	438318	Identifier	str		438299	1					
ANR	438319	Parameter	gs_memory_t * mem	371:20:12738:12754	438299	1	True				
ANR	438320	ParameterType	gs_memory_t *		438299	0					
ANR	438321	Identifier	mem		438299	1					
ANR	438322	CFGEntryNode	ENTRY		438299		True				
ANR	438323	CFGExitNode	EXIT		438299		True				
ANR	438324	Symbol	str		438299						
ANR	438325	Symbol	mem		438299						
ANR	438326	Function	arg_strcmp	376:0:12804:13147							
ANR	438327	FunctionDef	"arg_strcmp (arg_list * pal , const char * arg , const char * match)"		438326	0					
ANR	438328	CompoundStatement		377:0:12870:13147	438326	0					
ANR	438329	IdentifierDeclStatement	"int rune , c ;"	378:4:12876:12887	438326	0	True				
ANR	438330	IdentifierDecl	rune		438326	0					
ANR	438331	IdentifierDeclType	int		438326	0					
ANR	438332	Identifier	rune		438326	1					
ANR	438333	IdentifierDecl	c		438326	1					
ANR	438334	IdentifierDeclType	int		438326	0					
ANR	438335	Identifier	c		438326	1					
ANR	438336	IfStatement	if ( ! arg || ! match )		438326	1					
ANR	438337	Condition	! arg || ! match	380:8:12898:12911	438326	0	True				
ANR	438338	OrExpression	! arg || ! match		438326	0		||			
ANR	438339	UnaryOperationExpression	! arg		438326	0					
ANR	438340	UnaryOperator	!		438326	0					
ANR	438341	Identifier	arg		438326	1					
ANR	438342	UnaryOperationExpression	! match		438326	1					
ANR	438343	UnaryOperator	!		438326	0					
ANR	438344	Identifier	match		438326	1					
ANR	438345	ReturnStatement	return 1 ;	381:8:12922:12930	438326	1	True				
ANR	438346	PrimaryExpression	1		438326	0					
ANR	438347	DoStatement	do		438326	2					
ANR	438348	CompoundStatement		6:7:68:68	438326	0					
ANR	438349	ExpressionStatement	"rune = pal -> get_codepoint ( NULL , & arg )"	383:8:12949:12986	438326	0	True				
ANR	438350	AssignmentExpression	"rune = pal -> get_codepoint ( NULL , & arg )"		438326	0		=			
ANR	438351	Identifier	rune		438326	0					
ANR	438352	CallExpression	"pal -> get_codepoint ( NULL , & arg )"		438326	1					
ANR	438353	Callee	pal -> get_codepoint		438326	0					
ANR	438354	PtrMemberAccess	pal -> get_codepoint		438326	0					
ANR	438355	Identifier	pal		438326	0					
ANR	438356	Identifier	get_codepoint		438326	1					
ANR	438357	ArgumentList	NULL		438326	1					
ANR	438358	Argument	NULL		438326	0					
ANR	438359	Identifier	NULL		438326	0					
ANR	438360	Argument	& arg		438326	1					
ANR	438361	UnaryOperationExpression	& arg		438326	0					
ANR	438362	UnaryOperator	&		438326	0					
ANR	438363	Identifier	arg		438326	1					
ANR	438364	IfStatement	if ( rune == - 1 )		438326	1					
ANR	438365	Condition	rune == - 1	384:12:13000:13009	438326	0	True				
ANR	438366	EqualityExpression	rune == - 1		438326	0		==			
ANR	438367	Identifier	rune		438326	0					
ANR	438368	UnaryOperationExpression	- 1		438326	1					
ANR	438369	UnaryOperator	-		438326	0					
ANR	438370	PrimaryExpression	1		438326	1					
ANR	438371	ExpressionStatement	rune = 0	385:12:13024:13032	438326	1	True				
ANR	438372	AssignmentExpression	rune = 0		438326	0		=			
ANR	438373	Identifier	rune		438326	0					
ANR	438374	PrimaryExpression	0		438326	1					
ANR	438375	ExpressionStatement	c = * match ++	386:8:13042:13054	438326	2	True				
ANR	438376	AssignmentExpression	c = * match ++		438326	0		=			
ANR	438377	Identifier	c		438326	0					
ANR	438378	UnaryOperationExpression	* match ++		438326	1					
ANR	438379	UnaryOperator	*		438326	0					
ANR	438380	PostIncDecOperationExpression	match ++		438326	1					
ANR	438381	Identifier	match		438326	0					
ANR	438382	IncDec	++		438326	1					
ANR	438383	IfStatement	if ( rune != c )		438326	3					
ANR	438384	Condition	rune != c	387:12:13068:13076	438326	0	True				
ANR	438385	EqualityExpression	rune != c		438326	0		!=			
ANR	438386	Identifier	rune		438326	0					
ANR	438387	Identifier	c		438326	1					
ANR	438388	ReturnStatement	return rune - c ;	388:12:13091:13106	438326	1	True				
ANR	438389	AdditiveExpression	rune - c		438326	0		-			
ANR	438390	Identifier	rune		438326	0					
ANR	438391	Identifier	c		438326	1					
ANR	438392	Condition	rune && c	389:13:13121:13129	438326	1	True				
ANR	438393	AndExpression	rune && c		438326	0		&&			
ANR	438394	Identifier	rune		438326	0					
ANR	438395	Identifier	c		438326	1					
ANR	438396	ReturnStatement	return 0 ;	390:4:13137:13145	438326	3	True				
ANR	438397	PrimaryExpression	0		438326	0					
ANR	438398	ReturnType	int		438326	1					
ANR	438399	Identifier	arg_strcmp		438326	2					
ANR	438400	ParameterList	"arg_list * pal , const char * arg , const char * match"		438326	3					
ANR	438401	Parameter	arg_list * pal	376:15:12819:12831	438326	0	True				
ANR	438402	ParameterType	arg_list *		438326	0					
ANR	438403	Identifier	pal		438326	1					
ANR	438404	Parameter	const char * arg	376:30:12834:12848	438326	1	True				
ANR	438405	ParameterType	const char *		438326	0					
ANR	438406	Identifier	arg		438326	1					
ANR	438407	Parameter	const char * match	376:47:12851:12867	438326	2	True				
ANR	438408	ParameterType	const char *		438326	0					
ANR	438409	Identifier	match		438326	1					
ANR	438410	CFGEntryNode	ENTRY		438326		True				
ANR	438411	CFGExitNode	EXIT		438326		True				
ANR	438412	Symbol	c		438326						
ANR	438413	Symbol	NULL		438326						
ANR	438414	Symbol	pal -> get_codepoint		438326						
ANR	438415	Symbol	* pal		438326						
ANR	438416	Symbol	arg		438326						
ANR	438417	Symbol	match		438326						
ANR	438418	Symbol	pal		438326						
ANR	438419	Symbol	& arg		438326						
ANR	438420	Symbol	* match ++		438326						
ANR	438421	Symbol	rune		438326						
