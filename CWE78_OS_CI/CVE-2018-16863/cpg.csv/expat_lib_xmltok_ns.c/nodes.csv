command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3162063	File	data/converged/CVE-2018-16863_ghostpdl/expat_lib_xmltok_ns.c								
ANR	3162064	Function	XmlGetUtf8InternalEncoding	36:0:1645:1726							
ANR	3162065	FunctionDef	XmlGetUtf8InternalEncoding ()		3162064	0					
ANR	3162066	CompoundStatement		37:0:1682:1726	3162064	0					
ANR	3162067	ReturnStatement	return & ns ( internal_utf8_encoding ) . enc ;	38:2:1686:1724	3162064	0	True				
ANR	3162068	UnaryOperationExpression	& ns ( internal_utf8_encoding ) . enc		3162064	0					
ANR	3162069	UnaryOperator	&		3162064	0					
ANR	3162070	MemberAccess	ns ( internal_utf8_encoding ) . enc		3162064	1					
ANR	3162071	CallExpression	ns ( internal_utf8_encoding )		3162064	0					
ANR	3162072	Callee	ns		3162064	0					
ANR	3162073	Identifier	ns		3162064	0					
ANR	3162074	ArgumentList	internal_utf8_encoding		3162064	1					
ANR	3162075	Argument	internal_utf8_encoding		3162064	0					
ANR	3162076	Identifier	internal_utf8_encoding		3162064	0					
ANR	3162077	Identifier	enc		3162064	1					
ANR	3162078	ReturnType	NS		3162064	1					
ANR	3162079	Identifier	( XmlGetUtf8InternalEncoding )		3162064	2					
ANR	3162080	Identifier	XmlGetUtf8InternalEncoding		3162064	3					
ANR	3162081	ParameterList			3162064	4					
ANR	3162082	CFGEntryNode	ENTRY		3162064		True				
ANR	3162083	CFGExitNode	EXIT		3162064		True				
ANR	3162084	Symbol	internal_utf8_encoding		3162064						
ANR	3162085	Symbol	ns		3162064						
ANR	3162086	Symbol	& ns ( internal_utf8_encoding ) . enc		3162064						
ANR	3162087	Symbol	& ns		3162064						
ANR	3162088	Function	XmlGetUtf16InternalEncoding	42:0:1746:2074							
ANR	3162089	FunctionDef	XmlGetUtf16InternalEncoding ()		3162088	0					
ANR	3162090	CompoundStatement		43:0:1784:2074	3162088	0					
ANR	3162091	ReturnStatement	return & ns ( internal_little2_encoding ) . enc ;	45:2:1810:1851	3162088	0	True				
ANR	3162092	UnaryOperationExpression	& ns ( internal_little2_encoding ) . enc		3162088	0					
ANR	3162093	UnaryOperator	&		3162088	0					
ANR	3162094	MemberAccess	ns ( internal_little2_encoding ) . enc		3162088	1					
ANR	3162095	CallExpression	ns ( internal_little2_encoding )		3162088	0					
ANR	3162096	Callee	ns		3162088	0					
ANR	3162097	Identifier	ns		3162088	0					
ANR	3162098	ArgumentList	internal_little2_encoding		3162088	1					
ANR	3162099	Argument	internal_little2_encoding		3162088	0					
ANR	3162100	Identifier	internal_little2_encoding		3162088	0					
ANR	3162101	Identifier	enc		3162088	1					
ANR	3162102	ReturnType	NS		3162088	1					
ANR	3162103	Identifier	( XmlGetUtf16InternalEncoding )		3162088	2					
ANR	3162104	Identifier	XmlGetUtf16InternalEncoding		3162088	3					
ANR	3162105	ParameterList			3162088	4					
ANR	3162106	CFGEntryNode	ENTRY		3162088		True				
ANR	3162107	CFGExitNode	EXIT		3162088		True				
ANR	3162108	Symbol	& ns ( internal_little2_encoding ) . enc		3162088						
ANR	3162109	Symbol	ns		3162088						
ANR	3162110	Symbol	internal_little2_encoding		3162088						
ANR	3162111	Symbol	& ns		3162088						
ANR	3162112	Function	initScanProlog	66:0:2331:2590							
ANR	3162113	FunctionDef	"initScanProlog (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3162112	0					
ANR	3162114	CompoundStatement		69:0:2468:2590	3162112	0					
ANR	3162115	ReturnStatement	"return initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_PROLOG_STATE , ptr , end , nextTokPtr ) ;"	70:2:2472:2588	3162112	0	True				
ANR	3162116	CallExpression	"initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_PROLOG_STATE , ptr , end , nextTokPtr )"		3162112	0					
ANR	3162117	Callee	initScan		3162112	0					
ANR	3162118	Identifier	initScan		3162112	0					
ANR	3162119	ArgumentList	NS ( encodings )		3162112	1					
ANR	3162120	Argument	NS ( encodings )		3162112	0					
ANR	3162121	CallExpression	NS ( encodings )		3162112	0					
ANR	3162122	Callee	NS		3162112	0					
ANR	3162123	Identifier	NS		3162112	0					
ANR	3162124	ArgumentList	encodings		3162112	1					
ANR	3162125	Argument	encodings		3162112	0					
ANR	3162126	Identifier	encodings		3162112	0					
ANR	3162127	Argument	( const INIT_ENCODING * ) enc		3162112	1					
ANR	3162128	CastExpression	( const INIT_ENCODING * ) enc		3162112	0					
ANR	3162129	CastTarget	const INIT_ENCODING *		3162112	0					
ANR	3162130	Identifier	enc		3162112	1					
ANR	3162131	Argument	XML_PROLOG_STATE		3162112	2					
ANR	3162132	Identifier	XML_PROLOG_STATE		3162112	0					
ANR	3162133	Argument	ptr		3162112	3					
ANR	3162134	Identifier	ptr		3162112	0					
ANR	3162135	Argument	end		3162112	4					
ANR	3162136	Identifier	end		3162112	0					
ANR	3162137	Argument	nextTokPtr		3162112	5					
ANR	3162138	Identifier	nextTokPtr		3162112	0					
ANR	3162139	ReturnType	static int PTRCALL NS		3162112	1					
ANR	3162140	Identifier	( initScanProlog )		3162112	2					
ANR	3162141	Identifier	initScanProlog		3162112	3					
ANR	3162142	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3162112	4					
ANR	3162143	Parameter	const ENCODING * enc	67:19:2369:2387	3162112	0	True				
ANR	3162144	ParameterType	const ENCODING *		3162112	0					
ANR	3162145	Identifier	enc		3162112	1					
ANR	3162146	Parameter	const char * ptr	67:40:2390:2404	3162112	1	True				
ANR	3162147	ParameterType	const char *		3162112	0					
ANR	3162148	Identifier	ptr		3162112	1					
ANR	3162149	Parameter	const char * end	67:57:2407:2421	3162112	2	True				
ANR	3162150	ParameterType	const char *		3162112	0					
ANR	3162151	Identifier	end		3162112	1					
ANR	3162152	Parameter	const char * * nextTokPtr	68:19:2443:2465	3162112	3	True				
ANR	3162153	ParameterType	const char * *		3162112	0					
ANR	3162154	Identifier	nextTokPtr		3162112	1					
ANR	3162155	CFGEntryNode	ENTRY		3162112		True				
ANR	3162156	CFGExitNode	EXIT		3162112		True				
ANR	3162157	Symbol	nextTokPtr		3162112						
ANR	3162158	Symbol	initScan		3162112						
ANR	3162159	Symbol	NS		3162112						
ANR	3162160	Symbol	encodings		3162112						
ANR	3162161	Symbol	XML_PROLOG_STATE		3162112						
ANR	3162162	Symbol	end		3162112						
ANR	3162163	Symbol	enc		3162112						
ANR	3162164	Symbol	ptr		3162112						
ANR	3162165	Function	initScanContent	74:0:2593:2855							
ANR	3162166	FunctionDef	"initScanContent (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3162165	0					
ANR	3162167	CompoundStatement		77:0:2732:2855	3162165	0					
ANR	3162168	ReturnStatement	"return initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_CONTENT_STATE , ptr , end , nextTokPtr ) ;"	78:2:2736:2853	3162165	0	True				
ANR	3162169	CallExpression	"initScan ( NS ( encodings ) , ( const INIT_ENCODING * ) enc , XML_CONTENT_STATE , ptr , end , nextTokPtr )"		3162165	0					
ANR	3162170	Callee	initScan		3162165	0					
ANR	3162171	Identifier	initScan		3162165	0					
ANR	3162172	ArgumentList	NS ( encodings )		3162165	1					
ANR	3162173	Argument	NS ( encodings )		3162165	0					
ANR	3162174	CallExpression	NS ( encodings )		3162165	0					
ANR	3162175	Callee	NS		3162165	0					
ANR	3162176	Identifier	NS		3162165	0					
ANR	3162177	ArgumentList	encodings		3162165	1					
ANR	3162178	Argument	encodings		3162165	0					
ANR	3162179	Identifier	encodings		3162165	0					
ANR	3162180	Argument	( const INIT_ENCODING * ) enc		3162165	1					
ANR	3162181	CastExpression	( const INIT_ENCODING * ) enc		3162165	0					
ANR	3162182	CastTarget	const INIT_ENCODING *		3162165	0					
ANR	3162183	Identifier	enc		3162165	1					
ANR	3162184	Argument	XML_CONTENT_STATE		3162165	2					
ANR	3162185	Identifier	XML_CONTENT_STATE		3162165	0					
ANR	3162186	Argument	ptr		3162165	3					
ANR	3162187	Identifier	ptr		3162165	0					
ANR	3162188	Argument	end		3162165	4					
ANR	3162189	Identifier	end		3162165	0					
ANR	3162190	Argument	nextTokPtr		3162165	5					
ANR	3162191	Identifier	nextTokPtr		3162165	0					
ANR	3162192	ReturnType	static int PTRCALL NS		3162165	1					
ANR	3162193	Identifier	( initScanContent )		3162165	2					
ANR	3162194	Identifier	initScanContent		3162165	3					
ANR	3162195	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3162165	4					
ANR	3162196	Parameter	const ENCODING * enc	75:20:2632:2650	3162165	0	True				
ANR	3162197	ParameterType	const ENCODING *		3162165	0					
ANR	3162198	Identifier	enc		3162165	1					
ANR	3162199	Parameter	const char * ptr	75:41:2653:2667	3162165	1	True				
ANR	3162200	ParameterType	const char *		3162165	0					
ANR	3162201	Identifier	ptr		3162165	1					
ANR	3162202	Parameter	const char * end	75:58:2670:2684	3162165	2	True				
ANR	3162203	ParameterType	const char *		3162165	0					
ANR	3162204	Identifier	end		3162165	1					
ANR	3162205	Parameter	const char * * nextTokPtr	76:20:2707:2729	3162165	3	True				
ANR	3162206	ParameterType	const char * *		3162165	0					
ANR	3162207	Identifier	nextTokPtr		3162165	1					
ANR	3162208	CFGEntryNode	ENTRY		3162165		True				
ANR	3162209	CFGExitNode	EXIT		3162165		True				
ANR	3162210	Symbol	nextTokPtr		3162165						
ANR	3162211	Symbol	initScan		3162165						
ANR	3162212	Symbol	XML_CONTENT_STATE		3162165						
ANR	3162213	Symbol	NS		3162165						
ANR	3162214	Symbol	encodings		3162165						
ANR	3162215	Symbol	end		3162165						
ANR	3162216	Symbol	enc		3162165						
ANR	3162217	Symbol	ptr		3162165						
ANR	3162218	Function	XmlInitEncoding	82:0:2858:3302							
ANR	3162219	FunctionDef	"XmlInitEncoding (INIT_ENCODING * p , const ENCODING * * encPtr , const char * name)"		3162218	0					
ANR	3162220	CompoundStatement		85:0:2963:3302	3162218	0					
ANR	3162221	IdentifierDeclStatement	int i = getEncodingIndex ( name ) ;	86:2:2967:2997	3162218	0	True				
ANR	3162222	IdentifierDecl	i = getEncodingIndex ( name )		3162218	0					
ANR	3162223	IdentifierDeclType	int		3162218	0					
ANR	3162224	Identifier	i		3162218	1					
ANR	3162225	AssignmentExpression	i = getEncodingIndex ( name )		3162218	2		=			
ANR	3162226	Identifier	i		3162218	0					
ANR	3162227	CallExpression	getEncodingIndex ( name )		3162218	1					
ANR	3162228	Callee	getEncodingIndex		3162218	0					
ANR	3162229	Identifier	getEncodingIndex		3162218	0					
ANR	3162230	ArgumentList	name		3162218	1					
ANR	3162231	Argument	name		3162218	0					
ANR	3162232	Identifier	name		3162218	0					
ANR	3162233	IfStatement	if ( i == UNKNOWN_ENC )		3162218	1					
ANR	3162234	Condition	i == UNKNOWN_ENC	87:6:3005:3020	3162218	0	True				
ANR	3162235	EqualityExpression	i == UNKNOWN_ENC		3162218	0		==			
ANR	3162236	Identifier	i		3162218	0					
ANR	3162237	Identifier	UNKNOWN_ENC		3162218	1					
ANR	3162238	ReturnStatement	return 0 ;	88:4:3027:3035	3162218	1	True				
ANR	3162239	PrimaryExpression	0		3162218	0					
ANR	3162240	ExpressionStatement	"SET_INIT_ENC_INDEX ( p , i )"	89:2:3039:3063	3162218	2	True				
ANR	3162241	CallExpression	"SET_INIT_ENC_INDEX ( p , i )"		3162218	0					
ANR	3162242	Callee	SET_INIT_ENC_INDEX		3162218	0					
ANR	3162243	Identifier	SET_INIT_ENC_INDEX		3162218	0					
ANR	3162244	ArgumentList	p		3162218	1					
ANR	3162245	Argument	p		3162218	0					
ANR	3162246	Identifier	p		3162218	0					
ANR	3162247	Argument	i		3162218	1					
ANR	3162248	Identifier	i		3162218	0					
ANR	3162249	ExpressionStatement	p -> initEnc . scanners [ XML_PROLOG_STATE ] = NS ( initScanProlog )	90:2:3067:3125	3162218	3	True				
ANR	3162250	AssignmentExpression	p -> initEnc . scanners [ XML_PROLOG_STATE ] = NS ( initScanProlog )		3162218	0		=			
ANR	3162251	ArrayIndexing	p -> initEnc . scanners [ XML_PROLOG_STATE ]		3162218	0					
ANR	3162252	MemberAccess	p -> initEnc . scanners		3162218	0					
ANR	3162253	PtrMemberAccess	p -> initEnc		3162218	0					
ANR	3162254	Identifier	p		3162218	0					
ANR	3162255	Identifier	initEnc		3162218	1					
ANR	3162256	Identifier	scanners		3162218	1					
ANR	3162257	Identifier	XML_PROLOG_STATE		3162218	1					
ANR	3162258	CallExpression	NS ( initScanProlog )		3162218	1					
ANR	3162259	Callee	NS		3162218	0					
ANR	3162260	Identifier	NS		3162218	0					
ANR	3162261	ArgumentList	initScanProlog		3162218	1					
ANR	3162262	Argument	initScanProlog		3162218	0					
ANR	3162263	Identifier	initScanProlog		3162218	0					
ANR	3162264	ExpressionStatement	p -> initEnc . scanners [ XML_CONTENT_STATE ] = NS ( initScanContent )	91:2:3129:3189	3162218	4	True				
ANR	3162265	AssignmentExpression	p -> initEnc . scanners [ XML_CONTENT_STATE ] = NS ( initScanContent )		3162218	0		=			
ANR	3162266	ArrayIndexing	p -> initEnc . scanners [ XML_CONTENT_STATE ]		3162218	0					
ANR	3162267	MemberAccess	p -> initEnc . scanners		3162218	0					
ANR	3162268	PtrMemberAccess	p -> initEnc		3162218	0					
ANR	3162269	Identifier	p		3162218	0					
ANR	3162270	Identifier	initEnc		3162218	1					
ANR	3162271	Identifier	scanners		3162218	1					
ANR	3162272	Identifier	XML_CONTENT_STATE		3162218	1					
ANR	3162273	CallExpression	NS ( initScanContent )		3162218	1					
ANR	3162274	Callee	NS		3162218	0					
ANR	3162275	Identifier	NS		3162218	0					
ANR	3162276	ArgumentList	initScanContent		3162218	1					
ANR	3162277	Argument	initScanContent		3162218	0					
ANR	3162278	Identifier	initScanContent		3162218	0					
ANR	3162279	ExpressionStatement	p -> initEnc . updatePosition = initUpdatePosition	92:2:3193:3239	3162218	5	True				
ANR	3162280	AssignmentExpression	p -> initEnc . updatePosition = initUpdatePosition		3162218	0		=			
ANR	3162281	MemberAccess	p -> initEnc . updatePosition		3162218	0					
ANR	3162282	PtrMemberAccess	p -> initEnc		3162218	0					
ANR	3162283	Identifier	p		3162218	0					
ANR	3162284	Identifier	initEnc		3162218	1					
ANR	3162285	Identifier	updatePosition		3162218	1					
ANR	3162286	Identifier	initUpdatePosition		3162218	1					
ANR	3162287	ExpressionStatement	p -> encPtr = encPtr	93:2:3243:3261	3162218	6	True				
ANR	3162288	AssignmentExpression	p -> encPtr = encPtr		3162218	0		=			
ANR	3162289	PtrMemberAccess	p -> encPtr		3162218	0					
ANR	3162290	Identifier	p		3162218	0					
ANR	3162291	Identifier	encPtr		3162218	1					
ANR	3162292	Identifier	encPtr		3162218	1					
ANR	3162293	ExpressionStatement	* encPtr = & ( p -> initEnc )	94:2:3265:3288	3162218	7	True				
ANR	3162294	AssignmentExpression	* encPtr = & ( p -> initEnc )		3162218	0		=			
ANR	3162295	UnaryOperationExpression	* encPtr		3162218	0					
ANR	3162296	UnaryOperator	*		3162218	0					
ANR	3162297	Identifier	encPtr		3162218	1					
ANR	3162298	UnaryOperationExpression	& ( p -> initEnc )		3162218	1					
ANR	3162299	UnaryOperator	&		3162218	0					
ANR	3162300	PtrMemberAccess	p -> initEnc		3162218	1					
ANR	3162301	Identifier	p		3162218	0					
ANR	3162302	Identifier	initEnc		3162218	1					
ANR	3162303	ReturnStatement	return 1 ;	95:2:3292:3300	3162218	8	True				
ANR	3162304	PrimaryExpression	1		3162218	0					
ANR	3162305	ReturnType	int NS		3162218	1					
ANR	3162306	Identifier	( XmlInitEncoding )		3162218	2					
ANR	3162307	Identifier	XmlInitEncoding		3162218	3					
ANR	3162308	ParameterList	"INIT_ENCODING * p , const ENCODING * * encPtr , const char * name"		3162218	4					
ANR	3162309	Parameter	INIT_ENCODING * p	83:20:2882:2897	3162218	0	True				
ANR	3162310	ParameterType	INIT_ENCODING *		3162218	0					
ANR	3162311	Identifier	p		3162218	1					
ANR	3162312	Parameter	const ENCODING * * encPtr	83:38:2900:2922	3162218	1	True				
ANR	3162313	ParameterType	const ENCODING * *		3162218	0					
ANR	3162314	Identifier	encPtr		3162218	1					
ANR	3162315	Parameter	const char * name	84:20:2945:2960	3162218	2	True				
ANR	3162316	ParameterType	const char *		3162218	0					
ANR	3162317	Identifier	name		3162218	1					
ANR	3162318	CFGEntryNode	ENTRY		3162218		True				
ANR	3162319	CFGExitNode	EXIT		3162218		True				
ANR	3162320	Symbol	encPtr		3162218						
ANR	3162321	Symbol	initScanProlog		3162218						
ANR	3162322	Symbol	XML_CONTENT_STATE		3162218						
ANR	3162323	Symbol	* encPtr		3162218						
ANR	3162324	Symbol	NS		3162218						
ANR	3162325	Symbol	getEncodingIndex		3162218						
ANR	3162326	Symbol	p -> initEnc . scanners		3162218						
ANR	3162327	Symbol	initUpdatePosition		3162218						
ANR	3162328	Symbol	i		3162218						
ANR	3162329	Symbol	p		3162218						
ANR	3162330	Symbol	p -> initEnc . updatePosition		3162218						
ANR	3162331	Symbol	UNKNOWN_ENC		3162218						
ANR	3162332	Symbol	* p -> initEnc . scanners		3162218						
ANR	3162333	Symbol	* p -> initEnc		3162218						
ANR	3162334	Symbol	* XML_CONTENT_STATE		3162218						
ANR	3162335	Symbol	* XML_PROLOG_STATE		3162218						
ANR	3162336	Symbol	XML_PROLOG_STATE		3162218						
ANR	3162337	Symbol	name		3162218						
ANR	3162338	Symbol	& p -> initEnc		3162218						
ANR	3162339	Symbol	* p		3162218						
ANR	3162340	Symbol	p -> encPtr		3162218						
ANR	3162341	Symbol	p -> initEnc		3162218						
ANR	3162342	Symbol	* * p		3162218						
ANR	3162343	Symbol	initScanContent		3162218						
ANR	3162344	Function	findEncoding	99:0:3329:3752							
ANR	3162345	FunctionDef	"findEncoding (const ENCODING * enc , const char * ptr , const char * end)"		3162344	0					
ANR	3162346	CompoundStatement		100:0:3401:3752	3162344	0					
ANR	3162347	Statement	define	101:1:3404:3409	3162344	0	True				
ANR	3162348	Statement	ENCODING_MAX	101:8:3411:3422	3162344	1	True				
ANR	3162349	Statement	128	101:21:3424:3426	3162344	2	True				
ANR	3162350	IdentifierDeclStatement	char buf [ ENCODING_MAX ] ;	102:2:3430:3452	3162344	3	True				
ANR	3162351	IdentifierDecl	buf [ ENCODING_MAX ]		3162344	0					
ANR	3162352	IdentifierDeclType	char [ ENCODING_MAX ]		3162344	0					
ANR	3162353	Identifier	buf		3162344	1					
ANR	3162354	Identifier	ENCODING_MAX		3162344	2					
ANR	3162355	IdentifierDeclStatement	char * p = buf ;	103:2:3456:3469	3162344	4	True				
ANR	3162356	IdentifierDecl	* p = buf		3162344	0					
ANR	3162357	IdentifierDeclType	char *		3162344	0					
ANR	3162358	Identifier	p		3162344	1					
ANR	3162359	AssignmentExpression	* p = buf		3162344	2		=			
ANR	3162360	Identifier	buf		3162344	0					
ANR	3162361	Identifier	buf		3162344	1					
ANR	3162362	IdentifierDeclStatement	int i ;	104:2:3473:3478	3162344	5	True				
ANR	3162363	IdentifierDecl	i		3162344	0					
ANR	3162364	IdentifierDeclType	int		3162344	0					
ANR	3162365	Identifier	i		3162344	1					
ANR	3162366	ExpressionStatement	"XmlUtf8Convert ( enc , & ptr , end , & p , p + ENCODING_MAX - 1 )"	105:2:3482:3538	3162344	6	True				
ANR	3162367	CallExpression	"XmlUtf8Convert ( enc , & ptr , end , & p , p + ENCODING_MAX - 1 )"		3162344	0					
ANR	3162368	Callee	XmlUtf8Convert		3162344	0					
ANR	3162369	Identifier	XmlUtf8Convert		3162344	0					
ANR	3162370	ArgumentList	enc		3162344	1					
ANR	3162371	Argument	enc		3162344	0					
ANR	3162372	Identifier	enc		3162344	0					
ANR	3162373	Argument	& ptr		3162344	1					
ANR	3162374	UnaryOperationExpression	& ptr		3162344	0					
ANR	3162375	UnaryOperator	&		3162344	0					
ANR	3162376	Identifier	ptr		3162344	1					
ANR	3162377	Argument	end		3162344	2					
ANR	3162378	Identifier	end		3162344	0					
ANR	3162379	Argument	& p		3162344	3					
ANR	3162380	UnaryOperationExpression	& p		3162344	0					
ANR	3162381	UnaryOperator	&		3162344	0					
ANR	3162382	Identifier	p		3162344	1					
ANR	3162383	Argument	p + ENCODING_MAX - 1		3162344	4					
ANR	3162384	AdditiveExpression	p + ENCODING_MAX - 1		3162344	0		+			
ANR	3162385	Identifier	p		3162344	0					
ANR	3162386	AdditiveExpression	ENCODING_MAX - 1		3162344	1		-			
ANR	3162387	Identifier	ENCODING_MAX		3162344	0					
ANR	3162388	PrimaryExpression	1		3162344	1					
ANR	3162389	IfStatement	if ( ptr != end )		3162344	7					
ANR	3162390	Condition	ptr != end	106:6:3546:3555	3162344	0	True				
ANR	3162391	EqualityExpression	ptr != end		3162344	0		!=			
ANR	3162392	Identifier	ptr		3162344	0					
ANR	3162393	Identifier	end		3162344	1					
ANR	3162394	ReturnStatement	return 0 ;	107:4:3562:3570	3162344	1	True				
ANR	3162395	PrimaryExpression	0		3162344	0					
ANR	3162396	ExpressionStatement	* p = 0	108:2:3574:3580	3162344	8	True				
ANR	3162397	AssignmentExpression	* p = 0		3162344	0		=			
ANR	3162398	UnaryOperationExpression	* p		3162344	0					
ANR	3162399	UnaryOperator	*		3162344	0					
ANR	3162400	Identifier	p		3162344	1					
ANR	3162401	PrimaryExpression	0		3162344	1					
ANR	3162402	IfStatement	"if ( streqci ( buf , KW_UTF_16 ) && enc -> minBytesPerChar == 2 )"		3162344	9					
ANR	3162403	Condition	"streqci ( buf , KW_UTF_16 ) && enc -> minBytesPerChar == 2"	109:6:3588:3639	3162344	0	True				
ANR	3162404	AndExpression	"streqci ( buf , KW_UTF_16 ) && enc -> minBytesPerChar == 2"		3162344	0		&&			
ANR	3162405	CallExpression	"streqci ( buf , KW_UTF_16 )"		3162344	0					
ANR	3162406	Callee	streqci		3162344	0					
ANR	3162407	Identifier	streqci		3162344	0					
ANR	3162408	ArgumentList	buf		3162344	1					
ANR	3162409	Argument	buf		3162344	0					
ANR	3162410	Identifier	buf		3162344	0					
ANR	3162411	Argument	KW_UTF_16		3162344	1					
ANR	3162412	Identifier	KW_UTF_16		3162344	0					
ANR	3162413	EqualityExpression	enc -> minBytesPerChar == 2		3162344	1		==			
ANR	3162414	PtrMemberAccess	enc -> minBytesPerChar		3162344	0					
ANR	3162415	Identifier	enc		3162344	0					
ANR	3162416	Identifier	minBytesPerChar		3162344	1					
ANR	3162417	PrimaryExpression	2		3162344	1					
ANR	3162418	ReturnStatement	return enc ;	110:4:3646:3656	3162344	1	True				
ANR	3162419	Identifier	enc		3162344	0					
ANR	3162420	ExpressionStatement	i = getEncodingIndex ( buf )	111:2:3660:3685	3162344	10	True				
ANR	3162421	AssignmentExpression	i = getEncodingIndex ( buf )		3162344	0		=			
ANR	3162422	Identifier	i		3162344	0					
ANR	3162423	CallExpression	getEncodingIndex ( buf )		3162344	1					
ANR	3162424	Callee	getEncodingIndex		3162344	0					
ANR	3162425	Identifier	getEncodingIndex		3162344	0					
ANR	3162426	ArgumentList	buf		3162344	1					
ANR	3162427	Argument	buf		3162344	0					
ANR	3162428	Identifier	buf		3162344	0					
ANR	3162429	IfStatement	if ( i == UNKNOWN_ENC )		3162344	11					
ANR	3162430	Condition	i == UNKNOWN_ENC	112:6:3693:3708	3162344	0	True				
ANR	3162431	EqualityExpression	i == UNKNOWN_ENC		3162344	0		==			
ANR	3162432	Identifier	i		3162344	0					
ANR	3162433	Identifier	UNKNOWN_ENC		3162344	1					
ANR	3162434	ReturnStatement	return 0 ;	113:4:3715:3723	3162344	1	True				
ANR	3162435	PrimaryExpression	0		3162344	0					
ANR	3162436	ReturnStatement	return NS ( encodings ) [ i ] ;	114:2:3727:3750	3162344	12	True				
ANR	3162437	ArrayIndexing	NS ( encodings ) [ i ]		3162344	0					
ANR	3162438	CallExpression	NS ( encodings )		3162344	0					
ANR	3162439	Callee	NS		3162344	0					
ANR	3162440	Identifier	NS		3162344	0					
ANR	3162441	ArgumentList	encodings		3162344	1					
ANR	3162442	Argument	encodings		3162344	0					
ANR	3162443	Identifier	encodings		3162344	0					
ANR	3162444	Identifier	i		3162344	1					
ANR	3162445	ReturnType	NS		3162344	1					
ANR	3162446	Identifier	( findEncoding )		3162344	2					
ANR	3162447	Identifier	findEncoding		3162344	3					
ANR	3162448	ParameterList	"const ENCODING * enc , const char * ptr , const char * end"		3162344	4					
ANR	3162449	Parameter	const ENCODING * enc	99:17:3346:3364	3162344	0	True				
ANR	3162450	ParameterType	const ENCODING *		3162344	0					
ANR	3162451	Identifier	enc		3162344	1					
ANR	3162452	Parameter	const char * ptr	99:38:3367:3381	3162344	1	True				
ANR	3162453	ParameterType	const char *		3162344	0					
ANR	3162454	Identifier	ptr		3162344	1					
ANR	3162455	Parameter	const char * end	99:55:3384:3398	3162344	2	True				
ANR	3162456	ParameterType	const char *		3162344	0					
ANR	3162457	Identifier	end		3162344	1					
ANR	3162458	CFGEntryNode	ENTRY		3162344		True				
ANR	3162459	CFGExitNode	EXIT		3162344		True				
ANR	3162460	Symbol	NS		3162344						
ANR	3162461	Symbol	getEncodingIndex		3162344						
ANR	3162462	Symbol	encodings		3162344						
ANR	3162463	Symbol	enc -> minBytesPerChar		3162344						
ANR	3162464	Symbol	* NS		3162344						
ANR	3162465	Symbol	i		3162344						
ANR	3162466	Symbol	ptr		3162344						
ANR	3162467	Symbol	p		3162344						
ANR	3162468	Symbol	buf		3162344						
ANR	3162469	Symbol	& ptr		3162344						
ANR	3162470	Symbol	* i		3162344						
ANR	3162471	Symbol	ENCODING_MAX		3162344						
ANR	3162472	Symbol	UNKNOWN_ENC		3162344						
ANR	3162473	Symbol	& p		3162344						
ANR	3162474	Symbol	streqci		3162344						
ANR	3162475	Symbol	end		3162344						
ANR	3162476	Symbol	* p		3162344						
ANR	3162477	Symbol	enc		3162344						
ANR	3162478	Symbol	* enc		3162344						
ANR	3162479	Symbol	KW_UTF_16		3162344						
ANR	3162480	Function	XmlParseXmlDecl	117:0:3755:4576							
ANR	3162481	FunctionDef	"XmlParseXmlDecl (int isGeneralTextEntity , const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr , const char * * versionPtr , const char * * versionEndPtr , const char * * encodingName , const ENCODING * * encoding , int * standalone)"		3162480	0					
ANR	3162482	CompoundStatement		128:0:4184:4576	3162480	0					
ANR	3162483	ReturnStatement	"return doParseXmlDecl ( NS ( findEncoding ) , isGeneralTextEntity , enc , ptr , end , badPtr , versionPtr , versionEndPtr , encodingName , encoding , standalone ) ;"	129:2:4188:4574	3162480	0	True				
ANR	3162484	CallExpression	"doParseXmlDecl ( NS ( findEncoding ) , isGeneralTextEntity , enc , ptr , end , badPtr , versionPtr , versionEndPtr , encodingName , encoding , standalone )"		3162480	0					
ANR	3162485	Callee	doParseXmlDecl		3162480	0					
ANR	3162486	Identifier	doParseXmlDecl		3162480	0					
ANR	3162487	ArgumentList	NS ( findEncoding )		3162480	1					
ANR	3162488	Argument	NS ( findEncoding )		3162480	0					
ANR	3162489	CallExpression	NS ( findEncoding )		3162480	0					
ANR	3162490	Callee	NS		3162480	0					
ANR	3162491	Identifier	NS		3162480	0					
ANR	3162492	ArgumentList	findEncoding		3162480	1					
ANR	3162493	Argument	findEncoding		3162480	0					
ANR	3162494	Identifier	findEncoding		3162480	0					
ANR	3162495	Argument	isGeneralTextEntity		3162480	1					
ANR	3162496	Identifier	isGeneralTextEntity		3162480	0					
ANR	3162497	Argument	enc		3162480	2					
ANR	3162498	Identifier	enc		3162480	0					
ANR	3162499	Argument	ptr		3162480	3					
ANR	3162500	Identifier	ptr		3162480	0					
ANR	3162501	Argument	end		3162480	4					
ANR	3162502	Identifier	end		3162480	0					
ANR	3162503	Argument	badPtr		3162480	5					
ANR	3162504	Identifier	badPtr		3162480	0					
ANR	3162505	Argument	versionPtr		3162480	6					
ANR	3162506	Identifier	versionPtr		3162480	0					
ANR	3162507	Argument	versionEndPtr		3162480	7					
ANR	3162508	Identifier	versionEndPtr		3162480	0					
ANR	3162509	Argument	encodingName		3162480	8					
ANR	3162510	Identifier	encodingName		3162480	0					
ANR	3162511	Argument	encoding		3162480	9					
ANR	3162512	Identifier	encoding		3162480	0					
ANR	3162513	Argument	standalone		3162480	10					
ANR	3162514	Identifier	standalone		3162480	0					
ANR	3162515	ReturnType	int NS		3162480	1					
ANR	3162516	Identifier	( XmlParseXmlDecl )		3162480	2					
ANR	3162517	Identifier	XmlParseXmlDecl		3162480	3					
ANR	3162518	ParameterList	"int isGeneralTextEntity , const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr , const char * * versionPtr , const char * * versionEndPtr , const char * * encodingName , const ENCODING * * encoding , int * standalone"		3162480	4					
ANR	3162519	Parameter	int isGeneralTextEntity	118:20:3779:3801	3162480	0	True				
ANR	3162520	ParameterType	int		3162480	0					
ANR	3162521	Identifier	isGeneralTextEntity		3162480	1					
ANR	3162522	Parameter	const ENCODING * enc	119:20:3824:3842	3162480	1	True				
ANR	3162523	ParameterType	const ENCODING *		3162480	0					
ANR	3162524	Identifier	enc		3162480	1					
ANR	3162525	Parameter	const char * ptr	120:20:3865:3879	3162480	2	True				
ANR	3162526	ParameterType	const char *		3162480	0					
ANR	3162527	Identifier	ptr		3162480	1					
ANR	3162528	Parameter	const char * end	121:20:3902:3916	3162480	3	True				
ANR	3162529	ParameterType	const char *		3162480	0					
ANR	3162530	Identifier	end		3162480	1					
ANR	3162531	Parameter	const char * * badPtr	122:20:3939:3957	3162480	4	True				
ANR	3162532	ParameterType	const char * *		3162480	0					
ANR	3162533	Identifier	badPtr		3162480	1					
ANR	3162534	Parameter	const char * * versionPtr	123:20:3980:4002	3162480	5	True				
ANR	3162535	ParameterType	const char * *		3162480	0					
ANR	3162536	Identifier	versionPtr		3162480	1					
ANR	3162537	Parameter	const char * * versionEndPtr	124:20:4025:4050	3162480	6	True				
ANR	3162538	ParameterType	const char * *		3162480	0					
ANR	3162539	Identifier	versionEndPtr		3162480	1					
ANR	3162540	Parameter	const char * * encodingName	125:20:4073:4097	3162480	7	True				
ANR	3162541	ParameterType	const char * *		3162480	0					
ANR	3162542	Identifier	encodingName		3162480	1					
ANR	3162543	Parameter	const ENCODING * * encoding	126:20:4120:4144	3162480	8	True				
ANR	3162544	ParameterType	const ENCODING * *		3162480	0					
ANR	3162545	Identifier	encoding		3162480	1					
ANR	3162546	Parameter	int * standalone	127:20:4167:4181	3162480	9	True				
ANR	3162547	ParameterType	int *		3162480	0					
ANR	3162548	Identifier	standalone		3162480	1					
ANR	3162549	CFGEntryNode	ENTRY		3162480		True				
ANR	3162550	CFGExitNode	EXIT		3162480		True				
ANR	3162551	Symbol	doParseXmlDecl		3162480						
ANR	3162552	Symbol	NS		3162480						
ANR	3162553	Symbol	versionEndPtr		3162480						
ANR	3162554	Symbol	standalone		3162480						
ANR	3162555	Symbol	badPtr		3162480						
ANR	3162556	Symbol	encodingName		3162480						
ANR	3162557	Symbol	encoding		3162480						
ANR	3162558	Symbol	ptr		3162480						
ANR	3162559	Symbol	findEncoding		3162480						
ANR	3162560	Symbol	isGeneralTextEntity		3162480						
ANR	3162561	Symbol	end		3162480						
ANR	3162562	Symbol	enc		3162480						
ANR	3162563	Symbol	versionPtr		3162480						
