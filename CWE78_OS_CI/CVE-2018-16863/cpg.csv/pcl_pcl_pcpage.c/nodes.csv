command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8066964	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcpage.c								
ANR	8066965	Function	preserve_cap_and_margins	62:0:1998:2608							
ANR	8066966	FunctionDef	"preserve_cap_and_margins (const pcl_state_t * pcs , gs_point * pcur_pt , gs_rect * ptext_rect)"		8066965	0					
ANR	8066967	CompoundStatement		65:0:2127:2608	8066965	0					
ANR	8066968	ExpressionStatement	pcur_pt -> x = ( double ) pcs -> cap . x	66:4:2133:2164	8066965	0	True				
ANR	8066969	AssignmentExpression	pcur_pt -> x = ( double ) pcs -> cap . x		8066965	0		=			
ANR	8066970	PtrMemberAccess	pcur_pt -> x		8066965	0					
ANR	8066971	Identifier	pcur_pt		8066965	0					
ANR	8066972	Identifier	x		8066965	1					
ANR	8066973	CastExpression	( double ) pcs -> cap . x		8066965	1					
ANR	8066974	CastTarget	double		8066965	0					
ANR	8066975	MemberAccess	pcs -> cap . x		8066965	1					
ANR	8066976	PtrMemberAccess	pcs -> cap		8066965	0					
ANR	8066977	Identifier	pcs		8066965	0					
ANR	8066978	Identifier	cap		8066965	1					
ANR	8066979	Identifier	x		8066965	1					
ANR	8066980	ExpressionStatement	pcur_pt -> y = ( double ) pcs -> cap . y	67:4:2170:2201	8066965	1	True				
ANR	8066981	AssignmentExpression	pcur_pt -> y = ( double ) pcs -> cap . y		8066965	0		=			
ANR	8066982	PtrMemberAccess	pcur_pt -> y		8066965	0					
ANR	8066983	Identifier	pcur_pt		8066965	0					
ANR	8066984	Identifier	y		8066965	1					
ANR	8066985	CastExpression	( double ) pcs -> cap . y		8066965	1					
ANR	8066986	CastTarget	double		8066965	0					
ANR	8066987	MemberAccess	pcs -> cap . y		8066965	1					
ANR	8066988	PtrMemberAccess	pcs -> cap		8066965	0					
ANR	8066989	Identifier	pcs		8066965	0					
ANR	8066990	Identifier	cap		8066965	1					
ANR	8066991	Identifier	y		8066965	1					
ANR	8066992	ExpressionStatement	"gs_point_transform ( pcur_pt -> x , pcur_pt -> y , & ( pcs -> xfm_state . pd2lp_mtx ) , pcur_pt )"	68:4:2207:2310	8066965	2	True				
ANR	8066993	CallExpression	"gs_point_transform ( pcur_pt -> x , pcur_pt -> y , & ( pcs -> xfm_state . pd2lp_mtx ) , pcur_pt )"		8066965	0					
ANR	8066994	Callee	gs_point_transform		8066965	0					
ANR	8066995	Identifier	gs_point_transform		8066965	0					
ANR	8066996	ArgumentList	pcur_pt -> x		8066965	1					
ANR	8066997	Argument	pcur_pt -> x		8066965	0					
ANR	8066998	PtrMemberAccess	pcur_pt -> x		8066965	0					
ANR	8066999	Identifier	pcur_pt		8066965	0					
ANR	8067000	Identifier	x		8066965	1					
ANR	8067001	Argument	pcur_pt -> y		8066965	1					
ANR	8067002	PtrMemberAccess	pcur_pt -> y		8066965	0					
ANR	8067003	Identifier	pcur_pt		8066965	0					
ANR	8067004	Identifier	y		8066965	1					
ANR	8067005	Argument	& ( pcs -> xfm_state . pd2lp_mtx )		8066965	2					
ANR	8067006	UnaryOperationExpression	& ( pcs -> xfm_state . pd2lp_mtx )		8066965	0					
ANR	8067007	UnaryOperator	&		8066965	0					
ANR	8067008	MemberAccess	pcs -> xfm_state . pd2lp_mtx		8066965	1					
ANR	8067009	PtrMemberAccess	pcs -> xfm_state		8066965	0					
ANR	8067010	Identifier	pcs		8066965	0					
ANR	8067011	Identifier	xfm_state		8066965	1					
ANR	8067012	Identifier	pd2lp_mtx		8066965	1					
ANR	8067013	Argument	pcur_pt		8066965	3					
ANR	8067014	Identifier	pcur_pt		8066965	0					
ANR	8067015	ExpressionStatement	ptext_rect -> p . x = ( double ) pcs -> margins . left	70:4:2316:2359	8066965	3	True				
ANR	8067016	AssignmentExpression	ptext_rect -> p . x = ( double ) pcs -> margins . left		8066965	0		=			
ANR	8067017	MemberAccess	ptext_rect -> p . x		8066965	0					
ANR	8067018	PtrMemberAccess	ptext_rect -> p		8066965	0					
ANR	8067019	Identifier	ptext_rect		8066965	0					
ANR	8067020	Identifier	p		8066965	1					
ANR	8067021	Identifier	x		8066965	1					
ANR	8067022	CastExpression	( double ) pcs -> margins . left		8066965	1					
ANR	8067023	CastTarget	double		8066965	0					
ANR	8067024	MemberAccess	pcs -> margins . left		8066965	1					
ANR	8067025	PtrMemberAccess	pcs -> margins		8066965	0					
ANR	8067026	Identifier	pcs		8066965	0					
ANR	8067027	Identifier	margins		8066965	1					
ANR	8067028	Identifier	left		8066965	1					
ANR	8067029	ExpressionStatement	ptext_rect -> p . y = ( double ) pcs -> margins . top	71:4:2365:2407	8066965	4	True				
ANR	8067030	AssignmentExpression	ptext_rect -> p . y = ( double ) pcs -> margins . top		8066965	0		=			
ANR	8067031	MemberAccess	ptext_rect -> p . y		8066965	0					
ANR	8067032	PtrMemberAccess	ptext_rect -> p		8066965	0					
ANR	8067033	Identifier	ptext_rect		8066965	0					
ANR	8067034	Identifier	p		8066965	1					
ANR	8067035	Identifier	y		8066965	1					
ANR	8067036	CastExpression	( double ) pcs -> margins . top		8066965	1					
ANR	8067037	CastTarget	double		8066965	0					
ANR	8067038	MemberAccess	pcs -> margins . top		8066965	1					
ANR	8067039	PtrMemberAccess	pcs -> margins		8066965	0					
ANR	8067040	Identifier	pcs		8066965	0					
ANR	8067041	Identifier	margins		8066965	1					
ANR	8067042	Identifier	top		8066965	1					
ANR	8067043	ExpressionStatement	ptext_rect -> q . x = ( double ) pcs -> margins . right	72:4:2413:2457	8066965	5	True				
ANR	8067044	AssignmentExpression	ptext_rect -> q . x = ( double ) pcs -> margins . right		8066965	0		=			
ANR	8067045	MemberAccess	ptext_rect -> q . x		8066965	0					
ANR	8067046	PtrMemberAccess	ptext_rect -> q		8066965	0					
ANR	8067047	Identifier	ptext_rect		8066965	0					
ANR	8067048	Identifier	q		8066965	1					
ANR	8067049	Identifier	x		8066965	1					
ANR	8067050	CastExpression	( double ) pcs -> margins . right		8066965	1					
ANR	8067051	CastTarget	double		8066965	0					
ANR	8067052	MemberAccess	pcs -> margins . right		8066965	1					
ANR	8067053	PtrMemberAccess	pcs -> margins		8066965	0					
ANR	8067054	Identifier	pcs		8066965	0					
ANR	8067055	Identifier	margins		8066965	1					
ANR	8067056	Identifier	right		8066965	1					
ANR	8067057	ExpressionStatement	ptext_rect -> q . y = ( double ) ( pcs -> margins . top + pcs -> margins . length )	73:4:2463:2529	8066965	6	True				
ANR	8067058	AssignmentExpression	ptext_rect -> q . y = ( double ) ( pcs -> margins . top + pcs -> margins . length )		8066965	0		=			
ANR	8067059	MemberAccess	ptext_rect -> q . y		8066965	0					
ANR	8067060	PtrMemberAccess	ptext_rect -> q		8066965	0					
ANR	8067061	Identifier	ptext_rect		8066965	0					
ANR	8067062	Identifier	q		8066965	1					
ANR	8067063	Identifier	y		8066965	1					
ANR	8067064	CastExpression	( double ) ( pcs -> margins . top + pcs -> margins . length )		8066965	1					
ANR	8067065	CastTarget	double		8066965	0					
ANR	8067066	AdditiveExpression	pcs -> margins . top + pcs -> margins . length		8066965	1		+			
ANR	8067067	MemberAccess	pcs -> margins . top		8066965	0					
ANR	8067068	PtrMemberAccess	pcs -> margins		8066965	0					
ANR	8067069	Identifier	pcs		8066965	0					
ANR	8067070	Identifier	margins		8066965	1					
ANR	8067071	Identifier	top		8066965	1					
ANR	8067072	MemberAccess	pcs -> margins . length		8066965	1					
ANR	8067073	PtrMemberAccess	pcs -> margins		8066965	0					
ANR	8067074	Identifier	pcs		8066965	0					
ANR	8067075	Identifier	margins		8066965	1					
ANR	8067076	Identifier	length		8066965	1					
ANR	8067077	ExpressionStatement	"pcl_transform_rect ( ptext_rect , ptext_rect , & ( pcs -> xfm_state . pd2lp_mtx ) )"	74:4:2535:2606	8066965	7	True				
ANR	8067078	CallExpression	"pcl_transform_rect ( ptext_rect , ptext_rect , & ( pcs -> xfm_state . pd2lp_mtx ) )"		8066965	0					
ANR	8067079	Callee	pcl_transform_rect		8066965	0					
ANR	8067080	Identifier	pcl_transform_rect		8066965	0					
ANR	8067081	ArgumentList	ptext_rect		8066965	1					
ANR	8067082	Argument	ptext_rect		8066965	0					
ANR	8067083	Identifier	ptext_rect		8066965	0					
ANR	8067084	Argument	ptext_rect		8066965	1					
ANR	8067085	Identifier	ptext_rect		8066965	0					
ANR	8067086	Argument	& ( pcs -> xfm_state . pd2lp_mtx )		8066965	2					
ANR	8067087	UnaryOperationExpression	& ( pcs -> xfm_state . pd2lp_mtx )		8066965	0					
ANR	8067088	UnaryOperator	&		8066965	0					
ANR	8067089	MemberAccess	pcs -> xfm_state . pd2lp_mtx		8066965	1					
ANR	8067090	PtrMemberAccess	pcs -> xfm_state		8066965	0					
ANR	8067091	Identifier	pcs		8066965	0					
ANR	8067092	Identifier	xfm_state		8066965	1					
ANR	8067093	Identifier	pd2lp_mtx		8066965	1					
ANR	8067094	ReturnType	static void		8066965	1					
ANR	8067095	Identifier	preserve_cap_and_margins		8066965	2					
ANR	8067096	ParameterList	"const pcl_state_t * pcs , gs_point * pcur_pt , gs_rect * ptext_rect"		8066965	3					
ANR	8067097	Parameter	const pcl_state_t * pcs	63:25:2035:2057	8066965	0	True				
ANR	8067098	ParameterType	const pcl_state_t *		8066965	0					
ANR	8067099	Identifier	pcs		8066965	1					
ANR	8067100	Parameter	gs_point * pcur_pt	64:25:2085:2102	8066965	1	True				
ANR	8067101	ParameterType	gs_point *		8066965	0					
ANR	8067102	Identifier	pcur_pt		8066965	1					
ANR	8067103	Parameter	gs_rect * ptext_rect	64:45:2105:2124	8066965	2	True				
ANR	8067104	ParameterType	gs_rect *		8066965	0					
ANR	8067105	Identifier	ptext_rect		8066965	1					
ANR	8067106	CFGEntryNode	ENTRY		8066965		True				
ANR	8067107	CFGExitNode	EXIT		8066965		True				
ANR	8067108	Symbol	pcs -> margins . left		8066965						
ANR	8067109	Symbol	pcs -> margins . right		8066965						
ANR	8067110	Symbol	pcs -> cap . x		8066965						
ANR	8067111	Symbol	* pcs		8066965						
ANR	8067112	Symbol	& pcs -> xfm_state		8066965						
ANR	8067113	Symbol	pcs -> cap . y		8066965						
ANR	8067114	Symbol	ptext_rect		8066965						
ANR	8067115	Symbol	pcs -> xfm_state		8066965						
ANR	8067116	Symbol	& pcs -> xfm_state . pd2lp_mtx		8066965						
ANR	8067117	Symbol	pcur_pt		8066965						
ANR	8067118	Symbol	pcs		8066965						
ANR	8067119	Symbol	ptext_rect -> p		8066965						
ANR	8067120	Symbol	ptext_rect -> p . x		8066965						
ANR	8067121	Symbol	ptext_rect -> q		8066965						
ANR	8067122	Symbol	ptext_rect -> p . y		8066965						
ANR	8067123	Symbol	pcs -> cap		8066965						
ANR	8067124	Symbol	pcs -> margins		8066965						
ANR	8067125	Symbol	pcur_pt -> y		8066965						
ANR	8067126	Symbol	pcs -> margins . length		8066965						
ANR	8067127	Symbol	ptext_rect -> q . y		8066965						
ANR	8067128	Symbol	pcur_pt -> x		8066965						
ANR	8067129	Symbol	ptext_rect -> q . x		8066965						
ANR	8067130	Symbol	* pcur_pt		8066965						
ANR	8067131	Symbol	pcs -> margins . top		8066965						
ANR	8067132	Symbol	* ptext_rect		8066965						
ANR	8067133	Function	restore_cap_and_margins	81:0:2712:3364							
ANR	8067134	FunctionDef	"restore_cap_and_margins (pcl_state_t * pcs , const gs_point * pcur_pt , const gs_rect * ptext_rect)"		8067133	0					
ANR	8067135	CompoundStatement		84:0:2845:3364	8067133	0					
ANR	8067136	IdentifierDeclStatement	gs_matrix lp2pd ;	85:4:2851:2866	8067133	0	True				
ANR	8067137	IdentifierDecl	lp2pd		8067133	0					
ANR	8067138	IdentifierDeclType	gs_matrix		8067133	0					
ANR	8067139	Identifier	lp2pd		8067133	1					
ANR	8067140	IdentifierDeclStatement	gs_point tmp_pt ;	86:4:2872:2887	8067133	1	True				
ANR	8067141	IdentifierDecl	tmp_pt		8067133	0					
ANR	8067142	IdentifierDeclType	gs_point		8067133	0					
ANR	8067143	Identifier	tmp_pt		8067133	1					
ANR	8067144	IdentifierDeclStatement	gs_rect tmp_rect ;	87:4:2893:2909	8067133	2	True				
ANR	8067145	IdentifierDecl	tmp_rect		8067133	0					
ANR	8067146	IdentifierDeclType	gs_rect		8067133	0					
ANR	8067147	Identifier	tmp_rect		8067133	1					
ANR	8067148	ExpressionStatement	"pcl_invert_mtx ( & ( pcs -> xfm_state . pd2lp_mtx ) , & lp2pd )"	89:4:2916:2967	8067133	3	True				
ANR	8067149	CallExpression	"pcl_invert_mtx ( & ( pcs -> xfm_state . pd2lp_mtx ) , & lp2pd )"		8067133	0					
ANR	8067150	Callee	pcl_invert_mtx		8067133	0					
ANR	8067151	Identifier	pcl_invert_mtx		8067133	0					
ANR	8067152	ArgumentList	& ( pcs -> xfm_state . pd2lp_mtx )		8067133	1					
ANR	8067153	Argument	& ( pcs -> xfm_state . pd2lp_mtx )		8067133	0					
ANR	8067154	UnaryOperationExpression	& ( pcs -> xfm_state . pd2lp_mtx )		8067133	0					
ANR	8067155	UnaryOperator	&		8067133	0					
ANR	8067156	MemberAccess	pcs -> xfm_state . pd2lp_mtx		8067133	1					
ANR	8067157	PtrMemberAccess	pcs -> xfm_state		8067133	0					
ANR	8067158	Identifier	pcs		8067133	0					
ANR	8067159	Identifier	xfm_state		8067133	1					
ANR	8067160	Identifier	pd2lp_mtx		8067133	1					
ANR	8067161	Argument	& lp2pd		8067133	1					
ANR	8067162	UnaryOperationExpression	& lp2pd		8067133	0					
ANR	8067163	UnaryOperator	&		8067133	0					
ANR	8067164	Identifier	lp2pd		8067133	1					
ANR	8067165	ExpressionStatement	"gs_point_transform ( pcur_pt -> x , pcur_pt -> y , & lp2pd , & tmp_pt )"	90:4:2973:3032	8067133	4	True				
ANR	8067166	CallExpression	"gs_point_transform ( pcur_pt -> x , pcur_pt -> y , & lp2pd , & tmp_pt )"		8067133	0					
ANR	8067167	Callee	gs_point_transform		8067133	0					
ANR	8067168	Identifier	gs_point_transform		8067133	0					
ANR	8067169	ArgumentList	pcur_pt -> x		8067133	1					
ANR	8067170	Argument	pcur_pt -> x		8067133	0					
ANR	8067171	PtrMemberAccess	pcur_pt -> x		8067133	0					
ANR	8067172	Identifier	pcur_pt		8067133	0					
ANR	8067173	Identifier	x		8067133	1					
ANR	8067174	Argument	pcur_pt -> y		8067133	1					
ANR	8067175	PtrMemberAccess	pcur_pt -> y		8067133	0					
ANR	8067176	Identifier	pcur_pt		8067133	0					
ANR	8067177	Identifier	y		8067133	1					
ANR	8067178	Argument	& lp2pd		8067133	2					
ANR	8067179	UnaryOperationExpression	& lp2pd		8067133	0					
ANR	8067180	UnaryOperator	&		8067133	0					
ANR	8067181	Identifier	lp2pd		8067133	1					
ANR	8067182	Argument	& tmp_pt		8067133	3					
ANR	8067183	UnaryOperationExpression	& tmp_pt		8067133	0					
ANR	8067184	UnaryOperator	&		8067133	0					
ANR	8067185	Identifier	tmp_pt		8067133	1					
ANR	8067186	ExpressionStatement	pcs -> cap . x = ( coord ) tmp_pt . x	91:4:3038:3067	8067133	5	True				
ANR	8067187	AssignmentExpression	pcs -> cap . x = ( coord ) tmp_pt . x		8067133	0		=			
ANR	8067188	MemberAccess	pcs -> cap . x		8067133	0					
ANR	8067189	PtrMemberAccess	pcs -> cap		8067133	0					
ANR	8067190	Identifier	pcs		8067133	0					
ANR	8067191	Identifier	cap		8067133	1					
ANR	8067192	Identifier	x		8067133	1					
ANR	8067193	CastExpression	( coord ) tmp_pt . x		8067133	1					
ANR	8067194	CastTarget	coord		8067133	0					
ANR	8067195	MemberAccess	tmp_pt . x		8067133	1					
ANR	8067196	Identifier	tmp_pt		8067133	0					
ANR	8067197	Identifier	x		8067133	1					
ANR	8067198	ExpressionStatement	pcs -> cap . y = ( coord ) tmp_pt . y	92:4:3073:3102	8067133	6	True				
ANR	8067199	AssignmentExpression	pcs -> cap . y = ( coord ) tmp_pt . y		8067133	0		=			
ANR	8067200	MemberAccess	pcs -> cap . y		8067133	0					
ANR	8067201	PtrMemberAccess	pcs -> cap		8067133	0					
ANR	8067202	Identifier	pcs		8067133	0					
ANR	8067203	Identifier	cap		8067133	1					
ANR	8067204	Identifier	y		8067133	1					
ANR	8067205	CastExpression	( coord ) tmp_pt . y		8067133	1					
ANR	8067206	CastTarget	coord		8067133	0					
ANR	8067207	MemberAccess	tmp_pt . y		8067133	1					
ANR	8067208	Identifier	tmp_pt		8067133	0					
ANR	8067209	Identifier	y		8067133	1					
ANR	8067210	ExpressionStatement	"pcl_transform_rect ( ptext_rect , & tmp_rect , & lp2pd )"	93:4:3108:3157	8067133	7	True				
ANR	8067211	CallExpression	"pcl_transform_rect ( ptext_rect , & tmp_rect , & lp2pd )"		8067133	0					
ANR	8067212	Callee	pcl_transform_rect		8067133	0					
ANR	8067213	Identifier	pcl_transform_rect		8067133	0					
ANR	8067214	ArgumentList	ptext_rect		8067133	1					
ANR	8067215	Argument	ptext_rect		8067133	0					
ANR	8067216	Identifier	ptext_rect		8067133	0					
ANR	8067217	Argument	& tmp_rect		8067133	1					
ANR	8067218	UnaryOperationExpression	& tmp_rect		8067133	0					
ANR	8067219	UnaryOperator	&		8067133	0					
ANR	8067220	Identifier	tmp_rect		8067133	1					
ANR	8067221	Argument	& lp2pd		8067133	2					
ANR	8067222	UnaryOperationExpression	& lp2pd		8067133	0					
ANR	8067223	UnaryOperator	&		8067133	0					
ANR	8067224	Identifier	lp2pd		8067133	1					
ANR	8067225	ExpressionStatement	pcs -> margins . left = ( coord ) tmp_rect . p . x	94:4:3163:3203	8067133	8	True				
ANR	8067226	AssignmentExpression	pcs -> margins . left = ( coord ) tmp_rect . p . x		8067133	0		=			
ANR	8067227	MemberAccess	pcs -> margins . left		8067133	0					
ANR	8067228	PtrMemberAccess	pcs -> margins		8067133	0					
ANR	8067229	Identifier	pcs		8067133	0					
ANR	8067230	Identifier	margins		8067133	1					
ANR	8067231	Identifier	left		8067133	1					
ANR	8067232	CastExpression	( coord ) tmp_rect . p . x		8067133	1					
ANR	8067233	CastTarget	coord		8067133	0					
ANR	8067234	MemberAccess	tmp_rect . p . x		8067133	1					
ANR	8067235	MemberAccess	tmp_rect . p		8067133	0					
ANR	8067236	Identifier	tmp_rect		8067133	0					
ANR	8067237	Identifier	p		8067133	1					
ANR	8067238	Identifier	x		8067133	1					
ANR	8067239	ExpressionStatement	pcs -> margins . top = ( coord ) tmp_rect . p . y	95:4:3209:3248	8067133	9	True				
ANR	8067240	AssignmentExpression	pcs -> margins . top = ( coord ) tmp_rect . p . y		8067133	0		=			
ANR	8067241	MemberAccess	pcs -> margins . top		8067133	0					
ANR	8067242	PtrMemberAccess	pcs -> margins		8067133	0					
ANR	8067243	Identifier	pcs		8067133	0					
ANR	8067244	Identifier	margins		8067133	1					
ANR	8067245	Identifier	top		8067133	1					
ANR	8067246	CastExpression	( coord ) tmp_rect . p . y		8067133	1					
ANR	8067247	CastTarget	coord		8067133	0					
ANR	8067248	MemberAccess	tmp_rect . p . y		8067133	1					
ANR	8067249	MemberAccess	tmp_rect . p		8067133	0					
ANR	8067250	Identifier	tmp_rect		8067133	0					
ANR	8067251	Identifier	p		8067133	1					
ANR	8067252	Identifier	y		8067133	1					
ANR	8067253	ExpressionStatement	pcs -> margins . right = ( coord ) tmp_rect . q . x	96:4:3254:3295	8067133	10	True				
ANR	8067254	AssignmentExpression	pcs -> margins . right = ( coord ) tmp_rect . q . x		8067133	0		=			
ANR	8067255	MemberAccess	pcs -> margins . right		8067133	0					
ANR	8067256	PtrMemberAccess	pcs -> margins		8067133	0					
ANR	8067257	Identifier	pcs		8067133	0					
ANR	8067258	Identifier	margins		8067133	1					
ANR	8067259	Identifier	right		8067133	1					
ANR	8067260	CastExpression	( coord ) tmp_rect . q . x		8067133	1					
ANR	8067261	CastTarget	coord		8067133	0					
ANR	8067262	MemberAccess	tmp_rect . q . x		8067133	1					
ANR	8067263	MemberAccess	tmp_rect . q		8067133	0					
ANR	8067264	Identifier	tmp_rect		8067133	0					
ANR	8067265	Identifier	q		8067133	1					
ANR	8067266	Identifier	x		8067133	1					
ANR	8067267	ExpressionStatement	pcs -> margins . length = ( coord ) tmp_rect . q . y - pcs -> margins . top	97:4:3301:3362	8067133	11	True				
ANR	8067268	AssignmentExpression	pcs -> margins . length = ( coord ) tmp_rect . q . y - pcs -> margins . top		8067133	0		=			
ANR	8067269	MemberAccess	pcs -> margins . length		8067133	0					
ANR	8067270	PtrMemberAccess	pcs -> margins		8067133	0					
ANR	8067271	Identifier	pcs		8067133	0					
ANR	8067272	Identifier	margins		8067133	1					
ANR	8067273	Identifier	length		8067133	1					
ANR	8067274	AdditiveExpression	( coord ) tmp_rect . q . y - pcs -> margins . top		8067133	1		-			
ANR	8067275	CastExpression	( coord ) tmp_rect . q . y		8067133	0					
ANR	8067276	CastTarget	coord		8067133	0					
ANR	8067277	MemberAccess	tmp_rect . q . y		8067133	1					
ANR	8067278	MemberAccess	tmp_rect . q		8067133	0					
ANR	8067279	Identifier	tmp_rect		8067133	0					
ANR	8067280	Identifier	q		8067133	1					
ANR	8067281	Identifier	y		8067133	1					
ANR	8067282	MemberAccess	pcs -> margins . top		8067133	1					
ANR	8067283	PtrMemberAccess	pcs -> margins		8067133	0					
ANR	8067284	Identifier	pcs		8067133	0					
ANR	8067285	Identifier	margins		8067133	1					
ANR	8067286	Identifier	top		8067133	1					
ANR	8067287	ReturnType	static void		8067133	1					
ANR	8067288	Identifier	restore_cap_and_margins		8067133	2					
ANR	8067289	ParameterList	"pcl_state_t * pcs , const gs_point * pcur_pt , const gs_rect * ptext_rect"		8067133	3					
ANR	8067290	Parameter	pcl_state_t * pcs	82:24:2748:2764	8067133	0	True				
ANR	8067291	ParameterType	pcl_state_t *		8067133	0					
ANR	8067292	Identifier	pcs		8067133	1					
ANR	8067293	Parameter	const gs_point * pcur_pt	83:24:2791:2814	8067133	1	True				
ANR	8067294	ParameterType	const gs_point *		8067133	0					
ANR	8067295	Identifier	pcur_pt		8067133	1					
ANR	8067296	Parameter	const gs_rect * ptext_rect	83:50:2817:2842	8067133	2	True				
ANR	8067297	ParameterType	const gs_rect *		8067133	0					
ANR	8067298	Identifier	ptext_rect		8067133	1					
ANR	8067299	CFGEntryNode	ENTRY		8067133		True				
ANR	8067300	CFGExitNode	EXIT		8067133		True				
ANR	8067301	Symbol	tmp_rect . q . y		8067133						
ANR	8067302	Symbol	pcs -> margins . left		8067133						
ANR	8067303	Symbol	tmp_rect . q . x		8067133						
ANR	8067304	Symbol	& lp2pd		8067133						
ANR	8067305	Symbol	pcs -> margins . right		8067133						
ANR	8067306	Symbol	lp2pd		8067133						
ANR	8067307	Symbol	pcs -> cap . x		8067133						
ANR	8067308	Symbol	tmp_rect . p		8067133						
ANR	8067309	Symbol	tmp_rect . q		8067133						
ANR	8067310	Symbol	tmp_pt		8067133						
ANR	8067311	Symbol	& pcs -> xfm_state		8067133						
ANR	8067312	Symbol	* pcs		8067133						
ANR	8067313	Symbol	pcs -> cap . y		8067133						
ANR	8067314	Symbol	ptext_rect		8067133						
ANR	8067315	Symbol	pcs -> xfm_state		8067133						
ANR	8067316	Symbol	tmp_rect		8067133						
ANR	8067317	Symbol	tmp_rect . p . x		8067133						
ANR	8067318	Symbol	& tmp_rect		8067133						
ANR	8067319	Symbol	tmp_rect . p . y		8067133						
ANR	8067320	Symbol	& pcs -> xfm_state . pd2lp_mtx		8067133						
ANR	8067321	Symbol	pcur_pt		8067133						
ANR	8067322	Symbol	pcs		8067133						
ANR	8067323	Symbol	pcs -> cap		8067133						
ANR	8067324	Symbol	pcs -> margins		8067133						
ANR	8067325	Symbol	pcur_pt -> y		8067133						
ANR	8067326	Symbol	pcs -> margins . length		8067133						
ANR	8067327	Symbol	pcur_pt -> x		8067133						
ANR	8067328	Symbol	* pcur_pt		8067133						
ANR	8067329	Symbol	& tmp_pt		8067133						
ANR	8067330	Symbol	tmp_pt . x		8067133						
ANR	8067331	Symbol	tmp_pt . y		8067133						
ANR	8067332	Symbol	pcs -> margins . top		8067133						
ANR	8067333	Function	update_xfm_state	117:0:4023:10138							
ANR	8067334	FunctionDef	"update_xfm_state (pcl_state_t * pcs , bool reset_initial)"		8067333	0					
ANR	8067335	CompoundStatement		119:0:4091:10138	8067333	0					
ANR	8067336	IdentifierDeclStatement	pcl_xfm_state_t * pxfmst = & ( pcs -> xfm_state ) ;	120:4:4097:4140	8067333	0	True				
ANR	8067337	IdentifierDecl	* pxfmst = & ( pcs -> xfm_state )		8067333	0					
ANR	8067338	IdentifierDeclType	pcl_xfm_state_t *		8067333	0					
ANR	8067339	Identifier	pxfmst		8067333	1					
ANR	8067340	AssignmentExpression	* pxfmst = & ( pcs -> xfm_state )		8067333	2		=			
ANR	8067341	Identifier	pxfmst		8067333	0					
ANR	8067342	UnaryOperationExpression	& ( pcs -> xfm_state )		8067333	1					
ANR	8067343	UnaryOperator	&		8067333	0					
ANR	8067344	PtrMemberAccess	pcs -> xfm_state		8067333	1					
ANR	8067345	Identifier	pcs		8067333	0					
ANR	8067346	Identifier	xfm_state		8067333	1					
ANR	8067347	IdentifierDeclStatement	const pcl_paper_size_t * psize = pxfmst -> paper_size ;	121:4:4146:4196	8067333	1	True				
ANR	8067348	IdentifierDecl	* psize = pxfmst -> paper_size		8067333	0					
ANR	8067349	IdentifierDeclType	const pcl_paper_size_t *		8067333	0					
ANR	8067350	Identifier	psize		8067333	1					
ANR	8067351	AssignmentExpression	* psize = pxfmst -> paper_size		8067333	2		=			
ANR	8067352	Identifier	psize		8067333	0					
ANR	8067353	PtrMemberAccess	pxfmst -> paper_size		8067333	1					
ANR	8067354	Identifier	pxfmst		8067333	0					
ANR	8067355	Identifier	paper_size		8067333	1					
ANR	8067356	IdentifierDeclStatement	coord offset ;	122:4:4202:4214	8067333	2	True				
ANR	8067357	IdentifierDecl	offset		8067333	0					
ANR	8067358	IdentifierDeclType	coord		8067333	0					
ANR	8067359	Identifier	offset		8067333	1					
ANR	8067360	IdentifierDeclStatement	"gs_matrix pg2dev , pg2lp ;"	123:4:4220:4243	8067333	3	True				
ANR	8067361	IdentifierDecl	pg2dev		8067333	0					
ANR	8067362	IdentifierDeclType	gs_matrix		8067333	0					
ANR	8067363	Identifier	pg2dev		8067333	1					
ANR	8067364	IdentifierDecl	pg2lp		8067333	1					
ANR	8067365	IdentifierDeclType	gs_matrix		8067333	0					
ANR	8067366	Identifier	pg2lp		8067333	1					
ANR	8067367	IdentifierDeclStatement	"gs_rect print_rect , dev_rect , text_rect ;"	124:4:4249:4288	8067333	4	True				
ANR	8067368	IdentifierDecl	print_rect		8067333	0					
ANR	8067369	IdentifierDeclType	gs_rect		8067333	0					
ANR	8067370	Identifier	print_rect		8067333	1					
ANR	8067371	IdentifierDecl	dev_rect		8067333	1					
ANR	8067372	IdentifierDeclType	gs_rect		8067333	0					
ANR	8067373	Identifier	dev_rect		8067333	1					
ANR	8067374	IdentifierDecl	text_rect		8067333	2					
ANR	8067375	IdentifierDeclType	gs_rect		8067333	0					
ANR	8067376	Identifier	text_rect		8067333	1					
ANR	8067377	IdentifierDeclStatement	gs_point cur_pt ;	125:4:4294:4309	8067333	5	True				
ANR	8067378	IdentifierDecl	cur_pt		8067333	0					
ANR	8067379	IdentifierDeclType	gs_point		8067333	0					
ANR	8067380	Identifier	cur_pt		8067333	1					
ANR	8067381	IdentifierDeclStatement	double loff = pxfmst -> left_offset_cp ;	126:4:4315:4351	8067333	6	True				
ANR	8067382	IdentifierDecl	loff = pxfmst -> left_offset_cp		8067333	0					
ANR	8067383	IdentifierDeclType	double		8067333	0					
ANR	8067384	Identifier	loff		8067333	1					
ANR	8067385	AssignmentExpression	loff = pxfmst -> left_offset_cp		8067333	2		=			
ANR	8067386	Identifier	loff		8067333	0					
ANR	8067387	PtrMemberAccess	pxfmst -> left_offset_cp		8067333	1					
ANR	8067388	Identifier	pxfmst		8067333	0					
ANR	8067389	Identifier	left_offset_cp		8067333	1					
ANR	8067390	IdentifierDeclStatement	double toff = pxfmst -> top_offset_cp ;	127:4:4357:4392	8067333	7	True				
ANR	8067391	IdentifierDecl	toff = pxfmst -> top_offset_cp		8067333	0					
ANR	8067392	IdentifierDeclType	double		8067333	0					
ANR	8067393	Identifier	toff		8067333	1					
ANR	8067394	AssignmentExpression	toff = pxfmst -> top_offset_cp		8067333	2		=			
ANR	8067395	Identifier	toff		8067333	0					
ANR	8067396	PtrMemberAccess	pxfmst -> top_offset_cp		8067333	1					
ANR	8067397	Identifier	pxfmst		8067333	0					
ANR	8067398	Identifier	top_offset_cp		8067333	1					
ANR	8067399	IfStatement	if ( ! reset_initial )		8067333	8					
ANR	8067400	Condition	! reset_initial	130:8:4481:4494	8067333	0	True				
ANR	8067401	UnaryOperationExpression	! reset_initial		8067333	0					
ANR	8067402	UnaryOperator	!		8067333	0					
ANR	8067403	Identifier	reset_initial		8067333	1					
ANR	8067404	ExpressionStatement	"preserve_cap_and_margins ( pcs , & cur_pt , & text_rect )"	131:8:4505:4555	8067333	1	True				
ANR	8067405	CallExpression	"preserve_cap_and_margins ( pcs , & cur_pt , & text_rect )"		8067333	0					
ANR	8067406	Callee	preserve_cap_and_margins		8067333	0					
ANR	8067407	Identifier	preserve_cap_and_margins		8067333	0					
ANR	8067408	ArgumentList	pcs		8067333	1					
ANR	8067409	Argument	pcs		8067333	0					
ANR	8067410	Identifier	pcs		8067333	0					
ANR	8067411	Argument	& cur_pt		8067333	1					
ANR	8067412	UnaryOperationExpression	& cur_pt		8067333	0					
ANR	8067413	UnaryOperator	&		8067333	0					
ANR	8067414	Identifier	cur_pt		8067333	1					
ANR	8067415	Argument	& text_rect		8067333	2					
ANR	8067416	UnaryOperationExpression	& text_rect		8067333	0					
ANR	8067417	UnaryOperator	&		8067333	0					
ANR	8067418	Identifier	text_rect		8067333	1					
ANR	8067419	ExpressionStatement	"gs_defaultmatrix ( pcs -> pgs , & pg2dev )"	134:4:4610:4645	8067333	9	True				
ANR	8067420	CallExpression	"gs_defaultmatrix ( pcs -> pgs , & pg2dev )"		8067333	0					
ANR	8067421	Callee	gs_defaultmatrix		8067333	0					
ANR	8067422	Identifier	gs_defaultmatrix		8067333	0					
ANR	8067423	ArgumentList	pcs -> pgs		8067333	1					
ANR	8067424	Argument	pcs -> pgs		8067333	0					
ANR	8067425	PtrMemberAccess	pcs -> pgs		8067333	0					
ANR	8067426	Identifier	pcs		8067333	0					
ANR	8067427	Identifier	pgs		8067333	1					
ANR	8067428	Argument	& pg2dev		8067333	1					
ANR	8067429	UnaryOperationExpression	& pg2dev		8067333	0					
ANR	8067430	UnaryOperator	&		8067333	0					
ANR	8067431	Identifier	pg2dev		8067333	1					
ANR	8067432	CompoundStatement		30:8:866:910	8067333	10					
ANR	8067433	IdentifierDeclStatement	gx_device * pdev = gs_currentdevice ( pcs -> pgs ) ;	148:8:4958:5002	8067333	0	True				
ANR	8067434	IdentifierDecl	* pdev = gs_currentdevice ( pcs -> pgs )		8067333	0					
ANR	8067435	IdentifierDeclType	gx_device *		8067333	0					
ANR	8067436	Identifier	pdev		8067333	1					
ANR	8067437	AssignmentExpression	* pdev = gs_currentdevice ( pcs -> pgs )		8067333	2		=			
ANR	8067438	Identifier	pdev		8067333	0					
ANR	8067439	CallExpression	gs_currentdevice ( pcs -> pgs )		8067333	1					
ANR	8067440	Callee	gs_currentdevice		8067333	0					
ANR	8067441	Identifier	gs_currentdevice		8067333	0					
ANR	8067442	ArgumentList	pcs -> pgs		8067333	1					
ANR	8067443	Argument	pcs -> pgs		8067333	0					
ANR	8067444	PtrMemberAccess	pcs -> pgs		8067333	0					
ANR	8067445	Identifier	pcs		8067333	0					
ANR	8067446	Identifier	pgs		8067333	1					
ANR	8067447	IfStatement	if ( ( pdev -> LeadingEdge & 1 ) == 1 )		8067333	1					
ANR	8067448	Condition	( pdev -> LeadingEdge & 1 ) == 1	154:12:5248:5275	8067333	0	True				
ANR	8067449	EqualityExpression	( pdev -> LeadingEdge & 1 ) == 1		8067333	0		==			
ANR	8067450	BitAndExpression	pdev -> LeadingEdge & 1		8067333	0		&			
ANR	8067451	PtrMemberAccess	pdev -> LeadingEdge		8067333	0					
ANR	8067452	Identifier	pdev		8067333	0					
ANR	8067453	Identifier	LeadingEdge		8067333	1					
ANR	8067454	PrimaryExpression	1		8067333	1					
ANR	8067455	PrimaryExpression	1		8067333	1					
ANR	8067456	CompoundStatement		36:42:1186:1186	8067333	1					
ANR	8067457	IfStatement	if ( pcs -> back_side )		8067333	0					
ANR	8067458	Condition	pcs -> back_side	155:16:5316:5329	8067333	0	True				
ANR	8067459	PtrMemberAccess	pcs -> back_side		8067333	0					
ANR	8067460	Identifier	pcs		8067333	0					
ANR	8067461	Identifier	back_side		8067333	1					
ANR	8067462	CompoundStatement		37:32:1240:1240	8067333	1					
ANR	8067463	IfStatement	if ( pcs -> bind_short_edge )		8067333	0					
ANR	8067464	Condition	pcs -> bind_short_edge	156:20:5354:5373	8067333	0	True				
ANR	8067465	PtrMemberAccess	pcs -> bind_short_edge		8067333	0					
ANR	8067466	Identifier	pcs		8067333	0					
ANR	8067467	Identifier	bind_short_edge		8067333	1					
ANR	8067468	CompoundStatement		38:42:1284:1284	8067333	1					
ANR	8067469	ExpressionStatement	toff = - toff	157:20:5398:5410	8067333	0	True				
ANR	8067470	AssignmentExpression	toff = - toff		8067333	0		=			
ANR	8067471	Identifier	toff		8067333	0					
ANR	8067472	UnaryOperationExpression	- toff		8067333	1					
ANR	8067473	UnaryOperator	-		8067333	0					
ANR	8067474	Identifier	toff		8067333	1					
ANR	8067475	ElseStatement	else		8067333	0					
ANR	8067476	CompoundStatement		40:23:1343:1343	8067333	0					
ANR	8067477	ExpressionStatement	loff = - loff	159:20:5479:5491	8067333	0	True				
ANR	8067478	AssignmentExpression	loff = - loff		8067333	0		=			
ANR	8067479	Identifier	loff		8067333	0					
ANR	8067480	UnaryOperationExpression	- loff		8067333	1					
ANR	8067481	UnaryOperator	-		8067333	0					
ANR	8067482	Identifier	loff		8067333	1					
ANR	8067483	ElseStatement	else		8067333	0					
ANR	8067484	CompoundStatement		43:19:1438:1438	8067333	0					
ANR	8067485	ElseStatement	else		8067333	0					
ANR	8067486	CompoundStatement		47:15:1539:1539	8067333	0					
ANR	8067487	IfStatement	if ( pcs -> back_side )		8067333	0					
ANR	8067488	Condition	pcs -> back_side	166:16:5670:5683	8067333	0	True				
ANR	8067489	PtrMemberAccess	pcs -> back_side		8067333	0					
ANR	8067490	Identifier	pcs		8067333	0					
ANR	8067491	Identifier	back_side		8067333	1					
ANR	8067492	CompoundStatement		48:32:1594:1594	8067333	1					
ANR	8067493	IfStatement	if ( pcs -> bind_short_edge )		8067333	0					
ANR	8067494	Condition	pcs -> bind_short_edge	167:20:5708:5727	8067333	0	True				
ANR	8067495	PtrMemberAccess	pcs -> bind_short_edge		8067333	0					
ANR	8067496	Identifier	pcs		8067333	0					
ANR	8067497	Identifier	bind_short_edge		8067333	1					
ANR	8067498	CompoundStatement		49:42:1638:1638	8067333	1					
ANR	8067499	ExpressionStatement	toff = - toff	168:20:5752:5764	8067333	0	True				
ANR	8067500	AssignmentExpression	toff = - toff		8067333	0		=			
ANR	8067501	Identifier	toff		8067333	0					
ANR	8067502	UnaryOperationExpression	- toff		8067333	1					
ANR	8067503	UnaryOperator	-		8067333	0					
ANR	8067504	Identifier	toff		8067333	1					
ANR	8067505	ElseStatement	else		8067333	0					
ANR	8067506	CompoundStatement		51:23:1697:1697	8067333	0					
ANR	8067507	ExpressionStatement	loff = - loff	170:20:5833:5845	8067333	0	True				
ANR	8067508	AssignmentExpression	loff = - loff		8067333	0		=			
ANR	8067509	Identifier	loff		8067333	0					
ANR	8067510	UnaryOperationExpression	- loff		8067333	1					
ANR	8067511	UnaryOperator	-		8067333	0					
ANR	8067512	Identifier	loff		8067333	1					
ANR	8067513	ElseStatement	else		8067333	0					
ANR	8067514	CompoundStatement		54:19:1792:1792	8067333	0					
ANR	8067515	ExpressionStatement	"pcl_make_rotation ( pxfmst -> lp_orient , ( double ) ( psize -> width ) , ( double ) ( psize -> height ) , & ( pxfmst -> lp2pg_mtx ) )"	178:4:5954:6116	8067333	11	True				
ANR	8067516	CallExpression	"pcl_make_rotation ( pxfmst -> lp_orient , ( double ) ( psize -> width ) , ( double ) ( psize -> height ) , & ( pxfmst -> lp2pg_mtx ) )"		8067333	0					
ANR	8067517	Callee	pcl_make_rotation		8067333	0					
ANR	8067518	Identifier	pcl_make_rotation		8067333	0					
ANR	8067519	ArgumentList	pxfmst -> lp_orient		8067333	1					
ANR	8067520	Argument	pxfmst -> lp_orient		8067333	0					
ANR	8067521	PtrMemberAccess	pxfmst -> lp_orient		8067333	0					
ANR	8067522	Identifier	pxfmst		8067333	0					
ANR	8067523	Identifier	lp_orient		8067333	1					
ANR	8067524	Argument	( double ) ( psize -> width )		8067333	1					
ANR	8067525	CastExpression	( double ) ( psize -> width )		8067333	0					
ANR	8067526	CastTarget	double		8067333	0					
ANR	8067527	PtrMemberAccess	psize -> width		8067333	1					
ANR	8067528	Identifier	psize		8067333	0					
ANR	8067529	Identifier	width		8067333	1					
ANR	8067530	Argument	( double ) ( psize -> height )		8067333	2					
ANR	8067531	CastExpression	( double ) ( psize -> height )		8067333	0					
ANR	8067532	CastTarget	double		8067333	0					
ANR	8067533	PtrMemberAccess	psize -> height		8067333	1					
ANR	8067534	Identifier	psize		8067333	0					
ANR	8067535	Identifier	height		8067333	1					
ANR	8067536	Argument	& ( pxfmst -> lp2pg_mtx )		8067333	3					
ANR	8067537	UnaryOperationExpression	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8067538	UnaryOperator	&		8067333	0					
ANR	8067539	PtrMemberAccess	pxfmst -> lp2pg_mtx		8067333	1					
ANR	8067540	Identifier	pxfmst		8067333	0					
ANR	8067541	Identifier	lp2pg_mtx		8067333	1					
ANR	8067542	ExpressionStatement	pxfmst -> lp2pg_mtx . tx += loff	182:4:6122:6150	8067333	12	True				
ANR	8067543	AssignmentExpression	pxfmst -> lp2pg_mtx . tx += loff		8067333	0		+=			
ANR	8067544	MemberAccess	pxfmst -> lp2pg_mtx . tx		8067333	0					
ANR	8067545	PtrMemberAccess	pxfmst -> lp2pg_mtx		8067333	0					
ANR	8067546	Identifier	pxfmst		8067333	0					
ANR	8067547	Identifier	lp2pg_mtx		8067333	1					
ANR	8067548	Identifier	tx		8067333	1					
ANR	8067549	Identifier	loff		8067333	1					
ANR	8067550	ExpressionStatement	pxfmst -> lp2pg_mtx . ty += toff	183:4:6156:6184	8067333	13	True				
ANR	8067551	AssignmentExpression	pxfmst -> lp2pg_mtx . ty += toff		8067333	0		+=			
ANR	8067552	MemberAccess	pxfmst -> lp2pg_mtx . ty		8067333	0					
ANR	8067553	PtrMemberAccess	pxfmst -> lp2pg_mtx		8067333	0					
ANR	8067554	Identifier	pxfmst		8067333	0					
ANR	8067555	Identifier	lp2pg_mtx		8067333	1					
ANR	8067556	Identifier	ty		8067333	1					
ANR	8067557	Identifier	toff		8067333	1					
ANR	8067558	IfStatement	"if ( ( pcs -> personality == rtl ) || ( ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""edgetoedge"" ) , ""YES"" ) ) )"		8067333	14					
ANR	8067559	Condition	"( pcs -> personality == rtl ) || ( ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""edgetoedge"" ) , ""YES"" ) )"	188:8:6306:6452	8067333	0	True				
ANR	8067560	OrExpression	"( pcs -> personality == rtl ) || ( ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""edgetoedge"" ) , ""YES"" ) )"		8067333	0		||			
ANR	8067561	EqualityExpression	pcs -> personality == rtl		8067333	0		==			
ANR	8067562	PtrMemberAccess	pcs -> personality		8067333	0					
ANR	8067563	Identifier	pcs		8067333	0					
ANR	8067564	Identifier	personality		8067333	1					
ANR	8067565	Identifier	rtl		8067333	1					
ANR	8067566	UnaryOperationExpression	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""edgetoedge"" ) , ""YES"" )"		8067333	1					
ANR	8067567	UnaryOperator	!		8067333	0					
ANR	8067568	CallExpression	"pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""edgetoedge"" ) , ""YES"" )"		8067333	1					
ANR	8067569	Callee	pjl_proc_compare		8067333	0					
ANR	8067570	Identifier	pjl_proc_compare		8067333	0					
ANR	8067571	ArgumentList	pcs -> pjls		8067333	1					
ANR	8067572	Argument	pcs -> pjls		8067333	0					
ANR	8067573	PtrMemberAccess	pcs -> pjls		8067333	0					
ANR	8067574	Identifier	pcs		8067333	0					
ANR	8067575	Identifier	pjls		8067333	1					
ANR	8067576	Argument	"pjl_proc_get_envvar ( pcs -> pjls , ""edgetoedge"" )"		8067333	1					
ANR	8067577	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""edgetoedge"" )"		8067333	0					
ANR	8067578	Callee	pjl_proc_get_envvar		8067333	0					
ANR	8067579	Identifier	pjl_proc_get_envvar		8067333	0					
ANR	8067580	ArgumentList	pcs -> pjls		8067333	1					
ANR	8067581	Argument	pcs -> pjls		8067333	0					
ANR	8067582	PtrMemberAccess	pcs -> pjls		8067333	0					
ANR	8067583	Identifier	pcs		8067333	0					
ANR	8067584	Identifier	pjls		8067333	1					
ANR	8067585	Argument	"""edgetoedge"""		8067333	1					
ANR	8067586	PrimaryExpression	"""edgetoedge"""		8067333	0					
ANR	8067587	Argument	"""YES"""		8067333	2					
ANR	8067588	PrimaryExpression	"""YES"""		8067333	0					
ANR	8067589	ExpressionStatement	offset = 0	192:8:6464:6474	8067333	1	True				
ANR	8067590	AssignmentExpression	offset = 0		8067333	0		=			
ANR	8067591	Identifier	offset		8067333	0					
ANR	8067592	PrimaryExpression	0		8067333	1					
ANR	8067593	ElseStatement	else		8067333	0					
ANR	8067594	ExpressionStatement	offset = ( ( pxfmst -> lp_orient & 0x1 ) != 0 ? psize -> offset_landscape : psize -> offset_portrait )	194:8:6493:6603	8067333	0	True				
ANR	8067595	AssignmentExpression	offset = ( ( pxfmst -> lp_orient & 0x1 ) != 0 ? psize -> offset_landscape : psize -> offset_portrait )		8067333	0		=			
ANR	8067596	Identifier	offset		8067333	0					
ANR	8067597	ConditionalExpression	( pxfmst -> lp_orient & 0x1 ) != 0 ? psize -> offset_landscape : psize -> offset_portrait		8067333	1					
ANR	8067598	Condition	( pxfmst -> lp_orient & 0x1 ) != 0		8067333	0					
ANR	8067599	EqualityExpression	( pxfmst -> lp_orient & 0x1 ) != 0		8067333	0		!=			
ANR	8067600	BitAndExpression	pxfmst -> lp_orient & 0x1		8067333	0		&			
ANR	8067601	PtrMemberAccess	pxfmst -> lp_orient		8067333	0					
ANR	8067602	Identifier	pxfmst		8067333	0					
ANR	8067603	Identifier	lp_orient		8067333	1					
ANR	8067604	PrimaryExpression	0x1		8067333	1					
ANR	8067605	PrimaryExpression	0		8067333	1					
ANR	8067606	PtrMemberAccess	psize -> offset_landscape		8067333	1					
ANR	8067607	Identifier	psize		8067333	0					
ANR	8067608	Identifier	offset_landscape		8067333	1					
ANR	8067609	PtrMemberAccess	psize -> offset_portrait		8067333	2					
ANR	8067610	Identifier	psize		8067333	0					
ANR	8067611	Identifier	offset_portrait		8067333	1					
ANR	8067612	IfStatement	if ( ( pcs -> wide_a4 ) && ( psize -> width == 59520 ) && ( psize -> height == 84168 ) )		8067333	15					
ANR	8067613	Condition	( pcs -> wide_a4 ) && ( psize -> width == 59520 ) && ( psize -> height == 84168 )	199:8:6733:6801	8067333	0	True				
ANR	8067614	AndExpression	( pcs -> wide_a4 ) && ( psize -> width == 59520 ) && ( psize -> height == 84168 )		8067333	0		&&			
ANR	8067615	PtrMemberAccess	pcs -> wide_a4		8067333	0					
ANR	8067616	Identifier	pcs		8067333	0					
ANR	8067617	Identifier	wide_a4		8067333	1					
ANR	8067618	AndExpression	( psize -> width == 59520 ) && ( psize -> height == 84168 )		8067333	1		&&			
ANR	8067619	EqualityExpression	psize -> width == 59520		8067333	0		==			
ANR	8067620	PtrMemberAccess	psize -> width		8067333	0					
ANR	8067621	Identifier	psize		8067333	0					
ANR	8067622	Identifier	width		8067333	1					
ANR	8067623	PrimaryExpression	59520		8067333	1					
ANR	8067624	EqualityExpression	psize -> height == 84168		8067333	1		==			
ANR	8067625	PtrMemberAccess	psize -> height		8067333	0					
ANR	8067626	Identifier	psize		8067333	0					
ANR	8067627	Identifier	height		8067333	1					
ANR	8067628	PrimaryExpression	84168		8067333	1					
ANR	8067629	ExpressionStatement	offset -= inch2coord ( 1.0 / 10.0 )	200:8:6812:6844	8067333	1	True				
ANR	8067630	AssignmentExpression	offset -= inch2coord ( 1.0 / 10.0 )		8067333	0		-=			
ANR	8067631	Identifier	offset		8067333	0					
ANR	8067632	CallExpression	inch2coord ( 1.0 / 10.0 )		8067333	1					
ANR	8067633	Callee	inch2coord		8067333	0					
ANR	8067634	Identifier	inch2coord		8067333	0					
ANR	8067635	ArgumentList	1.0 / 10.0		8067333	1					
ANR	8067636	Argument	1.0 / 10.0		8067333	0					
ANR	8067637	MultiplicativeExpression	1.0 / 10.0		8067333	0		/			
ANR	8067638	PrimaryExpression	1.0		8067333	0					
ANR	8067639	PrimaryExpression	10.0		8067333	1					
ANR	8067640	ExpressionStatement	"gs_matrix_translate ( & ( pxfmst -> lp2pg_mtx ) , ( double ) offset , 0.0 , & ( pxfmst -> lp2pg_mtx ) )"	202:4:6851:6969	8067333	16	True				
ANR	8067641	CallExpression	"gs_matrix_translate ( & ( pxfmst -> lp2pg_mtx ) , ( double ) offset , 0.0 , & ( pxfmst -> lp2pg_mtx ) )"		8067333	0					
ANR	8067642	Callee	gs_matrix_translate		8067333	0					
ANR	8067643	Identifier	gs_matrix_translate		8067333	0					
ANR	8067644	ArgumentList	& ( pxfmst -> lp2pg_mtx )		8067333	1					
ANR	8067645	Argument	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8067646	UnaryOperationExpression	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8067647	UnaryOperator	&		8067333	0					
ANR	8067648	PtrMemberAccess	pxfmst -> lp2pg_mtx		8067333	1					
ANR	8067649	Identifier	pxfmst		8067333	0					
ANR	8067650	Identifier	lp2pg_mtx		8067333	1					
ANR	8067651	Argument	( double ) offset		8067333	1					
ANR	8067652	CastExpression	( double ) offset		8067333	0					
ANR	8067653	CastTarget	double		8067333	0					
ANR	8067654	Identifier	offset		8067333	1					
ANR	8067655	Argument	0.0		8067333	2					
ANR	8067656	PrimaryExpression	0.0		8067333	0					
ANR	8067657	Argument	& ( pxfmst -> lp2pg_mtx )		8067333	3					
ANR	8067658	UnaryOperationExpression	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8067659	UnaryOperator	&		8067333	0					
ANR	8067660	PtrMemberAccess	pxfmst -> lp2pg_mtx		8067333	1					
ANR	8067661	Identifier	pxfmst		8067333	0					
ANR	8067662	Identifier	lp2pg_mtx		8067333	1					
ANR	8067663	IfStatement	if ( ( pxfmst -> lp_orient & 0x1 ) != 0 )		8067333	17					
ANR	8067664	Condition	( pxfmst -> lp_orient & 0x1 ) != 0	205:8:6979:7008	8067333	0	True				
ANR	8067665	EqualityExpression	( pxfmst -> lp_orient & 0x1 ) != 0		8067333	0		!=			
ANR	8067666	BitAndExpression	pxfmst -> lp_orient & 0x1		8067333	0		&			
ANR	8067667	PtrMemberAccess	pxfmst -> lp_orient		8067333	0					
ANR	8067668	Identifier	pxfmst		8067333	0					
ANR	8067669	Identifier	lp_orient		8067333	1					
ANR	8067670	PrimaryExpression	0x1		8067333	1					
ANR	8067671	PrimaryExpression	0		8067333	1					
ANR	8067672	CompoundStatement		87:40:2919:2919	8067333	1					
ANR	8067673	ExpressionStatement	pxfmst -> lp_size . x = psize -> height - 2 * offset	206:8:7021:7067	8067333	0	True				
ANR	8067674	AssignmentExpression	pxfmst -> lp_size . x = psize -> height - 2 * offset		8067333	0		=			
ANR	8067675	MemberAccess	pxfmst -> lp_size . x		8067333	0					
ANR	8067676	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067677	Identifier	pxfmst		8067333	0					
ANR	8067678	Identifier	lp_size		8067333	1					
ANR	8067679	Identifier	x		8067333	1					
ANR	8067680	AdditiveExpression	psize -> height - 2 * offset		8067333	1		-			
ANR	8067681	PtrMemberAccess	psize -> height		8067333	0					
ANR	8067682	Identifier	psize		8067333	0					
ANR	8067683	Identifier	height		8067333	1					
ANR	8067684	MultiplicativeExpression	2 * offset		8067333	1		*			
ANR	8067685	PrimaryExpression	2		8067333	0					
ANR	8067686	Identifier	offset		8067333	1					
ANR	8067687	ExpressionStatement	pxfmst -> lp_size . y = psize -> width	207:8:7077:7109	8067333	1	True				
ANR	8067688	AssignmentExpression	pxfmst -> lp_size . y = psize -> width		8067333	0		=			
ANR	8067689	MemberAccess	pxfmst -> lp_size . y		8067333	0					
ANR	8067690	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067691	Identifier	pxfmst		8067333	0					
ANR	8067692	Identifier	lp_size		8067333	1					
ANR	8067693	Identifier	y		8067333	1					
ANR	8067694	PtrMemberAccess	psize -> width		8067333	1					
ANR	8067695	Identifier	psize		8067333	0					
ANR	8067696	Identifier	width		8067333	1					
ANR	8067697	ElseStatement	else		8067333	0					
ANR	8067698	CompoundStatement		90:11:3030:3030	8067333	0					
ANR	8067699	ExpressionStatement	pxfmst -> lp_size . x = psize -> width - 2 * offset	209:8:7132:7177	8067333	0	True				
ANR	8067700	AssignmentExpression	pxfmst -> lp_size . x = psize -> width - 2 * offset		8067333	0		=			
ANR	8067701	MemberAccess	pxfmst -> lp_size . x		8067333	0					
ANR	8067702	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067703	Identifier	pxfmst		8067333	0					
ANR	8067704	Identifier	lp_size		8067333	1					
ANR	8067705	Identifier	x		8067333	1					
ANR	8067706	AdditiveExpression	psize -> width - 2 * offset		8067333	1		-			
ANR	8067707	PtrMemberAccess	psize -> width		8067333	0					
ANR	8067708	Identifier	psize		8067333	0					
ANR	8067709	Identifier	width		8067333	1					
ANR	8067710	MultiplicativeExpression	2 * offset		8067333	1		*			
ANR	8067711	PrimaryExpression	2		8067333	0					
ANR	8067712	Identifier	offset		8067333	1					
ANR	8067713	ExpressionStatement	pxfmst -> lp_size . y = psize -> height	210:8:7187:7220	8067333	1	True				
ANR	8067714	AssignmentExpression	pxfmst -> lp_size . y = psize -> height		8067333	0		=			
ANR	8067715	MemberAccess	pxfmst -> lp_size . y		8067333	0					
ANR	8067716	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067717	Identifier	pxfmst		8067333	0					
ANR	8067718	Identifier	lp_size		8067333	1					
ANR	8067719	Identifier	y		8067333	1					
ANR	8067720	PtrMemberAccess	psize -> height		8067333	1					
ANR	8067721	Identifier	psize		8067333	0					
ANR	8067722	Identifier	height		8067333	1					
ANR	8067723	ExpressionStatement	"gs_matrix_multiply ( & ( pxfmst -> lp2pg_mtx ) , & pg2dev , & ( pxfmst -> lp2dev_mtx ) )"	214:4:7290:7362	8067333	18	True				
ANR	8067724	CallExpression	"gs_matrix_multiply ( & ( pxfmst -> lp2pg_mtx ) , & pg2dev , & ( pxfmst -> lp2dev_mtx ) )"		8067333	0					
ANR	8067725	Callee	gs_matrix_multiply		8067333	0					
ANR	8067726	Identifier	gs_matrix_multiply		8067333	0					
ANR	8067727	ArgumentList	& ( pxfmst -> lp2pg_mtx )		8067333	1					
ANR	8067728	Argument	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8067729	UnaryOperationExpression	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8067730	UnaryOperator	&		8067333	0					
ANR	8067731	PtrMemberAccess	pxfmst -> lp2pg_mtx		8067333	1					
ANR	8067732	Identifier	pxfmst		8067333	0					
ANR	8067733	Identifier	lp2pg_mtx		8067333	1					
ANR	8067734	Argument	& pg2dev		8067333	1					
ANR	8067735	UnaryOperationExpression	& pg2dev		8067333	0					
ANR	8067736	UnaryOperator	&		8067333	0					
ANR	8067737	Identifier	pg2dev		8067333	1					
ANR	8067738	Argument	& ( pxfmst -> lp2dev_mtx )		8067333	2					
ANR	8067739	UnaryOperationExpression	& ( pxfmst -> lp2dev_mtx )		8067333	0					
ANR	8067740	UnaryOperator	&		8067333	0					
ANR	8067741	PtrMemberAccess	pxfmst -> lp2dev_mtx		8067333	1					
ANR	8067742	Identifier	pxfmst		8067333	0					
ANR	8067743	Identifier	lp2dev_mtx		8067333	1					
ANR	8067744	ExpressionStatement	pg2dev . ty = round ( pg2dev . ty )	215:4:7368:7396	8067333	19	True				
ANR	8067745	AssignmentExpression	pg2dev . ty = round ( pg2dev . ty )		8067333	0		=			
ANR	8067746	MemberAccess	pg2dev . ty		8067333	0					
ANR	8067747	Identifier	pg2dev		8067333	0					
ANR	8067748	Identifier	ty		8067333	1					
ANR	8067749	CallExpression	round ( pg2dev . ty )		8067333	1					
ANR	8067750	Callee	round		8067333	0					
ANR	8067751	Identifier	round		8067333	0					
ANR	8067752	ArgumentList	pg2dev . ty		8067333	1					
ANR	8067753	Argument	pg2dev . ty		8067333	0					
ANR	8067754	MemberAccess	pg2dev . ty		8067333	0					
ANR	8067755	Identifier	pg2dev		8067333	0					
ANR	8067756	Identifier	ty		8067333	1					
ANR	8067757	ExpressionStatement	pg2dev . tx = round ( pg2dev . tx )	216:4:7402:7430	8067333	20	True				
ANR	8067758	AssignmentExpression	pg2dev . tx = round ( pg2dev . tx )		8067333	0		=			
ANR	8067759	MemberAccess	pg2dev . tx		8067333	0					
ANR	8067760	Identifier	pg2dev		8067333	0					
ANR	8067761	Identifier	tx		8067333	1					
ANR	8067762	CallExpression	round ( pg2dev . tx )		8067333	1					
ANR	8067763	Callee	round		8067333	0					
ANR	8067764	Identifier	round		8067333	0					
ANR	8067765	ArgumentList	pg2dev . tx		8067333	1					
ANR	8067766	Argument	pg2dev . tx		8067333	0					
ANR	8067767	MemberAccess	pg2dev . tx		8067333	0					
ANR	8067768	Identifier	pg2dev		8067333	0					
ANR	8067769	Identifier	tx		8067333	1					
ANR	8067770	ExpressionStatement	pxfmst -> lp2dev_mtx . tx = round ( pxfmst -> lp2dev_mtx . tx )	217:4:7436:7488	8067333	21	True				
ANR	8067771	AssignmentExpression	pxfmst -> lp2dev_mtx . tx = round ( pxfmst -> lp2dev_mtx . tx )		8067333	0		=			
ANR	8067772	MemberAccess	pxfmst -> lp2dev_mtx . tx		8067333	0					
ANR	8067773	PtrMemberAccess	pxfmst -> lp2dev_mtx		8067333	0					
ANR	8067774	Identifier	pxfmst		8067333	0					
ANR	8067775	Identifier	lp2dev_mtx		8067333	1					
ANR	8067776	Identifier	tx		8067333	1					
ANR	8067777	CallExpression	round ( pxfmst -> lp2dev_mtx . tx )		8067333	1					
ANR	8067778	Callee	round		8067333	0					
ANR	8067779	Identifier	round		8067333	0					
ANR	8067780	ArgumentList	pxfmst -> lp2dev_mtx . tx		8067333	1					
ANR	8067781	Argument	pxfmst -> lp2dev_mtx . tx		8067333	0					
ANR	8067782	MemberAccess	pxfmst -> lp2dev_mtx . tx		8067333	0					
ANR	8067783	PtrMemberAccess	pxfmst -> lp2dev_mtx		8067333	0					
ANR	8067784	Identifier	pxfmst		8067333	0					
ANR	8067785	Identifier	lp2dev_mtx		8067333	1					
ANR	8067786	Identifier	tx		8067333	1					
ANR	8067787	ExpressionStatement	pxfmst -> lp2dev_mtx . ty = round ( pxfmst -> lp2dev_mtx . ty )	218:4:7494:7546	8067333	22	True				
ANR	8067788	AssignmentExpression	pxfmst -> lp2dev_mtx . ty = round ( pxfmst -> lp2dev_mtx . ty )		8067333	0		=			
ANR	8067789	MemberAccess	pxfmst -> lp2dev_mtx . ty		8067333	0					
ANR	8067790	PtrMemberAccess	pxfmst -> lp2dev_mtx		8067333	0					
ANR	8067791	Identifier	pxfmst		8067333	0					
ANR	8067792	Identifier	lp2dev_mtx		8067333	1					
ANR	8067793	Identifier	ty		8067333	1					
ANR	8067794	CallExpression	round ( pxfmst -> lp2dev_mtx . ty )		8067333	1					
ANR	8067795	Callee	round		8067333	0					
ANR	8067796	Identifier	round		8067333	0					
ANR	8067797	ArgumentList	pxfmst -> lp2dev_mtx . ty		8067333	1					
ANR	8067798	Argument	pxfmst -> lp2dev_mtx . ty		8067333	0					
ANR	8067799	MemberAccess	pxfmst -> lp2dev_mtx . ty		8067333	0					
ANR	8067800	PtrMemberAccess	pxfmst -> lp2dev_mtx		8067333	0					
ANR	8067801	Identifier	pxfmst		8067333	0					
ANR	8067802	Identifier	lp2dev_mtx		8067333	1					
ANR	8067803	Identifier	ty		8067333	1					
ANR	8067804	ExpressionStatement	"pcl_make_rotation ( pxfmst -> print_dir , ( double ) pxfmst -> lp_size . x , ( double ) pxfmst -> lp_size . y , & ( pxfmst -> pd2lp_mtx ) )"	220:4:7628:7795	8067333	23	True				
ANR	8067805	CallExpression	"pcl_make_rotation ( pxfmst -> print_dir , ( double ) pxfmst -> lp_size . x , ( double ) pxfmst -> lp_size . y , & ( pxfmst -> pd2lp_mtx ) )"		8067333	0					
ANR	8067806	Callee	pcl_make_rotation		8067333	0					
ANR	8067807	Identifier	pcl_make_rotation		8067333	0					
ANR	8067808	ArgumentList	pxfmst -> print_dir		8067333	1					
ANR	8067809	Argument	pxfmst -> print_dir		8067333	0					
ANR	8067810	PtrMemberAccess	pxfmst -> print_dir		8067333	0					
ANR	8067811	Identifier	pxfmst		8067333	0					
ANR	8067812	Identifier	print_dir		8067333	1					
ANR	8067813	Argument	( double ) pxfmst -> lp_size . x		8067333	1					
ANR	8067814	CastExpression	( double ) pxfmst -> lp_size . x		8067333	0					
ANR	8067815	CastTarget	double		8067333	0					
ANR	8067816	MemberAccess	pxfmst -> lp_size . x		8067333	1					
ANR	8067817	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067818	Identifier	pxfmst		8067333	0					
ANR	8067819	Identifier	lp_size		8067333	1					
ANR	8067820	Identifier	x		8067333	1					
ANR	8067821	Argument	( double ) pxfmst -> lp_size . y		8067333	2					
ANR	8067822	CastExpression	( double ) pxfmst -> lp_size . y		8067333	0					
ANR	8067823	CastTarget	double		8067333	0					
ANR	8067824	MemberAccess	pxfmst -> lp_size . y		8067333	1					
ANR	8067825	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067826	Identifier	pxfmst		8067333	0					
ANR	8067827	Identifier	lp_size		8067333	1					
ANR	8067828	Identifier	y		8067333	1					
ANR	8067829	Argument	& ( pxfmst -> pd2lp_mtx )		8067333	3					
ANR	8067830	UnaryOperationExpression	& ( pxfmst -> pd2lp_mtx )		8067333	0					
ANR	8067831	UnaryOperator	&		8067333	0					
ANR	8067832	PtrMemberAccess	pxfmst -> pd2lp_mtx		8067333	1					
ANR	8067833	Identifier	pxfmst		8067333	0					
ANR	8067834	Identifier	pd2lp_mtx		8067333	1					
ANR	8067835	ExpressionStatement	"gs_matrix_multiply ( & ( pxfmst -> pd2lp_mtx ) , & ( pxfmst -> lp2dev_mtx ) , & ( pxfmst -> pd2dev_mtx ) )"	224:4:7801:7919	8067333	24	True				
ANR	8067836	CallExpression	"gs_matrix_multiply ( & ( pxfmst -> pd2lp_mtx ) , & ( pxfmst -> lp2dev_mtx ) , & ( pxfmst -> pd2dev_mtx ) )"		8067333	0					
ANR	8067837	Callee	gs_matrix_multiply		8067333	0					
ANR	8067838	Identifier	gs_matrix_multiply		8067333	0					
ANR	8067839	ArgumentList	& ( pxfmst -> pd2lp_mtx )		8067333	1					
ANR	8067840	Argument	& ( pxfmst -> pd2lp_mtx )		8067333	0					
ANR	8067841	UnaryOperationExpression	& ( pxfmst -> pd2lp_mtx )		8067333	0					
ANR	8067842	UnaryOperator	&		8067333	0					
ANR	8067843	PtrMemberAccess	pxfmst -> pd2lp_mtx		8067333	1					
ANR	8067844	Identifier	pxfmst		8067333	0					
ANR	8067845	Identifier	pd2lp_mtx		8067333	1					
ANR	8067846	Argument	& ( pxfmst -> lp2dev_mtx )		8067333	1					
ANR	8067847	UnaryOperationExpression	& ( pxfmst -> lp2dev_mtx )		8067333	0					
ANR	8067848	UnaryOperator	&		8067333	0					
ANR	8067849	PtrMemberAccess	pxfmst -> lp2dev_mtx		8067333	1					
ANR	8067850	Identifier	pxfmst		8067333	0					
ANR	8067851	Identifier	lp2dev_mtx		8067333	1					
ANR	8067852	Argument	& ( pxfmst -> pd2dev_mtx )		8067333	2					
ANR	8067853	UnaryOperationExpression	& ( pxfmst -> pd2dev_mtx )		8067333	0					
ANR	8067854	UnaryOperator	&		8067333	0					
ANR	8067855	PtrMemberAccess	pxfmst -> pd2dev_mtx		8067333	1					
ANR	8067856	Identifier	pxfmst		8067333	0					
ANR	8067857	Identifier	pd2dev_mtx		8067333	1					
ANR	8067858	IfStatement	if ( ( pxfmst -> print_dir & 0x1 ) || ( pcs -> personality == rtl ) )		8067333	25					
ANR	8067859	Condition	( pxfmst -> print_dir & 0x1 ) || ( pcs -> personality == rtl )	229:8:7980:8033	8067333	0	True				
ANR	8067860	OrExpression	( pxfmst -> print_dir & 0x1 ) || ( pcs -> personality == rtl )		8067333	0		||			
ANR	8067861	BitAndExpression	pxfmst -> print_dir & 0x1		8067333	0		&			
ANR	8067862	PtrMemberAccess	pxfmst -> print_dir		8067333	0					
ANR	8067863	Identifier	pxfmst		8067333	0					
ANR	8067864	Identifier	print_dir		8067333	1					
ANR	8067865	PrimaryExpression	0x1		8067333	1					
ANR	8067866	EqualityExpression	pcs -> personality == rtl		8067333	1		==			
ANR	8067867	PtrMemberAccess	pcs -> personality		8067333	0					
ANR	8067868	Identifier	pcs		8067333	0					
ANR	8067869	Identifier	personality		8067333	1					
ANR	8067870	Identifier	rtl		8067333	1					
ANR	8067871	CompoundStatement		111:64:3944:3944	8067333	1					
ANR	8067872	ExpressionStatement	pxfmst -> pd_size . x = pxfmst -> lp_size . y	230:8:8046:8083	8067333	0	True				
ANR	8067873	AssignmentExpression	pxfmst -> pd_size . x = pxfmst -> lp_size . y		8067333	0		=			
ANR	8067874	MemberAccess	pxfmst -> pd_size . x		8067333	0					
ANR	8067875	PtrMemberAccess	pxfmst -> pd_size		8067333	0					
ANR	8067876	Identifier	pxfmst		8067333	0					
ANR	8067877	Identifier	pd_size		8067333	1					
ANR	8067878	Identifier	x		8067333	1					
ANR	8067879	MemberAccess	pxfmst -> lp_size . y		8067333	1					
ANR	8067880	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067881	Identifier	pxfmst		8067333	0					
ANR	8067882	Identifier	lp_size		8067333	1					
ANR	8067883	Identifier	y		8067333	1					
ANR	8067884	ExpressionStatement	pxfmst -> pd_size . y = pxfmst -> lp_size . x	231:8:8093:8130	8067333	1	True				
ANR	8067885	AssignmentExpression	pxfmst -> pd_size . y = pxfmst -> lp_size . x		8067333	0		=			
ANR	8067886	MemberAccess	pxfmst -> pd_size . y		8067333	0					
ANR	8067887	PtrMemberAccess	pxfmst -> pd_size		8067333	0					
ANR	8067888	Identifier	pxfmst		8067333	0					
ANR	8067889	Identifier	pd_size		8067333	1					
ANR	8067890	Identifier	y		8067333	1					
ANR	8067891	MemberAccess	pxfmst -> lp_size . x		8067333	1					
ANR	8067892	PtrMemberAccess	pxfmst -> lp_size		8067333	0					
ANR	8067893	Identifier	pxfmst		8067333	0					
ANR	8067894	Identifier	lp_size		8067333	1					
ANR	8067895	Identifier	x		8067333	1					
ANR	8067896	ElseStatement	else		8067333	0					
ANR	8067897	ExpressionStatement	pxfmst -> pd_size = pxfmst -> lp_size	233:8:8151:8184	8067333	0	True				
ANR	8067898	AssignmentExpression	pxfmst -> pd_size = pxfmst -> lp_size		8067333	0		=			
ANR	8067899	PtrMemberAccess	pxfmst -> pd_size		8067333	0					
ANR	8067900	Identifier	pxfmst		8067333	0					
ANR	8067901	Identifier	pd_size		8067333	1					
ANR	8067902	PtrMemberAccess	pxfmst -> lp_size		8067333	1					
ANR	8067903	Identifier	pxfmst		8067333	0					
ANR	8067904	Identifier	lp_size		8067333	1					
ANR	8067905	CompoundStatement		118:8:4109:4153	8067333	26					
ANR	8067906	IdentifierDeclStatement	gx_device * pdev = gs_currentdevice ( pcs -> pgs ) ;	236:8:8201:8245	8067333	0	True				
ANR	8067907	IdentifierDecl	* pdev = gs_currentdevice ( pcs -> pgs )		8067333	0					
ANR	8067908	IdentifierDeclType	gx_device *		8067333	0					
ANR	8067909	Identifier	pdev		8067333	1					
ANR	8067910	AssignmentExpression	* pdev = gs_currentdevice ( pcs -> pgs )		8067333	2		=			
ANR	8067911	Identifier	pdev		8067333	0					
ANR	8067912	CallExpression	gs_currentdevice ( pcs -> pgs )		8067333	1					
ANR	8067913	Callee	gs_currentdevice		8067333	0					
ANR	8067914	Identifier	gs_currentdevice		8067333	0					
ANR	8067915	ArgumentList	pcs -> pgs		8067333	1					
ANR	8067916	Argument	pcs -> pgs		8067333	0					
ANR	8067917	PtrMemberAccess	pcs -> pgs		8067333	0					
ANR	8067918	Identifier	pcs		8067333	0					
ANR	8067919	Identifier	pgs		8067333	1					
ANR	8067920	IfStatement	if ( pcs -> personality == rtl )		8067333	1					
ANR	8067921	Condition	pcs -> personality == rtl	245:12:8708:8730	8067333	0	True				
ANR	8067922	EqualityExpression	pcs -> personality == rtl		8067333	0		==			
ANR	8067923	PtrMemberAccess	pcs -> personality		8067333	0					
ANR	8067924	Identifier	pcs		8067333	0					
ANR	8067925	Identifier	personality		8067333	1					
ANR	8067926	Identifier	rtl		8067333	1					
ANR	8067927	CompoundStatement		127:37:4641:4641	8067333	1					
ANR	8067928	ExpressionStatement	print_rect . p . x = inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0	246:12:8747:8801	8067333	0	True				
ANR	8067929	AssignmentExpression	print_rect . p . x = inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0		8067333	0		=			
ANR	8067930	MemberAccess	print_rect . p . x		8067333	0					
ANR	8067931	MemberAccess	print_rect . p		8067333	0					
ANR	8067932	Identifier	print_rect		8067333	0					
ANR	8067933	Identifier	p		8067333	1					
ANR	8067934	Identifier	x		8067333	1					
ANR	8067935	MultiplicativeExpression	inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0		8067333	1		/			
ANR	8067936	CallExpression	inch2coord ( pdev -> HWMargins [ 1 ] )		8067333	0					
ANR	8067937	Callee	inch2coord		8067333	0					
ANR	8067938	Identifier	inch2coord		8067333	0					
ANR	8067939	ArgumentList	pdev -> HWMargins [ 1 ]		8067333	1					
ANR	8067940	Argument	pdev -> HWMargins [ 1 ]		8067333	0					
ANR	8067941	ArrayIndexing	pdev -> HWMargins [ 1 ]		8067333	0					
ANR	8067942	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8067943	Identifier	pdev		8067333	0					
ANR	8067944	Identifier	HWMargins		8067333	1					
ANR	8067945	PrimaryExpression	1		8067333	1					
ANR	8067946	PrimaryExpression	72.0		8067333	1					
ANR	8067947	ExpressionStatement	print_rect . p . y = inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 )	247:12:8815:8869	8067333	1	True				
ANR	8067948	AssignmentExpression	print_rect . p . y = inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 )		8067333	0		=			
ANR	8067949	MemberAccess	print_rect . p . y		8067333	0					
ANR	8067950	MemberAccess	print_rect . p		8067333	0					
ANR	8067951	Identifier	print_rect		8067333	0					
ANR	8067952	Identifier	p		8067333	1					
ANR	8067953	Identifier	y		8067333	1					
ANR	8067954	CallExpression	inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 )		8067333	1					
ANR	8067955	Callee	inch2coord		8067333	0					
ANR	8067956	Identifier	inch2coord		8067333	0					
ANR	8067957	ArgumentList	pdev -> HWMargins [ 0 ] / 72.0		8067333	1					
ANR	8067958	Argument	pdev -> HWMargins [ 0 ] / 72.0		8067333	0					
ANR	8067959	MultiplicativeExpression	pdev -> HWMargins [ 0 ] / 72.0		8067333	0		/			
ANR	8067960	ArrayIndexing	pdev -> HWMargins [ 0 ]		8067333	0					
ANR	8067961	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8067962	Identifier	pdev		8067333	0					
ANR	8067963	Identifier	HWMargins		8067333	1					
ANR	8067964	PrimaryExpression	0		8067333	1					
ANR	8067965	PrimaryExpression	72.0		8067333	1					
ANR	8067966	ExpressionStatement	print_rect . q . x = psize -> height - inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 )	248:12:8883:8969	8067333	2	True				
ANR	8067967	AssignmentExpression	print_rect . q . x = psize -> height - inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 )		8067333	0		=			
ANR	8067968	MemberAccess	print_rect . q . x		8067333	0					
ANR	8067969	MemberAccess	print_rect . q		8067333	0					
ANR	8067970	Identifier	print_rect		8067333	0					
ANR	8067971	Identifier	q		8067333	1					
ANR	8067972	Identifier	x		8067333	1					
ANR	8067973	AdditiveExpression	psize -> height - inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 )		8067333	1		-			
ANR	8067974	PtrMemberAccess	psize -> height		8067333	0					
ANR	8067975	Identifier	psize		8067333	0					
ANR	8067976	Identifier	height		8067333	1					
ANR	8067977	CallExpression	inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 )		8067333	1					
ANR	8067978	Callee	inch2coord		8067333	0					
ANR	8067979	Identifier	inch2coord		8067333	0					
ANR	8067980	ArgumentList	pdev -> HWMargins [ 3 ] / 72.0		8067333	1					
ANR	8067981	Argument	pdev -> HWMargins [ 3 ] / 72.0		8067333	0					
ANR	8067982	MultiplicativeExpression	pdev -> HWMargins [ 3 ] / 72.0		8067333	0		/			
ANR	8067983	ArrayIndexing	pdev -> HWMargins [ 3 ]		8067333	0					
ANR	8067984	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8067985	Identifier	pdev		8067333	0					
ANR	8067986	Identifier	HWMargins		8067333	1					
ANR	8067987	PrimaryExpression	3		8067333	1					
ANR	8067988	PrimaryExpression	72.0		8067333	1					
ANR	8067989	ExpressionStatement	print_rect . q . y = psize -> width - inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 )	250:12:8983:9068	8067333	3	True				
ANR	8067990	AssignmentExpression	print_rect . q . y = psize -> width - inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 )		8067333	0		=			
ANR	8067991	MemberAccess	print_rect . q . y		8067333	0					
ANR	8067992	MemberAccess	print_rect . q		8067333	0					
ANR	8067993	Identifier	print_rect		8067333	0					
ANR	8067994	Identifier	q		8067333	1					
ANR	8067995	Identifier	y		8067333	1					
ANR	8067996	AdditiveExpression	psize -> width - inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 )		8067333	1		-			
ANR	8067997	PtrMemberAccess	psize -> width		8067333	0					
ANR	8067998	Identifier	psize		8067333	0					
ANR	8067999	Identifier	width		8067333	1					
ANR	8068000	CallExpression	inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 )		8067333	1					
ANR	8068001	Callee	inch2coord		8067333	0					
ANR	8068002	Identifier	inch2coord		8067333	0					
ANR	8068003	ArgumentList	pdev -> HWMargins [ 2 ] / 72.0		8067333	1					
ANR	8068004	Argument	pdev -> HWMargins [ 2 ] / 72.0		8067333	0					
ANR	8068005	MultiplicativeExpression	pdev -> HWMargins [ 2 ] / 72.0		8067333	0		/			
ANR	8068006	ArrayIndexing	pdev -> HWMargins [ 2 ]		8067333	0					
ANR	8068007	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8068008	Identifier	pdev		8067333	0					
ANR	8068009	Identifier	HWMargins		8067333	1					
ANR	8068010	PrimaryExpression	2		8067333	1					
ANR	8068011	PrimaryExpression	72.0		8067333	1					
ANR	8068012	ElseStatement	else		8067333	0					
ANR	8068013	CompoundStatement		134:15:4993:4993	8067333	0					
ANR	8068014	ExpressionStatement	"print_rect . p . x = max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 ) )"	253:12:9099:9215	8067333	0	True				
ANR	8068015	AssignmentExpression	"print_rect . p . x = max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 ) )"		8067333	0		=			
ANR	8068016	MemberAccess	print_rect . p . x		8067333	0					
ANR	8068017	MemberAccess	print_rect . p		8067333	0					
ANR	8068018	Identifier	print_rect		8067333	0					
ANR	8068019	Identifier	p		8067333	1					
ANR	8068020	Identifier	x		8067333	1					
ANR	8068021	CallExpression	"max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 ) )"		8067333	1					
ANR	8068022	Callee	max		8067333	0					
ANR	8068023	Identifier	max		8067333	0					
ANR	8068024	ArgumentList	PRINTABLE_MARGIN_CP		8067333	1					
ANR	8068025	Argument	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068026	Identifier	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068027	Argument	inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 )		8067333	1					
ANR	8068028	CallExpression	inch2coord ( pdev -> HWMargins [ 0 ] / 72.0 )		8067333	0					
ANR	8068029	Callee	inch2coord		8067333	0					
ANR	8068030	Identifier	inch2coord		8067333	0					
ANR	8068031	ArgumentList	pdev -> HWMargins [ 0 ] / 72.0		8067333	1					
ANR	8068032	Argument	pdev -> HWMargins [ 0 ] / 72.0		8067333	0					
ANR	8068033	MultiplicativeExpression	pdev -> HWMargins [ 0 ] / 72.0		8067333	0		/			
ANR	8068034	ArrayIndexing	pdev -> HWMargins [ 0 ]		8067333	0					
ANR	8068035	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8068036	Identifier	pdev		8067333	0					
ANR	8068037	Identifier	HWMargins		8067333	1					
ANR	8068038	PrimaryExpression	0		8067333	1					
ANR	8068039	PrimaryExpression	72.0		8067333	1					
ANR	8068040	ExpressionStatement	"print_rect . p . y = max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0 )"	256:12:9229:9345	8067333	1	True				
ANR	8068041	AssignmentExpression	"print_rect . p . y = max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0 )"		8067333	0		=			
ANR	8068042	MemberAccess	print_rect . p . y		8067333	0					
ANR	8068043	MemberAccess	print_rect . p		8067333	0					
ANR	8068044	Identifier	print_rect		8067333	0					
ANR	8068045	Identifier	p		8067333	1					
ANR	8068046	Identifier	y		8067333	1					
ANR	8068047	CallExpression	"max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0 )"		8067333	1					
ANR	8068048	Callee	max		8067333	0					
ANR	8068049	Identifier	max		8067333	0					
ANR	8068050	ArgumentList	PRINTABLE_MARGIN_CP		8067333	1					
ANR	8068051	Argument	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068052	Identifier	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068053	Argument	inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0		8067333	1					
ANR	8068054	MultiplicativeExpression	inch2coord ( pdev -> HWMargins [ 1 ] ) / 72.0		8067333	0		/			
ANR	8068055	CallExpression	inch2coord ( pdev -> HWMargins [ 1 ] )		8067333	0					
ANR	8068056	Callee	inch2coord		8067333	0					
ANR	8068057	Identifier	inch2coord		8067333	0					
ANR	8068058	ArgumentList	pdev -> HWMargins [ 1 ]		8067333	1					
ANR	8068059	Argument	pdev -> HWMargins [ 1 ]		8067333	0					
ANR	8068060	ArrayIndexing	pdev -> HWMargins [ 1 ]		8067333	0					
ANR	8068061	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8068062	Identifier	pdev		8067333	0					
ANR	8068063	Identifier	HWMargins		8067333	1					
ANR	8068064	PrimaryExpression	1		8067333	1					
ANR	8068065	PrimaryExpression	72.0		8067333	1					
ANR	8068066	ExpressionStatement	"print_rect . q . x = psize -> width - max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 ) )"	259:12:9359:9505	8067333	2	True				
ANR	8068067	AssignmentExpression	"print_rect . q . x = psize -> width - max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 ) )"		8067333	0		=			
ANR	8068068	MemberAccess	print_rect . q . x		8067333	0					
ANR	8068069	MemberAccess	print_rect . q		8067333	0					
ANR	8068070	Identifier	print_rect		8067333	0					
ANR	8068071	Identifier	q		8067333	1					
ANR	8068072	Identifier	x		8067333	1					
ANR	8068073	AdditiveExpression	"psize -> width - max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 ) )"		8067333	1		-			
ANR	8068074	PtrMemberAccess	psize -> width		8067333	0					
ANR	8068075	Identifier	psize		8067333	0					
ANR	8068076	Identifier	width		8067333	1					
ANR	8068077	CallExpression	"max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 ) )"		8067333	1					
ANR	8068078	Callee	max		8067333	0					
ANR	8068079	Identifier	max		8067333	0					
ANR	8068080	ArgumentList	PRINTABLE_MARGIN_CP		8067333	1					
ANR	8068081	Argument	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068082	Identifier	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068083	Argument	inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 )		8067333	1					
ANR	8068084	CallExpression	inch2coord ( pdev -> HWMargins [ 2 ] / 72.0 )		8067333	0					
ANR	8068085	Callee	inch2coord		8067333	0					
ANR	8068086	Identifier	inch2coord		8067333	0					
ANR	8068087	ArgumentList	pdev -> HWMargins [ 2 ] / 72.0		8067333	1					
ANR	8068088	Argument	pdev -> HWMargins [ 2 ] / 72.0		8067333	0					
ANR	8068089	MultiplicativeExpression	pdev -> HWMargins [ 2 ] / 72.0		8067333	0		/			
ANR	8068090	ArrayIndexing	pdev -> HWMargins [ 2 ]		8067333	0					
ANR	8068091	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8068092	Identifier	pdev		8067333	0					
ANR	8068093	Identifier	HWMargins		8067333	1					
ANR	8068094	PrimaryExpression	2		8067333	1					
ANR	8068095	PrimaryExpression	72.0		8067333	1					
ANR	8068096	ExpressionStatement	"print_rect . q . y = psize -> height - max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 ) )"	262:12:9519:9667	8067333	3	True				
ANR	8068097	AssignmentExpression	"print_rect . q . y = psize -> height - max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 ) )"		8067333	0		=			
ANR	8068098	MemberAccess	print_rect . q . y		8067333	0					
ANR	8068099	MemberAccess	print_rect . q		8067333	0					
ANR	8068100	Identifier	print_rect		8067333	0					
ANR	8068101	Identifier	q		8067333	1					
ANR	8068102	Identifier	y		8067333	1					
ANR	8068103	AdditiveExpression	"psize -> height - max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 ) )"		8067333	1		-			
ANR	8068104	PtrMemberAccess	psize -> height		8067333	0					
ANR	8068105	Identifier	psize		8067333	0					
ANR	8068106	Identifier	height		8067333	1					
ANR	8068107	CallExpression	"max ( PRINTABLE_MARGIN_CP , inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 ) )"		8067333	1					
ANR	8068108	Callee	max		8067333	0					
ANR	8068109	Identifier	max		8067333	0					
ANR	8068110	ArgumentList	PRINTABLE_MARGIN_CP		8067333	1					
ANR	8068111	Argument	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068112	Identifier	PRINTABLE_MARGIN_CP		8067333	0					
ANR	8068113	Argument	inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 )		8067333	1					
ANR	8068114	CallExpression	inch2coord ( pdev -> HWMargins [ 3 ] / 72.0 )		8067333	0					
ANR	8068115	Callee	inch2coord		8067333	0					
ANR	8068116	Identifier	inch2coord		8067333	0					
ANR	8068117	ArgumentList	pdev -> HWMargins [ 3 ] / 72.0		8067333	1					
ANR	8068118	Argument	pdev -> HWMargins [ 3 ] / 72.0		8067333	0					
ANR	8068119	MultiplicativeExpression	pdev -> HWMargins [ 3 ] / 72.0		8067333	0		/			
ANR	8068120	ArrayIndexing	pdev -> HWMargins [ 3 ]		8067333	0					
ANR	8068121	PtrMemberAccess	pdev -> HWMargins		8067333	0					
ANR	8068122	Identifier	pdev		8067333	0					
ANR	8068123	Identifier	HWMargins		8067333	1					
ANR	8068124	PrimaryExpression	3		8067333	1					
ANR	8068125	PrimaryExpression	72.0		8067333	1					
ANR	8068126	ExpressionStatement	"pcl_transform_rect ( & print_rect , & dev_rect , & pg2dev )"	266:8:9687:9738	8067333	2	True				
ANR	8068127	CallExpression	"pcl_transform_rect ( & print_rect , & dev_rect , & pg2dev )"		8067333	0					
ANR	8068128	Callee	pcl_transform_rect		8067333	0					
ANR	8068129	Identifier	pcl_transform_rect		8067333	0					
ANR	8068130	ArgumentList	& print_rect		8067333	1					
ANR	8068131	Argument	& print_rect		8067333	0					
ANR	8068132	UnaryOperationExpression	& print_rect		8067333	0					
ANR	8068133	UnaryOperator	&		8067333	0					
ANR	8068134	Identifier	print_rect		8067333	1					
ANR	8068135	Argument	& dev_rect		8067333	1					
ANR	8068136	UnaryOperationExpression	& dev_rect		8067333	0					
ANR	8068137	UnaryOperator	&		8067333	0					
ANR	8068138	Identifier	dev_rect		8067333	1					
ANR	8068139	Argument	& pg2dev		8067333	2					
ANR	8068140	UnaryOperationExpression	& pg2dev		8067333	0					
ANR	8068141	UnaryOperator	&		8067333	0					
ANR	8068142	Identifier	pg2dev		8067333	1					
ANR	8068143	ExpressionStatement	"pcl_invert_mtx ( & ( pxfmst -> lp2pg_mtx ) , & pg2lp )"	268:4:9750:9794	8067333	27	True				
ANR	8068144	CallExpression	"pcl_invert_mtx ( & ( pxfmst -> lp2pg_mtx ) , & pg2lp )"		8067333	0					
ANR	8068145	Callee	pcl_invert_mtx		8067333	0					
ANR	8068146	Identifier	pcl_invert_mtx		8067333	0					
ANR	8068147	ArgumentList	& ( pxfmst -> lp2pg_mtx )		8067333	1					
ANR	8068148	Argument	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8068149	UnaryOperationExpression	& ( pxfmst -> lp2pg_mtx )		8067333	0					
ANR	8068150	UnaryOperator	&		8067333	0					
ANR	8068151	PtrMemberAccess	pxfmst -> lp2pg_mtx		8067333	1					
ANR	8068152	Identifier	pxfmst		8067333	0					
ANR	8068153	Identifier	lp2pg_mtx		8067333	1					
ANR	8068154	Argument	& pg2lp		8067333	1					
ANR	8068155	UnaryOperationExpression	& pg2lp		8067333	0					
ANR	8068156	UnaryOperator	&		8067333	0					
ANR	8068157	Identifier	pg2lp		8067333	1					
ANR	8068158	ExpressionStatement	"pcl_transform_rect ( & print_rect , & ( pxfmst -> lp_print_rect ) , & pg2lp )"	269:4:9800:9865	8067333	28	True				
ANR	8068159	CallExpression	"pcl_transform_rect ( & print_rect , & ( pxfmst -> lp_print_rect ) , & pg2lp )"		8067333	0					
ANR	8068160	Callee	pcl_transform_rect		8067333	0					
ANR	8068161	Identifier	pcl_transform_rect		8067333	0					
ANR	8068162	ArgumentList	& print_rect		8067333	1					
ANR	8068163	Argument	& print_rect		8067333	0					
ANR	8068164	UnaryOperationExpression	& print_rect		8067333	0					
ANR	8068165	UnaryOperator	&		8067333	0					
ANR	8068166	Identifier	print_rect		8067333	1					
ANR	8068167	Argument	& ( pxfmst -> lp_print_rect )		8067333	1					
ANR	8068168	UnaryOperationExpression	& ( pxfmst -> lp_print_rect )		8067333	0					
ANR	8068169	UnaryOperator	&		8067333	0					
ANR	8068170	PtrMemberAccess	pxfmst -> lp_print_rect		8067333	1					
ANR	8068171	Identifier	pxfmst		8067333	0					
ANR	8068172	Identifier	lp_print_rect		8067333	1					
ANR	8068173	Argument	& pg2lp		8067333	2					
ANR	8068174	UnaryOperationExpression	& pg2lp		8067333	0					
ANR	8068175	UnaryOperator	&		8067333	0					
ANR	8068176	Identifier	pg2lp		8067333	1					
ANR	8068177	IfStatement	if ( ! reset_initial )		8067333	29					
ANR	8068178	Condition	! reset_initial	272:8:9931:9944	8067333	0	True				
ANR	8068179	UnaryOperationExpression	! reset_initial		8067333	0					
ANR	8068180	UnaryOperator	!		8067333	0					
ANR	8068181	Identifier	reset_initial		8067333	1					
ANR	8068182	ExpressionStatement	"restore_cap_and_margins ( pcs , & cur_pt , & text_rect )"	273:8:9955:10004	8067333	1	True				
ANR	8068183	CallExpression	"restore_cap_and_margins ( pcs , & cur_pt , & text_rect )"		8067333	0					
ANR	8068184	Callee	restore_cap_and_margins		8067333	0					
ANR	8068185	Identifier	restore_cap_and_margins		8067333	0					
ANR	8068186	ArgumentList	pcs		8067333	1					
ANR	8068187	Argument	pcs		8067333	0					
ANR	8068188	Identifier	pcs		8067333	0					
ANR	8068189	Argument	& cur_pt		8067333	1					
ANR	8068190	UnaryOperationExpression	& cur_pt		8067333	0					
ANR	8068191	UnaryOperator	&		8067333	0					
ANR	8068192	Identifier	cur_pt		8067333	1					
ANR	8068193	Argument	& text_rect		8067333	2					
ANR	8068194	UnaryOperationExpression	& text_rect		8067333	0					
ANR	8068195	UnaryOperator	&		8067333	0					
ANR	8068196	Identifier	text_rect		8067333	1					
ANR	8068197	ReturnType	static void		8067333	1					
ANR	8068198	Identifier	update_xfm_state		8067333	2					
ANR	8068199	ParameterList	"pcl_state_t * pcs , bool reset_initial"		8067333	3					
ANR	8068200	Parameter	pcl_state_t * pcs	118:17:4052:4068	8067333	0	True				
ANR	8068201	ParameterType	pcl_state_t *		8067333	0					
ANR	8068202	Identifier	pcs		8067333	1					
ANR	8068203	Parameter	bool reset_initial	118:36:4071:4088	8067333	1	True				
ANR	8068204	ParameterType	bool		8067333	0					
ANR	8068205	Identifier	reset_initial		8067333	1					
ANR	8068206	CFGEntryNode	ENTRY		8067333		True				
ANR	8068207	CFGExitNode	EXIT		8067333		True				
ANR	8068208	Symbol	pxfmst -> pd_size . x		8067333						
ANR	8068209	Symbol	& dev_rect		8067333						
ANR	8068210	Symbol	* pxfmst		8067333						
ANR	8068211	Symbol	pxfmst -> pd_size . y		8067333						
ANR	8068212	Symbol	pg2lp		8067333						
ANR	8068213	Symbol	gs_currentdevice		8067333						
ANR	8068214	Symbol	& pcs -> xfm_state		8067333						
ANR	8068215	Symbol	* pcs		8067333						
ANR	8068216	Symbol	pg2dev . ty		8067333						
ANR	8068217	Symbol	pg2dev . tx		8067333						
ANR	8068218	Symbol	reset_initial		8067333						
ANR	8068219	Symbol	psize -> width		8067333						
ANR	8068220	Symbol	psize		8067333						
ANR	8068221	Symbol	text_rect		8067333						
ANR	8068222	Symbol	pdev		8067333						
ANR	8068223	Symbol	pjl_proc_compare		8067333						
ANR	8068224	Symbol	pxfmst		8067333						
ANR	8068225	Symbol	* pdev -> HWMargins		8067333						
ANR	8068226	Symbol	pjl_proc_get_envvar		8067333						
ANR	8068227	Symbol	pcs -> personality		8067333						
ANR	8068228	Symbol	pxfmst -> print_dir		8067333						
ANR	8068229	Symbol	PRINTABLE_MARGIN_CP		8067333						
ANR	8068230	Symbol	pxfmst -> paper_size		8067333						
ANR	8068231	Symbol	print_rect . q . x		8067333						
ANR	8068232	Symbol	offset		8067333						
ANR	8068233	Symbol	pdev -> HWMargins		8067333						
ANR	8068234	Symbol	print_rect . q . y		8067333						
ANR	8068235	Symbol	pxfmst -> left_offset_cp		8067333						
ANR	8068236	Symbol	psize -> offset_portrait		8067333						
ANR	8068237	Symbol	pcs -> wide_a4		8067333						
ANR	8068238	Symbol	& pxfmst -> lp2pg_mtx		8067333						
ANR	8068239	Symbol	print_rect . p . x		8067333						
ANR	8068240	Symbol	loff		8067333						
ANR	8068241	Symbol	pcs -> bind_short_edge		8067333						
ANR	8068242	Symbol	& pxfmst -> lp2dev_mtx		8067333						
ANR	8068243	Symbol	print_rect . p . y		8067333						
ANR	8068244	Symbol	print_rect . p		8067333						
ANR	8068245	Symbol	print_rect . q		8067333						
ANR	8068246	Symbol	* psize		8067333						
ANR	8068247	Symbol	pxfmst -> lp2pg_mtx . ty		8067333						
ANR	8068248	Symbol	pxfmst -> lp2pg_mtx . tx		8067333						
ANR	8068249	Symbol	& pg2dev		8067333						
ANR	8068250	Symbol	pxfmst -> pd_size		8067333						
ANR	8068251	Symbol	pxfmst -> top_offset_cp		8067333						
ANR	8068252	Symbol	pcs -> pjls		8067333						
ANR	8068253	Symbol	& pg2lp		8067333						
ANR	8068254	Symbol	pxfmst -> lp_orient		8067333						
ANR	8068255	Symbol	& pxfmst -> lp_print_rect		8067333						
ANR	8068256	Symbol	* * pdev		8067333						
ANR	8068257	Symbol	& print_rect		8067333						
ANR	8068258	Symbol	toff		8067333						
ANR	8068259	Symbol	pcs -> back_side		8067333						
ANR	8068260	Symbol	psize -> offset_landscape		8067333						
ANR	8068261	Symbol	inch2coord		8067333						
ANR	8068262	Symbol	pxfmst -> lp_size		8067333						
ANR	8068263	Symbol	& cur_pt		8067333						
ANR	8068264	Symbol	pxfmst -> lp2dev_mtx . ty		8067333						
ANR	8068265	Symbol	pxfmst -> lp2dev_mtx . tx		8067333						
ANR	8068266	Symbol	& pxfmst -> pd2dev_mtx		8067333						
ANR	8068267	Symbol	dev_rect		8067333						
ANR	8068268	Symbol	& pxfmst -> pd2lp_mtx		8067333						
ANR	8068269	Symbol	pxfmst -> lp2pg_mtx		8067333						
ANR	8068270	Symbol	pcs		8067333						
ANR	8068271	Symbol	max		8067333						
ANR	8068272	Symbol	pcs -> pgs		8067333						
ANR	8068273	Symbol	pxfmst -> lp_size . y		8067333						
ANR	8068274	Symbol	rtl		8067333						
ANR	8068275	Symbol	pxfmst -> lp_size . x		8067333						
ANR	8068276	Symbol	print_rect		8067333						
ANR	8068277	Symbol	pxfmst -> lp2dev_mtx		8067333						
ANR	8068278	Symbol	round		8067333						
ANR	8068279	Symbol	cur_pt		8067333						
ANR	8068280	Symbol	pg2dev		8067333						
ANR	8068281	Symbol	psize -> height		8067333						
ANR	8068282	Symbol	* pdev		8067333						
ANR	8068283	Symbol	& text_rect		8067333						
ANR	8068284	Symbol	pdev -> LeadingEdge		8067333						
ANR	8068285	Function	reset_vertical_margins	300:0:10935:11389							
ANR	8068286	FunctionDef	"reset_vertical_margins (pcl_state_t * pcs , bool for_passthrough)"		8068285	0					
ANR	8068287	CompoundStatement		302:0:11011:11389	8068285	0					
ANR	8068288	IdentifierDeclStatement	pcl_margins_t * pmar = & ( pcs -> margins ) ;	303:4:11017:11054	8068285	0	True				
ANR	8068289	IdentifierDecl	* pmar = & ( pcs -> margins )		8068285	0					
ANR	8068290	IdentifierDeclType	pcl_margins_t *		8068285	0					
ANR	8068291	Identifier	pmar		8068285	1					
ANR	8068292	AssignmentExpression	* pmar = & ( pcs -> margins )		8068285	2		=			
ANR	8068293	Identifier	pmar		8068285	0					
ANR	8068294	UnaryOperationExpression	& ( pcs -> margins )		8068285	1					
ANR	8068295	UnaryOperator	&		8068285	0					
ANR	8068296	PtrMemberAccess	pcs -> margins		8068285	1					
ANR	8068297	Identifier	pcs		8068285	0					
ANR	8068298	Identifier	margins		8068285	1					
ANR	8068299	IdentifierDeclStatement	coord hgt = pcs -> xfm_state . pd_size . y ;	304:4:11060:11096	8068285	1	True				
ANR	8068300	IdentifierDecl	hgt = pcs -> xfm_state . pd_size . y		8068285	0					
ANR	8068301	IdentifierDeclType	coord		8068285	0					
ANR	8068302	Identifier	hgt		8068285	1					
ANR	8068303	AssignmentExpression	hgt = pcs -> xfm_state . pd_size . y		8068285	2		=			
ANR	8068304	Identifier	hgt		8068285	0					
ANR	8068305	MemberAccess	pcs -> xfm_state . pd_size . y		8068285	1					
ANR	8068306	MemberAccess	pcs -> xfm_state . pd_size		8068285	0					
ANR	8068307	PtrMemberAccess	pcs -> xfm_state		8068285	0					
ANR	8068308	Identifier	pcs		8068285	0					
ANR	8068309	Identifier	xfm_state		8068285	1					
ANR	8068310	Identifier	pd_size		8068285	1					
ANR	8068311	Identifier	y		8068285	1					
ANR	8068312	IdentifierDeclStatement	coord tm = ( for_passthrough ? DFLT_TOP_MARGIN_PASSTHROUGH : DFLT_TOP_MARGIN ) ;	305:4:11102:11194	8068285	2	True				
ANR	8068313	IdentifierDecl	tm = ( for_passthrough ? DFLT_TOP_MARGIN_PASSTHROUGH : DFLT_TOP_MARGIN )		8068285	0					
ANR	8068314	IdentifierDeclType	coord		8068285	0					
ANR	8068315	Identifier	tm		8068285	1					
ANR	8068316	AssignmentExpression	tm = ( for_passthrough ? DFLT_TOP_MARGIN_PASSTHROUGH : DFLT_TOP_MARGIN )		8068285	2		=			
ANR	8068317	Identifier	tm		8068285	0					
ANR	8068318	ConditionalExpression	for_passthrough ? DFLT_TOP_MARGIN_PASSTHROUGH : DFLT_TOP_MARGIN		8068285	1					
ANR	8068319	Condition	for_passthrough		8068285	0					
ANR	8068320	Identifier	for_passthrough		8068285	0					
ANR	8068321	Identifier	DFLT_TOP_MARGIN_PASSTHROUGH		8068285	1					
ANR	8068322	Identifier	DFLT_TOP_MARGIN		8068285	2					
ANR	8068323	IdentifierDeclStatement	coord bm = ( for_passthrough ? DFLT_BOTOM_MARGIN_PASSTHROUGH : DFLT_BOTTOM_MARGIN ) ;	307:4:11200:11297	8068285	3	True				
ANR	8068324	IdentifierDecl	bm = ( for_passthrough ? DFLT_BOTOM_MARGIN_PASSTHROUGH : DFLT_BOTTOM_MARGIN )		8068285	0					
ANR	8068325	IdentifierDeclType	coord		8068285	0					
ANR	8068326	Identifier	bm		8068285	1					
ANR	8068327	AssignmentExpression	bm = ( for_passthrough ? DFLT_BOTOM_MARGIN_PASSTHROUGH : DFLT_BOTTOM_MARGIN )		8068285	2		=			
ANR	8068328	Identifier	bm		8068285	0					
ANR	8068329	ConditionalExpression	for_passthrough ? DFLT_BOTOM_MARGIN_PASSTHROUGH : DFLT_BOTTOM_MARGIN		8068285	1					
ANR	8068330	Condition	for_passthrough		8068285	0					
ANR	8068331	Identifier	for_passthrough		8068285	0					
ANR	8068332	Identifier	DFLT_BOTOM_MARGIN_PASSTHROUGH		8068285	1					
ANR	8068333	Identifier	DFLT_BOTTOM_MARGIN		8068285	2					
ANR	8068334	ExpressionStatement	"pmar -> top = TOP_MARGIN ( hgt , tm )"	309:4:11303:11334	8068285	4	True				
ANR	8068335	AssignmentExpression	"pmar -> top = TOP_MARGIN ( hgt , tm )"		8068285	0		=			
ANR	8068336	PtrMemberAccess	pmar -> top		8068285	0					
ANR	8068337	Identifier	pmar		8068285	0					
ANR	8068338	Identifier	top		8068285	1					
ANR	8068339	CallExpression	"TOP_MARGIN ( hgt , tm )"		8068285	1					
ANR	8068340	Callee	TOP_MARGIN		8068285	0					
ANR	8068341	Identifier	TOP_MARGIN		8068285	0					
ANR	8068342	ArgumentList	hgt		8068285	1					
ANR	8068343	Argument	hgt		8068285	0					
ANR	8068344	Identifier	hgt		8068285	0					
ANR	8068345	Argument	tm		8068285	1					
ANR	8068346	Identifier	tm		8068285	0					
ANR	8068347	ExpressionStatement	"pmar -> length = PAGE_LENGTH ( hgt - pmar -> top , bm )"	310:4:11340:11387	8068285	5	True				
ANR	8068348	AssignmentExpression	"pmar -> length = PAGE_LENGTH ( hgt - pmar -> top , bm )"		8068285	0		=			
ANR	8068349	PtrMemberAccess	pmar -> length		8068285	0					
ANR	8068350	Identifier	pmar		8068285	0					
ANR	8068351	Identifier	length		8068285	1					
ANR	8068352	CallExpression	"PAGE_LENGTH ( hgt - pmar -> top , bm )"		8068285	1					
ANR	8068353	Callee	PAGE_LENGTH		8068285	0					
ANR	8068354	Identifier	PAGE_LENGTH		8068285	0					
ANR	8068355	ArgumentList	hgt - pmar -> top		8068285	1					
ANR	8068356	Argument	hgt - pmar -> top		8068285	0					
ANR	8068357	AdditiveExpression	hgt - pmar -> top		8068285	0		-			
ANR	8068358	Identifier	hgt		8068285	0					
ANR	8068359	PtrMemberAccess	pmar -> top		8068285	1					
ANR	8068360	Identifier	pmar		8068285	0					
ANR	8068361	Identifier	top		8068285	1					
ANR	8068362	Argument	bm		8068285	1					
ANR	8068363	Identifier	bm		8068285	0					
ANR	8068364	ReturnType	static void		8068285	1					
ANR	8068365	Identifier	reset_vertical_margins		8068285	2					
ANR	8068366	ParameterList	"pcl_state_t * pcs , bool for_passthrough"		8068285	3					
ANR	8068367	Parameter	pcl_state_t * pcs	301:23:10970:10986	8068285	0	True				
ANR	8068368	ParameterType	pcl_state_t *		8068285	0					
ANR	8068369	Identifier	pcs		8068285	1					
ANR	8068370	Parameter	bool for_passthrough	301:42:10989:11008	8068285	1	True				
ANR	8068371	ParameterType	bool		8068285	0					
ANR	8068372	Identifier	for_passthrough		8068285	1					
ANR	8068373	CFGEntryNode	ENTRY		8068285		True				
ANR	8068374	CFGExitNode	EXIT		8068285		True				
ANR	8068375	Symbol	pcs		8068285						
ANR	8068376	Symbol	& pcs -> margins		8068285						
ANR	8068377	Symbol	DFLT_TOP_MARGIN_PASSTHROUGH		8068285						
ANR	8068378	Symbol	* pmar		8068285						
ANR	8068379	Symbol	* pcs		8068285						
ANR	8068380	Symbol	pmar -> top		8068285						
ANR	8068381	Symbol	bm		8068285						
ANR	8068382	Symbol	PAGE_LENGTH		8068285						
ANR	8068383	Symbol	DFLT_TOP_MARGIN		8068285						
ANR	8068384	Symbol	pmar -> length		8068285						
ANR	8068385	Symbol	pcs -> xfm_state . pd_size . y		8068285						
ANR	8068386	Symbol	pcs -> xfm_state		8068285						
ANR	8068387	Symbol	hgt		8068285						
ANR	8068388	Symbol	for_passthrough		8068285						
ANR	8068389	Symbol	tm		8068285						
ANR	8068390	Symbol	pmar		8068285						
ANR	8068391	Symbol	TOP_MARGIN		8068285						
ANR	8068392	Symbol	pcs -> xfm_state . pd_size		8068285						
ANR	8068393	Symbol	DFLT_BOTOM_MARGIN_PASSTHROUGH		8068285						
ANR	8068394	Symbol	DFLT_BOTTOM_MARGIN		8068285						
ANR	8068395	Function	reset_horizontal_margins	320:0:11614:11815							
ANR	8068396	FunctionDef	reset_horizontal_margins (pcl_state_t * pcs)		8068395	0					
ANR	8068397	CompoundStatement		322:0:11670:11815	8068395	0					
ANR	8068398	IdentifierDeclStatement	pcl_margins_t * pmar = & ( pcs -> margins ) ;	323:4:11676:11713	8068395	0	True				
ANR	8068399	IdentifierDecl	* pmar = & ( pcs -> margins )		8068395	0					
ANR	8068400	IdentifierDeclType	pcl_margins_t *		8068395	0					
ANR	8068401	Identifier	pmar		8068395	1					
ANR	8068402	AssignmentExpression	* pmar = & ( pcs -> margins )		8068395	2		=			
ANR	8068403	Identifier	pmar		8068395	0					
ANR	8068404	UnaryOperationExpression	& ( pcs -> margins )		8068395	1					
ANR	8068405	UnaryOperator	&		8068395	0					
ANR	8068406	PtrMemberAccess	pcs -> margins		8068395	1					
ANR	8068407	Identifier	pcs		8068395	0					
ANR	8068408	Identifier	margins		8068395	1					
ANR	8068409	ExpressionStatement	pmar -> left = DFLT_LEFT_MARGIN	325:4:11720:11749	8068395	1	True				
ANR	8068410	AssignmentExpression	pmar -> left = DFLT_LEFT_MARGIN		8068395	0		=			
ANR	8068411	PtrMemberAccess	pmar -> left		8068395	0					
ANR	8068412	Identifier	pmar		8068395	0					
ANR	8068413	Identifier	left		8068395	1					
ANR	8068414	Identifier	DFLT_LEFT_MARGIN		8068395	1					
ANR	8068415	ExpressionStatement	pmar -> right = pcs -> xfm_state . pd_size . x - DFLT_RIGHT_MARGIN	326:4:11755:11813	8068395	2	True				
ANR	8068416	AssignmentExpression	pmar -> right = pcs -> xfm_state . pd_size . x - DFLT_RIGHT_MARGIN		8068395	0		=			
ANR	8068417	PtrMemberAccess	pmar -> right		8068395	0					
ANR	8068418	Identifier	pmar		8068395	0					
ANR	8068419	Identifier	right		8068395	1					
ANR	8068420	AdditiveExpression	pcs -> xfm_state . pd_size . x - DFLT_RIGHT_MARGIN		8068395	1		-			
ANR	8068421	MemberAccess	pcs -> xfm_state . pd_size . x		8068395	0					
ANR	8068422	MemberAccess	pcs -> xfm_state . pd_size		8068395	0					
ANR	8068423	PtrMemberAccess	pcs -> xfm_state		8068395	0					
ANR	8068424	Identifier	pcs		8068395	0					
ANR	8068425	Identifier	xfm_state		8068395	1					
ANR	8068426	Identifier	pd_size		8068395	1					
ANR	8068427	Identifier	x		8068395	1					
ANR	8068428	Identifier	DFLT_RIGHT_MARGIN		8068395	1					
ANR	8068429	ReturnType	static void		8068395	1					
ANR	8068430	Identifier	reset_horizontal_margins		8068395	2					
ANR	8068431	ParameterList	pcl_state_t * pcs		8068395	3					
ANR	8068432	Parameter	pcl_state_t * pcs	321:25:11651:11667	8068395	0	True				
ANR	8068433	ParameterType	pcl_state_t *		8068395	0					
ANR	8068434	Identifier	pcs		8068395	1					
ANR	8068435	CFGEntryNode	ENTRY		8068395		True				
ANR	8068436	CFGExitNode	EXIT		8068395		True				
ANR	8068437	Symbol	pcs		8068395						
ANR	8068438	Symbol	& pcs -> margins		8068395						
ANR	8068439	Symbol	pmar -> left		8068395						
ANR	8068440	Symbol	pcs -> xfm_state		8068395						
ANR	8068441	Symbol	pcs -> xfm_state . pd_size . x		8068395						
ANR	8068442	Symbol	pmar -> right		8068395						
ANR	8068443	Symbol	* pmar		8068395						
ANR	8068444	Symbol	DFLT_LEFT_MARGIN		8068395						
ANR	8068445	Symbol	pmar		8068395						
ANR	8068446	Symbol	* pcs		8068395						
ANR	8068447	Symbol	pcs -> xfm_state . pd_size		8068395						
ANR	8068448	Symbol	DFLT_RIGHT_MARGIN		8068395						
ANR	8068449	Function	reset_margins	332:0:11875:12029							
ANR	8068450	FunctionDef	"reset_margins (pcl_state_t * pcs , bool for_passthrough)"		8068449	0					
ANR	8068451	CompoundStatement		334:0:11942:12029	8068449	0					
ANR	8068452	ExpressionStatement	reset_horizontal_margins ( pcs )	335:4:11948:11977	8068449	0	True				
ANR	8068453	CallExpression	reset_horizontal_margins ( pcs )		8068449	0					
ANR	8068454	Callee	reset_horizontal_margins		8068449	0					
ANR	8068455	Identifier	reset_horizontal_margins		8068449	0					
ANR	8068456	ArgumentList	pcs		8068449	1					
ANR	8068457	Argument	pcs		8068449	0					
ANR	8068458	Identifier	pcs		8068449	0					
ANR	8068459	ExpressionStatement	"reset_vertical_margins ( pcs , for_passthrough )"	336:4:11983:12027	8068449	1	True				
ANR	8068460	CallExpression	"reset_vertical_margins ( pcs , for_passthrough )"		8068449	0					
ANR	8068461	Callee	reset_vertical_margins		8068449	0					
ANR	8068462	Identifier	reset_vertical_margins		8068449	0					
ANR	8068463	ArgumentList	pcs		8068449	1					
ANR	8068464	Argument	pcs		8068449	0					
ANR	8068465	Identifier	pcs		8068449	0					
ANR	8068466	Argument	for_passthrough		8068449	1					
ANR	8068467	Identifier	for_passthrough		8068449	0					
ANR	8068468	ReturnType	static void		8068449	1					
ANR	8068469	Identifier	reset_margins		8068449	2					
ANR	8068470	ParameterList	"pcl_state_t * pcs , bool for_passthrough"		8068449	3					
ANR	8068471	Parameter	pcl_state_t * pcs	333:14:11901:11917	8068449	0	True				
ANR	8068472	ParameterType	pcl_state_t *		8068449	0					
ANR	8068473	Identifier	pcs		8068449	1					
ANR	8068474	Parameter	bool for_passthrough	333:33:11920:11939	8068449	1	True				
ANR	8068475	ParameterType	bool		8068449	0					
ANR	8068476	Identifier	for_passthrough		8068449	1					
ANR	8068477	CFGEntryNode	ENTRY		8068449		True				
ANR	8068478	CFGExitNode	EXIT		8068449		True				
ANR	8068479	Symbol	pcs		8068449						
ANR	8068480	Symbol	for_passthrough		8068449						
ANR	8068481	Function	new_page_size	346:0:12287:14749							
ANR	8068482	FunctionDef	"new_page_size (pcl_state_t * pcs , const pcl_paper_size_t * psize , bool reset_initial , bool for_passthrough)"		8068481	0					
ANR	8068483	CompoundStatement		350:0:12433:14749	8068481	0					
ANR	8068484	IdentifierDeclStatement	double width_pts = psize -> width * 0.01 ;	351:4:12439:12477	8068481	0	True				
ANR	8068485	IdentifierDecl	width_pts = psize -> width * 0.01		8068481	0					
ANR	8068486	IdentifierDeclType	double		8068481	0					
ANR	8068487	Identifier	width_pts		8068481	1					
ANR	8068488	AssignmentExpression	width_pts = psize -> width * 0.01		8068481	2		=			
ANR	8068489	Identifier	width_pts		8068481	0					
ANR	8068490	MultiplicativeExpression	psize -> width * 0.01		8068481	1		*			
ANR	8068491	PtrMemberAccess	psize -> width		8068481	0					
ANR	8068492	Identifier	psize		8068481	0					
ANR	8068493	Identifier	width		8068481	1					
ANR	8068494	PrimaryExpression	0.01		8068481	1					
ANR	8068495	IdentifierDeclStatement	double height_pts = psize -> height * 0.01 ;	352:4:12483:12523	8068481	1	True				
ANR	8068496	IdentifierDecl	height_pts = psize -> height * 0.01		8068481	0					
ANR	8068497	IdentifierDeclType	double		8068481	0					
ANR	8068498	Identifier	height_pts		8068481	1					
ANR	8068499	AssignmentExpression	height_pts = psize -> height * 0.01		8068481	2		=			
ANR	8068500	Identifier	height_pts		8068481	0					
ANR	8068501	MultiplicativeExpression	psize -> height * 0.01		8068481	1		*			
ANR	8068502	PtrMemberAccess	psize -> height		8068481	0					
ANR	8068503	Identifier	psize		8068481	0					
ANR	8068504	Identifier	height		8068481	1					
ANR	8068505	PrimaryExpression	0.01		8068481	1					
ANR	8068506	IdentifierDeclStatement	float page_size [ 2 ] ;	353:4:12529:12547	8068481	2	True				
ANR	8068507	IdentifierDecl	page_size [ 2 ]		8068481	0					
ANR	8068508	IdentifierDeclType	float [ 2 ]		8068481	0					
ANR	8068509	Identifier	page_size		8068481	1					
ANR	8068510	PrimaryExpression	2		8068481	2					
ANR	8068511	IdentifierDeclStatement	float old_page_size [ 2 ] ;	354:4:12553:12575	8068481	3	True				
ANR	8068512	IdentifierDecl	old_page_size [ 2 ]		8068481	0					
ANR	8068513	IdentifierDeclType	float [ 2 ]		8068481	0					
ANR	8068514	Identifier	old_page_size		8068481	1					
ANR	8068515	PrimaryExpression	2		8068481	2					
ANR	8068516	IdentifierDeclStatement	gs_gstate * pgs = pcs -> pgs ;	355:4:12581:12606	8068481	4	True				
ANR	8068517	IdentifierDecl	* pgs = pcs -> pgs		8068481	0					
ANR	8068518	IdentifierDeclType	gs_gstate *		8068481	0					
ANR	8068519	Identifier	pgs		8068481	1					
ANR	8068520	AssignmentExpression	* pgs = pcs -> pgs		8068481	2		=			
ANR	8068521	Identifier	pgs		8068481	0					
ANR	8068522	PtrMemberAccess	pcs -> pgs		8068481	1					
ANR	8068523	Identifier	pcs		8068481	0					
ANR	8068524	Identifier	pgs		8068481	1					
ANR	8068525	IdentifierDeclStatement	gs_matrix mat ;	356:4:12612:12625	8068481	5	True				
ANR	8068526	IdentifierDecl	mat		8068481	0					
ANR	8068527	IdentifierDeclType	gs_matrix		8068481	0					
ANR	8068528	Identifier	mat		8068481	1					
ANR	8068529	IdentifierDeclStatement	bool changed_page_size ;	357:4:12631:12653	8068481	6	True				
ANR	8068530	IdentifierDecl	changed_page_size		8068481	0					
ANR	8068531	IdentifierDeclType	bool		8068481	0					
ANR	8068532	Identifier	changed_page_size		8068481	1					
ANR	8068533	IdentifierDeclStatement	int code = 0 ;	358:4:12659:12671	8068481	7	True				
ANR	8068534	IdentifierDecl	code = 0		8068481	0					
ANR	8068535	IdentifierDeclType	int		8068481	0					
ANR	8068536	Identifier	code		8068481	1					
ANR	8068537	AssignmentExpression	code = 0		8068481	2		=			
ANR	8068538	Identifier	code		8068481	0					
ANR	8068539	PrimaryExpression	0		8068481	1					
ANR	8068540	ExpressionStatement	page_size [ 0 ] = width_pts	360:4:12678:12702	8068481	8	True				
ANR	8068541	AssignmentExpression	page_size [ 0 ] = width_pts		8068481	0		=			
ANR	8068542	ArrayIndexing	page_size [ 0 ]		8068481	0					
ANR	8068543	Identifier	page_size		8068481	0					
ANR	8068544	PrimaryExpression	0		8068481	1					
ANR	8068545	Identifier	width_pts		8068481	1					
ANR	8068546	ExpressionStatement	page_size [ 1 ] = height_pts	361:4:12708:12733	8068481	9	True				
ANR	8068547	AssignmentExpression	page_size [ 1 ] = height_pts		8068481	0		=			
ANR	8068548	ArrayIndexing	page_size [ 1 ]		8068481	0					
ANR	8068549	Identifier	page_size		8068481	0					
ANR	8068550	PrimaryExpression	1		8068481	1					
ANR	8068551	Identifier	height_pts		8068481	1					
ANR	8068552	ExpressionStatement	old_page_size [ 0 ] = gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ]	363:4:12740:12799	8068481	10	True				
ANR	8068553	AssignmentExpression	old_page_size [ 0 ] = gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ]		8068481	0		=			
ANR	8068554	ArrayIndexing	old_page_size [ 0 ]		8068481	0					
ANR	8068555	Identifier	old_page_size		8068481	0					
ANR	8068556	PrimaryExpression	0		8068481	1					
ANR	8068557	ArrayIndexing	gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ]		8068481	1					
ANR	8068558	PtrMemberAccess	gs_currentdevice ( pcs -> pgs ) -> MediaSize		8068481	0					
ANR	8068559	CallExpression	gs_currentdevice ( pcs -> pgs )		8068481	0					
ANR	8068560	Callee	gs_currentdevice		8068481	0					
ANR	8068561	Identifier	gs_currentdevice		8068481	0					
ANR	8068562	ArgumentList	pcs -> pgs		8068481	1					
ANR	8068563	Argument	pcs -> pgs		8068481	0					
ANR	8068564	PtrMemberAccess	pcs -> pgs		8068481	0					
ANR	8068565	Identifier	pcs		8068481	0					
ANR	8068566	Identifier	pgs		8068481	1					
ANR	8068567	Identifier	MediaSize		8068481	1					
ANR	8068568	PrimaryExpression	0		8068481	1					
ANR	8068569	ExpressionStatement	old_page_size [ 1 ] = gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ]	364:4:12805:12864	8068481	11	True				
ANR	8068570	AssignmentExpression	old_page_size [ 1 ] = gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ]		8068481	0		=			
ANR	8068571	ArrayIndexing	old_page_size [ 1 ]		8068481	0					
ANR	8068572	Identifier	old_page_size		8068481	0					
ANR	8068573	PrimaryExpression	1		8068481	1					
ANR	8068574	ArrayIndexing	gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ]		8068481	1					
ANR	8068575	PtrMemberAccess	gs_currentdevice ( pcs -> pgs ) -> MediaSize		8068481	0					
ANR	8068576	CallExpression	gs_currentdevice ( pcs -> pgs )		8068481	0					
ANR	8068577	Callee	gs_currentdevice		8068481	0					
ANR	8068578	Identifier	gs_currentdevice		8068481	0					
ANR	8068579	ArgumentList	pcs -> pgs		8068481	1					
ANR	8068580	Argument	pcs -> pgs		8068481	0					
ANR	8068581	PtrMemberAccess	pcs -> pgs		8068481	0					
ANR	8068582	Identifier	pcs		8068481	0					
ANR	8068583	Identifier	pgs		8068481	1					
ANR	8068584	Identifier	MediaSize		8068481	1					
ANR	8068585	PrimaryExpression	1		8068481	1					
ANR	8068586	ExpressionStatement	"code = put_param1_float_array ( pcs , ""PageSize"" , page_size )"	366:4:12871:12928	8068481	12	True				
ANR	8068587	AssignmentExpression	"code = put_param1_float_array ( pcs , ""PageSize"" , page_size )"		8068481	0		=			
ANR	8068588	Identifier	code		8068481	0					
ANR	8068589	CallExpression	"put_param1_float_array ( pcs , ""PageSize"" , page_size )"		8068481	1					
ANR	8068590	Callee	put_param1_float_array		8068481	0					
ANR	8068591	Identifier	put_param1_float_array		8068481	0					
ANR	8068592	ArgumentList	pcs		8068481	1					
ANR	8068593	Argument	pcs		8068481	0					
ANR	8068594	Identifier	pcs		8068481	0					
ANR	8068595	Argument	"""PageSize"""		8068481	1					
ANR	8068596	PrimaryExpression	"""PageSize"""		8068481	0					
ANR	8068597	Argument	page_size		8068481	2					
ANR	8068598	Identifier	page_size		8068481	0					
ANR	8068599	IfStatement	if ( code < 0 )		8068481	13					
ANR	8068600	Condition	code < 0	367:8:12938:12945	8068481	0	True				
ANR	8068601	RelationalExpression	code < 0		8068481	0		<			
ANR	8068602	Identifier	code		8068481	0					
ANR	8068603	PrimaryExpression	0		8068481	1					
ANR	8068604	ReturnStatement	return code ;	367:18:12948:12959	8068481	1	True				
ANR	8068605	Identifier	code		8068481	0					
ANR	8068606	ExpressionStatement	"gs_setdefaultmatrix ( pgs , NULL )"	377:4:13280:13310	8068481	14	True				
ANR	8068607	CallExpression	"gs_setdefaultmatrix ( pgs , NULL )"		8068481	0					
ANR	8068608	Callee	gs_setdefaultmatrix		8068481	0					
ANR	8068609	Identifier	gs_setdefaultmatrix		8068481	0					
ANR	8068610	ArgumentList	pgs		8068481	1					
ANR	8068611	Argument	pgs		8068481	0					
ANR	8068612	Identifier	pgs		8068481	0					
ANR	8068613	Argument	NULL		8068481	1					
ANR	8068614	Identifier	NULL		8068481	0					
ANR	8068615	ExpressionStatement	gs_initmatrix ( pgs )	378:4:13316:13334	8068481	15	True				
ANR	8068616	CallExpression	gs_initmatrix ( pgs )		8068481	0					
ANR	8068617	Callee	gs_initmatrix		8068481	0					
ANR	8068618	Identifier	gs_initmatrix		8068481	0					
ANR	8068619	ArgumentList	pgs		8068481	1					
ANR	8068620	Argument	pgs		8068481	0					
ANR	8068621	Identifier	pgs		8068481	0					
ANR	8068622	ExpressionStatement	"gs_currentmatrix ( pgs , & mat )"	379:4:13340:13367	8068481	16	True				
ANR	8068623	CallExpression	"gs_currentmatrix ( pgs , & mat )"		8068481	0					
ANR	8068624	Callee	gs_currentmatrix		8068481	0					
ANR	8068625	Identifier	gs_currentmatrix		8068481	0					
ANR	8068626	ArgumentList	pgs		8068481	1					
ANR	8068627	Argument	pgs		8068481	0					
ANR	8068628	Identifier	pgs		8068481	0					
ANR	8068629	Argument	& mat		8068481	1					
ANR	8068630	UnaryOperationExpression	& mat		8068481	0					
ANR	8068631	UnaryOperator	&		8068481	0					
ANR	8068632	Identifier	mat		8068481	1					
ANR	8068633	IfStatement	if ( pcs -> personality != rtl )		8068481	17					
ANR	8068634	Condition	pcs -> personality != rtl	381:8:13378:13400	8068481	0	True				
ANR	8068635	EqualityExpression	pcs -> personality != rtl		8068481	0		!=			
ANR	8068636	PtrMemberAccess	pcs -> personality		8068481	0					
ANR	8068637	Identifier	pcs		8068481	0					
ANR	8068638	Identifier	personality		8068481	1					
ANR	8068639	Identifier	rtl		8068481	1					
ANR	8068640	CompoundStatement		32:33:969:969	8068481	1					
ANR	8068641	ExpressionStatement	"gs_matrix_translate ( & mat , 0.0 , height_pts , & mat )"	382:8:13413:13461	8068481	0	True				
ANR	8068642	CallExpression	"gs_matrix_translate ( & mat , 0.0 , height_pts , & mat )"		8068481	0					
ANR	8068643	Callee	gs_matrix_translate		8068481	0					
ANR	8068644	Identifier	gs_matrix_translate		8068481	0					
ANR	8068645	ArgumentList	& mat		8068481	1					
ANR	8068646	Argument	& mat		8068481	0					
ANR	8068647	UnaryOperationExpression	& mat		8068481	0					
ANR	8068648	UnaryOperator	&		8068481	0					
ANR	8068649	Identifier	mat		8068481	1					
ANR	8068650	Argument	0.0		8068481	1					
ANR	8068651	PrimaryExpression	0.0		8068481	0					
ANR	8068652	Argument	height_pts		8068481	2					
ANR	8068653	Identifier	height_pts		8068481	0					
ANR	8068654	Argument	& mat		8068481	3					
ANR	8068655	UnaryOperationExpression	& mat		8068481	0					
ANR	8068656	UnaryOperator	&		8068481	0					
ANR	8068657	Identifier	mat		8068481	1					
ANR	8068658	ExpressionStatement	"gs_matrix_scale ( & mat , 0.01 , - 0.01 , & mat )"	383:8:13471:13511	8068481	1	True				
ANR	8068659	CallExpression	"gs_matrix_scale ( & mat , 0.01 , - 0.01 , & mat )"		8068481	0					
ANR	8068660	Callee	gs_matrix_scale		8068481	0					
ANR	8068661	Identifier	gs_matrix_scale		8068481	0					
ANR	8068662	ArgumentList	& mat		8068481	1					
ANR	8068663	Argument	& mat		8068481	0					
ANR	8068664	UnaryOperationExpression	& mat		8068481	0					
ANR	8068665	UnaryOperator	&		8068481	0					
ANR	8068666	Identifier	mat		8068481	1					
ANR	8068667	Argument	0.01		8068481	1					
ANR	8068668	PrimaryExpression	0.01		8068481	0					
ANR	8068669	Argument	- 0.01		8068481	2					
ANR	8068670	UnaryOperationExpression	- 0.01		8068481	0					
ANR	8068671	UnaryOperator	-		8068481	0					
ANR	8068672	PrimaryExpression	0.01		8068481	1					
ANR	8068673	Argument	& mat		8068481	3					
ANR	8068674	UnaryOperationExpression	& mat		8068481	0					
ANR	8068675	UnaryOperator	&		8068481	0					
ANR	8068676	Identifier	mat		8068481	1					
ANR	8068677	ElseStatement	else		8068481	0					
ANR	8068678	CompoundStatement		35:11:1090:1090	8068481	0					
ANR	8068679	ExpressionStatement	"gs_matrix_rotate ( & mat , - 90 , & mat )"	385:8:13534:13567	8068481	0	True				
ANR	8068680	CallExpression	"gs_matrix_rotate ( & mat , - 90 , & mat )"		8068481	0					
ANR	8068681	Callee	gs_matrix_rotate		8068481	0					
ANR	8068682	Identifier	gs_matrix_rotate		8068481	0					
ANR	8068683	ArgumentList	& mat		8068481	1					
ANR	8068684	Argument	& mat		8068481	0					
ANR	8068685	UnaryOperationExpression	& mat		8068481	0					
ANR	8068686	UnaryOperator	&		8068481	0					
ANR	8068687	Identifier	mat		8068481	1					
ANR	8068688	Argument	- 90		8068481	1					
ANR	8068689	UnaryOperationExpression	- 90		8068481	0					
ANR	8068690	UnaryOperator	-		8068481	0					
ANR	8068691	PrimaryExpression	90		8068481	1					
ANR	8068692	Argument	& mat		8068481	2					
ANR	8068693	UnaryOperationExpression	& mat		8068481	0					
ANR	8068694	UnaryOperator	&		8068481	0					
ANR	8068695	Identifier	mat		8068481	1					
ANR	8068696	ExpressionStatement	"gs_matrix_scale ( & mat , - 0.01 , 0.01 , & mat )"	386:8:13577:13617	8068481	1	True				
ANR	8068697	CallExpression	"gs_matrix_scale ( & mat , - 0.01 , 0.01 , & mat )"		8068481	0					
ANR	8068698	Callee	gs_matrix_scale		8068481	0					
ANR	8068699	Identifier	gs_matrix_scale		8068481	0					
ANR	8068700	ArgumentList	& mat		8068481	1					
ANR	8068701	Argument	& mat		8068481	0					
ANR	8068702	UnaryOperationExpression	& mat		8068481	0					
ANR	8068703	UnaryOperator	&		8068481	0					
ANR	8068704	Identifier	mat		8068481	1					
ANR	8068705	Argument	- 0.01		8068481	1					
ANR	8068706	UnaryOperationExpression	- 0.01		8068481	0					
ANR	8068707	UnaryOperator	-		8068481	0					
ANR	8068708	PrimaryExpression	0.01		8068481	1					
ANR	8068709	Argument	0.01		8068481	2					
ANR	8068710	PrimaryExpression	0.01		8068481	0					
ANR	8068711	Argument	& mat		8068481	3					
ANR	8068712	UnaryOperationExpression	& mat		8068481	0					
ANR	8068713	UnaryOperator	&		8068481	0					
ANR	8068714	Identifier	mat		8068481	1					
ANR	8068715	ExpressionStatement	"gs_setdefaultmatrix ( pgs , & mat )"	389:4:13630:13660	8068481	18	True				
ANR	8068716	CallExpression	"gs_setdefaultmatrix ( pgs , & mat )"		8068481	0					
ANR	8068717	Callee	gs_setdefaultmatrix		8068481	0					
ANR	8068718	Identifier	gs_setdefaultmatrix		8068481	0					
ANR	8068719	ArgumentList	pgs		8068481	1					
ANR	8068720	Argument	pgs		8068481	0					
ANR	8068721	Identifier	pgs		8068481	0					
ANR	8068722	Argument	& mat		8068481	1					
ANR	8068723	UnaryOperationExpression	& mat		8068481	0					
ANR	8068724	UnaryOperator	&		8068481	0					
ANR	8068725	Identifier	mat		8068481	1					
ANR	8068726	ExpressionStatement	pcs -> xfm_state . paper_size = psize	390:4:13666:13699	8068481	19	True				
ANR	8068727	AssignmentExpression	pcs -> xfm_state . paper_size = psize		8068481	0		=			
ANR	8068728	MemberAccess	pcs -> xfm_state . paper_size		8068481	0					
ANR	8068729	PtrMemberAccess	pcs -> xfm_state		8068481	0					
ANR	8068730	Identifier	pcs		8068481	0					
ANR	8068731	Identifier	xfm_state		8068481	1					
ANR	8068732	Identifier	paper_size		8068481	1					
ANR	8068733	Identifier	psize		8068481	1					
ANR	8068734	ExpressionStatement	pcs -> overlay_enabled = false	391:4:13705:13733	8068481	20	True				
ANR	8068735	AssignmentExpression	pcs -> overlay_enabled = false		8068481	0		=			
ANR	8068736	PtrMemberAccess	pcs -> overlay_enabled		8068481	0					
ANR	8068737	Identifier	pcs		8068481	0					
ANR	8068738	Identifier	overlay_enabled		8068481	1					
ANR	8068739	Identifier	false		8068481	1					
ANR	8068740	ExpressionStatement	"update_xfm_state ( pcs , reset_initial )"	392:4:13739:13775	8068481	21	True				
ANR	8068741	CallExpression	"update_xfm_state ( pcs , reset_initial )"		8068481	0					
ANR	8068742	Callee	update_xfm_state		8068481	0					
ANR	8068743	Identifier	update_xfm_state		8068481	0					
ANR	8068744	ArgumentList	pcs		8068481	1					
ANR	8068745	Argument	pcs		8068481	0					
ANR	8068746	Identifier	pcs		8068481	0					
ANR	8068747	Argument	reset_initial		8068481	1					
ANR	8068748	Identifier	reset_initial		8068481	0					
ANR	8068749	ExpressionStatement	"reset_margins ( pcs , for_passthrough )"	393:4:13781:13816	8068481	22	True				
ANR	8068750	CallExpression	"reset_margins ( pcs , for_passthrough )"		8068481	0					
ANR	8068751	Callee	reset_margins		8068481	0					
ANR	8068752	Identifier	reset_margins		8068481	0					
ANR	8068753	ArgumentList	pcs		8068481	1					
ANR	8068754	Argument	pcs		8068481	0					
ANR	8068755	Identifier	pcs		8068481	0					
ANR	8068756	Argument	for_passthrough		8068481	1					
ANR	8068757	Identifier	for_passthrough		8068481	0					
ANR	8068758	ExpressionStatement	changed_page_size = ! ( ( int ) old_page_size [ 0 ] == pcs -> xfm_state . paper_size -> width / 100 && ( int ) old_page_size [ 1 ] == pcs -> xfm_state . paper_size -> height / 100 )	396:4:13881:14058	8068481	23	True				
ANR	8068759	AssignmentExpression	changed_page_size = ! ( ( int ) old_page_size [ 0 ] == pcs -> xfm_state . paper_size -> width / 100 && ( int ) old_page_size [ 1 ] == pcs -> xfm_state . paper_size -> height / 100 )		8068481	0		=			
ANR	8068760	Identifier	changed_page_size		8068481	0					
ANR	8068761	UnaryOperationExpression	! ( ( int ) old_page_size [ 0 ] == pcs -> xfm_state . paper_size -> width / 100 && ( int ) old_page_size [ 1 ] == pcs -> xfm_state . paper_size -> height / 100 )		8068481	1					
ANR	8068762	UnaryOperator	!		8068481	0					
ANR	8068763	AndExpression	( int ) old_page_size [ 0 ] == pcs -> xfm_state . paper_size -> width / 100 && ( int ) old_page_size [ 1 ] == pcs -> xfm_state . paper_size -> height / 100		8068481	1		&&			
ANR	8068764	EqualityExpression	( int ) old_page_size [ 0 ] == pcs -> xfm_state . paper_size -> width / 100		8068481	0		==			
ANR	8068765	CastExpression	( int ) old_page_size [ 0 ]		8068481	0					
ANR	8068766	CastTarget	int		8068481	0					
ANR	8068767	ArrayIndexing	old_page_size [ 0 ]		8068481	1					
ANR	8068768	Identifier	old_page_size		8068481	0					
ANR	8068769	PrimaryExpression	0		8068481	1					
ANR	8068770	MultiplicativeExpression	pcs -> xfm_state . paper_size -> width / 100		8068481	1		/			
ANR	8068771	PtrMemberAccess	pcs -> xfm_state . paper_size -> width		8068481	0					
ANR	8068772	MemberAccess	pcs -> xfm_state . paper_size		8068481	0					
ANR	8068773	PtrMemberAccess	pcs -> xfm_state		8068481	0					
ANR	8068774	Identifier	pcs		8068481	0					
ANR	8068775	Identifier	xfm_state		8068481	1					
ANR	8068776	Identifier	paper_size		8068481	1					
ANR	8068777	Identifier	width		8068481	1					
ANR	8068778	PrimaryExpression	100		8068481	1					
ANR	8068779	EqualityExpression	( int ) old_page_size [ 1 ] == pcs -> xfm_state . paper_size -> height / 100		8068481	1		==			
ANR	8068780	CastExpression	( int ) old_page_size [ 1 ]		8068481	0					
ANR	8068781	CastTarget	int		8068481	0					
ANR	8068782	ArrayIndexing	old_page_size [ 1 ]		8068481	1					
ANR	8068783	Identifier	old_page_size		8068481	0					
ANR	8068784	PrimaryExpression	1		8068481	1					
ANR	8068785	MultiplicativeExpression	pcs -> xfm_state . paper_size -> height / 100		8068481	1		/			
ANR	8068786	PtrMemberAccess	pcs -> xfm_state . paper_size -> height		8068481	0					
ANR	8068787	MemberAccess	pcs -> xfm_state . paper_size		8068481	0					
ANR	8068788	PtrMemberAccess	pcs -> xfm_state		8068481	0					
ANR	8068789	Identifier	pcs		8068481	0					
ANR	8068790	Identifier	xfm_state		8068481	1					
ANR	8068791	Identifier	paper_size		8068481	1					
ANR	8068792	Identifier	height		8068481	1					
ANR	8068793	PrimaryExpression	100		8068481	1					
ANR	8068794	ExpressionStatement	pcs -> underline_enabled = false	403:4:14185:14215	8068481	24	True				
ANR	8068795	AssignmentExpression	pcs -> underline_enabled = false		8068481	0		=			
ANR	8068796	PtrMemberAccess	pcs -> underline_enabled		8068481	0					
ANR	8068797	Identifier	pcs		8068481	0					
ANR	8068798	Identifier	underline_enabled		8068481	1					
ANR	8068799	Identifier	false		8068481	1					
ANR	8068800	ExpressionStatement	pcl_home_cursor ( pcs )	404:4:14221:14241	8068481	25	True				
ANR	8068801	CallExpression	pcl_home_cursor ( pcs )		8068481	0					
ANR	8068802	Callee	pcl_home_cursor		8068481	0					
ANR	8068803	Identifier	pcl_home_cursor		8068481	0					
ANR	8068804	ArgumentList	pcs		8068481	1					
ANR	8068805	Argument	pcs		8068481	0					
ANR	8068806	Identifier	pcs		8068481	0					
ANR	8068807	ExpressionStatement	pcs -> cursor_moved = false	408:4:14317:14342	8068481	26	True				
ANR	8068808	AssignmentExpression	pcs -> cursor_moved = false		8068481	0		=			
ANR	8068809	PtrMemberAccess	pcs -> cursor_moved		8068481	0					
ANR	8068810	Identifier	pcs		8068481	0					
ANR	8068811	Identifier	cursor_moved		8068481	1					
ANR	8068812	Identifier	false		8068481	1					
ANR	8068813	ExpressionStatement	pcl_xfm_reset_pcl_pat_ref_pt ( pcs )	410:4:14349:14382	8068481	27	True				
ANR	8068814	CallExpression	pcl_xfm_reset_pcl_pat_ref_pt ( pcs )		8068481	0					
ANR	8068815	Callee	pcl_xfm_reset_pcl_pat_ref_pt		8068481	0					
ANR	8068816	Identifier	pcl_xfm_reset_pcl_pat_ref_pt		8068481	0					
ANR	8068817	ArgumentList	pcs		8068481	1					
ANR	8068818	Argument	pcs		8068481	0					
ANR	8068819	Identifier	pcs		8068481	0					
ANR	8068820	IfStatement	if ( ! reset_initial )		8068481	28					
ANR	8068821	Condition	! reset_initial	412:8:14393:14406	8068481	0	True				
ANR	8068822	UnaryOperationExpression	! reset_initial		8068481	0					
ANR	8068823	UnaryOperator	!		8068481	0					
ANR	8068824	Identifier	reset_initial		8068481	1					
ANR	8068825	ExpressionStatement	"code = hpgl_do_reset ( pcs , pcl_reset_page_params )"	413:8:14417:14465	8068481	1	True				
ANR	8068826	AssignmentExpression	"code = hpgl_do_reset ( pcs , pcl_reset_page_params )"		8068481	0		=			
ANR	8068827	Identifier	code		8068481	0					
ANR	8068828	CallExpression	"hpgl_do_reset ( pcs , pcl_reset_page_params )"		8068481	1					
ANR	8068829	Callee	hpgl_do_reset		8068481	0					
ANR	8068830	Identifier	hpgl_do_reset		8068481	0					
ANR	8068831	ArgumentList	pcs		8068481	1					
ANR	8068832	Argument	pcs		8068481	0					
ANR	8068833	Identifier	pcs		8068481	0					
ANR	8068834	Argument	pcl_reset_page_params		8068481	1					
ANR	8068835	Identifier	pcl_reset_page_params		8068481	0					
ANR	8068836	IfStatement	if ( code < 0 )		8068481	29					
ANR	8068837	Condition	code < 0	414:8:14475:14482	8068481	0	True				
ANR	8068838	RelationalExpression	code < 0		8068481	0		<			
ANR	8068839	Identifier	code		8068481	0					
ANR	8068840	PrimaryExpression	0		8068481	1					
ANR	8068841	ReturnStatement	return code ;	414:18:14485:14496	8068481	1	True				
ANR	8068842	Identifier	code		8068481	0					
ANR	8068843	IfStatement	if ( pcs -> end_page == pcl_end_page_top )		8068481	30					
ANR	8068844	Condition	pcs -> end_page == pcl_end_page_top	416:8:14507:14539	8068481	0	True				
ANR	8068845	EqualityExpression	pcs -> end_page == pcl_end_page_top		8068481	0		==			
ANR	8068846	PtrMemberAccess	pcs -> end_page		8068481	0					
ANR	8068847	Identifier	pcs		8068481	0					
ANR	8068848	Identifier	end_page		8068481	1					
ANR	8068849	Identifier	pcl_end_page_top		8068481	1					
ANR	8068850	CompoundStatement		67:43:2108:2108	8068481	1					
ANR	8068851	IfStatement	if ( pcs -> page_marked || changed_page_size )		8068481	0					
ANR	8068852	Condition	pcs -> page_marked || changed_page_size	417:12:14593:14629	8068481	0	True				
ANR	8068853	OrExpression	pcs -> page_marked || changed_page_size		8068481	0		||			
ANR	8068854	PtrMemberAccess	pcs -> page_marked		8068481	0					
ANR	8068855	Identifier	pcs		8068481	0					
ANR	8068856	Identifier	page_marked		8068481	1					
ANR	8068857	Identifier	changed_page_size		8068481	1					
ANR	8068858	CompoundStatement		68:51:2198:2198	8068481	1					
ANR	8068859	ExpressionStatement	code = gs_erasepage ( pcs -> pgs )	418:12:14646:14675	8068481	0	True				
ANR	8068860	AssignmentExpression	code = gs_erasepage ( pcs -> pgs )		8068481	0		=			
ANR	8068861	Identifier	code		8068481	0					
ANR	8068862	CallExpression	gs_erasepage ( pcs -> pgs )		8068481	1					
ANR	8068863	Callee	gs_erasepage		8068481	0					
ANR	8068864	Identifier	gs_erasepage		8068481	0					
ANR	8068865	ArgumentList	pcs -> pgs		8068481	1					
ANR	8068866	Argument	pcs -> pgs		8068481	0					
ANR	8068867	PtrMemberAccess	pcs -> pgs		8068481	0					
ANR	8068868	Identifier	pcs		8068481	0					
ANR	8068869	Identifier	pgs		8068481	1					
ANR	8068870	ExpressionStatement	pcs -> page_marked = false	419:12:14689:14713	8068481	1	True				
ANR	8068871	AssignmentExpression	pcs -> page_marked = false		8068481	0		=			
ANR	8068872	PtrMemberAccess	pcs -> page_marked		8068481	0					
ANR	8068873	Identifier	pcs		8068481	0					
ANR	8068874	Identifier	page_marked		8068481	1					
ANR	8068875	Identifier	false		8068481	1					
ANR	8068876	ReturnStatement	return code ;	423:4:14736:14747	8068481	31	True				
ANR	8068877	Identifier	code		8068481	0					
ANR	8068878	ReturnType	static int		8068481	1					
ANR	8068879	Identifier	new_page_size		8068481	2					
ANR	8068880	ParameterList	"pcl_state_t * pcs , const pcl_paper_size_t * psize , bool reset_initial , bool for_passthrough"		8068481	3					
ANR	8068881	Parameter	pcl_state_t * pcs	347:14:12312:12328	8068481	0	True				
ANR	8068882	ParameterType	pcl_state_t *		8068481	0					
ANR	8068883	Identifier	pcs		8068481	1					
ANR	8068884	Parameter	const pcl_paper_size_t * psize	348:14:12345:12374	8068481	1	True				
ANR	8068885	ParameterType	const pcl_paper_size_t *		8068481	0					
ANR	8068886	Identifier	psize		8068481	1					
ANR	8068887	Parameter	bool reset_initial	349:14:12391:12408	8068481	2	True				
ANR	8068888	ParameterType	bool		8068481	0					
ANR	8068889	Identifier	reset_initial		8068481	1					
ANR	8068890	Parameter	bool for_passthrough	349:34:12411:12430	8068481	3	True				
ANR	8068891	ParameterType	bool		8068481	0					
ANR	8068892	Identifier	for_passthrough		8068481	1					
ANR	8068893	CFGEntryNode	ENTRY		8068481		True				
ANR	8068894	CFGExitNode	EXIT		8068481		True				
ANR	8068895	Symbol	& mat		8068481						
ANR	8068896	Symbol	code		8068481						
ANR	8068897	Symbol	width_pts		8068481						
ANR	8068898	Symbol	pcs -> xfm_state . paper_size -> height		8068481						
ANR	8068899	Symbol	* pcs -> xfm_state		8068481						
ANR	8068900	Symbol	gs_currentdevice		8068481						
ANR	8068901	Symbol	* pcs		8068481						
ANR	8068902	Symbol	reset_initial		8068481						
ANR	8068903	Symbol	height_pts		8068481						
ANR	8068904	Symbol	pcl_reset_page_params		8068481						
ANR	8068905	Symbol	pcs -> page_marked		8068481						
ANR	8068906	Symbol	psize -> width		8068481						
ANR	8068907	Symbol	changed_page_size		8068481						
ANR	8068908	Symbol	psize		8068481						
ANR	8068909	Symbol	pcs -> xfm_state		8068481						
ANR	8068910	Symbol	* gs_currentdevice		8068481						
ANR	8068911	Symbol	* gs_currentdevice ( pcs -> pgs ) -> MediaSize		8068481						
ANR	8068912	Symbol	* * gs_currentdevice		8068481						
ANR	8068913	Symbol	pcs -> underline_enabled		8068481						
ANR	8068914	Symbol	pcs -> cursor_moved		8068481						
ANR	8068915	Symbol	gs_erasepage		8068481						
ANR	8068916	Symbol	* page_size		8068481						
ANR	8068917	Symbol	* old_page_size		8068481						
ANR	8068918	Symbol	pgs		8068481						
ANR	8068919	Symbol	hpgl_do_reset		8068481						
ANR	8068920	Symbol	page_size		8068481						
ANR	8068921	Symbol	old_page_size		8068481						
ANR	8068922	Symbol	pcs -> xfm_state . paper_size -> width		8068481						
ANR	8068923	Symbol	pcs -> personality		8068481						
ANR	8068924	Symbol	pcs		8068481						
ANR	8068925	Symbol	mat		8068481						
ANR	8068926	Symbol	NULL		8068481						
ANR	8068927	Symbol	pcl_end_page_top		8068481						
ANR	8068928	Symbol	pcs -> pgs		8068481						
ANR	8068929	Symbol	false		8068481						
ANR	8068930	Symbol	rtl		8068481						
ANR	8068931	Symbol	put_param1_float_array		8068481						
ANR	8068932	Symbol	pcs -> xfm_state . paper_size		8068481						
ANR	8068933	Symbol	* * pcs		8068481						
ANR	8068934	Symbol	pcs -> end_page		8068481						
ANR	8068935	Symbol	for_passthrough		8068481						
ANR	8068936	Symbol	gs_currentdevice ( pcs -> pgs ) -> MediaSize		8068481						
ANR	8068937	Symbol	psize -> height		8068481						
ANR	8068938	Symbol	* psize		8068481						
ANR	8068939	Symbol	pcs -> overlay_enabled		8068481						
ANR	8068940	Symbol	* pcs -> xfm_state . paper_size		8068481						
ANR	8068941	DeclStmt									
ANR	8068942	Decl							pcl_paper_type_t	pcl_paper_type_t [ ]	paper_types_proto
ANR	8068943	DeclStmt									
ANR	8068944	Decl							const int	const int	pcl_paper_type_count
ANR	8068945	Function	new_logical_page	462:0:16064:16428							
ANR	8068946	FunctionDef	"new_logical_page (pcl_state_t * pcs , int lp_orient , const pcl_paper_size_t * psize , bool reset_initial , bool for_passthrough)"		8068945	0					
ANR	8068947	CompoundStatement		467:0:16244:16428	8068945	0					
ANR	8068948	IdentifierDeclStatement	pcl_xfm_state_t * pxfmst = & ( pcs -> xfm_state ) ;	468:4:16250:16293	8068945	0	True				
ANR	8068949	IdentifierDecl	* pxfmst = & ( pcs -> xfm_state )		8068945	0					
ANR	8068950	IdentifierDeclType	pcl_xfm_state_t *		8068945	0					
ANR	8068951	Identifier	pxfmst		8068945	1					
ANR	8068952	AssignmentExpression	* pxfmst = & ( pcs -> xfm_state )		8068945	2		=			
ANR	8068953	Identifier	pxfmst		8068945	0					
ANR	8068954	UnaryOperationExpression	& ( pcs -> xfm_state )		8068945	1					
ANR	8068955	UnaryOperator	&		8068945	0					
ANR	8068956	PtrMemberAccess	pcs -> xfm_state		8068945	1					
ANR	8068957	Identifier	pcs		8068945	0					
ANR	8068958	Identifier	xfm_state		8068945	1					
ANR	8068959	ExpressionStatement	pxfmst -> lp_orient = lp_orient	470:4:16300:16329	8068945	1	True				
ANR	8068960	AssignmentExpression	pxfmst -> lp_orient = lp_orient		8068945	0		=			
ANR	8068961	PtrMemberAccess	pxfmst -> lp_orient		8068945	0					
ANR	8068962	Identifier	pxfmst		8068945	0					
ANR	8068963	Identifier	lp_orient		8068945	1					
ANR	8068964	Identifier	lp_orient		8068945	1					
ANR	8068965	ExpressionStatement	pxfmst -> print_dir = 0	471:4:16335:16356	8068945	2	True				
ANR	8068966	AssignmentExpression	pxfmst -> print_dir = 0		8068945	0		=			
ANR	8068967	PtrMemberAccess	pxfmst -> print_dir		8068945	0					
ANR	8068968	Identifier	pxfmst		8068945	0					
ANR	8068969	Identifier	print_dir		8068945	1					
ANR	8068970	PrimaryExpression	0		8068945	1					
ANR	8068971	ReturnStatement	"return new_page_size ( pcs , psize , reset_initial , for_passthrough ) ;"	472:4:16362:16426	8068945	3	True				
ANR	8068972	CallExpression	"new_page_size ( pcs , psize , reset_initial , for_passthrough )"		8068945	0					
ANR	8068973	Callee	new_page_size		8068945	0					
ANR	8068974	Identifier	new_page_size		8068945	0					
ANR	8068975	ArgumentList	pcs		8068945	1					
ANR	8068976	Argument	pcs		8068945	0					
ANR	8068977	Identifier	pcs		8068945	0					
ANR	8068978	Argument	psize		8068945	1					
ANR	8068979	Identifier	psize		8068945	0					
ANR	8068980	Argument	reset_initial		8068945	2					
ANR	8068981	Identifier	reset_initial		8068945	0					
ANR	8068982	Argument	for_passthrough		8068945	3					
ANR	8068983	Identifier	for_passthrough		8068945	0					
ANR	8068984	ReturnType	int		8068945	1					
ANR	8068985	Identifier	new_logical_page		8068945	2					
ANR	8068986	ParameterList	"pcl_state_t * pcs , int lp_orient , const pcl_paper_size_t * psize , bool reset_initial , bool for_passthrough"		8068945	3					
ANR	8068987	Parameter	pcl_state_t * pcs	463:17:16085:16101	8068945	0	True				
ANR	8068988	ParameterType	pcl_state_t *		8068945	0					
ANR	8068989	Identifier	pcs		8068945	1					
ANR	8068990	Parameter	int lp_orient	464:17:16121:16133	8068945	1	True				
ANR	8068991	ParameterType	int		8068945	0					
ANR	8068992	Identifier	lp_orient		8068945	1					
ANR	8068993	Parameter	const pcl_paper_size_t * psize	465:17:16153:16182	8068945	2	True				
ANR	8068994	ParameterType	const pcl_paper_size_t *		8068945	0					
ANR	8068995	Identifier	psize		8068945	1					
ANR	8068996	Parameter	bool reset_initial	466:17:16202:16219	8068945	3	True				
ANR	8068997	ParameterType	bool		8068945	0					
ANR	8068998	Identifier	reset_initial		8068945	1					
ANR	8068999	Parameter	bool for_passthrough	466:37:16222:16241	8068945	4	True				
ANR	8069000	ParameterType	bool		8068945	0					
ANR	8069001	Identifier	for_passthrough		8068945	1					
ANR	8069002	CFGEntryNode	ENTRY		8068945		True				
ANR	8069003	CFGExitNode	EXIT		8068945		True				
ANR	8069004	Symbol	pxfmst -> print_dir		8068945						
ANR	8069005	Symbol	pcs		8068945						
ANR	8069006	Symbol	psize		8068945						
ANR	8069007	Symbol	new_page_size		8068945						
ANR	8069008	Symbol	lp_orient		8068945						
ANR	8069009	Symbol	* pxfmst		8068945						
ANR	8069010	Symbol	for_passthrough		8068945						
ANR	8069011	Symbol	pxfmst -> lp_orient		8068945						
ANR	8069012	Symbol	pxfmst		8068945						
ANR	8069013	Symbol	& pcs -> xfm_state		8068945						
ANR	8069014	Symbol	reset_initial		8068945						
ANR	8069015	Function	pcl_new_logical_page_for_passthrough	476:25:16457:17128							
ANR	8069016	FunctionDef	"pcl_new_logical_page_for_passthrough (pcl_state_t * pcs , int orient , gs_point * pdims)"		8069015	0					
ANR	8069017	CompoundStatement		481:0:16603:17128	8069015	0					
ANR	8069018	IdentifierDeclStatement	int i ;	482:4:16609:16614	8069015	0	True				
ANR	8069019	IdentifierDecl	i		8069015	0					
ANR	8069020	IdentifierDeclType	int		8069015	0					
ANR	8069021	Identifier	i		8069015	1					
ANR	8069022	IdentifierDeclStatement	pcl_paper_size_t * psize ;	483:4:16620:16643	8069015	1	True				
ANR	8069023	IdentifierDecl	* psize		8069015	0					
ANR	8069024	IdentifierDeclType	pcl_paper_size_t *		8069015	0					
ANR	8069025	Identifier	psize		8069015	1					
ANR	8069026	IdentifierDeclStatement	coord cp_width = ( coord ) ( pdims -> x * 100 + 0.5 ) ;	485:4:16681:16728	8069015	2	True				
ANR	8069027	IdentifierDecl	cp_width = ( coord ) ( pdims -> x * 100 + 0.5 )		8069015	0					
ANR	8069028	IdentifierDeclType	coord		8069015	0					
ANR	8069029	Identifier	cp_width		8069015	1					
ANR	8069030	AssignmentExpression	cp_width = ( coord ) ( pdims -> x * 100 + 0.5 )		8069015	2		=			
ANR	8069031	Identifier	cp_width		8069015	0					
ANR	8069032	CastExpression	( coord ) ( pdims -> x * 100 + 0.5 )		8069015	1					
ANR	8069033	CastTarget	coord		8069015	0					
ANR	8069034	AdditiveExpression	pdims -> x * 100 + 0.5		8069015	1		+			
ANR	8069035	MultiplicativeExpression	pdims -> x * 100		8069015	0		*			
ANR	8069036	PtrMemberAccess	pdims -> x		8069015	0					
ANR	8069037	Identifier	pdims		8069015	0					
ANR	8069038	Identifier	x		8069015	1					
ANR	8069039	PrimaryExpression	100		8069015	1					
ANR	8069040	PrimaryExpression	0.5		8069015	1					
ANR	8069041	IdentifierDeclStatement	coord cp_height = ( coord ) ( pdims -> y * 100 + 0.5 ) ;	486:4:16734:16782	8069015	3	True				
ANR	8069042	IdentifierDecl	cp_height = ( coord ) ( pdims -> y * 100 + 0.5 )		8069015	0					
ANR	8069043	IdentifierDeclType	coord		8069015	0					
ANR	8069044	Identifier	cp_height		8069015	1					
ANR	8069045	AssignmentExpression	cp_height = ( coord ) ( pdims -> y * 100 + 0.5 )		8069015	2		=			
ANR	8069046	Identifier	cp_height		8069015	0					
ANR	8069047	CastExpression	( coord ) ( pdims -> y * 100 + 0.5 )		8069015	1					
ANR	8069048	CastTarget	coord		8069015	0					
ANR	8069049	AdditiveExpression	pdims -> y * 100 + 0.5		8069015	1		+			
ANR	8069050	MultiplicativeExpression	pdims -> y * 100		8069015	0		*			
ANR	8069051	PtrMemberAccess	pdims -> y		8069015	0					
ANR	8069052	Identifier	pdims		8069015	0					
ANR	8069053	Identifier	y		8069015	1					
ANR	8069054	PrimaryExpression	100		8069015	1					
ANR	8069055	PrimaryExpression	0.5		8069015	1					
ANR	8069056	IdentifierDeclStatement	bool found = false ;	487:4:16788:16806	8069015	4	True				
ANR	8069057	IdentifierDecl	found = false		8069015	0					
ANR	8069058	IdentifierDeclType	bool		8069015	0					
ANR	8069059	Identifier	found		8069015	1					
ANR	8069060	AssignmentExpression	found = false		8069015	2		=			
ANR	8069061	Identifier	false		8069015	0					
ANR	8069062	Identifier	false		8069015	1					
ANR	8069063	ForStatement	for ( i = 0 ; i < pcl_paper_type_count ; i ++ )		8069015	5					
ANR	8069064	ForInit	i = 0 ;	489:9:16818:16823	8069015	0	True				
ANR	8069065	AssignmentExpression	i = 0		8069015	0		=			
ANR	8069066	Identifier	i		8069015	0					
ANR	8069067	PrimaryExpression	0		8069015	1					
ANR	8069068	Condition	i < pcl_paper_type_count	489:16:16825:16848	8069015	1	True				
ANR	8069069	RelationalExpression	i < pcl_paper_type_count		8069015	0		<			
ANR	8069070	Identifier	i		8069015	0					
ANR	8069071	Identifier	pcl_paper_type_count		8069015	1					
ANR	8069072	PostIncDecOperationExpression	i ++	489:42:16851:16853	8069015	2	True				
ANR	8069073	Identifier	i		8069015	0					
ANR	8069074	IncDec	++		8069015	1					
ANR	8069075	CompoundStatement		9:47:252:252	8069015	3					
ANR	8069076	ExpressionStatement	psize = & ( PAPER_SIZES [ i ] . psize )	490:8:16866:16897	8069015	0	True				
ANR	8069077	AssignmentExpression	psize = & ( PAPER_SIZES [ i ] . psize )		8069015	0		=			
ANR	8069078	Identifier	psize		8069015	0					
ANR	8069079	UnaryOperationExpression	& ( PAPER_SIZES [ i ] . psize )		8069015	1					
ANR	8069080	UnaryOperator	&		8069015	0					
ANR	8069081	MemberAccess	PAPER_SIZES [ i ] . psize		8069015	1					
ANR	8069082	ArrayIndexing	PAPER_SIZES [ i ]		8069015	0					
ANR	8069083	Identifier	PAPER_SIZES		8069015	0					
ANR	8069084	Identifier	i		8069015	1					
ANR	8069085	Identifier	psize		8069015	1					
ANR	8069086	IfStatement	if ( psize -> width == cp_width && psize -> height == cp_height )		8069015	1					
ANR	8069087	Condition	psize -> width == cp_width && psize -> height == cp_height	491:12:16911:16964	8069015	0	True				
ANR	8069088	AndExpression	psize -> width == cp_width && psize -> height == cp_height		8069015	0		&&			
ANR	8069089	EqualityExpression	psize -> width == cp_width		8069015	0		==			
ANR	8069090	PtrMemberAccess	psize -> width		8069015	0					
ANR	8069091	Identifier	psize		8069015	0					
ANR	8069092	Identifier	width		8069015	1					
ANR	8069093	Identifier	cp_width		8069015	1					
ANR	8069094	EqualityExpression	psize -> height == cp_height		8069015	1		==			
ANR	8069095	PtrMemberAccess	psize -> height		8069015	0					
ANR	8069096	Identifier	psize		8069015	0					
ANR	8069097	Identifier	height		8069015	1					
ANR	8069098	Identifier	cp_height		8069015	1					
ANR	8069099	CompoundStatement		11:68:363:363	8069015	1					
ANR	8069100	ExpressionStatement	found = true	492:12:16981:16993	8069015	0	True				
ANR	8069101	AssignmentExpression	found = true		8069015	0		=			
ANR	8069102	Identifier	found		8069015	0					
ANR	8069103	Identifier	true		8069015	1					
ANR	8069104	BreakStatement	break ;	493:12:17007:17012	8069015	1	True				
ANR	8069105	IfStatement	if ( ! found )		8069015	6					
ANR	8069106	Condition	! found	497:8:17039:17044	8069015	0	True				
ANR	8069107	UnaryOperationExpression	! found		8069015	0					
ANR	8069108	UnaryOperator	!		8069015	0					
ANR	8069109	Identifier	found		8069015	1					
ANR	8069110	ReturnStatement	return - 1 ;	498:8:17055:17064	8069015	1	True				
ANR	8069111	UnaryOperationExpression	- 1		8069015	0					
ANR	8069112	UnaryOperator	-		8069015	0					
ANR	8069113	PrimaryExpression	1		8069015	1					
ANR	8069114	ReturnStatement	"return new_logical_page ( pcs , orient , psize , false , true ) ;"	499:4:17070:17126	8069015	7	True				
ANR	8069115	CallExpression	"new_logical_page ( pcs , orient , psize , false , true )"		8069015	0					
ANR	8069116	Callee	new_logical_page		8069015	0					
ANR	8069117	Identifier	new_logical_page		8069015	0					
ANR	8069118	ArgumentList	pcs		8069015	1					
ANR	8069119	Argument	pcs		8069015	0					
ANR	8069120	Identifier	pcs		8069015	0					
ANR	8069121	Argument	orient		8069015	1					
ANR	8069122	Identifier	orient		8069015	0					
ANR	8069123	Argument	psize		8069015	2					
ANR	8069124	Identifier	psize		8069015	0					
ANR	8069125	Argument	false		8069015	3					
ANR	8069126	Identifier	false		8069015	0					
ANR	8069127	Argument	true		8069015	4					
ANR	8069128	Identifier	true		8069015	0					
ANR	8069129	ReturnType	ppaper_type_table int		8069015	1					
ANR	8069130	Identifier	pcl_new_logical_page_for_passthrough		8069015	2					
ANR	8069131	ParameterList	"pcl_state_t * pcs , int orient , gs_point * pdims"		8069015	3					
ANR	8069132	Parameter	pcl_state_t * pcs	479:37:16517:16533	8069015	0	True				
ANR	8069133	ParameterType	pcl_state_t *		8069015	0					
ANR	8069134	Identifier	pcs		8069015	1					
ANR	8069135	Parameter	int orient	479:56:16536:16545	8069015	1	True				
ANR	8069136	ParameterType	int		8069015	0					
ANR	8069137	Identifier	orient		8069015	1					
ANR	8069138	Parameter	gs_point * pdims	480:37:16585:16600	8069015	2	True				
ANR	8069139	ParameterType	gs_point *		8069015	0					
ANR	8069140	Identifier	pdims		8069015	1					
ANR	8069141	CFGEntryNode	ENTRY		8069015		True				
ANR	8069142	CFGExitNode	EXIT		8069015		True				
ANR	8069143	Symbol	pcs		8069015						
ANR	8069144	Symbol	& PAPER_SIZES [ i ] . psize		8069015						
ANR	8069145	Symbol	pdims		8069015						
ANR	8069146	Symbol	orient		8069015						
ANR	8069147	Symbol	false		8069015						
ANR	8069148	Symbol	i		8069015						
ANR	8069149	Symbol	pcl_paper_type_count		8069015						
ANR	8069150	Symbol	psize -> width		8069015						
ANR	8069151	Symbol	psize		8069015						
ANR	8069152	Symbol	found		8069015						
ANR	8069153	Symbol	* i		8069015						
ANR	8069154	Symbol	psize -> height		8069015						
ANR	8069155	Symbol	true		8069015						
ANR	8069156	Symbol	cp_height		8069015						
ANR	8069157	Symbol	pdims -> y		8069015						
ANR	8069158	Symbol	pdims -> x		8069015						
ANR	8069159	Symbol	* psize		8069015						
ANR	8069160	Symbol	cp_width		8069015						
ANR	8069161	Symbol	* PAPER_SIZES		8069015						
ANR	8069162	Symbol	* pdims		8069015						
ANR	8069163	Symbol	PAPER_SIZES		8069015						
ANR	8069164	Symbol	new_logical_page		8069015						
ANR	8069165	Function	pcl_mark_page_for_current_pos	505:0:17161:18025							
ANR	8069166	FunctionDef	pcl_mark_page_for_current_pos (pcl_state_t * pcs)		8069165	0					
ANR	8069167	CompoundStatement		507:0:17214:18025	8069165	0					
ANR	8069168	IdentifierDeclStatement	int code = 0 ;	508:1:17217:17229	8069165	0	True				
ANR	8069169	IdentifierDecl	code = 0		8069165	0					
ANR	8069170	IdentifierDeclType	int		8069165	0					
ANR	8069171	Identifier	code		8069165	1					
ANR	8069172	AssignmentExpression	code = 0		8069165	2		=			
ANR	8069173	Identifier	code		8069165	0					
ANR	8069174	PrimaryExpression	0		8069165	1					
ANR	8069175	IfStatement	if ( pcs -> page_marked )		8069165	1					
ANR	8069176	Condition	pcs -> page_marked	511:8:17264:17279	8069165	0	True				
ANR	8069177	PtrMemberAccess	pcs -> page_marked		8069165	0					
ANR	8069178	Identifier	pcs		8069165	0					
ANR	8069179	Identifier	page_marked		8069165	1					
ANR	8069180	ReturnStatement	return code ;	512:8:17290:17301	8069165	1	True				
ANR	8069181	Identifier	code		8069165	0					
ANR	8069182	CompoundStatement		12:8:246:263	8069165	2					
ANR	8069183	IdentifierDeclStatement	gs_fixed_rect page_box ;	517:8:17429:17451	8069165	0	True				
ANR	8069184	IdentifierDecl	page_box		8069165	0					
ANR	8069185	IdentifierDeclType	gs_fixed_rect		8069165	0					
ANR	8069186	Identifier	page_box		8069165	1					
ANR	8069187	IdentifierDeclStatement	gs_fixed_point pt ;	518:8:17461:17478	8069165	1	True				
ANR	8069188	IdentifierDecl	pt		8069165	0					
ANR	8069189	IdentifierDeclType	gs_fixed_point		8069165	0					
ANR	8069190	Identifier	pt		8069165	1					
ANR	8069191	ExpressionStatement	"code = gx_default_clip_box ( pcs -> pgs , & page_box )"	520:8:17489:17536	8069165	2	True				
ANR	8069192	AssignmentExpression	"code = gx_default_clip_box ( pcs -> pgs , & page_box )"		8069165	0		=			
ANR	8069193	Identifier	code		8069165	0					
ANR	8069194	CallExpression	"gx_default_clip_box ( pcs -> pgs , & page_box )"		8069165	1					
ANR	8069195	Callee	gx_default_clip_box		8069165	0					
ANR	8069196	Identifier	gx_default_clip_box		8069165	0					
ANR	8069197	ArgumentList	pcs -> pgs		8069165	1					
ANR	8069198	Argument	pcs -> pgs		8069165	0					
ANR	8069199	PtrMemberAccess	pcs -> pgs		8069165	0					
ANR	8069200	Identifier	pcs		8069165	0					
ANR	8069201	Identifier	pgs		8069165	1					
ANR	8069202	Argument	& page_box		8069165	1					
ANR	8069203	UnaryOperationExpression	& page_box		8069165	0					
ANR	8069204	UnaryOperator	&		8069165	0					
ANR	8069205	Identifier	page_box		8069165	1					
ANR	8069206	IfStatement	if ( code < 0 )		8069165	3					
ANR	8069207	Condition	code < 0	521:12:17550:17557	8069165	0	True				
ANR	8069208	RelationalExpression	code < 0		8069165	0		<			
ANR	8069209	Identifier	code		8069165	0					
ANR	8069210	PrimaryExpression	0		8069165	1					
ANR	8069211	ReturnStatement	return code ;	523:12:17608:17619	8069165	1	True				
ANR	8069212	Identifier	code		8069165	0					
ANR	8069213	ExpressionStatement	"code = gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"	525:8:17638:17698	8069165	4	True				
ANR	8069214	AssignmentExpression	"code = gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"		8069165	0		=			
ANR	8069215	Identifier	code		8069165	0					
ANR	8069216	CallExpression	"gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"		8069165	1					
ANR	8069217	Callee	gx_path_current_point		8069165	0					
ANR	8069218	Identifier	gx_path_current_point		8069165	0					
ANR	8069219	ArgumentList	gx_current_path ( pcs -> pgs )		8069165	1					
ANR	8069220	Argument	gx_current_path ( pcs -> pgs )		8069165	0					
ANR	8069221	CallExpression	gx_current_path ( pcs -> pgs )		8069165	0					
ANR	8069222	Callee	gx_current_path		8069165	0					
ANR	8069223	Identifier	gx_current_path		8069165	0					
ANR	8069224	ArgumentList	pcs -> pgs		8069165	1					
ANR	8069225	Argument	pcs -> pgs		8069165	0					
ANR	8069226	PtrMemberAccess	pcs -> pgs		8069165	0					
ANR	8069227	Identifier	pcs		8069165	0					
ANR	8069228	Identifier	pgs		8069165	1					
ANR	8069229	Argument	& pt		8069165	1					
ANR	8069230	UnaryOperationExpression	& pt		8069165	0					
ANR	8069231	UnaryOperator	&		8069165	0					
ANR	8069232	Identifier	pt		8069165	1					
ANR	8069233	IfStatement	if ( code < 0 )		8069165	5					
ANR	8069234	Condition	code < 0	526:12:17712:17719	8069165	0	True				
ANR	8069235	RelationalExpression	code < 0		8069165	0		<			
ANR	8069236	Identifier	code		8069165	0					
ANR	8069237	PrimaryExpression	0		8069165	1					
ANR	8069238	ReturnStatement	return code ;	528:12:17769:17780	8069165	1	True				
ANR	8069239	Identifier	code		8069165	0					
ANR	8069240	IfStatement	if ( pt . x >= page_box . p . x && pt . y >= page_box . p . y && pt . x < page_box . q . x && pt . y < page_box . q . y )		8069165	6					
ANR	8069241	Condition	pt . x >= page_box . p . x && pt . y >= page_box . p . y && pt . x < page_box . q . x && pt . y < page_box . q . y	532:12:17861:17962	8069165	0	True				
ANR	8069242	AndExpression	pt . x >= page_box . p . x && pt . y >= page_box . p . y && pt . x < page_box . q . x && pt . y < page_box . q . y		8069165	0		&&			
ANR	8069243	RelationalExpression	pt . x >= page_box . p . x		8069165	0		>=			
ANR	8069244	MemberAccess	pt . x		8069165	0					
ANR	8069245	Identifier	pt		8069165	0					
ANR	8069246	Identifier	x		8069165	1					
ANR	8069247	MemberAccess	page_box . p . x		8069165	1					
ANR	8069248	MemberAccess	page_box . p		8069165	0					
ANR	8069249	Identifier	page_box		8069165	0					
ANR	8069250	Identifier	p		8069165	1					
ANR	8069251	Identifier	x		8069165	1					
ANR	8069252	AndExpression	pt . y >= page_box . p . y && pt . x < page_box . q . x && pt . y < page_box . q . y		8069165	1		&&			
ANR	8069253	RelationalExpression	pt . y >= page_box . p . y		8069165	0		>=			
ANR	8069254	MemberAccess	pt . y		8069165	0					
ANR	8069255	Identifier	pt		8069165	0					
ANR	8069256	Identifier	y		8069165	1					
ANR	8069257	MemberAccess	page_box . p . y		8069165	1					
ANR	8069258	MemberAccess	page_box . p		8069165	0					
ANR	8069259	Identifier	page_box		8069165	0					
ANR	8069260	Identifier	p		8069165	1					
ANR	8069261	Identifier	y		8069165	1					
ANR	8069262	AndExpression	pt . x < page_box . q . x && pt . y < page_box . q . y		8069165	1		&&			
ANR	8069263	RelationalExpression	pt . x < page_box . q . x		8069165	0		<			
ANR	8069264	MemberAccess	pt . x		8069165	0					
ANR	8069265	Identifier	pt		8069165	0					
ANR	8069266	Identifier	x		8069165	1					
ANR	8069267	MemberAccess	page_box . q . x		8069165	1					
ANR	8069268	MemberAccess	page_box . q		8069165	0					
ANR	8069269	Identifier	page_box		8069165	0					
ANR	8069270	Identifier	q		8069165	1					
ANR	8069271	Identifier	x		8069165	1					
ANR	8069272	RelationalExpression	pt . y < page_box . q . y		8069165	1		<			
ANR	8069273	MemberAccess	pt . y		8069165	0					
ANR	8069274	Identifier	pt		8069165	0					
ANR	8069275	Identifier	y		8069165	1					
ANR	8069276	MemberAccess	page_box . q . y		8069165	1					
ANR	8069277	MemberAccess	page_box . q		8069165	0					
ANR	8069278	Identifier	page_box		8069165	0					
ANR	8069279	Identifier	q		8069165	1					
ANR	8069280	Identifier	y		8069165	1					
ANR	8069281	ExpressionStatement	pcs -> page_marked = true	534:12:17977:18000	8069165	1	True				
ANR	8069282	AssignmentExpression	pcs -> page_marked = true		8069165	0		=			
ANR	8069283	PtrMemberAccess	pcs -> page_marked		8069165	0					
ANR	8069284	Identifier	pcs		8069165	0					
ANR	8069285	Identifier	page_marked		8069165	1					
ANR	8069286	Identifier	true		8069165	1					
ANR	8069287	ReturnStatement	return code ;	536:4:18012:18023	8069165	3	True				
ANR	8069288	Identifier	code		8069165	0					
ANR	8069289	ReturnType	int		8069165	1					
ANR	8069290	Identifier	pcl_mark_page_for_current_pos		8069165	2					
ANR	8069291	ParameterList	pcl_state_t * pcs		8069165	3					
ANR	8069292	Parameter	pcl_state_t * pcs	506:30:17195:17211	8069165	0	True				
ANR	8069293	ParameterType	pcl_state_t *		8069165	0					
ANR	8069294	Identifier	pcs		8069165	1					
ANR	8069295	CFGEntryNode	ENTRY		8069165		True				
ANR	8069296	CFGExitNode	EXIT		8069165		True				
ANR	8069297	Symbol	page_box . p . x		8069165						
ANR	8069298	Symbol	pcs		8069165						
ANR	8069299	Symbol	code		8069165						
ANR	8069300	Symbol	page_box		8069165						
ANR	8069301	Symbol	pt		8069165						
ANR	8069302	Symbol	& page_box		8069165						
ANR	8069303	Symbol	pcs -> pgs		8069165						
ANR	8069304	Symbol	page_box . q		8069165						
ANR	8069305	Symbol	* pcs		8069165						
ANR	8069306	Symbol	page_box . p		8069165						
ANR	8069307	Symbol	page_box . q . y		8069165						
ANR	8069308	Symbol	page_box . q . x		8069165						
ANR	8069309	Symbol	pcs -> page_marked		8069165						
ANR	8069310	Symbol	gx_path_current_point		8069165						
ANR	8069311	Symbol	& pt		8069165						
ANR	8069312	Symbol	gx_current_path		8069165						
ANR	8069313	Symbol	gx_default_clip_box		8069165						
ANR	8069314	Symbol	true		8069165						
ANR	8069315	Symbol	pt . x		8069165						
ANR	8069316	Symbol	pt . y		8069165						
ANR	8069317	Symbol	page_box . p . y		8069165						
ANR	8069318	Function	pcl_mark_page_for_character	540:0:18029:18896							
ANR	8069319	FunctionDef	"pcl_mark_page_for_character (pcl_state_t * pcs , gs_fixed_point * org)"		8069318	0					
ANR	8069320	CompoundStatement		542:0:18101:18896	8069318	0					
ANR	8069321	IfStatement	if ( pcs -> page_marked )		8069318	0					
ANR	8069322	Condition	pcs -> page_marked	544:8:18135:18150	8069318	0	True				
ANR	8069323	PtrMemberAccess	pcs -> page_marked		8069318	0					
ANR	8069324	Identifier	pcs		8069318	0					
ANR	8069325	Identifier	page_marked		8069318	1					
ANR	8069326	ReturnStatement	return 0 ;	545:8:18161:18169	8069318	1	True				
ANR	8069327	PrimaryExpression	0		8069318	0					
ANR	8069328	CompoundStatement		11:8:254:262	8069318	1					
ANR	8069329	IdentifierDeclStatement	gs_fixed_rect page_box ;	550:8:18297:18319	8069318	0	True				
ANR	8069330	IdentifierDecl	page_box		8069318	0					
ANR	8069331	IdentifierDeclType	gs_fixed_rect		8069318	0					
ANR	8069332	Identifier	page_box		8069318	1					
ANR	8069333	IdentifierDeclStatement	gs_fixed_point pt ;	551:8:18329:18346	8069318	1	True				
ANR	8069334	IdentifierDecl	pt		8069318	0					
ANR	8069335	IdentifierDeclType	gs_fixed_point		8069318	0					
ANR	8069336	Identifier	pt		8069318	1					
ANR	8069337	IdentifierDeclStatement	int code ;	552:8:18356:18364	8069318	2	True				
ANR	8069338	IdentifierDecl	code		8069318	0					
ANR	8069339	IdentifierDeclType	int		8069318	0					
ANR	8069340	Identifier	code		8069318	1					
ANR	8069341	ExpressionStatement	"code = gx_default_clip_box ( pcs -> pgs , & page_box )"	554:8:18375:18422	8069318	3	True				
ANR	8069342	AssignmentExpression	"code = gx_default_clip_box ( pcs -> pgs , & page_box )"		8069318	0		=			
ANR	8069343	Identifier	code		8069318	0					
ANR	8069344	CallExpression	"gx_default_clip_box ( pcs -> pgs , & page_box )"		8069318	1					
ANR	8069345	Callee	gx_default_clip_box		8069318	0					
ANR	8069346	Identifier	gx_default_clip_box		8069318	0					
ANR	8069347	ArgumentList	pcs -> pgs		8069318	1					
ANR	8069348	Argument	pcs -> pgs		8069318	0					
ANR	8069349	PtrMemberAccess	pcs -> pgs		8069318	0					
ANR	8069350	Identifier	pcs		8069318	0					
ANR	8069351	Identifier	pgs		8069318	1					
ANR	8069352	Argument	& page_box		8069318	1					
ANR	8069353	UnaryOperationExpression	& page_box		8069318	0					
ANR	8069354	UnaryOperator	&		8069318	0					
ANR	8069355	Identifier	page_box		8069318	1					
ANR	8069356	IfStatement	if ( code < 0 )		8069318	4					
ANR	8069357	Condition	code < 0	555:12:18436:18443	8069318	0	True				
ANR	8069358	RelationalExpression	code < 0		8069318	0		<			
ANR	8069359	Identifier	code		8069318	0					
ANR	8069360	PrimaryExpression	0		8069318	1					
ANR	8069361	ReturnStatement	return code ;	557:12:18494:18505	8069318	1	True				
ANR	8069362	Identifier	code		8069318	0					
ANR	8069363	ExpressionStatement	"code = gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"	559:8:18516:18576	8069318	5	True				
ANR	8069364	AssignmentExpression	"code = gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"		8069318	0		=			
ANR	8069365	Identifier	code		8069318	0					
ANR	8069366	CallExpression	"gx_path_current_point ( gx_current_path ( pcs -> pgs ) , & pt )"		8069318	1					
ANR	8069367	Callee	gx_path_current_point		8069318	0					
ANR	8069368	Identifier	gx_path_current_point		8069318	0					
ANR	8069369	ArgumentList	gx_current_path ( pcs -> pgs )		8069318	1					
ANR	8069370	Argument	gx_current_path ( pcs -> pgs )		8069318	0					
ANR	8069371	CallExpression	gx_current_path ( pcs -> pgs )		8069318	0					
ANR	8069372	Callee	gx_current_path		8069318	0					
ANR	8069373	Identifier	gx_current_path		8069318	0					
ANR	8069374	ArgumentList	pcs -> pgs		8069318	1					
ANR	8069375	Argument	pcs -> pgs		8069318	0					
ANR	8069376	PtrMemberAccess	pcs -> pgs		8069318	0					
ANR	8069377	Identifier	pcs		8069318	0					
ANR	8069378	Identifier	pgs		8069318	1					
ANR	8069379	Argument	& pt		8069318	1					
ANR	8069380	UnaryOperationExpression	& pt		8069318	0					
ANR	8069381	UnaryOperator	&		8069318	0					
ANR	8069382	Identifier	pt		8069318	1					
ANR	8069383	IfStatement	if ( code < 0 )		8069318	6					
ANR	8069384	Condition	code < 0	560:12:18590:18597	8069318	0	True				
ANR	8069385	RelationalExpression	code < 0		8069318	0		<			
ANR	8069386	Identifier	code		8069318	0					
ANR	8069387	PrimaryExpression	0		8069318	1					
ANR	8069388	ReturnStatement	return code ;	562:12:18647:18658	8069318	1	True				
ANR	8069389	Identifier	code		8069318	0					
ANR	8069390	IfStatement	if ( pt . x >= page_box . p . x && pt . y >= page_box . p . y && org -> x < page_box . q . x && org -> y < page_box . q . y )		8069318	7					
ANR	8069391	Condition	pt . x >= page_box . p . x && pt . y >= page_box . p . y && org -> x < page_box . q . x && org -> y < page_box . q . y	566:12:18731:18836	8069318	0	True				
ANR	8069392	AndExpression	pt . x >= page_box . p . x && pt . y >= page_box . p . y && org -> x < page_box . q . x && org -> y < page_box . q . y		8069318	0		&&			
ANR	8069393	RelationalExpression	pt . x >= page_box . p . x		8069318	0		>=			
ANR	8069394	MemberAccess	pt . x		8069318	0					
ANR	8069395	Identifier	pt		8069318	0					
ANR	8069396	Identifier	x		8069318	1					
ANR	8069397	MemberAccess	page_box . p . x		8069318	1					
ANR	8069398	MemberAccess	page_box . p		8069318	0					
ANR	8069399	Identifier	page_box		8069318	0					
ANR	8069400	Identifier	p		8069318	1					
ANR	8069401	Identifier	x		8069318	1					
ANR	8069402	AndExpression	pt . y >= page_box . p . y && org -> x < page_box . q . x && org -> y < page_box . q . y		8069318	1		&&			
ANR	8069403	RelationalExpression	pt . y >= page_box . p . y		8069318	0		>=			
ANR	8069404	MemberAccess	pt . y		8069318	0					
ANR	8069405	Identifier	pt		8069318	0					
ANR	8069406	Identifier	y		8069318	1					
ANR	8069407	MemberAccess	page_box . p . y		8069318	1					
ANR	8069408	MemberAccess	page_box . p		8069318	0					
ANR	8069409	Identifier	page_box		8069318	0					
ANR	8069410	Identifier	p		8069318	1					
ANR	8069411	Identifier	y		8069318	1					
ANR	8069412	AndExpression	org -> x < page_box . q . x && org -> y < page_box . q . y		8069318	1		&&			
ANR	8069413	RelationalExpression	org -> x < page_box . q . x		8069318	0		<			
ANR	8069414	PtrMemberAccess	org -> x		8069318	0					
ANR	8069415	Identifier	org		8069318	0					
ANR	8069416	Identifier	x		8069318	1					
ANR	8069417	MemberAccess	page_box . q . x		8069318	1					
ANR	8069418	MemberAccess	page_box . q		8069318	0					
ANR	8069419	Identifier	page_box		8069318	0					
ANR	8069420	Identifier	q		8069318	1					
ANR	8069421	Identifier	x		8069318	1					
ANR	8069422	RelationalExpression	org -> y < page_box . q . y		8069318	1		<			
ANR	8069423	PtrMemberAccess	org -> y		8069318	0					
ANR	8069424	Identifier	org		8069318	0					
ANR	8069425	Identifier	y		8069318	1					
ANR	8069426	MemberAccess	page_box . q . y		8069318	1					
ANR	8069427	MemberAccess	page_box . q		8069318	0					
ANR	8069428	Identifier	page_box		8069318	0					
ANR	8069429	Identifier	q		8069318	1					
ANR	8069430	Identifier	y		8069318	1					
ANR	8069431	ExpressionStatement	pcs -> page_marked = true	568:12:18851:18874	8069318	1	True				
ANR	8069432	AssignmentExpression	pcs -> page_marked = true		8069318	0		=			
ANR	8069433	PtrMemberAccess	pcs -> page_marked		8069318	0					
ANR	8069434	Identifier	pcs		8069318	0					
ANR	8069435	Identifier	page_marked		8069318	1					
ANR	8069436	Identifier	true		8069318	1					
ANR	8069437	ReturnStatement	return 0 ;	570:4:18886:18894	8069318	2	True				
ANR	8069438	PrimaryExpression	0		8069318	0					
ANR	8069439	ReturnType	int		8069318	1					
ANR	8069440	Identifier	pcl_mark_page_for_character		8069318	2					
ANR	8069441	ParameterList	"pcl_state_t * pcs , gs_fixed_point * org"		8069318	3					
ANR	8069442	Parameter	pcl_state_t * pcs	541:28:18061:18077	8069318	0	True				
ANR	8069443	ParameterType	pcl_state_t *		8069318	0					
ANR	8069444	Identifier	pcs		8069318	1					
ANR	8069445	Parameter	gs_fixed_point * org	541:47:18080:18098	8069318	1	True				
ANR	8069446	ParameterType	gs_fixed_point *		8069318	0					
ANR	8069447	Identifier	org		8069318	1					
ANR	8069448	CFGEntryNode	ENTRY		8069318		True				
ANR	8069449	CFGExitNode	EXIT		8069318		True				
ANR	8069450	Symbol	page_box . p . x		8069318						
ANR	8069451	Symbol	org -> x		8069318						
ANR	8069452	Symbol	org -> y		8069318						
ANR	8069453	Symbol	code		8069318						
ANR	8069454	Symbol	pt		8069318						
ANR	8069455	Symbol	page_box . q		8069318						
ANR	8069456	Symbol	* pcs		8069318						
ANR	8069457	Symbol	page_box . p		8069318						
ANR	8069458	Symbol	page_box . q . y		8069318						
ANR	8069459	Symbol	page_box . q . x		8069318						
ANR	8069460	Symbol	* org		8069318						
ANR	8069461	Symbol	pcs -> page_marked		8069318						
ANR	8069462	Symbol	gx_current_path		8069318						
ANR	8069463	Symbol	pcs		8069318						
ANR	8069464	Symbol	page_box		8069318						
ANR	8069465	Symbol	org		8069318						
ANR	8069466	Symbol	& page_box		8069318						
ANR	8069467	Symbol	pcs -> pgs		8069318						
ANR	8069468	Symbol	gx_path_current_point		8069318						
ANR	8069469	Symbol	& pt		8069318						
ANR	8069470	Symbol	gx_default_clip_box		8069318						
ANR	8069471	Symbol	true		8069318						
ANR	8069472	Symbol	pt . x		8069318						
ANR	8069473	Symbol	pt . y		8069318						
ANR	8069474	Symbol	page_box . p . y		8069318						
ANR	8069475	Function	pcl_mark_page_for_path	578:0:19117:19212							
ANR	8069476	FunctionDef	pcl_mark_page_for_path (pcl_state_t * pcs)		8069475	0					
ANR	8069477	CompoundStatement		580:0:19163:19212	8069475	0					
ANR	8069478	ReturnStatement	return pcl_mark_page_for_current_pos ( pcs ) ;	581:4:19169:19210	8069475	0	True				
ANR	8069479	CallExpression	pcl_mark_page_for_current_pos ( pcs )		8069475	0					
ANR	8069480	Callee	pcl_mark_page_for_current_pos		8069475	0					
ANR	8069481	Identifier	pcl_mark_page_for_current_pos		8069475	0					
ANR	8069482	ArgumentList	pcs		8069475	1					
ANR	8069483	Argument	pcs		8069475	0					
ANR	8069484	Identifier	pcs		8069475	0					
ANR	8069485	ReturnType	int		8069475	1					
ANR	8069486	Identifier	pcl_mark_page_for_path		8069475	2					
ANR	8069487	ParameterList	pcl_state_t * pcs		8069475	3					
ANR	8069488	Parameter	pcl_state_t * pcs	579:23:19144:19160	8069475	0	True				
ANR	8069489	ParameterType	pcl_state_t *		8069475	0					
ANR	8069490	Identifier	pcs		8069475	1					
ANR	8069491	CFGEntryNode	ENTRY		8069475		True				
ANR	8069492	CFGExitNode	EXIT		8069475		True				
ANR	8069493	Symbol	pcl_mark_page_for_current_pos		8069475						
ANR	8069494	Symbol	pcs		8069475						
ANR	8069495	Function	pcl_page_marked	586:0:19358:19428							
ANR	8069496	FunctionDef	pcl_page_marked (pcl_state_t * pcs)		8069495	0					
ANR	8069497	CompoundStatement		588:0:19397:19428	8069495	0					
ANR	8069498	ReturnStatement	return pcs -> page_marked ;	589:4:19403:19426	8069495	0	True				
ANR	8069499	PtrMemberAccess	pcs -> page_marked		8069495	0					
ANR	8069500	Identifier	pcs		8069495	0					
ANR	8069501	Identifier	page_marked		8069495	1					
ANR	8069502	ReturnType	int		8069495	1					
ANR	8069503	Identifier	pcl_page_marked		8069495	2					
ANR	8069504	ParameterList	pcl_state_t * pcs		8069495	3					
ANR	8069505	Parameter	pcl_state_t * pcs	587:16:19378:19394	8069495	0	True				
ANR	8069506	ParameterType	pcl_state_t *		8069495	0					
ANR	8069507	Identifier	pcs		8069495	1					
ANR	8069508	CFGEntryNode	ENTRY		8069495		True				
ANR	8069509	CFGExitNode	EXIT		8069495		True				
ANR	8069510	Symbol	pcs		8069495						
ANR	8069511	Symbol	* pcs		8069495						
ANR	8069512	Symbol	pcs -> page_marked		8069495						
ANR	8069513	Function	pcl_cursor_moved	592:0:19431:19503							
ANR	8069514	FunctionDef	pcl_cursor_moved (pcl_state_t * pcs)		8069513	0					
ANR	8069515	CompoundStatement		594:0:19471:19503	8069513	0					
ANR	8069516	ReturnStatement	return pcs -> cursor_moved ;	595:4:19477:19501	8069513	0	True				
ANR	8069517	PtrMemberAccess	pcs -> cursor_moved		8069513	0					
ANR	8069518	Identifier	pcs		8069513	0					
ANR	8069519	Identifier	cursor_moved		8069513	1					
ANR	8069520	ReturnType	int		8069513	1					
ANR	8069521	Identifier	pcl_cursor_moved		8069513	2					
ANR	8069522	ParameterList	pcl_state_t * pcs		8069513	3					
ANR	8069523	Parameter	pcl_state_t * pcs	593:17:19452:19468	8069513	0	True				
ANR	8069524	ParameterType	pcl_state_t *		8069513	0					
ANR	8069525	Identifier	pcs		8069513	1					
ANR	8069526	CFGEntryNode	ENTRY		8069513		True				
ANR	8069527	CFGExitNode	EXIT		8069513		True				
ANR	8069528	Symbol	pcs		8069513						
ANR	8069529	Symbol	pcs -> cursor_moved		8069513						
ANR	8069530	Symbol	* pcs		8069513						
ANR	8069531	Function	pcl_end_page	602:0:19642:21678							
ANR	8069532	FunctionDef	"pcl_end_page (pcl_state_t * pcs , pcl_print_condition_t condition)"		8069531	0					
ANR	8069533	CompoundStatement		604:0:19711:21678	8069531	0					
ANR	8069534	IdentifierDeclStatement	int code = 0 ;	605:4:19717:19729	8069531	0	True				
ANR	8069535	IdentifierDecl	code = 0		8069531	0					
ANR	8069536	IdentifierDeclType	int		8069531	0					
ANR	8069537	Identifier	code		8069531	1					
ANR	8069538	AssignmentExpression	code = 0		8069531	2		=			
ANR	8069539	Identifier	code		8069531	0					
ANR	8069540	PrimaryExpression	0		8069531	1					
ANR	8069541	ExpressionStatement	pcl_break_underline ( pcs )	607:4:19736:19760	8069531	1	True				
ANR	8069542	CallExpression	pcl_break_underline ( pcs )		8069531	0					
ANR	8069543	Callee	pcl_break_underline		8069531	0					
ANR	8069544	Identifier	pcl_break_underline		8069531	0					
ANR	8069545	ArgumentList	pcs		8069531	1					
ANR	8069546	Argument	pcs		8069531	0					
ANR	8069547	Identifier	pcs		8069531	0					
ANR	8069548	IfStatement	if ( condition != pcl_print_always )		8069531	2					
ANR	8069549	Condition	condition != pcl_print_always	611:8:19889:19917	8069531	0	True				
ANR	8069550	EqualityExpression	condition != pcl_print_always		8069531	0		!=			
ANR	8069551	Identifier	condition		8069531	0					
ANR	8069552	Identifier	pcl_print_always		8069531	1					
ANR	8069553	CompoundStatement		8:39:208:208	8069531	1					
ANR	8069554	IfStatement	if ( ! pcl_page_marked ( pcs ) )		8069531	0					
ANR	8069555	Condition	! pcl_page_marked ( pcs )	612:12:19934:19954	8069531	0	True				
ANR	8069556	UnaryOperationExpression	! pcl_page_marked ( pcs )		8069531	0					
ANR	8069557	UnaryOperator	!		8069531	0					
ANR	8069558	CallExpression	pcl_page_marked ( pcs )		8069531	1					
ANR	8069559	Callee	pcl_page_marked		8069531	0					
ANR	8069560	Identifier	pcl_page_marked		8069531	0					
ANR	8069561	ArgumentList	pcs		8069531	1					
ANR	8069562	Argument	pcs		8069531	0					
ANR	8069563	Identifier	pcs		8069531	0					
ANR	8069564	ReturnStatement	return 0 ;	613:12:19969:19977	8069531	1	True				
ANR	8069565	PrimaryExpression	0		8069531	0					
ANR	8069566	IfStatement	if ( pcs -> raster_state . graphics_mode )		8069531	3					
ANR	8069567	Condition	pcs -> raster_state . graphics_mode	618:8:20097:20127	8069531	0	True				
ANR	8069568	MemberAccess	pcs -> raster_state . graphics_mode		8069531	0					
ANR	8069569	PtrMemberAccess	pcs -> raster_state		8069531	0					
ANR	8069570	Identifier	pcs		8069531	0					
ANR	8069571	Identifier	raster_state		8069531	1					
ANR	8069572	Identifier	graphics_mode		8069531	1					
ANR	8069573	ExpressionStatement	code = pcl_end_graphics_mode ( pcs )	619:8:20138:20171	8069531	1	True				
ANR	8069574	AssignmentExpression	code = pcl_end_graphics_mode ( pcs )		8069531	0		=			
ANR	8069575	Identifier	code		8069531	0					
ANR	8069576	CallExpression	pcl_end_graphics_mode ( pcs )		8069531	1					
ANR	8069577	Callee	pcl_end_graphics_mode		8069531	0					
ANR	8069578	Identifier	pcl_end_graphics_mode		8069531	0					
ANR	8069579	ArgumentList	pcs		8069531	1					
ANR	8069580	Argument	pcs		8069531	0					
ANR	8069581	Identifier	pcs		8069531	0					
ANR	8069582	IfStatement	if ( code < 0 )		8069531	4					
ANR	8069583	Condition	code < 0	620:8:20181:20188	8069531	0	True				
ANR	8069584	RelationalExpression	code < 0		8069531	0		<			
ANR	8069585	Identifier	code		8069531	0					
ANR	8069586	PrimaryExpression	0		8069531	1					
ANR	8069587	ReturnStatement	return code ;	621:8:20199:20210	8069531	1	True				
ANR	8069588	Identifier	code		8069531	0					
ANR	8069589	IfStatement	if ( pcs -> overlay_enabled )		8069531	5					
ANR	8069590	Condition	pcs -> overlay_enabled	624:8:20276:20295	8069531	0	True				
ANR	8069591	PtrMemberAccess	pcs -> overlay_enabled		8069531	0					
ANR	8069592	Identifier	pcs		8069531	0					
ANR	8069593	Identifier	overlay_enabled		8069531	1					
ANR	8069594	CompoundStatement		22:8:596:607	8069531	1					
ANR	8069595	IdentifierDeclStatement	void * value ;	625:8:20308:20319	8069531	0	True				
ANR	8069596	IdentifierDecl	* value		8069531	0					
ANR	8069597	IdentifierDeclType	void *		8069531	0					
ANR	8069598	Identifier	value		8069531	1					
ANR	8069599	IfStatement	"if ( pl_dict_find ( & pcs -> macros , id_key ( pcs -> overlay_macro_id ) , 2 , & value ) )"		8069531	1					
ANR	8069600	Condition	"pl_dict_find ( & pcs -> macros , id_key ( pcs -> overlay_macro_id ) , 2 , & value )"	627:12:20334:20426	8069531	0	True				
ANR	8069601	CallExpression	"pl_dict_find ( & pcs -> macros , id_key ( pcs -> overlay_macro_id ) , 2 , & value )"		8069531	0					
ANR	8069602	Callee	pl_dict_find		8069531	0					
ANR	8069603	Identifier	pl_dict_find		8069531	0					
ANR	8069604	ArgumentList	& pcs -> macros		8069531	1					
ANR	8069605	Argument	& pcs -> macros		8069531	0					
ANR	8069606	UnaryOperationExpression	& pcs -> macros		8069531	0					
ANR	8069607	UnaryOperator	&		8069531	0					
ANR	8069608	PtrMemberAccess	pcs -> macros		8069531	1					
ANR	8069609	Identifier	pcs		8069531	0					
ANR	8069610	Identifier	macros		8069531	1					
ANR	8069611	Argument	id_key ( pcs -> overlay_macro_id )		8069531	1					
ANR	8069612	CallExpression	id_key ( pcs -> overlay_macro_id )		8069531	0					
ANR	8069613	Callee	id_key		8069531	0					
ANR	8069614	Identifier	id_key		8069531	0					
ANR	8069615	ArgumentList	pcs -> overlay_macro_id		8069531	1					
ANR	8069616	Argument	pcs -> overlay_macro_id		8069531	0					
ANR	8069617	PtrMemberAccess	pcs -> overlay_macro_id		8069531	0					
ANR	8069618	Identifier	pcs		8069531	0					
ANR	8069619	Identifier	overlay_macro_id		8069531	1					
ANR	8069620	Argument	2		8069531	2					
ANR	8069621	PrimaryExpression	2		8069531	0					
ANR	8069622	Argument	& value		8069531	3					
ANR	8069623	UnaryOperationExpression	& value		8069531	0					
ANR	8069624	UnaryOperator	&		8069531	0					
ANR	8069625	Identifier	value		8069531	1					
ANR	8069626	CompoundStatement		25:68:717:717	8069531	1					
ANR	8069627	ExpressionStatement	pcs -> overlay_enabled = false	629:12:20443:20471	8069531	0	True				
ANR	8069628	AssignmentExpression	pcs -> overlay_enabled = false		8069531	0		=			
ANR	8069629	PtrMemberAccess	pcs -> overlay_enabled		8069531	0					
ANR	8069630	Identifier	pcs		8069531	0					
ANR	8069631	Identifier	overlay_enabled		8069531	1					
ANR	8069632	Identifier	false		8069531	1					
ANR	8069633	ExpressionStatement	"code = pcl_execute_macro ( ( const pcl_macro_t * ) value , pcs , pcl_copy_before_overlay , pcl_reset_overlay , pcl_copy_after_overlay )"	630:12:20516:20789	8069531	1	True				
ANR	8069634	AssignmentExpression	"code = pcl_execute_macro ( ( const pcl_macro_t * ) value , pcs , pcl_copy_before_overlay , pcl_reset_overlay , pcl_copy_after_overlay )"		8069531	0		=			
ANR	8069635	Identifier	code		8069531	0					
ANR	8069636	CallExpression	"pcl_execute_macro ( ( const pcl_macro_t * ) value , pcs , pcl_copy_before_overlay , pcl_reset_overlay , pcl_copy_after_overlay )"		8069531	1					
ANR	8069637	Callee	pcl_execute_macro		8069531	0					
ANR	8069638	Identifier	pcl_execute_macro		8069531	0					
ANR	8069639	ArgumentList	( const pcl_macro_t * ) value		8069531	1					
ANR	8069640	Argument	( const pcl_macro_t * ) value		8069531	0					
ANR	8069641	CastExpression	( const pcl_macro_t * ) value		8069531	0					
ANR	8069642	CastTarget	const pcl_macro_t *		8069531	0					
ANR	8069643	Identifier	value		8069531	1					
ANR	8069644	Argument	pcs		8069531	1					
ANR	8069645	Identifier	pcs		8069531	0					
ANR	8069646	Argument	pcl_copy_before_overlay		8069531	2					
ANR	8069647	Identifier	pcl_copy_before_overlay		8069531	0					
ANR	8069648	Argument	pcl_reset_overlay		8069531	3					
ANR	8069649	Identifier	pcl_reset_overlay		8069531	0					
ANR	8069650	Argument	pcl_copy_after_overlay		8069531	4					
ANR	8069651	Identifier	pcl_copy_after_overlay		8069531	0					
ANR	8069652	IfStatement	if ( code < 0 )		8069531	2					
ANR	8069653	Condition	code < 0	635:16:20807:20814	8069531	0	True				
ANR	8069654	RelationalExpression	code < 0		8069531	0		<			
ANR	8069655	Identifier	code		8069531	0					
ANR	8069656	PrimaryExpression	0		8069531	1					
ANR	8069657	ReturnStatement	return code ;	636:16:20833:20844	8069531	1	True				
ANR	8069658	Identifier	code		8069531	0					
ANR	8069659	ExpressionStatement	pcs -> overlay_enabled = true	638:12:20859:20886	8069531	3	True				
ANR	8069660	AssignmentExpression	pcs -> overlay_enabled = true		8069531	0		=			
ANR	8069661	PtrMemberAccess	pcs -> overlay_enabled		8069531	0					
ANR	8069662	Identifier	pcs		8069531	0					
ANR	8069663	Identifier	overlay_enabled		8069531	1					
ANR	8069664	Identifier	true		8069531	1					
ANR	8069665	ExpressionStatement	"code = ( * pcs -> end_page ) ( pcs , pcs -> num_copies , true )"	642:4:20960:21012	8069531	6	True				
ANR	8069666	AssignmentExpression	"code = ( * pcs -> end_page ) ( pcs , pcs -> num_copies , true )"		8069531	0		=			
ANR	8069667	Identifier	code		8069531	0					
ANR	8069668	CallExpression	"( * pcs -> end_page ) ( pcs , pcs -> num_copies , true )"		8069531	1					
ANR	8069669	Callee	* pcs -> end_page		8069531	0					
ANR	8069670	UnaryOperationExpression	* pcs -> end_page		8069531	0					
ANR	8069671	UnaryOperator	*		8069531	0					
ANR	8069672	PtrMemberAccess	pcs -> end_page		8069531	1					
ANR	8069673	Identifier	pcs		8069531	0					
ANR	8069674	Identifier	end_page		8069531	1					
ANR	8069675	ArgumentList	pcs		8069531	1					
ANR	8069676	Argument	pcs		8069531	0					
ANR	8069677	Identifier	pcs		8069531	0					
ANR	8069678	Argument	pcs -> num_copies		8069531	1					
ANR	8069679	PtrMemberAccess	pcs -> num_copies		8069531	0					
ANR	8069680	Identifier	pcs		8069531	0					
ANR	8069681	Identifier	num_copies		8069531	1					
ANR	8069682	Argument	true		8069531	2					
ANR	8069683	Identifier	true		8069531	0					
ANR	8069684	IfStatement	if ( code < 0 )		8069531	7					
ANR	8069685	Condition	code < 0	643:8:21022:21029	8069531	0	True				
ANR	8069686	RelationalExpression	code < 0		8069531	0		<			
ANR	8069687	Identifier	code		8069531	0					
ANR	8069688	PrimaryExpression	0		8069531	1					
ANR	8069689	ReturnStatement	return code ;	644:8:21040:21051	8069531	1	True				
ANR	8069690	Identifier	code		8069531	0					
ANR	8069691	IfStatement	if ( pcs -> end_page == pcl_end_page_top )		8069531	8					
ANR	8069692	Condition	pcs -> end_page == pcl_end_page_top	646:8:21062:21094	8069531	0	True				
ANR	8069693	EqualityExpression	pcs -> end_page == pcl_end_page_top		8069531	0		==			
ANR	8069694	PtrMemberAccess	pcs -> end_page		8069531	0					
ANR	8069695	Identifier	pcs		8069531	0					
ANR	8069696	Identifier	end_page		8069531	1					
ANR	8069697	Identifier	pcl_end_page_top		8069531	1					
ANR	8069698	ExpressionStatement	code = gs_erasepage ( pcs -> pgs )	647:8:21105:21134	8069531	1	True				
ANR	8069699	AssignmentExpression	code = gs_erasepage ( pcs -> pgs )		8069531	0		=			
ANR	8069700	Identifier	code		8069531	0					
ANR	8069701	CallExpression	gs_erasepage ( pcs -> pgs )		8069531	1					
ANR	8069702	Callee	gs_erasepage		8069531	0					
ANR	8069703	Identifier	gs_erasepage		8069531	0					
ANR	8069704	ArgumentList	pcs -> pgs		8069531	1					
ANR	8069705	Argument	pcs -> pgs		8069531	0					
ANR	8069706	PtrMemberAccess	pcs -> pgs		8069531	0					
ANR	8069707	Identifier	pcs		8069531	0					
ANR	8069708	Identifier	pgs		8069531	1					
ANR	8069709	IfStatement	if ( code < 0 )		8069531	9					
ANR	8069710	Condition	code < 0	648:8:21144:21151	8069531	0	True				
ANR	8069711	RelationalExpression	code < 0		8069531	0		<			
ANR	8069712	Identifier	code		8069531	0					
ANR	8069713	PrimaryExpression	0		8069531	1					
ANR	8069714	ReturnStatement	return code ;	649:8:21162:21173	8069531	1	True				
ANR	8069715	Identifier	code		8069531	0					
ANR	8069716	ExpressionStatement	pcs -> page_marked = false	651:4:21180:21204	8069531	10	True				
ANR	8069717	AssignmentExpression	pcs -> page_marked = false		8069531	0		=			
ANR	8069718	PtrMemberAccess	pcs -> page_marked		8069531	0					
ANR	8069719	Identifier	pcs		8069531	0					
ANR	8069720	Identifier	page_marked		8069531	1					
ANR	8069721	Identifier	false		8069531	1					
ANR	8069722	IfStatement	if ( pcs -> duplex )		8069531	11					
ANR	8069723	Condition	pcs -> duplex	660:8:21409:21419	8069531	0	True				
ANR	8069724	PtrMemberAccess	pcs -> duplex		8069531	0					
ANR	8069725	Identifier	pcs		8069531	0					
ANR	8069726	Identifier	duplex		8069531	1					
ANR	8069727	CompoundStatement		57:21:1710:1710	8069531	1					
ANR	8069728	ExpressionStatement	pcs -> back_side = ! pcs -> back_side	661:8:21432:21465	8069531	0	True				
ANR	8069729	AssignmentExpression	pcs -> back_side = ! pcs -> back_side		8069531	0		=			
ANR	8069730	PtrMemberAccess	pcs -> back_side		8069531	0					
ANR	8069731	Identifier	pcs		8069531	0					
ANR	8069732	Identifier	back_side		8069531	1					
ANR	8069733	UnaryOperationExpression	! pcs -> back_side		8069531	1					
ANR	8069734	UnaryOperator	!		8069531	0					
ANR	8069735	PtrMemberAccess	pcs -> back_side		8069531	1					
ANR	8069736	Identifier	pcs		8069531	0					
ANR	8069737	Identifier	back_side		8069531	1					
ANR	8069738	ElseStatement	else		8069531	0					
ANR	8069739	CompoundStatement		59:11:1766:1766	8069531	0					
ANR	8069740	ExpressionStatement	pcs -> back_side = false	663:8:21488:21510	8069531	0	True				
ANR	8069741	AssignmentExpression	pcs -> back_side = false		8069531	0		=			
ANR	8069742	PtrMemberAccess	pcs -> back_side		8069531	0					
ANR	8069743	Identifier	pcs		8069531	0					
ANR	8069744	Identifier	back_side		8069531	1					
ANR	8069745	Identifier	false		8069531	1					
ANR	8069746	ExpressionStatement	"code = put_param1_bool ( pcs , ""FirstSide"" , ! pcs -> back_side )"	665:4:21522:21578	8069531	12	True				
ANR	8069747	AssignmentExpression	"code = put_param1_bool ( pcs , ""FirstSide"" , ! pcs -> back_side )"		8069531	0		=			
ANR	8069748	Identifier	code		8069531	0					
ANR	8069749	CallExpression	"put_param1_bool ( pcs , ""FirstSide"" , ! pcs -> back_side )"		8069531	1					
ANR	8069750	Callee	put_param1_bool		8069531	0					
ANR	8069751	Identifier	put_param1_bool		8069531	0					
ANR	8069752	ArgumentList	pcs		8069531	1					
ANR	8069753	Argument	pcs		8069531	0					
ANR	8069754	Identifier	pcs		8069531	0					
ANR	8069755	Argument	"""FirstSide"""		8069531	1					
ANR	8069756	PrimaryExpression	"""FirstSide"""		8069531	0					
ANR	8069757	Argument	! pcs -> back_side		8069531	2					
ANR	8069758	UnaryOperationExpression	! pcs -> back_side		8069531	0					
ANR	8069759	UnaryOperator	!		8069531	0					
ANR	8069760	PtrMemberAccess	pcs -> back_side		8069531	1					
ANR	8069761	Identifier	pcs		8069531	0					
ANR	8069762	Identifier	back_side		8069531	1					
ANR	8069763	ExpressionStatement	"update_xfm_state ( pcs , 0 )"	666:4:21584:21608	8069531	13	True				
ANR	8069764	CallExpression	"update_xfm_state ( pcs , 0 )"		8069531	0					
ANR	8069765	Callee	update_xfm_state		8069531	0					
ANR	8069766	Identifier	update_xfm_state		8069531	0					
ANR	8069767	ArgumentList	pcs		8069531	1					
ANR	8069768	Argument	pcs		8069531	0					
ANR	8069769	Identifier	pcs		8069531	0					
ANR	8069770	Argument	0		8069531	1					
ANR	8069771	PrimaryExpression	0		8069531	0					
ANR	8069772	ExpressionStatement	pcl_continue_underline ( pcs )	668:4:21615:21642	8069531	14	True				
ANR	8069773	CallExpression	pcl_continue_underline ( pcs )		8069531	0					
ANR	8069774	Callee	pcl_continue_underline		8069531	0					
ANR	8069775	Identifier	pcl_continue_underline		8069531	0					
ANR	8069776	ArgumentList	pcs		8069531	1					
ANR	8069777	Argument	pcs		8069531	0					
ANR	8069778	Identifier	pcs		8069531	0					
ANR	8069779	ReturnStatement	return ( code < 0 ? code : 1 ) ;	669:4:21648:21676	8069531	15	True				
ANR	8069780	ConditionalExpression	code < 0 ? code : 1		8069531	0					
ANR	8069781	Condition	code < 0		8069531	0					
ANR	8069782	RelationalExpression	code < 0		8069531	0		<			
ANR	8069783	Identifier	code		8069531	0					
ANR	8069784	PrimaryExpression	0		8069531	1					
ANR	8069785	Identifier	code		8069531	1					
ANR	8069786	PrimaryExpression	1		8069531	2					
ANR	8069787	ReturnType	int		8069531	1					
ANR	8069788	Identifier	pcl_end_page		8069531	2					
ANR	8069789	ParameterList	"pcl_state_t * pcs , pcl_print_condition_t condition"		8069531	3					
ANR	8069790	Parameter	pcl_state_t * pcs	603:13:19659:19675	8069531	0	True				
ANR	8069791	ParameterType	pcl_state_t *		8069531	0					
ANR	8069792	Identifier	pcs		8069531	1					
ANR	8069793	Parameter	pcl_print_condition_t condition	603:32:19678:19708	8069531	1	True				
ANR	8069794	ParameterType	pcl_print_condition_t		8069531	0					
ANR	8069795	Identifier	condition		8069531	1					
ANR	8069796	CFGEntryNode	ENTRY		8069531		True				
ANR	8069797	CFGExitNode	EXIT		8069531		True				
ANR	8069798	Symbol	pcl_page_marked		8069531						
ANR	8069799	Symbol	code		8069531						
ANR	8069800	Symbol	& value		8069531						
ANR	8069801	Symbol	pcl_execute_macro		8069531						
ANR	8069802	Symbol	* pcs		8069531						
ANR	8069803	Symbol	pcs -> back_side		8069531						
ANR	8069804	Symbol	pcs -> page_marked		8069531						
ANR	8069805	Symbol	gs_erasepage		8069531						
ANR	8069806	Symbol	pcs -> overlay_macro_id		8069531						
ANR	8069807	Symbol	pcs -> raster_state . graphics_mode		8069531						
ANR	8069808	Symbol	* pcs -> end_page		8069531						
ANR	8069809	Symbol	pcl_print_always		8069531						
ANR	8069810	Symbol	value		8069531						
ANR	8069811	Symbol	pcl_copy_after_overlay		8069531						
ANR	8069812	Symbol	pcs -> duplex		8069531						
ANR	8069813	Symbol	pcs		8069531						
ANR	8069814	Symbol	id_key		8069531						
ANR	8069815	Symbol	pcl_copy_before_overlay		8069531						
ANR	8069816	Symbol	& pcs -> macros		8069531						
ANR	8069817	Symbol	pcl_end_page_top		8069531						
ANR	8069818	Symbol	pcs -> pgs		8069531						
ANR	8069819	Symbol	false		8069531						
ANR	8069820	Symbol	pcs -> raster_state		8069531						
ANR	8069821	Symbol	pl_dict_find		8069531						
ANR	8069822	Symbol	condition		8069531						
ANR	8069823	Symbol	* * pcs		8069531						
ANR	8069824	Symbol	pcs -> end_page		8069531						
ANR	8069825	Symbol	pcs -> num_copies		8069531						
ANR	8069826	Symbol	put_param1_bool		8069531						
ANR	8069827	Symbol	true		8069531						
ANR	8069828	Symbol	pcl_reset_overlay		8069531						
ANR	8069829	Symbol	pcs -> overlay_enabled		8069531						
ANR	8069830	Symbol	pcl_end_graphics_mode		8069531						
ANR	8069831	Function	set_page_size	679:0:21754:22777							
ANR	8069832	FunctionDef	"set_page_size (pcl_args_t * pargs , pcl_state_t * pcs)"		8069831	0					
ANR	8069833	CompoundStatement		681:0:21818:22777	8069831	0					
ANR	8069834	IdentifierDeclStatement	uint tag = ( pcs -> page_set_on_command_line ? 101 : uint_arg ( pargs ) ) ;	687:4:22093:22159	8069831	0	True				
ANR	8069835	IdentifierDecl	tag = ( pcs -> page_set_on_command_line ? 101 : uint_arg ( pargs ) )		8069831	0					
ANR	8069836	IdentifierDeclType	uint		8069831	0					
ANR	8069837	Identifier	tag		8069831	1					
ANR	8069838	AssignmentExpression	tag = ( pcs -> page_set_on_command_line ? 101 : uint_arg ( pargs ) )		8069831	2		=			
ANR	8069839	Identifier	tag		8069831	0					
ANR	8069840	ConditionalExpression	pcs -> page_set_on_command_line ? 101 : uint_arg ( pargs )		8069831	1					
ANR	8069841	Condition	pcs -> page_set_on_command_line		8069831	0					
ANR	8069842	PtrMemberAccess	pcs -> page_set_on_command_line		8069831	0					
ANR	8069843	Identifier	pcs		8069831	0					
ANR	8069844	Identifier	page_set_on_command_line		8069831	1					
ANR	8069845	PrimaryExpression	101		8069831	1					
ANR	8069846	CallExpression	uint_arg ( pargs )		8069831	2					
ANR	8069847	Callee	uint_arg		8069831	0					
ANR	8069848	Identifier	uint_arg		8069831	0					
ANR	8069849	ArgumentList	pargs		8069831	1					
ANR	8069850	Argument	pargs		8069831	0					
ANR	8069851	Identifier	pargs		8069831	0					
ANR	8069852	IdentifierDeclStatement	int i ;	688:4:22165:22170	8069831	1	True				
ANR	8069853	IdentifierDecl	i		8069831	0					
ANR	8069854	IdentifierDeclType	int		8069831	0					
ANR	8069855	Identifier	i		8069831	1					
ANR	8069856	IdentifierDeclStatement	int code = 0 ;	689:4:22176:22188	8069831	2	True				
ANR	8069857	IdentifierDecl	code = 0		8069831	0					
ANR	8069858	IdentifierDeclType	int		8069831	0					
ANR	8069859	Identifier	code		8069831	1					
ANR	8069860	AssignmentExpression	code = 0		8069831	2		=			
ANR	8069861	Identifier	code		8069831	0					
ANR	8069862	PrimaryExpression	0		8069831	1					
ANR	8069863	IdentifierDeclStatement	const pcl_paper_size_t * psize = 0 ;	690:4:22194:22227	8069831	3	True				
ANR	8069864	IdentifierDecl	* psize = 0		8069831	0					
ANR	8069865	IdentifierDeclType	const pcl_paper_size_t *		8069831	0					
ANR	8069866	Identifier	psize		8069831	1					
ANR	8069867	AssignmentExpression	* psize = 0		8069831	2		=			
ANR	8069868	Identifier	psize		8069831	0					
ANR	8069869	PrimaryExpression	0		8069831	1					
ANR	8069870	ExpressionStatement	code = pcl_end_page_if_marked ( pcs )	694:4:22317:22351	8069831	4	True				
ANR	8069871	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8069831	0		=			
ANR	8069872	Identifier	code		8069831	0					
ANR	8069873	CallExpression	pcl_end_page_if_marked ( pcs )		8069831	1					
ANR	8069874	Callee	pcl_end_page_if_marked		8069831	0					
ANR	8069875	Identifier	pcl_end_page_if_marked		8069831	0					
ANR	8069876	ArgumentList	pcs		8069831	1					
ANR	8069877	Argument	pcs		8069831	0					
ANR	8069878	Identifier	pcs		8069831	0					
ANR	8069879	IfStatement	if ( code < 0 )		8069831	5					
ANR	8069880	Condition	code < 0	695:8:22361:22368	8069831	0	True				
ANR	8069881	RelationalExpression	code < 0		8069831	0		<			
ANR	8069882	Identifier	code		8069831	0					
ANR	8069883	PrimaryExpression	0		8069831	1					
ANR	8069884	ReturnStatement	return code ;	696:8:22379:22390	8069831	1	True				
ANR	8069885	Identifier	code		8069831	0					
ANR	8069886	ExpressionStatement	pcl_home_cursor ( pcs )	697:4:22396:22416	8069831	6	True				
ANR	8069887	CallExpression	pcl_home_cursor ( pcs )		8069831	0					
ANR	8069888	Callee	pcl_home_cursor		8069831	0					
ANR	8069889	Identifier	pcl_home_cursor		8069831	0					
ANR	8069890	ArgumentList	pcs		8069831	1					
ANR	8069891	Argument	pcs		8069831	0					
ANR	8069892	Identifier	pcs		8069831	0					
ANR	8069893	ForStatement	for ( i = 0 ; i < pcl_paper_type_count ; i ++ )		8069831	7					
ANR	8069894	ForInit	i = 0 ;	699:9:22428:22433	8069831	0	True				
ANR	8069895	AssignmentExpression	i = 0		8069831	0		=			
ANR	8069896	Identifier	i		8069831	0					
ANR	8069897	PrimaryExpression	0		8069831	1					
ANR	8069898	Condition	i < pcl_paper_type_count	699:16:22435:22458	8069831	1	True				
ANR	8069899	RelationalExpression	i < pcl_paper_type_count		8069831	0		<			
ANR	8069900	Identifier	i		8069831	0					
ANR	8069901	Identifier	pcl_paper_type_count		8069831	1					
ANR	8069902	PostIncDecOperationExpression	i ++	699:42:22461:22463	8069831	2	True				
ANR	8069903	Identifier	i		8069831	0					
ANR	8069904	IncDec	++		8069831	1					
ANR	8069905	CompoundStatement		19:47:647:647	8069831	3					
ANR	8069906	IfStatement	if ( tag == PAPER_SIZES [ i ] . tag )		8069831	0					
ANR	8069907	Condition	tag == PAPER_SIZES [ i ] . tag	700:12:22480:22504	8069831	0	True				
ANR	8069908	EqualityExpression	tag == PAPER_SIZES [ i ] . tag		8069831	0		==			
ANR	8069909	Identifier	tag		8069831	0					
ANR	8069910	MemberAccess	PAPER_SIZES [ i ] . tag		8069831	1					
ANR	8069911	ArrayIndexing	PAPER_SIZES [ i ]		8069831	0					
ANR	8069912	Identifier	PAPER_SIZES		8069831	0					
ANR	8069913	Identifier	i		8069831	1					
ANR	8069914	Identifier	tag		8069831	1					
ANR	8069915	CompoundStatement		20:39:688:688	8069831	1					
ANR	8069916	ExpressionStatement	psize = & ( PAPER_SIZES [ i ] . psize )	701:12:22521:22552	8069831	0	True				
ANR	8069917	AssignmentExpression	psize = & ( PAPER_SIZES [ i ] . psize )		8069831	0		=			
ANR	8069918	Identifier	psize		8069831	0					
ANR	8069919	UnaryOperationExpression	& ( PAPER_SIZES [ i ] . psize )		8069831	1					
ANR	8069920	UnaryOperator	&		8069831	0					
ANR	8069921	MemberAccess	PAPER_SIZES [ i ] . psize		8069831	1					
ANR	8069922	ArrayIndexing	PAPER_SIZES [ i ]		8069831	0					
ANR	8069923	Identifier	PAPER_SIZES		8069831	0					
ANR	8069924	Identifier	i		8069831	1					
ANR	8069925	Identifier	psize		8069831	1					
ANR	8069926	BreakStatement	break ;	702:12:22566:22571	8069831	1	True				
ANR	8069927	IfStatement	if ( ( psize != 0 ) && ( ( code = pcl_end_page_if_marked ( pcs ) ) >= 0 ) )		8069831	8					
ANR	8069928	Condition	( psize != 0 ) && ( ( code = pcl_end_page_if_marked ( pcs ) ) >= 0 )	705:8:22597:22655	8069831	0	True				
ANR	8069929	AndExpression	( psize != 0 ) && ( ( code = pcl_end_page_if_marked ( pcs ) ) >= 0 )		8069831	0		&&			
ANR	8069930	EqualityExpression	psize != 0		8069831	0		!=			
ANR	8069931	Identifier	psize		8069831	0					
ANR	8069932	PrimaryExpression	0		8069831	1					
ANR	8069933	RelationalExpression	( code = pcl_end_page_if_marked ( pcs ) ) >= 0		8069831	1		>=			
ANR	8069934	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8069831	0		=			
ANR	8069935	Identifier	code		8069831	0					
ANR	8069936	CallExpression	pcl_end_page_if_marked ( pcs )		8069831	1					
ANR	8069937	Callee	pcl_end_page_if_marked		8069831	0					
ANR	8069938	Identifier	pcl_end_page_if_marked		8069831	0					
ANR	8069939	ArgumentList	pcs		8069831	1					
ANR	8069940	Argument	pcs		8069831	0					
ANR	8069941	Identifier	pcs		8069831	0					
ANR	8069942	PrimaryExpression	0		8069831	1					
ANR	8069943	CompoundStatement		25:69:839:839	8069831	1					
ANR	8069944	ExpressionStatement	pcs -> xfm_state . print_dir = 0	706:8:22668:22696	8069831	0	True				
ANR	8069945	AssignmentExpression	pcs -> xfm_state . print_dir = 0		8069831	0		=			
ANR	8069946	MemberAccess	pcs -> xfm_state . print_dir		8069831	0					
ANR	8069947	PtrMemberAccess	pcs -> xfm_state		8069831	0					
ANR	8069948	Identifier	pcs		8069831	0					
ANR	8069949	Identifier	xfm_state		8069831	1					
ANR	8069950	Identifier	print_dir		8069831	1					
ANR	8069951	PrimaryExpression	0		8069831	1					
ANR	8069952	ExpressionStatement	"code = new_page_size ( pcs , psize , false , false )"	707:8:22706:22752	8069831	1	True				
ANR	8069953	AssignmentExpression	"code = new_page_size ( pcs , psize , false , false )"		8069831	0		=			
ANR	8069954	Identifier	code		8069831	0					
ANR	8069955	CallExpression	"new_page_size ( pcs , psize , false , false )"		8069831	1					
ANR	8069956	Callee	new_page_size		8069831	0					
ANR	8069957	Identifier	new_page_size		8069831	0					
ANR	8069958	ArgumentList	pcs		8069831	1					
ANR	8069959	Argument	pcs		8069831	0					
ANR	8069960	Identifier	pcs		8069831	0					
ANR	8069961	Argument	psize		8069831	1					
ANR	8069962	Identifier	psize		8069831	0					
ANR	8069963	Argument	false		8069831	2					
ANR	8069964	Identifier	false		8069831	0					
ANR	8069965	Argument	false		8069831	3					
ANR	8069966	Identifier	false		8069831	0					
ANR	8069967	ReturnStatement	return code ;	709:4:22764:22775	8069831	9	True				
ANR	8069968	Identifier	code		8069831	0					
ANR	8069969	ReturnType	static int		8069831	1					
ANR	8069970	Identifier	set_page_size		8069831	2					
ANR	8069971	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8069831	3					
ANR	8069972	Parameter	pcl_args_t * pargs	680:14:21779:21796	8069831	0	True				
ANR	8069973	ParameterType	pcl_args_t *		8069831	0					
ANR	8069974	Identifier	pargs		8069831	1					
ANR	8069975	Parameter	pcl_state_t * pcs	680:34:21799:21815	8069831	1	True				
ANR	8069976	ParameterType	pcl_state_t *		8069831	0					
ANR	8069977	Identifier	pcs		8069831	1					
ANR	8069978	CFGEntryNode	ENTRY		8069831		True				
ANR	8069979	CFGExitNode	EXIT		8069831		True				
ANR	8069980	Symbol	pcs		8069831						
ANR	8069981	Symbol	& PAPER_SIZES [ i ] . psize		8069831						
ANR	8069982	Symbol	code		8069831						
ANR	8069983	Symbol	false		8069831						
ANR	8069984	Symbol	i		8069831						
ANR	8069985	Symbol	pcl_paper_type_count		8069831						
ANR	8069986	Symbol	* pcs		8069831						
ANR	8069987	Symbol	PAPER_SIZES [ i ] . tag		8069831						
ANR	8069988	Symbol	pcl_end_page_if_marked		8069831						
ANR	8069989	Symbol	uint_arg		8069831						
ANR	8069990	Symbol	psize		8069831						
ANR	8069991	Symbol	pcs -> xfm_state		8069831						
ANR	8069992	Symbol	* i		8069831						
ANR	8069993	Symbol	new_page_size		8069831						
ANR	8069994	Symbol	pargs		8069831						
ANR	8069995	Symbol	pcs -> xfm_state . print_dir		8069831						
ANR	8069996	Symbol	tag		8069831						
ANR	8069997	Symbol	* PAPER_SIZES		8069831						
ANR	8069998	Symbol	pcs -> page_set_on_command_line		8069831						
ANR	8069999	Symbol	PAPER_SIZES		8069831						
ANR	8070000	Function	set_paper_source	717:0:22835:23684							
ANR	8070001	FunctionDef	"set_paper_source (pcl_args_t * pargs , pcl_state_t * pcs)"		8070000	0					
ANR	8070002	CompoundStatement		719:0:22902:23684	8070000	0					
ANR	8070003	IdentifierDeclStatement	uint i = uint_arg ( pargs ) ;	720:4:22908:22932	8070000	0	True				
ANR	8070004	IdentifierDecl	i = uint_arg ( pargs )		8070000	0					
ANR	8070005	IdentifierDeclType	uint		8070000	0					
ANR	8070006	Identifier	i		8070000	1					
ANR	8070007	AssignmentExpression	i = uint_arg ( pargs )		8070000	2		=			
ANR	8070008	Identifier	i		8070000	0					
ANR	8070009	CallExpression	uint_arg ( pargs )		8070000	1					
ANR	8070010	Callee	uint_arg		8070000	0					
ANR	8070011	Identifier	uint_arg		8070000	0					
ANR	8070012	ArgumentList	pargs		8070000	1					
ANR	8070013	Argument	pargs		8070000	0					
ANR	8070014	Identifier	pargs		8070000	0					
ANR	8070015	IdentifierDeclStatement	int code = pcl_end_page_if_marked ( pcs ) ;	723:4:23021:23059	8070000	1	True				
ANR	8070016	IdentifierDecl	code = pcl_end_page_if_marked ( pcs )		8070000	0					
ANR	8070017	IdentifierDeclType	int		8070000	0					
ANR	8070018	Identifier	code		8070000	1					
ANR	8070019	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8070000	2		=			
ANR	8070020	Identifier	code		8070000	0					
ANR	8070021	CallExpression	pcl_end_page_if_marked ( pcs )		8070000	1					
ANR	8070022	Callee	pcl_end_page_if_marked		8070000	0					
ANR	8070023	Identifier	pcl_end_page_if_marked		8070000	0					
ANR	8070024	ArgumentList	pcs		8070000	1					
ANR	8070025	Argument	pcs		8070000	0					
ANR	8070026	Identifier	pcs		8070000	0					
ANR	8070027	IfStatement	if ( code < 0 )		8070000	2					
ANR	8070028	Condition	code < 0	725:8:23070:23077	8070000	0	True				
ANR	8070029	RelationalExpression	code < 0		8070000	0		<			
ANR	8070030	Identifier	code		8070000	0					
ANR	8070031	PrimaryExpression	0		8070000	1					
ANR	8070032	ReturnStatement	return code ;	726:8:23088:23099	8070000	1	True				
ANR	8070033	Identifier	code		8070000	0					
ANR	8070034	ExpressionStatement	pcl_home_cursor ( pcs )	727:4:23105:23125	8070000	3	True				
ANR	8070035	CallExpression	pcl_home_cursor ( pcs )		8070000	0					
ANR	8070036	Callee	pcl_home_cursor		8070000	0					
ANR	8070037	Identifier	pcl_home_cursor		8070000	0					
ANR	8070038	ArgumentList	pcs		8070000	1					
ANR	8070039	Argument	pcs		8070000	0					
ANR	8070040	Identifier	pcs		8070000	0					
ANR	8070041	IfStatement	if ( pcs -> paper_source != i )		8070000	4					
ANR	8070042	Condition	pcs -> paper_source != i	729:8:23230:23251	8070000	0	True				
ANR	8070043	EqualityExpression	pcs -> paper_source != i		8070000	0		!=			
ANR	8070044	PtrMemberAccess	pcs -> paper_source		8070000	0					
ANR	8070045	Identifier	pcs		8070000	0					
ANR	8070046	Identifier	paper_source		8070000	1					
ANR	8070047	Identifier	i		8070000	1					
ANR	8070048	CompoundStatement		11:32:351:351	8070000	1					
ANR	8070049	ExpressionStatement	pcs -> back_side = false	730:8:23264:23286	8070000	0	True				
ANR	8070050	AssignmentExpression	pcs -> back_side = false		8070000	0		=			
ANR	8070051	PtrMemberAccess	pcs -> back_side		8070000	0					
ANR	8070052	Identifier	pcs		8070000	0					
ANR	8070053	Identifier	back_side		8070000	1					
ANR	8070054	Identifier	false		8070000	1					
ANR	8070055	ExpressionStatement	"code = put_param1_bool ( pcs , ""FirstSide"" , ! pcs -> back_side )"	731:8:23296:23353	8070000	1	True				
ANR	8070056	AssignmentExpression	"code = put_param1_bool ( pcs , ""FirstSide"" , ! pcs -> back_side )"		8070000	0		=			
ANR	8070057	Identifier	code		8070000	0					
ANR	8070058	CallExpression	"put_param1_bool ( pcs , ""FirstSide"" , ! pcs -> back_side )"		8070000	1					
ANR	8070059	Callee	put_param1_bool		8070000	0					
ANR	8070060	Identifier	put_param1_bool		8070000	0					
ANR	8070061	ArgumentList	pcs		8070000	1					
ANR	8070062	Argument	pcs		8070000	0					
ANR	8070063	Identifier	pcs		8070000	0					
ANR	8070064	Argument	"""FirstSide"""		8070000	1					
ANR	8070065	PrimaryExpression	"""FirstSide"""		8070000	0					
ANR	8070066	Argument	! pcs -> back_side		8070000	2					
ANR	8070067	UnaryOperationExpression	! pcs -> back_side		8070000	0					
ANR	8070068	UnaryOperator	!		8070000	0					
ANR	8070069	PtrMemberAccess	pcs -> back_side		8070000	1					
ANR	8070070	Identifier	pcs		8070000	0					
ANR	8070071	Identifier	back_side		8070000	1					
ANR	8070072	IfStatement	if ( code < 0 )		8070000	2					
ANR	8070073	Condition	code < 0	732:12:23367:23374	8070000	0	True				
ANR	8070074	RelationalExpression	code < 0		8070000	0		<			
ANR	8070075	Identifier	code		8070000	0					
ANR	8070076	PrimaryExpression	0		8070000	1					
ANR	8070077	ReturnStatement	return code ;	733:12:23389:23400	8070000	1	True				
ANR	8070078	Identifier	code		8070000	0					
ANR	8070079	ExpressionStatement	pcs -> paper_source = i	735:4:23412:23433	8070000	5	True				
ANR	8070080	AssignmentExpression	pcs -> paper_source = i		8070000	0		=			
ANR	8070081	PtrMemberAccess	pcs -> paper_source		8070000	0					
ANR	8070082	Identifier	pcs		8070000	0					
ANR	8070083	Identifier	paper_source		8070000	1					
ANR	8070084	Identifier	i		8070000	1					
ANR	8070085	IfStatement	if ( i <= 6 )		8070000	6					
ANR	8070086	Condition	i <= 6	737:8:23505:23510	8070000	0	True				
ANR	8070087	RelationalExpression	i <= 6		8070000	0		<=			
ANR	8070088	Identifier	i		8070000	0					
ANR	8070089	PrimaryExpression	6		8070000	1					
ANR	8070090	CompoundStatement		19:16:610:610	8070000	1					
ANR	8070091	ExpressionStatement	code = 0	738:8:23523:23531	8070000	0	True				
ANR	8070092	AssignmentExpression	code = 0		8070000	0		=			
ANR	8070093	Identifier	code		8070000	0					
ANR	8070094	PrimaryExpression	0		8070000	1					
ANR	8070095	IfStatement	if ( i > 0 )		8070000	1					
ANR	8070096	Condition	i > 0	739:12:23545:23549	8070000	0	True				
ANR	8070097	RelationalExpression	i > 0		8070000	0		>			
ANR	8070098	Identifier	i		8070000	0					
ANR	8070099	PrimaryExpression	0		8070000	1					
ANR	8070100	ExpressionStatement	"code = put_param1_int ( pcs , ""%MediaSource"" , i )"	740:12:23564:23609	8070000	1	True				
ANR	8070101	AssignmentExpression	"code = put_param1_int ( pcs , ""%MediaSource"" , i )"		8070000	0		=			
ANR	8070102	Identifier	code		8070000	0					
ANR	8070103	CallExpression	"put_param1_int ( pcs , ""%MediaSource"" , i )"		8070000	1					
ANR	8070104	Callee	put_param1_int		8070000	0					
ANR	8070105	Identifier	put_param1_int		8070000	0					
ANR	8070106	ArgumentList	pcs		8070000	1					
ANR	8070107	Argument	pcs		8070000	0					
ANR	8070108	Identifier	pcs		8070000	0					
ANR	8070109	Argument	"""%MediaSource"""		8070000	1					
ANR	8070110	PrimaryExpression	"""%MediaSource"""		8070000	0					
ANR	8070111	Argument	i		8070000	2					
ANR	8070112	Identifier	i		8070000	0					
ANR	8070113	ReturnStatement	return ( code < 0 ? code : 0 ) ;	741:8:23619:23647	8070000	2	True				
ANR	8070114	ConditionalExpression	code < 0 ? code : 0		8070000	0					
ANR	8070115	Condition	code < 0		8070000	0					
ANR	8070116	RelationalExpression	code < 0		8070000	0		<			
ANR	8070117	Identifier	code		8070000	0					
ANR	8070118	PrimaryExpression	0		8070000	1					
ANR	8070119	Identifier	code		8070000	1					
ANR	8070120	PrimaryExpression	0		8070000	2					
ANR	8070121	ElseStatement	else		8070000	0					
ANR	8070122	ReturnStatement	return e_Range ;	743:8:23668:23682	8070000	0	True				
ANR	8070123	Identifier	e_Range		8070000	0					
ANR	8070124	ReturnType	static int		8070000	1					
ANR	8070125	Identifier	set_paper_source		8070000	2					
ANR	8070126	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070000	3					
ANR	8070127	Parameter	pcl_args_t * pargs	718:17:22863:22880	8070000	0	True				
ANR	8070128	ParameterType	pcl_args_t *		8070000	0					
ANR	8070129	Identifier	pargs		8070000	1					
ANR	8070130	Parameter	pcl_state_t * pcs	718:37:22883:22899	8070000	1	True				
ANR	8070131	ParameterType	pcl_state_t *		8070000	0					
ANR	8070132	Identifier	pcs		8070000	1					
ANR	8070133	CFGEntryNode	ENTRY		8070000		True				
ANR	8070134	CFGExitNode	EXIT		8070000		True				
ANR	8070135	Symbol	e_Range		8070000						
ANR	8070136	Symbol	pcs		8070000						
ANR	8070137	Symbol	code		8070000						
ANR	8070138	Symbol	false		8070000						
ANR	8070139	Symbol	i		8070000						
ANR	8070140	Symbol	* pcs		8070000						
ANR	8070141	Symbol	pcl_end_page_if_marked		8070000						
ANR	8070142	Symbol	uint_arg		8070000						
ANR	8070143	Symbol	pcs -> paper_source		8070000						
ANR	8070144	Symbol	pcs -> back_side		8070000						
ANR	8070145	Symbol	pargs		8070000						
ANR	8070146	Symbol	put_param1_bool		8070000						
ANR	8070147	Symbol	put_param1_int		8070000						
ANR	8070148	Function	set_left_offset_registration	752:0:23850:24036							
ANR	8070149	FunctionDef	"set_left_offset_registration (pcl_args_t * pargs , pcl_state_t * pcs)"		8070148	0					
ANR	8070150	CompoundStatement		754:0:23929:24036	8070148	0					
ANR	8070151	ExpressionStatement	pcs -> xfm_state . left_offset_cp = float_arg ( pargs ) * 10.0	755:4:23935:23990	8070148	0	True				
ANR	8070152	AssignmentExpression	pcs -> xfm_state . left_offset_cp = float_arg ( pargs ) * 10.0		8070148	0		=			
ANR	8070153	MemberAccess	pcs -> xfm_state . left_offset_cp		8070148	0					
ANR	8070154	PtrMemberAccess	pcs -> xfm_state		8070148	0					
ANR	8070155	Identifier	pcs		8070148	0					
ANR	8070156	Identifier	xfm_state		8070148	1					
ANR	8070157	Identifier	left_offset_cp		8070148	1					
ANR	8070158	MultiplicativeExpression	float_arg ( pargs ) * 10.0		8070148	1		*			
ANR	8070159	CallExpression	float_arg ( pargs )		8070148	0					
ANR	8070160	Callee	float_arg		8070148	0					
ANR	8070161	Identifier	float_arg		8070148	0					
ANR	8070162	ArgumentList	pargs		8070148	1					
ANR	8070163	Argument	pargs		8070148	0					
ANR	8070164	Identifier	pargs		8070148	0					
ANR	8070165	PrimaryExpression	10.0		8070148	1					
ANR	8070166	ExpressionStatement	"update_xfm_state ( pcs , 0 )"	756:4:23996:24020	8070148	1	True				
ANR	8070167	CallExpression	"update_xfm_state ( pcs , 0 )"		8070148	0					
ANR	8070168	Callee	update_xfm_state		8070148	0					
ANR	8070169	Identifier	update_xfm_state		8070148	0					
ANR	8070170	ArgumentList	pcs		8070148	1					
ANR	8070171	Argument	pcs		8070148	0					
ANR	8070172	Identifier	pcs		8070148	0					
ANR	8070173	Argument	0		8070148	1					
ANR	8070174	PrimaryExpression	0		8070148	0					
ANR	8070175	ReturnStatement	return 0 ;	757:4:24026:24034	8070148	2	True				
ANR	8070176	PrimaryExpression	0		8070148	0					
ANR	8070177	ReturnType	static int		8070148	1					
ANR	8070178	Identifier	set_left_offset_registration		8070148	2					
ANR	8070179	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070148	3					
ANR	8070180	Parameter	pcl_args_t * pargs	753:29:23890:23907	8070148	0	True				
ANR	8070181	ParameterType	pcl_args_t *		8070148	0					
ANR	8070182	Identifier	pargs		8070148	1					
ANR	8070183	Parameter	pcl_state_t * pcs	753:49:23910:23926	8070148	1	True				
ANR	8070184	ParameterType	pcl_state_t *		8070148	0					
ANR	8070185	Identifier	pcs		8070148	1					
ANR	8070186	CFGEntryNode	ENTRY		8070148		True				
ANR	8070187	CFGExitNode	EXIT		8070148		True				
ANR	8070188	Symbol	pcs		8070148						
ANR	8070189	Symbol	pcs -> xfm_state		8070148						
ANR	8070190	Symbol	pcs -> xfm_state . left_offset_cp		8070148						
ANR	8070191	Symbol	pargs		8070148						
ANR	8070192	Symbol	* pcs		8070148						
ANR	8070193	Symbol	float_arg		8070148						
ANR	8070194	Function	set_top_offset_registration	766:0:24202:24384							
ANR	8070195	FunctionDef	"set_top_offset_registration (pcl_args_t * pargs , pcl_state_t * pcs)"		8070194	0					
ANR	8070196	CompoundStatement		768:0:24280:24384	8070194	0					
ANR	8070197	ExpressionStatement	pcs -> xfm_state . top_offset_cp = float_arg ( pargs ) * 10	769:4:24286:24338	8070194	0	True				
ANR	8070198	AssignmentExpression	pcs -> xfm_state . top_offset_cp = float_arg ( pargs ) * 10		8070194	0		=			
ANR	8070199	MemberAccess	pcs -> xfm_state . top_offset_cp		8070194	0					
ANR	8070200	PtrMemberAccess	pcs -> xfm_state		8070194	0					
ANR	8070201	Identifier	pcs		8070194	0					
ANR	8070202	Identifier	xfm_state		8070194	1					
ANR	8070203	Identifier	top_offset_cp		8070194	1					
ANR	8070204	MultiplicativeExpression	float_arg ( pargs ) * 10		8070194	1		*			
ANR	8070205	CallExpression	float_arg ( pargs )		8070194	0					
ANR	8070206	Callee	float_arg		8070194	0					
ANR	8070207	Identifier	float_arg		8070194	0					
ANR	8070208	ArgumentList	pargs		8070194	1					
ANR	8070209	Argument	pargs		8070194	0					
ANR	8070210	Identifier	pargs		8070194	0					
ANR	8070211	PrimaryExpression	10		8070194	1					
ANR	8070212	ExpressionStatement	"update_xfm_state ( pcs , 0 )"	770:4:24344:24368	8070194	1	True				
ANR	8070213	CallExpression	"update_xfm_state ( pcs , 0 )"		8070194	0					
ANR	8070214	Callee	update_xfm_state		8070194	0					
ANR	8070215	Identifier	update_xfm_state		8070194	0					
ANR	8070216	ArgumentList	pcs		8070194	1					
ANR	8070217	Argument	pcs		8070194	0					
ANR	8070218	Identifier	pcs		8070194	0					
ANR	8070219	Argument	0		8070194	1					
ANR	8070220	PrimaryExpression	0		8070194	0					
ANR	8070221	ReturnStatement	return 0 ;	771:4:24374:24382	8070194	2	True				
ANR	8070222	PrimaryExpression	0		8070194	0					
ANR	8070223	ReturnType	static int		8070194	1					
ANR	8070224	Identifier	set_top_offset_registration		8070194	2					
ANR	8070225	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070194	3					
ANR	8070226	Parameter	pcl_args_t * pargs	767:28:24241:24258	8070194	0	True				
ANR	8070227	ParameterType	pcl_args_t *		8070194	0					
ANR	8070228	Identifier	pargs		8070194	1					
ANR	8070229	Parameter	pcl_state_t * pcs	767:48:24261:24277	8070194	1	True				
ANR	8070230	ParameterType	pcl_state_t *		8070194	0					
ANR	8070231	Identifier	pcs		8070194	1					
ANR	8070232	CFGEntryNode	ENTRY		8070194		True				
ANR	8070233	CFGExitNode	EXIT		8070194		True				
ANR	8070234	Symbol	pcs		8070194						
ANR	8070235	Symbol	pcs -> xfm_state . top_offset_cp		8070194						
ANR	8070236	Symbol	pcs -> xfm_state		8070194						
ANR	8070237	Symbol	pargs		8070194						
ANR	8070238	Symbol	* pcs		8070194						
ANR	8070239	Symbol	float_arg		8070194						
ANR	8070240	Function	set_logical_page_orientation	779:0:24452:25579							
ANR	8070241	FunctionDef	"set_logical_page_orientation (pcl_args_t * pargs , pcl_state_t * pcs)"		8070240	0					
ANR	8070242	CompoundStatement		781:0:24531:25579	8070240	0					
ANR	8070243	IdentifierDeclStatement	uint i = uint_arg ( pargs ) ;	782:4:24537:24561	8070240	0	True				
ANR	8070244	IdentifierDecl	i = uint_arg ( pargs )		8070240	0					
ANR	8070245	IdentifierDeclType	uint		8070240	0					
ANR	8070246	Identifier	i		8070240	1					
ANR	8070247	AssignmentExpression	i = uint_arg ( pargs )		8070240	2		=			
ANR	8070248	Identifier	i		8070240	0					
ANR	8070249	CallExpression	uint_arg ( pargs )		8070240	1					
ANR	8070250	Callee	uint_arg		8070240	0					
ANR	8070251	Identifier	uint_arg		8070240	0					
ANR	8070252	ArgumentList	pargs		8070240	1					
ANR	8070253	Argument	pargs		8070240	0					
ANR	8070254	Identifier	pargs		8070240	0					
ANR	8070255	IdentifierDeclStatement	int code ;	783:4:24567:24575	8070240	1	True				
ANR	8070256	IdentifierDecl	code		8070240	0					
ANR	8070257	IdentifierDeclType	int		8070240	0					
ANR	8070258	Identifier	code		8070240	1					
ANR	8070259	IfStatement	if ( i > 3 )		8070240	2					
ANR	8070260	Condition	i > 3	785:8:24649:24653	8070240	0	True				
ANR	8070261	RelationalExpression	i > 3		8070240	0		>			
ANR	8070262	Identifier	i		8070240	0					
ANR	8070263	PrimaryExpression	3		8070240	1					
ANR	8070264	ReturnStatement	return 0 ;	786:8:24664:24672	8070240	1	True				
ANR	8070265	PrimaryExpression	0		8070240	0					
ANR	8070266	IfStatement	if ( pcs -> end_page != pcl_end_page_top )		8070240	3					
ANR	8070267	Condition	pcs -> end_page != pcl_end_page_top	790:8:24792:24824	8070240	0	True				
ANR	8070268	EqualityExpression	pcs -> end_page != pcl_end_page_top		8070240	0		!=			
ANR	8070269	PtrMemberAccess	pcs -> end_page		8070240	0					
ANR	8070270	Identifier	pcs		8070240	0					
ANR	8070271	Identifier	end_page		8070240	1					
ANR	8070272	Identifier	pcl_end_page_top		8070240	1					
ANR	8070273	CompoundStatement		10:43:295:295	8070240	1					
ANR	8070274	ReturnStatement	return 0 ;	791:8:24837:24845	8070240	0	True				
ANR	8070275	PrimaryExpression	0		8070240	0					
ANR	8070276	IfStatement	if ( i == pcs -> xfm_state . lp_orient )		8070240	4					
ANR	8070277	Condition	i == pcs -> xfm_state . lp_orient	795:8:24924:24952	8070240	0	True				
ANR	8070278	EqualityExpression	i == pcs -> xfm_state . lp_orient		8070240	0		==			
ANR	8070279	Identifier	i		8070240	0					
ANR	8070280	MemberAccess	pcs -> xfm_state . lp_orient		8070240	1					
ANR	8070281	PtrMemberAccess	pcs -> xfm_state		8070240	0					
ANR	8070282	Identifier	pcs		8070240	0					
ANR	8070283	Identifier	xfm_state		8070240	1					
ANR	8070284	Identifier	lp_orient		8070240	1					
ANR	8070285	CompoundStatement		15:39:423:423	8070240	1					
ANR	8070286	ReturnStatement	return 0 ;	796:8:24965:24973	8070240	0	True				
ANR	8070287	PrimaryExpression	0		8070240	0					
ANR	8070288	ExpressionStatement	code = pcl_end_page_if_marked ( pcs )	801:4:25128:25162	8070240	5	True				
ANR	8070289	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8070240	0		=			
ANR	8070290	Identifier	code		8070240	0					
ANR	8070291	CallExpression	pcl_end_page_if_marked ( pcs )		8070240	1					
ANR	8070292	Callee	pcl_end_page_if_marked		8070240	0					
ANR	8070293	Identifier	pcl_end_page_if_marked		8070240	0					
ANR	8070294	ArgumentList	pcs		8070240	1					
ANR	8070295	Argument	pcs		8070240	0					
ANR	8070296	Identifier	pcs		8070240	0					
ANR	8070297	IfStatement	if ( code >= 0 )		8070240	6					
ANR	8070298	Condition	code >= 0	802:8:25172:25180	8070240	0	True				
ANR	8070299	RelationalExpression	code >= 0		8070240	0		>=			
ANR	8070300	Identifier	code		8070240	0					
ANR	8070301	PrimaryExpression	0		8070240	1					
ANR	8070302	CompoundStatement		25:8:791:828	8070240	1					
ANR	8070303	IdentifierDeclStatement	bool cursor_moved = pcs -> cursor_moved ;	805:8:25323:25360	8070240	0	True				
ANR	8070304	IdentifierDecl	cursor_moved = pcs -> cursor_moved		8070240	0					
ANR	8070305	IdentifierDeclType	bool		8070240	0					
ANR	8070306	Identifier	cursor_moved		8070240	1					
ANR	8070307	AssignmentExpression	cursor_moved = pcs -> cursor_moved		8070240	2		=			
ANR	8070308	Identifier	cursor_moved		8070240	0					
ANR	8070309	PtrMemberAccess	pcs -> cursor_moved		8070240	1					
ANR	8070310	Identifier	pcs		8070240	0					
ANR	8070311	Identifier	cursor_moved		8070240	1					
ANR	8070312	ExpressionStatement	"code = new_logical_page ( pcs , i , pcs -> xfm_state . paper_size , false , false )"	806:8:25370:25442	8070240	1	True				
ANR	8070313	AssignmentExpression	"code = new_logical_page ( pcs , i , pcs -> xfm_state . paper_size , false , false )"		8070240	0		=			
ANR	8070314	Identifier	code		8070240	0					
ANR	8070315	CallExpression	"new_logical_page ( pcs , i , pcs -> xfm_state . paper_size , false , false )"		8070240	1					
ANR	8070316	Callee	new_logical_page		8070240	0					
ANR	8070317	Identifier	new_logical_page		8070240	0					
ANR	8070318	ArgumentList	pcs		8070240	1					
ANR	8070319	Argument	pcs		8070240	0					
ANR	8070320	Identifier	pcs		8070240	0					
ANR	8070321	Argument	i		8070240	1					
ANR	8070322	Identifier	i		8070240	0					
ANR	8070323	Argument	pcs -> xfm_state . paper_size		8070240	2					
ANR	8070324	MemberAccess	pcs -> xfm_state . paper_size		8070240	0					
ANR	8070325	PtrMemberAccess	pcs -> xfm_state		8070240	0					
ANR	8070326	Identifier	pcs		8070240	0					
ANR	8070327	Identifier	xfm_state		8070240	1					
ANR	8070328	Identifier	paper_size		8070240	1					
ANR	8070329	Argument	false		8070240	3					
ANR	8070330	Identifier	false		8070240	0					
ANR	8070331	Argument	false		8070240	4					
ANR	8070332	Identifier	false		8070240	0					
ANR	8070333	ExpressionStatement	pcs -> cursor_moved = cursor_moved	807:8:25452:25484	8070240	2	True				
ANR	8070334	AssignmentExpression	pcs -> cursor_moved = cursor_moved		8070240	0		=			
ANR	8070335	PtrMemberAccess	pcs -> cursor_moved		8070240	0					
ANR	8070336	Identifier	pcs		8070240	0					
ANR	8070337	Identifier	cursor_moved		8070240	1					
ANR	8070338	Identifier	cursor_moved		8070240	1					
ANR	8070339	ExpressionStatement	pcs -> hmi_cp = HMI_DEFAULT	808:8:25494:25519	8070240	3	True				
ANR	8070340	AssignmentExpression	pcs -> hmi_cp = HMI_DEFAULT		8070240	0		=			
ANR	8070341	PtrMemberAccess	pcs -> hmi_cp		8070240	0					
ANR	8070342	Identifier	pcs		8070240	0					
ANR	8070343	Identifier	hmi_cp		8070240	1					
ANR	8070344	Identifier	HMI_DEFAULT		8070240	1					
ANR	8070345	ExpressionStatement	pcs -> vmi_cp = VMI_DEFAULT	809:8:25529:25554	8070240	4	True				
ANR	8070346	AssignmentExpression	pcs -> vmi_cp = VMI_DEFAULT		8070240	0		=			
ANR	8070347	PtrMemberAccess	pcs -> vmi_cp		8070240	0					
ANR	8070348	Identifier	pcs		8070240	0					
ANR	8070349	Identifier	vmi_cp		8070240	1					
ANR	8070350	Identifier	VMI_DEFAULT		8070240	1					
ANR	8070351	ReturnStatement	return code ;	811:4:25566:25577	8070240	7	True				
ANR	8070352	Identifier	code		8070240	0					
ANR	8070353	ReturnType	static int		8070240	1					
ANR	8070354	Identifier	set_logical_page_orientation		8070240	2					
ANR	8070355	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070240	3					
ANR	8070356	Parameter	pcl_args_t * pargs	780:29:24492:24509	8070240	0	True				
ANR	8070357	ParameterType	pcl_args_t *		8070240	0					
ANR	8070358	Identifier	pargs		8070240	1					
ANR	8070359	Parameter	pcl_state_t * pcs	780:49:24512:24528	8070240	1	True				
ANR	8070360	ParameterType	pcl_state_t *		8070240	0					
ANR	8070361	Identifier	pcs		8070240	1					
ANR	8070362	CFGEntryNode	ENTRY		8070240		True				
ANR	8070363	CFGExitNode	EXIT		8070240		True				
ANR	8070364	Symbol	pcs		8070240						
ANR	8070365	Symbol	code		8070240						
ANR	8070366	Symbol	pcl_end_page_top		8070240						
ANR	8070367	Symbol	pcs -> hmi_cp		8070240						
ANR	8070368	Symbol	false		8070240						
ANR	8070369	Symbol	i		8070240						
ANR	8070370	Symbol	VMI_DEFAULT		8070240						
ANR	8070371	Symbol	* pcs		8070240						
ANR	8070372	Symbol	pcl_end_page_if_marked		8070240						
ANR	8070373	Symbol	uint_arg		8070240						
ANR	8070374	Symbol	pcs -> xfm_state . lp_orient		8070240						
ANR	8070375	Symbol	cursor_moved		8070240						
ANR	8070376	Symbol	pcs -> xfm_state . paper_size		8070240						
ANR	8070377	Symbol	pcs -> xfm_state		8070240						
ANR	8070378	Symbol	pcs -> end_page		8070240						
ANR	8070379	Symbol	pcs -> cursor_moved		8070240						
ANR	8070380	Symbol	pargs		8070240						
ANR	8070381	Symbol	pcs -> vmi_cp		8070240						
ANR	8070382	Symbol	HMI_DEFAULT		8070240						
ANR	8070383	Symbol	new_logical_page		8070240						
ANR	8070384	Function	set_print_direction	817:0:25610:26100							
ANR	8070385	FunctionDef	"set_print_direction (pcl_args_t * pargs , pcl_state_t * pcs)"		8070384	0					
ANR	8070386	CompoundStatement		819:0:25680:26100	8070384	0					
ANR	8070387	IdentifierDeclStatement	uint i = uint_arg ( pargs ) ;	820:4:25686:25710	8070384	0	True				
ANR	8070388	IdentifierDecl	i = uint_arg ( pargs )		8070384	0					
ANR	8070389	IdentifierDeclType	uint		8070384	0					
ANR	8070390	Identifier	i		8070384	1					
ANR	8070391	AssignmentExpression	i = uint_arg ( pargs )		8070384	2		=			
ANR	8070392	Identifier	i		8070384	0					
ANR	8070393	CallExpression	uint_arg ( pargs )		8070384	1					
ANR	8070394	Callee	uint_arg		8070384	0					
ANR	8070395	Identifier	uint_arg		8070384	0					
ANR	8070396	ArgumentList	pargs		8070384	1					
ANR	8070397	Argument	pargs		8070384	0					
ANR	8070398	Identifier	pargs		8070384	0					
ANR	8070399	IfStatement	if ( ( i <= 270 ) && ( i % 90 == 0 ) )		8070384	1					
ANR	8070400	Condition	( i <= 270 ) && ( i % 90 == 0 )	822:8:25721:25747	8070384	0	True				
ANR	8070401	AndExpression	( i <= 270 ) && ( i % 90 == 0 )		8070384	0		&&			
ANR	8070402	RelationalExpression	i <= 270		8070384	0		<=			
ANR	8070403	Identifier	i		8070384	0					
ANR	8070404	PrimaryExpression	270		8070384	1					
ANR	8070405	EqualityExpression	i % 90 == 0		8070384	1		==			
ANR	8070406	MultiplicativeExpression	i % 90		8070384	0		%			
ANR	8070407	Identifier	i		8070384	0					
ANR	8070408	PrimaryExpression	90		8070384	1					
ANR	8070409	PrimaryExpression	0		8070384	1					
ANR	8070410	CompoundStatement		4:37:69:69	8070384	1					
ANR	8070411	ExpressionStatement	i /= 90	823:8:25760:25767	8070384	0	True				
ANR	8070412	AssignmentExpression	i /= 90		8070384	0		/=			
ANR	8070413	Identifier	i		8070384	0					
ANR	8070414	PrimaryExpression	90		8070384	1					
ANR	8070415	IfStatement	if ( i != pcs -> xfm_state . print_dir )		8070384	1					
ANR	8070416	Condition	i != pcs -> xfm_state . print_dir	824:12:25781:25809	8070384	0	True				
ANR	8070417	EqualityExpression	i != pcs -> xfm_state . print_dir		8070384	0		!=			
ANR	8070418	Identifier	i		8070384	0					
ANR	8070419	MemberAccess	pcs -> xfm_state . print_dir		8070384	1					
ANR	8070420	PtrMemberAccess	pcs -> xfm_state		8070384	0					
ANR	8070421	Identifier	pcs		8070384	0					
ANR	8070422	Identifier	xfm_state		8070384	1					
ANR	8070423	Identifier	print_dir		8070384	1					
ANR	8070424	CompoundStatement		6:43:131:131	8070384	1					
ANR	8070425	ExpressionStatement	pcl_break_underline ( pcs )	825:12:25826:25850	8070384	0	True				
ANR	8070426	CallExpression	pcl_break_underline ( pcs )		8070384	0					
ANR	8070427	Callee	pcl_break_underline		8070384	0					
ANR	8070428	Identifier	pcl_break_underline		8070384	0					
ANR	8070429	ArgumentList	pcs		8070384	1					
ANR	8070430	Argument	pcs		8070384	0					
ANR	8070431	Identifier	pcs		8070384	0					
ANR	8070432	ExpressionStatement	pcs -> xfm_state . print_dir = i	826:12:25864:25892	8070384	1	True				
ANR	8070433	AssignmentExpression	pcs -> xfm_state . print_dir = i		8070384	0		=			
ANR	8070434	MemberAccess	pcs -> xfm_state . print_dir		8070384	0					
ANR	8070435	PtrMemberAccess	pcs -> xfm_state		8070384	0					
ANR	8070436	Identifier	pcs		8070384	0					
ANR	8070437	Identifier	xfm_state		8070384	1					
ANR	8070438	Identifier	print_dir		8070384	1					
ANR	8070439	Identifier	i		8070384	1					
ANR	8070440	ExpressionStatement	"update_xfm_state ( pcs , 0 )"	827:12:25906:25930	8070384	2	True				
ANR	8070441	CallExpression	"update_xfm_state ( pcs , 0 )"		8070384	0					
ANR	8070442	Callee	update_xfm_state		8070384	0					
ANR	8070443	Identifier	update_xfm_state		8070384	0					
ANR	8070444	ArgumentList	pcs		8070384	1					
ANR	8070445	Argument	pcs		8070384	0					
ANR	8070446	Identifier	pcs		8070384	0					
ANR	8070447	Argument	0		8070384	1					
ANR	8070448	PrimaryExpression	0		8070384	0					
ANR	8070449	ExpressionStatement	pcl_continue_underline ( pcs )	828:12:25944:25971	8070384	3	True				
ANR	8070450	CallExpression	pcl_continue_underline ( pcs )		8070384	0					
ANR	8070451	Callee	pcl_continue_underline		8070384	0					
ANR	8070452	Identifier	pcl_continue_underline		8070384	0					
ANR	8070453	ArgumentList	pcs		8070384	1					
ANR	8070454	Argument	pcs		8070384	0					
ANR	8070455	Identifier	pcs		8070384	0					
ANR	8070456	ElseStatement	else		8070384	0					
ANR	8070457	CompoundStatement		11:15:307:307	8070384	0					
ANR	8070458	ExpressionStatement	pcs -> xfm_state . print_dir = i	830:12:26002:26030	8070384	0	True				
ANR	8070459	AssignmentExpression	pcs -> xfm_state . print_dir = i		8070384	0		=			
ANR	8070460	MemberAccess	pcs -> xfm_state . print_dir		8070384	0					
ANR	8070461	PtrMemberAccess	pcs -> xfm_state		8070384	0					
ANR	8070462	Identifier	pcs		8070384	0					
ANR	8070463	Identifier	xfm_state		8070384	1					
ANR	8070464	Identifier	print_dir		8070384	1					
ANR	8070465	Identifier	i		8070384	1					
ANR	8070466	ExpressionStatement	"update_xfm_state ( pcs , 0 )"	831:12:26044:26068	8070384	1	True				
ANR	8070467	CallExpression	"update_xfm_state ( pcs , 0 )"		8070384	0					
ANR	8070468	Callee	update_xfm_state		8070384	0					
ANR	8070469	Identifier	update_xfm_state		8070384	0					
ANR	8070470	ArgumentList	pcs		8070384	1					
ANR	8070471	Argument	pcs		8070384	0					
ANR	8070472	Identifier	pcs		8070384	0					
ANR	8070473	Argument	0		8070384	1					
ANR	8070474	PrimaryExpression	0		8070384	0					
ANR	8070475	ReturnStatement	return 0 ;	834:4:26090:26098	8070384	2	True				
ANR	8070476	PrimaryExpression	0		8070384	0					
ANR	8070477	ReturnType	static int		8070384	1					
ANR	8070478	Identifier	set_print_direction		8070384	2					
ANR	8070479	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070384	3					
ANR	8070480	Parameter	pcl_args_t * pargs	818:20:25641:25658	8070384	0	True				
ANR	8070481	ParameterType	pcl_args_t *		8070384	0					
ANR	8070482	Identifier	pargs		8070384	1					
ANR	8070483	Parameter	pcl_state_t * pcs	818:40:25661:25677	8070384	1	True				
ANR	8070484	ParameterType	pcl_state_t *		8070384	0					
ANR	8070485	Identifier	pcs		8070384	1					
ANR	8070486	CFGEntryNode	ENTRY		8070384		True				
ANR	8070487	CFGExitNode	EXIT		8070384		True				
ANR	8070488	Symbol	pcs		8070384						
ANR	8070489	Symbol	pcs -> xfm_state		8070384						
ANR	8070490	Symbol	pargs		8070384						
ANR	8070491	Symbol	pcs -> xfm_state . print_dir		8070384						
ANR	8070492	Symbol	i		8070384						
ANR	8070493	Symbol	* pcs		8070384						
ANR	8070494	Symbol	uint_arg		8070384						
ANR	8070495	Function	set_left_margin	842:0:26152:26667							
ANR	8070496	FunctionDef	"set_left_margin (pcl_args_t * pargs , pcl_state_t * pcs)"		8070495	0					
ANR	8070497	CompoundStatement		844:0:26218:26667	8070495	0					
ANR	8070498	IdentifierDeclStatement	coord lmarg = uint_arg ( pargs ) * pcl_hmi ( pcs ) ;	845:4:26224:26268	8070495	0	True				
ANR	8070499	IdentifierDecl	lmarg = uint_arg ( pargs ) * pcl_hmi ( pcs )		8070495	0					
ANR	8070500	IdentifierDeclType	coord		8070495	0					
ANR	8070501	Identifier	lmarg		8070495	1					
ANR	8070502	AssignmentExpression	lmarg = uint_arg ( pargs ) * pcl_hmi ( pcs )		8070495	2		=			
ANR	8070503	Identifier	lmarg		8070495	0					
ANR	8070504	MultiplicativeExpression	uint_arg ( pargs ) * pcl_hmi ( pcs )		8070495	1		*			
ANR	8070505	CallExpression	uint_arg ( pargs )		8070495	0					
ANR	8070506	Callee	uint_arg		8070495	0					
ANR	8070507	Identifier	uint_arg		8070495	0					
ANR	8070508	ArgumentList	pargs		8070495	1					
ANR	8070509	Argument	pargs		8070495	0					
ANR	8070510	Identifier	pargs		8070495	0					
ANR	8070511	CallExpression	pcl_hmi ( pcs )		8070495	1					
ANR	8070512	Callee	pcl_hmi		8070495	0					
ANR	8070513	Identifier	pcl_hmi		8070495	0					
ANR	8070514	ArgumentList	pcs		8070495	1					
ANR	8070515	Argument	pcs		8070495	0					
ANR	8070516	Identifier	pcs		8070495	0					
ANR	8070517	IfStatement	if ( ( pcs -> underline_enabled ) && ( lmarg > pcs -> underline_start . x ) )		8070495	1					
ANR	8070518	Condition	( pcs -> underline_enabled ) && ( lmarg > pcs -> underline_start . x )	849:8:26386:26445	8070495	0	True				
ANR	8070519	AndExpression	( pcs -> underline_enabled ) && ( lmarg > pcs -> underline_start . x )		8070495	0		&&			
ANR	8070520	PtrMemberAccess	pcs -> underline_enabled		8070495	0					
ANR	8070521	Identifier	pcs		8070495	0					
ANR	8070522	Identifier	underline_enabled		8070495	1					
ANR	8070523	RelationalExpression	lmarg > pcs -> underline_start . x		8070495	1		>			
ANR	8070524	Identifier	lmarg		8070495	0					
ANR	8070525	MemberAccess	pcs -> underline_start . x		8070495	1					
ANR	8070526	PtrMemberAccess	pcs -> underline_start		8070495	0					
ANR	8070527	Identifier	pcs		8070495	0					
ANR	8070528	Identifier	underline_start		8070495	1					
ANR	8070529	Identifier	x		8070495	1					
ANR	8070530	ExpressionStatement	pcs -> underline_start . x = lmarg	850:8:26456:26486	8070495	1	True				
ANR	8070531	AssignmentExpression	pcs -> underline_start . x = lmarg		8070495	0		=			
ANR	8070532	MemberAccess	pcs -> underline_start . x		8070495	0					
ANR	8070533	PtrMemberAccess	pcs -> underline_start		8070495	0					
ANR	8070534	Identifier	pcs		8070495	0					
ANR	8070535	Identifier	underline_start		8070495	1					
ANR	8070536	Identifier	x		8070495	1					
ANR	8070537	Identifier	lmarg		8070495	1					
ANR	8070538	IfStatement	if ( lmarg < pcs -> margins . right )		8070495	2					
ANR	8070539	Condition	lmarg < pcs -> margins . right	852:8:26497:26522	8070495	0	True				
ANR	8070540	RelationalExpression	lmarg < pcs -> margins . right		8070495	0		<			
ANR	8070541	Identifier	lmarg		8070495	0					
ANR	8070542	MemberAccess	pcs -> margins . right		8070495	1					
ANR	8070543	PtrMemberAccess	pcs -> margins		8070495	0					
ANR	8070544	Identifier	pcs		8070495	0					
ANR	8070545	Identifier	margins		8070495	1					
ANR	8070546	Identifier	right		8070495	1					
ANR	8070547	CompoundStatement		9:36:306:306	8070495	1					
ANR	8070548	ExpressionStatement	pcs -> margins . left = lmarg	853:8:26535:26560	8070495	0	True				
ANR	8070549	AssignmentExpression	pcs -> margins . left = lmarg		8070495	0		=			
ANR	8070550	MemberAccess	pcs -> margins . left		8070495	0					
ANR	8070551	PtrMemberAccess	pcs -> margins		8070495	0					
ANR	8070552	Identifier	pcs		8070495	0					
ANR	8070553	Identifier	margins		8070495	1					
ANR	8070554	Identifier	left		8070495	1					
ANR	8070555	Identifier	lmarg		8070495	1					
ANR	8070556	IfStatement	if ( pcs -> cap . x < lmarg )		8070495	1					
ANR	8070557	Condition	pcs -> cap . x < lmarg	854:12:26574:26591	8070495	0	True				
ANR	8070558	RelationalExpression	pcs -> cap . x < lmarg		8070495	0		<			
ANR	8070559	MemberAccess	pcs -> cap . x		8070495	0					
ANR	8070560	PtrMemberAccess	pcs -> cap		8070495	0					
ANR	8070561	Identifier	pcs		8070495	0					
ANR	8070562	Identifier	cap		8070495	1					
ANR	8070563	Identifier	x		8070495	1					
ANR	8070564	Identifier	lmarg		8070495	1					
ANR	8070565	ExpressionStatement	"pcl_set_cap_x ( pcs , lmarg , false , false )"	855:12:26606:26645	8070495	1	True				
ANR	8070566	CallExpression	"pcl_set_cap_x ( pcs , lmarg , false , false )"		8070495	0					
ANR	8070567	Callee	pcl_set_cap_x		8070495	0					
ANR	8070568	Identifier	pcl_set_cap_x		8070495	0					
ANR	8070569	ArgumentList	pcs		8070495	1					
ANR	8070570	Argument	pcs		8070495	0					
ANR	8070571	Identifier	pcs		8070495	0					
ANR	8070572	Argument	lmarg		8070495	1					
ANR	8070573	Identifier	lmarg		8070495	0					
ANR	8070574	Argument	false		8070495	2					
ANR	8070575	Identifier	false		8070495	0					
ANR	8070576	Argument	false		8070495	3					
ANR	8070577	Identifier	false		8070495	0					
ANR	8070578	ReturnStatement	return 0 ;	857:4:26657:26665	8070495	3	True				
ANR	8070579	PrimaryExpression	0		8070495	0					
ANR	8070580	ReturnType	static int		8070495	1					
ANR	8070581	Identifier	set_left_margin		8070495	2					
ANR	8070582	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070495	3					
ANR	8070583	Parameter	pcl_args_t * pargs	843:16:26179:26196	8070495	0	True				
ANR	8070584	ParameterType	pcl_args_t *		8070495	0					
ANR	8070585	Identifier	pargs		8070495	1					
ANR	8070586	Parameter	pcl_state_t * pcs	843:36:26199:26215	8070495	1	True				
ANR	8070587	ParameterType	pcl_state_t *		8070495	0					
ANR	8070588	Identifier	pcs		8070495	1					
ANR	8070589	CFGEntryNode	ENTRY		8070495		True				
ANR	8070590	CFGExitNode	EXIT		8070495		True				
ANR	8070591	Symbol	pcs		8070495						
ANR	8070592	Symbol	pcs -> margins . left		8070495						
ANR	8070593	Symbol	pcs -> margins . right		8070495						
ANR	8070594	Symbol	pcs -> underline_start		8070495						
ANR	8070595	Symbol	pcs -> cap . x		8070495						
ANR	8070596	Symbol	false		8070495						
ANR	8070597	Symbol	pcs -> cap		8070495						
ANR	8070598	Symbol	* pcs		8070495						
ANR	8070599	Symbol	pcs -> margins		8070495						
ANR	8070600	Symbol	uint_arg		8070495						
ANR	8070601	Symbol	lmarg		8070495						
ANR	8070602	Symbol	pcs -> underline_start . x		8070495						
ANR	8070603	Symbol	pcs -> underline_enabled		8070495						
ANR	8070604	Symbol	pargs		8070495						
ANR	8070605	Symbol	pcl_hmi		8070495						
ANR	8070606	Function	set_right_margin	866:0:26834:27223							
ANR	8070607	FunctionDef	"set_right_margin (pcl_args_t * pargs , pcl_state_t * pcs)"		8070606	0					
ANR	8070608	CompoundStatement		868:0:26901:27223	8070606	0					
ANR	8070609	IdentifierDeclStatement	coord rmarg = ( uint_arg ( pargs ) + 1 ) * pcl_hmi ( pcs ) ;	869:4:26907:26957	8070606	0	True				
ANR	8070610	IdentifierDecl	rmarg = ( uint_arg ( pargs ) + 1 ) * pcl_hmi ( pcs )		8070606	0					
ANR	8070611	IdentifierDeclType	coord		8070606	0					
ANR	8070612	Identifier	rmarg		8070606	1					
ANR	8070613	AssignmentExpression	rmarg = ( uint_arg ( pargs ) + 1 ) * pcl_hmi ( pcs )		8070606	2		=			
ANR	8070614	Identifier	rmarg		8070606	0					
ANR	8070615	MultiplicativeExpression	( uint_arg ( pargs ) + 1 ) * pcl_hmi ( pcs )		8070606	1		*			
ANR	8070616	AdditiveExpression	uint_arg ( pargs ) + 1		8070606	0		+			
ANR	8070617	CallExpression	uint_arg ( pargs )		8070606	0					
ANR	8070618	Callee	uint_arg		8070606	0					
ANR	8070619	Identifier	uint_arg		8070606	0					
ANR	8070620	ArgumentList	pargs		8070606	1					
ANR	8070621	Argument	pargs		8070606	0					
ANR	8070622	Identifier	pargs		8070606	0					
ANR	8070623	PrimaryExpression	1		8070606	1					
ANR	8070624	CallExpression	pcl_hmi ( pcs )		8070606	1					
ANR	8070625	Callee	pcl_hmi		8070606	0					
ANR	8070626	Identifier	pcl_hmi		8070606	0					
ANR	8070627	ArgumentList	pcs		8070606	1					
ANR	8070628	Argument	pcs		8070606	0					
ANR	8070629	Identifier	pcs		8070606	0					
ANR	8070630	IfStatement	if ( rmarg > pcs -> xfm_state . pd_size . x )		8070606	1					
ANR	8070631	Condition	rmarg > pcs -> xfm_state . pd_size . x	871:8:26968:26999	8070606	0	True				
ANR	8070632	RelationalExpression	rmarg > pcs -> xfm_state . pd_size . x		8070606	0		>			
ANR	8070633	Identifier	rmarg		8070606	0					
ANR	8070634	MemberAccess	pcs -> xfm_state . pd_size . x		8070606	1					
ANR	8070635	MemberAccess	pcs -> xfm_state . pd_size		8070606	0					
ANR	8070636	PtrMemberAccess	pcs -> xfm_state		8070606	0					
ANR	8070637	Identifier	pcs		8070606	0					
ANR	8070638	Identifier	xfm_state		8070606	1					
ANR	8070639	Identifier	pd_size		8070606	1					
ANR	8070640	Identifier	x		8070606	1					
ANR	8070641	ExpressionStatement	rmarg = pcs -> xfm_state . pd_size . x	872:8:27010:27042	8070606	1	True				
ANR	8070642	AssignmentExpression	rmarg = pcs -> xfm_state . pd_size . x		8070606	0		=			
ANR	8070643	Identifier	rmarg		8070606	0					
ANR	8070644	MemberAccess	pcs -> xfm_state . pd_size . x		8070606	1					
ANR	8070645	MemberAccess	pcs -> xfm_state . pd_size		8070606	0					
ANR	8070646	PtrMemberAccess	pcs -> xfm_state		8070606	0					
ANR	8070647	Identifier	pcs		8070606	0					
ANR	8070648	Identifier	xfm_state		8070606	1					
ANR	8070649	Identifier	pd_size		8070606	1					
ANR	8070650	Identifier	x		8070606	1					
ANR	8070651	IfStatement	if ( rmarg > pcs -> margins . left )		8070606	2					
ANR	8070652	Condition	rmarg > pcs -> margins . left	873:8:27052:27076	8070606	0	True				
ANR	8070653	RelationalExpression	rmarg > pcs -> margins . left		8070606	0		>			
ANR	8070654	Identifier	rmarg		8070606	0					
ANR	8070655	MemberAccess	pcs -> margins . left		8070606	1					
ANR	8070656	PtrMemberAccess	pcs -> margins		8070606	0					
ANR	8070657	Identifier	pcs		8070606	0					
ANR	8070658	Identifier	margins		8070606	1					
ANR	8070659	Identifier	left		8070606	1					
ANR	8070660	CompoundStatement		6:35:177:177	8070606	1					
ANR	8070661	ExpressionStatement	pcs -> margins . right = rmarg	874:8:27089:27115	8070606	0	True				
ANR	8070662	AssignmentExpression	pcs -> margins . right = rmarg		8070606	0		=			
ANR	8070663	MemberAccess	pcs -> margins . right		8070606	0					
ANR	8070664	PtrMemberAccess	pcs -> margins		8070606	0					
ANR	8070665	Identifier	pcs		8070606	0					
ANR	8070666	Identifier	margins		8070606	1					
ANR	8070667	Identifier	right		8070606	1					
ANR	8070668	Identifier	rmarg		8070606	1					
ANR	8070669	IfStatement	if ( pcs -> cap . x > rmarg )		8070606	1					
ANR	8070670	Condition	pcs -> cap . x > rmarg	875:12:27129:27146	8070606	0	True				
ANR	8070671	RelationalExpression	pcs -> cap . x > rmarg		8070606	0		>			
ANR	8070672	MemberAccess	pcs -> cap . x		8070606	0					
ANR	8070673	PtrMemberAccess	pcs -> cap		8070606	0					
ANR	8070674	Identifier	pcs		8070606	0					
ANR	8070675	Identifier	cap		8070606	1					
ANR	8070676	Identifier	x		8070606	1					
ANR	8070677	Identifier	rmarg		8070606	1					
ANR	8070678	ExpressionStatement	"pcl_set_cap_x ( pcs , rmarg , false , false )"	876:12:27161:27200	8070606	1	True				
ANR	8070679	CallExpression	"pcl_set_cap_x ( pcs , rmarg , false , false )"		8070606	0					
ANR	8070680	Callee	pcl_set_cap_x		8070606	0					
ANR	8070681	Identifier	pcl_set_cap_x		8070606	0					
ANR	8070682	ArgumentList	pcs		8070606	1					
ANR	8070683	Argument	pcs		8070606	0					
ANR	8070684	Identifier	pcs		8070606	0					
ANR	8070685	Argument	rmarg		8070606	1					
ANR	8070686	Identifier	rmarg		8070606	0					
ANR	8070687	Argument	false		8070606	2					
ANR	8070688	Identifier	false		8070606	0					
ANR	8070689	Argument	false		8070606	3					
ANR	8070690	Identifier	false		8070606	0					
ANR	8070691	ReturnStatement	return 0 ;	879:4:27213:27221	8070606	3	True				
ANR	8070692	PrimaryExpression	0		8070606	0					
ANR	8070693	ReturnType	static int		8070606	1					
ANR	8070694	Identifier	set_right_margin		8070606	2					
ANR	8070695	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070606	3					
ANR	8070696	Parameter	pcl_args_t * pargs	867:17:26862:26879	8070606	0	True				
ANR	8070697	ParameterType	pcl_args_t *		8070606	0					
ANR	8070698	Identifier	pargs		8070606	1					
ANR	8070699	Parameter	pcl_state_t * pcs	867:37:26882:26898	8070606	1	True				
ANR	8070700	ParameterType	pcl_state_t *		8070606	0					
ANR	8070701	Identifier	pcs		8070606	1					
ANR	8070702	CFGEntryNode	ENTRY		8070606		True				
ANR	8070703	CFGExitNode	EXIT		8070606		True				
ANR	8070704	Symbol	pcs		8070606						
ANR	8070705	Symbol	pcs -> margins . left		8070606						
ANR	8070706	Symbol	rmarg		8070606						
ANR	8070707	Symbol	pcs -> margins . right		8070606						
ANR	8070708	Symbol	pcs -> cap . x		8070606						
ANR	8070709	Symbol	false		8070606						
ANR	8070710	Symbol	pcs -> cap		8070606						
ANR	8070711	Symbol	* pcs		8070606						
ANR	8070712	Symbol	pcs -> margins		8070606						
ANR	8070713	Symbol	uint_arg		8070606						
ANR	8070714	Symbol	pcs -> xfm_state		8070606						
ANR	8070715	Symbol	pcs -> xfm_state . pd_size . x		8070606						
ANR	8070716	Symbol	pargs		8070606						
ANR	8070717	Symbol	pcl_hmi		8070606						
ANR	8070718	Symbol	pcs -> xfm_state . pd_size		8070606						
ANR	8070719	Function	clear_horizontal_margins	887:0:27274:27442							
ANR	8070720	FunctionDef	"clear_horizontal_margins (pcl_args_t * pargs , pcl_state_t * pcs)"		8070719	0					
ANR	8070721	CompoundStatement		890:0:27391:27442	8070719	0					
ANR	8070722	ExpressionStatement	reset_horizontal_margins ( pcs )	891:4:27397:27426	8070719	0	True				
ANR	8070723	CallExpression	reset_horizontal_margins ( pcs )		8070719	0					
ANR	8070724	Callee	reset_horizontal_margins		8070719	0					
ANR	8070725	Identifier	reset_horizontal_margins		8070719	0					
ANR	8070726	ArgumentList	pcs		8070719	1					
ANR	8070727	Argument	pcs		8070719	0					
ANR	8070728	Identifier	pcs		8070719	0					
ANR	8070729	ReturnStatement	return 0 ;	892:4:27432:27440	8070719	1	True				
ANR	8070730	PrimaryExpression	0		8070719	0					
ANR	8070731	ReturnType	static int		8070719	1					
ANR	8070732	Identifier	clear_horizontal_margins		8070719	2					
ANR	8070733	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070719	3					
ANR	8070734	Parameter	pcl_args_t * pargs	888:25:27310:27327	8070719	0	True				
ANR	8070735	ParameterType	pcl_args_t *		8070719	0					
ANR	8070736	Identifier	pargs		8070719	1					
ANR	8070737	Parameter	pcl_state_t * pcs	889:25:27372:27388	8070719	1	True				
ANR	8070738	ParameterType	pcl_state_t *		8070719	0					
ANR	8070739	Identifier	pcs		8070719	1					
ANR	8070740	CFGEntryNode	ENTRY		8070719		True				
ANR	8070741	CFGExitNode	EXIT		8070719		True				
ANR	8070742	Symbol	pcs		8070719						
ANR	8070743	Symbol	pargs		8070719						
ANR	8070744	Function	set_top_margin	900:0:27532:28272							
ANR	8070745	FunctionDef	"set_top_margin (pcl_args_t * pargs , pcl_state_t * pcs)"		8070744	0					
ANR	8070746	CompoundStatement		902:0:27597:28272	8070744	0					
ANR	8070747	IdentifierDeclStatement	coord hgt = pcs -> xfm_state . pd_size . y ;	903:4:27603:27639	8070744	0	True				
ANR	8070748	IdentifierDecl	hgt = pcs -> xfm_state . pd_size . y		8070744	0					
ANR	8070749	IdentifierDeclType	coord		8070744	0					
ANR	8070750	Identifier	hgt		8070744	1					
ANR	8070751	AssignmentExpression	hgt = pcs -> xfm_state . pd_size . y		8070744	2		=			
ANR	8070752	Identifier	hgt		8070744	0					
ANR	8070753	MemberAccess	pcs -> xfm_state . pd_size . y		8070744	1					
ANR	8070754	MemberAccess	pcs -> xfm_state . pd_size		8070744	0					
ANR	8070755	PtrMemberAccess	pcs -> xfm_state		8070744	0					
ANR	8070756	Identifier	pcs		8070744	0					
ANR	8070757	Identifier	xfm_state		8070744	1					
ANR	8070758	Identifier	pd_size		8070744	1					
ANR	8070759	Identifier	y		8070744	1					
ANR	8070760	IdentifierDeclStatement	coord tmarg = uint_arg ( pargs ) * pcs -> vmi_cp ;	904:4:27645:27688	8070744	1	True				
ANR	8070761	IdentifierDecl	tmarg = uint_arg ( pargs ) * pcs -> vmi_cp		8070744	0					
ANR	8070762	IdentifierDeclType	coord		8070744	0					
ANR	8070763	Identifier	tmarg		8070744	1					
ANR	8070764	AssignmentExpression	tmarg = uint_arg ( pargs ) * pcs -> vmi_cp		8070744	2		=			
ANR	8070765	Identifier	tmarg		8070744	0					
ANR	8070766	MultiplicativeExpression	uint_arg ( pargs ) * pcs -> vmi_cp		8070744	1		*			
ANR	8070767	CallExpression	uint_arg ( pargs )		8070744	0					
ANR	8070768	Callee	uint_arg		8070744	0					
ANR	8070769	Identifier	uint_arg		8070744	0					
ANR	8070770	ArgumentList	pargs		8070744	1					
ANR	8070771	Argument	pargs		8070744	0					
ANR	8070772	Identifier	pargs		8070744	0					
ANR	8070773	PtrMemberAccess	pcs -> vmi_cp		8070744	1					
ANR	8070774	Identifier	pcs		8070744	0					
ANR	8070775	Identifier	vmi_cp		8070744	1					
ANR	8070776	IfStatement	if ( ( pcs -> vmi_cp != 0 ) && ( tmarg <= hgt ) )		8070744	2					
ANR	8070777	Condition	( pcs -> vmi_cp != 0 ) && ( tmarg <= hgt )	906:8:27699:27734	8070744	0	True				
ANR	8070778	AndExpression	( pcs -> vmi_cp != 0 ) && ( tmarg <= hgt )		8070744	0		&&			
ANR	8070779	EqualityExpression	pcs -> vmi_cp != 0		8070744	0		!=			
ANR	8070780	PtrMemberAccess	pcs -> vmi_cp		8070744	0					
ANR	8070781	Identifier	pcs		8070744	0					
ANR	8070782	Identifier	vmi_cp		8070744	1					
ANR	8070783	PrimaryExpression	0		8070744	1					
ANR	8070784	RelationalExpression	tmarg <= hgt		8070744	1		<=			
ANR	8070785	Identifier	tmarg		8070744	0					
ANR	8070786	Identifier	hgt		8070744	1					
ANR	8070787	CompoundStatement		5:46:139:139	8070744	1					
ANR	8070788	ExpressionStatement	pcs -> margins . top = tmarg	907:8:27747:27771	8070744	0	True				
ANR	8070789	AssignmentExpression	pcs -> margins . top = tmarg		8070744	0		=			
ANR	8070790	MemberAccess	pcs -> margins . top		8070744	0					
ANR	8070791	PtrMemberAccess	pcs -> margins		8070744	0					
ANR	8070792	Identifier	pcs		8070744	0					
ANR	8070793	Identifier	margins		8070744	1					
ANR	8070794	Identifier	top		8070744	1					
ANR	8070795	Identifier	tmarg		8070744	1					
ANR	8070796	ExpressionStatement	"pcs -> margins . length = PAGE_LENGTH ( hgt - tmarg , DFLT_BOTTOM_MARGIN )"	908:8:27781:27847	8070744	1	True				
ANR	8070797	AssignmentExpression	"pcs -> margins . length = PAGE_LENGTH ( hgt - tmarg , DFLT_BOTTOM_MARGIN )"		8070744	0		=			
ANR	8070798	MemberAccess	pcs -> margins . length		8070744	0					
ANR	8070799	PtrMemberAccess	pcs -> margins		8070744	0					
ANR	8070800	Identifier	pcs		8070744	0					
ANR	8070801	Identifier	margins		8070744	1					
ANR	8070802	Identifier	length		8070744	1					
ANR	8070803	CallExpression	"PAGE_LENGTH ( hgt - tmarg , DFLT_BOTTOM_MARGIN )"		8070744	1					
ANR	8070804	Callee	PAGE_LENGTH		8070744	0					
ANR	8070805	Identifier	PAGE_LENGTH		8070744	0					
ANR	8070806	ArgumentList	hgt - tmarg		8070744	1					
ANR	8070807	Argument	hgt - tmarg		8070744	0					
ANR	8070808	AdditiveExpression	hgt - tmarg		8070744	0		-			
ANR	8070809	Identifier	hgt		8070744	0					
ANR	8070810	Identifier	tmarg		8070744	1					
ANR	8070811	Argument	DFLT_BOTTOM_MARGIN		8070744	1					
ANR	8070812	Identifier	DFLT_BOTTOM_MARGIN		8070744	0					
ANR	8070813	IfStatement	if ( ! pcl_page_marked ( pcs ) && ! pcl_cursor_moved ( pcs ) )		8070744	2					
ANR	8070814	Condition	! pcl_page_marked ( pcs ) && ! pcl_cursor_moved ( pcs )	913:12:28133:28179	8070744	0	True				
ANR	8070815	AndExpression	! pcl_page_marked ( pcs ) && ! pcl_cursor_moved ( pcs )		8070744	0		&&			
ANR	8070816	UnaryOperationExpression	! pcl_page_marked ( pcs )		8070744	0					
ANR	8070817	UnaryOperator	!		8070744	0					
ANR	8070818	CallExpression	pcl_page_marked ( pcs )		8070744	1					
ANR	8070819	Callee	pcl_page_marked		8070744	0					
ANR	8070820	Identifier	pcl_page_marked		8070744	0					
ANR	8070821	ArgumentList	pcs		8070744	1					
ANR	8070822	Argument	pcs		8070744	0					
ANR	8070823	Identifier	pcs		8070744	0					
ANR	8070824	UnaryOperationExpression	! pcl_cursor_moved ( pcs )		8070744	1					
ANR	8070825	UnaryOperator	!		8070744	0					
ANR	8070826	CallExpression	pcl_cursor_moved ( pcs )		8070744	1					
ANR	8070827	Callee	pcl_cursor_moved		8070744	0					
ANR	8070828	Identifier	pcl_cursor_moved		8070744	0					
ANR	8070829	ArgumentList	pcs		8070744	1					
ANR	8070830	Argument	pcs		8070744	0					
ANR	8070831	Identifier	pcs		8070744	0					
ANR	8070832	ReturnStatement	"return pcl_set_cap_y ( pcs , 0L , false , false , true , false ) ;"	914:12:28194:28250	8070744	1	True				
ANR	8070833	CallExpression	"pcl_set_cap_y ( pcs , 0L , false , false , true , false )"		8070744	0					
ANR	8070834	Callee	pcl_set_cap_y		8070744	0					
ANR	8070835	Identifier	pcl_set_cap_y		8070744	0					
ANR	8070836	ArgumentList	pcs		8070744	1					
ANR	8070837	Argument	pcs		8070744	0					
ANR	8070838	Identifier	pcs		8070744	0					
ANR	8070839	Argument	0L		8070744	1					
ANR	8070840	PrimaryExpression	0L		8070744	0					
ANR	8070841	Argument	false		8070744	2					
ANR	8070842	Identifier	false		8070744	0					
ANR	8070843	Argument	false		8070744	3					
ANR	8070844	Identifier	false		8070744	0					
ANR	8070845	Argument	true		8070744	4					
ANR	8070846	Identifier	true		8070744	0					
ANR	8070847	Argument	false		8070744	5					
ANR	8070848	Identifier	false		8070744	0					
ANR	8070849	ReturnStatement	return 0 ;	916:4:28262:28270	8070744	3	True				
ANR	8070850	PrimaryExpression	0		8070744	0					
ANR	8070851	ReturnType	static int		8070744	1					
ANR	8070852	Identifier	set_top_margin		8070744	2					
ANR	8070853	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070744	3					
ANR	8070854	Parameter	pcl_args_t * pargs	901:15:27558:27575	8070744	0	True				
ANR	8070855	ParameterType	pcl_args_t *		8070744	0					
ANR	8070856	Identifier	pargs		8070744	1					
ANR	8070857	Parameter	pcl_state_t * pcs	901:35:27578:27594	8070744	1	True				
ANR	8070858	ParameterType	pcl_state_t *		8070744	0					
ANR	8070859	Identifier	pcs		8070744	1					
ANR	8070860	CFGEntryNode	ENTRY		8070744		True				
ANR	8070861	CFGExitNode	EXIT		8070744		True				
ANR	8070862	Symbol	pcs		8070744						
ANR	8070863	Symbol	pcl_page_marked		8070744						
ANR	8070864	Symbol	tmarg		8070744						
ANR	8070865	Symbol	false		8070744						
ANR	8070866	Symbol	* pcs		8070744						
ANR	8070867	Symbol	pcs -> margins		8070744						
ANR	8070868	Symbol	PAGE_LENGTH		8070744						
ANR	8070869	Symbol	uint_arg		8070744						
ANR	8070870	Symbol	pcl_cursor_moved		8070744						
ANR	8070871	Symbol	pcl_set_cap_y		8070744						
ANR	8070872	Symbol	pcs -> xfm_state . pd_size . y		8070744						
ANR	8070873	Symbol	pcs -> margins . length		8070744						
ANR	8070874	Symbol	pcs -> xfm_state		8070744						
ANR	8070875	Symbol	hgt		8070744						
ANR	8070876	Symbol	pargs		8070744						
ANR	8070877	Symbol	true		8070744						
ANR	8070878	Symbol	pcs -> vmi_cp		8070744						
ANR	8070879	Symbol	pcs -> xfm_state . pd_size		8070744						
ANR	8070880	Symbol	pcs -> margins . top		8070744						
ANR	8070881	Symbol	DFLT_BOTTOM_MARGIN		8070744						
ANR	8070882	Function	set_text_length	924:0:28368:28817							
ANR	8070883	FunctionDef	"set_text_length (pcl_args_t * pargs , pcl_state_t * pcs)"		8070882	0					
ANR	8070884	CompoundStatement		926:0:28434:28817	8070882	0					
ANR	8070885	IdentifierDeclStatement	coord len = uint_arg ( pargs ) * pcs -> vmi_cp ;	927:4:28440:28481	8070882	0	True				
ANR	8070886	IdentifierDecl	len = uint_arg ( pargs ) * pcs -> vmi_cp		8070882	0					
ANR	8070887	IdentifierDeclType	coord		8070882	0					
ANR	8070888	Identifier	len		8070882	1					
ANR	8070889	AssignmentExpression	len = uint_arg ( pargs ) * pcs -> vmi_cp		8070882	2		=			
ANR	8070890	Identifier	len		8070882	0					
ANR	8070891	MultiplicativeExpression	uint_arg ( pargs ) * pcs -> vmi_cp		8070882	1		*			
ANR	8070892	CallExpression	uint_arg ( pargs )		8070882	0					
ANR	8070893	Callee	uint_arg		8070882	0					
ANR	8070894	Identifier	uint_arg		8070882	0					
ANR	8070895	ArgumentList	pargs		8070882	1					
ANR	8070896	Argument	pargs		8070882	0					
ANR	8070897	Identifier	pargs		8070882	0					
ANR	8070898	PtrMemberAccess	pcs -> vmi_cp		8070882	1					
ANR	8070899	Identifier	pcs		8070882	0					
ANR	8070900	Identifier	vmi_cp		8070882	1					
ANR	8070901	IfStatement	if ( len == 0 )		8070882	1					
ANR	8070902	Condition	len == 0	929:8:28492:28499	8070882	0	True				
ANR	8070903	EqualityExpression	len == 0		8070882	0		==			
ANR	8070904	Identifier	len		8070882	0					
ANR	8070905	PrimaryExpression	0		8070882	1					
ANR	8070906	CompoundStatement		4:18:67:67	8070882	1					
ANR	8070907	ExpressionStatement	len = pcs -> xfm_state . pd_size . y - pcs -> margins . top - inch2coord ( 1.0 / 2.0 )	930:8:28512:28609	8070882	0	True				
ANR	8070908	AssignmentExpression	len = pcs -> xfm_state . pd_size . y - pcs -> margins . top - inch2coord ( 1.0 / 2.0 )		8070882	0		=			
ANR	8070909	Identifier	len		8070882	0					
ANR	8070910	AdditiveExpression	pcs -> xfm_state . pd_size . y - pcs -> margins . top - inch2coord ( 1.0 / 2.0 )		8070882	1		-			
ANR	8070911	MemberAccess	pcs -> xfm_state . pd_size . y		8070882	0					
ANR	8070912	MemberAccess	pcs -> xfm_state . pd_size		8070882	0					
ANR	8070913	PtrMemberAccess	pcs -> xfm_state		8070882	0					
ANR	8070914	Identifier	pcs		8070882	0					
ANR	8070915	Identifier	xfm_state		8070882	1					
ANR	8070916	Identifier	pd_size		8070882	1					
ANR	8070917	Identifier	y		8070882	1					
ANR	8070918	AdditiveExpression	pcs -> margins . top - inch2coord ( 1.0 / 2.0 )		8070882	1		-			
ANR	8070919	MemberAccess	pcs -> margins . top		8070882	0					
ANR	8070920	PtrMemberAccess	pcs -> margins		8070882	0					
ANR	8070921	Identifier	pcs		8070882	0					
ANR	8070922	Identifier	margins		8070882	1					
ANR	8070923	Identifier	top		8070882	1					
ANR	8070924	CallExpression	inch2coord ( 1.0 / 2.0 )		8070882	1					
ANR	8070925	Callee	inch2coord		8070882	0					
ANR	8070926	Identifier	inch2coord		8070882	0					
ANR	8070927	ArgumentList	1.0 / 2.0		8070882	1					
ANR	8070928	Argument	1.0 / 2.0		8070882	0					
ANR	8070929	MultiplicativeExpression	1.0 / 2.0		8070882	0		/			
ANR	8070930	PrimaryExpression	1.0		8070882	0					
ANR	8070931	PrimaryExpression	2.0		8070882	1					
ANR	8070932	IfStatement	if ( len < 0 )		8070882	1					
ANR	8070933	Condition	len < 0	933:12:28623:28629	8070882	0	True				
ANR	8070934	RelationalExpression	len < 0		8070882	0		<			
ANR	8070935	Identifier	len		8070882	0					
ANR	8070936	PrimaryExpression	0		8070882	1					
ANR	8070937	CompoundStatement		8:21:197:197	8070882	1					
ANR	8070938	ExpressionStatement	len += inch2coord ( 1.0 / 2.0 )	934:12:28646:28674	8070882	0	True				
ANR	8070939	AssignmentExpression	len += inch2coord ( 1.0 / 2.0 )		8070882	0		+=			
ANR	8070940	Identifier	len		8070882	0					
ANR	8070941	CallExpression	inch2coord ( 1.0 / 2.0 )		8070882	1					
ANR	8070942	Callee	inch2coord		8070882	0					
ANR	8070943	Identifier	inch2coord		8070882	0					
ANR	8070944	ArgumentList	1.0 / 2.0		8070882	1					
ANR	8070945	Argument	1.0 / 2.0		8070882	0					
ANR	8070946	MultiplicativeExpression	1.0 / 2.0		8070882	0		/			
ANR	8070947	PrimaryExpression	1.0		8070882	0					
ANR	8070948	PrimaryExpression	2.0		8070882	1					
ANR	8070949	IfStatement	if ( ( len >= 0 ) && ( pcs -> margins . top + len <= pcs -> xfm_state . pd_size . y ) )		8070882	2					
ANR	8070950	Condition	( len >= 0 ) && ( pcs -> margins . top + len <= pcs -> xfm_state . pd_size . y )	937:8:28700:28765	8070882	0	True				
ANR	8070951	AndExpression	( len >= 0 ) && ( pcs -> margins . top + len <= pcs -> xfm_state . pd_size . y )		8070882	0		&&			
ANR	8070952	RelationalExpression	len >= 0		8070882	0		>=			
ANR	8070953	Identifier	len		8070882	0					
ANR	8070954	PrimaryExpression	0		8070882	1					
ANR	8070955	RelationalExpression	pcs -> margins . top + len <= pcs -> xfm_state . pd_size . y		8070882	1		<=			
ANR	8070956	AdditiveExpression	pcs -> margins . top + len		8070882	0		+			
ANR	8070957	MemberAccess	pcs -> margins . top		8070882	0					
ANR	8070958	PtrMemberAccess	pcs -> margins		8070882	0					
ANR	8070959	Identifier	pcs		8070882	0					
ANR	8070960	Identifier	margins		8070882	1					
ANR	8070961	Identifier	top		8070882	1					
ANR	8070962	Identifier	len		8070882	1					
ANR	8070963	MemberAccess	pcs -> xfm_state . pd_size . y		8070882	1					
ANR	8070964	MemberAccess	pcs -> xfm_state . pd_size		8070882	0					
ANR	8070965	PtrMemberAccess	pcs -> xfm_state		8070882	0					
ANR	8070966	Identifier	pcs		8070882	0					
ANR	8070967	Identifier	xfm_state		8070882	1					
ANR	8070968	Identifier	pd_size		8070882	1					
ANR	8070969	Identifier	y		8070882	1					
ANR	8070970	ExpressionStatement	pcs -> margins . length = len	938:8:28776:28801	8070882	1	True				
ANR	8070971	AssignmentExpression	pcs -> margins . length = len		8070882	0		=			
ANR	8070972	MemberAccess	pcs -> margins . length		8070882	0					
ANR	8070973	PtrMemberAccess	pcs -> margins		8070882	0					
ANR	8070974	Identifier	pcs		8070882	0					
ANR	8070975	Identifier	margins		8070882	1					
ANR	8070976	Identifier	length		8070882	1					
ANR	8070977	Identifier	len		8070882	1					
ANR	8070978	ReturnStatement	return 0 ;	939:4:28807:28815	8070882	3	True				
ANR	8070979	PrimaryExpression	0		8070882	0					
ANR	8070980	ReturnType	static int		8070882	1					
ANR	8070981	Identifier	set_text_length		8070882	2					
ANR	8070982	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8070882	3					
ANR	8070983	Parameter	pcl_args_t * pargs	925:16:28395:28412	8070882	0	True				
ANR	8070984	ParameterType	pcl_args_t *		8070882	0					
ANR	8070985	Identifier	pargs		8070882	1					
ANR	8070986	Parameter	pcl_state_t * pcs	925:36:28415:28431	8070882	1	True				
ANR	8070987	ParameterType	pcl_state_t *		8070882	0					
ANR	8070988	Identifier	pcs		8070882	1					
ANR	8070989	CFGEntryNode	ENTRY		8070882		True				
ANR	8070990	CFGExitNode	EXIT		8070882		True				
ANR	8070991	Symbol	pcs		8070882						
ANR	8070992	Symbol	* pcs		8070882						
ANR	8070993	Symbol	pcs -> margins		8070882						
ANR	8070994	Symbol	uint_arg		8070882						
ANR	8070995	Symbol	pcs -> xfm_state . pd_size . y		8070882						
ANR	8070996	Symbol	inch2coord		8070882						
ANR	8070997	Symbol	pcs -> margins . length		8070882						
ANR	8070998	Symbol	pcs -> xfm_state		8070882						
ANR	8070999	Symbol	len		8070882						
ANR	8071000	Symbol	pargs		8070882						
ANR	8071001	Symbol	pcs -> vmi_cp		8070882						
ANR	8071002	Symbol	pcs -> xfm_state . pd_size		8070882						
ANR	8071003	Symbol	pcs -> margins . top		8070882						
ANR	8071004	Function	set_perforation_skip	949:0:29089:29320							
ANR	8071005	FunctionDef	"set_perforation_skip (pcl_args_t * pargs , pcl_state_t * pcs)"		8071004	0					
ANR	8071006	CompoundStatement		951:0:29160:29320	8071004	0					
ANR	8071007	IdentifierDeclStatement	bool new_skip = uint_arg ( pargs ) ;	952:4:29166:29197	8071004	0	True				
ANR	8071008	IdentifierDecl	new_skip = uint_arg ( pargs )		8071004	0					
ANR	8071009	IdentifierDeclType	bool		8071004	0					
ANR	8071010	Identifier	new_skip		8071004	1					
ANR	8071011	AssignmentExpression	new_skip = uint_arg ( pargs )		8071004	2		=			
ANR	8071012	Identifier	new_skip		8071004	0					
ANR	8071013	CallExpression	uint_arg ( pargs )		8071004	1					
ANR	8071014	Callee	uint_arg		8071004	0					
ANR	8071015	Identifier	uint_arg		8071004	0					
ANR	8071016	ArgumentList	pargs		8071004	1					
ANR	8071017	Argument	pargs		8071004	0					
ANR	8071018	Identifier	pargs		8071004	0					
ANR	8071019	IfStatement	if ( ( new_skip != pcs -> perforation_skip ) && ( new_skip <= 1 ) )		8071004	1					
ANR	8071020	Condition	( new_skip != pcs -> perforation_skip ) && ( new_skip <= 1 )	954:8:29208:29261	8071004	0	True				
ANR	8071021	AndExpression	( new_skip != pcs -> perforation_skip ) && ( new_skip <= 1 )		8071004	0		&&			
ANR	8071022	EqualityExpression	new_skip != pcs -> perforation_skip		8071004	0		!=			
ANR	8071023	Identifier	new_skip		8071004	0					
ANR	8071024	PtrMemberAccess	pcs -> perforation_skip		8071004	1					
ANR	8071025	Identifier	pcs		8071004	0					
ANR	8071026	Identifier	perforation_skip		8071004	1					
ANR	8071027	RelationalExpression	new_skip <= 1		8071004	1		<=			
ANR	8071028	Identifier	new_skip		8071004	0					
ANR	8071029	PrimaryExpression	1		8071004	1					
ANR	8071030	ExpressionStatement	pcs -> perforation_skip = new_skip	955:8:29272:29304	8071004	1	True				
ANR	8071031	AssignmentExpression	pcs -> perforation_skip = new_skip		8071004	0		=			
ANR	8071032	PtrMemberAccess	pcs -> perforation_skip		8071004	0					
ANR	8071033	Identifier	pcs		8071004	0					
ANR	8071034	Identifier	perforation_skip		8071004	1					
ANR	8071035	Identifier	new_skip		8071004	1					
ANR	8071036	ReturnStatement	return 0 ;	956:4:29310:29318	8071004	2	True				
ANR	8071037	PrimaryExpression	0		8071004	0					
ANR	8071038	ReturnType	static int		8071004	1					
ANR	8071039	Identifier	set_perforation_skip		8071004	2					
ANR	8071040	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8071004	3					
ANR	8071041	Parameter	pcl_args_t * pargs	950:21:29121:29138	8071004	0	True				
ANR	8071042	ParameterType	pcl_args_t *		8071004	0					
ANR	8071043	Identifier	pargs		8071004	1					
ANR	8071044	Parameter	pcl_state_t * pcs	950:41:29141:29157	8071004	1	True				
ANR	8071045	ParameterType	pcl_state_t *		8071004	0					
ANR	8071046	Identifier	pcs		8071004	1					
ANR	8071047	CFGEntryNode	ENTRY		8071004		True				
ANR	8071048	CFGExitNode	EXIT		8071004		True				
ANR	8071049	Symbol	pcs		8071004						
ANR	8071050	Symbol	pargs		8071004						
ANR	8071051	Symbol	pcs -> perforation_skip		8071004						
ANR	8071052	Symbol	new_skip		8071004						
ANR	8071053	Symbol	* pcs		8071004						
ANR	8071054	Symbol	uint_arg		8071004						
ANR	8071055	Function	pcl_media_type	966:0:29416:29730							
ANR	8071056	FunctionDef	"pcl_media_type (pcl_args_t * pargs , pcl_state_t * pcs)"		8071055	0					
ANR	8071057	CompoundStatement		968:0:29481:29730	8071055	0					
ANR	8071058	IdentifierDeclStatement	int type = uint_arg ( pargs ) ;	969:4:29487:29513	8071055	0	True				
ANR	8071059	IdentifierDecl	type = uint_arg ( pargs )		8071055	0					
ANR	8071060	IdentifierDeclType	int		8071055	0					
ANR	8071061	Identifier	type		8071055	1					
ANR	8071062	AssignmentExpression	type = uint_arg ( pargs )		8071055	2		=			
ANR	8071063	Identifier	type		8071055	0					
ANR	8071064	CallExpression	uint_arg ( pargs )		8071055	1					
ANR	8071065	Callee	uint_arg		8071055	0					
ANR	8071066	Identifier	uint_arg		8071055	0					
ANR	8071067	ArgumentList	pargs		8071055	1					
ANR	8071068	Argument	pargs		8071055	0					
ANR	8071069	Identifier	pargs		8071055	0					
ANR	8071070	IfStatement	if ( type <= 4 )		8071055	1					
ANR	8071071	Condition	type <= 4	971:8:29524:29532	8071055	0	True				
ANR	8071072	RelationalExpression	type <= 4		8071055	0		<=			
ANR	8071073	Identifier	type		8071055	0					
ANR	8071074	PrimaryExpression	4		8071055	1					
ANR	8071075	CompoundStatement		5:8:63:101	8071055	1					
ANR	8071076	IdentifierDeclStatement	int code = pcl_end_page_if_marked ( pcs ) ;	972:8:29545:29583	8071055	0	True				
ANR	8071077	IdentifierDecl	code = pcl_end_page_if_marked ( pcs )		8071055	0					
ANR	8071078	IdentifierDeclType	int		8071055	0					
ANR	8071079	Identifier	code		8071055	1					
ANR	8071080	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8071055	2		=			
ANR	8071081	Identifier	code		8071055	0					
ANR	8071082	CallExpression	pcl_end_page_if_marked ( pcs )		8071055	1					
ANR	8071083	Callee	pcl_end_page_if_marked		8071055	0					
ANR	8071084	Identifier	pcl_end_page_if_marked		8071055	0					
ANR	8071085	ArgumentList	pcs		8071055	1					
ANR	8071086	Argument	pcs		8071055	0					
ANR	8071087	Identifier	pcs		8071055	0					
ANR	8071088	IfStatement	if ( code >= 0 )		8071055	1					
ANR	8071089	Condition	code >= 0	974:12:29598:29606	8071055	0	True				
ANR	8071090	RelationalExpression	code >= 0		8071055	0		>=			
ANR	8071091	Identifier	code		8071055	0					
ANR	8071092	PrimaryExpression	0		8071055	1					
ANR	8071093	ExpressionStatement	pcl_home_cursor ( pcs )	975:12:29621:29641	8071055	1	True				
ANR	8071094	CallExpression	pcl_home_cursor ( pcs )		8071055	0					
ANR	8071095	Callee	pcl_home_cursor		8071055	0					
ANR	8071096	Identifier	pcl_home_cursor		8071055	0					
ANR	8071097	ArgumentList	pcs		8071055	1					
ANR	8071098	Argument	pcs		8071055	0					
ANR	8071099	Identifier	pcs		8071055	0					
ANR	8071100	ReturnStatement	return ( code < 0 ? code : e_Unimplemented ) ;	976:8:29651:29693	8071055	2	True				
ANR	8071101	ConditionalExpression	code < 0 ? code : e_Unimplemented		8071055	0					
ANR	8071102	Condition	code < 0		8071055	0					
ANR	8071103	RelationalExpression	code < 0		8071055	0		<			
ANR	8071104	Identifier	code		8071055	0					
ANR	8071105	PrimaryExpression	0		8071055	1					
ANR	8071106	Identifier	code		8071055	1					
ANR	8071107	Identifier	e_Unimplemented		8071055	2					
ANR	8071108	ElseStatement	else		8071055	0					
ANR	8071109	ReturnStatement	return e_Range ;	978:8:29714:29728	8071055	0	True				
ANR	8071110	Identifier	e_Range		8071055	0					
ANR	8071111	ReturnType	static int		8071055	1					
ANR	8071112	Identifier	pcl_media_type		8071055	2					
ANR	8071113	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8071055	3					
ANR	8071114	Parameter	pcl_args_t * pargs	967:15:29442:29459	8071055	0	True				
ANR	8071115	ParameterType	pcl_args_t *		8071055	0					
ANR	8071116	Identifier	pargs		8071055	1					
ANR	8071117	Parameter	pcl_state_t * pcs	967:35:29462:29478	8071055	1	True				
ANR	8071118	ParameterType	pcl_state_t *		8071055	0					
ANR	8071119	Identifier	pcs		8071055	1					
ANR	8071120	CFGEntryNode	ENTRY		8071055		True				
ANR	8071121	CFGExitNode	EXIT		8071055		True				
ANR	8071122	Symbol	e_Unimplemented		8071055						
ANR	8071123	Symbol	e_Range		8071055						
ANR	8071124	Symbol	pcs		8071055						
ANR	8071125	Symbol	code		8071055						
ANR	8071126	Symbol	pargs		8071055						
ANR	8071127	Symbol	type		8071055						
ANR	8071128	Symbol	pcl_end_page_if_marked		8071055						
ANR	8071129	Symbol	uint_arg		8071055						
ANR	8071130	ClassDef	pcl_logical_page_s	985:8:29803:29978							
ANR	8071131	DeclStmt									
ANR	8071132	Decl							byte	byte [ 2 ]	LeftOffset
ANR	8071133	DeclStmt									
ANR	8071134	Decl							byte	byte [ 2 ]	TopOffset
ANR	8071135	DeclStmt									
ANR	8071136	Decl							byte	byte	Orientation
ANR	8071137	DeclStmt									
ANR	8071138	Decl							byte	byte	Reserved
ANR	8071139	DeclStmt									
ANR	8071140	Decl							byte	byte [ 2 ]	Width
ANR	8071141	DeclStmt									
ANR	8071142	Decl							byte	byte [ 2 ]	Height
ANR	8071143	DeclStmt									
ANR	8071144	Decl							pcl_logical_page_s	pcl_logical_page_s	pcl_logical_page_t
ANR	8071145	Function	set_logical_page	1001:0:30028:31237							
ANR	8071146	FunctionDef	"set_logical_page (pcl_args_t * pargs , pcl_state_t * pcs)"		8071145	0					
ANR	8071147	CompoundStatement		1003:0:30095:31237	8071145	0					
ANR	8071148	IdentifierDeclStatement	uint count = uint_arg ( pargs ) ;	1004:4:30101:30129	8071145	0	True				
ANR	8071149	IdentifierDecl	count = uint_arg ( pargs )		8071145	0					
ANR	8071150	IdentifierDeclType	uint		8071145	0					
ANR	8071151	Identifier	count		8071145	1					
ANR	8071152	AssignmentExpression	count = uint_arg ( pargs )		8071145	2		=			
ANR	8071153	Identifier	count		8071145	0					
ANR	8071154	CallExpression	uint_arg ( pargs )		8071145	1					
ANR	8071155	Callee	uint_arg		8071145	0					
ANR	8071156	Identifier	uint_arg		8071145	0					
ANR	8071157	ArgumentList	pargs		8071145	1					
ANR	8071158	Argument	pargs		8071145	0					
ANR	8071159	Identifier	pargs		8071145	0					
ANR	8071160	IdentifierDeclStatement	int code = 0 ;	1005:4:30135:30147	8071145	1	True				
ANR	8071161	IdentifierDecl	code = 0		8071145	0					
ANR	8071162	IdentifierDeclType	int		8071145	0					
ANR	8071163	Identifier	code		8071145	1					
ANR	8071164	AssignmentExpression	code = 0		8071145	2		=			
ANR	8071165	Identifier	code		8071145	0					
ANR	8071166	PrimaryExpression	0		8071145	1					
ANR	8071167	IdentifierDeclStatement	const pcl_logical_page_t * plogpage = ( pcl_logical_page_t * ) arg_data ( pargs ) ;	1007:4:30154:30237	8071145	2	True				
ANR	8071168	IdentifierDecl	* plogpage = ( pcl_logical_page_t * ) arg_data ( pargs )		8071145	0					
ANR	8071169	IdentifierDeclType	const pcl_logical_page_t *		8071145	0					
ANR	8071170	Identifier	plogpage		8071145	1					
ANR	8071171	AssignmentExpression	* plogpage = ( pcl_logical_page_t * ) arg_data ( pargs )		8071145	2		=			
ANR	8071172	Identifier	plogpage		8071145	0					
ANR	8071173	CastExpression	( pcl_logical_page_t * ) arg_data ( pargs )		8071145	1					
ANR	8071174	CastTarget	pcl_logical_page_t *		8071145	0					
ANR	8071175	CallExpression	arg_data ( pargs )		8071145	1					
ANR	8071176	Callee	arg_data		8071145	0					
ANR	8071177	Identifier	arg_data		8071145	0					
ANR	8071178	ArgumentList	pargs		8071145	1					
ANR	8071179	Argument	pargs		8071145	0					
ANR	8071180	Identifier	pargs		8071145	0					
ANR	8071181	IdentifierDeclStatement	pcl_paper_size_t * pcur_paper ;	1009:4:30243:30271	8071145	3	True				
ANR	8071182	IdentifierDecl	* pcur_paper		8071145	0					
ANR	8071183	IdentifierDeclType	pcl_paper_size_t *		8071145	0					
ANR	8071184	Identifier	pcur_paper		8071145	1					
ANR	8071185	IfStatement	if ( gs_debug_c ( 'i' ) )		8071145	4					
ANR	8071186	Condition	gs_debug_c ( 'i' )	1012:8:30295:30309	8071145	0	True				
ANR	8071187	CallExpression	gs_debug_c ( 'i' )		8071145	0					
ANR	8071188	Callee	gs_debug_c		8071145	0					
ANR	8071189	Identifier	gs_debug_c		8071145	0					
ANR	8071190	ArgumentList	'i'		8071145	1					
ANR	8071191	Argument	'i'		8071145	0					
ANR	8071192	PrimaryExpression	'i'		8071145	0					
ANR	8071193	CompoundStatement		10:25:216:216	8071145	1					
ANR	8071194	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	1013:8:30322:30388	8071145	0	True				
ANR	8071195	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8071145	0					
ANR	8071196	Callee	pcl_debug_dump_data		8071145	0					
ANR	8071197	Identifier	pcl_debug_dump_data		8071145	0					
ANR	8071198	ArgumentList	pcs -> memory		8071145	1					
ANR	8071199	Argument	pcs -> memory		8071145	0					
ANR	8071200	PtrMemberAccess	pcs -> memory		8071145	0					
ANR	8071201	Identifier	pcs		8071145	0					
ANR	8071202	Identifier	memory		8071145	1					
ANR	8071203	Argument	arg_data ( pargs )		8071145	1					
ANR	8071204	CallExpression	arg_data ( pargs )		8071145	0					
ANR	8071205	Callee	arg_data		8071145	0					
ANR	8071206	Identifier	arg_data		8071145	0					
ANR	8071207	ArgumentList	pargs		8071145	1					
ANR	8071208	Argument	pargs		8071145	0					
ANR	8071209	Identifier	pargs		8071145	0					
ANR	8071210	Argument	uint_arg ( pargs )		8071145	2					
ANR	8071211	CallExpression	uint_arg ( pargs )		8071145	0					
ANR	8071212	Callee	uint_arg		8071145	0					
ANR	8071213	Identifier	uint_arg		8071145	0					
ANR	8071214	ArgumentList	pargs		8071145	1					
ANR	8071215	Argument	pargs		8071145	0					
ANR	8071216	Identifier	pargs		8071145	0					
ANR	8071217	ExpressionStatement	pcur_paper = ( pcl_paper_size_t * ) pcs -> xfm_state . paper_size	1018:4:30452:30511	8071145	5	True				
ANR	8071218	AssignmentExpression	pcur_paper = ( pcl_paper_size_t * ) pcs -> xfm_state . paper_size		8071145	0		=			
ANR	8071219	Identifier	pcur_paper		8071145	0					
ANR	8071220	CastExpression	( pcl_paper_size_t * ) pcs -> xfm_state . paper_size		8071145	1					
ANR	8071221	CastTarget	pcl_paper_size_t *		8071145	0					
ANR	8071222	MemberAccess	pcs -> xfm_state . paper_size		8071145	1					
ANR	8071223	PtrMemberAccess	pcs -> xfm_state		8071145	0					
ANR	8071224	Identifier	pcs		8071145	0					
ANR	8071225	Identifier	xfm_state		8071145	1					
ANR	8071226	Identifier	paper_size		8071145	1					
ANR	8071227	IfStatement	if ( count != 10 && count != 4 )		8071145	6					
ANR	8071228	Condition	count != 10 && count != 4	1022:8:30610:30634	8071145	0	True				
ANR	8071229	AndExpression	count != 10 && count != 4		8071145	0		&&			
ANR	8071230	EqualityExpression	count != 10		8071145	0		!=			
ANR	8071231	Identifier	count		8071145	0					
ANR	8071232	PrimaryExpression	10		8071145	1					
ANR	8071233	EqualityExpression	count != 4		8071145	1		!=			
ANR	8071234	Identifier	count		8071145	0					
ANR	8071235	PrimaryExpression	4		8071145	1					
ANR	8071236	ReturnStatement	return e_Range ;	1023:8:30645:30659	8071145	1	True				
ANR	8071237	Identifier	e_Range		8071145	0					
ANR	8071238	IfStatement	if ( count == 10 )		8071145	7					
ANR	8071239	Condition	count == 10	1025:8:30670:30680	8071145	0	True				
ANR	8071240	EqualityExpression	count == 10		8071145	0		==			
ANR	8071241	Identifier	count		8071145	0					
ANR	8071242	PrimaryExpression	10		8071145	1					
ANR	8071243	CompoundStatement		23:21:587:587	8071145	1					
ANR	8071244	ExpressionStatement	pcur_paper -> width = pl_get_uint16 ( plogpage -> Width ) * 10	1026:8:30693:30748	8071145	0	True				
ANR	8071245	AssignmentExpression	pcur_paper -> width = pl_get_uint16 ( plogpage -> Width ) * 10		8071145	0		=			
ANR	8071246	PtrMemberAccess	pcur_paper -> width		8071145	0					
ANR	8071247	Identifier	pcur_paper		8071145	0					
ANR	8071248	Identifier	width		8071145	1					
ANR	8071249	MultiplicativeExpression	pl_get_uint16 ( plogpage -> Width ) * 10		8071145	1		*			
ANR	8071250	CallExpression	pl_get_uint16 ( plogpage -> Width )		8071145	0					
ANR	8071251	Callee	pl_get_uint16		8071145	0					
ANR	8071252	Identifier	pl_get_uint16		8071145	0					
ANR	8071253	ArgumentList	plogpage -> Width		8071145	1					
ANR	8071254	Argument	plogpage -> Width		8071145	0					
ANR	8071255	PtrMemberAccess	plogpage -> Width		8071145	0					
ANR	8071256	Identifier	plogpage		8071145	0					
ANR	8071257	Identifier	Width		8071145	1					
ANR	8071258	PrimaryExpression	10		8071145	1					
ANR	8071259	ExpressionStatement	pcur_paper -> height = pl_get_uint16 ( plogpage -> Height ) * 10	1027:8:30758:30815	8071145	1	True				
ANR	8071260	AssignmentExpression	pcur_paper -> height = pl_get_uint16 ( plogpage -> Height ) * 10		8071145	0		=			
ANR	8071261	PtrMemberAccess	pcur_paper -> height		8071145	0					
ANR	8071262	Identifier	pcur_paper		8071145	0					
ANR	8071263	Identifier	height		8071145	1					
ANR	8071264	MultiplicativeExpression	pl_get_uint16 ( plogpage -> Height ) * 10		8071145	1		*			
ANR	8071265	CallExpression	pl_get_uint16 ( plogpage -> Height )		8071145	0					
ANR	8071266	Callee	pl_get_uint16		8071145	0					
ANR	8071267	Identifier	pl_get_uint16		8071145	0					
ANR	8071268	ArgumentList	plogpage -> Height		8071145	1					
ANR	8071269	Argument	plogpage -> Height		8071145	0					
ANR	8071270	PtrMemberAccess	plogpage -> Height		8071145	0					
ANR	8071271	Identifier	plogpage		8071145	0					
ANR	8071272	Identifier	Height		8071145	1					
ANR	8071273	PrimaryExpression	10		8071145	1					
ANR	8071274	IfStatement	if ( pcur_paper -> width == 0 || pcur_paper -> height == 0 )		8071145	2					
ANR	8071275	Condition	pcur_paper -> width == 0 || pcur_paper -> height == 0	1028:12:30829:30877	8071145	0	True				
ANR	8071276	OrExpression	pcur_paper -> width == 0 || pcur_paper -> height == 0		8071145	0		||			
ANR	8071277	EqualityExpression	pcur_paper -> width == 0		8071145	0		==			
ANR	8071278	PtrMemberAccess	pcur_paper -> width		8071145	0					
ANR	8071279	Identifier	pcur_paper		8071145	0					
ANR	8071280	Identifier	width		8071145	1					
ANR	8071281	PrimaryExpression	0		8071145	1					
ANR	8071282	EqualityExpression	pcur_paper -> height == 0		8071145	1		==			
ANR	8071283	PtrMemberAccess	pcur_paper -> height		8071145	0					
ANR	8071284	Identifier	pcur_paper		8071145	0					
ANR	8071285	Identifier	height		8071145	1					
ANR	8071286	PrimaryExpression	0		8071145	1					
ANR	8071287	ReturnStatement	return e_Range ;	1029:12:30892:30906	8071145	1	True				
ANR	8071288	Identifier	e_Range		8071145	0					
ANR	8071289	ExpressionStatement	pcur_paper -> offset_portrait = pl_get_int16 ( plogpage -> LeftOffset ) * 10	1032:4:30919:30988	8071145	8	True				
ANR	8071290	AssignmentExpression	pcur_paper -> offset_portrait = pl_get_int16 ( plogpage -> LeftOffset ) * 10		8071145	0		=			
ANR	8071291	PtrMemberAccess	pcur_paper -> offset_portrait		8071145	0					
ANR	8071292	Identifier	pcur_paper		8071145	0					
ANR	8071293	Identifier	offset_portrait		8071145	1					
ANR	8071294	MultiplicativeExpression	pl_get_int16 ( plogpage -> LeftOffset ) * 10		8071145	1		*			
ANR	8071295	CallExpression	pl_get_int16 ( plogpage -> LeftOffset )		8071145	0					
ANR	8071296	Callee	pl_get_int16		8071145	0					
ANR	8071297	Identifier	pl_get_int16		8071145	0					
ANR	8071298	ArgumentList	plogpage -> LeftOffset		8071145	1					
ANR	8071299	Argument	plogpage -> LeftOffset		8071145	0					
ANR	8071300	PtrMemberAccess	plogpage -> LeftOffset		8071145	0					
ANR	8071301	Identifier	plogpage		8071145	0					
ANR	8071302	Identifier	LeftOffset		8071145	1					
ANR	8071303	PrimaryExpression	10		8071145	1					
ANR	8071304	ExpressionStatement	pcur_paper -> offset_landscape = pl_get_int16 ( plogpage -> TopOffset ) * 10	1033:4:30994:31063	8071145	9	True				
ANR	8071305	AssignmentExpression	pcur_paper -> offset_landscape = pl_get_int16 ( plogpage -> TopOffset ) * 10		8071145	0		=			
ANR	8071306	PtrMemberAccess	pcur_paper -> offset_landscape		8071145	0					
ANR	8071307	Identifier	pcur_paper		8071145	0					
ANR	8071308	Identifier	offset_landscape		8071145	1					
ANR	8071309	MultiplicativeExpression	pl_get_int16 ( plogpage -> TopOffset ) * 10		8071145	1		*			
ANR	8071310	CallExpression	pl_get_int16 ( plogpage -> TopOffset )		8071145	0					
ANR	8071311	Callee	pl_get_int16		8071145	0					
ANR	8071312	Identifier	pl_get_int16		8071145	0					
ANR	8071313	ArgumentList	plogpage -> TopOffset		8071145	1					
ANR	8071314	Argument	plogpage -> TopOffset		8071145	0					
ANR	8071315	PtrMemberAccess	plogpage -> TopOffset		8071145	0					
ANR	8071316	Identifier	plogpage		8071145	0					
ANR	8071317	Identifier	TopOffset		8071145	1					
ANR	8071318	PrimaryExpression	10		8071145	1					
ANR	8071319	ExpressionStatement	"code = new_page_size ( pcs , pcur_paper , false , false )"	1035:4:31070:31121	8071145	10	True				
ANR	8071320	AssignmentExpression	"code = new_page_size ( pcs , pcur_paper , false , false )"		8071145	0		=			
ANR	8071321	Identifier	code		8071145	0					
ANR	8071322	CallExpression	"new_page_size ( pcs , pcur_paper , false , false )"		8071145	1					
ANR	8071323	Callee	new_page_size		8071145	0					
ANR	8071324	Identifier	new_page_size		8071145	0					
ANR	8071325	ArgumentList	pcs		8071145	1					
ANR	8071326	Argument	pcs		8071145	0					
ANR	8071327	Identifier	pcs		8071145	0					
ANR	8071328	Argument	pcur_paper		8071145	1					
ANR	8071329	Identifier	pcur_paper		8071145	0					
ANR	8071330	Argument	false		8071145	2					
ANR	8071331	Identifier	false		8071145	0					
ANR	8071332	Argument	false		8071145	3					
ANR	8071333	Identifier	false		8071145	0					
ANR	8071334	IfStatement	if ( code < 0 )		8071145	11					
ANR	8071335	Condition	code < 0	1036:8:31131:31138	8071145	0	True				
ANR	8071336	RelationalExpression	code < 0		8071145	0		<			
ANR	8071337	Identifier	code		8071145	0					
ANR	8071338	PrimaryExpression	0		8071145	1					
ANR	8071339	ReturnStatement	return code ;	1036:18:31141:31152	8071145	1	True				
ANR	8071340	Identifier	code		8071145	0					
ANR	8071341	ExpressionStatement	code = gs_erasepage ( pcs -> pgs )	1038:4:31159:31188	8071145	12	True				
ANR	8071342	AssignmentExpression	code = gs_erasepage ( pcs -> pgs )		8071145	0		=			
ANR	8071343	Identifier	code		8071145	0					
ANR	8071344	CallExpression	gs_erasepage ( pcs -> pgs )		8071145	1					
ANR	8071345	Callee	gs_erasepage		8071145	0					
ANR	8071346	Identifier	gs_erasepage		8071145	0					
ANR	8071347	ArgumentList	pcs -> pgs		8071145	1					
ANR	8071348	Argument	pcs -> pgs		8071145	0					
ANR	8071349	PtrMemberAccess	pcs -> pgs		8071145	0					
ANR	8071350	Identifier	pcs		8071145	0					
ANR	8071351	Identifier	pgs		8071145	1					
ANR	8071352	ExpressionStatement	pcs -> page_marked = false	1039:4:31194:31218	8071145	13	True				
ANR	8071353	AssignmentExpression	pcs -> page_marked = false		8071145	0		=			
ANR	8071354	PtrMemberAccess	pcs -> page_marked		8071145	0					
ANR	8071355	Identifier	pcs		8071145	0					
ANR	8071356	Identifier	page_marked		8071145	1					
ANR	8071357	Identifier	false		8071145	1					
ANR	8071358	ReturnStatement	return code ;	1040:4:31224:31235	8071145	14	True				
ANR	8071359	Identifier	code		8071145	0					
ANR	8071360	ReturnType	static int		8071145	1					
ANR	8071361	Identifier	set_logical_page		8071145	2					
ANR	8071362	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8071145	3					
ANR	8071363	Parameter	pcl_args_t * pargs	1002:17:30056:30073	8071145	0	True				
ANR	8071364	ParameterType	pcl_args_t *		8071145	0					
ANR	8071365	Identifier	pargs		8071145	1					
ANR	8071366	Parameter	pcl_state_t * pcs	1002:37:30076:30092	8071145	1	True				
ANR	8071367	ParameterType	pcl_state_t *		8071145	0					
ANR	8071368	Identifier	pcs		8071145	1					
ANR	8071369	CFGEntryNode	ENTRY		8071145		True				
ANR	8071370	CFGExitNode	EXIT		8071145		True				
ANR	8071371	Symbol	plogpage -> Width		8071145						
ANR	8071372	Symbol	code		8071145						
ANR	8071373	Symbol	* pcs		8071145						
ANR	8071374	Symbol	plogpage		8071145						
ANR	8071375	Symbol	pcs -> page_marked		8071145						
ANR	8071376	Symbol	pcs -> xfm_state		8071145						
ANR	8071377	Symbol	* plogpage		8071145						
ANR	8071378	Symbol	plogpage -> Height		8071145						
ANR	8071379	Symbol	pargs		8071145						
ANR	8071380	Symbol	pl_get_int16		8071145						
ANR	8071381	Symbol	pcur_paper -> height		8071145						
ANR	8071382	Symbol	gs_erasepage		8071145						
ANR	8071383	Symbol	pcur_paper -> offset_portrait		8071145						
ANR	8071384	Symbol	gs_debug_c		8071145						
ANR	8071385	Symbol	pcs -> memory		8071145						
ANR	8071386	Symbol	e_Range		8071145						
ANR	8071387	Symbol	pcs		8071145						
ANR	8071388	Symbol	pcur_paper		8071145						
ANR	8071389	Symbol	pl_get_uint16		8071145						
ANR	8071390	Symbol	pcs -> pgs		8071145						
ANR	8071391	Symbol	count		8071145						
ANR	8071392	Symbol	false		8071145						
ANR	8071393	Symbol	plogpage -> LeftOffset		8071145						
ANR	8071394	Symbol	plogpage -> TopOffset		8071145						
ANR	8071395	Symbol	* pcur_paper		8071145						
ANR	8071396	Symbol	uint_arg		8071145						
ANR	8071397	Symbol	pcs -> xfm_state . paper_size		8071145						
ANR	8071398	Symbol	new_page_size		8071145						
ANR	8071399	Symbol	arg_data		8071145						
ANR	8071400	Symbol	pcur_paper -> width		8071145						
ANR	8071401	Symbol	pcur_paper -> offset_landscape		8071145						
ANR	8071402	Function	set_paper_width	1051:0:31441:31953							
ANR	8071403	FunctionDef	"set_paper_width (pcl_args_t * pargs , pcl_state_t * pcs)"		8071402	0					
ANR	8071404	CompoundStatement		1053:0:31507:31953	8071402	0					
ANR	8071405	IdentifierDeclStatement	uint decipoints = uint_arg ( pargs ) ;	1054:4:31513:31546	8071402	0	True				
ANR	8071406	IdentifierDecl	decipoints = uint_arg ( pargs )		8071402	0					
ANR	8071407	IdentifierDeclType	uint		8071402	0					
ANR	8071408	Identifier	decipoints		8071402	1					
ANR	8071409	AssignmentExpression	decipoints = uint_arg ( pargs )		8071402	2		=			
ANR	8071410	Identifier	decipoints		8071402	0					
ANR	8071411	CallExpression	uint_arg ( pargs )		8071402	1					
ANR	8071412	Callee	uint_arg		8071402	0					
ANR	8071413	Identifier	uint_arg		8071402	0					
ANR	8071414	ArgumentList	pargs		8071402	1					
ANR	8071415	Argument	pargs		8071402	0					
ANR	8071416	Identifier	pargs		8071402	0					
ANR	8071417	IdentifierDeclStatement	bool found = false ;	1055:4:31552:31570	8071402	1	True				
ANR	8071418	IdentifierDecl	found = false		8071402	0					
ANR	8071419	IdentifierDeclType	bool		8071402	0					
ANR	8071420	Identifier	found		8071402	1					
ANR	8071421	AssignmentExpression	found = false		8071402	2		=			
ANR	8071422	Identifier	false		8071402	0					
ANR	8071423	Identifier	false		8071402	1					
ANR	8071424	IdentifierDeclStatement	int i ;	1056:4:31576:31581	8071402	2	True				
ANR	8071425	IdentifierDecl	i		8071402	0					
ANR	8071426	IdentifierDeclType	int		8071402	0					
ANR	8071427	Identifier	i		8071402	1					
ANR	8071428	IdentifierDeclStatement	pcl_paper_size_t * psize ;	1057:4:31587:31610	8071402	3	True				
ANR	8071429	IdentifierDecl	* psize		8071402	0					
ANR	8071430	IdentifierDeclType	pcl_paper_size_t *		8071402	0					
ANR	8071431	Identifier	psize		8071402	1					
ANR	8071432	ForStatement	for ( i = 0 ; i < pcl_paper_type_count ; i ++ )		8071402	4					
ANR	8071433	ForInit	i = 0 ;	1059:9:31622:31627	8071402	0	True				
ANR	8071434	AssignmentExpression	i = 0		8071402	0		=			
ANR	8071435	Identifier	i		8071402	0					
ANR	8071436	PrimaryExpression	0		8071402	1					
ANR	8071437	Condition	i < pcl_paper_type_count	1059:16:31629:31652	8071402	1	True				
ANR	8071438	RelationalExpression	i < pcl_paper_type_count		8071402	0		<			
ANR	8071439	Identifier	i		8071402	0					
ANR	8071440	Identifier	pcl_paper_type_count		8071402	1					
ANR	8071441	PostIncDecOperationExpression	i ++	1059:42:31655:31657	8071402	2	True				
ANR	8071442	Identifier	i		8071402	0					
ANR	8071443	IncDec	++		8071402	1					
ANR	8071444	CompoundStatement		7:47:152:152	8071402	3					
ANR	8071445	IfStatement	if ( 101 == PAPER_SIZES [ i ] . tag )		8071402	0					
ANR	8071446	Condition	101 == PAPER_SIZES [ i ] . tag	1060:12:31674:31698	8071402	0	True				
ANR	8071447	EqualityExpression	101 == PAPER_SIZES [ i ] . tag		8071402	0		==			
ANR	8071448	PrimaryExpression	101		8071402	0					
ANR	8071449	MemberAccess	PAPER_SIZES [ i ] . tag		8071402	1					
ANR	8071450	ArrayIndexing	PAPER_SIZES [ i ]		8071402	0					
ANR	8071451	Identifier	PAPER_SIZES		8071402	0					
ANR	8071452	Identifier	i		8071402	1					
ANR	8071453	Identifier	tag		8071402	1					
ANR	8071454	CompoundStatement		8:39:193:193	8071402	1					
ANR	8071455	ExpressionStatement	psize = & ( PAPER_SIZES [ i ] . psize )	1061:12:31715:31746	8071402	0	True				
ANR	8071456	AssignmentExpression	psize = & ( PAPER_SIZES [ i ] . psize )		8071402	0		=			
ANR	8071457	Identifier	psize		8071402	0					
ANR	8071458	UnaryOperationExpression	& ( PAPER_SIZES [ i ] . psize )		8071402	1					
ANR	8071459	UnaryOperator	&		8071402	0					
ANR	8071460	MemberAccess	PAPER_SIZES [ i ] . psize		8071402	1					
ANR	8071461	ArrayIndexing	PAPER_SIZES [ i ]		8071402	0					
ANR	8071462	Identifier	PAPER_SIZES		8071402	0					
ANR	8071463	Identifier	i		8071402	1					
ANR	8071464	Identifier	psize		8071402	1					
ANR	8071465	ExpressionStatement	found = true	1062:12:31760:31772	8071402	1	True				
ANR	8071466	AssignmentExpression	found = true		8071402	0		=			
ANR	8071467	Identifier	found		8071402	0					
ANR	8071468	Identifier	true		8071402	1					
ANR	8071469	BreakStatement	break ;	1063:12:31786:31791	8071402	2	True				
ANR	8071470	IfStatement	if ( found )		8071402	5					
ANR	8071471	Condition	found	1067:8:31818:31822	8071402	0	True				
ANR	8071472	Identifier	found		8071402	0					
ANR	8071473	ExpressionStatement	psize -> width = decipoints * 10L	1068:8:31833:31864	8071402	1	True				
ANR	8071474	AssignmentExpression	psize -> width = decipoints * 10L		8071402	0		=			
ANR	8071475	PtrMemberAccess	psize -> width		8071402	0					
ANR	8071476	Identifier	psize		8071402	0					
ANR	8071477	Identifier	width		8071402	1					
ANR	8071478	MultiplicativeExpression	decipoints * 10L		8071402	1		*			
ANR	8071479	Identifier	decipoints		8071402	0					
ANR	8071480	PrimaryExpression	10L		8071402	1					
ANR	8071481	ElseStatement	else		8071402	0					
ANR	8071482	ExpressionStatement	"gs_warn ( ""Page table does not contain a custom entry"" )"	1070:8:31883:31936	8071402	0	True				
ANR	8071483	CallExpression	"gs_warn ( ""Page table does not contain a custom entry"" )"		8071402	0					
ANR	8071484	Callee	gs_warn		8071402	0					
ANR	8071485	Identifier	gs_warn		8071402	0					
ANR	8071486	ArgumentList	"""Page table does not contain a custom entry"""		8071402	1					
ANR	8071487	Argument	"""Page table does not contain a custom entry"""		8071402	0					
ANR	8071488	PrimaryExpression	"""Page table does not contain a custom entry"""		8071402	0					
ANR	8071489	ReturnStatement	return 0 ;	1072:4:31943:31951	8071402	6	True				
ANR	8071490	PrimaryExpression	0		8071402	0					
ANR	8071491	ReturnType	static int		8071402	1					
ANR	8071492	Identifier	set_paper_width		8071402	2					
ANR	8071493	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8071402	3					
ANR	8071494	Parameter	pcl_args_t * pargs	1052:16:31468:31485	8071402	0	True				
ANR	8071495	ParameterType	pcl_args_t *		8071402	0					
ANR	8071496	Identifier	pargs		8071402	1					
ANR	8071497	Parameter	pcl_state_t * pcs	1052:36:31488:31504	8071402	1	True				
ANR	8071498	ParameterType	pcl_state_t *		8071402	0					
ANR	8071499	Identifier	pcs		8071402	1					
ANR	8071500	CFGEntryNode	ENTRY		8071402		True				
ANR	8071501	CFGExitNode	EXIT		8071402		True				
ANR	8071502	Symbol	pcs		8071402						
ANR	8071503	Symbol	& PAPER_SIZES [ i ] . psize		8071402						
ANR	8071504	Symbol	false		8071402						
ANR	8071505	Symbol	i		8071402						
ANR	8071506	Symbol	pcl_paper_type_count		8071402						
ANR	8071507	Symbol	PAPER_SIZES [ i ] . tag		8071402						
ANR	8071508	Symbol	uint_arg		8071402						
ANR	8071509	Symbol	psize -> width		8071402						
ANR	8071510	Symbol	psize		8071402						
ANR	8071511	Symbol	found		8071402						
ANR	8071512	Symbol	* i		8071402						
ANR	8071513	Symbol	pargs		8071402						
ANR	8071514	Symbol	decipoints		8071402						
ANR	8071515	Symbol	true		8071402						
ANR	8071516	Symbol	* psize		8071402						
ANR	8071517	Symbol	* PAPER_SIZES		8071402						
ANR	8071518	Symbol	PAPER_SIZES		8071402						
ANR	8071519	Function	pcl_set_custom_paper_size	1075:0:31956:32520							
ANR	8071520	FunctionDef	"pcl_set_custom_paper_size (pcl_state_t * pcs , pcl_paper_size_t * p)"		8071519	0					
ANR	8071521	CompoundStatement		1077:0:32026:32520	8071519	0					
ANR	8071522	IdentifierDeclStatement	pcl_paper_size_t * psize = NULL ;	1078:4:32032:32062	8071519	0	True				
ANR	8071523	IdentifierDecl	* psize = NULL		8071519	0					
ANR	8071524	IdentifierDeclType	pcl_paper_size_t *		8071519	0					
ANR	8071525	Identifier	psize		8071519	1					
ANR	8071526	AssignmentExpression	* psize = NULL		8071519	2		=			
ANR	8071527	Identifier	NULL		8071519	0					
ANR	8071528	Identifier	NULL		8071519	1					
ANR	8071529	IdentifierDeclStatement	bool found = false ;	1079:4:32068:32086	8071519	1	True				
ANR	8071530	IdentifierDecl	found = false		8071519	0					
ANR	8071531	IdentifierDeclType	bool		8071519	0					
ANR	8071532	Identifier	found		8071519	1					
ANR	8071533	AssignmentExpression	found = false		8071519	2		=			
ANR	8071534	Identifier	false		8071519	0					
ANR	8071535	Identifier	false		8071519	1					
ANR	8071536	IdentifierDeclStatement	int i ;	1080:4:32092:32097	8071519	2	True				
ANR	8071537	IdentifierDecl	i		8071519	0					
ANR	8071538	IdentifierDeclType	int		8071519	0					
ANR	8071539	Identifier	i		8071519	1					
ANR	8071540	ForStatement	for ( i = 0 ; i < pcl_paper_type_count ; i ++ )		8071519	3					
ANR	8071541	ForInit	i = 0 ;	1082:9:32109:32114	8071519	0	True				
ANR	8071542	AssignmentExpression	i = 0		8071519	0		=			
ANR	8071543	Identifier	i		8071519	0					
ANR	8071544	PrimaryExpression	0		8071519	1					
ANR	8071545	Condition	i < pcl_paper_type_count	1082:16:32116:32139	8071519	1	True				
ANR	8071546	RelationalExpression	i < pcl_paper_type_count		8071519	0		<			
ANR	8071547	Identifier	i		8071519	0					
ANR	8071548	Identifier	pcl_paper_type_count		8071519	1					
ANR	8071549	PostIncDecOperationExpression	i ++	1082:42:32142:32144	8071519	2	True				
ANR	8071550	Identifier	i		8071519	0					
ANR	8071551	IncDec	++		8071519	1					
ANR	8071552	CompoundStatement		6:47:120:120	8071519	3					
ANR	8071553	IfStatement	if ( 101 == PAPER_SIZES [ i ] . tag )		8071519	0					
ANR	8071554	Condition	101 == PAPER_SIZES [ i ] . tag	1083:12:32161:32185	8071519	0	True				
ANR	8071555	EqualityExpression	101 == PAPER_SIZES [ i ] . tag		8071519	0		==			
ANR	8071556	PrimaryExpression	101		8071519	0					
ANR	8071557	MemberAccess	PAPER_SIZES [ i ] . tag		8071519	1					
ANR	8071558	ArrayIndexing	PAPER_SIZES [ i ]		8071519	0					
ANR	8071559	Identifier	PAPER_SIZES		8071519	0					
ANR	8071560	Identifier	i		8071519	1					
ANR	8071561	Identifier	tag		8071519	1					
ANR	8071562	CompoundStatement		7:39:161:161	8071519	1					
ANR	8071563	ExpressionStatement	psize = & ( PAPER_SIZES [ i ] . psize )	1084:12:32202:32233	8071519	0	True				
ANR	8071564	AssignmentExpression	psize = & ( PAPER_SIZES [ i ] . psize )		8071519	0		=			
ANR	8071565	Identifier	psize		8071519	0					
ANR	8071566	UnaryOperationExpression	& ( PAPER_SIZES [ i ] . psize )		8071519	1					
ANR	8071567	UnaryOperator	&		8071519	0					
ANR	8071568	MemberAccess	PAPER_SIZES [ i ] . psize		8071519	1					
ANR	8071569	ArrayIndexing	PAPER_SIZES [ i ]		8071519	0					
ANR	8071570	Identifier	PAPER_SIZES		8071519	0					
ANR	8071571	Identifier	i		8071519	1					
ANR	8071572	Identifier	psize		8071519	1					
ANR	8071573	ExpressionStatement	found = true	1085:12:32247:32259	8071519	1	True				
ANR	8071574	AssignmentExpression	found = true		8071519	0		=			
ANR	8071575	Identifier	found		8071519	0					
ANR	8071576	Identifier	true		8071519	1					
ANR	8071577	BreakStatement	break ;	1086:12:32273:32278	8071519	2	True				
ANR	8071578	IfStatement	if ( found )		8071519	4					
ANR	8071579	Condition	found	1089:8:32304:32308	8071519	0	True				
ANR	8071580	Identifier	found		8071519	0					
ANR	8071581	ExpressionStatement	* psize = * p	1090:8:32319:32330	8071519	1	True				
ANR	8071582	AssignmentExpression	* psize = * p		8071519	0		=			
ANR	8071583	UnaryOperationExpression	* psize		8071519	0					
ANR	8071584	UnaryOperator	*		8071519	0					
ANR	8071585	Identifier	psize		8071519	1					
ANR	8071586	UnaryOperationExpression	* p		8071519	1					
ANR	8071587	UnaryOperator	*		8071519	0					
ANR	8071588	Identifier	p		8071519	1					
ANR	8071589	ElseStatement	else		8071519	0					
ANR	8071590	ReturnStatement	return - 1 ;	1094:8:32446:32455	8071519	0	True				
ANR	8071591	UnaryOperationExpression	- 1		8071519	0					
ANR	8071592	UnaryOperator	-		8071519	0					
ANR	8071593	PrimaryExpression	1		8071519	1					
ANR	8071594	ReturnStatement	"return new_logical_page ( pcs , 0 , psize , false , false ) ;"	1096:4:32466:32518	8071519	5	True				
ANR	8071595	CallExpression	"new_logical_page ( pcs , 0 , psize , false , false )"		8071519	0					
ANR	8071596	Callee	new_logical_page		8071519	0					
ANR	8071597	Identifier	new_logical_page		8071519	0					
ANR	8071598	ArgumentList	pcs		8071519	1					
ANR	8071599	Argument	pcs		8071519	0					
ANR	8071600	Identifier	pcs		8071519	0					
ANR	8071601	Argument	0		8071519	1					
ANR	8071602	PrimaryExpression	0		8071519	0					
ANR	8071603	Argument	psize		8071519	2					
ANR	8071604	Identifier	psize		8071519	0					
ANR	8071605	Argument	false		8071519	3					
ANR	8071606	Identifier	false		8071519	0					
ANR	8071607	Argument	false		8071519	4					
ANR	8071608	Identifier	false		8071519	0					
ANR	8071609	ReturnType	int		8071519	1					
ANR	8071610	Identifier	pcl_set_custom_paper_size		8071519	2					
ANR	8071611	ParameterList	"pcl_state_t * pcs , pcl_paper_size_t * p"		8071519	3					
ANR	8071612	Parameter	pcl_state_t * pcs	1076:26:31987:32002	8071519	0	True				
ANR	8071613	ParameterType	pcl_state_t *		8071519	0					
ANR	8071614	Identifier	pcs		8071519	1					
ANR	8071615	Parameter	pcl_paper_size_t * p	1076:44:32005:32023	8071519	1	True				
ANR	8071616	ParameterType	pcl_paper_size_t *		8071519	0					
ANR	8071617	Identifier	p		8071519	1					
ANR	8071618	CFGEntryNode	ENTRY		8071519		True				
ANR	8071619	CFGExitNode	EXIT		8071519		True				
ANR	8071620	Symbol	pcs		8071519						
ANR	8071621	Symbol	& PAPER_SIZES [ i ] . psize		8071519						
ANR	8071622	Symbol	NULL		8071519						
ANR	8071623	Symbol	false		8071519						
ANR	8071624	Symbol	i		8071519						
ANR	8071625	Symbol	pcl_paper_type_count		8071519						
ANR	8071626	Symbol	PAPER_SIZES [ i ] . tag		8071519						
ANR	8071627	Symbol	p		8071519						
ANR	8071628	Symbol	psize		8071519						
ANR	8071629	Symbol	found		8071519						
ANR	8071630	Symbol	* i		8071519						
ANR	8071631	Symbol	true		8071519						
ANR	8071632	Symbol	* p		8071519						
ANR	8071633	Symbol	* psize		8071519						
ANR	8071634	Symbol	* PAPER_SIZES		8071519						
ANR	8071635	Symbol	PAPER_SIZES		8071519						
ANR	8071636	Symbol	new_logical_page		8071519						
ANR	8071637	Function	set_paper_length	1102:0:32556:33109							
ANR	8071638	FunctionDef	"set_paper_length (pcl_args_t * pargs , pcl_state_t * pcs)"		8071637	0					
ANR	8071639	CompoundStatement		1104:0:32623:33109	8071637	0					
ANR	8071640	IdentifierDeclStatement	uint decipoints = uint_arg ( pargs ) ;	1105:4:32629:32662	8071637	0	True				
ANR	8071641	IdentifierDecl	decipoints = uint_arg ( pargs )		8071637	0					
ANR	8071642	IdentifierDeclType	uint		8071637	0					
ANR	8071643	Identifier	decipoints		8071637	1					
ANR	8071644	AssignmentExpression	decipoints = uint_arg ( pargs )		8071637	2		=			
ANR	8071645	Identifier	decipoints		8071637	0					
ANR	8071646	CallExpression	uint_arg ( pargs )		8071637	1					
ANR	8071647	Callee	uint_arg		8071637	0					
ANR	8071648	Identifier	uint_arg		8071637	0					
ANR	8071649	ArgumentList	pargs		8071637	1					
ANR	8071650	Argument	pargs		8071637	0					
ANR	8071651	Identifier	pargs		8071637	0					
ANR	8071652	IdentifierDeclStatement	bool found = false ;	1106:4:32668:32686	8071637	1	True				
ANR	8071653	IdentifierDecl	found = false		8071637	0					
ANR	8071654	IdentifierDeclType	bool		8071637	0					
ANR	8071655	Identifier	found		8071637	1					
ANR	8071656	AssignmentExpression	found = false		8071637	2		=			
ANR	8071657	Identifier	false		8071637	0					
ANR	8071658	Identifier	false		8071637	1					
ANR	8071659	IdentifierDeclStatement	int i ;	1107:4:32692:32697	8071637	2	True				
ANR	8071660	IdentifierDecl	i		8071637	0					
ANR	8071661	IdentifierDeclType	int		8071637	0					
ANR	8071662	Identifier	i		8071637	1					
ANR	8071663	IdentifierDeclStatement	pcl_paper_size_t * psize ;	1108:4:32703:32726	8071637	3	True				
ANR	8071664	IdentifierDecl	* psize		8071637	0					
ANR	8071665	IdentifierDeclType	pcl_paper_size_t *		8071637	0					
ANR	8071666	Identifier	psize		8071637	1					
ANR	8071667	ForStatement	for ( i = 0 ; i < pcl_paper_type_count ; i ++ )		8071637	4					
ANR	8071668	ForInit	i = 0 ;	1110:9:32738:32743	8071637	0	True				
ANR	8071669	AssignmentExpression	i = 0		8071637	0		=			
ANR	8071670	Identifier	i		8071637	0					
ANR	8071671	PrimaryExpression	0		8071637	1					
ANR	8071672	Condition	i < pcl_paper_type_count	1110:16:32745:32768	8071637	1	True				
ANR	8071673	RelationalExpression	i < pcl_paper_type_count		8071637	0		<			
ANR	8071674	Identifier	i		8071637	0					
ANR	8071675	Identifier	pcl_paper_type_count		8071637	1					
ANR	8071676	PostIncDecOperationExpression	i ++	1110:42:32771:32773	8071637	2	True				
ANR	8071677	Identifier	i		8071637	0					
ANR	8071678	IncDec	++		8071637	1					
ANR	8071679	CompoundStatement		7:47:152:152	8071637	3					
ANR	8071680	IfStatement	if ( 101 == PAPER_SIZES [ i ] . tag )		8071637	0					
ANR	8071681	Condition	101 == PAPER_SIZES [ i ] . tag	1111:12:32790:32814	8071637	0	True				
ANR	8071682	EqualityExpression	101 == PAPER_SIZES [ i ] . tag		8071637	0		==			
ANR	8071683	PrimaryExpression	101		8071637	0					
ANR	8071684	MemberAccess	PAPER_SIZES [ i ] . tag		8071637	1					
ANR	8071685	ArrayIndexing	PAPER_SIZES [ i ]		8071637	0					
ANR	8071686	Identifier	PAPER_SIZES		8071637	0					
ANR	8071687	Identifier	i		8071637	1					
ANR	8071688	Identifier	tag		8071637	1					
ANR	8071689	CompoundStatement		8:39:193:193	8071637	1					
ANR	8071690	ExpressionStatement	psize = & ( PAPER_SIZES [ i ] . psize )	1112:12:32831:32862	8071637	0	True				
ANR	8071691	AssignmentExpression	psize = & ( PAPER_SIZES [ i ] . psize )		8071637	0		=			
ANR	8071692	Identifier	psize		8071637	0					
ANR	8071693	UnaryOperationExpression	& ( PAPER_SIZES [ i ] . psize )		8071637	1					
ANR	8071694	UnaryOperator	&		8071637	0					
ANR	8071695	MemberAccess	PAPER_SIZES [ i ] . psize		8071637	1					
ANR	8071696	ArrayIndexing	PAPER_SIZES [ i ]		8071637	0					
ANR	8071697	Identifier	PAPER_SIZES		8071637	0					
ANR	8071698	Identifier	i		8071637	1					
ANR	8071699	Identifier	psize		8071637	1					
ANR	8071700	ExpressionStatement	found = true	1113:12:32876:32888	8071637	1	True				
ANR	8071701	AssignmentExpression	found = true		8071637	0		=			
ANR	8071702	Identifier	found		8071637	0					
ANR	8071703	Identifier	true		8071637	1					
ANR	8071704	BreakStatement	break ;	1114:12:32902:32907	8071637	2	True				
ANR	8071705	IfStatement	if ( found )		8071637	5					
ANR	8071706	Condition	found	1117:8:32933:32937	8071637	0	True				
ANR	8071707	Identifier	found		8071637	0					
ANR	8071708	ExpressionStatement	psize -> height = decipoints * 10L	1118:8:32948:32980	8071637	1	True				
ANR	8071709	AssignmentExpression	psize -> height = decipoints * 10L		8071637	0		=			
ANR	8071710	PtrMemberAccess	psize -> height		8071637	0					
ANR	8071711	Identifier	psize		8071637	0					
ANR	8071712	Identifier	height		8071637	1					
ANR	8071713	MultiplicativeExpression	decipoints * 10L		8071637	1		*			
ANR	8071714	Identifier	decipoints		8071637	0					
ANR	8071715	PrimaryExpression	10L		8071637	1					
ANR	8071716	ElseStatement	else		8071637	0					
ANR	8071717	ReturnStatement	return - 1 ;	1122:8:33084:33093	8071637	0	True				
ANR	8071718	UnaryOperationExpression	- 1		8071637	0					
ANR	8071719	UnaryOperator	-		8071637	0					
ANR	8071720	PrimaryExpression	1		8071637	1					
ANR	8071721	ReturnStatement	return 0 ;	1123:4:33099:33107	8071637	6	True				
ANR	8071722	PrimaryExpression	0		8071637	0					
ANR	8071723	ReturnType	static int		8071637	1					
ANR	8071724	Identifier	set_paper_length		8071637	2					
ANR	8071725	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8071637	3					
ANR	8071726	Parameter	pcl_args_t * pargs	1103:17:32584:32601	8071637	0	True				
ANR	8071727	ParameterType	pcl_args_t *		8071637	0					
ANR	8071728	Identifier	pargs		8071637	1					
ANR	8071729	Parameter	pcl_state_t * pcs	1103:37:32604:32620	8071637	1	True				
ANR	8071730	ParameterType	pcl_state_t *		8071637	0					
ANR	8071731	Identifier	pcs		8071637	1					
ANR	8071732	CFGEntryNode	ENTRY		8071637		True				
ANR	8071733	CFGExitNode	EXIT		8071637		True				
ANR	8071734	Symbol	pcs		8071637						
ANR	8071735	Symbol	& PAPER_SIZES [ i ] . psize		8071637						
ANR	8071736	Symbol	false		8071637						
ANR	8071737	Symbol	i		8071637						
ANR	8071738	Symbol	pcl_paper_type_count		8071637						
ANR	8071739	Symbol	PAPER_SIZES [ i ] . tag		8071637						
ANR	8071740	Symbol	uint_arg		8071637						
ANR	8071741	Symbol	psize		8071637						
ANR	8071742	Symbol	found		8071637						
ANR	8071743	Symbol	* i		8071637						
ANR	8071744	Symbol	pargs		8071637						
ANR	8071745	Symbol	decipoints		8071637						
ANR	8071746	Symbol	true		8071637						
ANR	8071747	Symbol	psize -> height		8071637						
ANR	8071748	Symbol	* psize		8071637						
ANR	8071749	Symbol	* PAPER_SIZES		8071637						
ANR	8071750	Symbol	PAPER_SIZES		8071637						
ANR	8071751	Function	pcl_print_quality	1133:0:33211:33540							
ANR	8071752	FunctionDef	"pcl_print_quality (pcl_args_t * pargs , pcl_state_t * pcs)"		8071751	0					
ANR	8071753	CompoundStatement		1135:0:33279:33540	8071751	0					
ANR	8071754	IdentifierDeclStatement	int quality = int_arg ( pargs ) ;	1136:4:33285:33313	8071751	0	True				
ANR	8071755	IdentifierDecl	quality = int_arg ( pargs )		8071751	0					
ANR	8071756	IdentifierDeclType	int		8071751	0					
ANR	8071757	Identifier	quality		8071751	1					
ANR	8071758	AssignmentExpression	quality = int_arg ( pargs )		8071751	2		=			
ANR	8071759	Identifier	quality		8071751	0					
ANR	8071760	CallExpression	int_arg ( pargs )		8071751	1					
ANR	8071761	Callee	int_arg		8071751	0					
ANR	8071762	Identifier	int_arg		8071751	0					
ANR	8071763	ArgumentList	pargs		8071751	1					
ANR	8071764	Argument	pargs		8071751	0					
ANR	8071765	Identifier	pargs		8071751	0					
ANR	8071766	IfStatement	if ( ( quality >= - 1 ) && ( quality <= 1 ) )		8071751	1					
ANR	8071767	Condition	( quality >= - 1 ) && ( quality <= 1 )	1138:8:33324:33356	8071751	0	True				
ANR	8071768	AndExpression	( quality >= - 1 ) && ( quality <= 1 )		8071751	0		&&			
ANR	8071769	RelationalExpression	quality >= - 1		8071751	0		>=			
ANR	8071770	Identifier	quality		8071751	0					
ANR	8071771	UnaryOperationExpression	- 1		8071751	1					
ANR	8071772	UnaryOperator	-		8071751	0					
ANR	8071773	PrimaryExpression	1		8071751	1					
ANR	8071774	RelationalExpression	quality <= 1		8071751	1		<=			
ANR	8071775	Identifier	quality		8071751	0					
ANR	8071776	PrimaryExpression	1		8071751	1					
ANR	8071777	CompoundStatement		5:8:89:127	8071751	1					
ANR	8071778	IdentifierDeclStatement	int code = pcl_end_page_if_marked ( pcs ) ;	1139:8:33369:33407	8071751	0	True				
ANR	8071779	IdentifierDecl	code = pcl_end_page_if_marked ( pcs )		8071751	0					
ANR	8071780	IdentifierDeclType	int		8071751	0					
ANR	8071781	Identifier	code		8071751	1					
ANR	8071782	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8071751	2		=			
ANR	8071783	Identifier	code		8071751	0					
ANR	8071784	CallExpression	pcl_end_page_if_marked ( pcs )		8071751	1					
ANR	8071785	Callee	pcl_end_page_if_marked		8071751	0					
ANR	8071786	Identifier	pcl_end_page_if_marked		8071751	0					
ANR	8071787	ArgumentList	pcs		8071751	1					
ANR	8071788	Argument	pcs		8071751	0					
ANR	8071789	Identifier	pcs		8071751	0					
ANR	8071790	IfStatement	if ( code >= 0 )		8071751	1					
ANR	8071791	Condition	code >= 0	1141:12:33422:33430	8071751	0	True				
ANR	8071792	RelationalExpression	code >= 0		8071751	0		>=			
ANR	8071793	Identifier	code		8071751	0					
ANR	8071794	PrimaryExpression	0		8071751	1					
ANR	8071795	ExpressionStatement	pcl_home_cursor ( pcs )	1142:12:33445:33465	8071751	1	True				
ANR	8071796	CallExpression	pcl_home_cursor ( pcs )		8071751	0					
ANR	8071797	Callee	pcl_home_cursor		8071751	0					
ANR	8071798	Identifier	pcl_home_cursor		8071751	0					
ANR	8071799	ArgumentList	pcs		8071751	1					
ANR	8071800	Argument	pcs		8071751	0					
ANR	8071801	Identifier	pcs		8071751	0					
ANR	8071802	ReturnStatement	return ( code < 0 ? code : 0 ) ;	1143:8:33475:33503	8071751	2	True				
ANR	8071803	ConditionalExpression	code < 0 ? code : 0		8071751	0					
ANR	8071804	Condition	code < 0		8071751	0					
ANR	8071805	RelationalExpression	code < 0		8071751	0		<			
ANR	8071806	Identifier	code		8071751	0					
ANR	8071807	PrimaryExpression	0		8071751	1					
ANR	8071808	Identifier	code		8071751	1					
ANR	8071809	PrimaryExpression	0		8071751	2					
ANR	8071810	ElseStatement	else		8071751	0					
ANR	8071811	ReturnStatement	return e_Range ;	1145:8:33524:33538	8071751	0	True				
ANR	8071812	Identifier	e_Range		8071751	0					
ANR	8071813	ReturnType	static int		8071751	1					
ANR	8071814	Identifier	pcl_print_quality		8071751	2					
ANR	8071815	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8071751	3					
ANR	8071816	Parameter	pcl_args_t * pargs	1134:18:33240:33257	8071751	0	True				
ANR	8071817	ParameterType	pcl_args_t *		8071751	0					
ANR	8071818	Identifier	pargs		8071751	1					
ANR	8071819	Parameter	pcl_state_t * pcs	1134:38:33260:33276	8071751	1	True				
ANR	8071820	ParameterType	pcl_state_t *		8071751	0					
ANR	8071821	Identifier	pcs		8071751	1					
ANR	8071822	CFGEntryNode	ENTRY		8071751		True				
ANR	8071823	CFGExitNode	EXIT		8071751		True				
ANR	8071824	Symbol	e_Range		8071751						
ANR	8071825	Symbol	pcs		8071751						
ANR	8071826	Symbol	code		8071751						
ANR	8071827	Symbol	int_arg		8071751						
ANR	8071828	Symbol	pargs		8071751						
ANR	8071829	Symbol	pcl_end_page_if_marked		8071751						
ANR	8071830	Symbol	quality		8071751						
ANR	8071831	Function	pcpage_do_registration	1151:0:33568:36353							
ANR	8071832	FunctionDef	"pcpage_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * pmem)"		8071831	0					
ANR	8071833	CompoundStatement		1154:0:33687:36353	8071831	0					
ANR	8071834	Statement	DEFINE_CLASS	1156:4:33721:33732	8071831	0	True				
ANR	8071835	Statement	(	1156:16:33733:33733	8071831	1	True				
ANR	8071836	Statement	'&'	1156:17:33734:33736	8071831	2	True				
ANR	8071837	Statement	)	1156:20:33737:33737	8071831	3	True				
ANR	8071838	CompoundStatement		3:22:51:51	8071831	4					
ANR	8071839	Statement	'l'	1157:8:33749:33751	8071831	0	True				
ANR	8071840	Statement	","	1157:11:33752:33752	8071831	1	True				
ANR	8071841	Statement	'A'	1157:13:33754:33756	8071831	2	True				
ANR	8071842	Statement	","	1157:16:33757:33757	8071831	3	True				
ANR	8071843	Statement	PCL_COMMAND	1158:12:33771:33781	8071831	4	True				
ANR	8071844	Statement	(	1158:23:33782:33782	8071831	5	True				
ANR	8071845	Statement	"""Page Size"""	1158:24:33783:33793	8071831	6	True				
ANR	8071846	Statement	","	1158:35:33794:33794	8071831	7	True				
ANR	8071847	Statement	set_page_size	1159:24:33820:33832	8071831	8	True				
ANR	8071848	Statement	","	1159:37:33833:33833	8071831	9	True				
ANR	8071849	Statement	pca_neg_ok	1159:39:33835:33844	8071831	10	True				
ANR	8071850	Statement	|	1159:50:33846:33846	8071831	11	True				
ANR	8071851	Statement	pca_big_ignore	1159:52:33848:33861	8071831	12	True				
ANR	8071852	Statement	)	1159:66:33862:33862	8071831	13	True				
ANR	8071853	Statement	","	1160:5:33869:33869	8071831	5	True				
ANR	8071854	CompoundStatement		7:7:183:183	8071831	6					
ANR	8071855	Statement	'l'	1161:8:33881:33883	8071831	0	True				
ANR	8071856	Statement	","	1161:11:33884:33884	8071831	1	True				
ANR	8071857	Statement	'H'	1161:13:33886:33888	8071831	2	True				
ANR	8071858	Statement	","	1161:16:33889:33889	8071831	3	True				
ANR	8071859	Statement	PCL_COMMAND	1162:12:33903:33913	8071831	4	True				
ANR	8071860	Statement	(	1162:23:33914:33914	8071831	5	True				
ANR	8071861	Statement	"""Paper Source"""	1162:24:33915:33928	8071831	6	True				
ANR	8071862	Statement	","	1162:38:33929:33929	8071831	7	True				
ANR	8071863	Statement	set_paper_source	1163:24:33955:33970	8071831	8	True				
ANR	8071864	Statement	","	1163:40:33971:33971	8071831	9	True				
ANR	8071865	Statement	pca_neg_ok	1163:42:33973:33982	8071831	10	True				
ANR	8071866	Statement	|	1163:53:33984:33984	8071831	11	True				
ANR	8071867	Statement	pca_big_ignore	1163:55:33986:33999	8071831	12	True				
ANR	8071868	Statement	)	1163:69:34000:34000	8071831	13	True				
ANR	8071869	Statement	","	1164:5:34007:34007	8071831	7	True				
ANR	8071870	CompoundStatement		11:7:321:321	8071831	8					
ANR	8071871	Statement	'l'	1165:8:34019:34021	8071831	0	True				
ANR	8071872	Statement	","	1165:11:34022:34022	8071831	1	True				
ANR	8071873	Statement	'U'	1165:13:34024:34026	8071831	2	True				
ANR	8071874	Statement	","	1165:16:34027:34027	8071831	3	True				
ANR	8071875	Statement	PCL_COMMAND	1166:12:34041:34051	8071831	4	True				
ANR	8071876	Statement	(	1166:23:34052:34052	8071831	5	True				
ANR	8071877	Statement	"""Left Offset Registration"""	1166:24:34053:34078	8071831	6	True				
ANR	8071878	Statement	","	1166:50:34079:34079	8071831	7	True				
ANR	8071879	Statement	set_left_offset_registration	1167:24:34105:34132	8071831	8	True				
ANR	8071880	Statement	","	1167:52:34133:34133	8071831	9	True				
ANR	8071881	Statement	pca_neg_ok	1168:24:34159:34168	8071831	10	True				
ANR	8071882	Statement	|	1168:35:34170:34170	8071831	11	True				
ANR	8071883	Statement	pca_big_ignore	1168:37:34172:34185	8071831	12	True				
ANR	8071884	Statement	)	1168:51:34186:34186	8071831	13	True				
ANR	8071885	Statement	","	1169:5:34193:34193	8071831	9	True				
ANR	8071886	CompoundStatement		16:7:507:507	8071831	10					
ANR	8071887	Statement	'l'	1170:8:34205:34207	8071831	0	True				
ANR	8071888	Statement	","	1170:11:34208:34208	8071831	1	True				
ANR	8071889	Statement	'Z'	1170:13:34210:34212	8071831	2	True				
ANR	8071890	Statement	","	1170:16:34213:34213	8071831	3	True				
ANR	8071891	Statement	PCL_COMMAND	1171:12:34227:34237	8071831	4	True				
ANR	8071892	Statement	(	1171:23:34238:34238	8071831	5	True				
ANR	8071893	Statement	"""Top Offset Registration"""	1171:24:34239:34263	8071831	6	True				
ANR	8071894	Statement	","	1171:49:34264:34264	8071831	7	True				
ANR	8071895	Statement	set_top_offset_registration	1172:24:34290:34316	8071831	8	True				
ANR	8071896	Statement	","	1172:51:34317:34317	8071831	9	True				
ANR	8071897	Statement	pca_neg_ok	1173:24:34343:34352	8071831	10	True				
ANR	8071898	Statement	|	1173:35:34354:34354	8071831	11	True				
ANR	8071899	Statement	pca_big_ignore	1173:37:34356:34369	8071831	12	True				
ANR	8071900	Statement	)	1173:51:34370:34370	8071831	13	True				
ANR	8071901	Statement	","	1174:5:34377:34377	8071831	11	True				
ANR	8071902	CompoundStatement		21:7:691:691	8071831	12					
ANR	8071903	Statement	'l'	1175:8:34389:34391	8071831	0	True				
ANR	8071904	Statement	","	1175:11:34392:34392	8071831	1	True				
ANR	8071905	Statement	'O'	1175:13:34394:34396	8071831	2	True				
ANR	8071906	Statement	","	1175:16:34397:34397	8071831	3	True				
ANR	8071907	Statement	PCL_COMMAND	1176:12:34411:34421	8071831	4	True				
ANR	8071908	Statement	(	1176:23:34422:34422	8071831	5	True				
ANR	8071909	Statement	"""Page Orientation"""	1176:24:34423:34440	8071831	6	True				
ANR	8071910	Statement	","	1176:42:34441:34441	8071831	7	True				
ANR	8071911	Statement	set_logical_page_orientation	1177:24:34467:34494	8071831	8	True				
ANR	8071912	Statement	","	1177:52:34495:34495	8071831	9	True				
ANR	8071913	Statement	pca_neg_ok	1178:24:34521:34530	8071831	10	True				
ANR	8071914	Statement	|	1178:35:34532:34532	8071831	11	True				
ANR	8071915	Statement	pca_big_ignore	1178:37:34534:34547	8071831	12	True				
ANR	8071916	Statement	)	1178:51:34548:34548	8071831	13	True				
ANR	8071917	Statement	","	1179:5:34555:34555	8071831	13	True				
ANR	8071918	CompoundStatement		26:7:869:869	8071831	14					
ANR	8071919	Statement	'a'	1180:8:34567:34569	8071831	0	True				
ANR	8071920	Statement	","	1180:11:34570:34570	8071831	1	True				
ANR	8071921	Statement	'P'	1180:13:34572:34574	8071831	2	True				
ANR	8071922	Statement	","	1180:16:34575:34575	8071831	3	True				
ANR	8071923	Statement	PCL_COMMAND	1181:12:34589:34599	8071831	4	True				
ANR	8071924	Statement	(	1181:23:34600:34600	8071831	5	True				
ANR	8071925	Statement	"""Print Direction"""	1181:24:34601:34617	8071831	6	True				
ANR	8071926	Statement	","	1181:41:34618:34618	8071831	7	True				
ANR	8071927	Statement	set_print_direction	1182:24:34644:34662	8071831	8	True				
ANR	8071928	Statement	","	1182:43:34663:34663	8071831	9	True				
ANR	8071929	Statement	pca_neg_ok	1182:45:34665:34674	8071831	10	True				
ANR	8071930	Statement	|	1182:56:34676:34676	8071831	11	True				
ANR	8071931	Statement	pca_big_ignore	1182:58:34678:34691	8071831	12	True				
ANR	8071932	Statement	)	1182:72:34692:34692	8071831	13	True				
ANR	8071933	Statement	","	1183:5:34699:34699	8071831	15	True				
ANR	8071934	CompoundStatement		30:7:1013:1013	8071831	16					
ANR	8071935	Statement	'a'	1184:8:34711:34713	8071831	0	True				
ANR	8071936	Statement	","	1184:11:34714:34714	8071831	1	True				
ANR	8071937	Statement	'L'	1184:13:34716:34718	8071831	2	True				
ANR	8071938	Statement	","	1184:16:34719:34719	8071831	3	True				
ANR	8071939	Statement	PCL_COMMAND	1185:12:34733:34743	8071831	4	True				
ANR	8071940	Statement	(	1185:23:34744:34744	8071831	5	True				
ANR	8071941	Statement	"""Left Margin"""	1185:24:34745:34757	8071831	6	True				
ANR	8071942	Statement	","	1185:37:34758:34758	8071831	7	True				
ANR	8071943	Statement	set_left_margin	1186:24:34784:34798	8071831	8	True				
ANR	8071944	Statement	","	1186:39:34799:34799	8071831	9	True				
ANR	8071945	Statement	pca_neg_ok	1186:41:34801:34810	8071831	10	True				
ANR	8071946	Statement	|	1186:52:34812:34812	8071831	11	True				
ANR	8071947	Statement	pca_big_ignore	1186:54:34814:34827	8071831	12	True				
ANR	8071948	Statement	)	1186:68:34828:34828	8071831	13	True				
ANR	8071949	Statement	","	1187:5:34835:34835	8071831	17	True				
ANR	8071950	CompoundStatement		34:7:1149:1149	8071831	18					
ANR	8071951	Statement	'a'	1188:8:34847:34849	8071831	0	True				
ANR	8071952	Statement	","	1188:11:34850:34850	8071831	1	True				
ANR	8071953	Statement	'M'	1188:13:34852:34854	8071831	2	True				
ANR	8071954	Statement	","	1188:16:34855:34855	8071831	3	True				
ANR	8071955	Statement	PCL_COMMAND	1189:12:34869:34879	8071831	4	True				
ANR	8071956	Statement	(	1189:23:34880:34880	8071831	5	True				
ANR	8071957	Statement	"""Right Margin"""	1189:24:34881:34894	8071831	6	True				
ANR	8071958	Statement	","	1189:38:34895:34895	8071831	7	True				
ANR	8071959	Statement	set_right_margin	1190:24:34921:34936	8071831	8	True				
ANR	8071960	Statement	","	1190:40:34937:34937	8071831	9	True				
ANR	8071961	Statement	pca_neg_ok	1190:42:34939:34948	8071831	10	True				
ANR	8071962	Statement	|	1190:53:34950:34950	8071831	11	True				
ANR	8071963	Statement	pca_big_ignore	1190:55:34952:34965	8071831	12	True				
ANR	8071964	Statement	)	1190:69:34966:34966	8071831	13	True				
ANR	8071965	Statement	","	1191:5:34973:34973	8071831	19	True				
ANR	8071966	CompoundStatement		38:7:1287:1287	8071831	20					
ANR	8071967	Statement	'l'	1192:8:34985:34987	8071831	0	True				
ANR	8071968	Statement	","	1192:11:34988:34988	8071831	1	True				
ANR	8071969	Statement	'E'	1192:13:34990:34992	8071831	2	True				
ANR	8071970	Statement	","	1192:16:34993:34993	8071831	3	True				
ANR	8071971	Statement	PCL_COMMAND	1193:12:35007:35017	8071831	4	True				
ANR	8071972	Statement	(	1193:23:35018:35018	8071831	5	True				
ANR	8071973	Statement	"""Top Margin"""	1193:24:35019:35030	8071831	6	True				
ANR	8071974	Statement	","	1193:36:35031:35031	8071831	7	True				
ANR	8071975	Statement	set_top_margin	1194:24:35057:35070	8071831	8	True				
ANR	8071976	Statement	","	1194:38:35071:35071	8071831	9	True				
ANR	8071977	Statement	pca_neg_ok	1194:40:35073:35082	8071831	10	True				
ANR	8071978	Statement	|	1194:51:35084:35084	8071831	11	True				
ANR	8071979	Statement	pca_big_ignore	1194:53:35086:35099	8071831	12	True				
ANR	8071980	Statement	)	1194:67:35100:35100	8071831	13	True				
ANR	8071981	Statement	","	1195:5:35107:35107	8071831	21	True				
ANR	8071982	CompoundStatement		42:7:1421:1421	8071831	22					
ANR	8071983	Statement	'l'	1196:8:35119:35121	8071831	0	True				
ANR	8071984	Statement	","	1196:11:35122:35122	8071831	1	True				
ANR	8071985	Statement	'F'	1196:13:35124:35126	8071831	2	True				
ANR	8071986	Statement	","	1196:16:35127:35127	8071831	3	True				
ANR	8071987	Statement	PCL_COMMAND	1197:12:35141:35151	8071831	4	True				
ANR	8071988	Statement	(	1197:23:35152:35152	8071831	5	True				
ANR	8071989	Statement	"""Text Length"""	1197:24:35153:35165	8071831	6	True				
ANR	8071990	Statement	","	1197:37:35166:35166	8071831	7	True				
ANR	8071991	Statement	set_text_length	1198:24:35192:35206	8071831	8	True				
ANR	8071992	Statement	","	1198:39:35207:35207	8071831	9	True				
ANR	8071993	Statement	pca_neg_ok	1198:41:35209:35218	8071831	10	True				
ANR	8071994	Statement	|	1198:52:35220:35220	8071831	11	True				
ANR	8071995	Statement	pca_big_ignore	1198:54:35222:35235	8071831	12	True				
ANR	8071996	Statement	)	1198:68:35236:35236	8071831	13	True				
ANR	8071997	Statement	","	1199:5:35243:35243	8071831	23	True				
ANR	8071998	CompoundStatement		46:7:1557:1557	8071831	24					
ANR	8071999	Statement	'l'	1200:8:35255:35257	8071831	0	True				
ANR	8072000	Statement	","	1200:11:35258:35258	8071831	1	True				
ANR	8072001	Statement	'L'	1200:13:35260:35262	8071831	2	True				
ANR	8072002	Statement	","	1200:16:35263:35263	8071831	3	True				
ANR	8072003	Statement	PCL_COMMAND	1201:12:35277:35287	8071831	4	True				
ANR	8072004	Statement	(	1201:23:35288:35288	8071831	5	True				
ANR	8072005	Statement	"""Perforation Skip"""	1201:24:35289:35306	8071831	6	True				
ANR	8072006	Statement	","	1201:42:35307:35307	8071831	7	True				
ANR	8072007	Statement	set_perforation_skip	1202:24:35333:35352	8071831	8	True				
ANR	8072008	Statement	","	1202:44:35353:35353	8071831	9	True				
ANR	8072009	Statement	pca_neg_ok	1202:46:35355:35364	8071831	10	True				
ANR	8072010	Statement	|	1202:57:35366:35366	8071831	11	True				
ANR	8072011	Statement	pca_big_ignore	1202:59:35368:35381	8071831	12	True				
ANR	8072012	Statement	)	1202:73:35382:35382	8071831	13	True				
ANR	8072013	Statement	","	1203:5:35389:35389	8071831	25	True				
ANR	8072014	CompoundStatement		50:7:1703:1703	8071831	26					
ANR	8072015	Statement	'l'	1204:8:35401:35403	8071831	0	True				
ANR	8072016	Statement	","	1204:11:35404:35404	8071831	1	True				
ANR	8072017	Statement	'M'	1204:13:35406:35408	8071831	2	True				
ANR	8072018	Statement	","	1204:16:35409:35409	8071831	3	True				
ANR	8072019	Statement	PCL_COMMAND	1205:12:35423:35433	8071831	4	True				
ANR	8072020	Statement	(	1205:23:35434:35434	8071831	5	True				
ANR	8072021	Statement	"""Media Type"""	1205:24:35435:35446	8071831	6	True				
ANR	8072022	Statement	","	1205:36:35447:35447	8071831	7	True				
ANR	8072023	Statement	pcl_media_type	1206:24:35473:35486	8071831	8	True				
ANR	8072024	Statement	","	1206:38:35487:35487	8071831	9	True				
ANR	8072025	Statement	pca_neg_ok	1206:40:35489:35498	8071831	10	True				
ANR	8072026	Statement	|	1206:51:35500:35500	8071831	11	True				
ANR	8072027	Statement	pca_big_ignore	1206:53:35502:35515	8071831	12	True				
ANR	8072028	Statement	)	1206:67:35516:35516	8071831	13	True				
ANR	8072029	Statement	","	1207:5:35523:35523	8071831	27	True				
ANR	8072030	CompoundStatement		54:7:1837:1837	8071831	28					
ANR	8072031	Statement	'a'	1208:8:35535:35537	8071831	0	True				
ANR	8072032	Statement	","	1208:11:35538:35538	8071831	1	True				
ANR	8072033	Statement	'W'	1208:13:35540:35542	8071831	2	True				
ANR	8072034	Statement	","	1208:16:35543:35543	8071831	3	True				
ANR	8072035	Statement	PCL_COMMAND	1208:18:35545:35555	8071831	4	True				
ANR	8072036	Statement	(	1208:29:35556:35556	8071831	5	True				
ANR	8072037	Statement	"""Set Logical Page"""	1208:30:35557:35574	8071831	6	True				
ANR	8072038	Statement	","	1208:48:35575:35575	8071831	7	True				
ANR	8072039	Statement	set_logical_page	1208:50:35577:35592	8071831	8	True				
ANR	8072040	Statement	","	1208:66:35593:35593	8071831	9	True				
ANR	8072041	Statement	pca_bytes	1208:68:35595:35603	8071831	10	True				
ANR	8072042	Statement	)	1208:77:35604:35604	8071831	11	True				
ANR	8072043	Statement	","	1209:5:35611:35611	8071831	29	True				
ANR	8072044	Statement	END_CLASS	1209:7:35613:35621	8071831	30	True				
ANR	8072045	Statement	DEFINE_CLASS	1209:17:35623:35634	8071831	31	True				
ANR	8072046	Statement	(	1209:29:35635:35635	8071831	32	True				
ANR	8072047	Statement	'&'	1209:30:35636:35638	8071831	33	True				
ANR	8072048	Statement	)	1209:33:35639:35639	8071831	34	True				
ANR	8072049	CompoundStatement		56:35:1953:1953	8071831	35					
ANR	8072050	Statement	'f'	1210:8:35651:35653	8071831	0	True				
ANR	8072051	Statement	","	1210:11:35654:35654	8071831	1	True				
ANR	8072052	Statement	'I'	1210:13:35656:35658	8071831	2	True				
ANR	8072053	Statement	","	1210:16:35659:35659	8071831	3	True				
ANR	8072054	Statement	PCL_COMMAND	1211:12:35673:35683	8071831	4	True				
ANR	8072055	Statement	(	1211:23:35684:35684	8071831	5	True				
ANR	8072056	Statement	"""Set Custom Paper Width"""	1211:24:35685:35708	8071831	6	True				
ANR	8072057	Statement	","	1211:48:35709:35709	8071831	7	True				
ANR	8072058	Statement	set_paper_width	1212:24:35735:35749	8071831	8	True				
ANR	8072059	Statement	","	1212:39:35750:35750	8071831	9	True				
ANR	8072060	Statement	pca_neg_ok	1212:41:35752:35761	8071831	10	True				
ANR	8072061	Statement	|	1212:52:35763:35763	8071831	11	True				
ANR	8072062	Statement	pca_big_ignore	1212:54:35765:35778	8071831	12	True				
ANR	8072063	Statement	)	1212:68:35779:35779	8071831	13	True				
ANR	8072064	Statement	","	1213:5:35786:35786	8071831	36	True				
ANR	8072065	CompoundStatement		60:7:2100:2100	8071831	37					
ANR	8072066	Statement	'f'	1214:8:35798:35800	8071831	0	True				
ANR	8072067	Statement	","	1214:11:35801:35801	8071831	1	True				
ANR	8072068	Statement	'J'	1214:13:35803:35805	8071831	2	True				
ANR	8072069	Statement	","	1214:16:35806:35806	8071831	3	True				
ANR	8072070	Statement	PCL_COMMAND	1215:12:35820:35830	8071831	4	True				
ANR	8072071	Statement	(	1215:23:35831:35831	8071831	5	True				
ANR	8072072	Statement	"""Set Custom Paper Length"""	1215:24:35832:35856	8071831	6	True				
ANR	8072073	Statement	","	1215:49:35857:35857	8071831	7	True				
ANR	8072074	Statement	set_paper_length	1216:24:35883:35898	8071831	8	True				
ANR	8072075	Statement	","	1216:40:35899:35899	8071831	9	True				
ANR	8072076	Statement	pca_neg_ok	1216:42:35901:35910	8071831	10	True				
ANR	8072077	Statement	|	1216:53:35912:35912	8071831	11	True				
ANR	8072078	Statement	pca_big_ignore	1216:55:35914:35927	8071831	12	True				
ANR	8072079	Statement	)	1216:69:35928:35928	8071831	13	True				
ANR	8072080	Statement	","	1217:5:35935:35935	8071831	38	True				
ANR	8072081	Statement	END_CLASS	1217:7:35937:35945	8071831	39	True				
ANR	8072082	Statement	DEFINE_ESCAPE	1218:8:35955:35967	8071831	40	True				
ANR	8072083	Statement	(	1218:21:35968:35968	8071831	41	True				
ANR	8072084	Statement	'9'	1218:22:35969:35971	8071831	42	True				
ANR	8072085	Statement	","	1218:25:35972:35972	8071831	43	True				
ANR	8072086	Statement	"""Clear Horizontal Margins"""	1219:22:35996:36021	8071831	44	True				
ANR	8072087	Statement	","	1219:48:36022:36022	8071831	45	True				
ANR	8072088	Statement	clear_horizontal_margins	1219:50:36024:36047	8071831	46	True				
ANR	8072089	Statement	)	1219:74:36048:36048	8071831	47	True				
ANR	8072090	Statement	DEFINE_CLASS_COMMAND_ARGS	1221:8:36059:36083	8071831	48	True				
ANR	8072091	Statement	(	1221:33:36084:36084	8071831	49	True				
ANR	8072092	Statement	'*'	1221:34:36085:36087	8071831	50	True				
ANR	8072093	Statement	","	1221:37:36088:36088	8071831	51	True				
ANR	8072094	Statement	'o'	1222:34:36124:36126	8071831	52	True				
ANR	8072095	Statement	","	1222:37:36127:36127	8071831	53	True				
ANR	8072096	Statement	'Q'	1223:34:36163:36165	8071831	54	True				
ANR	8072097	Statement	","	1223:37:36166:36166	8071831	55	True				
ANR	8072098	Statement	"""Print Quality"""	1224:34:36202:36216	8071831	56	True				
ANR	8072099	Statement	","	1224:49:36217:36217	8071831	57	True				
ANR	8072100	Statement	pcl_print_quality	1225:34:36253:36269	8071831	58	True				
ANR	8072101	Statement	","	1225:51:36270:36270	8071831	59	True				
ANR	8072102	Statement	pca_neg_ok	1226:34:36306:36315	8071831	60	True				
ANR	8072103	Statement	|	1226:45:36317:36317	8071831	61	True				
ANR	8072104	Statement	pca_big_ignore	1226:47:36319:36332	8071831	62	True				
ANR	8072105	Statement	)	1226:61:36333:36333	8071831	63	True				
ANR	8072106	ReturnStatement	return 0 ;	1227:8:36343:36351	8071831	64	True				
ANR	8072107	PrimaryExpression	0		8071831	0					
ANR	8072108	ReturnType	static int		8071831	1					
ANR	8072109	Identifier	pcpage_do_registration		8071831	2					
ANR	8072110	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * pmem"		8071831	3					
ANR	8072111	Parameter	pcl_parser_state_t * pcl_parser_state	1152:23:33602:33638	8071831	0	True				
ANR	8072112	ParameterType	pcl_parser_state_t *		8071831	0					
ANR	8072113	Identifier	pcl_parser_state		8071831	1					
ANR	8072114	Parameter	gs_memory_t * pmem	1152:62:33641:33658	8071831	1	True				
ANR	8072115	ParameterType	gs_memory_t *		8071831	0					
ANR	8072116	Identifier	pmem		8071831	1					
ANR	8072117	CFGEntryNode	ENTRY		8071831		True				
ANR	8072118	CFGExitNode	EXIT		8071831		True				
ANR	8072119	Symbol	pmem		8071831						
ANR	8072120	Symbol	pcl_parser_state		8071831						
ANR	8072121	Function	pcl_get_default_paper	1230:0:36356:38827							
ANR	8072122	FunctionDef	pcl_get_default_paper (pcl_state_t * pcs)		8072121	0					
ANR	8072123	CompoundStatement		1232:0:36416:38827	8072121	0					
ANR	8072124	IdentifierDeclStatement	int i ;	1233:4:36422:36427	8072121	0	True				
ANR	8072125	IdentifierDecl	i		8072121	0					
ANR	8072126	IdentifierDeclType	int		8072121	0					
ANR	8072127	Identifier	i		8072121	1					
ANR	8072128	IdentifierDeclStatement	"pjl_envvar_t * pwidth = pjl_proc_get_envvar ( pcs -> pjls , ""paperwidth"" ) ;"	1234:4:36433:36500	8072121	1	True				
ANR	8072129	IdentifierDecl	"* pwidth = pjl_proc_get_envvar ( pcs -> pjls , ""paperwidth"" )"		8072121	0					
ANR	8072130	IdentifierDeclType	pjl_envvar_t *		8072121	0					
ANR	8072131	Identifier	pwidth		8072121	1					
ANR	8072132	AssignmentExpression	"* pwidth = pjl_proc_get_envvar ( pcs -> pjls , ""paperwidth"" )"		8072121	2		=			
ANR	8072133	Identifier	pwidth		8072121	0					
ANR	8072134	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""paperwidth"" )"		8072121	1					
ANR	8072135	Callee	pjl_proc_get_envvar		8072121	0					
ANR	8072136	Identifier	pjl_proc_get_envvar		8072121	0					
ANR	8072137	ArgumentList	pcs -> pjls		8072121	1					
ANR	8072138	Argument	pcs -> pjls		8072121	0					
ANR	8072139	PtrMemberAccess	pcs -> pjls		8072121	0					
ANR	8072140	Identifier	pcs		8072121	0					
ANR	8072141	Identifier	pjls		8072121	1					
ANR	8072142	Argument	"""paperwidth"""		8072121	1					
ANR	8072143	PrimaryExpression	"""paperwidth"""		8072121	0					
ANR	8072144	IdentifierDeclStatement	"pjl_envvar_t * plength = pjl_proc_get_envvar ( pcs -> pjls , ""paperlength"" ) ;"	1235:4:36506:36575	8072121	2	True				
ANR	8072145	IdentifierDecl	"* plength = pjl_proc_get_envvar ( pcs -> pjls , ""paperlength"" )"		8072121	0					
ANR	8072146	IdentifierDeclType	pjl_envvar_t *		8072121	0					
ANR	8072147	Identifier	plength		8072121	1					
ANR	8072148	AssignmentExpression	"* plength = pjl_proc_get_envvar ( pcs -> pjls , ""paperlength"" )"		8072121	2		=			
ANR	8072149	Identifier	plength		8072121	0					
ANR	8072150	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""paperlength"" )"		8072121	1					
ANR	8072151	Callee	pjl_proc_get_envvar		8072121	0					
ANR	8072152	Identifier	pjl_proc_get_envvar		8072121	0					
ANR	8072153	ArgumentList	pcs -> pjls		8072121	1					
ANR	8072154	Argument	pcs -> pjls		8072121	0					
ANR	8072155	PtrMemberAccess	pcs -> pjls		8072121	0					
ANR	8072156	Identifier	pcs		8072121	0					
ANR	8072157	Identifier	pjls		8072121	1					
ANR	8072158	Argument	"""paperlength"""		8072121	1					
ANR	8072159	PrimaryExpression	"""paperlength"""		8072121	0					
ANR	8072160	IdentifierDeclStatement	"pjl_envvar_t * psize = pjl_proc_get_envvar ( pcs -> pjls , ""paper"" ) ;"	1236:4:36581:36642	8072121	3	True				
ANR	8072161	IdentifierDecl	"* psize = pjl_proc_get_envvar ( pcs -> pjls , ""paper"" )"		8072121	0					
ANR	8072162	IdentifierDeclType	pjl_envvar_t *		8072121	0					
ANR	8072163	Identifier	psize		8072121	1					
ANR	8072164	AssignmentExpression	"* psize = pjl_proc_get_envvar ( pcs -> pjls , ""paper"" )"		8072121	2		=			
ANR	8072165	Identifier	psize		8072121	0					
ANR	8072166	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""paper"" )"		8072121	1					
ANR	8072167	Callee	pjl_proc_get_envvar		8072121	0					
ANR	8072168	Identifier	pjl_proc_get_envvar		8072121	0					
ANR	8072169	ArgumentList	pcs -> pjls		8072121	1					
ANR	8072170	Argument	pcs -> pjls		8072121	0					
ANR	8072171	PtrMemberAccess	pcs -> pjls		8072121	0					
ANR	8072172	Identifier	pcs		8072121	0					
ANR	8072173	Identifier	pjls		8072121	1					
ANR	8072174	Argument	"""paper"""		8072121	1					
ANR	8072175	PrimaryExpression	"""paper"""		8072121	0					
ANR	8072176	IfStatement	if ( ! pcs -> ppaper_type_table )		8072121	4					
ANR	8072177	Condition	! pcs -> ppaper_type_table	1239:8:36713:36735	8072121	0	True				
ANR	8072178	UnaryOperationExpression	! pcs -> ppaper_type_table		8072121	0					
ANR	8072179	UnaryOperator	!		8072121	0					
ANR	8072180	PtrMemberAccess	pcs -> ppaper_type_table		8072121	1					
ANR	8072181	Identifier	pcs		8072121	0					
ANR	8072182	Identifier	ppaper_type_table		8072121	1					
ANR	8072183	ExpressionStatement	"pcs -> ppaper_type_table = ( pcl_paper_type_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( paper_types_proto ) , ""Paper Table"" )"	1240:8:36746:36969	8072121	1	True				
ANR	8072184	AssignmentExpression	"pcs -> ppaper_type_table = ( pcl_paper_type_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( paper_types_proto ) , ""Paper Table"" )"		8072121	0		=			
ANR	8072185	PtrMemberAccess	pcs -> ppaper_type_table		8072121	0					
ANR	8072186	Identifier	pcs		8072121	0					
ANR	8072187	Identifier	ppaper_type_table		8072121	1					
ANR	8072188	CastExpression	"( pcl_paper_type_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( paper_types_proto ) , ""Paper Table"" )"		8072121	1					
ANR	8072189	CastTarget	pcl_paper_type_t *		8072121	0					
ANR	8072190	CallExpression	"gs_alloc_bytes ( pcs -> memory , sizeof ( paper_types_proto ) , ""Paper Table"" )"		8072121	1					
ANR	8072191	Callee	gs_alloc_bytes		8072121	0					
ANR	8072192	Identifier	gs_alloc_bytes		8072121	0					
ANR	8072193	ArgumentList	pcs -> memory		8072121	1					
ANR	8072194	Argument	pcs -> memory		8072121	0					
ANR	8072195	PtrMemberAccess	pcs -> memory		8072121	0					
ANR	8072196	Identifier	pcs		8072121	0					
ANR	8072197	Identifier	memory		8072121	1					
ANR	8072198	Argument	sizeof ( paper_types_proto )		8072121	1					
ANR	8072199	SizeofExpression	sizeof ( paper_types_proto )		8072121	0					
ANR	8072200	Sizeof	sizeof		8072121	0					
ANR	8072201	SizeofOperand	paper_types_proto		8072121	1					
ANR	8072202	Argument	"""Paper Table"""		8072121	2					
ANR	8072203	PrimaryExpression	"""Paper Table"""		8072121	0					
ANR	8072204	IfStatement	if ( ! pcs -> ppaper_type_table )		8072121	5					
ANR	8072205	Condition	! pcs -> ppaper_type_table	1245:8:36980:37002	8072121	0	True				
ANR	8072206	UnaryOperationExpression	! pcs -> ppaper_type_table		8072121	0					
ANR	8072207	UnaryOperator	!		8072121	0					
ANR	8072208	PtrMemberAccess	pcs -> ppaper_type_table		8072121	1					
ANR	8072209	Identifier	pcs		8072121	0					
ANR	8072210	Identifier	ppaper_type_table		8072121	1					
ANR	8072211	ReturnStatement	return NULL ;	1247:8:37045:37056	8072121	1	True				
ANR	8072212	Identifier	NULL		8072121	0					
ANR	8072213	ExpressionStatement	"memcpy ( pcs -> ppaper_type_table , paper_types_proto , sizeof ( paper_types_proto ) )"	1250:4:37145:37232	8072121	6	True				
ANR	8072214	CallExpression	"memcpy ( pcs -> ppaper_type_table , paper_types_proto , sizeof ( paper_types_proto ) )"		8072121	0					
ANR	8072215	Callee	memcpy		8072121	0					
ANR	8072216	Identifier	memcpy		8072121	0					
ANR	8072217	ArgumentList	pcs -> ppaper_type_table		8072121	1					
ANR	8072218	Argument	pcs -> ppaper_type_table		8072121	0					
ANR	8072219	PtrMemberAccess	pcs -> ppaper_type_table		8072121	0					
ANR	8072220	Identifier	pcs		8072121	0					
ANR	8072221	Identifier	ppaper_type_table		8072121	1					
ANR	8072222	Argument	paper_types_proto		8072121	1					
ANR	8072223	Identifier	paper_types_proto		8072121	0					
ANR	8072224	Argument	sizeof ( paper_types_proto )		8072121	2					
ANR	8072225	SizeofExpression	sizeof ( paper_types_proto )		8072121	0					
ANR	8072226	Sizeof	sizeof		8072121	0					
ANR	8072227	SizeofOperand	paper_types_proto		8072121	1					
ANR	8072228	ExpressionStatement	pcs -> wide_a4 = false	1253:4:37239:37259	8072121	7	True				
ANR	8072229	AssignmentExpression	pcs -> wide_a4 = false		8072121	0		=			
ANR	8072230	PtrMemberAccess	pcs -> wide_a4		8072121	0					
ANR	8072231	Identifier	pcs		8072121	0					
ANR	8072232	Identifier	wide_a4		8072121	1					
ANR	8072233	Identifier	false		8072121	1					
ANR	8072234	IfStatement	if ( pcs -> page_set_on_command_line || ( * pwidth && * plength ) )		8072121	8					
ANR	8072235	Condition	pcs -> page_set_on_command_line || ( * pwidth && * plength )	1254:8:37269:37322	8072121	0	True				
ANR	8072236	OrExpression	pcs -> page_set_on_command_line || ( * pwidth && * plength )		8072121	0		||			
ANR	8072237	PtrMemberAccess	pcs -> page_set_on_command_line		8072121	0					
ANR	8072238	Identifier	pcs		8072121	0					
ANR	8072239	Identifier	page_set_on_command_line		8072121	1					
ANR	8072240	AndExpression	* pwidth && * plength		8072121	1		&&			
ANR	8072241	UnaryOperationExpression	* pwidth		8072121	0					
ANR	8072242	UnaryOperator	*		8072121	0					
ANR	8072243	Identifier	pwidth		8072121	1					
ANR	8072244	UnaryOperationExpression	* plength		8072121	1					
ANR	8072245	UnaryOperator	*		8072121	0					
ANR	8072246	Identifier	plength		8072121	1					
ANR	8072247	CompoundStatement		23:64:908:908	8072121	1					
ANR	8072248	ForStatement	for ( i = 0 ; i < pcl_paper_type_count ; i ++ )		8072121	0					
ANR	8072249	ForInit	i = 0 ;	1255:13:37340:37345	8072121	0	True				
ANR	8072250	AssignmentExpression	i = 0		8072121	0		=			
ANR	8072251	Identifier	i		8072121	0					
ANR	8072252	PrimaryExpression	0		8072121	1					
ANR	8072253	Condition	i < pcl_paper_type_count	1255:20:37347:37370	8072121	1	True				
ANR	8072254	RelationalExpression	i < pcl_paper_type_count		8072121	0		<			
ANR	8072255	Identifier	i		8072121	0					
ANR	8072256	Identifier	pcl_paper_type_count		8072121	1					
ANR	8072257	PostIncDecOperationExpression	i ++	1255:46:37373:37375	8072121	2	True				
ANR	8072258	Identifier	i		8072121	0					
ANR	8072259	IncDec	++		8072121	1					
ANR	8072260	IfStatement	"if ( ! pjl_proc_compare ( pcs -> pjls , ""custom"" , PAPER_SIZES [ i ] . pname ) )"		8072121	3					
ANR	8072261	Condition	"! pjl_proc_compare ( pcs -> pjls , ""custom"" , PAPER_SIZES [ i ] . pname )"	1256:16:37394:37453	8072121	0	True				
ANR	8072262	UnaryOperationExpression	"! pjl_proc_compare ( pcs -> pjls , ""custom"" , PAPER_SIZES [ i ] . pname )"		8072121	0					
ANR	8072263	UnaryOperator	!		8072121	0					
ANR	8072264	CallExpression	"pjl_proc_compare ( pcs -> pjls , ""custom"" , PAPER_SIZES [ i ] . pname )"		8072121	1					
ANR	8072265	Callee	pjl_proc_compare		8072121	0					
ANR	8072266	Identifier	pjl_proc_compare		8072121	0					
ANR	8072267	ArgumentList	pcs -> pjls		8072121	1					
ANR	8072268	Argument	pcs -> pjls		8072121	0					
ANR	8072269	PtrMemberAccess	pcs -> pjls		8072121	0					
ANR	8072270	Identifier	pcs		8072121	0					
ANR	8072271	Identifier	pjls		8072121	1					
ANR	8072272	Argument	"""custom"""		8072121	1					
ANR	8072273	PrimaryExpression	"""custom"""		8072121	0					
ANR	8072274	Argument	PAPER_SIZES [ i ] . pname		8072121	2					
ANR	8072275	MemberAccess	PAPER_SIZES [ i ] . pname		8072121	0					
ANR	8072276	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072277	Identifier	PAPER_SIZES		8072121	0					
ANR	8072278	Identifier	i		8072121	1					
ANR	8072279	Identifier	pname		8072121	1					
ANR	8072280	CompoundStatement		25:78:1039:1039	8072121	1					
ANR	8072281	IfStatement	if ( pcs -> page_set_on_command_line )		8072121	0					
ANR	8072282	Condition	pcs -> page_set_on_command_line	1257:20:37478:37506	8072121	0	True				
ANR	8072283	PtrMemberAccess	pcs -> page_set_on_command_line		8072121	0					
ANR	8072284	Identifier	pcs		8072121	0					
ANR	8072285	Identifier	page_set_on_command_line		8072121	1					
ANR	8072286	CompoundStatement		26:51:1092:1092	8072121	1					
ANR	8072287	ExpressionStatement	PAPER_SIZES [ i ] . psize . width = ( coord ) ( gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ] * 100 )	1258:20:37531:37639	8072121	0	True				
ANR	8072288	AssignmentExpression	PAPER_SIZES [ i ] . psize . width = ( coord ) ( gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ] * 100 )		8072121	0		=			
ANR	8072289	MemberAccess	PAPER_SIZES [ i ] . psize . width		8072121	0					
ANR	8072290	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	0					
ANR	8072291	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072292	Identifier	PAPER_SIZES		8072121	0					
ANR	8072293	Identifier	i		8072121	1					
ANR	8072294	Identifier	psize		8072121	1					
ANR	8072295	Identifier	width		8072121	1					
ANR	8072296	CastExpression	( coord ) ( gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ] * 100 )		8072121	1					
ANR	8072297	CastTarget	coord		8072121	0					
ANR	8072298	MultiplicativeExpression	gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ] * 100		8072121	1		*			
ANR	8072299	ArrayIndexing	gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 0 ]		8072121	0					
ANR	8072300	PtrMemberAccess	gs_currentdevice ( pcs -> pgs ) -> MediaSize		8072121	0					
ANR	8072301	CallExpression	gs_currentdevice ( pcs -> pgs )		8072121	0					
ANR	8072302	Callee	gs_currentdevice		8072121	0					
ANR	8072303	Identifier	gs_currentdevice		8072121	0					
ANR	8072304	ArgumentList	pcs -> pgs		8072121	1					
ANR	8072305	Argument	pcs -> pgs		8072121	0					
ANR	8072306	PtrMemberAccess	pcs -> pgs		8072121	0					
ANR	8072307	Identifier	pcs		8072121	0					
ANR	8072308	Identifier	pgs		8072121	1					
ANR	8072309	Identifier	MediaSize		8072121	1					
ANR	8072310	PrimaryExpression	0		8072121	1					
ANR	8072311	PrimaryExpression	100		8072121	1					
ANR	8072312	ExpressionStatement	PAPER_SIZES [ i ] . psize . height = ( coord ) ( gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ] * 100 )	1260:20:37661:37770	8072121	1	True				
ANR	8072313	AssignmentExpression	PAPER_SIZES [ i ] . psize . height = ( coord ) ( gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ] * 100 )		8072121	0		=			
ANR	8072314	MemberAccess	PAPER_SIZES [ i ] . psize . height		8072121	0					
ANR	8072315	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	0					
ANR	8072316	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072317	Identifier	PAPER_SIZES		8072121	0					
ANR	8072318	Identifier	i		8072121	1					
ANR	8072319	Identifier	psize		8072121	1					
ANR	8072320	Identifier	height		8072121	1					
ANR	8072321	CastExpression	( coord ) ( gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ] * 100 )		8072121	1					
ANR	8072322	CastTarget	coord		8072121	0					
ANR	8072323	MultiplicativeExpression	gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ] * 100		8072121	1		*			
ANR	8072324	ArrayIndexing	gs_currentdevice ( pcs -> pgs ) -> MediaSize [ 1 ]		8072121	0					
ANR	8072325	PtrMemberAccess	gs_currentdevice ( pcs -> pgs ) -> MediaSize		8072121	0					
ANR	8072326	CallExpression	gs_currentdevice ( pcs -> pgs )		8072121	0					
ANR	8072327	Callee	gs_currentdevice		8072121	0					
ANR	8072328	Identifier	gs_currentdevice		8072121	0					
ANR	8072329	ArgumentList	pcs -> pgs		8072121	1					
ANR	8072330	Argument	pcs -> pgs		8072121	0					
ANR	8072331	PtrMemberAccess	pcs -> pgs		8072121	0					
ANR	8072332	Identifier	pcs		8072121	0					
ANR	8072333	Identifier	pgs		8072121	1					
ANR	8072334	Identifier	MediaSize		8072121	1					
ANR	8072335	PrimaryExpression	1		8072121	1					
ANR	8072336	PrimaryExpression	100		8072121	1					
ANR	8072337	ElseStatement	else		8072121	0					
ANR	8072338	CompoundStatement		31:23:1378:1378	8072121	0					
ANR	8072339	ExpressionStatement	PAPER_SIZES [ i ] . psize . width = atol ( pwidth ) * 10L	1263:20:37817:37864	8072121	0	True				
ANR	8072340	AssignmentExpression	PAPER_SIZES [ i ] . psize . width = atol ( pwidth ) * 10L		8072121	0		=			
ANR	8072341	MemberAccess	PAPER_SIZES [ i ] . psize . width		8072121	0					
ANR	8072342	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	0					
ANR	8072343	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072344	Identifier	PAPER_SIZES		8072121	0					
ANR	8072345	Identifier	i		8072121	1					
ANR	8072346	Identifier	psize		8072121	1					
ANR	8072347	Identifier	width		8072121	1					
ANR	8072348	MultiplicativeExpression	atol ( pwidth ) * 10L		8072121	1		*			
ANR	8072349	CallExpression	atol ( pwidth )		8072121	0					
ANR	8072350	Callee	atol		8072121	0					
ANR	8072351	Identifier	atol		8072121	0					
ANR	8072352	ArgumentList	pwidth		8072121	1					
ANR	8072353	Argument	pwidth		8072121	0					
ANR	8072354	Identifier	pwidth		8072121	0					
ANR	8072355	PrimaryExpression	10L		8072121	1					
ANR	8072356	ExpressionStatement	PAPER_SIZES [ i ] . psize . height = atol ( plength ) * 10L	1264:20:37886:37935	8072121	1	True				
ANR	8072357	AssignmentExpression	PAPER_SIZES [ i ] . psize . height = atol ( plength ) * 10L		8072121	0		=			
ANR	8072358	MemberAccess	PAPER_SIZES [ i ] . psize . height		8072121	0					
ANR	8072359	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	0					
ANR	8072360	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072361	Identifier	PAPER_SIZES		8072121	0					
ANR	8072362	Identifier	i		8072121	1					
ANR	8072363	Identifier	psize		8072121	1					
ANR	8072364	Identifier	height		8072121	1					
ANR	8072365	MultiplicativeExpression	atol ( plength ) * 10L		8072121	1		*			
ANR	8072366	CallExpression	atol ( plength )		8072121	0					
ANR	8072367	Callee	atol		8072121	0					
ANR	8072368	Identifier	atol		8072121	0					
ANR	8072369	ArgumentList	plength		8072121	1					
ANR	8072370	Argument	plength		8072121	0					
ANR	8072371	Identifier	plength		8072121	0					
ANR	8072372	PrimaryExpression	10L		8072121	1					
ANR	8072373	ExpressionStatement	PAPER_SIZES [ i ] . psize . offset_portrait = 75 * 24L	1269:16:38131:38178	8072121	1	True				
ANR	8072374	AssignmentExpression	PAPER_SIZES [ i ] . psize . offset_portrait = 75 * 24L		8072121	0		=			
ANR	8072375	MemberAccess	PAPER_SIZES [ i ] . psize . offset_portrait		8072121	0					
ANR	8072376	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	0					
ANR	8072377	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072378	Identifier	PAPER_SIZES		8072121	0					
ANR	8072379	Identifier	i		8072121	1					
ANR	8072380	Identifier	psize		8072121	1					
ANR	8072381	Identifier	offset_portrait		8072121	1					
ANR	8072382	MultiplicativeExpression	75 * 24L		8072121	1		*			
ANR	8072383	PrimaryExpression	75		8072121	0					
ANR	8072384	PrimaryExpression	24L		8072121	1					
ANR	8072385	ExpressionStatement	PAPER_SIZES [ i ] . psize . offset_landscape = 60 * 24L	1270:16:38196:38244	8072121	2	True				
ANR	8072386	AssignmentExpression	PAPER_SIZES [ i ] . psize . offset_landscape = 60 * 24L		8072121	0		=			
ANR	8072387	MemberAccess	PAPER_SIZES [ i ] . psize . offset_landscape		8072121	0					
ANR	8072388	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	0					
ANR	8072389	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072390	Identifier	PAPER_SIZES		8072121	0					
ANR	8072391	Identifier	i		8072121	1					
ANR	8072392	Identifier	psize		8072121	1					
ANR	8072393	Identifier	offset_landscape		8072121	1					
ANR	8072394	MultiplicativeExpression	60 * 24L		8072121	1		*			
ANR	8072395	PrimaryExpression	60		8072121	0					
ANR	8072396	PrimaryExpression	24L		8072121	1					
ANR	8072397	ReturnStatement	return & ( PAPER_SIZES [ i ] . psize ) ;	1271:16:38262:38292	8072121	3	True				
ANR	8072398	UnaryOperationExpression	& ( PAPER_SIZES [ i ] . psize )		8072121	0					
ANR	8072399	UnaryOperator	&		8072121	0					
ANR	8072400	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	1					
ANR	8072401	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072402	Identifier	PAPER_SIZES		8072121	0					
ANR	8072403	Identifier	i		8072121	1					
ANR	8072404	Identifier	psize		8072121	1					
ANR	8072405	ForStatement	for ( i = 0 ; i < pcl_paper_type_count ; i ++ )		8072121	9					
ANR	8072406	ForInit	i = 0 ;	1275:9:38324:38329	8072121	0	True				
ANR	8072407	AssignmentExpression	i = 0		8072121	0		=			
ANR	8072408	Identifier	i		8072121	0					
ANR	8072409	PrimaryExpression	0		8072121	1					
ANR	8072410	Condition	i < pcl_paper_type_count	1275:16:38331:38354	8072121	1	True				
ANR	8072411	RelationalExpression	i < pcl_paper_type_count		8072121	0		<			
ANR	8072412	Identifier	i		8072121	0					
ANR	8072413	Identifier	pcl_paper_type_count		8072121	1					
ANR	8072414	PostIncDecOperationExpression	i ++	1275:42:38357:38359	8072121	2	True				
ANR	8072415	Identifier	i		8072121	0					
ANR	8072416	IncDec	++		8072121	1					
ANR	8072417	IfStatement	"if ( ! pjl_proc_compare ( pcs -> pjls , psize , PAPER_SIZES [ i ] . pname ) )"		8072121	3					
ANR	8072418	Condition	"! pjl_proc_compare ( pcs -> pjls , psize , PAPER_SIZES [ i ] . pname )"	1276:12:38374:38430	8072121	0	True				
ANR	8072419	UnaryOperationExpression	"! pjl_proc_compare ( pcs -> pjls , psize , PAPER_SIZES [ i ] . pname )"		8072121	0					
ANR	8072420	UnaryOperator	!		8072121	0					
ANR	8072421	CallExpression	"pjl_proc_compare ( pcs -> pjls , psize , PAPER_SIZES [ i ] . pname )"		8072121	1					
ANR	8072422	Callee	pjl_proc_compare		8072121	0					
ANR	8072423	Identifier	pjl_proc_compare		8072121	0					
ANR	8072424	ArgumentList	pcs -> pjls		8072121	1					
ANR	8072425	Argument	pcs -> pjls		8072121	0					
ANR	8072426	PtrMemberAccess	pcs -> pjls		8072121	0					
ANR	8072427	Identifier	pcs		8072121	0					
ANR	8072428	Identifier	pjls		8072121	1					
ANR	8072429	Argument	psize		8072121	1					
ANR	8072430	Identifier	psize		8072121	0					
ANR	8072431	Argument	PAPER_SIZES [ i ] . pname		8072121	2					
ANR	8072432	MemberAccess	PAPER_SIZES [ i ] . pname		8072121	0					
ANR	8072433	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072434	Identifier	PAPER_SIZES		8072121	0					
ANR	8072435	Identifier	i		8072121	1					
ANR	8072436	Identifier	pname		8072121	1					
ANR	8072437	CompoundStatement		45:71:2016:2016	8072121	1					
ANR	8072438	IfStatement	"if ( ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""widea4"" ) , ""YES"" ) )"		8072121	0					
ANR	8072439	Condition	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""widea4"" ) , ""YES"" )"	1278:16:38511:38604	8072121	0	True				
ANR	8072440	UnaryOperationExpression	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""widea4"" ) , ""YES"" )"		8072121	0					
ANR	8072441	UnaryOperator	!		8072121	0					
ANR	8072442	CallExpression	"pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""widea4"" ) , ""YES"" )"		8072121	1					
ANR	8072443	Callee	pjl_proc_compare		8072121	0					
ANR	8072444	Identifier	pjl_proc_compare		8072121	0					
ANR	8072445	ArgumentList	pcs -> pjls		8072121	1					
ANR	8072446	Argument	pcs -> pjls		8072121	0					
ANR	8072447	PtrMemberAccess	pcs -> pjls		8072121	0					
ANR	8072448	Identifier	pcs		8072121	0					
ANR	8072449	Identifier	pjls		8072121	1					
ANR	8072450	Argument	"pjl_proc_get_envvar ( pcs -> pjls , ""widea4"" )"		8072121	1					
ANR	8072451	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""widea4"" )"		8072121	0					
ANR	8072452	Callee	pjl_proc_get_envvar		8072121	0					
ANR	8072453	Identifier	pjl_proc_get_envvar		8072121	0					
ANR	8072454	ArgumentList	pcs -> pjls		8072121	1					
ANR	8072455	Argument	pcs -> pjls		8072121	0					
ANR	8072456	PtrMemberAccess	pcs -> pjls		8072121	0					
ANR	8072457	Identifier	pcs		8072121	0					
ANR	8072458	Identifier	pjls		8072121	1					
ANR	8072459	Argument	"""widea4"""		8072121	1					
ANR	8072460	PrimaryExpression	"""widea4"""		8072121	0					
ANR	8072461	Argument	"""YES"""		8072121	2					
ANR	8072462	PrimaryExpression	"""YES"""		8072121	0					
ANR	8072463	ExpressionStatement	pcs -> wide_a4 = true	1280:16:38623:38642	8072121	1	True				
ANR	8072464	AssignmentExpression	pcs -> wide_a4 = true		8072121	0		=			
ANR	8072465	PtrMemberAccess	pcs -> wide_a4		8072121	0					
ANR	8072466	Identifier	pcs		8072121	0					
ANR	8072467	Identifier	wide_a4		8072121	1					
ANR	8072468	Identifier	true		8072121	1					
ANR	8072469	ReturnStatement	return & ( PAPER_SIZES [ i ] . psize ) ;	1281:12:38656:38686	8072121	1	True				
ANR	8072470	UnaryOperationExpression	& ( PAPER_SIZES [ i ] . psize )		8072121	0					
ANR	8072471	UnaryOperator	&		8072121	0					
ANR	8072472	MemberAccess	PAPER_SIZES [ i ] . psize		8072121	1					
ANR	8072473	ArrayIndexing	PAPER_SIZES [ i ]		8072121	0					
ANR	8072474	Identifier	PAPER_SIZES		8072121	0					
ANR	8072475	Identifier	i		8072121	1					
ANR	8072476	Identifier	psize		8072121	1					
ANR	8072477	ExpressionStatement	"dmprintf ( pcs -> memory , ""system does not support requested paper setting\\n"" )"	1283:4:38702:38789	8072121	10	True				
ANR	8072478	CallExpression	"dmprintf ( pcs -> memory , ""system does not support requested paper setting\\n"" )"		8072121	0					
ANR	8072479	Callee	dmprintf		8072121	0					
ANR	8072480	Identifier	dmprintf		8072121	0					
ANR	8072481	ArgumentList	pcs -> memory		8072121	1					
ANR	8072482	Argument	pcs -> memory		8072121	0					
ANR	8072483	PtrMemberAccess	pcs -> memory		8072121	0					
ANR	8072484	Identifier	pcs		8072121	0					
ANR	8072485	Identifier	memory		8072121	1					
ANR	8072486	Argument	"""system does not support requested paper setting\\n"""		8072121	1					
ANR	8072487	PrimaryExpression	"""system does not support requested paper setting\\n"""		8072121	0					
ANR	8072488	ReturnStatement	return & ( PAPER_SIZES [ 1 ] . psize ) ;	1285:4:38795:38825	8072121	11	True				
ANR	8072489	UnaryOperationExpression	& ( PAPER_SIZES [ 1 ] . psize )		8072121	0					
ANR	8072490	UnaryOperator	&		8072121	0					
ANR	8072491	MemberAccess	PAPER_SIZES [ 1 ] . psize		8072121	1					
ANR	8072492	ArrayIndexing	PAPER_SIZES [ 1 ]		8072121	0					
ANR	8072493	Identifier	PAPER_SIZES		8072121	0					
ANR	8072494	PrimaryExpression	1		8072121	1					
ANR	8072495	Identifier	psize		8072121	1					
ANR	8072496	ReturnType	pcl_paper_size_t *		8072121	1					
ANR	8072497	Identifier	pcl_get_default_paper		8072121	2					
ANR	8072498	ParameterList	pcl_state_t * pcs		8072121	3					
ANR	8072499	Parameter	pcl_state_t * pcs	1231:22:36397:36413	8072121	0	True				
ANR	8072500	ParameterType	pcl_state_t *		8072121	0					
ANR	8072501	Identifier	pcs		8072121	1					
ANR	8072502	CFGEntryNode	ENTRY		8072121		True				
ANR	8072503	CFGExitNode	EXIT		8072121		True				
ANR	8072504	Symbol	pcs -> ppaper_type_table		8072121						
ANR	8072505	Symbol	pcs -> pjls		8072121						
ANR	8072506	Symbol	* plength		8072121						
ANR	8072507	Symbol	gs_currentdevice		8072121						
ANR	8072508	Symbol	pwidth		8072121						
ANR	8072509	Symbol	* pcs		8072121						
ANR	8072510	Symbol	paper_types_proto		8072121						
ANR	8072511	Symbol	PAPER_SIZES [ i ] . psize		8072121						
ANR	8072512	Symbol	& PAPER_SIZES [ 1 ] . psize		8072121						
ANR	8072513	Symbol	psize		8072121						
ANR	8072514	Symbol	* gs_currentdevice		8072121						
ANR	8072515	Symbol	* * gs_currentdevice		8072121						
ANR	8072516	Symbol	* gs_currentdevice ( pcs -> pgs ) -> MediaSize		8072121						
ANR	8072517	Symbol	pjl_proc_compare		8072121						
ANR	8072518	Symbol	PAPER_SIZES [ i ] . psize . width		8072121						
ANR	8072519	Symbol	* pwidth		8072121						
ANR	8072520	Symbol	pcs -> memory		8072121						
ANR	8072521	Symbol	pjl_proc_get_envvar		8072121						
ANR	8072522	Symbol	* PAPER_SIZES		8072121						
ANR	8072523	Symbol	plength		8072121						
ANR	8072524	Symbol	pcs -> page_set_on_command_line		8072121						
ANR	8072525	Symbol	PAPER_SIZES		8072121						
ANR	8072526	Symbol	pcs		8072121						
ANR	8072527	Symbol	& PAPER_SIZES [ i ] . psize		8072121						
ANR	8072528	Symbol	gs_alloc_bytes		8072121						
ANR	8072529	Symbol	NULL		8072121						
ANR	8072530	Symbol	PAPER_SIZES [ i ] . pname		8072121						
ANR	8072531	Symbol	pcs -> pgs		8072121						
ANR	8072532	Symbol	false		8072121						
ANR	8072533	Symbol	PAPER_SIZES [ i ] . psize . offset_portrait		8072121						
ANR	8072534	Symbol	i		8072121						
ANR	8072535	Symbol	pcl_paper_type_count		8072121						
ANR	8072536	Symbol	pcs -> wide_a4		8072121						
ANR	8072537	Symbol	PAPER_SIZES [ i ] . psize . offset_landscape		8072121						
ANR	8072538	Symbol	* i		8072121						
ANR	8072539	Symbol	gs_currentdevice ( pcs -> pgs ) -> MediaSize		8072121						
ANR	8072540	Symbol	PAPER_SIZES [ i ] . psize . height		8072121						
ANR	8072541	Symbol	true		8072121						
ANR	8072542	Symbol	atol		8072121						
ANR	8072543	Function	pcpage_do_reset	1288:0:38830:40756							
ANR	8072544	FunctionDef	"pcpage_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8072543	0					
ANR	8072545	CompoundStatement		1290:0:38899:40756	8072543	0					
ANR	8072546	IdentifierDeclStatement	int code = 0 ;	1291:1:38902:38914	8072543	0	True				
ANR	8072547	IdentifierDecl	code = 0		8072543	0					
ANR	8072548	IdentifierDeclType	int		8072543	0					
ANR	8072549	Identifier	code		8072543	1					
ANR	8072550	AssignmentExpression	code = 0		8072543	2		=			
ANR	8072551	Identifier	code		8072543	0					
ANR	8072552	PrimaryExpression	0		8072543	1					
ANR	8072553	IfStatement	if ( pcs -> end_page != pcl_end_page_top )		8072543	1					
ANR	8072554	Condition	pcs -> end_page != pcl_end_page_top	1294:8:38960:38992	8072543	0	True				
ANR	8072555	EqualityExpression	pcs -> end_page != pcl_end_page_top		8072543	0		!=			
ANR	8072556	PtrMemberAccess	pcs -> end_page		8072543	0					
ANR	8072557	Identifier	pcs		8072543	0					
ANR	8072558	Identifier	end_page		8072543	1					
ANR	8072559	Identifier	pcl_end_page_top		8072543	1					
ANR	8072560	CompoundStatement		5:43:95:95	8072543	1					
ANR	8072561	ExpressionStatement	pcs -> xfm_state . print_dir = 0	1295:8:39005:39033	8072543	0	True				
ANR	8072562	AssignmentExpression	pcs -> xfm_state . print_dir = 0		8072543	0		=			
ANR	8072563	MemberAccess	pcs -> xfm_state . print_dir		8072543	0					
ANR	8072564	PtrMemberAccess	pcs -> xfm_state		8072543	0					
ANR	8072565	Identifier	pcs		8072543	0					
ANR	8072566	Identifier	xfm_state		8072543	1					
ANR	8072567	Identifier	print_dir		8072543	1					
ANR	8072568	PrimaryExpression	0		8072543	1					
ANR	8072569	ExpressionStatement	pcs -> xfm_state . left_offset_cp = 0.0	1296:8:39043:39078	8072543	1	True				
ANR	8072570	AssignmentExpression	pcs -> xfm_state . left_offset_cp = 0.0		8072543	0		=			
ANR	8072571	MemberAccess	pcs -> xfm_state . left_offset_cp		8072543	0					
ANR	8072572	PtrMemberAccess	pcs -> xfm_state		8072543	0					
ANR	8072573	Identifier	pcs		8072543	0					
ANR	8072574	Identifier	xfm_state		8072543	1					
ANR	8072575	Identifier	left_offset_cp		8072543	1					
ANR	8072576	PrimaryExpression	0.0		8072543	1					
ANR	8072577	ExpressionStatement	pcs -> xfm_state . top_offset_cp = 0.0	1297:8:39088:39122	8072543	2	True				
ANR	8072578	AssignmentExpression	pcs -> xfm_state . top_offset_cp = 0.0		8072543	0		=			
ANR	8072579	MemberAccess	pcs -> xfm_state . top_offset_cp		8072543	0					
ANR	8072580	PtrMemberAccess	pcs -> xfm_state		8072543	0					
ANR	8072581	Identifier	pcs		8072543	0					
ANR	8072582	Identifier	xfm_state		8072543	1					
ANR	8072583	Identifier	top_offset_cp		8072543	1					
ANR	8072584	PrimaryExpression	0.0		8072543	1					
ANR	8072585	ExpressionStatement	"update_xfm_state ( pcs , 0 )"	1298:8:39132:39156	8072543	3	True				
ANR	8072586	CallExpression	"update_xfm_state ( pcs , 0 )"		8072543	0					
ANR	8072587	Callee	update_xfm_state		8072543	0					
ANR	8072588	Identifier	update_xfm_state		8072543	0					
ANR	8072589	ArgumentList	pcs		8072543	1					
ANR	8072590	Argument	pcs		8072543	0					
ANR	8072591	Identifier	pcs		8072543	0					
ANR	8072592	Argument	0		8072543	1					
ANR	8072593	PrimaryExpression	0		8072543	0					
ANR	8072594	IfStatement	if ( type & pcl_reset_printer )		8072543	4					
ANR	8072595	Condition	type & pcl_reset_printer	1303:12:39350:39373	8072543	0	True				
ANR	8072596	BitAndExpression	type & pcl_reset_printer		8072543	0		&			
ANR	8072597	Identifier	type		8072543	0					
ANR	8072598	Identifier	pcl_reset_printer		8072543	1					
ANR	8072599	ExpressionStatement	"reset_margins ( pcs , false )"	1304:12:39388:39413	8072543	1	True				
ANR	8072600	CallExpression	"reset_margins ( pcs , false )"		8072543	0					
ANR	8072601	Callee	reset_margins		8072543	0					
ANR	8072602	Identifier	reset_margins		8072543	0					
ANR	8072603	ArgumentList	pcs		8072543	1					
ANR	8072604	Argument	pcs		8072543	0					
ANR	8072605	Identifier	pcs		8072543	0					
ANR	8072606	Argument	false		8072543	1					
ANR	8072607	Identifier	false		8072543	0					
ANR	8072608	ElseStatement	else		8072543	0					
ANR	8072609	ExpressionStatement	"reset_margins ( pcs , true )"	1306:12:39440:39464	8072543	0	True				
ANR	8072610	CallExpression	"reset_margins ( pcs , true )"		8072543	0					
ANR	8072611	Callee	reset_margins		8072543	0					
ANR	8072612	Identifier	reset_margins		8072543	0					
ANR	8072613	ArgumentList	pcs		8072543	1					
ANR	8072614	Argument	pcs		8072543	0					
ANR	8072615	Identifier	pcs		8072543	0					
ANR	8072616	Argument	true		8072543	1					
ANR	8072617	Identifier	true		8072543	0					
ANR	8072618	ReturnStatement	return 0 ;	1307:8:39474:39482	8072543	5	True				
ANR	8072619	PrimaryExpression	0		8072543	0					
ANR	8072620	IfStatement	if ( ( type & ( pcl_reset_initial | pcl_reset_printer ) ) != 0 )		8072543	2					
ANR	8072621	Condition	( type & ( pcl_reset_initial | pcl_reset_printer ) ) != 0	1310:8:39499:39551	8072543	0	True				
ANR	8072622	EqualityExpression	( type & ( pcl_reset_initial | pcl_reset_printer ) ) != 0		8072543	0		!=			
ANR	8072623	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer )		8072543	0		&			
ANR	8072624	Identifier	type		8072543	0					
ANR	8072625	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer		8072543	1		|			
ANR	8072626	Identifier	pcl_reset_initial		8072543	0					
ANR	8072627	Identifier	pcl_reset_printer		8072543	1					
ANR	8072628	PrimaryExpression	0		8072543	1					
ANR	8072629	CompoundStatement		22:8:664:716	8072543	1					
ANR	8072630	IdentifierDeclStatement	pcl_paper_size_t * psize = pcl_get_default_paper ( pcs ) ;	1311:8:39564:39616	8072543	0	True				
ANR	8072631	IdentifierDecl	* psize = pcl_get_default_paper ( pcs )		8072543	0					
ANR	8072632	IdentifierDeclType	pcl_paper_size_t *		8072543	0					
ANR	8072633	Identifier	psize		8072543	1					
ANR	8072634	AssignmentExpression	* psize = pcl_get_default_paper ( pcs )		8072543	2		=			
ANR	8072635	Identifier	psize		8072543	0					
ANR	8072636	CallExpression	pcl_get_default_paper ( pcs )		8072543	1					
ANR	8072637	Callee	pcl_get_default_paper		8072543	0					
ANR	8072638	Identifier	pcl_get_default_paper		8072543	0					
ANR	8072639	ArgumentList	pcs		8072543	1					
ANR	8072640	Argument	pcs		8072543	0					
ANR	8072641	Identifier	pcs		8072543	0					
ANR	8072642	IfStatement	if ( psize == NULL )		8072543	1					
ANR	8072643	Condition	psize == NULL	1312:12:39630:39642	8072543	0	True				
ANR	8072644	EqualityExpression	psize == NULL		8072543	0		==			
ANR	8072645	Identifier	psize		8072543	0					
ANR	8072646	Identifier	NULL		8072543	1					
ANR	8072647	ExpressionStatement	return_error ( gs_error_VMerror )	1312:27:39645:39675	8072543	1	True				
ANR	8072648	CallExpression	return_error ( gs_error_VMerror )		8072543	0					
ANR	8072649	Callee	return_error		8072543	0					
ANR	8072650	Identifier	return_error		8072543	0					
ANR	8072651	ArgumentList	gs_error_VMerror		8072543	1					
ANR	8072652	Argument	gs_error_VMerror		8072543	0					
ANR	8072653	Identifier	gs_error_VMerror		8072543	0					
ANR	8072654	ExpressionStatement	pcs -> paper_source = 0	1314:8:39686:39707	8072543	2	True				
ANR	8072655	AssignmentExpression	pcs -> paper_source = 0		8072543	0		=			
ANR	8072656	PtrMemberAccess	pcs -> paper_source		8072543	0					
ANR	8072657	Identifier	pcs		8072543	0					
ANR	8072658	Identifier	paper_source		8072543	1					
ANR	8072659	PrimaryExpression	0		8072543	1					
ANR	8072660	ExpressionStatement	pcs -> xfm_state . left_offset_cp = 0.0	1315:8:39728:39763	8072543	3	True				
ANR	8072661	AssignmentExpression	pcs -> xfm_state . left_offset_cp = 0.0		8072543	0		=			
ANR	8072662	MemberAccess	pcs -> xfm_state . left_offset_cp		8072543	0					
ANR	8072663	PtrMemberAccess	pcs -> xfm_state		8072543	0					
ANR	8072664	Identifier	pcs		8072543	0					
ANR	8072665	Identifier	xfm_state		8072543	1					
ANR	8072666	Identifier	left_offset_cp		8072543	1					
ANR	8072667	PrimaryExpression	0.0		8072543	1					
ANR	8072668	ExpressionStatement	pcs -> xfm_state . top_offset_cp = 0.0	1316:8:39773:39807	8072543	4	True				
ANR	8072669	AssignmentExpression	pcs -> xfm_state . top_offset_cp = 0.0		8072543	0		=			
ANR	8072670	MemberAccess	pcs -> xfm_state . top_offset_cp		8072543	0					
ANR	8072671	PtrMemberAccess	pcs -> xfm_state		8072543	0					
ANR	8072672	Identifier	pcs		8072543	0					
ANR	8072673	Identifier	xfm_state		8072543	1					
ANR	8072674	Identifier	top_offset_cp		8072543	1					
ANR	8072675	PrimaryExpression	0.0		8072543	1					
ANR	8072676	ExpressionStatement	pcs -> perforation_skip = 1	1317:8:39817:39842	8072543	5	True				
ANR	8072677	AssignmentExpression	pcs -> perforation_skip = 1		8072543	0		=			
ANR	8072678	PtrMemberAccess	pcs -> perforation_skip		8072543	0					
ANR	8072679	Identifier	pcs		8072543	0					
ANR	8072680	Identifier	perforation_skip		8072543	1					
ANR	8072681	PrimaryExpression	1		8072543	1					
ANR	8072682	ExpressionStatement	"code = new_logical_page ( pcs , ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" ) ? 0 : 1 , psize , ( type & pcl_reset_initial ) != 0 , false )"	1318:8:39852:40248	8072543	6	True				
ANR	8072683	AssignmentExpression	"code = new_logical_page ( pcs , ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" ) ? 0 : 1 , psize , ( type & pcl_reset_initial ) != 0 , false )"		8072543	0		=			
ANR	8072684	Identifier	code		8072543	0					
ANR	8072685	CallExpression	"new_logical_page ( pcs , ! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" ) ? 0 : 1 , psize , ( type & pcl_reset_initial ) != 0 , false )"		8072543	1					
ANR	8072686	Callee	new_logical_page		8072543	0					
ANR	8072687	Identifier	new_logical_page		8072543	0					
ANR	8072688	ArgumentList	pcs		8072543	1					
ANR	8072689	Argument	pcs		8072543	0					
ANR	8072690	Identifier	pcs		8072543	0					
ANR	8072691	Argument	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" ) ? 0 : 1"		8072543	1					
ANR	8072692	ConditionalExpression	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" ) ? 0 : 1"		8072543	0					
ANR	8072693	Condition	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" )"		8072543	0					
ANR	8072694	UnaryOperationExpression	"! pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" )"		8072543	0					
ANR	8072695	UnaryOperator	!		8072543	0					
ANR	8072696	CallExpression	"pjl_proc_compare ( pcs -> pjls , pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" ) , ""portrait"" )"		8072543	1					
ANR	8072697	Callee	pjl_proc_compare		8072543	0					
ANR	8072698	Identifier	pjl_proc_compare		8072543	0					
ANR	8072699	ArgumentList	pcs -> pjls		8072543	1					
ANR	8072700	Argument	pcs -> pjls		8072543	0					
ANR	8072701	PtrMemberAccess	pcs -> pjls		8072543	0					
ANR	8072702	Identifier	pcs		8072543	0					
ANR	8072703	Identifier	pjls		8072543	1					
ANR	8072704	Argument	"pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" )"		8072543	1					
ANR	8072705	CallExpression	"pjl_proc_get_envvar ( pcs -> pjls , ""orientation"" )"		8072543	0					
ANR	8072706	Callee	pjl_proc_get_envvar		8072543	0					
ANR	8072707	Identifier	pjl_proc_get_envvar		8072543	0					
ANR	8072708	ArgumentList	pcs -> pjls		8072543	1					
ANR	8072709	Argument	pcs -> pjls		8072543	0					
ANR	8072710	PtrMemberAccess	pcs -> pjls		8072543	0					
ANR	8072711	Identifier	pcs		8072543	0					
ANR	8072712	Identifier	pjls		8072543	1					
ANR	8072713	Argument	"""orientation"""		8072543	1					
ANR	8072714	PrimaryExpression	"""orientation"""		8072543	0					
ANR	8072715	Argument	"""portrait"""		8072543	2					
ANR	8072716	PrimaryExpression	"""portrait"""		8072543	0					
ANR	8072717	PrimaryExpression	0		8072543	1					
ANR	8072718	PrimaryExpression	1		8072543	2					
ANR	8072719	Argument	psize		8072543	2					
ANR	8072720	Identifier	psize		8072543	0					
ANR	8072721	Argument	( type & pcl_reset_initial ) != 0		8072543	3					
ANR	8072722	EqualityExpression	( type & pcl_reset_initial ) != 0		8072543	0		!=			
ANR	8072723	BitAndExpression	type & pcl_reset_initial		8072543	0		&			
ANR	8072724	Identifier	type		8072543	0					
ANR	8072725	Identifier	pcl_reset_initial		8072543	1					
ANR	8072726	PrimaryExpression	0		8072543	1					
ANR	8072727	Argument	false		8072543	4					
ANR	8072728	Identifier	false		8072543	0					
ANR	8072729	IfStatement	if ( code < 0 )		8072543	7					
ANR	8072730	Condition	code < 0	1325:12:40262:40269	8072543	0	True				
ANR	8072731	RelationalExpression	code < 0		8072543	0		<			
ANR	8072732	Identifier	code		8072543	0					
ANR	8072733	PrimaryExpression	0		8072543	1					
ANR	8072734	GotoStatement	goto cleanup ;	1325:22:40272:40284	8072543	1	True				
ANR	8072735	Identifier	cleanup		8072543	0					
ANR	8072736	ElseStatement	else		8072543	0					
ANR	8072737	IfStatement	if ( ( type & pcl_reset_overlay ) != 0 )		8072543	0					
ANR	8072738	Condition	( type & pcl_reset_overlay ) != 0	1326:15:40301:40331	8072543	0	True				
ANR	8072739	EqualityExpression	( type & pcl_reset_overlay ) != 0		8072543	0		!=			
ANR	8072740	BitAndExpression	type & pcl_reset_overlay		8072543	0		&			
ANR	8072741	Identifier	type		8072543	0					
ANR	8072742	Identifier	pcl_reset_overlay		8072543	1					
ANR	8072743	PrimaryExpression	0		8072543	1					
ANR	8072744	CompoundStatement		37:48:1434:1434	8072543	1					
ANR	8072745	ExpressionStatement	pcs -> perforation_skip = 1	1327:8:40344:40369	8072543	0	True				
ANR	8072746	AssignmentExpression	pcs -> perforation_skip = 1		8072543	0		=			
ANR	8072747	PtrMemberAccess	pcs -> perforation_skip		8072543	0					
ANR	8072748	Identifier	pcs		8072543	0					
ANR	8072749	Identifier	perforation_skip		8072543	1					
ANR	8072750	PrimaryExpression	1		8072543	1					
ANR	8072751	ExpressionStatement	"update_xfm_state ( pcs , 0 )"	1328:8:40379:40403	8072543	1	True				
ANR	8072752	CallExpression	"update_xfm_state ( pcs , 0 )"		8072543	0					
ANR	8072753	Callee	update_xfm_state		8072543	0					
ANR	8072754	Identifier	update_xfm_state		8072543	0					
ANR	8072755	ArgumentList	pcs		8072543	1					
ANR	8072756	Argument	pcs		8072543	0					
ANR	8072757	Identifier	pcs		8072543	0					
ANR	8072758	Argument	0		8072543	1					
ANR	8072759	PrimaryExpression	0		8072543	0					
ANR	8072760	ExpressionStatement	"reset_margins ( pcs , false )"	1329:8:40413:40438	8072543	2	True				
ANR	8072761	CallExpression	"reset_margins ( pcs , false )"		8072543	0					
ANR	8072762	Callee	reset_margins		8072543	0					
ANR	8072763	Identifier	reset_margins		8072543	0					
ANR	8072764	ArgumentList	pcs		8072543	1					
ANR	8072765	Argument	pcs		8072543	0					
ANR	8072766	Identifier	pcs		8072543	0					
ANR	8072767	Argument	false		8072543	1					
ANR	8072768	Identifier	false		8072543	0					
ANR	8072769	ExpressionStatement	pcl_xfm_reset_pcl_pat_ref_pt ( pcs )	1330:8:40448:40481	8072543	3	True				
ANR	8072770	CallExpression	pcl_xfm_reset_pcl_pat_ref_pt ( pcs )		8072543	0					
ANR	8072771	Callee	pcl_xfm_reset_pcl_pat_ref_pt		8072543	0					
ANR	8072772	Identifier	pcl_xfm_reset_pcl_pat_ref_pt		8072543	0					
ANR	8072773	ArgumentList	pcs		8072543	1					
ANR	8072774	Argument	pcs		8072543	0					
ANR	8072775	Identifier	pcs		8072543	0					
ANR	8072776	ElseStatement	else		8072543	0					
ANR	8072777	IfStatement	if ( ( type & pcl_reset_permanent ) != 0 )		8072543	0					
ANR	8072778	Condition	( type & pcl_reset_permanent ) != 0	1331:15:40498:40530	8072543	0	True				
ANR	8072779	EqualityExpression	( type & pcl_reset_permanent ) != 0		8072543	0		!=			
ANR	8072780	BitAndExpression	type & pcl_reset_permanent		8072543	0		&			
ANR	8072781	Identifier	type		8072543	0					
ANR	8072782	Identifier	pcl_reset_permanent		8072543	1					
ANR	8072783	PrimaryExpression	0		8072543	1					
ANR	8072784	CompoundStatement		42:50:1633:1633	8072543	1					
ANR	8072785	GotoStatement	goto cleanup ;	1332:8:40543:40555	8072543	0	True				
ANR	8072786	Identifier	cleanup		8072543	0					
ANR	8072787	ReturnStatement	return 0 ;	1334:4:40567:40575	8072543	3	True				
ANR	8072788	PrimaryExpression	0		8072543	0					
ANR	8072789	Label	cleanup :	1336:0:40578:40585	8072543	4	True				
ANR	8072790	Identifier	cleanup		8072543	0					
ANR	8072791	IfStatement	if ( pcs -> ppaper_type_table )		8072543	5					
ANR	8072792	Condition	pcs -> ppaper_type_table	1337:8:40595:40616	8072543	0	True				
ANR	8072793	PtrMemberAccess	pcs -> ppaper_type_table		8072543	0					
ANR	8072794	Identifier	pcs		8072543	0					
ANR	8072795	Identifier	ppaper_type_table		8072543	1					
ANR	8072796	CompoundStatement		48:32:1719:1719	8072543	1					
ANR	8072797	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> ppaper_type_table , ""Paper Table"" )"	1338:8:40629:40695	8072543	0	True				
ANR	8072798	CallExpression	"gs_free_object ( pcs -> memory , pcs -> ppaper_type_table , ""Paper Table"" )"		8072543	0					
ANR	8072799	Callee	gs_free_object		8072543	0					
ANR	8072800	Identifier	gs_free_object		8072543	0					
ANR	8072801	ArgumentList	pcs -> memory		8072543	1					
ANR	8072802	Argument	pcs -> memory		8072543	0					
ANR	8072803	PtrMemberAccess	pcs -> memory		8072543	0					
ANR	8072804	Identifier	pcs		8072543	0					
ANR	8072805	Identifier	memory		8072543	1					
ANR	8072806	Argument	pcs -> ppaper_type_table		8072543	1					
ANR	8072807	PtrMemberAccess	pcs -> ppaper_type_table		8072543	0					
ANR	8072808	Identifier	pcs		8072543	0					
ANR	8072809	Identifier	ppaper_type_table		8072543	1					
ANR	8072810	Argument	"""Paper Table"""		8072543	2					
ANR	8072811	PrimaryExpression	"""Paper Table"""		8072543	0					
ANR	8072812	ExpressionStatement	pcs -> ppaper_type_table = 0	1339:8:40705:40731	8072543	1	True				
ANR	8072813	AssignmentExpression	pcs -> ppaper_type_table = 0		8072543	0		=			
ANR	8072814	PtrMemberAccess	pcs -> ppaper_type_table		8072543	0					
ANR	8072815	Identifier	pcs		8072543	0					
ANR	8072816	Identifier	ppaper_type_table		8072543	1					
ANR	8072817	PrimaryExpression	0		8072543	1					
ANR	8072818	ReturnStatement	return code ;	1341:4:40743:40754	8072543	6	True				
ANR	8072819	Identifier	code		8072543	0					
ANR	8072820	ReturnType	static int		8072543	1					
ANR	8072821	Identifier	pcpage_do_reset		8072543	2					
ANR	8072822	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8072543	3					
ANR	8072823	Parameter	pcl_state_t * pcs	1289:16:38857:38873	8072543	0	True				
ANR	8072824	ParameterType	pcl_state_t *		8072543	0					
ANR	8072825	Identifier	pcs		8072543	1					
ANR	8072826	Parameter	pcl_reset_type_t type	1289:35:38876:38896	8072543	1	True				
ANR	8072827	ParameterType	pcl_reset_type_t		8072543	0					
ANR	8072828	Identifier	type		8072543	1					
ANR	8072829	CFGEntryNode	ENTRY		8072543		True				
ANR	8072830	CFGExitNode	EXIT		8072543		True				
ANR	8072831	Symbol	pcs -> xfm_state . left_offset_cp		8072543						
ANR	8072832	Symbol	pcs -> ppaper_type_table		8072543						
ANR	8072833	Symbol	code		8072543						
ANR	8072834	Symbol	pcs -> pjls		8072543						
ANR	8072835	Symbol	pcl_reset_printer		8072543						
ANR	8072836	Symbol	* pcs		8072543						
ANR	8072837	Symbol	type		8072543						
ANR	8072838	Symbol	pcs -> paper_source		8072543						
ANR	8072839	Symbol	pcs -> xfm_state		8072543						
ANR	8072840	Symbol	pcs -> xfm_state . top_offset_cp		8072543						
ANR	8072841	Symbol	psize		8072543						
ANR	8072842	Symbol	pcl_get_default_paper		8072543						
ANR	8072843	Symbol	pjl_proc_compare		8072543						
ANR	8072844	Symbol	pcs -> memory		8072543						
ANR	8072845	Symbol	pjl_proc_get_envvar		8072543						
ANR	8072846	Symbol	pcl_reset_initial		8072543						
ANR	8072847	Symbol	pcs		8072543						
ANR	8072848	Symbol	NULL		8072543						
ANR	8072849	Symbol	pcl_end_page_top		8072543						
ANR	8072850	Symbol	pcs -> perforation_skip		8072543						
ANR	8072851	Symbol	false		8072543						
ANR	8072852	Symbol	gs_error_VMerror		8072543						
ANR	8072853	Symbol	pcs -> end_page		8072543						
ANR	8072854	Symbol	pcs -> xfm_state . print_dir		8072543						
ANR	8072855	Symbol	true		8072543						
ANR	8072856	Symbol	pcl_reset_overlay		8072543						
ANR	8072857	Symbol	pcl_reset_permanent		8072543						
ANR	8072858	Symbol	new_logical_page		8072543						
ANR	8072859	DeclStmt									
ANR	8072860	Decl							const pcl_init_t	const pcl_init_t	pcpage_init
