command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1407077	File	data/converged/CVE-2018-16863_ghostpdl/base_slzwe.c								
ANR	1407078	DeclStmt									
ANR	1407079	Decl							extern	extern ( s_LZW_release )	stream_proc_release
ANR	1407080	ClassDef	lzw_encode_s	37:8:1180:1325							
ANR	1407081	DeclStmt									
ANR	1407082	Decl							byte	byte	datum
ANR	1407083	DeclStmt									
ANR	1407084	Decl							ushort	ushort	prefix
ANR	1407085	DeclStmt									
ANR	1407086	Decl							lzw_encode_s	lzw_encode_s	lzw_encode
ANR	1407087	ClassDef	lzw_encode_table_s	46:0:1491:1592							
ANR	1407088	DeclStmt									
ANR	1407089	Decl							lzw_encode	lzw_encode [ encode_max ]	encode
ANR	1407090	DeclStmt									
ANR	1407091	Decl							ushort	ushort [ hash_size ]	hashed
ANR	1407092	Function	lzw_put_code	61:0:2103:2587							
ANR	1407093	FunctionDef	"lzw_put_code (register stream_LZW_state * ss , byte * q , uint code)"		1407092	0					
ANR	1407094	CompoundStatement		63:0:2181:2587	1407092	0					
ANR	1407095	IdentifierDeclStatement	uint size = ss -> code_size ;	63:1:2183:2208	1407092	0	True				
ANR	1407096	IdentifierDecl	size = ss -> code_size		1407092	0					
ANR	1407097	IdentifierDeclType	uint		1407092	0					
ANR	1407098	Identifier	size		1407092	1					
ANR	1407099	AssignmentExpression	size = ss -> code_size		1407092	2		=			
ANR	1407100	Identifier	size		1407092	0					
ANR	1407101	PtrMemberAccess	ss -> code_size		1407092	1					
ANR	1407102	Identifier	ss		1407092	0					
ANR	1407103	Identifier	code_size		1407092	1					
ANR	1407104	IdentifierDeclStatement	byte cb = ( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) ) ;	64:8:2218:2306	1407092	1	True				
ANR	1407105	IdentifierDecl	cb = ( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) )		1407092	0					
ANR	1407106	IdentifierDeclType	byte		1407092	0					
ANR	1407107	Identifier	cb		1407092	1					
ANR	1407108	AssignmentExpression	cb = ( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) )		1407092	2		=			
ANR	1407109	Identifier	cb		1407092	0					
ANR	1407110	AdditiveExpression	( ss -> bits << ss -> bits_left ) + ( code >> ( size - ss -> bits_left ) )		1407092	1		+			
ANR	1407111	ShiftExpression	ss -> bits << ss -> bits_left		1407092	0		<<			
ANR	1407112	PtrMemberAccess	ss -> bits		1407092	0					
ANR	1407113	Identifier	ss		1407092	0					
ANR	1407114	Identifier	bits		1407092	1					
ANR	1407115	PtrMemberAccess	ss -> bits_left		1407092	1					
ANR	1407116	Identifier	ss		1407092	0					
ANR	1407117	Identifier	bits_left		1407092	1					
ANR	1407118	ShiftExpression	code >> ( size - ss -> bits_left )		1407092	1		>>			
ANR	1407119	Identifier	code		1407092	0					
ANR	1407120	AdditiveExpression	size - ss -> bits_left		1407092	1		-			
ANR	1407121	Identifier	size		1407092	0					
ANR	1407122	PtrMemberAccess	ss -> bits_left		1407092	1					
ANR	1407123	Identifier	ss		1407092	0					
ANR	1407124	Identifier	bits_left		1407092	1					
ANR	1407125	ExpressionStatement	"if_debug2m ( 'W' , ss -> memory , ""[w]writing 0x%x,%d\\n"" , code , ss -> code_size )"	66:8:2316:2388	1407092	2	True				
ANR	1407126	CallExpression	"if_debug2m ( 'W' , ss -> memory , ""[w]writing 0x%x,%d\\n"" , code , ss -> code_size )"		1407092	0					
ANR	1407127	Callee	if_debug2m		1407092	0					
ANR	1407128	Identifier	if_debug2m		1407092	0					
ANR	1407129	ArgumentList	'W'		1407092	1					
ANR	1407130	Argument	'W'		1407092	0					
ANR	1407131	PrimaryExpression	'W'		1407092	0					
ANR	1407132	Argument	ss -> memory		1407092	1					
ANR	1407133	PtrMemberAccess	ss -> memory		1407092	0					
ANR	1407134	Identifier	ss		1407092	0					
ANR	1407135	Identifier	memory		1407092	1					
ANR	1407136	Argument	"""[w]writing 0x%x,%d\\n"""		1407092	2					
ANR	1407137	PrimaryExpression	"""[w]writing 0x%x,%d\\n"""		1407092	0					
ANR	1407138	Argument	code		1407092	3					
ANR	1407139	Identifier	code		1407092	0					
ANR	1407140	Argument	ss -> code_size		1407092	4					
ANR	1407141	PtrMemberAccess	ss -> code_size		1407092	0					
ANR	1407142	Identifier	ss		1407092	0					
ANR	1407143	Identifier	code_size		1407092	1					
ANR	1407144	ExpressionStatement	* ++ q = cb	67:8:2398:2407	1407092	3	True				
ANR	1407145	AssignmentExpression	* ++ q = cb		1407092	0		=			
ANR	1407146	UnaryOperationExpression	* ++ q		1407092	0					
ANR	1407147	UnaryOperator	*		1407092	0					
ANR	1407148	UnaryExpression	++ q		1407092	1					
ANR	1407149	IncDec	++		1407092	0					
ANR	1407150	Identifier	q		1407092	1					
ANR	1407151	Identifier	cb		1407092	1					
ANR	1407152	IfStatement	if ( ( ss -> bits_left += 8 - size ) <= 0 )		1407092	4					
ANR	1407153	Condition	( ss -> bits_left += 8 - size ) <= 0	68:13:2422:2453	1407092	0	True				
ANR	1407154	RelationalExpression	( ss -> bits_left += 8 - size ) <= 0		1407092	0		<=			
ANR	1407155	AssignmentExpression	ss -> bits_left += 8 - size		1407092	0		+=			
ANR	1407156	PtrMemberAccess	ss -> bits_left		1407092	0					
ANR	1407157	Identifier	ss		1407092	0					
ANR	1407158	Identifier	bits_left		1407092	1					
ANR	1407159	AdditiveExpression	8 - size		1407092	1		-			
ANR	1407160	PrimaryExpression	8		1407092	0					
ANR	1407161	Identifier	size		1407092	1					
ANR	1407162	PrimaryExpression	0		1407092	1					
ANR	1407163	CompoundStatement		7:8:283:283	1407092	1					
ANR	1407164	ExpressionStatement	* ++ q = code >> - ss -> bits_left	69:10:2467:2496	1407092	0	True				
ANR	1407165	AssignmentExpression	* ++ q = code >> - ss -> bits_left		1407092	0		=			
ANR	1407166	UnaryOperationExpression	* ++ q		1407092	0					
ANR	1407167	UnaryOperator	*		1407092	0					
ANR	1407168	UnaryExpression	++ q		1407092	1					
ANR	1407169	IncDec	++		1407092	0					
ANR	1407170	Identifier	q		1407092	1					
ANR	1407171	ShiftExpression	code >> - ss -> bits_left		1407092	1		>>			
ANR	1407172	Identifier	code		1407092	0					
ANR	1407173	UnaryOperationExpression	- ss -> bits_left		1407092	1					
ANR	1407174	UnaryOperator	-		1407092	0					
ANR	1407175	PtrMemberAccess	ss -> bits_left		1407092	1					
ANR	1407176	Identifier	ss		1407092	0					
ANR	1407177	Identifier	bits_left		1407092	1					
ANR	1407178	ExpressionStatement	ss -> bits_left += 8	70:16:2514:2532	1407092	1	True				
ANR	1407179	AssignmentExpression	ss -> bits_left += 8		1407092	0		+=			
ANR	1407180	PtrMemberAccess	ss -> bits_left		1407092	0					
ANR	1407181	Identifier	ss		1407092	0					
ANR	1407182	Identifier	bits_left		1407092	1					
ANR	1407183	PrimaryExpression	8		1407092	1					
ANR	1407184	ExpressionStatement	ss -> bits = code	72:8:2552:2567	1407092	5	True				
ANR	1407185	AssignmentExpression	ss -> bits = code		1407092	0		=			
ANR	1407186	PtrMemberAccess	ss -> bits		1407092	0					
ANR	1407187	Identifier	ss		1407092	0					
ANR	1407188	Identifier	bits		1407092	1					
ANR	1407189	Identifier	code		1407092	1					
ANR	1407190	ReturnStatement	return q ;	73:8:2577:2585	1407092	6	True				
ANR	1407191	Identifier	q		1407092	0					
ANR	1407192	ReturnType	static byte *		1407092	1					
ANR	1407193	Identifier	lzw_put_code		1407092	2					
ANR	1407194	ParameterList	"register stream_LZW_state * ss , byte * q , uint code"		1407092	3					
ANR	1407195	Parameter	register stream_LZW_state * ss	62:13:2130:2158	1407092	0	True				
ANR	1407196	ParameterType	register stream_LZW_state *		1407092	0					
ANR	1407197	Identifier	ss		1407092	1					
ANR	1407198	Parameter	byte * q	62:44:2161:2167	1407092	1	True				
ANR	1407199	ParameterType	byte *		1407092	0					
ANR	1407200	Identifier	q		1407092	1					
ANR	1407201	Parameter	uint code	62:53:2170:2178	1407092	2	True				
ANR	1407202	ParameterType	uint		1407092	0					
ANR	1407203	Identifier	code		1407092	1					
ANR	1407204	CFGEntryNode	ENTRY		1407092		True				
ANR	1407205	CFGExitNode	EXIT		1407092		True				
ANR	1407206	Symbol	ss		1407092						
ANR	1407207	Symbol	q		1407092						
ANR	1407208	Symbol	ss -> bits		1407092						
ANR	1407209	Symbol	ss -> memory		1407092						
ANR	1407210	Symbol	code		1407092						
ANR	1407211	Symbol	size		1407092						
ANR	1407212	Symbol	* ss		1407092						
ANR	1407213	Symbol	ss -> code_size		1407092						
ANR	1407214	Symbol	* ++ q		1407092						
ANR	1407215	Symbol	ss -> bits_left		1407092						
ANR	1407216	Symbol	* q		1407092						
ANR	1407217	Symbol	cb		1407092						
ANR	1407218	Function	lzw_reset_encode	77:0:2641:3416							
ANR	1407219	FunctionDef	lzw_reset_encode (stream_LZW_state * ss)		1407218	0					
ANR	1407220	CompoundStatement		79:0:2692:3416	1407218	0					
ANR	1407221	Statement	register	79:1:2694:2701	1407218	0	True				
ANR	1407222	IdentifierDeclStatement	int c ;	79:10:2703:2708	1407218	1	True				
ANR	1407223	IdentifierDecl	c		1407218	0					
ANR	1407224	IdentifierDeclType	int		1407218	0					
ANR	1407225	Identifier	c		1407218	1					
ANR	1407226	IdentifierDeclStatement	lzw_encode_table * table = ss -> table . encode ;	80:8:2718:2760	1407218	2	True				
ANR	1407227	IdentifierDecl	* table = ss -> table . encode		1407218	0					
ANR	1407228	IdentifierDeclType	lzw_encode_table *		1407218	0					
ANR	1407229	Identifier	table		1407218	1					
ANR	1407230	AssignmentExpression	* table = ss -> table . encode		1407218	2		=			
ANR	1407231	Identifier	table		1407218	0					
ANR	1407232	MemberAccess	ss -> table . encode		1407218	1					
ANR	1407233	PtrMemberAccess	ss -> table		1407218	0					
ANR	1407234	Identifier	ss		1407218	0					
ANR	1407235	Identifier	table		1407218	1					
ANR	1407236	Identifier	encode		1407218	1					
ANR	1407237	ExpressionStatement	ss -> next_code = code_0	81:8:2770:2792	1407218	3	True				
ANR	1407238	AssignmentExpression	ss -> next_code = code_0		1407218	0		=			
ANR	1407239	PtrMemberAccess	ss -> next_code		1407218	0					
ANR	1407240	Identifier	ss		1407218	0					
ANR	1407241	Identifier	next_code		1407218	1					
ANR	1407242	Identifier	code_0		1407218	1					
ANR	1407243	ExpressionStatement	ss -> code_size = 9	82:8:2802:2819	1407218	4	True				
ANR	1407244	AssignmentExpression	ss -> code_size = 9		1407218	0		=			
ANR	1407245	PtrMemberAccess	ss -> code_size		1407218	0					
ANR	1407246	Identifier	ss		1407218	0					
ANR	1407247	Identifier	code_size		1407218	1					
ANR	1407248	PrimaryExpression	9		1407218	1					
ANR	1407249	ExpressionStatement	ss -> prev_code = code_eod	83:8:2829:2853	1407218	5	True				
ANR	1407250	AssignmentExpression	ss -> prev_code = code_eod		1407218	0		=			
ANR	1407251	PtrMemberAccess	ss -> prev_code		1407218	0					
ANR	1407252	Identifier	ss		1407218	0					
ANR	1407253	Identifier	prev_code		1407218	1					
ANR	1407254	Identifier	code_eod		1407218	1					
ANR	1407255	ForStatement	for ( c = 0 ; c < hash_size ; c ++ )		1407218	6					
ANR	1407256	ForInit	c = 0 ;	84:14:2869:2874	1407218	0	True				
ANR	1407257	AssignmentExpression	c = 0		1407218	0		=			
ANR	1407258	Identifier	c		1407218	0					
ANR	1407259	PrimaryExpression	0		1407218	1					
ANR	1407260	Condition	c < hash_size	84:21:2876:2888	1407218	1	True				
ANR	1407261	RelationalExpression	c < hash_size		1407218	0		<			
ANR	1407262	Identifier	c		1407218	0					
ANR	1407263	Identifier	hash_size		1407218	1					
ANR	1407264	PostIncDecOperationExpression	c ++	84:36:2891:2893	1407218	2	True				
ANR	1407265	Identifier	c		1407218	0					
ANR	1407266	IncDec	++		1407218	1					
ANR	1407267	ExpressionStatement	table -> hashed [ c ] = code_eod	85:16:2913:2940	1407218	3	True				
ANR	1407268	AssignmentExpression	table -> hashed [ c ] = code_eod		1407218	0		=			
ANR	1407269	ArrayIndexing	table -> hashed [ c ]		1407218	0					
ANR	1407270	PtrMemberAccess	table -> hashed		1407218	0					
ANR	1407271	Identifier	table		1407218	0					
ANR	1407272	Identifier	hashed		1407218	1					
ANR	1407273	Identifier	c		1407218	1					
ANR	1407274	Identifier	code_eod		1407218	1					
ANR	1407275	ForStatement	for ( c = 0 ; c < 256 ; c ++ )		1407218	7					
ANR	1407276	ForInit	c = 0 ;	86:14:2956:2961	1407218	0	True				
ANR	1407277	AssignmentExpression	c = 0		1407218	0		=			
ANR	1407278	Identifier	c		1407218	0					
ANR	1407279	PrimaryExpression	0		1407218	1					
ANR	1407280	Condition	c < 256	86:21:2963:2969	1407218	1	True				
ANR	1407281	RelationalExpression	c < 256		1407218	0		<			
ANR	1407282	Identifier	c		1407218	0					
ANR	1407283	PrimaryExpression	256		1407218	1					
ANR	1407284	PostIncDecOperationExpression	c ++	86:30:2972:2974	1407218	2	True				
ANR	1407285	Identifier	c		1407218	0					
ANR	1407286	IncDec	++		1407218	1					
ANR	1407287	CompoundStatement		10:25:356:409	1407218	3					
ANR	1407288	IdentifierDeclStatement	lzw_encode * ec = & table -> encode [ c ] ;	87:10:2988:3022	1407218	0	True				
ANR	1407289	IdentifierDecl	* ec = & table -> encode [ c ]		1407218	0					
ANR	1407290	IdentifierDeclType	lzw_encode *		1407218	0					
ANR	1407291	Identifier	ec		1407218	1					
ANR	1407292	AssignmentExpression	* ec = & table -> encode [ c ]		1407218	2		=			
ANR	1407293	Identifier	ec		1407218	0					
ANR	1407294	UnaryOperationExpression	& table -> encode [ c ]		1407218	1					
ANR	1407295	UnaryOperator	&		1407218	0					
ANR	1407296	ArrayIndexing	table -> encode [ c ]		1407218	1					
ANR	1407297	PtrMemberAccess	table -> encode		1407218	0					
ANR	1407298	Identifier	table		1407218	0					
ANR	1407299	Identifier	encode		1407218	1					
ANR	1407300	Identifier	c		1407218	1					
ANR	1407301	Statement	register	88:16:3040:3047	1407218	1	True				
ANR	1407302	IdentifierDeclStatement	"ushort * tc = & table -> hashed [ encode_hash ( code_eod , c ) ] ;"	88:25:3049:3102	1407218	2	True				
ANR	1407303	IdentifierDecl	"* tc = & table -> hashed [ encode_hash ( code_eod , c ) ]"		1407218	0					
ANR	1407304	IdentifierDeclType	ushort *		1407218	0					
ANR	1407305	Identifier	tc		1407218	1					
ANR	1407306	AssignmentExpression	"* tc = & table -> hashed [ encode_hash ( code_eod , c ) ]"		1407218	2		=			
ANR	1407307	Identifier	tc		1407218	0					
ANR	1407308	UnaryOperationExpression	"& table -> hashed [ encode_hash ( code_eod , c ) ]"		1407218	1					
ANR	1407309	UnaryOperator	&		1407218	0					
ANR	1407310	ArrayIndexing	"table -> hashed [ encode_hash ( code_eod , c ) ]"		1407218	1					
ANR	1407311	PtrMemberAccess	table -> hashed		1407218	0					
ANR	1407312	Identifier	table		1407218	0					
ANR	1407313	Identifier	hashed		1407218	1					
ANR	1407314	CallExpression	"encode_hash ( code_eod , c )"		1407218	1					
ANR	1407315	Callee	encode_hash		1407218	0					
ANR	1407316	Identifier	encode_hash		1407218	0					
ANR	1407317	ArgumentList	code_eod		1407218	1					
ANR	1407318	Argument	code_eod		1407218	0					
ANR	1407319	Identifier	code_eod		1407218	0					
ANR	1407320	Argument	c		1407218	1					
ANR	1407321	Identifier	c		1407218	0					
ANR	1407322	WhileStatement	while ( * tc != code_eod )		1407218	3					
ANR	1407323	Condition	* tc != code_eod	89:24:3128:3142	1407218	0	True				
ANR	1407324	EqualityExpression	* tc != code_eod		1407218	0		!=			
ANR	1407325	UnaryOperationExpression	* tc		1407218	0					
ANR	1407326	UnaryOperator	*		1407218	0					
ANR	1407327	Identifier	tc		1407218	1					
ANR	1407328	Identifier	code_eod		1407218	1					
ANR	1407329	IfStatement	if ( ++ tc == & table -> hashed [ hash_size ] )		1407218	1					
ANR	1407330	Condition	++ tc == & table -> hashed [ hash_size ]	90:23:3169:3201	1407218	0	True				
ANR	1407331	EqualityExpression	++ tc == & table -> hashed [ hash_size ]		1407218	0		==			
ANR	1407332	UnaryExpression	++ tc		1407218	0					
ANR	1407333	IncDec	++		1407218	0					
ANR	1407334	Identifier	tc		1407218	1					
ANR	1407335	UnaryOperationExpression	& table -> hashed [ hash_size ]		1407218	1					
ANR	1407336	UnaryOperator	&		1407218	0					
ANR	1407337	ArrayIndexing	table -> hashed [ hash_size ]		1407218	1					
ANR	1407338	PtrMemberAccess	table -> hashed		1407218	0					
ANR	1407339	Identifier	table		1407218	0					
ANR	1407340	Identifier	hashed		1407218	1					
ANR	1407341	Identifier	hash_size		1407218	1					
ANR	1407342	ExpressionStatement	tc = & table -> hashed [ 0 ]	91:20:3225:3247	1407218	1	True				
ANR	1407343	AssignmentExpression	tc = & table -> hashed [ 0 ]		1407218	0		=			
ANR	1407344	Identifier	tc		1407218	0					
ANR	1407345	UnaryOperationExpression	& table -> hashed [ 0 ]		1407218	1					
ANR	1407346	UnaryOperator	&		1407218	0					
ANR	1407347	ArrayIndexing	table -> hashed [ 0 ]		1407218	1					
ANR	1407348	PtrMemberAccess	table -> hashed		1407218	0					
ANR	1407349	Identifier	table		1407218	0					
ANR	1407350	Identifier	hashed		1407218	1					
ANR	1407351	PrimaryExpression	0		1407218	1					
ANR	1407352	ExpressionStatement	* tc = c	92:16:3265:3272	1407218	4	True				
ANR	1407353	AssignmentExpression	* tc = c		1407218	0		=			
ANR	1407354	UnaryOperationExpression	* tc		1407218	0					
ANR	1407355	UnaryOperator	*		1407218	0					
ANR	1407356	Identifier	tc		1407218	1					
ANR	1407357	Identifier	c		1407218	1					
ANR	1407358	ExpressionStatement	"ec -> datum = c , ec -> prefix = code_eod"	93:16:3290:3326	1407218	5	True				
ANR	1407359	Expression	"ec -> datum = c , ec -> prefix = code_eod"		1407218	0					
ANR	1407360	AssignmentExpression	ec -> datum = c		1407218	0		=			
ANR	1407361	PtrMemberAccess	ec -> datum		1407218	0					
ANR	1407362	Identifier	ec		1407218	0					
ANR	1407363	Identifier	datum		1407218	1					
ANR	1407364	Identifier	c		1407218	1					
ANR	1407365	AssignmentExpression	ec -> prefix = code_eod		1407218	1		=			
ANR	1407366	PtrMemberAccess	ec -> prefix		1407218	0					
ANR	1407367	Identifier	ec		1407218	0					
ANR	1407368	Identifier	prefix		1407218	1					
ANR	1407369	Identifier	code_eod		1407218	1					
ANR	1407370	ExpressionStatement	table -> encode [ code_eod ] . prefix = code_reset	95:8:3346:3389	1407218	8	True				
ANR	1407371	AssignmentExpression	table -> encode [ code_eod ] . prefix = code_reset		1407218	0		=			
ANR	1407372	MemberAccess	table -> encode [ code_eod ] . prefix		1407218	0					
ANR	1407373	ArrayIndexing	table -> encode [ code_eod ]		1407218	0					
ANR	1407374	PtrMemberAccess	table -> encode		1407218	0					
ANR	1407375	Identifier	table		1407218	0					
ANR	1407376	Identifier	encode		1407218	1					
ANR	1407377	Identifier	code_eod		1407218	1					
ANR	1407378	Identifier	prefix		1407218	1					
ANR	1407379	Identifier	code_reset		1407218	1					
ANR	1407380	ReturnType	static void		1407218	1					
ANR	1407381	Identifier	lzw_reset_encode		1407218	2					
ANR	1407382	ParameterList	stream_LZW_state * ss		1407218	3					
ANR	1407383	Parameter	stream_LZW_state * ss	78:17:2670:2689	1407218	0	True				
ANR	1407384	ParameterType	stream_LZW_state *		1407218	0					
ANR	1407385	Identifier	ss		1407218	1					
ANR	1407386	CFGEntryNode	ENTRY		1407218		True				
ANR	1407387	CFGExitNode	EXIT		1407218		True				
ANR	1407388	Symbol	encode_hash		1407218						
ANR	1407389	Symbol	* ss		1407218						
ANR	1407390	Symbol	* ec		1407218						
ANR	1407391	Symbol	code_reset		1407218						
ANR	1407392	Symbol	ec -> datum		1407218						
ANR	1407393	Symbol	table -> encode [ code_eod ] . prefix		1407218						
ANR	1407394	Symbol	ss -> table		1407218						
ANR	1407395	Symbol	ss -> code_size		1407218						
ANR	1407396	Symbol	* table -> hashed		1407218						
ANR	1407397	Symbol	* table -> encode		1407218						
ANR	1407398	Symbol	table		1407218						
ANR	1407399	Symbol	ec		1407218						
ANR	1407400	Symbol	ss		1407218						
ANR	1407401	Symbol	code_eod		1407218						
ANR	1407402	Symbol	c		1407218						
ANR	1407403	Symbol	code_0		1407218						
ANR	1407404	Symbol	ss -> prev_code		1407218						
ANR	1407405	Symbol	hash_size		1407218						
ANR	1407406	Symbol	* table		1407218						
ANR	1407407	Symbol	* c		1407218						
ANR	1407408	Symbol	ss -> next_code		1407218						
ANR	1407409	Symbol	tc		1407218						
ANR	1407410	Symbol	* * table		1407218						
ANR	1407411	Symbol	table -> encode		1407218						
ANR	1407412	Symbol	* tc		1407218						
ANR	1407413	Symbol	ss -> table . encode		1407218						
ANR	1407414	Symbol	* code_eod		1407218						
ANR	1407415	Symbol	ec -> prefix		1407218						
ANR	1407416	Symbol	table -> hashed		1407218						
ANR	1407417	Function	s_LZWE_init	101:0:3490:3935							
ANR	1407418	FunctionDef	s_LZWE_init (stream_state * st)		1407417	0					
ANR	1407419	CompoundStatement		103:0:3531:3935	1407417	0					
ANR	1407420	ExpressionStatement	ss -> bits_left = 8	103:1:3533:3550	1407417	0	True				
ANR	1407421	AssignmentExpression	ss -> bits_left = 8		1407417	0		=			
ANR	1407422	PtrMemberAccess	ss -> bits_left		1407417	0					
ANR	1407423	Identifier	ss		1407417	0					
ANR	1407424	Identifier	bits_left		1407417	1					
ANR	1407425	PrimaryExpression	8		1407417	1					
ANR	1407426	ExpressionStatement	ss -> bits = 0	104:8:3560:3572	1407417	1	True				
ANR	1407427	AssignmentExpression	ss -> bits = 0		1407417	0		=			
ANR	1407428	PtrMemberAccess	ss -> bits		1407417	0					
ANR	1407429	Identifier	ss		1407417	0					
ANR	1407430	Identifier	bits		1407417	1					
ANR	1407431	PrimaryExpression	0		1407417	1					
ANR	1407432	ExpressionStatement	"ss -> table . encode = gs_alloc_struct ( st -> memory , lzw_encode_table , & st_lzwe_table , ""LZWEncode init"" )"	105:8:3648:3770	1407417	2	True				
ANR	1407433	AssignmentExpression	"ss -> table . encode = gs_alloc_struct ( st -> memory , lzw_encode_table , & st_lzwe_table , ""LZWEncode init"" )"		1407417	0		=			
ANR	1407434	MemberAccess	ss -> table . encode		1407417	0					
ANR	1407435	PtrMemberAccess	ss -> table		1407417	0					
ANR	1407436	Identifier	ss		1407417	0					
ANR	1407437	Identifier	table		1407417	1					
ANR	1407438	Identifier	encode		1407417	1					
ANR	1407439	CallExpression	"gs_alloc_struct ( st -> memory , lzw_encode_table , & st_lzwe_table , ""LZWEncode init"" )"		1407417	1					
ANR	1407440	Callee	gs_alloc_struct		1407417	0					
ANR	1407441	Identifier	gs_alloc_struct		1407417	0					
ANR	1407442	ArgumentList	st -> memory		1407417	1					
ANR	1407443	Argument	st -> memory		1407417	0					
ANR	1407444	PtrMemberAccess	st -> memory		1407417	0					
ANR	1407445	Identifier	st		1407417	0					
ANR	1407446	Identifier	memory		1407417	1					
ANR	1407447	Argument	lzw_encode_table		1407417	1					
ANR	1407448	Identifier	lzw_encode_table		1407417	0					
ANR	1407449	Argument	& st_lzwe_table		1407417	2					
ANR	1407450	UnaryOperationExpression	& st_lzwe_table		1407417	0					
ANR	1407451	UnaryOperator	&		1407417	0					
ANR	1407452	Identifier	st_lzwe_table		1407417	1					
ANR	1407453	Argument	"""LZWEncode init"""		1407417	3					
ANR	1407454	PrimaryExpression	"""LZWEncode init"""		1407417	0					
ANR	1407455	IfStatement	if ( ss -> table . encode == 0 )		1407417	3					
ANR	1407456	Condition	ss -> table . encode == 0	107:13:3785:3805	1407417	0	True				
ANR	1407457	EqualityExpression	ss -> table . encode == 0		1407417	0		==			
ANR	1407458	MemberAccess	ss -> table . encode		1407417	0					
ANR	1407459	PtrMemberAccess	ss -> table		1407417	0					
ANR	1407460	Identifier	ss		1407417	0					
ANR	1407461	Identifier	table		1407417	1					
ANR	1407462	Identifier	encode		1407417	1					
ANR	1407463	PrimaryExpression	0		1407417	1					
ANR	1407464	ReturnStatement	return ERRC ;	108:16:3825:3836	1407417	1	True				
ANR	1407465	Identifier	ERRC		1407417	0					
ANR	1407466	ExpressionStatement	ss -> first = true	109:8:3869:3885	1407417	4	True				
ANR	1407467	AssignmentExpression	ss -> first = true		1407417	0		=			
ANR	1407468	PtrMemberAccess	ss -> first		1407417	0					
ANR	1407469	Identifier	ss		1407417	0					
ANR	1407470	Identifier	first		1407417	1					
ANR	1407471	Identifier	true		1407417	1					
ANR	1407472	ExpressionStatement	lzw_reset_encode ( ss )	110:8:3895:3915	1407417	5	True				
ANR	1407473	CallExpression	lzw_reset_encode ( ss )		1407417	0					
ANR	1407474	Callee	lzw_reset_encode		1407417	0					
ANR	1407475	Identifier	lzw_reset_encode		1407417	0					
ANR	1407476	ArgumentList	ss		1407417	1					
ANR	1407477	Argument	ss		1407417	0					
ANR	1407478	Identifier	ss		1407417	0					
ANR	1407479	ReturnStatement	return 0 ;	111:8:3925:3933	1407417	6	True				
ANR	1407480	PrimaryExpression	0		1407417	0					
ANR	1407481	ReturnType	static int		1407417	1					
ANR	1407482	Identifier	s_LZWE_init		1407417	2					
ANR	1407483	ParameterList	stream_state * st		1407417	3					
ANR	1407484	Parameter	stream_state * st	102:12:3513:3528	1407417	0	True				
ANR	1407485	ParameterType	stream_state *		1407417	0					
ANR	1407486	Identifier	st		1407417	1					
ANR	1407487	CFGEntryNode	ENTRY		1407417		True				
ANR	1407488	CFGExitNode	EXIT		1407417		True				
ANR	1407489	Symbol	ss		1407417						
ANR	1407490	Symbol	st		1407417						
ANR	1407491	Symbol	ss -> bits		1407417						
ANR	1407492	Symbol	* st		1407417						
ANR	1407493	Symbol	* ss		1407417						
ANR	1407494	Symbol	& st_lzwe_table		1407417						
ANR	1407495	Symbol	st -> memory		1407417						
ANR	1407496	Symbol	gs_alloc_struct		1407417						
ANR	1407497	Symbol	ss -> first		1407417						
ANR	1407498	Symbol	lzw_encode_table		1407417						
ANR	1407499	Symbol	ss -> table		1407417						
ANR	1407500	Symbol	true		1407417						
ANR	1407501	Symbol	ss -> table . encode		1407417						
ANR	1407502	Symbol	ss -> bits_left		1407417						
ANR	1407503	Symbol	ERRC		1407417						
ANR	1407504	Function	s_LZWE_process	115:0:3961:7722							
ANR	1407505	FunctionDef	"s_LZWE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1407504	0					
ANR	1407506	CompoundStatement		118:0:4067:7722	1407504	0					
ANR	1407507	Statement	register	118:1:4069:4076	1407504	0	True				
ANR	1407508	IdentifierDeclStatement	const byte * p = pr -> ptr ;	118:10:4078:4101	1407504	1	True				
ANR	1407509	IdentifierDecl	* p = pr -> ptr		1407504	0					
ANR	1407510	IdentifierDeclType	const byte *		1407504	0					
ANR	1407511	Identifier	p		1407504	1					
ANR	1407512	AssignmentExpression	* p = pr -> ptr		1407504	2		=			
ANR	1407513	Identifier	p		1407504	0					
ANR	1407514	PtrMemberAccess	pr -> ptr		1407504	1					
ANR	1407515	Identifier	pr		1407504	0					
ANR	1407516	Identifier	ptr		1407504	1					
ANR	1407517	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	119:8:4111:4141	1407504	2	True				
ANR	1407518	IdentifierDecl	* rlimit = pr -> limit		1407504	0					
ANR	1407519	IdentifierDeclType	const byte *		1407504	0					
ANR	1407520	Identifier	rlimit		1407504	1					
ANR	1407521	AssignmentExpression	* rlimit = pr -> limit		1407504	2		=			
ANR	1407522	Identifier	rlimit		1407504	0					
ANR	1407523	PtrMemberAccess	pr -> limit		1407504	1					
ANR	1407524	Identifier	pr		1407504	0					
ANR	1407525	Identifier	limit		1407504	1					
ANR	1407526	Statement	register	120:8:4151:4158	1407504	3	True				
ANR	1407527	IdentifierDeclStatement	byte * q = pw -> ptr ;	120:17:4160:4177	1407504	4	True				
ANR	1407528	IdentifierDecl	* q = pw -> ptr		1407504	0					
ANR	1407529	IdentifierDeclType	byte *		1407504	0					
ANR	1407530	Identifier	q		1407504	1					
ANR	1407531	AssignmentExpression	* q = pw -> ptr		1407504	2		=			
ANR	1407532	Identifier	q		1407504	0					
ANR	1407533	PtrMemberAccess	pw -> ptr		1407504	1					
ANR	1407534	Identifier	pw		1407504	0					
ANR	1407535	Identifier	ptr		1407504	1					
ANR	1407536	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	121:8:4187:4211	1407504	5	True				
ANR	1407537	IdentifierDecl	* wlimit = pw -> limit		1407504	0					
ANR	1407538	IdentifierDeclType	byte *		1407504	0					
ANR	1407539	Identifier	wlimit		1407504	1					
ANR	1407540	AssignmentExpression	* wlimit = pw -> limit		1407504	2		=			
ANR	1407541	Identifier	wlimit		1407504	0					
ANR	1407542	PtrMemberAccess	pw -> limit		1407504	1					
ANR	1407543	Identifier	pw		1407504	0					
ANR	1407544	Identifier	limit		1407504	1					
ANR	1407545	IdentifierDeclStatement	int code = ss -> prev_code ;	122:8:4221:4245	1407504	6	True				
ANR	1407546	IdentifierDecl	code = ss -> prev_code		1407504	0					
ANR	1407547	IdentifierDeclType	int		1407504	0					
ANR	1407548	Identifier	code		1407504	1					
ANR	1407549	AssignmentExpression	code = ss -> prev_code		1407504	2		=			
ANR	1407550	Identifier	code		1407504	0					
ANR	1407551	PtrMemberAccess	ss -> prev_code		1407504	1					
ANR	1407552	Identifier	ss		1407504	0					
ANR	1407553	Identifier	prev_code		1407504	1					
ANR	1407554	IdentifierDeclStatement	lzw_encode_table * table = ss -> table . encode ;	123:8:4255:4297	1407504	7	True				
ANR	1407555	IdentifierDecl	* table = ss -> table . encode		1407504	0					
ANR	1407556	IdentifierDeclType	lzw_encode_table *		1407504	0					
ANR	1407557	Identifier	table		1407504	1					
ANR	1407558	AssignmentExpression	* table = ss -> table . encode		1407504	2		=			
ANR	1407559	Identifier	table		1407504	0					
ANR	1407560	MemberAccess	ss -> table . encode		1407504	1					
ANR	1407561	PtrMemberAccess	ss -> table		1407504	0					
ANR	1407562	Identifier	ss		1407504	0					
ANR	1407563	Identifier	table		1407504	1					
ANR	1407564	Identifier	encode		1407504	1					
ANR	1407565	IdentifierDeclStatement	ushort * table_end = & table -> hashed [ hash_size ] ;	124:8:4307:4352	1407504	8	True				
ANR	1407566	IdentifierDecl	* table_end = & table -> hashed [ hash_size ]		1407504	0					
ANR	1407567	IdentifierDeclType	ushort *		1407504	0					
ANR	1407568	Identifier	table_end		1407504	1					
ANR	1407569	AssignmentExpression	* table_end = & table -> hashed [ hash_size ]		1407504	2		=			
ANR	1407570	Identifier	table_end		1407504	0					
ANR	1407571	UnaryOperationExpression	& table -> hashed [ hash_size ]		1407504	1					
ANR	1407572	UnaryOperator	&		1407504	0					
ANR	1407573	ArrayIndexing	table -> hashed [ hash_size ]		1407504	1					
ANR	1407574	PtrMemberAccess	table -> hashed		1407504	0					
ANR	1407575	Identifier	table		1407504	0					
ANR	1407576	Identifier	hashed		1407504	1					
ANR	1407577	Identifier	hash_size		1407504	1					
ANR	1407578	IdentifierDeclStatement	int status = 0 ;	125:8:4362:4376	1407504	9	True				
ANR	1407579	IdentifierDecl	status = 0		1407504	0					
ANR	1407580	IdentifierDeclType	int		1407504	0					
ANR	1407581	Identifier	status		1407504	1					
ANR	1407582	AssignmentExpression	status = 0		1407504	2		=			
ANR	1407583	Identifier	status		1407504	0					
ANR	1407584	PrimaryExpression	0		1407504	1					
ANR	1407585	IdentifierDeclStatement	int limit_code ;	126:8:4386:4400	1407504	10	True				
ANR	1407586	IdentifierDecl	limit_code		1407504	0					
ANR	1407587	IdentifierDeclType	int		1407504	0					
ANR	1407588	Identifier	limit_code		1407504	1					
ANR	1407589	Statement	define	127:1:4403:4408	1407504	11	True				
ANR	1407590	Statement	set_limit_code	127:8:4410:4423	1407504	12	True				
ANR	1407591	Statement	(	127:22:4424:4424	1407504	13	True				
ANR	1407592	Statement	)	127:23:4425:4425	1407504	14	True				
ANR	1407593	ExpressionStatement	limit_code = ( 1 << ss -> code_size ) - ss -> EarlyChange	128:2:4430:4481	1407504	15	True				
ANR	1407594	AssignmentExpression	limit_code = ( 1 << ss -> code_size ) - ss -> EarlyChange		1407504	0		=			
ANR	1407595	Identifier	limit_code		1407504	0					
ANR	1407596	AdditiveExpression	( 1 << ss -> code_size ) - ss -> EarlyChange		1407504	1		-			
ANR	1407597	ShiftExpression	1 << ss -> code_size		1407504	0		<<			
ANR	1407598	PrimaryExpression	1		1407504	0					
ANR	1407599	PtrMemberAccess	ss -> code_size		1407504	1					
ANR	1407600	Identifier	ss		1407504	0					
ANR	1407601	Identifier	code_size		1407504	1					
ANR	1407602	PtrMemberAccess	ss -> EarlyChange		1407504	1					
ANR	1407603	Identifier	ss		1407504	0					
ANR	1407604	Identifier	EarlyChange		1407504	1					
ANR	1407605	IfStatement	if ( limit_code > encode_max )		1407504	16					
ANR	1407606	Condition	limit_code > encode_max	129:7:4491:4513	1407504	0	True				
ANR	1407607	RelationalExpression	limit_code > encode_max		1407504	0		>			
ANR	1407608	Identifier	limit_code		1407504	0					
ANR	1407609	Identifier	encode_max		1407504	1					
ANR	1407610	Statement	limit_code	129:33:4517:4526	1407504	1	True				
ANR	1407611	Statement	=	129:44:4528:4528	1407504	17	True				
ANR	1407612	IdentifierDeclStatement	encode_max set_limit_code ( ) ;	129:46:4530:4565	1407504	18	True				
ANR	1407613	IdentifierDecl	set_limit_code ( )		1407504	0					
ANR	1407614	IdentifierDeclType	encode_max		1407504	0					
ANR	1407615	Identifier	set_limit_code		1407504	1					
ANR	1407616	IfStatement	if ( ss -> first )		1407504	19					
ANR	1407617	Condition	ss -> first	131:13:4580:4588	1407504	0	True				
ANR	1407618	PtrMemberAccess	ss -> first		1407504	0					
ANR	1407619	Identifier	ss		1407504	0					
ANR	1407620	Identifier	first		1407504	1					
ANR	1407621	CompoundStatement		15:8:532:532	1407504	1					
ANR	1407622	IfStatement	if ( wlimit - q < 2 )		1407504	0					
ANR	1407623	Condition	wlimit - q < 2	133:21:4658:4671	1407504	0	True				
ANR	1407624	RelationalExpression	wlimit - q < 2		1407504	0		<			
ANR	1407625	AdditiveExpression	wlimit - q		1407504	0		-			
ANR	1407626	Identifier	wlimit		1407504	0					
ANR	1407627	Identifier	q		1407504	1					
ANR	1407628	PrimaryExpression	2		1407504	1					
ANR	1407629	ReturnStatement	return 1 ;	134:24:4699:4707	1407504	1	True				
ANR	1407630	PrimaryExpression	1		1407504	0					
ANR	1407631	ExpressionStatement	"q = lzw_put_code ( ss , q , code_reset )"	135:16:4725:4760	1407504	1	True				
ANR	1407632	AssignmentExpression	"q = lzw_put_code ( ss , q , code_reset )"		1407504	0		=			
ANR	1407633	Identifier	q		1407504	0					
ANR	1407634	CallExpression	"lzw_put_code ( ss , q , code_reset )"		1407504	1					
ANR	1407635	Callee	lzw_put_code		1407504	0					
ANR	1407636	Identifier	lzw_put_code		1407504	0					
ANR	1407637	ArgumentList	ss		1407504	1					
ANR	1407638	Argument	ss		1407504	0					
ANR	1407639	Identifier	ss		1407504	0					
ANR	1407640	Argument	q		1407504	1					
ANR	1407641	Identifier	q		1407504	0					
ANR	1407642	Argument	code_reset		1407504	2					
ANR	1407643	Identifier	code_reset		1407504	0					
ANR	1407644	ExpressionStatement	ss -> first = false	136:16:4778:4795	1407504	2	True				
ANR	1407645	AssignmentExpression	ss -> first = false		1407504	0		=			
ANR	1407646	PtrMemberAccess	ss -> first		1407504	0					
ANR	1407647	Identifier	ss		1407504	0					
ANR	1407648	Identifier	first		1407504	1					
ANR	1407649	Identifier	false		1407504	1					
ANR	1407650	WhileStatement	while ( p < rlimit )		1407504	20					
ANR	1407651	Condition	p < rlimit	138:16:4823:4832	1407504	0	True				
ANR	1407652	RelationalExpression	p < rlimit		1407504	0		<			
ANR	1407653	Identifier	p		1407504	0					
ANR	1407654	Identifier	rlimit		1407504	1					
ANR	1407655	CompoundStatement		23:16:809:819	1407504	1					
ANR	1407656	IdentifierDeclStatement	byte c = p [ 1 ] ;	139:10:4846:4859	1407504	0	True				
ANR	1407657	IdentifierDecl	c = p [ 1 ]		1407504	0					
ANR	1407658	IdentifierDeclType	byte		1407504	0					
ANR	1407659	Identifier	c		1407504	1					
ANR	1407660	AssignmentExpression	c = p [ 1 ]		1407504	2		=			
ANR	1407661	Identifier	c		1407504	0					
ANR	1407662	ArrayIndexing	p [ 1 ]		1407504	1					
ANR	1407663	Identifier	p		1407504	0					
ANR	1407664	PrimaryExpression	1		1407504	1					
ANR	1407665	IdentifierDeclStatement	ushort * tp ;	140:16:4877:4887	1407504	1	True				
ANR	1407666	IdentifierDecl	* tp		1407504	0					
ANR	1407667	IdentifierDeclType	ushort *		1407504	0					
ANR	1407668	Identifier	tp		1407504	1					
ANR	1407669	ForStatement	"for ( tp = & table -> hashed [ encode_hash ( code , c ) ] ; ; )"		1407504	2					
ANR	1407670	ForInit	"tp = & table -> hashed [ encode_hash ( code , c ) ] ;"	141:22:4911:4952	1407504	0	True				
ANR	1407671	AssignmentExpression	"tp = & table -> hashed [ encode_hash ( code , c ) ]"		1407504	0		=			
ANR	1407672	Identifier	tp		1407504	0					
ANR	1407673	UnaryOperationExpression	"& table -> hashed [ encode_hash ( code , c ) ]"		1407504	1					
ANR	1407674	UnaryOperator	&		1407504	0					
ANR	1407675	ArrayIndexing	"table -> hashed [ encode_hash ( code , c ) ]"		1407504	1					
ANR	1407676	PtrMemberAccess	table -> hashed		1407504	0					
ANR	1407677	Identifier	table		1407504	0					
ANR	1407678	Identifier	hashed		1407504	1					
ANR	1407679	CallExpression	"encode_hash ( code , c )"		1407504	1					
ANR	1407680	Callee	encode_hash		1407504	0					
ANR	1407681	Identifier	encode_hash		1407504	0					
ANR	1407682	ArgumentList	code		1407504	1					
ANR	1407683	Argument	code		1407504	0					
ANR	1407684	Identifier	code		1407504	0					
ANR	1407685	Argument	c		1407504	1					
ANR	1407686	Identifier	c		1407504	0					
ANR	1407687	CompoundStatement		25:18:908:944	1407504	1					
ANR	1407688	IdentifierDeclStatement	lzw_encode * ep = & table -> encode [ * tp ] ;	142:18:4976:5012	1407504	0	True				
ANR	1407689	IdentifierDecl	* ep = & table -> encode [ * tp ]		1407504	0					
ANR	1407690	IdentifierDeclType	lzw_encode *		1407504	0					
ANR	1407691	Identifier	ep		1407504	1					
ANR	1407692	AssignmentExpression	* ep = & table -> encode [ * tp ]		1407504	2		=			
ANR	1407693	Identifier	ep		1407504	0					
ANR	1407694	UnaryOperationExpression	& table -> encode [ * tp ]		1407504	1					
ANR	1407695	UnaryOperator	&		1407504	0					
ANR	1407696	ArrayIndexing	table -> encode [ * tp ]		1407504	1					
ANR	1407697	PtrMemberAccess	table -> encode		1407504	0					
ANR	1407698	Identifier	table		1407504	0					
ANR	1407699	Identifier	encode		1407504	1					
ANR	1407700	UnaryOperationExpression	* tp		1407504	1					
ANR	1407701	UnaryOperator	*		1407504	0					
ANR	1407702	Identifier	tp		1407504	1					
ANR	1407703	IfStatement	if ( ep -> prefix == code && ep -> datum == c )		1407504	1					
ANR	1407704	Condition	ep -> prefix == code && ep -> datum == c	143:29:5043:5078	1407504	0	True				
ANR	1407705	AndExpression	ep -> prefix == code && ep -> datum == c		1407504	0		&&			
ANR	1407706	EqualityExpression	ep -> prefix == code		1407504	0		==			
ANR	1407707	PtrMemberAccess	ep -> prefix		1407504	0					
ANR	1407708	Identifier	ep		1407504	0					
ANR	1407709	Identifier	prefix		1407504	1					
ANR	1407710	Identifier	code		1407504	1					
ANR	1407711	EqualityExpression	ep -> datum == c		1407504	1		==			
ANR	1407712	PtrMemberAccess	ep -> datum		1407504	0					
ANR	1407713	Identifier	ep		1407504	0					
ANR	1407714	Identifier	datum		1407504	1					
ANR	1407715	Identifier	c		1407504	1					
ANR	1407716	CompoundStatement		27:24:1038:1038	1407504	1					
ANR	1407717	ExpressionStatement	code = * tp	144:26:5108:5118	1407504	0	True				
ANR	1407718	AssignmentExpression	code = * tp		1407504	0		=			
ANR	1407719	Identifier	code		1407504	0					
ANR	1407720	UnaryOperationExpression	* tp		1407504	1					
ANR	1407721	UnaryOperator	*		1407504	0					
ANR	1407722	Identifier	tp		1407504	1					
ANR	1407723	ExpressionStatement	p ++	145:32:5152:5155	1407504	1	True				
ANR	1407724	PostIncDecOperationExpression	p ++		1407504	0					
ANR	1407725	Identifier	p		1407504	0					
ANR	1407726	IncDec	++		1407504	1					
ANR	1407727	BreakStatement	break ;	146:32:5189:5194	1407504	2	True				
ANR	1407728	ElseStatement	else		1407504	0					
ANR	1407729	IfStatement	if ( * tp != code_eod )		1407504	0					
ANR	1407730	Condition	* tp != code_eod	148:34:5256:5270	1407504	0	True				
ANR	1407731	EqualityExpression	* tp != code_eod		1407504	0		!=			
ANR	1407732	UnaryOperationExpression	* tp		1407504	0					
ANR	1407733	UnaryOperator	*		1407504	0					
ANR	1407734	Identifier	tp		1407504	1					
ANR	1407735	Identifier	code_eod		1407504	1					
ANR	1407736	CompoundStatement		32:24:1230:1230	1407504	1					
ANR	1407737	IfStatement	if ( ++ tp == table_end )		1407504	0					
ANR	1407738	Condition	++ tp == table_end	149:31:5305:5321	1407504	0	True				
ANR	1407739	EqualityExpression	++ tp == table_end		1407504	0		==			
ANR	1407740	UnaryExpression	++ tp		1407504	0					
ANR	1407741	IncDec	++		1407504	0					
ANR	1407742	Identifier	tp		1407504	1					
ANR	1407743	Identifier	table_end		1407504	1					
ANR	1407744	ExpressionStatement	tp = & table -> hashed [ 0 ]	150:34:5359:5381	1407504	1	True				
ANR	1407745	AssignmentExpression	tp = & table -> hashed [ 0 ]		1407504	0		=			
ANR	1407746	Identifier	tp		1407504	0					
ANR	1407747	UnaryOperationExpression	& table -> hashed [ 0 ]		1407504	1					
ANR	1407748	UnaryOperator	&		1407504	0					
ANR	1407749	ArrayIndexing	table -> hashed [ 0 ]		1407504	1					
ANR	1407750	PtrMemberAccess	table -> hashed		1407504	0					
ANR	1407751	Identifier	table		1407504	0					
ANR	1407752	Identifier	hashed		1407504	1					
ANR	1407753	PrimaryExpression	0		1407504	1					
ANR	1407754	ElseStatement	else		1407504	0					
ANR	1407755	CompoundStatement		36:24:1412:1412	1407504	0					
ANR	1407756	IfStatement	if ( wlimit - q <= 4 )		1407504	0					
ANR	1407757	Condition	wlimit - q <= 4	154:37:5552:5566	1407504	0	True				
ANR	1407758	RelationalExpression	wlimit - q <= 4		1407504	0		<=			
ANR	1407759	AdditiveExpression	wlimit - q		1407504	0		-			
ANR	1407760	Identifier	wlimit		1407504	0					
ANR	1407761	Identifier	q		1407504	1					
ANR	1407762	PrimaryExpression	4		1407504	1					
ANR	1407763	CompoundStatement		38:32:1534:1534	1407504	1					
ANR	1407764	ExpressionStatement	status = 1	155:34:5604:5614	1407504	0	True				
ANR	1407765	AssignmentExpression	status = 1		1407504	0		=			
ANR	1407766	Identifier	status		1407504	0					
ANR	1407767	PrimaryExpression	1		1407504	1					
ANR	1407768	GotoStatement	goto out ;	156:40:5656:5664	1407504	1	True				
ANR	1407769	Identifier	out		1407504	0					
ANR	1407770	ExpressionStatement	"q = lzw_put_code ( ss , q , code )"	158:32:5732:5761	1407504	1	True				
ANR	1407771	AssignmentExpression	"q = lzw_put_code ( ss , q , code )"		1407504	0		=			
ANR	1407772	Identifier	q		1407504	0					
ANR	1407773	CallExpression	"lzw_put_code ( ss , q , code )"		1407504	1					
ANR	1407774	Callee	lzw_put_code		1407504	0					
ANR	1407775	Identifier	lzw_put_code		1407504	0					
ANR	1407776	ArgumentList	ss		1407504	1					
ANR	1407777	Argument	ss		1407504	0					
ANR	1407778	Identifier	ss		1407504	0					
ANR	1407779	Argument	q		1407504	1					
ANR	1407780	Identifier	q		1407504	0					
ANR	1407781	Argument	code		1407504	2					
ANR	1407782	Identifier	code		1407504	0					
ANR	1407783	IfStatement	if ( ss -> next_code == limit_code )		1407504	2					
ANR	1407784	Condition	ss -> next_code == limit_code	159:37:5800:5826	1407504	0	True				
ANR	1407785	EqualityExpression	ss -> next_code == limit_code		1407504	0		==			
ANR	1407786	PtrMemberAccess	ss -> next_code		1407504	0					
ANR	1407787	Identifier	ss		1407504	0					
ANR	1407788	Identifier	next_code		1407504	1					
ANR	1407789	Identifier	limit_code		1407504	1					
ANR	1407790	CompoundStatement		43:32:1794:1794	1407504	1					
ANR	1407791	IfStatement	if ( ss -> next_code == encode_max )		1407504	0					
ANR	1407792	Condition	ss -> next_code == encode_max	162:45:6007:6033	1407504	0	True				
ANR	1407793	EqualityExpression	ss -> next_code == encode_max		1407504	0		==			
ANR	1407794	PtrMemberAccess	ss -> next_code		1407504	0					
ANR	1407795	Identifier	ss		1407504	0					
ANR	1407796	Identifier	next_code		1407504	1					
ANR	1407797	Identifier	encode_max		1407504	1					
ANR	1407798	CompoundStatement		46:40:2009:2009	1407504	1					
ANR	1407799	ExpressionStatement	"q = lzw_put_code ( ss , q , code_reset )"	163:42:6079:6114	1407504	0	True				
ANR	1407800	AssignmentExpression	"q = lzw_put_code ( ss , q , code_reset )"		1407504	0		=			
ANR	1407801	Identifier	q		1407504	0					
ANR	1407802	CallExpression	"lzw_put_code ( ss , q , code_reset )"		1407504	1					
ANR	1407803	Callee	lzw_put_code		1407504	0					
ANR	1407804	Identifier	lzw_put_code		1407504	0					
ANR	1407805	ArgumentList	ss		1407504	1					
ANR	1407806	Argument	ss		1407504	0					
ANR	1407807	Identifier	ss		1407504	0					
ANR	1407808	Argument	q		1407504	1					
ANR	1407809	Identifier	q		1407504	0					
ANR	1407810	Argument	code_reset		1407504	2					
ANR	1407811	Identifier	code_reset		1407504	0					
ANR	1407812	ExpressionStatement	lzw_reset_encode ( ss )	164:48:6164:6184	1407504	1	True				
ANR	1407813	CallExpression	lzw_reset_encode ( ss )		1407504	0					
ANR	1407814	Callee	lzw_reset_encode		1407504	0					
ANR	1407815	Identifier	lzw_reset_encode		1407504	0					
ANR	1407816	ArgumentList	ss		1407504	1					
ANR	1407817	Argument	ss		1407504	0					
ANR	1407818	Identifier	ss		1407504	0					
ANR	1407819	ExpressionStatement	set_limit_code ( )	165:48:6234:6250	1407504	2	True				
ANR	1407820	CallExpression	set_limit_code ( )		1407504	0					
ANR	1407821	Callee	set_limit_code		1407504	0					
ANR	1407822	Identifier	set_limit_code		1407504	0					
ANR	1407823	ArgumentList			1407504	1					
ANR	1407824	GotoStatement	goto cx ;	166:48:6300:6307	1407504	3	True				
ANR	1407825	Identifier	cx		1407504	0					
ANR	1407826	ExpressionStatement	ss -> code_size ++	168:40:6391:6406	1407504	1	True				
ANR	1407827	PostIncDecOperationExpression	ss -> code_size ++		1407504	0					
ANR	1407828	PtrMemberAccess	ss -> code_size		1407504	0					
ANR	1407829	Identifier	ss		1407504	0					
ANR	1407830	Identifier	code_size		1407504	1					
ANR	1407831	IncDec	++		1407504	1					
ANR	1407832	ExpressionStatement	set_limit_code ( )	169:40:6448:6464	1407504	2	True				
ANR	1407833	CallExpression	set_limit_code ( )		1407504	0					
ANR	1407834	Callee	set_limit_code		1407504	0					
ANR	1407835	Identifier	set_limit_code		1407504	0					
ANR	1407836	ArgumentList			1407504	1					
ANR	1407837	ExpressionStatement	"if_debug3m ( 'W' , ss -> memory , ""[W]encoding 0x%x=0x%x+%c\\n"" , ss -> next_code , code , c )"	171:32:6532:6655	1407504	3	True				
ANR	1407838	CallExpression	"if_debug3m ( 'W' , ss -> memory , ""[W]encoding 0x%x=0x%x+%c\\n"" , ss -> next_code , code , c )"		1407504	0					
ANR	1407839	Callee	if_debug3m		1407504	0					
ANR	1407840	Identifier	if_debug3m		1407504	0					
ANR	1407841	ArgumentList	'W'		1407504	1					
ANR	1407842	Argument	'W'		1407504	0					
ANR	1407843	PrimaryExpression	'W'		1407504	0					
ANR	1407844	Argument	ss -> memory		1407504	1					
ANR	1407845	PtrMemberAccess	ss -> memory		1407504	0					
ANR	1407846	Identifier	ss		1407504	0					
ANR	1407847	Identifier	memory		1407504	1					
ANR	1407848	Argument	"""[W]encoding 0x%x=0x%x+%c\\n"""		1407504	2					
ANR	1407849	PrimaryExpression	"""[W]encoding 0x%x=0x%x+%c\\n"""		1407504	0					
ANR	1407850	Argument	ss -> next_code		1407504	3					
ANR	1407851	PtrMemberAccess	ss -> next_code		1407504	0					
ANR	1407852	Identifier	ss		1407504	0					
ANR	1407853	Identifier	next_code		1407504	1					
ANR	1407854	Argument	code		1407504	4					
ANR	1407855	Identifier	code		1407504	0					
ANR	1407856	Argument	c		1407504	5					
ANR	1407857	Identifier	c		1407504	0					
ANR	1407858	ExpressionStatement	* tp = ss -> next_code ++	173:32:6689:6710	1407504	4	True				
ANR	1407859	AssignmentExpression	* tp = ss -> next_code ++		1407504	0		=			
ANR	1407860	UnaryOperationExpression	* tp		1407504	0					
ANR	1407861	UnaryOperator	*		1407504	0					
ANR	1407862	Identifier	tp		1407504	1					
ANR	1407863	PostIncDecOperationExpression	ss -> next_code ++		1407504	1					
ANR	1407864	PtrMemberAccess	ss -> next_code		1407504	0					
ANR	1407865	Identifier	ss		1407504	0					
ANR	1407866	Identifier	next_code		1407504	1					
ANR	1407867	IncDec	++		1407504	1					
ANR	1407868	ExpressionStatement	ep = & table -> encode [ * tp ]	174:32:6744:6768	1407504	5	True				
ANR	1407869	AssignmentExpression	ep = & table -> encode [ * tp ]		1407504	0		=			
ANR	1407870	Identifier	ep		1407504	0					
ANR	1407871	UnaryOperationExpression	& table -> encode [ * tp ]		1407504	1					
ANR	1407872	UnaryOperator	&		1407504	0					
ANR	1407873	ArrayIndexing	table -> encode [ * tp ]		1407504	1					
ANR	1407874	PtrMemberAccess	table -> encode		1407504	0					
ANR	1407875	Identifier	table		1407504	0					
ANR	1407876	Identifier	encode		1407504	1					
ANR	1407877	UnaryOperationExpression	* tp		1407504	1					
ANR	1407878	UnaryOperator	*		1407504	0					
ANR	1407879	Identifier	tp		1407504	1					
ANR	1407880	ExpressionStatement	ep -> datum = c	175:32:6802:6815	1407504	6	True				
ANR	1407881	AssignmentExpression	ep -> datum = c		1407504	0		=			
ANR	1407882	PtrMemberAccess	ep -> datum		1407504	0					
ANR	1407883	Identifier	ep		1407504	0					
ANR	1407884	Identifier	datum		1407504	1					
ANR	1407885	Identifier	c		1407504	1					
ANR	1407886	ExpressionStatement	ep -> prefix = code	176:32:6849:6866	1407504	7	True				
ANR	1407887	AssignmentExpression	ep -> prefix = code		1407504	0		=			
ANR	1407888	PtrMemberAccess	ep -> prefix		1407504	0					
ANR	1407889	Identifier	ep		1407504	0					
ANR	1407890	Identifier	prefix		1407504	1					
ANR	1407891	Identifier	code		1407504	1					
ANR	1407892	Label	cx :	177:0:6868:6870	1407504	8	True				
ANR	1407893	Identifier	cx		1407504	0					
ANR	1407894	ExpressionStatement	code = code_eod	177:7:6875:6890	1407504	9	True				
ANR	1407895	AssignmentExpression	code = code_eod		1407504	0		=			
ANR	1407896	Identifier	code		1407504	0					
ANR	1407897	Identifier	code_eod		1407504	1					
ANR	1407898	BreakStatement	break ;	178:32:6924:6929	1407504	10	True				
ANR	1407899	IfStatement	if ( last && status == 0 )		1407504	21					
ANR	1407900	Condition	last && status == 0	182:13:6998:7016	1407504	0	True				
ANR	1407901	AndExpression	last && status == 0		1407504	0		&&			
ANR	1407902	Identifier	last		1407504	0					
ANR	1407903	EqualityExpression	status == 0		1407504	1		==			
ANR	1407904	Identifier	status		1407504	0					
ANR	1407905	PrimaryExpression	0		1407504	1					
ANR	1407906	CompoundStatement		66:8:2960:2960	1407504	1					
ANR	1407907	IfStatement	if ( wlimit - q < 4 )		1407504	0					
ANR	1407908	Condition	wlimit - q < 4	183:15:7035:7048	1407504	0	True				
ANR	1407909	RelationalExpression	wlimit - q < 4		1407504	0		<			
ANR	1407910	AdditiveExpression	wlimit - q		1407504	0		-			
ANR	1407911	Identifier	wlimit		1407504	0					
ANR	1407912	Identifier	q		1407504	1					
ANR	1407913	PrimaryExpression	4		1407504	1					
ANR	1407914	ExpressionStatement	status = 1	184:24:7076:7086	1407504	1	True				
ANR	1407915	AssignmentExpression	status = 1		1407504	0		=			
ANR	1407916	Identifier	status		1407504	0					
ANR	1407917	PrimaryExpression	1		1407504	1					
ANR	1407918	ElseStatement	else		1407504	0					
ANR	1407919	CompoundStatement		69:18:3059:3059	1407504	0					
ANR	1407920	IfStatement	if ( code != code_eod )		1407504	0					
ANR	1407921	Condition	code != code_eod	186:25:7134:7149	1407504	0	True				
ANR	1407922	EqualityExpression	code != code_eod		1407504	0		!=			
ANR	1407923	Identifier	code		1407504	0					
ANR	1407924	Identifier	code_eod		1407504	1					
ANR	1407925	CompoundStatement		70:26:3111:3111	1407504	1					
ANR	1407926	ExpressionStatement	"q = lzw_put_code ( ss , q , code )"	187:28:7181:7210	1407504	0	True				
ANR	1407927	AssignmentExpression	"q = lzw_put_code ( ss , q , code )"		1407504	0		=			
ANR	1407928	Identifier	q		1407504	0					
ANR	1407929	CallExpression	"lzw_put_code ( ss , q , code )"		1407504	1					
ANR	1407930	Callee	lzw_put_code		1407504	0					
ANR	1407931	Identifier	lzw_put_code		1407504	0					
ANR	1407932	ArgumentList	ss		1407504	1					
ANR	1407933	Argument	ss		1407504	0					
ANR	1407934	Identifier	ss		1407504	0					
ANR	1407935	Argument	q		1407504	1					
ANR	1407936	Identifier	q		1407504	0					
ANR	1407937	Argument	code		1407504	2					
ANR	1407938	Identifier	code		1407504	0					
ANR	1407939	IfStatement	if ( ss -> next_code == limit_code && ss -> next_code != encode_max )		1407504	1					
ANR	1407940	Condition	ss -> next_code == limit_code && ss -> next_code != encode_max	188:36:7273:7330	1407504	0	True				
ANR	1407941	AndExpression	ss -> next_code == limit_code && ss -> next_code != encode_max		1407504	0		&&			
ANR	1407942	EqualityExpression	ss -> next_code == limit_code		1407504	0		==			
ANR	1407943	PtrMemberAccess	ss -> next_code		1407504	0					
ANR	1407944	Identifier	ss		1407504	0					
ANR	1407945	Identifier	next_code		1407504	1					
ANR	1407946	Identifier	limit_code		1407504	1					
ANR	1407947	EqualityExpression	ss -> next_code != encode_max		1407504	1		!=			
ANR	1407948	PtrMemberAccess	ss -> next_code		1407504	0					
ANR	1407949	Identifier	ss		1407504	0					
ANR	1407950	Identifier	next_code		1407504	1					
ANR	1407951	Identifier	encode_max		1407504	1					
ANR	1407952	ExpressionStatement	ss -> code_size ++	189:36:7369:7384	1407504	1	True				
ANR	1407953	PostIncDecOperationExpression	ss -> code_size ++		1407504	0					
ANR	1407954	PtrMemberAccess	ss -> code_size		1407504	0					
ANR	1407955	Identifier	ss		1407504	0					
ANR	1407956	Identifier	code_size		1407504	1					
ANR	1407957	IncDec	++		1407504	1					
ANR	1407958	ExpressionStatement	"q = lzw_put_code ( ss , q , code_eod )"	191:24:7438:7471	1407504	1	True				
ANR	1407959	AssignmentExpression	"q = lzw_put_code ( ss , q , code_eod )"		1407504	0		=			
ANR	1407960	Identifier	q		1407504	0					
ANR	1407961	CallExpression	"lzw_put_code ( ss , q , code_eod )"		1407504	1					
ANR	1407962	Callee	lzw_put_code		1407504	0					
ANR	1407963	Identifier	lzw_put_code		1407504	0					
ANR	1407964	ArgumentList	ss		1407504	1					
ANR	1407965	Argument	ss		1407504	0					
ANR	1407966	Identifier	ss		1407504	0					
ANR	1407967	Argument	q		1407504	1					
ANR	1407968	Identifier	q		1407504	0					
ANR	1407969	Argument	code_eod		1407504	2					
ANR	1407970	Identifier	code_eod		1407504	0					
ANR	1407971	IfStatement	if ( ss -> bits_left < 8 )		1407504	2					
ANR	1407972	Condition	ss -> bits_left < 8	192:29:7502:7518	1407504	0	True				
ANR	1407973	RelationalExpression	ss -> bits_left < 8		1407504	0		<			
ANR	1407974	PtrMemberAccess	ss -> bits_left		1407504	0					
ANR	1407975	Identifier	ss		1407504	0					
ANR	1407976	Identifier	bits_left		1407504	1					
ANR	1407977	PrimaryExpression	8		1407504	1					
ANR	1407978	ExpressionStatement	* ++ q = ss -> bits << ss -> bits_left	193:26:7548:7580	1407504	1	True				
ANR	1407979	AssignmentExpression	* ++ q = ss -> bits << ss -> bits_left		1407504	0		=			
ANR	1407980	UnaryOperationExpression	* ++ q		1407504	0					
ANR	1407981	UnaryOperator	*		1407504	0					
ANR	1407982	UnaryExpression	++ q		1407504	1					
ANR	1407983	IncDec	++		1407504	0					
ANR	1407984	Identifier	q		1407504	1					
ANR	1407985	ShiftExpression	ss -> bits << ss -> bits_left		1407504	1		<<			
ANR	1407986	PtrMemberAccess	ss -> bits		1407504	0					
ANR	1407987	Identifier	ss		1407504	0					
ANR	1407988	Identifier	bits		1407504	1					
ANR	1407989	PtrMemberAccess	ss -> bits_left		1407504	1					
ANR	1407990	Identifier	ss		1407504	0					
ANR	1407991	Identifier	bits_left		1407504	1					
ANR	1407992	Label	out :	196:0:7630:7633	1407504	22	True				
ANR	1407993	Identifier	out		1407504	0					
ANR	1407994	ExpressionStatement	ss -> prev_code = code	196:5:7635:7655	1407504	23	True				
ANR	1407995	AssignmentExpression	ss -> prev_code = code		1407504	0		=			
ANR	1407996	PtrMemberAccess	ss -> prev_code		1407504	0					
ANR	1407997	Identifier	ss		1407504	0					
ANR	1407998	Identifier	prev_code		1407504	1					
ANR	1407999	Identifier	code		1407504	1					
ANR	1408000	ExpressionStatement	pr -> ptr = p	197:8:7665:7676	1407504	24	True				
ANR	1408001	AssignmentExpression	pr -> ptr = p		1407504	0		=			
ANR	1408002	PtrMemberAccess	pr -> ptr		1407504	0					
ANR	1408003	Identifier	pr		1407504	0					
ANR	1408004	Identifier	ptr		1407504	1					
ANR	1408005	Identifier	p		1407504	1					
ANR	1408006	ExpressionStatement	pw -> ptr = q	198:8:7686:7697	1407504	25	True				
ANR	1408007	AssignmentExpression	pw -> ptr = q		1407504	0		=			
ANR	1408008	PtrMemberAccess	pw -> ptr		1407504	0					
ANR	1408009	Identifier	pw		1407504	0					
ANR	1408010	Identifier	ptr		1407504	1					
ANR	1408011	Identifier	q		1407504	1					
ANR	1408012	ReturnStatement	return status ;	199:8:7707:7720	1407504	26	True				
ANR	1408013	Identifier	status		1407504	0					
ANR	1408014	ReturnType	static int		1407504	1					
ANR	1408015	Identifier	s_LZWE_process		1407504	2					
ANR	1408016	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1407504	3					
ANR	1408017	Parameter	stream_state * st	116:15:3987:4002	1407504	0	True				
ANR	1408018	ParameterType	stream_state *		1407504	0					
ANR	1408019	Identifier	st		1407504	1					
ANR	1408020	Parameter	stream_cursor_read * pr	116:33:4005:4026	1407504	1	True				
ANR	1408021	ParameterType	stream_cursor_read *		1407504	0					
ANR	1408022	Identifier	pr		1407504	1					
ANR	1408023	Parameter	stream_cursor_write * pw	117:2:4031:4053	1407504	2	True				
ANR	1408024	ParameterType	stream_cursor_write *		1407504	0					
ANR	1408025	Identifier	pw		1407504	1					
ANR	1408026	Parameter	bool last	117:27:4056:4064	1407504	3	True				
ANR	1408027	ParameterType	bool		1407504	0					
ANR	1408028	Identifier	last		1407504	1					
ANR	1408029	CFGEntryNode	ENTRY		1407504		True				
ANR	1408030	CFGExitNode	EXIT		1407504		True				
ANR	1408031	InfiniteForNode	true		1407504		True				
ANR	1408032	Symbol	encode_hash		1407504						
ANR	1408033	Symbol	pr		1407504						
ANR	1408034	Symbol	* ss		1407504						
ANR	1408035	Symbol	pw		1407504						
ANR	1408036	Symbol	ss -> EarlyChange		1407504						
ANR	1408037	Symbol	set_limit_code		1407504						
ANR	1408038	Symbol	pr -> limit		1407504						
ANR	1408039	Symbol	code_reset		1407504						
ANR	1408040	Symbol	encode_max		1407504						
ANR	1408041	Symbol	ep -> prefix		1407504						
ANR	1408042	Symbol	table_end		1407504						
ANR	1408043	Symbol	ss -> table		1407504						
ANR	1408044	Symbol	ss -> code_size		1407504						
ANR	1408045	Symbol	wlimit		1407504						
ANR	1408046	Symbol	pr -> ptr		1407504						
ANR	1408047	Symbol	ep -> datum		1407504						
ANR	1408048	Symbol	pw -> ptr		1407504						
ANR	1408049	Symbol	* tp		1407504						
ANR	1408050	Symbol	rlimit		1407504						
ANR	1408051	Symbol	last		1407504						
ANR	1408052	Symbol	ss -> prev_code		1407504						
ANR	1408053	Symbol	* table		1407504						
ANR	1408054	Symbol	* pr		1407504						
ANR	1408055	Symbol	ep		1407504						
ANR	1408056	Symbol	* pw		1407504						
ANR	1408057	Symbol	ss -> next_code		1407504						
ANR	1408058	Symbol	status		1407504						
ANR	1408059	Symbol	ss -> memory		1407504						
ANR	1408060	Symbol	ss -> bits		1407504						
ANR	1408061	Symbol	code		1407504						
ANR	1408062	Symbol	limit_code		1407504						
ANR	1408063	Symbol	ss -> first		1407504						
ANR	1408064	Symbol	pw -> limit		1407504						
ANR	1408065	Symbol	ss -> bits_left		1407504						
ANR	1408066	Symbol	table		1407504						
ANR	1408067	Symbol	ss		1407504						
ANR	1408068	Symbol	code_eod		1407504						
ANR	1408069	Symbol	st		1407504						
ANR	1408070	Symbol	c		1407504						
ANR	1408071	Symbol	* ++ q		1407504						
ANR	1408072	Symbol	hash_size		1407504						
ANR	1408073	Symbol	false		1407504						
ANR	1408074	Symbol	p		1407504						
ANR	1408075	Symbol	q		1407504						
ANR	1408076	Symbol	* ep		1407504						
ANR	1408077	Symbol	table -> encode		1407504						
ANR	1408078	Symbol	ss -> table . encode		1407504						
ANR	1408079	Symbol	* p		1407504						
ANR	1408080	Symbol	* q		1407504						
ANR	1408081	Symbol	lzw_put_code		1407504						
ANR	1408082	Symbol	tp		1407504						
ANR	1408083	Symbol	table -> hashed		1407504						
ANR	1408084	DeclStmt									
ANR	1408085	Decl							const stream_template	const stream_template	s_LZWE_template
