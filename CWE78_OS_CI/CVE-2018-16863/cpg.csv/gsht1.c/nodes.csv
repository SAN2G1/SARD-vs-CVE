command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5120079	File	data/converged/CVE-2018-16863_ghostpdl/gsht1.c								
ANR	5120080	DeclStmt									
ANR	5120081	Decl							void	"void ( gs_gstate * , gx_transfer_map * , double )"	load_transfer_map
ANR	5120082	DeclStmt									
ANR	5120083	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_spot_halftone * , gs_memory_t * )"	process_spot
ANR	5120084	DeclStmt									
ANR	5120085	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_threshold_halftone * , gs_memory_t * )"	process_threshold
ANR	5120086	DeclStmt									
ANR	5120087	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_threshold2_halftone * , gs_memory_t * )"	process_threshold2
ANR	5120088	DeclStmt									
ANR	5120089	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_client_order_halftone * , gs_memory_t * )"	process_client_order
ANR	5120090	Function	gs_setcolorscreen	105:0:3646:3882							
ANR	5120091	FunctionDef	"gs_setcolorscreen (gs_gstate * pgs , gs_colorscreen_halftone * pht)"		5120090	0					
ANR	5120092	CompoundStatement		110:0:3753:3882	5120090	0					
ANR	5120093	IdentifierDeclStatement	gs_halftone ht ;	111:4:3759:3773	5120090	0	True				
ANR	5120094	IdentifierDecl	ht		5120090	0					
ANR	5120095	IdentifierDeclType	gs_halftone		5120090	0					
ANR	5120096	Identifier	ht		5120090	1					
ANR	5120097	ExpressionStatement	ht . type = ht_type_colorscreen	113:4:3780:3809	5120090	1	True				
ANR	5120098	AssignmentExpression	ht . type = ht_type_colorscreen		5120090	0		=			
ANR	5120099	MemberAccess	ht . type		5120090	0					
ANR	5120100	Identifier	ht		5120090	0					
ANR	5120101	Identifier	type		5120090	1					
ANR	5120102	Identifier	ht_type_colorscreen		5120090	1					
ANR	5120103	ExpressionStatement	ht . params . colorscreen = * pht	114:4:3815:3843	5120090	2	True				
ANR	5120104	AssignmentExpression	ht . params . colorscreen = * pht		5120090	0		=			
ANR	5120105	MemberAccess	ht . params . colorscreen		5120090	0					
ANR	5120106	MemberAccess	ht . params		5120090	0					
ANR	5120107	Identifier	ht		5120090	0					
ANR	5120108	Identifier	params		5120090	1					
ANR	5120109	Identifier	colorscreen		5120090	1					
ANR	5120110	UnaryOperationExpression	* pht		5120090	1					
ANR	5120111	UnaryOperator	*		5120090	0					
ANR	5120112	Identifier	pht		5120090	1					
ANR	5120113	ReturnStatement	"return gs_sethalftone ( pgs , & ht ) ;"	115:4:3849:3880	5120090	3	True				
ANR	5120114	CallExpression	"gs_sethalftone ( pgs , & ht )"		5120090	0					
ANR	5120115	Callee	gs_sethalftone		5120090	0					
ANR	5120116	Identifier	gs_sethalftone		5120090	0					
ANR	5120117	ArgumentList	pgs		5120090	1					
ANR	5120118	Argument	pgs		5120090	0					
ANR	5120119	Identifier	pgs		5120090	0					
ANR	5120120	Argument	& ht		5120090	1					
ANR	5120121	UnaryOperationExpression	& ht		5120090	0					
ANR	5120122	UnaryOperator	&		5120090	0					
ANR	5120123	Identifier	ht		5120090	1					
ANR	5120124	ReturnType	RELOC_PTRS_END int		5120090	1					
ANR	5120125	Identifier	gs_setcolorscreen		5120090	2					
ANR	5120126	ParameterList	"gs_gstate * pgs , gs_colorscreen_halftone * pht"		5120090	3					
ANR	5120127	Parameter	gs_gstate * pgs	109:18:3705:3719	5120090	0	True				
ANR	5120128	ParameterType	gs_gstate *		5120090	0					
ANR	5120129	Identifier	pgs		5120090	1					
ANR	5120130	Parameter	gs_colorscreen_halftone * pht	109:35:3722:3750	5120090	1	True				
ANR	5120131	ParameterType	gs_colorscreen_halftone *		5120090	0					
ANR	5120132	Identifier	pht		5120090	1					
ANR	5120133	CFGEntryNode	ENTRY		5120090		True				
ANR	5120134	CFGExitNode	EXIT		5120090		True				
ANR	5120135	Symbol	ht . params . colorscreen		5120090						
ANR	5120136	Symbol	ht . type		5120090						
ANR	5120137	Symbol	* pht		5120090						
ANR	5120138	Symbol	gs_sethalftone		5120090						
ANR	5120139	Symbol	& ht		5120090						
ANR	5120140	Symbol	ht . params		5120090						
ANR	5120141	Symbol	ht_type_colorscreen		5120090						
ANR	5120142	Symbol	ht		5120090						
ANR	5120143	Symbol	pgs		5120090						
ANR	5120144	Symbol	pht		5120090						
ANR	5120145	Function	gs_currentcolorscreen	119:0:3910:4517							
ANR	5120146	FunctionDef	"gs_currentcolorscreen (gs_gstate * pgs , gs_colorscreen_halftone * pht)"		5120145	0					
ANR	5120147	CompoundStatement		121:0:3984:4517	5120145	0					
ANR	5120148	IdentifierDeclStatement	int code ;	122:4:3990:3998	5120145	0	True				
ANR	5120149	IdentifierDecl	code		5120145	0					
ANR	5120150	IdentifierDeclType	int		5120145	0					
ANR	5120151	Identifier	code		5120145	1					
ANR	5120152	SwitchStatement	switch ( pgs -> halftone -> type )		5120145	1					
ANR	5120153	Condition	pgs -> halftone -> type	124:12:4013:4031	5120145	0	True				
ANR	5120154	PtrMemberAccess	pgs -> halftone -> type		5120145	0					
ANR	5120155	PtrMemberAccess	pgs -> halftone		5120145	0					
ANR	5120156	Identifier	pgs		5120145	0					
ANR	5120157	Identifier	halftone		5120145	1					
ANR	5120158	Identifier	type		5120145	1					
ANR	5120159	CompoundStatement		4:33:49:49	5120145	1					
ANR	5120160	Label	case ht_type_colorscreen :	125:8:4044:4068	5120145	0	True				
ANR	5120161	Identifier	ht_type_colorscreen		5120145	0					
ANR	5120162	ExpressionStatement	* pht = pgs -> halftone -> params . colorscreen	126:12:4082:4122	5120145	1	True				
ANR	5120163	AssignmentExpression	* pht = pgs -> halftone -> params . colorscreen		5120145	0		=			
ANR	5120164	UnaryOperationExpression	* pht		5120145	0					
ANR	5120165	UnaryOperator	*		5120145	0					
ANR	5120166	Identifier	pht		5120145	1					
ANR	5120167	MemberAccess	pgs -> halftone -> params . colorscreen		5120145	1					
ANR	5120168	PtrMemberAccess	pgs -> halftone -> params		5120145	0					
ANR	5120169	PtrMemberAccess	pgs -> halftone		5120145	0					
ANR	5120170	Identifier	pgs		5120145	0					
ANR	5120171	Identifier	halftone		5120145	1					
ANR	5120172	Identifier	params		5120145	1					
ANR	5120173	Identifier	colorscreen		5120145	1					
ANR	5120174	ReturnStatement	return 0 ;	127:12:4136:4144	5120145	2	True				
ANR	5120175	PrimaryExpression	0		5120145	0					
ANR	5120176	Label	default :	128:8:4154:4161	5120145	3	True				
ANR	5120177	Identifier	default		5120145	0					
ANR	5120178	ExpressionStatement	"code = gs_currentscreen ( pgs , & pht -> screens . colored . gray )"	129:12:4175:4231	5120145	4	True				
ANR	5120179	AssignmentExpression	"code = gs_currentscreen ( pgs , & pht -> screens . colored . gray )"		5120145	0		=			
ANR	5120180	Identifier	code		5120145	0					
ANR	5120181	CallExpression	"gs_currentscreen ( pgs , & pht -> screens . colored . gray )"		5120145	1					
ANR	5120182	Callee	gs_currentscreen		5120145	0					
ANR	5120183	Identifier	gs_currentscreen		5120145	0					
ANR	5120184	ArgumentList	pgs		5120145	1					
ANR	5120185	Argument	pgs		5120145	0					
ANR	5120186	Identifier	pgs		5120145	0					
ANR	5120187	Argument	& pht -> screens . colored . gray		5120145	1					
ANR	5120188	UnaryOperationExpression	& pht -> screens . colored . gray		5120145	0					
ANR	5120189	UnaryOperator	&		5120145	0					
ANR	5120190	MemberAccess	pht -> screens . colored . gray		5120145	1					
ANR	5120191	MemberAccess	pht -> screens . colored		5120145	0					
ANR	5120192	PtrMemberAccess	pht -> screens		5120145	0					
ANR	5120193	Identifier	pht		5120145	0					
ANR	5120194	Identifier	screens		5120145	1					
ANR	5120195	Identifier	colored		5120145	1					
ANR	5120196	Identifier	gray		5120145	1					
ANR	5120197	IfStatement	if ( code < 0 )		5120145	5					
ANR	5120198	Condition	code < 0	130:16:4249:4256	5120145	0	True				
ANR	5120199	RelationalExpression	code < 0		5120145	0		<			
ANR	5120200	Identifier	code		5120145	0					
ANR	5120201	PrimaryExpression	0		5120145	1					
ANR	5120202	ReturnStatement	return code ;	131:16:4275:4286	5120145	1	True				
ANR	5120203	Identifier	code		5120145	0					
ANR	5120204	ExpressionStatement	pht -> screens . colored . red = pht -> screens . colored . gray	132:12:4300:4352	5120145	6	True				
ANR	5120205	AssignmentExpression	pht -> screens . colored . red = pht -> screens . colored . gray		5120145	0		=			
ANR	5120206	MemberAccess	pht -> screens . colored . red		5120145	0					
ANR	5120207	MemberAccess	pht -> screens . colored		5120145	0					
ANR	5120208	PtrMemberAccess	pht -> screens		5120145	0					
ANR	5120209	Identifier	pht		5120145	0					
ANR	5120210	Identifier	screens		5120145	1					
ANR	5120211	Identifier	colored		5120145	1					
ANR	5120212	Identifier	red		5120145	1					
ANR	5120213	MemberAccess	pht -> screens . colored . gray		5120145	1					
ANR	5120214	MemberAccess	pht -> screens . colored		5120145	0					
ANR	5120215	PtrMemberAccess	pht -> screens		5120145	0					
ANR	5120216	Identifier	pht		5120145	0					
ANR	5120217	Identifier	screens		5120145	1					
ANR	5120218	Identifier	colored		5120145	1					
ANR	5120219	Identifier	gray		5120145	1					
ANR	5120220	ExpressionStatement	pht -> screens . colored . green = pht -> screens . colored . gray	133:12:4366:4420	5120145	7	True				
ANR	5120221	AssignmentExpression	pht -> screens . colored . green = pht -> screens . colored . gray		5120145	0		=			
ANR	5120222	MemberAccess	pht -> screens . colored . green		5120145	0					
ANR	5120223	MemberAccess	pht -> screens . colored		5120145	0					
ANR	5120224	PtrMemberAccess	pht -> screens		5120145	0					
ANR	5120225	Identifier	pht		5120145	0					
ANR	5120226	Identifier	screens		5120145	1					
ANR	5120227	Identifier	colored		5120145	1					
ANR	5120228	Identifier	green		5120145	1					
ANR	5120229	MemberAccess	pht -> screens . colored . gray		5120145	1					
ANR	5120230	MemberAccess	pht -> screens . colored		5120145	0					
ANR	5120231	PtrMemberAccess	pht -> screens		5120145	0					
ANR	5120232	Identifier	pht		5120145	0					
ANR	5120233	Identifier	screens		5120145	1					
ANR	5120234	Identifier	colored		5120145	1					
ANR	5120235	Identifier	gray		5120145	1					
ANR	5120236	ExpressionStatement	pht -> screens . colored . blue = pht -> screens . colored . gray	134:12:4434:4487	5120145	8	True				
ANR	5120237	AssignmentExpression	pht -> screens . colored . blue = pht -> screens . colored . gray		5120145	0		=			
ANR	5120238	MemberAccess	pht -> screens . colored . blue		5120145	0					
ANR	5120239	MemberAccess	pht -> screens . colored		5120145	0					
ANR	5120240	PtrMemberAccess	pht -> screens		5120145	0					
ANR	5120241	Identifier	pht		5120145	0					
ANR	5120242	Identifier	screens		5120145	1					
ANR	5120243	Identifier	colored		5120145	1					
ANR	5120244	Identifier	blue		5120145	1					
ANR	5120245	MemberAccess	pht -> screens . colored . gray		5120145	1					
ANR	5120246	MemberAccess	pht -> screens . colored		5120145	0					
ANR	5120247	PtrMemberAccess	pht -> screens		5120145	0					
ANR	5120248	Identifier	pht		5120145	0					
ANR	5120249	Identifier	screens		5120145	1					
ANR	5120250	Identifier	colored		5120145	1					
ANR	5120251	Identifier	gray		5120145	1					
ANR	5120252	ReturnStatement	return 0 ;	135:12:4501:4509	5120145	9	True				
ANR	5120253	PrimaryExpression	0		5120145	0					
ANR	5120254	ReturnType	int		5120145	1					
ANR	5120255	Identifier	gs_currentcolorscreen		5120145	2					
ANR	5120256	ParameterList	"gs_gstate * pgs , gs_colorscreen_halftone * pht"		5120145	3					
ANR	5120257	Parameter	gs_gstate * pgs	120:22:3936:3950	5120145	0	True				
ANR	5120258	ParameterType	gs_gstate *		5120145	0					
ANR	5120259	Identifier	pgs		5120145	1					
ANR	5120260	Parameter	gs_colorscreen_halftone * pht	120:39:3953:3981	5120145	1	True				
ANR	5120261	ParameterType	gs_colorscreen_halftone *		5120145	0					
ANR	5120262	Identifier	pht		5120145	1					
ANR	5120263	CFGEntryNode	ENTRY		5120145		True				
ANR	5120264	CFGExitNode	EXIT		5120145		True				
ANR	5120265	Symbol	pgs -> halftone -> type		5120145						
ANR	5120266	Symbol	gs_currentscreen		5120145						
ANR	5120267	Symbol	code		5120145						
ANR	5120268	Symbol	* pgs		5120145						
ANR	5120269	Symbol	* pht		5120145						
ANR	5120270	Symbol	pht -> screens . colored . gray		5120145						
ANR	5120271	Symbol	pht -> screens . colored		5120145						
ANR	5120272	Symbol	pgs -> halftone -> params		5120145						
ANR	5120273	Symbol	pht -> screens . colored . blue		5120145						
ANR	5120274	Symbol	* * pgs		5120145						
ANR	5120275	Symbol	& pht -> screens . colored . gray		5120145						
ANR	5120276	Symbol	pht -> screens . colored . red		5120145						
ANR	5120277	Symbol	& pht -> screens . colored		5120145						
ANR	5120278	Symbol	& pht -> screens		5120145						
ANR	5120279	Symbol	pht -> screens		5120145						
ANR	5120280	Symbol	pgs -> halftone -> params . colorscreen		5120145						
ANR	5120281	Symbol	pgs -> halftone		5120145						
ANR	5120282	Symbol	pht -> screens . colored . green		5120145						
ANR	5120283	Symbol	pgs		5120145						
ANR	5120284	Symbol	pht		5120145						
ANR	5120285	Symbol	* pgs -> halftone		5120145						
ANR	5120286	Function	gs_sethalftone	140:0:4566:4738							
ANR	5120287	FunctionDef	"gs_sethalftone (gs_gstate * pgs , gs_halftone * pht)"		5120286	0					
ANR	5120288	CompoundStatement		142:0:4621:4738	5120286	0					
ANR	5120289	IdentifierDeclStatement	gs_halftone ht ;	143:4:4627:4641	5120286	0	True				
ANR	5120290	IdentifierDecl	ht		5120286	0					
ANR	5120291	IdentifierDeclType	gs_halftone		5120286	0					
ANR	5120292	Identifier	ht		5120286	1					
ANR	5120293	ExpressionStatement	ht = * pht	145:4:4648:4657	5120286	1	True				
ANR	5120294	AssignmentExpression	ht = * pht		5120286	0		=			
ANR	5120295	Identifier	ht		5120286	0					
ANR	5120296	UnaryOperationExpression	* pht		5120286	1					
ANR	5120297	UnaryOperator	*		5120286	0					
ANR	5120298	Identifier	pht		5120286	1					
ANR	5120299	ExpressionStatement	ht . rc . memory = pgs -> memory	146:4:4663:4689	5120286	2	True				
ANR	5120300	AssignmentExpression	ht . rc . memory = pgs -> memory		5120286	0		=			
ANR	5120301	MemberAccess	ht . rc . memory		5120286	0					
ANR	5120302	MemberAccess	ht . rc		5120286	0					
ANR	5120303	Identifier	ht		5120286	0					
ANR	5120304	Identifier	rc		5120286	1					
ANR	5120305	Identifier	memory		5120286	1					
ANR	5120306	PtrMemberAccess	pgs -> memory		5120286	1					
ANR	5120307	Identifier	pgs		5120286	0					
ANR	5120308	Identifier	memory		5120286	1					
ANR	5120309	ReturnStatement	"return gs_sethalftone_allocated ( pgs , & ht ) ;"	147:4:4695:4736	5120286	3	True				
ANR	5120310	CallExpression	"gs_sethalftone_allocated ( pgs , & ht )"		5120286	0					
ANR	5120311	Callee	gs_sethalftone_allocated		5120286	0					
ANR	5120312	Identifier	gs_sethalftone_allocated		5120286	0					
ANR	5120313	ArgumentList	pgs		5120286	1					
ANR	5120314	Argument	pgs		5120286	0					
ANR	5120315	Identifier	pgs		5120286	0					
ANR	5120316	Argument	& ht		5120286	1					
ANR	5120317	UnaryOperationExpression	& ht		5120286	0					
ANR	5120318	UnaryOperator	&		5120286	0					
ANR	5120319	Identifier	ht		5120286	1					
ANR	5120320	ReturnType	int		5120286	1					
ANR	5120321	Identifier	gs_sethalftone		5120286	2					
ANR	5120322	ParameterList	"gs_gstate * pgs , gs_halftone * pht"		5120286	3					
ANR	5120323	Parameter	gs_gstate * pgs	141:15:4585:4599	5120286	0	True				
ANR	5120324	ParameterType	gs_gstate *		5120286	0					
ANR	5120325	Identifier	pgs		5120286	1					
ANR	5120326	Parameter	gs_halftone * pht	141:32:4602:4618	5120286	1	True				
ANR	5120327	ParameterType	gs_halftone *		5120286	0					
ANR	5120328	Identifier	pht		5120286	1					
ANR	5120329	CFGEntryNode	ENTRY		5120286		True				
ANR	5120330	CFGExitNode	EXIT		5120286		True				
ANR	5120331	Symbol	gs_sethalftone_allocated		5120286						
ANR	5120332	Symbol	ht . rc		5120286						
ANR	5120333	Symbol	* pht		5120286						
ANR	5120334	Symbol	* pgs		5120286						
ANR	5120335	Symbol	& ht		5120286						
ANR	5120336	Symbol	ht		5120286						
ANR	5120337	Symbol	pgs		5120286						
ANR	5120338	Symbol	pht		5120286						
ANR	5120339	Symbol	pgs -> memory		5120286						
ANR	5120340	Symbol	ht . rc . memory		5120286						
ANR	5120341	Function	gs_sethalftone_allocated	149:0:4740:5108							
ANR	5120342	FunctionDef	"gs_sethalftone_allocated (gs_gstate * pgs , gs_halftone * pht)"		5120341	0					
ANR	5120343	CompoundStatement		151:0:4805:5108	5120341	0					
ANR	5120344	IdentifierDeclStatement	gx_device_halftone dev_ht ;	152:4:4811:4836	5120341	0	True				
ANR	5120345	IdentifierDecl	dev_ht		5120341	0					
ANR	5120346	IdentifierDeclType	gx_device_halftone		5120341	0					
ANR	5120347	Identifier	dev_ht		5120341	1					
ANR	5120348	IdentifierDeclStatement	"int code = gs_sethalftone_prepare ( pgs , pht , & dev_ht ) ;"	153:4:4842:4894	5120341	1	True				
ANR	5120349	IdentifierDecl	"code = gs_sethalftone_prepare ( pgs , pht , & dev_ht )"		5120341	0					
ANR	5120350	IdentifierDeclType	int		5120341	0					
ANR	5120351	Identifier	code		5120341	1					
ANR	5120352	AssignmentExpression	"code = gs_sethalftone_prepare ( pgs , pht , & dev_ht )"		5120341	2		=			
ANR	5120353	Identifier	code		5120341	0					
ANR	5120354	CallExpression	"gs_sethalftone_prepare ( pgs , pht , & dev_ht )"		5120341	1					
ANR	5120355	Callee	gs_sethalftone_prepare		5120341	0					
ANR	5120356	Identifier	gs_sethalftone_prepare		5120341	0					
ANR	5120357	ArgumentList	pgs		5120341	1					
ANR	5120358	Argument	pgs		5120341	0					
ANR	5120359	Identifier	pgs		5120341	0					
ANR	5120360	Argument	pht		5120341	1					
ANR	5120361	Identifier	pht		5120341	0					
ANR	5120362	Argument	& dev_ht		5120341	2					
ANR	5120363	UnaryOperationExpression	& dev_ht		5120341	0					
ANR	5120364	UnaryOperator	&		5120341	0					
ANR	5120365	Identifier	dev_ht		5120341	1					
ANR	5120366	IfStatement	if ( code < 0 )		5120341	2					
ANR	5120367	Condition	code < 0	155:8:4905:4912	5120341	0	True				
ANR	5120368	RelationalExpression	code < 0		5120341	0		<			
ANR	5120369	Identifier	code		5120341	0					
ANR	5120370	PrimaryExpression	0		5120341	1					
ANR	5120371	ReturnStatement	return code ;	156:8:4923:4934	5120341	1	True				
ANR	5120372	Identifier	code		5120341	0					
ANR	5120373	ExpressionStatement	dev_ht . rc . memory = pht -> rc . memory	157:4:4940:4973	5120341	3	True				
ANR	5120374	AssignmentExpression	dev_ht . rc . memory = pht -> rc . memory		5120341	0		=			
ANR	5120375	MemberAccess	dev_ht . rc . memory		5120341	0					
ANR	5120376	MemberAccess	dev_ht . rc		5120341	0					
ANR	5120377	Identifier	dev_ht		5120341	0					
ANR	5120378	Identifier	rc		5120341	1					
ANR	5120379	Identifier	memory		5120341	1					
ANR	5120380	MemberAccess	pht -> rc . memory		5120341	1					
ANR	5120381	PtrMemberAccess	pht -> rc		5120341	0					
ANR	5120382	Identifier	pht		5120341	0					
ANR	5120383	Identifier	rc		5120341	1					
ANR	5120384	Identifier	memory		5120341	1					
ANR	5120385	IfStatement	"if ( ( code = gx_ht_install ( pgs , pht , & dev_ht ) ) < 0 )"		5120341	4					
ANR	5120386	Condition	"( code = gx_ht_install ( pgs , pht , & dev_ht ) ) < 0"	158:8:4983:5027	5120341	0	True				
ANR	5120387	RelationalExpression	"( code = gx_ht_install ( pgs , pht , & dev_ht ) ) < 0"		5120341	0		<			
ANR	5120388	AssignmentExpression	"code = gx_ht_install ( pgs , pht , & dev_ht )"		5120341	0		=			
ANR	5120389	Identifier	code		5120341	0					
ANR	5120390	CallExpression	"gx_ht_install ( pgs , pht , & dev_ht )"		5120341	1					
ANR	5120391	Callee	gx_ht_install		5120341	0					
ANR	5120392	Identifier	gx_ht_install		5120341	0					
ANR	5120393	ArgumentList	pgs		5120341	1					
ANR	5120394	Argument	pgs		5120341	0					
ANR	5120395	Identifier	pgs		5120341	0					
ANR	5120396	Argument	pht		5120341	1					
ANR	5120397	Identifier	pht		5120341	0					
ANR	5120398	Argument	& dev_ht		5120341	2					
ANR	5120399	UnaryOperationExpression	& dev_ht		5120341	0					
ANR	5120400	UnaryOperator	&		5120341	0					
ANR	5120401	Identifier	dev_ht		5120341	1					
ANR	5120402	PrimaryExpression	0		5120341	1					
ANR	5120403	ExpressionStatement	"gx_device_halftone_release ( & dev_ht , pht -> rc . memory )"	159:8:5038:5089	5120341	1	True				
ANR	5120404	CallExpression	"gx_device_halftone_release ( & dev_ht , pht -> rc . memory )"		5120341	0					
ANR	5120405	Callee	gx_device_halftone_release		5120341	0					
ANR	5120406	Identifier	gx_device_halftone_release		5120341	0					
ANR	5120407	ArgumentList	& dev_ht		5120341	1					
ANR	5120408	Argument	& dev_ht		5120341	0					
ANR	5120409	UnaryOperationExpression	& dev_ht		5120341	0					
ANR	5120410	UnaryOperator	&		5120341	0					
ANR	5120411	Identifier	dev_ht		5120341	1					
ANR	5120412	Argument	pht -> rc . memory		5120341	1					
ANR	5120413	MemberAccess	pht -> rc . memory		5120341	0					
ANR	5120414	PtrMemberAccess	pht -> rc		5120341	0					
ANR	5120415	Identifier	pht		5120341	0					
ANR	5120416	Identifier	rc		5120341	1					
ANR	5120417	Identifier	memory		5120341	1					
ANR	5120418	ReturnStatement	return code ;	160:4:5095:5106	5120341	5	True				
ANR	5120419	Identifier	code		5120341	0					
ANR	5120420	ReturnType	int		5120341	1					
ANR	5120421	Identifier	gs_sethalftone_allocated		5120341	2					
ANR	5120422	ParameterList	"gs_gstate * pgs , gs_halftone * pht"		5120341	3					
ANR	5120423	Parameter	gs_gstate * pgs	150:25:4769:4783	5120341	0	True				
ANR	5120424	ParameterType	gs_gstate *		5120341	0					
ANR	5120425	Identifier	pgs		5120341	1					
ANR	5120426	Parameter	gs_halftone * pht	150:42:4786:4802	5120341	1	True				
ANR	5120427	ParameterType	gs_halftone *		5120341	0					
ANR	5120428	Identifier	pht		5120341	1					
ANR	5120429	CFGEntryNode	ENTRY		5120341		True				
ANR	5120430	CFGExitNode	EXIT		5120341		True				
ANR	5120431	Symbol	dev_ht . rc		5120341						
ANR	5120432	Symbol	code		5120341						
ANR	5120433	Symbol	pht -> rc		5120341						
ANR	5120434	Symbol	pht -> rc . memory		5120341						
ANR	5120435	Symbol	* pht		5120341						
ANR	5120436	Symbol	gs_sethalftone_prepare		5120341						
ANR	5120437	Symbol	gx_ht_install		5120341						
ANR	5120438	Symbol	dev_ht		5120341						
ANR	5120439	Symbol	pgs		5120341						
ANR	5120440	Symbol	pht		5120341						
ANR	5120441	Symbol	dev_ht . rc . memory		5120341						
ANR	5120442	Symbol	& dev_ht		5120341						
ANR	5120443	Function	gs_sethalftone_prepare	164:0:5161:11626							
ANR	5120444	FunctionDef	"gs_sethalftone_prepare (gs_gstate * pgs , gs_halftone * pht , gx_device_halftone * pdht)"		5120443	0					
ANR	5120445	CompoundStatement		167:0:5274:11626	5120443	0					
ANR	5120446	IdentifierDeclStatement	gs_memory_t * mem = pht -> rc . memory ;	168:4:5280:5313	5120443	0	True				
ANR	5120447	IdentifierDecl	* mem = pht -> rc . memory		5120443	0					
ANR	5120448	IdentifierDeclType	gs_memory_t *		5120443	0					
ANR	5120449	Identifier	mem		5120443	1					
ANR	5120450	AssignmentExpression	* mem = pht -> rc . memory		5120443	2		=			
ANR	5120451	Identifier	mem		5120443	0					
ANR	5120452	MemberAccess	pht -> rc . memory		5120443	1					
ANR	5120453	PtrMemberAccess	pht -> rc		5120443	0					
ANR	5120454	Identifier	pht		5120443	0					
ANR	5120455	Identifier	rc		5120443	1					
ANR	5120456	Identifier	memory		5120443	1					
ANR	5120457	IdentifierDeclStatement	gx_ht_order_component * pocs = 0 ;	169:4:5319:5350	5120443	1	True				
ANR	5120458	IdentifierDecl	* pocs = 0		5120443	0					
ANR	5120459	IdentifierDeclType	gx_ht_order_component *		5120443	0					
ANR	5120460	Identifier	pocs		5120443	1					
ANR	5120461	AssignmentExpression	* pocs = 0		5120443	2		=			
ANR	5120462	Identifier	pocs		5120443	0					
ANR	5120463	PrimaryExpression	0		5120443	1					
ANR	5120464	IdentifierDeclStatement	int code = 0 ;	170:4:5356:5368	5120443	2	True				
ANR	5120465	IdentifierDecl	code = 0		5120443	0					
ANR	5120466	IdentifierDeclType	int		5120443	0					
ANR	5120467	Identifier	code		5120443	1					
ANR	5120468	AssignmentExpression	code = 0		5120443	2		=			
ANR	5120469	Identifier	code		5120443	0					
ANR	5120470	PrimaryExpression	0		5120443	1					
ANR	5120471	SwitchStatement	switch ( pht -> type )		5120443	3					
ANR	5120472	Condition	pht -> type	172:12:5383:5391	5120443	0	True				
ANR	5120473	PtrMemberAccess	pht -> type		5120443	0					
ANR	5120474	Identifier	pht		5120443	0					
ANR	5120475	Identifier	type		5120443	1					
ANR	5120476	CompoundStatement		6:23:119:119	5120443	1					
ANR	5120477	Label	case ht_type_colorscreen :	173:8:5404:5428	5120443	0	True				
ANR	5120478	Identifier	ht_type_colorscreen		5120443	0					
ANR	5120479	CompoundStatement		13:16:434:439	5120443	1					
ANR	5120480	IdentifierDeclStatement	gs_screen_halftone * phc = pht -> params . colorscreen . screens . indexed ;	175:16:5460:5545	5120443	0	True				
ANR	5120481	IdentifierDecl	* phc = pht -> params . colorscreen . screens . indexed		5120443	0					
ANR	5120482	IdentifierDeclType	gs_screen_halftone *		5120443	0					
ANR	5120483	Identifier	phc		5120443	1					
ANR	5120484	AssignmentExpression	* phc = pht -> params . colorscreen . screens . indexed		5120443	2		=			
ANR	5120485	Identifier	phc		5120443	0					
ANR	5120486	MemberAccess	pht -> params . colorscreen . screens . indexed		5120443	1					
ANR	5120487	MemberAccess	pht -> params . colorscreen . screens		5120443	0					
ANR	5120488	MemberAccess	pht -> params . colorscreen		5120443	0					
ANR	5120489	PtrMemberAccess	pht -> params		5120443	0					
ANR	5120490	Identifier	pht		5120443	0					
ANR	5120491	Identifier	params		5120443	1					
ANR	5120492	Identifier	colorscreen		5120443	1					
ANR	5120493	Identifier	screens		5120443	1					
ANR	5120494	Identifier	indexed		5120443	1					
ANR	5120495	Statement	static	177:16:5563:5568	5120443	1	True				
ANR	5120496	IdentifierDeclStatement	"const int cindex [ 4 ] = { 3 , 0 , 1 , 2 } ;"	177:23:5570:5604	5120443	2	True				
ANR	5120497	IdentifierDecl	"cindex [ 4 ] = { 3 , 0 , 1 , 2 }"		5120443	0					
ANR	5120498	IdentifierDeclType	const int [ 4 ]		5120443	0					
ANR	5120499	Identifier	cindex		5120443	1					
ANR	5120500	PrimaryExpression	4		5120443	2					
ANR	5120501	AssignmentExpression	"cindex [ 4 ] = { 3 , 0 , 1 , 2 }"		5120443	3		=			
ANR	5120502	Identifier	cindex		5120443	0					
ANR	5120503	InitializerList	3		5120443	1					
ANR	5120504	PrimaryExpression	3		5120443	0					
ANR	5120505	PrimaryExpression	0		5120443	1					
ANR	5120506	PrimaryExpression	1		5120443	2					
ANR	5120507	PrimaryExpression	2		5120443	3					
ANR	5120508	Statement	static	178:16:5622:5627	5120443	3	True				
ANR	5120509	IdentifierDeclStatement	"const char * color_names [ 4 ] = { ""Gray"" , ""Red"" , ""Green"" , ""Blue"" } ;"	178:23:5629:5691	5120443	4	True				
ANR	5120510	IdentifierDecl	"* color_names [ 4 ] = { ""Gray"" , ""Red"" , ""Green"" , ""Blue"" }"		5120443	0					
ANR	5120511	IdentifierDeclType	const char * [ 4 ]		5120443	0					
ANR	5120512	Identifier	color_names		5120443	1					
ANR	5120513	PrimaryExpression	4		5120443	2					
ANR	5120514	AssignmentExpression	"* color_names [ 4 ] = { ""Gray"" , ""Red"" , ""Green"" , ""Blue"" }"		5120443	3		=			
ANR	5120515	Identifier	color_names		5120443	0					
ANR	5120516	InitializerList	"""Gray"""		5120443	1					
ANR	5120517	PrimaryExpression	"""Gray"""		5120443	0					
ANR	5120518	PrimaryExpression	"""Red"""		5120443	1					
ANR	5120519	PrimaryExpression	"""Green"""		5120443	2					
ANR	5120520	PrimaryExpression	"""Blue"""		5120443	3					
ANR	5120521	IdentifierDeclStatement	int i ;	179:16:5709:5714	5120443	5	True				
ANR	5120522	IdentifierDecl	i		5120443	0					
ANR	5120523	IdentifierDeclType	int		5120443	0					
ANR	5120524	Identifier	i		5120443	1					
ANR	5120525	ExpressionStatement	"pocs = gs_alloc_struct_array ( mem , 4 , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"	181:16:5733:5977	5120443	6	True				
ANR	5120526	AssignmentExpression	"pocs = gs_alloc_struct_array ( mem , 4 , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		5120443	0		=			
ANR	5120527	Identifier	pocs		5120443	0					
ANR	5120528	CallExpression	"gs_alloc_struct_array ( mem , 4 , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		5120443	1					
ANR	5120529	Callee	gs_alloc_struct_array		5120443	0					
ANR	5120530	Identifier	gs_alloc_struct_array		5120443	0					
ANR	5120531	ArgumentList	mem		5120443	1					
ANR	5120532	Argument	mem		5120443	0					
ANR	5120533	Identifier	mem		5120443	0					
ANR	5120534	Argument	4		5120443	1					
ANR	5120535	PrimaryExpression	4		5120443	0					
ANR	5120536	Argument	gx_ht_order_component		5120443	2					
ANR	5120537	Identifier	gx_ht_order_component		5120443	0					
ANR	5120538	Argument	& st_ht_order_component_element		5120443	3					
ANR	5120539	UnaryOperationExpression	& st_ht_order_component_element		5120443	0					
ANR	5120540	UnaryOperator	&		5120443	0					
ANR	5120541	Identifier	st_ht_order_component_element		5120443	1					
ANR	5120542	Argument	"""gs_sethalftone"""		5120443	4					
ANR	5120543	PrimaryExpression	"""gs_sethalftone"""		5120443	0					
ANR	5120544	IfStatement	if ( pocs == 0 )		5120443	7					
ANR	5120545	Condition	pocs == 0	185:20:5999:6007	5120443	0	True				
ANR	5120546	EqualityExpression	pocs == 0		5120443	0		==			
ANR	5120547	Identifier	pocs		5120443	0					
ANR	5120548	PrimaryExpression	0		5120443	1					
ANR	5120549	ExpressionStatement	return_error ( gs_error_VMerror )	186:20:6030:6060	5120443	1	True				
ANR	5120550	CallExpression	return_error ( gs_error_VMerror )		5120443	0					
ANR	5120551	Callee	return_error		5120443	0					
ANR	5120552	Identifier	return_error		5120443	0					
ANR	5120553	ArgumentList	gs_error_VMerror		5120443	1					
ANR	5120554	Argument	gs_error_VMerror		5120443	0					
ANR	5120555	Identifier	gs_error_VMerror		5120443	0					
ANR	5120556	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		5120443	8					
ANR	5120557	ForInit	i = 0 ;	187:21:6083:6088	5120443	0	True				
ANR	5120558	AssignmentExpression	i = 0		5120443	0		=			
ANR	5120559	Identifier	i		5120443	0					
ANR	5120560	PrimaryExpression	0		5120443	1					
ANR	5120561	Condition	i < 4	187:28:6090:6094	5120443	1	True				
ANR	5120562	RelationalExpression	i < 4		5120443	0		<			
ANR	5120563	Identifier	i		5120443	0					
ANR	5120564	PrimaryExpression	4		5120443	1					
ANR	5120565	PostIncDecOperationExpression	i ++	187:35:6097:6099	5120443	2	True				
ANR	5120566	Identifier	i		5120443	0					
ANR	5120567	IncDec	++		5120443	1					
ANR	5120568	CompoundStatement		24:20:931:968	5120443	3					
ANR	5120569	IdentifierDeclStatement	gs_screen_enum senum ;	188:20:6124:6144	5120443	0	True				
ANR	5120570	IdentifierDecl	senum		5120443	0					
ANR	5120571	IdentifierDeclType	gs_screen_enum		5120443	0					
ANR	5120572	Identifier	senum		5120443	1					
ANR	5120573	IdentifierDeclStatement	int ci = cindex [ i ] ;	189:20:6166:6184	5120443	1	True				
ANR	5120574	IdentifierDecl	ci = cindex [ i ]		5120443	0					
ANR	5120575	IdentifierDeclType	int		5120443	0					
ANR	5120576	Identifier	ci		5120443	1					
ANR	5120577	AssignmentExpression	ci = cindex [ i ]		5120443	2		=			
ANR	5120578	Identifier	ci		5120443	0					
ANR	5120579	ArrayIndexing	cindex [ i ]		5120443	1					
ANR	5120580	Identifier	cindex		5120443	0					
ANR	5120581	Identifier	i		5120443	1					
ANR	5120582	IdentifierDeclStatement	gx_ht_order_component * poc = & pocs [ i ] ;	190:20:6206:6243	5120443	2	True				
ANR	5120583	IdentifierDecl	* poc = & pocs [ i ]		5120443	0					
ANR	5120584	IdentifierDeclType	gx_ht_order_component *		5120443	0					
ANR	5120585	Identifier	poc		5120443	1					
ANR	5120586	AssignmentExpression	* poc = & pocs [ i ]		5120443	2		=			
ANR	5120587	Identifier	poc		5120443	0					
ANR	5120588	UnaryOperationExpression	& pocs [ i ]		5120443	1					
ANR	5120589	UnaryOperator	&		5120443	0					
ANR	5120590	ArrayIndexing	pocs [ i ]		5120443	1					
ANR	5120591	Identifier	pocs		5120443	0					
ANR	5120592	Identifier	i		5120443	1					
ANR	5120593	ExpressionStatement	"code = gx_ht_process_screen_memory ( & senum , pgs , & phc [ ci ] , gs_currentaccuratescreens ( mem ) , mem )"	192:20:6266:6400	5120443	3	True				
ANR	5120594	AssignmentExpression	"code = gx_ht_process_screen_memory ( & senum , pgs , & phc [ ci ] , gs_currentaccuratescreens ( mem ) , mem )"		5120443	0		=			
ANR	5120595	Identifier	code		5120443	0					
ANR	5120596	CallExpression	"gx_ht_process_screen_memory ( & senum , pgs , & phc [ ci ] , gs_currentaccuratescreens ( mem ) , mem )"		5120443	1					
ANR	5120597	Callee	gx_ht_process_screen_memory		5120443	0					
ANR	5120598	Identifier	gx_ht_process_screen_memory		5120443	0					
ANR	5120599	ArgumentList	& senum		5120443	1					
ANR	5120600	Argument	& senum		5120443	0					
ANR	5120601	UnaryOperationExpression	& senum		5120443	0					
ANR	5120602	UnaryOperator	&		5120443	0					
ANR	5120603	Identifier	senum		5120443	1					
ANR	5120604	Argument	pgs		5120443	1					
ANR	5120605	Identifier	pgs		5120443	0					
ANR	5120606	Argument	& phc [ ci ]		5120443	2					
ANR	5120607	UnaryOperationExpression	& phc [ ci ]		5120443	0					
ANR	5120608	UnaryOperator	&		5120443	0					
ANR	5120609	ArrayIndexing	phc [ ci ]		5120443	1					
ANR	5120610	Identifier	phc		5120443	0					
ANR	5120611	Identifier	ci		5120443	1					
ANR	5120612	Argument	gs_currentaccuratescreens ( mem )		5120443	3					
ANR	5120613	CallExpression	gs_currentaccuratescreens ( mem )		5120443	0					
ANR	5120614	Callee	gs_currentaccuratescreens		5120443	0					
ANR	5120615	Identifier	gs_currentaccuratescreens		5120443	0					
ANR	5120616	ArgumentList	mem		5120443	1					
ANR	5120617	Argument	mem		5120443	0					
ANR	5120618	Identifier	mem		5120443	0					
ANR	5120619	Argument	mem		5120443	4					
ANR	5120620	Identifier	mem		5120443	0					
ANR	5120621	IfStatement	if ( code < 0 )		5120443	4					
ANR	5120622	Condition	code < 0	194:24:6426:6433	5120443	0	True				
ANR	5120623	RelationalExpression	code < 0		5120443	0		<			
ANR	5120624	Identifier	code		5120443	0					
ANR	5120625	PrimaryExpression	0		5120443	1					
ANR	5120626	BreakStatement	break ;	195:24:6460:6465	5120443	1	True				
ANR	5120627	ExpressionStatement	poc -> corder = senum . order	196:20:6487:6512	5120443	5	True				
ANR	5120628	AssignmentExpression	poc -> corder = senum . order		5120443	0		=			
ANR	5120629	PtrMemberAccess	poc -> corder		5120443	0					
ANR	5120630	Identifier	poc		5120443	0					
ANR	5120631	Identifier	corder		5120443	1					
ANR	5120632	MemberAccess	senum . order		5120443	1					
ANR	5120633	Identifier	senum		5120443	0					
ANR	5120634	Identifier	order		5120443	1					
ANR	5120635	ExpressionStatement	"poc -> comp_number = gs_color_name_component_number ( pgs -> device , color_names [ i ] , strlen ( color_names [ i ] ) , pht -> type )"	197:20:6534:6679	5120443	6	True				
ANR	5120636	AssignmentExpression	"poc -> comp_number = gs_color_name_component_number ( pgs -> device , color_names [ i ] , strlen ( color_names [ i ] ) , pht -> type )"		5120443	0		=			
ANR	5120637	PtrMemberAccess	poc -> comp_number		5120443	0					
ANR	5120638	Identifier	poc		5120443	0					
ANR	5120639	Identifier	comp_number		5120443	1					
ANR	5120640	CallExpression	"gs_color_name_component_number ( pgs -> device , color_names [ i ] , strlen ( color_names [ i ] ) , pht -> type )"		5120443	1					
ANR	5120641	Callee	gs_color_name_component_number		5120443	0					
ANR	5120642	Identifier	gs_color_name_component_number		5120443	0					
ANR	5120643	ArgumentList	pgs -> device		5120443	1					
ANR	5120644	Argument	pgs -> device		5120443	0					
ANR	5120645	PtrMemberAccess	pgs -> device		5120443	0					
ANR	5120646	Identifier	pgs		5120443	0					
ANR	5120647	Identifier	device		5120443	1					
ANR	5120648	Argument	color_names [ i ]		5120443	1					
ANR	5120649	ArrayIndexing	color_names [ i ]		5120443	0					
ANR	5120650	Identifier	color_names		5120443	0					
ANR	5120651	Identifier	i		5120443	1					
ANR	5120652	Argument	strlen ( color_names [ i ] )		5120443	2					
ANR	5120653	CallExpression	strlen ( color_names [ i ] )		5120443	0					
ANR	5120654	Callee	strlen		5120443	0					
ANR	5120655	Identifier	strlen		5120443	0					
ANR	5120656	ArgumentList	color_names [ i ]		5120443	1					
ANR	5120657	Argument	color_names [ i ]		5120443	0					
ANR	5120658	ArrayIndexing	color_names [ i ]		5120443	0					
ANR	5120659	Identifier	color_names		5120443	0					
ANR	5120660	Identifier	i		5120443	1					
ANR	5120661	Argument	pht -> type		5120443	3					
ANR	5120662	PtrMemberAccess	pht -> type		5120443	0					
ANR	5120663	Identifier	pht		5120443	0					
ANR	5120664	Identifier	type		5120443	1					
ANR	5120665	ExpressionStatement	poc -> cname = 0	199:20:6701:6715	5120443	7	True				
ANR	5120666	AssignmentExpression	poc -> cname = 0		5120443	0		=			
ANR	5120667	PtrMemberAccess	poc -> cname		5120443	0					
ANR	5120668	Identifier	poc		5120443	0					
ANR	5120669	Identifier	cname		5120443	1					
ANR	5120670	PrimaryExpression	0		5120443	1					
ANR	5120671	IfStatement	if ( i == 0 )		5120443	8					
ANR	5120672	Condition	i == 0	200:24:6792:6797	5120443	0	True				
ANR	5120673	EqualityExpression	i == 0		5120443	0		==			
ANR	5120674	Identifier	i		5120443	0					
ANR	5120675	PrimaryExpression	0		5120443	1					
ANR	5120676	ExpressionStatement	pdht -> order = poc -> corder	201:24:6845:6870	5120443	1	True				
ANR	5120677	AssignmentExpression	pdht -> order = poc -> corder		5120443	0		=			
ANR	5120678	PtrMemberAccess	pdht -> order		5120443	0					
ANR	5120679	Identifier	pdht		5120443	0					
ANR	5120680	Identifier	order		5120443	1					
ANR	5120681	PtrMemberAccess	poc -> corder		5120443	1					
ANR	5120682	Identifier	poc		5120443	0					
ANR	5120683	Identifier	corder		5120443	1					
ANR	5120684	IfStatement	if ( code < 0 )		5120443	9					
ANR	5120685	Condition	code < 0	203:20:6935:6942	5120443	0	True				
ANR	5120686	RelationalExpression	code < 0		5120443	0		<			
ANR	5120687	Identifier	code		5120443	0					
ANR	5120688	PrimaryExpression	0		5120443	1					
ANR	5120689	BreakStatement	break ;	204:20:6965:6970	5120443	1	True				
ANR	5120690	ExpressionStatement	pdht -> components = pocs	205:16:6988:7011	5120443	10	True				
ANR	5120691	AssignmentExpression	pdht -> components = pocs		5120443	0		=			
ANR	5120692	PtrMemberAccess	pdht -> components		5120443	0					
ANR	5120693	Identifier	pdht		5120443	0					
ANR	5120694	Identifier	components		5120443	1					
ANR	5120695	Identifier	pocs		5120443	1					
ANR	5120696	ExpressionStatement	pdht -> num_comp = 4	206:16:7029:7047	5120443	11	True				
ANR	5120697	AssignmentExpression	pdht -> num_comp = 4		5120443	0		=			
ANR	5120698	PtrMemberAccess	pdht -> num_comp		5120443	0					
ANR	5120699	Identifier	pdht		5120443	0					
ANR	5120700	Identifier	num_comp		5120443	1					
ANR	5120701	PrimaryExpression	4		5120443	1					
ANR	5120702	BreakStatement	break ;	208:12:7075:7080	5120443	2	True				
ANR	5120703	Label	case ht_type_spot :	209:8:7090:7107	5120443	3	True				
ANR	5120704	Identifier	ht_type_spot		5120443	0					
ANR	5120705	ExpressionStatement	"code = process_spot ( & pdht -> order , pgs , & pht -> params . spot , mem )"	210:12:7121:7183	5120443	4	True				
ANR	5120706	AssignmentExpression	"code = process_spot ( & pdht -> order , pgs , & pht -> params . spot , mem )"		5120443	0		=			
ANR	5120707	Identifier	code		5120443	0					
ANR	5120708	CallExpression	"process_spot ( & pdht -> order , pgs , & pht -> params . spot , mem )"		5120443	1					
ANR	5120709	Callee	process_spot		5120443	0					
ANR	5120710	Identifier	process_spot		5120443	0					
ANR	5120711	ArgumentList	& pdht -> order		5120443	1					
ANR	5120712	Argument	& pdht -> order		5120443	0					
ANR	5120713	UnaryOperationExpression	& pdht -> order		5120443	0					
ANR	5120714	UnaryOperator	&		5120443	0					
ANR	5120715	PtrMemberAccess	pdht -> order		5120443	1					
ANR	5120716	Identifier	pdht		5120443	0					
ANR	5120717	Identifier	order		5120443	1					
ANR	5120718	Argument	pgs		5120443	1					
ANR	5120719	Identifier	pgs		5120443	0					
ANR	5120720	Argument	& pht -> params . spot		5120443	2					
ANR	5120721	UnaryOperationExpression	& pht -> params . spot		5120443	0					
ANR	5120722	UnaryOperator	&		5120443	0					
ANR	5120723	MemberAccess	pht -> params . spot		5120443	1					
ANR	5120724	PtrMemberAccess	pht -> params		5120443	0					
ANR	5120725	Identifier	pht		5120443	0					
ANR	5120726	Identifier	params		5120443	1					
ANR	5120727	Identifier	spot		5120443	1					
ANR	5120728	Argument	mem		5120443	3					
ANR	5120729	Identifier	mem		5120443	0					
ANR	5120730	IfStatement	if ( code < 0 )		5120443	5					
ANR	5120731	Condition	code < 0	211:16:7201:7208	5120443	0	True				
ANR	5120732	RelationalExpression	code < 0		5120443	0		<			
ANR	5120733	Identifier	code		5120443	0					
ANR	5120734	PrimaryExpression	0		5120443	1					
ANR	5120735	ReturnStatement	return code ;	212:16:7227:7238	5120443	1	True				
ANR	5120736	Identifier	code		5120443	0					
ANR	5120737	ExpressionStatement	pdht -> components = 0	213:12:7252:7272	5120443	6	True				
ANR	5120738	AssignmentExpression	pdht -> components = 0		5120443	0		=			
ANR	5120739	PtrMemberAccess	pdht -> components		5120443	0					
ANR	5120740	Identifier	pdht		5120443	0					
ANR	5120741	Identifier	components		5120443	1					
ANR	5120742	PrimaryExpression	0		5120443	1					
ANR	5120743	BreakStatement	break ;	214:12:7286:7291	5120443	7	True				
ANR	5120744	Label	case ht_type_threshold :	215:8:7301:7323	5120443	8	True				
ANR	5120745	Identifier	ht_type_threshold		5120443	0					
ANR	5120746	ExpressionStatement	"code = process_threshold ( & pdht -> order , pgs , & pht -> params . threshold , mem )"	216:12:7337:7446	5120443	9	True				
ANR	5120747	AssignmentExpression	"code = process_threshold ( & pdht -> order , pgs , & pht -> params . threshold , mem )"		5120443	0		=			
ANR	5120748	Identifier	code		5120443	0					
ANR	5120749	CallExpression	"process_threshold ( & pdht -> order , pgs , & pht -> params . threshold , mem )"		5120443	1					
ANR	5120750	Callee	process_threshold		5120443	0					
ANR	5120751	Identifier	process_threshold		5120443	0					
ANR	5120752	ArgumentList	& pdht -> order		5120443	1					
ANR	5120753	Argument	& pdht -> order		5120443	0					
ANR	5120754	UnaryOperationExpression	& pdht -> order		5120443	0					
ANR	5120755	UnaryOperator	&		5120443	0					
ANR	5120756	PtrMemberAccess	pdht -> order		5120443	1					
ANR	5120757	Identifier	pdht		5120443	0					
ANR	5120758	Identifier	order		5120443	1					
ANR	5120759	Argument	pgs		5120443	1					
ANR	5120760	Identifier	pgs		5120443	0					
ANR	5120761	Argument	& pht -> params . threshold		5120443	2					
ANR	5120762	UnaryOperationExpression	& pht -> params . threshold		5120443	0					
ANR	5120763	UnaryOperator	&		5120443	0					
ANR	5120764	MemberAccess	pht -> params . threshold		5120443	1					
ANR	5120765	PtrMemberAccess	pht -> params		5120443	0					
ANR	5120766	Identifier	pht		5120443	0					
ANR	5120767	Identifier	params		5120443	1					
ANR	5120768	Identifier	threshold		5120443	1					
ANR	5120769	Argument	mem		5120443	3					
ANR	5120770	Identifier	mem		5120443	0					
ANR	5120771	IfStatement	if ( code < 0 )		5120443	10					
ANR	5120772	Condition	code < 0	218:16:7464:7471	5120443	0	True				
ANR	5120773	RelationalExpression	code < 0		5120443	0		<			
ANR	5120774	Identifier	code		5120443	0					
ANR	5120775	PrimaryExpression	0		5120443	1					
ANR	5120776	ReturnStatement	return code ;	219:16:7490:7501	5120443	1	True				
ANR	5120777	Identifier	code		5120443	0					
ANR	5120778	ExpressionStatement	pdht -> components = 0	220:12:7515:7535	5120443	11	True				
ANR	5120779	AssignmentExpression	pdht -> components = 0		5120443	0		=			
ANR	5120780	PtrMemberAccess	pdht -> components		5120443	0					
ANR	5120781	Identifier	pdht		5120443	0					
ANR	5120782	Identifier	components		5120443	1					
ANR	5120783	PrimaryExpression	0		5120443	1					
ANR	5120784	BreakStatement	break ;	221:12:7549:7554	5120443	12	True				
ANR	5120785	Label	case ht_type_threshold2 :	222:8:7564:7587	5120443	13	True				
ANR	5120786	Identifier	ht_type_threshold2		5120443	0					
ANR	5120787	ExpressionStatement	"code = process_threshold2 ( & pdht -> order , pgs , & pht -> params . threshold2 , mem )"	223:12:7601:7713	5120443	14	True				
ANR	5120788	AssignmentExpression	"code = process_threshold2 ( & pdht -> order , pgs , & pht -> params . threshold2 , mem )"		5120443	0		=			
ANR	5120789	Identifier	code		5120443	0					
ANR	5120790	CallExpression	"process_threshold2 ( & pdht -> order , pgs , & pht -> params . threshold2 , mem )"		5120443	1					
ANR	5120791	Callee	process_threshold2		5120443	0					
ANR	5120792	Identifier	process_threshold2		5120443	0					
ANR	5120793	ArgumentList	& pdht -> order		5120443	1					
ANR	5120794	Argument	& pdht -> order		5120443	0					
ANR	5120795	UnaryOperationExpression	& pdht -> order		5120443	0					
ANR	5120796	UnaryOperator	&		5120443	0					
ANR	5120797	PtrMemberAccess	pdht -> order		5120443	1					
ANR	5120798	Identifier	pdht		5120443	0					
ANR	5120799	Identifier	order		5120443	1					
ANR	5120800	Argument	pgs		5120443	1					
ANR	5120801	Identifier	pgs		5120443	0					
ANR	5120802	Argument	& pht -> params . threshold2		5120443	2					
ANR	5120803	UnaryOperationExpression	& pht -> params . threshold2		5120443	0					
ANR	5120804	UnaryOperator	&		5120443	0					
ANR	5120805	MemberAccess	pht -> params . threshold2		5120443	1					
ANR	5120806	PtrMemberAccess	pht -> params		5120443	0					
ANR	5120807	Identifier	pht		5120443	0					
ANR	5120808	Identifier	params		5120443	1					
ANR	5120809	Identifier	threshold2		5120443	1					
ANR	5120810	Argument	mem		5120443	3					
ANR	5120811	Identifier	mem		5120443	0					
ANR	5120812	IfStatement	if ( code < 0 )		5120443	15					
ANR	5120813	Condition	code < 0	225:16:7731:7738	5120443	0	True				
ANR	5120814	RelationalExpression	code < 0		5120443	0		<			
ANR	5120815	Identifier	code		5120443	0					
ANR	5120816	PrimaryExpression	0		5120443	1					
ANR	5120817	ReturnStatement	return code ;	226:16:7757:7768	5120443	1	True				
ANR	5120818	Identifier	code		5120443	0					
ANR	5120819	ExpressionStatement	pdht -> components = 0	227:12:7782:7802	5120443	16	True				
ANR	5120820	AssignmentExpression	pdht -> components = 0		5120443	0		=			
ANR	5120821	PtrMemberAccess	pdht -> components		5120443	0					
ANR	5120822	Identifier	pdht		5120443	0					
ANR	5120823	Identifier	components		5120443	1					
ANR	5120824	PrimaryExpression	0		5120443	1					
ANR	5120825	BreakStatement	break ;	228:12:7816:7821	5120443	17	True				
ANR	5120826	Label	case ht_type_client_order :	229:8:7831:7856	5120443	18	True				
ANR	5120827	Identifier	ht_type_client_order		5120443	0					
ANR	5120828	ExpressionStatement	"code = process_client_order ( & pdht -> order , pgs , & pht -> params . client_order , mem )"	230:12:7870:7988	5120443	19	True				
ANR	5120829	AssignmentExpression	"code = process_client_order ( & pdht -> order , pgs , & pht -> params . client_order , mem )"		5120443	0		=			
ANR	5120830	Identifier	code		5120443	0					
ANR	5120831	CallExpression	"process_client_order ( & pdht -> order , pgs , & pht -> params . client_order , mem )"		5120443	1					
ANR	5120832	Callee	process_client_order		5120443	0					
ANR	5120833	Identifier	process_client_order		5120443	0					
ANR	5120834	ArgumentList	& pdht -> order		5120443	1					
ANR	5120835	Argument	& pdht -> order		5120443	0					
ANR	5120836	UnaryOperationExpression	& pdht -> order		5120443	0					
ANR	5120837	UnaryOperator	&		5120443	0					
ANR	5120838	PtrMemberAccess	pdht -> order		5120443	1					
ANR	5120839	Identifier	pdht		5120443	0					
ANR	5120840	Identifier	order		5120443	1					
ANR	5120841	Argument	pgs		5120443	1					
ANR	5120842	Identifier	pgs		5120443	0					
ANR	5120843	Argument	& pht -> params . client_order		5120443	2					
ANR	5120844	UnaryOperationExpression	& pht -> params . client_order		5120443	0					
ANR	5120845	UnaryOperator	&		5120443	0					
ANR	5120846	MemberAccess	pht -> params . client_order		5120443	1					
ANR	5120847	PtrMemberAccess	pht -> params		5120443	0					
ANR	5120848	Identifier	pht		5120443	0					
ANR	5120849	Identifier	params		5120443	1					
ANR	5120850	Identifier	client_order		5120443	1					
ANR	5120851	Argument	mem		5120443	3					
ANR	5120852	Identifier	mem		5120443	0					
ANR	5120853	IfStatement	if ( code < 0 )		5120443	20					
ANR	5120854	Condition	code < 0	232:16:8006:8013	5120443	0	True				
ANR	5120855	RelationalExpression	code < 0		5120443	0		<			
ANR	5120856	Identifier	code		5120443	0					
ANR	5120857	PrimaryExpression	0		5120443	1					
ANR	5120858	ReturnStatement	return code ;	233:16:8032:8043	5120443	1	True				
ANR	5120859	Identifier	code		5120443	0					
ANR	5120860	ExpressionStatement	pdht -> components = 0	234:12:8057:8077	5120443	21	True				
ANR	5120861	AssignmentExpression	pdht -> components = 0		5120443	0		=			
ANR	5120862	PtrMemberAccess	pdht -> components		5120443	0					
ANR	5120863	Identifier	pdht		5120443	0					
ANR	5120864	Identifier	components		5120443	1					
ANR	5120865	PrimaryExpression	0		5120443	1					
ANR	5120866	BreakStatement	break ;	235:12:8091:8096	5120443	22	True				
ANR	5120867	Label	case ht_type_multiple :	236:8:8106:8127	5120443	23	True				
ANR	5120868	Identifier	ht_type_multiple		5120443	0					
ANR	5120869	Label	case ht_type_multiple_colorscreen :	237:8:8137:8170	5120443	24	True				
ANR	5120870	Identifier	ht_type_multiple_colorscreen		5120443	0					
ANR	5120871	CompoundStatement		77:16:3132:3163	5120443	25					
ANR	5120872	IdentifierDeclStatement	uint count = pht -> params . multiple . num_comp ;	239:16:8202:8244	5120443	0	True				
ANR	5120873	IdentifierDecl	count = pht -> params . multiple . num_comp		5120443	0					
ANR	5120874	IdentifierDeclType	uint		5120443	0					
ANR	5120875	Identifier	count		5120443	1					
ANR	5120876	AssignmentExpression	count = pht -> params . multiple . num_comp		5120443	2		=			
ANR	5120877	Identifier	count		5120443	0					
ANR	5120878	MemberAccess	pht -> params . multiple . num_comp		5120443	1					
ANR	5120879	MemberAccess	pht -> params . multiple		5120443	0					
ANR	5120880	PtrMemberAccess	pht -> params		5120443	0					
ANR	5120881	Identifier	pht		5120443	0					
ANR	5120882	Identifier	params		5120443	1					
ANR	5120883	Identifier	multiple		5120443	1					
ANR	5120884	Identifier	num_comp		5120443	1					
ANR	5120885	IdentifierDeclStatement	bool have_Default = false ;	240:16:8262:8287	5120443	1	True				
ANR	5120886	IdentifierDecl	have_Default = false		5120443	0					
ANR	5120887	IdentifierDeclType	bool		5120443	0					
ANR	5120888	Identifier	have_Default		5120443	1					
ANR	5120889	AssignmentExpression	have_Default = false		5120443	2		=			
ANR	5120890	Identifier	false		5120443	0					
ANR	5120891	Identifier	false		5120443	1					
ANR	5120892	IdentifierDeclStatement	uint i ;	241:16:8305:8311	5120443	2	True				
ANR	5120893	IdentifierDecl	i		5120443	0					
ANR	5120894	IdentifierDeclType	uint		5120443	0					
ANR	5120895	Identifier	i		5120443	1					
ANR	5120896	IdentifierDeclStatement	gs_halftone_component * phc = pht -> params . multiple . components ;	242:16:8329:8389	5120443	3	True				
ANR	5120897	IdentifierDecl	* phc = pht -> params . multiple . components		5120443	0					
ANR	5120898	IdentifierDeclType	gs_halftone_component *		5120443	0					
ANR	5120899	Identifier	phc		5120443	1					
ANR	5120900	AssignmentExpression	* phc = pht -> params . multiple . components		5120443	2		=			
ANR	5120901	Identifier	phc		5120443	0					
ANR	5120902	MemberAccess	pht -> params . multiple . components		5120443	1					
ANR	5120903	MemberAccess	pht -> params . multiple		5120443	0					
ANR	5120904	PtrMemberAccess	pht -> params		5120443	0					
ANR	5120905	Identifier	pht		5120443	0					
ANR	5120906	Identifier	params		5120443	1					
ANR	5120907	Identifier	multiple		5120443	1					
ANR	5120908	Identifier	components		5120443	1					
ANR	5120909	IdentifierDeclStatement	gx_ht_order_component * poc_next ;	243:16:8407:8438	5120443	4	True				
ANR	5120910	IdentifierDecl	* poc_next		5120443	0					
ANR	5120911	IdentifierDeclType	gx_ht_order_component *		5120443	0					
ANR	5120912	Identifier	poc_next		5120443	1					
ANR	5120913	ExpressionStatement	"pocs = gs_alloc_struct_array ( mem , count , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"	245:16:8457:8705	5120443	5	True				
ANR	5120914	AssignmentExpression	"pocs = gs_alloc_struct_array ( mem , count , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		5120443	0		=			
ANR	5120915	Identifier	pocs		5120443	0					
ANR	5120916	CallExpression	"gs_alloc_struct_array ( mem , count , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		5120443	1					
ANR	5120917	Callee	gs_alloc_struct_array		5120443	0					
ANR	5120918	Identifier	gs_alloc_struct_array		5120443	0					
ANR	5120919	ArgumentList	mem		5120443	1					
ANR	5120920	Argument	mem		5120443	0					
ANR	5120921	Identifier	mem		5120443	0					
ANR	5120922	Argument	count		5120443	1					
ANR	5120923	Identifier	count		5120443	0					
ANR	5120924	Argument	gx_ht_order_component		5120443	2					
ANR	5120925	Identifier	gx_ht_order_component		5120443	0					
ANR	5120926	Argument	& st_ht_order_component_element		5120443	3					
ANR	5120927	UnaryOperationExpression	& st_ht_order_component_element		5120443	0					
ANR	5120928	UnaryOperator	&		5120443	0					
ANR	5120929	Identifier	st_ht_order_component_element		5120443	1					
ANR	5120930	Argument	"""gs_sethalftone"""		5120443	4					
ANR	5120931	PrimaryExpression	"""gs_sethalftone"""		5120443	0					
ANR	5120932	IfStatement	if ( pocs == 0 )		5120443	6					
ANR	5120933	Condition	pocs == 0	249:20:8727:8735	5120443	0	True				
ANR	5120934	EqualityExpression	pocs == 0		5120443	0		==			
ANR	5120935	Identifier	pocs		5120443	0					
ANR	5120936	PrimaryExpression	0		5120443	1					
ANR	5120937	ExpressionStatement	return_error ( gs_error_VMerror )	250:20:8758:8788	5120443	1	True				
ANR	5120938	CallExpression	return_error ( gs_error_VMerror )		5120443	0					
ANR	5120939	Callee	return_error		5120443	0					
ANR	5120940	Identifier	return_error		5120443	0					
ANR	5120941	ArgumentList	gs_error_VMerror		5120443	1					
ANR	5120942	Argument	gs_error_VMerror		5120443	0					
ANR	5120943	Identifier	gs_error_VMerror		5120443	0					
ANR	5120944	ExpressionStatement	poc_next = pocs + 1	251:16:8806:8825	5120443	7	True				
ANR	5120945	AssignmentExpression	poc_next = pocs + 1		5120443	0		=			
ANR	5120946	Identifier	poc_next		5120443	0					
ANR	5120947	AdditiveExpression	pocs + 1		5120443	1		+			
ANR	5120948	Identifier	pocs		5120443	0					
ANR	5120949	PrimaryExpression	1		5120443	1					
ANR	5120950	ForStatement	"for ( i = 0 ; i < count ; i ++ , phc ++ )"		5120443	8					
ANR	5120951	ForInit	i = 0 ;	252:21:8848:8853	5120443	0	True				
ANR	5120952	AssignmentExpression	i = 0		5120443	0		=			
ANR	5120953	Identifier	i		5120443	0					
ANR	5120954	PrimaryExpression	0		5120443	1					
ANR	5120955	Condition	i < count	252:28:8855:8863	5120443	1	True				
ANR	5120956	RelationalExpression	i < count		5120443	0		<			
ANR	5120957	Identifier	i		5120443	0					
ANR	5120958	Identifier	count		5120443	1					
ANR	5120959	Expression	"i ++ , phc ++"	252:39:8866:8875	5120443	2	True				
ANR	5120960	PostIncDecOperationExpression	i ++		5120443	0					
ANR	5120961	Identifier	i		5120443	0					
ANR	5120962	IncDec	++		5120443	1					
ANR	5120963	PostIncDecOperationExpression	phc ++		5120443	1					
ANR	5120964	Identifier	phc		5120443	0					
ANR	5120965	IncDec	++		5120443	1					
ANR	5120966	CompoundStatement		87:20:3625:3651	5120443	3					
ANR	5120967	IdentifierDeclStatement	gx_ht_order_component * poc ;	253:20:8900:8926	5120443	0	True				
ANR	5120968	IdentifierDecl	* poc		5120443	0					
ANR	5120969	IdentifierDeclType	gx_ht_order_component *		5120443	0					
ANR	5120970	Identifier	poc		5120443	1					
ANR	5120971	IfStatement	if ( phc -> comp_number == GX_DEVICE_COLOR_MAX_COMPONENTS )		5120443	1					
ANR	5120972	Condition	phc -> comp_number == GX_DEVICE_COLOR_MAX_COMPONENTS	255:24:8953:9002	5120443	0	True				
ANR	5120973	EqualityExpression	phc -> comp_number == GX_DEVICE_COLOR_MAX_COMPONENTS		5120443	0		==			
ANR	5120974	PtrMemberAccess	phc -> comp_number		5120443	0					
ANR	5120975	Identifier	phc		5120443	0					
ANR	5120976	Identifier	comp_number		5120443	1					
ANR	5120977	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5120443	1					
ANR	5120978	CompoundStatement		89:76:3730:3730	5120443	1					
ANR	5120979	IfStatement	if ( have_Default )		5120443	0					
ANR	5120980	Condition	have_Default	256:28:9035:9046	5120443	0	True				
ANR	5120981	Identifier	have_Default		5120443	0					
ANR	5120982	CompoundStatement		90:42:3774:3774	5120443	1					
ANR	5120983	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	258:28:9131:9172	5120443	0	True				
ANR	5120984	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		5120443	0		=			
ANR	5120985	Identifier	code		5120443	0					
ANR	5120986	CallExpression	gs_note_error ( gs_error_rangecheck )		5120443	1					
ANR	5120987	Callee	gs_note_error		5120443	0					
ANR	5120988	Identifier	gs_note_error		5120443	0					
ANR	5120989	ArgumentList	gs_error_rangecheck		5120443	1					
ANR	5120990	Argument	gs_error_rangecheck		5120443	0					
ANR	5120991	Identifier	gs_error_rangecheck		5120443	0					
ANR	5120992	BreakStatement	break ;	259:28:9202:9207	5120443	1	True				
ANR	5120993	ExpressionStatement	poc = pocs	261:24:9259:9269	5120443	1	True				
ANR	5120994	AssignmentExpression	poc = pocs		5120443	0		=			
ANR	5120995	Identifier	poc		5120443	0					
ANR	5120996	Identifier	pocs		5120443	1					
ANR	5120997	ExpressionStatement	have_Default = true	262:24:9295:9314	5120443	2	True				
ANR	5120998	AssignmentExpression	have_Default = true		5120443	0		=			
ANR	5120999	Identifier	have_Default		5120443	0					
ANR	5121000	Identifier	true		5120443	1					
ANR	5121001	ElseStatement	else		5120443	0					
ANR	5121002	IfStatement	if ( i == count - 1 && ! have_Default )		5120443	0					
ANR	5121003	Condition	i == count - 1 && ! have_Default	263:31:9347:9377	5120443	0	True				
ANR	5121004	AndExpression	i == count - 1 && ! have_Default		5120443	0		&&			
ANR	5121005	EqualityExpression	i == count - 1		5120443	0		==			
ANR	5121006	Identifier	i		5120443	0					
ANR	5121007	AdditiveExpression	count - 1		5120443	1		-			
ANR	5121008	Identifier	count		5120443	0					
ANR	5121009	PrimaryExpression	1		5120443	1					
ANR	5121010	UnaryOperationExpression	! have_Default		5120443	1					
ANR	5121011	UnaryOperator	!		5120443	0					
ANR	5121012	Identifier	have_Default		5120443	1					
ANR	5121013	CompoundStatement		97:64:4105:4105	5120443	1					
ANR	5121014	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	265:24:9447:9488	5120443	0	True				
ANR	5121015	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		5120443	0		=			
ANR	5121016	Identifier	code		5120443	0					
ANR	5121017	CallExpression	gs_note_error ( gs_error_rangecheck )		5120443	1					
ANR	5121018	Callee	gs_note_error		5120443	0					
ANR	5121019	Identifier	gs_note_error		5120443	0					
ANR	5121020	ArgumentList	gs_error_rangecheck		5120443	1					
ANR	5121021	Argument	gs_error_rangecheck		5120443	0					
ANR	5121022	Identifier	gs_error_rangecheck		5120443	0					
ANR	5121023	BreakStatement	break ;	266:24:9514:9519	5120443	1	True				
ANR	5121024	ElseStatement	else		5120443	0					
ANR	5121025	ExpressionStatement	poc = poc_next ++	268:24:9572:9588	5120443	0	True				
ANR	5121026	AssignmentExpression	poc = poc_next ++		5120443	0		=			
ANR	5121027	Identifier	poc		5120443	0					
ANR	5121028	PostIncDecOperationExpression	poc_next ++		5120443	1					
ANR	5121029	Identifier	poc_next		5120443	0					
ANR	5121030	IncDec	++		5120443	1					
ANR	5121031	ExpressionStatement	poc -> comp_number = phc -> comp_number	270:20:9611:9646	5120443	2	True				
ANR	5121032	AssignmentExpression	poc -> comp_number = phc -> comp_number		5120443	0		=			
ANR	5121033	PtrMemberAccess	poc -> comp_number		5120443	0					
ANR	5121034	Identifier	poc		5120443	0					
ANR	5121035	Identifier	comp_number		5120443	1					
ANR	5121036	PtrMemberAccess	phc -> comp_number		5120443	1					
ANR	5121037	Identifier	phc		5120443	0					
ANR	5121038	Identifier	comp_number		5120443	1					
ANR	5121039	ExpressionStatement	poc -> cname = phc -> cname	271:20:9668:9691	5120443	3	True				
ANR	5121040	AssignmentExpression	poc -> cname = phc -> cname		5120443	0		=			
ANR	5121041	PtrMemberAccess	poc -> cname		5120443	0					
ANR	5121042	Identifier	poc		5120443	0					
ANR	5121043	Identifier	cname		5120443	1					
ANR	5121044	PtrMemberAccess	phc -> cname		5120443	1					
ANR	5121045	Identifier	phc		5120443	0					
ANR	5121046	Identifier	cname		5120443	1					
ANR	5121047	SwitchStatement	switch ( phc -> type )		5120443	4					
ANR	5121048	Condition	phc -> type	272:28:9721:9729	5120443	0	True				
ANR	5121049	PtrMemberAccess	phc -> type		5120443	0					
ANR	5121050	Identifier	phc		5120443	0					
ANR	5121051	Identifier	type		5120443	1					
ANR	5121052	CompoundStatement		106:39:4457:4457	5120443	1					
ANR	5121053	Label	case ht_type_spot :	273:24:9758:9775	5120443	0	True				
ANR	5121054	Identifier	ht_type_spot		5120443	0					
ANR	5121055	ExpressionStatement	"code = process_spot ( & poc -> corder , pgs , & phc -> params . spot , mem )"	274:28:9805:9915	5120443	1	True				
ANR	5121056	AssignmentExpression	"code = process_spot ( & poc -> corder , pgs , & phc -> params . spot , mem )"		5120443	0		=			
ANR	5121057	Identifier	code		5120443	0					
ANR	5121058	CallExpression	"process_spot ( & poc -> corder , pgs , & phc -> params . spot , mem )"		5120443	1					
ANR	5121059	Callee	process_spot		5120443	0					
ANR	5121060	Identifier	process_spot		5120443	0					
ANR	5121061	ArgumentList	& poc -> corder		5120443	1					
ANR	5121062	Argument	& poc -> corder		5120443	0					
ANR	5121063	UnaryOperationExpression	& poc -> corder		5120443	0					
ANR	5121064	UnaryOperator	&		5120443	0					
ANR	5121065	PtrMemberAccess	poc -> corder		5120443	1					
ANR	5121066	Identifier	poc		5120443	0					
ANR	5121067	Identifier	corder		5120443	1					
ANR	5121068	Argument	pgs		5120443	1					
ANR	5121069	Identifier	pgs		5120443	0					
ANR	5121070	Argument	& phc -> params . spot		5120443	2					
ANR	5121071	UnaryOperationExpression	& phc -> params . spot		5120443	0					
ANR	5121072	UnaryOperator	&		5120443	0					
ANR	5121073	MemberAccess	phc -> params . spot		5120443	1					
ANR	5121074	PtrMemberAccess	phc -> params		5120443	0					
ANR	5121075	Identifier	phc		5120443	0					
ANR	5121076	Identifier	params		5120443	1					
ANR	5121077	Identifier	spot		5120443	1					
ANR	5121078	Argument	mem		5120443	3					
ANR	5121079	Identifier	mem		5120443	0					
ANR	5121080	BreakStatement	break ;	276:28:9945:9950	5120443	2	True				
ANR	5121081	Label	case ht_type_threshold :	277:24:9976:9998	5120443	3	True				
ANR	5121082	Identifier	ht_type_threshold		5120443	0					
ANR	5121083	ExpressionStatement	"code = process_threshold ( & poc -> corder , pgs , & phc -> params . threshold , mem )"	278:28:10028:10148	5120443	4	True				
ANR	5121084	AssignmentExpression	"code = process_threshold ( & poc -> corder , pgs , & phc -> params . threshold , mem )"		5120443	0		=			
ANR	5121085	Identifier	code		5120443	0					
ANR	5121086	CallExpression	"process_threshold ( & poc -> corder , pgs , & phc -> params . threshold , mem )"		5120443	1					
ANR	5121087	Callee	process_threshold		5120443	0					
ANR	5121088	Identifier	process_threshold		5120443	0					
ANR	5121089	ArgumentList	& poc -> corder		5120443	1					
ANR	5121090	Argument	& poc -> corder		5120443	0					
ANR	5121091	UnaryOperationExpression	& poc -> corder		5120443	0					
ANR	5121092	UnaryOperator	&		5120443	0					
ANR	5121093	PtrMemberAccess	poc -> corder		5120443	1					
ANR	5121094	Identifier	poc		5120443	0					
ANR	5121095	Identifier	corder		5120443	1					
ANR	5121096	Argument	pgs		5120443	1					
ANR	5121097	Identifier	pgs		5120443	0					
ANR	5121098	Argument	& phc -> params . threshold		5120443	2					
ANR	5121099	UnaryOperationExpression	& phc -> params . threshold		5120443	0					
ANR	5121100	UnaryOperator	&		5120443	0					
ANR	5121101	MemberAccess	phc -> params . threshold		5120443	1					
ANR	5121102	PtrMemberAccess	phc -> params		5120443	0					
ANR	5121103	Identifier	phc		5120443	0					
ANR	5121104	Identifier	params		5120443	1					
ANR	5121105	Identifier	threshold		5120443	1					
ANR	5121106	Argument	mem		5120443	3					
ANR	5121107	Identifier	mem		5120443	0					
ANR	5121108	BreakStatement	break ;	280:28:10178:10183	5120443	5	True				
ANR	5121109	Label	case ht_type_threshold2 :	281:24:10209:10232	5120443	6	True				
ANR	5121110	Identifier	ht_type_threshold2		5120443	0					
ANR	5121111	ExpressionStatement	"code = process_threshold2 ( & poc -> corder , pgs , & phc -> params . threshold2 , mem )"	282:28:10262:10384	5120443	7	True				
ANR	5121112	AssignmentExpression	"code = process_threshold2 ( & poc -> corder , pgs , & phc -> params . threshold2 , mem )"		5120443	0		=			
ANR	5121113	Identifier	code		5120443	0					
ANR	5121114	CallExpression	"process_threshold2 ( & poc -> corder , pgs , & phc -> params . threshold2 , mem )"		5120443	1					
ANR	5121115	Callee	process_threshold2		5120443	0					
ANR	5121116	Identifier	process_threshold2		5120443	0					
ANR	5121117	ArgumentList	& poc -> corder		5120443	1					
ANR	5121118	Argument	& poc -> corder		5120443	0					
ANR	5121119	UnaryOperationExpression	& poc -> corder		5120443	0					
ANR	5121120	UnaryOperator	&		5120443	0					
ANR	5121121	PtrMemberAccess	poc -> corder		5120443	1					
ANR	5121122	Identifier	poc		5120443	0					
ANR	5121123	Identifier	corder		5120443	1					
ANR	5121124	Argument	pgs		5120443	1					
ANR	5121125	Identifier	pgs		5120443	0					
ANR	5121126	Argument	& phc -> params . threshold2		5120443	2					
ANR	5121127	UnaryOperationExpression	& phc -> params . threshold2		5120443	0					
ANR	5121128	UnaryOperator	&		5120443	0					
ANR	5121129	MemberAccess	phc -> params . threshold2		5120443	1					
ANR	5121130	PtrMemberAccess	phc -> params		5120443	0					
ANR	5121131	Identifier	phc		5120443	0					
ANR	5121132	Identifier	params		5120443	1					
ANR	5121133	Identifier	threshold2		5120443	1					
ANR	5121134	Argument	mem		5120443	3					
ANR	5121135	Identifier	mem		5120443	0					
ANR	5121136	BreakStatement	break ;	284:28:10414:10419	5120443	8	True				
ANR	5121137	Label	case ht_type_client_order :	285:24:10445:10470	5120443	9	True				
ANR	5121138	Identifier	ht_type_client_order		5120443	0					
ANR	5121139	ExpressionStatement	"code = process_client_order ( & poc -> corder , pgs , & phc -> params . client_order , mem )"	286:28:10500:10622	5120443	10	True				
ANR	5121140	AssignmentExpression	"code = process_client_order ( & poc -> corder , pgs , & phc -> params . client_order , mem )"		5120443	0		=			
ANR	5121141	Identifier	code		5120443	0					
ANR	5121142	CallExpression	"process_client_order ( & poc -> corder , pgs , & phc -> params . client_order , mem )"		5120443	1					
ANR	5121143	Callee	process_client_order		5120443	0					
ANR	5121144	Identifier	process_client_order		5120443	0					
ANR	5121145	ArgumentList	& poc -> corder		5120443	1					
ANR	5121146	Argument	& poc -> corder		5120443	0					
ANR	5121147	UnaryOperationExpression	& poc -> corder		5120443	0					
ANR	5121148	UnaryOperator	&		5120443	0					
ANR	5121149	PtrMemberAccess	poc -> corder		5120443	1					
ANR	5121150	Identifier	poc		5120443	0					
ANR	5121151	Identifier	corder		5120443	1					
ANR	5121152	Argument	pgs		5120443	1					
ANR	5121153	Identifier	pgs		5120443	0					
ANR	5121154	Argument	& phc -> params . client_order		5120443	2					
ANR	5121155	UnaryOperationExpression	& phc -> params . client_order		5120443	0					
ANR	5121156	UnaryOperator	&		5120443	0					
ANR	5121157	MemberAccess	phc -> params . client_order		5120443	1					
ANR	5121158	PtrMemberAccess	phc -> params		5120443	0					
ANR	5121159	Identifier	phc		5120443	0					
ANR	5121160	Identifier	params		5120443	1					
ANR	5121161	Identifier	client_order		5120443	1					
ANR	5121162	Argument	mem		5120443	3					
ANR	5121163	Identifier	mem		5120443	0					
ANR	5121164	BreakStatement	break ;	288:28:10652:10657	5120443	11	True				
ANR	5121165	Label	default :	289:24:10683:10690	5120443	12	True				
ANR	5121166	Identifier	default		5120443	0					
ANR	5121167	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	290:28:10720:10761	5120443	13	True				
ANR	5121168	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		5120443	0		=			
ANR	5121169	Identifier	code		5120443	0					
ANR	5121170	CallExpression	gs_note_error ( gs_error_rangecheck )		5120443	1					
ANR	5121171	Callee	gs_note_error		5120443	0					
ANR	5121172	Identifier	gs_note_error		5120443	0					
ANR	5121173	ArgumentList	gs_error_rangecheck		5120443	1					
ANR	5121174	Argument	gs_error_rangecheck		5120443	0					
ANR	5121175	Identifier	gs_error_rangecheck		5120443	0					
ANR	5121176	BreakStatement	break ;	291:28:10791:10796	5120443	14	True				
ANR	5121177	IfStatement	if ( code < 0 )		5120443	5					
ANR	5121178	Condition	code < 0	293:24:10844:10851	5120443	0	True				
ANR	5121179	RelationalExpression	code < 0		5120443	0		<			
ANR	5121180	Identifier	code		5120443	0					
ANR	5121181	PrimaryExpression	0		5120443	1					
ANR	5121182	BreakStatement	break ;	294:24:10878:10883	5120443	1	True				
ANR	5121183	IfStatement	if ( code < 0 )		5120443	9					
ANR	5121184	Condition	code < 0	296:20:10923:10930	5120443	0	True				
ANR	5121185	RelationalExpression	code < 0		5120443	0		<			
ANR	5121186	Identifier	code		5120443	0					
ANR	5121187	PrimaryExpression	0		5120443	1					
ANR	5121188	BreakStatement	break ;	297:20:10953:10958	5120443	1	True				
ANR	5121189	ExpressionStatement	pdht -> order = pocs [ 0 ] . corder	298:16:10976:11004	5120443	10	True				
ANR	5121190	AssignmentExpression	pdht -> order = pocs [ 0 ] . corder		5120443	0		=			
ANR	5121191	PtrMemberAccess	pdht -> order		5120443	0					
ANR	5121192	Identifier	pdht		5120443	0					
ANR	5121193	Identifier	order		5120443	1					
ANR	5121194	MemberAccess	pocs [ 0 ] . corder		5120443	1					
ANR	5121195	ArrayIndexing	pocs [ 0 ]		5120443	0					
ANR	5121196	Identifier	pocs		5120443	0					
ANR	5121197	PrimaryExpression	0		5120443	1					
ANR	5121198	Identifier	corder		5120443	1					
ANR	5121199	IfStatement	if ( count == 1 )		5120443	11					
ANR	5121200	Condition	count == 1	299:20:11040:11049	5120443	0	True				
ANR	5121201	EqualityExpression	count == 1		5120443	0		==			
ANR	5121202	Identifier	count		5120443	0					
ANR	5121203	PrimaryExpression	1		5120443	1					
ANR	5121204	CompoundStatement		133:32:5777:5777	5120443	1					
ANR	5121205	ExpressionStatement	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"	302:20:11176:11219	5120443	0	True				
ANR	5121206	CallExpression	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"		5120443	0					
ANR	5121207	Callee	gs_free_object		5120443	0					
ANR	5121208	Identifier	gs_free_object		5120443	0					
ANR	5121209	ArgumentList	mem		5120443	1					
ANR	5121210	Argument	mem		5120443	0					
ANR	5121211	Identifier	mem		5120443	0					
ANR	5121212	Argument	pocs		5120443	1					
ANR	5121213	Identifier	pocs		5120443	0					
ANR	5121214	Argument	"""gs_sethalftone"""		5120443	2					
ANR	5121215	PrimaryExpression	"""gs_sethalftone"""		5120443	0					
ANR	5121216	ExpressionStatement	pdht -> components = 0	303:20:11241:11261	5120443	1	True				
ANR	5121217	AssignmentExpression	pdht -> components = 0		5120443	0		=			
ANR	5121218	PtrMemberAccess	pdht -> components		5120443	0					
ANR	5121219	Identifier	pdht		5120443	0					
ANR	5121220	Identifier	components		5120443	1					
ANR	5121221	PrimaryExpression	0		5120443	1					
ANR	5121222	ExpressionStatement	pdht -> num_comp = 0	304:20:11283:11301	5120443	2	True				
ANR	5121223	AssignmentExpression	pdht -> num_comp = 0		5120443	0		=			
ANR	5121224	PtrMemberAccess	pdht -> num_comp		5120443	0					
ANR	5121225	Identifier	pdht		5120443	0					
ANR	5121226	Identifier	num_comp		5120443	1					
ANR	5121227	PrimaryExpression	0		5120443	1					
ANR	5121228	ElseStatement	else		5120443	0					
ANR	5121229	CompoundStatement		139:23:6051:6051	5120443	0					
ANR	5121230	ExpressionStatement	pdht -> components = pocs	306:20:11348:11371	5120443	0	True				
ANR	5121231	AssignmentExpression	pdht -> components = pocs		5120443	0		=			
ANR	5121232	PtrMemberAccess	pdht -> components		5120443	0					
ANR	5121233	Identifier	pdht		5120443	0					
ANR	5121234	Identifier	components		5120443	1					
ANR	5121235	Identifier	pocs		5120443	1					
ANR	5121236	ExpressionStatement	pdht -> num_comp = count	307:20:11393:11415	5120443	1	True				
ANR	5121237	AssignmentExpression	pdht -> num_comp = count		5120443	0		=			
ANR	5121238	PtrMemberAccess	pdht -> num_comp		5120443	0					
ANR	5121239	Identifier	pdht		5120443	0					
ANR	5121240	Identifier	num_comp		5120443	1					
ANR	5121241	Identifier	count		5120443	1					
ANR	5121242	BreakStatement	break ;	310:12:11461:11466	5120443	26	True				
ANR	5121243	Label	default :	311:8:11476:11483	5120443	27	True				
ANR	5121244	Identifier	default		5120443	0					
ANR	5121245	ExpressionStatement	return_error ( gs_error_rangecheck )	312:12:11497:11530	5120443	28	True				
ANR	5121246	CallExpression	return_error ( gs_error_rangecheck )		5120443	0					
ANR	5121247	Callee	return_error		5120443	0					
ANR	5121248	Identifier	return_error		5120443	0					
ANR	5121249	ArgumentList	gs_error_rangecheck		5120443	1					
ANR	5121250	Argument	gs_error_rangecheck		5120443	0					
ANR	5121251	Identifier	gs_error_rangecheck		5120443	0					
ANR	5121252	IfStatement	if ( code < 0 )		5120443	4					
ANR	5121253	Condition	code < 0	314:8:11546:11553	5120443	0	True				
ANR	5121254	RelationalExpression	code < 0		5120443	0		<			
ANR	5121255	Identifier	code		5120443	0					
ANR	5121256	PrimaryExpression	0		5120443	1					
ANR	5121257	ExpressionStatement	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"	315:8:11564:11607	5120443	1	True				
ANR	5121258	CallExpression	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"		5120443	0					
ANR	5121259	Callee	gs_free_object		5120443	0					
ANR	5121260	Identifier	gs_free_object		5120443	0					
ANR	5121261	ArgumentList	mem		5120443	1					
ANR	5121262	Argument	mem		5120443	0					
ANR	5121263	Identifier	mem		5120443	0					
ANR	5121264	Argument	pocs		5120443	1					
ANR	5121265	Identifier	pocs		5120443	0					
ANR	5121266	Argument	"""gs_sethalftone"""		5120443	2					
ANR	5121267	PrimaryExpression	"""gs_sethalftone"""		5120443	0					
ANR	5121268	ReturnStatement	return code ;	316:4:11613:11624	5120443	5	True				
ANR	5121269	Identifier	code		5120443	0					
ANR	5121270	ReturnType	int		5120443	1					
ANR	5121271	Identifier	gs_sethalftone_prepare		5120443	2					
ANR	5121272	ParameterList	"gs_gstate * pgs , gs_halftone * pht , gx_device_halftone * pdht"		5120443	3					
ANR	5121273	Parameter	gs_gstate * pgs	165:23:5188:5202	5120443	0	True				
ANR	5121274	ParameterType	gs_gstate *		5120443	0					
ANR	5121275	Identifier	pgs		5120443	1					
ANR	5121276	Parameter	gs_halftone * pht	165:40:5205:5221	5120443	1	True				
ANR	5121277	ParameterType	gs_halftone *		5120443	0					
ANR	5121278	Identifier	pht		5120443	1					
ANR	5121279	Parameter	gx_device_halftone * pdht	166:23:5247:5271	5120443	2	True				
ANR	5121280	ParameterType	gx_device_halftone *		5120443	0					
ANR	5121281	Identifier	pdht		5120443	1					
ANR	5121282	CFGEntryNode	ENTRY		5120443		True				
ANR	5121283	CFGExitNode	EXIT		5120443		True				
ANR	5121284	Symbol	process_spot		5120443						
ANR	5121285	Symbol	pht -> params . colorscreen . screens		5120443						
ANR	5121286	Symbol	process_threshold2		5120443						
ANR	5121287	Symbol	gs_error_rangecheck		5120443						
ANR	5121288	Symbol	* pgs		5120443						
ANR	5121289	Symbol	pdht -> order		5120443						
ANR	5121290	Symbol	& phc -> params		5120443						
ANR	5121291	Symbol	phc -> comp_number		5120443						
ANR	5121292	Symbol	process_threshold		5120443						
ANR	5121293	Symbol	strlen		5120443						
ANR	5121294	Symbol	gs_color_name_component_number		5120443						
ANR	5121295	Symbol	& pht -> params . spot		5120443						
ANR	5121296	Symbol	& phc -> params . threshold		5120443						
ANR	5121297	Symbol	poc -> comp_number		5120443						
ANR	5121298	Symbol	* pdht		5120443						
ANR	5121299	Symbol	* phc		5120443						
ANR	5121300	Symbol	pgs -> device		5120443						
ANR	5121301	Symbol	& poc -> corder		5120443						
ANR	5121302	Symbol	pocs		5120443						
ANR	5121303	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		5120443						
ANR	5121304	Symbol	gs_alloc_struct_array		5120443						
ANR	5121305	Symbol	cindex		5120443						
ANR	5121306	Symbol	* cindex		5120443						
ANR	5121307	Symbol	pht -> params . multiple		5120443						
ANR	5121308	Symbol	count		5120443						
ANR	5121309	Symbol	* color_names		5120443						
ANR	5121310	Symbol	& phc -> params . threshold2		5120443						
ANR	5121311	Symbol	phc -> type		5120443						
ANR	5121312	Symbol	& pht -> params . client_order		5120443						
ANR	5121313	Symbol	& pht -> params		5120443						
ANR	5121314	Symbol	* poc		5120443						
ANR	5121315	Symbol	poc -> corder		5120443						
ANR	5121316	Symbol	& pht -> params . threshold2		5120443						
ANR	5121317	Symbol	pht -> rc		5120443						
ANR	5121318	Symbol	pdht		5120443						
ANR	5121319	Symbol	pdht -> num_comp		5120443						
ANR	5121320	Symbol	& senum		5120443						
ANR	5121321	Symbol	true		5120443						
ANR	5121322	Symbol	poc_next		5120443						
ANR	5121323	Symbol	pht -> params . multiple . num_comp		5120443						
ANR	5121324	Symbol	phc -> params		5120443						
ANR	5121325	Symbol	& pdht -> order		5120443						
ANR	5121326	Symbol	have_Default		5120443						
ANR	5121327	Symbol	code		5120443						
ANR	5121328	Symbol	color_names		5120443						
ANR	5121329	Symbol	poc		5120443						
ANR	5121330	Symbol	* pocs		5120443						
ANR	5121331	Symbol	pdht -> components		5120443						
ANR	5121332	Symbol	& phc -> params . client_order		5120443						
ANR	5121333	Symbol	pocs [ 0 ] . corder		5120443						
ANR	5121334	Symbol	& phc -> params . spot		5120443						
ANR	5121335	Symbol	mem		5120443						
ANR	5121336	Symbol	gx_ht_process_screen_memory		5120443						
ANR	5121337	Symbol	pgs		5120443						
ANR	5121338	Symbol	pht -> rc . memory		5120443						
ANR	5121339	Symbol	* pht		5120443						
ANR	5121340	Symbol	ci		5120443						
ANR	5121341	Symbol	process_client_order		5120443						
ANR	5121342	Symbol	& pht -> params . threshold		5120443						
ANR	5121343	Symbol	false		5120443						
ANR	5121344	Symbol	i		5120443						
ANR	5121345	Symbol	phc		5120443						
ANR	5121346	Symbol	senum . order		5120443						
ANR	5121347	Symbol	pht -> params . colorscreen . screens . indexed		5120443						
ANR	5121348	Symbol	pht -> type		5120443						
ANR	5121349	Symbol	senum		5120443						
ANR	5121350	Symbol	gs_error_VMerror		5120443						
ANR	5121351	Symbol	pht -> params . colorscreen		5120443						
ANR	5121352	Symbol	gs_note_error		5120443						
ANR	5121353	Symbol	* i		5120443						
ANR	5121354	Symbol	gs_currentaccuratescreens		5120443						
ANR	5121355	Symbol	poc -> cname		5120443						
ANR	5121356	Symbol	pht -> params . multiple . components		5120443						
ANR	5121357	Symbol	gx_ht_order_component		5120443						
ANR	5121358	Symbol	phc -> cname		5120443						
ANR	5121359	Symbol	& st_ht_order_component_element		5120443						
ANR	5121360	Symbol	pht		5120443						
ANR	5121361	Symbol	pht -> params		5120443						
ANR	5121362	Function	process_transfer	322:0:11720:12548							
ANR	5121363	FunctionDef	"process_transfer (gx_ht_order * porder , gs_gstate * pgs , gs_mapping_proc proc , gs_mapping_closure_t * pmc , gs_memory_t * mem)"		5121362	0					
ANR	5121364	CompoundStatement		326:0:11890:12548	5121362	0					
ANR	5121365	IdentifierDeclStatement	gx_transfer_map * pmap ;	327:4:11896:11917	5121362	0	True				
ANR	5121366	IdentifierDecl	* pmap		5121362	0					
ANR	5121367	IdentifierDeclType	gx_transfer_map *		5121362	0					
ANR	5121368	Identifier	pmap		5121362	1					
ANR	5121369	IfStatement	if ( proc == 0 && pmc -> proc == 0 )		5121362	1					
ANR	5121370	Condition	proc == 0 && pmc -> proc == 0	329:8:11928:11954	5121362	0	True				
ANR	5121371	AndExpression	proc == 0 && pmc -> proc == 0		5121362	0		&&			
ANR	5121372	EqualityExpression	proc == 0		5121362	0		==			
ANR	5121373	Identifier	proc		5121362	0					
ANR	5121374	PrimaryExpression	0		5121362	1					
ANR	5121375	EqualityExpression	pmc -> proc == 0		5121362	1		==			
ANR	5121376	PtrMemberAccess	pmc -> proc		5121362	0					
ANR	5121377	Identifier	pmc		5121362	0					
ANR	5121378	Identifier	proc		5121362	1					
ANR	5121379	PrimaryExpression	0		5121362	1					
ANR	5121380	ReturnStatement	return 0 ;	330:8:11965:11973	5121362	1	True				
ANR	5121381	PrimaryExpression	0		5121362	0					
ANR	5121382	ExpressionStatement	"rc_alloc_struct_1 ( pmap , gx_transfer_map , & st_transfer_map , mem , return_error ( gs_error_VMerror ) , ""process_transfer"" )"	335:4:12092:12251	5121362	2	True				
ANR	5121383	CallExpression	"rc_alloc_struct_1 ( pmap , gx_transfer_map , & st_transfer_map , mem , return_error ( gs_error_VMerror ) , ""process_transfer"" )"		5121362	0					
ANR	5121384	Callee	rc_alloc_struct_1		5121362	0					
ANR	5121385	Identifier	rc_alloc_struct_1		5121362	0					
ANR	5121386	ArgumentList	pmap		5121362	1					
ANR	5121387	Argument	pmap		5121362	0					
ANR	5121388	Identifier	pmap		5121362	0					
ANR	5121389	Argument	gx_transfer_map		5121362	1					
ANR	5121390	Identifier	gx_transfer_map		5121362	0					
ANR	5121391	Argument	& st_transfer_map		5121362	2					
ANR	5121392	UnaryOperationExpression	& st_transfer_map		5121362	0					
ANR	5121393	UnaryOperator	&		5121362	0					
ANR	5121394	Identifier	st_transfer_map		5121362	1					
ANR	5121395	Argument	mem		5121362	3					
ANR	5121396	Identifier	mem		5121362	0					
ANR	5121397	Argument	return_error ( gs_error_VMerror )		5121362	4					
ANR	5121398	CallExpression	return_error ( gs_error_VMerror )		5121362	0					
ANR	5121399	Callee	return_error		5121362	0					
ANR	5121400	Identifier	return_error		5121362	0					
ANR	5121401	ArgumentList	gs_error_VMerror		5121362	1					
ANR	5121402	Argument	gs_error_VMerror		5121362	0					
ANR	5121403	Identifier	gs_error_VMerror		5121362	0					
ANR	5121404	Argument	"""process_transfer"""		5121362	5					
ANR	5121405	PrimaryExpression	"""process_transfer"""		5121362	0					
ANR	5121406	ExpressionStatement	pmap -> proc = proc	338:4:12257:12274	5121362	3	True				
ANR	5121407	AssignmentExpression	pmap -> proc = proc		5121362	0		=			
ANR	5121408	PtrMemberAccess	pmap -> proc		5121362	0					
ANR	5121409	Identifier	pmap		5121362	0					
ANR	5121410	Identifier	proc		5121362	1					
ANR	5121411	Identifier	proc		5121362	1					
ANR	5121412	ExpressionStatement	pmap -> closure = * pmc	339:4:12304:12324	5121362	4	True				
ANR	5121413	AssignmentExpression	pmap -> closure = * pmc		5121362	0		=			
ANR	5121414	PtrMemberAccess	pmap -> closure		5121362	0					
ANR	5121415	Identifier	pmap		5121362	0					
ANR	5121416	Identifier	closure		5121362	1					
ANR	5121417	UnaryOperationExpression	* pmc		5121362	1					
ANR	5121418	UnaryOperator	*		5121362	0					
ANR	5121419	Identifier	pmc		5121362	1					
ANR	5121420	ExpressionStatement	"pmap -> id = gs_next_ids ( mem , 1 )"	340:4:12330:12360	5121362	5	True				
ANR	5121421	AssignmentExpression	"pmap -> id = gs_next_ids ( mem , 1 )"		5121362	0		=			
ANR	5121422	PtrMemberAccess	pmap -> id		5121362	0					
ANR	5121423	Identifier	pmap		5121362	0					
ANR	5121424	Identifier	id		5121362	1					
ANR	5121425	CallExpression	"gs_next_ids ( mem , 1 )"		5121362	1					
ANR	5121426	Callee	gs_next_ids		5121362	0					
ANR	5121427	Identifier	gs_next_ids		5121362	0					
ANR	5121428	ArgumentList	mem		5121362	1					
ANR	5121429	Argument	mem		5121362	0					
ANR	5121430	Identifier	mem		5121362	0					
ANR	5121431	Argument	1		5121362	1					
ANR	5121432	PrimaryExpression	1		5121362	0					
ANR	5121433	ExpressionStatement	porder -> transfer = pmap	341:4:12366:12389	5121362	6	True				
ANR	5121434	AssignmentExpression	porder -> transfer = pmap		5121362	0		=			
ANR	5121435	PtrMemberAccess	porder -> transfer		5121362	0					
ANR	5121436	Identifier	porder		5121362	0					
ANR	5121437	Identifier	transfer		5121362	1					
ANR	5121438	Identifier	pmap		5121362	1					
ANR	5121439	IfStatement	if ( proc == gs_mapped_transfer )		5121362	7					
ANR	5121440	Condition	proc == gs_mapped_transfer	342:8:12399:12424	5121362	0	True				
ANR	5121441	EqualityExpression	proc == gs_mapped_transfer		5121362	0		==			
ANR	5121442	Identifier	proc		5121362	0					
ANR	5121443	Identifier	gs_mapped_transfer		5121362	1					
ANR	5121444	ReturnStatement	return 0 ;	343:8:12435:12443	5121362	1	True				
ANR	5121445	PrimaryExpression	0		5121362	0					
ANR	5121446	ExpressionStatement	"load_transfer_map ( pgs , pmap , 0.0 )"	344:4:12499:12532	5121362	8	True				
ANR	5121447	CallExpression	"load_transfer_map ( pgs , pmap , 0.0 )"		5121362	0					
ANR	5121448	Callee	load_transfer_map		5121362	0					
ANR	5121449	Identifier	load_transfer_map		5121362	0					
ANR	5121450	ArgumentList	pgs		5121362	1					
ANR	5121451	Argument	pgs		5121362	0					
ANR	5121452	Identifier	pgs		5121362	0					
ANR	5121453	Argument	pmap		5121362	1					
ANR	5121454	Identifier	pmap		5121362	0					
ANR	5121455	Argument	0.0		5121362	2					
ANR	5121456	PrimaryExpression	0.0		5121362	0					
ANR	5121457	ReturnStatement	return 0 ;	345:4:12538:12546	5121362	9	True				
ANR	5121458	PrimaryExpression	0		5121362	0					
ANR	5121459	ReturnType	static int		5121362	1					
ANR	5121460	Identifier	process_transfer		5121362	2					
ANR	5121461	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_mapping_proc proc , gs_mapping_closure_t * pmc , gs_memory_t * mem"		5121362	3					
ANR	5121462	Parameter	gx_ht_order * porder	323:17:11748:11767	5121362	0	True				
ANR	5121463	ParameterType	gx_ht_order *		5121362	0					
ANR	5121464	Identifier	porder		5121362	1					
ANR	5121465	Parameter	gs_gstate * pgs	323:39:11770:11784	5121362	1	True				
ANR	5121466	ParameterType	gs_gstate *		5121362	0					
ANR	5121467	Identifier	pgs		5121362	1					
ANR	5121468	Parameter	gs_mapping_proc proc	324:17:11804:11823	5121362	2	True				
ANR	5121469	ParameterType	gs_mapping_proc		5121362	0					
ANR	5121470	Identifier	proc		5121362	1					
ANR	5121471	Parameter	gs_mapping_closure_t * pmc	324:39:11826:11851	5121362	3	True				
ANR	5121472	ParameterType	gs_mapping_closure_t *		5121362	0					
ANR	5121473	Identifier	pmc		5121362	1					
ANR	5121474	Parameter	gs_memory_t * mem	325:17:11871:11887	5121362	4	True				
ANR	5121475	ParameterType	gs_memory_t *		5121362	0					
ANR	5121476	Identifier	mem		5121362	1					
ANR	5121477	CFGEntryNode	ENTRY		5121362		True				
ANR	5121478	CFGExitNode	EXIT		5121362		True				
ANR	5121479	Symbol	return_error		5121362						
ANR	5121480	Symbol	* pmap		5121362						
ANR	5121481	Symbol	proc		5121362						
ANR	5121482	Symbol	pmc		5121362						
ANR	5121483	Symbol	pmc -> proc		5121362						
ANR	5121484	Symbol	gx_transfer_map		5121362						
ANR	5121485	Symbol	pmap -> closure		5121362						
ANR	5121486	Symbol	gs_next_ids		5121362						
ANR	5121487	Symbol	porder		5121362						
ANR	5121488	Symbol	porder -> transfer		5121362						
ANR	5121489	Symbol	& st_transfer_map		5121362						
ANR	5121490	Symbol	pmap -> proc		5121362						
ANR	5121491	Symbol	gs_mapped_transfer		5121362						
ANR	5121492	Symbol	* pmc		5121362						
ANR	5121493	Symbol	gs_error_VMerror		5121362						
ANR	5121494	Symbol	mem		5121362						
ANR	5121495	Symbol	pmap -> id		5121362						
ANR	5121496	Symbol	pmap		5121362						
ANR	5121497	Symbol	pgs		5121362						
ANR	5121498	Symbol	* porder		5121362						
ANR	5121499	Function	process_spot	349:0:12579:13055							
ANR	5121500	FunctionDef	"process_spot (gx_ht_order * porder , gs_gstate * pgs , gs_spot_halftone * phsp , gs_memory_t * mem)"		5121499	0					
ANR	5121501	CompoundStatement		352:0:12699:13055	5121499	0					
ANR	5121502	IdentifierDeclStatement	gs_screen_enum senum ;	353:4:12705:12725	5121499	0	True				
ANR	5121503	IdentifierDecl	senum		5121499	0					
ANR	5121504	IdentifierDeclType	gs_screen_enum		5121499	0					
ANR	5121505	Identifier	senum		5121499	1					
ANR	5121506	IdentifierDeclStatement	"int code = gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem ) ;"	355:4:12732:12870	5121499	1	True				
ANR	5121507	IdentifierDecl	"code = gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem )"		5121499	0					
ANR	5121508	IdentifierDeclType	int		5121499	0					
ANR	5121509	Identifier	code		5121499	1					
ANR	5121510	AssignmentExpression	"code = gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem )"		5121499	2		=			
ANR	5121511	Identifier	code		5121499	0					
ANR	5121512	CallExpression	"gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem )"		5121499	1					
ANR	5121513	Callee	gx_ht_process_screen_memory		5121499	0					
ANR	5121514	Identifier	gx_ht_process_screen_memory		5121499	0					
ANR	5121515	ArgumentList	& senum		5121499	1					
ANR	5121516	Argument	& senum		5121499	0					
ANR	5121517	UnaryOperationExpression	& senum		5121499	0					
ANR	5121518	UnaryOperator	&		5121499	0					
ANR	5121519	Identifier	senum		5121499	1					
ANR	5121520	Argument	pgs		5121499	1					
ANR	5121521	Identifier	pgs		5121499	0					
ANR	5121522	Argument	& phsp -> screen		5121499	2					
ANR	5121523	UnaryOperationExpression	& phsp -> screen		5121499	0					
ANR	5121524	UnaryOperator	&		5121499	0					
ANR	5121525	PtrMemberAccess	phsp -> screen		5121499	1					
ANR	5121526	Identifier	phsp		5121499	0					
ANR	5121527	Identifier	screen		5121499	1					
ANR	5121528	Argument	phsp -> accurate_screens		5121499	3					
ANR	5121529	PtrMemberAccess	phsp -> accurate_screens		5121499	0					
ANR	5121530	Identifier	phsp		5121499	0					
ANR	5121531	Identifier	accurate_screens		5121499	1					
ANR	5121532	Argument	mem		5121499	4					
ANR	5121533	Identifier	mem		5121499	0					
ANR	5121534	IfStatement	if ( code < 0 )		5121499	2					
ANR	5121535	Condition	code < 0	358:8:12881:12888	5121499	0	True				
ANR	5121536	RelationalExpression	code < 0		5121499	0		<			
ANR	5121537	Identifier	code		5121499	0					
ANR	5121538	PrimaryExpression	0		5121499	1					
ANR	5121539	ReturnStatement	return code ;	359:8:12899:12910	5121499	1	True				
ANR	5121540	Identifier	code		5121499	0					
ANR	5121541	ExpressionStatement	* porder = senum . order	360:4:12916:12937	5121499	3	True				
ANR	5121542	AssignmentExpression	* porder = senum . order		5121499	0		=			
ANR	5121543	UnaryOperationExpression	* porder		5121499	0					
ANR	5121544	UnaryOperator	*		5121499	0					
ANR	5121545	Identifier	porder		5121499	1					
ANR	5121546	MemberAccess	senum . order		5121499	1					
ANR	5121547	Identifier	senum		5121499	0					
ANR	5121548	Identifier	order		5121499	1					
ANR	5121549	ReturnStatement	"return process_transfer ( porder , pgs , phsp -> transfer , & phsp -> transfer_closure , mem ) ;"	361:4:12943:13053	5121499	4	True				
ANR	5121550	CallExpression	"process_transfer ( porder , pgs , phsp -> transfer , & phsp -> transfer_closure , mem )"		5121499	0					
ANR	5121551	Callee	process_transfer		5121499	0					
ANR	5121552	Identifier	process_transfer		5121499	0					
ANR	5121553	ArgumentList	porder		5121499	1					
ANR	5121554	Argument	porder		5121499	0					
ANR	5121555	Identifier	porder		5121499	0					
ANR	5121556	Argument	pgs		5121499	1					
ANR	5121557	Identifier	pgs		5121499	0					
ANR	5121558	Argument	phsp -> transfer		5121499	2					
ANR	5121559	PtrMemberAccess	phsp -> transfer		5121499	0					
ANR	5121560	Identifier	phsp		5121499	0					
ANR	5121561	Identifier	transfer		5121499	1					
ANR	5121562	Argument	& phsp -> transfer_closure		5121499	3					
ANR	5121563	UnaryOperationExpression	& phsp -> transfer_closure		5121499	0					
ANR	5121564	UnaryOperator	&		5121499	0					
ANR	5121565	PtrMemberAccess	phsp -> transfer_closure		5121499	1					
ANR	5121566	Identifier	phsp		5121499	0					
ANR	5121567	Identifier	transfer_closure		5121499	1					
ANR	5121568	Argument	mem		5121499	4					
ANR	5121569	Identifier	mem		5121499	0					
ANR	5121570	ReturnType	static int		5121499	1					
ANR	5121571	Identifier	process_spot		5121499	2					
ANR	5121572	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_spot_halftone * phsp , gs_memory_t * mem"		5121499	3					
ANR	5121573	Parameter	gx_ht_order * porder	350:13:12603:12622	5121499	0	True				
ANR	5121574	ParameterType	gx_ht_order *		5121499	0					
ANR	5121575	Identifier	porder		5121499	1					
ANR	5121576	Parameter	gs_gstate * pgs	350:35:12625:12639	5121499	1	True				
ANR	5121577	ParameterType	gs_gstate *		5121499	0					
ANR	5121578	Identifier	pgs		5121499	1					
ANR	5121579	Parameter	gs_spot_halftone * phsp	351:13:12655:12677	5121499	2	True				
ANR	5121580	ParameterType	gs_spot_halftone *		5121499	0					
ANR	5121581	Identifier	phsp		5121499	1					
ANR	5121582	Parameter	gs_memory_t * mem	351:38:12680:12696	5121499	3	True				
ANR	5121583	ParameterType	gs_memory_t *		5121499	0					
ANR	5121584	Identifier	mem		5121499	1					
ANR	5121585	CFGEntryNode	ENTRY		5121499		True				
ANR	5121586	CFGExitNode	EXIT		5121499		True				
ANR	5121587	Symbol	phsp		5121499						
ANR	5121588	Symbol	phsp -> accurate_screens		5121499						
ANR	5121589	Symbol	code		5121499						
ANR	5121590	Symbol	* phsp		5121499						
ANR	5121591	Symbol	senum . order		5121499						
ANR	5121592	Symbol	porder		5121499						
ANR	5121593	Symbol	phsp -> transfer		5121499						
ANR	5121594	Symbol	senum		5121499						
ANR	5121595	Symbol	process_transfer		5121499						
ANR	5121596	Symbol	& phsp -> transfer_closure		5121499						
ANR	5121597	Symbol	mem		5121499						
ANR	5121598	Symbol	& phsp -> screen		5121499						
ANR	5121599	Symbol	gx_ht_process_screen_memory		5121499						
ANR	5121600	Symbol	& senum		5121499						
ANR	5121601	Symbol	pgs		5121499						
ANR	5121602	Symbol	* porder		5121499						
ANR	5121603	Function	gx_ht_complete_threshold_order	366:0:13117:13890							
ANR	5121604	FunctionDef	gx_ht_complete_threshold_order (gx_ht_order * porder)		5121603	0					
ANR	5121605	CompoundStatement		368:0:13175:13890	5121603	0					
ANR	5121606	IdentifierDeclStatement	int num_levels = porder -> num_levels ;	369:4:13181:13216	5121603	0	True				
ANR	5121607	IdentifierDecl	num_levels = porder -> num_levels		5121603	0					
ANR	5121608	IdentifierDeclType	int		5121603	0					
ANR	5121609	Identifier	num_levels		5121603	1					
ANR	5121610	AssignmentExpression	num_levels = porder -> num_levels		5121603	2		=			
ANR	5121611	Identifier	num_levels		5121603	0					
ANR	5121612	PtrMemberAccess	porder -> num_levels		5121603	1					
ANR	5121613	Identifier	porder		5121603	0					
ANR	5121614	Identifier	num_levels		5121603	1					
ANR	5121615	IdentifierDeclStatement	uint * levels = porder -> levels ;	370:4:13222:13251	5121603	1	True				
ANR	5121616	IdentifierDecl	* levels = porder -> levels		5121603	0					
ANR	5121617	IdentifierDeclType	uint *		5121603	0					
ANR	5121618	Identifier	levels		5121603	1					
ANR	5121619	AssignmentExpression	* levels = porder -> levels		5121603	2		=			
ANR	5121620	Identifier	levels		5121603	0					
ANR	5121621	PtrMemberAccess	porder -> levels		5121603	1					
ANR	5121622	Identifier	porder		5121603	0					
ANR	5121623	Identifier	levels		5121603	1					
ANR	5121624	IdentifierDeclStatement	uint size = porder -> num_bits ;	371:4:13257:13285	5121603	2	True				
ANR	5121625	IdentifierDecl	size = porder -> num_bits		5121603	0					
ANR	5121626	IdentifierDeclType	uint		5121603	0					
ANR	5121627	Identifier	size		5121603	1					
ANR	5121628	AssignmentExpression	size = porder -> num_bits		5121603	2		=			
ANR	5121629	Identifier	size		5121603	0					
ANR	5121630	PtrMemberAccess	porder -> num_bits		5121603	1					
ANR	5121631	Identifier	porder		5121603	0					
ANR	5121632	Identifier	num_bits		5121603	1					
ANR	5121633	IdentifierDeclStatement	gx_ht_bit * bits = porder -> bit_data ;	372:4:13291:13325	5121603	3	True				
ANR	5121634	IdentifierDecl	* bits = porder -> bit_data		5121603	0					
ANR	5121635	IdentifierDeclType	gx_ht_bit *		5121603	0					
ANR	5121636	Identifier	bits		5121603	1					
ANR	5121637	AssignmentExpression	* bits = porder -> bit_data		5121603	2		=			
ANR	5121638	Identifier	bits		5121603	0					
ANR	5121639	PtrMemberAccess	porder -> bit_data		5121603	1					
ANR	5121640	Identifier	porder		5121603	0					
ANR	5121641	Identifier	bit_data		5121603	1					
ANR	5121642	IdentifierDeclStatement	"uint i , j ;"	373:4:13331:13340	5121603	4	True				
ANR	5121643	IdentifierDecl	i		5121603	0					
ANR	5121644	IdentifierDeclType	uint		5121603	0					
ANR	5121645	Identifier	i		5121603	1					
ANR	5121646	IdentifierDecl	j		5121603	1					
ANR	5121647	IdentifierDeclType	uint		5121603	0					
ANR	5121648	Identifier	j		5121603	1					
ANR	5121649	ExpressionStatement	"gx_sort_ht_order ( bits , size )"	376:4:13409:13437	5121603	5	True				
ANR	5121650	CallExpression	"gx_sort_ht_order ( bits , size )"		5121603	0					
ANR	5121651	Callee	gx_sort_ht_order		5121603	0					
ANR	5121652	Identifier	gx_sort_ht_order		5121603	0					
ANR	5121653	ArgumentList	bits		5121603	1					
ANR	5121654	Argument	bits		5121603	0					
ANR	5121655	Identifier	bits		5121603	0					
ANR	5121656	Argument	size		5121603	1					
ANR	5121657	Identifier	size		5121603	0					
ANR	5121658	ForStatement	"for ( i = 0 , j = 0 ; i < size ; i ++ )"		5121603	6					
ANR	5121659	ForInit	"i = 0 , j = 0 ;"	379:9:13546:13558	5121603	0	True				
ANR	5121660	Expression	"i = 0 , j = 0"		5121603	0					
ANR	5121661	AssignmentExpression	i = 0		5121603	0		=			
ANR	5121662	Identifier	i		5121603	0					
ANR	5121663	PrimaryExpression	0		5121603	1					
ANR	5121664	AssignmentExpression	j = 0		5121603	1		=			
ANR	5121665	Identifier	j		5121603	0					
ANR	5121666	PrimaryExpression	0		5121603	1					
ANR	5121667	Condition	i < size	379:23:13560:13567	5121603	1	True				
ANR	5121668	RelationalExpression	i < size		5121603	0		<			
ANR	5121669	Identifier	i		5121603	0					
ANR	5121670	Identifier	size		5121603	1					
ANR	5121671	PostIncDecOperationExpression	i ++	379:33:13570:13572	5121603	2	True				
ANR	5121672	Identifier	i		5121603	0					
ANR	5121673	IncDec	++		5121603	1					
ANR	5121674	CompoundStatement		12:38:399:399	5121603	3					
ANR	5121675	IfStatement	if ( bits [ i ] . mask != j )		5121603	0					
ANR	5121676	Condition	bits [ i ] . mask != j	380:12:13589:13605	5121603	0	True				
ANR	5121677	EqualityExpression	bits [ i ] . mask != j		5121603	0		!=			
ANR	5121678	MemberAccess	bits [ i ] . mask		5121603	0					
ANR	5121679	ArrayIndexing	bits [ i ]		5121603	0					
ANR	5121680	Identifier	bits		5121603	0					
ANR	5121681	Identifier	i		5121603	1					
ANR	5121682	Identifier	mask		5121603	1					
ANR	5121683	Identifier	j		5121603	1					
ANR	5121684	CompoundStatement		13:31:432:432	5121603	1					
ANR	5121685	ExpressionStatement	"if_debug3 ( 'h' , ""[h]levels[%u..%u] = %u\\n"" , j , ( uint ) bits [ i ] . mask , i )"	381:12:13622:13713	5121603	0	True				
ANR	5121686	CallExpression	"if_debug3 ( 'h' , ""[h]levels[%u..%u] = %u\\n"" , j , ( uint ) bits [ i ] . mask , i )"		5121603	0					
ANR	5121687	Callee	if_debug3		5121603	0					
ANR	5121688	Identifier	if_debug3		5121603	0					
ANR	5121689	ArgumentList	'h'		5121603	1					
ANR	5121690	Argument	'h'		5121603	0					
ANR	5121691	PrimaryExpression	'h'		5121603	0					
ANR	5121692	Argument	"""[h]levels[%u..%u] = %u\\n"""		5121603	1					
ANR	5121693	PrimaryExpression	"""[h]levels[%u..%u] = %u\\n"""		5121603	0					
ANR	5121694	Argument	j		5121603	2					
ANR	5121695	Identifier	j		5121603	0					
ANR	5121696	Argument	( uint ) bits [ i ] . mask		5121603	3					
ANR	5121697	CastExpression	( uint ) bits [ i ] . mask		5121603	0					
ANR	5121698	CastTarget	uint		5121603	0					
ANR	5121699	MemberAccess	bits [ i ] . mask		5121603	1					
ANR	5121700	ArrayIndexing	bits [ i ]		5121603	0					
ANR	5121701	Identifier	bits		5121603	0					
ANR	5121702	Identifier	i		5121603	1					
ANR	5121703	Identifier	mask		5121603	1					
ANR	5121704	Argument	i		5121603	4					
ANR	5121705	Identifier	i		5121603	0					
ANR	5121706	WhileStatement	while ( j < bits [ i ] . mask )		5121603	1					
ANR	5121707	Condition	j < bits [ i ] . mask	383:19:13734:13749	5121603	0	True				
ANR	5121708	RelationalExpression	j < bits [ i ] . mask		5121603	0		<			
ANR	5121709	Identifier	j		5121603	0					
ANR	5121710	MemberAccess	bits [ i ] . mask		5121603	1					
ANR	5121711	ArrayIndexing	bits [ i ]		5121603	0					
ANR	5121712	Identifier	bits		5121603	0					
ANR	5121713	Identifier	i		5121603	1					
ANR	5121714	Identifier	mask		5121603	1					
ANR	5121715	ExpressionStatement	levels [ j ++ ] = i	384:16:13768:13783	5121603	1	True				
ANR	5121716	AssignmentExpression	levels [ j ++ ] = i		5121603	0		=			
ANR	5121717	ArrayIndexing	levels [ j ++ ]		5121603	0					
ANR	5121718	Identifier	levels		5121603	0					
ANR	5121719	PostIncDecOperationExpression	j ++		5121603	1					
ANR	5121720	Identifier	j		5121603	0					
ANR	5121721	IncDec	++		5121603	1					
ANR	5121722	Identifier	i		5121603	1					
ANR	5121723	WhileStatement	while ( j < num_levels )		5121603	7					
ANR	5121724	Condition	j < num_levels	387:11:13812:13825	5121603	0	True				
ANR	5121725	RelationalExpression	j < num_levels		5121603	0		<			
ANR	5121726	Identifier	j		5121603	0					
ANR	5121727	Identifier	num_levels		5121603	1					
ANR	5121728	ExpressionStatement	levels [ j ++ ] = size	388:8:13836:13854	5121603	1	True				
ANR	5121729	AssignmentExpression	levels [ j ++ ] = size		5121603	0		=			
ANR	5121730	ArrayIndexing	levels [ j ++ ]		5121603	0					
ANR	5121731	Identifier	levels		5121603	0					
ANR	5121732	PostIncDecOperationExpression	j ++		5121603	1					
ANR	5121733	Identifier	j		5121603	0					
ANR	5121734	IncDec	++		5121603	1					
ANR	5121735	Identifier	size		5121603	1					
ANR	5121736	ExpressionStatement	gx_ht_construct_bits ( porder )	389:4:13860:13888	5121603	8	True				
ANR	5121737	CallExpression	gx_ht_construct_bits ( porder )		5121603	0					
ANR	5121738	Callee	gx_ht_construct_bits		5121603	0					
ANR	5121739	Identifier	gx_ht_construct_bits		5121603	0					
ANR	5121740	ArgumentList	porder		5121603	1					
ANR	5121741	Argument	porder		5121603	0					
ANR	5121742	Identifier	porder		5121603	0					
ANR	5121743	ReturnType	void		5121603	1					
ANR	5121744	Identifier	gx_ht_complete_threshold_order		5121603	2					
ANR	5121745	ParameterList	gx_ht_order * porder		5121603	3					
ANR	5121746	Parameter	gx_ht_order * porder	367:31:13153:13172	5121603	0	True				
ANR	5121747	ParameterType	gx_ht_order *		5121603	0					
ANR	5121748	Identifier	porder		5121603	1					
ANR	5121749	CFGEntryNode	ENTRY		5121603		True				
ANR	5121750	CFGExitNode	EXIT		5121603		True				
ANR	5121751	Symbol	* bits		5121603						
ANR	5121752	Symbol	porder -> num_levels		5121603						
ANR	5121753	Symbol	bits		5121603						
ANR	5121754	Symbol	i		5121603						
ANR	5121755	Symbol	j		5121603						
ANR	5121756	Symbol	bits [ i ] . mask		5121603						
ANR	5121757	Symbol	porder -> num_bits		5121603						
ANR	5121758	Symbol	porder		5121603						
ANR	5121759	Symbol	* levels		5121603						
ANR	5121760	Symbol	porder -> levels		5121603						
ANR	5121761	Symbol	porder -> bit_data		5121603						
ANR	5121762	Symbol	* i		5121603						
ANR	5121763	Symbol	size		5121603						
ANR	5121764	Symbol	* porder		5121603						
ANR	5121765	Symbol	levels		5121603						
ANR	5121766	Symbol	num_levels		5121603						
ANR	5121767	Function	gx_ht_construct_threshold_order	391:0:13892:14040							
ANR	5121768	FunctionDef	"gx_ht_construct_threshold_order (gx_ht_order * porder , const byte * thresholds)"		5121767	0					
ANR	5121769	CompoundStatement		393:0:13975:14040	5121767	0					
ANR	5121770	ReturnStatement	"return porder -> procs -> construct_order ( porder , thresholds ) ;"	394:4:13981:14038	5121767	0	True				
ANR	5121771	CallExpression	"porder -> procs -> construct_order ( porder , thresholds )"		5121767	0					
ANR	5121772	Callee	porder -> procs -> construct_order		5121767	0					
ANR	5121773	PtrMemberAccess	porder -> procs -> construct_order		5121767	0					
ANR	5121774	PtrMemberAccess	porder -> procs		5121767	0					
ANR	5121775	Identifier	porder		5121767	0					
ANR	5121776	Identifier	procs		5121767	1					
ANR	5121777	Identifier	construct_order		5121767	1					
ANR	5121778	ArgumentList	porder		5121767	1					
ANR	5121779	Argument	porder		5121767	0					
ANR	5121780	Identifier	porder		5121767	0					
ANR	5121781	Argument	thresholds		5121767	1					
ANR	5121782	Identifier	thresholds		5121767	0					
ANR	5121783	ReturnType	int		5121767	1					
ANR	5121784	Identifier	gx_ht_construct_threshold_order		5121767	2					
ANR	5121785	ParameterList	"gx_ht_order * porder , const byte * thresholds"		5121767	3					
ANR	5121786	Parameter	gx_ht_order * porder	392:32:13928:13947	5121767	0	True				
ANR	5121787	ParameterType	gx_ht_order *		5121767	0					
ANR	5121788	Identifier	porder		5121767	1					
ANR	5121789	Parameter	const byte * thresholds	392:54:13950:13972	5121767	1	True				
ANR	5121790	ParameterType	const byte *		5121767	0					
ANR	5121791	Identifier	thresholds		5121767	1					
ANR	5121792	CFGEntryNode	ENTRY		5121767		True				
ANR	5121793	CFGExitNode	EXIT		5121767		True				
ANR	5121794	Symbol	porder -> procs -> construct_order		5121767						
ANR	5121795	Symbol	thresholds		5121767						
ANR	5121796	Symbol	porder -> procs		5121767						
ANR	5121797	Symbol	* porder -> procs		5121767						
ANR	5121798	Symbol	* * porder		5121767						
ANR	5121799	Symbol	* porder		5121767						
ANR	5121800	Symbol	porder		5121767						
ANR	5121801	Function	process_threshold	398:0:14076:14747							
ANR	5121802	FunctionDef	"process_threshold (gx_ht_order * porder , gs_gstate * pgs , gs_threshold_halftone * phtp , gs_memory_t * mem)"		5121801	0					
ANR	5121803	CompoundStatement		401:0:14211:14747	5121801	0					
ANR	5121804	IdentifierDeclStatement	int code ;	402:4:14217:14225	5121801	0	True				
ANR	5121805	IdentifierDecl	code		5121801	0					
ANR	5121806	IdentifierDeclType	int		5121801	0					
ANR	5121807	Identifier	code		5121801	1					
ANR	5121808	ExpressionStatement	"porder -> params . M = phtp -> width , porder -> params . N = 0"	404:4:14232:14284	5121801	1	True				
ANR	5121809	Expression	"porder -> params . M = phtp -> width , porder -> params . N = 0"		5121801	0					
ANR	5121810	AssignmentExpression	porder -> params . M = phtp -> width		5121801	0		=			
ANR	5121811	MemberAccess	porder -> params . M		5121801	0					
ANR	5121812	PtrMemberAccess	porder -> params		5121801	0					
ANR	5121813	Identifier	porder		5121801	0					
ANR	5121814	Identifier	params		5121801	1					
ANR	5121815	Identifier	M		5121801	1					
ANR	5121816	PtrMemberAccess	phtp -> width		5121801	1					
ANR	5121817	Identifier	phtp		5121801	0					
ANR	5121818	Identifier	width		5121801	1					
ANR	5121819	AssignmentExpression	porder -> params . N = 0		5121801	1		=			
ANR	5121820	MemberAccess	porder -> params . N		5121801	0					
ANR	5121821	PtrMemberAccess	porder -> params		5121801	0					
ANR	5121822	Identifier	porder		5121801	0					
ANR	5121823	Identifier	params		5121801	1					
ANR	5121824	Identifier	N		5121801	1					
ANR	5121825	PrimaryExpression	0		5121801	1					
ANR	5121826	ExpressionStatement	porder -> params . R = 1	405:4:14290:14310	5121801	2	True				
ANR	5121827	AssignmentExpression	porder -> params . R = 1		5121801	0		=			
ANR	5121828	MemberAccess	porder -> params . R		5121801	0					
ANR	5121829	PtrMemberAccess	porder -> params		5121801	0					
ANR	5121830	Identifier	porder		5121801	0					
ANR	5121831	Identifier	params		5121801	1					
ANR	5121832	Identifier	R		5121801	1					
ANR	5121833	PrimaryExpression	1		5121801	1					
ANR	5121834	ExpressionStatement	"porder -> params . M1 = phtp -> height , porder -> params . N1 = 0"	406:4:14316:14371	5121801	3	True				
ANR	5121835	Expression	"porder -> params . M1 = phtp -> height , porder -> params . N1 = 0"		5121801	0					
ANR	5121836	AssignmentExpression	porder -> params . M1 = phtp -> height		5121801	0		=			
ANR	5121837	MemberAccess	porder -> params . M1		5121801	0					
ANR	5121838	PtrMemberAccess	porder -> params		5121801	0					
ANR	5121839	Identifier	porder		5121801	0					
ANR	5121840	Identifier	params		5121801	1					
ANR	5121841	Identifier	M1		5121801	1					
ANR	5121842	PtrMemberAccess	phtp -> height		5121801	1					
ANR	5121843	Identifier	phtp		5121801	0					
ANR	5121844	Identifier	height		5121801	1					
ANR	5121845	AssignmentExpression	porder -> params . N1 = 0		5121801	1		=			
ANR	5121846	MemberAccess	porder -> params . N1		5121801	0					
ANR	5121847	PtrMemberAccess	porder -> params		5121801	0					
ANR	5121848	Identifier	porder		5121801	0					
ANR	5121849	Identifier	params		5121801	1					
ANR	5121850	Identifier	N1		5121801	1					
ANR	5121851	PrimaryExpression	0		5121801	1					
ANR	5121852	ExpressionStatement	porder -> params . R1 = 1	407:4:14377:14398	5121801	4	True				
ANR	5121853	AssignmentExpression	porder -> params . R1 = 1		5121801	0		=			
ANR	5121854	MemberAccess	porder -> params . R1		5121801	0					
ANR	5121855	PtrMemberAccess	porder -> params		5121801	0					
ANR	5121856	Identifier	porder		5121801	0					
ANR	5121857	Identifier	params		5121801	1					
ANR	5121858	Identifier	R1		5121801	1					
ANR	5121859	PrimaryExpression	1		5121801	1					
ANR	5121860	ExpressionStatement	"code = gx_ht_alloc_threshold_order ( porder , phtp -> width , phtp -> height , 256 , mem )"	408:4:14404:14522	5121801	5	True				
ANR	5121861	AssignmentExpression	"code = gx_ht_alloc_threshold_order ( porder , phtp -> width , phtp -> height , 256 , mem )"		5121801	0		=			
ANR	5121862	Identifier	code		5121801	0					
ANR	5121863	CallExpression	"gx_ht_alloc_threshold_order ( porder , phtp -> width , phtp -> height , 256 , mem )"		5121801	1					
ANR	5121864	Callee	gx_ht_alloc_threshold_order		5121801	0					
ANR	5121865	Identifier	gx_ht_alloc_threshold_order		5121801	0					
ANR	5121866	ArgumentList	porder		5121801	1					
ANR	5121867	Argument	porder		5121801	0					
ANR	5121868	Identifier	porder		5121801	0					
ANR	5121869	Argument	phtp -> width		5121801	1					
ANR	5121870	PtrMemberAccess	phtp -> width		5121801	0					
ANR	5121871	Identifier	phtp		5121801	0					
ANR	5121872	Identifier	width		5121801	1					
ANR	5121873	Argument	phtp -> height		5121801	2					
ANR	5121874	PtrMemberAccess	phtp -> height		5121801	0					
ANR	5121875	Identifier	phtp		5121801	0					
ANR	5121876	Identifier	height		5121801	1					
ANR	5121877	Argument	256		5121801	3					
ANR	5121878	PrimaryExpression	256		5121801	0					
ANR	5121879	Argument	mem		5121801	4					
ANR	5121880	Identifier	mem		5121801	0					
ANR	5121881	IfStatement	if ( code < 0 )		5121801	6					
ANR	5121882	Condition	code < 0	410:8:14532:14539	5121801	0	True				
ANR	5121883	RelationalExpression	code < 0		5121801	0		<			
ANR	5121884	Identifier	code		5121801	0					
ANR	5121885	PrimaryExpression	0		5121801	1					
ANR	5121886	ReturnStatement	return code ;	411:8:14550:14561	5121801	1	True				
ANR	5121887	Identifier	code		5121801	0					
ANR	5121888	ExpressionStatement	"gx_ht_construct_threshold_order ( porder , phtp -> thresholds . data )"	412:4:14567:14629	5121801	7	True				
ANR	5121889	CallExpression	"gx_ht_construct_threshold_order ( porder , phtp -> thresholds . data )"		5121801	0					
ANR	5121890	Callee	gx_ht_construct_threshold_order		5121801	0					
ANR	5121891	Identifier	gx_ht_construct_threshold_order		5121801	0					
ANR	5121892	ArgumentList	porder		5121801	1					
ANR	5121893	Argument	porder		5121801	0					
ANR	5121894	Identifier	porder		5121801	0					
ANR	5121895	Argument	phtp -> thresholds . data		5121801	1					
ANR	5121896	MemberAccess	phtp -> thresholds . data		5121801	0					
ANR	5121897	PtrMemberAccess	phtp -> thresholds		5121801	0					
ANR	5121898	Identifier	phtp		5121801	0					
ANR	5121899	Identifier	thresholds		5121801	1					
ANR	5121900	Identifier	data		5121801	1					
ANR	5121901	ReturnStatement	"return process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem ) ;"	413:4:14635:14745	5121801	8	True				
ANR	5121902	CallExpression	"process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem )"		5121801	0					
ANR	5121903	Callee	process_transfer		5121801	0					
ANR	5121904	Identifier	process_transfer		5121801	0					
ANR	5121905	ArgumentList	porder		5121801	1					
ANR	5121906	Argument	porder		5121801	0					
ANR	5121907	Identifier	porder		5121801	0					
ANR	5121908	Argument	pgs		5121801	1					
ANR	5121909	Identifier	pgs		5121801	0					
ANR	5121910	Argument	phtp -> transfer		5121801	2					
ANR	5121911	PtrMemberAccess	phtp -> transfer		5121801	0					
ANR	5121912	Identifier	phtp		5121801	0					
ANR	5121913	Identifier	transfer		5121801	1					
ANR	5121914	Argument	& phtp -> transfer_closure		5121801	3					
ANR	5121915	UnaryOperationExpression	& phtp -> transfer_closure		5121801	0					
ANR	5121916	UnaryOperator	&		5121801	0					
ANR	5121917	PtrMemberAccess	phtp -> transfer_closure		5121801	1					
ANR	5121918	Identifier	phtp		5121801	0					
ANR	5121919	Identifier	transfer_closure		5121801	1					
ANR	5121920	Argument	mem		5121801	4					
ANR	5121921	Identifier	mem		5121801	0					
ANR	5121922	ReturnType	static int		5121801	1					
ANR	5121923	Identifier	process_threshold		5121801	2					
ANR	5121924	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_threshold_halftone * phtp , gs_memory_t * mem"		5121801	3					
ANR	5121925	Parameter	gx_ht_order * porder	399:18:14105:14124	5121801	0	True				
ANR	5121926	ParameterType	gx_ht_order *		5121801	0					
ANR	5121927	Identifier	porder		5121801	1					
ANR	5121928	Parameter	gs_gstate * pgs	399:40:14127:14141	5121801	1	True				
ANR	5121929	ParameterType	gs_gstate *		5121801	0					
ANR	5121930	Identifier	pgs		5121801	1					
ANR	5121931	Parameter	gs_threshold_halftone * phtp	400:18:14162:14189	5121801	2	True				
ANR	5121932	ParameterType	gs_threshold_halftone *		5121801	0					
ANR	5121933	Identifier	phtp		5121801	1					
ANR	5121934	Parameter	gs_memory_t * mem	400:48:14192:14208	5121801	3	True				
ANR	5121935	ParameterType	gs_memory_t *		5121801	0					
ANR	5121936	Identifier	mem		5121801	1					
ANR	5121937	CFGEntryNode	ENTRY		5121801		True				
ANR	5121938	CFGExitNode	EXIT		5121801		True				
ANR	5121939	Symbol	phtp		5121801						
ANR	5121940	Symbol	code		5121801						
ANR	5121941	Symbol	phtp -> height		5121801						
ANR	5121942	Symbol	porder -> params . R		5121801						
ANR	5121943	Symbol	* phtp		5121801						
ANR	5121944	Symbol	porder		5121801						
ANR	5121945	Symbol	porder -> params . R1		5121801						
ANR	5121946	Symbol	gx_ht_alloc_threshold_order		5121801						
ANR	5121947	Symbol	phtp -> thresholds		5121801						
ANR	5121948	Symbol	phtp -> transfer		5121801						
ANR	5121949	Symbol	process_transfer		5121801						
ANR	5121950	Symbol	porder -> params . N1		5121801						
ANR	5121951	Symbol	porder -> params . M1		5121801						
ANR	5121952	Symbol	mem		5121801						
ANR	5121953	Symbol	porder -> params		5121801						
ANR	5121954	Symbol	phtp -> thresholds . data		5121801						
ANR	5121955	Symbol	& phtp -> transfer_closure		5121801						
ANR	5121956	Symbol	porder -> params . N		5121801						
ANR	5121957	Symbol	porder -> params . M		5121801						
ANR	5121958	Symbol	pgs		5121801						
ANR	5121959	Symbol	* porder		5121801						
ANR	5121960	Symbol	phtp -> width		5121801						
ANR	5121961	Function	process_threshold2	418:0:14793:18587							
ANR	5121962	FunctionDef	"process_threshold2 (gx_ht_order * porder , gs_gstate * pgs , gs_threshold2_halftone * phtp , gs_memory_t * mem)"		5121961	0					
ANR	5121963	CompoundStatement		421:0:14931:18587	5121961	0					
ANR	5121964	IdentifierDeclStatement	int code ;	422:4:14937:14945	5121961	0	True				
ANR	5121965	IdentifierDecl	code		5121961	0					
ANR	5121966	IdentifierDeclType	int		5121961	0					
ANR	5121967	Identifier	code		5121961	1					
ANR	5121968	Statement	define	429:1:15257:15262	5121961	1	True				
ANR	5121969	Statement	LOG2_MAX_HT_LEVELS	429:8:15264:15281	5121961	2	True				
ANR	5121970	Statement	14	429:27:15283:15284	5121961	3	True				
ANR	5121971	Statement	define	430:1:15287:15292	5121961	4	True				
ANR	5121972	Statement	MAX_HT_LEVELS	430:8:15294:15306	5121961	5	True				
ANR	5121973	Statement	(	430:22:15308:15308	5121961	6	True				
ANR	5121974	Statement	1	430:23:15309:15309	5121961	7	True				
ANR	5121975	Statement	<<	430:25:15311:15312	5121961	8	True				
ANR	5121976	Statement	LOG2_MAX_HT_LEVELS	430:28:15314:15331	5121961	9	True				
ANR	5121977	Statement	)	430:46:15332:15332	5121961	10	True				
ANR	5121978	IdentifierDeclStatement	int bps = phtp -> bytes_per_sample ;	431:4:15338:15370	5121961	11	True				
ANR	5121979	IdentifierDecl	bps = phtp -> bytes_per_sample		5121961	0					
ANR	5121980	IdentifierDeclType	int		5121961	0					
ANR	5121981	Identifier	bps		5121961	1					
ANR	5121982	AssignmentExpression	bps = phtp -> bytes_per_sample		5121961	2		=			
ANR	5121983	Identifier	bps		5121961	0					
ANR	5121984	PtrMemberAccess	phtp -> bytes_per_sample		5121961	1					
ANR	5121985	Identifier	phtp		5121961	0					
ANR	5121986	Identifier	bytes_per_sample		5121961	1					
ANR	5121987	IdentifierDeclStatement	const byte * data = phtp -> thresholds . data ;	432:4:15376:15416	5121961	12	True				
ANR	5121988	IdentifierDecl	* data = phtp -> thresholds . data		5121961	0					
ANR	5121989	IdentifierDeclType	const byte *		5121961	0					
ANR	5121990	Identifier	data		5121961	1					
ANR	5121991	AssignmentExpression	* data = phtp -> thresholds . data		5121961	2		=			
ANR	5121992	Identifier	data		5121961	0					
ANR	5121993	MemberAccess	phtp -> thresholds . data		5121961	1					
ANR	5121994	PtrMemberAccess	phtp -> thresholds		5121961	0					
ANR	5121995	Identifier	phtp		5121961	0					
ANR	5121996	Identifier	thresholds		5121961	1					
ANR	5121997	Identifier	data		5121961	1					
ANR	5121998	IdentifierDeclStatement	"const int w1 = phtp -> width , h1 = phtp -> height , size1 = w1 * h1 ;"	433:4:15422:15484	5121961	13	True				
ANR	5121999	IdentifierDecl	w1 = phtp -> width		5121961	0					
ANR	5122000	IdentifierDeclType	const int		5121961	0					
ANR	5122001	Identifier	w1		5121961	1					
ANR	5122002	AssignmentExpression	w1 = phtp -> width		5121961	2		=			
ANR	5122003	Identifier	w1		5121961	0					
ANR	5122004	PtrMemberAccess	phtp -> width		5121961	1					
ANR	5122005	Identifier	phtp		5121961	0					
ANR	5122006	Identifier	width		5121961	1					
ANR	5122007	IdentifierDecl	h1 = phtp -> height		5121961	1					
ANR	5122008	IdentifierDeclType	const int		5121961	0					
ANR	5122009	Identifier	h1		5121961	1					
ANR	5122010	AssignmentExpression	h1 = phtp -> height		5121961	2		=			
ANR	5122011	Identifier	h1		5121961	0					
ANR	5122012	PtrMemberAccess	phtp -> height		5121961	1					
ANR	5122013	Identifier	phtp		5121961	0					
ANR	5122014	Identifier	height		5121961	1					
ANR	5122015	IdentifierDecl	size1 = w1 * h1		5121961	2					
ANR	5122016	IdentifierDeclType	const int		5121961	0					
ANR	5122017	Identifier	size1		5121961	1					
ANR	5122018	AssignmentExpression	size1 = w1 * h1		5121961	2		=			
ANR	5122019	Identifier	size1		5121961	0					
ANR	5122020	MultiplicativeExpression	w1 * h1		5121961	1		*			
ANR	5122021	Identifier	w1		5121961	0					
ANR	5122022	Identifier	h1		5121961	1					
ANR	5122023	IdentifierDeclStatement	"const int w2 = phtp -> width2 , h2 = phtp -> height2 , size2 = w2 * h2 ;"	434:4:15490:15554	5121961	14	True				
ANR	5122024	IdentifierDecl	w2 = phtp -> width2		5121961	0					
ANR	5122025	IdentifierDeclType	const int		5121961	0					
ANR	5122026	Identifier	w2		5121961	1					
ANR	5122027	AssignmentExpression	w2 = phtp -> width2		5121961	2		=			
ANR	5122028	Identifier	w2		5121961	0					
ANR	5122029	PtrMemberAccess	phtp -> width2		5121961	1					
ANR	5122030	Identifier	phtp		5121961	0					
ANR	5122031	Identifier	width2		5121961	1					
ANR	5122032	IdentifierDecl	h2 = phtp -> height2		5121961	1					
ANR	5122033	IdentifierDeclType	const int		5121961	0					
ANR	5122034	Identifier	h2		5121961	1					
ANR	5122035	AssignmentExpression	h2 = phtp -> height2		5121961	2		=			
ANR	5122036	Identifier	h2		5121961	0					
ANR	5122037	PtrMemberAccess	phtp -> height2		5121961	1					
ANR	5122038	Identifier	phtp		5121961	0					
ANR	5122039	Identifier	height2		5121961	1					
ANR	5122040	IdentifierDecl	size2 = w2 * h2		5121961	2					
ANR	5122041	IdentifierDeclType	const int		5121961	0					
ANR	5122042	Identifier	size2		5121961	1					
ANR	5122043	AssignmentExpression	size2 = w2 * h2		5121961	2		=			
ANR	5122044	Identifier	size2		5121961	0					
ANR	5122045	MultiplicativeExpression	w2 * h2		5121961	1		*			
ANR	5122046	Identifier	w2		5121961	0					
ANR	5122047	Identifier	h2		5121961	1					
ANR	5122048	IdentifierDeclStatement	const uint size = size1 + size2 ;	435:4:15560:15591	5121961	15	True				
ANR	5122049	IdentifierDecl	size = size1 + size2		5121961	0					
ANR	5122050	IdentifierDeclType	const uint		5121961	0					
ANR	5122051	Identifier	size		5121961	1					
ANR	5122052	AssignmentExpression	size = size1 + size2		5121961	2		=			
ANR	5122053	Identifier	size		5121961	0					
ANR	5122054	AdditiveExpression	size1 + size2		5121961	1		+			
ANR	5122055	Identifier	size1		5121961	0					
ANR	5122056	Identifier	size2		5121961	1					
ANR	5122057	IdentifierDeclStatement	"const int d = ( h2 == 0 ? h1 : igcd ( h1 , h2 ) ) ;"	436:4:15597:15640	5121961	16	True				
ANR	5122058	IdentifierDecl	"d = ( h2 == 0 ? h1 : igcd ( h1 , h2 ) )"		5121961	0					
ANR	5122059	IdentifierDeclType	const int		5121961	0					
ANR	5122060	Identifier	d		5121961	1					
ANR	5122061	AssignmentExpression	"d = ( h2 == 0 ? h1 : igcd ( h1 , h2 ) )"		5121961	2		=			
ANR	5122062	Identifier	d		5121961	0					
ANR	5122063	ConditionalExpression	"h2 == 0 ? h1 : igcd ( h1 , h2 )"		5121961	1					
ANR	5122064	Condition	h2 == 0		5121961	0					
ANR	5122065	EqualityExpression	h2 == 0		5121961	0		==			
ANR	5122066	Identifier	h2		5121961	0					
ANR	5122067	PrimaryExpression	0		5121961	1					
ANR	5122068	Identifier	h1		5121961	1					
ANR	5122069	CallExpression	"igcd ( h1 , h2 )"		5121961	2					
ANR	5122070	Callee	igcd		5121961	0					
ANR	5122071	Identifier	igcd		5121961	0					
ANR	5122072	ArgumentList	h1		5121961	1					
ANR	5122073	Argument	h1		5121961	0					
ANR	5122074	Identifier	h1		5121961	0					
ANR	5122075	Argument	h2		5121961	1					
ANR	5122076	Identifier	h2		5121961	0					
ANR	5122077	IdentifierDeclStatement	const int sod = size / d ;	437:4:15646:15670	5121961	17	True				
ANR	5122078	IdentifierDecl	sod = size / d		5121961	0					
ANR	5122079	IdentifierDeclType	const int		5121961	0					
ANR	5122080	Identifier	sod		5121961	1					
ANR	5122081	AssignmentExpression	sod = size / d		5121961	2		=			
ANR	5122082	Identifier	sod		5121961	0					
ANR	5122083	MultiplicativeExpression	size / d		5121961	1		/			
ANR	5122084	Identifier	size		5121961	0					
ANR	5122085	Identifier	d		5121961	1					
ANR	5122086	IdentifierDeclStatement	uint num_levels ;	438:4:15676:15691	5121961	18	True				
ANR	5122087	IdentifierDecl	num_levels		5121961	0					
ANR	5122088	IdentifierDeclType	uint		5121961	0					
ANR	5122089	Identifier	num_levels		5121961	1					
ANR	5122090	IdentifierDeclStatement	uint i ;	439:4:15697:15703	5121961	19	True				
ANR	5122091	IdentifierDecl	i		5121961	0					
ANR	5122092	IdentifierDeclType	uint		5121961	0					
ANR	5122093	Identifier	i		5121961	1					
ANR	5122094	IdentifierDeclStatement	int rshift = 0 ;	440:4:15709:15723	5121961	20	True				
ANR	5122095	IdentifierDecl	rshift = 0		5121961	0					
ANR	5122096	IdentifierDeclType	int		5121961	0					
ANR	5122097	Identifier	rshift		5121961	1					
ANR	5122098	AssignmentExpression	rshift = 0		5121961	2		=			
ANR	5122099	Identifier	rshift		5121961	0					
ANR	5122100	PrimaryExpression	0		5121961	1					
ANR	5122101	IdentifierDeclStatement	int shift ;	441:4:15729:15738	5121961	21	True				
ANR	5122102	IdentifierDecl	shift		5121961	0					
ANR	5122103	IdentifierDeclType	int		5121961	0					
ANR	5122104	Identifier	shift		5121961	1					
ANR	5122105	CompoundStatement		24:8:823:849	5121961	22					
ANR	5122106	IdentifierDeclStatement	"uint mask = 0 , max_thr = 0 ;"	444:8:15755:15781	5121961	0	True				
ANR	5122107	IdentifierDecl	mask = 0		5121961	0					
ANR	5122108	IdentifierDeclType	uint		5121961	0					
ANR	5122109	Identifier	mask		5121961	1					
ANR	5122110	AssignmentExpression	mask = 0		5121961	2		=			
ANR	5122111	Identifier	mask		5121961	0					
ANR	5122112	PrimaryExpression	0		5121961	1					
ANR	5122113	IdentifierDecl	max_thr = 0		5121961	1					
ANR	5122114	IdentifierDeclType	uint		5121961	0					
ANR	5122115	Identifier	max_thr		5121961	1					
ANR	5122116	AssignmentExpression	max_thr = 0		5121961	2		=			
ANR	5122117	Identifier	max_thr		5121961	0					
ANR	5122118	PrimaryExpression	0		5121961	1					
ANR	5122119	ForStatement	for ( i = 0 ; i < size ; ++ i )		5121961	1					
ANR	5122120	ForInit	i = 0 ;	446:13:15797:15802	5121961	0	True				
ANR	5122121	AssignmentExpression	i = 0		5121961	0		=			
ANR	5122122	Identifier	i		5121961	0					
ANR	5122123	PrimaryExpression	0		5121961	1					
ANR	5122124	Condition	i < size	446:20:15804:15811	5121961	1	True				
ANR	5122125	RelationalExpression	i < size		5121961	0		<			
ANR	5122126	Identifier	i		5121961	0					
ANR	5122127	Identifier	size		5121961	1					
ANR	5122128	UnaryExpression	++ i	446:30:15814:15816	5121961	2	True				
ANR	5122129	IncDec	++		5121961	0					
ANR	5122130	Identifier	i		5121961	1					
ANR	5122131	CompoundStatement		27:12:901:987	5121961	3					
ANR	5122132	IdentifierDeclStatement	uint thr = ( bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ] ) ;	447:12:15833:15919	5121961	0	True				
ANR	5122133	IdentifierDecl	thr = ( bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ] )		5121961	0					
ANR	5122134	IdentifierDeclType	uint		5121961	0					
ANR	5122135	Identifier	thr		5121961	1					
ANR	5122136	AssignmentExpression	thr = ( bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ] )		5121961	2		=			
ANR	5122137	Identifier	thr		5121961	0					
ANR	5122138	ConditionalExpression	bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ]		5121961	1					
ANR	5122139	Condition	bps == 1		5121961	0					
ANR	5122140	EqualityExpression	bps == 1		5121961	0		==			
ANR	5122141	Identifier	bps		5121961	0					
ANR	5122142	PrimaryExpression	1		5121961	1					
ANR	5122143	ArrayIndexing	data [ i ]		5121961	1					
ANR	5122144	Identifier	data		5121961	0					
ANR	5122145	Identifier	i		5121961	1					
ANR	5122146	AdditiveExpression	( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ]		5121961	2		+			
ANR	5122147	ShiftExpression	data [ i * 2 ] << 8		5121961	0		<<			
ANR	5122148	ArrayIndexing	data [ i * 2 ]		5121961	0					
ANR	5122149	Identifier	data		5121961	0					
ANR	5122150	MultiplicativeExpression	i * 2		5121961	1		*			
ANR	5122151	Identifier	i		5121961	0					
ANR	5122152	PrimaryExpression	2		5121961	1					
ANR	5122153	PrimaryExpression	8		5121961	1					
ANR	5122154	ArrayIndexing	data [ i * 2 + 1 ]		5121961	1					
ANR	5122155	Identifier	data		5121961	0					
ANR	5122156	AdditiveExpression	i * 2 + 1		5121961	1		+			
ANR	5122157	MultiplicativeExpression	i * 2		5121961	0		*			
ANR	5122158	Identifier	i		5121961	0					
ANR	5122159	PrimaryExpression	2		5121961	1					
ANR	5122160	PrimaryExpression	1		5121961	1					
ANR	5122161	ExpressionStatement	mask |= thr	450:12:15934:15945	5121961	1	True				
ANR	5122162	AssignmentExpression	mask |= thr		5121961	0		|=			
ANR	5122163	Identifier	mask		5121961	0					
ANR	5122164	Identifier	thr		5121961	1					
ANR	5122165	ExpressionStatement	"max_thr = max ( max_thr , thr )"	451:12:15959:15986	5121961	2	True				
ANR	5122166	AssignmentExpression	"max_thr = max ( max_thr , thr )"		5121961	0		=			
ANR	5122167	Identifier	max_thr		5121961	0					
ANR	5122168	CallExpression	"max ( max_thr , thr )"		5121961	1					
ANR	5122169	Callee	max		5121961	0					
ANR	5122170	Identifier	max		5121961	0					
ANR	5122171	ArgumentList	max_thr		5121961	1					
ANR	5122172	Argument	max_thr		5121961	0					
ANR	5122173	Identifier	max_thr		5121961	0					
ANR	5122174	Argument	thr		5121961	1					
ANR	5122175	Identifier	thr		5121961	0					
ANR	5122176	IfStatement	if ( mask == 0 )		5121961	2					
ANR	5122177	Condition	mask == 0	453:12:16010:16018	5121961	0	True				
ANR	5122178	EqualityExpression	mask == 0		5121961	0		==			
ANR	5122179	Identifier	mask		5121961	0					
ANR	5122180	PrimaryExpression	0		5121961	1					
ANR	5122181	ExpressionStatement	"mask = 1 , max_thr = 1"	454:12:16033:16054	5121961	1	True				
ANR	5122182	Expression	"mask = 1 , max_thr = 1"		5121961	0					
ANR	5122183	AssignmentExpression	mask = 1		5121961	0		=			
ANR	5122184	Identifier	mask		5121961	0					
ANR	5122185	PrimaryExpression	1		5121961	1					
ANR	5122186	AssignmentExpression	max_thr = 1		5121961	1		=			
ANR	5122187	Identifier	max_thr		5121961	0					
ANR	5122188	PrimaryExpression	1		5121961	1					
ANR	5122189	WhileStatement	while ( ! ( mask & 1 ) || max_thr > MAX_HT_LEVELS )		5121961	3					
ANR	5122190	Condition	! ( mask & 1 ) || max_thr > MAX_HT_LEVELS	455:15:16071:16108	5121961	0	True				
ANR	5122191	OrExpression	! ( mask & 1 ) || max_thr > MAX_HT_LEVELS		5121961	0		||			
ANR	5122192	UnaryOperationExpression	! ( mask & 1 )		5121961	0					
ANR	5122193	UnaryOperator	!		5121961	0					
ANR	5122194	BitAndExpression	mask & 1		5121961	1		&			
ANR	5122195	Identifier	mask		5121961	0					
ANR	5122196	PrimaryExpression	1		5121961	1					
ANR	5122197	RelationalExpression	max_thr > MAX_HT_LEVELS		5121961	1		>			
ANR	5122198	Identifier	max_thr		5121961	0					
ANR	5122199	Identifier	MAX_HT_LEVELS		5121961	1					
ANR	5122200	ExpressionStatement	"mask >>= 1 , max_thr >>= 1 , rshift ++"	456:12:16123:16158	5121961	1	True				
ANR	5122201	Expression	"mask >>= 1 , max_thr >>= 1 , rshift ++"		5121961	0					
ANR	5122202	AssignmentExpression	mask >>= 1		5121961	0		>>=			
ANR	5122203	Identifier	mask		5121961	0					
ANR	5122204	PrimaryExpression	1		5121961	1					
ANR	5122205	Expression	"max_thr >>= 1 , rshift ++"		5121961	1					
ANR	5122206	AssignmentExpression	max_thr >>= 1		5121961	0		>>=			
ANR	5122207	Identifier	max_thr		5121961	0					
ANR	5122208	PrimaryExpression	1		5121961	1					
ANR	5122209	PostIncDecOperationExpression	rshift ++		5121961	1					
ANR	5122210	Identifier	rshift		5121961	0					
ANR	5122211	IncDec	++		5121961	1					
ANR	5122212	ExpressionStatement	num_levels = max_thr + 1	457:8:16168:16192	5121961	4	True				
ANR	5122213	AssignmentExpression	num_levels = max_thr + 1		5121961	0		=			
ANR	5122214	Identifier	num_levels		5121961	0					
ANR	5122215	AdditiveExpression	max_thr + 1		5121961	1		+			
ANR	5122216	Identifier	max_thr		5121961	0					
ANR	5122217	PrimaryExpression	1		5121961	1					
ANR	5122218	ExpressionStatement	"porder -> params . M = sod , porder -> params . N = d"	464:4:16373:16417	5121961	23	True				
ANR	5122219	Expression	"porder -> params . M = sod , porder -> params . N = d"		5121961	0					
ANR	5122220	AssignmentExpression	porder -> params . M = sod		5121961	0		=			
ANR	5122221	MemberAccess	porder -> params . M		5121961	0					
ANR	5122222	PtrMemberAccess	porder -> params		5121961	0					
ANR	5122223	Identifier	porder		5121961	0					
ANR	5122224	Identifier	params		5121961	1					
ANR	5122225	Identifier	M		5121961	1					
ANR	5122226	Identifier	sod		5121961	1					
ANR	5122227	AssignmentExpression	porder -> params . N = d		5121961	1		=			
ANR	5122228	MemberAccess	porder -> params . N		5121961	0					
ANR	5122229	PtrMemberAccess	porder -> params		5121961	0					
ANR	5122230	Identifier	porder		5121961	0					
ANR	5122231	Identifier	params		5121961	1					
ANR	5122232	Identifier	N		5121961	1					
ANR	5122233	Identifier	d		5121961	1					
ANR	5122234	ExpressionStatement	porder -> params . R = 1	465:4:16423:16443	5121961	24	True				
ANR	5122235	AssignmentExpression	porder -> params . R = 1		5121961	0		=			
ANR	5122236	MemberAccess	porder -> params . R		5121961	0					
ANR	5122237	PtrMemberAccess	porder -> params		5121961	0					
ANR	5122238	Identifier	porder		5121961	0					
ANR	5122239	Identifier	params		5121961	1					
ANR	5122240	Identifier	R		5121961	1					
ANR	5122241	PrimaryExpression	1		5121961	1					
ANR	5122242	ExpressionStatement	"porder -> params . M1 = d , porder -> params . N1 = sod"	466:4:16449:16495	5121961	25	True				
ANR	5122243	Expression	"porder -> params . M1 = d , porder -> params . N1 = sod"		5121961	0					
ANR	5122244	AssignmentExpression	porder -> params . M1 = d		5121961	0		=			
ANR	5122245	MemberAccess	porder -> params . M1		5121961	0					
ANR	5122246	PtrMemberAccess	porder -> params		5121961	0					
ANR	5122247	Identifier	porder		5121961	0					
ANR	5122248	Identifier	params		5121961	1					
ANR	5122249	Identifier	M1		5121961	1					
ANR	5122250	Identifier	d		5121961	1					
ANR	5122251	AssignmentExpression	porder -> params . N1 = sod		5121961	1		=			
ANR	5122252	MemberAccess	porder -> params . N1		5121961	0					
ANR	5122253	PtrMemberAccess	porder -> params		5121961	0					
ANR	5122254	Identifier	porder		5121961	0					
ANR	5122255	Identifier	params		5121961	1					
ANR	5122256	Identifier	N1		5121961	1					
ANR	5122257	Identifier	sod		5121961	1					
ANR	5122258	ExpressionStatement	porder -> params . R1 = 1	467:4:16501:16522	5121961	26	True				
ANR	5122259	AssignmentExpression	porder -> params . R1 = 1		5121961	0		=			
ANR	5122260	MemberAccess	porder -> params . R1		5121961	0					
ANR	5122261	PtrMemberAccess	porder -> params		5121961	0					
ANR	5122262	Identifier	porder		5121961	0					
ANR	5122263	Identifier	params		5121961	1					
ANR	5122264	Identifier	R1		5121961	1					
ANR	5122265	PrimaryExpression	1		5121961	1					
ANR	5122266	ExpressionStatement	shift = 0	472:4:16663:16672	5121961	27	True				
ANR	5122267	AssignmentExpression	shift = 0		5121961	0		=			
ANR	5122268	Identifier	shift		5121961	0					
ANR	5122269	PrimaryExpression	0		5121961	1					
ANR	5122270	CompoundStatement		54:8:1756:1772	5121961	28					
ANR	5122271	IdentifierDeclStatement	"int x = 0 , y = 0 ;"	474:8:16688:16704	5121961	0	True				
ANR	5122272	IdentifierDecl	x = 0		5121961	0					
ANR	5122273	IdentifierDeclType	int		5121961	0					
ANR	5122274	Identifier	x		5121961	1					
ANR	5122275	AssignmentExpression	x = 0		5121961	2		=			
ANR	5122276	Identifier	x		5121961	0					
ANR	5122277	PrimaryExpression	0		5121961	1					
ANR	5122278	IdentifierDecl	y = 0		5121961	1					
ANR	5122279	IdentifierDeclType	int		5121961	0					
ANR	5122280	Identifier	y		5121961	1					
ANR	5122281	AssignmentExpression	y = 0		5121961	2		=			
ANR	5122282	Identifier	y		5121961	0					
ANR	5122283	PrimaryExpression	0		5121961	1					
ANR	5122284	DoStatement	do		5121961	1					
ANR	5122285	CompoundStatement		56:11:1786:1786	5121961	0					
ANR	5122286	IfStatement	if ( y < h1 )		5121961	0					
ANR	5122287	Condition	y < h1	477:16:16736:16741	5121961	0	True				
ANR	5122288	RelationalExpression	y < h1		5121961	0		<			
ANR	5122289	Identifier	y		5121961	0					
ANR	5122290	Identifier	h1		5121961	1					
ANR	5122291	ExpressionStatement	"x += w1 , y += h2"	478:16:16760:16776	5121961	1	True				
ANR	5122292	Expression	"x += w1 , y += h2"		5121961	0					
ANR	5122293	AssignmentExpression	x += w1		5121961	0		+=			
ANR	5122294	Identifier	x		5121961	0					
ANR	5122295	Identifier	w1		5121961	1					
ANR	5122296	AssignmentExpression	y += h2		5121961	1		+=			
ANR	5122297	Identifier	y		5121961	0					
ANR	5122298	Identifier	h2		5121961	1					
ANR	5122299	ElseStatement	else		5121961	0					
ANR	5122300	ExpressionStatement	"x += w2 , y -= h1"	480:16:16811:16827	5121961	0	True				
ANR	5122301	Expression	"x += w2 , y -= h1"		5121961	0					
ANR	5122302	AssignmentExpression	x += w2		5121961	0		+=			
ANR	5122303	Identifier	x		5121961	0					
ANR	5122304	Identifier	w2		5121961	1					
ANR	5122305	AssignmentExpression	y -= h1		5121961	1		-=			
ANR	5122306	Identifier	y		5121961	0					
ANR	5122307	Identifier	h1		5121961	1					
ANR	5122308	Condition	y > d	481:17:16846:16850	5121961	1	True				
ANR	5122309	RelationalExpression	y > d		5121961	0		>			
ANR	5122310	Identifier	y		5121961	0					
ANR	5122311	Identifier	d		5121961	1					
ANR	5122312	IfStatement	if ( y )		5121961	2					
ANR	5122313	Condition	y	482:12:16866:16866	5121961	0	True				
ANR	5122314	Identifier	y		5121961	0					
ANR	5122315	ExpressionStatement	shift = x	483:12:16881:16890	5121961	1	True				
ANR	5122316	AssignmentExpression	shift = x		5121961	0		=			
ANR	5122317	Identifier	shift		5121961	0					
ANR	5122318	Identifier	x		5121961	1					
ANR	5122319	ExpressionStatement	"code = gx_ht_alloc_ht_order ( porder , sod , d , num_levels , size , shift , & ht_order_procs_default , mem )"	485:4:16902:17032	5121961	29	True				
ANR	5122320	AssignmentExpression	"code = gx_ht_alloc_ht_order ( porder , sod , d , num_levels , size , shift , & ht_order_procs_default , mem )"		5121961	0		=			
ANR	5122321	Identifier	code		5121961	0					
ANR	5122322	CallExpression	"gx_ht_alloc_ht_order ( porder , sod , d , num_levels , size , shift , & ht_order_procs_default , mem )"		5121961	1					
ANR	5122323	Callee	gx_ht_alloc_ht_order		5121961	0					
ANR	5122324	Identifier	gx_ht_alloc_ht_order		5121961	0					
ANR	5122325	ArgumentList	porder		5121961	1					
ANR	5122326	Argument	porder		5121961	0					
ANR	5122327	Identifier	porder		5121961	0					
ANR	5122328	Argument	sod		5121961	1					
ANR	5122329	Identifier	sod		5121961	0					
ANR	5122330	Argument	d		5121961	2					
ANR	5122331	Identifier	d		5121961	0					
ANR	5122332	Argument	num_levels		5121961	3					
ANR	5122333	Identifier	num_levels		5121961	0					
ANR	5122334	Argument	size		5121961	4					
ANR	5122335	Identifier	size		5121961	0					
ANR	5122336	Argument	shift		5121961	5					
ANR	5122337	Identifier	shift		5121961	0					
ANR	5122338	Argument	& ht_order_procs_default		5121961	6					
ANR	5122339	UnaryOperationExpression	& ht_order_procs_default		5121961	0					
ANR	5122340	UnaryOperator	&		5121961	0					
ANR	5122341	Identifier	ht_order_procs_default		5121961	1					
ANR	5122342	Argument	mem		5121961	7					
ANR	5122343	Identifier	mem		5121961	0					
ANR	5122344	IfStatement	if ( code < 0 )		5121961	30					
ANR	5122345	Condition	code < 0	487:8:17042:17049	5121961	0	True				
ANR	5122346	RelationalExpression	code < 0		5121961	0		<			
ANR	5122347	Identifier	code		5121961	0					
ANR	5122348	PrimaryExpression	0		5121961	1					
ANR	5122349	ReturnStatement	return code ;	488:8:17060:17071	5121961	1	True				
ANR	5122350	Identifier	code		5121961	0					
ANR	5122351	CompoundStatement		71:8:2212:2223	5121961	31					
ANR	5122352	IdentifierDeclStatement	gx_ht_bit * bits = ( gx_ht_bit * ) porder -> bit_data ;	490:8:17087:17134	5121961	0	True				
ANR	5122353	IdentifierDecl	* bits = ( gx_ht_bit * ) porder -> bit_data		5121961	0					
ANR	5122354	IdentifierDeclType	gx_ht_bit *		5121961	0					
ANR	5122355	Identifier	bits		5121961	1					
ANR	5122356	AssignmentExpression	* bits = ( gx_ht_bit * ) porder -> bit_data		5121961	2		=			
ANR	5122357	Identifier	bits		5121961	0					
ANR	5122358	CastExpression	( gx_ht_bit * ) porder -> bit_data		5121961	1					
ANR	5122359	CastTarget	gx_ht_bit *		5121961	0					
ANR	5122360	PtrMemberAccess	porder -> bit_data		5121961	1					
ANR	5122361	Identifier	porder		5121961	0					
ANR	5122362	Identifier	bit_data		5121961	1					
ANR	5122363	IdentifierDeclStatement	"int row , di ;"	491:8:17144:17155	5121961	1	True				
ANR	5122364	IdentifierDecl	row		5121961	0					
ANR	5122365	IdentifierDeclType	int		5121961	0					
ANR	5122366	Identifier	row		5121961	1					
ANR	5122367	IdentifierDecl	di		5121961	1					
ANR	5122368	IdentifierDeclType	int		5121961	0					
ANR	5122369	Identifier	di		5121961	1					
ANR	5122370	ExpressionStatement	"if_debug7m ( 'h' , mem , ""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"" , w1 , h1 , w2 , h2 , sod , d , shift )"	493:8:17166:17298	5121961	2	True				
ANR	5122371	CallExpression	"if_debug7m ( 'h' , mem , ""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"" , w1 , h1 , w2 , h2 , sod , d , shift )"		5121961	0					
ANR	5122372	Callee	if_debug7m		5121961	0					
ANR	5122373	Identifier	if_debug7m		5121961	0					
ANR	5122374	ArgumentList	'h'		5121961	1					
ANR	5122375	Argument	'h'		5121961	0					
ANR	5122376	PrimaryExpression	'h'		5121961	0					
ANR	5122377	Argument	mem		5121961	1					
ANR	5122378	Identifier	mem		5121961	0					
ANR	5122379	Argument	"""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"""		5121961	2					
ANR	5122380	PrimaryExpression	"""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"""		5121961	0					
ANR	5122381	Argument	w1		5121961	3					
ANR	5122382	Identifier	w1		5121961	0					
ANR	5122383	Argument	h1		5121961	4					
ANR	5122384	Identifier	h1		5121961	0					
ANR	5122385	Argument	w2		5121961	5					
ANR	5122386	Identifier	w2		5121961	0					
ANR	5122387	Argument	h2		5121961	6					
ANR	5122388	Identifier	h2		5121961	0					
ANR	5122389	Argument	sod		5121961	7					
ANR	5122390	Identifier	sod		5121961	0					
ANR	5122391	Argument	d		5121961	8					
ANR	5122392	Identifier	d		5121961	0					
ANR	5122393	Argument	shift		5121961	9					
ANR	5122394	Identifier	shift		5121961	0					
ANR	5122395	ForStatement	"for ( row = 0 , di = 0 ; row < d ; ++ row )"		5121961	3					
ANR	5122396	ForInit	"row = 0 , di = 0 ;"	495:13:17313:17328	5121961	0	True				
ANR	5122397	Expression	"row = 0 , di = 0"		5121961	0					
ANR	5122398	AssignmentExpression	row = 0		5121961	0		=			
ANR	5122399	Identifier	row		5121961	0					
ANR	5122400	PrimaryExpression	0		5121961	1					
ANR	5122401	AssignmentExpression	di = 0		5121961	1		=			
ANR	5122402	Identifier	di		5121961	0					
ANR	5122403	PrimaryExpression	0		5121961	1					
ANR	5122404	Condition	row < d	495:30:17330:17336	5121961	1	True				
ANR	5122405	RelationalExpression	row < d		5121961	0		<			
ANR	5122406	Identifier	row		5121961	0					
ANR	5122407	Identifier	d		5121961	1					
ANR	5122408	UnaryExpression	++ row	495:39:17339:17343	5121961	2	True				
ANR	5122409	IncDec	++		5121961	0					
ANR	5122410	Identifier	row		5121961	1					
ANR	5122411	CompoundStatement		78:12:2528:2533	5121961	3					
ANR	5122412	IdentifierDeclStatement	"int dx , sy = row ;"	497:12:17409:17425	5121961	0	True				
ANR	5122413	IdentifierDecl	dx		5121961	0					
ANR	5122414	IdentifierDeclType	int		5121961	0					
ANR	5122415	Identifier	dx		5121961	1					
ANR	5122416	IdentifierDecl	sy = row		5121961	1					
ANR	5122417	IdentifierDeclType	int		5121961	0					
ANR	5122418	Identifier	sy		5121961	1					
ANR	5122419	AssignmentExpression	sy = row		5121961	2		=			
ANR	5122420	Identifier	row		5121961	0					
ANR	5122421	Identifier	row		5121961	1					
ANR	5122422	IdentifierDeclStatement	int w ;	498:12:17460:17465	5121961	1	True				
ANR	5122423	IdentifierDecl	w		5121961	0					
ANR	5122424	IdentifierDeclType	int		5121961	0					
ANR	5122425	Identifier	w		5121961	1					
ANR	5122426	ForStatement	for ( dx = 0 ; dx < sod ; dx += w )		5121961	2					
ANR	5122427	ForInit	dx = 0 ;	500:17:17485:17491	5121961	0	True				
ANR	5122428	AssignmentExpression	dx = 0		5121961	0		=			
ANR	5122429	Identifier	dx		5121961	0					
ANR	5122430	PrimaryExpression	0		5121961	1					
ANR	5122431	Condition	dx < sod	500:25:17493:17500	5121961	1	True				
ANR	5122432	RelationalExpression	dx < sod		5121961	0		<			
ANR	5122433	Identifier	dx		5121961	0					
ANR	5122434	Identifier	sod		5121961	1					
ANR	5122435	AssignmentExpression	dx += w	500:35:17503:17509	5121961	2	True	+=			
ANR	5122436	Identifier	dx		5121961	0					
ANR	5122437	Identifier	w		5121961	1					
ANR	5122438	CompoundStatement		82:16:2672:2681	5121961	3					
ANR	5122439	IdentifierDeclStatement	"int si , j ;"	502:16:17604:17613	5121961	0	True				
ANR	5122440	IdentifierDecl	si		5121961	0					
ANR	5122441	IdentifierDeclType	int		5121961	0					
ANR	5122442	Identifier	si		5121961	1					
ANR	5122443	IdentifierDecl	j		5121961	1					
ANR	5122444	IdentifierDeclType	int		5121961	0					
ANR	5122445	Identifier	j		5121961	1					
ANR	5122446	IfStatement	if ( sy < h1 )		5121961	1					
ANR	5122447	Condition	sy < h1	504:20:17636:17642	5121961	0	True				
ANR	5122448	RelationalExpression	sy < h1		5121961	0		<			
ANR	5122449	Identifier	sy		5121961	0					
ANR	5122450	Identifier	h1		5121961	1					
ANR	5122451	CompoundStatement		84:29:2713:2713	5121961	1					
ANR	5122452	ExpressionStatement	si = sy * w1	506:20:17716:17728	5121961	0	True				
ANR	5122453	AssignmentExpression	si = sy * w1		5121961	0		=			
ANR	5122454	Identifier	si		5121961	0					
ANR	5122455	MultiplicativeExpression	sy * w1		5121961	1		*			
ANR	5122456	Identifier	sy		5121961	0					
ANR	5122457	Identifier	w1		5121961	1					
ANR	5122458	ExpressionStatement	w = w1	507:20:17750:17756	5121961	1	True				
ANR	5122459	AssignmentExpression	w = w1		5121961	0		=			
ANR	5122460	Identifier	w		5121961	0					
ANR	5122461	Identifier	w1		5121961	1					
ANR	5122462	ExpressionStatement	sy += h2	508:20:17778:17786	5121961	2	True				
ANR	5122463	AssignmentExpression	sy += h2		5121961	0		+=			
ANR	5122464	Identifier	sy		5121961	0					
ANR	5122465	Identifier	h2		5121961	1					
ANR	5122466	ElseStatement	else		5121961	0					
ANR	5122467	CompoundStatement		89:23:2879:2879	5121961	0					
ANR	5122468	ExpressionStatement	si = size1 + ( sy - h1 ) * w2	511:20:17882:17909	5121961	0	True				
ANR	5122469	AssignmentExpression	si = size1 + ( sy - h1 ) * w2		5121961	0		=			
ANR	5122470	Identifier	si		5121961	0					
ANR	5122471	AdditiveExpression	size1 + ( sy - h1 ) * w2		5121961	1		+			
ANR	5122472	Identifier	size1		5121961	0					
ANR	5122473	MultiplicativeExpression	( sy - h1 ) * w2		5121961	1		*			
ANR	5122474	AdditiveExpression	sy - h1		5121961	0		-			
ANR	5122475	Identifier	sy		5121961	0					
ANR	5122476	Identifier	h1		5121961	1					
ANR	5122477	Identifier	w2		5121961	1					
ANR	5122478	ExpressionStatement	w = w2	512:20:17931:17937	5121961	1	True				
ANR	5122479	AssignmentExpression	w = w2		5121961	0		=			
ANR	5122480	Identifier	w		5121961	0					
ANR	5122481	Identifier	w2		5121961	1					
ANR	5122482	ExpressionStatement	sy -= h1	513:20:17959:17967	5121961	2	True				
ANR	5122483	AssignmentExpression	sy -= h1		5121961	0		-=			
ANR	5122484	Identifier	sy		5121961	0					
ANR	5122485	Identifier	h1		5121961	1					
ANR	5122486	ForStatement	"for ( j = 0 ; j < w ; ++ j , ++ si , ++ di )"		5121961	2					
ANR	5122487	ForInit	j = 0 ;	515:21:18008:18013	5121961	0	True				
ANR	5122488	AssignmentExpression	j = 0		5121961	0		=			
ANR	5122489	Identifier	j		5121961	0					
ANR	5122490	PrimaryExpression	0		5121961	1					
ANR	5122491	Condition	j < w	515:28:18015:18019	5121961	1	True				
ANR	5122492	RelationalExpression	j < w		5121961	0		<			
ANR	5122493	Identifier	j		5121961	0					
ANR	5122494	Identifier	w		5121961	1					
ANR	5122495	Expression	"++ j , ++ si , ++ di"	515:35:18022:18036	5121961	2	True				
ANR	5122496	UnaryExpression	++ j		5121961	0					
ANR	5122497	IncDec	++		5121961	0					
ANR	5122498	Identifier	j		5121961	1					
ANR	5122499	Expression	"++ si , ++ di"		5121961	1					
ANR	5122500	UnaryExpression	++ si		5121961	0					
ANR	5122501	IncDec	++		5121961	0					
ANR	5122502	Identifier	si		5121961	1					
ANR	5122503	UnaryExpression	++ di		5121961	1					
ANR	5122504	IncDec	++		5121961	0					
ANR	5122505	Identifier	di		5121961	1					
ANR	5122506	CompoundStatement		96:20:3129:3300	5121961	3					
ANR	5122507	IdentifierDeclStatement	uint thr = ( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift ;	516:20:18061:18232	5121961	0	True				
ANR	5122508	IdentifierDecl	thr = ( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift		5121961	0					
ANR	5122509	IdentifierDeclType	uint		5121961	0					
ANR	5122510	Identifier	thr		5121961	1					
ANR	5122511	AssignmentExpression	thr = ( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift		5121961	2		=			
ANR	5122512	Identifier	thr		5121961	0					
ANR	5122513	ShiftExpression	( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift		5121961	1		>>			
ANR	5122514	ConditionalExpression	bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ]		5121961	0					
ANR	5122515	Condition	bps == 1		5121961	0					
ANR	5122516	EqualityExpression	bps == 1		5121961	0		==			
ANR	5122517	Identifier	bps		5121961	0					
ANR	5122518	PrimaryExpression	1		5121961	1					
ANR	5122519	ArrayIndexing	data [ si ]		5121961	1					
ANR	5122520	Identifier	data		5121961	0					
ANR	5122521	Identifier	si		5121961	1					
ANR	5122522	AdditiveExpression	( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ]		5121961	2		+			
ANR	5122523	ShiftExpression	data [ si * 2 ] << 8		5121961	0		<<			
ANR	5122524	ArrayIndexing	data [ si * 2 ]		5121961	0					
ANR	5122525	Identifier	data		5121961	0					
ANR	5122526	MultiplicativeExpression	si * 2		5121961	1		*			
ANR	5122527	Identifier	si		5121961	0					
ANR	5122528	PrimaryExpression	2		5121961	1					
ANR	5122529	PrimaryExpression	8		5121961	1					
ANR	5122530	ArrayIndexing	data [ si * 2 + 1 ]		5121961	1					
ANR	5122531	Identifier	data		5121961	0					
ANR	5122532	AdditiveExpression	si * 2 + 1		5121961	1		+			
ANR	5122533	MultiplicativeExpression	si * 2		5121961	0		*			
ANR	5122534	Identifier	si		5121961	0					
ANR	5122535	PrimaryExpression	2		5121961	1					
ANR	5122536	PrimaryExpression	1		5121961	1					
ANR	5122537	Identifier	rshift		5121961	1					
ANR	5122538	ExpressionStatement	"if_debug3 ( 'H' , ""[H]sy=%d, si=%d, di=%d\\n"" , sy , si , di )"	521:20:18255:18309	5121961	1	True				
ANR	5122539	CallExpression	"if_debug3 ( 'H' , ""[H]sy=%d, si=%d, di=%d\\n"" , sy , si , di )"		5121961	0					
ANR	5122540	Callee	if_debug3		5121961	0					
ANR	5122541	Identifier	if_debug3		5121961	0					
ANR	5122542	ArgumentList	'H'		5121961	1					
ANR	5122543	Argument	'H'		5121961	0					
ANR	5122544	PrimaryExpression	'H'		5121961	0					
ANR	5122545	Argument	"""[H]sy=%d, si=%d, di=%d\\n"""		5121961	1					
ANR	5122546	PrimaryExpression	"""[H]sy=%d, si=%d, di=%d\\n"""		5121961	0					
ANR	5122547	Argument	sy		5121961	2					
ANR	5122548	Identifier	sy		5121961	0					
ANR	5122549	Argument	si		5121961	3					
ANR	5122550	Identifier	si		5121961	0					
ANR	5122551	Argument	di		5121961	4					
ANR	5122552	Identifier	di		5121961	0					
ANR	5122553	ExpressionStatement	"bits [ di ] . mask = max ( thr , 1 )"	522:20:18331:18358	5121961	2	True				
ANR	5122554	AssignmentExpression	"bits [ di ] . mask = max ( thr , 1 )"		5121961	0		=			
ANR	5122555	MemberAccess	bits [ di ] . mask		5121961	0					
ANR	5122556	ArrayIndexing	bits [ di ]		5121961	0					
ANR	5122557	Identifier	bits		5121961	0					
ANR	5122558	Identifier	di		5121961	1					
ANR	5122559	Identifier	mask		5121961	1					
ANR	5122560	CallExpression	"max ( thr , 1 )"		5121961	1					
ANR	5122561	Callee	max		5121961	0					
ANR	5122562	Identifier	max		5121961	0					
ANR	5122563	ArgumentList	thr		5121961	1					
ANR	5122564	Argument	thr		5121961	0					
ANR	5122565	Identifier	thr		5121961	0					
ANR	5122566	Argument	1		5121961	1					
ANR	5122567	PrimaryExpression	1		5121961	0					
ANR	5122568	ExpressionStatement	gx_ht_complete_threshold_order ( porder )	527:4:18412:18450	5121961	32	True				
ANR	5122569	CallExpression	gx_ht_complete_threshold_order ( porder )		5121961	0					
ANR	5122570	Callee	gx_ht_complete_threshold_order		5121961	0					
ANR	5122571	Identifier	gx_ht_complete_threshold_order		5121961	0					
ANR	5122572	ArgumentList	porder		5121961	1					
ANR	5122573	Argument	porder		5121961	0					
ANR	5122574	Identifier	porder		5121961	0					
ANR	5122575	ReturnStatement	"return process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem ) ;"	528:4:18456:18538	5121961	33	True				
ANR	5122576	CallExpression	"process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem )"		5121961	0					
ANR	5122577	Callee	process_transfer		5121961	0					
ANR	5122578	Identifier	process_transfer		5121961	0					
ANR	5122579	ArgumentList	porder		5121961	1					
ANR	5122580	Argument	porder		5121961	0					
ANR	5122581	Identifier	porder		5121961	0					
ANR	5122582	Argument	pgs		5121961	1					
ANR	5122583	Identifier	pgs		5121961	0					
ANR	5122584	Argument	phtp -> transfer		5121961	2					
ANR	5122585	PtrMemberAccess	phtp -> transfer		5121961	0					
ANR	5122586	Identifier	phtp		5121961	0					
ANR	5122587	Identifier	transfer		5121961	1					
ANR	5122588	Argument	& phtp -> transfer_closure		5121961	3					
ANR	5122589	UnaryOperationExpression	& phtp -> transfer_closure		5121961	0					
ANR	5122590	UnaryOperator	&		5121961	0					
ANR	5122591	PtrMemberAccess	phtp -> transfer_closure		5121961	1					
ANR	5122592	Identifier	phtp		5121961	0					
ANR	5122593	Identifier	transfer_closure		5121961	1					
ANR	5122594	Argument	mem		5121961	4					
ANR	5122595	Identifier	mem		5121961	0					
ANR	5122596	Statement	undef	529:1:18541:18545	5121961	34	True				
ANR	5122597	Statement	LOG2_MAX_HT_LEVELS	529:7:18547:18564	5121961	35	True				
ANR	5122598	Statement	undef	530:1:18567:18571	5121961	36	True				
ANR	5122599	Statement	MAX_HT_LEVELS	530:7:18573:18585	5121961	37	True				
ANR	5122600	ReturnType	static int		5121961	1					
ANR	5122601	Identifier	process_threshold2		5121961	2					
ANR	5122602	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_threshold2_halftone * phtp , gs_memory_t * mem"		5121961	3					
ANR	5122603	Parameter	gx_ht_order * porder	419:19:14823:14842	5121961	0	True				
ANR	5122604	ParameterType	gx_ht_order *		5121961	0					
ANR	5122605	Identifier	porder		5121961	1					
ANR	5122606	Parameter	gs_gstate * pgs	419:41:14845:14859	5121961	1	True				
ANR	5122607	ParameterType	gs_gstate *		5121961	0					
ANR	5122608	Identifier	pgs		5121961	1					
ANR	5122609	Parameter	gs_threshold2_halftone * phtp	420:19:14881:14909	5121961	2	True				
ANR	5122610	ParameterType	gs_threshold2_halftone *		5121961	0					
ANR	5122611	Identifier	phtp		5121961	1					
ANR	5122612	Parameter	gs_memory_t * mem	420:50:14912:14928	5121961	3	True				
ANR	5122613	ParameterType	gs_memory_t *		5121961	0					
ANR	5122614	Identifier	mem		5121961	1					
ANR	5122615	CFGEntryNode	ENTRY		5121961		True				
ANR	5122616	CFGExitNode	EXIT		5121961		True				
ANR	5122617	Symbol	data		5121961						
ANR	5122618	Symbol	di		5121961						
ANR	5122619	Symbol	shift		5121961						
ANR	5122620	Symbol	* phtp		5121961						
ANR	5122621	Symbol	sod		5121961						
ANR	5122622	Symbol	phtp -> transfer		5121961						
ANR	5122623	Symbol	phtp -> width2		5121961						
ANR	5122624	Symbol	dx		5121961						
ANR	5122625	Symbol	phtp -> thresholds . data		5121961						
ANR	5122626	Symbol	porder -> params		5121961						
ANR	5122627	Symbol	& phtp -> transfer_closure		5121961						
ANR	5122628	Symbol	w1		5121961						
ANR	5122629	Symbol	w2		5121961						
ANR	5122630	Symbol	* si		5121961						
ANR	5122631	Symbol	* bits		5121961						
ANR	5122632	Symbol	bits [ di ] . mask		5121961						
ANR	5122633	Symbol	bits		5121961						
ANR	5122634	Symbol	* di		5121961						
ANR	5122635	Symbol	porder		5121961						
ANR	5122636	Symbol	porder -> params . R1		5121961						
ANR	5122637	Symbol	phtp -> thresholds		5121961						
ANR	5122638	Symbol	porder -> params . M1		5121961						
ANR	5122639	Symbol	size		5121961						
ANR	5122640	Symbol	phtp -> width		5121961						
ANR	5122641	Symbol	* porder		5121961						
ANR	5122642	Symbol	phtp		5121961						
ANR	5122643	Symbol	code		5121961						
ANR	5122644	Symbol	phtp -> height		5121961						
ANR	5122645	Symbol	porder -> params . R		5121961						
ANR	5122646	Symbol	h1		5121961						
ANR	5122647	Symbol	h2		5121961						
ANR	5122648	Symbol	igcd		5121961						
ANR	5122649	Symbol	process_transfer		5121961						
ANR	5122650	Symbol	porder -> params . N1		5121961						
ANR	5122651	Symbol	porder -> bit_data		5121961						
ANR	5122652	Symbol	mem		5121961						
ANR	5122653	Symbol	size1		5121961						
ANR	5122654	Symbol	si		5121961						
ANR	5122655	Symbol	size2		5121961						
ANR	5122656	Symbol	porder -> params . N		5121961						
ANR	5122657	Symbol	porder -> params . M		5121961						
ANR	5122658	Symbol	row		5121961						
ANR	5122659	Symbol	pgs		5121961						
ANR	5122660	Symbol	phtp -> bytes_per_sample		5121961						
ANR	5122661	Symbol	rshift		5121961						
ANR	5122662	Symbol	MAX_HT_LEVELS		5121961						
ANR	5122663	Symbol	mask		5121961						
ANR	5122664	Symbol	bps		5121961						
ANR	5122665	Symbol	d		5121961						
ANR	5122666	Symbol	max		5121961						
ANR	5122667	Symbol	sy		5121961						
ANR	5122668	Symbol	phtp -> height2		5121961						
ANR	5122669	Symbol	i		5121961						
ANR	5122670	Symbol	j		5121961						
ANR	5122671	Symbol	* i		5121961						
ANR	5122672	Symbol	& ht_order_procs_default		5121961						
ANR	5122673	Symbol	max_thr		5121961						
ANR	5122674	Symbol	w		5121961						
ANR	5122675	Symbol	x		5121961						
ANR	5122676	Symbol	y		5121961						
ANR	5122677	Symbol	* data		5121961						
ANR	5122678	Symbol	gx_ht_alloc_ht_order		5121961						
ANR	5122679	Symbol	num_levels		5121961						
ANR	5122680	Symbol	thr		5121961						
ANR	5122681	Function	process_client_order	534:0:18626:18992							
ANR	5122682	FunctionDef	"process_client_order (gx_ht_order * porder , gs_gstate * pgs , gs_client_order_halftone * phcop , gs_memory_t * mem)"		5122681	0					
ANR	5122683	CompoundStatement		537:0:18771:18992	5122681	0					
ANR	5122684	IdentifierDeclStatement	"int code = ( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem ) ;"	538:4:18777:18843	5122681	0	True				
ANR	5122685	IdentifierDecl	"code = ( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem )"		5122681	0					
ANR	5122686	IdentifierDeclType	int		5122681	0					
ANR	5122687	Identifier	code		5122681	1					
ANR	5122688	AssignmentExpression	"code = ( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem )"		5122681	2		=			
ANR	5122689	Identifier	code		5122681	0					
ANR	5122690	CallExpression	"( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem )"		5122681	1					
ANR	5122691	Callee	* phcop -> procs -> create_order		5122681	0					
ANR	5122692	UnaryOperationExpression	* phcop -> procs -> create_order		5122681	0					
ANR	5122693	UnaryOperator	*		5122681	0					
ANR	5122694	PtrMemberAccess	phcop -> procs -> create_order		5122681	1					
ANR	5122695	PtrMemberAccess	phcop -> procs		5122681	0					
ANR	5122696	Identifier	phcop		5122681	0					
ANR	5122697	Identifier	procs		5122681	1					
ANR	5122698	Identifier	create_order		5122681	1					
ANR	5122699	ArgumentList	porder		5122681	1					
ANR	5122700	Argument	porder		5122681	0					
ANR	5122701	Identifier	porder		5122681	0					
ANR	5122702	Argument	pgs		5122681	1					
ANR	5122703	Identifier	pgs		5122681	0					
ANR	5122704	Argument	phcop		5122681	2					
ANR	5122705	Identifier	phcop		5122681	0					
ANR	5122706	Argument	mem		5122681	3					
ANR	5122707	Identifier	mem		5122681	0					
ANR	5122708	IfStatement	if ( code < 0 )		5122681	1					
ANR	5122709	Condition	code < 0	540:8:18854:18861	5122681	0	True				
ANR	5122710	RelationalExpression	code < 0		5122681	0		<			
ANR	5122711	Identifier	code		5122681	0					
ANR	5122712	PrimaryExpression	0		5122681	1					
ANR	5122713	ReturnStatement	return code ;	541:8:18872:18883	5122681	1	True				
ANR	5122714	Identifier	code		5122681	0					
ANR	5122715	ReturnStatement	"return process_transfer ( porder , pgs , NULL , & phcop -> transfer_closure , mem ) ;"	542:4:18889:18990	5122681	2	True				
ANR	5122716	CallExpression	"process_transfer ( porder , pgs , NULL , & phcop -> transfer_closure , mem )"		5122681	0					
ANR	5122717	Callee	process_transfer		5122681	0					
ANR	5122718	Identifier	process_transfer		5122681	0					
ANR	5122719	ArgumentList	porder		5122681	1					
ANR	5122720	Argument	porder		5122681	0					
ANR	5122721	Identifier	porder		5122681	0					
ANR	5122722	Argument	pgs		5122681	1					
ANR	5122723	Identifier	pgs		5122681	0					
ANR	5122724	Argument	NULL		5122681	2					
ANR	5122725	Identifier	NULL		5122681	0					
ANR	5122726	Argument	& phcop -> transfer_closure		5122681	3					
ANR	5122727	UnaryOperationExpression	& phcop -> transfer_closure		5122681	0					
ANR	5122728	UnaryOperator	&		5122681	0					
ANR	5122729	PtrMemberAccess	phcop -> transfer_closure		5122681	1					
ANR	5122730	Identifier	phcop		5122681	0					
ANR	5122731	Identifier	transfer_closure		5122681	1					
ANR	5122732	Argument	mem		5122681	4					
ANR	5122733	Identifier	mem		5122681	0					
ANR	5122734	ReturnType	static int		5122681	1					
ANR	5122735	Identifier	process_client_order		5122681	2					
ANR	5122736	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_client_order_halftone * phcop , gs_memory_t * mem"		5122681	3					
ANR	5122737	Parameter	gx_ht_order * porder	535:21:18658:18677	5122681	0	True				
ANR	5122738	ParameterType	gx_ht_order *		5122681	0					
ANR	5122739	Identifier	porder		5122681	1					
ANR	5122740	Parameter	gs_gstate * pgs	535:43:18680:18694	5122681	1	True				
ANR	5122741	ParameterType	gs_gstate *		5122681	0					
ANR	5122742	Identifier	pgs		5122681	1					
ANR	5122743	Parameter	gs_client_order_halftone * phcop	536:21:18718:18749	5122681	2	True				
ANR	5122744	ParameterType	gs_client_order_halftone *		5122681	0					
ANR	5122745	Identifier	phcop		5122681	1					
ANR	5122746	Parameter	gs_memory_t * mem	536:55:18752:18768	5122681	3	True				
ANR	5122747	ParameterType	gs_memory_t *		5122681	0					
ANR	5122748	Identifier	mem		5122681	1					
ANR	5122749	CFGEntryNode	ENTRY		5122681		True				
ANR	5122750	CFGExitNode	EXIT		5122681		True				
ANR	5122751	Symbol	phcop -> procs		5122681						
ANR	5122752	Symbol	code		5122681						
ANR	5122753	Symbol	NULL		5122681						
ANR	5122754	Symbol	* phcop -> procs		5122681						
ANR	5122755	Symbol	* * * phcop		5122681						
ANR	5122756	Symbol	* phcop -> procs -> create_order		5122681						
ANR	5122757	Symbol	* * phcop -> procs		5122681						
ANR	5122758	Symbol	& phcop -> transfer_closure		5122681						
ANR	5122759	Symbol	* phcop		5122681						
ANR	5122760	Symbol	porder		5122681						
ANR	5122761	Symbol	phcop -> procs -> create_order		5122681						
ANR	5122762	Symbol	process_transfer		5122681						
ANR	5122763	Symbol	mem		5122681						
ANR	5122764	Symbol	phcop		5122681						
ANR	5122765	Symbol	* * phcop		5122681						
ANR	5122766	Symbol	pgs		5122681						
