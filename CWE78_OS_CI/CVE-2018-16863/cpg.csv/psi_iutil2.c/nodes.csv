command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8932331	File	data/converged/CVE-2018-16863_ghostpdl/psi_iutil2.c								
ANR	8932332	Function	param_read_password	34:0:1048:1956							
ANR	8932333	FunctionDef	"param_read_password (gs_param_list * plist , const char * kstr , password * ppass)"		8932332	0					
ANR	8932334	CompoundStatement		36:0:1131:1956	8932332	0					
ANR	8932335	IdentifierDeclStatement	gs_param_string ps ;	37:4:1137:1155	8932332	0	True				
ANR	8932336	IdentifierDecl	ps		8932332	0					
ANR	8932337	IdentifierDeclType	gs_param_string		8932332	0					
ANR	8932338	Identifier	ps		8932332	1					
ANR	8932339	IdentifierDeclStatement	long ipass ;	38:4:1161:1171	8932332	1	True				
ANR	8932340	IdentifierDecl	ipass		8932332	0					
ANR	8932341	IdentifierDeclType	long		8932332	0					
ANR	8932342	Identifier	ipass		8932332	1					
ANR	8932343	IdentifierDeclStatement	"int code = param_read_string ( plist , kstr , & ps ) ;"	39:4:1177:1223	8932332	2	True				
ANR	8932344	IdentifierDecl	"code = param_read_string ( plist , kstr , & ps )"		8932332	0					
ANR	8932345	IdentifierDeclType	int		8932332	0					
ANR	8932346	Identifier	code		8932332	1					
ANR	8932347	AssignmentExpression	"code = param_read_string ( plist , kstr , & ps )"		8932332	2		=			
ANR	8932348	Identifier	code		8932332	0					
ANR	8932349	CallExpression	"param_read_string ( plist , kstr , & ps )"		8932332	1					
ANR	8932350	Callee	param_read_string		8932332	0					
ANR	8932351	Identifier	param_read_string		8932332	0					
ANR	8932352	ArgumentList	plist		8932332	1					
ANR	8932353	Argument	plist		8932332	0					
ANR	8932354	Identifier	plist		8932332	0					
ANR	8932355	Argument	kstr		8932332	1					
ANR	8932356	Identifier	kstr		8932332	0					
ANR	8932357	Argument	& ps		8932332	2					
ANR	8932358	UnaryOperationExpression	& ps		8932332	0					
ANR	8932359	UnaryOperator	&		8932332	0					
ANR	8932360	Identifier	ps		8932332	1					
ANR	8932361	SwitchStatement	switch ( code )		8932332	3					
ANR	8932362	Condition	code	41:12:1238:1241	8932332	0	True				
ANR	8932363	Identifier	code		8932332	0					
ANR	8932364	CompoundStatement		6:18:112:112	8932332	1					
ANR	8932365	Label	case 0 :	42:8:1254:1260	8932332	0	True				
ANR	8932366	IfStatement	if ( ps . size > MAX_PASSWORD )		8932332	1					
ANR	8932367	Condition	ps . size > MAX_PASSWORD	43:16:1288:1309	8932332	0	True				
ANR	8932368	RelationalExpression	ps . size > MAX_PASSWORD		8932332	0		>			
ANR	8932369	MemberAccess	ps . size		8932332	0					
ANR	8932370	Identifier	ps		8932332	0					
ANR	8932371	Identifier	size		8932332	1					
ANR	8932372	Identifier	MAX_PASSWORD		8932332	1					
ANR	8932373	ExpressionStatement	return_error ( gs_error_limitcheck )	44:16:1328:1361	8932332	1	True				
ANR	8932374	CallExpression	return_error ( gs_error_limitcheck )		8932332	0					
ANR	8932375	Callee	return_error		8932332	0					
ANR	8932376	Identifier	return_error		8932332	0					
ANR	8932377	ArgumentList	gs_error_limitcheck		8932332	1					
ANR	8932378	Argument	gs_error_limitcheck		8932332	0					
ANR	8932379	Identifier	gs_error_limitcheck		8932332	0					
ANR	8932380	ExpressionStatement	"memcpy ( ppass -> data , ps . data , ps . size )"	46:12:1413:1450	8932332	2	True				
ANR	8932381	CallExpression	"memcpy ( ppass -> data , ps . data , ps . size )"		8932332	0					
ANR	8932382	Callee	memcpy		8932332	0					
ANR	8932383	Identifier	memcpy		8932332	0					
ANR	8932384	ArgumentList	ppass -> data		8932332	1					
ANR	8932385	Argument	ppass -> data		8932332	0					
ANR	8932386	PtrMemberAccess	ppass -> data		8932332	0					
ANR	8932387	Identifier	ppass		8932332	0					
ANR	8932388	Identifier	data		8932332	1					
ANR	8932389	Argument	ps . data		8932332	1					
ANR	8932390	MemberAccess	ps . data		8932332	0					
ANR	8932391	Identifier	ps		8932332	0					
ANR	8932392	Identifier	data		8932332	1					
ANR	8932393	Argument	ps . size		8932332	2					
ANR	8932394	MemberAccess	ps . size		8932332	0					
ANR	8932395	Identifier	ps		8932332	0					
ANR	8932396	Identifier	size		8932332	1					
ANR	8932397	ExpressionStatement	ppass -> size = ps . size	47:12:1464:1485	8932332	3	True				
ANR	8932398	AssignmentExpression	ppass -> size = ps . size		8932332	0		=			
ANR	8932399	PtrMemberAccess	ppass -> size		8932332	0					
ANR	8932400	Identifier	ppass		8932332	0					
ANR	8932401	Identifier	size		8932332	1					
ANR	8932402	MemberAccess	ps . size		8932332	1					
ANR	8932403	Identifier	ps		8932332	0					
ANR	8932404	Identifier	size		8932332	1					
ANR	8932405	ReturnStatement	return 0 ;	48:12:1499:1507	8932332	4	True				
ANR	8932406	PrimaryExpression	0		8932332	0					
ANR	8932407	Label	case 1 :	49:8:1517:1523	8932332	5	True				
ANR	8932408	ReturnStatement	return 1 ;	50:12:1559:1567	8932332	6	True				
ANR	8932409	PrimaryExpression	1		8932332	0					
ANR	8932410	IfStatement	if ( code != gs_error_typecheck )		8932332	4					
ANR	8932411	Condition	code != gs_error_typecheck	54:8:1682:1707	8932332	0	True				
ANR	8932412	EqualityExpression	code != gs_error_typecheck		8932332	0		!=			
ANR	8932413	Identifier	code		8932332	0					
ANR	8932414	Identifier	gs_error_typecheck		8932332	1					
ANR	8932415	ReturnStatement	return code ;	55:8:1718:1729	8932332	1	True				
ANR	8932416	Identifier	code		8932332	0					
ANR	8932417	ExpressionStatement	"code = param_read_long ( plist , kstr , & ipass )"	56:4:1735:1778	8932332	5	True				
ANR	8932418	AssignmentExpression	"code = param_read_long ( plist , kstr , & ipass )"		8932332	0		=			
ANR	8932419	Identifier	code		8932332	0					
ANR	8932420	CallExpression	"param_read_long ( plist , kstr , & ipass )"		8932332	1					
ANR	8932421	Callee	param_read_long		8932332	0					
ANR	8932422	Identifier	param_read_long		8932332	0					
ANR	8932423	ArgumentList	plist		8932332	1					
ANR	8932424	Argument	plist		8932332	0					
ANR	8932425	Identifier	plist		8932332	0					
ANR	8932426	Argument	kstr		8932332	1					
ANR	8932427	Identifier	kstr		8932332	0					
ANR	8932428	Argument	& ipass		8932332	2					
ANR	8932429	UnaryOperationExpression	& ipass		8932332	0					
ANR	8932430	UnaryOperator	&		8932332	0					
ANR	8932431	Identifier	ipass		8932332	1					
ANR	8932432	IfStatement	if ( code != 0 )		8932332	6					
ANR	8932433	Condition	code != 0	57:8:1788:1796	8932332	0	True				
ANR	8932434	EqualityExpression	code != 0		8932332	0		!=			
ANR	8932435	Identifier	code		8932332	0					
ANR	8932436	PrimaryExpression	0		8932332	1					
ANR	8932437	ReturnStatement	return code ;	58:8:1831:1842	8932332	1	True				
ANR	8932438	Identifier	code		8932332	0					
ANR	8932439	ExpressionStatement	"gs_sprintf ( ( char * ) ppass -> data , ""%ld"" , ipass )"	59:4:1848:1893	8932332	7	True				
ANR	8932440	CallExpression	"gs_sprintf ( ( char * ) ppass -> data , ""%ld"" , ipass )"		8932332	0					
ANR	8932441	Callee	gs_sprintf		8932332	0					
ANR	8932442	Identifier	gs_sprintf		8932332	0					
ANR	8932443	ArgumentList	( char * ) ppass -> data		8932332	1					
ANR	8932444	Argument	( char * ) ppass -> data		8932332	0					
ANR	8932445	CastExpression	( char * ) ppass -> data		8932332	0					
ANR	8932446	CastTarget	char *		8932332	0					
ANR	8932447	PtrMemberAccess	ppass -> data		8932332	1					
ANR	8932448	Identifier	ppass		8932332	0					
ANR	8932449	Identifier	data		8932332	1					
ANR	8932450	Argument	"""%ld"""		8932332	1					
ANR	8932451	PrimaryExpression	"""%ld"""		8932332	0					
ANR	8932452	Argument	ipass		8932332	2					
ANR	8932453	Identifier	ipass		8932332	0					
ANR	8932454	ExpressionStatement	ppass -> size = strlen ( ( char * ) ppass -> data )	60:4:1899:1940	8932332	8	True				
ANR	8932455	AssignmentExpression	ppass -> size = strlen ( ( char * ) ppass -> data )		8932332	0		=			
ANR	8932456	PtrMemberAccess	ppass -> size		8932332	0					
ANR	8932457	Identifier	ppass		8932332	0					
ANR	8932458	Identifier	size		8932332	1					
ANR	8932459	CallExpression	strlen ( ( char * ) ppass -> data )		8932332	1					
ANR	8932460	Callee	strlen		8932332	0					
ANR	8932461	Identifier	strlen		8932332	0					
ANR	8932462	ArgumentList	( char * ) ppass -> data		8932332	1					
ANR	8932463	Argument	( char * ) ppass -> data		8932332	0					
ANR	8932464	CastExpression	( char * ) ppass -> data		8932332	0					
ANR	8932465	CastTarget	char *		8932332	0					
ANR	8932466	PtrMemberAccess	ppass -> data		8932332	1					
ANR	8932467	Identifier	ppass		8932332	0					
ANR	8932468	Identifier	data		8932332	1					
ANR	8932469	ReturnStatement	return 0 ;	61:4:1946:1954	8932332	9	True				
ANR	8932470	PrimaryExpression	0		8932332	0					
ANR	8932471	ReturnType	int		8932332	1					
ANR	8932472	Identifier	param_read_password		8932332	2					
ANR	8932473	ParameterList	"gs_param_list * plist , const char * kstr , password * ppass"		8932332	3					
ANR	8932474	Parameter	gs_param_list * plist	35:20:1072:1092	8932332	0	True				
ANR	8932475	ParameterType	gs_param_list *		8932332	0					
ANR	8932476	Identifier	plist		8932332	1					
ANR	8932477	Parameter	const char * kstr	35:43:1095:1110	8932332	1	True				
ANR	8932478	ParameterType	const char *		8932332	0					
ANR	8932479	Identifier	kstr		8932332	1					
ANR	8932480	Parameter	password * ppass	35:61:1113:1128	8932332	2	True				
ANR	8932481	ParameterType	password *		8932332	0					
ANR	8932482	Identifier	ppass		8932332	1					
ANR	8932483	CFGEntryNode	ENTRY		8932332		True				
ANR	8932484	CFGExitNode	EXIT		8932332		True				
ANR	8932485	Symbol	ppass -> size		8932332						
ANR	8932486	Symbol	ps		8932332						
ANR	8932487	Symbol	code		8932332						
ANR	8932488	Symbol	& ipass		8932332						
ANR	8932489	Symbol	param_read_long		8932332						
ANR	8932490	Symbol	MAX_PASSWORD		8932332						
ANR	8932491	Symbol	ipass		8932332						
ANR	8932492	Symbol	ps . size		8932332						
ANR	8932493	Symbol	& ps		8932332						
ANR	8932494	Symbol	param_read_string		8932332						
ANR	8932495	Symbol	ppass -> data		8932332						
ANR	8932496	Symbol	strlen		8932332						
ANR	8932497	Symbol	plist		8932332						
ANR	8932498	Symbol	gs_error_typecheck		8932332						
ANR	8932499	Symbol	kstr		8932332						
ANR	8932500	Symbol	* ppass		8932332						
ANR	8932501	Symbol	ps . data		8932332						
ANR	8932502	Symbol	gs_error_limitcheck		8932332						
ANR	8932503	Symbol	ppass		8932332						
ANR	8932504	Function	param_write_password	64:0:2002:2359							
ANR	8932505	FunctionDef	"param_write_password (gs_param_list * plist , const char * kstr , const password * ppass)"		8932504	0					
ANR	8932506	CompoundStatement		67:0:2113:2359	8932504	0					
ANR	8932507	IdentifierDeclStatement	gs_param_string ps ;	68:4:2119:2137	8932504	0	True				
ANR	8932508	IdentifierDecl	ps		8932504	0					
ANR	8932509	IdentifierDeclType	gs_param_string		8932504	0					
ANR	8932510	Identifier	ps		8932504	1					
ANR	8932511	ExpressionStatement	"ps . data = ( const byte * ) ppass -> data , ps . size = ppass -> size , ps . persistent = false"	70:4:2144:2233	8932504	1	True				
ANR	8932512	Expression	"ps . data = ( const byte * ) ppass -> data , ps . size = ppass -> size , ps . persistent = false"		8932504	0					
ANR	8932513	AssignmentExpression	ps . data = ( const byte * ) ppass -> data		8932504	0		=			
ANR	8932514	MemberAccess	ps . data		8932504	0					
ANR	8932515	Identifier	ps		8932504	0					
ANR	8932516	Identifier	data		8932504	1					
ANR	8932517	CastExpression	( const byte * ) ppass -> data		8932504	1					
ANR	8932518	CastTarget	const byte *		8932504	0					
ANR	8932519	PtrMemberAccess	ppass -> data		8932504	1					
ANR	8932520	Identifier	ppass		8932504	0					
ANR	8932521	Identifier	data		8932504	1					
ANR	8932522	Expression	"ps . size = ppass -> size , ps . persistent = false"		8932504	1					
ANR	8932523	AssignmentExpression	ps . size = ppass -> size		8932504	0		=			
ANR	8932524	MemberAccess	ps . size		8932504	0					
ANR	8932525	Identifier	ps		8932504	0					
ANR	8932526	Identifier	size		8932504	1					
ANR	8932527	PtrMemberAccess	ppass -> size		8932504	1					
ANR	8932528	Identifier	ppass		8932504	0					
ANR	8932529	Identifier	size		8932504	1					
ANR	8932530	AssignmentExpression	ps . persistent = false		8932504	1		=			
ANR	8932531	MemberAccess	ps . persistent		8932504	0					
ANR	8932532	Identifier	ps		8932504	0					
ANR	8932533	Identifier	persistent		8932504	1					
ANR	8932534	Identifier	false		8932504	1					
ANR	8932535	IfStatement	if ( ps . size > MAX_PASSWORD )		8932504	2					
ANR	8932536	Condition	ps . size > MAX_PASSWORD	72:8:2243:2264	8932504	0	True				
ANR	8932537	RelationalExpression	ps . size > MAX_PASSWORD		8932504	0		>			
ANR	8932538	MemberAccess	ps . size		8932504	0					
ANR	8932539	Identifier	ps		8932504	0					
ANR	8932540	Identifier	size		8932504	1					
ANR	8932541	Identifier	MAX_PASSWORD		8932504	1					
ANR	8932542	ExpressionStatement	return_error ( gs_error_limitcheck )	73:8:2275:2308	8932504	1	True				
ANR	8932543	CallExpression	return_error ( gs_error_limitcheck )		8932504	0					
ANR	8932544	Callee	return_error		8932504	0					
ANR	8932545	Identifier	return_error		8932504	0					
ANR	8932546	ArgumentList	gs_error_limitcheck		8932504	1					
ANR	8932547	Argument	gs_error_limitcheck		8932504	0					
ANR	8932548	Identifier	gs_error_limitcheck		8932504	0					
ANR	8932549	ReturnStatement	"return param_write_string ( plist , kstr , & ps ) ;"	74:4:2314:2357	8932504	3	True				
ANR	8932550	CallExpression	"param_write_string ( plist , kstr , & ps )"		8932504	0					
ANR	8932551	Callee	param_write_string		8932504	0					
ANR	8932552	Identifier	param_write_string		8932504	0					
ANR	8932553	ArgumentList	plist		8932504	1					
ANR	8932554	Argument	plist		8932504	0					
ANR	8932555	Identifier	plist		8932504	0					
ANR	8932556	Argument	kstr		8932504	1					
ANR	8932557	Identifier	kstr		8932504	0					
ANR	8932558	Argument	& ps		8932504	2					
ANR	8932559	UnaryOperationExpression	& ps		8932504	0					
ANR	8932560	UnaryOperator	&		8932504	0					
ANR	8932561	Identifier	ps		8932504	1					
ANR	8932562	ReturnType	int		8932504	1					
ANR	8932563	Identifier	param_write_password		8932504	2					
ANR	8932564	ParameterList	"gs_param_list * plist , const char * kstr , const password * ppass"		8932504	3					
ANR	8932565	Parameter	gs_param_list * plist	65:21:2027:2047	8932504	0	True				
ANR	8932566	ParameterType	gs_param_list *		8932504	0					
ANR	8932567	Identifier	plist		8932504	1					
ANR	8932568	Parameter	const char * kstr	65:44:2050:2065	8932504	1	True				
ANR	8932569	ParameterType	const char *		8932504	0					
ANR	8932570	Identifier	kstr		8932504	1					
ANR	8932571	Parameter	const password * ppass	66:21:2089:2110	8932504	2	True				
ANR	8932572	ParameterType	const password *		8932504	0					
ANR	8932573	Identifier	ppass		8932504	1					
ANR	8932574	CFGEntryNode	ENTRY		8932504		True				
ANR	8932575	CFGExitNode	EXIT		8932504		True				
ANR	8932576	Symbol	ppass -> size		8932504						
ANR	8932577	Symbol	ps		8932504						
ANR	8932578	Symbol	MAX_PASSWORD		8932504						
ANR	8932579	Symbol	ps . size		8932504						
ANR	8932580	Symbol	false		8932504						
ANR	8932581	Symbol	ps . persistent		8932504						
ANR	8932582	Symbol	& ps		8932504						
ANR	8932583	Symbol	ppass -> data		8932504						
ANR	8932584	Symbol	plist		8932504						
ANR	8932585	Symbol	kstr		8932504						
ANR	8932586	Symbol	* ppass		8932504						
ANR	8932587	Symbol	ps . data		8932504						
ANR	8932588	Symbol	gs_error_limitcheck		8932504						
ANR	8932589	Symbol	param_write_string		8932504						
ANR	8932590	Symbol	ppass		8932504						
ANR	8932591	Function	param_check_password	79:0:2461:2931							
ANR	8932592	FunctionDef	"param_check_password (gs_param_list * plist , const password * ppass)"		8932591	0					
ANR	8932593	CompoundStatement		81:0:2533:2931	8932591	0					
ANR	8932594	IfStatement	if ( ppass -> size != 0 )		8932591	0					
ANR	8932595	Condition	ppass -> size != 0	82:8:2543:2558	8932591	0	True				
ANR	8932596	EqualityExpression	ppass -> size != 0		8932591	0		!=			
ANR	8932597	PtrMemberAccess	ppass -> size		8932591	0					
ANR	8932598	Identifier	ppass		8932591	0					
ANR	8932599	Identifier	size		8932591	1					
ANR	8932600	PrimaryExpression	0		8932591	1					
ANR	8932601	CompoundStatement		4:8:60:116	8932591	1					
ANR	8932602	IdentifierDeclStatement	password pass ;	83:8:2571:2584	8932591	0	True				
ANR	8932603	IdentifierDecl	pass		8932591	0					
ANR	8932604	IdentifierDeclType	password		8932591	0					
ANR	8932605	Identifier	pass		8932591	1					
ANR	8932606	IdentifierDeclStatement	"int code = param_read_password ( plist , ""Password"" , & pass ) ;"	84:8:2594:2650	8932591	1	True				
ANR	8932607	IdentifierDecl	"code = param_read_password ( plist , ""Password"" , & pass )"		8932591	0					
ANR	8932608	IdentifierDeclType	int		8932591	0					
ANR	8932609	Identifier	code		8932591	1					
ANR	8932610	AssignmentExpression	"code = param_read_password ( plist , ""Password"" , & pass )"		8932591	2		=			
ANR	8932611	Identifier	code		8932591	0					
ANR	8932612	CallExpression	"param_read_password ( plist , ""Password"" , & pass )"		8932591	1					
ANR	8932613	Callee	param_read_password		8932591	0					
ANR	8932614	Identifier	param_read_password		8932591	0					
ANR	8932615	ArgumentList	plist		8932591	1					
ANR	8932616	Argument	plist		8932591	0					
ANR	8932617	Identifier	plist		8932591	0					
ANR	8932618	Argument	"""Password"""		8932591	1					
ANR	8932619	PrimaryExpression	"""Password"""		8932591	0					
ANR	8932620	Argument	& pass		8932591	2					
ANR	8932621	UnaryOperationExpression	& pass		8932591	0					
ANR	8932622	UnaryOperator	&		8932591	0					
ANR	8932623	Identifier	pass		8932591	1					
ANR	8932624	IfStatement	if ( code )		8932591	2					
ANR	8932625	Condition	code	86:12:2665:2668	8932591	0	True				
ANR	8932626	Identifier	code		8932591	0					
ANR	8932627	ReturnStatement	return code ;	87:12:2683:2694	8932591	1	True				
ANR	8932628	Identifier	code		8932591	0					
ANR	8932629	IfStatement	"if ( pass . size != ppass -> size || bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0 )"		8932591	3					
ANR	8932630	Condition	"pass . size != ppass -> size || bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0"	88:12:2708:2873	8932591	0	True				
ANR	8932631	OrExpression	"pass . size != ppass -> size || bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0"		8932591	0		||			
ANR	8932632	EqualityExpression	pass . size != ppass -> size		8932591	0		!=			
ANR	8932633	MemberAccess	pass . size		8932591	0					
ANR	8932634	Identifier	pass		8932591	0					
ANR	8932635	Identifier	size		8932591	1					
ANR	8932636	PtrMemberAccess	ppass -> size		8932591	1					
ANR	8932637	Identifier	ppass		8932591	0					
ANR	8932638	Identifier	size		8932591	1					
ANR	8932639	EqualityExpression	"bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size ) != 0"		8932591	1		!=			
ANR	8932640	CallExpression	"bytes_compare ( & pass . data [ 0 ] , pass . size , & ppass -> data [ 0 ] , ppass -> size )"		8932591	0					
ANR	8932641	Callee	bytes_compare		8932591	0					
ANR	8932642	Identifier	bytes_compare		8932591	0					
ANR	8932643	ArgumentList	& pass . data [ 0 ]		8932591	1					
ANR	8932644	Argument	& pass . data [ 0 ]		8932591	0					
ANR	8932645	UnaryOperationExpression	& pass . data [ 0 ]		8932591	0					
ANR	8932646	UnaryOperator	&		8932591	0					
ANR	8932647	ArrayIndexing	pass . data [ 0 ]		8932591	1					
ANR	8932648	MemberAccess	pass . data		8932591	0					
ANR	8932649	Identifier	pass		8932591	0					
ANR	8932650	Identifier	data		8932591	1					
ANR	8932651	PrimaryExpression	0		8932591	1					
ANR	8932652	Argument	pass . size		8932591	1					
ANR	8932653	MemberAccess	pass . size		8932591	0					
ANR	8932654	Identifier	pass		8932591	0					
ANR	8932655	Identifier	size		8932591	1					
ANR	8932656	Argument	& ppass -> data [ 0 ]		8932591	2					
ANR	8932657	UnaryOperationExpression	& ppass -> data [ 0 ]		8932591	0					
ANR	8932658	UnaryOperator	&		8932591	0					
ANR	8932659	ArrayIndexing	ppass -> data [ 0 ]		8932591	1					
ANR	8932660	PtrMemberAccess	ppass -> data		8932591	0					
ANR	8932661	Identifier	ppass		8932591	0					
ANR	8932662	Identifier	data		8932591	1					
ANR	8932663	PrimaryExpression	0		8932591	1					
ANR	8932664	Argument	ppass -> size		8932591	3					
ANR	8932665	PtrMemberAccess	ppass -> size		8932591	0					
ANR	8932666	Identifier	ppass		8932591	0					
ANR	8932667	Identifier	size		8932591	1					
ANR	8932668	PrimaryExpression	0		8932591	1					
ANR	8932669	ReturnStatement	return 1 ;	93:12:2901:2909	8932591	1	True				
ANR	8932670	PrimaryExpression	1		8932591	0					
ANR	8932671	ReturnStatement	return 0 ;	95:4:2921:2929	8932591	1	True				
ANR	8932672	PrimaryExpression	0		8932591	0					
ANR	8932673	ReturnType	int		8932591	1					
ANR	8932674	Identifier	param_check_password		8932591	2					
ANR	8932675	ParameterList	"gs_param_list * plist , const password * ppass"		8932591	3					
ANR	8932676	Parameter	gs_param_list * plist	80:21:2486:2506	8932591	0	True				
ANR	8932677	ParameterType	gs_param_list *		8932591	0					
ANR	8932678	Identifier	plist		8932591	1					
ANR	8932679	Parameter	const password * ppass	80:44:2509:2530	8932591	1	True				
ANR	8932680	ParameterType	const password *		8932591	0					
ANR	8932681	Identifier	ppass		8932591	1					
ANR	8932682	CFGEntryNode	ENTRY		8932591		True				
ANR	8932683	CFGExitNode	EXIT		8932591		True				
ANR	8932684	Symbol	ppass -> size		8932591						
ANR	8932685	Symbol	ppass -> data		8932591						
ANR	8932686	Symbol	plist		8932591						
ANR	8932687	Symbol	code		8932591						
ANR	8932688	Symbol	* ppass		8932591						
ANR	8932689	Symbol	& pass		8932591						
ANR	8932690	Symbol	pass . data		8932591						
ANR	8932691	Symbol	pass . size		8932591						
ANR	8932692	Symbol	pass		8932591						
ANR	8932693	Symbol	param_read_password		8932591						
ANR	8932694	Symbol	bytes_compare		8932591						
ANR	8932695	Symbol	ppass		8932591						
ANR	8932696	Function	dict_find_password	100:0:3032:3455							
ANR	8932697	FunctionDef	"dict_find_password (ref * * ppvalue , const ref * pdref , const char * kstr)"		8932696	0					
ANR	8932698	CompoundStatement		102:0:3115:3455	8932696	0					
ANR	8932699	IdentifierDeclStatement	ref * pvalue ;	103:4:3121:3132	8932696	0	True				
ANR	8932700	IdentifierDecl	* pvalue		8932696	0					
ANR	8932701	IdentifierDeclType	ref *		8932696	0					
ANR	8932702	Identifier	pvalue		8932696	1					
ANR	8932703	IfStatement	"if ( dict_find_string ( pdref , kstr , & pvalue ) <= 0 )"		8932696	1					
ANR	8932704	Condition	"dict_find_string ( pdref , kstr , & pvalue ) <= 0"	105:8:3143:3185	8932696	0	True				
ANR	8932705	RelationalExpression	"dict_find_string ( pdref , kstr , & pvalue ) <= 0"		8932696	0		<=			
ANR	8932706	CallExpression	"dict_find_string ( pdref , kstr , & pvalue )"		8932696	0					
ANR	8932707	Callee	dict_find_string		8932696	0					
ANR	8932708	Identifier	dict_find_string		8932696	0					
ANR	8932709	ArgumentList	pdref		8932696	1					
ANR	8932710	Argument	pdref		8932696	0					
ANR	8932711	Identifier	pdref		8932696	0					
ANR	8932712	Argument	kstr		8932696	1					
ANR	8932713	Identifier	kstr		8932696	0					
ANR	8932714	Argument	& pvalue		8932696	2					
ANR	8932715	UnaryOperationExpression	& pvalue		8932696	0					
ANR	8932716	UnaryOperator	&		8932696	0					
ANR	8932717	Identifier	pvalue		8932696	1					
ANR	8932718	PrimaryExpression	0		8932696	1					
ANR	8932719	ExpressionStatement	return_error ( gs_error_undefined )	106:8:3196:3228	8932696	1	True				
ANR	8932720	CallExpression	return_error ( gs_error_undefined )		8932696	0					
ANR	8932721	Callee	return_error		8932696	0					
ANR	8932722	Identifier	return_error		8932696	0					
ANR	8932723	ArgumentList	gs_error_undefined		8932696	1					
ANR	8932724	Argument	gs_error_undefined		8932696	0					
ANR	8932725	Identifier	gs_error_undefined		8932696	0					
ANR	8932726	IfStatement	"if ( ! r_has_type ( pvalue , t_string ) || r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue ) )"		8932696	2					
ANR	8932727	Condition	"! r_has_type ( pvalue , t_string ) || r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )"	107:8:3238:3363	8932696	0	True				
ANR	8932728	OrExpression	"! r_has_type ( pvalue , t_string ) || r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )"		8932696	0		||			
ANR	8932729	UnaryOperationExpression	"! r_has_type ( pvalue , t_string )"		8932696	0					
ANR	8932730	UnaryOperator	!		8932696	0					
ANR	8932731	CallExpression	"r_has_type ( pvalue , t_string )"		8932696	1					
ANR	8932732	Callee	r_has_type		8932696	0					
ANR	8932733	Identifier	r_has_type		8932696	0					
ANR	8932734	ArgumentList	pvalue		8932696	1					
ANR	8932735	Argument	pvalue		8932696	0					
ANR	8932736	Identifier	pvalue		8932696	0					
ANR	8932737	Argument	t_string		8932696	1					
ANR	8932738	Identifier	t_string		8932696	0					
ANR	8932739	OrExpression	"r_has_attrs ( pvalue , a_read ) || pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )"		8932696	1		||			
ANR	8932740	CallExpression	"r_has_attrs ( pvalue , a_read )"		8932696	0					
ANR	8932741	Callee	r_has_attrs		8932696	0					
ANR	8932742	Identifier	r_has_attrs		8932696	0					
ANR	8932743	ArgumentList	pvalue		8932696	1					
ANR	8932744	Argument	pvalue		8932696	0					
ANR	8932745	Identifier	pvalue		8932696	0					
ANR	8932746	Argument	a_read		8932696	1					
ANR	8932747	Identifier	a_read		8932696	0					
ANR	8932748	RelationalExpression	pvalue -> value . const_bytes [ 0 ] >= r_size ( pvalue )		8932696	1		>=			
ANR	8932749	ArrayIndexing	pvalue -> value . const_bytes [ 0 ]		8932696	0					
ANR	8932750	MemberAccess	pvalue -> value . const_bytes		8932696	0					
ANR	8932751	PtrMemberAccess	pvalue -> value		8932696	0					
ANR	8932752	Identifier	pvalue		8932696	0					
ANR	8932753	Identifier	value		8932696	1					
ANR	8932754	Identifier	const_bytes		8932696	1					
ANR	8932755	PrimaryExpression	0		8932696	1					
ANR	8932756	CallExpression	r_size ( pvalue )		8932696	1					
ANR	8932757	Callee	r_size		8932696	0					
ANR	8932758	Identifier	r_size		8932696	0					
ANR	8932759	ArgumentList	pvalue		8932696	1					
ANR	8932760	Argument	pvalue		8932696	0					
ANR	8932761	Identifier	pvalue		8932696	0					
ANR	8932762	ExpressionStatement	return_error ( gs_error_rangecheck )	111:8:3383:3416	8932696	1	True				
ANR	8932763	CallExpression	return_error ( gs_error_rangecheck )		8932696	0					
ANR	8932764	Callee	return_error		8932696	0					
ANR	8932765	Identifier	return_error		8932696	0					
ANR	8932766	ArgumentList	gs_error_rangecheck		8932696	1					
ANR	8932767	Argument	gs_error_rangecheck		8932696	0					
ANR	8932768	Identifier	gs_error_rangecheck		8932696	0					
ANR	8932769	ExpressionStatement	* ppvalue = pvalue	112:4:3422:3439	8932696	3	True				
ANR	8932770	AssignmentExpression	* ppvalue = pvalue		8932696	0		=			
ANR	8932771	UnaryOperationExpression	* ppvalue		8932696	0					
ANR	8932772	UnaryOperator	*		8932696	0					
ANR	8932773	Identifier	ppvalue		8932696	1					
ANR	8932774	Identifier	pvalue		8932696	1					
ANR	8932775	ReturnStatement	return 0 ;	113:4:3445:3453	8932696	4	True				
ANR	8932776	PrimaryExpression	0		8932696	0					
ANR	8932777	ReturnType	static int		8932696	1					
ANR	8932778	Identifier	dict_find_password		8932696	2					
ANR	8932779	ParameterList	"ref * * ppvalue , const ref * pdref , const char * kstr"		8932696	3					
ANR	8932780	Parameter	ref * * ppvalue	101:19:3062:3075	8932696	0	True				
ANR	8932781	ParameterType	ref * *		8932696	0					
ANR	8932782	Identifier	ppvalue		8932696	1					
ANR	8932783	Parameter	const ref * pdref	101:35:3078:3094	8932696	1	True				
ANR	8932784	ParameterType	const ref *		8932696	0					
ANR	8932785	Identifier	pdref		8932696	1					
ANR	8932786	Parameter	const char * kstr	101:54:3097:3112	8932696	2	True				
ANR	8932787	ParameterType	const char *		8932696	0					
ANR	8932788	Identifier	kstr		8932696	1					
ANR	8932789	CFGEntryNode	ENTRY		8932696		True				
ANR	8932790	CFGExitNode	EXIT		8932696		True				
ANR	8932791	Symbol	a_read		8932696						
ANR	8932792	Symbol	dict_find_string		8932696						
ANR	8932793	Symbol	& pvalue		8932696						
ANR	8932794	Symbol	gs_error_rangecheck		8932696						
ANR	8932795	Symbol	pdref		8932696						
ANR	8932796	Symbol	gs_error_undefined		8932696						
ANR	8932797	Symbol	pvalue		8932696						
ANR	8932798	Symbol	pvalue -> value . const_bytes		8932696						
ANR	8932799	Symbol	* pvalue -> value . const_bytes		8932696						
ANR	8932800	Symbol	t_string		8932696						
ANR	8932801	Symbol	r_has_type		8932696						
ANR	8932802	Symbol	* * pvalue		8932696						
ANR	8932803	Symbol	* pvalue		8932696						
ANR	8932804	Symbol	ppvalue		8932696						
ANR	8932805	Symbol	kstr		8932696						
ANR	8932806	Symbol	r_size		8932696						
ANR	8932807	Symbol	pvalue -> value		8932696						
ANR	8932808	Symbol	* pvalue -> value		8932696						
ANR	8932809	Symbol	r_has_attrs		8932696						
ANR	8932810	Symbol	* ppvalue		8932696						
ANR	8932811	Function	dict_read_password	115:0:3457:3892							
ANR	8932812	FunctionDef	"dict_read_password (password * ppass , const ref * pdref , const char * pkey)"		8932811	0					
ANR	8932813	CompoundStatement		117:0:3535:3892	8932811	0					
ANR	8932814	IdentifierDeclStatement	ref * pvalue ;	118:4:3541:3552	8932811	0	True				
ANR	8932815	IdentifierDecl	* pvalue		8932811	0					
ANR	8932816	IdentifierDeclType	ref *		8932811	0					
ANR	8932817	Identifier	pvalue		8932811	1					
ANR	8932818	IdentifierDeclStatement	"int code = dict_find_password ( & pvalue , pdref , pkey ) ;"	119:4:3558:3609	8932811	1	True				
ANR	8932819	IdentifierDecl	"code = dict_find_password ( & pvalue , pdref , pkey )"		8932811	0					
ANR	8932820	IdentifierDeclType	int		8932811	0					
ANR	8932821	Identifier	code		8932811	1					
ANR	8932822	AssignmentExpression	"code = dict_find_password ( & pvalue , pdref , pkey )"		8932811	2		=			
ANR	8932823	Identifier	code		8932811	0					
ANR	8932824	CallExpression	"dict_find_password ( & pvalue , pdref , pkey )"		8932811	1					
ANR	8932825	Callee	dict_find_password		8932811	0					
ANR	8932826	Identifier	dict_find_password		8932811	0					
ANR	8932827	ArgumentList	& pvalue		8932811	1					
ANR	8932828	Argument	& pvalue		8932811	0					
ANR	8932829	UnaryOperationExpression	& pvalue		8932811	0					
ANR	8932830	UnaryOperator	&		8932811	0					
ANR	8932831	Identifier	pvalue		8932811	1					
ANR	8932832	Argument	pdref		8932811	1					
ANR	8932833	Identifier	pdref		8932811	0					
ANR	8932834	Argument	pkey		8932811	2					
ANR	8932835	Identifier	pkey		8932811	0					
ANR	8932836	IfStatement	if ( code < 0 )		8932811	2					
ANR	8932837	Condition	code < 0	121:8:3620:3627	8932811	0	True				
ANR	8932838	RelationalExpression	code < 0		8932811	0		<			
ANR	8932839	Identifier	code		8932811	0					
ANR	8932840	PrimaryExpression	0		8932811	1					
ANR	8932841	ReturnStatement	return code ;	122:8:3638:3649	8932811	1	True				
ANR	8932842	Identifier	code		8932811	0					
ANR	8932843	IfStatement	if ( pvalue -> value . const_bytes [ 0 ] > MAX_PASSWORD )		8932811	3					
ANR	8932844	Condition	pvalue -> value . const_bytes [ 0 ] > MAX_PASSWORD	123:8:3659:3701	8932811	0	True				
ANR	8932845	RelationalExpression	pvalue -> value . const_bytes [ 0 ] > MAX_PASSWORD		8932811	0		>			
ANR	8932846	ArrayIndexing	pvalue -> value . const_bytes [ 0 ]		8932811	0					
ANR	8932847	MemberAccess	pvalue -> value . const_bytes		8932811	0					
ANR	8932848	PtrMemberAccess	pvalue -> value		8932811	0					
ANR	8932849	Identifier	pvalue		8932811	0					
ANR	8932850	Identifier	value		8932811	1					
ANR	8932851	Identifier	const_bytes		8932811	1					
ANR	8932852	PrimaryExpression	0		8932811	1					
ANR	8932853	Identifier	MAX_PASSWORD		8932811	1					
ANR	8932854	ExpressionStatement	return_error ( gs_error_rangecheck )	124:8:3712:3745	8932811	1	True				
ANR	8932855	CallExpression	return_error ( gs_error_rangecheck )		8932811	0					
ANR	8932856	Callee	return_error		8932811	0					
ANR	8932857	Identifier	return_error		8932811	0					
ANR	8932858	ArgumentList	gs_error_rangecheck		8932811	1					
ANR	8932859	Argument	gs_error_rangecheck		8932811	0					
ANR	8932860	Identifier	gs_error_rangecheck		8932811	0					
ANR	8932861	ExpressionStatement	"memcpy ( ppass -> data , pvalue -> value . const_bytes + 1 , ( ppass -> size = pvalue -> value . const_bytes [ 0 ] ) )"	125:4:3769:3876	8932811	4	True				
ANR	8932862	CallExpression	"memcpy ( ppass -> data , pvalue -> value . const_bytes + 1 , ( ppass -> size = pvalue -> value . const_bytes [ 0 ] ) )"		8932811	0					
ANR	8932863	Callee	memcpy		8932811	0					
ANR	8932864	Identifier	memcpy		8932811	0					
ANR	8932865	ArgumentList	ppass -> data		8932811	1					
ANR	8932866	Argument	ppass -> data		8932811	0					
ANR	8932867	PtrMemberAccess	ppass -> data		8932811	0					
ANR	8932868	Identifier	ppass		8932811	0					
ANR	8932869	Identifier	data		8932811	1					
ANR	8932870	Argument	pvalue -> value . const_bytes + 1		8932811	1					
ANR	8932871	AdditiveExpression	pvalue -> value . const_bytes + 1		8932811	0		+			
ANR	8932872	MemberAccess	pvalue -> value . const_bytes		8932811	0					
ANR	8932873	PtrMemberAccess	pvalue -> value		8932811	0					
ANR	8932874	Identifier	pvalue		8932811	0					
ANR	8932875	Identifier	value		8932811	1					
ANR	8932876	Identifier	const_bytes		8932811	1					
ANR	8932877	PrimaryExpression	1		8932811	1					
ANR	8932878	Argument	ppass -> size = pvalue -> value . const_bytes [ 0 ]		8932811	2					
ANR	8932879	AssignmentExpression	ppass -> size = pvalue -> value . const_bytes [ 0 ]		8932811	0		=			
ANR	8932880	PtrMemberAccess	ppass -> size		8932811	0					
ANR	8932881	Identifier	ppass		8932811	0					
ANR	8932882	Identifier	size		8932811	1					
ANR	8932883	ArrayIndexing	pvalue -> value . const_bytes [ 0 ]		8932811	1					
ANR	8932884	MemberAccess	pvalue -> value . const_bytes		8932811	0					
ANR	8932885	PtrMemberAccess	pvalue -> value		8932811	0					
ANR	8932886	Identifier	pvalue		8932811	0					
ANR	8932887	Identifier	value		8932811	1					
ANR	8932888	Identifier	const_bytes		8932811	1					
ANR	8932889	PrimaryExpression	0		8932811	1					
ANR	8932890	ReturnStatement	return 0 ;	127:4:3882:3890	8932811	5	True				
ANR	8932891	PrimaryExpression	0		8932811	0					
ANR	8932892	ReturnType	int		8932811	1					
ANR	8932893	Identifier	dict_read_password		8932811	2					
ANR	8932894	ParameterList	"password * ppass , const ref * pdref , const char * pkey"		8932811	3					
ANR	8932895	Parameter	password * ppass	116:19:3480:3495	8932811	0	True				
ANR	8932896	ParameterType	password *		8932811	0					
ANR	8932897	Identifier	ppass		8932811	1					
ANR	8932898	Parameter	const ref * pdref	116:37:3498:3514	8932811	1	True				
ANR	8932899	ParameterType	const ref *		8932811	0					
ANR	8932900	Identifier	pdref		8932811	1					
ANR	8932901	Parameter	const char * pkey	116:56:3517:3532	8932811	2	True				
ANR	8932902	ParameterType	const char *		8932811	0					
ANR	8932903	Identifier	pkey		8932811	1					
ANR	8932904	CFGEntryNode	ENTRY		8932811		True				
ANR	8932905	CFGExitNode	EXIT		8932811		True				
ANR	8932906	Symbol	ppass -> size		8932811						
ANR	8932907	Symbol	code		8932811						
ANR	8932908	Symbol	& pvalue		8932811						
ANR	8932909	Symbol	gs_error_rangecheck		8932811						
ANR	8932910	Symbol	MAX_PASSWORD		8932811						
ANR	8932911	Symbol	pdref		8932811						
ANR	8932912	Symbol	pvalue		8932811						
ANR	8932913	Symbol	pvalue -> value . const_bytes		8932811						
ANR	8932914	Symbol	* pvalue -> value . const_bytes		8932811						
ANR	8932915	Symbol	ppass -> data		8932811						
ANR	8932916	Symbol	* pvalue		8932811						
ANR	8932917	Symbol	* * pvalue		8932811						
ANR	8932918	Symbol	* ppass		8932811						
ANR	8932919	Symbol	dict_find_password		8932811						
ANR	8932920	Symbol	pkey		8932811						
ANR	8932921	Symbol	* pvalue -> value		8932811						
ANR	8932922	Symbol	pvalue -> value		8932811						
ANR	8932923	Symbol	ppass		8932811						
ANR	8932924	Function	dict_write_password	129:0:3894:4519							
ANR	8932925	FunctionDef	"dict_write_password (const password * ppass , ref * pdref , const char * pkey , bool change_allowed)"		8932924	0					
ANR	8932926	CompoundStatement		132:0:4018:4519	8932924	0					
ANR	8932927	IdentifierDeclStatement	ref * pvalue ;	133:4:4024:4035	8932924	0	True				
ANR	8932928	IdentifierDecl	* pvalue		8932924	0					
ANR	8932929	IdentifierDeclType	ref *		8932924	0					
ANR	8932930	Identifier	pvalue		8932924	1					
ANR	8932931	IdentifierDeclStatement	"int code = dict_find_password ( & pvalue , pdref , pkey ) ;"	134:4:4041:4092	8932924	1	True				
ANR	8932932	IdentifierDecl	"code = dict_find_password ( & pvalue , pdref , pkey )"		8932924	0					
ANR	8932933	IdentifierDeclType	int		8932924	0					
ANR	8932934	Identifier	code		8932924	1					
ANR	8932935	AssignmentExpression	"code = dict_find_password ( & pvalue , pdref , pkey )"		8932924	2		=			
ANR	8932936	Identifier	code		8932924	0					
ANR	8932937	CallExpression	"dict_find_password ( & pvalue , pdref , pkey )"		8932924	1					
ANR	8932938	Callee	dict_find_password		8932924	0					
ANR	8932939	Identifier	dict_find_password		8932924	0					
ANR	8932940	ArgumentList	& pvalue		8932924	1					
ANR	8932941	Argument	& pvalue		8932924	0					
ANR	8932942	UnaryOperationExpression	& pvalue		8932924	0					
ANR	8932943	UnaryOperator	&		8932924	0					
ANR	8932944	Identifier	pvalue		8932924	1					
ANR	8932945	Argument	pdref		8932924	1					
ANR	8932946	Identifier	pdref		8932924	0					
ANR	8932947	Argument	pkey		8932924	2					
ANR	8932948	Identifier	pkey		8932924	0					
ANR	8932949	IfStatement	if ( code < 0 )		8932924	2					
ANR	8932950	Condition	code < 0	136:8:4103:4110	8932924	0	True				
ANR	8932951	RelationalExpression	code < 0		8932924	0		<			
ANR	8932952	Identifier	code		8932924	0					
ANR	8932953	PrimaryExpression	0		8932924	1					
ANR	8932954	ReturnStatement	return code ;	137:8:4121:4132	8932924	1	True				
ANR	8932955	Identifier	code		8932924	0					
ANR	8932956	IfStatement	if ( ppass -> size >= r_size ( pvalue ) )		8932924	3					
ANR	8932957	Condition	ppass -> size >= r_size ( pvalue )	138:8:4142:4170	8932924	0	True				
ANR	8932958	RelationalExpression	ppass -> size >= r_size ( pvalue )		8932924	0		>=			
ANR	8932959	PtrMemberAccess	ppass -> size		8932924	0					
ANR	8932960	Identifier	ppass		8932924	0					
ANR	8932961	Identifier	size		8932924	1					
ANR	8932962	CallExpression	r_size ( pvalue )		8932924	1					
ANR	8932963	Callee	r_size		8932924	0					
ANR	8932964	Identifier	r_size		8932924	0					
ANR	8932965	ArgumentList	pvalue		8932924	1					
ANR	8932966	Argument	pvalue		8932924	0					
ANR	8932967	Identifier	pvalue		8932924	0					
ANR	8932968	ExpressionStatement	return_error ( gs_error_rangecheck )	139:8:4181:4214	8932924	1	True				
ANR	8932969	CallExpression	return_error ( gs_error_rangecheck )		8932924	0					
ANR	8932970	Callee	return_error		8932924	0					
ANR	8932971	Identifier	return_error		8932924	0					
ANR	8932972	ArgumentList	gs_error_rangecheck		8932924	1					
ANR	8932973	Argument	gs_error_rangecheck		8932924	0					
ANR	8932974	Identifier	gs_error_rangecheck		8932924	0					
ANR	8932975	IfStatement	"if ( ! change_allowed && bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0 )"		8932924	4					
ANR	8932976	Condition	"! change_allowed && bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0"	140:8:4224:4355	8932924	0	True				
ANR	8932977	AndExpression	"! change_allowed && bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0"		8932924	0		&&			
ANR	8932978	UnaryOperationExpression	! change_allowed		8932924	0					
ANR	8932979	UnaryOperator	!		8932924	0					
ANR	8932980	Identifier	change_allowed		8932924	1					
ANR	8932981	EqualityExpression	"bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size ) != 0"		8932924	1		!=			
ANR	8932982	CallExpression	"bytes_compare ( pvalue -> value . bytes + 1 , pvalue -> value . bytes [ 0 ] , ppass -> data , ppass -> size )"		8932924	0					
ANR	8932983	Callee	bytes_compare		8932924	0					
ANR	8932984	Identifier	bytes_compare		8932924	0					
ANR	8932985	ArgumentList	pvalue -> value . bytes + 1		8932924	1					
ANR	8932986	Argument	pvalue -> value . bytes + 1		8932924	0					
ANR	8932987	AdditiveExpression	pvalue -> value . bytes + 1		8932924	0		+			
ANR	8932988	MemberAccess	pvalue -> value . bytes		8932924	0					
ANR	8932989	PtrMemberAccess	pvalue -> value		8932924	0					
ANR	8932990	Identifier	pvalue		8932924	0					
ANR	8932991	Identifier	value		8932924	1					
ANR	8932992	Identifier	bytes		8932924	1					
ANR	8932993	PrimaryExpression	1		8932924	1					
ANR	8932994	Argument	pvalue -> value . bytes [ 0 ]		8932924	1					
ANR	8932995	ArrayIndexing	pvalue -> value . bytes [ 0 ]		8932924	0					
ANR	8932996	MemberAccess	pvalue -> value . bytes		8932924	0					
ANR	8932997	PtrMemberAccess	pvalue -> value		8932924	0					
ANR	8932998	Identifier	pvalue		8932924	0					
ANR	8932999	Identifier	value		8932924	1					
ANR	8933000	Identifier	bytes		8932924	1					
ANR	8933001	PrimaryExpression	0		8932924	1					
ANR	8933002	Argument	ppass -> data		8932924	2					
ANR	8933003	PtrMemberAccess	ppass -> data		8932924	0					
ANR	8933004	Identifier	ppass		8932924	0					
ANR	8933005	Identifier	data		8932924	1					
ANR	8933006	Argument	ppass -> size		8932924	3					
ANR	8933007	PtrMemberAccess	ppass -> size		8932924	0					
ANR	8933008	Identifier	ppass		8932924	0					
ANR	8933009	Identifier	size		8932924	1					
ANR	8933010	PrimaryExpression	0		8932924	1					
ANR	8933011	ExpressionStatement	return_error ( gs_error_invalidaccess )	143:8:4366:4402	8932924	1	True				
ANR	8933012	CallExpression	return_error ( gs_error_invalidaccess )		8932924	0					
ANR	8933013	Callee	return_error		8932924	0					
ANR	8933014	Identifier	return_error		8932924	0					
ANR	8933015	ArgumentList	gs_error_invalidaccess		8932924	1					
ANR	8933016	Argument	gs_error_invalidaccess		8932924	0					
ANR	8933017	Identifier	gs_error_invalidaccess		8932924	0					
ANR	8933018	ExpressionStatement	"memcpy ( pvalue -> value . bytes + 1 , ppass -> data , ( pvalue -> value . bytes [ 0 ] = ppass -> size ) )"	144:4:4408:4503	8932924	5	True				
ANR	8933019	CallExpression	"memcpy ( pvalue -> value . bytes + 1 , ppass -> data , ( pvalue -> value . bytes [ 0 ] = ppass -> size ) )"		8932924	0					
ANR	8933020	Callee	memcpy		8932924	0					
ANR	8933021	Identifier	memcpy		8932924	0					
ANR	8933022	ArgumentList	pvalue -> value . bytes + 1		8932924	1					
ANR	8933023	Argument	pvalue -> value . bytes + 1		8932924	0					
ANR	8933024	AdditiveExpression	pvalue -> value . bytes + 1		8932924	0		+			
ANR	8933025	MemberAccess	pvalue -> value . bytes		8932924	0					
ANR	8933026	PtrMemberAccess	pvalue -> value		8932924	0					
ANR	8933027	Identifier	pvalue		8932924	0					
ANR	8933028	Identifier	value		8932924	1					
ANR	8933029	Identifier	bytes		8932924	1					
ANR	8933030	PrimaryExpression	1		8932924	1					
ANR	8933031	Argument	ppass -> data		8932924	1					
ANR	8933032	PtrMemberAccess	ppass -> data		8932924	0					
ANR	8933033	Identifier	ppass		8932924	0					
ANR	8933034	Identifier	data		8932924	1					
ANR	8933035	Argument	pvalue -> value . bytes [ 0 ] = ppass -> size		8932924	2					
ANR	8933036	AssignmentExpression	pvalue -> value . bytes [ 0 ] = ppass -> size		8932924	0		=			
ANR	8933037	ArrayIndexing	pvalue -> value . bytes [ 0 ]		8932924	0					
ANR	8933038	MemberAccess	pvalue -> value . bytes		8932924	0					
ANR	8933039	PtrMemberAccess	pvalue -> value		8932924	0					
ANR	8933040	Identifier	pvalue		8932924	0					
ANR	8933041	Identifier	value		8932924	1					
ANR	8933042	Identifier	bytes		8932924	1					
ANR	8933043	PrimaryExpression	0		8932924	1					
ANR	8933044	PtrMemberAccess	ppass -> size		8932924	1					
ANR	8933045	Identifier	ppass		8932924	0					
ANR	8933046	Identifier	size		8932924	1					
ANR	8933047	ReturnStatement	return 0 ;	146:4:4509:4517	8932924	6	True				
ANR	8933048	PrimaryExpression	0		8932924	0					
ANR	8933049	ReturnType	int		8932924	1					
ANR	8933050	Identifier	dict_write_password		8932924	2					
ANR	8933051	ParameterList	"const password * ppass , ref * pdref , const char * pkey , bool change_allowed"		8932924	3					
ANR	8933052	Parameter	const password * ppass	130:20:3918:3939	8932924	0	True				
ANR	8933053	ParameterType	const password *		8932924	0					
ANR	8933054	Identifier	ppass		8932924	1					
ANR	8933055	Parameter	ref * pdref	130:44:3942:3952	8932924	1	True				
ANR	8933056	ParameterType	ref *		8932924	0					
ANR	8933057	Identifier	pdref		8932924	1					
ANR	8933058	Parameter	const char * pkey	130:57:3955:3970	8932924	2	True				
ANR	8933059	ParameterType	const char *		8932924	0					
ANR	8933060	Identifier	pkey		8932924	1					
ANR	8933061	Parameter	bool change_allowed	131:24:3997:4015	8932924	3	True				
ANR	8933062	ParameterType	bool		8932924	0					
ANR	8933063	Identifier	change_allowed		8932924	1					
ANR	8933064	CFGEntryNode	ENTRY		8932924		True				
ANR	8933065	CFGExitNode	EXIT		8932924		True				
ANR	8933066	Symbol	ppass -> size		8932924						
ANR	8933067	Symbol	code		8932924						
ANR	8933068	Symbol	pvalue -> value . bytes		8932924						
ANR	8933069	Symbol	& pvalue		8932924						
ANR	8933070	Symbol	gs_error_rangecheck		8932924						
ANR	8933071	Symbol	pdref		8932924						
ANR	8933072	Symbol	change_allowed		8932924						
ANR	8933073	Symbol	pvalue		8932924						
ANR	8933074	Symbol	ppass -> data		8932924						
ANR	8933075	Symbol	* * pvalue		8932924						
ANR	8933076	Symbol	* pvalue		8932924						
ANR	8933077	Symbol	* ppass		8932924						
ANR	8933078	Symbol	r_size		8932924						
ANR	8933079	Symbol	dict_find_password		8932924						
ANR	8933080	Symbol	gs_error_invalidaccess		8932924						
ANR	8933081	Symbol	pkey		8932924						
ANR	8933082	Symbol	* pvalue -> value . bytes		8932924						
ANR	8933083	Symbol	pvalue -> value		8932924						
ANR	8933084	Symbol	* pvalue -> value		8932924						
ANR	8933085	Symbol	bytes_compare		8932924						
ANR	8933086	Symbol	ppass		8932924						
