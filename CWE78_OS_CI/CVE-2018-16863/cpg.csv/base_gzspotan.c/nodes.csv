command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1313543	File	data/converged/CVE-2018-16863_ghostpdl/base_gzspotan.c								
ANR	1313544	Function	free_trap_list	42:0:1264:1506							
ANR	1313545	FunctionDef	"free_trap_list (gs_memory_t * mem , gx_san_trap * * list)"		1313544	0					
ANR	1313546	CompoundStatement		44:0:1336:1506	1313544	0					
ANR	1313547	IdentifierDeclStatement	"gx_san_trap * t = * list , * t1 ;"	45:4:1342:1369	1313544	0	True				
ANR	1313548	IdentifierDecl	* t = * list		1313544	0					
ANR	1313549	IdentifierDeclType	gx_san_trap *		1313544	0					
ANR	1313550	Identifier	t		1313544	1					
ANR	1313551	AssignmentExpression	* t = * list		1313544	2		=			
ANR	1313552	Identifier	t		1313544	0					
ANR	1313553	UnaryOperationExpression	* list		1313544	1					
ANR	1313554	UnaryOperator	*		1313544	0					
ANR	1313555	Identifier	list		1313544	1					
ANR	1313556	IdentifierDecl	* t1		1313544	1					
ANR	1313557	IdentifierDeclType	gx_san_trap *		1313544	0					
ANR	1313558	Identifier	t1		1313544	1					
ANR	1313559	ForStatement	for ( t = * list ; t != NULL ; t = t1 )		1313544	1					
ANR	1313560	ForInit	t = * list ;	47:9:1381:1390	1313544	0	True				
ANR	1313561	AssignmentExpression	t = * list		1313544	0		=			
ANR	1313562	Identifier	t		1313544	0					
ANR	1313563	UnaryOperationExpression	* list		1313544	1					
ANR	1313564	UnaryOperator	*		1313544	0					
ANR	1313565	Identifier	list		1313544	1					
ANR	1313566	Condition	t != NULL	47:20:1392:1400	1313544	1	True				
ANR	1313567	EqualityExpression	t != NULL		1313544	0		!=			
ANR	1313568	Identifier	t		1313544	0					
ANR	1313569	Identifier	NULL		1313544	1					
ANR	1313570	AssignmentExpression	t = t1	47:31:1403:1408	1313544	2	True	=			
ANR	1313571	Identifier	t		1313544	0					
ANR	1313572	Identifier	t1		1313544	1					
ANR	1313573	CompoundStatement		4:39:74:74	1313544	3					
ANR	1313574	ExpressionStatement	t1 = t -> link	48:8:1421:1433	1313544	0	True				
ANR	1313575	AssignmentExpression	t1 = t -> link		1313544	0		=			
ANR	1313576	Identifier	t1		1313544	0					
ANR	1313577	PtrMemberAccess	t -> link		1313544	1					
ANR	1313578	Identifier	t		1313544	0					
ANR	1313579	Identifier	link		1313544	1					
ANR	1313580	ExpressionStatement	"gs_free_object ( mem , t , ""free_trap_list"" )"	49:8:1443:1483	1313544	1	True				
ANR	1313581	CallExpression	"gs_free_object ( mem , t , ""free_trap_list"" )"		1313544	0					
ANR	1313582	Callee	gs_free_object		1313544	0					
ANR	1313583	Identifier	gs_free_object		1313544	0					
ANR	1313584	ArgumentList	mem		1313544	1					
ANR	1313585	Argument	mem		1313544	0					
ANR	1313586	Identifier	mem		1313544	0					
ANR	1313587	Argument	t		1313544	1					
ANR	1313588	Identifier	t		1313544	0					
ANR	1313589	Argument	"""free_trap_list"""		1313544	2					
ANR	1313590	PrimaryExpression	"""free_trap_list"""		1313544	0					
ANR	1313591	ExpressionStatement	* list = 0	51:4:1495:1504	1313544	2	True				
ANR	1313592	AssignmentExpression	* list = 0		1313544	0		=			
ANR	1313593	UnaryOperationExpression	* list		1313544	0					
ANR	1313594	UnaryOperator	*		1313544	0					
ANR	1313595	Identifier	list		1313544	1					
ANR	1313596	PrimaryExpression	0		1313544	1					
ANR	1313597	ReturnType	static inline void		1313544	1					
ANR	1313598	Identifier	free_trap_list		1313544	2					
ANR	1313599	ParameterList	"gs_memory_t * mem , gx_san_trap * * list"		1313544	3					
ANR	1313600	Parameter	gs_memory_t * mem	43:15:1298:1313	1313544	0	True				
ANR	1313601	ParameterType	gs_memory_t *		1313544	0					
ANR	1313602	Identifier	mem		1313544	1					
ANR	1313603	Parameter	gx_san_trap * * list	43:33:1316:1333	1313544	1	True				
ANR	1313604	ParameterType	gx_san_trap * *		1313544	0					
ANR	1313605	Identifier	list		1313544	1					
ANR	1313606	CFGEntryNode	ENTRY		1313544		True				
ANR	1313607	CFGExitNode	EXIT		1313544		True				
ANR	1313608	Symbol	NULL		1313544						
ANR	1313609	Symbol	mem		1313544						
ANR	1313610	Symbol	t		1313544						
ANR	1313611	Symbol	* list		1313544						
ANR	1313612	Symbol	list		1313544						
ANR	1313613	Symbol	t1		1313544						
ANR	1313614	Symbol	* t		1313544						
ANR	1313615	Symbol	t -> link		1313544						
ANR	1313616	Function	free_cont_list	54:0:1509:1767							
ANR	1313617	FunctionDef	"free_cont_list (gs_memory_t * mem , gx_san_trap_contact * * list)"		1313616	0					
ANR	1313618	CompoundStatement		56:0:1589:1767	1313616	0					
ANR	1313619	IdentifierDeclStatement	"gx_san_trap_contact * t = * list , * t1 ;"	57:4:1595:1630	1313616	0	True				
ANR	1313620	IdentifierDecl	* t = * list		1313616	0					
ANR	1313621	IdentifierDeclType	gx_san_trap_contact *		1313616	0					
ANR	1313622	Identifier	t		1313616	1					
ANR	1313623	AssignmentExpression	* t = * list		1313616	2		=			
ANR	1313624	Identifier	t		1313616	0					
ANR	1313625	UnaryOperationExpression	* list		1313616	1					
ANR	1313626	UnaryOperator	*		1313616	0					
ANR	1313627	Identifier	list		1313616	1					
ANR	1313628	IdentifierDecl	* t1		1313616	1					
ANR	1313629	IdentifierDeclType	gx_san_trap_contact *		1313616	0					
ANR	1313630	Identifier	t1		1313616	1					
ANR	1313631	ForStatement	for ( t = * list ; t != NULL ; t = t1 )		1313616	1					
ANR	1313632	ForInit	t = * list ;	59:9:1642:1651	1313616	0	True				
ANR	1313633	AssignmentExpression	t = * list		1313616	0		=			
ANR	1313634	Identifier	t		1313616	0					
ANR	1313635	UnaryOperationExpression	* list		1313616	1					
ANR	1313636	UnaryOperator	*		1313616	0					
ANR	1313637	Identifier	list		1313616	1					
ANR	1313638	Condition	t != NULL	59:20:1653:1661	1313616	1	True				
ANR	1313639	EqualityExpression	t != NULL		1313616	0		!=			
ANR	1313640	Identifier	t		1313616	0					
ANR	1313641	Identifier	NULL		1313616	1					
ANR	1313642	AssignmentExpression	t = t1	59:31:1664:1669	1313616	2	True	=			
ANR	1313643	Identifier	t		1313616	0					
ANR	1313644	Identifier	t1		1313616	1					
ANR	1313645	CompoundStatement		4:39:82:82	1313616	3					
ANR	1313646	ExpressionStatement	t1 = t -> link	60:8:1682:1694	1313616	0	True				
ANR	1313647	AssignmentExpression	t1 = t -> link		1313616	0		=			
ANR	1313648	Identifier	t1		1313616	0					
ANR	1313649	PtrMemberAccess	t -> link		1313616	1					
ANR	1313650	Identifier	t		1313616	0					
ANR	1313651	Identifier	link		1313616	1					
ANR	1313652	ExpressionStatement	"gs_free_object ( mem , t , ""free_cont_list"" )"	61:8:1704:1744	1313616	1	True				
ANR	1313653	CallExpression	"gs_free_object ( mem , t , ""free_cont_list"" )"		1313616	0					
ANR	1313654	Callee	gs_free_object		1313616	0					
ANR	1313655	Identifier	gs_free_object		1313616	0					
ANR	1313656	ArgumentList	mem		1313616	1					
ANR	1313657	Argument	mem		1313616	0					
ANR	1313658	Identifier	mem		1313616	0					
ANR	1313659	Argument	t		1313616	1					
ANR	1313660	Identifier	t		1313616	0					
ANR	1313661	Argument	"""free_cont_list"""		1313616	2					
ANR	1313662	PrimaryExpression	"""free_cont_list"""		1313616	0					
ANR	1313663	ExpressionStatement	* list = 0	63:4:1756:1765	1313616	2	True				
ANR	1313664	AssignmentExpression	* list = 0		1313616	0		=			
ANR	1313665	UnaryOperationExpression	* list		1313616	0					
ANR	1313666	UnaryOperator	*		1313616	0					
ANR	1313667	Identifier	list		1313616	1					
ANR	1313668	PrimaryExpression	0		1313616	1					
ANR	1313669	ReturnType	static inline void		1313616	1					
ANR	1313670	Identifier	free_cont_list		1313616	2					
ANR	1313671	ParameterList	"gs_memory_t * mem , gx_san_trap_contact * * list"		1313616	3					
ANR	1313672	Parameter	gs_memory_t * mem	55:15:1543:1558	1313616	0	True				
ANR	1313673	ParameterType	gs_memory_t *		1313616	0					
ANR	1313674	Identifier	mem		1313616	1					
ANR	1313675	Parameter	gx_san_trap_contact * * list	55:33:1561:1586	1313616	1	True				
ANR	1313676	ParameterType	gx_san_trap_contact * *		1313616	0					
ANR	1313677	Identifier	list		1313616	1					
ANR	1313678	CFGEntryNode	ENTRY		1313616		True				
ANR	1313679	CFGExitNode	EXIT		1313616		True				
ANR	1313680	Symbol	NULL		1313616						
ANR	1313681	Symbol	mem		1313616						
ANR	1313682	Symbol	t		1313616						
ANR	1313683	Symbol	* list		1313616						
ANR	1313684	Symbol	list		1313616						
ANR	1313685	Symbol	t1		1313616						
ANR	1313686	Symbol	* t		1313616						
ANR	1313687	Symbol	t -> link		1313616						
ANR	1313688	Function	trap_reserve	66:0:1770:2435							
ANR	1313689	FunctionDef	trap_reserve (gx_device_spot_analyzer * padev)		1313688	0					
ANR	1313690	CompoundStatement		68:0:1843:2435	1313688	0					
ANR	1313691	IdentifierDeclStatement	gx_san_trap * t = padev -> trap_free ;	69:4:1849:1882	1313688	0	True				
ANR	1313692	IdentifierDecl	* t = padev -> trap_free		1313688	0					
ANR	1313693	IdentifierDeclType	gx_san_trap *		1313688	0					
ANR	1313694	Identifier	t		1313688	1					
ANR	1313695	AssignmentExpression	* t = padev -> trap_free		1313688	2		=			
ANR	1313696	Identifier	t		1313688	0					
ANR	1313697	PtrMemberAccess	padev -> trap_free		1313688	1					
ANR	1313698	Identifier	padev		1313688	0					
ANR	1313699	Identifier	trap_free		1313688	1					
ANR	1313700	IfStatement	if ( t != NULL )		1313688	1					
ANR	1313701	Condition	t != NULL	71:8:1893:1901	1313688	0	True				
ANR	1313702	EqualityExpression	t != NULL		1313688	0		!=			
ANR	1313703	Identifier	t		1313688	0					
ANR	1313704	Identifier	NULL		1313688	1					
ANR	1313705	CompoundStatement		4:19:60:60	1313688	1					
ANR	1313706	ExpressionStatement	padev -> trap_free = t -> link	72:8:1914:1940	1313688	0	True				
ANR	1313707	AssignmentExpression	padev -> trap_free = t -> link		1313688	0		=			
ANR	1313708	PtrMemberAccess	padev -> trap_free		1313688	0					
ANR	1313709	Identifier	padev		1313688	0					
ANR	1313710	Identifier	trap_free		1313688	1					
ANR	1313711	PtrMemberAccess	t -> link		1313688	1					
ANR	1313712	Identifier	t		1313688	0					
ANR	1313713	Identifier	link		1313688	1					
ANR	1313714	ElseStatement	else		1313688	0					
ANR	1313715	CompoundStatement		6:11:109:109	1313688	0					
ANR	1313716	IfStatement	if ( padev -> trap_buffer_count > 10000 )		1313688	0					
ANR	1313717	Condition	padev -> trap_buffer_count > 10000	74:12:1967:1998	1313688	0	True				
ANR	1313718	RelationalExpression	padev -> trap_buffer_count > 10000		1313688	0		>			
ANR	1313719	PtrMemberAccess	padev -> trap_buffer_count		1313688	0					
ANR	1313720	Identifier	padev		1313688	0					
ANR	1313721	Identifier	trap_buffer_count		1313688	1					
ANR	1313722	PrimaryExpression	10000		1313688	1					
ANR	1313723	ReturnStatement	return NULL ;	75:12:2013:2024	1313688	1	True				
ANR	1313724	Identifier	NULL		1313688	0					
ANR	1313725	ExpressionStatement	"t = gs_alloc_struct ( padev -> memory , gx_san_trap , & st_san_trap , ""trap_reserve"" )"	76:8:2034:2127	1313688	1	True				
ANR	1313726	AssignmentExpression	"t = gs_alloc_struct ( padev -> memory , gx_san_trap , & st_san_trap , ""trap_reserve"" )"		1313688	0		=			
ANR	1313727	Identifier	t		1313688	0					
ANR	1313728	CallExpression	"gs_alloc_struct ( padev -> memory , gx_san_trap , & st_san_trap , ""trap_reserve"" )"		1313688	1					
ANR	1313729	Callee	gs_alloc_struct		1313688	0					
ANR	1313730	Identifier	gs_alloc_struct		1313688	0					
ANR	1313731	ArgumentList	padev -> memory		1313688	1					
ANR	1313732	Argument	padev -> memory		1313688	0					
ANR	1313733	PtrMemberAccess	padev -> memory		1313688	0					
ANR	1313734	Identifier	padev		1313688	0					
ANR	1313735	Identifier	memory		1313688	1					
ANR	1313736	Argument	gx_san_trap		1313688	1					
ANR	1313737	Identifier	gx_san_trap		1313688	0					
ANR	1313738	Argument	& st_san_trap		1313688	2					
ANR	1313739	UnaryOperationExpression	& st_san_trap		1313688	0					
ANR	1313740	UnaryOperator	&		1313688	0					
ANR	1313741	Identifier	st_san_trap		1313688	1					
ANR	1313742	Argument	"""trap_reserve"""		1313688	3					
ANR	1313743	PrimaryExpression	"""trap_reserve"""		1313688	0					
ANR	1313744	IfStatement	if ( t == NULL )		1313688	2					
ANR	1313745	Condition	t == NULL	78:12:2141:2149	1313688	0	True				
ANR	1313746	EqualityExpression	t == NULL		1313688	0		==			
ANR	1313747	Identifier	t		1313688	0					
ANR	1313748	Identifier	NULL		1313688	1					
ANR	1313749	ReturnStatement	return NULL ;	79:12:2164:2175	1313688	1	True				
ANR	1313750	Identifier	NULL		1313688	0					
ANR	1313751	ExpressionStatement	t -> link = NULL	80:8:2185:2199	1313688	3	True				
ANR	1313752	AssignmentExpression	t -> link = NULL		1313688	0		=			
ANR	1313753	PtrMemberAccess	t -> link		1313688	0					
ANR	1313754	Identifier	t		1313688	0					
ANR	1313755	Identifier	link		1313688	1					
ANR	1313756	Identifier	NULL		1313688	1					
ANR	1313757	IfStatement	if ( padev -> trap_buffer_last == NULL )		1313688	4					
ANR	1313758	Condition	padev -> trap_buffer_last == NULL	81:12:2213:2243	1313688	0	True				
ANR	1313759	EqualityExpression	padev -> trap_buffer_last == NULL		1313688	0		==			
ANR	1313760	PtrMemberAccess	padev -> trap_buffer_last		1313688	0					
ANR	1313761	Identifier	padev		1313688	0					
ANR	1313762	Identifier	trap_buffer_last		1313688	1					
ANR	1313763	Identifier	NULL		1313688	1					
ANR	1313764	ExpressionStatement	padev -> trap_buffer = t	82:12:2258:2280	1313688	1	True				
ANR	1313765	AssignmentExpression	padev -> trap_buffer = t		1313688	0		=			
ANR	1313766	PtrMemberAccess	padev -> trap_buffer		1313688	0					
ANR	1313767	Identifier	padev		1313688	0					
ANR	1313768	Identifier	trap_buffer		1313688	1					
ANR	1313769	Identifier	t		1313688	1					
ANR	1313770	ElseStatement	else		1313688	0					
ANR	1313771	ExpressionStatement	padev -> trap_buffer_last -> link = t	84:12:2307:2340	1313688	0	True				
ANR	1313772	AssignmentExpression	padev -> trap_buffer_last -> link = t		1313688	0		=			
ANR	1313773	PtrMemberAccess	padev -> trap_buffer_last -> link		1313688	0					
ANR	1313774	PtrMemberAccess	padev -> trap_buffer_last		1313688	0					
ANR	1313775	Identifier	padev		1313688	0					
ANR	1313776	Identifier	trap_buffer_last		1313688	1					
ANR	1313777	Identifier	link		1313688	1					
ANR	1313778	Identifier	t		1313688	1					
ANR	1313779	ExpressionStatement	padev -> trap_buffer_last = t	85:8:2350:2377	1313688	5	True				
ANR	1313780	AssignmentExpression	padev -> trap_buffer_last = t		1313688	0		=			
ANR	1313781	PtrMemberAccess	padev -> trap_buffer_last		1313688	0					
ANR	1313782	Identifier	padev		1313688	0					
ANR	1313783	Identifier	trap_buffer_last		1313688	1					
ANR	1313784	Identifier	t		1313688	1					
ANR	1313785	ExpressionStatement	padev -> trap_buffer_count ++	86:8:2387:2413	1313688	6	True				
ANR	1313786	PostIncDecOperationExpression	padev -> trap_buffer_count ++		1313688	0					
ANR	1313787	PtrMemberAccess	padev -> trap_buffer_count		1313688	0					
ANR	1313788	Identifier	padev		1313688	0					
ANR	1313789	Identifier	trap_buffer_count		1313688	1					
ANR	1313790	IncDec	++		1313688	1					
ANR	1313791	ReturnStatement	return t ;	88:4:2425:2433	1313688	2	True				
ANR	1313792	Identifier	t		1313688	0					
ANR	1313793	ReturnType	static inline gx_san_trap *		1313688	1					
ANR	1313794	Identifier	trap_reserve		1313688	2					
ANR	1313795	ParameterList	gx_device_spot_analyzer * padev		1313688	3					
ANR	1313796	Parameter	gx_device_spot_analyzer * padev	67:13:1811:1840	1313688	0	True				
ANR	1313797	ParameterType	gx_device_spot_analyzer *		1313688	0					
ANR	1313798	Identifier	padev		1313688	1					
ANR	1313799	CFGEntryNode	ENTRY		1313688		True				
ANR	1313800	CFGExitNode	EXIT		1313688		True				
ANR	1313801	Symbol	* * padev		1313688						
ANR	1313802	Symbol	NULL		1313688						
ANR	1313803	Symbol	padev -> trap_buffer_last		1313688						
ANR	1313804	Symbol	padev -> trap_buffer_count		1313688						
ANR	1313805	Symbol	gx_san_trap		1313688						
ANR	1313806	Symbol	gs_alloc_struct		1313688						
ANR	1313807	Symbol	& st_san_trap		1313688						
ANR	1313808	Symbol	padev -> memory		1313688						
ANR	1313809	Symbol	* padev -> trap_buffer_last		1313688						
ANR	1313810	Symbol	padev		1313688						
ANR	1313811	Symbol	t		1313688						
ANR	1313812	Symbol	* padev		1313688						
ANR	1313813	Symbol	padev -> trap_buffer_last -> link		1313688						
ANR	1313814	Symbol	padev -> trap_buffer		1313688						
ANR	1313815	Symbol	padev -> trap_free		1313688						
ANR	1313816	Symbol	* t		1313688						
ANR	1313817	Symbol	t -> link		1313688						
ANR	1313818	Function	cont_reserve	91:0:2438:3135							
ANR	1313819	FunctionDef	cont_reserve (gx_device_spot_analyzer * padev)		1313818	0					
ANR	1313820	CompoundStatement		93:0:2519:3135	1313818	0					
ANR	1313821	IdentifierDeclStatement	gx_san_trap_contact * t = padev -> cont_free ;	94:4:2525:2566	1313818	0	True				
ANR	1313822	IdentifierDecl	* t = padev -> cont_free		1313818	0					
ANR	1313823	IdentifierDeclType	gx_san_trap_contact *		1313818	0					
ANR	1313824	Identifier	t		1313818	1					
ANR	1313825	AssignmentExpression	* t = padev -> cont_free		1313818	2		=			
ANR	1313826	Identifier	t		1313818	0					
ANR	1313827	PtrMemberAccess	padev -> cont_free		1313818	1					
ANR	1313828	Identifier	padev		1313818	0					
ANR	1313829	Identifier	cont_free		1313818	1					
ANR	1313830	IfStatement	if ( t != NULL )		1313818	1					
ANR	1313831	Condition	t != NULL	96:8:2577:2585	1313818	0	True				
ANR	1313832	EqualityExpression	t != NULL		1313818	0		!=			
ANR	1313833	Identifier	t		1313818	0					
ANR	1313834	Identifier	NULL		1313818	1					
ANR	1313835	CompoundStatement		4:19:68:68	1313818	1					
ANR	1313836	ExpressionStatement	padev -> cont_free = t -> link	97:8:2598:2624	1313818	0	True				
ANR	1313837	AssignmentExpression	padev -> cont_free = t -> link		1313818	0		=			
ANR	1313838	PtrMemberAccess	padev -> cont_free		1313818	0					
ANR	1313839	Identifier	padev		1313818	0					
ANR	1313840	Identifier	cont_free		1313818	1					
ANR	1313841	PtrMemberAccess	t -> link		1313818	1					
ANR	1313842	Identifier	t		1313818	0					
ANR	1313843	Identifier	link		1313818	1					
ANR	1313844	ElseStatement	else		1313818	0					
ANR	1313845	CompoundStatement		6:11:117:117	1313818	0					
ANR	1313846	IfStatement	if ( padev -> cont_buffer_count > 10000 )		1313818	0					
ANR	1313847	Condition	padev -> cont_buffer_count > 10000	99:12:2651:2682	1313818	0	True				
ANR	1313848	RelationalExpression	padev -> cont_buffer_count > 10000		1313818	0		>			
ANR	1313849	PtrMemberAccess	padev -> cont_buffer_count		1313818	0					
ANR	1313850	Identifier	padev		1313818	0					
ANR	1313851	Identifier	cont_buffer_count		1313818	1					
ANR	1313852	PrimaryExpression	10000		1313818	1					
ANR	1313853	ReturnStatement	return NULL ;	100:12:2697:2708	1313818	1	True				
ANR	1313854	Identifier	NULL		1313818	0					
ANR	1313855	ExpressionStatement	"t = gs_alloc_struct ( padev -> memory , gx_san_trap_contact , & st_san_trap_contact , ""cont_reserve"" )"	101:8:2718:2827	1313818	1	True				
ANR	1313856	AssignmentExpression	"t = gs_alloc_struct ( padev -> memory , gx_san_trap_contact , & st_san_trap_contact , ""cont_reserve"" )"		1313818	0		=			
ANR	1313857	Identifier	t		1313818	0					
ANR	1313858	CallExpression	"gs_alloc_struct ( padev -> memory , gx_san_trap_contact , & st_san_trap_contact , ""cont_reserve"" )"		1313818	1					
ANR	1313859	Callee	gs_alloc_struct		1313818	0					
ANR	1313860	Identifier	gs_alloc_struct		1313818	0					
ANR	1313861	ArgumentList	padev -> memory		1313818	1					
ANR	1313862	Argument	padev -> memory		1313818	0					
ANR	1313863	PtrMemberAccess	padev -> memory		1313818	0					
ANR	1313864	Identifier	padev		1313818	0					
ANR	1313865	Identifier	memory		1313818	1					
ANR	1313866	Argument	gx_san_trap_contact		1313818	1					
ANR	1313867	Identifier	gx_san_trap_contact		1313818	0					
ANR	1313868	Argument	& st_san_trap_contact		1313818	2					
ANR	1313869	UnaryOperationExpression	& st_san_trap_contact		1313818	0					
ANR	1313870	UnaryOperator	&		1313818	0					
ANR	1313871	Identifier	st_san_trap_contact		1313818	1					
ANR	1313872	Argument	"""cont_reserve"""		1313818	3					
ANR	1313873	PrimaryExpression	"""cont_reserve"""		1313818	0					
ANR	1313874	IfStatement	if ( t == NULL )		1313818	2					
ANR	1313875	Condition	t == NULL	103:12:2841:2849	1313818	0	True				
ANR	1313876	EqualityExpression	t == NULL		1313818	0		==			
ANR	1313877	Identifier	t		1313818	0					
ANR	1313878	Identifier	NULL		1313818	1					
ANR	1313879	ReturnStatement	return NULL ;	104:12:2864:2875	1313818	1	True				
ANR	1313880	Identifier	NULL		1313818	0					
ANR	1313881	ExpressionStatement	t -> link = NULL	105:8:2885:2899	1313818	3	True				
ANR	1313882	AssignmentExpression	t -> link = NULL		1313818	0		=			
ANR	1313883	PtrMemberAccess	t -> link		1313818	0					
ANR	1313884	Identifier	t		1313818	0					
ANR	1313885	Identifier	link		1313818	1					
ANR	1313886	Identifier	NULL		1313818	1					
ANR	1313887	IfStatement	if ( padev -> cont_buffer_last == NULL )		1313818	4					
ANR	1313888	Condition	padev -> cont_buffer_last == NULL	106:12:2913:2943	1313818	0	True				
ANR	1313889	EqualityExpression	padev -> cont_buffer_last == NULL		1313818	0		==			
ANR	1313890	PtrMemberAccess	padev -> cont_buffer_last		1313818	0					
ANR	1313891	Identifier	padev		1313818	0					
ANR	1313892	Identifier	cont_buffer_last		1313818	1					
ANR	1313893	Identifier	NULL		1313818	1					
ANR	1313894	ExpressionStatement	padev -> cont_buffer = t	107:12:2958:2980	1313818	1	True				
ANR	1313895	AssignmentExpression	padev -> cont_buffer = t		1313818	0		=			
ANR	1313896	PtrMemberAccess	padev -> cont_buffer		1313818	0					
ANR	1313897	Identifier	padev		1313818	0					
ANR	1313898	Identifier	cont_buffer		1313818	1					
ANR	1313899	Identifier	t		1313818	1					
ANR	1313900	ElseStatement	else		1313818	0					
ANR	1313901	ExpressionStatement	padev -> cont_buffer_last -> link = t	109:12:3007:3040	1313818	0	True				
ANR	1313902	AssignmentExpression	padev -> cont_buffer_last -> link = t		1313818	0		=			
ANR	1313903	PtrMemberAccess	padev -> cont_buffer_last -> link		1313818	0					
ANR	1313904	PtrMemberAccess	padev -> cont_buffer_last		1313818	0					
ANR	1313905	Identifier	padev		1313818	0					
ANR	1313906	Identifier	cont_buffer_last		1313818	1					
ANR	1313907	Identifier	link		1313818	1					
ANR	1313908	Identifier	t		1313818	1					
ANR	1313909	ExpressionStatement	padev -> cont_buffer_last = t	110:8:3050:3077	1313818	5	True				
ANR	1313910	AssignmentExpression	padev -> cont_buffer_last = t		1313818	0		=			
ANR	1313911	PtrMemberAccess	padev -> cont_buffer_last		1313818	0					
ANR	1313912	Identifier	padev		1313818	0					
ANR	1313913	Identifier	cont_buffer_last		1313818	1					
ANR	1313914	Identifier	t		1313818	1					
ANR	1313915	ExpressionStatement	padev -> cont_buffer_count ++	111:8:3087:3113	1313818	6	True				
ANR	1313916	PostIncDecOperationExpression	padev -> cont_buffer_count ++		1313818	0					
ANR	1313917	PtrMemberAccess	padev -> cont_buffer_count		1313818	0					
ANR	1313918	Identifier	padev		1313818	0					
ANR	1313919	Identifier	cont_buffer_count		1313818	1					
ANR	1313920	IncDec	++		1313818	1					
ANR	1313921	ReturnStatement	return t ;	113:4:3125:3133	1313818	2	True				
ANR	1313922	Identifier	t		1313818	0					
ANR	1313923	ReturnType	static inline gx_san_trap_contact *		1313818	1					
ANR	1313924	Identifier	cont_reserve		1313818	2					
ANR	1313925	ParameterList	gx_device_spot_analyzer * padev		1313818	3					
ANR	1313926	Parameter	gx_device_spot_analyzer * padev	92:13:2487:2516	1313818	0	True				
ANR	1313927	ParameterType	gx_device_spot_analyzer *		1313818	0					
ANR	1313928	Identifier	padev		1313818	1					
ANR	1313929	CFGEntryNode	ENTRY		1313818		True				
ANR	1313930	CFGExitNode	EXIT		1313818		True				
ANR	1313931	Symbol	padev -> cont_free		1313818						
ANR	1313932	Symbol	* * padev		1313818						
ANR	1313933	Symbol	padev -> cont_buffer		1313818						
ANR	1313934	Symbol	NULL		1313818						
ANR	1313935	Symbol	padev -> cont_buffer_count		1313818						
ANR	1313936	Symbol	& st_san_trap_contact		1313818						
ANR	1313937	Symbol	gs_alloc_struct		1313818						
ANR	1313938	Symbol	gx_san_trap_contact		1313818						
ANR	1313939	Symbol	padev -> memory		1313818						
ANR	1313940	Symbol	padev -> cont_buffer_last -> link		1313818						
ANR	1313941	Symbol	padev		1313818						
ANR	1313942	Symbol	t		1313818						
ANR	1313943	Symbol	* padev		1313818						
ANR	1313944	Symbol	padev -> cont_buffer_last		1313818						
ANR	1313945	Symbol	* t		1313818						
ANR	1313946	Symbol	t -> link		1313818						
ANR	1313947	Symbol	* padev -> cont_buffer_last		1313818						
ANR	1313948	Function	trap_unreserve	116:0:3138:3408							
ANR	1313949	FunctionDef	"trap_unreserve (gx_device_spot_analyzer * padev , gx_san_trap * t)"		1313948	0					
ANR	1313950	CompoundStatement		118:0:3219:3408	1313948	0					
ANR	1313951	IfStatement	if ( t -> link != padev -> trap_free )		1313948	0					
ANR	1313952	Condition	t -> link != padev -> trap_free	120:8:3271:3297	1313948	0	True				
ANR	1313953	EqualityExpression	t -> link != padev -> trap_free		1313948	0		!=			
ANR	1313954	PtrMemberAccess	t -> link		1313948	0					
ANR	1313955	Identifier	t		1313948	0					
ANR	1313956	Identifier	link		1313948	1					
ANR	1313957	PtrMemberAccess	padev -> trap_free		1313948	1					
ANR	1313958	Identifier	padev		1313948	0					
ANR	1313959	Identifier	trap_free		1313948	1					
ANR	1313960	ExpressionStatement	return_error ( gs_error_unregistered )	121:8:3308:3343	1313948	1	True				
ANR	1313961	CallExpression	return_error ( gs_error_unregistered )		1313948	0					
ANR	1313962	Callee	return_error		1313948	0					
ANR	1313963	Identifier	return_error		1313948	0					
ANR	1313964	ArgumentList	gs_error_unregistered		1313948	1					
ANR	1313965	Argument	gs_error_unregistered		1313948	0					
ANR	1313966	Identifier	gs_error_unregistered		1313948	0					
ANR	1313967	ExpressionStatement	padev -> trap_free = t	122:4:3372:3392	1313948	1	True				
ANR	1313968	AssignmentExpression	padev -> trap_free = t		1313948	0		=			
ANR	1313969	PtrMemberAccess	padev -> trap_free		1313948	0					
ANR	1313970	Identifier	padev		1313948	0					
ANR	1313971	Identifier	trap_free		1313948	1					
ANR	1313972	Identifier	t		1313948	1					
ANR	1313973	ReturnStatement	return 0 ;	123:4:3398:3406	1313948	2	True				
ANR	1313974	PrimaryExpression	0		1313948	0					
ANR	1313975	ReturnType	static inline int		1313948	1					
ANR	1313976	Identifier	trap_unreserve		1313948	2					
ANR	1313977	ParameterList	"gx_device_spot_analyzer * padev , gx_san_trap * t"		1313948	3					
ANR	1313978	Parameter	gx_device_spot_analyzer * padev	117:15:3171:3200	1313948	0	True				
ANR	1313979	ParameterType	gx_device_spot_analyzer *		1313948	0					
ANR	1313980	Identifier	padev		1313948	1					
ANR	1313981	Parameter	gx_san_trap * t	117:47:3203:3216	1313948	1	True				
ANR	1313982	ParameterType	gx_san_trap *		1313948	0					
ANR	1313983	Identifier	t		1313948	1					
ANR	1313984	CFGEntryNode	ENTRY		1313948		True				
ANR	1313985	CFGExitNode	EXIT		1313948		True				
ANR	1313986	Symbol	gs_error_unregistered		1313948						
ANR	1313987	Symbol	padev		1313948						
ANR	1313988	Symbol	t		1313948						
ANR	1313989	Symbol	* padev		1313948						
ANR	1313990	Symbol	padev -> trap_free		1313948						
ANR	1313991	Symbol	* t		1313948						
ANR	1313992	Symbol	t -> link		1313948						
ANR	1313993	Function	cont_unreserve	126:0:3411:3689							
ANR	1313994	FunctionDef	"cont_unreserve (gx_device_spot_analyzer * padev , gx_san_trap_contact * t)"		1313993	0					
ANR	1313995	CompoundStatement		128:0:3500:3689	1313993	0					
ANR	1313996	IfStatement	if ( t -> link != padev -> cont_free )		1313993	0					
ANR	1313997	Condition	t -> link != padev -> cont_free	130:8:3552:3578	1313993	0	True				
ANR	1313998	EqualityExpression	t -> link != padev -> cont_free		1313993	0		!=			
ANR	1313999	PtrMemberAccess	t -> link		1313993	0					
ANR	1314000	Identifier	t		1313993	0					
ANR	1314001	Identifier	link		1313993	1					
ANR	1314002	PtrMemberAccess	padev -> cont_free		1313993	1					
ANR	1314003	Identifier	padev		1313993	0					
ANR	1314004	Identifier	cont_free		1313993	1					
ANR	1314005	ExpressionStatement	return_error ( gs_error_unregistered )	131:8:3589:3624	1313993	1	True				
ANR	1314006	CallExpression	return_error ( gs_error_unregistered )		1313993	0					
ANR	1314007	Callee	return_error		1313993	0					
ANR	1314008	Identifier	return_error		1313993	0					
ANR	1314009	ArgumentList	gs_error_unregistered		1313993	1					
ANR	1314010	Argument	gs_error_unregistered		1313993	0					
ANR	1314011	Identifier	gs_error_unregistered		1313993	0					
ANR	1314012	ExpressionStatement	padev -> cont_free = t	132:4:3653:3673	1313993	1	True				
ANR	1314013	AssignmentExpression	padev -> cont_free = t		1313993	0		=			
ANR	1314014	PtrMemberAccess	padev -> cont_free		1313993	0					
ANR	1314015	Identifier	padev		1313993	0					
ANR	1314016	Identifier	cont_free		1313993	1					
ANR	1314017	Identifier	t		1313993	1					
ANR	1314018	ReturnStatement	return 0 ;	133:4:3679:3687	1313993	2	True				
ANR	1314019	PrimaryExpression	0		1313993	0					
ANR	1314020	ReturnType	static inline int		1313993	1					
ANR	1314021	Identifier	cont_unreserve		1313993	2					
ANR	1314022	ParameterList	"gx_device_spot_analyzer * padev , gx_san_trap_contact * t"		1313993	3					
ANR	1314023	Parameter	gx_device_spot_analyzer * padev	127:15:3444:3473	1313993	0	True				
ANR	1314024	ParameterType	gx_device_spot_analyzer *		1313993	0					
ANR	1314025	Identifier	padev		1313993	1					
ANR	1314026	Parameter	gx_san_trap_contact * t	127:47:3476:3497	1313993	1	True				
ANR	1314027	ParameterType	gx_san_trap_contact *		1313993	0					
ANR	1314028	Identifier	t		1313993	1					
ANR	1314029	CFGEntryNode	ENTRY		1313993		True				
ANR	1314030	CFGExitNode	EXIT		1313993		True				
ANR	1314031	Symbol	padev -> cont_free		1313993						
ANR	1314032	Symbol	gs_error_unregistered		1313993						
ANR	1314033	Symbol	padev		1313993						
ANR	1314034	Symbol	t		1313993						
ANR	1314035	Symbol	* padev		1313993						
ANR	1314036	Symbol	* t		1313993						
ANR	1314037	Symbol	t -> link		1313993						
ANR	1314038	Function	band_list_last	136:0:3692:3874							
ANR	1314039	FunctionDef	band_list_last (const gx_san_trap * list)		1314038	0					
ANR	1314040	CompoundStatement		138:0:3760:3874	1314038	0					
ANR	1314041	ReturnStatement	return list -> prev ;	140:4:3855:3872	1314038	0	True				
ANR	1314042	PtrMemberAccess	list -> prev		1314038	0					
ANR	1314043	Identifier	list		1314038	0					
ANR	1314044	Identifier	prev		1314038	1					
ANR	1314045	ReturnType	static inline gx_san_trap *		1314038	1					
ANR	1314046	Identifier	band_list_last		1314038	2					
ANR	1314047	ParameterList	const gx_san_trap * list		1314038	3					
ANR	1314048	Parameter	const gx_san_trap * list	137:15:3735:3757	1314038	0	True				
ANR	1314049	ParameterType	const gx_san_trap *		1314038	0					
ANR	1314050	Identifier	list		1314038	1					
ANR	1314051	CFGEntryNode	ENTRY		1314038		True				
ANR	1314052	CFGExitNode	EXIT		1314038		True				
ANR	1314053	Symbol	list -> prev		1314038						
ANR	1314054	Symbol	* list		1314038						
ANR	1314055	Symbol	list		1314038						
ANR	1314056	Function	cont_list_last	143:0:3877:4075							
ANR	1314057	FunctionDef	cont_list_last (const gx_san_trap_contact * list)		1314056	0					
ANR	1314058	CompoundStatement		145:0:3961:4075	1314056	0					
ANR	1314059	ReturnStatement	return list -> prev ;	147:4:4056:4073	1314056	0	True				
ANR	1314060	PtrMemberAccess	list -> prev		1314056	0					
ANR	1314061	Identifier	list		1314056	0					
ANR	1314062	Identifier	prev		1314056	1					
ANR	1314063	ReturnType	static inline gx_san_trap_contact *		1314056	1					
ANR	1314064	Identifier	cont_list_last		1314056	2					
ANR	1314065	ParameterList	const gx_san_trap_contact * list		1314056	3					
ANR	1314066	Parameter	const gx_san_trap_contact * list	144:15:3928:3958	1314056	0	True				
ANR	1314067	ParameterType	const gx_san_trap_contact *		1314056	0					
ANR	1314068	Identifier	list		1314056	1					
ANR	1314069	CFGEntryNode	ENTRY		1314056		True				
ANR	1314070	CFGExitNode	EXIT		1314056		True				
ANR	1314071	Symbol	list -> prev		1314056						
ANR	1314072	Symbol	* list		1314056						
ANR	1314073	Symbol	list		1314056						
ANR	1314074	Function	band_list_remove	150:0:4078:4440							
ANR	1314075	FunctionDef	"band_list_remove (gx_san_trap * * list , gx_san_trap * t)"		1314074	0					
ANR	1314076	CompoundStatement		152:0:4150:4440	1314074	0					
ANR	1314077	IfStatement	if ( t -> next == t )		1314074	0					
ANR	1314078	Condition	t -> next == t	154:8:4220:4231	1314074	0	True				
ANR	1314079	EqualityExpression	t -> next == t		1314074	0		==			
ANR	1314080	PtrMemberAccess	t -> next		1314074	0					
ANR	1314081	Identifier	t		1314074	0					
ANR	1314082	Identifier	next		1314074	1					
ANR	1314083	Identifier	t		1314074	1					
ANR	1314084	CompoundStatement		3:22:83:83	1314074	1					
ANR	1314085	ExpressionStatement	* list = NULL	155:8:4244:4256	1314074	0	True				
ANR	1314086	AssignmentExpression	* list = NULL		1314074	0		=			
ANR	1314087	UnaryOperationExpression	* list		1314074	0					
ANR	1314088	UnaryOperator	*		1314074	0					
ANR	1314089	Identifier	list		1314074	1					
ANR	1314090	Identifier	NULL		1314074	1					
ANR	1314091	ElseStatement	else		1314074	0					
ANR	1314092	CompoundStatement		5:11:118:118	1314074	0					
ANR	1314093	IfStatement	if ( * list == t )		1314074	0					
ANR	1314094	Condition	* list == t	157:12:4283:4292	1314074	0	True				
ANR	1314095	EqualityExpression	* list == t		1314074	0		==			
ANR	1314096	UnaryOperationExpression	* list		1314074	0					
ANR	1314097	UnaryOperator	*		1314074	0					
ANR	1314098	Identifier	list		1314074	1					
ANR	1314099	Identifier	t		1314074	1					
ANR	1314100	ExpressionStatement	* list = t -> next	158:12:4307:4322	1314074	1	True				
ANR	1314101	AssignmentExpression	* list = t -> next		1314074	0		=			
ANR	1314102	UnaryOperationExpression	* list		1314074	0					
ANR	1314103	UnaryOperator	*		1314074	0					
ANR	1314104	Identifier	list		1314074	1					
ANR	1314105	PtrMemberAccess	t -> next		1314074	1					
ANR	1314106	Identifier	t		1314074	0					
ANR	1314107	Identifier	next		1314074	1					
ANR	1314108	ExpressionStatement	t -> next -> prev = t -> prev	159:8:4332:4355	1314074	1	True				
ANR	1314109	AssignmentExpression	t -> next -> prev = t -> prev		1314074	0		=			
ANR	1314110	PtrMemberAccess	t -> next -> prev		1314074	0					
ANR	1314111	PtrMemberAccess	t -> next		1314074	0					
ANR	1314112	Identifier	t		1314074	0					
ANR	1314113	Identifier	next		1314074	1					
ANR	1314114	Identifier	prev		1314074	1					
ANR	1314115	PtrMemberAccess	t -> prev		1314074	1					
ANR	1314116	Identifier	t		1314074	0					
ANR	1314117	Identifier	prev		1314074	1					
ANR	1314118	ExpressionStatement	t -> prev -> next = t -> next	160:8:4365:4388	1314074	2	True				
ANR	1314119	AssignmentExpression	t -> prev -> next = t -> next		1314074	0		=			
ANR	1314120	PtrMemberAccess	t -> prev -> next		1314074	0					
ANR	1314121	PtrMemberAccess	t -> prev		1314074	0					
ANR	1314122	Identifier	t		1314074	0					
ANR	1314123	Identifier	prev		1314074	1					
ANR	1314124	Identifier	next		1314074	1					
ANR	1314125	PtrMemberAccess	t -> next		1314074	1					
ANR	1314126	Identifier	t		1314074	0					
ANR	1314127	Identifier	next		1314074	1					
ANR	1314128	ExpressionStatement	t -> next = t -> prev = NULL	162:4:4400:4424	1314074	1	True				
ANR	1314129	AssignmentExpression	t -> next = t -> prev = NULL		1314074	0		=			
ANR	1314130	PtrMemberAccess	t -> next		1314074	0					
ANR	1314131	Identifier	t		1314074	0					
ANR	1314132	Identifier	next		1314074	1					
ANR	1314133	AssignmentExpression	t -> prev = NULL		1314074	1		=			
ANR	1314134	PtrMemberAccess	t -> prev		1314074	0					
ANR	1314135	Identifier	t		1314074	0					
ANR	1314136	Identifier	prev		1314074	1					
ANR	1314137	Identifier	NULL		1314074	1					
ANR	1314138	ReturnType	static inline void		1314074	1					
ANR	1314139	Identifier	band_list_remove		1314074	2					
ANR	1314140	ParameterList	"gx_san_trap * * list , gx_san_trap * t"		1314074	3					
ANR	1314141	Parameter	gx_san_trap * * list	151:17:4114:4131	1314074	0	True				
ANR	1314142	ParameterType	gx_san_trap * *		1314074	0					
ANR	1314143	Identifier	list		1314074	1					
ANR	1314144	Parameter	gx_san_trap * t	151:37:4134:4147	1314074	1	True				
ANR	1314145	ParameterType	gx_san_trap *		1314074	0					
ANR	1314146	Identifier	t		1314074	1					
ANR	1314147	CFGEntryNode	ENTRY		1314074		True				
ANR	1314148	CFGExitNode	EXIT		1314074		True				
ANR	1314149	Symbol	t -> prev		1314074						
ANR	1314150	Symbol	NULL		1314074						
ANR	1314151	Symbol	t		1314074						
ANR	1314152	Symbol	t -> next		1314074						
ANR	1314153	Symbol	* list		1314074						
ANR	1314154	Symbol	t -> next -> prev		1314074						
ANR	1314155	Symbol	* t -> next		1314074						
ANR	1314156	Symbol	* * t		1314074						
ANR	1314157	Symbol	* t -> prev		1314074						
ANR	1314158	Symbol	t -> prev -> next		1314074						
ANR	1314159	Symbol	list		1314074						
ANR	1314160	Symbol	* t		1314074						
ANR	1314161	Function	band_list_insert_last	165:0:4443:4811							
ANR	1314162	FunctionDef	"band_list_insert_last (gx_san_trap * * list , gx_san_trap * t)"		1314161	0					
ANR	1314163	CompoundStatement		167:0:4520:4811	1314161	0					
ANR	1314164	IfStatement	if ( * list == 0 )		1314161	0					
ANR	1314165	Condition	* list == 0	169:8:4564:4573	1314161	0	True				
ANR	1314166	EqualityExpression	* list == 0		1314161	0		==			
ANR	1314167	UnaryOperationExpression	* list		1314161	0					
ANR	1314168	UnaryOperator	*		1314161	0					
ANR	1314169	Identifier	list		1314161	1					
ANR	1314170	PrimaryExpression	0		1314161	1					
ANR	1314171	CompoundStatement		3:20:55:55	1314161	1					
ANR	1314172	ExpressionStatement	* list = t -> next = t -> prev = t	170:8:4586:4615	1314161	0	True				
ANR	1314173	AssignmentExpression	* list = t -> next = t -> prev = t		1314161	0		=			
ANR	1314174	UnaryOperationExpression	* list		1314161	0					
ANR	1314175	UnaryOperator	*		1314161	0					
ANR	1314176	Identifier	list		1314161	1					
ANR	1314177	AssignmentExpression	t -> next = t -> prev = t		1314161	1		=			
ANR	1314178	PtrMemberAccess	t -> next		1314161	0					
ANR	1314179	Identifier	t		1314161	0					
ANR	1314180	Identifier	next		1314161	1					
ANR	1314181	AssignmentExpression	t -> prev = t		1314161	1		=			
ANR	1314182	PtrMemberAccess	t -> prev		1314161	0					
ANR	1314183	Identifier	t		1314161	0					
ANR	1314184	Identifier	prev		1314161	1					
ANR	1314185	Identifier	t		1314161	1					
ANR	1314186	ElseStatement	else		1314161	0					
ANR	1314187	CompoundStatement		7:8:168:194	1314161	0					
ANR	1314188	IdentifierDeclStatement	gx_san_trap * last = band_list_last ( * list ) ;	172:8:4638:4679	1314161	0	True				
ANR	1314189	IdentifierDecl	* last = band_list_last ( * list )		1314161	0					
ANR	1314190	IdentifierDeclType	gx_san_trap *		1314161	0					
ANR	1314191	Identifier	last		1314161	1					
ANR	1314192	AssignmentExpression	* last = band_list_last ( * list )		1314161	2		=			
ANR	1314193	Identifier	last		1314161	0					
ANR	1314194	CallExpression	band_list_last ( * list )		1314161	1					
ANR	1314195	Callee	band_list_last		1314161	0					
ANR	1314196	Identifier	band_list_last		1314161	0					
ANR	1314197	ArgumentList	* list		1314161	1					
ANR	1314198	Argument	* list		1314161	0					
ANR	1314199	UnaryOperationExpression	* list		1314161	0					
ANR	1314200	UnaryOperator	*		1314161	0					
ANR	1314201	Identifier	list		1314161	1					
ANR	1314202	IdentifierDeclStatement	gx_san_trap * first = * list ;	173:8:4689:4715	1314161	1	True				
ANR	1314203	IdentifierDecl	* first = * list		1314161	0					
ANR	1314204	IdentifierDeclType	gx_san_trap *		1314161	0					
ANR	1314205	Identifier	first		1314161	1					
ANR	1314206	AssignmentExpression	* first = * list		1314161	2		=			
ANR	1314207	Identifier	first		1314161	0					
ANR	1314208	UnaryOperationExpression	* list		1314161	1					
ANR	1314209	UnaryOperator	*		1314161	0					
ANR	1314210	Identifier	list		1314161	1					
ANR	1314211	ExpressionStatement	t -> next = first	175:8:4726:4741	1314161	2	True				
ANR	1314212	AssignmentExpression	t -> next = first		1314161	0		=			
ANR	1314213	PtrMemberAccess	t -> next		1314161	0					
ANR	1314214	Identifier	t		1314161	0					
ANR	1314215	Identifier	next		1314161	1					
ANR	1314216	Identifier	first		1314161	1					
ANR	1314217	ExpressionStatement	t -> prev = last	176:8:4751:4765	1314161	3	True				
ANR	1314218	AssignmentExpression	t -> prev = last		1314161	0		=			
ANR	1314219	PtrMemberAccess	t -> prev		1314161	0					
ANR	1314220	Identifier	t		1314161	0					
ANR	1314221	Identifier	prev		1314161	1					
ANR	1314222	Identifier	last		1314161	1					
ANR	1314223	ExpressionStatement	last -> next = first -> prev = t	177:8:4775:4803	1314161	4	True				
ANR	1314224	AssignmentExpression	last -> next = first -> prev = t		1314161	0		=			
ANR	1314225	PtrMemberAccess	last -> next		1314161	0					
ANR	1314226	Identifier	last		1314161	0					
ANR	1314227	Identifier	next		1314161	1					
ANR	1314228	AssignmentExpression	first -> prev = t		1314161	1		=			
ANR	1314229	PtrMemberAccess	first -> prev		1314161	0					
ANR	1314230	Identifier	first		1314161	0					
ANR	1314231	Identifier	prev		1314161	1					
ANR	1314232	Identifier	t		1314161	1					
ANR	1314233	ReturnType	static inline void		1314161	1					
ANR	1314234	Identifier	band_list_insert_last		1314161	2					
ANR	1314235	ParameterList	"gx_san_trap * * list , gx_san_trap * t"		1314161	3					
ANR	1314236	Parameter	gx_san_trap * * list	166:22:4484:4501	1314161	0	True				
ANR	1314237	ParameterType	gx_san_trap * *		1314161	0					
ANR	1314238	Identifier	list		1314161	1					
ANR	1314239	Parameter	gx_san_trap * t	166:42:4504:4517	1314161	1	True				
ANR	1314240	ParameterType	gx_san_trap *		1314161	0					
ANR	1314241	Identifier	t		1314161	1					
ANR	1314242	CFGEntryNode	ENTRY		1314161		True				
ANR	1314243	CFGExitNode	EXIT		1314161		True				
ANR	1314244	Symbol	last -> next		1314161						
ANR	1314245	Symbol	last		1314161						
ANR	1314246	Symbol	list		1314161						
ANR	1314247	Symbol	* last		1314161						
ANR	1314248	Symbol	t -> prev		1314161						
ANR	1314249	Symbol	band_list_last		1314161						
ANR	1314250	Symbol	t		1314161						
ANR	1314251	Symbol	* list		1314161						
ANR	1314252	Symbol	t -> next		1314161						
ANR	1314253	Symbol	* first		1314161						
ANR	1314254	Symbol	first -> prev		1314161						
ANR	1314255	Symbol	* t		1314161						
ANR	1314256	Symbol	first		1314161						
ANR	1314257	Function	cont_list_insert_last	181:0:4814:5214							
ANR	1314258	FunctionDef	"cont_list_insert_last (gx_san_trap_contact * * list , gx_san_trap_contact * t)"		1314257	0					
ANR	1314259	CompoundStatement		183:0:4907:5214	1314257	0					
ANR	1314260	IfStatement	if ( * list == 0 )		1314257	0					
ANR	1314261	Condition	* list == 0	185:8:4951:4960	1314257	0	True				
ANR	1314262	EqualityExpression	* list == 0		1314257	0		==			
ANR	1314263	UnaryOperationExpression	* list		1314257	0					
ANR	1314264	UnaryOperator	*		1314257	0					
ANR	1314265	Identifier	list		1314257	1					
ANR	1314266	PrimaryExpression	0		1314257	1					
ANR	1314267	CompoundStatement		3:20:55:55	1314257	1					
ANR	1314268	ExpressionStatement	* list = t -> next = t -> prev = t	186:8:4973:5002	1314257	0	True				
ANR	1314269	AssignmentExpression	* list = t -> next = t -> prev = t		1314257	0		=			
ANR	1314270	UnaryOperationExpression	* list		1314257	0					
ANR	1314271	UnaryOperator	*		1314257	0					
ANR	1314272	Identifier	list		1314257	1					
ANR	1314273	AssignmentExpression	t -> next = t -> prev = t		1314257	1		=			
ANR	1314274	PtrMemberAccess	t -> next		1314257	0					
ANR	1314275	Identifier	t		1314257	0					
ANR	1314276	Identifier	next		1314257	1					
ANR	1314277	AssignmentExpression	t -> prev = t		1314257	1		=			
ANR	1314278	PtrMemberAccess	t -> prev		1314257	0					
ANR	1314279	Identifier	t		1314257	0					
ANR	1314280	Identifier	prev		1314257	1					
ANR	1314281	Identifier	t		1314257	1					
ANR	1314282	ElseStatement	else		1314257	0					
ANR	1314283	CompoundStatement		7:8:176:210	1314257	0					
ANR	1314284	IdentifierDeclStatement	gx_san_trap_contact * last = cont_list_last ( * list ) ;	188:8:5025:5074	1314257	0	True				
ANR	1314285	IdentifierDecl	* last = cont_list_last ( * list )		1314257	0					
ANR	1314286	IdentifierDeclType	gx_san_trap_contact *		1314257	0					
ANR	1314287	Identifier	last		1314257	1					
ANR	1314288	AssignmentExpression	* last = cont_list_last ( * list )		1314257	2		=			
ANR	1314289	Identifier	last		1314257	0					
ANR	1314290	CallExpression	cont_list_last ( * list )		1314257	1					
ANR	1314291	Callee	cont_list_last		1314257	0					
ANR	1314292	Identifier	cont_list_last		1314257	0					
ANR	1314293	ArgumentList	* list		1314257	1					
ANR	1314294	Argument	* list		1314257	0					
ANR	1314295	UnaryOperationExpression	* list		1314257	0					
ANR	1314296	UnaryOperator	*		1314257	0					
ANR	1314297	Identifier	list		1314257	1					
ANR	1314298	IdentifierDeclStatement	gx_san_trap_contact * first = * list ;	189:8:5084:5118	1314257	1	True				
ANR	1314299	IdentifierDecl	* first = * list		1314257	0					
ANR	1314300	IdentifierDeclType	gx_san_trap_contact *		1314257	0					
ANR	1314301	Identifier	first		1314257	1					
ANR	1314302	AssignmentExpression	* first = * list		1314257	2		=			
ANR	1314303	Identifier	first		1314257	0					
ANR	1314304	UnaryOperationExpression	* list		1314257	1					
ANR	1314305	UnaryOperator	*		1314257	0					
ANR	1314306	Identifier	list		1314257	1					
ANR	1314307	ExpressionStatement	t -> next = first	191:8:5129:5144	1314257	2	True				
ANR	1314308	AssignmentExpression	t -> next = first		1314257	0		=			
ANR	1314309	PtrMemberAccess	t -> next		1314257	0					
ANR	1314310	Identifier	t		1314257	0					
ANR	1314311	Identifier	next		1314257	1					
ANR	1314312	Identifier	first		1314257	1					
ANR	1314313	ExpressionStatement	t -> prev = last	192:8:5154:5168	1314257	3	True				
ANR	1314314	AssignmentExpression	t -> prev = last		1314257	0		=			
ANR	1314315	PtrMemberAccess	t -> prev		1314257	0					
ANR	1314316	Identifier	t		1314257	0					
ANR	1314317	Identifier	prev		1314257	1					
ANR	1314318	Identifier	last		1314257	1					
ANR	1314319	ExpressionStatement	last -> next = first -> prev = t	193:8:5178:5206	1314257	4	True				
ANR	1314320	AssignmentExpression	last -> next = first -> prev = t		1314257	0		=			
ANR	1314321	PtrMemberAccess	last -> next		1314257	0					
ANR	1314322	Identifier	last		1314257	0					
ANR	1314323	Identifier	next		1314257	1					
ANR	1314324	AssignmentExpression	first -> prev = t		1314257	1		=			
ANR	1314325	PtrMemberAccess	first -> prev		1314257	0					
ANR	1314326	Identifier	first		1314257	0					
ANR	1314327	Identifier	prev		1314257	1					
ANR	1314328	Identifier	t		1314257	1					
ANR	1314329	ReturnType	static inline void		1314257	1					
ANR	1314330	Identifier	cont_list_insert_last		1314257	2					
ANR	1314331	ParameterList	"gx_san_trap_contact * * list , gx_san_trap_contact * t"		1314257	3					
ANR	1314332	Parameter	gx_san_trap_contact * * list	182:22:4855:4880	1314257	0	True				
ANR	1314333	ParameterType	gx_san_trap_contact * *		1314257	0					
ANR	1314334	Identifier	list		1314257	1					
ANR	1314335	Parameter	gx_san_trap_contact * t	182:50:4883:4904	1314257	1	True				
ANR	1314336	ParameterType	gx_san_trap_contact *		1314257	0					
ANR	1314337	Identifier	t		1314257	1					
ANR	1314338	CFGEntryNode	ENTRY		1314257		True				
ANR	1314339	CFGExitNode	EXIT		1314257		True				
ANR	1314340	Symbol	last -> next		1314257						
ANR	1314341	Symbol	last		1314257						
ANR	1314342	Symbol	list		1314257						
ANR	1314343	Symbol	* last		1314257						
ANR	1314344	Symbol	t -> prev		1314257						
ANR	1314345	Symbol	t		1314257						
ANR	1314346	Symbol	* list		1314257						
ANR	1314347	Symbol	t -> next		1314257						
ANR	1314348	Symbol	* first		1314257						
ANR	1314349	Symbol	cont_list_last		1314257						
ANR	1314350	Symbol	first -> prev		1314257						
ANR	1314351	Symbol	* t		1314257						
ANR	1314352	Symbol	first		1314257						
ANR	1314353	Function	trap_is_last	197:0:5217:5415							
ANR	1314354	FunctionDef	"trap_is_last (const gx_san_trap * list , const gx_san_trap * t)"		1314353	0					
ANR	1314355	CompoundStatement		199:0:5296:5415	1314353	0					
ANR	1314356	ReturnStatement	return t -> next == list ;	201:4:5391:5413	1314353	0	True				
ANR	1314357	EqualityExpression	t -> next == list		1314353	0		==			
ANR	1314358	PtrMemberAccess	t -> next		1314353	0					
ANR	1314359	Identifier	t		1314353	0					
ANR	1314360	Identifier	next		1314353	1					
ANR	1314361	Identifier	list		1314353	1					
ANR	1314362	ReturnType	static inline bool		1314353	1					
ANR	1314363	Identifier	trap_is_last		1314353	2					
ANR	1314364	ParameterList	"const gx_san_trap * list , const gx_san_trap * t"		1314353	3					
ANR	1314365	Parameter	const gx_san_trap * list	198:13:5249:5271	1314353	0	True				
ANR	1314366	ParameterType	const gx_san_trap *		1314353	0					
ANR	1314367	Identifier	list		1314353	1					
ANR	1314368	Parameter	const gx_san_trap * t	198:38:5274:5293	1314353	1	True				
ANR	1314369	ParameterType	const gx_san_trap *		1314353	0					
ANR	1314370	Identifier	t		1314353	1					
ANR	1314371	CFGEntryNode	ENTRY		1314353		True				
ANR	1314372	CFGExitNode	EXIT		1314353		True				
ANR	1314373	Symbol	t		1314353						
ANR	1314374	Symbol	t -> next		1314353						
ANR	1314375	Symbol	list		1314353						
ANR	1314376	Symbol	* t		1314353						
ANR	1314377	DeclStmt									
ANR	1314378	Decl							const gx_device_spot_analyzer	const gx_device_spot_analyzer	gx_spot_analyzer_device
ANR	1314379	Function	san_open	267:0:6242:6599							
ANR	1314380	FunctionDef	san_open (register gx_device * dev)		1314379	0					
ANR	1314381	CompoundStatement		269:0:6281:6599	1314379	0					
ANR	1314382	Statement	gx_device_spot_analyzer	270:4:6287:6309	1314379	0	True				
ANR	1314383	Statement	*	270:28:6311:6311	1314379	1	True				
ANR	1314384	Statement	const	270:30:6313:6317	1314379	2	True				
ANR	1314385	ExpressionStatement	padev = ( gx_device_spot_analyzer * ) dev	270:36:6319:6357	1314379	3	True				
ANR	1314386	AssignmentExpression	padev = ( gx_device_spot_analyzer * ) dev		1314379	0		=			
ANR	1314387	Identifier	padev		1314379	0					
ANR	1314388	CastExpression	( gx_device_spot_analyzer * ) dev		1314379	1					
ANR	1314389	CastTarget	gx_device_spot_analyzer *		1314379	0					
ANR	1314390	Identifier	dev		1314379	1					
ANR	1314391	ExpressionStatement	padev -> trap_buffer = padev -> trap_buffer_last = NULL	272:4:6364:6415	1314379	4	True				
ANR	1314392	AssignmentExpression	padev -> trap_buffer = padev -> trap_buffer_last = NULL		1314379	0		=			
ANR	1314393	PtrMemberAccess	padev -> trap_buffer		1314379	0					
ANR	1314394	Identifier	padev		1314379	0					
ANR	1314395	Identifier	trap_buffer		1314379	1					
ANR	1314396	AssignmentExpression	padev -> trap_buffer_last = NULL		1314379	1		=			
ANR	1314397	PtrMemberAccess	padev -> trap_buffer_last		1314379	0					
ANR	1314398	Identifier	padev		1314379	0					
ANR	1314399	Identifier	trap_buffer_last		1314379	1					
ANR	1314400	Identifier	NULL		1314379	1					
ANR	1314401	ExpressionStatement	padev -> cont_buffer = padev -> cont_buffer_last = NULL	273:4:6421:6472	1314379	5	True				
ANR	1314402	AssignmentExpression	padev -> cont_buffer = padev -> cont_buffer_last = NULL		1314379	0		=			
ANR	1314403	PtrMemberAccess	padev -> cont_buffer		1314379	0					
ANR	1314404	Identifier	padev		1314379	0					
ANR	1314405	Identifier	cont_buffer		1314379	1					
ANR	1314406	AssignmentExpression	padev -> cont_buffer_last = NULL		1314379	1		=			
ANR	1314407	PtrMemberAccess	padev -> cont_buffer_last		1314379	0					
ANR	1314408	Identifier	padev		1314379	0					
ANR	1314409	Identifier	cont_buffer_last		1314379	1					
ANR	1314410	Identifier	NULL		1314379	1					
ANR	1314411	ExpressionStatement	padev -> trap_buffer_count = 0	274:4:6478:6506	1314379	6	True				
ANR	1314412	AssignmentExpression	padev -> trap_buffer_count = 0		1314379	0		=			
ANR	1314413	PtrMemberAccess	padev -> trap_buffer_count		1314379	0					
ANR	1314414	Identifier	padev		1314379	0					
ANR	1314415	Identifier	trap_buffer_count		1314379	1					
ANR	1314416	PrimaryExpression	0		1314379	1					
ANR	1314417	ExpressionStatement	padev -> cont_buffer_count = 0	275:4:6512:6540	1314379	7	True				
ANR	1314418	AssignmentExpression	padev -> cont_buffer_count = 0		1314379	0		=			
ANR	1314419	PtrMemberAccess	padev -> cont_buffer_count		1314379	0					
ANR	1314420	Identifier	padev		1314379	0					
ANR	1314421	Identifier	cont_buffer_count		1314379	1					
ANR	1314422	PrimaryExpression	0		1314379	1					
ANR	1314423	ExpressionStatement	padev -> xmin = 0	276:4:6546:6561	1314379	8	True				
ANR	1314424	AssignmentExpression	padev -> xmin = 0		1314379	0		=			
ANR	1314425	PtrMemberAccess	padev -> xmin		1314379	0					
ANR	1314426	Identifier	padev		1314379	0					
ANR	1314427	Identifier	xmin		1314379	1					
ANR	1314428	PrimaryExpression	0		1314379	1					
ANR	1314429	ExpressionStatement	padev -> xmax = - 1	277:4:6567:6583	1314379	9	True				
ANR	1314430	AssignmentExpression	padev -> xmax = - 1		1314379	0		=			
ANR	1314431	PtrMemberAccess	padev -> xmax		1314379	0					
ANR	1314432	Identifier	padev		1314379	0					
ANR	1314433	Identifier	xmax		1314379	1					
ANR	1314434	UnaryOperationExpression	- 1		1314379	1					
ANR	1314435	UnaryOperator	-		1314379	0					
ANR	1314436	PrimaryExpression	1		1314379	1					
ANR	1314437	ReturnStatement	return 0 ;	278:4:6589:6597	1314379	10	True				
ANR	1314438	PrimaryExpression	0		1314379	0					
ANR	1314439	ReturnType	int		1314379	1					
ANR	1314440	Identifier	san_open		1314379	2					
ANR	1314441	ParameterList	register gx_device * dev		1314379	3					
ANR	1314442	Parameter	register gx_device * dev	268:9:6255:6278	1314379	0	True				
ANR	1314443	ParameterType	register gx_device *		1314379	0					
ANR	1314444	Identifier	dev		1314379	1					
ANR	1314445	CFGEntryNode	ENTRY		1314379		True				
ANR	1314446	CFGExitNode	EXIT		1314379		True				
ANR	1314447	Symbol	padev -> cont_buffer		1314379						
ANR	1314448	Symbol	padev		1314379						
ANR	1314449	Symbol	NULL		1314379						
ANR	1314450	Symbol	padev -> trap_buffer_last		1314379						
ANR	1314451	Symbol	padev -> cont_buffer_count		1314379						
ANR	1314452	Symbol	dev		1314379						
ANR	1314453	Symbol	padev -> trap_buffer_count		1314379						
ANR	1314454	Symbol	* padev		1314379						
ANR	1314455	Symbol	padev -> cont_buffer_last		1314379						
ANR	1314456	Symbol	padev -> trap_buffer		1314379						
ANR	1314457	Symbol	padev -> xmax		1314379						
ANR	1314458	Symbol	padev -> xmin		1314379						
ANR	1314459	Function	san_close	281:0:6602:7062							
ANR	1314460	FunctionDef	san_close (gx_device * dev)		1314459	0					
ANR	1314461	CompoundStatement		283:0:6640:7062	1314459	0					
ANR	1314462	Statement	gx_device_spot_analyzer	284:4:6646:6668	1314459	0	True				
ANR	1314463	Statement	*	284:28:6670:6670	1314459	1	True				
ANR	1314464	Statement	const	284:30:6672:6676	1314459	2	True				
ANR	1314465	ExpressionStatement	padev = ( gx_device_spot_analyzer * ) dev	284:36:6678:6716	1314459	3	True				
ANR	1314466	AssignmentExpression	padev = ( gx_device_spot_analyzer * ) dev		1314459	0		=			
ANR	1314467	Identifier	padev		1314459	0					
ANR	1314468	CastExpression	( gx_device_spot_analyzer * ) dev		1314459	1					
ANR	1314469	CastTarget	gx_device_spot_analyzer *		1314459	0					
ANR	1314470	Identifier	dev		1314459	1					
ANR	1314471	ExpressionStatement	"free_trap_list ( padev -> memory , & padev -> trap_buffer )"	286:4:6723:6773	1314459	4	True				
ANR	1314472	CallExpression	"free_trap_list ( padev -> memory , & padev -> trap_buffer )"		1314459	0					
ANR	1314473	Callee	free_trap_list		1314459	0					
ANR	1314474	Identifier	free_trap_list		1314459	0					
ANR	1314475	ArgumentList	padev -> memory		1314459	1					
ANR	1314476	Argument	padev -> memory		1314459	0					
ANR	1314477	PtrMemberAccess	padev -> memory		1314459	0					
ANR	1314478	Identifier	padev		1314459	0					
ANR	1314479	Identifier	memory		1314459	1					
ANR	1314480	Argument	& padev -> trap_buffer		1314459	1					
ANR	1314481	UnaryOperationExpression	& padev -> trap_buffer		1314459	0					
ANR	1314482	UnaryOperator	&		1314459	0					
ANR	1314483	PtrMemberAccess	padev -> trap_buffer		1314459	1					
ANR	1314484	Identifier	padev		1314459	0					
ANR	1314485	Identifier	trap_buffer		1314459	1					
ANR	1314486	ExpressionStatement	"free_cont_list ( padev -> memory , & padev -> cont_buffer )"	287:4:6779:6829	1314459	5	True				
ANR	1314487	CallExpression	"free_cont_list ( padev -> memory , & padev -> cont_buffer )"		1314459	0					
ANR	1314488	Callee	free_cont_list		1314459	0					
ANR	1314489	Identifier	free_cont_list		1314459	0					
ANR	1314490	ArgumentList	padev -> memory		1314459	1					
ANR	1314491	Argument	padev -> memory		1314459	0					
ANR	1314492	PtrMemberAccess	padev -> memory		1314459	0					
ANR	1314493	Identifier	padev		1314459	0					
ANR	1314494	Identifier	memory		1314459	1					
ANR	1314495	Argument	& padev -> cont_buffer		1314459	1					
ANR	1314496	UnaryOperationExpression	& padev -> cont_buffer		1314459	0					
ANR	1314497	UnaryOperator	&		1314459	0					
ANR	1314498	PtrMemberAccess	padev -> cont_buffer		1314459	1					
ANR	1314499	Identifier	padev		1314459	0					
ANR	1314500	Identifier	cont_buffer		1314459	1					
ANR	1314501	ExpressionStatement	padev -> trap_buffer_last = NULL	288:4:6835:6865	1314459	6	True				
ANR	1314502	AssignmentExpression	padev -> trap_buffer_last = NULL		1314459	0		=			
ANR	1314503	PtrMemberAccess	padev -> trap_buffer_last		1314459	0					
ANR	1314504	Identifier	padev		1314459	0					
ANR	1314505	Identifier	trap_buffer_last		1314459	1					
ANR	1314506	Identifier	NULL		1314459	1					
ANR	1314507	ExpressionStatement	padev -> cont_buffer_last = NULL	289:4:6871:6901	1314459	7	True				
ANR	1314508	AssignmentExpression	padev -> cont_buffer_last = NULL		1314459	0		=			
ANR	1314509	PtrMemberAccess	padev -> cont_buffer_last		1314459	0					
ANR	1314510	Identifier	padev		1314459	0					
ANR	1314511	Identifier	cont_buffer_last		1314459	1					
ANR	1314512	Identifier	NULL		1314459	1					
ANR	1314513	ExpressionStatement	padev -> trap_free = NULL	290:4:6907:6930	1314459	8	True				
ANR	1314514	AssignmentExpression	padev -> trap_free = NULL		1314459	0		=			
ANR	1314515	PtrMemberAccess	padev -> trap_free		1314459	0					
ANR	1314516	Identifier	padev		1314459	0					
ANR	1314517	Identifier	trap_free		1314459	1					
ANR	1314518	Identifier	NULL		1314459	1					
ANR	1314519	ExpressionStatement	padev -> cont_free = NULL	291:4:6936:6959	1314459	9	True				
ANR	1314520	AssignmentExpression	padev -> cont_free = NULL		1314459	0		=			
ANR	1314521	PtrMemberAccess	padev -> cont_free		1314459	0					
ANR	1314522	Identifier	padev		1314459	0					
ANR	1314523	Identifier	cont_free		1314459	1					
ANR	1314524	Identifier	NULL		1314459	1					
ANR	1314525	ExpressionStatement	padev -> top_band = NULL	292:4:6965:6987	1314459	10	True				
ANR	1314526	AssignmentExpression	padev -> top_band = NULL		1314459	0		=			
ANR	1314527	PtrMemberAccess	padev -> top_band		1314459	0					
ANR	1314528	Identifier	padev		1314459	0					
ANR	1314529	Identifier	top_band		1314459	1					
ANR	1314530	Identifier	NULL		1314459	1					
ANR	1314531	ExpressionStatement	padev -> bot_band = NULL	293:4:6993:7015	1314459	11	True				
ANR	1314532	AssignmentExpression	padev -> bot_band = NULL		1314459	0		=			
ANR	1314533	PtrMemberAccess	padev -> bot_band		1314459	0					
ANR	1314534	Identifier	padev		1314459	0					
ANR	1314535	Identifier	bot_band		1314459	1					
ANR	1314536	Identifier	NULL		1314459	1					
ANR	1314537	ExpressionStatement	padev -> bot_current = NULL	294:4:7021:7046	1314459	12	True				
ANR	1314538	AssignmentExpression	padev -> bot_current = NULL		1314459	0		=			
ANR	1314539	PtrMemberAccess	padev -> bot_current		1314459	0					
ANR	1314540	Identifier	padev		1314459	0					
ANR	1314541	Identifier	bot_current		1314459	1					
ANR	1314542	Identifier	NULL		1314459	1					
ANR	1314543	ReturnStatement	return 0 ;	295:4:7052:7060	1314459	13	True				
ANR	1314544	PrimaryExpression	0		1314459	0					
ANR	1314545	ReturnType	static int		1314459	1					
ANR	1314546	Identifier	san_close		1314459	2					
ANR	1314547	ParameterList	gx_device * dev		1314459	3					
ANR	1314548	Parameter	gx_device * dev	282:10:6623:6637	1314459	0	True				
ANR	1314549	ParameterType	gx_device *		1314459	0					
ANR	1314550	Identifier	dev		1314459	1					
ANR	1314551	CFGEntryNode	ENTRY		1314459		True				
ANR	1314552	CFGExitNode	EXIT		1314459		True				
ANR	1314553	Symbol	padev -> cont_free		1314459						
ANR	1314554	Symbol	NULL		1314459						
ANR	1314555	Symbol	padev -> trap_buffer_last		1314459						
ANR	1314556	Symbol	& padev -> cont_buffer		1314459						
ANR	1314557	Symbol	& padev -> trap_buffer		1314459						
ANR	1314558	Symbol	padev -> top_band		1314459						
ANR	1314559	Symbol	padev -> memory		1314459						
ANR	1314560	Symbol	padev -> bot_band		1314459						
ANR	1314561	Symbol	padev		1314459						
ANR	1314562	Symbol	dev		1314459						
ANR	1314563	Symbol	* padev		1314459						
ANR	1314564	Symbol	padev -> cont_buffer_last		1314459						
ANR	1314565	Symbol	padev -> bot_current		1314459						
ANR	1314566	Symbol	padev -> trap_free		1314459						
ANR	1314567	Function	san_get_clipping_box	298:0:7065:7232							
ANR	1314568	FunctionDef	"san_get_clipping_box (gx_device * dev , gs_fixed_rect * pbox)"		1314567	0					
ANR	1314569	CompoundStatement		300:0:7130:7232	1314567	0					
ANR	1314570	ExpressionStatement	pbox -> p . x = min_int	301:4:7136:7155	1314567	0	True				
ANR	1314571	AssignmentExpression	pbox -> p . x = min_int		1314567	0		=			
ANR	1314572	MemberAccess	pbox -> p . x		1314567	0					
ANR	1314573	PtrMemberAccess	pbox -> p		1314567	0					
ANR	1314574	Identifier	pbox		1314567	0					
ANR	1314575	Identifier	p		1314567	1					
ANR	1314576	Identifier	x		1314567	1					
ANR	1314577	Identifier	min_int		1314567	1					
ANR	1314578	ExpressionStatement	pbox -> p . y = min_int	302:4:7161:7180	1314567	1	True				
ANR	1314579	AssignmentExpression	pbox -> p . y = min_int		1314567	0		=			
ANR	1314580	MemberAccess	pbox -> p . y		1314567	0					
ANR	1314581	PtrMemberAccess	pbox -> p		1314567	0					
ANR	1314582	Identifier	pbox		1314567	0					
ANR	1314583	Identifier	p		1314567	1					
ANR	1314584	Identifier	y		1314567	1					
ANR	1314585	Identifier	min_int		1314567	1					
ANR	1314586	ExpressionStatement	pbox -> q . x = max_int	303:4:7186:7205	1314567	2	True				
ANR	1314587	AssignmentExpression	pbox -> q . x = max_int		1314567	0		=			
ANR	1314588	MemberAccess	pbox -> q . x		1314567	0					
ANR	1314589	PtrMemberAccess	pbox -> q		1314567	0					
ANR	1314590	Identifier	pbox		1314567	0					
ANR	1314591	Identifier	q		1314567	1					
ANR	1314592	Identifier	x		1314567	1					
ANR	1314593	Identifier	max_int		1314567	1					
ANR	1314594	ExpressionStatement	pbox -> q . y = max_int	304:4:7211:7230	1314567	3	True				
ANR	1314595	AssignmentExpression	pbox -> q . y = max_int		1314567	0		=			
ANR	1314596	MemberAccess	pbox -> q . y		1314567	0					
ANR	1314597	PtrMemberAccess	pbox -> q		1314567	0					
ANR	1314598	Identifier	pbox		1314567	0					
ANR	1314599	Identifier	q		1314567	1					
ANR	1314600	Identifier	y		1314567	1					
ANR	1314601	Identifier	max_int		1314567	1					
ANR	1314602	ReturnType	void		1314567	1					
ANR	1314603	Identifier	san_get_clipping_box		1314567	2					
ANR	1314604	ParameterList	"gx_device * dev , gs_fixed_rect * pbox"		1314567	3					
ANR	1314605	Parameter	gx_device * dev	299:21:7091:7105	1314567	0	True				
ANR	1314606	ParameterType	gx_device *		1314567	0					
ANR	1314607	Identifier	dev		1314567	1					
ANR	1314608	Parameter	gs_fixed_rect * pbox	299:38:7108:7127	1314567	1	True				
ANR	1314609	ParameterType	gs_fixed_rect *		1314567	0					
ANR	1314610	Identifier	pbox		1314567	1					
ANR	1314611	CFGEntryNode	ENTRY		1314567		True				
ANR	1314612	CFGExitNode	EXIT		1314567		True				
ANR	1314613	Symbol	max_int		1314567						
ANR	1314614	Symbol	pbox -> q		1314567						
ANR	1314615	Symbol	* pbox		1314567						
ANR	1314616	Symbol	pbox -> p		1314567						
ANR	1314617	Symbol	dev		1314567						
ANR	1314618	Symbol	pbox -> p . x		1314567						
ANR	1314619	Symbol	pbox -> p . y		1314567						
ANR	1314620	Symbol	min_int		1314567						
ANR	1314621	Symbol	pbox -> q . y		1314567						
ANR	1314622	Symbol	pbox		1314567						
ANR	1314623	Symbol	pbox -> q . x		1314567						
ANR	1314624	Function	check_band_list	309:0:7300:7651							
ANR	1314625	FunctionDef	check_band_list (const gx_san_trap * list)		1314624	0					
ANR	1314626	CompoundStatement		311:0:7359:7651	1314624	0					
ANR	1314627	IfStatement	if ( list != NULL )		1314624	0					
ANR	1314628	Condition	list != NULL	313:8:7382:7393	1314624	0	True				
ANR	1314629	EqualityExpression	list != NULL		1314624	0		!=			
ANR	1314630	Identifier	list		1314624	0					
ANR	1314631	Identifier	NULL		1314624	1					
ANR	1314632	CompoundStatement		4:8:46:73	1314624	1					
ANR	1314633	IdentifierDeclStatement	const gx_san_trap * t = list ;	314:8:7406:7433	1314624	0	True				
ANR	1314634	IdentifierDecl	* t = list		1314624	0					
ANR	1314635	IdentifierDeclType	const gx_san_trap *		1314624	0					
ANR	1314636	Identifier	t		1314624	1					
ANR	1314637	AssignmentExpression	* t = list		1314624	2		=			
ANR	1314638	Identifier	list		1314624	0					
ANR	1314639	Identifier	list		1314624	1					
ANR	1314640	WhileStatement	while ( t -> next != list )		1314624	1					
ANR	1314641	Condition	t -> next != list	316:15:7451:7465	1314624	0	True				
ANR	1314642	EqualityExpression	t -> next != list		1314624	0		!=			
ANR	1314643	PtrMemberAccess	t -> next		1314624	0					
ANR	1314644	Identifier	t		1314624	0					
ANR	1314645	Identifier	next		1314624	1					
ANR	1314646	Identifier	list		1314624	1					
ANR	1314647	CompoundStatement		6:32:108:108	1314624	1					
ANR	1314648	IfStatement	if ( t -> xrtop > t -> next -> xltop )		1314624	0					
ANR	1314649	Condition	t -> xrtop > t -> next -> xltop	317:16:7486:7510	1314624	0	True				
ANR	1314650	RelationalExpression	t -> xrtop > t -> next -> xltop		1314624	0		>			
ANR	1314651	PtrMemberAccess	t -> xrtop		1314624	0					
ANR	1314652	Identifier	t		1314624	0					
ANR	1314653	Identifier	xrtop		1314624	1					
ANR	1314654	PtrMemberAccess	t -> next -> xltop		1314624	1					
ANR	1314655	PtrMemberAccess	t -> next		1314624	0					
ANR	1314656	Identifier	t		1314624	0					
ANR	1314657	Identifier	next		1314624	1					
ANR	1314658	Identifier	xltop		1314624	1					
ANR	1314659	ExpressionStatement	return_error ( gs_error_unregistered )	318:16:7529:7564	1314624	1	True				
ANR	1314660	CallExpression	return_error ( gs_error_unregistered )		1314624	0					
ANR	1314661	Callee	return_error		1314624	0					
ANR	1314662	Identifier	return_error		1314624	0					
ANR	1314663	ArgumentList	gs_error_unregistered		1314624	1					
ANR	1314664	Argument	gs_error_unregistered		1314624	0					
ANR	1314665	Identifier	gs_error_unregistered		1314624	0					
ANR	1314666	ExpressionStatement	t = t -> next	319:12:7601:7612	1314624	1	True				
ANR	1314667	AssignmentExpression	t = t -> next		1314624	0		=			
ANR	1314668	Identifier	t		1314624	0					
ANR	1314669	PtrMemberAccess	t -> next		1314624	1					
ANR	1314670	Identifier	t		1314624	0					
ANR	1314671	Identifier	next		1314624	1					
ANR	1314672	ReturnStatement	return 0 ;	323:4:7641:7649	1314624	1	True				
ANR	1314673	PrimaryExpression	0		1314624	0					
ANR	1314674	ReturnType	static inline int		1314624	1					
ANR	1314675	Identifier	check_band_list		1314624	2					
ANR	1314676	ParameterList	const gx_san_trap * list		1314624	3					
ANR	1314677	Parameter	const gx_san_trap * list	310:16:7334:7356	1314624	0	True				
ANR	1314678	ParameterType	const gx_san_trap *		1314624	0					
ANR	1314679	Identifier	list		1314624	1					
ANR	1314680	CFGEntryNode	ENTRY		1314624		True				
ANR	1314681	CFGExitNode	EXIT		1314624		True				
ANR	1314682	Symbol	t -> xrtop		1314624						
ANR	1314683	Symbol	gs_error_unregistered		1314624						
ANR	1314684	Symbol	NULL		1314624						
ANR	1314685	Symbol	t		1314624						
ANR	1314686	Symbol	t -> next		1314624						
ANR	1314687	Symbol	* t -> next		1314624						
ANR	1314688	Symbol	* * t		1314624						
ANR	1314689	Symbol	list		1314624						
ANR	1314690	Symbol	* t		1314624						
ANR	1314691	Symbol	t -> next -> xltop		1314624						
ANR	1314692	Function	try_unite_last_trap	326:0:7654:9358							
ANR	1314693	FunctionDef	"try_unite_last_trap (gx_device_spot_analyzer * padev , fixed xlbot)"		1314692	0					
ANR	1314694	CompoundStatement		328:0:7730:9358	1314692	0					
ANR	1314695	IfStatement	if ( padev -> bot_band != NULL && padev -> top_band != NULL )		1314692	0					
ANR	1314696	Condition	padev -> bot_band != NULL && padev -> top_band != NULL	329:8:7740:7789	1314692	0	True				
ANR	1314697	AndExpression	padev -> bot_band != NULL && padev -> top_band != NULL		1314692	0		&&			
ANR	1314698	EqualityExpression	padev -> bot_band != NULL		1314692	0		!=			
ANR	1314699	PtrMemberAccess	padev -> bot_band		1314692	0					
ANR	1314700	Identifier	padev		1314692	0					
ANR	1314701	Identifier	bot_band		1314692	1					
ANR	1314702	Identifier	NULL		1314692	1					
ANR	1314703	EqualityExpression	padev -> top_band != NULL		1314692	1		!=			
ANR	1314704	PtrMemberAccess	padev -> top_band		1314692	0					
ANR	1314705	Identifier	padev		1314692	0					
ANR	1314706	Identifier	top_band		1314692	1					
ANR	1314707	Identifier	NULL		1314692	1					
ANR	1314708	CompoundStatement		4:8:132:167	1314692	1					
ANR	1314709	IdentifierDeclStatement	gx_san_trap * last = band_list_last ( padev -> top_band ) ;	330:8:7802:7853	1314692	0	True				
ANR	1314710	IdentifierDecl	* last = band_list_last ( padev -> top_band )		1314692	0					
ANR	1314711	IdentifierDeclType	gx_san_trap *		1314692	0					
ANR	1314712	Identifier	last		1314692	1					
ANR	1314713	AssignmentExpression	* last = band_list_last ( padev -> top_band )		1314692	2		=			
ANR	1314714	Identifier	last		1314692	0					
ANR	1314715	CallExpression	band_list_last ( padev -> top_band )		1314692	1					
ANR	1314716	Callee	band_list_last		1314692	0					
ANR	1314717	Identifier	band_list_last		1314692	0					
ANR	1314718	ArgumentList	padev -> top_band		1314692	1					
ANR	1314719	Argument	padev -> top_band		1314692	0					
ANR	1314720	PtrMemberAccess	padev -> top_band		1314692	0					
ANR	1314721	Identifier	padev		1314692	0					
ANR	1314722	Identifier	top_band		1314692	1					
ANR	1314723	IdentifierDeclStatement	gx_san_trap * t = padev -> bot_current ;	331:8:7863:7898	1314692	1	True				
ANR	1314724	IdentifierDecl	* t = padev -> bot_current		1314692	0					
ANR	1314725	IdentifierDeclType	gx_san_trap *		1314692	0					
ANR	1314726	Identifier	t		1314692	1					
ANR	1314727	AssignmentExpression	* t = padev -> bot_current		1314692	2		=			
ANR	1314728	Identifier	t		1314692	0					
ANR	1314729	PtrMemberAccess	padev -> bot_current		1314692	1					
ANR	1314730	Identifier	padev		1314692	0					
ANR	1314731	Identifier	bot_current		1314692	1					
ANR	1314732	IfStatement	if ( t != NULL && t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot ) )		1314692	2					
ANR	1314733	Condition	t != NULL && t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )	334:12:8062:8188	1314692	0	True				
ANR	1314734	AndExpression	t != NULL && t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )		1314692	0		&&			
ANR	1314735	EqualityExpression	t != NULL		1314692	0		!=			
ANR	1314736	Identifier	t		1314692	0					
ANR	1314737	Identifier	NULL		1314692	1					
ANR	1314738	AndExpression	t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )		1314692	1		&&			
ANR	1314739	EqualityExpression	t -> upper != NULL		1314692	0		!=			
ANR	1314740	PtrMemberAccess	t -> upper		1314692	0					
ANR	1314741	Identifier	t		1314692	0					
ANR	1314742	Identifier	upper		1314692	1					
ANR	1314743	Identifier	NULL		1314692	1					
ANR	1314744	AndExpression	last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )		1314692	1		&&			
ANR	1314745	RelationalExpression	last -> xrbot < xlbot		1314692	0		<			
ANR	1314746	PtrMemberAccess	last -> xrbot		1314692	0					
ANR	1314747	Identifier	last		1314692	0					
ANR	1314748	Identifier	xrbot		1314692	1					
ANR	1314749	Identifier	xlbot		1314692	1					
ANR	1314750	OrExpression	last -> prev == last || last -> prev -> xrbot < last -> xlbot		1314692	1		||			
ANR	1314751	EqualityExpression	last -> prev == last		1314692	0		==			
ANR	1314752	PtrMemberAccess	last -> prev		1314692	0					
ANR	1314753	Identifier	last		1314692	0					
ANR	1314754	Identifier	prev		1314692	1					
ANR	1314755	Identifier	last		1314692	1					
ANR	1314756	RelationalExpression	last -> prev -> xrbot < last -> xlbot		1314692	1		<			
ANR	1314757	PtrMemberAccess	last -> prev -> xrbot		1314692	0					
ANR	1314758	PtrMemberAccess	last -> prev		1314692	0					
ANR	1314759	Identifier	last		1314692	0					
ANR	1314760	Identifier	prev		1314692	1					
ANR	1314761	Identifier	xrbot		1314692	1					
ANR	1314762	PtrMemberAccess	last -> xlbot		1314692	1					
ANR	1314763	Identifier	last		1314692	0					
ANR	1314764	Identifier	xlbot		1314692	1					
ANR	1314765	CompoundStatement		8:73:460:460	1314692	1					
ANR	1314766	IfStatement	if ( ( t -> next == NULL || t -> xrtop < t -> next -> xltop ) && ( t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r ) )		1314692	0					
ANR	1314767	Condition	( t -> next == NULL || t -> xrtop < t -> next -> xltop ) && ( t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r )	336:16:8209:8360	1314692	0	True				
ANR	1314768	AndExpression	( t -> next == NULL || t -> xrtop < t -> next -> xltop ) && ( t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r )		1314692	0		&&			
ANR	1314769	OrExpression	t -> next == NULL || t -> xrtop < t -> next -> xltop		1314692	0		||			
ANR	1314770	EqualityExpression	t -> next == NULL		1314692	0		==			
ANR	1314771	PtrMemberAccess	t -> next		1314692	0					
ANR	1314772	Identifier	t		1314692	0					
ANR	1314773	Identifier	next		1314692	1					
ANR	1314774	Identifier	NULL		1314692	1					
ANR	1314775	RelationalExpression	t -> xrtop < t -> next -> xltop		1314692	1		<			
ANR	1314776	PtrMemberAccess	t -> xrtop		1314692	0					
ANR	1314777	Identifier	t		1314692	0					
ANR	1314778	Identifier	xrtop		1314692	1					
ANR	1314779	PtrMemberAccess	t -> next -> xltop		1314692	1					
ANR	1314780	PtrMemberAccess	t -> next		1314692	0					
ANR	1314781	Identifier	t		1314692	0					
ANR	1314782	Identifier	next		1314692	1					
ANR	1314783	Identifier	xltop		1314692	1					
ANR	1314784	AndExpression	t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r		1314692	1		&&			
ANR	1314785	EqualityExpression	t -> upper -> next == t -> upper		1314692	0		==			
ANR	1314786	PtrMemberAccess	t -> upper -> next		1314692	0					
ANR	1314787	PtrMemberAccess	t -> upper		1314692	0					
ANR	1314788	Identifier	t		1314692	0					
ANR	1314789	Identifier	upper		1314692	1					
ANR	1314790	Identifier	next		1314692	1					
ANR	1314791	PtrMemberAccess	t -> upper		1314692	1					
ANR	1314792	Identifier	t		1314692	0					
ANR	1314793	Identifier	upper		1314692	1					
ANR	1314794	AndExpression	t -> l == last -> l && t -> r == last -> r		1314692	1		&&			
ANR	1314795	EqualityExpression	t -> l == last -> l		1314692	0		==			
ANR	1314796	PtrMemberAccess	t -> l		1314692	0					
ANR	1314797	Identifier	t		1314692	0					
ANR	1314798	Identifier	l		1314692	1					
ANR	1314799	PtrMemberAccess	last -> l		1314692	1					
ANR	1314800	Identifier	last		1314692	0					
ANR	1314801	Identifier	l		1314692	1					
ANR	1314802	EqualityExpression	t -> r == last -> r		1314692	1		==			
ANR	1314803	PtrMemberAccess	t -> r		1314692	0					
ANR	1314804	Identifier	t		1314692	0					
ANR	1314805	Identifier	r		1314692	1					
ANR	1314806	PtrMemberAccess	last -> r		1314692	1					
ANR	1314807	Identifier	last		1314692	0					
ANR	1314808	Identifier	r		1314692	1					
ANR	1314809	CompoundStatement		12:16:650:658	1314692	1					
ANR	1314810	IdentifierDeclStatement	int code ;	339:16:8381:8389	1314692	0	True				
ANR	1314811	IdentifierDecl	code		1314692	0					
ANR	1314812	IdentifierDeclType	int		1314692	0					
ANR	1314813	Identifier	code		1314692	1					
ANR	1314814	IfStatement	if ( padev -> bot_current == t )		1314692	1					
ANR	1314815	Condition	padev -> bot_current == t	341:20:8412:8434	1314692	0	True				
ANR	1314816	EqualityExpression	padev -> bot_current == t		1314692	0		==			
ANR	1314817	PtrMemberAccess	padev -> bot_current		1314692	0					
ANR	1314818	Identifier	padev		1314692	0					
ANR	1314819	Identifier	bot_current		1314692	1					
ANR	1314820	Identifier	t		1314692	1					
ANR	1314821	ExpressionStatement	padev -> bot_current = ( t == band_list_last ( padev -> bot_band ) ? NULL : t -> next )	342:20:8457:8533	1314692	1	True				
ANR	1314822	AssignmentExpression	padev -> bot_current = ( t == band_list_last ( padev -> bot_band ) ? NULL : t -> next )		1314692	0		=			
ANR	1314823	PtrMemberAccess	padev -> bot_current		1314692	0					
ANR	1314824	Identifier	padev		1314692	0					
ANR	1314825	Identifier	bot_current		1314692	1					
ANR	1314826	ConditionalExpression	t == band_list_last ( padev -> bot_band ) ? NULL : t -> next		1314692	1					
ANR	1314827	Condition	t == band_list_last ( padev -> bot_band )		1314692	0					
ANR	1314828	EqualityExpression	t == band_list_last ( padev -> bot_band )		1314692	0		==			
ANR	1314829	Identifier	t		1314692	0					
ANR	1314830	CallExpression	band_list_last ( padev -> bot_band )		1314692	1					
ANR	1314831	Callee	band_list_last		1314692	0					
ANR	1314832	Identifier	band_list_last		1314692	0					
ANR	1314833	ArgumentList	padev -> bot_band		1314692	1					
ANR	1314834	Argument	padev -> bot_band		1314692	0					
ANR	1314835	PtrMemberAccess	padev -> bot_band		1314692	0					
ANR	1314836	Identifier	padev		1314692	0					
ANR	1314837	Identifier	bot_band		1314692	1					
ANR	1314838	Identifier	NULL		1314692	1					
ANR	1314839	PtrMemberAccess	t -> next		1314692	2					
ANR	1314840	Identifier	t		1314692	0					
ANR	1314841	Identifier	next		1314692	1					
ANR	1314842	IfStatement	if ( t -> upper -> upper != last )		1314692	2					
ANR	1314843	Condition	t -> upper -> upper != last	343:20:8555:8577	1314692	0	True				
ANR	1314844	EqualityExpression	t -> upper -> upper != last		1314692	0		!=			
ANR	1314845	PtrMemberAccess	t -> upper -> upper		1314692	0					
ANR	1314846	PtrMemberAccess	t -> upper		1314692	0					
ANR	1314847	Identifier	t		1314692	0					
ANR	1314848	Identifier	upper		1314692	1					
ANR	1314849	Identifier	upper		1314692	1					
ANR	1314850	Identifier	last		1314692	1					
ANR	1314851	ExpressionStatement	return_error ( gs_error_unregistered )	344:20:8600:8635	1314692	1	True				
ANR	1314852	CallExpression	return_error ( gs_error_unregistered )		1314692	0					
ANR	1314853	Callee	return_error		1314692	0					
ANR	1314854	Identifier	return_error		1314692	0					
ANR	1314855	ArgumentList	gs_error_unregistered		1314692	1					
ANR	1314856	Argument	gs_error_unregistered		1314692	0					
ANR	1314857	Identifier	gs_error_unregistered		1314692	0					
ANR	1314858	ExpressionStatement	"band_list_remove ( & padev -> top_band , last )"	345:16:8676:8716	1314692	3	True				
ANR	1314859	CallExpression	"band_list_remove ( & padev -> top_band , last )"		1314692	0					
ANR	1314860	Callee	band_list_remove		1314692	0					
ANR	1314861	Identifier	band_list_remove		1314692	0					
ANR	1314862	ArgumentList	& padev -> top_band		1314692	1					
ANR	1314863	Argument	& padev -> top_band		1314692	0					
ANR	1314864	UnaryOperationExpression	& padev -> top_band		1314692	0					
ANR	1314865	UnaryOperator	&		1314692	0					
ANR	1314866	PtrMemberAccess	padev -> top_band		1314692	1					
ANR	1314867	Identifier	padev		1314692	0					
ANR	1314868	Identifier	top_band		1314692	1					
ANR	1314869	Argument	last		1314692	1					
ANR	1314870	Identifier	last		1314692	0					
ANR	1314871	ExpressionStatement	"band_list_remove ( & padev -> bot_band , t )"	346:16:8734:8771	1314692	4	True				
ANR	1314872	CallExpression	"band_list_remove ( & padev -> bot_band , t )"		1314692	0					
ANR	1314873	Callee	band_list_remove		1314692	0					
ANR	1314874	Identifier	band_list_remove		1314692	0					
ANR	1314875	ArgumentList	& padev -> bot_band		1314692	1					
ANR	1314876	Argument	& padev -> bot_band		1314692	0					
ANR	1314877	UnaryOperationExpression	& padev -> bot_band		1314692	0					
ANR	1314878	UnaryOperator	&		1314692	0					
ANR	1314879	PtrMemberAccess	padev -> bot_band		1314692	1					
ANR	1314880	Identifier	padev		1314692	0					
ANR	1314881	Identifier	bot_band		1314692	1					
ANR	1314882	Argument	t		1314692	1					
ANR	1314883	Identifier	t		1314692	0					
ANR	1314884	ExpressionStatement	"band_list_insert_last ( & padev -> top_band , t )"	347:16:8789:8831	1314692	5	True				
ANR	1314885	CallExpression	"band_list_insert_last ( & padev -> top_band , t )"		1314692	0					
ANR	1314886	Callee	band_list_insert_last		1314692	0					
ANR	1314887	Identifier	band_list_insert_last		1314692	0					
ANR	1314888	ArgumentList	& padev -> top_band		1314692	1					
ANR	1314889	Argument	& padev -> top_band		1314692	0					
ANR	1314890	UnaryOperationExpression	& padev -> top_band		1314692	0					
ANR	1314891	UnaryOperator	&		1314692	0					
ANR	1314892	PtrMemberAccess	padev -> top_band		1314692	1					
ANR	1314893	Identifier	padev		1314692	0					
ANR	1314894	Identifier	top_band		1314692	1					
ANR	1314895	Argument	t		1314692	1					
ANR	1314896	Identifier	t		1314692	0					
ANR	1314897	ExpressionStatement	t -> ytop = last -> ytop	348:16:8849:8869	1314692	6	True				
ANR	1314898	AssignmentExpression	t -> ytop = last -> ytop		1314692	0		=			
ANR	1314899	PtrMemberAccess	t -> ytop		1314692	0					
ANR	1314900	Identifier	t		1314692	0					
ANR	1314901	Identifier	ytop		1314692	1					
ANR	1314902	PtrMemberAccess	last -> ytop		1314692	1					
ANR	1314903	Identifier	last		1314692	0					
ANR	1314904	Identifier	ytop		1314692	1					
ANR	1314905	ExpressionStatement	t -> xltop = last -> xltop	349:16:8887:8909	1314692	7	True				
ANR	1314906	AssignmentExpression	t -> xltop = last -> xltop		1314692	0		=			
ANR	1314907	PtrMemberAccess	t -> xltop		1314692	0					
ANR	1314908	Identifier	t		1314692	0					
ANR	1314909	Identifier	xltop		1314692	1					
ANR	1314910	PtrMemberAccess	last -> xltop		1314692	1					
ANR	1314911	Identifier	last		1314692	0					
ANR	1314912	Identifier	xltop		1314692	1					
ANR	1314913	ExpressionStatement	t -> xrtop = last -> xrtop	350:16:8927:8949	1314692	8	True				
ANR	1314914	AssignmentExpression	t -> xrtop = last -> xrtop		1314692	0		=			
ANR	1314915	PtrMemberAccess	t -> xrtop		1314692	0					
ANR	1314916	Identifier	t		1314692	0					
ANR	1314917	Identifier	xrtop		1314692	1					
ANR	1314918	PtrMemberAccess	last -> xrtop		1314692	1					
ANR	1314919	Identifier	last		1314692	0					
ANR	1314920	Identifier	xrtop		1314692	1					
ANR	1314921	ExpressionStatement	t -> rightmost &= last -> rightmost	351:16:8967:8998	1314692	9	True				
ANR	1314922	AssignmentExpression	t -> rightmost &= last -> rightmost		1314692	0		&=			
ANR	1314923	PtrMemberAccess	t -> rightmost		1314692	0					
ANR	1314924	Identifier	t		1314692	0					
ANR	1314925	Identifier	rightmost		1314692	1					
ANR	1314926	PtrMemberAccess	last -> rightmost		1314692	1					
ANR	1314927	Identifier	last		1314692	0					
ANR	1314928	Identifier	rightmost		1314692	1					
ANR	1314929	ExpressionStatement	t -> leftmost &= last -> leftmost	352:16:9016:9045	1314692	10	True				
ANR	1314930	AssignmentExpression	t -> leftmost &= last -> leftmost		1314692	0		&=			
ANR	1314931	PtrMemberAccess	t -> leftmost		1314692	0					
ANR	1314932	Identifier	t		1314692	0					
ANR	1314933	Identifier	leftmost		1314692	1					
ANR	1314934	PtrMemberAccess	last -> leftmost		1314692	1					
ANR	1314935	Identifier	last		1314692	0					
ANR	1314936	Identifier	leftmost		1314692	1					
ANR	1314937	ExpressionStatement	"code = trap_unreserve ( padev , last )"	353:16:9063:9097	1314692	11	True				
ANR	1314938	AssignmentExpression	"code = trap_unreserve ( padev , last )"		1314692	0		=			
ANR	1314939	Identifier	code		1314692	0					
ANR	1314940	CallExpression	"trap_unreserve ( padev , last )"		1314692	1					
ANR	1314941	Callee	trap_unreserve		1314692	0					
ANR	1314942	Identifier	trap_unreserve		1314692	0					
ANR	1314943	ArgumentList	padev		1314692	1					
ANR	1314944	Argument	padev		1314692	0					
ANR	1314945	Identifier	padev		1314692	0					
ANR	1314946	Argument	last		1314692	1					
ANR	1314947	Identifier	last		1314692	0					
ANR	1314948	IfStatement	if ( code < 0 )		1314692	12					
ANR	1314949	Condition	code < 0	354:20:9119:9126	1314692	0	True				
ANR	1314950	RelationalExpression	code < 0		1314692	0		<			
ANR	1314951	Identifier	code		1314692	0					
ANR	1314952	PrimaryExpression	0		1314692	1					
ANR	1314953	ReturnStatement	return code ;	355:20:9149:9160	1314692	1	True				
ANR	1314954	Identifier	code		1314692	0					
ANR	1314955	ExpressionStatement	"code = cont_unreserve ( padev , t -> upper )"	356:16:9178:9216	1314692	13	True				
ANR	1314956	AssignmentExpression	"code = cont_unreserve ( padev , t -> upper )"		1314692	0		=			
ANR	1314957	Identifier	code		1314692	0					
ANR	1314958	CallExpression	"cont_unreserve ( padev , t -> upper )"		1314692	1					
ANR	1314959	Callee	cont_unreserve		1314692	0					
ANR	1314960	Identifier	cont_unreserve		1314692	0					
ANR	1314961	ArgumentList	padev		1314692	1					
ANR	1314962	Argument	padev		1314692	0					
ANR	1314963	Identifier	padev		1314692	0					
ANR	1314964	Argument	t -> upper		1314692	1					
ANR	1314965	PtrMemberAccess	t -> upper		1314692	0					
ANR	1314966	Identifier	t		1314692	0					
ANR	1314967	Identifier	upper		1314692	1					
ANR	1314968	IfStatement	if ( code < 0 )		1314692	14					
ANR	1314969	Condition	code < 0	357:20:9238:9245	1314692	0	True				
ANR	1314970	RelationalExpression	code < 0		1314692	0		<			
ANR	1314971	Identifier	code		1314692	0					
ANR	1314972	PrimaryExpression	0		1314692	1					
ANR	1314973	ReturnStatement	return code ;	358:20:9268:9279	1314692	1	True				
ANR	1314974	Identifier	code		1314692	0					
ANR	1314975	ExpressionStatement	t -> upper = NULL	359:16:9297:9312	1314692	15	True				
ANR	1314976	AssignmentExpression	t -> upper = NULL		1314692	0		=			
ANR	1314977	PtrMemberAccess	t -> upper		1314692	0					
ANR	1314978	Identifier	t		1314692	0					
ANR	1314979	Identifier	upper		1314692	1					
ANR	1314980	Identifier	NULL		1314692	1					
ANR	1314981	ReturnStatement	return 0 ;	363:4:9348:9356	1314692	1	True				
ANR	1314982	PrimaryExpression	0		1314692	0					
ANR	1314983	ReturnType	static int		1314692	1					
ANR	1314984	Identifier	try_unite_last_trap		1314692	2					
ANR	1314985	ParameterList	"gx_device_spot_analyzer * padev , fixed xlbot"		1314692	3					
ANR	1314986	Parameter	gx_device_spot_analyzer * padev	327:20:7685:7714	1314692	0	True				
ANR	1314987	ParameterType	gx_device_spot_analyzer *		1314692	0					
ANR	1314988	Identifier	padev		1314692	1					
ANR	1314989	Parameter	fixed xlbot	327:52:7717:7727	1314692	1	True				
ANR	1314990	ParameterType	fixed		1314692	0					
ANR	1314991	Identifier	xlbot		1314692	1					
ANR	1314992	CFGEntryNode	ENTRY		1314692		True				
ANR	1314993	CFGExitNode	EXIT		1314692		True				
ANR	1314994	Symbol	t -> xrtop		1314692						
ANR	1314995	Symbol	cont_unreserve		1314692						
ANR	1314996	Symbol	last -> xrbot		1314692						
ANR	1314997	Symbol	gs_error_unregistered		1314692						
ANR	1314998	Symbol	& padev -> top_band		1314692						
ANR	1314999	Symbol	last -> prev		1314692						
ANR	1315000	Symbol	code		1314692						
ANR	1315001	Symbol	padev -> top_band		1314692						
ANR	1315002	Symbol	last -> prev -> xrbot		1314692						
ANR	1315003	Symbol	last -> xlbot		1314692						
ANR	1315004	Symbol	t -> xltop		1314692						
ANR	1315005	Symbol	* last -> prev		1314692						
ANR	1315006	Symbol	t -> upper -> next		1314692						
ANR	1315007	Symbol	trap_unreserve		1314692						
ANR	1315008	Symbol	padev		1314692						
ANR	1315009	Symbol	last -> xltop		1314692						
ANR	1315010	Symbol	last -> rightmost		1314692						
ANR	1315011	Symbol	* * t		1314692						
ANR	1315012	Symbol	* * last		1314692						
ANR	1315013	Symbol	last -> xrtop		1314692						
ANR	1315014	Symbol	xlbot		1314692						
ANR	1315015	Symbol	t -> upper -> upper		1314692						
ANR	1315016	Symbol	last -> l		1314692						
ANR	1315017	Symbol	NULL		1314692						
ANR	1315018	Symbol	t -> l		1314692						
ANR	1315019	Symbol	last		1314692						
ANR	1315020	Symbol	t -> r		1314692						
ANR	1315021	Symbol	last -> r		1314692						
ANR	1315022	Symbol	last -> leftmost		1314692						
ANR	1315023	Symbol	t -> rightmost		1314692						
ANR	1315024	Symbol	* last		1314692						
ANR	1315025	Symbol	padev -> bot_band		1314692						
ANR	1315026	Symbol	band_list_last		1314692						
ANR	1315027	Symbol	t -> upper		1314692						
ANR	1315028	Symbol	t		1314692						
ANR	1315029	Symbol	t -> next		1314692						
ANR	1315030	Symbol	* padev		1314692						
ANR	1315031	Symbol	* t -> next		1314692						
ANR	1315032	Symbol	t -> ytop		1314692						
ANR	1315033	Symbol	padev -> bot_current		1314692						
ANR	1315034	Symbol	t -> leftmost		1314692						
ANR	1315035	Symbol	* t -> upper		1314692						
ANR	1315036	Symbol	* t		1314692						
ANR	1315037	Symbol	last -> ytop		1314692						
ANR	1315038	Symbol	t -> next -> xltop		1314692						
ANR	1315039	Symbol	& padev -> bot_band		1314692						
ANR	1315040	Function	trap_area	366:0:9361:9500							
ANR	1315041	FunctionDef	trap_area (gx_san_trap * t)		1315040	0					
ANR	1315042	CompoundStatement		368:0:9408:9500	1315040	0					
ANR	1315043	ReturnStatement	return ( double ) ( t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop ) * ( t -> ytop - t -> ybot ) / 2 ;	369:4:9414:9498	1315040	0	True				
ANR	1315044	MultiplicativeExpression	( double ) ( t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop ) * ( t -> ytop - t -> ybot ) / 2		1315040	0		*			
ANR	1315045	CastExpression	( double ) ( t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop )		1315040	0					
ANR	1315046	CastTarget	double		1315040	0					
ANR	1315047	AdditiveExpression	t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop		1315040	1		-			
ANR	1315048	PtrMemberAccess	t -> xrbot		1315040	0					
ANR	1315049	Identifier	t		1315040	0					
ANR	1315050	Identifier	xrbot		1315040	1					
ANR	1315051	AdditiveExpression	t -> xlbot + t -> xrtop - t -> xltop		1315040	1		+			
ANR	1315052	PtrMemberAccess	t -> xlbot		1315040	0					
ANR	1315053	Identifier	t		1315040	0					
ANR	1315054	Identifier	xlbot		1315040	1					
ANR	1315055	AdditiveExpression	t -> xrtop - t -> xltop		1315040	1		-			
ANR	1315056	PtrMemberAccess	t -> xrtop		1315040	0					
ANR	1315057	Identifier	t		1315040	0					
ANR	1315058	Identifier	xrtop		1315040	1					
ANR	1315059	PtrMemberAccess	t -> xltop		1315040	1					
ANR	1315060	Identifier	t		1315040	0					
ANR	1315061	Identifier	xltop		1315040	1					
ANR	1315062	MultiplicativeExpression	( t -> ytop - t -> ybot ) / 2		1315040	1		/			
ANR	1315063	AdditiveExpression	t -> ytop - t -> ybot		1315040	0		-			
ANR	1315064	PtrMemberAccess	t -> ytop		1315040	0					
ANR	1315065	Identifier	t		1315040	0					
ANR	1315066	Identifier	ytop		1315040	1					
ANR	1315067	PtrMemberAccess	t -> ybot		1315040	1					
ANR	1315068	Identifier	t		1315040	0					
ANR	1315069	Identifier	ybot		1315040	1					
ANR	1315070	PrimaryExpression	2		1315040	1					
ANR	1315071	ReturnType	static inline double		1315040	1					
ANR	1315072	Identifier	trap_area		1315040	2					
ANR	1315073	ParameterList	gx_san_trap * t		1315040	3					
ANR	1315074	Parameter	gx_san_trap * t	367:10:9392:9405	1315040	0	True				
ANR	1315075	ParameterType	gx_san_trap *		1315040	0					
ANR	1315076	Identifier	t		1315040	1					
ANR	1315077	CFGEntryNode	ENTRY		1315040		True				
ANR	1315078	CFGExitNode	EXIT		1315040		True				
ANR	1315079	Symbol	t -> xrtop		1315040						
ANR	1315080	Symbol	t		1315040						
ANR	1315081	Symbol	t -> xlbot		1315040						
ANR	1315082	Symbol	t -> ytop		1315040						
ANR	1315083	Symbol	t -> ybot		1315040						
ANR	1315084	Symbol	t -> xltop		1315040						
ANR	1315085	Symbol	t -> xrbot		1315040						
ANR	1315086	Symbol	* t		1315040						
ANR	1315087	Function	trap_axis_length	372:0:9503:9733							
ANR	1315088	FunctionDef	trap_axis_length (gx_san_trap * t)		1315087	0					
ANR	1315089	CompoundStatement		374:0:9557:9733	1315087	0					
ANR	1315090	IdentifierDeclStatement	double xbot = ( t -> xlbot + t -> xrbot ) / 2.0 ;	375:4:9563:9604	1315087	0	True				
ANR	1315091	IdentifierDecl	xbot = ( t -> xlbot + t -> xrbot ) / 2.0		1315087	0					
ANR	1315092	IdentifierDeclType	double		1315087	0					
ANR	1315093	Identifier	xbot		1315087	1					
ANR	1315094	AssignmentExpression	xbot = ( t -> xlbot + t -> xrbot ) / 2.0		1315087	2		=			
ANR	1315095	Identifier	xbot		1315087	0					
ANR	1315096	MultiplicativeExpression	( t -> xlbot + t -> xrbot ) / 2.0		1315087	1		/			
ANR	1315097	AdditiveExpression	t -> xlbot + t -> xrbot		1315087	0		+			
ANR	1315098	PtrMemberAccess	t -> xlbot		1315087	0					
ANR	1315099	Identifier	t		1315087	0					
ANR	1315100	Identifier	xlbot		1315087	1					
ANR	1315101	PtrMemberAccess	t -> xrbot		1315087	1					
ANR	1315102	Identifier	t		1315087	0					
ANR	1315103	Identifier	xrbot		1315087	1					
ANR	1315104	PrimaryExpression	2.0		1315087	1					
ANR	1315105	IdentifierDeclStatement	double xtop = ( t -> xltop + t -> xrtop ) / 2.0 ;	376:4:9610:9651	1315087	1	True				
ANR	1315106	IdentifierDecl	xtop = ( t -> xltop + t -> xrtop ) / 2.0		1315087	0					
ANR	1315107	IdentifierDeclType	double		1315087	0					
ANR	1315108	Identifier	xtop		1315087	1					
ANR	1315109	AssignmentExpression	xtop = ( t -> xltop + t -> xrtop ) / 2.0		1315087	2		=			
ANR	1315110	Identifier	xtop		1315087	0					
ANR	1315111	MultiplicativeExpression	( t -> xltop + t -> xrtop ) / 2.0		1315087	1		/			
ANR	1315112	AdditiveExpression	t -> xltop + t -> xrtop		1315087	0		+			
ANR	1315113	PtrMemberAccess	t -> xltop		1315087	0					
ANR	1315114	Identifier	t		1315087	0					
ANR	1315115	Identifier	xltop		1315087	1					
ANR	1315116	PtrMemberAccess	t -> xrtop		1315087	1					
ANR	1315117	Identifier	t		1315087	0					
ANR	1315118	Identifier	xrtop		1315087	1					
ANR	1315119	PrimaryExpression	2.0		1315087	1					
ANR	1315120	ReturnStatement	"return hypot ( xtop - xbot , ( double ) t -> ytop - t -> ybot ) ;"	378:4:9658:9710	1315087	2	True				
ANR	1315121	CallExpression	"hypot ( xtop - xbot , ( double ) t -> ytop - t -> ybot )"		1315087	0					
ANR	1315122	Callee	hypot		1315087	0					
ANR	1315123	Identifier	hypot		1315087	0					
ANR	1315124	ArgumentList	xtop - xbot		1315087	1					
ANR	1315125	Argument	xtop - xbot		1315087	0					
ANR	1315126	AdditiveExpression	xtop - xbot		1315087	0		-			
ANR	1315127	Identifier	xtop		1315087	0					
ANR	1315128	Identifier	xbot		1315087	1					
ANR	1315129	Argument	( double ) t -> ytop - t -> ybot		1315087	1					
ANR	1315130	AdditiveExpression	( double ) t -> ytop - t -> ybot		1315087	0		-			
ANR	1315131	CastExpression	( double ) t -> ytop		1315087	0					
ANR	1315132	CastTarget	double		1315087	0					
ANR	1315133	PtrMemberAccess	t -> ytop		1315087	1					
ANR	1315134	Identifier	t		1315087	0					
ANR	1315135	Identifier	ytop		1315087	1					
ANR	1315136	PtrMemberAccess	t -> ybot		1315087	1					
ANR	1315137	Identifier	t		1315087	0					
ANR	1315138	Identifier	ybot		1315087	1					
ANR	1315139	ReturnType	static inline double		1315087	1					
ANR	1315140	Identifier	trap_axis_length		1315087	2					
ANR	1315141	ParameterList	gx_san_trap * t		1315087	3					
ANR	1315142	Parameter	gx_san_trap * t	373:17:9541:9554	1315087	0	True				
ANR	1315143	ParameterType	gx_san_trap *		1315087	0					
ANR	1315144	Identifier	t		1315087	1					
ANR	1315145	CFGEntryNode	ENTRY		1315087		True				
ANR	1315146	CFGExitNode	EXIT		1315087		True				
ANR	1315147	Symbol	t -> xrtop		1315087						
ANR	1315148	Symbol	t		1315087						
ANR	1315149	Symbol	t -> xlbot		1315087						
ANR	1315150	Symbol	xtop		1315087						
ANR	1315151	Symbol	hypot		1315087						
ANR	1315152	Symbol	xbot		1315087						
ANR	1315153	Symbol	t -> ytop		1315087						
ANR	1315154	Symbol	t -> ybot		1315087						
ANR	1315155	Symbol	t -> xltop		1315087						
ANR	1315156	Symbol	t -> xrbot		1315087						
ANR	1315157	Symbol	* t		1315087						
ANR	1315158	Function	is_stem_boundaries	381:0:9736:10340							
ANR	1315159	FunctionDef	"is_stem_boundaries (gx_san_trap * t , int side_mask)"		1315158	0					
ANR	1315160	CompoundStatement		383:0:9805:10340	1315158	0					
ANR	1315161	IdentifierDeclStatement	"double dx , norm , cosine ;"	384:4:9811:9834	1315158	0	True				
ANR	1315162	IdentifierDecl	dx		1315158	0					
ANR	1315163	IdentifierDeclType	double		1315158	0					
ANR	1315164	Identifier	dx		1315158	1					
ANR	1315165	IdentifierDecl	norm		1315158	1					
ANR	1315166	IdentifierDeclType	double		1315158	0					
ANR	1315167	Identifier	norm		1315158	1					
ANR	1315168	IdentifierDecl	cosine		1315158	2					
ANR	1315169	IdentifierDeclType	double		1315158	0					
ANR	1315170	Identifier	cosine		1315158	1					
ANR	1315171	IdentifierDeclStatement	const double cosine_threshold = 0.9 ;	385:4:9840:9875	1315158	1	True				
ANR	1315172	IdentifierDecl	cosine_threshold = 0.9		1315158	0					
ANR	1315173	IdentifierDeclType	const double		1315158	0					
ANR	1315174	Identifier	cosine_threshold		1315158	1					
ANR	1315175	AssignmentExpression	cosine_threshold = 0.9		1315158	2		=			
ANR	1315176	Identifier	cosine_threshold		1315158	0					
ANR	1315177	PrimaryExpression	0.9		1315158	1					
ANR	1315178	IdentifierDeclStatement	double dy = t -> ytop - t -> ybot ;	386:4:9897:9926	1315158	2	True				
ANR	1315179	IdentifierDecl	dy = t -> ytop - t -> ybot		1315158	0					
ANR	1315180	IdentifierDeclType	double		1315158	0					
ANR	1315181	Identifier	dy		1315158	1					
ANR	1315182	AssignmentExpression	dy = t -> ytop - t -> ybot		1315158	2		=			
ANR	1315183	Identifier	dy		1315158	0					
ANR	1315184	AdditiveExpression	t -> ytop - t -> ybot		1315158	1		-			
ANR	1315185	PtrMemberAccess	t -> ytop		1315158	0					
ANR	1315186	Identifier	t		1315158	0					
ANR	1315187	Identifier	ytop		1315158	1					
ANR	1315188	PtrMemberAccess	t -> ybot		1315158	1					
ANR	1315189	Identifier	t		1315158	0					
ANR	1315190	Identifier	ybot		1315158	1					
ANR	1315191	IfStatement	if ( side_mask & 1 )		1315158	3					
ANR	1315192	Condition	side_mask & 1	388:8:9937:9949	1315158	0	True				
ANR	1315193	BitAndExpression	side_mask & 1		1315158	0		&			
ANR	1315194	Identifier	side_mask		1315158	0					
ANR	1315195	PrimaryExpression	1		1315158	1					
ANR	1315196	CompoundStatement		6:23:146:146	1315158	1					
ANR	1315197	ExpressionStatement	dx = t -> xltop - t -> xlbot	389:8:9962:9986	1315158	0	True				
ANR	1315198	AssignmentExpression	dx = t -> xltop - t -> xlbot		1315158	0		=			
ANR	1315199	Identifier	dx		1315158	0					
ANR	1315200	AdditiveExpression	t -> xltop - t -> xlbot		1315158	1		-			
ANR	1315201	PtrMemberAccess	t -> xltop		1315158	0					
ANR	1315202	Identifier	t		1315158	0					
ANR	1315203	Identifier	xltop		1315158	1					
ANR	1315204	PtrMemberAccess	t -> xlbot		1315158	1					
ANR	1315205	Identifier	t		1315158	0					
ANR	1315206	Identifier	xlbot		1315158	1					
ANR	1315207	ExpressionStatement	"norm = hypot ( dx , dy )"	390:8:9996:10016	1315158	1	True				
ANR	1315208	AssignmentExpression	"norm = hypot ( dx , dy )"		1315158	0		=			
ANR	1315209	Identifier	norm		1315158	0					
ANR	1315210	CallExpression	"hypot ( dx , dy )"		1315158	1					
ANR	1315211	Callee	hypot		1315158	0					
ANR	1315212	Identifier	hypot		1315158	0					
ANR	1315213	ArgumentList	dx		1315158	1					
ANR	1315214	Argument	dx		1315158	0					
ANR	1315215	Identifier	dx		1315158	0					
ANR	1315216	Argument	dy		1315158	1					
ANR	1315217	Identifier	dy		1315158	0					
ANR	1315218	ExpressionStatement	cosine = dx / norm	391:8:10026:10044	1315158	2	True				
ANR	1315219	AssignmentExpression	cosine = dx / norm		1315158	0		=			
ANR	1315220	Identifier	cosine		1315158	0					
ANR	1315221	MultiplicativeExpression	dx / norm		1315158	1		/			
ANR	1315222	Identifier	dx		1315158	0					
ANR	1315223	Identifier	norm		1315158	1					
ANR	1315224	IfStatement	if ( any_abs ( cosine ) > cosine_threshold )		1315158	3					
ANR	1315225	Condition	any_abs ( cosine ) > cosine_threshold	392:12:10058:10091	1315158	0	True				
ANR	1315226	RelationalExpression	any_abs ( cosine ) > cosine_threshold		1315158	0		>			
ANR	1315227	CallExpression	any_abs ( cosine )		1315158	0					
ANR	1315228	Callee	any_abs		1315158	0					
ANR	1315229	Identifier	any_abs		1315158	0					
ANR	1315230	ArgumentList	cosine		1315158	1					
ANR	1315231	Argument	cosine		1315158	0					
ANR	1315232	Identifier	cosine		1315158	0					
ANR	1315233	Identifier	cosine_threshold		1315158	1					
ANR	1315234	ReturnStatement	return false ;	393:12:10106:10118	1315158	1	True				
ANR	1315235	Identifier	false		1315158	0					
ANR	1315236	IfStatement	if ( side_mask & 2 )		1315158	4					
ANR	1315237	Condition	side_mask & 2	395:8:10134:10146	1315158	0	True				
ANR	1315238	BitAndExpression	side_mask & 2		1315158	0		&			
ANR	1315239	Identifier	side_mask		1315158	0					
ANR	1315240	PrimaryExpression	2		1315158	1					
ANR	1315241	CompoundStatement		13:23:343:343	1315158	1					
ANR	1315242	ExpressionStatement	dx = t -> xrtop - t -> xrbot	396:8:10159:10183	1315158	0	True				
ANR	1315243	AssignmentExpression	dx = t -> xrtop - t -> xrbot		1315158	0		=			
ANR	1315244	Identifier	dx		1315158	0					
ANR	1315245	AdditiveExpression	t -> xrtop - t -> xrbot		1315158	1		-			
ANR	1315246	PtrMemberAccess	t -> xrtop		1315158	0					
ANR	1315247	Identifier	t		1315158	0					
ANR	1315248	Identifier	xrtop		1315158	1					
ANR	1315249	PtrMemberAccess	t -> xrbot		1315158	1					
ANR	1315250	Identifier	t		1315158	0					
ANR	1315251	Identifier	xrbot		1315158	1					
ANR	1315252	ExpressionStatement	"norm = hypot ( dx , dy )"	397:8:10193:10213	1315158	1	True				
ANR	1315253	AssignmentExpression	"norm = hypot ( dx , dy )"		1315158	0		=			
ANR	1315254	Identifier	norm		1315158	0					
ANR	1315255	CallExpression	"hypot ( dx , dy )"		1315158	1					
ANR	1315256	Callee	hypot		1315158	0					
ANR	1315257	Identifier	hypot		1315158	0					
ANR	1315258	ArgumentList	dx		1315158	1					
ANR	1315259	Argument	dx		1315158	0					
ANR	1315260	Identifier	dx		1315158	0					
ANR	1315261	Argument	dy		1315158	1					
ANR	1315262	Identifier	dy		1315158	0					
ANR	1315263	ExpressionStatement	cosine = dx / norm	398:8:10223:10241	1315158	2	True				
ANR	1315264	AssignmentExpression	cosine = dx / norm		1315158	0		=			
ANR	1315265	Identifier	cosine		1315158	0					
ANR	1315266	MultiplicativeExpression	dx / norm		1315158	1		/			
ANR	1315267	Identifier	dx		1315158	0					
ANR	1315268	Identifier	norm		1315158	1					
ANR	1315269	IfStatement	if ( any_abs ( cosine ) > cosine_threshold )		1315158	3					
ANR	1315270	Condition	any_abs ( cosine ) > cosine_threshold	399:12:10255:10288	1315158	0	True				
ANR	1315271	RelationalExpression	any_abs ( cosine ) > cosine_threshold		1315158	0		>			
ANR	1315272	CallExpression	any_abs ( cosine )		1315158	0					
ANR	1315273	Callee	any_abs		1315158	0					
ANR	1315274	Identifier	any_abs		1315158	0					
ANR	1315275	ArgumentList	cosine		1315158	1					
ANR	1315276	Argument	cosine		1315158	0					
ANR	1315277	Identifier	cosine		1315158	0					
ANR	1315278	Identifier	cosine_threshold		1315158	1					
ANR	1315279	ReturnStatement	return false ;	400:12:10303:10315	1315158	1	True				
ANR	1315280	Identifier	false		1315158	0					
ANR	1315281	ReturnStatement	return true ;	402:4:10327:10338	1315158	5	True				
ANR	1315282	Identifier	true		1315158	0					
ANR	1315283	ReturnType	static inline bool		1315158	1					
ANR	1315284	Identifier	is_stem_boundaries		1315158	2					
ANR	1315285	ParameterList	"gx_san_trap * t , int side_mask"		1315158	3					
ANR	1315286	Parameter	gx_san_trap * t	382:19:9774:9787	1315158	0	True				
ANR	1315287	ParameterType	gx_san_trap *		1315158	0					
ANR	1315288	Identifier	t		1315158	1					
ANR	1315289	Parameter	int side_mask	382:35:9790:9802	1315158	1	True				
ANR	1315290	ParameterType	int		1315158	0					
ANR	1315291	Identifier	side_mask		1315158	1					
ANR	1315292	CFGEntryNode	ENTRY		1315158		True				
ANR	1315293	CFGExitNode	EXIT		1315158		True				
ANR	1315294	Symbol	t -> xrtop		1315158						
ANR	1315295	Symbol	t -> xlbot		1315158						
ANR	1315296	Symbol	false		1315158						
ANR	1315297	Symbol	t -> xltop		1315158						
ANR	1315298	Symbol	norm		1315158						
ANR	1315299	Symbol	t		1315158						
ANR	1315300	Symbol	dx		1315158						
ANR	1315301	Symbol	dy		1315158						
ANR	1315302	Symbol	hypot		1315158						
ANR	1315303	Symbol	t -> ytop		1315158						
ANR	1315304	Symbol	cosine		1315158						
ANR	1315305	Symbol	cosine_threshold		1315158						
ANR	1315306	Symbol	any_abs		1315158						
ANR	1315307	Symbol	true		1315158						
ANR	1315308	Symbol	t -> ybot		1315158						
ANR	1315309	Symbol	side_mask		1315158						
ANR	1315310	Symbol	t -> xrbot		1315158						
ANR	1315311	Symbol	* t		1315158						
ANR	1315312	Function	gx_san__obtain	408:0:10447:11144							
ANR	1315313	FunctionDef	"gx_san__obtain (gs_memory_t * mem , gx_device_spot_analyzer * * ppadev)"		1315312	0					
ANR	1315314	CompoundStatement		410:0:10518:11144	1315312	0					
ANR	1315315	IdentifierDeclStatement	gx_device_spot_analyzer * padev ;	411:4:10524:10554	1315312	0	True				
ANR	1315316	IdentifierDecl	* padev		1315312	0					
ANR	1315317	IdentifierDeclType	gx_device_spot_analyzer *		1315312	0					
ANR	1315318	Identifier	padev		1315312	1					
ANR	1315319	IdentifierDeclStatement	int code ;	412:4:10560:10568	1315312	1	True				
ANR	1315320	IdentifierDecl	code		1315312	0					
ANR	1315321	IdentifierDeclType	int		1315312	0					
ANR	1315322	Identifier	code		1315312	1					
ANR	1315323	IfStatement	if ( * ppadev != 0 )		1315312	2					
ANR	1315324	Condition	* ppadev != 0	414:8:10579:10590	1315312	0	True				
ANR	1315325	EqualityExpression	* ppadev != 0		1315312	0		!=			
ANR	1315326	UnaryOperationExpression	* ppadev		1315312	0					
ANR	1315327	UnaryOperator	*		1315312	0					
ANR	1315328	Identifier	ppadev		1315312	1					
ANR	1315329	PrimaryExpression	0		1315312	1					
ANR	1315330	CompoundStatement		5:22:74:74	1315312	1					
ANR	1315331	ExpressionStatement	( * ppadev ) -> lock ++	415:8:10603:10620	1315312	0	True				
ANR	1315332	PostIncDecOperationExpression	( * ppadev ) -> lock ++		1315312	0					
ANR	1315333	PtrMemberAccess	( * ppadev ) -> lock		1315312	0					
ANR	1315334	UnaryOperationExpression	* ppadev		1315312	0					
ANR	1315335	UnaryOperator	*		1315312	0					
ANR	1315336	Identifier	ppadev		1315312	1					
ANR	1315337	Identifier	lock		1315312	1					
ANR	1315338	IncDec	++		1315312	1					
ANR	1315339	ReturnStatement	return 0 ;	416:8:10630:10638	1315312	1	True				
ANR	1315340	PrimaryExpression	0		1315312	0					
ANR	1315341	ExpressionStatement	"padev = gs_alloc_struct ( mem , gx_device_spot_analyzer , & st_device_spot_analyzer , ""gx_san__obtain"" )"	418:4:10650:10763	1315312	3	True				
ANR	1315342	AssignmentExpression	"padev = gs_alloc_struct ( mem , gx_device_spot_analyzer , & st_device_spot_analyzer , ""gx_san__obtain"" )"		1315312	0		=			
ANR	1315343	Identifier	padev		1315312	0					
ANR	1315344	CallExpression	"gs_alloc_struct ( mem , gx_device_spot_analyzer , & st_device_spot_analyzer , ""gx_san__obtain"" )"		1315312	1					
ANR	1315345	Callee	gs_alloc_struct		1315312	0					
ANR	1315346	Identifier	gs_alloc_struct		1315312	0					
ANR	1315347	ArgumentList	mem		1315312	1					
ANR	1315348	Argument	mem		1315312	0					
ANR	1315349	Identifier	mem		1315312	0					
ANR	1315350	Argument	gx_device_spot_analyzer		1315312	1					
ANR	1315351	Identifier	gx_device_spot_analyzer		1315312	0					
ANR	1315352	Argument	& st_device_spot_analyzer		1315312	2					
ANR	1315353	UnaryOperationExpression	& st_device_spot_analyzer		1315312	0					
ANR	1315354	UnaryOperator	&		1315312	0					
ANR	1315355	Identifier	st_device_spot_analyzer		1315312	1					
ANR	1315356	Argument	"""gx_san__obtain"""		1315312	3					
ANR	1315357	PrimaryExpression	"""gx_san__obtain"""		1315312	0					
ANR	1315358	IfStatement	if ( padev == 0 )		1315312	4					
ANR	1315359	Condition	padev == 0	420:8:10773:10782	1315312	0	True				
ANR	1315360	EqualityExpression	padev == 0		1315312	0		==			
ANR	1315361	Identifier	padev		1315312	0					
ANR	1315362	PrimaryExpression	0		1315312	1					
ANR	1315363	ExpressionStatement	return_error ( gs_error_VMerror )	421:8:10793:10823	1315312	1	True				
ANR	1315364	CallExpression	return_error ( gs_error_VMerror )		1315312	0					
ANR	1315365	Callee	return_error		1315312	0					
ANR	1315366	Identifier	return_error		1315312	0					
ANR	1315367	ArgumentList	gs_error_VMerror		1315312	1					
ANR	1315368	Argument	gs_error_VMerror		1315312	0					
ANR	1315369	Identifier	gs_error_VMerror		1315312	0					
ANR	1315370	ExpressionStatement	"gx_device_init ( ( gx_device * ) padev , ( const gx_device * ) & gx_spot_analyzer_device , mem , false )"	422:4:10829:10939	1315312	5	True				
ANR	1315371	CallExpression	"gx_device_init ( ( gx_device * ) padev , ( const gx_device * ) & gx_spot_analyzer_device , mem , false )"		1315312	0					
ANR	1315372	Callee	gx_device_init		1315312	0					
ANR	1315373	Identifier	gx_device_init		1315312	0					
ANR	1315374	ArgumentList	( gx_device * ) padev		1315312	1					
ANR	1315375	Argument	( gx_device * ) padev		1315312	0					
ANR	1315376	CastExpression	( gx_device * ) padev		1315312	0					
ANR	1315377	CastTarget	gx_device *		1315312	0					
ANR	1315378	Identifier	padev		1315312	1					
ANR	1315379	Argument	( const gx_device * ) & gx_spot_analyzer_device		1315312	1					
ANR	1315380	CastExpression	( const gx_device * ) & gx_spot_analyzer_device		1315312	0					
ANR	1315381	CastTarget	const gx_device *		1315312	0					
ANR	1315382	UnaryOperationExpression	& gx_spot_analyzer_device		1315312	1					
ANR	1315383	UnaryOperator	&		1315312	0					
ANR	1315384	Identifier	gx_spot_analyzer_device		1315312	1					
ANR	1315385	Argument	mem		1315312	2					
ANR	1315386	Identifier	mem		1315312	0					
ANR	1315387	Argument	false		1315312	3					
ANR	1315388	Identifier	false		1315312	0					
ANR	1315389	ExpressionStatement	code = gs_opendevice ( ( gx_device * ) padev )	424:4:10945:10985	1315312	6	True				
ANR	1315390	AssignmentExpression	code = gs_opendevice ( ( gx_device * ) padev )		1315312	0		=			
ANR	1315391	Identifier	code		1315312	0					
ANR	1315392	CallExpression	gs_opendevice ( ( gx_device * ) padev )		1315312	1					
ANR	1315393	Callee	gs_opendevice		1315312	0					
ANR	1315394	Identifier	gs_opendevice		1315312	0					
ANR	1315395	ArgumentList	( gx_device * ) padev		1315312	1					
ANR	1315396	Argument	( gx_device * ) padev		1315312	0					
ANR	1315397	CastExpression	( gx_device * ) padev		1315312	0					
ANR	1315398	CastTarget	gx_device *		1315312	0					
ANR	1315399	Identifier	padev		1315312	1					
ANR	1315400	IfStatement	if ( code < 0 )		1315312	7					
ANR	1315401	Condition	code < 0	425:8:10995:11002	1315312	0	True				
ANR	1315402	RelationalExpression	code < 0		1315312	0		<			
ANR	1315403	Identifier	code		1315312	0					
ANR	1315404	PrimaryExpression	0		1315312	1					
ANR	1315405	CompoundStatement		16:18:486:486	1315312	1					
ANR	1315406	ExpressionStatement	"gs_free_object ( mem , padev , ""gx_san__obtain"" )"	426:8:11015:11059	1315312	0	True				
ANR	1315407	CallExpression	"gs_free_object ( mem , padev , ""gx_san__obtain"" )"		1315312	0					
ANR	1315408	Callee	gs_free_object		1315312	0					
ANR	1315409	Identifier	gs_free_object		1315312	0					
ANR	1315410	ArgumentList	mem		1315312	1					
ANR	1315411	Argument	mem		1315312	0					
ANR	1315412	Identifier	mem		1315312	0					
ANR	1315413	Argument	padev		1315312	1					
ANR	1315414	Identifier	padev		1315312	0					
ANR	1315415	Argument	"""gx_san__obtain"""		1315312	2					
ANR	1315416	PrimaryExpression	"""gx_san__obtain"""		1315312	0					
ANR	1315417	ReturnStatement	return code ;	427:8:11069:11080	1315312	1	True				
ANR	1315418	Identifier	code		1315312	0					
ANR	1315419	ExpressionStatement	padev -> lock = 1	429:4:11092:11107	1315312	8	True				
ANR	1315420	AssignmentExpression	padev -> lock = 1		1315312	0		=			
ANR	1315421	PtrMemberAccess	padev -> lock		1315312	0					
ANR	1315422	Identifier	padev		1315312	0					
ANR	1315423	Identifier	lock		1315312	1					
ANR	1315424	PrimaryExpression	1		1315312	1					
ANR	1315425	ExpressionStatement	* ppadev = padev	430:4:11113:11128	1315312	9	True				
ANR	1315426	AssignmentExpression	* ppadev = padev		1315312	0		=			
ANR	1315427	UnaryOperationExpression	* ppadev		1315312	0					
ANR	1315428	UnaryOperator	*		1315312	0					
ANR	1315429	Identifier	ppadev		1315312	1					
ANR	1315430	Identifier	padev		1315312	1					
ANR	1315431	ReturnStatement	return 0 ;	431:4:11134:11142	1315312	10	True				
ANR	1315432	PrimaryExpression	0		1315312	0					
ANR	1315433	ReturnType	int		1315312	1					
ANR	1315434	Identifier	gx_san__obtain		1315312	2					
ANR	1315435	ParameterList	"gs_memory_t * mem , gx_device_spot_analyzer * * ppadev"		1315312	3					
ANR	1315436	Parameter	gs_memory_t * mem	409:15:10466:10481	1315312	0	True				
ANR	1315437	ParameterType	gs_memory_t *		1315312	0					
ANR	1315438	Identifier	mem		1315312	1					
ANR	1315439	Parameter	gx_device_spot_analyzer * * ppadev	409:33:10484:10515	1315312	1	True				
ANR	1315440	ParameterType	gx_device_spot_analyzer * *		1315312	0					
ANR	1315441	Identifier	ppadev		1315312	1					
ANR	1315442	CFGEntryNode	ENTRY		1315312		True				
ANR	1315443	CFGExitNode	EXIT		1315312		True				
ANR	1315444	Symbol	ppadev		1315312						
ANR	1315445	Symbol	code		1315312						
ANR	1315446	Symbol	& st_device_spot_analyzer		1315312						
ANR	1315447	Symbol	padev -> lock		1315312						
ANR	1315448	Symbol	* ppadev		1315312						
ANR	1315449	Symbol	gs_alloc_struct		1315312						
ANR	1315450	Symbol	false		1315312						
ANR	1315451	Symbol	gs_opendevice		1315312						
ANR	1315452	Symbol	* * ppadev		1315312						
ANR	1315453	Symbol	( * ppadev ) -> lock		1315312						
ANR	1315454	Symbol	gx_device_spot_analyzer		1315312						
ANR	1315455	Symbol	gs_error_VMerror		1315312						
ANR	1315456	Symbol	padev		1315312						
ANR	1315457	Symbol	mem		1315312						
ANR	1315458	Symbol	* padev		1315312						
ANR	1315459	Symbol	& gx_spot_analyzer_device		1315312						
ANR	1315460	Function	gx_san__release	434:0:11147:11611							
ANR	1315461	FunctionDef	gx_san__release (gx_device_spot_analyzer * * ppadev)		1315460	0					
ANR	1315462	CompoundStatement		436:0:11202:11611	1315460	0					
ANR	1315463	IdentifierDeclStatement	gx_device_spot_analyzer * padev = * ppadev ;	437:4:11208:11248	1315460	0	True				
ANR	1315464	IdentifierDecl	* padev = * ppadev		1315460	0					
ANR	1315465	IdentifierDeclType	gx_device_spot_analyzer *		1315460	0					
ANR	1315466	Identifier	padev		1315460	1					
ANR	1315467	AssignmentExpression	* padev = * ppadev		1315460	2		=			
ANR	1315468	Identifier	padev		1315460	0					
ANR	1315469	UnaryOperationExpression	* ppadev		1315460	1					
ANR	1315470	UnaryOperator	*		1315460	0					
ANR	1315471	Identifier	ppadev		1315460	1					
ANR	1315472	IfStatement	if ( padev == NULL )		1315460	1					
ANR	1315473	Condition	padev == NULL	439:8:11259:11271	1315460	0	True				
ANR	1315474	EqualityExpression	padev == NULL		1315460	0		==			
ANR	1315475	Identifier	padev		1315460	0					
ANR	1315476	Identifier	NULL		1315460	1					
ANR	1315477	CompoundStatement		4:23:71:71	1315460	1					
ANR	1315478	ExpressionStatement	"eprintf ( ""Extra call to gx_san__release."" )"	441:8:11323:11364	1315460	0	True				
ANR	1315479	CallExpression	"eprintf ( ""Extra call to gx_san__release."" )"		1315460	0					
ANR	1315480	Callee	eprintf		1315460	0					
ANR	1315481	Identifier	eprintf		1315460	0					
ANR	1315482	ArgumentList	"""Extra call to gx_san__release."""		1315460	1					
ANR	1315483	Argument	"""Extra call to gx_san__release."""		1315460	0					
ANR	1315484	PrimaryExpression	"""Extra call to gx_san__release."""		1315460	0					
ANR	1315485	ReturnStatement	return ;	442:8:11374:11380	1315460	1	True				
ANR	1315486	IfStatement	if ( -- padev -> lock < 0 )		1315460	2					
ANR	1315487	Condition	-- padev -> lock < 0	444:7:11395:11411	1315460	0	True				
ANR	1315488	RelationalExpression	-- padev -> lock < 0		1315460	0		<			
ANR	1315489	UnaryExpression	-- padev -> lock		1315460	0					
ANR	1315490	IncDec	--		1315460	0					
ANR	1315491	PtrMemberAccess	padev -> lock		1315460	1					
ANR	1315492	Identifier	padev		1315460	0					
ANR	1315493	Identifier	lock		1315460	1					
ANR	1315494	PrimaryExpression	0		1315460	1					
ANR	1315495	CompoundStatement		9:26:211:211	1315460	1					
ANR	1315496	ExpressionStatement	"emprintf ( padev -> memory , ""Wrong lock to gx_san__release."" )"	445:8:11424:11481	1315460	0	True				
ANR	1315497	CallExpression	"emprintf ( padev -> memory , ""Wrong lock to gx_san__release."" )"		1315460	0					
ANR	1315498	Callee	emprintf		1315460	0					
ANR	1315499	Identifier	emprintf		1315460	0					
ANR	1315500	ArgumentList	padev -> memory		1315460	1					
ANR	1315501	Argument	padev -> memory		1315460	0					
ANR	1315502	PtrMemberAccess	padev -> memory		1315460	0					
ANR	1315503	Identifier	padev		1315460	0					
ANR	1315504	Identifier	memory		1315460	1					
ANR	1315505	Argument	"""Wrong lock to gx_san__release."""		1315460	1					
ANR	1315506	PrimaryExpression	"""Wrong lock to gx_san__release."""		1315460	0					
ANR	1315507	ReturnStatement	return ;	446:8:11491:11497	1315460	1	True				
ANR	1315508	IfStatement	if ( padev -> lock == 0 )		1315460	3					
ANR	1315509	Condition	padev -> lock == 0	448:8:11513:11528	1315460	0	True				
ANR	1315510	EqualityExpression	padev -> lock == 0		1315460	0		==			
ANR	1315511	PtrMemberAccess	padev -> lock		1315460	0					
ANR	1315512	Identifier	padev		1315460	0					
ANR	1315513	Identifier	lock		1315460	1					
ANR	1315514	PrimaryExpression	0		1315460	1					
ANR	1315515	CompoundStatement		13:26:328:328	1315460	1					
ANR	1315516	ExpressionStatement	* ppadev = NULL	449:8:11541:11555	1315460	0	True				
ANR	1315517	AssignmentExpression	* ppadev = NULL		1315460	0		=			
ANR	1315518	UnaryOperationExpression	* ppadev		1315460	0					
ANR	1315519	UnaryOperator	*		1315460	0					
ANR	1315520	Identifier	ppadev		1315460	1					
ANR	1315521	Identifier	NULL		1315460	1					
ANR	1315522	ExpressionStatement	"rc_decrement ( padev , ""gx_san__release"" )"	450:8:11565:11603	1315460	1	True				
ANR	1315523	CallExpression	"rc_decrement ( padev , ""gx_san__release"" )"		1315460	0					
ANR	1315524	Callee	rc_decrement		1315460	0					
ANR	1315525	Identifier	rc_decrement		1315460	0					
ANR	1315526	ArgumentList	padev		1315460	1					
ANR	1315527	Argument	padev		1315460	0					
ANR	1315528	Identifier	padev		1315460	0					
ANR	1315529	Argument	"""gx_san__release"""		1315460	1					
ANR	1315530	PrimaryExpression	"""gx_san__release"""		1315460	0					
ANR	1315531	ReturnType	void		1315460	1					
ANR	1315532	Identifier	gx_san__release		1315460	2					
ANR	1315533	ParameterList	gx_device_spot_analyzer * * ppadev		1315460	3					
ANR	1315534	Parameter	gx_device_spot_analyzer * * ppadev	435:16:11168:11199	1315460	0	True				
ANR	1315535	ParameterType	gx_device_spot_analyzer * *		1315460	0					
ANR	1315536	Identifier	ppadev		1315460	1					
ANR	1315537	CFGEntryNode	ENTRY		1315460		True				
ANR	1315538	CFGExitNode	EXIT		1315460		True				
ANR	1315539	Symbol	ppadev		1315460						
ANR	1315540	Symbol	padev		1315460						
ANR	1315541	Symbol	NULL		1315460						
ANR	1315542	Symbol	padev -> lock		1315460						
ANR	1315543	Symbol	* ppadev		1315460						
ANR	1315544	Symbol	* padev		1315460						
ANR	1315545	Symbol	padev -> memory		1315460						
ANR	1315546	Function	gx_san_begin	455:0:11647:11872							
ANR	1315547	FunctionDef	gx_san_begin (gx_device_spot_analyzer * padev)		1315546	0					
ANR	1315548	CompoundStatement		457:0:11697:11872	1315546	0					
ANR	1315549	ExpressionStatement	padev -> bot_band = NULL	458:4:11703:11725	1315546	0	True				
ANR	1315550	AssignmentExpression	padev -> bot_band = NULL		1315546	0		=			
ANR	1315551	PtrMemberAccess	padev -> bot_band		1315546	0					
ANR	1315552	Identifier	padev		1315546	0					
ANR	1315553	Identifier	bot_band		1315546	1					
ANR	1315554	Identifier	NULL		1315546	1					
ANR	1315555	ExpressionStatement	padev -> top_band = NULL	459:4:11731:11753	1315546	1	True				
ANR	1315556	AssignmentExpression	padev -> top_band = NULL		1315546	0		=			
ANR	1315557	PtrMemberAccess	padev -> top_band		1315546	0					
ANR	1315558	Identifier	padev		1315546	0					
ANR	1315559	Identifier	top_band		1315546	1					
ANR	1315560	Identifier	NULL		1315546	1					
ANR	1315561	ExpressionStatement	padev -> bot_current = NULL	460:4:11759:11784	1315546	2	True				
ANR	1315562	AssignmentExpression	padev -> bot_current = NULL		1315546	0		=			
ANR	1315563	PtrMemberAccess	padev -> bot_current		1315546	0					
ANR	1315564	Identifier	padev		1315546	0					
ANR	1315565	Identifier	bot_current		1315546	1					
ANR	1315566	Identifier	NULL		1315546	1					
ANR	1315567	ExpressionStatement	padev -> trap_free = padev -> trap_buffer	461:4:11790:11827	1315546	3	True				
ANR	1315568	AssignmentExpression	padev -> trap_free = padev -> trap_buffer		1315546	0		=			
ANR	1315569	PtrMemberAccess	padev -> trap_free		1315546	0					
ANR	1315570	Identifier	padev		1315546	0					
ANR	1315571	Identifier	trap_free		1315546	1					
ANR	1315572	PtrMemberAccess	padev -> trap_buffer		1315546	1					
ANR	1315573	Identifier	padev		1315546	0					
ANR	1315574	Identifier	trap_buffer		1315546	1					
ANR	1315575	ExpressionStatement	padev -> cont_free = padev -> cont_buffer	462:4:11833:11870	1315546	4	True				
ANR	1315576	AssignmentExpression	padev -> cont_free = padev -> cont_buffer		1315546	0		=			
ANR	1315577	PtrMemberAccess	padev -> cont_free		1315546	0					
ANR	1315578	Identifier	padev		1315546	0					
ANR	1315579	Identifier	cont_free		1315546	1					
ANR	1315580	PtrMemberAccess	padev -> cont_buffer		1315546	1					
ANR	1315581	Identifier	padev		1315546	0					
ANR	1315582	Identifier	cont_buffer		1315546	1					
ANR	1315583	ReturnType	void		1315546	1					
ANR	1315584	Identifier	gx_san_begin		1315546	2					
ANR	1315585	ParameterList	gx_device_spot_analyzer * padev		1315546	3					
ANR	1315586	Parameter	gx_device_spot_analyzer * padev	456:13:11665:11694	1315546	0	True				
ANR	1315587	ParameterType	gx_device_spot_analyzer *		1315546	0					
ANR	1315588	Identifier	padev		1315546	1					
ANR	1315589	CFGEntryNode	ENTRY		1315546		True				
ANR	1315590	CFGExitNode	EXIT		1315546		True				
ANR	1315591	Symbol	padev -> cont_free		1315546						
ANR	1315592	Symbol	padev -> bot_band		1315546						
ANR	1315593	Symbol	padev -> cont_buffer		1315546						
ANR	1315594	Symbol	padev		1315546						
ANR	1315595	Symbol	NULL		1315546						
ANR	1315596	Symbol	* padev		1315546						
ANR	1315597	Symbol	padev -> top_band		1315546						
ANR	1315598	Symbol	padev -> bot_current		1315546						
ANR	1315599	Symbol	padev -> trap_buffer		1315546						
ANR	1315600	Symbol	padev -> trap_free		1315546						
ANR	1315601	Function	gx_san_trap_store	467:0:11972:14783							
ANR	1315602	FunctionDef	"gx_san_trap_store (gx_device_spot_analyzer * padev , fixed ybot , fixed ytop , fixed xlbot , fixed xrbot , fixed xltop , fixed xrtop , const segment * l , const segment * r , int dir_l , int dir_r)"		1315601	0					
ANR	1315603	CompoundStatement		471:0:12168:14783	1315601	0					
ANR	1315604	IdentifierDeclStatement	gx_san_trap * last ;	472:4:12174:12191	1315601	0	True				
ANR	1315605	IdentifierDecl	* last		1315601	0					
ANR	1315606	IdentifierDeclType	gx_san_trap *		1315601	0					
ANR	1315607	Identifier	last		1315601	1					
ANR	1315608	IdentifierDeclStatement	int code ;	473:4:12197:12205	1315601	1	True				
ANR	1315609	IdentifierDecl	code		1315601	0					
ANR	1315610	IdentifierDeclType	int		1315601	0					
ANR	1315611	Identifier	code		1315601	1					
ANR	1315612	IfStatement	if ( padev -> top_band != NULL && padev -> top_band -> ytop != ytop )		1315601	2					
ANR	1315613	Condition	padev -> top_band != NULL && padev -> top_band -> ytop != ytop	475:8:12216:12271	1315601	0	True				
ANR	1315614	AndExpression	padev -> top_band != NULL && padev -> top_band -> ytop != ytop		1315601	0		&&			
ANR	1315615	EqualityExpression	padev -> top_band != NULL		1315601	0		!=			
ANR	1315616	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315617	Identifier	padev		1315601	0					
ANR	1315618	Identifier	top_band		1315601	1					
ANR	1315619	Identifier	NULL		1315601	1					
ANR	1315620	EqualityExpression	padev -> top_band -> ytop != ytop		1315601	1		!=			
ANR	1315621	PtrMemberAccess	padev -> top_band -> ytop		1315601	0					
ANR	1315622	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315623	Identifier	padev		1315601	0					
ANR	1315624	Identifier	top_band		1315601	1					
ANR	1315625	Identifier	ytop		1315601	1					
ANR	1315626	Identifier	ytop		1315601	1					
ANR	1315627	CompoundStatement		5:66:105:105	1315601	1					
ANR	1315628	ExpressionStatement	"code = try_unite_last_trap ( padev , max_int )"	476:8:12284:12326	1315601	0	True				
ANR	1315629	AssignmentExpression	"code = try_unite_last_trap ( padev , max_int )"		1315601	0		=			
ANR	1315630	Identifier	code		1315601	0					
ANR	1315631	CallExpression	"try_unite_last_trap ( padev , max_int )"		1315601	1					
ANR	1315632	Callee	try_unite_last_trap		1315601	0					
ANR	1315633	Identifier	try_unite_last_trap		1315601	0					
ANR	1315634	ArgumentList	padev		1315601	1					
ANR	1315635	Argument	padev		1315601	0					
ANR	1315636	Identifier	padev		1315601	0					
ANR	1315637	Argument	max_int		1315601	1					
ANR	1315638	Identifier	max_int		1315601	0					
ANR	1315639	IfStatement	if ( code < 0 )		1315601	1					
ANR	1315640	Condition	code < 0	477:12:12340:12347	1315601	0	True				
ANR	1315641	RelationalExpression	code < 0		1315601	0		<			
ANR	1315642	Identifier	code		1315601	0					
ANR	1315643	PrimaryExpression	0		1315601	1					
ANR	1315644	ReturnStatement	return code ;	478:12:12362:12373	1315601	1	True				
ANR	1315645	Identifier	code		1315601	0					
ANR	1315646	ExpressionStatement	padev -> bot_band = padev -> bot_current = padev -> top_band	480:8:12417:12471	1315601	2	True				
ANR	1315647	AssignmentExpression	padev -> bot_band = padev -> bot_current = padev -> top_band		1315601	0		=			
ANR	1315648	PtrMemberAccess	padev -> bot_band		1315601	0					
ANR	1315649	Identifier	padev		1315601	0					
ANR	1315650	Identifier	bot_band		1315601	1					
ANR	1315651	AssignmentExpression	padev -> bot_current = padev -> top_band		1315601	1		=			
ANR	1315652	PtrMemberAccess	padev -> bot_current		1315601	0					
ANR	1315653	Identifier	padev		1315601	0					
ANR	1315654	Identifier	bot_current		1315601	1					
ANR	1315655	PtrMemberAccess	padev -> top_band		1315601	1					
ANR	1315656	Identifier	padev		1315601	0					
ANR	1315657	Identifier	top_band		1315601	1					
ANR	1315658	ExpressionStatement	padev -> top_band = NULL	481:8:12481:12503	1315601	3	True				
ANR	1315659	AssignmentExpression	padev -> top_band = NULL		1315601	0		=			
ANR	1315660	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315661	Identifier	padev		1315601	0					
ANR	1315662	Identifier	top_band		1315601	1					
ANR	1315663	Identifier	NULL		1315601	1					
ANR	1315664	IfStatement	if ( padev -> bot_band != NULL && padev -> bot_band -> ytop != ybot )		1315601	3					
ANR	1315665	Condition	padev -> bot_band != NULL && padev -> bot_band -> ytop != ybot	483:8:12519:12574	1315601	0	True				
ANR	1315666	AndExpression	padev -> bot_band != NULL && padev -> bot_band -> ytop != ybot		1315601	0		&&			
ANR	1315667	EqualityExpression	padev -> bot_band != NULL		1315601	0		!=			
ANR	1315668	PtrMemberAccess	padev -> bot_band		1315601	0					
ANR	1315669	Identifier	padev		1315601	0					
ANR	1315670	Identifier	bot_band		1315601	1					
ANR	1315671	Identifier	NULL		1315601	1					
ANR	1315672	EqualityExpression	padev -> bot_band -> ytop != ybot		1315601	1		!=			
ANR	1315673	PtrMemberAccess	padev -> bot_band -> ytop		1315601	0					
ANR	1315674	PtrMemberAccess	padev -> bot_band		1315601	0					
ANR	1315675	Identifier	padev		1315601	0					
ANR	1315676	Identifier	bot_band		1315601	1					
ANR	1315677	Identifier	ytop		1315601	1					
ANR	1315678	Identifier	ybot		1315601	1					
ANR	1315679	CompoundStatement		13:66:408:408	1315601	1					
ANR	1315680	ExpressionStatement	padev -> top_band = NULL	485:8:12649:12671	1315601	0	True				
ANR	1315681	AssignmentExpression	padev -> top_band = NULL		1315601	0		=			
ANR	1315682	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315683	Identifier	padev		1315601	0					
ANR	1315684	Identifier	top_band		1315601	1					
ANR	1315685	Identifier	NULL		1315601	1					
ANR	1315686	IfStatement	if ( padev -> top_band != NULL )		1315601	4					
ANR	1315687	Condition	padev -> top_band != NULL	487:8:12687:12709	1315601	0	True				
ANR	1315688	EqualityExpression	padev -> top_band != NULL		1315601	0		!=			
ANR	1315689	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315690	Identifier	padev		1315601	0					
ANR	1315691	Identifier	top_band		1315601	1					
ANR	1315692	Identifier	NULL		1315601	1					
ANR	1315693	CompoundStatement		17:33:543:543	1315601	1					
ANR	1315694	ExpressionStatement	"code = try_unite_last_trap ( padev , xlbot )"	488:8:12722:12762	1315601	0	True				
ANR	1315695	AssignmentExpression	"code = try_unite_last_trap ( padev , xlbot )"		1315601	0		=			
ANR	1315696	Identifier	code		1315601	0					
ANR	1315697	CallExpression	"try_unite_last_trap ( padev , xlbot )"		1315601	1					
ANR	1315698	Callee	try_unite_last_trap		1315601	0					
ANR	1315699	Identifier	try_unite_last_trap		1315601	0					
ANR	1315700	ArgumentList	padev		1315601	1					
ANR	1315701	Argument	padev		1315601	0					
ANR	1315702	Identifier	padev		1315601	0					
ANR	1315703	Argument	xlbot		1315601	1					
ANR	1315704	Identifier	xlbot		1315601	0					
ANR	1315705	IfStatement	if ( code < 0 )		1315601	1					
ANR	1315706	Condition	code < 0	489:12:12776:12783	1315601	0	True				
ANR	1315707	RelationalExpression	code < 0		1315601	0		<			
ANR	1315708	Identifier	code		1315601	0					
ANR	1315709	PrimaryExpression	0		1315601	1					
ANR	1315710	ReturnStatement	return code ;	490:12:12798:12809	1315601	1	True				
ANR	1315711	Identifier	code		1315601	0					
ANR	1315712	ExpressionStatement	code = check_band_list ( padev -> bot_band )	492:4:12821:12860	1315601	5	True				
ANR	1315713	AssignmentExpression	code = check_band_list ( padev -> bot_band )		1315601	0		=			
ANR	1315714	Identifier	code		1315601	0					
ANR	1315715	CallExpression	check_band_list ( padev -> bot_band )		1315601	1					
ANR	1315716	Callee	check_band_list		1315601	0					
ANR	1315717	Identifier	check_band_list		1315601	0					
ANR	1315718	ArgumentList	padev -> bot_band		1315601	1					
ANR	1315719	Argument	padev -> bot_band		1315601	0					
ANR	1315720	PtrMemberAccess	padev -> bot_band		1315601	0					
ANR	1315721	Identifier	padev		1315601	0					
ANR	1315722	Identifier	bot_band		1315601	1					
ANR	1315723	IfStatement	if ( code < 0 )		1315601	6					
ANR	1315724	Condition	code < 0	493:8:12870:12877	1315601	0	True				
ANR	1315725	RelationalExpression	code < 0		1315601	0		<			
ANR	1315726	Identifier	code		1315601	0					
ANR	1315727	PrimaryExpression	0		1315601	1					
ANR	1315728	ReturnStatement	return code ;	494:8:12888:12899	1315601	1	True				
ANR	1315729	Identifier	code		1315601	0					
ANR	1315730	ExpressionStatement	code = check_band_list ( padev -> top_band )	495:4:12905:12943	1315601	7	True				
ANR	1315731	AssignmentExpression	code = check_band_list ( padev -> top_band )		1315601	0		=			
ANR	1315732	Identifier	code		1315601	0					
ANR	1315733	CallExpression	check_band_list ( padev -> top_band )		1315601	1					
ANR	1315734	Callee	check_band_list		1315601	0					
ANR	1315735	Identifier	check_band_list		1315601	0					
ANR	1315736	ArgumentList	padev -> top_band		1315601	1					
ANR	1315737	Argument	padev -> top_band		1315601	0					
ANR	1315738	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315739	Identifier	padev		1315601	0					
ANR	1315740	Identifier	top_band		1315601	1					
ANR	1315741	IfStatement	if ( code < 0 )		1315601	8					
ANR	1315742	Condition	code < 0	496:8:12953:12960	1315601	0	True				
ANR	1315743	RelationalExpression	code < 0		1315601	0		<			
ANR	1315744	Identifier	code		1315601	0					
ANR	1315745	PrimaryExpression	0		1315601	1					
ANR	1315746	ReturnStatement	return code ;	497:8:12971:12982	1315601	1	True				
ANR	1315747	Identifier	code		1315601	0					
ANR	1315748	ExpressionStatement	last = trap_reserve ( padev )	499:4:13018:13044	1315601	9	True				
ANR	1315749	AssignmentExpression	last = trap_reserve ( padev )		1315601	0		=			
ANR	1315750	Identifier	last		1315601	0					
ANR	1315751	CallExpression	trap_reserve ( padev )		1315601	1					
ANR	1315752	Callee	trap_reserve		1315601	0					
ANR	1315753	Identifier	trap_reserve		1315601	0					
ANR	1315754	ArgumentList	padev		1315601	1					
ANR	1315755	Argument	padev		1315601	0					
ANR	1315756	Identifier	padev		1315601	0					
ANR	1315757	IfStatement	if ( last == NULL )		1315601	10					
ANR	1315758	Condition	last == NULL	500:8:13054:13065	1315601	0	True				
ANR	1315759	EqualityExpression	last == NULL		1315601	0		==			
ANR	1315760	Identifier	last		1315601	0					
ANR	1315761	Identifier	NULL		1315601	1					
ANR	1315762	ExpressionStatement	return_error ( gs_error_VMerror )	501:8:13076:13106	1315601	1	True				
ANR	1315763	CallExpression	return_error ( gs_error_VMerror )		1315601	0					
ANR	1315764	Callee	return_error		1315601	0					
ANR	1315765	Identifier	return_error		1315601	0					
ANR	1315766	ArgumentList	gs_error_VMerror		1315601	1					
ANR	1315767	Argument	gs_error_VMerror		1315601	0					
ANR	1315768	Identifier	gs_error_VMerror		1315601	0					
ANR	1315769	ExpressionStatement	last -> ybot = ybot	502:4:13112:13129	1315601	11	True				
ANR	1315770	AssignmentExpression	last -> ybot = ybot		1315601	0		=			
ANR	1315771	PtrMemberAccess	last -> ybot		1315601	0					
ANR	1315772	Identifier	last		1315601	0					
ANR	1315773	Identifier	ybot		1315601	1					
ANR	1315774	Identifier	ybot		1315601	1					
ANR	1315775	ExpressionStatement	last -> ytop = ytop	503:4:13135:13152	1315601	12	True				
ANR	1315776	AssignmentExpression	last -> ytop = ytop		1315601	0		=			
ANR	1315777	PtrMemberAccess	last -> ytop		1315601	0					
ANR	1315778	Identifier	last		1315601	0					
ANR	1315779	Identifier	ytop		1315601	1					
ANR	1315780	Identifier	ytop		1315601	1					
ANR	1315781	ExpressionStatement	last -> xlbot = xlbot	504:4:13158:13177	1315601	13	True				
ANR	1315782	AssignmentExpression	last -> xlbot = xlbot		1315601	0		=			
ANR	1315783	PtrMemberAccess	last -> xlbot		1315601	0					
ANR	1315784	Identifier	last		1315601	0					
ANR	1315785	Identifier	xlbot		1315601	1					
ANR	1315786	Identifier	xlbot		1315601	1					
ANR	1315787	ExpressionStatement	last -> xrbot = xrbot	505:4:13183:13202	1315601	14	True				
ANR	1315788	AssignmentExpression	last -> xrbot = xrbot		1315601	0		=			
ANR	1315789	PtrMemberAccess	last -> xrbot		1315601	0					
ANR	1315790	Identifier	last		1315601	0					
ANR	1315791	Identifier	xrbot		1315601	1					
ANR	1315792	Identifier	xrbot		1315601	1					
ANR	1315793	ExpressionStatement	last -> xltop = xltop	506:4:13208:13227	1315601	15	True				
ANR	1315794	AssignmentExpression	last -> xltop = xltop		1315601	0		=			
ANR	1315795	PtrMemberAccess	last -> xltop		1315601	0					
ANR	1315796	Identifier	last		1315601	0					
ANR	1315797	Identifier	xltop		1315601	1					
ANR	1315798	Identifier	xltop		1315601	1					
ANR	1315799	ExpressionStatement	last -> xrtop = xrtop	507:4:13233:13252	1315601	16	True				
ANR	1315800	AssignmentExpression	last -> xrtop = xrtop		1315601	0		=			
ANR	1315801	PtrMemberAccess	last -> xrtop		1315601	0					
ANR	1315802	Identifier	last		1315601	0					
ANR	1315803	Identifier	xrtop		1315601	1					
ANR	1315804	Identifier	xrtop		1315601	1					
ANR	1315805	ExpressionStatement	last -> l = l	508:4:13258:13269	1315601	17	True				
ANR	1315806	AssignmentExpression	last -> l = l		1315601	0		=			
ANR	1315807	PtrMemberAccess	last -> l		1315601	0					
ANR	1315808	Identifier	last		1315601	0					
ANR	1315809	Identifier	l		1315601	1					
ANR	1315810	Identifier	l		1315601	1					
ANR	1315811	ExpressionStatement	last -> r = r	509:4:13275:13286	1315601	18	True				
ANR	1315812	AssignmentExpression	last -> r = r		1315601	0		=			
ANR	1315813	PtrMemberAccess	last -> r		1315601	0					
ANR	1315814	Identifier	last		1315601	0					
ANR	1315815	Identifier	r		1315601	1					
ANR	1315816	Identifier	r		1315601	1					
ANR	1315817	ExpressionStatement	last -> dir_l = dir_l	510:4:13292:13311	1315601	19	True				
ANR	1315818	AssignmentExpression	last -> dir_l = dir_l		1315601	0		=			
ANR	1315819	PtrMemberAccess	last -> dir_l		1315601	0					
ANR	1315820	Identifier	last		1315601	0					
ANR	1315821	Identifier	dir_l		1315601	1					
ANR	1315822	Identifier	dir_l		1315601	1					
ANR	1315823	ExpressionStatement	last -> dir_r = dir_r	511:4:13317:13336	1315601	20	True				
ANR	1315824	AssignmentExpression	last -> dir_r = dir_r		1315601	0		=			
ANR	1315825	PtrMemberAccess	last -> dir_r		1315601	0					
ANR	1315826	Identifier	last		1315601	0					
ANR	1315827	Identifier	dir_r		1315601	1					
ANR	1315828	Identifier	dir_r		1315601	1					
ANR	1315829	ExpressionStatement	last -> upper = 0	512:4:13342:13357	1315601	21	True				
ANR	1315830	AssignmentExpression	last -> upper = 0		1315601	0		=			
ANR	1315831	PtrMemberAccess	last -> upper		1315601	0					
ANR	1315832	Identifier	last		1315601	0					
ANR	1315833	Identifier	upper		1315601	1					
ANR	1315834	PrimaryExpression	0		1315601	1					
ANR	1315835	ExpressionStatement	last -> fork = 0	513:4:13363:13377	1315601	22	True				
ANR	1315836	AssignmentExpression	last -> fork = 0		1315601	0		=			
ANR	1315837	PtrMemberAccess	last -> fork		1315601	0					
ANR	1315838	Identifier	last		1315601	0					
ANR	1315839	Identifier	fork		1315601	1					
ANR	1315840	PrimaryExpression	0		1315601	1					
ANR	1315841	ExpressionStatement	last -> visited = false	514:4:13383:13404	1315601	23	True				
ANR	1315842	AssignmentExpression	last -> visited = false		1315601	0		=			
ANR	1315843	PtrMemberAccess	last -> visited		1315601	0					
ANR	1315844	Identifier	last		1315601	0					
ANR	1315845	Identifier	visited		1315601	1					
ANR	1315846	Identifier	false		1315601	1					
ANR	1315847	ExpressionStatement	last -> leftmost = last -> rightmost = true	515:4:13410:13449	1315601	24	True				
ANR	1315848	AssignmentExpression	last -> leftmost = last -> rightmost = true		1315601	0		=			
ANR	1315849	PtrMemberAccess	last -> leftmost		1315601	0					
ANR	1315850	Identifier	last		1315601	0					
ANR	1315851	Identifier	leftmost		1315601	1					
ANR	1315852	AssignmentExpression	last -> rightmost = true		1315601	1		=			
ANR	1315853	PtrMemberAccess	last -> rightmost		1315601	0					
ANR	1315854	Identifier	last		1315601	0					
ANR	1315855	Identifier	rightmost		1315601	1					
ANR	1315856	Identifier	true		1315601	1					
ANR	1315857	IfStatement	if ( padev -> top_band != NULL )		1315601	25					
ANR	1315858	Condition	padev -> top_band != NULL	516:8:13459:13481	1315601	0	True				
ANR	1315859	EqualityExpression	padev -> top_band != NULL		1315601	0		!=			
ANR	1315860	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315861	Identifier	padev		1315601	0					
ANR	1315862	Identifier	top_band		1315601	1					
ANR	1315863	Identifier	NULL		1315601	1					
ANR	1315864	CompoundStatement		46:33:1315:1315	1315601	1					
ANR	1315865	ExpressionStatement	padev -> top_band -> rightmost = false	517:8:13494:13528	1315601	0	True				
ANR	1315866	AssignmentExpression	padev -> top_band -> rightmost = false		1315601	0		=			
ANR	1315867	PtrMemberAccess	padev -> top_band -> rightmost		1315601	0					
ANR	1315868	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315869	Identifier	padev		1315601	0					
ANR	1315870	Identifier	top_band		1315601	1					
ANR	1315871	Identifier	rightmost		1315601	1					
ANR	1315872	Identifier	false		1315601	1					
ANR	1315873	ExpressionStatement	last -> leftmost = false	518:8:13538:13560	1315601	1	True				
ANR	1315874	AssignmentExpression	last -> leftmost = false		1315601	0		=			
ANR	1315875	PtrMemberAccess	last -> leftmost		1315601	0					
ANR	1315876	Identifier	last		1315601	0					
ANR	1315877	Identifier	leftmost		1315601	1					
ANR	1315878	Identifier	false		1315601	1					
ANR	1315879	ExpressionStatement	"band_list_insert_last ( & padev -> top_band , last )"	520:4:13572:13617	1315601	26	True				
ANR	1315880	CallExpression	"band_list_insert_last ( & padev -> top_band , last )"		1315601	0					
ANR	1315881	Callee	band_list_insert_last		1315601	0					
ANR	1315882	Identifier	band_list_insert_last		1315601	0					
ANR	1315883	ArgumentList	& padev -> top_band		1315601	1					
ANR	1315884	Argument	& padev -> top_band		1315601	0					
ANR	1315885	UnaryOperationExpression	& padev -> top_band		1315601	0					
ANR	1315886	UnaryOperator	&		1315601	0					
ANR	1315887	PtrMemberAccess	padev -> top_band		1315601	1					
ANR	1315888	Identifier	padev		1315601	0					
ANR	1315889	Identifier	top_band		1315601	1					
ANR	1315890	Argument	last		1315601	1					
ANR	1315891	Identifier	last		1315601	0					
ANR	1315892	ExpressionStatement	code = check_band_list ( padev -> top_band )	521:4:13623:13662	1315601	27	True				
ANR	1315893	AssignmentExpression	code = check_band_list ( padev -> top_band )		1315601	0		=			
ANR	1315894	Identifier	code		1315601	0					
ANR	1315895	CallExpression	check_band_list ( padev -> top_band )		1315601	1					
ANR	1315896	Callee	check_band_list		1315601	0					
ANR	1315897	Identifier	check_band_list		1315601	0					
ANR	1315898	ArgumentList	padev -> top_band		1315601	1					
ANR	1315899	Argument	padev -> top_band		1315601	0					
ANR	1315900	PtrMemberAccess	padev -> top_band		1315601	0					
ANR	1315901	Identifier	padev		1315601	0					
ANR	1315902	Identifier	top_band		1315601	1					
ANR	1315903	IfStatement	if ( code < 0 )		1315601	28					
ANR	1315904	Condition	code < 0	522:8:13672:13679	1315601	0	True				
ANR	1315905	RelationalExpression	code < 0		1315601	0		<			
ANR	1315906	Identifier	code		1315601	0					
ANR	1315907	PrimaryExpression	0		1315601	1					
ANR	1315908	ReturnStatement	return code ;	523:8:13690:13701	1315601	1	True				
ANR	1315909	Identifier	code		1315601	0					
ANR	1315910	WhileStatement	while ( padev -> bot_current != NULL && padev -> bot_current -> xrtop < xlbot )		1315601	29					
ANR	1315911	Condition	padev -> bot_current != NULL && padev -> bot_current -> xrtop < xlbot	524:11:13714:13776	1315601	0	True				
ANR	1315912	AndExpression	padev -> bot_current != NULL && padev -> bot_current -> xrtop < xlbot		1315601	0		&&			
ANR	1315913	EqualityExpression	padev -> bot_current != NULL		1315601	0		!=			
ANR	1315914	PtrMemberAccess	padev -> bot_current		1315601	0					
ANR	1315915	Identifier	padev		1315601	0					
ANR	1315916	Identifier	bot_current		1315601	1					
ANR	1315917	Identifier	NULL		1315601	1					
ANR	1315918	RelationalExpression	padev -> bot_current -> xrtop < xlbot		1315601	1		<			
ANR	1315919	PtrMemberAccess	padev -> bot_current -> xrtop		1315601	0					
ANR	1315920	PtrMemberAccess	padev -> bot_current		1315601	0					
ANR	1315921	Identifier	padev		1315601	0					
ANR	1315922	Identifier	bot_current		1315601	1					
ANR	1315923	Identifier	xrtop		1315601	1					
ANR	1315924	Identifier	xlbot		1315601	1					
ANR	1315925	ExpressionStatement	"padev -> bot_current = ( trap_is_last ( padev -> bot_band , padev -> bot_current ) ? NULL : padev -> bot_current -> next )"	525:8:13787:13929	1315601	1	True				
ANR	1315926	AssignmentExpression	"padev -> bot_current = ( trap_is_last ( padev -> bot_band , padev -> bot_current ) ? NULL : padev -> bot_current -> next )"		1315601	0		=			
ANR	1315927	PtrMemberAccess	padev -> bot_current		1315601	0					
ANR	1315928	Identifier	padev		1315601	0					
ANR	1315929	Identifier	bot_current		1315601	1					
ANR	1315930	ConditionalExpression	"trap_is_last ( padev -> bot_band , padev -> bot_current ) ? NULL : padev -> bot_current -> next"		1315601	1					
ANR	1315931	Condition	"trap_is_last ( padev -> bot_band , padev -> bot_current )"		1315601	0					
ANR	1315932	CallExpression	"trap_is_last ( padev -> bot_band , padev -> bot_current )"		1315601	0					
ANR	1315933	Callee	trap_is_last		1315601	0					
ANR	1315934	Identifier	trap_is_last		1315601	0					
ANR	1315935	ArgumentList	padev -> bot_band		1315601	1					
ANR	1315936	Argument	padev -> bot_band		1315601	0					
ANR	1315937	PtrMemberAccess	padev -> bot_band		1315601	0					
ANR	1315938	Identifier	padev		1315601	0					
ANR	1315939	Identifier	bot_band		1315601	1					
ANR	1315940	Argument	padev -> bot_current		1315601	1					
ANR	1315941	PtrMemberAccess	padev -> bot_current		1315601	0					
ANR	1315942	Identifier	padev		1315601	0					
ANR	1315943	Identifier	bot_current		1315601	1					
ANR	1315944	Identifier	NULL		1315601	1					
ANR	1315945	PtrMemberAccess	padev -> bot_current -> next		1315601	2					
ANR	1315946	PtrMemberAccess	padev -> bot_current		1315601	0					
ANR	1315947	Identifier	padev		1315601	0					
ANR	1315948	Identifier	bot_current		1315601	1					
ANR	1315949	Identifier	next		1315601	1					
ANR	1315950	IfStatement	if ( padev -> bot_current != 0 && padev -> bot_band != NULL )		1315601	30					
ANR	1315951	Condition	padev -> bot_current != 0 && padev -> bot_band != NULL	527:8:13939:13988	1315601	0	True				
ANR	1315952	AndExpression	padev -> bot_current != 0 && padev -> bot_band != NULL		1315601	0		&&			
ANR	1315953	EqualityExpression	padev -> bot_current != 0		1315601	0		!=			
ANR	1315954	PtrMemberAccess	padev -> bot_current		1315601	0					
ANR	1315955	Identifier	padev		1315601	0					
ANR	1315956	Identifier	bot_current		1315601	1					
ANR	1315957	PrimaryExpression	0		1315601	1					
ANR	1315958	EqualityExpression	padev -> bot_band != NULL		1315601	1		!=			
ANR	1315959	PtrMemberAccess	padev -> bot_band		1315601	0					
ANR	1315960	Identifier	padev		1315601	0					
ANR	1315961	Identifier	bot_band		1315601	1					
ANR	1315962	Identifier	NULL		1315601	1					
ANR	1315963	CompoundStatement		59:8:1877:1932	1315601	1					
ANR	1315964	IdentifierDeclStatement	gx_san_trap * t = padev -> bot_current ;	528:8:14001:14036	1315601	0	True				
ANR	1315965	IdentifierDecl	* t = padev -> bot_current		1315601	0					
ANR	1315966	IdentifierDeclType	gx_san_trap *		1315601	0					
ANR	1315967	Identifier	t		1315601	1					
ANR	1315968	AssignmentExpression	* t = padev -> bot_current		1315601	2		=			
ANR	1315969	Identifier	t		1315601	0					
ANR	1315970	PtrMemberAccess	padev -> bot_current		1315601	1					
ANR	1315971	Identifier	padev		1315601	0					
ANR	1315972	Identifier	bot_current		1315601	1					
ANR	1315973	IdentifierDeclStatement	gx_san_trap * bot_last = band_list_last ( padev -> bot_band ) ;	529:8:14046:14101	1315601	1	True				
ANR	1315974	IdentifierDecl	* bot_last = band_list_last ( padev -> bot_band )		1315601	0					
ANR	1315975	IdentifierDeclType	gx_san_trap *		1315601	0					
ANR	1315976	Identifier	bot_last		1315601	1					
ANR	1315977	AssignmentExpression	* bot_last = band_list_last ( padev -> bot_band )		1315601	2		=			
ANR	1315978	Identifier	bot_last		1315601	0					
ANR	1315979	CallExpression	band_list_last ( padev -> bot_band )		1315601	1					
ANR	1315980	Callee	band_list_last		1315601	0					
ANR	1315981	Identifier	band_list_last		1315601	0					
ANR	1315982	ArgumentList	padev -> bot_band		1315601	1					
ANR	1315983	Argument	padev -> bot_band		1315601	0					
ANR	1315984	PtrMemberAccess	padev -> bot_band		1315601	0					
ANR	1315985	Identifier	padev		1315601	0					
ANR	1315986	Identifier	bot_band		1315601	1					
ANR	1315987	WhileStatement	while ( t -> xltop <= xrbot )		1315601	2					
ANR	1315988	Condition	t -> xltop <= xrbot	531:14:14118:14134	1315601	0	True				
ANR	1315989	RelationalExpression	t -> xltop <= xrbot		1315601	0		<=			
ANR	1315990	PtrMemberAccess	t -> xltop		1315601	0					
ANR	1315991	Identifier	t		1315601	0					
ANR	1315992	Identifier	xltop		1315601	1					
ANR	1315993	Identifier	xrbot		1315601	1					
ANR	1315994	CompoundStatement		62:12:1982:2029	1315601	1					
ANR	1315995	IdentifierDeclStatement	gx_san_trap_contact * cont = cont_reserve ( padev ) ;	532:12:14151:14198	1315601	0	True				
ANR	1315996	IdentifierDecl	* cont = cont_reserve ( padev )		1315601	0					
ANR	1315997	IdentifierDeclType	gx_san_trap_contact *		1315601	0					
ANR	1315998	Identifier	cont		1315601	1					
ANR	1315999	AssignmentExpression	* cont = cont_reserve ( padev )		1315601	2		=			
ANR	1316000	Identifier	cont		1315601	0					
ANR	1316001	CallExpression	cont_reserve ( padev )		1315601	1					
ANR	1316002	Callee	cont_reserve		1315601	0					
ANR	1316003	Identifier	cont_reserve		1315601	0					
ANR	1316004	ArgumentList	padev		1315601	1					
ANR	1316005	Argument	padev		1315601	0					
ANR	1316006	Identifier	padev		1315601	0					
ANR	1316007	IfStatement	if ( cont == NULL )		1315601	1					
ANR	1316008	Condition	cont == NULL	534:16:14217:14228	1315601	0	True				
ANR	1316009	EqualityExpression	cont == NULL		1315601	0		==			
ANR	1316010	Identifier	cont		1315601	0					
ANR	1316011	Identifier	NULL		1315601	1					
ANR	1316012	ExpressionStatement	return_error ( gs_error_VMerror )	535:16:14247:14277	1315601	1	True				
ANR	1316013	CallExpression	return_error ( gs_error_VMerror )		1315601	0					
ANR	1316014	Callee	return_error		1315601	0					
ANR	1316015	Identifier	return_error		1315601	0					
ANR	1316016	ArgumentList	gs_error_VMerror		1315601	1					
ANR	1316017	Argument	gs_error_VMerror		1315601	0					
ANR	1316018	Identifier	gs_error_VMerror		1315601	0					
ANR	1316019	ExpressionStatement	cont -> lower = t	536:12:14291:14306	1315601	2	True				
ANR	1316020	AssignmentExpression	cont -> lower = t		1315601	0		=			
ANR	1316021	PtrMemberAccess	cont -> lower		1315601	0					
ANR	1316022	Identifier	cont		1315601	0					
ANR	1316023	Identifier	lower		1315601	1					
ANR	1316024	Identifier	t		1315601	1					
ANR	1316025	ExpressionStatement	cont -> upper = last	537:12:14320:14338	1315601	3	True				
ANR	1316026	AssignmentExpression	cont -> upper = last		1315601	0		=			
ANR	1316027	PtrMemberAccess	cont -> upper		1315601	0					
ANR	1316028	Identifier	cont		1315601	0					
ANR	1316029	Identifier	upper		1315601	1					
ANR	1316030	Identifier	last		1315601	1					
ANR	1316031	ExpressionStatement	"cont_list_insert_last ( & t -> upper , cont )"	538:12:14352:14390	1315601	4	True				
ANR	1316032	CallExpression	"cont_list_insert_last ( & t -> upper , cont )"		1315601	0					
ANR	1316033	Callee	cont_list_insert_last		1315601	0					
ANR	1316034	Identifier	cont_list_insert_last		1315601	0					
ANR	1316035	ArgumentList	& t -> upper		1315601	1					
ANR	1316036	Argument	& t -> upper		1315601	0					
ANR	1316037	UnaryOperationExpression	& t -> upper		1315601	0					
ANR	1316038	UnaryOperator	&		1315601	0					
ANR	1316039	PtrMemberAccess	t -> upper		1315601	1					
ANR	1316040	Identifier	t		1315601	0					
ANR	1316041	Identifier	upper		1315601	1					
ANR	1316042	Argument	cont		1315601	1					
ANR	1316043	Identifier	cont		1315601	0					
ANR	1316044	ExpressionStatement	last -> fork ++	539:12:14404:14416	1315601	5	True				
ANR	1316045	PostIncDecOperationExpression	last -> fork ++		1315601	0					
ANR	1316046	PtrMemberAccess	last -> fork		1315601	0					
ANR	1316047	Identifier	last		1315601	0					
ANR	1316048	Identifier	fork		1315601	1					
ANR	1316049	IncDec	++		1315601	1					
ANR	1316050	IfStatement	if ( t == bot_last )		1315601	6					
ANR	1316051	Condition	t == bot_last	540:16:14434:14446	1315601	0	True				
ANR	1316052	EqualityExpression	t == bot_last		1315601	0		==			
ANR	1316053	Identifier	t		1315601	0					
ANR	1316054	Identifier	bot_last		1315601	1					
ANR	1316055	BreakStatement	break ;	541:16:14465:14470	1315601	1	True				
ANR	1316056	ExpressionStatement	t = t -> next	542:12:14484:14495	1315601	7	True				
ANR	1316057	AssignmentExpression	t = t -> next		1315601	0		=			
ANR	1316058	Identifier	t		1315601	0					
ANR	1316059	PtrMemberAccess	t -> next		1315601	1					
ANR	1316060	Identifier	t		1315601	0					
ANR	1316061	Identifier	next		1315601	1					
ANR	1316062	IfStatement	if ( padev -> xmin > padev -> xmax )		1315601	31					
ANR	1316063	Condition	padev -> xmin > padev -> xmax	545:8:14521:14545	1315601	0	True				
ANR	1316064	RelationalExpression	padev -> xmin > padev -> xmax		1315601	0		>			
ANR	1316065	PtrMemberAccess	padev -> xmin		1315601	0					
ANR	1316066	Identifier	padev		1315601	0					
ANR	1316067	Identifier	xmin		1315601	1					
ANR	1316068	PtrMemberAccess	padev -> xmax		1315601	1					
ANR	1316069	Identifier	padev		1315601	0					
ANR	1316070	Identifier	xmax		1315601	1					
ANR	1316071	CompoundStatement		75:35:2379:2379	1315601	1					
ANR	1316072	ExpressionStatement	"padev -> xmin = min ( xlbot , xltop )"	546:8:14558:14589	1315601	0	True				
ANR	1316073	AssignmentExpression	"padev -> xmin = min ( xlbot , xltop )"		1315601	0		=			
ANR	1316074	PtrMemberAccess	padev -> xmin		1315601	0					
ANR	1316075	Identifier	padev		1315601	0					
ANR	1316076	Identifier	xmin		1315601	1					
ANR	1316077	CallExpression	"min ( xlbot , xltop )"		1315601	1					
ANR	1316078	Callee	min		1315601	0					
ANR	1316079	Identifier	min		1315601	0					
ANR	1316080	ArgumentList	xlbot		1315601	1					
ANR	1316081	Argument	xlbot		1315601	0					
ANR	1316082	Identifier	xlbot		1315601	0					
ANR	1316083	Argument	xltop		1315601	1					
ANR	1316084	Identifier	xltop		1315601	0					
ANR	1316085	ExpressionStatement	"padev -> xmax = max ( xrbot , xrtop )"	547:8:14599:14630	1315601	1	True				
ANR	1316086	AssignmentExpression	"padev -> xmax = max ( xrbot , xrtop )"		1315601	0		=			
ANR	1316087	PtrMemberAccess	padev -> xmax		1315601	0					
ANR	1316088	Identifier	padev		1315601	0					
ANR	1316089	Identifier	xmax		1315601	1					
ANR	1316090	CallExpression	"max ( xrbot , xrtop )"		1315601	1					
ANR	1316091	Callee	max		1315601	0					
ANR	1316092	Identifier	max		1315601	0					
ANR	1316093	ArgumentList	xrbot		1315601	1					
ANR	1316094	Argument	xrbot		1315601	0					
ANR	1316095	Identifier	xrbot		1315601	0					
ANR	1316096	Argument	xrtop		1315601	1					
ANR	1316097	Identifier	xrtop		1315601	0					
ANR	1316098	ElseStatement	else		1315601	0					
ANR	1316099	CompoundStatement		78:11:2474:2474	1315601	0					
ANR	1316100	ExpressionStatement	"padev -> xmin = min ( padev -> xmin , min ( xlbot , xltop ) )"	549:8:14653:14702	1315601	0	True				
ANR	1316101	AssignmentExpression	"padev -> xmin = min ( padev -> xmin , min ( xlbot , xltop ) )"		1315601	0		=			
ANR	1316102	PtrMemberAccess	padev -> xmin		1315601	0					
ANR	1316103	Identifier	padev		1315601	0					
ANR	1316104	Identifier	xmin		1315601	1					
ANR	1316105	CallExpression	"min ( padev -> xmin , min ( xlbot , xltop ) )"		1315601	1					
ANR	1316106	Callee	min		1315601	0					
ANR	1316107	Identifier	min		1315601	0					
ANR	1316108	ArgumentList	padev -> xmin		1315601	1					
ANR	1316109	Argument	padev -> xmin		1315601	0					
ANR	1316110	PtrMemberAccess	padev -> xmin		1315601	0					
ANR	1316111	Identifier	padev		1315601	0					
ANR	1316112	Identifier	xmin		1315601	1					
ANR	1316113	Argument	"min ( xlbot , xltop )"		1315601	1					
ANR	1316114	CallExpression	"min ( xlbot , xltop )"		1315601	0					
ANR	1316115	Callee	min		1315601	0					
ANR	1316116	Identifier	min		1315601	0					
ANR	1316117	ArgumentList	xlbot		1315601	1					
ANR	1316118	Argument	xlbot		1315601	0					
ANR	1316119	Identifier	xlbot		1315601	0					
ANR	1316120	Argument	xltop		1315601	1					
ANR	1316121	Identifier	xltop		1315601	0					
ANR	1316122	ExpressionStatement	"padev -> xmax = max ( padev -> xmax , max ( xrbot , xrtop ) )"	550:8:14712:14761	1315601	1	True				
ANR	1316123	AssignmentExpression	"padev -> xmax = max ( padev -> xmax , max ( xrbot , xrtop ) )"		1315601	0		=			
ANR	1316124	PtrMemberAccess	padev -> xmax		1315601	0					
ANR	1316125	Identifier	padev		1315601	0					
ANR	1316126	Identifier	xmax		1315601	1					
ANR	1316127	CallExpression	"max ( padev -> xmax , max ( xrbot , xrtop ) )"		1315601	1					
ANR	1316128	Callee	max		1315601	0					
ANR	1316129	Identifier	max		1315601	0					
ANR	1316130	ArgumentList	padev -> xmax		1315601	1					
ANR	1316131	Argument	padev -> xmax		1315601	0					
ANR	1316132	PtrMemberAccess	padev -> xmax		1315601	0					
ANR	1316133	Identifier	padev		1315601	0					
ANR	1316134	Identifier	xmax		1315601	1					
ANR	1316135	Argument	"max ( xrbot , xrtop )"		1315601	1					
ANR	1316136	CallExpression	"max ( xrbot , xrtop )"		1315601	0					
ANR	1316137	Callee	max		1315601	0					
ANR	1316138	Identifier	max		1315601	0					
ANR	1316139	ArgumentList	xrbot		1315601	1					
ANR	1316140	Argument	xrbot		1315601	0					
ANR	1316141	Identifier	xrbot		1315601	0					
ANR	1316142	Argument	xrtop		1315601	1					
ANR	1316143	Identifier	xrtop		1315601	0					
ANR	1316144	ReturnStatement	return 0 ;	552:4:14773:14781	1315601	32	True				
ANR	1316145	PrimaryExpression	0		1315601	0					
ANR	1316146	ReturnType	int		1315601	1					
ANR	1316147	Identifier	gx_san_trap_store		1315601	2					
ANR	1316148	ParameterList	"gx_device_spot_analyzer * padev , fixed ybot , fixed ytop , fixed xlbot , fixed xrbot , fixed xltop , fixed xrtop , const segment * l , const segment * r , int dir_l , int dir_r"		1315601	3					
ANR	1316149	Parameter	gx_device_spot_analyzer * padev	468:18:11994:12023	1315601	0	True				
ANR	1316150	ParameterType	gx_device_spot_analyzer *		1315601	0					
ANR	1316151	Identifier	padev		1315601	1					
ANR	1316152	Parameter	fixed ybot	469:4:12030:12039	1315601	1	True				
ANR	1316153	ParameterType	fixed		1315601	0					
ANR	1316154	Identifier	ybot		1315601	1					
ANR	1316155	Parameter	fixed ytop	469:16:12042:12051	1315601	2	True				
ANR	1316156	ParameterType	fixed		1315601	0					
ANR	1316157	Identifier	ytop		1315601	1					
ANR	1316158	Parameter	fixed xlbot	469:28:12054:12064	1315601	3	True				
ANR	1316159	ParameterType	fixed		1315601	0					
ANR	1316160	Identifier	xlbot		1315601	1					
ANR	1316161	Parameter	fixed xrbot	469:41:12067:12077	1315601	4	True				
ANR	1316162	ParameterType	fixed		1315601	0					
ANR	1316163	Identifier	xrbot		1315601	1					
ANR	1316164	Parameter	fixed xltop	469:54:12080:12090	1315601	5	True				
ANR	1316165	ParameterType	fixed		1315601	0					
ANR	1316166	Identifier	xltop		1315601	1					
ANR	1316167	Parameter	fixed xrtop	469:67:12093:12103	1315601	6	True				
ANR	1316168	ParameterType	fixed		1315601	0					
ANR	1316169	Identifier	xrtop		1315601	1					
ANR	1316170	Parameter	const segment * l	470:4:12110:12125	1315601	7	True				
ANR	1316171	ParameterType	const segment *		1315601	0					
ANR	1316172	Identifier	l		1315601	1					
ANR	1316173	Parameter	const segment * r	470:22:12128:12143	1315601	8	True				
ANR	1316174	ParameterType	const segment *		1315601	0					
ANR	1316175	Identifier	r		1315601	1					
ANR	1316176	Parameter	int dir_l	470:40:12146:12154	1315601	9	True				
ANR	1316177	ParameterType	int		1315601	0					
ANR	1316178	Identifier	dir_l		1315601	1					
ANR	1316179	Parameter	int dir_r	470:51:12157:12165	1315601	10	True				
ANR	1316180	ParameterType	int		1315601	0					
ANR	1316181	Identifier	dir_r		1315601	1					
ANR	1316182	CFGEntryNode	ENTRY		1315601		True				
ANR	1316183	CFGExitNode	EXIT		1315601		True				
ANR	1316184	Symbol	* * padev		1315601						
ANR	1316185	Symbol	last -> upper		1315601						
ANR	1316186	Symbol	& padev -> top_band		1315601						
ANR	1316187	Symbol	ytop		1315601						
ANR	1316188	Symbol	padev -> top_band		1315601						
ANR	1316189	Symbol	dir_l		1315601						
ANR	1316190	Symbol	last -> xlbot		1315601						
ANR	1316191	Symbol	last -> xltop		1315601						
ANR	1316192	Symbol	last -> rightmost		1315601						
ANR	1316193	Symbol	ybot		1315601						
ANR	1316194	Symbol	last -> dir_r		1315601						
ANR	1316195	Symbol	last -> dir_l		1315601						
ANR	1316196	Symbol	cont		1315601						
ANR	1316197	Symbol	xlbot		1315601						
ANR	1316198	Symbol	NULL		1315601						
ANR	1316199	Symbol	last		1315601						
ANR	1316200	Symbol	trap_reserve		1315601						
ANR	1316201	Symbol	* padev -> bot_band		1315601						
ANR	1316202	Symbol	padev -> top_band -> ytop		1315601						
ANR	1316203	Symbol	xltop		1315601						
ANR	1316204	Symbol	padev -> bot_current -> next		1315601						
ANR	1316205	Symbol	padev -> xmin		1315601						
ANR	1316206	Symbol	last -> fork		1315601						
ANR	1316207	Symbol	t -> next		1315601						
ANR	1316208	Symbol	* padev		1315601						
ANR	1316209	Symbol	try_unite_last_trap		1315601						
ANR	1316210	Symbol	padev -> bot_current		1315601						
ANR	1316211	Symbol	true		1315601						
ANR	1316212	Symbol	& t -> upper		1315601						
ANR	1316213	Symbol	trap_is_last		1315601						
ANR	1316214	Symbol	padev -> xmax		1315601						
ANR	1316215	Symbol	last -> ytop		1315601						
ANR	1316216	Symbol	max_int		1315601						
ANR	1316217	Symbol	* padev -> bot_current		1315601						
ANR	1316218	Symbol	last -> xrbot		1315601						
ANR	1316219	Symbol	cont -> upper		1315601						
ANR	1316220	Symbol	code		1315601						
ANR	1316221	Symbol	check_band_list		1315601						
ANR	1316222	Symbol	padev -> bot_band -> ytop		1315601						
ANR	1316223	Symbol	padev -> top_band -> rightmost		1315601						
ANR	1316224	Symbol	xrtop		1315601						
ANR	1316225	Symbol	t -> xltop		1315601						
ANR	1316226	Symbol	last -> ybot		1315601						
ANR	1316227	Symbol	cont_reserve		1315601						
ANR	1316228	Symbol	padev		1315601						
ANR	1316229	Symbol	min		1315601						
ANR	1316230	Symbol	* padev -> top_band		1315601						
ANR	1316231	Symbol	last -> xrtop		1315601						
ANR	1316232	Symbol	xrbot		1315601						
ANR	1316233	Symbol	last -> l		1315601						
ANR	1316234	Symbol	cont -> lower		1315601						
ANR	1316235	Symbol	max		1315601						
ANR	1316236	Symbol	false		1315601						
ANR	1316237	Symbol	bot_last		1315601						
ANR	1316238	Symbol	padev -> bot_current -> xrtop		1315601						
ANR	1316239	Symbol	last -> r		1315601						
ANR	1316240	Symbol	last -> leftmost		1315601						
ANR	1316241	Symbol	l		1315601						
ANR	1316242	Symbol	* last		1315601						
ANR	1316243	Symbol	gs_error_VMerror		1315601						
ANR	1316244	Symbol	r		1315601						
ANR	1316245	Symbol	dir_r		1315601						
ANR	1316246	Symbol	padev -> bot_band		1315601						
ANR	1316247	Symbol	band_list_last		1315601						
ANR	1316248	Symbol	t		1315601						
ANR	1316249	Symbol	* cont		1315601						
ANR	1316250	Symbol	last -> visited		1315601						
ANR	1316251	Symbol	* t		1315601						
ANR	1316252	Function	gx_san_end	556:0:14820:14876							
ANR	1316253	FunctionDef	gx_san_end (const gx_device_spot_analyzer * padev)		1316252	0					
ANR	1316254	CompoundStatement		558:0:14874:14876	1316252	0					
ANR	1316255	ReturnType	void		1316252	1					
ANR	1316256	Identifier	gx_san_end		1316252	2					
ANR	1316257	ParameterList	const gx_device_spot_analyzer * padev		1316252	3					
ANR	1316258	Parameter	const gx_device_spot_analyzer * padev	557:11:14836:14871	1316252	0	True				
ANR	1316259	ParameterType	const gx_device_spot_analyzer *		1316252	0					
ANR	1316260	Identifier	padev		1316252	1					
ANR	1316261	CFGEntryNode	ENTRY		1316252		True				
ANR	1316262	CFGExitNode	EXIT		1316252		True				
ANR	1316263	Symbol	padev		1316252						
ANR	1316264	Function	hint_by_trap	561:0:14879:16189							
ANR	1316265	FunctionDef	"hint_by_trap (gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		1316264	0					
ANR	1316266	CompoundStatement		565:0:15081:16189	1316264	0					
ANR	1316267	IdentifierDeclStatement	gx_san_trap * t ;	565:3:15085:15099	1316264	0	True				
ANR	1316268	IdentifierDecl	* t		1316264	0					
ANR	1316269	IdentifierDeclType	gx_san_trap *		1316264	0					
ANR	1316270	Identifier	t		1316264	1					
ANR	1316271	IdentifierDeclStatement	"double w , wd , best_width_diff = ave_width * 10 ;"	566:4:15105:15151	1316264	1	True				
ANR	1316272	IdentifierDecl	w		1316264	0					
ANR	1316273	IdentifierDeclType	double		1316264	0					
ANR	1316274	Identifier	w		1316264	1					
ANR	1316275	IdentifierDecl	wd		1316264	1					
ANR	1316276	IdentifierDeclType	double		1316264	0					
ANR	1316277	Identifier	wd		1316264	1					
ANR	1316278	IdentifierDecl	best_width_diff = ave_width * 10		1316264	2					
ANR	1316279	IdentifierDeclType	double		1316264	0					
ANR	1316280	Identifier	best_width_diff		1316264	1					
ANR	1316281	AssignmentExpression	best_width_diff = ave_width * 10		1316264	2		=			
ANR	1316282	Identifier	best_width_diff		1316264	0					
ANR	1316283	MultiplicativeExpression	ave_width * 10		1316264	1		*			
ANR	1316284	Identifier	ave_width		1316264	0					
ANR	1316285	PrimaryExpression	10		1316264	1					
ANR	1316286	IdentifierDeclStatement	gx_san_trap * best_trap = NULL ;	567:4:15157:15186	1316264	2	True				
ANR	1316287	IdentifierDecl	* best_trap = NULL		1316264	0					
ANR	1316288	IdentifierDeclType	gx_san_trap *		1316264	0					
ANR	1316289	Identifier	best_trap		1316264	1					
ANR	1316290	AssignmentExpression	* best_trap = NULL		1316264	2		=			
ANR	1316291	Identifier	NULL		1316264	0					
ANR	1316292	Identifier	NULL		1316264	1					
ANR	1316293	IdentifierDeclStatement	bool at_top = false ;	568:4:15192:15211	1316264	3	True				
ANR	1316294	IdentifierDecl	at_top = false		1316264	0					
ANR	1316295	IdentifierDeclType	bool		1316264	0					
ANR	1316296	Identifier	at_top		1316264	1					
ANR	1316297	AssignmentExpression	at_top = false		1316264	2		=			
ANR	1316298	Identifier	false		1316264	0					
ANR	1316299	Identifier	false		1316264	1					
ANR	1316300	IdentifierDeclStatement	gx_san_sect sect ;	569:4:15217:15233	1316264	4	True				
ANR	1316301	IdentifierDecl	sect		1316264	0					
ANR	1316302	IdentifierDeclType	gx_san_sect		1316264	0					
ANR	1316303	Identifier	sect		1316264	1					
ANR	1316304	IdentifierDeclStatement	int code ;	570:4:15239:15247	1316264	5	True				
ANR	1316305	IdentifierDecl	code		1316264	0					
ANR	1316306	IdentifierDeclType	int		1316264	0					
ANR	1316307	Identifier	code		1316264	1					
ANR	1316308	ForStatement	for ( t = t0 ; ; t = t -> upper -> upper )		1316264	6					
ANR	1316309	ForInit	t = t0 ;	572:9:15259:15265	1316264	0	True				
ANR	1316310	AssignmentExpression	t = t0		1316264	0		=			
ANR	1316311	Identifier	t		1316264	0					
ANR	1316312	Identifier	t0		1316264	1					
ANR	1316313	AssignmentExpression	t = t -> upper -> upper	572:19:15269:15287	1316264	1	True	=			
ANR	1316314	Identifier	t		1316264	0					
ANR	1316315	PtrMemberAccess	t -> upper -> upper		1316264	1					
ANR	1316316	PtrMemberAccess	t -> upper		1316264	0					
ANR	1316317	Identifier	t		1316264	0					
ANR	1316318	Identifier	upper		1316264	1					
ANR	1316319	Identifier	upper		1316264	1					
ANR	1316320	CompoundStatement		8:40:208:208	1316264	2					
ANR	1316321	ExpressionStatement	w = t -> xrbot - t -> xlbot	573:8:15300:15323	1316264	0	True				
ANR	1316322	AssignmentExpression	w = t -> xrbot - t -> xlbot		1316264	0		=			
ANR	1316323	Identifier	w		1316264	0					
ANR	1316324	AdditiveExpression	t -> xrbot - t -> xlbot		1316264	1		-			
ANR	1316325	PtrMemberAccess	t -> xrbot		1316264	0					
ANR	1316326	Identifier	t		1316264	0					
ANR	1316327	Identifier	xrbot		1316264	1					
ANR	1316328	PtrMemberAccess	t -> xlbot		1316264	1					
ANR	1316329	Identifier	t		1316264	0					
ANR	1316330	Identifier	xlbot		1316264	1					
ANR	1316331	ExpressionStatement	wd = any_abs ( w - ave_width )	574:8:15333:15360	1316264	1	True				
ANR	1316332	AssignmentExpression	wd = any_abs ( w - ave_width )		1316264	0		=			
ANR	1316333	Identifier	wd		1316264	0					
ANR	1316334	CallExpression	any_abs ( w - ave_width )		1316264	1					
ANR	1316335	Callee	any_abs		1316264	0					
ANR	1316336	Identifier	any_abs		1316264	0					
ANR	1316337	ArgumentList	w - ave_width		1316264	1					
ANR	1316338	Argument	w - ave_width		1316264	0					
ANR	1316339	AdditiveExpression	w - ave_width		1316264	0		-			
ANR	1316340	Identifier	w		1316264	0					
ANR	1316341	Identifier	ave_width		1316264	1					
ANR	1316342	IfStatement	if ( w > 0 && wd < best_width_diff )		1316264	2					
ANR	1316343	Condition	w > 0 && wd < best_width_diff	575:12:15374:15402	1316264	0	True				
ANR	1316344	AndExpression	w > 0 && wd < best_width_diff		1316264	0		&&			
ANR	1316345	RelationalExpression	w > 0		1316264	0		>			
ANR	1316346	Identifier	w		1316264	0					
ANR	1316347	PrimaryExpression	0		1316264	1					
ANR	1316348	RelationalExpression	wd < best_width_diff		1316264	1		<			
ANR	1316349	Identifier	wd		1316264	0					
ANR	1316350	Identifier	best_width_diff		1316264	1					
ANR	1316351	CompoundStatement		11:43:323:323	1316264	1					
ANR	1316352	ExpressionStatement	best_width_diff = wd	576:12:15419:15439	1316264	0	True				
ANR	1316353	AssignmentExpression	best_width_diff = wd		1316264	0		=			
ANR	1316354	Identifier	best_width_diff		1316264	0					
ANR	1316355	Identifier	wd		1316264	1					
ANR	1316356	ExpressionStatement	best_trap = t	577:12:15453:15466	1316264	1	True				
ANR	1316357	AssignmentExpression	best_trap = t		1316264	0		=			
ANR	1316358	Identifier	best_trap		1316264	0					
ANR	1316359	Identifier	t		1316264	1					
ANR	1316360	IfStatement	if ( t == t1 )		1316264	3					
ANR	1316361	Condition	t == t1	579:12:15490:15496	1316264	0	True				
ANR	1316362	EqualityExpression	t == t1		1316264	0		==			
ANR	1316363	Identifier	t		1316264	0					
ANR	1316364	Identifier	t1		1316264	1					
ANR	1316365	BreakStatement	break ;	580:12:15511:15516	1316264	1	True				
ANR	1316366	ExpressionStatement	w = t -> xrtop - t -> xltop	582:4:15528:15551	1316264	7	True				
ANR	1316367	AssignmentExpression	w = t -> xrtop - t -> xltop		1316264	0		=			
ANR	1316368	Identifier	w		1316264	0					
ANR	1316369	AdditiveExpression	t -> xrtop - t -> xltop		1316264	1		-			
ANR	1316370	PtrMemberAccess	t -> xrtop		1316264	0					
ANR	1316371	Identifier	t		1316264	0					
ANR	1316372	Identifier	xrtop		1316264	1					
ANR	1316373	PtrMemberAccess	t -> xltop		1316264	1					
ANR	1316374	Identifier	t		1316264	0					
ANR	1316375	Identifier	xltop		1316264	1					
ANR	1316376	ExpressionStatement	wd = any_abs ( w - ave_width )	583:4:15557:15584	1316264	8	True				
ANR	1316377	AssignmentExpression	wd = any_abs ( w - ave_width )		1316264	0		=			
ANR	1316378	Identifier	wd		1316264	0					
ANR	1316379	CallExpression	any_abs ( w - ave_width )		1316264	1					
ANR	1316380	Callee	any_abs		1316264	0					
ANR	1316381	Identifier	any_abs		1316264	0					
ANR	1316382	ArgumentList	w - ave_width		1316264	1					
ANR	1316383	Argument	w - ave_width		1316264	0					
ANR	1316384	AdditiveExpression	w - ave_width		1316264	0		-			
ANR	1316385	Identifier	w		1316264	0					
ANR	1316386	Identifier	ave_width		1316264	1					
ANR	1316387	IfStatement	if ( w > 0 && wd < best_width_diff )		1316264	9					
ANR	1316388	Condition	w > 0 && wd < best_width_diff	584:8:15594:15622	1316264	0	True				
ANR	1316389	AndExpression	w > 0 && wd < best_width_diff		1316264	0		&&			
ANR	1316390	RelationalExpression	w > 0		1316264	0		>			
ANR	1316391	Identifier	w		1316264	0					
ANR	1316392	PrimaryExpression	0		1316264	1					
ANR	1316393	RelationalExpression	wd < best_width_diff		1316264	1		<			
ANR	1316394	Identifier	wd		1316264	0					
ANR	1316395	Identifier	best_width_diff		1316264	1					
ANR	1316396	CompoundStatement		20:39:543:543	1316264	1					
ANR	1316397	ExpressionStatement	best_width_diff = wd	585:8:15635:15655	1316264	0	True				
ANR	1316398	AssignmentExpression	best_width_diff = wd		1316264	0		=			
ANR	1316399	Identifier	best_width_diff		1316264	0					
ANR	1316400	Identifier	wd		1316264	1					
ANR	1316401	ExpressionStatement	best_trap = t	586:8:15665:15678	1316264	1	True				
ANR	1316402	AssignmentExpression	best_trap = t		1316264	0		=			
ANR	1316403	Identifier	best_trap		1316264	0					
ANR	1316404	Identifier	t		1316264	1					
ANR	1316405	ExpressionStatement	at_top = true	587:8:15688:15701	1316264	2	True				
ANR	1316406	AssignmentExpression	at_top = true		1316264	0		=			
ANR	1316407	Identifier	at_top		1316264	0					
ANR	1316408	Identifier	true		1316264	1					
ANR	1316409	IfStatement	if ( best_trap != NULL )		1316264	10					
ANR	1316410	Condition	best_trap != NULL	589:8:15717:15733	1316264	0	True				
ANR	1316411	EqualityExpression	best_trap != NULL		1316264	0		!=			
ANR	1316412	Identifier	best_trap		1316264	0					
ANR	1316413	Identifier	NULL		1316264	1					
ANR	1316414	CompoundStatement		25:27:654:654	1316264	1					
ANR	1316415	ExpressionStatement	sect . yl = at_top ? best_trap -> ytop : best_trap -> ybot	591:8:15807:15859	1316264	0	True				
ANR	1316416	AssignmentExpression	sect . yl = at_top ? best_trap -> ytop : best_trap -> ybot		1316264	0		=			
ANR	1316417	MemberAccess	sect . yl		1316264	0					
ANR	1316418	Identifier	sect		1316264	0					
ANR	1316419	Identifier	yl		1316264	1					
ANR	1316420	ConditionalExpression	at_top ? best_trap -> ytop : best_trap -> ybot		1316264	1					
ANR	1316421	Condition	at_top		1316264	0					
ANR	1316422	Identifier	at_top		1316264	0					
ANR	1316423	PtrMemberAccess	best_trap -> ytop		1316264	1					
ANR	1316424	Identifier	best_trap		1316264	0					
ANR	1316425	Identifier	ytop		1316264	1					
ANR	1316426	PtrMemberAccess	best_trap -> ybot		1316264	2					
ANR	1316427	Identifier	best_trap		1316264	0					
ANR	1316428	Identifier	ybot		1316264	1					
ANR	1316429	ExpressionStatement	sect . yr = sect . yl	592:8:15869:15886	1316264	1	True				
ANR	1316430	AssignmentExpression	sect . yr = sect . yl		1316264	0		=			
ANR	1316431	MemberAccess	sect . yr		1316264	0					
ANR	1316432	Identifier	sect		1316264	0					
ANR	1316433	Identifier	yr		1316264	1					
ANR	1316434	MemberAccess	sect . yl		1316264	1					
ANR	1316435	Identifier	sect		1316264	0					
ANR	1316436	Identifier	yl		1316264	1					
ANR	1316437	ExpressionStatement	sect . xl = at_top ? best_trap -> xltop : best_trap -> xlbot	593:8:15896:15950	1316264	2	True				
ANR	1316438	AssignmentExpression	sect . xl = at_top ? best_trap -> xltop : best_trap -> xlbot		1316264	0		=			
ANR	1316439	MemberAccess	sect . xl		1316264	0					
ANR	1316440	Identifier	sect		1316264	0					
ANR	1316441	Identifier	xl		1316264	1					
ANR	1316442	ConditionalExpression	at_top ? best_trap -> xltop : best_trap -> xlbot		1316264	1					
ANR	1316443	Condition	at_top		1316264	0					
ANR	1316444	Identifier	at_top		1316264	0					
ANR	1316445	PtrMemberAccess	best_trap -> xltop		1316264	1					
ANR	1316446	Identifier	best_trap		1316264	0					
ANR	1316447	Identifier	xltop		1316264	1					
ANR	1316448	PtrMemberAccess	best_trap -> xlbot		1316264	2					
ANR	1316449	Identifier	best_trap		1316264	0					
ANR	1316450	Identifier	xlbot		1316264	1					
ANR	1316451	ExpressionStatement	sect . xr = at_top ? best_trap -> xrtop : best_trap -> xrbot	594:8:15960:16014	1316264	3	True				
ANR	1316452	AssignmentExpression	sect . xr = at_top ? best_trap -> xrtop : best_trap -> xrbot		1316264	0		=			
ANR	1316453	MemberAccess	sect . xr		1316264	0					
ANR	1316454	Identifier	sect		1316264	0					
ANR	1316455	Identifier	xr		1316264	1					
ANR	1316456	ConditionalExpression	at_top ? best_trap -> xrtop : best_trap -> xrbot		1316264	1					
ANR	1316457	Condition	at_top		1316264	0					
ANR	1316458	Identifier	at_top		1316264	0					
ANR	1316459	PtrMemberAccess	best_trap -> xrtop		1316264	1					
ANR	1316460	Identifier	best_trap		1316264	0					
ANR	1316461	Identifier	xrtop		1316264	1					
ANR	1316462	PtrMemberAccess	best_trap -> xrbot		1316264	2					
ANR	1316463	Identifier	best_trap		1316264	0					
ANR	1316464	Identifier	xrbot		1316264	1					
ANR	1316465	ExpressionStatement	sect . l = best_trap -> l	595:8:16024:16045	1316264	4	True				
ANR	1316466	AssignmentExpression	sect . l = best_trap -> l		1316264	0		=			
ANR	1316467	MemberAccess	sect . l		1316264	0					
ANR	1316468	Identifier	sect		1316264	0					
ANR	1316469	Identifier	l		1316264	1					
ANR	1316470	PtrMemberAccess	best_trap -> l		1316264	1					
ANR	1316471	Identifier	best_trap		1316264	0					
ANR	1316472	Identifier	l		1316264	1					
ANR	1316473	ExpressionStatement	sect . r = best_trap -> r	596:8:16055:16076	1316264	5	True				
ANR	1316474	AssignmentExpression	sect . r = best_trap -> r		1316264	0		=			
ANR	1316475	MemberAccess	sect . r		1316264	0					
ANR	1316476	Identifier	sect		1316264	0					
ANR	1316477	Identifier	r		1316264	1					
ANR	1316478	PtrMemberAccess	best_trap -> r		1316264	1					
ANR	1316479	Identifier	best_trap		1316264	0					
ANR	1316480	Identifier	r		1316264	1					
ANR	1316481	ExpressionStatement	"code = handler ( client_data , & sect )"	597:8:16086:16120	1316264	6	True				
ANR	1316482	AssignmentExpression	"code = handler ( client_data , & sect )"		1316264	0		=			
ANR	1316483	Identifier	code		1316264	0					
ANR	1316484	CallExpression	"handler ( client_data , & sect )"		1316264	1					
ANR	1316485	Callee	handler		1316264	0					
ANR	1316486	Identifier	handler		1316264	0					
ANR	1316487	ArgumentList	client_data		1316264	1					
ANR	1316488	Argument	client_data		1316264	0					
ANR	1316489	Identifier	client_data		1316264	0					
ANR	1316490	Argument	& sect		1316264	1					
ANR	1316491	UnaryOperationExpression	& sect		1316264	0					
ANR	1316492	UnaryOperator	&		1316264	0					
ANR	1316493	Identifier	sect		1316264	1					
ANR	1316494	IfStatement	if ( code < 0 )		1316264	7					
ANR	1316495	Condition	code < 0	598:12:16134:16141	1316264	0	True				
ANR	1316496	RelationalExpression	code < 0		1316264	0		<			
ANR	1316497	Identifier	code		1316264	0					
ANR	1316498	PrimaryExpression	0		1316264	1					
ANR	1316499	ReturnStatement	return code ;	599:12:16156:16167	1316264	1	True				
ANR	1316500	Identifier	code		1316264	0					
ANR	1316501	ReturnStatement	return 0 ;	601:4:16179:16187	1316264	11	True				
ANR	1316502	PrimaryExpression	0		1316264	0					
ANR	1316503	ReturnType	static int		1316264	1					
ANR	1316504	Identifier	hint_by_trap		1316264	2					
ANR	1316505	ParameterList	"gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		1316264	3					
ANR	1316506	Parameter	gx_device_spot_analyzer * padev	562:13:14903:14932	1316264	0	True				
ANR	1316507	ParameterType	gx_device_spot_analyzer *		1316264	0					
ANR	1316508	Identifier	padev		1316264	1					
ANR	1316509	Parameter	int side_mask	562:45:14935:14947	1316264	1	True				
ANR	1316510	ParameterType	int		1316264	0					
ANR	1316511	Identifier	side_mask		1316264	1					
ANR	1316512	Parameter	void * client_data	563:4:14954:14970	1316264	2	True				
ANR	1316513	ParameterType	void *		1316264	0					
ANR	1316514	Identifier	client_data		1316264	1					
ANR	1316515	Parameter	gx_san_trap * t0	563:23:14973:14987	1316264	3	True				
ANR	1316516	ParameterType	gx_san_trap *		1316264	0					
ANR	1316517	Identifier	t0		1316264	1					
ANR	1316518	Parameter	gx_san_trap * t1	563:40:14990:15004	1316264	4	True				
ANR	1316519	ParameterType	gx_san_trap *		1316264	0					
ANR	1316520	Identifier	t1		1316264	1					
ANR	1316521	Parameter	double ave_width	563:57:15007:15022	1316264	5	True				
ANR	1316522	ParameterType	double		1316264	0					
ANR	1316523	Identifier	ave_width		1316264	1					
ANR	1316524	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	564:4:15029:15078	1316264	6	True				
ANR	1316525	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		1316264	0					
ANR	1316526	Identifier	handler		1316264	1					
ANR	1316527	CFGEntryNode	ENTRY		1316264		True				
ANR	1316528	CFGExitNode	EXIT		1316264		True				
ANR	1316529	InfiniteForNode	true		1316264		True				
ANR	1316530	Symbol	client_data		1316264						
ANR	1316531	Symbol	t -> xrtop		1316264						
ANR	1316532	Symbol	handler		1316264						
ANR	1316533	Symbol	sect . xr		1316264						
ANR	1316534	Symbol	code		1316264						
ANR	1316535	Symbol	sect . l		1316264						
ANR	1316536	Symbol	t -> xlbot		1316264						
ANR	1316537	Symbol	best_trap -> xltop		1316264						
ANR	1316538	Symbol	best_trap -> ybot		1316264						
ANR	1316539	Symbol	t -> xltop		1316264						
ANR	1316540	Symbol	sect . xl		1316264						
ANR	1316541	Symbol	wd		1316264						
ANR	1316542	Symbol	best_width_diff		1316264						
ANR	1316543	Symbol	padev		1316264						
ANR	1316544	Symbol	best_trap -> xrtop		1316264						
ANR	1316545	Symbol	* * t		1316264						
ANR	1316546	Symbol	best_trap -> ytop		1316264						
ANR	1316547	Symbol	any_abs		1316264						
ANR	1316548	Symbol	side_mask		1316264						
ANR	1316549	Symbol	at_top		1316264						
ANR	1316550	Symbol	t -> xrbot		1316264						
ANR	1316551	Symbol	t -> upper -> upper		1316264						
ANR	1316552	Symbol	sect . yr		1316264						
ANR	1316553	Symbol	NULL		1316264						
ANR	1316554	Symbol	best_trap -> xrbot		1316264						
ANR	1316555	Symbol	false		1316264						
ANR	1316556	Symbol	sect . yl		1316264						
ANR	1316557	Symbol	& sect		1316264						
ANR	1316558	Symbol	best_trap		1316264						
ANR	1316559	Symbol	t -> upper		1316264						
ANR	1316560	Symbol	best_trap -> xlbot		1316264						
ANR	1316561	Symbol	t		1316264						
ANR	1316562	Symbol	sect		1316264						
ANR	1316563	Symbol	best_trap -> l		1316264						
ANR	1316564	Symbol	w		1316264						
ANR	1316565	Symbol	true		1316264						
ANR	1316566	Symbol	best_trap -> r		1316264						
ANR	1316567	Symbol	t0		1316264						
ANR	1316568	Symbol	t1		1316264						
ANR	1316569	Symbol	* t -> upper		1316264						
ANR	1316570	Symbol	sect . r		1316264						
ANR	1316571	Symbol	* t		1316264						
ANR	1316572	Symbol	* best_trap		1316264						
ANR	1316573	Symbol	ave_width		1316264						
ANR	1316574	Function	choose_by_vector	604:0:16192:16732							
ANR	1316575	FunctionDef	"choose_by_vector (fixed x0 , fixed y0 , fixed x1 , fixed y1 , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y)"		1316574	0					
ANR	1316576	CompoundStatement		607:0:16382:16732	1316574	0					
ANR	1316577	IfStatement	if ( y0 != y1 )		1316574	0					
ANR	1316578	Condition	y0 != y1	608:8:16392:16399	1316574	0	True				
ANR	1316579	EqualityExpression	y0 != y1		1316574	0		!=			
ANR	1316580	Identifier	y0		1316574	0					
ANR	1316581	Identifier	y1		1316574	1					
ANR	1316582	CompoundStatement		4:8:93:120	1316574	1					
ANR	1316583	IdentifierDeclStatement	double t = ( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 ) ;	609:8:16412:16466	1316574	0	True				
ANR	1316584	IdentifierDecl	t = ( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 )		1316574	0					
ANR	1316585	IdentifierDeclType	double		1316574	0					
ANR	1316586	Identifier	t		1316574	1					
ANR	1316587	AssignmentExpression	t = ( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 )		1316574	2		=			
ANR	1316588	Identifier	t		1316574	0					
ANR	1316589	MultiplicativeExpression	( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 )		1316574	1		/			
ANR	1316590	CastExpression	( double ) any_abs ( x1 - x0 )		1316574	0					
ANR	1316591	CastTarget	double		1316574	0					
ANR	1316592	CallExpression	any_abs ( x1 - x0 )		1316574	1					
ANR	1316593	Callee	any_abs		1316574	0					
ANR	1316594	Identifier	any_abs		1316574	0					
ANR	1316595	ArgumentList	x1 - x0		1316574	1					
ANR	1316596	Argument	x1 - x0		1316574	0					
ANR	1316597	AdditiveExpression	x1 - x0		1316574	0		-			
ANR	1316598	Identifier	x1		1316574	0					
ANR	1316599	Identifier	x0		1316574	1					
ANR	1316600	CallExpression	any_abs ( y1 - y0 )		1316574	1					
ANR	1316601	Callee	any_abs		1316574	0					
ANR	1316602	Identifier	any_abs		1316574	0					
ANR	1316603	ArgumentList	y1 - y0		1316574	1					
ANR	1316604	Argument	y1 - y0		1316574	0					
ANR	1316605	AdditiveExpression	y1 - y0		1316574	0		-			
ANR	1316606	Identifier	y1		1316574	0					
ANR	1316607	Identifier	y0		1316574	1					
ANR	1316608	IdentifierDeclStatement	double l = any_abs ( y1 - y0 ) ;	610:8:16476:16503	1316574	1	True				
ANR	1316609	IdentifierDecl	l = any_abs ( y1 - y0 )		1316574	0					
ANR	1316610	IdentifierDeclType	double		1316574	0					
ANR	1316611	Identifier	l		1316574	1					
ANR	1316612	AssignmentExpression	l = any_abs ( y1 - y0 )		1316574	2		=			
ANR	1316613	Identifier	l		1316574	0					
ANR	1316614	CallExpression	any_abs ( y1 - y0 )		1316574	1					
ANR	1316615	Callee	any_abs		1316574	0					
ANR	1316616	Identifier	any_abs		1316574	0					
ANR	1316617	ArgumentList	y1 - y0		1316574	1					
ANR	1316618	Argument	y1 - y0		1316574	0					
ANR	1316619	AdditiveExpression	y1 - y0		1316574	0		-			
ANR	1316620	Identifier	y1		1316574	0					
ANR	1316621	Identifier	y0		1316574	1					
ANR	1316622	IfStatement	if ( * slope > t || ( * slope == t && l > * len ) )		1316574	2					
ANR	1316623	Condition	* slope > t || ( * slope == t && l > * len )	612:12:16544:16582	1316574	0	True				
ANR	1316624	OrExpression	* slope > t || ( * slope == t && l > * len )		1316574	0		||			
ANR	1316625	RelationalExpression	* slope > t		1316574	0		>			
ANR	1316626	UnaryOperationExpression	* slope		1316574	0					
ANR	1316627	UnaryOperator	*		1316574	0					
ANR	1316628	Identifier	slope		1316574	1					
ANR	1316629	Identifier	t		1316574	1					
ANR	1316630	AndExpression	* slope == t && l > * len		1316574	1		&&			
ANR	1316631	EqualityExpression	* slope == t		1316574	0		==			
ANR	1316632	UnaryOperationExpression	* slope		1316574	0					
ANR	1316633	UnaryOperator	*		1316574	0					
ANR	1316634	Identifier	slope		1316574	1					
ANR	1316635	Identifier	t		1316574	1					
ANR	1316636	RelationalExpression	l > * len		1316574	1		>			
ANR	1316637	Identifier	l		1316574	0					
ANR	1316638	UnaryOperationExpression	* len		1316574	1					
ANR	1316639	UnaryOperator	*		1316574	0					
ANR	1316640	Identifier	len		1316574	1					
ANR	1316641	CompoundStatement		6:53:202:202	1316574	1					
ANR	1316642	ExpressionStatement	* slope = t	613:12:16599:16609	1316574	0	True				
ANR	1316643	AssignmentExpression	* slope = t		1316574	0		=			
ANR	1316644	UnaryOperationExpression	* slope		1316574	0					
ANR	1316645	UnaryOperator	*		1316574	0					
ANR	1316646	Identifier	slope		1316574	1					
ANR	1316647	Identifier	t		1316574	1					
ANR	1316648	ExpressionStatement	* len = l	614:12:16623:16631	1316574	1	True				
ANR	1316649	AssignmentExpression	* len = l		1316574	0		=			
ANR	1316650	UnaryOperationExpression	* len		1316574	0					
ANR	1316651	UnaryOperator	*		1316574	0					
ANR	1316652	Identifier	len		1316574	1					
ANR	1316653	Identifier	l		1316574	1					
ANR	1316654	ExpressionStatement	* store_segm = s	615:12:16645:16660	1316574	2	True				
ANR	1316655	AssignmentExpression	* store_segm = s		1316574	0		=			
ANR	1316656	UnaryOperationExpression	* store_segm		1316574	0					
ANR	1316657	UnaryOperator	*		1316574	0					
ANR	1316658	Identifier	store_segm		1316574	1					
ANR	1316659	Identifier	s		1316574	1					
ANR	1316660	ExpressionStatement	* store_x = x1	616:12:16674:16687	1316574	3	True				
ANR	1316661	AssignmentExpression	* store_x = x1		1316574	0		=			
ANR	1316662	UnaryOperationExpression	* store_x		1316574	0					
ANR	1316663	UnaryOperator	*		1316574	0					
ANR	1316664	Identifier	store_x		1316574	1					
ANR	1316665	Identifier	x1		1316574	1					
ANR	1316666	ExpressionStatement	* store_y = y1	617:12:16701:16714	1316574	4	True				
ANR	1316667	AssignmentExpression	* store_y = y1		1316574	0		=			
ANR	1316668	UnaryOperationExpression	* store_y		1316574	0					
ANR	1316669	UnaryOperator	*		1316574	0					
ANR	1316670	Identifier	store_y		1316574	1					
ANR	1316671	Identifier	y1		1316574	1					
ANR	1316672	ReturnType	static inline void		1316574	1					
ANR	1316673	Identifier	choose_by_vector		1316574	2					
ANR	1316674	ParameterList	"fixed x0 , fixed y0 , fixed x1 , fixed y1 , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y"		1316574	3					
ANR	1316675	Parameter	fixed x0	605:17:16228:16235	1316574	0	True				
ANR	1316676	ParameterType	fixed		1316574	0					
ANR	1316677	Identifier	x0		1316574	1					
ANR	1316678	Parameter	fixed y0	605:27:16238:16245	1316574	1	True				
ANR	1316679	ParameterType	fixed		1316574	0					
ANR	1316680	Identifier	y0		1316574	1					
ANR	1316681	Parameter	fixed x1	605:37:16248:16255	1316574	2	True				
ANR	1316682	ParameterType	fixed		1316574	0					
ANR	1316683	Identifier	x1		1316574	1					
ANR	1316684	Parameter	fixed y1	605:47:16258:16265	1316574	3	True				
ANR	1316685	ParameterType	fixed		1316574	0					
ANR	1316686	Identifier	y1		1316574	1					
ANR	1316687	Parameter	const segment * s	605:57:16268:16283	1316574	4	True				
ANR	1316688	ParameterType	const segment *		1316574	0					
ANR	1316689	Identifier	s		1316574	1					
ANR	1316690	Parameter	double * slope	606:8:16294:16306	1316574	5	True				
ANR	1316691	ParameterType	double *		1316574	0					
ANR	1316692	Identifier	slope		1316574	1					
ANR	1316693	Parameter	double * len	606:23:16309:16319	1316574	6	True				
ANR	1316694	ParameterType	double *		1316574	0					
ANR	1316695	Identifier	len		1316574	1					
ANR	1316696	Parameter	const segment * * store_segm	606:36:16322:16347	1316574	7	True				
ANR	1316697	ParameterType	const segment * *		1316574	0					
ANR	1316698	Identifier	store_segm		1316574	1					
ANR	1316699	Parameter	fixed * store_x	606:64:16350:16363	1316574	8	True				
ANR	1316700	ParameterType	fixed *		1316574	0					
ANR	1316701	Identifier	store_x		1316574	1					
ANR	1316702	Parameter	fixed * store_y	606:80:16366:16379	1316574	9	True				
ANR	1316703	ParameterType	fixed *		1316574	0					
ANR	1316704	Identifier	store_y		1316574	1					
ANR	1316705	CFGEntryNode	ENTRY		1316574		True				
ANR	1316706	CFGExitNode	EXIT		1316574		True				
ANR	1316707	Symbol	* store_segm		1316574						
ANR	1316708	Symbol	store_segm		1316574						
ANR	1316709	Symbol	store_x		1316574						
ANR	1316710	Symbol	store_y		1316574						
ANR	1316711	Symbol	slope		1316574						
ANR	1316712	Symbol	l		1316574						
ANR	1316713	Symbol	s		1316574						
ANR	1316714	Symbol	len		1316574						
ANR	1316715	Symbol	t		1316574						
ANR	1316716	Symbol	* store_x		1316574						
ANR	1316717	Symbol	* store_y		1316574						
ANR	1316718	Symbol	y0		1316574						
ANR	1316719	Symbol	x0		1316574						
ANR	1316720	Symbol	y1		1316574						
ANR	1316721	Symbol	any_abs		1316574						
ANR	1316722	Symbol	x1		1316574						
ANR	1316723	Symbol	* slope		1316574						
ANR	1316724	Symbol	* len		1316574						
ANR	1316725	Function	choose_by_tangent	622:0:16735:17471							
ANR	1316726	FunctionDef	"choose_by_tangent (const segment * p , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y , fixed ybot , fixed ytop)"		1316725	0					
ANR	1316727	CompoundStatement		626:0:16936:17471	1316725	0					
ANR	1316728	IfStatement	if ( s -> type == s_curve )		1316725	0					
ANR	1316729	Condition	s -> type == s_curve	627:8:16946:16963	1316725	0	True				
ANR	1316730	EqualityExpression	s -> type == s_curve		1316725	0		==			
ANR	1316731	PtrMemberAccess	s -> type		1316725	0					
ANR	1316732	Identifier	s		1316725	0					
ANR	1316733	Identifier	type		1316725	1					
ANR	1316734	Identifier	s_curve		1316725	1					
ANR	1316735	CompoundStatement		3:8:39:88	1316725	1					
ANR	1316736	IdentifierDeclStatement	const curve_segment * c = ( const curve_segment * ) s ;	628:8:16976:17025	1316725	0	True				
ANR	1316737	IdentifierDecl	* c = ( const curve_segment * ) s		1316725	0					
ANR	1316738	IdentifierDeclType	const curve_segment *		1316725	0					
ANR	1316739	Identifier	c		1316725	1					
ANR	1316740	AssignmentExpression	* c = ( const curve_segment * ) s		1316725	2		=			
ANR	1316741	Identifier	c		1316725	0					
ANR	1316742	CastExpression	( const curve_segment * ) s		1316725	1					
ANR	1316743	CastTarget	const curve_segment *		1316725	0					
ANR	1316744	Identifier	s		1316725	1					
ANR	1316745	IfStatement	if ( ybot <= p -> pt . y && p -> pt . y <= ytop )		1316725	1					
ANR	1316746	Condition	ybot <= p -> pt . y && p -> pt . y <= ytop	629:12:17039:17072	1316725	0	True				
ANR	1316747	AndExpression	ybot <= p -> pt . y && p -> pt . y <= ytop		1316725	0		&&			
ANR	1316748	RelationalExpression	ybot <= p -> pt . y		1316725	0		<=			
ANR	1316749	Identifier	ybot		1316725	0					
ANR	1316750	MemberAccess	p -> pt . y		1316725	1					
ANR	1316751	PtrMemberAccess	p -> pt		1316725	0					
ANR	1316752	Identifier	p		1316725	0					
ANR	1316753	Identifier	pt		1316725	1					
ANR	1316754	Identifier	y		1316725	1					
ANR	1316755	RelationalExpression	p -> pt . y <= ytop		1316725	1		<=			
ANR	1316756	MemberAccess	p -> pt . y		1316725	0					
ANR	1316757	PtrMemberAccess	p -> pt		1316725	0					
ANR	1316758	Identifier	p		1316725	0					
ANR	1316759	Identifier	pt		1316725	1					
ANR	1316760	Identifier	y		1316725	1					
ANR	1316761	Identifier	ytop		1316725	1					
ANR	1316762	ExpressionStatement	"choose_by_vector ( c -> p1 . x , c -> p1 . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"	630:12:17087:17184	1316725	1	True				
ANR	1316763	CallExpression	"choose_by_vector ( c -> p1 . x , c -> p1 . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"		1316725	0					
ANR	1316764	Callee	choose_by_vector		1316725	0					
ANR	1316765	Identifier	choose_by_vector		1316725	0					
ANR	1316766	ArgumentList	c -> p1 . x		1316725	1					
ANR	1316767	Argument	c -> p1 . x		1316725	0					
ANR	1316768	MemberAccess	c -> p1 . x		1316725	0					
ANR	1316769	PtrMemberAccess	c -> p1		1316725	0					
ANR	1316770	Identifier	c		1316725	0					
ANR	1316771	Identifier	p1		1316725	1					
ANR	1316772	Identifier	x		1316725	1					
ANR	1316773	Argument	c -> p1 . y		1316725	1					
ANR	1316774	MemberAccess	c -> p1 . y		1316725	0					
ANR	1316775	PtrMemberAccess	c -> p1		1316725	0					
ANR	1316776	Identifier	c		1316725	0					
ANR	1316777	Identifier	p1		1316725	1					
ANR	1316778	Identifier	y		1316725	1					
ANR	1316779	Argument	p -> pt . x		1316725	2					
ANR	1316780	MemberAccess	p -> pt . x		1316725	0					
ANR	1316781	PtrMemberAccess	p -> pt		1316725	0					
ANR	1316782	Identifier	p		1316725	0					
ANR	1316783	Identifier	pt		1316725	1					
ANR	1316784	Identifier	x		1316725	1					
ANR	1316785	Argument	p -> pt . y		1316725	3					
ANR	1316786	MemberAccess	p -> pt . y		1316725	0					
ANR	1316787	PtrMemberAccess	p -> pt		1316725	0					
ANR	1316788	Identifier	p		1316725	0					
ANR	1316789	Identifier	pt		1316725	1					
ANR	1316790	Identifier	y		1316725	1					
ANR	1316791	Argument	s		1316725	4					
ANR	1316792	Identifier	s		1316725	0					
ANR	1316793	Argument	slope		1316725	5					
ANR	1316794	Identifier	slope		1316725	0					
ANR	1316795	Argument	len		1316725	6					
ANR	1316796	Identifier	len		1316725	0					
ANR	1316797	Argument	store_segm		1316725	7					
ANR	1316798	Identifier	store_segm		1316725	0					
ANR	1316799	Argument	store_x		1316725	8					
ANR	1316800	Identifier	store_x		1316725	0					
ANR	1316801	Argument	store_y		1316725	9					
ANR	1316802	Identifier	store_y		1316725	0					
ANR	1316803	IfStatement	if ( ybot <= s -> pt . y && s -> pt . y <= ytop )		1316725	2					
ANR	1316804	Condition	ybot <= s -> pt . y && s -> pt . y <= ytop	631:12:17198:17231	1316725	0	True				
ANR	1316805	AndExpression	ybot <= s -> pt . y && s -> pt . y <= ytop		1316725	0		&&			
ANR	1316806	RelationalExpression	ybot <= s -> pt . y		1316725	0		<=			
ANR	1316807	Identifier	ybot		1316725	0					
ANR	1316808	MemberAccess	s -> pt . y		1316725	1					
ANR	1316809	PtrMemberAccess	s -> pt		1316725	0					
ANR	1316810	Identifier	s		1316725	0					
ANR	1316811	Identifier	pt		1316725	1					
ANR	1316812	Identifier	y		1316725	1					
ANR	1316813	RelationalExpression	s -> pt . y <= ytop		1316725	1		<=			
ANR	1316814	MemberAccess	s -> pt . y		1316725	0					
ANR	1316815	PtrMemberAccess	s -> pt		1316725	0					
ANR	1316816	Identifier	s		1316725	0					
ANR	1316817	Identifier	pt		1316725	1					
ANR	1316818	Identifier	y		1316725	1					
ANR	1316819	Identifier	ytop		1316725	1					
ANR	1316820	ExpressionStatement	"choose_by_vector ( c -> p2 . x , c -> p2 . y , s -> pt . x , s -> pt . y , s , slope , len , store_segm , store_x , store_y )"	632:12:17246:17343	1316725	1	True				
ANR	1316821	CallExpression	"choose_by_vector ( c -> p2 . x , c -> p2 . y , s -> pt . x , s -> pt . y , s , slope , len , store_segm , store_x , store_y )"		1316725	0					
ANR	1316822	Callee	choose_by_vector		1316725	0					
ANR	1316823	Identifier	choose_by_vector		1316725	0					
ANR	1316824	ArgumentList	c -> p2 . x		1316725	1					
ANR	1316825	Argument	c -> p2 . x		1316725	0					
ANR	1316826	MemberAccess	c -> p2 . x		1316725	0					
ANR	1316827	PtrMemberAccess	c -> p2		1316725	0					
ANR	1316828	Identifier	c		1316725	0					
ANR	1316829	Identifier	p2		1316725	1					
ANR	1316830	Identifier	x		1316725	1					
ANR	1316831	Argument	c -> p2 . y		1316725	1					
ANR	1316832	MemberAccess	c -> p2 . y		1316725	0					
ANR	1316833	PtrMemberAccess	c -> p2		1316725	0					
ANR	1316834	Identifier	c		1316725	0					
ANR	1316835	Identifier	p2		1316725	1					
ANR	1316836	Identifier	y		1316725	1					
ANR	1316837	Argument	s -> pt . x		1316725	2					
ANR	1316838	MemberAccess	s -> pt . x		1316725	0					
ANR	1316839	PtrMemberAccess	s -> pt		1316725	0					
ANR	1316840	Identifier	s		1316725	0					
ANR	1316841	Identifier	pt		1316725	1					
ANR	1316842	Identifier	x		1316725	1					
ANR	1316843	Argument	s -> pt . y		1316725	3					
ANR	1316844	MemberAccess	s -> pt . y		1316725	0					
ANR	1316845	PtrMemberAccess	s -> pt		1316725	0					
ANR	1316846	Identifier	s		1316725	0					
ANR	1316847	Identifier	pt		1316725	1					
ANR	1316848	Identifier	y		1316725	1					
ANR	1316849	Argument	s		1316725	4					
ANR	1316850	Identifier	s		1316725	0					
ANR	1316851	Argument	slope		1316725	5					
ANR	1316852	Identifier	slope		1316725	0					
ANR	1316853	Argument	len		1316725	6					
ANR	1316854	Identifier	len		1316725	0					
ANR	1316855	Argument	store_segm		1316725	7					
ANR	1316856	Identifier	store_segm		1316725	0					
ANR	1316857	Argument	store_x		1316725	8					
ANR	1316858	Identifier	store_x		1316725	0					
ANR	1316859	Argument	store_y		1316725	9					
ANR	1316860	Identifier	store_y		1316725	0					
ANR	1316861	ElseStatement	else		1316725	0					
ANR	1316862	CompoundStatement		8:11:419:419	1316725	0					
ANR	1316863	ExpressionStatement	"choose_by_vector ( s -> pt . x , s -> pt . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"	634:8:17366:17463	1316725	0	True				
ANR	1316864	CallExpression	"choose_by_vector ( s -> pt . x , s -> pt . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"		1316725	0					
ANR	1316865	Callee	choose_by_vector		1316725	0					
ANR	1316866	Identifier	choose_by_vector		1316725	0					
ANR	1316867	ArgumentList	s -> pt . x		1316725	1					
ANR	1316868	Argument	s -> pt . x		1316725	0					
ANR	1316869	MemberAccess	s -> pt . x		1316725	0					
ANR	1316870	PtrMemberAccess	s -> pt		1316725	0					
ANR	1316871	Identifier	s		1316725	0					
ANR	1316872	Identifier	pt		1316725	1					
ANR	1316873	Identifier	x		1316725	1					
ANR	1316874	Argument	s -> pt . y		1316725	1					
ANR	1316875	MemberAccess	s -> pt . y		1316725	0					
ANR	1316876	PtrMemberAccess	s -> pt		1316725	0					
ANR	1316877	Identifier	s		1316725	0					
ANR	1316878	Identifier	pt		1316725	1					
ANR	1316879	Identifier	y		1316725	1					
ANR	1316880	Argument	p -> pt . x		1316725	2					
ANR	1316881	MemberAccess	p -> pt . x		1316725	0					
ANR	1316882	PtrMemberAccess	p -> pt		1316725	0					
ANR	1316883	Identifier	p		1316725	0					
ANR	1316884	Identifier	pt		1316725	1					
ANR	1316885	Identifier	x		1316725	1					
ANR	1316886	Argument	p -> pt . y		1316725	3					
ANR	1316887	MemberAccess	p -> pt . y		1316725	0					
ANR	1316888	PtrMemberAccess	p -> pt		1316725	0					
ANR	1316889	Identifier	p		1316725	0					
ANR	1316890	Identifier	pt		1316725	1					
ANR	1316891	Identifier	y		1316725	1					
ANR	1316892	Argument	s		1316725	4					
ANR	1316893	Identifier	s		1316725	0					
ANR	1316894	Argument	slope		1316725	5					
ANR	1316895	Identifier	slope		1316725	0					
ANR	1316896	Argument	len		1316725	6					
ANR	1316897	Identifier	len		1316725	0					
ANR	1316898	Argument	store_segm		1316725	7					
ANR	1316899	Identifier	store_segm		1316725	0					
ANR	1316900	Argument	store_x		1316725	8					
ANR	1316901	Identifier	store_x		1316725	0					
ANR	1316902	Argument	store_y		1316725	9					
ANR	1316903	Identifier	store_y		1316725	0					
ANR	1316904	ReturnType	static inline void		1316725	1					
ANR	1316905	Identifier	choose_by_tangent		1316725	2					
ANR	1316906	ParameterList	"const segment * p , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y , fixed ybot , fixed ytop"		1316725	3					
ANR	1316907	Parameter	const segment * p	623:18:16772:16787	1316725	0	True				
ANR	1316908	ParameterType	const segment *		1316725	0					
ANR	1316909	Identifier	p		1316725	1					
ANR	1316910	Parameter	const segment * s	623:36:16790:16805	1316725	1	True				
ANR	1316911	ParameterType	const segment *		1316725	0					
ANR	1316912	Identifier	s		1316725	1					
ANR	1316913	Parameter	double * slope	624:8:16816:16828	1316725	2	True				
ANR	1316914	ParameterType	double *		1316725	0					
ANR	1316915	Identifier	slope		1316725	1					
ANR	1316916	Parameter	double * len	624:23:16831:16841	1316725	3	True				
ANR	1316917	ParameterType	double *		1316725	0					
ANR	1316918	Identifier	len		1316725	1					
ANR	1316919	Parameter	const segment * * store_segm	624:36:16844:16869	1316725	4	True				
ANR	1316920	ParameterType	const segment * *		1316725	0					
ANR	1316921	Identifier	store_segm		1316725	1					
ANR	1316922	Parameter	fixed * store_x	624:64:16872:16885	1316725	5	True				
ANR	1316923	ParameterType	fixed *		1316725	0					
ANR	1316924	Identifier	store_x		1316725	1					
ANR	1316925	Parameter	fixed * store_y	624:80:16888:16901	1316725	6	True				
ANR	1316926	ParameterType	fixed *		1316725	0					
ANR	1316927	Identifier	store_y		1316725	1					
ANR	1316928	Parameter	fixed ybot	625:8:16912:16921	1316725	7	True				
ANR	1316929	ParameterType	fixed		1316725	0					
ANR	1316930	Identifier	ybot		1316725	1					
ANR	1316931	Parameter	fixed ytop	625:20:16924:16933	1316725	8	True				
ANR	1316932	ParameterType	fixed		1316725	0					
ANR	1316933	Identifier	ytop		1316725	1					
ANR	1316934	CFGEntryNode	ENTRY		1316725		True				
ANR	1316935	CFGExitNode	EXIT		1316725		True				
ANR	1316936	Symbol	ytop		1316725						
ANR	1316937	Symbol	p -> pt		1316725						
ANR	1316938	Symbol	s_curve		1316725						
ANR	1316939	Symbol	len		1316725						
ANR	1316940	Symbol	ybot		1316725						
ANR	1316941	Symbol	s -> pt . x		1316725						
ANR	1316942	Symbol	c -> p2 . y		1316725						
ANR	1316943	Symbol	s -> pt . y		1316725						
ANR	1316944	Symbol	c -> p2 . x		1316725						
ANR	1316945	Symbol	c		1316725						
ANR	1316946	Symbol	store_segm		1316725						
ANR	1316947	Symbol	c -> p1		1316725						
ANR	1316948	Symbol	store_x		1316725						
ANR	1316949	Symbol	store_y		1316725						
ANR	1316950	Symbol	slope		1316725						
ANR	1316951	Symbol	* c		1316725						
ANR	1316952	Symbol	p -> pt . x		1316725						
ANR	1316953	Symbol	c -> p1 . y		1316725						
ANR	1316954	Symbol	p -> pt . y		1316725						
ANR	1316955	Symbol	c -> p1 . x		1316725						
ANR	1316956	Symbol	c -> p2		1316725						
ANR	1316957	Symbol	p		1316725						
ANR	1316958	Symbol	s		1316725						
ANR	1316959	Symbol	s -> pt		1316725						
ANR	1316960	Symbol	* p		1316725						
ANR	1316961	Symbol	* s		1316725						
ANR	1316962	Symbol	s -> type		1316725						
ANR	1316963	Function	upper_neighbour	638:0:17474:17928							
ANR	1316964	FunctionDef	"upper_neighbour (gx_san_trap * t0 , int left_right)"		1316963	0					
ANR	1316965	CompoundStatement		640:0:17544:17928	1316963	0					
ANR	1316966	IdentifierDeclStatement	"gx_san_trap_contact * cont = t0 -> upper , * c0 = cont , * c ;"	641:4:17550:17603	1316963	0	True				
ANR	1316967	IdentifierDecl	* cont = t0 -> upper		1316963	0					
ANR	1316968	IdentifierDeclType	gx_san_trap_contact *		1316963	0					
ANR	1316969	Identifier	cont		1316963	1					
ANR	1316970	AssignmentExpression	* cont = t0 -> upper		1316963	2		=			
ANR	1316971	Identifier	cont		1316963	0					
ANR	1316972	PtrMemberAccess	t0 -> upper		1316963	1					
ANR	1316973	Identifier	t0		1316963	0					
ANR	1316974	Identifier	upper		1316963	1					
ANR	1316975	IdentifierDecl	* c0 = cont		1316963	1					
ANR	1316976	IdentifierDeclType	gx_san_trap_contact *		1316963	0					
ANR	1316977	Identifier	c0		1316963	1					
ANR	1316978	AssignmentExpression	* c0 = cont		1316963	2		=			
ANR	1316979	Identifier	cont		1316963	0					
ANR	1316980	Identifier	cont		1316963	1					
ANR	1316981	IdentifierDecl	* c		1316963	2					
ANR	1316982	IdentifierDeclType	gx_san_trap_contact *		1316963	0					
ANR	1316983	Identifier	c		1316963	1					
ANR	1316984	IdentifierDeclStatement	fixed x = ( ! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot ) ;	642:4:17609:17674	1316963	1	True				
ANR	1316985	IdentifierDecl	x = ( ! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot )		1316963	0					
ANR	1316986	IdentifierDeclType	fixed		1316963	0					
ANR	1316987	Identifier	x		1316963	1					
ANR	1316988	AssignmentExpression	x = ( ! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot )		1316963	2		=			
ANR	1316989	Identifier	x		1316963	0					
ANR	1316990	ConditionalExpression	! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot		1316963	1					
ANR	1316991	Condition	! left_right		1316963	0					
ANR	1316992	UnaryOperationExpression	! left_right		1316963	0					
ANR	1316993	UnaryOperator	!		1316963	0					
ANR	1316994	Identifier	left_right		1316963	1					
ANR	1316995	PtrMemberAccess	cont -> upper -> xlbot		1316963	1					
ANR	1316996	PtrMemberAccess	cont -> upper		1316963	0					
ANR	1316997	Identifier	cont		1316963	0					
ANR	1316998	Identifier	upper		1316963	1					
ANR	1316999	Identifier	xlbot		1316963	1					
ANR	1317000	PtrMemberAccess	cont -> upper -> xrbot		1316963	2					
ANR	1317001	PtrMemberAccess	cont -> upper		1316963	0					
ANR	1317002	Identifier	cont		1316963	0					
ANR	1317003	Identifier	upper		1316963	1					
ANR	1317004	Identifier	xrbot		1316963	1					
ANR	1317005	ForStatement	for ( c = c0 -> next ; c != c0 ; c = c -> next )		1316963	2					
ANR	1317006	ForInit	c = c0 -> next ;	644:9:17686:17698	1316963	0	True				
ANR	1317007	AssignmentExpression	c = c0 -> next		1316963	0		=			
ANR	1317008	Identifier	c		1316963	0					
ANR	1317009	PtrMemberAccess	c0 -> next		1316963	1					
ANR	1317010	Identifier	c0		1316963	0					
ANR	1317011	Identifier	next		1316963	1					
ANR	1317012	Condition	c != c0	644:23:17700:17706	1316963	1	True				
ANR	1317013	EqualityExpression	c != c0		1316963	0		!=			
ANR	1317014	Identifier	c		1316963	0					
ANR	1317015	Identifier	c0		1316963	1					
ANR	1317016	AssignmentExpression	c = c -> next	644:32:17709:17719	1316963	2	True	=			
ANR	1317017	Identifier	c		1316963	0					
ANR	1317018	PtrMemberAccess	c -> next		1316963	1					
ANR	1317019	Identifier	c		1316963	0					
ANR	1317020	Identifier	next		1316963	1					
ANR	1317021	CompoundStatement		6:8:187:247	1316963	3					
ANR	1317022	IdentifierDeclStatement	fixed xx = ( ! left_right ? c -> upper -> xlbot : c -> upper -> xrbot ) ;	645:8:17732:17792	1316963	0	True				
ANR	1317023	IdentifierDecl	xx = ( ! left_right ? c -> upper -> xlbot : c -> upper -> xrbot )		1316963	0					
ANR	1317024	IdentifierDeclType	fixed		1316963	0					
ANR	1317025	Identifier	xx		1316963	1					
ANR	1317026	AssignmentExpression	xx = ( ! left_right ? c -> upper -> xlbot : c -> upper -> xrbot )		1316963	2		=			
ANR	1317027	Identifier	xx		1316963	0					
ANR	1317028	ConditionalExpression	! left_right ? c -> upper -> xlbot : c -> upper -> xrbot		1316963	1					
ANR	1317029	Condition	! left_right		1316963	0					
ANR	1317030	UnaryOperationExpression	! left_right		1316963	0					
ANR	1317031	UnaryOperator	!		1316963	0					
ANR	1317032	Identifier	left_right		1316963	1					
ANR	1317033	PtrMemberAccess	c -> upper -> xlbot		1316963	1					
ANR	1317034	PtrMemberAccess	c -> upper		1316963	0					
ANR	1317035	Identifier	c		1316963	0					
ANR	1317036	Identifier	upper		1316963	1					
ANR	1317037	Identifier	xlbot		1316963	1					
ANR	1317038	PtrMemberAccess	c -> upper -> xrbot		1316963	2					
ANR	1317039	PtrMemberAccess	c -> upper		1316963	0					
ANR	1317040	Identifier	c		1316963	0					
ANR	1317041	Identifier	upper		1316963	1					
ANR	1317042	Identifier	xrbot		1316963	1					
ANR	1317043	IfStatement	if ( ( xx - x ) * ( left_right * 2 - 1 ) > 0 )		1316963	1					
ANR	1317044	Condition	( xx - x ) * ( left_right * 2 - 1 ) > 0	647:12:17807:17841	1316963	0	True				
ANR	1317045	RelationalExpression	( xx - x ) * ( left_right * 2 - 1 ) > 0		1316963	0		>			
ANR	1317046	MultiplicativeExpression	( xx - x ) * ( left_right * 2 - 1 )		1316963	0		*			
ANR	1317047	AdditiveExpression	xx - x		1316963	0		-			
ANR	1317048	Identifier	xx		1316963	0					
ANR	1317049	Identifier	x		1316963	1					
ANR	1317050	AdditiveExpression	left_right * 2 - 1		1316963	1		-			
ANR	1317051	MultiplicativeExpression	left_right * 2		1316963	0		*			
ANR	1317052	Identifier	left_right		1316963	0					
ANR	1317053	PrimaryExpression	2		1316963	1					
ANR	1317054	PrimaryExpression	1		1316963	1					
ANR	1317055	PrimaryExpression	0		1316963	1					
ANR	1317056	CompoundStatement		8:49:299:299	1316963	1					
ANR	1317057	ExpressionStatement	cont = c	648:12:17858:17866	1316963	0	True				
ANR	1317058	AssignmentExpression	cont = c		1316963	0		=			
ANR	1317059	Identifier	cont		1316963	0					
ANR	1317060	Identifier	c		1316963	1					
ANR	1317061	ExpressionStatement	x = xx	649:12:17880:17886	1316963	1	True				
ANR	1317062	AssignmentExpression	x = xx		1316963	0		=			
ANR	1317063	Identifier	x		1316963	0					
ANR	1317064	Identifier	xx		1316963	1					
ANR	1317065	ReturnStatement	return cont -> upper ;	652:4:17908:17926	1316963	3	True				
ANR	1317066	PtrMemberAccess	cont -> upper		1316963	0					
ANR	1317067	Identifier	cont		1316963	0					
ANR	1317068	Identifier	upper		1316963	1					
ANR	1317069	ReturnType	static gx_san_trap *		1316963	1					
ANR	1317070	Identifier	upper_neighbour		1316963	2					
ANR	1317071	ParameterList	"gx_san_trap * t0 , int left_right"		1316963	3					
ANR	1317072	Parameter	gx_san_trap * t0	639:16:17511:17525	1316963	0	True				
ANR	1317073	ParameterType	gx_san_trap *		1316963	0					
ANR	1317074	Identifier	t0		1316963	1					
ANR	1317075	Parameter	int left_right	639:33:17528:17541	1316963	1	True				
ANR	1317076	ParameterType	int		1316963	0					
ANR	1317077	Identifier	left_right		1316963	1					
ANR	1317078	CFGEntryNode	ENTRY		1316963		True				
ANR	1317079	CFGExitNode	EXIT		1316963		True				
ANR	1317080	Symbol	xx		1316963						
ANR	1317081	Symbol	* t0		1316963						
ANR	1317082	Symbol	* c -> upper		1316963						
ANR	1317083	Symbol	cont -> upper		1316963						
ANR	1317084	Symbol	c		1316963						
ANR	1317085	Symbol	cont -> upper -> xlbot		1316963						
ANR	1317086	Symbol	* * c		1316963						
ANR	1317087	Symbol	c -> upper -> xrbot		1316963						
ANR	1317088	Symbol	* * cont		1316963						
ANR	1317089	Symbol	c0		1316963						
ANR	1317090	Symbol	* c		1316963						
ANR	1317091	Symbol	* c0		1316963						
ANR	1317092	Symbol	c -> next		1316963						
ANR	1317093	Symbol	c0 -> next		1316963						
ANR	1317094	Symbol	cont -> upper -> xrbot		1316963						
ANR	1317095	Symbol	* cont		1316963						
ANR	1317096	Symbol	c -> upper -> xlbot		1316963						
ANR	1317097	Symbol	* cont -> upper		1316963						
ANR	1317098	Symbol	x		1316963						
ANR	1317099	Symbol	t0		1316963						
ANR	1317100	Symbol	cont		1316963						
ANR	1317101	Symbol	t0 -> upper		1316963						
ANR	1317102	Symbol	c -> upper		1316963						
ANR	1317103	Symbol	left_right		1316963						
ANR	1317104	Function	hint_by_tangent	655:0:17931:20027							
ANR	1317105	FunctionDef	"hint_by_tangent (gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		1317104	0					
ANR	1317106	CompoundStatement		659:0:18136:20027	1317104	0					
ANR	1317107	IdentifierDeclStatement	gx_san_trap * t ;	659:3:18140:18154	1317104	0	True				
ANR	1317108	IdentifierDecl	* t		1317104	0					
ANR	1317109	IdentifierDeclType	gx_san_trap *		1317104	0					
ANR	1317110	Identifier	t		1317104	1					
ANR	1317111	IdentifierDeclStatement	gx_san_sect sect ;	660:4:18160:18176	1317104	1	True				
ANR	1317112	IdentifierDecl	sect		1317104	0					
ANR	1317113	IdentifierDeclType	gx_san_sect		1317104	0					
ANR	1317114	Identifier	sect		1317104	1					
ANR	1317115	IdentifierDeclStatement	"double slope0 = 0.2 , slope1 = slope0 , len0 = 0 , len1 = 0 ;"	661:4:18182:18238	1317104	2	True				
ANR	1317116	IdentifierDecl	slope0 = 0.2		1317104	0					
ANR	1317117	IdentifierDeclType	double		1317104	0					
ANR	1317118	Identifier	slope0		1317104	1					
ANR	1317119	AssignmentExpression	slope0 = 0.2		1317104	2		=			
ANR	1317120	Identifier	slope0		1317104	0					
ANR	1317121	PrimaryExpression	0.2		1317104	1					
ANR	1317122	IdentifierDecl	slope1 = slope0		1317104	1					
ANR	1317123	IdentifierDeclType	double		1317104	0					
ANR	1317124	Identifier	slope1		1317104	1					
ANR	1317125	AssignmentExpression	slope1 = slope0		1317104	2		=			
ANR	1317126	Identifier	slope0		1317104	0					
ANR	1317127	Identifier	slope0		1317104	1					
ANR	1317128	IdentifierDecl	len0 = 0		1317104	2					
ANR	1317129	IdentifierDeclType	double		1317104	0					
ANR	1317130	Identifier	len0		1317104	1					
ANR	1317131	AssignmentExpression	len0 = 0		1317104	2		=			
ANR	1317132	Identifier	len0		1317104	0					
ANR	1317133	PrimaryExpression	0		1317104	1					
ANR	1317134	IdentifierDecl	len1 = 0		1317104	3					
ANR	1317135	IdentifierDeclType	double		1317104	0					
ANR	1317136	Identifier	len1		1317104	1					
ANR	1317137	AssignmentExpression	len1 = 0		1317104	2		=			
ANR	1317138	Identifier	len1		1317104	0					
ANR	1317139	PrimaryExpression	0		1317104	1					
ANR	1317140	IdentifierDeclStatement	"const segment * s , * p ;"	662:4:18244:18264	1317104	3	True				
ANR	1317141	IdentifierDecl	* s		1317104	0					
ANR	1317142	IdentifierDeclType	const segment *		1317104	0					
ANR	1317143	Identifier	s		1317104	1					
ANR	1317144	IdentifierDecl	* p		1317104	1					
ANR	1317145	IdentifierDeclType	const segment *		1317104	0					
ANR	1317146	Identifier	p		1317104	1					
ANR	1317147	IdentifierDeclStatement	int left_right = ( side_mask & 1 ? 0 : 1 ) ;	663:4:18270:18310	1317104	4	True				
ANR	1317148	IdentifierDecl	left_right = ( side_mask & 1 ? 0 : 1 )		1317104	0					
ANR	1317149	IdentifierDeclType	int		1317104	0					
ANR	1317150	Identifier	left_right		1317104	1					
ANR	1317151	AssignmentExpression	left_right = ( side_mask & 1 ? 0 : 1 )		1317104	2		=			
ANR	1317152	Identifier	left_right		1317104	0					
ANR	1317153	ConditionalExpression	side_mask & 1 ? 0 : 1		1317104	1					
ANR	1317154	Condition	side_mask & 1		1317104	0					
ANR	1317155	BitAndExpression	side_mask & 1		1317104	0		&			
ANR	1317156	Identifier	side_mask		1317104	0					
ANR	1317157	PrimaryExpression	1		1317104	1					
ANR	1317158	PrimaryExpression	0		1317104	1					
ANR	1317159	PrimaryExpression	1		1317104	2					
ANR	1317160	IdentifierDeclStatement	int code ;	664:4:18316:18324	1317104	5	True				
ANR	1317161	IdentifierDecl	code		1317104	0					
ANR	1317162	IdentifierDeclType	int		1317104	0					
ANR	1317163	Identifier	code		1317104	1					
ANR	1317164	ExpressionStatement	sect . l = sect . r = NULL	666:4:18331:18353	1317104	6	True				
ANR	1317165	AssignmentExpression	sect . l = sect . r = NULL		1317104	0		=			
ANR	1317166	MemberAccess	sect . l		1317104	0					
ANR	1317167	Identifier	sect		1317104	0					
ANR	1317168	Identifier	l		1317104	1					
ANR	1317169	AssignmentExpression	sect . r = NULL		1317104	1		=			
ANR	1317170	MemberAccess	sect . r		1317104	0					
ANR	1317171	Identifier	sect		1317104	0					
ANR	1317172	Identifier	r		1317104	1					
ANR	1317173	Identifier	NULL		1317104	1					
ANR	1317174	ExpressionStatement	sect . xl = t0 -> xltop	667:4:18359:18378	1317104	7	True				
ANR	1317175	AssignmentExpression	sect . xl = t0 -> xltop		1317104	0		=			
ANR	1317176	MemberAccess	sect . xl		1317104	0					
ANR	1317177	Identifier	sect		1317104	0					
ANR	1317178	Identifier	xl		1317104	1					
ANR	1317179	PtrMemberAccess	t0 -> xltop		1317104	1					
ANR	1317180	Identifier	t0		1317104	0					
ANR	1317181	Identifier	xltop		1317104	1					
ANR	1317182	ExpressionStatement	sect . xr = t0 -> xrtop	668:4:18408:18427	1317104	8	True				
ANR	1317183	AssignmentExpression	sect . xr = t0 -> xrtop		1317104	0		=			
ANR	1317184	MemberAccess	sect . xr		1317104	0					
ANR	1317185	Identifier	sect		1317104	0					
ANR	1317186	Identifier	xr		1317104	1					
ANR	1317187	PtrMemberAccess	t0 -> xrtop		1317104	1					
ANR	1317188	Identifier	t0		1317104	0					
ANR	1317189	Identifier	xrtop		1317104	1					
ANR	1317190	ExpressionStatement	sect . yl = sect . yr = t0 -> ytop	669:4:18457:18485	1317104	9	True				
ANR	1317191	AssignmentExpression	sect . yl = sect . yr = t0 -> ytop		1317104	0		=			
ANR	1317192	MemberAccess	sect . yl		1317104	0					
ANR	1317193	Identifier	sect		1317104	0					
ANR	1317194	Identifier	yl		1317104	1					
ANR	1317195	AssignmentExpression	sect . yr = t0 -> ytop		1317104	1		=			
ANR	1317196	MemberAccess	sect . yr		1317104	0					
ANR	1317197	Identifier	sect		1317104	0					
ANR	1317198	Identifier	yr		1317104	1					
ANR	1317199	PtrMemberAccess	t0 -> ytop		1317104	1					
ANR	1317200	Identifier	t0		1317104	0					
ANR	1317201	Identifier	ytop		1317104	1					
ANR	1317202	ExpressionStatement	sect . side_mask = side_mask	670:4:18515:18541	1317104	10	True				
ANR	1317203	AssignmentExpression	sect . side_mask = side_mask		1317104	0		=			
ANR	1317204	MemberAccess	sect . side_mask		1317104	0					
ANR	1317205	Identifier	sect		1317104	0					
ANR	1317206	Identifier	side_mask		1317104	1					
ANR	1317207	Identifier	side_mask		1317104	1					
ANR	1317208	ForStatement	"for ( t = t0 ; ; t = upper_neighbour ( t , left_right ) )"		1317104	11					
ANR	1317209	ForInit	t = t0 ;	671:9:18552:18558	1317104	0	True				
ANR	1317210	AssignmentExpression	t = t0		1317104	0		=			
ANR	1317211	Identifier	t		1317104	0					
ANR	1317212	Identifier	t0		1317104	1					
ANR	1317213	AssignmentExpression	"t = upper_neighbour ( t , left_right )"	671:19:18562:18595	1317104	1	True	=			
ANR	1317214	Identifier	t		1317104	0					
ANR	1317215	CallExpression	"upper_neighbour ( t , left_right )"		1317104	1					
ANR	1317216	Callee	upper_neighbour		1317104	0					
ANR	1317217	Identifier	upper_neighbour		1317104	0					
ANR	1317218	ArgumentList	t		1317104	1					
ANR	1317219	Argument	t		1317104	0					
ANR	1317220	Identifier	t		1317104	0					
ANR	1317221	Argument	left_right		1317104	1					
ANR	1317222	Identifier	left_right		1317104	0					
ANR	1317223	CompoundStatement		13:55:461:461	1317104	2					
ANR	1317224	IfStatement	if ( side_mask & 1 )		1317104	0					
ANR	1317225	Condition	side_mask & 1	672:12:18612:18624	1317104	0	True				
ANR	1317226	BitAndExpression	side_mask & 1		1317104	0		&			
ANR	1317227	Identifier	side_mask		1317104	0					
ANR	1317228	PrimaryExpression	1		1317104	1					
ANR	1317229	CompoundStatement		14:27:490:490	1317104	1					
ANR	1317230	ExpressionStatement	s = t -> l	673:12:18641:18649	1317104	0	True				
ANR	1317231	AssignmentExpression	s = t -> l		1317104	0		=			
ANR	1317232	Identifier	s		1317104	0					
ANR	1317233	PtrMemberAccess	t -> l		1317104	1					
ANR	1317234	Identifier	t		1317104	0					
ANR	1317235	Identifier	l		1317104	1					
ANR	1317236	IfStatement	if ( t -> dir_l < 0 )		1317104	1					
ANR	1317237	Condition	t -> dir_l < 0	674:16:18667:18678	1317104	0	True				
ANR	1317238	RelationalExpression	t -> dir_l < 0		1317104	0		<			
ANR	1317239	PtrMemberAccess	t -> dir_l		1317104	0					
ANR	1317240	Identifier	t		1317104	0					
ANR	1317241	Identifier	dir_l		1317104	1					
ANR	1317242	PrimaryExpression	0		1317104	1					
ANR	1317243	ExpressionStatement	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )	675:16:18697:18781	1317104	1	True				
ANR	1317244	AssignmentExpression	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )		1317104	0		=			
ANR	1317245	Identifier	s		1317104	0					
ANR	1317246	ConditionalExpression	s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next		1317104	1					
ANR	1317247	Condition	s -> type == s_line_close		1317104	0					
ANR	1317248	EqualityExpression	s -> type == s_line_close		1317104	0		==			
ANR	1317249	PtrMemberAccess	s -> type		1317104	0					
ANR	1317250	Identifier	s		1317104	0					
ANR	1317251	Identifier	type		1317104	1					
ANR	1317252	Identifier	s_line_close		1317104	1					
ANR	1317253	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub -> next		1317104	1					
ANR	1317254	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub		1317104	0					
ANR	1317255	CastExpression	( const line_close_segment * ) s		1317104	0					
ANR	1317256	CastTarget	const line_close_segment *		1317104	0					
ANR	1317257	Identifier	s		1317104	1					
ANR	1317258	Identifier	sub		1317104	1					
ANR	1317259	Identifier	next		1317104	1					
ANR	1317260	PtrMemberAccess	s -> next		1317104	2					
ANR	1317261	Identifier	s		1317104	0					
ANR	1317262	Identifier	next		1317104	1					
ANR	1317263	ExpressionStatement	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )	676:12:18795:18864	1317104	2	True				
ANR	1317264	AssignmentExpression	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )		1317104	0		=			
ANR	1317265	Identifier	p		1317104	0					
ANR	1317266	ConditionalExpression	s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev		1317104	1					
ANR	1317267	Condition	s -> type == s_start		1317104	0					
ANR	1317268	EqualityExpression	s -> type == s_start		1317104	0		==			
ANR	1317269	PtrMemberAccess	s -> type		1317104	0					
ANR	1317270	Identifier	s		1317104	0					
ANR	1317271	Identifier	type		1317104	1					
ANR	1317272	Identifier	s_start		1317104	1					
ANR	1317273	PtrMemberAccess	( ( const subpath * ) s ) -> last -> prev		1317104	1					
ANR	1317274	PtrMemberAccess	( ( const subpath * ) s ) -> last		1317104	0					
ANR	1317275	CastExpression	( const subpath * ) s		1317104	0					
ANR	1317276	CastTarget	const subpath *		1317104	0					
ANR	1317277	Identifier	s		1317104	1					
ANR	1317278	Identifier	last		1317104	1					
ANR	1317279	Identifier	prev		1317104	1					
ANR	1317280	PtrMemberAccess	s -> prev		1317104	2					
ANR	1317281	Identifier	s		1317104	0					
ANR	1317282	Identifier	prev		1317104	1					
ANR	1317283	ExpressionStatement	"choose_by_tangent ( p , s , & slope0 , & len0 , & sect . l , & sect . xl , & sect . yl , t -> ybot , t -> ytop )"	677:12:18878:18964	1317104	3	True				
ANR	1317284	CallExpression	"choose_by_tangent ( p , s , & slope0 , & len0 , & sect . l , & sect . xl , & sect . yl , t -> ybot , t -> ytop )"		1317104	0					
ANR	1317285	Callee	choose_by_tangent		1317104	0					
ANR	1317286	Identifier	choose_by_tangent		1317104	0					
ANR	1317287	ArgumentList	p		1317104	1					
ANR	1317288	Argument	p		1317104	0					
ANR	1317289	Identifier	p		1317104	0					
ANR	1317290	Argument	s		1317104	1					
ANR	1317291	Identifier	s		1317104	0					
ANR	1317292	Argument	& slope0		1317104	2					
ANR	1317293	UnaryOperationExpression	& slope0		1317104	0					
ANR	1317294	UnaryOperator	&		1317104	0					
ANR	1317295	Identifier	slope0		1317104	1					
ANR	1317296	Argument	& len0		1317104	3					
ANR	1317297	UnaryOperationExpression	& len0		1317104	0					
ANR	1317298	UnaryOperator	&		1317104	0					
ANR	1317299	Identifier	len0		1317104	1					
ANR	1317300	Argument	& sect . l		1317104	4					
ANR	1317301	UnaryOperationExpression	& sect . l		1317104	0					
ANR	1317302	UnaryOperator	&		1317104	0					
ANR	1317303	MemberAccess	sect . l		1317104	1					
ANR	1317304	Identifier	sect		1317104	0					
ANR	1317305	Identifier	l		1317104	1					
ANR	1317306	Argument	& sect . xl		1317104	5					
ANR	1317307	UnaryOperationExpression	& sect . xl		1317104	0					
ANR	1317308	UnaryOperator	&		1317104	0					
ANR	1317309	MemberAccess	sect . xl		1317104	1					
ANR	1317310	Identifier	sect		1317104	0					
ANR	1317311	Identifier	xl		1317104	1					
ANR	1317312	Argument	& sect . yl		1317104	6					
ANR	1317313	UnaryOperationExpression	& sect . yl		1317104	0					
ANR	1317314	UnaryOperator	&		1317104	0					
ANR	1317315	MemberAccess	sect . yl		1317104	1					
ANR	1317316	Identifier	sect		1317104	0					
ANR	1317317	Identifier	yl		1317104	1					
ANR	1317318	Argument	t -> ybot		1317104	7					
ANR	1317319	PtrMemberAccess	t -> ybot		1317104	0					
ANR	1317320	Identifier	t		1317104	0					
ANR	1317321	Identifier	ybot		1317104	1					
ANR	1317322	Argument	t -> ytop		1317104	8					
ANR	1317323	PtrMemberAccess	t -> ytop		1317104	0					
ANR	1317324	Identifier	t		1317104	0					
ANR	1317325	Identifier	ytop		1317104	1					
ANR	1317326	IfStatement	if ( side_mask & 2 )		1317104	1					
ANR	1317327	Condition	side_mask & 2	679:12:18988:19000	1317104	0	True				
ANR	1317328	BitAndExpression	side_mask & 2		1317104	0		&			
ANR	1317329	Identifier	side_mask		1317104	0					
ANR	1317330	PrimaryExpression	2		1317104	1					
ANR	1317331	CompoundStatement		21:27:866:866	1317104	1					
ANR	1317332	ExpressionStatement	s = t -> r	680:12:19017:19025	1317104	0	True				
ANR	1317333	AssignmentExpression	s = t -> r		1317104	0		=			
ANR	1317334	Identifier	s		1317104	0					
ANR	1317335	PtrMemberAccess	t -> r		1317104	1					
ANR	1317336	Identifier	t		1317104	0					
ANR	1317337	Identifier	r		1317104	1					
ANR	1317338	IfStatement	if ( t -> dir_r < 0 )		1317104	1					
ANR	1317339	Condition	t -> dir_r < 0	681:16:19043:19054	1317104	0	True				
ANR	1317340	RelationalExpression	t -> dir_r < 0		1317104	0		<			
ANR	1317341	PtrMemberAccess	t -> dir_r		1317104	0					
ANR	1317342	Identifier	t		1317104	0					
ANR	1317343	Identifier	dir_r		1317104	1					
ANR	1317344	PrimaryExpression	0		1317104	1					
ANR	1317345	ExpressionStatement	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )	682:16:19073:19157	1317104	1	True				
ANR	1317346	AssignmentExpression	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )		1317104	0		=			
ANR	1317347	Identifier	s		1317104	0					
ANR	1317348	ConditionalExpression	s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next		1317104	1					
ANR	1317349	Condition	s -> type == s_line_close		1317104	0					
ANR	1317350	EqualityExpression	s -> type == s_line_close		1317104	0		==			
ANR	1317351	PtrMemberAccess	s -> type		1317104	0					
ANR	1317352	Identifier	s		1317104	0					
ANR	1317353	Identifier	type		1317104	1					
ANR	1317354	Identifier	s_line_close		1317104	1					
ANR	1317355	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub -> next		1317104	1					
ANR	1317356	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub		1317104	0					
ANR	1317357	CastExpression	( const line_close_segment * ) s		1317104	0					
ANR	1317358	CastTarget	const line_close_segment *		1317104	0					
ANR	1317359	Identifier	s		1317104	1					
ANR	1317360	Identifier	sub		1317104	1					
ANR	1317361	Identifier	next		1317104	1					
ANR	1317362	PtrMemberAccess	s -> next		1317104	2					
ANR	1317363	Identifier	s		1317104	0					
ANR	1317364	Identifier	next		1317104	1					
ANR	1317365	ExpressionStatement	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )	683:12:19171:19240	1317104	2	True				
ANR	1317366	AssignmentExpression	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )		1317104	0		=			
ANR	1317367	Identifier	p		1317104	0					
ANR	1317368	ConditionalExpression	s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev		1317104	1					
ANR	1317369	Condition	s -> type == s_start		1317104	0					
ANR	1317370	EqualityExpression	s -> type == s_start		1317104	0		==			
ANR	1317371	PtrMemberAccess	s -> type		1317104	0					
ANR	1317372	Identifier	s		1317104	0					
ANR	1317373	Identifier	type		1317104	1					
ANR	1317374	Identifier	s_start		1317104	1					
ANR	1317375	PtrMemberAccess	( ( const subpath * ) s ) -> last -> prev		1317104	1					
ANR	1317376	PtrMemberAccess	( ( const subpath * ) s ) -> last		1317104	0					
ANR	1317377	CastExpression	( const subpath * ) s		1317104	0					
ANR	1317378	CastTarget	const subpath *		1317104	0					
ANR	1317379	Identifier	s		1317104	1					
ANR	1317380	Identifier	last		1317104	1					
ANR	1317381	Identifier	prev		1317104	1					
ANR	1317382	PtrMemberAccess	s -> prev		1317104	2					
ANR	1317383	Identifier	s		1317104	0					
ANR	1317384	Identifier	prev		1317104	1					
ANR	1317385	ExpressionStatement	"choose_by_tangent ( p , s , & slope1 , & len1 , & sect . r , & sect . xr , & sect . yr , t -> ybot , t -> ytop )"	684:12:19254:19340	1317104	3	True				
ANR	1317386	CallExpression	"choose_by_tangent ( p , s , & slope1 , & len1 , & sect . r , & sect . xr , & sect . yr , t -> ybot , t -> ytop )"		1317104	0					
ANR	1317387	Callee	choose_by_tangent		1317104	0					
ANR	1317388	Identifier	choose_by_tangent		1317104	0					
ANR	1317389	ArgumentList	p		1317104	1					
ANR	1317390	Argument	p		1317104	0					
ANR	1317391	Identifier	p		1317104	0					
ANR	1317392	Argument	s		1317104	1					
ANR	1317393	Identifier	s		1317104	0					
ANR	1317394	Argument	& slope1		1317104	2					
ANR	1317395	UnaryOperationExpression	& slope1		1317104	0					
ANR	1317396	UnaryOperator	&		1317104	0					
ANR	1317397	Identifier	slope1		1317104	1					
ANR	1317398	Argument	& len1		1317104	3					
ANR	1317399	UnaryOperationExpression	& len1		1317104	0					
ANR	1317400	UnaryOperator	&		1317104	0					
ANR	1317401	Identifier	len1		1317104	1					
ANR	1317402	Argument	& sect . r		1317104	4					
ANR	1317403	UnaryOperationExpression	& sect . r		1317104	0					
ANR	1317404	UnaryOperator	&		1317104	0					
ANR	1317405	MemberAccess	sect . r		1317104	1					
ANR	1317406	Identifier	sect		1317104	0					
ANR	1317407	Identifier	r		1317104	1					
ANR	1317408	Argument	& sect . xr		1317104	5					
ANR	1317409	UnaryOperationExpression	& sect . xr		1317104	0					
ANR	1317410	UnaryOperator	&		1317104	0					
ANR	1317411	MemberAccess	sect . xr		1317104	1					
ANR	1317412	Identifier	sect		1317104	0					
ANR	1317413	Identifier	xr		1317104	1					
ANR	1317414	Argument	& sect . yr		1317104	6					
ANR	1317415	UnaryOperationExpression	& sect . yr		1317104	0					
ANR	1317416	UnaryOperator	&		1317104	0					
ANR	1317417	MemberAccess	sect . yr		1317104	1					
ANR	1317418	Identifier	sect		1317104	0					
ANR	1317419	Identifier	yr		1317104	1					
ANR	1317420	Argument	t -> ybot		1317104	7					
ANR	1317421	PtrMemberAccess	t -> ybot		1317104	0					
ANR	1317422	Identifier	t		1317104	0					
ANR	1317423	Identifier	ybot		1317104	1					
ANR	1317424	Argument	t -> ytop		1317104	8					
ANR	1317425	PtrMemberAccess	t -> ytop		1317104	0					
ANR	1317426	Identifier	t		1317104	0					
ANR	1317427	Identifier	ytop		1317104	1					
ANR	1317428	IfStatement	if ( t == t1 )		1317104	2					
ANR	1317429	Condition	t == t1	686:12:19364:19370	1317104	0	True				
ANR	1317430	EqualityExpression	t == t1		1317104	0		==			
ANR	1317431	Identifier	t		1317104	0					
ANR	1317432	Identifier	t1		1317104	1					
ANR	1317433	BreakStatement	break ;	687:12:19385:19390	1317104	1	True				
ANR	1317434	IfStatement	if ( ( sect . l != NULL || ! ( side_mask & 1 ) ) && ( sect . r != NULL || ! ( side_mask & 2 ) ) )		1317104	12					
ANR	1317435	Condition	( sect . l != NULL || ! ( side_mask & 1 ) ) && ( sect . r != NULL || ! ( side_mask & 2 ) )	689:8:19406:19491	1317104	0	True				
ANR	1317436	AndExpression	( sect . l != NULL || ! ( side_mask & 1 ) ) && ( sect . r != NULL || ! ( side_mask & 2 ) )		1317104	0		&&			
ANR	1317437	OrExpression	sect . l != NULL || ! ( side_mask & 1 )		1317104	0		||			
ANR	1317438	EqualityExpression	sect . l != NULL		1317104	0		!=			
ANR	1317439	MemberAccess	sect . l		1317104	0					
ANR	1317440	Identifier	sect		1317104	0					
ANR	1317441	Identifier	l		1317104	1					
ANR	1317442	Identifier	NULL		1317104	1					
ANR	1317443	UnaryOperationExpression	! ( side_mask & 1 )		1317104	1					
ANR	1317444	UnaryOperator	!		1317104	0					
ANR	1317445	BitAndExpression	side_mask & 1		1317104	1		&			
ANR	1317446	Identifier	side_mask		1317104	0					
ANR	1317447	PrimaryExpression	1		1317104	1					
ANR	1317448	OrExpression	sect . r != NULL || ! ( side_mask & 2 )		1317104	1		||			
ANR	1317449	EqualityExpression	sect . r != NULL		1317104	0		!=			
ANR	1317450	MemberAccess	sect . r		1317104	0					
ANR	1317451	Identifier	sect		1317104	0					
ANR	1317452	Identifier	r		1317104	1					
ANR	1317453	Identifier	NULL		1317104	1					
ANR	1317454	UnaryOperationExpression	! ( side_mask & 2 )		1317104	1					
ANR	1317455	UnaryOperator	!		1317104	0					
ANR	1317456	BitAndExpression	side_mask & 2		1317104	1		&			
ANR	1317457	Identifier	side_mask		1317104	0					
ANR	1317458	PrimaryExpression	2		1317104	1					
ANR	1317459	CompoundStatement		33:8:1367:1382	1317104	1					
ANR	1317460	IdentifierDeclStatement	const int w = 3 ;	691:8:19504:19519	1317104	0	True				
ANR	1317461	IdentifierDecl	w = 3		1317104	0					
ANR	1317462	IdentifierDeclType	const int		1317104	0					
ANR	1317463	Identifier	w		1317104	1					
ANR	1317464	AssignmentExpression	w = 3		1317104	2		=			
ANR	1317465	Identifier	w		1317104	0					
ANR	1317466	PrimaryExpression	3		1317104	1					
ANR	1317467	IfStatement	if ( ! ( side_mask & 1 ) )		1317104	1					
ANR	1317468	Condition	! ( side_mask & 1 )	693:12:19534:19549	1317104	0	True				
ANR	1317469	UnaryOperationExpression	! ( side_mask & 1 )		1317104	0					
ANR	1317470	UnaryOperator	!		1317104	0					
ANR	1317471	BitAndExpression	side_mask & 1		1317104	1		&			
ANR	1317472	Identifier	side_mask		1317104	0					
ANR	1317473	PrimaryExpression	1		1317104	1					
ANR	1317474	CompoundStatement		35:30:1415:1415	1317104	1					
ANR	1317475	IfStatement	if ( sect . xr < ( padev -> xmin * w + padev -> xmax ) / ( w + 1 ) )		1317104	0					
ANR	1317476	Condition	sect . xr < ( padev -> xmin * w + padev -> xmax ) / ( w + 1 )	694:16:19570:19620	1317104	0	True				
ANR	1317477	RelationalExpression	sect . xr < ( padev -> xmin * w + padev -> xmax ) / ( w + 1 )		1317104	0		<			
ANR	1317478	MemberAccess	sect . xr		1317104	0					
ANR	1317479	Identifier	sect		1317104	0					
ANR	1317480	Identifier	xr		1317104	1					
ANR	1317481	MultiplicativeExpression	( padev -> xmin * w + padev -> xmax ) / ( w + 1 )		1317104	1		/			
ANR	1317482	AdditiveExpression	padev -> xmin * w + padev -> xmax		1317104	0		+			
ANR	1317483	MultiplicativeExpression	padev -> xmin * w		1317104	0		*			
ANR	1317484	PtrMemberAccess	padev -> xmin		1317104	0					
ANR	1317485	Identifier	padev		1317104	0					
ANR	1317486	Identifier	xmin		1317104	1					
ANR	1317487	Identifier	w		1317104	1					
ANR	1317488	PtrMemberAccess	padev -> xmax		1317104	1					
ANR	1317489	Identifier	padev		1317104	0					
ANR	1317490	Identifier	xmax		1317104	1					
ANR	1317491	AdditiveExpression	w + 1		1317104	1		+			
ANR	1317492	Identifier	w		1317104	0					
ANR	1317493	PrimaryExpression	1		1317104	1					
ANR	1317494	ReturnStatement	return 0 ;	695:16:19639:19647	1317104	1	True				
ANR	1317495	PrimaryExpression	0		1317104	0					
ANR	1317496	ExpressionStatement	sect . xl = padev -> xmin - 1000	696:12:19661:19689	1317104	1	True				
ANR	1317497	AssignmentExpression	sect . xl = padev -> xmin - 1000		1317104	0		=			
ANR	1317498	MemberAccess	sect . xl		1317104	0					
ANR	1317499	Identifier	sect		1317104	0					
ANR	1317500	Identifier	xl		1317104	1					
ANR	1317501	AdditiveExpression	padev -> xmin - 1000		1317104	1		-			
ANR	1317502	PtrMemberAccess	padev -> xmin		1317104	0					
ANR	1317503	Identifier	padev		1317104	0					
ANR	1317504	Identifier	xmin		1317104	1					
ANR	1317505	PrimaryExpression	1000		1317104	1					
ANR	1317506	IfStatement	if ( ! ( side_mask & 2 ) )		1317104	2					
ANR	1317507	Condition	! ( side_mask & 2 )	698:12:19731:19746	1317104	0	True				
ANR	1317508	UnaryOperationExpression	! ( side_mask & 2 )		1317104	0					
ANR	1317509	UnaryOperator	!		1317104	0					
ANR	1317510	BitAndExpression	side_mask & 2		1317104	1		&			
ANR	1317511	Identifier	side_mask		1317104	0					
ANR	1317512	PrimaryExpression	2		1317104	1					
ANR	1317513	CompoundStatement		40:30:1612:1612	1317104	1					
ANR	1317514	IfStatement	if ( sect . xl > ( padev -> xmax * w + padev -> xmin ) / ( w + 1 ) )		1317104	0					
ANR	1317515	Condition	sect . xl > ( padev -> xmax * w + padev -> xmin ) / ( w + 1 )	699:16:19767:19817	1317104	0	True				
ANR	1317516	RelationalExpression	sect . xl > ( padev -> xmax * w + padev -> xmin ) / ( w + 1 )		1317104	0		>			
ANR	1317517	MemberAccess	sect . xl		1317104	0					
ANR	1317518	Identifier	sect		1317104	0					
ANR	1317519	Identifier	xl		1317104	1					
ANR	1317520	MultiplicativeExpression	( padev -> xmax * w + padev -> xmin ) / ( w + 1 )		1317104	1		/			
ANR	1317521	AdditiveExpression	padev -> xmax * w + padev -> xmin		1317104	0		+			
ANR	1317522	MultiplicativeExpression	padev -> xmax * w		1317104	0		*			
ANR	1317523	PtrMemberAccess	padev -> xmax		1317104	0					
ANR	1317524	Identifier	padev		1317104	0					
ANR	1317525	Identifier	xmax		1317104	1					
ANR	1317526	Identifier	w		1317104	1					
ANR	1317527	PtrMemberAccess	padev -> xmin		1317104	1					
ANR	1317528	Identifier	padev		1317104	0					
ANR	1317529	Identifier	xmin		1317104	1					
ANR	1317530	AdditiveExpression	w + 1		1317104	1		+			
ANR	1317531	Identifier	w		1317104	0					
ANR	1317532	PrimaryExpression	1		1317104	1					
ANR	1317533	ReturnStatement	return 0 ;	700:16:19836:19844	1317104	1	True				
ANR	1317534	PrimaryExpression	0		1317104	0					
ANR	1317535	ExpressionStatement	sect . xr = padev -> xmax + 1000	701:12:19858:19886	1317104	1	True				
ANR	1317536	AssignmentExpression	sect . xr = padev -> xmax + 1000		1317104	0		=			
ANR	1317537	MemberAccess	sect . xr		1317104	0					
ANR	1317538	Identifier	sect		1317104	0					
ANR	1317539	Identifier	xr		1317104	1					
ANR	1317540	AdditiveExpression	padev -> xmax + 1000		1317104	1		+			
ANR	1317541	PtrMemberAccess	padev -> xmax		1317104	0					
ANR	1317542	Identifier	padev		1317104	0					
ANR	1317543	Identifier	xmax		1317104	1					
ANR	1317544	PrimaryExpression	1000		1317104	1					
ANR	1317545	ExpressionStatement	"code = handler ( client_data , & sect )"	703:8:19924:19958	1317104	3	True				
ANR	1317546	AssignmentExpression	"code = handler ( client_data , & sect )"		1317104	0		=			
ANR	1317547	Identifier	code		1317104	0					
ANR	1317548	CallExpression	"handler ( client_data , & sect )"		1317104	1					
ANR	1317549	Callee	handler		1317104	0					
ANR	1317550	Identifier	handler		1317104	0					
ANR	1317551	ArgumentList	client_data		1317104	1					
ANR	1317552	Argument	client_data		1317104	0					
ANR	1317553	Identifier	client_data		1317104	0					
ANR	1317554	Argument	& sect		1317104	1					
ANR	1317555	UnaryOperationExpression	& sect		1317104	0					
ANR	1317556	UnaryOperator	&		1317104	0					
ANR	1317557	Identifier	sect		1317104	1					
ANR	1317558	IfStatement	if ( code < 0 )		1317104	4					
ANR	1317559	Condition	code < 0	704:12:19972:19979	1317104	0	True				
ANR	1317560	RelationalExpression	code < 0		1317104	0		<			
ANR	1317561	Identifier	code		1317104	0					
ANR	1317562	PrimaryExpression	0		1317104	1					
ANR	1317563	ReturnStatement	return code ;	705:12:19994:20005	1317104	1	True				
ANR	1317564	Identifier	code		1317104	0					
ANR	1317565	ReturnStatement	return 0 ;	707:4:20017:20025	1317104	13	True				
ANR	1317566	PrimaryExpression	0		1317104	0					
ANR	1317567	ReturnType	static int		1317104	1					
ANR	1317568	Identifier	hint_by_tangent		1317104	2					
ANR	1317569	ParameterList	"gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		1317104	3					
ANR	1317570	Parameter	gx_device_spot_analyzer * padev	656:16:17958:17987	1317104	0	True				
ANR	1317571	ParameterType	gx_device_spot_analyzer *		1317104	0					
ANR	1317572	Identifier	padev		1317104	1					
ANR	1317573	Parameter	int side_mask	656:48:17990:18002	1317104	1	True				
ANR	1317574	ParameterType	int		1317104	0					
ANR	1317575	Identifier	side_mask		1317104	1					
ANR	1317576	Parameter	void * client_data	657:4:18009:18025	1317104	2	True				
ANR	1317577	ParameterType	void *		1317104	0					
ANR	1317578	Identifier	client_data		1317104	1					
ANR	1317579	Parameter	gx_san_trap * t0	657:23:18028:18042	1317104	3	True				
ANR	1317580	ParameterType	gx_san_trap *		1317104	0					
ANR	1317581	Identifier	t0		1317104	1					
ANR	1317582	Parameter	gx_san_trap * t1	657:40:18045:18059	1317104	4	True				
ANR	1317583	ParameterType	gx_san_trap *		1317104	0					
ANR	1317584	Identifier	t1		1317104	1					
ANR	1317585	Parameter	double ave_width	657:57:18062:18077	1317104	5	True				
ANR	1317586	ParameterType	double		1317104	0					
ANR	1317587	Identifier	ave_width		1317104	1					
ANR	1317588	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	658:4:18084:18133	1317104	6	True				
ANR	1317589	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		1317104	0					
ANR	1317590	Identifier	handler		1317104	1					
ANR	1317591	CFGEntryNode	ENTRY		1317104		True				
ANR	1317592	CFGExitNode	EXIT		1317104		True				
ANR	1317593	InfiniteForNode	true		1317104		True				
ANR	1317594	Symbol	client_data		1317104						
ANR	1317595	Symbol	& sect . yl		1317104						
ANR	1317596	Symbol	handler		1317104						
ANR	1317597	Symbol	sect . xr		1317104						
ANR	1317598	Symbol	sect . side_mask		1317104						
ANR	1317599	Symbol	slope1		1317104						
ANR	1317600	Symbol	s_start		1317104						
ANR	1317601	Symbol	& sect . l		1317104						
ANR	1317602	Symbol	slope0		1317104						
ANR	1317603	Symbol	& sect . yr		1317104						
ANR	1317604	Symbol	& slope0		1317104						
ANR	1317605	Symbol	len0		1317104						
ANR	1317606	Symbol	s -> prev		1317104						
ANR	1317607	Symbol	sect . xl		1317104						
ANR	1317608	Symbol	len1		1317104						
ANR	1317609	Symbol	& sect . r		1317104						
ANR	1317610	Symbol	( ( const line_close_segment * ) s ) -> sub -> next		1317104						
ANR	1317611	Symbol	side_mask		1317104						
ANR	1317612	Symbol	t0 -> xltop		1317104						
ANR	1317613	Symbol	NULL		1317104						
ANR	1317614	Symbol	t -> l		1317104						
ANR	1317615	Symbol	t -> r		1317104						
ANR	1317616	Symbol	s_line_close		1317104						
ANR	1317617	Symbol	& sect		1317104						
ANR	1317618	Symbol	padev -> xmin		1317104						
ANR	1317619	Symbol	* padev		1317104						
ANR	1317620	Symbol	& slope1		1317104						
ANR	1317621	Symbol	& len0		1317104						
ANR	1317622	Symbol	( ( const subpath * ) s ) -> last -> prev		1317104						
ANR	1317623	Symbol	& len1		1317104						
ANR	1317624	Symbol	t0		1317104						
ANR	1317625	Symbol	t1		1317104						
ANR	1317626	Symbol	s -> type		1317104						
ANR	1317627	Symbol	padev -> xmax		1317104						
ANR	1317628	Symbol	code		1317104						
ANR	1317629	Symbol	sect . l		1317104						
ANR	1317630	Symbol	t -> dir_r		1317104						
ANR	1317631	Symbol	s -> next		1317104						
ANR	1317632	Symbol	( ( const line_close_segment * ) s ) -> sub		1317104						
ANR	1317633	Symbol	t -> dir_l		1317104						
ANR	1317634	Symbol	padev		1317104						
ANR	1317635	Symbol	* * s		1317104						
ANR	1317636	Symbol	* ( ( const line_close_segment * ) s ) -> sub		1317104						
ANR	1317637	Symbol	sect . yr		1317104						
ANR	1317638	Symbol	* t0		1317104						
ANR	1317639	Symbol	& sect . xl		1317104						
ANR	1317640	Symbol	t0 -> ytop		1317104						
ANR	1317641	Symbol	t0 -> xrtop		1317104						
ANR	1317642	Symbol	& sect . xr		1317104						
ANR	1317643	Symbol	* ( ( const subpath * ) s ) -> last		1317104						
ANR	1317644	Symbol	upper_neighbour		1317104						
ANR	1317645	Symbol	sect . yl		1317104						
ANR	1317646	Symbol	p		1317104						
ANR	1317647	Symbol	s		1317104						
ANR	1317648	Symbol	t		1317104						
ANR	1317649	Symbol	sect		1317104						
ANR	1317650	Symbol	t -> ytop		1317104						
ANR	1317651	Symbol	w		1317104						
ANR	1317652	Symbol	t -> ybot		1317104						
ANR	1317653	Symbol	( ( const subpath * ) s ) -> last		1317104						
ANR	1317654	Symbol	sect . r		1317104						
ANR	1317655	Symbol	* s		1317104						
ANR	1317656	Symbol	left_right		1317104						
ANR	1317657	Symbol	* t		1317104						
ANR	1317658	Symbol	ave_width		1317104						
ANR	1317659	Function	gx_san_generate_stems_aux	711:0:20052:23799							
ANR	1317660	FunctionDef	"gx_san_generate_stems_aux (gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		1317659	0					
ANR	1317661	CompoundStatement		715:0:20244:23799	1317659	0					
ANR	1317662	IdentifierDeclStatement	gx_san_trap * t0 ;	716:4:20250:20265	1317659	0	True				
ANR	1317663	IdentifierDecl	* t0		1317659	0					
ANR	1317664	IdentifierDeclType	gx_san_trap *		1317659	0					
ANR	1317665	Identifier	t0		1317659	1					
ANR	1317666	IdentifierDeclStatement	const bool by_trap = false ;	717:4:20271:20297	1317659	1	True				
ANR	1317667	IdentifierDecl	by_trap = false		1317659	0					
ANR	1317668	IdentifierDeclType	const bool		1317659	0					
ANR	1317669	Identifier	by_trap		1317659	1					
ANR	1317670	AssignmentExpression	by_trap = false		1317659	2		=			
ANR	1317671	Identifier	false		1317659	0					
ANR	1317672	Identifier	false		1317659	1					
ANR	1317673	IdentifierDeclStatement	int k ;	718:4:20303:20308	1317659	2	True				
ANR	1317674	IdentifierDecl	k		1317659	0					
ANR	1317675	IdentifierDeclType	int		1317659	0					
ANR	1317676	Identifier	k		1317659	1					
ANR	1317677	ForStatement	for ( k = 0 ; overall_hints && k < 2 ; k ++ )		1317659	3					
ANR	1317678	ForInit	k = 0 ;	726:9:20554:20559	1317659	0	True				
ANR	1317679	AssignmentExpression	k = 0		1317659	0		=			
ANR	1317680	Identifier	k		1317659	0					
ANR	1317681	PrimaryExpression	0		1317659	1					
ANR	1317682	Condition	overall_hints && k < 2	726:16:20561:20582	1317659	1	True				
ANR	1317683	AndExpression	overall_hints && k < 2		1317659	0		&&			
ANR	1317684	Identifier	overall_hints		1317659	0					
ANR	1317685	RelationalExpression	k < 2		1317659	1		<			
ANR	1317686	Identifier	k		1317659	0					
ANR	1317687	PrimaryExpression	2		1317659	1					
ANR	1317688	PostIncDecOperationExpression	k ++	726:40:20585:20587	1317659	2	True				
ANR	1317689	Identifier	k		1317659	0					
ANR	1317690	IncDec	++		1317659	1					
ANR	1317691	CompoundStatement		12:45:345:345	1317659	3					
ANR	1317692	ForStatement	for ( t0 = padev -> trap_buffer ; t0 != padev -> trap_free ; t0 = t0 -> link )		1317659	0					
ANR	1317693	ForInit	t0 = padev -> trap_buffer ;	727:13:20624:20647	1317659	0	True				
ANR	1317694	AssignmentExpression	t0 = padev -> trap_buffer		1317659	0		=			
ANR	1317695	Identifier	t0		1317659	0					
ANR	1317696	PtrMemberAccess	padev -> trap_buffer		1317659	1					
ANR	1317697	Identifier	padev		1317659	0					
ANR	1317698	Identifier	trap_buffer		1317659	1					
ANR	1317699	Condition	t0 != padev -> trap_free	727:38:20649:20670	1317659	1	True				
ANR	1317700	EqualityExpression	t0 != padev -> trap_free		1317659	0		!=			
ANR	1317701	Identifier	t0		1317659	0					
ANR	1317702	PtrMemberAccess	padev -> trap_free		1317659	1					
ANR	1317703	Identifier	padev		1317659	0					
ANR	1317704	Identifier	trap_free		1317659	1					
ANR	1317705	AssignmentExpression	t0 = t0 -> link	727:62:20673:20685	1317659	2	True	=			
ANR	1317706	Identifier	t0		1317659	0					
ANR	1317707	PtrMemberAccess	t0 -> link		1317659	1					
ANR	1317708	Identifier	t0		1317659	0					
ANR	1317709	Identifier	link		1317659	1					
ANR	1317710	CompoundStatement		13:77:443:443	1317659	3					
ANR	1317711	IfStatement	if ( ! t0 -> visited && ( ! k ? t0 -> leftmost : t0 -> rightmost ) )		1317659	0					
ANR	1317712	Condition	! t0 -> visited && ( ! k ? t0 -> leftmost : t0 -> rightmost )	728:16:20706:20756	1317659	0	True				
ANR	1317713	AndExpression	! t0 -> visited && ( ! k ? t0 -> leftmost : t0 -> rightmost )		1317659	0		&&			
ANR	1317714	UnaryOperationExpression	! t0 -> visited		1317659	0					
ANR	1317715	UnaryOperator	!		1317659	0					
ANR	1317716	PtrMemberAccess	t0 -> visited		1317659	1					
ANR	1317717	Identifier	t0		1317659	0					
ANR	1317718	Identifier	visited		1317659	1					
ANR	1317719	ConditionalExpression	! k ? t0 -> leftmost : t0 -> rightmost		1317659	1					
ANR	1317720	Condition	! k		1317659	0					
ANR	1317721	UnaryOperationExpression	! k		1317659	0					
ANR	1317722	UnaryOperator	!		1317659	0					
ANR	1317723	Identifier	k		1317659	1					
ANR	1317724	PtrMemberAccess	t0 -> leftmost		1317659	1					
ANR	1317725	Identifier	t0		1317659	0					
ANR	1317726	Identifier	leftmost		1317659	1					
ANR	1317727	PtrMemberAccess	t0 -> rightmost		1317659	2					
ANR	1317728	Identifier	t0		1317659	0					
ANR	1317729	Identifier	rightmost		1317659	1					
ANR	1317730	CompoundStatement		14:69:514:514	1317659	1					
ANR	1317731	IfStatement	"if ( is_stem_boundaries ( t0 , 1 << k ) )"		1317659	0					
ANR	1317732	Condition	"is_stem_boundaries ( t0 , 1 << k )"	729:20:20781:20810	1317659	0	True				
ANR	1317733	CallExpression	"is_stem_boundaries ( t0 , 1 << k )"		1317659	0					
ANR	1317734	Callee	is_stem_boundaries		1317659	0					
ANR	1317735	Identifier	is_stem_boundaries		1317659	0					
ANR	1317736	ArgumentList	t0		1317659	1					
ANR	1317737	Argument	t0		1317659	0					
ANR	1317738	Identifier	t0		1317659	0					
ANR	1317739	Argument	1 << k		1317659	1					
ANR	1317740	ShiftExpression	1 << k		1317659	0		<<			
ANR	1317741	PrimaryExpression	1		1317659	0					
ANR	1317742	Identifier	k		1317659	1					
ANR	1317743	CompoundStatement		17:20:651:659	1317659	1					
ANR	1317744	IdentifierDeclStatement	"gx_san_trap * t1 = t0 , * tt = t0 , * t = t0 ;"	730:20:20835:20874	1317659	0	True				
ANR	1317745	IdentifierDecl	* t1 = t0		1317659	0					
ANR	1317746	IdentifierDeclType	gx_san_trap *		1317659	0					
ANR	1317747	Identifier	t1		1317659	1					
ANR	1317748	AssignmentExpression	* t1 = t0		1317659	2		=			
ANR	1317749	Identifier	t0		1317659	0					
ANR	1317750	Identifier	t0		1317659	1					
ANR	1317751	IdentifierDecl	* tt = t0		1317659	1					
ANR	1317752	IdentifierDeclType	gx_san_trap *		1317659	0					
ANR	1317753	Identifier	tt		1317659	1					
ANR	1317754	AssignmentExpression	* tt = t0		1317659	2		=			
ANR	1317755	Identifier	t0		1317659	0					
ANR	1317756	Identifier	t0		1317659	1					
ANR	1317757	IdentifierDecl	* t = t0		1317659	2					
ANR	1317758	IdentifierDeclType	gx_san_trap *		1317659	0					
ANR	1317759	Identifier	t		1317659	1					
ANR	1317760	AssignmentExpression	* t = t0		1317659	2		=			
ANR	1317761	Identifier	t0		1317659	0					
ANR	1317762	Identifier	t0		1317659	1					
ANR	1317763	IdentifierDeclStatement	int code ;	731:20:20896:20904	1317659	1	True				
ANR	1317764	IdentifierDecl	code		1317659	0					
ANR	1317765	IdentifierDeclType	int		1317659	0					
ANR	1317766	Identifier	code		1317659	1					
ANR	1317767	WhileStatement	while ( t -> upper != NULL )		1317659	2					
ANR	1317768	Condition	t -> upper != NULL	733:27:20934:20949	1317659	0	True				
ANR	1317769	EqualityExpression	t -> upper != NULL		1317659	0		!=			
ANR	1317770	PtrMemberAccess	t -> upper		1317659	0					
ANR	1317771	Identifier	t		1317659	0					
ANR	1317772	Identifier	upper		1317659	1					
ANR	1317773	Identifier	NULL		1317659	1					
ANR	1317774	CompoundStatement		19:45:707:707	1317659	1					
ANR	1317775	ExpressionStatement	"t = upper_neighbour ( tt , k )"	734:24:20978:21004	1317659	0	True				
ANR	1317776	AssignmentExpression	"t = upper_neighbour ( tt , k )"		1317659	0		=			
ANR	1317777	Identifier	t		1317659	0					
ANR	1317778	CallExpression	"upper_neighbour ( tt , k )"		1317659	1					
ANR	1317779	Callee	upper_neighbour		1317659	0					
ANR	1317780	Identifier	upper_neighbour		1317659	0					
ANR	1317781	ArgumentList	tt		1317659	1					
ANR	1317782	Argument	tt		1317659	0					
ANR	1317783	Identifier	tt		1317659	0					
ANR	1317784	Argument	k		1317659	1					
ANR	1317785	Identifier	k		1317659	0					
ANR	1317786	IfStatement	if ( ! k ? ! t -> leftmost : ! t -> rightmost )		1317659	1					
ANR	1317787	Condition	! k ? ! t -> leftmost : ! t -> rightmost	735:28:21034:21066	1317659	0	True				
ANR	1317788	ConditionalExpression	! k ? ! t -> leftmost : ! t -> rightmost		1317659	0					
ANR	1317789	Condition	! k		1317659	0					
ANR	1317790	UnaryOperationExpression	! k		1317659	0					
ANR	1317791	UnaryOperator	!		1317659	0					
ANR	1317792	Identifier	k		1317659	1					
ANR	1317793	UnaryOperationExpression	! t -> leftmost		1317659	1					
ANR	1317794	UnaryOperator	!		1317659	0					
ANR	1317795	PtrMemberAccess	t -> leftmost		1317659	1					
ANR	1317796	Identifier	t		1317659	0					
ANR	1317797	Identifier	leftmost		1317659	1					
ANR	1317798	UnaryOperationExpression	! t -> rightmost		1317659	2					
ANR	1317799	UnaryOperator	!		1317659	0					
ANR	1317800	PtrMemberAccess	t -> rightmost		1317659	1					
ANR	1317801	Identifier	t		1317659	0					
ANR	1317802	Identifier	rightmost		1317659	1					
ANR	1317803	CompoundStatement		21:63:824:824	1317659	1					
ANR	1317804	BreakStatement	break ;	736:28:21099:21104	1317659	0	True				
ANR	1317805	IfStatement	"if ( ! is_stem_boundaries ( t , 1 << k ) )"		1317659	2					
ANR	1317806	Condition	"! is_stem_boundaries ( t , 1 << k )"	738:28:21160:21189	1317659	0	True				
ANR	1317807	UnaryOperationExpression	"! is_stem_boundaries ( t , 1 << k )"		1317659	0					
ANR	1317808	UnaryOperator	!		1317659	0					
ANR	1317809	CallExpression	"is_stem_boundaries ( t , 1 << k )"		1317659	1					
ANR	1317810	Callee	is_stem_boundaries		1317659	0					
ANR	1317811	Identifier	is_stem_boundaries		1317659	0					
ANR	1317812	ArgumentList	t		1317659	1					
ANR	1317813	Argument	t		1317659	0					
ANR	1317814	Identifier	t		1317659	0					
ANR	1317815	Argument	1 << k		1317659	1					
ANR	1317816	ShiftExpression	1 << k		1317659	0		<<			
ANR	1317817	PrimaryExpression	1		1317659	0					
ANR	1317818	Identifier	k		1317659	1					
ANR	1317819	CompoundStatement		24:60:947:947	1317659	1					
ANR	1317820	ExpressionStatement	t -> visited = true	739:28:21222:21239	1317659	0	True				
ANR	1317821	AssignmentExpression	t -> visited = true		1317659	0		=			
ANR	1317822	PtrMemberAccess	t -> visited		1317659	0					
ANR	1317823	Identifier	t		1317659	0					
ANR	1317824	Identifier	visited		1317659	1					
ANR	1317825	Identifier	true		1317659	1					
ANR	1317826	BreakStatement	break ;	740:28:21269:21274	1317659	1	True				
ANR	1317827	IfStatement	if ( ( ! k ? tt -> xltop : tt -> xrtop ) != ( ! k ? t -> xlbot : t -> xrbot ) )		1317659	3					
ANR	1317828	Condition	( ! k ? tt -> xltop : tt -> xrtop ) != ( ! k ? t -> xlbot : t -> xrbot )	742:28:21330:21387	1317659	0	True				
ANR	1317829	EqualityExpression	( ! k ? tt -> xltop : tt -> xrtop ) != ( ! k ? t -> xlbot : t -> xrbot )		1317659	0		!=			
ANR	1317830	ConditionalExpression	! k ? tt -> xltop : tt -> xrtop		1317659	0					
ANR	1317831	Condition	! k		1317659	0					
ANR	1317832	UnaryOperationExpression	! k		1317659	0					
ANR	1317833	UnaryOperator	!		1317659	0					
ANR	1317834	Identifier	k		1317659	1					
ANR	1317835	PtrMemberAccess	tt -> xltop		1317659	1					
ANR	1317836	Identifier	tt		1317659	0					
ANR	1317837	Identifier	xltop		1317659	1					
ANR	1317838	PtrMemberAccess	tt -> xrtop		1317659	2					
ANR	1317839	Identifier	tt		1317659	0					
ANR	1317840	Identifier	xrtop		1317659	1					
ANR	1317841	ConditionalExpression	! k ? t -> xlbot : t -> xrbot		1317659	1					
ANR	1317842	Condition	! k		1317659	0					
ANR	1317843	UnaryOperationExpression	! k		1317659	0					
ANR	1317844	UnaryOperator	!		1317659	0					
ANR	1317845	Identifier	k		1317659	1					
ANR	1317846	PtrMemberAccess	t -> xlbot		1317659	1					
ANR	1317847	Identifier	t		1317659	0					
ANR	1317848	Identifier	xlbot		1317659	1					
ANR	1317849	PtrMemberAccess	t -> xrbot		1317659	2					
ANR	1317850	Identifier	t		1317659	0					
ANR	1317851	Identifier	xrbot		1317659	1					
ANR	1317852	BreakStatement	break ;	743:28:21418:21423	1317659	1	True				
ANR	1317853	ExpressionStatement	t -> visited = true	744:24:21482:21499	1317659	4	True				
ANR	1317854	AssignmentExpression	t -> visited = true		1317659	0		=			
ANR	1317855	PtrMemberAccess	t -> visited		1317659	0					
ANR	1317856	Identifier	t		1317659	0					
ANR	1317857	Identifier	visited		1317659	1					
ANR	1317858	Identifier	true		1317659	1					
ANR	1317859	ExpressionStatement	tt = t	745:24:21525:21531	1317659	5	True				
ANR	1317860	AssignmentExpression	tt = t		1317659	0		=			
ANR	1317861	Identifier	tt		1317659	0					
ANR	1317862	Identifier	t		1317659	1					
ANR	1317863	IfStatement	if ( ! k ? ! t -> leftmost : ! t -> rightmost )		1317659	3					
ANR	1317864	Condition	! k ? ! t -> leftmost : ! t -> rightmost	747:24:21579:21611	1317659	0	True				
ANR	1317865	ConditionalExpression	! k ? ! t -> leftmost : ! t -> rightmost		1317659	0					
ANR	1317866	Condition	! k		1317659	0					
ANR	1317867	UnaryOperationExpression	! k		1317659	0					
ANR	1317868	UnaryOperator	!		1317659	0					
ANR	1317869	Identifier	k		1317659	1					
ANR	1317870	UnaryOperationExpression	! t -> leftmost		1317659	1					
ANR	1317871	UnaryOperator	!		1317659	0					
ANR	1317872	PtrMemberAccess	t -> leftmost		1317659	1					
ANR	1317873	Identifier	t		1317659	0					
ANR	1317874	Identifier	leftmost		1317659	1					
ANR	1317875	UnaryOperationExpression	! t -> rightmost		1317659	2					
ANR	1317876	UnaryOperator	!		1317659	0					
ANR	1317877	PtrMemberAccess	t -> rightmost		1317659	1					
ANR	1317878	Identifier	t		1317659	0					
ANR	1317879	Identifier	rightmost		1317659	1					
ANR	1317880	ContinueStatement	continue ;	748:24:21638:21646	1317659	1	True				
ANR	1317881	ExpressionStatement	t1 = t	749:20:21668:21674	1317659	4	True				
ANR	1317882	AssignmentExpression	t1 = t		1317659	0		=			
ANR	1317883	Identifier	t1		1317659	0					
ANR	1317884	Identifier	t		1317659	1					
ANR	1317885	ExpressionStatement	"code = hint_by_tangent ( padev , 1 << k , client_data , t0 , t1 , 0 , handler )"	751:20:21765:21835	1317659	5	True				
ANR	1317886	AssignmentExpression	"code = hint_by_tangent ( padev , 1 << k , client_data , t0 , t1 , 0 , handler )"		1317659	0		=			
ANR	1317887	Identifier	code		1317659	0					
ANR	1317888	CallExpression	"hint_by_tangent ( padev , 1 << k , client_data , t0 , t1 , 0 , handler )"		1317659	1					
ANR	1317889	Callee	hint_by_tangent		1317659	0					
ANR	1317890	Identifier	hint_by_tangent		1317659	0					
ANR	1317891	ArgumentList	padev		1317659	1					
ANR	1317892	Argument	padev		1317659	0					
ANR	1317893	Identifier	padev		1317659	0					
ANR	1317894	Argument	1 << k		1317659	1					
ANR	1317895	ShiftExpression	1 << k		1317659	0		<<			
ANR	1317896	PrimaryExpression	1		1317659	0					
ANR	1317897	Identifier	k		1317659	1					
ANR	1317898	Argument	client_data		1317659	2					
ANR	1317899	Identifier	client_data		1317659	0					
ANR	1317900	Argument	t0		1317659	3					
ANR	1317901	Identifier	t0		1317659	0					
ANR	1317902	Argument	t1		1317659	4					
ANR	1317903	Identifier	t1		1317659	0					
ANR	1317904	Argument	0		1317659	5					
ANR	1317905	PrimaryExpression	0		1317659	0					
ANR	1317906	Argument	handler		1317659	6					
ANR	1317907	Identifier	handler		1317659	0					
ANR	1317908	IfStatement	if ( code < 0 )		1317659	6					
ANR	1317909	Condition	code < 0	752:24:21861:21868	1317659	0	True				
ANR	1317910	RelationalExpression	code < 0		1317659	0		<			
ANR	1317911	Identifier	code		1317659	0					
ANR	1317912	PrimaryExpression	0		1317659	1					
ANR	1317913	ReturnStatement	return code ;	753:24:21895:21906	1317659	1	True				
ANR	1317914	Identifier	code		1317659	0					
ANR	1317915	ForStatement	for ( t0 = padev -> trap_buffer ; t0 != padev -> trap_free ; t0 = t0 -> link )		1317659	1					
ANR	1317916	ForInit	t0 = padev -> trap_buffer ;	757:13:21963:21986	1317659	0	True				
ANR	1317917	AssignmentExpression	t0 = padev -> trap_buffer		1317659	0		=			
ANR	1317918	Identifier	t0		1317659	0					
ANR	1317919	PtrMemberAccess	padev -> trap_buffer		1317659	1					
ANR	1317920	Identifier	padev		1317659	0					
ANR	1317921	Identifier	trap_buffer		1317659	1					
ANR	1317922	Condition	t0 != padev -> trap_free	757:38:21988:22009	1317659	1	True				
ANR	1317923	EqualityExpression	t0 != padev -> trap_free		1317659	0		!=			
ANR	1317924	Identifier	t0		1317659	0					
ANR	1317925	PtrMemberAccess	padev -> trap_free		1317659	1					
ANR	1317926	Identifier	padev		1317659	0					
ANR	1317927	Identifier	trap_free		1317659	1					
ANR	1317928	AssignmentExpression	t0 = t0 -> link	757:62:22012:22024	1317659	2	True	=			
ANR	1317929	Identifier	t0		1317659	0					
ANR	1317930	PtrMemberAccess	t0 -> link		1317659	1					
ANR	1317931	Identifier	t0		1317659	0					
ANR	1317932	Identifier	link		1317659	1					
ANR	1317933	ExpressionStatement	t0 -> visited = false	758:12:22039:22058	1317659	3	True				
ANR	1317934	AssignmentExpression	t0 -> visited = false		1317659	0		=			
ANR	1317935	PtrMemberAccess	t0 -> visited		1317659	0					
ANR	1317936	Identifier	t0		1317659	0					
ANR	1317937	Identifier	visited		1317659	1					
ANR	1317938	Identifier	false		1317659	1					
ANR	1317939	ForStatement	for ( t0 = padev -> trap_buffer ; t0 != padev -> trap_free ; t0 = t0 -> link )		1317659	4					
ANR	1317940	ForInit	t0 = padev -> trap_buffer ;	761:9:22098:22121	1317659	0	True				
ANR	1317941	AssignmentExpression	t0 = padev -> trap_buffer		1317659	0		=			
ANR	1317942	Identifier	t0		1317659	0					
ANR	1317943	PtrMemberAccess	padev -> trap_buffer		1317659	1					
ANR	1317944	Identifier	padev		1317659	0					
ANR	1317945	Identifier	trap_buffer		1317659	1					
ANR	1317946	Condition	t0 != padev -> trap_free	761:34:22123:22144	1317659	1	True				
ANR	1317947	EqualityExpression	t0 != padev -> trap_free		1317659	0		!=			
ANR	1317948	Identifier	t0		1317659	0					
ANR	1317949	PtrMemberAccess	padev -> trap_free		1317659	1					
ANR	1317950	Identifier	padev		1317659	0					
ANR	1317951	Identifier	trap_free		1317659	1					
ANR	1317952	AssignmentExpression	t0 = t0 -> link	761:58:22147:22159	1317659	2	True	=			
ANR	1317953	Identifier	t0		1317659	0					
ANR	1317954	PtrMemberAccess	t0 -> link		1317659	1					
ANR	1317955	Identifier	t0		1317659	0					
ANR	1317956	Identifier	link		1317659	1					
ANR	1317957	CompoundStatement		47:73:1917:1917	1317659	3					
ANR	1317958	IfStatement	if ( ! t0 -> visited )		1317659	0					
ANR	1317959	Condition	! t0 -> visited	762:12:22176:22187	1317659	0	True				
ANR	1317960	UnaryOperationExpression	! t0 -> visited		1317659	0					
ANR	1317961	UnaryOperator	!		1317659	0					
ANR	1317962	PtrMemberAccess	t0 -> visited		1317659	1					
ANR	1317963	Identifier	t0		1317659	0					
ANR	1317964	Identifier	visited		1317659	1					
ANR	1317965	CompoundStatement		48:26:1945:1945	1317659	1					
ANR	1317966	IfStatement	"if ( is_stem_boundaries ( t0 , 3 ) )"		1317659	0					
ANR	1317967	Condition	"is_stem_boundaries ( t0 , 3 )"	763:16:22208:22232	1317659	0	True				
ANR	1317968	CallExpression	"is_stem_boundaries ( t0 , 3 )"		1317659	0					
ANR	1317969	Callee	is_stem_boundaries		1317659	0					
ANR	1317970	Identifier	is_stem_boundaries		1317659	0					
ANR	1317971	ArgumentList	t0		1317659	1					
ANR	1317972	Argument	t0		1317659	0					
ANR	1317973	Identifier	t0		1317659	0					
ANR	1317974	Argument	3		1317659	1					
ANR	1317975	PrimaryExpression	3		1317659	0					
ANR	1317976	CompoundStatement		52:16:2105:2143	1317659	1					
ANR	1317977	IdentifierDeclStatement	gx_san_trap_contact * cont = t0 -> upper ;	764:16:22253:22290	1317659	0	True				
ANR	1317978	IdentifierDecl	* cont = t0 -> upper		1317659	0					
ANR	1317979	IdentifierDeclType	gx_san_trap_contact *		1317659	0					
ANR	1317980	Identifier	cont		1317659	1					
ANR	1317981	AssignmentExpression	* cont = t0 -> upper		1317659	2		=			
ANR	1317982	Identifier	cont		1317659	0					
ANR	1317983	PtrMemberAccess	t0 -> upper		1317659	1					
ANR	1317984	Identifier	t0		1317659	0					
ANR	1317985	Identifier	upper		1317659	1					
ANR	1317986	IdentifierDeclStatement	"gx_san_trap * t1 = t0 , * t ;"	765:16:22308:22332	1317659	1	True				
ANR	1317987	IdentifierDecl	* t1 = t0		1317659	0					
ANR	1317988	IdentifierDeclType	gx_san_trap *		1317659	0					
ANR	1317989	Identifier	t1		1317659	1					
ANR	1317990	AssignmentExpression	* t1 = t0		1317659	2		=			
ANR	1317991	Identifier	t0		1317659	0					
ANR	1317992	Identifier	t0		1317659	1					
ANR	1317993	IdentifierDecl	* t		1317659	1					
ANR	1317994	IdentifierDeclType	gx_san_trap *		1317659	0					
ANR	1317995	Identifier	t		1317659	1					
ANR	1317996	IdentifierDeclStatement	"double area = 0 , length = 0 , ave_width ;"	766:16:22350:22388	1317659	2	True				
ANR	1317997	IdentifierDecl	area = 0		1317659	0					
ANR	1317998	IdentifierDeclType	double		1317659	0					
ANR	1317999	Identifier	area		1317659	1					
ANR	1318000	AssignmentExpression	area = 0		1317659	2		=			
ANR	1318001	Identifier	area		1317659	0					
ANR	1318002	PrimaryExpression	0		1317659	1					
ANR	1318003	IdentifierDecl	length = 0		1317659	1					
ANR	1318004	IdentifierDeclType	double		1317659	0					
ANR	1318005	Identifier	length		1317659	1					
ANR	1318006	AssignmentExpression	length = 0		1317659	2		=			
ANR	1318007	Identifier	length		1317659	0					
ANR	1318008	PrimaryExpression	0		1317659	1					
ANR	1318009	IdentifierDecl	ave_width		1317659	2					
ANR	1318010	IdentifierDeclType	double		1317659	0					
ANR	1318011	Identifier	ave_width		1317659	1					
ANR	1318012	WhileStatement	while ( cont != NULL && cont -> next == cont )		1317659	3					
ANR	1318013	Condition	cont != NULL && cont -> next == cont	768:22:22413:22446	1317659	0	True				
ANR	1318014	AndExpression	cont != NULL && cont -> next == cont		1317659	0		&&			
ANR	1318015	EqualityExpression	cont != NULL		1317659	0		!=			
ANR	1318016	Identifier	cont		1317659	0					
ANR	1318017	Identifier	NULL		1317659	1					
ANR	1318018	EqualityExpression	cont -> next == cont		1317659	1		==			
ANR	1318019	PtrMemberAccess	cont -> next		1317659	0					
ANR	1318020	Identifier	cont		1317659	0					
ANR	1318021	Identifier	next		1317659	1					
ANR	1318022	Identifier	cont		1317659	1					
ANR	1318023	CompoundStatement		55:20:2249:2277	1317659	1					
ANR	1318024	IdentifierDeclStatement	gx_san_trap * t = cont -> upper ;	769:20:22494:22522	1317659	0	True				
ANR	1318025	IdentifierDecl	* t = cont -> upper		1317659	0					
ANR	1318026	IdentifierDeclType	gx_san_trap *		1317659	0					
ANR	1318027	Identifier	t		1317659	1					
ANR	1318028	AssignmentExpression	* t = cont -> upper		1317659	2		=			
ANR	1318029	Identifier	t		1317659	0					
ANR	1318030	PtrMemberAccess	cont -> upper		1317659	1					
ANR	1318031	Identifier	cont		1317659	0					
ANR	1318032	Identifier	upper		1317659	1					
ANR	1318033	IfStatement	"if ( ! is_stem_boundaries ( t , 3 ) )"		1317659	1					
ANR	1318034	Condition	"! is_stem_boundaries ( t , 3 )"	771:24:22549:22573	1317659	0	True				
ANR	1318035	UnaryOperationExpression	"! is_stem_boundaries ( t , 3 )"		1317659	0					
ANR	1318036	UnaryOperator	!		1317659	0					
ANR	1318037	CallExpression	"is_stem_boundaries ( t , 3 )"		1317659	1					
ANR	1318038	Callee	is_stem_boundaries		1317659	0					
ANR	1318039	Identifier	is_stem_boundaries		1317659	0					
ANR	1318040	ArgumentList	t		1317659	1					
ANR	1318041	Argument	t		1317659	0					
ANR	1318042	Identifier	t		1317659	0					
ANR	1318043	Argument	3		1317659	1					
ANR	1318044	PrimaryExpression	3		1317659	0					
ANR	1318045	CompoundStatement		57:51:2331:2331	1317659	1					
ANR	1318046	ExpressionStatement	t -> visited = true	772:24:22602:22619	1317659	0	True				
ANR	1318047	AssignmentExpression	t -> visited = true		1317659	0		=			
ANR	1318048	PtrMemberAccess	t -> visited		1317659	0					
ANR	1318049	Identifier	t		1317659	0					
ANR	1318050	Identifier	visited		1317659	1					
ANR	1318051	Identifier	true		1317659	1					
ANR	1318052	BreakStatement	break ;	773:24:22645:22650	1317659	1	True				
ANR	1318053	IfStatement	if ( t -> fork > 1 )		1317659	2					
ANR	1318054	Condition	t -> fork > 1	775:24:22698:22708	1317659	0	True				
ANR	1318055	RelationalExpression	t -> fork > 1		1317659	0		>			
ANR	1318056	PtrMemberAccess	t -> fork		1317659	0					
ANR	1318057	Identifier	t		1317659	0					
ANR	1318058	Identifier	fork		1317659	1					
ANR	1318059	PrimaryExpression	1		1317659	1					
ANR	1318060	BreakStatement	break ;	776:24:22735:22740	1317659	1	True				
ANR	1318061	IfStatement	if ( t1 -> xltop != t -> xlbot || t1 -> xrtop != t -> xrbot )		1317659	3					
ANR	1318062	Condition	t1 -> xltop != t -> xlbot || t1 -> xrtop != t -> xrbot	777:24:22789:22834	1317659	0	True				
ANR	1318063	OrExpression	t1 -> xltop != t -> xlbot || t1 -> xrtop != t -> xrbot		1317659	0		||			
ANR	1318064	EqualityExpression	t1 -> xltop != t -> xlbot		1317659	0		!=			
ANR	1318065	PtrMemberAccess	t1 -> xltop		1317659	0					
ANR	1318066	Identifier	t1		1317659	0					
ANR	1318067	Identifier	xltop		1317659	1					
ANR	1318068	PtrMemberAccess	t -> xlbot		1317659	1					
ANR	1318069	Identifier	t		1317659	0					
ANR	1318070	Identifier	xlbot		1317659	1					
ANR	1318071	EqualityExpression	t1 -> xrtop != t -> xrbot		1317659	1		!=			
ANR	1318072	PtrMemberAccess	t1 -> xrtop		1317659	0					
ANR	1318073	Identifier	t1		1317659	0					
ANR	1318074	Identifier	xrtop		1317659	1					
ANR	1318075	PtrMemberAccess	t -> xrbot		1317659	1					
ANR	1318076	Identifier	t		1317659	0					
ANR	1318077	Identifier	xrbot		1317659	1					
ANR	1318078	BreakStatement	break ;	778:24:22861:22866	1317659	1	True				
ANR	1318079	ExpressionStatement	t1 = t	779:20:22921:22927	1317659	4	True				
ANR	1318080	AssignmentExpression	t1 = t		1317659	0		=			
ANR	1318081	Identifier	t1		1317659	0					
ANR	1318082	Identifier	t		1317659	1					
ANR	1318083	ExpressionStatement	cont = t1 -> upper	780:20:22949:22965	1317659	5	True				
ANR	1318084	AssignmentExpression	cont = t1 -> upper		1317659	0		=			
ANR	1318085	Identifier	cont		1317659	0					
ANR	1318086	PtrMemberAccess	t1 -> upper		1317659	1					
ANR	1318087	Identifier	t1		1317659	0					
ANR	1318088	Identifier	upper		1317659	1					
ANR	1318089	ExpressionStatement	t1 -> visited = true	781:20:22987:23005	1317659	6	True				
ANR	1318090	AssignmentExpression	t1 -> visited = true		1317659	0		=			
ANR	1318091	PtrMemberAccess	t1 -> visited		1317659	0					
ANR	1318092	Identifier	t1		1317659	0					
ANR	1318093	Identifier	visited		1317659	1					
ANR	1318094	Identifier	true		1317659	1					
ANR	1318095	ForStatement	for ( t = t0 ; ; t = t -> upper -> upper )		1317659	4					
ANR	1318096	ForInit	t = t0 ;	784:21:23111:23117	1317659	0	True				
ANR	1318097	AssignmentExpression	t = t0		1317659	0		=			
ANR	1318098	Identifier	t		1317659	0					
ANR	1318099	Identifier	t0		1317659	1					
ANR	1318100	AssignmentExpression	t = t -> upper -> upper	784:31:23121:23139	1317659	1	True	=			
ANR	1318101	Identifier	t		1317659	0					
ANR	1318102	PtrMemberAccess	t -> upper -> upper		1317659	1					
ANR	1318103	PtrMemberAccess	t -> upper		1317659	0					
ANR	1318104	Identifier	t		1317659	0					
ANR	1318105	Identifier	upper		1317659	1					
ANR	1318106	Identifier	upper		1317659	1					
ANR	1318107	CompoundStatement		70:52:2897:2897	1317659	2					
ANR	1318108	ExpressionStatement	length += trap_axis_length ( t )	785:20:23164:23193	1317659	0	True				
ANR	1318109	AssignmentExpression	length += trap_axis_length ( t )		1317659	0		+=			
ANR	1318110	Identifier	length		1317659	0					
ANR	1318111	CallExpression	trap_axis_length ( t )		1317659	1					
ANR	1318112	Callee	trap_axis_length		1317659	0					
ANR	1318113	Identifier	trap_axis_length		1317659	0					
ANR	1318114	ArgumentList	t		1317659	1					
ANR	1318115	Argument	t		1317659	0					
ANR	1318116	Identifier	t		1317659	0					
ANR	1318117	ExpressionStatement	area += trap_area ( t )	786:20:23215:23235	1317659	1	True				
ANR	1318118	AssignmentExpression	area += trap_area ( t )		1317659	0		+=			
ANR	1318119	Identifier	area		1317659	0					
ANR	1318120	CallExpression	trap_area ( t )		1317659	1					
ANR	1318121	Callee	trap_area		1317659	0					
ANR	1318122	Identifier	trap_area		1317659	0					
ANR	1318123	ArgumentList	t		1317659	1					
ANR	1318124	Argument	t		1317659	0					
ANR	1318125	Identifier	t		1317659	0					
ANR	1318126	IfStatement	if ( t == t1 )		1317659	2					
ANR	1318127	Condition	t == t1	787:24:23261:23267	1317659	0	True				
ANR	1318128	EqualityExpression	t == t1		1317659	0		==			
ANR	1318129	Identifier	t		1317659	0					
ANR	1318130	Identifier	t1		1317659	1					
ANR	1318131	BreakStatement	break ;	788:24:23294:23299	1317659	1	True				
ANR	1318132	ExpressionStatement	ave_width = area / length	790:16:23335:23360	1317659	5	True				
ANR	1318133	AssignmentExpression	ave_width = area / length		1317659	0		=			
ANR	1318134	Identifier	ave_width		1317659	0					
ANR	1318135	MultiplicativeExpression	area / length		1317659	1		/			
ANR	1318136	Identifier	area		1317659	0					
ANR	1318137	Identifier	length		1317659	1					
ANR	1318138	IfStatement	if ( length > ave_width / ( 2.0 ) )		1317659	6					
ANR	1318139	Condition	length > ave_width / ( 2.0 )	791:20:23382:23424	1317659	0	True				
ANR	1318140	RelationalExpression	length > ave_width / ( 2.0 )		1317659	0		>			
ANR	1318141	Identifier	length		1317659	0					
ANR	1318142	MultiplicativeExpression	ave_width / ( 2.0 )		1317659	1		/			
ANR	1318143	Identifier	ave_width		1317659	0					
ANR	1318144	PrimaryExpression	2.0		1317659	1					
ANR	1318145	CompoundStatement		79:20:3262:3390	1317659	1					
ANR	1318146	IdentifierDeclStatement	"int code = ( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler ) ;"	793:20:23507:23635	1317659	0	True				
ANR	1318147	IdentifierDecl	"code = ( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler )"		1317659	0					
ANR	1318148	IdentifierDeclType	int		1317659	0					
ANR	1318149	Identifier	code		1317659	1					
ANR	1318150	AssignmentExpression	"code = ( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler )"		1317659	2		=			
ANR	1318151	Identifier	code		1317659	0					
ANR	1318152	CallExpression	"( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler )"		1317659	1					
ANR	1318153	Callee	by_trap ? hint_by_trap : hint_by_tangent		1317659	0					
ANR	1318154	ConditionalExpression	by_trap ? hint_by_trap : hint_by_tangent		1317659	0					
ANR	1318155	Condition	by_trap		1317659	0					
ANR	1318156	Identifier	by_trap		1317659	0					
ANR	1318157	Identifier	hint_by_trap		1317659	1					
ANR	1318158	Identifier	hint_by_tangent		1317659	2					
ANR	1318159	ArgumentList	padev		1317659	1					
ANR	1318160	Argument	padev		1317659	0					
ANR	1318161	Identifier	padev		1317659	0					
ANR	1318162	Argument	3		1317659	1					
ANR	1318163	PrimaryExpression	3		1317659	0					
ANR	1318164	Argument	client_data		1317659	2					
ANR	1318165	Identifier	client_data		1317659	0					
ANR	1318166	Argument	t0		1317659	3					
ANR	1318167	Identifier	t0		1317659	0					
ANR	1318168	Argument	t1		1317659	4					
ANR	1318169	Identifier	t1		1317659	0					
ANR	1318170	Argument	ave_width		1317659	5					
ANR	1318171	Identifier	ave_width		1317659	0					
ANR	1318172	Argument	handler		1317659	6					
ANR	1318173	Identifier	handler		1317659	0					
ANR	1318174	IfStatement	if ( code < 0 )		1317659	1					
ANR	1318175	Condition	code < 0	796:24:23662:23669	1317659	0	True				
ANR	1318176	RelationalExpression	code < 0		1317659	0		<			
ANR	1318177	Identifier	code		1317659	0					
ANR	1318178	PrimaryExpression	0		1317659	1					
ANR	1318179	ReturnStatement	return code ;	797:24:23696:23707	1317659	1	True				
ANR	1318180	Identifier	code		1317659	0					
ANR	1318181	ExpressionStatement	t0 -> visited = true	801:8:23759:23777	1317659	1	True				
ANR	1318182	AssignmentExpression	t0 -> visited = true		1317659	0		=			
ANR	1318183	PtrMemberAccess	t0 -> visited		1317659	0					
ANR	1318184	Identifier	t0		1317659	0					
ANR	1318185	Identifier	visited		1317659	1					
ANR	1318186	Identifier	true		1317659	1					
ANR	1318187	ReturnStatement	return 0 ;	803:4:23789:23797	1317659	5	True				
ANR	1318188	PrimaryExpression	0		1317659	0					
ANR	1318189	ReturnType	static int		1317659	1					
ANR	1318190	Identifier	gx_san_generate_stems_aux		1317659	2					
ANR	1318191	ParameterList	"gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		1317659	3					
ANR	1318192	Parameter	gx_device_spot_analyzer * padev	712:26:20089:20118	1317659	0	True				
ANR	1318193	ParameterType	gx_device_spot_analyzer *		1317659	0					
ANR	1318194	Identifier	padev		1317659	1					
ANR	1318195	Parameter	bool overall_hints	713:16:20137:20154	1317659	1	True				
ANR	1318196	ParameterType	bool		1317659	0					
ANR	1318197	Identifier	overall_hints		1317659	1					
ANR	1318198	Parameter	void * client_data	713:36:20157:20173	1317659	2	True				
ANR	1318199	ParameterType	void *		1317659	0					
ANR	1318200	Identifier	client_data		1317659	1					
ANR	1318201	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	714:16:20192:20241	1317659	3	True				
ANR	1318202	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		1317659	0					
ANR	1318203	Identifier	handler		1317659	1					
ANR	1318204	CFGEntryNode	ENTRY		1317659		True				
ANR	1318205	CFGExitNode	EXIT		1317659		True				
ANR	1318206	InfiniteForNode	true		1317659		True				
ANR	1318207	Symbol	client_data		1317659						
ANR	1318208	Symbol	tt		1317659						
ANR	1318209	Symbol	handler		1317659						
ANR	1318210	Symbol	t1 -> visited		1317659						
ANR	1318211	Symbol	padev -> trap_free		1317659						
ANR	1318212	Symbol	by_trap		1317659						
ANR	1318213	Symbol	cont		1317659						
ANR	1318214	Symbol	t -> xrbot		1317659						
ANR	1318215	Symbol	area		1317659						
ANR	1318216	Symbol	NULL		1317659						
ANR	1318217	Symbol	t1 -> upper		1317659						
ANR	1318218	Symbol	* tt		1317659						
ANR	1318219	Symbol	t0 -> visited		1317659						
ANR	1318220	Symbol	t -> rightmost		1317659						
ANR	1318221	Symbol	is_stem_boundaries		1317659						
ANR	1318222	Symbol	tt -> xrtop		1317659						
ANR	1318223	Symbol	* padev		1317659						
ANR	1318224	Symbol	true		1317659						
ANR	1318225	Symbol	padev -> trap_buffer		1317659						
ANR	1318226	Symbol	t0		1317659						
ANR	1318227	Symbol	t1		1317659						
ANR	1318228	Symbol	cont -> upper		1317659						
ANR	1318229	Symbol	code		1317659						
ANR	1318230	Symbol	t -> xlbot		1317659						
ANR	1318231	Symbol	t1 -> xltop		1317659						
ANR	1318232	Symbol	trap_axis_length		1317659						
ANR	1318233	Symbol	padev		1317659						
ANR	1318234	Symbol	trap_area		1317659						
ANR	1318235	Symbol	* * t		1317659						
ANR	1318236	Symbol	t0 -> link		1317659						
ANR	1318237	Symbol	cont -> next		1317659						
ANR	1318238	Symbol	t0 -> upper		1317659						
ANR	1318239	Symbol	t -> upper -> upper		1317659						
ANR	1318240	Symbol	* t1		1317659						
ANR	1318241	Symbol	* t0		1317659						
ANR	1318242	Symbol	tt -> xltop		1317659						
ANR	1318243	Symbol	t0 -> rightmost		1317659						
ANR	1318244	Symbol	false		1317659						
ANR	1318245	Symbol	length		1317659						
ANR	1318246	Symbol	upper_neighbour		1317659						
ANR	1318247	Symbol	k		1317659						
ANR	1318248	Symbol	overall_hints		1317659						
ANR	1318249	Symbol	t -> visited		1317659						
ANR	1318250	Symbol	t1 -> xrtop		1317659						
ANR	1318251	Symbol	t -> upper		1317659						
ANR	1318252	Symbol	t		1317659						
ANR	1318253	Symbol	hint_by_tangent		1317659						
ANR	1318254	Symbol	* cont		1317659						
ANR	1318255	Symbol	t -> fork		1317659						
ANR	1318256	Symbol	hint_by_trap		1317659						
ANR	1318257	Symbol	t -> leftmost		1317659						
ANR	1318258	Symbol	t0 -> leftmost		1317659						
ANR	1318259	Symbol	* t -> upper		1317659						
ANR	1318260	Symbol	* t		1317659						
ANR	1318261	Symbol	ave_width		1317659						
ANR	1318262	Function	gx_san_generate_stems	806:0:23802:24067							
ANR	1318263	FunctionDef	"gx_san_generate_stems (gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		1318262	0					
ANR	1318264	CompoundStatement		810:0:23983:24067	1318262	0					
ANR	1318265	ReturnStatement	"return gx_san_generate_stems_aux ( padev , overall_hints , client_data , handler ) ;"	811:4:23989:24065	1318262	0	True				
ANR	1318266	CallExpression	"gx_san_generate_stems_aux ( padev , overall_hints , client_data , handler )"		1318262	0					
ANR	1318267	Callee	gx_san_generate_stems_aux		1318262	0					
ANR	1318268	Identifier	gx_san_generate_stems_aux		1318262	0					
ANR	1318269	ArgumentList	padev		1318262	1					
ANR	1318270	Argument	padev		1318262	0					
ANR	1318271	Identifier	padev		1318262	0					
ANR	1318272	Argument	overall_hints		1318262	1					
ANR	1318273	Identifier	overall_hints		1318262	0					
ANR	1318274	Argument	client_data		1318262	2					
ANR	1318275	Identifier	client_data		1318262	0					
ANR	1318276	Argument	handler		1318262	3					
ANR	1318277	Identifier	handler		1318262	0					
ANR	1318278	ReturnType	int		1318262	1					
ANR	1318279	Identifier	gx_san_generate_stems		1318262	2					
ANR	1318280	ParameterList	"gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		1318262	3					
ANR	1318281	Parameter	gx_device_spot_analyzer * padev	807:22:23828:23857	1318262	0	True				
ANR	1318282	ParameterType	gx_device_spot_analyzer *		1318262	0					
ANR	1318283	Identifier	padev		1318262	1					
ANR	1318284	Parameter	bool overall_hints	808:16:23876:23893	1318262	1	True				
ANR	1318285	ParameterType	bool		1318262	0					
ANR	1318286	Identifier	overall_hints		1318262	1					
ANR	1318287	Parameter	void * client_data	808:36:23896:23912	1318262	2	True				
ANR	1318288	ParameterType	void *		1318262	0					
ANR	1318289	Identifier	client_data		1318262	1					
ANR	1318290	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	809:16:23931:23980	1318262	3	True				
ANR	1318291	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		1318262	0					
ANR	1318292	Identifier	handler		1318262	1					
ANR	1318293	CFGEntryNode	ENTRY		1318262		True				
ANR	1318294	CFGExitNode	EXIT		1318262		True				
ANR	1318295	Symbol	client_data		1318262						
ANR	1318296	Symbol	handler		1318262						
ANR	1318297	Symbol	gx_san_generate_stems_aux		1318262						
ANR	1318298	Symbol	padev		1318262						
ANR	1318299	Symbol	overall_hints		1318262						
