command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2012331	File	data/converged/CVE-2018-16863_ghostpdl/crypt.h								
ANR	2012332	Function	decrypt_byte	35:0:1314:1708							
ANR	2012333	FunctionDef	"decrypt_byte (unsigned long * pkeys , const z_crc_t * pcrc_32_tab)"		2012332	0					
ANR	2012334	CompoundStatement		36:0:1388:1708	2012332	0					
ANR	2012335	IdentifierDeclStatement	unsigned temp ;	37:4:1394:1407	2012332	0	True				
ANR	2012336	IdentifierDecl	temp		2012332	0					
ANR	2012337	IdentifierDeclType	unsigned		2012332	0					
ANR	2012338	Identifier	temp		2012332	1					
ANR	2012339	ExpressionStatement	temp = ( ( unsigned ) ( * ( pkeys + 2 ) ) & 0xffff ) | 2	41:4:1609:1653	2012332	1	True				
ANR	2012340	AssignmentExpression	temp = ( ( unsigned ) ( * ( pkeys + 2 ) ) & 0xffff ) | 2		2012332	0		=			
ANR	2012341	Identifier	temp		2012332	0					
ANR	2012342	InclusiveOrExpression	( ( unsigned ) ( * ( pkeys + 2 ) ) & 0xffff ) | 2		2012332	1		|			
ANR	2012343	BitAndExpression	( unsigned ) ( * ( pkeys + 2 ) ) & 0xffff		2012332	0		&			
ANR	2012344	CastExpression	( unsigned ) ( * ( pkeys + 2 ) )		2012332	0					
ANR	2012345	CastTarget	unsigned		2012332	0					
ANR	2012346	UnaryOperationExpression	* ( pkeys + 2 )		2012332	1					
ANR	2012347	UnaryOperator	*		2012332	0					
ANR	2012348	AdditiveExpression	pkeys + 2		2012332	1		+			
ANR	2012349	Identifier	pkeys		2012332	0					
ANR	2012350	PrimaryExpression	2		2012332	1					
ANR	2012351	PrimaryExpression	0xffff		2012332	1					
ANR	2012352	PrimaryExpression	2		2012332	1					
ANR	2012353	ReturnStatement	return ( int ) ( ( ( temp * ( temp ^ 1 ) ) >> 8 ) & 0xff ) ;	42:4:1659:1706	2012332	2	True				
ANR	2012354	CastExpression	( int ) ( ( ( temp * ( temp ^ 1 ) ) >> 8 ) & 0xff )		2012332	0					
ANR	2012355	CastTarget	int		2012332	0					
ANR	2012356	BitAndExpression	( ( temp * ( temp ^ 1 ) ) >> 8 ) & 0xff		2012332	1		&			
ANR	2012357	ShiftExpression	( temp * ( temp ^ 1 ) ) >> 8		2012332	0		>>			
ANR	2012358	MultiplicativeExpression	temp * ( temp ^ 1 )		2012332	0		*			
ANR	2012359	Identifier	temp		2012332	0					
ANR	2012360	ExclusiveOrExpression	temp ^ 1		2012332	1		^			
ANR	2012361	Identifier	temp		2012332	0					
ANR	2012362	PrimaryExpression	1		2012332	1					
ANR	2012363	PrimaryExpression	8		2012332	1					
ANR	2012364	PrimaryExpression	0xff		2012332	1					
ANR	2012365	ReturnType	static int		2012332	1					
ANR	2012366	Identifier	decrypt_byte		2012332	2					
ANR	2012367	ParameterList	"unsigned long * pkeys , const z_crc_t * pcrc_32_tab"		2012332	3					
ANR	2012368	Parameter	unsigned long * pkeys	35:24:1338:1357	2012332	0	True				
ANR	2012369	ParameterType	unsigned long *		2012332	0					
ANR	2012370	Identifier	pkeys		2012332	1					
ANR	2012371	Parameter	const z_crc_t * pcrc_32_tab	35:46:1360:1385	2012332	1	True				
ANR	2012372	ParameterType	const z_crc_t *		2012332	0					
ANR	2012373	Identifier	pcrc_32_tab		2012332	1					
ANR	2012374	CFGEntryNode	ENTRY		2012332		True				
ANR	2012375	CFGExitNode	EXIT		2012332		True				
ANR	2012376	Symbol	temp		2012332						
ANR	2012377	Symbol	* pkeys		2012332						
ANR	2012378	Symbol	* ( pkeys + 2 )		2012332						
ANR	2012379	Symbol	pcrc_32_tab		2012332						
ANR	2012380	Symbol	pkeys		2012332						
ANR	2012381	Function	update_keys	48:0:1851:2200							
ANR	2012382	FunctionDef	"update_keys (unsigned long * pkeys , const z_crc_t * pcrc_32_tab , int c)"		2012381	0					
ANR	2012383	CompoundStatement		49:0:1929:2200	2012381	0					
ANR	2012384	ExpressionStatement	"( * ( pkeys + 0 ) ) = CRC32 ( ( * ( pkeys + 0 ) ) , c )"	50:4:1935:1972	2012381	0	True				
ANR	2012385	AssignmentExpression	"( * ( pkeys + 0 ) ) = CRC32 ( ( * ( pkeys + 0 ) ) , c )"		2012381	0		=			
ANR	2012386	UnaryOperationExpression	* ( pkeys + 0 )		2012381	0					
ANR	2012387	UnaryOperator	*		2012381	0					
ANR	2012388	AdditiveExpression	pkeys + 0		2012381	1		+			
ANR	2012389	Identifier	pkeys		2012381	0					
ANR	2012390	PrimaryExpression	0		2012381	1					
ANR	2012391	CallExpression	"CRC32 ( ( * ( pkeys + 0 ) ) , c )"		2012381	1					
ANR	2012392	Callee	CRC32		2012381	0					
ANR	2012393	Identifier	CRC32		2012381	0					
ANR	2012394	ArgumentList	* ( pkeys + 0 )		2012381	1					
ANR	2012395	Argument	* ( pkeys + 0 )		2012381	0					
ANR	2012396	UnaryOperationExpression	* ( pkeys + 0 )		2012381	0					
ANR	2012397	UnaryOperator	*		2012381	0					
ANR	2012398	AdditiveExpression	pkeys + 0		2012381	1		+			
ANR	2012399	Identifier	pkeys		2012381	0					
ANR	2012400	PrimaryExpression	0		2012381	1					
ANR	2012401	Argument	c		2012381	1					
ANR	2012402	Identifier	c		2012381	0					
ANR	2012403	ExpressionStatement	( * ( pkeys + 1 ) ) += ( * ( pkeys + 0 ) ) & 0xff	51:4:1978:2013	2012381	1	True				
ANR	2012404	AssignmentExpression	( * ( pkeys + 1 ) ) += ( * ( pkeys + 0 ) ) & 0xff		2012381	0		+=			
ANR	2012405	UnaryOperationExpression	* ( pkeys + 1 )		2012381	0					
ANR	2012406	UnaryOperator	*		2012381	0					
ANR	2012407	AdditiveExpression	pkeys + 1		2012381	1		+			
ANR	2012408	Identifier	pkeys		2012381	0					
ANR	2012409	PrimaryExpression	1		2012381	1					
ANR	2012410	BitAndExpression	( * ( pkeys + 0 ) ) & 0xff		2012381	1		&			
ANR	2012411	UnaryOperationExpression	* ( pkeys + 0 )		2012381	0					
ANR	2012412	UnaryOperator	*		2012381	0					
ANR	2012413	AdditiveExpression	pkeys + 0		2012381	1		+			
ANR	2012414	Identifier	pkeys		2012381	0					
ANR	2012415	PrimaryExpression	0		2012381	1					
ANR	2012416	PrimaryExpression	0xff		2012381	1					
ANR	2012417	ExpressionStatement	( * ( pkeys + 1 ) ) = ( * ( pkeys + 1 ) ) * 134775813L + 1	52:4:2019:2063	2012381	2	True				
ANR	2012418	AssignmentExpression	( * ( pkeys + 1 ) ) = ( * ( pkeys + 1 ) ) * 134775813L + 1		2012381	0		=			
ANR	2012419	UnaryOperationExpression	* ( pkeys + 1 )		2012381	0					
ANR	2012420	UnaryOperator	*		2012381	0					
ANR	2012421	AdditiveExpression	pkeys + 1		2012381	1		+			
ANR	2012422	Identifier	pkeys		2012381	0					
ANR	2012423	PrimaryExpression	1		2012381	1					
ANR	2012424	AdditiveExpression	( * ( pkeys + 1 ) ) * 134775813L + 1		2012381	1		+			
ANR	2012425	MultiplicativeExpression	( * ( pkeys + 1 ) ) * 134775813L		2012381	0		*			
ANR	2012426	UnaryOperationExpression	* ( pkeys + 1 )		2012381	0					
ANR	2012427	UnaryOperator	*		2012381	0					
ANR	2012428	AdditiveExpression	pkeys + 1		2012381	1		+			
ANR	2012429	Identifier	pkeys		2012381	0					
ANR	2012430	PrimaryExpression	1		2012381	1					
ANR	2012431	PrimaryExpression	134775813L		2012381	1					
ANR	2012432	PrimaryExpression	1		2012381	1					
ANR	2012433	CompoundStatement		6:15:156:196	2012381	3					
ANR	2012434	Statement	register	54:6:2077:2084	2012381	0	True				
ANR	2012435	IdentifierDeclStatement	int keyshift = ( int ) ( ( * ( pkeys + 1 ) ) >> 24 ) ;	54:15:2086:2126	2012381	1	True				
ANR	2012436	IdentifierDecl	keyshift = ( int ) ( ( * ( pkeys + 1 ) ) >> 24 )		2012381	0					
ANR	2012437	IdentifierDeclType	int		2012381	0					
ANR	2012438	Identifier	keyshift		2012381	1					
ANR	2012439	AssignmentExpression	keyshift = ( int ) ( ( * ( pkeys + 1 ) ) >> 24 )		2012381	2		=			
ANR	2012440	Identifier	keyshift		2012381	0					
ANR	2012441	CastExpression	( int ) ( ( * ( pkeys + 1 ) ) >> 24 )		2012381	1					
ANR	2012442	CastTarget	int		2012381	0					
ANR	2012443	ShiftExpression	( * ( pkeys + 1 ) ) >> 24		2012381	1		>>			
ANR	2012444	UnaryOperationExpression	* ( pkeys + 1 )		2012381	0					
ANR	2012445	UnaryOperator	*		2012381	0					
ANR	2012446	AdditiveExpression	pkeys + 1		2012381	1		+			
ANR	2012447	Identifier	pkeys		2012381	0					
ANR	2012448	PrimaryExpression	1		2012381	1					
ANR	2012449	PrimaryExpression	24		2012381	1					
ANR	2012450	ExpressionStatement	"( * ( pkeys + 2 ) ) = CRC32 ( ( * ( pkeys + 2 ) ) , keyshift )"	55:6:2134:2178	2012381	2	True				
ANR	2012451	AssignmentExpression	"( * ( pkeys + 2 ) ) = CRC32 ( ( * ( pkeys + 2 ) ) , keyshift )"		2012381	0		=			
ANR	2012452	UnaryOperationExpression	* ( pkeys + 2 )		2012381	0					
ANR	2012453	UnaryOperator	*		2012381	0					
ANR	2012454	AdditiveExpression	pkeys + 2		2012381	1		+			
ANR	2012455	Identifier	pkeys		2012381	0					
ANR	2012456	PrimaryExpression	2		2012381	1					
ANR	2012457	CallExpression	"CRC32 ( ( * ( pkeys + 2 ) ) , keyshift )"		2012381	1					
ANR	2012458	Callee	CRC32		2012381	0					
ANR	2012459	Identifier	CRC32		2012381	0					
ANR	2012460	ArgumentList	* ( pkeys + 2 )		2012381	1					
ANR	2012461	Argument	* ( pkeys + 2 )		2012381	0					
ANR	2012462	UnaryOperationExpression	* ( pkeys + 2 )		2012381	0					
ANR	2012463	UnaryOperator	*		2012381	0					
ANR	2012464	AdditiveExpression	pkeys + 2		2012381	1		+			
ANR	2012465	Identifier	pkeys		2012381	0					
ANR	2012466	PrimaryExpression	2		2012381	1					
ANR	2012467	Argument	keyshift		2012381	1					
ANR	2012468	Identifier	keyshift		2012381	0					
ANR	2012469	ReturnStatement	return c ;	57:4:2190:2198	2012381	4	True				
ANR	2012470	Identifier	c		2012381	0					
ANR	2012471	ReturnType	static int		2012381	1					
ANR	2012472	Identifier	update_keys		2012381	2					
ANR	2012473	ParameterList	"unsigned long * pkeys , const z_crc_t * pcrc_32_tab , int c"		2012381	3					
ANR	2012474	Parameter	unsigned long * pkeys	48:23:1874:1893	2012381	0	True				
ANR	2012475	ParameterType	unsigned long *		2012381	0					
ANR	2012476	Identifier	pkeys		2012381	1					
ANR	2012477	Parameter	const z_crc_t * pcrc_32_tab	48:44:1895:1920	2012381	1	True				
ANR	2012478	ParameterType	const z_crc_t *		2012381	0					
ANR	2012479	Identifier	pcrc_32_tab		2012381	1					
ANR	2012480	Parameter	int c	48:71:1922:1926	2012381	2	True				
ANR	2012481	ParameterType	int		2012381	0					
ANR	2012482	Identifier	c		2012381	1					
ANR	2012483	CFGEntryNode	ENTRY		2012381		True				
ANR	2012484	CFGExitNode	EXIT		2012381		True				
ANR	2012485	Symbol	keyshift		2012381						
ANR	2012486	Symbol	* ( pkeys + 1 )		2012381						
ANR	2012487	Symbol	c		2012381						
ANR	2012488	Symbol	* ( pkeys + 0 )		2012381						
ANR	2012489	Symbol	* pkeys		2012381						
ANR	2012490	Symbol	CRC32		2012381						
ANR	2012491	Symbol	* ( pkeys + 2 )		2012381						
ANR	2012492	Symbol	pcrc_32_tab		2012381						
ANR	2012493	Symbol	pkeys		2012381						
ANR	2012494	Function	init_keys	65:0:2373:2659							
ANR	2012495	FunctionDef	"init_keys (const char * passwd , unsigned long * pkeys , const z_crc_t * pcrc_32_tab)"		2012494	0					
ANR	2012496	CompoundStatement		66:0:2463:2659	2012494	0					
ANR	2012497	ExpressionStatement	* ( pkeys + 0 ) = 305419896L	67:4:2469:2492	2012494	0	True				
ANR	2012498	AssignmentExpression	* ( pkeys + 0 ) = 305419896L		2012494	0		=			
ANR	2012499	UnaryOperationExpression	* ( pkeys + 0 )		2012494	0					
ANR	2012500	UnaryOperator	*		2012494	0					
ANR	2012501	AdditiveExpression	pkeys + 0		2012494	1		+			
ANR	2012502	Identifier	pkeys		2012494	0					
ANR	2012503	PrimaryExpression	0		2012494	1					
ANR	2012504	PrimaryExpression	305419896L		2012494	1					
ANR	2012505	ExpressionStatement	* ( pkeys + 1 ) = 591751049L	68:4:2498:2521	2012494	1	True				
ANR	2012506	AssignmentExpression	* ( pkeys + 1 ) = 591751049L		2012494	0		=			
ANR	2012507	UnaryOperationExpression	* ( pkeys + 1 )		2012494	0					
ANR	2012508	UnaryOperator	*		2012494	0					
ANR	2012509	AdditiveExpression	pkeys + 1		2012494	1		+			
ANR	2012510	Identifier	pkeys		2012494	0					
ANR	2012511	PrimaryExpression	1		2012494	1					
ANR	2012512	PrimaryExpression	591751049L		2012494	1					
ANR	2012513	ExpressionStatement	* ( pkeys + 2 ) = 878082192L	69:4:2527:2550	2012494	2	True				
ANR	2012514	AssignmentExpression	* ( pkeys + 2 ) = 878082192L		2012494	0		=			
ANR	2012515	UnaryOperationExpression	* ( pkeys + 2 )		2012494	0					
ANR	2012516	UnaryOperator	*		2012494	0					
ANR	2012517	AdditiveExpression	pkeys + 2		2012494	1		+			
ANR	2012518	Identifier	pkeys		2012494	0					
ANR	2012519	PrimaryExpression	2		2012494	1					
ANR	2012520	PrimaryExpression	878082192L		2012494	1					
ANR	2012521	WhileStatement	while ( * passwd != '\\0' )		2012494	3					
ANR	2012522	Condition	* passwd != '\\0'	70:11:2563:2577	2012494	0	True				
ANR	2012523	EqualityExpression	* passwd != '\\0'		2012494	0		!=			
ANR	2012524	UnaryOperationExpression	* passwd		2012494	0					
ANR	2012525	UnaryOperator	*		2012494	0					
ANR	2012526	Identifier	passwd		2012494	1					
ANR	2012527	PrimaryExpression	'\\0'		2012494	1					
ANR	2012528	CompoundStatement		5:28:116:116	2012494	1					
ANR	2012529	ExpressionStatement	"update_keys ( pkeys , pcrc_32_tab , ( int ) * passwd )"	71:8:2590:2633	2012494	0	True				
ANR	2012530	CallExpression	"update_keys ( pkeys , pcrc_32_tab , ( int ) * passwd )"		2012494	0					
ANR	2012531	Callee	update_keys		2012494	0					
ANR	2012532	Identifier	update_keys		2012494	0					
ANR	2012533	ArgumentList	pkeys		2012494	1					
ANR	2012534	Argument	pkeys		2012494	0					
ANR	2012535	Identifier	pkeys		2012494	0					
ANR	2012536	Argument	pcrc_32_tab		2012494	1					
ANR	2012537	Identifier	pcrc_32_tab		2012494	0					
ANR	2012538	Argument	( int ) * passwd		2012494	2					
ANR	2012539	CastExpression	( int ) * passwd		2012494	0					
ANR	2012540	CastTarget	int		2012494	0					
ANR	2012541	UnaryOperationExpression	* passwd		2012494	1					
ANR	2012542	UnaryOperator	*		2012494	0					
ANR	2012543	Identifier	passwd		2012494	1					
ANR	2012544	ExpressionStatement	passwd ++	72:8:2643:2651	2012494	1	True				
ANR	2012545	PostIncDecOperationExpression	passwd ++		2012494	0					
ANR	2012546	Identifier	passwd		2012494	0					
ANR	2012547	IncDec	++		2012494	1					
ANR	2012548	ReturnType	static void		2012494	1					
ANR	2012549	Identifier	init_keys		2012494	2					
ANR	2012550	ParameterList	"const char * passwd , unsigned long * pkeys , const z_crc_t * pcrc_32_tab"		2012494	3					
ANR	2012551	Parameter	const char * passwd	65:22:2395:2412	2012494	0	True				
ANR	2012552	ParameterType	const char *		2012494	0					
ANR	2012553	Identifier	passwd		2012494	1					
ANR	2012554	Parameter	unsigned long * pkeys	65:41:2414:2433	2012494	1	True				
ANR	2012555	ParameterType	unsigned long *		2012494	0					
ANR	2012556	Identifier	pkeys		2012494	1					
ANR	2012557	Parameter	const z_crc_t * pcrc_32_tab	65:62:2435:2460	2012494	2	True				
ANR	2012558	ParameterType	const z_crc_t *		2012494	0					
ANR	2012559	Identifier	pcrc_32_tab		2012494	1					
ANR	2012560	CFGEntryNode	ENTRY		2012494		True				
ANR	2012561	CFGExitNode	EXIT		2012494		True				
ANR	2012562	Symbol	* passwd		2012494						
ANR	2012563	Symbol	* ( pkeys + 1 )		2012494						
ANR	2012564	Symbol	* ( pkeys + 0 )		2012494						
ANR	2012565	Symbol	* pkeys		2012494						
ANR	2012566	Symbol	passwd		2012494						
ANR	2012567	Symbol	* ( pkeys + 2 )		2012494						
ANR	2012568	Symbol	pcrc_32_tab		2012494						
ANR	2012569	Symbol	pkeys		2012494						
ANR	2012570	Function	crypthead	90:0:3137:4725							
ANR	2012571	FunctionDef	"crypthead (const char * passwd , unsigned char * buf , int bufSize , unsigned long * pkeys , const z_crc_t * pcrc_32_tab , unsigned long crcForCrypting)"		2012570	0					
ANR	2012572	CompoundStatement		96:0:3456:4725	2012570	0					
ANR	2012573	IdentifierDeclStatement	int n ;	97:4:3462:3467	2012570	0	True				
ANR	2012574	IdentifierDecl	n		2012570	0					
ANR	2012575	IdentifierDeclType	int		2012570	0					
ANR	2012576	Identifier	n		2012570	1					
ANR	2012577	IdentifierDeclStatement	int t ;	98:4:3524:3529	2012570	1	True				
ANR	2012578	IdentifierDecl	t		2012570	0					
ANR	2012579	IdentifierDeclType	int		2012570	0					
ANR	2012580	Identifier	t		2012570	1					
ANR	2012581	IdentifierDeclStatement	int c ;	99:4:3573:3578	2012570	2	True				
ANR	2012582	IdentifierDecl	c		2012570	0					
ANR	2012583	IdentifierDeclType	int		2012570	0					
ANR	2012584	Identifier	c		2012570	1					
ANR	2012585	IdentifierDeclStatement	unsigned char header [ RAND_HEAD_LEN - 2 ] ;	100:4:3624:3661	2012570	3	True				
ANR	2012586	IdentifierDecl	header [ RAND_HEAD_LEN - 2 ]		2012570	0					
ANR	2012587	IdentifierDeclType	unsigned char [ RAND_HEAD_LEN - 2 ]		2012570	0					
ANR	2012588	Identifier	header		2012570	1					
ANR	2012589	AdditiveExpression	RAND_HEAD_LEN - 2		2012570	2		-			
ANR	2012590	Identifier	RAND_HEAD_LEN		2012570	0					
ANR	2012591	PrimaryExpression	2		2012570	1					
ANR	2012592	Statement	static	101:4:3687:3692	2012570	4	True				
ANR	2012593	IdentifierDeclStatement	unsigned calls = 0 ;	101:11:3694:3712	2012570	5	True				
ANR	2012594	IdentifierDecl	calls = 0		2012570	0					
ANR	2012595	IdentifierDeclType	unsigned		2012570	0					
ANR	2012596	Identifier	calls		2012570	1					
ANR	2012597	AssignmentExpression	calls = 0		2012570	2		=			
ANR	2012598	Identifier	calls		2012570	0					
ANR	2012599	PrimaryExpression	0		2012570	1					
ANR	2012600	IfStatement	if ( bufSize < RAND_HEAD_LEN )		2012570	6					
ANR	2012601	Condition	bufSize < RAND_HEAD_LEN	103:8:3772:3792	2012570	0	True				
ANR	2012602	RelationalExpression	bufSize < RAND_HEAD_LEN		2012570	0		<			
ANR	2012603	Identifier	bufSize		2012570	0					
ANR	2012604	Identifier	RAND_HEAD_LEN		2012570	1					
ANR	2012605	ReturnStatement	return 0 ;	104:6:3801:3809	2012570	1	True				
ANR	2012606	PrimaryExpression	0		2012570	0					
ANR	2012607	IfStatement	if ( ++ calls == 1 )		2012570	7					
ANR	2012608	Condition	++ calls == 1	110:8:3996:4007	2012570	0	True				
ANR	2012609	EqualityExpression	++ calls == 1		2012570	0		==			
ANR	2012610	UnaryExpression	++ calls		2012570	0					
ANR	2012611	IncDec	++		2012570	0					
ANR	2012612	Identifier	calls		2012570	1					
ANR	2012613	PrimaryExpression	1		2012570	1					
ANR	2012614	CompoundStatement		16:4:557:557	2012570	1					
ANR	2012615	ExpressionStatement	srand ( ( unsigned ) ( time ( NULL ) ^ ZCR_SEED2 ) )	112:8:4024:4065	2012570	0	True				
ANR	2012616	CallExpression	srand ( ( unsigned ) ( time ( NULL ) ^ ZCR_SEED2 ) )		2012570	0					
ANR	2012617	Callee	srand		2012570	0					
ANR	2012618	Identifier	srand		2012570	0					
ANR	2012619	ArgumentList	( unsigned ) ( time ( NULL ) ^ ZCR_SEED2 )		2012570	1					
ANR	2012620	Argument	( unsigned ) ( time ( NULL ) ^ ZCR_SEED2 )		2012570	0					
ANR	2012621	CastExpression	( unsigned ) ( time ( NULL ) ^ ZCR_SEED2 )		2012570	0					
ANR	2012622	CastTarget	unsigned		2012570	0					
ANR	2012623	ExclusiveOrExpression	time ( NULL ) ^ ZCR_SEED2		2012570	1		^			
ANR	2012624	CallExpression	time ( NULL )		2012570	0					
ANR	2012625	Callee	time		2012570	0					
ANR	2012626	Identifier	time		2012570	0					
ANR	2012627	ArgumentList	NULL		2012570	1					
ANR	2012628	Argument	NULL		2012570	0					
ANR	2012629	Identifier	NULL		2012570	0					
ANR	2012630	Identifier	ZCR_SEED2		2012570	1					
ANR	2012631	ExpressionStatement	"init_keys ( passwd , pkeys , pcrc_32_tab )"	114:4:4077:4114	2012570	8	True				
ANR	2012632	CallExpression	"init_keys ( passwd , pkeys , pcrc_32_tab )"		2012570	0					
ANR	2012633	Callee	init_keys		2012570	0					
ANR	2012634	Identifier	init_keys		2012570	0					
ANR	2012635	ArgumentList	passwd		2012570	1					
ANR	2012636	Argument	passwd		2012570	0					
ANR	2012637	Identifier	passwd		2012570	0					
ANR	2012638	Argument	pkeys		2012570	1					
ANR	2012639	Identifier	pkeys		2012570	0					
ANR	2012640	Argument	pcrc_32_tab		2012570	2					
ANR	2012641	Identifier	pcrc_32_tab		2012570	0					
ANR	2012642	ForStatement	for ( n = 0 ; n < RAND_HEAD_LEN - 2 ; n ++ )		2012570	9					
ANR	2012643	ForInit	n = 0 ;	115:9:4125:4130	2012570	0	True				
ANR	2012644	AssignmentExpression	n = 0		2012570	0		=			
ANR	2012645	Identifier	n		2012570	0					
ANR	2012646	PrimaryExpression	0		2012570	1					
ANR	2012647	Condition	n < RAND_HEAD_LEN - 2	115:16:4132:4150	2012570	1	True				
ANR	2012648	RelationalExpression	n < RAND_HEAD_LEN - 2		2012570	0		<			
ANR	2012649	Identifier	n		2012570	0					
ANR	2012650	AdditiveExpression	RAND_HEAD_LEN - 2		2012570	1		-			
ANR	2012651	Identifier	RAND_HEAD_LEN		2012570	0					
ANR	2012652	PrimaryExpression	2		2012570	1					
ANR	2012653	PostIncDecOperationExpression	n ++	115:37:4153:4155	2012570	2	True				
ANR	2012654	Identifier	n		2012570	0					
ANR	2012655	IncDec	++		2012570	1					
ANR	2012656	CompoundStatement		21:4:705:705	2012570	3					
ANR	2012657	ExpressionStatement	c = ( rand ( ) >> 7 ) & 0xff	117:8:4172:4196	2012570	0	True				
ANR	2012658	AssignmentExpression	c = ( rand ( ) >> 7 ) & 0xff		2012570	0		=			
ANR	2012659	Identifier	c		2012570	0					
ANR	2012660	BitAndExpression	( rand ( ) >> 7 ) & 0xff		2012570	1		&			
ANR	2012661	ShiftExpression	rand ( ) >> 7		2012570	0		>>			
ANR	2012662	CallExpression	rand ( )		2012570	0					
ANR	2012663	Callee	rand		2012570	0					
ANR	2012664	Identifier	rand		2012570	0					
ANR	2012665	ArgumentList			2012570	1					
ANR	2012666	PrimaryExpression	7		2012570	1					
ANR	2012667	PrimaryExpression	0xff		2012570	1					
ANR	2012668	ExpressionStatement	"header [ n ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , c , t )"	118:8:4206:4266	2012570	1	True				
ANR	2012669	AssignmentExpression	"header [ n ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , c , t )"		2012570	0		=			
ANR	2012670	ArrayIndexing	header [ n ]		2012570	0					
ANR	2012671	Identifier	header		2012570	0					
ANR	2012672	Identifier	n		2012570	1					
ANR	2012673	CastExpression	"( unsigned char ) zencode ( pkeys , pcrc_32_tab , c , t )"		2012570	1					
ANR	2012674	CastTarget	unsigned char		2012570	0					
ANR	2012675	CallExpression	"zencode ( pkeys , pcrc_32_tab , c , t )"		2012570	1					
ANR	2012676	Callee	zencode		2012570	0					
ANR	2012677	Identifier	zencode		2012570	0					
ANR	2012678	ArgumentList	pkeys		2012570	1					
ANR	2012679	Argument	pkeys		2012570	0					
ANR	2012680	Identifier	pkeys		2012570	0					
ANR	2012681	Argument	pcrc_32_tab		2012570	1					
ANR	2012682	Identifier	pcrc_32_tab		2012570	0					
ANR	2012683	Argument	c		2012570	2					
ANR	2012684	Identifier	c		2012570	0					
ANR	2012685	Argument	t		2012570	3					
ANR	2012686	Identifier	t		2012570	0					
ANR	2012687	ExpressionStatement	"init_keys ( passwd , pkeys , pcrc_32_tab )"	121:4:4347:4384	2012570	10	True				
ANR	2012688	CallExpression	"init_keys ( passwd , pkeys , pcrc_32_tab )"		2012570	0					
ANR	2012689	Callee	init_keys		2012570	0					
ANR	2012690	Identifier	init_keys		2012570	0					
ANR	2012691	ArgumentList	passwd		2012570	1					
ANR	2012692	Argument	passwd		2012570	0					
ANR	2012693	Identifier	passwd		2012570	0					
ANR	2012694	Argument	pkeys		2012570	1					
ANR	2012695	Identifier	pkeys		2012570	0					
ANR	2012696	Argument	pcrc_32_tab		2012570	2					
ANR	2012697	Identifier	pcrc_32_tab		2012570	0					
ANR	2012698	ForStatement	for ( n = 0 ; n < RAND_HEAD_LEN - 2 ; n ++ )		2012570	11					
ANR	2012699	ForInit	n = 0 ;	122:9:4395:4400	2012570	0	True				
ANR	2012700	AssignmentExpression	n = 0		2012570	0		=			
ANR	2012701	Identifier	n		2012570	0					
ANR	2012702	PrimaryExpression	0		2012570	1					
ANR	2012703	Condition	n < RAND_HEAD_LEN - 2	122:16:4402:4420	2012570	1	True				
ANR	2012704	RelationalExpression	n < RAND_HEAD_LEN - 2		2012570	0		<			
ANR	2012705	Identifier	n		2012570	0					
ANR	2012706	AdditiveExpression	RAND_HEAD_LEN - 2		2012570	1		-			
ANR	2012707	Identifier	RAND_HEAD_LEN		2012570	0					
ANR	2012708	PrimaryExpression	2		2012570	1					
ANR	2012709	PostIncDecOperationExpression	n ++	122:37:4423:4425	2012570	2	True				
ANR	2012710	Identifier	n		2012570	0					
ANR	2012711	IncDec	++		2012570	1					
ANR	2012712	CompoundStatement		28:4:975:975	2012570	3					
ANR	2012713	ExpressionStatement	"buf [ n ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , header [ n ] , t )"	124:8:4442:4507	2012570	0	True				
ANR	2012714	AssignmentExpression	"buf [ n ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , header [ n ] , t )"		2012570	0		=			
ANR	2012715	ArrayIndexing	buf [ n ]		2012570	0					
ANR	2012716	Identifier	buf		2012570	0					
ANR	2012717	Identifier	n		2012570	1					
ANR	2012718	CastExpression	"( unsigned char ) zencode ( pkeys , pcrc_32_tab , header [ n ] , t )"		2012570	1					
ANR	2012719	CastTarget	unsigned char		2012570	0					
ANR	2012720	CallExpression	"zencode ( pkeys , pcrc_32_tab , header [ n ] , t )"		2012570	1					
ANR	2012721	Callee	zencode		2012570	0					
ANR	2012722	Identifier	zencode		2012570	0					
ANR	2012723	ArgumentList	pkeys		2012570	1					
ANR	2012724	Argument	pkeys		2012570	0					
ANR	2012725	Identifier	pkeys		2012570	0					
ANR	2012726	Argument	pcrc_32_tab		2012570	1					
ANR	2012727	Identifier	pcrc_32_tab		2012570	0					
ANR	2012728	Argument	header [ n ]		2012570	2					
ANR	2012729	ArrayIndexing	header [ n ]		2012570	0					
ANR	2012730	Identifier	header		2012570	0					
ANR	2012731	Identifier	n		2012570	1					
ANR	2012732	Argument	t		2012570	3					
ANR	2012733	Identifier	t		2012570	0					
ANR	2012734	ExpressionStatement	"buf [ n ++ ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 16 ) & 0xff , t )"	126:4:4519:4611	2012570	12	True				
ANR	2012735	AssignmentExpression	"buf [ n ++ ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 16 ) & 0xff , t )"		2012570	0		=			
ANR	2012736	ArrayIndexing	buf [ n ++ ]		2012570	0					
ANR	2012737	Identifier	buf		2012570	0					
ANR	2012738	PostIncDecOperationExpression	n ++		2012570	1					
ANR	2012739	Identifier	n		2012570	0					
ANR	2012740	IncDec	++		2012570	1					
ANR	2012741	CastExpression	"( unsigned char ) zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 16 ) & 0xff , t )"		2012570	1					
ANR	2012742	CastTarget	unsigned char		2012570	0					
ANR	2012743	CallExpression	"zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 16 ) & 0xff , t )"		2012570	1					
ANR	2012744	Callee	zencode		2012570	0					
ANR	2012745	Identifier	zencode		2012570	0					
ANR	2012746	ArgumentList	pkeys		2012570	1					
ANR	2012747	Argument	pkeys		2012570	0					
ANR	2012748	Identifier	pkeys		2012570	0					
ANR	2012749	Argument	pcrc_32_tab		2012570	1					
ANR	2012750	Identifier	pcrc_32_tab		2012570	0					
ANR	2012751	Argument	( int ) ( crcForCrypting >> 16 ) & 0xff		2012570	2					
ANR	2012752	BitAndExpression	( int ) ( crcForCrypting >> 16 ) & 0xff		2012570	0		&			
ANR	2012753	CastExpression	( int ) ( crcForCrypting >> 16 )		2012570	0					
ANR	2012754	CastTarget	int		2012570	0					
ANR	2012755	ShiftExpression	crcForCrypting >> 16		2012570	1		>>			
ANR	2012756	Identifier	crcForCrypting		2012570	0					
ANR	2012757	PrimaryExpression	16		2012570	1					
ANR	2012758	PrimaryExpression	0xff		2012570	1					
ANR	2012759	Argument	t		2012570	3					
ANR	2012760	Identifier	t		2012570	0					
ANR	2012761	ExpressionStatement	"buf [ n ++ ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 24 ) & 0xff , t )"	127:4:4617:4709	2012570	13	True				
ANR	2012762	AssignmentExpression	"buf [ n ++ ] = ( unsigned char ) zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 24 ) & 0xff , t )"		2012570	0		=			
ANR	2012763	ArrayIndexing	buf [ n ++ ]		2012570	0					
ANR	2012764	Identifier	buf		2012570	0					
ANR	2012765	PostIncDecOperationExpression	n ++		2012570	1					
ANR	2012766	Identifier	n		2012570	0					
ANR	2012767	IncDec	++		2012570	1					
ANR	2012768	CastExpression	"( unsigned char ) zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 24 ) & 0xff , t )"		2012570	1					
ANR	2012769	CastTarget	unsigned char		2012570	0					
ANR	2012770	CallExpression	"zencode ( pkeys , pcrc_32_tab , ( int ) ( crcForCrypting >> 24 ) & 0xff , t )"		2012570	1					
ANR	2012771	Callee	zencode		2012570	0					
ANR	2012772	Identifier	zencode		2012570	0					
ANR	2012773	ArgumentList	pkeys		2012570	1					
ANR	2012774	Argument	pkeys		2012570	0					
ANR	2012775	Identifier	pkeys		2012570	0					
ANR	2012776	Argument	pcrc_32_tab		2012570	1					
ANR	2012777	Identifier	pcrc_32_tab		2012570	0					
ANR	2012778	Argument	( int ) ( crcForCrypting >> 24 ) & 0xff		2012570	2					
ANR	2012779	BitAndExpression	( int ) ( crcForCrypting >> 24 ) & 0xff		2012570	0		&			
ANR	2012780	CastExpression	( int ) ( crcForCrypting >> 24 )		2012570	0					
ANR	2012781	CastTarget	int		2012570	0					
ANR	2012782	ShiftExpression	crcForCrypting >> 24		2012570	1		>>			
ANR	2012783	Identifier	crcForCrypting		2012570	0					
ANR	2012784	PrimaryExpression	24		2012570	1					
ANR	2012785	PrimaryExpression	0xff		2012570	1					
ANR	2012786	Argument	t		2012570	3					
ANR	2012787	Identifier	t		2012570	0					
ANR	2012788	ReturnStatement	return n ;	128:4:4715:4723	2012570	14	True				
ANR	2012789	Identifier	n		2012570	0					
ANR	2012790	ReturnType	static int		2012570	1					
ANR	2012791	Identifier	crypthead		2012570	2					
ANR	2012792	ParameterList	"const char * passwd , unsigned char * buf , int bufSize , unsigned long * pkeys , const z_crc_t * pcrc_32_tab , unsigned long crcForCrypting"		2012570	3					
ANR	2012793	Parameter	const char * passwd	90:21:3158:3175	2012570	0	True				
ANR	2012794	ParameterType	const char *		2012570	0					
ANR	2012795	Identifier	passwd		2012570	1					
ANR	2012796	Parameter	unsigned char * buf	91:21:3226:3243	2012570	1	True				
ANR	2012797	ParameterType	unsigned char *		2012570	0					
ANR	2012798	Identifier	buf		2012570	1					
ANR	2012799	Parameter	int bufSize	92:21:3300:3310	2012570	2	True				
ANR	2012800	ParameterType	int		2012570	0					
ANR	2012801	Identifier	bufSize		2012570	1					
ANR	2012802	Parameter	unsigned long * pkeys	93:21:3334:3353	2012570	3	True				
ANR	2012803	ParameterType	unsigned long *		2012570	0					
ANR	2012804	Identifier	pkeys		2012570	1					
ANR	2012805	Parameter	const z_crc_t * pcrc_32_tab	94:21:3377:3402	2012570	4	True				
ANR	2012806	ParameterType	const z_crc_t *		2012570	0					
ANR	2012807	Identifier	pcrc_32_tab		2012570	1					
ANR	2012808	Parameter	unsigned long crcForCrypting	95:21:3426:3453	2012570	5	True				
ANR	2012809	ParameterType	unsigned long		2012570	0					
ANR	2012810	Identifier	crcForCrypting		2012570	1					
ANR	2012811	CFGEntryNode	ENTRY		2012570		True				
ANR	2012812	CFGExitNode	EXIT		2012570		True				
ANR	2012813	Symbol	ZCR_SEED2		2012570						
ANR	2012814	Symbol	* buf		2012570						
ANR	2012815	Symbol	c		2012570						
ANR	2012816	Symbol	NULL		2012570						
ANR	2012817	Symbol	n		2012570						
ANR	2012818	Symbol	* header		2012570						
ANR	2012819	Symbol	RAND_HEAD_LEN		2012570						
ANR	2012820	Symbol	rand		2012570						
ANR	2012821	Symbol	buf		2012570						
ANR	2012822	Symbol	crcForCrypting		2012570						
ANR	2012823	Symbol	t		2012570						
ANR	2012824	Symbol	passwd		2012570						
ANR	2012825	Symbol	calls		2012570						
ANR	2012826	Symbol	pcrc_32_tab		2012570						
ANR	2012827	Symbol	pkeys		2012570						
ANR	2012828	Symbol	* n		2012570						
ANR	2012829	Symbol	header		2012570						
ANR	2012830	Symbol	bufSize		2012570						
ANR	2012831	Symbol	time		2012570						
ANR	2012832	Symbol	zencode		2012570						
