command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11261657	File	data/converged/CVE-2018-16863_ghostpdl/zpipe.c								
ANR	11261658	Function	def	36:0:1343:2877							
ANR	11261659	FunctionDef	"def (FILE * source , FILE * dest , int level)"		11261658	0					
ANR	11261660	CompoundStatement		37:0:1388:2877	11261658	0					
ANR	11261661	IdentifierDeclStatement	"int ret , flush ;"	38:4:1394:1408	11261658	0	True				
ANR	11261662	IdentifierDecl	ret		11261658	0					
ANR	11261663	IdentifierDeclType	int		11261658	0					
ANR	11261664	Identifier	ret		11261658	1					
ANR	11261665	IdentifierDecl	flush		11261658	1					
ANR	11261666	IdentifierDeclType	int		11261658	0					
ANR	11261667	Identifier	flush		11261658	1					
ANR	11261668	IdentifierDeclStatement	unsigned have ;	39:4:1414:1427	11261658	1	True				
ANR	11261669	IdentifierDecl	have		11261658	0					
ANR	11261670	IdentifierDeclType	unsigned		11261658	0					
ANR	11261671	Identifier	have		11261658	1					
ANR	11261672	IdentifierDeclStatement	z_stream strm ;	40:4:1433:1446	11261658	2	True				
ANR	11261673	IdentifierDecl	strm		11261658	0					
ANR	11261674	IdentifierDeclType	z_stream		11261658	0					
ANR	11261675	Identifier	strm		11261658	1					
ANR	11261676	IdentifierDeclStatement	unsigned char in [ CHUNK ] ;	41:4:1452:1475	11261658	3	True				
ANR	11261677	IdentifierDecl	in [ CHUNK ]		11261658	0					
ANR	11261678	IdentifierDeclType	unsigned char [ CHUNK ]		11261658	0					
ANR	11261679	Identifier	in		11261658	1					
ANR	11261680	Identifier	CHUNK		11261658	2					
ANR	11261681	IdentifierDeclStatement	unsigned char out [ CHUNK ] ;	42:4:1481:1505	11261658	4	True				
ANR	11261682	IdentifierDecl	out [ CHUNK ]		11261658	0					
ANR	11261683	IdentifierDeclType	unsigned char [ CHUNK ]		11261658	0					
ANR	11261684	Identifier	out		11261658	1					
ANR	11261685	Identifier	CHUNK		11261658	2					
ANR	11261686	ExpressionStatement	strm . zalloc = Z_NULL	45:4:1545:1565	11261658	5	True				
ANR	11261687	AssignmentExpression	strm . zalloc = Z_NULL		11261658	0		=			
ANR	11261688	MemberAccess	strm . zalloc		11261658	0					
ANR	11261689	Identifier	strm		11261658	0					
ANR	11261690	Identifier	zalloc		11261658	1					
ANR	11261691	Identifier	Z_NULL		11261658	1					
ANR	11261692	ExpressionStatement	strm . zfree = Z_NULL	46:4:1571:1590	11261658	6	True				
ANR	11261693	AssignmentExpression	strm . zfree = Z_NULL		11261658	0		=			
ANR	11261694	MemberAccess	strm . zfree		11261658	0					
ANR	11261695	Identifier	strm		11261658	0					
ANR	11261696	Identifier	zfree		11261658	1					
ANR	11261697	Identifier	Z_NULL		11261658	1					
ANR	11261698	ExpressionStatement	strm . opaque = Z_NULL	47:4:1596:1616	11261658	7	True				
ANR	11261699	AssignmentExpression	strm . opaque = Z_NULL		11261658	0		=			
ANR	11261700	MemberAccess	strm . opaque		11261658	0					
ANR	11261701	Identifier	strm		11261658	0					
ANR	11261702	Identifier	opaque		11261658	1					
ANR	11261703	Identifier	Z_NULL		11261658	1					
ANR	11261704	ExpressionStatement	"ret = deflateInit ( & strm , level )"	48:4:1622:1653	11261658	8	True				
ANR	11261705	AssignmentExpression	"ret = deflateInit ( & strm , level )"		11261658	0		=			
ANR	11261706	Identifier	ret		11261658	0					
ANR	11261707	CallExpression	"deflateInit ( & strm , level )"		11261658	1					
ANR	11261708	Callee	deflateInit		11261658	0					
ANR	11261709	Identifier	deflateInit		11261658	0					
ANR	11261710	ArgumentList	& strm		11261658	1					
ANR	11261711	Argument	& strm		11261658	0					
ANR	11261712	UnaryOperationExpression	& strm		11261658	0					
ANR	11261713	UnaryOperator	&		11261658	0					
ANR	11261714	Identifier	strm		11261658	1					
ANR	11261715	Argument	level		11261658	1					
ANR	11261716	Identifier	level		11261658	0					
ANR	11261717	IfStatement	if ( ret != Z_OK )		11261658	9					
ANR	11261718	Condition	ret != Z_OK	49:8:1663:1673	11261658	0	True				
ANR	11261719	EqualityExpression	ret != Z_OK		11261658	0		!=			
ANR	11261720	Identifier	ret		11261658	0					
ANR	11261721	Identifier	Z_OK		11261658	1					
ANR	11261722	ReturnStatement	return ret ;	50:8:1684:1694	11261658	1	True				
ANR	11261723	Identifier	ret		11261658	0					
ANR	11261724	DoStatement	do		11261658	10					
ANR	11261725	CompoundStatement		17:7:352:352	11261658	0					
ANR	11261726	ExpressionStatement	"strm . avail_in = fread ( in , 1 , CHUNK , source )"	54:8:1751:1794	11261658	0	True				
ANR	11261727	AssignmentExpression	"strm . avail_in = fread ( in , 1 , CHUNK , source )"		11261658	0		=			
ANR	11261728	MemberAccess	strm . avail_in		11261658	0					
ANR	11261729	Identifier	strm		11261658	0					
ANR	11261730	Identifier	avail_in		11261658	1					
ANR	11261731	CallExpression	"fread ( in , 1 , CHUNK , source )"		11261658	1					
ANR	11261732	Callee	fread		11261658	0					
ANR	11261733	Identifier	fread		11261658	0					
ANR	11261734	ArgumentList	in		11261658	1					
ANR	11261735	Argument	in		11261658	0					
ANR	11261736	Identifier	in		11261658	0					
ANR	11261737	Argument	1		11261658	1					
ANR	11261738	PrimaryExpression	1		11261658	0					
ANR	11261739	Argument	CHUNK		11261658	2					
ANR	11261740	Identifier	CHUNK		11261658	0					
ANR	11261741	Argument	source		11261658	3					
ANR	11261742	Identifier	source		11261658	0					
ANR	11261743	IfStatement	if ( ferror ( source ) )		11261658	1					
ANR	11261744	Condition	ferror ( source )	55:12:1808:1821	11261658	0	True				
ANR	11261745	CallExpression	ferror ( source )		11261658	0					
ANR	11261746	Callee	ferror		11261658	0					
ANR	11261747	Identifier	ferror		11261658	0					
ANR	11261748	ArgumentList	source		11261658	1					
ANR	11261749	Argument	source		11261658	0					
ANR	11261750	Identifier	source		11261658	0					
ANR	11261751	CompoundStatement		19:28:435:435	11261658	1					
ANR	11261752	ExpressionStatement	( void ) deflateEnd ( & strm )	56:12:1838:1861	11261658	0	True				
ANR	11261753	CastExpression	( void ) deflateEnd ( & strm )		11261658	0					
ANR	11261754	CastTarget	void		11261658	0					
ANR	11261755	CallExpression	deflateEnd ( & strm )		11261658	1					
ANR	11261756	Callee	deflateEnd		11261658	0					
ANR	11261757	Identifier	deflateEnd		11261658	0					
ANR	11261758	ArgumentList	& strm		11261658	1					
ANR	11261759	Argument	& strm		11261658	0					
ANR	11261760	UnaryOperationExpression	& strm		11261658	0					
ANR	11261761	UnaryOperator	&		11261658	0					
ANR	11261762	Identifier	strm		11261658	1					
ANR	11261763	ReturnStatement	return Z_ERRNO ;	57:12:1875:1889	11261658	1	True				
ANR	11261764	Identifier	Z_ERRNO		11261658	0					
ANR	11261765	ExpressionStatement	flush = feof ( source ) ? Z_FINISH : Z_NO_FLUSH	59:8:1909:1953	11261658	2	True				
ANR	11261766	AssignmentExpression	flush = feof ( source ) ? Z_FINISH : Z_NO_FLUSH		11261658	0		=			
ANR	11261767	Identifier	flush		11261658	0					
ANR	11261768	ConditionalExpression	feof ( source ) ? Z_FINISH : Z_NO_FLUSH		11261658	1					
ANR	11261769	Condition	feof ( source )		11261658	0					
ANR	11261770	CallExpression	feof ( source )		11261658	0					
ANR	11261771	Callee	feof		11261658	0					
ANR	11261772	Identifier	feof		11261658	0					
ANR	11261773	ArgumentList	source		11261658	1					
ANR	11261774	Argument	source		11261658	0					
ANR	11261775	Identifier	source		11261658	0					
ANR	11261776	Identifier	Z_FINISH		11261658	1					
ANR	11261777	Identifier	Z_NO_FLUSH		11261658	2					
ANR	11261778	ExpressionStatement	strm . next_in = in	60:8:1963:1980	11261658	3	True				
ANR	11261779	AssignmentExpression	strm . next_in = in		11261658	0		=			
ANR	11261780	MemberAccess	strm . next_in		11261658	0					
ANR	11261781	Identifier	strm		11261658	0					
ANR	11261782	Identifier	next_in		11261658	1					
ANR	11261783	Identifier	in		11261658	1					
ANR	11261784	DoStatement	do		11261658	4					
ANR	11261785	CompoundStatement		28:11:736:736	11261658	0					
ANR	11261786	ExpressionStatement	strm . avail_out = CHUNK	65:12:2139:2161	11261658	0	True				
ANR	11261787	AssignmentExpression	strm . avail_out = CHUNK		11261658	0		=			
ANR	11261788	MemberAccess	strm . avail_out		11261658	0					
ANR	11261789	Identifier	strm		11261658	0					
ANR	11261790	Identifier	avail_out		11261658	1					
ANR	11261791	Identifier	CHUNK		11261658	1					
ANR	11261792	ExpressionStatement	strm . next_out = out	66:12:2175:2194	11261658	1	True				
ANR	11261793	AssignmentExpression	strm . next_out = out		11261658	0		=			
ANR	11261794	MemberAccess	strm . next_out		11261658	0					
ANR	11261795	Identifier	strm		11261658	0					
ANR	11261796	Identifier	next_out		11261658	1					
ANR	11261797	Identifier	out		11261658	1					
ANR	11261798	ExpressionStatement	"ret = deflate ( & strm , flush )"	67:12:2208:2235	11261658	2	True				
ANR	11261799	AssignmentExpression	"ret = deflate ( & strm , flush )"		11261658	0		=			
ANR	11261800	Identifier	ret		11261658	0					
ANR	11261801	CallExpression	"deflate ( & strm , flush )"		11261658	1					
ANR	11261802	Callee	deflate		11261658	0					
ANR	11261803	Identifier	deflate		11261658	0					
ANR	11261804	ArgumentList	& strm		11261658	1					
ANR	11261805	Argument	& strm		11261658	0					
ANR	11261806	UnaryOperationExpression	& strm		11261658	0					
ANR	11261807	UnaryOperator	&		11261658	0					
ANR	11261808	Identifier	strm		11261658	1					
ANR	11261809	Argument	flush		11261658	1					
ANR	11261810	Identifier	flush		11261658	0					
ANR	11261811	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	68:12:2278:2307	11261658	3	True				
ANR	11261812	CallExpression	assert ( ret != Z_STREAM_ERROR )		11261658	0					
ANR	11261813	Callee	assert		11261658	0					
ANR	11261814	Identifier	assert		11261658	0					
ANR	11261815	ArgumentList	ret != Z_STREAM_ERROR		11261658	1					
ANR	11261816	Argument	ret != Z_STREAM_ERROR		11261658	0					
ANR	11261817	EqualityExpression	ret != Z_STREAM_ERROR		11261658	0		!=			
ANR	11261818	Identifier	ret		11261658	0					
ANR	11261819	Identifier	Z_STREAM_ERROR		11261658	1					
ANR	11261820	ExpressionStatement	have = CHUNK - strm . avail_out	69:12:2348:2377	11261658	4	True				
ANR	11261821	AssignmentExpression	have = CHUNK - strm . avail_out		11261658	0		=			
ANR	11261822	Identifier	have		11261658	0					
ANR	11261823	AdditiveExpression	CHUNK - strm . avail_out		11261658	1		-			
ANR	11261824	Identifier	CHUNK		11261658	0					
ANR	11261825	MemberAccess	strm . avail_out		11261658	1					
ANR	11261826	Identifier	strm		11261658	0					
ANR	11261827	Identifier	avail_out		11261658	1					
ANR	11261828	IfStatement	"if ( fwrite ( out , 1 , have , dest ) != have || ferror ( dest ) )"		11261658	5					
ANR	11261829	Condition	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"	70:16:2395:2444	11261658	0	True				
ANR	11261830	OrExpression	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"		11261658	0		||			
ANR	11261831	EqualityExpression	"fwrite ( out , 1 , have , dest ) != have"		11261658	0		!=			
ANR	11261832	CallExpression	"fwrite ( out , 1 , have , dest )"		11261658	0					
ANR	11261833	Callee	fwrite		11261658	0					
ANR	11261834	Identifier	fwrite		11261658	0					
ANR	11261835	ArgumentList	out		11261658	1					
ANR	11261836	Argument	out		11261658	0					
ANR	11261837	Identifier	out		11261658	0					
ANR	11261838	Argument	1		11261658	1					
ANR	11261839	PrimaryExpression	1		11261658	0					
ANR	11261840	Argument	have		11261658	2					
ANR	11261841	Identifier	have		11261658	0					
ANR	11261842	Argument	dest		11261658	3					
ANR	11261843	Identifier	dest		11261658	0					
ANR	11261844	Identifier	have		11261658	1					
ANR	11261845	CallExpression	ferror ( dest )		11261658	1					
ANR	11261846	Callee	ferror		11261658	0					
ANR	11261847	Identifier	ferror		11261658	0					
ANR	11261848	ArgumentList	dest		11261658	1					
ANR	11261849	Argument	dest		11261658	0					
ANR	11261850	Identifier	dest		11261658	0					
ANR	11261851	CompoundStatement		34:68:1058:1058	11261658	1					
ANR	11261852	ExpressionStatement	( void ) deflateEnd ( & strm )	71:16:2465:2488	11261658	0	True				
ANR	11261853	CastExpression	( void ) deflateEnd ( & strm )		11261658	0					
ANR	11261854	CastTarget	void		11261658	0					
ANR	11261855	CallExpression	deflateEnd ( & strm )		11261658	1					
ANR	11261856	Callee	deflateEnd		11261658	0					
ANR	11261857	Identifier	deflateEnd		11261658	0					
ANR	11261858	ArgumentList	& strm		11261658	1					
ANR	11261859	Argument	& strm		11261658	0					
ANR	11261860	UnaryOperationExpression	& strm		11261658	0					
ANR	11261861	UnaryOperator	&		11261658	0					
ANR	11261862	Identifier	strm		11261658	1					
ANR	11261863	ReturnStatement	return Z_ERRNO ;	72:16:2506:2520	11261658	1	True				
ANR	11261864	Identifier	Z_ERRNO		11261658	0					
ANR	11261865	Condition	strm . avail_out == 0	74:17:2553:2571	11261658	1	True				
ANR	11261866	EqualityExpression	strm . avail_out == 0		11261658	0		==			
ANR	11261867	MemberAccess	strm . avail_out		11261658	0					
ANR	11261868	Identifier	strm		11261658	0					
ANR	11261869	Identifier	avail_out		11261658	1					
ANR	11261870	PrimaryExpression	0		11261658	1					
ANR	11261871	ExpressionStatement	assert ( strm . avail_in == 0 )	75:8:2583:2609	11261658	5	True				
ANR	11261872	CallExpression	assert ( strm . avail_in == 0 )		11261658	0					
ANR	11261873	Callee	assert		11261658	0					
ANR	11261874	Identifier	assert		11261658	0					
ANR	11261875	ArgumentList	strm . avail_in == 0		11261658	1					
ANR	11261876	Argument	strm . avail_in == 0		11261658	0					
ANR	11261877	EqualityExpression	strm . avail_in == 0		11261658	0		==			
ANR	11261878	MemberAccess	strm . avail_in		11261658	0					
ANR	11261879	Identifier	strm		11261658	0					
ANR	11261880	Identifier	avail_in		11261658	1					
ANR	11261881	PrimaryExpression	0		11261658	1					
ANR	11261882	Condition	flush != Z_FINISH	78:13:2710:2726	11261658	1	True				
ANR	11261883	EqualityExpression	flush != Z_FINISH		11261658	0		!=			
ANR	11261884	Identifier	flush		11261658	0					
ANR	11261885	Identifier	Z_FINISH		11261658	1					
ANR	11261886	ExpressionStatement	assert ( ret == Z_STREAM_END )	79:4:2734:2761	11261658	11	True				
ANR	11261887	CallExpression	assert ( ret == Z_STREAM_END )		11261658	0					
ANR	11261888	Callee	assert		11261658	0					
ANR	11261889	Identifier	assert		11261658	0					
ANR	11261890	ArgumentList	ret == Z_STREAM_END		11261658	1					
ANR	11261891	Argument	ret == Z_STREAM_END		11261658	0					
ANR	11261892	EqualityExpression	ret == Z_STREAM_END		11261658	0		==			
ANR	11261893	Identifier	ret		11261658	0					
ANR	11261894	Identifier	Z_STREAM_END		11261658	1					
ANR	11261895	ExpressionStatement	( void ) deflateEnd ( & strm )	82:4:2835:2858	11261658	12	True				
ANR	11261896	CastExpression	( void ) deflateEnd ( & strm )		11261658	0					
ANR	11261897	CastTarget	void		11261658	0					
ANR	11261898	CallExpression	deflateEnd ( & strm )		11261658	1					
ANR	11261899	Callee	deflateEnd		11261658	0					
ANR	11261900	Identifier	deflateEnd		11261658	0					
ANR	11261901	ArgumentList	& strm		11261658	1					
ANR	11261902	Argument	& strm		11261658	0					
ANR	11261903	UnaryOperationExpression	& strm		11261658	0					
ANR	11261904	UnaryOperator	&		11261658	0					
ANR	11261905	Identifier	strm		11261658	1					
ANR	11261906	ReturnStatement	return Z_OK ;	83:4:2864:2875	11261658	13	True				
ANR	11261907	Identifier	Z_OK		11261658	0					
ANR	11261908	ReturnType	int		11261658	1					
ANR	11261909	Identifier	def		11261658	2					
ANR	11261910	ParameterList	"FILE * source , FILE * dest , int level"		11261658	3					
ANR	11261911	Parameter	FILE * source	36:8:1351:1362	11261658	0	True				
ANR	11261912	ParameterType	FILE *		11261658	0					
ANR	11261913	Identifier	source		11261658	1					
ANR	11261914	Parameter	FILE * dest	36:22:1365:1374	11261658	1	True				
ANR	11261915	ParameterType	FILE *		11261658	0					
ANR	11261916	Identifier	dest		11261658	1					
ANR	11261917	Parameter	int level	36:34:1377:1385	11261658	2	True				
ANR	11261918	ParameterType	int		11261658	0					
ANR	11261919	Identifier	level		11261658	1					
ANR	11261920	CFGEntryNode	ENTRY		11261658		True				
ANR	11261921	CFGExitNode	EXIT		11261658		True				
ANR	11261922	Symbol	Z_STREAM_ERROR		11261658						
ANR	11261923	Symbol	& strm		11261658						
ANR	11261924	Symbol	strm . zalloc		11261658						
ANR	11261925	Symbol	source		11261658						
ANR	11261926	Symbol	Z_OK		11261658						
ANR	11261927	Symbol	dest		11261658						
ANR	11261928	Symbol	out		11261658						
ANR	11261929	Symbol	strm . next_in		11261658						
ANR	11261930	Symbol	Z_NO_FLUSH		11261658						
ANR	11261931	Symbol	strm . opaque		11261658						
ANR	11261932	Symbol	flush		11261658						
ANR	11261933	Symbol	have		11261658						
ANR	11261934	Symbol	Z_STREAM_END		11261658						
ANR	11261935	Symbol	CHUNK		11261658						
ANR	11261936	Symbol	ret		11261658						
ANR	11261937	Symbol	Z_ERRNO		11261658						
ANR	11261938	Symbol	level		11261658						
ANR	11261939	Symbol	in		11261658						
ANR	11261940	Symbol	deflateInit		11261658						
ANR	11261941	Symbol	fwrite		11261658						
ANR	11261942	Symbol	strm		11261658						
ANR	11261943	Symbol	Z_FINISH		11261658						
ANR	11261944	Symbol	fread		11261658						
ANR	11261945	Symbol	ferror		11261658						
ANR	11261946	Symbol	deflate		11261658						
ANR	11261947	Symbol	strm . avail_out		11261658						
ANR	11261948	Symbol	strm . next_out		11261658						
ANR	11261949	Symbol	feof		11261658						
ANR	11261950	Symbol	strm . zfree		11261658						
ANR	11261951	Symbol	Z_NULL		11261658						
ANR	11261952	Symbol	strm . avail_in		11261658						
ANR	11261953	Function	inf	92:0:3274:4927							
ANR	11261954	FunctionDef	"inf (FILE * source , FILE * dest)"		11261953	0					
ANR	11261955	CompoundStatement		93:0:3308:4927	11261953	0					
ANR	11261956	IdentifierDeclStatement	int ret ;	94:4:3314:3321	11261953	0	True				
ANR	11261957	IdentifierDecl	ret		11261953	0					
ANR	11261958	IdentifierDeclType	int		11261953	0					
ANR	11261959	Identifier	ret		11261953	1					
ANR	11261960	IdentifierDeclStatement	unsigned have ;	95:4:3327:3340	11261953	1	True				
ANR	11261961	IdentifierDecl	have		11261953	0					
ANR	11261962	IdentifierDeclType	unsigned		11261953	0					
ANR	11261963	Identifier	have		11261953	1					
ANR	11261964	IdentifierDeclStatement	z_stream strm ;	96:4:3346:3359	11261953	2	True				
ANR	11261965	IdentifierDecl	strm		11261953	0					
ANR	11261966	IdentifierDeclType	z_stream		11261953	0					
ANR	11261967	Identifier	strm		11261953	1					
ANR	11261968	IdentifierDeclStatement	unsigned char in [ CHUNK ] ;	97:4:3365:3388	11261953	3	True				
ANR	11261969	IdentifierDecl	in [ CHUNK ]		11261953	0					
ANR	11261970	IdentifierDeclType	unsigned char [ CHUNK ]		11261953	0					
ANR	11261971	Identifier	in		11261953	1					
ANR	11261972	Identifier	CHUNK		11261953	2					
ANR	11261973	IdentifierDeclStatement	unsigned char out [ CHUNK ] ;	98:4:3394:3418	11261953	4	True				
ANR	11261974	IdentifierDecl	out [ CHUNK ]		11261953	0					
ANR	11261975	IdentifierDeclType	unsigned char [ CHUNK ]		11261953	0					
ANR	11261976	Identifier	out		11261953	1					
ANR	11261977	Identifier	CHUNK		11261953	2					
ANR	11261978	ExpressionStatement	strm . zalloc = Z_NULL	101:4:3458:3478	11261953	5	True				
ANR	11261979	AssignmentExpression	strm . zalloc = Z_NULL		11261953	0		=			
ANR	11261980	MemberAccess	strm . zalloc		11261953	0					
ANR	11261981	Identifier	strm		11261953	0					
ANR	11261982	Identifier	zalloc		11261953	1					
ANR	11261983	Identifier	Z_NULL		11261953	1					
ANR	11261984	ExpressionStatement	strm . zfree = Z_NULL	102:4:3484:3503	11261953	6	True				
ANR	11261985	AssignmentExpression	strm . zfree = Z_NULL		11261953	0		=			
ANR	11261986	MemberAccess	strm . zfree		11261953	0					
ANR	11261987	Identifier	strm		11261953	0					
ANR	11261988	Identifier	zfree		11261953	1					
ANR	11261989	Identifier	Z_NULL		11261953	1					
ANR	11261990	ExpressionStatement	strm . opaque = Z_NULL	103:4:3509:3529	11261953	7	True				
ANR	11261991	AssignmentExpression	strm . opaque = Z_NULL		11261953	0		=			
ANR	11261992	MemberAccess	strm . opaque		11261953	0					
ANR	11261993	Identifier	strm		11261953	0					
ANR	11261994	Identifier	opaque		11261953	1					
ANR	11261995	Identifier	Z_NULL		11261953	1					
ANR	11261996	ExpressionStatement	strm . avail_in = 0	104:4:3535:3552	11261953	8	True				
ANR	11261997	AssignmentExpression	strm . avail_in = 0		11261953	0		=			
ANR	11261998	MemberAccess	strm . avail_in		11261953	0					
ANR	11261999	Identifier	strm		11261953	0					
ANR	11262000	Identifier	avail_in		11261953	1					
ANR	11262001	PrimaryExpression	0		11261953	1					
ANR	11262002	ExpressionStatement	strm . next_in = Z_NULL	105:4:3558:3579	11261953	9	True				
ANR	11262003	AssignmentExpression	strm . next_in = Z_NULL		11261953	0		=			
ANR	11262004	MemberAccess	strm . next_in		11261953	0					
ANR	11262005	Identifier	strm		11261953	0					
ANR	11262006	Identifier	next_in		11261953	1					
ANR	11262007	Identifier	Z_NULL		11261953	1					
ANR	11262008	ExpressionStatement	ret = inflateInit ( & strm )	106:4:3585:3609	11261953	10	True				
ANR	11262009	AssignmentExpression	ret = inflateInit ( & strm )		11261953	0		=			
ANR	11262010	Identifier	ret		11261953	0					
ANR	11262011	CallExpression	inflateInit ( & strm )		11261953	1					
ANR	11262012	Callee	inflateInit		11261953	0					
ANR	11262013	Identifier	inflateInit		11261953	0					
ANR	11262014	ArgumentList	& strm		11261953	1					
ANR	11262015	Argument	& strm		11261953	0					
ANR	11262016	UnaryOperationExpression	& strm		11261953	0					
ANR	11262017	UnaryOperator	&		11261953	0					
ANR	11262018	Identifier	strm		11261953	1					
ANR	11262019	IfStatement	if ( ret != Z_OK )		11261953	11					
ANR	11262020	Condition	ret != Z_OK	107:8:3619:3629	11261953	0	True				
ANR	11262021	EqualityExpression	ret != Z_OK		11261953	0		!=			
ANR	11262022	Identifier	ret		11261953	0					
ANR	11262023	Identifier	Z_OK		11261953	1					
ANR	11262024	ReturnStatement	return ret ;	108:8:3640:3650	11261953	1	True				
ANR	11262025	Identifier	ret		11261953	0					
ANR	11262026	DoStatement	do		11261953	12					
ANR	11262027	CompoundStatement		19:7:413:413	11261953	0					
ANR	11262028	ExpressionStatement	"strm . avail_in = fread ( in , 1 , CHUNK , source )"	112:8:3732:3775	11261953	0	True				
ANR	11262029	AssignmentExpression	"strm . avail_in = fread ( in , 1 , CHUNK , source )"		11261953	0		=			
ANR	11262030	MemberAccess	strm . avail_in		11261953	0					
ANR	11262031	Identifier	strm		11261953	0					
ANR	11262032	Identifier	avail_in		11261953	1					
ANR	11262033	CallExpression	"fread ( in , 1 , CHUNK , source )"		11261953	1					
ANR	11262034	Callee	fread		11261953	0					
ANR	11262035	Identifier	fread		11261953	0					
ANR	11262036	ArgumentList	in		11261953	1					
ANR	11262037	Argument	in		11261953	0					
ANR	11262038	Identifier	in		11261953	0					
ANR	11262039	Argument	1		11261953	1					
ANR	11262040	PrimaryExpression	1		11261953	0					
ANR	11262041	Argument	CHUNK		11261953	2					
ANR	11262042	Identifier	CHUNK		11261953	0					
ANR	11262043	Argument	source		11261953	3					
ANR	11262044	Identifier	source		11261953	0					
ANR	11262045	IfStatement	if ( ferror ( source ) )		11261953	1					
ANR	11262046	Condition	ferror ( source )	113:12:3789:3802	11261953	0	True				
ANR	11262047	CallExpression	ferror ( source )		11261953	0					
ANR	11262048	Callee	ferror		11261953	0					
ANR	11262049	Identifier	ferror		11261953	0					
ANR	11262050	ArgumentList	source		11261953	1					
ANR	11262051	Argument	source		11261953	0					
ANR	11262052	Identifier	source		11261953	0					
ANR	11262053	CompoundStatement		21:28:496:496	11261953	1					
ANR	11262054	ExpressionStatement	( void ) inflateEnd ( & strm )	114:12:3819:3842	11261953	0	True				
ANR	11262055	CastExpression	( void ) inflateEnd ( & strm )		11261953	0					
ANR	11262056	CastTarget	void		11261953	0					
ANR	11262057	CallExpression	inflateEnd ( & strm )		11261953	1					
ANR	11262058	Callee	inflateEnd		11261953	0					
ANR	11262059	Identifier	inflateEnd		11261953	0					
ANR	11262060	ArgumentList	& strm		11261953	1					
ANR	11262061	Argument	& strm		11261953	0					
ANR	11262062	UnaryOperationExpression	& strm		11261953	0					
ANR	11262063	UnaryOperator	&		11261953	0					
ANR	11262064	Identifier	strm		11261953	1					
ANR	11262065	ReturnStatement	return Z_ERRNO ;	115:12:3856:3870	11261953	1	True				
ANR	11262066	Identifier	Z_ERRNO		11261953	0					
ANR	11262067	IfStatement	if ( strm . avail_in == 0 )		11261953	2					
ANR	11262068	Condition	strm . avail_in == 0	117:12:3894:3911	11261953	0	True				
ANR	11262069	EqualityExpression	strm . avail_in == 0		11261953	0		==			
ANR	11262070	MemberAccess	strm . avail_in		11261953	0					
ANR	11262071	Identifier	strm		11261953	0					
ANR	11262072	Identifier	avail_in		11261953	1					
ANR	11262073	PrimaryExpression	0		11261953	1					
ANR	11262074	BreakStatement	break ;	118:12:3926:3931	11261953	1	True				
ANR	11262075	ExpressionStatement	strm . next_in = in	119:8:3941:3958	11261953	3	True				
ANR	11262076	AssignmentExpression	strm . next_in = in		11261953	0		=			
ANR	11262077	MemberAccess	strm . next_in		11261953	0					
ANR	11262078	Identifier	strm		11261953	0					
ANR	11262079	Identifier	next_in		11261953	1					
ANR	11262080	Identifier	in		11261953	1					
ANR	11262081	DoStatement	do		11261953	4					
ANR	11262082	CompoundStatement		30:11:729:729	11261953	0					
ANR	11262083	ExpressionStatement	strm . avail_out = CHUNK	123:12:4052:4074	11261953	0	True				
ANR	11262084	AssignmentExpression	strm . avail_out = CHUNK		11261953	0		=			
ANR	11262085	MemberAccess	strm . avail_out		11261953	0					
ANR	11262086	Identifier	strm		11261953	0					
ANR	11262087	Identifier	avail_out		11261953	1					
ANR	11262088	Identifier	CHUNK		11261953	1					
ANR	11262089	ExpressionStatement	strm . next_out = out	124:12:4088:4107	11261953	1	True				
ANR	11262090	AssignmentExpression	strm . next_out = out		11261953	0		=			
ANR	11262091	MemberAccess	strm . next_out		11261953	0					
ANR	11262092	Identifier	strm		11261953	0					
ANR	11262093	Identifier	next_out		11261953	1					
ANR	11262094	Identifier	out		11261953	1					
ANR	11262095	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	125:12:4121:4153	11261953	2	True				
ANR	11262096	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11261953	0		=			
ANR	11262097	Identifier	ret		11261953	0					
ANR	11262098	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11261953	1					
ANR	11262099	Callee	inflate		11261953	0					
ANR	11262100	Identifier	inflate		11261953	0					
ANR	11262101	ArgumentList	& strm		11261953	1					
ANR	11262102	Argument	& strm		11261953	0					
ANR	11262103	UnaryOperationExpression	& strm		11261953	0					
ANR	11262104	UnaryOperator	&		11261953	0					
ANR	11262105	Identifier	strm		11261953	1					
ANR	11262106	Argument	Z_NO_FLUSH		11261953	1					
ANR	11262107	Identifier	Z_NO_FLUSH		11261953	0					
ANR	11262108	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	126:12:4167:4196	11261953	3	True				
ANR	11262109	CallExpression	assert ( ret != Z_STREAM_ERROR )		11261953	0					
ANR	11262110	Callee	assert		11261953	0					
ANR	11262111	Identifier	assert		11261953	0					
ANR	11262112	ArgumentList	ret != Z_STREAM_ERROR		11261953	1					
ANR	11262113	Argument	ret != Z_STREAM_ERROR		11261953	0					
ANR	11262114	EqualityExpression	ret != Z_STREAM_ERROR		11261953	0		!=			
ANR	11262115	Identifier	ret		11261953	0					
ANR	11262116	Identifier	Z_STREAM_ERROR		11261953	1					
ANR	11262117	SwitchStatement	switch ( ret )		11261953	4					
ANR	11262118	Condition	ret	127:20:4245:4247	11261953	0	True				
ANR	11262119	Identifier	ret		11261953	0					
ANR	11262120	CompoundStatement		35:25:941:941	11261953	1					
ANR	11262121	Label	case Z_NEED_DICT :	128:12:4264:4280	11261953	0	True				
ANR	11262122	Identifier	Z_NEED_DICT		11261953	0					
ANR	11262123	ExpressionStatement	ret = Z_DATA_ERROR	129:16:4298:4316	11261953	1	True				
ANR	11262124	AssignmentExpression	ret = Z_DATA_ERROR		11261953	0		=			
ANR	11262125	Identifier	ret		11261953	0					
ANR	11262126	Identifier	Z_DATA_ERROR		11261953	1					
ANR	11262127	Label	case Z_DATA_ERROR :	130:12:4357:4374	11261953	2	True				
ANR	11262128	Identifier	Z_DATA_ERROR		11261953	0					
ANR	11262129	Label	case Z_MEM_ERROR :	131:12:4388:4404	11261953	3	True				
ANR	11262130	Identifier	Z_MEM_ERROR		11261953	0					
ANR	11262131	ExpressionStatement	( void ) inflateEnd ( & strm )	132:16:4422:4445	11261953	4	True				
ANR	11262132	CastExpression	( void ) inflateEnd ( & strm )		11261953	0					
ANR	11262133	CastTarget	void		11261953	0					
ANR	11262134	CallExpression	inflateEnd ( & strm )		11261953	1					
ANR	11262135	Callee	inflateEnd		11261953	0					
ANR	11262136	Identifier	inflateEnd		11261953	0					
ANR	11262137	ArgumentList	& strm		11261953	1					
ANR	11262138	Argument	& strm		11261953	0					
ANR	11262139	UnaryOperationExpression	& strm		11261953	0					
ANR	11262140	UnaryOperator	&		11261953	0					
ANR	11262141	Identifier	strm		11261953	1					
ANR	11262142	ReturnStatement	return ret ;	133:16:4463:4473	11261953	5	True				
ANR	11262143	Identifier	ret		11261953	0					
ANR	11262144	ExpressionStatement	have = CHUNK - strm . avail_out	135:12:4501:4530	11261953	5	True				
ANR	11262145	AssignmentExpression	have = CHUNK - strm . avail_out		11261953	0		=			
ANR	11262146	Identifier	have		11261953	0					
ANR	11262147	AdditiveExpression	CHUNK - strm . avail_out		11261953	1		-			
ANR	11262148	Identifier	CHUNK		11261953	0					
ANR	11262149	MemberAccess	strm . avail_out		11261953	1					
ANR	11262150	Identifier	strm		11261953	0					
ANR	11262151	Identifier	avail_out		11261953	1					
ANR	11262152	IfStatement	"if ( fwrite ( out , 1 , have , dest ) != have || ferror ( dest ) )"		11261953	6					
ANR	11262153	Condition	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"	136:16:4548:4597	11261953	0	True				
ANR	11262154	OrExpression	"fwrite ( out , 1 , have , dest ) != have || ferror ( dest )"		11261953	0		||			
ANR	11262155	EqualityExpression	"fwrite ( out , 1 , have , dest ) != have"		11261953	0		!=			
ANR	11262156	CallExpression	"fwrite ( out , 1 , have , dest )"		11261953	0					
ANR	11262157	Callee	fwrite		11261953	0					
ANR	11262158	Identifier	fwrite		11261953	0					
ANR	11262159	ArgumentList	out		11261953	1					
ANR	11262160	Argument	out		11261953	0					
ANR	11262161	Identifier	out		11261953	0					
ANR	11262162	Argument	1		11261953	1					
ANR	11262163	PrimaryExpression	1		11261953	0					
ANR	11262164	Argument	have		11261953	2					
ANR	11262165	Identifier	have		11261953	0					
ANR	11262166	Argument	dest		11261953	3					
ANR	11262167	Identifier	dest		11261953	0					
ANR	11262168	Identifier	have		11261953	1					
ANR	11262169	CallExpression	ferror ( dest )		11261953	1					
ANR	11262170	Callee	ferror		11261953	0					
ANR	11262171	Identifier	ferror		11261953	0					
ANR	11262172	ArgumentList	dest		11261953	1					
ANR	11262173	Argument	dest		11261953	0					
ANR	11262174	Identifier	dest		11261953	0					
ANR	11262175	CompoundStatement		44:68:1291:1291	11261953	1					
ANR	11262176	ExpressionStatement	( void ) inflateEnd ( & strm )	137:16:4618:4641	11261953	0	True				
ANR	11262177	CastExpression	( void ) inflateEnd ( & strm )		11261953	0					
ANR	11262178	CastTarget	void		11261953	0					
ANR	11262179	CallExpression	inflateEnd ( & strm )		11261953	1					
ANR	11262180	Callee	inflateEnd		11261953	0					
ANR	11262181	Identifier	inflateEnd		11261953	0					
ANR	11262182	ArgumentList	& strm		11261953	1					
ANR	11262183	Argument	& strm		11261953	0					
ANR	11262184	UnaryOperationExpression	& strm		11261953	0					
ANR	11262185	UnaryOperator	&		11261953	0					
ANR	11262186	Identifier	strm		11261953	1					
ANR	11262187	ReturnStatement	return Z_ERRNO ;	138:16:4659:4673	11261953	1	True				
ANR	11262188	Identifier	Z_ERRNO		11261953	0					
ANR	11262189	Condition	strm . avail_out == 0	140:17:4706:4724	11261953	1	True				
ANR	11262190	EqualityExpression	strm . avail_out == 0		11261953	0		==			
ANR	11262191	MemberAccess	strm . avail_out		11261953	0					
ANR	11262192	Identifier	strm		11261953	0					
ANR	11262193	Identifier	avail_out		11261953	1					
ANR	11262194	PrimaryExpression	0		11261953	1					
ANR	11262195	Condition	ret != Z_STREAM_END	143:13:4791:4809	11261953	1	True				
ANR	11262196	EqualityExpression	ret != Z_STREAM_END		11261953	0		!=			
ANR	11262197	Identifier	ret		11261953	0					
ANR	11262198	Identifier	Z_STREAM_END		11261953	1					
ANR	11262199	ExpressionStatement	( void ) inflateEnd ( & strm )	146:4:4848:4871	11261953	13	True				
ANR	11262200	CastExpression	( void ) inflateEnd ( & strm )		11261953	0					
ANR	11262201	CastTarget	void		11261953	0					
ANR	11262202	CallExpression	inflateEnd ( & strm )		11261953	1					
ANR	11262203	Callee	inflateEnd		11261953	0					
ANR	11262204	Identifier	inflateEnd		11261953	0					
ANR	11262205	ArgumentList	& strm		11261953	1					
ANR	11262206	Argument	& strm		11261953	0					
ANR	11262207	UnaryOperationExpression	& strm		11261953	0					
ANR	11262208	UnaryOperator	&		11261953	0					
ANR	11262209	Identifier	strm		11261953	1					
ANR	11262210	ReturnStatement	return ret == Z_STREAM_END ? Z_OK : Z_DATA_ERROR ;	147:4:4877:4925	11261953	14	True				
ANR	11262211	ConditionalExpression	ret == Z_STREAM_END ? Z_OK : Z_DATA_ERROR		11261953	0					
ANR	11262212	Condition	ret == Z_STREAM_END		11261953	0					
ANR	11262213	EqualityExpression	ret == Z_STREAM_END		11261953	0		==			
ANR	11262214	Identifier	ret		11261953	0					
ANR	11262215	Identifier	Z_STREAM_END		11261953	1					
ANR	11262216	Identifier	Z_OK		11261953	1					
ANR	11262217	Identifier	Z_DATA_ERROR		11261953	2					
ANR	11262218	ReturnType	int		11261953	1					
ANR	11262219	Identifier	inf		11261953	2					
ANR	11262220	ParameterList	"FILE * source , FILE * dest"		11261953	3					
ANR	11262221	Parameter	FILE * source	92:8:3282:3293	11261953	0	True				
ANR	11262222	ParameterType	FILE *		11261953	0					
ANR	11262223	Identifier	source		11261953	1					
ANR	11262224	Parameter	FILE * dest	92:22:3296:3305	11261953	1	True				
ANR	11262225	ParameterType	FILE *		11261953	0					
ANR	11262226	Identifier	dest		11261953	1					
ANR	11262227	CFGEntryNode	ENTRY		11261953		True				
ANR	11262228	CFGExitNode	EXIT		11261953		True				
ANR	11262229	Symbol	Z_STREAM_ERROR		11261953						
ANR	11262230	Symbol	Z_DATA_ERROR		11261953						
ANR	11262231	Symbol	& strm		11261953						
ANR	11262232	Symbol	inflateInit		11261953						
ANR	11262233	Symbol	strm . zalloc		11261953						
ANR	11262234	Symbol	source		11261953						
ANR	11262235	Symbol	Z_OK		11261953						
ANR	11262236	Symbol	dest		11261953						
ANR	11262237	Symbol	out		11261953						
ANR	11262238	Symbol	strm . next_in		11261953						
ANR	11262239	Symbol	Z_NO_FLUSH		11261953						
ANR	11262240	Symbol	strm . opaque		11261953						
ANR	11262241	Symbol	have		11261953						
ANR	11262242	Symbol	Z_STREAM_END		11261953						
ANR	11262243	Symbol	CHUNK		11261953						
ANR	11262244	Symbol	ret		11261953						
ANR	11262245	Symbol	Z_ERRNO		11261953						
ANR	11262246	Symbol	in		11261953						
ANR	11262247	Symbol	fwrite		11261953						
ANR	11262248	Symbol	strm		11261953						
ANR	11262249	Symbol	fread		11261953						
ANR	11262250	Symbol	ferror		11261953						
ANR	11262251	Symbol	strm . avail_out		11261953						
ANR	11262252	Symbol	inflate		11261953						
ANR	11262253	Symbol	strm . next_out		11261953						
ANR	11262254	Symbol	strm . zfree		11261953						
ANR	11262255	Symbol	Z_NULL		11261953						
ANR	11262256	Symbol	strm . avail_in		11261953						
ANR	11262257	Function	zerr	151:0:4963:5583							
ANR	11262258	FunctionDef	zerr (int ret)		11262257	0					
ANR	11262259	CompoundStatement		152:0:4982:5583	11262257	0					
ANR	11262260	ExpressionStatement	"fputs ( ""zpipe: "" , stderr )"	153:4:4988:5012	11262257	0	True				
ANR	11262261	CallExpression	"fputs ( ""zpipe: "" , stderr )"		11262257	0					
ANR	11262262	Callee	fputs		11262257	0					
ANR	11262263	Identifier	fputs		11262257	0					
ANR	11262264	ArgumentList	"""zpipe: """		11262257	1					
ANR	11262265	Argument	"""zpipe: """		11262257	0					
ANR	11262266	PrimaryExpression	"""zpipe: """		11262257	0					
ANR	11262267	Argument	stderr		11262257	1					
ANR	11262268	Identifier	stderr		11262257	0					
ANR	11262269	SwitchStatement	switch ( ret )		11262257	1					
ANR	11262270	Condition	ret	154:12:5026:5028	11262257	0	True				
ANR	11262271	Identifier	ret		11262257	0					
ANR	11262272	CompoundStatement		3:17:48:48	11262257	1					
ANR	11262273	Label	case Z_ERRNO :	155:4:5037:5049	11262257	0	True				
ANR	11262274	Identifier	Z_ERRNO		11262257	0					
ANR	11262275	IfStatement	if ( ferror ( stdin ) )		11262257	1					
ANR	11262276	Condition	ferror ( stdin )	156:12:5063:5075	11262257	0	True				
ANR	11262277	CallExpression	ferror ( stdin )		11262257	0					
ANR	11262278	Callee	ferror		11262257	0					
ANR	11262279	Identifier	ferror		11262257	0					
ANR	11262280	ArgumentList	stdin		11262257	1					
ANR	11262281	Argument	stdin		11262257	0					
ANR	11262282	Identifier	stdin		11262257	0					
ANR	11262283	ExpressionStatement	"fputs ( ""error reading stdin\\n"" , stderr )"	157:12:5090:5128	11262257	1	True				
ANR	11262284	CallExpression	"fputs ( ""error reading stdin\\n"" , stderr )"		11262257	0					
ANR	11262285	Callee	fputs		11262257	0					
ANR	11262286	Identifier	fputs		11262257	0					
ANR	11262287	ArgumentList	"""error reading stdin\\n"""		11262257	1					
ANR	11262288	Argument	"""error reading stdin\\n"""		11262257	0					
ANR	11262289	PrimaryExpression	"""error reading stdin\\n"""		11262257	0					
ANR	11262290	Argument	stderr		11262257	1					
ANR	11262291	Identifier	stderr		11262257	0					
ANR	11262292	IfStatement	if ( ferror ( stdout ) )		11262257	2					
ANR	11262293	Condition	ferror ( stdout )	158:12:5142:5155	11262257	0	True				
ANR	11262294	CallExpression	ferror ( stdout )		11262257	0					
ANR	11262295	Callee	ferror		11262257	0					
ANR	11262296	Identifier	ferror		11262257	0					
ANR	11262297	ArgumentList	stdout		11262257	1					
ANR	11262298	Argument	stdout		11262257	0					
ANR	11262299	Identifier	stdout		11262257	0					
ANR	11262300	ExpressionStatement	"fputs ( ""error writing stdout\\n"" , stderr )"	159:12:5170:5209	11262257	1	True				
ANR	11262301	CallExpression	"fputs ( ""error writing stdout\\n"" , stderr )"		11262257	0					
ANR	11262302	Callee	fputs		11262257	0					
ANR	11262303	Identifier	fputs		11262257	0					
ANR	11262304	ArgumentList	"""error writing stdout\\n"""		11262257	1					
ANR	11262305	Argument	"""error writing stdout\\n"""		11262257	0					
ANR	11262306	PrimaryExpression	"""error writing stdout\\n"""		11262257	0					
ANR	11262307	Argument	stderr		11262257	1					
ANR	11262308	Identifier	stderr		11262257	0					
ANR	11262309	BreakStatement	break ;	160:8:5219:5224	11262257	3	True				
ANR	11262310	Label	case Z_STREAM_ERROR :	161:4:5230:5249	11262257	4	True				
ANR	11262311	Identifier	Z_STREAM_ERROR		11262257	0					
ANR	11262312	ExpressionStatement	"fputs ( ""invalid compression level\\n"" , stderr )"	162:8:5259:5303	11262257	5	True				
ANR	11262313	CallExpression	"fputs ( ""invalid compression level\\n"" , stderr )"		11262257	0					
ANR	11262314	Callee	fputs		11262257	0					
ANR	11262315	Identifier	fputs		11262257	0					
ANR	11262316	ArgumentList	"""invalid compression level\\n"""		11262257	1					
ANR	11262317	Argument	"""invalid compression level\\n"""		11262257	0					
ANR	11262318	PrimaryExpression	"""invalid compression level\\n"""		11262257	0					
ANR	11262319	Argument	stderr		11262257	1					
ANR	11262320	Identifier	stderr		11262257	0					
ANR	11262321	BreakStatement	break ;	163:8:5313:5318	11262257	6	True				
ANR	11262322	Label	case Z_DATA_ERROR :	164:4:5324:5341	11262257	7	True				
ANR	11262323	Identifier	Z_DATA_ERROR		11262257	0					
ANR	11262324	ExpressionStatement	"fputs ( ""invalid or incomplete deflate data\\n"" , stderr )"	165:8:5351:5404	11262257	8	True				
ANR	11262325	CallExpression	"fputs ( ""invalid or incomplete deflate data\\n"" , stderr )"		11262257	0					
ANR	11262326	Callee	fputs		11262257	0					
ANR	11262327	Identifier	fputs		11262257	0					
ANR	11262328	ArgumentList	"""invalid or incomplete deflate data\\n"""		11262257	1					
ANR	11262329	Argument	"""invalid or incomplete deflate data\\n"""		11262257	0					
ANR	11262330	PrimaryExpression	"""invalid or incomplete deflate data\\n"""		11262257	0					
ANR	11262331	Argument	stderr		11262257	1					
ANR	11262332	Identifier	stderr		11262257	0					
ANR	11262333	BreakStatement	break ;	166:8:5414:5419	11262257	9	True				
ANR	11262334	Label	case Z_MEM_ERROR :	167:4:5425:5441	11262257	10	True				
ANR	11262335	Identifier	Z_MEM_ERROR		11262257	0					
ANR	11262336	ExpressionStatement	"fputs ( ""out of memory\\n"" , stderr )"	168:8:5451:5483	11262257	11	True				
ANR	11262337	CallExpression	"fputs ( ""out of memory\\n"" , stderr )"		11262257	0					
ANR	11262338	Callee	fputs		11262257	0					
ANR	11262339	Identifier	fputs		11262257	0					
ANR	11262340	ArgumentList	"""out of memory\\n"""		11262257	1					
ANR	11262341	Argument	"""out of memory\\n"""		11262257	0					
ANR	11262342	PrimaryExpression	"""out of memory\\n"""		11262257	0					
ANR	11262343	Argument	stderr		11262257	1					
ANR	11262344	Identifier	stderr		11262257	0					
ANR	11262345	BreakStatement	break ;	169:8:5493:5498	11262257	12	True				
ANR	11262346	Label	case Z_VERSION_ERROR :	170:4:5504:5524	11262257	13	True				
ANR	11262347	Identifier	Z_VERSION_ERROR		11262257	0					
ANR	11262348	ExpressionStatement	"fputs ( ""zlib version mismatch!\\n"" , stderr )"	171:8:5534:5575	11262257	14	True				
ANR	11262349	CallExpression	"fputs ( ""zlib version mismatch!\\n"" , stderr )"		11262257	0					
ANR	11262350	Callee	fputs		11262257	0					
ANR	11262351	Identifier	fputs		11262257	0					
ANR	11262352	ArgumentList	"""zlib version mismatch!\\n"""		11262257	1					
ANR	11262353	Argument	"""zlib version mismatch!\\n"""		11262257	0					
ANR	11262354	PrimaryExpression	"""zlib version mismatch!\\n"""		11262257	0					
ANR	11262355	Argument	stderr		11262257	1					
ANR	11262356	Identifier	stderr		11262257	0					
ANR	11262357	ReturnType	void		11262257	1					
ANR	11262358	Identifier	zerr		11262257	2					
ANR	11262359	ParameterList	int ret		11262257	3					
ANR	11262360	Parameter	int ret	151:10:4973:4979	11262257	0	True				
ANR	11262361	ParameterType	int		11262257	0					
ANR	11262362	Identifier	ret		11262257	1					
ANR	11262363	CFGEntryNode	ENTRY		11262257		True				
ANR	11262364	CFGExitNode	EXIT		11262257		True				
ANR	11262365	Symbol	ret		11262257						
ANR	11262366	Symbol	ferror		11262257						
ANR	11262367	Symbol	stdin		11262257						
ANR	11262368	Symbol	stdout		11262257						
ANR	11262369	Symbol	stderr		11262257						
ANR	11262370	Function	main	176:0:5636:6321							
ANR	11262371	FunctionDef	"main (int argc , char * * argv)"		11262370	0					
ANR	11262372	CompoundStatement		177:0:5668:6321	11262370	0					
ANR	11262373	IdentifierDeclStatement	int ret ;	178:4:5674:5681	11262370	0	True				
ANR	11262374	IdentifierDecl	ret		11262370	0					
ANR	11262375	IdentifierDeclType	int		11262370	0					
ANR	11262376	Identifier	ret		11262370	1					
ANR	11262377	ExpressionStatement	SET_BINARY_MODE ( stdin )	181:4:5728:5750	11262370	1	True				
ANR	11262378	CallExpression	SET_BINARY_MODE ( stdin )		11262370	0					
ANR	11262379	Callee	SET_BINARY_MODE		11262370	0					
ANR	11262380	Identifier	SET_BINARY_MODE		11262370	0					
ANR	11262381	ArgumentList	stdin		11262370	1					
ANR	11262382	Argument	stdin		11262370	0					
ANR	11262383	Identifier	stdin		11262370	0					
ANR	11262384	ExpressionStatement	SET_BINARY_MODE ( stdout )	182:4:5756:5779	11262370	2	True				
ANR	11262385	CallExpression	SET_BINARY_MODE ( stdout )		11262370	0					
ANR	11262386	Callee	SET_BINARY_MODE		11262370	0					
ANR	11262387	Identifier	SET_BINARY_MODE		11262370	0					
ANR	11262388	ArgumentList	stdout		11262370	1					
ANR	11262389	Argument	stdout		11262370	0					
ANR	11262390	Identifier	stdout		11262370	0					
ANR	11262391	IfStatement	if ( argc == 1 )		11262370	3					
ANR	11262392	Condition	argc == 1	185:8:5831:5839	11262370	0	True				
ANR	11262393	EqualityExpression	argc == 1		11262370	0		==			
ANR	11262394	Identifier	argc		11262370	0					
ANR	11262395	PrimaryExpression	1		11262370	1					
ANR	11262396	CompoundStatement		9:19:173:173	11262370	1					
ANR	11262397	ExpressionStatement	"ret = def ( stdin , stdout , Z_DEFAULT_COMPRESSION )"	186:8:5852:5899	11262370	0	True				
ANR	11262398	AssignmentExpression	"ret = def ( stdin , stdout , Z_DEFAULT_COMPRESSION )"		11262370	0		=			
ANR	11262399	Identifier	ret		11262370	0					
ANR	11262400	CallExpression	"def ( stdin , stdout , Z_DEFAULT_COMPRESSION )"		11262370	1					
ANR	11262401	Callee	def		11262370	0					
ANR	11262402	Identifier	def		11262370	0					
ANR	11262403	ArgumentList	stdin		11262370	1					
ANR	11262404	Argument	stdin		11262370	0					
ANR	11262405	Identifier	stdin		11262370	0					
ANR	11262406	Argument	stdout		11262370	1					
ANR	11262407	Identifier	stdout		11262370	0					
ANR	11262408	Argument	Z_DEFAULT_COMPRESSION		11262370	2					
ANR	11262409	Identifier	Z_DEFAULT_COMPRESSION		11262370	0					
ANR	11262410	IfStatement	if ( ret != Z_OK )		11262370	1					
ANR	11262411	Condition	ret != Z_OK	187:12:5913:5923	11262370	0	True				
ANR	11262412	EqualityExpression	ret != Z_OK		11262370	0		!=			
ANR	11262413	Identifier	ret		11262370	0					
ANR	11262414	Identifier	Z_OK		11262370	1					
ANR	11262415	ExpressionStatement	zerr ( ret )	188:12:5938:5947	11262370	1	True				
ANR	11262416	CallExpression	zerr ( ret )		11262370	0					
ANR	11262417	Callee	zerr		11262370	0					
ANR	11262418	Identifier	zerr		11262370	0					
ANR	11262419	ArgumentList	ret		11262370	1					
ANR	11262420	Argument	ret		11262370	0					
ANR	11262421	Identifier	ret		11262370	0					
ANR	11262422	ReturnStatement	return ret ;	189:8:5957:5967	11262370	2	True				
ANR	11262423	Identifier	ret		11262370	0					
ANR	11262424	ElseStatement	else		11262370	0					
ANR	11262425	IfStatement	"if ( argc == 2 && strcmp ( argv [ 1 ] , ""-d"" ) == 0 )"		11262370	0					
ANR	11262426	Condition	"argc == 2 && strcmp ( argv [ 1 ] , ""-d"" ) == 0"	193:13:6032:6070	11262370	0	True				
ANR	11262427	AndExpression	"argc == 2 && strcmp ( argv [ 1 ] , ""-d"" ) == 0"		11262370	0		&&			
ANR	11262428	EqualityExpression	argc == 2		11262370	0		==			
ANR	11262429	Identifier	argc		11262370	0					
ANR	11262430	PrimaryExpression	2		11262370	1					
ANR	11262431	EqualityExpression	"strcmp ( argv [ 1 ] , ""-d"" ) == 0"		11262370	1		==			
ANR	11262432	CallExpression	"strcmp ( argv [ 1 ] , ""-d"" )"		11262370	0					
ANR	11262433	Callee	strcmp		11262370	0					
ANR	11262434	Identifier	strcmp		11262370	0					
ANR	11262435	ArgumentList	argv [ 1 ]		11262370	1					
ANR	11262436	Argument	argv [ 1 ]		11262370	0					
ANR	11262437	ArrayIndexing	argv [ 1 ]		11262370	0					
ANR	11262438	Identifier	argv		11262370	0					
ANR	11262439	PrimaryExpression	1		11262370	1					
ANR	11262440	Argument	"""-d"""		11262370	1					
ANR	11262441	PrimaryExpression	"""-d"""		11262370	0					
ANR	11262442	PrimaryExpression	0		11262370	1					
ANR	11262443	CompoundStatement		17:54:404:404	11262370	1					
ANR	11262444	ExpressionStatement	"ret = inf ( stdin , stdout )"	194:8:6083:6107	11262370	0	True				
ANR	11262445	AssignmentExpression	"ret = inf ( stdin , stdout )"		11262370	0		=			
ANR	11262446	Identifier	ret		11262370	0					
ANR	11262447	CallExpression	"inf ( stdin , stdout )"		11262370	1					
ANR	11262448	Callee	inf		11262370	0					
ANR	11262449	Identifier	inf		11262370	0					
ANR	11262450	ArgumentList	stdin		11262370	1					
ANR	11262451	Argument	stdin		11262370	0					
ANR	11262452	Identifier	stdin		11262370	0					
ANR	11262453	Argument	stdout		11262370	1					
ANR	11262454	Identifier	stdout		11262370	0					
ANR	11262455	IfStatement	if ( ret != Z_OK )		11262370	1					
ANR	11262456	Condition	ret != Z_OK	195:12:6121:6131	11262370	0	True				
ANR	11262457	EqualityExpression	ret != Z_OK		11262370	0		!=			
ANR	11262458	Identifier	ret		11262370	0					
ANR	11262459	Identifier	Z_OK		11262370	1					
ANR	11262460	ExpressionStatement	zerr ( ret )	196:12:6146:6155	11262370	1	True				
ANR	11262461	CallExpression	zerr ( ret )		11262370	0					
ANR	11262462	Callee	zerr		11262370	0					
ANR	11262463	Identifier	zerr		11262370	0					
ANR	11262464	ArgumentList	ret		11262370	1					
ANR	11262465	Argument	ret		11262370	0					
ANR	11262466	Identifier	ret		11262370	0					
ANR	11262467	ReturnStatement	return ret ;	197:8:6165:6175	11262370	2	True				
ANR	11262468	Identifier	ret		11262370	0					
ANR	11262469	ElseStatement	else		11262370	0					
ANR	11262470	CompoundStatement		25:9:558:558	11262370	0					
ANR	11262471	ExpressionStatement	"fputs ( ""zpipe usage: zpipe [-d] < source > dest\\n"" , stderr )"	202:8:6237:6295	11262370	0	True				
ANR	11262472	CallExpression	"fputs ( ""zpipe usage: zpipe [-d] < source > dest\\n"" , stderr )"		11262370	0					
ANR	11262473	Callee	fputs		11262370	0					
ANR	11262474	Identifier	fputs		11262370	0					
ANR	11262475	ArgumentList	"""zpipe usage: zpipe [-d] < source > dest\\n"""		11262370	1					
ANR	11262476	Argument	"""zpipe usage: zpipe [-d] < source > dest\\n"""		11262370	0					
ANR	11262477	PrimaryExpression	"""zpipe usage: zpipe [-d] < source > dest\\n"""		11262370	0					
ANR	11262478	Argument	stderr		11262370	1					
ANR	11262479	Identifier	stderr		11262370	0					
ANR	11262480	ReturnStatement	return 1 ;	203:8:6305:6313	11262370	1	True				
ANR	11262481	PrimaryExpression	1		11262370	0					
ANR	11262482	ReturnType	int		11262370	1					
ANR	11262483	Identifier	main		11262370	2					
ANR	11262484	ParameterList	"int argc , char * * argv"		11262370	3					
ANR	11262485	Parameter	int argc	176:9:5645:5652	11262370	0	True				
ANR	11262486	ParameterType	int		11262370	0					
ANR	11262487	Identifier	argc		11262370	1					
ANR	11262488	Parameter	char * * argv	176:19:5655:5665	11262370	1	True				
ANR	11262489	ParameterType	char * *		11262370	0					
ANR	11262490	Identifier	argv		11262370	1					
ANR	11262491	CFGEntryNode	ENTRY		11262370		True				
ANR	11262492	CFGExitNode	EXIT		11262370		True				
ANR	11262493	Symbol	argc		11262370						
ANR	11262494	Symbol	ret		11262370						
ANR	11262495	Symbol	strcmp		11262370						
ANR	11262496	Symbol	inf		11262370						
ANR	11262497	Symbol	stdin		11262370						
ANR	11262498	Symbol	stdout		11262370						
ANR	11262499	Symbol	def		11262370						
ANR	11262500	Symbol	* argv		11262370						
ANR	11262501	Symbol	Z_OK		11262370						
ANR	11262502	Symbol	Z_DEFAULT_COMPRESSION		11262370						
ANR	11262503	Symbol	stderr		11262370						
ANR	11262504	Symbol	argv		11262370						
