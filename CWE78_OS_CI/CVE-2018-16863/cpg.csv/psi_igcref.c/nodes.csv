command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8861742	File	data/converged/CVE-2018-16863_ghostpdl/psi_igcref.c								
ANR	8861743	DeclStmt									
ANR	8861744	Decl							const struct_shared_procs_t	const struct_shared_procs_t	refs_shared_procs
ANR	8861745	DeclStmt									
ANR	8861746	Decl							const gs_memory_struct_type_t	const gs_memory_struct_type_t	st_refs
ANR	8861747	DeclStmt									
ANR	8861748	Decl							ref	ref *	pref
ANR	8861749	DeclStmt									
ANR	8861750	Decl							ref	ref *	end
ANR	8861751	DeclStmt									
ANR	8861752	Decl							vm_spaces	vm_spaces	spaces
ANR	8861753	DeclStmt									
ANR	8861754	Decl							const gs_memory_t	const gs_memory_t *	cmem
ANR	8861755	DeclStmt									
ANR	8861756	Decl							ref	ref *	beg
ANR	8861757	DeclStmt									
ANR	8861758	Decl							ref	ref *	end
ANR	8861759	Function	ptr_ref_unmark	90:2:2968:3262							
ANR	8861760	FunctionDef	"ptr_ref_unmark (enum_ptr_t * pep , gc_state_t * ignored)"		8861759	0					
ANR	8861761	CompoundStatement		97:0:3107:3262	8861759	0					
ANR	8861762	IdentifierDeclStatement	ref_packed * rpp = ( ref_packed * ) pep -> ptr ;	98:4:3113:3153	8861759	0	True				
ANR	8861763	IdentifierDecl	* rpp = ( ref_packed * ) pep -> ptr		8861759	0					
ANR	8861764	IdentifierDeclType	ref_packed *		8861759	0					
ANR	8861765	Identifier	rpp		8861759	1					
ANR	8861766	AssignmentExpression	* rpp = ( ref_packed * ) pep -> ptr		8861759	2		=			
ANR	8861767	Identifier	rpp		8861759	0					
ANR	8861768	CastExpression	( ref_packed * ) pep -> ptr		8861759	1					
ANR	8861769	CastTarget	ref_packed *		8861759	0					
ANR	8861770	PtrMemberAccess	pep -> ptr		8861759	1					
ANR	8861771	Identifier	pep		8861759	0					
ANR	8861772	Identifier	ptr		8861759	1					
ANR	8861773	IfStatement	if ( r_is_packed ( rpp ) )		8861759	1					
ANR	8861774	Condition	r_is_packed ( rpp )	100:8:3164:3179	8861759	0	True				
ANR	8861775	CallExpression	r_is_packed ( rpp )		8861759	0					
ANR	8861776	Callee	r_is_packed		8861759	0					
ANR	8861777	Identifier	r_is_packed		8861759	0					
ANR	8861778	ArgumentList	rpp		8861759	1					
ANR	8861779	Argument	rpp		8861759	0					
ANR	8861780	Identifier	rpp		8861759	0					
ANR	8861781	ExpressionStatement	r_clear_pmark ( rpp )	101:8:3190:3208	8861759	1	True				
ANR	8861782	CallExpression	r_clear_pmark ( rpp )		8861759	0					
ANR	8861783	Callee	r_clear_pmark		8861759	0					
ANR	8861784	Identifier	r_clear_pmark		8861759	0					
ANR	8861785	ArgumentList	rpp		8861759	1					
ANR	8861786	Argument	rpp		8861759	0					
ANR	8861787	Identifier	rpp		8861759	0					
ANR	8861788	ElseStatement	else		8861759	0					
ANR	8861789	ExpressionStatement	"r_clear_attrs ( ( ref * ) rpp , l_mark )"	103:8:3227:3260	8861759	0	True				
ANR	8861790	CallExpression	"r_clear_attrs ( ( ref * ) rpp , l_mark )"		8861759	0					
ANR	8861791	Callee	r_clear_attrs		8861759	0					
ANR	8861792	Identifier	r_clear_attrs		8861759	0					
ANR	8861793	ArgumentList	( ref * ) rpp		8861759	1					
ANR	8861794	Argument	( ref * ) rpp		8861759	0					
ANR	8861795	CastExpression	( ref * ) rpp		8861759	0					
ANR	8861796	CastTarget	ref *		8861759	0					
ANR	8861797	Identifier	rpp		8861759	1					
ANR	8861798	Argument	l_mark		8861759	1					
ANR	8861799	Identifier	l_mark		8861759	0					
ANR	8861800	ReturnType	RELOC_PTRS_END void		8861759	1					
ANR	8861801	Identifier	ptr_ref_unmark		8861759	2					
ANR	8861802	ParameterList	"enum_ptr_t * pep , gc_state_t * ignored"		8861759	3					
ANR	8861803	Parameter	enum_ptr_t * pep	96:15:3068:3082	8861759	0	True				
ANR	8861804	ParameterType	enum_ptr_t *		8861759	0					
ANR	8861805	Identifier	pep		8861759	1					
ANR	8861806	Parameter	gc_state_t * ignored	96:32:3085:3104	8861759	1	True				
ANR	8861807	ParameterType	gc_state_t *		8861759	0					
ANR	8861808	Identifier	ignored		8861759	1					
ANR	8861809	CFGEntryNode	ENTRY		8861759		True				
ANR	8861810	CFGExitNode	EXIT		8861759		True				
ANR	8861811	Symbol	ignored		8861759						
ANR	8861812	Symbol	rpp		8861759						
ANR	8861813	Symbol	pep -> ptr		8861759						
ANR	8861814	Symbol	* pep		8861759						
ANR	8861815	Symbol	r_is_packed		8861759						
ANR	8861816	Symbol	l_mark		8861759						
ANR	8861817	Symbol	pep		8861759						
ANR	8861818	Function	refs_clear_marks	107:0:3306:4496							
ANR	8861819	FunctionDef	"refs_clear_marks (const gs_memory_t * cmem , void * vptr , uint size , const gs_memory_struct_type_t * pstype)"		8861818	0					
ANR	8861820	CompoundStatement		111:0:3475:4496	8861818	0					
ANR	8861821	IdentifierDeclStatement	ref_packed * rp = ( ref_packed * ) vptr ;	112:4:3481:3517	8861818	0	True				
ANR	8861822	IdentifierDecl	* rp = ( ref_packed * ) vptr		8861818	0					
ANR	8861823	IdentifierDeclType	ref_packed *		8861818	0					
ANR	8861824	Identifier	rp		8861818	1					
ANR	8861825	AssignmentExpression	* rp = ( ref_packed * ) vptr		8861818	2		=			
ANR	8861826	Identifier	rp		8861818	0					
ANR	8861827	CastExpression	( ref_packed * ) vptr		8861818	1					
ANR	8861828	CastTarget	ref_packed *		8861818	0					
ANR	8861829	Identifier	vptr		8861818	1					
ANR	8861830	IdentifierDeclStatement	ref_packed * end = ( ref_packed * ) ( ( byte * ) vptr + size ) ;	113:4:3523:3578	8861818	1	True				
ANR	8861831	IdentifierDecl	* end = ( ref_packed * ) ( ( byte * ) vptr + size )		8861818	0					
ANR	8861832	IdentifierDeclType	ref_packed *		8861818	0					
ANR	8861833	Identifier	end		8861818	1					
ANR	8861834	AssignmentExpression	* end = ( ref_packed * ) ( ( byte * ) vptr + size )		8861818	2		=			
ANR	8861835	Identifier	end		8861818	0					
ANR	8861836	CastExpression	( ref_packed * ) ( ( byte * ) vptr + size )		8861818	1					
ANR	8861837	CastTarget	ref_packed *		8861818	0					
ANR	8861838	AdditiveExpression	( byte * ) vptr + size		8861818	1		+			
ANR	8861839	CastExpression	( byte * ) vptr		8861818	0					
ANR	8861840	CastTarget	byte *		8861818	0					
ANR	8861841	Identifier	vptr		8861818	1					
ANR	8861842	Identifier	size		8861818	1					
ANR	8861843	ForStatement	for ( ; ; )		8861818	2					
ANR	8861844	CompoundStatement		7:13:244:244	8861818	0					
ANR	8861845	IfStatement	if ( r_is_packed ( rp ) )		8861818	0					
ANR	8861846	Condition	r_is_packed ( rp )	118:12:3734:3748	8861818	0	True				
ANR	8861847	CallExpression	r_is_packed ( rp )		8861818	0					
ANR	8861848	Callee	r_is_packed		8861818	0					
ANR	8861849	Identifier	r_is_packed		8861818	0					
ANR	8861850	ArgumentList	rp		8861818	1					
ANR	8861851	Argument	rp		8861818	0					
ANR	8861852	Identifier	rp		8861818	0					
ANR	8861853	CompoundStatement		8:29:275:275	8861818	1					
ANR	8861854	IfStatement	if ( gs_debug_c ( '8' ) )		8861818	0					
ANR	8861855	Condition	gs_debug_c ( '8' )	120:16:3782:3796	8861818	0	True				
ANR	8861856	CallExpression	gs_debug_c ( '8' )		8861818	0					
ANR	8861857	Callee	gs_debug_c		8861818	0					
ANR	8861858	Identifier	gs_debug_c		8861818	0					
ANR	8861859	ArgumentList	'8'		8861818	1					
ANR	8861860	Argument	'8'		8861818	0					
ANR	8861861	PrimaryExpression	'8'		8861818	0					
ANR	8861862	CompoundStatement		10:33:323:323	8861818	1					
ANR	8861863	ExpressionStatement	"dmlprintf1 ( cmem , ""  [8]unmark packed 0x%lx "" , ( ulong ) rp )"	121:16:3817:3874	8861818	0	True				
ANR	8861864	CallExpression	"dmlprintf1 ( cmem , ""  [8]unmark packed 0x%lx "" , ( ulong ) rp )"		8861818	0					
ANR	8861865	Callee	dmlprintf1		8861818	0					
ANR	8861866	Identifier	dmlprintf1		8861818	0					
ANR	8861867	ArgumentList	cmem		8861818	1					
ANR	8861868	Argument	cmem		8861818	0					
ANR	8861869	Identifier	cmem		8861818	0					
ANR	8861870	Argument	"""  [8]unmark packed 0x%lx """		8861818	1					
ANR	8861871	PrimaryExpression	"""  [8]unmark packed 0x%lx """		8861818	0					
ANR	8861872	Argument	( ulong ) rp		8861818	2					
ANR	8861873	CastExpression	( ulong ) rp		8861818	0					
ANR	8861874	CastTarget	ulong		8861818	0					
ANR	8861875	Identifier	rp		8861818	1					
ANR	8861876	ExpressionStatement	"debug_print_ref ( cmem , ( const ref * ) rp )"	122:16:3892:3930	8861818	1	True				
ANR	8861877	CallExpression	"debug_print_ref ( cmem , ( const ref * ) rp )"		8861818	0					
ANR	8861878	Callee	debug_print_ref		8861818	0					
ANR	8861879	Identifier	debug_print_ref		8861818	0					
ANR	8861880	ArgumentList	cmem		8861818	1					
ANR	8861881	Argument	cmem		8861818	0					
ANR	8861882	Identifier	cmem		8861818	0					
ANR	8861883	Argument	( const ref * ) rp		8861818	1					
ANR	8861884	CastExpression	( const ref * ) rp		8861818	0					
ANR	8861885	CastTarget	const ref *		8861818	0					
ANR	8861886	Identifier	rp		8861818	1					
ANR	8861887	ExpressionStatement	"dmputs ( cmem , ""\\n"" )"	123:16:3948:3966	8861818	2	True				
ANR	8861888	CallExpression	"dmputs ( cmem , ""\\n"" )"		8861818	0					
ANR	8861889	Callee	dmputs		8861818	0					
ANR	8861890	Identifier	dmputs		8861818	0					
ANR	8861891	ArgumentList	cmem		8861818	1					
ANR	8861892	Argument	cmem		8861818	0					
ANR	8861893	Identifier	cmem		8861818	0					
ANR	8861894	Argument	"""\\n"""		8861818	1					
ANR	8861895	PrimaryExpression	"""\\n"""		8861818	0					
ANR	8861896	ExpressionStatement	r_clear_pmark ( rp )	126:12:4001:4018	8861818	1	True				
ANR	8861897	CallExpression	r_clear_pmark ( rp )		8861818	0					
ANR	8861898	Callee	r_clear_pmark		8861818	0					
ANR	8861899	Identifier	r_clear_pmark		8861818	0					
ANR	8861900	ArgumentList	rp		8861818	1					
ANR	8861901	Argument	rp		8861818	0					
ANR	8861902	Identifier	rp		8861818	0					
ANR	8861903	ExpressionStatement	rp ++	127:12:4032:4036	8861818	2	True				
ANR	8861904	PostIncDecOperationExpression	rp ++		8861818	0					
ANR	8861905	Identifier	rp		8861818	0					
ANR	8861906	IncDec	++		8861818	1					
ANR	8861907	ElseStatement	else		8861818	0					
ANR	8861908	CompoundStatement		18:15:577:577	8861818	0					
ANR	8861909	Statement	ref	129:12:4088:4090	8861818	0	True				
ANR	8861910	Statement	*	129:16:4092:4092	8861818	1	True				
ANR	8861911	Statement	const	129:17:4093:4097	8861818	2	True				
ANR	8861912	ExpressionStatement	pref = ( ref * ) rp	129:23:4099:4115	8861818	3	True				
ANR	8861913	AssignmentExpression	pref = ( ref * ) rp		8861818	0		=			
ANR	8861914	Identifier	pref		8861818	0					
ANR	8861915	CastExpression	( ref * ) rp		8861818	1					
ANR	8861916	CastTarget	ref *		8861818	0					
ANR	8861917	Identifier	rp		8861818	1					
ANR	8861918	IfStatement	if ( gs_debug_c ( '8' ) )		8861818	4					
ANR	8861919	Condition	gs_debug_c ( '8' )	132:16:4147:4161	8861818	0	True				
ANR	8861920	CallExpression	gs_debug_c ( '8' )		8861818	0					
ANR	8861921	Callee	gs_debug_c		8861818	0					
ANR	8861922	Identifier	gs_debug_c		8861818	0					
ANR	8861923	ArgumentList	'8'		8861818	1					
ANR	8861924	Argument	'8'		8861818	0					
ANR	8861925	PrimaryExpression	'8'		8861818	0					
ANR	8861926	CompoundStatement		22:33:688:688	8861818	1					
ANR	8861927	ExpressionStatement	"dmlprintf1 ( cmem , ""  [8]unmark ref 0x%lx "" , ( ulong ) rp )"	133:16:4182:4236	8861818	0	True				
ANR	8861928	CallExpression	"dmlprintf1 ( cmem , ""  [8]unmark ref 0x%lx "" , ( ulong ) rp )"		8861818	0					
ANR	8861929	Callee	dmlprintf1		8861818	0					
ANR	8861930	Identifier	dmlprintf1		8861818	0					
ANR	8861931	ArgumentList	cmem		8861818	1					
ANR	8861932	Argument	cmem		8861818	0					
ANR	8861933	Identifier	cmem		8861818	0					
ANR	8861934	Argument	"""  [8]unmark ref 0x%lx """		8861818	1					
ANR	8861935	PrimaryExpression	"""  [8]unmark ref 0x%lx """		8861818	0					
ANR	8861936	Argument	( ulong ) rp		8861818	2					
ANR	8861937	CastExpression	( ulong ) rp		8861818	0					
ANR	8861938	CastTarget	ulong		8861818	0					
ANR	8861939	Identifier	rp		8861818	1					
ANR	8861940	ExpressionStatement	"debug_print_ref ( cmem , pref )"	134:16:4254:4281	8861818	1	True				
ANR	8861941	CallExpression	"debug_print_ref ( cmem , pref )"		8861818	0					
ANR	8861942	Callee	debug_print_ref		8861818	0					
ANR	8861943	Identifier	debug_print_ref		8861818	0					
ANR	8861944	ArgumentList	cmem		8861818	1					
ANR	8861945	Argument	cmem		8861818	0					
ANR	8861946	Identifier	cmem		8861818	0					
ANR	8861947	Argument	pref		8861818	1					
ANR	8861948	Identifier	pref		8861818	0					
ANR	8861949	ExpressionStatement	"dmputs ( cmem , ""\\n"" )"	135:16:4299:4317	8861818	2	True				
ANR	8861950	CallExpression	"dmputs ( cmem , ""\\n"" )"		8861818	0					
ANR	8861951	Callee	dmputs		8861818	0					
ANR	8861952	Identifier	dmputs		8861818	0					
ANR	8861953	ArgumentList	cmem		8861818	1					
ANR	8861954	Argument	cmem		8861818	0					
ANR	8861955	Identifier	cmem		8861818	0					
ANR	8861956	Argument	"""\\n"""		8861818	1					
ANR	8861957	PrimaryExpression	"""\\n"""		8861818	0					
ANR	8861958	ExpressionStatement	"r_clear_attrs ( pref , l_mark )"	138:12:4352:4379	8861818	5	True				
ANR	8861959	CallExpression	"r_clear_attrs ( pref , l_mark )"		8861818	0					
ANR	8861960	Callee	r_clear_attrs		8861818	0					
ANR	8861961	Identifier	r_clear_attrs		8861818	0					
ANR	8861962	ArgumentList	pref		8861818	1					
ANR	8861963	Argument	pref		8861818	0					
ANR	8861964	Identifier	pref		8861818	0					
ANR	8861965	Argument	l_mark		8861818	1					
ANR	8861966	Identifier	l_mark		8861818	0					
ANR	8861967	ExpressionStatement	rp += packed_per_ref	139:12:4393:4413	8861818	6	True				
ANR	8861968	AssignmentExpression	rp += packed_per_ref		8861818	0		+=			
ANR	8861969	Identifier	rp		8861818	0					
ANR	8861970	Identifier	packed_per_ref		8861818	1					
ANR	8861971	IfStatement	if ( rp >= ( ref_packed * ) end )		8861818	7					
ANR	8861972	Condition	rp >= ( ref_packed * ) end	140:16:4431:4454	8861818	0	True				
ANR	8861973	RelationalExpression	rp >= ( ref_packed * ) end		8861818	0		>=			
ANR	8861974	Identifier	rp		8861818	0					
ANR	8861975	CastExpression	( ref_packed * ) end		8861818	1					
ANR	8861976	CastTarget	ref_packed *		8861818	0					
ANR	8861977	Identifier	end		8861818	1					
ANR	8861978	BreakStatement	break ;	141:16:4473:4478	8861818	1	True				
ANR	8861979	ReturnType	static void		8861818	1					
ANR	8861980	Identifier	refs_clear_marks		8861818	2					
ANR	8861981	ParameterList	"const gs_memory_t * cmem , void * vptr , uint size , const gs_memory_struct_type_t * pstype"		8861818	3					
ANR	8861982	Parameter	const gs_memory_t * cmem	108:17:3335:3357	8861818	0	True				
ANR	8861983	ParameterType	const gs_memory_t *		8861818	0					
ANR	8861984	Identifier	cmem		8861818	1					
ANR	8861985	Parameter	void * vptr	109:17:3377:3404	8861818	1	True				
ANR	8861986	ParameterType	void *		8861818	0					
ANR	8861987	Identifier	vptr		8861818	1					
ANR	8861988	Parameter	uint size	109:47:3407:3415	8861818	2	True				
ANR	8861989	ParameterType	uint		8861818	0					
ANR	8861990	Identifier	size		8861818	1					
ANR	8861991	Parameter	const gs_memory_struct_type_t * pstype	110:17:3435:3472	8861818	3	True				
ANR	8861992	ParameterType	const gs_memory_struct_type_t *		8861818	0					
ANR	8861993	Identifier	pstype		8861818	1					
ANR	8861994	CFGEntryNode	ENTRY		8861818		True				
ANR	8861995	CFGExitNode	EXIT		8861818		True				
ANR	8861996	InfiniteForNode	true		8861818		True				
ANR	8861997	Symbol	size		8861818						
ANR	8861998	Symbol	pstype		8861818						
ANR	8861999	Symbol	r_is_packed		8861818						
ANR	8862000	Symbol	pref		8861818						
ANR	8862001	Symbol	packed_per_ref		8861818						
ANR	8862002	Symbol	l_mark		8861818						
ANR	8862003	Symbol	end		8861818						
ANR	8862004	Symbol	gs_debug_c		8861818						
ANR	8862005	Symbol	cmem		8861818						
ANR	8862006	Symbol	rp		8861818						
ANR	8862007	Symbol	vptr		8861818						
ANR	8862008	Function	ptr_ref_mark	149:0:4578:4962							
ANR	8862009	FunctionDef	"ptr_ref_mark (enum_ptr_t * pep , gc_state_t * ignored)"		8862008	0					
ANR	8862010	CompoundStatement		151:0:4635:4962	8862008	0					
ANR	8862011	IdentifierDeclStatement	ref_packed * rpp = ( void * ) pep -> ptr ;	152:4:4641:4675	8862008	0	True				
ANR	8862012	IdentifierDecl	* rpp = ( void * ) pep -> ptr		8862008	0					
ANR	8862013	IdentifierDeclType	ref_packed *		8862008	0					
ANR	8862014	Identifier	rpp		8862008	1					
ANR	8862015	AssignmentExpression	* rpp = ( void * ) pep -> ptr		8862008	2		=			
ANR	8862016	Identifier	rpp		8862008	0					
ANR	8862017	CastExpression	( void * ) pep -> ptr		8862008	1					
ANR	8862018	CastTarget	void *		8862008	0					
ANR	8862019	PtrMemberAccess	pep -> ptr		8862008	1					
ANR	8862020	Identifier	pep		8862008	0					
ANR	8862021	Identifier	ptr		8862008	1					
ANR	8862022	IfStatement	if ( r_is_packed ( rpp ) )		8862008	1					
ANR	8862023	Condition	r_is_packed ( rpp )	154:8:4686:4701	8862008	0	True				
ANR	8862024	CallExpression	r_is_packed ( rpp )		8862008	0					
ANR	8862025	Callee	r_is_packed		8862008	0					
ANR	8862026	Identifier	r_is_packed		8862008	0					
ANR	8862027	ArgumentList	rpp		8862008	1					
ANR	8862028	Argument	rpp		8862008	0					
ANR	8862029	Identifier	rpp		8862008	0					
ANR	8862030	CompoundStatement		4:26:68:68	8862008	1					
ANR	8862031	IfStatement	if ( r_has_pmark ( rpp ) )		8862008	0					
ANR	8862032	Condition	r_has_pmark ( rpp )	155:12:4718:4733	8862008	0	True				
ANR	8862033	CallExpression	r_has_pmark ( rpp )		8862008	0					
ANR	8862034	Callee	r_has_pmark		8862008	0					
ANR	8862035	Identifier	r_has_pmark		8862008	0					
ANR	8862036	ArgumentList	rpp		8862008	1					
ANR	8862037	Argument	rpp		8862008	0					
ANR	8862038	Identifier	rpp		8862008	0					
ANR	8862039	ReturnStatement	return false ;	156:12:4748:4760	8862008	1	True				
ANR	8862040	Identifier	false		8862008	0					
ANR	8862041	ExpressionStatement	r_set_pmark ( rpp )	157:8:4770:4786	8862008	1	True				
ANR	8862042	CallExpression	r_set_pmark ( rpp )		8862008	0					
ANR	8862043	Callee	r_set_pmark		8862008	0					
ANR	8862044	Identifier	r_set_pmark		8862008	0					
ANR	8862045	ArgumentList	rpp		8862008	1					
ANR	8862046	Argument	rpp		8862008	0					
ANR	8862047	Identifier	rpp		8862008	0					
ANR	8862048	ElseStatement	else		8862008	0					
ANR	8862049	CompoundStatement		8:11:163:163	8862008	0					
ANR	8862050	Statement	ref	159:8:4809:4811	8862008	0	True				
ANR	8862051	Statement	*	159:12:4813:4813	8862008	1	True				
ANR	8862052	Statement	const	159:13:4814:4818	8862008	2	True				
ANR	8862053	ExpressionStatement	pref = ( ref * ) rpp	159:19:4820:4837	8862008	3	True				
ANR	8862054	AssignmentExpression	pref = ( ref * ) rpp		8862008	0		=			
ANR	8862055	Identifier	pref		8862008	0					
ANR	8862056	CastExpression	( ref * ) rpp		8862008	1					
ANR	8862057	CastTarget	ref *		8862008	0					
ANR	8862058	Identifier	rpp		8862008	1					
ANR	8862059	IfStatement	"if ( r_has_attr ( pref , l_mark ) )"		8862008	4					
ANR	8862060	Condition	"r_has_attr ( pref , l_mark )"	161:12:4852:4875	8862008	0	True				
ANR	8862061	CallExpression	"r_has_attr ( pref , l_mark )"		8862008	0					
ANR	8862062	Callee	r_has_attr		8862008	0					
ANR	8862063	Identifier	r_has_attr		8862008	0					
ANR	8862064	ArgumentList	pref		8862008	1					
ANR	8862065	Argument	pref		8862008	0					
ANR	8862066	Identifier	pref		8862008	0					
ANR	8862067	Argument	l_mark		8862008	1					
ANR	8862068	Identifier	l_mark		8862008	0					
ANR	8862069	ReturnStatement	return false ;	162:12:4890:4902	8862008	1	True				
ANR	8862070	Identifier	false		8862008	0					
ANR	8862071	ExpressionStatement	"r_set_attrs ( pref , l_mark )"	163:8:4912:4937	8862008	5	True				
ANR	8862072	CallExpression	"r_set_attrs ( pref , l_mark )"		8862008	0					
ANR	8862073	Callee	r_set_attrs		8862008	0					
ANR	8862074	Identifier	r_set_attrs		8862008	0					
ANR	8862075	ArgumentList	pref		8862008	1					
ANR	8862076	Argument	pref		8862008	0					
ANR	8862077	Identifier	pref		8862008	0					
ANR	8862078	Argument	l_mark		8862008	1					
ANR	8862079	Identifier	l_mark		8862008	0					
ANR	8862080	ReturnStatement	return true ;	165:4:4949:4960	8862008	2	True				
ANR	8862081	Identifier	true		8862008	0					
ANR	8862082	ReturnType	bool		8862008	1					
ANR	8862083	Identifier	ptr_ref_mark		8862008	2					
ANR	8862084	ParameterList	"enum_ptr_t * pep , gc_state_t * ignored"		8862008	3					
ANR	8862085	Parameter	enum_ptr_t * pep	150:13:4596:4610	8862008	0	True				
ANR	8862086	ParameterType	enum_ptr_t *		8862008	0					
ANR	8862087	Identifier	pep		8862008	1					
ANR	8862088	Parameter	gc_state_t * ignored	150:30:4613:4632	8862008	1	True				
ANR	8862089	ParameterType	gc_state_t *		8862008	0					
ANR	8862090	Identifier	ignored		8862008	1					
ANR	8862091	CFGEntryNode	ENTRY		8862008		True				
ANR	8862092	CFGExitNode	EXIT		8862008		True				
ANR	8862093	Symbol	ignored		8862008						
ANR	8862094	Symbol	rpp		8862008						
ANR	8862095	Symbol	pep -> ptr		8862008						
ANR	8862096	Symbol	* pep		8862008						
ANR	8862097	Symbol	r_is_packed		8862008						
ANR	8862098	Symbol	r_has_attr		8862008						
ANR	8862099	Symbol	r_has_pmark		8862008						
ANR	8862100	Symbol	pref		8862008						
ANR	8862101	Symbol	false		8862008						
ANR	8862102	Symbol	true		8862008						
ANR	8862103	Symbol	l_mark		8862008						
ANR	8862104	Symbol	pep		8862008						
ANR	8862105	Function	refs_clear_reloc	179:0:5397:6005							
ANR	8862106	FunctionDef	"refs_clear_reloc (obj_header_t * hdr , uint size)"		8862105	0					
ANR	8862107	CompoundStatement		181:0:5456:6005	8862105	0					
ANR	8862108	IdentifierDeclStatement	ref_packed * rp = ( ref_packed * ) ( hdr + 1 ) ;	182:4:5462:5503	8862105	0	True				
ANR	8862109	IdentifierDecl	* rp = ( ref_packed * ) ( hdr + 1 )		8862105	0					
ANR	8862110	IdentifierDeclType	ref_packed *		8862105	0					
ANR	8862111	Identifier	rp		8862105	1					
ANR	8862112	AssignmentExpression	* rp = ( ref_packed * ) ( hdr + 1 )		8862105	2		=			
ANR	8862113	Identifier	rp		8862105	0					
ANR	8862114	CastExpression	( ref_packed * ) ( hdr + 1 )		8862105	1					
ANR	8862115	CastTarget	ref_packed *		8862105	0					
ANR	8862116	AdditiveExpression	hdr + 1		8862105	1		+			
ANR	8862117	Identifier	hdr		8862105	0					
ANR	8862118	PrimaryExpression	1		8862105	1					
ANR	8862119	IdentifierDeclStatement	ref_packed * end = ( ref_packed * ) ( ( byte * ) rp + size ) ;	183:4:5509:5562	8862105	1	True				
ANR	8862120	IdentifierDecl	* end = ( ref_packed * ) ( ( byte * ) rp + size )		8862105	0					
ANR	8862121	IdentifierDeclType	ref_packed *		8862105	0					
ANR	8862122	Identifier	end		8862105	1					
ANR	8862123	AssignmentExpression	* end = ( ref_packed * ) ( ( byte * ) rp + size )		8862105	2		=			
ANR	8862124	Identifier	end		8862105	0					
ANR	8862125	CastExpression	( ref_packed * ) ( ( byte * ) rp + size )		8862105	1					
ANR	8862126	CastTarget	ref_packed *		8862105	0					
ANR	8862127	AdditiveExpression	( byte * ) rp + size		8862105	1		+			
ANR	8862128	CastExpression	( byte * ) rp		8862105	0					
ANR	8862129	CastTarget	byte *		8862105	0					
ANR	8862130	Identifier	rp		8862105	1					
ANR	8862131	Identifier	size		8862105	1					
ANR	8862132	WhileStatement	while ( rp < end )		8862105	2					
ANR	8862133	Condition	rp < end	185:11:5576:5583	8862105	0	True				
ANR	8862134	RelationalExpression	rp < end		8862105	0		<			
ANR	8862135	Identifier	rp		8862105	0					
ANR	8862136	Identifier	end		8862105	1					
ANR	8862137	CompoundStatement		5:21:129:129	8862105	1					
ANR	8862138	IfStatement	if ( r_is_packed ( rp ) )		8862105	0					
ANR	8862139	Condition	r_is_packed ( rp )	186:12:5600:5614	8862105	0	True				
ANR	8862140	CallExpression	r_is_packed ( rp )		8862105	0					
ANR	8862141	Callee	r_is_packed		8862105	0					
ANR	8862142	Identifier	r_is_packed		8862105	0					
ANR	8862143	ArgumentList	rp		8862105	1					
ANR	8862144	Argument	rp		8862105	0					
ANR	8862145	Identifier	rp		8862105	0					
ANR	8862146	ExpressionStatement	rp ++	187:12:5629:5633	8862105	1	True				
ANR	8862147	PostIncDecOperationExpression	rp ++		8862105	0					
ANR	8862148	Identifier	rp		8862105	0					
ANR	8862149	IncDec	++		8862105	1					
ANR	8862150	ElseStatement	else		8862105	0					
ANR	8862151	CompoundStatement		8:13:191:191	8862105	0					
ANR	8862152	Statement	ref	190:12:5735:5737	8862105	0	True				
ANR	8862153	Statement	*	190:16:5739:5739	8862105	1	True				
ANR	8862154	Statement	const	190:17:5740:5744	8862105	2	True				
ANR	8862155	ExpressionStatement	pref = ( ref * ) rp	190:23:5746:5762	8862105	3	True				
ANR	8862156	AssignmentExpression	pref = ( ref * ) rp		8862105	0		=			
ANR	8862157	Identifier	pref		8862105	0					
ANR	8862158	CastExpression	( ref * ) rp		8862105	1					
ANR	8862159	CastTarget	ref *		8862105	0					
ANR	8862160	Identifier	rp		8862105	1					
ANR	8862161	IfStatement	if ( ! ref_type_uses_size_or_null ( r_type ( pref ) ) )		8862105	4					
ANR	8862162	Condition	! ref_type_uses_size_or_null ( r_type ( pref ) )	192:16:5781:5821	8862105	0	True				
ANR	8862163	UnaryOperationExpression	! ref_type_uses_size_or_null ( r_type ( pref ) )		8862105	0					
ANR	8862164	UnaryOperator	!		8862105	0					
ANR	8862165	CallExpression	ref_type_uses_size_or_null ( r_type ( pref ) )		8862105	1					
ANR	8862166	Callee	ref_type_uses_size_or_null		8862105	0					
ANR	8862167	Identifier	ref_type_uses_size_or_null		8862105	0					
ANR	8862168	ArgumentList	r_type ( pref )		8862105	1					
ANR	8862169	Argument	r_type ( pref )		8862105	0					
ANR	8862170	CallExpression	r_type ( pref )		8862105	0					
ANR	8862171	Callee	r_type		8862105	0					
ANR	8862172	Identifier	r_type		8862105	0					
ANR	8862173	ArgumentList	pref		8862105	1					
ANR	8862174	Argument	pref		8862105	0					
ANR	8862175	Identifier	pref		8862105	0					
ANR	8862176	CompoundStatement		12:59:367:367	8862105	1					
ANR	8862177	ExpressionStatement	"if_debug1 ( '8' , ""  [8]clearing reloc at 0x%lx\\n"" , ( ulong ) rp )"	193:16:5842:5902	8862105	0	True				
ANR	8862178	CallExpression	"if_debug1 ( '8' , ""  [8]clearing reloc at 0x%lx\\n"" , ( ulong ) rp )"		8862105	0					
ANR	8862179	Callee	if_debug1		8862105	0					
ANR	8862180	Identifier	if_debug1		8862105	0					
ANR	8862181	ArgumentList	'8'		8862105	1					
ANR	8862182	Argument	'8'		8862105	0					
ANR	8862183	PrimaryExpression	'8'		8862105	0					
ANR	8862184	Argument	"""  [8]clearing reloc at 0x%lx\\n"""		8862105	1					
ANR	8862185	PrimaryExpression	"""  [8]clearing reloc at 0x%lx\\n"""		8862105	0					
ANR	8862186	Argument	( ulong ) rp		8862105	2					
ANR	8862187	CastExpression	( ulong ) rp		8862105	0					
ANR	8862188	CastTarget	ulong		8862105	0					
ANR	8862189	Identifier	rp		8862105	1					
ANR	8862190	ExpressionStatement	"r_set_size ( pref , 0 )"	194:16:5920:5939	8862105	1	True				
ANR	8862191	CallExpression	"r_set_size ( pref , 0 )"		8862105	0					
ANR	8862192	Callee	r_set_size		8862105	0					
ANR	8862193	Identifier	r_set_size		8862105	0					
ANR	8862194	ArgumentList	pref		8862105	1					
ANR	8862195	Argument	pref		8862105	0					
ANR	8862196	Identifier	pref		8862105	0					
ANR	8862197	Argument	0		8862105	1					
ANR	8862198	PrimaryExpression	0		8862105	0					
ANR	8862199	ExpressionStatement	rp += packed_per_ref	196:12:5967:5987	8862105	5	True				
ANR	8862200	AssignmentExpression	rp += packed_per_ref		8862105	0		+=			
ANR	8862201	Identifier	rp		8862105	0					
ANR	8862202	Identifier	packed_per_ref		8862105	1					
ANR	8862203	ReturnType	static void		8862105	1					
ANR	8862204	Identifier	refs_clear_reloc		8862105	2					
ANR	8862205	ParameterList	"obj_header_t * hdr , uint size"		8862105	3					
ANR	8862206	Parameter	obj_header_t * hdr	180:17:5426:5442	8862105	0	True				
ANR	8862207	ParameterType	obj_header_t *		8862105	0					
ANR	8862208	Identifier	hdr		8862105	1					
ANR	8862209	Parameter	uint size	180:36:5445:5453	8862105	1	True				
ANR	8862210	ParameterType	uint		8862105	0					
ANR	8862211	Identifier	size		8862105	1					
ANR	8862212	CFGEntryNode	ENTRY		8862105		True				
ANR	8862213	CFGExitNode	EXIT		8862105		True				
ANR	8862214	Symbol	size		8862105						
ANR	8862215	Symbol	r_is_packed		8862105						
ANR	8862216	Symbol	ref_type_uses_size_or_null		8862105						
ANR	8862217	Symbol	hdr		8862105						
ANR	8862218	Symbol	pref		8862105						
ANR	8862219	Symbol	packed_per_ref		8862105						
ANR	8862220	Symbol	end		8862105						
ANR	8862221	Symbol	rp		8862105						
ANR	8862222	Symbol	r_type		8862105						
ANR	8862223	Function	refs_set_reloc	202:0:6051:12375							
ANR	8862224	FunctionDef	"refs_set_reloc (obj_header_t * hdr , uint reloc , uint size)"		8862223	0					
ANR	8862225	CompoundStatement		204:0:6121:12375	8862223	0					
ANR	8862226	IdentifierDeclStatement	ref_packed * rp = ( ref_packed * ) ( hdr + 1 ) ;	205:4:6127:6168	8862223	0	True				
ANR	8862227	IdentifierDecl	* rp = ( ref_packed * ) ( hdr + 1 )		8862223	0					
ANR	8862228	IdentifierDeclType	ref_packed *		8862223	0					
ANR	8862229	Identifier	rp		8862223	1					
ANR	8862230	AssignmentExpression	* rp = ( ref_packed * ) ( hdr + 1 )		8862223	2		=			
ANR	8862231	Identifier	rp		8862223	0					
ANR	8862232	CastExpression	( ref_packed * ) ( hdr + 1 )		8862223	1					
ANR	8862233	CastTarget	ref_packed *		8862223	0					
ANR	8862234	AdditiveExpression	hdr + 1		8862223	1		+			
ANR	8862235	Identifier	hdr		8862223	0					
ANR	8862236	PrimaryExpression	1		8862223	1					
ANR	8862237	IdentifierDeclStatement	ref_packed * end = ( ref_packed * ) ( ( byte * ) rp + size ) ;	206:4:6174:6227	8862223	1	True				
ANR	8862238	IdentifierDecl	* end = ( ref_packed * ) ( ( byte * ) rp + size )		8862223	0					
ANR	8862239	IdentifierDeclType	ref_packed *		8862223	0					
ANR	8862240	Identifier	end		8862223	1					
ANR	8862241	AssignmentExpression	* end = ( ref_packed * ) ( ( byte * ) rp + size )		8862223	2		=			
ANR	8862242	Identifier	end		8862223	0					
ANR	8862243	CastExpression	( ref_packed * ) ( ( byte * ) rp + size )		8862223	1					
ANR	8862244	CastTarget	ref_packed *		8862223	0					
ANR	8862245	AdditiveExpression	( byte * ) rp + size		8862223	1		+			
ANR	8862246	CastExpression	( byte * ) rp		8862223	0					
ANR	8862247	CastTarget	byte *		8862223	0					
ANR	8862248	Identifier	rp		8862223	1					
ANR	8862249	Identifier	size		8862223	1					
ANR	8862250	IdentifierDeclStatement	uint freed = 0 ;	207:4:6233:6247	8862223	2	True				
ANR	8862251	IdentifierDecl	freed = 0		8862223	0					
ANR	8862252	IdentifierDeclType	uint		8862223	0					
ANR	8862253	Identifier	freed		8862223	1					
ANR	8862254	AssignmentExpression	freed = 0		8862223	2		=			
ANR	8862255	Identifier	freed		8862223	0					
ANR	8862256	PrimaryExpression	0		8862223	1					
ANR	8862257	WhileStatement	while ( rp < end )		8862223	3					
ANR	8862258	Condition	rp < end	217:11:6689:6696	8862223	0	True				
ANR	8862259	RelationalExpression	rp < end		8862223	0		<			
ANR	8862260	Identifier	rp		8862223	0					
ANR	8862261	Identifier	end		8862223	1					
ANR	8862262	CompoundStatement		14:21:577:577	8862223	1					
ANR	8862263	IfStatement	if ( r_is_packed ( rp ) )		8862223	0					
ANR	8862264	Condition	r_is_packed ( rp )	218:12:6713:6727	8862223	0	True				
ANR	8862265	CallExpression	r_is_packed ( rp )		8862223	0					
ANR	8862266	Callee	r_is_packed		8862223	0					
ANR	8862267	Identifier	r_is_packed		8862223	0					
ANR	8862268	ArgumentList	rp		8862223	1					
ANR	8862269	Argument	rp		8862223	0					
ANR	8862270	Identifier	rp		8862223	0					
ANR	8862271	CompoundStatement		15:29:608:608	8862223	1					
ANR	8862272	IfStatement	if ( r_has_pmark ( rp ) )		8862223	0					
ANR	8862273	Condition	r_has_pmark ( rp )	220:16:6778:6792	8862223	0	True				
ANR	8862274	CallExpression	r_has_pmark ( rp )		8862223	0					
ANR	8862275	Callee	r_has_pmark		8862223	0					
ANR	8862276	Identifier	r_has_pmark		8862223	0					
ANR	8862277	ArgumentList	rp		8862223	1					
ANR	8862278	Argument	rp		8862223	0					
ANR	8862279	Identifier	rp		8862223	0					
ANR	8862280	CompoundStatement		17:33:673:673	8862223	1					
ANR	8862281	ExpressionStatement	"if_debug1 ( '8' , ""  [8]packed ref 0x%lx is marked\\n"" , ( ulong ) rp )"	221:16:6813:6928	8862223	0	True				
ANR	8862282	CallExpression	"if_debug1 ( '8' , ""  [8]packed ref 0x%lx is marked\\n"" , ( ulong ) rp )"		8862223	0					
ANR	8862283	Callee	if_debug1		8862223	0					
ANR	8862284	Identifier	if_debug1		8862223	0					
ANR	8862285	ArgumentList	'8'		8862223	1					
ANR	8862286	Argument	'8'		8862223	0					
ANR	8862287	PrimaryExpression	'8'		8862223	0					
ANR	8862288	Argument	"""  [8]packed ref 0x%lx is marked\\n"""		8862223	1					
ANR	8862289	PrimaryExpression	"""  [8]packed ref 0x%lx is marked\\n"""		8862223	0					
ANR	8862290	Argument	( ulong ) rp		8862223	2					
ANR	8862291	CastExpression	( ulong ) rp		8862223	0					
ANR	8862292	CastTarget	ulong		8862223	0					
ANR	8862293	Identifier	rp		8862223	1					
ANR	8862294	ExpressionStatement	rp ++	224:16:6946:6950	8862223	1	True				
ANR	8862295	PostIncDecOperationExpression	rp ++		8862223	0					
ANR	8862296	Identifier	rp		8862223	0					
ANR	8862297	IncDec	++		8862223	1					
ANR	8862298	ElseStatement	else		8862223	0					
ANR	8862299	CompoundStatement		22:19:849:849	8862223	0					
ANR	8862300	ExpressionStatement	"if_debug2 ( '8' , ""  [8]%d packed ref(s) at 0x%lx are unmarked\\n"" , align_packed_per_ref , ( ulong ) rp )"	283:20:9107:9234	8862223	0	True				
ANR	8862301	CallExpression	"if_debug2 ( '8' , ""  [8]%d packed ref(s) at 0x%lx are unmarked\\n"" , align_packed_per_ref , ( ulong ) rp )"		8862223	0					
ANR	8862302	Callee	if_debug2		8862223	0					
ANR	8862303	Identifier	if_debug2		8862223	0					
ANR	8862304	ArgumentList	'8'		8862223	1					
ANR	8862305	Argument	'8'		8862223	0					
ANR	8862306	PrimaryExpression	'8'		8862223	0					
ANR	8862307	Argument	"""  [8]%d packed ref(s) at 0x%lx are unmarked\\n"""		8862223	1					
ANR	8862308	PrimaryExpression	"""  [8]%d packed ref(s) at 0x%lx are unmarked\\n"""		8862223	0					
ANR	8862309	Argument	align_packed_per_ref		8862223	2					
ANR	8862310	Identifier	align_packed_per_ref		8862223	0					
ANR	8862311	Argument	( ulong ) rp		8862223	3					
ANR	8862312	CastExpression	( ulong ) rp		8862223	0					
ANR	8862313	CastTarget	ulong		8862223	0					
ANR	8862314	Identifier	rp		8862223	1					
ANR	8862315	CompoundStatement		83:24:3160:3184	8862223	1					
ANR	8862316	IdentifierDeclStatement	uint rel = reloc + freed ;	286:24:9282:9306	8862223	0	True				
ANR	8862317	IdentifierDecl	rel = reloc + freed		8862223	0					
ANR	8862318	IdentifierDeclType	uint		8862223	0					
ANR	8862319	Identifier	rel		8862223	1					
ANR	8862320	AssignmentExpression	rel = reloc + freed		8862223	2		=			
ANR	8862321	Identifier	rel		8862223	0					
ANR	8862322	AdditiveExpression	reloc + freed		8862223	1		+			
ANR	8862323	Identifier	reloc		8862223	0					
ANR	8862324	Identifier	freed		8862223	1					
ANR	8862325	ExpressionStatement	"* rp = pt_tag ( pt_integer ) + min ( rel , packed_max_value )"	290:24:9456:9537	8862223	1	True				
ANR	8862326	AssignmentExpression	"* rp = pt_tag ( pt_integer ) + min ( rel , packed_max_value )"		8862223	0		=			
ANR	8862327	UnaryOperationExpression	* rp		8862223	0					
ANR	8862328	UnaryOperator	*		8862223	0					
ANR	8862329	Identifier	rp		8862223	1					
ANR	8862330	AdditiveExpression	"pt_tag ( pt_integer ) + min ( rel , packed_max_value )"		8862223	1		+			
ANR	8862331	CallExpression	pt_tag ( pt_integer )		8862223	0					
ANR	8862332	Callee	pt_tag		8862223	0					
ANR	8862333	Identifier	pt_tag		8862223	0					
ANR	8862334	ArgumentList	pt_integer		8862223	1					
ANR	8862335	Argument	pt_integer		8862223	0					
ANR	8862336	Identifier	pt_integer		8862223	0					
ANR	8862337	CallExpression	"min ( rel , packed_max_value )"		8862223	1					
ANR	8862338	Callee	min		8862223	0					
ANR	8862339	Identifier	min		8862223	0					
ANR	8862340	ArgumentList	rel		8862223	1					
ANR	8862341	Argument	rel		8862223	0					
ANR	8862342	Identifier	rel		8862223	0					
ANR	8862343	Argument	packed_max_value		8862223	1					
ANR	8862344	Identifier	packed_max_value		8862223	0					
ANR	8862345	ExpressionStatement	rp += align_packed_per_ref	293:20:9581:9607	8862223	2	True				
ANR	8862346	AssignmentExpression	rp += align_packed_per_ref		8862223	0		+=			
ANR	8862347	Identifier	rp		8862223	0					
ANR	8862348	Identifier	align_packed_per_ref		8862223	1					
ANR	8862349	ExpressionStatement	freed += sizeof ( ref_packed ) * align_packed_per_ref	294:20:9629:9679	8862223	3	True				
ANR	8862350	AssignmentExpression	freed += sizeof ( ref_packed ) * align_packed_per_ref		8862223	0		+=			
ANR	8862351	Identifier	freed		8862223	0					
ANR	8862352	MultiplicativeExpression	sizeof ( ref_packed ) * align_packed_per_ref		8862223	1		*			
ANR	8862353	SizeofExpression	sizeof ( ref_packed )		8862223	0					
ANR	8862354	Sizeof	sizeof		8862223	0					
ANR	8862355	SizeofOperand	ref_packed		8862223	1					
ANR	8862356	Identifier	align_packed_per_ref		8862223	1					
ANR	8862357	ElseStatement	else		8862223	0					
ANR	8862358	CompoundStatement		99:12:3811:3833	8862223	0					
ANR	8862359	IdentifierDeclStatement	uint rel = reloc + freed ;	297:12:9745:9769	8862223	0	True				
ANR	8862360	IdentifierDecl	rel = reloc + freed		8862223	0					
ANR	8862361	IdentifierDeclType	uint		8862223	0					
ANR	8862362	Identifier	rel		8862223	1					
ANR	8862363	AssignmentExpression	rel = reloc + freed		8862223	2		=			
ANR	8862364	Identifier	rel		8862223	0					
ANR	8862365	AdditiveExpression	reloc + freed		8862223	1		+			
ANR	8862366	Identifier	reloc		8862223	0					
ANR	8862367	Identifier	freed		8862223	1					
ANR	8862368	IdentifierDeclStatement	ref * pref = ( ref * ) rp ;	302:12:9933:9955	8862223	1	True				
ANR	8862369	IdentifierDecl	* pref = ( ref * ) rp		8862223	0					
ANR	8862370	IdentifierDeclType	ref *		8862223	0					
ANR	8862371	Identifier	pref		8862223	1					
ANR	8862372	AssignmentExpression	* pref = ( ref * ) rp		8862223	2		=			
ANR	8862373	Identifier	pref		8862223	0					
ANR	8862374	CastExpression	( ref * ) rp		8862223	1					
ANR	8862375	CastTarget	ref *		8862223	0					
ANR	8862376	Identifier	rp		8862223	1					
ANR	8862377	IfStatement	"if ( ! r_has_attr ( pref , l_mark ) )"		8862223	2					
ANR	8862378	Condition	"! r_has_attr ( pref , l_mark )"	304:16:9974:9998	8862223	0	True				
ANR	8862379	UnaryOperationExpression	"! r_has_attr ( pref , l_mark )"		8862223	0					
ANR	8862380	UnaryOperator	!		8862223	0					
ANR	8862381	CallExpression	"r_has_attr ( pref , l_mark )"		8862223	1					
ANR	8862382	Callee	r_has_attr		8862223	0					
ANR	8862383	Identifier	r_has_attr		8862223	0					
ANR	8862384	ArgumentList	pref		8862223	1					
ANR	8862385	Argument	pref		8862223	0					
ANR	8862386	Identifier	pref		8862223	0					
ANR	8862387	Argument	l_mark		8862223	1					
ANR	8862388	Identifier	l_mark		8862223	0					
ANR	8862389	CompoundStatement		101:43:3879:3879	8862223	1					
ANR	8862390	ExpressionStatement	"if_debug1 ( '8' , ""  [8]ref 0x%lx is unmarked\\n"" , ( ulong ) pref )"	305:16:10019:10105	8862223	0	True				
ANR	8862391	CallExpression	"if_debug1 ( '8' , ""  [8]ref 0x%lx is unmarked\\n"" , ( ulong ) pref )"		8862223	0					
ANR	8862392	Callee	if_debug1		8862223	0					
ANR	8862393	Identifier	if_debug1		8862223	0					
ANR	8862394	ArgumentList	'8'		8862223	1					
ANR	8862395	Argument	'8'		8862223	0					
ANR	8862396	PrimaryExpression	'8'		8862223	0					
ANR	8862397	Argument	"""  [8]ref 0x%lx is unmarked\\n"""		8862223	1					
ANR	8862398	PrimaryExpression	"""  [8]ref 0x%lx is unmarked\\n"""		8862223	0					
ANR	8862399	Argument	( ulong ) pref		8862223	2					
ANR	8862400	CastExpression	( ulong ) pref		8862223	0					
ANR	8862401	CastTarget	ulong		8862223	0					
ANR	8862402	Identifier	pref		8862223	1					
ANR	8862403	ExpressionStatement	"r_set_type ( pref , t_mark )"	309:16:10221:10245	8862223	1	True				
ANR	8862404	CallExpression	"r_set_type ( pref , t_mark )"		8862223	0					
ANR	8862405	Callee	r_set_type		8862223	0					
ANR	8862406	Identifier	r_set_type		8862223	0					
ANR	8862407	ArgumentList	pref		8862223	1					
ANR	8862408	Argument	pref		8862223	0					
ANR	8862409	Identifier	pref		8862223	0					
ANR	8862410	Argument	t_mark		8862223	1					
ANR	8862411	Identifier	t_mark		8862223	0					
ANR	8862412	ExpressionStatement	"r_set_size ( pref , rel )"	310:16:10263:10284	8862223	2	True				
ANR	8862413	CallExpression	"r_set_size ( pref , rel )"		8862223	0					
ANR	8862414	Callee	r_set_size		8862223	0					
ANR	8862415	Identifier	r_set_size		8862223	0					
ANR	8862416	ArgumentList	pref		8862223	1					
ANR	8862417	Argument	pref		8862223	0					
ANR	8862418	Identifier	pref		8862223	0					
ANR	8862419	Argument	rel		8862223	1					
ANR	8862420	Identifier	rel		8862223	0					
ANR	8862421	ExpressionStatement	freed += sizeof ( ref )	311:16:10302:10322	8862223	3	True				
ANR	8862422	AssignmentExpression	freed += sizeof ( ref )		8862223	0		+=			
ANR	8862423	Identifier	freed		8862223	0					
ANR	8862424	SizeofExpression	sizeof ( ref )		8862223	1					
ANR	8862425	Sizeof	sizeof		8862223	0					
ANR	8862426	SizeofOperand	ref		8862223	1					
ANR	8862427	ElseStatement	else		8862223	0					
ANR	8862428	CompoundStatement		109:19:4221:4221	8862223	0					
ANR	8862429	ExpressionStatement	"if_debug1 ( '8' , ""  [8]ref 0x%lx is marked\\n"" , ( ulong ) pref )"	313:16:10361:10445	8862223	0	True				
ANR	8862430	CallExpression	"if_debug1 ( '8' , ""  [8]ref 0x%lx is marked\\n"" , ( ulong ) pref )"		8862223	0					
ANR	8862431	Callee	if_debug1		8862223	0					
ANR	8862432	Identifier	if_debug1		8862223	0					
ANR	8862433	ArgumentList	'8'		8862223	1					
ANR	8862434	Argument	'8'		8862223	0					
ANR	8862435	PrimaryExpression	'8'		8862223	0					
ANR	8862436	Argument	"""  [8]ref 0x%lx is marked\\n"""		8862223	1					
ANR	8862437	PrimaryExpression	"""  [8]ref 0x%lx is marked\\n"""		8862223	0					
ANR	8862438	Argument	( ulong ) pref		8862223	2					
ANR	8862439	CastExpression	( ulong ) pref		8862223	0					
ANR	8862440	CastTarget	ulong		8862223	0					
ANR	8862441	Identifier	pref		8862223	1					
ANR	8862442	IfStatement	if ( ! ref_type_uses_size_or_null ( r_type ( pref ) ) )		8862223	1					
ANR	8862443	Condition	! ref_type_uses_size_or_null ( r_type ( pref ) )	316:20:10528:10568	8862223	0	True				
ANR	8862444	UnaryOperationExpression	! ref_type_uses_size_or_null ( r_type ( pref ) )		8862223	0					
ANR	8862445	UnaryOperator	!		8862223	0					
ANR	8862446	CallExpression	ref_type_uses_size_or_null ( r_type ( pref ) )		8862223	1					
ANR	8862447	Callee	ref_type_uses_size_or_null		8862223	0					
ANR	8862448	Identifier	ref_type_uses_size_or_null		8862223	0					
ANR	8862449	ArgumentList	r_type ( pref )		8862223	1					
ANR	8862450	Argument	r_type ( pref )		8862223	0					
ANR	8862451	CallExpression	r_type ( pref )		8862223	0					
ANR	8862452	Callee	r_type		8862223	0					
ANR	8862453	Identifier	r_type		8862223	0					
ANR	8862454	ArgumentList	pref		8862223	1					
ANR	8862455	Argument	pref		8862223	0					
ANR	8862456	Identifier	pref		8862223	0					
ANR	8862457	CompoundStatement		113:63:4449:4449	8862223	1					
ANR	8862458	ExpressionStatement	"if_debug2 ( '8' , ""  [8]storing reloc %u at 0x%lx\\n"" , rel , ( ulong ) pref )"	317:20:10593:10692	8862223	0	True				
ANR	8862459	CallExpression	"if_debug2 ( '8' , ""  [8]storing reloc %u at 0x%lx\\n"" , rel , ( ulong ) pref )"		8862223	0					
ANR	8862460	Callee	if_debug2		8862223	0					
ANR	8862461	Identifier	if_debug2		8862223	0					
ANR	8862462	ArgumentList	'8'		8862223	1					
ANR	8862463	Argument	'8'		8862223	0					
ANR	8862464	PrimaryExpression	'8'		8862223	0					
ANR	8862465	Argument	"""  [8]storing reloc %u at 0x%lx\\n"""		8862223	1					
ANR	8862466	PrimaryExpression	"""  [8]storing reloc %u at 0x%lx\\n"""		8862223	0					
ANR	8862467	Argument	rel		8862223	2					
ANR	8862468	Identifier	rel		8862223	0					
ANR	8862469	Argument	( ulong ) pref		8862223	3					
ANR	8862470	CastExpression	( ulong ) pref		8862223	0					
ANR	8862471	CastTarget	ulong		8862223	0					
ANR	8862472	Identifier	pref		8862223	1					
ANR	8862473	ExpressionStatement	"r_set_size ( pref , rel )"	319:20:10714:10735	8862223	1	True				
ANR	8862474	CallExpression	"r_set_size ( pref , rel )"		8862223	0					
ANR	8862475	Callee	r_set_size		8862223	0					
ANR	8862476	Identifier	r_set_size		8862223	0					
ANR	8862477	ArgumentList	pref		8862223	1					
ANR	8862478	Argument	pref		8862223	0					
ANR	8862479	Identifier	pref		8862223	0					
ANR	8862480	Argument	rel		8862223	1					
ANR	8862481	Identifier	rel		8862223	0					
ANR	8862482	ExpressionStatement	rp += packed_per_ref	322:12:10781:10801	8862223	3	True				
ANR	8862483	AssignmentExpression	rp += packed_per_ref		8862223	0		+=			
ANR	8862484	Identifier	rp		8862223	0					
ANR	8862485	Identifier	packed_per_ref		8862223	1					
ANR	8862486	ExpressionStatement	"if_debug3 ( '7' , "" [7]at end of refs 0x%lx, size = %u, freed = %u\\n"" , ( ulong ) ( hdr + 1 ) , size , freed )"	325:4:10823:10936	8862223	4	True				
ANR	8862487	CallExpression	"if_debug3 ( '7' , "" [7]at end of refs 0x%lx, size = %u, freed = %u\\n"" , ( ulong ) ( hdr + 1 ) , size , freed )"		8862223	0					
ANR	8862488	Callee	if_debug3		8862223	0					
ANR	8862489	Identifier	if_debug3		8862223	0					
ANR	8862490	ArgumentList	'7'		8862223	1					
ANR	8862491	Argument	'7'		8862223	0					
ANR	8862492	PrimaryExpression	'7'		8862223	0					
ANR	8862493	Argument	""" [7]at end of refs 0x%lx, size = %u, freed = %u\\n"""		8862223	1					
ANR	8862494	PrimaryExpression	""" [7]at end of refs 0x%lx, size = %u, freed = %u\\n"""		8862223	0					
ANR	8862495	Argument	( ulong ) ( hdr + 1 )		8862223	2					
ANR	8862496	CastExpression	( ulong ) ( hdr + 1 )		8862223	0					
ANR	8862497	CastTarget	ulong		8862223	0					
ANR	8862498	AdditiveExpression	hdr + 1		8862223	1		+			
ANR	8862499	Identifier	hdr		8862223	0					
ANR	8862500	PrimaryExpression	1		8862223	1					
ANR	8862501	Argument	size		8862223	3					
ANR	8862502	Identifier	size		8862223	0					
ANR	8862503	Argument	freed		8862223	4					
ANR	8862504	Identifier	freed		8862223	0					
ANR	8862505	IfStatement	if ( freed == size )		8862223	5					
ANR	8862506	Condition	freed == size	327:8:10946:10958	8862223	0	True				
ANR	8862507	EqualityExpression	freed == size		8862223	0		==			
ANR	8862508	Identifier	freed		8862223	0					
ANR	8862509	Identifier	size		8862223	1					
ANR	8862510	ReturnStatement	return false ;	328:8:10969:10981	8862223	1	True				
ANR	8862511	Identifier	false		8862223	0					
ANR	8862512	IfStatement	if ( freed <= max_ushort )		8862223	6					
ANR	8862513	Condition	freed <= max_ushort	337:8:11327:11345	8862223	0	True				
ANR	8862514	RelationalExpression	freed <= max_ushort		8862223	0		<=			
ANR	8862515	Identifier	freed		8862223	0					
ANR	8862516	Identifier	max_ushort		8862223	1					
ANR	8862517	ReturnStatement	return true ;	338:8:11356:11367	8862223	1	True				
ANR	8862518	Identifier	true		8862223	0					
ANR	8862519	ExpressionStatement	rp = ( ref_packed * ) ( hdr + 1 )	344:4:11545:11574	8862223	7	True				
ANR	8862520	AssignmentExpression	rp = ( ref_packed * ) ( hdr + 1 )		8862223	0		=			
ANR	8862521	Identifier	rp		8862223	0					
ANR	8862522	CastExpression	( ref_packed * ) ( hdr + 1 )		8862223	1					
ANR	8862523	CastTarget	ref_packed *		8862223	0					
ANR	8862524	AdditiveExpression	hdr + 1		8862223	1		+			
ANR	8862525	Identifier	hdr		8862223	0					
ANR	8862526	PrimaryExpression	1		8862223	1					
ANR	8862527	WhileStatement	while ( rp < end )		8862223	8					
ANR	8862528	Condition	rp < end	345:11:11587:11594	8862223	0	True				
ANR	8862529	RelationalExpression	rp < end		8862223	0		<			
ANR	8862530	Identifier	rp		8862223	0					
ANR	8862531	Identifier	end		8862223	1					
ANR	8862532	CompoundStatement		142:21:5475:5475	8862223	1					
ANR	8862533	IfStatement	if ( r_is_packed ( rp ) )		8862223	0					
ANR	8862534	Condition	r_is_packed ( rp )	346:12:11611:11625	8862223	0	True				
ANR	8862535	CallExpression	r_is_packed ( rp )		8862223	0					
ANR	8862536	Callee	r_is_packed		8862223	0					
ANR	8862537	Identifier	r_is_packed		8862223	0					
ANR	8862538	ArgumentList	rp		8862223	1					
ANR	8862539	Argument	rp		8862223	0					
ANR	8862540	Identifier	rp		8862223	0					
ANR	8862541	CompoundStatement		143:29:5506:5506	8862223	1					
ANR	8862542	IfStatement	if ( ! r_has_pmark ( rp ) )		8862223	0					
ANR	8862543	Condition	! r_has_pmark ( rp )	347:16:11646:11661	8862223	0	True				
ANR	8862544	UnaryOperationExpression	! r_has_pmark ( rp )		8862223	0					
ANR	8862545	UnaryOperator	!		8862223	0					
ANR	8862546	CallExpression	r_has_pmark ( rp )		8862223	1					
ANR	8862547	Callee	r_has_pmark		8862223	0					
ANR	8862548	Identifier	r_has_pmark		8862223	0					
ANR	8862549	ArgumentList	rp		8862223	1					
ANR	8862550	Argument	rp		8862223	0					
ANR	8862551	Identifier	rp		8862223	0					
ANR	8862552	ExpressionStatement	* rp = pt_tag ( pt_integer ) | lp_mark	348:16:11680:11714	8862223	1	True				
ANR	8862553	AssignmentExpression	* rp = pt_tag ( pt_integer ) | lp_mark		8862223	0		=			
ANR	8862554	UnaryOperationExpression	* rp		8862223	0					
ANR	8862555	UnaryOperator	*		8862223	0					
ANR	8862556	Identifier	rp		8862223	1					
ANR	8862557	InclusiveOrExpression	pt_tag ( pt_integer ) | lp_mark		8862223	1		|			
ANR	8862558	CallExpression	pt_tag ( pt_integer )		8862223	0					
ANR	8862559	Callee	pt_tag		8862223	0					
ANR	8862560	Identifier	pt_tag		8862223	0					
ANR	8862561	ArgumentList	pt_integer		8862223	1					
ANR	8862562	Argument	pt_integer		8862223	0					
ANR	8862563	Identifier	pt_integer		8862223	0					
ANR	8862564	Identifier	lp_mark		8862223	1					
ANR	8862565	ExpressionStatement	++ rp	349:12:11728:11732	8862223	1	True				
ANR	8862566	UnaryExpression	++ rp		8862223	0					
ANR	8862567	IncDec	++		8862223	0					
ANR	8862568	Identifier	rp		8862223	1					
ANR	8862569	ElseStatement	else		8862223	0					
ANR	8862570	CompoundStatement		150:12:5779:5801	8862223	0					
ANR	8862571	IdentifierDeclStatement	ref * pref = ( ref * ) rp ;	353:12:11901:11923	8862223	0	True				
ANR	8862572	IdentifierDecl	* pref = ( ref * ) rp		8862223	0					
ANR	8862573	IdentifierDeclType	ref *		8862223	0					
ANR	8862574	Identifier	pref		8862223	1					
ANR	8862575	AssignmentExpression	* pref = ( ref * ) rp		8862223	2		=			
ANR	8862576	Identifier	pref		8862223	0					
ANR	8862577	CastExpression	( ref * ) rp		8862223	1					
ANR	8862578	CastTarget	ref *		8862223	0					
ANR	8862579	Identifier	rp		8862223	1					
ANR	8862580	IfStatement	"if ( ! r_has_attr ( pref , l_mark ) )"		8862223	1					
ANR	8862581	Condition	"! r_has_attr ( pref , l_mark )"	355:16:11942:11966	8862223	0	True				
ANR	8862582	UnaryOperationExpression	"! r_has_attr ( pref , l_mark )"		8862223	0					
ANR	8862583	UnaryOperator	!		8862223	0					
ANR	8862584	CallExpression	"r_has_attr ( pref , l_mark )"		8862223	1					
ANR	8862585	Callee	r_has_attr		8862223	0					
ANR	8862586	Identifier	r_has_attr		8862223	0					
ANR	8862587	ArgumentList	pref		8862223	1					
ANR	8862588	Argument	pref		8862223	0					
ANR	8862589	Identifier	pref		8862223	0					
ANR	8862590	Argument	l_mark		8862223	1					
ANR	8862591	Identifier	l_mark		8862223	0					
ANR	8862592	CompoundStatement		152:43:5847:5847	8862223	1					
ANR	8862593	ExpressionStatement	"r_set_type_attrs ( pref , t_mark , l_mark )"	356:16:11987:12025	8862223	0	True				
ANR	8862594	CallExpression	"r_set_type_attrs ( pref , t_mark , l_mark )"		8862223	0					
ANR	8862595	Callee	r_set_type_attrs		8862223	0					
ANR	8862596	Identifier	r_set_type_attrs		8862223	0					
ANR	8862597	ArgumentList	pref		8862223	1					
ANR	8862598	Argument	pref		8862223	0					
ANR	8862599	Identifier	pref		8862223	0					
ANR	8862600	Argument	t_mark		8862223	1					
ANR	8862601	Identifier	t_mark		8862223	0					
ANR	8862602	Argument	l_mark		8862223	2					
ANR	8862603	Identifier	l_mark		8862223	0					
ANR	8862604	ExpressionStatement	"r_set_size ( pref , reloc )"	357:16:12043:12066	8862223	1	True				
ANR	8862605	CallExpression	"r_set_size ( pref , reloc )"		8862223	0					
ANR	8862606	Callee	r_set_size		8862223	0					
ANR	8862607	Identifier	r_set_size		8862223	0					
ANR	8862608	ArgumentList	pref		8862223	1					
ANR	8862609	Argument	pref		8862223	0					
ANR	8862610	Identifier	pref		8862223	0					
ANR	8862611	Argument	reloc		8862223	1					
ANR	8862612	Identifier	reloc		8862223	0					
ANR	8862613	ElseStatement	else		8862223	0					
ANR	8862614	CompoundStatement		155:19:5965:5965	8862223	0					
ANR	8862615	IfStatement	if ( ! ref_type_uses_size_or_null ( r_type ( pref ) ) )		8862223	0					
ANR	8862616	Condition	! ref_type_uses_size_or_null ( r_type ( pref ) )	359:20:12109:12149	8862223	0	True				
ANR	8862617	UnaryOperationExpression	! ref_type_uses_size_or_null ( r_type ( pref ) )		8862223	0					
ANR	8862618	UnaryOperator	!		8862223	0					
ANR	8862619	CallExpression	ref_type_uses_size_or_null ( r_type ( pref ) )		8862223	1					
ANR	8862620	Callee	ref_type_uses_size_or_null		8862223	0					
ANR	8862621	Identifier	ref_type_uses_size_or_null		8862223	0					
ANR	8862622	ArgumentList	r_type ( pref )		8862223	1					
ANR	8862623	Argument	r_type ( pref )		8862223	0					
ANR	8862624	CallExpression	r_type ( pref )		8862223	0					
ANR	8862625	Callee	r_type		8862223	0					
ANR	8862626	Identifier	r_type		8862223	0					
ANR	8862627	ArgumentList	pref		8862223	1					
ANR	8862628	Argument	pref		8862223	0					
ANR	8862629	Identifier	pref		8862223	0					
ANR	8862630	ExpressionStatement	"r_set_size ( pref , reloc )"	360:20:12172:12195	8862223	1	True				
ANR	8862631	CallExpression	"r_set_size ( pref , reloc )"		8862223	0					
ANR	8862632	Callee	r_set_size		8862223	0					
ANR	8862633	Identifier	r_set_size		8862223	0					
ANR	8862634	ArgumentList	pref		8862223	1					
ANR	8862635	Argument	pref		8862223	0					
ANR	8862636	Identifier	pref		8862223	0					
ANR	8862637	Argument	reloc		8862223	1					
ANR	8862638	Identifier	reloc		8862223	0					
ANR	8862639	ExpressionStatement	rp += packed_per_ref	362:12:12223:12243	8862223	2	True				
ANR	8862640	AssignmentExpression	rp += packed_per_ref		8862223	0		+=			
ANR	8862641	Identifier	rp		8862223	0					
ANR	8862642	Identifier	packed_per_ref		8862223	1					
ANR	8862643	ExpressionStatement	"r_clear_attrs ( ( ref * ) rp - 1 , l_mark )"	366:4:12312:12349	8862223	9	True				
ANR	8862644	CallExpression	"r_clear_attrs ( ( ref * ) rp - 1 , l_mark )"		8862223	0					
ANR	8862645	Callee	r_clear_attrs		8862223	0					
ANR	8862646	Identifier	r_clear_attrs		8862223	0					
ANR	8862647	ArgumentList	( ref * ) rp - 1		8862223	1					
ANR	8862648	Argument	( ref * ) rp - 1		8862223	0					
ANR	8862649	AdditiveExpression	( ref * ) rp - 1		8862223	0		-			
ANR	8862650	CastExpression	( ref * ) rp		8862223	0					
ANR	8862651	CastTarget	ref *		8862223	0					
ANR	8862652	Identifier	rp		8862223	1					
ANR	8862653	PrimaryExpression	1		8862223	1					
ANR	8862654	Argument	l_mark		8862223	1					
ANR	8862655	Identifier	l_mark		8862223	0					
ANR	8862656	ReturnStatement	return true ;	368:4:12362:12373	8862223	10	True				
ANR	8862657	Identifier	true		8862223	0					
ANR	8862658	ReturnType	static bool		8862223	1					
ANR	8862659	Identifier	refs_set_reloc		8862223	2					
ANR	8862660	ParameterList	"obj_header_t * hdr , uint reloc , uint size"		8862223	3					
ANR	8862661	Parameter	obj_header_t * hdr	203:15:6078:6095	8862223	0	True				
ANR	8862662	ParameterType	obj_header_t *		8862223	0					
ANR	8862663	Identifier	hdr		8862223	1					
ANR	8862664	Parameter	uint reloc	203:35:6098:6107	8862223	1	True				
ANR	8862665	ParameterType	uint		8862223	0					
ANR	8862666	Identifier	reloc		8862223	1					
ANR	8862667	Parameter	uint size	203:47:6110:6118	8862223	2	True				
ANR	8862668	ParameterType	uint		8862223	0					
ANR	8862669	Identifier	size		8862223	1					
ANR	8862670	CFGEntryNode	ENTRY		8862223		True				
ANR	8862671	CFGExitNode	EXIT		8862223		True				
ANR	8862672	Symbol	r_is_packed		8862223						
ANR	8862673	Symbol	lp_mark		8862223						
ANR	8862674	Symbol	ref_type_uses_size_or_null		8862223						
ANR	8862675	Symbol	min		8862223						
ANR	8862676	Symbol	r_has_attr		8862223						
ANR	8862677	Symbol	r_has_pmark		8862223						
ANR	8862678	Symbol	pref		8862223						
ANR	8862679	Symbol	rel		8862223						
ANR	8862680	Symbol	end		8862223						
ANR	8862681	Symbol	align_packed_per_ref		8862223						
ANR	8862682	Symbol	reloc		8862223						
ANR	8862683	Symbol	packed_max_value		8862223						
ANR	8862684	Symbol	r_type		8862223						
ANR	8862685	Symbol	* rp		8862223						
ANR	8862686	Symbol	t_mark		8862223						
ANR	8862687	Symbol	packed_per_ref		8862223						
ANR	8862688	Symbol	false		8862223						
ANR	8862689	Symbol	freed		8862223						
ANR	8862690	Symbol	pt_integer		8862223						
ANR	8862691	Symbol	pt_tag		8862223						
ANR	8862692	Symbol	size		8862223						
ANR	8862693	Symbol	hdr		8862223						
ANR	8862694	Symbol	true		8862223						
ANR	8862695	Symbol	l_mark		8862223						
ANR	8862696	Symbol	rp		8862223						
ANR	8862697	Symbol	max_ushort		8862223						
ANR	8862698	Function	refs_do_reloc	374:0:12468:12733							
ANR	8862699	FunctionDef	"refs_do_reloc (void * vptr , uint size , const gs_memory_struct_type_t * pstype , gc_state_t * gcst)"		8862698	0					
ANR	8862700	CompoundStatement		377:0:12608:12733	8862698	0					
ANR	8862701	ExpressionStatement	"igc_reloc_refs ( ( ref_packed * ) vptr , ( ref_packed * ) ( ( char * ) vptr + size ) , gcst )"	378:4:12614:12731	8862698	0	True				
ANR	8862702	CallExpression	"igc_reloc_refs ( ( ref_packed * ) vptr , ( ref_packed * ) ( ( char * ) vptr + size ) , gcst )"		8862698	0					
ANR	8862703	Callee	igc_reloc_refs		8862698	0					
ANR	8862704	Identifier	igc_reloc_refs		8862698	0					
ANR	8862705	ArgumentList	( ref_packed * ) vptr		8862698	1					
ANR	8862706	Argument	( ref_packed * ) vptr		8862698	0					
ANR	8862707	CastExpression	( ref_packed * ) vptr		8862698	0					
ANR	8862708	CastTarget	ref_packed *		8862698	0					
ANR	8862709	Identifier	vptr		8862698	1					
ANR	8862710	Argument	( ref_packed * ) ( ( char * ) vptr + size )		8862698	1					
ANR	8862711	CastExpression	( ref_packed * ) ( ( char * ) vptr + size )		8862698	0					
ANR	8862712	CastTarget	ref_packed *		8862698	0					
ANR	8862713	AdditiveExpression	( char * ) vptr + size		8862698	1		+			
ANR	8862714	CastExpression	( char * ) vptr		8862698	0					
ANR	8862715	CastTarget	char *		8862698	0					
ANR	8862716	Identifier	vptr		8862698	1					
ANR	8862717	Identifier	size		8862698	1					
ANR	8862718	Argument	gcst		8862698	2					
ANR	8862719	Identifier	gcst		8862698	0					
ANR	8862720	ReturnType	static void		8862698	1					
ANR	8862721	Identifier	refs_do_reloc		8862698	2					
ANR	8862722	ParameterList	"void * vptr , uint size , const gs_memory_struct_type_t * pstype , gc_state_t * gcst"		8862698	3					
ANR	8862723	Parameter	void * vptr	375:14:12494:12521	8862698	0	True				
ANR	8862724	ParameterType	void *		8862698	0					
ANR	8862725	Identifier	vptr		8862698	1					
ANR	8862726	Parameter	uint size	375:44:12524:12532	8862698	1	True				
ANR	8862727	ParameterType	uint		8862698	0					
ANR	8862728	Identifier	size		8862698	1					
ANR	8862729	Parameter	const gs_memory_struct_type_t * pstype	376:14:12549:12586	8862698	2	True				
ANR	8862730	ParameterType	const gs_memory_struct_type_t *		8862698	0					
ANR	8862731	Identifier	pstype		8862698	1					
ANR	8862732	Parameter	gc_state_t * gcst	376:54:12589:12605	8862698	3	True				
ANR	8862733	ParameterType	gc_state_t *		8862698	0					
ANR	8862734	Identifier	gcst		8862698	1					
ANR	8862735	CFGEntryNode	ENTRY		8862698		True				
ANR	8862736	CFGExitNode	EXIT		8862698		True				
ANR	8862737	Symbol	size		8862698						
ANR	8862738	Symbol	pstype		8862698						
ANR	8862739	Symbol	gcst		8862698						
ANR	8862740	Symbol	vptr		8862698						
ANR	8862741	Function	igc_reloc_refs	385:0:12928:20123							
ANR	8862742	FunctionDef	"igc_reloc_refs (ref_packed * from , ref_packed * to , gc_state_t * gcst)"		8862741	0					
ANR	8862743	CompoundStatement		387:0:13003:20123	8862741	0					
ANR	8862744	IdentifierDeclStatement	int min_trace = gcst -> min_collect ;	388:4:13009:13042	8862741	0	True				
ANR	8862745	IdentifierDecl	min_trace = gcst -> min_collect		8862741	0					
ANR	8862746	IdentifierDeclType	int		8862741	0					
ANR	8862747	Identifier	min_trace		8862741	1					
ANR	8862748	AssignmentExpression	min_trace = gcst -> min_collect		8862741	2		=			
ANR	8862749	Identifier	min_trace		8862741	0					
ANR	8862750	PtrMemberAccess	gcst -> min_collect		8862741	1					
ANR	8862751	Identifier	gcst		8862741	0					
ANR	8862752	Identifier	min_collect		8862741	1					
ANR	8862753	IdentifierDeclStatement	ref_packed * rp = from ;	389:4:13048:13069	8862741	1	True				
ANR	8862754	IdentifierDecl	* rp = from		8862741	0					
ANR	8862755	IdentifierDeclType	ref_packed *		8862741	0					
ANR	8862756	Identifier	rp		8862741	1					
ANR	8862757	AssignmentExpression	* rp = from		8862741	2		=			
ANR	8862758	Identifier	from		8862741	0					
ANR	8862759	Identifier	from		8862741	1					
ANR	8862760	IdentifierDeclStatement	bool do_all = gcst -> relocating_untraced ;	390:4:13075:13114	8862741	2	True				
ANR	8862761	IdentifierDecl	do_all = gcst -> relocating_untraced		8862741	0					
ANR	8862762	IdentifierDeclType	bool		8862741	0					
ANR	8862763	Identifier	do_all		8862741	1					
ANR	8862764	AssignmentExpression	do_all = gcst -> relocating_untraced		8862741	2		=			
ANR	8862765	Identifier	do_all		8862741	0					
ANR	8862766	PtrMemberAccess	gcst -> relocating_untraced		8862741	1					
ANR	8862767	Identifier	gcst		8862741	0					
ANR	8862768	Identifier	relocating_untraced		8862741	1					
ANR	8862769	IdentifierDeclStatement	vm_spaces spaces = gcst -> spaces ;	392:4:13121:13152	8862741	3	True				
ANR	8862770	IdentifierDecl	spaces = gcst -> spaces		8862741	0					
ANR	8862771	IdentifierDeclType	vm_spaces		8862741	0					
ANR	8862772	Identifier	spaces		8862741	1					
ANR	8862773	AssignmentExpression	spaces = gcst -> spaces		8862741	2		=			
ANR	8862774	Identifier	spaces		8862741	0					
ANR	8862775	PtrMemberAccess	gcst -> spaces		8862741	1					
ANR	8862776	Identifier	gcst		8862741	0					
ANR	8862777	Identifier	spaces		8862741	1					
ANR	8862778	IdentifierDeclStatement	const gs_memory_t * cmem = space_system -> stable_memory ;	393:4:13158:13211	8862741	4	True				
ANR	8862779	IdentifierDecl	* cmem = space_system -> stable_memory		8862741	0					
ANR	8862780	IdentifierDeclType	const gs_memory_t *		8862741	0					
ANR	8862781	Identifier	cmem		8862741	1					
ANR	8862782	AssignmentExpression	* cmem = space_system -> stable_memory		8862741	2		=			
ANR	8862783	Identifier	cmem		8862741	0					
ANR	8862784	PtrMemberAccess	space_system -> stable_memory		8862741	1					
ANR	8862785	Identifier	space_system		8862741	0					
ANR	8862786	Identifier	stable_memory		8862741	1					
ANR	8862787	WhileStatement	while ( rp < to )		8862741	5					
ANR	8862788	Condition	rp < to	395:11:13225:13231	8862741	0	True				
ANR	8862789	RelationalExpression	rp < to		8862741	0		<			
ANR	8862790	Identifier	rp		8862741	0					
ANR	8862791	Identifier	to		8862741	1					
ANR	8862792	CompoundStatement		17:4:443:463	8862741	1					
ANR	8862793	IdentifierDeclStatement	ref * pref ;	396:8:13244:13253	8862741	0	True				
ANR	8862794	IdentifierDecl	* pref		8862741	0					
ANR	8862795	IdentifierDeclType	ref *		8862741	0					
ANR	8862796	Identifier	pref		8862741	1					
ANR	8862797	IdentifierDeclStatement	const void * before = 0 ;	398:8:13276:13298	8862741	1	True				
ANR	8862798	IdentifierDecl	* before = 0		8862741	0					
ANR	8862799	IdentifierDeclType	const void *		8862741	0					
ANR	8862800	Identifier	before		8862741	1					
ANR	8862801	AssignmentExpression	* before = 0		8862741	2		=			
ANR	8862802	Identifier	before		8862741	0					
ANR	8862803	PrimaryExpression	0		8862741	1					
ANR	8862804	IdentifierDeclStatement	const void * after = 0 ;	399:8:13308:13329	8862741	2	True				
ANR	8862805	IdentifierDecl	* after = 0		8862741	0					
ANR	8862806	IdentifierDeclType	const void *		8862741	0					
ANR	8862807	Identifier	after		8862741	1					
ANR	8862808	AssignmentExpression	* after = 0		8862741	2		=			
ANR	8862809	Identifier	after		8862741	0					
ANR	8862810	PrimaryExpression	0		8862741	1					
ANR	8862811	Statement	define	400:2:13333:13338	8862741	3	True				
ANR	8862812	Statement	DO_RELOC	400:9:13340:13347	8862741	4	True				
ANR	8862813	Statement	(	400:17:13348:13348	8862741	5	True				
ANR	8862814	Statement	var	400:18:13349:13351	8862741	6	True				
ANR	8862815	Statement	","	400:21:13352:13352	8862741	7	True				
ANR	8862816	Statement	stat	400:23:13354:13357	8862741	8	True				
ANR	8862817	Statement	)	400:27:13358:13358	8862741	9	True				
ANR	8862818	IdentifierDeclStatement	BEGIN before = ( var ) ;	401:4:13365:13385	8862741	10	True				
ANR	8862819	IdentifierDecl	before = ( var )		8862741	0					
ANR	8862820	IdentifierDeclType	BEGIN		8862741	0					
ANR	8862821	Identifier	before		8862741	1					
ANR	8862822	AssignmentExpression	before = ( var )		8862741	2		=			
ANR	8862823	Identifier	var		8862741	0					
ANR	8862824	Identifier	var		8862741	1					
ANR	8862825	ExpressionStatement	stat	401:26:13387:13391	8862741	11	True				
ANR	8862826	Identifier	stat		8862741	0					
ANR	8862827	ExpressionStatement	after = ( var )	401:32:13393:13406	8862741	12	True				
ANR	8862828	AssignmentExpression	after = ( var )		8862741	0		=			
ANR	8862829	Identifier	after		8862741	0					
ANR	8862830	Identifier	var		8862741	1					
ANR	8862831	Statement	END	401:47:13408:13410	8862741	13	True				
ANR	8862832	Statement	define	402:2:13414:13419	8862741	14	True				
ANR	8862833	Statement	SET_RELOC	402:9:13421:13429	8862741	15	True				
ANR	8862834	Statement	(	402:18:13430:13430	8862741	16	True				
ANR	8862835	Statement	var	402:19:13431:13433	8862741	17	True				
ANR	8862836	Statement	","	402:22:13434:13434	8862741	18	True				
ANR	8862837	Statement	expr	402:24:13436:13439	8862741	19	True				
ANR	8862838	Statement	)	402:28:13440:13440	8862741	20	True				
ANR	8862839	IdentifierDeclStatement	BEGIN before = ( var ) ;	403:4:13447:13467	8862741	21	True				
ANR	8862840	IdentifierDecl	before = ( var )		8862741	0					
ANR	8862841	IdentifierDeclType	BEGIN		8862741	0					
ANR	8862842	Identifier	before		8862741	1					
ANR	8862843	AssignmentExpression	before = ( var )		8862741	2		=			
ANR	8862844	Identifier	var		8862741	0					
ANR	8862845	Identifier	var		8862741	1					
ANR	8862846	ExpressionStatement	after = ( var ) = ( expr )	403:26:13469:13491	8862741	22	True				
ANR	8862847	AssignmentExpression	after = ( var ) = ( expr )		8862741	0		=			
ANR	8862848	Identifier	after		8862741	0					
ANR	8862849	AssignmentExpression	( var ) = ( expr )		8862741	1		=			
ANR	8862850	Identifier	var		8862741	0					
ANR	8862851	Identifier	expr		8862741	1					
ANR	8862852	Statement	END	403:50:13493:13495	8862741	23	True				
ANR	8862853	IfStatement	if ( r_is_packed ( rp ) )		8862741	24					
ANR	8862854	Condition	r_is_packed ( rp )	409:12:13598:13612	8862741	0	True				
ANR	8862855	CallExpression	r_is_packed ( rp )		8862741	0					
ANR	8862856	Callee	r_is_packed		8862741	0					
ANR	8862857	Identifier	r_is_packed		8862741	0					
ANR	8862858	ArgumentList	rp		8862741	1					
ANR	8862859	Argument	rp		8862741	0					
ANR	8862860	Identifier	rp		8862741	0					
ANR	8862861	CompoundStatement		23:29:611:611	8862741	1					
ANR	8862862	ExpressionStatement	rp ++	410:12:13629:13633	8862741	0	True				
ANR	8862863	PostIncDecOperationExpression	rp ++		8862741	0					
ANR	8862864	Identifier	rp		8862741	0					
ANR	8862865	IncDec	++		8862741	1					
ANR	8862866	ContinueStatement	continue ;	411:12:13647:13655	8862741	1	True				
ANR	8862867	ExpressionStatement	pref = ( ref * ) rp	415:8:13798:13815	8862741	25	True				
ANR	8862868	AssignmentExpression	pref = ( ref * ) rp		8862741	0		=			
ANR	8862869	Identifier	pref		8862741	0					
ANR	8862870	CastExpression	( ref * ) rp		8862741	1					
ANR	8862871	CastTarget	ref *		8862741	0					
ANR	8862872	Identifier	rp		8862741	1					
ANR	8862873	ExpressionStatement	"if_debug3m ( '8' , gcst -> heap , ""  [8]relocating %s %d ref at 0x%lx\\n"" , ( r_has_attr ( pref , l_mark ) ? ""marked"" : ""unmarked"" ) , r_btype ( pref ) , ( ulong ) pref )"	416:8:13825:14011	8862741	26	True				
ANR	8862874	CallExpression	"if_debug3m ( '8' , gcst -> heap , ""  [8]relocating %s %d ref at 0x%lx\\n"" , ( r_has_attr ( pref , l_mark ) ? ""marked"" : ""unmarked"" ) , r_btype ( pref ) , ( ulong ) pref )"		8862741	0					
ANR	8862875	Callee	if_debug3m		8862741	0					
ANR	8862876	Identifier	if_debug3m		8862741	0					
ANR	8862877	ArgumentList	'8'		8862741	1					
ANR	8862878	Argument	'8'		8862741	0					
ANR	8862879	PrimaryExpression	'8'		8862741	0					
ANR	8862880	Argument	gcst -> heap		8862741	1					
ANR	8862881	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8862882	Identifier	gcst		8862741	0					
ANR	8862883	Identifier	heap		8862741	1					
ANR	8862884	Argument	"""  [8]relocating %s %d ref at 0x%lx\\n"""		8862741	2					
ANR	8862885	PrimaryExpression	"""  [8]relocating %s %d ref at 0x%lx\\n"""		8862741	0					
ANR	8862886	Argument	"r_has_attr ( pref , l_mark ) ? ""marked"" : ""unmarked"""		8862741	3					
ANR	8862887	ConditionalExpression	"r_has_attr ( pref , l_mark ) ? ""marked"" : ""unmarked"""		8862741	0					
ANR	8862888	Condition	"r_has_attr ( pref , l_mark )"		8862741	0					
ANR	8862889	CallExpression	"r_has_attr ( pref , l_mark )"		8862741	0					
ANR	8862890	Callee	r_has_attr		8862741	0					
ANR	8862891	Identifier	r_has_attr		8862741	0					
ANR	8862892	ArgumentList	pref		8862741	1					
ANR	8862893	Argument	pref		8862741	0					
ANR	8862894	Identifier	pref		8862741	0					
ANR	8862895	Argument	l_mark		8862741	1					
ANR	8862896	Identifier	l_mark		8862741	0					
ANR	8862897	PrimaryExpression	"""marked"""		8862741	1					
ANR	8862898	PrimaryExpression	"""unmarked"""		8862741	2					
ANR	8862899	Argument	r_btype ( pref )		8862741	4					
ANR	8862900	CallExpression	r_btype ( pref )		8862741	0					
ANR	8862901	Callee	r_btype		8862741	0					
ANR	8862902	Identifier	r_btype		8862741	0					
ANR	8862903	ArgumentList	pref		8862741	1					
ANR	8862904	Argument	pref		8862741	0					
ANR	8862905	Identifier	pref		8862741	0					
ANR	8862906	Argument	( ulong ) pref		8862741	5					
ANR	8862907	CastExpression	( ulong ) pref		8862741	0					
ANR	8862908	CastTarget	ulong		8862741	0					
ANR	8862909	Identifier	pref		8862741	1					
ANR	8862910	IfStatement	"if ( ( r_has_attr ( pref , l_mark ) || do_all ) && r_space ( pref ) >= min_trace )"		8862741	27					
ANR	8862911	Condition	"( r_has_attr ( pref , l_mark ) || do_all ) && r_space ( pref ) >= min_trace"	419:12:14025:14102	8862741	0	True				
ANR	8862912	AndExpression	"( r_has_attr ( pref , l_mark ) || do_all ) && r_space ( pref ) >= min_trace"		8862741	0		&&			
ANR	8862913	OrExpression	"r_has_attr ( pref , l_mark ) || do_all"		8862741	0		||			
ANR	8862914	CallExpression	"r_has_attr ( pref , l_mark )"		8862741	0					
ANR	8862915	Callee	r_has_attr		8862741	0					
ANR	8862916	Identifier	r_has_attr		8862741	0					
ANR	8862917	ArgumentList	pref		8862741	1					
ANR	8862918	Argument	pref		8862741	0					
ANR	8862919	Identifier	pref		8862741	0					
ANR	8862920	Argument	l_mark		8862741	1					
ANR	8862921	Identifier	l_mark		8862741	0					
ANR	8862922	Identifier	do_all		8862741	1					
ANR	8862923	RelationalExpression	r_space ( pref ) >= min_trace		8862741	1		>=			
ANR	8862924	CallExpression	r_space ( pref )		8862741	0					
ANR	8862925	Callee	r_space		8862741	0					
ANR	8862926	Identifier	r_space		8862741	0					
ANR	8862927	ArgumentList	pref		8862741	1					
ANR	8862928	Argument	pref		8862741	0					
ANR	8862929	Identifier	pref		8862741	0					
ANR	8862930	Identifier	min_trace		8862741	1					
ANR	8862931	CompoundStatement		35:14:1114:1114	8862741	1					
ANR	8862932	SwitchStatement	switch ( r_type ( pref ) )		8862741	0					
ANR	8862933	Condition	r_type ( pref )	422:20:14140:14151	8862741	0	True				
ANR	8862934	CallExpression	r_type ( pref )		8862741	0					
ANR	8862935	Callee	r_type		8862741	0					
ANR	8862936	Identifier	r_type		8862741	0					
ANR	8862937	ArgumentList	pref		8862741	1					
ANR	8862938	Argument	pref		8862741	0					
ANR	8862939	Identifier	pref		8862741	0					
ANR	8862940	CompoundStatement		36:34:1150:1150	8862741	1					
ANR	8862941	Label	case t_file :	424:16:14211:14222	8862741	0	True				
ANR	8862942	Identifier	t_file		8862741	0					
ANR	8862943	ExpressionStatement	"DO_RELOC ( pref -> value . pfile , RELOC_VAR ( pref -> value . pfile ) )"	425:20:14244:14301	8862741	1	True				
ANR	8862944	CallExpression	"DO_RELOC ( pref -> value . pfile , RELOC_VAR ( pref -> value . pfile ) )"		8862741	0					
ANR	8862945	Callee	DO_RELOC		8862741	0					
ANR	8862946	Identifier	DO_RELOC		8862741	0					
ANR	8862947	ArgumentList	pref -> value . pfile		8862741	1					
ANR	8862948	Argument	pref -> value . pfile		8862741	0					
ANR	8862949	MemberAccess	pref -> value . pfile		8862741	0					
ANR	8862950	PtrMemberAccess	pref -> value		8862741	0					
ANR	8862951	Identifier	pref		8862741	0					
ANR	8862952	Identifier	value		8862741	1					
ANR	8862953	Identifier	pfile		8862741	1					
ANR	8862954	Argument	RELOC_VAR ( pref -> value . pfile )		8862741	1					
ANR	8862955	CallExpression	RELOC_VAR ( pref -> value . pfile )		8862741	0					
ANR	8862956	Callee	RELOC_VAR		8862741	0					
ANR	8862957	Identifier	RELOC_VAR		8862741	0					
ANR	8862958	ArgumentList	pref -> value . pfile		8862741	1					
ANR	8862959	Argument	pref -> value . pfile		8862741	0					
ANR	8862960	MemberAccess	pref -> value . pfile		8862741	0					
ANR	8862961	PtrMemberAccess	pref -> value		8862741	0					
ANR	8862962	Identifier	pref		8862741	0					
ANR	8862963	Identifier	value		8862741	1					
ANR	8862964	Identifier	pfile		8862741	1					
ANR	8862965	BreakStatement	break ;	426:20:14323:14328	8862741	2	True				
ANR	8862966	Label	case t_device :	427:16:14346:14359	8862741	3	True				
ANR	8862967	Identifier	t_device		8862741	0					
ANR	8862968	ExpressionStatement	"DO_RELOC ( pref -> value . pdevice , RELOC_VAR ( pref -> value . pdevice ) )"	428:20:14381:14471	8862741	4	True				
ANR	8862969	CallExpression	"DO_RELOC ( pref -> value . pdevice , RELOC_VAR ( pref -> value . pdevice ) )"		8862741	0					
ANR	8862970	Callee	DO_RELOC		8862741	0					
ANR	8862971	Identifier	DO_RELOC		8862741	0					
ANR	8862972	ArgumentList	pref -> value . pdevice		8862741	1					
ANR	8862973	Argument	pref -> value . pdevice		8862741	0					
ANR	8862974	MemberAccess	pref -> value . pdevice		8862741	0					
ANR	8862975	PtrMemberAccess	pref -> value		8862741	0					
ANR	8862976	Identifier	pref		8862741	0					
ANR	8862977	Identifier	value		8862741	1					
ANR	8862978	Identifier	pdevice		8862741	1					
ANR	8862979	Argument	RELOC_VAR ( pref -> value . pdevice )		8862741	1					
ANR	8862980	CallExpression	RELOC_VAR ( pref -> value . pdevice )		8862741	0					
ANR	8862981	Callee	RELOC_VAR		8862741	0					
ANR	8862982	Identifier	RELOC_VAR		8862741	0					
ANR	8862983	ArgumentList	pref -> value . pdevice		8862741	1					
ANR	8862984	Argument	pref -> value . pdevice		8862741	0					
ANR	8862985	MemberAccess	pref -> value . pdevice		8862741	0					
ANR	8862986	PtrMemberAccess	pref -> value		8862741	0					
ANR	8862987	Identifier	pref		8862741	0					
ANR	8862988	Identifier	value		8862741	1					
ANR	8862989	Identifier	pdevice		8862741	1					
ANR	8862990	BreakStatement	break ;	430:20:14493:14498	8862741	5	True				
ANR	8862991	Label	case t_fontID :	431:16:14516:14529	8862741	6	True				
ANR	8862992	Identifier	t_fontID		8862741	0					
ANR	8862993	Label	case t_struct :	432:16:14547:14560	8862741	7	True				
ANR	8862994	Identifier	t_struct		8862741	0					
ANR	8862995	Label	case t_astruct :	433:16:14578:14592	8862741	8	True				
ANR	8862996	Identifier	t_astruct		8862741	0					
ANR	8862997	ExpressionStatement	"DO_RELOC ( pref -> value . pstruct , RELOC_VAR ( pref -> value . pstruct ) )"	434:20:14614:14704	8862741	9	True				
ANR	8862998	CallExpression	"DO_RELOC ( pref -> value . pstruct , RELOC_VAR ( pref -> value . pstruct ) )"		8862741	0					
ANR	8862999	Callee	DO_RELOC		8862741	0					
ANR	8863000	Identifier	DO_RELOC		8862741	0					
ANR	8863001	ArgumentList	pref -> value . pstruct		8862741	1					
ANR	8863002	Argument	pref -> value . pstruct		8862741	0					
ANR	8863003	MemberAccess	pref -> value . pstruct		8862741	0					
ANR	8863004	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863005	Identifier	pref		8862741	0					
ANR	8863006	Identifier	value		8862741	1					
ANR	8863007	Identifier	pstruct		8862741	1					
ANR	8863008	Argument	RELOC_VAR ( pref -> value . pstruct )		8862741	1					
ANR	8863009	CallExpression	RELOC_VAR ( pref -> value . pstruct )		8862741	0					
ANR	8863010	Callee	RELOC_VAR		8862741	0					
ANR	8863011	Identifier	RELOC_VAR		8862741	0					
ANR	8863012	ArgumentList	pref -> value . pstruct		8862741	1					
ANR	8863013	Argument	pref -> value . pstruct		8862741	0					
ANR	8863014	MemberAccess	pref -> value . pstruct		8862741	0					
ANR	8863015	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863016	Identifier	pref		8862741	0					
ANR	8863017	Identifier	value		8862741	1					
ANR	8863018	Identifier	pstruct		8862741	1					
ANR	8863019	BreakStatement	break ;	436:20:14726:14731	8862741	10	True				
ANR	8863020	Label	case t_dictionary :	438:16:14804:14821	8862741	11	True				
ANR	8863021	Identifier	t_dictionary		8862741	0					
ANR	8863022	ExpressionStatement	"rputc ( gcst -> heap , 'd' )"	439:20:14843:14865	8862741	12	True				
ANR	8863023	CallExpression	"rputc ( gcst -> heap , 'd' )"		8862741	0					
ANR	8863024	Callee	rputc		8862741	0					
ANR	8863025	Identifier	rputc		8862741	0					
ANR	8863026	ArgumentList	gcst -> heap		8862741	1					
ANR	8863027	Argument	gcst -> heap		8862741	0					
ANR	8863028	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8863029	Identifier	gcst		8862741	0					
ANR	8863030	Identifier	heap		8862741	1					
ANR	8863031	Argument	'd'		8862741	1					
ANR	8863032	PrimaryExpression	'd'		8862741	0					
ANR	8863033	ExpressionStatement	"SET_RELOC ( pref -> value . pdict , ( dict * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . pdict , gcst ) )"	440:20:14887:15011	8862741	13	True				
ANR	8863034	CallExpression	"SET_RELOC ( pref -> value . pdict , ( dict * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . pdict , gcst ) )"		8862741	0					
ANR	8863035	Callee	SET_RELOC		8862741	0					
ANR	8863036	Identifier	SET_RELOC		8862741	0					
ANR	8863037	ArgumentList	pref -> value . pdict		8862741	1					
ANR	8863038	Argument	pref -> value . pdict		8862741	0					
ANR	8863039	MemberAccess	pref -> value . pdict		8862741	0					
ANR	8863040	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863041	Identifier	pref		8862741	0					
ANR	8863042	Identifier	value		8862741	1					
ANR	8863043	Identifier	pdict		8862741	1					
ANR	8863044	Argument	"( dict * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . pdict , gcst )"		8862741	1					
ANR	8863045	CastExpression	"( dict * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . pdict , gcst )"		8862741	0					
ANR	8863046	CastTarget	dict *		8862741	0					
ANR	8863047	CallExpression	"igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . pdict , gcst )"		8862741	1					
ANR	8863048	Callee	igc_reloc_ref_ptr		8862741	0					
ANR	8863049	Identifier	igc_reloc_ref_ptr		8862741	0					
ANR	8863050	ArgumentList	( ref_packed * ) pref -> value . pdict		8862741	1					
ANR	8863051	Argument	( ref_packed * ) pref -> value . pdict		8862741	0					
ANR	8863052	CastExpression	( ref_packed * ) pref -> value . pdict		8862741	0					
ANR	8863053	CastTarget	ref_packed *		8862741	0					
ANR	8863054	MemberAccess	pref -> value . pdict		8862741	1					
ANR	8863055	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863056	Identifier	pref		8862741	0					
ANR	8863057	Identifier	value		8862741	1					
ANR	8863058	Identifier	pdict		8862741	1					
ANR	8863059	Argument	gcst		8862741	1					
ANR	8863060	Identifier	gcst		8862741	0					
ANR	8863061	BreakStatement	break ;	442:20:15033:15038	8862741	14	True				
ANR	8863062	Label	case t_array :	443:16:15056:15068	8862741	15	True				
ANR	8863063	Identifier	t_array		8862741	0					
ANR	8863064	CompoundStatement		59:24:2112:2136	8862741	16					
ANR	8863065	IdentifierDeclStatement	uint size = r_size ( pref ) ;	445:24:15116:15140	8862741	0	True				
ANR	8863066	IdentifierDecl	size = r_size ( pref )		8862741	0					
ANR	8863067	IdentifierDeclType	uint		8862741	0					
ANR	8863068	Identifier	size		8862741	1					
ANR	8863069	AssignmentExpression	size = r_size ( pref )		8862741	2		=			
ANR	8863070	Identifier	size		8862741	0					
ANR	8863071	CallExpression	r_size ( pref )		8862741	1					
ANR	8863072	Callee	r_size		8862741	0					
ANR	8863073	Identifier	r_size		8862741	0					
ANR	8863074	ArgumentList	pref		8862741	1					
ANR	8863075	Argument	pref		8862741	0					
ANR	8863076	Identifier	pref		8862741	0					
ANR	8863077	IfStatement	if ( size != 0 )		8862741	1					
ANR	8863078	Condition	size != 0	447:28:15171:15179	8862741	0	True				
ANR	8863079	EqualityExpression	size != 0		8862741	0		!=			
ANR	8863080	Identifier	size		8862741	0					
ANR	8863081	PrimaryExpression	0		8862741	1					
ANR	8863082	CompoundStatement		61:39:2178:2178	8862741	1					
ANR	8863083	IfStatement	if ( size < max_size_st_refs / sizeof ( ref ) )		8862741	0					
ANR	8863084	Condition	size < max_size_st_refs / sizeof ( ref )	458:32:15802:15838	8862741	0	True				
ANR	8863085	RelationalExpression	size < max_size_st_refs / sizeof ( ref )		8862741	0		<			
ANR	8863086	Identifier	size		8862741	0					
ANR	8863087	MultiplicativeExpression	max_size_st_refs / sizeof ( ref )		8862741	1		/			
ANR	8863088	Identifier	max_size_st_refs		8862741	0					
ANR	8863089	SizeofExpression	sizeof ( ref )		8862741	1					
ANR	8863090	Sizeof	sizeof		8862741	0					
ANR	8863091	SizeofOperand	ref		8862741	1					
ANR	8863092	CompoundStatement		72:71:2837:2837	8862741	1					
ANR	8863093	ExpressionStatement	"rputc ( gcst -> heap , 'a' )"	459:32:15875:15897	8862741	0	True				
ANR	8863094	CallExpression	"rputc ( gcst -> heap , 'a' )"		8862741	0					
ANR	8863095	Callee	rputc		8862741	0					
ANR	8863096	Identifier	rputc		8862741	0					
ANR	8863097	ArgumentList	gcst -> heap		8862741	1					
ANR	8863098	Argument	gcst -> heap		8862741	0					
ANR	8863099	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8863100	Identifier	gcst		8862741	0					
ANR	8863101	Identifier	heap		8862741	1					
ANR	8863102	Argument	'a'		8862741	1					
ANR	8863103	PrimaryExpression	'a'		8862741	0					
ANR	8863104	ExpressionStatement	"SET_RELOC ( pref -> value . refs , ( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . refs , gcst ) )"	460:32:15931:16098	8862741	1	True				
ANR	8863105	CallExpression	"SET_RELOC ( pref -> value . refs , ( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . refs , gcst ) )"		8862741	0					
ANR	8863106	Callee	SET_RELOC		8862741	0					
ANR	8863107	Identifier	SET_RELOC		8862741	0					
ANR	8863108	ArgumentList	pref -> value . refs		8862741	1					
ANR	8863109	Argument	pref -> value . refs		8862741	0					
ANR	8863110	MemberAccess	pref -> value . refs		8862741	0					
ANR	8863111	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863112	Identifier	pref		8862741	0					
ANR	8863113	Identifier	value		8862741	1					
ANR	8863114	Identifier	refs		8862741	1					
ANR	8863115	Argument	"( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . refs , gcst )"		8862741	1					
ANR	8863116	CastExpression	"( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . refs , gcst )"		8862741	0					
ANR	8863117	CastTarget	ref *		8862741	0					
ANR	8863118	CallExpression	"igc_reloc_ref_ptr ( ( ref_packed * ) pref -> value . refs , gcst )"		8862741	1					
ANR	8863119	Callee	igc_reloc_ref_ptr		8862741	0					
ANR	8863120	Identifier	igc_reloc_ref_ptr		8862741	0					
ANR	8863121	ArgumentList	( ref_packed * ) pref -> value . refs		8862741	1					
ANR	8863122	Argument	( ref_packed * ) pref -> value . refs		8862741	0					
ANR	8863123	CastExpression	( ref_packed * ) pref -> value . refs		8862741	0					
ANR	8863124	CastTarget	ref_packed *		8862741	0					
ANR	8863125	MemberAccess	pref -> value . refs		8862741	1					
ANR	8863126	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863127	Identifier	pref		8862741	0					
ANR	8863128	Identifier	value		8862741	1					
ANR	8863129	Identifier	refs		8862741	1					
ANR	8863130	Argument	gcst		8862741	1					
ANR	8863131	Identifier	gcst		8862741	0					
ANR	8863132	ElseStatement	else		8862741	0					
ANR	8863133	CompoundStatement		77:35:3131:3131	8862741	0					
ANR	8863134	ExpressionStatement	"rputc ( gcst -> heap , 'A' )"	464:32:16169:16191	8862741	0	True				
ANR	8863135	CallExpression	"rputc ( gcst -> heap , 'A' )"		8862741	0					
ANR	8863136	Callee	rputc		8862741	0					
ANR	8863137	Identifier	rputc		8862741	0					
ANR	8863138	ArgumentList	gcst -> heap		8862741	1					
ANR	8863139	Argument	gcst -> heap		8862741	0					
ANR	8863140	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8863141	Identifier	gcst		8862741	0					
ANR	8863142	Identifier	heap		8862741	1					
ANR	8863143	Argument	'A'		8862741	1					
ANR	8863144	PrimaryExpression	'A'		8862741	0					
ANR	8863145	ExpressionStatement	-- size	469:32:16425:16431	8862741	1	True				
ANR	8863146	UnaryExpression	-- size		8862741	0					
ANR	8863147	IncDec	--		8862741	0					
ANR	8863148	Identifier	size		8862741	1					
ANR	8863149	ExpressionStatement	"SET_RELOC ( pref -> value . refs , ( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) ( pref -> value . refs + size ) , gcst ) - size )"	470:32:16465:16709	8862741	2	True				
ANR	8863150	CallExpression	"SET_RELOC ( pref -> value . refs , ( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) ( pref -> value . refs + size ) , gcst ) - size )"		8862741	0					
ANR	8863151	Callee	SET_RELOC		8862741	0					
ANR	8863152	Identifier	SET_RELOC		8862741	0					
ANR	8863153	ArgumentList	pref -> value . refs		8862741	1					
ANR	8863154	Argument	pref -> value . refs		8862741	0					
ANR	8863155	MemberAccess	pref -> value . refs		8862741	0					
ANR	8863156	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863157	Identifier	pref		8862741	0					
ANR	8863158	Identifier	value		8862741	1					
ANR	8863159	Identifier	refs		8862741	1					
ANR	8863160	Argument	"( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) ( pref -> value . refs + size ) , gcst ) - size"		8862741	1					
ANR	8863161	AdditiveExpression	"( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) ( pref -> value . refs + size ) , gcst ) - size"		8862741	0		-			
ANR	8863162	CastExpression	"( ref * ) igc_reloc_ref_ptr ( ( ref_packed * ) ( pref -> value . refs + size ) , gcst )"		8862741	0					
ANR	8863163	CastTarget	ref *		8862741	0					
ANR	8863164	CallExpression	"igc_reloc_ref_ptr ( ( ref_packed * ) ( pref -> value . refs + size ) , gcst )"		8862741	1					
ANR	8863165	Callee	igc_reloc_ref_ptr		8862741	0					
ANR	8863166	Identifier	igc_reloc_ref_ptr		8862741	0					
ANR	8863167	ArgumentList	( ref_packed * ) ( pref -> value . refs + size )		8862741	1					
ANR	8863168	Argument	( ref_packed * ) ( pref -> value . refs + size )		8862741	0					
ANR	8863169	CastExpression	( ref_packed * ) ( pref -> value . refs + size )		8862741	0					
ANR	8863170	CastTarget	ref_packed *		8862741	0					
ANR	8863171	AdditiveExpression	pref -> value . refs + size		8862741	1		+			
ANR	8863172	MemberAccess	pref -> value . refs		8862741	0					
ANR	8863173	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863174	Identifier	pref		8862741	0					
ANR	8863175	Identifier	value		8862741	1					
ANR	8863176	Identifier	refs		8862741	1					
ANR	8863177	Identifier	size		8862741	1					
ANR	8863178	Argument	gcst		8862741	1					
ANR	8863179	Identifier	gcst		8862741	0					
ANR	8863180	Identifier	size		8862741	1					
ANR	8863181	BreakStatement	break ;	477:20:16809:16814	8862741	17	True				
ANR	8863182	Label	case t_mixedarray :	478:16:16832:16849	8862741	18	True				
ANR	8863183	Identifier	t_mixedarray		8862741	0					
ANR	8863184	IfStatement	if ( r_size ( pref ) != 0 )		8862741	19					
ANR	8863185	Condition	r_size ( pref ) != 0	479:24:16875:16891	8862741	0	True				
ANR	8863186	EqualityExpression	r_size ( pref ) != 0		8862741	0		!=			
ANR	8863187	CallExpression	r_size ( pref )		8862741	0					
ANR	8863188	Callee	r_size		8862741	0					
ANR	8863189	Identifier	r_size		8862741	0					
ANR	8863190	ArgumentList	pref		8862741	1					
ANR	8863191	Argument	pref		8862741	0					
ANR	8863192	Identifier	pref		8862741	0					
ANR	8863193	PrimaryExpression	0		8862741	1					
ANR	8863194	CompoundStatement		93:43:3890:3890	8862741	1					
ANR	8863195	ExpressionStatement	"rputc ( gcst -> heap , 'm' )"	480:24:16951:16973	8862741	0	True				
ANR	8863196	CallExpression	"rputc ( gcst -> heap , 'm' )"		8862741	0					
ANR	8863197	Callee	rputc		8862741	0					
ANR	8863198	Identifier	rputc		8862741	0					
ANR	8863199	ArgumentList	gcst -> heap		8862741	1					
ANR	8863200	Argument	gcst -> heap		8862741	0					
ANR	8863201	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8863202	Identifier	gcst		8862741	0					
ANR	8863203	Identifier	heap		8862741	1					
ANR	8863204	Argument	'm'		8862741	1					
ANR	8863205	PrimaryExpression	'm'		8862741	0					
ANR	8863206	ExpressionStatement	"SET_RELOC ( pref -> value . packed , igc_reloc_ref_ptr ( pref -> value . packed , gcst ) )"	481:24:16999:17107	8862741	1	True				
ANR	8863207	CallExpression	"SET_RELOC ( pref -> value . packed , igc_reloc_ref_ptr ( pref -> value . packed , gcst ) )"		8862741	0					
ANR	8863208	Callee	SET_RELOC		8862741	0					
ANR	8863209	Identifier	SET_RELOC		8862741	0					
ANR	8863210	ArgumentList	pref -> value . packed		8862741	1					
ANR	8863211	Argument	pref -> value . packed		8862741	0					
ANR	8863212	MemberAccess	pref -> value . packed		8862741	0					
ANR	8863213	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863214	Identifier	pref		8862741	0					
ANR	8863215	Identifier	value		8862741	1					
ANR	8863216	Identifier	packed		8862741	1					
ANR	8863217	Argument	"igc_reloc_ref_ptr ( pref -> value . packed , gcst )"		8862741	1					
ANR	8863218	CallExpression	"igc_reloc_ref_ptr ( pref -> value . packed , gcst )"		8862741	0					
ANR	8863219	Callee	igc_reloc_ref_ptr		8862741	0					
ANR	8863220	Identifier	igc_reloc_ref_ptr		8862741	0					
ANR	8863221	ArgumentList	pref -> value . packed		8862741	1					
ANR	8863222	Argument	pref -> value . packed		8862741	0					
ANR	8863223	MemberAccess	pref -> value . packed		8862741	0					
ANR	8863224	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863225	Identifier	pref		8862741	0					
ANR	8863226	Identifier	value		8862741	1					
ANR	8863227	Identifier	packed		8862741	1					
ANR	8863228	Argument	gcst		8862741	1					
ANR	8863229	Identifier	gcst		8862741	0					
ANR	8863230	BreakStatement	break ;	484:20:17151:17156	8862741	20	True				
ANR	8863231	Label	case t_shortarray :	485:16:17174:17191	8862741	21	True				
ANR	8863232	Identifier	t_shortarray		8862741	0					
ANR	8863233	CompoundStatement		101:24:4235:4259	8862741	22					
ANR	8863234	IdentifierDeclStatement	uint size = r_size ( pref ) ;	487:24:17239:17263	8862741	0	True				
ANR	8863235	IdentifierDecl	size = r_size ( pref )		8862741	0					
ANR	8863236	IdentifierDeclType	uint		8862741	0					
ANR	8863237	Identifier	size		8862741	1					
ANR	8863238	AssignmentExpression	size = r_size ( pref )		8862741	2		=			
ANR	8863239	Identifier	size		8862741	0					
ANR	8863240	CallExpression	r_size ( pref )		8862741	1					
ANR	8863241	Callee	r_size		8862741	0					
ANR	8863242	Identifier	r_size		8862741	0					
ANR	8863243	ArgumentList	pref		8862741	1					
ANR	8863244	Argument	pref		8862741	0					
ANR	8863245	Identifier	pref		8862741	0					
ANR	8863246	IfStatement	if ( size != 0 )		8862741	1					
ANR	8863247	Condition	size != 0	497:28:17750:17758	8862741	0	True				
ANR	8863248	EqualityExpression	size != 0		8862741	0		!=			
ANR	8863249	Identifier	size		8862741	0					
ANR	8863250	PrimaryExpression	0		8862741	1					
ANR	8863251	CompoundStatement		111:39:4757:4757	8862741	1					
ANR	8863252	ExpressionStatement	"rputc ( gcst -> heap , 's' )"	498:28:17822:17844	8862741	0	True				
ANR	8863253	CallExpression	"rputc ( gcst -> heap , 's' )"		8862741	0					
ANR	8863254	Callee	rputc		8862741	0					
ANR	8863255	Identifier	rputc		8862741	0					
ANR	8863256	ArgumentList	gcst -> heap		8862741	1					
ANR	8863257	Argument	gcst -> heap		8862741	0					
ANR	8863258	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8863259	Identifier	gcst		8862741	0					
ANR	8863260	Identifier	heap		8862741	1					
ANR	8863261	Argument	's'		8862741	1					
ANR	8863262	PrimaryExpression	's'		8862741	0					
ANR	8863263	ExpressionStatement	-- size	508:28:18452:18458	8862741	1	True				
ANR	8863264	UnaryExpression	-- size		8862741	0					
ANR	8863265	IncDec	--		8862741	0					
ANR	8863266	Identifier	size		8862741	1					
ANR	8863267	ExpressionStatement	"SET_RELOC ( pref -> value . packed , igc_reloc_ref_ptr ( pref -> value . packed + size , gcst ) - size )"	509:28:18488:18658	8862741	2	True				
ANR	8863268	CallExpression	"SET_RELOC ( pref -> value . packed , igc_reloc_ref_ptr ( pref -> value . packed + size , gcst ) - size )"		8862741	0					
ANR	8863269	Callee	SET_RELOC		8862741	0					
ANR	8863270	Identifier	SET_RELOC		8862741	0					
ANR	8863271	ArgumentList	pref -> value . packed		8862741	1					
ANR	8863272	Argument	pref -> value . packed		8862741	0					
ANR	8863273	MemberAccess	pref -> value . packed		8862741	0					
ANR	8863274	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863275	Identifier	pref		8862741	0					
ANR	8863276	Identifier	value		8862741	1					
ANR	8863277	Identifier	packed		8862741	1					
ANR	8863278	Argument	"igc_reloc_ref_ptr ( pref -> value . packed + size , gcst ) - size"		8862741	1					
ANR	8863279	AdditiveExpression	"igc_reloc_ref_ptr ( pref -> value . packed + size , gcst ) - size"		8862741	0		-			
ANR	8863280	CallExpression	"igc_reloc_ref_ptr ( pref -> value . packed + size , gcst )"		8862741	0					
ANR	8863281	Callee	igc_reloc_ref_ptr		8862741	0					
ANR	8863282	Identifier	igc_reloc_ref_ptr		8862741	0					
ANR	8863283	ArgumentList	pref -> value . packed + size		8862741	1					
ANR	8863284	Argument	pref -> value . packed + size		8862741	0					
ANR	8863285	AdditiveExpression	pref -> value . packed + size		8862741	0		+			
ANR	8863286	MemberAccess	pref -> value . packed		8862741	0					
ANR	8863287	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863288	Identifier	pref		8862741	0					
ANR	8863289	Identifier	value		8862741	1					
ANR	8863290	Identifier	packed		8862741	1					
ANR	8863291	Identifier	size		8862741	1					
ANR	8863292	Argument	gcst		8862741	1					
ANR	8863293	Identifier	gcst		8862741	0					
ANR	8863294	Identifier	size		8862741	1					
ANR	8863295	BreakStatement	break ;	514:20:18728:18733	8862741	23	True				
ANR	8863296	Label	case t_name :	515:16:18751:18762	8862741	24	True				
ANR	8863297	Identifier	t_name		8862741	0					
ANR	8863298	CompoundStatement		132:24:5875:5903	8862741	25					
ANR	8863299	IdentifierDeclStatement	"void * psub = name_ref_sub_table ( cmem , pref ) ;"	517:24:18810:18853	8862741	0	True				
ANR	8863300	IdentifierDecl	"* psub = name_ref_sub_table ( cmem , pref )"		8862741	0					
ANR	8863301	IdentifierDeclType	void *		8862741	0					
ANR	8863302	Identifier	psub		8862741	1					
ANR	8863303	AssignmentExpression	"* psub = name_ref_sub_table ( cmem , pref )"		8862741	2		=			
ANR	8863304	Identifier	psub		8862741	0					
ANR	8863305	CallExpression	"name_ref_sub_table ( cmem , pref )"		8862741	1					
ANR	8863306	Callee	name_ref_sub_table		8862741	0					
ANR	8863307	Identifier	name_ref_sub_table		8862741	0					
ANR	8863308	ArgumentList	cmem		8862741	1					
ANR	8863309	Argument	cmem		8862741	0					
ANR	8863310	Identifier	cmem		8862741	0					
ANR	8863311	Argument	pref		8862741	1					
ANR	8863312	Identifier	pref		8862741	0					
ANR	8863313	IdentifierDeclStatement	void * rsub = RELOC_OBJ ( psub ) ;	518:24:18879:18907	8862741	1	True				
ANR	8863314	IdentifierDecl	* rsub = RELOC_OBJ ( psub )		8862741	0					
ANR	8863315	IdentifierDeclType	void *		8862741	0					
ANR	8863316	Identifier	rsub		8862741	1					
ANR	8863317	AssignmentExpression	* rsub = RELOC_OBJ ( psub )		8862741	2		=			
ANR	8863318	Identifier	rsub		8862741	0					
ANR	8863319	CallExpression	RELOC_OBJ ( psub )		8862741	1					
ANR	8863320	Callee	RELOC_OBJ		8862741	0					
ANR	8863321	Identifier	RELOC_OBJ		8862741	0					
ANR	8863322	ArgumentList	psub		8862741	1					
ANR	8863323	Argument	psub		8862741	0					
ANR	8863324	Identifier	psub		8862741	0					
ANR	8863325	ExpressionStatement	"SET_RELOC ( pref -> value . pname , ( name * ) ( ( char * ) rsub + ( ( char * ) pref -> value . pname - ( char * ) psub ) ) )"	520:24:18954:19171	8862741	2	True				
ANR	8863326	CallExpression	"SET_RELOC ( pref -> value . pname , ( name * ) ( ( char * ) rsub + ( ( char * ) pref -> value . pname - ( char * ) psub ) ) )"		8862741	0					
ANR	8863327	Callee	SET_RELOC		8862741	0					
ANR	8863328	Identifier	SET_RELOC		8862741	0					
ANR	8863329	ArgumentList	pref -> value . pname		8862741	1					
ANR	8863330	Argument	pref -> value . pname		8862741	0					
ANR	8863331	MemberAccess	pref -> value . pname		8862741	0					
ANR	8863332	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863333	Identifier	pref		8862741	0					
ANR	8863334	Identifier	value		8862741	1					
ANR	8863335	Identifier	pname		8862741	1					
ANR	8863336	Argument	( name * ) ( ( char * ) rsub + ( ( char * ) pref -> value . pname - ( char * ) psub ) )		8862741	1					
ANR	8863337	CastExpression	( name * ) ( ( char * ) rsub + ( ( char * ) pref -> value . pname - ( char * ) psub ) )		8862741	0					
ANR	8863338	CastTarget	name *		8862741	0					
ANR	8863339	AdditiveExpression	( char * ) rsub + ( ( char * ) pref -> value . pname - ( char * ) psub )		8862741	1		+			
ANR	8863340	CastExpression	( char * ) rsub		8862741	0					
ANR	8863341	CastTarget	char *		8862741	0					
ANR	8863342	Identifier	rsub		8862741	1					
ANR	8863343	AdditiveExpression	( char * ) pref -> value . pname - ( char * ) psub		8862741	1		-			
ANR	8863344	CastExpression	( char * ) pref -> value . pname		8862741	0					
ANR	8863345	CastTarget	char *		8862741	0					
ANR	8863346	MemberAccess	pref -> value . pname		8862741	1					
ANR	8863347	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863348	Identifier	pref		8862741	0					
ANR	8863349	Identifier	value		8862741	1					
ANR	8863350	Identifier	pname		8862741	1					
ANR	8863351	CastExpression	( char * ) psub		8862741	1					
ANR	8863352	CastTarget	char *		8862741	0					
ANR	8863353	Identifier	psub		8862741	1					
ANR	8863354	BreakStatement	break ;	524:22:19195:19200	8862741	26	True				
ANR	8863355	Label	case t_string :	525:16:19218:19231	8862741	27	True				
ANR	8863356	Identifier	t_string		8862741	0					
ANR	8863357	CompoundStatement		141:24:6275:6288	8862741	28					
ANR	8863358	IdentifierDeclStatement	gs_string str ;	527:24:19279:19292	8862741	0	True				
ANR	8863359	IdentifierDecl	str		8862741	0					
ANR	8863360	IdentifierDeclType	gs_string		8862741	0					
ANR	8863361	Identifier	str		8862741	1					
ANR	8863362	ExpressionStatement	str . data = pref -> value . bytes	529:24:19319:19347	8862741	1	True				
ANR	8863363	AssignmentExpression	str . data = pref -> value . bytes		8862741	0		=			
ANR	8863364	MemberAccess	str . data		8862741	0					
ANR	8863365	Identifier	str		8862741	0					
ANR	8863366	Identifier	data		8862741	1					
ANR	8863367	MemberAccess	pref -> value . bytes		8862741	1					
ANR	8863368	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863369	Identifier	pref		8862741	0					
ANR	8863370	Identifier	value		8862741	1					
ANR	8863371	Identifier	bytes		8862741	1					
ANR	8863372	ExpressionStatement	str . size = r_size ( pref )	530:24:19373:19396	8862741	2	True				
ANR	8863373	AssignmentExpression	str . size = r_size ( pref )		8862741	0		=			
ANR	8863374	MemberAccess	str . size		8862741	0					
ANR	8863375	Identifier	str		8862741	0					
ANR	8863376	Identifier	size		8862741	1					
ANR	8863377	CallExpression	r_size ( pref )		8862741	1					
ANR	8863378	Callee	r_size		8862741	0					
ANR	8863379	Identifier	r_size		8862741	0					
ANR	8863380	ArgumentList	pref		8862741	1					
ANR	8863381	Argument	pref		8862741	0					
ANR	8863382	Identifier	pref		8862741	0					
ANR	8863383	ExpressionStatement	"DO_RELOC ( str . data , RELOC_STRING_VAR ( str ) )"	532:24:19423:19464	8862741	3	True				
ANR	8863384	CallExpression	"DO_RELOC ( str . data , RELOC_STRING_VAR ( str ) )"		8862741	0					
ANR	8863385	Callee	DO_RELOC		8862741	0					
ANR	8863386	Identifier	DO_RELOC		8862741	0					
ANR	8863387	ArgumentList	str . data		8862741	1					
ANR	8863388	Argument	str . data		8862741	0					
ANR	8863389	MemberAccess	str . data		8862741	0					
ANR	8863390	Identifier	str		8862741	0					
ANR	8863391	Identifier	data		8862741	1					
ANR	8863392	Argument	RELOC_STRING_VAR ( str )		8862741	1					
ANR	8863393	CallExpression	RELOC_STRING_VAR ( str )		8862741	0					
ANR	8863394	Callee	RELOC_STRING_VAR		8862741	0					
ANR	8863395	Identifier	RELOC_STRING_VAR		8862741	0					
ANR	8863396	ArgumentList	str		8862741	1					
ANR	8863397	Argument	str		8862741	0					
ANR	8863398	Identifier	str		8862741	0					
ANR	8863399	ExpressionStatement	pref -> value . bytes = str . data	533:24:19490:19518	8862741	4	True				
ANR	8863400	AssignmentExpression	pref -> value . bytes = str . data		8862741	0		=			
ANR	8863401	MemberAccess	pref -> value . bytes		8862741	0					
ANR	8863402	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863403	Identifier	pref		8862741	0					
ANR	8863404	Identifier	value		8862741	1					
ANR	8863405	Identifier	bytes		8862741	1					
ANR	8863406	MemberAccess	str . data		8862741	1					
ANR	8863407	Identifier	str		8862741	0					
ANR	8863408	Identifier	data		8862741	1					
ANR	8863409	BreakStatement	break ;	535:20:19562:19567	8862741	29	True				
ANR	8863410	Label	case t_oparray :	536:16:19585:19599	8862741	30	True				
ANR	8863411	Identifier	t_oparray		8862741	0					
ANR	8863412	ExpressionStatement	"rputc ( gcst -> heap , 'o' )"	537:20:19621:19643	8862741	31	True				
ANR	8863413	CallExpression	"rputc ( gcst -> heap , 'o' )"		8862741	0					
ANR	8863414	Callee	rputc		8862741	0					
ANR	8863415	Identifier	rputc		8862741	0					
ANR	8863416	ArgumentList	gcst -> heap		8862741	1					
ANR	8863417	Argument	gcst -> heap		8862741	0					
ANR	8863418	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8863419	Identifier	gcst		8862741	0					
ANR	8863420	Identifier	heap		8862741	1					
ANR	8863421	Argument	'o'		8862741	1					
ANR	8863422	PrimaryExpression	'o'		8862741	0					
ANR	8863423	ExpressionStatement	"SET_RELOC ( pref -> value . const_refs , ( const ref * ) igc_reloc_ref_ptr ( ( const ref_packed * ) pref -> value . const_refs , gcst ) )"	538:20:19665:19804	8862741	32	True				
ANR	8863424	CallExpression	"SET_RELOC ( pref -> value . const_refs , ( const ref * ) igc_reloc_ref_ptr ( ( const ref_packed * ) pref -> value . const_refs , gcst ) )"		8862741	0					
ANR	8863425	Callee	SET_RELOC		8862741	0					
ANR	8863426	Identifier	SET_RELOC		8862741	0					
ANR	8863427	ArgumentList	pref -> value . const_refs		8862741	1					
ANR	8863428	Argument	pref -> value . const_refs		8862741	0					
ANR	8863429	MemberAccess	pref -> value . const_refs		8862741	0					
ANR	8863430	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863431	Identifier	pref		8862741	0					
ANR	8863432	Identifier	value		8862741	1					
ANR	8863433	Identifier	const_refs		8862741	1					
ANR	8863434	Argument	"( const ref * ) igc_reloc_ref_ptr ( ( const ref_packed * ) pref -> value . const_refs , gcst )"		8862741	1					
ANR	8863435	CastExpression	"( const ref * ) igc_reloc_ref_ptr ( ( const ref_packed * ) pref -> value . const_refs , gcst )"		8862741	0					
ANR	8863436	CastTarget	const ref *		8862741	0					
ANR	8863437	CallExpression	"igc_reloc_ref_ptr ( ( const ref_packed * ) pref -> value . const_refs , gcst )"		8862741	1					
ANR	8863438	Callee	igc_reloc_ref_ptr		8862741	0					
ANR	8863439	Identifier	igc_reloc_ref_ptr		8862741	0					
ANR	8863440	ArgumentList	( const ref_packed * ) pref -> value . const_refs		8862741	1					
ANR	8863441	Argument	( const ref_packed * ) pref -> value . const_refs		8862741	0					
ANR	8863442	CastExpression	( const ref_packed * ) pref -> value . const_refs		8862741	0					
ANR	8863443	CastTarget	const ref_packed *		8862741	0					
ANR	8863444	MemberAccess	pref -> value . const_refs		8862741	1					
ANR	8863445	PtrMemberAccess	pref -> value		8862741	0					
ANR	8863446	Identifier	pref		8862741	0					
ANR	8863447	Identifier	value		8862741	1					
ANR	8863448	Identifier	const_refs		8862741	1					
ANR	8863449	Argument	gcst		8862741	1					
ANR	8863450	Identifier	gcst		8862741	0					
ANR	8863451	BreakStatement	break ;	540:20:19826:19831	8862741	33	True				
ANR	8863452	Label	default :	541:16:19849:19856	8862741	34	True				
ANR	8863453	Identifier	default		8862741	0					
ANR	8863454	GotoStatement	goto no_reloc ;	542:20:19878:19891	8862741	35	True				
ANR	8863455	Identifier	no_reloc		8862741	0					
ANR	8863456	ExpressionStatement	"if_debug2m ( '8' , gcst -> heap , ""  [8]relocated 0x%lx => 0x%lx\\n"" , ( ulong ) before , ( ulong ) after )"	544:12:19951:20065	8862741	1	True				
ANR	8863457	CallExpression	"if_debug2m ( '8' , gcst -> heap , ""  [8]relocated 0x%lx => 0x%lx\\n"" , ( ulong ) before , ( ulong ) after )"		8862741	0					
ANR	8863458	Callee	if_debug2m		8862741	0					
ANR	8863459	Identifier	if_debug2m		8862741	0					
ANR	8863460	ArgumentList	'8'		8862741	1					
ANR	8863461	Argument	'8'		8862741	0					
ANR	8863462	PrimaryExpression	'8'		8862741	0					
ANR	8863463	Argument	gcst -> heap		8862741	1					
ANR	8863464	PtrMemberAccess	gcst -> heap		8862741	0					
ANR	8863465	Identifier	gcst		8862741	0					
ANR	8863466	Identifier	heap		8862741	1					
ANR	8863467	Argument	"""  [8]relocated 0x%lx => 0x%lx\\n"""		8862741	2					
ANR	8863468	PrimaryExpression	"""  [8]relocated 0x%lx => 0x%lx\\n"""		8862741	0					
ANR	8863469	Argument	( ulong ) before		8862741	3					
ANR	8863470	CastExpression	( ulong ) before		8862741	0					
ANR	8863471	CastTarget	ulong		8862741	0					
ANR	8863472	Identifier	before		8862741	1					
ANR	8863473	Argument	( ulong ) after		8862741	4					
ANR	8863474	CastExpression	( ulong ) after		8862741	0					
ANR	8863475	CastTarget	ulong		8862741	0					
ANR	8863476	Identifier	after		8862741	1					
ANR	8863477	Label	no_reloc :	547:0:20077:20085	8862741	28	True				
ANR	8863478	Identifier	no_reloc		8862741	0					
ANR	8863479	ExpressionStatement	rp += packed_per_ref	548:8:20095:20115	8862741	29	True				
ANR	8863480	AssignmentExpression	rp += packed_per_ref		8862741	0		+=			
ANR	8863481	Identifier	rp		8862741	0					
ANR	8863482	Identifier	packed_per_ref		8862741	1					
ANR	8863483	ReturnType	void		8862741	1					
ANR	8863484	Identifier	igc_reloc_refs		8862741	2					
ANR	8863485	ParameterList	"ref_packed * from , ref_packed * to , gc_state_t * gcst"		8862741	3					
ANR	8863486	Parameter	ref_packed * from	386:15:12948:12964	8862741	0	True				
ANR	8863487	ParameterType	ref_packed *		8862741	0					
ANR	8863488	Identifier	from		8862741	1					
ANR	8863489	Parameter	ref_packed * to	386:34:12967:12981	8862741	1	True				
ANR	8863490	ParameterType	ref_packed *		8862741	0					
ANR	8863491	Identifier	to		8862741	1					
ANR	8863492	Parameter	gc_state_t * gcst	386:51:12984:13000	8862741	2	True				
ANR	8863493	ParameterType	gc_state_t *		8862741	0					
ANR	8863494	Identifier	gcst		8862741	1					
ANR	8863495	CFGEntryNode	ENTRY		8862741		True				
ANR	8863496	CFGExitNode	EXIT		8862741		True				
ANR	8863497	Symbol	do_all		8862741						
ANR	8863498	Symbol	space_system		8862741						
ANR	8863499	Symbol	igc_reloc_ref_ptr		8862741						
ANR	8863500	Symbol	RELOC_OBJ		8862741						
ANR	8863501	Symbol	before		8862741						
ANR	8863502	Symbol	pref -> value		8862741						
ANR	8863503	Symbol	str . size		8862741						
ANR	8863504	Symbol	gcst		8862741						
ANR	8863505	Symbol	pref -> value . pdevice		8862741						
ANR	8863506	Symbol	pref		8862741						
ANR	8863507	Symbol	from		8862741						
ANR	8863508	Symbol	r_type		8862741						
ANR	8863509	Symbol	pref -> value . refs		8862741						
ANR	8863510	Symbol	var		8862741						
ANR	8863511	Symbol	gcst -> spaces		8862741						
ANR	8863512	Symbol	pref -> value . const_refs		8862741						
ANR	8863513	Symbol	space_system -> stable_memory		8862741						
ANR	8863514	Symbol	str		8862741						
ANR	8863515	Symbol	r_btype		8862741						
ANR	8863516	Symbol	size		8862741						
ANR	8863517	Symbol	pref -> value . pfile		8862741						
ANR	8863518	Symbol	min_trace		8862741						
ANR	8863519	Symbol	spaces		8862741						
ANR	8863520	Symbol	rsub		8862741						
ANR	8863521	Symbol	cmem		8862741						
ANR	8863522	Symbol	gcst -> relocating_untraced		8862741						
ANR	8863523	Symbol	rp		8862741						
ANR	8863524	Symbol	r_is_packed		8862741						
ANR	8863525	Symbol	pref -> value . pname		8862741						
ANR	8863526	Symbol	gcst -> heap		8862741						
ANR	8863527	Symbol	r_space		8862741						
ANR	8863528	Symbol	r_has_attr		8862741						
ANR	8863529	Symbol	str . data		8862741						
ANR	8863530	Symbol	gcst -> min_collect		8862741						
ANR	8863531	Symbol	max_size_st_refs		8862741						
ANR	8863532	Symbol	r_size		8862741						
ANR	8863533	Symbol	expr		8862741						
ANR	8863534	Symbol	after		8862741						
ANR	8863535	Symbol	pref -> value . pstruct		8862741						
ANR	8863536	Symbol	name_ref_sub_table		8862741						
ANR	8863537	Symbol	psub		8862741						
ANR	8863538	Symbol	packed_per_ref		8862741						
ANR	8863539	Symbol	* gcst		8862741						
ANR	8863540	Symbol	RELOC_STRING_VAR		8862741						
ANR	8863541	Symbol	* space_system		8862741						
ANR	8863542	Symbol	RELOC_VAR		8862741						
ANR	8863543	Symbol	pref -> value . bytes		8862741						
ANR	8863544	Symbol	pref -> value . pdict		8862741						
ANR	8863545	Symbol	l_mark		8862741						
ANR	8863546	Symbol	* pref		8862741						
ANR	8863547	Symbol	to		8862741						
ANR	8863548	Symbol	pref -> value . packed		8862741						
ANR	8863549	Function	igc_reloc_ref_ptr_nocheck	554:0:20235:22813							
ANR	8863550	FunctionDef	"igc_reloc_ref_ptr_nocheck (const ref_packed * prp , gc_state_t * gcst)"		8863549	0					
ANR	8863551	CompoundStatement		556:0:20316:22813	8863549	0					
ANR	8863552	IdentifierDeclStatement	const ref_packed * rp = prp ;	561:4:20485:20511	8863549	0	True				
ANR	8863553	IdentifierDecl	* rp = prp		8863549	0					
ANR	8863554	IdentifierDeclType	const ref_packed *		8863549	0					
ANR	8863555	Identifier	rp		8863549	1					
ANR	8863556	AssignmentExpression	* rp = prp		8863549	2		=			
ANR	8863557	Identifier	prp		8863549	0					
ANR	8863558	Identifier	prp		8863549	1					
ANR	8863559	IdentifierDeclStatement	uint dec = 0 ;	562:4:20517:20529	8863549	1	True				
ANR	8863560	IdentifierDecl	dec = 0		8863549	0					
ANR	8863561	IdentifierDeclType	uint		8863549	0					
ANR	8863562	Identifier	dec		8863549	1					
ANR	8863563	AssignmentExpression	dec = 0		8863549	2		=			
ANR	8863564	Identifier	dec		8863549	0					
ANR	8863565	PrimaryExpression	0		8863549	1					
ANR	8863566	IdentifierDeclStatement	const ref * rpref ;	564:4:20565:20581	8863549	2	True				
ANR	8863567	IdentifierDecl	* rpref		8863549	0					
ANR	8863568	IdentifierDeclType	const ref *		8863549	0					
ANR	8863569	Identifier	rpref		8863549	1					
ANR	8863570	Statement	define	565:2:20585:20590	8863549	3	True				
ANR	8863571	Statement	RP_REF	565:9:20592:20597	8863549	4	True				
ANR	8863572	Statement	(	565:15:20598:20598	8863549	5	True				
ANR	8863573	Statement	rp	565:16:20599:20600	8863549	6	True				
ANR	8863574	Statement	)	565:18:20601:20601	8863549	7	True				
ANR	8863575	Statement	(	565:20:20603:20603	8863549	8	True				
ANR	8863576	Statement	rpref	565:21:20604:20608	8863549	9	True				
ANR	8863577	Statement	=	565:27:20610:20610	8863549	10	True				
ANR	8863578	Statement	(	565:29:20612:20612	8863549	11	True				
ANR	8863579	Statement	const	565:30:20613:20617	8863549	12	True				
ANR	8863580	Statement	ref	565:36:20619:20621	8863549	13	True				
ANR	8863581	Statement	*	565:40:20623:20623	8863549	14	True				
ANR	8863582	Statement	)	565:41:20624:20624	8863549	15	True				
ANR	8863583	Statement	rp	565:42:20625:20626	8863549	16	True				
ANR	8863584	Statement	","	565:44:20627:20627	8863549	17	True				
ANR	8863585	Statement	rpref	565:46:20629:20633	8863549	18	True				
ANR	8863586	Statement	)	565:51:20634:20634	8863549	19	True				
ANR	8863587	ForStatement	for ( ; ; )		8863549	20					
ANR	8863588	CompoundStatement		14:13:383:383	8863549	0					
ANR	8863589	IfStatement	if ( r_is_packed ( rp ) )		8863549	0					
ANR	8863590	Condition	r_is_packed ( rp )	571:12:20715:20729	8863549	0	True				
ANR	8863591	CallExpression	r_is_packed ( rp )		8863549	0					
ANR	8863592	Callee	r_is_packed		8863549	0					
ANR	8863593	Identifier	r_is_packed		8863549	0					
ANR	8863594	ArgumentList	rp		8863549	1					
ANR	8863595	Argument	rp		8863549	0					
ANR	8863596	Identifier	rp		8863549	0					
ANR	8863597	CompoundStatement		16:29:415:415	8863549	1					
ANR	8863598	ExpressionStatement	"rputc ( gcst -> heap , ( * rp & lp_mark ? '1' : '0' ) )"	580:12:21137:21183	8863549	0	True				
ANR	8863599	CallExpression	"rputc ( gcst -> heap , ( * rp & lp_mark ? '1' : '0' ) )"		8863549	0					
ANR	8863600	Callee	rputc		8863549	0					
ANR	8863601	Identifier	rputc		8863549	0					
ANR	8863602	ArgumentList	gcst -> heap		8863549	1					
ANR	8863603	Argument	gcst -> heap		8863549	0					
ANR	8863604	PtrMemberAccess	gcst -> heap		8863549	0					
ANR	8863605	Identifier	gcst		8863549	0					
ANR	8863606	Identifier	heap		8863549	1					
ANR	8863607	Argument	* rp & lp_mark ? '1' : '0'		8863549	1					
ANR	8863608	ConditionalExpression	* rp & lp_mark ? '1' : '0'		8863549	0					
ANR	8863609	Condition	* rp & lp_mark		8863549	0					
ANR	8863610	BitAndExpression	* rp & lp_mark		8863549	0		&			
ANR	8863611	UnaryOperationExpression	* rp		8863549	0					
ANR	8863612	UnaryOperator	*		8863549	0					
ANR	8863613	Identifier	rp		8863549	1					
ANR	8863614	Identifier	lp_mark		8863549	1					
ANR	8863615	PrimaryExpression	'1'		8863549	1					
ANR	8863616	PrimaryExpression	'0'		8863549	2					
ANR	8863617	IfStatement	if ( ! ( * rp & lp_mark ) )		8863549	1					
ANR	8863618	Condition	! ( * rp & lp_mark )	581:16:21201:21216	8863549	0	True				
ANR	8863619	UnaryOperationExpression	! ( * rp & lp_mark )		8863549	0					
ANR	8863620	UnaryOperator	!		8863549	0					
ANR	8863621	BitAndExpression	* rp & lp_mark		8863549	1		&			
ANR	8863622	UnaryOperationExpression	* rp		8863549	0					
ANR	8863623	UnaryOperator	*		8863549	0					
ANR	8863624	Identifier	rp		8863549	1					
ANR	8863625	Identifier	lp_mark		8863549	1					
ANR	8863626	CompoundStatement		26:34:902:902	8863549	1					
ANR	8863627	IfStatement	if ( * rp != pt_tag ( pt_integer ) + packed_max_value )		8863549	0					
ANR	8863628	Condition	* rp != pt_tag ( pt_integer ) + packed_max_value	582:20:21241:21284	8863549	0	True				
ANR	8863629	EqualityExpression	* rp != pt_tag ( pt_integer ) + packed_max_value		8863549	0		!=			
ANR	8863630	UnaryOperationExpression	* rp		8863549	0					
ANR	8863631	UnaryOperator	*		8863549	0					
ANR	8863632	Identifier	rp		8863549	1					
ANR	8863633	AdditiveExpression	pt_tag ( pt_integer ) + packed_max_value		8863549	1		+			
ANR	8863634	CallExpression	pt_tag ( pt_integer )		8863549	0					
ANR	8863635	Callee	pt_tag		8863549	0					
ANR	8863636	Identifier	pt_tag		8863549	0					
ANR	8863637	ArgumentList	pt_integer		8863549	1					
ANR	8863638	Argument	pt_integer		8863549	0					
ANR	8863639	Identifier	pt_integer		8863549	0					
ANR	8863640	Identifier	packed_max_value		8863549	1					
ANR	8863641	CompoundStatement		27:66:970:970	8863549	1					
ANR	8863642	ExpressionStatement	"rputc ( gcst -> heap , '\\n' )"	584:20:21370:21393	8863549	0	True				
ANR	8863643	CallExpression	"rputc ( gcst -> heap , '\\n' )"		8863549	0					
ANR	8863644	Callee	rputc		8863549	0					
ANR	8863645	Identifier	rputc		8863549	0					
ANR	8863646	ArgumentList	gcst -> heap		8863549	1					
ANR	8863647	Argument	gcst -> heap		8863549	0					
ANR	8863648	PtrMemberAccess	gcst -> heap		8863549	0					
ANR	8863649	Identifier	gcst		8863549	0					
ANR	8863650	Identifier	heap		8863549	1					
ANR	8863651	Argument	'\\n'		8863549	1					
ANR	8863652	PrimaryExpression	'\\n'		8863549	0					
ANR	8863653	ExpressionStatement	"rp = print_reloc ( prp , ""ref"" , ( const ref_packed * ) ( ( const char * ) prp - ( * rp & packed_value_mask ) + dec ) )"	585:20:21415:21631	8863549	1	True				
ANR	8863654	AssignmentExpression	"rp = print_reloc ( prp , ""ref"" , ( const ref_packed * ) ( ( const char * ) prp - ( * rp & packed_value_mask ) + dec ) )"		8863549	0		=			
ANR	8863655	Identifier	rp		8863549	0					
ANR	8863656	CallExpression	"print_reloc ( prp , ""ref"" , ( const ref_packed * ) ( ( const char * ) prp - ( * rp & packed_value_mask ) + dec ) )"		8863549	1					
ANR	8863657	Callee	print_reloc		8863549	0					
ANR	8863658	Identifier	print_reloc		8863549	0					
ANR	8863659	ArgumentList	prp		8863549	1					
ANR	8863660	Argument	prp		8863549	0					
ANR	8863661	Identifier	prp		8863549	0					
ANR	8863662	Argument	"""ref"""		8863549	1					
ANR	8863663	PrimaryExpression	"""ref"""		8863549	0					
ANR	8863664	Argument	( const ref_packed * ) ( ( const char * ) prp - ( * rp & packed_value_mask ) + dec )		8863549	2					
ANR	8863665	CastExpression	( const ref_packed * ) ( ( const char * ) prp - ( * rp & packed_value_mask ) + dec )		8863549	0					
ANR	8863666	CastTarget	const ref_packed *		8863549	0					
ANR	8863667	AdditiveExpression	( const char * ) prp - ( * rp & packed_value_mask ) + dec		8863549	1		-			
ANR	8863668	CastExpression	( const char * ) prp		8863549	0					
ANR	8863669	CastTarget	const char *		8863549	0					
ANR	8863670	Identifier	prp		8863549	1					
ANR	8863671	AdditiveExpression	( * rp & packed_value_mask ) + dec		8863549	1		+			
ANR	8863672	BitAndExpression	* rp & packed_value_mask		8863549	0		&			
ANR	8863673	UnaryOperationExpression	* rp		8863549	0					
ANR	8863674	UnaryOperator	*		8863549	0					
ANR	8863675	Identifier	rp		8863549	1					
ANR	8863676	Identifier	packed_value_mask		8863549	1					
ANR	8863677	Identifier	dec		8863549	1					
ANR	8863678	BreakStatement	break ;	589:20:21653:21658	8863549	2	True				
ANR	8863679	ExpressionStatement	dec += sizeof ( ref_packed ) * align_packed_per_ref	596:16:21916:21964	8863549	1	True				
ANR	8863680	AssignmentExpression	dec += sizeof ( ref_packed ) * align_packed_per_ref		8863549	0		+=			
ANR	8863681	Identifier	dec		8863549	0					
ANR	8863682	MultiplicativeExpression	sizeof ( ref_packed ) * align_packed_per_ref		8863549	1		*			
ANR	8863683	SizeofExpression	sizeof ( ref_packed )		8863549	0					
ANR	8863684	Sizeof	sizeof		8863549	0					
ANR	8863685	SizeofOperand	ref_packed		8863549	1					
ANR	8863686	Identifier	align_packed_per_ref		8863549	1					
ANR	8863687	ExpressionStatement	rp += align_packed_per_ref	597:16:21982:22008	8863549	2	True				
ANR	8863688	AssignmentExpression	rp += align_packed_per_ref		8863549	0		+=			
ANR	8863689	Identifier	rp		8863549	0					
ANR	8863690	Identifier	align_packed_per_ref		8863549	1					
ANR	8863691	ElseStatement	else		8863549	0					
ANR	8863692	ExpressionStatement	rp ++	599:16:22045:22049	8863549	0	True				
ANR	8863693	PostIncDecOperationExpression	rp ++		8863549	0					
ANR	8863694	Identifier	rp		8863549	0					
ANR	8863695	IncDec	++		8863549	1					
ANR	8863696	ContinueStatement	continue ;	600:12:22063:22071	8863549	2	True				
ANR	8863697	IfStatement	if ( ! ref_type_uses_size_or_null ( r_type ( RP_REF ( rp ) ) ) )		8863549	1					
ANR	8863698	Condition	! ref_type_uses_size_or_null ( r_type ( RP_REF ( rp ) ) )	602:12:22095:22141	8863549	0	True				
ANR	8863699	UnaryOperationExpression	! ref_type_uses_size_or_null ( r_type ( RP_REF ( rp ) ) )		8863549	0					
ANR	8863700	UnaryOperator	!		8863549	0					
ANR	8863701	CallExpression	ref_type_uses_size_or_null ( r_type ( RP_REF ( rp ) ) )		8863549	1					
ANR	8863702	Callee	ref_type_uses_size_or_null		8863549	0					
ANR	8863703	Identifier	ref_type_uses_size_or_null		8863549	0					
ANR	8863704	ArgumentList	r_type ( RP_REF ( rp ) )		8863549	1					
ANR	8863705	Argument	r_type ( RP_REF ( rp ) )		8863549	0					
ANR	8863706	CallExpression	r_type ( RP_REF ( rp ) )		8863549	0					
ANR	8863707	Callee	r_type		8863549	0					
ANR	8863708	Identifier	r_type		8863549	0					
ANR	8863709	ArgumentList	RP_REF ( rp )		8863549	1					
ANR	8863710	Argument	RP_REF ( rp )		8863549	0					
ANR	8863711	CallExpression	RP_REF ( rp )		8863549	0					
ANR	8863712	Callee	RP_REF		8863549	0					
ANR	8863713	Identifier	RP_REF		8863549	0					
ANR	8863714	ArgumentList	rp		8863549	1					
ANR	8863715	Argument	rp		8863549	0					
ANR	8863716	Identifier	rp		8863549	0					
ANR	8863717	CompoundStatement		47:61:1827:1827	8863549	1					
ANR	8863718	ExpressionStatement	"rputc ( gcst -> heap , '\\n' )"	604:12:22195:22218	8863549	0	True				
ANR	8863719	CallExpression	"rputc ( gcst -> heap , '\\n' )"		8863549	0					
ANR	8863720	Callee	rputc		8863549	0					
ANR	8863721	Identifier	rputc		8863549	0					
ANR	8863722	ArgumentList	gcst -> heap		8863549	1					
ANR	8863723	Argument	gcst -> heap		8863549	0					
ANR	8863724	PtrMemberAccess	gcst -> heap		8863549	0					
ANR	8863725	Identifier	gcst		8863549	0					
ANR	8863726	Identifier	heap		8863549	1					
ANR	8863727	Argument	'\\n'		8863549	1					
ANR	8863728	PrimaryExpression	'\\n'		8863549	0					
ANR	8863729	ExpressionStatement	"rp = print_reloc ( prp , ""ref"" , ( const ref_packed * ) ( r_size ( RP_REF ( rp ) ) == 0 ? prp : ( const ref_packed * ) ( ( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec ) ) )"	605:12:22232:22522	8863549	1	True				
ANR	8863730	AssignmentExpression	"rp = print_reloc ( prp , ""ref"" , ( const ref_packed * ) ( r_size ( RP_REF ( rp ) ) == 0 ? prp : ( const ref_packed * ) ( ( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec ) ) )"		8863549	0		=			
ANR	8863731	Identifier	rp		8863549	0					
ANR	8863732	CallExpression	"print_reloc ( prp , ""ref"" , ( const ref_packed * ) ( r_size ( RP_REF ( rp ) ) == 0 ? prp : ( const ref_packed * ) ( ( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec ) ) )"		8863549	1					
ANR	8863733	Callee	print_reloc		8863549	0					
ANR	8863734	Identifier	print_reloc		8863549	0					
ANR	8863735	ArgumentList	prp		8863549	1					
ANR	8863736	Argument	prp		8863549	0					
ANR	8863737	Identifier	prp		8863549	0					
ANR	8863738	Argument	"""ref"""		8863549	1					
ANR	8863739	PrimaryExpression	"""ref"""		8863549	0					
ANR	8863740	Argument	( const ref_packed * ) ( r_size ( RP_REF ( rp ) ) == 0 ? prp : ( const ref_packed * ) ( ( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec ) )		8863549	2					
ANR	8863741	CastExpression	( const ref_packed * ) ( r_size ( RP_REF ( rp ) ) == 0 ? prp : ( const ref_packed * ) ( ( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec ) )		8863549	0					
ANR	8863742	CastTarget	const ref_packed *		8863549	0					
ANR	8863743	ConditionalExpression	r_size ( RP_REF ( rp ) ) == 0 ? prp : ( const ref_packed * ) ( ( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec )		8863549	1					
ANR	8863744	Condition	r_size ( RP_REF ( rp ) ) == 0		8863549	0					
ANR	8863745	EqualityExpression	r_size ( RP_REF ( rp ) ) == 0		8863549	0		==			
ANR	8863746	CallExpression	r_size ( RP_REF ( rp ) )		8863549	0					
ANR	8863747	Callee	r_size		8863549	0					
ANR	8863748	Identifier	r_size		8863549	0					
ANR	8863749	ArgumentList	RP_REF ( rp )		8863549	1					
ANR	8863750	Argument	RP_REF ( rp )		8863549	0					
ANR	8863751	CallExpression	RP_REF ( rp )		8863549	0					
ANR	8863752	Callee	RP_REF		8863549	0					
ANR	8863753	Identifier	RP_REF		8863549	0					
ANR	8863754	ArgumentList	rp		8863549	1					
ANR	8863755	Argument	rp		8863549	0					
ANR	8863756	Identifier	rp		8863549	0					
ANR	8863757	PrimaryExpression	0		8863549	1					
ANR	8863758	Identifier	prp		8863549	1					
ANR	8863759	CastExpression	( const ref_packed * ) ( ( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec )		8863549	2					
ANR	8863760	CastTarget	const ref_packed *		8863549	0					
ANR	8863761	AdditiveExpression	( const char * ) prp - r_size ( RP_REF ( rp ) ) + dec		8863549	1		-			
ANR	8863762	CastExpression	( const char * ) prp		8863549	0					
ANR	8863763	CastTarget	const char *		8863549	0					
ANR	8863764	Identifier	prp		8863549	1					
ANR	8863765	AdditiveExpression	r_size ( RP_REF ( rp ) ) + dec		8863549	1		+			
ANR	8863766	CallExpression	r_size ( RP_REF ( rp ) )		8863549	0					
ANR	8863767	Callee	r_size		8863549	0					
ANR	8863768	Identifier	r_size		8863549	0					
ANR	8863769	ArgumentList	RP_REF ( rp )		8863549	1					
ANR	8863770	Argument	RP_REF ( rp )		8863549	0					
ANR	8863771	CallExpression	RP_REF ( rp )		8863549	0					
ANR	8863772	Callee	RP_REF		8863549	0					
ANR	8863773	Identifier	RP_REF		8863549	0					
ANR	8863774	ArgumentList	rp		8863549	1					
ANR	8863775	Argument	rp		8863549	0					
ANR	8863776	Identifier	rp		8863549	0					
ANR	8863777	Identifier	dec		8863549	1					
ANR	8863778	BreakStatement	break ;	610:12:22536:22541	8863549	2	True				
ANR	8863779	ExpressionStatement	"rputc ( gcst -> heap , 'u' )"	612:8:22561:22583	8863549	2	True				
ANR	8863780	CallExpression	"rputc ( gcst -> heap , 'u' )"		8863549	0					
ANR	8863781	Callee	rputc		8863549	0					
ANR	8863782	Identifier	rputc		8863549	0					
ANR	8863783	ArgumentList	gcst -> heap		8863549	1					
ANR	8863784	Argument	gcst -> heap		8863549	0					
ANR	8863785	PtrMemberAccess	gcst -> heap		8863549	0					
ANR	8863786	Identifier	gcst		8863549	0					
ANR	8863787	Identifier	heap		8863549	1					
ANR	8863788	Argument	'u'		8863549	1					
ANR	8863789	PrimaryExpression	'u'		8863549	0					
ANR	8863790	ExpressionStatement	rp += packed_per_ref	613:8:22593:22613	8863549	3	True				
ANR	8863791	AssignmentExpression	rp += packed_per_ref		8863549	0		+=			
ANR	8863792	Identifier	rp		8863549	0					
ANR	8863793	Identifier	packed_per_ref		8863549	1					
ANR	8863794	CompoundStatement		62:8:2388:2435	8863549	21					
ANR	8863795	ClassDefStatement	union { const ref_packed * r ; ref_packed * w ; } u ;	617:8:22705:22752	8863549	0	True				
ANR	8863796	IdentifierDecl	u		8863549	0					
ANR	8863797	IdentifierDeclType			8863549	0					
ANR	8863798	Identifier	u		8863549	1					
ANR	8863799	ExpressionStatement	u . r = rp	619:8:22763:22771	8863549	1	True				
ANR	8863800	AssignmentExpression	u . r = rp		8863549	0		=			
ANR	8863801	MemberAccess	u . r		8863549	0					
ANR	8863802	Identifier	u		8863549	0					
ANR	8863803	Identifier	r		8863549	1					
ANR	8863804	Identifier	rp		8863549	1					
ANR	8863805	ReturnStatement	return u . w ;	620:8:22781:22791	8863549	2	True				
ANR	8863806	MemberAccess	u . w		8863549	0					
ANR	8863807	Identifier	u		8863549	0					
ANR	8863808	Identifier	w		8863549	1					
ANR	8863809	Statement	undef	622:1:22800:22804	8863549	22	True				
ANR	8863810	Statement	RP_REF	622:7:22806:22811	8863549	23	True				
ANR	8863811	ReturnType	ref_packed *		8863549	1					
ANR	8863812	Identifier	igc_reloc_ref_ptr_nocheck		8863549	2					
ANR	8863813	ParameterList	"const ref_packed * prp , gc_state_t * gcst"		8863549	3					
ANR	8863814	Parameter	const ref_packed * prp	555:26:20274:20295	8863549	0	True				
ANR	8863815	ParameterType	const ref_packed *		8863549	0					
ANR	8863816	Identifier	prp		8863549	1					
ANR	8863817	Parameter	gc_state_t * gcst	555:50:20298:20313	8863549	1	True				
ANR	8863818	ParameterType	gc_state_t *		8863549	0					
ANR	8863819	Identifier	gcst		8863549	1					
ANR	8863820	CFGEntryNode	ENTRY		8863549		True				
ANR	8863821	CFGExitNode	EXIT		8863549		True				
ANR	8863822	InfiniteForNode	true		8863549		True				
ANR	8863823	Symbol	print_reloc		8863549						
ANR	8863824	Symbol	dec		8863549						
ANR	8863825	Symbol	r_is_packed		8863549						
ANR	8863826	Symbol	lp_mark		8863549						
ANR	8863827	Symbol	u . w		8863549						
ANR	8863828	Symbol	ref_type_uses_size_or_null		8863549						
ANR	8863829	Symbol	* rp		8863549						
ANR	8863830	Symbol	packed_per_ref		8863549						
ANR	8863831	Symbol	u . r		8863549						
ANR	8863832	Symbol	pt_integer		8863549						
ANR	8863833	Symbol	gcst		8863549						
ANR	8863834	Symbol	* gcst		8863549						
ANR	8863835	Symbol	rpref		8863549						
ANR	8863836	Symbol	prp		8863549						
ANR	8863837	Symbol	gcst -> heap		8863549						
ANR	8863838	Symbol	pt_tag		8863549						
ANR	8863839	Symbol	RP_REF		8863549						
ANR	8863840	Symbol	u		8863549						
ANR	8863841	Symbol	r_size		8863549						
ANR	8863842	Symbol	align_packed_per_ref		8863549						
ANR	8863843	Symbol	packed_max_value		8863549						
ANR	8863844	Symbol	rp		8863549						
ANR	8863845	Symbol	packed_value_mask		8863549						
ANR	8863846	Symbol	r_type		8863549						
ANR	8863847	Function	igc_reloc_ref_ptr	624:0:22815:23840							
ANR	8863848	FunctionDef	"igc_reloc_ref_ptr (const ref_packed * prp , gc_state_t * gcst)"		8863847	0					
ANR	8863849	CompoundStatement		626:0:22888:23840	8863847	0					
ANR	8863850	IdentifierDeclStatement	const ref_packed * rp = prp ;	631:4:23057:23083	8863847	0	True				
ANR	8863851	IdentifierDecl	* rp = prp		8863847	0					
ANR	8863852	IdentifierDeclType	const ref_packed *		8863847	0					
ANR	8863853	Identifier	rp		8863847	1					
ANR	8863854	AssignmentExpression	* rp = prp		8863847	2		=			
ANR	8863855	Identifier	prp		8863847	0					
ANR	8863856	Identifier	prp		8863847	1					
ANR	8863857	IdentifierDeclStatement	const ref * rpref ;	633:4:23119:23135	8863847	1	True				
ANR	8863858	IdentifierDecl	* rpref		8863847	0					
ANR	8863859	IdentifierDeclType	const ref *		8863847	0					
ANR	8863860	Identifier	rpref		8863847	1					
ANR	8863861	Statement	define	634:2:23139:23144	8863847	2	True				
ANR	8863862	Statement	RP_REF	634:9:23146:23151	8863847	3	True				
ANR	8863863	Statement	(	634:15:23152:23152	8863847	4	True				
ANR	8863864	Statement	rp	634:16:23153:23154	8863847	5	True				
ANR	8863865	Statement	)	634:18:23155:23155	8863847	6	True				
ANR	8863866	Statement	(	634:20:23157:23157	8863847	7	True				
ANR	8863867	Statement	rpref	634:21:23158:23162	8863847	8	True				
ANR	8863868	Statement	=	634:27:23164:23164	8863847	9	True				
ANR	8863869	Statement	(	634:29:23166:23166	8863847	10	True				
ANR	8863870	Statement	const	634:30:23167:23171	8863847	11	True				
ANR	8863871	Statement	ref	634:36:23173:23175	8863847	12	True				
ANR	8863872	Statement	*	634:40:23177:23177	8863847	13	True				
ANR	8863873	Statement	)	634:41:23178:23178	8863847	14	True				
ANR	8863874	Statement	rp	634:42:23179:23180	8863847	15	True				
ANR	8863875	Statement	","	634:44:23181:23181	8863847	16	True				
ANR	8863876	Statement	rpref	634:46:23183:23187	8863847	17	True				
ANR	8863877	Statement	)	634:51:23188:23188	8863847	18	True				
ANR	8863878	IfStatement	if ( r_is_packed ( rp ) )		8863847	19					
ANR	8863879	Condition	r_is_packed ( rp )	643:8:23442:23456	8863847	0	True				
ANR	8863880	CallExpression	r_is_packed ( rp )		8863847	0					
ANR	8863881	Callee	r_is_packed		8863847	0					
ANR	8863882	Identifier	r_is_packed		8863847	0					
ANR	8863883	ArgumentList	rp		8863847	1					
ANR	8863884	Argument	rp		8863847	0					
ANR	8863885	Identifier	rp		8863847	0					
ANR	8863886	CompoundStatement		18:25:570:570	8863847	1					
ANR	8863887	IfStatement	if ( ! r_has_pmark ( rp ) )		8863847	0					
ANR	8863888	Condition	! r_has_pmark ( rp )	644:12:23473:23488	8863847	0	True				
ANR	8863889	UnaryOperationExpression	! r_has_pmark ( rp )		8863847	0					
ANR	8863890	UnaryOperator	!		8863847	0					
ANR	8863891	CallExpression	r_has_pmark ( rp )		8863847	1					
ANR	8863892	Callee	r_has_pmark		8863847	0					
ANR	8863893	Identifier	r_has_pmark		8863847	0					
ANR	8863894	ArgumentList	rp		8863847	1					
ANR	8863895	Argument	rp		8863847	0					
ANR	8863896	Identifier	rp		8863847	0					
ANR	8863897	GotoStatement	goto ret_rp ;	645:12:23503:23514	8863847	1	True				
ANR	8863898	Identifier	ret_rp		8863847	0					
ANR	8863899	ElseStatement	else		8863847	0					
ANR	8863900	CompoundStatement		21:11:638:638	8863847	0					
ANR	8863901	IfStatement	"if ( ! r_has_attr ( RP_REF ( rp ) , l_mark ) )"		8863847	0					
ANR	8863902	Condition	"! r_has_attr ( RP_REF ( rp ) , l_mark )"	647:12:23541:23571	8863847	0	True				
ANR	8863903	UnaryOperationExpression	"! r_has_attr ( RP_REF ( rp ) , l_mark )"		8863847	0					
ANR	8863904	UnaryOperator	!		8863847	0					
ANR	8863905	CallExpression	"r_has_attr ( RP_REF ( rp ) , l_mark )"		8863847	1					
ANR	8863906	Callee	r_has_attr		8863847	0					
ANR	8863907	Identifier	r_has_attr		8863847	0					
ANR	8863908	ArgumentList	RP_REF ( rp )		8863847	1					
ANR	8863909	Argument	RP_REF ( rp )		8863847	0					
ANR	8863910	CallExpression	RP_REF ( rp )		8863847	0					
ANR	8863911	Callee	RP_REF		8863847	0					
ANR	8863912	Identifier	RP_REF		8863847	0					
ANR	8863913	ArgumentList	rp		8863847	1					
ANR	8863914	Argument	rp		8863847	0					
ANR	8863915	Identifier	rp		8863847	0					
ANR	8863916	Argument	l_mark		8863847	1					
ANR	8863917	Identifier	l_mark		8863847	0					
ANR	8863918	GotoStatement	goto ret_rp ;	648:12:23586:23597	8863847	1	True				
ANR	8863919	Identifier	ret_rp		8863847	0					
ANR	8863920	ReturnStatement	"return igc_reloc_ref_ptr_nocheck ( prp , gcst ) ;"	650:4:23609:23652	8863847	20	True				
ANR	8863921	CallExpression	"igc_reloc_ref_ptr_nocheck ( prp , gcst )"		8863847	0					
ANR	8863922	Callee	igc_reloc_ref_ptr_nocheck		8863847	0					
ANR	8863923	Identifier	igc_reloc_ref_ptr_nocheck		8863847	0					
ANR	8863924	ArgumentList	prp		8863847	1					
ANR	8863925	Argument	prp		8863847	0					
ANR	8863926	Identifier	prp		8863847	0					
ANR	8863927	Argument	gcst		8863847	1					
ANR	8863928	Identifier	gcst		8863847	0					
ANR	8863929	Label	ret_rp :	651:0:23654:23660	8863847	21	True				
ANR	8863930	Identifier	ret_rp		8863847	0					
ANR	8863931	CompoundStatement		29:8:857:904	8863847	22					
ANR	8863932	ClassDefStatement	union { const ref_packed * r ; ref_packed * w ; } u ;	654:8:23746:23793	8863847	0	True				
ANR	8863933	IdentifierDecl	u		8863847	0					
ANR	8863934	IdentifierDeclType			8863847	0					
ANR	8863935	Identifier	u		8863847	1					
ANR	8863936	ExpressionStatement	u . r = rp	656:8:23804:23812	8863847	1	True				
ANR	8863937	AssignmentExpression	u . r = rp		8863847	0		=			
ANR	8863938	MemberAccess	u . r		8863847	0					
ANR	8863939	Identifier	u		8863847	0					
ANR	8863940	Identifier	r		8863847	1					
ANR	8863941	Identifier	rp		8863847	1					
ANR	8863942	ReturnStatement	return u . w ;	657:8:23822:23832	8863847	2	True				
ANR	8863943	MemberAccess	u . w		8863847	0					
ANR	8863944	Identifier	u		8863847	0					
ANR	8863945	Identifier	w		8863847	1					
ANR	8863946	ReturnType	ref_packed *		8863847	1					
ANR	8863947	Identifier	igc_reloc_ref_ptr		8863847	2					
ANR	8863948	ParameterList	"const ref_packed * prp , gc_state_t * gcst"		8863847	3					
ANR	8863949	Parameter	const ref_packed * prp	625:18:22846:22867	8863847	0	True				
ANR	8863950	ParameterType	const ref_packed *		8863847	0					
ANR	8863951	Identifier	prp		8863847	1					
ANR	8863952	Parameter	gc_state_t * gcst	625:42:22870:22885	8863847	1	True				
ANR	8863953	ParameterType	gc_state_t *		8863847	0					
ANR	8863954	Identifier	gcst		8863847	1					
ANR	8863955	CFGEntryNode	ENTRY		8863847		True				
ANR	8863956	CFGExitNode	EXIT		8863847		True				
ANR	8863957	Symbol	igc_reloc_ref_ptr_nocheck		8863847						
ANR	8863958	Symbol	r_is_packed		8863847						
ANR	8863959	Symbol	u . w		8863847						
ANR	8863960	Symbol	u . r		8863847						
ANR	8863961	Symbol	gcst		8863847						
ANR	8863962	Symbol	rpref		8863847						
ANR	8863963	Symbol	prp		8863847						
ANR	8863964	Symbol	RP_REF		8863847						
ANR	8863965	Symbol	r_has_attr		8863847						
ANR	8863966	Symbol	u		8863847						
ANR	8863967	Symbol	r_has_pmark		8863847						
ANR	8863968	Symbol	l_mark		8863847						
ANR	8863969	Symbol	rp		8863847						
ANR	8863970	Function	refs_compact	665:0:23950:27891							
ANR	8863971	FunctionDef	"refs_compact (const gs_memory_t * mem , obj_header_t * pre , obj_header_t * dpre , uint size)"		8863970	0					
ANR	8863972	CompoundStatement		667:0:24051:27891	8863970	0					
ANR	8863973	IdentifierDeclStatement	ref_packed * dest ;	668:4:24057:24073	8863970	0	True				
ANR	8863974	IdentifierDecl	* dest		8863970	0					
ANR	8863975	IdentifierDeclType	ref_packed *		8863970	0					
ANR	8863976	Identifier	dest		8863970	1					
ANR	8863977	IdentifierDeclStatement	ref_packed * src ;	669:4:24079:24094	8863970	1	True				
ANR	8863978	IdentifierDecl	* src		8863970	0					
ANR	8863979	IdentifierDeclType	ref_packed *		8863970	0					
ANR	8863980	Identifier	src		8863970	1					
ANR	8863981	IdentifierDeclStatement	ref_packed * end ;	670:4:24100:24115	8863970	2	True				
ANR	8863982	IdentifierDecl	* end		8863970	0					
ANR	8863983	IdentifierDeclType	ref_packed *		8863970	0					
ANR	8863984	Identifier	end		8863970	1					
ANR	8863985	IdentifierDeclStatement	uint new_size ;	671:4:24121:24134	8863970	3	True				
ANR	8863986	IdentifierDecl	new_size		8863970	0					
ANR	8863987	IdentifierDeclType	uint		8863970	0					
ANR	8863988	Identifier	new_size		8863970	1					
ANR	8863989	ExpressionStatement	src = ( ref_packed * ) ( pre + 1 )	679:4:24358:24388	8863970	4	True				
ANR	8863990	AssignmentExpression	src = ( ref_packed * ) ( pre + 1 )		8863970	0		=			
ANR	8863991	Identifier	src		8863970	0					
ANR	8863992	CastExpression	( ref_packed * ) ( pre + 1 )		8863970	1					
ANR	8863993	CastTarget	ref_packed *		8863970	0					
ANR	8863994	AdditiveExpression	pre + 1		8863970	1		+			
ANR	8863995	Identifier	pre		8863970	0					
ANR	8863996	PrimaryExpression	1		8863970	1					
ANR	8863997	ExpressionStatement	end = ( ref_packed * ) ( ( byte * ) src + size )	680:4:24394:24436	8863970	5	True				
ANR	8863998	AssignmentExpression	end = ( ref_packed * ) ( ( byte * ) src + size )		8863970	0		=			
ANR	8863999	Identifier	end		8863970	0					
ANR	8864000	CastExpression	( ref_packed * ) ( ( byte * ) src + size )		8863970	1					
ANR	8864001	CastTarget	ref_packed *		8863970	0					
ANR	8864002	AdditiveExpression	( byte * ) src + size		8863970	1		+			
ANR	8864003	CastExpression	( byte * ) src		8863970	0					
ANR	8864004	CastTarget	byte *		8863970	0					
ANR	8864005	Identifier	src		8863970	1					
ANR	8864006	Identifier	size		8863970	1					
ANR	8864007	IfStatement	if ( dpre == pre )		8863970	6					
ANR	8864008	Condition	dpre == pre	686:8:24630:24640	8863970	0	True				
ANR	8864009	EqualityExpression	dpre == pre		8863970	0		==			
ANR	8864010	Identifier	dpre		8863970	0					
ANR	8864011	Identifier	pre		8863970	1					
ANR	8864012	ForStatement	for ( ; ; )		8863970	1					
ANR	8864013	CompoundStatement		21:17:649:649	8863970	0					
ANR	8864014	IfStatement	if ( r_is_packed ( src ) )		8863970	0					
ANR	8864015	Condition	r_is_packed ( src )	688:16:24719:24734	8863970	0	True				
ANR	8864016	CallExpression	r_is_packed ( src )		8863970	0					
ANR	8864017	Callee	r_is_packed		8863970	0					
ANR	8864018	Identifier	r_is_packed		8863970	0					
ANR	8864019	ArgumentList	src		8863970	1					
ANR	8864020	Argument	src		8863970	0					
ANR	8864021	Identifier	src		8863970	0					
ANR	8864022	CompoundStatement		22:34:685:685	8863970	1					
ANR	8864023	IfStatement	if ( ! r_has_pmark ( src ) )		8863970	0					
ANR	8864024	Condition	! r_has_pmark ( src )	689:20:24759:24775	8863970	0	True				
ANR	8864025	UnaryOperationExpression	! r_has_pmark ( src )		8863970	0					
ANR	8864026	UnaryOperator	!		8863970	0					
ANR	8864027	CallExpression	r_has_pmark ( src )		8863970	1					
ANR	8864028	Callee	r_has_pmark		8863970	0					
ANR	8864029	Identifier	r_has_pmark		8863970	0					
ANR	8864030	ArgumentList	src		8863970	1					
ANR	8864031	Argument	src		8863970	0					
ANR	8864032	Identifier	src		8863970	0					
ANR	8864033	BreakStatement	break ;	690:20:24798:24803	8863970	1	True				
ANR	8864034	ExpressionStatement	"if_debug1m ( '8' , mem , ""  [8]packed ref 0x%lx \\""copied\\""\\n"" , ( ulong ) src )"	691:16:24821:24918	8863970	1	True				
ANR	8864035	CallExpression	"if_debug1m ( '8' , mem , ""  [8]packed ref 0x%lx \\""copied\\""\\n"" , ( ulong ) src )"		8863970	0					
ANR	8864036	Callee	if_debug1m		8863970	0					
ANR	8864037	Identifier	if_debug1m		8863970	0					
ANR	8864038	ArgumentList	'8'		8863970	1					
ANR	8864039	Argument	'8'		8863970	0					
ANR	8864040	PrimaryExpression	'8'		8863970	0					
ANR	8864041	Argument	mem		8863970	1					
ANR	8864042	Identifier	mem		8863970	0					
ANR	8864043	Argument	"""  [8]packed ref 0x%lx \\""copied\\""\\n"""		8863970	2					
ANR	8864044	PrimaryExpression	"""  [8]packed ref 0x%lx \\""copied\\""\\n"""		8863970	0					
ANR	8864045	Argument	( ulong ) src		8863970	3					
ANR	8864046	CastExpression	( ulong ) src		8863970	0					
ANR	8864047	CastTarget	ulong		8863970	0					
ANR	8864048	Identifier	src		8863970	1					
ANR	8864049	ExpressionStatement	* src &= ~lp_mark	693:16:24936:24952	8863970	2	True				
ANR	8864050	AssignmentExpression	* src &= ~lp_mark		8863970	0		&=			
ANR	8864051	UnaryOperationExpression	* src		8863970	0					
ANR	8864052	UnaryOperator	*		8863970	0					
ANR	8864053	Identifier	src		8863970	1					
ANR	8864054	Identifier	~lp_mark		8863970	1					
ANR	8864055	ExpressionStatement	src ++	694:16:24970:24975	8863970	3	True				
ANR	8864056	PostIncDecOperationExpression	src ++		8863970	0					
ANR	8864057	Identifier	src		8863970	0					
ANR	8864058	IncDec	++		8863970	1					
ANR	8864059	ElseStatement	else		8863970	0					
ANR	8864060	CompoundStatement		29:19:944:944	8863970	0					
ANR	8864061	Statement	ref	696:16:25035:25037	8863970	0	True				
ANR	8864062	Statement	*	696:20:25039:25039	8863970	1	True				
ANR	8864063	Statement	const	696:21:25040:25044	8863970	2	True				
ANR	8864064	ExpressionStatement	pref = ( ref * ) src	696:27:25046:25063	8863970	3	True				
ANR	8864065	AssignmentExpression	pref = ( ref * ) src		8863970	0		=			
ANR	8864066	Identifier	pref		8863970	0					
ANR	8864067	CastExpression	( ref * ) src		8863970	1					
ANR	8864068	CastTarget	ref *		8863970	0					
ANR	8864069	Identifier	src		8863970	1					
ANR	8864070	IfStatement	"if ( ! r_has_attr ( pref , l_mark ) )"		8863970	4					
ANR	8864071	Condition	"! r_has_attr ( pref , l_mark )"	698:20:25086:25110	8863970	0	True				
ANR	8864072	UnaryOperationExpression	"! r_has_attr ( pref , l_mark )"		8863970	0					
ANR	8864073	UnaryOperator	!		8863970	0					
ANR	8864074	CallExpression	"r_has_attr ( pref , l_mark )"		8863970	1					
ANR	8864075	Callee	r_has_attr		8863970	0					
ANR	8864076	Identifier	r_has_attr		8863970	0					
ANR	8864077	ArgumentList	pref		8863970	1					
ANR	8864078	Argument	pref		8863970	0					
ANR	8864079	Identifier	pref		8863970	0					
ANR	8864080	Argument	l_mark		8863970	1					
ANR	8864081	Identifier	l_mark		8863970	0					
ANR	8864082	BreakStatement	break ;	699:20:25133:25138	8863970	1	True				
ANR	8864083	ExpressionStatement	"if_debug1m ( '8' , mem , ""  [8]ref 0x%lx \\""copied\\""\\n"" , ( ulong ) src )"	700:16:25156:25220	8863970	5	True				
ANR	8864084	CallExpression	"if_debug1m ( '8' , mem , ""  [8]ref 0x%lx \\""copied\\""\\n"" , ( ulong ) src )"		8863970	0					
ANR	8864085	Callee	if_debug1m		8863970	0					
ANR	8864086	Identifier	if_debug1m		8863970	0					
ANR	8864087	ArgumentList	'8'		8863970	1					
ANR	8864088	Argument	'8'		8863970	0					
ANR	8864089	PrimaryExpression	'8'		8863970	0					
ANR	8864090	Argument	mem		8863970	1					
ANR	8864091	Identifier	mem		8863970	0					
ANR	8864092	Argument	"""  [8]ref 0x%lx \\""copied\\""\\n"""		8863970	2					
ANR	8864093	PrimaryExpression	"""  [8]ref 0x%lx \\""copied\\""\\n"""		8863970	0					
ANR	8864094	Argument	( ulong ) src		8863970	3					
ANR	8864095	CastExpression	( ulong ) src		8863970	0					
ANR	8864096	CastTarget	ulong		8863970	0					
ANR	8864097	Identifier	src		8863970	1					
ANR	8864098	ExpressionStatement	"r_clear_attrs ( pref , l_mark )"	701:16:25238:25265	8863970	6	True				
ANR	8864099	CallExpression	"r_clear_attrs ( pref , l_mark )"		8863970	0					
ANR	8864100	Callee	r_clear_attrs		8863970	0					
ANR	8864101	Identifier	r_clear_attrs		8863970	0					
ANR	8864102	ArgumentList	pref		8863970	1					
ANR	8864103	Argument	pref		8863970	0					
ANR	8864104	Identifier	pref		8863970	0					
ANR	8864105	Argument	l_mark		8863970	1					
ANR	8864106	Identifier	l_mark		8863970	0					
ANR	8864107	ExpressionStatement	src += packed_per_ref	702:16:25283:25304	8863970	7	True				
ANR	8864108	AssignmentExpression	src += packed_per_ref		8863970	0		+=			
ANR	8864109	Identifier	src		8863970	0					
ANR	8864110	Identifier	packed_per_ref		8863970	1					
ANR	8864111	ElseStatement	else		8863970	0					
ANR	8864112	ExpressionStatement	* dpre = * pre	705:8:25339:25351	8863970	0	True				
ANR	8864113	AssignmentExpression	* dpre = * pre		8863970	0		=			
ANR	8864114	UnaryOperationExpression	* dpre		8863970	0					
ANR	8864115	UnaryOperator	*		8863970	0					
ANR	8864116	Identifier	dpre		8863970	1					
ANR	8864117	UnaryOperationExpression	* pre		8863970	1					
ANR	8864118	UnaryOperator	*		8863970	0					
ANR	8864119	Identifier	pre		8863970	1					
ANR	8864120	ExpressionStatement	dest = ( ref_packed * ) ( ( char * ) dpre + ( ( char * ) src - ( char * ) pre ) )	706:4:25357:25423	8863970	7	True				
ANR	8864121	AssignmentExpression	dest = ( ref_packed * ) ( ( char * ) dpre + ( ( char * ) src - ( char * ) pre ) )		8863970	0		=			
ANR	8864122	Identifier	dest		8863970	0					
ANR	8864123	CastExpression	( ref_packed * ) ( ( char * ) dpre + ( ( char * ) src - ( char * ) pre ) )		8863970	1					
ANR	8864124	CastTarget	ref_packed *		8863970	0					
ANR	8864125	AdditiveExpression	( char * ) dpre + ( ( char * ) src - ( char * ) pre )		8863970	1		+			
ANR	8864126	CastExpression	( char * ) dpre		8863970	0					
ANR	8864127	CastTarget	char *		8863970	0					
ANR	8864128	Identifier	dpre		8863970	1					
ANR	8864129	AdditiveExpression	( char * ) src - ( char * ) pre		8863970	1		-			
ANR	8864130	CastExpression	( char * ) src		8863970	0					
ANR	8864131	CastTarget	char *		8863970	0					
ANR	8864132	Identifier	src		8863970	1					
ANR	8864133	CastExpression	( char * ) pre		8863970	1					
ANR	8864134	CastTarget	char *		8863970	0					
ANR	8864135	Identifier	pre		8863970	1					
ANR	8864136	ForStatement	for ( ; ; )		8863970	8					
ANR	8864137	CompoundStatement		41:13:1386:1386	8863970	0					
ANR	8864138	IfStatement	if ( r_is_packed ( src ) )		8863970	0					
ANR	8864139	Condition	r_is_packed ( src )	708:12:25452:25467	8863970	0	True				
ANR	8864140	CallExpression	r_is_packed ( src )		8863970	0					
ANR	8864141	Callee	r_is_packed		8863970	0					
ANR	8864142	Identifier	r_is_packed		8863970	0					
ANR	8864143	ArgumentList	src		8863970	1					
ANR	8864144	Argument	src		8863970	0					
ANR	8864145	Identifier	src		8863970	0					
ANR	8864146	CompoundStatement		42:30:1418:1418	8863970	1					
ANR	8864147	IfStatement	if ( r_has_pmark ( src ) )		8863970	0					
ANR	8864148	Condition	r_has_pmark ( src )	709:16:25488:25503	8863970	0	True				
ANR	8864149	CallExpression	r_has_pmark ( src )		8863970	0					
ANR	8864150	Callee	r_has_pmark		8863970	0					
ANR	8864151	Identifier	r_has_pmark		8863970	0					
ANR	8864152	ArgumentList	src		8863970	1					
ANR	8864153	Argument	src		8863970	0					
ANR	8864154	Identifier	src		8863970	0					
ANR	8864155	CompoundStatement		43:34:1454:1454	8863970	1					
ANR	8864156	ExpressionStatement	"if_debug2m ( '8' , mem , ""  [8]packed ref 0x%lx copied to 0x%lx\\n"" , ( ulong ) src , ( ulong ) dest )"	710:16:25524:25640	8863970	0	True				
ANR	8864157	CallExpression	"if_debug2m ( '8' , mem , ""  [8]packed ref 0x%lx copied to 0x%lx\\n"" , ( ulong ) src , ( ulong ) dest )"		8863970	0					
ANR	8864158	Callee	if_debug2m		8863970	0					
ANR	8864159	Identifier	if_debug2m		8863970	0					
ANR	8864160	ArgumentList	'8'		8863970	1					
ANR	8864161	Argument	'8'		8863970	0					
ANR	8864162	PrimaryExpression	'8'		8863970	0					
ANR	8864163	Argument	mem		8863970	1					
ANR	8864164	Identifier	mem		8863970	0					
ANR	8864165	Argument	"""  [8]packed ref 0x%lx copied to 0x%lx\\n"""		8863970	2					
ANR	8864166	PrimaryExpression	"""  [8]packed ref 0x%lx copied to 0x%lx\\n"""		8863970	0					
ANR	8864167	Argument	( ulong ) src		8863970	3					
ANR	8864168	CastExpression	( ulong ) src		8863970	0					
ANR	8864169	CastTarget	ulong		8863970	0					
ANR	8864170	Identifier	src		8863970	1					
ANR	8864171	Argument	( ulong ) dest		8863970	4					
ANR	8864172	CastExpression	( ulong ) dest		8863970	0					
ANR	8864173	CastTarget	ulong		8863970	0					
ANR	8864174	Identifier	dest		8863970	1					
ANR	8864175	ExpressionStatement	* dest ++ = * src & ~lp_mark	712:16:25658:25683	8863970	1	True				
ANR	8864176	AssignmentExpression	* dest ++ = * src & ~lp_mark		8863970	0		=			
ANR	8864177	UnaryOperationExpression	* dest ++		8863970	0					
ANR	8864178	UnaryOperator	*		8863970	0					
ANR	8864179	PostIncDecOperationExpression	dest ++		8863970	1					
ANR	8864180	Identifier	dest		8863970	0					
ANR	8864181	IncDec	++		8863970	1					
ANR	8864182	BitAndExpression	* src & ~lp_mark		8863970	1		&			
ANR	8864183	UnaryOperationExpression	* src		8863970	0					
ANR	8864184	UnaryOperator	*		8863970	0					
ANR	8864185	Identifier	src		8863970	1					
ANR	8864186	Identifier	~lp_mark		8863970	1					
ANR	8864187	ExpressionStatement	src ++	714:12:25711:25716	8863970	1	True				
ANR	8864188	PostIncDecOperationExpression	src ++		8863970	0					
ANR	8864189	Identifier	src		8863970	0					
ANR	8864190	IncDec	++		8863970	1					
ANR	8864191	ElseStatement	else		8863970	0					
ANR	8864192	CompoundStatement		49:15:1681:1681	8863970	0					
ANR	8864193	IfStatement	"if ( r_has_attr ( ( ref * ) src , l_mark ) )"		8863970	0					
ANR	8864194	Condition	"r_has_attr ( ( ref * ) src , l_mark )"	716:16:25772:25802	8863970	0	True				
ANR	8864195	CallExpression	"r_has_attr ( ( ref * ) src , l_mark )"		8863970	0					
ANR	8864196	Callee	r_has_attr		8863970	0					
ANR	8864197	Identifier	r_has_attr		8863970	0					
ANR	8864198	ArgumentList	( ref * ) src		8863970	1					
ANR	8864199	Argument	( ref * ) src		8863970	0					
ANR	8864200	CastExpression	( ref * ) src		8863970	0					
ANR	8864201	CastTarget	ref *		8863970	0					
ANR	8864202	Identifier	src		8863970	1					
ANR	8864203	Argument	l_mark		8863970	1					
ANR	8864204	Identifier	l_mark		8863970	0					
ANR	8864205	CompoundStatement		51:16:1771:1780	8863970	1					
ANR	8864206	IdentifierDeclStatement	ref rtemp ;	717:16:25823:25832	8863970	0	True				
ANR	8864207	IdentifierDecl	rtemp		8863970	0					
ANR	8864208	IdentifierDeclType	ref		8863970	0					
ANR	8864209	Identifier	rtemp		8863970	1					
ANR	8864210	ExpressionStatement	"if_debug2m ( '8' , mem , ""  [8]ref 0x%lx copied to 0x%lx\\n"" , ( ulong ) src , ( ulong ) dest )"	719:16:25851:25961	8863970	1	True				
ANR	8864211	CallExpression	"if_debug2m ( '8' , mem , ""  [8]ref 0x%lx copied to 0x%lx\\n"" , ( ulong ) src , ( ulong ) dest )"		8863970	0					
ANR	8864212	Callee	if_debug2m		8863970	0					
ANR	8864213	Identifier	if_debug2m		8863970	0					
ANR	8864214	ArgumentList	'8'		8863970	1					
ANR	8864215	Argument	'8'		8863970	0					
ANR	8864216	PrimaryExpression	'8'		8863970	0					
ANR	8864217	Argument	mem		8863970	1					
ANR	8864218	Identifier	mem		8863970	0					
ANR	8864219	Argument	"""  [8]ref 0x%lx copied to 0x%lx\\n"""		8863970	2					
ANR	8864220	PrimaryExpression	"""  [8]ref 0x%lx copied to 0x%lx\\n"""		8863970	0					
ANR	8864221	Argument	( ulong ) src		8863970	3					
ANR	8864222	CastExpression	( ulong ) src		8863970	0					
ANR	8864223	CastTarget	ulong		8863970	0					
ANR	8864224	Identifier	src		8863970	1					
ANR	8864225	Argument	( ulong ) dest		8863970	4					
ANR	8864226	CastExpression	( ulong ) dest		8863970	0					
ANR	8864227	CastTarget	ulong		8863970	0					
ANR	8864228	Identifier	dest		8863970	1					
ANR	8864229	ExpressionStatement	"ref_assign_inline ( & rtemp , ( ref * ) src )"	724:16:26132:26170	8863970	2	True				
ANR	8864230	CallExpression	"ref_assign_inline ( & rtemp , ( ref * ) src )"		8863970	0					
ANR	8864231	Callee	ref_assign_inline		8863970	0					
ANR	8864232	Identifier	ref_assign_inline		8863970	0					
ANR	8864233	ArgumentList	& rtemp		8863970	1					
ANR	8864234	Argument	& rtemp		8863970	0					
ANR	8864235	UnaryOperationExpression	& rtemp		8863970	0					
ANR	8864236	UnaryOperator	&		8863970	0					
ANR	8864237	Identifier	rtemp		8863970	1					
ANR	8864238	Argument	( ref * ) src		8863970	1					
ANR	8864239	CastExpression	( ref * ) src		8863970	0					
ANR	8864240	CastTarget	ref *		8863970	0					
ANR	8864241	Identifier	src		8863970	1					
ANR	8864242	ExpressionStatement	"r_clear_attrs ( & rtemp , l_mark )"	725:16:26188:26217	8863970	3	True				
ANR	8864243	CallExpression	"r_clear_attrs ( & rtemp , l_mark )"		8863970	0					
ANR	8864244	Callee	r_clear_attrs		8863970	0					
ANR	8864245	Identifier	r_clear_attrs		8863970	0					
ANR	8864246	ArgumentList	& rtemp		8863970	1					
ANR	8864247	Argument	& rtemp		8863970	0					
ANR	8864248	UnaryOperationExpression	& rtemp		8863970	0					
ANR	8864249	UnaryOperator	&		8863970	0					
ANR	8864250	Identifier	rtemp		8863970	1					
ANR	8864251	Argument	l_mark		8863970	1					
ANR	8864252	Identifier	l_mark		8863970	0					
ANR	8864253	ExpressionStatement	"ref_assign_inline ( ( ref * ) dest , & rtemp )"	726:16:26235:26274	8863970	4	True				
ANR	8864254	CallExpression	"ref_assign_inline ( ( ref * ) dest , & rtemp )"		8863970	0					
ANR	8864255	Callee	ref_assign_inline		8863970	0					
ANR	8864256	Identifier	ref_assign_inline		8863970	0					
ANR	8864257	ArgumentList	( ref * ) dest		8863970	1					
ANR	8864258	Argument	( ref * ) dest		8863970	0					
ANR	8864259	CastExpression	( ref * ) dest		8863970	0					
ANR	8864260	CastTarget	ref *		8863970	0					
ANR	8864261	Identifier	dest		8863970	1					
ANR	8864262	Argument	& rtemp		8863970	1					
ANR	8864263	UnaryOperationExpression	& rtemp		8863970	0					
ANR	8864264	UnaryOperator	&		8863970	0					
ANR	8864265	Identifier	rtemp		8863970	1					
ANR	8864266	ExpressionStatement	src += packed_per_ref	727:16:26292:26313	8863970	5	True				
ANR	8864267	AssignmentExpression	src += packed_per_ref		8863970	0		+=			
ANR	8864268	Identifier	src		8863970	0					
ANR	8864269	Identifier	packed_per_ref		8863970	1					
ANR	8864270	ExpressionStatement	dest += packed_per_ref	728:16:26331:26353	8863970	6	True				
ANR	8864271	AssignmentExpression	dest += packed_per_ref		8863970	0		+=			
ANR	8864272	Identifier	dest		8863970	0					
ANR	8864273	Identifier	packed_per_ref		8863970	1					
ANR	8864274	ElseStatement	else		8863970	0					
ANR	8864275	CompoundStatement		63:19:2322:2322	8863970	0					
ANR	8864276	ExpressionStatement	src += packed_per_ref	730:16:26422:26443	8863970	0	True				
ANR	8864277	AssignmentExpression	src += packed_per_ref		8863970	0		+=			
ANR	8864278	Identifier	src		8863970	0					
ANR	8864279	Identifier	packed_per_ref		8863970	1					
ANR	8864280	IfStatement	if ( src >= end )		8863970	1					
ANR	8864281	Condition	src >= end	731:20:26465:26474	8863970	0	True				
ANR	8864282	RelationalExpression	src >= end		8863970	0		>=			
ANR	8864283	Identifier	src		8863970	0					
ANR	8864284	Identifier	end		8863970	1					
ANR	8864285	BreakStatement	break ;	732:20:26497:26502	8863970	1	True				
ANR	8864286	ExpressionStatement	new_size = ( byte * ) dest - ( byte * ) ( dpre + 1 ) + sizeof ( ref )	736:4:26538:26598	8863970	9	True				
ANR	8864287	AssignmentExpression	new_size = ( byte * ) dest - ( byte * ) ( dpre + 1 ) + sizeof ( ref )		8863970	0		=			
ANR	8864288	Identifier	new_size		8863970	0					
ANR	8864289	AdditiveExpression	( byte * ) dest - ( byte * ) ( dpre + 1 ) + sizeof ( ref )		8863970	1		-			
ANR	8864290	CastExpression	( byte * ) dest		8863970	0					
ANR	8864291	CastTarget	byte *		8863970	0					
ANR	8864292	Identifier	dest		8863970	1					
ANR	8864293	AdditiveExpression	( byte * ) ( dpre + 1 ) + sizeof ( ref )		8863970	1		+			
ANR	8864294	CastExpression	( byte * ) ( dpre + 1 )		8863970	0					
ANR	8864295	CastTarget	byte *		8863970	0					
ANR	8864296	AdditiveExpression	dpre + 1		8863970	1		+			
ANR	8864297	Identifier	dpre		8863970	0					
ANR	8864298	PrimaryExpression	1		8863970	1					
ANR	8864299	SizeofExpression	sizeof ( ref )		8863970	1					
ANR	8864300	Sizeof	sizeof		8863970	0					
ANR	8864301	SizeofOperand	ref		8863970	1					
ANR	8864302	IfStatement	if ( ( byte * ) src - ( byte * ) dest != r_size ( ( ref * ) src - 1 ) + sizeof ( ref ) )		8863970	10					
ANR	8864303	Condition	( byte * ) src - ( byte * ) dest != r_size ( ( ref * ) src - 1 ) + sizeof ( ref )	740:8:26731:26799	8863970	0	True				
ANR	8864304	EqualityExpression	( byte * ) src - ( byte * ) dest != r_size ( ( ref * ) src - 1 ) + sizeof ( ref )		8863970	0		!=			
ANR	8864305	AdditiveExpression	( byte * ) src - ( byte * ) dest		8863970	0		-			
ANR	8864306	CastExpression	( byte * ) src		8863970	0					
ANR	8864307	CastTarget	byte *		8863970	0					
ANR	8864308	Identifier	src		8863970	1					
ANR	8864309	CastExpression	( byte * ) dest		8863970	1					
ANR	8864310	CastTarget	byte *		8863970	0					
ANR	8864311	Identifier	dest		8863970	1					
ANR	8864312	AdditiveExpression	r_size ( ( ref * ) src - 1 ) + sizeof ( ref )		8863970	1		+			
ANR	8864313	CallExpression	r_size ( ( ref * ) src - 1 )		8863970	0					
ANR	8864314	Callee	r_size		8863970	0					
ANR	8864315	Identifier	r_size		8863970	0					
ANR	8864316	ArgumentList	( ref * ) src - 1		8863970	1					
ANR	8864317	Argument	( ref * ) src - 1		8863970	0					
ANR	8864318	AdditiveExpression	( ref * ) src - 1		8863970	0		-			
ANR	8864319	CastExpression	( ref * ) src		8863970	0					
ANR	8864320	CastTarget	ref *		8863970	0					
ANR	8864321	Identifier	src		8863970	1					
ANR	8864322	PrimaryExpression	1		8863970	1					
ANR	8864323	SizeofExpression	sizeof ( ref )		8863970	1					
ANR	8864324	Sizeof	sizeof		8863970	0					
ANR	8864325	SizeofOperand	ref		8863970	1					
ANR	8864326	CompoundStatement		74:79:2750:2750	8863970	1					
ANR	8864327	ExpressionStatement	"mlprintf3 ( mem , ""Reloc error for refs 0x%lx: reloc = %lu, stored = %u\\n"" , ( ulong ) dpre , ( ulong ) ( ( byte * ) src - ( byte * ) dest ) , ( uint ) r_size ( ( ref * ) src - 1 ) )"	741:8:26812:27004	8863970	0	True				
ANR	8864328	CallExpression	"mlprintf3 ( mem , ""Reloc error for refs 0x%lx: reloc = %lu, stored = %u\\n"" , ( ulong ) dpre , ( ulong ) ( ( byte * ) src - ( byte * ) dest ) , ( uint ) r_size ( ( ref * ) src - 1 ) )"		8863970	0					
ANR	8864329	Callee	mlprintf3		8863970	0					
ANR	8864330	Identifier	mlprintf3		8863970	0					
ANR	8864331	ArgumentList	mem		8863970	1					
ANR	8864332	Argument	mem		8863970	0					
ANR	8864333	Identifier	mem		8863970	0					
ANR	8864334	Argument	"""Reloc error for refs 0x%lx: reloc = %lu, stored = %u\\n"""		8863970	1					
ANR	8864335	PrimaryExpression	"""Reloc error for refs 0x%lx: reloc = %lu, stored = %u\\n"""		8863970	0					
ANR	8864336	Argument	( ulong ) dpre		8863970	2					
ANR	8864337	CastExpression	( ulong ) dpre		8863970	0					
ANR	8864338	CastTarget	ulong		8863970	0					
ANR	8864339	Identifier	dpre		8863970	1					
ANR	8864340	Argument	( ulong ) ( ( byte * ) src - ( byte * ) dest )		8863970	3					
ANR	8864341	CastExpression	( ulong ) ( ( byte * ) src - ( byte * ) dest )		8863970	0					
ANR	8864342	CastTarget	ulong		8863970	0					
ANR	8864343	AdditiveExpression	( byte * ) src - ( byte * ) dest		8863970	1		-			
ANR	8864344	CastExpression	( byte * ) src		8863970	0					
ANR	8864345	CastTarget	byte *		8863970	0					
ANR	8864346	Identifier	src		8863970	1					
ANR	8864347	CastExpression	( byte * ) dest		8863970	1					
ANR	8864348	CastTarget	byte *		8863970	0					
ANR	8864349	Identifier	dest		8863970	1					
ANR	8864350	Argument	( uint ) r_size ( ( ref * ) src - 1 )		8863970	4					
ANR	8864351	CastExpression	( uint ) r_size ( ( ref * ) src - 1 )		8863970	0					
ANR	8864352	CastTarget	uint		8863970	0					
ANR	8864353	CallExpression	r_size ( ( ref * ) src - 1 )		8863970	1					
ANR	8864354	Callee	r_size		8863970	0					
ANR	8864355	Identifier	r_size		8863970	0					
ANR	8864356	ArgumentList	( ref * ) src - 1		8863970	1					
ANR	8864357	Argument	( ref * ) src - 1		8863970	0					
ANR	8864358	AdditiveExpression	( ref * ) src - 1		8863970	0		-			
ANR	8864359	CastExpression	( ref * ) src		8863970	0					
ANR	8864360	CastTarget	ref *		8863970	0					
ANR	8864361	Identifier	src		8863970	1					
ANR	8864362	PrimaryExpression	1		8863970	1					
ANR	8864363	ExpressionStatement	gs_abort ( mem )	744:8:27014:27027	8863970	1	True				
ANR	8864364	CallExpression	gs_abort ( mem )		8863970	0					
ANR	8864365	Callee	gs_abort		8863970	0					
ANR	8864366	Identifier	gs_abort		8863970	0					
ANR	8864367	ArgumentList	mem		8863970	1					
ANR	8864368	Argument	mem		8863970	0					
ANR	8864369	Identifier	mem		8863970	0					
ANR	8864370	WhileStatement	while ( new_size % sizeof ( ref ) )		8863970	11					
ANR	8864371	Condition	new_size % sizeof ( ref )	748:11:27097:27118	8863970	0	True				
ANR	8864372	MultiplicativeExpression	new_size % sizeof ( ref )		8863970	0		%			
ANR	8864373	Identifier	new_size		8863970	0					
ANR	8864374	SizeofExpression	sizeof ( ref )		8863970	1					
ANR	8864375	Sizeof	sizeof		8863970	0					
ANR	8864376	SizeofOperand	ref		8863970	1					
ANR	8864377	ExpressionStatement	"* dest ++ = pt_tag ( pt_integer ) , new_size += sizeof ( ref_packed )"	749:8:27129:27201	8863970	1	True				
ANR	8864378	Expression	"* dest ++ = pt_tag ( pt_integer ) , new_size += sizeof ( ref_packed )"		8863970	0					
ANR	8864379	AssignmentExpression	* dest ++ = pt_tag ( pt_integer )		8863970	0		=			
ANR	8864380	UnaryOperationExpression	* dest ++		8863970	0					
ANR	8864381	UnaryOperator	*		8863970	0					
ANR	8864382	PostIncDecOperationExpression	dest ++		8863970	1					
ANR	8864383	Identifier	dest		8863970	0					
ANR	8864384	IncDec	++		8863970	1					
ANR	8864385	CallExpression	pt_tag ( pt_integer )		8863970	1					
ANR	8864386	Callee	pt_tag		8863970	0					
ANR	8864387	Identifier	pt_tag		8863970	0					
ANR	8864388	ArgumentList	pt_integer		8863970	1					
ANR	8864389	Argument	pt_integer		8863970	0					
ANR	8864390	Identifier	pt_integer		8863970	0					
ANR	8864391	AssignmentExpression	new_size += sizeof ( ref_packed )		8863970	1		+=			
ANR	8864392	Identifier	new_size		8863970	0					
ANR	8864393	SizeofExpression	sizeof ( ref_packed )		8863970	1					
ANR	8864394	Sizeof	sizeof		8863970	0					
ANR	8864395	SizeofOperand	ref_packed		8863970	1					
ANR	8864396	IfStatement	if ( size - new_size < sizeof ( obj_header_t ) )		8863970	12					
ANR	8864397	Condition	size - new_size < sizeof ( obj_header_t )	753:8:27336:27373	8863970	0	True				
ANR	8864398	RelationalExpression	size - new_size < sizeof ( obj_header_t )		8863970	0		<			
ANR	8864399	AdditiveExpression	size - new_size		8863970	0		-			
ANR	8864400	Identifier	size		8863970	0					
ANR	8864401	Identifier	new_size		8863970	1					
ANR	8864402	SizeofExpression	sizeof ( obj_header_t )		8863970	1					
ANR	8864403	Sizeof	sizeof		8863970	0					
ANR	8864404	SizeofOperand	obj_header_t		8863970	1					
ANR	8864405	CompoundStatement		87:48:3324:3324	8863970	1					
ANR	8864406	WhileStatement	while ( new_size < size )		8863970	0					
ANR	8864407	Condition	new_size < size	754:15:27439:27453	8863970	0	True				
ANR	8864408	RelationalExpression	new_size < size		8863970	0		<			
ANR	8864409	Identifier	new_size		8863970	0					
ANR	8864410	Identifier	size		8863970	1					
ANR	8864411	ExpressionStatement	"* dest ++ = pt_tag ( pt_integer ) , new_size += sizeof ( ref_packed )"	755:12:27468:27544	8863970	1	True				
ANR	8864412	Expression	"* dest ++ = pt_tag ( pt_integer ) , new_size += sizeof ( ref_packed )"		8863970	0					
ANR	8864413	AssignmentExpression	* dest ++ = pt_tag ( pt_integer )		8863970	0		=			
ANR	8864414	UnaryOperationExpression	* dest ++		8863970	0					
ANR	8864415	UnaryOperator	*		8863970	0					
ANR	8864416	PostIncDecOperationExpression	dest ++		8863970	1					
ANR	8864417	Identifier	dest		8863970	0					
ANR	8864418	IncDec	++		8863970	1					
ANR	8864419	CallExpression	pt_tag ( pt_integer )		8863970	1					
ANR	8864420	Callee	pt_tag		8863970	0					
ANR	8864421	Identifier	pt_tag		8863970	0					
ANR	8864422	ArgumentList	pt_integer		8863970	1					
ANR	8864423	Argument	pt_integer		8863970	0					
ANR	8864424	Identifier	pt_integer		8863970	0					
ANR	8864425	AssignmentExpression	new_size += sizeof ( ref_packed )		8863970	1		+=			
ANR	8864426	Identifier	new_size		8863970	0					
ANR	8864427	SizeofExpression	sizeof ( ref_packed )		8863970	1					
ANR	8864428	Sizeof	sizeof		8863970	0					
ANR	8864429	SizeofOperand	ref_packed		8863970	1					
ANR	8864430	ElseStatement	else		8863970	0					
ANR	8864431	CompoundStatement		92:8:3515:3572	8863970	0					
ANR	8864432	IdentifierDeclStatement	obj_header_t * pfree = ( obj_header_t * ) ( ( ref * ) dest + 1 ) ;	758:8:27567:27624	8863970	0	True				
ANR	8864433	IdentifierDecl	* pfree = ( obj_header_t * ) ( ( ref * ) dest + 1 )		8863970	0					
ANR	8864434	IdentifierDeclType	obj_header_t *		8863970	0					
ANR	8864435	Identifier	pfree		8863970	1					
ANR	8864436	AssignmentExpression	* pfree = ( obj_header_t * ) ( ( ref * ) dest + 1 )		8863970	2		=			
ANR	8864437	Identifier	pfree		8863970	0					
ANR	8864438	CastExpression	( obj_header_t * ) ( ( ref * ) dest + 1 )		8863970	1					
ANR	8864439	CastTarget	obj_header_t *		8863970	0					
ANR	8864440	AdditiveExpression	( ref * ) dest + 1		8863970	1		+			
ANR	8864441	CastExpression	( ref * ) dest		8863970	0					
ANR	8864442	CastTarget	ref *		8863970	0					
ANR	8864443	Identifier	dest		8863970	1					
ANR	8864444	PrimaryExpression	1		8863970	1					
ANR	8864445	ExpressionStatement	pfree -> o_pad = 0	760:8:27635:27651	8863970	1	True				
ANR	8864446	AssignmentExpression	pfree -> o_pad = 0		8863970	0		=			
ANR	8864447	PtrMemberAccess	pfree -> o_pad		8863970	0					
ANR	8864448	Identifier	pfree		8863970	0					
ANR	8864449	Identifier	o_pad		8863970	1					
ANR	8864450	PrimaryExpression	0		8863970	1					
ANR	8864451	ExpressionStatement	pfree -> o_alone = 0	761:8:27661:27679	8863970	2	True				
ANR	8864452	AssignmentExpression	pfree -> o_alone = 0		8863970	0		=			
ANR	8864453	PtrMemberAccess	pfree -> o_alone		8863970	0					
ANR	8864454	Identifier	pfree		8863970	0					
ANR	8864455	Identifier	o_alone		8863970	1					
ANR	8864456	PrimaryExpression	0		8863970	1					
ANR	8864457	ExpressionStatement	pfree -> o_size = size - new_size - sizeof ( obj_header_t )	762:8:27689:27743	8863970	3	True				
ANR	8864458	AssignmentExpression	pfree -> o_size = size - new_size - sizeof ( obj_header_t )		8863970	0		=			
ANR	8864459	PtrMemberAccess	pfree -> o_size		8863970	0					
ANR	8864460	Identifier	pfree		8863970	0					
ANR	8864461	Identifier	o_size		8863970	1					
ANR	8864462	AdditiveExpression	size - new_size - sizeof ( obj_header_t )		8863970	1		-			
ANR	8864463	Identifier	size		8863970	0					
ANR	8864464	AdditiveExpression	new_size - sizeof ( obj_header_t )		8863970	1		-			
ANR	8864465	Identifier	new_size		8863970	0					
ANR	8864466	SizeofExpression	sizeof ( obj_header_t )		8863970	1					
ANR	8864467	Sizeof	sizeof		8863970	0					
ANR	8864468	SizeofOperand	obj_header_t		8863970	1					
ANR	8864469	ExpressionStatement	pfree -> o_type = & st_bytes	763:8:27753:27778	8863970	4	True				
ANR	8864470	AssignmentExpression	pfree -> o_type = & st_bytes		8863970	0		=			
ANR	8864471	PtrMemberAccess	pfree -> o_type		8863970	0					
ANR	8864472	Identifier	pfree		8863970	0					
ANR	8864473	Identifier	o_type		8863970	1					
ANR	8864474	UnaryOperationExpression	& st_bytes		8863970	1					
ANR	8864475	UnaryOperator	&		8863970	0					
ANR	8864476	Identifier	st_bytes		8863970	1					
ANR	8864477	ExpressionStatement	"r_set_type ( ( ref * ) dest , t_integer )"	766:4:27825:27860	8863970	13	True				
ANR	8864478	CallExpression	"r_set_type ( ( ref * ) dest , t_integer )"		8863970	0					
ANR	8864479	Callee	r_set_type		8863970	0					
ANR	8864480	Identifier	r_set_type		8863970	0					
ANR	8864481	ArgumentList	( ref * ) dest		8863970	1					
ANR	8864482	Argument	( ref * ) dest		8863970	0					
ANR	8864483	CastExpression	( ref * ) dest		8863970	0					
ANR	8864484	CastTarget	ref *		8863970	0					
ANR	8864485	Identifier	dest		8863970	1					
ANR	8864486	Argument	t_integer		8863970	1					
ANR	8864487	Identifier	t_integer		8863970	0					
ANR	8864488	ExpressionStatement	dpre -> o_size = new_size	767:4:27866:27889	8863970	14	True				
ANR	8864489	AssignmentExpression	dpre -> o_size = new_size		8863970	0		=			
ANR	8864490	PtrMemberAccess	dpre -> o_size		8863970	0					
ANR	8864491	Identifier	dpre		8863970	0					
ANR	8864492	Identifier	o_size		8863970	1					
ANR	8864493	Identifier	new_size		8863970	1					
ANR	8864494	ReturnType	static void		8863970	1					
ANR	8864495	Identifier	refs_compact		8863970	2					
ANR	8864496	ParameterList	"const gs_memory_t * mem , obj_header_t * pre , obj_header_t * dpre , uint size"		8863970	3					
ANR	8864497	Parameter	const gs_memory_t * mem	666:13:23975:23996	8863970	0	True				
ANR	8864498	ParameterType	const gs_memory_t *		8863970	0					
ANR	8864499	Identifier	mem		8863970	1					
ANR	8864500	Parameter	obj_header_t * pre	666:37:23999:24016	8863970	1	True				
ANR	8864501	ParameterType	obj_header_t *		8863970	0					
ANR	8864502	Identifier	pre		8863970	1					
ANR	8864503	Parameter	obj_header_t * dpre	666:57:24019:24037	8863970	2	True				
ANR	8864504	ParameterType	obj_header_t *		8863970	0					
ANR	8864505	Identifier	dpre		8863970	1					
ANR	8864506	Parameter	uint size	666:78:24040:24048	8863970	3	True				
ANR	8864507	ParameterType	uint		8863970	0					
ANR	8864508	Identifier	size		8863970	1					
ANR	8864509	CFGEntryNode	ENTRY		8863970		True				
ANR	8864510	CFGExitNode	EXIT		8863970		True				
ANR	8864511	InfiniteForNode	true		8863970		True				
ANR	8864512	InfiniteForNode	true		8863970		True				
ANR	8864513	Symbol	r_is_packed		8863970						
ANR	8864514	Symbol	pfree		8863970						
ANR	8864515	Symbol	& rtemp		8863970						
ANR	8864516	Symbol	dest		8863970						
ANR	8864517	Symbol	* pre		8863970						
ANR	8864518	Symbol	pfree -> o_pad		8863970						
ANR	8864519	Symbol	* src		8863970						
ANR	8864520	Symbol	dpre		8863970						
ANR	8864521	Symbol	dpre -> o_size		8863970						
ANR	8864522	Symbol	mem		8863970						
ANR	8864523	Symbol	r_has_attr		8863970						
ANR	8864524	Symbol	r_has_pmark		8863970						
ANR	8864525	Symbol	new_size		8863970						
ANR	8864526	Symbol	pref		8863970						
ANR	8864527	Symbol	r_size		8863970						
ANR	8864528	Symbol	end		8863970						
ANR	8864529	Symbol	* dest ++		8863970						
ANR	8864530	Symbol	pfree -> o_alone		8863970						
ANR	8864531	Symbol	* pfree		8863970						
ANR	8864532	Symbol	pre		8863970						
ANR	8864533	Symbol	src		8863970						
ANR	8864534	Symbol	packed_per_ref		8863970						
ANR	8864535	Symbol	* dpre		8863970						
ANR	8864536	Symbol	~lp_mark		8863970						
ANR	8864537	Symbol	pt_integer		8863970						
ANR	8864538	Symbol	& st_bytes		8863970						
ANR	8864539	Symbol	pt_tag		8863970						
ANR	8864540	Symbol	pfree -> o_type		8863970						
ANR	8864541	Symbol	size		8863970						
ANR	8864542	Symbol	t_integer		8863970						
ANR	8864543	Symbol	l_mark		8863970						
ANR	8864544	Symbol	rtemp		8863970						
ANR	8864545	Symbol	pfree -> o_size		8863970						
