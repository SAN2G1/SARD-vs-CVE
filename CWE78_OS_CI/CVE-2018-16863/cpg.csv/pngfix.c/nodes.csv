command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8517718	File	data/converged/CVE-2018-16863_ghostpdl/pngfix.c								
ANR	8517719	DeclStmt									
ANR	8517720	Decl							png_uint_16	png_uint_16	udigit
ANR	8517721	DeclStmt									
ANR	8517722	Decl							png_uint_16p	png_uint_16p	uarb
ANR	8517723	DeclStmt									
ANR	8517724	Decl							png_const_uint_16p	png_const_uint_16p	uarbc
ANR	8517725	Function	uarb_set	182:0:6028:6391							
ANR	8517726	FunctionDef	"uarb_set (uarb result , png_alloc_size_t val)"		8517725	0					
ANR	8517727	CompoundStatement		187:0:6246:6391	8517725	0					
ANR	8517728	IdentifierDeclStatement	int ndigits = 0 ;	188:3:6251:6266	8517725	0	True				
ANR	8517729	IdentifierDecl	ndigits = 0		8517725	0					
ANR	8517730	IdentifierDeclType	int		8517725	0					
ANR	8517731	Identifier	ndigits		8517725	1					
ANR	8517732	AssignmentExpression	ndigits = 0		8517725	2		=			
ANR	8517733	Identifier	ndigits		8517725	0					
ANR	8517734	PrimaryExpression	0		8517725	1					
ANR	8517735	WhileStatement	while ( val > 0 )		8517725	1					
ANR	8517736	Condition	val > 0	190:10:6279:6285	8517725	0	True				
ANR	8517737	RelationalExpression	val > 0		8517725	0		>			
ANR	8517738	Identifier	val		8517725	0					
ANR	8517739	PrimaryExpression	0		8517725	1					
ANR	8517740	CompoundStatement		5:3:44:44	8517725	1					
ANR	8517741	ExpressionStatement	result [ ndigits ++ ] = ( png_uint_16 ) ( val & 0xffff )	192:6:6299:6346	8517725	0	True				
ANR	8517742	AssignmentExpression	result [ ndigits ++ ] = ( png_uint_16 ) ( val & 0xffff )		8517725	0		=			
ANR	8517743	ArrayIndexing	result [ ndigits ++ ]		8517725	0					
ANR	8517744	Identifier	result		8517725	0					
ANR	8517745	PostIncDecOperationExpression	ndigits ++		8517725	1					
ANR	8517746	Identifier	ndigits		8517725	0					
ANR	8517747	IncDec	++		8517725	1					
ANR	8517748	CastExpression	( png_uint_16 ) ( val & 0xffff )		8517725	1					
ANR	8517749	CastTarget	png_uint_16		8517725	0					
ANR	8517750	BitAndExpression	val & 0xffff		8517725	1		&			
ANR	8517751	Identifier	val		8517725	0					
ANR	8517752	PrimaryExpression	0xffff		8517725	1					
ANR	8517753	ExpressionStatement	val >>= 16	193:6:6354:6364	8517725	1	True				
ANR	8517754	AssignmentExpression	val >>= 16		8517725	0		>>=			
ANR	8517755	Identifier	val		8517725	0					
ANR	8517756	PrimaryExpression	16		8517725	1					
ANR	8517757	ReturnStatement	return ndigits ;	196:3:6375:6389	8517725	2	True				
ANR	8517758	Identifier	ndigits		8517725	0					
ANR	8517759	ReturnType	static int		8517725	1					
ANR	8517760	Identifier	uarb_set		8517725	2					
ANR	8517761	ParameterList	"uarb result , png_alloc_size_t val"		8517725	3					
ANR	8517762	Parameter	uarb result	183:9:6048:6058	8517725	0	True				
ANR	8517763	ParameterType	uarb		8517725	0					
ANR	8517764	Identifier	result		8517725	1					
ANR	8517765	Parameter	png_alloc_size_t val	183:22:6061:6080	8517725	1	True				
ANR	8517766	ParameterType	png_alloc_size_t		8517725	0					
ANR	8517767	Identifier	val		8517725	1					
ANR	8517768	CFGEntryNode	ENTRY		8517725		True				
ANR	8517769	CFGExitNode	EXIT		8517725		True				
ANR	8517770	Symbol	result		8517725						
ANR	8517771	Symbol	val		8517725						
ANR	8517772	Symbol	* result		8517725						
ANR	8517773	Symbol	ndigits		8517725						
ANR	8517774	Function	uarb_copy	199:0:6394:6634							
ANR	8517775	FunctionDef	"uarb_copy (uarb to , uarb from , int idigits)"		8517774	0					
ANR	8517776	CompoundStatement		202:0:6497:6634	8517774	0					
ANR	8517777	IdentifierDeclStatement	"int d , odigits ;"	203:3:6502:6516	8517774	0	True				
ANR	8517778	IdentifierDecl	d		8517774	0					
ANR	8517779	IdentifierDeclType	int		8517774	0					
ANR	8517780	Identifier	d		8517774	1					
ANR	8517781	IdentifierDecl	odigits		8517774	1					
ANR	8517782	IdentifierDeclType	int		8517774	0					
ANR	8517783	Identifier	odigits		8517774	1					
ANR	8517784	ForStatement	for ( d = odigits = 0 ; d < idigits ; ++ d )		8517774	1					
ANR	8517785	ForInit	d = odigits = 0 ;	205:8:6527:6538	8517774	0	True				
ANR	8517786	AssignmentExpression	d = odigits = 0		8517774	0		=			
ANR	8517787	Identifier	d		8517774	0					
ANR	8517788	AssignmentExpression	odigits = 0		8517774	1		=			
ANR	8517789	Identifier	odigits		8517774	0					
ANR	8517790	PrimaryExpression	0		8517774	1					
ANR	8517791	Condition	d < idigits	205:21:6540:6548	8517774	1	True				
ANR	8517792	RelationalExpression	d < idigits		8517774	0		<			
ANR	8517793	Identifier	d		8517774	0					
ANR	8517794	Identifier	idigits		8517774	1					
ANR	8517795	UnaryExpression	++ d	205:32:6551:6553	8517774	2	True				
ANR	8517796	IncDec	++		8517774	0					
ANR	8517797	Identifier	d		8517774	1					
ANR	8517798	IfStatement	if ( ( to [ d ] = from [ d ] ) != 0 )		8517774	3					
ANR	8517799	Condition	( to [ d ] = from [ d ] ) != 0	206:10:6566:6587	8517774	0	True				
ANR	8517800	EqualityExpression	( to [ d ] = from [ d ] ) != 0		8517774	0		!=			
ANR	8517801	AssignmentExpression	to [ d ] = from [ d ]		8517774	0		=			
ANR	8517802	ArrayIndexing	to [ d ]		8517774	0					
ANR	8517803	Identifier	to		8517774	0					
ANR	8517804	Identifier	d		8517774	1					
ANR	8517805	ArrayIndexing	from [ d ]		8517774	1					
ANR	8517806	Identifier	from		8517774	0					
ANR	8517807	Identifier	d		8517774	1					
ANR	8517808	PrimaryExpression	0		8517774	1					
ANR	8517809	ExpressionStatement	odigits = d + 1	207:9:6599:6612	8517774	1	True				
ANR	8517810	AssignmentExpression	odigits = d + 1		8517774	0		=			
ANR	8517811	Identifier	odigits		8517774	0					
ANR	8517812	AdditiveExpression	d + 1		8517774	1		+			
ANR	8517813	Identifier	d		8517774	0					
ANR	8517814	PrimaryExpression	1		8517774	1					
ANR	8517815	ReturnStatement	return odigits ;	209:3:6618:6632	8517774	2	True				
ANR	8517816	Identifier	odigits		8517774	0					
ANR	8517817	ReturnType	static int		8517774	1					
ANR	8517818	Identifier	uarb_copy		8517774	2					
ANR	8517819	ParameterList	"uarb to , uarb from , int idigits"		8517774	3					
ANR	8517820	Parameter	uarb to	200:10:6415:6421	8517774	0	True				
ANR	8517821	ParameterType	uarb		8517774	0					
ANR	8517822	Identifier	to		8517774	1					
ANR	8517823	Parameter	uarb from	200:19:6424:6432	8517774	1	True				
ANR	8517824	ParameterType	uarb		8517774	0					
ANR	8517825	Identifier	from		8517774	1					
ANR	8517826	Parameter	int idigits	200:30:6435:6445	8517774	2	True				
ANR	8517827	ParameterType	int		8517774	0					
ANR	8517828	Identifier	idigits		8517774	1					
ANR	8517829	CFGEntryNode	ENTRY		8517774		True				
ANR	8517830	CFGExitNode	EXIT		8517774		True				
ANR	8517831	Symbol	* to		8517774						
ANR	8517832	Symbol	d		8517774						
ANR	8517833	Symbol	idigits		8517774						
ANR	8517834	Symbol	odigits		8517774						
ANR	8517835	Symbol	from		8517774						
ANR	8517836	Symbol	to		8517774						
ANR	8517837	Symbol	* d		8517774						
ANR	8517838	Symbol	* from		8517774						
ANR	8517839	Function	uarb_inc	212:0:6637:7674							
ANR	8517840	FunctionDef	"uarb_inc (uarb num , int in_digits , png_int_32 add)"		8517839	0					
ANR	8517841	CompoundStatement		220:0:7077:7674	8517839	0					
ANR	8517842	IdentifierDeclStatement	FIX_GCC int out_digits = 0 ;	221:3:7082:7108	8517839	0	True				
ANR	8517843	IdentifierDecl	out_digits = 0		8517839	0					
ANR	8517844	IdentifierDeclType	FIX_GCC int		8517839	0					
ANR	8517845	Identifier	out_digits		8517839	1					
ANR	8517846	AssignmentExpression	out_digits = 0		8517839	2		=			
ANR	8517847	Identifier	out_digits		8517839	0					
ANR	8517848	PrimaryExpression	0		8517839	1					
ANR	8517849	WhileStatement	while ( out_digits < in_digits )		8517839	1					
ANR	8517850	Condition	out_digits < in_digits	223:10:7121:7142	8517839	0	True				
ANR	8517851	RelationalExpression	out_digits < in_digits		8517839	0		<			
ANR	8517852	Identifier	out_digits		8517839	0					
ANR	8517853	Identifier	in_digits		8517839	1					
ANR	8517854	CompoundStatement		5:3:70:70	8517839	1					
ANR	8517855	ExpressionStatement	add += num [ out_digits ]	225:6:7156:7178	8517839	0	True				
ANR	8517856	AssignmentExpression	add += num [ out_digits ]		8517839	0		+=			
ANR	8517857	Identifier	add		8517839	0					
ANR	8517858	ArrayIndexing	num [ out_digits ]		8517839	1					
ANR	8517859	Identifier	num		8517839	0					
ANR	8517860	Identifier	out_digits		8517839	1					
ANR	8517861	ExpressionStatement	num [ out_digits ++ ] = ( png_uint_16 ) ( add & 0xffff )	226:6:7186:7233	8517839	1	True				
ANR	8517862	AssignmentExpression	num [ out_digits ++ ] = ( png_uint_16 ) ( add & 0xffff )		8517839	0		=			
ANR	8517863	ArrayIndexing	num [ out_digits ++ ]		8517839	0					
ANR	8517864	Identifier	num		8517839	0					
ANR	8517865	PostIncDecOperationExpression	out_digits ++		8517839	1					
ANR	8517866	Identifier	out_digits		8517839	0					
ANR	8517867	IncDec	++		8517839	1					
ANR	8517868	CastExpression	( png_uint_16 ) ( add & 0xffff )		8517839	1					
ANR	8517869	CastTarget	png_uint_16		8517839	0					
ANR	8517870	BitAndExpression	add & 0xffff		8517839	1		&			
ANR	8517871	Identifier	add		8517839	0					
ANR	8517872	PrimaryExpression	0xffff		8517839	1					
ANR	8517873	ExpressionStatement	add >>= 16	227:6:7241:7251	8517839	2	True				
ANR	8517874	AssignmentExpression	add >>= 16		8517839	0		>>=			
ANR	8517875	Identifier	add		8517839	0					
ANR	8517876	PrimaryExpression	16		8517839	1					
ANR	8517877	WhileStatement	while ( add != 0 && add != ( - 1 ) )		8517839	2					
ANR	8517878	Condition	add != 0 && add != ( - 1 )	230:10:7269:7291	8517839	0	True				
ANR	8517879	AndExpression	add != 0 && add != ( - 1 )		8517839	0		&&			
ANR	8517880	EqualityExpression	add != 0		8517839	0		!=			
ANR	8517881	Identifier	add		8517839	0					
ANR	8517882	PrimaryExpression	0		8517839	1					
ANR	8517883	EqualityExpression	add != ( - 1 )		8517839	1		!=			
ANR	8517884	Identifier	add		8517839	0					
ANR	8517885	UnaryOperationExpression	- 1		8517839	1					
ANR	8517886	UnaryOperator	-		8517839	0					
ANR	8517887	PrimaryExpression	1		8517839	1					
ANR	8517888	CompoundStatement		12:3:219:219	8517839	1					
ANR	8517889	ExpressionStatement	num [ out_digits ++ ] = ( png_uint_16 ) ( add & 0xffff )	232:6:7305:7352	8517839	0	True				
ANR	8517890	AssignmentExpression	num [ out_digits ++ ] = ( png_uint_16 ) ( add & 0xffff )		8517839	0		=			
ANR	8517891	ArrayIndexing	num [ out_digits ++ ]		8517839	0					
ANR	8517892	Identifier	num		8517839	0					
ANR	8517893	PostIncDecOperationExpression	out_digits ++		8517839	1					
ANR	8517894	Identifier	out_digits		8517839	0					
ANR	8517895	IncDec	++		8517839	1					
ANR	8517896	CastExpression	( png_uint_16 ) ( add & 0xffff )		8517839	1					
ANR	8517897	CastTarget	png_uint_16		8517839	0					
ANR	8517898	BitAndExpression	add & 0xffff		8517839	1		&			
ANR	8517899	Identifier	add		8517839	0					
ANR	8517900	PrimaryExpression	0xffff		8517839	1					
ANR	8517901	ExpressionStatement	add >>= 16	233:6:7360:7370	8517839	1	True				
ANR	8517902	AssignmentExpression	add >>= 16		8517839	0		>>=			
ANR	8517903	Identifier	add		8517839	0					
ANR	8517904	PrimaryExpression	16		8517839	1					
ANR	8517905	IfStatement	if ( add == 0 )		8517839	3					
ANR	8517906	Condition	add == 0	236:7:7385:7392	8517839	0	True				
ANR	8517907	EqualityExpression	add == 0		8517839	0		==			
ANR	8517908	Identifier	add		8517839	0					
ANR	8517909	PrimaryExpression	0		8517839	1					
ANR	8517910	CompoundStatement		18:3:320:320	8517839	1					
ANR	8517911	WhileStatement	while ( out_digits > 0 && num [ out_digits - 1 ] == 0 )		8517839	0					
ANR	8517912	Condition	out_digits > 0 && num [ out_digits - 1 ] == 0	238:13:7413:7452	8517839	0	True				
ANR	8517913	AndExpression	out_digits > 0 && num [ out_digits - 1 ] == 0		8517839	0		&&			
ANR	8517914	RelationalExpression	out_digits > 0		8517839	0		>			
ANR	8517915	Identifier	out_digits		8517839	0					
ANR	8517916	PrimaryExpression	0		8517839	1					
ANR	8517917	EqualityExpression	num [ out_digits - 1 ] == 0		8517839	1		==			
ANR	8517918	ArrayIndexing	num [ out_digits - 1 ]		8517839	0					
ANR	8517919	Identifier	num		8517839	0					
ANR	8517920	AdditiveExpression	out_digits - 1		8517839	1		-			
ANR	8517921	Identifier	out_digits		8517839	0					
ANR	8517922	PrimaryExpression	1		8517839	1					
ANR	8517923	PrimaryExpression	0		8517839	1					
ANR	8517924	ExpressionStatement	-- out_digits	239:9:7464:7476	8517839	1	True				
ANR	8517925	UnaryExpression	-- out_digits		8517839	0					
ANR	8517926	IncDec	--		8517839	0					
ANR	8517927	Identifier	out_digits		8517839	1					
ANR	8517928	ReturnStatement	return out_digits ;	240:6:7484:7501	8517839	1	True				
ANR	8517929	Identifier	out_digits		8517839	0					
ANR	8517930	ElseStatement	else		8517839	0					
ANR	8517931	CompoundStatement		25:3:479:479	8517839	0					
ANR	8517932	WhileStatement	while ( out_digits > 1 && num [ out_digits - 1 ] == 0xffff )		8517839	0					
ANR	8517933	Condition	out_digits > 1 && num [ out_digits - 1 ] == 0xffff	245:13:7572:7616	8517839	0	True				
ANR	8517934	AndExpression	out_digits > 1 && num [ out_digits - 1 ] == 0xffff		8517839	0		&&			
ANR	8517935	RelationalExpression	out_digits > 1		8517839	0		>			
ANR	8517936	Identifier	out_digits		8517839	0					
ANR	8517937	PrimaryExpression	1		8517839	1					
ANR	8517938	EqualityExpression	num [ out_digits - 1 ] == 0xffff		8517839	1		==			
ANR	8517939	ArrayIndexing	num [ out_digits - 1 ]		8517839	0					
ANR	8517940	Identifier	num		8517839	0					
ANR	8517941	AdditiveExpression	out_digits - 1		8517839	1		-			
ANR	8517942	Identifier	out_digits		8517839	0					
ANR	8517943	PrimaryExpression	1		8517839	1					
ANR	8517944	PrimaryExpression	0xffff		8517839	1					
ANR	8517945	ExpressionStatement	-- out_digits	246:9:7628:7640	8517839	1	True				
ANR	8517946	UnaryExpression	-- out_digits		8517839	0					
ANR	8517947	IncDec	--		8517839	0					
ANR	8517948	Identifier	out_digits		8517839	1					
ANR	8517949	ReturnStatement	return - out_digits ;	248:6:7649:7667	8517839	1	True				
ANR	8517950	UnaryOperationExpression	- out_digits		8517839	0					
ANR	8517951	UnaryOperator	-		8517839	0					
ANR	8517952	Identifier	out_digits		8517839	1					
ANR	8517953	ReturnType	static int		8517839	1					
ANR	8517954	Identifier	uarb_inc		8517839	2					
ANR	8517955	ParameterList	"uarb num , int in_digits , png_int_32 add"		8517839	3					
ANR	8517956	Parameter	uarb num	213:9:6657:6664	8517839	0	True				
ANR	8517957	ParameterType	uarb		8517839	0					
ANR	8517958	Identifier	num		8517839	1					
ANR	8517959	Parameter	int in_digits	213:19:6667:6679	8517839	1	True				
ANR	8517960	ParameterType	int		8517839	0					
ANR	8517961	Identifier	in_digits		8517839	1					
ANR	8517962	Parameter	png_int_32 add	213:34:6682:6695	8517839	2	True				
ANR	8517963	ParameterType	png_int_32		8517839	0					
ANR	8517964	Identifier	add		8517839	1					
ANR	8517965	CFGEntryNode	ENTRY		8517839		True				
ANR	8517966	CFGExitNode	EXIT		8517839		True				
ANR	8517967	Symbol	add		8517839						
ANR	8517968	Symbol	* num		8517839						
ANR	8517969	Symbol	* out_digits		8517839						
ANR	8517970	Symbol	out_digits		8517839						
ANR	8517971	Symbol	num		8517839						
ANR	8517972	Symbol	in_digits		8517839						
ANR	8517973	Function	uarb_add32	252:0:7677:7995							
ANR	8517974	FunctionDef	"uarb_add32 (uarb num , int in_digits , png_uint_32 add)"		8517973	0					
ANR	8517975	CompoundStatement		255:0:7816:7995	8517973	0					
ANR	8517976	IfStatement	if ( in_digits > 0 )		8517973	0					
ANR	8517977	Condition	in_digits > 0	256:7:7825:7837	8517973	0	True				
ANR	8517978	RelationalExpression	in_digits > 0		8517973	0		>			
ANR	8517979	Identifier	in_digits		8517973	0					
ANR	8517980	PrimaryExpression	0		8517973	1					
ANR	8517981	CompoundStatement		3:3:26:26	8517973	1					
ANR	8517982	ExpressionStatement	"in_digits = uarb_inc ( num , in_digits , add & 0xffff )"	258:6:7851:7901	8517973	0	True				
ANR	8517983	AssignmentExpression	"in_digits = uarb_inc ( num , in_digits , add & 0xffff )"		8517973	0		=			
ANR	8517984	Identifier	in_digits		8517973	0					
ANR	8517985	CallExpression	"uarb_inc ( num , in_digits , add & 0xffff )"		8517973	1					
ANR	8517986	Callee	uarb_inc		8517973	0					
ANR	8517987	Identifier	uarb_inc		8517973	0					
ANR	8517988	ArgumentList	num		8517973	1					
ANR	8517989	Argument	num		8517973	0					
ANR	8517990	Identifier	num		8517973	0					
ANR	8517991	Argument	in_digits		8517973	1					
ANR	8517992	Identifier	in_digits		8517973	0					
ANR	8517993	Argument	add & 0xffff		8517973	2					
ANR	8517994	BitAndExpression	add & 0xffff		8517973	0		&			
ANR	8517995	Identifier	add		8517973	0					
ANR	8517996	PrimaryExpression	0xffff		8517973	1					
ANR	8517997	ReturnStatement	"return uarb_inc ( num + 1 , in_digits - 1 , add >> 16 ) + 1 ;"	259:6:7909:7957	8517973	1	True				
ANR	8517998	AdditiveExpression	"uarb_inc ( num + 1 , in_digits - 1 , add >> 16 ) + 1"		8517973	0		+			
ANR	8517999	CallExpression	"uarb_inc ( num + 1 , in_digits - 1 , add >> 16 )"		8517973	0					
ANR	8518000	Callee	uarb_inc		8517973	0					
ANR	8518001	Identifier	uarb_inc		8517973	0					
ANR	8518002	ArgumentList	num + 1		8517973	1					
ANR	8518003	Argument	num + 1		8517973	0					
ANR	8518004	AdditiveExpression	num + 1		8517973	0		+			
ANR	8518005	Identifier	num		8517973	0					
ANR	8518006	PrimaryExpression	1		8517973	1					
ANR	8518007	Argument	in_digits - 1		8517973	1					
ANR	8518008	AdditiveExpression	in_digits - 1		8517973	0		-			
ANR	8518009	Identifier	in_digits		8517973	0					
ANR	8518010	PrimaryExpression	1		8517973	1					
ANR	8518011	Argument	add >> 16		8517973	2					
ANR	8518012	ShiftExpression	add >> 16		8517973	0		>>			
ANR	8518013	Identifier	add		8517973	0					
ANR	8518014	PrimaryExpression	16		8517973	1					
ANR	8518015	PrimaryExpression	1		8517973	1					
ANR	8518016	ReturnStatement	"return uarb_set ( num , add ) ;"	262:3:7968:7993	8517973	1	True				
ANR	8518017	CallExpression	"uarb_set ( num , add )"		8517973	0					
ANR	8518018	Callee	uarb_set		8517973	0					
ANR	8518019	Identifier	uarb_set		8517973	0					
ANR	8518020	ArgumentList	num		8517973	1					
ANR	8518021	Argument	num		8517973	0					
ANR	8518022	Identifier	num		8517973	0					
ANR	8518023	Argument	add		8517973	1					
ANR	8518024	Identifier	add		8517973	0					
ANR	8518025	ReturnType	static int		8517973	1					
ANR	8518026	Identifier	uarb_add32		8517973	2					
ANR	8518027	ParameterList	"uarb num , int in_digits , png_uint_32 add"		8517973	3					
ANR	8518028	Parameter	uarb num	253:11:7699:7706	8517973	0	True				
ANR	8518029	ParameterType	uarb		8517973	0					
ANR	8518030	Identifier	num		8517973	1					
ANR	8518031	Parameter	int in_digits	253:21:7709:7721	8517973	1	True				
ANR	8518032	ParameterType	int		8517973	0					
ANR	8518033	Identifier	in_digits		8517973	1					
ANR	8518034	Parameter	png_uint_32 add	253:36:7724:7738	8517973	2	True				
ANR	8518035	ParameterType	png_uint_32		8517973	0					
ANR	8518036	Identifier	add		8517973	1					
ANR	8518037	CFGEntryNode	ENTRY		8517973		True				
ANR	8518038	CFGExitNode	EXIT		8517973		True				
ANR	8518039	Symbol	add		8517973						
ANR	8518040	Symbol	num		8517973						
ANR	8518041	Symbol	uarb_inc		8517973						
ANR	8518042	Symbol	in_digits		8517973						
ANR	8518043	Symbol	uarb_set		8517973						
ANR	8518044	Function	uarb_mult_digit	265:0:7998:9538							
ANR	8518045	FunctionDef	"uarb_mult_digit (uarb acc , int a_digits , uarb num , FIX_GCC int n_digits , png_uint_16 val)"		8518044	0					
ANR	8518046	CompoundStatement		278:0:8669:9538	8518044	0					
ANR	8518047	IfStatement	if ( val > 0 && n_digits > 0 )		8518044	0					
ANR	8518048	Condition	val > 0 && n_digits > 0	283:7:8864:8886	8518044	0	True				
ANR	8518049	AndExpression	val > 0 && n_digits > 0		8518044	0		&&			
ANR	8518050	RelationalExpression	val > 0		8518044	0		>			
ANR	8518051	Identifier	val		8518044	0					
ANR	8518052	PrimaryExpression	0		8518044	1					
ANR	8518053	RelationalExpression	n_digits > 0		8518044	1		>			
ANR	8518054	Identifier	n_digits		8518044	0					
ANR	8518055	PrimaryExpression	0		8518044	1					
ANR	8518056	CompoundStatement		9:6:287:305	8518044	1					
ANR	8518057	IdentifierDeclStatement	png_uint_32 carry = 0 ;	285:6:8928:8949	8518044	0	True				
ANR	8518058	IdentifierDecl	carry = 0		8518044	0					
ANR	8518059	IdentifierDeclType	png_uint_32		8518044	0					
ANR	8518060	Identifier	carry		8518044	1					
ANR	8518061	AssignmentExpression	carry = 0		8518044	2		=			
ANR	8518062	Identifier	carry		8518044	0					
ANR	8518063	PrimaryExpression	0		8518044	1					
ANR	8518064	IdentifierDeclStatement	int out_digits = 0 ;	286:6:8957:8975	8518044	1	True				
ANR	8518065	IdentifierDecl	out_digits = 0		8518044	0					
ANR	8518066	IdentifierDeclType	int		8518044	0					
ANR	8518067	Identifier	out_digits		8518044	1					
ANR	8518068	AssignmentExpression	out_digits = 0		8518044	2		=			
ANR	8518069	Identifier	out_digits		8518044	0					
ANR	8518070	PrimaryExpression	0		8518044	1					
ANR	8518071	WhileStatement	while ( out_digits < n_digits || carry > 0 )		8518044	2					
ANR	8518072	Condition	out_digits < n_digits || carry > 0	288:13:8991:9024	8518044	0	True				
ANR	8518073	OrExpression	out_digits < n_digits || carry > 0		8518044	0		||			
ANR	8518074	RelationalExpression	out_digits < n_digits		8518044	0		<			
ANR	8518075	Identifier	out_digits		8518044	0					
ANR	8518076	Identifier	n_digits		8518044	1					
ANR	8518077	RelationalExpression	carry > 0		8518044	1		>			
ANR	8518078	Identifier	carry		8518044	0					
ANR	8518079	PrimaryExpression	0		8518044	1					
ANR	8518080	CompoundStatement		12:6:363:363	8518044	1					
ANR	8518081	IfStatement	if ( out_digits < a_digits )		8518044	0					
ANR	8518082	Condition	out_digits < a_digits	290:13:9048:9068	8518044	0	True				
ANR	8518083	RelationalExpression	out_digits < a_digits		8518044	0		<			
ANR	8518084	Identifier	out_digits		8518044	0					
ANR	8518085	Identifier	a_digits		8518044	1					
ANR	8518086	ExpressionStatement	carry += acc [ out_digits ]	291:12:9083:9107	8518044	1	True				
ANR	8518087	AssignmentExpression	carry += acc [ out_digits ]		8518044	0		+=			
ANR	8518088	Identifier	carry		8518044	0					
ANR	8518089	ArrayIndexing	acc [ out_digits ]		8518044	1					
ANR	8518090	Identifier	acc		8518044	0					
ANR	8518091	Identifier	out_digits		8518044	1					
ANR	8518092	IfStatement	if ( out_digits < n_digits )		8518044	1					
ANR	8518093	Condition	out_digits < n_digits	293:13:9123:9143	8518044	0	True				
ANR	8518094	RelationalExpression	out_digits < n_digits		8518044	0		<			
ANR	8518095	Identifier	out_digits		8518044	0					
ANR	8518096	Identifier	n_digits		8518044	1					
ANR	8518097	ExpressionStatement	carry += ( png_uint_32 ) num [ out_digits ] * val	294:12:9158:9201	8518044	1	True				
ANR	8518098	AssignmentExpression	carry += ( png_uint_32 ) num [ out_digits ] * val		8518044	0		+=			
ANR	8518099	Identifier	carry		8518044	0					
ANR	8518100	MultiplicativeExpression	( png_uint_32 ) num [ out_digits ] * val		8518044	1		*			
ANR	8518101	CastExpression	( png_uint_32 ) num [ out_digits ]		8518044	0					
ANR	8518102	CastTarget	png_uint_32		8518044	0					
ANR	8518103	ArrayIndexing	num [ out_digits ]		8518044	1					
ANR	8518104	Identifier	num		8518044	0					
ANR	8518105	Identifier	out_digits		8518044	1					
ANR	8518106	Identifier	val		8518044	1					
ANR	8518107	ExpressionStatement	acc [ out_digits ++ ] = ( png_uint_16 ) ( carry & 0xffff )	296:9:9213:9262	8518044	2	True				
ANR	8518108	AssignmentExpression	acc [ out_digits ++ ] = ( png_uint_16 ) ( carry & 0xffff )		8518044	0		=			
ANR	8518109	ArrayIndexing	acc [ out_digits ++ ]		8518044	0					
ANR	8518110	Identifier	acc		8518044	0					
ANR	8518111	PostIncDecOperationExpression	out_digits ++		8518044	1					
ANR	8518112	Identifier	out_digits		8518044	0					
ANR	8518113	IncDec	++		8518044	1					
ANR	8518114	CastExpression	( png_uint_16 ) ( carry & 0xffff )		8518044	1					
ANR	8518115	CastTarget	png_uint_16		8518044	0					
ANR	8518116	BitAndExpression	carry & 0xffff		8518044	1		&			
ANR	8518117	Identifier	carry		8518044	0					
ANR	8518118	PrimaryExpression	0xffff		8518044	1					
ANR	8518119	ExpressionStatement	carry >>= 16	297:9:9273:9285	8518044	3	True				
ANR	8518120	AssignmentExpression	carry >>= 16		8518044	0		>>=			
ANR	8518121	Identifier	carry		8518044	0					
ANR	8518122	PrimaryExpression	16		8518044	1					
ANR	8518123	IfStatement	if ( out_digits > a_digits )		8518044	3					
ANR	8518124	Condition	out_digits > a_digits	303:10:9461:9481	8518044	0	True				
ANR	8518125	RelationalExpression	out_digits > a_digits		8518044	0		>			
ANR	8518126	Identifier	out_digits		8518044	0					
ANR	8518127	Identifier	a_digits		8518044	1					
ANR	8518128	ReturnStatement	return out_digits ;	304:9:9493:9510	8518044	1	True				
ANR	8518129	Identifier	out_digits		8518044	0					
ANR	8518130	ReturnStatement	return a_digits ;	307:3:9521:9536	8518044	1	True				
ANR	8518131	Identifier	a_digits		8518044	0					
ANR	8518132	ReturnType	static int		8518044	1					
ANR	8518133	Identifier	uarb_mult_digit		8518044	2					
ANR	8518134	ParameterList	"uarb acc , int a_digits , uarb num , FIX_GCC int n_digits , png_uint_16 val"		8518044	3					
ANR	8518135	Parameter	uarb acc	266:16:8025:8032	8518044	0	True				
ANR	8518136	ParameterType	uarb		8518044	0					
ANR	8518137	Identifier	acc		8518044	1					
ANR	8518138	Parameter	int a_digits	266:26:8035:8046	8518044	1	True				
ANR	8518139	ParameterType	int		8518044	0					
ANR	8518140	Identifier	a_digits		8518044	1					
ANR	8518141	Parameter	uarb num	266:40:8049:8056	8518044	2	True				
ANR	8518142	ParameterType	uarb		8518044	0					
ANR	8518143	Identifier	num		8518044	1					
ANR	8518144	Parameter	FIX_GCC int n_digits	266:50:8059:8078	8518044	3	True				
ANR	8518145	ParameterType	FIX_GCC int		8518044	0					
ANR	8518146	Identifier	n_digits		8518044	1					
ANR	8518147	Parameter	png_uint_16 val	267:3:8084:8098	8518044	4	True				
ANR	8518148	ParameterType	png_uint_16		8518044	0					
ANR	8518149	Identifier	val		8518044	1					
ANR	8518150	CFGEntryNode	ENTRY		8518044		True				
ANR	8518151	CFGExitNode	EXIT		8518044		True				
ANR	8518152	Symbol	acc		8518044						
ANR	8518153	Symbol	val		8518044						
ANR	8518154	Symbol	* num		8518044						
ANR	8518155	Symbol	* out_digits		8518044						
ANR	8518156	Symbol	out_digits		8518044						
ANR	8518157	Symbol	* acc		8518044						
ANR	8518158	Symbol	num		8518044						
ANR	8518159	Symbol	a_digits		8518044						
ANR	8518160	Symbol	n_digits		8518044						
ANR	8518161	Symbol	carry		8518044						
ANR	8518162	Function	uarb_mult32	310:0:9541:10191							
ANR	8518163	FunctionDef	"uarb_mult32 (uarb acc , int a_digits , uarb num , int n_digits , png_uint_32 val)"		8518162	0					
ANR	8518164	CompoundStatement		315:0:9780:10191	8518162	0					
ANR	8518165	IfStatement	if ( n_digits > 0 && val > 0 )		8518162	0					
ANR	8518166	Condition	n_digits > 0 && val > 0	316:7:9789:9811	8518162	0	True				
ANR	8518167	AndExpression	n_digits > 0 && val > 0		8518162	0		&&			
ANR	8518168	RelationalExpression	n_digits > 0		8518162	0		>			
ANR	8518169	Identifier	n_digits		8518162	0					
ANR	8518170	PrimaryExpression	0		8518162	1					
ANR	8518171	RelationalExpression	val > 0		8518162	1		>			
ANR	8518172	Identifier	val		8518162	0					
ANR	8518173	PrimaryExpression	0		8518162	1					
ANR	8518174	CompoundStatement		3:3:36:36	8518162	1					
ANR	8518175	ExpressionStatement	"a_digits = uarb_mult_digit ( acc , a_digits , num , n_digits , ( png_uint_16 ) ( val & 0xffff ) )"	318:6:9825:9919	8518162	0	True				
ANR	8518176	AssignmentExpression	"a_digits = uarb_mult_digit ( acc , a_digits , num , n_digits , ( png_uint_16 ) ( val & 0xffff ) )"		8518162	0		=			
ANR	8518177	Identifier	a_digits		8518162	0					
ANR	8518178	CallExpression	"uarb_mult_digit ( acc , a_digits , num , n_digits , ( png_uint_16 ) ( val & 0xffff ) )"		8518162	1					
ANR	8518179	Callee	uarb_mult_digit		8518162	0					
ANR	8518180	Identifier	uarb_mult_digit		8518162	0					
ANR	8518181	ArgumentList	acc		8518162	1					
ANR	8518182	Argument	acc		8518162	0					
ANR	8518183	Identifier	acc		8518162	0					
ANR	8518184	Argument	a_digits		8518162	1					
ANR	8518185	Identifier	a_digits		8518162	0					
ANR	8518186	Argument	num		8518162	2					
ANR	8518187	Identifier	num		8518162	0					
ANR	8518188	Argument	n_digits		8518162	3					
ANR	8518189	Identifier	n_digits		8518162	0					
ANR	8518190	Argument	( png_uint_16 ) ( val & 0xffff )		8518162	4					
ANR	8518191	CastExpression	( png_uint_16 ) ( val & 0xffff )		8518162	0					
ANR	8518192	CastTarget	png_uint_16		8518162	0					
ANR	8518193	BitAndExpression	val & 0xffff		8518162	1		&			
ANR	8518194	Identifier	val		8518162	0					
ANR	8518195	PrimaryExpression	0xffff		8518162	1					
ANR	8518196	ExpressionStatement	val >>= 16	321:6:9928:9938	8518162	1	True				
ANR	8518197	AssignmentExpression	val >>= 16		8518162	0		>>=			
ANR	8518198	Identifier	val		8518162	0					
ANR	8518199	PrimaryExpression	16		8518162	1					
ANR	8518200	IfStatement	if ( val > 0 )		8518162	2					
ANR	8518201	Condition	val > 0	322:10:9950:9956	8518162	0	True				
ANR	8518202	RelationalExpression	val > 0		8518162	0		>			
ANR	8518203	Identifier	val		8518162	0					
ANR	8518204	PrimaryExpression	0		8518162	1					
ANR	8518205	ExpressionStatement	"a_digits = uarb_mult_digit ( acc + 1 , a_digits - 1 , num , n_digits , ( png_uint_16 ) val ) + 1"	323:9:9968:10062	8518162	1	True				
ANR	8518206	AssignmentExpression	"a_digits = uarb_mult_digit ( acc + 1 , a_digits - 1 , num , n_digits , ( png_uint_16 ) val ) + 1"		8518162	0		=			
ANR	8518207	Identifier	a_digits		8518162	0					
ANR	8518208	AdditiveExpression	"uarb_mult_digit ( acc + 1 , a_digits - 1 , num , n_digits , ( png_uint_16 ) val ) + 1"		8518162	1		+			
ANR	8518209	CallExpression	"uarb_mult_digit ( acc + 1 , a_digits - 1 , num , n_digits , ( png_uint_16 ) val )"		8518162	0					
ANR	8518210	Callee	uarb_mult_digit		8518162	0					
ANR	8518211	Identifier	uarb_mult_digit		8518162	0					
ANR	8518212	ArgumentList	acc + 1		8518162	1					
ANR	8518213	Argument	acc + 1		8518162	0					
ANR	8518214	AdditiveExpression	acc + 1		8518162	0		+			
ANR	8518215	Identifier	acc		8518162	0					
ANR	8518216	PrimaryExpression	1		8518162	1					
ANR	8518217	Argument	a_digits - 1		8518162	1					
ANR	8518218	AdditiveExpression	a_digits - 1		8518162	0		-			
ANR	8518219	Identifier	a_digits		8518162	0					
ANR	8518220	PrimaryExpression	1		8518162	1					
ANR	8518221	Argument	num		8518162	2					
ANR	8518222	Identifier	num		8518162	0					
ANR	8518223	Argument	n_digits		8518162	3					
ANR	8518224	Identifier	n_digits		8518162	0					
ANR	8518225	Argument	( png_uint_16 ) val		8518162	4					
ANR	8518226	CastExpression	( png_uint_16 ) val		8518162	0					
ANR	8518227	CastTarget	png_uint_16		8518162	0					
ANR	8518228	Identifier	val		8518162	1					
ANR	8518229	PrimaryExpression	1		8518162	1					
ANR	8518230	ExpressionStatement	assert ( a_digits > 0 )	327:6:10143:10163	8518162	3	True				
ANR	8518231	CallExpression	assert ( a_digits > 0 )		8518162	0					
ANR	8518232	Callee	assert		8518162	0					
ANR	8518233	Identifier	assert		8518162	0					
ANR	8518234	ArgumentList	a_digits > 0		8518162	1					
ANR	8518235	Argument	a_digits > 0		8518162	0					
ANR	8518236	RelationalExpression	a_digits > 0		8518162	0		>			
ANR	8518237	Identifier	a_digits		8518162	0					
ANR	8518238	PrimaryExpression	0		8518162	1					
ANR	8518239	ReturnStatement	return a_digits ;	330:3:10174:10189	8518162	1	True				
ANR	8518240	Identifier	a_digits		8518162	0					
ANR	8518241	ReturnType	static int		8518162	1					
ANR	8518242	Identifier	uarb_mult32		8518162	2					
ANR	8518243	ParameterList	"uarb acc , int a_digits , uarb num , int n_digits , png_uint_32 val"		8518162	3					
ANR	8518244	Parameter	uarb acc	311:12:9564:9571	8518162	0	True				
ANR	8518245	ParameterType	uarb		8518162	0					
ANR	8518246	Identifier	acc		8518162	1					
ANR	8518247	Parameter	int a_digits	311:22:9574:9585	8518162	1	True				
ANR	8518248	ParameterType	int		8518162	0					
ANR	8518249	Identifier	a_digits		8518162	1					
ANR	8518250	Parameter	uarb num	311:36:9588:9595	8518162	2	True				
ANR	8518251	ParameterType	uarb		8518162	0					
ANR	8518252	Identifier	num		8518162	1					
ANR	8518253	Parameter	int n_digits	311:46:9598:9609	8518162	3	True				
ANR	8518254	ParameterType	int		8518162	0					
ANR	8518255	Identifier	n_digits		8518162	1					
ANR	8518256	Parameter	png_uint_32 val	311:60:9612:9626	8518162	4	True				
ANR	8518257	ParameterType	png_uint_32		8518162	0					
ANR	8518258	Identifier	val		8518162	1					
ANR	8518259	CFGEntryNode	ENTRY		8518162		True				
ANR	8518260	CFGExitNode	EXIT		8518162		True				
ANR	8518261	Symbol	acc		8518162						
ANR	8518262	Symbol	val		8518162						
ANR	8518263	Symbol	num		8518162						
ANR	8518264	Symbol	uarb_mult_digit		8518162						
ANR	8518265	Symbol	a_digits		8518162						
ANR	8518266	Symbol	n_digits		8518162						
ANR	8518267	Function	uarb_shift	333:0:10194:10840							
ANR	8518268	FunctionDef	"uarb_shift (uarb inout , int ndigits , unsigned int right_shift)"		8518267	0					
ANR	8518269	CompoundStatement		338:0:10364:10840	8518267	0					
ANR	8518270	IdentifierDeclStatement	FIX_GCC int i = ndigits ;	339:3:10369:10392	8518267	0	True				
ANR	8518271	IdentifierDecl	i = ndigits		8518267	0					
ANR	8518272	IdentifierDeclType	FIX_GCC int		8518267	0					
ANR	8518273	Identifier	i		8518267	1					
ANR	8518274	AssignmentExpression	i = ndigits		8518267	2		=			
ANR	8518275	Identifier	ndigits		8518267	0					
ANR	8518276	Identifier	ndigits		8518267	1					
ANR	8518277	IdentifierDeclStatement	png_uint_16 carry = 0 ;	340:3:10397:10418	8518267	1	True				
ANR	8518278	IdentifierDecl	carry = 0		8518267	0					
ANR	8518279	IdentifierDeclType	png_uint_16		8518267	0					
ANR	8518280	Identifier	carry		8518267	1					
ANR	8518281	AssignmentExpression	carry = 0		8518267	2		=			
ANR	8518282	Identifier	carry		8518267	0					
ANR	8518283	PrimaryExpression	0		8518267	1					
ANR	8518284	ExpressionStatement	assert ( right_shift >= 1 && right_shift <= 15 )	342:3:10424:10469	8518267	2	True				
ANR	8518285	CallExpression	assert ( right_shift >= 1 && right_shift <= 15 )		8518267	0					
ANR	8518286	Callee	assert		8518267	0					
ANR	8518287	Identifier	assert		8518267	0					
ANR	8518288	ArgumentList	right_shift >= 1 && right_shift <= 15		8518267	1					
ANR	8518289	Argument	right_shift >= 1 && right_shift <= 15		8518267	0					
ANR	8518290	AndExpression	right_shift >= 1 && right_shift <= 15		8518267	0		&&			
ANR	8518291	RelationalExpression	right_shift >= 1		8518267	0		>=			
ANR	8518292	Identifier	right_shift		8518267	0					
ANR	8518293	PrimaryExpression	1		8518267	1					
ANR	8518294	RelationalExpression	right_shift <= 15		8518267	1		<=			
ANR	8518295	Identifier	right_shift		8518267	0					
ANR	8518296	PrimaryExpression	15		8518267	1					
ANR	8518297	WhileStatement	while ( -- i >= 0 )		8518267	3					
ANR	8518298	Condition	-- i >= 0	344:10:10482:10489	8518267	0	True				
ANR	8518299	RelationalExpression	-- i >= 0		8518267	0		>=			
ANR	8518300	UnaryExpression	-- i		8518267	0					
ANR	8518301	IncDec	--		8518267	0					
ANR	8518302	Identifier	i		8518267	1					
ANR	8518303	PrimaryExpression	0		8518267	1					
ANR	8518304	CompoundStatement		9:6:138:205	8518267	1					
ANR	8518305	IdentifierDeclStatement	png_uint_16 temp = ( png_uint_16 ) ( carry | ( inout [ i ] >> right_shift ) ) ;	346:6:10503:10570	8518267	0	True				
ANR	8518306	IdentifierDecl	temp = ( png_uint_16 ) ( carry | ( inout [ i ] >> right_shift ) )		8518267	0					
ANR	8518307	IdentifierDeclType	png_uint_16		8518267	0					
ANR	8518308	Identifier	temp		8518267	1					
ANR	8518309	AssignmentExpression	temp = ( png_uint_16 ) ( carry | ( inout [ i ] >> right_shift ) )		8518267	2		=			
ANR	8518310	Identifier	temp		8518267	0					
ANR	8518311	CastExpression	( png_uint_16 ) ( carry | ( inout [ i ] >> right_shift ) )		8518267	1					
ANR	8518312	CastTarget	png_uint_16		8518267	0					
ANR	8518313	InclusiveOrExpression	carry | ( inout [ i ] >> right_shift )		8518267	1		|			
ANR	8518314	Identifier	carry		8518267	0					
ANR	8518315	ShiftExpression	inout [ i ] >> right_shift		8518267	1		>>			
ANR	8518316	ArrayIndexing	inout [ i ]		8518267	0					
ANR	8518317	Identifier	inout		8518267	0					
ANR	8518318	Identifier	i		8518267	1					
ANR	8518319	Identifier	right_shift		8518267	1					
ANR	8518320	ExpressionStatement	carry = ( png_uint_16 ) ( ( inout [ i ] << ( 16 - right_shift ) ) & 0xffff )	349:6:10624:10686	8518267	1	True				
ANR	8518321	AssignmentExpression	carry = ( png_uint_16 ) ( ( inout [ i ] << ( 16 - right_shift ) ) & 0xffff )		8518267	0		=			
ANR	8518322	Identifier	carry		8518267	0					
ANR	8518323	CastExpression	( png_uint_16 ) ( ( inout [ i ] << ( 16 - right_shift ) ) & 0xffff )		8518267	1					
ANR	8518324	CastTarget	png_uint_16		8518267	0					
ANR	8518325	BitAndExpression	( inout [ i ] << ( 16 - right_shift ) ) & 0xffff		8518267	1		&			
ANR	8518326	ShiftExpression	inout [ i ] << ( 16 - right_shift )		8518267	0		<<			
ANR	8518327	ArrayIndexing	inout [ i ]		8518267	0					
ANR	8518328	Identifier	inout		8518267	0					
ANR	8518329	Identifier	i		8518267	1					
ANR	8518330	AdditiveExpression	16 - right_shift		8518267	1		-			
ANR	8518331	PrimaryExpression	16		8518267	0					
ANR	8518332	Identifier	right_shift		8518267	1					
ANR	8518333	PrimaryExpression	0xffff		8518267	1					
ANR	8518334	ExpressionStatement	inout [ i ] = temp	351:6:10695:10710	8518267	2	True				
ANR	8518335	AssignmentExpression	inout [ i ] = temp		8518267	0		=			
ANR	8518336	ArrayIndexing	inout [ i ]		8518267	0					
ANR	8518337	Identifier	inout		8518267	0					
ANR	8518338	Identifier	i		8518267	1					
ANR	8518339	Identifier	temp		8518267	1					
ANR	8518340	IfStatement	if ( i == ndigits - 1 && temp == 0 )		8518267	3					
ANR	8518341	Condition	i == ndigits - 1 && temp == 0	354:10:10764:10790	8518267	0	True				
ANR	8518342	AndExpression	i == ndigits - 1 && temp == 0		8518267	0		&&			
ANR	8518343	EqualityExpression	i == ndigits - 1		8518267	0		==			
ANR	8518344	Identifier	i		8518267	0					
ANR	8518345	AdditiveExpression	ndigits - 1		8518267	1		-			
ANR	8518346	Identifier	ndigits		8518267	0					
ANR	8518347	PrimaryExpression	1		8518267	1					
ANR	8518348	EqualityExpression	temp == 0		8518267	1		==			
ANR	8518349	Identifier	temp		8518267	0					
ANR	8518350	PrimaryExpression	0		8518267	1					
ANR	8518351	ExpressionStatement	ndigits = i	355:9:10802:10813	8518267	1	True				
ANR	8518352	AssignmentExpression	ndigits = i		8518267	0		=			
ANR	8518353	Identifier	ndigits		8518267	0					
ANR	8518354	Identifier	i		8518267	1					
ANR	8518355	ReturnStatement	return ndigits ;	358:3:10824:10838	8518267	4	True				
ANR	8518356	Identifier	ndigits		8518267	0					
ANR	8518357	ReturnType	static int		8518267	1					
ANR	8518358	Identifier	uarb_shift		8518267	2					
ANR	8518359	ParameterList	"uarb inout , int ndigits , unsigned int right_shift"		8518267	3					
ANR	8518360	Parameter	uarb inout	334:11:10216:10225	8518267	0	True				
ANR	8518361	ParameterType	uarb		8518267	0					
ANR	8518362	Identifier	inout		8518267	1					
ANR	8518363	Parameter	int ndigits	334:23:10228:10238	8518267	1	True				
ANR	8518364	ParameterType	int		8518267	0					
ANR	8518365	Identifier	ndigits		8518267	1					
ANR	8518366	Parameter	unsigned int right_shift	334:36:10241:10264	8518267	2	True				
ANR	8518367	ParameterType	unsigned int		8518267	0					
ANR	8518368	Identifier	right_shift		8518267	1					
ANR	8518369	CFGEntryNode	ENTRY		8518267		True				
ANR	8518370	CFGExitNode	EXIT		8518267		True				
ANR	8518371	Symbol	right_shift		8518267						
ANR	8518372	Symbol	inout		8518267						
ANR	8518373	Symbol	temp		8518267						
ANR	8518374	Symbol	* i		8518267						
ANR	8518375	Symbol	i		8518267						
ANR	8518376	Symbol	carry		8518267						
ANR	8518377	Symbol	ndigits		8518267						
ANR	8518378	Symbol	* inout		8518267						
ANR	8518379	Function	uarb_cmp	361:0:10843:11198							
ANR	8518380	FunctionDef	"uarb_cmp (uarb a , int adigits , uarb b , int bdigits)"		8518379	0					
ANR	8518381	CompoundStatement		364:0:10955:11198	8518379	0					
ANR	8518382	IfStatement	if ( adigits < bdigits )		8518379	0					
ANR	8518383	Condition	adigits < bdigits	365:7:10964:10980	8518379	0	True				
ANR	8518384	RelationalExpression	adigits < bdigits		8518379	0		<			
ANR	8518385	Identifier	adigits		8518379	0					
ANR	8518386	Identifier	bdigits		8518379	1					
ANR	8518387	ReturnStatement	return - 1 ;	366:6:10989:10998	8518379	1	True				
ANR	8518388	UnaryOperationExpression	- 1		8518379	0					
ANR	8518389	UnaryOperator	-		8518379	0					
ANR	8518390	PrimaryExpression	1		8518379	1					
ANR	8518391	IfStatement	if ( adigits > bdigits )		8518379	1					
ANR	8518392	Condition	adigits > bdigits	368:7:11008:11024	8518379	0	True				
ANR	8518393	RelationalExpression	adigits > bdigits		8518379	0		>			
ANR	8518394	Identifier	adigits		8518379	0					
ANR	8518395	Identifier	bdigits		8518379	1					
ANR	8518396	ReturnStatement	return 1 ;	369:6:11033:11041	8518379	1	True				
ANR	8518397	PrimaryExpression	1		8518379	0					
ANR	8518398	WhileStatement	while ( adigits -- > 0 )		8518379	2					
ANR	8518399	Condition	adigits -- > 0	371:10:11054:11066	8518379	0	True				
ANR	8518400	RelationalExpression	adigits -- > 0		8518379	0		>			
ANR	8518401	PostIncDecOperationExpression	adigits --		8518379	0					
ANR	8518402	Identifier	adigits		8518379	0					
ANR	8518403	IncDec	--		8518379	1					
ANR	8518404	PrimaryExpression	0		8518379	1					
ANR	8518405	IfStatement	if ( a [ adigits ] < b [ adigits ] )		8518379	1					
ANR	8518406	Condition	a [ adigits ] < b [ adigits ]	372:10:11079:11101	8518379	0	True				
ANR	8518407	RelationalExpression	a [ adigits ] < b [ adigits ]		8518379	0		<			
ANR	8518408	ArrayIndexing	a [ adigits ]		8518379	0					
ANR	8518409	Identifier	a		8518379	0					
ANR	8518410	Identifier	adigits		8518379	1					
ANR	8518411	ArrayIndexing	b [ adigits ]		8518379	1					
ANR	8518412	Identifier	b		8518379	0					
ANR	8518413	Identifier	adigits		8518379	1					
ANR	8518414	ReturnStatement	return - 1 ;	373:9:11113:11122	8518379	1	True				
ANR	8518415	UnaryOperationExpression	- 1		8518379	0					
ANR	8518416	UnaryOperator	-		8518379	0					
ANR	8518417	PrimaryExpression	1		8518379	1					
ANR	8518418	ElseStatement	else		8518379	0					
ANR	8518419	IfStatement	if ( a [ adigits ] > b [ adigits ] )		8518379	0					
ANR	8518420	Condition	a [ adigits ] > b [ adigits ]	375:15:11140:11162	8518379	0	True				
ANR	8518421	RelationalExpression	a [ adigits ] > b [ adigits ]		8518379	0		>			
ANR	8518422	ArrayIndexing	a [ adigits ]		8518379	0					
ANR	8518423	Identifier	a		8518379	0					
ANR	8518424	Identifier	adigits		8518379	1					
ANR	8518425	ArrayIndexing	b [ adigits ]		8518379	1					
ANR	8518426	Identifier	b		8518379	0					
ANR	8518427	Identifier	adigits		8518379	1					
ANR	8518428	ReturnStatement	return 1 ;	376:9:11174:11182	8518379	1	True				
ANR	8518429	PrimaryExpression	1		8518379	0					
ANR	8518430	ReturnStatement	return 0 ;	378:3:11188:11196	8518379	3	True				
ANR	8518431	PrimaryExpression	0		8518379	0					
ANR	8518432	ReturnType	static int		8518379	1					
ANR	8518433	Identifier	uarb_cmp		8518379	2					
ANR	8518434	ParameterList	"uarb a , int adigits , uarb b , int bdigits"		8518379	3					
ANR	8518435	Parameter	uarb a	362:9:10863:10868	8518379	0	True				
ANR	8518436	ParameterType	uarb		8518379	0					
ANR	8518437	Identifier	a		8518379	1					
ANR	8518438	Parameter	int adigits	362:17:10871:10881	8518379	1	True				
ANR	8518439	ParameterType	int		8518379	0					
ANR	8518440	Identifier	adigits		8518379	1					
ANR	8518441	Parameter	uarb b	362:30:10884:10889	8518379	2	True				
ANR	8518442	ParameterType	uarb		8518379	0					
ANR	8518443	Identifier	b		8518379	1					
ANR	8518444	Parameter	int bdigits	362:38:10892:10902	8518379	3	True				
ANR	8518445	ParameterType	int		8518379	0					
ANR	8518446	Identifier	bdigits		8518379	1					
ANR	8518447	CFGEntryNode	ENTRY		8518379		True				
ANR	8518448	CFGExitNode	EXIT		8518379		True				
ANR	8518449	Symbol	a		8518379						
ANR	8518450	Symbol	b		8518379						
ANR	8518451	Symbol	bdigits		8518379						
ANR	8518452	Symbol	* adigits		8518379						
ANR	8518453	Symbol	* a		8518379						
ANR	8518454	Symbol	* b		8518379						
ANR	8518455	Symbol	adigits		8518379						
ANR	8518456	Function	uarb_eq32	382:0:11218:11527							
ANR	8518457	FunctionDef	"uarb_eq32 (uarb num , int digits , png_uint_32 val)"		8518456	0					
ANR	8518458	CompoundStatement		385:0:11329:11527	8518456	0					
ANR	8518459	SwitchStatement	switch ( digits )		8518456	0					
ANR	8518460	Condition	digits	386:11:11342:11347	8518456	0	True				
ANR	8518461	Identifier	digits		8518456	0					
ANR	8518462	CompoundStatement		3:3:23:23	8518456	1					
ANR	8518463	Label	case 0 :	388:6:11361:11367	8518456	0	True				
ANR	8518464	ReturnStatement	return val == 0 ;	388:15:11370:11385	8518456	1	True				
ANR	8518465	EqualityExpression	val == 0		8518456	0		==			
ANR	8518466	Identifier	val		8518456	0					
ANR	8518467	PrimaryExpression	0		8518456	1					
ANR	8518468	Label	case 1 :	389:6:11393:11399	8518456	2	True				
ANR	8518469	ReturnStatement	return val == num [ 0 ] ;	389:15:11402:11422	8518456	3	True				
ANR	8518470	EqualityExpression	val == num [ 0 ]		8518456	0		==			
ANR	8518471	Identifier	val		8518456	0					
ANR	8518472	ArrayIndexing	num [ 0 ]		8518456	1					
ANR	8518473	Identifier	num		8518456	0					
ANR	8518474	PrimaryExpression	0		8518456	1					
ANR	8518475	Label	case 2 :	390:6:11430:11436	8518456	4	True				
ANR	8518476	ReturnStatement	return ( val & 0xffff ) == num [ 0 ] && ( val >> 16 ) == num [ 1 ] ;	390:15:11439:11495	8518456	5	True				
ANR	8518477	AndExpression	( val & 0xffff ) == num [ 0 ] && ( val >> 16 ) == num [ 1 ]		8518456	0		&&			
ANR	8518478	EqualityExpression	( val & 0xffff ) == num [ 0 ]		8518456	0		==			
ANR	8518479	BitAndExpression	val & 0xffff		8518456	0		&			
ANR	8518480	Identifier	val		8518456	0					
ANR	8518481	PrimaryExpression	0xffff		8518456	1					
ANR	8518482	ArrayIndexing	num [ 0 ]		8518456	1					
ANR	8518483	Identifier	num		8518456	0					
ANR	8518484	PrimaryExpression	0		8518456	1					
ANR	8518485	EqualityExpression	( val >> 16 ) == num [ 1 ]		8518456	1		==			
ANR	8518486	ShiftExpression	val >> 16		8518456	0		>>			
ANR	8518487	Identifier	val		8518456	0					
ANR	8518488	PrimaryExpression	16		8518456	1					
ANR	8518489	ArrayIndexing	num [ 1 ]		8518456	1					
ANR	8518490	Identifier	num		8518456	0					
ANR	8518491	PrimaryExpression	1		8518456	1					
ANR	8518492	Label	default :	391:6:11503:11510	8518456	6	True				
ANR	8518493	Identifier	default		8518456	0					
ANR	8518494	ReturnStatement	return 0 ;	391:15:11512:11520	8518456	7	True				
ANR	8518495	PrimaryExpression	0		8518456	0					
ANR	8518496	ReturnType	static int		8518456	1					
ANR	8518497	Identifier	uarb_eq32		8518456	2					
ANR	8518498	ParameterList	"uarb num , int digits , png_uint_32 val"		8518456	3					
ANR	8518499	Parameter	uarb num	383:10:11239:11246	8518456	0	True				
ANR	8518500	ParameterType	uarb		8518456	0					
ANR	8518501	Identifier	num		8518456	1					
ANR	8518502	Parameter	int digits	383:20:11249:11258	8518456	1	True				
ANR	8518503	ParameterType	int		8518456	0					
ANR	8518504	Identifier	digits		8518456	1					
ANR	8518505	Parameter	png_uint_32 val	383:32:11261:11275	8518456	2	True				
ANR	8518506	ParameterType	png_uint_32		8518456	0					
ANR	8518507	Identifier	val		8518456	1					
ANR	8518508	CFGEntryNode	ENTRY		8518456		True				
ANR	8518509	CFGExitNode	EXIT		8518456		True				
ANR	8518510	Symbol	val		8518456						
ANR	8518511	Symbol	* num		8518456						
ANR	8518512	Symbol	num		8518456						
ANR	8518513	Symbol	digits		8518456						
ANR	8518514	Function	uarb_printx	396:0:11537:11932							
ANR	8518515	FunctionDef	"uarb_printx (uarb num , int digits , FILE * out)"		8518514	0					
ANR	8518516	CompoundStatement		399:0:11662:11932	8518514	0					
ANR	8518517	WhileStatement	while ( digits > 0 )		8518514	0					
ANR	8518518	Condition	digits > 0	400:10:11674:11683	8518514	0	True				
ANR	8518519	RelationalExpression	digits > 0		8518514	0		>			
ANR	8518520	Identifier	digits		8518514	0					
ANR	8518521	PrimaryExpression	0		8518514	1					
ANR	8518522	IfStatement	if ( num [ -- digits ] > 0 )		8518514	1					
ANR	8518523	Condition	num [ -- digits ] > 0	401:10:11696:11712	8518514	0	True				
ANR	8518524	RelationalExpression	num [ -- digits ] > 0		8518514	0		>			
ANR	8518525	ArrayIndexing	num [ -- digits ]		8518514	0					
ANR	8518526	Identifier	num		8518514	0					
ANR	8518527	UnaryExpression	-- digits		8518514	1					
ANR	8518528	IncDec	--		8518514	0					
ANR	8518529	Identifier	digits		8518514	1					
ANR	8518530	PrimaryExpression	0		8518514	1					
ANR	8518531	CompoundStatement		4:6:58:58	8518514	1					
ANR	8518532	ExpressionStatement	"fprintf ( out , ""0x%x"" , num [ digits ] )"	403:9:11732:11765	8518514	0	True				
ANR	8518533	CallExpression	"fprintf ( out , ""0x%x"" , num [ digits ] )"		8518514	0					
ANR	8518534	Callee	fprintf		8518514	0					
ANR	8518535	Identifier	fprintf		8518514	0					
ANR	8518536	ArgumentList	out		8518514	1					
ANR	8518537	Argument	out		8518514	0					
ANR	8518538	Identifier	out		8518514	0					
ANR	8518539	Argument	"""0x%x"""		8518514	1					
ANR	8518540	PrimaryExpression	"""0x%x"""		8518514	0					
ANR	8518541	Argument	num [ digits ]		8518514	2					
ANR	8518542	ArrayIndexing	num [ digits ]		8518514	0					
ANR	8518543	Identifier	num		8518514	0					
ANR	8518544	Identifier	digits		8518514	1					
ANR	8518545	WhileStatement	while ( digits > 0 )		8518514	1					
ANR	8518546	Condition	digits > 0	405:16:11784:11793	8518514	0	True				
ANR	8518547	RelationalExpression	digits > 0		8518514	0		>			
ANR	8518548	Identifier	digits		8518514	0					
ANR	8518549	PrimaryExpression	0		8518514	1					
ANR	8518550	ExpressionStatement	"fprintf ( out , ""%.4x"" , num [ -- digits ] )"	406:12:11808:11843	8518514	1	True				
ANR	8518551	CallExpression	"fprintf ( out , ""%.4x"" , num [ -- digits ] )"		8518514	0					
ANR	8518552	Callee	fprintf		8518514	0					
ANR	8518553	Identifier	fprintf		8518514	0					
ANR	8518554	ArgumentList	out		8518514	1					
ANR	8518555	Argument	out		8518514	0					
ANR	8518556	Identifier	out		8518514	0					
ANR	8518557	Argument	"""%.4x"""		8518514	1					
ANR	8518558	PrimaryExpression	"""%.4x"""		8518514	0					
ANR	8518559	Argument	num [ -- digits ]		8518514	2					
ANR	8518560	ArrayIndexing	num [ -- digits ]		8518514	0					
ANR	8518561	Identifier	num		8518514	0					
ANR	8518562	UnaryExpression	-- digits		8518514	1					
ANR	8518563	IncDec	--		8518514	0					
ANR	8518564	Identifier	digits		8518514	1					
ANR	8518565	ElseStatement	else		8518514	0					
ANR	8518566	IfStatement	if ( digits == 0 )		8518514	0					
ANR	8518567	Condition	digits == 0	409:15:11869:11879	8518514	0	True				
ANR	8518568	EqualityExpression	digits == 0		8518514	0		==			
ANR	8518569	Identifier	digits		8518514	0					
ANR	8518570	PrimaryExpression	0		8518514	1					
ANR	8518571	ExpressionStatement	"fputs ( ""0x0"" , out )"	410:9:11913:11930	8518514	1	True				
ANR	8518572	CallExpression	"fputs ( ""0x0"" , out )"		8518514	0					
ANR	8518573	Callee	fputs		8518514	0					
ANR	8518574	Identifier	fputs		8518514	0					
ANR	8518575	ArgumentList	"""0x0"""		8518514	1					
ANR	8518576	Argument	"""0x0"""		8518514	0					
ANR	8518577	PrimaryExpression	"""0x0"""		8518514	0					
ANR	8518578	Argument	out		8518514	1					
ANR	8518579	Identifier	out		8518514	0					
ANR	8518580	ReturnType	static void		8518514	1					
ANR	8518581	Identifier	uarb_printx		8518514	2					
ANR	8518582	ParameterList	"uarb num , int digits , FILE * out"		8518514	3					
ANR	8518583	Parameter	uarb num	397:12:11561:11568	8518514	0	True				
ANR	8518584	ParameterType	uarb		8518514	0					
ANR	8518585	Identifier	num		8518514	1					
ANR	8518586	Parameter	int digits	397:22:11571:11580	8518514	1	True				
ANR	8518587	ParameterType	int		8518514	0					
ANR	8518588	Identifier	digits		8518514	1					
ANR	8518589	Parameter	FILE * out	397:34:11583:11591	8518514	2	True				
ANR	8518590	ParameterType	FILE *		8518514	0					
ANR	8518591	Identifier	out		8518514	1					
ANR	8518592	CFGEntryNode	ENTRY		8518514		True				
ANR	8518593	CFGExitNode	EXIT		8518514		True				
ANR	8518594	Symbol	* num		8518514						
ANR	8518595	Symbol	num		8518514						
ANR	8518596	Symbol	* digits		8518514						
ANR	8518597	Symbol	digits		8518514						
ANR	8518598	Symbol	out		8518514						
ANR	8518599	Function	uarb_print	413:0:11935:12544							
ANR	8518600	FunctionDef	"uarb_print (uarb num , int digits , FILE * out)"		8518599	0					
ANR	8518601	CompoundStatement		423:0:12304:12544	8518599	0					
ANR	8518602	IfStatement	if ( digits * sizeof ( udigit ) > sizeof ( unsigned long ) )		8518599	0					
ANR	8518603	Condition	digits * sizeof ( udigit ) > sizeof ( unsigned long )	424:7:12313:12361	8518599	0	True				
ANR	8518604	RelationalExpression	digits * sizeof ( udigit ) > sizeof ( unsigned long )		8518599	0		>			
ANR	8518605	MultiplicativeExpression	digits * sizeof ( udigit )		8518599	0		*			
ANR	8518606	Identifier	digits		8518599	0					
ANR	8518607	SizeofExpression	sizeof ( udigit )		8518599	1					
ANR	8518608	Sizeof	sizeof		8518599	0					
ANR	8518609	SizeofOperand	udigit		8518599	1					
ANR	8518610	SizeofExpression	sizeof ( unsigned long )		8518599	1					
ANR	8518611	Sizeof	sizeof		8518599	0					
ANR	8518612	SizeofOperand	unsigned long		8518599	1					
ANR	8518613	ExpressionStatement	"uarb_printx ( num , digits , out )"	425:6:12370:12399	8518599	1	True				
ANR	8518614	CallExpression	"uarb_printx ( num , digits , out )"		8518599	0					
ANR	8518615	Callee	uarb_printx		8518599	0					
ANR	8518616	Identifier	uarb_printx		8518599	0					
ANR	8518617	ArgumentList	num		8518599	1					
ANR	8518618	Argument	num		8518599	0					
ANR	8518619	Identifier	num		8518599	0					
ANR	8518620	Argument	digits		8518599	1					
ANR	8518621	Identifier	digits		8518599	0					
ANR	8518622	Argument	out		8518599	2					
ANR	8518623	Identifier	out		8518599	0					
ANR	8518624	ElseStatement	else		8518599	0					
ANR	8518625	CompoundStatement		7:6:116:135	8518599	0					
ANR	8518626	IdentifierDeclStatement	unsigned long n = 0 ;	429:6:12421:12440	8518599	0	True				
ANR	8518627	IdentifierDecl	n = 0		8518599	0					
ANR	8518628	IdentifierDeclType	unsigned long		8518599	0					
ANR	8518629	Identifier	n		8518599	1					
ANR	8518630	AssignmentExpression	n = 0		8518599	2		=			
ANR	8518631	Identifier	n		8518599	0					
ANR	8518632	PrimaryExpression	0		8518599	1					
ANR	8518633	WhileStatement	while ( digits > 0 )		8518599	1					
ANR	8518634	Condition	digits > 0	431:13:12456:12465	8518599	0	True				
ANR	8518635	RelationalExpression	digits > 0		8518599	0		>			
ANR	8518636	Identifier	digits		8518599	0					
ANR	8518637	PrimaryExpression	0		8518599	1					
ANR	8518638	ExpressionStatement	n = ( n << 16 ) + num [ -- digits ]	432:9:12477:12506	8518599	1	True				
ANR	8518639	AssignmentExpression	n = ( n << 16 ) + num [ -- digits ]		8518599	0		=			
ANR	8518640	Identifier	n		8518599	0					
ANR	8518641	AdditiveExpression	( n << 16 ) + num [ -- digits ]		8518599	1		+			
ANR	8518642	ShiftExpression	n << 16		8518599	0		<<			
ANR	8518643	Identifier	n		8518599	0					
ANR	8518644	PrimaryExpression	16		8518599	1					
ANR	8518645	ArrayIndexing	num [ -- digits ]		8518599	1					
ANR	8518646	Identifier	num		8518599	0					
ANR	8518647	UnaryExpression	-- digits		8518599	1					
ANR	8518648	IncDec	--		8518599	0					
ANR	8518649	Identifier	digits		8518599	1					
ANR	8518650	ExpressionStatement	"fprintf ( out , ""%lu"" , n )"	434:6:12515:12537	8518599	2	True				
ANR	8518651	CallExpression	"fprintf ( out , ""%lu"" , n )"		8518599	0					
ANR	8518652	Callee	fprintf		8518599	0					
ANR	8518653	Identifier	fprintf		8518599	0					
ANR	8518654	ArgumentList	out		8518599	1					
ANR	8518655	Argument	out		8518599	0					
ANR	8518656	Identifier	out		8518599	0					
ANR	8518657	Argument	"""%lu"""		8518599	1					
ANR	8518658	PrimaryExpression	"""%lu"""		8518599	0					
ANR	8518659	Argument	n		8518599	2					
ANR	8518660	Identifier	n		8518599	0					
ANR	8518661	ReturnType	static void		8518599	1					
ANR	8518662	Identifier	uarb_print		8518599	2					
ANR	8518663	ParameterList	"uarb num , int digits , FILE * out"		8518599	3					
ANR	8518664	Parameter	uarb num	414:11:11958:11965	8518599	0	True				
ANR	8518665	ParameterType	uarb		8518599	0					
ANR	8518666	Identifier	num		8518599	1					
ANR	8518667	Parameter	int digits	414:21:11968:11977	8518599	1	True				
ANR	8518668	ParameterType	int		8518599	0					
ANR	8518669	Identifier	digits		8518599	1					
ANR	8518670	Parameter	FILE * out	414:33:11980:11988	8518599	2	True				
ANR	8518671	ParameterType	FILE *		8518599	0					
ANR	8518672	Identifier	out		8518599	1					
ANR	8518673	CFGEntryNode	ENTRY		8518599		True				
ANR	8518674	CFGExitNode	EXIT		8518599		True				
ANR	8518675	Symbol	* num		8518599						
ANR	8518676	Symbol	num		8518599						
ANR	8518677	Symbol	* digits		8518599						
ANR	8518678	Symbol	digits		8518599						
ANR	8518679	Symbol	n		8518599						
ANR	8518680	Symbol	out		8518599						
ANR	8518681	Function	make_random_bytes	447:0:12987:13630							
ANR	8518682	FunctionDef	"make_random_bytes (png_uint_32 * seed , void * pv , size_t size)"		8518681	0					
ANR	8518683	CompoundStatement		449:0:13059:13630	8518681	0					
ANR	8518684	IdentifierDeclStatement	"png_uint_32 u0 = seed [ 0 ] , u1 = seed [ 1 ] ;"	450:3:13064:13102	8518681	0	True				
ANR	8518685	IdentifierDecl	u0 = seed [ 0 ]		8518681	0					
ANR	8518686	IdentifierDeclType	png_uint_32		8518681	0					
ANR	8518687	Identifier	u0		8518681	1					
ANR	8518688	AssignmentExpression	u0 = seed [ 0 ]		8518681	2		=			
ANR	8518689	Identifier	u0		8518681	0					
ANR	8518690	ArrayIndexing	seed [ 0 ]		8518681	1					
ANR	8518691	Identifier	seed		8518681	0					
ANR	8518692	PrimaryExpression	0		8518681	1					
ANR	8518693	IdentifierDecl	u1 = seed [ 1 ]		8518681	1					
ANR	8518694	IdentifierDeclType	png_uint_32		8518681	0					
ANR	8518695	Identifier	u1		8518681	1					
ANR	8518696	AssignmentExpression	u1 = seed [ 1 ]		8518681	2		=			
ANR	8518697	Identifier	u1		8518681	0					
ANR	8518698	ArrayIndexing	seed [ 1 ]		8518681	1					
ANR	8518699	Identifier	seed		8518681	0					
ANR	8518700	PrimaryExpression	1		8518681	1					
ANR	8518701	IdentifierDeclStatement	"png_bytep bytes = voidcast ( png_bytep , pv ) ;"	451:3:13107:13148	8518681	1	True				
ANR	8518702	IdentifierDecl	"bytes = voidcast ( png_bytep , pv )"		8518681	0					
ANR	8518703	IdentifierDeclType	png_bytep		8518681	0					
ANR	8518704	Identifier	bytes		8518681	1					
ANR	8518705	AssignmentExpression	"bytes = voidcast ( png_bytep , pv )"		8518681	2		=			
ANR	8518706	Identifier	bytes		8518681	0					
ANR	8518707	CallExpression	"voidcast ( png_bytep , pv )"		8518681	1					
ANR	8518708	Callee	voidcast		8518681	0					
ANR	8518709	Identifier	voidcast		8518681	0					
ANR	8518710	ArgumentList	png_bytep		8518681	1					
ANR	8518711	Argument	png_bytep		8518681	0					
ANR	8518712	Identifier	png_bytep		8518681	0					
ANR	8518713	Argument	pv		8518681	1					
ANR	8518714	Identifier	pv		8518681	0					
ANR	8518715	IdentifierDeclStatement	size_t i ;	456:3:13303:13311	8518681	2	True				
ANR	8518716	IdentifierDecl	i		8518681	0					
ANR	8518717	IdentifierDeclType	size_t		8518681	0					
ANR	8518718	Identifier	i		8518681	1					
ANR	8518719	ForStatement	for ( i = 0 ; i < size ; ++ i )		8518681	3					
ANR	8518720	ForInit	i = 0 ;	457:8:13321:13324	8518681	0	True				
ANR	8518721	AssignmentExpression	i = 0		8518681	0		=			
ANR	8518722	Identifier	i		8518681	0					
ANR	8518723	PrimaryExpression	0		8518681	1					
ANR	8518724	Condition	i < size	457:13:13326:13331	8518681	1	True				
ANR	8518725	RelationalExpression	i < size		8518681	0		<			
ANR	8518726	Identifier	i		8518681	0					
ANR	8518727	Identifier	size		8518681	1					
ANR	8518728	UnaryExpression	++ i	457:21:13334:13336	8518681	2	True				
ANR	8518729	IncDec	++		8518681	0					
ANR	8518730	Identifier	i		8518681	1					
ANR	8518731	CompoundStatement		12:6:359:429	8518681	3					
ANR	8518732	IdentifierDeclStatement	png_uint_32 u = ( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff ;	460:6:13419:13489	8518681	0	True				
ANR	8518733	IdentifierDecl	u = ( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff		8518681	0					
ANR	8518734	IdentifierDeclType	png_uint_32		8518681	0					
ANR	8518735	Identifier	u		8518681	1					
ANR	8518736	AssignmentExpression	u = ( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff		8518681	2		=			
ANR	8518737	Identifier	u		8518681	0					
ANR	8518738	BitAndExpression	( ( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) ) ) & 0xff		8518681	1		&			
ANR	8518739	ExclusiveOrExpression	( u0 >> ( 20 - 8 ) ) ^ ( ( u1 << 7 ) | ( u0 >> ( 32 - 7 ) ) )		8518681	0		^			
ANR	8518740	ShiftExpression	u0 >> ( 20 - 8 )		8518681	0		>>			
ANR	8518741	Identifier	u0		8518681	0					
ANR	8518742	AdditiveExpression	20 - 8		8518681	1		-			
ANR	8518743	PrimaryExpression	20		8518681	0					
ANR	8518744	PrimaryExpression	8		8518681	1					
ANR	8518745	InclusiveOrExpression	( u1 << 7 ) | ( u0 >> ( 32 - 7 ) )		8518681	1		|			
ANR	8518746	ShiftExpression	u1 << 7		8518681	0		<<			
ANR	8518747	Identifier	u1		8518681	0					
ANR	8518748	PrimaryExpression	7		8518681	1					
ANR	8518749	ShiftExpression	u0 >> ( 32 - 7 )		8518681	1		>>			
ANR	8518750	Identifier	u0		8518681	0					
ANR	8518751	AdditiveExpression	32 - 7		8518681	1		-			
ANR	8518752	PrimaryExpression	32		8518681	0					
ANR	8518753	PrimaryExpression	7		8518681	1					
ANR	8518754	PrimaryExpression	0xff		8518681	1					
ANR	8518755	ExpressionStatement	u1 <<= 8	461:6:13497:13505	8518681	1	True				
ANR	8518756	AssignmentExpression	u1 <<= 8		8518681	0		<<=			
ANR	8518757	Identifier	u1		8518681	0					
ANR	8518758	PrimaryExpression	8		8518681	1					
ANR	8518759	ExpressionStatement	u1 |= u0 >> 24	462:6:13513:13527	8518681	2	True				
ANR	8518760	AssignmentExpression	u1 |= u0 >> 24		8518681	0		|=			
ANR	8518761	Identifier	u1		8518681	0					
ANR	8518762	ShiftExpression	u0 >> 24		8518681	1		>>			
ANR	8518763	Identifier	u0		8518681	0					
ANR	8518764	PrimaryExpression	24		8518681	1					
ANR	8518765	ExpressionStatement	u0 <<= 8	463:6:13535:13543	8518681	3	True				
ANR	8518766	AssignmentExpression	u0 <<= 8		8518681	0		<<=			
ANR	8518767	Identifier	u0		8518681	0					
ANR	8518768	PrimaryExpression	8		8518681	1					
ANR	8518769	ExpressionStatement	u0 |= u	464:6:13551:13558	8518681	4	True				
ANR	8518770	AssignmentExpression	u0 |= u		8518681	0		|=			
ANR	8518771	Identifier	u0		8518681	0					
ANR	8518772	Identifier	u		8518681	1					
ANR	8518773	ExpressionStatement	* bytes ++ = ( png_byte ) u	465:6:13566:13588	8518681	5	True				
ANR	8518774	AssignmentExpression	* bytes ++ = ( png_byte ) u		8518681	0		=			
ANR	8518775	UnaryOperationExpression	* bytes ++		8518681	0					
ANR	8518776	UnaryOperator	*		8518681	0					
ANR	8518777	PostIncDecOperationExpression	bytes ++		8518681	1					
ANR	8518778	Identifier	bytes		8518681	0					
ANR	8518779	IncDec	++		8518681	1					
ANR	8518780	CastExpression	( png_byte ) u		8518681	1					
ANR	8518781	CastTarget	png_byte		8518681	0					
ANR	8518782	Identifier	u		8518681	1					
ANR	8518783	ExpressionStatement	seed [ 0 ] = u0	468:3:13599:13611	8518681	4	True				
ANR	8518784	AssignmentExpression	seed [ 0 ] = u0		8518681	0		=			
ANR	8518785	ArrayIndexing	seed [ 0 ]		8518681	0					
ANR	8518786	Identifier	seed		8518681	0					
ANR	8518787	PrimaryExpression	0		8518681	1					
ANR	8518788	Identifier	u0		8518681	1					
ANR	8518789	ExpressionStatement	seed [ 1 ] = u1	469:3:13616:13628	8518681	5	True				
ANR	8518790	AssignmentExpression	seed [ 1 ] = u1		8518681	0		=			
ANR	8518791	ArrayIndexing	seed [ 1 ]		8518681	0					
ANR	8518792	Identifier	seed		8518681	0					
ANR	8518793	PrimaryExpression	1		8518681	1					
ANR	8518794	Identifier	u1		8518681	1					
ANR	8518795	ReturnType	static void		8518681	1					
ANR	8518796	Identifier	make_random_bytes		8518681	2					
ANR	8518797	ParameterList	"png_uint_32 * seed , void * pv , size_t size"		8518681	3					
ANR	8518798	Parameter	png_uint_32 * seed	448:18:13017:13033	8518681	0	True				
ANR	8518799	ParameterType	png_uint_32 *		8518681	0					
ANR	8518800	Identifier	seed		8518681	1					
ANR	8518801	Parameter	void * pv	448:37:13036:13043	8518681	1	True				
ANR	8518802	ParameterType	void *		8518681	0					
ANR	8518803	Identifier	pv		8518681	1					
ANR	8518804	Parameter	size_t size	448:47:13046:13056	8518681	2	True				
ANR	8518805	ParameterType	size_t		8518681	0					
ANR	8518806	Identifier	size		8518681	1					
ANR	8518807	CFGEntryNode	ENTRY		8518681		True				
ANR	8518808	CFGExitNode	EXIT		8518681		True				
ANR	8518809	Symbol	* seed		8518681						
ANR	8518810	Symbol	seed		8518681						
ANR	8518811	Symbol	size		8518681						
ANR	8518812	Symbol	u		8518681						
ANR	8518813	Symbol	pv		8518681						
ANR	8518814	Symbol	bytes		8518681						
ANR	8518815	Symbol	voidcast		8518681						
ANR	8518816	Symbol	i		8518681						
ANR	8518817	Symbol	u0		8518681						
ANR	8518818	Symbol	u1		8518681						
ANR	8518819	Symbol	* bytes ++		8518681						
ANR	8518820	Symbol	png_bytep		8518681						
ANR	8518821	Function	clear	473:0:13674:13827							
ANR	8518822	FunctionDef	"clear (void * pv , size_t size)"		8518821	0					
ANR	8518823	CompoundStatement		475:0:13715:13827	8518821	0					
ANR	8518824	Statement	static	476:3:13720:13725	8518821	0	True				
ANR	8518825	IdentifierDeclStatement	"png_uint_32 clear_seed [ 2 ] = { 0x12345678 , 0x9abcdef0 } ;"	476:10:13727:13781	8518821	1	True				
ANR	8518826	IdentifierDecl	"clear_seed [ 2 ] = { 0x12345678 , 0x9abcdef0 }"		8518821	0					
ANR	8518827	IdentifierDeclType	png_uint_32 [ 2 ]		8518821	0					
ANR	8518828	Identifier	clear_seed		8518821	1					
ANR	8518829	PrimaryExpression	2		8518821	2					
ANR	8518830	AssignmentExpression	"clear_seed [ 2 ] = { 0x12345678 , 0x9abcdef0 }"		8518821	3		=			
ANR	8518831	Identifier	clear_seed		8518821	0					
ANR	8518832	InitializerList	0x12345678		8518821	1					
ANR	8518833	PrimaryExpression	0x12345678		8518821	0					
ANR	8518834	PrimaryExpression	0x9abcdef0		8518821	1					
ANR	8518835	ExpressionStatement	"make_random_bytes ( clear_seed , pv , size )"	477:3:13786:13825	8518821	2	True				
ANR	8518836	CallExpression	"make_random_bytes ( clear_seed , pv , size )"		8518821	0					
ANR	8518837	Callee	make_random_bytes		8518821	0					
ANR	8518838	Identifier	make_random_bytes		8518821	0					
ANR	8518839	ArgumentList	clear_seed		8518821	1					
ANR	8518840	Argument	clear_seed		8518821	0					
ANR	8518841	Identifier	clear_seed		8518821	0					
ANR	8518842	Argument	pv		8518821	1					
ANR	8518843	Identifier	pv		8518821	0					
ANR	8518844	Argument	size		8518821	2					
ANR	8518845	Identifier	size		8518821	0					
ANR	8518846	ReturnType	static void		8518821	1					
ANR	8518847	Identifier	clear		8518821	2					
ANR	8518848	ParameterList	"void * pv , size_t size"		8518821	3					
ANR	8518849	Parameter	void * pv	474:6:13692:13699	8518821	0	True				
ANR	8518850	ParameterType	void *		8518821	0					
ANR	8518851	Identifier	pv		8518821	1					
ANR	8518852	Parameter	size_t size	474:16:13702:13712	8518821	1	True				
ANR	8518853	ParameterType	size_t		8518821	0					
ANR	8518854	Identifier	size		8518821	1					
ANR	8518855	CFGEntryNode	ENTRY		8518821		True				
ANR	8518856	CFGExitNode	EXIT		8518821		True				
ANR	8518857	Symbol	clear_seed		8518821						
ANR	8518858	Symbol	size		8518821						
ANR	8518859	Symbol	pv		8518821						
ANR	8518860	DeclStmt									
ANR	8518861	Decl							png_uint_32	png_uint_32 [ 256 ]	crc_table
ANR	8518862	Function	crc_one_byte	550:0:17640:17750							
ANR	8518863	FunctionDef	"crc_one_byte (png_uint_32 crc , int b)"		8518862	0					
ANR	8518864	CompoundStatement		552:0:17696:17750	8518862	0					
ANR	8518865	ReturnStatement	return crc_table [ ( crc ^ b ) & 0xff ] ^ ( crc >> 8 ) ;	553:3:17701:17748	8518862	0	True				
ANR	8518866	ExclusiveOrExpression	crc_table [ ( crc ^ b ) & 0xff ] ^ ( crc >> 8 )		8518862	0		^			
ANR	8518867	ArrayIndexing	crc_table [ ( crc ^ b ) & 0xff ]		8518862	0					
ANR	8518868	Identifier	crc_table		8518862	0					
ANR	8518869	BitAndExpression	( crc ^ b ) & 0xff		8518862	1		&			
ANR	8518870	ExclusiveOrExpression	crc ^ b		8518862	0		^			
ANR	8518871	Identifier	crc		8518862	0					
ANR	8518872	Identifier	b		8518862	1					
ANR	8518873	PrimaryExpression	0xff		8518862	1					
ANR	8518874	ShiftExpression	crc >> 8		8518862	1		>>			
ANR	8518875	Identifier	crc		8518862	0					
ANR	8518876	PrimaryExpression	8		8518862	1					
ANR	8518877	ReturnType	static png_uint_32		8518862	1					
ANR	8518878	Identifier	crc_one_byte		8518862	2					
ANR	8518879	ParameterList	"png_uint_32 crc , int b"		8518862	3					
ANR	8518880	Parameter	png_uint_32 crc	551:13:17672:17686	8518862	0	True				
ANR	8518881	ParameterType	png_uint_32		8518862	0					
ANR	8518882	Identifier	crc		8518862	1					
ANR	8518883	Parameter	int b	551:30:17689:17693	8518862	1	True				
ANR	8518884	ParameterType	int		8518862	0					
ANR	8518885	Identifier	b		8518862	1					
ANR	8518886	CFGEntryNode	ENTRY		8518862		True				
ANR	8518887	CFGExitNode	EXIT		8518862		True				
ANR	8518888	Symbol	crc_table		8518862						
ANR	8518889	Symbol	* crc		8518862						
ANR	8518890	Symbol	b		8518862						
ANR	8518891	Symbol	crc		8518862						
ANR	8518892	Symbol	* crc_table		8518862						
ANR	8518893	Symbol	* b		8518862						
ANR	8518894	Function	crc_init_4	556:0:17753:18521							
ANR	8518895	FunctionDef	crc_init_4 (png_uint_32 value)		8518894	0					
ANR	8518896	CompoundStatement		558:0:17802:18521	8518894	0					
ANR	8518897	IdentifierDeclStatement	png_uint_32 crc = crc_table [ ( ~value >> 24 ) ] ^ 0xffffff ;	566:3:18283:18337	8518894	0	True				
ANR	8518898	IdentifierDecl	crc = crc_table [ ( ~value >> 24 ) ] ^ 0xffffff		8518894	0					
ANR	8518899	IdentifierDeclType	png_uint_32		8518894	0					
ANR	8518900	Identifier	crc		8518894	1					
ANR	8518901	AssignmentExpression	crc = crc_table [ ( ~value >> 24 ) ] ^ 0xffffff		8518894	2		=			
ANR	8518902	Identifier	crc		8518894	0					
ANR	8518903	ExclusiveOrExpression	crc_table [ ( ~value >> 24 ) ] ^ 0xffffff		8518894	1		^			
ANR	8518904	ArrayIndexing	crc_table [ ( ~value >> 24 ) ]		8518894	0					
ANR	8518905	Identifier	crc_table		8518894	0					
ANR	8518906	ShiftExpression	~value >> 24		8518894	1		>>			
ANR	8518907	Identifier	~value		8518894	0					
ANR	8518908	PrimaryExpression	24		8518894	1					
ANR	8518909	PrimaryExpression	0xffffff		8518894	1					
ANR	8518910	ExpressionStatement	crc = crc_table [ ( crc ^ ( value >> 16 ) ) & 0xff ] ^ ( crc >> 8 )	568:3:18343:18401	8518894	1	True				
ANR	8518911	AssignmentExpression	crc = crc_table [ ( crc ^ ( value >> 16 ) ) & 0xff ] ^ ( crc >> 8 )		8518894	0		=			
ANR	8518912	Identifier	crc		8518894	0					
ANR	8518913	ExclusiveOrExpression	crc_table [ ( crc ^ ( value >> 16 ) ) & 0xff ] ^ ( crc >> 8 )		8518894	1		^			
ANR	8518914	ArrayIndexing	crc_table [ ( crc ^ ( value >> 16 ) ) & 0xff ]		8518894	0					
ANR	8518915	Identifier	crc_table		8518894	0					
ANR	8518916	BitAndExpression	( crc ^ ( value >> 16 ) ) & 0xff		8518894	1		&			
ANR	8518917	ExclusiveOrExpression	crc ^ ( value >> 16 )		8518894	0		^			
ANR	8518918	Identifier	crc		8518894	0					
ANR	8518919	ShiftExpression	value >> 16		8518894	1		>>			
ANR	8518920	Identifier	value		8518894	0					
ANR	8518921	PrimaryExpression	16		8518894	1					
ANR	8518922	PrimaryExpression	0xff		8518894	1					
ANR	8518923	ShiftExpression	crc >> 8		8518894	1		>>			
ANR	8518924	Identifier	crc		8518894	0					
ANR	8518925	PrimaryExpression	8		8518894	1					
ANR	8518926	ExpressionStatement	crc = crc_table [ ( crc ^ ( value >> 8 ) ) & 0xff ] ^ ( crc >> 8 )	569:3:18406:18463	8518894	2	True				
ANR	8518927	AssignmentExpression	crc = crc_table [ ( crc ^ ( value >> 8 ) ) & 0xff ] ^ ( crc >> 8 )		8518894	0		=			
ANR	8518928	Identifier	crc		8518894	0					
ANR	8518929	ExclusiveOrExpression	crc_table [ ( crc ^ ( value >> 8 ) ) & 0xff ] ^ ( crc >> 8 )		8518894	1		^			
ANR	8518930	ArrayIndexing	crc_table [ ( crc ^ ( value >> 8 ) ) & 0xff ]		8518894	0					
ANR	8518931	Identifier	crc_table		8518894	0					
ANR	8518932	BitAndExpression	( crc ^ ( value >> 8 ) ) & 0xff		8518894	1		&			
ANR	8518933	ExclusiveOrExpression	crc ^ ( value >> 8 )		8518894	0		^			
ANR	8518934	Identifier	crc		8518894	0					
ANR	8518935	ShiftExpression	value >> 8		8518894	1		>>			
ANR	8518936	Identifier	value		8518894	0					
ANR	8518937	PrimaryExpression	8		8518894	1					
ANR	8518938	PrimaryExpression	0xff		8518894	1					
ANR	8518939	ShiftExpression	crc >> 8		8518894	1		>>			
ANR	8518940	Identifier	crc		8518894	0					
ANR	8518941	PrimaryExpression	8		8518894	1					
ANR	8518942	ReturnStatement	return crc_table [ ( crc ^ value ) & 0xff ] ^ ( crc >> 8 ) ;	570:3:18468:18519	8518894	3	True				
ANR	8518943	ExclusiveOrExpression	crc_table [ ( crc ^ value ) & 0xff ] ^ ( crc >> 8 )		8518894	0		^			
ANR	8518944	ArrayIndexing	crc_table [ ( crc ^ value ) & 0xff ]		8518894	0					
ANR	8518945	Identifier	crc_table		8518894	0					
ANR	8518946	BitAndExpression	( crc ^ value ) & 0xff		8518894	1		&			
ANR	8518947	ExclusiveOrExpression	crc ^ value		8518894	0		^			
ANR	8518948	Identifier	crc		8518894	0					
ANR	8518949	Identifier	value		8518894	1					
ANR	8518950	PrimaryExpression	0xff		8518894	1					
ANR	8518951	ShiftExpression	crc >> 8		8518894	1		>>			
ANR	8518952	Identifier	crc		8518894	0					
ANR	8518953	PrimaryExpression	8		8518894	1					
ANR	8518954	ReturnType	static png_uint_32		8518894	1					
ANR	8518955	Identifier	crc_init_4		8518894	2					
ANR	8518956	ParameterList	png_uint_32 value		8518894	3					
ANR	8518957	Parameter	png_uint_32 value	557:11:17783:17799	8518894	0	True				
ANR	8518958	ParameterType	png_uint_32		8518894	0					
ANR	8518959	Identifier	value		8518894	1					
ANR	8518960	CFGEntryNode	ENTRY		8518894		True				
ANR	8518961	CFGExitNode	EXIT		8518894		True				
ANR	8518962	Symbol	crc_table		8518894						
ANR	8518963	Symbol	* crc		8518894						
ANR	8518964	Symbol	crc		8518894						
ANR	8518965	Symbol	* value		8518894						
ANR	8518966	Symbol	* crc_table		8518894						
ANR	8518967	Symbol	~value		8518894						
ANR	8518968	Symbol	value		8518894						
ANR	8518969	Symbol	* ~value		8518894						
ANR	8518970	Function	chunk_type_valid	573:0:18524:19404							
ANR	8518971	FunctionDef	chunk_type_valid (png_uint_32 c)		8518970	0					
ANR	8518972	CompoundStatement		579:0:18770:19404	8518970	0					
ANR	8518973	IdentifierDeclStatement	png_uint_32 t ;	580:3:18775:18788	8518970	0	True				
ANR	8518974	IdentifierDecl	t		8518970	0					
ANR	8518975	IdentifierDeclType	png_uint_32		8518970	0					
ANR	8518976	Identifier	t		8518970	1					
ANR	8518977	ExpressionStatement	"c &= ~PNG_U32 ( 32 , 32 , 0 , 32 )"	586:3:18990:19015	8518970	1	True				
ANR	8518978	AssignmentExpression	"c &= ~PNG_U32 ( 32 , 32 , 0 , 32 )"		8518970	0		&=			
ANR	8518979	Identifier	c		8518970	0					
ANR	8518980	CallExpression	"~PNG_U32 ( 32 , 32 , 0 , 32 )"		8518970	1					
ANR	8518981	Callee	~PNG_U32		8518970	0					
ANR	8518982	Identifier	~PNG_U32		8518970	0					
ANR	8518983	ArgumentList	32		8518970	1					
ANR	8518984	Argument	32		8518970	0					
ANR	8518985	PrimaryExpression	32		8518970	0					
ANR	8518986	Argument	32		8518970	1					
ANR	8518987	PrimaryExpression	32		8518970	0					
ANR	8518988	Argument	0		8518970	2					
ANR	8518989	PrimaryExpression	0		8518970	0					
ANR	8518990	Argument	32		8518970	3					
ANR	8518991	PrimaryExpression	32		8518970	0					
ANR	8518992	ExpressionStatement	t = ( c & ~0x1f1f1f1f ) ^ 0x40404040	587:3:19020:19054	8518970	2	True				
ANR	8518993	AssignmentExpression	t = ( c & ~0x1f1f1f1f ) ^ 0x40404040		8518970	0		=			
ANR	8518994	Identifier	t		8518970	0					
ANR	8518995	ExclusiveOrExpression	( c & ~0x1f1f1f1f ) ^ 0x40404040		8518970	1		^			
ANR	8518996	BitAndExpression	c & ~0x1f1f1f1f		8518970	0		&			
ANR	8518997	Identifier	c		8518970	0					
ANR	8518998	Identifier	~0x1f1f1f1f		8518970	1					
ANR	8518999	PrimaryExpression	0x40404040		8518970	1					
ANR	8519000	ExpressionStatement	"c -= PNG_U32 ( 65 , 65 , 65 , 65 )"	592:3:19185:19210	8518970	3	True				
ANR	8519001	AssignmentExpression	"c -= PNG_U32 ( 65 , 65 , 65 , 65 )"		8518970	0		-=			
ANR	8519002	Identifier	c		8518970	0					
ANR	8519003	CallExpression	"PNG_U32 ( 65 , 65 , 65 , 65 )"		8518970	1					
ANR	8519004	Callee	PNG_U32		8518970	0					
ANR	8519005	Identifier	PNG_U32		8518970	0					
ANR	8519006	ArgumentList	65		8518970	1					
ANR	8519007	Argument	65		8518970	0					
ANR	8519008	PrimaryExpression	65		8518970	0					
ANR	8519009	Argument	65		8518970	1					
ANR	8519010	PrimaryExpression	65		8518970	0					
ANR	8519011	Argument	65		8518970	2					
ANR	8519012	PrimaryExpression	65		8518970	0					
ANR	8519013	Argument	65		8518970	3					
ANR	8519014	PrimaryExpression	65		8518970	0					
ANR	8519015	ExpressionStatement	t |= c	593:3:19215:19221	8518970	4	True				
ANR	8519016	AssignmentExpression	t |= c		8518970	0		|=			
ANR	8519017	Identifier	t		8518970	0					
ANR	8519018	Identifier	c		8518970	1					
ANR	8519019	ExpressionStatement	"c -= PNG_U32 ( 25 , 25 , 25 , 26 )"	598:3:19331:19356	8518970	5	True				
ANR	8519020	AssignmentExpression	"c -= PNG_U32 ( 25 , 25 , 25 , 26 )"		8518970	0		-=			
ANR	8519021	Identifier	c		8518970	0					
ANR	8519022	CallExpression	"PNG_U32 ( 25 , 25 , 25 , 26 )"		8518970	1					
ANR	8519023	Callee	PNG_U32		8518970	0					
ANR	8519024	Identifier	PNG_U32		8518970	0					
ANR	8519025	ArgumentList	25		8518970	1					
ANR	8519026	Argument	25		8518970	0					
ANR	8519027	PrimaryExpression	25		8518970	0					
ANR	8519028	Argument	25		8518970	1					
ANR	8519029	PrimaryExpression	25		8518970	0					
ANR	8519030	Argument	25		8518970	2					
ANR	8519031	PrimaryExpression	25		8518970	0					
ANR	8519032	Argument	26		8518970	3					
ANR	8519033	PrimaryExpression	26		8518970	0					
ANR	8519034	ExpressionStatement	t |= ~c	599:3:19361:19368	8518970	6	True				
ANR	8519035	AssignmentExpression	t |= ~c		8518970	0		|=			
ANR	8519036	Identifier	t		8518970	0					
ANR	8519037	Identifier	~c		8518970	1					
ANR	8519038	ReturnStatement	return ( t & 0xe0e0e0e0 ) == 0 ;	601:3:19374:19402	8518970	7	True				
ANR	8519039	EqualityExpression	( t & 0xe0e0e0e0 ) == 0		8518970	0		==			
ANR	8519040	BitAndExpression	t & 0xe0e0e0e0		8518970	0		&			
ANR	8519041	Identifier	t		8518970	0					
ANR	8519042	PrimaryExpression	0xe0e0e0e0		8518970	1					
ANR	8519043	PrimaryExpression	0		8518970	1					
ANR	8519044	ReturnType	static int		8518970	1					
ANR	8519045	Identifier	chunk_type_valid		8518970	2					
ANR	8519046	ParameterList	png_uint_32 c		8518970	3					
ANR	8519047	Parameter	png_uint_32 c	574:17:18552:18564	8518970	0	True				
ANR	8519048	ParameterType	png_uint_32		8518970	0					
ANR	8519049	Identifier	c		8518970	1					
ANR	8519050	CFGEntryNode	ENTRY		8518970		True				
ANR	8519051	CFGExitNode	EXIT		8518970		True				
ANR	8519052	Symbol	c		8518970						
ANR	8519053	Symbol	t		8518970						
ANR	8519054	Symbol	~PNG_U32		8518970						
ANR	8519055	Symbol	~c		8518970						
ANR	8519056	Symbol	~0x1f1f1f1f		8518970						
ANR	8519057	Symbol	PNG_U32		8518970						
ANR	8519058	ClassDef	IDAT_list	611:0:19744:20033							
ANR	8519059	DeclStmt									
ANR	8519060	Decl							struct IDAT_list	struct IDAT_list *	next
ANR	8519061	DeclStmt									
ANR	8519062	Decl							unsigned int	unsigned int	length
ANR	8519063	DeclStmt									
ANR	8519064	Decl							unsigned int	unsigned int	count
ANR	8519065	DeclStmt									
ANR	8519066	Decl							png_uint_32	png_uint_32 [ IDAT_INIT_LENGTH ]	lengths
ANR	8519067	Function	IDAT_list_init	620:0:20037:20166							
ANR	8519068	FunctionDef	IDAT_list_init (struct IDAT_list * list)		8519067	0					
ANR	8519069	CompoundStatement		622:0:20088:20166	8519067	0					
ANR	8519070	ExpressionStatement	CLEAR ( * list )	623:3:20093:20105	8519067	0	True				
ANR	8519071	CallExpression	CLEAR ( * list )		8519067	0					
ANR	8519072	Callee	CLEAR		8519067	0					
ANR	8519073	Identifier	CLEAR		8519067	0					
ANR	8519074	ArgumentList	* list		8519067	1					
ANR	8519075	Argument	* list		8519067	0					
ANR	8519076	UnaryOperationExpression	* list		8519067	0					
ANR	8519077	UnaryOperator	*		8519067	0					
ANR	8519078	Identifier	list		8519067	1					
ANR	8519079	ExpressionStatement	list -> next = NULL	625:3:20111:20128	8519067	1	True				
ANR	8519080	AssignmentExpression	list -> next = NULL		8519067	0		=			
ANR	8519081	PtrMemberAccess	list -> next		8519067	0					
ANR	8519082	Identifier	list		8519067	0					
ANR	8519083	Identifier	next		8519067	1					
ANR	8519084	Identifier	NULL		8519067	1					
ANR	8519085	ExpressionStatement	list -> length = IDAT_INIT_LENGTH	626:3:20133:20164	8519067	2	True				
ANR	8519086	AssignmentExpression	list -> length = IDAT_INIT_LENGTH		8519067	0		=			
ANR	8519087	PtrMemberAccess	list -> length		8519067	0					
ANR	8519088	Identifier	list		8519067	0					
ANR	8519089	Identifier	length		8519067	1					
ANR	8519090	Identifier	IDAT_INIT_LENGTH		8519067	1					
ANR	8519091	ReturnType	static void		8519067	1					
ANR	8519092	Identifier	IDAT_list_init		8519067	2					
ANR	8519093	ParameterList	struct IDAT_list * list		8519067	3					
ANR	8519094	Parameter	struct IDAT_list * list	621:15:20064:20085	8519067	0	True				
ANR	8519095	ParameterType	struct IDAT_list *		8519067	0					
ANR	8519096	Identifier	list		8519067	1					
ANR	8519097	CFGEntryNode	ENTRY		8519067		True				
ANR	8519098	CFGExitNode	EXIT		8519067		True				
ANR	8519099	Symbol	list -> next		8519067						
ANR	8519100	Symbol	list -> length		8519067						
ANR	8519101	Symbol	NULL		8519067						
ANR	8519102	Symbol	* list		8519067						
ANR	8519103	Symbol	list		8519067						
ANR	8519104	Symbol	IDAT_INIT_LENGTH		8519067						
ANR	8519105	Function	IDAT_list_size	629:0:20169:20455							
ANR	8519106	FunctionDef	"IDAT_list_size (struct IDAT_list * list , unsigned int length)"		8519105	0					
ANR	8519107	CompoundStatement		632:0:20314:20455	8519105	0					
ANR	8519108	IfStatement	if ( list != NULL )		8519105	0					
ANR	8519109	Condition	list != NULL	633:7:20323:20334	8519105	0	True				
ANR	8519110	EqualityExpression	list != NULL		8519105	0		!=			
ANR	8519111	Identifier	list		8519105	0					
ANR	8519112	Identifier	NULL		8519105	1					
ANR	8519113	ExpressionStatement	length = list -> length	634:6:20343:20364	8519105	1	True				
ANR	8519114	AssignmentExpression	length = list -> length		8519105	0		=			
ANR	8519115	Identifier	length		8519105	0					
ANR	8519116	PtrMemberAccess	list -> length		8519105	1					
ANR	8519117	Identifier	list		8519105	0					
ANR	8519118	Identifier	length		8519105	1					
ANR	8519119	ReturnStatement	return sizeof * list - sizeof list -> lengths + length * sizeof list -> lengths [ 0 ] ;	636:3:20370:20453	8519105	1	True				
ANR	8519120	AdditiveExpression	sizeof * list - sizeof list -> lengths + length * sizeof list -> lengths [ 0 ]		8519105	0		-			
ANR	8519121	SizeofExpression	sizeof * list		8519105	0					
ANR	8519122	Sizeof	sizeof		8519105	0					
ANR	8519123	UnaryOperationExpression	* list		8519105	1					
ANR	8519124	UnaryOperator	*		8519105	0					
ANR	8519125	Identifier	list		8519105	1					
ANR	8519126	AdditiveExpression	sizeof list -> lengths + length * sizeof list -> lengths [ 0 ]		8519105	1		+			
ANR	8519127	SizeofExpression	sizeof list -> lengths		8519105	0					
ANR	8519128	Sizeof	sizeof		8519105	0					
ANR	8519129	PtrMemberAccess	list -> lengths		8519105	1					
ANR	8519130	Identifier	list		8519105	0					
ANR	8519131	Identifier	lengths		8519105	1					
ANR	8519132	MultiplicativeExpression	length * sizeof list -> lengths [ 0 ]		8519105	1		*			
ANR	8519133	Identifier	length		8519105	0					
ANR	8519134	SizeofExpression	sizeof list -> lengths [ 0 ]		8519105	1					
ANR	8519135	Sizeof	sizeof		8519105	0					
ANR	8519136	ArrayIndexing	list -> lengths [ 0 ]		8519105	1					
ANR	8519137	PtrMemberAccess	list -> lengths		8519105	0					
ANR	8519138	Identifier	list		8519105	0					
ANR	8519139	Identifier	lengths		8519105	1					
ANR	8519140	PrimaryExpression	0		8519105	1					
ANR	8519141	ReturnType	static size_t		8519105	1					
ANR	8519142	Identifier	IDAT_list_size		8519105	2					
ANR	8519143	ParameterList	"struct IDAT_list * list , unsigned int length"		8519105	3					
ANR	8519144	Parameter	struct IDAT_list * list	630:15:20198:20219	8519105	0	True				
ANR	8519145	ParameterType	struct IDAT_list *		8519105	0					
ANR	8519146	Identifier	list		8519105	1					
ANR	8519147	Parameter	unsigned int length	630:39:20222:20240	8519105	1	True				
ANR	8519148	ParameterType	unsigned int		8519105	0					
ANR	8519149	Identifier	length		8519105	1					
ANR	8519150	CFGEntryNode	ENTRY		8519105		True				
ANR	8519151	CFGExitNode	EXIT		8519105		True				
ANR	8519152	Symbol	list -> length		8519105						
ANR	8519153	Symbol	NULL		8519105						
ANR	8519154	Symbol	* * list		8519105						
ANR	8519155	Symbol	list -> lengths		8519105						
ANR	8519156	Symbol	* list -> lengths		8519105						
ANR	8519157	Symbol	* list		8519105						
ANR	8519158	Symbol	length		8519105						
ANR	8519159	Symbol	list		8519105						
ANR	8519160	Function	IDAT_list_end	640:0:20458:20743							
ANR	8519161	FunctionDef	IDAT_list_end (struct IDAT_list * IDAT_list)		8519160	0					
ANR	8519162	CompoundStatement		642:0:20513:20743	8519160	0					
ANR	8519163	IdentifierDeclStatement	struct IDAT_list * list = IDAT_list -> next ;	643:3:20518:20558	8519160	0	True				
ANR	8519164	IdentifierDecl	* list = IDAT_list -> next		8519160	0					
ANR	8519165	IdentifierDeclType	struct IDAT_list *		8519160	0					
ANR	8519166	Identifier	list		8519160	1					
ANR	8519167	AssignmentExpression	* list = IDAT_list -> next		8519160	2		=			
ANR	8519168	Identifier	list		8519160	0					
ANR	8519169	PtrMemberAccess	IDAT_list -> next		8519160	1					
ANR	8519170	Identifier	IDAT_list		8519160	0					
ANR	8519171	Identifier	next		8519160	1					
ANR	8519172	ExpressionStatement	CLEAR ( * IDAT_list )	645:3:20564:20581	8519160	1	True				
ANR	8519173	CallExpression	CLEAR ( * IDAT_list )		8519160	0					
ANR	8519174	Callee	CLEAR		8519160	0					
ANR	8519175	Identifier	CLEAR		8519160	0					
ANR	8519176	ArgumentList	* IDAT_list		8519160	1					
ANR	8519177	Argument	* IDAT_list		8519160	0					
ANR	8519178	UnaryOperationExpression	* IDAT_list		8519160	0					
ANR	8519179	UnaryOperator	*		8519160	0					
ANR	8519180	Identifier	IDAT_list		8519160	1					
ANR	8519181	WhileStatement	while ( list != NULL )		8519160	2					
ANR	8519182	Condition	list != NULL	647:10:20594:20605	8519160	0	True				
ANR	8519183	EqualityExpression	list != NULL		8519160	0		!=			
ANR	8519184	Identifier	list		8519160	0					
ANR	8519185	Identifier	NULL		8519160	1					
ANR	8519186	CompoundStatement		8:6:105:140	8519160	1					
ANR	8519187	IdentifierDeclStatement	struct IDAT_list * next = list -> next ;	649:6:20619:20654	8519160	0	True				
ANR	8519188	IdentifierDecl	* next = list -> next		8519160	0					
ANR	8519189	IdentifierDeclType	struct IDAT_list *		8519160	0					
ANR	8519190	Identifier	next		8519160	1					
ANR	8519191	AssignmentExpression	* next = list -> next		8519160	2		=			
ANR	8519192	Identifier	next		8519160	0					
ANR	8519193	PtrMemberAccess	list -> next		8519160	1					
ANR	8519194	Identifier	list		8519160	0					
ANR	8519195	Identifier	next		8519160	1					
ANR	8519196	ExpressionStatement	"clear ( list , IDAT_list_size ( list , 0 ) )"	651:6:20663:20699	8519160	1	True				
ANR	8519197	CallExpression	"clear ( list , IDAT_list_size ( list , 0 ) )"		8519160	0					
ANR	8519198	Callee	clear		8519160	0					
ANR	8519199	Identifier	clear		8519160	0					
ANR	8519200	ArgumentList	list		8519160	1					
ANR	8519201	Argument	list		8519160	0					
ANR	8519202	Identifier	list		8519160	0					
ANR	8519203	Argument	"IDAT_list_size ( list , 0 )"		8519160	1					
ANR	8519204	CallExpression	"IDAT_list_size ( list , 0 )"		8519160	0					
ANR	8519205	Callee	IDAT_list_size		8519160	0					
ANR	8519206	Identifier	IDAT_list_size		8519160	0					
ANR	8519207	ArgumentList	list		8519160	1					
ANR	8519208	Argument	list		8519160	0					
ANR	8519209	Identifier	list		8519160	0					
ANR	8519210	Argument	0		8519160	1					
ANR	8519211	PrimaryExpression	0		8519160	0					
ANR	8519212	ExpressionStatement	free ( list )	652:6:20707:20717	8519160	2	True				
ANR	8519213	CallExpression	free ( list )		8519160	0					
ANR	8519214	Callee	free		8519160	0					
ANR	8519215	Identifier	free		8519160	0					
ANR	8519216	ArgumentList	list		8519160	1					
ANR	8519217	Argument	list		8519160	0					
ANR	8519218	Identifier	list		8519160	0					
ANR	8519219	ExpressionStatement	list = next	653:6:20725:20736	8519160	3	True				
ANR	8519220	AssignmentExpression	list = next		8519160	0		=			
ANR	8519221	Identifier	list		8519160	0					
ANR	8519222	Identifier	next		8519160	1					
ANR	8519223	ReturnType	static void		8519160	1					
ANR	8519224	Identifier	IDAT_list_end		8519160	2					
ANR	8519225	ParameterList	struct IDAT_list * IDAT_list		8519160	3					
ANR	8519226	Parameter	struct IDAT_list * IDAT_list	641:14:20484:20510	8519160	0	True				
ANR	8519227	ParameterType	struct IDAT_list *		8519160	0					
ANR	8519228	Identifier	IDAT_list		8519160	1					
ANR	8519229	CFGEntryNode	ENTRY		8519160		True				
ANR	8519230	CFGExitNode	EXIT		8519160		True				
ANR	8519231	Symbol	next		8519160						
ANR	8519232	Symbol	list -> next		8519160						
ANR	8519233	Symbol	IDAT_list		8519160						
ANR	8519234	Symbol	NULL		8519160						
ANR	8519235	Symbol	* list		8519160						
ANR	8519236	Symbol	* IDAT_list		8519160						
ANR	8519237	Symbol	IDAT_list -> next		8519160						
ANR	8519238	Symbol	list		8519160						
ANR	8519239	Symbol	IDAT_list_size		8519160						
ANR	8519240	Function	IDAT_list_extend	657:0:20746:21490							
ANR	8519241	FunctionDef	IDAT_list_extend (struct IDAT_list * tail)		8519240	0					
ANR	8519242	CompoundStatement		659:0:20813:21490	8519240	0					
ANR	8519243	IdentifierDeclStatement	struct IDAT_list * next = tail -> next ;	661:3:20871:20906	8519240	0	True				
ANR	8519244	IdentifierDecl	* next = tail -> next		8519240	0					
ANR	8519245	IdentifierDeclType	struct IDAT_list *		8519240	0					
ANR	8519246	Identifier	next		8519240	1					
ANR	8519247	AssignmentExpression	* next = tail -> next		8519240	2		=			
ANR	8519248	Identifier	next		8519240	0					
ANR	8519249	PtrMemberAccess	tail -> next		8519240	1					
ANR	8519250	Identifier	tail		8519240	0					
ANR	8519251	Identifier	next		8519240	1					
ANR	8519252	IfStatement	if ( next == NULL )		8519240	1					
ANR	8519253	Condition	next == NULL	663:7:20916:20927	8519240	0	True				
ANR	8519254	EqualityExpression	next == NULL		8519240	0		==			
ANR	8519255	Identifier	next		8519240	0					
ANR	8519256	Identifier	NULL		8519240	1					
ANR	8519257	CompoundStatement		10:6:260:298	8519240	1					
ANR	8519258	IdentifierDeclStatement	unsigned int length = 2 * tail -> length ;	668:6:21074:21112	8519240	0	True				
ANR	8519259	IdentifierDecl	length = 2 * tail -> length		8519240	0					
ANR	8519260	IdentifierDeclType	unsigned int		8519240	0					
ANR	8519261	Identifier	length		8519240	1					
ANR	8519262	AssignmentExpression	length = 2 * tail -> length		8519240	2		=			
ANR	8519263	Identifier	length		8519240	0					
ANR	8519264	MultiplicativeExpression	2 * tail -> length		8519240	1		*			
ANR	8519265	PrimaryExpression	2		8519240	0					
ANR	8519266	PtrMemberAccess	tail -> length		8519240	1					
ANR	8519267	Identifier	tail		8519240	0					
ANR	8519268	Identifier	length		8519240	1					
ANR	8519269	IfStatement	if ( length < tail -> length )		8519240	1					
ANR	8519270	Condition	length < tail -> length	670:10:21125:21145	8519240	0	True				
ANR	8519271	RelationalExpression	length < tail -> length		8519240	0		<			
ANR	8519272	Identifier	length		8519240	0					
ANR	8519273	PtrMemberAccess	tail -> length		8519240	1					
ANR	8519274	Identifier	tail		8519240	0					
ANR	8519275	Identifier	length		8519240	1					
ANR	8519276	ExpressionStatement	length = tail -> length	671:9:21183:21204	8519240	1	True				
ANR	8519277	AssignmentExpression	length = tail -> length		8519240	0		=			
ANR	8519278	Identifier	length		8519240	0					
ANR	8519279	PtrMemberAccess	tail -> length		8519240	1					
ANR	8519280	Identifier	tail		8519240	0					
ANR	8519281	Identifier	length		8519240	1					
ANR	8519282	Statement	next	673:6:21213:21216	8519240	2	True				
ANR	8519283	Statement	=	673:11:21218:21218	8519240	3	True				
ANR	8519284	Statement	voidcast	673:13:21220:21227	8519240	4	True				
ANR	8519285	Statement	(	673:21:21228:21228	8519240	5	True				
ANR	8519286	Statement	IDAT_list	673:22:21229:21237	8519240	6	True				
ANR	8519287	Statement	*	673:31:21238:21238	8519240	7	True				
ANR	8519288	Statement	","	673:32:21239:21239	8519240	8	True				
ANR	8519289	Statement	malloc	673:34:21241:21246	8519240	9	True				
ANR	8519290	Statement	(	673:40:21247:21247	8519240	10	True				
ANR	8519291	Statement	IDAT_list_size	673:41:21248:21261	8519240	11	True				
ANR	8519292	Statement	(	673:55:21262:21262	8519240	12	True				
ANR	8519293	Statement	NULL	673:56:21263:21266	8519240	13	True				
ANR	8519294	Statement	","	673:60:21267:21267	8519240	14	True				
ANR	8519295	Statement	length	673:62:21269:21274	8519240	15	True				
ANR	8519296	Statement	)	673:68:21275:21275	8519240	16	True				
ANR	8519297	Statement	)	673:69:21276:21276	8519240	17	True				
ANR	8519298	Statement	)	673:70:21277:21277	8519240	18	True				
ANR	8519299	ExpressionStatement		673:71:21278:21278	8519240	19	True				
ANR	8519300	ExpressionStatement	CLEAR ( * next )	674:6:21286:21298	8519240	20	True				
ANR	8519301	CallExpression	CLEAR ( * next )		8519240	0					
ANR	8519302	Callee	CLEAR		8519240	0					
ANR	8519303	Identifier	CLEAR		8519240	0					
ANR	8519304	ArgumentList	* next		8519240	1					
ANR	8519305	Argument	* next		8519240	0					
ANR	8519306	UnaryOperationExpression	* next		8519240	0					
ANR	8519307	UnaryOperator	*		8519240	0					
ANR	8519308	Identifier	next		8519240	1					
ANR	8519309	IfStatement	if ( next == NULL )		8519240	21					
ANR	8519310	Condition	next == NULL	677:10:21352:21363	8519240	0	True				
ANR	8519311	EqualityExpression	next == NULL		8519240	0		==			
ANR	8519312	Identifier	next		8519240	0					
ANR	8519313	Identifier	NULL		8519240	1					
ANR	8519314	ReturnStatement	return NULL ;	678:9:21375:21386	8519240	1	True				
ANR	8519315	Identifier	NULL		8519240	0					
ANR	8519316	ExpressionStatement	next -> next = NULL	680:6:21395:21412	8519240	22	True				
ANR	8519317	AssignmentExpression	next -> next = NULL		8519240	0		=			
ANR	8519318	PtrMemberAccess	next -> next		8519240	0					
ANR	8519319	Identifier	next		8519240	0					
ANR	8519320	Identifier	next		8519240	1					
ANR	8519321	Identifier	NULL		8519240	1					
ANR	8519322	ExpressionStatement	next -> length = length	681:6:21420:21441	8519240	23	True				
ANR	8519323	AssignmentExpression	next -> length = length		8519240	0		=			
ANR	8519324	PtrMemberAccess	next -> length		8519240	0					
ANR	8519325	Identifier	next		8519240	0					
ANR	8519326	Identifier	length		8519240	1					
ANR	8519327	Identifier	length		8519240	1					
ANR	8519328	ExpressionStatement	tail -> next = next	682:6:21449:21466	8519240	24	True				
ANR	8519329	AssignmentExpression	tail -> next = next		8519240	0		=			
ANR	8519330	PtrMemberAccess	tail -> next		8519240	0					
ANR	8519331	Identifier	tail		8519240	0					
ANR	8519332	Identifier	next		8519240	1					
ANR	8519333	Identifier	next		8519240	1					
ANR	8519334	ReturnStatement	return next ;	685:3:21477:21488	8519240	2	True				
ANR	8519335	Identifier	next		8519240	0					
ANR	8519336	ReturnType	static struct IDAT_list *		8519240	1					
ANR	8519337	Identifier	IDAT_list_extend		8519240	2					
ANR	8519338	ParameterList	struct IDAT_list * tail		8519240	3					
ANR	8519339	Parameter	struct IDAT_list * tail	658:17:20789:20810	8519240	0	True				
ANR	8519340	ParameterType	struct IDAT_list *		8519240	0					
ANR	8519341	Identifier	tail		8519240	1					
ANR	8519342	CFGEntryNode	ENTRY		8519240		True				
ANR	8519343	CFGExitNode	EXIT		8519240		True				
ANR	8519344	Symbol	next		8519240						
ANR	8519345	Symbol	next -> length		8519240						
ANR	8519346	Symbol	* tail		8519240						
ANR	8519347	Symbol	NULL		8519240						
ANR	8519348	Symbol	tail -> length		8519240						
ANR	8519349	Symbol	tail		8519240						
ANR	8519350	Symbol	tail -> next		8519240						
ANR	8519351	Symbol	length		8519240						
ANR	8519352	Symbol	next -> next		8519240						
ANR	8519353	Symbol	* next		8519240						
ANR	8519354	ClassDef	global	689:0:21524:23355							
ANR	8519355	DeclStmt									
ANR	8519356	Decl							png_uint_32	png_uint_32	idat_max
ANR	8519357	DeclStmt									
ANR	8519358	Decl							int	int	status_code
ANR	8519359	DeclStmt									
ANR	8519360	Decl							struct IDAT_list	struct IDAT_list	idat_cache
ANR	8519361	Function	global_end	724:0:23359:23520							
ANR	8519362	FunctionDef	global_end (struct global * global)		8519361	0					
ANR	8519363	CompoundStatement		726:0:23404:23520	8519361	0					
ANR	8519364	IdentifierDeclStatement	int rc ;	728:3:23410:23416	8519361	0	True				
ANR	8519365	IdentifierDecl	rc		8519361	0					
ANR	8519366	IdentifierDeclType	int		8519361	0					
ANR	8519367	Identifier	rc		8519361	1					
ANR	8519368	ExpressionStatement	IDAT_list_end ( & global -> idat_cache )	730:3:23422:23456	8519361	1	True				
ANR	8519369	CallExpression	IDAT_list_end ( & global -> idat_cache )		8519361	0					
ANR	8519370	Callee	IDAT_list_end		8519361	0					
ANR	8519371	Identifier	IDAT_list_end		8519361	0					
ANR	8519372	ArgumentList	& global -> idat_cache		8519361	1					
ANR	8519373	Argument	& global -> idat_cache		8519361	0					
ANR	8519374	UnaryOperationExpression	& global -> idat_cache		8519361	0					
ANR	8519375	UnaryOperator	&		8519361	0					
ANR	8519376	PtrMemberAccess	global -> idat_cache		8519361	1					
ANR	8519377	Identifier	global		8519361	0					
ANR	8519378	Identifier	idat_cache		8519361	1					
ANR	8519379	ExpressionStatement	rc = global -> status_code	731:3:23461:23485	8519361	2	True				
ANR	8519380	AssignmentExpression	rc = global -> status_code		8519361	0		=			
ANR	8519381	Identifier	rc		8519361	0					
ANR	8519382	PtrMemberAccess	global -> status_code		8519361	1					
ANR	8519383	Identifier	global		8519361	0					
ANR	8519384	Identifier	status_code		8519361	1					
ANR	8519385	ExpressionStatement	CLEAR ( * global )	732:3:23490:23504	8519361	3	True				
ANR	8519386	CallExpression	CLEAR ( * global )		8519361	0					
ANR	8519387	Callee	CLEAR		8519361	0					
ANR	8519388	Identifier	CLEAR		8519361	0					
ANR	8519389	ArgumentList	* global		8519361	1					
ANR	8519390	Argument	* global		8519361	0					
ANR	8519391	UnaryOperationExpression	* global		8519361	0					
ANR	8519392	UnaryOperator	*		8519361	0					
ANR	8519393	Identifier	global		8519361	1					
ANR	8519394	ReturnStatement	return rc ;	733:3:23509:23518	8519361	4	True				
ANR	8519395	Identifier	rc		8519361	0					
ANR	8519396	ReturnType	static int		8519361	1					
ANR	8519397	Identifier	global_end		8519361	2					
ANR	8519398	ParameterList	struct global * global		8519361	3					
ANR	8519399	Parameter	struct global * global	725:11:23381:23401	8519361	0	True				
ANR	8519400	ParameterType	struct global *		8519361	0					
ANR	8519401	Identifier	global		8519361	1					
ANR	8519402	CFGEntryNode	ENTRY		8519361		True				
ANR	8519403	CFGExitNode	EXIT		8519361		True				
ANR	8519404	Symbol	rc		8519361						
ANR	8519405	Symbol	& global -> idat_cache		8519361						
ANR	8519406	Symbol	* global		8519361						
ANR	8519407	Symbol	global		8519361						
ANR	8519408	Symbol	global -> status_code		8519361						
ANR	8519409	Function	global_init	736:0:23523:24001							
ANR	8519410	FunctionDef	global_init (struct global * global)		8519409	0					
ANR	8519411	CompoundStatement		739:0:23636:24001	8519409	0					
ANR	8519412	ExpressionStatement	CLEAR ( * global )	740:3:23641:23655	8519409	0	True				
ANR	8519413	CallExpression	CLEAR ( * global )		8519409	0					
ANR	8519414	Callee	CLEAR		8519409	0					
ANR	8519415	Identifier	CLEAR		8519409	0					
ANR	8519416	ArgumentList	* global		8519409	1					
ANR	8519417	Argument	* global		8519409	0					
ANR	8519418	UnaryOperationExpression	* global		8519409	0					
ANR	8519419	UnaryOperator	*		8519409	0					
ANR	8519420	Identifier	global		8519409	1					
ANR	8519421	ExpressionStatement	global -> errors = 0	743:3:23678:23703	8519409	1	True				
ANR	8519422	AssignmentExpression	global -> errors = 0		8519409	0		=			
ANR	8519423	PtrMemberAccess	global -> errors		8519409	0					
ANR	8519424	Identifier	global		8519409	0					
ANR	8519425	Identifier	errors		8519409	1					
ANR	8519426	PrimaryExpression	0		8519409	1					
ANR	8519427	ExpressionStatement	global -> warnings = 0	744:3:23708:23733	8519409	2	True				
ANR	8519428	AssignmentExpression	global -> warnings = 0		8519409	0		=			
ANR	8519429	PtrMemberAccess	global -> warnings		8519409	0					
ANR	8519430	Identifier	global		8519409	0					
ANR	8519431	Identifier	warnings		8519409	1					
ANR	8519432	PrimaryExpression	0		8519409	1					
ANR	8519433	ExpressionStatement	global -> quiet = 0	745:3:23738:23763	8519409	3	True				
ANR	8519434	AssignmentExpression	global -> quiet = 0		8519409	0		=			
ANR	8519435	PtrMemberAccess	global -> quiet		8519409	0					
ANR	8519436	Identifier	global		8519409	0					
ANR	8519437	Identifier	quiet		8519409	1					
ANR	8519438	PrimaryExpression	0		8519409	1					
ANR	8519439	ExpressionStatement	global -> verbose = 0	746:3:23768:23793	8519409	4	True				
ANR	8519440	AssignmentExpression	global -> verbose = 0		8519409	0		=			
ANR	8519441	PtrMemberAccess	global -> verbose		8519409	0					
ANR	8519442	Identifier	global		8519409	0					
ANR	8519443	Identifier	verbose		8519409	1					
ANR	8519444	PrimaryExpression	0		8519409	1					
ANR	8519445	ExpressionStatement	global -> idat_max = 0	747:3:23798:23823	8519409	5	True				
ANR	8519446	AssignmentExpression	global -> idat_max = 0		8519409	0		=			
ANR	8519447	PtrMemberAccess	global -> idat_max		8519409	0					
ANR	8519448	Identifier	global		8519409	0					
ANR	8519449	Identifier	idat_max		8519409	1					
ANR	8519450	PrimaryExpression	0		8519409	1					
ANR	8519451	ExpressionStatement	global -> optimize_zlib = 0	748:3:23865:23890	8519409	6	True				
ANR	8519452	AssignmentExpression	global -> optimize_zlib = 0		8519409	0		=			
ANR	8519453	PtrMemberAccess	global -> optimize_zlib		8519409	0					
ANR	8519454	Identifier	global		8519409	0					
ANR	8519455	Identifier	optimize_zlib		8519409	1					
ANR	8519456	PrimaryExpression	0		8519409	1					
ANR	8519457	ExpressionStatement	global -> skip = SKIP_NONE	749:3:23895:23928	8519409	7	True				
ANR	8519458	AssignmentExpression	global -> skip = SKIP_NONE		8519409	0		=			
ANR	8519459	PtrMemberAccess	global -> skip		8519409	0					
ANR	8519460	Identifier	global		8519409	0					
ANR	8519461	Identifier	skip		8519409	1					
ANR	8519462	Identifier	SKIP_NONE		8519409	1					
ANR	8519463	ExpressionStatement	global -> status_code = 0	750:3:23933:23958	8519409	8	True				
ANR	8519464	AssignmentExpression	global -> status_code = 0		8519409	0		=			
ANR	8519465	PtrMemberAccess	global -> status_code		8519409	0					
ANR	8519466	Identifier	global		8519409	0					
ANR	8519467	Identifier	status_code		8519409	1					
ANR	8519468	PrimaryExpression	0		8519409	1					
ANR	8519469	ExpressionStatement	IDAT_list_init ( & global -> idat_cache )	752:3:23964:23999	8519409	9	True				
ANR	8519470	CallExpression	IDAT_list_init ( & global -> idat_cache )		8519409	0					
ANR	8519471	Callee	IDAT_list_init		8519409	0					
ANR	8519472	Identifier	IDAT_list_init		8519409	0					
ANR	8519473	ArgumentList	& global -> idat_cache		8519409	1					
ANR	8519474	Argument	& global -> idat_cache		8519409	0					
ANR	8519475	UnaryOperationExpression	& global -> idat_cache		8519409	0					
ANR	8519476	UnaryOperator	&		8519409	0					
ANR	8519477	PtrMemberAccess	global -> idat_cache		8519409	1					
ANR	8519478	Identifier	global		8519409	0					
ANR	8519479	Identifier	idat_cache		8519409	1					
ANR	8519480	ReturnType	static void		8519409	1					
ANR	8519481	Identifier	global_init		8519409	2					
ANR	8519482	ParameterList	struct global * global		8519409	3					
ANR	8519483	Parameter	struct global * global	737:12:23547:23567	8519409	0	True				
ANR	8519484	ParameterType	struct global *		8519409	0					
ANR	8519485	Identifier	global		8519409	1					
ANR	8519486	CFGEntryNode	ENTRY		8519409		True				
ANR	8519487	CFGExitNode	EXIT		8519409		True				
ANR	8519488	Symbol	global -> warnings		8519409						
ANR	8519489	Symbol	global -> optimize_zlib		8519409						
ANR	8519490	Symbol	& global -> idat_cache		8519409						
ANR	8519491	Symbol	global -> errors		8519409						
ANR	8519492	Symbol	* global		8519409						
ANR	8519493	Symbol	global -> verbose		8519409						
ANR	8519494	Symbol	global		8519409						
ANR	8519495	Symbol	SKIP_NONE		8519409						
ANR	8519496	Symbol	global -> idat_max		8519409						
ANR	8519497	Symbol	global -> status_code		8519409						
ANR	8519498	Symbol	global -> skip		8519409						
ANR	8519499	Symbol	global -> quiet		8519409						
ANR	8519500	Function	skip_chunk_type	755:0:24004:26486							
ANR	8519501	FunctionDef	"skip_chunk_type (const struct global * global , png_uint_32 type)"		8519500	0					
ANR	8519502	CompoundStatement		761:0:24282:26486	8519500	0					
ANR	8519503	IfStatement	if ( CRITICAL ( type ) )		8519500	0					
ANR	8519504	Condition	CRITICAL ( type )	763:7:24329:24342	8519500	0	True				
ANR	8519505	CallExpression	CRITICAL ( type )		8519500	0					
ANR	8519506	Callee	CRITICAL		8519500	0					
ANR	8519507	Identifier	CRITICAL		8519500	0					
ANR	8519508	ArgumentList	type		8519500	1					
ANR	8519509	Argument	type		8519500	0					
ANR	8519510	Identifier	type		8519500	0					
ANR	8519511	ReturnStatement	return 0 ;	764:6:24351:24359	8519500	1	True				
ANR	8519512	PrimaryExpression	0		8519500	0					
ANR	8519513	SwitchStatement	switch ( type )		8519500	1					
ANR	8519514	Condition	type	766:11:24373:24376	8519500	0	True				
ANR	8519515	Identifier	type		8519500	0					
ANR	8519516	CompoundStatement		7:3:99:99	8519500	1					
ANR	8519517	Label	case png_tRNS :	771:6:24532:24545	8519500	0	True				
ANR	8519518	Identifier	png_tRNS		8519500	0					
ANR	8519519	Label	case png_sBIT :	771:21:24547:24560	8519500	1	True				
ANR	8519520	Identifier	png_sBIT		8519500	0					
ANR	8519521	ReturnStatement	return 0 ;	772:9:24571:24579	8519500	2	True				
ANR	8519522	PrimaryExpression	0		8519500	0					
ANR	8519523	Label	case png_gAMA :	777:6:24712:24725	8519500	3	True				
ANR	8519524	Identifier	png_gAMA		8519500	0					
ANR	8519525	Label	case png_sRGB :	777:21:24727:24740	8519500	4	True				
ANR	8519526	Identifier	png_sRGB		8519500	0					
ANR	8519527	IfStatement	if ( global -> skip >= SKIP_ALL )		8519500	5					
ANR	8519528	Condition	global -> skip >= SKIP_ALL	778:13:24755:24778	8519500	0	True				
ANR	8519529	RelationalExpression	global -> skip >= SKIP_ALL		8519500	0		>=			
ANR	8519530	PtrMemberAccess	global -> skip		8519500	0					
ANR	8519531	Identifier	global		8519500	0					
ANR	8519532	Identifier	skip		8519500	1					
ANR	8519533	Identifier	SKIP_ALL		8519500	1					
ANR	8519534	ReturnStatement	return 1 ;	779:12:24793:24801	8519500	1	True				
ANR	8519535	PrimaryExpression	1		8519500	0					
ANR	8519536	ReturnStatement	return 0 ;	780:9:24812:24820	8519500	6	True				
ANR	8519537	PrimaryExpression	0		8519500	0					
ANR	8519538	Label	case png_cHRM :	786:6:25037:25050	8519500	7	True				
ANR	8519539	Identifier	png_cHRM		8519500	0					
ANR	8519540	Label	case png_iCCP :	786:21:25052:25065	8519500	8	True				
ANR	8519541	Identifier	png_iCCP		8519500	0					
ANR	8519542	IfStatement	if ( global -> skip >= SKIP_COLOR )		8519500	9					
ANR	8519543	Condition	global -> skip >= SKIP_COLOR	787:13:25080:25105	8519500	0	True				
ANR	8519544	RelationalExpression	global -> skip >= SKIP_COLOR		8519500	0		>=			
ANR	8519545	PtrMemberAccess	global -> skip		8519500	0					
ANR	8519546	Identifier	global		8519500	0					
ANR	8519547	Identifier	skip		8519500	1					
ANR	8519548	Identifier	SKIP_COLOR		8519500	1					
ANR	8519549	ReturnStatement	return 1 ;	788:12:25120:25128	8519500	1	True				
ANR	8519550	PrimaryExpression	1		8519500	0					
ANR	8519551	ReturnStatement	return 0 ;	789:9:25139:25147	8519500	10	True				
ANR	8519552	PrimaryExpression	0		8519500	0					
ANR	8519553	Label	case png_bKGD :	795:6:25335:25348	8519500	11	True				
ANR	8519554	Identifier	png_bKGD		8519500	0					
ANR	8519555	IfStatement	if ( global -> skip >= SKIP_TRANSFORM )		8519500	12					
ANR	8519556	Condition	global -> skip >= SKIP_TRANSFORM	796:13:25363:25392	8519500	0	True				
ANR	8519557	RelationalExpression	global -> skip >= SKIP_TRANSFORM		8519500	0		>=			
ANR	8519558	PtrMemberAccess	global -> skip		8519500	0					
ANR	8519559	Identifier	global		8519500	0					
ANR	8519560	Identifier	skip		8519500	1					
ANR	8519561	Identifier	SKIP_TRANSFORM		8519500	1					
ANR	8519562	ReturnStatement	return 1 ;	797:12:25407:25415	8519500	1	True				
ANR	8519563	PrimaryExpression	1		8519500	0					
ANR	8519564	ReturnStatement	return 0 ;	798:9:25426:25434	8519500	13	True				
ANR	8519565	PrimaryExpression	0		8519500	0					
ANR	8519566	Label	case png_fRAc :	804:6:25681:25694	8519500	14	True				
ANR	8519567	Identifier	png_fRAc		8519500	0					
ANR	8519568	Label	case png_gIFg :	804:21:25696:25709	8519500	15	True				
ANR	8519569	Identifier	png_gIFg		8519500	0					
ANR	8519570	Label	case png_gIFt :	804:36:25711:25724	8519500	16	True				
ANR	8519571	Identifier	png_gIFt		8519500	0					
ANR	8519572	Label	case png_gIFx :	804:51:25726:25739	8519500	17	True				
ANR	8519573	Identifier	png_gIFx		8519500	0					
ANR	8519574	Label	case png_hIST :	804:66:25741:25754	8519500	18	True				
ANR	8519575	Identifier	png_hIST		8519500	0					
ANR	8519576	Label	case png_iTXt :	805:6:25762:25775	8519500	19	True				
ANR	8519577	Identifier	png_iTXt		8519500	0					
ANR	8519578	Label	case png_oFFs :	805:21:25777:25790	8519500	20	True				
ANR	8519579	Identifier	png_oFFs		8519500	0					
ANR	8519580	Label	case png_pCAL :	805:36:25792:25805	8519500	21	True				
ANR	8519581	Identifier	png_pCAL		8519500	0					
ANR	8519582	Label	case png_pHYs :	805:51:25807:25820	8519500	22	True				
ANR	8519583	Identifier	png_pHYs		8519500	0					
ANR	8519584	Label	case png_sCAL :	805:66:25822:25835	8519500	23	True				
ANR	8519585	Identifier	png_sCAL		8519500	0					
ANR	8519586	Label	case png_sPLT :	806:6:25843:25856	8519500	24	True				
ANR	8519587	Identifier	png_sPLT		8519500	0					
ANR	8519588	Label	case png_sTER :	806:21:25858:25871	8519500	25	True				
ANR	8519589	Identifier	png_sTER		8519500	0					
ANR	8519590	Label	case png_tEXt :	806:36:25873:25886	8519500	26	True				
ANR	8519591	Identifier	png_tEXt		8519500	0					
ANR	8519592	Label	case png_tIME :	806:51:25888:25901	8519500	27	True				
ANR	8519593	Identifier	png_tIME		8519500	0					
ANR	8519594	Label	case png_zTXt :	806:66:25903:25916	8519500	28	True				
ANR	8519595	Identifier	png_zTXt		8519500	0					
ANR	8519596	IfStatement	if ( global -> skip >= SKIP_UNUSED )		8519500	29					
ANR	8519597	Condition	global -> skip >= SKIP_UNUSED	807:13:25931:25957	8519500	0	True				
ANR	8519598	RelationalExpression	global -> skip >= SKIP_UNUSED		8519500	0		>=			
ANR	8519599	PtrMemberAccess	global -> skip		8519500	0					
ANR	8519600	Identifier	global		8519500	0					
ANR	8519601	Identifier	skip		8519500	1					
ANR	8519602	Identifier	SKIP_UNUSED		8519500	1					
ANR	8519603	ReturnStatement	return 1 ;	808:12:25972:25980	8519500	1	True				
ANR	8519604	PrimaryExpression	1		8519500	0					
ANR	8519605	ReturnStatement	return 0 ;	809:9:25991:25999	8519500	30	True				
ANR	8519606	PrimaryExpression	0		8519500	0					
ANR	8519607	Label	default :	815:6:26242:26249	8519500	31	True				
ANR	8519608	Identifier	default		8519500	0					
ANR	8519609	IfStatement	if ( SAFE_TO_COPY ( type ) )		8519500	32					
ANR	8519610	Condition	SAFE_TO_COPY ( type )	816:13:26264:26281	8519500	0	True				
ANR	8519611	CallExpression	SAFE_TO_COPY ( type )		8519500	0					
ANR	8519612	Callee	SAFE_TO_COPY		8519500	0					
ANR	8519613	Identifier	SAFE_TO_COPY		8519500	0					
ANR	8519614	ArgumentList	type		8519500	1					
ANR	8519615	Argument	type		8519500	0					
ANR	8519616	Identifier	type		8519500	0					
ANR	8519617	CompoundStatement		57:9:2010:2010	8519500	1					
ANR	8519618	IfStatement	if ( global -> skip >= SKIP_UNUSED )		8519500	0					
ANR	8519619	Condition	global -> skip >= SKIP_UNUSED	818:16:26311:26337	8519500	0	True				
ANR	8519620	RelationalExpression	global -> skip >= SKIP_UNUSED		8519500	0		>=			
ANR	8519621	PtrMemberAccess	global -> skip		8519500	0					
ANR	8519622	Identifier	global		8519500	0					
ANR	8519623	Identifier	skip		8519500	1					
ANR	8519624	Identifier	SKIP_UNUSED		8519500	1					
ANR	8519625	ReturnStatement	return 1 ;	819:15:26370:26378	8519500	1	True				
ANR	8519626	PrimaryExpression	1		8519500	0					
ANR	8519627	ElseStatement	else		8519500	0					
ANR	8519628	IfStatement	if ( global -> skip >= SKIP_UNSAFE )		8519500	0					
ANR	8519629	Condition	global -> skip >= SKIP_UNSAFE	822:18:26410:26436	8519500	0	True				
ANR	8519630	RelationalExpression	global -> skip >= SKIP_UNSAFE		8519500	0		>=			
ANR	8519631	PtrMemberAccess	global -> skip		8519500	0					
ANR	8519632	Identifier	global		8519500	0					
ANR	8519633	Identifier	skip		8519500	1					
ANR	8519634	Identifier	SKIP_UNSAFE		8519500	1					
ANR	8519635	ReturnStatement	return 1 ;	823:12:26451:26459	8519500	1	True				
ANR	8519636	PrimaryExpression	1		8519500	0					
ANR	8519637	ReturnStatement	return 0 ;	825:9:26471:26479	8519500	33	True				
ANR	8519638	PrimaryExpression	0		8519500	0					
ANR	8519639	ReturnType	static int		8519500	1					
ANR	8519640	Identifier	skip_chunk_type		8519500	2					
ANR	8519641	ParameterList	"const struct global * global , png_uint_32 type"		8519500	3					
ANR	8519642	Parameter	const struct global * global	756:16:24031:24057	8519500	0	True				
ANR	8519643	ParameterType	const struct global *		8519500	0					
ANR	8519644	Identifier	global		8519500	1					
ANR	8519645	Parameter	png_uint_32 type	756:45:24060:24075	8519500	1	True				
ANR	8519646	ParameterType	png_uint_32		8519500	0					
ANR	8519647	Identifier	type		8519500	1					
ANR	8519648	CFGEntryNode	ENTRY		8519500		True				
ANR	8519649	CFGExitNode	EXIT		8519500		True				
ANR	8519650	Symbol	SAFE_TO_COPY		8519500						
ANR	8519651	Symbol	SKIP_COLOR		8519500						
ANR	8519652	Symbol	* global		8519500						
ANR	8519653	Symbol	global		8519500						
ANR	8519654	Symbol	SKIP_ALL		8519500						
ANR	8519655	Symbol	type		8519500						
ANR	8519656	Symbol	SKIP_UNUSED		8519500						
ANR	8519657	Symbol	global -> skip		8519500						
ANR	8519658	Symbol	CRITICAL		8519500						
ANR	8519659	Symbol	SKIP_TRANSFORM		8519500						
ANR	8519660	Symbol	SKIP_UNSAFE		8519500						
ANR	8519661	ClassDef	file	832:0:26549:29707							
ANR	8519662	DeclStmt									
ANR	8519663	Decl							struct global	struct global *	global
ANR	8519664	DeclStmt									
ANR	8519665	Decl							const char	const char *	file_name
ANR	8519666	DeclStmt									
ANR	8519667	Decl							const char	const char *	out_name
ANR	8519668	DeclStmt									
ANR	8519669	Decl							int	int	status_code
ANR	8519670	DeclStmt									
ANR	8519671	Decl							int	int	read_errno
ANR	8519672	DeclStmt									
ANR	8519673	Decl							int	int	write_errno
ANR	8519674	DeclStmt									
ANR	8519675	Decl							png_uint_32	png_uint_32	width
ANR	8519676	DeclStmt									
ANR	8519677	Decl							png_uint_32	png_uint_32	height
ANR	8519678	DeclStmt									
ANR	8519679	Decl							png_byte	png_byte	bit_depth
ANR	8519680	DeclStmt									
ANR	8519681	Decl							png_byte	png_byte	color_type
ANR	8519682	DeclStmt									
ANR	8519683	Decl							png_byte	png_byte	compression_method
ANR	8519684	DeclStmt									
ANR	8519685	Decl							png_byte	png_byte	filter_method
ANR	8519686	DeclStmt									
ANR	8519687	Decl							png_byte	png_byte	interlace_method
ANR	8519688	DeclStmt									
ANR	8519689	Decl							udigit	udigit [ 5 ]	image_bytes
ANR	8519690	DeclStmt									
ANR	8519691	Decl							int	int	image_digits
ANR	8519692	DeclStmt									
ANR	8519693	Decl							FILE	FILE *	file
ANR	8519694	DeclStmt									
ANR	8519695	Decl							FILE	FILE *	out
ANR	8519696	DeclStmt									
ANR	8519697	Decl							jmp_buf	jmp_buf	jmpbuf
ANR	8519698	DeclStmt									
ANR	8519699	Decl							fpos_t	fpos_t	data_pos
ANR	8519700	DeclStmt									
ANR	8519701	Decl							png_uint_32	png_uint_32	length
ANR	8519702	DeclStmt									
ANR	8519703	Decl							png_uint_32	png_uint_32	type
ANR	8519704	DeclStmt									
ANR	8519705	Decl							png_uint_32	png_uint_32	crc
ANR	8519706	DeclStmt									
ANR	8519707	Decl							png_uint_32	png_uint_32	read_count
ANR	8519708	DeclStmt									
ANR	8519709	Decl							png_uint_32	png_uint_32	write_count
ANR	8519710	DeclStmt									
ANR	8519711	Decl							int	int	state
ANR	8519712	DeclStmt									
ANR	8519713	Decl							struct chunk	struct chunk *	chunk
ANR	8519714	DeclStmt									
ANR	8519715	Decl							struct IDAT	struct IDAT *	idat
ANR	8519716	DeclStmt									
ANR	8519717	Decl							void	void *	alloc_ptr
ANR	8519718	DeclStmt									
ANR	8519719	Decl							"void ( * ) ( struct file * , int idat )"	"void ( * ) ( struct file * , int idat )"	alloc
ANR	8519720	Function	emit_string	914:0:30151:30520							
ANR	8519721	FunctionDef	"emit_string (const char * str , FILE * out)"		8519720	0					
ANR	8519722	CompoundStatement		919:0:30313:30520	8519720	0					
ANR	8519723	ForStatement	for ( ; * str ; ++ str )		8519720	0					
ANR	8519724	Condition	* str	920:10:30325:30328	8519720	0	True				
ANR	8519725	UnaryOperationExpression	* str		8519720	0					
ANR	8519726	UnaryOperator	*		8519720	0					
ANR	8519727	Identifier	str		8519720	1					
ANR	8519728	UnaryExpression	++ str	920:16:30331:30335	8519720	1	True				
ANR	8519729	IncDec	++		8519720	0					
ANR	8519730	Identifier	str		8519720	1					
ANR	8519731	IfStatement	if ( isgraph ( UCHAR_MAX & * str ) )		8519720	2					
ANR	8519732	Condition	isgraph ( UCHAR_MAX & * str )	921:10:30348:30372	8519720	0	True				
ANR	8519733	CallExpression	isgraph ( UCHAR_MAX & * str )		8519720	0					
ANR	8519734	Callee	isgraph		8519720	0					
ANR	8519735	Identifier	isgraph		8519720	0					
ANR	8519736	ArgumentList	UCHAR_MAX & * str		8519720	1					
ANR	8519737	Argument	UCHAR_MAX & * str		8519720	0					
ANR	8519738	BitAndExpression	UCHAR_MAX & * str		8519720	0		&			
ANR	8519739	Identifier	UCHAR_MAX		8519720	0					
ANR	8519740	UnaryOperationExpression	* str		8519720	1					
ANR	8519741	UnaryOperator	*		8519720	0					
ANR	8519742	Identifier	str		8519720	1					
ANR	8519743	ExpressionStatement	"putc ( * str , out )"	922:9:30384:30399	8519720	1	True				
ANR	8519744	CallExpression	"putc ( * str , out )"		8519720	0					
ANR	8519745	Callee	putc		8519720	0					
ANR	8519746	Identifier	putc		8519720	0					
ANR	8519747	ArgumentList	* str		8519720	1					
ANR	8519748	Argument	* str		8519720	0					
ANR	8519749	UnaryOperationExpression	* str		8519720	0					
ANR	8519750	UnaryOperator	*		8519720	0					
ANR	8519751	Identifier	str		8519720	1					
ANR	8519752	Argument	out		8519720	1					
ANR	8519753	Identifier	out		8519720	0					
ANR	8519754	ElseStatement	else		8519720	0					
ANR	8519755	IfStatement	if ( isspace ( UCHAR_MAX & * str ) )		8519720	0					
ANR	8519756	Condition	isspace ( UCHAR_MAX & * str )	924:15:30417:30441	8519720	0	True				
ANR	8519757	CallExpression	isspace ( UCHAR_MAX & * str )		8519720	0					
ANR	8519758	Callee	isspace		8519720	0					
ANR	8519759	Identifier	isspace		8519720	0					
ANR	8519760	ArgumentList	UCHAR_MAX & * str		8519720	1					
ANR	8519761	Argument	UCHAR_MAX & * str		8519720	0					
ANR	8519762	BitAndExpression	UCHAR_MAX & * str		8519720	0		&			
ANR	8519763	Identifier	UCHAR_MAX		8519720	0					
ANR	8519764	UnaryOperationExpression	* str		8519720	1					
ANR	8519765	UnaryOperator	*		8519720	0					
ANR	8519766	Identifier	str		8519720	1					
ANR	8519767	ExpressionStatement	"putc ( '_' , out )"	925:9:30453:30467	8519720	1	True				
ANR	8519768	CallExpression	"putc ( '_' , out )"		8519720	0					
ANR	8519769	Callee	putc		8519720	0					
ANR	8519770	Identifier	putc		8519720	0					
ANR	8519771	ArgumentList	'_'		8519720	1					
ANR	8519772	Argument	'_'		8519720	0					
ANR	8519773	PrimaryExpression	'_'		8519720	0					
ANR	8519774	Argument	out		8519720	1					
ANR	8519775	Identifier	out		8519720	0					
ANR	8519776	ElseStatement	else		8519720	0					
ANR	8519777	ExpressionStatement	"fprintf ( out , ""\\\\%.3o"" , * str )"	928:9:30490:30518	8519720	0	True				
ANR	8519778	CallExpression	"fprintf ( out , ""\\\\%.3o"" , * str )"		8519720	0					
ANR	8519779	Callee	fprintf		8519720	0					
ANR	8519780	Identifier	fprintf		8519720	0					
ANR	8519781	ArgumentList	out		8519720	1					
ANR	8519782	Argument	out		8519720	0					
ANR	8519783	Identifier	out		8519720	0					
ANR	8519784	Argument	"""\\\\%.3o"""		8519720	1					
ANR	8519785	PrimaryExpression	"""\\\\%.3o"""		8519720	0					
ANR	8519786	Argument	* str		8519720	2					
ANR	8519787	UnaryOperationExpression	* str		8519720	0					
ANR	8519788	UnaryOperator	*		8519720	0					
ANR	8519789	Identifier	str		8519720	1					
ANR	8519790	ReturnType	static void		8519720	1					
ANR	8519791	Identifier	emit_string		8519720	2					
ANR	8519792	ParameterList	"const char * str , FILE * out"		8519720	3					
ANR	8519793	Parameter	const char * str	915:12:30175:30189	8519720	0	True				
ANR	8519794	ParameterType	const char *		8519720	0					
ANR	8519795	Identifier	str		8519720	1					
ANR	8519796	Parameter	FILE * out	915:29:30192:30200	8519720	1	True				
ANR	8519797	ParameterType	FILE *		8519720	0					
ANR	8519798	Identifier	out		8519720	1					
ANR	8519799	CFGEntryNode	ENTRY		8519720		True				
ANR	8519800	CFGExitNode	EXIT		8519720		True				
ANR	8519801	Symbol	str		8519720						
ANR	8519802	Symbol	UCHAR_MAX		8519720						
ANR	8519803	Symbol	isgraph		8519720						
ANR	8519804	Symbol	isspace		8519720						
ANR	8519805	Symbol	* str		8519720						
ANR	8519806	Symbol	out		8519720						
ANR	8519807	Function	strcode	931:0:30523:31000							
ANR	8519808	FunctionDef	strcode (int code)		8519807	0					
ANR	8519809	CompoundStatement		933:0:30561:31000	8519807	0					
ANR	8519810	SwitchStatement	switch ( code )		8519807	0					
ANR	8519811	Condition	code	934:11:30574:30577	8519807	0	True				
ANR	8519812	Identifier	code		8519807	0					
ANR	8519813	CompoundStatement		3:3:21:21	8519807	1					
ANR	8519814	Label	case LIBPNG_WARNING_CODE :	936:6:30591:30615	8519807	0	True				
ANR	8519815	Identifier	LIBPNG_WARNING_CODE		8519807	0					
ANR	8519816	ReturnStatement	"return ""warning"" ;"	936:34:30619:30635	8519807	1	True				
ANR	8519817	PrimaryExpression	"""warning"""		8519807	0					
ANR	8519818	Label	case LIBPNG_ERROR_CODE :	937:6:30643:30665	8519807	2	True				
ANR	8519819	Identifier	LIBPNG_ERROR_CODE		8519807	0					
ANR	8519820	ReturnStatement	"return ""libpng"" ;"	937:34:30671:30686	8519807	3	True				
ANR	8519821	PrimaryExpression	"""libpng"""		8519807	0					
ANR	8519822	Label	case ZLIB_ERROR_CODE :	938:6:30694:30714	8519807	4	True				
ANR	8519823	Identifier	ZLIB_ERROR_CODE		8519807	0					
ANR	8519824	ReturnStatement	"return ""zlib"" ;"	938:34:30722:30735	8519807	5	True				
ANR	8519825	PrimaryExpression	"""zlib"""		8519807	0					
ANR	8519826	Label	case INVALID_ERROR_CODE :	939:6:30743:30766	8519807	6	True				
ANR	8519827	Identifier	INVALID_ERROR_CODE		8519807	0					
ANR	8519828	ReturnStatement	"return ""invalid"" ;"	939:34:30771:30787	8519807	7	True				
ANR	8519829	PrimaryExpression	"""invalid"""		8519807	0					
ANR	8519830	Label	case READ_ERROR_CODE :	940:6:30795:30815	8519807	8	True				
ANR	8519831	Identifier	READ_ERROR_CODE		8519807	0					
ANR	8519832	ReturnStatement	"return ""read"" ;"	940:34:30823:30836	8519807	9	True				
ANR	8519833	PrimaryExpression	"""read"""		8519807	0					
ANR	8519834	Label	case WRITE_ERROR_CODE :	941:6:30844:30865	8519807	10	True				
ANR	8519835	Identifier	WRITE_ERROR_CODE		8519807	0					
ANR	8519836	ReturnStatement	"return ""write"" ;"	941:34:30872:30886	8519807	11	True				
ANR	8519837	PrimaryExpression	"""write"""		8519807	0					
ANR	8519838	Label	case UNEXPECTED_ERROR_CODE :	942:6:30894:30920	8519807	12	True				
ANR	8519839	Identifier	UNEXPECTED_ERROR_CODE		8519807	0					
ANR	8519840	ReturnStatement	"return ""unexpected"" ;"	942:34:30922:30941	8519807	13	True				
ANR	8519841	PrimaryExpression	"""unexpected"""		8519807	0					
ANR	8519842	Label	default :	943:6:30949:30956	8519807	14	True				
ANR	8519843	Identifier	default		8519807	0					
ANR	8519844	ReturnStatement	"return ""INVALID"" ;"	943:34:30977:30993	8519807	15	True				
ANR	8519845	PrimaryExpression	"""INVALID"""		8519807	0					
ANR	8519846	ReturnType	static const char *		8519807	1					
ANR	8519847	Identifier	strcode		8519807	2					
ANR	8519848	ParameterList	int code		8519807	3					
ANR	8519849	Parameter	int code	932:8:30551:30558	8519807	0	True				
ANR	8519850	ParameterType	int		8519807	0					
ANR	8519851	Identifier	code		8519807	1					
ANR	8519852	CFGEntryNode	ENTRY		8519807		True				
ANR	8519853	CFGExitNode	EXIT		8519807		True				
ANR	8519854	Symbol	code		8519807						
ANR	8519855	Function	emit_error	947:0:31003:32391							
ANR	8519856	FunctionDef	"emit_error (struct file * file , int code , const char * what)"		8519855	0					
ANR	8519857	CompoundStatement		952:0:31197:32391	8519855	0					
ANR	8519858	IdentifierDeclStatement	const char * reason ;	953:3:31202:31220	8519855	0	True				
ANR	8519859	IdentifierDecl	* reason		8519855	0					
ANR	8519860	IdentifierDeclType	const char *		8519855	0					
ANR	8519861	Identifier	reason		8519855	1					
ANR	8519862	IdentifierDeclStatement	int err = 0 ;	954:3:31225:31236	8519855	1	True				
ANR	8519863	IdentifierDecl	err = 0		8519855	0					
ANR	8519864	IdentifierDeclType	int		8519855	0					
ANR	8519865	Identifier	err		8519855	1					
ANR	8519866	AssignmentExpression	err = 0		8519855	2		=			
ANR	8519867	Identifier	err		8519855	0					
ANR	8519868	PrimaryExpression	0		8519855	1					
ANR	8519869	SwitchStatement	switch ( code )		8519855	2					
ANR	8519870	Condition	code	956:11:31250:31253	8519855	0	True				
ANR	8519871	Identifier	code		8519855	0					
ANR	8519872	CompoundStatement		6:3:61:61	8519855	1					
ANR	8519873	Label	case LIBPNG_WARNING_CODE :	958:6:31267:31291	8519855	0	True				
ANR	8519874	Identifier	LIBPNG_WARNING_CODE		8519855	0					
ANR	8519875	ExpressionStatement	"reason = ""libpng warning:"""	958:34:31295:31321	8519855	1	True				
ANR	8519876	AssignmentExpression	"reason = ""libpng warning:"""		8519855	0		=			
ANR	8519877	Identifier	reason		8519855	0					
ANR	8519878	PrimaryExpression	"""libpng warning:"""		8519855	1					
ANR	8519879	BreakStatement	break ;	958:62:31323:31328	8519855	2	True				
ANR	8519880	Label	case LIBPNG_ERROR_CODE :	959:6:31336:31358	8519855	3	True				
ANR	8519881	Identifier	LIBPNG_ERROR_CODE		8519855	0					
ANR	8519882	ExpressionStatement	"reason = ""libpng error:"""	959:34:31364:31388	8519855	4	True				
ANR	8519883	AssignmentExpression	"reason = ""libpng error:"""		8519855	0		=			
ANR	8519884	Identifier	reason		8519855	0					
ANR	8519885	PrimaryExpression	"""libpng error:"""		8519855	1					
ANR	8519886	BreakStatement	break ;	959:60:31390:31395	8519855	5	True				
ANR	8519887	Label	case ZLIB_ERROR_CODE :	960:6:31403:31423	8519855	6	True				
ANR	8519888	Identifier	ZLIB_ERROR_CODE		8519855	0					
ANR	8519889	ExpressionStatement	"reason = ""zlib error:"""	960:34:31431:31453	8519855	7	True				
ANR	8519890	AssignmentExpression	"reason = ""zlib error:"""		8519855	0		=			
ANR	8519891	Identifier	reason		8519855	0					
ANR	8519892	PrimaryExpression	"""zlib error:"""		8519855	1					
ANR	8519893	BreakStatement	break ;	960:58:31455:31460	8519855	8	True				
ANR	8519894	Label	case INVALID_ERROR_CODE :	961:6:31468:31491	8519855	9	True				
ANR	8519895	Identifier	INVALID_ERROR_CODE		8519855	0					
ANR	8519896	ExpressionStatement	"reason = ""invalid"""	961:34:31496:31514	8519855	10	True				
ANR	8519897	AssignmentExpression	"reason = ""invalid"""		8519855	0		=			
ANR	8519898	Identifier	reason		8519855	0					
ANR	8519899	PrimaryExpression	"""invalid"""		8519855	1					
ANR	8519900	BreakStatement	break ;	961:54:31516:31521	8519855	11	True				
ANR	8519901	Label	case READ_ERROR_CODE :	962:6:31529:31549	8519855	12	True				
ANR	8519902	Identifier	READ_ERROR_CODE		8519855	0					
ANR	8519903	ExpressionStatement	"reason = ""read failure:"""	962:34:31557:31581	8519855	13	True				
ANR	8519904	AssignmentExpression	"reason = ""read failure:"""		8519855	0		=			
ANR	8519905	Identifier	reason		8519855	0					
ANR	8519906	PrimaryExpression	"""read failure:"""		8519855	1					
ANR	8519907	ExpressionStatement	err = file -> read_errno	963:34:31617:31639	8519855	14	True				
ANR	8519908	AssignmentExpression	err = file -> read_errno		8519855	0		=			
ANR	8519909	Identifier	err		8519855	0					
ANR	8519910	PtrMemberAccess	file -> read_errno		8519855	1					
ANR	8519911	Identifier	file		8519855	0					
ANR	8519912	Identifier	read_errno		8519855	1					
ANR	8519913	BreakStatement	break ;	964:34:31675:31680	8519855	15	True				
ANR	8519914	Label	case WRITE_ERROR_CODE :	965:6:31688:31709	8519855	16	True				
ANR	8519915	Identifier	WRITE_ERROR_CODE		8519855	0					
ANR	8519916	ExpressionStatement	"reason = ""write error"""	965:34:31716:31738	8519855	17	True				
ANR	8519917	AssignmentExpression	"reason = ""write error"""		8519855	0		=			
ANR	8519918	Identifier	reason		8519855	0					
ANR	8519919	PrimaryExpression	"""write error"""		8519855	1					
ANR	8519920	ExpressionStatement	err = file -> write_errno	966:34:31774:31797	8519855	18	True				
ANR	8519921	AssignmentExpression	err = file -> write_errno		8519855	0		=			
ANR	8519922	Identifier	err		8519855	0					
ANR	8519923	PtrMemberAccess	file -> write_errno		8519855	1					
ANR	8519924	Identifier	file		8519855	0					
ANR	8519925	Identifier	write_errno		8519855	1					
ANR	8519926	BreakStatement	break ;	967:34:31833:31838	8519855	19	True				
ANR	8519927	Label	case UNEXPECTED_ERROR_CODE :	968:6:31846:31872	8519855	20	True				
ANR	8519928	Identifier	UNEXPECTED_ERROR_CODE		8519855	0					
ANR	8519929	ExpressionStatement	"reason = ""unexpected error:"""	968:34:31874:31902	8519855	21	True				
ANR	8519930	AssignmentExpression	"reason = ""unexpected error:"""		8519855	0		=			
ANR	8519931	Identifier	reason		8519855	0					
ANR	8519932	PrimaryExpression	"""unexpected error:"""		8519855	1					
ANR	8519933	ExpressionStatement	err = file -> read_errno	969:34:31938:31960	8519855	22	True				
ANR	8519934	AssignmentExpression	err = file -> read_errno		8519855	0		=			
ANR	8519935	Identifier	err		8519855	0					
ANR	8519936	PtrMemberAccess	file -> read_errno		8519855	1					
ANR	8519937	Identifier	file		8519855	0					
ANR	8519938	Identifier	read_errno		8519855	1					
ANR	8519939	IfStatement	if ( err == 0 )		8519855	23					
ANR	8519940	Condition	err == 0	970:38:32000:32007	8519855	0	True				
ANR	8519941	EqualityExpression	err == 0		8519855	0		==			
ANR	8519942	Identifier	err		8519855	0					
ANR	8519943	PrimaryExpression	0		8519855	1					
ANR	8519944	ExpressionStatement	err = file -> write_errno	971:37:32047:32070	8519855	1	True				
ANR	8519945	AssignmentExpression	err = file -> write_errno		8519855	0		=			
ANR	8519946	Identifier	err		8519855	0					
ANR	8519947	PtrMemberAccess	file -> write_errno		8519855	1					
ANR	8519948	Identifier	file		8519855	0					
ANR	8519949	Identifier	write_errno		8519855	1					
ANR	8519950	BreakStatement	break ;	972:34:32106:32111	8519855	24	True				
ANR	8519951	Label	default :	973:6:32119:32126	8519855	25	True				
ANR	8519952	Identifier	default		8519855	0					
ANR	8519953	ExpressionStatement	"reason = ""INVALID (internal error):"""	973:34:32147:32183	8519855	26	True				
ANR	8519954	AssignmentExpression	"reason = ""INVALID (internal error):"""		8519855	0		=			
ANR	8519955	Identifier	reason		8519855	0					
ANR	8519956	PrimaryExpression	"""INVALID (internal error):"""		8519855	1					
ANR	8519957	BreakStatement	break ;	973:72:32185:32190	8519855	27	True				
ANR	8519958	IfStatement	if ( err != 0 )		8519855	3					
ANR	8519959	Condition	err != 0	976:7:32205:32212	8519855	0	True				
ANR	8519960	EqualityExpression	err != 0		8519855	0		!=			
ANR	8519961	Identifier	err		8519855	0					
ANR	8519962	PrimaryExpression	0		8519855	1					
ANR	8519963	ExpressionStatement	"fprintf ( stderr , ""%s: %s %s [%s]\\n"" , file -> file_name , reason , what , strerror ( err ) )"	977:6:32221:32311	8519855	1	True				
ANR	8519964	CallExpression	"fprintf ( stderr , ""%s: %s %s [%s]\\n"" , file -> file_name , reason , what , strerror ( err ) )"		8519855	0					
ANR	8519965	Callee	fprintf		8519855	0					
ANR	8519966	Identifier	fprintf		8519855	0					
ANR	8519967	ArgumentList	stderr		8519855	1					
ANR	8519968	Argument	stderr		8519855	0					
ANR	8519969	Identifier	stderr		8519855	0					
ANR	8519970	Argument	"""%s: %s %s [%s]\\n"""		8519855	1					
ANR	8519971	PrimaryExpression	"""%s: %s %s [%s]\\n"""		8519855	0					
ANR	8519972	Argument	file -> file_name		8519855	2					
ANR	8519973	PtrMemberAccess	file -> file_name		8519855	0					
ANR	8519974	Identifier	file		8519855	0					
ANR	8519975	Identifier	file_name		8519855	1					
ANR	8519976	Argument	reason		8519855	3					
ANR	8519977	Identifier	reason		8519855	0					
ANR	8519978	Argument	what		8519855	4					
ANR	8519979	Identifier	what		8519855	0					
ANR	8519980	Argument	strerror ( err )		8519855	5					
ANR	8519981	CallExpression	strerror ( err )		8519855	0					
ANR	8519982	Callee	strerror		8519855	0					
ANR	8519983	Identifier	strerror		8519855	0					
ANR	8519984	ArgumentList	err		8519855	1					
ANR	8519985	Argument	err		8519855	0					
ANR	8519986	Identifier	err		8519855	0					
ANR	8519987	ElseStatement	else		8519855	0					
ANR	8519988	ExpressionStatement	"fprintf ( stderr , ""%s: %s %s\\n"" , file -> file_name , reason , what )"	981:6:32328:32389	8519855	0	True				
ANR	8519989	CallExpression	"fprintf ( stderr , ""%s: %s %s\\n"" , file -> file_name , reason , what )"		8519855	0					
ANR	8519990	Callee	fprintf		8519855	0					
ANR	8519991	Identifier	fprintf		8519855	0					
ANR	8519992	ArgumentList	stderr		8519855	1					
ANR	8519993	Argument	stderr		8519855	0					
ANR	8519994	Identifier	stderr		8519855	0					
ANR	8519995	Argument	"""%s: %s %s\\n"""		8519855	1					
ANR	8519996	PrimaryExpression	"""%s: %s %s\\n"""		8519855	0					
ANR	8519997	Argument	file -> file_name		8519855	2					
ANR	8519998	PtrMemberAccess	file -> file_name		8519855	0					
ANR	8519999	Identifier	file		8519855	0					
ANR	8520000	Identifier	file_name		8519855	1					
ANR	8520001	Argument	reason		8519855	3					
ANR	8520002	Identifier	reason		8519855	0					
ANR	8520003	Argument	what		8519855	4					
ANR	8520004	Identifier	what		8519855	0					
ANR	8520005	ReturnType	static void		8519855	1					
ANR	8520006	Identifier	emit_error		8519855	2					
ANR	8520007	ParameterList	"struct file * file , int code , const char * what"		8519855	3					
ANR	8520008	Parameter	struct file * file	948:11:31026:31042	8519855	0	True				
ANR	8520009	ParameterType	struct file *		8519855	0					
ANR	8520010	Identifier	file		8519855	1					
ANR	8520011	Parameter	int code	948:30:31045:31052	8519855	1	True				
ANR	8520012	ParameterType	int		8519855	0					
ANR	8520013	Identifier	code		8519855	1					
ANR	8520014	Parameter	const char * what	948:40:31055:31070	8519855	2	True				
ANR	8520015	ParameterType	const char *		8519855	0					
ANR	8520016	Identifier	what		8519855	1					
ANR	8520017	CFGEntryNode	ENTRY		8519855		True				
ANR	8520018	CFGExitNode	EXIT		8519855		True				
ANR	8520019	Symbol	strerror		8519855						
ANR	8520020	Symbol	reason		8519855						
ANR	8520021	Symbol	file -> read_errno		8519855						
ANR	8520022	Symbol	file		8519855						
ANR	8520023	Symbol	code		8519855						
ANR	8520024	Symbol	what		8519855						
ANR	8520025	Symbol	err		8519855						
ANR	8520026	Symbol	file -> write_errno		8519855						
ANR	8520027	Symbol	file -> file_name		8519855						
ANR	8520028	Symbol	* file		8519855						
ANR	8520029	Symbol	stderr		8519855						
ANR	8520030	DeclStmt									
ANR	8520031	Decl							void	void ( struct chunk * * )	chunk_end
ANR	8520032	DeclStmt									
ANR	8520033	Decl							void	void ( struct IDAT * * )	IDAT_end
ANR	8520034	Function	file_end	987:0:32473:33410							
ANR	8520035	FunctionDef	file_end (struct file * file)		8520034	0					
ANR	8520036	CompoundStatement		989:0:32512:33410	8520034	0					
ANR	8520037	IdentifierDeclStatement	int rc ;	990:3:32517:32523	8520034	0	True				
ANR	8520038	IdentifierDecl	rc		8520034	0					
ANR	8520039	IdentifierDeclType	int		8520034	0					
ANR	8520040	Identifier	rc		8520034	1					
ANR	8520041	IfStatement	if ( file -> idat != NULL )		8520034	1					
ANR	8520042	Condition	file -> idat != NULL	995:7:32694:32711	8520034	0	True				
ANR	8520043	EqualityExpression	file -> idat != NULL		8520034	0		!=			
ANR	8520044	PtrMemberAccess	file -> idat		8520034	0					
ANR	8520045	Identifier	file		8520034	0					
ANR	8520046	Identifier	idat		8520034	1					
ANR	8520047	Identifier	NULL		8520034	1					
ANR	8520048	ExpressionStatement	IDAT_end ( & file -> idat )	996:6:32720:32741	8520034	1	True				
ANR	8520049	CallExpression	IDAT_end ( & file -> idat )		8520034	0					
ANR	8520050	Callee	IDAT_end		8520034	0					
ANR	8520051	Identifier	IDAT_end		8520034	0					
ANR	8520052	ArgumentList	& file -> idat		8520034	1					
ANR	8520053	Argument	& file -> idat		8520034	0					
ANR	8520054	UnaryOperationExpression	& file -> idat		8520034	0					
ANR	8520055	UnaryOperator	&		8520034	0					
ANR	8520056	PtrMemberAccess	file -> idat		8520034	1					
ANR	8520057	Identifier	file		8520034	0					
ANR	8520058	Identifier	idat		8520034	1					
ANR	8520059	IfStatement	if ( file -> chunk != NULL )		8520034	2					
ANR	8520060	Condition	file -> chunk != NULL	998:7:32751:32769	8520034	0	True				
ANR	8520061	EqualityExpression	file -> chunk != NULL		8520034	0		!=			
ANR	8520062	PtrMemberAccess	file -> chunk		8520034	0					
ANR	8520063	Identifier	file		8520034	0					
ANR	8520064	Identifier	chunk		8520034	1					
ANR	8520065	Identifier	NULL		8520034	1					
ANR	8520066	ExpressionStatement	chunk_end ( & file -> chunk )	999:6:32778:32801	8520034	1	True				
ANR	8520067	CallExpression	chunk_end ( & file -> chunk )		8520034	0					
ANR	8520068	Callee	chunk_end		8520034	0					
ANR	8520069	Identifier	chunk_end		8520034	0					
ANR	8520070	ArgumentList	& file -> chunk		8520034	1					
ANR	8520071	Argument	& file -> chunk		8520034	0					
ANR	8520072	UnaryOperationExpression	& file -> chunk		8520034	0					
ANR	8520073	UnaryOperator	&		8520034	0					
ANR	8520074	PtrMemberAccess	file -> chunk		8520034	1					
ANR	8520075	Identifier	file		8520034	0					
ANR	8520076	Identifier	chunk		8520034	1					
ANR	8520077	ExpressionStatement	rc = file -> status_code	1001:3:32807:32829	8520034	3	True				
ANR	8520078	AssignmentExpression	rc = file -> status_code		8520034	0		=			
ANR	8520079	Identifier	rc		8520034	0					
ANR	8520080	PtrMemberAccess	file -> status_code		8520034	1					
ANR	8520081	Identifier	file		8520034	0					
ANR	8520082	Identifier	status_code		8520034	1					
ANR	8520083	IfStatement	if ( file -> file != NULL )		8520034	4					
ANR	8520084	Condition	file -> file != NULL	1003:7:32839:32856	8520034	0	True				
ANR	8520085	EqualityExpression	file -> file != NULL		8520034	0		!=			
ANR	8520086	PtrMemberAccess	file -> file		8520034	0					
ANR	8520087	Identifier	file		8520034	0					
ANR	8520088	Identifier	file		8520034	1					
ANR	8520089	Identifier	NULL		8520034	1					
ANR	8520090	ExpressionStatement	( void ) fclose ( file -> file )	1004:6:32865:32889	8520034	1	True				
ANR	8520091	CastExpression	( void ) fclose ( file -> file )		8520034	0					
ANR	8520092	CastTarget	void		8520034	0					
ANR	8520093	CallExpression	fclose ( file -> file )		8520034	1					
ANR	8520094	Callee	fclose		8520034	0					
ANR	8520095	Identifier	fclose		8520034	0					
ANR	8520096	ArgumentList	file -> file		8520034	1					
ANR	8520097	Argument	file -> file		8520034	0					
ANR	8520098	PtrMemberAccess	file -> file		8520034	0					
ANR	8520099	Identifier	file		8520034	0					
ANR	8520100	Identifier	file		8520034	1					
ANR	8520101	IfStatement	if ( file -> out != NULL )		8520034	5					
ANR	8520102	Condition	file -> out != NULL	1006:7:32899:32915	8520034	0	True				
ANR	8520103	EqualityExpression	file -> out != NULL		8520034	0		!=			
ANR	8520104	PtrMemberAccess	file -> out		8520034	0					
ANR	8520105	Identifier	file		8520034	0					
ANR	8520106	Identifier	out		8520034	1					
ANR	8520107	Identifier	NULL		8520034	1					
ANR	8520108	CompoundStatement		19:3:408:408	8520034	1					
ANR	8520109	IfStatement	if ( ferror ( file -> out ) | fflush ( file -> out ) | fclose ( file -> out ) )		8520034	0					
ANR	8520110	Condition	ferror ( file -> out ) | fflush ( file -> out ) | fclose ( file -> out )	1011:10:33045:33101	8520034	0	True				
ANR	8520111	InclusiveOrExpression	ferror ( file -> out ) | fflush ( file -> out ) | fclose ( file -> out )		8520034	0		|			
ANR	8520112	CallExpression	ferror ( file -> out )		8520034	0					
ANR	8520113	Callee	ferror		8520034	0					
ANR	8520114	Identifier	ferror		8520034	0					
ANR	8520115	ArgumentList	file -> out		8520034	1					
ANR	8520116	Argument	file -> out		8520034	0					
ANR	8520117	PtrMemberAccess	file -> out		8520034	0					
ANR	8520118	Identifier	file		8520034	0					
ANR	8520119	Identifier	out		8520034	1					
ANR	8520120	InclusiveOrExpression	fflush ( file -> out ) | fclose ( file -> out )		8520034	1		|			
ANR	8520121	CallExpression	fflush ( file -> out )		8520034	0					
ANR	8520122	Callee	fflush		8520034	0					
ANR	8520123	Identifier	fflush		8520034	0					
ANR	8520124	ArgumentList	file -> out		8520034	1					
ANR	8520125	Argument	file -> out		8520034	0					
ANR	8520126	PtrMemberAccess	file -> out		8520034	0					
ANR	8520127	Identifier	file		8520034	0					
ANR	8520128	Identifier	out		8520034	1					
ANR	8520129	CallExpression	fclose ( file -> out )		8520034	1					
ANR	8520130	Callee	fclose		8520034	0					
ANR	8520131	Identifier	fclose		8520034	0					
ANR	8520132	ArgumentList	file -> out		8520034	1					
ANR	8520133	Argument	file -> out		8520034	0					
ANR	8520134	PtrMemberAccess	file -> out		8520034	0					
ANR	8520135	Identifier	file		8520034	0					
ANR	8520136	Identifier	out		8520034	1					
ANR	8520137	CompoundStatement		24:6:597:597	8520034	1					
ANR	8520138	ExpressionStatement	perror ( file -> out_name )	1013:9:33121:33143	8520034	0	True				
ANR	8520139	CallExpression	perror ( file -> out_name )		8520034	0					
ANR	8520140	Callee	perror		8520034	0					
ANR	8520141	Identifier	perror		8520034	0					
ANR	8520142	ArgumentList	file -> out_name		8520034	1					
ANR	8520143	Argument	file -> out_name		8520034	0					
ANR	8520144	PtrMemberAccess	file -> out_name		8520034	0					
ANR	8520145	Identifier	file		8520034	0					
ANR	8520146	Identifier	out_name		8520034	1					
ANR	8520147	ExpressionStatement	"emit_error ( file , READ_ERROR_CODE , ""output write error"" )"	1014:9:33154:33209	8520034	1	True				
ANR	8520148	CallExpression	"emit_error ( file , READ_ERROR_CODE , ""output write error"" )"		8520034	0					
ANR	8520149	Callee	emit_error		8520034	0					
ANR	8520150	Identifier	emit_error		8520034	0					
ANR	8520151	ArgumentList	file		8520034	1					
ANR	8520152	Argument	file		8520034	0					
ANR	8520153	Identifier	file		8520034	0					
ANR	8520154	Argument	READ_ERROR_CODE		8520034	1					
ANR	8520155	Identifier	READ_ERROR_CODE		8520034	0					
ANR	8520156	Argument	"""output write error"""		8520034	2					
ANR	8520157	PrimaryExpression	"""output write error"""		8520034	0					
ANR	8520158	ExpressionStatement	rc |= WRITE_ERROR	1015:9:33220:33237	8520034	2	True				
ANR	8520159	AssignmentExpression	rc |= WRITE_ERROR		8520034	0		|=			
ANR	8520160	Identifier	rc		8520034	0					
ANR	8520161	Identifier	WRITE_ERROR		8520034	1					
ANR	8520162	ExpressionStatement	file -> global -> status_code |= rc	1020:3:33293:33324	8520034	6	True				
ANR	8520163	AssignmentExpression	file -> global -> status_code |= rc		8520034	0		|=			
ANR	8520164	PtrMemberAccess	file -> global -> status_code		8520034	0					
ANR	8520165	PtrMemberAccess	file -> global		8520034	0					
ANR	8520166	Identifier	file		8520034	0					
ANR	8520167	Identifier	global		8520034	1					
ANR	8520168	Identifier	status_code		8520034	1					
ANR	8520169	Identifier	rc		8520034	1					
ANR	8520170	ExpressionStatement	CLEAR ( * file )	1022:3:33330:33342	8520034	7	True				
ANR	8520171	CallExpression	CLEAR ( * file )		8520034	0					
ANR	8520172	Callee	CLEAR		8520034	0					
ANR	8520173	Identifier	CLEAR		8520034	0					
ANR	8520174	ArgumentList	* file		8520034	1					
ANR	8520175	Argument	* file		8520034	0					
ANR	8520176	UnaryOperationExpression	* file		8520034	0					
ANR	8520177	UnaryOperator	*		8520034	0					
ANR	8520178	Identifier	file		8520034	1					
ANR	8520179	ReturnStatement	return rc ;	1024:3:33348:33357	8520034	8	True				
ANR	8520180	Identifier	rc		8520034	0					
ANR	8520181	ReturnType	static int		8520034	1					
ANR	8520182	Identifier	file_end		8520034	2					
ANR	8520183	ParameterList	struct file * file		8520034	3					
ANR	8520184	Parameter	struct file * file	988:9:32493:32509	8520034	0	True				
ANR	8520185	ParameterType	struct file *		8520034	0					
ANR	8520186	Identifier	file		8520034	1					
ANR	8520187	CFGEntryNode	ENTRY		8520034		True				
ANR	8520188	CFGExitNode	EXIT		8520034		True				
ANR	8520189	Symbol	fflush		8520034						
ANR	8520190	Symbol	READ_ERROR_CODE		8520034						
ANR	8520191	Symbol	NULL		8520034						
ANR	8520192	Symbol	fclose		8520034						
ANR	8520193	Symbol	file -> chunk		8520034						
ANR	8520194	Symbol	file -> file		8520034						
ANR	8520195	Symbol	WRITE_ERROR		8520034						
ANR	8520196	Symbol	* file		8520034						
ANR	8520197	Symbol	file -> status_code		8520034						
ANR	8520198	Symbol	file -> global -> status_code		8520034						
ANR	8520199	Symbol	& file -> idat		8520034						
ANR	8520200	Symbol	rc		8520034						
ANR	8520201	Symbol	ferror		8520034						
ANR	8520202	Symbol	file		8520034						
ANR	8520203	Symbol	file -> idat		8520034						
ANR	8520204	Symbol	* file -> global		8520034						
ANR	8520205	Symbol	file -> global		8520034						
ANR	8520206	Symbol	file -> out		8520034						
ANR	8520207	Symbol	& file -> chunk		8520034						
ANR	8520208	Symbol	file -> out_name		8520034						
ANR	8520209	Symbol	* * file		8520034						
ANR	8520210	Function	file_init	1027:0:33413:34802							
ANR	8520211	FunctionDef	"file_init (struct file * file , struct global * global , const char * file_name , const char * out_name , void * alloc_ptr , void ( * alloc ) ( struct file * , int ))"		8520210	0					
ANR	8520212	CompoundStatement		1034:0:33775:34802	8520210	0					
ANR	8520213	ExpressionStatement	CLEAR ( * file )	1035:3:33780:33792	8520210	0	True				
ANR	8520214	CallExpression	CLEAR ( * file )		8520210	0					
ANR	8520215	Callee	CLEAR		8520210	0					
ANR	8520216	Identifier	CLEAR		8520210	0					
ANR	8520217	ArgumentList	* file		8520210	1					
ANR	8520218	Argument	* file		8520210	0					
ANR	8520219	UnaryOperationExpression	* file		8520210	0					
ANR	8520220	UnaryOperator	*		8520210	0					
ANR	8520221	Identifier	file		8520210	1					
ANR	8520222	ExpressionStatement	file -> global = global	1036:3:33797:33818	8520210	1	True				
ANR	8520223	AssignmentExpression	file -> global = global		8520210	0		=			
ANR	8520224	PtrMemberAccess	file -> global		8520210	0					
ANR	8520225	Identifier	file		8520210	0					
ANR	8520226	Identifier	global		8520210	1					
ANR	8520227	Identifier	global		8520210	1					
ANR	8520228	ExpressionStatement	file -> file_name = file_name	1038:3:33824:33851	8520210	2	True				
ANR	8520229	AssignmentExpression	file -> file_name = file_name		8520210	0		=			
ANR	8520230	PtrMemberAccess	file -> file_name		8520210	0					
ANR	8520231	Identifier	file		8520210	0					
ANR	8520232	Identifier	file_name		8520210	1					
ANR	8520233	Identifier	file_name		8520210	1					
ANR	8520234	ExpressionStatement	file -> out_name = out_name	1039:3:33856:33881	8520210	3	True				
ANR	8520235	AssignmentExpression	file -> out_name = out_name		8520210	0		=			
ANR	8520236	PtrMemberAccess	file -> out_name		8520210	0					
ANR	8520237	Identifier	file		8520210	0					
ANR	8520238	Identifier	out_name		8520210	1					
ANR	8520239	Identifier	out_name		8520210	1					
ANR	8520240	ExpressionStatement	file -> status_code = 0	1040:3:33886:33907	8520210	4	True				
ANR	8520241	AssignmentExpression	file -> status_code = 0		8520210	0		=			
ANR	8520242	PtrMemberAccess	file -> status_code		8520210	0					
ANR	8520243	Identifier	file		8520210	0					
ANR	8520244	Identifier	status_code		8520210	1					
ANR	8520245	PrimaryExpression	0		8520210	1					
ANR	8520246	ExpressionStatement	file -> read_errno = 0	1041:3:33912:33932	8520210	5	True				
ANR	8520247	AssignmentExpression	file -> read_errno = 0		8520210	0		=			
ANR	8520248	PtrMemberAccess	file -> read_errno		8520210	0					
ANR	8520249	Identifier	file		8520210	0					
ANR	8520250	Identifier	read_errno		8520210	1					
ANR	8520251	PrimaryExpression	0		8520210	1					
ANR	8520252	ExpressionStatement	file -> write_errno = 0	1042:3:33937:33958	8520210	6	True				
ANR	8520253	AssignmentExpression	file -> write_errno = 0		8520210	0		=			
ANR	8520254	PtrMemberAccess	file -> write_errno		8520210	0					
ANR	8520255	Identifier	file		8520210	0					
ANR	8520256	Identifier	write_errno		8520210	1					
ANR	8520257	PrimaryExpression	0		8520210	1					
ANR	8520258	ExpressionStatement	file -> file = NULL	1044:3:33964:33981	8520210	7	True				
ANR	8520259	AssignmentExpression	file -> file = NULL		8520210	0		=			
ANR	8520260	PtrMemberAccess	file -> file		8520210	0					
ANR	8520261	Identifier	file		8520210	0					
ANR	8520262	Identifier	file		8520210	1					
ANR	8520263	Identifier	NULL		8520210	1					
ANR	8520264	ExpressionStatement	file -> out = NULL	1045:3:33986:34002	8520210	8	True				
ANR	8520265	AssignmentExpression	file -> out = NULL		8520210	0		=			
ANR	8520266	PtrMemberAccess	file -> out		8520210	0					
ANR	8520267	Identifier	file		8520210	0					
ANR	8520268	Identifier	out		8520210	1					
ANR	8520269	Identifier	NULL		8520210	1					
ANR	8520270	ExpressionStatement	file -> read_count = 0	1048:3:34060:34080	8520210	9	True				
ANR	8520271	AssignmentExpression	file -> read_count = 0		8520210	0		=			
ANR	8520272	PtrMemberAccess	file -> read_count		8520210	0					
ANR	8520273	Identifier	file		8520210	0					
ANR	8520274	Identifier	read_count		8520210	1					
ANR	8520275	PrimaryExpression	0		8520210	1					
ANR	8520276	ExpressionStatement	file -> state = STATE_SIGNATURE	1049:3:34085:34114	8520210	10	True				
ANR	8520277	AssignmentExpression	file -> state = STATE_SIGNATURE		8520210	0		=			
ANR	8520278	PtrMemberAccess	file -> state		8520210	0					
ANR	8520279	Identifier	file		8520210	0					
ANR	8520280	Identifier	state		8520210	1					
ANR	8520281	Identifier	STATE_SIGNATURE		8520210	1					
ANR	8520282	ExpressionStatement	file -> chunk = NULL	1051:3:34120:34138	8520210	11	True				
ANR	8520283	AssignmentExpression	file -> chunk = NULL		8520210	0		=			
ANR	8520284	PtrMemberAccess	file -> chunk		8520210	0					
ANR	8520285	Identifier	file		8520210	0					
ANR	8520286	Identifier	chunk		8520210	1					
ANR	8520287	Identifier	NULL		8520210	1					
ANR	8520288	ExpressionStatement	file -> idat = NULL	1052:3:34143:34160	8520210	12	True				
ANR	8520289	AssignmentExpression	file -> idat = NULL		8520210	0		=			
ANR	8520290	PtrMemberAccess	file -> idat		8520210	0					
ANR	8520291	Identifier	file		8520210	0					
ANR	8520292	Identifier	idat		8520210	1					
ANR	8520293	Identifier	NULL		8520210	1					
ANR	8520294	ExpressionStatement	file -> alloc_ptr = alloc_ptr	1054:3:34166:34193	8520210	13	True				
ANR	8520295	AssignmentExpression	file -> alloc_ptr = alloc_ptr		8520210	0		=			
ANR	8520296	PtrMemberAccess	file -> alloc_ptr		8520210	0					
ANR	8520297	Identifier	file		8520210	0					
ANR	8520298	Identifier	alloc_ptr		8520210	1					
ANR	8520299	Identifier	alloc_ptr		8520210	1					
ANR	8520300	ExpressionStatement	file -> alloc = alloc	1055:3:34198:34217	8520210	14	True				
ANR	8520301	AssignmentExpression	file -> alloc = alloc		8520210	0		=			
ANR	8520302	PtrMemberAccess	file -> alloc		8520210	0					
ANR	8520303	Identifier	file		8520210	0					
ANR	8520304	Identifier	alloc		8520210	1					
ANR	8520305	Identifier	alloc		8520210	1					
ANR	8520306	ExpressionStatement	assert ( file_name != NULL )	1058:3:34248:34273	8520210	15	True				
ANR	8520307	CallExpression	assert ( file_name != NULL )		8520210	0					
ANR	8520308	Callee	assert		8520210	0					
ANR	8520309	Identifier	assert		8520210	0					
ANR	8520310	ArgumentList	file_name != NULL		8520210	1					
ANR	8520311	Argument	file_name != NULL		8520210	0					
ANR	8520312	EqualityExpression	file_name != NULL		8520210	0		!=			
ANR	8520313	Identifier	file_name		8520210	0					
ANR	8520314	Identifier	NULL		8520210	1					
ANR	8520315	ExpressionStatement	"file -> file = fopen ( file_name , ""rb"" )"	1059:3:34278:34313	8520210	16	True				
ANR	8520316	AssignmentExpression	"file -> file = fopen ( file_name , ""rb"" )"		8520210	0		=			
ANR	8520317	PtrMemberAccess	file -> file		8520210	0					
ANR	8520318	Identifier	file		8520210	0					
ANR	8520319	Identifier	file		8520210	1					
ANR	8520320	CallExpression	"fopen ( file_name , ""rb"" )"		8520210	1					
ANR	8520321	Callee	fopen		8520210	0					
ANR	8520322	Identifier	fopen		8520210	0					
ANR	8520323	ArgumentList	file_name		8520210	1					
ANR	8520324	Argument	file_name		8520210	0					
ANR	8520325	Identifier	file_name		8520210	0					
ANR	8520326	Argument	"""rb"""		8520210	1					
ANR	8520327	PrimaryExpression	"""rb"""		8520210	0					
ANR	8520328	IfStatement	if ( file -> file == NULL )		8520210	17					
ANR	8520329	Condition	file -> file == NULL	1061:7:34323:34340	8520210	0	True				
ANR	8520330	EqualityExpression	file -> file == NULL		8520210	0		==			
ANR	8520331	PtrMemberAccess	file -> file		8520210	0					
ANR	8520332	Identifier	file		8520210	0					
ANR	8520333	Identifier	file		8520210	1					
ANR	8520334	Identifier	NULL		8520210	1					
ANR	8520335	CompoundStatement		29:3:570:570	8520210	1					
ANR	8520336	ExpressionStatement	file -> read_errno = errno	1063:6:34354:34378	8520210	0	True				
ANR	8520337	AssignmentExpression	file -> read_errno = errno		8520210	0		=			
ANR	8520338	PtrMemberAccess	file -> read_errno		8520210	0					
ANR	8520339	Identifier	file		8520210	0					
ANR	8520340	Identifier	read_errno		8520210	1					
ANR	8520341	Identifier	errno		8520210	1					
ANR	8520342	ExpressionStatement	file -> status_code |= FILE_ERROR	1064:6:34386:34417	8520210	1	True				
ANR	8520343	AssignmentExpression	file -> status_code |= FILE_ERROR		8520210	0		|=			
ANR	8520344	PtrMemberAccess	file -> status_code		8520210	0					
ANR	8520345	Identifier	file		8520210	0					
ANR	8520346	Identifier	status_code		8520210	1					
ANR	8520347	Identifier	FILE_ERROR		8520210	1					
ANR	8520348	ExpressionStatement	perror ( file_name )	1066:6:34481:34498	8520210	2	True				
ANR	8520349	CallExpression	perror ( file_name )		8520210	0					
ANR	8520350	Callee	perror		8520210	0					
ANR	8520351	Identifier	perror		8520210	0					
ANR	8520352	ArgumentList	file_name		8520210	1					
ANR	8520353	Argument	file_name		8520210	0					
ANR	8520354	Identifier	file_name		8520210	0					
ANR	8520355	ReturnStatement	return FILE_ERROR ;	1067:6:34506:34523	8520210	3	True				
ANR	8520356	Identifier	FILE_ERROR		8520210	0					
ANR	8520357	IfStatement	if ( out_name != NULL )		8520210	18					
ANR	8520358	Condition	out_name != NULL	1070:7:34538:34553	8520210	0	True				
ANR	8520359	EqualityExpression	out_name != NULL		8520210	0		!=			
ANR	8520360	Identifier	out_name		8520210	0					
ANR	8520361	Identifier	NULL		8520210	1					
ANR	8520362	CompoundStatement		38:3:783:783	8520210	1					
ANR	8520363	ExpressionStatement	"file -> out = fopen ( out_name , ""wb"" )"	1072:6:34567:34600	8520210	0	True				
ANR	8520364	AssignmentExpression	"file -> out = fopen ( out_name , ""wb"" )"		8520210	0		=			
ANR	8520365	PtrMemberAccess	file -> out		8520210	0					
ANR	8520366	Identifier	file		8520210	0					
ANR	8520367	Identifier	out		8520210	1					
ANR	8520368	CallExpression	"fopen ( out_name , ""wb"" )"		8520210	1					
ANR	8520369	Callee	fopen		8520210	0					
ANR	8520370	Identifier	fopen		8520210	0					
ANR	8520371	ArgumentList	out_name		8520210	1					
ANR	8520372	Argument	out_name		8520210	0					
ANR	8520373	Identifier	out_name		8520210	0					
ANR	8520374	Argument	"""wb"""		8520210	1					
ANR	8520375	PrimaryExpression	"""wb"""		8520210	0					
ANR	8520376	IfStatement	if ( file -> out == NULL )		8520210	1					
ANR	8520377	Condition	file -> out == NULL	1074:10:34613:34629	8520210	0	True				
ANR	8520378	EqualityExpression	file -> out == NULL		8520210	0		==			
ANR	8520379	PtrMemberAccess	file -> out		8520210	0					
ANR	8520380	Identifier	file		8520210	0					
ANR	8520381	Identifier	out		8520210	1					
ANR	8520382	Identifier	NULL		8520210	1					
ANR	8520383	CompoundStatement		42:6:862:862	8520210	1					
ANR	8520384	ExpressionStatement	file -> write_errno = errno	1076:9:34649:34674	8520210	0	True				
ANR	8520385	AssignmentExpression	file -> write_errno = errno		8520210	0		=			
ANR	8520386	PtrMemberAccess	file -> write_errno		8520210	0					
ANR	8520387	Identifier	file		8520210	0					
ANR	8520388	Identifier	write_errno		8520210	1					
ANR	8520389	Identifier	errno		8520210	1					
ANR	8520390	ExpressionStatement	file -> status_code |= WRITE_ERROR	1077:9:34685:34717	8520210	1	True				
ANR	8520391	AssignmentExpression	file -> status_code |= WRITE_ERROR		8520210	0		|=			
ANR	8520392	PtrMemberAccess	file -> status_code		8520210	0					
ANR	8520393	Identifier	file		8520210	0					
ANR	8520394	Identifier	status_code		8520210	1					
ANR	8520395	Identifier	WRITE_ERROR		8520210	1					
ANR	8520396	ExpressionStatement	perror ( out_name )	1078:9:34728:34744	8520210	2	True				
ANR	8520397	CallExpression	perror ( out_name )		8520210	0					
ANR	8520398	Callee	perror		8520210	0					
ANR	8520399	Identifier	perror		8520210	0					
ANR	8520400	ArgumentList	out_name		8520210	1					
ANR	8520401	Argument	out_name		8520210	0					
ANR	8520402	Identifier	out_name		8520210	0					
ANR	8520403	ReturnStatement	return WRITE_ERROR ;	1079:9:34755:34773	8520210	3	True				
ANR	8520404	Identifier	WRITE_ERROR		8520210	0					
ANR	8520405	ReturnStatement	return 0 ;	1083:3:34792:34800	8520210	19	True				
ANR	8520406	PrimaryExpression	0		8520210	0					
ANR	8520407	ReturnType	static int		8520210	1					
ANR	8520408	Identifier	file_init		8520210	2					
ANR	8520409	ParameterList	"struct file * file , struct global * global , const char * file_name , const char * out_name , void * alloc_ptr , void ( * alloc ) ( struct file * , int )"		8520210	3					
ANR	8520410	Parameter	struct file * file	1028:10:33434:33450	8520210	0	True				
ANR	8520411	ParameterType	struct file *		8520210	0					
ANR	8520412	Identifier	file		8520210	1					
ANR	8520413	Parameter	struct global * global	1028:29:33453:33473	8520210	1	True				
ANR	8520414	ParameterType	struct global *		8520210	0					
ANR	8520415	Identifier	global		8520210	1					
ANR	8520416	Parameter	const char * file_name	1028:52:33476:33496	8520210	2	True				
ANR	8520417	ParameterType	const char *		8520210	0					
ANR	8520418	Identifier	file_name		8520210	1					
ANR	8520419	Parameter	const char * out_name	1029:3:33502:33521	8520210	3	True				
ANR	8520420	ParameterType	const char *		8520210	0					
ANR	8520421	Identifier	out_name		8520210	1					
ANR	8520422	Parameter	void * alloc_ptr	1029:25:33524:33538	8520210	4	True				
ANR	8520423	ParameterType	void *		8520210	0					
ANR	8520424	Identifier	alloc_ptr		8520210	1					
ANR	8520425	Parameter	"void ( * alloc ) ( struct file * , int )"	1029:42:33541:33571	8520210	5	True				
ANR	8520426	ParameterType	"(( struct file * , int ) void) *"		8520210	0					
ANR	8520427	Identifier	alloc		8520210	1					
ANR	8520428	CFGEntryNode	ENTRY		8520210		True				
ANR	8520429	CFGExitNode	EXIT		8520210		True				
ANR	8520430	Symbol	file -> alloc_ptr		8520210						
ANR	8520431	Symbol	file -> chunk		8520210						
ANR	8520432	Symbol	file -> file		8520210						
ANR	8520433	Symbol	global		8520210						
ANR	8520434	Symbol	file		8520210						
ANR	8520435	Symbol	file -> idat		8520210						
ANR	8520436	Symbol	file -> state		8520210						
ANR	8520437	Symbol	file -> out_name		8520210						
ANR	8520438	Symbol	fopen		8520210						
ANR	8520439	Symbol	errno		8520210						
ANR	8520440	Symbol	NULL		8520210						
ANR	8520441	Symbol	file_name		8520210						
ANR	8520442	Symbol	out_name		8520210						
ANR	8520443	Symbol	file -> write_errno		8520210						
ANR	8520444	Symbol	FILE_ERROR		8520210						
ANR	8520445	Symbol	WRITE_ERROR		8520210						
ANR	8520446	Symbol	file -> file_name		8520210						
ANR	8520447	Symbol	* file		8520210						
ANR	8520448	Symbol	file -> read_count		8520210						
ANR	8520449	Symbol	file -> status_code		8520210						
ANR	8520450	Symbol	file -> read_errno		8520210						
ANR	8520451	Symbol	alloc_ptr		8520210						
ANR	8520452	Symbol	file -> global		8520210						
ANR	8520453	Symbol	STATE_SIGNATURE		8520210						
ANR	8520454	Symbol	file -> alloc		8520210						
ANR	8520455	Symbol	alloc		8520210						
ANR	8520456	Symbol	file -> out		8520210						
ANR	8520457	Function	log_error	1086:0:34805:35002							
ANR	8520458	FunctionDef	"log_error (struct file * file , int code , const char * what)"		8520457	0					
ANR	8520459	CompoundStatement		1089:0:34935:35002	8520457	0					
ANR	8520460	IfStatement	if ( file -> global -> errors )		8520457	0					
ANR	8520461	Condition	file -> global -> errors	1090:7:34944:34963	8520457	0	True				
ANR	8520462	PtrMemberAccess	file -> global -> errors		8520457	0					
ANR	8520463	PtrMemberAccess	file -> global		8520457	0					
ANR	8520464	Identifier	file		8520457	0					
ANR	8520465	Identifier	global		8520457	1					
ANR	8520466	Identifier	errors		8520457	1					
ANR	8520467	ExpressionStatement	"emit_error ( file , code , what )"	1091:6:34972:35000	8520457	1	True				
ANR	8520468	CallExpression	"emit_error ( file , code , what )"		8520457	0					
ANR	8520469	Callee	emit_error		8520457	0					
ANR	8520470	Identifier	emit_error		8520457	0					
ANR	8520471	ArgumentList	file		8520457	1					
ANR	8520472	Argument	file		8520457	0					
ANR	8520473	Identifier	file		8520457	0					
ANR	8520474	Argument	code		8520457	1					
ANR	8520475	Identifier	code		8520457	0					
ANR	8520476	Argument	what		8520457	2					
ANR	8520477	Identifier	what		8520457	0					
ANR	8520478	ReturnType	static void		8520457	1					
ANR	8520479	Identifier	log_error		8520457	2					
ANR	8520480	ParameterList	"struct file * file , int code , const char * what"		8520457	3					
ANR	8520481	Parameter	struct file * file	1087:10:34827:34843	8520457	0	True				
ANR	8520482	ParameterType	struct file *		8520457	0					
ANR	8520483	Identifier	file		8520457	1					
ANR	8520484	Parameter	int code	1087:29:34846:34853	8520457	1	True				
ANR	8520485	ParameterType	int		8520457	0					
ANR	8520486	Identifier	code		8520457	1					
ANR	8520487	Parameter	const char * what	1087:39:34856:34871	8520457	2	True				
ANR	8520488	ParameterType	const char *		8520457	0					
ANR	8520489	Identifier	what		8520457	1					
ANR	8520490	CFGEntryNode	ENTRY		8520457		True				
ANR	8520491	CFGExitNode	EXIT		8520457		True				
ANR	8520492	Symbol	file		8520457						
ANR	8520493	Symbol	code		8520457						
ANR	8520494	Symbol	what		8520457						
ANR	8520495	Symbol	* file -> global		8520457						
ANR	8520496	Symbol	file -> global		8520457						
ANR	8520497	Symbol	file -> global -> errors		8520457						
ANR	8520498	Symbol	* file		8520457						
ANR	8520499	Symbol	* * file		8520457						
ANR	8520500	Function	type_char	1094:0:35005:35563							
ANR	8520501	FunctionDef	type_char (png_uint_32 v)		8520500	0					
ANR	8520502	CompoundStatement		1096:0:35042:35563	8520500	0					
ANR	8520503	IfStatement	if ( v & 32 )		8520500	0					
ANR	8520504	Condition	v & 32	1103:7:35426:35431	8520500	0	True				
ANR	8520505	BitAndExpression	v & 32		8520500	0		&			
ANR	8520506	Identifier	v		8520500	0					
ANR	8520507	PrimaryExpression	32		8520500	1					
ANR	8520508	ReturnStatement	"return ""!abcdefghijklmnopqrstuvwxyz56789"" [ ( v - 96 ) & 31 ] ;"	1104:6:35440:35492	8520500	1	True				
ANR	8520509	ArrayIndexing	"""!abcdefghijklmnopqrstuvwxyz56789"" [ ( v - 96 ) & 31 ]"		8520500	0					
ANR	8520510	PrimaryExpression	"""!abcdefghijklmnopqrstuvwxyz56789"""		8520500	0					
ANR	8520511	BitAndExpression	( v - 96 ) & 31		8520500	1		&			
ANR	8520512	AdditiveExpression	v - 96		8520500	0		-			
ANR	8520513	Identifier	v		8520500	0					
ANR	8520514	PrimaryExpression	96		8520500	1					
ANR	8520515	PrimaryExpression	31		8520500	1					
ANR	8520516	ElseStatement	else		8520500	0					
ANR	8520517	ReturnStatement	"return ""@ABCDEFGHIJKLMNOPQRSTUVWXYZ01234"" [ ( v - 64 ) & 31 ] ;"	1107:6:35509:35561	8520500	0	True				
ANR	8520518	ArrayIndexing	"""@ABCDEFGHIJKLMNOPQRSTUVWXYZ01234"" [ ( v - 64 ) & 31 ]"		8520500	0					
ANR	8520519	PrimaryExpression	"""@ABCDEFGHIJKLMNOPQRSTUVWXYZ01234"""		8520500	0					
ANR	8520520	BitAndExpression	( v - 64 ) & 31		8520500	1		&			
ANR	8520521	AdditiveExpression	v - 64		8520500	0		-			
ANR	8520522	Identifier	v		8520500	0					
ANR	8520523	PrimaryExpression	64		8520500	1					
ANR	8520524	PrimaryExpression	31		8520500	1					
ANR	8520525	ReturnType	static char		8520500	1					
ANR	8520526	Identifier	type_char		8520500	2					
ANR	8520527	ParameterList	png_uint_32 v		8520500	3					
ANR	8520528	Parameter	png_uint_32 v	1095:10:35027:35039	8520500	0	True				
ANR	8520529	ParameterType	png_uint_32		8520500	0					
ANR	8520530	Identifier	v		8520500	1					
ANR	8520531	CFGEntryNode	ENTRY		8520500		True				
ANR	8520532	CFGExitNode	EXIT		8520500		True				
ANR	8520533	Symbol	* v		8520500						
ANR	8520534	Symbol	v		8520500						
ANR	8520535	Function	type_name	1110:0:35566:35767							
ANR	8520536	FunctionDef	"type_name (png_uint_32 type , FILE * out)"		8520535	0					
ANR	8520537	CompoundStatement		1112:0:35617:35767	8520535	0					
ANR	8520538	ExpressionStatement	"putc ( type_char ( type >> 24 ) , out )"	1113:3:35622:35654	8520535	0	True				
ANR	8520539	CallExpression	"putc ( type_char ( type >> 24 ) , out )"		8520535	0					
ANR	8520540	Callee	putc		8520535	0					
ANR	8520541	Identifier	putc		8520535	0					
ANR	8520542	ArgumentList	type_char ( type >> 24 )		8520535	1					
ANR	8520543	Argument	type_char ( type >> 24 )		8520535	0					
ANR	8520544	CallExpression	type_char ( type >> 24 )		8520535	0					
ANR	8520545	Callee	type_char		8520535	0					
ANR	8520546	Identifier	type_char		8520535	0					
ANR	8520547	ArgumentList	type >> 24		8520535	1					
ANR	8520548	Argument	type >> 24		8520535	0					
ANR	8520549	ShiftExpression	type >> 24		8520535	0		>>			
ANR	8520550	Identifier	type		8520535	0					
ANR	8520551	PrimaryExpression	24		8520535	1					
ANR	8520552	Argument	out		8520535	1					
ANR	8520553	Identifier	out		8520535	0					
ANR	8520554	ExpressionStatement	"putc ( type_char ( type >> 16 ) , out )"	1114:3:35659:35691	8520535	1	True				
ANR	8520555	CallExpression	"putc ( type_char ( type >> 16 ) , out )"		8520535	0					
ANR	8520556	Callee	putc		8520535	0					
ANR	8520557	Identifier	putc		8520535	0					
ANR	8520558	ArgumentList	type_char ( type >> 16 )		8520535	1					
ANR	8520559	Argument	type_char ( type >> 16 )		8520535	0					
ANR	8520560	CallExpression	type_char ( type >> 16 )		8520535	0					
ANR	8520561	Callee	type_char		8520535	0					
ANR	8520562	Identifier	type_char		8520535	0					
ANR	8520563	ArgumentList	type >> 16		8520535	1					
ANR	8520564	Argument	type >> 16		8520535	0					
ANR	8520565	ShiftExpression	type >> 16		8520535	0		>>			
ANR	8520566	Identifier	type		8520535	0					
ANR	8520567	PrimaryExpression	16		8520535	1					
ANR	8520568	Argument	out		8520535	1					
ANR	8520569	Identifier	out		8520535	0					
ANR	8520570	ExpressionStatement	"putc ( type_char ( type >> 8 ) , out )"	1115:3:35696:35728	8520535	2	True				
ANR	8520571	CallExpression	"putc ( type_char ( type >> 8 ) , out )"		8520535	0					
ANR	8520572	Callee	putc		8520535	0					
ANR	8520573	Identifier	putc		8520535	0					
ANR	8520574	ArgumentList	type_char ( type >> 8 )		8520535	1					
ANR	8520575	Argument	type_char ( type >> 8 )		8520535	0					
ANR	8520576	CallExpression	type_char ( type >> 8 )		8520535	0					
ANR	8520577	Callee	type_char		8520535	0					
ANR	8520578	Identifier	type_char		8520535	0					
ANR	8520579	ArgumentList	type >> 8		8520535	1					
ANR	8520580	Argument	type >> 8		8520535	0					
ANR	8520581	ShiftExpression	type >> 8		8520535	0		>>			
ANR	8520582	Identifier	type		8520535	0					
ANR	8520583	PrimaryExpression	8		8520535	1					
ANR	8520584	Argument	out		8520535	1					
ANR	8520585	Identifier	out		8520535	0					
ANR	8520586	ExpressionStatement	"putc ( type_char ( type ) , out )"	1116:3:35733:35765	8520535	3	True				
ANR	8520587	CallExpression	"putc ( type_char ( type ) , out )"		8520535	0					
ANR	8520588	Callee	putc		8520535	0					
ANR	8520589	Identifier	putc		8520535	0					
ANR	8520590	ArgumentList	type_char ( type )		8520535	1					
ANR	8520591	Argument	type_char ( type )		8520535	0					
ANR	8520592	CallExpression	type_char ( type )		8520535	0					
ANR	8520593	Callee	type_char		8520535	0					
ANR	8520594	Identifier	type_char		8520535	0					
ANR	8520595	ArgumentList	type		8520535	1					
ANR	8520596	Argument	type		8520535	0					
ANR	8520597	Identifier	type		8520535	0					
ANR	8520598	Argument	out		8520535	1					
ANR	8520599	Identifier	out		8520535	0					
ANR	8520600	ReturnType	static void		8520535	1					
ANR	8520601	Identifier	type_name		8520535	2					
ANR	8520602	ParameterList	"png_uint_32 type , FILE * out"		8520535	3					
ANR	8520603	Parameter	png_uint_32 type	1111:10:35588:35603	8520535	0	True				
ANR	8520604	ParameterType	png_uint_32		8520535	0					
ANR	8520605	Identifier	type		8520535	1					
ANR	8520606	Parameter	FILE * out	1111:28:35606:35614	8520535	1	True				
ANR	8520607	ParameterType	FILE *		8520535	0					
ANR	8520608	Identifier	out		8520535	1					
ANR	8520609	CFGEntryNode	ENTRY		8520535		True				
ANR	8520610	CFGExitNode	EXIT		8520535		True				
ANR	8520611	Symbol	type_char		8520535						
ANR	8520612	Symbol	type		8520535						
ANR	8520613	Symbol	out		8520535						
ANR	8520614	Function	type_sep	1119:0:35770:35842							
ANR	8520615	FunctionDef	type_sep (FILE * out)		8520614	0					
ANR	8520616	CompoundStatement		1121:0:35802:35842	8520614	0					
ANR	8520617	ExpressionStatement	"putc ( ':' , out )"	1122:3:35807:35821	8520614	0	True				
ANR	8520618	CallExpression	"putc ( ':' , out )"		8520614	0					
ANR	8520619	Callee	putc		8520614	0					
ANR	8520620	Identifier	putc		8520614	0					
ANR	8520621	ArgumentList	':'		8520614	1					
ANR	8520622	Argument	':'		8520614	0					
ANR	8520623	PrimaryExpression	':'		8520614	0					
ANR	8520624	Argument	out		8520614	1					
ANR	8520625	Identifier	out		8520614	0					
ANR	8520626	ExpressionStatement	"putc ( ' ' , out )"	1123:3:35826:35840	8520614	1	True				
ANR	8520627	CallExpression	"putc ( ' ' , out )"		8520614	0					
ANR	8520628	Callee	putc		8520614	0					
ANR	8520629	Identifier	putc		8520614	0					
ANR	8520630	ArgumentList	' '		8520614	1					
ANR	8520631	Argument	' '		8520614	0					
ANR	8520632	PrimaryExpression	' '		8520614	0					
ANR	8520633	Argument	out		8520614	1					
ANR	8520634	Identifier	out		8520614	0					
ANR	8520635	ReturnType	static void		8520614	1					
ANR	8520636	Identifier	type_sep		8520614	2					
ANR	8520637	ParameterList	FILE * out		8520614	3					
ANR	8520638	Parameter	FILE * out	1120:9:35791:35799	8520614	0	True				
ANR	8520639	ParameterType	FILE *		8520614	0					
ANR	8520640	Identifier	out		8520614	1					
ANR	8520641	CFGEntryNode	ENTRY		8520614		True				
ANR	8520642	CFGExitNode	EXIT		8520614		True				
ANR	8520643	Symbol	out		8520614						
ANR	8520644	DeclStmt									
ANR	8520645	Decl							png_uint_32	"png_uint_32 ( struct file * file , int code )"	current_type
ANR	8520646	Function	stop	1128:13:35921:37737							
ANR	8520647	FunctionDef	"stop (struct file * file , int code , const char * what)"		8520646	0					
ANR	8520648	CompoundStatement		1133:0:36091:37737	8520646	0					
ANR	8520649	ExpressionStatement	"log_error ( file , code , what )"	1134:3:36096:36123	8520646	0	True				
ANR	8520650	CallExpression	"log_error ( file , code , what )"		8520646	0					
ANR	8520651	Callee	log_error		8520646	0					
ANR	8520652	Identifier	log_error		8520646	0					
ANR	8520653	ArgumentList	file		8520646	1					
ANR	8520654	Argument	file		8520646	0					
ANR	8520655	Identifier	file		8520646	0					
ANR	8520656	Argument	code		8520646	1					
ANR	8520657	Identifier	code		8520646	0					
ANR	8520658	Argument	what		8520646	2					
ANR	8520659	Identifier	what		8520646	0					
ANR	8520660	IfStatement	if ( file -> global -> quiet < 2 )		8520646	1					
ANR	8520661	Condition	file -> global -> quiet < 2	1149:7:36771:36793	8520646	0	True				
ANR	8520662	RelationalExpression	file -> global -> quiet < 2		8520646	0		<			
ANR	8520663	PtrMemberAccess	file -> global -> quiet		8520646	0					
ANR	8520664	PtrMemberAccess	file -> global		8520646	0					
ANR	8520665	Identifier	file		8520646	0					
ANR	8520666	Identifier	global		8520646	1					
ANR	8520667	Identifier	quiet		8520646	1					
ANR	8520668	PrimaryExpression	2		8520646	1					
ANR	8520669	CompoundStatement		19:6:751:767	8520646	1					
ANR	8520670	IdentifierDeclStatement	png_uint_32 type ;	1151:6:36843:36859	8520646	0	True				
ANR	8520671	IdentifierDecl	type		8520646	0					
ANR	8520672	IdentifierDeclType	png_uint_32		8520646	0					
ANR	8520673	Identifier	type		8520646	1					
ANR	8520674	IfStatement	if ( file -> chunk != NULL )		8520646	1					
ANR	8520675	Condition	file -> chunk != NULL	1153:10:36872:36890	8520646	0	True				
ANR	8520676	EqualityExpression	file -> chunk != NULL		8520646	0		!=			
ANR	8520677	PtrMemberAccess	file -> chunk		8520646	0					
ANR	8520678	Identifier	file		8520646	0					
ANR	8520679	Identifier	chunk		8520646	1					
ANR	8520680	Identifier	NULL		8520646	1					
ANR	8520681	ExpressionStatement	"type = current_type ( file , code )"	1154:9:36902:36933	8520646	1	True				
ANR	8520682	AssignmentExpression	"type = current_type ( file , code )"		8520646	0		=			
ANR	8520683	Identifier	type		8520646	0					
ANR	8520684	CallExpression	"current_type ( file , code )"		8520646	1					
ANR	8520685	Callee	current_type		8520646	0					
ANR	8520686	Identifier	current_type		8520646	0					
ANR	8520687	ArgumentList	file		8520646	1					
ANR	8520688	Argument	file		8520646	0					
ANR	8520689	Identifier	file		8520646	0					
ANR	8520690	Argument	code		8520646	1					
ANR	8520691	Identifier	code		8520646	0					
ANR	8520692	ElseStatement	else		8520646	0					
ANR	8520693	ExpressionStatement	type = file -> type	1157:9:36994:37011	8520646	0	True				
ANR	8520694	AssignmentExpression	type = file -> type		8520646	0		=			
ANR	8520695	Identifier	type		8520646	0					
ANR	8520696	PtrMemberAccess	file -> type		8520646	1					
ANR	8520697	Identifier	file		8520646	0					
ANR	8520698	Identifier	type		8520646	1					
ANR	8520699	IfStatement	if ( type )		8520646	2					
ANR	8520700	Condition	type	1159:10:37024:37027	8520646	0	True				
ANR	8520701	Identifier	type		8520646	0					
ANR	8520702	ExpressionStatement	"type_name ( type , stdout )"	1160:9:37039:37062	8520646	1	True				
ANR	8520703	CallExpression	"type_name ( type , stdout )"		8520646	0					
ANR	8520704	Callee	type_name		8520646	0					
ANR	8520705	Identifier	type_name		8520646	0					
ANR	8520706	ArgumentList	type		8520646	1					
ANR	8520707	Argument	type		8520646	0					
ANR	8520708	Identifier	type		8520646	0					
ANR	8520709	Argument	stdout		8520646	1					
ANR	8520710	Identifier	stdout		8520646	0					
ANR	8520711	ElseStatement	else		8520646	0					
ANR	8520712	ExpressionStatement	"fputs ( ""HEAD"" , stdout )"	1163:9:37149:37170	8520646	0	True				
ANR	8520713	CallExpression	"fputs ( ""HEAD"" , stdout )"		8520646	0					
ANR	8520714	Callee	fputs		8520646	0					
ANR	8520715	Identifier	fputs		8520646	0					
ANR	8520716	ArgumentList	"""HEAD"""		8520646	1					
ANR	8520717	Argument	"""HEAD"""		8520646	0					
ANR	8520718	PrimaryExpression	"""HEAD"""		8520646	0					
ANR	8520719	Argument	stdout		8520646	1					
ANR	8520720	Identifier	stdout		8520646	0					
ANR	8520721	ExpressionStatement	"printf ( "" ERR %.2x %s "" , file -> status_code , strcode ( code ) )"	1165:6:37209:37266	8520646	3	True				
ANR	8520722	CallExpression	"printf ( "" ERR %.2x %s "" , file -> status_code , strcode ( code ) )"		8520646	0					
ANR	8520723	Callee	printf		8520646	0					
ANR	8520724	Identifier	printf		8520646	0					
ANR	8520725	ArgumentList	""" ERR %.2x %s """		8520646	1					
ANR	8520726	Argument	""" ERR %.2x %s """		8520646	0					
ANR	8520727	PrimaryExpression	""" ERR %.2x %s """		8520646	0					
ANR	8520728	Argument	file -> status_code		8520646	1					
ANR	8520729	PtrMemberAccess	file -> status_code		8520646	0					
ANR	8520730	Identifier	file		8520646	0					
ANR	8520731	Identifier	status_code		8520646	1					
ANR	8520732	Argument	strcode ( code )		8520646	2					
ANR	8520733	CallExpression	strcode ( code )		8520646	0					
ANR	8520734	Callee	strcode		8520646	0					
ANR	8520735	Identifier	strcode		8520646	0					
ANR	8520736	ArgumentList	code		8520646	1					
ANR	8520737	Argument	code		8520646	0					
ANR	8520738	Identifier	code		8520646	0					
ANR	8520739	ExpressionStatement	"emit_string ( strerror ( file -> read_errno ) , stdout )"	1169:6:37386:37433	8520646	4	True				
ANR	8520740	CallExpression	"emit_string ( strerror ( file -> read_errno ) , stdout )"		8520646	0					
ANR	8520741	Callee	emit_string		8520646	0					
ANR	8520742	Identifier	emit_string		8520646	0					
ANR	8520743	ArgumentList	strerror ( file -> read_errno )		8520646	1					
ANR	8520744	Argument	strerror ( file -> read_errno )		8520646	0					
ANR	8520745	CallExpression	strerror ( file -> read_errno )		8520646	0					
ANR	8520746	Callee	strerror		8520646	0					
ANR	8520747	Identifier	strerror		8520646	0					
ANR	8520748	ArgumentList	file -> read_errno		8520646	1					
ANR	8520749	Argument	file -> read_errno		8520646	0					
ANR	8520750	PtrMemberAccess	file -> read_errno		8520646	0					
ANR	8520751	Identifier	file		8520646	0					
ANR	8520752	Identifier	read_errno		8520646	1					
ANR	8520753	Argument	stdout		8520646	1					
ANR	8520754	Identifier	stdout		8520646	0					
ANR	8520755	ExpressionStatement	"putc ( ' ' , stdout )"	1170:6:37441:37458	8520646	5	True				
ANR	8520756	CallExpression	"putc ( ' ' , stdout )"		8520646	0					
ANR	8520757	Callee	putc		8520646	0					
ANR	8520758	Identifier	putc		8520646	0					
ANR	8520759	ArgumentList	' '		8520646	1					
ANR	8520760	Argument	' '		8520646	0					
ANR	8520761	PrimaryExpression	' '		8520646	0					
ANR	8520762	Argument	stdout		8520646	1					
ANR	8520763	Identifier	stdout		8520646	0					
ANR	8520764	ExpressionStatement	"emit_string ( strerror ( file -> write_errno ) , stdout )"	1171:6:37466:37514	8520646	6	True				
ANR	8520765	CallExpression	"emit_string ( strerror ( file -> write_errno ) , stdout )"		8520646	0					
ANR	8520766	Callee	emit_string		8520646	0					
ANR	8520767	Identifier	emit_string		8520646	0					
ANR	8520768	ArgumentList	strerror ( file -> write_errno )		8520646	1					
ANR	8520769	Argument	strerror ( file -> write_errno )		8520646	0					
ANR	8520770	CallExpression	strerror ( file -> write_errno )		8520646	0					
ANR	8520771	Callee	strerror		8520646	0					
ANR	8520772	Identifier	strerror		8520646	0					
ANR	8520773	ArgumentList	file -> write_errno		8520646	1					
ANR	8520774	Argument	file -> write_errno		8520646	0					
ANR	8520775	PtrMemberAccess	file -> write_errno		8520646	0					
ANR	8520776	Identifier	file		8520646	0					
ANR	8520777	Identifier	write_errno		8520646	1					
ANR	8520778	Argument	stdout		8520646	1					
ANR	8520779	Identifier	stdout		8520646	0					
ANR	8520780	ExpressionStatement	"putc ( ' ' , stdout )"	1172:6:37522:37539	8520646	7	True				
ANR	8520781	CallExpression	"putc ( ' ' , stdout )"		8520646	0					
ANR	8520782	Callee	putc		8520646	0					
ANR	8520783	Identifier	putc		8520646	0					
ANR	8520784	ArgumentList	' '		8520646	1					
ANR	8520785	Argument	' '		8520646	0					
ANR	8520786	PrimaryExpression	' '		8520646	0					
ANR	8520787	Argument	stdout		8520646	1					
ANR	8520788	Identifier	stdout		8520646	0					
ANR	8520789	ExpressionStatement	"emit_string ( what , stdout )"	1173:6:37547:37572	8520646	8	True				
ANR	8520790	CallExpression	"emit_string ( what , stdout )"		8520646	0					
ANR	8520791	Callee	emit_string		8520646	0					
ANR	8520792	Identifier	emit_string		8520646	0					
ANR	8520793	ArgumentList	what		8520646	1					
ANR	8520794	Argument	what		8520646	0					
ANR	8520795	Identifier	what		8520646	0					
ANR	8520796	Argument	stdout		8520646	1					
ANR	8520797	Identifier	stdout		8520646	0					
ANR	8520798	ExpressionStatement	"putc ( ' ' , stdout )"	1174:6:37580:37597	8520646	9	True				
ANR	8520799	CallExpression	"putc ( ' ' , stdout )"		8520646	0					
ANR	8520800	Callee	putc		8520646	0					
ANR	8520801	Identifier	putc		8520646	0					
ANR	8520802	ArgumentList	' '		8520646	1					
ANR	8520803	Argument	' '		8520646	0					
ANR	8520804	PrimaryExpression	' '		8520646	0					
ANR	8520805	Argument	stdout		8520646	1					
ANR	8520806	Identifier	stdout		8520646	0					
ANR	8520807	ExpressionStatement	"fputs ( file -> file_name , stdout )"	1175:6:37605:37635	8520646	10	True				
ANR	8520808	CallExpression	"fputs ( file -> file_name , stdout )"		8520646	0					
ANR	8520809	Callee	fputs		8520646	0					
ANR	8520810	Identifier	fputs		8520646	0					
ANR	8520811	ArgumentList	file -> file_name		8520646	1					
ANR	8520812	Argument	file -> file_name		8520646	0					
ANR	8520813	PtrMemberAccess	file -> file_name		8520646	0					
ANR	8520814	Identifier	file		8520646	0					
ANR	8520815	Identifier	file_name		8520646	1					
ANR	8520816	Argument	stdout		8520646	1					
ANR	8520817	Identifier	stdout		8520646	0					
ANR	8520818	ExpressionStatement	"putc ( '\\n' , stdout )"	1176:6:37643:37661	8520646	11	True				
ANR	8520819	CallExpression	"putc ( '\\n' , stdout )"		8520646	0					
ANR	8520820	Callee	putc		8520646	0					
ANR	8520821	Identifier	putc		8520646	0					
ANR	8520822	ArgumentList	'\\n'		8520646	1					
ANR	8520823	Argument	'\\n'		8520646	0					
ANR	8520824	PrimaryExpression	'\\n'		8520646	0					
ANR	8520825	Argument	stdout		8520646	1					
ANR	8520826	Identifier	stdout		8520646	0					
ANR	8520827	ExpressionStatement	file -> status_code |= FILE_ERROR	1179:3:37672:37703	8520646	2	True				
ANR	8520828	AssignmentExpression	file -> status_code |= FILE_ERROR		8520646	0		|=			
ANR	8520829	PtrMemberAccess	file -> status_code		8520646	0					
ANR	8520830	Identifier	file		8520646	0					
ANR	8520831	Identifier	status_code		8520646	1					
ANR	8520832	Identifier	FILE_ERROR		8520646	1					
ANR	8520833	ExpressionStatement	"longjmp ( file -> jmpbuf , code )"	1180:3:37708:37735	8520646	3	True				
ANR	8520834	CallExpression	"longjmp ( file -> jmpbuf , code )"		8520646	0					
ANR	8520835	Callee	longjmp		8520646	0					
ANR	8520836	Identifier	longjmp		8520646	0					
ANR	8520837	ArgumentList	file -> jmpbuf		8520646	1					
ANR	8520838	Argument	file -> jmpbuf		8520646	0					
ANR	8520839	PtrMemberAccess	file -> jmpbuf		8520646	0					
ANR	8520840	Identifier	file		8520646	0					
ANR	8520841	Identifier	jmpbuf		8520646	1					
ANR	8520842	Argument	code		8520646	1					
ANR	8520843	Identifier	code		8520646	0					
ANR	8520844	ReturnType	static void		8520646	1					
ANR	8520845	Identifier	stop		8520646	2					
ANR	8520846	ParameterList	"struct file * file , int code , const char * what"		8520646	3					
ANR	8520847	Parameter	struct file * file	1129:5:35938:35954	8520646	0	True				
ANR	8520848	ParameterType	struct file *		8520646	0					
ANR	8520849	Identifier	file		8520646	1					
ANR	8520850	Parameter	int code	1129:24:35957:35964	8520646	1	True				
ANR	8520851	ParameterType	int		8520646	0					
ANR	8520852	Identifier	code		8520646	1					
ANR	8520853	Parameter	const char * what	1129:34:35967:35982	8520646	2	True				
ANR	8520854	ParameterType	const char *		8520646	0					
ANR	8520855	Identifier	what		8520646	1					
ANR	8520856	CFGEntryNode	ENTRY		8520646		True				
ANR	8520857	CFGExitNode	EXIT		8520646		True				
ANR	8520858	Symbol	code		8520646						
ANR	8520859	Symbol	NULL		8520646						
ANR	8520860	Symbol	stdout		8520646						
ANR	8520861	Symbol	file -> write_errno		8520646						
ANR	8520862	Symbol	file -> chunk		8520646						
ANR	8520863	Symbol	FILE_ERROR		8520646						
ANR	8520864	Symbol	file -> file_name		8520646						
ANR	8520865	Symbol	* file		8520646						
ANR	8520866	Symbol	type		8520646						
ANR	8520867	Symbol	strcode		8520646						
ANR	8520868	Symbol	file -> status_code		8520646						
ANR	8520869	Symbol	current_type		8520646						
ANR	8520870	Symbol	strerror		8520646						
ANR	8520871	Symbol	file -> type		8520646						
ANR	8520872	Symbol	file -> read_errno		8520646						
ANR	8520873	Symbol	file		8520646						
ANR	8520874	Symbol	what		8520646						
ANR	8520875	Symbol	file -> jmpbuf		8520646						
ANR	8520876	Symbol	* file -> global		8520646						
ANR	8520877	Symbol	file -> global		8520646						
ANR	8520878	Symbol	file -> global -> quiet		8520646						
ANR	8520879	Symbol	* * file		8520646						
ANR	8520880	Function	stop_invalid	1183:13:37753:37858							
ANR	8520881	FunctionDef	"stop_invalid (struct file * file , const char * what)"		8520880	0					
ANR	8520882	CompoundStatement		1185:0:37815:37858	8520880	0					
ANR	8520883	ExpressionStatement	"stop ( file , INVALID_ERROR_CODE , what )"	1186:3:37820:37856	8520880	0	True				
ANR	8520884	CallExpression	"stop ( file , INVALID_ERROR_CODE , what )"		8520880	0					
ANR	8520885	Callee	stop		8520880	0					
ANR	8520886	Identifier	stop		8520880	0					
ANR	8520887	ArgumentList	file		8520880	1					
ANR	8520888	Argument	file		8520880	0					
ANR	8520889	Identifier	file		8520880	0					
ANR	8520890	Argument	INVALID_ERROR_CODE		8520880	1					
ANR	8520891	Identifier	INVALID_ERROR_CODE		8520880	0					
ANR	8520892	Argument	what		8520880	2					
ANR	8520893	Identifier	what		8520880	0					
ANR	8520894	ReturnType	static void		8520880	1					
ANR	8520895	Identifier	stop_invalid		8520880	2					
ANR	8520896	ParameterList	"struct file * file , const char * what"		8520880	3					
ANR	8520897	Parameter	struct file * file	1184:13:37778:37794	8520880	0	True				
ANR	8520898	ParameterType	struct file *		8520880	0					
ANR	8520899	Identifier	file		8520880	1					
ANR	8520900	Parameter	const char * what	1184:32:37797:37812	8520880	1	True				
ANR	8520901	ParameterType	const char *		8520880	0					
ANR	8520902	Identifier	what		8520880	1					
ANR	8520903	CFGEntryNode	ENTRY		8520880		True				
ANR	8520904	CFGExitNode	EXIT		8520880		True				
ANR	8520905	Symbol	file		8520880						
ANR	8520906	Symbol	what		8520880						
ANR	8520907	Symbol	INVALID_ERROR_CODE		8520880						
ANR	8520908	Function	type_message	1189:0:37861:38221							
ANR	8520909	FunctionDef	"type_message (struct file * file , png_uint_32 type , const char * what)"		8520908	0					
ANR	8520910	CompoundStatement		1192:0:38010:38221	8520908	0					
ANR	8520911	IfStatement	if ( file -> global -> errors )		8520908	0					
ANR	8520912	Condition	file -> global -> errors	1193:7:38019:38038	8520908	0	True				
ANR	8520913	PtrMemberAccess	file -> global -> errors		8520908	0					
ANR	8520914	PtrMemberAccess	file -> global		8520908	0					
ANR	8520915	Identifier	file		8520908	0					
ANR	8520916	Identifier	global		8520908	1					
ANR	8520917	Identifier	errors		8520908	1					
ANR	8520918	CompoundStatement		3:3:33:33	8520908	1					
ANR	8520919	ExpressionStatement	"fputs ( file -> file_name , stderr )"	1195:6:38052:38082	8520908	0	True				
ANR	8520920	CallExpression	"fputs ( file -> file_name , stderr )"		8520908	0					
ANR	8520921	Callee	fputs		8520908	0					
ANR	8520922	Identifier	fputs		8520908	0					
ANR	8520923	ArgumentList	file -> file_name		8520908	1					
ANR	8520924	Argument	file -> file_name		8520908	0					
ANR	8520925	PtrMemberAccess	file -> file_name		8520908	0					
ANR	8520926	Identifier	file		8520908	0					
ANR	8520927	Identifier	file_name		8520908	1					
ANR	8520928	Argument	stderr		8520908	1					
ANR	8520929	Identifier	stderr		8520908	0					
ANR	8520930	ExpressionStatement	type_sep ( stderr )	1196:6:38090:38106	8520908	1	True				
ANR	8520931	CallExpression	type_sep ( stderr )		8520908	0					
ANR	8520932	Callee	type_sep		8520908	0					
ANR	8520933	Identifier	type_sep		8520908	0					
ANR	8520934	ArgumentList	stderr		8520908	1					
ANR	8520935	Argument	stderr		8520908	0					
ANR	8520936	Identifier	stderr		8520908	0					
ANR	8520937	ExpressionStatement	"type_name ( type , stderr )"	1197:6:38114:38137	8520908	2	True				
ANR	8520938	CallExpression	"type_name ( type , stderr )"		8520908	0					
ANR	8520939	Callee	type_name		8520908	0					
ANR	8520940	Identifier	type_name		8520908	0					
ANR	8520941	ArgumentList	type		8520908	1					
ANR	8520942	Argument	type		8520908	0					
ANR	8520943	Identifier	type		8520908	0					
ANR	8520944	Argument	stderr		8520908	1					
ANR	8520945	Identifier	stderr		8520908	0					
ANR	8520946	ExpressionStatement	type_sep ( stderr )	1198:6:38145:38161	8520908	3	True				
ANR	8520947	CallExpression	type_sep ( stderr )		8520908	0					
ANR	8520948	Callee	type_sep		8520908	0					
ANR	8520949	Identifier	type_sep		8520908	0					
ANR	8520950	ArgumentList	stderr		8520908	1					
ANR	8520951	Argument	stderr		8520908	0					
ANR	8520952	Identifier	stderr		8520908	0					
ANR	8520953	ExpressionStatement	"fputs ( what , stderr )"	1199:6:38169:38188	8520908	4	True				
ANR	8520954	CallExpression	"fputs ( what , stderr )"		8520908	0					
ANR	8520955	Callee	fputs		8520908	0					
ANR	8520956	Identifier	fputs		8520908	0					
ANR	8520957	ArgumentList	what		8520908	1					
ANR	8520958	Argument	what		8520908	0					
ANR	8520959	Identifier	what		8520908	0					
ANR	8520960	Argument	stderr		8520908	1					
ANR	8520961	Identifier	stderr		8520908	0					
ANR	8520962	ExpressionStatement	"putc ( '\\n' , stderr )"	1200:6:38196:38214	8520908	5	True				
ANR	8520963	CallExpression	"putc ( '\\n' , stderr )"		8520908	0					
ANR	8520964	Callee	putc		8520908	0					
ANR	8520965	Identifier	putc		8520908	0					
ANR	8520966	ArgumentList	'\\n'		8520908	1					
ANR	8520967	Argument	'\\n'		8520908	0					
ANR	8520968	PrimaryExpression	'\\n'		8520908	0					
ANR	8520969	Argument	stderr		8520908	1					
ANR	8520970	Identifier	stderr		8520908	0					
ANR	8520971	ReturnType	static void		8520908	1					
ANR	8520972	Identifier	type_message		8520908	2					
ANR	8520973	ParameterList	"struct file * file , png_uint_32 type , const char * what"		8520908	3					
ANR	8520974	Parameter	struct file * file	1190:13:37886:37902	8520908	0	True				
ANR	8520975	ParameterType	struct file *		8520908	0					
ANR	8520976	Identifier	file		8520908	1					
ANR	8520977	Parameter	png_uint_32 type	1190:32:37905:37920	8520908	1	True				
ANR	8520978	ParameterType	png_uint_32		8520908	0					
ANR	8520979	Identifier	type		8520908	1					
ANR	8520980	Parameter	const char * what	1190:50:37923:37938	8520908	2	True				
ANR	8520981	ParameterType	const char *		8520908	0					
ANR	8520982	Identifier	what		8520908	1					
ANR	8520983	CFGEntryNode	ENTRY		8520908		True				
ANR	8520984	CFGExitNode	EXIT		8520908		True				
ANR	8520985	Symbol	file		8520908						
ANR	8520986	Symbol	what		8520908						
ANR	8520987	Symbol	* file -> global		8520908						
ANR	8520988	Symbol	file -> global		8520908						
ANR	8520989	Symbol	file -> global -> errors		8520908						
ANR	8520990	Symbol	file -> file_name		8520908						
ANR	8520991	Symbol	type		8520908						
ANR	8520992	Symbol	* file		8520908						
ANR	8520993	Symbol	stderr		8520908						
ANR	8520994	Symbol	* * file		8520908						
ANR	8520995	Function	file_getpos	1207:0:38358:38581							
ANR	8520996	FunctionDef	"file_getpos (struct file * file , fpos_t * pos)"		8520995	0					
ANR	8520997	CompoundStatement		1209:0:38414:38581	8520995	0					
ANR	8520998	IfStatement	"if ( fgetpos ( file -> file , pos ) )"		8520995	0					
ANR	8520999	Condition	"fgetpos ( file -> file , pos )"	1210:7:38423:38446	8520995	0	True				
ANR	8521000	CallExpression	"fgetpos ( file -> file , pos )"		8520995	0					
ANR	8521001	Callee	fgetpos		8520995	0					
ANR	8521002	Identifier	fgetpos		8520995	0					
ANR	8521003	ArgumentList	file -> file		8520995	1					
ANR	8521004	Argument	file -> file		8520995	0					
ANR	8521005	PtrMemberAccess	file -> file		8520995	0					
ANR	8521006	Identifier	file		8520995	0					
ANR	8521007	Identifier	file		8520995	1					
ANR	8521008	Argument	pos		8520995	1					
ANR	8521009	Identifier	pos		8520995	0					
ANR	8521010	CompoundStatement		3:3:37:37	8520995	1					
ANR	8521011	ExpressionStatement	perror ( file -> file_name )	1213:6:38505:38528	8520995	0	True				
ANR	8521012	CallExpression	perror ( file -> file_name )		8520995	0					
ANR	8521013	Callee	perror		8520995	0					
ANR	8521014	Identifier	perror		8520995	0					
ANR	8521015	ArgumentList	file -> file_name		8520995	1					
ANR	8521016	Argument	file -> file_name		8520995	0					
ANR	8521017	PtrMemberAccess	file -> file_name		8520995	0					
ANR	8521018	Identifier	file		8520995	0					
ANR	8521019	Identifier	file_name		8520995	1					
ANR	8521020	ExpressionStatement	"stop ( file , READ_ERROR_CODE , ""fgetpos"" )"	1214:6:38536:38574	8520995	1	True				
ANR	8521021	CallExpression	"stop ( file , READ_ERROR_CODE , ""fgetpos"" )"		8520995	0					
ANR	8521022	Callee	stop		8520995	0					
ANR	8521023	Identifier	stop		8520995	0					
ANR	8521024	ArgumentList	file		8520995	1					
ANR	8521025	Argument	file		8520995	0					
ANR	8521026	Identifier	file		8520995	0					
ANR	8521027	Argument	READ_ERROR_CODE		8520995	1					
ANR	8521028	Identifier	READ_ERROR_CODE		8520995	0					
ANR	8521029	Argument	"""fgetpos"""		8520995	2					
ANR	8521030	PrimaryExpression	"""fgetpos"""		8520995	0					
ANR	8521031	ReturnType	static void		8520995	1					
ANR	8521032	Identifier	file_getpos		8520995	2					
ANR	8521033	ParameterList	"struct file * file , fpos_t * pos"		8520995	3					
ANR	8521034	Parameter	struct file * file	1208:12:38382:38398	8520995	0	True				
ANR	8521035	ParameterType	struct file *		8520995	0					
ANR	8521036	Identifier	file		8520995	1					
ANR	8521037	Parameter	fpos_t * pos	1208:31:38401:38411	8520995	1	True				
ANR	8521038	ParameterType	fpos_t *		8520995	0					
ANR	8521039	Identifier	pos		8520995	1					
ANR	8521040	CFGEntryNode	ENTRY		8520995		True				
ANR	8521041	CFGExitNode	EXIT		8520995		True				
ANR	8521042	Symbol	fgetpos		8520995						
ANR	8521043	Symbol	READ_ERROR_CODE		8520995						
ANR	8521044	Symbol	file		8520995						
ANR	8521045	Symbol	pos		8520995						
ANR	8521046	Symbol	file -> file		8520995						
ANR	8521047	Symbol	file -> file_name		8520995						
ANR	8521048	Symbol	* file		8520995						
ANR	8521049	Function	file_setpos	1218:0:38584:38768							
ANR	8521050	FunctionDef	"file_setpos (struct file * file , const fpos_t * pos)"		8521049	0					
ANR	8521051	CompoundStatement		1220:0:38646:38768	8521049	0					
ANR	8521052	IfStatement	"if ( fsetpos ( file -> file , pos ) )"		8521049	0					
ANR	8521053	Condition	"fsetpos ( file -> file , pos )"	1221:7:38655:38678	8521049	0	True				
ANR	8521054	CallExpression	"fsetpos ( file -> file , pos )"		8521049	0					
ANR	8521055	Callee	fsetpos		8521049	0					
ANR	8521056	Identifier	fsetpos		8521049	0					
ANR	8521057	ArgumentList	file -> file		8521049	1					
ANR	8521058	Argument	file -> file		8521049	0					
ANR	8521059	PtrMemberAccess	file -> file		8521049	0					
ANR	8521060	Identifier	file		8521049	0					
ANR	8521061	Identifier	file		8521049	1					
ANR	8521062	Argument	pos		8521049	1					
ANR	8521063	Identifier	pos		8521049	0					
ANR	8521064	CompoundStatement		3:3:37:37	8521049	1					
ANR	8521065	ExpressionStatement	perror ( file -> file_name )	1223:6:38692:38715	8521049	0	True				
ANR	8521066	CallExpression	perror ( file -> file_name )		8521049	0					
ANR	8521067	Callee	perror		8521049	0					
ANR	8521068	Identifier	perror		8521049	0					
ANR	8521069	ArgumentList	file -> file_name		8521049	1					
ANR	8521070	Argument	file -> file_name		8521049	0					
ANR	8521071	PtrMemberAccess	file -> file_name		8521049	0					
ANR	8521072	Identifier	file		8521049	0					
ANR	8521073	Identifier	file_name		8521049	1					
ANR	8521074	ExpressionStatement	"stop ( file , READ_ERROR_CODE , ""fsetpos"" )"	1224:6:38723:38761	8521049	1	True				
ANR	8521075	CallExpression	"stop ( file , READ_ERROR_CODE , ""fsetpos"" )"		8521049	0					
ANR	8521076	Callee	stop		8521049	0					
ANR	8521077	Identifier	stop		8521049	0					
ANR	8521078	ArgumentList	file		8521049	1					
ANR	8521079	Argument	file		8521049	0					
ANR	8521080	Identifier	file		8521049	0					
ANR	8521081	Argument	READ_ERROR_CODE		8521049	1					
ANR	8521082	Identifier	READ_ERROR_CODE		8521049	0					
ANR	8521083	Argument	"""fsetpos"""		8521049	2					
ANR	8521084	PrimaryExpression	"""fsetpos"""		8521049	0					
ANR	8521085	ReturnType	static void		8521049	1					
ANR	8521086	Identifier	file_setpos		8521049	2					
ANR	8521087	ParameterList	"struct file * file , const fpos_t * pos"		8521049	3					
ANR	8521088	Parameter	struct file * file	1219:12:38608:38624	8521049	0	True				
ANR	8521089	ParameterType	struct file *		8521049	0					
ANR	8521090	Identifier	file		8521049	1					
ANR	8521091	Parameter	const fpos_t * pos	1219:31:38627:38643	8521049	1	True				
ANR	8521092	ParameterType	const fpos_t *		8521049	0					
ANR	8521093	Identifier	pos		8521049	1					
ANR	8521094	CFGEntryNode	ENTRY		8521049		True				
ANR	8521095	CFGExitNode	EXIT		8521049		True				
ANR	8521096	Symbol	READ_ERROR_CODE		8521049						
ANR	8521097	Symbol	file		8521049						
ANR	8521098	Symbol	pos		8521049						
ANR	8521099	Symbol	fsetpos		8521049						
ANR	8521100	Symbol	file -> file		8521049						
ANR	8521101	Symbol	file -> file_name		8521049						
ANR	8521102	Symbol	* file		8521049						
ANR	8521103	Function	getpos	1228:0:38771:39048							
ANR	8521104	FunctionDef	getpos (struct file * file)		8521103	0					
ANR	8521105	CompoundStatement		1234:0:39007:39048	8521103	0					
ANR	8521106	ExpressionStatement	"file_getpos ( file , & file -> data_pos )"	1235:3:39012:39046	8521103	0	True				
ANR	8521107	CallExpression	"file_getpos ( file , & file -> data_pos )"		8521103	0					
ANR	8521108	Callee	file_getpos		8521103	0					
ANR	8521109	Identifier	file_getpos		8521103	0					
ANR	8521110	ArgumentList	file		8521103	1					
ANR	8521111	Argument	file		8521103	0					
ANR	8521112	Identifier	file		8521103	0					
ANR	8521113	Argument	& file -> data_pos		8521103	1					
ANR	8521114	UnaryOperationExpression	& file -> data_pos		8521103	0					
ANR	8521115	UnaryOperator	&		8521103	0					
ANR	8521116	PtrMemberAccess	file -> data_pos		8521103	1					
ANR	8521117	Identifier	file		8521103	0					
ANR	8521118	Identifier	data_pos		8521103	1					
ANR	8521119	ReturnType	static void		8521103	1					
ANR	8521120	Identifier	getpos		8521103	2					
ANR	8521121	ParameterList	struct file * file		8521103	3					
ANR	8521122	Parameter	struct file * file	1229:7:38790:38806	8521103	0	True				
ANR	8521123	ParameterType	struct file *		8521103	0					
ANR	8521124	Identifier	file		8521103	1					
ANR	8521125	CFGEntryNode	ENTRY		8521103		True				
ANR	8521126	CFGExitNode	EXIT		8521103		True				
ANR	8521127	Symbol	file		8521103						
ANR	8521128	Symbol	& file -> data_pos		8521103						
ANR	8521129	Function	read_byte	1243:0:39234:40440							
ANR	8521130	FunctionDef	read_byte (struct file * file)		8521129	0					
ANR	8521131	CompoundStatement		1245:0:39274:40440	8521129	0					
ANR	8521132	IdentifierDeclStatement	int ch = getc ( file -> file ) ;	1246:3:39279:39304	8521129	0	True				
ANR	8521133	IdentifierDecl	ch = getc ( file -> file )		8521129	0					
ANR	8521134	IdentifierDeclType	int		8521129	0					
ANR	8521135	Identifier	ch		8521129	1					
ANR	8521136	AssignmentExpression	ch = getc ( file -> file )		8521129	2		=			
ANR	8521137	Identifier	ch		8521129	0					
ANR	8521138	CallExpression	getc ( file -> file )		8521129	1					
ANR	8521139	Callee	getc		8521129	0					
ANR	8521140	Identifier	getc		8521129	0					
ANR	8521141	ArgumentList	file -> file		8521129	1					
ANR	8521142	Argument	file -> file		8521129	0					
ANR	8521143	PtrMemberAccess	file -> file		8521129	0					
ANR	8521144	Identifier	file		8521129	0					
ANR	8521145	Identifier	file		8521129	1					
ANR	8521146	IfStatement	if ( ch >= 0 && ch <= 255 )		8521129	1					
ANR	8521147	Condition	ch >= 0 && ch <= 255	1248:7:39314:39333	8521129	0	True				
ANR	8521148	AndExpression	ch >= 0 && ch <= 255		8521129	0		&&			
ANR	8521149	RelationalExpression	ch >= 0		8521129	0		>=			
ANR	8521150	Identifier	ch		8521129	0					
ANR	8521151	PrimaryExpression	0		8521129	1					
ANR	8521152	RelationalExpression	ch <= 255		8521129	1		<=			
ANR	8521153	Identifier	ch		8521129	0					
ANR	8521154	PrimaryExpression	255		8521129	1					
ANR	8521155	CompoundStatement		5:3:64:64	8521129	1					
ANR	8521156	ExpressionStatement	++ ( file -> read_count )	1250:6:39347:39367	8521129	0	True				
ANR	8521157	UnaryExpression	++ ( file -> read_count )		8521129	0					
ANR	8521158	IncDec	++		8521129	0					
ANR	8521159	PtrMemberAccess	file -> read_count		8521129	1					
ANR	8521160	Identifier	file		8521129	0					
ANR	8521161	Identifier	read_count		8521129	1					
ANR	8521162	ReturnStatement	return ch ;	1251:6:39375:39384	8521129	1	True				
ANR	8521163	Identifier	ch		8521129	0					
ANR	8521164	ElseStatement	else		8521129	0					
ANR	8521165	IfStatement	if ( ch != EOF )		8521129	0					
ANR	8521166	Condition	ch != EOF	1254:12:39404:39412	8521129	0	True				
ANR	8521167	EqualityExpression	ch != EOF		8521129	0		!=			
ANR	8521168	Identifier	ch		8521129	0					
ANR	8521169	Identifier	EOF		8521129	1					
ANR	8521170	CompoundStatement		11:3:143:143	8521129	1					
ANR	8521171	ExpressionStatement	file -> status_code |= INTERNAL_ERROR	1256:6:39426:39461	8521129	0	True				
ANR	8521172	AssignmentExpression	file -> status_code |= INTERNAL_ERROR		8521129	0		|=			
ANR	8521173	PtrMemberAccess	file -> status_code		8521129	0					
ANR	8521174	Identifier	file		8521129	0					
ANR	8521175	Identifier	status_code		8521129	1					
ANR	8521176	Identifier	INTERNAL_ERROR		8521129	1					
ANR	8521177	ExpressionStatement	file -> read_errno = ERANGE	1257:6:39469:39494	8521129	1	True				
ANR	8521178	AssignmentExpression	file -> read_errno = ERANGE		8521129	0		=			
ANR	8521179	PtrMemberAccess	file -> read_errno		8521129	0					
ANR	8521180	Identifier	file		8521129	0					
ANR	8521181	Identifier	read_errno		8521129	1					
ANR	8521182	Identifier	ERANGE		8521129	1					
ANR	8521183	ExpressionStatement	"emit_error ( file , UNEXPECTED_ERROR_CODE , ""file read"" )"	1260:6:39604:39656	8521129	2	True				
ANR	8521184	CallExpression	"emit_error ( file , UNEXPECTED_ERROR_CODE , ""file read"" )"		8521129	0					
ANR	8521185	Callee	emit_error		8521129	0					
ANR	8521186	Identifier	emit_error		8521129	0					
ANR	8521187	ArgumentList	file		8521129	1					
ANR	8521188	Argument	file		8521129	0					
ANR	8521189	Identifier	file		8521129	0					
ANR	8521190	Argument	UNEXPECTED_ERROR_CODE		8521129	1					
ANR	8521191	Identifier	UNEXPECTED_ERROR_CODE		8521129	0					
ANR	8521192	Argument	"""file read"""		8521129	2					
ANR	8521193	PrimaryExpression	"""file read"""		8521129	0					
ANR	8521194	ElseStatement	else		8521129	0					
ANR	8521195	IfStatement	if ( errno == EINTR )		8521129	0					
ANR	8521196	Condition	errno == EINTR	1264:15:39694:39707	8521129	0	True				
ANR	8521197	EqualityExpression	errno == EINTR		8521129	0		==			
ANR	8521198	Identifier	errno		8521129	0					
ANR	8521199	Identifier	EINTR		8521129	1					
ANR	8521200	CompoundStatement		21:6:470:470	8521129	1					
ANR	8521201	ExpressionStatement	errno = 0	1266:9:39756:39765	8521129	0	True				
ANR	8521202	AssignmentExpression	errno = 0		8521129	0		=			
ANR	8521203	Identifier	errno		8521129	0					
ANR	8521204	PrimaryExpression	0		8521129	1					
ANR	8521205	ReturnStatement	return read_byte ( file ) ;	1267:9:39776:39798	8521129	1	True				
ANR	8521206	CallExpression	read_byte ( file )		8521129	0					
ANR	8521207	Callee	read_byte		8521129	0					
ANR	8521208	Identifier	read_byte		8521129	0					
ANR	8521209	ArgumentList	file		8521129	1					
ANR	8521210	Argument	file		8521129	0					
ANR	8521211	Identifier	file		8521129	0					
ANR	8521212	ElseStatement	else		8521129	0					
ANR	8521213	CompoundStatement		28:3:554:554	8521129	0					
ANR	8521214	IfStatement	if ( ferror ( file -> file ) )		8521129	0					
ANR	8521215	Condition	ferror ( file -> file )	1276:10:39951:39968	8521129	0	True				
ANR	8521216	CallExpression	ferror ( file -> file )		8521129	0					
ANR	8521217	Callee	ferror		8521129	0					
ANR	8521218	Identifier	ferror		8521129	0					
ANR	8521219	ArgumentList	file -> file		8521129	1					
ANR	8521220	Argument	file -> file		8521129	0					
ANR	8521221	PtrMemberAccess	file -> file		8521129	0					
ANR	8521222	Identifier	file		8521129	0					
ANR	8521223	Identifier	file		8521129	1					
ANR	8521224	ExpressionStatement	file -> read_errno = errno	1277:9:39980:40004	8521129	1	True				
ANR	8521225	AssignmentExpression	file -> read_errno = errno		8521129	0		=			
ANR	8521226	PtrMemberAccess	file -> read_errno		8521129	0					
ANR	8521227	Identifier	file		8521129	0					
ANR	8521228	Identifier	read_errno		8521129	1					
ANR	8521229	Identifier	errno		8521129	1					
ANR	8521230	ElseStatement	else		8521129	0					
ANR	8521231	IfStatement	if ( feof ( file -> file ) )		8521129	0					
ANR	8521232	Condition	feof ( file -> file )	1279:15:40022:40037	8521129	0	True				
ANR	8521233	CallExpression	feof ( file -> file )		8521129	0					
ANR	8521234	Callee	feof		8521129	0					
ANR	8521235	Identifier	feof		8521129	0					
ANR	8521236	ArgumentList	file -> file		8521129	1					
ANR	8521237	Argument	file -> file		8521129	0					
ANR	8521238	PtrMemberAccess	file -> file		8521129	0					
ANR	8521239	Identifier	file		8521129	0					
ANR	8521240	Identifier	file		8521129	1					
ANR	8521241	ExpressionStatement	file -> read_errno = 0	1280:9:40049:40069	8521129	1	True				
ANR	8521242	AssignmentExpression	file -> read_errno = 0		8521129	0		=			
ANR	8521243	PtrMemberAccess	file -> read_errno		8521129	0					
ANR	8521244	Identifier	file		8521129	0					
ANR	8521245	Identifier	read_errno		8521129	1					
ANR	8521246	PrimaryExpression	0		8521129	1					
ANR	8521247	ElseStatement	else		8521129	0					
ANR	8521248	ExpressionStatement	file -> read_errno = EDOM	1283:9:40144:40167	8521129	0	True				
ANR	8521249	AssignmentExpression	file -> read_errno = EDOM		8521129	0		=			
ANR	8521250	PtrMemberAccess	file -> read_errno		8521129	0					
ANR	8521251	Identifier	file		8521129	0					
ANR	8521252	Identifier	read_errno		8521129	1					
ANR	8521253	Identifier	EDOM		8521129	1					
ANR	8521254	Statement	ifdef	1263:3:39667:39671	8521129	2	True				
ANR	8521255	Statement	EINTR	1263:9:39673:39677	8521129	3	True				
ANR	8521256	Statement	endif	1269:3:39811:39815	8521129	4	True				
ANR	8521257	ExpressionStatement	file -> status_code |= TRUNCATED	1290:3:40393:40423	8521129	5	True				
ANR	8521258	AssignmentExpression	file -> status_code |= TRUNCATED		8521129	0		|=			
ANR	8521259	PtrMemberAccess	file -> status_code		8521129	0					
ANR	8521260	Identifier	file		8521129	0					
ANR	8521261	Identifier	status_code		8521129	1					
ANR	8521262	Identifier	TRUNCATED		8521129	1					
ANR	8521263	ReturnStatement	return EOF ;	1291:3:40428:40438	8521129	6	True				
ANR	8521264	Identifier	EOF		8521129	0					
ANR	8521265	ReturnType	static int		8521129	1					
ANR	8521266	Identifier	read_byte		8521129	2					
ANR	8521267	ParameterList	struct file * file		8521129	3					
ANR	8521268	Parameter	struct file * file	1244:10:39255:39271	8521129	0	True				
ANR	8521269	ParameterType	struct file *		8521129	0					
ANR	8521270	Identifier	file		8521129	1					
ANR	8521271	CFGEntryNode	ENTRY		8521129		True				
ANR	8521272	CFGExitNode	EXIT		8521129		True				
ANR	8521273	Symbol	errno		8521129						
ANR	8521274	Symbol	ch		8521129						
ANR	8521275	Symbol	EINTR		8521129						
ANR	8521276	Symbol	INTERNAL_ERROR		8521129						
ANR	8521277	Symbol	file -> file		8521129						
ANR	8521278	Symbol	read_byte		8521129						
ANR	8521279	Symbol	* file		8521129						
ANR	8521280	Symbol	file -> status_code		8521129						
ANR	8521281	Symbol	ferror		8521129						
ANR	8521282	Symbol	TRUNCATED		8521129						
ANR	8521283	Symbol	file -> read_errno		8521129						
ANR	8521284	Symbol	file		8521129						
ANR	8521285	Symbol	ERANGE		8521129						
ANR	8521286	Symbol	feof		8521129						
ANR	8521287	Symbol	UNEXPECTED_ERROR_CODE		8521129						
ANR	8521288	Symbol	getc		8521129						
ANR	8521289	Symbol	EOF		8521129						
ANR	8521290	Symbol	EDOM		8521129						
ANR	8521291	Function	reread_byte	1294:0:40443:40802							
ANR	8521292	FunctionDef	reread_byte (struct file * file)		8521291	0					
ANR	8521293	CompoundStatement		1299:0:40614:40802	8521291	0					
ANR	8521294	IdentifierDeclStatement	int ch = getc ( file -> file ) ;	1300:3:40619:40644	8521291	0	True				
ANR	8521295	IdentifierDecl	ch = getc ( file -> file )		8521291	0					
ANR	8521296	IdentifierDeclType	int		8521291	0					
ANR	8521297	Identifier	ch		8521291	1					
ANR	8521298	AssignmentExpression	ch = getc ( file -> file )		8521291	2		=			
ANR	8521299	Identifier	ch		8521291	0					
ANR	8521300	CallExpression	getc ( file -> file )		8521291	1					
ANR	8521301	Callee	getc		8521291	0					
ANR	8521302	Identifier	getc		8521291	0					
ANR	8521303	ArgumentList	file -> file		8521291	1					
ANR	8521304	Argument	file -> file		8521291	0					
ANR	8521305	PtrMemberAccess	file -> file		8521291	0					
ANR	8521306	Identifier	file		8521291	0					
ANR	8521307	Identifier	file		8521291	1					
ANR	8521308	IfStatement	if ( errno != 0 )		8521291	1					
ANR	8521309	Condition	errno != 0	1302:7:40654:40663	8521291	0	True				
ANR	8521310	EqualityExpression	errno != 0		8521291	0		!=			
ANR	8521311	Identifier	errno		8521291	0					
ANR	8521312	PrimaryExpression	0		8521291	1					
ANR	8521313	ExpressionStatement	file -> read_errno = errno	1303:6:40672:40696	8521291	1	True				
ANR	8521314	AssignmentExpression	file -> read_errno = errno		8521291	0		=			
ANR	8521315	PtrMemberAccess	file -> read_errno		8521291	0					
ANR	8521316	Identifier	file		8521291	0					
ANR	8521317	Identifier	read_errno		8521291	1					
ANR	8521318	Identifier	errno		8521291	1					
ANR	8521319	IfStatement	if ( ch < 0 || ch > 255 )		8521291	2					
ANR	8521320	Condition	ch < 0 || ch > 255	1305:7:40706:40723	8521291	0	True				
ANR	8521321	OrExpression	ch < 0 || ch > 255		8521291	0		||			
ANR	8521322	RelationalExpression	ch < 0		8521291	0		<			
ANR	8521323	Identifier	ch		8521291	0					
ANR	8521324	PrimaryExpression	0		8521291	1					
ANR	8521325	RelationalExpression	ch > 255		8521291	1		>			
ANR	8521326	Identifier	ch		8521291	0					
ANR	8521327	PrimaryExpression	255		8521291	1					
ANR	8521328	ExpressionStatement	"stop ( file , UNEXPECTED_ERROR_CODE , ""reread"" )"	1306:6:40732:40775	8521291	1	True				
ANR	8521329	CallExpression	"stop ( file , UNEXPECTED_ERROR_CODE , ""reread"" )"		8521291	0					
ANR	8521330	Callee	stop		8521291	0					
ANR	8521331	Identifier	stop		8521291	0					
ANR	8521332	ArgumentList	file		8521291	1					
ANR	8521333	Argument	file		8521291	0					
ANR	8521334	Identifier	file		8521291	0					
ANR	8521335	Argument	UNEXPECTED_ERROR_CODE		8521291	1					
ANR	8521336	Identifier	UNEXPECTED_ERROR_CODE		8521291	0					
ANR	8521337	Argument	"""reread"""		8521291	2					
ANR	8521338	PrimaryExpression	"""reread"""		8521291	0					
ANR	8521339	ReturnStatement	return ( png_byte ) ch ;	1308:3:40781:40800	8521291	3	True				
ANR	8521340	CastExpression	( png_byte ) ch		8521291	0					
ANR	8521341	CastTarget	png_byte		8521291	0					
ANR	8521342	Identifier	ch		8521291	1					
ANR	8521343	ReturnType	static png_byte		8521291	1					
ANR	8521344	Identifier	reread_byte		8521291	2					
ANR	8521345	ParameterList	struct file * file		8521291	3					
ANR	8521346	Parameter	struct file * file	1295:12:40471:40487	8521291	0	True				
ANR	8521347	ParameterType	struct file *		8521291	0					
ANR	8521348	Identifier	file		8521291	1					
ANR	8521349	CFGEntryNode	ENTRY		8521291		True				
ANR	8521350	CFGExitNode	EXIT		8521291		True				
ANR	8521351	Symbol	errno		8521291						
ANR	8521352	Symbol	file -> read_errno		8521291						
ANR	8521353	Symbol	file		8521291						
ANR	8521354	Symbol	ch		8521291						
ANR	8521355	Symbol	file -> file		8521291						
ANR	8521356	Symbol	* file		8521291						
ANR	8521357	Symbol	UNEXPECTED_ERROR_CODE		8521291						
ANR	8521358	Symbol	getc		8521291						
ANR	8521359	Function	reread_4	1311:0:40805:41032							
ANR	8521360	FunctionDef	reread_4 (struct file * file)		8521359	0					
ANR	8521361	CompoundStatement		1314:0:40899:41032	8521359	0					
ANR	8521362	IdentifierDeclStatement	png_uint_32 result = 0 ;	1315:3:40904:40926	8521359	0	True				
ANR	8521363	IdentifierDecl	result = 0		8521359	0					
ANR	8521364	IdentifierDeclType	png_uint_32		8521359	0					
ANR	8521365	Identifier	result		8521359	1					
ANR	8521366	AssignmentExpression	result = 0		8521359	2		=			
ANR	8521367	Identifier	result		8521359	0					
ANR	8521368	PrimaryExpression	0		8521359	1					
ANR	8521369	IdentifierDeclStatement	int i = 0 ;	1316:3:40931:40940	8521359	1	True				
ANR	8521370	IdentifierDecl	i = 0		8521359	0					
ANR	8521371	IdentifierDeclType	int		8521359	0					
ANR	8521372	Identifier	i		8521359	1					
ANR	8521373	AssignmentExpression	i = 0		8521359	2		=			
ANR	8521374	Identifier	i		8521359	0					
ANR	8521375	PrimaryExpression	0		8521359	1					
ANR	8521376	WhileStatement	while ( ++ i <= 4 )		8521359	2					
ANR	8521377	Condition	++ i <= 4	1318:10:40953:40960	8521359	0	True				
ANR	8521378	RelationalExpression	++ i <= 4		8521359	0		<=			
ANR	8521379	UnaryExpression	++ i		8521359	0					
ANR	8521380	IncDec	++		8521359	0					
ANR	8521381	Identifier	i		8521359	1					
ANR	8521382	PrimaryExpression	4		8521359	1					
ANR	8521383	ExpressionStatement	result = ( result << 8 ) + reread_byte ( file )	1319:6:40969:41011	8521359	1	True				
ANR	8521384	AssignmentExpression	result = ( result << 8 ) + reread_byte ( file )		8521359	0		=			
ANR	8521385	Identifier	result		8521359	0					
ANR	8521386	AdditiveExpression	( result << 8 ) + reread_byte ( file )		8521359	1		+			
ANR	8521387	ShiftExpression	result << 8		8521359	0		<<			
ANR	8521388	Identifier	result		8521359	0					
ANR	8521389	PrimaryExpression	8		8521359	1					
ANR	8521390	CallExpression	reread_byte ( file )		8521359	1					
ANR	8521391	Callee	reread_byte		8521359	0					
ANR	8521392	Identifier	reread_byte		8521359	0					
ANR	8521393	ArgumentList	file		8521359	1					
ANR	8521394	Argument	file		8521359	0					
ANR	8521395	Identifier	file		8521359	0					
ANR	8521396	ReturnStatement	return result ;	1321:3:41017:41030	8521359	3	True				
ANR	8521397	Identifier	result		8521359	0					
ANR	8521398	ReturnType	static png_uint_32		8521359	1					
ANR	8521399	Identifier	reread_4		8521359	2					
ANR	8521400	ParameterList	struct file * file		8521359	3					
ANR	8521401	Parameter	struct file * file	1312:9:40833:40849	8521359	0	True				
ANR	8521402	ParameterType	struct file *		8521359	0					
ANR	8521403	Identifier	file		8521359	1					
ANR	8521404	CFGEntryNode	ENTRY		8521359		True				
ANR	8521405	CFGExitNode	EXIT		8521359		True				
ANR	8521406	Symbol	result		8521359						
ANR	8521407	Symbol	file		8521359						
ANR	8521408	Symbol	reread_byte		8521359						
ANR	8521409	Symbol	i		8521359						
ANR	8521410	Function	skip_12	1324:0:41035:41430							
ANR	8521411	FunctionDef	skip_12 (struct file * file)		8521410	0					
ANR	8521412	CompoundStatement		1329:0:41200:41430	8521410	0					
ANR	8521413	IfStatement	"if ( fseek ( file -> file , 12 , SEEK_CUR ) != 0 )"		8521410	0					
ANR	8521414	Condition	"fseek ( file -> file , 12 , SEEK_CUR ) != 0"	1331:7:41273:41308	8521410	0	True				
ANR	8521415	EqualityExpression	"fseek ( file -> file , 12 , SEEK_CUR ) != 0"		8521410	0		!=			
ANR	8521416	CallExpression	"fseek ( file -> file , 12 , SEEK_CUR )"		8521410	0					
ANR	8521417	Callee	fseek		8521410	0					
ANR	8521418	Identifier	fseek		8521410	0					
ANR	8521419	ArgumentList	file -> file		8521410	1					
ANR	8521420	Argument	file -> file		8521410	0					
ANR	8521421	PtrMemberAccess	file -> file		8521410	0					
ANR	8521422	Identifier	file		8521410	0					
ANR	8521423	Identifier	file		8521410	1					
ANR	8521424	Argument	12		8521410	1					
ANR	8521425	PrimaryExpression	12		8521410	0					
ANR	8521426	Argument	SEEK_CUR		8521410	2					
ANR	8521427	Identifier	SEEK_CUR		8521410	0					
ANR	8521428	PrimaryExpression	0		8521410	1					
ANR	8521429	CompoundStatement		4:3:113:113	8521410	1					
ANR	8521430	IfStatement	if ( errno != 0 )		8521410	0					
ANR	8521431	Condition	errno != 0	1333:10:41326:41335	8521410	0	True				
ANR	8521432	EqualityExpression	errno != 0		8521410	0		!=			
ANR	8521433	Identifier	errno		8521410	0					
ANR	8521434	PrimaryExpression	0		8521410	1					
ANR	8521435	ExpressionStatement	file -> read_errno = errno	1334:9:41347:41371	8521410	1	True				
ANR	8521436	AssignmentExpression	file -> read_errno = errno		8521410	0		=			
ANR	8521437	PtrMemberAccess	file -> read_errno		8521410	0					
ANR	8521438	Identifier	file		8521410	0					
ANR	8521439	Identifier	read_errno		8521410	1					
ANR	8521440	Identifier	errno		8521410	1					
ANR	8521441	ExpressionStatement	"stop ( file , UNEXPECTED_ERROR_CODE , ""reskip"" )"	1336:6:41380:41423	8521410	1	True				
ANR	8521442	CallExpression	"stop ( file , UNEXPECTED_ERROR_CODE , ""reskip"" )"		8521410	0					
ANR	8521443	Callee	stop		8521410	0					
ANR	8521444	Identifier	stop		8521410	0					
ANR	8521445	ArgumentList	file		8521410	1					
ANR	8521446	Argument	file		8521410	0					
ANR	8521447	Identifier	file		8521410	0					
ANR	8521448	Argument	UNEXPECTED_ERROR_CODE		8521410	1					
ANR	8521449	Identifier	UNEXPECTED_ERROR_CODE		8521410	0					
ANR	8521450	Argument	"""reskip"""		8521410	2					
ANR	8521451	PrimaryExpression	"""reskip"""		8521410	0					
ANR	8521452	ReturnType	static void		8521410	1					
ANR	8521453	Identifier	skip_12		8521410	2					
ANR	8521454	ParameterList	struct file * file		8521410	3					
ANR	8521455	Parameter	struct file * file	1325:8:41055:41071	8521410	0	True				
ANR	8521456	ParameterType	struct file *		8521410	0					
ANR	8521457	Identifier	file		8521410	1					
ANR	8521458	CFGEntryNode	ENTRY		8521410		True				
ANR	8521459	CFGExitNode	EXIT		8521410		True				
ANR	8521460	Symbol	errno		8521410						
ANR	8521461	Symbol	file -> read_errno		8521410						
ANR	8521462	Symbol	file		8521410						
ANR	8521463	Symbol	SEEK_CUR		8521410						
ANR	8521464	Symbol	file -> file		8521410						
ANR	8521465	Symbol	* file		8521410						
ANR	8521466	Symbol	UNEXPECTED_ERROR_CODE		8521410						
ANR	8521467	Symbol	fseek		8521410						
ANR	8521468	Function	write_byte	1340:0:41433:41946							
ANR	8521469	FunctionDef	"write_byte (struct file * file , int b)"		8521468	0					
ANR	8521470	CompoundStatement		1346:0:41698:41946	8521468	0					
ANR	8521471	IfStatement	if ( file -> out != NULL )		8521468	0					
ANR	8521472	Condition	file -> out != NULL	1347:7:41707:41723	8521468	0	True				
ANR	8521473	EqualityExpression	file -> out != NULL		8521468	0		!=			
ANR	8521474	PtrMemberAccess	file -> out		8521468	0					
ANR	8521475	Identifier	file		8521468	0					
ANR	8521476	Identifier	out		8521468	1					
ANR	8521477	Identifier	NULL		8521468	1					
ANR	8521478	CompoundStatement		3:3:30:30	8521468	1					
ANR	8521479	IfStatement	"if ( putc ( b , file -> out ) != b )"		8521468	0					
ANR	8521480	Condition	"putc ( b , file -> out ) != b"	1349:10:41741:41763	8521468	0	True				
ANR	8521481	EqualityExpression	"putc ( b , file -> out ) != b"		8521468	0		!=			
ANR	8521482	CallExpression	"putc ( b , file -> out )"		8521468	0					
ANR	8521483	Callee	putc		8521468	0					
ANR	8521484	Identifier	putc		8521468	0					
ANR	8521485	ArgumentList	b		8521468	1					
ANR	8521486	Argument	b		8521468	0					
ANR	8521487	Identifier	b		8521468	0					
ANR	8521488	Argument	file -> out		8521468	1					
ANR	8521489	PtrMemberAccess	file -> out		8521468	0					
ANR	8521490	Identifier	file		8521468	0					
ANR	8521491	Identifier	out		8521468	1					
ANR	8521492	Identifier	b		8521468	1					
ANR	8521493	CompoundStatement		5:6:73:73	8521468	1					
ANR	8521494	ExpressionStatement	file -> write_errno = errno	1351:9:41783:41808	8521468	0	True				
ANR	8521495	AssignmentExpression	file -> write_errno = errno		8521468	0		=			
ANR	8521496	PtrMemberAccess	file -> write_errno		8521468	0					
ANR	8521497	Identifier	file		8521468	0					
ANR	8521498	Identifier	write_errno		8521468	1					
ANR	8521499	Identifier	errno		8521468	1					
ANR	8521500	ExpressionStatement	file -> status_code |= WRITE_ERROR	1352:9:41819:41851	8521468	1	True				
ANR	8521501	AssignmentExpression	file -> status_code |= WRITE_ERROR		8521468	0		|=			
ANR	8521502	PtrMemberAccess	file -> status_code		8521468	0					
ANR	8521503	Identifier	file		8521468	0					
ANR	8521504	Identifier	status_code		8521468	1					
ANR	8521505	Identifier	WRITE_ERROR		8521468	1					
ANR	8521506	ExpressionStatement	"stop ( file , WRITE_ERROR_CODE , ""write byte"" )"	1353:9:41862:41904	8521468	2	True				
ANR	8521507	CallExpression	"stop ( file , WRITE_ERROR_CODE , ""write byte"" )"		8521468	0					
ANR	8521508	Callee	stop		8521468	0					
ANR	8521509	Identifier	stop		8521468	0					
ANR	8521510	ArgumentList	file		8521468	1					
ANR	8521511	Argument	file		8521468	0					
ANR	8521512	Identifier	file		8521468	0					
ANR	8521513	Argument	WRITE_ERROR_CODE		8521468	1					
ANR	8521514	Identifier	WRITE_ERROR_CODE		8521468	0					
ANR	8521515	Argument	"""write byte"""		8521468	2					
ANR	8521516	PrimaryExpression	"""write byte"""		8521468	0					
ANR	8521517	ExpressionStatement	++ ( file -> write_count )	1357:3:41923:41944	8521468	1	True				
ANR	8521518	UnaryExpression	++ ( file -> write_count )		8521468	0					
ANR	8521519	IncDec	++		8521468	0					
ANR	8521520	PtrMemberAccess	file -> write_count		8521468	1					
ANR	8521521	Identifier	file		8521468	0					
ANR	8521522	Identifier	write_count		8521468	1					
ANR	8521523	ReturnType	static void		8521468	1					
ANR	8521524	Identifier	write_byte		8521468	2					
ANR	8521525	ParameterList	"struct file * file , int b"		8521468	3					
ANR	8521526	Parameter	struct file * file	1341:11:41456:41472	8521468	0	True				
ANR	8521527	ParameterType	struct file *		8521468	0					
ANR	8521528	Identifier	file		8521468	1					
ANR	8521529	Parameter	int b	1341:30:41475:41479	8521468	1	True				
ANR	8521530	ParameterType	int		8521468	0					
ANR	8521531	Identifier	b		8521468	1					
ANR	8521532	CFGEntryNode	ENTRY		8521468		True				
ANR	8521533	CFGExitNode	EXIT		8521468		True				
ANR	8521534	Symbol	putc		8521468						
ANR	8521535	Symbol	b		8521468						
ANR	8521536	Symbol	errno		8521468						
ANR	8521537	Symbol	file		8521468						
ANR	8521538	Symbol	NULL		8521468						
ANR	8521539	Symbol	WRITE_ERROR_CODE		8521468						
ANR	8521540	Symbol	file -> write_errno		8521468						
ANR	8521541	Symbol	WRITE_ERROR		8521468						
ANR	8521542	Symbol	* file		8521468						
ANR	8521543	Symbol	file -> out		8521468						
ANR	8521544	Symbol	file -> status_code		8521468						
ANR	8521545	Function	read_4	1361:0:41996:42415							
ANR	8521546	FunctionDef	"read_4 (struct file * file , png_uint_32 * pu)"		8521545	0					
ANR	8521547	CompoundStatement		1366:0:42201:42415	8521545	0					
ANR	8521548	IdentifierDeclStatement	unsigned int i = 0 ;	1367:3:42206:42224	8521545	0	True				
ANR	8521549	IdentifierDecl	i = 0		8521545	0					
ANR	8521550	IdentifierDeclType	unsigned int		8521545	0					
ANR	8521551	Identifier	i		8521545	1					
ANR	8521552	AssignmentExpression	i = 0		8521545	2		=			
ANR	8521553	Identifier	i		8521545	0					
ANR	8521554	PrimaryExpression	0		8521545	1					
ANR	8521555	IdentifierDeclStatement	png_uint_32 val = 0 ;	1368:3:42229:42248	8521545	1	True				
ANR	8521556	IdentifierDecl	val = 0		8521545	0					
ANR	8521557	IdentifierDeclType	png_uint_32		8521545	0					
ANR	8521558	Identifier	val		8521545	1					
ANR	8521559	AssignmentExpression	val = 0		8521545	2		=			
ANR	8521560	Identifier	val		8521545	0					
ANR	8521561	PrimaryExpression	0		8521545	1					
ANR	8521562	DoStatement	do		8521545	2					
ANR	8521563	CompoundStatement		7:6:66:90	8521545	0					
ANR	8521564	IdentifierDeclStatement	int ch = read_byte ( file ) ;	1372:6:42268:42292	8521545	0	True				
ANR	8521565	IdentifierDecl	ch = read_byte ( file )		8521545	0					
ANR	8521566	IdentifierDeclType	int		8521545	0					
ANR	8521567	Identifier	ch		8521545	1					
ANR	8521568	AssignmentExpression	ch = read_byte ( file )		8521545	2		=			
ANR	8521569	Identifier	ch		8521545	0					
ANR	8521570	CallExpression	read_byte ( file )		8521545	1					
ANR	8521571	Callee	read_byte		8521545	0					
ANR	8521572	Identifier	read_byte		8521545	0					
ANR	8521573	ArgumentList	file		8521545	1					
ANR	8521574	Argument	file		8521545	0					
ANR	8521575	Identifier	file		8521545	0					
ANR	8521576	IfStatement	if ( ch == EOF )		8521545	1					
ANR	8521577	Condition	ch == EOF	1374:10:42305:42313	8521545	0	True				
ANR	8521578	EqualityExpression	ch == EOF		8521545	0		==			
ANR	8521579	Identifier	ch		8521545	0					
ANR	8521580	Identifier	EOF		8521545	1					
ANR	8521581	ReturnStatement	return i ;	1375:9:42325:42333	8521545	1	True				
ANR	8521582	Identifier	i		8521545	0					
ANR	8521583	ExpressionStatement	val = ( val << 8 ) + ch	1377:6:42342:42363	8521545	2	True				
ANR	8521584	AssignmentExpression	val = ( val << 8 ) + ch		8521545	0		=			
ANR	8521585	Identifier	val		8521545	0					
ANR	8521586	AdditiveExpression	( val << 8 ) + ch		8521545	1		+			
ANR	8521587	ShiftExpression	val << 8		8521545	0		<<			
ANR	8521588	Identifier	val		8521545	0					
ANR	8521589	PrimaryExpression	8		8521545	1					
ANR	8521590	Identifier	ch		8521545	1					
ANR	8521591	Condition	++ i < 4	1378:12:42377:42383	8521545	1	True				
ANR	8521592	RelationalExpression	++ i < 4		8521545	0		<			
ANR	8521593	UnaryExpression	++ i		8521545	0					
ANR	8521594	IncDec	++		8521545	0					
ANR	8521595	Identifier	i		8521545	1					
ANR	8521596	PrimaryExpression	4		8521545	1					
ANR	8521597	ExpressionStatement	* pu = val	1380:3:42391:42400	8521545	3	True				
ANR	8521598	AssignmentExpression	* pu = val		8521545	0		=			
ANR	8521599	UnaryOperationExpression	* pu		8521545	0					
ANR	8521600	UnaryOperator	*		8521545	0					
ANR	8521601	Identifier	pu		8521545	1					
ANR	8521602	Identifier	val		8521545	1					
ANR	8521603	ReturnStatement	return i ;	1381:3:42405:42413	8521545	4	True				
ANR	8521604	Identifier	i		8521545	0					
ANR	8521605	ReturnType	static unsigned int		8521545	1					
ANR	8521606	Identifier	read_4		8521545	2					
ANR	8521607	ParameterList	"struct file * file , png_uint_32 * pu"		8521545	3					
ANR	8521608	Parameter	struct file * file	1362:7:42023:42039	8521545	0	True				
ANR	8521609	ParameterType	struct file *		8521545	0					
ANR	8521610	Identifier	file		8521545	1					
ANR	8521611	Parameter	png_uint_32 * pu	1362:26:42042:42056	8521545	1	True				
ANR	8521612	ParameterType	png_uint_32 *		8521545	0					
ANR	8521613	Identifier	pu		8521545	1					
ANR	8521614	CFGEntryNode	ENTRY		8521545		True				
ANR	8521615	CFGExitNode	EXIT		8521545		True				
ANR	8521616	Symbol	val		8521545						
ANR	8521617	Symbol	file		8521545						
ANR	8521618	Symbol	pu		8521545						
ANR	8521619	Symbol	ch		8521545						
ANR	8521620	Symbol	* pu		8521545						
ANR	8521621	Symbol	i		8521545						
ANR	8521622	Symbol	read_byte		8521545						
ANR	8521623	Symbol	EOF		8521545						
ANR	8521624	Function	crc_read_many	1385:0:42482:42969							
ANR	8521625	FunctionDef	"crc_read_many (struct file * file , png_uint_32 length)"		8521624	0					
ANR	8521626	CompoundStatement		1390:0:42665:42969	8521624	0					
ANR	8521627	IfStatement	if ( length > 0 )		8521624	0					
ANR	8521628	Condition	length > 0	1391:7:42674:42683	8521624	0	True				
ANR	8521629	RelationalExpression	length > 0		8521624	0		>			
ANR	8521630	Identifier	length		8521624	0					
ANR	8521631	PrimaryExpression	0		8521624	1					
ANR	8521632	CompoundStatement		4:6:31:58	8521624	1					
ANR	8521633	IdentifierDeclStatement	png_uint_32 crc = file -> crc ;	1393:6:42697:42724	8521624	0	True				
ANR	8521634	IdentifierDecl	crc = file -> crc		8521624	0					
ANR	8521635	IdentifierDeclType	png_uint_32		8521624	0					
ANR	8521636	Identifier	crc		8521624	1					
ANR	8521637	AssignmentExpression	crc = file -> crc		8521624	2		=			
ANR	8521638	Identifier	crc		8521624	0					
ANR	8521639	PtrMemberAccess	file -> crc		8521624	1					
ANR	8521640	Identifier	file		8521624	0					
ANR	8521641	Identifier	crc		8521624	1					
ANR	8521642	DoStatement	do		8521624	1					
ANR	8521643	CompoundStatement		8:9:87:111	8521624	0					
ANR	8521644	IdentifierDeclStatement	int ch = read_byte ( file ) ;	1397:9:42753:42777	8521624	0	True				
ANR	8521645	IdentifierDecl	ch = read_byte ( file )		8521624	0					
ANR	8521646	IdentifierDeclType	int		8521624	0					
ANR	8521647	Identifier	ch		8521624	1					
ANR	8521648	AssignmentExpression	ch = read_byte ( file )		8521624	2		=			
ANR	8521649	Identifier	ch		8521624	0					
ANR	8521650	CallExpression	read_byte ( file )		8521624	1					
ANR	8521651	Callee	read_byte		8521624	0					
ANR	8521652	Identifier	read_byte		8521624	0					
ANR	8521653	ArgumentList	file		8521624	1					
ANR	8521654	Argument	file		8521624	0					
ANR	8521655	Identifier	file		8521624	0					
ANR	8521656	IfStatement	if ( ch == EOF )		8521624	1					
ANR	8521657	Condition	ch == EOF	1399:13:42793:42801	8521624	0	True				
ANR	8521658	EqualityExpression	ch == EOF		8521624	0		==			
ANR	8521659	Identifier	ch		8521624	0					
ANR	8521660	Identifier	EOF		8521624	1					
ANR	8521661	ReturnStatement	return 0 ;	1400:12:42816:42824	8521624	1	True				
ANR	8521662	PrimaryExpression	0		8521624	0					
ANR	8521663	ExpressionStatement	"crc = crc_one_byte ( crc , ch )"	1402:9:42852:42879	8521624	2	True				
ANR	8521664	AssignmentExpression	"crc = crc_one_byte ( crc , ch )"		8521624	0		=			
ANR	8521665	Identifier	crc		8521624	0					
ANR	8521666	CallExpression	"crc_one_byte ( crc , ch )"		8521624	1					
ANR	8521667	Callee	crc_one_byte		8521624	0					
ANR	8521668	Identifier	crc_one_byte		8521624	0					
ANR	8521669	ArgumentList	crc		8521624	1					
ANR	8521670	Argument	crc		8521624	0					
ANR	8521671	Identifier	crc		8521624	0					
ANR	8521672	Argument	ch		8521624	1					
ANR	8521673	Identifier	ch		8521624	0					
ANR	8521674	Condition	-- length > 0	1404:13:42902:42913	8521624	1	True				
ANR	8521675	RelationalExpression	-- length > 0		8521624	0		>			
ANR	8521676	UnaryExpression	-- length		8521624	0					
ANR	8521677	IncDec	--		8521624	0					
ANR	8521678	Identifier	length		8521624	1					
ANR	8521679	PrimaryExpression	0		8521624	1					
ANR	8521680	ExpressionStatement	file -> crc = crc	1406:6:42924:42939	8521624	2	True				
ANR	8521681	AssignmentExpression	file -> crc = crc		8521624	0		=			
ANR	8521682	PtrMemberAccess	file -> crc		8521624	0					
ANR	8521683	Identifier	file		8521624	0					
ANR	8521684	Identifier	crc		8521624	1					
ANR	8521685	Identifier	crc		8521624	1					
ANR	8521686	ReturnStatement	return 1 ;	1409:3:42950:42958	8521624	1	True				
ANR	8521687	PrimaryExpression	1		8521624	0					
ANR	8521688	ReturnType	static int		8521624	1					
ANR	8521689	Identifier	crc_read_many		8521624	2					
ANR	8521690	ParameterList	"struct file * file , png_uint_32 length"		8521624	3					
ANR	8521691	Parameter	struct file * file	1386:14:42507:42523	8521624	0	True				
ANR	8521692	ParameterType	struct file *		8521624	0					
ANR	8521693	Identifier	file		8521624	1					
ANR	8521694	Parameter	png_uint_32 length	1386:33:42526:42543	8521624	1	True				
ANR	8521695	ParameterType	png_uint_32		8521624	0					
ANR	8521696	Identifier	length		8521624	1					
ANR	8521697	CFGEntryNode	ENTRY		8521624		True				
ANR	8521698	CFGExitNode	EXIT		8521624		True				
ANR	8521699	Symbol	file		8521624						
ANR	8521700	Symbol	crc_one_byte		8521624						
ANR	8521701	Symbol	crc		8521624						
ANR	8521702	Symbol	ch		8521624						
ANR	8521703	Symbol	file -> crc		8521624						
ANR	8521704	Symbol	length		8521624						
ANR	8521705	Symbol	read_byte		8521624						
ANR	8521706	Symbol	* file		8521624						
ANR	8521707	Symbol	EOF		8521624						
ANR	8521708	Function	calc_image_size	1412:0:42972:46496							
ANR	8521709	FunctionDef	calc_image_size (struct file * file)		8521708	0					
ANR	8521710	CompoundStatement		1417:0:43116:46496	8521708	0					
ANR	8521711	IdentifierDeclStatement	png_uint_16 pd = file -> bit_depth ;	1418:3:43121:43153	8521708	0	True				
ANR	8521712	IdentifierDecl	pd = file -> bit_depth		8521708	0					
ANR	8521713	IdentifierDeclType	png_uint_16		8521708	0					
ANR	8521714	Identifier	pd		8521708	1					
ANR	8521715	AssignmentExpression	pd = file -> bit_depth		8521708	2		=			
ANR	8521716	Identifier	pd		8521708	0					
ANR	8521717	PtrMemberAccess	file -> bit_depth		8521708	1					
ANR	8521718	Identifier	file		8521708	0					
ANR	8521719	Identifier	bit_depth		8521708	1					
ANR	8521720	SwitchStatement	switch ( file -> color_type )		8521708	1					
ANR	8521721	Condition	file -> color_type	1420:11:43167:43182	8521708	0	True				
ANR	8521722	PtrMemberAccess	file -> color_type		8521708	0					
ANR	8521723	Identifier	file		8521708	0					
ANR	8521724	Identifier	color_type		8521708	1					
ANR	8521725	CompoundStatement		5:3:71:71	8521708	1					
ANR	8521726	Label	default :	1422:6:43196:43203	8521708	0	True				
ANR	8521727	Identifier	default		8521708	0					
ANR	8521728	ExpressionStatement	"stop_invalid ( file , ""IHDR: colour type"" )"	1423:9:43214:43253	8521708	1	True				
ANR	8521729	CallExpression	"stop_invalid ( file , ""IHDR: colour type"" )"		8521708	0					
ANR	8521730	Callee	stop_invalid		8521708	0					
ANR	8521731	Identifier	stop_invalid		8521708	0					
ANR	8521732	ArgumentList	file		8521708	1					
ANR	8521733	Argument	file		8521708	0					
ANR	8521734	Identifier	file		8521708	0					
ANR	8521735	Argument	"""IHDR: colour type"""		8521708	1					
ANR	8521736	PrimaryExpression	"""IHDR: colour type"""		8521708	0					
ANR	8521737	Label	invalid_bit_depth :	1425:6:43262:43279	8521708	2	True				
ANR	8521738	Identifier	invalid_bit_depth		8521708	0					
ANR	8521739	ExpressionStatement	"stop_invalid ( file , ""IHDR: bit depth"" )"	1426:9:43290:43327	8521708	3	True				
ANR	8521740	CallExpression	"stop_invalid ( file , ""IHDR: bit depth"" )"		8521708	0					
ANR	8521741	Callee	stop_invalid		8521708	0					
ANR	8521742	Identifier	stop_invalid		8521708	0					
ANR	8521743	ArgumentList	file		8521708	1					
ANR	8521744	Argument	file		8521708	0					
ANR	8521745	Identifier	file		8521708	0					
ANR	8521746	Argument	"""IHDR: bit depth"""		8521708	1					
ANR	8521747	PrimaryExpression	"""IHDR: bit depth"""		8521708	0					
ANR	8521748	Label	case 0 :	1428:6:43336:43342	8521708	4	True				
ANR	8521749	IfStatement	if ( pd != 1 && pd != 2 && pd != 4 && pd != 8 && pd != 16 )		8521708	5					
ANR	8521750	Condition	pd != 1 && pd != 2 && pd != 4 && pd != 8 && pd != 16	1429:13:43365:43416	8521708	0	True				
ANR	8521751	AndExpression	pd != 1 && pd != 2 && pd != 4 && pd != 8 && pd != 16		8521708	0		&&			
ANR	8521752	EqualityExpression	pd != 1		8521708	0		!=			
ANR	8521753	Identifier	pd		8521708	0					
ANR	8521754	PrimaryExpression	1		8521708	1					
ANR	8521755	AndExpression	pd != 2 && pd != 4 && pd != 8 && pd != 16		8521708	1		&&			
ANR	8521756	EqualityExpression	pd != 2		8521708	0		!=			
ANR	8521757	Identifier	pd		8521708	0					
ANR	8521758	PrimaryExpression	2		8521708	1					
ANR	8521759	AndExpression	pd != 4 && pd != 8 && pd != 16		8521708	1		&&			
ANR	8521760	EqualityExpression	pd != 4		8521708	0		!=			
ANR	8521761	Identifier	pd		8521708	0					
ANR	8521762	PrimaryExpression	4		8521708	1					
ANR	8521763	AndExpression	pd != 8 && pd != 16		8521708	1		&&			
ANR	8521764	EqualityExpression	pd != 8		8521708	0		!=			
ANR	8521765	Identifier	pd		8521708	0					
ANR	8521766	PrimaryExpression	8		8521708	1					
ANR	8521767	EqualityExpression	pd != 16		8521708	1		!=			
ANR	8521768	Identifier	pd		8521708	0					
ANR	8521769	PrimaryExpression	16		8521708	1					
ANR	8521770	GotoStatement	goto invalid_bit_depth ;	1430:12:43431:43453	8521708	1	True				
ANR	8521771	Identifier	invalid_bit_depth		8521708	0					
ANR	8521772	BreakStatement	break ;	1431:9:43464:43469	8521708	6	True				
ANR	8521773	Label	case 3 :	1433:6:43478:43484	8521708	7	True				
ANR	8521774	IfStatement	if ( pd != 1 && pd != 2 && pd != 4 && pd != 8 )		8521708	8					
ANR	8521775	Condition	pd != 1 && pd != 2 && pd != 4 && pd != 8	1434:13:43499:43538	8521708	0	True				
ANR	8521776	AndExpression	pd != 1 && pd != 2 && pd != 4 && pd != 8		8521708	0		&&			
ANR	8521777	EqualityExpression	pd != 1		8521708	0		!=			
ANR	8521778	Identifier	pd		8521708	0					
ANR	8521779	PrimaryExpression	1		8521708	1					
ANR	8521780	AndExpression	pd != 2 && pd != 4 && pd != 8		8521708	1		&&			
ANR	8521781	EqualityExpression	pd != 2		8521708	0		!=			
ANR	8521782	Identifier	pd		8521708	0					
ANR	8521783	PrimaryExpression	2		8521708	1					
ANR	8521784	AndExpression	pd != 4 && pd != 8		8521708	1		&&			
ANR	8521785	EqualityExpression	pd != 4		8521708	0		!=			
ANR	8521786	Identifier	pd		8521708	0					
ANR	8521787	PrimaryExpression	4		8521708	1					
ANR	8521788	EqualityExpression	pd != 8		8521708	1		!=			
ANR	8521789	Identifier	pd		8521708	0					
ANR	8521790	PrimaryExpression	8		8521708	1					
ANR	8521791	GotoStatement	goto invalid_bit_depth ;	1435:12:43553:43575	8521708	1	True				
ANR	8521792	Identifier	invalid_bit_depth		8521708	0					
ANR	8521793	BreakStatement	break ;	1436:9:43586:43591	8521708	9	True				
ANR	8521794	Label	case 2 :	1438:6:43600:43606	8521708	10	True				
ANR	8521795	IfStatement	if ( pd != 8 && pd != 16 )		8521708	11					
ANR	8521796	Condition	pd != 8 && pd != 16	1439:13:43631:43649	8521708	0	True				
ANR	8521797	AndExpression	pd != 8 && pd != 16		8521708	0		&&			
ANR	8521798	EqualityExpression	pd != 8		8521708	0		!=			
ANR	8521799	Identifier	pd		8521708	0					
ANR	8521800	PrimaryExpression	8		8521708	1					
ANR	8521801	EqualityExpression	pd != 16		8521708	1		!=			
ANR	8521802	Identifier	pd		8521708	0					
ANR	8521803	PrimaryExpression	16		8521708	1					
ANR	8521804	GotoStatement	goto invalid_bit_depth ;	1440:12:43664:43686	8521708	1	True				
ANR	8521805	Identifier	invalid_bit_depth		8521708	0					
ANR	8521806	ExpressionStatement	pd = ( png_uint_16 ) ( pd * 3 )	1442:9:43698:43724	8521708	12	True				
ANR	8521807	AssignmentExpression	pd = ( png_uint_16 ) ( pd * 3 )		8521708	0		=			
ANR	8521808	Identifier	pd		8521708	0					
ANR	8521809	CastExpression	( png_uint_16 ) ( pd * 3 )		8521708	1					
ANR	8521810	CastTarget	png_uint_16		8521708	0					
ANR	8521811	MultiplicativeExpression	pd * 3		8521708	1		*			
ANR	8521812	Identifier	pd		8521708	0					
ANR	8521813	PrimaryExpression	3		8521708	1					
ANR	8521814	BreakStatement	break ;	1443:9:43735:43740	8521708	13	True				
ANR	8521815	Label	case 4 :	1445:6:43749:43755	8521708	14	True				
ANR	8521816	IfStatement	if ( pd != 8 && pd != 16 )		8521708	15					
ANR	8521817	Condition	pd != 8 && pd != 16	1446:13:43779:43797	8521708	0	True				
ANR	8521818	AndExpression	pd != 8 && pd != 16		8521708	0		&&			
ANR	8521819	EqualityExpression	pd != 8		8521708	0		!=			
ANR	8521820	Identifier	pd		8521708	0					
ANR	8521821	PrimaryExpression	8		8521708	1					
ANR	8521822	EqualityExpression	pd != 16		8521708	1		!=			
ANR	8521823	Identifier	pd		8521708	0					
ANR	8521824	PrimaryExpression	16		8521708	1					
ANR	8521825	GotoStatement	goto invalid_bit_depth ;	1447:12:43812:43834	8521708	1	True				
ANR	8521826	Identifier	invalid_bit_depth		8521708	0					
ANR	8521827	ExpressionStatement	pd = ( png_uint_16 ) ( pd * 2 )	1449:9:43846:43872	8521708	16	True				
ANR	8521828	AssignmentExpression	pd = ( png_uint_16 ) ( pd * 2 )		8521708	0		=			
ANR	8521829	Identifier	pd		8521708	0					
ANR	8521830	CastExpression	( png_uint_16 ) ( pd * 2 )		8521708	1					
ANR	8521831	CastTarget	png_uint_16		8521708	0					
ANR	8521832	MultiplicativeExpression	pd * 2		8521708	1		*			
ANR	8521833	Identifier	pd		8521708	0					
ANR	8521834	PrimaryExpression	2		8521708	1					
ANR	8521835	BreakStatement	break ;	1450:9:43883:43888	8521708	17	True				
ANR	8521836	Label	case 6 :	1452:6:43897:43903	8521708	18	True				
ANR	8521837	IfStatement	if ( pd != 8 && pd != 16 )		8521708	19					
ANR	8521838	Condition	pd != 8 && pd != 16	1453:13:43929:43947	8521708	0	True				
ANR	8521839	AndExpression	pd != 8 && pd != 16		8521708	0		&&			
ANR	8521840	EqualityExpression	pd != 8		8521708	0		!=			
ANR	8521841	Identifier	pd		8521708	0					
ANR	8521842	PrimaryExpression	8		8521708	1					
ANR	8521843	EqualityExpression	pd != 16		8521708	1		!=			
ANR	8521844	Identifier	pd		8521708	0					
ANR	8521845	PrimaryExpression	16		8521708	1					
ANR	8521846	GotoStatement	goto invalid_bit_depth ;	1454:12:43962:43984	8521708	1	True				
ANR	8521847	Identifier	invalid_bit_depth		8521708	0					
ANR	8521848	ExpressionStatement	pd = ( png_uint_16 ) ( pd * 4 )	1456:9:43996:44022	8521708	20	True				
ANR	8521849	AssignmentExpression	pd = ( png_uint_16 ) ( pd * 4 )		8521708	0		=			
ANR	8521850	Identifier	pd		8521708	0					
ANR	8521851	CastExpression	( png_uint_16 ) ( pd * 4 )		8521708	1					
ANR	8521852	CastTarget	png_uint_16		8521708	0					
ANR	8521853	MultiplicativeExpression	pd * 4		8521708	1		*			
ANR	8521854	Identifier	pd		8521708	0					
ANR	8521855	PrimaryExpression	4		8521708	1					
ANR	8521856	BreakStatement	break ;	1457:9:44033:44038	8521708	21	True				
ANR	8521857	IfStatement	if ( file -> width < 1 || file -> width > 0x7fffffff )		8521708	2					
ANR	8521858	Condition	file -> width < 1 || file -> width > 0x7fffffff	1460:7:44053:44095	8521708	0	True				
ANR	8521859	OrExpression	file -> width < 1 || file -> width > 0x7fffffff		8521708	0		||			
ANR	8521860	RelationalExpression	file -> width < 1		8521708	0		<			
ANR	8521861	PtrMemberAccess	file -> width		8521708	0					
ANR	8521862	Identifier	file		8521708	0					
ANR	8521863	Identifier	width		8521708	1					
ANR	8521864	PrimaryExpression	1		8521708	1					
ANR	8521865	RelationalExpression	file -> width > 0x7fffffff		8521708	1		>			
ANR	8521866	PtrMemberAccess	file -> width		8521708	0					
ANR	8521867	Identifier	file		8521708	0					
ANR	8521868	Identifier	width		8521708	1					
ANR	8521869	PrimaryExpression	0x7fffffff		8521708	1					
ANR	8521870	ExpressionStatement	"stop_invalid ( file , ""IHDR: width"" )"	1461:6:44104:44137	8521708	1	True				
ANR	8521871	CallExpression	"stop_invalid ( file , ""IHDR: width"" )"		8521708	0					
ANR	8521872	Callee	stop_invalid		8521708	0					
ANR	8521873	Identifier	stop_invalid		8521708	0					
ANR	8521874	ArgumentList	file		8521708	1					
ANR	8521875	Argument	file		8521708	0					
ANR	8521876	Identifier	file		8521708	0					
ANR	8521877	Argument	"""IHDR: width"""		8521708	1					
ANR	8521878	PrimaryExpression	"""IHDR: width"""		8521708	0					
ANR	8521879	ElseStatement	else		8521708	0					
ANR	8521880	IfStatement	if ( file -> height < 1 || file -> height > 0x7fffffff )		8521708	0					
ANR	8521881	Condition	file -> height < 1 || file -> height > 0x7fffffff	1463:12:44152:44196	8521708	0	True				
ANR	8521882	OrExpression	file -> height < 1 || file -> height > 0x7fffffff		8521708	0		||			
ANR	8521883	RelationalExpression	file -> height < 1		8521708	0		<			
ANR	8521884	PtrMemberAccess	file -> height		8521708	0					
ANR	8521885	Identifier	file		8521708	0					
ANR	8521886	Identifier	height		8521708	1					
ANR	8521887	PrimaryExpression	1		8521708	1					
ANR	8521888	RelationalExpression	file -> height > 0x7fffffff		8521708	1		>			
ANR	8521889	PtrMemberAccess	file -> height		8521708	0					
ANR	8521890	Identifier	file		8521708	0					
ANR	8521891	Identifier	height		8521708	1					
ANR	8521892	PrimaryExpression	0x7fffffff		8521708	1					
ANR	8521893	ExpressionStatement	"stop_invalid ( file , ""IHDR: height"" )"	1464:6:44205:44239	8521708	1	True				
ANR	8521894	CallExpression	"stop_invalid ( file , ""IHDR: height"" )"		8521708	0					
ANR	8521895	Callee	stop_invalid		8521708	0					
ANR	8521896	Identifier	stop_invalid		8521708	0					
ANR	8521897	ArgumentList	file		8521708	1					
ANR	8521898	Argument	file		8521708	0					
ANR	8521899	Identifier	file		8521708	0					
ANR	8521900	Argument	"""IHDR: height"""		8521708	1					
ANR	8521901	PrimaryExpression	"""IHDR: height"""		8521708	0					
ANR	8521902	ElseStatement	else		8521708	0					
ANR	8521903	IfStatement	if ( file -> compression_method != 0 )		8521708	0					
ANR	8521904	Condition	file -> compression_method != 0	1466:12:44254:44282	8521708	0	True				
ANR	8521905	EqualityExpression	file -> compression_method != 0		8521708	0		!=			
ANR	8521906	PtrMemberAccess	file -> compression_method		8521708	0					
ANR	8521907	Identifier	file		8521708	0					
ANR	8521908	Identifier	compression_method		8521708	1					
ANR	8521909	PrimaryExpression	0		8521708	1					
ANR	8521910	ExpressionStatement	"stop_invalid ( file , ""IHDR: compression method"" )"	1467:6:44291:44337	8521708	1	True				
ANR	8521911	CallExpression	"stop_invalid ( file , ""IHDR: compression method"" )"		8521708	0					
ANR	8521912	Callee	stop_invalid		8521708	0					
ANR	8521913	Identifier	stop_invalid		8521708	0					
ANR	8521914	ArgumentList	file		8521708	1					
ANR	8521915	Argument	file		8521708	0					
ANR	8521916	Identifier	file		8521708	0					
ANR	8521917	Argument	"""IHDR: compression method"""		8521708	1					
ANR	8521918	PrimaryExpression	"""IHDR: compression method"""		8521708	0					
ANR	8521919	ElseStatement	else		8521708	0					
ANR	8521920	IfStatement	if ( file -> filter_method != 0 )		8521708	0					
ANR	8521921	Condition	file -> filter_method != 0	1469:12:44352:44375	8521708	0	True				
ANR	8521922	EqualityExpression	file -> filter_method != 0		8521708	0		!=			
ANR	8521923	PtrMemberAccess	file -> filter_method		8521708	0					
ANR	8521924	Identifier	file		8521708	0					
ANR	8521925	Identifier	filter_method		8521708	1					
ANR	8521926	PrimaryExpression	0		8521708	1					
ANR	8521927	ExpressionStatement	"stop_invalid ( file , ""IHDR: filter method"" )"	1470:6:44384:44425	8521708	1	True				
ANR	8521928	CallExpression	"stop_invalid ( file , ""IHDR: filter method"" )"		8521708	0					
ANR	8521929	Callee	stop_invalid		8521708	0					
ANR	8521930	Identifier	stop_invalid		8521708	0					
ANR	8521931	ArgumentList	file		8521708	1					
ANR	8521932	Argument	file		8521708	0					
ANR	8521933	Identifier	file		8521708	0					
ANR	8521934	Argument	"""IHDR: filter method"""		8521708	1					
ANR	8521935	PrimaryExpression	"""IHDR: filter method"""		8521708	0					
ANR	8521936	ElseStatement	else		8521708	0					
ANR	8521937	SwitchStatement	switch ( file -> interlace_method )		8521708	0					
ANR	8521938	Condition	file -> interlace_method	1472:16:44444:44465	8521708	0	True				
ANR	8521939	PtrMemberAccess	file -> interlace_method		8521708	0					
ANR	8521940	Identifier	file		8521708	0					
ANR	8521941	Identifier	interlace_method		8521708	1					
ANR	8521942	CompoundStatement		57:3:1354:1354	8521708	1					
ANR	8521943	Label	case PNG_INTERLACE_ADAM7 :	1474:6:44479:44503	8521708	0	True				
ANR	8521944	Identifier	PNG_INTERLACE_ADAM7		8521708	0					
ANR	8521945	CompoundStatement		65:12:1626:1659	8521708	1					
ANR	8521946	IdentifierDeclStatement	int pass ;	1479:12:44687:44695	8521708	0	True				
ANR	8521947	IdentifierDecl	pass		8521708	0					
ANR	8521948	IdentifierDeclType	int		8521708	0					
ANR	8521949	Identifier	pass		8521708	1					
ANR	8521950	IdentifierDeclStatement	int image_digits = 0 ;	1480:12:44709:44729	8521708	1	True				
ANR	8521951	IdentifierDecl	image_digits = 0		8521708	0					
ANR	8521952	IdentifierDeclType	int		8521708	0					
ANR	8521953	Identifier	image_digits		8521708	1					
ANR	8521954	AssignmentExpression	image_digits = 0		8521708	2		=			
ANR	8521955	Identifier	image_digits		8521708	0					
ANR	8521956	PrimaryExpression	0		8521708	1					
ANR	8521957	IdentifierDeclStatement	"udigit row_width [ 2 ] , row_bytes [ 3 ] ;"	1481:12:44743:44776	8521708	2	True				
ANR	8521958	IdentifierDecl	row_width [ 2 ]		8521708	0					
ANR	8521959	IdentifierDeclType	udigit [ 2 ]		8521708	0					
ANR	8521960	Identifier	row_width		8521708	1					
ANR	8521961	PrimaryExpression	2		8521708	2					
ANR	8521962	IdentifierDecl	row_bytes [ 3 ]		8521708	1					
ANR	8521963	IdentifierDeclType	udigit [ 3 ]		8521708	0					
ANR	8521964	Identifier	row_bytes		8521708	1					
ANR	8521965	PrimaryExpression	3		8521708	2					
ANR	8521966	ForStatement	for ( pass = 0 ; pass <= 6 ; ++ pass )		8521708	3					
ANR	8521967	ForInit	pass = 0 ;	1483:17:44796:44802	8521708	0	True				
ANR	8521968	AssignmentExpression	pass = 0		8521708	0		=			
ANR	8521969	Identifier	pass		8521708	0					
ANR	8521970	PrimaryExpression	0		8521708	1					
ANR	8521971	Condition	pass <= 6	1483:25:44804:44810	8521708	1	True				
ANR	8521972	RelationalExpression	pass <= 6		8521708	0		<=			
ANR	8521973	Identifier	pass		8521708	0					
ANR	8521974	PrimaryExpression	6		8521708	1					
ANR	8521975	UnaryExpression	++ pass	1483:34:44813:44818	8521708	2	True				
ANR	8521976	IncDec	++		8521708	0					
ANR	8521977	Identifier	pass		8521708	1					
ANR	8521978	CompoundStatement		69:15:1733:1782	8521708	3					
ANR	8521979	IdentifierDeclStatement	"png_uint_32 pw = PNG_PASS_COLS ( file -> width , pass ) ;"	1485:15:44850:44899	8521708	0	True				
ANR	8521980	IdentifierDecl	"pw = PNG_PASS_COLS ( file -> width , pass )"		8521708	0					
ANR	8521981	IdentifierDeclType	png_uint_32		8521708	0					
ANR	8521982	Identifier	pw		8521708	1					
ANR	8521983	AssignmentExpression	"pw = PNG_PASS_COLS ( file -> width , pass )"		8521708	2		=			
ANR	8521984	Identifier	pw		8521708	0					
ANR	8521985	CallExpression	"PNG_PASS_COLS ( file -> width , pass )"		8521708	1					
ANR	8521986	Callee	PNG_PASS_COLS		8521708	0					
ANR	8521987	Identifier	PNG_PASS_COLS		8521708	0					
ANR	8521988	ArgumentList	file -> width		8521708	1					
ANR	8521989	Argument	file -> width		8521708	0					
ANR	8521990	PtrMemberAccess	file -> width		8521708	0					
ANR	8521991	Identifier	file		8521708	0					
ANR	8521992	Identifier	width		8521708	1					
ANR	8521993	Argument	pass		8521708	1					
ANR	8521994	Identifier	pass		8521708	0					
ANR	8521995	IfStatement	if ( pw > 0 )		8521708	1					
ANR	8521996	Condition	pw > 0	1487:19:44921:44926	8521708	0	True				
ANR	8521997	RelationalExpression	pw > 0		8521708	0		>			
ANR	8521998	Identifier	pw		8521708	0					
ANR	8521999	PrimaryExpression	0		8521708	1					
ANR	8522000	CompoundStatement		73:18:1847:1858	8521708	1					
ANR	8522001	IdentifierDeclStatement	int digits ;	1489:18:44964:44975	8521708	0	True				
ANR	8522002	IdentifierDecl	digits		8521708	0					
ANR	8522003	IdentifierDeclType	int		8521708	0					
ANR	8522004	Identifier	digits		8521708	1					
ANR	8522005	ExpressionStatement	"digits = uarb_mult_digit ( row_bytes , uarb_set ( row_bytes , 7 ) , row_width , uarb_set ( row_width , pw ) , pd )"	1492:18:45060:45180	8521708	1	True				
ANR	8522006	AssignmentExpression	"digits = uarb_mult_digit ( row_bytes , uarb_set ( row_bytes , 7 ) , row_width , uarb_set ( row_width , pw ) , pd )"		8521708	0		=			
ANR	8522007	Identifier	digits		8521708	0					
ANR	8522008	CallExpression	"uarb_mult_digit ( row_bytes , uarb_set ( row_bytes , 7 ) , row_width , uarb_set ( row_width , pw ) , pd )"		8521708	1					
ANR	8522009	Callee	uarb_mult_digit		8521708	0					
ANR	8522010	Identifier	uarb_mult_digit		8521708	0					
ANR	8522011	ArgumentList	row_bytes		8521708	1					
ANR	8522012	Argument	row_bytes		8521708	0					
ANR	8522013	Identifier	row_bytes		8521708	0					
ANR	8522014	Argument	"uarb_set ( row_bytes , 7 )"		8521708	1					
ANR	8522015	CallExpression	"uarb_set ( row_bytes , 7 )"		8521708	0					
ANR	8522016	Callee	uarb_set		8521708	0					
ANR	8522017	Identifier	uarb_set		8521708	0					
ANR	8522018	ArgumentList	row_bytes		8521708	1					
ANR	8522019	Argument	row_bytes		8521708	0					
ANR	8522020	Identifier	row_bytes		8521708	0					
ANR	8522021	Argument	7		8521708	1					
ANR	8522022	PrimaryExpression	7		8521708	0					
ANR	8522023	Argument	row_width		8521708	2					
ANR	8522024	Identifier	row_width		8521708	0					
ANR	8522025	Argument	"uarb_set ( row_width , pw )"		8521708	3					
ANR	8522026	CallExpression	"uarb_set ( row_width , pw )"		8521708	0					
ANR	8522027	Callee	uarb_set		8521708	0					
ANR	8522028	Identifier	uarb_set		8521708	0					
ANR	8522029	ArgumentList	row_width		8521708	1					
ANR	8522030	Argument	row_width		8521708	0					
ANR	8522031	Identifier	row_width		8521708	0					
ANR	8522032	Argument	pw		8521708	1					
ANR	8522033	Identifier	pw		8521708	0					
ANR	8522034	Argument	pd		8521708	4					
ANR	8522035	Identifier	pd		8521708	0					
ANR	8522036	ExpressionStatement	"digits = uarb_shift ( row_bytes , digits , 3 )"	1494:18:45200:45241	8521708	2	True				
ANR	8522037	AssignmentExpression	"digits = uarb_shift ( row_bytes , digits , 3 )"		8521708	0		=			
ANR	8522038	Identifier	digits		8521708	0					
ANR	8522039	CallExpression	"uarb_shift ( row_bytes , digits , 3 )"		8521708	1					
ANR	8522040	Callee	uarb_shift		8521708	0					
ANR	8522041	Identifier	uarb_shift		8521708	0					
ANR	8522042	ArgumentList	row_bytes		8521708	1					
ANR	8522043	Argument	row_bytes		8521708	0					
ANR	8522044	Identifier	row_bytes		8521708	0					
ANR	8522045	Argument	digits		8521708	1					
ANR	8522046	Identifier	digits		8521708	0					
ANR	8522047	Argument	3		8521708	2					
ANR	8522048	PrimaryExpression	3		8521708	0					
ANR	8522049	ExpressionStatement	"digits = uarb_inc ( row_bytes , digits , 1 )"	1495:18:45261:45300	8521708	3	True				
ANR	8522050	AssignmentExpression	"digits = uarb_inc ( row_bytes , digits , 1 )"		8521708	0		=			
ANR	8522051	Identifier	digits		8521708	0					
ANR	8522052	CallExpression	"uarb_inc ( row_bytes , digits , 1 )"		8521708	1					
ANR	8522053	Callee	uarb_inc		8521708	0					
ANR	8522054	Identifier	uarb_inc		8521708	0					
ANR	8522055	ArgumentList	row_bytes		8521708	1					
ANR	8522056	Argument	row_bytes		8521708	0					
ANR	8522057	Identifier	row_bytes		8521708	0					
ANR	8522058	Argument	digits		8521708	1					
ANR	8522059	Identifier	digits		8521708	0					
ANR	8522060	Argument	1		8521708	2					
ANR	8522061	PrimaryExpression	1		8521708	0					
ANR	8522062	ExpressionStatement	"image_digits = uarb_mult32 ( file -> image_bytes , image_digits , row_bytes , digits , PNG_PASS_ROWS ( file -> height , pass ) )"	1499:18:45422:45577	8521708	4	True				
ANR	8522063	AssignmentExpression	"image_digits = uarb_mult32 ( file -> image_bytes , image_digits , row_bytes , digits , PNG_PASS_ROWS ( file -> height , pass ) )"		8521708	0		=			
ANR	8522064	Identifier	image_digits		8521708	0					
ANR	8522065	CallExpression	"uarb_mult32 ( file -> image_bytes , image_digits , row_bytes , digits , PNG_PASS_ROWS ( file -> height , pass ) )"		8521708	1					
ANR	8522066	Callee	uarb_mult32		8521708	0					
ANR	8522067	Identifier	uarb_mult32		8521708	0					
ANR	8522068	ArgumentList	file -> image_bytes		8521708	1					
ANR	8522069	Argument	file -> image_bytes		8521708	0					
ANR	8522070	PtrMemberAccess	file -> image_bytes		8521708	0					
ANR	8522071	Identifier	file		8521708	0					
ANR	8522072	Identifier	image_bytes		8521708	1					
ANR	8522073	Argument	image_digits		8521708	1					
ANR	8522074	Identifier	image_digits		8521708	0					
ANR	8522075	Argument	row_bytes		8521708	2					
ANR	8522076	Identifier	row_bytes		8521708	0					
ANR	8522077	Argument	digits		8521708	3					
ANR	8522078	Identifier	digits		8521708	0					
ANR	8522079	Argument	"PNG_PASS_ROWS ( file -> height , pass )"		8521708	4					
ANR	8522080	CallExpression	"PNG_PASS_ROWS ( file -> height , pass )"		8521708	0					
ANR	8522081	Callee	PNG_PASS_ROWS		8521708	0					
ANR	8522082	Identifier	PNG_PASS_ROWS		8521708	0					
ANR	8522083	ArgumentList	file -> height		8521708	1					
ANR	8522084	Argument	file -> height		8521708	0					
ANR	8522085	PtrMemberAccess	file -> height		8521708	0					
ANR	8522086	Identifier	file		8521708	0					
ANR	8522087	Identifier	height		8521708	1					
ANR	8522088	Argument	pass		8521708	1					
ANR	8522089	Identifier	pass		8521708	0					
ANR	8522090	ExpressionStatement	file -> image_digits = image_digits	1505:12:45623:45656	8521708	4	True				
ANR	8522091	AssignmentExpression	file -> image_digits = image_digits		8521708	0		=			
ANR	8522092	PtrMemberAccess	file -> image_digits		8521708	0					
ANR	8522093	Identifier	file		8521708	0					
ANR	8522094	Identifier	image_digits		8521708	1					
ANR	8522095	Identifier	image_digits		8521708	1					
ANR	8522096	BreakStatement	break ;	1507:9:45678:45683	8521708	2	True				
ANR	8522097	Label	case PNG_INTERLACE_NONE :	1509:6:45692:45715	8521708	3	True				
ANR	8522098	Identifier	PNG_INTERLACE_NONE		8521708	0					
ANR	8522099	CompoundStatement		96:12:2648:2681	8521708	4					
ANR	8522100	IdentifierDeclStatement	int digits ;	1511:12:45740:45751	8521708	0	True				
ANR	8522101	IdentifierDecl	digits		8521708	0					
ANR	8522102	IdentifierDeclType	int		8521708	0					
ANR	8522103	Identifier	digits		8521708	1					
ANR	8522104	IdentifierDeclStatement	"udigit row_width [ 2 ] , row_bytes [ 3 ] ;"	1512:12:45765:45798	8521708	1	True				
ANR	8522105	IdentifierDecl	row_width [ 2 ]		8521708	0					
ANR	8522106	IdentifierDeclType	udigit [ 2 ]		8521708	0					
ANR	8522107	Identifier	row_width		8521708	1					
ANR	8522108	PrimaryExpression	2		8521708	2					
ANR	8522109	IdentifierDecl	row_bytes [ 3 ]		8521708	1					
ANR	8522110	IdentifierDeclType	udigit [ 3 ]		8521708	0					
ANR	8522111	Identifier	row_bytes		8521708	1					
ANR	8522112	PrimaryExpression	3		8521708	2					
ANR	8522113	ExpressionStatement	"digits = uarb_mult_digit ( row_bytes , uarb_set ( row_bytes , 7 ) , row_width , uarb_set ( row_width , file -> width ) , pd )"	1515:12:45889:46012	8521708	2	True				
ANR	8522114	AssignmentExpression	"digits = uarb_mult_digit ( row_bytes , uarb_set ( row_bytes , 7 ) , row_width , uarb_set ( row_width , file -> width ) , pd )"		8521708	0		=			
ANR	8522115	Identifier	digits		8521708	0					
ANR	8522116	CallExpression	"uarb_mult_digit ( row_bytes , uarb_set ( row_bytes , 7 ) , row_width , uarb_set ( row_width , file -> width ) , pd )"		8521708	1					
ANR	8522117	Callee	uarb_mult_digit		8521708	0					
ANR	8522118	Identifier	uarb_mult_digit		8521708	0					
ANR	8522119	ArgumentList	row_bytes		8521708	1					
ANR	8522120	Argument	row_bytes		8521708	0					
ANR	8522121	Identifier	row_bytes		8521708	0					
ANR	8522122	Argument	"uarb_set ( row_bytes , 7 )"		8521708	1					
ANR	8522123	CallExpression	"uarb_set ( row_bytes , 7 )"		8521708	0					
ANR	8522124	Callee	uarb_set		8521708	0					
ANR	8522125	Identifier	uarb_set		8521708	0					
ANR	8522126	ArgumentList	row_bytes		8521708	1					
ANR	8522127	Argument	row_bytes		8521708	0					
ANR	8522128	Identifier	row_bytes		8521708	0					
ANR	8522129	Argument	7		8521708	1					
ANR	8522130	PrimaryExpression	7		8521708	0					
ANR	8522131	Argument	row_width		8521708	2					
ANR	8522132	Identifier	row_width		8521708	0					
ANR	8522133	Argument	"uarb_set ( row_width , file -> width )"		8521708	3					
ANR	8522134	CallExpression	"uarb_set ( row_width , file -> width )"		8521708	0					
ANR	8522135	Callee	uarb_set		8521708	0					
ANR	8522136	Identifier	uarb_set		8521708	0					
ANR	8522137	ArgumentList	row_width		8521708	1					
ANR	8522138	Argument	row_width		8521708	0					
ANR	8522139	Identifier	row_width		8521708	0					
ANR	8522140	Argument	file -> width		8521708	1					
ANR	8522141	PtrMemberAccess	file -> width		8521708	0					
ANR	8522142	Identifier	file		8521708	0					
ANR	8522143	Identifier	width		8521708	1					
ANR	8522144	Argument	pd		8521708	4					
ANR	8522145	Identifier	pd		8521708	0					
ANR	8522146	ExpressionStatement	"digits = uarb_shift ( row_bytes , digits , 3 )"	1517:12:46026:46067	8521708	3	True				
ANR	8522147	AssignmentExpression	"digits = uarb_shift ( row_bytes , digits , 3 )"		8521708	0		=			
ANR	8522148	Identifier	digits		8521708	0					
ANR	8522149	CallExpression	"uarb_shift ( row_bytes , digits , 3 )"		8521708	1					
ANR	8522150	Callee	uarb_shift		8521708	0					
ANR	8522151	Identifier	uarb_shift		8521708	0					
ANR	8522152	ArgumentList	row_bytes		8521708	1					
ANR	8522153	Argument	row_bytes		8521708	0					
ANR	8522154	Identifier	row_bytes		8521708	0					
ANR	8522155	Argument	digits		8521708	1					
ANR	8522156	Identifier	digits		8521708	0					
ANR	8522157	Argument	3		8521708	2					
ANR	8522158	PrimaryExpression	3		8521708	0					
ANR	8522159	ExpressionStatement	"digits = uarb_inc ( row_bytes , digits , 1 )"	1518:12:46081:46120	8521708	4	True				
ANR	8522160	AssignmentExpression	"digits = uarb_inc ( row_bytes , digits , 1 )"		8521708	0		=			
ANR	8522161	Identifier	digits		8521708	0					
ANR	8522162	CallExpression	"uarb_inc ( row_bytes , digits , 1 )"		8521708	1					
ANR	8522163	Callee	uarb_inc		8521708	0					
ANR	8522164	Identifier	uarb_inc		8521708	0					
ANR	8522165	ArgumentList	row_bytes		8521708	1					
ANR	8522166	Argument	row_bytes		8521708	0					
ANR	8522167	Identifier	row_bytes		8521708	0					
ANR	8522168	Argument	digits		8521708	1					
ANR	8522169	Identifier	digits		8521708	0					
ANR	8522170	Argument	1		8521708	2					
ANR	8522171	PrimaryExpression	1		8521708	0					
ANR	8522172	ExpressionStatement	"file -> image_digits = uarb_mult32 ( file -> image_bytes , 0 , row_bytes , digits , file -> height )"	1521:12:46212:46314	8521708	5	True				
ANR	8522173	AssignmentExpression	"file -> image_digits = uarb_mult32 ( file -> image_bytes , 0 , row_bytes , digits , file -> height )"		8521708	0		=			
ANR	8522174	PtrMemberAccess	file -> image_digits		8521708	0					
ANR	8522175	Identifier	file		8521708	0					
ANR	8522176	Identifier	image_digits		8521708	1					
ANR	8522177	CallExpression	"uarb_mult32 ( file -> image_bytes , 0 , row_bytes , digits , file -> height )"		8521708	1					
ANR	8522178	Callee	uarb_mult32		8521708	0					
ANR	8522179	Identifier	uarb_mult32		8521708	0					
ANR	8522180	ArgumentList	file -> image_bytes		8521708	1					
ANR	8522181	Argument	file -> image_bytes		8521708	0					
ANR	8522182	PtrMemberAccess	file -> image_bytes		8521708	0					
ANR	8522183	Identifier	file		8521708	0					
ANR	8522184	Identifier	image_bytes		8521708	1					
ANR	8522185	Argument	0		8521708	1					
ANR	8522186	PrimaryExpression	0		8521708	0					
ANR	8522187	Argument	row_bytes		8521708	2					
ANR	8522188	Identifier	row_bytes		8521708	0					
ANR	8522189	Argument	digits		8521708	3					
ANR	8522190	Identifier	digits		8521708	0					
ANR	8522191	Argument	file -> height		8521708	4					
ANR	8522192	PtrMemberAccess	file -> height		8521708	0					
ANR	8522193	Identifier	file		8521708	0					
ANR	8522194	Identifier	height		8521708	1					
ANR	8522195	BreakStatement	break ;	1524:9:46336:46341	8521708	5	True				
ANR	8522196	Label	default :	1526:6:46350:46357	8521708	6	True				
ANR	8522197	Identifier	default		8521708	0					
ANR	8522198	ExpressionStatement	"stop_invalid ( file , ""IHDR: interlace method"" )"	1527:9:46368:46412	8521708	7	True				
ANR	8522199	CallExpression	"stop_invalid ( file , ""IHDR: interlace method"" )"		8521708	0					
ANR	8522200	Callee	stop_invalid		8521708	0					
ANR	8522201	Identifier	stop_invalid		8521708	0					
ANR	8522202	ArgumentList	file		8521708	1					
ANR	8522203	Argument	file		8521708	0					
ANR	8522204	Identifier	file		8521708	0					
ANR	8522205	Argument	"""IHDR: interlace method"""		8521708	1					
ANR	8522206	PrimaryExpression	"""IHDR: interlace method"""		8521708	0					
ANR	8522207	ExpressionStatement	assert ( file -> image_digits >= 1 && file -> image_digits <= 5 )	1530:3:46423:46481	8521708	3	True				
ANR	8522208	CallExpression	assert ( file -> image_digits >= 1 && file -> image_digits <= 5 )		8521708	0					
ANR	8522209	Callee	assert		8521708	0					
ANR	8522210	Identifier	assert		8521708	0					
ANR	8522211	ArgumentList	file -> image_digits >= 1 && file -> image_digits <= 5		8521708	1					
ANR	8522212	Argument	file -> image_digits >= 1 && file -> image_digits <= 5		8521708	0					
ANR	8522213	AndExpression	file -> image_digits >= 1 && file -> image_digits <= 5		8521708	0		&&			
ANR	8522214	RelationalExpression	file -> image_digits >= 1		8521708	0		>=			
ANR	8522215	PtrMemberAccess	file -> image_digits		8521708	0					
ANR	8522216	Identifier	file		8521708	0					
ANR	8522217	Identifier	image_digits		8521708	1					
ANR	8522218	PrimaryExpression	1		8521708	1					
ANR	8522219	RelationalExpression	file -> image_digits <= 5		8521708	1		<=			
ANR	8522220	PtrMemberAccess	file -> image_digits		8521708	0					
ANR	8522221	Identifier	file		8521708	0					
ANR	8522222	Identifier	image_digits		8521708	1					
ANR	8522223	PrimaryExpression	5		8521708	1					
ANR	8522224	ReturnStatement	return 1 ;	1531:3:46486:46494	8521708	4	True				
ANR	8522225	PrimaryExpression	1		8521708	0					
ANR	8522226	ReturnType	static int		8521708	1					
ANR	8522227	Identifier	calc_image_size		8521708	2					
ANR	8522228	ParameterList	struct file * file		8521708	3					
ANR	8522229	Parameter	struct file * file	1413:16:42999:43015	8521708	0	True				
ANR	8522230	ParameterType	struct file *		8521708	0					
ANR	8522231	Identifier	file		8521708	1					
ANR	8522232	CFGEntryNode	ENTRY		8521708		True				
ANR	8522233	CFGExitNode	EXIT		8521708		True				
ANR	8522234	Symbol	pw		8521708						
ANR	8522235	Symbol	file -> image_bytes		8521708						
ANR	8522236	Symbol	file		8521708						
ANR	8522237	Symbol	file -> height		8521708						
ANR	8522238	Symbol	row_width		8521708						
ANR	8522239	Symbol	PNG_PASS_COLS		8521708						
ANR	8522240	Symbol	uarb_inc		8521708						
ANR	8522241	Symbol	row_bytes		8521708						
ANR	8522242	Symbol	uarb_set		8521708						
ANR	8522243	Symbol	file -> color_type		8521708						
ANR	8522244	Symbol	file -> compression_method		8521708						
ANR	8522245	Symbol	pass		8521708						
ANR	8522246	Symbol	file -> bit_depth		8521708						
ANR	8522247	Symbol	PNG_PASS_ROWS		8521708						
ANR	8522248	Symbol	file -> interlace_method		8521708						
ANR	8522249	Symbol	uarb_mult32		8521708						
ANR	8522250	Symbol	* file		8521708						
ANR	8522251	Symbol	file -> filter_method		8521708						
ANR	8522252	Symbol	pd		8521708						
ANR	8522253	Symbol	image_digits		8521708						
ANR	8522254	Symbol	uarb_shift		8521708						
ANR	8522255	Symbol	uarb_mult_digit		8521708						
ANR	8522256	Symbol	digits		8521708						
ANR	8522257	Symbol	file -> image_digits		8521708						
ANR	8522258	Symbol	file -> width		8521708						
ANR	8522259	ClassDef	chunk	1539:0:46747:47841							
ANR	8522260	DeclStmt									
ANR	8522261	Decl							struct file	struct file *	file
ANR	8522262	DeclStmt									
ANR	8522263	Decl							struct global	struct global *	global
ANR	8522264	DeclStmt									
ANR	8522265	Decl							udigit	udigit [ 5 ]	uncompressed_bytes
ANR	8522266	DeclStmt									
ANR	8522267	Decl							int	int	uncompressed_digits
ANR	8522268	DeclStmt									
ANR	8522269	Decl							udigit	udigit [ 5 ]	compressed_bytes
ANR	8522270	DeclStmt									
ANR	8522271	Decl							int	int	compressed_digits
ANR	8522272	DeclStmt									
ANR	8522273	Decl							fpos_t	fpos_t	chunk_data_pos
ANR	8522274	DeclStmt									
ANR	8522275	Decl							png_uint_32	png_uint_32	chunk_length
ANR	8522276	DeclStmt									
ANR	8522277	Decl							png_uint_32	png_uint_32	chunk_type
ANR	8522278	DeclStmt									
ANR	8522279	Decl							png_uint_32	png_uint_32	write_crc
ANR	8522280	DeclStmt									
ANR	8522281	Decl							png_uint_32	png_uint_32	rewrite_offset
ANR	8522282	DeclStmt									
ANR	8522283	Decl							int	int	rewrite_length
ANR	8522284	DeclStmt									
ANR	8522285	Decl							png_byte	png_byte [ 2 ]	rewrite_buffer
ANR	8522286	Function	chunk_message	1566:0:47845:47973							
ANR	8522287	FunctionDef	"chunk_message (struct chunk * chunk , const char * message)"		8522286	0					
ANR	8522288	CompoundStatement		1568:0:47913:47973	8522286	0					
ANR	8522289	ExpressionStatement	"type_message ( chunk -> file , chunk -> chunk_type , message )"	1569:3:47918:47971	8522286	0	True				
ANR	8522290	CallExpression	"type_message ( chunk -> file , chunk -> chunk_type , message )"		8522286	0					
ANR	8522291	Callee	type_message		8522286	0					
ANR	8522292	Identifier	type_message		8522286	0					
ANR	8522293	ArgumentList	chunk -> file		8522286	1					
ANR	8522294	Argument	chunk -> file		8522286	0					
ANR	8522295	PtrMemberAccess	chunk -> file		8522286	0					
ANR	8522296	Identifier	chunk		8522286	0					
ANR	8522297	Identifier	file		8522286	1					
ANR	8522298	Argument	chunk -> chunk_type		8522286	1					
ANR	8522299	PtrMemberAccess	chunk -> chunk_type		8522286	0					
ANR	8522300	Identifier	chunk		8522286	0					
ANR	8522301	Identifier	chunk_type		8522286	1					
ANR	8522302	Argument	message		8522286	2					
ANR	8522303	Identifier	message		8522286	0					
ANR	8522304	ReturnType	static void		8522286	1					
ANR	8522305	Identifier	chunk_message		8522286	2					
ANR	8522306	ParameterList	"struct chunk * chunk , const char * message"		8522286	3					
ANR	8522307	Parameter	struct chunk * chunk	1567:14:47871:47889	8522286	0	True				
ANR	8522308	ParameterType	struct chunk *		8522286	0					
ANR	8522309	Identifier	chunk		8522286	1					
ANR	8522310	Parameter	const char * message	1567:35:47892:47910	8522286	1	True				
ANR	8522311	ParameterType	const char *		8522286	0					
ANR	8522312	Identifier	message		8522286	1					
ANR	8522313	CFGEntryNode	ENTRY		8522286		True				
ANR	8522314	CFGExitNode	EXIT		8522286		True				
ANR	8522315	Symbol	* chunk		8522286						
ANR	8522316	Symbol	chunk -> chunk_type		8522286						
ANR	8522317	Symbol	chunk		8522286						
ANR	8522318	Symbol	chunk -> file		8522286						
ANR	8522319	Symbol	message		8522286						
ANR	8522320	Function	chunk_end	1572:0:47976:48104							
ANR	8522321	FunctionDef	chunk_end (struct chunk * * chunk_var)		8522320	0					
ANR	8522322	CompoundStatement		1574:0:48024:48104	8522320	0					
ANR	8522323	IdentifierDeclStatement	struct chunk * chunk = * chunk_var ;	1575:3:48029:48061	8522320	0	True				
ANR	8522324	IdentifierDecl	* chunk = * chunk_var		8522320	0					
ANR	8522325	IdentifierDeclType	struct chunk *		8522320	0					
ANR	8522326	Identifier	chunk		8522320	1					
ANR	8522327	AssignmentExpression	* chunk = * chunk_var		8522320	2		=			
ANR	8522328	Identifier	chunk		8522320	0					
ANR	8522329	UnaryOperationExpression	* chunk_var		8522320	1					
ANR	8522330	UnaryOperator	*		8522320	0					
ANR	8522331	Identifier	chunk_var		8522320	1					
ANR	8522332	ExpressionStatement	* chunk_var = NULL	1577:3:48067:48084	8522320	1	True				
ANR	8522333	AssignmentExpression	* chunk_var = NULL		8522320	0		=			
ANR	8522334	UnaryOperationExpression	* chunk_var		8522320	0					
ANR	8522335	UnaryOperator	*		8522320	0					
ANR	8522336	Identifier	chunk_var		8522320	1					
ANR	8522337	Identifier	NULL		8522320	1					
ANR	8522338	ExpressionStatement	CLEAR ( * chunk )	1578:3:48089:48102	8522320	2	True				
ANR	8522339	CallExpression	CLEAR ( * chunk )		8522320	0					
ANR	8522340	Callee	CLEAR		8522320	0					
ANR	8522341	Identifier	CLEAR		8522320	0					
ANR	8522342	ArgumentList	* chunk		8522320	1					
ANR	8522343	Argument	* chunk		8522320	0					
ANR	8522344	UnaryOperationExpression	* chunk		8522320	0					
ANR	8522345	UnaryOperator	*		8522320	0					
ANR	8522346	Identifier	chunk		8522320	1					
ANR	8522347	ReturnType	static void		8522320	1					
ANR	8522348	Identifier	chunk_end		8522320	2					
ANR	8522349	ParameterList	struct chunk * * chunk_var		8522320	3					
ANR	8522350	Parameter	struct chunk * * chunk_var	1573:10:47998:48021	8522320	0	True				
ANR	8522351	ParameterType	struct chunk * *		8522320	0					
ANR	8522352	Identifier	chunk_var		8522320	1					
ANR	8522353	CFGEntryNode	ENTRY		8522320		True				
ANR	8522354	CFGExitNode	EXIT		8522320		True				
ANR	8522355	Symbol	NULL		8522320						
ANR	8522356	Symbol	* chunk		8522320						
ANR	8522357	Symbol	chunk_var		8522320						
ANR	8522358	Symbol	chunk		8522320						
ANR	8522359	Symbol	* chunk_var		8522320						
ANR	8522360	Function	current_type	1610:0:48959:49815							
ANR	8522361	FunctionDef	"current_type (struct file * file , int code)"		8522360	0					
ANR	8522362	CompoundStatement		1613:0:49078:49815	8522360	0					
ANR	8522363	IfStatement	if ( file -> chunk != NULL )		8522360	0					
ANR	8522364	Condition	file -> chunk != NULL	1619:7:49355:49373	8522360	0	True				
ANR	8522365	EqualityExpression	file -> chunk != NULL		8522360	0		!=			
ANR	8522366	PtrMemberAccess	file -> chunk		8522360	0					
ANR	8522367	Identifier	file		8522360	0					
ANR	8522368	Identifier	chunk		8522360	1					
ANR	8522369	Identifier	NULL		8522360	1					
ANR	8522370	CompoundStatement		9:6:308:350	8522360	1					
ANR	8522371	IdentifierDeclStatement	png_uint_32 type = file -> chunk -> chunk_type ;	1621:6:49387:49429	8522360	0	True				
ANR	8522372	IdentifierDecl	type = file -> chunk -> chunk_type		8522360	0					
ANR	8522373	IdentifierDeclType	png_uint_32		8522360	0					
ANR	8522374	Identifier	type		8522360	1					
ANR	8522375	AssignmentExpression	type = file -> chunk -> chunk_type		8522360	2		=			
ANR	8522376	Identifier	type		8522360	0					
ANR	8522377	PtrMemberAccess	file -> chunk -> chunk_type		8522360	1					
ANR	8522378	PtrMemberAccess	file -> chunk		8522360	0					
ANR	8522379	Identifier	file		8522360	0					
ANR	8522380	Identifier	chunk		8522360	1					
ANR	8522381	Identifier	chunk_type		8522360	1					
ANR	8522382	IfStatement	if ( code <= LIBPNG_ERROR_CODE && type == png_IDAT && file -> write_count == 8 )		8522360	1					
ANR	8522383	Condition	code <= LIBPNG_ERROR_CODE && type == png_IDAT && file -> write_count == 8	1627:10:49643:49722	8522360	0	True				
ANR	8522384	AndExpression	code <= LIBPNG_ERROR_CODE && type == png_IDAT && file -> write_count == 8		8522360	0		&&			
ANR	8522385	RelationalExpression	code <= LIBPNG_ERROR_CODE		8522360	0		<=			
ANR	8522386	Identifier	code		8522360	0					
ANR	8522387	Identifier	LIBPNG_ERROR_CODE		8522360	1					
ANR	8522388	AndExpression	type == png_IDAT && file -> write_count == 8		8522360	1		&&			
ANR	8522389	EqualityExpression	type == png_IDAT		8522360	0		==			
ANR	8522390	Identifier	type		8522360	0					
ANR	8522391	Identifier	png_IDAT		8522360	1					
ANR	8522392	EqualityExpression	file -> write_count == 8		8522360	1		==			
ANR	8522393	PtrMemberAccess	file -> write_count		8522360	0					
ANR	8522394	Identifier	file		8522360	0					
ANR	8522395	Identifier	write_count		8522360	1					
ANR	8522396	PrimaryExpression	8		8522360	1					
ANR	8522397	ExpressionStatement	type = 0	1629:9:49734:49742	8522360	1	True				
ANR	8522398	AssignmentExpression	type = 0		8522360	0		=			
ANR	8522399	Identifier	type		8522360	0					
ANR	8522400	PrimaryExpression	0		8522360	1					
ANR	8522401	ReturnStatement	return type ;	1631:6:49763:49774	8522360	2	True				
ANR	8522402	Identifier	type		8522360	0					
ANR	8522403	ElseStatement	else		8522360	0					
ANR	8522404	ReturnStatement	return file -> type ;	1635:6:49796:49813	8522360	0	True				
ANR	8522405	PtrMemberAccess	file -> type		8522360	0					
ANR	8522406	Identifier	file		8522360	0					
ANR	8522407	Identifier	type		8522360	1					
ANR	8522408	ReturnType	static png_uint_32		8522360	1					
ANR	8522409	Identifier	current_type		8522360	2					
ANR	8522410	ParameterList	"struct file * file , int code"		8522360	3					
ANR	8522411	Parameter	struct file * file	1611:13:48991:49007	8522360	0	True				
ANR	8522412	ParameterType	struct file *		8522360	0					
ANR	8522413	Identifier	file		8522360	1					
ANR	8522414	Parameter	int code	1611:32:49010:49017	8522360	1	True				
ANR	8522415	ParameterType	int		8522360	0					
ANR	8522416	Identifier	code		8522360	1					
ANR	8522417	CFGEntryNode	ENTRY		8522360		True				
ANR	8522418	CFGExitNode	EXIT		8522360		True				
ANR	8522419	Symbol	code		8522360						
ANR	8522420	Symbol	NULL		8522360						
ANR	8522421	Symbol	file -> chunk		8522360						
ANR	8522422	Symbol	* file		8522360						
ANR	8522423	Symbol	type		8522360						
ANR	8522424	Symbol	* file -> chunk		8522360						
ANR	8522425	Symbol	file -> type		8522360						
ANR	8522426	Symbol	file		8522360						
ANR	8522427	Symbol	png_IDAT		8522360						
ANR	8522428	Symbol	file -> chunk -> chunk_type		8522360						
ANR	8522429	Symbol	file -> write_count		8522360						
ANR	8522430	Symbol	LIBPNG_ERROR_CODE		8522360						
ANR	8522431	Symbol	* * file		8522360						
ANR	8522432	Function	setpos	1638:0:49818:50144							
ANR	8522433	FunctionDef	setpos (struct chunk * chunk)		8522432	0					
ANR	8522434	CompoundStatement		1644:0:50057:50144	8522432	0					
ANR	8522435	ExpressionStatement	chunk -> file -> read_count = 8	1645:3:50062:50089	8522432	0	True				
ANR	8522436	AssignmentExpression	chunk -> file -> read_count = 8		8522432	0		=			
ANR	8522437	PtrMemberAccess	chunk -> file -> read_count		8522432	0					
ANR	8522438	PtrMemberAccess	chunk -> file		8522432	0					
ANR	8522439	Identifier	chunk		8522432	0					
ANR	8522440	Identifier	file		8522432	1					
ANR	8522441	Identifier	read_count		8522432	1					
ANR	8522442	PrimaryExpression	8		8522432	1					
ANR	8522443	ExpressionStatement	"file_setpos ( chunk -> file , & chunk -> chunk_data_pos )"	1646:3:50094:50142	8522432	1	True				
ANR	8522444	CallExpression	"file_setpos ( chunk -> file , & chunk -> chunk_data_pos )"		8522432	0					
ANR	8522445	Callee	file_setpos		8522432	0					
ANR	8522446	Identifier	file_setpos		8522432	0					
ANR	8522447	ArgumentList	chunk -> file		8522432	1					
ANR	8522448	Argument	chunk -> file		8522432	0					
ANR	8522449	PtrMemberAccess	chunk -> file		8522432	0					
ANR	8522450	Identifier	chunk		8522432	0					
ANR	8522451	Identifier	file		8522432	1					
ANR	8522452	Argument	& chunk -> chunk_data_pos		8522432	1					
ANR	8522453	UnaryOperationExpression	& chunk -> chunk_data_pos		8522432	0					
ANR	8522454	UnaryOperator	&		8522432	0					
ANR	8522455	PtrMemberAccess	chunk -> chunk_data_pos		8522432	1					
ANR	8522456	Identifier	chunk		8522432	0					
ANR	8522457	Identifier	chunk_data_pos		8522432	1					
ANR	8522458	ReturnType	static void		8522432	1					
ANR	8522459	Identifier	setpos		8522432	2					
ANR	8522460	ParameterList	struct chunk * chunk		8522432	3					
ANR	8522461	Parameter	struct chunk * chunk	1639:7:49837:49855	8522432	0	True				
ANR	8522462	ParameterType	struct chunk *		8522432	0					
ANR	8522463	Identifier	chunk		8522432	1					
ANR	8522464	CFGEntryNode	ENTRY		8522432		True				
ANR	8522465	CFGExitNode	EXIT		8522432		True				
ANR	8522466	Symbol	* chunk		8522432						
ANR	8522467	Symbol	* * chunk		8522432						
ANR	8522468	Symbol	& chunk -> chunk_data_pos		8522432						
ANR	8522469	Symbol	chunk		8522432						
ANR	8522470	Symbol	* chunk -> file		8522432						
ANR	8522471	Symbol	chunk -> file		8522432						
ANR	8522472	Symbol	chunk -> file -> read_count		8522432						
ANR	8522473	DeclStmt									
ANR	8522474	Decl							int	"int ( struct file * file , png_uint_32 offset )"	zlib_check
ANR	8522475	Function	process_zTXt_iCCP	1662:0:50737:51437							
ANR	8522476	FunctionDef	process_zTXt_iCCP (struct file * file)		8522475	0					
ANR	8522477	CompoundStatement		1667:0:50903:51437	8522475	0					
ANR	8522478	IdentifierDeclStatement	struct chunk * chunk = file -> chunk ;	1668:3:50908:50941	8522475	0	True				
ANR	8522479	IdentifierDecl	* chunk = file -> chunk		8522475	0					
ANR	8522480	IdentifierDeclType	struct chunk *		8522475	0					
ANR	8522481	Identifier	chunk		8522475	1					
ANR	8522482	AssignmentExpression	* chunk = file -> chunk		8522475	2		=			
ANR	8522483	Identifier	chunk		8522475	0					
ANR	8522484	PtrMemberAccess	file -> chunk		8522475	1					
ANR	8522485	Identifier	file		8522475	0					
ANR	8522486	Identifier	chunk		8522475	1					
ANR	8522487	IdentifierDeclStatement	png_uint_32 length ;	1669:3:50946:50964	8522475	1	True				
ANR	8522488	IdentifierDecl	length		8522475	0					
ANR	8522489	IdentifierDeclType	png_uint_32		8522475	0					
ANR	8522490	Identifier	length		8522475	1					
ANR	8522491	IdentifierDeclStatement	png_uint_32 index = 0 ;	1670:3:50969:50990	8522475	2	True				
ANR	8522492	IdentifierDecl	index = 0		8522475	0					
ANR	8522493	IdentifierDeclType	png_uint_32		8522475	0					
ANR	8522494	Identifier	index		8522475	1					
ANR	8522495	AssignmentExpression	index = 0		8522475	2		=			
ANR	8522496	Identifier	index		8522475	0					
ANR	8522497	PrimaryExpression	0		8522475	1					
ANR	8522498	ExpressionStatement	assert ( chunk != NULL && file -> idat == NULL )	1672:3:50996:51039	8522475	3	True				
ANR	8522499	CallExpression	assert ( chunk != NULL && file -> idat == NULL )		8522475	0					
ANR	8522500	Callee	assert		8522475	0					
ANR	8522501	Identifier	assert		8522475	0					
ANR	8522502	ArgumentList	chunk != NULL && file -> idat == NULL		8522475	1					
ANR	8522503	Argument	chunk != NULL && file -> idat == NULL		8522475	0					
ANR	8522504	AndExpression	chunk != NULL && file -> idat == NULL		8522475	0		&&			
ANR	8522505	EqualityExpression	chunk != NULL		8522475	0		!=			
ANR	8522506	Identifier	chunk		8522475	0					
ANR	8522507	Identifier	NULL		8522475	1					
ANR	8522508	EqualityExpression	file -> idat == NULL		8522475	1		==			
ANR	8522509	PtrMemberAccess	file -> idat		8522475	0					
ANR	8522510	Identifier	file		8522475	0					
ANR	8522511	Identifier	idat		8522475	1					
ANR	8522512	Identifier	NULL		8522475	1					
ANR	8522513	ExpressionStatement	length = chunk -> chunk_length	1673:3:51044:51072	8522475	4	True				
ANR	8522514	AssignmentExpression	length = chunk -> chunk_length		8522475	0		=			
ANR	8522515	Identifier	length		8522475	0					
ANR	8522516	PtrMemberAccess	chunk -> chunk_length		8522475	1					
ANR	8522517	Identifier	chunk		8522475	0					
ANR	8522518	Identifier	chunk_length		8522475	1					
ANR	8522519	ExpressionStatement	setpos ( chunk )	1674:3:51077:51090	8522475	5	True				
ANR	8522520	CallExpression	setpos ( chunk )		8522475	0					
ANR	8522521	Callee	setpos		8522475	0					
ANR	8522522	Identifier	setpos		8522475	0					
ANR	8522523	ArgumentList	chunk		8522475	1					
ANR	8522524	Argument	chunk		8522475	0					
ANR	8522525	Identifier	chunk		8522475	0					
ANR	8522526	WhileStatement	while ( length >= 9 )		8522475	6					
ANR	8522527	Condition	length >= 9	1676:10:51103:51113	8522475	0	True				
ANR	8522528	RelationalExpression	length >= 9		8522475	0		>=			
ANR	8522529	Identifier	length		8522475	0					
ANR	8522530	PrimaryExpression	9		8522475	1					
ANR	8522531	CompoundStatement		11:3:215:215	8522475	1					
ANR	8522532	ExpressionStatement	-- length	1678:6:51127:51135	8522475	0	True				
ANR	8522533	UnaryExpression	-- length		8522475	0					
ANR	8522534	IncDec	--		8522475	0					
ANR	8522535	Identifier	length		8522475	1					
ANR	8522536	ExpressionStatement	++ index	1679:6:51143:51150	8522475	1	True				
ANR	8522537	UnaryExpression	++ index		8522475	0					
ANR	8522538	IncDec	++		8522475	0					
ANR	8522539	Identifier	index		8522475	1					
ANR	8522540	IfStatement	if ( reread_byte ( file ) == 0 )		8522475	2					
ANR	8522541	Condition	reread_byte ( file ) == 0	1680:10:51162:51183	8522475	0	True				
ANR	8522542	EqualityExpression	reread_byte ( file ) == 0		8522475	0		==			
ANR	8522543	CallExpression	reread_byte ( file )		8522475	0					
ANR	8522544	Callee	reread_byte		8522475	0					
ANR	8522545	Identifier	reread_byte		8522475	0					
ANR	8522546	ArgumentList	file		8522475	1					
ANR	8522547	Argument	file		8522475	0					
ANR	8522548	Identifier	file		8522475	0					
ANR	8522549	PrimaryExpression	0		8522475	1					
ANR	8522550	CompoundStatement		15:6:318:318	8522475	1					
ANR	8522551	ExpressionStatement	-- length	1682:9:51233:51241	8522475	0	True				
ANR	8522552	UnaryExpression	-- length		8522475	0					
ANR	8522553	IncDec	--		8522475	0					
ANR	8522554	Identifier	length		8522475	1					
ANR	8522555	ExpressionStatement	++ index	1683:9:51252:51259	8522475	1	True				
ANR	8522556	UnaryExpression	++ index		8522475	0					
ANR	8522557	IncDec	++		8522475	0					
ANR	8522558	Identifier	index		8522475	1					
ANR	8522559	ExpressionStatement	( void ) reread_byte ( file )	1684:9:51270:51293	8522475	2	True				
ANR	8522560	CastExpression	( void ) reread_byte ( file )		8522475	0					
ANR	8522561	CastTarget	void		8522475	0					
ANR	8522562	CallExpression	reread_byte ( file )		8522475	1					
ANR	8522563	Callee	reread_byte		8522475	0					
ANR	8522564	Identifier	reread_byte		8522475	0					
ANR	8522565	ArgumentList	file		8522475	1					
ANR	8522566	Argument	file		8522475	0					
ANR	8522567	Identifier	file		8522475	0					
ANR	8522568	ReturnStatement	"return zlib_check ( file , index ) ;"	1685:9:51329:51359	8522475	3	True				
ANR	8522569	CallExpression	"zlib_check ( file , index )"		8522475	0					
ANR	8522570	Callee	zlib_check		8522475	0					
ANR	8522571	Identifier	zlib_check		8522475	0					
ANR	8522572	ArgumentList	file		8522475	1					
ANR	8522573	Argument	file		8522475	0					
ANR	8522574	Identifier	file		8522475	0					
ANR	8522575	Argument	index		8522475	1					
ANR	8522576	Identifier	index		8522475	0					
ANR	8522577	ExpressionStatement	"chunk_message ( chunk , ""too short"" )"	1689:3:51378:51411	8522475	7	True				
ANR	8522578	CallExpression	"chunk_message ( chunk , ""too short"" )"		8522475	0					
ANR	8522579	Callee	chunk_message		8522475	0					
ANR	8522580	Identifier	chunk_message		8522475	0					
ANR	8522581	ArgumentList	chunk		8522475	1					
ANR	8522582	Argument	chunk		8522475	0					
ANR	8522583	Identifier	chunk		8522475	0					
ANR	8522584	Argument	"""too short"""		8522475	1					
ANR	8522585	PrimaryExpression	"""too short"""		8522475	0					
ANR	8522586	ReturnStatement	return 0 ;	1690:3:51416:51424	8522475	8	True				
ANR	8522587	PrimaryExpression	0		8522475	0					
ANR	8522588	ReturnType	static int		8522475	1					
ANR	8522589	Identifier	process_zTXt_iCCP		8522475	2					
ANR	8522590	ParameterList	struct file * file		8522475	3					
ANR	8522591	Parameter	struct file * file	1663:18:50766:50782	8522475	0	True				
ANR	8522592	ParameterType	struct file *		8522475	0					
ANR	8522593	Identifier	file		8522475	1					
ANR	8522594	CFGEntryNode	ENTRY		8522475		True				
ANR	8522595	CFGExitNode	EXIT		8522475		True				
ANR	8522596	Symbol	file		8522475						
ANR	8522597	Symbol	NULL		8522475						
ANR	8522598	Symbol	* chunk		8522475						
ANR	8522599	Symbol	reread_byte		8522475						
ANR	8522600	Symbol	file -> idat		8522475						
ANR	8522601	Symbol	file -> chunk		8522475						
ANR	8522602	Symbol	length		8522475						
ANR	8522603	Symbol	chunk		8522475						
ANR	8522604	Symbol	index		8522475						
ANR	8522605	Symbol	zlib_check		8522475						
ANR	8522606	Symbol	* file		8522475						
ANR	8522607	Symbol	chunk -> chunk_length		8522475						
ANR	8522608	Function	process_iTXt	1693:0:51440:52778							
ANR	8522609	FunctionDef	process_iTXt (struct file * file)		8522608	0					
ANR	8522610	CompoundStatement		1695:0:51483:52778	8522608	0					
ANR	8522611	IdentifierDeclStatement	struct chunk * chunk = file -> chunk ;	1697:3:51524:51557	8522608	0	True				
ANR	8522612	IdentifierDecl	* chunk = file -> chunk		8522608	0					
ANR	8522613	IdentifierDeclType	struct chunk *		8522608	0					
ANR	8522614	Identifier	chunk		8522608	1					
ANR	8522615	AssignmentExpression	* chunk = file -> chunk		8522608	2		=			
ANR	8522616	Identifier	chunk		8522608	0					
ANR	8522617	PtrMemberAccess	file -> chunk		8522608	1					
ANR	8522618	Identifier	file		8522608	0					
ANR	8522619	Identifier	chunk		8522608	1					
ANR	8522620	IdentifierDeclStatement	png_uint_32 length ;	1698:3:51562:51580	8522608	1	True				
ANR	8522621	IdentifierDecl	length		8522608	0					
ANR	8522622	IdentifierDeclType	png_uint_32		8522608	0					
ANR	8522623	Identifier	length		8522608	1					
ANR	8522624	IdentifierDeclStatement	png_uint_32 index = 0 ;	1699:3:51585:51606	8522608	2	True				
ANR	8522625	IdentifierDecl	index = 0		8522608	0					
ANR	8522626	IdentifierDeclType	png_uint_32		8522608	0					
ANR	8522627	Identifier	index		8522608	1					
ANR	8522628	AssignmentExpression	index = 0		8522608	2		=			
ANR	8522629	Identifier	index		8522608	0					
ANR	8522630	PrimaryExpression	0		8522608	1					
ANR	8522631	ExpressionStatement	assert ( chunk != NULL && file -> idat == NULL )	1701:3:51612:51655	8522608	3	True				
ANR	8522632	CallExpression	assert ( chunk != NULL && file -> idat == NULL )		8522608	0					
ANR	8522633	Callee	assert		8522608	0					
ANR	8522634	Identifier	assert		8522608	0					
ANR	8522635	ArgumentList	chunk != NULL && file -> idat == NULL		8522608	1					
ANR	8522636	Argument	chunk != NULL && file -> idat == NULL		8522608	0					
ANR	8522637	AndExpression	chunk != NULL && file -> idat == NULL		8522608	0		&&			
ANR	8522638	EqualityExpression	chunk != NULL		8522608	0		!=			
ANR	8522639	Identifier	chunk		8522608	0					
ANR	8522640	Identifier	NULL		8522608	1					
ANR	8522641	EqualityExpression	file -> idat == NULL		8522608	1		==			
ANR	8522642	PtrMemberAccess	file -> idat		8522608	0					
ANR	8522643	Identifier	file		8522608	0					
ANR	8522644	Identifier	idat		8522608	1					
ANR	8522645	Identifier	NULL		8522608	1					
ANR	8522646	ExpressionStatement	length = chunk -> chunk_length	1702:3:51660:51688	8522608	4	True				
ANR	8522647	AssignmentExpression	length = chunk -> chunk_length		8522608	0		=			
ANR	8522648	Identifier	length		8522608	0					
ANR	8522649	PtrMemberAccess	chunk -> chunk_length		8522608	1					
ANR	8522650	Identifier	chunk		8522608	0					
ANR	8522651	Identifier	chunk_length		8522608	1					
ANR	8522652	ExpressionStatement	setpos ( chunk )	1703:3:51693:51706	8522608	5	True				
ANR	8522653	CallExpression	setpos ( chunk )		8522608	0					
ANR	8522654	Callee	setpos		8522608	0					
ANR	8522655	Identifier	setpos		8522608	0					
ANR	8522656	ArgumentList	chunk		8522608	1					
ANR	8522657	Argument	chunk		8522608	0					
ANR	8522658	Identifier	chunk		8522608	0					
ANR	8522659	WhileStatement	while ( length >= 5 )		8522608	6					
ANR	8522660	Condition	length >= 5	1705:10:51719:51729	8522608	0	True				
ANR	8522661	RelationalExpression	length >= 5		8522608	0		>=			
ANR	8522662	Identifier	length		8522608	0					
ANR	8522663	PrimaryExpression	5		8522608	1					
ANR	8522664	CompoundStatement		12:3:251:251	8522608	1					
ANR	8522665	ExpressionStatement	-- length	1707:6:51743:51751	8522608	0	True				
ANR	8522666	UnaryExpression	-- length		8522608	0					
ANR	8522667	IncDec	--		8522608	0					
ANR	8522668	Identifier	length		8522608	1					
ANR	8522669	ExpressionStatement	++ index	1708:6:51759:51766	8522608	1	True				
ANR	8522670	UnaryExpression	++ index		8522608	0					
ANR	8522671	IncDec	++		8522608	0					
ANR	8522672	Identifier	index		8522608	1					
ANR	8522673	IfStatement	if ( reread_byte ( file ) == 0 )		8522608	2					
ANR	8522674	Condition	reread_byte ( file ) == 0	1709:10:51778:51799	8522608	0	True				
ANR	8522675	EqualityExpression	reread_byte ( file ) == 0		8522608	0		==			
ANR	8522676	CallExpression	reread_byte ( file )		8522608	0					
ANR	8522677	Callee	reread_byte		8522608	0					
ANR	8522678	Identifier	reread_byte		8522608	0					
ANR	8522679	ArgumentList	file		8522608	1					
ANR	8522680	Argument	file		8522608	0					
ANR	8522681	Identifier	file		8522608	0					
ANR	8522682	PrimaryExpression	0		8522608	1					
ANR	8522683	CompoundStatement		16:6:354:354	8522608	1					
ANR	8522684	ExpressionStatement	-- length	1711:9:51849:51857	8522608	0	True				
ANR	8522685	UnaryExpression	-- length		8522608	0					
ANR	8522686	IncDec	--		8522608	0					
ANR	8522687	Identifier	length		8522608	1					
ANR	8522688	ExpressionStatement	++ index	1712:9:51868:51875	8522608	1	True				
ANR	8522689	UnaryExpression	++ index		8522608	0					
ANR	8522690	IncDec	++		8522608	0					
ANR	8522691	Identifier	index		8522608	1					
ANR	8522692	IfStatement	if ( reread_byte ( file ) == 0 )		8522608	2					
ANR	8522693	Condition	reread_byte ( file ) == 0	1713:13:51890:51911	8522608	0	True				
ANR	8522694	EqualityExpression	reread_byte ( file ) == 0		8522608	0		==			
ANR	8522695	CallExpression	reread_byte ( file )		8522608	0					
ANR	8522696	Callee	reread_byte		8522608	0					
ANR	8522697	Identifier	reread_byte		8522608	0					
ANR	8522698	ArgumentList	file		8522608	1					
ANR	8522699	Argument	file		8522608	0					
ANR	8522700	Identifier	file		8522608	0					
ANR	8522701	PrimaryExpression	0		8522608	1					
ANR	8522702	ReturnStatement	return 1 ;	1714:12:51950:51958	8522608	1	True				
ANR	8522703	PrimaryExpression	1		8522608	0					
ANR	8522704	ExpressionStatement	-- length	1716:9:51993:52001	8522608	3	True				
ANR	8522705	UnaryExpression	-- length		8522608	0					
ANR	8522706	IncDec	--		8522608	0					
ANR	8522707	Identifier	length		8522608	1					
ANR	8522708	ExpressionStatement	++ index	1717:9:52012:52019	8522608	4	True				
ANR	8522709	UnaryExpression	++ index		8522608	0					
ANR	8522710	IncDec	++		8522608	0					
ANR	8522711	Identifier	index		8522608	1					
ANR	8522712	ExpressionStatement	( void ) reread_byte ( file )	1718:9:52030:52053	8522608	5	True				
ANR	8522713	CastExpression	( void ) reread_byte ( file )		8522608	0					
ANR	8522714	CastTarget	void		8522608	0					
ANR	8522715	CallExpression	reread_byte ( file )		8522608	1					
ANR	8522716	Callee	reread_byte		8522608	0					
ANR	8522717	Identifier	reread_byte		8522608	0					
ANR	8522718	ArgumentList	file		8522608	1					
ANR	8522719	Argument	file		8522608	0					
ANR	8522720	Identifier	file		8522608	0					
ANR	8522721	WhileStatement	while ( length >= 9 )		8522608	6					
ANR	8522722	Condition	length >= 9	1721:16:52153:52163	8522608	0	True				
ANR	8522723	RelationalExpression	length >= 9		8522608	0		>=			
ANR	8522724	Identifier	length		8522608	0					
ANR	8522725	PrimaryExpression	9		8522608	1					
ANR	8522726	CompoundStatement		28:9:691:691	8522608	1					
ANR	8522727	ExpressionStatement	-- length	1723:12:52189:52197	8522608	0	True				
ANR	8522728	UnaryExpression	-- length		8522608	0					
ANR	8522729	IncDec	--		8522608	0					
ANR	8522730	Identifier	length		8522608	1					
ANR	8522731	ExpressionStatement	++ index	1724:12:52211:52218	8522608	1	True				
ANR	8522732	UnaryExpression	++ index		8522608	0					
ANR	8522733	IncDec	++		8522608	0					
ANR	8522734	Identifier	index		8522608	1					
ANR	8522735	IfStatement	if ( reread_byte ( file ) == 0 )		8522608	2					
ANR	8522736	Condition	reread_byte ( file ) == 0	1725:16:52236:52257	8522608	0	True				
ANR	8522737	EqualityExpression	reread_byte ( file ) == 0		8522608	0		==			
ANR	8522738	CallExpression	reread_byte ( file )		8522608	0					
ANR	8522739	Callee	reread_byte		8522608	0					
ANR	8522740	Identifier	reread_byte		8522608	0					
ANR	8522741	ArgumentList	file		8522608	1					
ANR	8522742	Argument	file		8522608	0					
ANR	8522743	Identifier	file		8522608	0					
ANR	8522744	PrimaryExpression	0		8522608	1					
ANR	8522745	CompoundStatement		32:12:805:805	8522608	1					
ANR	8522746	WhileStatement	while ( length >= 8 )		8522608	0					
ANR	8522747	Condition	length >= 8	1728:22:52362:52372	8522608	0	True				
ANR	8522748	RelationalExpression	length >= 8		8522608	0		>=			
ANR	8522749	Identifier	length		8522608	0					
ANR	8522750	PrimaryExpression	8		8522608	1					
ANR	8522751	CompoundStatement		35:15:906:906	8522608	1					
ANR	8522752	ExpressionStatement	-- length	1730:18:52410:52418	8522608	0	True				
ANR	8522753	UnaryExpression	-- length		8522608	0					
ANR	8522754	IncDec	--		8522608	0					
ANR	8522755	Identifier	length		8522608	1					
ANR	8522756	ExpressionStatement	++ index	1731:18:52438:52445	8522608	1	True				
ANR	8522757	UnaryExpression	++ index		8522608	0					
ANR	8522758	IncDec	++		8522608	0					
ANR	8522759	Identifier	index		8522608	1					
ANR	8522760	IfStatement	if ( reread_byte ( file ) == 0 )		8522608	2					
ANR	8522761	Condition	reread_byte ( file ) == 0	1732:22:52469:52490	8522608	0	True				
ANR	8522762	EqualityExpression	reread_byte ( file ) == 0		8522608	0		==			
ANR	8522763	CallExpression	reread_byte ( file )		8522608	0					
ANR	8522764	Callee	reread_byte		8522608	0					
ANR	8522765	Identifier	reread_byte		8522608	0					
ANR	8522766	ArgumentList	file		8522608	1					
ANR	8522767	Argument	file		8522608	0					
ANR	8522768	Identifier	file		8522608	0					
ANR	8522769	PrimaryExpression	0		8522608	1					
ANR	8522770	ReturnStatement	"return zlib_check ( file , index ) ;"	1733:21:52531:52561	8522608	1	True				
ANR	8522771	CallExpression	"zlib_check ( file , index )"		8522608	0					
ANR	8522772	Callee	zlib_check		8522608	0					
ANR	8522773	Identifier	zlib_check		8522608	0					
ANR	8522774	ArgumentList	file		8522608	1					
ANR	8522775	Argument	file		8522608	0					
ANR	8522776	Identifier	file		8522608	0					
ANR	8522777	Argument	index		8522608	1					
ANR	8522778	Identifier	index		8522608	0					
ANR	8522779	BreakStatement	break ;	1739:9:52671:52676	8522608	7	True				
ANR	8522780	ExpressionStatement	"log_error ( file , INVALID_ERROR_CODE , ""iTXt chunk length"" )"	1743:3:52695:52751	8522608	7	True				
ANR	8522781	CallExpression	"log_error ( file , INVALID_ERROR_CODE , ""iTXt chunk length"" )"		8522608	0					
ANR	8522782	Callee	log_error		8522608	0					
ANR	8522783	Identifier	log_error		8522608	0					
ANR	8522784	ArgumentList	file		8522608	1					
ANR	8522785	Argument	file		8522608	0					
ANR	8522786	Identifier	file		8522608	0					
ANR	8522787	Argument	INVALID_ERROR_CODE		8522608	1					
ANR	8522788	Identifier	INVALID_ERROR_CODE		8522608	0					
ANR	8522789	Argument	"""iTXt chunk length"""		8522608	2					
ANR	8522790	PrimaryExpression	"""iTXt chunk length"""		8522608	0					
ANR	8522791	ReturnStatement	return 0 ;	1745:3:52757:52765	8522608	8	True				
ANR	8522792	PrimaryExpression	0		8522608	0					
ANR	8522793	ReturnType	static int		8522608	1					
ANR	8522794	Identifier	process_iTXt		8522608	2					
ANR	8522795	ParameterList	struct file * file		8522608	3					
ANR	8522796	Parameter	struct file * file	1694:13:51464:51480	8522608	0	True				
ANR	8522797	ParameterType	struct file *		8522608	0					
ANR	8522798	Identifier	file		8522608	1					
ANR	8522799	CFGEntryNode	ENTRY		8522608		True				
ANR	8522800	CFGExitNode	EXIT		8522608		True				
ANR	8522801	Symbol	NULL		8522608						
ANR	8522802	Symbol	file -> chunk		8522608						
ANR	8522803	Symbol	length		8522608						
ANR	8522804	Symbol	chunk		8522608						
ANR	8522805	Symbol	index		8522608						
ANR	8522806	Symbol	zlib_check		8522608						
ANR	8522807	Symbol	* file		8522608						
ANR	8522808	Symbol	INVALID_ERROR_CODE		8522608						
ANR	8522809	Symbol	file		8522608						
ANR	8522810	Symbol	* chunk		8522608						
ANR	8522811	Symbol	reread_byte		8522608						
ANR	8522812	Symbol	file -> idat		8522608						
ANR	8522813	Symbol	chunk -> chunk_length		8522608						
ANR	8522814	ClassDef	IDAT	1749:0:52821:53505							
ANR	8522815	DeclStmt									
ANR	8522816	Decl							struct file	struct file *	file
ANR	8522817	DeclStmt									
ANR	8522818	Decl							struct global	struct global *	global
ANR	8522819	DeclStmt									
ANR	8522820	Decl							struct IDAT_list	struct IDAT_list *	idat_list_head
ANR	8522821	DeclStmt									
ANR	8522822	Decl							struct IDAT_list	struct IDAT_list *	idat_list_tail
ANR	8522823	DeclStmt									
ANR	8522824	Decl							struct IDAT_list	struct IDAT_list *	idat_cur
ANR	8522825	DeclStmt									
ANR	8522826	Decl							unsigned int	unsigned int	idat_count
ANR	8522827	DeclStmt									
ANR	8522828	Decl							png_uint_32	png_uint_32	idat_index
ANR	8522829	DeclStmt									
ANR	8522830	Decl							png_uint_32	png_uint_32	idat_length
ANR	8522831	Function	IDAT_end	1770:0:53644:54130							
ANR	8522832	FunctionDef	IDAT_end (struct IDAT * * idat_var)		8522831	0					
ANR	8522833	CompoundStatement		1772:0:53689:54130	8522831	0					
ANR	8522834	IdentifierDeclStatement	struct IDAT * idat = * idat_var ;	1773:3:53694:53723	8522831	0	True				
ANR	8522835	IdentifierDecl	* idat = * idat_var		8522831	0					
ANR	8522836	IdentifierDeclType	struct IDAT *		8522831	0					
ANR	8522837	Identifier	idat		8522831	1					
ANR	8522838	AssignmentExpression	* idat = * idat_var		8522831	2		=			
ANR	8522839	Identifier	idat		8522831	0					
ANR	8522840	UnaryOperationExpression	* idat_var		8522831	1					
ANR	8522841	UnaryOperator	*		8522831	0					
ANR	8522842	Identifier	idat_var		8522831	1					
ANR	8522843	IdentifierDeclStatement	struct file * file = idat -> file ;	1774:3:53728:53758	8522831	1	True				
ANR	8522844	IdentifierDecl	* file = idat -> file		8522831	0					
ANR	8522845	IdentifierDeclType	struct file *		8522831	0					
ANR	8522846	Identifier	file		8522831	1					
ANR	8522847	AssignmentExpression	* file = idat -> file		8522831	2		=			
ANR	8522848	Identifier	file		8522831	0					
ANR	8522849	PtrMemberAccess	idat -> file		8522831	1					
ANR	8522850	Identifier	idat		8522831	0					
ANR	8522851	Identifier	file		8522831	1					
ANR	8522852	ExpressionStatement	* idat_var = NULL	1776:3:53764:53780	8522831	2	True				
ANR	8522853	AssignmentExpression	* idat_var = NULL		8522831	0		=			
ANR	8522854	UnaryOperationExpression	* idat_var		8522831	0					
ANR	8522855	UnaryOperator	*		8522831	0					
ANR	8522856	Identifier	idat_var		8522831	1					
ANR	8522857	Identifier	NULL		8522831	1					
ANR	8522858	ExpressionStatement	CLEAR ( * idat )	1778:3:53786:53798	8522831	3	True				
ANR	8522859	CallExpression	CLEAR ( * idat )		8522831	0					
ANR	8522860	Callee	CLEAR		8522831	0					
ANR	8522861	Identifier	CLEAR		8522831	0					
ANR	8522862	ArgumentList	* idat		8522831	1					
ANR	8522863	Argument	* idat		8522831	0					
ANR	8522864	UnaryOperationExpression	* idat		8522831	0					
ANR	8522865	UnaryOperator	*		8522831	0					
ANR	8522866	Identifier	idat		8522831	1					
ANR	8522867	ExpressionStatement	assert ( file -> chunk != NULL )	1780:3:53804:53831	8522831	4	True				
ANR	8522868	CallExpression	assert ( file -> chunk != NULL )		8522831	0					
ANR	8522869	Callee	assert		8522831	0					
ANR	8522870	Identifier	assert		8522831	0					
ANR	8522871	ArgumentList	file -> chunk != NULL		8522831	1					
ANR	8522872	Argument	file -> chunk != NULL		8522831	0					
ANR	8522873	EqualityExpression	file -> chunk != NULL		8522831	0		!=			
ANR	8522874	PtrMemberAccess	file -> chunk		8522831	0					
ANR	8522875	Identifier	file		8522831	0					
ANR	8522876	Identifier	chunk		8522831	1					
ANR	8522877	Identifier	NULL		8522831	1					
ANR	8522878	ExpressionStatement	chunk_end ( & file -> chunk )	1781:3:53836:53859	8522831	5	True				
ANR	8522879	CallExpression	chunk_end ( & file -> chunk )		8522831	0					
ANR	8522880	Callee	chunk_end		8522831	0					
ANR	8522881	Identifier	chunk_end		8522831	0					
ANR	8522882	ArgumentList	& file -> chunk		8522831	1					
ANR	8522883	Argument	& file -> chunk		8522831	0					
ANR	8522884	UnaryOperationExpression	& file -> chunk		8522831	0					
ANR	8522885	UnaryOperator	&		8522831	0					
ANR	8522886	PtrMemberAccess	file -> chunk		8522831	1					
ANR	8522887	Identifier	file		8522831	0					
ANR	8522888	Identifier	chunk		8522831	1					
ANR	8522889	ExpressionStatement	file -> state = STATE_CHUNKS	1787:3:54102:54128	8522831	6	True				
ANR	8522890	AssignmentExpression	file -> state = STATE_CHUNKS		8522831	0		=			
ANR	8522891	PtrMemberAccess	file -> state		8522831	0					
ANR	8522892	Identifier	file		8522831	0					
ANR	8522893	Identifier	state		8522831	1					
ANR	8522894	Identifier	STATE_CHUNKS		8522831	1					
ANR	8522895	ReturnType	static void		8522831	1					
ANR	8522896	Identifier	IDAT_end		8522831	2					
ANR	8522897	ParameterList	struct IDAT * * idat_var		8522831	3					
ANR	8522898	Parameter	struct IDAT * * idat_var	1771:9:53665:53686	8522831	0	True				
ANR	8522899	ParameterType	struct IDAT * *		8522831	0					
ANR	8522900	Identifier	idat_var		8522831	1					
ANR	8522901	CFGEntryNode	ENTRY		8522831		True				
ANR	8522902	CFGExitNode	EXIT		8522831		True				
ANR	8522903	Symbol	file		8522831						
ANR	8522904	Symbol	NULL		8522831						
ANR	8522905	Symbol	STATE_CHUNKS		8522831						
ANR	8522906	Symbol	idat_var		8522831						
ANR	8522907	Symbol	* idat_var		8522831						
ANR	8522908	Symbol	file -> state		8522831						
ANR	8522909	Symbol	file -> chunk		8522831						
ANR	8522910	Symbol	* idat		8522831						
ANR	8522911	Symbol	* file		8522831						
ANR	8522912	Symbol	& file -> chunk		8522831						
ANR	8522913	Symbol	idat		8522831						
ANR	8522914	Symbol	idat -> file		8522831						
ANR	8522915	Function	rechunk_length	1825:0:55169:57378							
ANR	8522916	FunctionDef	"rechunk_length (struct IDAT * idat , int start)"		8522915	0					
ANR	8522917	CompoundStatement		1830:0:55327:57378	8522915	0					
ANR	8522918	IdentifierDeclStatement	png_uint_32 len = idat -> global -> idat_max ;	1831:3:55332:55372	8522915	0	True				
ANR	8522919	IdentifierDecl	len = idat -> global -> idat_max		8522915	0					
ANR	8522920	IdentifierDeclType	png_uint_32		8522915	0					
ANR	8522921	Identifier	len		8522915	1					
ANR	8522922	AssignmentExpression	len = idat -> global -> idat_max		8522915	2		=			
ANR	8522923	Identifier	len		8522915	0					
ANR	8522924	PtrMemberAccess	idat -> global -> idat_max		8522915	1					
ANR	8522925	PtrMemberAccess	idat -> global		8522915	0					
ANR	8522926	Identifier	idat		8522915	0					
ANR	8522927	Identifier	global		8522915	1					
ANR	8522928	Identifier	idat_max		8522915	1					
ANR	8522929	IfStatement	if ( len == 0 )		8522915	1					
ANR	8522930	Condition	len == 0	1833:7:55382:55389	8522915	0	True				
ANR	8522931	EqualityExpression	len == 0		8522915	0		==			
ANR	8522932	Identifier	len		8522915	0					
ANR	8522933	PrimaryExpression	0		8522915	1					
ANR	8522934	CompoundStatement		7:6:143:161	8522915	1					
ANR	8522935	IdentifierDeclStatement	const struct IDAT_list * cur ;	1835:6:55436:55463	8522915	0	True				
ANR	8522936	IdentifierDecl	* cur		8522915	0					
ANR	8522937	IdentifierDeclType	const struct IDAT_list *		8522915	0					
ANR	8522938	Identifier	cur		8522915	1					
ANR	8522939	IdentifierDeclStatement	unsigned int count ;	1836:6:55471:55489	8522915	1	True				
ANR	8522940	IdentifierDecl	count		8522915	0					
ANR	8522941	IdentifierDeclType	unsigned int		8522915	0					
ANR	8522942	Identifier	count		8522915	1					
ANR	8522943	IfStatement	if ( start )		8522915	2					
ANR	8522944	Condition	start	1838:10:55502:55506	8522915	0	True				
ANR	8522945	Identifier	start		8522915	0					
ANR	8522946	ReturnStatement	return idat -> idat_length ;	1839:9:55518:55542	8522915	1	True				
ANR	8522947	PtrMemberAccess	idat -> idat_length		8522915	0					
ANR	8522948	Identifier	idat		8522915	0					
ANR	8522949	Identifier	idat_length		8522915	1					
ANR	8522950	ExpressionStatement	cur = idat -> idat_cur	1844:6:55688:55708	8522915	3	True				
ANR	8522951	AssignmentExpression	cur = idat -> idat_cur		8522915	0		=			
ANR	8522952	Identifier	cur		8522915	0					
ANR	8522953	PtrMemberAccess	idat -> idat_cur		8522915	1					
ANR	8522954	Identifier	idat		8522915	0					
ANR	8522955	Identifier	idat_cur		8522915	1					
ANR	8522956	ExpressionStatement	count = idat -> idat_count	1845:6:55716:55740	8522915	4	True				
ANR	8522957	AssignmentExpression	count = idat -> idat_count		8522915	0		=			
ANR	8522958	Identifier	count		8522915	0					
ANR	8522959	PtrMemberAccess	idat -> idat_count		8522915	1					
ANR	8522960	Identifier	idat		8522915	0					
ANR	8522961	Identifier	idat_count		8522915	1					
ANR	8522962	ExpressionStatement	assert ( idat -> idat_index == idat -> idat_length && idat -> idat_length == cur -> lengths [ count ] )	1847:6:55749:55847	8522915	5	True				
ANR	8522963	CallExpression	assert ( idat -> idat_index == idat -> idat_length && idat -> idat_length == cur -> lengths [ count ] )		8522915	0					
ANR	8522964	Callee	assert		8522915	0					
ANR	8522965	Identifier	assert		8522915	0					
ANR	8522966	ArgumentList	idat -> idat_index == idat -> idat_length && idat -> idat_length == cur -> lengths [ count ]		8522915	1					
ANR	8522967	Argument	idat -> idat_index == idat -> idat_length && idat -> idat_length == cur -> lengths [ count ]		8522915	0					
ANR	8522968	AndExpression	idat -> idat_index == idat -> idat_length && idat -> idat_length == cur -> lengths [ count ]		8522915	0		&&			
ANR	8522969	EqualityExpression	idat -> idat_index == idat -> idat_length		8522915	0		==			
ANR	8522970	PtrMemberAccess	idat -> idat_index		8522915	0					
ANR	8522971	Identifier	idat		8522915	0					
ANR	8522972	Identifier	idat_index		8522915	1					
ANR	8522973	PtrMemberAccess	idat -> idat_length		8522915	1					
ANR	8522974	Identifier	idat		8522915	0					
ANR	8522975	Identifier	idat_length		8522915	1					
ANR	8522976	EqualityExpression	idat -> idat_length == cur -> lengths [ count ]		8522915	1		==			
ANR	8522977	PtrMemberAccess	idat -> idat_length		8522915	0					
ANR	8522978	Identifier	idat		8522915	0					
ANR	8522979	Identifier	idat_length		8522915	1					
ANR	8522980	ArrayIndexing	cur -> lengths [ count ]		8522915	1					
ANR	8522981	PtrMemberAccess	cur -> lengths		8522915	0					
ANR	8522982	Identifier	cur		8522915	0					
ANR	8522983	Identifier	lengths		8522915	1					
ANR	8522984	Identifier	count		8522915	1					
ANR	8522985	IfStatement	if ( ++ count < cur -> count )		8522915	6					
ANR	8522986	Condition	++ count < cur -> count	1851:10:55906:55925	8522915	0	True				
ANR	8522987	RelationalExpression	++ count < cur -> count		8522915	0		<			
ANR	8522988	UnaryExpression	++ count		8522915	0					
ANR	8522989	IncDec	++		8522915	0					
ANR	8522990	Identifier	count		8522915	1					
ANR	8522991	PtrMemberAccess	cur -> count		8522915	1					
ANR	8522992	Identifier	cur		8522915	0					
ANR	8522993	Identifier	count		8522915	1					
ANR	8522994	ReturnStatement	return cur -> lengths [ count ] ;	1852:9:55937:55963	8522915	1	True				
ANR	8522995	ArrayIndexing	cur -> lengths [ count ]		8522915	0					
ANR	8522996	PtrMemberAccess	cur -> lengths		8522915	0					
ANR	8522997	Identifier	cur		8522915	0					
ANR	8522998	Identifier	lengths		8522915	1					
ANR	8522999	Identifier	count		8522915	1					
ANR	8523000	ExpressionStatement	assert ( cur != idat -> idat_list_tail )	1855:6:56001:56036	8522915	7	True				
ANR	8523001	CallExpression	assert ( cur != idat -> idat_list_tail )		8522915	0					
ANR	8523002	Callee	assert		8522915	0					
ANR	8523003	Identifier	assert		8522915	0					
ANR	8523004	ArgumentList	cur != idat -> idat_list_tail		8522915	1					
ANR	8523005	Argument	cur != idat -> idat_list_tail		8522915	0					
ANR	8523006	EqualityExpression	cur != idat -> idat_list_tail		8522915	0		!=			
ANR	8523007	Identifier	cur		8522915	0					
ANR	8523008	PtrMemberAccess	idat -> idat_list_tail		8522915	1					
ANR	8523009	Identifier	idat		8522915	0					
ANR	8523010	Identifier	idat_list_tail		8522915	1					
ANR	8523011	ExpressionStatement	cur = cur -> next	1856:6:56044:56059	8522915	8	True				
ANR	8523012	AssignmentExpression	cur = cur -> next		8522915	0		=			
ANR	8523013	Identifier	cur		8522915	0					
ANR	8523014	PtrMemberAccess	cur -> next		8522915	1					
ANR	8523015	Identifier	cur		8522915	0					
ANR	8523016	Identifier	next		8522915	1					
ANR	8523017	ExpressionStatement	assert ( cur != NULL && cur -> count > 0 )	1857:6:56067:56104	8522915	9	True				
ANR	8523018	CallExpression	assert ( cur != NULL && cur -> count > 0 )		8522915	0					
ANR	8523019	Callee	assert		8522915	0					
ANR	8523020	Identifier	assert		8522915	0					
ANR	8523021	ArgumentList	cur != NULL && cur -> count > 0		8522915	1					
ANR	8523022	Argument	cur != NULL && cur -> count > 0		8522915	0					
ANR	8523023	AndExpression	cur != NULL && cur -> count > 0		8522915	0		&&			
ANR	8523024	EqualityExpression	cur != NULL		8522915	0		!=			
ANR	8523025	Identifier	cur		8522915	0					
ANR	8523026	Identifier	NULL		8522915	1					
ANR	8523027	RelationalExpression	cur -> count > 0		8522915	1		>			
ANR	8523028	PtrMemberAccess	cur -> count		8522915	0					
ANR	8523029	Identifier	cur		8522915	0					
ANR	8523030	Identifier	count		8522915	1					
ANR	8523031	PrimaryExpression	0		8522915	1					
ANR	8523032	ReturnStatement	return cur -> lengths [ 0 ] ;	1858:6:56112:56134	8522915	10	True				
ANR	8523033	ArrayIndexing	cur -> lengths [ 0 ]		8522915	0					
ANR	8523034	PtrMemberAccess	cur -> lengths		8522915	0					
ANR	8523035	Identifier	cur		8522915	0					
ANR	8523036	Identifier	lengths		8522915	1					
ANR	8523037	PrimaryExpression	0		8522915	1					
ANR	8523038	ElseStatement	else		8522915	0					
ANR	8523039	CompoundStatement		37:6:960:1015	8522915	0					
ANR	8523040	IdentifierDeclStatement	png_uint_32 have = idat -> idat_length - idat -> idat_index ;	1866:6:56288:56343	8522915	0	True				
ANR	8523041	IdentifierDecl	have = idat -> idat_length - idat -> idat_index		8522915	0					
ANR	8523042	IdentifierDeclType	png_uint_32		8522915	0					
ANR	8523043	Identifier	have		8522915	1					
ANR	8523044	AssignmentExpression	have = idat -> idat_length - idat -> idat_index		8522915	2		=			
ANR	8523045	Identifier	have		8522915	0					
ANR	8523046	AdditiveExpression	idat -> idat_length - idat -> idat_index		8522915	1		-			
ANR	8523047	PtrMemberAccess	idat -> idat_length		8522915	0					
ANR	8523048	Identifier	idat		8522915	0					
ANR	8523049	Identifier	idat_length		8522915	1					
ANR	8523050	PtrMemberAccess	idat -> idat_index		8522915	1					
ANR	8523051	Identifier	idat		8522915	0					
ANR	8523052	Identifier	idat_index		8522915	1					
ANR	8523053	IfStatement	if ( len > have )		8522915	1					
ANR	8523054	Condition	len > have	1868:10:56356:56365	8522915	0	True				
ANR	8523055	RelationalExpression	len > have		8522915	0		>			
ANR	8523056	Identifier	len		8522915	0					
ANR	8523057	Identifier	have		8522915	1					
ANR	8523058	CompoundStatement		42:9:1106:1141	8522915	1					
ANR	8523059	IdentifierDeclStatement	struct IDAT_list * cur = idat -> idat_cur ;	1870:9:56385:56423	8522915	0	True				
ANR	8523060	IdentifierDecl	* cur = idat -> idat_cur		8522915	0					
ANR	8523061	IdentifierDeclType	struct IDAT_list *		8522915	0					
ANR	8523062	Identifier	cur		8522915	1					
ANR	8523063	AssignmentExpression	* cur = idat -> idat_cur		8522915	2		=			
ANR	8523064	Identifier	cur		8522915	0					
ANR	8523065	PtrMemberAccess	idat -> idat_cur		8522915	1					
ANR	8523066	Identifier	idat		8522915	0					
ANR	8523067	Identifier	idat_cur		8522915	1					
ANR	8523068	IdentifierDeclStatement	unsigned int j = idat -> idat_count + 1 ;	1871:9:56434:56469	8522915	1	True				
ANR	8523069	IdentifierDecl	j = idat -> idat_count + 1		8522915	0					
ANR	8523070	IdentifierDeclType	unsigned int		8522915	0					
ANR	8523071	Identifier	j		8522915	1					
ANR	8523072	AssignmentExpression	j = idat -> idat_count + 1		8522915	2		=			
ANR	8523073	Identifier	j		8522915	0					
ANR	8523074	AdditiveExpression	idat -> idat_count + 1		8522915	1		+			
ANR	8523075	PtrMemberAccess	idat -> idat_count		8522915	0					
ANR	8523076	Identifier	idat		8522915	0					
ANR	8523077	Identifier	idat_count		8522915	1					
ANR	8523078	PrimaryExpression	1		8522915	1					
ANR	8523079	DoStatement	do		8522915	2					
ANR	8523080	CompoundStatement		45:9:1197:1197	8522915	0					
ANR	8523081	ExpressionStatement	assert ( cur != NULL )	1879:12:56759:56778	8522915	0	True				
ANR	8523082	CallExpression	assert ( cur != NULL )		8522915	0					
ANR	8523083	Callee	assert		8522915	0					
ANR	8523084	Identifier	assert		8522915	0					
ANR	8523085	ArgumentList	cur != NULL		8522915	1					
ANR	8523086	Argument	cur != NULL		8522915	0					
ANR	8523087	EqualityExpression	cur != NULL		8522915	0		!=			
ANR	8523088	Identifier	cur		8522915	0					
ANR	8523089	Identifier	NULL		8522915	1					
ANR	8523090	ForStatement	for ( ; ; )		8522915	1					
ANR	8523091	CompoundStatement		53:12:1486:1486	8522915	0					
ANR	8523092	ForStatement	for ( ; j < cur -> count ; ++ j )		8522915	0					
ANR	8523093	Condition	j < cur -> count	1884:22:56910:56923	8522915	0	True				
ANR	8523094	RelationalExpression	j < cur -> count		8522915	0		<			
ANR	8523095	Identifier	j		8522915	0					
ANR	8523096	PtrMemberAccess	cur -> count		8522915	1					
ANR	8523097	Identifier	cur		8522915	0					
ANR	8523098	Identifier	count		8522915	1					
ANR	8523099	UnaryExpression	++ j	1884:38:56926:56928	8522915	1	True				
ANR	8523100	IncDec	++		8522915	0					
ANR	8523101	Identifier	j		8522915	1					
ANR	8523102	CompoundStatement		56:15:1618:1618	8522915	2					
ANR	8523103	ExpressionStatement	have += cur -> lengths [ j ]	1886:18:56966:56989	8522915	0	True				
ANR	8523104	AssignmentExpression	have += cur -> lengths [ j ]		8522915	0		+=			
ANR	8523105	Identifier	have		8522915	0					
ANR	8523106	ArrayIndexing	cur -> lengths [ j ]		8522915	1					
ANR	8523107	PtrMemberAccess	cur -> lengths		8522915	0					
ANR	8523108	Identifier	cur		8522915	0					
ANR	8523109	Identifier	lengths		8522915	1					
ANR	8523110	Identifier	j		8522915	1					
ANR	8523111	IfStatement	if ( len <= have )		8522915	1					
ANR	8523112	Condition	len <= have	1887:22:57013:57023	8522915	0	True				
ANR	8523113	RelationalExpression	len <= have		8522915	0		<=			
ANR	8523114	Identifier	len		8522915	0					
ANR	8523115	Identifier	have		8522915	1					
ANR	8523116	ReturnStatement	return len ;	1888:21:57047:57057	8522915	1	True				
ANR	8523117	Identifier	len		8522915	0					
ANR	8523118	IfStatement	if ( cur == idat -> idat_list_tail )		8522915	1					
ANR	8523119	Condition	cur == idat -> idat_list_tail	1892:19:57177:57203	8522915	0	True				
ANR	8523120	EqualityExpression	cur == idat -> idat_list_tail		8522915	0		==			
ANR	8523121	Identifier	cur		8522915	0					
ANR	8523122	PtrMemberAccess	idat -> idat_list_tail		8522915	1					
ANR	8523123	Identifier	idat		8522915	0					
ANR	8523124	Identifier	idat_list_tail		8522915	1					
ANR	8523125	ReturnStatement	return have ;	1893:18:57224:57235	8522915	1	True				
ANR	8523126	Identifier	have		8522915	0					
ANR	8523127	ExpressionStatement	cur = cur -> next	1895:15:57253:57268	8522915	2	True				
ANR	8523128	AssignmentExpression	cur = cur -> next		8522915	0		=			
ANR	8523129	Identifier	cur		8522915	0					
ANR	8523130	PtrMemberAccess	cur -> next		8522915	1					
ANR	8523131	Identifier	cur		8522915	0					
ANR	8523132	Identifier	next		8522915	1					
ANR	8523133	ExpressionStatement	j = 0	1896:15:57285:57290	8522915	3	True				
ANR	8523134	AssignmentExpression	j = 0		8522915	0		=			
ANR	8523135	Identifier	j		8522915	0					
ANR	8523136	PrimaryExpression	0		8522915	1					
ANR	8523137	Condition	len > have	1899:16:57333:57342	8522915	1	True				
ANR	8523138	RelationalExpression	len > have		8522915	0		>			
ANR	8523139	Identifier	len		8522915	0					
ANR	8523140	Identifier	have		8522915	1					
ANR	8523141	ReturnStatement	return len ;	1902:6:57361:57371	8522915	2	True				
ANR	8523142	Identifier	len		8522915	0					
ANR	8523143	ReturnType	static png_uint_32		8522915	1					
ANR	8523144	Identifier	rechunk_length		8522915	2					
ANR	8523145	ParameterList	"struct IDAT * idat , int start"		8522915	3					
ANR	8523146	Parameter	struct IDAT * idat	1826:15:55203:55219	8522915	0	True				
ANR	8523147	ParameterType	struct IDAT *		8522915	0					
ANR	8523148	Identifier	idat		8522915	1					
ANR	8523149	Parameter	int start	1826:34:55222:55230	8522915	1	True				
ANR	8523150	ParameterType	int		8522915	0					
ANR	8523151	Identifier	start		8522915	1					
ANR	8523152	CFGEntryNode	ENTRY		8522915		True				
ANR	8523153	CFGExitNode	EXIT		8522915		True				
ANR	8523154	InfiniteForNode	true		8522915		True				
ANR	8523155	Symbol	cur		8522915						
ANR	8523156	Symbol	idat -> idat_list_tail		8522915						
ANR	8523157	Symbol	idat -> idat_index		8522915						
ANR	8523158	Symbol	cur -> lengths		8522915						
ANR	8523159	Symbol	* count		8522915						
ANR	8523160	Symbol	len		8522915						
ANR	8523161	Symbol	* * cur		8522915						
ANR	8523162	Symbol	cur -> count		8522915						
ANR	8523163	Symbol	* cur		8522915						
ANR	8523164	Symbol	have		8522915						
ANR	8523165	Symbol	idat -> idat_count		8522915						
ANR	8523166	Symbol	* idat		8522915						
ANR	8523167	Symbol	idat -> idat_cur		8522915						
ANR	8523168	Symbol	* * idat		8522915						
ANR	8523169	Symbol	NULL		8522915						
ANR	8523170	Symbol	idat -> global		8522915						
ANR	8523171	Symbol	start		8522915						
ANR	8523172	Symbol	count		8522915						
ANR	8523173	Symbol	j		8522915						
ANR	8523174	Symbol	idat -> global -> idat_max		8522915						
ANR	8523175	Symbol	* j		8522915						
ANR	8523176	Symbol	* idat -> global		8522915						
ANR	8523177	Symbol	idat -> idat_length		8522915						
ANR	8523178	Symbol	* cur -> lengths		8522915						
ANR	8523179	Symbol	cur -> next		8522915						
ANR	8523180	Symbol	idat		8522915						
ANR	8523181	Function	process_IDAT	1906:0:57381:61168							
ANR	8523182	FunctionDef	process_IDAT (struct file * file)		8523181	0					
ANR	8523183	CompoundStatement		1923:0:58255:61168	8523181	0					
ANR	8523184	IdentifierDeclStatement	struct IDAT_list * list ;	1924:3:58260:58282	8523181	0	True				
ANR	8523185	IdentifierDecl	* list		8523181	0					
ANR	8523186	IdentifierDeclType	struct IDAT_list *		8523181	0					
ANR	8523187	Identifier	list		8523181	1					
ANR	8523188	ExpressionStatement	assert ( file -> idat != NULL && file -> chunk != NULL )	1926:3:58288:58337	8523181	1	True				
ANR	8523189	CallExpression	assert ( file -> idat != NULL && file -> chunk != NULL )		8523181	0					
ANR	8523190	Callee	assert		8523181	0					
ANR	8523191	Identifier	assert		8523181	0					
ANR	8523192	ArgumentList	file -> idat != NULL && file -> chunk != NULL		8523181	1					
ANR	8523193	Argument	file -> idat != NULL && file -> chunk != NULL		8523181	0					
ANR	8523194	AndExpression	file -> idat != NULL && file -> chunk != NULL		8523181	0		&&			
ANR	8523195	EqualityExpression	file -> idat != NULL		8523181	0		!=			
ANR	8523196	PtrMemberAccess	file -> idat		8523181	0					
ANR	8523197	Identifier	file		8523181	0					
ANR	8523198	Identifier	idat		8523181	1					
ANR	8523199	Identifier	NULL		8523181	1					
ANR	8523200	EqualityExpression	file -> chunk != NULL		8523181	1		!=			
ANR	8523201	PtrMemberAccess	file -> chunk		8523181	0					
ANR	8523202	Identifier	file		8523181	0					
ANR	8523203	Identifier	chunk		8523181	1					
ANR	8523204	Identifier	NULL		8523181	1					
ANR	8523205	ExpressionStatement	list = file -> idat -> idat_list_tail	1937:3:58836:58869	8523181	2	True				
ANR	8523206	AssignmentExpression	list = file -> idat -> idat_list_tail		8523181	0		=			
ANR	8523207	Identifier	list		8523181	0					
ANR	8523208	PtrMemberAccess	file -> idat -> idat_list_tail		8523181	1					
ANR	8523209	PtrMemberAccess	file -> idat		8523181	0					
ANR	8523210	Identifier	file		8523181	0					
ANR	8523211	Identifier	idat		8523181	1					
ANR	8523212	Identifier	idat_list_tail		8523181	1					
ANR	8523213	IfStatement	if ( list -> count == list -> length )		8523181	3					
ANR	8523214	Condition	list -> count == list -> length	1939:7:58879:58905	8523181	0	True				
ANR	8523215	EqualityExpression	list -> count == list -> length		8523181	0		==			
ANR	8523216	PtrMemberAccess	list -> count		8523181	0					
ANR	8523217	Identifier	list		8523181	0					
ANR	8523218	Identifier	count		8523181	1					
ANR	8523219	PtrMemberAccess	list -> length		8523181	1					
ANR	8523220	Identifier	list		8523181	0					
ANR	8523221	Identifier	length		8523181	1					
ANR	8523222	CompoundStatement		18:3:655:655	8523181	1					
ANR	8523223	ExpressionStatement	list = IDAT_list_extend ( list )	1941:6:58919:58948	8523181	0	True				
ANR	8523224	AssignmentExpression	list = IDAT_list_extend ( list )		8523181	0		=			
ANR	8523225	Identifier	list		8523181	0					
ANR	8523226	CallExpression	IDAT_list_extend ( list )		8523181	1					
ANR	8523227	Callee	IDAT_list_extend		8523181	0					
ANR	8523228	Identifier	IDAT_list_extend		8523181	0					
ANR	8523229	ArgumentList	list		8523181	1					
ANR	8523230	Argument	list		8523181	0					
ANR	8523231	Identifier	list		8523181	0					
ANR	8523232	IfStatement	if ( list == NULL )		8523181	1					
ANR	8523233	Condition	list == NULL	1943:10:58961:58972	8523181	0	True				
ANR	8523234	EqualityExpression	list == NULL		8523181	0		==			
ANR	8523235	Identifier	list		8523181	0					
ANR	8523236	Identifier	NULL		8523181	1					
ANR	8523237	ExpressionStatement	"stop ( file , READ_ERROR_CODE , ""out of memory"" )"	1944:9:58984:59028	8523181	1	True				
ANR	8523238	CallExpression	"stop ( file , READ_ERROR_CODE , ""out of memory"" )"		8523181	0					
ANR	8523239	Callee	stop		8523181	0					
ANR	8523240	Identifier	stop		8523181	0					
ANR	8523241	ArgumentList	file		8523181	1					
ANR	8523242	Argument	file		8523181	0					
ANR	8523243	Identifier	file		8523181	0					
ANR	8523244	Argument	READ_ERROR_CODE		8523181	1					
ANR	8523245	Identifier	READ_ERROR_CODE		8523181	0					
ANR	8523246	Argument	"""out of memory"""		8523181	2					
ANR	8523247	PrimaryExpression	"""out of memory"""		8523181	0					
ANR	8523248	ExpressionStatement	list -> count = 0	1947:6:59072:59087	8523181	2	True				
ANR	8523249	AssignmentExpression	list -> count = 0		8523181	0		=			
ANR	8523250	PtrMemberAccess	list -> count		8523181	0					
ANR	8523251	Identifier	list		8523181	0					
ANR	8523252	Identifier	count		8523181	1					
ANR	8523253	PrimaryExpression	0		8523181	1					
ANR	8523254	ExpressionStatement	file -> idat -> idat_list_tail = list	1948:6:59095:59128	8523181	3	True				
ANR	8523255	AssignmentExpression	file -> idat -> idat_list_tail = list		8523181	0		=			
ANR	8523256	PtrMemberAccess	file -> idat -> idat_list_tail		8523181	0					
ANR	8523257	PtrMemberAccess	file -> idat		8523181	0					
ANR	8523258	Identifier	file		8523181	0					
ANR	8523259	Identifier	idat		8523181	1					
ANR	8523260	Identifier	idat_list_tail		8523181	1					
ANR	8523261	Identifier	list		8523181	1					
ANR	8523262	ExpressionStatement	list -> lengths [ ( list -> count ) ++ ] = file -> chunk -> chunk_length	1952:3:59194:59252	8523181	4	True				
ANR	8523263	AssignmentExpression	list -> lengths [ ( list -> count ) ++ ] = file -> chunk -> chunk_length		8523181	0		=			
ANR	8523264	ArrayIndexing	list -> lengths [ ( list -> count ) ++ ]		8523181	0					
ANR	8523265	PtrMemberAccess	list -> lengths		8523181	0					
ANR	8523266	Identifier	list		8523181	0					
ANR	8523267	Identifier	lengths		8523181	1					
ANR	8523268	PostIncDecOperationExpression	( list -> count ) ++		8523181	1					
ANR	8523269	PtrMemberAccess	list -> count		8523181	0					
ANR	8523270	Identifier	list		8523181	0					
ANR	8523271	Identifier	count		8523181	1					
ANR	8523272	IncDec	++		8523181	1					
ANR	8523273	PtrMemberAccess	file -> chunk -> chunk_length		8523181	1					
ANR	8523274	PtrMemberAccess	file -> chunk		8523181	0					
ANR	8523275	Identifier	file		8523181	0					
ANR	8523276	Identifier	chunk		8523181	1					
ANR	8523277	Identifier	chunk_length		8523181	1					
ANR	8523278	IfStatement	if ( file -> type == png_IDAT )		8523181	5					
ANR	8523279	Condition	file -> type == png_IDAT	1957:7:59415:59436	8523181	0	True				
ANR	8523280	EqualityExpression	file -> type == png_IDAT		8523181	0		==			
ANR	8523281	PtrMemberAccess	file -> type		8523181	0					
ANR	8523282	Identifier	file		8523181	0					
ANR	8523283	Identifier	type		8523181	1					
ANR	8523284	Identifier	png_IDAT		8523181	1					
ANR	8523285	ReturnStatement	return 0 ;	1958:6:59445:59453	8523181	1	True				
ANR	8523286	PrimaryExpression	0		8523181	0					
ANR	8523287	ExpressionStatement	setpos ( file -> chunk )	1965:3:59754:59773	8523181	6	True				
ANR	8523288	CallExpression	setpos ( file -> chunk )		8523181	0					
ANR	8523289	Callee	setpos		8523181	0					
ANR	8523290	Identifier	setpos		8523181	0					
ANR	8523291	ArgumentList	file -> chunk		8523181	1					
ANR	8523292	Argument	file -> chunk		8523181	0					
ANR	8523293	PtrMemberAccess	file -> chunk		8523181	0					
ANR	8523294	Identifier	file		8523181	0					
ANR	8523295	Identifier	chunk		8523181	1					
ANR	8523296	IfStatement	"if ( zlib_check ( file , 0 ) )"		8523181	7					
ANR	8523297	Condition	"zlib_check ( file , 0 )"	1967:7:59783:59801	8523181	0	True				
ANR	8523298	CallExpression	"zlib_check ( file , 0 )"		8523181	0					
ANR	8523299	Callee	zlib_check		8523181	0					
ANR	8523300	Identifier	zlib_check		8523181	0					
ANR	8523301	ArgumentList	file		8523181	1					
ANR	8523302	Argument	file		8523181	0					
ANR	8523303	Identifier	file		8523181	0					
ANR	8523304	Argument	0		8523181	1					
ANR	8523305	PrimaryExpression	0		8523181	0					
ANR	8523306	CompoundStatement		48:6:1584:1591	8523181	1					
ANR	8523307	IdentifierDeclStatement	struct IDAT * idat ;	1969:6:59815:59832	8523181	0	True				
ANR	8523308	IdentifierDecl	* idat		8523181	0					
ANR	8523309	IdentifierDeclType	struct IDAT *		8523181	0					
ANR	8523310	Identifier	idat		8523181	1					
ANR	8523311	IdentifierDeclStatement	int cmp ;	1970:6:59840:59847	8523181	1	True				
ANR	8523312	IdentifierDecl	cmp		8523181	0					
ANR	8523313	IdentifierDeclType	int		8523181	0					
ANR	8523314	Identifier	cmp		8523181	1					
ANR	8523315	ExpressionStatement	"cmp = uarb_cmp ( file -> image_bytes , file -> image_digits , file -> chunk -> uncompressed_bytes , file -> chunk -> uncompressed_digits )"	1975:6:59999:60128	8523181	2	True				
ANR	8523316	AssignmentExpression	"cmp = uarb_cmp ( file -> image_bytes , file -> image_digits , file -> chunk -> uncompressed_bytes , file -> chunk -> uncompressed_digits )"		8523181	0		=			
ANR	8523317	Identifier	cmp		8523181	0					
ANR	8523318	CallExpression	"uarb_cmp ( file -> image_bytes , file -> image_digits , file -> chunk -> uncompressed_bytes , file -> chunk -> uncompressed_digits )"		8523181	1					
ANR	8523319	Callee	uarb_cmp		8523181	0					
ANR	8523320	Identifier	uarb_cmp		8523181	0					
ANR	8523321	ArgumentList	file -> image_bytes		8523181	1					
ANR	8523322	Argument	file -> image_bytes		8523181	0					
ANR	8523323	PtrMemberAccess	file -> image_bytes		8523181	0					
ANR	8523324	Identifier	file		8523181	0					
ANR	8523325	Identifier	image_bytes		8523181	1					
ANR	8523326	Argument	file -> image_digits		8523181	1					
ANR	8523327	PtrMemberAccess	file -> image_digits		8523181	0					
ANR	8523328	Identifier	file		8523181	0					
ANR	8523329	Identifier	image_digits		8523181	1					
ANR	8523330	Argument	file -> chunk -> uncompressed_bytes		8523181	2					
ANR	8523331	PtrMemberAccess	file -> chunk -> uncompressed_bytes		8523181	0					
ANR	8523332	PtrMemberAccess	file -> chunk		8523181	0					
ANR	8523333	Identifier	file		8523181	0					
ANR	8523334	Identifier	chunk		8523181	1					
ANR	8523335	Identifier	uncompressed_bytes		8523181	1					
ANR	8523336	Argument	file -> chunk -> uncompressed_digits		8523181	3					
ANR	8523337	PtrMemberAccess	file -> chunk -> uncompressed_digits		8523181	0					
ANR	8523338	PtrMemberAccess	file -> chunk		8523181	0					
ANR	8523339	Identifier	file		8523181	0					
ANR	8523340	Identifier	chunk		8523181	1					
ANR	8523341	Identifier	uncompressed_digits		8523181	1					
ANR	8523342	IfStatement	if ( cmp < 0 )		8523181	3					
ANR	8523343	Condition	cmp < 0	1978:10:60141:60147	8523181	0	True				
ANR	8523344	RelationalExpression	cmp < 0		8523181	0		<			
ANR	8523345	Identifier	cmp		8523181	0					
ANR	8523346	PrimaryExpression	0		8523181	1					
ANR	8523347	ExpressionStatement	"type_message ( file , png_IDAT , ""extra uncompressed data"" )"	1979:9:60159:60214	8523181	1	True				
ANR	8523348	CallExpression	"type_message ( file , png_IDAT , ""extra uncompressed data"" )"		8523181	0					
ANR	8523349	Callee	type_message		8523181	0					
ANR	8523350	Identifier	type_message		8523181	0					
ANR	8523351	ArgumentList	file		8523181	1					
ANR	8523352	Argument	file		8523181	0					
ANR	8523353	Identifier	file		8523181	0					
ANR	8523354	Argument	png_IDAT		8523181	1					
ANR	8523355	Identifier	png_IDAT		8523181	0					
ANR	8523356	Argument	"""extra uncompressed data"""		8523181	2					
ANR	8523357	PrimaryExpression	"""extra uncompressed data"""		8523181	0					
ANR	8523358	ElseStatement	else		8523181	0					
ANR	8523359	IfStatement	if ( cmp > 0 )		8523181	0					
ANR	8523360	Condition	cmp > 0	1981:15:60232:60238	8523181	0	True				
ANR	8523361	RelationalExpression	cmp > 0		8523181	0		>			
ANR	8523362	Identifier	cmp		8523181	0					
ANR	8523363	PrimaryExpression	0		8523181	1					
ANR	8523364	ExpressionStatement	"stop ( file , LIBPNG_ERROR_CODE , ""IDAT: uncompressed data too small"" )"	1982:9:60250:60316	8523181	1	True				
ANR	8523365	CallExpression	"stop ( file , LIBPNG_ERROR_CODE , ""IDAT: uncompressed data too small"" )"		8523181	0					
ANR	8523366	Callee	stop		8523181	0					
ANR	8523367	Identifier	stop		8523181	0					
ANR	8523368	ArgumentList	file		8523181	1					
ANR	8523369	Argument	file		8523181	0					
ANR	8523370	Identifier	file		8523181	0					
ANR	8523371	Argument	LIBPNG_ERROR_CODE		8523181	1					
ANR	8523372	Identifier	LIBPNG_ERROR_CODE		8523181	0					
ANR	8523373	Argument	"""IDAT: uncompressed data too small"""		8523181	2					
ANR	8523374	PrimaryExpression	"""IDAT: uncompressed data too small"""		8523181	0					
ANR	8523375	ExpressionStatement	setpos ( file -> chunk )	1988:6:60515:60534	8523181	4	True				
ANR	8523376	CallExpression	setpos ( file -> chunk )		8523181	0					
ANR	8523377	Callee	setpos		8523181	0					
ANR	8523378	Identifier	setpos		8523181	0					
ANR	8523379	ArgumentList	file -> chunk		8523181	1					
ANR	8523380	Argument	file -> chunk		8523181	0					
ANR	8523381	PtrMemberAccess	file -> chunk		8523181	0					
ANR	8523382	Identifier	file		8523181	0					
ANR	8523383	Identifier	chunk		8523181	1					
ANR	8523384	ExpressionStatement	idat = file -> idat	1990:6:60543:60560	8523181	5	True				
ANR	8523385	AssignmentExpression	idat = file -> idat		8523181	0		=			
ANR	8523386	Identifier	idat		8523181	0					
ANR	8523387	PtrMemberAccess	file -> idat		8523181	1					
ANR	8523388	Identifier	file		8523181	0					
ANR	8523389	Identifier	idat		8523181	1					
ANR	8523390	ExpressionStatement	idat -> idat_cur = idat -> idat_list_head	1991:6:60568:60605	8523181	6	True				
ANR	8523391	AssignmentExpression	idat -> idat_cur = idat -> idat_list_head		8523181	0		=			
ANR	8523392	PtrMemberAccess	idat -> idat_cur		8523181	0					
ANR	8523393	Identifier	idat		8523181	0					
ANR	8523394	Identifier	idat_cur		8523181	1					
ANR	8523395	PtrMemberAccess	idat -> idat_list_head		8523181	1					
ANR	8523396	Identifier	idat		8523181	0					
ANR	8523397	Identifier	idat_list_head		8523181	1					
ANR	8523398	ExpressionStatement	idat -> idat_length = idat -> idat_cur -> lengths [ 0 ]	1992:6:60613:60659	8523181	7	True				
ANR	8523399	AssignmentExpression	idat -> idat_length = idat -> idat_cur -> lengths [ 0 ]		8523181	0		=			
ANR	8523400	PtrMemberAccess	idat -> idat_length		8523181	0					
ANR	8523401	Identifier	idat		8523181	0					
ANR	8523402	Identifier	idat_length		8523181	1					
ANR	8523403	ArrayIndexing	idat -> idat_cur -> lengths [ 0 ]		8523181	1					
ANR	8523404	PtrMemberAccess	idat -> idat_cur -> lengths		8523181	0					
ANR	8523405	PtrMemberAccess	idat -> idat_cur		8523181	0					
ANR	8523406	Identifier	idat		8523181	0					
ANR	8523407	Identifier	idat_cur		8523181	1					
ANR	8523408	Identifier	lengths		8523181	1					
ANR	8523409	PrimaryExpression	0		8523181	1					
ANR	8523410	ExpressionStatement	idat -> idat_count = 0	1993:6:60667:60687	8523181	8	True				
ANR	8523411	AssignmentExpression	idat -> idat_count = 0		8523181	0		=			
ANR	8523412	PtrMemberAccess	idat -> idat_count		8523181	0					
ANR	8523413	Identifier	idat		8523181	0					
ANR	8523414	Identifier	idat_count		8523181	1					
ANR	8523415	PrimaryExpression	0		8523181	1					
ANR	8523416	ExpressionStatement	idat -> idat_index = 0	1994:6:60738:60758	8523181	9	True				
ANR	8523417	AssignmentExpression	idat -> idat_index = 0		8523181	0		=			
ANR	8523418	PtrMemberAccess	idat -> idat_index		8523181	0					
ANR	8523419	Identifier	idat		8523181	0					
ANR	8523420	Identifier	idat_index		8523181	1					
ANR	8523421	PrimaryExpression	0		8523181	1					
ANR	8523422	ExpressionStatement	"file -> chunk -> chunk_length = rechunk_length ( idat , 1 )"	1997:6:60872:60932	8523181	10	True				
ANR	8523423	AssignmentExpression	"file -> chunk -> chunk_length = rechunk_length ( idat , 1 )"		8523181	0		=			
ANR	8523424	PtrMemberAccess	file -> chunk -> chunk_length		8523181	0					
ANR	8523425	PtrMemberAccess	file -> chunk		8523181	0					
ANR	8523426	Identifier	file		8523181	0					
ANR	8523427	Identifier	chunk		8523181	1					
ANR	8523428	Identifier	chunk_length		8523181	1					
ANR	8523429	CallExpression	"rechunk_length ( idat , 1 )"		8523181	1					
ANR	8523430	Callee	rechunk_length		8523181	0					
ANR	8523431	Identifier	rechunk_length		8523181	0					
ANR	8523432	ArgumentList	idat		8523181	1					
ANR	8523433	Argument	idat		8523181	0					
ANR	8523434	Identifier	idat		8523181	0					
ANR	8523435	Argument	1		8523181	1					
ANR	8523436	PrimaryExpression	1		8523181	0					
ANR	8523437	ExpressionStatement	file -> state = STATE_IDAT	2000:6:60993:61017	8523181	11	True				
ANR	8523438	AssignmentExpression	file -> state = STATE_IDAT		8523181	0		=			
ANR	8523439	PtrMemberAccess	file -> state		8523181	0					
ANR	8523440	Identifier	file		8523181	0					
ANR	8523441	Identifier	state		8523181	1					
ANR	8523442	Identifier	STATE_IDAT		8523181	1					
ANR	8523443	ReturnStatement	return 1 ;	2002:6:61026:61034	8523181	12	True				
ANR	8523444	PrimaryExpression	1		8523181	0					
ANR	8523445	ElseStatement	else		8523181	0					
ANR	8523446	ExpressionStatement	"stop ( file , ZLIB_ERROR_CODE , ""could not uncompress IDAT"" )"	2006:6:61110:61166	8523181	0	True				
ANR	8523447	CallExpression	"stop ( file , ZLIB_ERROR_CODE , ""could not uncompress IDAT"" )"		8523181	0					
ANR	8523448	Callee	stop		8523181	0					
ANR	8523449	Identifier	stop		8523181	0					
ANR	8523450	ArgumentList	file		8523181	1					
ANR	8523451	Argument	file		8523181	0					
ANR	8523452	Identifier	file		8523181	0					
ANR	8523453	Argument	ZLIB_ERROR_CODE		8523181	1					
ANR	8523454	Identifier	ZLIB_ERROR_CODE		8523181	0					
ANR	8523455	Argument	"""could not uncompress IDAT"""		8523181	2					
ANR	8523456	PrimaryExpression	"""could not uncompress IDAT"""		8523181	0					
ANR	8523457	ReturnType	static int		8523181	1					
ANR	8523458	Identifier	process_IDAT		8523181	2					
ANR	8523459	ParameterList	struct file * file		8523181	3					
ANR	8523460	Parameter	struct file * file	1907:13:57405:57421	8523181	0	True				
ANR	8523461	ParameterType	struct file *		8523181	0					
ANR	8523462	Identifier	file		8523181	1					
ANR	8523463	CFGEntryNode	ENTRY		8523181		True				
ANR	8523464	CFGExitNode	EXIT		8523181		True				
ANR	8523465	Symbol	* * * idat		8523181						
ANR	8523466	Symbol	uarb_cmp		8523181						
ANR	8523467	Symbol	* list -> lengths		8523181						
ANR	8523468	Symbol	cmp		8523181						
ANR	8523469	Symbol	file -> chunk		8523181						
ANR	8523470	Symbol	idat -> idat_index		8523181						
ANR	8523471	Symbol	zlib_check		8523181						
ANR	8523472	Symbol	file -> chunk -> uncompressed_bytes		8523181						
ANR	8523473	Symbol	STATE_IDAT		8523181						
ANR	8523474	Symbol	file -> image_bytes		8523181						
ANR	8523475	Symbol	file -> chunk -> uncompressed_digits		8523181						
ANR	8523476	Symbol	rechunk_length		8523181						
ANR	8523477	Symbol	* file -> chunk		8523181						
ANR	8523478	Symbol	file -> type		8523181						
ANR	8523479	Symbol	file		8523181						
ANR	8523480	Symbol	* * list		8523181						
ANR	8523481	Symbol	file -> idat		8523181						
ANR	8523482	Symbol	file -> state		8523181						
ANR	8523483	Symbol	idat -> idat_count		8523181						
ANR	8523484	Symbol	file -> idat -> idat_list_tail		8523181						
ANR	8523485	Symbol	* idat		8523181						
ANR	8523486	Symbol	* file -> idat		8523181						
ANR	8523487	Symbol	file -> chunk -> chunk_length		8523181						
ANR	8523488	Symbol	idat -> idat_cur		8523181						
ANR	8523489	Symbol	LIBPNG_ERROR_CODE		8523181						
ANR	8523490	Symbol	READ_ERROR_CODE		8523181						
ANR	8523491	Symbol	list -> length		8523181						
ANR	8523492	Symbol	* * idat		8523181						
ANR	8523493	Symbol	NULL		8523181						
ANR	8523494	Symbol	idat -> idat_cur -> lengths		8523181						
ANR	8523495	Symbol	list		8523181						
ANR	8523496	Symbol	* file		8523181						
ANR	8523497	Symbol	list -> count		8523181						
ANR	8523498	Symbol	* * idat -> idat_cur		8523181						
ANR	8523499	Symbol	* idat -> idat_cur -> lengths		8523181						
ANR	8523500	Symbol	list -> lengths		8523181						
ANR	8523501	Symbol	* list		8523181						
ANR	8523502	Symbol	png_IDAT		8523181						
ANR	8523503	Symbol	ZLIB_ERROR_CODE		8523181						
ANR	8523504	Symbol	idat -> idat_list_head		8523181						
ANR	8523505	Symbol	file -> image_digits		8523181						
ANR	8523506	Symbol	idat -> idat_length		8523181						
ANR	8523507	Symbol	IDAT_list_extend		8523181						
ANR	8523508	Symbol	* idat -> idat_cur		8523181						
ANR	8523509	Symbol	* * file		8523181						
ANR	8523510	Symbol	idat		8523181						
ANR	8523511	ClassDef	zlib	2010:0:61200:62209							
ANR	8523512	DeclStmt									
ANR	8523513	Decl							struct IDAT	struct IDAT *	idat
ANR	8523514	DeclStmt									
ANR	8523515	Decl							struct chunk	struct chunk *	chunk
ANR	8523516	DeclStmt									
ANR	8523517	Decl							struct file	struct file *	file
ANR	8523518	DeclStmt									
ANR	8523519	Decl							struct global	struct global *	global
ANR	8523520	DeclStmt									
ANR	8523521	Decl							png_uint_32	png_uint_32	rewrite_offset
ANR	8523522	DeclStmt									
ANR	8523523	Decl							udigit	udigit [ 5 ]	compressed_bytes
ANR	8523524	DeclStmt									
ANR	8523525	Decl							int	int	compressed_digits
ANR	8523526	DeclStmt									
ANR	8523527	Decl							udigit	udigit [ 5 ]	uncompressed_bytes
ANR	8523528	DeclStmt									
ANR	8523529	Decl							int	int	uncompressed_digits
ANR	8523530	DeclStmt									
ANR	8523531	Decl							int	int	file_bits
ANR	8523532	DeclStmt									
ANR	8523533	Decl							int	int	ok_bits
ANR	8523534	DeclStmt									
ANR	8523535	Decl							int	int	cksum
ANR	8523536	DeclStmt									
ANR	8523537	Decl							z_stream	z_stream	z
ANR	8523538	DeclStmt									
ANR	8523539	Decl							png_uint_32	png_uint_32	extra_bytes
ANR	8523540	DeclStmt									
ANR	8523541	Decl							int	int	state
ANR	8523542	DeclStmt									
ANR	8523543	Decl							int	int	rc
ANR	8523544	DeclStmt									
ANR	8523545	Decl							int	int	window_bits
ANR	8523546	DeclStmt									
ANR	8523547	Decl							png_byte	png_byte [ 2 ]	header
ANR	8523548	Function	zlib_flevel	2039:0:62213:62502							
ANR	8523549	FunctionDef	zlib_flevel (struct zlib * zlib)		8523548	0					
ANR	8523550	CompoundStatement		2041:0:62264:62502	8523548	0					
ANR	8523551	SwitchStatement	switch ( zlib -> header [ 1 ] >> 6 )		8523548	0					
ANR	8523552	Condition	zlib -> header [ 1 ] >> 6	2042:11:62277:62296	8523548	0	True				
ANR	8523553	ShiftExpression	zlib -> header [ 1 ] >> 6		8523548	0		>>			
ANR	8523554	ArrayIndexing	zlib -> header [ 1 ]		8523548	0					
ANR	8523555	PtrMemberAccess	zlib -> header		8523548	0					
ANR	8523556	Identifier	zlib		8523548	0					
ANR	8523557	Identifier	header		8523548	1					
ANR	8523558	PrimaryExpression	1		8523548	1					
ANR	8523559	PrimaryExpression	6		8523548	1					
ANR	8523560	CompoundStatement		3:3:37:37	8523548	1					
ANR	8523561	Label	case 0 :	2044:6:62310:62316	8523548	0	True				
ANR	8523562	ReturnStatement	"return ""supfast"" ;"	2044:15:62319:62335	8523548	1	True				
ANR	8523563	PrimaryExpression	"""supfast"""		8523548	0					
ANR	8523564	Label	case 1 :	2045:6:62343:62349	8523548	2	True				
ANR	8523565	ReturnStatement	"return ""stdfast"" ;"	2045:15:62352:62368	8523548	3	True				
ANR	8523566	PrimaryExpression	"""stdfast"""		8523548	0					
ANR	8523567	Label	case 2 :	2046:6:62376:62382	8523548	4	True				
ANR	8523568	ReturnStatement	"return ""default"" ;"	2046:15:62385:62401	8523548	5	True				
ANR	8523569	PrimaryExpression	"""default"""		8523548	0					
ANR	8523570	Label	case 3 :	2047:6:62409:62415	8523548	6	True				
ANR	8523571	ReturnStatement	"return ""maximum"" ;"	2047:15:62418:62434	8523548	7	True				
ANR	8523572	PrimaryExpression	"""maximum"""		8523548	0					
ANR	8523573	Label	default :	2048:6:62442:62449	8523548	8	True				
ANR	8523574	Identifier	default		8523548	0					
ANR	8523575	ExpressionStatement	assert ( UNREACHED )	2048:15:62451:62468	8523548	9	True				
ANR	8523576	CallExpression	assert ( UNREACHED )		8523548	0					
ANR	8523577	Callee	assert		8523548	0					
ANR	8523578	Identifier	assert		8523548	0					
ANR	8523579	ArgumentList	UNREACHED		8523548	1					
ANR	8523580	Argument	UNREACHED		8523548	0					
ANR	8523581	Identifier	UNREACHED		8523548	0					
ANR	8523582	ReturnStatement	"return ""COMPILER BUG"" ;"	2051:3:62479:62500	8523548	1	True				
ANR	8523583	PrimaryExpression	"""COMPILER BUG"""		8523548	0					
ANR	8523584	ReturnType	static const char *		8523548	1					
ANR	8523585	Identifier	zlib_flevel		8523548	2					
ANR	8523586	ParameterList	struct zlib * zlib		8523548	3					
ANR	8523587	Parameter	struct zlib * zlib	2040:12:62245:62261	8523548	0	True				
ANR	8523588	ParameterType	struct zlib *		8523548	0					
ANR	8523589	Identifier	zlib		8523548	1					
ANR	8523590	CFGEntryNode	ENTRY		8523548		True				
ANR	8523591	CFGExitNode	EXIT		8523548		True				
ANR	8523592	Symbol	zlib		8523548						
ANR	8523593	Symbol	* zlib -> header		8523548						
ANR	8523594	Symbol	* zlib		8523548						
ANR	8523595	Symbol	* * zlib		8523548						
ANR	8523596	Symbol	zlib -> header		8523548						
ANR	8523597	Symbol	UNREACHED		8523548						
ANR	8523598	Function	zlib_rc	2054:0:62505:63156							
ANR	8523599	FunctionDef	zlib_rc (struct zlib * zlib)		8523598	0					
ANR	8523600	CompoundStatement		2057:0:62602:63156	8523598	0					
ANR	8523601	SwitchStatement	switch ( zlib -> rc )		8523598	0					
ANR	8523602	Condition	zlib -> rc	2058:11:62615:62622	8523598	0	True				
ANR	8523603	PtrMemberAccess	zlib -> rc		8523598	0					
ANR	8523604	Identifier	zlib		8523598	0					
ANR	8523605	Identifier	rc		8523598	1					
ANR	8523606	CompoundStatement		3:3:25:25	8523598	1					
ANR	8523607	Label	case Z_OK :	2060:6:62636:62645	8523598	0	True				
ANR	8523608	Identifier	Z_OK		8523598	0					
ANR	8523609	ReturnStatement	"return ""Z_OK"" ;"	2060:30:62660:62673	8523598	1	True				
ANR	8523610	PrimaryExpression	"""Z_OK"""		8523598	0					
ANR	8523611	Label	case Z_STREAM_END :	2061:6:62681:62698	8523598	2	True				
ANR	8523612	Identifier	Z_STREAM_END		8523598	0					
ANR	8523613	ReturnStatement	"return ""Z_STREAM_END"" ;"	2061:30:62705:62726	8523598	3	True				
ANR	8523614	PrimaryExpression	"""Z_STREAM_END"""		8523598	0					
ANR	8523615	Label	case Z_NEED_DICT :	2062:6:62734:62750	8523598	4	True				
ANR	8523616	Identifier	Z_NEED_DICT		8523598	0					
ANR	8523617	ReturnStatement	"return ""Z_NEED_DICT"" ;"	2062:30:62758:62778	8523598	5	True				
ANR	8523618	PrimaryExpression	"""Z_NEED_DICT"""		8523598	0					
ANR	8523619	Label	case Z_ERRNO :	2063:6:62786:62798	8523598	6	True				
ANR	8523620	Identifier	Z_ERRNO		8523598	0					
ANR	8523621	ReturnStatement	"return ""Z_ERRNO"" ;"	2063:30:62810:62826	8523598	7	True				
ANR	8523622	PrimaryExpression	"""Z_ERRNO"""		8523598	0					
ANR	8523623	Label	case Z_STREAM_ERROR :	2064:6:62834:62853	8523598	8	True				
ANR	8523624	Identifier	Z_STREAM_ERROR		8523598	0					
ANR	8523625	ReturnStatement	"return ""Z_STREAM_ERROR"" ;"	2064:30:62858:62881	8523598	9	True				
ANR	8523626	PrimaryExpression	"""Z_STREAM_ERROR"""		8523598	0					
ANR	8523627	Label	case Z_DATA_ERROR :	2065:6:62889:62906	8523598	10	True				
ANR	8523628	Identifier	Z_DATA_ERROR		8523598	0					
ANR	8523629	ReturnStatement	"return ""Z_DATA_ERROR"" ;"	2065:30:62913:62934	8523598	11	True				
ANR	8523630	PrimaryExpression	"""Z_DATA_ERROR"""		8523598	0					
ANR	8523631	Label	case Z_MEM_ERROR :	2066:6:62942:62958	8523598	12	True				
ANR	8523632	Identifier	Z_MEM_ERROR		8523598	0					
ANR	8523633	ReturnStatement	"return ""Z_MEM_ERROR"" ;"	2066:30:62966:62986	8523598	13	True				
ANR	8523634	PrimaryExpression	"""Z_MEM_ERROR"""		8523598	0					
ANR	8523635	Label	case Z_BUF_ERROR :	2067:6:62994:63010	8523598	14	True				
ANR	8523636	Identifier	Z_BUF_ERROR		8523598	0					
ANR	8523637	ReturnStatement	"return ""Z_BUF_ERROR"" ;"	2067:30:63018:63038	8523598	15	True				
ANR	8523638	PrimaryExpression	"""Z_BUF_ERROR"""		8523598	0					
ANR	8523639	Label	case Z_VERSION_ERROR :	2068:6:63046:63066	8523598	16	True				
ANR	8523640	Identifier	Z_VERSION_ERROR		8523598	0					
ANR	8523641	ReturnStatement	"return ""Z_VERSION_ERROR"" ;"	2068:30:63070:63094	8523598	17	True				
ANR	8523642	PrimaryExpression	"""Z_VERSION_ERROR"""		8523598	0					
ANR	8523643	Label	default :	2069:6:63102:63109	8523598	18	True				
ANR	8523644	Identifier	default		8523598	0					
ANR	8523645	ReturnStatement	"return ""Z_*INVALID_RC*"" ;"	2069:30:63126:63149	8523598	19	True				
ANR	8523646	PrimaryExpression	"""Z_*INVALID_RC*"""		8523598	0					
ANR	8523647	ReturnType	static const char *		8523598	1					
ANR	8523648	Identifier	zlib_rc		8523598	2					
ANR	8523649	ParameterList	struct zlib * zlib		8523598	3					
ANR	8523650	Parameter	struct zlib * zlib	2055:8:62533:62549	8523598	0	True				
ANR	8523651	ParameterType	struct zlib *		8523598	0					
ANR	8523652	Identifier	zlib		8523598	1					
ANR	8523653	CFGEntryNode	ENTRY		8523598		True				
ANR	8523654	CFGExitNode	EXIT		8523598		True				
ANR	8523655	Symbol	zlib		8523598						
ANR	8523656	Symbol	zlib -> rc		8523598						
ANR	8523657	Symbol	* zlib		8523598						
ANR	8523658	Function	zlib_message	2073:0:63159:63654							
ANR	8523659	FunctionDef	"zlib_message (struct zlib * zlib , int unexpected)"		8523658	0					
ANR	8523660	CompoundStatement		2076:0:63261:63654	8523658	0					
ANR	8523661	IfStatement	if ( zlib -> global -> errors )		8523658	0					
ANR	8523662	Condition	zlib -> global -> errors	2077:7:63270:63289	8523658	0	True				
ANR	8523663	PtrMemberAccess	zlib -> global -> errors		8523658	0					
ANR	8523664	PtrMemberAccess	zlib -> global		8523658	0					
ANR	8523665	Identifier	zlib		8523658	0					
ANR	8523666	Identifier	global		8523658	1					
ANR	8523667	Identifier	errors		8523658	1					
ANR	8523668	CompoundStatement		4:6:41:73	8523658	1					
ANR	8523669	IdentifierDeclStatement	const char * reason = zlib -> z . msg ;	2079:6:63303:63335	8523658	0	True				
ANR	8523670	IdentifierDecl	* reason = zlib -> z . msg		8523658	0					
ANR	8523671	IdentifierDeclType	const char *		8523658	0					
ANR	8523672	Identifier	reason		8523658	1					
ANR	8523673	AssignmentExpression	* reason = zlib -> z . msg		8523658	2		=			
ANR	8523674	Identifier	reason		8523658	0					
ANR	8523675	MemberAccess	zlib -> z . msg		8523658	1					
ANR	8523676	PtrMemberAccess	zlib -> z		8523658	0					
ANR	8523677	Identifier	zlib		8523658	0					
ANR	8523678	Identifier	z		8523658	1					
ANR	8523679	Identifier	msg		8523658	1					
ANR	8523680	IfStatement	if ( reason == NULL )		8523658	1					
ANR	8523681	Condition	reason == NULL	2081:10:63348:63361	8523658	0	True				
ANR	8523682	EqualityExpression	reason == NULL		8523658	0		==			
ANR	8523683	Identifier	reason		8523658	0					
ANR	8523684	Identifier	NULL		8523658	1					
ANR	8523685	ExpressionStatement	"reason = ""[no message]"""	2082:9:63373:63396	8523658	1	True				
ANR	8523686	AssignmentExpression	"reason = ""[no message]"""		8523658	0		=			
ANR	8523687	Identifier	reason		8523658	0					
ANR	8523688	PrimaryExpression	"""[no message]"""		8523658	1					
ANR	8523689	ExpressionStatement	"fputs ( zlib -> file -> file_name , stderr )"	2084:6:63405:63441	8523658	2	True				
ANR	8523690	CallExpression	"fputs ( zlib -> file -> file_name , stderr )"		8523658	0					
ANR	8523691	Callee	fputs		8523658	0					
ANR	8523692	Identifier	fputs		8523658	0					
ANR	8523693	ArgumentList	zlib -> file -> file_name		8523658	1					
ANR	8523694	Argument	zlib -> file -> file_name		8523658	0					
ANR	8523695	PtrMemberAccess	zlib -> file -> file_name		8523658	0					
ANR	8523696	PtrMemberAccess	zlib -> file		8523658	0					
ANR	8523697	Identifier	zlib		8523658	0					
ANR	8523698	Identifier	file		8523658	1					
ANR	8523699	Identifier	file_name		8523658	1					
ANR	8523700	Argument	stderr		8523658	1					
ANR	8523701	Identifier	stderr		8523658	0					
ANR	8523702	ExpressionStatement	type_sep ( stderr )	2085:6:63449:63465	8523658	3	True				
ANR	8523703	CallExpression	type_sep ( stderr )		8523658	0					
ANR	8523704	Callee	type_sep		8523658	0					
ANR	8523705	Identifier	type_sep		8523658	0					
ANR	8523706	ArgumentList	stderr		8523658	1					
ANR	8523707	Argument	stderr		8523658	0					
ANR	8523708	Identifier	stderr		8523658	0					
ANR	8523709	ExpressionStatement	"type_name ( zlib -> chunk -> chunk_type , stderr )"	2086:6:63473:63515	8523658	4	True				
ANR	8523710	CallExpression	"type_name ( zlib -> chunk -> chunk_type , stderr )"		8523658	0					
ANR	8523711	Callee	type_name		8523658	0					
ANR	8523712	Identifier	type_name		8523658	0					
ANR	8523713	ArgumentList	zlib -> chunk -> chunk_type		8523658	1					
ANR	8523714	Argument	zlib -> chunk -> chunk_type		8523658	0					
ANR	8523715	PtrMemberAccess	zlib -> chunk -> chunk_type		8523658	0					
ANR	8523716	PtrMemberAccess	zlib -> chunk		8523658	0					
ANR	8523717	Identifier	zlib		8523658	0					
ANR	8523718	Identifier	chunk		8523658	1					
ANR	8523719	Identifier	chunk_type		8523658	1					
ANR	8523720	Argument	stderr		8523658	1					
ANR	8523721	Identifier	stderr		8523658	0					
ANR	8523722	ExpressionStatement	"fprintf ( stderr , "": %szlib error: %d (%s) (%s)\\n"" , unexpected ? ""unexpected "" : """" , zlib -> rc , zlib_rc ( zlib ) , reason )"	2087:6:63523:63647	8523658	5	True				
ANR	8523723	CallExpression	"fprintf ( stderr , "": %szlib error: %d (%s) (%s)\\n"" , unexpected ? ""unexpected "" : """" , zlib -> rc , zlib_rc ( zlib ) , reason )"		8523658	0					
ANR	8523724	Callee	fprintf		8523658	0					
ANR	8523725	Identifier	fprintf		8523658	0					
ANR	8523726	ArgumentList	stderr		8523658	1					
ANR	8523727	Argument	stderr		8523658	0					
ANR	8523728	Identifier	stderr		8523658	0					
ANR	8523729	Argument	""": %szlib error: %d (%s) (%s)\\n"""		8523658	1					
ANR	8523730	PrimaryExpression	""": %szlib error: %d (%s) (%s)\\n"""		8523658	0					
ANR	8523731	Argument	"unexpected ? ""unexpected "" : """""		8523658	2					
ANR	8523732	ConditionalExpression	"unexpected ? ""unexpected "" : """""		8523658	0					
ANR	8523733	Condition	unexpected		8523658	0					
ANR	8523734	Identifier	unexpected		8523658	0					
ANR	8523735	PrimaryExpression	"""unexpected """		8523658	1					
ANR	8523736	PrimaryExpression	""""""		8523658	2					
ANR	8523737	Argument	zlib -> rc		8523658	3					
ANR	8523738	PtrMemberAccess	zlib -> rc		8523658	0					
ANR	8523739	Identifier	zlib		8523658	0					
ANR	8523740	Identifier	rc		8523658	1					
ANR	8523741	Argument	zlib_rc ( zlib )		8523658	4					
ANR	8523742	CallExpression	zlib_rc ( zlib )		8523658	0					
ANR	8523743	Callee	zlib_rc		8523658	0					
ANR	8523744	Identifier	zlib_rc		8523658	0					
ANR	8523745	ArgumentList	zlib		8523658	1					
ANR	8523746	Argument	zlib		8523658	0					
ANR	8523747	Identifier	zlib		8523658	0					
ANR	8523748	Argument	reason		8523658	5					
ANR	8523749	Identifier	reason		8523658	0					
ANR	8523750	ReturnType	static void		8523658	1					
ANR	8523751	Identifier	zlib_message		8523658	2					
ANR	8523752	ParameterList	"struct zlib * zlib , int unexpected"		8523658	3					
ANR	8523753	Parameter	struct zlib * zlib	2074:13:63184:63200	8523658	0	True				
ANR	8523754	ParameterType	struct zlib *		8523658	0					
ANR	8523755	Identifier	zlib		8523658	1					
ANR	8523756	Parameter	int unexpected	2074:32:63203:63216	8523658	1	True				
ANR	8523757	ParameterType	int		8523658	0					
ANR	8523758	Identifier	unexpected		8523658	1					
ANR	8523759	CFGEntryNode	ENTRY		8523658		True				
ANR	8523760	CFGExitNode	EXIT		8523658		True				
ANR	8523761	Symbol	reason		8523658						
ANR	8523762	Symbol	zlib -> chunk		8523658						
ANR	8523763	Symbol	NULL		8523658						
ANR	8523764	Symbol	zlib -> file		8523658						
ANR	8523765	Symbol	zlib -> rc		8523658						
ANR	8523766	Symbol	unexpected		8523658						
ANR	8523767	Symbol	* zlib		8523658						
ANR	8523768	Symbol	zlib -> z . msg		8523658						
ANR	8523769	Symbol	zlib -> global		8523658						
ANR	8523770	Symbol	stderr		8523658						
ANR	8523771	Symbol	zlib		8523658						
ANR	8523772	Symbol	* * zlib		8523658						
ANR	8523773	Symbol	* zlib -> chunk		8523658						
ANR	8523774	Symbol	zlib -> file -> file_name		8523658						
ANR	8523775	Symbol	* zlib -> file		8523658						
ANR	8523776	Symbol	zlib -> global -> errors		8523658						
ANR	8523777	Symbol	zlib_rc		8523658						
ANR	8523778	Symbol	zlib -> z		8523658						
ANR	8523779	Symbol	* zlib -> global		8523658						
ANR	8523780	Symbol	zlib -> chunk -> chunk_type		8523658						
ANR	8523781	Function	zlib_end	2092:0:63657:66070							
ANR	8523782	FunctionDef	zlib_end (struct zlib * zlib)		8523781	0					
ANR	8523783	CompoundStatement		2094:0:63697:66070	8523781	0					
ANR	8523784	IfStatement	if ( ! zlib -> global -> quiet )		8523781	0					
ANR	8523785	Condition	! zlib -> global -> quiet	2098:7:63835:63854	8523781	0	True				
ANR	8523786	UnaryOperationExpression	! zlib -> global -> quiet		8523781	0					
ANR	8523787	UnaryOperator	!		8523781	0					
ANR	8523788	PtrMemberAccess	zlib -> global -> quiet		8523781	1					
ANR	8523789	PtrMemberAccess	zlib -> global		8523781	0					
ANR	8523790	Identifier	zlib		8523781	0					
ANR	8523791	Identifier	global		8523781	1					
ANR	8523792	Identifier	quiet		8523781	1					
ANR	8523793	CompoundStatement		6:3:162:162	8523781	1					
ANR	8523794	IfStatement	if ( zlib -> ok_bits < 16 )		8523781	0					
ANR	8523795	Condition	zlib -> ok_bits < 16	2100:10:63872:63889	8523781	0	True				
ANR	8523796	RelationalExpression	zlib -> ok_bits < 16		8523781	0		<			
ANR	8523797	PtrMemberAccess	zlib -> ok_bits		8523781	0					
ANR	8523798	Identifier	zlib		8523781	0					
ANR	8523799	Identifier	ok_bits		8523781	1					
ANR	8523800	PrimaryExpression	16		8523781	1					
ANR	8523801	CompoundStatement		9:9:236:254	8523781	1					
ANR	8523802	IdentifierDeclStatement	const char * reason ;	2102:9:63934:63952	8523781	0	True				
ANR	8523803	IdentifierDecl	* reason		8523781	0					
ANR	8523804	IdentifierDeclType	const char *		8523781	0					
ANR	8523805	Identifier	reason		8523781	1					
ANR	8523806	IfStatement	if ( zlib -> cksum )		8523781	1					
ANR	8523807	Condition	zlib -> cksum	2104:13:63968:63978	8523781	0	True				
ANR	8523808	PtrMemberAccess	zlib -> cksum		8523781	0					
ANR	8523809	Identifier	zlib		8523781	0					
ANR	8523810	Identifier	cksum		8523781	1					
ANR	8523811	ExpressionStatement	"reason = ""CHK"""	2105:12:63993:64007	8523781	1	True				
ANR	8523812	AssignmentExpression	"reason = ""CHK"""		8523781	0		=			
ANR	8523813	Identifier	reason		8523781	0					
ANR	8523814	PrimaryExpression	"""CHK"""		8523781	1					
ANR	8523815	ElseStatement	else		8523781	0					
ANR	8523816	IfStatement	if ( zlib -> ok_bits > zlib -> file_bits )		8523781	0					
ANR	8523817	Condition	zlib -> ok_bits > zlib -> file_bits	2107:18:64049:64079	8523781	0	True				
ANR	8523818	RelationalExpression	zlib -> ok_bits > zlib -> file_bits		8523781	0		>			
ANR	8523819	PtrMemberAccess	zlib -> ok_bits		8523781	0					
ANR	8523820	Identifier	zlib		8523781	0					
ANR	8523821	Identifier	ok_bits		8523781	1					
ANR	8523822	PtrMemberAccess	zlib -> file_bits		8523781	1					
ANR	8523823	Identifier	zlib		8523781	0					
ANR	8523824	Identifier	file_bits		8523781	1					
ANR	8523825	ExpressionStatement	"reason = ""TFB"""	2108:12:64094:64108	8523781	1	True				
ANR	8523826	AssignmentExpression	"reason = ""TFB"""		8523781	0		=			
ANR	8523827	Identifier	reason		8523781	0					
ANR	8523828	PrimaryExpression	"""TFB"""		8523781	1					
ANR	8523829	ElseStatement	else		8523781	0					
ANR	8523830	IfStatement	if ( zlib -> ok_bits == zlib -> file_bits )		8523781	0					
ANR	8523831	Condition	zlib -> ok_bits == zlib -> file_bits	2110:18:64163:64194	8523781	0	True				
ANR	8523832	EqualityExpression	zlib -> ok_bits == zlib -> file_bits		8523781	0		==			
ANR	8523833	PtrMemberAccess	zlib -> ok_bits		8523781	0					
ANR	8523834	Identifier	zlib		8523781	0					
ANR	8523835	Identifier	ok_bits		8523781	1					
ANR	8523836	PtrMemberAccess	zlib -> file_bits		8523781	1					
ANR	8523837	Identifier	zlib		8523781	0					
ANR	8523838	Identifier	file_bits		8523781	1					
ANR	8523839	ExpressionStatement	"reason = ""OK """	2111:12:64209:64223	8523781	1	True				
ANR	8523840	AssignmentExpression	"reason = ""OK """		8523781	0		=			
ANR	8523841	Identifier	reason		8523781	0					
ANR	8523842	PrimaryExpression	"""OK """		8523781	1					
ANR	8523843	ElseStatement	else		8523781	0					
ANR	8523844	ExpressionStatement	"reason = ""OPT"""	2114:12:64252:64266	8523781	0	True				
ANR	8523845	AssignmentExpression	"reason = ""OPT"""		8523781	0		=			
ANR	8523846	Identifier	reason		8523781	0					
ANR	8523847	PrimaryExpression	"""OPT"""		8523781	1					
ANR	8523848	ExpressionStatement	"type_name ( zlib -> chunk -> chunk_type , stdout )"	2120:9:64470:64512	8523781	2	True				
ANR	8523849	CallExpression	"type_name ( zlib -> chunk -> chunk_type , stdout )"		8523781	0					
ANR	8523850	Callee	type_name		8523781	0					
ANR	8523851	Identifier	type_name		8523781	0					
ANR	8523852	ArgumentList	zlib -> chunk -> chunk_type		8523781	1					
ANR	8523853	Argument	zlib -> chunk -> chunk_type		8523781	0					
ANR	8523854	PtrMemberAccess	zlib -> chunk -> chunk_type		8523781	0					
ANR	8523855	PtrMemberAccess	zlib -> chunk		8523781	0					
ANR	8523856	Identifier	zlib		8523781	0					
ANR	8523857	Identifier	chunk		8523781	1					
ANR	8523858	Identifier	chunk_type		8523781	1					
ANR	8523859	Argument	stdout		8523781	1					
ANR	8523860	Identifier	stdout		8523781	0					
ANR	8523861	ExpressionStatement	"printf ( "" %s %s %d %d "" , reason , zlib_flevel ( zlib ) , zlib -> file_bits , zlib -> ok_bits )"	2121:9:64523:64617	8523781	3	True				
ANR	8523862	CallExpression	"printf ( "" %s %s %d %d "" , reason , zlib_flevel ( zlib ) , zlib -> file_bits , zlib -> ok_bits )"		8523781	0					
ANR	8523863	Callee	printf		8523781	0					
ANR	8523864	Identifier	printf		8523781	0					
ANR	8523865	ArgumentList	""" %s %s %d %d """		8523781	1					
ANR	8523866	Argument	""" %s %s %d %d """		8523781	0					
ANR	8523867	PrimaryExpression	""" %s %s %d %d """		8523781	0					
ANR	8523868	Argument	reason		8523781	1					
ANR	8523869	Identifier	reason		8523781	0					
ANR	8523870	Argument	zlib_flevel ( zlib )		8523781	2					
ANR	8523871	CallExpression	zlib_flevel ( zlib )		8523781	0					
ANR	8523872	Callee	zlib_flevel		8523781	0					
ANR	8523873	Identifier	zlib_flevel		8523781	0					
ANR	8523874	ArgumentList	zlib		8523781	1					
ANR	8523875	Argument	zlib		8523781	0					
ANR	8523876	Identifier	zlib		8523781	0					
ANR	8523877	Argument	zlib -> file_bits		8523781	3					
ANR	8523878	PtrMemberAccess	zlib -> file_bits		8523781	0					
ANR	8523879	Identifier	zlib		8523781	0					
ANR	8523880	Identifier	file_bits		8523781	1					
ANR	8523881	Argument	zlib -> ok_bits		8523781	4					
ANR	8523882	PtrMemberAccess	zlib -> ok_bits		8523781	0					
ANR	8523883	Identifier	zlib		8523781	0					
ANR	8523884	Identifier	ok_bits		8523781	1					
ANR	8523885	ExpressionStatement	"uarb_print ( zlib -> compressed_bytes , zlib -> compressed_digits , stdout )"	2123:9:64628:64695	8523781	4	True				
ANR	8523886	CallExpression	"uarb_print ( zlib -> compressed_bytes , zlib -> compressed_digits , stdout )"		8523781	0					
ANR	8523887	Callee	uarb_print		8523781	0					
ANR	8523888	Identifier	uarb_print		8523781	0					
ANR	8523889	ArgumentList	zlib -> compressed_bytes		8523781	1					
ANR	8523890	Argument	zlib -> compressed_bytes		8523781	0					
ANR	8523891	PtrMemberAccess	zlib -> compressed_bytes		8523781	0					
ANR	8523892	Identifier	zlib		8523781	0					
ANR	8523893	Identifier	compressed_bytes		8523781	1					
ANR	8523894	Argument	zlib -> compressed_digits		8523781	1					
ANR	8523895	PtrMemberAccess	zlib -> compressed_digits		8523781	0					
ANR	8523896	Identifier	zlib		8523781	0					
ANR	8523897	Identifier	compressed_digits		8523781	1					
ANR	8523898	Argument	stdout		8523781	2					
ANR	8523899	Identifier	stdout		8523781	0					
ANR	8523900	ExpressionStatement	"putc ( ' ' , stdout )"	2124:9:64706:64723	8523781	5	True				
ANR	8523901	CallExpression	"putc ( ' ' , stdout )"		8523781	0					
ANR	8523902	Callee	putc		8523781	0					
ANR	8523903	Identifier	putc		8523781	0					
ANR	8523904	ArgumentList	' '		8523781	1					
ANR	8523905	Argument	' '		8523781	0					
ANR	8523906	PrimaryExpression	' '		8523781	0					
ANR	8523907	Argument	stdout		8523781	1					
ANR	8523908	Identifier	stdout		8523781	0					
ANR	8523909	ExpressionStatement	"uarb_print ( zlib -> uncompressed_bytes , zlib -> uncompressed_digits , stdout )"	2125:9:64734:64817	8523781	6	True				
ANR	8523910	CallExpression	"uarb_print ( zlib -> uncompressed_bytes , zlib -> uncompressed_digits , stdout )"		8523781	0					
ANR	8523911	Callee	uarb_print		8523781	0					
ANR	8523912	Identifier	uarb_print		8523781	0					
ANR	8523913	ArgumentList	zlib -> uncompressed_bytes		8523781	1					
ANR	8523914	Argument	zlib -> uncompressed_bytes		8523781	0					
ANR	8523915	PtrMemberAccess	zlib -> uncompressed_bytes		8523781	0					
ANR	8523916	Identifier	zlib		8523781	0					
ANR	8523917	Identifier	uncompressed_bytes		8523781	1					
ANR	8523918	Argument	zlib -> uncompressed_digits		8523781	1					
ANR	8523919	PtrMemberAccess	zlib -> uncompressed_digits		8523781	0					
ANR	8523920	Identifier	zlib		8523781	0					
ANR	8523921	Identifier	uncompressed_digits		8523781	1					
ANR	8523922	Argument	stdout		8523781	2					
ANR	8523923	Identifier	stdout		8523781	0					
ANR	8523924	ExpressionStatement	"putc ( ' ' , stdout )"	2127:9:64828:64845	8523781	7	True				
ANR	8523925	CallExpression	"putc ( ' ' , stdout )"		8523781	0					
ANR	8523926	Callee	putc		8523781	0					
ANR	8523927	Identifier	putc		8523781	0					
ANR	8523928	ArgumentList	' '		8523781	1					
ANR	8523929	Argument	' '		8523781	0					
ANR	8523930	PrimaryExpression	' '		8523781	0					
ANR	8523931	Argument	stdout		8523781	1					
ANR	8523932	Identifier	stdout		8523781	0					
ANR	8523933	ExpressionStatement	"fputs ( zlib -> file -> file_name , stdout )"	2128:9:64856:64892	8523781	8	True				
ANR	8523934	CallExpression	"fputs ( zlib -> file -> file_name , stdout )"		8523781	0					
ANR	8523935	Callee	fputs		8523781	0					
ANR	8523936	Identifier	fputs		8523781	0					
ANR	8523937	ArgumentList	zlib -> file -> file_name		8523781	1					
ANR	8523938	Argument	zlib -> file -> file_name		8523781	0					
ANR	8523939	PtrMemberAccess	zlib -> file -> file_name		8523781	0					
ANR	8523940	PtrMemberAccess	zlib -> file		8523781	0					
ANR	8523941	Identifier	zlib		8523781	0					
ANR	8523942	Identifier	file		8523781	1					
ANR	8523943	Identifier	file_name		8523781	1					
ANR	8523944	Argument	stdout		8523781	1					
ANR	8523945	Identifier	stdout		8523781	0					
ANR	8523946	ExpressionStatement	"putc ( '\\n' , stdout )"	2129:9:64903:64921	8523781	9	True				
ANR	8523947	CallExpression	"putc ( '\\n' , stdout )"		8523781	0					
ANR	8523948	Callee	putc		8523781	0					
ANR	8523949	Identifier	putc		8523781	0					
ANR	8523950	ArgumentList	'\\n'		8523781	1					
ANR	8523951	Argument	'\\n'		8523781	0					
ANR	8523952	PrimaryExpression	'\\n'		8523781	0					
ANR	8523953	Argument	stdout		8523781	1					
ANR	8523954	Identifier	stdout		8523781	0					
ANR	8523955	ElseStatement	else		8523781	0					
ANR	8523956	CompoundStatement		40:6:1251:1251	8523781	0					
ANR	8523957	ExpressionStatement	"type_name ( zlib -> chunk -> chunk_type , stdout )"	2145:9:65463:65505	8523781	0	True				
ANR	8523958	CallExpression	"type_name ( zlib -> chunk -> chunk_type , stdout )"		8523781	0					
ANR	8523959	Callee	type_name		8523781	0					
ANR	8523960	Identifier	type_name		8523781	0					
ANR	8523961	ArgumentList	zlib -> chunk -> chunk_type		8523781	1					
ANR	8523962	Argument	zlib -> chunk -> chunk_type		8523781	0					
ANR	8523963	PtrMemberAccess	zlib -> chunk -> chunk_type		8523781	0					
ANR	8523964	PtrMemberAccess	zlib -> chunk		8523781	0					
ANR	8523965	Identifier	zlib		8523781	0					
ANR	8523966	Identifier	chunk		8523781	1					
ANR	8523967	Identifier	chunk_type		8523781	1					
ANR	8523968	Argument	stdout		8523781	1					
ANR	8523969	Identifier	stdout		8523781	0					
ANR	8523970	ExpressionStatement	"printf ( "" SKP %s %d %s "" , zlib_flevel ( zlib ) , zlib -> file_bits , zlib_rc ( zlib ) )"	2146:9:65516:65603	8523781	1	True				
ANR	8523971	CallExpression	"printf ( "" SKP %s %d %s "" , zlib_flevel ( zlib ) , zlib -> file_bits , zlib_rc ( zlib ) )"		8523781	0					
ANR	8523972	Callee	printf		8523781	0					
ANR	8523973	Identifier	printf		8523781	0					
ANR	8523974	ArgumentList	""" SKP %s %d %s """		8523781	1					
ANR	8523975	Argument	""" SKP %s %d %s """		8523781	0					
ANR	8523976	PrimaryExpression	""" SKP %s %d %s """		8523781	0					
ANR	8523977	Argument	zlib_flevel ( zlib )		8523781	1					
ANR	8523978	CallExpression	zlib_flevel ( zlib )		8523781	0					
ANR	8523979	Callee	zlib_flevel		8523781	0					
ANR	8523980	Identifier	zlib_flevel		8523781	0					
ANR	8523981	ArgumentList	zlib		8523781	1					
ANR	8523982	Argument	zlib		8523781	0					
ANR	8523983	Identifier	zlib		8523781	0					
ANR	8523984	Argument	zlib -> file_bits		8523781	2					
ANR	8523985	PtrMemberAccess	zlib -> file_bits		8523781	0					
ANR	8523986	Identifier	zlib		8523781	0					
ANR	8523987	Identifier	file_bits		8523781	1					
ANR	8523988	Argument	zlib_rc ( zlib )		8523781	3					
ANR	8523989	CallExpression	zlib_rc ( zlib )		8523781	0					
ANR	8523990	Callee	zlib_rc		8523781	0					
ANR	8523991	Identifier	zlib_rc		8523781	0					
ANR	8523992	ArgumentList	zlib		8523781	1					
ANR	8523993	Argument	zlib		8523781	0					
ANR	8523994	Identifier	zlib		8523781	0					
ANR	8523995	ExpressionStatement	"uarb_print ( zlib -> compressed_bytes , zlib -> compressed_digits , stdout )"	2148:9:65614:65681	8523781	2	True				
ANR	8523996	CallExpression	"uarb_print ( zlib -> compressed_bytes , zlib -> compressed_digits , stdout )"		8523781	0					
ANR	8523997	Callee	uarb_print		8523781	0					
ANR	8523998	Identifier	uarb_print		8523781	0					
ANR	8523999	ArgumentList	zlib -> compressed_bytes		8523781	1					
ANR	8524000	Argument	zlib -> compressed_bytes		8523781	0					
ANR	8524001	PtrMemberAccess	zlib -> compressed_bytes		8523781	0					
ANR	8524002	Identifier	zlib		8523781	0					
ANR	8524003	Identifier	compressed_bytes		8523781	1					
ANR	8524004	Argument	zlib -> compressed_digits		8523781	1					
ANR	8524005	PtrMemberAccess	zlib -> compressed_digits		8523781	0					
ANR	8524006	Identifier	zlib		8523781	0					
ANR	8524007	Identifier	compressed_digits		8523781	1					
ANR	8524008	Argument	stdout		8523781	2					
ANR	8524009	Identifier	stdout		8523781	0					
ANR	8524010	ExpressionStatement	"putc ( ' ' , stdout )"	2149:9:65692:65709	8523781	3	True				
ANR	8524011	CallExpression	"putc ( ' ' , stdout )"		8523781	0					
ANR	8524012	Callee	putc		8523781	0					
ANR	8524013	Identifier	putc		8523781	0					
ANR	8524014	ArgumentList	' '		8523781	1					
ANR	8524015	Argument	' '		8523781	0					
ANR	8524016	PrimaryExpression	' '		8523781	0					
ANR	8524017	Argument	stdout		8523781	1					
ANR	8524018	Identifier	stdout		8523781	0					
ANR	8524019	ExpressionStatement	"emit_string ( zlib -> z . msg ? zlib -> z . msg : ""[no_message]"" , stdout )"	2150:9:65720:65783	8523781	4	True				
ANR	8524020	CallExpression	"emit_string ( zlib -> z . msg ? zlib -> z . msg : ""[no_message]"" , stdout )"		8523781	0					
ANR	8524021	Callee	emit_string		8523781	0					
ANR	8524022	Identifier	emit_string		8523781	0					
ANR	8524023	ArgumentList	"zlib -> z . msg ? zlib -> z . msg : ""[no_message]"""		8523781	1					
ANR	8524024	Argument	"zlib -> z . msg ? zlib -> z . msg : ""[no_message]"""		8523781	0					
ANR	8524025	ConditionalExpression	"zlib -> z . msg ? zlib -> z . msg : ""[no_message]"""		8523781	0					
ANR	8524026	Condition	zlib -> z . msg		8523781	0					
ANR	8524027	MemberAccess	zlib -> z . msg		8523781	0					
ANR	8524028	PtrMemberAccess	zlib -> z		8523781	0					
ANR	8524029	Identifier	zlib		8523781	0					
ANR	8524030	Identifier	z		8523781	1					
ANR	8524031	Identifier	msg		8523781	1					
ANR	8524032	MemberAccess	zlib -> z . msg		8523781	1					
ANR	8524033	PtrMemberAccess	zlib -> z		8523781	0					
ANR	8524034	Identifier	zlib		8523781	0					
ANR	8524035	Identifier	z		8523781	1					
ANR	8524036	Identifier	msg		8523781	1					
ANR	8524037	PrimaryExpression	"""[no_message]"""		8523781	2					
ANR	8524038	Argument	stdout		8523781	1					
ANR	8524039	Identifier	stdout		8523781	0					
ANR	8524040	ExpressionStatement	"putc ( ' ' , stdout )"	2151:9:65794:65811	8523781	5	True				
ANR	8524041	CallExpression	"putc ( ' ' , stdout )"		8523781	0					
ANR	8524042	Callee	putc		8523781	0					
ANR	8524043	Identifier	putc		8523781	0					
ANR	8524044	ArgumentList	' '		8523781	1					
ANR	8524045	Argument	' '		8523781	0					
ANR	8524046	PrimaryExpression	' '		8523781	0					
ANR	8524047	Argument	stdout		8523781	1					
ANR	8524048	Identifier	stdout		8523781	0					
ANR	8524049	ExpressionStatement	"fputs ( zlib -> file -> file_name , stdout )"	2152:9:65822:65858	8523781	6	True				
ANR	8524050	CallExpression	"fputs ( zlib -> file -> file_name , stdout )"		8523781	0					
ANR	8524051	Callee	fputs		8523781	0					
ANR	8524052	Identifier	fputs		8523781	0					
ANR	8524053	ArgumentList	zlib -> file -> file_name		8523781	1					
ANR	8524054	Argument	zlib -> file -> file_name		8523781	0					
ANR	8524055	PtrMemberAccess	zlib -> file -> file_name		8523781	0					
ANR	8524056	PtrMemberAccess	zlib -> file		8523781	0					
ANR	8524057	Identifier	zlib		8523781	0					
ANR	8524058	Identifier	file		8523781	1					
ANR	8524059	Identifier	file_name		8523781	1					
ANR	8524060	Argument	stdout		8523781	1					
ANR	8524061	Identifier	stdout		8523781	0					
ANR	8524062	ExpressionStatement	"putc ( '\\n' , stdout )"	2153:9:65869:65887	8523781	7	True				
ANR	8524063	CallExpression	"putc ( '\\n' , stdout )"		8523781	0					
ANR	8524064	Callee	putc		8523781	0					
ANR	8524065	Identifier	putc		8523781	0					
ANR	8524066	ArgumentList	'\\n'		8523781	1					
ANR	8524067	Argument	'\\n'		8523781	0					
ANR	8524068	PrimaryExpression	'\\n'		8523781	0					
ANR	8524069	Argument	stdout		8523781	1					
ANR	8524070	Identifier	stdout		8523781	0					
ANR	8524071	IfStatement	if ( zlib -> state >= 0 )		8523781	1					
ANR	8524072	Condition	zlib -> state >= 0	2157:7:65910:65925	8523781	0	True				
ANR	8524073	RelationalExpression	zlib -> state >= 0		8523781	0		>=			
ANR	8524074	PtrMemberAccess	zlib -> state		8523781	0					
ANR	8524075	Identifier	zlib		8523781	0					
ANR	8524076	Identifier	state		8523781	1					
ANR	8524077	PrimaryExpression	0		8523781	1					
ANR	8524078	CompoundStatement		65:3:2233:2233	8523781	1					
ANR	8524079	ExpressionStatement	zlib -> rc = inflateEnd ( & zlib -> z )	2159:6:65939:65970	8523781	0	True				
ANR	8524080	AssignmentExpression	zlib -> rc = inflateEnd ( & zlib -> z )		8523781	0		=			
ANR	8524081	PtrMemberAccess	zlib -> rc		8523781	0					
ANR	8524082	Identifier	zlib		8523781	0					
ANR	8524083	Identifier	rc		8523781	1					
ANR	8524084	CallExpression	inflateEnd ( & zlib -> z )		8523781	1					
ANR	8524085	Callee	inflateEnd		8523781	0					
ANR	8524086	Identifier	inflateEnd		8523781	0					
ANR	8524087	ArgumentList	& zlib -> z		8523781	1					
ANR	8524088	Argument	& zlib -> z		8523781	0					
ANR	8524089	UnaryOperationExpression	& zlib -> z		8523781	0					
ANR	8524090	UnaryOperator	&		8523781	0					
ANR	8524091	PtrMemberAccess	zlib -> z		8523781	1					
ANR	8524092	Identifier	zlib		8523781	0					
ANR	8524093	Identifier	z		8523781	1					
ANR	8524094	IfStatement	if ( zlib -> rc != Z_OK )		8523781	1					
ANR	8524095	Condition	zlib -> rc != Z_OK	2161:10:65983:65998	8523781	0	True				
ANR	8524096	EqualityExpression	zlib -> rc != Z_OK		8523781	0		!=			
ANR	8524097	PtrMemberAccess	zlib -> rc		8523781	0					
ANR	8524098	Identifier	zlib		8523781	0					
ANR	8524099	Identifier	rc		8523781	1					
ANR	8524100	Identifier	Z_OK		8523781	1					
ANR	8524101	ExpressionStatement	"zlib_message ( zlib , 1 )"	2162:9:66010:66045	8523781	1	True				
ANR	8524102	CallExpression	"zlib_message ( zlib , 1 )"		8523781	0					
ANR	8524103	Callee	zlib_message		8523781	0					
ANR	8524104	Identifier	zlib_message		8523781	0					
ANR	8524105	ArgumentList	zlib		8523781	1					
ANR	8524106	Argument	zlib		8523781	0					
ANR	8524107	Identifier	zlib		8523781	0					
ANR	8524108	Argument	1		8523781	1					
ANR	8524109	PrimaryExpression	1		8523781	0					
ANR	8524110	ExpressionStatement	CLEAR ( * zlib )	2165:3:66056:66068	8523781	2	True				
ANR	8524111	CallExpression	CLEAR ( * zlib )		8523781	0					
ANR	8524112	Callee	CLEAR		8523781	0					
ANR	8524113	Identifier	CLEAR		8523781	0					
ANR	8524114	ArgumentList	* zlib		8523781	1					
ANR	8524115	Argument	* zlib		8523781	0					
ANR	8524116	UnaryOperationExpression	* zlib		8523781	0					
ANR	8524117	UnaryOperator	*		8523781	0					
ANR	8524118	Identifier	zlib		8523781	1					
ANR	8524119	ReturnType	static void		8523781	1					
ANR	8524120	Identifier	zlib_end		8523781	2					
ANR	8524121	ParameterList	struct zlib * zlib		8523781	3					
ANR	8524122	Parameter	struct zlib * zlib	2093:9:63678:63694	8523781	0	True				
ANR	8524123	ParameterType	struct zlib *		8523781	0					
ANR	8524124	Identifier	zlib		8523781	1					
ANR	8524125	CFGEntryNode	ENTRY		8523781		True				
ANR	8524126	CFGExitNode	EXIT		8523781		True				
ANR	8524127	Symbol	reason		8523781						
ANR	8524128	Symbol	zlib -> chunk		8523781						
ANR	8524129	Symbol	stdout		8523781						
ANR	8524130	Symbol	Z_OK		8523781						
ANR	8524131	Symbol	zlib -> global		8523781						
ANR	8524132	Symbol	zlib_flevel		8523781						
ANR	8524133	Symbol	zlib -> state		8523781						
ANR	8524134	Symbol	* * zlib		8523781						
ANR	8524135	Symbol	* zlib -> chunk		8523781						
ANR	8524136	Symbol	zlib -> compressed_bytes		8523781						
ANR	8524137	Symbol	zlib -> cksum		8523781						
ANR	8524138	Symbol	zlib_rc		8523781						
ANR	8524139	Symbol	zlib -> z		8523781						
ANR	8524140	Symbol	zlib -> global -> quiet		8523781						
ANR	8524141	Symbol	zlib -> uncompressed_digits		8523781						
ANR	8524142	Symbol	inflateEnd		8523781						
ANR	8524143	Symbol	zlib -> ok_bits		8523781						
ANR	8524144	Symbol	zlib -> file		8523781						
ANR	8524145	Symbol	zlib -> rc		8523781						
ANR	8524146	Symbol	* zlib		8523781						
ANR	8524147	Symbol	zlib -> z . msg		8523781						
ANR	8524148	Symbol	zlib		8523781						
ANR	8524149	Symbol	zlib -> uncompressed_bytes		8523781						
ANR	8524150	Symbol	& zlib -> z		8523781						
ANR	8524151	Symbol	zlib -> file -> file_name		8523781						
ANR	8524152	Symbol	* zlib -> file		8523781						
ANR	8524153	Symbol	zlib -> file_bits		8523781						
ANR	8524154	Symbol	zlib -> compressed_digits		8523781						
ANR	8524155	Symbol	* zlib -> global		8523781						
ANR	8524156	Symbol	zlib -> chunk -> chunk_type		8523781						
ANR	8524157	Function	zlib_reset	2168:0:66073:66661							
ANR	8524158	FunctionDef	"zlib_reset (struct zlib * zlib , int window_bits)"		8524157	0					
ANR	8524159	CompoundStatement		2171:0:66190:66661	8524157	0					
ANR	8524160	ExpressionStatement	assert ( zlib -> state >= 0 )	2172:3:66195:66219	8524157	0	True				
ANR	8524161	CallExpression	assert ( zlib -> state >= 0 )		8524157	0					
ANR	8524162	Callee	assert		8524157	0					
ANR	8524163	Identifier	assert		8524157	0					
ANR	8524164	ArgumentList	zlib -> state >= 0		8524157	1					
ANR	8524165	Argument	zlib -> state >= 0		8524157	0					
ANR	8524166	RelationalExpression	zlib -> state >= 0		8524157	0		>=			
ANR	8524167	PtrMemberAccess	zlib -> state		8524157	0					
ANR	8524168	Identifier	zlib		8524157	0					
ANR	8524169	Identifier	state		8524157	1					
ANR	8524170	PrimaryExpression	0		8524157	1					
ANR	8524171	ExpressionStatement	zlib -> z . next_in = Z_NULL	2174:3:66256:66280	8524157	1	True				
ANR	8524172	AssignmentExpression	zlib -> z . next_in = Z_NULL		8524157	0		=			
ANR	8524173	MemberAccess	zlib -> z . next_in		8524157	0					
ANR	8524174	PtrMemberAccess	zlib -> z		8524157	0					
ANR	8524175	Identifier	zlib		8524157	0					
ANR	8524176	Identifier	z		8524157	1					
ANR	8524177	Identifier	next_in		8524157	1					
ANR	8524178	Identifier	Z_NULL		8524157	1					
ANR	8524179	ExpressionStatement	zlib -> z . avail_in = 0	2175:3:66285:66305	8524157	2	True				
ANR	8524180	AssignmentExpression	zlib -> z . avail_in = 0		8524157	0		=			
ANR	8524181	MemberAccess	zlib -> z . avail_in		8524157	0					
ANR	8524182	PtrMemberAccess	zlib -> z		8524157	0					
ANR	8524183	Identifier	zlib		8524157	0					
ANR	8524184	Identifier	z		8524157	1					
ANR	8524185	Identifier	avail_in		8524157	1					
ANR	8524186	PrimaryExpression	0		8524157	1					
ANR	8524187	ExpressionStatement	zlib -> z . next_out = Z_NULL	2176:3:66310:66335	8524157	3	True				
ANR	8524188	AssignmentExpression	zlib -> z . next_out = Z_NULL		8524157	0		=			
ANR	8524189	MemberAccess	zlib -> z . next_out		8524157	0					
ANR	8524190	PtrMemberAccess	zlib -> z		8524157	0					
ANR	8524191	Identifier	zlib		8524157	0					
ANR	8524192	Identifier	z		8524157	1					
ANR	8524193	Identifier	next_out		8524157	1					
ANR	8524194	Identifier	Z_NULL		8524157	1					
ANR	8524195	ExpressionStatement	zlib -> z . avail_out = 0	2177:3:66340:66361	8524157	4	True				
ANR	8524196	AssignmentExpression	zlib -> z . avail_out = 0		8524157	0		=			
ANR	8524197	MemberAccess	zlib -> z . avail_out		8524157	0					
ANR	8524198	PtrMemberAccess	zlib -> z		8524157	0					
ANR	8524199	Identifier	zlib		8524157	0					
ANR	8524200	Identifier	z		8524157	1					
ANR	8524201	Identifier	avail_out		8524157	1					
ANR	8524202	PrimaryExpression	0		8524157	1					
ANR	8524203	ExpressionStatement	zlib -> window_bits = window_bits	2179:3:66367:66398	8524157	5	True				
ANR	8524204	AssignmentExpression	zlib -> window_bits = window_bits		8524157	0		=			
ANR	8524205	PtrMemberAccess	zlib -> window_bits		8524157	0					
ANR	8524206	Identifier	zlib		8524157	0					
ANR	8524207	Identifier	window_bits		8524157	1					
ANR	8524208	Identifier	window_bits		8524157	1					
ANR	8524209	ExpressionStatement	zlib -> compressed_digits = 0	2180:3:66403:66430	8524157	6	True				
ANR	8524210	AssignmentExpression	zlib -> compressed_digits = 0		8524157	0		=			
ANR	8524211	PtrMemberAccess	zlib -> compressed_digits		8524157	0					
ANR	8524212	Identifier	zlib		8524157	0					
ANR	8524213	Identifier	compressed_digits		8524157	1					
ANR	8524214	PrimaryExpression	0		8524157	1					
ANR	8524215	ExpressionStatement	zlib -> uncompressed_digits = 0	2181:3:66435:66464	8524157	7	True				
ANR	8524216	AssignmentExpression	zlib -> uncompressed_digits = 0		8524157	0		=			
ANR	8524217	PtrMemberAccess	zlib -> uncompressed_digits		8524157	0					
ANR	8524218	Identifier	zlib		8524157	0					
ANR	8524219	Identifier	uncompressed_digits		8524157	1					
ANR	8524220	PrimaryExpression	0		8524157	1					
ANR	8524221	ExpressionStatement	zlib -> state = 0	2183:3:66470:66485	8524157	8	True				
ANR	8524222	AssignmentExpression	zlib -> state = 0		8524157	0		=			
ANR	8524223	PtrMemberAccess	zlib -> state		8524157	0					
ANR	8524224	Identifier	zlib		8524157	0					
ANR	8524225	Identifier	state		8524157	1					
ANR	8524226	PrimaryExpression	0		8524157	1					
ANR	8524227	ExpressionStatement	"zlib -> rc = inflateReset2 ( & zlib -> z , 0 )"	2184:3:66514:66551	8524157	9	True				
ANR	8524228	AssignmentExpression	"zlib -> rc = inflateReset2 ( & zlib -> z , 0 )"		8524157	0		=			
ANR	8524229	PtrMemberAccess	zlib -> rc		8524157	0					
ANR	8524230	Identifier	zlib		8524157	0					
ANR	8524231	Identifier	rc		8524157	1					
ANR	8524232	CallExpression	"inflateReset2 ( & zlib -> z , 0 )"		8524157	1					
ANR	8524233	Callee	inflateReset2		8524157	0					
ANR	8524234	Identifier	inflateReset2		8524157	0					
ANR	8524235	ArgumentList	& zlib -> z		8524157	1					
ANR	8524236	Argument	& zlib -> z		8524157	0					
ANR	8524237	UnaryOperationExpression	& zlib -> z		8524157	0					
ANR	8524238	UnaryOperator	&		8524157	0					
ANR	8524239	PtrMemberAccess	zlib -> z		8524157	1					
ANR	8524240	Identifier	zlib		8524157	0					
ANR	8524241	Identifier	z		8524157	1					
ANR	8524242	Argument	0		8524157	1					
ANR	8524243	PrimaryExpression	0		8524157	0					
ANR	8524244	IfStatement	if ( zlib -> rc != Z_OK )		8524157	10					
ANR	8524245	Condition	zlib -> rc != Z_OK	2185:7:66560:66575	8524157	0	True				
ANR	8524246	EqualityExpression	zlib -> rc != Z_OK		8524157	0		!=			
ANR	8524247	PtrMemberAccess	zlib -> rc		8524157	0					
ANR	8524248	Identifier	zlib		8524157	0					
ANR	8524249	Identifier	rc		8524157	1					
ANR	8524250	Identifier	Z_OK		8524157	1					
ANR	8524251	CompoundStatement		16:3:390:390	8524157	1					
ANR	8524252	ExpressionStatement	"zlib_message ( zlib , 1 )"	2187:6:66589:66624	8524157	0	True				
ANR	8524253	CallExpression	"zlib_message ( zlib , 1 )"		8524157	0					
ANR	8524254	Callee	zlib_message		8524157	0					
ANR	8524255	Identifier	zlib_message		8524157	0					
ANR	8524256	ArgumentList	zlib		8524157	1					
ANR	8524257	Argument	zlib		8524157	0					
ANR	8524258	Identifier	zlib		8524157	0					
ANR	8524259	Argument	1		8524157	1					
ANR	8524260	PrimaryExpression	1		8524157	0					
ANR	8524261	ReturnStatement	return 0 ;	2188:6:66632:66640	8524157	1	True				
ANR	8524262	PrimaryExpression	0		8524157	0					
ANR	8524263	ReturnStatement	return 1 ;	2191:3:66651:66659	8524157	11	True				
ANR	8524264	PrimaryExpression	1		8524157	0					
ANR	8524265	ReturnType	static int		8524157	1					
ANR	8524266	Identifier	zlib_reset		8524157	2					
ANR	8524267	ParameterList	"struct zlib * zlib , int window_bits"		8524157	3					
ANR	8524268	Parameter	struct zlib * zlib	2169:11:66095:66111	8524157	0	True				
ANR	8524269	ParameterType	struct zlib *		8524157	0					
ANR	8524270	Identifier	zlib		8524157	1					
ANR	8524271	Parameter	int window_bits	2169:30:66114:66128	8524157	1	True				
ANR	8524272	ParameterType	int		8524157	0					
ANR	8524273	Identifier	window_bits		8524157	1					
ANR	8524274	CFGEntryNode	ENTRY		8524157		True				
ANR	8524275	CFGExitNode	EXIT		8524157		True				
ANR	8524276	Symbol	inflateReset2		8524157						
ANR	8524277	Symbol	zlib -> z . avail_out		8524157						
ANR	8524278	Symbol	zlib -> uncompressed_digits		8524157						
ANR	8524279	Symbol	zlib -> rc		8524157						
ANR	8524280	Symbol	* zlib		8524157						
ANR	8524281	Symbol	zlib -> window_bits		8524157						
ANR	8524282	Symbol	Z_OK		8524157						
ANR	8524283	Symbol	window_bits		8524157						
ANR	8524284	Symbol	zlib -> state		8524157						
ANR	8524285	Symbol	zlib -> z . next_in		8524157						
ANR	8524286	Symbol	zlib		8524157						
ANR	8524287	Symbol	zlib -> z . avail_in		8524157						
ANR	8524288	Symbol	& zlib -> z		8524157						
ANR	8524289	Symbol	zlib -> z . next_out		8524157						
ANR	8524290	Symbol	zlib -> z		8524157						
ANR	8524291	Symbol	zlib -> compressed_digits		8524157						
ANR	8524292	Symbol	Z_NULL		8524157						
ANR	8524293	Function	zlib_init	2194:0:66664:67959							
ANR	8524294	FunctionDef	"zlib_init (struct zlib * zlib , struct IDAT * idat , struct chunk * chunk , int window_bits , png_uint_32 offset)"		8524293	0					
ANR	8524295	CompoundStatement		2198:0:66845:67959	8524293	0					
ANR	8524296	ExpressionStatement	CLEAR ( * zlib )	2199:3:66850:66862	8524293	0	True				
ANR	8524297	CallExpression	CLEAR ( * zlib )		8524293	0					
ANR	8524298	Callee	CLEAR		8524293	0					
ANR	8524299	Identifier	CLEAR		8524293	0					
ANR	8524300	ArgumentList	* zlib		8524293	1					
ANR	8524301	Argument	* zlib		8524293	0					
ANR	8524302	UnaryOperationExpression	* zlib		8524293	0					
ANR	8524303	UnaryOperator	*		8524293	0					
ANR	8524304	Identifier	zlib		8524293	1					
ANR	8524305	ExpressionStatement	zlib -> idat = idat	2201:3:66868:66885	8524293	1	True				
ANR	8524306	AssignmentExpression	zlib -> idat = idat		8524293	0		=			
ANR	8524307	PtrMemberAccess	zlib -> idat		8524293	0					
ANR	8524308	Identifier	zlib		8524293	0					
ANR	8524309	Identifier	idat		8524293	1					
ANR	8524310	Identifier	idat		8524293	1					
ANR	8524311	ExpressionStatement	zlib -> chunk = chunk	2202:3:66890:66909	8524293	2	True				
ANR	8524312	AssignmentExpression	zlib -> chunk = chunk		8524293	0		=			
ANR	8524313	PtrMemberAccess	zlib -> chunk		8524293	0					
ANR	8524314	Identifier	zlib		8524293	0					
ANR	8524315	Identifier	chunk		8524293	1					
ANR	8524316	Identifier	chunk		8524293	1					
ANR	8524317	ExpressionStatement	zlib -> file = chunk -> file	2203:3:66914:66938	8524293	3	True				
ANR	8524318	AssignmentExpression	zlib -> file = chunk -> file		8524293	0		=			
ANR	8524319	PtrMemberAccess	zlib -> file		8524293	0					
ANR	8524320	Identifier	zlib		8524293	0					
ANR	8524321	Identifier	file		8524293	1					
ANR	8524322	PtrMemberAccess	chunk -> file		8524293	1					
ANR	8524323	Identifier	chunk		8524293	0					
ANR	8524324	Identifier	file		8524293	1					
ANR	8524325	ExpressionStatement	zlib -> global = chunk -> global	2204:3:66943:66971	8524293	4	True				
ANR	8524326	AssignmentExpression	zlib -> global = chunk -> global		8524293	0		=			
ANR	8524327	PtrMemberAccess	zlib -> global		8524293	0					
ANR	8524328	Identifier	zlib		8524293	0					
ANR	8524329	Identifier	global		8524293	1					
ANR	8524330	PtrMemberAccess	chunk -> global		8524293	1					
ANR	8524331	Identifier	chunk		8524293	0					
ANR	8524332	Identifier	global		8524293	1					
ANR	8524333	ExpressionStatement	zlib -> rewrite_offset = offset	2205:3:66976:67005	8524293	5	True				
ANR	8524334	AssignmentExpression	zlib -> rewrite_offset = offset		8524293	0		=			
ANR	8524335	PtrMemberAccess	zlib -> rewrite_offset		8524293	0					
ANR	8524336	Identifier	zlib		8524293	0					
ANR	8524337	Identifier	rewrite_offset		8524293	1					
ANR	8524338	Identifier	offset		8524293	1					
ANR	8524339	ExpressionStatement	zlib -> z . next_in = Z_NULL	2208:3:67085:67109	8524293	6	True				
ANR	8524340	AssignmentExpression	zlib -> z . next_in = Z_NULL		8524293	0		=			
ANR	8524341	MemberAccess	zlib -> z . next_in		8524293	0					
ANR	8524342	PtrMemberAccess	zlib -> z		8524293	0					
ANR	8524343	Identifier	zlib		8524293	0					
ANR	8524344	Identifier	z		8524293	1					
ANR	8524345	Identifier	next_in		8524293	1					
ANR	8524346	Identifier	Z_NULL		8524293	1					
ANR	8524347	ExpressionStatement	zlib -> z . avail_in = 0	2209:3:67114:67134	8524293	7	True				
ANR	8524348	AssignmentExpression	zlib -> z . avail_in = 0		8524293	0		=			
ANR	8524349	MemberAccess	zlib -> z . avail_in		8524293	0					
ANR	8524350	PtrMemberAccess	zlib -> z		8524293	0					
ANR	8524351	Identifier	zlib		8524293	0					
ANR	8524352	Identifier	z		8524293	1					
ANR	8524353	Identifier	avail_in		8524293	1					
ANR	8524354	PrimaryExpression	0		8524293	1					
ANR	8524355	ExpressionStatement	zlib -> z . zalloc = Z_NULL	2210:3:67139:67162	8524293	8	True				
ANR	8524356	AssignmentExpression	zlib -> z . zalloc = Z_NULL		8524293	0		=			
ANR	8524357	MemberAccess	zlib -> z . zalloc		8524293	0					
ANR	8524358	PtrMemberAccess	zlib -> z		8524293	0					
ANR	8524359	Identifier	zlib		8524293	0					
ANR	8524360	Identifier	z		8524293	1					
ANR	8524361	Identifier	zalloc		8524293	1					
ANR	8524362	Identifier	Z_NULL		8524293	1					
ANR	8524363	ExpressionStatement	zlib -> z . zfree = Z_NULL	2211:3:67167:67189	8524293	9	True				
ANR	8524364	AssignmentExpression	zlib -> z . zfree = Z_NULL		8524293	0		=			
ANR	8524365	MemberAccess	zlib -> z . zfree		8524293	0					
ANR	8524366	PtrMemberAccess	zlib -> z		8524293	0					
ANR	8524367	Identifier	zlib		8524293	0					
ANR	8524368	Identifier	z		8524293	1					
ANR	8524369	Identifier	zfree		8524293	1					
ANR	8524370	Identifier	Z_NULL		8524293	1					
ANR	8524371	ExpressionStatement	zlib -> z . opaque = Z_NULL	2212:3:67194:67217	8524293	10	True				
ANR	8524372	AssignmentExpression	zlib -> z . opaque = Z_NULL		8524293	0		=			
ANR	8524373	MemberAccess	zlib -> z . opaque		8524293	0					
ANR	8524374	PtrMemberAccess	zlib -> z		8524293	0					
ANR	8524375	Identifier	zlib		8524293	0					
ANR	8524376	Identifier	z		8524293	1					
ANR	8524377	Identifier	opaque		8524293	1					
ANR	8524378	Identifier	Z_NULL		8524293	1					
ANR	8524379	ExpressionStatement	zlib -> state = - 1	2214:3:67223:67239	8524293	11	True				
ANR	8524380	AssignmentExpression	zlib -> state = - 1		8524293	0		=			
ANR	8524381	PtrMemberAccess	zlib -> state		8524293	0					
ANR	8524382	Identifier	zlib		8524293	0					
ANR	8524383	Identifier	state		8524293	1					
ANR	8524384	UnaryOperationExpression	- 1		8524293	1					
ANR	8524385	UnaryOperator	-		8524293	0					
ANR	8524386	PrimaryExpression	1		8524293	1					
ANR	8524387	ExpressionStatement	zlib -> window_bits = window_bits	2215:3:67244:67275	8524293	12	True				
ANR	8524388	AssignmentExpression	zlib -> window_bits = window_bits		8524293	0		=			
ANR	8524389	PtrMemberAccess	zlib -> window_bits		8524293	0					
ANR	8524390	Identifier	zlib		8524293	0					
ANR	8524391	Identifier	window_bits		8524293	1					
ANR	8524392	Identifier	window_bits		8524293	1					
ANR	8524393	ExpressionStatement	zlib -> compressed_digits = 0	2217:3:67281:67308	8524293	13	True				
ANR	8524394	AssignmentExpression	zlib -> compressed_digits = 0		8524293	0		=			
ANR	8524395	PtrMemberAccess	zlib -> compressed_digits		8524293	0					
ANR	8524396	Identifier	zlib		8524293	0					
ANR	8524397	Identifier	compressed_digits		8524293	1					
ANR	8524398	PrimaryExpression	0		8524293	1					
ANR	8524399	ExpressionStatement	zlib -> uncompressed_digits = 0	2218:3:67313:67342	8524293	14	True				
ANR	8524400	AssignmentExpression	zlib -> uncompressed_digits = 0		8524293	0		=			
ANR	8524401	PtrMemberAccess	zlib -> uncompressed_digits		8524293	0					
ANR	8524402	Identifier	zlib		8524293	0					
ANR	8524403	Identifier	uncompressed_digits		8524293	1					
ANR	8524404	PrimaryExpression	0		8524293	1					
ANR	8524405	ExpressionStatement	zlib -> file_bits = 24	2223:3:67479:67499	8524293	15	True				
ANR	8524406	AssignmentExpression	zlib -> file_bits = 24		8524293	0		=			
ANR	8524407	PtrMemberAccess	zlib -> file_bits		8524293	0					
ANR	8524408	Identifier	zlib		8524293	0					
ANR	8524409	Identifier	file_bits		8524293	1					
ANR	8524410	PrimaryExpression	24		8524293	1					
ANR	8524411	ExpressionStatement	zlib -> ok_bits = 16	2224:3:67504:67522	8524293	16	True				
ANR	8524412	AssignmentExpression	zlib -> ok_bits = 16		8524293	0		=			
ANR	8524413	PtrMemberAccess	zlib -> ok_bits		8524293	0					
ANR	8524414	Identifier	zlib		8524293	0					
ANR	8524415	Identifier	ok_bits		8524293	1					
ANR	8524416	PrimaryExpression	16		8524293	1					
ANR	8524417	ExpressionStatement	zlib -> cksum = 0	2225:3:67539:67554	8524293	17	True				
ANR	8524418	AssignmentExpression	zlib -> cksum = 0		8524293	0		=			
ANR	8524419	PtrMemberAccess	zlib -> cksum		8524293	0					
ANR	8524420	Identifier	zlib		8524293	0					
ANR	8524421	Identifier	cksum		8524293	1					
ANR	8524422	PrimaryExpression	0		8524293	1					
ANR	8524423	ExpressionStatement	"zlib -> rc = inflateInit2 ( & zlib -> z , 0 )"	2230:3:67751:67787	8524293	18	True				
ANR	8524424	AssignmentExpression	"zlib -> rc = inflateInit2 ( & zlib -> z , 0 )"		8524293	0		=			
ANR	8524425	PtrMemberAccess	zlib -> rc		8524293	0					
ANR	8524426	Identifier	zlib		8524293	0					
ANR	8524427	Identifier	rc		8524293	1					
ANR	8524428	CallExpression	"inflateInit2 ( & zlib -> z , 0 )"		8524293	1					
ANR	8524429	Callee	inflateInit2		8524293	0					
ANR	8524430	Identifier	inflateInit2		8524293	0					
ANR	8524431	ArgumentList	& zlib -> z		8524293	1					
ANR	8524432	Argument	& zlib -> z		8524293	0					
ANR	8524433	UnaryOperationExpression	& zlib -> z		8524293	0					
ANR	8524434	UnaryOperator	&		8524293	0					
ANR	8524435	PtrMemberAccess	zlib -> z		8524293	1					
ANR	8524436	Identifier	zlib		8524293	0					
ANR	8524437	Identifier	z		8524293	1					
ANR	8524438	Argument	0		8524293	1					
ANR	8524439	PrimaryExpression	0		8524293	0					
ANR	8524440	IfStatement	if ( zlib -> rc != Z_OK )		8524293	19					
ANR	8524441	Condition	zlib -> rc != Z_OK	2231:7:67796:67811	8524293	0	True				
ANR	8524442	EqualityExpression	zlib -> rc != Z_OK		8524293	0		!=			
ANR	8524443	PtrMemberAccess	zlib -> rc		8524293	0					
ANR	8524444	Identifier	zlib		8524293	0					
ANR	8524445	Identifier	rc		8524293	1					
ANR	8524446	Identifier	Z_OK		8524293	1					
ANR	8524447	CompoundStatement		35:3:971:971	8524293	1					
ANR	8524448	ExpressionStatement	"zlib_message ( zlib , 1 )"	2233:6:67825:67860	8524293	0	True				
ANR	8524449	CallExpression	"zlib_message ( zlib , 1 )"		8524293	0					
ANR	8524450	Callee	zlib_message		8524293	0					
ANR	8524451	Identifier	zlib_message		8524293	0					
ANR	8524452	ArgumentList	zlib		8524293	1					
ANR	8524453	Argument	zlib		8524293	0					
ANR	8524454	Identifier	zlib		8524293	0					
ANR	8524455	Argument	1		8524293	1					
ANR	8524456	PrimaryExpression	1		8524293	0					
ANR	8524457	ReturnStatement	return 0 ;	2234:6:67868:67876	8524293	1	True				
ANR	8524458	PrimaryExpression	0		8524293	0					
ANR	8524459	ElseStatement	else		8524293	0					
ANR	8524460	CompoundStatement		41:3:1049:1049	8524293	0					
ANR	8524461	ExpressionStatement	zlib -> state = 0	2239:6:67903:67918	8524293	0	True				
ANR	8524462	AssignmentExpression	zlib -> state = 0		8524293	0		=			
ANR	8524463	PtrMemberAccess	zlib -> state		8524293	0					
ANR	8524464	Identifier	zlib		8524293	0					
ANR	8524465	Identifier	state		8524293	1					
ANR	8524466	PrimaryExpression	0		8524293	1					
ANR	8524467	ReturnStatement	return 1 ;	2240:6:67944:67952	8524293	1	True				
ANR	8524468	PrimaryExpression	1		8524293	0					
ANR	8524469	ReturnType	static int		8524293	1					
ANR	8524470	Identifier	zlib_init		8524293	2					
ANR	8524471	ParameterList	"struct zlib * zlib , struct IDAT * idat , struct chunk * chunk , int window_bits , png_uint_32 offset"		8524293	3					
ANR	8524472	Parameter	struct zlib * zlib	2195:10:66685:66701	8524293	0	True				
ANR	8524473	ParameterType	struct zlib *		8524293	0					
ANR	8524474	Identifier	zlib		8524293	1					
ANR	8524475	Parameter	struct IDAT * idat	2195:29:66704:66720	8524293	1	True				
ANR	8524476	ParameterType	struct IDAT *		8524293	0					
ANR	8524477	Identifier	idat		8524293	1					
ANR	8524478	Parameter	struct chunk * chunk	2195:48:66723:66741	8524293	2	True				
ANR	8524479	ParameterType	struct chunk *		8524293	0					
ANR	8524480	Identifier	chunk		8524293	1					
ANR	8524481	Parameter	int window_bits	2196:3:66747:66761	8524293	3	True				
ANR	8524482	ParameterType	int		8524293	0					
ANR	8524483	Identifier	window_bits		8524293	1					
ANR	8524484	Parameter	png_uint_32 offset	2196:20:66764:66781	8524293	4	True				
ANR	8524485	ParameterType	png_uint_32		8524293	0					
ANR	8524486	Identifier	offset		8524293	1					
ANR	8524487	CFGEntryNode	ENTRY		8524293		True				
ANR	8524488	CFGExitNode	EXIT		8524293		True				
ANR	8524489	Symbol	zlib -> chunk		8524293						
ANR	8524490	Symbol	zlib -> window_bits		8524293						
ANR	8524491	Symbol	chunk		8524293						
ANR	8524492	Symbol	Z_OK		8524293						
ANR	8524493	Symbol	zlib -> global		8524293						
ANR	8524494	Symbol	chunk -> global		8524293						
ANR	8524495	Symbol	zlib -> state		8524293						
ANR	8524496	Symbol	zlib -> z . next_in		8524293						
ANR	8524497	Symbol	zlib -> rewrite_offset		8524293						
ANR	8524498	Symbol	zlib -> cksum		8524293						
ANR	8524499	Symbol	zlib -> idat		8524293						
ANR	8524500	Symbol	zlib -> z		8524293						
ANR	8524501	Symbol	zlib -> z . opaque		8524293						
ANR	8524502	Symbol	inflateInit2		8524293						
ANR	8524503	Symbol	zlib -> uncompressed_digits		8524293						
ANR	8524504	Symbol	offset		8524293						
ANR	8524505	Symbol	zlib -> ok_bits		8524293						
ANR	8524506	Symbol	zlib -> file		8524293						
ANR	8524507	Symbol	zlib -> rc		8524293						
ANR	8524508	Symbol	* zlib		8524293						
ANR	8524509	Symbol	zlib -> z . zfree		8524293						
ANR	8524510	Symbol	window_bits		8524293						
ANR	8524511	Symbol	zlib -> z . zalloc		8524293						
ANR	8524512	Symbol	zlib		8524293						
ANR	8524513	Symbol	* chunk		8524293						
ANR	8524514	Symbol	zlib -> z . avail_in		8524293						
ANR	8524515	Symbol	& zlib -> z		8524293						
ANR	8524516	Symbol	chunk -> file		8524293						
ANR	8524517	Symbol	zlib -> compressed_digits		8524293						
ANR	8524518	Symbol	zlib -> file_bits		8524293						
ANR	8524519	Symbol	idat		8524293						
ANR	8524520	Symbol	Z_NULL		8524293						
ANR	8524521	Function	max_window_bits	2244:0:67962:68396							
ANR	8524522	FunctionDef	"max_window_bits (uarbc size , int ndigits)"		8524521	0					
ANR	8524523	CompoundStatement		2247:0:68095:68396	8524521	0					
ANR	8524524	IdentifierDeclStatement	png_uint_16 cb ;	2248:3:68100:68114	8524521	0	True				
ANR	8524525	IdentifierDecl	cb		8524521	0					
ANR	8524526	IdentifierDeclType	png_uint_16		8524521	0					
ANR	8524527	Identifier	cb		8524521	1					
ANR	8524528	IfStatement	if ( ndigits > 1 )		8524521	1					
ANR	8524529	Condition	ndigits > 1	2250:7:68124:68134	8524521	0	True				
ANR	8524530	RelationalExpression	ndigits > 1		8524521	0		>			
ANR	8524531	Identifier	ndigits		8524521	0					
ANR	8524532	PrimaryExpression	1		8524521	1					
ANR	8524533	ReturnStatement	return 15 ;	2251:6:68143:68152	8524521	1	True				
ANR	8524534	PrimaryExpression	15		8524521	0					
ANR	8524535	ExpressionStatement	cb = size [ 0 ]	2253:3:68158:68170	8524521	2	True				
ANR	8524536	AssignmentExpression	cb = size [ 0 ]		8524521	0		=			
ANR	8524537	Identifier	cb		8524521	0					
ANR	8524538	ArrayIndexing	size [ 0 ]		8524521	1					
ANR	8524539	Identifier	size		8524521	0					
ANR	8524540	PrimaryExpression	0		8524521	1					
ANR	8524541	IfStatement	if ( cb > 16384 )		8524521	3					
ANR	8524542	Condition	cb > 16384	2255:7:68180:68189	8524521	0	True				
ANR	8524543	RelationalExpression	cb > 16384		8524521	0		>			
ANR	8524544	Identifier	cb		8524521	0					
ANR	8524545	PrimaryExpression	16384		8524521	1					
ANR	8524546	ReturnStatement	return 15 ;	2255:19:68192:68201	8524521	1	True				
ANR	8524547	PrimaryExpression	15		8524521	0					
ANR	8524548	IfStatement	if ( cb > 8192 )		8524521	4					
ANR	8524549	Condition	cb > 8192	2256:7:68210:68219	8524521	0	True				
ANR	8524550	RelationalExpression	cb > 8192		8524521	0		>			
ANR	8524551	Identifier	cb		8524521	0					
ANR	8524552	PrimaryExpression	8192		8524521	1					
ANR	8524553	ReturnStatement	return 14 ;	2256:19:68222:68231	8524521	1	True				
ANR	8524554	PrimaryExpression	14		8524521	0					
ANR	8524555	IfStatement	if ( cb > 4096 )		8524521	5					
ANR	8524556	Condition	cb > 4096	2257:7:68240:68249	8524521	0	True				
ANR	8524557	RelationalExpression	cb > 4096		8524521	0		>			
ANR	8524558	Identifier	cb		8524521	0					
ANR	8524559	PrimaryExpression	4096		8524521	1					
ANR	8524560	ReturnStatement	return 13 ;	2257:19:68252:68261	8524521	1	True				
ANR	8524561	PrimaryExpression	13		8524521	0					
ANR	8524562	IfStatement	if ( cb > 2048 )		8524521	6					
ANR	8524563	Condition	cb > 2048	2258:7:68270:68279	8524521	0	True				
ANR	8524564	RelationalExpression	cb > 2048		8524521	0		>			
ANR	8524565	Identifier	cb		8524521	0					
ANR	8524566	PrimaryExpression	2048		8524521	1					
ANR	8524567	ReturnStatement	return 12 ;	2258:19:68282:68291	8524521	1	True				
ANR	8524568	PrimaryExpression	12		8524521	0					
ANR	8524569	IfStatement	if ( cb > 1024 )		8524521	7					
ANR	8524570	Condition	cb > 1024	2259:7:68300:68309	8524521	0	True				
ANR	8524571	RelationalExpression	cb > 1024		8524521	0		>			
ANR	8524572	Identifier	cb		8524521	0					
ANR	8524573	PrimaryExpression	1024		8524521	1					
ANR	8524574	ReturnStatement	return 11 ;	2259:19:68312:68321	8524521	1	True				
ANR	8524575	PrimaryExpression	11		8524521	0					
ANR	8524576	IfStatement	if ( cb > 512 )		8524521	8					
ANR	8524577	Condition	cb > 512	2260:7:68330:68339	8524521	0	True				
ANR	8524578	RelationalExpression	cb > 512		8524521	0		>			
ANR	8524579	Identifier	cb		8524521	0					
ANR	8524580	PrimaryExpression	512		8524521	1					
ANR	8524581	ReturnStatement	return 10 ;	2260:19:68342:68351	8524521	1	True				
ANR	8524582	PrimaryExpression	10		8524521	0					
ANR	8524583	IfStatement	if ( cb > 256 )		8524521	9					
ANR	8524584	Condition	cb > 256	2261:7:68360:68369	8524521	0	True				
ANR	8524585	RelationalExpression	cb > 256		8524521	0		>			
ANR	8524586	Identifier	cb		8524521	0					
ANR	8524587	PrimaryExpression	256		8524521	1					
ANR	8524588	ReturnStatement	return 9 ;	2261:19:68372:68381	8524521	1	True				
ANR	8524589	PrimaryExpression	9		8524521	0					
ANR	8524590	ReturnStatement	return 8 ;	2262:3:68386:68394	8524521	10	True				
ANR	8524591	PrimaryExpression	8		8524521	0					
ANR	8524592	ReturnType	static int		8524521	1					
ANR	8524593	Identifier	max_window_bits		8524521	2					
ANR	8524594	ParameterList	"uarbc size , int ndigits"		8524521	3					
ANR	8524595	Parameter	uarbc size	2245:16:67989:67998	8524521	0	True				
ANR	8524596	ParameterType	uarbc		8524521	0					
ANR	8524597	Identifier	size		8524521	1					
ANR	8524598	Parameter	int ndigits	2245:28:68001:68011	8524521	1	True				
ANR	8524599	ParameterType	int		8524521	0					
ANR	8524600	Identifier	ndigits		8524521	1					
ANR	8524601	CFGEntryNode	ENTRY		8524521		True				
ANR	8524602	CFGExitNode	EXIT		8524521		True				
ANR	8524603	Symbol	* size		8524521						
ANR	8524604	Symbol	size		8524521						
ANR	8524605	Symbol	ndigits		8524521						
ANR	8524606	Symbol	cb		8524521						
ANR	8524607	DeclStmt									
ANR	8524608	Decl							int	int	state
ANR	8524609	DeclStmt									
ANR	8524610	Decl							int	int	endrc
ANR	8524611	DeclStmt									
ANR	8524612	Decl							png_uint_32	png_uint_32	in_bytes
ANR	8524613	DeclStmt									
ANR	8524614	Decl							struct file	struct file *	file
ANR	8524615	DeclStmt									
ANR	8524616	Decl							png_uint_32	png_uint_32	out_bytes
ANR	8524617	DeclStmt									
ANR	8524618	Decl							int	int	flush
ANR	8524619	DeclStmt									
ANR	8524620	Decl							png_byte	png_byte	bIn
ANR	8524621	DeclStmt									
ANR	8524622	Decl							png_byte	png_byte	bOut
ANR	8524623	DeclStmt									
ANR	8524624	Decl							int	int	file_bits
ANR	8524625	DeclStmt									
ANR	8524626	Decl							int	int	new_bits
ANR	8524627	DeclStmt									
ANR	8524628	Decl							int	int	b2
ANR	8524629	DeclStmt									
ANR	8524630	Decl							struct chunk	struct chunk *	chunk
ANR	8524631	Function	zlib_run	2488:0:75802:79624							
ANR	8524632	FunctionDef	zlib_run (struct zlib * zlib)		8524631	0					
ANR	8524633	CompoundStatement		2491:0:75910:79624	8524631	0					
ANR	8524634	ExpressionStatement	zlib -> extra_bytes = 0	2499:3:76344:76365	8524631	0	True				
ANR	8524635	AssignmentExpression	zlib -> extra_bytes = 0		8524631	0		=			
ANR	8524636	PtrMemberAccess	zlib -> extra_bytes		8524631	0					
ANR	8524637	Identifier	zlib		8524631	0					
ANR	8524638	Identifier	extra_bytes		8524631	1					
ANR	8524639	PrimaryExpression	0		8524631	1					
ANR	8524640	IfStatement	if ( zlib -> idat != NULL )		8524631	1					
ANR	8524641	Condition	zlib -> idat != NULL	2501:7:76375:76392	8524631	0	True				
ANR	8524642	EqualityExpression	zlib -> idat != NULL		8524631	0		!=			
ANR	8524643	PtrMemberAccess	zlib -> idat		8524631	0					
ANR	8524644	Identifier	zlib		8524631	0					
ANR	8524645	Identifier	idat		8524631	1					
ANR	8524646	Identifier	NULL		8524631	1					
ANR	8524647	CompoundStatement		15:6:613:632	8524631	1					
ANR	8524648	IdentifierDeclStatement	struct IDAT_list * list = zlib -> idat -> idat_list_head ;	2503:6:76406:76457	8524631	0	True				
ANR	8524649	IdentifierDecl	* list = zlib -> idat -> idat_list_head		8524631	0					
ANR	8524650	IdentifierDeclType	struct IDAT_list *		8524631	0					
ANR	8524651	Identifier	list		8524631	1					
ANR	8524652	AssignmentExpression	* list = zlib -> idat -> idat_list_head		8524631	2		=			
ANR	8524653	Identifier	list		8524631	0					
ANR	8524654	PtrMemberAccess	zlib -> idat -> idat_list_head		8524631	1					
ANR	8524655	PtrMemberAccess	zlib -> idat		8524631	0					
ANR	8524656	Identifier	zlib		8524631	0					
ANR	8524657	Identifier	idat		8524631	1					
ANR	8524658	Identifier	idat_list_head		8524631	1					
ANR	8524659	IdentifierDeclStatement	struct IDAT_list * last = zlib -> idat -> idat_list_tail ;	2504:6:76465:76516	8524631	1	True				
ANR	8524660	IdentifierDecl	* last = zlib -> idat -> idat_list_tail		8524631	0					
ANR	8524661	IdentifierDeclType	struct IDAT_list *		8524631	0					
ANR	8524662	Identifier	last		8524631	1					
ANR	8524663	AssignmentExpression	* last = zlib -> idat -> idat_list_tail		8524631	2		=			
ANR	8524664	Identifier	last		8524631	0					
ANR	8524665	PtrMemberAccess	zlib -> idat -> idat_list_tail		8524631	1					
ANR	8524666	PtrMemberAccess	zlib -> idat		8524631	0					
ANR	8524667	Identifier	zlib		8524631	0					
ANR	8524668	Identifier	idat		8524631	1					
ANR	8524669	Identifier	idat_list_tail		8524631	1					
ANR	8524670	IdentifierDeclStatement	int skip = 0 ;	2505:6:76524:76543	8524631	2	True				
ANR	8524671	IdentifierDecl	skip = 0		8524631	0					
ANR	8524672	IdentifierDeclType	int		8524631	0					
ANR	8524673	Identifier	skip		8524631	1					
ANR	8524674	AssignmentExpression	skip = 0		8524631	2		=			
ANR	8524675	Identifier	skip		8524631	0					
ANR	8524676	PrimaryExpression	0		8524631	1					
ANR	8524677	ExpressionStatement	assert ( zlib -> rewrite_offset == 0 )	2510:6:76669:76702	8524631	3	True				
ANR	8524678	CallExpression	assert ( zlib -> rewrite_offset == 0 )		8524631	0					
ANR	8524679	Callee	assert		8524631	0					
ANR	8524680	Identifier	assert		8524631	0					
ANR	8524681	ArgumentList	zlib -> rewrite_offset == 0		8524631	1					
ANR	8524682	Argument	zlib -> rewrite_offset == 0		8524631	0					
ANR	8524683	EqualityExpression	zlib -> rewrite_offset == 0		8524631	0		==			
ANR	8524684	PtrMemberAccess	zlib -> rewrite_offset		8524631	0					
ANR	8524685	Identifier	zlib		8524631	0					
ANR	8524686	Identifier	rewrite_offset		8524631	1					
ANR	8524687	PrimaryExpression	0		8524631	1					
ANR	8524688	ForStatement	for ( ; ; )		8524631	4					
ANR	8524689	CompoundStatement		28:9:1020:1034	8524631	0					
ANR	8524690	IdentifierDeclStatement	const unsigned int count = list -> count ;	2517:9:76882:76920	8524631	0	True				
ANR	8524691	IdentifierDecl	count = list -> count		8524631	0					
ANR	8524692	IdentifierDeclType	const unsigned int		8524631	0					
ANR	8524693	Identifier	count		8524631	1					
ANR	8524694	AssignmentExpression	count = list -> count		8524631	2		=			
ANR	8524695	Identifier	count		8524631	0					
ANR	8524696	PtrMemberAccess	list -> count		8524631	1					
ANR	8524697	Identifier	list		8524631	0					
ANR	8524698	Identifier	count		8524631	1					
ANR	8524699	IdentifierDeclStatement	unsigned int i ;	2518:9:76931:76945	8524631	1	True				
ANR	8524700	IdentifierDecl	i		8524631	0					
ANR	8524701	IdentifierDeclType	unsigned int		8524631	0					
ANR	8524702	Identifier	i		8524631	1					
ANR	8524703	ForStatement	for ( i = 0 ; i < count ; ++ i )		8524631	2					
ANR	8524704	ForInit	i = 0 ;	2520:14:76962:76967	8524631	0	True				
ANR	8524705	AssignmentExpression	i = 0		8524631	0		=			
ANR	8524706	Identifier	i		8524631	0					
ANR	8524707	PrimaryExpression	0		8524631	1					
ANR	8524708	Condition	i < count	2520:21:76969:76975	8524631	1	True				
ANR	8524709	RelationalExpression	i < count		8524631	0		<			
ANR	8524710	Identifier	i		8524631	0					
ANR	8524711	Identifier	count		8524631	1					
ANR	8524712	UnaryExpression	++ i	2520:30:76978:76980	8524631	2	True				
ANR	8524713	IncDec	++		8524631	0					
ANR	8524714	Identifier	i		8524631	1					
ANR	8524715	CompoundStatement		32:12:1095:1101	8524631	3					
ANR	8524716	IdentifierDeclStatement	int rc ;	2522:12:77006:77012	8524631	0	True				
ANR	8524717	IdentifierDecl	rc		8524631	0					
ANR	8524718	IdentifierDeclType	int		8524631	0					
ANR	8524719	Identifier	rc		8524631	1					
ANR	8524720	IfStatement	if ( skip > 0 )		8524631	1					
ANR	8524721	Condition	skip > 0	2524:16:77031:77038	8524631	0	True				
ANR	8524722	RelationalExpression	skip > 0		8524631	0		>			
ANR	8524723	Identifier	skip		8524631	0					
ANR	8524724	PrimaryExpression	0		8524631	1					
ANR	8524725	ExpressionStatement	skip_12 ( zlib -> file )	2525:15:77092:77111	8524631	1	True				
ANR	8524726	CallExpression	skip_12 ( zlib -> file )		8524631	0					
ANR	8524727	Callee	skip_12		8524631	0					
ANR	8524728	Identifier	skip_12		8524631	0					
ANR	8524729	ArgumentList	zlib -> file		8524631	1					
ANR	8524730	Argument	zlib -> file		8524631	0					
ANR	8524731	PtrMemberAccess	zlib -> file		8524631	0					
ANR	8524732	Identifier	zlib		8524631	0					
ANR	8524733	Identifier	file		8524631	1					
ANR	8524734	ExpressionStatement	skip = 12	2527:12:77126:77135	8524631	2	True				
ANR	8524735	AssignmentExpression	skip = 12		8524631	0		=			
ANR	8524736	Identifier	skip		8524631	0					
ANR	8524737	PrimaryExpression	12		8524631	1					
ANR	8524738	ExpressionStatement	"rc = zlib_advance ( zlib , list -> lengths [ i ] )"	2529:12:77174:77215	8524631	3	True				
ANR	8524739	AssignmentExpression	"rc = zlib_advance ( zlib , list -> lengths [ i ] )"		8524631	0		=			
ANR	8524740	Identifier	rc		8524631	0					
ANR	8524741	CallExpression	"zlib_advance ( zlib , list -> lengths [ i ] )"		8524631	1					
ANR	8524742	Callee	zlib_advance		8524631	0					
ANR	8524743	Identifier	zlib_advance		8524631	0					
ANR	8524744	ArgumentList	zlib		8524631	1					
ANR	8524745	Argument	zlib		8524631	0					
ANR	8524746	Identifier	zlib		8524631	0					
ANR	8524747	Argument	list -> lengths [ i ]		8524631	1					
ANR	8524748	ArrayIndexing	list -> lengths [ i ]		8524631	0					
ANR	8524749	PtrMemberAccess	list -> lengths		8524631	0					
ANR	8524750	Identifier	list		8524631	0					
ANR	8524751	Identifier	lengths		8524631	1					
ANR	8524752	Identifier	i		8524631	1					
ANR	8524753	SwitchStatement	switch ( rc )		8524631	4					
ANR	8524754	Condition	rc	2531:20:77238:77239	8524631	0	True				
ANR	8524755	Identifier	rc		8524631	0					
ANR	8524756	CompoundStatement		42:12:1343:1343	8524631	1					
ANR	8524757	Label	case ZLIB_OK :	2533:15:77271:77283	8524631	0	True				
ANR	8524758	Identifier	ZLIB_OK		8524631	0					
ANR	8524759	BreakStatement	break ;	2534:18:77320:77325	8524631	1	True				
ANR	8524760	Label	case ZLIB_STREAM_END :	2536:15:77343:77363	8524631	2	True				
ANR	8524761	Identifier	ZLIB_STREAM_END		8524631	0					
ANR	8524762	IfStatement	if ( zlib -> global -> errors && zlib -> extra_bytes == 0 )		8524631	3					
ANR	8524763	Condition	zlib -> global -> errors && zlib -> extra_bytes == 0	2541:22:77639:77684	8524631	0	True				
ANR	8524764	AndExpression	zlib -> global -> errors && zlib -> extra_bytes == 0		8524631	0		&&			
ANR	8524765	PtrMemberAccess	zlib -> global -> errors		8524631	0					
ANR	8524766	PtrMemberAccess	zlib -> global		8524631	0					
ANR	8524767	Identifier	zlib		8524631	0					
ANR	8524768	Identifier	global		8524631	1					
ANR	8524769	Identifier	errors		8524631	1					
ANR	8524770	EqualityExpression	zlib -> extra_bytes == 0		8524631	1		==			
ANR	8524771	PtrMemberAccess	zlib -> extra_bytes		8524631	0					
ANR	8524772	Identifier	zlib		8524631	0					
ANR	8524773	Identifier	extra_bytes		8524631	1					
ANR	8524774	PrimaryExpression	0		8524631	1					
ANR	8524775	CompoundStatement		54:21:1870:1897	8524631	1					
ANR	8524776	IdentifierDeclStatement	struct IDAT_list * check = list ;	2543:21:77728:77758	8524631	0	True				
ANR	8524777	IdentifierDecl	* check = list		8524631	0					
ANR	8524778	IdentifierDeclType	struct IDAT_list *		8524631	0					
ANR	8524779	Identifier	check		8524631	1					
ANR	8524780	AssignmentExpression	* check = list		8524631	2		=			
ANR	8524781	Identifier	list		8524631	0					
ANR	8524782	Identifier	list		8524631	1					
ANR	8524783	IdentifierDeclStatement	"int j = i + 1 , jcount = count ;"	2544:21:77781:77808	8524631	1	True				
ANR	8524784	IdentifierDecl	j = i + 1		8524631	0					
ANR	8524785	IdentifierDeclType	int		8524631	0					
ANR	8524786	Identifier	j		8524631	1					
ANR	8524787	AssignmentExpression	j = i + 1		8524631	2		=			
ANR	8524788	Identifier	j		8524631	0					
ANR	8524789	AdditiveExpression	i + 1		8524631	1		+			
ANR	8524790	Identifier	i		8524631	0					
ANR	8524791	PrimaryExpression	1		8524631	1					
ANR	8524792	IdentifierDecl	jcount = count		8524631	1					
ANR	8524793	IdentifierDeclType	int		8524631	0					
ANR	8524794	Identifier	jcount		8524631	1					
ANR	8524795	AssignmentExpression	jcount = count		8524631	2		=			
ANR	8524796	Identifier	count		8524631	0					
ANR	8524797	Identifier	count		8524631	1					
ANR	8524798	ForStatement	for ( ; ; )		8524631	2					
ANR	8524799	CompoundStatement		57:21:1951:1951	8524631	0					
ANR	8524800	ForStatement	for ( ; j < jcount ; ++ j )		8524631	0					
ANR	8524801	Condition	j < jcount	2548:31:77895:77902	8524631	0	True				
ANR	8524802	RelationalExpression	j < jcount		8524631	0		<			
ANR	8524803	Identifier	j		8524631	0					
ANR	8524804	Identifier	jcount		8524631	1					
ANR	8524805	UnaryExpression	++ j	2548:41:77905:77907	8524631	1	True				
ANR	8524806	IncDec	++		8524631	0					
ANR	8524807	Identifier	j		8524631	1					
ANR	8524808	IfStatement	if ( check -> lengths [ j ] > 0 )		8524631	2					
ANR	8524809	Condition	check -> lengths [ j ] > 0	2549:31:77941:77961	8524631	0	True				
ANR	8524810	RelationalExpression	check -> lengths [ j ] > 0		8524631	0		>			
ANR	8524811	ArrayIndexing	check -> lengths [ j ]		8524631	0					
ANR	8524812	PtrMemberAccess	check -> lengths		8524631	0					
ANR	8524813	Identifier	check		8524631	0					
ANR	8524814	Identifier	lengths		8524631	1					
ANR	8524815	Identifier	j		8524631	1					
ANR	8524816	PrimaryExpression	0		8524631	1					
ANR	8524817	CompoundStatement		60:27:2080:2080	8524631	1					
ANR	8524818	ExpressionStatement	"chunk_message ( zlib -> chunk , ""extra compressed data"" )"	2551:30:78023:78107	8524631	0	True				
ANR	8524819	CallExpression	"chunk_message ( zlib -> chunk , ""extra compressed data"" )"		8524631	0					
ANR	8524820	Callee	chunk_message		8524631	0					
ANR	8524821	Identifier	chunk_message		8524631	0					
ANR	8524822	ArgumentList	zlib -> chunk		8524631	1					
ANR	8524823	Argument	zlib -> chunk		8524631	0					
ANR	8524824	PtrMemberAccess	zlib -> chunk		8524631	0					
ANR	8524825	Identifier	zlib		8524631	0					
ANR	8524826	Identifier	chunk		8524631	1					
ANR	8524827	Argument	"""extra compressed data"""		8524631	1					
ANR	8524828	PrimaryExpression	"""extra compressed data"""		8524631	0					
ANR	8524829	GotoStatement	goto end_check ;	2553:30:78139:78153	8524631	1	True				
ANR	8524830	Identifier	end_check		8524631	0					
ANR	8524831	IfStatement	if ( check == last )		8524631	1					
ANR	8524832	Condition	check == last	2556:28:78213:78225	8524631	0	True				
ANR	8524833	EqualityExpression	check == last		8524631	0		==			
ANR	8524834	Identifier	check		8524631	0					
ANR	8524835	Identifier	last		8524631	1					
ANR	8524836	BreakStatement	break ;	2557:27:78255:78260	8524631	1	True				
ANR	8524837	ExpressionStatement	check = check -> next	2559:24:78287:78306	8524631	2	True				
ANR	8524838	AssignmentExpression	check = check -> next		8524631	0		=			
ANR	8524839	Identifier	check		8524631	0					
ANR	8524840	PtrMemberAccess	check -> next		8524631	1					
ANR	8524841	Identifier	check		8524631	0					
ANR	8524842	Identifier	next		8524631	1					
ANR	8524843	ExpressionStatement	jcount = check -> count	2560:24:78332:78353	8524631	3	True				
ANR	8524844	AssignmentExpression	jcount = check -> count		8524631	0		=			
ANR	8524845	Identifier	jcount		8524631	0					
ANR	8524846	PtrMemberAccess	check -> count		8524631	1					
ANR	8524847	Identifier	check		8524631	0					
ANR	8524848	Identifier	count		8524631	1					
ANR	8524849	ExpressionStatement	j = 0	2561:24:78379:78384	8524631	4	True				
ANR	8524850	AssignmentExpression	j = 0		8524631	0		=			
ANR	8524851	Identifier	j		8524631	0					
ANR	8524852	PrimaryExpression	0		8524631	1					
ANR	8524853	Label	end_check :	2565:15:78445:78454	8524631	4	True				
ANR	8524854	Identifier	end_check		8524631	0					
ANR	8524855	ExpressionStatement	list -> lengths [ i ] -= zlib -> extra_bytes	2569:18:78636:78673	8524631	5	True				
ANR	8524856	AssignmentExpression	list -> lengths [ i ] -= zlib -> extra_bytes		8524631	0		-=			
ANR	8524857	ArrayIndexing	list -> lengths [ i ]		8524631	0					
ANR	8524858	PtrMemberAccess	list -> lengths		8524631	0					
ANR	8524859	Identifier	list		8524631	0					
ANR	8524860	Identifier	lengths		8524631	1					
ANR	8524861	Identifier	i		8524631	1					
ANR	8524862	PtrMemberAccess	zlib -> extra_bytes		8524631	1					
ANR	8524863	Identifier	zlib		8524631	0					
ANR	8524864	Identifier	extra_bytes		8524631	1					
ANR	8524865	ExpressionStatement	list -> count = i + 1	2570:18:78693:78710	8524631	6	True				
ANR	8524866	AssignmentExpression	list -> count = i + 1		8524631	0		=			
ANR	8524867	PtrMemberAccess	list -> count		8524631	0					
ANR	8524868	Identifier	list		8524631	0					
ANR	8524869	Identifier	count		8524631	1					
ANR	8524870	AdditiveExpression	i + 1		8524631	1		+			
ANR	8524871	Identifier	i		8524631	0					
ANR	8524872	PrimaryExpression	1		8524631	1					
ANR	8524873	ExpressionStatement	zlib -> idat -> idat_list_tail = list	2571:18:78730:78763	8524631	7	True				
ANR	8524874	AssignmentExpression	zlib -> idat -> idat_list_tail = list		8524631	0		=			
ANR	8524875	PtrMemberAccess	zlib -> idat -> idat_list_tail		8524631	0					
ANR	8524876	PtrMemberAccess	zlib -> idat		8524631	0					
ANR	8524877	Identifier	zlib		8524631	0					
ANR	8524878	Identifier	idat		8524631	1					
ANR	8524879	Identifier	idat_list_tail		8524631	1					
ANR	8524880	Identifier	list		8524631	1					
ANR	8524881	Label	default :	2574:15:78817:78824	8524631	8	True				
ANR	8524882	Identifier	default		8524631	0					
ANR	8524883	ReturnStatement	return rc ;	2575:18:78844:78853	8524631	9	True				
ANR	8524884	Identifier	rc		8524631	0					
ANR	8524885	IfStatement	if ( list == last )		8524631	3					
ANR	8524886	Condition	list == last	2580:13:78974:78985	8524631	0	True				
ANR	8524887	EqualityExpression	list == last		8524631	0		==			
ANR	8524888	Identifier	list		8524631	0					
ANR	8524889	Identifier	last		8524631	1					
ANR	8524890	ReturnStatement	return ZLIB_OK ;	2581:12:79000:79014	8524631	1	True				
ANR	8524891	Identifier	ZLIB_OK		8524631	0					
ANR	8524892	ExpressionStatement	list = list -> next	2583:9:79026:79043	8524631	4	True				
ANR	8524893	AssignmentExpression	list = list -> next		8524631	0		=			
ANR	8524894	Identifier	list		8524631	0					
ANR	8524895	PtrMemberAccess	list -> next		8524631	1					
ANR	8524896	Identifier	list		8524631	0					
ANR	8524897	Identifier	next		8524631	1					
ANR	8524898	ElseStatement	else		8524631	0					
ANR	8524899	CompoundStatement		100:6:3208:3214	8524631	0					
ANR	8524900	IdentifierDeclStatement	struct chunk * chunk = zlib -> chunk ;	2589:6:79078:79111	8524631	0	True				
ANR	8524901	IdentifierDecl	* chunk = zlib -> chunk		8524631	0					
ANR	8524902	IdentifierDeclType	struct chunk *		8524631	0					
ANR	8524903	Identifier	chunk		8524631	1					
ANR	8524904	AssignmentExpression	* chunk = zlib -> chunk		8524631	2		=			
ANR	8524905	Identifier	chunk		8524631	0					
ANR	8524906	PtrMemberAccess	zlib -> chunk		8524631	1					
ANR	8524907	Identifier	zlib		8524631	0					
ANR	8524908	Identifier	chunk		8524631	1					
ANR	8524909	IdentifierDeclStatement	int rc ;	2590:6:79119:79125	8524631	1	True				
ANR	8524910	IdentifierDecl	rc		8524631	0					
ANR	8524911	IdentifierDeclType	int		8524631	0					
ANR	8524912	Identifier	rc		8524631	1					
ANR	8524913	ExpressionStatement	assert ( zlib -> rewrite_offset < chunk -> chunk_length )	2592:6:79134:79184	8524631	2	True				
ANR	8524914	CallExpression	assert ( zlib -> rewrite_offset < chunk -> chunk_length )		8524631	0					
ANR	8524915	Callee	assert		8524631	0					
ANR	8524916	Identifier	assert		8524631	0					
ANR	8524917	ArgumentList	zlib -> rewrite_offset < chunk -> chunk_length		8524631	1					
ANR	8524918	Argument	zlib -> rewrite_offset < chunk -> chunk_length		8524631	0					
ANR	8524919	RelationalExpression	zlib -> rewrite_offset < chunk -> chunk_length		8524631	0		<			
ANR	8524920	PtrMemberAccess	zlib -> rewrite_offset		8524631	0					
ANR	8524921	Identifier	zlib		8524631	0					
ANR	8524922	Identifier	rewrite_offset		8524631	1					
ANR	8524923	PtrMemberAccess	chunk -> chunk_length		8524631	1					
ANR	8524924	Identifier	chunk		8524631	0					
ANR	8524925	Identifier	chunk_length		8524631	1					
ANR	8524926	ExpressionStatement	"rc = zlib_advance ( zlib , chunk -> chunk_length - zlib -> rewrite_offset )"	2594:6:79193:79260	8524631	3	True				
ANR	8524927	AssignmentExpression	"rc = zlib_advance ( zlib , chunk -> chunk_length - zlib -> rewrite_offset )"		8524631	0		=			
ANR	8524928	Identifier	rc		8524631	0					
ANR	8524929	CallExpression	"zlib_advance ( zlib , chunk -> chunk_length - zlib -> rewrite_offset )"		8524631	1					
ANR	8524930	Callee	zlib_advance		8524631	0					
ANR	8524931	Identifier	zlib_advance		8524631	0					
ANR	8524932	ArgumentList	zlib		8524631	1					
ANR	8524933	Argument	zlib		8524631	0					
ANR	8524934	Identifier	zlib		8524631	0					
ANR	8524935	Argument	chunk -> chunk_length - zlib -> rewrite_offset		8524631	1					
ANR	8524936	AdditiveExpression	chunk -> chunk_length - zlib -> rewrite_offset		8524631	0		-			
ANR	8524937	PtrMemberAccess	chunk -> chunk_length		8524631	0					
ANR	8524938	Identifier	chunk		8524631	0					
ANR	8524939	Identifier	chunk_length		8524631	1					
ANR	8524940	PtrMemberAccess	zlib -> rewrite_offset		8524631	1					
ANR	8524941	Identifier	zlib		8524631	0					
ANR	8524942	Identifier	rewrite_offset		8524631	1					
ANR	8524943	ExpressionStatement	chunk -> chunk_length -= zlib -> extra_bytes	2601:6:79560:79600	8524631	4	True				
ANR	8524944	AssignmentExpression	chunk -> chunk_length -= zlib -> extra_bytes		8524631	0		-=			
ANR	8524945	PtrMemberAccess	chunk -> chunk_length		8524631	0					
ANR	8524946	Identifier	chunk		8524631	0					
ANR	8524947	Identifier	chunk_length		8524631	1					
ANR	8524948	PtrMemberAccess	zlib -> extra_bytes		8524631	1					
ANR	8524949	Identifier	zlib		8524631	0					
ANR	8524950	Identifier	extra_bytes		8524631	1					
ANR	8524951	ReturnStatement	return rc ;	2602:6:79608:79617	8524631	5	True				
ANR	8524952	Identifier	rc		8524631	0					
ANR	8524953	ReturnType	static int		8524631	1					
ANR	8524954	Identifier	zlib_run		8524631	2					
ANR	8524955	ParameterList	struct zlib * zlib		8524631	3					
ANR	8524956	Parameter	struct zlib * zlib	2489:9:75822:75838	8524631	0	True				
ANR	8524957	ParameterType	struct zlib *		8524631	0					
ANR	8524958	Identifier	zlib		8524631	1					
ANR	8524959	CFGEntryNode	ENTRY		8524631		True				
ANR	8524960	CFGExitNode	EXIT		8524631		True				
ANR	8524961	InfiniteForNode	true		8524631		True				
ANR	8524962	InfiniteForNode	true		8524631		True				
ANR	8524963	Symbol	zlib -> chunk		8524631						
ANR	8524964	Symbol	zlib -> extra_bytes		8524631						
ANR	8524965	Symbol	* list -> lengths		8524631						
ANR	8524966	Symbol	chunk		8524631						
ANR	8524967	Symbol	skip		8524631						
ANR	8524968	Symbol	zlib -> global		8524631						
ANR	8524969	Symbol	zlib -> idat -> idat_list_tail		8524631						
ANR	8524970	Symbol	* * list		8524631						
ANR	8524971	Symbol	ZLIB_OK		8524631						
ANR	8524972	Symbol	zlib -> rewrite_offset		8524631						
ANR	8524973	Symbol	* check		8524631						
ANR	8524974	Symbol	* * zlib		8524631						
ANR	8524975	Symbol	check -> count		8524631						
ANR	8524976	Symbol	check -> next		8524631						
ANR	8524977	Symbol	zlib -> idat		8524631						
ANR	8524978	Symbol	chunk -> chunk_length		8524631						
ANR	8524979	Symbol	zlib_advance		8524631						
ANR	8524980	Symbol	check -> lengths		8524631						
ANR	8524981	Symbol	list -> next		8524631						
ANR	8524982	Symbol	NULL		8524631						
ANR	8524983	Symbol	last		8524631						
ANR	8524984	Symbol	zlib -> file		8524631						
ANR	8524985	Symbol	* zlib		8524631						
ANR	8524986	Symbol	* zlib -> idat		8524631						
ANR	8524987	Symbol	count		8524631						
ANR	8524988	Symbol	i		8524631						
ANR	8524989	Symbol	j		8524631						
ANR	8524990	Symbol	check		8524631						
ANR	8524991	Symbol	list		8524631						
ANR	8524992	Symbol	list -> count		8524631						
ANR	8524993	Symbol	jcount		8524631						
ANR	8524994	Symbol	rc		8524631						
ANR	8524995	Symbol	zlib		8524631						
ANR	8524996	Symbol	* i		8524631						
ANR	8524997	Symbol	* chunk		8524631						
ANR	8524998	Symbol	zlib -> idat -> idat_list_head		8524631						
ANR	8524999	Symbol	list -> lengths		8524631						
ANR	8525000	Symbol	* j		8524631						
ANR	8525001	Symbol	* list		8524631						
ANR	8525002	Symbol	* * check		8524631						
ANR	8525003	Symbol	zlib -> global -> errors		8524631						
ANR	8525004	Symbol	* zlib -> global		8524631						
ANR	8525005	Symbol	* check -> lengths		8524631						
ANR	8525006	Function	zlib_check	2606:0:79627:84489							
ANR	8525007	FunctionDef	"zlib_check (struct file * file , png_uint_32 offset)"		8525006	0					
ANR	8525008	CompoundStatement		2620:0:80303:84489	8525006	0					
ANR	8525009	IdentifierDeclStatement	fpos_t start_pos ;	2621:3:80308:80324	8525006	0	True				
ANR	8525010	IdentifierDecl	start_pos		8525006	0					
ANR	8525011	IdentifierDeclType	fpos_t		8525006	0					
ANR	8525012	Identifier	start_pos		8525006	1					
ANR	8525013	IdentifierDeclStatement	struct zlib zlib ;	2622:3:80329:80345	8525006	1	True				
ANR	8525014	IdentifierDecl	zlib		8525006	0					
ANR	8525015	IdentifierDeclType	struct zlib		8525006	0					
ANR	8525016	Identifier	zlib		8525006	1					
ANR	8525017	ExpressionStatement	"file_getpos ( file , & start_pos )"	2625:3:80412:80441	8525006	2	True				
ANR	8525018	CallExpression	"file_getpos ( file , & start_pos )"		8525006	0					
ANR	8525019	Callee	file_getpos		8525006	0					
ANR	8525020	Identifier	file_getpos		8525006	0					
ANR	8525021	ArgumentList	file		8525006	1					
ANR	8525022	Argument	file		8525006	0					
ANR	8525023	Identifier	file		8525006	0					
ANR	8525024	Argument	& start_pos		8525006	1					
ANR	8525025	UnaryOperationExpression	& start_pos		8525006	0					
ANR	8525026	UnaryOperator	&		8525006	0					
ANR	8525027	Identifier	start_pos		8525006	1					
ANR	8525028	IfStatement	"if ( zlib_init ( & zlib , file -> idat , file -> chunk , 0 , offset ) )"		8525006	3					
ANR	8525029	Condition	"zlib_init ( & zlib , file -> idat , file -> chunk , 0 , offset )"	2628:7:80504:80570	8525006	0	True				
ANR	8525030	CallExpression	"zlib_init ( & zlib , file -> idat , file -> chunk , 0 , offset )"		8525006	0					
ANR	8525031	Callee	zlib_init		8525006	0					
ANR	8525032	Identifier	zlib_init		8525006	0					
ANR	8525033	ArgumentList	& zlib		8525006	1					
ANR	8525034	Argument	& zlib		8525006	0					
ANR	8525035	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525036	UnaryOperator	&		8525006	0					
ANR	8525037	Identifier	zlib		8525006	1					
ANR	8525038	Argument	file -> idat		8525006	1					
ANR	8525039	PtrMemberAccess	file -> idat		8525006	0					
ANR	8525040	Identifier	file		8525006	0					
ANR	8525041	Identifier	idat		8525006	1					
ANR	8525042	Argument	file -> chunk		8525006	2					
ANR	8525043	PtrMemberAccess	file -> chunk		8525006	0					
ANR	8525044	Identifier	file		8525006	0					
ANR	8525045	Identifier	chunk		8525006	1					
ANR	8525046	Argument	0		8525006	3					
ANR	8525047	PrimaryExpression	0		8525006	0					
ANR	8525048	Argument	offset		8525006	4					
ANR	8525049	Identifier	offset		8525006	0					
ANR	8525050	CompoundStatement		11:6:280:306	8525006	1					
ANR	8525051	IdentifierDeclStatement	"int min_bits , max_bits , rc ;"	2630:6:80584:80610	8525006	0	True				
ANR	8525052	IdentifierDecl	min_bits		8525006	0					
ANR	8525053	IdentifierDeclType	int		8525006	0					
ANR	8525054	Identifier	min_bits		8525006	1					
ANR	8525055	IdentifierDecl	max_bits		8525006	1					
ANR	8525056	IdentifierDeclType	int		8525006	0					
ANR	8525057	Identifier	max_bits		8525006	1					
ANR	8525058	IdentifierDecl	rc		8525006	2					
ANR	8525059	IdentifierDeclType	int		8525006	0					
ANR	8525060	Identifier	rc		8525006	1					
ANR	8525061	ExpressionStatement	rc = zlib_run ( & zlib )	2633:6:80677:80697	8525006	1	True				
ANR	8525062	AssignmentExpression	rc = zlib_run ( & zlib )		8525006	0		=			
ANR	8525063	Identifier	rc		8525006	0					
ANR	8525064	CallExpression	zlib_run ( & zlib )		8525006	1					
ANR	8525065	Callee	zlib_run		8525006	0					
ANR	8525066	Identifier	zlib_run		8525006	0					
ANR	8525067	ArgumentList	& zlib		8525006	1					
ANR	8525068	Argument	& zlib		8525006	0					
ANR	8525069	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525070	UnaryOperator	&		8525006	0					
ANR	8525071	Identifier	zlib		8525006	1					
ANR	8525072	SwitchStatement	switch ( rc )		8525006	2					
ANR	8525073	Condition	rc	2635:14:80714:80715	8525006	0	True				
ANR	8525074	Identifier	rc		8525006	0					
ANR	8525075	CompoundStatement		17:6:420:420	8525006	1					
ANR	8525076	Label	case ZLIB_TOO_FAR_BACK :	2637:9:80735:80757	8525006	0	True				
ANR	8525077	Identifier	ZLIB_TOO_FAR_BACK		8525006	0					
ANR	8525078	ExpressionStatement	file -> status_code |= TOO_FAR_BACK	2639:12:80808:80841	8525006	1	True				
ANR	8525079	AssignmentExpression	file -> status_code |= TOO_FAR_BACK		8525006	0		|=			
ANR	8525080	PtrMemberAccess	file -> status_code		8525006	0					
ANR	8525081	Identifier	file		8525006	0					
ANR	8525082	Identifier	status_code		8525006	1					
ANR	8525083	Identifier	TOO_FAR_BACK		8525006	1					
ANR	8525084	ExpressionStatement	min_bits = zlib . window_bits + 1	2640:12:80855:80886	8525006	2	True				
ANR	8525085	AssignmentExpression	min_bits = zlib . window_bits + 1		8525006	0		=			
ANR	8525086	Identifier	min_bits		8525006	0					
ANR	8525087	AdditiveExpression	zlib . window_bits + 1		8525006	1		+			
ANR	8525088	MemberAccess	zlib . window_bits		8525006	0					
ANR	8525089	Identifier	zlib		8525006	0					
ANR	8525090	Identifier	window_bits		8525006	1					
ANR	8525091	PrimaryExpression	1		8525006	1					
ANR	8525092	ExpressionStatement	max_bits = 15	2641:12:80900:80913	8525006	3	True				
ANR	8525093	AssignmentExpression	max_bits = 15		8525006	0		=			
ANR	8525094	Identifier	max_bits		8525006	0					
ANR	8525095	PrimaryExpression	15		8525006	1					
ANR	8525096	BreakStatement	break ;	2642:12:80927:80932	8525006	4	True				
ANR	8525097	Label	case ZLIB_STREAM_END :	2644:9:80944:80964	8525006	5	True				
ANR	8525098	Identifier	ZLIB_STREAM_END		8525006	0					
ANR	8525099	IfStatement	if ( ! zlib . global -> optimize_zlib && zlib . window_bits == zlib . file_bits && ! zlib . cksum )		8525006	6					
ANR	8525100	Condition	! zlib . global -> optimize_zlib && zlib . window_bits == zlib . file_bits && ! zlib . cksum	2645:16:80982:81076	8525006	0	True				
ANR	8525101	AndExpression	! zlib . global -> optimize_zlib && zlib . window_bits == zlib . file_bits && ! zlib . cksum		8525006	0		&&			
ANR	8525102	UnaryOperationExpression	! zlib . global -> optimize_zlib		8525006	0					
ANR	8525103	UnaryOperator	!		8525006	0					
ANR	8525104	PtrMemberAccess	zlib . global -> optimize_zlib		8525006	1					
ANR	8525105	MemberAccess	zlib . global		8525006	0					
ANR	8525106	Identifier	zlib		8525006	0					
ANR	8525107	Identifier	global		8525006	1					
ANR	8525108	Identifier	optimize_zlib		8525006	1					
ANR	8525109	AndExpression	zlib . window_bits == zlib . file_bits && ! zlib . cksum		8525006	1		&&			
ANR	8525110	EqualityExpression	zlib . window_bits == zlib . file_bits		8525006	0		==			
ANR	8525111	MemberAccess	zlib . window_bits		8525006	0					
ANR	8525112	Identifier	zlib		8525006	0					
ANR	8525113	Identifier	window_bits		8525006	1					
ANR	8525114	MemberAccess	zlib . file_bits		8525006	1					
ANR	8525115	Identifier	zlib		8525006	0					
ANR	8525116	Identifier	file_bits		8525006	1					
ANR	8525117	UnaryOperationExpression	! zlib . cksum		8525006	1					
ANR	8525118	UnaryOperator	!		8525006	0					
ANR	8525119	MemberAccess	zlib . cksum		8525006	1					
ANR	8525120	Identifier	zlib		8525006	0					
ANR	8525121	Identifier	cksum		8525006	1					
ANR	8525122	CompoundStatement		28:12:787:787	8525006	1					
ANR	8525123	ExpressionStatement	zlib_end ( & zlib )	2651:15:81239:81254	8525006	0	True				
ANR	8525124	CallExpression	zlib_end ( & zlib )		8525006	0					
ANR	8525125	Callee	zlib_end		8525006	0					
ANR	8525126	Identifier	zlib_end		8525006	0					
ANR	8525127	ArgumentList	& zlib		8525006	1					
ANR	8525128	Argument	& zlib		8525006	0					
ANR	8525129	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525130	UnaryOperator	&		8525006	0					
ANR	8525131	Identifier	zlib		8525006	1					
ANR	8525132	ReturnStatement	return 1 ;	2652:15:81271:81279	8525006	1	True				
ANR	8525133	PrimaryExpression	1		8525006	0					
ANR	8525134	ExpressionStatement	"max_bits = max_window_bits ( zlib . uncompressed_bytes , zlib . uncompressed_digits )"	2655:12:81308:81400	8525006	7	True				
ANR	8525135	AssignmentExpression	"max_bits = max_window_bits ( zlib . uncompressed_bytes , zlib . uncompressed_digits )"		8525006	0		=			
ANR	8525136	Identifier	max_bits		8525006	0					
ANR	8525137	CallExpression	"max_window_bits ( zlib . uncompressed_bytes , zlib . uncompressed_digits )"		8525006	1					
ANR	8525138	Callee	max_window_bits		8525006	0					
ANR	8525139	Identifier	max_window_bits		8525006	0					
ANR	8525140	ArgumentList	zlib . uncompressed_bytes		8525006	1					
ANR	8525141	Argument	zlib . uncompressed_bytes		8525006	0					
ANR	8525142	MemberAccess	zlib . uncompressed_bytes		8525006	0					
ANR	8525143	Identifier	zlib		8525006	0					
ANR	8525144	Identifier	uncompressed_bytes		8525006	1					
ANR	8525145	Argument	zlib . uncompressed_digits		8525006	1					
ANR	8525146	MemberAccess	zlib . uncompressed_digits		8525006	0					
ANR	8525147	Identifier	zlib		8525006	0					
ANR	8525148	Identifier	uncompressed_digits		8525006	1					
ANR	8525149	IfStatement	if ( zlib . ok_bits < max_bits )		8525006	8					
ANR	8525150	Condition	zlib . ok_bits < max_bits	2657:16:81418:81440	8525006	0	True				
ANR	8525151	RelationalExpression	zlib . ok_bits < max_bits		8525006	0		<			
ANR	8525152	MemberAccess	zlib . ok_bits		8525006	0					
ANR	8525153	Identifier	zlib		8525006	0					
ANR	8525154	Identifier	ok_bits		8525006	1					
ANR	8525155	Identifier	max_bits		8525006	1					
ANR	8525156	ExpressionStatement	max_bits = zlib . ok_bits	2658:15:81458:81481	8525006	1	True				
ANR	8525157	AssignmentExpression	max_bits = zlib . ok_bits		8525006	0		=			
ANR	8525158	Identifier	max_bits		8525006	0					
ANR	8525159	MemberAccess	zlib . ok_bits		8525006	1					
ANR	8525160	Identifier	zlib		8525006	0					
ANR	8525161	Identifier	ok_bits		8525006	1					
ANR	8525162	ExpressionStatement	min_bits = 8	2659:12:81495:81507	8525006	9	True				
ANR	8525163	AssignmentExpression	min_bits = 8		8525006	0		=			
ANR	8525164	Identifier	min_bits		8525006	0					
ANR	8525165	PrimaryExpression	8		8525006	1					
ANR	8525166	IfStatement	if ( zlib . cksum )		8525006	10					
ANR	8525167	Condition	zlib . cksum	2666:16:81838:81847	8525006	0	True				
ANR	8525168	MemberAccess	zlib . cksum		8525006	0					
ANR	8525169	Identifier	zlib		8525006	0					
ANR	8525170	Identifier	cksum		8525006	1					
ANR	8525171	ExpressionStatement	"chunk_message ( zlib . chunk , ""zlib checkum"" )"	2667:15:81865:81906	8525006	1	True				
ANR	8525172	CallExpression	"chunk_message ( zlib . chunk , ""zlib checkum"" )"		8525006	0					
ANR	8525173	Callee	chunk_message		8525006	0					
ANR	8525174	Identifier	chunk_message		8525006	0					
ANR	8525175	ArgumentList	zlib . chunk		8525006	1					
ANR	8525176	Argument	zlib . chunk		8525006	0					
ANR	8525177	MemberAccess	zlib . chunk		8525006	0					
ANR	8525178	Identifier	zlib		8525006	0					
ANR	8525179	Identifier	chunk		8525006	1					
ANR	8525180	Argument	"""zlib checkum"""		8525006	1					
ANR	8525181	PrimaryExpression	"""zlib checkum"""		8525006	0					
ANR	8525182	BreakStatement	break ;	2668:12:81920:81925	8525006	11	True				
ANR	8525183	Label	case ZLIB_OK :	2671:9:81938:81950	8525006	12	True				
ANR	8525184	Identifier	ZLIB_OK		8525006	0					
ANR	8525185	ExpressionStatement	"zlib . z . msg = PNGZ_MSG_CAST ( ""[truncated]"" )"	2673:12:82044:82085	8525006	13	True				
ANR	8525186	AssignmentExpression	"zlib . z . msg = PNGZ_MSG_CAST ( ""[truncated]"" )"		8525006	0		=			
ANR	8525187	MemberAccess	zlib . z . msg		8525006	0					
ANR	8525188	MemberAccess	zlib . z		8525006	0					
ANR	8525189	Identifier	zlib		8525006	0					
ANR	8525190	Identifier	z		8525006	1					
ANR	8525191	Identifier	msg		8525006	1					
ANR	8525192	CallExpression	"PNGZ_MSG_CAST ( ""[truncated]"" )"		8525006	1					
ANR	8525193	Callee	PNGZ_MSG_CAST		8525006	0					
ANR	8525194	Identifier	PNGZ_MSG_CAST		8525006	0					
ANR	8525195	ArgumentList	"""[truncated]"""		8525006	1					
ANR	8525196	Argument	"""[truncated]"""		8525006	0					
ANR	8525197	PrimaryExpression	"""[truncated]"""		8525006	0					
ANR	8525198	ExpressionStatement	"zlib_message ( & zlib , 0 )"	2674:12:82099:82133	8525006	14	True				
ANR	8525199	CallExpression	"zlib_message ( & zlib , 0 )"		8525006	0					
ANR	8525200	Callee	zlib_message		8525006	0					
ANR	8525201	Identifier	zlib_message		8525006	0					
ANR	8525202	ArgumentList	& zlib		8525006	1					
ANR	8525203	Argument	& zlib		8525006	0					
ANR	8525204	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525205	UnaryOperator	&		8525006	0					
ANR	8525206	Identifier	zlib		8525006	1					
ANR	8525207	Argument	0		8525006	1					
ANR	8525208	PrimaryExpression	0		8525006	0					
ANR	8525209	Label	default :	2677:9:82175:82182	8525006	15	True				
ANR	8525210	Identifier	default		8525006	0					
ANR	8525211	ExpressionStatement	zlib_end ( & zlib )	2681:12:82319:82334	8525006	16	True				
ANR	8525212	CallExpression	zlib_end ( & zlib )		8525006	0					
ANR	8525213	Callee	zlib_end		8525006	0					
ANR	8525214	Identifier	zlib_end		8525006	0					
ANR	8525215	ArgumentList	& zlib		8525006	1					
ANR	8525216	Argument	& zlib		8525006	0					
ANR	8525217	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525218	UnaryOperator	&		8525006	0					
ANR	8525219	Identifier	zlib		8525006	1					
ANR	8525220	ReturnStatement	return 0 ;	2682:12:82348:82356	8525006	17	True				
ANR	8525221	PrimaryExpression	0		8525006	0					
ANR	8525222	WhileStatement	while ( min_bits < max_bits || max_bits < zlib . ok_bits )		8525006	3					
ANR	8525223	Condition	min_bits < max_bits || max_bits < zlib . ok_bits	2689:13:82564:82609	8525006	0	True				
ANR	8525224	OrExpression	min_bits < max_bits || max_bits < zlib . ok_bits		8525006	0		||			
ANR	8525225	RelationalExpression	min_bits < max_bits		8525006	0		<			
ANR	8525226	Identifier	min_bits		8525006	0					
ANR	8525227	Identifier	max_bits		8525006	1					
ANR	8525228	RelationalExpression	max_bits < zlib . ok_bits		8525006	1		<			
ANR	8525229	Identifier	max_bits		8525006	0					
ANR	8525230	MemberAccess	zlib . ok_bits		8525006	1					
ANR	8525231	Identifier	zlib		8525006	0					
ANR	8525232	Identifier	ok_bits		8525006	1					
ANR	8525233	CompoundStatement		72:9:2334:2376	8525006	1					
ANR	8525234	IdentifierDeclStatement	int test_bits = ( min_bits + max_bits ) >> 1 ;	2691:9:82638:82680	8525006	0	True				
ANR	8525235	IdentifierDecl	test_bits = ( min_bits + max_bits ) >> 1		8525006	0					
ANR	8525236	IdentifierDeclType	int		8525006	0					
ANR	8525237	Identifier	test_bits		8525006	1					
ANR	8525238	AssignmentExpression	test_bits = ( min_bits + max_bits ) >> 1		8525006	2		=			
ANR	8525239	Identifier	test_bits		8525006	0					
ANR	8525240	ShiftExpression	( min_bits + max_bits ) >> 1		8525006	1		>>			
ANR	8525241	AdditiveExpression	min_bits + max_bits		8525006	0		+			
ANR	8525242	Identifier	min_bits		8525006	0					
ANR	8525243	Identifier	max_bits		8525006	1					
ANR	8525244	PrimaryExpression	1		8525006	1					
ANR	8525245	IfStatement	"if ( zlib_reset ( & zlib , test_bits ) )"		8525006	1					
ANR	8525246	Condition	"zlib_reset ( & zlib , test_bits )"	2693:13:82696:82723	8525006	0	True				
ANR	8525247	CallExpression	"zlib_reset ( & zlib , test_bits )"		8525006	0					
ANR	8525248	Callee	zlib_reset		8525006	0					
ANR	8525249	Identifier	zlib_reset		8525006	0					
ANR	8525250	ArgumentList	& zlib		8525006	1					
ANR	8525251	Argument	& zlib		8525006	0					
ANR	8525252	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525253	UnaryOperator	&		8525006	0					
ANR	8525254	Identifier	zlib		8525006	1					
ANR	8525255	Argument	test_bits		8525006	1					
ANR	8525256	Identifier	test_bits		8525006	0					
ANR	8525257	CompoundStatement		75:9:2431:2431	8525006	1					
ANR	8525258	ExpressionStatement	"file_setpos ( file , & start_pos )"	2695:12:82749:82778	8525006	0	True				
ANR	8525259	CallExpression	"file_setpos ( file , & start_pos )"		8525006	0					
ANR	8525260	Callee	file_setpos		8525006	0					
ANR	8525261	Identifier	file_setpos		8525006	0					
ANR	8525262	ArgumentList	file		8525006	1					
ANR	8525263	Argument	file		8525006	0					
ANR	8525264	Identifier	file		8525006	0					
ANR	8525265	Argument	& start_pos		8525006	1					
ANR	8525266	UnaryOperationExpression	& start_pos		8525006	0					
ANR	8525267	UnaryOperator	&		8525006	0					
ANR	8525268	Identifier	start_pos		8525006	1					
ANR	8525269	ExpressionStatement	rc = zlib_run ( & zlib )	2696:12:82792:82812	8525006	1	True				
ANR	8525270	AssignmentExpression	rc = zlib_run ( & zlib )		8525006	0		=			
ANR	8525271	Identifier	rc		8525006	0					
ANR	8525272	CallExpression	zlib_run ( & zlib )		8525006	1					
ANR	8525273	Callee	zlib_run		8525006	0					
ANR	8525274	Identifier	zlib_run		8525006	0					
ANR	8525275	ArgumentList	& zlib		8525006	1					
ANR	8525276	Argument	& zlib		8525006	0					
ANR	8525277	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525278	UnaryOperator	&		8525006	0					
ANR	8525279	Identifier	zlib		8525006	1					
ANR	8525280	SwitchStatement	switch ( rc )		8525006	2					
ANR	8525281	Condition	rc	2698:20:82835:82836	8525006	0	True				
ANR	8525282	Identifier	rc		8525006	0					
ANR	8525283	CompoundStatement		80:12:2547:2547	8525006	1					
ANR	8525284	Label	case ZLIB_TOO_FAR_BACK :	2700:15:82868:82890	8525006	0	True				
ANR	8525285	Identifier	ZLIB_TOO_FAR_BACK		8525006	0					
ANR	8525286	ExpressionStatement	min_bits = test_bits + 1	2701:18:82910:82932	8525006	1	True				
ANR	8525287	AssignmentExpression	min_bits = test_bits + 1		8525006	0		=			
ANR	8525288	Identifier	min_bits		8525006	0					
ANR	8525289	AdditiveExpression	test_bits + 1		8525006	1		+			
ANR	8525290	Identifier	test_bits		8525006	0					
ANR	8525291	PrimaryExpression	1		8525006	1					
ANR	8525292	IfStatement	if ( min_bits > max_bits )		8525006	2					
ANR	8525293	Condition	min_bits > max_bits	2702:22:82956:82974	8525006	0	True				
ANR	8525294	RelationalExpression	min_bits > max_bits		8525006	0		>			
ANR	8525295	Identifier	min_bits		8525006	0					
ANR	8525296	Identifier	max_bits		8525006	1					
ANR	8525297	CompoundStatement		84:18:2691:2691	8525006	1					
ANR	8525298	ExpressionStatement	assert ( test_bits == 15 )	2708:21:83258:83281	8525006	0	True				
ANR	8525299	CallExpression	assert ( test_bits == 15 )		8525006	0					
ANR	8525300	Callee	assert		8525006	0					
ANR	8525301	Identifier	assert		8525006	0					
ANR	8525302	ArgumentList	test_bits == 15		8525006	1					
ANR	8525303	Argument	test_bits == 15		8525006	0					
ANR	8525304	EqualityExpression	test_bits == 15		8525006	0		==			
ANR	8525305	Identifier	test_bits		8525006	0					
ANR	8525306	PrimaryExpression	15		8525006	1					
ANR	8525307	IfStatement	if ( zlib . z . msg == NULL )		8525006	1					
ANR	8525308	Condition	zlib . z . msg == NULL	2711:25:83380:83397	8525006	0	True				
ANR	8525309	EqualityExpression	zlib . z . msg == NULL		8525006	0		==			
ANR	8525310	MemberAccess	zlib . z . msg		8525006	0					
ANR	8525311	MemberAccess	zlib . z		8525006	0					
ANR	8525312	Identifier	zlib		8525006	0					
ANR	8525313	Identifier	z		8525006	1					
ANR	8525314	Identifier	msg		8525006	1					
ANR	8525315	Identifier	NULL		8525006	1					
ANR	8525316	ExpressionStatement	"zlib . z . msg = PNGZ_MSG_CAST ( ""invalid distance too far back"" )"	2712:24:83424:83511	8525006	1	True				
ANR	8525317	AssignmentExpression	"zlib . z . msg = PNGZ_MSG_CAST ( ""invalid distance too far back"" )"		8525006	0		=			
ANR	8525318	MemberAccess	zlib . z . msg		8525006	0					
ANR	8525319	MemberAccess	zlib . z		8525006	0					
ANR	8525320	Identifier	zlib		8525006	0					
ANR	8525321	Identifier	z		8525006	1					
ANR	8525322	Identifier	msg		8525006	1					
ANR	8525323	CallExpression	"PNGZ_MSG_CAST ( ""invalid distance too far back"" )"		8525006	1					
ANR	8525324	Callee	PNGZ_MSG_CAST		8525006	0					
ANR	8525325	Identifier	PNGZ_MSG_CAST		8525006	0					
ANR	8525326	ArgumentList	"""invalid distance too far back"""		8525006	1					
ANR	8525327	Argument	"""invalid distance too far back"""		8525006	0					
ANR	8525328	PrimaryExpression	"""invalid distance too far back"""		8525006	0					
ANR	8525329	ExpressionStatement	"zlib_message ( & zlib , 0 )"	2714:21:83534:83572	8525006	2	True				
ANR	8525330	CallExpression	"zlib_message ( & zlib , 0 )"		8525006	0					
ANR	8525331	Callee	zlib_message		8525006	0					
ANR	8525332	Identifier	zlib_message		8525006	0					
ANR	8525333	ArgumentList	& zlib		8525006	1					
ANR	8525334	Argument	& zlib		8525006	0					
ANR	8525335	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525336	UnaryOperator	&		8525006	0					
ANR	8525337	Identifier	zlib		8525006	1					
ANR	8525338	Argument	0		8525006	1					
ANR	8525339	PrimaryExpression	0		8525006	0					
ANR	8525340	ExpressionStatement	zlib_end ( & zlib )	2715:21:83595:83610	8525006	3	True				
ANR	8525341	CallExpression	zlib_end ( & zlib )		8525006	0					
ANR	8525342	Callee	zlib_end		8525006	0					
ANR	8525343	Identifier	zlib_end		8525006	0					
ANR	8525344	ArgumentList	& zlib		8525006	1					
ANR	8525345	Argument	& zlib		8525006	0					
ANR	8525346	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525347	UnaryOperator	&		8525006	0					
ANR	8525348	Identifier	zlib		8525006	1					
ANR	8525349	ReturnStatement	return 0 ;	2716:21:83633:83641	8525006	4	True				
ANR	8525350	PrimaryExpression	0		8525006	0					
ANR	8525351	BreakStatement	break ;	2718:18:83681:83686	8525006	3	True				
ANR	8525352	Label	case ZLIB_STREAM_END :	2720:15:83704:83724	8525006	4	True				
ANR	8525353	Identifier	ZLIB_STREAM_END		8525006	0					
ANR	8525354	ExpressionStatement	max_bits = test_bits	2721:18:83758:83778	8525006	5	True				
ANR	8525355	AssignmentExpression	max_bits = test_bits		8525006	0		=			
ANR	8525356	Identifier	max_bits		8525006	0					
ANR	8525357	Identifier	test_bits		8525006	1					
ANR	8525358	BreakStatement	break ;	2722:18:83798:83803	8525006	6	True				
ANR	8525359	Label	default :	2724:15:83821:83828	8525006	7	True				
ANR	8525360	Identifier	default		8525006	0					
ANR	8525361	ExpressionStatement	zlib_end ( & zlib )	2729:18:84066:84081	8525006	8	True				
ANR	8525362	CallExpression	zlib_end ( & zlib )		8525006	0					
ANR	8525363	Callee	zlib_end		8525006	0					
ANR	8525364	Identifier	zlib_end		8525006	0					
ANR	8525365	ArgumentList	& zlib		8525006	1					
ANR	8525366	Argument	& zlib		8525006	0					
ANR	8525367	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525368	UnaryOperator	&		8525006	0					
ANR	8525369	Identifier	zlib		8525006	1					
ANR	8525370	ReturnStatement	return 0 ;	2730:18:84101:84109	8525006	9	True				
ANR	8525371	PrimaryExpression	0		8525006	0					
ANR	8525372	ElseStatement	else		8525006	0					
ANR	8525373	CompoundStatement		116:9:3883:3883	8525006	0					
ANR	8525374	ExpressionStatement	zlib_end ( & zlib )	2736:12:84201:84216	8525006	0	True				
ANR	8525375	CallExpression	zlib_end ( & zlib )		8525006	0					
ANR	8525376	Callee	zlib_end		8525006	0					
ANR	8525377	Identifier	zlib_end		8525006	0					
ANR	8525378	ArgumentList	& zlib		8525006	1					
ANR	8525379	Argument	& zlib		8525006	0					
ANR	8525380	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525381	UnaryOperator	&		8525006	0					
ANR	8525382	Identifier	zlib		8525006	1					
ANR	8525383	ReturnStatement	return 0 ;	2737:12:84230:84238	8525006	1	True				
ANR	8525384	PrimaryExpression	0		8525006	0					
ANR	8525385	ExpressionStatement	assert ( zlib . ok_bits == max_bits )	2742:6:84303:84335	8525006	4	True				
ANR	8525386	CallExpression	assert ( zlib . ok_bits == max_bits )		8525006	0					
ANR	8525387	Callee	assert		8525006	0					
ANR	8525388	Identifier	assert		8525006	0					
ANR	8525389	ArgumentList	zlib . ok_bits == max_bits		8525006	1					
ANR	8525390	Argument	zlib . ok_bits == max_bits		8525006	0					
ANR	8525391	EqualityExpression	zlib . ok_bits == max_bits		8525006	0		==			
ANR	8525392	MemberAccess	zlib . ok_bits		8525006	0					
ANR	8525393	Identifier	zlib		8525006	0					
ANR	8525394	Identifier	ok_bits		8525006	1					
ANR	8525395	Identifier	max_bits		8525006	1					
ANR	8525396	ExpressionStatement	zlib_end ( & zlib )	2743:6:84343:84358	8525006	5	True				
ANR	8525397	CallExpression	zlib_end ( & zlib )		8525006	0					
ANR	8525398	Callee	zlib_end		8525006	0					
ANR	8525399	Identifier	zlib_end		8525006	0					
ANR	8525400	ArgumentList	& zlib		8525006	1					
ANR	8525401	Argument	& zlib		8525006	0					
ANR	8525402	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525403	UnaryOperator	&		8525006	0					
ANR	8525404	Identifier	zlib		8525006	1					
ANR	8525405	ReturnStatement	return 1 ;	2744:6:84366:84374	8525006	6	True				
ANR	8525406	PrimaryExpression	1		8525006	0					
ANR	8525407	ElseStatement	else		8525006	0					
ANR	8525408	CompoundStatement		129:3:4139:4139	8525006	0					
ANR	8525409	ExpressionStatement	zlib_end ( & zlib )	2749:6:84451:84466	8525006	0	True				
ANR	8525410	CallExpression	zlib_end ( & zlib )		8525006	0					
ANR	8525411	Callee	zlib_end		8525006	0					
ANR	8525412	Identifier	zlib_end		8525006	0					
ANR	8525413	ArgumentList	& zlib		8525006	1					
ANR	8525414	Argument	& zlib		8525006	0					
ANR	8525415	UnaryOperationExpression	& zlib		8525006	0					
ANR	8525416	UnaryOperator	&		8525006	0					
ANR	8525417	Identifier	zlib		8525006	1					
ANR	8525418	ReturnStatement	return 0 ;	2750:6:84474:84482	8525006	1	True				
ANR	8525419	PrimaryExpression	0		8525006	0					
ANR	8525420	ReturnType	static int		8525006	1					
ANR	8525421	Identifier	zlib_check		8525006	2					
ANR	8525422	ParameterList	"struct file * file , png_uint_32 offset"		8525006	3					
ANR	8525423	Parameter	struct file * file	2607:11:79694:79710	8525006	0	True				
ANR	8525424	ParameterType	struct file *		8525006	0					
ANR	8525425	Identifier	file		8525006	1					
ANR	8525426	Parameter	png_uint_32 offset	2607:30:79713:79730	8525006	1	True				
ANR	8525427	ParameterType	png_uint_32		8525006	0					
ANR	8525428	Identifier	offset		8525006	1					
ANR	8525429	CFGEntryNode	ENTRY		8525006		True				
ANR	8525430	CFGExitNode	EXIT		8525006		True				
ANR	8525431	Symbol	zlib . global -> optimize_zlib		8525006						
ANR	8525432	Symbol	& start_pos		8525006						
ANR	8525433	Symbol	file -> chunk		8525006						
ANR	8525434	Symbol	max_bits		8525006						
ANR	8525435	Symbol	zlib . global		8525006						
ANR	8525436	Symbol	zlib . z . msg		8525006						
ANR	8525437	Symbol	zlib . file_bits		8525006						
ANR	8525438	Symbol	& zlib		8525006						
ANR	8525439	Symbol	file		8525006						
ANR	8525440	Symbol	zlib . uncompressed_bytes		8525006						
ANR	8525441	Symbol	file -> idat		8525006						
ANR	8525442	Symbol	zlib . ok_bits		8525006						
ANR	8525443	Symbol	zlib . chunk		8525006						
ANR	8525444	Symbol	TOO_FAR_BACK		8525006						
ANR	8525445	Symbol	zlib . z		8525006						
ANR	8525446	Symbol	NULL		8525006						
ANR	8525447	Symbol	offset		8525006						
ANR	8525448	Symbol	* zlib		8525006						
ANR	8525449	Symbol	zlib . cksum		8525006						
ANR	8525450	Symbol	* file		8525006						
ANR	8525451	Symbol	start_pos		8525006						
ANR	8525452	Symbol	file -> status_code		8525006						
ANR	8525453	Symbol	* zlib . global		8525006						
ANR	8525454	Symbol	rc		8525006						
ANR	8525455	Symbol	zlib		8525006						
ANR	8525456	Symbol	PNGZ_MSG_CAST		8525006						
ANR	8525457	Symbol	test_bits		8525006						
ANR	8525458	Symbol	zlib_reset		8525006						
ANR	8525459	Symbol	zlib_init		8525006						
ANR	8525460	Symbol	zlib_run		8525006						
ANR	8525461	Symbol	zlib . window_bits		8525006						
ANR	8525462	Symbol	zlib . uncompressed_digits		8525006						
ANR	8525463	Symbol	max_window_bits		8525006						
ANR	8525464	Symbol	min_bits		8525006						
ANR	8525465	DeclStmt									
ANR	8525466	Decl							void	void ( struct file * file )	read_chunk
ANR	8525467	Function	process_chunk	2783:0:85933:91567							
ANR	8525468	FunctionDef	"process_chunk (struct file * file , png_uint_32 file_crc , png_uint_32 next_length , png_uint_32 next_type)"		8525467	0					
ANR	8525469	CompoundStatement		2793:0:86380:91567	8525467	0					
ANR	8525470	IdentifierDeclStatement	const png_uint_32 type = file -> type ;	2794:3:86385:86420	8525467	0	True				
ANR	8525471	IdentifierDecl	type = file -> type		8525467	0					
ANR	8525472	IdentifierDeclType	const png_uint_32		8525467	0					
ANR	8525473	Identifier	type		8525467	1					
ANR	8525474	AssignmentExpression	type = file -> type		8525467	2		=			
ANR	8525475	Identifier	type		8525467	0					
ANR	8525476	PtrMemberAccess	file -> type		8525467	1					
ANR	8525477	Identifier	file		8525467	0					
ANR	8525478	Identifier	type		8525467	1					
ANR	8525479	IfStatement	if ( file -> global -> verbose > 1 )		8525467	1					
ANR	8525480	Condition	file -> global -> verbose > 1	2796:7:86430:86454	8525467	0	True				
ANR	8525481	RelationalExpression	file -> global -> verbose > 1		8525467	0		>			
ANR	8525482	PtrMemberAccess	file -> global -> verbose		8525467	0					
ANR	8525483	PtrMemberAccess	file -> global		8525467	0					
ANR	8525484	Identifier	file		8525467	0					
ANR	8525485	Identifier	global		8525467	1					
ANR	8525486	Identifier	verbose		8525467	1					
ANR	8525487	PrimaryExpression	1		8525467	1					
ANR	8525488	CompoundStatement		5:3:79:79	8525467	1					
ANR	8525489	ExpressionStatement	"fputs ( ""  "" , stderr )"	2798:6:86468:86487	8525467	0	True				
ANR	8525490	CallExpression	"fputs ( ""  "" , stderr )"		8525467	0					
ANR	8525491	Callee	fputs		8525467	0					
ANR	8525492	Identifier	fputs		8525467	0					
ANR	8525493	ArgumentList	"""  """		8525467	1					
ANR	8525494	Argument	"""  """		8525467	0					
ANR	8525495	PrimaryExpression	"""  """		8525467	0					
ANR	8525496	Argument	stderr		8525467	1					
ANR	8525497	Identifier	stderr		8525467	0					
ANR	8525498	ExpressionStatement	"type_name ( file -> type , stderr )"	2799:6:86495:86524	8525467	1	True				
ANR	8525499	CallExpression	"type_name ( file -> type , stderr )"		8525467	0					
ANR	8525500	Callee	type_name		8525467	0					
ANR	8525501	Identifier	type_name		8525467	0					
ANR	8525502	ArgumentList	file -> type		8525467	1					
ANR	8525503	Argument	file -> type		8525467	0					
ANR	8525504	PtrMemberAccess	file -> type		8525467	0					
ANR	8525505	Identifier	file		8525467	0					
ANR	8525506	Identifier	type		8525467	1					
ANR	8525507	Argument	stderr		8525467	1					
ANR	8525508	Identifier	stderr		8525467	0					
ANR	8525509	ExpressionStatement	"fprintf ( stderr , "" %lu 0x%.8x 0x%.8x\\n"" , ( unsigned long ) file -> length , file -> crc ^ 0xffffffff , file_crc )"	2800:6:86532:86643	8525467	2	True				
ANR	8525510	CallExpression	"fprintf ( stderr , "" %lu 0x%.8x 0x%.8x\\n"" , ( unsigned long ) file -> length , file -> crc ^ 0xffffffff , file_crc )"		8525467	0					
ANR	8525511	Callee	fprintf		8525467	0					
ANR	8525512	Identifier	fprintf		8525467	0					
ANR	8525513	ArgumentList	stderr		8525467	1					
ANR	8525514	Argument	stderr		8525467	0					
ANR	8525515	Identifier	stderr		8525467	0					
ANR	8525516	Argument	""" %lu 0x%.8x 0x%.8x\\n"""		8525467	1					
ANR	8525517	PrimaryExpression	""" %lu 0x%.8x 0x%.8x\\n"""		8525467	0					
ANR	8525518	Argument	( unsigned long ) file -> length		8525467	2					
ANR	8525519	CastExpression	( unsigned long ) file -> length		8525467	0					
ANR	8525520	CastTarget	unsigned long		8525467	0					
ANR	8525521	PtrMemberAccess	file -> length		8525467	1					
ANR	8525522	Identifier	file		8525467	0					
ANR	8525523	Identifier	length		8525467	1					
ANR	8525524	Argument	file -> crc ^ 0xffffffff		8525467	3					
ANR	8525525	ExclusiveOrExpression	file -> crc ^ 0xffffffff		8525467	0		^			
ANR	8525526	PtrMemberAccess	file -> crc		8525467	0					
ANR	8525527	Identifier	file		8525467	0					
ANR	8525528	Identifier	crc		8525467	1					
ANR	8525529	PrimaryExpression	0xffffffff		8525467	1					
ANR	8525530	Argument	file_crc		8525467	4					
ANR	8525531	Identifier	file_crc		8525467	0					
ANR	8525532	IfStatement	if ( ( file -> crc ^ 0xffffffff ) != file_crc )		8525467	2					
ANR	8525533	Condition	( file -> crc ^ 0xffffffff ) != file_crc	2808:7:86854:86889	8525467	0	True				
ANR	8525534	EqualityExpression	( file -> crc ^ 0xffffffff ) != file_crc		8525467	0		!=			
ANR	8525535	ExclusiveOrExpression	file -> crc ^ 0xffffffff		8525467	0		^			
ANR	8525536	PtrMemberAccess	file -> crc		8525467	0					
ANR	8525537	Identifier	file		8525467	0					
ANR	8525538	Identifier	crc		8525467	1					
ANR	8525539	PrimaryExpression	0xffffffff		8525467	1					
ANR	8525540	Identifier	file_crc		8525467	1					
ANR	8525541	CompoundStatement		17:3:514:514	8525467	1					
ANR	8525542	ExpressionStatement	file -> status_code |= CRC_ERROR	2815:6:87219:87249	8525467	0	True				
ANR	8525543	AssignmentExpression	file -> status_code |= CRC_ERROR		8525467	0		|=			
ANR	8525544	PtrMemberAccess	file -> status_code		8525467	0					
ANR	8525545	Identifier	file		8525467	0					
ANR	8525546	Identifier	status_code		8525467	1					
ANR	8525547	Identifier	CRC_ERROR		8525467	1					
ANR	8525548	IfStatement	if ( file -> global -> skip != SKIP_BAD_CRC )		8525467	1					
ANR	8525549	Condition	file -> global -> skip != SKIP_BAD_CRC	2818:10:87294:87327	8525467	0	True				
ANR	8525550	EqualityExpression	file -> global -> skip != SKIP_BAD_CRC		8525467	0		!=			
ANR	8525551	PtrMemberAccess	file -> global -> skip		8525467	0					
ANR	8525552	PtrMemberAccess	file -> global		8525467	0					
ANR	8525553	Identifier	file		8525467	0					
ANR	8525554	Identifier	global		8525467	1					
ANR	8525555	Identifier	skip		8525467	1					
ANR	8525556	Identifier	SKIP_BAD_CRC		8525467	1					
ANR	8525557	ExpressionStatement	"type_message ( file , type , ""bad CRC"" )"	2819:9:87339:87374	8525467	1	True				
ANR	8525558	CallExpression	"type_message ( file , type , ""bad CRC"" )"		8525467	0					
ANR	8525559	Callee	type_message		8525467	0					
ANR	8525560	Identifier	type_message		8525467	0					
ANR	8525561	ArgumentList	file		8525467	1					
ANR	8525562	Argument	file		8525467	0					
ANR	8525563	Identifier	file		8525467	0					
ANR	8525564	Argument	type		8525467	1					
ANR	8525565	Identifier	type		8525467	0					
ANR	8525566	Argument	"""bad CRC"""		8525467	2					
ANR	8525567	PrimaryExpression	"""bad CRC"""		8525467	0					
ANR	8525568	ElseStatement	else		8525467	0					
ANR	8525569	IfStatement	if ( CRITICAL ( type ) )		8525467	0					
ANR	8525570	Condition	CRITICAL ( type )	2822:15:87451:87464	8525467	0	True				
ANR	8525571	CallExpression	CRITICAL ( type )		8525467	0					
ANR	8525572	Callee	CRITICAL		8525467	0					
ANR	8525573	Identifier	CRITICAL		8525467	0					
ANR	8525574	ArgumentList	type		8525467	1					
ANR	8525575	Argument	type		8525467	0					
ANR	8525576	Identifier	type		8525467	0					
ANR	8525577	ExpressionStatement	"stop ( file , READ_ERROR_CODE , ""bad CRC in critical chunk"" )"	2823:9:87476:87532	8525467	1	True				
ANR	8525578	CallExpression	"stop ( file , READ_ERROR_CODE , ""bad CRC in critical chunk"" )"		8525467	0					
ANR	8525579	Callee	stop		8525467	0					
ANR	8525580	Identifier	stop		8525467	0					
ANR	8525581	ArgumentList	file		8525467	1					
ANR	8525582	Argument	file		8525467	0					
ANR	8525583	Identifier	file		8525467	0					
ANR	8525584	Argument	READ_ERROR_CODE		8525467	1					
ANR	8525585	Identifier	READ_ERROR_CODE		8525467	0					
ANR	8525586	Argument	"""bad CRC in critical chunk"""		8525467	2					
ANR	8525587	PrimaryExpression	"""bad CRC in critical chunk"""		8525467	0					
ANR	8525588	ElseStatement	else		8525467	0					
ANR	8525589	CompoundStatement		34:6:1171:1171	8525467	0					
ANR	8525590	ExpressionStatement	"type_message ( file , type , ""skipped: bad CRC"" )"	2827:9:87563:87607	8525467	0	True				
ANR	8525591	CallExpression	"type_message ( file , type , ""skipped: bad CRC"" )"		8525467	0					
ANR	8525592	Callee	type_message		8525467	0					
ANR	8525593	Identifier	type_message		8525467	0					
ANR	8525594	ArgumentList	file		8525467	1					
ANR	8525595	Argument	file		8525467	0					
ANR	8525596	Identifier	file		8525467	0					
ANR	8525597	Argument	type		8525467	1					
ANR	8525598	Identifier	type		8525467	0					
ANR	8525599	Argument	"""skipped: bad CRC"""		8525467	2					
ANR	8525600	PrimaryExpression	"""skipped: bad CRC"""		8525467	0					
ANR	8525601	GotoStatement	goto skip_chunk ;	2830:9:87696:87711	8525467	1	True				
ANR	8525602	Identifier	skip_chunk		8525467	0					
ANR	8525603	IfStatement	"if ( skip_chunk_type ( file -> global , type ) )"		8525467	3					
ANR	8525604	Condition	"skip_chunk_type ( file -> global , type )"	2838:7:87909:87943	8525467	0	True				
ANR	8525605	CallExpression	"skip_chunk_type ( file -> global , type )"		8525467	0					
ANR	8525606	Callee	skip_chunk_type		8525467	0					
ANR	8525607	Identifier	skip_chunk_type		8525467	0					
ANR	8525608	ArgumentList	file -> global		8525467	1					
ANR	8525609	Argument	file -> global		8525467	0					
ANR	8525610	PtrMemberAccess	file -> global		8525467	0					
ANR	8525611	Identifier	file		8525467	0					
ANR	8525612	Identifier	global		8525467	1					
ANR	8525613	Argument	type		8525467	1					
ANR	8525614	Identifier	type		8525467	0					
ANR	8525615	GotoStatement	goto skip_chunk ;	2839:6:87952:87967	8525467	1	True				
ANR	8525616	Identifier	skip_chunk		8525467	0					
ANR	8525617	IfStatement	if ( type != png_IDAT )		8525467	4					
ANR	8525618	Condition	type != png_IDAT	2846:7:88256:88271	8525467	0	True				
ANR	8525619	EqualityExpression	type != png_IDAT		8525467	0		!=			
ANR	8525620	Identifier	type		8525467	0					
ANR	8525621	Identifier	png_IDAT		8525467	1					
ANR	8525622	ExpressionStatement	"file -> alloc ( file , 0 )"	2847:6:88280:88309	8525467	1	True				
ANR	8525623	CallExpression	"file -> alloc ( file , 0 )"		8525467	0					
ANR	8525624	Callee	file -> alloc		8525467	0					
ANR	8525625	PtrMemberAccess	file -> alloc		8525467	0					
ANR	8525626	Identifier	file		8525467	0					
ANR	8525627	Identifier	alloc		8525467	1					
ANR	8525628	ArgumentList	file		8525467	1					
ANR	8525629	Argument	file		8525467	0					
ANR	8525630	Identifier	file		8525467	0					
ANR	8525631	Argument	0		8525467	1					
ANR	8525632	PrimaryExpression	0		8525467	0					
ANR	8525633	ElseStatement	else		8525467	0					
ANR	8525634	IfStatement	if ( file -> idat == NULL )		8525467	0					
ANR	8525635	Condition	file -> idat == NULL	2849:12:88324:88341	8525467	0	True				
ANR	8525636	EqualityExpression	file -> idat == NULL		8525467	0		==			
ANR	8525637	PtrMemberAccess	file -> idat		8525467	0					
ANR	8525638	Identifier	file		8525467	0					
ANR	8525639	Identifier	idat		8525467	1					
ANR	8525640	Identifier	NULL		8525467	1					
ANR	8525641	ExpressionStatement	"file -> alloc ( file , 1 )"	2850:6:88350:88378	8525467	1	True				
ANR	8525642	CallExpression	"file -> alloc ( file , 1 )"		8525467	0					
ANR	8525643	Callee	file -> alloc		8525467	0					
ANR	8525644	PtrMemberAccess	file -> alloc		8525467	0					
ANR	8525645	Identifier	file		8525467	0					
ANR	8525646	Identifier	alloc		8525467	1					
ANR	8525647	ArgumentList	file		8525467	1					
ANR	8525648	Argument	file		8525467	0					
ANR	8525649	Identifier	file		8525467	0					
ANR	8525650	Argument	1		8525467	1					
ANR	8525651	PrimaryExpression	1		8525467	0					
ANR	8525652	ElseStatement	else		8525467	0					
ANR	8525653	CompoundStatement		61:3:2011:2011	8525467	0					
ANR	8525654	ExpressionStatement	assert ( file -> chunk != NULL )	2855:6:88462:88489	8525467	0	True				
ANR	8525655	CallExpression	assert ( file -> chunk != NULL )		8525467	0					
ANR	8525656	Callee	assert		8525467	0					
ANR	8525657	Identifier	assert		8525467	0					
ANR	8525658	ArgumentList	file -> chunk != NULL		8525467	1					
ANR	8525659	Argument	file -> chunk != NULL		8525467	0					
ANR	8525660	EqualityExpression	file -> chunk != NULL		8525467	0		!=			
ANR	8525661	PtrMemberAccess	file -> chunk		8525467	0					
ANR	8525662	Identifier	file		8525467	0					
ANR	8525663	Identifier	chunk		8525467	1					
ANR	8525664	Identifier	NULL		8525467	1					
ANR	8525665	ExpressionStatement	assert ( file -> chunk -> chunk_type == png_IDAT )	2856:6:88497:88540	8525467	1	True				
ANR	8525666	CallExpression	assert ( file -> chunk -> chunk_type == png_IDAT )		8525467	0					
ANR	8525667	Callee	assert		8525467	0					
ANR	8525668	Identifier	assert		8525467	0					
ANR	8525669	ArgumentList	file -> chunk -> chunk_type == png_IDAT		8525467	1					
ANR	8525670	Argument	file -> chunk -> chunk_type == png_IDAT		8525467	0					
ANR	8525671	EqualityExpression	file -> chunk -> chunk_type == png_IDAT		8525467	0		==			
ANR	8525672	PtrMemberAccess	file -> chunk -> chunk_type		8525467	0					
ANR	8525673	PtrMemberAccess	file -> chunk		8525467	0					
ANR	8525674	Identifier	file		8525467	0					
ANR	8525675	Identifier	chunk		8525467	1					
ANR	8525676	Identifier	chunk_type		8525467	1					
ANR	8525677	Identifier	png_IDAT		8525467	1					
ANR	8525678	ExpressionStatement	file -> chunk -> chunk_length = file -> length	2857:6:88548:88588	8525467	2	True				
ANR	8525679	AssignmentExpression	file -> chunk -> chunk_length = file -> length		8525467	0		=			
ANR	8525680	PtrMemberAccess	file -> chunk -> chunk_length		8525467	0					
ANR	8525681	PtrMemberAccess	file -> chunk		8525467	0					
ANR	8525682	Identifier	file		8525467	0					
ANR	8525683	Identifier	chunk		8525467	1					
ANR	8525684	Identifier	chunk_length		8525467	1					
ANR	8525685	PtrMemberAccess	file -> length		8525467	1					
ANR	8525686	Identifier	file		8525467	0					
ANR	8525687	Identifier	length		8525467	1					
ANR	8525688	ExpressionStatement	file -> length = next_length	2865:3:88879:88905	8525467	5	True				
ANR	8525689	AssignmentExpression	file -> length = next_length		8525467	0		=			
ANR	8525690	PtrMemberAccess	file -> length		8525467	0					
ANR	8525691	Identifier	file		8525467	0					
ANR	8525692	Identifier	length		8525467	1					
ANR	8525693	Identifier	next_length		8525467	1					
ANR	8525694	ExpressionStatement	file -> type = next_type	2866:3:88910:88932	8525467	6	True				
ANR	8525695	AssignmentExpression	file -> type = next_type		8525467	0		=			
ANR	8525696	PtrMemberAccess	file -> type		8525467	0					
ANR	8525697	Identifier	file		8525467	0					
ANR	8525698	Identifier	type		8525467	1					
ANR	8525699	Identifier	next_type		8525467	1					
ANR	8525700	ExpressionStatement	getpos ( file )	2867:3:88937:88949	8525467	7	True				
ANR	8525701	CallExpression	getpos ( file )		8525467	0					
ANR	8525702	Callee	getpos		8525467	0					
ANR	8525703	Identifier	getpos		8525467	0					
ANR	8525704	ArgumentList	file		8525467	1					
ANR	8525705	Argument	file		8525467	0					
ANR	8525706	Identifier	file		8525467	0					
ANR	8525707	ExpressionStatement	file -> chunk -> rewrite_length = 0	2873:3:89170:89201	8525467	8	True				
ANR	8525708	AssignmentExpression	file -> chunk -> rewrite_length = 0		8525467	0		=			
ANR	8525709	PtrMemberAccess	file -> chunk -> rewrite_length		8525467	0					
ANR	8525710	PtrMemberAccess	file -> chunk		8525467	0					
ANR	8525711	Identifier	file		8525467	0					
ANR	8525712	Identifier	chunk		8525467	1					
ANR	8525713	Identifier	rewrite_length		8525467	1					
ANR	8525714	PrimaryExpression	0		8525467	1					
ANR	8525715	ExpressionStatement	file -> chunk -> rewrite_offset = 0	2874:3:89206:89237	8525467	9	True				
ANR	8525716	AssignmentExpression	file -> chunk -> rewrite_offset = 0		8525467	0		=			
ANR	8525717	PtrMemberAccess	file -> chunk -> rewrite_offset		8525467	0					
ANR	8525718	PtrMemberAccess	file -> chunk		8525467	0					
ANR	8525719	Identifier	file		8525467	0					
ANR	8525720	Identifier	chunk		8525467	1					
ANR	8525721	Identifier	rewrite_offset		8525467	1					
ANR	8525722	PrimaryExpression	0		8525467	1					
ANR	8525723	SwitchStatement	switch ( type )		8525467	10					
ANR	8525724	Condition	type	2875:11:89250:89253	8525467	0	True				
ANR	8525725	Identifier	type		8525467	0					
ANR	8525726	CompoundStatement		84:3:2878:2878	8525467	1					
ANR	8525727	Label	default :	2877:6:89267:89274	8525467	0	True				
ANR	8525728	Identifier	default		8525467	0					
ANR	8525729	ReturnStatement	return ;	2878:9:89285:89291	8525467	1	True				
ANR	8525730	Label	case png_IHDR :	2880:6:89300:89313	8525467	2	True				
ANR	8525731	Identifier	png_IHDR		8525467	0					
ANR	8525732	CompoundStatement		94:12:3148:3181	8525467	3					
ANR	8525733	IdentifierDeclStatement	struct chunk * chunk = file -> chunk ;	2886:12:89529:89562	8525467	0	True				
ANR	8525734	IdentifierDecl	* chunk = file -> chunk		8525467	0					
ANR	8525735	IdentifierDeclType	struct chunk *		8525467	0					
ANR	8525736	Identifier	chunk		8525467	1					
ANR	8525737	AssignmentExpression	* chunk = file -> chunk		8525467	2		=			
ANR	8525738	Identifier	chunk		8525467	0					
ANR	8525739	PtrMemberAccess	file -> chunk		8525467	1					
ANR	8525740	Identifier	file		8525467	0					
ANR	8525741	Identifier	chunk		8525467	1					
ANR	8525742	IfStatement	if ( chunk -> chunk_length != 13 )		8525467	1					
ANR	8525743	Condition	chunk -> chunk_length != 13	2888:16:89581:89605	8525467	0	True				
ANR	8525744	EqualityExpression	chunk -> chunk_length != 13		8525467	0		!=			
ANR	8525745	PtrMemberAccess	chunk -> chunk_length		8525467	0					
ANR	8525746	Identifier	chunk		8525467	0					
ANR	8525747	Identifier	chunk_length		8525467	1					
ANR	8525748	PrimaryExpression	13		8525467	1					
ANR	8525749	ExpressionStatement	"stop_invalid ( file , ""IHDR length"" )"	2889:15:89623:89656	8525467	1	True				
ANR	8525750	CallExpression	"stop_invalid ( file , ""IHDR length"" )"		8525467	0					
ANR	8525751	Callee	stop_invalid		8525467	0					
ANR	8525752	Identifier	stop_invalid		8525467	0					
ANR	8525753	ArgumentList	file		8525467	1					
ANR	8525754	Argument	file		8525467	0					
ANR	8525755	Identifier	file		8525467	0					
ANR	8525756	Argument	"""IHDR length"""		8525467	1					
ANR	8525757	PrimaryExpression	"""IHDR length"""		8525467	0					
ANR	8525758	ExpressionStatement	setpos ( chunk )	2892:12:89736:89749	8525467	2	True				
ANR	8525759	CallExpression	setpos ( chunk )		8525467	0					
ANR	8525760	Callee	setpos		8525467	0					
ANR	8525761	Identifier	setpos		8525467	0					
ANR	8525762	ArgumentList	chunk		8525467	1					
ANR	8525763	Argument	chunk		8525467	0					
ANR	8525764	Identifier	chunk		8525467	0					
ANR	8525765	ExpressionStatement	file -> width = reread_4 ( file )	2893:12:89763:89791	8525467	3	True				
ANR	8525766	AssignmentExpression	file -> width = reread_4 ( file )		8525467	0		=			
ANR	8525767	PtrMemberAccess	file -> width		8525467	0					
ANR	8525768	Identifier	file		8525467	0					
ANR	8525769	Identifier	width		8525467	1					
ANR	8525770	CallExpression	reread_4 ( file )		8525467	1					
ANR	8525771	Callee	reread_4		8525467	0					
ANR	8525772	Identifier	reread_4		8525467	0					
ANR	8525773	ArgumentList	file		8525467	1					
ANR	8525774	Argument	file		8525467	0					
ANR	8525775	Identifier	file		8525467	0					
ANR	8525776	ExpressionStatement	file -> height = reread_4 ( file )	2894:12:89805:89834	8525467	4	True				
ANR	8525777	AssignmentExpression	file -> height = reread_4 ( file )		8525467	0		=			
ANR	8525778	PtrMemberAccess	file -> height		8525467	0					
ANR	8525779	Identifier	file		8525467	0					
ANR	8525780	Identifier	height		8525467	1					
ANR	8525781	CallExpression	reread_4 ( file )		8525467	1					
ANR	8525782	Callee	reread_4		8525467	0					
ANR	8525783	Identifier	reread_4		8525467	0					
ANR	8525784	ArgumentList	file		8525467	1					
ANR	8525785	Argument	file		8525467	0					
ANR	8525786	Identifier	file		8525467	0					
ANR	8525787	ExpressionStatement	file -> bit_depth = reread_byte ( file )	2895:12:89848:89883	8525467	5	True				
ANR	8525788	AssignmentExpression	file -> bit_depth = reread_byte ( file )		8525467	0		=			
ANR	8525789	PtrMemberAccess	file -> bit_depth		8525467	0					
ANR	8525790	Identifier	file		8525467	0					
ANR	8525791	Identifier	bit_depth		8525467	1					
ANR	8525792	CallExpression	reread_byte ( file )		8525467	1					
ANR	8525793	Callee	reread_byte		8525467	0					
ANR	8525794	Identifier	reread_byte		8525467	0					
ANR	8525795	ArgumentList	file		8525467	1					
ANR	8525796	Argument	file		8525467	0					
ANR	8525797	Identifier	file		8525467	0					
ANR	8525798	ExpressionStatement	file -> color_type = reread_byte ( file )	2896:12:89897:89933	8525467	6	True				
ANR	8525799	AssignmentExpression	file -> color_type = reread_byte ( file )		8525467	0		=			
ANR	8525800	PtrMemberAccess	file -> color_type		8525467	0					
ANR	8525801	Identifier	file		8525467	0					
ANR	8525802	Identifier	color_type		8525467	1					
ANR	8525803	CallExpression	reread_byte ( file )		8525467	1					
ANR	8525804	Callee	reread_byte		8525467	0					
ANR	8525805	Identifier	reread_byte		8525467	0					
ANR	8525806	ArgumentList	file		8525467	1					
ANR	8525807	Argument	file		8525467	0					
ANR	8525808	Identifier	file		8525467	0					
ANR	8525809	ExpressionStatement	file -> compression_method = reread_byte ( file )	2897:12:89947:89991	8525467	7	True				
ANR	8525810	AssignmentExpression	file -> compression_method = reread_byte ( file )		8525467	0		=			
ANR	8525811	PtrMemberAccess	file -> compression_method		8525467	0					
ANR	8525812	Identifier	file		8525467	0					
ANR	8525813	Identifier	compression_method		8525467	1					
ANR	8525814	CallExpression	reread_byte ( file )		8525467	1					
ANR	8525815	Callee	reread_byte		8525467	0					
ANR	8525816	Identifier	reread_byte		8525467	0					
ANR	8525817	ArgumentList	file		8525467	1					
ANR	8525818	Argument	file		8525467	0					
ANR	8525819	Identifier	file		8525467	0					
ANR	8525820	ExpressionStatement	file -> filter_method = reread_byte ( file )	2898:12:90005:90044	8525467	8	True				
ANR	8525821	AssignmentExpression	file -> filter_method = reread_byte ( file )		8525467	0		=			
ANR	8525822	PtrMemberAccess	file -> filter_method		8525467	0					
ANR	8525823	Identifier	file		8525467	0					
ANR	8525824	Identifier	filter_method		8525467	1					
ANR	8525825	CallExpression	reread_byte ( file )		8525467	1					
ANR	8525826	Callee	reread_byte		8525467	0					
ANR	8525827	Identifier	reread_byte		8525467	0					
ANR	8525828	ArgumentList	file		8525467	1					
ANR	8525829	Argument	file		8525467	0					
ANR	8525830	Identifier	file		8525467	0					
ANR	8525831	ExpressionStatement	file -> interlace_method = reread_byte ( file )	2899:12:90058:90100	8525467	9	True				
ANR	8525832	AssignmentExpression	file -> interlace_method = reread_byte ( file )		8525467	0		=			
ANR	8525833	PtrMemberAccess	file -> interlace_method		8525467	0					
ANR	8525834	Identifier	file		8525467	0					
ANR	8525835	Identifier	interlace_method		8525467	1					
ANR	8525836	CallExpression	reread_byte ( file )		8525467	1					
ANR	8525837	Callee	reread_byte		8525467	0					
ANR	8525838	Identifier	reread_byte		8525467	0					
ANR	8525839	ArgumentList	file		8525467	1					
ANR	8525840	Argument	file		8525467	0					
ANR	8525841	Identifier	file		8525467	0					
ANR	8525842	ExpressionStatement	calc_image_size ( file )	2904:12:90238:90259	8525467	10	True				
ANR	8525843	CallExpression	calc_image_size ( file )		8525467	0					
ANR	8525844	Callee	calc_image_size		8525467	0					
ANR	8525845	Identifier	calc_image_size		8525467	0					
ANR	8525846	ArgumentList	file		8525467	1					
ANR	8525847	Argument	file		8525467	0					
ANR	8525848	Identifier	file		8525467	0					
ANR	8525849	ReturnStatement	return ;	2906:9:90281:90287	8525467	4	True				
ANR	8525850	Label	case png_zTXt :	2909:6:90361:90374	8525467	5	True				
ANR	8525851	Identifier	png_zTXt		8525467	0					
ANR	8525852	Label	case png_iCCP :	2909:21:90376:90389	8525467	6	True				
ANR	8525853	Identifier	png_iCCP		8525467	0					
ANR	8525854	IfStatement	if ( process_zTXt_iCCP ( file ) )		8525467	7					
ANR	8525855	Condition	process_zTXt_iCCP ( file )	2910:13:90404:90426	8525467	0	True				
ANR	8525856	CallExpression	process_zTXt_iCCP ( file )		8525467	0					
ANR	8525857	Callee	process_zTXt_iCCP		8525467	0					
ANR	8525858	Identifier	process_zTXt_iCCP		8525467	0					
ANR	8525859	ArgumentList	file		8525467	1					
ANR	8525860	Argument	file		8525467	0					
ANR	8525861	Identifier	file		8525467	0					
ANR	8525862	ReturnStatement	return ;	2911:12:90441:90447	8525467	1	True				
ANR	8525863	ExpressionStatement	chunk_end ( & file -> chunk )	2912:9:90458:90481	8525467	8	True				
ANR	8525864	CallExpression	chunk_end ( & file -> chunk )		8525467	0					
ANR	8525865	Callee	chunk_end		8525467	0					
ANR	8525866	Identifier	chunk_end		8525467	0					
ANR	8525867	ArgumentList	& file -> chunk		8525467	1					
ANR	8525868	Argument	& file -> chunk		8525467	0					
ANR	8525869	UnaryOperationExpression	& file -> chunk		8525467	0					
ANR	8525870	UnaryOperator	&		8525467	0					
ANR	8525871	PtrMemberAccess	file -> chunk		8525467	1					
ANR	8525872	Identifier	file		8525467	0					
ANR	8525873	Identifier	chunk		8525467	1					
ANR	8525874	ExpressionStatement	"file_setpos ( file , & file -> data_pos )"	2913:9:90492:90526	8525467	9	True				
ANR	8525875	CallExpression	"file_setpos ( file , & file -> data_pos )"		8525467	0					
ANR	8525876	Callee	file_setpos		8525467	0					
ANR	8525877	Identifier	file_setpos		8525467	0					
ANR	8525878	ArgumentList	file		8525467	1					
ANR	8525879	Argument	file		8525467	0					
ANR	8525880	Identifier	file		8525467	0					
ANR	8525881	Argument	& file -> data_pos		8525467	1					
ANR	8525882	UnaryOperationExpression	& file -> data_pos		8525467	0					
ANR	8525883	UnaryOperator	&		8525467	0					
ANR	8525884	PtrMemberAccess	file -> data_pos		8525467	1					
ANR	8525885	Identifier	file		8525467	0					
ANR	8525886	Identifier	data_pos		8525467	1					
ANR	8525887	BreakStatement	break ;	2914:9:90537:90542	8525467	10	True				
ANR	8525888	Label	case png_iTXt :	2916:6:90551:90564	8525467	11	True				
ANR	8525889	Identifier	png_iTXt		8525467	0					
ANR	8525890	IfStatement	if ( process_iTXt ( file ) )		8525467	12					
ANR	8525891	Condition	process_iTXt ( file )	2917:13:90579:90596	8525467	0	True				
ANR	8525892	CallExpression	process_iTXt ( file )		8525467	0					
ANR	8525893	Callee	process_iTXt		8525467	0					
ANR	8525894	Identifier	process_iTXt		8525467	0					
ANR	8525895	ArgumentList	file		8525467	1					
ANR	8525896	Argument	file		8525467	0					
ANR	8525897	Identifier	file		8525467	0					
ANR	8525898	ReturnStatement	return ;	2918:12:90611:90617	8525467	1	True				
ANR	8525899	ExpressionStatement	chunk_end ( & file -> chunk )	2919:9:90628:90651	8525467	13	True				
ANR	8525900	CallExpression	chunk_end ( & file -> chunk )		8525467	0					
ANR	8525901	Callee	chunk_end		8525467	0					
ANR	8525902	Identifier	chunk_end		8525467	0					
ANR	8525903	ArgumentList	& file -> chunk		8525467	1					
ANR	8525904	Argument	& file -> chunk		8525467	0					
ANR	8525905	UnaryOperationExpression	& file -> chunk		8525467	0					
ANR	8525906	UnaryOperator	&		8525467	0					
ANR	8525907	PtrMemberAccess	file -> chunk		8525467	1					
ANR	8525908	Identifier	file		8525467	0					
ANR	8525909	Identifier	chunk		8525467	1					
ANR	8525910	ExpressionStatement	"file_setpos ( file , & file -> data_pos )"	2920:9:90662:90696	8525467	14	True				
ANR	8525911	CallExpression	"file_setpos ( file , & file -> data_pos )"		8525467	0					
ANR	8525912	Callee	file_setpos		8525467	0					
ANR	8525913	Identifier	file_setpos		8525467	0					
ANR	8525914	ArgumentList	file		8525467	1					
ANR	8525915	Argument	file		8525467	0					
ANR	8525916	Identifier	file		8525467	0					
ANR	8525917	Argument	& file -> data_pos		8525467	1					
ANR	8525918	UnaryOperationExpression	& file -> data_pos		8525467	0					
ANR	8525919	UnaryOperator	&		8525467	0					
ANR	8525920	PtrMemberAccess	file -> data_pos		8525467	1					
ANR	8525921	Identifier	file		8525467	0					
ANR	8525922	Identifier	data_pos		8525467	1					
ANR	8525923	BreakStatement	break ;	2921:9:90707:90712	8525467	15	True				
ANR	8525924	Label	case png_IDAT :	2923:6:90721:90734	8525467	16	True				
ANR	8525925	Identifier	png_IDAT		8525467	0					
ANR	8525926	IfStatement	if ( process_IDAT ( file ) )		8525467	17					
ANR	8525927	Condition	process_IDAT ( file )	2924:13:90749:90766	8525467	0	True				
ANR	8525928	CallExpression	process_IDAT ( file )		8525467	0					
ANR	8525929	Callee	process_IDAT		8525467	0					
ANR	8525930	Identifier	process_IDAT		8525467	0					
ANR	8525931	ArgumentList	file		8525467	1					
ANR	8525932	Argument	file		8525467	0					
ANR	8525933	Identifier	file		8525467	0					
ANR	8525934	ReturnStatement	return ;	2925:12:90781:90787	8525467	1	True				
ANR	8525935	ExpressionStatement	assert ( next_type == png_IDAT )	2927:9:90825:90854	8525467	18	True				
ANR	8525936	CallExpression	assert ( next_type == png_IDAT )		8525467	0					
ANR	8525937	Callee	assert		8525467	0					
ANR	8525938	Identifier	assert		8525467	0					
ANR	8525939	ArgumentList	next_type == png_IDAT		8525467	1					
ANR	8525940	Argument	next_type == png_IDAT		8525467	0					
ANR	8525941	EqualityExpression	next_type == png_IDAT		8525467	0		==			
ANR	8525942	Identifier	next_type		8525467	0					
ANR	8525943	Identifier	png_IDAT		8525467	1					
ANR	8525944	BreakStatement	break ;	2928:9:90865:90870	8525467	19	True				
ANR	8525945	ExpressionStatement	read_chunk ( file )	2938:3:91329:91345	8525467	11	True				
ANR	8525946	CallExpression	read_chunk ( file )		8525467	0					
ANR	8525947	Callee	read_chunk		8525467	0					
ANR	8525948	Identifier	read_chunk		8525467	0					
ANR	8525949	ArgumentList	file		8525467	1					
ANR	8525950	Argument	file		8525467	0					
ANR	8525951	Identifier	file		8525467	0					
ANR	8525952	ReturnStatement	return ;	2939:3:91350:91356	8525467	12	True				
ANR	8525953	Label	skip_chunk :	2944:0:91459:91469	8525467	13	True				
ANR	8525954	Identifier	skip_chunk		8525467	0					
ANR	8525955	ExpressionStatement	file -> length = next_length	2945:3:91474:91500	8525467	14	True				
ANR	8525956	AssignmentExpression	file -> length = next_length		8525467	0		=			
ANR	8525957	PtrMemberAccess	file -> length		8525467	0					
ANR	8525958	Identifier	file		8525467	0					
ANR	8525959	Identifier	length		8525467	1					
ANR	8525960	Identifier	next_length		8525467	1					
ANR	8525961	ExpressionStatement	file -> type = next_type	2946:3:91505:91527	8525467	15	True				
ANR	8525962	AssignmentExpression	file -> type = next_type		8525467	0		=			
ANR	8525963	PtrMemberAccess	file -> type		8525467	0					
ANR	8525964	Identifier	file		8525467	0					
ANR	8525965	Identifier	type		8525467	1					
ANR	8525966	Identifier	next_type		8525467	1					
ANR	8525967	ExpressionStatement	getpos ( file )	2947:3:91532:91544	8525467	16	True				
ANR	8525968	CallExpression	getpos ( file )		8525467	0					
ANR	8525969	Callee	getpos		8525467	0					
ANR	8525970	Identifier	getpos		8525467	0					
ANR	8525971	ArgumentList	file		8525467	1					
ANR	8525972	Argument	file		8525467	0					
ANR	8525973	Identifier	file		8525467	0					
ANR	8525974	ExpressionStatement	read_chunk ( file )	2948:3:91549:91565	8525467	17	True				
ANR	8525975	CallExpression	read_chunk ( file )		8525467	0					
ANR	8525976	Callee	read_chunk		8525467	0					
ANR	8525977	Identifier	read_chunk		8525467	0					
ANR	8525978	ArgumentList	file		8525467	1					
ANR	8525979	Argument	file		8525467	0					
ANR	8525980	Identifier	file		8525467	0					
ANR	8525981	ReturnType	static void		8525467	1					
ANR	8525982	Identifier	process_chunk		8525467	2					
ANR	8525983	ParameterList	"struct file * file , png_uint_32 file_crc , png_uint_32 next_length , png_uint_32 next_type"		8525467	3					
ANR	8525984	Parameter	struct file * file	2784:14:85959:85975	8525467	0	True				
ANR	8525985	ParameterType	struct file *		8525467	0					
ANR	8525986	Identifier	file		8525467	1					
ANR	8525987	Parameter	png_uint_32 file_crc	2784:33:85978:85997	8525467	1	True				
ANR	8525988	ParameterType	png_uint_32		8525467	0					
ANR	8525989	Identifier	file_crc		8525467	1					
ANR	8525990	Parameter	png_uint_32 next_length	2784:55:86000:86022	8525467	2	True				
ANR	8525991	ParameterType	png_uint_32		8525467	0					
ANR	8525992	Identifier	next_length		8525467	1					
ANR	8525993	Parameter	png_uint_32 next_type	2785:3:86028:86048	8525467	3	True				
ANR	8525994	ParameterType	png_uint_32		8525467	0					
ANR	8525995	Identifier	next_type		8525467	1					
ANR	8525996	CFGEntryNode	ENTRY		8525467		True				
ANR	8525997	CFGExitNode	EXIT		8525467		True				
ANR	8525998	Symbol	CRC_ERROR		8525467						
ANR	8525999	Symbol	file -> chunk		8525467						
ANR	8526000	Symbol	chunk		8525467						
ANR	8526001	Symbol	file -> chunk -> rewrite_offset		8525467						
ANR	8526002	Symbol	next_type		8525467						
ANR	8526003	Symbol	type		8525467						
ANR	8526004	Symbol	file -> length		8525467						
ANR	8526005	Symbol	& file -> data_pos		8525467						
ANR	8526006	Symbol	* file -> chunk		8525467						
ANR	8526007	Symbol	file -> type		8525467						
ANR	8526008	Symbol	file		8525467						
ANR	8526009	Symbol	file -> height		8525467						
ANR	8526010	Symbol	reread_byte		8525467						
ANR	8526011	Symbol	* file -> global		8525467						
ANR	8526012	Symbol	file -> idat		8525467						
ANR	8526013	Symbol	file -> chunk -> chunk_type		8525467						
ANR	8526014	Symbol	chunk -> chunk_length		8525467						
ANR	8526015	Symbol	file -> chunk -> chunk_length		8525467						
ANR	8526016	Symbol	& file -> chunk		8525467						
ANR	8526017	Symbol	CRITICAL		8525467						
ANR	8526018	Symbol	file -> chunk -> rewrite_length		8525467						
ANR	8526019	Symbol	reread_4		8525467						
ANR	8526020	Symbol	READ_ERROR_CODE		8525467						
ANR	8526021	Symbol	file -> color_type		8525467						
ANR	8526022	Symbol	process_IDAT		8525467						
ANR	8526023	Symbol	NULL		8525467						
ANR	8526024	Symbol	file -> compression_method		8525467						
ANR	8526025	Symbol	skip_chunk_type		8525467						
ANR	8526026	Symbol	file -> bit_depth		8525467						
ANR	8526027	Symbol	next_length		8525467						
ANR	8526028	Symbol	file -> interlace_method		8525467						
ANR	8526029	Symbol	process_zTXt_iCCP		8525467						
ANR	8526030	Symbol	* file		8525467						
ANR	8526031	Symbol	stderr		8525467						
ANR	8526032	Symbol	file -> status_code		8525467						
ANR	8526033	Symbol	file -> global -> verbose		8525467						
ANR	8526034	Symbol	* chunk		8525467						
ANR	8526035	Symbol	file -> filter_method		8525467						
ANR	8526036	Symbol	file -> global -> skip		8525467						
ANR	8526037	Symbol	png_IDAT		8525467						
ANR	8526038	Symbol	file -> crc		8525467						
ANR	8526039	Symbol	SKIP_BAD_CRC		8525467						
ANR	8526040	Symbol	file -> global		8525467						
ANR	8526041	Symbol	file_crc		8525467						
ANR	8526042	Symbol	process_iTXt		8525467						
ANR	8526043	Symbol	* * file		8525467						
ANR	8526044	Symbol	file -> width		8525467						
ANR	8526045	Function	get32	2951:0:91570:91875							
ANR	8526046	FunctionDef	"get32 (png_bytep buffer , int offset)"		8526045	0					
ANR	8526047	CompoundStatement		2955:0:91708:91875	8526045	0					
ANR	8526048	ReturnStatement	return ( buffer [ offset & 7 ] << 24 ) + ( buffer [ ( offset + 1 ) & 7 ] << 16 ) + ( buffer [ ( offset + 2 ) & 7 ] << 8 ) + ( buffer [ ( offset + 3 ) & 7 ] ) ;	2956:3:91713:91873	8526045	0	True				
ANR	8526049	AdditiveExpression	( buffer [ offset & 7 ] << 24 ) + ( buffer [ ( offset + 1 ) & 7 ] << 16 ) + ( buffer [ ( offset + 2 ) & 7 ] << 8 ) + ( buffer [ ( offset + 3 ) & 7 ] )		8526045	0		+			
ANR	8526050	ShiftExpression	buffer [ offset & 7 ] << 24		8526045	0		<<			
ANR	8526051	ArrayIndexing	buffer [ offset & 7 ]		8526045	0					
ANR	8526052	Identifier	buffer		8526045	0					
ANR	8526053	BitAndExpression	offset & 7		8526045	1		&			
ANR	8526054	Identifier	offset		8526045	0					
ANR	8526055	PrimaryExpression	7		8526045	1					
ANR	8526056	PrimaryExpression	24		8526045	1					
ANR	8526057	AdditiveExpression	( buffer [ ( offset + 1 ) & 7 ] << 16 ) + ( buffer [ ( offset + 2 ) & 7 ] << 8 ) + ( buffer [ ( offset + 3 ) & 7 ] )		8526045	1		+			
ANR	8526058	ShiftExpression	buffer [ ( offset + 1 ) & 7 ] << 16		8526045	0		<<			
ANR	8526059	ArrayIndexing	buffer [ ( offset + 1 ) & 7 ]		8526045	0					
ANR	8526060	Identifier	buffer		8526045	0					
ANR	8526061	BitAndExpression	( offset + 1 ) & 7		8526045	1		&			
ANR	8526062	AdditiveExpression	offset + 1		8526045	0		+			
ANR	8526063	Identifier	offset		8526045	0					
ANR	8526064	PrimaryExpression	1		8526045	1					
ANR	8526065	PrimaryExpression	7		8526045	1					
ANR	8526066	PrimaryExpression	16		8526045	1					
ANR	8526067	AdditiveExpression	( buffer [ ( offset + 2 ) & 7 ] << 8 ) + ( buffer [ ( offset + 3 ) & 7 ] )		8526045	1		+			
ANR	8526068	ShiftExpression	buffer [ ( offset + 2 ) & 7 ] << 8		8526045	0		<<			
ANR	8526069	ArrayIndexing	buffer [ ( offset + 2 ) & 7 ]		8526045	0					
ANR	8526070	Identifier	buffer		8526045	0					
ANR	8526071	BitAndExpression	( offset + 2 ) & 7		8526045	1		&			
ANR	8526072	AdditiveExpression	offset + 2		8526045	0		+			
ANR	8526073	Identifier	offset		8526045	0					
ANR	8526074	PrimaryExpression	2		8526045	1					
ANR	8526075	PrimaryExpression	7		8526045	1					
ANR	8526076	PrimaryExpression	8		8526045	1					
ANR	8526077	ArrayIndexing	buffer [ ( offset + 3 ) & 7 ]		8526045	1					
ANR	8526078	Identifier	buffer		8526045	0					
ANR	8526079	BitAndExpression	( offset + 3 ) & 7		8526045	1		&			
ANR	8526080	AdditiveExpression	offset + 3		8526045	0		+			
ANR	8526081	Identifier	offset		8526045	0					
ANR	8526082	PrimaryExpression	3		8526045	1					
ANR	8526083	PrimaryExpression	7		8526045	1					
ANR	8526084	ReturnType	static png_uint_32		8526045	1					
ANR	8526085	Identifier	get32		8526045	2					
ANR	8526086	ParameterList	"png_bytep buffer , int offset"		8526045	3					
ANR	8526087	Parameter	png_bytep buffer	2952:6:91595:91610	8526045	0	True				
ANR	8526088	ParameterType	png_bytep		8526045	0					
ANR	8526089	Identifier	buffer		8526045	1					
ANR	8526090	Parameter	int offset	2952:24:91613:91622	8526045	1	True				
ANR	8526091	ParameterType	int		8526045	0					
ANR	8526092	Identifier	offset		8526045	1					
ANR	8526093	CFGEntryNode	ENTRY		8526045		True				
ANR	8526094	CFGExitNode	EXIT		8526045		True				
ANR	8526095	Symbol	* buffer		8526045						
ANR	8526096	Symbol	offset		8526045						
ANR	8526097	Symbol	* offset		8526045						
ANR	8526098	Symbol	buffer		8526045						
ANR	8526099	Function	sync_stream	2963:0:91878:95520							
ANR	8526100	FunctionDef	sync_stream (struct file * file)		8526099	0					
ANR	8526101	CompoundStatement		2968:0:92087:95520	8526099	0					
ANR	8526102	IdentifierDeclStatement	png_uint_32 file_crc ;	2969:3:92092:92112	8526099	0	True				
ANR	8526103	IdentifierDecl	file_crc		8526099	0					
ANR	8526104	IdentifierDeclType	png_uint_32		8526099	0					
ANR	8526105	Identifier	file_crc		8526099	1					
ANR	8526106	ExpressionStatement	file -> status_code |= STREAM_ERROR	2971:3:92118:92151	8526099	1	True				
ANR	8526107	AssignmentExpression	file -> status_code |= STREAM_ERROR		8526099	0		|=			
ANR	8526108	PtrMemberAccess	file -> status_code		8526099	0					
ANR	8526109	Identifier	file		8526099	0					
ANR	8526110	Identifier	status_code		8526099	1					
ANR	8526111	Identifier	STREAM_ERROR		8526099	1					
ANR	8526112	IfStatement	if ( file -> global -> verbose )		8526099	2					
ANR	8526113	Condition	file -> global -> verbose	2973:7:92161:92181	8526099	0	True				
ANR	8526114	PtrMemberAccess	file -> global -> verbose		8526099	0					
ANR	8526115	PtrMemberAccess	file -> global		8526099	0					
ANR	8526116	Identifier	file		8526099	0					
ANR	8526117	Identifier	global		8526099	1					
ANR	8526118	Identifier	verbose		8526099	1					
ANR	8526119	CompoundStatement		7:3:99:99	8526099	1					
ANR	8526120	ExpressionStatement	"fputs ( "" SYNC "" , stderr )"	2975:6:92195:92218	8526099	0	True				
ANR	8526121	CallExpression	"fputs ( "" SYNC "" , stderr )"		8526099	0					
ANR	8526122	Callee	fputs		8526099	0					
ANR	8526123	Identifier	fputs		8526099	0					
ANR	8526124	ArgumentList	""" SYNC """		8526099	1					
ANR	8526125	Argument	""" SYNC """		8526099	0					
ANR	8526126	PrimaryExpression	""" SYNC """		8526099	0					
ANR	8526127	Argument	stderr		8526099	1					
ANR	8526128	Identifier	stderr		8526099	0					
ANR	8526129	ExpressionStatement	"type_name ( file -> type , stderr )"	2976:6:92226:92255	8526099	1	True				
ANR	8526130	CallExpression	"type_name ( file -> type , stderr )"		8526099	0					
ANR	8526131	Callee	type_name		8526099	0					
ANR	8526132	Identifier	type_name		8526099	0					
ANR	8526133	ArgumentList	file -> type		8526099	1					
ANR	8526134	Argument	file -> type		8526099	0					
ANR	8526135	PtrMemberAccess	file -> type		8526099	0					
ANR	8526136	Identifier	file		8526099	0					
ANR	8526137	Identifier	type		8526099	1					
ANR	8526138	Argument	stderr		8526099	1					
ANR	8526139	Identifier	stderr		8526099	0					
ANR	8526140	ExpressionStatement	"putc ( '\\n' , stderr )"	2977:6:92263:92281	8526099	2	True				
ANR	8526141	CallExpression	"putc ( '\\n' , stderr )"		8526099	0					
ANR	8526142	Callee	putc		8526099	0					
ANR	8526143	Identifier	putc		8526099	0					
ANR	8526144	ArgumentList	'\\n'		8526099	1					
ANR	8526145	Argument	'\\n'		8526099	0					
ANR	8526146	PrimaryExpression	'\\n'		8526099	0					
ANR	8526147	Argument	stderr		8526099	1					
ANR	8526148	Identifier	stderr		8526099	0					
ANR	8526149	ExpressionStatement	"file_setpos ( file , & file -> data_pos )"	2981:3:92339:92373	8526099	3	True				
ANR	8526150	CallExpression	"file_setpos ( file , & file -> data_pos )"		8526099	0					
ANR	8526151	Callee	file_setpos		8526099	0					
ANR	8526152	Identifier	file_setpos		8526099	0					
ANR	8526153	ArgumentList	file		8526099	1					
ANR	8526154	Argument	file		8526099	0					
ANR	8526155	Identifier	file		8526099	0					
ANR	8526156	Argument	& file -> data_pos		8526099	1					
ANR	8526157	UnaryOperationExpression	& file -> data_pos		8526099	0					
ANR	8526158	UnaryOperator	&		8526099	0					
ANR	8526159	PtrMemberAccess	file -> data_pos		8526099	1					
ANR	8526160	Identifier	file		8526099	0					
ANR	8526161	Identifier	data_pos		8526099	1					
ANR	8526162	ExpressionStatement	file -> read_count = 8	2982:3:92378:92398	8526099	4	True				
ANR	8526163	AssignmentExpression	file -> read_count = 8		8526099	0		=			
ANR	8526164	PtrMemberAccess	file -> read_count		8526099	0					
ANR	8526165	Identifier	file		8526099	0					
ANR	8526166	Identifier	read_count		8526099	1					
ANR	8526167	PrimaryExpression	8		8526099	1					
ANR	8526168	IfStatement	"if ( read_4 ( file , & file_crc ) == 4 )"		8526099	5					
ANR	8526169	Condition	"read_4 ( file , & file_crc ) == 4"	2984:7:92408:92435	8526099	0	True				
ANR	8526170	EqualityExpression	"read_4 ( file , & file_crc ) == 4"		8526099	0		==			
ANR	8526171	CallExpression	"read_4 ( file , & file_crc )"		8526099	0					
ANR	8526172	Callee	read_4		8526099	0					
ANR	8526173	Identifier	read_4		8526099	0					
ANR	8526174	ArgumentList	file		8526099	1					
ANR	8526175	Argument	file		8526099	0					
ANR	8526176	Identifier	file		8526099	0					
ANR	8526177	Argument	& file_crc		8526099	1					
ANR	8526178	UnaryOperationExpression	& file_crc		8526099	0					
ANR	8526179	UnaryOperator	&		8526099	0					
ANR	8526180	Identifier	file_crc		8526099	1					
ANR	8526181	PrimaryExpression	4		8526099	1					
ANR	8526182	CompoundStatement		28:6:805:838	8526099	1					
ANR	8526183	IdentifierDeclStatement	png_uint_32 length ;	2991:6:92762:92780	8526099	0	True				
ANR	8526184	IdentifierDecl	length		8526099	0					
ANR	8526185	IdentifierDeclType	png_uint_32		8526099	0					
ANR	8526186	Identifier	length		8526099	1					
ANR	8526187	IdentifierDeclStatement	png_uint_32 type = file -> type ;	2992:6:92788:92817	8526099	1	True				
ANR	8526188	IdentifierDecl	type = file -> type		8526099	0					
ANR	8526189	IdentifierDeclType	png_uint_32		8526099	0					
ANR	8526190	Identifier	type		8526099	1					
ANR	8526191	AssignmentExpression	type = file -> type		8526099	2		=			
ANR	8526192	Identifier	type		8526099	0					
ANR	8526193	PtrMemberAccess	file -> type		8526099	1					
ANR	8526194	Identifier	file		8526099	0					
ANR	8526195	Identifier	type		8526099	1					
ANR	8526196	IdentifierDeclStatement	png_uint_32 crc = crc_init_4 ( type ) ;	2993:6:92825:92859	8526099	2	True				
ANR	8526197	IdentifierDecl	crc = crc_init_4 ( type )		8526099	0					
ANR	8526198	IdentifierDeclType	png_uint_32		8526099	0					
ANR	8526199	Identifier	crc		8526099	1					
ANR	8526200	AssignmentExpression	crc = crc_init_4 ( type )		8526099	2		=			
ANR	8526201	Identifier	crc		8526099	0					
ANR	8526202	CallExpression	crc_init_4 ( type )		8526099	1					
ANR	8526203	Callee	crc_init_4		8526099	0					
ANR	8526204	Identifier	crc_init_4		8526099	0					
ANR	8526205	ArgumentList	type		8526099	1					
ANR	8526206	Argument	type		8526099	0					
ANR	8526207	Identifier	type		8526099	0					
ANR	8526208	IdentifierDeclStatement	png_byte buffer [ 8 ] ;	2994:6:92867:92885	8526099	3	True				
ANR	8526209	IdentifierDecl	buffer [ 8 ]		8526099	0					
ANR	8526210	IdentifierDeclType	png_byte [ 8 ]		8526099	0					
ANR	8526211	Identifier	buffer		8526099	1					
ANR	8526212	PrimaryExpression	8		8526099	2					
ANR	8526213	IdentifierDeclStatement	"unsigned int nread = 0 , nused = 0 ;"	2995:6:92893:92926	8526099	4	True				
ANR	8526214	IdentifierDecl	nread = 0		8526099	0					
ANR	8526215	IdentifierDeclType	unsigned int		8526099	0					
ANR	8526216	Identifier	nread		8526099	1					
ANR	8526217	AssignmentExpression	nread = 0		8526099	2		=			
ANR	8526218	Identifier	nread		8526099	0					
ANR	8526219	PrimaryExpression	0		8526099	1					
ANR	8526220	IdentifierDecl	nused = 0		8526099	1					
ANR	8526221	IdentifierDeclType	unsigned int		8526099	0					
ANR	8526222	Identifier	nused		8526099	1					
ANR	8526223	AssignmentExpression	nused = 0		8526099	2		=			
ANR	8526224	Identifier	nused		8526099	0					
ANR	8526225	PrimaryExpression	0		8526099	1					
ANR	8526226	ForStatement	for ( length = 0 ; length <= 0x7fffffff ; ++ length )		8526099	5					
ANR	8526227	ForInit	length = 0 ;	2997:11:92940:92948	8526099	0	True				
ANR	8526228	AssignmentExpression	length = 0		8526099	0		=			
ANR	8526229	Identifier	length		8526099	0					
ANR	8526230	PrimaryExpression	0		8526099	1					
ANR	8526231	Condition	length <= 0x7fffffff	2997:21:92950:92969	8526099	1	True				
ANR	8526232	RelationalExpression	length <= 0x7fffffff		8526099	0		<=			
ANR	8526233	Identifier	length		8526099	0					
ANR	8526234	PrimaryExpression	0x7fffffff		8526099	1					
ANR	8526235	UnaryExpression	++ length	2997:43:92972:92979	8526099	2	True				
ANR	8526236	IncDec	++		8526099	0					
ANR	8526237	Identifier	length		8526099	1					
ANR	8526238	CompoundStatement		32:9:911:917	8526099	3					
ANR	8526239	IdentifierDeclStatement	int ch ;	2999:9:92999:93005	8526099	0	True				
ANR	8526240	IdentifierDecl	ch		8526099	0					
ANR	8526241	IdentifierDeclType	int		8526099	0					
ANR	8526242	Identifier	ch		8526099	1					
ANR	8526243	IfStatement	if ( ( crc ^ 0xffffffff ) == file_crc )		8526099	1					
ANR	8526244	Condition	( crc ^ 0xffffffff ) == file_crc	3001:13:93021:93050	8526099	0	True				
ANR	8526245	EqualityExpression	( crc ^ 0xffffffff ) == file_crc		8526099	0		==			
ANR	8526246	ExclusiveOrExpression	crc ^ 0xffffffff		8526099	0		^			
ANR	8526247	Identifier	crc		8526099	0					
ANR	8526248	PrimaryExpression	0xffffffff		8526099	1					
ANR	8526249	Identifier	file_crc		8526099	1					
ANR	8526250	CompoundStatement		35:9:974:974	8526099	1					
ANR	8526251	IfStatement	if ( type == png_IEND )		8526099	0					
ANR	8526252	Condition	type == png_IEND	3006:16:93230:93245	8526099	0	True				
ANR	8526253	EqualityExpression	type == png_IEND		8526099	0		==			
ANR	8526254	Identifier	type		8526099	0					
ANR	8526255	Identifier	png_IEND		8526099	1					
ANR	8526256	CompoundStatement		40:12:1172:1172	8526099	1					
ANR	8526257	ExpressionStatement	file -> length = length	3008:15:93277:93298	8526099	0	True				
ANR	8526258	AssignmentExpression	file -> length = length		8526099	0		=			
ANR	8526259	PtrMemberAccess	file -> length		8526099	0					
ANR	8526260	Identifier	file		8526099	0					
ANR	8526261	Identifier	length		8526099	1					
ANR	8526262	Identifier	length		8526099	1					
ANR	8526263	ExpressionStatement	"process_chunk ( file , file_crc , 0 , 0 )"	3009:15:93315:93350	8526099	1	True				
ANR	8526264	CallExpression	"process_chunk ( file , file_crc , 0 , 0 )"		8526099	0					
ANR	8526265	Callee	process_chunk		8526099	0					
ANR	8526266	Identifier	process_chunk		8526099	0					
ANR	8526267	ArgumentList	file		8526099	1					
ANR	8526268	Argument	file		8526099	0					
ANR	8526269	Identifier	file		8526099	0					
ANR	8526270	Argument	file_crc		8526099	1					
ANR	8526271	Identifier	file_crc		8526099	0					
ANR	8526272	Argument	0		8526099	2					
ANR	8526273	PrimaryExpression	0		8526099	0					
ANR	8526274	Argument	0		8526099	3					
ANR	8526275	PrimaryExpression	0		8526099	0					
ANR	8526276	ReturnStatement	return ;	3010:15:93367:93373	8526099	2	True				
ANR	8526277	ElseStatement	else		8526099	0					
ANR	8526278	CompoundStatement		47:12:1331:1331	8526099	0					
ANR	8526279	WhileStatement	while ( nread < 8 + nused )		8526099	0					
ANR	8526280	Condition	nread < 8 + nused	3016:22:93477:93491	8526099	0	True				
ANR	8526281	RelationalExpression	nread < 8 + nused		8526099	0		<			
ANR	8526282	Identifier	nread		8526099	0					
ANR	8526283	AdditiveExpression	8 + nused		8526099	1		+			
ANR	8526284	PrimaryExpression	8		8526099	0					
ANR	8526285	Identifier	nused		8526099	1					
ANR	8526286	CompoundStatement		50:15:1421:1421	8526099	1					
ANR	8526287	ExpressionStatement	ch = read_byte ( file )	3018:18:93529:93549	8526099	0	True				
ANR	8526288	AssignmentExpression	ch = read_byte ( file )		8526099	0		=			
ANR	8526289	Identifier	ch		8526099	0					
ANR	8526290	CallExpression	read_byte ( file )		8526099	1					
ANR	8526291	Callee	read_byte		8526099	0					
ANR	8526292	Identifier	read_byte		8526099	0					
ANR	8526293	ArgumentList	file		8526099	1					
ANR	8526294	Argument	file		8526099	0					
ANR	8526295	Identifier	file		8526099	0					
ANR	8526296	IfStatement	if ( ch == EOF )		8526099	1					
ANR	8526297	Condition	ch == EOF	3019:22:93573:93581	8526099	0	True				
ANR	8526298	EqualityExpression	ch == EOF		8526099	0		==			
ANR	8526299	Identifier	ch		8526099	0					
ANR	8526300	Identifier	EOF		8526099	1					
ANR	8526301	GotoStatement	goto truncated ;	3020:21:93605:93619	8526099	1	True				
ANR	8526302	Identifier	truncated		8526099	0					
ANR	8526303	ExpressionStatement	buffer [ ( nread ++ ) & 7 ] = ( png_byte ) ch	3021:18:93639:93675	8526099	2	True				
ANR	8526304	AssignmentExpression	buffer [ ( nread ++ ) & 7 ] = ( png_byte ) ch		8526099	0		=			
ANR	8526305	ArrayIndexing	buffer [ ( nread ++ ) & 7 ]		8526099	0					
ANR	8526306	Identifier	buffer		8526099	0					
ANR	8526307	BitAndExpression	( nread ++ ) & 7		8526099	1		&			
ANR	8526308	PostIncDecOperationExpression	nread ++		8526099	0					
ANR	8526309	Identifier	nread		8526099	0					
ANR	8526310	IncDec	++		8526099	1					
ANR	8526311	PrimaryExpression	7		8526099	1					
ANR	8526312	CastExpression	( png_byte ) ch		8526099	1					
ANR	8526313	CastTarget	png_byte		8526099	0					
ANR	8526314	Identifier	ch		8526099	1					
ANR	8526315	ExpressionStatement	nread -= nused & ~7	3025:15:93748:93767	8526099	1	True				
ANR	8526316	AssignmentExpression	nread -= nused & ~7		8526099	0		-=			
ANR	8526317	Identifier	nread		8526099	0					
ANR	8526318	BitAndExpression	nused & ~7		8526099	1		&			
ANR	8526319	Identifier	nused		8526099	0					
ANR	8526320	Identifier	~7		8526099	1					
ANR	8526321	ExpressionStatement	nused -= nused & ~7	3026:15:93784:93803	8526099	2	True				
ANR	8526322	AssignmentExpression	nused -= nused & ~7		8526099	0		-=			
ANR	8526323	Identifier	nused		8526099	0					
ANR	8526324	BitAndExpression	nused & ~7		8526099	1		&			
ANR	8526325	Identifier	nused		8526099	0					
ANR	8526326	Identifier	~7		8526099	1					
ANR	8526327	CompoundStatement		63:18:1845:1891	8526099	3					
ANR	8526328	IdentifierDeclStatement	"png_uint_32 next_length = get32 ( buffer , nused ) ;"	3030:18:93933:93979	8526099	0	True				
ANR	8526329	IdentifierDecl	"next_length = get32 ( buffer , nused )"		8526099	0					
ANR	8526330	IdentifierDeclType	png_uint_32		8526099	0					
ANR	8526331	Identifier	next_length		8526099	1					
ANR	8526332	AssignmentExpression	"next_length = get32 ( buffer , nused )"		8526099	2		=			
ANR	8526333	Identifier	next_length		8526099	0					
ANR	8526334	CallExpression	"get32 ( buffer , nused )"		8526099	1					
ANR	8526335	Callee	get32		8526099	0					
ANR	8526336	Identifier	get32		8526099	0					
ANR	8526337	ArgumentList	buffer		8526099	1					
ANR	8526338	Argument	buffer		8526099	0					
ANR	8526339	Identifier	buffer		8526099	0					
ANR	8526340	Argument	nused		8526099	1					
ANR	8526341	Identifier	nused		8526099	0					
ANR	8526342	IfStatement	if ( next_length < 0x7fffffff )		8526099	1					
ANR	8526343	Condition	next_length < 0x7fffffff	3032:22:94004:94027	8526099	0	True				
ANR	8526344	RelationalExpression	next_length < 0x7fffffff		8526099	0		<			
ANR	8526345	Identifier	next_length		8526099	0					
ANR	8526346	PrimaryExpression	0x7fffffff		8526099	1					
ANR	8526347	CompoundStatement		67:21:1983:2029	8526099	1					
ANR	8526348	IdentifierDeclStatement	"png_uint_32 next_type = get32 ( buffer , nused + 4 ) ;"	3034:21:94071:94117	8526099	0	True				
ANR	8526349	IdentifierDecl	"next_type = get32 ( buffer , nused + 4 )"		8526099	0					
ANR	8526350	IdentifierDeclType	png_uint_32		8526099	0					
ANR	8526351	Identifier	next_type		8526099	1					
ANR	8526352	AssignmentExpression	"next_type = get32 ( buffer , nused + 4 )"		8526099	2		=			
ANR	8526353	Identifier	next_type		8526099	0					
ANR	8526354	CallExpression	"get32 ( buffer , nused + 4 )"		8526099	1					
ANR	8526355	Callee	get32		8526099	0					
ANR	8526356	Identifier	get32		8526099	0					
ANR	8526357	ArgumentList	buffer		8526099	1					
ANR	8526358	Argument	buffer		8526099	0					
ANR	8526359	Identifier	buffer		8526099	0					
ANR	8526360	Argument	nused + 4		8526099	1					
ANR	8526361	AdditiveExpression	nused + 4		8526099	0		+			
ANR	8526362	Identifier	nused		8526099	0					
ANR	8526363	PrimaryExpression	4		8526099	1					
ANR	8526364	IfStatement	if ( chunk_type_valid ( next_type ) )		8526099	1					
ANR	8526365	Condition	chunk_type_valid ( next_type )	3036:25:94145:94171	8526099	0	True				
ANR	8526366	CallExpression	chunk_type_valid ( next_type )		8526099	0					
ANR	8526367	Callee	chunk_type_valid		8526099	0					
ANR	8526368	Identifier	chunk_type_valid		8526099	0					
ANR	8526369	ArgumentList	next_type		8526099	1					
ANR	8526370	Argument	next_type		8526099	0					
ANR	8526371	Identifier	next_type		8526099	0					
ANR	8526372	CompoundStatement		70:21:2107:2107	8526099	1					
ANR	8526373	ExpressionStatement	file -> read_count -= 8	3038:24:94221:94242	8526099	0	True				
ANR	8526374	AssignmentExpression	file -> read_count -= 8		8526099	0		-=			
ANR	8526375	PtrMemberAccess	file -> read_count		8526099	0					
ANR	8526376	Identifier	file		8526099	0					
ANR	8526377	Identifier	read_count		8526099	1					
ANR	8526378	PrimaryExpression	8		8526099	1					
ANR	8526379	ExpressionStatement	"process_chunk ( file , file_crc , next_length , next_type )"	3039:24:94268:94321	8526099	1	True				
ANR	8526380	CallExpression	"process_chunk ( file , file_crc , next_length , next_type )"		8526099	0					
ANR	8526381	Callee	process_chunk		8526099	0					
ANR	8526382	Identifier	process_chunk		8526099	0					
ANR	8526383	ArgumentList	file		8526099	1					
ANR	8526384	Argument	file		8526099	0					
ANR	8526385	Identifier	file		8526099	0					
ANR	8526386	Argument	file_crc		8526099	1					
ANR	8526387	Identifier	file_crc		8526099	0					
ANR	8526388	Argument	next_length		8526099	2					
ANR	8526389	Identifier	next_length		8526099	0					
ANR	8526390	Argument	next_type		8526099	3					
ANR	8526391	Identifier	next_type		8526099	0					
ANR	8526392	ReturnStatement	return ;	3040:24:94347:94353	8526099	2	True				
ANR	8526393	IfStatement	if ( nread <= nused )		8526099	2					
ANR	8526394	Condition	nread <= nused	3057:13:95022:95035	8526099	0	True				
ANR	8526395	RelationalExpression	nread <= nused		8526099	0		<=			
ANR	8526396	Identifier	nread		8526099	0					
ANR	8526397	Identifier	nused		8526099	1					
ANR	8526398	CompoundStatement		91:9:2959:2959	8526099	1					
ANR	8526399	ExpressionStatement	ch = read_byte ( file )	3059:12:95061:95081	8526099	0	True				
ANR	8526400	AssignmentExpression	ch = read_byte ( file )		8526099	0		=			
ANR	8526401	Identifier	ch		8526099	0					
ANR	8526402	CallExpression	read_byte ( file )		8526099	1					
ANR	8526403	Callee	read_byte		8526099	0					
ANR	8526404	Identifier	read_byte		8526099	0					
ANR	8526405	ArgumentList	file		8526099	1					
ANR	8526406	Argument	file		8526099	0					
ANR	8526407	Identifier	file		8526099	0					
ANR	8526408	IfStatement	if ( ch == EOF )		8526099	1					
ANR	8526409	Condition	ch == EOF	3061:16:95100:95108	8526099	0	True				
ANR	8526410	EqualityExpression	ch == EOF		8526099	0		==			
ANR	8526411	Identifier	ch		8526099	0					
ANR	8526412	Identifier	EOF		8526099	1					
ANR	8526413	GotoStatement	goto truncated ;	3062:15:95126:95140	8526099	1	True				
ANR	8526414	Identifier	truncated		8526099	0					
ANR	8526415	ElseStatement	else		8526099	0					
ANR	8526416	ExpressionStatement	ch = buffer [ ( ++ nused ) & 7 ]	3066:12:95180:95206	8526099	0	True				
ANR	8526417	AssignmentExpression	ch = buffer [ ( ++ nused ) & 7 ]		8526099	0		=			
ANR	8526418	Identifier	ch		8526099	0					
ANR	8526419	ArrayIndexing	buffer [ ( ++ nused ) & 7 ]		8526099	1					
ANR	8526420	Identifier	buffer		8526099	0					
ANR	8526421	BitAndExpression	( ++ nused ) & 7		8526099	1		&			
ANR	8526422	UnaryExpression	++ nused		8526099	0					
ANR	8526423	IncDec	++		8526099	0					
ANR	8526424	Identifier	nused		8526099	1					
ANR	8526425	PrimaryExpression	7		8526099	1					
ANR	8526426	ExpressionStatement	"crc = crc_one_byte ( crc , file_crc >> 24 )"	3068:9:95218:95257	8526099	3	True				
ANR	8526427	AssignmentExpression	"crc = crc_one_byte ( crc , file_crc >> 24 )"		8526099	0		=			
ANR	8526428	Identifier	crc		8526099	0					
ANR	8526429	CallExpression	"crc_one_byte ( crc , file_crc >> 24 )"		8526099	1					
ANR	8526430	Callee	crc_one_byte		8526099	0					
ANR	8526431	Identifier	crc_one_byte		8526099	0					
ANR	8526432	ArgumentList	crc		8526099	1					
ANR	8526433	Argument	crc		8526099	0					
ANR	8526434	Identifier	crc		8526099	0					
ANR	8526435	Argument	file_crc >> 24		8526099	1					
ANR	8526436	ShiftExpression	file_crc >> 24		8526099	0		>>			
ANR	8526437	Identifier	file_crc		8526099	0					
ANR	8526438	PrimaryExpression	24		8526099	1					
ANR	8526439	ExpressionStatement	file_crc = ( file_crc << 8 ) + ch	3069:9:95268:95299	8526099	4	True				
ANR	8526440	AssignmentExpression	file_crc = ( file_crc << 8 ) + ch		8526099	0		=			
ANR	8526441	Identifier	file_crc		8526099	0					
ANR	8526442	AdditiveExpression	( file_crc << 8 ) + ch		8526099	1		+			
ANR	8526443	ShiftExpression	file_crc << 8		8526099	0		<<			
ANR	8526444	Identifier	file_crc		8526099	0					
ANR	8526445	PrimaryExpression	8		8526099	1					
ANR	8526446	Identifier	ch		8526099	1					
ANR	8526447	Label	truncated :	3077:0:95455:95464	8526099	6	True				
ANR	8526448	Identifier	truncated		8526099	0					
ANR	8526449	ExpressionStatement	"stop ( file , READ_ERROR_CODE , ""damaged PNG stream"" )"	3078:3:95469:95518	8526099	7	True				
ANR	8526450	CallExpression	"stop ( file , READ_ERROR_CODE , ""damaged PNG stream"" )"		8526099	0					
ANR	8526451	Callee	stop		8526099	0					
ANR	8526452	Identifier	stop		8526099	0					
ANR	8526453	ArgumentList	file		8526099	1					
ANR	8526454	Argument	file		8526099	0					
ANR	8526455	Identifier	file		8526099	0					
ANR	8526456	Argument	READ_ERROR_CODE		8526099	1					
ANR	8526457	Identifier	READ_ERROR_CODE		8526099	0					
ANR	8526458	Argument	"""damaged PNG stream"""		8526099	2					
ANR	8526459	PrimaryExpression	"""damaged PNG stream"""		8526099	0					
ANR	8526460	ReturnType	static void		8526099	1					
ANR	8526461	Identifier	sync_stream		8526099	2					
ANR	8526462	ParameterList	struct file * file		8526099	3					
ANR	8526463	Parameter	struct file * file	2964:12:91902:91918	8526099	0	True				
ANR	8526464	ParameterType	struct file *		8526099	0					
ANR	8526465	Identifier	file		8526099	1					
ANR	8526466	CFGEntryNode	ENTRY		8526099		True				
ANR	8526467	CFGExitNode	EXIT		8526099		True				
ANR	8526468	Symbol	crc_init_4		8526099						
ANR	8526469	Symbol	nread		8526099						
ANR	8526470	Symbol	read_byte		8526099						
ANR	8526471	Symbol	next_type		8526099						
ANR	8526472	Symbol	type		8526099						
ANR	8526473	Symbol	file -> length		8526099						
ANR	8526474	Symbol	& file -> data_pos		8526099						
ANR	8526475	Symbol	read_4		8526099						
ANR	8526476	Symbol	* nused		8526099						
ANR	8526477	Symbol	file -> type		8526099						
ANR	8526478	Symbol	file		8526099						
ANR	8526479	Symbol	crc		8526099						
ANR	8526480	Symbol	* file -> global		8526099						
ANR	8526481	Symbol	buffer		8526099						
ANR	8526482	Symbol	EOF		8526099						
ANR	8526483	Symbol	chunk_type_valid		8526099						
ANR	8526484	Symbol	READ_ERROR_CODE		8526099						
ANR	8526485	Symbol	* buffer		8526099						
ANR	8526486	Symbol	crc_one_byte		8526099						
ANR	8526487	Symbol	ch		8526099						
ANR	8526488	Symbol	length		8526099						
ANR	8526489	Symbol	& file_crc		8526099						
ANR	8526490	Symbol	next_length		8526099						
ANR	8526491	Symbol	* file		8526099						
ANR	8526492	Symbol	stderr		8526099						
ANR	8526493	Symbol	file -> read_count		8526099						
ANR	8526494	Symbol	file -> status_code		8526099						
ANR	8526495	Symbol	file -> global -> verbose		8526099						
ANR	8526496	Symbol	nused		8526099						
ANR	8526497	Symbol	get32		8526099						
ANR	8526498	Symbol	file -> global		8526099						
ANR	8526499	Symbol	png_IEND		8526099						
ANR	8526500	Symbol	~7		8526099						
ANR	8526501	Symbol	file_crc		8526099						
ANR	8526502	Symbol	STREAM_ERROR		8526099						
ANR	8526503	Symbol	* * file		8526099						
ANR	8526504	Function	read_chunk	3081:0:95523:98440							
ANR	8526505	FunctionDef	read_chunk (struct file * file)		8526504	0					
ANR	8526506	CompoundStatement		3095:0:96277:98440	8526504	0					
ANR	8526507	IdentifierDeclStatement	png_uint_32 length = file -> length ;	3096:3:96282:96315	8526504	0	True				
ANR	8526508	IdentifierDecl	length = file -> length		8526504	0					
ANR	8526509	IdentifierDeclType	png_uint_32		8526504	0					
ANR	8526510	Identifier	length		8526504	1					
ANR	8526511	AssignmentExpression	length = file -> length		8526504	2		=			
ANR	8526512	Identifier	length		8526504	0					
ANR	8526513	PtrMemberAccess	file -> length		8526504	1					
ANR	8526514	Identifier	file		8526504	0					
ANR	8526515	Identifier	length		8526504	1					
ANR	8526516	IdentifierDeclStatement	png_uint_32 type = file -> type ;	3097:3:96320:96349	8526504	1	True				
ANR	8526517	IdentifierDecl	type = file -> type		8526504	0					
ANR	8526518	IdentifierDeclType	png_uint_32		8526504	0					
ANR	8526519	Identifier	type		8526504	1					
ANR	8526520	AssignmentExpression	type = file -> type		8526504	2		=			
ANR	8526521	Identifier	type		8526504	0					
ANR	8526522	PtrMemberAccess	file -> type		8526504	1					
ANR	8526523	Identifier	file		8526504	0					
ANR	8526524	Identifier	type		8526504	1					
ANR	8526525	IfStatement	if ( type == 0 )		8526504	2					
ANR	8526526	Condition	type == 0	3102:7:96489:96497	8526504	0	True				
ANR	8526527	EqualityExpression	type == 0		8526504	0		==			
ANR	8526528	Identifier	type		8526504	0					
ANR	8526529	PrimaryExpression	0		8526504	1					
ANR	8526530	ExpressionStatement	"stop ( file , UNEXPECTED_ERROR_CODE , ""read beyond IEND"" )"	3103:6:96506:96559	8526504	1	True				
ANR	8526531	CallExpression	"stop ( file , UNEXPECTED_ERROR_CODE , ""read beyond IEND"" )"		8526504	0					
ANR	8526532	Callee	stop		8526504	0					
ANR	8526533	Identifier	stop		8526504	0					
ANR	8526534	ArgumentList	file		8526504	1					
ANR	8526535	Argument	file		8526504	0					
ANR	8526536	Identifier	file		8526504	0					
ANR	8526537	Argument	UNEXPECTED_ERROR_CODE		8526504	1					
ANR	8526538	Identifier	UNEXPECTED_ERROR_CODE		8526504	0					
ANR	8526539	Argument	"""read beyond IEND"""		8526504	2					
ANR	8526540	PrimaryExpression	"""read beyond IEND"""		8526504	0					
ANR	8526541	IfStatement	if ( file -> global -> verbose > 2 )		8526504	3					
ANR	8526542	Condition	file -> global -> verbose > 2	3105:7:96569:96593	8526504	0	True				
ANR	8526543	RelationalExpression	file -> global -> verbose > 2		8526504	0		>			
ANR	8526544	PtrMemberAccess	file -> global -> verbose		8526504	0					
ANR	8526545	PtrMemberAccess	file -> global		8526504	0					
ANR	8526546	Identifier	file		8526504	0					
ANR	8526547	Identifier	global		8526504	1					
ANR	8526548	Identifier	verbose		8526504	1					
ANR	8526549	PrimaryExpression	2		8526504	1					
ANR	8526550	CompoundStatement		12:3:321:321	8526504	1					
ANR	8526551	ExpressionStatement	"fputs ( ""   "" , stderr )"	3107:6:96607:96627	8526504	0	True				
ANR	8526552	CallExpression	"fputs ( ""   "" , stderr )"		8526504	0					
ANR	8526553	Callee	fputs		8526504	0					
ANR	8526554	Identifier	fputs		8526504	0					
ANR	8526555	ArgumentList	"""   """		8526504	1					
ANR	8526556	Argument	"""   """		8526504	0					
ANR	8526557	PrimaryExpression	"""   """		8526504	0					
ANR	8526558	Argument	stderr		8526504	1					
ANR	8526559	Identifier	stderr		8526504	0					
ANR	8526560	ExpressionStatement	"type_name ( type , stderr )"	3108:6:96635:96658	8526504	1	True				
ANR	8526561	CallExpression	"type_name ( type , stderr )"		8526504	0					
ANR	8526562	Callee	type_name		8526504	0					
ANR	8526563	Identifier	type_name		8526504	0					
ANR	8526564	ArgumentList	type		8526504	1					
ANR	8526565	Argument	type		8526504	0					
ANR	8526566	Identifier	type		8526504	0					
ANR	8526567	Argument	stderr		8526504	1					
ANR	8526568	Identifier	stderr		8526504	0					
ANR	8526569	ExpressionStatement	"fprintf ( stderr , "" %lu\\n"" , ( unsigned long ) length )"	3109:6:96666:96714	8526504	2	True				
ANR	8526570	CallExpression	"fprintf ( stderr , "" %lu\\n"" , ( unsigned long ) length )"		8526504	0					
ANR	8526571	Callee	fprintf		8526504	0					
ANR	8526572	Identifier	fprintf		8526504	0					
ANR	8526573	ArgumentList	stderr		8526504	1					
ANR	8526574	Argument	stderr		8526504	0					
ANR	8526575	Identifier	stderr		8526504	0					
ANR	8526576	Argument	""" %lu\\n"""		8526504	1					
ANR	8526577	PrimaryExpression	""" %lu\\n"""		8526504	0					
ANR	8526578	Argument	( unsigned long ) length		8526504	2					
ANR	8526579	CastExpression	( unsigned long ) length		8526504	0					
ANR	8526580	CastTarget	unsigned long		8526504	0					
ANR	8526581	Identifier	length		8526504	1					
ANR	8526582	ExpressionStatement	file -> crc = crc_init_4 ( type )	3116:3:96929:96957	8526504	4	True				
ANR	8526583	AssignmentExpression	file -> crc = crc_init_4 ( type )		8526504	0		=			
ANR	8526584	PtrMemberAccess	file -> crc		8526504	0					
ANR	8526585	Identifier	file		8526504	0					
ANR	8526586	Identifier	crc		8526504	1					
ANR	8526587	CallExpression	crc_init_4 ( type )		8526504	1					
ANR	8526588	Callee	crc_init_4		8526504	0					
ANR	8526589	Identifier	crc_init_4		8526504	0					
ANR	8526590	ArgumentList	type		8526504	1					
ANR	8526591	Argument	type		8526504	0					
ANR	8526592	Identifier	type		8526504	0					
ANR	8526593	IfStatement	"if ( crc_read_many ( file , length ) )"		8526504	5					
ANR	8526594	Condition	"crc_read_many ( file , length )"	3117:7:96966:96992	8526504	0	True				
ANR	8526595	CallExpression	"crc_read_many ( file , length )"		8526504	0					
ANR	8526596	Callee	crc_read_many		8526504	0					
ANR	8526597	Identifier	crc_read_many		8526504	0					
ANR	8526598	ArgumentList	file		8526504	1					
ANR	8526599	Argument	file		8526504	0					
ANR	8526600	Identifier	file		8526504	0					
ANR	8526601	Argument	length		8526504	1					
ANR	8526602	Identifier	length		8526504	0					
ANR	8526603	CompoundStatement		26:6:809:853	8526504	1					
ANR	8526604	IdentifierDeclStatement	png_uint_32 file_crc ;	3119:6:97034:97054	8526504	0	True				
ANR	8526605	IdentifierDecl	file_crc		8526504	0					
ANR	8526606	IdentifierDeclType	png_uint_32		8526504	0					
ANR	8526607	Identifier	file_crc		8526504	1					
ANR	8526608	IdentifierDeclStatement	"unsigned int nread = read_4 ( file , & file_crc ) ;"	3120:6:97087:97131	8526504	1	True				
ANR	8526609	IdentifierDecl	"nread = read_4 ( file , & file_crc )"		8526504	0					
ANR	8526610	IdentifierDeclType	unsigned int		8526504	0					
ANR	8526611	Identifier	nread		8526504	1					
ANR	8526612	AssignmentExpression	"nread = read_4 ( file , & file_crc )"		8526504	2		=			
ANR	8526613	Identifier	nread		8526504	0					
ANR	8526614	CallExpression	"read_4 ( file , & file_crc )"		8526504	1					
ANR	8526615	Callee	read_4		8526504	0					
ANR	8526616	Identifier	read_4		8526504	0					
ANR	8526617	ArgumentList	file		8526504	1					
ANR	8526618	Argument	file		8526504	0					
ANR	8526619	Identifier	file		8526504	0					
ANR	8526620	Argument	& file_crc		8526504	1					
ANR	8526621	UnaryOperationExpression	& file_crc		8526504	0					
ANR	8526622	UnaryOperator	&		8526504	0					
ANR	8526623	Identifier	file_crc		8526504	1					
ANR	8526624	IfStatement	if ( nread == 4 )		8526504	2					
ANR	8526625	Condition	nread == 4	3122:10:97144:97153	8526504	0	True				
ANR	8526626	EqualityExpression	nread == 4		8526504	0		==			
ANR	8526627	Identifier	nread		8526504	0					
ANR	8526628	PrimaryExpression	4		8526504	1					
ANR	8526629	CompoundStatement		29:6:884:884	8526504	1					
ANR	8526630	IfStatement	if ( type != png_IEND )		8526504	0					
ANR	8526631	Condition	type != png_IEND	3124:13:97177:97192	8526504	0	True				
ANR	8526632	EqualityExpression	type != png_IEND		8526504	0		!=			
ANR	8526633	Identifier	type		8526504	0					
ANR	8526634	Identifier	png_IEND		8526504	1					
ANR	8526635	CompoundStatement		32:12:970:993	8526504	1					
ANR	8526636	IdentifierDeclStatement	png_uint_32 next_length ;	3126:12:97248:97271	8526504	0	True				
ANR	8526637	IdentifierDecl	next_length		8526504	0					
ANR	8526638	IdentifierDeclType	png_uint_32		8526504	0					
ANR	8526639	Identifier	next_length		8526504	1					
ANR	8526640	ExpressionStatement	"nread += read_4 ( file , & next_length )"	3128:12:97286:97321	8526504	1	True				
ANR	8526641	AssignmentExpression	"nread += read_4 ( file , & next_length )"		8526504	0		+=			
ANR	8526642	Identifier	nread		8526504	0					
ANR	8526643	CallExpression	"read_4 ( file , & next_length )"		8526504	1					
ANR	8526644	Callee	read_4		8526504	0					
ANR	8526645	Identifier	read_4		8526504	0					
ANR	8526646	ArgumentList	file		8526504	1					
ANR	8526647	Argument	file		8526504	0					
ANR	8526648	Identifier	file		8526504	0					
ANR	8526649	Argument	& next_length		8526504	1					
ANR	8526650	UnaryOperationExpression	& next_length		8526504	0					
ANR	8526651	UnaryOperator	&		8526504	0					
ANR	8526652	Identifier	next_length		8526504	1					
ANR	8526653	IfStatement	if ( nread == 8 && next_length <= 0x7fffffff )		8526504	2					
ANR	8526654	Condition	nread == 8 && next_length <= 0x7fffffff	3129:16:97339:97377	8526504	0	True				
ANR	8526655	AndExpression	nread == 8 && next_length <= 0x7fffffff		8526504	0		&&			
ANR	8526656	EqualityExpression	nread == 8		8526504	0		==			
ANR	8526657	Identifier	nread		8526504	0					
ANR	8526658	PrimaryExpression	8		8526504	1					
ANR	8526659	RelationalExpression	next_length <= 0x7fffffff		8526504	1		<=			
ANR	8526660	Identifier	next_length		8526504	0					
ANR	8526661	PrimaryExpression	0x7fffffff		8526504	1					
ANR	8526662	CompoundStatement		37:15:1131:1152	8526504	1					
ANR	8526663	IdentifierDeclStatement	png_uint_32 next_type ;	3131:15:97409:97430	8526504	0	True				
ANR	8526664	IdentifierDecl	next_type		8526504	0					
ANR	8526665	IdentifierDeclType	png_uint_32		8526504	0					
ANR	8526666	Identifier	next_type		8526504	1					
ANR	8526667	ExpressionStatement	"nread += read_4 ( file , & next_type )"	3133:15:97448:97481	8526504	1	True				
ANR	8526668	AssignmentExpression	"nread += read_4 ( file , & next_type )"		8526504	0		+=			
ANR	8526669	Identifier	nread		8526504	0					
ANR	8526670	CallExpression	"read_4 ( file , & next_type )"		8526504	1					
ANR	8526671	Callee	read_4		8526504	0					
ANR	8526672	Identifier	read_4		8526504	0					
ANR	8526673	ArgumentList	file		8526504	1					
ANR	8526674	Argument	file		8526504	0					
ANR	8526675	Identifier	file		8526504	0					
ANR	8526676	Argument	& next_type		8526504	1					
ANR	8526677	UnaryOperationExpression	& next_type		8526504	0					
ANR	8526678	UnaryOperator	&		8526504	0					
ANR	8526679	Identifier	next_type		8526504	1					
ANR	8526680	IfStatement	if ( nread == 12 && chunk_type_valid ( next_type ) )		8526504	2					
ANR	8526681	Condition	nread == 12 && chunk_type_valid ( next_type )	3135:19:97503:97544	8526504	0	True				
ANR	8526682	AndExpression	nread == 12 && chunk_type_valid ( next_type )		8526504	0		&&			
ANR	8526683	EqualityExpression	nread == 12		8526504	0		==			
ANR	8526684	Identifier	nread		8526504	0					
ANR	8526685	PrimaryExpression	12		8526504	1					
ANR	8526686	CallExpression	chunk_type_valid ( next_type )		8526504	1					
ANR	8526687	Callee	chunk_type_valid		8526504	0					
ANR	8526688	Identifier	chunk_type_valid		8526504	0					
ANR	8526689	ArgumentList	next_type		8526504	1					
ANR	8526690	Argument	next_type		8526504	0					
ANR	8526691	Identifier	next_type		8526504	0					
ANR	8526692	CompoundStatement		42:15:1284:1284	8526504	1					
ANR	8526693	ExpressionStatement	file -> read_count -= 8	3140:18:97710:97731	8526504	0	True				
ANR	8526694	AssignmentExpression	file -> read_count -= 8		8526504	0		-=			
ANR	8526695	PtrMemberAccess	file -> read_count		8526504	0					
ANR	8526696	Identifier	file		8526504	0					
ANR	8526697	Identifier	read_count		8526504	1					
ANR	8526698	PrimaryExpression	8		8526504	1					
ANR	8526699	ExpressionStatement	"process_chunk ( file , file_crc , next_length , next_type )"	3141:18:97751:97804	8526504	1	True				
ANR	8526700	CallExpression	"process_chunk ( file , file_crc , next_length , next_type )"		8526504	0					
ANR	8526701	Callee	process_chunk		8526504	0					
ANR	8526702	Identifier	process_chunk		8526504	0					
ANR	8526703	ArgumentList	file		8526504	1					
ANR	8526704	Argument	file		8526504	0					
ANR	8526705	Identifier	file		8526504	0					
ANR	8526706	Argument	file_crc		8526504	1					
ANR	8526707	Identifier	file_crc		8526504	0					
ANR	8526708	Argument	next_length		8526504	2					
ANR	8526709	Identifier	next_length		8526504	0					
ANR	8526710	Argument	next_type		8526504	3					
ANR	8526711	Identifier	next_type		8526504	0					
ANR	8526712	ReturnStatement	return ;	3142:18:97824:97830	8526504	2	True				
ANR	8526713	ElseStatement	else		8526504	0					
ANR	8526714	CompoundStatement		54:9:1631:1631	8526504	0					
ANR	8526715	ExpressionStatement	"process_chunk ( file , file_crc , 0 , 0 )"	3149:12:97923:97958	8526504	0	True				
ANR	8526716	CallExpression	"process_chunk ( file , file_crc , 0 , 0 )"		8526504	0					
ANR	8526717	Callee	process_chunk		8526504	0					
ANR	8526718	Identifier	process_chunk		8526504	0					
ANR	8526719	ArgumentList	file		8526504	1					
ANR	8526720	Argument	file		8526504	0					
ANR	8526721	Identifier	file		8526504	0					
ANR	8526722	Argument	file_crc		8526504	1					
ANR	8526723	Identifier	file_crc		8526504	0					
ANR	8526724	Argument	0		8526504	2					
ANR	8526725	PrimaryExpression	0		8526504	0					
ANR	8526726	Argument	0		8526504	3					
ANR	8526727	PrimaryExpression	0		8526504	0					
ANR	8526728	ReturnStatement	return ;	3150:12:97972:97978	8526504	1	True				
ANR	8526729	ExpressionStatement	sync_stream ( file )	3162:3:98421:98438	8526504	6	True				
ANR	8526730	CallExpression	sync_stream ( file )		8526504	0					
ANR	8526731	Callee	sync_stream		8526504	0					
ANR	8526732	Identifier	sync_stream		8526504	0					
ANR	8526733	ArgumentList	file		8526504	1					
ANR	8526734	Argument	file		8526504	0					
ANR	8526735	Identifier	file		8526504	0					
ANR	8526736	ReturnType	static void		8526504	1					
ANR	8526737	Identifier	read_chunk		8526504	2					
ANR	8526738	ParameterList	struct file * file		8526504	3					
ANR	8526739	Parameter	struct file * file	3082:11:95546:95562	8526504	0	True				
ANR	8526740	ParameterType	struct file *		8526504	0					
ANR	8526741	Identifier	file		8526504	1					
ANR	8526742	CFGEntryNode	ENTRY		8526504		True				
ANR	8526743	CFGExitNode	EXIT		8526504		True				
ANR	8526744	Symbol	crc_init_4		8526504						
ANR	8526745	Symbol	nread		8526504						
ANR	8526746	Symbol	next_type		8526504						
ANR	8526747	Symbol	type		8526504						
ANR	8526748	Symbol	file -> length		8526504						
ANR	8526749	Symbol	read_4		8526504						
ANR	8526750	Symbol	file -> type		8526504						
ANR	8526751	Symbol	file		8526504						
ANR	8526752	Symbol	* file -> global		8526504						
ANR	8526753	Symbol	UNEXPECTED_ERROR_CODE		8526504						
ANR	8526754	Symbol	chunk_type_valid		8526504						
ANR	8526755	Symbol	& next_type		8526504						
ANR	8526756	Symbol	crc_read_many		8526504						
ANR	8526757	Symbol	length		8526504						
ANR	8526758	Symbol	& file_crc		8526504						
ANR	8526759	Symbol	next_length		8526504						
ANR	8526760	Symbol	* file		8526504						
ANR	8526761	Symbol	stderr		8526504						
ANR	8526762	Symbol	file -> read_count		8526504						
ANR	8526763	Symbol	file -> global -> verbose		8526504						
ANR	8526764	Symbol	file -> crc		8526504						
ANR	8526765	Symbol	& next_length		8526504						
ANR	8526766	Symbol	file -> global		8526504						
ANR	8526767	Symbol	png_IEND		8526504						
ANR	8526768	Symbol	file_crc		8526504						
ANR	8526769	Symbol	* * file		8526504						
ANR	8526770	DeclStmt									
ANR	8526771	Decl							struct file	struct file * ( png_const_structrp png_ptr )	get_control
ANR	8526772	Function	error_handler	3168:0:98585:98728							
ANR	8526773	FunctionDef	"error_handler (png_structp png_ptr , png_const_charp message)"		8526772	0					
ANR	8526774	CompoundStatement		3170:0:98666:98728	8526772	0					
ANR	8526775	ExpressionStatement	"stop ( get_control ( png_ptr ) , LIBPNG_ERROR_CODE , message )"	3171:3:98671:98726	8526772	0	True				
ANR	8526776	CallExpression	"stop ( get_control ( png_ptr ) , LIBPNG_ERROR_CODE , message )"		8526772	0					
ANR	8526777	Callee	stop		8526772	0					
ANR	8526778	Identifier	stop		8526772	0					
ANR	8526779	ArgumentList	get_control ( png_ptr )		8526772	1					
ANR	8526780	Argument	get_control ( png_ptr )		8526772	0					
ANR	8526781	CallExpression	get_control ( png_ptr )		8526772	0					
ANR	8526782	Callee	get_control		8526772	0					
ANR	8526783	Identifier	get_control		8526772	0					
ANR	8526784	ArgumentList	png_ptr		8526772	1					
ANR	8526785	Argument	png_ptr		8526772	0					
ANR	8526786	Identifier	png_ptr		8526772	0					
ANR	8526787	Argument	LIBPNG_ERROR_CODE		8526772	1					
ANR	8526788	Identifier	LIBPNG_ERROR_CODE		8526772	0					
ANR	8526789	Argument	message		8526772	2					
ANR	8526790	Identifier	message		8526772	0					
ANR	8526791	ReturnType	static void PNGCBAPI		8526772	1					
ANR	8526792	Identifier	error_handler		8526772	2					
ANR	8526793	ParameterList	"png_structp png_ptr , png_const_charp message"		8526772	3					
ANR	8526794	Parameter	png_structp png_ptr	3169:14:98620:98638	8526772	0	True				
ANR	8526795	ParameterType	png_structp		8526772	0					
ANR	8526796	Identifier	png_ptr		8526772	1					
ANR	8526797	Parameter	png_const_charp message	3169:35:98641:98663	8526772	1	True				
ANR	8526798	ParameterType	png_const_charp		8526772	0					
ANR	8526799	Identifier	message		8526772	1					
ANR	8526800	CFGEntryNode	ENTRY		8526772		True				
ANR	8526801	CFGExitNode	EXIT		8526772		True				
ANR	8526802	Symbol	get_control		8526772						
ANR	8526803	Symbol	message		8526772						
ANR	8526804	Symbol	LIBPNG_ERROR_CODE		8526772						
ANR	8526805	Symbol	png_ptr		8526772						
ANR	8526806	Function	warning_handler	3174:0:98731:98947							
ANR	8526807	FunctionDef	"warning_handler (png_structp png_ptr , png_const_charp message)"		8526806	0					
ANR	8526808	CompoundStatement		3176:0:98814:98947	8526806	0					
ANR	8526809	IdentifierDeclStatement	struct file * file = get_control ( png_ptr ) ;	3177:3:98819:98859	8526806	0	True				
ANR	8526810	IdentifierDecl	* file = get_control ( png_ptr )		8526806	0					
ANR	8526811	IdentifierDeclType	struct file *		8526806	0					
ANR	8526812	Identifier	file		8526806	1					
ANR	8526813	AssignmentExpression	* file = get_control ( png_ptr )		8526806	2		=			
ANR	8526814	Identifier	file		8526806	0					
ANR	8526815	CallExpression	get_control ( png_ptr )		8526806	1					
ANR	8526816	Callee	get_control		8526806	0					
ANR	8526817	Identifier	get_control		8526806	0					
ANR	8526818	ArgumentList	png_ptr		8526806	1					
ANR	8526819	Argument	png_ptr		8526806	0					
ANR	8526820	Identifier	png_ptr		8526806	0					
ANR	8526821	IfStatement	if ( file -> global -> warnings )		8526806	1					
ANR	8526822	Condition	file -> global -> warnings	3179:7:98869:98890	8526806	0	True				
ANR	8526823	PtrMemberAccess	file -> global -> warnings		8526806	0					
ANR	8526824	PtrMemberAccess	file -> global		8526806	0					
ANR	8526825	Identifier	file		8526806	0					
ANR	8526826	Identifier	global		8526806	1					
ANR	8526827	Identifier	warnings		8526806	1					
ANR	8526828	ExpressionStatement	"emit_error ( file , LIBPNG_WARNING_CODE , message )"	3180:6:98899:98945	8526806	1	True				
ANR	8526829	CallExpression	"emit_error ( file , LIBPNG_WARNING_CODE , message )"		8526806	0					
ANR	8526830	Callee	emit_error		8526806	0					
ANR	8526831	Identifier	emit_error		8526806	0					
ANR	8526832	ArgumentList	file		8526806	1					
ANR	8526833	Argument	file		8526806	0					
ANR	8526834	Identifier	file		8526806	0					
ANR	8526835	Argument	LIBPNG_WARNING_CODE		8526806	1					
ANR	8526836	Identifier	LIBPNG_WARNING_CODE		8526806	0					
ANR	8526837	Argument	message		8526806	2					
ANR	8526838	Identifier	message		8526806	0					
ANR	8526839	ReturnType	static void PNGCBAPI		8526806	1					
ANR	8526840	Identifier	warning_handler		8526806	2					
ANR	8526841	ParameterList	"png_structp png_ptr , png_const_charp message"		8526806	3					
ANR	8526842	Parameter	png_structp png_ptr	3175:16:98768:98786	8526806	0	True				
ANR	8526843	ParameterType	png_structp		8526806	0					
ANR	8526844	Identifier	png_ptr		8526806	1					
ANR	8526845	Parameter	png_const_charp message	3175:37:98789:98811	8526806	1	True				
ANR	8526846	ParameterType	png_const_charp		8526806	0					
ANR	8526847	Identifier	message		8526806	1					
ANR	8526848	CFGEntryNode	ENTRY		8526806		True				
ANR	8526849	CFGExitNode	EXIT		8526806		True				
ANR	8526850	Symbol	LIBPNG_WARNING_CODE		8526806						
ANR	8526851	Symbol	get_control		8526806						
ANR	8526852	Symbol	file		8526806						
ANR	8526853	Symbol	file -> global -> warnings		8526806						
ANR	8526854	Symbol	* file -> global		8526806						
ANR	8526855	Symbol	file -> global		8526806						
ANR	8526856	Symbol	message		8526806						
ANR	8526857	Symbol	* file		8526806						
ANR	8526858	Symbol	png_ptr		8526806						
ANR	8526859	Symbol	* * file		8526806						
ANR	8526860	Function	read_callback	3186:0:99057:111723							
ANR	8526861	FunctionDef	"read_callback (png_structp png_ptr , png_bytep buffer , size_t count)"		8526860	0					
ANR	8526862	CompoundStatement		3189:0:99197:111723	8526860	0					
ANR	8526863	IdentifierDeclStatement	struct file * file = get_control ( png_ptr ) ;	3190:3:99202:99242	8526860	0	True				
ANR	8526864	IdentifierDecl	* file = get_control ( png_ptr )		8526860	0					
ANR	8526865	IdentifierDeclType	struct file *		8526860	0					
ANR	8526866	Identifier	file		8526860	1					
ANR	8526867	AssignmentExpression	* file = get_control ( png_ptr )		8526860	2		=			
ANR	8526868	Identifier	file		8526860	0					
ANR	8526869	CallExpression	get_control ( png_ptr )		8526860	1					
ANR	8526870	Callee	get_control		8526860	0					
ANR	8526871	Identifier	get_control		8526860	0					
ANR	8526872	ArgumentList	png_ptr		8526860	1					
ANR	8526873	Argument	png_ptr		8526860	0					
ANR	8526874	Identifier	png_ptr		8526860	0					
ANR	8526875	IdentifierDeclStatement	"png_uint_32 type , length ;"	3191:3:99247:99271	8526860	1	True				
ANR	8526876	IdentifierDecl	type		8526860	0					
ANR	8526877	IdentifierDeclType	png_uint_32		8526860	0					
ANR	8526878	Identifier	type		8526860	1					
ANR	8526879	IdentifierDecl	length		8526860	1					
ANR	8526880	IdentifierDeclType	png_uint_32		8526860	0					
ANR	8526881	Identifier	length		8526860	1					
ANR	8526882	IdentifierDeclStatement	struct chunk * chunk ;	3192:3:99309:99328	8526860	2	True				
ANR	8526883	IdentifierDecl	* chunk		8526860	0					
ANR	8526884	IdentifierDeclType	struct chunk *		8526860	0					
ANR	8526885	Identifier	chunk		8526860	1					
ANR	8526886	IfStatement	if ( count == 0 )		8526860	3					
ANR	8526887	Condition	count == 0	3195:7:99394:99403	8526860	0	True				
ANR	8526888	EqualityExpression	count == 0		8526860	0		==			
ANR	8526889	Identifier	count		8526860	0					
ANR	8526890	PrimaryExpression	0		8526860	1					
ANR	8526891	ExpressionStatement	"stop ( file , UNEXPECTED_ERROR_CODE , ""read callback for 0 bytes"" )"	3196:6:99412:99474	8526860	1	True				
ANR	8526892	CallExpression	"stop ( file , UNEXPECTED_ERROR_CODE , ""read callback for 0 bytes"" )"		8526860	0					
ANR	8526893	Callee	stop		8526860	0					
ANR	8526894	Identifier	stop		8526860	0					
ANR	8526895	ArgumentList	file		8526860	1					
ANR	8526896	Argument	file		8526860	0					
ANR	8526897	Identifier	file		8526860	0					
ANR	8526898	Argument	UNEXPECTED_ERROR_CODE		8526860	1					
ANR	8526899	Identifier	UNEXPECTED_ERROR_CODE		8526860	0					
ANR	8526900	Argument	"""read callback for 0 bytes"""		8526860	2					
ANR	8526901	PrimaryExpression	"""read callback for 0 bytes"""		8526860	0					
ANR	8526902	IfStatement	if ( file -> read_count < 8 )		8526860	4					
ANR	8526903	Condition	file -> read_count < 8	3203:7:99743:99762	8526860	0	True				
ANR	8526904	RelationalExpression	file -> read_count < 8		8526860	0		<			
ANR	8526905	PtrMemberAccess	file -> read_count		8526860	0					
ANR	8526906	Identifier	file		8526860	0					
ANR	8526907	Identifier	read_count		8526860	1					
ANR	8526908	PrimaryExpression	8		8526860	1					
ANR	8526909	CompoundStatement		16:3:570:570	8526860	1					
ANR	8526910	ExpressionStatement	assert ( file -> read_count == 0 )	3205:6:99776:99805	8526860	0	True				
ANR	8526911	CallExpression	assert ( file -> read_count == 0 )		8526860	0					
ANR	8526912	Callee	assert		8526860	0					
ANR	8526913	Identifier	assert		8526860	0					
ANR	8526914	ArgumentList	file -> read_count == 0		8526860	1					
ANR	8526915	Argument	file -> read_count == 0		8526860	0					
ANR	8526916	EqualityExpression	file -> read_count == 0		8526860	0		==			
ANR	8526917	PtrMemberAccess	file -> read_count		8526860	0					
ANR	8526918	Identifier	file		8526860	0					
ANR	8526919	Identifier	read_count		8526860	1					
ANR	8526920	PrimaryExpression	0		8526860	1					
ANR	8526921	ExpressionStatement	assert ( ( file -> status_code & TRUNCATED ) == 0 )	3206:6:99813:99857	8526860	1	True				
ANR	8526922	CallExpression	assert ( ( file -> status_code & TRUNCATED ) == 0 )		8526860	0					
ANR	8526923	Callee	assert		8526860	0					
ANR	8526924	Identifier	assert		8526860	0					
ANR	8526925	ArgumentList	( file -> status_code & TRUNCATED ) == 0		8526860	1					
ANR	8526926	Argument	( file -> status_code & TRUNCATED ) == 0		8526860	0					
ANR	8526927	EqualityExpression	( file -> status_code & TRUNCATED ) == 0		8526860	0		==			
ANR	8526928	BitAndExpression	file -> status_code & TRUNCATED		8526860	0		&			
ANR	8526929	PtrMemberAccess	file -> status_code		8526860	0					
ANR	8526930	Identifier	file		8526860	0					
ANR	8526931	Identifier	status_code		8526860	1					
ANR	8526932	Identifier	TRUNCATED		8526860	1					
ANR	8526933	PrimaryExpression	0		8526860	1					
ANR	8526934	ExpressionStatement	"( void ) read_4 ( file , & file -> length )"	3208:6:99866:99899	8526860	2	True				
ANR	8526935	CastExpression	"( void ) read_4 ( file , & file -> length )"		8526860	0					
ANR	8526936	CastTarget	void		8526860	0					
ANR	8526937	CallExpression	"read_4 ( file , & file -> length )"		8526860	1					
ANR	8526938	Callee	read_4		8526860	0					
ANR	8526939	Identifier	read_4		8526860	0					
ANR	8526940	ArgumentList	file		8526860	1					
ANR	8526941	Argument	file		8526860	0					
ANR	8526942	Identifier	file		8526860	0					
ANR	8526943	Argument	& file -> length		8526860	1					
ANR	8526944	UnaryOperationExpression	& file -> length		8526860	0					
ANR	8526945	UnaryOperator	&		8526860	0					
ANR	8526946	PtrMemberAccess	file -> length		8526860	1					
ANR	8526947	Identifier	file		8526860	0					
ANR	8526948	Identifier	length		8526860	1					
ANR	8526949	IfStatement	if ( file -> read_count == 4 )		8526860	3					
ANR	8526950	Condition	file -> read_count == 4	3210:10:99912:99932	8526860	0	True				
ANR	8526951	EqualityExpression	file -> read_count == 4		8526860	0		==			
ANR	8526952	PtrMemberAccess	file -> read_count		8526860	0					
ANR	8526953	Identifier	file		8526860	0					
ANR	8526954	Identifier	read_count		8526860	1					
ANR	8526955	PrimaryExpression	4		8526860	1					
ANR	8526956	ExpressionStatement	"( void ) read_4 ( file , & file -> type )"	3211:9:99944:99975	8526860	1	True				
ANR	8526957	CastExpression	"( void ) read_4 ( file , & file -> type )"		8526860	0					
ANR	8526958	CastTarget	void		8526860	0					
ANR	8526959	CallExpression	"read_4 ( file , & file -> type )"		8526860	1					
ANR	8526960	Callee	read_4		8526860	0					
ANR	8526961	Identifier	read_4		8526860	0					
ANR	8526962	ArgumentList	file		8526860	1					
ANR	8526963	Argument	file		8526860	0					
ANR	8526964	Identifier	file		8526860	0					
ANR	8526965	Argument	& file -> type		8526860	1					
ANR	8526966	UnaryOperationExpression	& file -> type		8526860	0					
ANR	8526967	UnaryOperator	&		8526860	0					
ANR	8526968	PtrMemberAccess	file -> type		8526860	1					
ANR	8526969	Identifier	file		8526860	0					
ANR	8526970	Identifier	type		8526860	1					
ANR	8526971	IfStatement	if ( file -> read_count < 8 )		8526860	4					
ANR	8526972	Condition	file -> read_count < 8	3213:10:99988:100007	8526860	0	True				
ANR	8526973	RelationalExpression	file -> read_count < 8		8526860	0		<			
ANR	8526974	PtrMemberAccess	file -> read_count		8526860	0					
ANR	8526975	Identifier	file		8526860	0					
ANR	8526976	Identifier	read_count		8526860	1					
ANR	8526977	PrimaryExpression	8		8526860	1					
ANR	8526978	CompoundStatement		26:6:818:818	8526860	1					
ANR	8526979	ExpressionStatement	assert ( ( file -> status_code & TRUNCATED ) != 0 )	3215:9:100027:100071	8526860	0	True				
ANR	8526980	CallExpression	assert ( ( file -> status_code & TRUNCATED ) != 0 )		8526860	0					
ANR	8526981	Callee	assert		8526860	0					
ANR	8526982	Identifier	assert		8526860	0					
ANR	8526983	ArgumentList	( file -> status_code & TRUNCATED ) != 0		8526860	1					
ANR	8526984	Argument	( file -> status_code & TRUNCATED ) != 0		8526860	0					
ANR	8526985	EqualityExpression	( file -> status_code & TRUNCATED ) != 0		8526860	0		!=			
ANR	8526986	BitAndExpression	file -> status_code & TRUNCATED		8526860	0		&			
ANR	8526987	PtrMemberAccess	file -> status_code		8526860	0					
ANR	8526988	Identifier	file		8526860	0					
ANR	8526989	Identifier	status_code		8526860	1					
ANR	8526990	Identifier	TRUNCATED		8526860	1					
ANR	8526991	PrimaryExpression	0		8526860	1					
ANR	8526992	ExpressionStatement	"stop ( file , READ_ERROR_CODE , ""not a PNG (too short)"" )"	3216:9:100082:100134	8526860	1	True				
ANR	8526993	CallExpression	"stop ( file , READ_ERROR_CODE , ""not a PNG (too short)"" )"		8526860	0					
ANR	8526994	Callee	stop		8526860	0					
ANR	8526995	Identifier	stop		8526860	0					
ANR	8526996	ArgumentList	file		8526860	1					
ANR	8526997	Argument	file		8526860	0					
ANR	8526998	Identifier	file		8526860	0					
ANR	8526999	Argument	READ_ERROR_CODE		8526860	1					
ANR	8527000	Identifier	READ_ERROR_CODE		8526860	0					
ANR	8527001	Argument	"""not a PNG (too short)"""		8526860	2					
ANR	8527002	PrimaryExpression	"""not a PNG (too short)"""		8526860	0					
ANR	8527003	IfStatement	if ( file -> state == STATE_SIGNATURE )		8526860	5					
ANR	8527004	Condition	file -> state == STATE_SIGNATURE	3219:10:100155:100184	8526860	0	True				
ANR	8527005	EqualityExpression	file -> state == STATE_SIGNATURE		8526860	0		==			
ANR	8527006	PtrMemberAccess	file -> state		8526860	0					
ANR	8527007	Identifier	file		8526860	0					
ANR	8527008	Identifier	state		8526860	1					
ANR	8527009	Identifier	STATE_SIGNATURE		8526860	1					
ANR	8527010	CompoundStatement		32:6:995:995	8526860	1					
ANR	8527011	IfStatement	if ( file -> length != sig1 || file -> type != sig2 )		8526860	0					
ANR	8527012	Condition	file -> length != sig1 || file -> type != sig2	3221:13:100208:100249	8526860	0	True				
ANR	8527013	OrExpression	file -> length != sig1 || file -> type != sig2		8526860	0		||			
ANR	8527014	EqualityExpression	file -> length != sig1		8526860	0		!=			
ANR	8527015	PtrMemberAccess	file -> length		8526860	0					
ANR	8527016	Identifier	file		8526860	0					
ANR	8527017	Identifier	length		8526860	1					
ANR	8527018	Identifier	sig1		8526860	1					
ANR	8527019	EqualityExpression	file -> type != sig2		8526860	1		!=			
ANR	8527020	PtrMemberAccess	file -> type		8526860	0					
ANR	8527021	Identifier	file		8526860	0					
ANR	8527022	Identifier	type		8526860	1					
ANR	8527023	Identifier	sig2		8526860	1					
ANR	8527024	ExpressionStatement	"stop ( file , LIBPNG_ERROR_CODE , ""not a PNG (signature)"" )"	3222:12:100264:100318	8526860	1	True				
ANR	8527025	CallExpression	"stop ( file , LIBPNG_ERROR_CODE , ""not a PNG (signature)"" )"		8526860	0					
ANR	8527026	Callee	stop		8526860	0					
ANR	8527027	Identifier	stop		8526860	0					
ANR	8527028	ArgumentList	file		8526860	1					
ANR	8527029	Argument	file		8526860	0					
ANR	8527030	Identifier	file		8526860	0					
ANR	8527031	Argument	LIBPNG_ERROR_CODE		8526860	1					
ANR	8527032	Identifier	LIBPNG_ERROR_CODE		8526860	0					
ANR	8527033	Argument	"""not a PNG (signature)"""		8526860	2					
ANR	8527034	PrimaryExpression	"""not a PNG (signature)"""		8526860	0					
ANR	8527035	ExpressionStatement	file -> write_count = 0	3227:9:100467:100488	8526860	1	True				
ANR	8527036	AssignmentExpression	file -> write_count = 0		8526860	0		=			
ANR	8527037	PtrMemberAccess	file -> write_count		8526860	0					
ANR	8527038	Identifier	file		8526860	0					
ANR	8527039	Identifier	write_count		8526860	1					
ANR	8527040	PrimaryExpression	0		8526860	1					
ANR	8527041	ElseStatement	else		8526860	0					
ANR	8527042	CompoundStatement		43:6:1318:1318	8526860	0					
ANR	8527043	ExpressionStatement	assert ( file -> state == STATE_CHUNKS )	3232:9:100527:100562	8526860	0	True				
ANR	8527044	CallExpression	assert ( file -> state == STATE_CHUNKS )		8526860	0					
ANR	8527045	Callee	assert		8526860	0					
ANR	8527046	Identifier	assert		8526860	0					
ANR	8527047	ArgumentList	file -> state == STATE_CHUNKS		8526860	1					
ANR	8527048	Argument	file -> state == STATE_CHUNKS		8526860	0					
ANR	8527049	EqualityExpression	file -> state == STATE_CHUNKS		8526860	0		==			
ANR	8527050	PtrMemberAccess	file -> state		8526860	0					
ANR	8527051	Identifier	file		8526860	0					
ANR	8527052	Identifier	state		8526860	1					
ANR	8527053	Identifier	STATE_CHUNKS		8526860	1					
ANR	8527054	IfStatement	if ( file -> length != 13 || file -> type != png_IHDR )		8526860	1					
ANR	8527055	Condition	file -> length != 13 || file -> type != png_IHDR	3237:13:100746:100789	8526860	0	True				
ANR	8527056	OrExpression	file -> length != 13 || file -> type != png_IHDR		8526860	0		||			
ANR	8527057	EqualityExpression	file -> length != 13		8526860	0		!=			
ANR	8527058	PtrMemberAccess	file -> length		8526860	0					
ANR	8527059	Identifier	file		8526860	0					
ANR	8527060	Identifier	length		8526860	1					
ANR	8527061	PrimaryExpression	13		8526860	1					
ANR	8527062	EqualityExpression	file -> type != png_IHDR		8526860	1		!=			
ANR	8527063	PtrMemberAccess	file -> type		8526860	0					
ANR	8527064	Identifier	file		8526860	0					
ANR	8527065	Identifier	type		8526860	1					
ANR	8527066	Identifier	png_IHDR		8526860	1					
ANR	8527067	ExpressionStatement	"stop ( file , LIBPNG_ERROR_CODE , ""not a PNG (IHDR)"" )"	3238:12:100804:100853	8526860	1	True				
ANR	8527068	CallExpression	"stop ( file , LIBPNG_ERROR_CODE , ""not a PNG (IHDR)"" )"		8526860	0					
ANR	8527069	Callee	stop		8526860	0					
ANR	8527070	Identifier	stop		8526860	0					
ANR	8527071	ArgumentList	file		8526860	1					
ANR	8527072	Argument	file		8526860	0					
ANR	8527073	Identifier	file		8526860	0					
ANR	8527074	Argument	LIBPNG_ERROR_CODE		8526860	1					
ANR	8527075	Identifier	LIBPNG_ERROR_CODE		8526860	0					
ANR	8527076	Argument	"""not a PNG (IHDR)"""		8526860	2					
ANR	8527077	PrimaryExpression	"""not a PNG (IHDR)"""		8526860	0					
ANR	8527078	ExpressionStatement	getpos ( file )	3241:9:100924:100936	8526860	2	True				
ANR	8527079	CallExpression	getpos ( file )		8526860	0					
ANR	8527080	Callee	getpos		8526860	0					
ANR	8527081	Identifier	getpos		8526860	0					
ANR	8527082	ArgumentList	file		8526860	1					
ANR	8527083	Argument	file		8526860	0					
ANR	8527084	Identifier	file		8526860	0					
ANR	8527085	ExpressionStatement	chunk = file -> chunk	3248:3:101100:101119	8526860	5	True				
ANR	8527086	AssignmentExpression	chunk = file -> chunk		8526860	0		=			
ANR	8527087	Identifier	chunk		8526860	0					
ANR	8527088	PtrMemberAccess	file -> chunk		8526860	1					
ANR	8527089	Identifier	file		8526860	0					
ANR	8527090	Identifier	chunk		8526860	1					
ANR	8527091	IfStatement	if ( chunk != NULL )		8526860	6					
ANR	8527092	Condition	chunk != NULL	3250:7:101129:101141	8526860	0	True				
ANR	8527093	EqualityExpression	chunk != NULL		8526860	0		!=			
ANR	8527094	Identifier	chunk		8526860	0					
ANR	8527095	Identifier	NULL		8526860	1					
ANR	8527096	CompoundStatement		63:3:1949:1949	8526860	1					
ANR	8527097	ExpressionStatement	length = chunk -> chunk_length	3252:6:101155:101183	8526860	0	True				
ANR	8527098	AssignmentExpression	length = chunk -> chunk_length		8526860	0		=			
ANR	8527099	Identifier	length		8526860	0					
ANR	8527100	PtrMemberAccess	chunk -> chunk_length		8526860	1					
ANR	8527101	Identifier	chunk		8526860	0					
ANR	8527102	Identifier	chunk_length		8526860	1					
ANR	8527103	ExpressionStatement	type = chunk -> chunk_type	3253:6:101191:101215	8526860	1	True				
ANR	8527104	AssignmentExpression	type = chunk -> chunk_type		8526860	0		=			
ANR	8527105	Identifier	type		8526860	0					
ANR	8527106	PtrMemberAccess	chunk -> chunk_type		8526860	1					
ANR	8527107	Identifier	chunk		8526860	0					
ANR	8527108	Identifier	chunk_type		8526860	1					
ANR	8527109	ElseStatement	else		8526860	0					
ANR	8527110	CompoundStatement		69:3:2036:2036	8526860	0					
ANR	8527111	ExpressionStatement	length = file -> length	3261:6:101390:101411	8526860	0	True				
ANR	8527112	AssignmentExpression	length = file -> length		8526860	0		=			
ANR	8527113	Identifier	length		8526860	0					
ANR	8527114	PtrMemberAccess	file -> length		8526860	1					
ANR	8527115	Identifier	file		8526860	0					
ANR	8527116	Identifier	length		8526860	1					
ANR	8527117	ExpressionStatement	type = file -> type	3262:6:101419:101436	8526860	1	True				
ANR	8527118	AssignmentExpression	type = file -> type		8526860	0		=			
ANR	8527119	Identifier	type		8526860	0					
ANR	8527120	PtrMemberAccess	file -> type		8526860	1					
ANR	8527121	Identifier	file		8526860	0					
ANR	8527122	Identifier	type		8526860	1					
ANR	8527123	DoStatement	do		8526860	7					
ANR	8527124	CompoundStatement		79:6:2263:2276	8526860	0					
ANR	8527125	IdentifierDeclStatement	png_uint_32 b ;	3267:6:101461:101474	8526860	0	True				
ANR	8527126	IdentifierDecl	b		8526860	0					
ANR	8527127	IdentifierDeclType	png_uint_32		8526860	0					
ANR	8527128	Identifier	b		8526860	1					
ANR	8527129	IfStatement	if ( file -> state != STATE_SIGNATURE && chunk == NULL )		8526860	1					
ANR	8527130	Condition	file -> state != STATE_SIGNATURE && chunk == NULL	3279:10:101957:102003	8526860	0	True				
ANR	8527131	AndExpression	file -> state != STATE_SIGNATURE && chunk == NULL		8526860	0		&&			
ANR	8527132	EqualityExpression	file -> state != STATE_SIGNATURE		8526860	0		!=			
ANR	8527133	PtrMemberAccess	file -> state		8526860	0					
ANR	8527134	Identifier	file		8526860	0					
ANR	8527135	Identifier	state		8526860	1					
ANR	8527136	Identifier	STATE_SIGNATURE		8526860	1					
ANR	8527137	EqualityExpression	chunk == NULL		8526860	1		==			
ANR	8527138	Identifier	chunk		8526860	0					
ANR	8527139	Identifier	NULL		8526860	1					
ANR	8527140	CompoundStatement		92:6:2814:2814	8526860	1					
ANR	8527141	ExpressionStatement	assert ( file -> read_count == 8 )	3281:9:102023:102052	8526860	0	True				
ANR	8527142	CallExpression	assert ( file -> read_count == 8 )		8526860	0					
ANR	8527143	Callee	assert		8526860	0					
ANR	8527144	Identifier	assert		8526860	0					
ANR	8527145	ArgumentList	file -> read_count == 8		8526860	1					
ANR	8527146	Argument	file -> read_count == 8		8526860	0					
ANR	8527147	EqualityExpression	file -> read_count == 8		8526860	0		==			
ANR	8527148	PtrMemberAccess	file -> read_count		8526860	0					
ANR	8527149	Identifier	file		8526860	0					
ANR	8527150	Identifier	read_count		8526860	1					
ANR	8527151	PrimaryExpression	8		8526860	1					
ANR	8527152	ExpressionStatement	assert ( file -> idat == NULL )	3282:9:102063:102089	8526860	1	True				
ANR	8527153	CallExpression	assert ( file -> idat == NULL )		8526860	0					
ANR	8527154	Callee	assert		8526860	0					
ANR	8527155	Identifier	assert		8526860	0					
ANR	8527156	ArgumentList	file -> idat == NULL		8526860	1					
ANR	8527157	Argument	file -> idat == NULL		8526860	0					
ANR	8527158	EqualityExpression	file -> idat == NULL		8526860	0		==			
ANR	8527159	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527160	Identifier	file		8526860	0					
ANR	8527161	Identifier	idat		8526860	1					
ANR	8527162	Identifier	NULL		8526860	1					
ANR	8527163	ExpressionStatement	read_chunk ( file )	3283:9:102100:102116	8526860	2	True				
ANR	8527164	CallExpression	read_chunk ( file )		8526860	0					
ANR	8527165	Callee	read_chunk		8526860	0					
ANR	8527166	Identifier	read_chunk		8526860	0					
ANR	8527167	ArgumentList	file		8526860	1					
ANR	8527168	Argument	file		8526860	0					
ANR	8527169	Identifier	file		8526860	0					
ANR	8527170	ExpressionStatement	chunk = file -> chunk	3284:9:102127:102146	8526860	3	True				
ANR	8527171	AssignmentExpression	chunk = file -> chunk		8526860	0		=			
ANR	8527172	Identifier	chunk		8526860	0					
ANR	8527173	PtrMemberAccess	file -> chunk		8526860	1					
ANR	8527174	Identifier	file		8526860	0					
ANR	8527175	Identifier	chunk		8526860	1					
ANR	8527176	ExpressionStatement	assert ( chunk != NULL )	3285:9:102157:102178	8526860	4	True				
ANR	8527177	CallExpression	assert ( chunk != NULL )		8526860	0					
ANR	8527178	Callee	assert		8526860	0					
ANR	8527179	Identifier	assert		8526860	0					
ANR	8527180	ArgumentList	chunk != NULL		8526860	1					
ANR	8527181	Argument	chunk != NULL		8526860	0					
ANR	8527182	EqualityExpression	chunk != NULL		8526860	0		!=			
ANR	8527183	Identifier	chunk		8526860	0					
ANR	8527184	Identifier	NULL		8526860	1					
ANR	8527185	ExpressionStatement	length = chunk -> chunk_length	3288:9:102253:102281	8526860	5	True				
ANR	8527186	AssignmentExpression	length = chunk -> chunk_length		8526860	0		=			
ANR	8527187	Identifier	length		8526860	0					
ANR	8527188	PtrMemberAccess	chunk -> chunk_length		8526860	1					
ANR	8527189	Identifier	chunk		8526860	0					
ANR	8527190	Identifier	chunk_length		8526860	1					
ANR	8527191	ExpressionStatement	type = chunk -> chunk_type	3289:9:102292:102316	8526860	6	True				
ANR	8527192	AssignmentExpression	type = chunk -> chunk_type		8526860	0		=			
ANR	8527193	Identifier	type		8526860	0					
ANR	8527194	PtrMemberAccess	chunk -> chunk_type		8526860	1					
ANR	8527195	Identifier	chunk		8526860	0					
ANR	8527196	Identifier	chunk_type		8526860	1					
ANR	8527197	ExpressionStatement	file -> write_count = 0	3292:9:102376:102397	8526860	7	True				
ANR	8527198	AssignmentExpression	file -> write_count = 0		8526860	0		=			
ANR	8527199	PtrMemberAccess	file -> write_count		8526860	0					
ANR	8527200	Identifier	file		8526860	0					
ANR	8527201	Identifier	write_count		8526860	1					
ANR	8527202	PrimaryExpression	0		8526860	1					
ANR	8527203	SwitchStatement	switch ( file -> write_count )		8526860	2					
ANR	8527204	Condition	file -> write_count	3299:14:102616:102632	8526860	0	True				
ANR	8527205	PtrMemberAccess	file -> write_count		8526860	0					
ANR	8527206	Identifier	file		8526860	0					
ANR	8527207	Identifier	write_count		8526860	1					
ANR	8527208	CompoundStatement		112:6:3443:3443	8526860	1					
ANR	8527209	Label	case 0 :	3301:9:102652:102658	8526860	0	True				
ANR	8527210	ExpressionStatement	b = length >> 24	3301:17:102660:102676	8526860	1	True				
ANR	8527211	AssignmentExpression	b = length >> 24		8526860	0		=			
ANR	8527212	Identifier	b		8526860	0					
ANR	8527213	ShiftExpression	length >> 24		8526860	1		>>			
ANR	8527214	Identifier	length		8526860	0					
ANR	8527215	PrimaryExpression	24		8526860	1					
ANR	8527216	BreakStatement	break ;	3301:35:102678:102683	8526860	2	True				
ANR	8527217	Label	case 1 :	3302:9:102694:102700	8526860	3	True				
ANR	8527218	ExpressionStatement	b = length >> 16	3302:17:102702:102718	8526860	4	True				
ANR	8527219	AssignmentExpression	b = length >> 16		8526860	0		=			
ANR	8527220	Identifier	b		8526860	0					
ANR	8527221	ShiftExpression	length >> 16		8526860	1		>>			
ANR	8527222	Identifier	length		8526860	0					
ANR	8527223	PrimaryExpression	16		8526860	1					
ANR	8527224	BreakStatement	break ;	3302:35:102720:102725	8526860	5	True				
ANR	8527225	Label	case 2 :	3303:9:102736:102742	8526860	6	True				
ANR	8527226	ExpressionStatement	b = length >> 8	3303:17:102744:102760	8526860	7	True				
ANR	8527227	AssignmentExpression	b = length >> 8		8526860	0		=			
ANR	8527228	Identifier	b		8526860	0					
ANR	8527229	ShiftExpression	length >> 8		8526860	1		>>			
ANR	8527230	Identifier	length		8526860	0					
ANR	8527231	PrimaryExpression	8		8526860	1					
ANR	8527232	BreakStatement	break ;	3303:35:102762:102767	8526860	8	True				
ANR	8527233	Label	case 3 :	3304:9:102778:102784	8526860	9	True				
ANR	8527234	ExpressionStatement	b = length	3304:17:102786:102802	8526860	10	True				
ANR	8527235	AssignmentExpression	b = length		8526860	0		=			
ANR	8527236	Identifier	b		8526860	0					
ANR	8527237	Identifier	length		8526860	1					
ANR	8527238	BreakStatement	break ;	3304:35:102804:102809	8526860	11	True				
ANR	8527239	Label	case 4 :	3306:9:102821:102827	8526860	12	True				
ANR	8527240	ExpressionStatement	b = type >> 24	3306:17:102829:102843	8526860	13	True				
ANR	8527241	AssignmentExpression	b = type >> 24		8526860	0		=			
ANR	8527242	Identifier	b		8526860	0					
ANR	8527243	ShiftExpression	type >> 24		8526860	1		>>			
ANR	8527244	Identifier	type		8526860	0					
ANR	8527245	PrimaryExpression	24		8526860	1					
ANR	8527246	BreakStatement	break ;	3306:33:102845:102850	8526860	14	True				
ANR	8527247	Label	case 5 :	3307:9:102861:102867	8526860	15	True				
ANR	8527248	ExpressionStatement	b = type >> 16	3307:17:102869:102883	8526860	16	True				
ANR	8527249	AssignmentExpression	b = type >> 16		8526860	0		=			
ANR	8527250	Identifier	b		8526860	0					
ANR	8527251	ShiftExpression	type >> 16		8526860	1		>>			
ANR	8527252	Identifier	type		8526860	0					
ANR	8527253	PrimaryExpression	16		8526860	1					
ANR	8527254	BreakStatement	break ;	3307:33:102885:102890	8526860	17	True				
ANR	8527255	Label	case 6 :	3308:9:102901:102907	8526860	18	True				
ANR	8527256	ExpressionStatement	b = type >> 8	3308:17:102909:102923	8526860	19	True				
ANR	8527257	AssignmentExpression	b = type >> 8		8526860	0		=			
ANR	8527258	Identifier	b		8526860	0					
ANR	8527259	ShiftExpression	type >> 8		8526860	1		>>			
ANR	8527260	Identifier	type		8526860	0					
ANR	8527261	PrimaryExpression	8		8526860	1					
ANR	8527262	BreakStatement	break ;	3308:33:102925:102930	8526860	20	True				
ANR	8527263	Label	case 7 :	3309:9:102941:102947	8526860	21	True				
ANR	8527264	ExpressionStatement	b = type	3309:17:102949:102963	8526860	22	True				
ANR	8527265	AssignmentExpression	b = type		8526860	0		=			
ANR	8527266	Identifier	b		8526860	0					
ANR	8527267	Identifier	type		8526860	1					
ANR	8527268	BreakStatement	break ;	3309:33:102965:102970	8526860	23	True				
ANR	8527269	Label	case 8 :	3311:9:102982:102988	8526860	24	True				
ANR	8527270	IfStatement	if ( file -> state == STATE_SIGNATURE )		8526860	25					
ANR	8527271	Condition	file -> state == STATE_SIGNATURE	3316:16:103199:103228	8526860	0	True				
ANR	8527272	EqualityExpression	file -> state == STATE_SIGNATURE		8526860	0		==			
ANR	8527273	PtrMemberAccess	file -> state		8526860	0					
ANR	8527274	Identifier	file		8526860	0					
ANR	8527275	Identifier	state		8526860	1					
ANR	8527276	Identifier	STATE_SIGNATURE		8526860	1					
ANR	8527277	CompoundStatement		129:12:4045:4045	8526860	1					
ANR	8527278	ExpressionStatement	assert ( length == sig1 && type == sig2 )	3322:15:103506:103544	8526860	0	True				
ANR	8527279	CallExpression	assert ( length == sig1 && type == sig2 )		8526860	0					
ANR	8527280	Callee	assert		8526860	0					
ANR	8527281	Identifier	assert		8526860	0					
ANR	8527282	ArgumentList	length == sig1 && type == sig2		8526860	1					
ANR	8527283	Argument	length == sig1 && type == sig2		8526860	0					
ANR	8527284	AndExpression	length == sig1 && type == sig2		8526860	0		&&			
ANR	8527285	EqualityExpression	length == sig1		8526860	0		==			
ANR	8527286	Identifier	length		8526860	0					
ANR	8527287	Identifier	sig1		8526860	1					
ANR	8527288	EqualityExpression	type == sig2		8526860	1		==			
ANR	8527289	Identifier	type		8526860	0					
ANR	8527290	Identifier	sig2		8526860	1					
ANR	8527291	ExpressionStatement	file -> read_count = 0	3323:15:103561:103581	8526860	1	True				
ANR	8527292	AssignmentExpression	file -> read_count = 0		8526860	0		=			
ANR	8527293	PtrMemberAccess	file -> read_count		8526860	0					
ANR	8527294	Identifier	file		8526860	0					
ANR	8527295	Identifier	read_count		8526860	1					
ANR	8527296	PrimaryExpression	0		8526860	1					
ANR	8527297	ExpressionStatement	file -> state = STATE_CHUNKS	3324:15:103625:103651	8526860	2	True				
ANR	8527298	AssignmentExpression	file -> state = STATE_CHUNKS		8526860	0		=			
ANR	8527299	PtrMemberAccess	file -> state		8526860	0					
ANR	8527300	Identifier	file		8526860	0					
ANR	8527301	Identifier	state		8526860	1					
ANR	8527302	Identifier	STATE_CHUNKS		8526860	1					
ANR	8527303	ExpressionStatement	"read_callback ( png_ptr , buffer , count )"	3325:15:103694:103731	8526860	3	True				
ANR	8527304	CallExpression	"read_callback ( png_ptr , buffer , count )"		8526860	0					
ANR	8527305	Callee	read_callback		8526860	0					
ANR	8527306	Identifier	read_callback		8526860	0					
ANR	8527307	ArgumentList	png_ptr		8526860	1					
ANR	8527308	Argument	png_ptr		8526860	0					
ANR	8527309	Identifier	png_ptr		8526860	0					
ANR	8527310	Argument	buffer		8526860	1					
ANR	8527311	Identifier	buffer		8526860	0					
ANR	8527312	Argument	count		8526860	2					
ANR	8527313	Identifier	count		8526860	0					
ANR	8527314	ReturnStatement	return ;	3326:15:103748:103754	8526860	4	True				
ANR	8527315	ElseStatement	else		8526860	0					
ANR	8527316	CompoundStatement		142:12:4602:4602	8526860	0					
ANR	8527317	ExpressionStatement	assert ( chunk != NULL )	3331:15:103817:103838	8526860	0	True				
ANR	8527318	CallExpression	assert ( chunk != NULL )		8526860	0					
ANR	8527319	Callee	assert		8526860	0					
ANR	8527320	Identifier	assert		8526860	0					
ANR	8527321	ArgumentList	chunk != NULL		8526860	1					
ANR	8527322	Argument	chunk != NULL		8526860	0					
ANR	8527323	EqualityExpression	chunk != NULL		8526860	0		!=			
ANR	8527324	Identifier	chunk		8526860	0					
ANR	8527325	Identifier	NULL		8526860	1					
ANR	8527326	ExpressionStatement	chunk -> write_crc = crc_init_4 ( type )	3339:15:104242:104277	8526860	1	True				
ANR	8527327	AssignmentExpression	chunk -> write_crc = crc_init_4 ( type )		8526860	0		=			
ANR	8527328	PtrMemberAccess	chunk -> write_crc		8526860	0					
ANR	8527329	Identifier	chunk		8526860	0					
ANR	8527330	Identifier	write_crc		8526860	1					
ANR	8527331	CallExpression	crc_init_4 ( type )		8526860	1					
ANR	8527332	Callee	crc_init_4		8526860	0					
ANR	8527333	Identifier	crc_init_4		8526860	0					
ANR	8527334	ArgumentList	type		8526860	1					
ANR	8527335	Argument	type		8526860	0					
ANR	8527336	Identifier	type		8526860	0					
ANR	8527337	IfStatement	if ( file -> state != STATE_IDAT && length > 0 )		8526860	2					
ANR	8527338	Condition	file -> state != STATE_IDAT && length > 0	3340:19:104298:104336	8526860	0	True				
ANR	8527339	AndExpression	file -> state != STATE_IDAT && length > 0		8526860	0		&&			
ANR	8527340	EqualityExpression	file -> state != STATE_IDAT		8526860	0		!=			
ANR	8527341	PtrMemberAccess	file -> state		8526860	0					
ANR	8527342	Identifier	file		8526860	0					
ANR	8527343	Identifier	state		8526860	1					
ANR	8527344	Identifier	STATE_IDAT		8526860	1					
ANR	8527345	RelationalExpression	length > 0		8526860	1		>			
ANR	8527346	Identifier	length		8526860	0					
ANR	8527347	PrimaryExpression	0		8526860	1					
ANR	8527348	ExpressionStatement	setpos ( chunk )	3341:18:104357:104370	8526860	1	True				
ANR	8527349	CallExpression	setpos ( chunk )		8526860	0					
ANR	8527350	Callee	setpos		8526860	0					
ANR	8527351	Identifier	setpos		8526860	0					
ANR	8527352	ArgumentList	chunk		8526860	1					
ANR	8527353	Argument	chunk		8526860	0					
ANR	8527354	Identifier	chunk		8526860	0					
ANR	8527355	Label	default :	3345:9:104426:104433	8526860	26	True				
ANR	8527356	Identifier	default		8526860	0					
ANR	8527357	ExpressionStatement	assert ( chunk != NULL )	3346:12:104447:104468	8526860	27	True				
ANR	8527358	CallExpression	assert ( chunk != NULL )		8526860	0					
ANR	8527359	Callee	assert		8526860	0					
ANR	8527360	Identifier	assert		8526860	0					
ANR	8527361	ArgumentList	chunk != NULL		8526860	1					
ANR	8527362	Argument	chunk != NULL		8526860	0					
ANR	8527363	EqualityExpression	chunk != NULL		8526860	0		!=			
ANR	8527364	Identifier	chunk		8526860	0					
ANR	8527365	Identifier	NULL		8526860	1					
ANR	8527366	SwitchStatement	switch ( file -> write_count - length )		8526860	28					
ANR	8527367	Condition	file -> write_count - length	3351:20:104664:104689	8526860	0	True				
ANR	8527368	AdditiveExpression	file -> write_count - length		8526860	0		-			
ANR	8527369	PtrMemberAccess	file -> write_count		8526860	0					
ANR	8527370	Identifier	file		8526860	0					
ANR	8527371	Identifier	write_count		8526860	1					
ANR	8527372	Identifier	length		8526860	1					
ANR	8527373	CompoundStatement		164:12:5506:5506	8526860	1					
ANR	8527374	Label	default :	3359:15:105043:105050	8526860	0	True				
ANR	8527375	Identifier	default		8526860	0					
ANR	8527376	IfStatement	if ( file -> state == STATE_IDAT )		8526860	1					
ANR	8527377	Condition	file -> state == STATE_IDAT	3360:22:105074:105098	8526860	0	True				
ANR	8527378	EqualityExpression	file -> state == STATE_IDAT		8526860	0		==			
ANR	8527379	PtrMemberAccess	file -> state		8526860	0					
ANR	8527380	Identifier	file		8526860	0					
ANR	8527381	Identifier	state		8526860	1					
ANR	8527382	Identifier	STATE_IDAT		8526860	1					
ANR	8527383	CompoundStatement		174:21:5944:5974	8526860	1					
ANR	8527384	IdentifierDeclStatement	struct IDAT * idat = file -> idat ;	3362:21:105142:105172	8526860	0	True				
ANR	8527385	IdentifierDecl	* idat = file -> idat		8526860	0					
ANR	8527386	IdentifierDeclType	struct IDAT *		8526860	0					
ANR	8527387	Identifier	idat		8526860	1					
ANR	8527388	AssignmentExpression	* idat = file -> idat		8526860	2		=			
ANR	8527389	Identifier	idat		8526860	0					
ANR	8527390	PtrMemberAccess	file -> idat		8526860	1					
ANR	8527391	Identifier	file		8526860	0					
ANR	8527392	Identifier	idat		8526860	1					
ANR	8527393	ExpressionStatement	assert ( idat != NULL )	3364:21:105196:105216	8526860	1	True				
ANR	8527394	CallExpression	assert ( idat != NULL )		8526860	0					
ANR	8527395	Callee	assert		8526860	0					
ANR	8527396	Identifier	assert		8526860	0					
ANR	8527397	ArgumentList	idat != NULL		8526860	1					
ANR	8527398	Argument	idat != NULL		8526860	0					
ANR	8527399	EqualityExpression	idat != NULL		8526860	0		!=			
ANR	8527400	Identifier	idat		8526860	0					
ANR	8527401	Identifier	NULL		8526860	1					
ANR	8527402	WhileStatement	while ( idat -> idat_index >= idat -> idat_length )		8526860	2					
ANR	8527403	Condition	idat -> idat_index >= idat -> idat_length	3372:28:105645:105681	8526860	0	True				
ANR	8527404	RelationalExpression	idat -> idat_index >= idat -> idat_length		8526860	0		>=			
ANR	8527405	PtrMemberAccess	idat -> idat_index		8526860	0					
ANR	8527406	Identifier	idat		8526860	0					
ANR	8527407	Identifier	idat_index		8526860	1					
ANR	8527408	PtrMemberAccess	idat -> idat_length		8526860	1					
ANR	8527409	Identifier	idat		8526860	0					
ANR	8527410	Identifier	idat_length		8526860	1					
ANR	8527411	CompoundStatement		187:24:6581:6619	8526860	1					
ANR	8527412	IdentifierDeclStatement	struct IDAT_list * cur = idat -> idat_cur ;	3375:24:105779:105817	8526860	0	True				
ANR	8527413	IdentifierDecl	* cur = idat -> idat_cur		8526860	0					
ANR	8527414	IdentifierDeclType	struct IDAT_list *		8526860	0					
ANR	8527415	Identifier	cur		8526860	1					
ANR	8527416	AssignmentExpression	* cur = idat -> idat_cur		8526860	2		=			
ANR	8527417	Identifier	cur		8526860	0					
ANR	8527418	PtrMemberAccess	idat -> idat_cur		8526860	1					
ANR	8527419	Identifier	idat		8526860	0					
ANR	8527420	Identifier	idat_cur		8526860	1					
ANR	8527421	ExpressionStatement	assert ( idat -> idat_index == idat -> idat_length )	3377:24:105844:105889	8526860	1	True				
ANR	8527422	CallExpression	assert ( idat -> idat_index == idat -> idat_length )		8526860	0					
ANR	8527423	Callee	assert		8526860	0					
ANR	8527424	Identifier	assert		8526860	0					
ANR	8527425	ArgumentList	idat -> idat_index == idat -> idat_length		8526860	1					
ANR	8527426	Argument	idat -> idat_index == idat -> idat_length		8526860	0					
ANR	8527427	EqualityExpression	idat -> idat_index == idat -> idat_length		8526860	0		==			
ANR	8527428	PtrMemberAccess	idat -> idat_index		8526860	0					
ANR	8527429	Identifier	idat		8526860	0					
ANR	8527430	Identifier	idat_index		8526860	1					
ANR	8527431	PtrMemberAccess	idat -> idat_length		8526860	1					
ANR	8527432	Identifier	idat		8526860	0					
ANR	8527433	Identifier	idat_length		8526860	1					
ANR	8527434	ExpressionStatement	assert ( cur != NULL && cur -> count > 0 )	3378:24:105915:105952	8526860	2	True				
ANR	8527435	CallExpression	assert ( cur != NULL && cur -> count > 0 )		8526860	0					
ANR	8527436	Callee	assert		8526860	0					
ANR	8527437	Identifier	assert		8526860	0					
ANR	8527438	ArgumentList	cur != NULL && cur -> count > 0		8526860	1					
ANR	8527439	Argument	cur != NULL && cur -> count > 0		8526860	0					
ANR	8527440	AndExpression	cur != NULL && cur -> count > 0		8526860	0		&&			
ANR	8527441	EqualityExpression	cur != NULL		8526860	0		!=			
ANR	8527442	Identifier	cur		8526860	0					
ANR	8527443	Identifier	NULL		8526860	1					
ANR	8527444	RelationalExpression	cur -> count > 0		8526860	1		>			
ANR	8527445	PtrMemberAccess	cur -> count		8526860	0					
ANR	8527446	Identifier	cur		8526860	0					
ANR	8527447	Identifier	count		8526860	1					
ANR	8527448	PrimaryExpression	0		8526860	1					
ANR	8527449	IfStatement	if ( ++ ( idat -> idat_count ) >= cur -> count )		8526860	3					
ANR	8527450	Condition	++ ( idat -> idat_count ) >= cur -> count	3381:28:106064:106097	8526860	0	True				
ANR	8527451	RelationalExpression	++ ( idat -> idat_count ) >= cur -> count		8526860	0		>=			
ANR	8527452	UnaryExpression	++ ( idat -> idat_count )		8526860	0					
ANR	8527453	IncDec	++		8526860	0					
ANR	8527454	PtrMemberAccess	idat -> idat_count		8526860	1					
ANR	8527455	Identifier	idat		8526860	0					
ANR	8527456	Identifier	idat_count		8526860	1					
ANR	8527457	PtrMemberAccess	cur -> count		8526860	1					
ANR	8527458	Identifier	cur		8526860	0					
ANR	8527459	Identifier	count		8526860	1					
ANR	8527460	CompoundStatement		194:24:6926:6926	8526860	1					
ANR	8527461	ExpressionStatement	assert ( idat -> idat_count == cur -> count )	3383:27:106153:106191	8526860	0	True				
ANR	8527462	CallExpression	assert ( idat -> idat_count == cur -> count )		8526860	0					
ANR	8527463	Callee	assert		8526860	0					
ANR	8527464	Identifier	assert		8526860	0					
ANR	8527465	ArgumentList	idat -> idat_count == cur -> count		8526860	1					
ANR	8527466	Argument	idat -> idat_count == cur -> count		8526860	0					
ANR	8527467	EqualityExpression	idat -> idat_count == cur -> count		8526860	0		==			
ANR	8527468	PtrMemberAccess	idat -> idat_count		8526860	0					
ANR	8527469	Identifier	idat		8526860	0					
ANR	8527470	Identifier	idat_count		8526860	1					
ANR	8527471	PtrMemberAccess	cur -> count		8526860	1					
ANR	8527472	Identifier	cur		8526860	0					
ANR	8527473	Identifier	count		8526860	1					
ANR	8527474	ExpressionStatement	cur = cur -> next	3386:27:106285:106300	8526860	1	True				
ANR	8527475	AssignmentExpression	cur = cur -> next		8526860	0		=			
ANR	8527476	Identifier	cur		8526860	0					
ANR	8527477	PtrMemberAccess	cur -> next		8526860	1					
ANR	8527478	Identifier	cur		8526860	0					
ANR	8527479	Identifier	next		8526860	1					
ANR	8527480	IfStatement	if ( cur == NULL || cur -> count == 0 )		8526860	2					
ANR	8527481	Condition	cur == NULL || cur -> count == 0	3391:31:106503:106532	8526860	0	True				
ANR	8527482	OrExpression	cur == NULL || cur -> count == 0		8526860	0		||			
ANR	8527483	EqualityExpression	cur == NULL		8526860	0		==			
ANR	8527484	Identifier	cur		8526860	0					
ANR	8527485	Identifier	NULL		8526860	1					
ANR	8527486	EqualityExpression	cur -> count == 0		8526860	1		==			
ANR	8527487	PtrMemberAccess	cur -> count		8526860	0					
ANR	8527488	Identifier	cur		8526860	0					
ANR	8527489	Identifier	count		8526860	1					
ANR	8527490	PrimaryExpression	0		8526860	1					
ANR	8527491	ExpressionStatement	"stop ( file , UNEXPECTED_ERROR_CODE , ""read beyond end of IDAT"" )"	3392:30:106565:106658	8526860	1	True				
ANR	8527492	CallExpression	"stop ( file , UNEXPECTED_ERROR_CODE , ""read beyond end of IDAT"" )"		8526860	0					
ANR	8527493	Callee	stop		8526860	0					
ANR	8527494	Identifier	stop		8526860	0					
ANR	8527495	ArgumentList	file		8526860	1					
ANR	8527496	Argument	file		8526860	0					
ANR	8527497	Identifier	file		8526860	0					
ANR	8527498	Argument	UNEXPECTED_ERROR_CODE		8526860	1					
ANR	8527499	Identifier	UNEXPECTED_ERROR_CODE		8526860	0					
ANR	8527500	Argument	"""read beyond end of IDAT"""		8526860	2					
ANR	8527501	PrimaryExpression	"""read beyond end of IDAT"""		8526860	0					
ANR	8527502	ExpressionStatement	idat -> idat_count = 0	3395:27:106688:106708	8526860	3	True				
ANR	8527503	AssignmentExpression	idat -> idat_count = 0		8526860	0		=			
ANR	8527504	PtrMemberAccess	idat -> idat_count		8526860	0					
ANR	8527505	Identifier	idat		8526860	0					
ANR	8527506	Identifier	idat_count		8526860	1					
ANR	8527507	PrimaryExpression	0		8526860	1					
ANR	8527508	ExpressionStatement	idat -> idat_cur = cur	3396:27:106737:106757	8526860	4	True				
ANR	8527509	AssignmentExpression	idat -> idat_cur = cur		8526860	0		=			
ANR	8527510	PtrMemberAccess	idat -> idat_cur		8526860	0					
ANR	8527511	Identifier	idat		8526860	0					
ANR	8527512	Identifier	idat_cur		8526860	1					
ANR	8527513	Identifier	cur		8526860	1					
ANR	8527514	ExpressionStatement	idat -> idat_index = 0	3399:24:106810:106830	8526860	4	True				
ANR	8527515	AssignmentExpression	idat -> idat_index = 0		8526860	0		=			
ANR	8527516	PtrMemberAccess	idat -> idat_index		8526860	0					
ANR	8527517	Identifier	idat		8526860	0					
ANR	8527518	Identifier	idat_index		8526860	1					
ANR	8527519	PrimaryExpression	0		8526860	1					
ANR	8527520	ExpressionStatement	idat -> idat_length = cur -> lengths [ idat -> idat_count ]	3403:24:107006:107056	8526860	5	True				
ANR	8527521	AssignmentExpression	idat -> idat_length = cur -> lengths [ idat -> idat_count ]		8526860	0		=			
ANR	8527522	PtrMemberAccess	idat -> idat_length		8526860	0					
ANR	8527523	Identifier	idat		8526860	0					
ANR	8527524	Identifier	idat_length		8526860	1					
ANR	8527525	ArrayIndexing	cur -> lengths [ idat -> idat_count ]		8526860	1					
ANR	8527526	PtrMemberAccess	cur -> lengths		8526860	0					
ANR	8527527	Identifier	cur		8526860	0					
ANR	8527528	Identifier	lengths		8526860	1					
ANR	8527529	PtrMemberAccess	idat -> idat_count		8526860	1					
ANR	8527530	Identifier	idat		8526860	0					
ANR	8527531	Identifier	idat_count		8526860	1					
ANR	8527532	ExpressionStatement	skip_12 ( file )	3406:24:107154:107167	8526860	6	True				
ANR	8527533	CallExpression	skip_12 ( file )		8526860	0					
ANR	8527534	Callee	skip_12		8526860	0					
ANR	8527535	Identifier	skip_12		8526860	0					
ANR	8527536	ArgumentList	file		8526860	1					
ANR	8527537	Argument	file		8526860	0					
ANR	8527538	Identifier	file		8526860	0					
ANR	8527539	ExpressionStatement	++ ( idat -> idat_index )	3413:21:107437:107457	8526860	3	True				
ANR	8527540	UnaryExpression	++ ( idat -> idat_index )		8526860	0					
ANR	8527541	IncDec	++		8526860	0					
ANR	8527542	PtrMemberAccess	idat -> idat_index		8526860	1					
ANR	8527543	Identifier	idat		8526860	0					
ANR	8527544	Identifier	idat_index		8526860	1					
ANR	8527545	ExpressionStatement	b = reread_byte ( file )	3417:18:107553:107574	8526860	2	True				
ANR	8527546	AssignmentExpression	b = reread_byte ( file )		8526860	0		=			
ANR	8527547	Identifier	b		8526860	0					
ANR	8527548	CallExpression	reread_byte ( file )		8526860	1					
ANR	8527549	Callee	reread_byte		8526860	0					
ANR	8527550	Identifier	reread_byte		8526860	0					
ANR	8527551	ArgumentList	file		8526860	1					
ANR	8527552	Argument	file		8526860	0					
ANR	8527553	Identifier	file		8526860	0					
ANR	8527554	IfStatement	if ( chunk -> rewrite_length > 0 )		8526860	3					
ANR	8527555	Condition	chunk -> rewrite_length > 0	3420:22:107670:107694	8526860	0	True				
ANR	8527556	RelationalExpression	chunk -> rewrite_length > 0		8526860	0		>			
ANR	8527557	PtrMemberAccess	chunk -> rewrite_length		8526860	0					
ANR	8527558	Identifier	chunk		8526860	0					
ANR	8527559	Identifier	rewrite_length		8526860	1					
ANR	8527560	PrimaryExpression	0		8526860	1					
ANR	8527561	CompoundStatement		233:18:8517:8517	8526860	1					
ANR	8527562	IfStatement	if ( chunk -> rewrite_offset > 0 )		8526860	0					
ANR	8527563	Condition	chunk -> rewrite_offset > 0	3422:25:107742:107766	8526860	0	True				
ANR	8527564	RelationalExpression	chunk -> rewrite_offset > 0		8526860	0		>			
ANR	8527565	PtrMemberAccess	chunk -> rewrite_offset		8526860	0					
ANR	8527566	Identifier	chunk		8526860	0					
ANR	8527567	Identifier	rewrite_offset		8526860	1					
ANR	8527568	PrimaryExpression	0		8526860	1					
ANR	8527569	ExpressionStatement	-- ( chunk -> rewrite_offset )	3423:24:107793:107818	8526860	1	True				
ANR	8527570	UnaryExpression	-- ( chunk -> rewrite_offset )		8526860	0					
ANR	8527571	IncDec	--		8526860	0					
ANR	8527572	PtrMemberAccess	chunk -> rewrite_offset		8526860	1					
ANR	8527573	Identifier	chunk		8526860	0					
ANR	8527574	Identifier	rewrite_offset		8526860	1					
ANR	8527575	ElseStatement	else		8526860	0					
ANR	8527576	CompoundStatement		238:21:8670:8670	8526860	0					
ANR	8527577	ExpressionStatement	b = chunk -> rewrite_buffer [ 0 ]	3427:24:107894:107922	8526860	0	True				
ANR	8527578	AssignmentExpression	b = chunk -> rewrite_buffer [ 0 ]		8526860	0		=			
ANR	8527579	Identifier	b		8526860	0					
ANR	8527580	ArrayIndexing	chunk -> rewrite_buffer [ 0 ]		8526860	1					
ANR	8527581	PtrMemberAccess	chunk -> rewrite_buffer		8526860	0					
ANR	8527582	Identifier	chunk		8526860	0					
ANR	8527583	Identifier	rewrite_buffer		8526860	1					
ANR	8527584	PrimaryExpression	0		8526860	1					
ANR	8527585	ExpressionStatement	"memmove ( chunk -> rewrite_buffer , chunk -> rewrite_buffer + 1 , ( sizeof chunk -> rewrite_buffer ) - ( sizeof chunk -> rewrite_buffer [ 0 ] ) )"	3428:24:107948:108127	8526860	1	True				
ANR	8527586	CallExpression	"memmove ( chunk -> rewrite_buffer , chunk -> rewrite_buffer + 1 , ( sizeof chunk -> rewrite_buffer ) - ( sizeof chunk -> rewrite_buffer [ 0 ] ) )"		8526860	0					
ANR	8527587	Callee	memmove		8526860	0					
ANR	8527588	Identifier	memmove		8526860	0					
ANR	8527589	ArgumentList	chunk -> rewrite_buffer		8526860	1					
ANR	8527590	Argument	chunk -> rewrite_buffer		8526860	0					
ANR	8527591	PtrMemberAccess	chunk -> rewrite_buffer		8526860	0					
ANR	8527592	Identifier	chunk		8526860	0					
ANR	8527593	Identifier	rewrite_buffer		8526860	1					
ANR	8527594	Argument	chunk -> rewrite_buffer + 1		8526860	1					
ANR	8527595	AdditiveExpression	chunk -> rewrite_buffer + 1		8526860	0		+			
ANR	8527596	PtrMemberAccess	chunk -> rewrite_buffer		8526860	0					
ANR	8527597	Identifier	chunk		8526860	0					
ANR	8527598	Identifier	rewrite_buffer		8526860	1					
ANR	8527599	PrimaryExpression	1		8526860	1					
ANR	8527600	Argument	( sizeof chunk -> rewrite_buffer ) - ( sizeof chunk -> rewrite_buffer [ 0 ] )		8526860	2					
ANR	8527601	AdditiveExpression	( sizeof chunk -> rewrite_buffer ) - ( sizeof chunk -> rewrite_buffer [ 0 ] )		8526860	0		-			
ANR	8527602	SizeofExpression	sizeof chunk -> rewrite_buffer		8526860	0					
ANR	8527603	Sizeof	sizeof		8526860	0					
ANR	8527604	PtrMemberAccess	chunk -> rewrite_buffer		8526860	1					
ANR	8527605	Identifier	chunk		8526860	0					
ANR	8527606	Identifier	rewrite_buffer		8526860	1					
ANR	8527607	SizeofExpression	sizeof chunk -> rewrite_buffer [ 0 ]		8526860	1					
ANR	8527608	Sizeof	sizeof		8526860	0					
ANR	8527609	ArrayIndexing	chunk -> rewrite_buffer [ 0 ]		8526860	1					
ANR	8527610	PtrMemberAccess	chunk -> rewrite_buffer		8526860	0					
ANR	8527611	Identifier	chunk		8526860	0					
ANR	8527612	Identifier	rewrite_buffer		8526860	1					
ANR	8527613	PrimaryExpression	0		8526860	1					
ANR	8527614	ExpressionStatement	-- ( chunk -> rewrite_length )	3432:24:108154:108179	8526860	2	True				
ANR	8527615	UnaryExpression	-- ( chunk -> rewrite_length )		8526860	0					
ANR	8527616	IncDec	--		8526860	0					
ANR	8527617	PtrMemberAccess	chunk -> rewrite_length		8526860	1					
ANR	8527618	Identifier	chunk		8526860	0					
ANR	8527619	Identifier	rewrite_length		8526860	1					
ANR	8527620	ExpressionStatement	"chunk -> write_crc = crc_one_byte ( chunk -> write_crc , b )"	3436:18:108243:108295	8526860	4	True				
ANR	8527621	AssignmentExpression	"chunk -> write_crc = crc_one_byte ( chunk -> write_crc , b )"		8526860	0		=			
ANR	8527622	PtrMemberAccess	chunk -> write_crc		8526860	0					
ANR	8527623	Identifier	chunk		8526860	0					
ANR	8527624	Identifier	write_crc		8526860	1					
ANR	8527625	CallExpression	"crc_one_byte ( chunk -> write_crc , b )"		8526860	1					
ANR	8527626	Callee	crc_one_byte		8526860	0					
ANR	8527627	Identifier	crc_one_byte		8526860	0					
ANR	8527628	ArgumentList	chunk -> write_crc		8526860	1					
ANR	8527629	Argument	chunk -> write_crc		8526860	0					
ANR	8527630	PtrMemberAccess	chunk -> write_crc		8526860	0					
ANR	8527631	Identifier	chunk		8526860	0					
ANR	8527632	Identifier	write_crc		8526860	1					
ANR	8527633	Argument	b		8526860	1					
ANR	8527634	Identifier	b		8526860	0					
ANR	8527635	BreakStatement	break ;	3437:18:108315:108320	8526860	5	True				
ANR	8527636	Label	case 8 :	3445:15:108567:108574	8526860	6	True				
ANR	8527637	ExpressionStatement	b = chunk -> write_crc >> 24	3445:24:108576:108602	8526860	7	True				
ANR	8527638	AssignmentExpression	b = chunk -> write_crc >> 24		8526860	0		=			
ANR	8527639	Identifier	b		8526860	0					
ANR	8527640	ShiftExpression	chunk -> write_crc >> 24		8526860	1		>>			
ANR	8527641	PtrMemberAccess	chunk -> write_crc		8526860	0					
ANR	8527642	Identifier	chunk		8526860	0					
ANR	8527643	Identifier	write_crc		8526860	1					
ANR	8527644	PrimaryExpression	24		8526860	1					
ANR	8527645	GotoStatement	goto write_crc ;	3445:52:108604:108618	8526860	8	True				
ANR	8527646	Identifier	write_crc		8526860	0					
ANR	8527647	Label	case 9 :	3446:15:108635:108642	8526860	9	True				
ANR	8527648	ExpressionStatement	b = chunk -> write_crc >> 16	3446:24:108644:108670	8526860	10	True				
ANR	8527649	AssignmentExpression	b = chunk -> write_crc >> 16		8526860	0		=			
ANR	8527650	Identifier	b		8526860	0					
ANR	8527651	ShiftExpression	chunk -> write_crc >> 16		8526860	1		>>			
ANR	8527652	PtrMemberAccess	chunk -> write_crc		8526860	0					
ANR	8527653	Identifier	chunk		8526860	0					
ANR	8527654	Identifier	write_crc		8526860	1					
ANR	8527655	PrimaryExpression	16		8526860	1					
ANR	8527656	GotoStatement	goto write_crc ;	3446:52:108672:108686	8526860	11	True				
ANR	8527657	Identifier	write_crc		8526860	0					
ANR	8527658	Label	case 10 :	3447:15:108703:108710	8526860	12	True				
ANR	8527659	ExpressionStatement	b = chunk -> write_crc >> 8	3447:24:108712:108738	8526860	13	True				
ANR	8527660	AssignmentExpression	b = chunk -> write_crc >> 8		8526860	0		=			
ANR	8527661	Identifier	b		8526860	0					
ANR	8527662	ShiftExpression	chunk -> write_crc >> 8		8526860	1		>>			
ANR	8527663	PtrMemberAccess	chunk -> write_crc		8526860	0					
ANR	8527664	Identifier	chunk		8526860	0					
ANR	8527665	Identifier	write_crc		8526860	1					
ANR	8527666	PrimaryExpression	8		8526860	1					
ANR	8527667	GotoStatement	goto write_crc ;	3447:52:108740:108754	8526860	14	True				
ANR	8527668	Identifier	write_crc		8526860	0					
ANR	8527669	Label	case 11 :	3448:15:108771:108778	8526860	15	True				
ANR	8527670	ExpressionStatement	b = chunk -> write_crc	3450:18:108867:108887	8526860	16	True				
ANR	8527671	AssignmentExpression	b = chunk -> write_crc		8526860	0		=			
ANR	8527672	Identifier	b		8526860	0					
ANR	8527673	PtrMemberAccess	chunk -> write_crc		8526860	1					
ANR	8527674	Identifier	chunk		8526860	0					
ANR	8527675	Identifier	write_crc		8526860	1					
ANR	8527676	IfStatement	if ( file -> global -> verbose > 2 )		8526860	17					
ANR	8527677	Condition	file -> global -> verbose > 2	3452:22:108912:108936	8526860	0	True				
ANR	8527678	RelationalExpression	file -> global -> verbose > 2		8526860	0		>			
ANR	8527679	PtrMemberAccess	file -> global -> verbose		8526860	0					
ANR	8527680	PtrMemberAccess	file -> global		8526860	0					
ANR	8527681	Identifier	file		8526860	0					
ANR	8527682	Identifier	global		8526860	1					
ANR	8527683	Identifier	verbose		8526860	1					
ANR	8527684	PrimaryExpression	2		8526860	1					
ANR	8527685	CompoundStatement		265:18:9759:9759	8526860	1					
ANR	8527686	ExpressionStatement	"fputs ( ""   "" , stderr )"	3454:21:108980:109000	8526860	0	True				
ANR	8527687	CallExpression	"fputs ( ""   "" , stderr )"		8526860	0					
ANR	8527688	Callee	fputs		8526860	0					
ANR	8527689	Identifier	fputs		8526860	0					
ANR	8527690	ArgumentList	"""   """		8526860	1					
ANR	8527691	Argument	"""   """		8526860	0					
ANR	8527692	PrimaryExpression	"""   """		8526860	0					
ANR	8527693	Argument	stderr		8526860	1					
ANR	8527694	Identifier	stderr		8526860	0					
ANR	8527695	ExpressionStatement	"type_name ( type , stderr )"	3455:21:109023:109046	8526860	1	True				
ANR	8527696	CallExpression	"type_name ( type , stderr )"		8526860	0					
ANR	8527697	Callee	type_name		8526860	0					
ANR	8527698	Identifier	type_name		8526860	0					
ANR	8527699	ArgumentList	type		8526860	1					
ANR	8527700	Argument	type		8526860	0					
ANR	8527701	Identifier	type		8526860	0					
ANR	8527702	Argument	stderr		8526860	1					
ANR	8527703	Identifier	stderr		8526860	0					
ANR	8527704	ExpressionStatement	"fprintf ( stderr , "" %lu 0x%.8x\\n"" , ( unsigned long ) length , chunk -> write_crc ^ 0xffffffff )"	3456:21:109069:109179	8526860	2	True				
ANR	8527705	CallExpression	"fprintf ( stderr , "" %lu 0x%.8x\\n"" , ( unsigned long ) length , chunk -> write_crc ^ 0xffffffff )"		8526860	0					
ANR	8527706	Callee	fprintf		8526860	0					
ANR	8527707	Identifier	fprintf		8526860	0					
ANR	8527708	ArgumentList	stderr		8526860	1					
ANR	8527709	Argument	stderr		8526860	0					
ANR	8527710	Identifier	stderr		8526860	0					
ANR	8527711	Argument	""" %lu 0x%.8x\\n"""		8526860	1					
ANR	8527712	PrimaryExpression	""" %lu 0x%.8x\\n"""		8526860	0					
ANR	8527713	Argument	( unsigned long ) length		8526860	2					
ANR	8527714	CastExpression	( unsigned long ) length		8526860	0					
ANR	8527715	CastTarget	unsigned long		8526860	0					
ANR	8527716	Identifier	length		8526860	1					
ANR	8527717	Argument	chunk -> write_crc ^ 0xffffffff		8526860	3					
ANR	8527718	ExclusiveOrExpression	chunk -> write_crc ^ 0xffffffff		8526860	0		^			
ANR	8527719	PtrMemberAccess	chunk -> write_crc		8526860	0					
ANR	8527720	Identifier	chunk		8526860	0					
ANR	8527721	Identifier	write_crc		8526860	1					
ANR	8527722	PrimaryExpression	0xffffffff		8526860	1					
ANR	8527723	IfStatement	if ( file -> state == STATE_IDAT && ( file -> idat -> idat_index < file -> idat -> idat_length || 1 + file -> idat -> idat_count < file -> idat -> idat_cur -> count || file -> idat -> idat_cur != file -> idat -> idat_list_tail ) )		8526860	18					
ANR	8527724	Condition	file -> state == STATE_IDAT && ( file -> idat -> idat_index < file -> idat -> idat_length || 1 + file -> idat -> idat_count < file -> idat -> idat_cur -> count || file -> idat -> idat_cur != file -> idat -> idat_list_tail )	3467:22:109717:109972	8526860	0	True				
ANR	8527725	AndExpression	file -> state == STATE_IDAT && ( file -> idat -> idat_index < file -> idat -> idat_length || 1 + file -> idat -> idat_count < file -> idat -> idat_cur -> count || file -> idat -> idat_cur != file -> idat -> idat_list_tail )		8526860	0		&&			
ANR	8527726	EqualityExpression	file -> state == STATE_IDAT		8526860	0		==			
ANR	8527727	PtrMemberAccess	file -> state		8526860	0					
ANR	8527728	Identifier	file		8526860	0					
ANR	8527729	Identifier	state		8526860	1					
ANR	8527730	Identifier	STATE_IDAT		8526860	1					
ANR	8527731	OrExpression	file -> idat -> idat_index < file -> idat -> idat_length || 1 + file -> idat -> idat_count < file -> idat -> idat_cur -> count || file -> idat -> idat_cur != file -> idat -> idat_list_tail		8526860	1		||			
ANR	8527732	RelationalExpression	file -> idat -> idat_index < file -> idat -> idat_length		8526860	0		<			
ANR	8527733	PtrMemberAccess	file -> idat -> idat_index		8526860	0					
ANR	8527734	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527735	Identifier	file		8526860	0					
ANR	8527736	Identifier	idat		8526860	1					
ANR	8527737	Identifier	idat_index		8526860	1					
ANR	8527738	PtrMemberAccess	file -> idat -> idat_length		8526860	1					
ANR	8527739	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527740	Identifier	file		8526860	0					
ANR	8527741	Identifier	idat		8526860	1					
ANR	8527742	Identifier	idat_length		8526860	1					
ANR	8527743	OrExpression	1 + file -> idat -> idat_count < file -> idat -> idat_cur -> count || file -> idat -> idat_cur != file -> idat -> idat_list_tail		8526860	1		||			
ANR	8527744	RelationalExpression	1 + file -> idat -> idat_count < file -> idat -> idat_cur -> count		8526860	0		<			
ANR	8527745	AdditiveExpression	1 + file -> idat -> idat_count		8526860	0		+			
ANR	8527746	PrimaryExpression	1		8526860	0					
ANR	8527747	PtrMemberAccess	file -> idat -> idat_count		8526860	1					
ANR	8527748	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527749	Identifier	file		8526860	0					
ANR	8527750	Identifier	idat		8526860	1					
ANR	8527751	Identifier	idat_count		8526860	1					
ANR	8527752	PtrMemberAccess	file -> idat -> idat_cur -> count		8526860	1					
ANR	8527753	PtrMemberAccess	file -> idat -> idat_cur		8526860	0					
ANR	8527754	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527755	Identifier	file		8526860	0					
ANR	8527756	Identifier	idat		8526860	1					
ANR	8527757	Identifier	idat_cur		8526860	1					
ANR	8527758	Identifier	count		8526860	1					
ANR	8527759	EqualityExpression	file -> idat -> idat_cur != file -> idat -> idat_list_tail		8526860	1		!=			
ANR	8527760	PtrMemberAccess	file -> idat -> idat_cur		8526860	0					
ANR	8527761	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527762	Identifier	file		8526860	0					
ANR	8527763	Identifier	idat		8526860	1					
ANR	8527764	Identifier	idat_cur		8526860	1					
ANR	8527765	PtrMemberAccess	file -> idat -> idat_list_tail		8526860	1					
ANR	8527766	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527767	Identifier	file		8526860	0					
ANR	8527768	Identifier	idat		8526860	1					
ANR	8527769	Identifier	idat_list_tail		8526860	1					
ANR	8527770	CompoundStatement		283:18:10795:10795	8526860	1					
ANR	8527771	ExpressionStatement	"length = chunk -> chunk_length = rechunk_length ( file -> idat , 0 )"	3475:21:110170:110262	8526860	0	True				
ANR	8527772	AssignmentExpression	"length = chunk -> chunk_length = rechunk_length ( file -> idat , 0 )"		8526860	0		=			
ANR	8527773	Identifier	length		8526860	0					
ANR	8527774	AssignmentExpression	"chunk -> chunk_length = rechunk_length ( file -> idat , 0 )"		8526860	1		=			
ANR	8527775	PtrMemberAccess	chunk -> chunk_length		8526860	0					
ANR	8527776	Identifier	chunk		8526860	0					
ANR	8527777	Identifier	chunk_length		8526860	1					
ANR	8527778	CallExpression	"rechunk_length ( file -> idat , 0 )"		8526860	1					
ANR	8527779	Callee	rechunk_length		8526860	0					
ANR	8527780	Identifier	rechunk_length		8526860	0					
ANR	8527781	ArgumentList	file -> idat		8526860	1					
ANR	8527782	Argument	file -> idat		8526860	0					
ANR	8527783	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527784	Identifier	file		8526860	0					
ANR	8527785	Identifier	idat		8526860	1					
ANR	8527786	Argument	0		8526860	1					
ANR	8527787	PrimaryExpression	0		8526860	0					
ANR	8527788	ExpressionStatement	assert ( type == png_IDAT )	3477:21:110285:110309	8526860	1	True				
ANR	8527789	CallExpression	assert ( type == png_IDAT )		8526860	0					
ANR	8527790	Callee	assert		8526860	0					
ANR	8527791	Identifier	assert		8526860	0					
ANR	8527792	ArgumentList	type == png_IDAT		8526860	1					
ANR	8527793	Argument	type == png_IDAT		8526860	0					
ANR	8527794	EqualityExpression	type == png_IDAT		8526860	0		==			
ANR	8527795	Identifier	type		8526860	0					
ANR	8527796	Identifier	png_IDAT		8526860	1					
ANR	8527797	ExpressionStatement	file -> write_count = 0	3478:21:110332:110353	8526860	2	True				
ANR	8527798	AssignmentExpression	file -> write_count = 0		8526860	0		=			
ANR	8527799	PtrMemberAccess	file -> write_count		8526860	0					
ANR	8527800	Identifier	file		8526860	0					
ANR	8527801	Identifier	write_count		8526860	1					
ANR	8527802	PrimaryExpression	0		8526860	1					
ANR	8527803	ExpressionStatement	-- ( file -> write_count )	3479:21:110400:110421	8526860	3	True				
ANR	8527804	UnaryExpression	-- ( file -> write_count )		8526860	0					
ANR	8527805	IncDec	--		8526860	0					
ANR	8527806	PtrMemberAccess	file -> write_count		8526860	1					
ANR	8527807	Identifier	file		8526860	0					
ANR	8527808	Identifier	write_count		8526860	1					
ANR	8527809	ElseStatement	else		8526860	0					
ANR	8527810	CompoundStatement		295:18:11322:11322	8526860	0					
ANR	8527811	IfStatement	if ( chunk -> rewrite_length > 0 || chunk -> rewrite_offset > 0 )		8526860	0					
ANR	8527812	Condition	chunk -> rewrite_length > 0 || chunk -> rewrite_offset > 0	3487:25:110733:110786	8526860	0	True				
ANR	8527813	OrExpression	chunk -> rewrite_length > 0 || chunk -> rewrite_offset > 0		8526860	0		||			
ANR	8527814	RelationalExpression	chunk -> rewrite_length > 0		8526860	0		>			
ANR	8527815	PtrMemberAccess	chunk -> rewrite_length		8526860	0					
ANR	8527816	Identifier	chunk		8526860	0					
ANR	8527817	Identifier	rewrite_length		8526860	1					
ANR	8527818	PrimaryExpression	0		8526860	1					
ANR	8527819	RelationalExpression	chunk -> rewrite_offset > 0		8526860	1		>			
ANR	8527820	PtrMemberAccess	chunk -> rewrite_offset		8526860	0					
ANR	8527821	Identifier	chunk		8526860	0					
ANR	8527822	Identifier	rewrite_offset		8526860	1					
ANR	8527823	PrimaryExpression	0		8526860	1					
ANR	8527824	ExpressionStatement	"stop ( file , UNEXPECTED_ERROR_CODE , ""pending rewrite"" )"	3488:24:110813:110865	8526860	1	True				
ANR	8527825	CallExpression	"stop ( file , UNEXPECTED_ERROR_CODE , ""pending rewrite"" )"		8526860	0					
ANR	8527826	Callee	stop		8526860	0					
ANR	8527827	Identifier	stop		8526860	0					
ANR	8527828	ArgumentList	file		8526860	1					
ANR	8527829	Argument	file		8526860	0					
ANR	8527830	Identifier	file		8526860	0					
ANR	8527831	Argument	UNEXPECTED_ERROR_CODE		8526860	1					
ANR	8527832	Identifier	UNEXPECTED_ERROR_CODE		8526860	0					
ANR	8527833	Argument	"""pending rewrite"""		8526860	2					
ANR	8527834	PrimaryExpression	"""pending rewrite"""		8526860	0					
ANR	8527835	ExpressionStatement	file -> read_count = 8	3494:21:111130:111150	8526860	1	True				
ANR	8527836	AssignmentExpression	file -> read_count = 8		8526860	0		=			
ANR	8527837	PtrMemberAccess	file -> read_count		8526860	0					
ANR	8527838	Identifier	file		8526860	0					
ANR	8527839	Identifier	read_count		8526860	1					
ANR	8527840	PrimaryExpression	8		8526860	1					
ANR	8527841	ExpressionStatement	"file_setpos ( file , & file -> data_pos )"	3495:21:111173:111207	8526860	2	True				
ANR	8527842	CallExpression	"file_setpos ( file , & file -> data_pos )"		8526860	0					
ANR	8527843	Callee	file_setpos		8526860	0					
ANR	8527844	Identifier	file_setpos		8526860	0					
ANR	8527845	ArgumentList	file		8526860	1					
ANR	8527846	Argument	file		8526860	0					
ANR	8527847	Identifier	file		8526860	0					
ANR	8527848	Argument	& file -> data_pos		8526860	1					
ANR	8527849	UnaryOperationExpression	& file -> data_pos		8526860	0					
ANR	8527850	UnaryOperator	&		8526860	0					
ANR	8527851	PtrMemberAccess	file -> data_pos		8526860	1					
ANR	8527852	Identifier	file		8526860	0					
ANR	8527853	Identifier	data_pos		8526860	1					
ANR	8527854	IfStatement	if ( file -> idat == NULL )		8526860	3					
ANR	8527855	Condition	file -> idat == NULL	3497:25:111235:111252	8526860	0	True				
ANR	8527856	EqualityExpression	file -> idat == NULL		8526860	0		==			
ANR	8527857	PtrMemberAccess	file -> idat		8526860	0					
ANR	8527858	Identifier	file		8526860	0					
ANR	8527859	Identifier	idat		8526860	1					
ANR	8527860	Identifier	NULL		8526860	1					
ANR	8527861	ExpressionStatement	chunk_end ( & file -> chunk )	3498:24:111279:111302	8526860	1	True				
ANR	8527862	CallExpression	chunk_end ( & file -> chunk )		8526860	0					
ANR	8527863	Callee	chunk_end		8526860	0					
ANR	8527864	Identifier	chunk_end		8526860	0					
ANR	8527865	ArgumentList	& file -> chunk		8526860	1					
ANR	8527866	Argument	& file -> chunk		8526860	0					
ANR	8527867	UnaryOperationExpression	& file -> chunk		8526860	0					
ANR	8527868	UnaryOperator	&		8526860	0					
ANR	8527869	PtrMemberAccess	file -> chunk		8526860	1					
ANR	8527870	Identifier	file		8526860	0					
ANR	8527871	Identifier	chunk		8526860	1					
ANR	8527872	ElseStatement	else		8526860	0					
ANR	8527873	ExpressionStatement	IDAT_end ( & file -> idat )	3501:24:111355:111376	8526860	0	True				
ANR	8527874	CallExpression	IDAT_end ( & file -> idat )		8526860	0					
ANR	8527875	Callee	IDAT_end		8526860	0					
ANR	8527876	Identifier	IDAT_end		8526860	0					
ANR	8527877	ArgumentList	& file -> idat		8526860	1					
ANR	8527878	Argument	& file -> idat		8526860	0					
ANR	8527879	UnaryOperationExpression	& file -> idat		8526860	0					
ANR	8527880	UnaryOperator	&		8526860	0					
ANR	8527881	PtrMemberAccess	file -> idat		8526860	1					
ANR	8527882	Identifier	file		8526860	0					
ANR	8527883	Identifier	idat		8526860	1					
ANR	8527884	Label	write_crc :	3504:15:111414:111423	8526860	19	True				
ANR	8527885	Identifier	write_crc		8526860	0					
ANR	8527886	ExpressionStatement	b ^= 0xff	3505:18:111443:111452	8526860	20	True				
ANR	8527887	AssignmentExpression	b ^= 0xff		8526860	0		^=			
ANR	8527888	Identifier	b		8526860	0					
ANR	8527889	PrimaryExpression	0xff		8526860	1					
ANR	8527890	BreakStatement	break ;	3506:18:111491:111496	8526860	21	True				
ANR	8527891	BreakStatement	break ;	3508:12:111524:111529	8526860	29	True				
ANR	8527892	ExpressionStatement	b &= 0xff	3512:6:111573:111582	8526860	3	True				
ANR	8527893	AssignmentExpression	b &= 0xff		8526860	0		&=			
ANR	8527894	Identifier	b		8526860	0					
ANR	8527895	PrimaryExpression	0xff		8526860	1					
ANR	8527896	ExpressionStatement	* buffer ++ = ( png_byte ) b	3513:6:111590:111613	8526860	4	True				
ANR	8527897	AssignmentExpression	* buffer ++ = ( png_byte ) b		8526860	0		=			
ANR	8527898	UnaryOperationExpression	* buffer ++		8526860	0					
ANR	8527899	UnaryOperator	*		8526860	0					
ANR	8527900	PostIncDecOperationExpression	buffer ++		8526860	1					
ANR	8527901	Identifier	buffer		8526860	0					
ANR	8527902	IncDec	++		8526860	1					
ANR	8527903	CastExpression	( png_byte ) b		8526860	1					
ANR	8527904	CastTarget	png_byte		8526860	0					
ANR	8527905	Identifier	b		8526860	1					
ANR	8527906	ExpressionStatement	-- count	3514:6:111621:111628	8526860	5	True				
ANR	8527907	UnaryExpression	-- count		8526860	0					
ANR	8527908	IncDec	--		8526860	0					
ANR	8527909	Identifier	count		8526860	1					
ANR	8527910	ExpressionStatement	"write_byte ( file , ( png_byte ) b )"	3515:6:111636:111665	8526860	6	True				
ANR	8527911	CallExpression	"write_byte ( file , ( png_byte ) b )"		8526860	0					
ANR	8527912	Callee	write_byte		8526860	0					
ANR	8527913	Identifier	write_byte		8526860	0					
ANR	8527914	ArgumentList	file		8526860	1					
ANR	8527915	Argument	file		8526860	0					
ANR	8527916	Identifier	file		8526860	0					
ANR	8527917	Argument	( png_byte ) b		8526860	1					
ANR	8527918	CastExpression	( png_byte ) b		8526860	0					
ANR	8527919	CastTarget	png_byte		8526860	0					
ANR	8527920	Identifier	b		8526860	1					
ANR	8527921	Condition	count > 0	3517:10:111711:111719	8526860	1	True				
ANR	8527922	RelationalExpression	count > 0		8526860	0		>			
ANR	8527923	Identifier	count		8526860	0					
ANR	8527924	PrimaryExpression	0		8526860	1					
ANR	8527925	ReturnType	static void PNGCBAPI		8526860	1					
ANR	8527926	Identifier	read_callback		8526860	2					
ANR	8527927	ParameterList	"png_structp png_ptr , png_bytep buffer , size_t count"		8526860	3					
ANR	8527928	Parameter	png_structp png_ptr	3187:14:99092:99110	8526860	0	True				
ANR	8527929	ParameterType	png_structp		8526860	0					
ANR	8527930	Identifier	png_ptr		8526860	1					
ANR	8527931	Parameter	png_bytep buffer	3187:35:99113:99128	8526860	1	True				
ANR	8527932	ParameterType	png_bytep		8526860	0					
ANR	8527933	Identifier	buffer		8526860	1					
ANR	8527934	Parameter	size_t count	3187:53:99131:99142	8526860	2	True				
ANR	8527935	ParameterType	size_t		8526860	0					
ANR	8527936	Identifier	count		8526860	1					
ANR	8527937	CFGEntryNode	ENTRY		8526860		True				
ANR	8527938	CFGExitNode	EXIT		8526860		True				
ANR	8527939	Symbol	chunk -> rewrite_buffer		8526860						
ANR	8527940	Symbol	chunk -> rewrite_offset		8526860						
ANR	8527941	Symbol	chunk -> rewrite_length		8526860						
ANR	8527942	Symbol	STATE_IDAT		8526860						
ANR	8527943	Symbol	type		8526860						
ANR	8527944	Symbol	cur -> lengths		8526860						
ANR	8527945	Symbol	rechunk_length		8526860						
ANR	8527946	Symbol	& file -> idat		8526860						
ANR	8527947	Symbol	file -> idat -> idat_cur -> count		8526860						
ANR	8527948	Symbol	* * cur		8526860						
ANR	8527949	Symbol	* cur		8526860						
ANR	8527950	Symbol	file -> idat		8526860						
ANR	8527951	Symbol	* file -> global		8526860						
ANR	8527952	Symbol	* file -> idat -> idat_cur		8526860						
ANR	8527953	Symbol	* buffer ++		8526860						
ANR	8527954	Symbol	file -> state		8526860						
ANR	8527955	Symbol	file -> idat -> idat_list_tail		8526860						
ANR	8527956	Symbol	buffer		8526860						
ANR	8527957	Symbol	file -> write_count		8526860						
ANR	8527958	Symbol	* file -> idat		8526860						
ANR	8527959	Symbol	idat -> idat_cur		8526860						
ANR	8527960	Symbol	& file -> chunk		8526860						
ANR	8527961	Symbol	& file -> type		8526860						
ANR	8527962	Symbol	png_ptr		8526860						
ANR	8527963	Symbol	READ_ERROR_CODE		8526860						
ANR	8527964	Symbol	* * idat		8526860						
ANR	8527965	Symbol	NULL		8526860						
ANR	8527966	Symbol	count		8526860						
ANR	8527967	Symbol	file -> read_count		8526860						
ANR	8527968	Symbol	* file		8526860						
ANR	8527969	Symbol	stderr		8526860						
ANR	8527970	Symbol	get_control		8526860						
ANR	8527971	Symbol	sig2		8526860						
ANR	8527972	Symbol	sig1		8526860						
ANR	8527973	Symbol	chunk -> chunk_type		8526860						
ANR	8527974	Symbol	STATE_SIGNATURE		8526860						
ANR	8527975	Symbol	idat -> idat_length		8526860						
ANR	8527976	Symbol	& file -> length		8526860						
ANR	8527977	Symbol	file -> idat -> idat_count		8526860						
ANR	8527978	Symbol	idat		8526860						
ANR	8527979	Symbol	* * file		8526860						
ANR	8527980	Symbol	crc_init_4		8526860						
ANR	8527981	Symbol	cur		8526860						
ANR	8527982	Symbol	file -> idat -> idat_index		8526860						
ANR	8527983	Symbol	file -> idat -> idat_length		8526860						
ANR	8527984	Symbol	file -> chunk		8526860						
ANR	8527985	Symbol	idat -> idat_index		8526860						
ANR	8527986	Symbol	chunk		8526860						
ANR	8527987	Symbol	file -> length		8526860						
ANR	8527988	Symbol	* idat -> idat_count		8526860						
ANR	8527989	Symbol	& file -> data_pos		8526860						
ANR	8527990	Symbol	file -> type		8526860						
ANR	8527991	Symbol	png_IHDR		8526860						
ANR	8527992	Symbol	file		8526860						
ANR	8527993	Symbol	cur -> count		8526860						
ANR	8527994	Symbol	reread_byte		8526860						
ANR	8527995	Symbol	idat -> idat_count		8526860						
ANR	8527996	Symbol	* idat		8526860						
ANR	8527997	Symbol	UNEXPECTED_ERROR_CODE		8526860						
ANR	8527998	Symbol	chunk -> chunk_length		8526860						
ANR	8527999	Symbol	LIBPNG_ERROR_CODE		8526860						
ANR	8528000	Symbol	b		8526860						
ANR	8528001	Symbol	crc_one_byte		8526860						
ANR	8528002	Symbol	STATE_CHUNKS		8526860						
ANR	8528003	Symbol	* * chunk		8526860						
ANR	8528004	Symbol	length		8526860						
ANR	8528005	Symbol	chunk -> write_crc		8526860						
ANR	8528006	Symbol	* * file -> idat		8526860						
ANR	8528007	Symbol	file -> status_code		8526860						
ANR	8528008	Symbol	file -> global -> verbose		8526860						
ANR	8528009	Symbol	* * * file		8526860						
ANR	8528010	Symbol	TRUNCATED		8526860						
ANR	8528011	Symbol	* chunk		8526860						
ANR	8528012	Symbol	png_IDAT		8526860						
ANR	8528013	Symbol	file -> global		8526860						
ANR	8528014	Symbol	* cur -> lengths		8526860						
ANR	8528015	Symbol	file -> idat -> idat_cur		8526860						
ANR	8528016	Symbol	cur -> next		8526860						
ANR	8528017	Symbol	* chunk -> rewrite_buffer		8526860						
ANR	8528018	ClassDef	control	3523:0:111875:111959							
ANR	8528019	DeclStmt									
ANR	8528020	Decl							struct file	struct file	file
ANR	8528021	DeclStmt									
ANR	8528022	Decl							struct chunk	struct chunk	chunk
ANR	8528023	DeclStmt									
ANR	8528024	Decl							struct IDAT	struct IDAT	idat
ANR	8528025	Function	control_end	3530:0:111963:112049							
ANR	8528026	FunctionDef	control_end (struct control * control)		8528025	0					
ANR	8528027	CompoundStatement		3532:0:112011:112049	8528025	0					
ANR	8528028	ReturnStatement	return file_end ( & control -> file ) ;	3533:3:112016:112047	8528025	0	True				
ANR	8528029	CallExpression	file_end ( & control -> file )		8528025	0					
ANR	8528030	Callee	file_end		8528025	0					
ANR	8528031	Identifier	file_end		8528025	0					
ANR	8528032	ArgumentList	& control -> file		8528025	1					
ANR	8528033	Argument	& control -> file		8528025	0					
ANR	8528034	UnaryOperationExpression	& control -> file		8528025	0					
ANR	8528035	UnaryOperator	&		8528025	0					
ANR	8528036	PtrMemberAccess	control -> file		8528025	1					
ANR	8528037	Identifier	control		8528025	0					
ANR	8528038	Identifier	file		8528025	1					
ANR	8528039	ReturnType	static int		8528025	1					
ANR	8528040	Identifier	control_end		8528025	2					
ANR	8528041	ParameterList	struct control * control		8528025	3					
ANR	8528042	Parameter	struct control * control	3531:12:111986:112008	8528025	0	True				
ANR	8528043	ParameterType	struct control *		8528025	0					
ANR	8528044	Identifier	control		8528025	1					
ANR	8528045	CFGEntryNode	ENTRY		8528025		True				
ANR	8528046	CFGExitNode	EXIT		8528025		True				
ANR	8528047	Symbol	& control -> file		8528025						
ANR	8528048	Symbol	file_end		8528025						
ANR	8528049	Symbol	control		8528025						
ANR	8528050	Function	get_control	3536:0:112052:112340							
ANR	8528051	FunctionDef	get_control (png_const_structrp png_ptr)		8528050	0					
ANR	8528052	CompoundStatement		3538:0:112113:112340	8528050	0					
ANR	8528053	Statement	struct	3542:3:112227:112232	8528050	0	True				
ANR	8528054	Statement	control	3542:10:112234:112240	8528050	1	True				
ANR	8528055	Statement	*	3542:18:112242:112242	8528050	2	True				
ANR	8528056	Statement	control	3542:19:112243:112249	8528050	3	True				
ANR	8528057	Statement	=	3542:27:112251:112251	8528050	4	True				
ANR	8528058	Statement	voidcast	3542:29:112253:112260	8528050	5	True				
ANR	8528059	Statement	(	3542:37:112261:112261	8528050	6	True				
ANR	8528060	Statement	struct	3542:38:112262:112267	8528050	7	True				
ANR	8528061	Statement	control	3542:45:112269:112275	8528050	8	True				
ANR	8528062	Statement	*	3542:52:112276:112276	8528050	9	True				
ANR	8528063	Statement	","	3542:53:112277:112277	8528050	10	True				
ANR	8528064	Statement	png_get_error_ptr	3543:6:112285:112301	8528050	11	True				
ANR	8528065	Statement	(	3543:23:112302:112302	8528050	12	True				
ANR	8528066	Statement	png_ptr	3543:24:112303:112309	8528050	13	True				
ANR	8528067	Statement	)	3543:31:112310:112310	8528050	14	True				
ANR	8528068	Statement	)	3543:32:112311:112311	8528050	15	True				
ANR	8528069	ExpressionStatement		3543:33:112312:112312	8528050	16	True				
ANR	8528070	ReturnStatement	return & control -> file ;	3544:3:112317:112338	8528050	17	True				
ANR	8528071	UnaryOperationExpression	& control -> file		8528050	0					
ANR	8528072	UnaryOperator	&		8528050	0					
ANR	8528073	PtrMemberAccess	control -> file		8528050	1					
ANR	8528074	Identifier	control		8528050	0					
ANR	8528075	Identifier	file		8528050	1					
ANR	8528076	ReturnType	static struct file *		8528050	1					
ANR	8528077	Identifier	get_control		8528050	2					
ANR	8528078	ParameterList	png_const_structrp png_ptr		8528050	3					
ANR	8528079	Parameter	png_const_structrp png_ptr	3537:12:112085:112110	8528050	0	True				
ANR	8528080	ParameterType	png_const_structrp		8528050	0					
ANR	8528081	Identifier	png_ptr		8528050	1					
ANR	8528082	CFGEntryNode	ENTRY		8528050		True				
ANR	8528083	CFGExitNode	EXIT		8528050		True				
ANR	8528084	Symbol	& control -> file		8528050						
ANR	8528085	Symbol	control		8528050						
ANR	8528086	Symbol	png_ptr		8528050						
ANR	8528087	Function	allocate	3547:0:112343:112690							
ANR	8528088	FunctionDef	"allocate (struct file * file , int allocate_idat)"		8528087	0					
ANR	8528089	CompoundStatement		3549:0:112402:112690	8528087	0					
ANR	8528090	Statement	struct	3550:3:112407:112412	8528087	0	True				
ANR	8528091	Statement	control	3550:10:112414:112420	8528087	1	True				
ANR	8528092	Statement	*	3550:18:112422:112422	8528087	2	True				
ANR	8528093	Statement	control	3550:19:112423:112429	8528087	3	True				
ANR	8528094	Statement	=	3550:27:112431:112431	8528087	4	True				
ANR	8528095	Statement	voidcast	3550:29:112433:112440	8528087	5	True				
ANR	8528096	Statement	(	3550:37:112441:112441	8528087	6	True				
ANR	8528097	Statement	struct	3550:38:112442:112447	8528087	7	True				
ANR	8528098	Statement	control	3550:45:112449:112455	8528087	8	True				
ANR	8528099	Statement	*	3550:52:112456:112456	8528087	9	True				
ANR	8528100	Statement	","	3550:53:112457:112457	8528087	10	True				
ANR	8528101	Statement	file	3550:55:112459:112462	8528087	11	True				
ANR	8528102	Statement	->	3550:59:112463:112464	8528087	12	True				
ANR	8528103	Statement	alloc_ptr	3550:61:112465:112473	8528087	13	True				
ANR	8528104	Statement	)	3550:70:112474:112474	8528087	14	True				
ANR	8528105	ExpressionStatement		3550:71:112475:112475	8528087	15	True				
ANR	8528106	IfStatement	if ( allocate_idat )		8528087	16					
ANR	8528107	Condition	allocate_idat	3552:7:112485:112497	8528087	0	True				
ANR	8528108	Identifier	allocate_idat		8528087	0					
ANR	8528109	CompoundStatement		5:3:100:100	8528087	1					
ANR	8528110	ExpressionStatement	assert ( file -> idat == NULL )	3554:6:112511:112537	8528087	0	True				
ANR	8528111	CallExpression	assert ( file -> idat == NULL )		8528087	0					
ANR	8528112	Callee	assert		8528087	0					
ANR	8528113	Identifier	assert		8528087	0					
ANR	8528114	ArgumentList	file -> idat == NULL		8528087	1					
ANR	8528115	Argument	file -> idat == NULL		8528087	0					
ANR	8528116	EqualityExpression	file -> idat == NULL		8528087	0		==			
ANR	8528117	PtrMemberAccess	file -> idat		8528087	0					
ANR	8528118	Identifier	file		8528087	0					
ANR	8528119	Identifier	idat		8528087	1					
ANR	8528120	Identifier	NULL		8528087	1					
ANR	8528121	ExpressionStatement	"IDAT_init ( & control -> idat , file )"	3555:6:112545:112576	8528087	1	True				
ANR	8528122	CallExpression	"IDAT_init ( & control -> idat , file )"		8528087	0					
ANR	8528123	Callee	IDAT_init		8528087	0					
ANR	8528124	Identifier	IDAT_init		8528087	0					
ANR	8528125	ArgumentList	& control -> idat		8528087	1					
ANR	8528126	Argument	& control -> idat		8528087	0					
ANR	8528127	UnaryOperationExpression	& control -> idat		8528087	0					
ANR	8528128	UnaryOperator	&		8528087	0					
ANR	8528129	PtrMemberAccess	control -> idat		8528087	1					
ANR	8528130	Identifier	control		8528087	0					
ANR	8528131	Identifier	idat		8528087	1					
ANR	8528132	Argument	file		8528087	1					
ANR	8528133	Identifier	file		8528087	0					
ANR	8528134	ElseStatement	else		8528087	0					
ANR	8528135	CompoundStatement		11:3:204:204	8528087	0					
ANR	8528136	ExpressionStatement	assert ( file -> chunk == NULL )	3560:6:112615:112642	8528087	0	True				
ANR	8528137	CallExpression	assert ( file -> chunk == NULL )		8528087	0					
ANR	8528138	Callee	assert		8528087	0					
ANR	8528139	Identifier	assert		8528087	0					
ANR	8528140	ArgumentList	file -> chunk == NULL		8528087	1					
ANR	8528141	Argument	file -> chunk == NULL		8528087	0					
ANR	8528142	EqualityExpression	file -> chunk == NULL		8528087	0		==			
ANR	8528143	PtrMemberAccess	file -> chunk		8528087	0					
ANR	8528144	Identifier	file		8528087	0					
ANR	8528145	Identifier	chunk		8528087	1					
ANR	8528146	Identifier	NULL		8528087	1					
ANR	8528147	ExpressionStatement	"chunk_init ( & control -> chunk , file )"	3561:6:112650:112683	8528087	1	True				
ANR	8528148	CallExpression	"chunk_init ( & control -> chunk , file )"		8528087	0					
ANR	8528149	Callee	chunk_init		8528087	0					
ANR	8528150	Identifier	chunk_init		8528087	0					
ANR	8528151	ArgumentList	& control -> chunk		8528087	1					
ANR	8528152	Argument	& control -> chunk		8528087	0					
ANR	8528153	UnaryOperationExpression	& control -> chunk		8528087	0					
ANR	8528154	UnaryOperator	&		8528087	0					
ANR	8528155	PtrMemberAccess	control -> chunk		8528087	1					
ANR	8528156	Identifier	control		8528087	0					
ANR	8528157	Identifier	chunk		8528087	1					
ANR	8528158	Argument	file		8528087	1					
ANR	8528159	Identifier	file		8528087	0					
ANR	8528160	ReturnType	static void		8528087	1					
ANR	8528161	Identifier	allocate		8528087	2					
ANR	8528162	ParameterList	"struct file * file , int allocate_idat"		8528087	3					
ANR	8528163	Parameter	struct file * file	3548:9:112364:112380	8528087	0	True				
ANR	8528164	ParameterType	struct file *		8528087	0					
ANR	8528165	Identifier	file		8528087	1					
ANR	8528166	Parameter	int allocate_idat	3548:28:112383:112399	8528087	1	True				
ANR	8528167	ParameterType	int		8528087	0					
ANR	8528168	Identifier	allocate_idat		8528087	1					
ANR	8528169	CFGEntryNode	ENTRY		8528087		True				
ANR	8528170	CFGExitNode	EXIT		8528087		True				
ANR	8528171	Symbol	& control -> idat		8528087						
ANR	8528172	Symbol	file		8528087						
ANR	8528173	Symbol	NULL		8528087						
ANR	8528174	Symbol	& control -> chunk		8528087						
ANR	8528175	Symbol	file -> idat		8528087						
ANR	8528176	Symbol	file -> chunk		8528087						
ANR	8528177	Symbol	control		8528087						
ANR	8528178	Symbol	allocate_idat		8528087						
ANR	8528179	Symbol	* file		8528087						
ANR	8528180	Function	control_init	3565:0:112693:113008							
ANR	8528181	FunctionDef	"control_init (struct control * control , struct global * global , const char * file_name , const char * out_name)"		8528180	0					
ANR	8528182	CompoundStatement		3571:0:112915:113008	8528180	0					
ANR	8528183	ReturnStatement	"return file_init ( & control -> file , global , file_name , out_name , control , allocate ) ;"	3572:3:112920:113006	8528180	0	True				
ANR	8528184	CallExpression	"file_init ( & control -> file , global , file_name , out_name , control , allocate )"		8528180	0					
ANR	8528185	Callee	file_init		8528180	0					
ANR	8528186	Identifier	file_init		8528180	0					
ANR	8528187	ArgumentList	& control -> file		8528180	1					
ANR	8528188	Argument	& control -> file		8528180	0					
ANR	8528189	UnaryOperationExpression	& control -> file		8528180	0					
ANR	8528190	UnaryOperator	&		8528180	0					
ANR	8528191	PtrMemberAccess	control -> file		8528180	1					
ANR	8528192	Identifier	control		8528180	0					
ANR	8528193	Identifier	file		8528180	1					
ANR	8528194	Argument	global		8528180	1					
ANR	8528195	Identifier	global		8528180	0					
ANR	8528196	Argument	file_name		8528180	2					
ANR	8528197	Identifier	file_name		8528180	0					
ANR	8528198	Argument	out_name		8528180	3					
ANR	8528199	Identifier	out_name		8528180	0					
ANR	8528200	Argument	control		8528180	4					
ANR	8528201	Identifier	control		8528180	0					
ANR	8528202	Argument	allocate		8528180	5					
ANR	8528203	Identifier	allocate		8528180	0					
ANR	8528204	ReturnType	static int		8528180	1					
ANR	8528205	Identifier	control_init		8528180	2					
ANR	8528206	ParameterList	"struct control * control , struct global * global , const char * file_name , const char * out_name"		8528180	3					
ANR	8528207	Parameter	struct control * control	3566:13:112717:112739	8528180	0	True				
ANR	8528208	ParameterType	struct control *		8528180	0					
ANR	8528209	Identifier	control		8528180	1					
ANR	8528210	Parameter	struct global * global	3566:38:112742:112762	8528180	1	True				
ANR	8528211	ParameterType	struct global *		8528180	0					
ANR	8528212	Identifier	global		8528180	1					
ANR	8528213	Parameter	const char * file_name	3567:3:112768:112788	8528180	2	True				
ANR	8528214	ParameterType	const char *		8528180	0					
ANR	8528215	Identifier	file_name		8528180	1					
ANR	8528216	Parameter	const char * out_name	3567:26:112791:112810	8528180	3	True				
ANR	8528217	ParameterType	const char *		8528180	0					
ANR	8528218	Identifier	out_name		8528180	1					
ANR	8528219	CFGEntryNode	ENTRY		8528180		True				
ANR	8528220	CFGExitNode	EXIT		8528180		True				
ANR	8528221	Symbol	& control -> file		8528180						
ANR	8528222	Symbol	allocate		8528180						
ANR	8528223	Symbol	file_init		8528180						
ANR	8528224	Symbol	file_name		8528180						
ANR	8528225	Symbol	out_name		8528180						
ANR	8528226	Symbol	control		8528180						
ANR	8528227	Symbol	global		8528180						
ANR	8528228	Function	read_png	3576:0:113011:115157							
ANR	8528229	FunctionDef	read_png (struct control * control)		8528228	0					
ANR	8528230	CompoundStatement		3581:0:113190:115157	8528228	0					
ANR	8528231	IdentifierDeclStatement	png_structp png_ptr ;	3582:3:113195:113214	8528228	0	True				
ANR	8528232	IdentifierDecl	png_ptr		8528228	0					
ANR	8528233	IdentifierDeclType	png_structp		8528228	0					
ANR	8528234	Identifier	png_ptr		8528228	1					
ANR	8528235	IdentifierDeclStatement	png_infop info_ptr = NULL ;	3583:3:113219:113244	8528228	1	True				
ANR	8528236	IdentifierDecl	info_ptr = NULL		8528228	0					
ANR	8528237	IdentifierDeclType	png_infop		8528228	0					
ANR	8528238	Identifier	info_ptr		8528228	1					
ANR	8528239	AssignmentExpression	info_ptr = NULL		8528228	2		=			
ANR	8528240	Identifier	NULL		8528228	0					
ANR	8528241	Identifier	NULL		8528228	1					
ANR	8528242	IdentifierDeclStatement	volatile int rc ;	3584:3:113249:113264	8528228	2	True				
ANR	8528243	IdentifierDecl	rc		8528228	0					
ANR	8528244	IdentifierDeclType	volatile int		8528228	0					
ANR	8528245	Identifier	rc		8528228	1					
ANR	8528246	ExpressionStatement	"png_ptr = png_create_read_struct ( PNG_LIBPNG_VER_STRING , control , error_handler , warning_handler )"	3586:3:113270:113372	8528228	3	True				
ANR	8528247	AssignmentExpression	"png_ptr = png_create_read_struct ( PNG_LIBPNG_VER_STRING , control , error_handler , warning_handler )"		8528228	0		=			
ANR	8528248	Identifier	png_ptr		8528228	0					
ANR	8528249	CallExpression	"png_create_read_struct ( PNG_LIBPNG_VER_STRING , control , error_handler , warning_handler )"		8528228	1					
ANR	8528250	Callee	png_create_read_struct		8528228	0					
ANR	8528251	Identifier	png_create_read_struct		8528228	0					
ANR	8528252	ArgumentList	PNG_LIBPNG_VER_STRING		8528228	1					
ANR	8528253	Argument	PNG_LIBPNG_VER_STRING		8528228	0					
ANR	8528254	Identifier	PNG_LIBPNG_VER_STRING		8528228	0					
ANR	8528255	Argument	control		8528228	1					
ANR	8528256	Identifier	control		8528228	0					
ANR	8528257	Argument	error_handler		8528228	2					
ANR	8528258	Identifier	error_handler		8528228	0					
ANR	8528259	Argument	warning_handler		8528228	3					
ANR	8528260	Identifier	warning_handler		8528228	0					
ANR	8528261	IfStatement	if ( png_ptr == NULL )		8528228	4					
ANR	8528262	Condition	png_ptr == NULL	3589:7:113382:113396	8528228	0	True				
ANR	8528263	EqualityExpression	png_ptr == NULL		8528228	0		==			
ANR	8528264	Identifier	png_ptr		8528228	0					
ANR	8528265	Identifier	NULL		8528228	1					
ANR	8528266	CompoundStatement		10:3:211:211	8528228	1					
ANR	8528267	ExpressionStatement	"log_error ( & control -> file , LIBPNG_ERROR_CODE , ""OOM allocating png_struct"" )"	3592:6:113451:113524	8528228	0	True				
ANR	8528268	CallExpression	"log_error ( & control -> file , LIBPNG_ERROR_CODE , ""OOM allocating png_struct"" )"		8528228	0					
ANR	8528269	Callee	log_error		8528228	0					
ANR	8528270	Identifier	log_error		8528228	0					
ANR	8528271	ArgumentList	& control -> file		8528228	1					
ANR	8528272	Argument	& control -> file		8528228	0					
ANR	8528273	UnaryOperationExpression	& control -> file		8528228	0					
ANR	8528274	UnaryOperator	&		8528228	0					
ANR	8528275	PtrMemberAccess	control -> file		8528228	1					
ANR	8528276	Identifier	control		8528228	0					
ANR	8528277	Identifier	file		8528228	1					
ANR	8528278	Argument	LIBPNG_ERROR_CODE		8528228	1					
ANR	8528279	Identifier	LIBPNG_ERROR_CODE		8528228	0					
ANR	8528280	Argument	"""OOM allocating png_struct"""		8528228	2					
ANR	8528281	PrimaryExpression	"""OOM allocating png_struct"""		8528228	0					
ANR	8528282	ExpressionStatement	control -> file . status_code |= INTERNAL_ERROR	3593:6:113532:113575	8528228	1	True				
ANR	8528283	AssignmentExpression	control -> file . status_code |= INTERNAL_ERROR		8528228	0		|=			
ANR	8528284	MemberAccess	control -> file . status_code		8528228	0					
ANR	8528285	PtrMemberAccess	control -> file		8528228	0					
ANR	8528286	Identifier	control		8528228	0					
ANR	8528287	Identifier	file		8528228	1					
ANR	8528288	Identifier	status_code		8528228	1					
ANR	8528289	Identifier	INTERNAL_ERROR		8528228	1					
ANR	8528290	ReturnStatement	return LIBPNG_ERROR_CODE ;	3594:6:113583:113607	8528228	2	True				
ANR	8528291	Identifier	LIBPNG_ERROR_CODE		8528228	0					
ANR	8528292	ExpressionStatement	rc = setjmp ( control -> file . jmpbuf )	3597:3:113618:113651	8528228	5	True				
ANR	8528293	AssignmentExpression	rc = setjmp ( control -> file . jmpbuf )		8528228	0		=			
ANR	8528294	Identifier	rc		8528228	0					
ANR	8528295	CallExpression	setjmp ( control -> file . jmpbuf )		8528228	1					
ANR	8528296	Callee	setjmp		8528228	0					
ANR	8528297	Identifier	setjmp		8528228	0					
ANR	8528298	ArgumentList	control -> file . jmpbuf		8528228	1					
ANR	8528299	Argument	control -> file . jmpbuf		8528228	0					
ANR	8528300	MemberAccess	control -> file . jmpbuf		8528228	0					
ANR	8528301	PtrMemberAccess	control -> file		8528228	0					
ANR	8528302	Identifier	control		8528228	0					
ANR	8528303	Identifier	file		8528228	1					
ANR	8528304	Identifier	jmpbuf		8528228	1					
ANR	8528305	IfStatement	if ( rc == 0 )		8528228	6					
ANR	8528306	Condition	rc == 0	3598:7:113660:113666	8528228	0	True				
ANR	8528307	EqualityExpression	rc == 0		8528228	0		==			
ANR	8528308	Identifier	rc		8528228	0					
ANR	8528309	PrimaryExpression	0		8528228	1					
ANR	8528310	CompoundStatement		28:6:863:924	8528228	1					
ANR	8528311	IdentifierDeclStatement	"ifdef PNG_SET_USER_LIMITS_SUPPORTED png_set_user_limits ( png_ptr , 0x7fffffff , 0x7fffffff ) ;"	3600:6:113680:113953	8528228	0	True				
ANR	8528312	IdentifierDecl	"png_set_user_limits ( png_ptr , 0x7fffffff , 0x7fffffff )"		8528228	0					
ANR	8528313	IdentifierDeclType	ifdef PNG_SET_USER_LIMITS_SUPPORTED		8528228	0					
ANR	8528314	Identifier	png_set_user_limits		8528228	1					
ANR	8528315	Expression	"png_ptr , 0x7fffffff , 0x7fffffff"		8528228	2					
ANR	8528316	Identifier	png_ptr		8528228	0					
ANR	8528317	Expression	"0x7fffffff , 0x7fffffff"		8528228	1					
ANR	8528318	PrimaryExpression	0x7fffffff		8528228	0					
ANR	8528319	PrimaryExpression	0x7fffffff		8528228	1					
ANR	8528320	ExpressionStatement	"png_set_chunk_cache_max ( png_ptr , 0 )"	3606:9:113964:113999	8528228	1	True				
ANR	8528321	CallExpression	"png_set_chunk_cache_max ( png_ptr , 0 )"		8528228	0					
ANR	8528322	Callee	png_set_chunk_cache_max		8528228	0					
ANR	8528323	Identifier	png_set_chunk_cache_max		8528228	0					
ANR	8528324	ArgumentList	png_ptr		8528228	1					
ANR	8528325	Argument	png_ptr		8528228	0					
ANR	8528326	Identifier	png_ptr		8528228	0					
ANR	8528327	Argument	0		8528228	1					
ANR	8528328	PrimaryExpression	0		8528228	0					
ANR	8528329	ExpressionStatement	"png_set_chunk_malloc_max ( png_ptr , 0 )"	3607:9:114010:114046	8528228	2	True				
ANR	8528330	CallExpression	"png_set_chunk_malloc_max ( png_ptr , 0 )"		8528228	0					
ANR	8528331	Callee	png_set_chunk_malloc_max		8528228	0					
ANR	8528332	Identifier	png_set_chunk_malloc_max		8528228	0					
ANR	8528333	ArgumentList	png_ptr		8528228	1					
ANR	8528334	Argument	png_ptr		8528228	0					
ANR	8528335	Identifier	png_ptr		8528228	0					
ANR	8528336	Argument	0		8528228	1					
ANR	8528337	PrimaryExpression	0		8528228	0					
ANR	8528338	IdentifierDeclStatement	"endif png_set_read_fn ( png_ptr , control , read_callback ) ;"	3608:6:114054:114115	8528228	3	True				
ANR	8528339	IdentifierDecl	"png_set_read_fn ( png_ptr , control , read_callback )"		8528228	0					
ANR	8528340	IdentifierDeclType	endif		8528228	0					
ANR	8528341	Identifier	png_set_read_fn		8528228	1					
ANR	8528342	Expression	"png_ptr , control , read_callback"		8528228	2					
ANR	8528343	Identifier	png_ptr		8528228	0					
ANR	8528344	Expression	"control , read_callback"		8528228	1					
ANR	8528345	Identifier	control		8528228	0					
ANR	8528346	Identifier	read_callback		8528228	1					
ANR	8528347	ExpressionStatement	info_ptr = png_create_info_struct ( png_ptr )	3612:6:114124:114166	8528228	4	True				
ANR	8528348	AssignmentExpression	info_ptr = png_create_info_struct ( png_ptr )		8528228	0		=			
ANR	8528349	Identifier	info_ptr		8528228	0					
ANR	8528350	CallExpression	png_create_info_struct ( png_ptr )		8528228	1					
ANR	8528351	Callee	png_create_info_struct		8528228	0					
ANR	8528352	Identifier	png_create_info_struct		8528228	0					
ANR	8528353	ArgumentList	png_ptr		8528228	1					
ANR	8528354	Argument	png_ptr		8528228	0					
ANR	8528355	Identifier	png_ptr		8528228	0					
ANR	8528356	IfStatement	if ( info_ptr == NULL )		8528228	5					
ANR	8528357	Condition	info_ptr == NULL	3613:10:114178:114193	8528228	0	True				
ANR	8528358	EqualityExpression	info_ptr == NULL		8528228	0		==			
ANR	8528359	Identifier	info_ptr		8528228	0					
ANR	8528360	Identifier	NULL		8528228	1					
ANR	8528361	ExpressionStatement	"png_error ( png_ptr , ""OOM allocating info structure"" )"	3614:9:114205:114256	8528228	1	True				
ANR	8528362	CallExpression	"png_error ( png_ptr , ""OOM allocating info structure"" )"		8528228	0					
ANR	8528363	Callee	png_error		8528228	0					
ANR	8528364	Identifier	png_error		8528228	0					
ANR	8528365	ArgumentList	png_ptr		8528228	1					
ANR	8528366	Argument	png_ptr		8528228	0					
ANR	8528367	Identifier	png_ptr		8528228	0					
ANR	8528368	Argument	"""OOM allocating info structure"""		8528228	1					
ANR	8528369	PrimaryExpression	"""OOM allocating info structure"""		8528228	0					
ANR	8528370	IfStatement	if ( control -> file . global -> verbose )		8528228	6					
ANR	8528371	Condition	control -> file . global -> verbose	3616:10:114269:114297	8528228	0	True				
ANR	8528372	PtrMemberAccess	control -> file . global -> verbose		8528228	0					
ANR	8528373	MemberAccess	control -> file . global		8528228	0					
ANR	8528374	PtrMemberAccess	control -> file		8528228	0					
ANR	8528375	Identifier	control		8528228	0					
ANR	8528376	Identifier	file		8528228	1					
ANR	8528377	Identifier	global		8528228	1					
ANR	8528378	Identifier	verbose		8528228	1					
ANR	8528379	ExpressionStatement	"fprintf ( stderr , "" INFO\\n"" )"	3617:9:114309:114335	8528228	1	True				
ANR	8528380	CallExpression	"fprintf ( stderr , "" INFO\\n"" )"		8528228	0					
ANR	8528381	Callee	fprintf		8528228	0					
ANR	8528382	Identifier	fprintf		8528228	0					
ANR	8528383	ArgumentList	stderr		8528228	1					
ANR	8528384	Argument	stderr		8528228	0					
ANR	8528385	Identifier	stderr		8528228	0					
ANR	8528386	Argument	""" INFO\\n"""		8528228	1					
ANR	8528387	PrimaryExpression	""" INFO\\n"""		8528228	0					
ANR	8528388	ExpressionStatement	"png_read_info ( png_ptr , info_ptr )"	3619:6:114344:114376	8528228	7	True				
ANR	8528389	CallExpression	"png_read_info ( png_ptr , info_ptr )"		8528228	0					
ANR	8528390	Callee	png_read_info		8528228	0					
ANR	8528391	Identifier	png_read_info		8528228	0					
ANR	8528392	ArgumentList	png_ptr		8528228	1					
ANR	8528393	Argument	png_ptr		8528228	0					
ANR	8528394	Identifier	png_ptr		8528228	0					
ANR	8528395	Argument	info_ptr		8528228	1					
ANR	8528396	Identifier	info_ptr		8528228	0					
ANR	8528397	CompoundStatement		44:8:1332:1340	8528228	8					
ANR	8528398	IdentifierDeclStatement	"png_uint_32 height = png_get_image_height ( png_ptr , info_ptr ) ;"	3622:8:114395:114455	8528228	0	True				
ANR	8528399	IdentifierDecl	"height = png_get_image_height ( png_ptr , info_ptr )"		8528228	0					
ANR	8528400	IdentifierDeclType	png_uint_32		8528228	0					
ANR	8528401	Identifier	height		8528228	1					
ANR	8528402	AssignmentExpression	"height = png_get_image_height ( png_ptr , info_ptr )"		8528228	2		=			
ANR	8528403	Identifier	height		8528228	0					
ANR	8528404	CallExpression	"png_get_image_height ( png_ptr , info_ptr )"		8528228	1					
ANR	8528405	Callee	png_get_image_height		8528228	0					
ANR	8528406	Identifier	png_get_image_height		8528228	0					
ANR	8528407	ArgumentList	png_ptr		8528228	1					
ANR	8528408	Argument	png_ptr		8528228	0					
ANR	8528409	Identifier	png_ptr		8528228	0					
ANR	8528410	Argument	info_ptr		8528228	1					
ANR	8528411	Identifier	info_ptr		8528228	0					
ANR	8528412	IdentifierDeclStatement	int passes = png_set_interlace_handling ( png_ptr ) ;	3623:8:114465:114513	8528228	1	True				
ANR	8528413	IdentifierDecl	passes = png_set_interlace_handling ( png_ptr )		8528228	0					
ANR	8528414	IdentifierDeclType	int		8528228	0					
ANR	8528415	Identifier	passes		8528228	1					
ANR	8528416	AssignmentExpression	passes = png_set_interlace_handling ( png_ptr )		8528228	2		=			
ANR	8528417	Identifier	passes		8528228	0					
ANR	8528418	CallExpression	png_set_interlace_handling ( png_ptr )		8528228	1					
ANR	8528419	Callee	png_set_interlace_handling		8528228	0					
ANR	8528420	Identifier	png_set_interlace_handling		8528228	0					
ANR	8528421	ArgumentList	png_ptr		8528228	1					
ANR	8528422	Argument	png_ptr		8528228	0					
ANR	8528423	Identifier	png_ptr		8528228	0					
ANR	8528424	IdentifierDeclStatement	int pass ;	3624:8:114523:114531	8528228	2	True				
ANR	8528425	IdentifierDecl	pass		8528228	0					
ANR	8528426	IdentifierDeclType	int		8528228	0					
ANR	8528427	Identifier	pass		8528228	1					
ANR	8528428	ExpressionStatement	png_start_read_image ( png_ptr )	3626:8:114542:114571	8528228	3	True				
ANR	8528429	CallExpression	png_start_read_image ( png_ptr )		8528228	0					
ANR	8528430	Callee	png_start_read_image		8528228	0					
ANR	8528431	Identifier	png_start_read_image		8528228	0					
ANR	8528432	ArgumentList	png_ptr		8528228	1					
ANR	8528433	Argument	png_ptr		8528228	0					
ANR	8528434	Identifier	png_ptr		8528228	0					
ANR	8528435	ForStatement	for ( pass = 0 ; pass < passes ; ++ pass )		8528228	4					
ANR	8528436	ForInit	pass = 0 ;	3628:13:114587:114595	8528228	0	True				
ANR	8528437	AssignmentExpression	pass = 0		8528228	0		=			
ANR	8528438	Identifier	pass		8528228	0					
ANR	8528439	PrimaryExpression	0		8528228	1					
ANR	8528440	Condition	pass < passes	3628:23:114597:114609	8528228	1	True				
ANR	8528441	RelationalExpression	pass < passes		8528228	0		<			
ANR	8528442	Identifier	pass		8528228	0					
ANR	8528443	Identifier	passes		8528228	1					
ANR	8528444	UnaryExpression	++ pass	3628:38:114612:114617	8528228	2	True				
ANR	8528445	IncDec	++		8528228	0					
ANR	8528446	Identifier	pass		8528228	1					
ANR	8528447	CompoundStatement		50:11:1450:1472	8528228	3					
ANR	8528448	IdentifierDeclStatement	png_uint_32 y = height ;	3630:11:114641:114663	8528228	0	True				
ANR	8528449	IdentifierDecl	y = height		8528228	0					
ANR	8528450	IdentifierDeclType	png_uint_32		8528228	0					
ANR	8528451	Identifier	y		8528228	1					
ANR	8528452	AssignmentExpression	y = height		8528228	2		=			
ANR	8528453	Identifier	height		8528228	0					
ANR	8528454	Identifier	height		8528228	1					
ANR	8528455	WhileStatement	while ( y -- > 0 )		8528228	1					
ANR	8528456	Condition	y -- > 0	3635:18:114834:114840	8528228	0	True				
ANR	8528457	RelationalExpression	y -- > 0		8528228	0		>			
ANR	8528458	PostIncDecOperationExpression	y --		8528228	0					
ANR	8528459	Identifier	y		8528228	0					
ANR	8528460	IncDec	--		8528228	1					
ANR	8528461	PrimaryExpression	0		8528228	1					
ANR	8528462	ExpressionStatement	"png_read_row ( png_ptr , NULL , NULL )"	3636:14:114857:114890	8528228	1	True				
ANR	8528463	CallExpression	"png_read_row ( png_ptr , NULL , NULL )"		8528228	0					
ANR	8528464	Callee	png_read_row		8528228	0					
ANR	8528465	Identifier	png_read_row		8528228	0					
ANR	8528466	ArgumentList	png_ptr		8528228	1					
ANR	8528467	Argument	png_ptr		8528228	0					
ANR	8528468	Identifier	png_ptr		8528228	0					
ANR	8528469	Argument	NULL		8528228	1					
ANR	8528470	Identifier	NULL		8528228	0					
ANR	8528471	Argument	NULL		8528228	2					
ANR	8528472	Identifier	NULL		8528228	0					
ANR	8528473	IfStatement	if ( control -> file . global -> verbose )		8528228	9					
ANR	8528474	Condition	control -> file . global -> verbose	3640:10:114921:114949	8528228	0	True				
ANR	8528475	PtrMemberAccess	control -> file . global -> verbose		8528228	0					
ANR	8528476	MemberAccess	control -> file . global		8528228	0					
ANR	8528477	PtrMemberAccess	control -> file		8528228	0					
ANR	8528478	Identifier	control		8528228	0					
ANR	8528479	Identifier	file		8528228	1					
ANR	8528480	Identifier	global		8528228	1					
ANR	8528481	Identifier	verbose		8528228	1					
ANR	8528482	ExpressionStatement	"fprintf ( stderr , "" END\\n"" )"	3641:9:114961:114986	8528228	1	True				
ANR	8528483	CallExpression	"fprintf ( stderr , "" END\\n"" )"		8528228	0					
ANR	8528484	Callee	fprintf		8528228	0					
ANR	8528485	Identifier	fprintf		8528228	0					
ANR	8528486	ArgumentList	stderr		8528228	1					
ANR	8528487	Argument	stderr		8528228	0					
ANR	8528488	Identifier	stderr		8528228	0					
ANR	8528489	Argument	""" END\\n"""		8528228	1					
ANR	8528490	PrimaryExpression	""" END\\n"""		8528228	0					
ANR	8528491	ExpressionStatement	"png_read_end ( png_ptr , info_ptr )"	3644:6:115049:115080	8528228	10	True				
ANR	8528492	CallExpression	"png_read_end ( png_ptr , info_ptr )"		8528228	0					
ANR	8528493	Callee	png_read_end		8528228	0					
ANR	8528494	Identifier	png_read_end		8528228	0					
ANR	8528495	ArgumentList	png_ptr		8528228	1					
ANR	8528496	Argument	png_ptr		8528228	0					
ANR	8528497	Identifier	png_ptr		8528228	0					
ANR	8528498	Argument	info_ptr		8528228	1					
ANR	8528499	Identifier	info_ptr		8528228	0					
ANR	8528500	ExpressionStatement	"png_destroy_read_struct ( & png_ptr , & info_ptr , NULL )"	3647:3:115091:115141	8528228	7	True				
ANR	8528501	CallExpression	"png_destroy_read_struct ( & png_ptr , & info_ptr , NULL )"		8528228	0					
ANR	8528502	Callee	png_destroy_read_struct		8528228	0					
ANR	8528503	Identifier	png_destroy_read_struct		8528228	0					
ANR	8528504	ArgumentList	& png_ptr		8528228	1					
ANR	8528505	Argument	& png_ptr		8528228	0					
ANR	8528506	UnaryOperationExpression	& png_ptr		8528228	0					
ANR	8528507	UnaryOperator	&		8528228	0					
ANR	8528508	Identifier	png_ptr		8528228	1					
ANR	8528509	Argument	& info_ptr		8528228	1					
ANR	8528510	UnaryOperationExpression	& info_ptr		8528228	0					
ANR	8528511	UnaryOperator	&		8528228	0					
ANR	8528512	Identifier	info_ptr		8528228	1					
ANR	8528513	Argument	NULL		8528228	2					
ANR	8528514	Identifier	NULL		8528228	0					
ANR	8528515	ReturnStatement	return rc ;	3648:3:115146:115155	8528228	8	True				
ANR	8528516	Identifier	rc		8528228	0					
ANR	8528517	ReturnType	static int		8528228	1					
ANR	8528518	Identifier	read_png		8528228	2					
ANR	8528519	ParameterList	struct control * control		8528228	3					
ANR	8528520	Parameter	struct control * control	3577:9:113031:113053	8528228	0	True				
ANR	8528521	ParameterType	struct control *		8528228	0					
ANR	8528522	Identifier	control		8528228	1					
ANR	8528523	CFGEntryNode	ENTRY		8528228		True				
ANR	8528524	CFGExitNode	EXIT		8528228		True				
ANR	8528525	Symbol	error_handler		8528228						
ANR	8528526	Symbol	png_set_read_fn		8528228						
ANR	8528527	Symbol	& info_ptr		8528228						
ANR	8528528	Symbol	* control -> file		8528228						
ANR	8528529	Symbol	& png_ptr		8528228						
ANR	8528530	Symbol	control -> file . global -> verbose		8528228						
ANR	8528531	Symbol	warning_handler		8528228						
ANR	8528532	Symbol	control -> file . jmpbuf		8528228						
ANR	8528533	Symbol	control -> file . status_code		8528228						
ANR	8528534	Symbol	passes		8528228						
ANR	8528535	Symbol	png_set_user_limits		8528228						
ANR	8528536	Symbol	png_create_read_struct		8528228						
ANR	8528537	Symbol	png_set_interlace_handling		8528228						
ANR	8528538	Symbol	png_get_image_height		8528228						
ANR	8528539	Symbol	LIBPNG_ERROR_CODE		8528228						
ANR	8528540	Symbol	png_ptr		8528228						
ANR	8528541	Symbol	height		8528228						
ANR	8528542	Symbol	& control -> file		8528228						
ANR	8528543	Symbol	NULL		8528228						
ANR	8528544	Symbol	* control -> file . global		8528228						
ANR	8528545	Symbol	pass		8528228						
ANR	8528546	Symbol	INTERNAL_ERROR		8528228						
ANR	8528547	Symbol	setjmp		8528228						
ANR	8528548	Symbol	control		8528228						
ANR	8528549	Symbol	stderr		8528228						
ANR	8528550	Symbol	png_create_info_struct		8528228						
ANR	8528551	Symbol	* control		8528228						
ANR	8528552	Symbol	rc		8528228						
ANR	8528553	Symbol	control -> file		8528228						
ANR	8528554	Symbol	control -> file . global		8528228						
ANR	8528555	Symbol	y		8528228						
ANR	8528556	Symbol	* * control		8528228						
ANR	8528557	Symbol	info_ptr		8528228						
ANR	8528558	Symbol	PNG_LIBPNG_VER_STRING		8528228						
ANR	8528559	Function	one_file	3651:0:115160:115728							
ANR	8528560	FunctionDef	"one_file (struct global * global , const char * file_name , const char * out_name)"		8528559	0					
ANR	8528561	CompoundStatement		3653:0:115248:115728	8528559	0					
ANR	8528562	IdentifierDeclStatement	int rc ;	3654:3:115253:115259	8528559	0	True				
ANR	8528563	IdentifierDecl	rc		8528559	0					
ANR	8528564	IdentifierDeclType	int		8528559	0					
ANR	8528565	Identifier	rc		8528559	1					
ANR	8528566	IdentifierDeclStatement	struct control control ;	3655:3:115264:115286	8528559	1	True				
ANR	8528567	IdentifierDecl	control		8528559	0					
ANR	8528568	IdentifierDeclType	struct control		8528559	0					
ANR	8528569	Identifier	control		8528559	1					
ANR	8528570	IfStatement	if ( global -> verbose )		8528559	2					
ANR	8528571	Condition	global -> verbose	3657:7:115296:115310	8528559	0	True				
ANR	8528572	PtrMemberAccess	global -> verbose		8528559	0					
ANR	8528573	Identifier	global		8528559	0					
ANR	8528574	Identifier	verbose		8528559	1					
ANR	8528575	ExpressionStatement	"fprintf ( stderr , ""FILE %s -> %s\\n"" , file_name , out_name ? out_name : ""<none>"" )"	3658:6:115319:115405	8528559	1	True				
ANR	8528576	CallExpression	"fprintf ( stderr , ""FILE %s -> %s\\n"" , file_name , out_name ? out_name : ""<none>"" )"		8528559	0					
ANR	8528577	Callee	fprintf		8528559	0					
ANR	8528578	Identifier	fprintf		8528559	0					
ANR	8528579	ArgumentList	stderr		8528559	1					
ANR	8528580	Argument	stderr		8528559	0					
ANR	8528581	Identifier	stderr		8528559	0					
ANR	8528582	Argument	"""FILE %s -> %s\\n"""		8528559	1					
ANR	8528583	PrimaryExpression	"""FILE %s -> %s\\n"""		8528559	0					
ANR	8528584	Argument	file_name		8528559	2					
ANR	8528585	Identifier	file_name		8528559	0					
ANR	8528586	Argument	"out_name ? out_name : ""<none>"""		8528559	3					
ANR	8528587	ConditionalExpression	"out_name ? out_name : ""<none>"""		8528559	0					
ANR	8528588	Condition	out_name		8528559	0					
ANR	8528589	Identifier	out_name		8528559	0					
ANR	8528590	Identifier	out_name		8528559	1					
ANR	8528591	PrimaryExpression	"""<none>"""		8528559	2					
ANR	8528592	ExpressionStatement	"rc = control_init ( & control , global , file_name , out_name )"	3664:3:115574:115630	8528559	3	True				
ANR	8528593	AssignmentExpression	"rc = control_init ( & control , global , file_name , out_name )"		8528559	0		=			
ANR	8528594	Identifier	rc		8528559	0					
ANR	8528595	CallExpression	"control_init ( & control , global , file_name , out_name )"		8528559	1					
ANR	8528596	Callee	control_init		8528559	0					
ANR	8528597	Identifier	control_init		8528559	0					
ANR	8528598	ArgumentList	& control		8528559	1					
ANR	8528599	Argument	& control		8528559	0					
ANR	8528600	UnaryOperationExpression	& control		8528559	0					
ANR	8528601	UnaryOperator	&		8528559	0					
ANR	8528602	Identifier	control		8528559	1					
ANR	8528603	Argument	global		8528559	1					
ANR	8528604	Identifier	global		8528559	0					
ANR	8528605	Argument	file_name		8528559	2					
ANR	8528606	Identifier	file_name		8528559	0					
ANR	8528607	Argument	out_name		8528559	3					
ANR	8528608	Identifier	out_name		8528559	0					
ANR	8528609	IfStatement	if ( rc == 0 )		8528559	4					
ANR	8528610	Condition	rc == 0	3666:7:115640:115646	8528559	0	True				
ANR	8528611	EqualityExpression	rc == 0		8528559	0		==			
ANR	8528612	Identifier	rc		8528559	0					
ANR	8528613	PrimaryExpression	0		8528559	1					
ANR	8528614	ExpressionStatement	rc = read_png ( & control )	3667:6:115655:115678	8528559	1	True				
ANR	8528615	AssignmentExpression	rc = read_png ( & control )		8528559	0		=			
ANR	8528616	Identifier	rc		8528559	0					
ANR	8528617	CallExpression	read_png ( & control )		8528559	1					
ANR	8528618	Callee	read_png		8528559	0					
ANR	8528619	Identifier	read_png		8528559	0					
ANR	8528620	ArgumentList	& control		8528559	1					
ANR	8528621	Argument	& control		8528559	0					
ANR	8528622	UnaryOperationExpression	& control		8528559	0					
ANR	8528623	UnaryOperator	&		8528559	0					
ANR	8528624	Identifier	control		8528559	1					
ANR	8528625	ExpressionStatement	rc |= control_end ( & control )	3669:3:115684:115711	8528559	5	True				
ANR	8528626	AssignmentExpression	rc |= control_end ( & control )		8528559	0		|=			
ANR	8528627	Identifier	rc		8528559	0					
ANR	8528628	CallExpression	control_end ( & control )		8528559	1					
ANR	8528629	Callee	control_end		8528559	0					
ANR	8528630	Identifier	control_end		8528559	0					
ANR	8528631	ArgumentList	& control		8528559	1					
ANR	8528632	Argument	& control		8528559	0					
ANR	8528633	UnaryOperationExpression	& control		8528559	0					
ANR	8528634	UnaryOperator	&		8528559	0					
ANR	8528635	Identifier	control		8528559	1					
ANR	8528636	ReturnStatement	return rc ;	3671:3:115717:115726	8528559	6	True				
ANR	8528637	Identifier	rc		8528559	0					
ANR	8528638	ReturnType	static int		8528559	1					
ANR	8528639	Identifier	one_file		8528559	2					
ANR	8528640	ParameterList	"struct global * global , const char * file_name , const char * out_name"		8528559	3					
ANR	8528641	Parameter	struct global * global	3652:9:115180:115200	8528559	0	True				
ANR	8528642	ParameterType	struct global *		8528559	0					
ANR	8528643	Identifier	global		8528559	1					
ANR	8528644	Parameter	const char * file_name	3652:32:115203:115223	8528559	1	True				
ANR	8528645	ParameterType	const char *		8528559	0					
ANR	8528646	Identifier	file_name		8528559	1					
ANR	8528647	Parameter	const char * out_name	3652:55:115226:115245	8528559	2	True				
ANR	8528648	ParameterType	const char *		8528559	0					
ANR	8528649	Identifier	out_name		8528559	1					
ANR	8528650	CFGEntryNode	ENTRY		8528559		True				
ANR	8528651	CFGExitNode	EXIT		8528559		True				
ANR	8528652	Symbol	rc		8528559						
ANR	8528653	Symbol	control_end		8528559						
ANR	8528654	Symbol	file_name		8528559						
ANR	8528655	Symbol	& control		8528559						
ANR	8528656	Symbol	out_name		8528559						
ANR	8528657	Symbol	global -> verbose		8528559						
ANR	8528658	Symbol	* global		8528559						
ANR	8528659	Symbol	global		8528559						
ANR	8528660	Symbol	control		8528559						
ANR	8528661	Symbol	stderr		8528559						
ANR	8528662	Symbol	control_init		8528559						
ANR	8528663	Symbol	read_png		8528559						
ANR	8528664	Function	usage	3674:0:115731:124860							
ANR	8528665	FunctionDef	usage (const char * prog)		8528664	0					
ANR	8528666	CompoundStatement		3676:0:115767:124860	8528664	0					
ANR	8528667	IdentifierDeclStatement	size_t i ;	3678:3:115848:115856	8528664	0	True				
ANR	8528668	IdentifierDecl	i		8528664	0					
ANR	8528669	IdentifierDeclType	size_t		8528664	0					
ANR	8528670	Identifier	i		8528664	1					
ANR	8528671	Statement	static	3679:3:115861:115866	8528664	1	True				
ANR	8528672	Statement	const	3679:10:115868:115872	8528664	2	True				
ANR	8528673	Statement	char	3679:16:115874:115877	8528664	3	True				
ANR	8528674	Statement	*	3679:21:115879:115879	8528664	4	True				
ANR	8528675	Statement	usage_string	3679:22:115880:115891	8528664	5	True				
ANR	8528676	Statement	[	3679:34:115892:115892	8528664	6	True				
ANR	8528677	Statement	]	3679:35:115893:115893	8528664	7	True				
ANR	8528678	Statement	=	3679:37:115895:115895	8528664	8	True				
ANR	8528679	CompoundStatement		4:39:129:129	8528664	9					
ANR	8528680	Statement	"""  Tests, optimizes and optionally fixes the zlib header in PNG files."""	3680:0:115899:115969	8528664	0	True				
ANR	8528681	Statement	","	3680:71:115970:115970	8528664	1	True				
ANR	8528682	Statement	"""  Optionally, when fixing, strips ancilliary chunks from the file."""	3681:0:115972:116039	8528664	2	True				
ANR	8528683	Statement	","	3681:68:116040:116040	8528664	3	True				
ANR	8528684	Statement	0	3682:0:116042:116042	8528664	4	True				
ANR	8528685	Statement	","	3682:1:116043:116043	8528664	5	True				
ANR	8528686	Statement	"""OPTIONS"""	3683:0:116045:116053	8528664	6	True				
ANR	8528687	Statement	","	3683:9:116054:116054	8528664	7	True				
ANR	8528688	Statement	"""  OPERATION"""	3684:0:116056:116068	8528664	8	True				
ANR	8528689	Statement	","	3684:13:116069:116069	8528664	9	True				
ANR	8528690	Statement	"""      By default files are just checked for readability with a summary of the"""	3685:0:116071:116149	8528664	10	True				
ANR	8528691	Statement	","	3685:79:116150:116150	8528664	11	True				
ANR	8528692	Statement	"""      of zlib issues founds for each compressed chunk and the IDAT stream in"""	3686:0:116152:116229	8528664	12	True				
ANR	8528693	Statement	","	3686:78:116230:116230	8528664	13	True				
ANR	8528694	Statement	"""      the file."""	3687:0:116232:116248	8528664	14	True				
ANR	8528695	Statement	","	3687:17:116249:116249	8528664	15	True				
ANR	8528696	Statement	"""    --optimize (-o):"""	3688:0:116251:116272	8528664	16	True				
ANR	8528697	Statement	","	3688:22:116273:116273	8528664	17	True				
ANR	8528698	Statement	"""      Find the smallest deflate window size for the compressed data."""	3689:0:116275:116344	8528664	18	True				
ANR	8528699	Statement	","	3689:70:116345:116345	8528664	19	True				
ANR	8528700	Statement	"""    --strip=[none|crc|unsafe|unused|transform|color|all]:"""	3690:0:116347:116405	8528664	20	True				
ANR	8528701	Statement	","	3690:59:116406:116406	8528664	21	True				
ANR	8528702	Statement	"""        none (default):   Retain all chunks."""	3691:0:116408:116453	8528664	22	True				
ANR	8528703	Statement	","	3691:46:116454:116454	8528664	23	True				
ANR	8528704	Statement	"""        crc:    Remove chunks with a bad CRC."""	3692:0:116456:116502	8528664	24	True				
ANR	8528705	Statement	","	3692:47:116503:116503	8528664	25	True				
ANR	8528706	Statement	"""        unsafe: Remove chunks that may be unsafe to retain if the image data"""	3693:0:116505:116582	8528664	26	True				
ANR	8528707	Statement	","	3693:78:116583:116583	8528664	27	True				
ANR	8528708	Statement	"""                is modified.  This is set automatically if --max is given but"""	3694:0:116585:116663	8528664	28	True				
ANR	8528709	Statement	","	3694:79:116664:116664	8528664	29	True				
ANR	8528710	Statement	"""                may be cancelled by a later --strip=none."""	3695:0:116666:116724	8528664	30	True				
ANR	8528711	Statement	","	3695:59:116725:116725	8528664	31	True				
ANR	8528712	Statement	"""        unused: Remove chunks not used by libpng when decoding an image."""	3696:0:116727:116800	8528664	32	True				
ANR	8528713	Statement	","	3696:74:116801:116801	8528664	33	True				
ANR	8528714	Statement	"""                This retains any chunks that might be used by libpng image"""	3697:0:116803:116878	8528664	34	True				
ANR	8528715	Statement	","	3697:76:116879:116879	8528664	35	True				
ANR	8528716	Statement	"""                transformations."""	3698:0:116881:116914	8528664	36	True				
ANR	8528717	Statement	","	3698:34:116915:116915	8528664	37	True				
ANR	8528718	Statement	"""        transform: unused+bKGD."""	3699:0:116917:116949	8528664	38	True				
ANR	8528719	Statement	","	3699:33:116950:116950	8528664	39	True				
ANR	8528720	Statement	"""        color:  transform+iCCP and cHRM."""	3700:0:116952:116993	8528664	40	True				
ANR	8528721	Statement	","	3700:42:116994:116994	8528664	41	True				
ANR	8528722	Statement	"""        all:    color+gAMA and sRGB."""	3701:0:116996:117033	8528664	42	True				
ANR	8528723	Statement	","	3701:38:117034:117034	8528664	43	True				
ANR	8528724	Statement	"""      Only ancillary chunks are ever removed.  In addition the tRNS and sBIT"""	3702:0:117036:117113	8528664	44	True				
ANR	8528725	Statement	","	3702:78:117114:117114	8528664	45	True				
ANR	8528726	Statement	"""      chunks are never removed as they affect exact interpretation of the"""	3703:0:117116:117190	8528664	46	True				
ANR	8528727	Statement	","	3703:75:117191:117191	8528664	47	True				
ANR	8528728	Statement	"""      image pixel values.  The following known chunks are treated specially"""	3704:0:117193:117269	8528664	48	True				
ANR	8528729	Statement	","	3704:77:117270:117270	8528664	49	True				
ANR	8528730	Statement	"""      by the above options:"""	3705:0:117272:117300	8528664	50	True				
ANR	8528731	Statement	","	3705:29:117301:117301	8528664	51	True				
ANR	8528732	Statement	"""        gAMA, sRGB [all]: These specify the gamma encoding used for the pixel"""	3706:0:117303:117381	8528664	52	True				
ANR	8528733	Statement	","	3706:79:117382:117382	8528664	53	True				
ANR	8528734	Statement	"""            values."""	3707:0:117384:117404	8528664	54	True				
ANR	8528735	Statement	","	3707:21:117405:117405	8528664	55	True				
ANR	8528736	Statement	"""        cHRM, iCCP [color]: These specify how colors are encoded.  iCCP also"""	3708:0:117407:117484	8528664	56	True				
ANR	8528737	Statement	","	3708:78:117485:117485	8528664	57	True				
ANR	8528738	Statement	"""            specifies the exact encoding of a pixel value; however, in"""	3709:0:117487:117558	8528664	58	True				
ANR	8528739	Statement	","	3709:72:117559:117559	8528664	59	True				
ANR	8528740	Statement	"""            practice most programs will ignore it."""	3710:0:117561:117612	8528664	60	True				
ANR	8528741	Statement	","	3710:52:117613:117613	8528664	61	True				
ANR	8528742	Statement	"""        bKGD [transform]: This is used by libpng transforms."""	3711:0:117615:117676	8528664	62	True				
ANR	8528743	Statement	"""    --max=<number>:"""	3712:0:117678:117698	8528664	63	True				
ANR	8528744	Statement	","	3712:21:117699:117699	8528664	64	True				
ANR	8528745	Statement	"""      Use IDAT chunks sized <number>.  If no number is given the the IDAT"""	3713:0:117701:117775	8528664	65	True				
ANR	8528746	Statement	","	3713:75:117776:117776	8528664	66	True				
ANR	8528747	Statement	"""      chunks will be the maximum size permitted; 2^31-1 bytes.  If the option"""	3714:0:117778:117856	8528664	67	True				
ANR	8528748	Statement	","	3714:79:117857:117857	8528664	68	True				
ANR	8528749	Statement	"""      is omitted the original chunk sizes will not be changed.  When the"""	3715:0:117859:117932	8528664	69	True				
ANR	8528750	Statement	","	3715:74:117933:117933	8528664	70	True				
ANR	8528751	Statement	"""      option is given --strip=unsafe is set automatically. This may be"""	3716:0:117935:118006	8528664	71	True				
ANR	8528752	Statement	","	3716:72:118007:118007	8528664	72	True				
ANR	8528753	Statement	"""      cancelled if you know that all unknown unsafe-to-copy chunks really are"""	3717:0:118009:118087	8528664	73	True				
ANR	8528754	Statement	","	3717:79:118088:118088	8528664	74	True				
ANR	8528755	Statement	"""      safe to copy across an IDAT size change.  This is true of all chunks"""	3718:0:118090:118165	8528664	75	True				
ANR	8528756	Statement	","	3718:76:118166:118166	8528664	76	True				
ANR	8528757	Statement	"""      that have ever been formally proposed as PNG extensions."""	3719:0:118168:118231	8528664	77	True				
ANR	8528758	Statement	","	3719:64:118232:118232	8528664	78	True				
ANR	8528759	Statement	"""  MESSAGES"""	3720:0:118234:118245	8528664	79	True				
ANR	8528760	Statement	","	3720:12:118246:118246	8528664	80	True				
ANR	8528761	Statement	"""      By default the program only outputs summaries for each file."""	3721:0:118248:118315	8528664	81	True				
ANR	8528762	Statement	","	3721:68:118316:118316	8528664	82	True				
ANR	8528763	Statement	"""    --quiet (-q):"""	3722:0:118318:118336	8528664	83	True				
ANR	8528764	Statement	","	3722:19:118337:118337	8528664	84	True				
ANR	8528765	Statement	"""      Do not output the summaries except for files that cannot be read. With"""	3723:0:118339:118416	8528664	85	True				
ANR	8528766	Statement	","	3723:78:118417:118417	8528664	86	True				
ANR	8528767	Statement	"""      two --quiets these are not output either."""	3724:0:118419:118467	8528664	87	True				
ANR	8528768	Statement	","	3724:49:118468:118468	8528664	88	True				
ANR	8528769	Statement	"""    --errors (-e):"""	3725:0:118470:118489	8528664	89	True				
ANR	8528770	Statement	","	3725:20:118490:118490	8528664	90	True				
ANR	8528771	Statement	"""      Output errors from libpng and the program (except too-far-back)."""	3726:0:118492:118563	8528664	91	True				
ANR	8528772	Statement	","	3726:72:118564:118564	8528664	92	True				
ANR	8528773	Statement	"""    --warnings (-w):"""	3727:0:118566:118587	8528664	93	True				
ANR	8528774	Statement	","	3727:22:118588:118588	8528664	94	True				
ANR	8528775	Statement	"""      Output warnings from libpng."""	3728:0:118590:118625	8528664	95	True				
ANR	8528776	Statement	","	3728:36:118626:118626	8528664	96	True				
ANR	8528777	Statement	"""  OUTPUT"""	3729:0:118628:118637	8528664	97	True				
ANR	8528778	Statement	","	3729:10:118638:118638	8528664	98	True				
ANR	8528779	Statement	"""      By default nothing is written."""	3730:0:118640:118677	8528664	99	True				
ANR	8528780	Statement	","	3730:38:118678:118678	8528664	100	True				
ANR	8528781	Statement	"""    --out=<file>:"""	3731:0:118680:118698	8528664	101	True				
ANR	8528782	Statement	","	3731:19:118699:118699	8528664	102	True				
ANR	8528783	Statement	"""      Write the optimized/corrected version of the next PNG to <file>.  This"""	3732:0:118701:118778	8528664	103	True				
ANR	8528784	Statement	","	3732:78:118779:118779	8528664	104	True				
ANR	8528785	Statement	"""      overrides the following two options"""	3733:0:118781:118823	8528664	105	True				
ANR	8528786	Statement	","	3733:43:118824:118824	8528664	106	True				
ANR	8528787	Statement	"""    --suffix=<suffix>:"""	3734:0:118826:118849	8528664	107	True				
ANR	8528788	Statement	","	3734:24:118850:118850	8528664	108	True				
ANR	8528789	Statement	"""      Set --out=<name><suffix> for all following files unless overridden on"""	3735:0:118852:118928	8528664	109	True				
ANR	8528790	Statement	","	3735:77:118929:118929	8528664	110	True				
ANR	8528791	Statement	"""      a per-file basis by explicit --out."""	3736:0:118931:118973	8528664	111	True				
ANR	8528792	Statement	","	3736:43:118974:118974	8528664	112	True				
ANR	8528793	Statement	"""    --prefix=<prefix>:"""	3737:0:118976:118999	8528664	113	True				
ANR	8528794	Statement	","	3737:24:119000:119000	8528664	114	True				
ANR	8528795	Statement	"""      Set --out=<prefix><name> for all the following files unless overridden"""	3738:0:119002:119079	8528664	115	True				
ANR	8528796	Statement	","	3738:78:119080:119080	8528664	116	True				
ANR	8528797	Statement	"""      on a per-file basis by explicit --out."""	3739:0:119082:119127	8528664	117	True				
ANR	8528798	Statement	","	3739:46:119128:119128	8528664	118	True				
ANR	8528799	Statement	"""      These two options can be used together to produce a suffix and prefix."""	3740:0:119130:119207	8528664	119	True				
ANR	8528800	Statement	","	3740:78:119208:119208	8528664	120	True				
ANR	8528801	Statement	"""  INTERNAL OPTIONS"""	3741:0:119210:119229	8528664	121	True				
ANR	8528802	Statement	","	3741:20:119230:119230	8528664	122	True				
ANR	8528803	Statement	"""    --test:"""	3744:0:119280:119292	8528664	123	True				
ANR	8528804	Statement	","	3744:13:119293:119293	8528664	124	True				
ANR	8528805	Statement	"""      Test the PNG_MAXIMUM_INFLATE_WINDOW option.  Setting this disables"""	3745:0:119295:119368	8528664	125	True				
ANR	8528806	Statement	","	3745:74:119369:119369	8528664	126	True				
ANR	8528807	Statement	"""      output as this would produce a broken file."""	3746:0:119371:119421	8528664	127	True				
ANR	8528808	Statement	","	3746:51:119422:119422	8528664	128	True				
ANR	8528809	Statement	0	3749:0:119438:119438	8528664	129	True				
ANR	8528810	Statement	","	3749:1:119439:119439	8528664	130	True				
ANR	8528811	Statement	"""EXIT CODES"""	3750:0:119441:119452	8528664	131	True				
ANR	8528812	Statement	","	3750:12:119453:119453	8528664	132	True				
ANR	8528813	Statement	"""  *** SUBJECT TO CHANGE ***"""	3751:0:119455:119483	8528664	133	True				
ANR	8528814	Statement	","	3751:29:119484:119484	8528664	134	True				
ANR	8528815	Statement	"""  The program exit code is value in the range 0..127 holding a bit mask of"""	3752:0:119486:119561	8528664	135	True				
ANR	8528816	Statement	","	3752:76:119562:119562	8528664	136	True				
ANR	8528817	Statement	"""  the following codes.  Notice that the results for each file are combined"""	3753:0:119564:119639	8528664	137	True				
ANR	8528818	Statement	","	3753:76:119640:119640	8528664	138	True				
ANR	8528819	Statement	"""  together - check one file at a time to get a meaningful error code!"""	3754:0:119642:119712	8528664	139	True				
ANR	8528820	Statement	","	3754:71:119713:119713	8528664	140	True				
ANR	8528821	Statement	"""    0x01: The zlib too-far-back error existed in at least one chunk."""	3755:0:119715:119784	8528664	141	True				
ANR	8528822	Statement	","	3755:70:119785:119785	8528664	142	True				
ANR	8528823	Statement	"""    0x02: At least one chunk had a CRC error."""	3756:0:119787:119833	8528664	143	True				
ANR	8528824	Statement	","	3756:47:119834:119834	8528664	144	True				
ANR	8528825	Statement	"""    0x04: A chunk length was incorrect."""	3757:0:119836:119876	8528664	145	True				
ANR	8528826	Statement	","	3757:41:119877:119877	8528664	146	True				
ANR	8528827	Statement	"""    0x08: The file was truncated."""	3758:0:119879:119913	8528664	147	True				
ANR	8528828	Statement	","	3758:35:119914:119914	8528664	148	True				
ANR	8528829	Statement	"""  Errors less than 16 are potentially recoverable, for a single file if the"""	3759:0:119916:119992	8528664	149	True				
ANR	8528830	Statement	","	3759:77:119993:119993	8528664	150	True				
ANR	8528831	Statement	"""  exit code is less than 16 the file could be read (with corrections if a"""	3760:0:119995:120069	8528664	151	True				
ANR	8528832	Statement	","	3760:75:120070:120070	8528664	152	True				
ANR	8528833	Statement	"""  non-zero code is returned)."""	3761:0:120072:120102	8528664	153	True				
ANR	8528834	Statement	","	3761:31:120103:120103	8528664	154	True				
ANR	8528835	Statement	"""    0x10: The file could not be read, even with corrections."""	3762:0:120105:120166	8528664	155	True				
ANR	8528836	Statement	","	3762:62:120167:120167	8528664	156	True				
ANR	8528837	Statement	"""    0x20: The output file could not be written."""	3763:0:120169:120217	8528664	157	True				
ANR	8528838	Statement	","	3763:49:120218:120218	8528664	158	True				
ANR	8528839	Statement	"""    0x40: An unexpected, potentially internal, error occurred."""	3764:0:120220:120283	8528664	159	True				
ANR	8528840	Statement	","	3764:64:120284:120284	8528664	160	True				
ANR	8528841	Statement	"""  If the command line arguments are incorrect the program exits with exit"""	3765:0:120286:120360	8528664	161	True				
ANR	8528842	Statement	","	3765:75:120361:120361	8528664	162	True				
ANR	8528843	Statement	"""  255.  Some older operating systems only support 7-bit exit codes, on those"""	3766:0:120363:120440	8528664	163	True				
ANR	8528844	Statement	","	3766:78:120441:120441	8528664	164	True				
ANR	8528845	Statement	"""  systems it is suggested that this program is first tested by supplying"""	3767:0:120443:120516	8528664	165	True				
ANR	8528846	Statement	","	3767:74:120517:120517	8528664	166	True				
ANR	8528847	Statement	"""  invalid arguments."""	3768:0:120519:120540	8528664	167	True				
ANR	8528848	Statement	","	3768:22:120541:120541	8528664	168	True				
ANR	8528849	Statement	0	3769:0:120543:120543	8528664	169	True				
ANR	8528850	Statement	","	3769:1:120544:120544	8528664	170	True				
ANR	8528851	Statement	"""DESCRIPTION"""	3770:0:120546:120558	8528664	171	True				
ANR	8528852	Statement	","	3770:13:120559:120559	8528664	172	True				
ANR	8528853	Statement	"""  """	3771:0:120561:120564	8528664	173	True				
ANR	8528854	Statement	PROGRAM_NAME	3771:5:120566:120577	8528664	174	True				
ANR	8528855	Statement	""":"""	3771:18:120579:120581	8528664	175	True				
ANR	8528856	Statement	","	3771:21:120582:120582	8528664	176	True				
ANR	8528857	Statement	"""  checks each PNG file on the command line for errors.  By default errors are"""	3772:0:120584:120662	8528664	177	True				
ANR	8528858	Statement	","	3772:79:120663:120663	8528664	178	True				
ANR	8528859	Statement	"""  not output and the program just returns an exit code and prints a summary."""	3773:0:120665:120742	8528664	179	True				
ANR	8528860	Statement	","	3773:78:120743:120743	8528664	180	True				
ANR	8528861	Statement	"""  With the --quiet (-q) option the summaries are suppressed too and the"""	3774:0:120745:120817	8528664	181	True				
ANR	8528862	Statement	","	3774:73:120818:120818	8528664	182	True				
ANR	8528863	Statement	"""  program only outputs unexpected errors (internal errors and file open"""	3775:0:120820:120892	8528664	183	True				
ANR	8528864	Statement	","	3775:73:120893:120893	8528664	184	True				
ANR	8528865	Statement	"""  errors)."""	3776:0:120895:120906	8528664	185	True				
ANR	8528866	Statement	","	3776:12:120907:120907	8528664	186	True				
ANR	8528867	Statement	"""  Various known problems in PNG files are fixed while the file is being read"""	3777:0:120909:120986	8528664	187	True				
ANR	8528868	Statement	","	3777:78:120987:120987	8528664	188	True				
ANR	8528869	Statement	"""  The exit code says what problems were fixed.  In particular the zlib error:"""	3778:0:120989:121067	8528664	189	True				
ANR	8528870	Statement	","	3778:79:121068:121068	8528664	190	True				
ANR	8528871	Statement	0	3779:0:121070:121070	8528664	191	True				
ANR	8528872	Statement	","	3779:1:121071:121071	8528664	192	True				
ANR	8528873	Statement	"""        \\""invalid distance too far back\\"""""	3780:0:121073:121115	8528664	193	True				
ANR	8528874	Statement	","	3780:43:121116:121116	8528664	194	True				
ANR	8528875	Statement	0	3781:0:121118:121118	8528664	195	True				
ANR	8528876	Statement	","	3781:1:121119:121119	8528664	196	True				
ANR	8528877	Statement	"""  caused by an incorrect optimization of a zlib stream is fixed in any"""	3782:0:121121:121192	8528664	197	True				
ANR	8528878	Statement	","	3782:72:121193:121193	8528664	198	True				
ANR	8528879	Statement	"""  compressed chunk in which it is encountered.  An integrity problem of the"""	3783:0:121195:121271	8528664	199	True				
ANR	8528880	Statement	","	3783:77:121272:121272	8528664	200	True				
ANR	8528881	Statement	"""  PNG stream caused by a bug in libpng which wrote an incorrect chunk length"""	3784:0:121274:121351	8528664	201	True				
ANR	8528882	Statement	","	3784:78:121352:121352	8528664	202	True				
ANR	8528883	Statement	"""  is also fixed.  Chunk CRC errors are automatically fixed up."""	3785:0:121354:121417	8528664	203	True				
ANR	8528884	Statement	","	3785:64:121418:121418	8528664	204	True				
ANR	8528885	Statement	0	3786:0:121420:121420	8528664	205	True				
ANR	8528886	Statement	","	3786:1:121421:121421	8528664	206	True				
ANR	8528887	Statement	"""  Setting one of the \\""OUTPUT\\"" options causes the possibly modified file to"""	3787:0:121423:121500	8528664	207	True				
ANR	8528888	Statement	","	3787:78:121501:121501	8528664	208	True				
ANR	8528889	Statement	"""  be written to a new file."""	3788:0:121503:121531	8528664	209	True				
ANR	8528890	Statement	","	3788:29:121532:121532	8528664	210	True				
ANR	8528891	Statement	0	3789:0:121534:121534	8528664	211	True				
ANR	8528892	Statement	","	3789:1:121535:121535	8528664	212	True				
ANR	8528893	Statement	"""  Notice that some PNG files with the zlib optimization problem can still be"""	3790:0:121537:121614	8528664	213	True				
ANR	8528894	Statement	","	3790:78:121615:121615	8528664	214	True				
ANR	8528895	Statement	"""  read by libpng under some circumstances.  This program will still detect"""	3791:0:121617:121692	8528664	215	True				
ANR	8528896	Statement	","	3791:76:121693:121693	8528664	216	True				
ANR	8528897	Statement	"""  and, if requested, correct the error."""	3792:0:121695:121735	8528664	217	True				
ANR	8528898	Statement	","	3792:41:121736:121736	8528664	218	True				
ANR	8528899	Statement	0	3793:0:121738:121738	8528664	219	True				
ANR	8528900	Statement	","	3793:1:121739:121739	8528664	220	True				
ANR	8528901	Statement	"""  The program will reliably process all files on the command line unless"""	3794:0:121741:121814	8528664	221	True				
ANR	8528902	Statement	","	3794:74:121815:121815	8528664	222	True				
ANR	8528903	Statement	"""  either an invalid argument causes the usage message (this message) to be"""	3795:0:121817:121892	8528664	223	True				
ANR	8528904	Statement	","	3795:76:121893:121893	8528664	224	True				
ANR	8528905	Statement	"""  produced or the program crashes."""	3796:0:121895:121930	8528664	225	True				
ANR	8528906	Statement	","	3796:36:121931:121931	8528664	226	True				
ANR	8528907	Statement	0	3797:0:121933:121933	8528664	227	True				
ANR	8528908	Statement	","	3797:1:121934:121934	8528664	228	True				
ANR	8528909	Statement	"""  The summary lines describe issues encountered with the zlib compressed"""	3798:0:121936:122009	8528664	229	True				
ANR	8528910	Statement	","	3798:74:122010:122010	8528664	230	True				
ANR	8528911	Statement	"""  stream of a chunk.  They have the following format, which is SUBJECT TO"""	3799:0:122012:122086	8528664	231	True				
ANR	8528912	Statement	","	3799:75:122087:122087	8528664	232	True				
ANR	8528913	Statement	"""  CHANGE in the future:"""	3800:0:122089:122113	8528664	233	True				
ANR	8528914	Statement	","	3800:25:122114:122114	8528664	234	True				
ANR	8528915	Statement	0	3801:0:122116:122116	8528664	235	True				
ANR	8528916	Statement	","	3801:1:122117:122117	8528664	236	True				
ANR	8528917	Statement	"""     chunk reason comp-level p1 p2 p3 p4 file"""	3802:0:122119:122165	8528664	237	True				
ANR	8528918	Statement	","	3802:47:122166:122166	8528664	238	True				
ANR	8528919	Statement	0	3803:0:122168:122168	8528664	239	True				
ANR	8528920	Statement	","	3803:1:122169:122169	8528664	240	True				
ANR	8528921	Statement	"""  p1 through p4 vary according to the 'reason'.  There are always 8 space"""	3804:0:122171:122245	8528664	241	True				
ANR	8528922	Statement	","	3804:75:122246:122246	8528664	242	True				
ANR	8528923	Statement	"""  separated fields.  Reasons specific formats are:"""	3805:0:122248:122299	8528664	243	True				
ANR	8528924	Statement	","	3805:52:122300:122300	8528664	244	True				
ANR	8528925	Statement	0	3806:0:122302:122302	8528664	245	True				
ANR	8528926	Statement	","	3806:1:122303:122303	8528664	246	True				
ANR	8528927	Statement	"""     chunk ERR status code read-errno write-errno message file"""	3807:0:122305:122368	8528664	247	True				
ANR	8528928	Statement	","	3807:64:122369:122369	8528664	248	True				
ANR	8528929	Statement	"""     chunk SKP comp-level file-bits zlib-rc compressed message file"""	3808:0:122371:122439	8528664	249	True				
ANR	8528930	Statement	","	3808:69:122440:122440	8528664	250	True				
ANR	8528931	Statement	"""     chunk ??? comp-level file-bits ok-bits compressed uncompress file"""	3809:0:122442:122513	8528664	251	True				
ANR	8528932	Statement	","	3809:72:122514:122514	8528664	252	True				
ANR	8528933	Statement	0	3810:0:122516:122516	8528664	253	True				
ANR	8528934	Statement	","	3810:1:122517:122517	8528664	254	True				
ANR	8528935	Statement	"""  The various fields are"""	3811:0:122519:122544	8528664	255	True				
ANR	8528936	Statement	","	3811:26:122545:122545	8528664	256	True				
ANR	8528937	Statement	0	3812:0:122547:122547	8528664	257	True				
ANR	8528938	Statement	","	3812:1:122548:122548	8528664	258	True				
ANR	8528939	Statement	"""$1 chunk:      The chunk type of a chunk in the file or 'HEAD' if a problem"""	3813:0:122550:122626	8528664	259	True				
ANR	8528940	Statement	","	3813:77:122627:122627	8528664	260	True				
ANR	8528941	Statement	"""               is reported by libpng at the start of the IDAT stream."""	3814:0:122629:122699	8528664	261	True				
ANR	8528942	Statement	","	3814:71:122700:122700	8528664	262	True				
ANR	8528943	Statement	"""$2 reason:     One of:"""	3815:0:122702:122725	8528664	263	True				
ANR	8528944	Statement	","	3815:24:122726:122726	8528664	264	True				
ANR	8528945	Statement	"""          CHK: A zlib header checksum was detected and fixed."""	3816:0:122728:122790	8528664	265	True				
ANR	8528946	Statement	","	3816:63:122791:122791	8528664	266	True				
ANR	8528947	Statement	"""          TFB: The zlib too far back error was detected and fixed."""	3817:0:122793:122860	8528664	267	True				
ANR	8528948	Statement	","	3817:68:122861:122861	8528664	268	True				
ANR	8528949	Statement	"""          OK : No errors were detected in the zlib stream and optimization"""	3818:0:122863:122938	8528664	269	True				
ANR	8528950	Statement	","	3818:76:122939:122939	8528664	270	True				
ANR	8528951	Statement	"""               was not requested, or was not possible."""	3819:0:122941:122996	8528664	271	True				
ANR	8528952	Statement	","	3819:56:122997:122997	8528664	272	True				
ANR	8528953	Statement	"""          OPT: The zlib stream window bits value could be improved (and was)."""	3820:0:122999:123077	8528664	273	True				
ANR	8528954	Statement	","	3820:79:123078:123078	8528664	274	True				
ANR	8528955	Statement	"""          SKP: The chunk was skipped because of a zlib issue (zlib-rc) with"""	3821:0:123080:123156	8528664	275	True				
ANR	8528956	Statement	","	3821:77:123157:123157	8528664	276	True				
ANR	8528957	Statement	"""               explanation 'message'"""	3822:0:123159:123196	8528664	277	True				
ANR	8528958	Statement	","	3822:38:123197:123197	8528664	278	True				
ANR	8528959	Statement	"""          ERR: The read of the file was aborted.  The parameters explain why."""	3823:0:123199:123277	8528664	279	True				
ANR	8528960	Statement	","	3823:79:123278:123278	8528664	280	True				
ANR	8528961	Statement	"""$3 status:     For 'ERR' the accumulated status code from 'EXIT CODES' above."""	3824:0:123280:123358	8528664	281	True				
ANR	8528962	Statement	","	3824:79:123359:123359	8528664	282	True				
ANR	8528963	Statement	"""               This is printed as a 2 digit hexadecimal value"""	3825:0:123361:123423	8528664	283	True				
ANR	8528964	Statement	","	3825:63:123424:123424	8528664	284	True				
ANR	8528965	Statement	"""   comp-level: The recorded compression level (FLEVEL) of a zlib stream"""	3826:0:123426:123498	8528664	285	True				
ANR	8528966	Statement	","	3826:73:123499:123499	8528664	286	True				
ANR	8528967	Statement	"""               expressed as a string {supfast,stdfast,default,maximum}"""	3827:0:123501:123572	8528664	287	True				
ANR	8528968	Statement	","	3827:72:123573:123573	8528664	288	True				
ANR	8528969	Statement	"""$4 code:       The file exit code; where stop was called, as a fairly terse"""	3828:0:123575:123651	8528664	289	True				
ANR	8528970	Statement	","	3828:77:123652:123652	8528664	290	True				
ANR	8528971	Statement	"""               string {warning,libpng,zlib,invalid,read,write,unexpected}."""	3829:0:123654:123729	8528664	291	True				
ANR	8528972	Statement	","	3829:76:123730:123730	8528664	292	True				
ANR	8528973	Statement	"""   file-bits:  The zlib window bits recorded in the file."""	3830:0:123732:123790	8528664	293	True				
ANR	8528974	Statement	","	3830:59:123791:123791	8528664	294	True				
ANR	8528975	Statement	"""$5 read-errno: A system errno value from a read translated by strerror(3)."""	3831:0:123793:123868	8528664	295	True				
ANR	8528976	Statement	","	3831:76:123869:123869	8528664	296	True				
ANR	8528977	Statement	"""   zlib-rc:    A zlib return code as a string (see zlib.h)."""	3832:0:123871:123931	8528664	297	True				
ANR	8528978	Statement	","	3832:61:123932:123932	8528664	298	True				
ANR	8528979	Statement	"""   ok-bits:    The smallest zlib window bits value that works."""	3833:0:123934:123997	8528664	299	True				
ANR	8528980	Statement	","	3833:64:123998:123998	8528664	300	True				
ANR	8528981	Statement	"""$6 write-errno:A system errno value from a write translated by strerror(3)."""	3834:0:124000:124076	8528664	301	True				
ANR	8528982	Statement	","	3834:77:124077:124077	8528664	302	True				
ANR	8528983	Statement	"""   compressed: The count of compressed bytes in the zlib stream, when the"""	3835:0:124079:124153	8528664	303	True				
ANR	8528984	Statement	","	3835:75:124154:124154	8528664	304	True				
ANR	8528985	Statement	"""               reason is 'SKP'; this is a count of the bytes read from the"""	3836:0:124156:124231	8528664	305	True				
ANR	8528986	Statement	","	3836:76:124232:124232	8528664	306	True				
ANR	8528987	Statement	"""               stream when the fatal error was encountered."""	3837:0:124234:124294	8528664	307	True				
ANR	8528988	Statement	","	3837:61:124295:124295	8528664	308	True				
ANR	8528989	Statement	"""$7 message:    An error message (spaces replaced by _, as in all parameters),"""	3838:0:124297:124375	8528664	309	True				
ANR	8528990	Statement	","	3838:79:124376:124376	8528664	310	True				
ANR	8528991	Statement	"""   uncompress: The count of bytes from uncompressing the zlib stream; this"""	3839:0:124378:124453	8528664	311	True				
ANR	8528992	Statement	","	3839:76:124454:124454	8528664	312	True				
ANR	8528993	Statement	"""               may not be the same as the number of bytes in the image."""	3840:0:124456:124528	8528664	313	True				
ANR	8528994	Statement	","	3840:73:124529:124529	8528664	314	True				
ANR	8528995	Statement	"""$8 file:       The name of the file (this may contain spaces)."""	3841:0:124531:124594	8528664	315	True				
ANR	8528996	Statement	","	3841:64:124595:124595	8528664	316	True				
ANR	8528997	ExpressionStatement		3842:1:124598:124598	8528664	10	True				
ANR	8528998	ExpressionStatement	"fprintf ( stderr , ""Usage: %s {[options] png-file}\\n"" , prog )"	3844:3:124604:124661	8528664	11	True				
ANR	8528999	CallExpression	"fprintf ( stderr , ""Usage: %s {[options] png-file}\\n"" , prog )"		8528664	0					
ANR	8529000	Callee	fprintf		8528664	0					
ANR	8529001	Identifier	fprintf		8528664	0					
ANR	8529002	ArgumentList	stderr		8528664	1					
ANR	8529003	Argument	stderr		8528664	0					
ANR	8529004	Identifier	stderr		8528664	0					
ANR	8529005	Argument	"""Usage: %s {[options] png-file}\\n"""		8528664	1					
ANR	8529006	PrimaryExpression	"""Usage: %s {[options] png-file}\\n"""		8528664	0					
ANR	8529007	Argument	prog		8528664	2					
ANR	8529008	Identifier	prog		8528664	0					
ANR	8529009	ForStatement	for ( i = 0 ; i < ( sizeof usage_string ) / ( sizeof usage_string [ 0 ] ) ; ++ i )		8528664	12					
ANR	8529010	ForInit	i = 0 ;	3846:8:124672:124675	8528664	0	True				
ANR	8529011	AssignmentExpression	i = 0		8528664	0		=			
ANR	8529012	Identifier	i		8528664	0					
ANR	8529013	PrimaryExpression	0		8528664	1					
ANR	8529014	Condition	i < ( sizeof usage_string ) / ( sizeof usage_string [ 0 ] )	3846:13:124677:124726	8528664	1	True				
ANR	8529015	RelationalExpression	i < ( sizeof usage_string ) / ( sizeof usage_string [ 0 ] )		8528664	0		<			
ANR	8529016	Identifier	i		8528664	0					
ANR	8529017	MultiplicativeExpression	( sizeof usage_string ) / ( sizeof usage_string [ 0 ] )		8528664	1		/			
ANR	8529018	SizeofExpression	sizeof usage_string		8528664	0					
ANR	8529019	Sizeof	sizeof		8528664	0					
ANR	8529020	Identifier	usage_string		8528664	1					
ANR	8529021	SizeofExpression	sizeof usage_string [ 0 ]		8528664	1					
ANR	8529022	Sizeof	sizeof		8528664	0					
ANR	8529023	ArrayIndexing	usage_string [ 0 ]		8528664	1					
ANR	8529024	Identifier	usage_string		8528664	0					
ANR	8529025	PrimaryExpression	0		8528664	1					
ANR	8529026	UnaryExpression	++ i	3846:65:124729:124731	8528664	2	True				
ANR	8529027	IncDec	++		8528664	0					
ANR	8529028	Identifier	i		8528664	1					
ANR	8529029	CompoundStatement		172:3:8969:8969	8528664	3					
ANR	8529030	IfStatement	if ( usage_string [ i ] != 0 )		8528664	0					
ANR	8529031	Condition	usage_string [ i ] != 0	3848:10:124749:124768	8528664	0	True				
ANR	8529032	EqualityExpression	usage_string [ i ] != 0		8528664	0		!=			
ANR	8529033	ArrayIndexing	usage_string [ i ]		8528664	0					
ANR	8529034	Identifier	usage_string		8528664	0					
ANR	8529035	Identifier	i		8528664	1					
ANR	8529036	PrimaryExpression	0		8528664	1					
ANR	8529037	ExpressionStatement	"fputs ( usage_string [ i ] , stderr )"	3849:9:124780:124810	8528664	1	True				
ANR	8529038	CallExpression	"fputs ( usage_string [ i ] , stderr )"		8528664	0					
ANR	8529039	Callee	fputs		8528664	0					
ANR	8529040	Identifier	fputs		8528664	0					
ANR	8529041	ArgumentList	usage_string [ i ]		8528664	1					
ANR	8529042	Argument	usage_string [ i ]		8528664	0					
ANR	8529043	ArrayIndexing	usage_string [ i ]		8528664	0					
ANR	8529044	Identifier	usage_string		8528664	0					
ANR	8529045	Identifier	i		8528664	1					
ANR	8529046	Argument	stderr		8528664	1					
ANR	8529047	Identifier	stderr		8528664	0					
ANR	8529048	ExpressionStatement	"fputc ( '\\n' , stderr )"	3851:6:124819:124838	8528664	1	True				
ANR	8529049	CallExpression	"fputc ( '\\n' , stderr )"		8528664	0					
ANR	8529050	Callee	fputc		8528664	0					
ANR	8529051	Identifier	fputc		8528664	0					
ANR	8529052	ArgumentList	'\\n'		8528664	1					
ANR	8529053	Argument	'\\n'		8528664	0					
ANR	8529054	PrimaryExpression	'\\n'		8528664	0					
ANR	8529055	Argument	stderr		8528664	1					
ANR	8529056	Identifier	stderr		8528664	0					
ANR	8529057	ExpressionStatement	exit ( 255 )	3854:3:124849:124858	8528664	13	True				
ANR	8529058	CallExpression	exit ( 255 )		8528664	0					
ANR	8529059	Callee	exit		8528664	0					
ANR	8529060	Identifier	exit		8528664	0					
ANR	8529061	ArgumentList	255		8528664	1					
ANR	8529062	Argument	255		8528664	0					
ANR	8529063	PrimaryExpression	255		8528664	0					
ANR	8529064	ReturnType	static void		8528664	1					
ANR	8529065	Identifier	usage		8528664	2					
ANR	8529066	ParameterList	const char * prog		8528664	3					
ANR	8529067	Parameter	const char * prog	3675:6:115749:115764	8528664	0	True				
ANR	8529068	ParameterType	const char *		8528664	0					
ANR	8529069	Identifier	prog		8528664	1					
ANR	8529070	CFGEntryNode	ENTRY		8528664		True				
ANR	8529071	CFGExitNode	EXIT		8528664		True				
ANR	8529072	Symbol	* i		8528664						
ANR	8529073	Symbol	i		8528664						
ANR	8529074	Symbol	usage_string		8528664						
ANR	8529075	Symbol	stderr		8528664						
ANR	8529076	Symbol	* usage_string		8528664						
ANR	8529077	Symbol	prog		8528664						
ANR	8529078	Function	main	3857:0:124863:129171							
ANR	8529079	FunctionDef	"main (int argc , const char * * argv)"		8529078	0					
ANR	8529080	CompoundStatement		3859:0:124901:129171	8529078	0					
ANR	8529081	IdentifierDeclStatement	char temp_name [ FILENAME_MAX + 1 ] ;	3860:3:124906:124936	8529078	0	True				
ANR	8529082	IdentifierDecl	temp_name [ FILENAME_MAX + 1 ]		8529078	0					
ANR	8529083	IdentifierDeclType	char [ FILENAME_MAX + 1 ]		8529078	0					
ANR	8529084	Identifier	temp_name		8529078	1					
ANR	8529085	AdditiveExpression	FILENAME_MAX + 1		8529078	2		+			
ANR	8529086	Identifier	FILENAME_MAX		8529078	0					
ANR	8529087	PrimaryExpression	1		8529078	1					
ANR	8529088	IdentifierDeclStatement	const char * prog = * argv ;	3861:3:124941:124967	8529078	1	True				
ANR	8529089	IdentifierDecl	* prog = * argv		8529078	0					
ANR	8529090	IdentifierDeclType	const char *		8529078	0					
ANR	8529091	Identifier	prog		8529078	1					
ANR	8529092	AssignmentExpression	* prog = * argv		8529078	2		=			
ANR	8529093	Identifier	prog		8529078	0					
ANR	8529094	UnaryOperationExpression	* argv		8529078	1					
ANR	8529095	UnaryOperator	*		8529078	0					
ANR	8529096	Identifier	argv		8529078	1					
ANR	8529097	IdentifierDeclStatement	const char * outfile = NULL ;	3862:3:124972:125000	8529078	2	True				
ANR	8529098	IdentifierDecl	* outfile = NULL		8529078	0					
ANR	8529099	IdentifierDeclType	const char *		8529078	0					
ANR	8529100	Identifier	outfile		8529078	1					
ANR	8529101	AssignmentExpression	* outfile = NULL		8529078	2		=			
ANR	8529102	Identifier	NULL		8529078	0					
ANR	8529103	Identifier	NULL		8529078	1					
ANR	8529104	IdentifierDeclStatement	const char * suffix = NULL ;	3863:3:125005:125032	8529078	3	True				
ANR	8529105	IdentifierDecl	* suffix = NULL		8529078	0					
ANR	8529106	IdentifierDeclType	const char *		8529078	0					
ANR	8529107	Identifier	suffix		8529078	1					
ANR	8529108	AssignmentExpression	* suffix = NULL		8529078	2		=			
ANR	8529109	Identifier	NULL		8529078	0					
ANR	8529110	Identifier	NULL		8529078	1					
ANR	8529111	IdentifierDeclStatement	const char * prefix = NULL ;	3864:3:125037:125064	8529078	4	True				
ANR	8529112	IdentifierDecl	* prefix = NULL		8529078	0					
ANR	8529113	IdentifierDeclType	const char *		8529078	0					
ANR	8529114	Identifier	prefix		8529078	1					
ANR	8529115	AssignmentExpression	* prefix = NULL		8529078	2		=			
ANR	8529116	Identifier	NULL		8529078	0					
ANR	8529117	Identifier	NULL		8529078	1					
ANR	8529118	IdentifierDeclStatement	int done = 0 ;	3865:3:125069:125091	8529078	5	True				
ANR	8529119	IdentifierDecl	done = 0		8529078	0					
ANR	8529120	IdentifierDeclType	int		8529078	0					
ANR	8529121	Identifier	done		8529078	1					
ANR	8529122	AssignmentExpression	done = 0		8529078	2		=			
ANR	8529123	Identifier	done		8529078	0					
ANR	8529124	PrimaryExpression	0		8529078	1					
ANR	8529125	IdentifierDeclStatement	struct global global ;	3866:3:125136:125156	8529078	6	True				
ANR	8529126	IdentifierDecl	global		8529078	0					
ANR	8529127	IdentifierDeclType	struct global		8529078	0					
ANR	8529128	Identifier	global		8529078	1					
ANR	8529129	ExpressionStatement	global_init ( & global )	3868:3:125162:125182	8529078	7	True				
ANR	8529130	CallExpression	global_init ( & global )		8529078	0					
ANR	8529131	Callee	global_init		8529078	0					
ANR	8529132	Identifier	global_init		8529078	0					
ANR	8529133	ArgumentList	& global		8529078	1					
ANR	8529134	Argument	& global		8529078	0					
ANR	8529135	UnaryOperationExpression	& global		8529078	0					
ANR	8529136	UnaryOperator	&		8529078	0					
ANR	8529137	Identifier	global		8529078	1					
ANR	8529138	WhileStatement	while ( -- argc > 0 )		8529078	8					
ANR	8529139	Condition	-- argc > 0	3870:10:125195:125204	8529078	0	True				
ANR	8529140	RelationalExpression	-- argc > 0		8529078	0		>			
ANR	8529141	UnaryExpression	-- argc		8529078	0					
ANR	8529142	IncDec	--		8529078	0					
ANR	8529143	Identifier	argc		8529078	1					
ANR	8529144	PrimaryExpression	0		8529078	1					
ANR	8529145	CompoundStatement		13:3:308:308	8529078	1					
ANR	8529146	ExpressionStatement	++ argv	3872:6:125218:125224	8529078	0	True				
ANR	8529147	UnaryExpression	++ argv		8529078	0					
ANR	8529148	IncDec	++		8529078	0					
ANR	8529149	Identifier	argv		8529078	1					
ANR	8529150	IfStatement	"if ( strcmp ( * argv , ""--debug"" ) == 0 )"		8529078	1					
ANR	8529151	Condition	"strcmp ( * argv , ""--debug"" ) == 0"	3874:10:125237:125265	8529078	0	True				
ANR	8529152	EqualityExpression	"strcmp ( * argv , ""--debug"" ) == 0"		8529078	0		==			
ANR	8529153	CallExpression	"strcmp ( * argv , ""--debug"" )"		8529078	0					
ANR	8529154	Callee	strcmp		8529078	0					
ANR	8529155	Identifier	strcmp		8529078	0					
ANR	8529156	ArgumentList	* argv		8529078	1					
ANR	8529157	Argument	* argv		8529078	0					
ANR	8529158	UnaryOperationExpression	* argv		8529078	0					
ANR	8529159	UnaryOperator	*		8529078	0					
ANR	8529160	Identifier	argv		8529078	1					
ANR	8529161	Argument	"""--debug"""		8529078	1					
ANR	8529162	PrimaryExpression	"""--debug"""		8529078	0					
ANR	8529163	PrimaryExpression	0		8529078	1					
ANR	8529164	CompoundStatement		17:6:372:372	8529078	1					
ANR	8529165	ExpressionStatement	global . errors = global . warnings = 1	3877:9:125328:125363	8529078	0	True				
ANR	8529166	AssignmentExpression	global . errors = global . warnings = 1		8529078	0		=			
ANR	8529167	MemberAccess	global . errors		8529078	0					
ANR	8529168	Identifier	global		8529078	0					
ANR	8529169	Identifier	errors		8529078	1					
ANR	8529170	AssignmentExpression	global . warnings = 1		8529078	1		=			
ANR	8529171	MemberAccess	global . warnings		8529078	0					
ANR	8529172	Identifier	global		8529078	0					
ANR	8529173	Identifier	warnings		8529078	1					
ANR	8529174	PrimaryExpression	1		8529078	1					
ANR	8529175	ExpressionStatement	global . quiet = 0	3878:9:125374:125390	8529078	1	True				
ANR	8529176	AssignmentExpression	global . quiet = 0		8529078	0		=			
ANR	8529177	MemberAccess	global . quiet		8529078	0					
ANR	8529178	Identifier	global		8529078	0					
ANR	8529179	Identifier	quiet		8529078	1					
ANR	8529180	PrimaryExpression	0		8529078	1					
ANR	8529181	ExpressionStatement	global . verbose = 7	3879:9:125401:125419	8529078	2	True				
ANR	8529182	AssignmentExpression	global . verbose = 7		8529078	0		=			
ANR	8529183	MemberAccess	global . verbose		8529078	0					
ANR	8529184	Identifier	global		8529078	0					
ANR	8529185	Identifier	verbose		8529078	1					
ANR	8529186	PrimaryExpression	7		8529078	1					
ANR	8529187	ElseStatement	else		8529078	0					
ANR	8529188	IfStatement	"if ( strncmp ( * argv , ""--max="" , 6 ) == 0 )"		8529078	0					
ANR	8529189	Condition	"strncmp ( * argv , ""--max="" , 6 ) == 0"	3882:15:125445:125476	8529078	0	True				
ANR	8529190	EqualityExpression	"strncmp ( * argv , ""--max="" , 6 ) == 0"		8529078	0		==			
ANR	8529191	CallExpression	"strncmp ( * argv , ""--max="" , 6 )"		8529078	0					
ANR	8529192	Callee	strncmp		8529078	0					
ANR	8529193	Identifier	strncmp		8529078	0					
ANR	8529194	ArgumentList	* argv		8529078	1					
ANR	8529195	Argument	* argv		8529078	0					
ANR	8529196	UnaryOperationExpression	* argv		8529078	0					
ANR	8529197	UnaryOperator	*		8529078	0					
ANR	8529198	Identifier	argv		8529078	1					
ANR	8529199	Argument	"""--max="""		8529078	1					
ANR	8529200	PrimaryExpression	"""--max="""		8529078	0					
ANR	8529201	Argument	6		8529078	2					
ANR	8529202	PrimaryExpression	6		8529078	0					
ANR	8529203	PrimaryExpression	0		8529078	1					
ANR	8529204	CompoundStatement		25:6:583:583	8529078	1					
ANR	8529205	ExpressionStatement	global . idat_max = ( png_uint_32 ) atol ( 6 + * argv )	3884:9:125496:125540	8529078	0	True				
ANR	8529206	AssignmentExpression	global . idat_max = ( png_uint_32 ) atol ( 6 + * argv )		8529078	0		=			
ANR	8529207	MemberAccess	global . idat_max		8529078	0					
ANR	8529208	Identifier	global		8529078	0					
ANR	8529209	Identifier	idat_max		8529078	1					
ANR	8529210	CastExpression	( png_uint_32 ) atol ( 6 + * argv )		8529078	1					
ANR	8529211	CastTarget	png_uint_32		8529078	0					
ANR	8529212	CallExpression	atol ( 6 + * argv )		8529078	1					
ANR	8529213	Callee	atol		8529078	0					
ANR	8529214	Identifier	atol		8529078	0					
ANR	8529215	ArgumentList	6 + * argv		8529078	1					
ANR	8529216	Argument	6 + * argv		8529078	0					
ANR	8529217	AdditiveExpression	6 + * argv		8529078	0		+			
ANR	8529218	PrimaryExpression	6		8529078	0					
ANR	8529219	UnaryOperationExpression	* argv		8529078	1					
ANR	8529220	UnaryOperator	*		8529078	0					
ANR	8529221	Identifier	argv		8529078	1					
ANR	8529222	IfStatement	if ( global . skip < SKIP_UNSAFE )		8529078	1					
ANR	8529223	Condition	global . skip < SKIP_UNSAFE	3886:13:125556:125580	8529078	0	True				
ANR	8529224	RelationalExpression	global . skip < SKIP_UNSAFE		8529078	0		<			
ANR	8529225	MemberAccess	global . skip		8529078	0					
ANR	8529226	Identifier	global		8529078	0					
ANR	8529227	Identifier	skip		8529078	1					
ANR	8529228	Identifier	SKIP_UNSAFE		8529078	1					
ANR	8529229	ExpressionStatement	global . skip = SKIP_UNSAFE	3887:12:125595:125620	8529078	1	True				
ANR	8529230	AssignmentExpression	global . skip = SKIP_UNSAFE		8529078	0		=			
ANR	8529231	MemberAccess	global . skip		8529078	0					
ANR	8529232	Identifier	global		8529078	0					
ANR	8529233	Identifier	skip		8529078	1					
ANR	8529234	Identifier	SKIP_UNSAFE		8529078	1					
ANR	8529235	ElseStatement	else		8529078	0					
ANR	8529236	IfStatement	"if ( strcmp ( * argv , ""--max"" ) == 0 )"		8529078	0					
ANR	8529237	Condition	"strcmp ( * argv , ""--max"" ) == 0"	3890:15:125646:125672	8529078	0	True				
ANR	8529238	EqualityExpression	"strcmp ( * argv , ""--max"" ) == 0"		8529078	0		==			
ANR	8529239	CallExpression	"strcmp ( * argv , ""--max"" )"		8529078	0					
ANR	8529240	Callee	strcmp		8529078	0					
ANR	8529241	Identifier	strcmp		8529078	0					
ANR	8529242	ArgumentList	* argv		8529078	1					
ANR	8529243	Argument	* argv		8529078	0					
ANR	8529244	UnaryOperationExpression	* argv		8529078	0					
ANR	8529245	UnaryOperator	*		8529078	0					
ANR	8529246	Identifier	argv		8529078	1					
ANR	8529247	Argument	"""--max"""		8529078	1					
ANR	8529248	PrimaryExpression	"""--max"""		8529078	0					
ANR	8529249	PrimaryExpression	0		8529078	1					
ANR	8529250	CompoundStatement		33:6:779:779	8529078	1					
ANR	8529251	ExpressionStatement	global . idat_max = 0x7fffffff	3892:9:125692:125720	8529078	0	True				
ANR	8529252	AssignmentExpression	global . idat_max = 0x7fffffff		8529078	0		=			
ANR	8529253	MemberAccess	global . idat_max		8529078	0					
ANR	8529254	Identifier	global		8529078	0					
ANR	8529255	Identifier	idat_max		8529078	1					
ANR	8529256	PrimaryExpression	0x7fffffff		8529078	1					
ANR	8529257	IfStatement	if ( global . skip < SKIP_UNSAFE )		8529078	1					
ANR	8529258	Condition	global . skip < SKIP_UNSAFE	3894:13:125736:125760	8529078	0	True				
ANR	8529259	RelationalExpression	global . skip < SKIP_UNSAFE		8529078	0		<			
ANR	8529260	MemberAccess	global . skip		8529078	0					
ANR	8529261	Identifier	global		8529078	0					
ANR	8529262	Identifier	skip		8529078	1					
ANR	8529263	Identifier	SKIP_UNSAFE		8529078	1					
ANR	8529264	ExpressionStatement	global . skip = SKIP_UNSAFE	3895:12:125775:125800	8529078	1	True				
ANR	8529265	AssignmentExpression	global . skip = SKIP_UNSAFE		8529078	0		=			
ANR	8529266	MemberAccess	global . skip		8529078	0					
ANR	8529267	Identifier	global		8529078	0					
ANR	8529268	Identifier	skip		8529078	1					
ANR	8529269	Identifier	SKIP_UNSAFE		8529078	1					
ANR	8529270	ElseStatement	else		8529078	0					
ANR	8529271	IfStatement	"if ( strcmp ( * argv , ""--optimize"" ) == 0 || strcmp ( * argv , ""-o"" ) == 0 )"		8529078	0					
ANR	8529272	Condition	"strcmp ( * argv , ""--optimize"" ) == 0 || strcmp ( * argv , ""-o"" ) == 0"	3898:15:125826:125885	8529078	0	True				
ANR	8529273	OrExpression	"strcmp ( * argv , ""--optimize"" ) == 0 || strcmp ( * argv , ""-o"" ) == 0"		8529078	0		||			
ANR	8529274	EqualityExpression	"strcmp ( * argv , ""--optimize"" ) == 0"		8529078	0		==			
ANR	8529275	CallExpression	"strcmp ( * argv , ""--optimize"" )"		8529078	0					
ANR	8529276	Callee	strcmp		8529078	0					
ANR	8529277	Identifier	strcmp		8529078	0					
ANR	8529278	ArgumentList	* argv		8529078	1					
ANR	8529279	Argument	* argv		8529078	0					
ANR	8529280	UnaryOperationExpression	* argv		8529078	0					
ANR	8529281	UnaryOperator	*		8529078	0					
ANR	8529282	Identifier	argv		8529078	1					
ANR	8529283	Argument	"""--optimize"""		8529078	1					
ANR	8529284	PrimaryExpression	"""--optimize"""		8529078	0					
ANR	8529285	PrimaryExpression	0		8529078	1					
ANR	8529286	EqualityExpression	"strcmp ( * argv , ""-o"" ) == 0"		8529078	1		==			
ANR	8529287	CallExpression	"strcmp ( * argv , ""-o"" )"		8529078	0					
ANR	8529288	Callee	strcmp		8529078	0					
ANR	8529289	Identifier	strcmp		8529078	0					
ANR	8529290	ArgumentList	* argv		8529078	1					
ANR	8529291	Argument	* argv		8529078	0					
ANR	8529292	UnaryOperationExpression	* argv		8529078	0					
ANR	8529293	UnaryOperator	*		8529078	0					
ANR	8529294	Identifier	argv		8529078	1					
ANR	8529295	Argument	"""-o"""		8529078	1					
ANR	8529296	PrimaryExpression	"""-o"""		8529078	0					
ANR	8529297	PrimaryExpression	0		8529078	1					
ANR	8529298	ExpressionStatement	global . optimize_zlib = 1	3899:9:125897:125921	8529078	1	True				
ANR	8529299	AssignmentExpression	global . optimize_zlib = 1		8529078	0		=			
ANR	8529300	MemberAccess	global . optimize_zlib		8529078	0					
ANR	8529301	Identifier	global		8529078	0					
ANR	8529302	Identifier	optimize_zlib		8529078	1					
ANR	8529303	PrimaryExpression	1		8529078	1					
ANR	8529304	ElseStatement	else		8529078	0					
ANR	8529305	IfStatement	"if ( strncmp ( * argv , ""--out="" , 6 ) == 0 )"		8529078	0					
ANR	8529306	Condition	"strncmp ( * argv , ""--out="" , 6 ) == 0"	3901:15:125939:125970	8529078	0	True				
ANR	8529307	EqualityExpression	"strncmp ( * argv , ""--out="" , 6 ) == 0"		8529078	0		==			
ANR	8529308	CallExpression	"strncmp ( * argv , ""--out="" , 6 )"		8529078	0					
ANR	8529309	Callee	strncmp		8529078	0					
ANR	8529310	Identifier	strncmp		8529078	0					
ANR	8529311	ArgumentList	* argv		8529078	1					
ANR	8529312	Argument	* argv		8529078	0					
ANR	8529313	UnaryOperationExpression	* argv		8529078	0					
ANR	8529314	UnaryOperator	*		8529078	0					
ANR	8529315	Identifier	argv		8529078	1					
ANR	8529316	Argument	"""--out="""		8529078	1					
ANR	8529317	PrimaryExpression	"""--out="""		8529078	0					
ANR	8529318	Argument	6		8529078	2					
ANR	8529319	PrimaryExpression	6		8529078	0					
ANR	8529320	PrimaryExpression	0		8529078	1					
ANR	8529321	ExpressionStatement	outfile = 6 + * argv	3902:9:125982:125999	8529078	1	True				
ANR	8529322	AssignmentExpression	outfile = 6 + * argv		8529078	0		=			
ANR	8529323	Identifier	outfile		8529078	0					
ANR	8529324	AdditiveExpression	6 + * argv		8529078	1		+			
ANR	8529325	PrimaryExpression	6		8529078	0					
ANR	8529326	UnaryOperationExpression	* argv		8529078	1					
ANR	8529327	UnaryOperator	*		8529078	0					
ANR	8529328	Identifier	argv		8529078	1					
ANR	8529329	ElseStatement	else		8529078	0					
ANR	8529330	IfStatement	"if ( strncmp ( * argv , ""--suffix="" , 9 ) == 0 )"		8529078	0					
ANR	8529331	Condition	"strncmp ( * argv , ""--suffix="" , 9 ) == 0"	3904:15:126017:126051	8529078	0	True				
ANR	8529332	EqualityExpression	"strncmp ( * argv , ""--suffix="" , 9 ) == 0"		8529078	0		==			
ANR	8529333	CallExpression	"strncmp ( * argv , ""--suffix="" , 9 )"		8529078	0					
ANR	8529334	Callee	strncmp		8529078	0					
ANR	8529335	Identifier	strncmp		8529078	0					
ANR	8529336	ArgumentList	* argv		8529078	1					
ANR	8529337	Argument	* argv		8529078	0					
ANR	8529338	UnaryOperationExpression	* argv		8529078	0					
ANR	8529339	UnaryOperator	*		8529078	0					
ANR	8529340	Identifier	argv		8529078	1					
ANR	8529341	Argument	"""--suffix="""		8529078	1					
ANR	8529342	PrimaryExpression	"""--suffix="""		8529078	0					
ANR	8529343	Argument	9		8529078	2					
ANR	8529344	PrimaryExpression	9		8529078	0					
ANR	8529345	PrimaryExpression	0		8529078	1					
ANR	8529346	ExpressionStatement	suffix = 9 + * argv	3905:9:126063:126079	8529078	1	True				
ANR	8529347	AssignmentExpression	suffix = 9 + * argv		8529078	0		=			
ANR	8529348	Identifier	suffix		8529078	0					
ANR	8529349	AdditiveExpression	9 + * argv		8529078	1		+			
ANR	8529350	PrimaryExpression	9		8529078	0					
ANR	8529351	UnaryOperationExpression	* argv		8529078	1					
ANR	8529352	UnaryOperator	*		8529078	0					
ANR	8529353	Identifier	argv		8529078	1					
ANR	8529354	ElseStatement	else		8529078	0					
ANR	8529355	IfStatement	"if ( strncmp ( * argv , ""--prefix="" , 9 ) == 0 )"		8529078	0					
ANR	8529356	Condition	"strncmp ( * argv , ""--prefix="" , 9 ) == 0"	3907:15:126097:126131	8529078	0	True				
ANR	8529357	EqualityExpression	"strncmp ( * argv , ""--prefix="" , 9 ) == 0"		8529078	0		==			
ANR	8529358	CallExpression	"strncmp ( * argv , ""--prefix="" , 9 )"		8529078	0					
ANR	8529359	Callee	strncmp		8529078	0					
ANR	8529360	Identifier	strncmp		8529078	0					
ANR	8529361	ArgumentList	* argv		8529078	1					
ANR	8529362	Argument	* argv		8529078	0					
ANR	8529363	UnaryOperationExpression	* argv		8529078	0					
ANR	8529364	UnaryOperator	*		8529078	0					
ANR	8529365	Identifier	argv		8529078	1					
ANR	8529366	Argument	"""--prefix="""		8529078	1					
ANR	8529367	PrimaryExpression	"""--prefix="""		8529078	0					
ANR	8529368	Argument	9		8529078	2					
ANR	8529369	PrimaryExpression	9		8529078	0					
ANR	8529370	PrimaryExpression	0		8529078	1					
ANR	8529371	ExpressionStatement	prefix = 9 + * argv	3908:9:126143:126159	8529078	1	True				
ANR	8529372	AssignmentExpression	prefix = 9 + * argv		8529078	0		=			
ANR	8529373	Identifier	prefix		8529078	0					
ANR	8529374	AdditiveExpression	9 + * argv		8529078	1		+			
ANR	8529375	PrimaryExpression	9		8529078	0					
ANR	8529376	UnaryOperationExpression	* argv		8529078	1					
ANR	8529377	UnaryOperator	*		8529078	0					
ANR	8529378	Identifier	argv		8529078	1					
ANR	8529379	ElseStatement	else		8529078	0					
ANR	8529380	IfStatement	"if ( strcmp ( * argv , ""--strip=none"" ) == 0 )"		8529078	0					
ANR	8529381	Condition	"strcmp ( * argv , ""--strip=none"" ) == 0"	3910:15:126177:126210	8529078	0	True				
ANR	8529382	EqualityExpression	"strcmp ( * argv , ""--strip=none"" ) == 0"		8529078	0		==			
ANR	8529383	CallExpression	"strcmp ( * argv , ""--strip=none"" )"		8529078	0					
ANR	8529384	Callee	strcmp		8529078	0					
ANR	8529385	Identifier	strcmp		8529078	0					
ANR	8529386	ArgumentList	* argv		8529078	1					
ANR	8529387	Argument	* argv		8529078	0					
ANR	8529388	UnaryOperationExpression	* argv		8529078	0					
ANR	8529389	UnaryOperator	*		8529078	0					
ANR	8529390	Identifier	argv		8529078	1					
ANR	8529391	Argument	"""--strip=none"""		8529078	1					
ANR	8529392	PrimaryExpression	"""--strip=none"""		8529078	0					
ANR	8529393	PrimaryExpression	0		8529078	1					
ANR	8529394	ExpressionStatement	global . skip = SKIP_NONE	3911:9:126222:126245	8529078	1	True				
ANR	8529395	AssignmentExpression	global . skip = SKIP_NONE		8529078	0		=			
ANR	8529396	MemberAccess	global . skip		8529078	0					
ANR	8529397	Identifier	global		8529078	0					
ANR	8529398	Identifier	skip		8529078	1					
ANR	8529399	Identifier	SKIP_NONE		8529078	1					
ANR	8529400	ElseStatement	else		8529078	0					
ANR	8529401	IfStatement	"if ( strcmp ( * argv , ""--strip=crc"" ) == 0 )"		8529078	0					
ANR	8529402	Condition	"strcmp ( * argv , ""--strip=crc"" ) == 0"	3913:15:126263:126295	8529078	0	True				
ANR	8529403	EqualityExpression	"strcmp ( * argv , ""--strip=crc"" ) == 0"		8529078	0		==			
ANR	8529404	CallExpression	"strcmp ( * argv , ""--strip=crc"" )"		8529078	0					
ANR	8529405	Callee	strcmp		8529078	0					
ANR	8529406	Identifier	strcmp		8529078	0					
ANR	8529407	ArgumentList	* argv		8529078	1					
ANR	8529408	Argument	* argv		8529078	0					
ANR	8529409	UnaryOperationExpression	* argv		8529078	0					
ANR	8529410	UnaryOperator	*		8529078	0					
ANR	8529411	Identifier	argv		8529078	1					
ANR	8529412	Argument	"""--strip=crc"""		8529078	1					
ANR	8529413	PrimaryExpression	"""--strip=crc"""		8529078	0					
ANR	8529414	PrimaryExpression	0		8529078	1					
ANR	8529415	ExpressionStatement	global . skip = SKIP_BAD_CRC	3914:9:126307:126333	8529078	1	True				
ANR	8529416	AssignmentExpression	global . skip = SKIP_BAD_CRC		8529078	0		=			
ANR	8529417	MemberAccess	global . skip		8529078	0					
ANR	8529418	Identifier	global		8529078	0					
ANR	8529419	Identifier	skip		8529078	1					
ANR	8529420	Identifier	SKIP_BAD_CRC		8529078	1					
ANR	8529421	ElseStatement	else		8529078	0					
ANR	8529422	IfStatement	"if ( strcmp ( * argv , ""--strip=unsafe"" ) == 0 )"		8529078	0					
ANR	8529423	Condition	"strcmp ( * argv , ""--strip=unsafe"" ) == 0"	3916:15:126351:126386	8529078	0	True				
ANR	8529424	EqualityExpression	"strcmp ( * argv , ""--strip=unsafe"" ) == 0"		8529078	0		==			
ANR	8529425	CallExpression	"strcmp ( * argv , ""--strip=unsafe"" )"		8529078	0					
ANR	8529426	Callee	strcmp		8529078	0					
ANR	8529427	Identifier	strcmp		8529078	0					
ANR	8529428	ArgumentList	* argv		8529078	1					
ANR	8529429	Argument	* argv		8529078	0					
ANR	8529430	UnaryOperationExpression	* argv		8529078	0					
ANR	8529431	UnaryOperator	*		8529078	0					
ANR	8529432	Identifier	argv		8529078	1					
ANR	8529433	Argument	"""--strip=unsafe"""		8529078	1					
ANR	8529434	PrimaryExpression	"""--strip=unsafe"""		8529078	0					
ANR	8529435	PrimaryExpression	0		8529078	1					
ANR	8529436	ExpressionStatement	global . skip = SKIP_UNSAFE	3917:9:126398:126423	8529078	1	True				
ANR	8529437	AssignmentExpression	global . skip = SKIP_UNSAFE		8529078	0		=			
ANR	8529438	MemberAccess	global . skip		8529078	0					
ANR	8529439	Identifier	global		8529078	0					
ANR	8529440	Identifier	skip		8529078	1					
ANR	8529441	Identifier	SKIP_UNSAFE		8529078	1					
ANR	8529442	ElseStatement	else		8529078	0					
ANR	8529443	IfStatement	"if ( strcmp ( * argv , ""--strip=unused"" ) == 0 )"		8529078	0					
ANR	8529444	Condition	"strcmp ( * argv , ""--strip=unused"" ) == 0"	3919:15:126441:126476	8529078	0	True				
ANR	8529445	EqualityExpression	"strcmp ( * argv , ""--strip=unused"" ) == 0"		8529078	0		==			
ANR	8529446	CallExpression	"strcmp ( * argv , ""--strip=unused"" )"		8529078	0					
ANR	8529447	Callee	strcmp		8529078	0					
ANR	8529448	Identifier	strcmp		8529078	0					
ANR	8529449	ArgumentList	* argv		8529078	1					
ANR	8529450	Argument	* argv		8529078	0					
ANR	8529451	UnaryOperationExpression	* argv		8529078	0					
ANR	8529452	UnaryOperator	*		8529078	0					
ANR	8529453	Identifier	argv		8529078	1					
ANR	8529454	Argument	"""--strip=unused"""		8529078	1					
ANR	8529455	PrimaryExpression	"""--strip=unused"""		8529078	0					
ANR	8529456	PrimaryExpression	0		8529078	1					
ANR	8529457	ExpressionStatement	global . skip = SKIP_UNUSED	3920:9:126488:126513	8529078	1	True				
ANR	8529458	AssignmentExpression	global . skip = SKIP_UNUSED		8529078	0		=			
ANR	8529459	MemberAccess	global . skip		8529078	0					
ANR	8529460	Identifier	global		8529078	0					
ANR	8529461	Identifier	skip		8529078	1					
ANR	8529462	Identifier	SKIP_UNUSED		8529078	1					
ANR	8529463	ElseStatement	else		8529078	0					
ANR	8529464	IfStatement	"if ( strcmp ( * argv , ""--strip=transform"" ) == 0 )"		8529078	0					
ANR	8529465	Condition	"strcmp ( * argv , ""--strip=transform"" ) == 0"	3922:15:126531:126569	8529078	0	True				
ANR	8529466	EqualityExpression	"strcmp ( * argv , ""--strip=transform"" ) == 0"		8529078	0		==			
ANR	8529467	CallExpression	"strcmp ( * argv , ""--strip=transform"" )"		8529078	0					
ANR	8529468	Callee	strcmp		8529078	0					
ANR	8529469	Identifier	strcmp		8529078	0					
ANR	8529470	ArgumentList	* argv		8529078	1					
ANR	8529471	Argument	* argv		8529078	0					
ANR	8529472	UnaryOperationExpression	* argv		8529078	0					
ANR	8529473	UnaryOperator	*		8529078	0					
ANR	8529474	Identifier	argv		8529078	1					
ANR	8529475	Argument	"""--strip=transform"""		8529078	1					
ANR	8529476	PrimaryExpression	"""--strip=transform"""		8529078	0					
ANR	8529477	PrimaryExpression	0		8529078	1					
ANR	8529478	ExpressionStatement	global . skip = SKIP_TRANSFORM	3923:9:126581:126609	8529078	1	True				
ANR	8529479	AssignmentExpression	global . skip = SKIP_TRANSFORM		8529078	0		=			
ANR	8529480	MemberAccess	global . skip		8529078	0					
ANR	8529481	Identifier	global		8529078	0					
ANR	8529482	Identifier	skip		8529078	1					
ANR	8529483	Identifier	SKIP_TRANSFORM		8529078	1					
ANR	8529484	ElseStatement	else		8529078	0					
ANR	8529485	IfStatement	"if ( strcmp ( * argv , ""--strip=color"" ) == 0 )"		8529078	0					
ANR	8529486	Condition	"strcmp ( * argv , ""--strip=color"" ) == 0"	3925:15:126627:126661	8529078	0	True				
ANR	8529487	EqualityExpression	"strcmp ( * argv , ""--strip=color"" ) == 0"		8529078	0		==			
ANR	8529488	CallExpression	"strcmp ( * argv , ""--strip=color"" )"		8529078	0					
ANR	8529489	Callee	strcmp		8529078	0					
ANR	8529490	Identifier	strcmp		8529078	0					
ANR	8529491	ArgumentList	* argv		8529078	1					
ANR	8529492	Argument	* argv		8529078	0					
ANR	8529493	UnaryOperationExpression	* argv		8529078	0					
ANR	8529494	UnaryOperator	*		8529078	0					
ANR	8529495	Identifier	argv		8529078	1					
ANR	8529496	Argument	"""--strip=color"""		8529078	1					
ANR	8529497	PrimaryExpression	"""--strip=color"""		8529078	0					
ANR	8529498	PrimaryExpression	0		8529078	1					
ANR	8529499	ExpressionStatement	global . skip = SKIP_COLOR	3926:9:126673:126697	8529078	1	True				
ANR	8529500	AssignmentExpression	global . skip = SKIP_COLOR		8529078	0		=			
ANR	8529501	MemberAccess	global . skip		8529078	0					
ANR	8529502	Identifier	global		8529078	0					
ANR	8529503	Identifier	skip		8529078	1					
ANR	8529504	Identifier	SKIP_COLOR		8529078	1					
ANR	8529505	ElseStatement	else		8529078	0					
ANR	8529506	IfStatement	"if ( strcmp ( * argv , ""--strip=all"" ) == 0 )"		8529078	0					
ANR	8529507	Condition	"strcmp ( * argv , ""--strip=all"" ) == 0"	3928:15:126715:126747	8529078	0	True				
ANR	8529508	EqualityExpression	"strcmp ( * argv , ""--strip=all"" ) == 0"		8529078	0		==			
ANR	8529509	CallExpression	"strcmp ( * argv , ""--strip=all"" )"		8529078	0					
ANR	8529510	Callee	strcmp		8529078	0					
ANR	8529511	Identifier	strcmp		8529078	0					
ANR	8529512	ArgumentList	* argv		8529078	1					
ANR	8529513	Argument	* argv		8529078	0					
ANR	8529514	UnaryOperationExpression	* argv		8529078	0					
ANR	8529515	UnaryOperator	*		8529078	0					
ANR	8529516	Identifier	argv		8529078	1					
ANR	8529517	Argument	"""--strip=all"""		8529078	1					
ANR	8529518	PrimaryExpression	"""--strip=all"""		8529078	0					
ANR	8529519	PrimaryExpression	0		8529078	1					
ANR	8529520	ExpressionStatement	global . skip = SKIP_ALL	3929:9:126759:126781	8529078	1	True				
ANR	8529521	AssignmentExpression	global . skip = SKIP_ALL		8529078	0		=			
ANR	8529522	MemberAccess	global . skip		8529078	0					
ANR	8529523	Identifier	global		8529078	0					
ANR	8529524	Identifier	skip		8529078	1					
ANR	8529525	Identifier	SKIP_ALL		8529078	1					
ANR	8529526	ElseStatement	else		8529078	0					
ANR	8529527	IfStatement	"if ( strcmp ( * argv , ""--errors"" ) == 0 || strcmp ( * argv , ""-e"" ) == 0 )"		8529078	0					
ANR	8529528	Condition	"strcmp ( * argv , ""--errors"" ) == 0 || strcmp ( * argv , ""-e"" ) == 0"	3931:15:126799:126856	8529078	0	True				
ANR	8529529	OrExpression	"strcmp ( * argv , ""--errors"" ) == 0 || strcmp ( * argv , ""-e"" ) == 0"		8529078	0		||			
ANR	8529530	EqualityExpression	"strcmp ( * argv , ""--errors"" ) == 0"		8529078	0		==			
ANR	8529531	CallExpression	"strcmp ( * argv , ""--errors"" )"		8529078	0					
ANR	8529532	Callee	strcmp		8529078	0					
ANR	8529533	Identifier	strcmp		8529078	0					
ANR	8529534	ArgumentList	* argv		8529078	1					
ANR	8529535	Argument	* argv		8529078	0					
ANR	8529536	UnaryOperationExpression	* argv		8529078	0					
ANR	8529537	UnaryOperator	*		8529078	0					
ANR	8529538	Identifier	argv		8529078	1					
ANR	8529539	Argument	"""--errors"""		8529078	1					
ANR	8529540	PrimaryExpression	"""--errors"""		8529078	0					
ANR	8529541	PrimaryExpression	0		8529078	1					
ANR	8529542	EqualityExpression	"strcmp ( * argv , ""-e"" ) == 0"		8529078	1		==			
ANR	8529543	CallExpression	"strcmp ( * argv , ""-e"" )"		8529078	0					
ANR	8529544	Callee	strcmp		8529078	0					
ANR	8529545	Identifier	strcmp		8529078	0					
ANR	8529546	ArgumentList	* argv		8529078	1					
ANR	8529547	Argument	* argv		8529078	0					
ANR	8529548	UnaryOperationExpression	* argv		8529078	0					
ANR	8529549	UnaryOperator	*		8529078	0					
ANR	8529550	Identifier	argv		8529078	1					
ANR	8529551	Argument	"""-e"""		8529078	1					
ANR	8529552	PrimaryExpression	"""-e"""		8529078	0					
ANR	8529553	PrimaryExpression	0		8529078	1					
ANR	8529554	ExpressionStatement	global . errors = 1	3932:9:126868:126885	8529078	1	True				
ANR	8529555	AssignmentExpression	global . errors = 1		8529078	0		=			
ANR	8529556	MemberAccess	global . errors		8529078	0					
ANR	8529557	Identifier	global		8529078	0					
ANR	8529558	Identifier	errors		8529078	1					
ANR	8529559	PrimaryExpression	1		8529078	1					
ANR	8529560	ElseStatement	else		8529078	0					
ANR	8529561	IfStatement	"if ( strcmp ( * argv , ""--warnings"" ) == 0 || strcmp ( * argv , ""-w"" ) == 0 )"		8529078	0					
ANR	8529562	Condition	"strcmp ( * argv , ""--warnings"" ) == 0 || strcmp ( * argv , ""-w"" ) == 0"	3934:15:126903:126962	8529078	0	True				
ANR	8529563	OrExpression	"strcmp ( * argv , ""--warnings"" ) == 0 || strcmp ( * argv , ""-w"" ) == 0"		8529078	0		||			
ANR	8529564	EqualityExpression	"strcmp ( * argv , ""--warnings"" ) == 0"		8529078	0		==			
ANR	8529565	CallExpression	"strcmp ( * argv , ""--warnings"" )"		8529078	0					
ANR	8529566	Callee	strcmp		8529078	0					
ANR	8529567	Identifier	strcmp		8529078	0					
ANR	8529568	ArgumentList	* argv		8529078	1					
ANR	8529569	Argument	* argv		8529078	0					
ANR	8529570	UnaryOperationExpression	* argv		8529078	0					
ANR	8529571	UnaryOperator	*		8529078	0					
ANR	8529572	Identifier	argv		8529078	1					
ANR	8529573	Argument	"""--warnings"""		8529078	1					
ANR	8529574	PrimaryExpression	"""--warnings"""		8529078	0					
ANR	8529575	PrimaryExpression	0		8529078	1					
ANR	8529576	EqualityExpression	"strcmp ( * argv , ""-w"" ) == 0"		8529078	1		==			
ANR	8529577	CallExpression	"strcmp ( * argv , ""-w"" )"		8529078	0					
ANR	8529578	Callee	strcmp		8529078	0					
ANR	8529579	Identifier	strcmp		8529078	0					
ANR	8529580	ArgumentList	* argv		8529078	1					
ANR	8529581	Argument	* argv		8529078	0					
ANR	8529582	UnaryOperationExpression	* argv		8529078	0					
ANR	8529583	UnaryOperator	*		8529078	0					
ANR	8529584	Identifier	argv		8529078	1					
ANR	8529585	Argument	"""-w"""		8529078	1					
ANR	8529586	PrimaryExpression	"""-w"""		8529078	0					
ANR	8529587	PrimaryExpression	0		8529078	1					
ANR	8529588	ExpressionStatement	global . warnings = 1	3935:9:126974:126993	8529078	1	True				
ANR	8529589	AssignmentExpression	global . warnings = 1		8529078	0		=			
ANR	8529590	MemberAccess	global . warnings		8529078	0					
ANR	8529591	Identifier	global		8529078	0					
ANR	8529592	Identifier	warnings		8529078	1					
ANR	8529593	PrimaryExpression	1		8529078	1					
ANR	8529594	ElseStatement	else		8529078	0					
ANR	8529595	IfStatement	"if ( strcmp ( * argv , ""--quiet"" ) == 0 || strcmp ( * argv , ""-q"" ) == 0 )"		8529078	0					
ANR	8529596	Condition	"strcmp ( * argv , ""--quiet"" ) == 0 || strcmp ( * argv , ""-q"" ) == 0"	3937:15:127011:127067	8529078	0	True				
ANR	8529597	OrExpression	"strcmp ( * argv , ""--quiet"" ) == 0 || strcmp ( * argv , ""-q"" ) == 0"		8529078	0		||			
ANR	8529598	EqualityExpression	"strcmp ( * argv , ""--quiet"" ) == 0"		8529078	0		==			
ANR	8529599	CallExpression	"strcmp ( * argv , ""--quiet"" )"		8529078	0					
ANR	8529600	Callee	strcmp		8529078	0					
ANR	8529601	Identifier	strcmp		8529078	0					
ANR	8529602	ArgumentList	* argv		8529078	1					
ANR	8529603	Argument	* argv		8529078	0					
ANR	8529604	UnaryOperationExpression	* argv		8529078	0					
ANR	8529605	UnaryOperator	*		8529078	0					
ANR	8529606	Identifier	argv		8529078	1					
ANR	8529607	Argument	"""--quiet"""		8529078	1					
ANR	8529608	PrimaryExpression	"""--quiet"""		8529078	0					
ANR	8529609	PrimaryExpression	0		8529078	1					
ANR	8529610	EqualityExpression	"strcmp ( * argv , ""-q"" ) == 0"		8529078	1		==			
ANR	8529611	CallExpression	"strcmp ( * argv , ""-q"" )"		8529078	0					
ANR	8529612	Callee	strcmp		8529078	0					
ANR	8529613	Identifier	strcmp		8529078	0					
ANR	8529614	ArgumentList	* argv		8529078	1					
ANR	8529615	Argument	* argv		8529078	0					
ANR	8529616	UnaryOperationExpression	* argv		8529078	0					
ANR	8529617	UnaryOperator	*		8529078	0					
ANR	8529618	Identifier	argv		8529078	1					
ANR	8529619	Argument	"""-q"""		8529078	1					
ANR	8529620	PrimaryExpression	"""-q"""		8529078	0					
ANR	8529621	PrimaryExpression	0		8529078	1					
ANR	8529622	CompoundStatement		80:6:2174:2174	8529078	1					
ANR	8529623	IfStatement	if ( global . quiet )		8529078	0					
ANR	8529624	Condition	global . quiet	3939:13:127091:127102	8529078	0	True				
ANR	8529625	MemberAccess	global . quiet		8529078	0					
ANR	8529626	Identifier	global		8529078	0					
ANR	8529627	Identifier	quiet		8529078	1					
ANR	8529628	ExpressionStatement	global . quiet = 2	3940:12:127117:127133	8529078	1	True				
ANR	8529629	AssignmentExpression	global . quiet = 2		8529078	0		=			
ANR	8529630	MemberAccess	global . quiet		8529078	0					
ANR	8529631	Identifier	global		8529078	0					
ANR	8529632	Identifier	quiet		8529078	1					
ANR	8529633	PrimaryExpression	2		8529078	1					
ANR	8529634	ElseStatement	else		8529078	0					
ANR	8529635	ExpressionStatement	global . quiet = 1	3943:12:127162:127178	8529078	0	True				
ANR	8529636	AssignmentExpression	global . quiet = 1		8529078	0		=			
ANR	8529637	MemberAccess	global . quiet		8529078	0					
ANR	8529638	Identifier	global		8529078	0					
ANR	8529639	Identifier	quiet		8529078	1					
ANR	8529640	PrimaryExpression	1		8529078	1					
ANR	8529641	ElseStatement	else		8529078	0					
ANR	8529642	IfStatement	"if ( strcmp ( * argv , ""--verbose"" ) == 0 || strcmp ( * argv , ""-v"" ) == 0 )"		8529078	0					
ANR	8529643	Condition	"strcmp ( * argv , ""--verbose"" ) == 0 || strcmp ( * argv , ""-v"" ) == 0"	3946:15:127204:127262	8529078	0	True				
ANR	8529644	OrExpression	"strcmp ( * argv , ""--verbose"" ) == 0 || strcmp ( * argv , ""-v"" ) == 0"		8529078	0		||			
ANR	8529645	EqualityExpression	"strcmp ( * argv , ""--verbose"" ) == 0"		8529078	0		==			
ANR	8529646	CallExpression	"strcmp ( * argv , ""--verbose"" )"		8529078	0					
ANR	8529647	Callee	strcmp		8529078	0					
ANR	8529648	Identifier	strcmp		8529078	0					
ANR	8529649	ArgumentList	* argv		8529078	1					
ANR	8529650	Argument	* argv		8529078	0					
ANR	8529651	UnaryOperationExpression	* argv		8529078	0					
ANR	8529652	UnaryOperator	*		8529078	0					
ANR	8529653	Identifier	argv		8529078	1					
ANR	8529654	Argument	"""--verbose"""		8529078	1					
ANR	8529655	PrimaryExpression	"""--verbose"""		8529078	0					
ANR	8529656	PrimaryExpression	0		8529078	1					
ANR	8529657	EqualityExpression	"strcmp ( * argv , ""-v"" ) == 0"		8529078	1		==			
ANR	8529658	CallExpression	"strcmp ( * argv , ""-v"" )"		8529078	0					
ANR	8529659	Callee	strcmp		8529078	0					
ANR	8529660	Identifier	strcmp		8529078	0					
ANR	8529661	ArgumentList	* argv		8529078	1					
ANR	8529662	Argument	* argv		8529078	0					
ANR	8529663	UnaryOperationExpression	* argv		8529078	0					
ANR	8529664	UnaryOperator	*		8529078	0					
ANR	8529665	Identifier	argv		8529078	1					
ANR	8529666	Argument	"""-v"""		8529078	1					
ANR	8529667	PrimaryExpression	"""-v"""		8529078	0					
ANR	8529668	PrimaryExpression	0		8529078	1					
ANR	8529669	ExpressionStatement	++ global . verbose	3947:9:127274:127290	8529078	1	True				
ANR	8529670	UnaryExpression	++ global . verbose		8529078	0					
ANR	8529671	IncDec	++		8529078	0					
ANR	8529672	MemberAccess	global . verbose		8529078	1					
ANR	8529673	Identifier	global		8529078	0					
ANR	8529674	Identifier	verbose		8529078	1					
ANR	8529675	ElseStatement	else		8529078	0					
ANR	8529676	IfStatement	"if ( strcmp ( * argv , ""--test"" ) == 0 )"		8529078	0					
ANR	8529677	Condition	"strcmp ( * argv , ""--test"" ) == 0"	3952:18:127372:127399	8529078	0	True				
ANR	8529678	EqualityExpression	"strcmp ( * argv , ""--test"" ) == 0"		8529078	0		==			
ANR	8529679	CallExpression	"strcmp ( * argv , ""--test"" )"		8529078	0					
ANR	8529680	Callee	strcmp		8529078	0					
ANR	8529681	Identifier	strcmp		8529078	0					
ANR	8529682	ArgumentList	* argv		8529078	1					
ANR	8529683	Argument	* argv		8529078	0					
ANR	8529684	UnaryOperationExpression	* argv		8529078	0					
ANR	8529685	UnaryOperator	*		8529078	0					
ANR	8529686	Identifier	argv		8529078	1					
ANR	8529687	Argument	"""--test"""		8529078	1					
ANR	8529688	PrimaryExpression	"""--test"""		8529078	0					
ANR	8529689	PrimaryExpression	0		8529078	1					
ANR	8529690	ExpressionStatement	++ set_option	3953:12:127414:127426	8529078	1	True				
ANR	8529691	UnaryExpression	++ set_option		8529078	0					
ANR	8529692	IncDec	++		8529078	0					
ANR	8529693	Identifier	set_option		8529078	1					
ANR	8529694	ElseStatement	else		8529078	0					
ANR	8529695	IfStatement	if ( ( * argv ) [ 0 ] == '-' )		8529078	0					
ANR	8529696	Condition	( * argv ) [ 0 ] == '-'	3957:15:127463:127479	8529078	0	True				
ANR	8529697	EqualityExpression	( * argv ) [ 0 ] == '-'		8529078	0		==			
ANR	8529698	ArrayIndexing	( * argv ) [ 0 ]		8529078	0					
ANR	8529699	UnaryOperationExpression	* argv		8529078	0					
ANR	8529700	UnaryOperator	*		8529078	0					
ANR	8529701	Identifier	argv		8529078	1					
ANR	8529702	PrimaryExpression	0		8529078	1					
ANR	8529703	PrimaryExpression	'-'		8529078	1					
ANR	8529704	ExpressionStatement	usage ( prog )	3958:9:127491:127502	8529078	1	True				
ANR	8529705	CallExpression	usage ( prog )		8529078	0					
ANR	8529706	Callee	usage		8529078	0					
ANR	8529707	Identifier	usage		8529078	0					
ANR	8529708	ArgumentList	prog		8529078	1					
ANR	8529709	Argument	prog		8529078	0					
ANR	8529710	Identifier	prog		8529078	0					
ANR	8529711	ElseStatement	else		8529078	0					
ANR	8529712	CompoundStatement		104:9:2631:2660	8529078	0					
ANR	8529713	IdentifierDeclStatement	size_t outlen = strlen ( * argv ) ;	3962:9:127533:127562	8529078	0	True				
ANR	8529714	IdentifierDecl	outlen = strlen ( * argv )		8529078	0					
ANR	8529715	IdentifierDeclType	size_t		8529078	0					
ANR	8529716	Identifier	outlen		8529078	1					
ANR	8529717	AssignmentExpression	outlen = strlen ( * argv )		8529078	2		=			
ANR	8529718	Identifier	outlen		8529078	0					
ANR	8529719	CallExpression	strlen ( * argv )		8529078	1					
ANR	8529720	Callee	strlen		8529078	0					
ANR	8529721	Identifier	strlen		8529078	0					
ANR	8529722	ArgumentList	* argv		8529078	1					
ANR	8529723	Argument	* argv		8529078	0					
ANR	8529724	UnaryOperationExpression	* argv		8529078	0					
ANR	8529725	UnaryOperator	*		8529078	0					
ANR	8529726	Identifier	argv		8529078	1					
ANR	8529727	IfStatement	if ( outfile == NULL )		8529078	1					
ANR	8529728	Condition	outfile == NULL	3964:13:127578:127592	8529078	0	True				
ANR	8529729	EqualityExpression	outfile == NULL		8529078	0		==			
ANR	8529730	Identifier	outfile		8529078	0					
ANR	8529731	Identifier	NULL		8529078	1					
ANR	8529732	CompoundStatement		107:9:2735:2735	8529078	1					
ANR	8529733	IfStatement	if ( prefix != NULL )		8529078	0					
ANR	8529734	Condition	prefix != NULL	3967:16:127708:127721	8529078	0	True				
ANR	8529735	EqualityExpression	prefix != NULL		8529078	0		!=			
ANR	8529736	Identifier	prefix		8529078	0					
ANR	8529737	Identifier	NULL		8529078	1					
ANR	8529738	CompoundStatement		111:15:2851:2884	8529078	1					
ANR	8529739	IdentifierDeclStatement	size_t prefixlen = strlen ( prefix ) ;	3969:15:127753:127786	8529078	0	True				
ANR	8529740	IdentifierDecl	prefixlen = strlen ( prefix )		8529078	0					
ANR	8529741	IdentifierDeclType	size_t		8529078	0					
ANR	8529742	Identifier	prefixlen		8529078	1					
ANR	8529743	AssignmentExpression	prefixlen = strlen ( prefix )		8529078	2		=			
ANR	8529744	Identifier	prefixlen		8529078	0					
ANR	8529745	CallExpression	strlen ( prefix )		8529078	1					
ANR	8529746	Callee	strlen		8529078	0					
ANR	8529747	Identifier	strlen		8529078	0					
ANR	8529748	ArgumentList	prefix		8529078	1					
ANR	8529749	Argument	prefix		8529078	0					
ANR	8529750	Identifier	prefix		8529078	0					
ANR	8529751	IfStatement	if ( prefixlen + outlen > FILENAME_MAX )		8529078	1					
ANR	8529752	Condition	prefixlen + outlen > FILENAME_MAX	3971:19:127808:127838	8529078	0	True				
ANR	8529753	RelationalExpression	prefixlen + outlen > FILENAME_MAX		8529078	0		>			
ANR	8529754	AdditiveExpression	prefixlen + outlen		8529078	0		+			
ANR	8529755	Identifier	prefixlen		8529078	0					
ANR	8529756	Identifier	outlen		8529078	1					
ANR	8529757	Identifier	FILENAME_MAX		8529078	1					
ANR	8529758	CompoundStatement		114:15:2954:2954	8529078	1					
ANR	8529759	ExpressionStatement	"fprintf ( stderr , ""%s: output file name too long: %s%s%s\\n"" , prog , prefix , * argv , suffix ? suffix : """" )"	3973:18:127876:127998	8529078	0	True				
ANR	8529760	CallExpression	"fprintf ( stderr , ""%s: output file name too long: %s%s%s\\n"" , prog , prefix , * argv , suffix ? suffix : """" )"		8529078	0					
ANR	8529761	Callee	fprintf		8529078	0					
ANR	8529762	Identifier	fprintf		8529078	0					
ANR	8529763	ArgumentList	stderr		8529078	1					
ANR	8529764	Argument	stderr		8529078	0					
ANR	8529765	Identifier	stderr		8529078	0					
ANR	8529766	Argument	"""%s: output file name too long: %s%s%s\\n"""		8529078	1					
ANR	8529767	PrimaryExpression	"""%s: output file name too long: %s%s%s\\n"""		8529078	0					
ANR	8529768	Argument	prog		8529078	2					
ANR	8529769	Identifier	prog		8529078	0					
ANR	8529770	Argument	prefix		8529078	3					
ANR	8529771	Identifier	prefix		8529078	0					
ANR	8529772	Argument	* argv		8529078	4					
ANR	8529773	UnaryOperationExpression	* argv		8529078	0					
ANR	8529774	UnaryOperator	*		8529078	0					
ANR	8529775	Identifier	argv		8529078	1					
ANR	8529776	Argument	"suffix ? suffix : """""		8529078	5					
ANR	8529777	ConditionalExpression	"suffix ? suffix : """""		8529078	0					
ANR	8529778	Condition	suffix		8529078	0					
ANR	8529779	Identifier	suffix		8529078	0					
ANR	8529780	Identifier	suffix		8529078	1					
ANR	8529781	PrimaryExpression	""""""		8529078	2					
ANR	8529782	ExpressionStatement	global . status_code |= WRITE_ERROR	3975:18:128018:128051	8529078	1	True				
ANR	8529783	AssignmentExpression	global . status_code |= WRITE_ERROR		8529078	0		|=			
ANR	8529784	MemberAccess	global . status_code		8529078	0					
ANR	8529785	Identifier	global		8529078	0					
ANR	8529786	Identifier	status_code		8529078	1					
ANR	8529787	Identifier	WRITE_ERROR		8529078	1					
ANR	8529788	ContinueStatement	continue ;	3976:18:128071:128079	8529078	2	True				
ANR	8529789	ExpressionStatement	"memcpy ( temp_name , prefix , prefixlen )"	3979:15:128114:128150	8529078	2	True				
ANR	8529790	CallExpression	"memcpy ( temp_name , prefix , prefixlen )"		8529078	0					
ANR	8529791	Callee	memcpy		8529078	0					
ANR	8529792	Identifier	memcpy		8529078	0					
ANR	8529793	ArgumentList	temp_name		8529078	1					
ANR	8529794	Argument	temp_name		8529078	0					
ANR	8529795	Identifier	temp_name		8529078	0					
ANR	8529796	Argument	prefix		8529078	1					
ANR	8529797	Identifier	prefix		8529078	0					
ANR	8529798	Argument	prefixlen		8529078	2					
ANR	8529799	Identifier	prefixlen		8529078	0					
ANR	8529800	ExpressionStatement	"memcpy ( temp_name + prefixlen , * argv , outlen )"	3980:15:128167:128209	8529078	3	True				
ANR	8529801	CallExpression	"memcpy ( temp_name + prefixlen , * argv , outlen )"		8529078	0					
ANR	8529802	Callee	memcpy		8529078	0					
ANR	8529803	Identifier	memcpy		8529078	0					
ANR	8529804	ArgumentList	temp_name + prefixlen		8529078	1					
ANR	8529805	Argument	temp_name + prefixlen		8529078	0					
ANR	8529806	AdditiveExpression	temp_name + prefixlen		8529078	0		+			
ANR	8529807	Identifier	temp_name		8529078	0					
ANR	8529808	Identifier	prefixlen		8529078	1					
ANR	8529809	Argument	* argv		8529078	1					
ANR	8529810	UnaryOperationExpression	* argv		8529078	0					
ANR	8529811	UnaryOperator	*		8529078	0					
ANR	8529812	Identifier	argv		8529078	1					
ANR	8529813	Argument	outlen		8529078	2					
ANR	8529814	Identifier	outlen		8529078	0					
ANR	8529815	ExpressionStatement	outlen += prefixlen	3981:15:128226:128245	8529078	4	True				
ANR	8529816	AssignmentExpression	outlen += prefixlen		8529078	0		+=			
ANR	8529817	Identifier	outlen		8529078	0					
ANR	8529818	Identifier	prefixlen		8529078	1					
ANR	8529819	ExpressionStatement	outfile = temp_name	3982:15:128262:128281	8529078	5	True				
ANR	8529820	AssignmentExpression	outfile = temp_name		8529078	0		=			
ANR	8529821	Identifier	outfile		8529078	0					
ANR	8529822	Identifier	temp_name		8529078	1					
ANR	8529823	ElseStatement	else		8529078	0					
ANR	8529824	IfStatement	if ( suffix != NULL )		8529078	0					
ANR	8529825	Condition	suffix != NULL	3985:21:128319:128332	8529078	0	True				
ANR	8529826	EqualityExpression	suffix != NULL		8529078	0		!=			
ANR	8529827	Identifier	suffix		8529078	0					
ANR	8529828	Identifier	NULL		8529078	1					
ANR	8529829	ExpressionStatement	"memcpy ( temp_name , * argv , outlen )"	3986:15:128350:128382	8529078	1	True				
ANR	8529830	CallExpression	"memcpy ( temp_name , * argv , outlen )"		8529078	0					
ANR	8529831	Callee	memcpy		8529078	0					
ANR	8529832	Identifier	memcpy		8529078	0					
ANR	8529833	ArgumentList	temp_name		8529078	1					
ANR	8529834	Argument	temp_name		8529078	0					
ANR	8529835	Identifier	temp_name		8529078	0					
ANR	8529836	Argument	* argv		8529078	1					
ANR	8529837	UnaryOperationExpression	* argv		8529078	0					
ANR	8529838	UnaryOperator	*		8529078	0					
ANR	8529839	Identifier	argv		8529078	1					
ANR	8529840	Argument	outlen		8529078	2					
ANR	8529841	Identifier	outlen		8529078	0					
ANR	8529842	ExpressionStatement	temp_name [ outlen ] = 0	3988:12:128397:128418	8529078	1	True				
ANR	8529843	AssignmentExpression	temp_name [ outlen ] = 0		8529078	0		=			
ANR	8529844	ArrayIndexing	temp_name [ outlen ]		8529078	0					
ANR	8529845	Identifier	temp_name		8529078	0					
ANR	8529846	Identifier	outlen		8529078	1					
ANR	8529847	PrimaryExpression	0		8529078	1					
ANR	8529848	IfStatement	if ( suffix != NULL )		8529078	2					
ANR	8529849	Condition	suffix != NULL	3990:16:128437:128450	8529078	0	True				
ANR	8529850	EqualityExpression	suffix != NULL		8529078	0		!=			
ANR	8529851	Identifier	suffix		8529078	0					
ANR	8529852	Identifier	NULL		8529078	1					
ANR	8529853	CompoundStatement		134:15:3580:3613	8529078	1					
ANR	8529854	IdentifierDeclStatement	size_t suffixlen = strlen ( suffix ) ;	3992:15:128482:128515	8529078	0	True				
ANR	8529855	IdentifierDecl	suffixlen = strlen ( suffix )		8529078	0					
ANR	8529856	IdentifierDeclType	size_t		8529078	0					
ANR	8529857	Identifier	suffixlen		8529078	1					
ANR	8529858	AssignmentExpression	suffixlen = strlen ( suffix )		8529078	2		=			
ANR	8529859	Identifier	suffixlen		8529078	0					
ANR	8529860	CallExpression	strlen ( suffix )		8529078	1					
ANR	8529861	Callee	strlen		8529078	0					
ANR	8529862	Identifier	strlen		8529078	0					
ANR	8529863	ArgumentList	suffix		8529078	1					
ANR	8529864	Argument	suffix		8529078	0					
ANR	8529865	Identifier	suffix		8529078	0					
ANR	8529866	IfStatement	if ( outlen + suffixlen > FILENAME_MAX )		8529078	1					
ANR	8529867	Condition	outlen + suffixlen > FILENAME_MAX	3994:19:128537:128567	8529078	0	True				
ANR	8529868	RelationalExpression	outlen + suffixlen > FILENAME_MAX		8529078	0		>			
ANR	8529869	AdditiveExpression	outlen + suffixlen		8529078	0		+			
ANR	8529870	Identifier	outlen		8529078	0					
ANR	8529871	Identifier	suffixlen		8529078	1					
ANR	8529872	Identifier	FILENAME_MAX		8529078	1					
ANR	8529873	CompoundStatement		137:15:3683:3683	8529078	1					
ANR	8529874	ExpressionStatement	"fprintf ( stderr , ""%s: output file name too long: %s%s\\n"" , prog , * argv , suffix )"	3996:18:128605:128703	8529078	0	True				
ANR	8529875	CallExpression	"fprintf ( stderr , ""%s: output file name too long: %s%s\\n"" , prog , * argv , suffix )"		8529078	0					
ANR	8529876	Callee	fprintf		8529078	0					
ANR	8529877	Identifier	fprintf		8529078	0					
ANR	8529878	ArgumentList	stderr		8529078	1					
ANR	8529879	Argument	stderr		8529078	0					
ANR	8529880	Identifier	stderr		8529078	0					
ANR	8529881	Argument	"""%s: output file name too long: %s%s\\n"""		8529078	1					
ANR	8529882	PrimaryExpression	"""%s: output file name too long: %s%s\\n"""		8529078	0					
ANR	8529883	Argument	prog		8529078	2					
ANR	8529884	Identifier	prog		8529078	0					
ANR	8529885	Argument	* argv		8529078	3					
ANR	8529886	UnaryOperationExpression	* argv		8529078	0					
ANR	8529887	UnaryOperator	*		8529078	0					
ANR	8529888	Identifier	argv		8529078	1					
ANR	8529889	Argument	suffix		8529078	4					
ANR	8529890	Identifier	suffix		8529078	0					
ANR	8529891	ExpressionStatement	global . status_code |= WRITE_ERROR	3998:18:128723:128756	8529078	1	True				
ANR	8529892	AssignmentExpression	global . status_code |= WRITE_ERROR		8529078	0		|=			
ANR	8529893	MemberAccess	global . status_code		8529078	0					
ANR	8529894	Identifier	global		8529078	0					
ANR	8529895	Identifier	status_code		8529078	1					
ANR	8529896	Identifier	WRITE_ERROR		8529078	1					
ANR	8529897	ContinueStatement	continue ;	3999:18:128776:128784	8529078	2	True				
ANR	8529898	ExpressionStatement	"memcpy ( temp_name + outlen , suffix , suffixlen )"	4002:15:128819:128862	8529078	2	True				
ANR	8529899	CallExpression	"memcpy ( temp_name + outlen , suffix , suffixlen )"		8529078	0					
ANR	8529900	Callee	memcpy		8529078	0					
ANR	8529901	Identifier	memcpy		8529078	0					
ANR	8529902	ArgumentList	temp_name + outlen		8529078	1					
ANR	8529903	Argument	temp_name + outlen		8529078	0					
ANR	8529904	AdditiveExpression	temp_name + outlen		8529078	0		+			
ANR	8529905	Identifier	temp_name		8529078	0					
ANR	8529906	Identifier	outlen		8529078	1					
ANR	8529907	Argument	suffix		8529078	1					
ANR	8529908	Identifier	suffix		8529078	0					
ANR	8529909	Argument	suffixlen		8529078	2					
ANR	8529910	Identifier	suffixlen		8529078	0					
ANR	8529911	ExpressionStatement	outlen += suffixlen	4003:15:128879:128898	8529078	3	True				
ANR	8529912	AssignmentExpression	outlen += suffixlen		8529078	0		+=			
ANR	8529913	Identifier	outlen		8529078	0					
ANR	8529914	Identifier	suffixlen		8529078	1					
ANR	8529915	ExpressionStatement	temp_name [ outlen ] = 0	4004:15:128915:128936	8529078	4	True				
ANR	8529916	AssignmentExpression	temp_name [ outlen ] = 0		8529078	0		=			
ANR	8529917	ArrayIndexing	temp_name [ outlen ]		8529078	0					
ANR	8529918	Identifier	temp_name		8529078	0					
ANR	8529919	Identifier	outlen		8529078	1					
ANR	8529920	PrimaryExpression	0		8529078	1					
ANR	8529921	ExpressionStatement	outfile = temp_name	4005:15:128953:128972	8529078	5	True				
ANR	8529922	AssignmentExpression	outfile = temp_name		8529078	0		=			
ANR	8529923	Identifier	outfile		8529078	0					
ANR	8529924	Identifier	temp_name		8529078	1					
ANR	8529925	ExpressionStatement	"( void ) one_file ( & global , * argv , outfile )"	4009:9:129009:129048	8529078	2	True				
ANR	8529926	CastExpression	"( void ) one_file ( & global , * argv , outfile )"		8529078	0					
ANR	8529927	CastTarget	void		8529078	0					
ANR	8529928	CallExpression	"one_file ( & global , * argv , outfile )"		8529078	1					
ANR	8529929	Callee	one_file		8529078	0					
ANR	8529930	Identifier	one_file		8529078	0					
ANR	8529931	ArgumentList	& global		8529078	1					
ANR	8529932	Argument	& global		8529078	0					
ANR	8529933	UnaryOperationExpression	& global		8529078	0					
ANR	8529934	UnaryOperator	&		8529078	0					
ANR	8529935	Identifier	global		8529078	1					
ANR	8529936	Argument	* argv		8529078	1					
ANR	8529937	UnaryOperationExpression	* argv		8529078	0					
ANR	8529938	UnaryOperator	*		8529078	0					
ANR	8529939	Identifier	argv		8529078	1					
ANR	8529940	Argument	outfile		8529078	2					
ANR	8529941	Identifier	outfile		8529078	0					
ANR	8529942	ExpressionStatement	++ done	4010:9:129059:129065	8529078	3	True				
ANR	8529943	UnaryExpression	++ done		8529078	0					
ANR	8529944	IncDec	++		8529078	0					
ANR	8529945	Identifier	done		8529078	1					
ANR	8529946	ExpressionStatement	outfile = NULL	4011:9:129076:129090	8529078	4	True				
ANR	8529947	AssignmentExpression	outfile = NULL		8529078	0		=			
ANR	8529948	Identifier	outfile		8529078	0					
ANR	8529949	Identifier	NULL		8529078	1					
ANR	8529950	Statement	ifdef	3951:6:127321:127325	8529078	2	True				
ANR	8529951	Statement	PNG_MAXIMUM_INFLATE_WINDOW	3951:12:127327:127352	8529078	3	True				
ANR	8529952	Statement	endif	3954:6:127434:127438	8529078	4	True				
ANR	8529953	IfStatement	if ( ! done )		8529078	9					
ANR	8529954	Condition	! done	4015:7:129113:129117	8529078	0	True				
ANR	8529955	UnaryOperationExpression	! done		8529078	0					
ANR	8529956	UnaryOperator	!		8529078	0					
ANR	8529957	Identifier	done		8529078	1					
ANR	8529958	ExpressionStatement	usage ( prog )	4016:6:129126:129137	8529078	1	True				
ANR	8529959	CallExpression	usage ( prog )		8529078	0					
ANR	8529960	Callee	usage		8529078	0					
ANR	8529961	Identifier	usage		8529078	0					
ANR	8529962	ArgumentList	prog		8529078	1					
ANR	8529963	Argument	prog		8529078	0					
ANR	8529964	Identifier	prog		8529078	0					
ANR	8529965	ReturnStatement	return global_end ( & global ) ;	4018:3:129143:129169	8529078	10	True				
ANR	8529966	CallExpression	global_end ( & global )		8529078	0					
ANR	8529967	Callee	global_end		8529078	0					
ANR	8529968	Identifier	global_end		8529078	0					
ANR	8529969	ArgumentList	& global		8529078	1					
ANR	8529970	Argument	& global		8529078	0					
ANR	8529971	UnaryOperationExpression	& global		8529078	0					
ANR	8529972	UnaryOperator	&		8529078	0					
ANR	8529973	Identifier	global		8529078	1					
ANR	8529974	ReturnType	int		8529078	1					
ANR	8529975	Identifier	main		8529078	2					
ANR	8529976	ParameterList	"int argc , const char * * argv"		8529078	3					
ANR	8529977	Parameter	int argc	3858:5:124872:124879	8529078	0	True				
ANR	8529978	ParameterType	int		8529078	0					
ANR	8529979	Identifier	argc		8529078	1					
ANR	8529980	Parameter	const char * * argv	3858:15:124882:124898	8529078	1	True				
ANR	8529981	ParameterType	const char * *		8529078	0					
ANR	8529982	Identifier	argv		8529078	1					
ANR	8529983	CFGEntryNode	ENTRY		8529078		True				
ANR	8529984	CFGExitNode	EXIT		8529078		True				
ANR	8529985	Symbol	& global		8529078						
ANR	8529986	Symbol	* temp_name		8529078						
ANR	8529987	Symbol	global . status_code		8529078						
ANR	8529988	Symbol	prefix		8529078						
ANR	8529989	Symbol	outfile		8529078						
ANR	8529990	Symbol	* argv		8529078						
ANR	8529991	Symbol	global		8529078						
ANR	8529992	Symbol	SKIP_NONE		8529078						
ANR	8529993	Symbol	suffix		8529078						
ANR	8529994	Symbol	argv		8529078						
ANR	8529995	Symbol	SKIP_TRANSFORM		8529078						
ANR	8529996	Symbol	strncmp		8529078						
ANR	8529997	Symbol	strlen		8529078						
ANR	8529998	Symbol	global . quiet		8529078						
ANR	8529999	Symbol	global . skip		8529078						
ANR	8530000	Symbol	global . errors		8529078						
ANR	8530001	Symbol	suffixlen		8529078						
ANR	8530002	Symbol	outlen		8529078						
ANR	8530003	Symbol	* * argv		8529078						
ANR	8530004	Symbol	prefixlen		8529078						
ANR	8530005	Symbol	SKIP_ALL		8529078						
ANR	8530006	Symbol	SKIP_UNSAFE		8529078						
ANR	8530007	Symbol	argc		8529078						
ANR	8530008	Symbol	strcmp		8529078						
ANR	8530009	Symbol	NULL		8529078						
ANR	8530010	Symbol	global . optimize_zlib		8529078						
ANR	8530011	Symbol	WRITE_ERROR		8529078						
ANR	8530012	Symbol	global_end		8529078						
ANR	8530013	Symbol	global . warnings		8529078						
ANR	8530014	Symbol	SKIP_UNUSED		8529078						
ANR	8530015	Symbol	stderr		8529078						
ANR	8530016	Symbol	done		8529078						
ANR	8530017	Symbol	prog		8529078						
ANR	8530018	Symbol	FILENAME_MAX		8529078						
ANR	8530019	Symbol	* outlen		8529078						
ANR	8530020	Symbol	SKIP_COLOR		8529078						
ANR	8530021	Symbol	SKIP_BAD_CRC		8529078						
ANR	8530022	Symbol	global . idat_max		8529078						
ANR	8530023	Symbol	temp_name		8529078						
ANR	8530024	Symbol	atol		8529078						
ANR	8530025	Symbol	global . verbose		8529078						
ANR	8530026	Function	main	4022:0:129207:129339							
ANR	8530027	FunctionDef	main ()		8530026	0					
ANR	8530028	CompoundStatement		4024:0:129222:129339	8530026	0					
ANR	8530029	ExpressionStatement	"fprintf ( stderr , ""pngfix needs libpng with a zlib >=1.2.4 (not 0x%x)\\n"" , ZLIB_VERNUM )"	4025:3:129227:129323	8530026	0	True				
ANR	8530030	CallExpression	"fprintf ( stderr , ""pngfix needs libpng with a zlib >=1.2.4 (not 0x%x)\\n"" , ZLIB_VERNUM )"		8530026	0					
ANR	8530031	Callee	fprintf		8530026	0					
ANR	8530032	Identifier	fprintf		8530026	0					
ANR	8530033	ArgumentList	stderr		8530026	1					
ANR	8530034	Argument	stderr		8530026	0					
ANR	8530035	Identifier	stderr		8530026	0					
ANR	8530036	Argument	"""pngfix needs libpng with a zlib >=1.2.4 (not 0x%x)\\n"""		8530026	1					
ANR	8530037	PrimaryExpression	"""pngfix needs libpng with a zlib >=1.2.4 (not 0x%x)\\n"""		8530026	0					
ANR	8530038	Argument	ZLIB_VERNUM		8530026	2					
ANR	8530039	Identifier	ZLIB_VERNUM		8530026	0					
ANR	8530040	ReturnStatement	return 77 ;	4028:3:129328:129337	8530026	1	True				
ANR	8530041	PrimaryExpression	77		8530026	0					
ANR	8530042	ReturnType	int		8530026	1					
ANR	8530043	Identifier	main		8530026	2					
ANR	8530044	ParameterList			8530026	3					
ANR	8530045	CFGEntryNode	ENTRY		8530026		True				
ANR	8530046	CFGExitNode	EXIT		8530026		True				
ANR	8530047	Symbol	stderr		8530026						
ANR	8530048	Symbol	ZLIB_VERNUM		8530026						
ANR	8530049	Function	main	4034:0:129396:129506							
ANR	8530050	FunctionDef	main ()		8530049	0					
ANR	8530051	CompoundStatement		4036:0:129411:129506	8530049	0					
ANR	8530052	ExpressionStatement	"fprintf ( stderr , ""pngfix does not work without read deinterlace support\\n"" )"	4037:3:129416:129490	8530049	0	True				
ANR	8530053	CallExpression	"fprintf ( stderr , ""pngfix does not work without read deinterlace support\\n"" )"		8530049	0					
ANR	8530054	Callee	fprintf		8530049	0					
ANR	8530055	Identifier	fprintf		8530049	0					
ANR	8530056	ArgumentList	stderr		8530049	1					
ANR	8530057	Argument	stderr		8530049	0					
ANR	8530058	Identifier	stderr		8530049	0					
ANR	8530059	Argument	"""pngfix does not work without read deinterlace support\\n"""		8530049	1					
ANR	8530060	PrimaryExpression	"""pngfix does not work without read deinterlace support\\n"""		8530049	0					
ANR	8530061	ReturnStatement	return 77 ;	4038:3:129495:129504	8530049	1	True				
ANR	8530062	PrimaryExpression	77		8530049	0					
ANR	8530063	ReturnType	int		8530049	1					
ANR	8530064	Identifier	main		8530049	2					
ANR	8530065	ParameterList			8530049	3					
ANR	8530066	CFGEntryNode	ENTRY		8530049		True				
ANR	8530067	CFGExitNode	EXIT		8530049		True				
ANR	8530068	Symbol	stderr		8530049						
ANR	8530069	Function	main	4042:0:129599:129699							
ANR	8530070	FunctionDef	main ()		8530069	0					
ANR	8530071	CompoundStatement		4044:0:129614:129699	8530069	0					
ANR	8530072	ExpressionStatement	"fprintf ( stderr , ""pngfix does not work without setjmp support\\n"" )"	4045:3:129619:129683	8530069	0	True				
ANR	8530073	CallExpression	"fprintf ( stderr , ""pngfix does not work without setjmp support\\n"" )"		8530069	0					
ANR	8530074	Callee	fprintf		8530069	0					
ANR	8530075	Identifier	fprintf		8530069	0					
ANR	8530076	ArgumentList	stderr		8530069	1					
ANR	8530077	Argument	stderr		8530069	0					
ANR	8530078	Identifier	stderr		8530069	0					
ANR	8530079	Argument	"""pngfix does not work without setjmp support\\n"""		8530069	1					
ANR	8530080	PrimaryExpression	"""pngfix does not work without setjmp support\\n"""		8530069	0					
ANR	8530081	ReturnStatement	return 77 ;	4046:3:129688:129697	8530069	1	True				
ANR	8530082	PrimaryExpression	77		8530069	0					
ANR	8530083	ReturnType	int		8530069	1					
ANR	8530084	Identifier	main		8530069	2					
ANR	8530085	ParameterList			8530069	3					
ANR	8530086	CFGEntryNode	ENTRY		8530069		True				
ANR	8530087	CFGExitNode	EXIT		8530069		True				
ANR	8530088	Symbol	stderr		8530069						
