command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10508304	File	data/converged/CVE-2018-16863_ghostpdl/transcode.c								
ANR	10508305	DeclStmt									
ANR	10508306	Decl							_cups_mutex_t	_cups_mutex_t	map_mutex
ANR	10508307	DeclStmt									
ANR	10508308	Decl							iconv_t	iconv_t	map_from_utf8
ANR	10508309	DeclStmt									
ANR	10508310	Decl							iconv_t	iconv_t	map_to_utf8
ANR	10508311	DeclStmt									
ANR	10508312	Decl							cups_encoding_t	cups_encoding_t	map_encoding
ANR	10508313	Function	_cupsCharmapFlush	58:0:1656:1984							
ANR	10508314	FunctionDef	_cupsCharmapFlush ()		10508313	0					
ANR	10508315	CompoundStatement		60:0:1685:1984	10508313	0					
ANR	10508316	IfStatement	if ( map_from_utf8 != ( iconv_t ) - 1 )		10508313	0					
ANR	10508317	Condition	map_from_utf8 != ( iconv_t ) - 1	62:6:1713:1740	10508313	0	True				
ANR	10508318	EqualityExpression	map_from_utf8 != ( iconv_t ) - 1		10508313	0		!=			
ANR	10508319	Identifier	map_from_utf8		10508313	0					
ANR	10508320	CastExpression	( iconv_t ) - 1		10508313	1					
ANR	10508321	CastTarget	iconv_t		10508313	0					
ANR	10508322	UnaryOperationExpression	- 1		10508313	1					
ANR	10508323	UnaryOperator	-		10508313	0					
ANR	10508324	PrimaryExpression	1		10508313	1					
ANR	10508325	CompoundStatement		4:2:59:59	10508313	1					
ANR	10508326	ExpressionStatement	iconv_close ( map_from_utf8 )	64:4:1751:1777	10508313	0	True				
ANR	10508327	CallExpression	iconv_close ( map_from_utf8 )		10508313	0					
ANR	10508328	Callee	iconv_close		10508313	0					
ANR	10508329	Identifier	iconv_close		10508313	0					
ANR	10508330	ArgumentList	map_from_utf8		10508313	1					
ANR	10508331	Argument	map_from_utf8		10508313	0					
ANR	10508332	Identifier	map_from_utf8		10508313	0					
ANR	10508333	ExpressionStatement	map_from_utf8 = ( iconv_t ) - 1	65:4:1783:1810	10508313	1	True				
ANR	10508334	AssignmentExpression	map_from_utf8 = ( iconv_t ) - 1		10508313	0		=			
ANR	10508335	Identifier	map_from_utf8		10508313	0					
ANR	10508336	CastExpression	( iconv_t ) - 1		10508313	1					
ANR	10508337	CastTarget	iconv_t		10508313	0					
ANR	10508338	UnaryOperationExpression	- 1		10508313	1					
ANR	10508339	UnaryOperator	-		10508313	0					
ANR	10508340	PrimaryExpression	1		10508313	1					
ANR	10508341	IfStatement	if ( map_to_utf8 != ( iconv_t ) - 1 )		10508313	1					
ANR	10508342	Condition	map_to_utf8 != ( iconv_t ) - 1	68:6:1823:1848	10508313	0	True				
ANR	10508343	EqualityExpression	map_to_utf8 != ( iconv_t ) - 1		10508313	0		!=			
ANR	10508344	Identifier	map_to_utf8		10508313	0					
ANR	10508345	CastExpression	( iconv_t ) - 1		10508313	1					
ANR	10508346	CastTarget	iconv_t		10508313	0					
ANR	10508347	UnaryOperationExpression	- 1		10508313	1					
ANR	10508348	UnaryOperator	-		10508313	0					
ANR	10508349	PrimaryExpression	1		10508313	1					
ANR	10508350	CompoundStatement		10:2:167:167	10508313	1					
ANR	10508351	ExpressionStatement	iconv_close ( map_to_utf8 )	70:4:1859:1883	10508313	0	True				
ANR	10508352	CallExpression	iconv_close ( map_to_utf8 )		10508313	0					
ANR	10508353	Callee	iconv_close		10508313	0					
ANR	10508354	Identifier	iconv_close		10508313	0					
ANR	10508355	ArgumentList	map_to_utf8		10508313	1					
ANR	10508356	Argument	map_to_utf8		10508313	0					
ANR	10508357	Identifier	map_to_utf8		10508313	0					
ANR	10508358	ExpressionStatement	map_to_utf8 = ( iconv_t ) - 1	71:4:1889:1914	10508313	1	True				
ANR	10508359	AssignmentExpression	map_to_utf8 = ( iconv_t ) - 1		10508313	0		=			
ANR	10508360	Identifier	map_to_utf8		10508313	0					
ANR	10508361	CastExpression	( iconv_t ) - 1		10508313	1					
ANR	10508362	CastTarget	iconv_t		10508313	0					
ANR	10508363	UnaryOperationExpression	- 1		10508313	1					
ANR	10508364	UnaryOperator	-		10508313	0					
ANR	10508365	PrimaryExpression	1		10508313	1					
ANR	10508366	ExpressionStatement	map_encoding = CUPS_AUTO_ENCODING	74:2:1923:1956	10508313	2	True				
ANR	10508367	AssignmentExpression	map_encoding = CUPS_AUTO_ENCODING		10508313	0		=			
ANR	10508368	Identifier	map_encoding		10508313	0					
ANR	10508369	Identifier	CUPS_AUTO_ENCODING		10508313	1					
ANR	10508370	ReturnType	void		10508313	1					
ANR	10508371	Identifier	_cupsCharmapFlush		10508313	2					
ANR	10508372	ParameterList			10508313	3					
ANR	10508373	CFGEntryNode	ENTRY		10508313		True				
ANR	10508374	CFGExitNode	EXIT		10508313		True				
ANR	10508375	Symbol	map_to_utf8		10508313						
ANR	10508376	Symbol	CUPS_AUTO_ENCODING		10508313						
ANR	10508377	Symbol	map_encoding		10508313						
ANR	10508378	Symbol	map_from_utf8		10508313						
ANR	10508379	Function	cupsCharsetToUTF8	83:0:2062:4489							
ANR	10508380	FunctionDef	"cupsCharsetToUTF8 (cups_utf8_t * dest , const char * src , const int maxout , const cups_encoding_t encoding)"		10508379	0					
ANR	10508381	CompoundStatement		89:0:2344:4489	10508379	0					
ANR	10508382	IdentifierDeclStatement	cups_utf8_t * destptr ;	90:2:2348:2368	10508379	0	True				
ANR	10508383	IdentifierDecl	* destptr		10508379	0					
ANR	10508384	IdentifierDeclType	cups_utf8_t *		10508379	0					
ANR	10508385	Identifier	destptr		10508379	1					
ANR	10508386	IdentifierDeclStatement	"size_t srclen , outBytesLeft ;"	92:2:2425:2486	10508379	1	True				
ANR	10508387	IdentifierDecl	srclen		10508379	0					
ANR	10508388	IdentifierDeclType	size_t		10508379	0					
ANR	10508389	Identifier	srclen		10508379	1					
ANR	10508390	IdentifierDecl	outBytesLeft		10508379	1					
ANR	10508391	IdentifierDeclType	size_t		10508379	0					
ANR	10508392	Identifier	outBytesLeft		10508379	1					
ANR	10508393	ExpressionStatement	"DEBUG_printf ( ( ""2cupsCharsetToUTF8(dest=%p, src=\\""%s\\"", maxout=%d, encoding=%d)"" , dest , src , maxout , encoding ) )"	101:2:2601:2720	10508379	2	True				
ANR	10508394	CallExpression	"DEBUG_printf ( ( ""2cupsCharsetToUTF8(dest=%p, src=\\""%s\\"", maxout=%d, encoding=%d)"" , dest , src , maxout , encoding ) )"		10508379	0					
ANR	10508395	Callee	DEBUG_printf		10508379	0					
ANR	10508396	Identifier	DEBUG_printf		10508379	0					
ANR	10508397	ArgumentList	"""2cupsCharsetToUTF8(dest=%p, src=\\""%s\\"", maxout=%d, encoding=%d)"" , dest , src , maxout , encoding"		10508379	1					
ANR	10508398	Argument	"""2cupsCharsetToUTF8(dest=%p, src=\\""%s\\"", maxout=%d, encoding=%d)"" , dest , src , maxout , encoding"		10508379	0					
ANR	10508399	Expression	"""2cupsCharsetToUTF8(dest=%p, src=\\""%s\\"", maxout=%d, encoding=%d)"" , dest , src , maxout , encoding"		10508379	0					
ANR	10508400	PrimaryExpression	"""2cupsCharsetToUTF8(dest=%p, src=\\""%s\\"", maxout=%d, encoding=%d)"""		10508379	0					
ANR	10508401	Expression	"dest , src , maxout , encoding"		10508379	1					
ANR	10508402	Identifier	dest		10508379	0					
ANR	10508403	Expression	"src , maxout , encoding"		10508379	1					
ANR	10508404	Identifier	src		10508379	0					
ANR	10508405	Expression	"maxout , encoding"		10508379	1					
ANR	10508406	Identifier	maxout		10508379	0					
ANR	10508407	Identifier	encoding		10508379	1					
ANR	10508408	IfStatement	if ( ! dest || ! src || maxout < 1 )		10508379	3					
ANR	10508409	Condition	! dest || ! src || maxout < 1	104:6:2729:2755	10508379	0	True				
ANR	10508410	OrExpression	! dest || ! src || maxout < 1		10508379	0		||			
ANR	10508411	UnaryOperationExpression	! dest		10508379	0					
ANR	10508412	UnaryOperator	!		10508379	0					
ANR	10508413	Identifier	dest		10508379	1					
ANR	10508414	OrExpression	! src || maxout < 1		10508379	1		||			
ANR	10508415	UnaryOperationExpression	! src		10508379	0					
ANR	10508416	UnaryOperator	!		10508379	0					
ANR	10508417	Identifier	src		10508379	1					
ANR	10508418	RelationalExpression	maxout < 1		10508379	1		<			
ANR	10508419	Identifier	maxout		10508379	0					
ANR	10508420	PrimaryExpression	1		10508379	1					
ANR	10508421	CompoundStatement		17:2:415:415	10508379	1					
ANR	10508422	IfStatement	if ( dest )		10508379	0					
ANR	10508423	Condition	dest	106:8:2770:2773	10508379	0	True				
ANR	10508424	Identifier	dest		10508379	0					
ANR	10508425	ExpressionStatement	* dest = '\\0'	107:6:2782:2794	10508379	1	True				
ANR	10508426	AssignmentExpression	* dest = '\\0'		10508379	0		=			
ANR	10508427	UnaryOperationExpression	* dest		10508379	0					
ANR	10508428	UnaryOperator	*		10508379	0					
ANR	10508429	Identifier	dest		10508379	1					
ANR	10508430	PrimaryExpression	'\\0'		10508379	1					
ANR	10508431	ExpressionStatement	"DEBUG_puts ( ""3cupsCharsetToUTF8: Bad arguments, returning -1"" )"	109:4:2801:2862	10508379	1	True				
ANR	10508432	CallExpression	"DEBUG_puts ( ""3cupsCharsetToUTF8: Bad arguments, returning -1"" )"		10508379	0					
ANR	10508433	Callee	DEBUG_puts		10508379	0					
ANR	10508434	Identifier	DEBUG_puts		10508379	0					
ANR	10508435	ArgumentList	"""3cupsCharsetToUTF8: Bad arguments, returning -1"""		10508379	1					
ANR	10508436	Argument	"""3cupsCharsetToUTF8: Bad arguments, returning -1"""		10508379	0					
ANR	10508437	PrimaryExpression	"""3cupsCharsetToUTF8: Bad arguments, returning -1"""		10508379	0					
ANR	10508438	ReturnStatement	return ( - 1 ) ;	110:4:2868:2879	10508379	2	True				
ANR	10508439	UnaryOperationExpression	- 1		10508379	0					
ANR	10508440	UnaryOperator	-		10508379	0					
ANR	10508441	PrimaryExpression	1		10508379	1					
ANR	10508442	IfStatement	if ( encoding == CUPS_UTF8 || encoding <= CUPS_US_ASCII || encoding >= CUPS_ENCODING_VBCS_END )		10508379	4					
ANR	10508443	Condition	encoding == CUPS_UTF8 || encoding <= CUPS_US_ASCII || encoding >= CUPS_ENCODING_VBCS_END	117:6:2937:3030	10508379	0	True				
ANR	10508444	OrExpression	encoding == CUPS_UTF8 || encoding <= CUPS_US_ASCII || encoding >= CUPS_ENCODING_VBCS_END		10508379	0		||			
ANR	10508445	EqualityExpression	encoding == CUPS_UTF8		10508379	0		==			
ANR	10508446	Identifier	encoding		10508379	0					
ANR	10508447	Identifier	CUPS_UTF8		10508379	1					
ANR	10508448	OrExpression	encoding <= CUPS_US_ASCII || encoding >= CUPS_ENCODING_VBCS_END		10508379	1		||			
ANR	10508449	RelationalExpression	encoding <= CUPS_US_ASCII		10508379	0		<=			
ANR	10508450	Identifier	encoding		10508379	0					
ANR	10508451	Identifier	CUPS_US_ASCII		10508379	1					
ANR	10508452	RelationalExpression	encoding >= CUPS_ENCODING_VBCS_END		10508379	1		>=			
ANR	10508453	Identifier	encoding		10508379	0					
ANR	10508454	Identifier	CUPS_ENCODING_VBCS_END		10508379	1					
ANR	10508455	CompoundStatement		31:2:690:690	10508379	1					
ANR	10508456	ExpressionStatement	"strlcpy ( ( char * ) dest , src , maxout )"	120:4:3041:3075	10508379	0	True				
ANR	10508457	CallExpression	"strlcpy ( ( char * ) dest , src , maxout )"		10508379	0					
ANR	10508458	Callee	strlcpy		10508379	0					
ANR	10508459	Identifier	strlcpy		10508379	0					
ANR	10508460	ArgumentList	( char * ) dest		10508379	1					
ANR	10508461	Argument	( char * ) dest		10508379	0					
ANR	10508462	CastExpression	( char * ) dest		10508379	0					
ANR	10508463	CastTarget	char *		10508379	0					
ANR	10508464	Identifier	dest		10508379	1					
ANR	10508465	Argument	src		10508379	1					
ANR	10508466	Identifier	src		10508379	0					
ANR	10508467	Argument	maxout		10508379	2					
ANR	10508468	Identifier	maxout		10508379	0					
ANR	10508469	ReturnStatement	return ( ( int ) strlen ( ( char * ) dest ) ) ;	121:4:3081:3115	10508379	1	True				
ANR	10508470	CastExpression	( int ) strlen ( ( char * ) dest )		10508379	0					
ANR	10508471	CastTarget	int		10508379	0					
ANR	10508472	CallExpression	strlen ( ( char * ) dest )		10508379	1					
ANR	10508473	Callee	strlen		10508379	0					
ANR	10508474	Identifier	strlen		10508379	0					
ANR	10508475	ArgumentList	( char * ) dest		10508379	1					
ANR	10508476	Argument	( char * ) dest		10508379	0					
ANR	10508477	CastExpression	( char * ) dest		10508379	0					
ANR	10508478	CastTarget	char *		10508379	0					
ANR	10508479	Identifier	dest		10508379	1					
ANR	10508480	ExpressionStatement	destptr = dest	128:2:3177:3191	10508379	5	True				
ANR	10508481	AssignmentExpression	destptr = dest		10508379	0		=			
ANR	10508482	Identifier	destptr		10508379	0					
ANR	10508483	Identifier	dest		10508379	1					
ANR	10508484	IfStatement	if ( encoding == CUPS_ISO8859_1 )		10508379	6					
ANR	10508485	Condition	encoding == CUPS_ISO8859_1	130:6:3200:3225	10508379	0	True				
ANR	10508486	EqualityExpression	encoding == CUPS_ISO8859_1		10508379	0		==			
ANR	10508487	Identifier	encoding		10508379	0					
ANR	10508488	Identifier	CUPS_ISO8859_1		10508379	1					
ANR	10508489	CompoundStatement		45:4:934:954	10508379	1					
ANR	10508490	IdentifierDeclStatement	int ch ;	132:4:3236:3243	10508379	0	True				
ANR	10508491	IdentifierDecl	ch		10508379	0					
ANR	10508492	IdentifierDeclType	int		10508379	0					
ANR	10508493	Identifier	ch		10508379	1					
ANR	10508494	IdentifierDeclStatement	cups_utf8_t * destend ;	133:4:3279:3299	10508379	1	True				
ANR	10508495	IdentifierDecl	* destend		10508379	0					
ANR	10508496	IdentifierDeclType	cups_utf8_t *		10508379	0					
ANR	10508497	Identifier	destend		10508379	1					
ANR	10508498	ExpressionStatement	destend = dest + maxout - 2	136:4:3334:3361	10508379	2	True				
ANR	10508499	AssignmentExpression	destend = dest + maxout - 2		10508379	0		=			
ANR	10508500	Identifier	destend		10508379	0					
ANR	10508501	AdditiveExpression	dest + maxout - 2		10508379	1		+			
ANR	10508502	Identifier	dest		10508379	0					
ANR	10508503	AdditiveExpression	maxout - 2		10508379	1		-			
ANR	10508504	Identifier	maxout		10508379	0					
ANR	10508505	PrimaryExpression	2		10508379	1					
ANR	10508506	WhileStatement	while ( * src && destptr < destend )		10508379	3					
ANR	10508507	Condition	* src && destptr < destend	138:11:3375:3399	10508379	0	True				
ANR	10508508	AndExpression	* src && destptr < destend		10508379	0		&&			
ANR	10508509	UnaryOperationExpression	* src		10508379	0					
ANR	10508510	UnaryOperator	*		10508379	0					
ANR	10508511	Identifier	src		10508379	1					
ANR	10508512	RelationalExpression	destptr < destend		10508379	1		<			
ANR	10508513	Identifier	destptr		10508379	0					
ANR	10508514	Identifier	destend		10508379	1					
ANR	10508515	CompoundStatement		51:4:1061:1061	10508379	1					
ANR	10508516	ExpressionStatement	ch = * src ++ & 255	140:6:3414:3431	10508379	0	True				
ANR	10508517	AssignmentExpression	ch = * src ++ & 255		10508379	0		=			
ANR	10508518	Identifier	ch		10508379	0					
ANR	10508519	BitAndExpression	* src ++ & 255		10508379	1		&			
ANR	10508520	UnaryOperationExpression	* src ++		10508379	0					
ANR	10508521	UnaryOperator	*		10508379	0					
ANR	10508522	PostIncDecOperationExpression	src ++		10508379	1					
ANR	10508523	Identifier	src		10508379	0					
ANR	10508524	IncDec	++		10508379	1					
ANR	10508525	PrimaryExpression	255		10508379	1					
ANR	10508526	IfStatement	if ( ch & 128 )		10508379	1					
ANR	10508527	Condition	ch & 128	142:10:3444:3451	10508379	0	True				
ANR	10508528	BitAndExpression	ch & 128		10508379	0		&			
ANR	10508529	Identifier	ch		10508379	0					
ANR	10508530	PrimaryExpression	128		10508379	1					
ANR	10508531	CompoundStatement		55:6:1115:1115	10508379	1					
ANR	10508532	ExpressionStatement	* destptr ++ = 0xc0 | ( ch >> 6 )	144:1:3463:3492	10508379	0	True				
ANR	10508533	AssignmentExpression	* destptr ++ = 0xc0 | ( ch >> 6 )		10508379	0		=			
ANR	10508534	UnaryOperationExpression	* destptr ++		10508379	0					
ANR	10508535	UnaryOperator	*		10508379	0					
ANR	10508536	PostIncDecOperationExpression	destptr ++		10508379	1					
ANR	10508537	Identifier	destptr		10508379	0					
ANR	10508538	IncDec	++		10508379	1					
ANR	10508539	InclusiveOrExpression	0xc0 | ( ch >> 6 )		10508379	1		|			
ANR	10508540	PrimaryExpression	0xc0		10508379	0					
ANR	10508541	ShiftExpression	ch >> 6		10508379	1		>>			
ANR	10508542	Identifier	ch		10508379	0					
ANR	10508543	PrimaryExpression	6		10508379	1					
ANR	10508544	ExpressionStatement	* destptr ++ = 0x80 | ( ch & 0x3f )	145:1:3495:3526	10508379	1	True				
ANR	10508545	AssignmentExpression	* destptr ++ = 0x80 | ( ch & 0x3f )		10508379	0		=			
ANR	10508546	UnaryOperationExpression	* destptr ++		10508379	0					
ANR	10508547	UnaryOperator	*		10508379	0					
ANR	10508548	PostIncDecOperationExpression	destptr ++		10508379	1					
ANR	10508549	Identifier	destptr		10508379	0					
ANR	10508550	IncDec	++		10508379	1					
ANR	10508551	InclusiveOrExpression	0x80 | ( ch & 0x3f )		10508379	1		|			
ANR	10508552	PrimaryExpression	0x80		10508379	0					
ANR	10508553	BitAndExpression	ch & 0x3f		10508379	1		&			
ANR	10508554	Identifier	ch		10508379	0					
ANR	10508555	PrimaryExpression	0x3f		10508379	1					
ANR	10508556	ElseStatement	else		10508379	0					
ANR	10508557	ExpressionStatement	* destptr ++ = ch	148:1:3548:3563	10508379	0	True				
ANR	10508558	AssignmentExpression	* destptr ++ = ch		10508379	0		=			
ANR	10508559	UnaryOperationExpression	* destptr ++		10508379	0					
ANR	10508560	UnaryOperator	*		10508379	0					
ANR	10508561	PostIncDecOperationExpression	destptr ++		10508379	1					
ANR	10508562	Identifier	destptr		10508379	0					
ANR	10508563	IncDec	++		10508379	1					
ANR	10508564	Identifier	ch		10508379	1					
ANR	10508565	ExpressionStatement	* destptr = '\\0'	151:4:3576:3591	10508379	4	True				
ANR	10508566	AssignmentExpression	* destptr = '\\0'		10508379	0		=			
ANR	10508567	UnaryOperationExpression	* destptr		10508379	0					
ANR	10508568	UnaryOperator	*		10508379	0					
ANR	10508569	Identifier	destptr		10508379	1					
ANR	10508570	PrimaryExpression	'\\0'		10508379	1					
ANR	10508571	ReturnStatement	return ( ( int ) ( destptr - dest ) ) ;	153:4:3598:3628	10508379	5	True				
ANR	10508572	CastExpression	( int ) ( destptr - dest )		10508379	0					
ANR	10508573	CastTarget	int		10508379	0					
ANR	10508574	AdditiveExpression	destptr - dest		10508379	1		-			
ANR	10508575	Identifier	destptr		10508379	0					
ANR	10508576	Identifier	dest		10508379	1					
ANR	10508577	ExpressionStatement	_cupsMutexLock ( & map_mutex )	161:2:3712:3738	10508379	7	True				
ANR	10508578	CallExpression	_cupsMutexLock ( & map_mutex )		10508379	0					
ANR	10508579	Callee	_cupsMutexLock		10508379	0					
ANR	10508580	Identifier	_cupsMutexLock		10508379	0					
ANR	10508581	ArgumentList	& map_mutex		10508379	1					
ANR	10508582	Argument	& map_mutex		10508379	0					
ANR	10508583	UnaryOperationExpression	& map_mutex		10508379	0					
ANR	10508584	UnaryOperator	&		10508379	0					
ANR	10508585	Identifier	map_mutex		10508379	1					
ANR	10508586	IfStatement	if ( map_encoding != encoding )		10508379	8					
ANR	10508587	Condition	map_encoding != encoding	163:6:3747:3770	10508379	0	True				
ANR	10508588	EqualityExpression	map_encoding != encoding		10508379	0		!=			
ANR	10508589	Identifier	map_encoding		10508379	0					
ANR	10508590	Identifier	encoding		10508379	1					
ANR	10508591	CompoundStatement		76:2:1430:1430	10508379	1					
ANR	10508592	ExpressionStatement	_cupsCharmapFlush ( )	165:4:3781:3800	10508379	0	True				
ANR	10508593	CallExpression	_cupsCharmapFlush ( )		10508379	0					
ANR	10508594	Callee	_cupsCharmapFlush		10508379	0					
ANR	10508595	Identifier	_cupsCharmapFlush		10508379	0					
ANR	10508596	ArgumentList			10508379	1					
ANR	10508597	ExpressionStatement	"map_from_utf8 = iconv_open ( _cupsEncodingName ( encoding ) , ""UTF-8"" )"	167:4:3807:3871	10508379	1	True				
ANR	10508598	AssignmentExpression	"map_from_utf8 = iconv_open ( _cupsEncodingName ( encoding ) , ""UTF-8"" )"		10508379	0		=			
ANR	10508599	Identifier	map_from_utf8		10508379	0					
ANR	10508600	CallExpression	"iconv_open ( _cupsEncodingName ( encoding ) , ""UTF-8"" )"		10508379	1					
ANR	10508601	Callee	iconv_open		10508379	0					
ANR	10508602	Identifier	iconv_open		10508379	0					
ANR	10508603	ArgumentList	_cupsEncodingName ( encoding )		10508379	1					
ANR	10508604	Argument	_cupsEncodingName ( encoding )		10508379	0					
ANR	10508605	CallExpression	_cupsEncodingName ( encoding )		10508379	0					
ANR	10508606	Callee	_cupsEncodingName		10508379	0					
ANR	10508607	Identifier	_cupsEncodingName		10508379	0					
ANR	10508608	ArgumentList	encoding		10508379	1					
ANR	10508609	Argument	encoding		10508379	0					
ANR	10508610	Identifier	encoding		10508379	0					
ANR	10508611	Argument	"""UTF-8"""		10508379	1					
ANR	10508612	PrimaryExpression	"""UTF-8"""		10508379	0					
ANR	10508613	ExpressionStatement	"map_to_utf8 = iconv_open ( ""UTF-8"" , _cupsEncodingName ( encoding ) )"	168:4:3877:3941	10508379	2	True				
ANR	10508614	AssignmentExpression	"map_to_utf8 = iconv_open ( ""UTF-8"" , _cupsEncodingName ( encoding ) )"		10508379	0		=			
ANR	10508615	Identifier	map_to_utf8		10508379	0					
ANR	10508616	CallExpression	"iconv_open ( ""UTF-8"" , _cupsEncodingName ( encoding ) )"		10508379	1					
ANR	10508617	Callee	iconv_open		10508379	0					
ANR	10508618	Identifier	iconv_open		10508379	0					
ANR	10508619	ArgumentList	"""UTF-8"""		10508379	1					
ANR	10508620	Argument	"""UTF-8"""		10508379	0					
ANR	10508621	PrimaryExpression	"""UTF-8"""		10508379	0					
ANR	10508622	Argument	_cupsEncodingName ( encoding )		10508379	1					
ANR	10508623	CallExpression	_cupsEncodingName ( encoding )		10508379	0					
ANR	10508624	Callee	_cupsEncodingName		10508379	0					
ANR	10508625	Identifier	_cupsEncodingName		10508379	0					
ANR	10508626	ArgumentList	encoding		10508379	1					
ANR	10508627	Argument	encoding		10508379	0					
ANR	10508628	Identifier	encoding		10508379	0					
ANR	10508629	ExpressionStatement	map_encoding = encoding	169:4:3947:3974	10508379	3	True				
ANR	10508630	AssignmentExpression	map_encoding = encoding		10508379	0		=			
ANR	10508631	Identifier	map_encoding		10508379	0					
ANR	10508632	Identifier	encoding		10508379	1					
ANR	10508633	IfStatement	if ( map_to_utf8 != ( iconv_t ) - 1 )		10508379	9					
ANR	10508634	Condition	map_to_utf8 != ( iconv_t ) - 1	172:6:3987:4012	10508379	0	True				
ANR	10508635	EqualityExpression	map_to_utf8 != ( iconv_t ) - 1		10508379	0		!=			
ANR	10508636	Identifier	map_to_utf8		10508379	0					
ANR	10508637	CastExpression	( iconv_t ) - 1		10508379	1					
ANR	10508638	CastTarget	iconv_t		10508379	0					
ANR	10508639	UnaryOperationExpression	- 1		10508379	1					
ANR	10508640	UnaryOperator	-		10508379	0					
ANR	10508641	PrimaryExpression	1		10508379	1					
ANR	10508642	CompoundStatement		86:4:1678:1709	10508379	1					
ANR	10508643	IdentifierDeclStatement	char * altdestptr = ( char * ) dest ;	174:4:4023:4054	10508379	0	True				
ANR	10508644	IdentifierDecl	* altdestptr = ( char * ) dest		10508379	0					
ANR	10508645	IdentifierDeclType	char *		10508379	0					
ANR	10508646	Identifier	altdestptr		10508379	1					
ANR	10508647	AssignmentExpression	* altdestptr = ( char * ) dest		10508379	2		=			
ANR	10508648	Identifier	altdestptr		10508379	0					
ANR	10508649	CastExpression	( char * ) dest		10508379	1					
ANR	10508650	CastTarget	char *		10508379	0					
ANR	10508651	Identifier	dest		10508379	1					
ANR	10508652	ExpressionStatement	srclen = strlen ( src )	176:4:4097:4123	10508379	1	True				
ANR	10508653	AssignmentExpression	srclen = strlen ( src )		10508379	0		=			
ANR	10508654	Identifier	srclen		10508379	0					
ANR	10508655	CallExpression	strlen ( src )		10508379	1					
ANR	10508656	Callee	strlen		10508379	0					
ANR	10508657	Identifier	strlen		10508379	0					
ANR	10508658	ArgumentList	src		10508379	1					
ANR	10508659	Argument	src		10508379	0					
ANR	10508660	Identifier	src		10508379	0					
ANR	10508661	ExpressionStatement	outBytesLeft = maxout - 1	177:4:4129:4154	10508379	2	True				
ANR	10508662	AssignmentExpression	outBytesLeft = maxout - 1		10508379	0		=			
ANR	10508663	Identifier	outBytesLeft		10508379	0					
ANR	10508664	AdditiveExpression	maxout - 1		10508379	1		-			
ANR	10508665	Identifier	maxout		10508379	0					
ANR	10508666	PrimaryExpression	1		10508379	1					
ANR	10508667	ExpressionStatement	"iconv ( map_to_utf8 , ( char * * ) & src , & srclen , & altdestptr , & outBytesLeft )"	179:4:4161:4231	10508379	3	True				
ANR	10508668	CallExpression	"iconv ( map_to_utf8 , ( char * * ) & src , & srclen , & altdestptr , & outBytesLeft )"		10508379	0					
ANR	10508669	Callee	iconv		10508379	0					
ANR	10508670	Identifier	iconv		10508379	0					
ANR	10508671	ArgumentList	map_to_utf8		10508379	1					
ANR	10508672	Argument	map_to_utf8		10508379	0					
ANR	10508673	Identifier	map_to_utf8		10508379	0					
ANR	10508674	Argument	( char * * ) & src		10508379	1					
ANR	10508675	CastExpression	( char * * ) & src		10508379	0					
ANR	10508676	CastTarget	char * *		10508379	0					
ANR	10508677	UnaryOperationExpression	& src		10508379	1					
ANR	10508678	UnaryOperator	&		10508379	0					
ANR	10508679	Identifier	src		10508379	1					
ANR	10508680	Argument	& srclen		10508379	2					
ANR	10508681	UnaryOperationExpression	& srclen		10508379	0					
ANR	10508682	UnaryOperator	&		10508379	0					
ANR	10508683	Identifier	srclen		10508379	1					
ANR	10508684	Argument	& altdestptr		10508379	3					
ANR	10508685	UnaryOperationExpression	& altdestptr		10508379	0					
ANR	10508686	UnaryOperator	&		10508379	0					
ANR	10508687	Identifier	altdestptr		10508379	1					
ANR	10508688	Argument	& outBytesLeft		10508379	4					
ANR	10508689	UnaryOperationExpression	& outBytesLeft		10508379	0					
ANR	10508690	UnaryOperator	&		10508379	0					
ANR	10508691	Identifier	outBytesLeft		10508379	1					
ANR	10508692	ExpressionStatement	* altdestptr = '\\0'	180:4:4237:4255	10508379	4	True				
ANR	10508693	AssignmentExpression	* altdestptr = '\\0'		10508379	0		=			
ANR	10508694	UnaryOperationExpression	* altdestptr		10508379	0					
ANR	10508695	UnaryOperator	*		10508379	0					
ANR	10508696	Identifier	altdestptr		10508379	1					
ANR	10508697	PrimaryExpression	'\\0'		10508379	1					
ANR	10508698	ExpressionStatement	_cupsMutexUnlock ( & map_mutex )	182:4:4262:4290	10508379	5	True				
ANR	10508699	CallExpression	_cupsMutexUnlock ( & map_mutex )		10508379	0					
ANR	10508700	Callee	_cupsMutexUnlock		10508379	0					
ANR	10508701	Identifier	_cupsMutexUnlock		10508379	0					
ANR	10508702	ArgumentList	& map_mutex		10508379	1					
ANR	10508703	Argument	& map_mutex		10508379	0					
ANR	10508704	UnaryOperationExpression	& map_mutex		10508379	0					
ANR	10508705	UnaryOperator	&		10508379	0					
ANR	10508706	Identifier	map_mutex		10508379	1					
ANR	10508707	ReturnStatement	return ( ( int ) ( altdestptr - ( char * ) dest ) ) ;	184:4:4297:4338	10508379	6	True				
ANR	10508708	CastExpression	( int ) ( altdestptr - ( char * ) dest )		10508379	0					
ANR	10508709	CastTarget	int		10508379	0					
ANR	10508710	AdditiveExpression	altdestptr - ( char * ) dest		10508379	1		-			
ANR	10508711	Identifier	altdestptr		10508379	0					
ANR	10508712	CastExpression	( char * ) dest		10508379	1					
ANR	10508713	CastTarget	char *		10508379	0					
ANR	10508714	Identifier	dest		10508379	1					
ANR	10508715	ExpressionStatement	_cupsMutexUnlock ( & map_mutex )	187:2:4347:4375	10508379	10	True				
ANR	10508716	CallExpression	_cupsMutexUnlock ( & map_mutex )		10508379	0					
ANR	10508717	Callee	_cupsMutexUnlock		10508379	0					
ANR	10508718	Identifier	_cupsMutexUnlock		10508379	0					
ANR	10508719	ArgumentList	& map_mutex		10508379	1					
ANR	10508720	Argument	& map_mutex		10508379	0					
ANR	10508721	UnaryOperationExpression	& map_mutex		10508379	0					
ANR	10508722	UnaryOperator	&		10508379	0					
ANR	10508723	Identifier	map_mutex		10508379	1					
ANR	10508724	ExpressionStatement	* destptr = '\\0'	194:2:4456:4471	10508379	11	True				
ANR	10508725	AssignmentExpression	* destptr = '\\0'		10508379	0		=			
ANR	10508726	UnaryOperationExpression	* destptr		10508379	0					
ANR	10508727	UnaryOperator	*		10508379	0					
ANR	10508728	Identifier	destptr		10508379	1					
ANR	10508729	PrimaryExpression	'\\0'		10508379	1					
ANR	10508730	ReturnStatement	return ( - 1 ) ;	196:2:4476:4487	10508379	12	True				
ANR	10508731	UnaryOperationExpression	- 1		10508379	0					
ANR	10508732	UnaryOperator	-		10508379	0					
ANR	10508733	PrimaryExpression	1		10508379	1					
ANR	10508734	ReturnType	int		10508379	1					
ANR	10508735	Identifier	cupsCharsetToUTF8		10508379	2					
ANR	10508736	ParameterList	"cups_utf8_t * dest , const char * src , const int maxout , const cups_encoding_t encoding"		10508379	3					
ANR	10508737	Parameter	cups_utf8_t * dest	85:4:2124:2150	10508379	0	True				
ANR	10508738	ParameterType	cups_utf8_t *		10508379	0					
ANR	10508739	Identifier	dest		10508379	1					
ANR	10508740	Parameter	const char * src	86:4:2181:2206	10508379	1	True				
ANR	10508741	ParameterType	const char *		10508379	0					
ANR	10508742	Identifier	src		10508379	1					
ANR	10508743	Parameter	const int maxout	87:4:2238:2265	10508379	2	True				
ANR	10508744	ParameterType	const int		10508379	0					
ANR	10508745	Identifier	maxout		10508379	1					
ANR	10508746	Parameter	const cups_encoding_t encoding	88:4:2293:2322	10508379	3	True				
ANR	10508747	ParameterType	const cups_encoding_t		10508379	0					
ANR	10508748	Identifier	encoding		10508379	1					
ANR	10508749	CFGEntryNode	ENTRY		10508379		True				
ANR	10508750	CFGExitNode	EXIT		10508379		True				
ANR	10508751	Symbol	& map_mutex		10508379						
ANR	10508752	Symbol	srclen		10508379						
ANR	10508753	Symbol	* dest		10508379						
ANR	10508754	Symbol	& outBytesLeft		10508379						
ANR	10508755	Symbol	map_encoding		10508379						
ANR	10508756	Symbol	dest		10508379						
ANR	10508757	Symbol	altdestptr		10508379						
ANR	10508758	Symbol	& src		10508379						
ANR	10508759	Symbol	& srclen		10508379						
ANR	10508760	Symbol	* src		10508379						
ANR	10508761	Symbol	strlen		10508379						
ANR	10508762	Symbol	iconv_open		10508379						
ANR	10508763	Symbol	destptr		10508379						
ANR	10508764	Symbol	src		10508379						
ANR	10508765	Symbol	maxout		10508379						
ANR	10508766	Symbol	ch		10508379						
ANR	10508767	Symbol	* destptr		10508379						
ANR	10508768	Symbol	CUPS_US_ASCII		10508379						
ANR	10508769	Symbol	CUPS_ENCODING_VBCS_END		10508379						
ANR	10508770	Symbol	destend		10508379						
ANR	10508771	Symbol	encoding		10508379						
ANR	10508772	Symbol	outBytesLeft		10508379						
ANR	10508773	Symbol	map_to_utf8		10508379						
ANR	10508774	Symbol	* destptr ++		10508379						
ANR	10508775	Symbol	_cupsEncodingName		10508379						
ANR	10508776	Symbol	* altdestptr		10508379						
ANR	10508777	Symbol	CUPS_ISO8859_1		10508379						
ANR	10508778	Symbol	* src ++		10508379						
ANR	10508779	Symbol	map_from_utf8		10508379						
ANR	10508780	Symbol	& altdestptr		10508379						
ANR	10508781	Symbol	CUPS_UTF8		10508379						
ANR	10508782	Function	cupsUTF8ToCharset	204:0:4567:7023							
ANR	10508783	FunctionDef	"cupsUTF8ToCharset (char * dest , const cups_utf8_t * src , const int maxout , const cups_encoding_t encoding)"		10508782	0					
ANR	10508784	CompoundStatement		210:0:4824:7023	10508782	0					
ANR	10508785	IdentifierDeclStatement	char * destptr ;	211:2:4828:4842	10508782	0	True				
ANR	10508786	IdentifierDecl	* destptr		10508782	0					
ANR	10508787	IdentifierDeclType	char *		10508782	0					
ANR	10508788	Identifier	destptr		10508782	1					
ANR	10508789	IdentifierDeclStatement	"size_t srclen , outBytesLeft ;"	213:2:4898:4959	10508782	1	True				
ANR	10508790	IdentifierDecl	srclen		10508782	0					
ANR	10508791	IdentifierDeclType	size_t		10508782	0					
ANR	10508792	Identifier	srclen		10508782	1					
ANR	10508793	IdentifierDecl	outBytesLeft		10508782	1					
ANR	10508794	IdentifierDeclType	size_t		10508782	0					
ANR	10508795	Identifier	outBytesLeft		10508782	1					
ANR	10508796	IfStatement	if ( ! dest || ! src || maxout < 1 )		10508782	2					
ANR	10508797	Condition	! dest || ! src || maxout < 1	222:6:5078:5104	10508782	0	True				
ANR	10508798	OrExpression	! dest || ! src || maxout < 1		10508782	0		||			
ANR	10508799	UnaryOperationExpression	! dest		10508782	0					
ANR	10508800	UnaryOperator	!		10508782	0					
ANR	10508801	Identifier	dest		10508782	1					
ANR	10508802	OrExpression	! src || maxout < 1		10508782	1		||			
ANR	10508803	UnaryOperationExpression	! src		10508782	0					
ANR	10508804	UnaryOperator	!		10508782	0					
ANR	10508805	Identifier	src		10508782	1					
ANR	10508806	RelationalExpression	maxout < 1		10508782	1		<			
ANR	10508807	Identifier	maxout		10508782	0					
ANR	10508808	PrimaryExpression	1		10508782	1					
ANR	10508809	CompoundStatement		14:2:284:284	10508782	1					
ANR	10508810	IfStatement	if ( dest )		10508782	0					
ANR	10508811	Condition	dest	224:8:5119:5122	10508782	0	True				
ANR	10508812	Identifier	dest		10508782	0					
ANR	10508813	ExpressionStatement	* dest = '\\0'	225:6:5131:5143	10508782	1	True				
ANR	10508814	AssignmentExpression	* dest = '\\0'		10508782	0		=			
ANR	10508815	UnaryOperationExpression	* dest		10508782	0					
ANR	10508816	UnaryOperator	*		10508782	0					
ANR	10508817	Identifier	dest		10508782	1					
ANR	10508818	PrimaryExpression	'\\0'		10508782	1					
ANR	10508819	ReturnStatement	return ( - 1 ) ;	227:4:5150:5161	10508782	1	True				
ANR	10508820	UnaryOperationExpression	- 1		10508782	0					
ANR	10508821	UnaryOperator	-		10508782	0					
ANR	10508822	PrimaryExpression	1		10508782	1					
ANR	10508823	IfStatement	if ( encoding == CUPS_UTF8 || encoding >= CUPS_ENCODING_VBCS_END )		10508782	3					
ANR	10508824	Condition	encoding == CUPS_UTF8 || encoding >= CUPS_ENCODING_VBCS_END	234:6:5219:5283	10508782	0	True				
ANR	10508825	OrExpression	encoding == CUPS_UTF8 || encoding >= CUPS_ENCODING_VBCS_END		10508782	0		||			
ANR	10508826	EqualityExpression	encoding == CUPS_UTF8		10508782	0		==			
ANR	10508827	Identifier	encoding		10508782	0					
ANR	10508828	Identifier	CUPS_UTF8		10508782	1					
ANR	10508829	RelationalExpression	encoding >= CUPS_ENCODING_VBCS_END		10508782	1		>=			
ANR	10508830	Identifier	encoding		10508782	0					
ANR	10508831	Identifier	CUPS_ENCODING_VBCS_END		10508782	1					
ANR	10508832	CompoundStatement		27:2:463:463	10508782	1					
ANR	10508833	ExpressionStatement	"strlcpy ( dest , ( char * ) src , maxout )"	237:4:5294:5328	10508782	0	True				
ANR	10508834	CallExpression	"strlcpy ( dest , ( char * ) src , maxout )"		10508782	0					
ANR	10508835	Callee	strlcpy		10508782	0					
ANR	10508836	Identifier	strlcpy		10508782	0					
ANR	10508837	ArgumentList	dest		10508782	1					
ANR	10508838	Argument	dest		10508782	0					
ANR	10508839	Identifier	dest		10508782	0					
ANR	10508840	Argument	( char * ) src		10508782	1					
ANR	10508841	CastExpression	( char * ) src		10508782	0					
ANR	10508842	CastTarget	char *		10508782	0					
ANR	10508843	Identifier	src		10508782	1					
ANR	10508844	Argument	maxout		10508782	2					
ANR	10508845	Identifier	maxout		10508782	0					
ANR	10508846	ReturnStatement	return ( ( int ) strlen ( dest ) ) ;	238:4:5334:5360	10508782	1	True				
ANR	10508847	CastExpression	( int ) strlen ( dest )		10508782	0					
ANR	10508848	CastTarget	int		10508782	0					
ANR	10508849	CallExpression	strlen ( dest )		10508782	1					
ANR	10508850	Callee	strlen		10508782	0					
ANR	10508851	Identifier	strlen		10508782	0					
ANR	10508852	ArgumentList	dest		10508782	1					
ANR	10508853	Argument	dest		10508782	0					
ANR	10508854	Identifier	dest		10508782	0					
ANR	10508855	ExpressionStatement	destptr = dest	245:2:5422:5436	10508782	4	True				
ANR	10508856	AssignmentExpression	destptr = dest		10508782	0		=			
ANR	10508857	Identifier	destptr		10508782	0					
ANR	10508858	Identifier	dest		10508782	1					
ANR	10508859	IfStatement	if ( encoding == CUPS_ISO8859_1 || encoding <= CUPS_US_ASCII )		10508782	5					
ANR	10508860	Condition	encoding == CUPS_ISO8859_1 || encoding <= CUPS_US_ASCII	247:6:5445:5499	10508782	0	True				
ANR	10508861	OrExpression	encoding == CUPS_ISO8859_1 || encoding <= CUPS_US_ASCII		10508782	0		||			
ANR	10508862	EqualityExpression	encoding == CUPS_ISO8859_1		10508782	0		==			
ANR	10508863	Identifier	encoding		10508782	0					
ANR	10508864	Identifier	CUPS_ISO8859_1		10508782	1					
ANR	10508865	RelationalExpression	encoding <= CUPS_US_ASCII		10508782	1		<=			
ANR	10508866	Identifier	encoding		10508782	0					
ANR	10508867	Identifier	CUPS_US_ASCII		10508782	1					
ANR	10508868	CompoundStatement		42:4:775:788	10508782	1					
ANR	10508869	IdentifierDeclStatement	"int ch , maxch ;"	249:4:5510:5556	10508782	0	True				
ANR	10508870	IdentifierDecl	ch		10508782	0					
ANR	10508871	IdentifierDeclType	int		10508782	0					
ANR	10508872	Identifier	ch		10508782	1					
ANR	10508873	IdentifierDecl	maxch		10508782	1					
ANR	10508874	IdentifierDeclType	int		10508782	0					
ANR	10508875	Identifier	maxch		10508782	1					
ANR	10508876	IdentifierDeclStatement	char * destend ;	251:4:5600:5613	10508782	1	True				
ANR	10508877	IdentifierDecl	* destend		10508782	0					
ANR	10508878	IdentifierDeclType	char *		10508782	0					
ANR	10508879	Identifier	destend		10508782	1					
ANR	10508880	ExpressionStatement	maxch = encoding == CUPS_ISO8859_1 ? 256 : 128	253:4:5652:5700	10508782	2	True				
ANR	10508881	AssignmentExpression	maxch = encoding == CUPS_ISO8859_1 ? 256 : 128		10508782	0		=			
ANR	10508882	Identifier	maxch		10508782	0					
ANR	10508883	ConditionalExpression	encoding == CUPS_ISO8859_1 ? 256 : 128		10508782	1					
ANR	10508884	Condition	encoding == CUPS_ISO8859_1		10508782	0					
ANR	10508885	EqualityExpression	encoding == CUPS_ISO8859_1		10508782	0		==			
ANR	10508886	Identifier	encoding		10508782	0					
ANR	10508887	Identifier	CUPS_ISO8859_1		10508782	1					
ANR	10508888	PrimaryExpression	256		10508782	1					
ANR	10508889	PrimaryExpression	128		10508782	2					
ANR	10508890	ExpressionStatement	destend = dest + maxout - 1	254:4:5706:5733	10508782	3	True				
ANR	10508891	AssignmentExpression	destend = dest + maxout - 1		10508782	0		=			
ANR	10508892	Identifier	destend		10508782	0					
ANR	10508893	AdditiveExpression	dest + maxout - 1		10508782	1		+			
ANR	10508894	Identifier	dest		10508782	0					
ANR	10508895	AdditiveExpression	maxout - 1		10508782	1		-			
ANR	10508896	Identifier	maxout		10508782	0					
ANR	10508897	PrimaryExpression	1		10508782	1					
ANR	10508898	WhileStatement	while ( * src && destptr < destend )		10508782	4					
ANR	10508899	Condition	* src && destptr < destend	256:11:5747:5771	10508782	0	True				
ANR	10508900	AndExpression	* src && destptr < destend		10508782	0		&&			
ANR	10508901	UnaryOperationExpression	* src		10508782	0					
ANR	10508902	UnaryOperator	*		10508782	0					
ANR	10508903	Identifier	src		10508782	1					
ANR	10508904	RelationalExpression	destptr < destend		10508782	1		<			
ANR	10508905	Identifier	destptr		10508782	0					
ANR	10508906	Identifier	destend		10508782	1					
ANR	10508907	CompoundStatement		48:4:953:953	10508782	1					
ANR	10508908	ExpressionStatement	ch = * src ++	258:6:5786:5797	10508782	0	True				
ANR	10508909	AssignmentExpression	ch = * src ++		10508782	0		=			
ANR	10508910	Identifier	ch		10508782	0					
ANR	10508911	UnaryOperationExpression	* src ++		10508782	1					
ANR	10508912	UnaryOperator	*		10508782	0					
ANR	10508913	PostIncDecOperationExpression	src ++		10508782	1					
ANR	10508914	Identifier	src		10508782	0					
ANR	10508915	IncDec	++		10508782	1					
ANR	10508916	IfStatement	if ( ( ch & 0xe0 ) == 0xc0 )		10508782	1					
ANR	10508917	Condition	( ch & 0xe0 ) == 0xc0	260:10:5810:5828	10508782	0	True				
ANR	10508918	EqualityExpression	( ch & 0xe0 ) == 0xc0		10508782	0		==			
ANR	10508919	BitAndExpression	ch & 0xe0		10508782	0		&			
ANR	10508920	Identifier	ch		10508782	0					
ANR	10508921	PrimaryExpression	0xe0		10508782	1					
ANR	10508922	PrimaryExpression	0xc0		10508782	1					
ANR	10508923	CompoundStatement		52:6:1012:1012	10508782	1					
ANR	10508924	ExpressionStatement	ch = ( ( ch & 0x1f ) << 6 ) | ( * src ++ & 0x3f )	262:1:5840:5881	10508782	0	True				
ANR	10508925	AssignmentExpression	ch = ( ( ch & 0x1f ) << 6 ) | ( * src ++ & 0x3f )		10508782	0		=			
ANR	10508926	Identifier	ch		10508782	0					
ANR	10508927	InclusiveOrExpression	( ( ch & 0x1f ) << 6 ) | ( * src ++ & 0x3f )		10508782	1		|			
ANR	10508928	ShiftExpression	( ch & 0x1f ) << 6		10508782	0		<<			
ANR	10508929	BitAndExpression	ch & 0x1f		10508782	0		&			
ANR	10508930	Identifier	ch		10508782	0					
ANR	10508931	PrimaryExpression	0x1f		10508782	1					
ANR	10508932	PrimaryExpression	6		10508782	1					
ANR	10508933	BitAndExpression	* src ++ & 0x3f		10508782	1		&			
ANR	10508934	UnaryOperationExpression	* src ++		10508782	0					
ANR	10508935	UnaryOperator	*		10508782	0					
ANR	10508936	PostIncDecOperationExpression	src ++		10508782	1					
ANR	10508937	Identifier	src		10508782	0					
ANR	10508938	IncDec	++		10508782	1					
ANR	10508939	PrimaryExpression	0x3f		10508782	1					
ANR	10508940	IfStatement	if ( ch < maxch )		10508782	1					
ANR	10508941	Condition	ch < maxch	264:5:5889:5898	10508782	0	True				
ANR	10508942	RelationalExpression	ch < maxch		10508782	0		<			
ANR	10508943	Identifier	ch		10508782	0					
ANR	10508944	Identifier	maxch		10508782	1					
ANR	10508945	ExpressionStatement	* destptr ++ = ch	265:10:5911:5926	10508782	1	True				
ANR	10508946	AssignmentExpression	* destptr ++ = ch		10508782	0		=			
ANR	10508947	UnaryOperationExpression	* destptr ++		10508782	0					
ANR	10508948	UnaryOperator	*		10508782	0					
ANR	10508949	PostIncDecOperationExpression	destptr ++		10508782	1					
ANR	10508950	Identifier	destptr		10508782	0					
ANR	10508951	IncDec	++		10508782	1					
ANR	10508952	Identifier	ch		10508782	1					
ANR	10508953	ElseStatement	else		10508782	0					
ANR	10508954	ExpressionStatement	* destptr ++ = '?'	267:10:5944:5960	10508782	0	True				
ANR	10508955	AssignmentExpression	* destptr ++ = '?'		10508782	0		=			
ANR	10508956	UnaryOperationExpression	* destptr ++		10508782	0					
ANR	10508957	UnaryOperator	*		10508782	0					
ANR	10508958	PostIncDecOperationExpression	destptr ++		10508782	1					
ANR	10508959	Identifier	destptr		10508782	0					
ANR	10508960	IncDec	++		10508782	1					
ANR	10508961	PrimaryExpression	'?'		10508782	1					
ANR	10508962	ElseStatement	else		10508782	0					
ANR	10508963	IfStatement	if ( ( ch & 0xf0 ) == 0xe0 || ( ch & 0xf8 ) == 0xf0 )		10508782	0					
ANR	10508964	Condition	( ch & 0xf0 ) == 0xe0 || ( ch & 0xf8 ) == 0xf0	269:15:5985:6041	10508782	0	True				
ANR	10508965	OrExpression	( ch & 0xf0 ) == 0xe0 || ( ch & 0xf8 ) == 0xf0		10508782	0		||			
ANR	10508966	EqualityExpression	( ch & 0xf0 ) == 0xe0		10508782	0		==			
ANR	10508967	BitAndExpression	ch & 0xf0		10508782	0		&			
ANR	10508968	Identifier	ch		10508782	0					
ANR	10508969	PrimaryExpression	0xf0		10508782	1					
ANR	10508970	PrimaryExpression	0xe0		10508782	1					
ANR	10508971	EqualityExpression	( ch & 0xf8 ) == 0xf0		10508782	1		==			
ANR	10508972	BitAndExpression	ch & 0xf8		10508782	0		&			
ANR	10508973	Identifier	ch		10508782	0					
ANR	10508974	PrimaryExpression	0xf8		10508782	1					
ANR	10508975	PrimaryExpression	0xf0		10508782	1					
ANR	10508976	ExpressionStatement	* destptr ++ = '?'	271:8:6052:6068	10508782	1	True				
ANR	10508977	AssignmentExpression	* destptr ++ = '?'		10508782	0		=			
ANR	10508978	UnaryOperationExpression	* destptr ++		10508782	0					
ANR	10508979	UnaryOperator	*		10508782	0					
ANR	10508980	PostIncDecOperationExpression	destptr ++		10508782	1					
ANR	10508981	Identifier	destptr		10508782	0					
ANR	10508982	IncDec	++		10508782	1					
ANR	10508983	PrimaryExpression	'?'		10508782	1					
ANR	10508984	ElseStatement	else		10508782	0					
ANR	10508985	IfStatement	if ( ! ( ch & 0x80 ) )		10508782	0					
ANR	10508986	Condition	! ( ch & 0x80 )	272:15:6085:6096	10508782	0	True				
ANR	10508987	UnaryOperationExpression	! ( ch & 0x80 )		10508782	0					
ANR	10508988	UnaryOperator	!		10508782	0					
ANR	10508989	BitAndExpression	ch & 0x80		10508782	1		&			
ANR	10508990	Identifier	ch		10508782	0					
ANR	10508991	PrimaryExpression	0x80		10508782	1					
ANR	10508992	ExpressionStatement	* destptr ++ = ch	273:1:6100:6115	10508782	1	True				
ANR	10508993	AssignmentExpression	* destptr ++ = ch		10508782	0		=			
ANR	10508994	UnaryOperationExpression	* destptr ++		10508782	0					
ANR	10508995	UnaryOperator	*		10508782	0					
ANR	10508996	PostIncDecOperationExpression	destptr ++		10508782	1					
ANR	10508997	Identifier	destptr		10508782	0					
ANR	10508998	IncDec	++		10508782	1					
ANR	10508999	Identifier	ch		10508782	1					
ANR	10509000	ExpressionStatement	* destptr = '\\0'	276:4:6128:6143	10508782	5	True				
ANR	10509001	AssignmentExpression	* destptr = '\\0'		10508782	0		=			
ANR	10509002	UnaryOperationExpression	* destptr		10508782	0					
ANR	10509003	UnaryOperator	*		10508782	0					
ANR	10509004	Identifier	destptr		10508782	1					
ANR	10509005	PrimaryExpression	'\\0'		10508782	1					
ANR	10509006	ReturnStatement	return ( ( int ) ( destptr - dest ) ) ;	278:4:6150:6180	10508782	6	True				
ANR	10509007	CastExpression	( int ) ( destptr - dest )		10508782	0					
ANR	10509008	CastTarget	int		10508782	0					
ANR	10509009	AdditiveExpression	destptr - dest		10508782	1		-			
ANR	10509010	Identifier	destptr		10508782	0					
ANR	10509011	Identifier	dest		10508782	1					
ANR	10509012	ExpressionStatement	_cupsMutexLock ( & map_mutex )	286:2:6264:6290	10508782	6	True				
ANR	10509013	CallExpression	_cupsMutexLock ( & map_mutex )		10508782	0					
ANR	10509014	Callee	_cupsMutexLock		10508782	0					
ANR	10509015	Identifier	_cupsMutexLock		10508782	0					
ANR	10509016	ArgumentList	& map_mutex		10508782	1					
ANR	10509017	Argument	& map_mutex		10508782	0					
ANR	10509018	UnaryOperationExpression	& map_mutex		10508782	0					
ANR	10509019	UnaryOperator	&		10508782	0					
ANR	10509020	Identifier	map_mutex		10508782	1					
ANR	10509021	IfStatement	if ( map_encoding != encoding )		10508782	7					
ANR	10509022	Condition	map_encoding != encoding	288:6:6299:6322	10508782	0	True				
ANR	10509023	EqualityExpression	map_encoding != encoding		10508782	0		!=			
ANR	10509024	Identifier	map_encoding		10508782	0					
ANR	10509025	Identifier	encoding		10508782	1					
ANR	10509026	CompoundStatement		80:2:1502:1502	10508782	1					
ANR	10509027	ExpressionStatement	_cupsCharmapFlush ( )	290:4:6333:6352	10508782	0	True				
ANR	10509028	CallExpression	_cupsCharmapFlush ( )		10508782	0					
ANR	10509029	Callee	_cupsCharmapFlush		10508782	0					
ANR	10509030	Identifier	_cupsCharmapFlush		10508782	0					
ANR	10509031	ArgumentList			10508782	1					
ANR	10509032	ExpressionStatement	"map_from_utf8 = iconv_open ( _cupsEncodingName ( encoding ) , ""UTF-8"" )"	292:4:6359:6423	10508782	1	True				
ANR	10509033	AssignmentExpression	"map_from_utf8 = iconv_open ( _cupsEncodingName ( encoding ) , ""UTF-8"" )"		10508782	0		=			
ANR	10509034	Identifier	map_from_utf8		10508782	0					
ANR	10509035	CallExpression	"iconv_open ( _cupsEncodingName ( encoding ) , ""UTF-8"" )"		10508782	1					
ANR	10509036	Callee	iconv_open		10508782	0					
ANR	10509037	Identifier	iconv_open		10508782	0					
ANR	10509038	ArgumentList	_cupsEncodingName ( encoding )		10508782	1					
ANR	10509039	Argument	_cupsEncodingName ( encoding )		10508782	0					
ANR	10509040	CallExpression	_cupsEncodingName ( encoding )		10508782	0					
ANR	10509041	Callee	_cupsEncodingName		10508782	0					
ANR	10509042	Identifier	_cupsEncodingName		10508782	0					
ANR	10509043	ArgumentList	encoding		10508782	1					
ANR	10509044	Argument	encoding		10508782	0					
ANR	10509045	Identifier	encoding		10508782	0					
ANR	10509046	Argument	"""UTF-8"""		10508782	1					
ANR	10509047	PrimaryExpression	"""UTF-8"""		10508782	0					
ANR	10509048	ExpressionStatement	"map_to_utf8 = iconv_open ( ""UTF-8"" , _cupsEncodingName ( encoding ) )"	293:4:6429:6493	10508782	2	True				
ANR	10509049	AssignmentExpression	"map_to_utf8 = iconv_open ( ""UTF-8"" , _cupsEncodingName ( encoding ) )"		10508782	0		=			
ANR	10509050	Identifier	map_to_utf8		10508782	0					
ANR	10509051	CallExpression	"iconv_open ( ""UTF-8"" , _cupsEncodingName ( encoding ) )"		10508782	1					
ANR	10509052	Callee	iconv_open		10508782	0					
ANR	10509053	Identifier	iconv_open		10508782	0					
ANR	10509054	ArgumentList	"""UTF-8"""		10508782	1					
ANR	10509055	Argument	"""UTF-8"""		10508782	0					
ANR	10509056	PrimaryExpression	"""UTF-8"""		10508782	0					
ANR	10509057	Argument	_cupsEncodingName ( encoding )		10508782	1					
ANR	10509058	CallExpression	_cupsEncodingName ( encoding )		10508782	0					
ANR	10509059	Callee	_cupsEncodingName		10508782	0					
ANR	10509060	Identifier	_cupsEncodingName		10508782	0					
ANR	10509061	ArgumentList	encoding		10508782	1					
ANR	10509062	Argument	encoding		10508782	0					
ANR	10509063	Identifier	encoding		10508782	0					
ANR	10509064	ExpressionStatement	map_encoding = encoding	294:4:6499:6523	10508782	3	True				
ANR	10509065	AssignmentExpression	map_encoding = encoding		10508782	0		=			
ANR	10509066	Identifier	map_encoding		10508782	0					
ANR	10509067	Identifier	encoding		10508782	1					
ANR	10509068	IfStatement	if ( map_from_utf8 != ( iconv_t ) - 1 )		10508782	8					
ANR	10509069	Condition	map_from_utf8 != ( iconv_t ) - 1	297:6:6536:6563	10508782	0	True				
ANR	10509070	EqualityExpression	map_from_utf8 != ( iconv_t ) - 1		10508782	0		!=			
ANR	10509071	Identifier	map_from_utf8		10508782	0					
ANR	10509072	CastExpression	( iconv_t ) - 1		10508782	1					
ANR	10509073	CastTarget	iconv_t		10508782	0					
ANR	10509074	UnaryOperationExpression	- 1		10508782	1					
ANR	10509075	UnaryOperator	-		10508782	0					
ANR	10509076	PrimaryExpression	1		10508782	1					
ANR	10509077	CompoundStatement		90:4:1749:1775	10508782	1					
ANR	10509078	IdentifierDeclStatement	char * altsrc = ( char * ) src ;	299:4:6574:6600	10508782	0	True				
ANR	10509079	IdentifierDecl	* altsrc = ( char * ) src		10508782	0					
ANR	10509080	IdentifierDeclType	char *		10508782	0					
ANR	10509081	Identifier	altsrc		10508782	1					
ANR	10509082	AssignmentExpression	* altsrc = ( char * ) src		10508782	2		=			
ANR	10509083	Identifier	altsrc		10508782	0					
ANR	10509084	CastExpression	( char * ) src		10508782	1					
ANR	10509085	CastTarget	char *		10508782	0					
ANR	10509086	Identifier	src		10508782	1					
ANR	10509087	ExpressionStatement	srclen = strlen ( ( char * ) src )	301:4:6644:6678	10508782	1	True				
ANR	10509088	AssignmentExpression	srclen = strlen ( ( char * ) src )		10508782	0		=			
ANR	10509089	Identifier	srclen		10508782	0					
ANR	10509090	CallExpression	strlen ( ( char * ) src )		10508782	1					
ANR	10509091	Callee	strlen		10508782	0					
ANR	10509092	Identifier	strlen		10508782	0					
ANR	10509093	ArgumentList	( char * ) src		10508782	1					
ANR	10509094	Argument	( char * ) src		10508782	0					
ANR	10509095	CastExpression	( char * ) src		10508782	0					
ANR	10509096	CastTarget	char *		10508782	0					
ANR	10509097	Identifier	src		10508782	1					
ANR	10509098	ExpressionStatement	outBytesLeft = maxout - 1	302:4:6684:6709	10508782	2	True				
ANR	10509099	AssignmentExpression	outBytesLeft = maxout - 1		10508782	0		=			
ANR	10509100	Identifier	outBytesLeft		10508782	0					
ANR	10509101	AdditiveExpression	maxout - 1		10508782	1		-			
ANR	10509102	Identifier	maxout		10508782	0					
ANR	10509103	PrimaryExpression	1		10508782	1					
ANR	10509104	ExpressionStatement	"iconv ( map_from_utf8 , & altsrc , & srclen , & destptr , & outBytesLeft )"	304:4:6716:6779	10508782	3	True				
ANR	10509105	CallExpression	"iconv ( map_from_utf8 , & altsrc , & srclen , & destptr , & outBytesLeft )"		10508782	0					
ANR	10509106	Callee	iconv		10508782	0					
ANR	10509107	Identifier	iconv		10508782	0					
ANR	10509108	ArgumentList	map_from_utf8		10508782	1					
ANR	10509109	Argument	map_from_utf8		10508782	0					
ANR	10509110	Identifier	map_from_utf8		10508782	0					
ANR	10509111	Argument	& altsrc		10508782	1					
ANR	10509112	UnaryOperationExpression	& altsrc		10508782	0					
ANR	10509113	UnaryOperator	&		10508782	0					
ANR	10509114	Identifier	altsrc		10508782	1					
ANR	10509115	Argument	& srclen		10508782	2					
ANR	10509116	UnaryOperationExpression	& srclen		10508782	0					
ANR	10509117	UnaryOperator	&		10508782	0					
ANR	10509118	Identifier	srclen		10508782	1					
ANR	10509119	Argument	& destptr		10508782	3					
ANR	10509120	UnaryOperationExpression	& destptr		10508782	0					
ANR	10509121	UnaryOperator	&		10508782	0					
ANR	10509122	Identifier	destptr		10508782	1					
ANR	10509123	Argument	& outBytesLeft		10508782	4					
ANR	10509124	UnaryOperationExpression	& outBytesLeft		10508782	0					
ANR	10509125	UnaryOperator	&		10508782	0					
ANR	10509126	Identifier	outBytesLeft		10508782	1					
ANR	10509127	ExpressionStatement	* destptr = '\\0'	305:4:6785:6800	10508782	4	True				
ANR	10509128	AssignmentExpression	* destptr = '\\0'		10508782	0		=			
ANR	10509129	UnaryOperationExpression	* destptr		10508782	0					
ANR	10509130	UnaryOperator	*		10508782	0					
ANR	10509131	Identifier	destptr		10508782	1					
ANR	10509132	PrimaryExpression	'\\0'		10508782	1					
ANR	10509133	ExpressionStatement	_cupsMutexUnlock ( & map_mutex )	307:4:6807:6835	10508782	5	True				
ANR	10509134	CallExpression	_cupsMutexUnlock ( & map_mutex )		10508782	0					
ANR	10509135	Callee	_cupsMutexUnlock		10508782	0					
ANR	10509136	Identifier	_cupsMutexUnlock		10508782	0					
ANR	10509137	ArgumentList	& map_mutex		10508782	1					
ANR	10509138	Argument	& map_mutex		10508782	0					
ANR	10509139	UnaryOperationExpression	& map_mutex		10508782	0					
ANR	10509140	UnaryOperator	&		10508782	0					
ANR	10509141	Identifier	map_mutex		10508782	1					
ANR	10509142	ReturnStatement	return ( ( int ) ( destptr - dest ) ) ;	309:4:6842:6872	10508782	6	True				
ANR	10509143	CastExpression	( int ) ( destptr - dest )		10508782	0					
ANR	10509144	CastTarget	int		10508782	0					
ANR	10509145	AdditiveExpression	destptr - dest		10508782	1		-			
ANR	10509146	Identifier	destptr		10508782	0					
ANR	10509147	Identifier	dest		10508782	1					
ANR	10509148	ExpressionStatement	_cupsMutexUnlock ( & map_mutex )	312:2:6881:6909	10508782	9	True				
ANR	10509149	CallExpression	_cupsMutexUnlock ( & map_mutex )		10508782	0					
ANR	10509150	Callee	_cupsMutexUnlock		10508782	0					
ANR	10509151	Identifier	_cupsMutexUnlock		10508782	0					
ANR	10509152	ArgumentList	& map_mutex		10508782	1					
ANR	10509153	Argument	& map_mutex		10508782	0					
ANR	10509154	UnaryOperationExpression	& map_mutex		10508782	0					
ANR	10509155	UnaryOperator	&		10508782	0					
ANR	10509156	Identifier	map_mutex		10508782	1					
ANR	10509157	ExpressionStatement	* destptr = '\\0'	319:2:6990:7005	10508782	10	True				
ANR	10509158	AssignmentExpression	* destptr = '\\0'		10508782	0		=			
ANR	10509159	UnaryOperationExpression	* destptr		10508782	0					
ANR	10509160	UnaryOperator	*		10508782	0					
ANR	10509161	Identifier	destptr		10508782	1					
ANR	10509162	PrimaryExpression	'\\0'		10508782	1					
ANR	10509163	ReturnStatement	return ( - 1 ) ;	321:2:7010:7021	10508782	11	True				
ANR	10509164	UnaryOperationExpression	- 1		10508782	0					
ANR	10509165	UnaryOperator	-		10508782	0					
ANR	10509166	PrimaryExpression	1		10508782	1					
ANR	10509167	ReturnType	int		10508782	1					
ANR	10509168	Identifier	cupsUTF8ToCharset		10508782	2					
ANR	10509169	ParameterList	"char * dest , const cups_utf8_t * src , const int maxout , const cups_encoding_t encoding"		10508782	3					
ANR	10509170	Parameter	char * dest	206:4:4629:4641	10508782	0	True				
ANR	10509171	ParameterType	char *		10508782	0					
ANR	10509172	Identifier	dest		10508782	1					
ANR	10509173	Parameter	const cups_utf8_t * src	207:4:4672:4695	10508782	1	True				
ANR	10509174	ParameterType	const cups_utf8_t *		10508782	0					
ANR	10509175	Identifier	src		10508782	1					
ANR	10509176	Parameter	const int maxout	208:4:4727:4745	10508782	2	True				
ANR	10509177	ParameterType	const int		10508782	0					
ANR	10509178	Identifier	maxout		10508782	1					
ANR	10509179	Parameter	const cups_encoding_t encoding	209:4:4773:4802	10508782	3	True				
ANR	10509180	ParameterType	const cups_encoding_t		10508782	0					
ANR	10509181	Identifier	encoding		10508782	1					
ANR	10509182	CFGEntryNode	ENTRY		10508782		True				
ANR	10509183	CFGExitNode	EXIT		10508782		True				
ANR	10509184	Symbol	& map_mutex		10508782						
ANR	10509185	Symbol	srclen		10508782						
ANR	10509186	Symbol	* dest		10508782						
ANR	10509187	Symbol	& outBytesLeft		10508782						
ANR	10509188	Symbol	map_encoding		10508782						
ANR	10509189	Symbol	dest		10508782						
ANR	10509190	Symbol	& srclen		10508782						
ANR	10509191	Symbol	* src		10508782						
ANR	10509192	Symbol	strlen		10508782						
ANR	10509193	Symbol	iconv_open		10508782						
ANR	10509194	Symbol	destptr		10508782						
ANR	10509195	Symbol	maxch		10508782						
ANR	10509196	Symbol	src		10508782						
ANR	10509197	Symbol	maxout		10508782						
ANR	10509198	Symbol	ch		10508782						
ANR	10509199	Symbol	* destptr		10508782						
ANR	10509200	Symbol	CUPS_US_ASCII		10508782						
ANR	10509201	Symbol	CUPS_ENCODING_VBCS_END		10508782						
ANR	10509202	Symbol	destend		10508782						
ANR	10509203	Symbol	encoding		10508782						
ANR	10509204	Symbol	outBytesLeft		10508782						
ANR	10509205	Symbol	map_to_utf8		10508782						
ANR	10509206	Symbol	* destptr ++		10508782						
ANR	10509207	Symbol	_cupsEncodingName		10508782						
ANR	10509208	Symbol	& destptr		10508782						
ANR	10509209	Symbol	altsrc		10508782						
ANR	10509210	Symbol	CUPS_ISO8859_1		10508782						
ANR	10509211	Symbol	& altsrc		10508782						
ANR	10509212	Symbol	* src ++		10508782						
ANR	10509213	Symbol	map_from_utf8		10508782						
ANR	10509214	Symbol	CUPS_UTF8		10508782						
ANR	10509215	Function	cupsUTF8ToUTF32	341:0:7552:11766							
ANR	10509216	FunctionDef	"cupsUTF8ToUTF32 (cups_utf32_t * dest , const cups_utf8_t * src , const int maxout)"		10509215	0					
ANR	10509217	CompoundStatement		346:0:7767:11766	10509215	0					
ANR	10509218	IdentifierDeclStatement	int i ;	347:2:7771:7777	10509215	0	True				
ANR	10509219	IdentifierDecl	i		10509215	0					
ANR	10509220	IdentifierDeclType	int		10509215	0					
ANR	10509221	Identifier	i		10509215	1					
ANR	10509222	IdentifierDeclStatement	cups_utf8_t ch ;	348:2:7806:7820	10509215	1	True				
ANR	10509223	IdentifierDecl	ch		10509215	0					
ANR	10509224	IdentifierDeclType	cups_utf8_t		10509215	0					
ANR	10509225	Identifier	ch		10509215	1					
ANR	10509226	IdentifierDeclStatement	cups_utf8_t next ;	349:2:7848:7864	10509215	2	True				
ANR	10509227	IdentifierDecl	next		10509215	0					
ANR	10509228	IdentifierDeclType	cups_utf8_t		10509215	0					
ANR	10509229	Identifier	next		10509215	1					
ANR	10509230	IdentifierDeclStatement	cups_utf32_t ch32 ;	350:2:7897:7914	10509215	3	True				
ANR	10509231	IdentifierDecl	ch32		10509215	0					
ANR	10509232	IdentifierDeclType	cups_utf32_t		10509215	0					
ANR	10509233	Identifier	ch32		10509215	1					
ANR	10509234	ExpressionStatement	"DEBUG_printf ( ( ""2cupsUTF8ToUTF32(dest=%p, src=\\""%s\\"", maxout=%d)"" , dest , src , maxout ) )"	357:2:8011:8112	10509215	4	True				
ANR	10509235	CallExpression	"DEBUG_printf ( ( ""2cupsUTF8ToUTF32(dest=%p, src=\\""%s\\"", maxout=%d)"" , dest , src , maxout ) )"		10509215	0					
ANR	10509236	Callee	DEBUG_printf		10509215	0					
ANR	10509237	Identifier	DEBUG_printf		10509215	0					
ANR	10509238	ArgumentList	"""2cupsUTF8ToUTF32(dest=%p, src=\\""%s\\"", maxout=%d)"" , dest , src , maxout"		10509215	1					
ANR	10509239	Argument	"""2cupsUTF8ToUTF32(dest=%p, src=\\""%s\\"", maxout=%d)"" , dest , src , maxout"		10509215	0					
ANR	10509240	Expression	"""2cupsUTF8ToUTF32(dest=%p, src=\\""%s\\"", maxout=%d)"" , dest , src , maxout"		10509215	0					
ANR	10509241	PrimaryExpression	"""2cupsUTF8ToUTF32(dest=%p, src=\\""%s\\"", maxout=%d)"""		10509215	0					
ANR	10509242	Expression	"dest , src , maxout"		10509215	1					
ANR	10509243	Identifier	dest		10509215	0					
ANR	10509244	Expression	"src , maxout"		10509215	1					
ANR	10509245	Identifier	src		10509215	0					
ANR	10509246	Identifier	maxout		10509215	1					
ANR	10509247	IfStatement	if ( dest )		10509215	5					
ANR	10509248	Condition	dest	360:6:8121:8124	10509215	0	True				
ANR	10509249	Identifier	dest		10509215	0					
ANR	10509250	ExpressionStatement	* dest = 0	361:4:8131:8140	10509215	1	True				
ANR	10509251	AssignmentExpression	* dest = 0		10509215	0		=			
ANR	10509252	UnaryOperationExpression	* dest		10509215	0					
ANR	10509253	UnaryOperator	*		10509215	0					
ANR	10509254	Identifier	dest		10509215	1					
ANR	10509255	PrimaryExpression	0		10509215	1					
ANR	10509256	IfStatement	if ( ! dest || ! src || maxout < 1 || maxout > CUPS_MAX_USTRING )		10509215	6					
ANR	10509257	Condition	! dest || ! src || maxout < 1 || maxout > CUPS_MAX_USTRING	363:6:8149:8204	10509215	0	True				
ANR	10509258	OrExpression	! dest || ! src || maxout < 1 || maxout > CUPS_MAX_USTRING		10509215	0		||			
ANR	10509259	UnaryOperationExpression	! dest		10509215	0					
ANR	10509260	UnaryOperator	!		10509215	0					
ANR	10509261	Identifier	dest		10509215	1					
ANR	10509262	OrExpression	! src || maxout < 1 || maxout > CUPS_MAX_USTRING		10509215	1		||			
ANR	10509263	UnaryOperationExpression	! src		10509215	0					
ANR	10509264	UnaryOperator	!		10509215	0					
ANR	10509265	Identifier	src		10509215	1					
ANR	10509266	OrExpression	maxout < 1 || maxout > CUPS_MAX_USTRING		10509215	1		||			
ANR	10509267	RelationalExpression	maxout < 1		10509215	0		<			
ANR	10509268	Identifier	maxout		10509215	0					
ANR	10509269	PrimaryExpression	1		10509215	1					
ANR	10509270	RelationalExpression	maxout > CUPS_MAX_USTRING		10509215	1		>			
ANR	10509271	Identifier	maxout		10509215	0					
ANR	10509272	Identifier	CUPS_MAX_USTRING		10509215	1					
ANR	10509273	CompoundStatement		19:2:441:441	10509215	1					
ANR	10509274	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad arguments)"" )"	365:4:8215:8275	10509215	0	True				
ANR	10509275	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad arguments)"" )"		10509215	0					
ANR	10509276	Callee	DEBUG_puts		10509215	0					
ANR	10509277	Identifier	DEBUG_puts		10509215	0					
ANR	10509278	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad arguments)"""		10509215	1					
ANR	10509279	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad arguments)"""		10509215	0					
ANR	10509280	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad arguments)"""		10509215	0					
ANR	10509281	ReturnStatement	return ( - 1 ) ;	367:4:8282:8293	10509215	1	True				
ANR	10509282	UnaryOperationExpression	- 1		10509215	0					
ANR	10509283	UnaryOperator	-		10509215	0					
ANR	10509284	PrimaryExpression	1		10509215	1					
ANR	10509285	ForStatement	for ( i = maxout - 1 ; * src && i > 0 ; i -- )		10509215	7					
ANR	10509286	ForInit	i = maxout - 1 ;	374:7:8361:8375	10509215	0	True				
ANR	10509287	AssignmentExpression	i = maxout - 1		10509215	0		=			
ANR	10509288	Identifier	i		10509215	0					
ANR	10509289	AdditiveExpression	maxout - 1		10509215	1		-			
ANR	10509290	Identifier	maxout		10509215	0					
ANR	10509291	PrimaryExpression	1		10509215	1					
ANR	10509292	Condition	* src && i > 0	374:23:8377:8389	10509215	1	True				
ANR	10509293	AndExpression	* src && i > 0		10509215	0		&&			
ANR	10509294	UnaryOperationExpression	* src		10509215	0					
ANR	10509295	UnaryOperator	*		10509215	0					
ANR	10509296	Identifier	src		10509215	1					
ANR	10509297	RelationalExpression	i > 0		10509215	1		>			
ANR	10509298	Identifier	i		10509215	0					
ANR	10509299	PrimaryExpression	0		10509215	1					
ANR	10509300	PostIncDecOperationExpression	i --	374:38:8392:8395	10509215	2	True				
ANR	10509301	Identifier	i		10509215	0					
ANR	10509302	IncDec	--		10509215	1					
ANR	10509303	CompoundStatement		30:2:632:632	10509215	3					
ANR	10509304	ExpressionStatement	ch = * src ++	376:4:8406:8417	10509215	0	True				
ANR	10509305	AssignmentExpression	ch = * src ++		10509215	0		=			
ANR	10509306	Identifier	ch		10509215	0					
ANR	10509307	UnaryOperationExpression	* src ++		10509215	1					
ANR	10509308	UnaryOperator	*		10509215	0					
ANR	10509309	PostIncDecOperationExpression	src ++		10509215	1					
ANR	10509310	Identifier	src		10509215	0					
ANR	10509311	IncDec	++		10509215	1					
ANR	10509312	IfStatement	if ( ! ( ch & 0x80 ) )		10509215	1					
ANR	10509313	Condition	! ( ch & 0x80 )	382:8:8498:8509	10509215	0	True				
ANR	10509314	UnaryOperationExpression	! ( ch & 0x80 )		10509215	0					
ANR	10509315	UnaryOperator	!		10509215	0					
ANR	10509316	BitAndExpression	ch & 0x80		10509215	1		&			
ANR	10509317	Identifier	ch		10509215	0					
ANR	10509318	PrimaryExpression	0x80		10509215	1					
ANR	10509319	CompoundStatement		38:4:748:748	10509215	1					
ANR	10509320	ExpressionStatement	* dest ++ = ch	388:6:8587:8599	10509215	0	True				
ANR	10509321	AssignmentExpression	* dest ++ = ch		10509215	0		=			
ANR	10509322	UnaryOperationExpression	* dest ++		10509215	0					
ANR	10509323	UnaryOperator	*		10509215	0					
ANR	10509324	PostIncDecOperationExpression	dest ++		10509215	1					
ANR	10509325	Identifier	dest		10509215	0					
ANR	10509326	IncDec	++		10509215	1					
ANR	10509327	Identifier	ch		10509215	1					
ANR	10509328	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x => %08X"" , src [ - 1 ] , ch ) )"	390:6:8608:8669	10509215	1	True				
ANR	10509329	CallExpression	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x => %08X"" , src [ - 1 ] , ch ) )"		10509215	0					
ANR	10509330	Callee	DEBUG_printf		10509215	0					
ANR	10509331	Identifier	DEBUG_printf		10509215	0					
ANR	10509332	ArgumentList	"""4cupsUTF8ToUTF32: %02x => %08X"" , src [ - 1 ] , ch"		10509215	1					
ANR	10509333	Argument	"""4cupsUTF8ToUTF32: %02x => %08X"" , src [ - 1 ] , ch"		10509215	0					
ANR	10509334	Expression	"""4cupsUTF8ToUTF32: %02x => %08X"" , src [ - 1 ] , ch"		10509215	0					
ANR	10509335	PrimaryExpression	"""4cupsUTF8ToUTF32: %02x => %08X"""		10509215	0					
ANR	10509336	Expression	"src [ - 1 ] , ch"		10509215	1					
ANR	10509337	ArrayIndexing	src [ - 1 ]		10509215	0					
ANR	10509338	Identifier	src		10509215	0					
ANR	10509339	UnaryOperationExpression	- 1		10509215	1					
ANR	10509340	UnaryOperator	-		10509215	0					
ANR	10509341	PrimaryExpression	1		10509215	1					
ANR	10509342	Identifier	ch		10509215	1					
ANR	10509343	ContinueStatement	continue ;	391:6:8677:8685	10509215	2	True				
ANR	10509344	ElseStatement	else		10509215	0					
ANR	10509345	IfStatement	if ( ( ch & 0xe0 ) == 0xc0 )		10509215	0					
ANR	10509346	Condition	( ch & 0xe0 ) == 0xc0	393:13:8706:8724	10509215	0	True				
ANR	10509347	EqualityExpression	( ch & 0xe0 ) == 0xc0		10509215	0		==			
ANR	10509348	BitAndExpression	ch & 0xe0		10509215	0		&			
ANR	10509349	Identifier	ch		10509215	0					
ANR	10509350	PrimaryExpression	0xe0		10509215	1					
ANR	10509351	PrimaryExpression	0xc0		10509215	1					
ANR	10509352	CompoundStatement		49:4:963:963	10509215	1					
ANR	10509353	ExpressionStatement	next = * src ++	399:6:8802:8815	10509215	0	True				
ANR	10509354	AssignmentExpression	next = * src ++		10509215	0		=			
ANR	10509355	Identifier	next		10509215	0					
ANR	10509356	UnaryOperationExpression	* src ++		10509215	1					
ANR	10509357	UnaryOperator	*		10509215	0					
ANR	10509358	PostIncDecOperationExpression	src ++		10509215	1					
ANR	10509359	Identifier	src		10509215	0					
ANR	10509360	IncDec	++		10509215	1					
ANR	10509361	IfStatement	if ( ( next & 0xc0 ) != 0x80 )		10509215	1					
ANR	10509362	Condition	( next & 0xc0 ) != 0x80	400:10:8827:8847	10509215	0	True				
ANR	10509363	EqualityExpression	( next & 0xc0 ) != 0x80		10509215	0		!=			
ANR	10509364	BitAndExpression	next & 0xc0		10509215	0		&			
ANR	10509365	Identifier	next		10509215	0					
ANR	10509366	PrimaryExpression	0xc0		10509215	1					
ANR	10509367	PrimaryExpression	0x80		10509215	1					
ANR	10509368	CompoundStatement		56:6:1088:1088	10509215	1					
ANR	10509369	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	402:8:8866:8931	10509215	0	True				
ANR	10509370	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509371	Callee	DEBUG_puts		10509215	0					
ANR	10509372	Identifier	DEBUG_puts		10509215	0					
ANR	10509373	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509374	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509375	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509376	ReturnStatement	return ( - 1 ) ;	404:1:8935:8946	10509215	1	True				
ANR	10509377	UnaryOperationExpression	- 1		10509215	0					
ANR	10509378	UnaryOperator	-		10509215	0					
ANR	10509379	PrimaryExpression	1		10509215	1					
ANR	10509380	ExpressionStatement	ch32 = ( ( ch & 0x1f ) << 6 ) | ( next & 0x3f )	407:6:8963:9004	10509215	2	True				
ANR	10509381	AssignmentExpression	ch32 = ( ( ch & 0x1f ) << 6 ) | ( next & 0x3f )		10509215	0		=			
ANR	10509382	Identifier	ch32		10509215	0					
ANR	10509383	InclusiveOrExpression	( ( ch & 0x1f ) << 6 ) | ( next & 0x3f )		10509215	1		|			
ANR	10509384	ShiftExpression	( ch & 0x1f ) << 6		10509215	0		<<			
ANR	10509385	BitAndExpression	ch & 0x1f		10509215	0		&			
ANR	10509386	Identifier	ch		10509215	0					
ANR	10509387	PrimaryExpression	0x1f		10509215	1					
ANR	10509388	PrimaryExpression	6		10509215	1					
ANR	10509389	BitAndExpression	next & 0x3f		10509215	1		&			
ANR	10509390	Identifier	next		10509215	0					
ANR	10509391	PrimaryExpression	0x3f		10509215	1					
ANR	10509392	IfStatement	if ( ch32 < 0x80 )		10509215	3					
ANR	10509393	Condition	ch32 < 0x80	413:10:9090:9100	10509215	0	True				
ANR	10509394	RelationalExpression	ch32 < 0x80		10509215	0		<			
ANR	10509395	Identifier	ch32		10509215	0					
ANR	10509396	PrimaryExpression	0x80		10509215	1					
ANR	10509397	CompoundStatement		69:6:1341:1341	10509215	1					
ANR	10509398	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	415:8:9119:9184	10509215	0	True				
ANR	10509399	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509400	Callee	DEBUG_puts		10509215	0					
ANR	10509401	Identifier	DEBUG_puts		10509215	0					
ANR	10509402	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509403	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509404	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509405	ReturnStatement	return ( - 1 ) ;	417:1:9188:9199	10509215	1	True				
ANR	10509406	UnaryOperationExpression	- 1		10509215	0					
ANR	10509407	UnaryOperator	-		10509215	0					
ANR	10509408	PrimaryExpression	1		10509215	1					
ANR	10509409	ExpressionStatement	* dest ++ = ch32	420:6:9216:9230	10509215	4	True				
ANR	10509410	AssignmentExpression	* dest ++ = ch32		10509215	0		=			
ANR	10509411	UnaryOperationExpression	* dest ++		10509215	0					
ANR	10509412	UnaryOperator	*		10509215	0					
ANR	10509413	PostIncDecOperationExpression	dest ++		10509215	1					
ANR	10509414	Identifier	dest		10509215	0					
ANR	10509415	IncDec	++		10509215	1					
ANR	10509416	Identifier	ch32		10509215	1					
ANR	10509417	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x %02x => %08X"" , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32 ) )"	422:6:9239:9346	10509215	5	True				
ANR	10509418	CallExpression	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x %02x => %08X"" , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32 ) )"		10509215	0					
ANR	10509419	Callee	DEBUG_printf		10509215	0					
ANR	10509420	Identifier	DEBUG_printf		10509215	0					
ANR	10509421	ArgumentList	"""4cupsUTF8ToUTF32: %02x %02x => %08X"" , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509422	Argument	"""4cupsUTF8ToUTF32: %02x %02x => %08X"" , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	0					
ANR	10509423	Expression	"""4cupsUTF8ToUTF32: %02x %02x => %08X"" , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	0					
ANR	10509424	PrimaryExpression	"""4cupsUTF8ToUTF32: %02x %02x => %08X"""		10509215	0					
ANR	10509425	Expression	"src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509426	ArrayIndexing	src [ - 2 ]		10509215	0					
ANR	10509427	Identifier	src		10509215	0					
ANR	10509428	UnaryOperationExpression	- 2		10509215	1					
ANR	10509429	UnaryOperator	-		10509215	0					
ANR	10509430	PrimaryExpression	2		10509215	1					
ANR	10509431	Expression	"src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509432	ArrayIndexing	src [ - 1 ]		10509215	0					
ANR	10509433	Identifier	src		10509215	0					
ANR	10509434	UnaryOperationExpression	- 1		10509215	1					
ANR	10509435	UnaryOperator	-		10509215	0					
ANR	10509436	PrimaryExpression	1		10509215	1					
ANR	10509437	CastExpression	( unsigned ) ch32		10509215	1					
ANR	10509438	CastTarget	unsigned		10509215	0					
ANR	10509439	Identifier	ch32		10509215	1					
ANR	10509440	ElseStatement	else		10509215	0					
ANR	10509441	IfStatement	if ( ( ch & 0xf0 ) == 0xe0 )		10509215	0					
ANR	10509442	Condition	( ch & 0xf0 ) == 0xe0	425:13:9367:9385	10509215	0	True				
ANR	10509443	EqualityExpression	( ch & 0xf0 ) == 0xe0		10509215	0		==			
ANR	10509444	BitAndExpression	ch & 0xf0		10509215	0		&			
ANR	10509445	Identifier	ch		10509215	0					
ANR	10509446	PrimaryExpression	0xf0		10509215	1					
ANR	10509447	PrimaryExpression	0xe0		10509215	1					
ANR	10509448	CompoundStatement		81:4:1624:1624	10509215	1					
ANR	10509449	ExpressionStatement	next = * src ++	431:6:9472:9485	10509215	0	True				
ANR	10509450	AssignmentExpression	next = * src ++		10509215	0		=			
ANR	10509451	Identifier	next		10509215	0					
ANR	10509452	UnaryOperationExpression	* src ++		10509215	1					
ANR	10509453	UnaryOperator	*		10509215	0					
ANR	10509454	PostIncDecOperationExpression	src ++		10509215	1					
ANR	10509455	Identifier	src		10509215	0					
ANR	10509456	IncDec	++		10509215	1					
ANR	10509457	IfStatement	if ( ( next & 0xc0 ) != 0x80 )		10509215	1					
ANR	10509458	Condition	( next & 0xc0 ) != 0x80	432:10:9497:9517	10509215	0	True				
ANR	10509459	EqualityExpression	( next & 0xc0 ) != 0x80		10509215	0		!=			
ANR	10509460	BitAndExpression	next & 0xc0		10509215	0		&			
ANR	10509461	Identifier	next		10509215	0					
ANR	10509462	PrimaryExpression	0xc0		10509215	1					
ANR	10509463	PrimaryExpression	0x80		10509215	1					
ANR	10509464	CompoundStatement		88:6:1758:1758	10509215	1					
ANR	10509465	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	434:8:9536:9601	10509215	0	True				
ANR	10509466	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509467	Callee	DEBUG_puts		10509215	0					
ANR	10509468	Identifier	DEBUG_puts		10509215	0					
ANR	10509469	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509470	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509471	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509472	ReturnStatement	return ( - 1 ) ;	436:1:9605:9616	10509215	1	True				
ANR	10509473	UnaryOperationExpression	- 1		10509215	0					
ANR	10509474	UnaryOperator	-		10509215	0					
ANR	10509475	PrimaryExpression	1		10509215	1					
ANR	10509476	ExpressionStatement	ch32 = ( ( ch & 0x0f ) << 6 ) | ( next & 0x3f )	439:6:9633:9674	10509215	2	True				
ANR	10509477	AssignmentExpression	ch32 = ( ( ch & 0x0f ) << 6 ) | ( next & 0x3f )		10509215	0		=			
ANR	10509478	Identifier	ch32		10509215	0					
ANR	10509479	InclusiveOrExpression	( ( ch & 0x0f ) << 6 ) | ( next & 0x3f )		10509215	1		|			
ANR	10509480	ShiftExpression	( ch & 0x0f ) << 6		10509215	0		<<			
ANR	10509481	BitAndExpression	ch & 0x0f		10509215	0		&			
ANR	10509482	Identifier	ch		10509215	0					
ANR	10509483	PrimaryExpression	0x0f		10509215	1					
ANR	10509484	PrimaryExpression	6		10509215	1					
ANR	10509485	BitAndExpression	next & 0x3f		10509215	1		&			
ANR	10509486	Identifier	next		10509215	0					
ANR	10509487	PrimaryExpression	0x3f		10509215	1					
ANR	10509488	ExpressionStatement	next = * src ++	441:6:9683:9696	10509215	3	True				
ANR	10509489	AssignmentExpression	next = * src ++		10509215	0		=			
ANR	10509490	Identifier	next		10509215	0					
ANR	10509491	UnaryOperationExpression	* src ++		10509215	1					
ANR	10509492	UnaryOperator	*		10509215	0					
ANR	10509493	PostIncDecOperationExpression	src ++		10509215	1					
ANR	10509494	Identifier	src		10509215	0					
ANR	10509495	IncDec	++		10509215	1					
ANR	10509496	IfStatement	if ( ( next & 0xc0 ) != 0x80 )		10509215	4					
ANR	10509497	Condition	( next & 0xc0 ) != 0x80	442:10:9708:9728	10509215	0	True				
ANR	10509498	EqualityExpression	( next & 0xc0 ) != 0x80		10509215	0		!=			
ANR	10509499	BitAndExpression	next & 0xc0		10509215	0		&			
ANR	10509500	Identifier	next		10509215	0					
ANR	10509501	PrimaryExpression	0xc0		10509215	1					
ANR	10509502	PrimaryExpression	0x80		10509215	1					
ANR	10509503	CompoundStatement		98:6:1969:1969	10509215	1					
ANR	10509504	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	444:8:9747:9812	10509215	0	True				
ANR	10509505	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509506	Callee	DEBUG_puts		10509215	0					
ANR	10509507	Identifier	DEBUG_puts		10509215	0					
ANR	10509508	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509509	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509510	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509511	ReturnStatement	return ( - 1 ) ;	446:1:9816:9827	10509215	1	True				
ANR	10509512	UnaryOperationExpression	- 1		10509215	0					
ANR	10509513	UnaryOperator	-		10509215	0					
ANR	10509514	PrimaryExpression	1		10509215	1					
ANR	10509515	ExpressionStatement	ch32 = ( ch32 << 6 ) | ( next & 0x3f )	449:6:9844:9878	10509215	5	True				
ANR	10509516	AssignmentExpression	ch32 = ( ch32 << 6 ) | ( next & 0x3f )		10509215	0		=			
ANR	10509517	Identifier	ch32		10509215	0					
ANR	10509518	InclusiveOrExpression	( ch32 << 6 ) | ( next & 0x3f )		10509215	1		|			
ANR	10509519	ShiftExpression	ch32 << 6		10509215	0		<<			
ANR	10509520	Identifier	ch32		10509215	0					
ANR	10509521	PrimaryExpression	6		10509215	1					
ANR	10509522	BitAndExpression	next & 0x3f		10509215	1		&			
ANR	10509523	Identifier	next		10509215	0					
ANR	10509524	PrimaryExpression	0x3f		10509215	1					
ANR	10509525	IfStatement	if ( ch32 < 0x800 )		10509215	6					
ANR	10509526	Condition	ch32 < 0x800	455:10:9964:9975	10509215	0	True				
ANR	10509527	RelationalExpression	ch32 < 0x800		10509215	0		<			
ANR	10509528	Identifier	ch32		10509215	0					
ANR	10509529	PrimaryExpression	0x800		10509215	1					
ANR	10509530	CompoundStatement		111:6:2216:2216	10509215	1					
ANR	10509531	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	457:8:9994:10059	10509215	0	True				
ANR	10509532	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509533	Callee	DEBUG_puts		10509215	0					
ANR	10509534	Identifier	DEBUG_puts		10509215	0					
ANR	10509535	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509536	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509537	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509538	ReturnStatement	return ( - 1 ) ;	459:1:10063:10074	10509215	1	True				
ANR	10509539	UnaryOperationExpression	- 1		10509215	0					
ANR	10509540	UnaryOperator	-		10509215	0					
ANR	10509541	PrimaryExpression	1		10509215	1					
ANR	10509542	ExpressionStatement	* dest ++ = ch32	462:6:10091:10105	10509215	7	True				
ANR	10509543	AssignmentExpression	* dest ++ = ch32		10509215	0		=			
ANR	10509544	UnaryOperationExpression	* dest ++		10509215	0					
ANR	10509545	UnaryOperator	*		10509215	0					
ANR	10509546	PostIncDecOperationExpression	dest ++		10509215	1					
ANR	10509547	Identifier	dest		10509215	0					
ANR	10509548	IncDec	++		10509215	1					
ANR	10509549	Identifier	ch32		10509215	1					
ANR	10509550	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x %02x %02x => %08X"" , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32 ) )"	464:6:10114:10235	10509215	8	True				
ANR	10509551	CallExpression	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x %02x %02x => %08X"" , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32 ) )"		10509215	0					
ANR	10509552	Callee	DEBUG_printf		10509215	0					
ANR	10509553	Identifier	DEBUG_printf		10509215	0					
ANR	10509554	ArgumentList	"""4cupsUTF8ToUTF32: %02x %02x %02x => %08X"" , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509555	Argument	"""4cupsUTF8ToUTF32: %02x %02x %02x => %08X"" , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	0					
ANR	10509556	Expression	"""4cupsUTF8ToUTF32: %02x %02x %02x => %08X"" , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	0					
ANR	10509557	PrimaryExpression	"""4cupsUTF8ToUTF32: %02x %02x %02x => %08X"""		10509215	0					
ANR	10509558	Expression	"src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509559	ArrayIndexing	src [ - 3 ]		10509215	0					
ANR	10509560	Identifier	src		10509215	0					
ANR	10509561	UnaryOperationExpression	- 3		10509215	1					
ANR	10509562	UnaryOperator	-		10509215	0					
ANR	10509563	PrimaryExpression	3		10509215	1					
ANR	10509564	Expression	"src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509565	ArrayIndexing	src [ - 2 ]		10509215	0					
ANR	10509566	Identifier	src		10509215	0					
ANR	10509567	UnaryOperationExpression	- 2		10509215	1					
ANR	10509568	UnaryOperator	-		10509215	0					
ANR	10509569	PrimaryExpression	2		10509215	1					
ANR	10509570	Expression	"src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509571	ArrayIndexing	src [ - 1 ]		10509215	0					
ANR	10509572	Identifier	src		10509215	0					
ANR	10509573	UnaryOperationExpression	- 1		10509215	1					
ANR	10509574	UnaryOperator	-		10509215	0					
ANR	10509575	PrimaryExpression	1		10509215	1					
ANR	10509576	CastExpression	( unsigned ) ch32		10509215	1					
ANR	10509577	CastTarget	unsigned		10509215	0					
ANR	10509578	Identifier	ch32		10509215	1					
ANR	10509579	ElseStatement	else		10509215	0					
ANR	10509580	IfStatement	if ( ( ch & 0xf8 ) == 0xf0 )		10509215	0					
ANR	10509581	Condition	( ch & 0xf8 ) == 0xf0	467:13:10256:10274	10509215	0	True				
ANR	10509582	EqualityExpression	( ch & 0xf8 ) == 0xf0		10509215	0		==			
ANR	10509583	BitAndExpression	ch & 0xf8		10509215	0		&			
ANR	10509584	Identifier	ch		10509215	0					
ANR	10509585	PrimaryExpression	0xf8		10509215	1					
ANR	10509586	PrimaryExpression	0xf0		10509215	1					
ANR	10509587	CompoundStatement		123:4:2513:2513	10509215	1					
ANR	10509588	ExpressionStatement	next = * src ++	473:6:10335:10348	10509215	0	True				
ANR	10509589	AssignmentExpression	next = * src ++		10509215	0		=			
ANR	10509590	Identifier	next		10509215	0					
ANR	10509591	UnaryOperationExpression	* src ++		10509215	1					
ANR	10509592	UnaryOperator	*		10509215	0					
ANR	10509593	PostIncDecOperationExpression	src ++		10509215	1					
ANR	10509594	Identifier	src		10509215	0					
ANR	10509595	IncDec	++		10509215	1					
ANR	10509596	IfStatement	if ( ( next & 0xc0 ) != 0x80 )		10509215	1					
ANR	10509597	Condition	( next & 0xc0 ) != 0x80	474:10:10360:10380	10509215	0	True				
ANR	10509598	EqualityExpression	( next & 0xc0 ) != 0x80		10509215	0		!=			
ANR	10509599	BitAndExpression	next & 0xc0		10509215	0		&			
ANR	10509600	Identifier	next		10509215	0					
ANR	10509601	PrimaryExpression	0xc0		10509215	1					
ANR	10509602	PrimaryExpression	0x80		10509215	1					
ANR	10509603	CompoundStatement		130:6:2621:2621	10509215	1					
ANR	10509604	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	476:8:10399:10464	10509215	0	True				
ANR	10509605	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509606	Callee	DEBUG_puts		10509215	0					
ANR	10509607	Identifier	DEBUG_puts		10509215	0					
ANR	10509608	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509609	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509610	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509611	ReturnStatement	return ( - 1 ) ;	478:1:10468:10479	10509215	1	True				
ANR	10509612	UnaryOperationExpression	- 1		10509215	0					
ANR	10509613	UnaryOperator	-		10509215	0					
ANR	10509614	PrimaryExpression	1		10509215	1					
ANR	10509615	ExpressionStatement	ch32 = ( ( ch & 0x07 ) << 6 ) | ( next & 0x3f )	481:6:10496:10537	10509215	2	True				
ANR	10509616	AssignmentExpression	ch32 = ( ( ch & 0x07 ) << 6 ) | ( next & 0x3f )		10509215	0		=			
ANR	10509617	Identifier	ch32		10509215	0					
ANR	10509618	InclusiveOrExpression	( ( ch & 0x07 ) << 6 ) | ( next & 0x3f )		10509215	1		|			
ANR	10509619	ShiftExpression	( ch & 0x07 ) << 6		10509215	0		<<			
ANR	10509620	BitAndExpression	ch & 0x07		10509215	0		&			
ANR	10509621	Identifier	ch		10509215	0					
ANR	10509622	PrimaryExpression	0x07		10509215	1					
ANR	10509623	PrimaryExpression	6		10509215	1					
ANR	10509624	BitAndExpression	next & 0x3f		10509215	1		&			
ANR	10509625	Identifier	next		10509215	0					
ANR	10509626	PrimaryExpression	0x3f		10509215	1					
ANR	10509627	ExpressionStatement	next = * src ++	483:6:10546:10559	10509215	3	True				
ANR	10509628	AssignmentExpression	next = * src ++		10509215	0		=			
ANR	10509629	Identifier	next		10509215	0					
ANR	10509630	UnaryOperationExpression	* src ++		10509215	1					
ANR	10509631	UnaryOperator	*		10509215	0					
ANR	10509632	PostIncDecOperationExpression	src ++		10509215	1					
ANR	10509633	Identifier	src		10509215	0					
ANR	10509634	IncDec	++		10509215	1					
ANR	10509635	IfStatement	if ( ( next & 0xc0 ) != 0x80 )		10509215	4					
ANR	10509636	Condition	( next & 0xc0 ) != 0x80	484:10:10571:10591	10509215	0	True				
ANR	10509637	EqualityExpression	( next & 0xc0 ) != 0x80		10509215	0		!=			
ANR	10509638	BitAndExpression	next & 0xc0		10509215	0		&			
ANR	10509639	Identifier	next		10509215	0					
ANR	10509640	PrimaryExpression	0xc0		10509215	1					
ANR	10509641	PrimaryExpression	0x80		10509215	1					
ANR	10509642	CompoundStatement		140:6:2832:2832	10509215	1					
ANR	10509643	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	486:8:10610:10675	10509215	0	True				
ANR	10509644	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509645	Callee	DEBUG_puts		10509215	0					
ANR	10509646	Identifier	DEBUG_puts		10509215	0					
ANR	10509647	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509648	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509649	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509650	ReturnStatement	return ( - 1 ) ;	488:1:10679:10690	10509215	1	True				
ANR	10509651	UnaryOperationExpression	- 1		10509215	0					
ANR	10509652	UnaryOperator	-		10509215	0					
ANR	10509653	PrimaryExpression	1		10509215	1					
ANR	10509654	ExpressionStatement	ch32 = ( ch32 << 6 ) | ( next & 0x3f )	491:6:10707:10741	10509215	5	True				
ANR	10509655	AssignmentExpression	ch32 = ( ch32 << 6 ) | ( next & 0x3f )		10509215	0		=			
ANR	10509656	Identifier	ch32		10509215	0					
ANR	10509657	InclusiveOrExpression	( ch32 << 6 ) | ( next & 0x3f )		10509215	1		|			
ANR	10509658	ShiftExpression	ch32 << 6		10509215	0		<<			
ANR	10509659	Identifier	ch32		10509215	0					
ANR	10509660	PrimaryExpression	6		10509215	1					
ANR	10509661	BitAndExpression	next & 0x3f		10509215	1		&			
ANR	10509662	Identifier	next		10509215	0					
ANR	10509663	PrimaryExpression	0x3f		10509215	1					
ANR	10509664	ExpressionStatement	next = * src ++	493:6:10750:10763	10509215	6	True				
ANR	10509665	AssignmentExpression	next = * src ++		10509215	0		=			
ANR	10509666	Identifier	next		10509215	0					
ANR	10509667	UnaryOperationExpression	* src ++		10509215	1					
ANR	10509668	UnaryOperator	*		10509215	0					
ANR	10509669	PostIncDecOperationExpression	src ++		10509215	1					
ANR	10509670	Identifier	src		10509215	0					
ANR	10509671	IncDec	++		10509215	1					
ANR	10509672	IfStatement	if ( ( next & 0xc0 ) != 0x80 )		10509215	7					
ANR	10509673	Condition	( next & 0xc0 ) != 0x80	494:10:10775:10795	10509215	0	True				
ANR	10509674	EqualityExpression	( next & 0xc0 ) != 0x80		10509215	0		!=			
ANR	10509675	BitAndExpression	next & 0xc0		10509215	0		&			
ANR	10509676	Identifier	next		10509215	0					
ANR	10509677	PrimaryExpression	0xc0		10509215	1					
ANR	10509678	PrimaryExpression	0x80		10509215	1					
ANR	10509679	CompoundStatement		150:6:3036:3036	10509215	1					
ANR	10509680	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	496:8:10814:10879	10509215	0	True				
ANR	10509681	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509682	Callee	DEBUG_puts		10509215	0					
ANR	10509683	Identifier	DEBUG_puts		10509215	0					
ANR	10509684	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509685	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509686	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509687	ReturnStatement	return ( - 1 ) ;	498:1:10883:10894	10509215	1	True				
ANR	10509688	UnaryOperationExpression	- 1		10509215	0					
ANR	10509689	UnaryOperator	-		10509215	0					
ANR	10509690	PrimaryExpression	1		10509215	1					
ANR	10509691	ExpressionStatement	ch32 = ( ch32 << 6 ) | ( next & 0x3f )	501:6:10911:10945	10509215	8	True				
ANR	10509692	AssignmentExpression	ch32 = ( ch32 << 6 ) | ( next & 0x3f )		10509215	0		=			
ANR	10509693	Identifier	ch32		10509215	0					
ANR	10509694	InclusiveOrExpression	( ch32 << 6 ) | ( next & 0x3f )		10509215	1		|			
ANR	10509695	ShiftExpression	ch32 << 6		10509215	0		<<			
ANR	10509696	Identifier	ch32		10509215	0					
ANR	10509697	PrimaryExpression	6		10509215	1					
ANR	10509698	BitAndExpression	next & 0x3f		10509215	1		&			
ANR	10509699	Identifier	next		10509215	0					
ANR	10509700	PrimaryExpression	0x3f		10509215	1					
ANR	10509701	IfStatement	if ( ch32 < 0x10000 )		10509215	9					
ANR	10509702	Condition	ch32 < 0x10000	507:10:11031:11044	10509215	0	True				
ANR	10509703	RelationalExpression	ch32 < 0x10000		10509215	0		<			
ANR	10509704	Identifier	ch32		10509215	0					
ANR	10509705	PrimaryExpression	0x10000		10509215	1					
ANR	10509706	CompoundStatement		163:6:3285:3285	10509215	1					
ANR	10509707	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	509:8:11063:11128	10509215	0	True				
ANR	10509708	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509709	Callee	DEBUG_puts		10509215	0					
ANR	10509710	Identifier	DEBUG_puts		10509215	0					
ANR	10509711	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509712	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509713	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509714	ReturnStatement	return ( - 1 ) ;	511:1:11132:11143	10509215	1	True				
ANR	10509715	UnaryOperationExpression	- 1		10509215	0					
ANR	10509716	UnaryOperator	-		10509215	0					
ANR	10509717	PrimaryExpression	1		10509215	1					
ANR	10509718	ExpressionStatement	* dest ++ = ch32	514:6:11160:11174	10509215	10	True				
ANR	10509719	AssignmentExpression	* dest ++ = ch32		10509215	0		=			
ANR	10509720	UnaryOperationExpression	* dest ++		10509215	0					
ANR	10509721	UnaryOperator	*		10509215	0					
ANR	10509722	PostIncDecOperationExpression	dest ++		10509215	1					
ANR	10509723	Identifier	dest		10509215	0					
ANR	10509724	IncDec	++		10509215	1					
ANR	10509725	Identifier	ch32		10509215	1					
ANR	10509726	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x %02x %02x %02x => %08X"" , src [ - 4 ] , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32 ) )"	516:6:11183:11318	10509215	11	True				
ANR	10509727	CallExpression	"DEBUG_printf ( ( ""4cupsUTF8ToUTF32: %02x %02x %02x %02x => %08X"" , src [ - 4 ] , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32 ) )"		10509215	0					
ANR	10509728	Callee	DEBUG_printf		10509215	0					
ANR	10509729	Identifier	DEBUG_printf		10509215	0					
ANR	10509730	ArgumentList	"""4cupsUTF8ToUTF32: %02x %02x %02x %02x => %08X"" , src [ - 4 ] , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509731	Argument	"""4cupsUTF8ToUTF32: %02x %02x %02x %02x => %08X"" , src [ - 4 ] , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	0					
ANR	10509732	Expression	"""4cupsUTF8ToUTF32: %02x %02x %02x %02x => %08X"" , src [ - 4 ] , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	0					
ANR	10509733	PrimaryExpression	"""4cupsUTF8ToUTF32: %02x %02x %02x %02x => %08X"""		10509215	0					
ANR	10509734	Expression	"src [ - 4 ] , src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509735	ArrayIndexing	src [ - 4 ]		10509215	0					
ANR	10509736	Identifier	src		10509215	0					
ANR	10509737	UnaryOperationExpression	- 4		10509215	1					
ANR	10509738	UnaryOperator	-		10509215	0					
ANR	10509739	PrimaryExpression	4		10509215	1					
ANR	10509740	Expression	"src [ - 3 ] , src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509741	ArrayIndexing	src [ - 3 ]		10509215	0					
ANR	10509742	Identifier	src		10509215	0					
ANR	10509743	UnaryOperationExpression	- 3		10509215	1					
ANR	10509744	UnaryOperator	-		10509215	0					
ANR	10509745	PrimaryExpression	3		10509215	1					
ANR	10509746	Expression	"src [ - 2 ] , src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509747	ArrayIndexing	src [ - 2 ]		10509215	0					
ANR	10509748	Identifier	src		10509215	0					
ANR	10509749	UnaryOperationExpression	- 2		10509215	1					
ANR	10509750	UnaryOperator	-		10509215	0					
ANR	10509751	PrimaryExpression	2		10509215	1					
ANR	10509752	Expression	"src [ - 1 ] , ( unsigned ) ch32"		10509215	1					
ANR	10509753	ArrayIndexing	src [ - 1 ]		10509215	0					
ANR	10509754	Identifier	src		10509215	0					
ANR	10509755	UnaryOperationExpression	- 1		10509215	1					
ANR	10509756	UnaryOperator	-		10509215	0					
ANR	10509757	PrimaryExpression	1		10509215	1					
ANR	10509758	CastExpression	( unsigned ) ch32		10509215	1					
ANR	10509759	CastTarget	unsigned		10509215	0					
ANR	10509760	Identifier	ch32		10509215	1					
ANR	10509761	ElseStatement	else		10509215	0					
ANR	10509762	CompoundStatement		175:4:3571:3571	10509215	0					
ANR	10509763	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"	525:6:11419:11484	10509215	0	True				
ANR	10509764	CallExpression	"DEBUG_puts ( ""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"" )"		10509215	0					
ANR	10509765	Callee	DEBUG_puts		10509215	0					
ANR	10509766	Identifier	DEBUG_puts		10509215	0					
ANR	10509767	ArgumentList	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	1					
ANR	10509768	Argument	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509769	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning -1 (bad UTF-8 sequence)"""		10509215	0					
ANR	10509770	ReturnStatement	return ( - 1 ) ;	527:6:11493:11504	10509215	1	True				
ANR	10509771	UnaryOperationExpression	- 1		10509215	0					
ANR	10509772	UnaryOperator	-		10509215	0					
ANR	10509773	PrimaryExpression	1		10509215	1					
ANR	10509774	IfStatement	if ( ch32 >= 0xd800 && ch32 <= 0xdfff )		10509215	2					
ANR	10509775	Condition	ch32 >= 0xd800 && ch32 <= 0xdfff	534:8:11587:11618	10509215	0	True				
ANR	10509776	AndExpression	ch32 >= 0xd800 && ch32 <= 0xdfff		10509215	0		&&			
ANR	10509777	RelationalExpression	ch32 >= 0xd800		10509215	0		>=			
ANR	10509778	Identifier	ch32		10509215	0					
ANR	10509779	PrimaryExpression	0xd800		10509215	1					
ANR	10509780	RelationalExpression	ch32 <= 0xdfff		10509215	1		<=			
ANR	10509781	Identifier	ch32		10509215	0					
ANR	10509782	PrimaryExpression	0xdfff		10509215	1					
ANR	10509783	ReturnStatement	return ( - 1 ) ;	535:6:11627:11638	10509215	1	True				
ANR	10509784	UnaryOperationExpression	- 1		10509215	0					
ANR	10509785	UnaryOperator	-		10509215	0					
ANR	10509786	PrimaryExpression	1		10509215	1					
ANR	10509787	ExpressionStatement	* dest = 0	538:2:11647:11656	10509215	8	True				
ANR	10509788	AssignmentExpression	* dest = 0		10509215	0		=			
ANR	10509789	UnaryOperationExpression	* dest		10509215	0					
ANR	10509790	UnaryOperator	*		10509215	0					
ANR	10509791	Identifier	dest		10509215	1					
ANR	10509792	PrimaryExpression	0		10509215	1					
ANR	10509793	ExpressionStatement	"DEBUG_printf ( ( ""3cupsUTF8ToUTF32: Returning %d characters"" , maxout - 1 - i ) )"	540:2:11661:11736	10509215	9	True				
ANR	10509794	CallExpression	"DEBUG_printf ( ( ""3cupsUTF8ToUTF32: Returning %d characters"" , maxout - 1 - i ) )"		10509215	0					
ANR	10509795	Callee	DEBUG_printf		10509215	0					
ANR	10509796	Identifier	DEBUG_printf		10509215	0					
ANR	10509797	ArgumentList	"""3cupsUTF8ToUTF32: Returning %d characters"" , maxout - 1 - i"		10509215	1					
ANR	10509798	Argument	"""3cupsUTF8ToUTF32: Returning %d characters"" , maxout - 1 - i"		10509215	0					
ANR	10509799	Expression	"""3cupsUTF8ToUTF32: Returning %d characters"" , maxout - 1 - i"		10509215	0					
ANR	10509800	PrimaryExpression	"""3cupsUTF8ToUTF32: Returning %d characters"""		10509215	0					
ANR	10509801	AdditiveExpression	maxout - 1 - i		10509215	1		-			
ANR	10509802	Identifier	maxout		10509215	0					
ANR	10509803	AdditiveExpression	1 - i		10509215	1		-			
ANR	10509804	PrimaryExpression	1		10509215	0					
ANR	10509805	Identifier	i		10509215	1					
ANR	10509806	ReturnStatement	return ( maxout - 1 - i ) ;	542:2:11741:11764	10509215	10	True				
ANR	10509807	AdditiveExpression	maxout - 1 - i		10509215	0		-			
ANR	10509808	Identifier	maxout		10509215	0					
ANR	10509809	AdditiveExpression	1 - i		10509215	1		-			
ANR	10509810	PrimaryExpression	1		10509215	0					
ANR	10509811	Identifier	i		10509215	1					
ANR	10509812	ReturnType	int		10509215	1					
ANR	10509813	Identifier	cupsUTF8ToUTF32		10509215	2					
ANR	10509814	ParameterList	"cups_utf32_t * dest , const cups_utf8_t * src , const int maxout"		10509215	3					
ANR	10509815	Parameter	cups_utf32_t * dest	343:4:7612:7634	10509215	0	True				
ANR	10509816	ParameterType	cups_utf32_t *		10509215	0					
ANR	10509817	Identifier	dest		10509215	1					
ANR	10509818	Parameter	const cups_utf8_t * src	344:4:7666:7687	10509215	1	True				
ANR	10509819	ParameterType	const cups_utf8_t *		10509215	0					
ANR	10509820	Identifier	src		10509215	1					
ANR	10509821	Parameter	const int maxout	345:4:7719:7742	10509215	2	True				
ANR	10509822	ParameterType	const int		10509215	0					
ANR	10509823	Identifier	maxout		10509215	1					
ANR	10509824	CFGEntryNode	ENTRY		10509215		True				
ANR	10509825	CFGExitNode	EXIT		10509215		True				
ANR	10509826	Symbol	next		10509215						
ANR	10509827	Symbol	src		10509215						
ANR	10509828	Symbol	maxout		10509215						
ANR	10509829	Symbol	ch		10509215						
ANR	10509830	Symbol	* dest		10509215						
ANR	10509831	Symbol	* src ++		10509215						
ANR	10509832	Symbol	i		10509215						
ANR	10509833	Symbol	ch32		10509215						
ANR	10509834	Symbol	* dest ++		10509215						
ANR	10509835	Symbol	dest		10509215						
ANR	10509836	Symbol	CUPS_MAX_USTRING		10509215						
ANR	10509837	Symbol	* src		10509215						
ANR	10509838	Function	cupsUTF32ToUTF8	562:0:12295:15747							
ANR	10509839	FunctionDef	"cupsUTF32ToUTF8 (cups_utf8_t * dest , const cups_utf32_t * src , const int maxout)"		10509838	0					
ANR	10509840	CompoundStatement		567:0:12513:15747	10509838	0					
ANR	10509841	IdentifierDeclStatement	cups_utf8_t * start ;	568:2:12517:12535	10509838	0	True				
ANR	10509842	IdentifierDecl	* start		10509838	0					
ANR	10509843	IdentifierDeclType	cups_utf8_t *		10509838	0					
ANR	10509844	Identifier	start		10509838	1					
ANR	10509845	IdentifierDeclStatement	int i ;	569:2:12575:12581	10509838	1	True				
ANR	10509846	IdentifierDecl	i		10509838	0					
ANR	10509847	IdentifierDeclType	int		10509838	0					
ANR	10509848	Identifier	i		10509838	1					
ANR	10509849	IdentifierDeclStatement	int swap ;	570:2:12610:12619	10509838	2	True				
ANR	10509850	IdentifierDecl	swap		10509838	0					
ANR	10509851	IdentifierDeclType	int		10509838	0					
ANR	10509852	Identifier	swap		10509838	1					
ANR	10509853	IdentifierDeclStatement	cups_utf32_t ch ;	571:2:12657:12672	10509838	3	True				
ANR	10509854	IdentifierDecl	ch		10509838	0					
ANR	10509855	IdentifierDeclType	cups_utf32_t		10509838	0					
ANR	10509856	Identifier	ch		10509838	1					
ANR	10509857	ExpressionStatement	"DEBUG_printf ( ( ""2cupsUTF32ToUTF8(dest=%p, src=%p, maxout=%d)"" , dest , src , maxout ) )"	578:2:12762:12859	10509838	4	True				
ANR	10509858	CallExpression	"DEBUG_printf ( ( ""2cupsUTF32ToUTF8(dest=%p, src=%p, maxout=%d)"" , dest , src , maxout ) )"		10509838	0					
ANR	10509859	Callee	DEBUG_printf		10509838	0					
ANR	10509860	Identifier	DEBUG_printf		10509838	0					
ANR	10509861	ArgumentList	"""2cupsUTF32ToUTF8(dest=%p, src=%p, maxout=%d)"" , dest , src , maxout"		10509838	1					
ANR	10509862	Argument	"""2cupsUTF32ToUTF8(dest=%p, src=%p, maxout=%d)"" , dest , src , maxout"		10509838	0					
ANR	10509863	Expression	"""2cupsUTF32ToUTF8(dest=%p, src=%p, maxout=%d)"" , dest , src , maxout"		10509838	0					
ANR	10509864	PrimaryExpression	"""2cupsUTF32ToUTF8(dest=%p, src=%p, maxout=%d)"""		10509838	0					
ANR	10509865	Expression	"dest , src , maxout"		10509838	1					
ANR	10509866	Identifier	dest		10509838	0					
ANR	10509867	Expression	"src , maxout"		10509838	1					
ANR	10509868	Identifier	src		10509838	0					
ANR	10509869	Identifier	maxout		10509838	1					
ANR	10509870	IfStatement	if ( dest )		10509838	5					
ANR	10509871	Condition	dest	581:6:12868:12871	10509838	0	True				
ANR	10509872	Identifier	dest		10509838	0					
ANR	10509873	ExpressionStatement	* dest = '\\0'	582:4:12878:12890	10509838	1	True				
ANR	10509874	AssignmentExpression	* dest = '\\0'		10509838	0		=			
ANR	10509875	UnaryOperationExpression	* dest		10509838	0					
ANR	10509876	UnaryOperator	*		10509838	0					
ANR	10509877	Identifier	dest		10509838	1					
ANR	10509878	PrimaryExpression	'\\0'		10509838	1					
ANR	10509879	IfStatement	if ( ! dest || ! src || maxout < 1 )		10509838	6					
ANR	10509880	Condition	! dest || ! src || maxout < 1	584:6:12899:12925	10509838	0	True				
ANR	10509881	OrExpression	! dest || ! src || maxout < 1		10509838	0		||			
ANR	10509882	UnaryOperationExpression	! dest		10509838	0					
ANR	10509883	UnaryOperator	!		10509838	0					
ANR	10509884	Identifier	dest		10509838	1					
ANR	10509885	OrExpression	! src || maxout < 1		10509838	1		||			
ANR	10509886	UnaryOperationExpression	! src		10509838	0					
ANR	10509887	UnaryOperator	!		10509838	0					
ANR	10509888	Identifier	src		10509838	1					
ANR	10509889	RelationalExpression	maxout < 1		10509838	1		<			
ANR	10509890	Identifier	maxout		10509838	0					
ANR	10509891	PrimaryExpression	1		10509838	1					
ANR	10509892	CompoundStatement		19:2:416:416	10509838	1					
ANR	10509893	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (bad args)"" )"	586:4:12936:12991	10509838	0	True				
ANR	10509894	CallExpression	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (bad args)"" )"		10509838	0					
ANR	10509895	Callee	DEBUG_puts		10509838	0					
ANR	10509896	Identifier	DEBUG_puts		10509838	0					
ANR	10509897	ArgumentList	"""3cupsUTF32ToUTF8: Returning -1 (bad args)"""		10509838	1					
ANR	10509898	Argument	"""3cupsUTF32ToUTF8: Returning -1 (bad args)"""		10509838	0					
ANR	10509899	PrimaryExpression	"""3cupsUTF32ToUTF8: Returning -1 (bad args)"""		10509838	0					
ANR	10509900	ReturnStatement	return ( - 1 ) ;	588:4:12998:13009	10509838	1	True				
ANR	10509901	UnaryOperationExpression	- 1		10509838	0					
ANR	10509902	UnaryOperator	-		10509838	0					
ANR	10509903	PrimaryExpression	1		10509838	1					
ANR	10509904	ExpressionStatement	start = dest	595:2:13084:13096	10509838	7	True				
ANR	10509905	AssignmentExpression	start = dest		10509838	0		=			
ANR	10509906	Identifier	start		10509838	0					
ANR	10509907	Identifier	dest		10509838	1					
ANR	10509908	ExpressionStatement	swap = * src == 0xfffe0000	596:2:13100:13126	10509838	8	True				
ANR	10509909	AssignmentExpression	swap = * src == 0xfffe0000		10509838	0		=			
ANR	10509910	Identifier	swap		10509838	0					
ANR	10509911	EqualityExpression	* src == 0xfffe0000		10509838	1		==			
ANR	10509912	UnaryOperationExpression	* src		10509838	0					
ANR	10509913	UnaryOperator	*		10509838	0					
ANR	10509914	Identifier	src		10509838	1					
ANR	10509915	PrimaryExpression	0xfffe0000		10509838	1					
ANR	10509916	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: swap=%d"" , swap ) )"	598:2:13131:13180	10509838	9	True				
ANR	10509917	CallExpression	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: swap=%d"" , swap ) )"		10509838	0					
ANR	10509918	Callee	DEBUG_printf		10509838	0					
ANR	10509919	Identifier	DEBUG_printf		10509838	0					
ANR	10509920	ArgumentList	"""4cupsUTF32ToUTF8: swap=%d"" , swap"		10509838	1					
ANR	10509921	Argument	"""4cupsUTF32ToUTF8: swap=%d"" , swap"		10509838	0					
ANR	10509922	Expression	"""4cupsUTF32ToUTF8: swap=%d"" , swap"		10509838	0					
ANR	10509923	PrimaryExpression	"""4cupsUTF32ToUTF8: swap=%d"""		10509838	0					
ANR	10509924	Identifier	swap		10509838	1					
ANR	10509925	IfStatement	if ( * src == 0xfffe0000 || * src == 0xfeff )		10509838	10					
ANR	10509926	Condition	* src == 0xfffe0000 || * src == 0xfeff	600:6:13189:13224	10509838	0	True				
ANR	10509927	OrExpression	* src == 0xfffe0000 || * src == 0xfeff		10509838	0		||			
ANR	10509928	EqualityExpression	* src == 0xfffe0000		10509838	0		==			
ANR	10509929	UnaryOperationExpression	* src		10509838	0					
ANR	10509930	UnaryOperator	*		10509838	0					
ANR	10509931	Identifier	src		10509838	1					
ANR	10509932	PrimaryExpression	0xfffe0000		10509838	1					
ANR	10509933	EqualityExpression	* src == 0xfeff		10509838	1		==			
ANR	10509934	UnaryOperationExpression	* src		10509838	0					
ANR	10509935	UnaryOperator	*		10509838	0					
ANR	10509936	Identifier	src		10509838	1					
ANR	10509937	PrimaryExpression	0xfeff		10509838	1					
ANR	10509938	ExpressionStatement	src ++	601:4:13231:13237	10509838	1	True				
ANR	10509939	PostIncDecOperationExpression	src ++		10509838	0					
ANR	10509940	Identifier	src		10509838	0					
ANR	10509941	IncDec	++		10509838	1					
ANR	10509942	ForStatement	for ( i = maxout - 1 ; * src && i > 0 ; )		10509838	11					
ANR	10509943	ForInit	i = maxout - 1 ;	607:7:13301:13315	10509838	0	True				
ANR	10509944	AssignmentExpression	i = maxout - 1		10509838	0		=			
ANR	10509945	Identifier	i		10509838	0					
ANR	10509946	AdditiveExpression	maxout - 1		10509838	1		-			
ANR	10509947	Identifier	maxout		10509838	0					
ANR	10509948	PrimaryExpression	1		10509838	1					
ANR	10509949	Condition	* src && i > 0	607:23:13317:13329	10509838	1	True				
ANR	10509950	AndExpression	* src && i > 0		10509838	0		&&			
ANR	10509951	UnaryOperationExpression	* src		10509838	0					
ANR	10509952	UnaryOperator	*		10509838	0					
ANR	10509953	Identifier	src		10509838	1					
ANR	10509954	RelationalExpression	i > 0		10509838	1		>			
ANR	10509955	Identifier	i		10509838	0					
ANR	10509956	PrimaryExpression	0		10509838	1					
ANR	10509957	CompoundStatement		42:2:821:821	10509838	2					
ANR	10509958	ExpressionStatement	ch = * src ++	609:4:13341:13352	10509838	0	True				
ANR	10509959	AssignmentExpression	ch = * src ++		10509838	0		=			
ANR	10509960	Identifier	ch		10509838	0					
ANR	10509961	UnaryOperationExpression	* src ++		10509838	1					
ANR	10509962	UnaryOperator	*		10509838	0					
ANR	10509963	PostIncDecOperationExpression	src ++		10509838	1					
ANR	10509964	Identifier	src		10509838	0					
ANR	10509965	IncDec	++		10509838	1					
ANR	10509966	IfStatement	if ( swap )		10509838	1					
ANR	10509967	Condition	swap	616:8:13464:13467	10509838	0	True				
ANR	10509968	Identifier	swap		10509838	0					
ANR	10509969	ExpressionStatement	ch = ( ( ch >> 24 ) | ( ( ch >> 8 ) & 0xff00 ) | ( ( ch << 8 ) & 0xff0000 ) )	617:6:13476:13541	10509838	1	True				
ANR	10509970	AssignmentExpression	ch = ( ( ch >> 24 ) | ( ( ch >> 8 ) & 0xff00 ) | ( ( ch << 8 ) & 0xff0000 ) )		10509838	0		=			
ANR	10509971	Identifier	ch		10509838	0					
ANR	10509972	InclusiveOrExpression	( ch >> 24 ) | ( ( ch >> 8 ) & 0xff00 ) | ( ( ch << 8 ) & 0xff0000 )		10509838	1		|			
ANR	10509973	ShiftExpression	ch >> 24		10509838	0		>>			
ANR	10509974	Identifier	ch		10509838	0					
ANR	10509975	PrimaryExpression	24		10509838	1					
ANR	10509976	InclusiveOrExpression	( ( ch >> 8 ) & 0xff00 ) | ( ( ch << 8 ) & 0xff0000 )		10509838	1		|			
ANR	10509977	BitAndExpression	( ch >> 8 ) & 0xff00		10509838	0		&			
ANR	10509978	ShiftExpression	ch >> 8		10509838	0		>>			
ANR	10509979	Identifier	ch		10509838	0					
ANR	10509980	PrimaryExpression	8		10509838	1					
ANR	10509981	PrimaryExpression	0xff00		10509838	1					
ANR	10509982	BitAndExpression	( ch << 8 ) & 0xff0000		10509838	1		&			
ANR	10509983	ShiftExpression	ch << 8		10509838	0		<<			
ANR	10509984	Identifier	ch		10509838	0					
ANR	10509985	PrimaryExpression	8		10509838	1					
ANR	10509986	PrimaryExpression	0xff0000		10509838	1					
ANR	10509987	IfStatement	if ( ch > 0x10ffff )		10509838	2					
ANR	10509988	Condition	ch > 0x10ffff	623:8:13618:13630	10509838	0	True				
ANR	10509989	RelationalExpression	ch > 0x10ffff		10509838	0		>			
ANR	10509990	Identifier	ch		10509838	0					
ANR	10509991	PrimaryExpression	0x10ffff		10509838	1					
ANR	10509992	CompoundStatement		58:4:1123:1123	10509838	1					
ANR	10509993	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (character out of range)"" )"	625:6:13645:13714	10509838	0	True				
ANR	10509994	CallExpression	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (character out of range)"" )"		10509838	0					
ANR	10509995	Callee	DEBUG_puts		10509838	0					
ANR	10509996	Identifier	DEBUG_puts		10509838	0					
ANR	10509997	ArgumentList	"""3cupsUTF32ToUTF8: Returning -1 (character out of range)"""		10509838	1					
ANR	10509998	Argument	"""3cupsUTF32ToUTF8: Returning -1 (character out of range)"""		10509838	0					
ANR	10509999	PrimaryExpression	"""3cupsUTF32ToUTF8: Returning -1 (character out of range)"""		10509838	0					
ANR	10510000	ReturnStatement	return ( - 1 ) ;	627:6:13723:13734	10509838	1	True				
ANR	10510001	UnaryOperationExpression	- 1		10509838	0					
ANR	10510002	UnaryOperator	-		10509838	0					
ANR	10510003	PrimaryExpression	1		10509838	1					
ANR	10510004	IfStatement	if ( ch < 0x80 )		10509838	3					
ANR	10510005	Condition	ch < 0x80	634:8:13821:13829	10509838	0	True				
ANR	10510006	RelationalExpression	ch < 0x80		10509838	0		<			
ANR	10510007	Identifier	ch		10509838	0					
ANR	10510008	PrimaryExpression	0x80		10509838	1					
ANR	10510009	CompoundStatement		69:4:1322:1322	10509838	1					
ANR	10510010	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ch	640:6:13907:13932	10509838	0	True				
ANR	10510011	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ch		10509838	0		=			
ANR	10510012	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510013	UnaryOperator	*		10509838	0					
ANR	10510014	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510015	Identifier	dest		10509838	0					
ANR	10510016	IncDec	++		10509838	1					
ANR	10510017	CastExpression	( cups_utf8_t ) ch		10509838	1					
ANR	10510018	CastTarget	cups_utf8_t		10509838	0					
ANR	10510019	Identifier	ch		10509838	1					
ANR	10510020	ExpressionStatement	i --	641:6:13940:13944	10509838	1	True				
ANR	10510021	PostIncDecOperationExpression	i --		10509838	0					
ANR	10510022	Identifier	i		10509838	0					
ANR	10510023	IncDec	--		10509838	1					
ANR	10510024	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x"" , ( unsigned ) ch , dest [ - 1 ] ) )"	643:6:13953:14025	10509838	2	True				
ANR	10510025	CallExpression	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x"" , ( unsigned ) ch , dest [ - 1 ] ) )"		10509838	0					
ANR	10510026	Callee	DEBUG_printf		10509838	0					
ANR	10510027	Identifier	DEBUG_printf		10509838	0					
ANR	10510028	ArgumentList	"""4cupsUTF32ToUTF8: %08x => %02x"" , ( unsigned ) ch , dest [ - 1 ]"		10509838	1					
ANR	10510029	Argument	"""4cupsUTF32ToUTF8: %08x => %02x"" , ( unsigned ) ch , dest [ - 1 ]"		10509838	0					
ANR	10510030	Expression	"""4cupsUTF32ToUTF8: %08x => %02x"" , ( unsigned ) ch , dest [ - 1 ]"		10509838	0					
ANR	10510031	PrimaryExpression	"""4cupsUTF32ToUTF8: %08x => %02x"""		10509838	0					
ANR	10510032	Expression	"( unsigned ) ch , dest [ - 1 ]"		10509838	1					
ANR	10510033	CastExpression	( unsigned ) ch		10509838	0					
ANR	10510034	CastTarget	unsigned		10509838	0					
ANR	10510035	Identifier	ch		10509838	1					
ANR	10510036	ArrayIndexing	dest [ - 1 ]		10509838	1					
ANR	10510037	Identifier	dest		10509838	0					
ANR	10510038	UnaryOperationExpression	- 1		10509838	1					
ANR	10510039	UnaryOperator	-		10509838	0					
ANR	10510040	PrimaryExpression	1		10509838	1					
ANR	10510041	ElseStatement	else		10509838	0					
ANR	10510042	IfStatement	if ( ch < 0x800 )		10509838	0					
ANR	10510043	Condition	ch < 0x800	645:13:14046:14055	10509838	0	True				
ANR	10510044	RelationalExpression	ch < 0x800		10509838	0		<			
ANR	10510045	Identifier	ch		10509838	0					
ANR	10510046	PrimaryExpression	0x800		10509838	1					
ANR	10510047	CompoundStatement		80:4:1548:1548	10509838	1					
ANR	10510048	IfStatement	if ( i < 2 )		10509838	0					
ANR	10510049	Condition	i < 2	651:10:14137:14141	10509838	0	True				
ANR	10510050	RelationalExpression	i < 2		10509838	0		<			
ANR	10510051	Identifier	i		10509838	0					
ANR	10510052	PrimaryExpression	2		10509838	1					
ANR	10510053	CompoundStatement		86:6:1636:1636	10509838	1					
ANR	10510054	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (too long 2)"" )"	653:8:14160:14217	10509838	0	True				
ANR	10510055	CallExpression	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (too long 2)"" )"		10509838	0					
ANR	10510056	Callee	DEBUG_puts		10509838	0					
ANR	10510057	Identifier	DEBUG_puts		10509838	0					
ANR	10510058	ArgumentList	"""3cupsUTF32ToUTF8: Returning -1 (too long 2)"""		10509838	1					
ANR	10510059	Argument	"""3cupsUTF32ToUTF8: Returning -1 (too long 2)"""		10509838	0					
ANR	10510060	PrimaryExpression	"""3cupsUTF32ToUTF8: Returning -1 (too long 2)"""		10509838	0					
ANR	10510061	ReturnStatement	return ( - 1 ) ;	655:8:14228:14239	10509838	1	True				
ANR	10510062	UnaryOperationExpression	- 1		10509838	0					
ANR	10510063	UnaryOperator	-		10509838	0					
ANR	10510064	PrimaryExpression	1		10509838	1					
ANR	10510065	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0xc0 | ( ( ch >> 6 ) & 0x1f ) )	658:6:14256:14306	10509838	1	True				
ANR	10510066	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0xc0 | ( ( ch >> 6 ) & 0x1f ) )		10509838	0		=			
ANR	10510067	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510068	UnaryOperator	*		10509838	0					
ANR	10510069	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510070	Identifier	dest		10509838	0					
ANR	10510071	IncDec	++		10509838	1					
ANR	10510072	CastExpression	( cups_utf8_t ) ( 0xc0 | ( ( ch >> 6 ) & 0x1f ) )		10509838	1					
ANR	10510073	CastTarget	cups_utf8_t		10509838	0					
ANR	10510074	InclusiveOrExpression	0xc0 | ( ( ch >> 6 ) & 0x1f )		10509838	1		|			
ANR	10510075	PrimaryExpression	0xc0		10509838	0					
ANR	10510076	BitAndExpression	( ch >> 6 ) & 0x1f		10509838	1		&			
ANR	10510077	ShiftExpression	ch >> 6		10509838	0		>>			
ANR	10510078	Identifier	ch		10509838	0					
ANR	10510079	PrimaryExpression	6		10509838	1					
ANR	10510080	PrimaryExpression	0x1f		10509838	1					
ANR	10510081	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )	659:6:14314:14357	10509838	2	True				
ANR	10510082	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )		10509838	0		=			
ANR	10510083	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510084	UnaryOperator	*		10509838	0					
ANR	10510085	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510086	Identifier	dest		10509838	0					
ANR	10510087	IncDec	++		10509838	1					
ANR	10510088	CastExpression	( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )		10509838	1					
ANR	10510089	CastTarget	cups_utf8_t		10509838	0					
ANR	10510090	InclusiveOrExpression	0x80 | ( ch & 0x3f )		10509838	1		|			
ANR	10510091	PrimaryExpression	0x80		10509838	0					
ANR	10510092	BitAndExpression	ch & 0x3f		10509838	1		&			
ANR	10510093	Identifier	ch		10509838	0					
ANR	10510094	PrimaryExpression	0x3f		10509838	1					
ANR	10510095	ExpressionStatement	i -= 2	660:6:14365:14371	10509838	3	True				
ANR	10510096	AssignmentExpression	i -= 2		10509838	0		-=			
ANR	10510097	Identifier	i		10509838	0					
ANR	10510098	PrimaryExpression	2		10509838	1					
ANR	10510099	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x %02x"" , ( unsigned ) ch , dest [ - 2 ] , dest [ - 1 ] ) )"	662:6:14380:14487	10509838	4	True				
ANR	10510100	CallExpression	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x %02x"" , ( unsigned ) ch , dest [ - 2 ] , dest [ - 1 ] ) )"		10509838	0					
ANR	10510101	Callee	DEBUG_printf		10509838	0					
ANR	10510102	Identifier	DEBUG_printf		10509838	0					
ANR	10510103	ArgumentList	"""4cupsUTF32ToUTF8: %08x => %02x %02x"" , ( unsigned ) ch , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510104	Argument	"""4cupsUTF32ToUTF8: %08x => %02x %02x"" , ( unsigned ) ch , dest [ - 2 ] , dest [ - 1 ]"		10509838	0					
ANR	10510105	Expression	"""4cupsUTF32ToUTF8: %08x => %02x %02x"" , ( unsigned ) ch , dest [ - 2 ] , dest [ - 1 ]"		10509838	0					
ANR	10510106	PrimaryExpression	"""4cupsUTF32ToUTF8: %08x => %02x %02x"""		10509838	0					
ANR	10510107	Expression	"( unsigned ) ch , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510108	CastExpression	( unsigned ) ch		10509838	0					
ANR	10510109	CastTarget	unsigned		10509838	0					
ANR	10510110	Identifier	ch		10509838	1					
ANR	10510111	Expression	"dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510112	ArrayIndexing	dest [ - 2 ]		10509838	0					
ANR	10510113	Identifier	dest		10509838	0					
ANR	10510114	UnaryOperationExpression	- 2		10509838	1					
ANR	10510115	UnaryOperator	-		10509838	0					
ANR	10510116	PrimaryExpression	2		10509838	1					
ANR	10510117	ArrayIndexing	dest [ - 1 ]		10509838	1					
ANR	10510118	Identifier	dest		10509838	0					
ANR	10510119	UnaryOperationExpression	- 1		10509838	1					
ANR	10510120	UnaryOperator	-		10509838	0					
ANR	10510121	PrimaryExpression	1		10509838	1					
ANR	10510122	ElseStatement	else		10509838	0					
ANR	10510123	IfStatement	if ( ch < 0x10000 )		10509838	0					
ANR	10510124	Condition	ch < 0x10000	665:13:14508:14519	10509838	0	True				
ANR	10510125	RelationalExpression	ch < 0x10000		10509838	0		<			
ANR	10510126	Identifier	ch		10509838	0					
ANR	10510127	PrimaryExpression	0x10000		10509838	1					
ANR	10510128	CompoundStatement		100:4:2012:2012	10509838	1					
ANR	10510129	IfStatement	if ( i < 3 )		10509838	0					
ANR	10510130	Condition	i < 3	671:10:14610:14614	10509838	0	True				
ANR	10510131	RelationalExpression	i < 3		10509838	0		<			
ANR	10510132	Identifier	i		10509838	0					
ANR	10510133	PrimaryExpression	3		10509838	1					
ANR	10510134	CompoundStatement		106:6:2109:2109	10509838	1					
ANR	10510135	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (too long 3)"" )"	673:8:14633:14690	10509838	0	True				
ANR	10510136	CallExpression	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (too long 3)"" )"		10509838	0					
ANR	10510137	Callee	DEBUG_puts		10509838	0					
ANR	10510138	Identifier	DEBUG_puts		10509838	0					
ANR	10510139	ArgumentList	"""3cupsUTF32ToUTF8: Returning -1 (too long 3)"""		10509838	1					
ANR	10510140	Argument	"""3cupsUTF32ToUTF8: Returning -1 (too long 3)"""		10509838	0					
ANR	10510141	PrimaryExpression	"""3cupsUTF32ToUTF8: Returning -1 (too long 3)"""		10509838	0					
ANR	10510142	ReturnStatement	return ( - 1 ) ;	675:8:14701:14712	10509838	1	True				
ANR	10510143	UnaryOperationExpression	- 1		10509838	0					
ANR	10510144	UnaryOperator	-		10509838	0					
ANR	10510145	PrimaryExpression	1		10509838	1					
ANR	10510146	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0xe0 | ( ( ch >> 12 ) & 0x0f ) )	678:6:14729:14780	10509838	1	True				
ANR	10510147	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0xe0 | ( ( ch >> 12 ) & 0x0f ) )		10509838	0		=			
ANR	10510148	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510149	UnaryOperator	*		10509838	0					
ANR	10510150	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510151	Identifier	dest		10509838	0					
ANR	10510152	IncDec	++		10509838	1					
ANR	10510153	CastExpression	( cups_utf8_t ) ( 0xe0 | ( ( ch >> 12 ) & 0x0f ) )		10509838	1					
ANR	10510154	CastTarget	cups_utf8_t		10509838	0					
ANR	10510155	InclusiveOrExpression	0xe0 | ( ( ch >> 12 ) & 0x0f )		10509838	1		|			
ANR	10510156	PrimaryExpression	0xe0		10509838	0					
ANR	10510157	BitAndExpression	( ch >> 12 ) & 0x0f		10509838	1		&			
ANR	10510158	ShiftExpression	ch >> 12		10509838	0		>>			
ANR	10510159	Identifier	ch		10509838	0					
ANR	10510160	PrimaryExpression	12		10509838	1					
ANR	10510161	PrimaryExpression	0x0f		10509838	1					
ANR	10510162	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ( ch >> 6 ) & 0x3f ) )	679:6:14788:14838	10509838	2	True				
ANR	10510163	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ( ch >> 6 ) & 0x3f ) )		10509838	0		=			
ANR	10510164	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510165	UnaryOperator	*		10509838	0					
ANR	10510166	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510167	Identifier	dest		10509838	0					
ANR	10510168	IncDec	++		10509838	1					
ANR	10510169	CastExpression	( cups_utf8_t ) ( 0x80 | ( ( ch >> 6 ) & 0x3f ) )		10509838	1					
ANR	10510170	CastTarget	cups_utf8_t		10509838	0					
ANR	10510171	InclusiveOrExpression	0x80 | ( ( ch >> 6 ) & 0x3f )		10509838	1		|			
ANR	10510172	PrimaryExpression	0x80		10509838	0					
ANR	10510173	BitAndExpression	( ch >> 6 ) & 0x3f		10509838	1		&			
ANR	10510174	ShiftExpression	ch >> 6		10509838	0		>>			
ANR	10510175	Identifier	ch		10509838	0					
ANR	10510176	PrimaryExpression	6		10509838	1					
ANR	10510177	PrimaryExpression	0x3f		10509838	1					
ANR	10510178	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )	680:6:14846:14889	10509838	3	True				
ANR	10510179	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )		10509838	0		=			
ANR	10510180	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510181	UnaryOperator	*		10509838	0					
ANR	10510182	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510183	Identifier	dest		10509838	0					
ANR	10510184	IncDec	++		10509838	1					
ANR	10510185	CastExpression	( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )		10509838	1					
ANR	10510186	CastTarget	cups_utf8_t		10509838	0					
ANR	10510187	InclusiveOrExpression	0x80 | ( ch & 0x3f )		10509838	1		|			
ANR	10510188	PrimaryExpression	0x80		10509838	0					
ANR	10510189	BitAndExpression	ch & 0x3f		10509838	1		&			
ANR	10510190	Identifier	ch		10509838	0					
ANR	10510191	PrimaryExpression	0x3f		10509838	1					
ANR	10510192	ExpressionStatement	i -= 3	681:6:14897:14903	10509838	4	True				
ANR	10510193	AssignmentExpression	i -= 3		10509838	0		-=			
ANR	10510194	Identifier	i		10509838	0					
ANR	10510195	PrimaryExpression	3		10509838	1					
ANR	10510196	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x %02x %02x"" , ( unsigned ) ch , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ] ) )"	683:6:14912:15034	10509838	5	True				
ANR	10510197	CallExpression	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x %02x %02x"" , ( unsigned ) ch , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ] ) )"		10509838	0					
ANR	10510198	Callee	DEBUG_printf		10509838	0					
ANR	10510199	Identifier	DEBUG_printf		10509838	0					
ANR	10510200	ArgumentList	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x"" , ( unsigned ) ch , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510201	Argument	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x"" , ( unsigned ) ch , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	0					
ANR	10510202	Expression	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x"" , ( unsigned ) ch , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	0					
ANR	10510203	PrimaryExpression	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x"""		10509838	0					
ANR	10510204	Expression	"( unsigned ) ch , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510205	CastExpression	( unsigned ) ch		10509838	0					
ANR	10510206	CastTarget	unsigned		10509838	0					
ANR	10510207	Identifier	ch		10509838	1					
ANR	10510208	Expression	"dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510209	ArrayIndexing	dest [ - 3 ]		10509838	0					
ANR	10510210	Identifier	dest		10509838	0					
ANR	10510211	UnaryOperationExpression	- 3		10509838	1					
ANR	10510212	UnaryOperator	-		10509838	0					
ANR	10510213	PrimaryExpression	3		10509838	1					
ANR	10510214	Expression	"dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510215	ArrayIndexing	dest [ - 2 ]		10509838	0					
ANR	10510216	Identifier	dest		10509838	0					
ANR	10510217	UnaryOperationExpression	- 2		10509838	1					
ANR	10510218	UnaryOperator	-		10509838	0					
ANR	10510219	PrimaryExpression	2		10509838	1					
ANR	10510220	ArrayIndexing	dest [ - 1 ]		10509838	1					
ANR	10510221	Identifier	dest		10509838	0					
ANR	10510222	UnaryOperationExpression	- 1		10509838	1					
ANR	10510223	UnaryOperator	-		10509838	0					
ANR	10510224	PrimaryExpression	1		10509838	1					
ANR	10510225	ElseStatement	else		10509838	0					
ANR	10510226	CompoundStatement		121:4:2541:2541	10509838	0					
ANR	10510227	IfStatement	if ( i < 4 )		10509838	0					
ANR	10510228	Condition	i < 4	692:10:15113:15117	10509838	0	True				
ANR	10510229	RelationalExpression	i < 4		10509838	0		<			
ANR	10510230	Identifier	i		10509838	0					
ANR	10510231	PrimaryExpression	4		10509838	1					
ANR	10510232	CompoundStatement		127:6:2612:2612	10509838	1					
ANR	10510233	ExpressionStatement	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (too long 4)"" )"	694:8:15136:15193	10509838	0	True				
ANR	10510234	CallExpression	"DEBUG_puts ( ""3cupsUTF32ToUTF8: Returning -1 (too long 4)"" )"		10509838	0					
ANR	10510235	Callee	DEBUG_puts		10509838	0					
ANR	10510236	Identifier	DEBUG_puts		10509838	0					
ANR	10510237	ArgumentList	"""3cupsUTF32ToUTF8: Returning -1 (too long 4)"""		10509838	1					
ANR	10510238	Argument	"""3cupsUTF32ToUTF8: Returning -1 (too long 4)"""		10509838	0					
ANR	10510239	PrimaryExpression	"""3cupsUTF32ToUTF8: Returning -1 (too long 4)"""		10509838	0					
ANR	10510240	ReturnStatement	return ( - 1 ) ;	696:8:15204:15215	10509838	1	True				
ANR	10510241	UnaryOperationExpression	- 1		10509838	0					
ANR	10510242	UnaryOperator	-		10509838	0					
ANR	10510243	PrimaryExpression	1		10509838	1					
ANR	10510244	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0xf0 | ( ( ch >> 18 ) & 0x07 ) )	699:6:15232:15283	10509838	1	True				
ANR	10510245	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0xf0 | ( ( ch >> 18 ) & 0x07 ) )		10509838	0		=			
ANR	10510246	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510247	UnaryOperator	*		10509838	0					
ANR	10510248	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510249	Identifier	dest		10509838	0					
ANR	10510250	IncDec	++		10509838	1					
ANR	10510251	CastExpression	( cups_utf8_t ) ( 0xf0 | ( ( ch >> 18 ) & 0x07 ) )		10509838	1					
ANR	10510252	CastTarget	cups_utf8_t		10509838	0					
ANR	10510253	InclusiveOrExpression	0xf0 | ( ( ch >> 18 ) & 0x07 )		10509838	1		|			
ANR	10510254	PrimaryExpression	0xf0		10509838	0					
ANR	10510255	BitAndExpression	( ch >> 18 ) & 0x07		10509838	1		&			
ANR	10510256	ShiftExpression	ch >> 18		10509838	0		>>			
ANR	10510257	Identifier	ch		10509838	0					
ANR	10510258	PrimaryExpression	18		10509838	1					
ANR	10510259	PrimaryExpression	0x07		10509838	1					
ANR	10510260	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ( ch >> 12 ) & 0x3f ) )	700:6:15291:15342	10509838	2	True				
ANR	10510261	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ( ch >> 12 ) & 0x3f ) )		10509838	0		=			
ANR	10510262	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510263	UnaryOperator	*		10509838	0					
ANR	10510264	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510265	Identifier	dest		10509838	0					
ANR	10510266	IncDec	++		10509838	1					
ANR	10510267	CastExpression	( cups_utf8_t ) ( 0x80 | ( ( ch >> 12 ) & 0x3f ) )		10509838	1					
ANR	10510268	CastTarget	cups_utf8_t		10509838	0					
ANR	10510269	InclusiveOrExpression	0x80 | ( ( ch >> 12 ) & 0x3f )		10509838	1		|			
ANR	10510270	PrimaryExpression	0x80		10509838	0					
ANR	10510271	BitAndExpression	( ch >> 12 ) & 0x3f		10509838	1		&			
ANR	10510272	ShiftExpression	ch >> 12		10509838	0		>>			
ANR	10510273	Identifier	ch		10509838	0					
ANR	10510274	PrimaryExpression	12		10509838	1					
ANR	10510275	PrimaryExpression	0x3f		10509838	1					
ANR	10510276	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ( ch >> 6 ) & 0x3f ) )	701:6:15350:15400	10509838	3	True				
ANR	10510277	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ( ch >> 6 ) & 0x3f ) )		10509838	0		=			
ANR	10510278	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510279	UnaryOperator	*		10509838	0					
ANR	10510280	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510281	Identifier	dest		10509838	0					
ANR	10510282	IncDec	++		10509838	1					
ANR	10510283	CastExpression	( cups_utf8_t ) ( 0x80 | ( ( ch >> 6 ) & 0x3f ) )		10509838	1					
ANR	10510284	CastTarget	cups_utf8_t		10509838	0					
ANR	10510285	InclusiveOrExpression	0x80 | ( ( ch >> 6 ) & 0x3f )		10509838	1		|			
ANR	10510286	PrimaryExpression	0x80		10509838	0					
ANR	10510287	BitAndExpression	( ch >> 6 ) & 0x3f		10509838	1		&			
ANR	10510288	ShiftExpression	ch >> 6		10509838	0		>>			
ANR	10510289	Identifier	ch		10509838	0					
ANR	10510290	PrimaryExpression	6		10509838	1					
ANR	10510291	PrimaryExpression	0x3f		10509838	1					
ANR	10510292	ExpressionStatement	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )	702:6:15408:15451	10509838	4	True				
ANR	10510293	AssignmentExpression	* dest ++ = ( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )		10509838	0		=			
ANR	10510294	UnaryOperationExpression	* dest ++		10509838	0					
ANR	10510295	UnaryOperator	*		10509838	0					
ANR	10510296	PostIncDecOperationExpression	dest ++		10509838	1					
ANR	10510297	Identifier	dest		10509838	0					
ANR	10510298	IncDec	++		10509838	1					
ANR	10510299	CastExpression	( cups_utf8_t ) ( 0x80 | ( ch & 0x3f ) )		10509838	1					
ANR	10510300	CastTarget	cups_utf8_t		10509838	0					
ANR	10510301	InclusiveOrExpression	0x80 | ( ch & 0x3f )		10509838	1		|			
ANR	10510302	PrimaryExpression	0x80		10509838	0					
ANR	10510303	BitAndExpression	ch & 0x3f		10509838	1		&			
ANR	10510304	Identifier	ch		10509838	0					
ANR	10510305	PrimaryExpression	0x3f		10509838	1					
ANR	10510306	ExpressionStatement	i -= 4	703:6:15459:15465	10509838	5	True				
ANR	10510307	AssignmentExpression	i -= 4		10509838	0		-=			
ANR	10510308	Identifier	i		10509838	0					
ANR	10510309	PrimaryExpression	4		10509838	1					
ANR	10510310	ExpressionStatement	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x %02x %02x %02x"" , ( unsigned ) ch , dest [ - 4 ] , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ] ) )"	705:6:15474:15611	10509838	6	True				
ANR	10510311	CallExpression	"DEBUG_printf ( ( ""4cupsUTF32ToUTF8: %08x => %02x %02x %02x %02x"" , ( unsigned ) ch , dest [ - 4 ] , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ] ) )"		10509838	0					
ANR	10510312	Callee	DEBUG_printf		10509838	0					
ANR	10510313	Identifier	DEBUG_printf		10509838	0					
ANR	10510314	ArgumentList	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x %02x"" , ( unsigned ) ch , dest [ - 4 ] , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510315	Argument	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x %02x"" , ( unsigned ) ch , dest [ - 4 ] , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	0					
ANR	10510316	Expression	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x %02x"" , ( unsigned ) ch , dest [ - 4 ] , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	0					
ANR	10510317	PrimaryExpression	"""4cupsUTF32ToUTF8: %08x => %02x %02x %02x %02x"""		10509838	0					
ANR	10510318	Expression	"( unsigned ) ch , dest [ - 4 ] , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510319	CastExpression	( unsigned ) ch		10509838	0					
ANR	10510320	CastTarget	unsigned		10509838	0					
ANR	10510321	Identifier	ch		10509838	1					
ANR	10510322	Expression	"dest [ - 4 ] , dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510323	ArrayIndexing	dest [ - 4 ]		10509838	0					
ANR	10510324	Identifier	dest		10509838	0					
ANR	10510325	UnaryOperationExpression	- 4		10509838	1					
ANR	10510326	UnaryOperator	-		10509838	0					
ANR	10510327	PrimaryExpression	4		10509838	1					
ANR	10510328	Expression	"dest [ - 3 ] , dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510329	ArrayIndexing	dest [ - 3 ]		10509838	0					
ANR	10510330	Identifier	dest		10509838	0					
ANR	10510331	UnaryOperationExpression	- 3		10509838	1					
ANR	10510332	UnaryOperator	-		10509838	0					
ANR	10510333	PrimaryExpression	3		10509838	1					
ANR	10510334	Expression	"dest [ - 2 ] , dest [ - 1 ]"		10509838	1					
ANR	10510335	ArrayIndexing	dest [ - 2 ]		10509838	0					
ANR	10510336	Identifier	dest		10509838	0					
ANR	10510337	UnaryOperationExpression	- 2		10509838	1					
ANR	10510338	UnaryOperator	-		10509838	0					
ANR	10510339	PrimaryExpression	2		10509838	1					
ANR	10510340	ArrayIndexing	dest [ - 1 ]		10509838	1					
ANR	10510341	Identifier	dest		10509838	0					
ANR	10510342	UnaryOperationExpression	- 1		10509838	1					
ANR	10510343	UnaryOperator	-		10509838	0					
ANR	10510344	PrimaryExpression	1		10509838	1					
ANR	10510345	ExpressionStatement	* dest = '\\0'	710:2:15626:15638	10509838	12	True				
ANR	10510346	AssignmentExpression	* dest = '\\0'		10509838	0		=			
ANR	10510347	UnaryOperationExpression	* dest		10509838	0					
ANR	10510348	UnaryOperator	*		10509838	0					
ANR	10510349	Identifier	dest		10509838	1					
ANR	10510350	PrimaryExpression	'\\0'		10509838	1					
ANR	10510351	ExpressionStatement	"DEBUG_printf ( ( ""3cupsUTF32ToUTF8: Returning %d"" , ( int ) ( dest - start ) ) )"	712:2:15643:15712	10509838	13	True				
ANR	10510352	CallExpression	"DEBUG_printf ( ( ""3cupsUTF32ToUTF8: Returning %d"" , ( int ) ( dest - start ) ) )"		10509838	0					
ANR	10510353	Callee	DEBUG_printf		10509838	0					
ANR	10510354	Identifier	DEBUG_printf		10509838	0					
ANR	10510355	ArgumentList	"""3cupsUTF32ToUTF8: Returning %d"" , ( int ) ( dest - start )"		10509838	1					
ANR	10510356	Argument	"""3cupsUTF32ToUTF8: Returning %d"" , ( int ) ( dest - start )"		10509838	0					
ANR	10510357	Expression	"""3cupsUTF32ToUTF8: Returning %d"" , ( int ) ( dest - start )"		10509838	0					
ANR	10510358	PrimaryExpression	"""3cupsUTF32ToUTF8: Returning %d"""		10509838	0					
ANR	10510359	CastExpression	( int ) ( dest - start )		10509838	1					
ANR	10510360	CastTarget	int		10509838	0					
ANR	10510361	AdditiveExpression	dest - start		10509838	1		-			
ANR	10510362	Identifier	dest		10509838	0					
ANR	10510363	Identifier	start		10509838	1					
ANR	10510364	ReturnStatement	return ( ( int ) ( dest - start ) ) ;	714:2:15717:15745	10509838	14	True				
ANR	10510365	CastExpression	( int ) ( dest - start )		10509838	0					
ANR	10510366	CastTarget	int		10509838	0					
ANR	10510367	AdditiveExpression	dest - start		10509838	1		-			
ANR	10510368	Identifier	dest		10509838	0					
ANR	10510369	Identifier	start		10509838	1					
ANR	10510370	ReturnType	int		10509838	1					
ANR	10510371	Identifier	cupsUTF32ToUTF8		10509838	2					
ANR	10510372	ParameterList	"cups_utf8_t * dest , const cups_utf32_t * src , const int maxout"		10509838	3					
ANR	10510373	Parameter	cups_utf8_t * dest	564:4:12355:12378	10509838	0	True				
ANR	10510374	ParameterType	cups_utf8_t *		10509838	0					
ANR	10510375	Identifier	dest		10509838	1					
ANR	10510376	Parameter	const cups_utf32_t * src	565:4:12410:12432	10509838	1	True				
ANR	10510377	ParameterType	const cups_utf32_t *		10509838	0					
ANR	10510378	Identifier	src		10509838	1					
ANR	10510379	Parameter	const int maxout	566:4:12464:12488	10509838	2	True				
ANR	10510380	ParameterType	const int		10509838	0					
ANR	10510381	Identifier	maxout		10509838	1					
ANR	10510382	CFGEntryNode	ENTRY		10509838		True				
ANR	10510383	CFGExitNode	EXIT		10509838		True				
ANR	10510384	Symbol	src		10509838						
ANR	10510385	Symbol	maxout		10509838						
ANR	10510386	Symbol	swap		10509838						
ANR	10510387	Symbol	ch		10509838						
ANR	10510388	Symbol	* dest		10509838						
ANR	10510389	Symbol	start		10509838						
ANR	10510390	Symbol	* src ++		10509838						
ANR	10510391	Symbol	i		10509838						
ANR	10510392	Symbol	* dest ++		10509838						
ANR	10510393	Symbol	dest		10509838						
ANR	10510394	Symbol	* src		10509838						
