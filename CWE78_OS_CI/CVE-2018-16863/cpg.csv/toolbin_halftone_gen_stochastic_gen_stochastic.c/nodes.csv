command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10493209	File	data/converged/CVE-2018-16863_ghostpdl/toolbin_halftone_gen_stochastic_gen_stochastic.c								
ANR	10493210	DeclStmt									
ANR	10493211	Decl							int	int	array_width
ANR	10493212	Decl							int	int	array_height
ANR	10493213	Decl							int	int [ 2 ]	resolution
ANR	10493214	DeclStmt									
ANR	10493215	Decl							int	int	quiet
ANR	10493216	DeclStmt									
ANR	10493217	Decl							FILE	FILE *	fp
ANR	10493218	DeclStmt									
ANR	10493219	Decl							double	double [ MAX_ARRAY_WIDTH * MAX_ARRAY_HEIGHT ]	Val
ANR	10493220	DeclStmt									
ANR	10493221	Decl							double	double	MinVal
ANR	10493222	Decl							double	double	MaxVal
ANR	10493223	Decl							double	double	ValRange
ANR	10493224	ClassDef	Order_t	141:8:4946:4994							
ANR	10493225	DeclStmt									
ANR	10493226	Decl							int	int	X
ANR	10493227	DeclStmt									
ANR	10493228	Decl							int	int	Y
ANR	10493229	DeclStmt									
ANR	10493230	Decl							Order_t	Order_t	Order_s
ANR	10493231	DeclStmt									
ANR	10493232	Decl							Order_s	Order_s [ MAX_ARRAY_WIDTH * MAX_ARRAY_HEIGHT ]	Order
ANR	10493233	DeclStmt									
ANR	10493234	Decl							int	"int ( int choice_X , int choice_Y , int level , int last )"	do_dot
ANR	10493235	DeclStmt									
ANR	10493236	Decl							int	"int ( const void * , const void * )"	CompareOrder
ANR	10493237	DeclStmt									
ANR	10493238	Decl							double	"double ( int thisX , int thisY , int refX , int refY , double rx_sq , double ry_sq )"	ValFunction
ANR	10493239	DeclStmt									
ANR	10493240	Decl							int	"int ( int argc , char * * argv )"	init_gs_display
ANR	10493241	DeclStmt									
ANR	10493242	Decl							int	int ( void )	update_gs_image
ANR	10493243	DeclStmt									
ANR	10493244	Decl							int	"int ( int choice_X , int choice_Y , int last )"	update_gs_dot
ANR	10493245	DeclStmt									
ANR	10493246	Decl							void	void ( void )	close_gs_display
ANR	10493247	ClassDef	min_dot_edge	161:7:5506:8471							
ANR	10493248	DeclStmt									
ANR	10493249	Decl							int	int	num_rows
ANR	10493250	DeclStmt									
ANR	10493251	Decl							int	int [ 3 ]	left
ANR	10493252	DeclStmt									
ANR	10493253	Decl							int	int [ 3 ]	right
ANR	10493254	DeclStmt									
ANR	10493255	Decl							min_dot_edge	min_dot_edge [ 20 ]	min_dot_edges
ANR	10493256	Function	main	253:0:8553:24583							
ANR	10493257	FunctionDef	"main (int argc , char * argv [ ])"		10493256	0					
ANR	10493258	CompoundStatement		255:0:8586:24583	10493256	0					
ANR	10493259	IdentifierDeclStatement	"int i , j , k , m , level , level_up = 1 ;"	257:4:8636:8672	10493256	0	True				
ANR	10493260	IdentifierDecl	i		10493256	0					
ANR	10493261	IdentifierDeclType	int		10493256	0					
ANR	10493262	Identifier	i		10493256	1					
ANR	10493263	IdentifierDecl	j		10493256	1					
ANR	10493264	IdentifierDeclType	int		10493256	0					
ANR	10493265	Identifier	j		10493256	1					
ANR	10493266	IdentifierDecl	k		10493256	2					
ANR	10493267	IdentifierDeclType	int		10493256	0					
ANR	10493268	Identifier	k		10493256	1					
ANR	10493269	IdentifierDecl	m		10493256	3					
ANR	10493270	IdentifierDeclType	int		10493256	0					
ANR	10493271	Identifier	m		10493256	1					
ANR	10493272	IdentifierDecl	level		10493256	4					
ANR	10493273	IdentifierDeclType	int		10493256	0					
ANR	10493274	Identifier	level		10493256	1					
ANR	10493275	IdentifierDecl	level_up = 1		10493256	5					
ANR	10493276	IdentifierDeclType	int		10493256	0					
ANR	10493277	Identifier	level_up		10493256	1					
ANR	10493278	AssignmentExpression	level_up = 1		10493256	2		=			
ANR	10493279	Identifier	level_up		10493256	0					
ANR	10493280	PrimaryExpression	1		10493256	1					
ANR	10493281	IdentifierDeclStatement	"int X , Y , choice_range , choice , choice_X , choice_Y ;"	258:4:8678:8729	10493256	1	True				
ANR	10493282	IdentifierDecl	X		10493256	0					
ANR	10493283	IdentifierDeclType	int		10493256	0					
ANR	10493284	Identifier	X		10493256	1					
ANR	10493285	IdentifierDecl	Y		10493256	1					
ANR	10493286	IdentifierDeclType	int		10493256	0					
ANR	10493287	Identifier	Y		10493256	1					
ANR	10493288	IdentifierDecl	choice_range		10493256	2					
ANR	10493289	IdentifierDeclType	int		10493256	0					
ANR	10493290	Identifier	choice_range		10493256	1					
ANR	10493291	IdentifierDecl	choice		10493256	3					
ANR	10493292	IdentifierDeclType	int		10493256	0					
ANR	10493293	Identifier	choice		10493256	1					
ANR	10493294	IdentifierDecl	choice_X		10493256	4					
ANR	10493295	IdentifierDeclType	int		10493256	0					
ANR	10493296	Identifier	choice_X		10493256	1					
ANR	10493297	IdentifierDecl	choice_Y		10493256	5					
ANR	10493298	IdentifierDeclType	int		10493256	0					
ANR	10493299	Identifier	choice_Y		10493256	1					
ANR	10493300	IdentifierDeclStatement	int SortRange ;	259:4:8735:8749	10493256	2	True				
ANR	10493301	IdentifierDecl	SortRange		10493256	0					
ANR	10493302	IdentifierDeclType	int		10493256	0					
ANR	10493303	Identifier	SortRange		10493256	1					
ANR	10493304	IdentifierDeclStatement	"int min_dot_pattern = 0 , do_min_dot ;"	260:4:8755:8791	10493256	3	True				
ANR	10493305	IdentifierDecl	min_dot_pattern = 0		10493256	0					
ANR	10493306	IdentifierDeclType	int		10493256	0					
ANR	10493307	Identifier	min_dot_pattern		10493256	1					
ANR	10493308	AssignmentExpression	min_dot_pattern = 0		10493256	2		=			
ANR	10493309	Identifier	min_dot_pattern		10493256	0					
ANR	10493310	PrimaryExpression	0		10493256	1					
ANR	10493311	IdentifierDecl	do_min_dot		10493256	1					
ANR	10493312	IdentifierDeclType	int		10493256	0					
ANR	10493313	Identifier	do_min_dot		10493256	1					
ANR	10493314	IdentifierDeclStatement	"double value , val_thresh = 0.01 ;"	261:4:8797:8828	10493256	4	True				
ANR	10493315	IdentifierDecl	value		10493256	0					
ANR	10493316	IdentifierDeclType	double		10493256	0					
ANR	10493317	Identifier	value		10493256	1					
ANR	10493318	IdentifierDecl	val_thresh = 0.01		10493256	1					
ANR	10493319	IdentifierDeclType	double		10493256	0					
ANR	10493320	Identifier	val_thresh		10493256	1					
ANR	10493321	AssignmentExpression	val_thresh = 0.01		10493256	2		=			
ANR	10493322	Identifier	val_thresh		10493256	0					
ANR	10493323	PrimaryExpression	0.01		10493256	1					
ANR	10493324	IdentifierDeclStatement	"double rx_sq = 1.0 , ry_sq = 1.0 ;"	262:4:8853:8884	10493256	5	True				
ANR	10493325	IdentifierDecl	rx_sq = 1.0		10493256	0					
ANR	10493326	IdentifierDeclType	double		10493256	0					
ANR	10493327	Identifier	rx_sq		10493256	1					
ANR	10493328	AssignmentExpression	rx_sq = 1.0		10493256	2		=			
ANR	10493329	Identifier	rx_sq		10493256	0					
ANR	10493330	PrimaryExpression	1.0		10493256	1					
ANR	10493331	IdentifierDecl	ry_sq = 1.0		10493256	1					
ANR	10493332	IdentifierDeclType	double		10493256	0					
ANR	10493333	Identifier	ry_sq		10493256	1					
ANR	10493334	AssignmentExpression	ry_sq = 1.0		10493256	2		=			
ANR	10493335	Identifier	ry_sq		10493256	0					
ANR	10493336	PrimaryExpression	1.0		10493256	1					
ANR	10493337	IdentifierDeclStatement	"double rand_scaled , bias_power = 2.0 ;"	263:4:8890:8926	10493256	6	True				
ANR	10493338	IdentifierDecl	rand_scaled		10493256	0					
ANR	10493339	IdentifierDeclType	double		10493256	0					
ANR	10493340	Identifier	rand_scaled		10493256	1					
ANR	10493341	IdentifierDecl	bias_power = 2.0		10493256	1					
ANR	10493342	IdentifierDeclType	double		10493256	0					
ANR	10493343	Identifier	bias_power		10493256	1					
ANR	10493344	AssignmentExpression	bias_power = 2.0		10493256	2		=			
ANR	10493345	Identifier	bias_power		10493256	0					
ANR	10493346	PrimaryExpression	2.0		10493256	1					
ANR	10493347	IdentifierDeclStatement	float x ;	264:4:8932:8939	10493256	7	True				
ANR	10493348	IdentifierDecl	x		10493256	0					
ANR	10493349	IdentifierDeclType	float		10493256	0					
ANR	10493350	Identifier	x		10493256	1					
ANR	10493351	IdentifierDeclStatement	int gsarg_start ;	266:4:8946:8961	10493256	8	True				
ANR	10493352	IdentifierDecl	gsarg_start		10493256	0					
ANR	10493353	IdentifierDeclType	int		10493256	0					
ANR	10493354	Identifier	gsarg_start		10493256	1					
ANR	10493355	IdentifierDeclStatement	"int code = 0 , at_arg ;"	267:4:8967:8987	10493256	9	True				
ANR	10493356	IdentifierDecl	code = 0		10493256	0					
ANR	10493357	IdentifierDeclType	int		10493256	0					
ANR	10493358	Identifier	code		10493256	1					
ANR	10493359	AssignmentExpression	code = 0		10493256	2		=			
ANR	10493360	Identifier	code		10493256	0					
ANR	10493361	PrimaryExpression	0		10493256	1					
ANR	10493362	IdentifierDecl	at_arg		10493256	1					
ANR	10493363	IdentifierDeclType	int		10493256	0					
ANR	10493364	Identifier	at_arg		10493256	1					
ANR	10493365	ExpressionStatement	resolution [ 0 ] = resolution [ 1 ] = 1	269:4:8994:9027	10493256	10	True				
ANR	10493366	AssignmentExpression	resolution [ 0 ] = resolution [ 1 ] = 1		10493256	0		=			
ANR	10493367	ArrayIndexing	resolution [ 0 ]		10493256	0					
ANR	10493368	Identifier	resolution		10493256	0					
ANR	10493369	PrimaryExpression	0		10493256	1					
ANR	10493370	AssignmentExpression	resolution [ 1 ] = 1		10493256	1		=			
ANR	10493371	ArrayIndexing	resolution [ 1 ]		10493256	0					
ANR	10493372	Identifier	resolution		10493256	0					
ANR	10493373	PrimaryExpression	1		10493256	1					
ANR	10493374	PrimaryExpression	1		10493256	1					
ANR	10493375	ForStatement	for ( at_arg = 1 ; at_arg < argc ; at_arg ++ )		10493256	11					
ANR	10493376	ForInit	at_arg = 1 ;	272:9:9080:9088	10493256	0	True				
ANR	10493377	AssignmentExpression	at_arg = 1		10493256	0		=			
ANR	10493378	Identifier	at_arg		10493256	0					
ANR	10493379	PrimaryExpression	1		10493256	1					
ANR	10493380	Condition	at_arg < argc	272:19:9090:9100	10493256	1	True				
ANR	10493381	RelationalExpression	at_arg < argc		10493256	0		<			
ANR	10493382	Identifier	at_arg		10493256	0					
ANR	10493383	Identifier	argc		10493256	1					
ANR	10493384	PostIncDecOperationExpression	at_arg ++	272:32:9103:9110	10493256	2	True				
ANR	10493385	Identifier	at_arg		10493256	0					
ANR	10493386	IncDec	++		10493256	1					
ANR	10493387	CompoundStatement		18:42:526:526	10493256	3					
ANR	10493388	IfStatement	if ( argv [ at_arg ] [ 0 ] != '-' )		10493256	0					
ANR	10493389	Condition	argv [ at_arg ] [ 0 ] != '-'	273:12:9127:9148	10493256	0	True				
ANR	10493390	EqualityExpression	argv [ at_arg ] [ 0 ] != '-'		10493256	0		!=			
ANR	10493391	ArrayIndexing	argv [ at_arg ] [ 0 ]		10493256	0					
ANR	10493392	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493393	Identifier	argv		10493256	0					
ANR	10493394	Identifier	at_arg		10493256	1					
ANR	10493395	PrimaryExpression	0		10493256	1					
ANR	10493396	PrimaryExpression	'-'		10493256	1					
ANR	10493397	CompoundStatement		19:36:564:564	10493256	1					
ANR	10493398	BreakStatement	break ;	274:12:9165:9170	10493256	0	True				
ANR	10493399	ElseStatement	else		10493256	0					
ANR	10493400	IfStatement	if ( argv [ at_arg ] [ 1 ] == 'm' )		10493256	0					
ANR	10493401	Condition	argv [ at_arg ] [ 1 ] == 'm'	275:19:9213:9234	10493256	0	True				
ANR	10493402	EqualityExpression	argv [ at_arg ] [ 1 ] == 'm'		10493256	0		==			
ANR	10493403	ArrayIndexing	argv [ at_arg ] [ 1 ]		10493256	0					
ANR	10493404	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493405	Identifier	argv		10493256	0					
ANR	10493406	Identifier	at_arg		10493256	1					
ANR	10493407	PrimaryExpression	1		10493256	1					
ANR	10493408	PrimaryExpression	'm'		10493256	1					
ANR	10493409	CompoundStatement		21:43:650:650	10493256	1					
ANR	10493410	ExpressionStatement	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & m )"	276:12:9251:9289	10493256	0	True				
ANR	10493411	AssignmentExpression	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & m )"		10493256	0		=			
ANR	10493412	Identifier	j		10493256	0					
ANR	10493413	CallExpression	"sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & m )"		10493256	1					
ANR	10493414	Callee	sscanf		10493256	0					
ANR	10493415	Identifier	sscanf		10493256	0					
ANR	10493416	ArgumentList	& argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493417	Argument	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493418	UnaryOperationExpression	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493419	UnaryOperator	&		10493256	0					
ANR	10493420	ArrayIndexing	argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493421	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493422	Identifier	argv		10493256	0					
ANR	10493423	Identifier	at_arg		10493256	1					
ANR	10493424	PrimaryExpression	2		10493256	1					
ANR	10493425	Argument	"""%d"""		10493256	1					
ANR	10493426	PrimaryExpression	"""%d"""		10493256	0					
ANR	10493427	Argument	& m		10493256	2					
ANR	10493428	UnaryOperationExpression	& m		10493256	0					
ANR	10493429	UnaryOperator	&		10493256	0					
ANR	10493430	Identifier	m		10493256	1					
ANR	10493431	IfStatement	if ( j < 1 )		10493256	1					
ANR	10493432	Condition	j < 1	277:16:9307:9311	10493256	0	True				
ANR	10493433	RelationalExpression	j < 1		10493256	0		<			
ANR	10493434	Identifier	j		10493256	0					
ANR	10493435	PrimaryExpression	1		10493256	1					
ANR	10493436	GotoStatement	goto usage_exit ;	278:16:9330:9345	10493256	1	True				
ANR	10493437	Identifier	usage_exit		10493256	0					
ANR	10493438	ExpressionStatement	min_dot_pattern = m	279:12:9359:9378	10493256	2	True				
ANR	10493439	AssignmentExpression	min_dot_pattern = m		10493256	0		=			
ANR	10493440	Identifier	min_dot_pattern		10493256	0					
ANR	10493441	Identifier	m		10493256	1					
ANR	10493442	ElseStatement	else		10493256	0					
ANR	10493443	IfStatement	if ( argv [ at_arg ] [ 1 ] == 'p' )		10493256	0					
ANR	10493444	Condition	argv [ at_arg ] [ 1 ] == 'p'	280:19:9399:9420	10493256	0	True				
ANR	10493445	EqualityExpression	argv [ at_arg ] [ 1 ] == 'p'		10493256	0		==			
ANR	10493446	ArrayIndexing	argv [ at_arg ] [ 1 ]		10493256	0					
ANR	10493447	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493448	Identifier	argv		10493256	0					
ANR	10493449	Identifier	at_arg		10493256	1					
ANR	10493450	PrimaryExpression	1		10493256	1					
ANR	10493451	PrimaryExpression	'p'		10493256	1					
ANR	10493452	CompoundStatement		26:43:836:836	10493256	1					
ANR	10493453	ExpressionStatement	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%f"" , & x )"	281:12:9437:9475	10493256	0	True				
ANR	10493454	AssignmentExpression	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%f"" , & x )"		10493256	0		=			
ANR	10493455	Identifier	j		10493256	0					
ANR	10493456	CallExpression	"sscanf ( & argv [ at_arg ] [ 2 ] , ""%f"" , & x )"		10493256	1					
ANR	10493457	Callee	sscanf		10493256	0					
ANR	10493458	Identifier	sscanf		10493256	0					
ANR	10493459	ArgumentList	& argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493460	Argument	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493461	UnaryOperationExpression	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493462	UnaryOperator	&		10493256	0					
ANR	10493463	ArrayIndexing	argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493464	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493465	Identifier	argv		10493256	0					
ANR	10493466	Identifier	at_arg		10493256	1					
ANR	10493467	PrimaryExpression	2		10493256	1					
ANR	10493468	Argument	"""%f"""		10493256	1					
ANR	10493469	PrimaryExpression	"""%f"""		10493256	0					
ANR	10493470	Argument	& x		10493256	2					
ANR	10493471	UnaryOperationExpression	& x		10493256	0					
ANR	10493472	UnaryOperator	&		10493256	0					
ANR	10493473	Identifier	x		10493256	1					
ANR	10493474	IfStatement	if ( j < 1 )		10493256	1					
ANR	10493475	Condition	j < 1	282:16:9493:9497	10493256	0	True				
ANR	10493476	RelationalExpression	j < 1		10493256	0		<			
ANR	10493477	Identifier	j		10493256	0					
ANR	10493478	PrimaryExpression	1		10493256	1					
ANR	10493479	GotoStatement	goto usage_exit ;	283:16:9516:9531	10493256	1	True				
ANR	10493480	Identifier	usage_exit		10493256	0					
ANR	10493481	ExpressionStatement	bias_power = x	284:12:9545:9559	10493256	2	True				
ANR	10493482	AssignmentExpression	bias_power = x		10493256	0		=			
ANR	10493483	Identifier	bias_power		10493256	0					
ANR	10493484	Identifier	x		10493256	1					
ANR	10493485	ElseStatement	else		10493256	0					
ANR	10493486	IfStatement	if ( argv [ at_arg ] [ 1 ] == 'q' )		10493256	0					
ANR	10493487	Condition	argv [ at_arg ] [ 1 ] == 'q'	285:19:9580:9601	10493256	0	True				
ANR	10493488	EqualityExpression	argv [ at_arg ] [ 1 ] == 'q'		10493256	0		==			
ANR	10493489	ArrayIndexing	argv [ at_arg ] [ 1 ]		10493256	0					
ANR	10493490	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493491	Identifier	argv		10493256	0					
ANR	10493492	Identifier	at_arg		10493256	1					
ANR	10493493	PrimaryExpression	1		10493256	1					
ANR	10493494	PrimaryExpression	'q'		10493256	1					
ANR	10493495	CompoundStatement		31:43:1017:1017	10493256	1					
ANR	10493496	ExpressionStatement	quiet = 1	286:20:9626:9635	10493256	0	True				
ANR	10493497	AssignmentExpression	quiet = 1		10493256	0		=			
ANR	10493498	Identifier	quiet		10493256	0					
ANR	10493499	PrimaryExpression	1		10493256	1					
ANR	10493500	ElseStatement	else		10493256	0					
ANR	10493501	IfStatement	if ( argv [ at_arg ] [ 1 ] == 'r' )		10493256	0					
ANR	10493502	Condition	argv [ at_arg ] [ 1 ] == 'r'	287:19:9656:9677	10493256	0	True				
ANR	10493503	EqualityExpression	argv [ at_arg ] [ 1 ] == 'r'		10493256	0		==			
ANR	10493504	ArrayIndexing	argv [ at_arg ] [ 1 ]		10493256	0					
ANR	10493505	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493506	Identifier	argv		10493256	0					
ANR	10493507	Identifier	at_arg		10493256	1					
ANR	10493508	PrimaryExpression	1		10493256	1					
ANR	10493509	PrimaryExpression	'r'		10493256	1					
ANR	10493510	CompoundStatement		33:43:1093:1093	10493256	1					
ANR	10493511	ExpressionStatement	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%dx%d"" , & k , & m )"	289:12:9731:9776	10493256	0	True				
ANR	10493512	AssignmentExpression	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%dx%d"" , & k , & m )"		10493256	0		=			
ANR	10493513	Identifier	j		10493256	0					
ANR	10493514	CallExpression	"sscanf ( & argv [ at_arg ] [ 2 ] , ""%dx%d"" , & k , & m )"		10493256	1					
ANR	10493515	Callee	sscanf		10493256	0					
ANR	10493516	Identifier	sscanf		10493256	0					
ANR	10493517	ArgumentList	& argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493518	Argument	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493519	UnaryOperationExpression	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493520	UnaryOperator	&		10493256	0					
ANR	10493521	ArrayIndexing	argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493522	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493523	Identifier	argv		10493256	0					
ANR	10493524	Identifier	at_arg		10493256	1					
ANR	10493525	PrimaryExpression	2		10493256	1					
ANR	10493526	Argument	"""%dx%d"""		10493256	1					
ANR	10493527	PrimaryExpression	"""%dx%d"""		10493256	0					
ANR	10493528	Argument	& k		10493256	2					
ANR	10493529	UnaryOperationExpression	& k		10493256	0					
ANR	10493530	UnaryOperator	&		10493256	0					
ANR	10493531	Identifier	k		10493256	1					
ANR	10493532	Argument	& m		10493256	3					
ANR	10493533	UnaryOperationExpression	& m		10493256	0					
ANR	10493534	UnaryOperator	&		10493256	0					
ANR	10493535	Identifier	m		10493256	1					
ANR	10493536	IfStatement	if ( j < 1 )		10493256	1					
ANR	10493537	Condition	j < 1	290:16:9794:9798	10493256	0	True				
ANR	10493538	RelationalExpression	j < 1		10493256	0		<			
ANR	10493539	Identifier	j		10493256	0					
ANR	10493540	PrimaryExpression	1		10493256	1					
ANR	10493541	GotoStatement	goto usage_exit ;	291:16:9817:9832	10493256	1	True				
ANR	10493542	Identifier	usage_exit		10493256	0					
ANR	10493543	ExpressionStatement	resolution [ 0 ] = k	292:12:9846:9863	10493256	2	True				
ANR	10493544	AssignmentExpression	resolution [ 0 ] = k		10493256	0		=			
ANR	10493545	ArrayIndexing	resolution [ 0 ]		10493256	0					
ANR	10493546	Identifier	resolution		10493256	0					
ANR	10493547	PrimaryExpression	0		10493256	1					
ANR	10493548	Identifier	k		10493256	1					
ANR	10493549	IfStatement	if ( j > 1 )		10493256	3					
ANR	10493550	Condition	j > 1	293:16:9881:9885	10493256	0	True				
ANR	10493551	RelationalExpression	j > 1		10493256	0		>			
ANR	10493552	Identifier	j		10493256	0					
ANR	10493553	PrimaryExpression	1		10493256	1					
ANR	10493554	ExpressionStatement	resolution [ 1 ] = m	294:16:9904:9921	10493256	1	True				
ANR	10493555	AssignmentExpression	resolution [ 1 ] = m		10493256	0		=			
ANR	10493556	ArrayIndexing	resolution [ 1 ]		10493256	0					
ANR	10493557	Identifier	resolution		10493256	0					
ANR	10493558	PrimaryExpression	1		10493256	1					
ANR	10493559	Identifier	m		10493256	1					
ANR	10493560	ExpressionStatement	rx_sq = resolution [ 0 ] * resolution [ 0 ]	295:12:9935:9972	10493256	4	True				
ANR	10493561	AssignmentExpression	rx_sq = resolution [ 0 ] * resolution [ 0 ]		10493256	0		=			
ANR	10493562	Identifier	rx_sq		10493256	0					
ANR	10493563	MultiplicativeExpression	resolution [ 0 ] * resolution [ 0 ]		10493256	1		*			
ANR	10493564	ArrayIndexing	resolution [ 0 ]		10493256	0					
ANR	10493565	Identifier	resolution		10493256	0					
ANR	10493566	PrimaryExpression	0		10493256	1					
ANR	10493567	ArrayIndexing	resolution [ 0 ]		10493256	1					
ANR	10493568	Identifier	resolution		10493256	0					
ANR	10493569	PrimaryExpression	0		10493256	1					
ANR	10493570	ExpressionStatement	ry_sq = resolution [ 1 ] * resolution [ 1 ]	296:12:9986:10023	10493256	5	True				
ANR	10493571	AssignmentExpression	ry_sq = resolution [ 1 ] * resolution [ 1 ]		10493256	0		=			
ANR	10493572	Identifier	ry_sq		10493256	0					
ANR	10493573	MultiplicativeExpression	resolution [ 1 ] * resolution [ 1 ]		10493256	1		*			
ANR	10493574	ArrayIndexing	resolution [ 1 ]		10493256	0					
ANR	10493575	Identifier	resolution		10493256	0					
ANR	10493576	PrimaryExpression	1		10493256	1					
ANR	10493577	ArrayIndexing	resolution [ 1 ]		10493256	1					
ANR	10493578	Identifier	resolution		10493256	0					
ANR	10493579	PrimaryExpression	1		10493256	1					
ANR	10493580	ElseStatement	else		10493256	0					
ANR	10493581	IfStatement	if ( argv [ at_arg ] [ 1 ] = 's' )		10493256	0					
ANR	10493582	Condition	argv [ at_arg ] [ 1 ] = 's'	297:19:10044:10064	10493256	0	True				
ANR	10493583	AssignmentExpression	argv [ at_arg ] [ 1 ] = 's'		10493256	0		=			
ANR	10493584	ArrayIndexing	argv [ at_arg ] [ 1 ]		10493256	0					
ANR	10493585	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493586	Identifier	argv		10493256	0					
ANR	10493587	Identifier	at_arg		10493256	1					
ANR	10493588	PrimaryExpression	1		10493256	1					
ANR	10493589	PrimaryExpression	's'		10493256	1					
ANR	10493590	CompoundStatement		43:42:1480:1480	10493256	1					
ANR	10493591	ExpressionStatement	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & k )"	299:12:10111:10149	10493256	0	True				
ANR	10493592	AssignmentExpression	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & k )"		10493256	0		=			
ANR	10493593	Identifier	j		10493256	0					
ANR	10493594	CallExpression	"sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & k )"		10493256	1					
ANR	10493595	Callee	sscanf		10493256	0					
ANR	10493596	Identifier	sscanf		10493256	0					
ANR	10493597	ArgumentList	& argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493598	Argument	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493599	UnaryOperationExpression	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493600	UnaryOperator	&		10493256	0					
ANR	10493601	ArrayIndexing	argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493602	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493603	Identifier	argv		10493256	0					
ANR	10493604	Identifier	at_arg		10493256	1					
ANR	10493605	PrimaryExpression	2		10493256	1					
ANR	10493606	Argument	"""%d"""		10493256	1					
ANR	10493607	PrimaryExpression	"""%d"""		10493256	0					
ANR	10493608	Argument	& k		10493256	2					
ANR	10493609	UnaryOperationExpression	& k		10493256	0					
ANR	10493610	UnaryOperator	&		10493256	0					
ANR	10493611	Identifier	k		10493256	1					
ANR	10493612	IfStatement	if ( j != 0 )		10493256	1					
ANR	10493613	Condition	j != 0	300:16:10167:10172	10493256	0	True				
ANR	10493614	EqualityExpression	j != 0		10493256	0		!=			
ANR	10493615	Identifier	j		10493256	0					
ANR	10493616	PrimaryExpression	0		10493256	1					
ANR	10493617	CompoundStatement		46:24:1588:1588	10493256	1					
ANR	10493618	ExpressionStatement	srand ( k )	301:16:10193:10201	10493256	0	True				
ANR	10493619	CallExpression	srand ( k )		10493256	0					
ANR	10493620	Callee	srand		10493256	0					
ANR	10493621	Identifier	srand		10493256	0					
ANR	10493622	ArgumentList	k		10493256	1					
ANR	10493623	Argument	k		10493256	0					
ANR	10493624	Identifier	k		10493256	0					
ANR	10493625	ElseStatement	else		10493256	0					
ANR	10493626	IfStatement	if ( argv [ at_arg ] [ 1 ] == 't' )		10493256	0					
ANR	10493627	Condition	argv [ at_arg ] [ 1 ] == 't'	303:19:10236:10257	10493256	0	True				
ANR	10493628	EqualityExpression	argv [ at_arg ] [ 1 ] == 't'		10493256	0		==			
ANR	10493629	ArrayIndexing	argv [ at_arg ] [ 1 ]		10493256	0					
ANR	10493630	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493631	Identifier	argv		10493256	0					
ANR	10493632	Identifier	at_arg		10493256	1					
ANR	10493633	PrimaryExpression	1		10493256	1					
ANR	10493634	PrimaryExpression	't'		10493256	1					
ANR	10493635	CompoundStatement		49:43:1673:1673	10493256	1					
ANR	10493636	ExpressionStatement	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & k )"	305:12:10310:10348	10493256	0	True				
ANR	10493637	AssignmentExpression	"j = sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & k )"		10493256	0		=			
ANR	10493638	Identifier	j		10493256	0					
ANR	10493639	CallExpression	"sscanf ( & argv [ at_arg ] [ 2 ] , ""%d"" , & k )"		10493256	1					
ANR	10493640	Callee	sscanf		10493256	0					
ANR	10493641	Identifier	sscanf		10493256	0					
ANR	10493642	ArgumentList	& argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493643	Argument	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493644	UnaryOperationExpression	& argv [ at_arg ] [ 2 ]		10493256	0					
ANR	10493645	UnaryOperator	&		10493256	0					
ANR	10493646	ArrayIndexing	argv [ at_arg ] [ 2 ]		10493256	1					
ANR	10493647	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493648	Identifier	argv		10493256	0					
ANR	10493649	Identifier	at_arg		10493256	1					
ANR	10493650	PrimaryExpression	2		10493256	1					
ANR	10493651	Argument	"""%d"""		10493256	1					
ANR	10493652	PrimaryExpression	"""%d"""		10493256	0					
ANR	10493653	Argument	& k		10493256	2					
ANR	10493654	UnaryOperationExpression	& k		10493256	0					
ANR	10493655	UnaryOperator	&		10493256	0					
ANR	10493656	Identifier	k		10493256	1					
ANR	10493657	IfStatement	if ( j < 1 )		10493256	1					
ANR	10493658	Condition	j < 1	306:16:10366:10370	10493256	0	True				
ANR	10493659	RelationalExpression	j < 1		10493256	0		<			
ANR	10493660	Identifier	j		10493256	0					
ANR	10493661	PrimaryExpression	1		10493256	1					
ANR	10493662	GotoStatement	goto usage_exit ;	307:16:10389:10404	10493256	1	True				
ANR	10493663	Identifier	usage_exit		10493256	0					
ANR	10493664	ExpressionStatement	val_thresh = ( double ) k / 1000.0	308:12:10418:10449	10493256	2	True				
ANR	10493665	AssignmentExpression	val_thresh = ( double ) k / 1000.0		10493256	0		=			
ANR	10493666	Identifier	val_thresh		10493256	0					
ANR	10493667	MultiplicativeExpression	( double ) k / 1000.0		10493256	1		/			
ANR	10493668	CastExpression	( double ) k		10493256	0					
ANR	10493669	CastTarget	double		10493256	0					
ANR	10493670	Identifier	k		10493256	1					
ANR	10493671	PrimaryExpression	1000.0		10493256	1					
ANR	10493672	IfStatement	if ( at_arg == argc )		10493256	12					
ANR	10493673	Condition	at_arg == argc	314:8:10617:10630	10493256	0	True				
ANR	10493674	EqualityExpression	at_arg == argc		10493256	0		==			
ANR	10493675	Identifier	at_arg		10493256	0					
ANR	10493676	Identifier	argc		10493256	1					
ANR	10493677	GotoStatement	goto usage_exit ;	315:8:10641:10656	10493256	1	True				
ANR	10493678	Identifier	usage_exit		10493256	0					
ANR	10493679	ExpressionStatement	"j = sscanf ( argv [ at_arg ++ ] , ""%dx%d"" , & k , & m )"	317:4:10663:10706	10493256	13	True				
ANR	10493680	AssignmentExpression	"j = sscanf ( argv [ at_arg ++ ] , ""%dx%d"" , & k , & m )"		10493256	0		=			
ANR	10493681	Identifier	j		10493256	0					
ANR	10493682	CallExpression	"sscanf ( argv [ at_arg ++ ] , ""%dx%d"" , & k , & m )"		10493256	1					
ANR	10493683	Callee	sscanf		10493256	0					
ANR	10493684	Identifier	sscanf		10493256	0					
ANR	10493685	ArgumentList	argv [ at_arg ++ ]		10493256	1					
ANR	10493686	Argument	argv [ at_arg ++ ]		10493256	0					
ANR	10493687	ArrayIndexing	argv [ at_arg ++ ]		10493256	0					
ANR	10493688	Identifier	argv		10493256	0					
ANR	10493689	PostIncDecOperationExpression	at_arg ++		10493256	1					
ANR	10493690	Identifier	at_arg		10493256	0					
ANR	10493691	IncDec	++		10493256	1					
ANR	10493692	Argument	"""%dx%d"""		10493256	1					
ANR	10493693	PrimaryExpression	"""%dx%d"""		10493256	0					
ANR	10493694	Argument	& k		10493256	2					
ANR	10493695	UnaryOperationExpression	& k		10493256	0					
ANR	10493696	UnaryOperator	&		10493256	0					
ANR	10493697	Identifier	k		10493256	1					
ANR	10493698	Argument	& m		10493256	3					
ANR	10493699	UnaryOperationExpression	& m		10493256	0					
ANR	10493700	UnaryOperator	&		10493256	0					
ANR	10493701	Identifier	m		10493256	1					
ANR	10493702	IfStatement	if ( j < 1 )		10493256	14					
ANR	10493703	Condition	j < 1	318:8:10716:10720	10493256	0	True				
ANR	10493704	RelationalExpression	j < 1		10493256	0		<			
ANR	10493705	Identifier	j		10493256	0					
ANR	10493706	PrimaryExpression	1		10493256	1					
ANR	10493707	GotoStatement	goto usage_exit ;	319:8:10731:10746	10493256	1	True				
ANR	10493708	Identifier	usage_exit		10493256	0					
ANR	10493709	ExpressionStatement	array_width = k	321:4:10753:10768	10493256	15	True				
ANR	10493710	AssignmentExpression	array_width = k		10493256	0		=			
ANR	10493711	Identifier	array_width		10493256	0					
ANR	10493712	Identifier	k		10493256	1					
ANR	10493713	ExpressionStatement	array_height = k	322:4:10774:10790	10493256	16	True				
ANR	10493714	AssignmentExpression	array_height = k		10493256	0		=			
ANR	10493715	Identifier	array_height		10493256	0					
ANR	10493716	Identifier	k		10493256	1					
ANR	10493717	IfStatement	if ( j > 1 )		10493256	17					
ANR	10493718	Condition	j > 1	323:8:10800:10804	10493256	0	True				
ANR	10493719	RelationalExpression	j > 1		10493256	0		>			
ANR	10493720	Identifier	j		10493256	0					
ANR	10493721	PrimaryExpression	1		10493256	1					
ANR	10493722	ExpressionStatement	array_height = m	324:8:10815:10831	10493256	1	True				
ANR	10493723	AssignmentExpression	array_height = m		10493256	0		=			
ANR	10493724	Identifier	array_height		10493256	0					
ANR	10493725	Identifier	m		10493256	1					
ANR	10493726	IfStatement	if ( array_width * array_height > MAX_ARRAY_WIDTH * MAX_ARRAY_HEIGHT )		10493256	18					
ANR	10493727	Condition	array_width * array_height > MAX_ARRAY_WIDTH * MAX_ARRAY_HEIGHT	326:8:10842:10904	10493256	0	True				
ANR	10493728	RelationalExpression	array_width * array_height > MAX_ARRAY_WIDTH * MAX_ARRAY_HEIGHT		10493256	0		>			
ANR	10493729	MultiplicativeExpression	array_width * array_height		10493256	0		*			
ANR	10493730	Identifier	array_width		10493256	0					
ANR	10493731	Identifier	array_height		10493256	1					
ANR	10493732	MultiplicativeExpression	MAX_ARRAY_WIDTH * MAX_ARRAY_HEIGHT		10493256	1		*			
ANR	10493733	Identifier	MAX_ARRAY_WIDTH		10493256	0					
ANR	10493734	Identifier	MAX_ARRAY_HEIGHT		10493256	1					
ANR	10493735	CompoundStatement		72:73:2320:2320	10493256	1					
ANR	10493736	ExpressionStatement	"printf ( ""Array size is too large, max width = %d, max height = %d\\n"" , MAX_ARRAY_WIDTH , MAX_ARRAY_HEIGHT )"	327:8:10917:11036	10493256	0	True				
ANR	10493737	CallExpression	"printf ( ""Array size is too large, max width = %d, max height = %d\\n"" , MAX_ARRAY_WIDTH , MAX_ARRAY_HEIGHT )"		10493256	0					
ANR	10493738	Callee	printf		10493256	0					
ANR	10493739	Identifier	printf		10493256	0					
ANR	10493740	ArgumentList	"""Array size is too large, max width = %d, max height = %d\\n"""		10493256	1					
ANR	10493741	Argument	"""Array size is too large, max width = %d, max height = %d\\n"""		10493256	0					
ANR	10493742	PrimaryExpression	"""Array size is too large, max width = %d, max height = %d\\n"""		10493256	0					
ANR	10493743	Argument	MAX_ARRAY_WIDTH		10493256	1					
ANR	10493744	Identifier	MAX_ARRAY_WIDTH		10493256	0					
ANR	10493745	Argument	MAX_ARRAY_HEIGHT		10493256	2					
ANR	10493746	Identifier	MAX_ARRAY_HEIGHT		10493256	0					
ANR	10493747	ReturnStatement	return 1 ;	329:8:11046:11054	10493256	1	True				
ANR	10493748	PrimaryExpression	1		10493256	0					
ANR	10493749	IfStatement	if ( at_arg == argc )		10493256	19					
ANR	10493750	Condition	at_arg == argc	333:8:11147:11160	10493256	0	True				
ANR	10493751	EqualityExpression	at_arg == argc		10493256	0		==			
ANR	10493752	Identifier	at_arg		10493256	0					
ANR	10493753	Identifier	argc		10493256	1					
ANR	10493754	GotoStatement	goto usage_exit ;	334:8:11171:11186	10493256	1	True				
ANR	10493755	Identifier	usage_exit		10493256	0					
ANR	10493756	IfStatement	"if ( ( fp = fopen ( argv [ at_arg ++ ] , ""w"" ) ) == NULL )"		10493256	20					
ANR	10493757	Condition	"( fp = fopen ( argv [ at_arg ++ ] , ""w"" ) ) == NULL"	336:8:11197:11236	10493256	0	True				
ANR	10493758	EqualityExpression	"( fp = fopen ( argv [ at_arg ++ ] , ""w"" ) ) == NULL"		10493256	0		==			
ANR	10493759	AssignmentExpression	"fp = fopen ( argv [ at_arg ++ ] , ""w"" )"		10493256	0		=			
ANR	10493760	Identifier	fp		10493256	0					
ANR	10493761	CallExpression	"fopen ( argv [ at_arg ++ ] , ""w"" )"		10493256	1					
ANR	10493762	Callee	fopen		10493256	0					
ANR	10493763	Identifier	fopen		10493256	0					
ANR	10493764	ArgumentList	argv [ at_arg ++ ]		10493256	1					
ANR	10493765	Argument	argv [ at_arg ++ ]		10493256	0					
ANR	10493766	ArrayIndexing	argv [ at_arg ++ ]		10493256	0					
ANR	10493767	Identifier	argv		10493256	0					
ANR	10493768	PostIncDecOperationExpression	at_arg ++		10493256	1					
ANR	10493769	Identifier	at_arg		10493256	0					
ANR	10493770	IncDec	++		10493256	1					
ANR	10493771	Argument	"""w"""		10493256	1					
ANR	10493772	PrimaryExpression	"""w"""		10493256	0					
ANR	10493773	Identifier	NULL		10493256	1					
ANR	10493774	GotoStatement	goto usage_exit ;	337:8:11247:11262	10493256	1	True				
ANR	10493775	Identifier	usage_exit		10493256	0					
ANR	10493776	ExpressionStatement	gsarg_start = at_arg	340:4:11332:11352	10493256	21	True				
ANR	10493777	AssignmentExpression	gsarg_start = at_arg		10493256	0		=			
ANR	10493778	Identifier	gsarg_start		10493256	0					
ANR	10493779	Identifier	at_arg		10493256	1					
ANR	10493780	IfStatement	if ( at_arg < argc && argv [ at_arg ] [ 0 ] == '-' && argv [ at_arg ] [ 1 ] == 'g' )		10493256	22					
ANR	10493781	Condition	at_arg < argc && argv [ at_arg ] [ 0 ] == '-' && argv [ at_arg ] [ 1 ] == 'g'	341:8:11362:11426	10493256	0	True				
ANR	10493782	AndExpression	at_arg < argc && argv [ at_arg ] [ 0 ] == '-' && argv [ at_arg ] [ 1 ] == 'g'		10493256	0		&&			
ANR	10493783	RelationalExpression	at_arg < argc		10493256	0		<			
ANR	10493784	Identifier	at_arg		10493256	0					
ANR	10493785	Identifier	argc		10493256	1					
ANR	10493786	AndExpression	argv [ at_arg ] [ 0 ] == '-' && argv [ at_arg ] [ 1 ] == 'g'		10493256	1		&&			
ANR	10493787	EqualityExpression	argv [ at_arg ] [ 0 ] == '-'		10493256	0		==			
ANR	10493788	ArrayIndexing	argv [ at_arg ] [ 0 ]		10493256	0					
ANR	10493789	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493790	Identifier	argv		10493256	0					
ANR	10493791	Identifier	at_arg		10493256	1					
ANR	10493792	PrimaryExpression	0		10493256	1					
ANR	10493793	PrimaryExpression	'-'		10493256	1					
ANR	10493794	EqualityExpression	argv [ at_arg ] [ 1 ] == 'g'		10493256	1		==			
ANR	10493795	ArrayIndexing	argv [ at_arg ] [ 1 ]		10493256	0					
ANR	10493796	ArrayIndexing	argv [ at_arg ]		10493256	0					
ANR	10493797	Identifier	argv		10493256	0					
ANR	10493798	Identifier	at_arg		10493256	1					
ANR	10493799	PrimaryExpression	1		10493256	1					
ANR	10493800	PrimaryExpression	'g'		10493256	1					
ANR	10493801	CompoundStatement		87:75:2842:2842	10493256	1					
ANR	10493802	ExpressionStatement	gsarg_start ++	342:8:11439:11452	10493256	0	True				
ANR	10493803	PostIncDecOperationExpression	gsarg_start ++		10493256	0					
ANR	10493804	Identifier	gsarg_start		10493256	0					
ANR	10493805	IncDec	++		10493256	1					
ANR	10493806	IfStatement	"if ( ( code = init_gs_display ( argc - gsarg_start , argv + gsarg_start ) ) < 0 )"		10493256	23					
ANR	10493807	Condition	"( code = init_gs_display ( argc - gsarg_start , argv + gsarg_start ) ) < 0"	345:8:11485:11548	10493256	0	True				
ANR	10493808	RelationalExpression	"( code = init_gs_display ( argc - gsarg_start , argv + gsarg_start ) ) < 0"		10493256	0		<			
ANR	10493809	AssignmentExpression	"code = init_gs_display ( argc - gsarg_start , argv + gsarg_start )"		10493256	0		=			
ANR	10493810	Identifier	code		10493256	0					
ANR	10493811	CallExpression	"init_gs_display ( argc - gsarg_start , argv + gsarg_start )"		10493256	1					
ANR	10493812	Callee	init_gs_display		10493256	0					
ANR	10493813	Identifier	init_gs_display		10493256	0					
ANR	10493814	ArgumentList	argc - gsarg_start		10493256	1					
ANR	10493815	Argument	argc - gsarg_start		10493256	0					
ANR	10493816	AdditiveExpression	argc - gsarg_start		10493256	0		-			
ANR	10493817	Identifier	argc		10493256	0					
ANR	10493818	Identifier	gsarg_start		10493256	1					
ANR	10493819	Argument	argv + gsarg_start		10493256	1					
ANR	10493820	AdditiveExpression	argv + gsarg_start		10493256	0		+			
ANR	10493821	Identifier	argv		10493256	0					
ANR	10493822	Identifier	gsarg_start		10493256	1					
ANR	10493823	PrimaryExpression	0		10493256	1					
ANR	10493824	ReturnStatement	return 1 ;	346:8:11559:11567	10493256	1	True				
ANR	10493825	PrimaryExpression	1		10493256	0					
ANR	10493826	ExpressionStatement	"fprintf ( fp , ""# W=%d H=%d\\n"" , array_width , array_height )"	354:4:11842:11896	10493256	24	True				
ANR	10493827	CallExpression	"fprintf ( fp , ""# W=%d H=%d\\n"" , array_width , array_height )"		10493256	0					
ANR	10493828	Callee	fprintf		10493256	0					
ANR	10493829	Identifier	fprintf		10493256	0					
ANR	10493830	ArgumentList	fp		10493256	1					
ANR	10493831	Argument	fp		10493256	0					
ANR	10493832	Identifier	fp		10493256	0					
ANR	10493833	Argument	"""# W=%d H=%d\\n"""		10493256	1					
ANR	10493834	PrimaryExpression	"""# W=%d H=%d\\n"""		10493256	0					
ANR	10493835	Argument	array_width		10493256	2					
ANR	10493836	Identifier	array_width		10493256	0					
ANR	10493837	Argument	array_height		10493256	3					
ANR	10493838	Identifier	array_height		10493256	0					
ANR	10493839	ForStatement	for ( Y = 0 ; Y < array_height ; Y ++ )		10493256	25					
ANR	10493840	ForInit	Y = 0 ;	358:9:12029:12032	10493256	0	True				
ANR	10493841	AssignmentExpression	Y = 0		10493256	0		=			
ANR	10493842	Identifier	Y		10493256	0					
ANR	10493843	PrimaryExpression	0		10493256	1					
ANR	10493844	Condition	Y < array_height	358:14:12034:12049	10493256	1	True				
ANR	10493845	RelationalExpression	Y < array_height		10493256	0		<			
ANR	10493846	Identifier	Y		10493256	0					
ANR	10493847	Identifier	array_height		10493256	1					
ANR	10493848	PostIncDecOperationExpression	Y ++	358:32:12052:12054	10493256	2	True				
ANR	10493849	Identifier	Y		10493256	0					
ANR	10493850	IncDec	++		10493256	1					
ANR	10493851	CompoundStatement		104:37:3470:3470	10493256	3					
ANR	10493852	ForStatement	for ( X = 0 ; X < array_width ; X ++ )		10493256	0					
ANR	10493853	ForInit	X = 0 ;	359:13:12072:12075	10493256	0	True				
ANR	10493854	AssignmentExpression	X = 0		10493256	0		=			
ANR	10493855	Identifier	X		10493256	0					
ANR	10493856	PrimaryExpression	0		10493256	1					
ANR	10493857	Condition	X < array_width	359:18:12077:12091	10493256	1	True				
ANR	10493858	RelationalExpression	X < array_width		10493256	0		<			
ANR	10493859	Identifier	X		10493256	0					
ANR	10493860	Identifier	array_width		10493256	1					
ANR	10493861	PostIncDecOperationExpression	X ++	359:35:12094:12096	10493256	2	True				
ANR	10493862	Identifier	X		10493256	0					
ANR	10493863	IncDec	++		10493256	1					
ANR	10493864	CompoundStatement		105:40:3512:3512	10493256	3					
ANR	10493865	ExpressionStatement	Order [ Y * array_width + X ] . X = X	360:12:12113:12145	10493256	0	True				
ANR	10493866	AssignmentExpression	Order [ Y * array_width + X ] . X = X		10493256	0		=			
ANR	10493867	MemberAccess	Order [ Y * array_width + X ] . X		10493256	0					
ANR	10493868	ArrayIndexing	Order [ Y * array_width + X ]		10493256	0					
ANR	10493869	Identifier	Order		10493256	0					
ANR	10493870	AdditiveExpression	Y * array_width + X		10493256	1		+			
ANR	10493871	MultiplicativeExpression	Y * array_width		10493256	0		*			
ANR	10493872	Identifier	Y		10493256	0					
ANR	10493873	Identifier	array_width		10493256	1					
ANR	10493874	Identifier	X		10493256	1					
ANR	10493875	Identifier	X		10493256	1					
ANR	10493876	Identifier	X		10493256	1					
ANR	10493877	ExpressionStatement	Order [ Y * array_width + X ] . Y = Y	361:12:12159:12191	10493256	1	True				
ANR	10493878	AssignmentExpression	Order [ Y * array_width + X ] . Y = Y		10493256	0		=			
ANR	10493879	MemberAccess	Order [ Y * array_width + X ] . Y		10493256	0					
ANR	10493880	ArrayIndexing	Order [ Y * array_width + X ]		10493256	0					
ANR	10493881	Identifier	Order		10493256	0					
ANR	10493882	AdditiveExpression	Y * array_width + X		10493256	1		+			
ANR	10493883	MultiplicativeExpression	Y * array_width		10493256	0		*			
ANR	10493884	Identifier	Y		10493256	0					
ANR	10493885	Identifier	array_width		10493256	1					
ANR	10493886	Identifier	X		10493256	1					
ANR	10493887	Identifier	Y		10493256	1					
ANR	10493888	Identifier	Y		10493256	1					
ANR	10493889	ExpressionStatement	Val [ Y * array_width + X ] = 0.0	362:12:12205:12235	10493256	2	True				
ANR	10493890	AssignmentExpression	Val [ Y * array_width + X ] = 0.0		10493256	0		=			
ANR	10493891	ArrayIndexing	Val [ Y * array_width + X ]		10493256	0					
ANR	10493892	Identifier	Val		10493256	0					
ANR	10493893	AdditiveExpression	Y * array_width + X		10493256	1		+			
ANR	10493894	MultiplicativeExpression	Y * array_width		10493256	0		*			
ANR	10493895	Identifier	Y		10493256	0					
ANR	10493896	Identifier	array_width		10493256	1					
ANR	10493897	Identifier	X		10493256	1					
ANR	10493898	PrimaryExpression	0.0		10493256	1					
ANR	10493899	ExpressionStatement	ThresholdArray [ X ] [ Y ] = - 1	363:12:12249:12274	10493256	3	True				
ANR	10493900	AssignmentExpression	ThresholdArray [ X ] [ Y ] = - 1		10493256	0		=			
ANR	10493901	ArrayIndexing	ThresholdArray [ X ] [ Y ]		10493256	0					
ANR	10493902	ArrayIndexing	ThresholdArray [ X ]		10493256	0					
ANR	10493903	Identifier	ThresholdArray		10493256	0					
ANR	10493904	Identifier	X		10493256	1					
ANR	10493905	Identifier	Y		10493256	1					
ANR	10493906	UnaryOperationExpression	- 1		10493256	1					
ANR	10493907	UnaryOperator	-		10493256	0					
ANR	10493908	PrimaryExpression	1		10493256	1					
ANR	10493909	ExpressionStatement	SortRange = ( array_width * array_height )	367:4:12339:12377	10493256	26	True				
ANR	10493910	AssignmentExpression	SortRange = ( array_width * array_height )		10493256	0		=			
ANR	10493911	Identifier	SortRange		10493256	0					
ANR	10493912	MultiplicativeExpression	array_width * array_height		10493256	1		*			
ANR	10493913	Identifier	array_width		10493256	0					
ANR	10493914	Identifier	array_height		10493256	1					
ANR	10493915	ExpressionStatement	MinVal = 0.0	368:4:12383:12395	10493256	27	True				
ANR	10493916	AssignmentExpression	MinVal = 0.0		10493256	0		=			
ANR	10493917	Identifier	MinVal		10493256	0					
ANR	10493918	PrimaryExpression	0.0		10493256	1					
ANR	10493919	ExpressionStatement	MaxVal = 0.0	369:4:12401:12413	10493256	28	True				
ANR	10493920	AssignmentExpression	MaxVal = 0.0		10493256	0		=			
ANR	10493921	Identifier	MaxVal		10493256	0					
ANR	10493922	PrimaryExpression	0.0		10493256	1					
ANR	10493923	ExpressionStatement	ValRange = 1.0	370:4:12419:12433	10493256	29	True				
ANR	10493924	AssignmentExpression	ValRange = 1.0		10493256	0		=			
ANR	10493925	Identifier	ValRange		10493256	0					
ANR	10493926	PrimaryExpression	1.0		10493256	1					
ANR	10493927	ForStatement	for ( level = 0 ; level < ( array_width * array_height ) ; level += level_up )		10493256	30					
ANR	10493928	ForInit	level = 0 ;	372:9:12445:12454	10493256	0	True				
ANR	10493929	AssignmentExpression	level = 0		10493256	0		=			
ANR	10493930	Identifier	level		10493256	0					
ANR	10493931	PrimaryExpression	0		10493256	1					
ANR	10493932	Condition	level < ( array_width * array_height )	372:20:12456:12491	10493256	1	True				
ANR	10493933	RelationalExpression	level < ( array_width * array_height )		10493256	0		<			
ANR	10493934	Identifier	level		10493256	0					
ANR	10493935	MultiplicativeExpression	array_width * array_height		10493256	1		*			
ANR	10493936	Identifier	array_width		10493256	0					
ANR	10493937	Identifier	array_height		10493256	1					
ANR	10493938	AssignmentExpression	level += level_up	372:58:12494:12510	10493256	2	True	+=			
ANR	10493939	Identifier	level		10493256	0					
ANR	10493940	Identifier	level_up		10493256	1					
ANR	10493941	CompoundStatement		118:77:3926:3926	10493256	3					
ANR	10493942	ExpressionStatement	"qsort ( ( void * ) Order , SortRange , sizeof ( Order_s ) , CompareOrder )"	379:8:12791:12853	10493256	0	True				
ANR	10493943	CallExpression	"qsort ( ( void * ) Order , SortRange , sizeof ( Order_s ) , CompareOrder )"		10493256	0					
ANR	10493944	Callee	qsort		10493256	0					
ANR	10493945	Identifier	qsort		10493256	0					
ANR	10493946	ArgumentList	( void * ) Order		10493256	1					
ANR	10493947	Argument	( void * ) Order		10493256	0					
ANR	10493948	CastExpression	( void * ) Order		10493256	0					
ANR	10493949	CastTarget	void *		10493256	0					
ANR	10493950	Identifier	Order		10493256	1					
ANR	10493951	Argument	SortRange		10493256	1					
ANR	10493952	Identifier	SortRange		10493256	0					
ANR	10493953	Argument	sizeof ( Order_s )		10493256	2					
ANR	10493954	SizeofExpression	sizeof ( Order_s )		10493256	0					
ANR	10493955	Sizeof	sizeof		10493256	0					
ANR	10493956	SizeofOperand	Order_s		10493256	1					
ANR	10493957	Argument	CompareOrder		10493256	3					
ANR	10493958	Identifier	CompareOrder		10493256	0					
ANR	10493959	ExpressionStatement	SortRange = array_width * array_height - level	380:8:12863:12909	10493256	1	True				
ANR	10493960	AssignmentExpression	SortRange = array_width * array_height - level		10493256	0		=			
ANR	10493961	Identifier	SortRange		10493256	0					
ANR	10493962	AdditiveExpression	array_width * array_height - level		10493256	1		-			
ANR	10493963	MultiplicativeExpression	array_width * array_height		10493256	0		*			
ANR	10493964	Identifier	array_width		10493256	0					
ANR	10493965	Identifier	array_height		10493256	1					
ANR	10493966	Identifier	level		10493256	1					
ANR	10493967	IfStatement	if ( ( code = update_gs_image ( ) ) < 0 )		10493256	2					
ANR	10493968	Condition	( code = update_gs_image ( ) ) < 0	384:12:12998:13025	10493256	0	True				
ANR	10493969	RelationalExpression	( code = update_gs_image ( ) ) < 0		10493256	0		<			
ANR	10493970	AssignmentExpression	code = update_gs_image ( )		10493256	0		=			
ANR	10493971	Identifier	code		10493256	0					
ANR	10493972	CallExpression	update_gs_image ( )		10493256	1					
ANR	10493973	Callee	update_gs_image		10493256	0					
ANR	10493974	Identifier	update_gs_image		10493256	0					
ANR	10493975	ArgumentList			10493256	1					
ANR	10493976	PrimaryExpression	0		10493256	1					
ANR	10493977	ReturnStatement	return 1 ;	385:12:13040:13048	10493256	1	True				
ANR	10493978	PrimaryExpression	1		10493256	0					
ANR	10493979	IfStatement	if ( ! quiet )		10493256	3					
ANR	10493980	Condition	! quiet	387:12:13069:13075	10493256	0	True				
ANR	10493981	UnaryOperationExpression	! quiet		10493256	0					
ANR	10493982	UnaryOperator	!		10493256	0					
ANR	10493983	Identifier	quiet		10493256	1					
ANR	10493984	CompoundStatement		133:21:4491:4491	10493256	1					
ANR	10493985	ExpressionStatement	"printf ( ""MinVal = %f, MinX = %d, MinY = %d\\n"" , MinVal , Order [ 0 ] . X , Order [ 0 ] . Y )"	388:12:13092:13169	10493256	0	True				
ANR	10493986	CallExpression	"printf ( ""MinVal = %f, MinX = %d, MinY = %d\\n"" , MinVal , Order [ 0 ] . X , Order [ 0 ] . Y )"		10493256	0					
ANR	10493987	Callee	printf		10493256	0					
ANR	10493988	Identifier	printf		10493256	0					
ANR	10493989	ArgumentList	"""MinVal = %f, MinX = %d, MinY = %d\\n"""		10493256	1					
ANR	10493990	Argument	"""MinVal = %f, MinX = %d, MinY = %d\\n"""		10493256	0					
ANR	10493991	PrimaryExpression	"""MinVal = %f, MinX = %d, MinY = %d\\n"""		10493256	0					
ANR	10493992	Argument	MinVal		10493256	1					
ANR	10493993	Identifier	MinVal		10493256	0					
ANR	10493994	Argument	Order [ 0 ] . X		10493256	2					
ANR	10493995	MemberAccess	Order [ 0 ] . X		10493256	0					
ANR	10493996	ArrayIndexing	Order [ 0 ]		10493256	0					
ANR	10493997	Identifier	Order		10493256	0					
ANR	10493998	PrimaryExpression	0		10493256	1					
ANR	10493999	Identifier	X		10493256	1					
ANR	10494000	Argument	Order [ 0 ] . Y		10493256	3					
ANR	10494001	MemberAccess	Order [ 0 ] . Y		10493256	0					
ANR	10494002	ArrayIndexing	Order [ 0 ]		10493256	0					
ANR	10494003	Identifier	Order		10493256	0					
ANR	10494004	PrimaryExpression	0		10493256	1					
ANR	10494005	Identifier	Y		10493256	1					
ANR	10494006	ExpressionStatement	choice_range = 0	392:8:13247:13263	10493256	4	True				
ANR	10494007	AssignmentExpression	choice_range = 0		10493256	0		=			
ANR	10494008	Identifier	choice_range		10493256	0					
ANR	10494009	PrimaryExpression	0		10493256	1					
ANR	10494010	ForStatement	for ( i = 0 ; i < ( array_width * array_height ) - level ; i ++ )		10493256	5					
ANR	10494011	ForInit	i = 0 ;	393:13:13278:13281	10493256	0	True				
ANR	10494012	AssignmentExpression	i = 0		10493256	0		=			
ANR	10494013	Identifier	i		10493256	0					
ANR	10494014	PrimaryExpression	0		10493256	1					
ANR	10494015	Condition	i < ( array_width * array_height ) - level	393:18:13283:13322	10493256	1	True				
ANR	10494016	RelationalExpression	i < ( array_width * array_height ) - level		10493256	0		<			
ANR	10494017	Identifier	i		10493256	0					
ANR	10494018	AdditiveExpression	( array_width * array_height ) - level		10493256	1		-			
ANR	10494019	MultiplicativeExpression	array_width * array_height		10493256	0		*			
ANR	10494020	Identifier	array_width		10493256	0					
ANR	10494021	Identifier	array_height		10493256	1					
ANR	10494022	Identifier	level		10493256	1					
ANR	10494023	PostIncDecOperationExpression	i ++	393:60:13325:13327	10493256	2	True				
ANR	10494024	Identifier	i		10493256	0					
ANR	10494025	IncDec	++		10493256	1					
ANR	10494026	CompoundStatement		139:65:4743:4743	10493256	3					
ANR	10494027	ExpressionStatement	value = Val [ ( Order [ i ] . Y * array_width ) + Order [ i ] . X ]	394:12:13344:13398	10493256	0	True				
ANR	10494028	AssignmentExpression	value = Val [ ( Order [ i ] . Y * array_width ) + Order [ i ] . X ]		10493256	0		=			
ANR	10494029	Identifier	value		10493256	0					
ANR	10494030	ArrayIndexing	Val [ ( Order [ i ] . Y * array_width ) + Order [ i ] . X ]		10493256	1					
ANR	10494031	Identifier	Val		10493256	0					
ANR	10494032	AdditiveExpression	( Order [ i ] . Y * array_width ) + Order [ i ] . X		10493256	1		+			
ANR	10494033	MultiplicativeExpression	Order [ i ] . Y * array_width		10493256	0		*			
ANR	10494034	MemberAccess	Order [ i ] . Y		10493256	0					
ANR	10494035	ArrayIndexing	Order [ i ]		10493256	0					
ANR	10494036	Identifier	Order		10493256	0					
ANR	10494037	Identifier	i		10493256	1					
ANR	10494038	Identifier	Y		10493256	1					
ANR	10494039	Identifier	array_width		10493256	1					
ANR	10494040	MemberAccess	Order [ i ] . X		10493256	1					
ANR	10494041	ArrayIndexing	Order [ i ]		10493256	0					
ANR	10494042	Identifier	Order		10493256	0					
ANR	10494043	Identifier	i		10493256	1					
ANR	10494044	Identifier	X		10493256	1					
ANR	10494045	ExpressionStatement	value = ( value - MinVal ) / ValRange	395:12:13412:13445	10493256	1	True				
ANR	10494046	AssignmentExpression	value = ( value - MinVal ) / ValRange		10493256	0		=			
ANR	10494047	Identifier	value		10493256	0					
ANR	10494048	MultiplicativeExpression	( value - MinVal ) / ValRange		10493256	1		/			
ANR	10494049	AdditiveExpression	value - MinVal		10493256	0		-			
ANR	10494050	Identifier	value		10493256	0					
ANR	10494051	Identifier	MinVal		10493256	1					
ANR	10494052	Identifier	ValRange		10493256	1					
ANR	10494053	IfStatement	if ( value > val_thresh )		10493256	2					
ANR	10494054	Condition	value > val_thresh	396:16:13463:13480	10493256	0	True				
ANR	10494055	RelationalExpression	value > val_thresh		10493256	0		>			
ANR	10494056	Identifier	value		10493256	0					
ANR	10494057	Identifier	val_thresh		10493256	1					
ANR	10494058	BreakStatement	break ;	397:16:13499:13504	10493256	1	True				
ANR	10494059	ExpressionStatement	choice_range ++	398:12:13518:13532	10493256	3	True				
ANR	10494060	PostIncDecOperationExpression	choice_range ++		10493256	0					
ANR	10494061	Identifier	choice_range		10493256	0					
ANR	10494062	IncDec	++		10493256	1					
ANR	10494063	IfStatement	if ( ! quiet )		10493256	6					
ANR	10494064	Condition	! quiet	400:12:13556:13562	10493256	0	True				
ANR	10494065	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494066	UnaryOperator	!		10493256	0					
ANR	10494067	Identifier	quiet		10493256	1					
ANR	10494068	ExpressionStatement	"printf ( ""Number of points less than %5.3f = %d\\n"" , val_thresh , choice_range )"	401:12:13577:13652	10493256	1	True				
ANR	10494069	CallExpression	"printf ( ""Number of points less than %5.3f = %d\\n"" , val_thresh , choice_range )"		10493256	0					
ANR	10494070	Callee	printf		10493256	0					
ANR	10494071	Identifier	printf		10493256	0					
ANR	10494072	ArgumentList	"""Number of points less than %5.3f = %d\\n"""		10493256	1					
ANR	10494073	Argument	"""Number of points less than %5.3f = %d\\n"""		10493256	0					
ANR	10494074	PrimaryExpression	"""Number of points less than %5.3f = %d\\n"""		10493256	0					
ANR	10494075	Argument	val_thresh		10493256	1					
ANR	10494076	Identifier	val_thresh		10493256	0					
ANR	10494077	Argument	choice_range		10493256	2					
ANR	10494078	Identifier	choice_range		10493256	0					
ANR	10494079	IfStatement	if ( choice_range > array_width * array_height / 10 )		10493256	7					
ANR	10494080	Condition	choice_range > array_width * array_height / 10	408:12:13891:13932	10493256	0	True				
ANR	10494081	RelationalExpression	choice_range > array_width * array_height / 10		10493256	0		>			
ANR	10494082	Identifier	choice_range		10493256	0					
ANR	10494083	MultiplicativeExpression	array_width * array_height / 10		10493256	1		*			
ANR	10494084	Identifier	array_width		10493256	0					
ANR	10494085	MultiplicativeExpression	array_height / 10		10493256	1		/			
ANR	10494086	Identifier	array_height		10493256	0					
ANR	10494087	PrimaryExpression	10		10493256	1					
ANR	10494088	ExpressionStatement	choice_range = array_width * array_height / 10	409:12:13947:13989	10493256	1	True				
ANR	10494089	AssignmentExpression	choice_range = array_width * array_height / 10		10493256	0		=			
ANR	10494090	Identifier	choice_range		10493256	0					
ANR	10494091	MultiplicativeExpression	array_width * array_height / 10		10493256	1		*			
ANR	10494092	Identifier	array_width		10493256	0					
ANR	10494093	MultiplicativeExpression	array_height / 10		10493256	1		/			
ANR	10494094	Identifier	array_height		10493256	0					
ANR	10494095	PrimaryExpression	10		10493256	1					
ANR	10494096	ExpressionStatement	rand_scaled = ( double ) rand ( ) / ( double ) RAND_MAX	412:8:14056:14103	10493256	8	True				
ANR	10494097	AssignmentExpression	rand_scaled = ( double ) rand ( ) / ( double ) RAND_MAX		10493256	0		=			
ANR	10494098	Identifier	rand_scaled		10493256	0					
ANR	10494099	MultiplicativeExpression	( double ) rand ( ) / ( double ) RAND_MAX		10493256	1		/			
ANR	10494100	CastExpression	( double ) rand ( )		10493256	0					
ANR	10494101	CastTarget	double		10493256	0					
ANR	10494102	CallExpression	rand ( )		10493256	1					
ANR	10494103	Callee	rand		10493256	0					
ANR	10494104	Identifier	rand		10493256	0					
ANR	10494105	ArgumentList			10493256	1					
ANR	10494106	CastExpression	( double ) RAND_MAX		10493256	1					
ANR	10494107	CastTarget	double		10493256	0					
ANR	10494108	Identifier	RAND_MAX		10493256	1					
ANR	10494109	ExpressionStatement	"choice = ( int ) ( ( double ) choice_range * pow ( rand_scaled , bias_power ) )"	413:8:14113:14180	10493256	9	True				
ANR	10494110	AssignmentExpression	"choice = ( int ) ( ( double ) choice_range * pow ( rand_scaled , bias_power ) )"		10493256	0		=			
ANR	10494111	Identifier	choice		10493256	0					
ANR	10494112	CastExpression	"( int ) ( ( double ) choice_range * pow ( rand_scaled , bias_power ) )"		10493256	1					
ANR	10494113	CastTarget	int		10493256	0					
ANR	10494114	MultiplicativeExpression	"( double ) choice_range * pow ( rand_scaled , bias_power )"		10493256	1		*			
ANR	10494115	CastExpression	( double ) choice_range		10493256	0					
ANR	10494116	CastTarget	double		10493256	0					
ANR	10494117	Identifier	choice_range		10493256	1					
ANR	10494118	CallExpression	"pow ( rand_scaled , bias_power )"		10493256	1					
ANR	10494119	Callee	pow		10493256	0					
ANR	10494120	Identifier	pow		10493256	0					
ANR	10494121	ArgumentList	rand_scaled		10493256	1					
ANR	10494122	Argument	rand_scaled		10493256	0					
ANR	10494123	Identifier	rand_scaled		10493256	0					
ANR	10494124	Argument	bias_power		10493256	1					
ANR	10494125	Identifier	bias_power		10493256	0					
ANR	10494126	ExpressionStatement	choice_X = Order [ choice ] . X	414:8:14190:14216	10493256	10	True				
ANR	10494127	AssignmentExpression	choice_X = Order [ choice ] . X		10493256	0		=			
ANR	10494128	Identifier	choice_X		10493256	0					
ANR	10494129	MemberAccess	Order [ choice ] . X		10493256	1					
ANR	10494130	ArrayIndexing	Order [ choice ]		10493256	0					
ANR	10494131	Identifier	Order		10493256	0					
ANR	10494132	Identifier	choice		10493256	1					
ANR	10494133	Identifier	X		10493256	1					
ANR	10494134	ExpressionStatement	choice_Y = Order [ choice ] . Y	415:8:14226:14252	10493256	11	True				
ANR	10494135	AssignmentExpression	choice_Y = Order [ choice ] . Y		10493256	0		=			
ANR	10494136	Identifier	choice_Y		10493256	0					
ANR	10494137	MemberAccess	Order [ choice ] . Y		10493256	1					
ANR	10494138	ArrayIndexing	Order [ choice ]		10493256	0					
ANR	10494139	Identifier	Order		10493256	0					
ANR	10494140	Identifier	choice		10493256	1					
ANR	10494141	Identifier	Y		10493256	1					
ANR	10494142	ExpressionStatement	do_min_dot = min_dot_pattern	420:8:14496:14524	10493256	12	True				
ANR	10494143	AssignmentExpression	do_min_dot = min_dot_pattern		10493256	0		=			
ANR	10494144	Identifier	do_min_dot		10493256	0					
ANR	10494145	Identifier	min_dot_pattern		10493256	1					
ANR	10494146	ExpressionStatement	level_up = 1	421:8:14534:14546	10493256	13	True				
ANR	10494147	AssignmentExpression	level_up = 1		10493256	0		=			
ANR	10494148	Identifier	level_up		10493256	0					
ANR	10494149	PrimaryExpression	1		10493256	1					
ANR	10494150	IfStatement	if ( min_dot_pattern != 0 )		10493256	14					
ANR	10494151	Condition	min_dot_pattern != 0	422:12:14621:14640	10493256	0	True				
ANR	10494152	EqualityExpression	min_dot_pattern != 0		10493256	0		!=			
ANR	10494153	Identifier	min_dot_pattern		10493256	0					
ANR	10494154	PrimaryExpression	0		10493256	1					
ANR	10494155	CompoundStatement		171:12:6150:6160	10493256	1					
ANR	10494156	IdentifierDeclStatement	"int row , dot , cX , cY ;"	423:12:14657:14677	10493256	0	True				
ANR	10494157	IdentifierDecl	row		10493256	0					
ANR	10494158	IdentifierDeclType	int		10493256	0					
ANR	10494159	Identifier	row		10493256	1					
ANR	10494160	IdentifierDecl	dot		10493256	1					
ANR	10494161	IdentifierDeclType	int		10493256	0					
ANR	10494162	Identifier	dot		10493256	1					
ANR	10494163	IdentifierDecl	cX		10493256	2					
ANR	10494164	IdentifierDeclType	int		10493256	0					
ANR	10494165	Identifier	cX		10493256	1					
ANR	10494166	IdentifierDecl	cY		10493256	3					
ANR	10494167	IdentifierDeclType	int		10493256	0					
ANR	10494168	Identifier	cY		10493256	1					
ANR	10494169	IdentifierDeclStatement	"int row_direction , dot_direction ;"	424:12:14691:14723	10493256	1	True				
ANR	10494170	IdentifierDecl	row_direction		10493256	0					
ANR	10494171	IdentifierDeclType	int		10493256	0					
ANR	10494172	Identifier	row_direction		10493256	1					
ANR	10494173	IdentifierDecl	dot_direction		10493256	1					
ANR	10494174	IdentifierDeclType	int		10493256	0					
ANR	10494175	Identifier	dot_direction		10493256	1					
ANR	10494176	IdentifierDeclStatement	int userow ;	425:12:14737:14747	10493256	2	True				
ANR	10494177	IdentifierDecl	userow		10493256	0					
ANR	10494178	IdentifierDeclType	int		10493256	0					
ANR	10494179	Identifier	userow		10493256	1					
ANR	10494180	ForStatement	for ( row = - 1 ; row <= min_dot_edges [ min_dot_pattern ] . num_rows ; row ++ )		10493256	3					
ANR	10494181	ForInit	row = - 1 ;	431:17:15095:15101	10493256	0	True				
ANR	10494182	AssignmentExpression	row = - 1		10493256	0		=			
ANR	10494183	Identifier	row		10493256	0					
ANR	10494184	UnaryOperationExpression	- 1		10493256	1					
ANR	10494185	UnaryOperator	-		10493256	0					
ANR	10494186	PrimaryExpression	1		10493256	1					
ANR	10494187	Condition	row <= min_dot_edges [ min_dot_pattern ] . num_rows	431:25:15103:15148	10493256	1	True				
ANR	10494188	RelationalExpression	row <= min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		<=			
ANR	10494189	Identifier	row		10493256	0					
ANR	10494190	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494191	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494192	Identifier	min_dot_edges		10493256	0					
ANR	10494193	Identifier	min_dot_pattern		10493256	1					
ANR	10494194	Identifier	num_rows		10493256	1					
ANR	10494195	PostIncDecOperationExpression	row ++	431:73:15151:15155	10493256	2	True				
ANR	10494196	Identifier	row		10493256	0					
ANR	10494197	IncDec	++		10493256	1					
ANR	10494198	CompoundStatement		177:80:6571:6571	10493256	3					
ANR	10494199	ExpressionStatement	userow = row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1	433:16:15267:15523	10493256	0	True				
ANR	10494200	AssignmentExpression	userow = row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	0		=			
ANR	10494201	Identifier	userow		10493256	0					
ANR	10494202	ConditionalExpression	row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	1					
ANR	10494203	Condition	row < 0		10493256	0					
ANR	10494204	RelationalExpression	row < 0		10493256	0		<			
ANR	10494205	Identifier	row		10493256	0					
ANR	10494206	PrimaryExpression	0		10493256	1					
ANR	10494207	PrimaryExpression	0		10493256	1					
ANR	10494208	ConditionalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	2					
ANR	10494209	Condition	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0					
ANR	10494210	RelationalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		<			
ANR	10494211	Identifier	row		10493256	0					
ANR	10494212	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494213	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494214	Identifier	min_dot_edges		10493256	0					
ANR	10494215	Identifier	min_dot_pattern		10493256	1					
ANR	10494216	Identifier	num_rows		10493256	1					
ANR	10494217	Identifier	row		10493256	1					
ANR	10494218	AdditiveExpression	row - 1		10493256	2		-			
ANR	10494219	Identifier	row		10493256	0					
ANR	10494220	PrimaryExpression	1		10493256	1					
ANR	10494221	ExpressionStatement	cY = ( choice_Y + row + array_height ) % array_height	437:16:15578:15629	10493256	1	True				
ANR	10494222	AssignmentExpression	cY = ( choice_Y + row + array_height ) % array_height		10493256	0		=			
ANR	10494223	Identifier	cY		10493256	0					
ANR	10494224	MultiplicativeExpression	( choice_Y + row + array_height ) % array_height		10493256	1		%			
ANR	10494225	AdditiveExpression	choice_Y + row + array_height		10493256	0		+			
ANR	10494226	Identifier	choice_Y		10493256	0					
ANR	10494227	AdditiveExpression	row + array_height		10493256	1		+			
ANR	10494228	Identifier	row		10493256	0					
ANR	10494229	Identifier	array_height		10493256	1					
ANR	10494230	Identifier	array_height		10493256	1					
ANR	10494231	ForStatement	for ( dot = min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1 ; dot <= min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1 ; dot ++ )		10493256	2					
ANR	10494232	ForInit	dot = min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1 ;	438:21:15652:15703	10493256	0	True				
ANR	10494233	AssignmentExpression	dot = min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1		10493256	0		=			
ANR	10494234	Identifier	dot		10493256	0					
ANR	10494235	AdditiveExpression	min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1		10493256	1		-			
ANR	10494236	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . left [ userow ]		10493256	0					
ANR	10494237	MemberAccess	min_dot_edges [ min_dot_pattern ] . left		10493256	0					
ANR	10494238	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494239	Identifier	min_dot_edges		10493256	0					
ANR	10494240	Identifier	min_dot_pattern		10493256	1					
ANR	10494241	Identifier	left		10493256	1					
ANR	10494242	Identifier	userow		10493256	1					
ANR	10494243	PrimaryExpression	1		10493256	1					
ANR	10494244	Condition	dot <= min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1	439:24:15729:15783	10493256	1	True				
ANR	10494245	RelationalExpression	dot <= min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	0		<=			
ANR	10494246	Identifier	dot		10493256	0					
ANR	10494247	AdditiveExpression	min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	1		+			
ANR	10494248	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . right [ userow ]		10493256	0					
ANR	10494249	MemberAccess	min_dot_edges [ min_dot_pattern ] . right		10493256	0					
ANR	10494250	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494251	Identifier	min_dot_edges		10493256	0					
ANR	10494252	Identifier	min_dot_pattern		10493256	1					
ANR	10494253	Identifier	right		10493256	1					
ANR	10494254	Identifier	userow		10493256	1					
ANR	10494255	PrimaryExpression	1		10493256	1					
ANR	10494256	PostIncDecOperationExpression	dot ++	439:81:15786:15790	10493256	2	True				
ANR	10494257	Identifier	dot		10493256	0					
ANR	10494258	IncDec	++		10493256	1					
ANR	10494259	CompoundStatement		185:88:7206:7206	10493256	3					
ANR	10494260	ExpressionStatement	cX = ( choice_X + dot + array_height ) % array_width	440:20:15815:15865	10493256	0	True				
ANR	10494261	AssignmentExpression	cX = ( choice_X + dot + array_height ) % array_width		10493256	0		=			
ANR	10494262	Identifier	cX		10493256	0					
ANR	10494263	MultiplicativeExpression	( choice_X + dot + array_height ) % array_width		10493256	1		%			
ANR	10494264	AdditiveExpression	choice_X + dot + array_height		10493256	0		+			
ANR	10494265	Identifier	choice_X		10493256	0					
ANR	10494266	AdditiveExpression	dot + array_height		10493256	1		+			
ANR	10494267	Identifier	dot		10493256	0					
ANR	10494268	Identifier	array_height		10493256	1					
ANR	10494269	Identifier	array_width		10493256	1					
ANR	10494270	IfStatement	if ( ThresholdArray [ cX ] [ cY ] != - 1 )		10493256	1					
ANR	10494271	Condition	ThresholdArray [ cX ] [ cY ] != - 1	441:24:15891:15918	10493256	0	True				
ANR	10494272	EqualityExpression	ThresholdArray [ cX ] [ cY ] != - 1		10493256	0		!=			
ANR	10494273	ArrayIndexing	ThresholdArray [ cX ] [ cY ]		10493256	0					
ANR	10494274	ArrayIndexing	ThresholdArray [ cX ]		10493256	0					
ANR	10494275	Identifier	ThresholdArray		10493256	0					
ANR	10494276	Identifier	cX		10493256	1					
ANR	10494277	Identifier	cY		10493256	1					
ANR	10494278	UnaryOperationExpression	- 1		10493256	1					
ANR	10494279	UnaryOperator	-		10493256	0					
ANR	10494280	PrimaryExpression	1		10493256	1					
ANR	10494281	GotoStatement	goto find_neighbor ;	442:24:15945:15963	10493256	1	True				
ANR	10494282	Identifier	find_neighbor		10493256	0					
ANR	10494283	GotoStatement	goto do_dot ;	445:12:16009:16020	10493256	4	True				
ANR	10494284	Identifier	do_dot		10493256	0					
ANR	10494285	Label	find_neighbor :	447:0:16068:16081	10493256	5	True				
ANR	10494286	Identifier	find_neighbor		10493256	0					
ANR	10494287	ExpressionStatement	do_min_dot = 0	450:12:16239:16253	10493256	6	True				
ANR	10494288	AssignmentExpression	do_min_dot = 0		10493256	0		=			
ANR	10494289	Identifier	do_min_dot		10493256	0					
ANR	10494290	PrimaryExpression	0		10493256	1					
ANR	10494291	IfStatement	if ( ! quiet )		10493256	7					
ANR	10494292	Condition	! quiet	451:16:16299:16304	10493256	0	True				
ANR	10494293	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494294	UnaryOperator	!		10493256	0					
ANR	10494295	Identifier	quiet		10493256	1					
ANR	10494296	ExpressionStatement	"printf ( ""min_dot at [%d, %d] suppressed due to neighbor dot at: [%d, %d]\\n"" , choice_X , choice_Y , cX , cY )"	452:16:16323:16442	10493256	1	True				
ANR	10494297	CallExpression	"printf ( ""min_dot at [%d, %d] suppressed due to neighbor dot at: [%d, %d]\\n"" , choice_X , choice_Y , cX , cY )"		10493256	0					
ANR	10494298	Callee	printf		10493256	0					
ANR	10494299	Identifier	printf		10493256	0					
ANR	10494300	ArgumentList	"""min_dot at [%d, %d] suppressed due to neighbor dot at: [%d, %d]\\n"""		10493256	1					
ANR	10494301	Argument	"""min_dot at [%d, %d] suppressed due to neighbor dot at: [%d, %d]\\n"""		10493256	0					
ANR	10494302	PrimaryExpression	"""min_dot at [%d, %d] suppressed due to neighbor dot at: [%d, %d]\\n"""		10493256	0					
ANR	10494303	Argument	choice_X		10493256	1					
ANR	10494304	Identifier	choice_X		10493256	0					
ANR	10494305	Argument	choice_Y		10493256	2					
ANR	10494306	Identifier	choice_Y		10493256	0					
ANR	10494307	Argument	cX		10493256	3					
ANR	10494308	Identifier	cX		10493256	0					
ANR	10494309	Argument	cY		10493256	4					
ANR	10494310	Identifier	cY		10493256	0					
ANR	10494311	IfStatement	if ( row < min_dot_edges [ min_dot_pattern ] . num_rows >> 1 )		10493256	8					
ANR	10494312	Condition	row < min_dot_edges [ min_dot_pattern ] . num_rows >> 1	456:16:16624:16673	10493256	0	True				
ANR	10494313	RelationalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows >> 1		10493256	0		<			
ANR	10494314	Identifier	row		10493256	0					
ANR	10494315	ShiftExpression	min_dot_edges [ min_dot_pattern ] . num_rows >> 1		10493256	1		>>			
ANR	10494316	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0					
ANR	10494317	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494318	Identifier	min_dot_edges		10493256	0					
ANR	10494319	Identifier	min_dot_pattern		10493256	1					
ANR	10494320	Identifier	num_rows		10493256	1					
ANR	10494321	PrimaryExpression	1		10493256	1					
ANR	10494322	ExpressionStatement	row_direction = 1	457:16:16692:16709	10493256	1	True				
ANR	10494323	AssignmentExpression	row_direction = 1		10493256	0		=			
ANR	10494324	Identifier	row_direction		10493256	0					
ANR	10494325	PrimaryExpression	1		10493256	1					
ANR	10494326	ElseStatement	else		10493256	0					
ANR	10494327	ExpressionStatement	row_direction = - 1	459:16:16785:16803	10493256	0	True				
ANR	10494328	AssignmentExpression	row_direction = - 1		10493256	0		=			
ANR	10494329	Identifier	row_direction		10493256	0					
ANR	10494330	UnaryOperationExpression	- 1		10493256	1					
ANR	10494331	UnaryOperator	-		10493256	0					
ANR	10494332	PrimaryExpression	1		10493256	1					
ANR	10494333	IfStatement	if ( dot < min_dot_edges [ min_dot_pattern ] . right [ userow ] >> 1 )		10493256	9					
ANR	10494334	Condition	dot < min_dot_edges [ min_dot_pattern ] . right [ userow ] >> 1	460:16:16852:16906	10493256	0	True				
ANR	10494335	RelationalExpression	dot < min_dot_edges [ min_dot_pattern ] . right [ userow ] >> 1		10493256	0		<			
ANR	10494336	Identifier	dot		10493256	0					
ANR	10494337	ShiftExpression	min_dot_edges [ min_dot_pattern ] . right [ userow ] >> 1		10493256	1		>>			
ANR	10494338	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . right [ userow ]		10493256	0					
ANR	10494339	MemberAccess	min_dot_edges [ min_dot_pattern ] . right		10493256	0					
ANR	10494340	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494341	Identifier	min_dot_edges		10493256	0					
ANR	10494342	Identifier	min_dot_pattern		10493256	1					
ANR	10494343	Identifier	right		10493256	1					
ANR	10494344	Identifier	userow		10493256	1					
ANR	10494345	PrimaryExpression	1		10493256	1					
ANR	10494346	ExpressionStatement	dot_direction = 1	461:16:16925:16942	10493256	1	True				
ANR	10494347	AssignmentExpression	dot_direction = 1		10493256	0		=			
ANR	10494348	Identifier	dot_direction		10493256	0					
ANR	10494349	PrimaryExpression	1		10493256	1					
ANR	10494350	ElseStatement	else		10493256	0					
ANR	10494351	ExpressionStatement	dot_direction = - 1	463:16:16995:17013	10493256	0	True				
ANR	10494352	AssignmentExpression	dot_direction = - 1		10493256	0		=			
ANR	10494353	Identifier	dot_direction		10493256	0					
ANR	10494354	UnaryOperationExpression	- 1		10493256	1					
ANR	10494355	UnaryOperator	-		10493256	0					
ANR	10494356	PrimaryExpression	1		10493256	1					
ANR	10494357	IfStatement	if ( ! quiet )		10493256	10					
ANR	10494358	Condition	! quiet	464:16:17048:17053	10493256	0	True				
ANR	10494359	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494360	UnaryOperator	!		10493256	0					
ANR	10494361	Identifier	quiet		10493256	1					
ANR	10494362	ExpressionStatement	"printf ( ""searching for unmarked dot %s and to the %s\\n"" , row_direction < 0 ? ""above"" : ""below"" , dot_direction < 0 ? ""left"" : ""right"" )"	465:16:17072:17242	10493256	1	True				
ANR	10494363	CallExpression	"printf ( ""searching for unmarked dot %s and to the %s\\n"" , row_direction < 0 ? ""above"" : ""below"" , dot_direction < 0 ? ""left"" : ""right"" )"		10493256	0					
ANR	10494364	Callee	printf		10493256	0					
ANR	10494365	Identifier	printf		10493256	0					
ANR	10494366	ArgumentList	"""searching for unmarked dot %s and to the %s\\n"""		10493256	1					
ANR	10494367	Argument	"""searching for unmarked dot %s and to the %s\\n"""		10493256	0					
ANR	10494368	PrimaryExpression	"""searching for unmarked dot %s and to the %s\\n"""		10493256	0					
ANR	10494369	Argument	"row_direction < 0 ? ""above"" : ""below"""		10493256	1					
ANR	10494370	ConditionalExpression	"row_direction < 0 ? ""above"" : ""below"""		10493256	0					
ANR	10494371	Condition	row_direction < 0		10493256	0					
ANR	10494372	RelationalExpression	row_direction < 0		10493256	0		<			
ANR	10494373	Identifier	row_direction		10493256	0					
ANR	10494374	PrimaryExpression	0		10493256	1					
ANR	10494375	PrimaryExpression	"""above"""		10493256	1					
ANR	10494376	PrimaryExpression	"""below"""		10493256	2					
ANR	10494377	Argument	"dot_direction < 0 ? ""left"" : ""right"""		10493256	2					
ANR	10494378	ConditionalExpression	"dot_direction < 0 ? ""left"" : ""right"""		10493256	0					
ANR	10494379	Condition	dot_direction < 0		10493256	0					
ANR	10494380	RelationalExpression	dot_direction < 0		10493256	0		<			
ANR	10494381	Identifier	dot_direction		10493256	0					
ANR	10494382	PrimaryExpression	0		10493256	1					
ANR	10494383	PrimaryExpression	"""left"""		10493256	1					
ANR	10494384	PrimaryExpression	"""right"""		10493256	2					
ANR	10494385	IfStatement	if ( ( choice_X & 1 ) == 0 )		10493256	11					
ANR	10494386	Condition	( choice_X & 1 ) == 0	468:16:17260:17278	10493256	0	True				
ANR	10494387	EqualityExpression	( choice_X & 1 ) == 0		10493256	0		==			
ANR	10494388	BitAndExpression	choice_X & 1		10493256	0		&			
ANR	10494389	Identifier	choice_X		10493256	0					
ANR	10494390	PrimaryExpression	1		10493256	1					
ANR	10494391	PrimaryExpression	0		10493256	1					
ANR	10494392	CompoundStatement		214:37:8694:8694	10493256	1					
ANR	10494393	ForStatement	for ( ; ( row >= - 1 ) && ( row <= min_dot_edges [ min_dot_pattern ] . num_rows ) ; row += row_direction )		10493256	0					
ANR	10494394	Condition	( row >= - 1 ) && ( row <= min_dot_edges [ min_dot_pattern ] . num_rows )	470:23:17358:17420	10493256	0	True				
ANR	10494395	AndExpression	( row >= - 1 ) && ( row <= min_dot_edges [ min_dot_pattern ] . num_rows )		10493256	0		&&			
ANR	10494396	RelationalExpression	row >= - 1		10493256	0		>=			
ANR	10494397	Identifier	row		10493256	0					
ANR	10494398	UnaryOperationExpression	- 1		10493256	1					
ANR	10494399	UnaryOperator	-		10493256	0					
ANR	10494400	PrimaryExpression	1		10493256	1					
ANR	10494401	RelationalExpression	row <= min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1		<=			
ANR	10494402	Identifier	row		10493256	0					
ANR	10494403	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494404	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494405	Identifier	min_dot_edges		10493256	0					
ANR	10494406	Identifier	min_dot_pattern		10493256	1					
ANR	10494407	Identifier	num_rows		10493256	1					
ANR	10494408	AssignmentExpression	row += row_direction	471:21:17444:17463	10493256	1	True	+=			
ANR	10494409	Identifier	row		10493256	0					
ANR	10494410	Identifier	row_direction		10493256	1					
ANR	10494411	CompoundStatement		217:43:8879:8879	10493256	2					
ANR	10494412	ExpressionStatement	userow = row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1	472:19:17487:17748	10493256	0	True				
ANR	10494413	AssignmentExpression	userow = row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	0		=			
ANR	10494414	Identifier	userow		10493256	0					
ANR	10494415	ConditionalExpression	row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	1					
ANR	10494416	Condition	row < 0		10493256	0					
ANR	10494417	RelationalExpression	row < 0		10493256	0		<			
ANR	10494418	Identifier	row		10493256	0					
ANR	10494419	PrimaryExpression	0		10493256	1					
ANR	10494420	PrimaryExpression	0		10493256	1					
ANR	10494421	ConditionalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	2					
ANR	10494422	Condition	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0					
ANR	10494423	RelationalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		<			
ANR	10494424	Identifier	row		10493256	0					
ANR	10494425	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494426	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494427	Identifier	min_dot_edges		10493256	0					
ANR	10494428	Identifier	min_dot_pattern		10493256	1					
ANR	10494429	Identifier	num_rows		10493256	1					
ANR	10494430	Identifier	row		10493256	1					
ANR	10494431	AdditiveExpression	row - 1		10493256	2		-			
ANR	10494432	Identifier	row		10493256	0					
ANR	10494433	PrimaryExpression	1		10493256	1					
ANR	10494434	ExpressionStatement	cY = ( choice_Y + row + array_height ) % array_height	476:19:17806:17857	10493256	1	True				
ANR	10494435	AssignmentExpression	cY = ( choice_Y + row + array_height ) % array_height		10493256	0		=			
ANR	10494436	Identifier	cY		10493256	0					
ANR	10494437	MultiplicativeExpression	( choice_Y + row + array_height ) % array_height		10493256	1		%			
ANR	10494438	AdditiveExpression	choice_Y + row + array_height		10493256	0		+			
ANR	10494439	Identifier	choice_Y		10493256	0					
ANR	10494440	AdditiveExpression	row + array_height		10493256	1		+			
ANR	10494441	Identifier	row		10493256	0					
ANR	10494442	Identifier	array_height		10493256	1					
ANR	10494443	Identifier	array_height		10493256	1					
ANR	10494444	ExpressionStatement	dot = dot_direction > 0 ? min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1 : min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1	477:19:17878:18047	10493256	2	True				
ANR	10494445	AssignmentExpression	dot = dot_direction > 0 ? min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1 : min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	0		=			
ANR	10494446	Identifier	dot		10493256	0					
ANR	10494447	ConditionalExpression	dot_direction > 0 ? min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1 : min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	1					
ANR	10494448	Condition	dot_direction > 0		10493256	0					
ANR	10494449	RelationalExpression	dot_direction > 0		10493256	0		>			
ANR	10494450	Identifier	dot_direction		10493256	0					
ANR	10494451	PrimaryExpression	0		10493256	1					
ANR	10494452	AdditiveExpression	min_dot_edges [ min_dot_pattern ] . left [ userow ] - 1		10493256	1		-			
ANR	10494453	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . left [ userow ]		10493256	0					
ANR	10494454	MemberAccess	min_dot_edges [ min_dot_pattern ] . left		10493256	0					
ANR	10494455	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494456	Identifier	min_dot_edges		10493256	0					
ANR	10494457	Identifier	min_dot_pattern		10493256	1					
ANR	10494458	Identifier	left		10493256	1					
ANR	10494459	Identifier	userow		10493256	1					
ANR	10494460	PrimaryExpression	1		10493256	1					
ANR	10494461	AdditiveExpression	min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	2		+			
ANR	10494462	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . right [ userow ]		10493256	0					
ANR	10494463	MemberAccess	min_dot_edges [ min_dot_pattern ] . right		10493256	0					
ANR	10494464	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494465	Identifier	min_dot_edges		10493256	0					
ANR	10494466	Identifier	min_dot_pattern		10493256	1					
ANR	10494467	Identifier	right		10493256	1					
ANR	10494468	Identifier	userow		10493256	1					
ANR	10494469	PrimaryExpression	1		10493256	1					
ANR	10494470	ForStatement	for ( ; ( dot >= - 1 ) && ( dot <= min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1 ) ; dot += dot_direction )		10493256	3					
ANR	10494471	Condition	( dot >= - 1 ) && ( dot <= min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1 )	479:26:18075:18146	10493256	0	True				
ANR	10494472	AndExpression	( dot >= - 1 ) && ( dot <= min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1 )		10493256	0		&&			
ANR	10494473	RelationalExpression	dot >= - 1		10493256	0		>=			
ANR	10494474	Identifier	dot		10493256	0					
ANR	10494475	UnaryOperationExpression	- 1		10493256	1					
ANR	10494476	UnaryOperator	-		10493256	0					
ANR	10494477	PrimaryExpression	1		10493256	1					
ANR	10494478	RelationalExpression	dot <= min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	1		<=			
ANR	10494479	Identifier	dot		10493256	0					
ANR	10494480	AdditiveExpression	min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	1		+			
ANR	10494481	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . right [ userow ]		10493256	0					
ANR	10494482	MemberAccess	min_dot_edges [ min_dot_pattern ] . right		10493256	0					
ANR	10494483	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494484	Identifier	min_dot_edges		10493256	0					
ANR	10494485	Identifier	min_dot_pattern		10493256	1					
ANR	10494486	Identifier	right		10493256	1					
ANR	10494487	Identifier	userow		10493256	1					
ANR	10494488	PrimaryExpression	1		10493256	1					
ANR	10494489	AssignmentExpression	dot += dot_direction	480:27:18176:18195	10493256	1	True	+=			
ANR	10494490	Identifier	dot		10493256	0					
ANR	10494491	Identifier	dot_direction		10493256	1					
ANR	10494492	CompoundStatement		226:49:9611:9611	10493256	2					
ANR	10494493	ExpressionStatement	cX = ( choice_X + dot + array_height ) % array_width	481:24:18224:18274	10493256	0	True				
ANR	10494494	AssignmentExpression	cX = ( choice_X + dot + array_height ) % array_width		10493256	0		=			
ANR	10494495	Identifier	cX		10493256	0					
ANR	10494496	MultiplicativeExpression	( choice_X + dot + array_height ) % array_width		10493256	1		%			
ANR	10494497	AdditiveExpression	choice_X + dot + array_height		10493256	0		+			
ANR	10494498	Identifier	choice_X		10493256	0					
ANR	10494499	AdditiveExpression	dot + array_height		10493256	1		+			
ANR	10494500	Identifier	dot		10493256	0					
ANR	10494501	Identifier	array_height		10493256	1					
ANR	10494502	Identifier	array_width		10493256	1					
ANR	10494503	IfStatement	if ( ! quiet )		10493256	1					
ANR	10494504	Condition	! quiet	482:28:18304:18309	10493256	0	True				
ANR	10494505	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494506	UnaryOperator	!		10493256	0					
ANR	10494507	Identifier	quiet		10493256	1					
ANR	10494508	ExpressionStatement	"printf ( ""dot at %d, %d is %s\\n"" , cX , cY , ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"" )"	483:28:18340:18468	10493256	1	True				
ANR	10494509	CallExpression	"printf ( ""dot at %d, %d is %s\\n"" , cX , cY , ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"" )"		10493256	0					
ANR	10494510	Callee	printf		10493256	0					
ANR	10494511	Identifier	printf		10493256	0					
ANR	10494512	ArgumentList	"""dot at %d, %d is %s\\n"""		10493256	1					
ANR	10494513	Argument	"""dot at %d, %d is %s\\n"""		10493256	0					
ANR	10494514	PrimaryExpression	"""dot at %d, %d is %s\\n"""		10493256	0					
ANR	10494515	Argument	cX		10493256	1					
ANR	10494516	Identifier	cX		10493256	0					
ANR	10494517	Argument	cY		10493256	2					
ANR	10494518	Identifier	cY		10493256	0					
ANR	10494519	Argument	"ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"""		10493256	3					
ANR	10494520	ConditionalExpression	"ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"""		10493256	0					
ANR	10494521	Condition	ThresholdArray [ cX ] [ cY ] == - 1		10493256	0					
ANR	10494522	EqualityExpression	ThresholdArray [ cX ] [ cY ] == - 1		10493256	0		==			
ANR	10494523	ArrayIndexing	ThresholdArray [ cX ] [ cY ]		10493256	0					
ANR	10494524	ArrayIndexing	ThresholdArray [ cX ]		10493256	0					
ANR	10494525	Identifier	ThresholdArray		10493256	0					
ANR	10494526	Identifier	cX		10493256	1					
ANR	10494527	Identifier	cY		10493256	1					
ANR	10494528	UnaryOperationExpression	- 1		10493256	1					
ANR	10494529	UnaryOperator	-		10493256	0					
ANR	10494530	PrimaryExpression	1		10493256	1					
ANR	10494531	PrimaryExpression	"""unmarked"""		10493256	1					
ANR	10494532	PrimaryExpression	"""marked"""		10493256	2					
ANR	10494533	IfStatement	if ( ThresholdArray [ cX ] [ cY ] == - 1 )		10493256	2					
ANR	10494534	Condition	ThresholdArray [ cX ] [ cY ] == - 1	485:28:18498:18525	10493256	0	True				
ANR	10494535	EqualityExpression	ThresholdArray [ cX ] [ cY ] == - 1		10493256	0		==			
ANR	10494536	ArrayIndexing	ThresholdArray [ cX ] [ cY ]		10493256	0					
ANR	10494537	ArrayIndexing	ThresholdArray [ cX ]		10493256	0					
ANR	10494538	Identifier	ThresholdArray		10493256	0					
ANR	10494539	Identifier	cX		10493256	1					
ANR	10494540	Identifier	cY		10493256	1					
ANR	10494541	UnaryOperationExpression	- 1		10493256	1					
ANR	10494542	UnaryOperator	-		10493256	0					
ANR	10494543	PrimaryExpression	1		10493256	1					
ANR	10494544	CompoundStatement		231:58:9941:9941	10493256	1					
ANR	10494545	ExpressionStatement	choice_X = cX	486:28:18558:18571	10493256	0	True				
ANR	10494546	AssignmentExpression	choice_X = cX		10493256	0		=			
ANR	10494547	Identifier	choice_X		10493256	0					
ANR	10494548	Identifier	cX		10493256	1					
ANR	10494549	ExpressionStatement	choice_Y = cY	487:28:18601:18614	10493256	1	True				
ANR	10494550	AssignmentExpression	choice_Y = cY		10493256	0		=			
ANR	10494551	Identifier	choice_Y		10493256	0					
ANR	10494552	Identifier	cY		10493256	1					
ANR	10494553	GotoStatement	goto do_dot ;	488:28:18644:18655	10493256	2	True				
ANR	10494554	Identifier	do_dot		10493256	0					
ANR	10494555	ElseStatement	else		10493256	0					
ANR	10494556	CompoundStatement		238:19:10155:10155	10493256	0					
ANR	10494557	ForStatement	for ( dot = dot_direction > 0 ? - 1 : 3 ; dot >= - 1 && dot <= 3 ; dot += dot_direction )		10493256	0					
ANR	10494558	ForInit	dot = dot_direction > 0 ? - 1 : 3 ;	494:21:18813:18845	10493256	0	True				
ANR	10494559	AssignmentExpression	dot = dot_direction > 0 ? - 1 : 3		10493256	0		=			
ANR	10494560	Identifier	dot		10493256	0					
ANR	10494561	ConditionalExpression	dot_direction > 0 ? - 1 : 3		10493256	1					
ANR	10494562	Condition	dot_direction > 0		10493256	0					
ANR	10494563	RelationalExpression	dot_direction > 0		10493256	0		>			
ANR	10494564	Identifier	dot_direction		10493256	0					
ANR	10494565	PrimaryExpression	0		10493256	1					
ANR	10494566	UnaryOperationExpression	- 1		10493256	1					
ANR	10494567	UnaryOperator	-		10493256	0					
ANR	10494568	PrimaryExpression	1		10493256	1					
ANR	10494569	PrimaryExpression	3		10493256	2					
ANR	10494570	Condition	dot >= - 1 && dot <= 3	495:25:18872:18892	10493256	1	True				
ANR	10494571	AndExpression	dot >= - 1 && dot <= 3		10493256	0		&&			
ANR	10494572	RelationalExpression	dot >= - 1		10493256	0		>=			
ANR	10494573	Identifier	dot		10493256	0					
ANR	10494574	UnaryOperationExpression	- 1		10493256	1					
ANR	10494575	UnaryOperator	-		10493256	0					
ANR	10494576	PrimaryExpression	1		10493256	1					
ANR	10494577	RelationalExpression	dot <= 3		10493256	1		<=			
ANR	10494578	Identifier	dot		10493256	0					
ANR	10494579	PrimaryExpression	3		10493256	1					
ANR	10494580	AssignmentExpression	dot += dot_direction	496:25:18920:18939	10493256	2	True	+=			
ANR	10494581	Identifier	dot		10493256	0					
ANR	10494582	Identifier	dot_direction		10493256	1					
ANR	10494583	CompoundStatement		242:47:10355:10355	10493256	3					
ANR	10494584	ForStatement	for ( row = row_direction > 0 ? - 1 : min_dot_edges [ min_dot_pattern ] . num_rows ; ( row <= min_dot_edges [ min_dot_pattern ] . num_rows ) ; row += row_direction )		10493256	0					
ANR	10494585	ForInit	row = row_direction > 0 ? - 1 : min_dot_edges [ min_dot_pattern ] . num_rows ;	498:25:19024:19094	10493256	0	True				
ANR	10494586	AssignmentExpression	row = row_direction > 0 ? - 1 : min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		=			
ANR	10494587	Identifier	row		10493256	0					
ANR	10494588	ConditionalExpression	row_direction > 0 ? - 1 : min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494589	Condition	row_direction > 0		10493256	0					
ANR	10494590	RelationalExpression	row_direction > 0		10493256	0		>			
ANR	10494591	Identifier	row_direction		10493256	0					
ANR	10494592	PrimaryExpression	0		10493256	1					
ANR	10494593	UnaryOperationExpression	- 1		10493256	1					
ANR	10494594	UnaryOperator	-		10493256	0					
ANR	10494595	PrimaryExpression	1		10493256	1					
ANR	10494596	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	2					
ANR	10494597	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494598	Identifier	min_dot_edges		10493256	0					
ANR	10494599	Identifier	min_dot_pattern		10493256	1					
ANR	10494600	Identifier	num_rows		10493256	1					
ANR	10494601	Condition	row <= min_dot_edges [ min_dot_pattern ] . num_rows	499:27:19123:19170	10493256	1	True				
ANR	10494602	RelationalExpression	row <= min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		<=			
ANR	10494603	Identifier	row		10493256	0					
ANR	10494604	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494605	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494606	Identifier	min_dot_edges		10493256	0					
ANR	10494607	Identifier	min_dot_pattern		10493256	1					
ANR	10494608	Identifier	num_rows		10493256	1					
ANR	10494609	AssignmentExpression	row += row_direction	500:27:19200:19219	10493256	2	True	+=			
ANR	10494610	Identifier	row		10493256	0					
ANR	10494611	Identifier	row_direction		10493256	1					
ANR	10494612	CompoundStatement		246:49:10635:10635	10493256	3					
ANR	10494613	ExpressionStatement	userow = row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1	501:24:19248:19525	10493256	0	True				
ANR	10494614	AssignmentExpression	userow = row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	0		=			
ANR	10494615	Identifier	userow		10493256	0					
ANR	10494616	ConditionalExpression	row < 0 ? 0 : row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	1					
ANR	10494617	Condition	row < 0		10493256	0					
ANR	10494618	RelationalExpression	row < 0		10493256	0		<			
ANR	10494619	Identifier	row		10493256	0					
ANR	10494620	PrimaryExpression	0		10493256	1					
ANR	10494621	PrimaryExpression	0		10493256	1					
ANR	10494622	ConditionalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows ? row : row - 1		10493256	2					
ANR	10494623	Condition	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0					
ANR	10494624	RelationalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		<			
ANR	10494625	Identifier	row		10493256	0					
ANR	10494626	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494627	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494628	Identifier	min_dot_edges		10493256	0					
ANR	10494629	Identifier	min_dot_pattern		10493256	1					
ANR	10494630	Identifier	num_rows		10493256	1					
ANR	10494631	Identifier	row		10493256	1					
ANR	10494632	AdditiveExpression	row - 1		10493256	2		-			
ANR	10494633	Identifier	row		10493256	0					
ANR	10494634	PrimaryExpression	1		10493256	1					
ANR	10494635	ExpressionStatement	cY = ( choice_Y + row + array_height ) % array_height	505:24:19588:19639	10493256	1	True				
ANR	10494636	AssignmentExpression	cY = ( choice_Y + row + array_height ) % array_height		10493256	0		=			
ANR	10494637	Identifier	cY		10493256	0					
ANR	10494638	MultiplicativeExpression	( choice_Y + row + array_height ) % array_height		10493256	1		%			
ANR	10494639	AdditiveExpression	choice_Y + row + array_height		10493256	0		+			
ANR	10494640	Identifier	choice_Y		10493256	0					
ANR	10494641	AdditiveExpression	row + array_height		10493256	1		+			
ANR	10494642	Identifier	row		10493256	0					
ANR	10494643	Identifier	array_height		10493256	1					
ANR	10494644	Identifier	array_height		10493256	1					
ANR	10494645	IfStatement	if ( dot > min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1 )		10493256	2					
ANR	10494646	Condition	dot > min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1	506:28:19669:19722	10493256	0	True				
ANR	10494647	RelationalExpression	dot > min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	0		>			
ANR	10494648	Identifier	dot		10493256	0					
ANR	10494649	AdditiveExpression	min_dot_edges [ min_dot_pattern ] . right [ userow ] + 1		10493256	1		+			
ANR	10494650	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . right [ userow ]		10493256	0					
ANR	10494651	MemberAccess	min_dot_edges [ min_dot_pattern ] . right		10493256	0					
ANR	10494652	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494653	Identifier	min_dot_edges		10493256	0					
ANR	10494654	Identifier	min_dot_pattern		10493256	1					
ANR	10494655	Identifier	right		10493256	1					
ANR	10494656	Identifier	userow		10493256	1					
ANR	10494657	PrimaryExpression	1		10493256	1					
ANR	10494658	BreakStatement	break ;	507:32:19757:19762	10493256	1	True				
ANR	10494659	ExpressionStatement	cX = ( choice_X + dot + array_height ) % array_width	508:24:19823:19873	10493256	3	True				
ANR	10494660	AssignmentExpression	cX = ( choice_X + dot + array_height ) % array_width		10493256	0		=			
ANR	10494661	Identifier	cX		10493256	0					
ANR	10494662	MultiplicativeExpression	( choice_X + dot + array_height ) % array_width		10493256	1		%			
ANR	10494663	AdditiveExpression	choice_X + dot + array_height		10493256	0		+			
ANR	10494664	Identifier	choice_X		10493256	0					
ANR	10494665	AdditiveExpression	dot + array_height		10493256	1		+			
ANR	10494666	Identifier	dot		10493256	0					
ANR	10494667	Identifier	array_height		10493256	1					
ANR	10494668	Identifier	array_width		10493256	1					
ANR	10494669	IfStatement	if ( ! quiet )		10493256	4					
ANR	10494670	Condition	! quiet	509:28:19903:19908	10493256	0	True				
ANR	10494671	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494672	UnaryOperator	!		10493256	0					
ANR	10494673	Identifier	quiet		10493256	1					
ANR	10494674	ExpressionStatement	"printf ( ""dot at %d, %d is %s\\n"" , cX , cY , ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"" )"	510:29:19940:20069	10493256	1	True				
ANR	10494675	CallExpression	"printf ( ""dot at %d, %d is %s\\n"" , cX , cY , ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"" )"		10493256	0					
ANR	10494676	Callee	printf		10493256	0					
ANR	10494677	Identifier	printf		10493256	0					
ANR	10494678	ArgumentList	"""dot at %d, %d is %s\\n"""		10493256	1					
ANR	10494679	Argument	"""dot at %d, %d is %s\\n"""		10493256	0					
ANR	10494680	PrimaryExpression	"""dot at %d, %d is %s\\n"""		10493256	0					
ANR	10494681	Argument	cX		10493256	1					
ANR	10494682	Identifier	cX		10493256	0					
ANR	10494683	Argument	cY		10493256	2					
ANR	10494684	Identifier	cY		10493256	0					
ANR	10494685	Argument	"ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"""		10493256	3					
ANR	10494686	ConditionalExpression	"ThresholdArray [ cX ] [ cY ] == - 1 ? ""unmarked"" : ""marked"""		10493256	0					
ANR	10494687	Condition	ThresholdArray [ cX ] [ cY ] == - 1		10493256	0					
ANR	10494688	EqualityExpression	ThresholdArray [ cX ] [ cY ] == - 1		10493256	0		==			
ANR	10494689	ArrayIndexing	ThresholdArray [ cX ] [ cY ]		10493256	0					
ANR	10494690	ArrayIndexing	ThresholdArray [ cX ]		10493256	0					
ANR	10494691	Identifier	ThresholdArray		10493256	0					
ANR	10494692	Identifier	cX		10493256	1					
ANR	10494693	Identifier	cY		10493256	1					
ANR	10494694	UnaryOperationExpression	- 1		10493256	1					
ANR	10494695	UnaryOperator	-		10493256	0					
ANR	10494696	PrimaryExpression	1		10493256	1					
ANR	10494697	PrimaryExpression	"""unmarked"""		10493256	1					
ANR	10494698	PrimaryExpression	"""marked"""		10493256	2					
ANR	10494699	IfStatement	if ( ThresholdArray [ cX ] [ cY ] == - 1 )		10493256	5					
ANR	10494700	Condition	ThresholdArray [ cX ] [ cY ] == - 1	512:28:20099:20126	10493256	0	True				
ANR	10494701	EqualityExpression	ThresholdArray [ cX ] [ cY ] == - 1		10493256	0		==			
ANR	10494702	ArrayIndexing	ThresholdArray [ cX ] [ cY ]		10493256	0					
ANR	10494703	ArrayIndexing	ThresholdArray [ cX ]		10493256	0					
ANR	10494704	Identifier	ThresholdArray		10493256	0					
ANR	10494705	Identifier	cX		10493256	1					
ANR	10494706	Identifier	cY		10493256	1					
ANR	10494707	UnaryOperationExpression	- 1		10493256	1					
ANR	10494708	UnaryOperator	-		10493256	0					
ANR	10494709	PrimaryExpression	1		10493256	1					
ANR	10494710	CompoundStatement		258:58:11542:11542	10493256	1					
ANR	10494711	ExpressionStatement	choice_X = cX	513:28:20159:20172	10493256	0	True				
ANR	10494712	AssignmentExpression	choice_X = cX		10493256	0		=			
ANR	10494713	Identifier	choice_X		10493256	0					
ANR	10494714	Identifier	cX		10493256	1					
ANR	10494715	ExpressionStatement	choice_Y = cY	514:28:20202:20215	10493256	1	True				
ANR	10494716	AssignmentExpression	choice_Y = cY		10493256	0		=			
ANR	10494717	Identifier	choice_Y		10493256	0					
ANR	10494718	Identifier	cY		10493256	1					
ANR	10494719	GotoStatement	goto do_dot ;	515:28:20245:20256	10493256	2	True				
ANR	10494720	Identifier	do_dot		10493256	0					
ANR	10494721	ExpressionStatement	"printf ( ""what now?\\n"" )"	520:12:20350:20371	10493256	12	True				
ANR	10494722	CallExpression	"printf ( ""what now?\\n"" )"		10493256	0					
ANR	10494723	Callee	printf		10493256	0					
ANR	10494724	Identifier	printf		10493256	0					
ANR	10494725	ArgumentList	"""what now?\\n"""		10493256	1					
ANR	10494726	Argument	"""what now?\\n"""		10493256	0					
ANR	10494727	PrimaryExpression	"""what now?\\n"""		10493256	0					
ANR	10494728	Label	do_dot :	522:0:20414:20420	10493256	15	True				
ANR	10494729	Identifier	do_dot		10493256	0					
ANR	10494730	IfStatement	if ( ! quiet )		10493256	16					
ANR	10494731	Condition	! quiet	523:12:20434:20439	10493256	0	True				
ANR	10494732	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494733	UnaryOperator	!		10493256	0					
ANR	10494734	Identifier	quiet		10493256	1					
ANR	10494735	ExpressionStatement	"printf ( ""choice: %d, choice_range: %d, do_min_dot: %d\\n"" , choice , choice_range , do_min_dot )"	524:12:20454:20568	10493256	1	True				
ANR	10494736	CallExpression	"printf ( ""choice: %d, choice_range: %d, do_min_dot: %d\\n"" , choice , choice_range , do_min_dot )"		10493256	0					
ANR	10494737	Callee	printf		10493256	0					
ANR	10494738	Identifier	printf		10493256	0					
ANR	10494739	ArgumentList	"""choice: %d, choice_range: %d, do_min_dot: %d\\n"""		10493256	1					
ANR	10494740	Argument	"""choice: %d, choice_range: %d, do_min_dot: %d\\n"""		10493256	0					
ANR	10494741	PrimaryExpression	"""choice: %d, choice_range: %d, do_min_dot: %d\\n"""		10493256	0					
ANR	10494742	Argument	choice		10493256	1					
ANR	10494743	Identifier	choice		10493256	0					
ANR	10494744	Argument	choice_range		10493256	2					
ANR	10494745	Identifier	choice_range		10493256	0					
ANR	10494746	Argument	do_min_dot		10493256	3					
ANR	10494747	Identifier	do_min_dot		10493256	0					
ANR	10494748	IfStatement	if ( ! quiet )		10493256	17					
ANR	10494749	Condition	! quiet	527:12:20742:20747	10493256	0	True				
ANR	10494750	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494751	UnaryOperator	!		10493256	0					
ANR	10494752	Identifier	quiet		10493256	1					
ANR	10494753	ExpressionStatement	"printf ( ""Threshold Level %4d is depth %d, val = %5.3f at (%4d, %4d)\\n"" , level , choice , Val [ ( choice_Y * array_width ) + choice_X ] , choice_X , choice_Y )"	528:12:20762:20935	10493256	1	True				
ANR	10494754	CallExpression	"printf ( ""Threshold Level %4d is depth %d, val = %5.3f at (%4d, %4d)\\n"" , level , choice , Val [ ( choice_Y * array_width ) + choice_X ] , choice_X , choice_Y )"		10493256	0					
ANR	10494755	Callee	printf		10493256	0					
ANR	10494756	Identifier	printf		10493256	0					
ANR	10494757	ArgumentList	"""Threshold Level %4d is depth %d, val = %5.3f at (%4d, %4d)\\n"""		10493256	1					
ANR	10494758	Argument	"""Threshold Level %4d is depth %d, val = %5.3f at (%4d, %4d)\\n"""		10493256	0					
ANR	10494759	PrimaryExpression	"""Threshold Level %4d is depth %d, val = %5.3f at (%4d, %4d)\\n"""		10493256	0					
ANR	10494760	Argument	level		10493256	1					
ANR	10494761	Identifier	level		10493256	0					
ANR	10494762	Argument	choice		10493256	2					
ANR	10494763	Identifier	choice		10493256	0					
ANR	10494764	Argument	Val [ ( choice_Y * array_width ) + choice_X ]		10493256	3					
ANR	10494765	ArrayIndexing	Val [ ( choice_Y * array_width ) + choice_X ]		10493256	0					
ANR	10494766	Identifier	Val		10493256	0					
ANR	10494767	AdditiveExpression	( choice_Y * array_width ) + choice_X		10493256	1		+			
ANR	10494768	MultiplicativeExpression	choice_Y * array_width		10493256	0		*			
ANR	10494769	Identifier	choice_Y		10493256	0					
ANR	10494770	Identifier	array_width		10493256	1					
ANR	10494771	Identifier	choice_X		10493256	1					
ANR	10494772	Argument	choice_X		10493256	4					
ANR	10494773	Identifier	choice_X		10493256	0					
ANR	10494774	Argument	choice_Y		10493256	5					
ANR	10494775	Identifier	choice_Y		10493256	0					
ANR	10494776	IfStatement	if ( do_min_dot != 0 )		10493256	18					
ANR	10494777	Condition	do_min_dot != 0	530:12:20949:20963	10493256	0	True				
ANR	10494778	EqualityExpression	do_min_dot != 0		10493256	0		!=			
ANR	10494779	Identifier	do_min_dot		10493256	0					
ANR	10494780	PrimaryExpression	0		10493256	1					
ANR	10494781	CompoundStatement		277:12:12393:12413	10493256	1					
ANR	10494782	IdentifierDeclStatement	"int row , dot , cX , cY ;"	531:12:20980:21000	10493256	0	True				
ANR	10494783	IdentifierDecl	row		10493256	0					
ANR	10494784	IdentifierDeclType	int		10493256	0					
ANR	10494785	Identifier	row		10493256	1					
ANR	10494786	IdentifierDecl	dot		10493256	1					
ANR	10494787	IdentifierDeclType	int		10493256	0					
ANR	10494788	Identifier	dot		10493256	1					
ANR	10494789	IdentifierDecl	cX		10493256	2					
ANR	10494790	IdentifierDeclType	int		10493256	0					
ANR	10494791	Identifier	cX		10493256	1					
ANR	10494792	IdentifierDecl	cY		10493256	3					
ANR	10494793	IdentifierDeclType	int		10493256	0					
ANR	10494794	Identifier	cY		10493256	1					
ANR	10494795	ForStatement	for ( row = 0 ; row < min_dot_edges [ min_dot_pattern ] . num_rows ; row ++ )		10493256	1					
ANR	10494796	ForInit	row = 0 ;	534:17:21117:21122	10493256	0	True				
ANR	10494797	AssignmentExpression	row = 0		10493256	0		=			
ANR	10494798	Identifier	row		10493256	0					
ANR	10494799	PrimaryExpression	0		10493256	1					
ANR	10494800	Condition	row < min_dot_edges [ min_dot_pattern ] . num_rows	534:24:21124:21168	10493256	1	True				
ANR	10494801	RelationalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		<			
ANR	10494802	Identifier	row		10493256	0					
ANR	10494803	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494804	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494805	Identifier	min_dot_edges		10493256	0					
ANR	10494806	Identifier	min_dot_pattern		10493256	1					
ANR	10494807	Identifier	num_rows		10493256	1					
ANR	10494808	PostIncDecOperationExpression	row ++	534:71:21171:21175	10493256	2	True				
ANR	10494809	Identifier	row		10493256	0					
ANR	10494810	IncDec	++		10493256	1					
ANR	10494811	CompoundStatement		280:78:12591:12591	10493256	3					
ANR	10494812	ExpressionStatement	cY = ( choice_Y + row ) % array_height	535:16:21196:21232	10493256	0	True				
ANR	10494813	AssignmentExpression	cY = ( choice_Y + row ) % array_height		10493256	0		=			
ANR	10494814	Identifier	cY		10493256	0					
ANR	10494815	MultiplicativeExpression	( choice_Y + row ) % array_height		10493256	1		%			
ANR	10494816	AdditiveExpression	choice_Y + row		10493256	0		+			
ANR	10494817	Identifier	choice_Y		10493256	0					
ANR	10494818	Identifier	row		10493256	1					
ANR	10494819	Identifier	array_height		10493256	1					
ANR	10494820	ForStatement	for ( dot = min_dot_edges [ min_dot_pattern ] . left [ row ] ; dot <= min_dot_edges [ min_dot_pattern ] . right [ row ] ; dot ++ )		10493256	1					
ANR	10494821	ForInit	dot = min_dot_edges [ min_dot_pattern ] . left [ row ] ;	536:21:21255:21299	10493256	0	True				
ANR	10494822	AssignmentExpression	dot = min_dot_edges [ min_dot_pattern ] . left [ row ]		10493256	0		=			
ANR	10494823	Identifier	dot		10493256	0					
ANR	10494824	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . left [ row ]		10493256	1					
ANR	10494825	MemberAccess	min_dot_edges [ min_dot_pattern ] . left		10493256	0					
ANR	10494826	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494827	Identifier	min_dot_edges		10493256	0					
ANR	10494828	Identifier	min_dot_pattern		10493256	1					
ANR	10494829	Identifier	left		10493256	1					
ANR	10494830	Identifier	row		10493256	1					
ANR	10494831	Condition	dot <= min_dot_edges [ min_dot_pattern ] . right [ row ]	537:24:21325:21372	10493256	1	True				
ANR	10494832	RelationalExpression	dot <= min_dot_edges [ min_dot_pattern ] . right [ row ]		10493256	0		<=			
ANR	10494833	Identifier	dot		10493256	0					
ANR	10494834	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . right [ row ]		10493256	1					
ANR	10494835	MemberAccess	min_dot_edges [ min_dot_pattern ] . right		10493256	0					
ANR	10494836	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494837	Identifier	min_dot_edges		10493256	0					
ANR	10494838	Identifier	min_dot_pattern		10493256	1					
ANR	10494839	Identifier	right		10493256	1					
ANR	10494840	Identifier	row		10493256	1					
ANR	10494841	PostIncDecOperationExpression	dot ++	537:74:21375:21379	10493256	2	True				
ANR	10494842	Identifier	dot		10493256	0					
ANR	10494843	IncDec	++		10493256	1					
ANR	10494844	CompoundStatement		283:81:12795:12795	10493256	3					
ANR	10494845	ExpressionStatement	cX = ( choice_X + dot ) % array_width	538:20:21404:21439	10493256	0	True				
ANR	10494846	AssignmentExpression	cX = ( choice_X + dot ) % array_width		10493256	0		=			
ANR	10494847	Identifier	cX		10493256	0					
ANR	10494848	MultiplicativeExpression	( choice_X + dot ) % array_width		10493256	1		%			
ANR	10494849	AdditiveExpression	choice_X + dot		10493256	0		+			
ANR	10494850	Identifier	choice_X		10493256	0					
ANR	10494851	Identifier	dot		10493256	1					
ANR	10494852	Identifier	array_width		10493256	1					
ANR	10494853	IfStatement	if ( ( row >= 0 ) || ( dot >= 0 ) )		10493256	1					
ANR	10494854	Condition	( row >= 0 ) || ( dot >= 0 )	539:24:21465:21488	10493256	0	True				
ANR	10494855	OrExpression	( row >= 0 ) || ( dot >= 0 )		10493256	0		||			
ANR	10494856	RelationalExpression	row >= 0		10493256	0		>=			
ANR	10494857	Identifier	row		10493256	0					
ANR	10494858	PrimaryExpression	0		10493256	1					
ANR	10494859	RelationalExpression	dot >= 0		10493256	1		>=			
ANR	10494860	Identifier	dot		10493256	0					
ANR	10494861	PrimaryExpression	0		10493256	1					
ANR	10494862	ExpressionStatement	ThresholdArray [ cX ] [ cY ] = level	540:24:21515:21545	10493256	1	True				
ANR	10494863	AssignmentExpression	ThresholdArray [ cX ] [ cY ] = level		10493256	0		=			
ANR	10494864	ArrayIndexing	ThresholdArray [ cX ] [ cY ]		10493256	0					
ANR	10494865	ArrayIndexing	ThresholdArray [ cX ]		10493256	0					
ANR	10494866	Identifier	ThresholdArray		10493256	0					
ANR	10494867	Identifier	cX		10493256	1					
ANR	10494868	Identifier	cY		10493256	1					
ANR	10494869	Identifier	level		10493256	1					
ANR	10494870	ForStatement	for ( row = 0 ; row < min_dot_edges [ min_dot_pattern ] . num_rows ; row ++ )		10493256	2					
ANR	10494871	ForInit	row = 0 ;	542:17:21595:21600	10493256	0	True				
ANR	10494872	AssignmentExpression	row = 0		10493256	0		=			
ANR	10494873	Identifier	row		10493256	0					
ANR	10494874	PrimaryExpression	0		10493256	1					
ANR	10494875	Condition	row < min_dot_edges [ min_dot_pattern ] . num_rows	542:24:21602:21646	10493256	1	True				
ANR	10494876	RelationalExpression	row < min_dot_edges [ min_dot_pattern ] . num_rows		10493256	0		<			
ANR	10494877	Identifier	row		10493256	0					
ANR	10494878	MemberAccess	min_dot_edges [ min_dot_pattern ] . num_rows		10493256	1					
ANR	10494879	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494880	Identifier	min_dot_edges		10493256	0					
ANR	10494881	Identifier	min_dot_pattern		10493256	1					
ANR	10494882	Identifier	num_rows		10493256	1					
ANR	10494883	PostIncDecOperationExpression	row ++	542:71:21649:21653	10493256	2	True				
ANR	10494884	Identifier	row		10493256	0					
ANR	10494885	IncDec	++		10493256	1					
ANR	10494886	CompoundStatement		288:78:13069:13069	10493256	3					
ANR	10494887	ExpressionStatement	cY = ( choice_Y + row ) % array_height	543:16:21674:21710	10493256	0	True				
ANR	10494888	AssignmentExpression	cY = ( choice_Y + row ) % array_height		10493256	0		=			
ANR	10494889	Identifier	cY		10493256	0					
ANR	10494890	MultiplicativeExpression	( choice_Y + row ) % array_height		10493256	1		%			
ANR	10494891	AdditiveExpression	choice_Y + row		10493256	0		+			
ANR	10494892	Identifier	choice_Y		10493256	0					
ANR	10494893	Identifier	row		10493256	1					
ANR	10494894	Identifier	array_height		10493256	1					
ANR	10494895	ForStatement	for ( dot = min_dot_edges [ min_dot_pattern ] . left [ row ] ; dot <= min_dot_edges [ min_dot_pattern ] . right [ row ] ; dot ++ )		10493256	1					
ANR	10494896	ForInit	dot = min_dot_edges [ min_dot_pattern ] . left [ row ] ;	544:21:21733:21777	10493256	0	True				
ANR	10494897	AssignmentExpression	dot = min_dot_edges [ min_dot_pattern ] . left [ row ]		10493256	0		=			
ANR	10494898	Identifier	dot		10493256	0					
ANR	10494899	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . left [ row ]		10493256	1					
ANR	10494900	MemberAccess	min_dot_edges [ min_dot_pattern ] . left		10493256	0					
ANR	10494901	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494902	Identifier	min_dot_edges		10493256	0					
ANR	10494903	Identifier	min_dot_pattern		10493256	1					
ANR	10494904	Identifier	left		10493256	1					
ANR	10494905	Identifier	row		10493256	1					
ANR	10494906	Condition	dot <= min_dot_edges [ min_dot_pattern ] . right [ row ]	545:24:21803:21850	10493256	1	True				
ANR	10494907	RelationalExpression	dot <= min_dot_edges [ min_dot_pattern ] . right [ row ]		10493256	0		<=			
ANR	10494908	Identifier	dot		10493256	0					
ANR	10494909	ArrayIndexing	min_dot_edges [ min_dot_pattern ] . right [ row ]		10493256	1					
ANR	10494910	MemberAccess	min_dot_edges [ min_dot_pattern ] . right		10493256	0					
ANR	10494911	ArrayIndexing	min_dot_edges [ min_dot_pattern ]		10493256	0					
ANR	10494912	Identifier	min_dot_edges		10493256	0					
ANR	10494913	Identifier	min_dot_pattern		10493256	1					
ANR	10494914	Identifier	right		10493256	1					
ANR	10494915	Identifier	row		10493256	1					
ANR	10494916	PostIncDecOperationExpression	dot ++	545:74:21853:21857	10493256	2	True				
ANR	10494917	Identifier	dot		10493256	0					
ANR	10494918	IncDec	++		10493256	1					
ANR	10494919	CompoundStatement		291:81:13273:13273	10493256	3					
ANR	10494920	ExpressionStatement	cX = ( choice_X + dot ) % array_width	546:20:21882:21917	10493256	0	True				
ANR	10494921	AssignmentExpression	cX = ( choice_X + dot ) % array_width		10493256	0		=			
ANR	10494922	Identifier	cX		10493256	0					
ANR	10494923	MultiplicativeExpression	( choice_X + dot ) % array_width		10493256	1		%			
ANR	10494924	AdditiveExpression	choice_X + dot		10493256	0		+			
ANR	10494925	Identifier	choice_X		10493256	0					
ANR	10494926	Identifier	dot		10493256	1					
ANR	10494927	Identifier	array_width		10493256	1					
ANR	10494928	IfStatement	if ( ( row > 0 ) || ( dot > 0 ) )		10493256	1					
ANR	10494929	Condition	( row > 0 ) || ( dot > 0 )	547:24:21943:21964	10493256	0	True				
ANR	10494930	OrExpression	( row > 0 ) || ( dot > 0 )		10493256	0		||			
ANR	10494931	RelationalExpression	row > 0		10493256	0		>			
ANR	10494932	Identifier	row		10493256	0					
ANR	10494933	PrimaryExpression	0		10493256	1					
ANR	10494934	RelationalExpression	dot > 0		10493256	1		>			
ANR	10494935	Identifier	dot		10493256	0					
ANR	10494936	PrimaryExpression	0		10493256	1					
ANR	10494937	CompoundStatement		293:48:13380:13380	10493256	1					
ANR	10494938	ExpressionStatement	"do_dot ( cX , cY , level , 0 )"	549:24:22086:22110	10493256	0	True				
ANR	10494939	CallExpression	"do_dot ( cX , cY , level , 0 )"		10493256	0					
ANR	10494940	Callee	do_dot		10493256	0					
ANR	10494941	Identifier	do_dot		10493256	0					
ANR	10494942	ArgumentList	cX		10493256	1					
ANR	10494943	Argument	cX		10493256	0					
ANR	10494944	Identifier	cX		10493256	0					
ANR	10494945	Argument	cY		10493256	1					
ANR	10494946	Identifier	cY		10493256	0					
ANR	10494947	Argument	level		10493256	2					
ANR	10494948	Identifier	level		10493256	0					
ANR	10494949	Argument	0		10493256	3					
ANR	10494950	PrimaryExpression	0		10493256	0					
ANR	10494951	ExpressionStatement	level_up ++	550:24:22136:22146	10493256	1	True				
ANR	10494952	PostIncDecOperationExpression	level_up ++		10493256	0					
ANR	10494953	Identifier	level_up		10493256	0					
ANR	10494954	IncDec	++		10493256	1					
ANR	10494955	ExpressionStatement	"do_dot ( choice_X , choice_Y , level , 1 )"	555:8:22220:22256	10493256	19	True				
ANR	10494956	CallExpression	"do_dot ( choice_X , choice_Y , level , 1 )"		10493256	0					
ANR	10494957	Callee	do_dot		10493256	0					
ANR	10494958	Identifier	do_dot		10493256	0					
ANR	10494959	ArgumentList	choice_X		10493256	1					
ANR	10494960	Argument	choice_X		10493256	0					
ANR	10494961	Identifier	choice_X		10493256	0					
ANR	10494962	Argument	choice_Y		10493256	1					
ANR	10494963	Identifier	choice_Y		10493256	0					
ANR	10494964	Argument	level		10493256	2					
ANR	10494965	Identifier	level		10493256	0					
ANR	10494966	Argument	1		10493256	3					
ANR	10494967	PrimaryExpression	1		10493256	0					
ANR	10494968	IfStatement	if ( ! quiet )		10493256	31					
ANR	10494969	Condition	! quiet	559:8:22365:22371	10493256	0	True				
ANR	10494970	UnaryOperationExpression	! quiet		10493256	0					
ANR	10494971	UnaryOperator	!		10493256	0					
ANR	10494972	Identifier	quiet		10493256	1					
ANR	10494973	CompoundStatement		305:17:13787:13787	10493256	1					
ANR	10494974	ForStatement	for ( Y = 0 ; Y < array_height ; Y ++ )		10493256	0					
ANR	10494975	ForInit	Y = 0 ;	560:13:22389:22392	10493256	0	True				
ANR	10494976	AssignmentExpression	Y = 0		10493256	0		=			
ANR	10494977	Identifier	Y		10493256	0					
ANR	10494978	PrimaryExpression	0		10493256	1					
ANR	10494979	Condition	Y < array_height	560:18:22394:22409	10493256	1	True				
ANR	10494980	RelationalExpression	Y < array_height		10493256	0		<			
ANR	10494981	Identifier	Y		10493256	0					
ANR	10494982	Identifier	array_height		10493256	1					
ANR	10494983	PostIncDecOperationExpression	Y ++	560:36:22412:22414	10493256	2	True				
ANR	10494984	Identifier	Y		10493256	0					
ANR	10494985	IncDec	++		10493256	1					
ANR	10494986	CompoundStatement		306:41:13830:13830	10493256	3					
ANR	10494987	ForStatement	for ( X = 0 ; X < array_width ; X ++ )		10493256	0					
ANR	10494988	ForInit	X = 0 ;	561:17:22436:22439	10493256	0	True				
ANR	10494989	AssignmentExpression	X = 0		10493256	0		=			
ANR	10494990	Identifier	X		10493256	0					
ANR	10494991	PrimaryExpression	0		10493256	1					
ANR	10494992	Condition	X < array_width	561:22:22441:22455	10493256	1	True				
ANR	10494993	RelationalExpression	X < array_width		10493256	0		<			
ANR	10494994	Identifier	X		10493256	0					
ANR	10494995	Identifier	array_width		10493256	1					
ANR	10494996	PostIncDecOperationExpression	X ++	561:39:22458:22460	10493256	2	True				
ANR	10494997	Identifier	X		10493256	0					
ANR	10494998	IncDec	++		10493256	1					
ANR	10494999	CompoundStatement		307:44:13876:13876	10493256	3					
ANR	10495000	ExpressionStatement	"printf ( "" %6d"" , ThresholdArray [ X ] [ Y ] )"	562:16:22481:22517	10493256	0	True				
ANR	10495001	CallExpression	"printf ( "" %6d"" , ThresholdArray [ X ] [ Y ] )"		10493256	0					
ANR	10495002	Callee	printf		10493256	0					
ANR	10495003	Identifier	printf		10493256	0					
ANR	10495004	ArgumentList	""" %6d"""		10493256	1					
ANR	10495005	Argument	""" %6d"""		10493256	0					
ANR	10495006	PrimaryExpression	""" %6d"""		10493256	0					
ANR	10495007	Argument	ThresholdArray [ X ] [ Y ]		10493256	1					
ANR	10495008	ArrayIndexing	ThresholdArray [ X ] [ Y ]		10493256	0					
ANR	10495009	ArrayIndexing	ThresholdArray [ X ]		10493256	0					
ANR	10495010	Identifier	ThresholdArray		10493256	0					
ANR	10495011	Identifier	X		10493256	1					
ANR	10495012	Identifier	Y		10493256	1					
ANR	10495013	IfStatement	if ( ( X & 15 ) == 15 )		10493256	1					
ANR	10495014	Condition	( X & 15 ) == 15	563:20:22539:22552	10493256	0	True				
ANR	10495015	EqualityExpression	( X & 15 ) == 15		10493256	0		==			
ANR	10495016	BitAndExpression	X & 15		10493256	0		&			
ANR	10495017	Identifier	X		10493256	0					
ANR	10495018	PrimaryExpression	15		10493256	1					
ANR	10495019	PrimaryExpression	15		10493256	1					
ANR	10495020	ExpressionStatement	"printf ( ""\\n"" )"	564:20:22575:22587	10493256	1	True				
ANR	10495021	CallExpression	"printf ( ""\\n"" )"		10493256	0					
ANR	10495022	Callee	printf		10493256	0					
ANR	10495023	Identifier	printf		10493256	0					
ANR	10495024	ArgumentList	"""\\n"""		10493256	1					
ANR	10495025	Argument	"""\\n"""		10493256	0					
ANR	10495026	PrimaryExpression	"""\\n"""		10493256	0					
ANR	10495027	IfStatement	if ( ( X & 15 ) != 0 )		10493256	1					
ANR	10495028	Condition	( X & 15 ) != 0	566:16:22643:22655	10493256	0	True				
ANR	10495029	EqualityExpression	( X & 15 ) != 0		10493256	0		!=			
ANR	10495030	BitAndExpression	X & 15		10493256	0		&			
ANR	10495031	Identifier	X		10493256	0					
ANR	10495032	PrimaryExpression	15		10493256	1					
ANR	10495033	PrimaryExpression	0		10493256	1					
ANR	10495034	ExpressionStatement	"printf ( ""\\n"" )"	567:20:22678:22690	10493256	1	True				
ANR	10495035	CallExpression	"printf ( ""\\n"" )"		10493256	0					
ANR	10495036	Callee	printf		10493256	0					
ANR	10495037	Identifier	printf		10493256	0					
ANR	10495038	ArgumentList	"""\\n"""		10493256	1					
ANR	10495039	Argument	"""\\n"""		10493256	0					
ANR	10495040	PrimaryExpression	"""\\n"""		10493256	0					
ANR	10495041	ExpressionStatement	code = 0	570:4:22741:22749	10493256	32	True				
ANR	10495042	AssignmentExpression	code = 0		10493256	0		=			
ANR	10495043	Identifier	code		10493256	0					
ANR	10495044	PrimaryExpression	0		10493256	1					
ANR	10495045	ExpressionStatement	fclose ( fp )	571:4:22778:22788	10493256	33	True				
ANR	10495046	CallExpression	fclose ( fp )		10493256	0					
ANR	10495047	Callee	fclose		10493256	0					
ANR	10495048	Identifier	fclose		10493256	0					
ANR	10495049	ArgumentList	fp		10493256	1					
ANR	10495050	Argument	fp		10493256	0					
ANR	10495051	Identifier	fp		10493256	0					
ANR	10495052	ExpressionStatement	close_gs_display ( )	573:4:22811:22829	10493256	34	True				
ANR	10495053	CallExpression	close_gs_display ( )		10493256	0					
ANR	10495054	Callee	close_gs_display		10493256	0					
ANR	10495055	Identifier	close_gs_display		10493256	0					
ANR	10495056	ArgumentList			10493256	1					
ANR	10495057	ReturnStatement	return code ;	576:4:22843:22854	10493256	35	True				
ANR	10495058	Identifier	code		10493256	0					
ANR	10495059	Label	usage_exit :	578:0:22887:22897	10493256	36	True				
ANR	10495060	Identifier	usage_exit		10493256	0					
ANR	10495061	ExpressionStatement	"printf ( ""\\nUsage:\\tgen_stochastic [-m#] [-p#.##] [-q] [-rWxH] [-s#] [-t#] SIZEWxSIZEH outfile [-g ghostscript_args ... ]\\n"" )"	579:4:22903:23026	10493256	37	True				
ANR	10495062	CallExpression	"printf ( ""\\nUsage:\\tgen_stochastic [-m#] [-p#.##] [-q] [-rWxH] [-s#] [-t#] SIZEWxSIZEH outfile [-g ghostscript_args ... ]\\n"" )"		10493256	0					
ANR	10495063	Callee	printf		10493256	0					
ANR	10495064	Identifier	printf		10493256	0					
ANR	10495065	ArgumentList	"""\\nUsage:\\tgen_stochastic [-m#] [-p#.##] [-q] [-rWxH] [-s#] [-t#] SIZEWxSIZEH outfile [-g ghostscript_args ... ]\\n"""		10493256	1					
ANR	10495066	Argument	"""\\nUsage:\\tgen_stochastic [-m#] [-p#.##] [-q] [-rWxH] [-s#] [-t#] SIZEWxSIZEH outfile [-g ghostscript_args ... ]\\n"""		10493256	0					
ANR	10495067	PrimaryExpression	"""\\nUsage:\\tgen_stochastic [-m#] [-p#.##] [-q] [-rWxH] [-s#] [-t#] SIZEWxSIZEH outfile [-g ghostscript_args ... ]\\n"""		10493256	0					
ANR	10495068	ExpressionStatement	"printf ( ""\\n\\t-m#\\tset the minimum dot size/shape pattern. This is an index to a specific \\n"" )"	580:4:23032:23124	10493256	38	True				
ANR	10495069	CallExpression	"printf ( ""\\n\\t-m#\\tset the minimum dot size/shape pattern. This is an index to a specific \\n"" )"		10493256	0					
ANR	10495070	Callee	printf		10493256	0					
ANR	10495071	Identifier	printf		10493256	0					
ANR	10495072	ArgumentList	"""\\n\\t-m#\\tset the minimum dot size/shape pattern. This is an index to a specific \\n"""		10493256	1					
ANR	10495073	Argument	"""\\n\\t-m#\\tset the minimum dot size/shape pattern. This is an index to a specific \\n"""		10493256	0					
ANR	10495074	PrimaryExpression	"""\\n\\t-m#\\tset the minimum dot size/shape pattern. This is an index to a specific \\n"""		10493256	0					
ANR	10495075	ExpressionStatement	"printf ( ""\\t\\tsize/shape table as follows (default 0):\\n"" )"	581:4:23130:23186	10493256	39	True				
ANR	10495076	CallExpression	"printf ( ""\\t\\tsize/shape table as follows (default 0):\\n"" )"		10493256	0					
ANR	10495077	Callee	printf		10493256	0					
ANR	10495078	Identifier	printf		10493256	0					
ANR	10495079	ArgumentList	"""\\t\\tsize/shape table as follows (default 0):\\n"""		10493256	1					
ANR	10495080	Argument	"""\\t\\tsize/shape table as follows (default 0):\\n"""		10493256	0					
ANR	10495081	PrimaryExpression	"""\\t\\tsize/shape table as follows (default 0):\\n"""		10493256	0					
ANR	10495082	ExpressionStatement	"printf ( ""\\n"" )"	582:4:23192:23204	10493256	40	True				
ANR	10495083	CallExpression	"printf ( ""\\n"" )"		10493256	0					
ANR	10495084	Callee	printf		10493256	0					
ANR	10495085	Identifier	printf		10493256	0					
ANR	10495086	ArgumentList	"""\\n"""		10493256	1					
ANR	10495087	Argument	"""\\n"""		10493256	0					
ANR	10495088	PrimaryExpression	"""\\n"""		10493256	0					
ANR	10495089	ExpressionStatement	"printf ( ""\\t\\t\\t0:\\t1:\\t2:\\t3:\\t4:\\t5:\\n"" )"	583:4:23210:23250	10493256	41	True				
ANR	10495090	CallExpression	"printf ( ""\\t\\t\\t0:\\t1:\\t2:\\t3:\\t4:\\t5:\\n"" )"		10493256	0					
ANR	10495091	Callee	printf		10493256	0					
ANR	10495092	Identifier	printf		10493256	0					
ANR	10495093	ArgumentList	"""\\t\\t\\t0:\\t1:\\t2:\\t3:\\t4:\\t5:\\n"""		10493256	1					
ANR	10495094	Argument	"""\\t\\t\\t0:\\t1:\\t2:\\t3:\\t4:\\t5:\\n"""		10493256	0					
ANR	10495095	PrimaryExpression	"""\\t\\t\\t0:\\t1:\\t2:\\t3:\\t4:\\t5:\\n"""		10493256	0					
ANR	10495096	ExpressionStatement	"printf ( ""\\t\\t\\tx\\txx\\tx\\txx\\tx\\txx\\n"" )"	584:4:23256:23293	10493256	42	True				
ANR	10495097	CallExpression	"printf ( ""\\t\\t\\tx\\txx\\tx\\txx\\tx\\txx\\n"" )"		10493256	0					
ANR	10495098	Callee	printf		10493256	0					
ANR	10495099	Identifier	printf		10493256	0					
ANR	10495100	ArgumentList	"""\\t\\t\\tx\\txx\\tx\\txx\\tx\\txx\\n"""		10493256	1					
ANR	10495101	Argument	"""\\t\\t\\tx\\txx\\tx\\txx\\tx\\txx\\n"""		10493256	0					
ANR	10495102	PrimaryExpression	"""\\t\\t\\tx\\txx\\tx\\txx\\tx\\txx\\n"""		10493256	0					
ANR	10495103	ExpressionStatement	"printf ( ""\\t\\t\\t\\t\\tx\\tx\\t x\\txx\\n"" )"	585:4:23299:23333	10493256	43	True				
ANR	10495104	CallExpression	"printf ( ""\\t\\t\\t\\t\\tx\\tx\\t x\\txx\\n"" )"		10493256	0					
ANR	10495105	Callee	printf		10493256	0					
ANR	10495106	Identifier	printf		10493256	0					
ANR	10495107	ArgumentList	"""\\t\\t\\t\\t\\tx\\tx\\t x\\txx\\n"""		10493256	1					
ANR	10495108	Argument	"""\\t\\t\\t\\t\\tx\\tx\\t x\\txx\\n"""		10493256	0					
ANR	10495109	PrimaryExpression	"""\\t\\t\\t\\t\\tx\\tx\\t x\\txx\\n"""		10493256	0					
ANR	10495110	ExpressionStatement	"printf ( ""\\n"" )"	586:4:23339:23351	10493256	44	True				
ANR	10495111	CallExpression	"printf ( ""\\n"" )"		10493256	0					
ANR	10495112	Callee	printf		10493256	0					
ANR	10495113	Identifier	printf		10493256	0					
ANR	10495114	ArgumentList	"""\\n"""		10493256	1					
ANR	10495115	Argument	"""\\n"""		10493256	0					
ANR	10495116	PrimaryExpression	"""\\n"""		10493256	0					
ANR	10495117	ExpressionStatement	"printf ( ""\\t\\t\\t6:\\t7:\\t8:\\t9:\\t10:\\t11:\\t12:\\t13:\\n"" )"	587:4:23357:23409	10493256	45	True				
ANR	10495118	CallExpression	"printf ( ""\\t\\t\\t6:\\t7:\\t8:\\t9:\\t10:\\t11:\\t12:\\t13:\\n"" )"		10493256	0					
ANR	10495119	Callee	printf		10493256	0					
ANR	10495120	Identifier	printf		10493256	0					
ANR	10495121	ArgumentList	"""\\t\\t\\t6:\\t7:\\t8:\\t9:\\t10:\\t11:\\t12:\\t13:\\n"""		10493256	1					
ANR	10495122	Argument	"""\\t\\t\\t6:\\t7:\\t8:\\t9:\\t10:\\t11:\\t12:\\t13:\\n"""		10493256	0					
ANR	10495123	PrimaryExpression	"""\\t\\t\\t6:\\t7:\\t8:\\t9:\\t10:\\t11:\\t12:\\t13:\\n"""		10493256	0					
ANR	10495124	ExpressionStatement	"printf ( ""\\t\\t\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\n"" )"	588:4:23415:23471	10493256	46	True				
ANR	10495125	CallExpression	"printf ( ""\\t\\t\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\n"" )"		10493256	0					
ANR	10495126	Callee	printf		10493256	0					
ANR	10495127	Identifier	printf		10493256	0					
ANR	10495128	ArgumentList	"""\\t\\t\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\n"""		10493256	1					
ANR	10495129	Argument	"""\\t\\t\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\n"""		10493256	0					
ANR	10495130	PrimaryExpression	"""\\t\\t\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\txxx\\n"""		10493256	0					
ANR	10495131	ExpressionStatement	"printf ( ""\\t\\t\\t   \\tx  \\txx \\txxx\\tx  \\txx \\txxx\\txxx\\n"" )"	589:4:23477:23533	10493256	47	True				
ANR	10495132	CallExpression	"printf ( ""\\t\\t\\t   \\tx  \\txx \\txxx\\tx  \\txx \\txxx\\txxx\\n"" )"		10493256	0					
ANR	10495133	Callee	printf		10493256	0					
ANR	10495134	Identifier	printf		10493256	0					
ANR	10495135	ArgumentList	"""\\t\\t\\t   \\tx  \\txx \\txxx\\tx  \\txx \\txxx\\txxx\\n"""		10493256	1					
ANR	10495136	Argument	"""\\t\\t\\t   \\tx  \\txx \\txxx\\tx  \\txx \\txxx\\txxx\\n"""		10493256	0					
ANR	10495137	PrimaryExpression	"""\\t\\t\\t   \\tx  \\txx \\txxx\\tx  \\txx \\txxx\\txxx\\n"""		10493256	0					
ANR	10495138	ExpressionStatement	"printf ( ""\\t\\t   \\t   \\t   \\t   \\tx  \\tx \\tx \\txx\\n"" )"	590:4:23539:23590	10493256	48	True				
ANR	10495139	CallExpression	"printf ( ""\\t\\t   \\t   \\t   \\t   \\tx  \\tx \\tx \\txx\\n"" )"		10493256	0					
ANR	10495140	Callee	printf		10493256	0					
ANR	10495141	Identifier	printf		10493256	0					
ANR	10495142	ArgumentList	"""\\t\\t   \\t   \\t   \\t   \\tx  \\tx \\tx \\txx\\n"""		10493256	1					
ANR	10495143	Argument	"""\\t\\t   \\t   \\t   \\t   \\tx  \\tx \\tx \\txx\\n"""		10493256	0					
ANR	10495144	PrimaryExpression	"""\\t\\t   \\t   \\t   \\t   \\tx  \\tx \\tx \\txx\\n"""		10493256	0					
ANR	10495145	ExpressionStatement	"printf ( ""\\n"" )"	591:4:23596:23608	10493256	49	True				
ANR	10495146	CallExpression	"printf ( ""\\n"" )"		10493256	0					
ANR	10495147	Callee	printf		10493256	0					
ANR	10495148	Identifier	printf		10493256	0					
ANR	10495149	ArgumentList	"""\\n"""		10493256	1					
ANR	10495150	Argument	"""\\n"""		10493256	0					
ANR	10495151	PrimaryExpression	"""\\n"""		10493256	0					
ANR	10495152	ExpressionStatement	"printf ( ""\\t\\t\\t14:\\t15:\\t16:\\t17:\\t18:\\t19:\\n"" )"	592:4:23614:23660	10493256	50	True				
ANR	10495153	CallExpression	"printf ( ""\\t\\t\\t14:\\t15:\\t16:\\t17:\\t18:\\t19:\\n"" )"		10493256	0					
ANR	10495154	Callee	printf		10493256	0					
ANR	10495155	Identifier	printf		10493256	0					
ANR	10495156	ArgumentList	"""\\t\\t\\t14:\\t15:\\t16:\\t17:\\t18:\\t19:\\n"""		10493256	1					
ANR	10495157	Argument	"""\\t\\t\\t14:\\t15:\\t16:\\t17:\\t18:\\t19:\\n"""		10493256	0					
ANR	10495158	PrimaryExpression	"""\\t\\t\\t14:\\t15:\\t16:\\t17:\\t18:\\t19:\\n"""		10493256	0					
ANR	10495159	ExpressionStatement	"printf ( ""\\t\\t\\tx  \\txx \\txx \\txx \\txxx\\txxx\\n"" )"	593:4:23666:23712	10493256	51	True				
ANR	10495160	CallExpression	"printf ( ""\\t\\t\\tx  \\txx \\txx \\txx \\txxx\\txxx\\n"" )"		10493256	0					
ANR	10495161	Callee	printf		10493256	0					
ANR	10495162	Identifier	printf		10493256	0					
ANR	10495163	ArgumentList	"""\\t\\t\\tx  \\txx \\txx \\txx \\txxx\\txxx\\n"""		10493256	1					
ANR	10495164	Argument	"""\\t\\t\\tx  \\txx \\txx \\txx \\txxx\\txxx\\n"""		10493256	0					
ANR	10495165	PrimaryExpression	"""\\t\\t\\tx  \\txx \\txx \\txx \\txxx\\txxx\\n"""		10493256	0					
ANR	10495166	ExpressionStatement	"printf ( ""\\t\\t\\tx   \\tx  \\txx \\txx \\txx \\txxx\\n"" )"	594:4:23718:23765	10493256	52	True				
ANR	10495167	CallExpression	"printf ( ""\\t\\t\\tx   \\tx  \\txx \\txx \\txx \\txxx\\n"" )"		10493256	0					
ANR	10495168	Callee	printf		10493256	0					
ANR	10495169	Identifier	printf		10493256	0					
ANR	10495170	ArgumentList	"""\\t\\t\\tx   \\tx  \\txx \\txx \\txx \\txxx\\n"""		10493256	1					
ANR	10495171	Argument	"""\\t\\t\\tx   \\tx  \\txx \\txx \\txx \\txxx\\n"""		10493256	0					
ANR	10495172	PrimaryExpression	"""\\t\\t\\tx   \\tx  \\txx \\txx \\txx \\txxx\\n"""		10493256	0					
ANR	10495173	ExpressionStatement	"printf ( ""\\t\\t\\tx   \\tx   \\tx   \\txx  \\txx\\txxx\\n"" )"	595:4:23771:23820	10493256	53	True				
ANR	10495174	CallExpression	"printf ( ""\\t\\t\\tx   \\tx   \\tx   \\txx  \\txx\\txxx\\n"" )"		10493256	0					
ANR	10495175	Callee	printf		10493256	0					
ANR	10495176	Identifier	printf		10493256	0					
ANR	10495177	ArgumentList	"""\\t\\t\\tx   \\tx   \\tx   \\txx  \\txx\\txxx\\n"""		10493256	1					
ANR	10495178	Argument	"""\\t\\t\\tx   \\tx   \\tx   \\txx  \\txx\\txxx\\n"""		10493256	0					
ANR	10495179	PrimaryExpression	"""\\t\\t\\tx   \\tx   \\tx   \\txx  \\txx\\txxx\\n"""		10493256	0					
ANR	10495180	ExpressionStatement	"printf ( ""\\n\\t-p#.##\\texponenttial bias of random choice -- higher values are less random.\\n"" )"	596:4:23826:23918	10493256	54	True				
ANR	10495181	CallExpression	"printf ( ""\\n\\t-p#.##\\texponenttial bias of random choice -- higher values are less random.\\n"" )"		10493256	0					
ANR	10495182	Callee	printf		10493256	0					
ANR	10495183	Identifier	printf		10493256	0					
ANR	10495184	ArgumentList	"""\\n\\t-p#.##\\texponenttial bias of random choice -- higher values are less random.\\n"""		10493256	1					
ANR	10495185	Argument	"""\\n\\t-p#.##\\texponenttial bias of random choice -- higher values are less random.\\n"""		10493256	0					
ANR	10495186	PrimaryExpression	"""\\n\\t-p#.##\\texponenttial bias of random choice -- higher values are less random.\\n"""		10493256	0					
ANR	10495187	ExpressionStatement	"printf ( ""\\n\\t-q\\tquiet mode -- only error messages.\\n"" )"	597:4:23924:23978	10493256	55	True				
ANR	10495188	CallExpression	"printf ( ""\\n\\t-q\\tquiet mode -- only error messages.\\n"" )"		10493256	0					
ANR	10495189	Callee	printf		10493256	0					
ANR	10495190	Identifier	printf		10493256	0					
ANR	10495191	ArgumentList	"""\\n\\t-q\\tquiet mode -- only error messages.\\n"""		10493256	1					
ANR	10495192	Argument	"""\\n\\t-q\\tquiet mode -- only error messages.\\n"""		10493256	0					
ANR	10495193	PrimaryExpression	"""\\n\\t-q\\tquiet mode -- only error messages.\\n"""		10493256	0					
ANR	10495194	ExpressionStatement	"printf ( ""\\n\\t-rWxH\\tallows for horizontal / vertical resolution, e.g. -r2x1\\n"" )"	598:4:23984:24062	10493256	56	True				
ANR	10495195	CallExpression	"printf ( ""\\n\\t-rWxH\\tallows for horizontal / vertical resolution, e.g. -r2x1\\n"" )"		10493256	0					
ANR	10495196	Callee	printf		10493256	0					
ANR	10495197	Identifier	printf		10493256	0					
ANR	10495198	ArgumentList	"""\\n\\t-rWxH\\tallows for horizontal / vertical resolution, e.g. -r2x1\\n"""		10493256	1					
ANR	10495199	Argument	"""\\n\\t-rWxH\\tallows for horizontal / vertical resolution, e.g. -r2x1\\n"""		10493256	0					
ANR	10495200	PrimaryExpression	"""\\n\\t-rWxH\\tallows for horizontal / vertical resolution, e.g. -r2x1\\n"""		10493256	0					
ANR	10495201	ExpressionStatement	"printf ( ""\\t\\tvalues are used for aspect ratio -- actual values arbitrary\\n"" )"	599:4:24068:24143	10493256	57	True				
ANR	10495202	CallExpression	"printf ( ""\\t\\tvalues are used for aspect ratio -- actual values arbitrary\\n"" )"		10493256	0					
ANR	10495203	Callee	printf		10493256	0					
ANR	10495204	Identifier	printf		10493256	0					
ANR	10495205	ArgumentList	"""\\t\\tvalues are used for aspect ratio -- actual values arbitrary\\n"""		10493256	1					
ANR	10495206	Argument	"""\\t\\tvalues are used for aspect ratio -- actual values arbitrary\\n"""		10493256	0					
ANR	10495207	PrimaryExpression	"""\\t\\tvalues are used for aspect ratio -- actual values arbitrary\\n"""		10493256	0					
ANR	10495208	ExpressionStatement	"printf ( ""\\n\\t-s#\\tInitial seed for random number generation. Useful to generate"" )"	600:4:24149:24229	10493256	58	True				
ANR	10495209	CallExpression	"printf ( ""\\n\\t-s#\\tInitial seed for random number generation. Useful to generate"" )"		10493256	0					
ANR	10495210	Callee	printf		10493256	0					
ANR	10495211	Identifier	printf		10493256	0					
ANR	10495212	ArgumentList	"""\\n\\t-s#\\tInitial seed for random number generation. Useful to generate"""		10493256	1					
ANR	10495213	Argument	"""\\n\\t-s#\\tInitial seed for random number generation. Useful to generate"""		10493256	0					
ANR	10495214	PrimaryExpression	"""\\n\\t-s#\\tInitial seed for random number generation. Useful to generate"""		10493256	0					
ANR	10495215	ExpressionStatement	"printf ( ""\\n\\t\\tdecorrelated threshold arrays to be used with different colors."" )"	601:4:24235:24314	10493256	59	True				
ANR	10495216	CallExpression	"printf ( ""\\n\\t\\tdecorrelated threshold arrays to be used with different colors."" )"		10493256	0					
ANR	10495217	Callee	printf		10493256	0					
ANR	10495218	Identifier	printf		10493256	0					
ANR	10495219	ArgumentList	"""\\n\\t\\tdecorrelated threshold arrays to be used with different colors."""		10493256	1					
ANR	10495220	Argument	"""\\n\\t\\tdecorrelated threshold arrays to be used with different colors."""		10493256	0					
ANR	10495221	PrimaryExpression	"""\\n\\t\\tdecorrelated threshold arrays to be used with different colors."""		10493256	0					
ANR	10495222	ExpressionStatement	"printf ( ""\\n\\t-t#\\tsets the choice value threshold in 0.1%% units (default 10 = 1%%)\\n"" )"	602:4:24320:24406	10493256	60	True				
ANR	10495223	CallExpression	"printf ( ""\\n\\t-t#\\tsets the choice value threshold in 0.1%% units (default 10 = 1%%)\\n"" )"		10493256	0					
ANR	10495224	Callee	printf		10493256	0					
ANR	10495225	Identifier	printf		10493256	0					
ANR	10495226	ArgumentList	"""\\n\\t-t#\\tsets the choice value threshold in 0.1%% units (default 10 = 1%%)\\n"""		10493256	1					
ANR	10495227	Argument	"""\\n\\t-t#\\tsets the choice value threshold in 0.1%% units (default 10 = 1%%)\\n"""		10493256	0					
ANR	10495228	PrimaryExpression	"""\\n\\t-t#\\tsets the choice value threshold in 0.1%% units (default 10 = 1%%)\\n"""		10493256	0					
ANR	10495229	ExpressionStatement	"printf ( ""\\n\\t-g\\t(must be last) Following arguments are passed to Ghostscript if \\n"" )"	603:4:24412:24496	10493256	61	True				
ANR	10495230	CallExpression	"printf ( ""\\n\\t-g\\t(must be last) Following arguments are passed to Ghostscript if \\n"" )"		10493256	0					
ANR	10495231	Callee	printf		10493256	0					
ANR	10495232	Identifier	printf		10493256	0					
ANR	10495233	ArgumentList	"""\\n\\t-g\\t(must be last) Following arguments are passed to Ghostscript if \\n"""		10493256	1					
ANR	10495234	Argument	"""\\n\\t-g\\t(must be last) Following arguments are passed to Ghostscript if \\n"""		10493256	0					
ANR	10495235	PrimaryExpression	"""\\n\\t-g\\t(must be last) Following arguments are passed to Ghostscript if \\n"""		10493256	0					
ANR	10495236	ExpressionStatement	"printf ( ""\\t\\tcompiled wuth USE_GS_DISPLAY=1.\\n"" )"	604:4:24502:24549	10493256	62	True				
ANR	10495237	CallExpression	"printf ( ""\\t\\tcompiled wuth USE_GS_DISPLAY=1.\\n"" )"		10493256	0					
ANR	10495238	Callee	printf		10493256	0					
ANR	10495239	Identifier	printf		10493256	0					
ANR	10495240	ArgumentList	"""\\t\\tcompiled wuth USE_GS_DISPLAY=1.\\n"""		10493256	1					
ANR	10495241	Argument	"""\\t\\tcompiled wuth USE_GS_DISPLAY=1.\\n"""		10493256	0					
ANR	10495242	PrimaryExpression	"""\\t\\tcompiled wuth USE_GS_DISPLAY=1.\\n"""		10493256	0					
ANR	10495243	ExpressionStatement	"printf ( ""\\n"" )"	605:4:24555:24567	10493256	63	True				
ANR	10495244	CallExpression	"printf ( ""\\n"" )"		10493256	0					
ANR	10495245	Callee	printf		10493256	0					
ANR	10495246	Identifier	printf		10493256	0					
ANR	10495247	ArgumentList	"""\\n"""		10493256	1					
ANR	10495248	Argument	"""\\n"""		10493256	0					
ANR	10495249	PrimaryExpression	"""\\n"""		10493256	0					
ANR	10495250	ReturnStatement	return 1 ;	606:4:24573:24581	10493256	64	True				
ANR	10495251	PrimaryExpression	1		10493256	0					
ANR	10495252	ReturnType	int		10493256	1					
ANR	10495253	Identifier	main		10493256	2					
ANR	10495254	ParameterList	"int argc , char * argv [ ]"		10493256	3					
ANR	10495255	Parameter	int argc	254:5:8562:8569	10493256	0	True				
ANR	10495256	ParameterType	int		10493256	0					
ANR	10495257	Identifier	argc		10493256	1					
ANR	10495258	Parameter	char * argv [ ]	254:15:8572:8583	10493256	1	True				
ANR	10495259	ParameterType	char * [ ]		10493256	0					
ANR	10495260	Identifier	argv		10493256	1					
ANR	10495261	CFGEntryNode	ENTRY		10493256		True				
ANR	10495262	CFGExitNode	EXIT		10493256		True				
ANR	10495263	Symbol	Val		10493256						
ANR	10495264	Symbol	val_thresh		10493256						
ANR	10495265	Symbol	resolution		10493256						
ANR	10495266	Symbol	* min_dot_edges [ min_dot_pattern ] . right		10493256						
ANR	10495267	Symbol	rand		10493256						
ANR	10495268	Symbol	min_dot_edges [ min_dot_pattern ] . left		10493256						
ANR	10495269	Symbol	CompareOrder		10493256						
ANR	10495270	Symbol	update_gs_image		10493256						
ANR	10495271	Symbol	min_dot_pattern		10493256						
ANR	10495272	Symbol	* cX		10493256						
ANR	10495273	Symbol	min_dot_edges [ min_dot_pattern ] . num_rows		10493256						
ANR	10495274	Symbol	init_gs_display		10493256						
ANR	10495275	Symbol	* cY		10493256						
ANR	10495276	Symbol	min_dot_edges [ min_dot_pattern ] . right		10493256						
ANR	10495277	Symbol	ry_sq		10493256						
ANR	10495278	Symbol	* ThresholdArray		10493256						
ANR	10495279	Symbol	array_height		10493256						
ANR	10495280	Symbol	MAX_ARRAY_HEIGHT		10493256						
ANR	10495281	Symbol	sscanf		10493256						
ANR	10495282	Symbol	* resolution		10493256						
ANR	10495283	Symbol	* * min_dot_pattern		10493256						
ANR	10495284	Symbol	dot		10493256						
ANR	10495285	Symbol	* userow		10493256						
ANR	10495286	Symbol	Order [ 0 ] . Y		10493256						
ANR	10495287	Symbol	Order [ 0 ] . X		10493256						
ANR	10495288	Symbol	* * min_dot_edges		10493256						
ANR	10495289	Symbol	* Val		10493256						
ANR	10495290	Symbol	cX		10493256						
ANR	10495291	Symbol	cY		10493256						
ANR	10495292	Symbol	* Order		10493256						
ANR	10495293	Symbol	X		10493256						
ANR	10495294	Symbol	Y		10493256						
ANR	10495295	Symbol	pow		10493256						
ANR	10495296	Symbol	quiet		10493256						
ANR	10495297	Symbol	* * at_arg		10493256						
ANR	10495298	Symbol	at_arg		10493256						
ANR	10495299	Symbol	fopen		10493256						
ANR	10495300	Symbol	ValRange		10493256						
ANR	10495301	Symbol	* * ThresholdArray		10493256						
ANR	10495302	Symbol	* min_dot_pattern		10493256						
ANR	10495303	Symbol	i		10493256						
ANR	10495304	Symbol	j		10493256						
ANR	10495305	Symbol	k		10493256						
ANR	10495306	Symbol	m		10493256						
ANR	10495307	Symbol	* Order [ i ] . X		10493256						
ANR	10495308	Symbol	do_min_dot		10493256						
ANR	10495309	Symbol	x		10493256						
ANR	10495310	Symbol	choice		10493256						
ANR	10495311	Symbol	Order [ i ] . X		10493256						
ANR	10495312	Symbol	Order [ i ] . Y		10493256						
ANR	10495313	Symbol	min_dot_edges		10493256						
ANR	10495314	Symbol	* row		10493256						
ANR	10495315	Symbol	* min_dot_edges [ min_dot_pattern ] . left		10493256						
ANR	10495316	Symbol	rx_sq		10493256						
ANR	10495317	Symbol	* argv		10493256						
ANR	10495318	Symbol	* * Order		10493256						
ANR	10495319	Symbol	* Order [ i ] . Y		10493256						
ANR	10495320	Symbol	bias_power		10493256						
ANR	10495321	Symbol	* * argv		10493256						
ANR	10495322	Symbol	Order [ choice ] . X		10493256						
ANR	10495323	Symbol	ThresholdArray		10493256						
ANR	10495324	Symbol	Order [ choice ] . Y		10493256						
ANR	10495325	Symbol	Order		10493256						
ANR	10495326	Symbol	* * i		10493256						
ANR	10495327	Symbol	NULL		10493256						
ANR	10495328	Symbol	level		10493256						
ANR	10495329	Symbol	MAX_ARRAY_WIDTH		10493256						
ANR	10495330	Symbol	RAND_MAX		10493256						
ANR	10495331	Symbol	gsarg_start		10493256						
ANR	10495332	Symbol	* * X		10493256						
ANR	10495333	Symbol	array_width		10493256						
ANR	10495334	Symbol	dot_direction		10493256						
ANR	10495335	Symbol	* choice		10493256						
ANR	10495336	Symbol	code		10493256						
ANR	10495337	Symbol	* * cX		10493256						
ANR	10495338	Symbol	choice_X		10493256						
ANR	10495339	Symbol	level_up		10493256						
ANR	10495340	Symbol	choice_Y		10493256						
ANR	10495341	Symbol	fp		10493256						
ANR	10495342	Symbol	argv		10493256						
ANR	10495343	Symbol	* min_dot_edges		10493256						
ANR	10495344	Symbol	* at_arg		10493256						
ANR	10495345	Symbol	MaxVal		10493256						
ANR	10495346	Symbol	row_direction		10493256						
ANR	10495347	Symbol	userow		10493256						
ANR	10495348	Symbol	row		10493256						
ANR	10495349	Symbol	value		10493256						
ANR	10495350	Symbol	argc		10493256						
ANR	10495351	Symbol	choice_range		10493256						
ANR	10495352	Symbol	rand_scaled		10493256						
ANR	10495353	Symbol	* X		10493256						
ANR	10495354	Symbol	SortRange		10493256						
ANR	10495355	Symbol	* Y		10493256						
ANR	10495356	Symbol	* choice_X		10493256						
ANR	10495357	Symbol	* choice_Y		10493256						
ANR	10495358	Symbol	* array_width		10493256						
ANR	10495359	Symbol	MinVal		10493256						
ANR	10495360	Symbol	& k		10493256						
ANR	10495361	Symbol	& m		10493256						
ANR	10495362	Symbol	* i		10493256						
ANR	10495363	Symbol	Order [ Y * array_width + X ] . X		10493256						
ANR	10495364	Symbol	Order [ Y * array_width + X ] . Y		10493256						
ANR	10495365	Symbol	& x		10493256						
ANR	10495366	Function	ValFunction	609:0:24603:25260							
ANR	10495367	FunctionDef	"ValFunction (int thisX , int thisY , int refX , int refY , double rx_sq , double ry_sq)"		10495366	0					
ANR	10495368	CompoundStatement		611:0:24692:25260	10495366	0					
ANR	10495369	IdentifierDeclStatement	"int dx , dy ;"	612:4:24698:24708	10495366	0	True				
ANR	10495370	IdentifierDecl	dx		10495366	0					
ANR	10495371	IdentifierDeclType	int		10495366	0					
ANR	10495372	Identifier	dx		10495366	1					
ANR	10495373	IdentifierDecl	dy		10495366	1					
ANR	10495374	IdentifierDeclType	int		10495366	0					
ANR	10495375	Identifier	dy		10495366	1					
ANR	10495376	IdentifierDeclStatement	double distance ;	613:4:24714:24729	10495366	1	True				
ANR	10495377	IdentifierDecl	distance		10495366	0					
ANR	10495378	IdentifierDeclType	double		10495366	0					
ANR	10495379	Identifier	distance		10495366	1					
ANR	10495380	ExpressionStatement	dx = abs ( refX - thisX )	615:4:24736:24758	10495366	2	True				
ANR	10495381	AssignmentExpression	dx = abs ( refX - thisX )		10495366	0		=			
ANR	10495382	Identifier	dx		10495366	0					
ANR	10495383	CallExpression	abs ( refX - thisX )		10495366	1					
ANR	10495384	Callee	abs		10495366	0					
ANR	10495385	Identifier	abs		10495366	0					
ANR	10495386	ArgumentList	refX - thisX		10495366	1					
ANR	10495387	Argument	refX - thisX		10495366	0					
ANR	10495388	AdditiveExpression	refX - thisX		10495366	0		-			
ANR	10495389	Identifier	refX		10495366	0					
ANR	10495390	Identifier	thisX		10495366	1					
ANR	10495391	IfStatement	if ( dx > array_width / 2 )		10495366	3					
ANR	10495392	Condition	dx > array_width / 2	616:8:24768:24785	10495366	0	True				
ANR	10495393	RelationalExpression	dx > array_width / 2		10495366	0		>			
ANR	10495394	Identifier	dx		10495366	0					
ANR	10495395	MultiplicativeExpression	array_width / 2		10495366	1		/			
ANR	10495396	Identifier	array_width		10495366	0					
ANR	10495397	PrimaryExpression	2		10495366	1					
ANR	10495398	ExpressionStatement	dx = array_width - dx	617:8:24796:24817	10495366	1	True				
ANR	10495399	AssignmentExpression	dx = array_width - dx		10495366	0		=			
ANR	10495400	Identifier	dx		10495366	0					
ANR	10495401	AdditiveExpression	array_width - dx		10495366	1		-			
ANR	10495402	Identifier	array_width		10495366	0					
ANR	10495403	Identifier	dx		10495366	1					
ANR	10495404	ExpressionStatement	dy = abs ( refY - thisY )	619:4:24824:24846	10495366	4	True				
ANR	10495405	AssignmentExpression	dy = abs ( refY - thisY )		10495366	0		=			
ANR	10495406	Identifier	dy		10495366	0					
ANR	10495407	CallExpression	abs ( refY - thisY )		10495366	1					
ANR	10495408	Callee	abs		10495366	0					
ANR	10495409	Identifier	abs		10495366	0					
ANR	10495410	ArgumentList	refY - thisY		10495366	1					
ANR	10495411	Argument	refY - thisY		10495366	0					
ANR	10495412	AdditiveExpression	refY - thisY		10495366	0		-			
ANR	10495413	Identifier	refY		10495366	0					
ANR	10495414	Identifier	thisY		10495366	1					
ANR	10495415	IfStatement	if ( dy > array_height / 2 )		10495366	5					
ANR	10495416	Condition	dy > array_height / 2	620:8:24856:24874	10495366	0	True				
ANR	10495417	RelationalExpression	dy > array_height / 2		10495366	0		>			
ANR	10495418	Identifier	dy		10495366	0					
ANR	10495419	MultiplicativeExpression	array_height / 2		10495366	1		/			
ANR	10495420	Identifier	array_height		10495366	0					
ANR	10495421	PrimaryExpression	2		10495366	1					
ANR	10495422	ExpressionStatement	dy = array_height - dy	621:8:24885:24907	10495366	1	True				
ANR	10495423	AssignmentExpression	dy = array_height - dy		10495366	0		=			
ANR	10495424	Identifier	dy		10495366	0					
ANR	10495425	AdditiveExpression	array_height - dy		10495366	1		-			
ANR	10495426	Identifier	array_height		10495366	0					
ANR	10495427	Identifier	dy		10495366	1					
ANR	10495428	ExpressionStatement	distance = ( ( double ) ( dx * dx ) / rx_sq ) + ( ( double ) ( dy * dy ) / ry_sq )	623:4:24914:24974	10495366	6	True				
ANR	10495429	AssignmentExpression	distance = ( ( double ) ( dx * dx ) / rx_sq ) + ( ( double ) ( dy * dy ) / ry_sq )		10495366	0		=			
ANR	10495430	Identifier	distance		10495366	0					
ANR	10495431	AdditiveExpression	( ( double ) ( dx * dx ) / rx_sq ) + ( ( double ) ( dy * dy ) / ry_sq )		10495366	1		+			
ANR	10495432	MultiplicativeExpression	( double ) ( dx * dx ) / rx_sq		10495366	0		/			
ANR	10495433	CastExpression	( double ) ( dx * dx )		10495366	0					
ANR	10495434	CastTarget	double		10495366	0					
ANR	10495435	MultiplicativeExpression	dx * dx		10495366	1		*			
ANR	10495436	Identifier	dx		10495366	0					
ANR	10495437	Identifier	dx		10495366	1					
ANR	10495438	Identifier	rx_sq		10495366	1					
ANR	10495439	MultiplicativeExpression	( double ) ( dy * dy ) / ry_sq		10495366	1		/			
ANR	10495440	CastExpression	( double ) ( dy * dy )		10495366	0					
ANR	10495441	CastTarget	double		10495366	0					
ANR	10495442	MultiplicativeExpression	dy * dy		10495366	1		*			
ANR	10495443	Identifier	dy		10495366	0					
ANR	10495444	Identifier	dy		10495366	1					
ANR	10495445	Identifier	ry_sq		10495366	1					
ANR	10495446	IfStatement	if ( ( dx == 0 ) || ( dy == 0 ) || ( dx == dy ) || ( ( dx + dy ) < 10 ) )		10495366	7					
ANR	10495447	Condition	( dx == 0 ) || ( dy == 0 ) || ( dx == dy ) || ( ( dx + dy ) < 10 )	628:8:25134:25188	10495366	0	True				
ANR	10495448	OrExpression	( dx == 0 ) || ( dy == 0 ) || ( dx == dy ) || ( ( dx + dy ) < 10 )		10495366	0		||			
ANR	10495449	EqualityExpression	dx == 0		10495366	0		==			
ANR	10495450	Identifier	dx		10495366	0					
ANR	10495451	PrimaryExpression	0		10495366	1					
ANR	10495452	OrExpression	( dy == 0 ) || ( dx == dy ) || ( ( dx + dy ) < 10 )		10495366	1		||			
ANR	10495453	EqualityExpression	dy == 0		10495366	0		==			
ANR	10495454	Identifier	dy		10495366	0					
ANR	10495455	PrimaryExpression	0		10495366	1					
ANR	10495456	OrExpression	( dx == dy ) || ( ( dx + dy ) < 10 )		10495366	1		||			
ANR	10495457	EqualityExpression	dx == dy		10495366	0		==			
ANR	10495458	Identifier	dx		10495366	0					
ANR	10495459	Identifier	dy		10495366	1					
ANR	10495460	RelationalExpression	( dx + dy ) < 10		10495366	1		<			
ANR	10495461	AdditiveExpression	dx + dy		10495366	0		+			
ANR	10495462	Identifier	dx		10495366	0					
ANR	10495463	Identifier	dy		10495366	1					
ANR	10495464	PrimaryExpression	10		10495366	1					
ANR	10495465	ExpressionStatement	distance *= 0.7	629:16:25207:25222	10495366	1	True				
ANR	10495466	AssignmentExpression	distance *= 0.7		10495366	0		*=			
ANR	10495467	Identifier	distance		10495366	0					
ANR	10495468	PrimaryExpression	0.7		10495366	1					
ANR	10495469	ReturnStatement	return ( 1.0 / distance ) ;	632:4:25236:25258	10495366	8	True				
ANR	10495470	MultiplicativeExpression	1.0 / distance		10495366	0		/			
ANR	10495471	PrimaryExpression	1.0		10495366	0					
ANR	10495472	Identifier	distance		10495366	1					
ANR	10495473	ReturnType	double		10495366	1					
ANR	10495474	Identifier	ValFunction		10495366	2					
ANR	10495475	ParameterList	"int thisX , int thisY , int refX , int refY , double rx_sq , double ry_sq"		10495366	3					
ANR	10495476	Parameter	int thisX	610:12:24622:24630	10495366	0	True				
ANR	10495477	ParameterType	int		10495366	0					
ANR	10495478	Identifier	thisX		10495366	1					
ANR	10495479	Parameter	int thisY	610:23:24633:24641	10495366	1	True				
ANR	10495480	ParameterType	int		10495366	0					
ANR	10495481	Identifier	thisY		10495366	1					
ANR	10495482	Parameter	int refX	610:34:24644:24651	10495366	2	True				
ANR	10495483	ParameterType	int		10495366	0					
ANR	10495484	Identifier	refX		10495366	1					
ANR	10495485	Parameter	int refY	610:44:24654:24661	10495366	3	True				
ANR	10495486	ParameterType	int		10495366	0					
ANR	10495487	Identifier	refY		10495366	1					
ANR	10495488	Parameter	double rx_sq	610:54:24664:24675	10495366	4	True				
ANR	10495489	ParameterType	double		10495366	0					
ANR	10495490	Identifier	rx_sq		10495366	1					
ANR	10495491	Parameter	double ry_sq	610:68:24678:24689	10495366	5	True				
ANR	10495492	ParameterType	double		10495366	0					
ANR	10495493	Identifier	ry_sq		10495366	1					
ANR	10495494	CFGEntryNode	ENTRY		10495366		True				
ANR	10495495	CFGExitNode	EXIT		10495366		True				
ANR	10495496	Symbol	refX		10495366						
ANR	10495497	Symbol	refY		10495366						
ANR	10495498	Symbol	abs		10495366						
ANR	10495499	Symbol	dx		10495366						
ANR	10495500	Symbol	distance		10495366						
ANR	10495501	Symbol	array_width		10495366						
ANR	10495502	Symbol	dy		10495366						
ANR	10495503	Symbol	thisY		10495366						
ANR	10495504	Symbol	ry_sq		10495366						
ANR	10495505	Symbol	thisX		10495366						
ANR	10495506	Symbol	rx_sq		10495366						
ANR	10495507	Symbol	array_height		10495366						
ANR	10495508	Function	CompareOrder	635:0:25263:25633							
ANR	10495509	FunctionDef	"CompareOrder (const void * vp , const void * vq)"		10495508	0					
ANR	10495510	CompoundStatement		637:0:25312:25633	10495508	0					
ANR	10495511	IdentifierDeclStatement	const Order_s * p = ( const Order_s * ) vp ;	638:4:25318:25356	10495508	0	True				
ANR	10495512	IdentifierDecl	* p = ( const Order_s * ) vp		10495508	0					
ANR	10495513	IdentifierDeclType	const Order_s *		10495508	0					
ANR	10495514	Identifier	p		10495508	1					
ANR	10495515	AssignmentExpression	* p = ( const Order_s * ) vp		10495508	2		=			
ANR	10495516	Identifier	p		10495508	0					
ANR	10495517	CastExpression	( const Order_s * ) vp		10495508	1					
ANR	10495518	CastTarget	const Order_s *		10495508	0					
ANR	10495519	Identifier	vp		10495508	1					
ANR	10495520	IdentifierDeclStatement	const Order_s * q = ( const Order_s * ) vq ;	639:4:25362:25400	10495508	1	True				
ANR	10495521	IdentifierDecl	* q = ( const Order_s * ) vq		10495508	0					
ANR	10495522	IdentifierDeclType	const Order_s *		10495508	0					
ANR	10495523	Identifier	q		10495508	1					
ANR	10495524	AssignmentExpression	* q = ( const Order_s * ) vq		10495508	2		=			
ANR	10495525	Identifier	q		10495508	0					
ANR	10495526	CastExpression	( const Order_s * ) vq		10495508	1					
ANR	10495527	CastTarget	const Order_s *		10495508	0					
ANR	10495528	Identifier	vq		10495508	1					
ANR	10495529	IdentifierDeclStatement	int retval = 0 ;	640:4:25406:25420	10495508	2	True				
ANR	10495530	IdentifierDecl	retval = 0		10495508	0					
ANR	10495531	IdentifierDeclType	int		10495508	0					
ANR	10495532	Identifier	retval		10495508	1					
ANR	10495533	AssignmentExpression	retval = 0		10495508	2		=			
ANR	10495534	Identifier	retval		10495508	0					
ANR	10495535	PrimaryExpression	0		10495508	1					
ANR	10495536	IfStatement	if ( Val [ p -> Y * array_width + p -> X ] < Val [ q -> Y * array_width + q -> X ] )		10495508	3					
ANR	10495537	Condition	Val [ p -> Y * array_width + p -> X ] < Val [ q -> Y * array_width + q -> X ]	642:8:25431:25493	10495508	0	True				
ANR	10495538	RelationalExpression	Val [ p -> Y * array_width + p -> X ] < Val [ q -> Y * array_width + q -> X ]		10495508	0		<			
ANR	10495539	ArrayIndexing	Val [ p -> Y * array_width + p -> X ]		10495508	0					
ANR	10495540	Identifier	Val		10495508	0					
ANR	10495541	AdditiveExpression	p -> Y * array_width + p -> X		10495508	1		+			
ANR	10495542	MultiplicativeExpression	p -> Y * array_width		10495508	0		*			
ANR	10495543	PtrMemberAccess	p -> Y		10495508	0					
ANR	10495544	Identifier	p		10495508	0					
ANR	10495545	Identifier	Y		10495508	1					
ANR	10495546	Identifier	array_width		10495508	1					
ANR	10495547	PtrMemberAccess	p -> X		10495508	1					
ANR	10495548	Identifier	p		10495508	0					
ANR	10495549	Identifier	X		10495508	1					
ANR	10495550	ArrayIndexing	Val [ q -> Y * array_width + q -> X ]		10495508	1					
ANR	10495551	Identifier	Val		10495508	0					
ANR	10495552	AdditiveExpression	q -> Y * array_width + q -> X		10495508	1		+			
ANR	10495553	MultiplicativeExpression	q -> Y * array_width		10495508	0		*			
ANR	10495554	PtrMemberAccess	q -> Y		10495508	0					
ANR	10495555	Identifier	q		10495508	0					
ANR	10495556	Identifier	Y		10495508	1					
ANR	10495557	Identifier	array_width		10495508	1					
ANR	10495558	PtrMemberAccess	q -> X		10495508	1					
ANR	10495559	Identifier	q		10495508	0					
ANR	10495560	Identifier	X		10495508	1					
ANR	10495561	ExpressionStatement	retval = - 1	643:7:25503:25514	10495508	1	True				
ANR	10495562	AssignmentExpression	retval = - 1		10495508	0		=			
ANR	10495563	Identifier	retval		10495508	0					
ANR	10495564	UnaryOperationExpression	- 1		10495508	1					
ANR	10495565	UnaryOperator	-		10495508	0					
ANR	10495566	PrimaryExpression	1		10495508	1					
ANR	10495567	ElseStatement	else		10495508	0					
ANR	10495568	IfStatement	if ( Val [ p -> Y * array_width + p -> X ] > Val [ q -> Y * array_width + q -> X ] )		10495508	0					
ANR	10495569	Condition	Val [ p -> Y * array_width + p -> X ] > Val [ q -> Y * array_width + q -> X ]	644:13:25529:25591	10495508	0	True				
ANR	10495570	RelationalExpression	Val [ p -> Y * array_width + p -> X ] > Val [ q -> Y * array_width + q -> X ]		10495508	0		>			
ANR	10495571	ArrayIndexing	Val [ p -> Y * array_width + p -> X ]		10495508	0					
ANR	10495572	Identifier	Val		10495508	0					
ANR	10495573	AdditiveExpression	p -> Y * array_width + p -> X		10495508	1		+			
ANR	10495574	MultiplicativeExpression	p -> Y * array_width		10495508	0		*			
ANR	10495575	PtrMemberAccess	p -> Y		10495508	0					
ANR	10495576	Identifier	p		10495508	0					
ANR	10495577	Identifier	Y		10495508	1					
ANR	10495578	Identifier	array_width		10495508	1					
ANR	10495579	PtrMemberAccess	p -> X		10495508	1					
ANR	10495580	Identifier	p		10495508	0					
ANR	10495581	Identifier	X		10495508	1					
ANR	10495582	ArrayIndexing	Val [ q -> Y * array_width + q -> X ]		10495508	1					
ANR	10495583	Identifier	Val		10495508	0					
ANR	10495584	AdditiveExpression	q -> Y * array_width + q -> X		10495508	1		+			
ANR	10495585	MultiplicativeExpression	q -> Y * array_width		10495508	0		*			
ANR	10495586	PtrMemberAccess	q -> Y		10495508	0					
ANR	10495587	Identifier	q		10495508	0					
ANR	10495588	Identifier	Y		10495508	1					
ANR	10495589	Identifier	array_width		10495508	1					
ANR	10495590	PtrMemberAccess	q -> X		10495508	1					
ANR	10495591	Identifier	q		10495508	0					
ANR	10495592	Identifier	X		10495508	1					
ANR	10495593	ExpressionStatement	retval = 1	645:7:25601:25611	10495508	1	True				
ANR	10495594	AssignmentExpression	retval = 1		10495508	0		=			
ANR	10495595	Identifier	retval		10495508	0					
ANR	10495596	PrimaryExpression	1		10495508	1					
ANR	10495597	ReturnStatement	return retval ;	647:4:25618:25631	10495508	4	True				
ANR	10495598	Identifier	retval		10495508	0					
ANR	10495599	ReturnType	int		10495508	1					
ANR	10495600	Identifier	CompareOrder		10495508	2					
ANR	10495601	ParameterList	"const void * vp , const void * vq"		10495508	3					
ANR	10495602	Parameter	const void * vp	636:13:25280:25293	10495508	0	True				
ANR	10495603	ParameterType	const void *		10495508	0					
ANR	10495604	Identifier	vp		10495508	1					
ANR	10495605	Parameter	const void * vq	636:29:25296:25309	10495508	1	True				
ANR	10495606	ParameterType	const void *		10495508	0					
ANR	10495607	Identifier	vq		10495508	1					
ANR	10495608	CFGEntryNode	ENTRY		10495508		True				
ANR	10495609	CFGExitNode	EXIT		10495508		True				
ANR	10495610	Symbol	Val		10495508						
ANR	10495611	Symbol	* p -> X		10495508						
ANR	10495612	Symbol	* q -> X		10495508						
ANR	10495613	Symbol	* q -> Y		10495508						
ANR	10495614	Symbol	* array_width		10495508						
ANR	10495615	Symbol	p -> Y		10495508						
ANR	10495616	Symbol	retval		10495508						
ANR	10495617	Symbol	p -> X		10495508						
ANR	10495618	Symbol	p		10495508						
ANR	10495619	Symbol	q		10495508						
ANR	10495620	Symbol	q -> Y		10495508						
ANR	10495621	Symbol	q -> X		10495508						
ANR	10495622	Symbol	array_width		10495508						
ANR	10495623	Symbol	* Val		10495508						
ANR	10495624	Symbol	vp		10495508						
ANR	10495625	Symbol	* * q		10495508						
ANR	10495626	Symbol	* p		10495508						
ANR	10495627	Symbol	vq		10495508						
ANR	10495628	Symbol	* * p		10495508						
ANR	10495629	Symbol	* q		10495508						
ANR	10495630	Symbol	* p -> Y		10495508						
ANR	10495631	Function	do_dot	650:0:25636:27066							
ANR	10495632	FunctionDef	"do_dot (int choice_X , int choice_Y , int level , int last)"		10495631	0					
ANR	10495633	CompoundStatement		652:0:25696:27066	10495631	0					
ANR	10495634	IdentifierDeclStatement	"int code = 0 , X , Y ;"	653:4:25702:25720	10495631	0	True				
ANR	10495635	IdentifierDecl	code = 0		10495631	0					
ANR	10495636	IdentifierDeclType	int		10495631	0					
ANR	10495637	Identifier	code		10495631	1					
ANR	10495638	AssignmentExpression	code = 0		10495631	2		=			
ANR	10495639	Identifier	code		10495631	0					
ANR	10495640	PrimaryExpression	0		10495631	1					
ANR	10495641	IdentifierDecl	X		10495631	1					
ANR	10495642	IdentifierDeclType	int		10495631	0					
ANR	10495643	Identifier	X		10495631	1					
ANR	10495644	IdentifierDecl	Y		10495631	2					
ANR	10495645	IdentifierDeclType	int		10495631	0					
ANR	10495646	Identifier	Y		10495631	1					
ANR	10495647	IdentifierDeclStatement	double value ;	654:4:25726:25738	10495631	1	True				
ANR	10495648	IdentifierDecl	value		10495631	0					
ANR	10495649	IdentifierDeclType	double		10495631	0					
ANR	10495650	Identifier	value		10495631	1					
ANR	10495651	ExpressionStatement	ThresholdArray [ choice_X ] [ choice_Y ] = level	656:4:25745:25787	10495631	2	True				
ANR	10495652	AssignmentExpression	ThresholdArray [ choice_X ] [ choice_Y ] = level		10495631	0		=			
ANR	10495653	ArrayIndexing	ThresholdArray [ choice_X ] [ choice_Y ]		10495631	0					
ANR	10495654	ArrayIndexing	ThresholdArray [ choice_X ]		10495631	0					
ANR	10495655	Identifier	ThresholdArray		10495631	0					
ANR	10495656	Identifier	choice_X		10495631	1					
ANR	10495657	Identifier	choice_Y		10495631	1					
ANR	10495658	Identifier	level		10495631	1					
ANR	10495659	ExpressionStatement	value = Val [ choice_Y * array_width + choice_X ]	657:4:25793:25841	10495631	3	True				
ANR	10495660	AssignmentExpression	value = Val [ choice_Y * array_width + choice_X ]		10495631	0		=			
ANR	10495661	Identifier	value		10495631	0					
ANR	10495662	ArrayIndexing	Val [ choice_Y * array_width + choice_X ]		10495631	1					
ANR	10495663	Identifier	Val		10495631	0					
ANR	10495664	AdditiveExpression	choice_Y * array_width + choice_X		10495631	1		+			
ANR	10495665	MultiplicativeExpression	choice_Y * array_width		10495631	0		*			
ANR	10495666	Identifier	choice_Y		10495631	0					
ANR	10495667	Identifier	array_width		10495631	1					
ANR	10495668	Identifier	choice_X		10495631	1					
ANR	10495669	ExpressionStatement	value = ( value - MinVal ) / ValRange	658:4:25847:25880	10495631	4	True				
ANR	10495670	AssignmentExpression	value = ( value - MinVal ) / ValRange		10495631	0		=			
ANR	10495671	Identifier	value		10495631	0					
ANR	10495672	MultiplicativeExpression	( value - MinVal ) / ValRange		10495631	1		/			
ANR	10495673	AdditiveExpression	value - MinVal		10495631	0		-			
ANR	10495674	Identifier	value		10495631	0					
ANR	10495675	Identifier	MinVal		10495631	1					
ANR	10495676	Identifier	ValRange		10495631	1					
ANR	10495677	ExpressionStatement	"fprintf ( fp , ""%d\\t%d\\n"" , choice_X , choice_Y )"	659:4:25886:25926	10495631	5	True				
ANR	10495678	CallExpression	"fprintf ( fp , ""%d\\t%d\\n"" , choice_X , choice_Y )"		10495631	0					
ANR	10495679	Callee	fprintf		10495631	0					
ANR	10495680	Identifier	fprintf		10495631	0					
ANR	10495681	ArgumentList	fp		10495631	1					
ANR	10495682	Argument	fp		10495631	0					
ANR	10495683	Identifier	fp		10495631	0					
ANR	10495684	Argument	"""%d\\t%d\\n"""		10495631	1					
ANR	10495685	PrimaryExpression	"""%d\\t%d\\n"""		10495631	0					
ANR	10495686	Argument	choice_X		10495631	2					
ANR	10495687	Identifier	choice_X		10495631	0					
ANR	10495688	Argument	choice_Y		10495631	3					
ANR	10495689	Identifier	choice_Y		10495631	0					
ANR	10495690	IfStatement	"if ( ( code = update_gs_dot ( choice_X , choice_Y , last ) ) < 0 )"		10495631	6					
ANR	10495691	Condition	"( code = update_gs_dot ( choice_X , choice_Y , last ) ) < 0"	662:8:25954:26003	10495631	0	True				
ANR	10495692	RelationalExpression	"( code = update_gs_dot ( choice_X , choice_Y , last ) ) < 0"		10495631	0		<			
ANR	10495693	AssignmentExpression	"code = update_gs_dot ( choice_X , choice_Y , last )"		10495631	0		=			
ANR	10495694	Identifier	code		10495631	0					
ANR	10495695	CallExpression	"update_gs_dot ( choice_X , choice_Y , last )"		10495631	1					
ANR	10495696	Callee	update_gs_dot		10495631	0					
ANR	10495697	Identifier	update_gs_dot		10495631	0					
ANR	10495698	ArgumentList	choice_X		10495631	1					
ANR	10495699	Argument	choice_X		10495631	0					
ANR	10495700	Identifier	choice_X		10495631	0					
ANR	10495701	Argument	choice_Y		10495631	1					
ANR	10495702	Identifier	choice_Y		10495631	0					
ANR	10495703	Argument	last		10495631	2					
ANR	10495704	Identifier	last		10495631	0					
ANR	10495705	PrimaryExpression	0		10495631	1					
ANR	10495706	ReturnStatement	return - 1 ;	663:8:26014:26023	10495631	1	True				
ANR	10495707	UnaryOperationExpression	- 1		10495631	0					
ANR	10495708	UnaryOperator	-		10495631	0					
ANR	10495709	PrimaryExpression	1		10495631	1					
ANR	10495710	ExpressionStatement	Val [ choice_Y * array_width + choice_X ] = BIG_FLOAT	666:4:26037:26088	10495631	7	True				
ANR	10495711	AssignmentExpression	Val [ choice_Y * array_width + choice_X ] = BIG_FLOAT		10495631	0		=			
ANR	10495712	ArrayIndexing	Val [ choice_Y * array_width + choice_X ]		10495631	0					
ANR	10495713	Identifier	Val		10495631	0					
ANR	10495714	AdditiveExpression	choice_Y * array_width + choice_X		10495631	1		+			
ANR	10495715	MultiplicativeExpression	choice_Y * array_width		10495631	0		*			
ANR	10495716	Identifier	choice_Y		10495631	0					
ANR	10495717	Identifier	array_width		10495631	1					
ANR	10495718	Identifier	choice_X		10495631	1					
ANR	10495719	Identifier	BIG_FLOAT		10495631	1					
ANR	10495720	ExpressionStatement	MinVal = BIG_FLOAT	669:4:26267:26285	10495631	8	True				
ANR	10495721	AssignmentExpression	MinVal = BIG_FLOAT		10495631	0		=			
ANR	10495722	Identifier	MinVal		10495631	0					
ANR	10495723	Identifier	BIG_FLOAT		10495631	1					
ANR	10495724	ExpressionStatement	MaxVal = 0.0	670:4:26291:26303	10495631	9	True				
ANR	10495725	AssignmentExpression	MaxVal = 0.0		10495631	0		=			
ANR	10495726	Identifier	MaxVal		10495631	0					
ANR	10495727	PrimaryExpression	0.0		10495631	1					
ANR	10495728	ForStatement	for ( Y = 0 ; Y < array_height ; Y ++ )		10495631	10					
ANR	10495729	ForInit	Y = 0 ;	671:9:26314:26317	10495631	0	True				
ANR	10495730	AssignmentExpression	Y = 0		10495631	0		=			
ANR	10495731	Identifier	Y		10495631	0					
ANR	10495732	PrimaryExpression	0		10495631	1					
ANR	10495733	Condition	Y < array_height	671:14:26319:26334	10495631	1	True				
ANR	10495734	RelationalExpression	Y < array_height		10495631	0		<			
ANR	10495735	Identifier	Y		10495631	0					
ANR	10495736	Identifier	array_height		10495631	1					
ANR	10495737	PostIncDecOperationExpression	Y ++	671:32:26337:26339	10495631	2	True				
ANR	10495738	Identifier	Y		10495631	0					
ANR	10495739	IncDec	++		10495631	1					
ANR	10495740	CompoundStatement		20:37:645:645	10495631	3					
ANR	10495741	ForStatement	for ( X = 0 ; X < array_width ; X ++ )		10495631	0					
ANR	10495742	ForInit	X = 0 ;	672:13:26357:26360	10495631	0	True				
ANR	10495743	AssignmentExpression	X = 0		10495631	0		=			
ANR	10495744	Identifier	X		10495631	0					
ANR	10495745	PrimaryExpression	0		10495631	1					
ANR	10495746	Condition	X < array_width	672:18:26362:26376	10495631	1	True				
ANR	10495747	RelationalExpression	X < array_width		10495631	0		<			
ANR	10495748	Identifier	X		10495631	0					
ANR	10495749	Identifier	array_width		10495631	1					
ANR	10495750	PostIncDecOperationExpression	X ++	672:35:26379:26381	10495631	2	True				
ANR	10495751	Identifier	X		10495631	0					
ANR	10495752	IncDec	++		10495631	1					
ANR	10495753	CompoundStatement		21:40:687:687	10495631	3					
ANR	10495754	IfStatement	if ( ThresholdArray [ X ] [ Y ] == - 1 )		10495631	0					
ANR	10495755	Condition	ThresholdArray [ X ] [ Y ] == - 1	673:16:26402:26427	10495631	0	True				
ANR	10495756	EqualityExpression	ThresholdArray [ X ] [ Y ] == - 1		10495631	0		==			
ANR	10495757	ArrayIndexing	ThresholdArray [ X ] [ Y ]		10495631	0					
ANR	10495758	ArrayIndexing	ThresholdArray [ X ]		10495631	0					
ANR	10495759	Identifier	ThresholdArray		10495631	0					
ANR	10495760	Identifier	X		10495631	1					
ANR	10495761	Identifier	Y		10495631	1					
ANR	10495762	UnaryOperationExpression	- 1		10495631	1					
ANR	10495763	UnaryOperator	-		10495631	0					
ANR	10495764	PrimaryExpression	1		10495631	1					
ANR	10495765	CompoundStatement		25:16:875:995	10495631	1					
ANR	10495766	IdentifierDeclStatement	double rx_sq = resolution [ 0 ] * resolution [ 0 ] ;	674:16:26448:26492	10495631	0	True				
ANR	10495767	IdentifierDecl	rx_sq = resolution [ 0 ] * resolution [ 0 ]		10495631	0					
ANR	10495768	IdentifierDeclType	double		10495631	0					
ANR	10495769	Identifier	rx_sq		10495631	1					
ANR	10495770	AssignmentExpression	rx_sq = resolution [ 0 ] * resolution [ 0 ]		10495631	2		=			
ANR	10495771	Identifier	rx_sq		10495631	0					
ANR	10495772	MultiplicativeExpression	resolution [ 0 ] * resolution [ 0 ]		10495631	1		*			
ANR	10495773	ArrayIndexing	resolution [ 0 ]		10495631	0					
ANR	10495774	Identifier	resolution		10495631	0					
ANR	10495775	PrimaryExpression	0		10495631	1					
ANR	10495776	ArrayIndexing	resolution [ 0 ]		10495631	1					
ANR	10495777	Identifier	resolution		10495631	0					
ANR	10495778	PrimaryExpression	0		10495631	1					
ANR	10495779	IdentifierDeclStatement	double ry_sq = resolution [ 1 ] * resolution [ 1 ] ;	675:16:26510:26554	10495631	1	True				
ANR	10495780	IdentifierDecl	ry_sq = resolution [ 1 ] * resolution [ 1 ]		10495631	0					
ANR	10495781	IdentifierDeclType	double		10495631	0					
ANR	10495782	Identifier	ry_sq		10495631	1					
ANR	10495783	AssignmentExpression	ry_sq = resolution [ 1 ] * resolution [ 1 ]		10495631	2		=			
ANR	10495784	Identifier	ry_sq		10495631	0					
ANR	10495785	MultiplicativeExpression	resolution [ 1 ] * resolution [ 1 ]		10495631	1		*			
ANR	10495786	ArrayIndexing	resolution [ 1 ]		10495631	0					
ANR	10495787	Identifier	resolution		10495631	0					
ANR	10495788	PrimaryExpression	1		10495631	1					
ANR	10495789	ArrayIndexing	resolution [ 1 ]		10495631	1					
ANR	10495790	Identifier	resolution		10495631	0					
ANR	10495791	PrimaryExpression	1		10495631	1					
ANR	10495792	IdentifierDeclStatement	"double vtmp = Val [ Y * array_width + X ] + ValFunction ( X , Y , choice_X , choice_Y , rx_sq , ry_sq ) ;"	676:16:26572:26692	10495631	2	True				
ANR	10495793	IdentifierDecl	"vtmp = Val [ Y * array_width + X ] + ValFunction ( X , Y , choice_X , choice_Y , rx_sq , ry_sq )"		10495631	0					
ANR	10495794	IdentifierDeclType	double		10495631	0					
ANR	10495795	Identifier	vtmp		10495631	1					
ANR	10495796	AssignmentExpression	"vtmp = Val [ Y * array_width + X ] + ValFunction ( X , Y , choice_X , choice_Y , rx_sq , ry_sq )"		10495631	2		=			
ANR	10495797	Identifier	vtmp		10495631	0					
ANR	10495798	AdditiveExpression	"Val [ Y * array_width + X ] + ValFunction ( X , Y , choice_X , choice_Y , rx_sq , ry_sq )"		10495631	1		+			
ANR	10495799	ArrayIndexing	Val [ Y * array_width + X ]		10495631	0					
ANR	10495800	Identifier	Val		10495631	0					
ANR	10495801	AdditiveExpression	Y * array_width + X		10495631	1		+			
ANR	10495802	MultiplicativeExpression	Y * array_width		10495631	0		*			
ANR	10495803	Identifier	Y		10495631	0					
ANR	10495804	Identifier	array_width		10495631	1					
ANR	10495805	Identifier	X		10495631	1					
ANR	10495806	CallExpression	"ValFunction ( X , Y , choice_X , choice_Y , rx_sq , ry_sq )"		10495631	1					
ANR	10495807	Callee	ValFunction		10495631	0					
ANR	10495808	Identifier	ValFunction		10495631	0					
ANR	10495809	ArgumentList	X		10495631	1					
ANR	10495810	Argument	X		10495631	0					
ANR	10495811	Identifier	X		10495631	0					
ANR	10495812	Argument	Y		10495631	1					
ANR	10495813	Identifier	Y		10495631	0					
ANR	10495814	Argument	choice_X		10495631	2					
ANR	10495815	Identifier	choice_X		10495631	0					
ANR	10495816	Argument	choice_Y		10495631	3					
ANR	10495817	Identifier	choice_Y		10495631	0					
ANR	10495818	Argument	rx_sq		10495631	4					
ANR	10495819	Identifier	rx_sq		10495631	0					
ANR	10495820	Argument	ry_sq		10495631	5					
ANR	10495821	Identifier	ry_sq		10495631	0					
ANR	10495822	ExpressionStatement	Val [ Y * array_width + X ] = vtmp	679:17:26712:26743	10495631	3	True				
ANR	10495823	AssignmentExpression	Val [ Y * array_width + X ] = vtmp		10495631	0		=			
ANR	10495824	ArrayIndexing	Val [ Y * array_width + X ]		10495631	0					
ANR	10495825	Identifier	Val		10495631	0					
ANR	10495826	AdditiveExpression	Y * array_width + X		10495631	1		+			
ANR	10495827	MultiplicativeExpression	Y * array_width		10495631	0		*			
ANR	10495828	Identifier	Y		10495631	0					
ANR	10495829	Identifier	array_width		10495631	1					
ANR	10495830	Identifier	X		10495631	1					
ANR	10495831	Identifier	vtmp		10495631	1					
ANR	10495832	IfStatement	if ( vtmp < MinVal )		10495631	4					
ANR	10495833	Condition	vtmp < MinVal	680:20:26765:26777	10495631	0	True				
ANR	10495834	RelationalExpression	vtmp < MinVal		10495631	0		<			
ANR	10495835	Identifier	vtmp		10495631	0					
ANR	10495836	Identifier	MinVal		10495631	1					
ANR	10495837	ExpressionStatement	MinVal = vtmp	681:20:26800:26813	10495631	1	True				
ANR	10495838	AssignmentExpression	MinVal = vtmp		10495631	0		=			
ANR	10495839	Identifier	MinVal		10495631	0					
ANR	10495840	Identifier	vtmp		10495631	1					
ANR	10495841	IfStatement	if ( vtmp > MaxVal )		10495631	5					
ANR	10495842	Condition	vtmp > MaxVal	682:20:26835:26847	10495631	0	True				
ANR	10495843	RelationalExpression	vtmp > MaxVal		10495631	0		>			
ANR	10495844	Identifier	vtmp		10495631	0					
ANR	10495845	Identifier	MaxVal		10495631	1					
ANR	10495846	ExpressionStatement	MaxVal = vtmp	683:20:26870:26883	10495631	1	True				
ANR	10495847	AssignmentExpression	MaxVal = vtmp		10495631	0		=			
ANR	10495848	Identifier	MaxVal		10495631	0					
ANR	10495849	Identifier	vtmp		10495631	1					
ANR	10495850	ExpressionStatement	ValRange = MaxVal - MinVal	687:4:26972:26998	10495631	11	True				
ANR	10495851	AssignmentExpression	ValRange = MaxVal - MinVal		10495631	0		=			
ANR	10495852	Identifier	ValRange		10495631	0					
ANR	10495853	AdditiveExpression	MaxVal - MinVal		10495631	1		-			
ANR	10495854	Identifier	MaxVal		10495631	0					
ANR	10495855	Identifier	MinVal		10495631	1					
ANR	10495856	IfStatement	if ( ValRange == 0.0 )		10495631	12					
ANR	10495857	Condition	ValRange == 0.0	688:8:27008:27022	10495631	0	True				
ANR	10495858	EqualityExpression	ValRange == 0.0		10495631	0		==			
ANR	10495859	Identifier	ValRange		10495631	0					
ANR	10495860	PrimaryExpression	0.0		10495631	1					
ANR	10495861	ExpressionStatement	ValRange = 1.0	689:8:27033:27047	10495631	1	True				
ANR	10495862	AssignmentExpression	ValRange = 1.0		10495631	0		=			
ANR	10495863	Identifier	ValRange		10495631	0					
ANR	10495864	PrimaryExpression	1.0		10495631	1					
ANR	10495865	ReturnStatement	return code ;	690:4:27053:27064	10495631	13	True				
ANR	10495866	Identifier	code		10495631	0					
ANR	10495867	ReturnType	int		10495631	1					
ANR	10495868	Identifier	do_dot		10495631	2					
ANR	10495869	ParameterList	"int choice_X , int choice_Y , int level , int last"		10495631	3					
ANR	10495870	Parameter	int choice_X	651:7:25647:25658	10495631	0	True				
ANR	10495871	ParameterType	int		10495631	0					
ANR	10495872	Identifier	choice_X		10495631	1					
ANR	10495873	Parameter	int choice_Y	651:21:25661:25672	10495631	1	True				
ANR	10495874	ParameterType	int		10495631	0					
ANR	10495875	Identifier	choice_Y		10495631	1					
ANR	10495876	Parameter	int level	651:35:25675:25683	10495631	2	True				
ANR	10495877	ParameterType	int		10495631	0					
ANR	10495878	Identifier	level		10495631	1					
ANR	10495879	Parameter	int last	651:46:25686:25693	10495631	3	True				
ANR	10495880	ParameterType	int		10495631	0					
ANR	10495881	Identifier	last		10495631	1					
ANR	10495882	CFGEntryNode	ENTRY		10495631		True				
ANR	10495883	CFGExitNode	EXIT		10495631		True				
ANR	10495884	Symbol	Val		10495631						
ANR	10495885	Symbol	code		10495631						
ANR	10495886	Symbol	choice_X		10495631						
ANR	10495887	Symbol	choice_Y		10495631						
ANR	10495888	Symbol	rx_sq		10495631						
ANR	10495889	Symbol	ValFunction		10495631						
ANR	10495890	Symbol	fp		10495631						
ANR	10495891	Symbol	resolution		10495631						
ANR	10495892	Symbol	MaxVal		10495631						
ANR	10495893	Symbol	BIG_FLOAT		10495631						
ANR	10495894	Symbol	* Val		10495631						
ANR	10495895	Symbol	vtmp		10495631						
ANR	10495896	Symbol	X		10495631						
ANR	10495897	Symbol	Y		10495631						
ANR	10495898	Symbol	value		10495631						
ANR	10495899	Symbol	ThresholdArray		10495631						
ANR	10495900	Symbol	ValRange		10495631						
ANR	10495901	Symbol	* X		10495631						
ANR	10495902	Symbol	* * ThresholdArray		10495631						
ANR	10495903	Symbol	* Y		10495631						
ANR	10495904	Symbol	last		10495631						
ANR	10495905	Symbol	level		10495631						
ANR	10495906	Symbol	* choice_X		10495631						
ANR	10495907	Symbol	* choice_Y		10495631						
ANR	10495908	Symbol	ry_sq		10495631						
ANR	10495909	Symbol	* ThresholdArray		10495631						
ANR	10495910	Symbol	* array_width		10495631						
ANR	10495911	Symbol	array_height		10495631						
ANR	10495912	Symbol	MinVal		10495631						
ANR	10495913	Symbol	* * X		10495631						
ANR	10495914	Symbol	* * choice_X		10495631						
ANR	10495915	Symbol	array_width		10495631						
ANR	10495916	Symbol	update_gs_dot		10495631						
ANR	10495917	Symbol	* resolution		10495631						
ANR	10495918	DeclStmt									
ANR	10495919	Decl							void	void *	instance
ANR	10495920	DeclStmt									
ANR	10495921	Decl							GSDLL	GSDLL	gsdll
ANR	10495922	DeclStmt									
ANR	10495923	Decl							BOOL	BOOL	quitnow
ANR	10495924	DeclStmt									
ANR	10495925	Decl							HANDLE	HANDLE	hthread
ANR	10495926	DeclStmt									
ANR	10495927	Decl							DWORD	DWORD	thread_id
ANR	10495928	DeclStmt									
ANR	10495929	Decl							HWND	HWND	hwndtext
ANR	10495930	DeclStmt									
ANR	10495931	Decl							HWND	HWND	hwndforeground
ANR	10495932	DeclStmt									
ANR	10495933	Decl							int	int	loop_ctr
ANR	10495934	DeclStmt									
ANR	10495935	Decl							char	char [ ]	start_string
ANR	10495936	Function	gsdll_stdin	728:0:27742:27856							
ANR	10495937	FunctionDef	"gsdll_stdin (void * instance , char * buf , int len)"		10495936	0					
ANR	10495938	CompoundStatement		730:0:27811:27856	10495936	0					
ANR	10495939	ReturnStatement	"return _read ( fileno ( stdin ) , buf , len ) ;"	731:4:27817:27854	10495936	0	True				
ANR	10495940	CallExpression	"_read ( fileno ( stdin ) , buf , len )"		10495936	0					
ANR	10495941	Callee	_read		10495936	0					
ANR	10495942	Identifier	_read		10495936	0					
ANR	10495943	ArgumentList	fileno ( stdin )		10495936	1					
ANR	10495944	Argument	fileno ( stdin )		10495936	0					
ANR	10495945	CallExpression	fileno ( stdin )		10495936	0					
ANR	10495946	Callee	fileno		10495936	0					
ANR	10495947	Identifier	fileno		10495936	0					
ANR	10495948	ArgumentList	stdin		10495936	1					
ANR	10495949	Argument	stdin		10495936	0					
ANR	10495950	Identifier	stdin		10495936	0					
ANR	10495951	Argument	buf		10495936	1					
ANR	10495952	Identifier	buf		10495936	0					
ANR	10495953	Argument	len		10495936	2					
ANR	10495954	Identifier	len		10495936	0					
ANR	10495955	ReturnType	static int GSDLLCALL		10495936	1					
ANR	10495956	Identifier	gsdll_stdin		10495936	2					
ANR	10495957	ParameterList	"void * instance , char * buf , int len"		10495936	3					
ANR	10495958	Parameter	void * instance	729:12:27775:27788	10495936	0	True				
ANR	10495959	ParameterType	void *		10495936	0					
ANR	10495960	Identifier	instance		10495936	1					
ANR	10495961	Parameter	char * buf	729:28:27791:27799	10495936	1	True				
ANR	10495962	ParameterType	char *		10495936	0					
ANR	10495963	Identifier	buf		10495936	1					
ANR	10495964	Parameter	int len	729:39:27802:27808	10495936	2	True				
ANR	10495965	ParameterType	int		10495936	0					
ANR	10495966	Identifier	len		10495936	1					
ANR	10495967	CFGEntryNode	ENTRY		10495936		True				
ANR	10495968	CFGExitNode	EXIT		10495936		True				
ANR	10495969	Symbol	buf		10495936						
ANR	10495970	Symbol	stdin		10495936						
ANR	10495971	Symbol	instance		10495936						
ANR	10495972	Symbol	len		10495936						
ANR	10495973	Symbol	_read		10495936						
ANR	10495974	Symbol	fileno		10495936						
ANR	10495975	Function	gsdll_stdout	734:0:27859:28006							
ANR	10495976	FunctionDef	"gsdll_stdout (void * instance , const char * str , int len)"		10495975	0					
ANR	10495977	CompoundStatement		736:0:27935:28006	10495975	0					
ANR	10495978	ExpressionStatement	"fwrite ( str , 1 , len , stdout )"	737:4:27941:27968	10495975	0	True				
ANR	10495979	CallExpression	"fwrite ( str , 1 , len , stdout )"		10495975	0					
ANR	10495980	Callee	fwrite		10495975	0					
ANR	10495981	Identifier	fwrite		10495975	0					
ANR	10495982	ArgumentList	str		10495975	1					
ANR	10495983	Argument	str		10495975	0					
ANR	10495984	Identifier	str		10495975	0					
ANR	10495985	Argument	1		10495975	1					
ANR	10495986	PrimaryExpression	1		10495975	0					
ANR	10495987	Argument	len		10495975	2					
ANR	10495988	Identifier	len		10495975	0					
ANR	10495989	Argument	stdout		10495975	3					
ANR	10495990	Identifier	stdout		10495975	0					
ANR	10495991	ExpressionStatement	fflush ( stdout )	738:4:27974:27988	10495975	1	True				
ANR	10495992	CallExpression	fflush ( stdout )		10495975	0					
ANR	10495993	Callee	fflush		10495975	0					
ANR	10495994	Identifier	fflush		10495975	0					
ANR	10495995	ArgumentList	stdout		10495975	1					
ANR	10495996	Argument	stdout		10495975	0					
ANR	10495997	Identifier	stdout		10495975	0					
ANR	10495998	ReturnStatement	return len ;	739:4:27994:28004	10495975	2	True				
ANR	10495999	Identifier	len		10495975	0					
ANR	10496000	ReturnType	static int GSDLLCALL		10495975	1					
ANR	10496001	Identifier	gsdll_stdout		10495975	2					
ANR	10496002	ParameterList	"void * instance , const char * str , int len"		10495975	3					
ANR	10496003	Parameter	void * instance	735:13:27893:27906	10495975	0	True				
ANR	10496004	ParameterType	void *		10495975	0					
ANR	10496005	Identifier	instance		10495975	1					
ANR	10496006	Parameter	const char * str	735:29:27909:27923	10495975	1	True				
ANR	10496007	ParameterType	const char *		10495975	0					
ANR	10496008	Identifier	str		10495975	1					
ANR	10496009	Parameter	int len	735:46:27926:27932	10495975	2	True				
ANR	10496010	ParameterType	int		10495975	0					
ANR	10496011	Identifier	len		10495975	1					
ANR	10496012	CFGEntryNode	ENTRY		10495975		True				
ANR	10496013	CFGExitNode	EXIT		10495975		True				
ANR	10496014	Symbol	str		10495975						
ANR	10496015	Symbol	instance		10495975						
ANR	10496016	Symbol	len		10495975						
ANR	10496017	Symbol	stdout		10495975						
ANR	10496018	Function	gsdll_stderr	742:0:28009:28156							
ANR	10496019	FunctionDef	"gsdll_stderr (void * instance , const char * str , int len)"		10496018	0					
ANR	10496020	CompoundStatement		744:0:28085:28156	10496018	0					
ANR	10496021	ExpressionStatement	"fwrite ( str , 1 , len , stderr )"	745:4:28091:28118	10496018	0	True				
ANR	10496022	CallExpression	"fwrite ( str , 1 , len , stderr )"		10496018	0					
ANR	10496023	Callee	fwrite		10496018	0					
ANR	10496024	Identifier	fwrite		10496018	0					
ANR	10496025	ArgumentList	str		10496018	1					
ANR	10496026	Argument	str		10496018	0					
ANR	10496027	Identifier	str		10496018	0					
ANR	10496028	Argument	1		10496018	1					
ANR	10496029	PrimaryExpression	1		10496018	0					
ANR	10496030	Argument	len		10496018	2					
ANR	10496031	Identifier	len		10496018	0					
ANR	10496032	Argument	stderr		10496018	3					
ANR	10496033	Identifier	stderr		10496018	0					
ANR	10496034	ExpressionStatement	fflush ( stderr )	746:4:28124:28138	10496018	1	True				
ANR	10496035	CallExpression	fflush ( stderr )		10496018	0					
ANR	10496036	Callee	fflush		10496018	0					
ANR	10496037	Identifier	fflush		10496018	0					
ANR	10496038	ArgumentList	stderr		10496018	1					
ANR	10496039	Argument	stderr		10496018	0					
ANR	10496040	Identifier	stderr		10496018	0					
ANR	10496041	ReturnStatement	return len ;	747:4:28144:28154	10496018	2	True				
ANR	10496042	Identifier	len		10496018	0					
ANR	10496043	ReturnType	static int GSDLLCALL		10496018	1					
ANR	10496044	Identifier	gsdll_stderr		10496018	2					
ANR	10496045	ParameterList	"void * instance , const char * str , int len"		10496018	3					
ANR	10496046	Parameter	void * instance	743:13:28043:28056	10496018	0	True				
ANR	10496047	ParameterType	void *		10496018	0					
ANR	10496048	Identifier	instance		10496018	1					
ANR	10496049	Parameter	const char * str	743:29:28059:28073	10496018	1	True				
ANR	10496050	ParameterType	const char *		10496018	0					
ANR	10496051	Identifier	str		10496018	1					
ANR	10496052	Parameter	int len	743:46:28076:28082	10496018	2	True				
ANR	10496053	ParameterType	int		10496018	0					
ANR	10496054	Identifier	len		10496018	1					
ANR	10496055	CFGEntryNode	ENTRY		10496018		True				
ANR	10496056	CFGExitNode	EXIT		10496018		True				
ANR	10496057	Symbol	str		10496018						
ANR	10496058	Symbol	instance		10496018						
ANR	10496059	Symbol	len		10496018						
ANR	10496060	Symbol	stderr		10496018						
ANR	10496061	Function	winthread	768:0:28800:29820							
ANR	10496062	FunctionDef	winthread (void * arg)		10496061	0					
ANR	10496063	CompoundStatement		769:0:28833:29820	10496061	0					
ANR	10496064	IdentifierDeclStatement	MSG msg ;	770:4:28839:28846	10496061	0	True				
ANR	10496065	IdentifierDecl	msg		10496061	0					
ANR	10496066	IdentifierDeclType	MSG		10496061	0					
ANR	10496067	Identifier	msg		10496061	1					
ANR	10496068	ExpressionStatement	thread_id = GetCurrentThreadId ( )	771:4:28852:28884	10496061	1	True				
ANR	10496069	AssignmentExpression	thread_id = GetCurrentThreadId ( )		10496061	0		=			
ANR	10496070	Identifier	thread_id		10496061	0					
ANR	10496071	CallExpression	GetCurrentThreadId ( )		10496061	1					
ANR	10496072	Callee	GetCurrentThreadId		10496061	0					
ANR	10496073	Identifier	GetCurrentThreadId		10496061	0					
ANR	10496074	ArgumentList			10496061	1					
ANR	10496075	ExpressionStatement	hthread = GetCurrentThread ( )	772:4:28890:28918	10496061	2	True				
ANR	10496076	AssignmentExpression	hthread = GetCurrentThread ( )		10496061	0		=			
ANR	10496077	Identifier	hthread		10496061	0					
ANR	10496078	CallExpression	GetCurrentThread ( )		10496061	1					
ANR	10496079	Callee	GetCurrentThread		10496061	0					
ANR	10496080	Identifier	GetCurrentThread		10496061	0					
ANR	10496081	ArgumentList			10496061	1					
ANR	10496082	WhileStatement	"while ( ! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 ) )"		10496061	3					
ANR	10496083	Condition	"! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"	774:11:28932:28977	10496061	0	True				
ANR	10496084	AndExpression	"! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		10496061	0		&&			
ANR	10496085	UnaryOperationExpression	! quitnow		10496061	0					
ANR	10496086	UnaryOperator	!		10496061	0					
ANR	10496087	Identifier	quitnow		10496061	1					
ANR	10496088	CallExpression	"GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		10496061	1					
ANR	10496089	Callee	GetMessage		10496061	0					
ANR	10496090	Identifier	GetMessage		10496061	0					
ANR	10496091	ArgumentList	& msg		10496061	1					
ANR	10496092	Argument	& msg		10496061	0					
ANR	10496093	UnaryOperationExpression	& msg		10496061	0					
ANR	10496094	UnaryOperator	&		10496061	0					
ANR	10496095	Identifier	msg		10496061	1					
ANR	10496096	Argument	( HWND ) NULL		10496061	1					
ANR	10496097	CastExpression	( HWND ) NULL		10496061	0					
ANR	10496098	CastTarget	HWND		10496061	0					
ANR	10496099	Identifier	NULL		10496061	1					
ANR	10496100	Argument	0		10496061	2					
ANR	10496101	PrimaryExpression	0		10496061	0					
ANR	10496102	Argument	0		10496061	3					
ANR	10496103	PrimaryExpression	0		10496061	0					
ANR	10496104	CompoundStatement		6:59:146:146	10496061	1					
ANR	10496105	SwitchStatement	switch ( msg . message )		10496061	0					
ANR	10496106	Condition	msg . message	775:16:28998:29008	10496061	0	True				
ANR	10496107	MemberAccess	msg . message		10496061	0					
ANR	10496108	Identifier	msg		10496061	0					
ANR	10496109	Identifier	message		10496061	1					
ANR	10496110	CompoundStatement		7:29:177:177	10496061	1					
ANR	10496111	Label	case DISPLAY_OPEN :	776:12:29025:29042	10496061	0	True				
ANR	10496112	Identifier	DISPLAY_OPEN		10496061	0					
ANR	10496113	ExpressionStatement	image_open ( ( IMAGE * ) msg . lParam )	777:16:29060:29091	10496061	1	True				
ANR	10496114	CallExpression	image_open ( ( IMAGE * ) msg . lParam )		10496061	0					
ANR	10496115	Callee	image_open		10496061	0					
ANR	10496116	Identifier	image_open		10496061	0					
ANR	10496117	ArgumentList	( IMAGE * ) msg . lParam		10496061	1					
ANR	10496118	Argument	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496119	CastExpression	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496120	CastTarget	IMAGE *		10496061	0					
ANR	10496121	MemberAccess	msg . lParam		10496061	1					
ANR	10496122	Identifier	msg		10496061	0					
ANR	10496123	Identifier	lParam		10496061	1					
ANR	10496124	BreakStatement	break ;	778:16:29109:29114	10496061	2	True				
ANR	10496125	Label	case DISPLAY_CLOSE :	779:12:29128:29146	10496061	3	True				
ANR	10496126	Identifier	DISPLAY_CLOSE		10496061	0					
ANR	10496127	CompoundStatement		14:20:406:433	10496061	4					
ANR	10496128	IdentifierDeclStatement	IMAGE * img = ( IMAGE * ) msg . lParam ;	781:20:29186:29218	10496061	0	True				
ANR	10496129	IdentifierDecl	* img = ( IMAGE * ) msg . lParam		10496061	0					
ANR	10496130	IdentifierDeclType	IMAGE *		10496061	0					
ANR	10496131	Identifier	img		10496061	1					
ANR	10496132	AssignmentExpression	* img = ( IMAGE * ) msg . lParam		10496061	2		=			
ANR	10496133	Identifier	img		10496061	0					
ANR	10496134	CastExpression	( IMAGE * ) msg . lParam		10496061	1					
ANR	10496135	CastTarget	IMAGE *		10496061	0					
ANR	10496136	MemberAccess	msg . lParam		10496061	1					
ANR	10496137	Identifier	msg		10496061	0					
ANR	10496138	Identifier	lParam		10496061	1					
ANR	10496139	IdentifierDeclStatement	HANDLE hmutex = img -> hmutex ;	782:20:29240:29267	10496061	1	True				
ANR	10496140	IdentifierDecl	hmutex = img -> hmutex		10496061	0					
ANR	10496141	IdentifierDeclType	HANDLE		10496061	0					
ANR	10496142	Identifier	hmutex		10496061	1					
ANR	10496143	AssignmentExpression	hmutex = img -> hmutex		10496061	2		=			
ANR	10496144	Identifier	hmutex		10496061	0					
ANR	10496145	PtrMemberAccess	img -> hmutex		10496061	1					
ANR	10496146	Identifier	img		10496061	0					
ANR	10496147	Identifier	hmutex		10496061	1					
ANR	10496148	ExpressionStatement	image_close ( img )	783:20:29289:29305	10496061	2	True				
ANR	10496149	CallExpression	image_close ( img )		10496061	0					
ANR	10496150	Callee	image_close		10496061	0					
ANR	10496151	Identifier	image_close		10496061	0					
ANR	10496152	ArgumentList	img		10496061	1					
ANR	10496153	Argument	img		10496061	0					
ANR	10496154	Identifier	img		10496061	0					
ANR	10496155	ExpressionStatement	CloseHandle ( hmutex )	784:20:29327:29346	10496061	3	True				
ANR	10496156	CallExpression	CloseHandle ( hmutex )		10496061	0					
ANR	10496157	Callee	CloseHandle		10496061	0					
ANR	10496158	Identifier	CloseHandle		10496061	0					
ANR	10496159	ArgumentList	hmutex		10496061	1					
ANR	10496160	Argument	hmutex		10496061	0					
ANR	10496161	Identifier	hmutex		10496061	0					
ANR	10496162	BreakStatement	break ;	786:16:29382:29387	10496061	5	True				
ANR	10496163	Label	case DISPLAY_SIZE :	787:12:29401:29418	10496061	6	True				
ANR	10496164	Identifier	DISPLAY_SIZE		10496061	0					
ANR	10496165	ExpressionStatement	image_updatesize ( ( IMAGE * ) msg . lParam )	788:16:29436:29473	10496061	7	True				
ANR	10496166	CallExpression	image_updatesize ( ( IMAGE * ) msg . lParam )		10496061	0					
ANR	10496167	Callee	image_updatesize		10496061	0					
ANR	10496168	Identifier	image_updatesize		10496061	0					
ANR	10496169	ArgumentList	( IMAGE * ) msg . lParam		10496061	1					
ANR	10496170	Argument	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496171	CastExpression	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496172	CastTarget	IMAGE *		10496061	0					
ANR	10496173	MemberAccess	msg . lParam		10496061	1					
ANR	10496174	Identifier	msg		10496061	0					
ANR	10496175	Identifier	lParam		10496061	1					
ANR	10496176	BreakStatement	break ;	789:16:29491:29496	10496061	8	True				
ANR	10496177	Label	case DISPLAY_SYNC :	790:12:29510:29527	10496061	9	True				
ANR	10496178	Identifier	DISPLAY_SYNC		10496061	0					
ANR	10496179	ExpressionStatement	image_sync ( ( IMAGE * ) msg . lParam )	791:16:29545:29576	10496061	10	True				
ANR	10496180	CallExpression	image_sync ( ( IMAGE * ) msg . lParam )		10496061	0					
ANR	10496181	Callee	image_sync		10496061	0					
ANR	10496182	Identifier	image_sync		10496061	0					
ANR	10496183	ArgumentList	( IMAGE * ) msg . lParam		10496061	1					
ANR	10496184	Argument	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496185	CastExpression	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496186	CastTarget	IMAGE *		10496061	0					
ANR	10496187	MemberAccess	msg . lParam		10496061	1					
ANR	10496188	Identifier	msg		10496061	0					
ANR	10496189	Identifier	lParam		10496061	1					
ANR	10496190	BreakStatement	break ;	792:16:29594:29599	10496061	11	True				
ANR	10496191	Label	case DISPLAY_PAGE :	793:12:29613:29630	10496061	12	True				
ANR	10496192	Identifier	DISPLAY_PAGE		10496061	0					
ANR	10496193	ExpressionStatement	image_page ( ( IMAGE * ) msg . lParam )	794:16:29648:29679	10496061	13	True				
ANR	10496194	CallExpression	image_page ( ( IMAGE * ) msg . lParam )		10496061	0					
ANR	10496195	Callee	image_page		10496061	0					
ANR	10496196	Identifier	image_page		10496061	0					
ANR	10496197	ArgumentList	( IMAGE * ) msg . lParam		10496061	1					
ANR	10496198	Argument	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496199	CastExpression	( IMAGE * ) msg . lParam		10496061	0					
ANR	10496200	CastTarget	IMAGE *		10496061	0					
ANR	10496201	MemberAccess	msg . lParam		10496061	1					
ANR	10496202	Identifier	msg		10496061	0					
ANR	10496203	Identifier	lParam		10496061	1					
ANR	10496204	BreakStatement	break ;	795:16:29697:29702	10496061	14	True				
ANR	10496205	Label	default :	796:12:29716:29723	10496061	15	True				
ANR	10496206	Identifier	default		10496061	0					
ANR	10496207	ExpressionStatement	TranslateMessage ( & msg )	797:16:29741:29763	10496061	16	True				
ANR	10496208	CallExpression	TranslateMessage ( & msg )		10496061	0					
ANR	10496209	Callee	TranslateMessage		10496061	0					
ANR	10496210	Identifier	TranslateMessage		10496061	0					
ANR	10496211	ArgumentList	& msg		10496061	1					
ANR	10496212	Argument	& msg		10496061	0					
ANR	10496213	UnaryOperationExpression	& msg		10496061	0					
ANR	10496214	UnaryOperator	&		10496061	0					
ANR	10496215	Identifier	msg		10496061	1					
ANR	10496216	ExpressionStatement	DispatchMessage ( & msg )	798:16:29781:29802	10496061	17	True				
ANR	10496217	CallExpression	DispatchMessage ( & msg )		10496061	0					
ANR	10496218	Callee	DispatchMessage		10496061	0					
ANR	10496219	Identifier	DispatchMessage		10496061	0					
ANR	10496220	ArgumentList	& msg		10496061	1					
ANR	10496221	Argument	& msg		10496061	0					
ANR	10496222	UnaryOperationExpression	& msg		10496061	0					
ANR	10496223	UnaryOperator	&		10496061	0					
ANR	10496224	Identifier	msg		10496061	1					
ANR	10496225	ReturnType	static void		10496061	1					
ANR	10496226	Identifier	winthread		10496061	2					
ANR	10496227	ParameterList	void * arg		10496061	3					
ANR	10496228	Parameter	void * arg	768:22:28822:28830	10496061	0	True				
ANR	10496229	ParameterType	void *		10496061	0					
ANR	10496230	Identifier	arg		10496061	1					
ANR	10496231	CFGEntryNode	ENTRY		10496061		True				
ANR	10496232	CFGExitNode	EXIT		10496061		True				
ANR	10496233	Symbol	msg		10496061						
ANR	10496234	Symbol	& msg		10496061						
ANR	10496235	Symbol	quitnow		10496061						
ANR	10496236	Symbol	img		10496061						
ANR	10496237	Symbol	NULL		10496061						
ANR	10496238	Symbol	GetCurrentThreadId		10496061						
ANR	10496239	Symbol	GetCurrentThread		10496061						
ANR	10496240	Symbol	msg . lParam		10496061						
ANR	10496241	Symbol	img -> hmutex		10496061						
ANR	10496242	Symbol	thread_id		10496061						
ANR	10496243	Symbol	* img		10496061						
ANR	10496244	Symbol	msg . message		10496061						
ANR	10496245	Symbol	arg		10496061						
ANR	10496246	Symbol	hmutex		10496061						
ANR	10496247	Symbol	hthread		10496061						
ANR	10496248	Symbol	GetMessage		10496061						
ANR	10496249	Function	display_open	806:0:29895:30264							
ANR	10496250	FunctionDef	"display_open (void * handle , void * device)"		10496249	0					
ANR	10496251	CompoundStatement		807:0:29940:30264	10496249	0					
ANR	10496252	IdentifierDeclStatement	IMAGE * img ;	808:4:29946:29956	10496249	0	True				
ANR	10496253	IdentifierDecl	* img		10496249	0					
ANR	10496254	IdentifierDeclType	IMAGE *		10496249	0					
ANR	10496255	Identifier	img		10496249	1					
ANR	10496256	ExpressionStatement	"fprintf ( stdout , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"	810:4:29983:30044	10496249	1	True				
ANR	10496257	CallExpression	"fprintf ( stdout , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"		10496249	0					
ANR	10496258	Callee	fprintf		10496249	0					
ANR	10496259	Identifier	fprintf		10496249	0					
ANR	10496260	ArgumentList	stdout		10496249	1					
ANR	10496261	Argument	stdout		10496249	0					
ANR	10496262	Identifier	stdout		10496249	0					
ANR	10496263	Argument	"""display_open(0x%x, 0x%x)\\n"""		10496249	1					
ANR	10496264	PrimaryExpression	"""display_open(0x%x, 0x%x)\\n"""		10496249	0					
ANR	10496265	Argument	handle		10496249	2					
ANR	10496266	Identifier	handle		10496249	0					
ANR	10496267	Argument	device		10496249	3					
ANR	10496268	Identifier	device		10496249	0					
ANR	10496269	ExpressionStatement	"img = image_new ( handle , device )"	812:4:30057:30088	10496249	2	True				
ANR	10496270	AssignmentExpression	"img = image_new ( handle , device )"		10496249	0		=			
ANR	10496271	Identifier	img		10496249	0					
ANR	10496272	CallExpression	"image_new ( handle , device )"		10496249	1					
ANR	10496273	Callee	image_new		10496249	0					
ANR	10496274	Identifier	image_new		10496249	0					
ANR	10496275	ArgumentList	handle		10496249	1					
ANR	10496276	Argument	handle		10496249	0					
ANR	10496277	Identifier	handle		10496249	0					
ANR	10496278	Argument	device		10496249	1					
ANR	10496279	Identifier	device		10496249	0					
ANR	10496280	ExpressionStatement	"img -> hmutex = CreateMutex ( NULL , FALSE , NULL )"	813:4:30123:30167	10496249	3	True				
ANR	10496281	AssignmentExpression	"img -> hmutex = CreateMutex ( NULL , FALSE , NULL )"		10496249	0		=			
ANR	10496282	PtrMemberAccess	img -> hmutex		10496249	0					
ANR	10496283	Identifier	img		10496249	0					
ANR	10496284	Identifier	hmutex		10496249	1					
ANR	10496285	CallExpression	"CreateMutex ( NULL , FALSE , NULL )"		10496249	1					
ANR	10496286	Callee	CreateMutex		10496249	0					
ANR	10496287	Identifier	CreateMutex		10496249	0					
ANR	10496288	ArgumentList	NULL		10496249	1					
ANR	10496289	Argument	NULL		10496249	0					
ANR	10496290	Identifier	NULL		10496249	0					
ANR	10496291	Argument	FALSE		10496249	1					
ANR	10496292	Identifier	FALSE		10496249	0					
ANR	10496293	Argument	NULL		10496249	2					
ANR	10496294	Identifier	NULL		10496249	0					
ANR	10496295	IfStatement	if ( img )		10496249	4					
ANR	10496296	Condition	img	814:8:30177:30179	10496249	0	True				
ANR	10496297	Identifier	img		10496249	0					
ANR	10496298	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_OPEN , 0 , ( LPARAM ) img )"	815:8:30190:30248	10496249	1	True				
ANR	10496299	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_OPEN , 0 , ( LPARAM ) img )"		10496249	0					
ANR	10496300	Callee	PostThreadMessage		10496249	0					
ANR	10496301	Identifier	PostThreadMessage		10496249	0					
ANR	10496302	ArgumentList	thread_id		10496249	1					
ANR	10496303	Argument	thread_id		10496249	0					
ANR	10496304	Identifier	thread_id		10496249	0					
ANR	10496305	Argument	DISPLAY_OPEN		10496249	1					
ANR	10496306	Identifier	DISPLAY_OPEN		10496249	0					
ANR	10496307	Argument	0		10496249	2					
ANR	10496308	PrimaryExpression	0		10496249	0					
ANR	10496309	Argument	( LPARAM ) img		10496249	3					
ANR	10496310	CastExpression	( LPARAM ) img		10496249	0					
ANR	10496311	CastTarget	LPARAM		10496249	0					
ANR	10496312	Identifier	img		10496249	1					
ANR	10496313	ReturnStatement	return 0 ;	816:4:30254:30262	10496249	5	True				
ANR	10496314	PrimaryExpression	0		10496249	0					
ANR	10496315	ReturnType	int		10496249	1					
ANR	10496316	Identifier	display_open		10496249	2					
ANR	10496317	ParameterList	"void * handle , void * device"		10496249	3					
ANR	10496318	Parameter	void * handle	806:17:29912:29923	10496249	0	True				
ANR	10496319	ParameterType	void *		10496249	0					
ANR	10496320	Identifier	handle		10496249	1					
ANR	10496321	Parameter	void * device	806:31:29926:29937	10496249	1	True				
ANR	10496322	ParameterType	void *		10496249	0					
ANR	10496323	Identifier	device		10496249	1					
ANR	10496324	CFGEntryNode	ENTRY		10496249		True				
ANR	10496325	CFGExitNode	EXIT		10496249		True				
ANR	10496326	Symbol	img -> hmutex		10496249						
ANR	10496327	Symbol	image_new		10496249						
ANR	10496328	Symbol	DISPLAY_OPEN		10496249						
ANR	10496329	Symbol	img		10496249						
ANR	10496330	Symbol	CreateMutex		10496249						
ANR	10496331	Symbol	* img		10496249						
ANR	10496332	Symbol	thread_id		10496249						
ANR	10496333	Symbol	NULL		10496249						
ANR	10496334	Symbol	stdout		10496249						
ANR	10496335	Symbol	handle		10496249						
ANR	10496336	Symbol	FALSE		10496249						
ANR	10496337	Symbol	device		10496249						
ANR	10496338	Function	display_preclose	819:0:30267:30615							
ANR	10496339	FunctionDef	"display_preclose (void * handle , void * device)"		10496338	0					
ANR	10496340	CompoundStatement		820:0:30316:30615	10496338	0					
ANR	10496341	IdentifierDeclStatement	IMAGE * img ;	821:4:30322:30332	10496338	0	True				
ANR	10496342	IdentifierDecl	* img		10496338	0					
ANR	10496343	IdentifierDeclType	IMAGE *		10496338	0					
ANR	10496344	Identifier	img		10496338	1					
ANR	10496345	ExpressionStatement	"fprintf ( stdout , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"	823:4:30359:30424	10496338	1	True				
ANR	10496346	CallExpression	"fprintf ( stdout , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"		10496338	0					
ANR	10496347	Callee	fprintf		10496338	0					
ANR	10496348	Identifier	fprintf		10496338	0					
ANR	10496349	ArgumentList	stdout		10496338	1					
ANR	10496350	Argument	stdout		10496338	0					
ANR	10496351	Identifier	stdout		10496338	0					
ANR	10496352	Argument	"""display_preclose(0x%x, 0x%x)\\n"""		10496338	1					
ANR	10496353	PrimaryExpression	"""display_preclose(0x%x, 0x%x)\\n"""		10496338	0					
ANR	10496354	Argument	handle		10496338	2					
ANR	10496355	Identifier	handle		10496338	0					
ANR	10496356	Argument	device		10496338	3					
ANR	10496357	Identifier	device		10496338	0					
ANR	10496358	ExpressionStatement	"img = image_find ( handle , device )"	825:4:30437:30469	10496338	2	True				
ANR	10496359	AssignmentExpression	"img = image_find ( handle , device )"		10496338	0		=			
ANR	10496360	Identifier	img		10496338	0					
ANR	10496361	CallExpression	"image_find ( handle , device )"		10496338	1					
ANR	10496362	Callee	image_find		10496338	0					
ANR	10496363	Identifier	image_find		10496338	0					
ANR	10496364	ArgumentList	handle		10496338	1					
ANR	10496365	Argument	handle		10496338	0					
ANR	10496366	Identifier	handle		10496338	0					
ANR	10496367	Argument	device		10496338	1					
ANR	10496368	Identifier	device		10496338	0					
ANR	10496369	IfStatement	if ( img )		10496338	3					
ANR	10496370	Condition	img	826:8:30479:30481	10496338	0	True				
ANR	10496371	Identifier	img		10496338	0					
ANR	10496372	CompoundStatement		7:13:167:167	10496338	1					
ANR	10496373	ExpressionStatement	"WaitForSingleObject ( img -> hmutex , 120000 )"	828:8:30553:30593	10496338	0	True				
ANR	10496374	CallExpression	"WaitForSingleObject ( img -> hmutex , 120000 )"		10496338	0					
ANR	10496375	Callee	WaitForSingleObject		10496338	0					
ANR	10496376	Identifier	WaitForSingleObject		10496338	0					
ANR	10496377	ArgumentList	img -> hmutex		10496338	1					
ANR	10496378	Argument	img -> hmutex		10496338	0					
ANR	10496379	PtrMemberAccess	img -> hmutex		10496338	0					
ANR	10496380	Identifier	img		10496338	0					
ANR	10496381	Identifier	hmutex		10496338	1					
ANR	10496382	Argument	120000		10496338	1					
ANR	10496383	PrimaryExpression	120000		10496338	0					
ANR	10496384	ReturnStatement	return 0 ;	830:4:30605:30613	10496338	4	True				
ANR	10496385	PrimaryExpression	0		10496338	0					
ANR	10496386	ReturnType	int		10496338	1					
ANR	10496387	Identifier	display_preclose		10496338	2					
ANR	10496388	ParameterList	"void * handle , void * device"		10496338	3					
ANR	10496389	Parameter	void * handle	819:21:30288:30299	10496338	0	True				
ANR	10496390	ParameterType	void *		10496338	0					
ANR	10496391	Identifier	handle		10496338	1					
ANR	10496392	Parameter	void * device	819:35:30302:30313	10496338	1	True				
ANR	10496393	ParameterType	void *		10496338	0					
ANR	10496394	Identifier	device		10496338	1					
ANR	10496395	CFGEntryNode	ENTRY		10496338		True				
ANR	10496396	CFGExitNode	EXIT		10496338		True				
ANR	10496397	Symbol	img -> hmutex		10496338						
ANR	10496398	Symbol	img		10496338						
ANR	10496399	Symbol	* img		10496338						
ANR	10496400	Symbol	stdout		10496338						
ANR	10496401	Symbol	image_find		10496338						
ANR	10496402	Symbol	handle		10496338						
ANR	10496403	Symbol	device		10496338						
ANR	10496404	Function	display_close	833:0:30618:31156							
ANR	10496405	FunctionDef	"display_close (void * handle , void * device)"		10496404	0					
ANR	10496406	CompoundStatement		834:0:30664:31156	10496404	0					
ANR	10496407	IdentifierDeclStatement	IMAGE * img ;	835:4:30670:30680	10496404	0	True				
ANR	10496408	IdentifierDecl	* img		10496404	0					
ANR	10496409	IdentifierDeclType	IMAGE *		10496404	0					
ANR	10496410	Identifier	img		10496404	1					
ANR	10496411	ExpressionStatement	"fprintf ( stdout , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"	837:4:30707:30769	10496404	1	True				
ANR	10496412	CallExpression	"fprintf ( stdout , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"		10496404	0					
ANR	10496413	Callee	fprintf		10496404	0					
ANR	10496414	Identifier	fprintf		10496404	0					
ANR	10496415	ArgumentList	stdout		10496404	1					
ANR	10496416	Argument	stdout		10496404	0					
ANR	10496417	Identifier	stdout		10496404	0					
ANR	10496418	Argument	"""display_close(0x%x, 0x%x)\\n"""		10496404	1					
ANR	10496419	PrimaryExpression	"""display_close(0x%x, 0x%x)\\n"""		10496404	0					
ANR	10496420	Argument	handle		10496404	2					
ANR	10496421	Identifier	handle		10496404	0					
ANR	10496422	Argument	device		10496404	3					
ANR	10496423	Identifier	device		10496404	0					
ANR	10496424	ExpressionStatement	"img = image_find ( handle , device )"	839:4:30782:30814	10496404	2	True				
ANR	10496425	AssignmentExpression	"img = image_find ( handle , device )"		10496404	0		=			
ANR	10496426	Identifier	img		10496404	0					
ANR	10496427	CallExpression	"image_find ( handle , device )"		10496404	1					
ANR	10496428	Callee	image_find		10496404	0					
ANR	10496429	Identifier	image_find		10496404	0					
ANR	10496430	ArgumentList	handle		10496404	1					
ANR	10496431	Argument	handle		10496404	0					
ANR	10496432	Identifier	handle		10496404	0					
ANR	10496433	Argument	device		10496404	1					
ANR	10496434	Identifier	device		10496404	0					
ANR	10496435	IfStatement	if ( img )		10496404	3					
ANR	10496436	Condition	img	840:8:30824:30826	10496404	0	True				
ANR	10496437	Identifier	img		10496404	0					
ANR	10496438	CompoundStatement		7:13:164:164	10496404	1					
ANR	10496439	IfStatement	if ( GetForegroundWindow ( ) == img -> hwnd )		10496404	0					
ANR	10496440	Condition	GetForegroundWindow ( ) == img -> hwnd	842:12:30915:30948	10496404	0	True				
ANR	10496441	EqualityExpression	GetForegroundWindow ( ) == img -> hwnd		10496404	0		==			
ANR	10496442	CallExpression	GetForegroundWindow ( )		10496404	0					
ANR	10496443	Callee	GetForegroundWindow		10496404	0					
ANR	10496444	Identifier	GetForegroundWindow		10496404	0					
ANR	10496445	ArgumentList			10496404	1					
ANR	10496446	PtrMemberAccess	img -> hwnd		10496404	1					
ANR	10496447	Identifier	img		10496404	0					
ANR	10496448	Identifier	hwnd		10496404	1					
ANR	10496449	ExpressionStatement	SetForegroundWindow ( hwndforeground )	843:12:30963:30998	10496404	1	True				
ANR	10496450	CallExpression	SetForegroundWindow ( hwndforeground )		10496404	0					
ANR	10496451	Callee	SetForegroundWindow		10496404	0					
ANR	10496452	Identifier	SetForegroundWindow		10496404	0					
ANR	10496453	ArgumentList	hwndforeground		10496404	1					
ANR	10496454	Argument	hwndforeground		10496404	0					
ANR	10496455	Identifier	hwndforeground		10496404	0					
ANR	10496456	ExpressionStatement	image_delete ( img )	845:8:31009:31026	10496404	1	True				
ANR	10496457	CallExpression	image_delete ( img )		10496404	0					
ANR	10496458	Callee	image_delete		10496404	0					
ANR	10496459	Identifier	image_delete		10496404	0					
ANR	10496460	ArgumentList	img		10496404	1					
ANR	10496461	Argument	img		10496404	0					
ANR	10496462	Identifier	img		10496404	0					
ANR	10496463	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_CLOSE , 0 , ( LPARAM ) img )"	846:8:31075:31134	10496404	2	True				
ANR	10496464	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_CLOSE , 0 , ( LPARAM ) img )"		10496404	0					
ANR	10496465	Callee	PostThreadMessage		10496404	0					
ANR	10496466	Identifier	PostThreadMessage		10496404	0					
ANR	10496467	ArgumentList	thread_id		10496404	1					
ANR	10496468	Argument	thread_id		10496404	0					
ANR	10496469	Identifier	thread_id		10496404	0					
ANR	10496470	Argument	DISPLAY_CLOSE		10496404	1					
ANR	10496471	Identifier	DISPLAY_CLOSE		10496404	0					
ANR	10496472	Argument	0		10496404	2					
ANR	10496473	PrimaryExpression	0		10496404	0					
ANR	10496474	Argument	( LPARAM ) img		10496404	3					
ANR	10496475	CastExpression	( LPARAM ) img		10496404	0					
ANR	10496476	CastTarget	LPARAM		10496404	0					
ANR	10496477	Identifier	img		10496404	1					
ANR	10496478	ReturnStatement	return 0 ;	848:4:31146:31154	10496404	4	True				
ANR	10496479	PrimaryExpression	0		10496404	0					
ANR	10496480	ReturnType	int		10496404	1					
ANR	10496481	Identifier	display_close		10496404	2					
ANR	10496482	ParameterList	"void * handle , void * device"		10496404	3					
ANR	10496483	Parameter	void * handle	833:18:30636:30647	10496404	0	True				
ANR	10496484	ParameterType	void *		10496404	0					
ANR	10496485	Identifier	handle		10496404	1					
ANR	10496486	Parameter	void * device	833:32:30650:30661	10496404	1	True				
ANR	10496487	ParameterType	void *		10496404	0					
ANR	10496488	Identifier	device		10496404	1					
ANR	10496489	CFGEntryNode	ENTRY		10496404		True				
ANR	10496490	CFGExitNode	EXIT		10496404		True				
ANR	10496491	Symbol	img		10496404						
ANR	10496492	Symbol	* img		10496404						
ANR	10496493	Symbol	thread_id		10496404						
ANR	10496494	Symbol	stdout		10496404						
ANR	10496495	Symbol	image_find		10496404						
ANR	10496496	Symbol	handle		10496404						
ANR	10496497	Symbol	DISPLAY_CLOSE		10496404						
ANR	10496498	Symbol	device		10496404						
ANR	10496499	Symbol	GetForegroundWindow		10496404						
ANR	10496500	Symbol	hwndforeground		10496404						
ANR	10496501	Symbol	img -> hwnd		10496404						
ANR	10496502	Function	display_presize	851:0:31159:31628							
ANR	10496503	FunctionDef	"display_presize (void * handle , void * device , int width , int height , int raster , unsigned int format)"		10496502	0					
ANR	10496504	CompoundStatement		853:0:31271:31628	10496502	0					
ANR	10496505	IdentifierDeclStatement	IMAGE * img ;	854:4:31277:31287	10496502	0	True				
ANR	10496506	IdentifierDecl	* img		10496502	0					
ANR	10496507	IdentifierDeclType	IMAGE *		10496502	0					
ANR	10496508	Identifier	img		10496502	1					
ANR	10496509	ExpressionStatement	"fprintf ( stdout , ""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"" , handle , device , width , height , raster , format )"	856:4:31314:31437	10496502	1	True				
ANR	10496510	CallExpression	"fprintf ( stdout , ""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"" , handle , device , width , height , raster , format )"		10496502	0					
ANR	10496511	Callee	fprintf		10496502	0					
ANR	10496512	Identifier	fprintf		10496502	0					
ANR	10496513	ArgumentList	stdout		10496502	1					
ANR	10496514	Argument	stdout		10496502	0					
ANR	10496515	Identifier	stdout		10496502	0					
ANR	10496516	Argument	"""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"""		10496502	1					
ANR	10496517	PrimaryExpression	"""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"""		10496502	0					
ANR	10496518	Argument	handle		10496502	2					
ANR	10496519	Identifier	handle		10496502	0					
ANR	10496520	Argument	device		10496502	3					
ANR	10496521	Identifier	device		10496502	0					
ANR	10496522	Argument	width		10496502	4					
ANR	10496523	Identifier	width		10496502	0					
ANR	10496524	Argument	height		10496502	5					
ANR	10496525	Identifier	height		10496502	0					
ANR	10496526	Argument	raster		10496502	6					
ANR	10496527	Identifier	raster		10496502	0					
ANR	10496528	Argument	format		10496502	7					
ANR	10496529	Identifier	format		10496502	0					
ANR	10496530	ExpressionStatement	"img = image_find ( handle , device )"	859:4:31450:31482	10496502	2	True				
ANR	10496531	AssignmentExpression	"img = image_find ( handle , device )"		10496502	0		=			
ANR	10496532	Identifier	img		10496502	0					
ANR	10496533	CallExpression	"image_find ( handle , device )"		10496502	1					
ANR	10496534	Callee	image_find		10496502	0					
ANR	10496535	Identifier	image_find		10496502	0					
ANR	10496536	ArgumentList	handle		10496502	1					
ANR	10496537	Argument	handle		10496502	0					
ANR	10496538	Identifier	handle		10496502	0					
ANR	10496539	Argument	device		10496502	1					
ANR	10496540	Identifier	device		10496502	0					
ANR	10496541	IfStatement	if ( img )		10496502	3					
ANR	10496542	Condition	img	860:8:31492:31494	10496502	0	True				
ANR	10496543	Identifier	img		10496502	0					
ANR	10496544	CompoundStatement		8:13:225:225	10496502	1					
ANR	10496545	ExpressionStatement	"WaitForSingleObject ( img -> hmutex , 120000 )"	862:8:31566:31606	10496502	0	True				
ANR	10496546	CallExpression	"WaitForSingleObject ( img -> hmutex , 120000 )"		10496502	0					
ANR	10496547	Callee	WaitForSingleObject		10496502	0					
ANR	10496548	Identifier	WaitForSingleObject		10496502	0					
ANR	10496549	ArgumentList	img -> hmutex		10496502	1					
ANR	10496550	Argument	img -> hmutex		10496502	0					
ANR	10496551	PtrMemberAccess	img -> hmutex		10496502	0					
ANR	10496552	Identifier	img		10496502	0					
ANR	10496553	Identifier	hmutex		10496502	1					
ANR	10496554	Argument	120000		10496502	1					
ANR	10496555	PrimaryExpression	120000		10496502	0					
ANR	10496556	ReturnStatement	return 0 ;	864:4:31618:31626	10496502	4	True				
ANR	10496557	PrimaryExpression	0		10496502	0					
ANR	10496558	ReturnType	int		10496502	1					
ANR	10496559	Identifier	display_presize		10496502	2					
ANR	10496560	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format"		10496502	3					
ANR	10496561	Parameter	void * handle	851:20:31179:31190	10496502	0	True				
ANR	10496562	ParameterType	void *		10496502	0					
ANR	10496563	Identifier	handle		10496502	1					
ANR	10496564	Parameter	void * device	851:34:31193:31204	10496502	1	True				
ANR	10496565	ParameterType	void *		10496502	0					
ANR	10496566	Identifier	device		10496502	1					
ANR	10496567	Parameter	int width	851:48:31207:31215	10496502	2	True				
ANR	10496568	ParameterType	int		10496502	0					
ANR	10496569	Identifier	width		10496502	1					
ANR	10496570	Parameter	int height	851:59:31218:31227	10496502	3	True				
ANR	10496571	ParameterType	int		10496502	0					
ANR	10496572	Identifier	height		10496502	1					
ANR	10496573	Parameter	int raster	852:8:31238:31247	10496502	4	True				
ANR	10496574	ParameterType	int		10496502	0					
ANR	10496575	Identifier	raster		10496502	1					
ANR	10496576	Parameter	unsigned int format	852:20:31250:31268	10496502	5	True				
ANR	10496577	ParameterType	unsigned int		10496502	0					
ANR	10496578	Identifier	format		10496502	1					
ANR	10496579	CFGEntryNode	ENTRY		10496502		True				
ANR	10496580	CFGExitNode	EXIT		10496502		True				
ANR	10496581	Symbol	img -> hmutex		10496502						
ANR	10496582	Symbol	img		10496502						
ANR	10496583	Symbol	* img		10496502						
ANR	10496584	Symbol	stdout		10496502						
ANR	10496585	Symbol	image_find		10496502						
ANR	10496586	Symbol	width		10496502						
ANR	10496587	Symbol	raster		10496502						
ANR	10496588	Symbol	format		10496502						
ANR	10496589	Symbol	handle		10496502						
ANR	10496590	Symbol	device		10496502						
ANR	10496591	Symbol	height		10496502						
ANR	10496592	Function	display_size	867:0:31631:32253							
ANR	10496593	FunctionDef	"display_size (void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage)"		10496592	0					
ANR	10496594	CompoundStatement		869:0:31763:32253	10496592	0					
ANR	10496595	IdentifierDeclStatement	IMAGE * img ;	870:4:31769:31779	10496592	0	True				
ANR	10496596	IdentifierDecl	* img		10496592	0					
ANR	10496597	IdentifierDeclType	IMAGE *		10496592	0					
ANR	10496598	Identifier	img		10496592	1					
ANR	10496599	ExpressionStatement	"fprintf ( stdout , ""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"	872:4:31806:31940	10496592	1	True				
ANR	10496600	CallExpression	"fprintf ( stdout , ""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"		10496592	0					
ANR	10496601	Callee	fprintf		10496592	0					
ANR	10496602	Identifier	fprintf		10496592	0					
ANR	10496603	ArgumentList	stdout		10496592	1					
ANR	10496604	Argument	stdout		10496592	0					
ANR	10496605	Identifier	stdout		10496592	0					
ANR	10496606	Argument	"""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"""		10496592	1					
ANR	10496607	PrimaryExpression	"""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"""		10496592	0					
ANR	10496608	Argument	handle		10496592	2					
ANR	10496609	Identifier	handle		10496592	0					
ANR	10496610	Argument	device		10496592	3					
ANR	10496611	Identifier	device		10496592	0					
ANR	10496612	Argument	width		10496592	4					
ANR	10496613	Identifier	width		10496592	0					
ANR	10496614	Argument	height		10496592	5					
ANR	10496615	Identifier	height		10496592	0					
ANR	10496616	Argument	raster		10496592	6					
ANR	10496617	Identifier	raster		10496592	0					
ANR	10496618	Argument	format		10496592	7					
ANR	10496619	Identifier	format		10496592	0					
ANR	10496620	Argument	pimage		10496592	8					
ANR	10496621	Identifier	pimage		10496592	0					
ANR	10496622	ExpressionStatement	"img = image_find ( handle , device )"	875:4:31953:31985	10496592	2	True				
ANR	10496623	AssignmentExpression	"img = image_find ( handle , device )"		10496592	0		=			
ANR	10496624	Identifier	img		10496592	0					
ANR	10496625	CallExpression	"image_find ( handle , device )"		10496592	1					
ANR	10496626	Callee	image_find		10496592	0					
ANR	10496627	Identifier	image_find		10496592	0					
ANR	10496628	ArgumentList	handle		10496592	1					
ANR	10496629	Argument	handle		10496592	0					
ANR	10496630	Identifier	handle		10496592	0					
ANR	10496631	Argument	device		10496592	1					
ANR	10496632	Identifier	device		10496592	0					
ANR	10496633	IfStatement	if ( img )		10496592	3					
ANR	10496634	Condition	img	876:8:31995:31997	10496592	0	True				
ANR	10496635	Identifier	img		10496592	0					
ANR	10496636	CompoundStatement		8:13:236:236	10496592	1					
ANR	10496637	ExpressionStatement	"image_size ( img , width , height , raster , format , pimage )"	877:8:32010:32064	10496592	0	True				
ANR	10496638	CallExpression	"image_size ( img , width , height , raster , format , pimage )"		10496592	0					
ANR	10496639	Callee	image_size		10496592	0					
ANR	10496640	Identifier	image_size		10496592	0					
ANR	10496641	ArgumentList	img		10496592	1					
ANR	10496642	Argument	img		10496592	0					
ANR	10496643	Identifier	img		10496592	0					
ANR	10496644	Argument	width		10496592	1					
ANR	10496645	Identifier	width		10496592	0					
ANR	10496646	Argument	height		10496592	2					
ANR	10496647	Identifier	height		10496592	0					
ANR	10496648	Argument	raster		10496592	3					
ANR	10496649	Identifier	raster		10496592	0					
ANR	10496650	Argument	format		10496592	4					
ANR	10496651	Identifier	format		10496592	0					
ANR	10496652	Argument	pimage		10496592	5					
ANR	10496653	Identifier	pimage		10496592	0					
ANR	10496654	ExpressionStatement	ReleaseMutex ( img -> hmutex )	879:8:32138:32163	10496592	1	True				
ANR	10496655	CallExpression	ReleaseMutex ( img -> hmutex )		10496592	0					
ANR	10496656	Callee	ReleaseMutex		10496592	0					
ANR	10496657	Identifier	ReleaseMutex		10496592	0					
ANR	10496658	ArgumentList	img -> hmutex		10496592	1					
ANR	10496659	Argument	img -> hmutex		10496592	0					
ANR	10496660	PtrMemberAccess	img -> hmutex		10496592	0					
ANR	10496661	Identifier	img		10496592	0					
ANR	10496662	Identifier	hmutex		10496592	1					
ANR	10496663	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_SIZE , 0 , ( LPARAM ) img )"	880:8:32173:32231	10496592	2	True				
ANR	10496664	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_SIZE , 0 , ( LPARAM ) img )"		10496592	0					
ANR	10496665	Callee	PostThreadMessage		10496592	0					
ANR	10496666	Identifier	PostThreadMessage		10496592	0					
ANR	10496667	ArgumentList	thread_id		10496592	1					
ANR	10496668	Argument	thread_id		10496592	0					
ANR	10496669	Identifier	thread_id		10496592	0					
ANR	10496670	Argument	DISPLAY_SIZE		10496592	1					
ANR	10496671	Identifier	DISPLAY_SIZE		10496592	0					
ANR	10496672	Argument	0		10496592	2					
ANR	10496673	PrimaryExpression	0		10496592	0					
ANR	10496674	Argument	( LPARAM ) img		10496592	3					
ANR	10496675	CastExpression	( LPARAM ) img		10496592	0					
ANR	10496676	CastTarget	LPARAM		10496592	0					
ANR	10496677	Identifier	img		10496592	1					
ANR	10496678	ReturnStatement	return 0 ;	882:4:32243:32251	10496592	4	True				
ANR	10496679	PrimaryExpression	0		10496592	0					
ANR	10496680	ReturnType	int		10496592	1					
ANR	10496681	Identifier	display_size		10496592	2					
ANR	10496682	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage"		10496592	3					
ANR	10496683	Parameter	void * handle	867:17:31648:31659	10496592	0	True				
ANR	10496684	ParameterType	void *		10496592	0					
ANR	10496685	Identifier	handle		10496592	1					
ANR	10496686	Parameter	void * device	867:31:31662:31673	10496592	1	True				
ANR	10496687	ParameterType	void *		10496592	0					
ANR	10496688	Identifier	device		10496592	1					
ANR	10496689	Parameter	int width	867:45:31676:31684	10496592	2	True				
ANR	10496690	ParameterType	int		10496592	0					
ANR	10496691	Identifier	width		10496592	1					
ANR	10496692	Parameter	int height	867:56:31687:31696	10496592	3	True				
ANR	10496693	ParameterType	int		10496592	0					
ANR	10496694	Identifier	height		10496592	1					
ANR	10496695	Parameter	int raster	868:8:31707:31716	10496592	4	True				
ANR	10496696	ParameterType	int		10496592	0					
ANR	10496697	Identifier	raster		10496592	1					
ANR	10496698	Parameter	unsigned int format	868:20:31719:31737	10496592	5	True				
ANR	10496699	ParameterType	unsigned int		10496592	0					
ANR	10496700	Identifier	format		10496592	1					
ANR	10496701	Parameter	unsigned char * pimage	868:41:31740:31760	10496592	6	True				
ANR	10496702	ParameterType	unsigned char *		10496592	0					
ANR	10496703	Identifier	pimage		10496592	1					
ANR	10496704	CFGEntryNode	ENTRY		10496592		True				
ANR	10496705	CFGExitNode	EXIT		10496592		True				
ANR	10496706	Symbol	img		10496592						
ANR	10496707	Symbol	stdout		10496592						
ANR	10496708	Symbol	image_find		10496592						
ANR	10496709	Symbol	raster		10496592						
ANR	10496710	Symbol	format		10496592						
ANR	10496711	Symbol	handle		10496592						
ANR	10496712	Symbol	img -> hmutex		10496592						
ANR	10496713	Symbol	pimage		10496592						
ANR	10496714	Symbol	* img		10496592						
ANR	10496715	Symbol	thread_id		10496592						
ANR	10496716	Symbol	DISPLAY_SIZE		10496592						
ANR	10496717	Symbol	width		10496592						
ANR	10496718	Symbol	device		10496592						
ANR	10496719	Symbol	height		10496592						
ANR	10496720	Function	display_sync	885:0:32256:32547							
ANR	10496721	FunctionDef	"display_sync (void * handle , void * device)"		10496720	0					
ANR	10496722	CompoundStatement		886:0:32301:32547	10496720	0					
ANR	10496723	IdentifierDeclStatement	IMAGE * img ;	887:4:32307:32317	10496720	0	True				
ANR	10496724	IdentifierDecl	* img		10496720	0					
ANR	10496725	IdentifierDeclType	IMAGE *		10496720	0					
ANR	10496726	Identifier	img		10496720	1					
ANR	10496727	ExpressionStatement	"fprintf ( stdout , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"	889:4:32344:32405	10496720	1	True				
ANR	10496728	CallExpression	"fprintf ( stdout , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"		10496720	0					
ANR	10496729	Callee	fprintf		10496720	0					
ANR	10496730	Identifier	fprintf		10496720	0					
ANR	10496731	ArgumentList	stdout		10496720	1					
ANR	10496732	Argument	stdout		10496720	0					
ANR	10496733	Identifier	stdout		10496720	0					
ANR	10496734	Argument	"""display_sync(0x%x, 0x%x)\\n"""		10496720	1					
ANR	10496735	PrimaryExpression	"""display_sync(0x%x, 0x%x)\\n"""		10496720	0					
ANR	10496736	Argument	handle		10496720	2					
ANR	10496737	Identifier	handle		10496720	0					
ANR	10496738	Argument	device		10496720	3					
ANR	10496739	Identifier	device		10496720	0					
ANR	10496740	ExpressionStatement	"img = image_find ( handle , device )"	891:4:32418:32450	10496720	2	True				
ANR	10496741	AssignmentExpression	"img = image_find ( handle , device )"		10496720	0		=			
ANR	10496742	Identifier	img		10496720	0					
ANR	10496743	CallExpression	"image_find ( handle , device )"		10496720	1					
ANR	10496744	Callee	image_find		10496720	0					
ANR	10496745	Identifier	image_find		10496720	0					
ANR	10496746	ArgumentList	handle		10496720	1					
ANR	10496747	Argument	handle		10496720	0					
ANR	10496748	Identifier	handle		10496720	0					
ANR	10496749	Argument	device		10496720	1					
ANR	10496750	Identifier	device		10496720	0					
ANR	10496751	IfStatement	if ( img )		10496720	3					
ANR	10496752	Condition	img	892:8:32460:32462	10496720	0	True				
ANR	10496753	Identifier	img		10496720	0					
ANR	10496754	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_SYNC , 0 , ( LPARAM ) img )"	893:8:32473:32531	10496720	1	True				
ANR	10496755	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_SYNC , 0 , ( LPARAM ) img )"		10496720	0					
ANR	10496756	Callee	PostThreadMessage		10496720	0					
ANR	10496757	Identifier	PostThreadMessage		10496720	0					
ANR	10496758	ArgumentList	thread_id		10496720	1					
ANR	10496759	Argument	thread_id		10496720	0					
ANR	10496760	Identifier	thread_id		10496720	0					
ANR	10496761	Argument	DISPLAY_SYNC		10496720	1					
ANR	10496762	Identifier	DISPLAY_SYNC		10496720	0					
ANR	10496763	Argument	0		10496720	2					
ANR	10496764	PrimaryExpression	0		10496720	0					
ANR	10496765	Argument	( LPARAM ) img		10496720	3					
ANR	10496766	CastExpression	( LPARAM ) img		10496720	0					
ANR	10496767	CastTarget	LPARAM		10496720	0					
ANR	10496768	Identifier	img		10496720	1					
ANR	10496769	ReturnStatement	return 0 ;	894:4:32537:32545	10496720	4	True				
ANR	10496770	PrimaryExpression	0		10496720	0					
ANR	10496771	ReturnType	int		10496720	1					
ANR	10496772	Identifier	display_sync		10496720	2					
ANR	10496773	ParameterList	"void * handle , void * device"		10496720	3					
ANR	10496774	Parameter	void * handle	885:17:32273:32284	10496720	0	True				
ANR	10496775	ParameterType	void *		10496720	0					
ANR	10496776	Identifier	handle		10496720	1					
ANR	10496777	Parameter	void * device	885:31:32287:32298	10496720	1	True				
ANR	10496778	ParameterType	void *		10496720	0					
ANR	10496779	Identifier	device		10496720	1					
ANR	10496780	CFGEntryNode	ENTRY		10496720		True				
ANR	10496781	CFGExitNode	EXIT		10496720		True				
ANR	10496782	Symbol	DISPLAY_SYNC		10496720						
ANR	10496783	Symbol	img		10496720						
ANR	10496784	Symbol	thread_id		10496720						
ANR	10496785	Symbol	stdout		10496720						
ANR	10496786	Symbol	image_find		10496720						
ANR	10496787	Symbol	handle		10496720						
ANR	10496788	Symbol	device		10496720						
ANR	10496789	Function	display_page	897:0:32550:32908							
ANR	10496790	FunctionDef	"display_page (void * handle , void * device , int copies , int flush)"		10496789	0					
ANR	10496791	CompoundStatement		898:0:32618:32908	10496789	0					
ANR	10496792	IdentifierDeclStatement	IMAGE * img ;	899:4:32624:32634	10496789	0	True				
ANR	10496793	IdentifierDecl	* img		10496789	0					
ANR	10496794	IdentifierDeclType	IMAGE *		10496789	0					
ANR	10496795	Identifier	img		10496789	1					
ANR	10496796	ExpressionStatement	"fprintf ( stdout , ""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"" , handle , device , copies , flush )"	901:4:32661:32766	10496789	1	True				
ANR	10496797	CallExpression	"fprintf ( stdout , ""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"" , handle , device , copies , flush )"		10496789	0					
ANR	10496798	Callee	fprintf		10496789	0					
ANR	10496799	Identifier	fprintf		10496789	0					
ANR	10496800	ArgumentList	stdout		10496789	1					
ANR	10496801	Argument	stdout		10496789	0					
ANR	10496802	Identifier	stdout		10496789	0					
ANR	10496803	Argument	"""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"""		10496789	1					
ANR	10496804	PrimaryExpression	"""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"""		10496789	0					
ANR	10496805	Argument	handle		10496789	2					
ANR	10496806	Identifier	handle		10496789	0					
ANR	10496807	Argument	device		10496789	3					
ANR	10496808	Identifier	device		10496789	0					
ANR	10496809	Argument	copies		10496789	4					
ANR	10496810	Identifier	copies		10496789	0					
ANR	10496811	Argument	flush		10496789	5					
ANR	10496812	Identifier	flush		10496789	0					
ANR	10496813	ExpressionStatement	"img = image_find ( handle , device )"	904:4:32779:32811	10496789	2	True				
ANR	10496814	AssignmentExpression	"img = image_find ( handle , device )"		10496789	0		=			
ANR	10496815	Identifier	img		10496789	0					
ANR	10496816	CallExpression	"image_find ( handle , device )"		10496789	1					
ANR	10496817	Callee	image_find		10496789	0					
ANR	10496818	Identifier	image_find		10496789	0					
ANR	10496819	ArgumentList	handle		10496789	1					
ANR	10496820	Argument	handle		10496789	0					
ANR	10496821	Identifier	handle		10496789	0					
ANR	10496822	Argument	device		10496789	1					
ANR	10496823	Identifier	device		10496789	0					
ANR	10496824	IfStatement	if ( img )		10496789	3					
ANR	10496825	Condition	img	905:8:32821:32823	10496789	0	True				
ANR	10496826	Identifier	img		10496789	0					
ANR	10496827	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_PAGE , 0 , ( LPARAM ) img )"	906:8:32834:32892	10496789	1	True				
ANR	10496828	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_PAGE , 0 , ( LPARAM ) img )"		10496789	0					
ANR	10496829	Callee	PostThreadMessage		10496789	0					
ANR	10496830	Identifier	PostThreadMessage		10496789	0					
ANR	10496831	ArgumentList	thread_id		10496789	1					
ANR	10496832	Argument	thread_id		10496789	0					
ANR	10496833	Identifier	thread_id		10496789	0					
ANR	10496834	Argument	DISPLAY_PAGE		10496789	1					
ANR	10496835	Identifier	DISPLAY_PAGE		10496789	0					
ANR	10496836	Argument	0		10496789	2					
ANR	10496837	PrimaryExpression	0		10496789	0					
ANR	10496838	Argument	( LPARAM ) img		10496789	3					
ANR	10496839	CastExpression	( LPARAM ) img		10496789	0					
ANR	10496840	CastTarget	LPARAM		10496789	0					
ANR	10496841	Identifier	img		10496789	1					
ANR	10496842	ReturnStatement	return 0 ;	907:4:32898:32906	10496789	4	True				
ANR	10496843	PrimaryExpression	0		10496789	0					
ANR	10496844	ReturnType	int		10496789	1					
ANR	10496845	Identifier	display_page		10496789	2					
ANR	10496846	ParameterList	"void * handle , void * device , int copies , int flush"		10496789	3					
ANR	10496847	Parameter	void * handle	897:17:32567:32578	10496789	0	True				
ANR	10496848	ParameterType	void *		10496789	0					
ANR	10496849	Identifier	handle		10496789	1					
ANR	10496850	Parameter	void * device	897:31:32581:32592	10496789	1	True				
ANR	10496851	ParameterType	void *		10496789	0					
ANR	10496852	Identifier	device		10496789	1					
ANR	10496853	Parameter	int copies	897:45:32595:32604	10496789	2	True				
ANR	10496854	ParameterType	int		10496789	0					
ANR	10496855	Identifier	copies		10496789	1					
ANR	10496856	Parameter	int flush	897:57:32607:32615	10496789	3	True				
ANR	10496857	ParameterType	int		10496789	0					
ANR	10496858	Identifier	flush		10496789	1					
ANR	10496859	CFGEntryNode	ENTRY		10496789		True				
ANR	10496860	CFGExitNode	EXIT		10496789		True				
ANR	10496861	Symbol	img		10496789						
ANR	10496862	Symbol	thread_id		10496789						
ANR	10496863	Symbol	copies		10496789						
ANR	10496864	Symbol	flush		10496789						
ANR	10496865	Symbol	stdout		10496789						
ANR	10496866	Symbol	image_find		10496789						
ANR	10496867	Symbol	handle		10496789						
ANR	10496868	Symbol	DISPLAY_PAGE		10496789						
ANR	10496869	Symbol	device		10496789						
ANR	10496870	Function	display_update	910:0:32911:33203							
ANR	10496871	FunctionDef	"display_update (void * handle , void * device , int x , int y , int w , int h)"		10496870	0					
ANR	10496872	CompoundStatement		912:0:32990:33203	10496870	0					
ANR	10496873	ReturnStatement	return 0 ;	917:4:33193:33201	10496870	0	True				
ANR	10496874	PrimaryExpression	0		10496870	0					
ANR	10496875	ReturnType	int		10496870	1					
ANR	10496876	Identifier	display_update		10496870	2					
ANR	10496877	ParameterList	"void * handle , void * device , int x , int y , int w , int h"		10496870	3					
ANR	10496878	Parameter	void * handle	910:19:32930:32941	10496870	0	True				
ANR	10496879	ParameterType	void *		10496870	0					
ANR	10496880	Identifier	handle		10496870	1					
ANR	10496881	Parameter	void * device	910:33:32944:32955	10496870	1	True				
ANR	10496882	ParameterType	void *		10496870	0					
ANR	10496883	Identifier	device		10496870	1					
ANR	10496884	Parameter	int x	911:4:32962:32966	10496870	2	True				
ANR	10496885	ParameterType	int		10496870	0					
ANR	10496886	Identifier	x		10496870	1					
ANR	10496887	Parameter	int y	911:11:32969:32973	10496870	3	True				
ANR	10496888	ParameterType	int		10496870	0					
ANR	10496889	Identifier	y		10496870	1					
ANR	10496890	Parameter	int w	911:18:32976:32980	10496870	4	True				
ANR	10496891	ParameterType	int		10496870	0					
ANR	10496892	Identifier	w		10496870	1					
ANR	10496893	Parameter	int h	911:25:32983:32987	10496870	5	True				
ANR	10496894	ParameterType	int		10496870	0					
ANR	10496895	Identifier	h		10496870	1					
ANR	10496896	CFGEntryNode	ENTRY		10496870		True				
ANR	10496897	CFGExitNode	EXIT		10496870		True				
ANR	10496898	Symbol	w		10496870						
ANR	10496899	Symbol	x		10496870						
ANR	10496900	Symbol	h		10496870						
ANR	10496901	Symbol	y		10496870						
ANR	10496902	Symbol	handle		10496870						
ANR	10496903	Symbol	device		10496870						
ANR	10496904	Function	display_memalloc	925:0:33338:33662							
ANR	10496905	FunctionDef	"display_memalloc (void * handle , void * device , unsigned long size)"		10496904	0					
ANR	10496906	CompoundStatement		926:0:33409:33662	10496904	0					
ANR	10496907	IdentifierDeclStatement	void * mem ;	927:4:33415:33424	10496904	0	True				
ANR	10496908	IdentifierDecl	* mem		10496904	0					
ANR	10496909	IdentifierDeclType	void *		10496904	0					
ANR	10496910	Identifier	mem		10496904	1					
ANR	10496911	ExpressionStatement	"fprintf ( stdout , ""display_memalloc(0x%x 0x%x %d)\\n"" , handle , device , size )"	929:4:33451:33532	10496904	1	True				
ANR	10496912	CallExpression	"fprintf ( stdout , ""display_memalloc(0x%x 0x%x %d)\\n"" , handle , device , size )"		10496904	0					
ANR	10496913	Callee	fprintf		10496904	0					
ANR	10496914	Identifier	fprintf		10496904	0					
ANR	10496915	ArgumentList	stdout		10496904	1					
ANR	10496916	Argument	stdout		10496904	0					
ANR	10496917	Identifier	stdout		10496904	0					
ANR	10496918	Argument	"""display_memalloc(0x%x 0x%x %d)\\n"""		10496904	1					
ANR	10496919	PrimaryExpression	"""display_memalloc(0x%x 0x%x %d)\\n"""		10496904	0					
ANR	10496920	Argument	handle		10496904	2					
ANR	10496921	Identifier	handle		10496904	0					
ANR	10496922	Argument	device		10496904	3					
ANR	10496923	Identifier	device		10496904	0					
ANR	10496924	Argument	size		10496904	4					
ANR	10496925	Identifier	size		10496904	0					
ANR	10496926	ExpressionStatement	mem = malloc ( size )	932:4:33545:33563	10496904	2	True				
ANR	10496927	AssignmentExpression	mem = malloc ( size )		10496904	0		=			
ANR	10496928	Identifier	mem		10496904	0					
ANR	10496929	CallExpression	malloc ( size )		10496904	1					
ANR	10496930	Callee	malloc		10496904	0					
ANR	10496931	Identifier	malloc		10496904	0					
ANR	10496932	ArgumentList	size		10496904	1					
ANR	10496933	Argument	size		10496904	0					
ANR	10496934	Identifier	size		10496904	0					
ANR	10496935	ExpressionStatement	"fprintf ( stdout , ""  returning 0x%x\\n"" , ( int ) mem )"	934:4:33590:33637	10496904	3	True				
ANR	10496936	CallExpression	"fprintf ( stdout , ""  returning 0x%x\\n"" , ( int ) mem )"		10496904	0					
ANR	10496937	Callee	fprintf		10496904	0					
ANR	10496938	Identifier	fprintf		10496904	0					
ANR	10496939	ArgumentList	stdout		10496904	1					
ANR	10496940	Argument	stdout		10496904	0					
ANR	10496941	Identifier	stdout		10496904	0					
ANR	10496942	Argument	"""  returning 0x%x\\n"""		10496904	1					
ANR	10496943	PrimaryExpression	"""  returning 0x%x\\n"""		10496904	0					
ANR	10496944	Argument	( int ) mem		10496904	2					
ANR	10496945	CastExpression	( int ) mem		10496904	0					
ANR	10496946	CastTarget	int		10496904	0					
ANR	10496947	Identifier	mem		10496904	1					
ANR	10496948	ReturnStatement	return mem ;	936:4:33650:33660	10496904	4	True				
ANR	10496949	Identifier	mem		10496904	0					
ANR	10496950	ReturnType	void *		10496904	1					
ANR	10496951	Identifier	display_memalloc		10496904	2					
ANR	10496952	ParameterList	"void * handle , void * device , unsigned long size"		10496904	3					
ANR	10496953	Parameter	void * handle	925:23:33361:33372	10496904	0	True				
ANR	10496954	ParameterType	void *		10496904	0					
ANR	10496955	Identifier	handle		10496904	1					
ANR	10496956	Parameter	void * device	925:37:33375:33386	10496904	1	True				
ANR	10496957	ParameterType	void *		10496904	0					
ANR	10496958	Identifier	device		10496904	1					
ANR	10496959	Parameter	unsigned long size	925:51:33389:33406	10496904	2	True				
ANR	10496960	ParameterType	unsigned long		10496904	0					
ANR	10496961	Identifier	size		10496904	1					
ANR	10496962	CFGEntryNode	ENTRY		10496904		True				
ANR	10496963	CFGExitNode	EXIT		10496904		True				
ANR	10496964	Symbol	malloc		10496904						
ANR	10496965	Symbol	size		10496904						
ANR	10496966	Symbol	mem		10496904						
ANR	10496967	Symbol	stdout		10496904						
ANR	10496968	Symbol	handle		10496904						
ANR	10496969	Symbol	device		10496904						
ANR	10496970	Function	display_memfree	939:0:33665:33872							
ANR	10496971	FunctionDef	"display_memfree (void * handle , void * device , void * mem)"		10496970	0					
ANR	10496972	CompoundStatement		940:0:33724:33872	10496970	0					
ANR	10496973	ExpressionStatement	"fprintf ( stdout , ""display_memfree(0x%x, 0x%x, 0x%x)\\n"" , handle , device , mem )"	942:4:33751:33834	10496970	0	True				
ANR	10496974	CallExpression	"fprintf ( stdout , ""display_memfree(0x%x, 0x%x, 0x%x)\\n"" , handle , device , mem )"		10496970	0					
ANR	10496975	Callee	fprintf		10496970	0					
ANR	10496976	Identifier	fprintf		10496970	0					
ANR	10496977	ArgumentList	stdout		10496970	1					
ANR	10496978	Argument	stdout		10496970	0					
ANR	10496979	Identifier	stdout		10496970	0					
ANR	10496980	Argument	"""display_memfree(0x%x, 0x%x, 0x%x)\\n"""		10496970	1					
ANR	10496981	PrimaryExpression	"""display_memfree(0x%x, 0x%x, 0x%x)\\n"""		10496970	0					
ANR	10496982	Argument	handle		10496970	2					
ANR	10496983	Identifier	handle		10496970	0					
ANR	10496984	Argument	device		10496970	3					
ANR	10496985	Identifier	device		10496970	0					
ANR	10496986	Argument	mem		10496970	4					
ANR	10496987	Identifier	mem		10496970	0					
ANR	10496988	ExpressionStatement	free ( mem )	945:4:33847:33856	10496970	1	True				
ANR	10496989	CallExpression	free ( mem )		10496970	0					
ANR	10496990	Callee	free		10496970	0					
ANR	10496991	Identifier	free		10496970	0					
ANR	10496992	ArgumentList	mem		10496970	1					
ANR	10496993	Argument	mem		10496970	0					
ANR	10496994	Identifier	mem		10496970	0					
ANR	10496995	ReturnStatement	return 0 ;	946:4:33862:33870	10496970	2	True				
ANR	10496996	PrimaryExpression	0		10496970	0					
ANR	10496997	ReturnType	int		10496970	1					
ANR	10496998	Identifier	display_memfree		10496970	2					
ANR	10496999	ParameterList	"void * handle , void * device , void * mem"		10496970	3					
ANR	10497000	Parameter	void * handle	939:20:33685:33696	10496970	0	True				
ANR	10497001	ParameterType	void *		10496970	0					
ANR	10497002	Identifier	handle		10496970	1					
ANR	10497003	Parameter	void * device	939:34:33699:33710	10496970	1	True				
ANR	10497004	ParameterType	void *		10496970	0					
ANR	10497005	Identifier	device		10496970	1					
ANR	10497006	Parameter	void * mem	939:48:33713:33721	10496970	2	True				
ANR	10497007	ParameterType	void *		10496970	0					
ANR	10497008	Identifier	mem		10496970	1					
ANR	10497009	CFGEntryNode	ENTRY		10496970		True				
ANR	10497010	CFGExitNode	EXIT		10496970		True				
ANR	10497011	Symbol	mem		10496970						
ANR	10497012	Symbol	stdout		10496970						
ANR	10497013	Symbol	handle		10496970						
ANR	10497014	Symbol	device		10496970						
ANR	10497015	DeclStmt									
ANR	10497016	Decl							display_callback	display_callback	display
ANR	10497017	Function	init_gs_display	974:0:34341:36659							
ANR	10497018	FunctionDef	"init_gs_display (int argc , char * * argv)"		10497017	0					
ANR	10497019	CompoundStatement		976:0:34384:36659	10497017	0					
ANR	10497020	IdentifierDeclStatement	char buf [ 256 ] ;	977:4:34390:34403	10497017	0	True				
ANR	10497021	IdentifierDecl	buf [ 256 ]		10497017	0					
ANR	10497022	IdentifierDeclType	char [ 256 ]		10497017	0					
ANR	10497023	Identifier	buf		10497017	1					
ANR	10497024	PrimaryExpression	256		10497017	2					
ANR	10497025	IdentifierDeclStatement	char * gsargs [ 32 ] ;	978:4:34409:34425	10497017	1	True				
ANR	10497026	IdentifierDecl	* gsargs [ 32 ]		10497017	0					
ANR	10497027	IdentifierDeclType	char * [ 32 ]		10497017	0					
ANR	10497028	Identifier	gsargs		10497017	1					
ANR	10497029	PrimaryExpression	32		10497017	2					
ANR	10497030	IdentifierDeclStatement	int atgsarg = 1 ;	979:4:34444:34459	10497017	2	True				
ANR	10497031	IdentifierDecl	atgsarg = 1		10497017	0					
ANR	10497032	IdentifierDeclType	int		10497017	0					
ANR	10497033	Identifier	atgsarg		10497017	1					
ANR	10497034	AssignmentExpression	atgsarg = 1		10497017	2		=			
ANR	10497035	Identifier	atgsarg		10497017	0					
ANR	10497036	PrimaryExpression	1		10497017	1					
ANR	10497037	IdentifierDeclStatement	"int code , exit_code , i , j , k ;"	980:4:34465:34493	10497017	3	True				
ANR	10497038	IdentifierDecl	code		10497017	0					
ANR	10497039	IdentifierDeclType	int		10497017	0					
ANR	10497040	Identifier	code		10497017	1					
ANR	10497041	IdentifierDecl	exit_code		10497017	1					
ANR	10497042	IdentifierDeclType	int		10497017	0					
ANR	10497043	Identifier	exit_code		10497017	1					
ANR	10497044	IdentifierDecl	i		10497017	2					
ANR	10497045	IdentifierDeclType	int		10497017	0					
ANR	10497046	Identifier	i		10497017	1					
ANR	10497047	IdentifierDecl	j		10497017	3					
ANR	10497048	IdentifierDeclType	int		10497017	0					
ANR	10497049	Identifier	j		10497017	1					
ANR	10497050	IdentifierDecl	k		10497017	4					
ANR	10497051	IdentifierDeclType	int		10497017	0					
ANR	10497052	Identifier	k		10497017	1					
ANR	10497053	ExpressionStatement	"gsargs [ 0 ] = """""	982:4:34500:34514	10497017	4	True				
ANR	10497054	AssignmentExpression	"gsargs [ 0 ] = """""		10497017	0		=			
ANR	10497055	ArrayIndexing	gsargs [ 0 ]		10497017	0					
ANR	10497056	Identifier	gsargs		10497017	0					
ANR	10497057	PrimaryExpression	0		10497017	1					
ANR	10497058	PrimaryExpression	""""""		10497017	1					
ANR	10497059	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	983:4:34520:34547	10497017	5	True				
ANR	10497060	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		10497017	0					
ANR	10497061	Callee	memset		10497017	0					
ANR	10497062	Identifier	memset		10497017	0					
ANR	10497063	ArgumentList	buf		10497017	1					
ANR	10497064	Argument	buf		10497017	0					
ANR	10497065	Identifier	buf		10497017	0					
ANR	10497066	Argument	0		10497017	1					
ANR	10497067	PrimaryExpression	0		10497017	0					
ANR	10497068	Argument	sizeof ( buf )		10497017	2					
ANR	10497069	SizeofExpression	sizeof ( buf )		10497017	0					
ANR	10497070	Sizeof	sizeof		10497017	0					
ANR	10497071	SizeofOperand	buf		10497017	1					
ANR	10497072	IfStatement	if ( ! _isatty ( fileno ( stdin ) ) )		10497017	6					
ANR	10497073	Condition	! _isatty ( fileno ( stdin ) )	986:8:34575:34597	10497017	0	True				
ANR	10497074	UnaryOperationExpression	! _isatty ( fileno ( stdin ) )		10497017	0					
ANR	10497075	UnaryOperator	!		10497017	0					
ANR	10497076	CallExpression	_isatty ( fileno ( stdin ) )		10497017	1					
ANR	10497077	Callee	_isatty		10497017	0					
ANR	10497078	Identifier	_isatty		10497017	0					
ANR	10497079	ArgumentList	fileno ( stdin )		10497017	1					
ANR	10497080	Argument	fileno ( stdin )		10497017	0					
ANR	10497081	CallExpression	fileno ( stdin )		10497017	0					
ANR	10497082	Callee	fileno		10497017	0					
ANR	10497083	Identifier	fileno		10497017	0					
ANR	10497084	ArgumentList	stdin		10497017	1					
ANR	10497085	Argument	stdin		10497017	0					
ANR	10497086	Identifier	stdin		10497017	0					
ANR	10497087	ExpressionStatement	"_setmode ( fileno ( stdin ) , _O_BINARY )"	987:8:34608:34642	10497017	1	True				
ANR	10497088	CallExpression	"_setmode ( fileno ( stdin ) , _O_BINARY )"		10497017	0					
ANR	10497089	Callee	_setmode		10497017	0					
ANR	10497090	Identifier	_setmode		10497017	0					
ANR	10497091	ArgumentList	fileno ( stdin )		10497017	1					
ANR	10497092	Argument	fileno ( stdin )		10497017	0					
ANR	10497093	CallExpression	fileno ( stdin )		10497017	0					
ANR	10497094	Callee	fileno		10497017	0					
ANR	10497095	Identifier	fileno		10497017	0					
ANR	10497096	ArgumentList	stdin		10497017	1					
ANR	10497097	Argument	stdin		10497017	0					
ANR	10497098	Identifier	stdin		10497017	0					
ANR	10497099	Argument	_O_BINARY		10497017	1					
ANR	10497100	Identifier	_O_BINARY		10497017	0					
ANR	10497101	ExpressionStatement	"_setmode ( fileno ( stdout ) , _O_BINARY )"	988:4:34648:34683	10497017	7	True				
ANR	10497102	CallExpression	"_setmode ( fileno ( stdout ) , _O_BINARY )"		10497017	0					
ANR	10497103	Callee	_setmode		10497017	0					
ANR	10497104	Identifier	_setmode		10497017	0					
ANR	10497105	ArgumentList	fileno ( stdout )		10497017	1					
ANR	10497106	Argument	fileno ( stdout )		10497017	0					
ANR	10497107	CallExpression	fileno ( stdout )		10497017	0					
ANR	10497108	Callee	fileno		10497017	0					
ANR	10497109	Identifier	fileno		10497017	0					
ANR	10497110	ArgumentList	stdout		10497017	1					
ANR	10497111	Argument	stdout		10497017	0					
ANR	10497112	Identifier	stdout		10497017	0					
ANR	10497113	Argument	_O_BINARY		10497017	1					
ANR	10497114	Identifier	_O_BINARY		10497017	0					
ANR	10497115	ExpressionStatement	"_setmode ( fileno ( stderr ) , _O_BINARY )"	989:4:34689:34724	10497017	8	True				
ANR	10497116	CallExpression	"_setmode ( fileno ( stderr ) , _O_BINARY )"		10497017	0					
ANR	10497117	Callee	_setmode		10497017	0					
ANR	10497118	Identifier	_setmode		10497017	0					
ANR	10497119	ArgumentList	fileno ( stderr )		10497017	1					
ANR	10497120	Argument	fileno ( stderr )		10497017	0					
ANR	10497121	CallExpression	fileno ( stderr )		10497017	0					
ANR	10497122	Callee	fileno		10497017	0					
ANR	10497123	Identifier	fileno		10497017	0					
ANR	10497124	ArgumentList	stderr		10497017	1					
ANR	10497125	Argument	stderr		10497017	0					
ANR	10497126	Identifier	stderr		10497017	0					
ANR	10497127	Argument	_O_BINARY		10497017	1					
ANR	10497128	Identifier	_O_BINARY		10497017	0					
ANR	10497129	ExpressionStatement	hwndforeground = GetForegroundWindow ( )	991:4:34731:34769	10497017	9	True				
ANR	10497130	AssignmentExpression	hwndforeground = GetForegroundWindow ( )		10497017	0		=			
ANR	10497131	Identifier	hwndforeground		10497017	0					
ANR	10497132	CallExpression	GetForegroundWindow ( )		10497017	1					
ANR	10497133	Callee	GetForegroundWindow		10497017	0					
ANR	10497134	Identifier	GetForegroundWindow		10497017	0					
ANR	10497135	ArgumentList			10497017	1					
ANR	10497136	IfStatement	"if ( gsapi_new_instance ( ( void * ) & instance , NULL ) < 0 )"		10497017	10					
ANR	10497137	Condition	"gsapi_new_instance ( ( void * ) & instance , NULL ) < 0"	993:8:34828:34874	10497017	0	True				
ANR	10497138	RelationalExpression	"gsapi_new_instance ( ( void * ) & instance , NULL ) < 0"		10497017	0		<			
ANR	10497139	CallExpression	"gsapi_new_instance ( ( void * ) & instance , NULL )"		10497017	0					
ANR	10497140	Callee	gsapi_new_instance		10497017	0					
ANR	10497141	Identifier	gsapi_new_instance		10497017	0					
ANR	10497142	ArgumentList	( void * ) & instance		10497017	1					
ANR	10497143	Argument	( void * ) & instance		10497017	0					
ANR	10497144	CastExpression	( void * ) & instance		10497017	0					
ANR	10497145	CastTarget	void *		10497017	0					
ANR	10497146	UnaryOperationExpression	& instance		10497017	1					
ANR	10497147	UnaryOperator	&		10497017	0					
ANR	10497148	Identifier	instance		10497017	1					
ANR	10497149	Argument	NULL		10497017	1					
ANR	10497150	Identifier	NULL		10497017	0					
ANR	10497151	PrimaryExpression	0		10497017	1					
ANR	10497152	CompoundStatement		18:57:492:492	10497017	1					
ANR	10497153	ExpressionStatement	"fprintf ( stderr , ""Can't create Ghostscript instance\\n"" )"	994:8:34887:34941	10497017	0	True				
ANR	10497154	CallExpression	"fprintf ( stderr , ""Can't create Ghostscript instance\\n"" )"		10497017	0					
ANR	10497155	Callee	fprintf		10497017	0					
ANR	10497156	Identifier	fprintf		10497017	0					
ANR	10497157	ArgumentList	stderr		10497017	1					
ANR	10497158	Argument	stderr		10497017	0					
ANR	10497159	Identifier	stderr		10497017	0					
ANR	10497160	Argument	"""Can't create Ghostscript instance\\n"""		10497017	1					
ANR	10497161	PrimaryExpression	"""Can't create Ghostscript instance\\n"""		10497017	0					
ANR	10497162	ReturnStatement	return 1 ;	995:8:34951:34959	10497017	1	True				
ANR	10497163	PrimaryExpression	1		10497017	0					
ANR	10497164	IfStatement	"if ( _beginthread ( winthread , 65535 , NULL ) == - 1 )"		10497017	11					
ANR	10497165	Condition	"_beginthread ( winthread , 65535 , NULL ) == - 1"	999:8:34993:35034	10497017	0	True				
ANR	10497166	EqualityExpression	"_beginthread ( winthread , 65535 , NULL ) == - 1"		10497017	0		==			
ANR	10497167	CallExpression	"_beginthread ( winthread , 65535 , NULL )"		10497017	0					
ANR	10497168	Callee	_beginthread		10497017	0					
ANR	10497169	Identifier	_beginthread		10497017	0					
ANR	10497170	ArgumentList	winthread		10497017	1					
ANR	10497171	Argument	winthread		10497017	0					
ANR	10497172	Identifier	winthread		10497017	0					
ANR	10497173	Argument	65535		10497017	1					
ANR	10497174	PrimaryExpression	65535		10497017	0					
ANR	10497175	Argument	NULL		10497017	2					
ANR	10497176	Identifier	NULL		10497017	0					
ANR	10497177	UnaryOperationExpression	- 1		10497017	1					
ANR	10497178	UnaryOperator	-		10497017	0					
ANR	10497179	PrimaryExpression	1		10497017	1					
ANR	10497180	CompoundStatement		24:52:652:652	10497017	1					
ANR	10497181	ExpressionStatement	"fprintf ( stderr , ""GUI thread creation failed\\n"" )"	1000:8:35047:35094	10497017	0	True				
ANR	10497182	CallExpression	"fprintf ( stderr , ""GUI thread creation failed\\n"" )"		10497017	0					
ANR	10497183	Callee	fprintf		10497017	0					
ANR	10497184	Identifier	fprintf		10497017	0					
ANR	10497185	ArgumentList	stderr		10497017	1					
ANR	10497186	Argument	stderr		10497017	0					
ANR	10497187	Identifier	stderr		10497017	0					
ANR	10497188	Argument	"""GUI thread creation failed\\n"""		10497017	1					
ANR	10497189	PrimaryExpression	"""GUI thread creation failed\\n"""		10497017	0					
ANR	10497190	ElseStatement	else		10497017	0					
ANR	10497191	CompoundStatement		28:8:736:746	10497017	0					
ANR	10497192	IdentifierDeclStatement	int n = 30 ;	1003:8:35121:35131	10497017	0	True				
ANR	10497193	IdentifierDecl	n = 30		10497017	0					
ANR	10497194	IdentifierDeclType	int		10497017	0					
ANR	10497195	Identifier	n		10497017	1					
ANR	10497196	AssignmentExpression	n = 30		10497017	2		=			
ANR	10497197	Identifier	n		10497017	0					
ANR	10497198	PrimaryExpression	30		10497017	1					
ANR	10497199	ExpressionStatement	Sleep ( 0 )	1005:8:35180:35188	10497017	1	True				
ANR	10497200	CallExpression	Sleep ( 0 )		10497017	0					
ANR	10497201	Callee	Sleep		10497017	0					
ANR	10497202	Identifier	Sleep		10497017	0					
ANR	10497203	ArgumentList	0		10497017	1					
ANR	10497204	Argument	0		10497017	0					
ANR	10497205	PrimaryExpression	0		10497017	0					
ANR	10497206	WhileStatement	while ( n && ( hthread == INVALID_HANDLE_VALUE ) )		10497017	2					
ANR	10497207	Condition	n && ( hthread == INVALID_HANDLE_VALUE )	1006:15:35205:35242	10497017	0	True				
ANR	10497208	AndExpression	n && ( hthread == INVALID_HANDLE_VALUE )		10497017	0		&&			
ANR	10497209	Identifier	n		10497017	0					
ANR	10497210	EqualityExpression	hthread == INVALID_HANDLE_VALUE		10497017	1		==			
ANR	10497211	Identifier	hthread		10497017	0					
ANR	10497212	Identifier	INVALID_HANDLE_VALUE		10497017	1					
ANR	10497213	CompoundStatement		31:55:860:860	10497017	1					
ANR	10497214	ExpressionStatement	n --	1007:12:35259:35262	10497017	0	True				
ANR	10497215	PostIncDecOperationExpression	n --		10497017	0					
ANR	10497216	Identifier	n		10497017	0					
ANR	10497217	IncDec	--		10497017	1					
ANR	10497218	ExpressionStatement	Sleep ( 100 )	1008:12:35276:35286	10497017	1	True				
ANR	10497219	CallExpression	Sleep ( 100 )		10497017	0					
ANR	10497220	Callee	Sleep		10497017	0					
ANR	10497221	Identifier	Sleep		10497017	0					
ANR	10497222	ArgumentList	100		10497017	1					
ANR	10497223	Argument	100		10497017	0					
ANR	10497224	PrimaryExpression	100		10497017	0					
ANR	10497225	WhileStatement	"while ( n && ( PostThreadMessage ( thread_id , WM_USER , 0 , 0 ) == 0 ) )"		10497017	3					
ANR	10497226	Condition	"n && ( PostThreadMessage ( thread_id , WM_USER , 0 , 0 ) == 0 )"	1010:15:35313:35367	10497017	0	True				
ANR	10497227	AndExpression	"n && ( PostThreadMessage ( thread_id , WM_USER , 0 , 0 ) == 0 )"		10497017	0		&&			
ANR	10497228	Identifier	n		10497017	0					
ANR	10497229	EqualityExpression	"PostThreadMessage ( thread_id , WM_USER , 0 , 0 ) == 0"		10497017	1		==			
ANR	10497230	CallExpression	"PostThreadMessage ( thread_id , WM_USER , 0 , 0 )"		10497017	0					
ANR	10497231	Callee	PostThreadMessage		10497017	0					
ANR	10497232	Identifier	PostThreadMessage		10497017	0					
ANR	10497233	ArgumentList	thread_id		10497017	1					
ANR	10497234	Argument	thread_id		10497017	0					
ANR	10497235	Identifier	thread_id		10497017	0					
ANR	10497236	Argument	WM_USER		10497017	1					
ANR	10497237	Identifier	WM_USER		10497017	0					
ANR	10497238	Argument	0		10497017	2					
ANR	10497239	PrimaryExpression	0		10497017	0					
ANR	10497240	Argument	0		10497017	3					
ANR	10497241	PrimaryExpression	0		10497017	0					
ANR	10497242	PrimaryExpression	0		10497017	1					
ANR	10497243	CompoundStatement		35:72:985:985	10497017	1					
ANR	10497244	ExpressionStatement	n --	1011:12:35384:35387	10497017	0	True				
ANR	10497245	PostIncDecOperationExpression	n --		10497017	0					
ANR	10497246	Identifier	n		10497017	0					
ANR	10497247	IncDec	--		10497017	1					
ANR	10497248	ExpressionStatement	Sleep ( 100 )	1012:12:35401:35411	10497017	1	True				
ANR	10497249	CallExpression	Sleep ( 100 )		10497017	0					
ANR	10497250	Callee	Sleep		10497017	0					
ANR	10497251	Identifier	Sleep		10497017	0					
ANR	10497252	ArgumentList	100		10497017	1					
ANR	10497253	Argument	100		10497017	0					
ANR	10497254	PrimaryExpression	100		10497017	0					
ANR	10497255	IfStatement	if ( n == 0 )		10497017	4					
ANR	10497256	Condition	n == 0	1014:12:35435:35440	10497017	0	True				
ANR	10497257	EqualityExpression	n == 0		10497017	0		==			
ANR	10497258	Identifier	n		10497017	0					
ANR	10497259	PrimaryExpression	0		10497017	1					
ANR	10497260	ExpressionStatement	"fprintf ( stderr , ""Can't post message to GUI thread\\n"" )"	1015:12:35455:35508	10497017	1	True				
ANR	10497261	CallExpression	"fprintf ( stderr , ""Can't post message to GUI thread\\n"" )"		10497017	0					
ANR	10497262	Callee	fprintf		10497017	0					
ANR	10497263	Identifier	fprintf		10497017	0					
ANR	10497264	ArgumentList	stderr		10497017	1					
ANR	10497265	Argument	stderr		10497017	0					
ANR	10497266	Identifier	stderr		10497017	0					
ANR	10497267	Argument	"""Can't post message to GUI thread\\n"""		10497017	1					
ANR	10497268	PrimaryExpression	"""Can't post message to GUI thread\\n"""		10497017	0					
ANR	10497269	ExpressionStatement	"gsapi_set_stdio ( instance , gsdll_stdin , gsdll_stdout , gsdll_stderr )"	1017:4:35520:35586	10497017	12	True				
ANR	10497270	CallExpression	"gsapi_set_stdio ( instance , gsdll_stdin , gsdll_stdout , gsdll_stderr )"		10497017	0					
ANR	10497271	Callee	gsapi_set_stdio		10497017	0					
ANR	10497272	Identifier	gsapi_set_stdio		10497017	0					
ANR	10497273	ArgumentList	instance		10497017	1					
ANR	10497274	Argument	instance		10497017	0					
ANR	10497275	Identifier	instance		10497017	0					
ANR	10497276	Argument	gsdll_stdin		10497017	1					
ANR	10497277	Identifier	gsdll_stdin		10497017	0					
ANR	10497278	Argument	gsdll_stdout		10497017	2					
ANR	10497279	Identifier	gsdll_stdout		10497017	0					
ANR	10497280	Argument	gsdll_stderr		10497017	3					
ANR	10497281	Identifier	gsdll_stderr		10497017	0					
ANR	10497282	ExpressionStatement	"gsapi_set_display_callback ( instance , & display )"	1018:4:35592:35638	10497017	13	True				
ANR	10497283	CallExpression	"gsapi_set_display_callback ( instance , & display )"		10497017	0					
ANR	10497284	Callee	gsapi_set_display_callback		10497017	0					
ANR	10497285	Identifier	gsapi_set_display_callback		10497017	0					
ANR	10497286	ArgumentList	instance		10497017	1					
ANR	10497287	Argument	instance		10497017	0					
ANR	10497288	Identifier	instance		10497017	0					
ANR	10497289	Argument	& display		10497017	1					
ANR	10497290	UnaryOperationExpression	& display		10497017	0					
ANR	10497291	UnaryOperator	&		10497017	0					
ANR	10497292	Identifier	display		10497017	1					
ANR	10497293	ExpressionStatement	"gsargs [ atgsarg ++ ] = ""-dDisplayFormat=16#20804"""	1019:4:35644:35690	10497017	14	True				
ANR	10497294	AssignmentExpression	"gsargs [ atgsarg ++ ] = ""-dDisplayFormat=16#20804"""		10497017	0		=			
ANR	10497295	ArrayIndexing	gsargs [ atgsarg ++ ]		10497017	0					
ANR	10497296	Identifier	gsargs		10497017	0					
ANR	10497297	PostIncDecOperationExpression	atgsarg ++		10497017	1					
ANR	10497298	Identifier	atgsarg		10497017	0					
ANR	10497299	IncDec	++		10497017	1					
ANR	10497300	PrimaryExpression	"""-dDisplayFormat=16#20804"""		10497017	1					
ANR	10497301	ForStatement	for ( i = 0 ; i < argc ; i ++ )		10497017	15					
ANR	10497302	ForInit	i = 0 ;	1022:8:35724:35727	10497017	0	True				
ANR	10497303	AssignmentExpression	i = 0		10497017	0		=			
ANR	10497304	Identifier	i		10497017	0					
ANR	10497305	PrimaryExpression	0		10497017	1					
ANR	10497306	Condition	i < argc	1022:13:35729:35734	10497017	1	True				
ANR	10497307	RelationalExpression	i < argc		10497017	0		<			
ANR	10497308	Identifier	i		10497017	0					
ANR	10497309	Identifier	argc		10497017	1					
ANR	10497310	PostIncDecOperationExpression	i ++	1022:21:35737:35739	10497017	2	True				
ANR	10497311	Identifier	i		10497017	0					
ANR	10497312	IncDec	++		10497017	1					
ANR	10497313	ExpressionStatement	gsargs [ atgsarg ++ ] = argv [ i ]	1023:8:35750:35777	10497017	3	True				
ANR	10497314	AssignmentExpression	gsargs [ atgsarg ++ ] = argv [ i ]		10497017	0		=			
ANR	10497315	ArrayIndexing	gsargs [ atgsarg ++ ]		10497017	0					
ANR	10497316	Identifier	gsargs		10497017	0					
ANR	10497317	PostIncDecOperationExpression	atgsarg ++		10497017	1					
ANR	10497318	Identifier	atgsarg		10497017	0					
ANR	10497319	IncDec	++		10497017	1					
ANR	10497320	ArrayIndexing	argv [ i ]		10497017	1					
ANR	10497321	Identifier	argv		10497017	0					
ANR	10497322	Identifier	i		10497017	1					
ANR	10497323	IfStatement	"if ( ( code = gsapi_init_with_args ( instance , atgsarg , gsargs ) ) < 0 )"		10497017	16					
ANR	10497324	Condition	"( code = gsapi_init_with_args ( instance , atgsarg , gsargs ) ) < 0"	1024:8:35787:35846	10497017	0	True				
ANR	10497325	RelationalExpression	"( code = gsapi_init_with_args ( instance , atgsarg , gsargs ) ) < 0"		10497017	0		<			
ANR	10497326	AssignmentExpression	"code = gsapi_init_with_args ( instance , atgsarg , gsargs )"		10497017	0		=			
ANR	10497327	Identifier	code		10497017	0					
ANR	10497328	CallExpression	"gsapi_init_with_args ( instance , atgsarg , gsargs )"		10497017	1					
ANR	10497329	Callee	gsapi_init_with_args		10497017	0					
ANR	10497330	Identifier	gsapi_init_with_args		10497017	0					
ANR	10497331	ArgumentList	instance		10497017	1					
ANR	10497332	Argument	instance		10497017	0					
ANR	10497333	Identifier	instance		10497017	0					
ANR	10497334	Argument	atgsarg		10497017	1					
ANR	10497335	Identifier	atgsarg		10497017	0					
ANR	10497336	Argument	gsargs		10497017	2					
ANR	10497337	Identifier	gsargs		10497017	0					
ANR	10497338	PrimaryExpression	0		10497017	1					
ANR	10497339	CompoundStatement		49:70:1464:1464	10497017	1					
ANR	10497340	ExpressionStatement	"printf ( ""gsapi_init returned code = %d\\n"" , code )"	1025:8:35859:35906	10497017	0	True				
ANR	10497341	CallExpression	"printf ( ""gsapi_init returned code = %d\\n"" , code )"		10497017	0					
ANR	10497342	Callee	printf		10497017	0					
ANR	10497343	Identifier	printf		10497017	0					
ANR	10497344	ArgumentList	"""gsapi_init returned code = %d\\n"""		10497017	1					
ANR	10497345	Argument	"""gsapi_init returned code = %d\\n"""		10497017	0					
ANR	10497346	PrimaryExpression	"""gsapi_init returned code = %d\\n"""		10497017	0					
ANR	10497347	Argument	code		10497017	1					
ANR	10497348	Identifier	code		10497017	0					
ANR	10497349	ReturnStatement	return code ;	1026:8:35916:35927	10497017	1	True				
ANR	10497350	Identifier	code		10497017	0					
ANR	10497351	IfStatement	"if ( ( code = gsapi_run_string_begin ( instance , 0 , & exit_code ) ) < 0 )"		10497017	17					
ANR	10497352	Condition	"( code = gsapi_run_string_begin ( instance , 0 , & exit_code ) ) < 0"	1028:8:35943:36002	10497017	0	True				
ANR	10497353	RelationalExpression	"( code = gsapi_run_string_begin ( instance , 0 , & exit_code ) ) < 0"		10497017	0		<			
ANR	10497354	AssignmentExpression	"code = gsapi_run_string_begin ( instance , 0 , & exit_code )"		10497017	0		=			
ANR	10497355	Identifier	code		10497017	0					
ANR	10497356	CallExpression	"gsapi_run_string_begin ( instance , 0 , & exit_code )"		10497017	1					
ANR	10497357	Callee	gsapi_run_string_begin		10497017	0					
ANR	10497358	Identifier	gsapi_run_string_begin		10497017	0					
ANR	10497359	ArgumentList	instance		10497017	1					
ANR	10497360	Argument	instance		10497017	0					
ANR	10497361	Identifier	instance		10497017	0					
ANR	10497362	Argument	0		10497017	1					
ANR	10497363	PrimaryExpression	0		10497017	0					
ANR	10497364	Argument	& exit_code		10497017	2					
ANR	10497365	UnaryOperationExpression	& exit_code		10497017	0					
ANR	10497366	UnaryOperator	&		10497017	0					
ANR	10497367	Identifier	exit_code		10497017	1					
ANR	10497368	PrimaryExpression	0		10497017	1					
ANR	10497369	CompoundStatement		53:70:1620:1620	10497017	1					
ANR	10497370	ExpressionStatement	"printf ( ""gsapi_run_string_begin returned code = %d\\n"" , code )"	1029:8:36015:36074	10497017	0	True				
ANR	10497371	CallExpression	"printf ( ""gsapi_run_string_begin returned code = %d\\n"" , code )"		10497017	0					
ANR	10497372	Callee	printf		10497017	0					
ANR	10497373	Identifier	printf		10497017	0					
ANR	10497374	ArgumentList	"""gsapi_run_string_begin returned code = %d\\n"""		10497017	1					
ANR	10497375	Argument	"""gsapi_run_string_begin returned code = %d\\n"""		10497017	0					
ANR	10497376	PrimaryExpression	"""gsapi_run_string_begin returned code = %d\\n"""		10497017	0					
ANR	10497377	Argument	code		10497017	1					
ANR	10497378	Identifier	code		10497017	0					
ANR	10497379	ExpressionStatement	gsapi_exit ( instance )	1030:8:36084:36104	10497017	1	True				
ANR	10497380	CallExpression	gsapi_exit ( instance )		10497017	0					
ANR	10497381	Callee	gsapi_exit		10497017	0					
ANR	10497382	Identifier	gsapi_exit		10497017	0					
ANR	10497383	ArgumentList	instance		10497017	1					
ANR	10497384	Argument	instance		10497017	0					
ANR	10497385	Identifier	instance		10497017	0					
ANR	10497386	ExpressionStatement	gsapi_delete_instance ( instance )	1031:8:36114:36145	10497017	2	True				
ANR	10497387	CallExpression	gsapi_delete_instance ( instance )		10497017	0					
ANR	10497388	Callee	gsapi_delete_instance		10497017	0					
ANR	10497389	Identifier	gsapi_delete_instance		10497017	0					
ANR	10497390	ArgumentList	instance		10497017	1					
ANR	10497391	Argument	instance		10497017	0					
ANR	10497392	Identifier	instance		10497017	0					
ANR	10497393	ReturnStatement	return - 1 ;	1032:8:36155:36164	10497017	3	True				
ANR	10497394	UnaryOperationExpression	- 1		10497017	0					
ANR	10497395	UnaryOperator	-		10497017	0					
ANR	10497396	PrimaryExpression	1		10497017	1					
ANR	10497397	Statement	sprintf	1034:4:36176:36182	10497017	18	True				
ANR	10497398	Statement	(	1034:11:36183:36183	10497017	19	True				
ANR	10497399	Statement	buf	1034:12:36184:36186	10497017	20	True				
ANR	10497400	Statement	","	1034:15:36187:36187	10497017	21	True				
ANR	10497401	Statement	"""/NX %d def /NY %d def /RX %d def /RY %d def\\n"""	1034:17:36189:36235	10497017	22	True				
ANR	10497402	Statement	""" (genpat0.ps) run\\n"""	1035:16:36253:36273	10497017	23	True				
ANR	10497403	Statement	"""1 false .outputpage\\n"""	1036:16:36291:36313	10497017	24	True				
ANR	10497404	Statement	","	1036:39:36314:36314	10497017	25	True				
ANR	10497405	Statement	array_width	1037:16:36332:36342	10497017	26	True				
ANR	10497406	Statement	","	1037:27:36343:36343	10497017	27	True				
ANR	10497407	Statement	array_height	1037:29:36345:36356	10497017	28	True				
ANR	10497408	Statement	","	1037:41:36357:36357	10497017	29	True				
ANR	10497409	Statement	resolution	1037:43:36359:36368	10497017	30	True				
ANR	10497410	Statement	[	1037:53:36369:36369	10497017	31	True				
ANR	10497411	Statement	0	1037:54:36370:36370	10497017	32	True				
ANR	10497412	Statement	]	1037:55:36371:36371	10497017	33	True				
ANR	10497413	Statement	","	1037:56:36372:36372	10497017	34	True				
ANR	10497414	Statement	resolution	1037:58:36374:36383	10497017	35	True				
ANR	10497415	Statement	[	1037:68:36384:36384	10497017	36	True				
ANR	10497416	Statement	1	1037:69:36385:36385	10497017	37	True				
ANR	10497417	Statement	]	1037:70:36386:36386	10497017	38	True				
ANR	10497418	Statement	)	1037:71:36387:36387	10497017	39	True				
ANR	10497419	ExpressionStatement		1037:72:36388:36388	10497017	40	True				
ANR	10497420	IfStatement	"if ( ( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) != gs_error_NeedInput )"		10497017	41					
ANR	10497421	Condition	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) != gs_error_NeedInput"	1038:8:36398:36496	10497017	0	True				
ANR	10497422	EqualityExpression	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) != gs_error_NeedInput"		10497017	0		!=			
ANR	10497423	AssignmentExpression	"code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497017	0		=			
ANR	10497424	Identifier	code		10497017	0					
ANR	10497425	CallExpression	"gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497017	1					
ANR	10497426	Callee	gsapi_run_string_continue		10497017	0					
ANR	10497427	Identifier	gsapi_run_string_continue		10497017	0					
ANR	10497428	ArgumentList	instance		10497017	1					
ANR	10497429	Argument	instance		10497017	0					
ANR	10497430	Identifier	instance		10497017	0					
ANR	10497431	Argument	buf		10497017	1					
ANR	10497432	Identifier	buf		10497017	0					
ANR	10497433	Argument	strlen ( buf )		10497017	2					
ANR	10497434	CallExpression	strlen ( buf )		10497017	0					
ANR	10497435	Callee	strlen		10497017	0					
ANR	10497436	Identifier	strlen		10497017	0					
ANR	10497437	ArgumentList	buf		10497017	1					
ANR	10497438	Argument	buf		10497017	0					
ANR	10497439	Identifier	buf		10497017	0					
ANR	10497440	Argument	0		10497017	3					
ANR	10497441	PrimaryExpression	0		10497017	0					
ANR	10497442	Argument	& exit_code		10497017	4					
ANR	10497443	UnaryOperationExpression	& exit_code		10497017	0					
ANR	10497444	UnaryOperator	&		10497017	0					
ANR	10497445	Identifier	exit_code		10497017	1					
ANR	10497446	Identifier	gs_error_NeedInput		10497017	1					
ANR	10497447	CompoundStatement		63:109:2114:2114	10497017	1					
ANR	10497448	ExpressionStatement	"printf ( "" Execution of 'genpat0.ps' returned code = %d\\n"" , code )"	1039:8:36509:36572	10497017	0	True				
ANR	10497449	CallExpression	"printf ( "" Execution of 'genpat0.ps' returned code = %d\\n"" , code )"		10497017	0					
ANR	10497450	Callee	printf		10497017	0					
ANR	10497451	Identifier	printf		10497017	0					
ANR	10497452	ArgumentList	""" Execution of 'genpat0.ps' returned code = %d\\n"""		10497017	1					
ANR	10497453	Argument	""" Execution of 'genpat0.ps' returned code = %d\\n"""		10497017	0					
ANR	10497454	PrimaryExpression	""" Execution of 'genpat0.ps' returned code = %d\\n"""		10497017	0					
ANR	10497455	Argument	code		10497017	1					
ANR	10497456	Identifier	code		10497017	0					
ANR	10497457	ReturnStatement	return - 1 ;	1040:8:36582:36591	10497017	1	True				
ANR	10497458	UnaryOperationExpression	- 1		10497017	0					
ANR	10497459	UnaryOperator	-		10497017	0					
ANR	10497460	PrimaryExpression	1		10497017	1					
ANR	10497461	ExpressionStatement	loop_ctr = 1	1042:4:36603:36615	10497017	42	True				
ANR	10497462	AssignmentExpression	loop_ctr = 1		10497017	0		=			
ANR	10497463	Identifier	loop_ctr		10497017	0					
ANR	10497464	PrimaryExpression	1		10497017	1					
ANR	10497465	ReturnStatement	return 0 ;	1043:4:36649:36657	10497017	43	True				
ANR	10497466	PrimaryExpression	0		10497017	0					
ANR	10497467	ReturnType	int		10497017	1					
ANR	10497468	Identifier	init_gs_display		10497017	2					
ANR	10497469	ParameterList	"int argc , char * * argv"		10497017	3					
ANR	10497470	Parameter	int argc	975:16:34361:34368	10497017	0	True				
ANR	10497471	ParameterType	int		10497017	0					
ANR	10497472	Identifier	argc		10497017	1					
ANR	10497473	Parameter	char * * argv	975:26:34371:34381	10497017	1	True				
ANR	10497474	ParameterType	char * *		10497017	0					
ANR	10497475	Identifier	argv		10497017	1					
ANR	10497476	CFGEntryNode	ENTRY		10497017		True				
ANR	10497477	CFGExitNode	EXIT		10497017		True				
ANR	10497478	Symbol	* gsargs		10497017						
ANR	10497479	Symbol	stdin		10497017						
ANR	10497480	Symbol	gsapi_run_string_continue		10497017						
ANR	10497481	Symbol	code		10497017						
ANR	10497482	Symbol	instance		10497017						
ANR	10497483	Symbol	& exit_code		10497017						
ANR	10497484	Symbol	stdout		10497017						
ANR	10497485	Symbol	& instance		10497017						
ANR	10497486	Symbol	gsdll_stdin		10497017						
ANR	10497487	Symbol	* argv		10497017						
ANR	10497488	Symbol	_O_BINARY		10497017						
ANR	10497489	Symbol	gsdll_stderr		10497017						
ANR	10497490	Symbol	gsargs		10497017						
ANR	10497491	Symbol	argv		10497017						
ANR	10497492	Symbol	gsapi_new_instance		10497017						
ANR	10497493	Symbol	_beginthread		10497017						
ANR	10497494	Symbol	WM_USER		10497017						
ANR	10497495	Symbol	gsapi_run_string_begin		10497017						
ANR	10497496	Symbol	strlen		10497017						
ANR	10497497	Symbol	thread_id		10497017						
ANR	10497498	Symbol	loop_ctr		10497017						
ANR	10497499	Symbol	atgsarg		10497017						
ANR	10497500	Symbol	gsapi_init_with_args		10497017						
ANR	10497501	Symbol	hthread		10497017						
ANR	10497502	Symbol	PostThreadMessage		10497017						
ANR	10497503	Symbol	_isatty		10497017						
ANR	10497504	Symbol	winthread		10497017						
ANR	10497505	Symbol	argc		10497017						
ANR	10497506	Symbol	NULL		10497017						
ANR	10497507	Symbol	i		10497017						
ANR	10497508	Symbol	j		10497017						
ANR	10497509	Symbol	k		10497017						
ANR	10497510	Symbol	stderr		10497017						
ANR	10497511	Symbol	INVALID_HANDLE_VALUE		10497017						
ANR	10497512	Symbol	n		10497017						
ANR	10497513	Symbol	gsdll_stdout		10497017						
ANR	10497514	Symbol	buf		10497017						
ANR	10497515	Symbol	* i		10497017						
ANR	10497516	Symbol	fileno		10497017						
ANR	10497517	Symbol	exit_code		10497017						
ANR	10497518	Symbol	& display		10497017						
ANR	10497519	Symbol	gs_error_NeedInput		10497017						
ANR	10497520	Symbol	hwndforeground		10497017						
ANR	10497521	Symbol	GetForegroundWindow		10497017						
ANR	10497522	Function	update_gs_image	1046:0:36662:37666							
ANR	10497523	FunctionDef	update_gs_image ()		10497522	0					
ANR	10497524	CompoundStatement		1048:0:36684:37666	10497522	0					
ANR	10497525	IdentifierDeclStatement	char buf [ MAX_ARRAY_WIDTH * 2 + 256 ] ;	1049:4:36690:36723	10497522	0	True				
ANR	10497526	IdentifierDecl	buf [ MAX_ARRAY_WIDTH * 2 + 256 ]		10497522	0					
ANR	10497527	IdentifierDeclType	char [ MAX_ARRAY_WIDTH * 2 + 256 ]		10497522	0					
ANR	10497528	Identifier	buf		10497522	1					
ANR	10497529	AdditiveExpression	MAX_ARRAY_WIDTH * 2 + 256		10497522	2		+			
ANR	10497530	MultiplicativeExpression	MAX_ARRAY_WIDTH * 2		10497522	0		*			
ANR	10497531	Identifier	MAX_ARRAY_WIDTH		10497522	0					
ANR	10497532	PrimaryExpression	2		10497522	1					
ANR	10497533	PrimaryExpression	256		10497522	1					
ANR	10497534	IdentifierDeclStatement	char * bufp ;	1050:4:36729:36739	10497522	1	True				
ANR	10497535	IdentifierDecl	* bufp		10497522	0					
ANR	10497536	IdentifierDeclType	char *		10497522	0					
ANR	10497537	Identifier	bufp		10497522	1					
ANR	10497538	IdentifierDeclStatement	"int code , exit_code , i , j , k , Gray ;"	1051:4:36745:36783	10497522	2	True				
ANR	10497539	IdentifierDecl	code		10497522	0					
ANR	10497540	IdentifierDeclType	int		10497522	0					
ANR	10497541	Identifier	code		10497522	1					
ANR	10497542	IdentifierDecl	exit_code		10497522	1					
ANR	10497543	IdentifierDeclType	int		10497522	0					
ANR	10497544	Identifier	exit_code		10497522	1					
ANR	10497545	IdentifierDecl	i		10497522	2					
ANR	10497546	IdentifierDeclType	int		10497522	0					
ANR	10497547	Identifier	i		10497522	1					
ANR	10497548	IdentifierDecl	j		10497522	3					
ANR	10497549	IdentifierDeclType	int		10497522	0					
ANR	10497550	Identifier	j		10497522	1					
ANR	10497551	IdentifierDecl	k		10497522	4					
ANR	10497552	IdentifierDeclType	int		10497522	0					
ANR	10497553	Identifier	k		10497522	1					
ANR	10497554	IdentifierDecl	Gray		10497522	5					
ANR	10497555	IdentifierDeclType	int		10497522	0					
ANR	10497556	Identifier	Gray		10497522	1					
ANR	10497557	ExpressionStatement	"sprintf ( buf , ""DoImage\\n"" )"	1053:4:36790:36815	10497522	3	True				
ANR	10497558	CallExpression	"sprintf ( buf , ""DoImage\\n"" )"		10497522	0					
ANR	10497559	Callee	sprintf		10497522	0					
ANR	10497560	Identifier	sprintf		10497522	0					
ANR	10497561	ArgumentList	buf		10497522	1					
ANR	10497562	Argument	buf		10497522	0					
ANR	10497563	Identifier	buf		10497522	0					
ANR	10497564	Argument	"""DoImage\\n"""		10497522	1					
ANR	10497565	PrimaryExpression	"""DoImage\\n"""		10497522	0					
ANR	10497566	ExpressionStatement	bufp = buf + 8	1054:4:36821:36835	10497522	4	True				
ANR	10497567	AssignmentExpression	bufp = buf + 8		10497522	0		=			
ANR	10497568	Identifier	bufp		10497522	0					
ANR	10497569	AdditiveExpression	buf + 8		10497522	1		+			
ANR	10497570	Identifier	buf		10497522	0					
ANR	10497571	PrimaryExpression	8		10497522	1					
ANR	10497572	ForStatement	for ( i = 0 ; i < array_width * array_height ; i ++ )		10497522	5					
ANR	10497573	ForInit	i = 0 ;	1055:9:36846:36849	10497522	0	True				
ANR	10497574	AssignmentExpression	i = 0		10497522	0		=			
ANR	10497575	Identifier	i		10497522	0					
ANR	10497576	PrimaryExpression	0		10497522	1					
ANR	10497577	Condition	i < array_width * array_height	1055:14:36851:36878	10497522	1	True				
ANR	10497578	RelationalExpression	i < array_width * array_height		10497522	0		<			
ANR	10497579	Identifier	i		10497522	0					
ANR	10497580	MultiplicativeExpression	array_width * array_height		10497522	1		*			
ANR	10497581	Identifier	array_width		10497522	0					
ANR	10497582	Identifier	array_height		10497522	1					
ANR	10497583	PostIncDecOperationExpression	i ++	1055:44:36881:36883	10497522	2	True				
ANR	10497584	Identifier	i		10497522	0					
ANR	10497585	IncDec	++		10497522	1					
ANR	10497586	CompoundStatement		8:49:201:201	10497522	3					
ANR	10497587	IfStatement	if ( Val [ i ] < BIG_FLOAT )		10497522	0					
ANR	10497588	Condition	Val [ i ] < BIG_FLOAT	1056:12:36900:36917	10497522	0	True				
ANR	10497589	RelationalExpression	Val [ i ] < BIG_FLOAT		10497522	0		<			
ANR	10497590	ArrayIndexing	Val [ i ]		10497522	0					
ANR	10497591	Identifier	Val		10497522	0					
ANR	10497592	Identifier	i		10497522	1					
ANR	10497593	Identifier	BIG_FLOAT		10497522	1					
ANR	10497594	ExpressionStatement	"Gray = 254 - ( int ) ( 0.5 + 253.0 * pow ( ( Val [ i ] - MinVal ) / ( ValRange ) , 0.25 ) )"	1059:12:37065:37155	10497522	1	True				
ANR	10497595	AssignmentExpression	"Gray = 254 - ( int ) ( 0.5 + 253.0 * pow ( ( Val [ i ] - MinVal ) / ( ValRange ) , 0.25 ) )"		10497522	0		=			
ANR	10497596	Identifier	Gray		10497522	0					
ANR	10497597	AdditiveExpression	"254 - ( int ) ( 0.5 + 253.0 * pow ( ( Val [ i ] - MinVal ) / ( ValRange ) , 0.25 ) )"		10497522	1		-			
ANR	10497598	PrimaryExpression	254		10497522	0					
ANR	10497599	CastExpression	"( int ) ( 0.5 + 253.0 * pow ( ( Val [ i ] - MinVal ) / ( ValRange ) , 0.25 ) )"		10497522	1					
ANR	10497600	CastTarget	int		10497522	0					
ANR	10497601	AdditiveExpression	"0.5 + 253.0 * pow ( ( Val [ i ] - MinVal ) / ( ValRange ) , 0.25 )"		10497522	1		+			
ANR	10497602	PrimaryExpression	0.5		10497522	0					
ANR	10497603	MultiplicativeExpression	"253.0 * pow ( ( Val [ i ] - MinVal ) / ( ValRange ) , 0.25 )"		10497522	1		*			
ANR	10497604	PrimaryExpression	253.0		10497522	0					
ANR	10497605	CallExpression	"pow ( ( Val [ i ] - MinVal ) / ( ValRange ) , 0.25 )"		10497522	1					
ANR	10497606	Callee	pow		10497522	0					
ANR	10497607	Identifier	pow		10497522	0					
ANR	10497608	ArgumentList	( Val [ i ] - MinVal ) / ( ValRange )		10497522	1					
ANR	10497609	Argument	( Val [ i ] - MinVal ) / ( ValRange )		10497522	0					
ANR	10497610	MultiplicativeExpression	( Val [ i ] - MinVal ) / ( ValRange )		10497522	0		/			
ANR	10497611	AdditiveExpression	Val [ i ] - MinVal		10497522	0		-			
ANR	10497612	ArrayIndexing	Val [ i ]		10497522	0					
ANR	10497613	Identifier	Val		10497522	0					
ANR	10497614	Identifier	i		10497522	1					
ANR	10497615	Identifier	MinVal		10497522	1					
ANR	10497616	Identifier	ValRange		10497522	1					
ANR	10497617	Argument	0.25		10497522	1					
ANR	10497618	PrimaryExpression	0.25		10497522	0					
ANR	10497619	ElseStatement	else		10497522	0					
ANR	10497620	ExpressionStatement	Gray = 0	1062:12:37182:37190	10497522	0	True				
ANR	10497621	AssignmentExpression	Gray = 0		10497522	0		=			
ANR	10497622	Identifier	Gray		10497522	0					
ANR	10497623	PrimaryExpression	0		10497522	1					
ANR	10497624	IfStatement	if ( ( i % array_width ) == array_width - 1 )		10497522	1					
ANR	10497625	Condition	( i % array_width ) == array_width - 1	1063:12:37204:37239	10497522	0	True				
ANR	10497626	EqualityExpression	( i % array_width ) == array_width - 1		10497522	0		==			
ANR	10497627	MultiplicativeExpression	i % array_width		10497522	0		%			
ANR	10497628	Identifier	i		10497522	0					
ANR	10497629	Identifier	array_width		10497522	1					
ANR	10497630	AdditiveExpression	array_width - 1		10497522	1		-			
ANR	10497631	Identifier	array_width		10497522	0					
ANR	10497632	PrimaryExpression	1		10497522	1					
ANR	10497633	CompoundStatement		16:50:557:557	10497522	1					
ANR	10497634	ExpressionStatement	"sprintf ( bufp , ""%02X\\n"" , Gray )"	1064:12:37256:37285	10497522	0	True				
ANR	10497635	CallExpression	"sprintf ( bufp , ""%02X\\n"" , Gray )"		10497522	0					
ANR	10497636	Callee	sprintf		10497522	0					
ANR	10497637	Identifier	sprintf		10497522	0					
ANR	10497638	ArgumentList	bufp		10497522	1					
ANR	10497639	Argument	bufp		10497522	0					
ANR	10497640	Identifier	bufp		10497522	0					
ANR	10497641	Argument	"""%02X\\n"""		10497522	1					
ANR	10497642	PrimaryExpression	"""%02X\\n"""		10497522	0					
ANR	10497643	Argument	Gray		10497522	2					
ANR	10497644	Identifier	Gray		10497522	0					
ANR	10497645	IfStatement	"if ( ( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput )"		10497522	1					
ANR	10497646	Condition	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"	1065:16:37303:37400	10497522	0	True				
ANR	10497647	RelationalExpression	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"		10497522	0		<			
ANR	10497648	AssignmentExpression	"code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497522	0		=			
ANR	10497649	Identifier	code		10497522	0					
ANR	10497650	CallExpression	"gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497522	1					
ANR	10497651	Callee	gsapi_run_string_continue		10497522	0					
ANR	10497652	Identifier	gsapi_run_string_continue		10497522	0					
ANR	10497653	ArgumentList	instance		10497522	1					
ANR	10497654	Argument	instance		10497522	0					
ANR	10497655	Identifier	instance		10497522	0					
ANR	10497656	Argument	buf		10497522	1					
ANR	10497657	Identifier	buf		10497522	0					
ANR	10497658	Argument	strlen ( buf )		10497522	2					
ANR	10497659	CallExpression	strlen ( buf )		10497522	0					
ANR	10497660	Callee	strlen		10497522	0					
ANR	10497661	Identifier	strlen		10497522	0					
ANR	10497662	ArgumentList	buf		10497522	1					
ANR	10497663	Argument	buf		10497522	0					
ANR	10497664	Identifier	buf		10497522	0					
ANR	10497665	Argument	0		10497522	3					
ANR	10497666	PrimaryExpression	0		10497522	0					
ANR	10497667	Argument	& exit_code		10497522	4					
ANR	10497668	UnaryOperationExpression	& exit_code		10497522	0					
ANR	10497669	UnaryOperator	&		10497522	0					
ANR	10497670	Identifier	exit_code		10497522	1					
ANR	10497671	Identifier	gs_error_NeedInput		10497522	1					
ANR	10497672	CompoundStatement		18:116:718:718	10497522	1					
ANR	10497673	ExpressionStatement	"printf ( "" during image data for DoImage returned code = %d\\n"" , code )"	1066:16:37421:37488	10497522	0	True				
ANR	10497674	CallExpression	"printf ( "" during image data for DoImage returned code = %d\\n"" , code )"		10497522	0					
ANR	10497675	Callee	printf		10497522	0					
ANR	10497676	Identifier	printf		10497522	0					
ANR	10497677	ArgumentList	""" during image data for DoImage returned code = %d\\n"""		10497522	1					
ANR	10497678	Argument	""" during image data for DoImage returned code = %d\\n"""		10497522	0					
ANR	10497679	PrimaryExpression	""" during image data for DoImage returned code = %d\\n"""		10497522	0					
ANR	10497680	Argument	code		10497522	1					
ANR	10497681	Identifier	code		10497522	0					
ANR	10497682	ReturnStatement	return - 1 ;	1067:16:37506:37515	10497522	1	True				
ANR	10497683	UnaryOperationExpression	- 1		10497522	0					
ANR	10497684	UnaryOperator	-		10497522	0					
ANR	10497685	PrimaryExpression	1		10497522	1					
ANR	10497686	ExpressionStatement	bufp = buf	1069:12:37543:37553	10497522	2	True				
ANR	10497687	AssignmentExpression	bufp = buf		10497522	0		=			
ANR	10497688	Identifier	bufp		10497522	0					
ANR	10497689	Identifier	buf		10497522	1					
ANR	10497690	ElseStatement	else		10497522	0					
ANR	10497691	CompoundStatement		23:15:885:885	10497522	0					
ANR	10497692	ExpressionStatement	"sprintf ( bufp , ""%02X"" , Gray )"	1071:12:37584:37611	10497522	0	True				
ANR	10497693	CallExpression	"sprintf ( bufp , ""%02X"" , Gray )"		10497522	0					
ANR	10497694	Callee	sprintf		10497522	0					
ANR	10497695	Identifier	sprintf		10497522	0					
ANR	10497696	ArgumentList	bufp		10497522	1					
ANR	10497697	Argument	bufp		10497522	0					
ANR	10497698	Identifier	bufp		10497522	0					
ANR	10497699	Argument	"""%02X"""		10497522	1					
ANR	10497700	PrimaryExpression	"""%02X"""		10497522	0					
ANR	10497701	Argument	Gray		10497522	2					
ANR	10497702	Identifier	Gray		10497522	0					
ANR	10497703	ExpressionStatement	bufp += 2	1072:12:37625:37634	10497522	1	True				
ANR	10497704	AssignmentExpression	bufp += 2		10497522	0		+=			
ANR	10497705	Identifier	bufp		10497522	0					
ANR	10497706	PrimaryExpression	2		10497522	1					
ANR	10497707	ReturnStatement	return 0 ;	1075:4:37656:37664	10497522	6	True				
ANR	10497708	PrimaryExpression	0		10497522	0					
ANR	10497709	ReturnType	int		10497522	1					
ANR	10497710	Identifier	update_gs_image		10497522	2					
ANR	10497711	ParameterList			10497522	3					
ANR	10497712	CFGEntryNode	ENTRY		10497522		True				
ANR	10497713	CFGExitNode	EXIT		10497522		True				
ANR	10497714	Symbol	Val		10497522						
ANR	10497715	Symbol	Gray		10497522						
ANR	10497716	Symbol	ValRange		10497522						
ANR	10497717	Symbol	gsapi_run_string_continue		10497522						
ANR	10497718	Symbol	code		10497522						
ANR	10497719	Symbol	& exit_code		10497522						
ANR	10497720	Symbol	instance		10497522						
ANR	10497721	Symbol	i		10497522						
ANR	10497722	Symbol	j		10497522						
ANR	10497723	Symbol	k		10497522						
ANR	10497724	Symbol	array_height		10497522						
ANR	10497725	Symbol	MinVal		10497522						
ANR	10497726	Symbol	strlen		10497522						
ANR	10497727	Symbol	buf		10497522						
ANR	10497728	Symbol	BIG_FLOAT		10497522						
ANR	10497729	Symbol	bufp		10497522						
ANR	10497730	Symbol	* i		10497522						
ANR	10497731	Symbol	array_width		10497522						
ANR	10497732	Symbol	* Val		10497522						
ANR	10497733	Symbol	exit_code		10497522						
ANR	10497734	Symbol	pow		10497522						
ANR	10497735	Symbol	gs_error_NeedInput		10497522						
ANR	10497736	Function	update_gs_dot	1078:0:37669:39224							
ANR	10497737	FunctionDef	"update_gs_dot (int choice_X , int choice_Y , int last)"		10497736	0					
ANR	10497738	CompoundStatement		1080:0:37725:39224	10497736	0					
ANR	10497739	IdentifierDeclStatement	char buf [ 256 ] ;	1081:4:37731:37744	10497736	0	True				
ANR	10497740	IdentifierDecl	buf [ 256 ]		10497736	0					
ANR	10497741	IdentifierDeclType	char [ 256 ]		10497736	0					
ANR	10497742	Identifier	buf		10497736	1					
ANR	10497743	PrimaryExpression	256		10497736	2					
ANR	10497744	IdentifierDeclStatement	"int code , exit_code ;"	1082:4:37750:37773	10497736	1	True				
ANR	10497745	IdentifierDecl	code		10497736	0					
ANR	10497746	IdentifierDeclType	int		10497736	0					
ANR	10497747	Identifier	code		10497736	1					
ANR	10497748	IdentifierDecl	exit_code		10497736	1					
ANR	10497749	IdentifierDeclType	int		10497736	0					
ANR	10497750	Identifier	exit_code		10497736	1					
ANR	10497751	IfStatement	if ( loop_ctr <= 1 )		10497736	2					
ANR	10497752	Condition	loop_ctr <= 1	1084:8:37784:37796	10497736	0	True				
ANR	10497753	RelationalExpression	loop_ctr <= 1		10497736	0		<=			
ANR	10497754	Identifier	loop_ctr		10497736	0					
ANR	10497755	PrimaryExpression	1		10497736	1					
ANR	10497756	CompoundStatement		5:23:73:73	10497736	1					
ANR	10497757	ExpressionStatement	"sprintf ( buf , ""%d %d %d Dot\\n"" , choice_X , choice_Y , 180 )"	1085:8:37809:37864	10497736	0	True				
ANR	10497758	CallExpression	"sprintf ( buf , ""%d %d %d Dot\\n"" , choice_X , choice_Y , 180 )"		10497736	0					
ANR	10497759	Callee	sprintf		10497736	0					
ANR	10497760	Identifier	sprintf		10497736	0					
ANR	10497761	ArgumentList	buf		10497736	1					
ANR	10497762	Argument	buf		10497736	0					
ANR	10497763	Identifier	buf		10497736	0					
ANR	10497764	Argument	"""%d %d %d Dot\\n"""		10497736	1					
ANR	10497765	PrimaryExpression	"""%d %d %d Dot\\n"""		10497736	0					
ANR	10497766	Argument	choice_X		10497736	2					
ANR	10497767	Identifier	choice_X		10497736	0					
ANR	10497768	Argument	choice_Y		10497736	3					
ANR	10497769	Identifier	choice_Y		10497736	0					
ANR	10497770	Argument	180		10497736	4					
ANR	10497771	PrimaryExpression	180		10497736	0					
ANR	10497772	IfStatement	"if ( ( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput )"		10497736	1					
ANR	10497773	Condition	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"	1086:12:37878:37975	10497736	0	True				
ANR	10497774	RelationalExpression	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"		10497736	0		<			
ANR	10497775	AssignmentExpression	"code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497736	0		=			
ANR	10497776	Identifier	code		10497736	0					
ANR	10497777	CallExpression	"gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497736	1					
ANR	10497778	Callee	gsapi_run_string_continue		10497736	0					
ANR	10497779	Identifier	gsapi_run_string_continue		10497736	0					
ANR	10497780	ArgumentList	instance		10497736	1					
ANR	10497781	Argument	instance		10497736	0					
ANR	10497782	Identifier	instance		10497736	0					
ANR	10497783	Argument	buf		10497736	1					
ANR	10497784	Identifier	buf		10497736	0					
ANR	10497785	Argument	strlen ( buf )		10497736	2					
ANR	10497786	CallExpression	strlen ( buf )		10497736	0					
ANR	10497787	Callee	strlen		10497736	0					
ANR	10497788	Identifier	strlen		10497736	0					
ANR	10497789	ArgumentList	buf		10497736	1					
ANR	10497790	Argument	buf		10497736	0					
ANR	10497791	Identifier	buf		10497736	0					
ANR	10497792	Argument	0		10497736	3					
ANR	10497793	PrimaryExpression	0		10497736	0					
ANR	10497794	Argument	& exit_code		10497736	4					
ANR	10497795	UnaryOperationExpression	& exit_code		10497736	0					
ANR	10497796	UnaryOperator	&		10497736	0					
ANR	10497797	Identifier	exit_code		10497736	1					
ANR	10497798	Identifier	gs_error_NeedInput		10497736	1					
ANR	10497799	CompoundStatement		7:112:252:252	10497736	1					
ANR	10497800	ExpressionStatement	"printf ( "" Execution of Dot returned code = %d\\n"" , code )"	1087:12:37992:38046	10497736	0	True				
ANR	10497801	CallExpression	"printf ( "" Execution of Dot returned code = %d\\n"" , code )"		10497736	0					
ANR	10497802	Callee	printf		10497736	0					
ANR	10497803	Identifier	printf		10497736	0					
ANR	10497804	ArgumentList	""" Execution of Dot returned code = %d\\n"""		10497736	1					
ANR	10497805	Argument	""" Execution of Dot returned code = %d\\n"""		10497736	0					
ANR	10497806	PrimaryExpression	""" Execution of Dot returned code = %d\\n"""		10497736	0					
ANR	10497807	Argument	code		10497736	1					
ANR	10497808	Identifier	code		10497736	0					
ANR	10497809	ReturnStatement	return - 1 ;	1088:12:38060:38069	10497736	1	True				
ANR	10497810	UnaryOperationExpression	- 1		10497736	0					
ANR	10497811	UnaryOperator	-		10497736	0					
ANR	10497812	PrimaryExpression	1		10497736	1					
ANR	10497813	IfStatement	if ( last )		10497736	3					
ANR	10497814	Condition	last	1091:8:38095:38098	10497736	0	True				
ANR	10497815	Identifier	last		10497736	0					
ANR	10497816	CompoundStatement		12:14:375:375	10497736	1					
ANR	10497817	ExpressionStatement	"sprintf ( buf , ""1 false .outputpage\\n"" )"	1093:8:38173:38210	10497736	0	True				
ANR	10497818	CallExpression	"sprintf ( buf , ""1 false .outputpage\\n"" )"		10497736	0					
ANR	10497819	Callee	sprintf		10497736	0					
ANR	10497820	Identifier	sprintf		10497736	0					
ANR	10497821	ArgumentList	buf		10497736	1					
ANR	10497822	Argument	buf		10497736	0					
ANR	10497823	Identifier	buf		10497736	0					
ANR	10497824	Argument	"""1 false .outputpage\\n"""		10497736	1					
ANR	10497825	PrimaryExpression	"""1 false .outputpage\\n"""		10497736	0					
ANR	10497826	IfStatement	"if ( ( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput )"		10497736	1					
ANR	10497827	Condition	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"	1094:12:38224:38321	10497736	0	True				
ANR	10497828	RelationalExpression	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"		10497736	0		<			
ANR	10497829	AssignmentExpression	"code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497736	0		=			
ANR	10497830	Identifier	code		10497736	0					
ANR	10497831	CallExpression	"gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497736	1					
ANR	10497832	Callee	gsapi_run_string_continue		10497736	0					
ANR	10497833	Identifier	gsapi_run_string_continue		10497736	0					
ANR	10497834	ArgumentList	instance		10497736	1					
ANR	10497835	Argument	instance		10497736	0					
ANR	10497836	Identifier	instance		10497736	0					
ANR	10497837	Argument	buf		10497736	1					
ANR	10497838	Identifier	buf		10497736	0					
ANR	10497839	Argument	strlen ( buf )		10497736	2					
ANR	10497840	CallExpression	strlen ( buf )		10497736	0					
ANR	10497841	Callee	strlen		10497736	0					
ANR	10497842	Identifier	strlen		10497736	0					
ANR	10497843	ArgumentList	buf		10497736	1					
ANR	10497844	Argument	buf		10497736	0					
ANR	10497845	Identifier	buf		10497736	0					
ANR	10497846	Argument	0		10497736	3					
ANR	10497847	PrimaryExpression	0		10497736	0					
ANR	10497848	Argument	& exit_code		10497736	4					
ANR	10497849	UnaryOperationExpression	& exit_code		10497736	0					
ANR	10497850	UnaryOperator	&		10497736	0					
ANR	10497851	Identifier	exit_code		10497736	1					
ANR	10497852	Identifier	gs_error_NeedInput		10497736	1					
ANR	10497853	CompoundStatement		15:112:598:598	10497736	1					
ANR	10497854	ExpressionStatement	"printf ( "" Execution of .outputpage returned code = %d\\n"" , code )"	1095:12:38338:38400	10497736	0	True				
ANR	10497855	CallExpression	"printf ( "" Execution of .outputpage returned code = %d\\n"" , code )"		10497736	0					
ANR	10497856	Callee	printf		10497736	0					
ANR	10497857	Identifier	printf		10497736	0					
ANR	10497858	ArgumentList	""" Execution of .outputpage returned code = %d\\n"""		10497736	1					
ANR	10497859	Argument	""" Execution of .outputpage returned code = %d\\n"""		10497736	0					
ANR	10497860	PrimaryExpression	""" Execution of .outputpage returned code = %d\\n"""		10497736	0					
ANR	10497861	Argument	code		10497736	1					
ANR	10497862	Identifier	code		10497736	0					
ANR	10497863	ReturnStatement	return - 1 ;	1096:12:38414:38423	10497736	1	True				
ANR	10497864	UnaryOperationExpression	- 1		10497736	0					
ANR	10497865	UnaryOperator	-		10497736	0					
ANR	10497866	PrimaryExpression	1		10497736	1					
ANR	10497867	IfStatement	if ( -- loop_ctr <= 0 )		10497736	2					
ANR	10497868	Condition	-- loop_ctr <= 0	1100:12:38449:38463	10497736	0	True				
ANR	10497869	RelationalExpression	-- loop_ctr <= 0		10497736	0		<=			
ANR	10497870	UnaryExpression	-- loop_ctr		10497736	0					
ANR	10497871	IncDec	--		10497736	0					
ANR	10497872	Identifier	loop_ctr		10497736	1					
ANR	10497873	PrimaryExpression	0		10497736	1					
ANR	10497874	CompoundStatement		21:29:740:740	10497736	1					
ANR	10497875	ExpressionStatement	loop_ctr = getch ( )	1102:12:38497:38515	10497736	0	True				
ANR	10497876	AssignmentExpression	loop_ctr = getch ( )		10497736	0		=			
ANR	10497877	Identifier	loop_ctr		10497736	0					
ANR	10497878	CallExpression	getch ( )		10497736	1					
ANR	10497879	Callee	getch		10497736	0					
ANR	10497880	Identifier	getch		10497736	0					
ANR	10497881	ArgumentList			10497736	1					
ANR	10497882	IfStatement	if ( loop_ctr == 'q' )		10497736	1					
ANR	10497883	Condition	loop_ctr == 'q'	1106:16:38580:38594	10497736	0	True				
ANR	10497884	EqualityExpression	loop_ctr == 'q'		10497736	0		==			
ANR	10497885	Identifier	loop_ctr		10497736	0					
ANR	10497886	PrimaryExpression	'q'		10497736	1					
ANR	10497887	ExpressionStatement	exit ( 1 )	1107:16:38613:38620	10497736	1	True				
ANR	10497888	CallExpression	exit ( 1 )		10497736	0					
ANR	10497889	Callee	exit		10497736	0					
ANR	10497890	Identifier	exit		10497736	0					
ANR	10497891	ArgumentList	1		10497736	1					
ANR	10497892	Argument	1		10497736	0					
ANR	10497893	PrimaryExpression	1		10497736	0					
ANR	10497894	IfStatement	if ( loop_ctr == 27 || loop_ctr == 'g' )		10497736	2					
ANR	10497895	Condition	loop_ctr == 27 || loop_ctr == 'g'	1108:16:38638:38670	10497736	0	True				
ANR	10497896	OrExpression	loop_ctr == 27 || loop_ctr == 'g'		10497736	0		||			
ANR	10497897	EqualityExpression	loop_ctr == 27		10497736	0		==			
ANR	10497898	Identifier	loop_ctr		10497736	0					
ANR	10497899	PrimaryExpression	27		10497736	1					
ANR	10497900	EqualityExpression	loop_ctr == 'g'		10497736	1		==			
ANR	10497901	Identifier	loop_ctr		10497736	0					
ANR	10497902	PrimaryExpression	'g'		10497736	1					
ANR	10497903	ExpressionStatement	loop_ctr = 9999999	1109:16:38720:38738	10497736	1	True				
ANR	10497904	AssignmentExpression	loop_ctr = 9999999		10497736	0		=			
ANR	10497905	Identifier	loop_ctr		10497736	0					
ANR	10497906	PrimaryExpression	9999999		10497736	1					
ANR	10497907	ElseStatement	else		10497736	0					
ANR	10497908	ExpressionStatement	loop_ctr -= ' '	1111:16:38773:38788	10497736	0	True				
ANR	10497909	AssignmentExpression	loop_ctr -= ' '		10497736	0		-=			
ANR	10497910	Identifier	loop_ctr		10497736	0					
ANR	10497911	PrimaryExpression	' '		10497736	1					
ANR	10497912	IfStatement	if ( loop_ctr < 0 )		10497736	3					
ANR	10497913	Condition	loop_ctr < 0	1112:16:38806:38817	10497736	0	True				
ANR	10497914	RelationalExpression	loop_ctr < 0		10497736	0		<			
ANR	10497915	Identifier	loop_ctr		10497736	0					
ANR	10497916	PrimaryExpression	0		10497736	1					
ANR	10497917	ExpressionStatement	loop_ctr = 1	1113:16:38836:38848	10497736	1	True				
ANR	10497918	AssignmentExpression	loop_ctr = 1		10497736	0		=			
ANR	10497919	Identifier	loop_ctr		10497736	0					
ANR	10497920	PrimaryExpression	1		10497736	1					
ANR	10497921	ExpressionStatement	"sprintf ( buf , ""%d %d %d Dot\\n"" , choice_X , choice_Y , 0 )"	1117:8:38934:38987	10497736	3	True				
ANR	10497922	CallExpression	"sprintf ( buf , ""%d %d %d Dot\\n"" , choice_X , choice_Y , 0 )"		10497736	0					
ANR	10497923	Callee	sprintf		10497736	0					
ANR	10497924	Identifier	sprintf		10497736	0					
ANR	10497925	ArgumentList	buf		10497736	1					
ANR	10497926	Argument	buf		10497736	0					
ANR	10497927	Identifier	buf		10497736	0					
ANR	10497928	Argument	"""%d %d %d Dot\\n"""		10497736	1					
ANR	10497929	PrimaryExpression	"""%d %d %d Dot\\n"""		10497736	0					
ANR	10497930	Argument	choice_X		10497736	2					
ANR	10497931	Identifier	choice_X		10497736	0					
ANR	10497932	Argument	choice_Y		10497736	3					
ANR	10497933	Identifier	choice_Y		10497736	0					
ANR	10497934	Argument	0		10497736	4					
ANR	10497935	PrimaryExpression	0		10497736	0					
ANR	10497936	IfStatement	"if ( ( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput )"		10497736	4					
ANR	10497937	Condition	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"	1118:12:39001:39098	10497736	0	True				
ANR	10497938	RelationalExpression	"( code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code ) ) < gs_error_NeedInput"		10497736	0		<			
ANR	10497939	AssignmentExpression	"code = gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497736	0		=			
ANR	10497940	Identifier	code		10497736	0					
ANR	10497941	CallExpression	"gsapi_run_string_continue ( instance , buf , strlen ( buf ) , 0 , & exit_code )"		10497736	1					
ANR	10497942	Callee	gsapi_run_string_continue		10497736	0					
ANR	10497943	Identifier	gsapi_run_string_continue		10497736	0					
ANR	10497944	ArgumentList	instance		10497736	1					
ANR	10497945	Argument	instance		10497736	0					
ANR	10497946	Identifier	instance		10497736	0					
ANR	10497947	Argument	buf		10497736	1					
ANR	10497948	Identifier	buf		10497736	0					
ANR	10497949	Argument	strlen ( buf )		10497736	2					
ANR	10497950	CallExpression	strlen ( buf )		10497736	0					
ANR	10497951	Callee	strlen		10497736	0					
ANR	10497952	Identifier	strlen		10497736	0					
ANR	10497953	ArgumentList	buf		10497736	1					
ANR	10497954	Argument	buf		10497736	0					
ANR	10497955	Identifier	buf		10497736	0					
ANR	10497956	Argument	0		10497736	3					
ANR	10497957	PrimaryExpression	0		10497736	0					
ANR	10497958	Argument	& exit_code		10497736	4					
ANR	10497959	UnaryOperationExpression	& exit_code		10497736	0					
ANR	10497960	UnaryOperator	&		10497736	0					
ANR	10497961	Identifier	exit_code		10497736	1					
ANR	10497962	Identifier	gs_error_NeedInput		10497736	1					
ANR	10497963	CompoundStatement		39:112:1375:1375	10497736	1					
ANR	10497964	ExpressionStatement	"printf ( "" Execution of Dot returned code = %d\\n"" , code )"	1119:12:39115:39169	10497736	0	True				
ANR	10497965	CallExpression	"printf ( "" Execution of Dot returned code = %d\\n"" , code )"		10497736	0					
ANR	10497966	Callee	printf		10497736	0					
ANR	10497967	Identifier	printf		10497736	0					
ANR	10497968	ArgumentList	""" Execution of Dot returned code = %d\\n"""		10497736	1					
ANR	10497969	Argument	""" Execution of Dot returned code = %d\\n"""		10497736	0					
ANR	10497970	PrimaryExpression	""" Execution of Dot returned code = %d\\n"""		10497736	0					
ANR	10497971	Argument	code		10497736	1					
ANR	10497972	Identifier	code		10497736	0					
ANR	10497973	ReturnStatement	return - 1 ;	1120:12:39183:39192	10497736	1	True				
ANR	10497974	UnaryOperationExpression	- 1		10497736	0					
ANR	10497975	UnaryOperator	-		10497736	0					
ANR	10497976	PrimaryExpression	1		10497736	1					
ANR	10497977	ReturnStatement	return 0 ;	1123:4:39214:39222	10497736	4	True				
ANR	10497978	PrimaryExpression	0		10497736	0					
ANR	10497979	ReturnType	int		10497736	1					
ANR	10497980	Identifier	update_gs_dot		10497736	2					
ANR	10497981	ParameterList	"int choice_X , int choice_Y , int last"		10497736	3					
ANR	10497982	Parameter	int choice_X	1079:14:37687:37698	10497736	0	True				
ANR	10497983	ParameterType	int		10497736	0					
ANR	10497984	Identifier	choice_X		10497736	1					
ANR	10497985	Parameter	int choice_Y	1079:28:37701:37712	10497736	1	True				
ANR	10497986	ParameterType	int		10497736	0					
ANR	10497987	Identifier	choice_Y		10497736	1					
ANR	10497988	Parameter	int last	1079:42:37715:37722	10497736	2	True				
ANR	10497989	ParameterType	int		10497736	0					
ANR	10497990	Identifier	last		10497736	1					
ANR	10497991	CFGEntryNode	ENTRY		10497736		True				
ANR	10497992	CFGExitNode	EXIT		10497736		True				
ANR	10497993	Symbol	getch		10497736						
ANR	10497994	Symbol	gsapi_run_string_continue		10497736						
ANR	10497995	Symbol	code		10497736						
ANR	10497996	Symbol	& exit_code		10497736						
ANR	10497997	Symbol	instance		10497736						
ANR	10497998	Symbol	last		10497736						
ANR	10497999	Symbol	choice_X		10497736						
ANR	10498000	Symbol	choice_Y		10497736						
ANR	10498001	Symbol	strlen		10497736						
ANR	10498002	Symbol	buf		10497736						
ANR	10498003	Symbol	loop_ctr		10497736						
ANR	10498004	Symbol	exit_code		10497736						
ANR	10498005	Symbol	gs_error_NeedInput		10497736						
ANR	10498006	Function	close_gs_display	1126:0:39227:39403							
ANR	10498007	FunctionDef	close_gs_display ()		10498006	0					
ANR	10498008	CompoundStatement		1128:0:39251:39403	10498006	0					
ANR	10498009	IdentifierDeclStatement	int exit_code ;	1129:4:39257:39270	10498006	0	True				
ANR	10498010	IdentifierDecl	exit_code		10498006	0					
ANR	10498011	IdentifierDeclType	int		10498006	0					
ANR	10498012	Identifier	exit_code		10498006	1					
ANR	10498013	ExpressionStatement	"gsapi_run_string_end ( instance , 0 , & exit_code )"	1131:4:39277:39322	10498006	1	True				
ANR	10498014	CallExpression	"gsapi_run_string_end ( instance , 0 , & exit_code )"		10498006	0					
ANR	10498015	Callee	gsapi_run_string_end		10498006	0					
ANR	10498016	Identifier	gsapi_run_string_end		10498006	0					
ANR	10498017	ArgumentList	instance		10498006	1					
ANR	10498018	Argument	instance		10498006	0					
ANR	10498019	Identifier	instance		10498006	0					
ANR	10498020	Argument	0		10498006	1					
ANR	10498021	PrimaryExpression	0		10498006	0					
ANR	10498022	Argument	& exit_code		10498006	2					
ANR	10498023	UnaryOperationExpression	& exit_code		10498006	0					
ANR	10498024	UnaryOperator	&		10498006	0					
ANR	10498025	Identifier	exit_code		10498006	1					
ANR	10498026	Label	close_dll_exit :	1132:0:39324:39338	10498006	2	True				
ANR	10498027	Identifier	close_dll_exit		10498006	0					
ANR	10498028	ExpressionStatement	gsapi_exit ( instance )	1133:4:39344:39364	10498006	3	True				
ANR	10498029	CallExpression	gsapi_exit ( instance )		10498006	0					
ANR	10498030	Callee	gsapi_exit		10498006	0					
ANR	10498031	Identifier	gsapi_exit		10498006	0					
ANR	10498032	ArgumentList	instance		10498006	1					
ANR	10498033	Argument	instance		10498006	0					
ANR	10498034	Identifier	instance		10498006	0					
ANR	10498035	ExpressionStatement	gsapi_delete_instance ( instance )	1134:4:39370:39401	10498006	4	True				
ANR	10498036	CallExpression	gsapi_delete_instance ( instance )		10498006	0					
ANR	10498037	Callee	gsapi_delete_instance		10498006	0					
ANR	10498038	Identifier	gsapi_delete_instance		10498006	0					
ANR	10498039	ArgumentList	instance		10498006	1					
ANR	10498040	Argument	instance		10498006	0					
ANR	10498041	Identifier	instance		10498006	0					
ANR	10498042	ReturnType	void		10498006	1					
ANR	10498043	Identifier	close_gs_display		10498006	2					
ANR	10498044	ParameterList			10498006	3					
ANR	10498045	CFGEntryNode	ENTRY		10498006		True				
ANR	10498046	CFGExitNode	EXIT		10498006		True				
ANR	10498047	Symbol	& exit_code		10498006						
ANR	10498048	Symbol	instance		10498006						
ANR	10498049	Symbol	exit_code		10498006						
