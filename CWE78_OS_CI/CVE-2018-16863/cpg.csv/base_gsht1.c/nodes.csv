command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	582243	File	data/converged/CVE-2018-16863_ghostpdl/base_gsht1.c								
ANR	582244	DeclStmt									
ANR	582245	Decl							void	"void ( gs_gstate * , gx_transfer_map * , double )"	load_transfer_map
ANR	582246	DeclStmt									
ANR	582247	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_spot_halftone * , gs_memory_t * )"	process_spot
ANR	582248	DeclStmt									
ANR	582249	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_threshold_halftone * , gs_memory_t * )"	process_threshold
ANR	582250	DeclStmt									
ANR	582251	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_threshold2_halftone * , gs_memory_t * )"	process_threshold2
ANR	582252	DeclStmt									
ANR	582253	Decl							int	"int ( gx_ht_order * , gs_gstate * , gs_client_order_halftone * , gs_memory_t * )"	process_client_order
ANR	582254	Function	gs_setcolorscreen	105:0:3646:3882							
ANR	582255	FunctionDef	"gs_setcolorscreen (gs_gstate * pgs , gs_colorscreen_halftone * pht)"		582254	0					
ANR	582256	CompoundStatement		110:0:3753:3882	582254	0					
ANR	582257	IdentifierDeclStatement	gs_halftone ht ;	111:4:3759:3773	582254	0	True				
ANR	582258	IdentifierDecl	ht		582254	0					
ANR	582259	IdentifierDeclType	gs_halftone		582254	0					
ANR	582260	Identifier	ht		582254	1					
ANR	582261	ExpressionStatement	ht . type = ht_type_colorscreen	113:4:3780:3809	582254	1	True				
ANR	582262	AssignmentExpression	ht . type = ht_type_colorscreen		582254	0		=			
ANR	582263	MemberAccess	ht . type		582254	0					
ANR	582264	Identifier	ht		582254	0					
ANR	582265	Identifier	type		582254	1					
ANR	582266	Identifier	ht_type_colorscreen		582254	1					
ANR	582267	ExpressionStatement	ht . params . colorscreen = * pht	114:4:3815:3843	582254	2	True				
ANR	582268	AssignmentExpression	ht . params . colorscreen = * pht		582254	0		=			
ANR	582269	MemberAccess	ht . params . colorscreen		582254	0					
ANR	582270	MemberAccess	ht . params		582254	0					
ANR	582271	Identifier	ht		582254	0					
ANR	582272	Identifier	params		582254	1					
ANR	582273	Identifier	colorscreen		582254	1					
ANR	582274	UnaryOperationExpression	* pht		582254	1					
ANR	582275	UnaryOperator	*		582254	0					
ANR	582276	Identifier	pht		582254	1					
ANR	582277	ReturnStatement	"return gs_sethalftone ( pgs , & ht ) ;"	115:4:3849:3880	582254	3	True				
ANR	582278	CallExpression	"gs_sethalftone ( pgs , & ht )"		582254	0					
ANR	582279	Callee	gs_sethalftone		582254	0					
ANR	582280	Identifier	gs_sethalftone		582254	0					
ANR	582281	ArgumentList	pgs		582254	1					
ANR	582282	Argument	pgs		582254	0					
ANR	582283	Identifier	pgs		582254	0					
ANR	582284	Argument	& ht		582254	1					
ANR	582285	UnaryOperationExpression	& ht		582254	0					
ANR	582286	UnaryOperator	&		582254	0					
ANR	582287	Identifier	ht		582254	1					
ANR	582288	ReturnType	RELOC_PTRS_END int		582254	1					
ANR	582289	Identifier	gs_setcolorscreen		582254	2					
ANR	582290	ParameterList	"gs_gstate * pgs , gs_colorscreen_halftone * pht"		582254	3					
ANR	582291	Parameter	gs_gstate * pgs	109:18:3705:3719	582254	0	True				
ANR	582292	ParameterType	gs_gstate *		582254	0					
ANR	582293	Identifier	pgs		582254	1					
ANR	582294	Parameter	gs_colorscreen_halftone * pht	109:35:3722:3750	582254	1	True				
ANR	582295	ParameterType	gs_colorscreen_halftone *		582254	0					
ANR	582296	Identifier	pht		582254	1					
ANR	582297	CFGEntryNode	ENTRY		582254		True				
ANR	582298	CFGExitNode	EXIT		582254		True				
ANR	582299	Symbol	ht . params . colorscreen		582254						
ANR	582300	Symbol	ht . type		582254						
ANR	582301	Symbol	* pht		582254						
ANR	582302	Symbol	gs_sethalftone		582254						
ANR	582303	Symbol	& ht		582254						
ANR	582304	Symbol	ht . params		582254						
ANR	582305	Symbol	ht_type_colorscreen		582254						
ANR	582306	Symbol	ht		582254						
ANR	582307	Symbol	pgs		582254						
ANR	582308	Symbol	pht		582254						
ANR	582309	Function	gs_currentcolorscreen	119:0:3910:4517							
ANR	582310	FunctionDef	"gs_currentcolorscreen (gs_gstate * pgs , gs_colorscreen_halftone * pht)"		582309	0					
ANR	582311	CompoundStatement		121:0:3984:4517	582309	0					
ANR	582312	IdentifierDeclStatement	int code ;	122:4:3990:3998	582309	0	True				
ANR	582313	IdentifierDecl	code		582309	0					
ANR	582314	IdentifierDeclType	int		582309	0					
ANR	582315	Identifier	code		582309	1					
ANR	582316	SwitchStatement	switch ( pgs -> halftone -> type )		582309	1					
ANR	582317	Condition	pgs -> halftone -> type	124:12:4013:4031	582309	0	True				
ANR	582318	PtrMemberAccess	pgs -> halftone -> type		582309	0					
ANR	582319	PtrMemberAccess	pgs -> halftone		582309	0					
ANR	582320	Identifier	pgs		582309	0					
ANR	582321	Identifier	halftone		582309	1					
ANR	582322	Identifier	type		582309	1					
ANR	582323	CompoundStatement		4:33:49:49	582309	1					
ANR	582324	Label	case ht_type_colorscreen :	125:8:4044:4068	582309	0	True				
ANR	582325	Identifier	ht_type_colorscreen		582309	0					
ANR	582326	ExpressionStatement	* pht = pgs -> halftone -> params . colorscreen	126:12:4082:4122	582309	1	True				
ANR	582327	AssignmentExpression	* pht = pgs -> halftone -> params . colorscreen		582309	0		=			
ANR	582328	UnaryOperationExpression	* pht		582309	0					
ANR	582329	UnaryOperator	*		582309	0					
ANR	582330	Identifier	pht		582309	1					
ANR	582331	MemberAccess	pgs -> halftone -> params . colorscreen		582309	1					
ANR	582332	PtrMemberAccess	pgs -> halftone -> params		582309	0					
ANR	582333	PtrMemberAccess	pgs -> halftone		582309	0					
ANR	582334	Identifier	pgs		582309	0					
ANR	582335	Identifier	halftone		582309	1					
ANR	582336	Identifier	params		582309	1					
ANR	582337	Identifier	colorscreen		582309	1					
ANR	582338	ReturnStatement	return 0 ;	127:12:4136:4144	582309	2	True				
ANR	582339	PrimaryExpression	0		582309	0					
ANR	582340	Label	default :	128:8:4154:4161	582309	3	True				
ANR	582341	Identifier	default		582309	0					
ANR	582342	ExpressionStatement	"code = gs_currentscreen ( pgs , & pht -> screens . colored . gray )"	129:12:4175:4231	582309	4	True				
ANR	582343	AssignmentExpression	"code = gs_currentscreen ( pgs , & pht -> screens . colored . gray )"		582309	0		=			
ANR	582344	Identifier	code		582309	0					
ANR	582345	CallExpression	"gs_currentscreen ( pgs , & pht -> screens . colored . gray )"		582309	1					
ANR	582346	Callee	gs_currentscreen		582309	0					
ANR	582347	Identifier	gs_currentscreen		582309	0					
ANR	582348	ArgumentList	pgs		582309	1					
ANR	582349	Argument	pgs		582309	0					
ANR	582350	Identifier	pgs		582309	0					
ANR	582351	Argument	& pht -> screens . colored . gray		582309	1					
ANR	582352	UnaryOperationExpression	& pht -> screens . colored . gray		582309	0					
ANR	582353	UnaryOperator	&		582309	0					
ANR	582354	MemberAccess	pht -> screens . colored . gray		582309	1					
ANR	582355	MemberAccess	pht -> screens . colored		582309	0					
ANR	582356	PtrMemberAccess	pht -> screens		582309	0					
ANR	582357	Identifier	pht		582309	0					
ANR	582358	Identifier	screens		582309	1					
ANR	582359	Identifier	colored		582309	1					
ANR	582360	Identifier	gray		582309	1					
ANR	582361	IfStatement	if ( code < 0 )		582309	5					
ANR	582362	Condition	code < 0	130:16:4249:4256	582309	0	True				
ANR	582363	RelationalExpression	code < 0		582309	0		<			
ANR	582364	Identifier	code		582309	0					
ANR	582365	PrimaryExpression	0		582309	1					
ANR	582366	ReturnStatement	return code ;	131:16:4275:4286	582309	1	True				
ANR	582367	Identifier	code		582309	0					
ANR	582368	ExpressionStatement	pht -> screens . colored . red = pht -> screens . colored . gray	132:12:4300:4352	582309	6	True				
ANR	582369	AssignmentExpression	pht -> screens . colored . red = pht -> screens . colored . gray		582309	0		=			
ANR	582370	MemberAccess	pht -> screens . colored . red		582309	0					
ANR	582371	MemberAccess	pht -> screens . colored		582309	0					
ANR	582372	PtrMemberAccess	pht -> screens		582309	0					
ANR	582373	Identifier	pht		582309	0					
ANR	582374	Identifier	screens		582309	1					
ANR	582375	Identifier	colored		582309	1					
ANR	582376	Identifier	red		582309	1					
ANR	582377	MemberAccess	pht -> screens . colored . gray		582309	1					
ANR	582378	MemberAccess	pht -> screens . colored		582309	0					
ANR	582379	PtrMemberAccess	pht -> screens		582309	0					
ANR	582380	Identifier	pht		582309	0					
ANR	582381	Identifier	screens		582309	1					
ANR	582382	Identifier	colored		582309	1					
ANR	582383	Identifier	gray		582309	1					
ANR	582384	ExpressionStatement	pht -> screens . colored . green = pht -> screens . colored . gray	133:12:4366:4420	582309	7	True				
ANR	582385	AssignmentExpression	pht -> screens . colored . green = pht -> screens . colored . gray		582309	0		=			
ANR	582386	MemberAccess	pht -> screens . colored . green		582309	0					
ANR	582387	MemberAccess	pht -> screens . colored		582309	0					
ANR	582388	PtrMemberAccess	pht -> screens		582309	0					
ANR	582389	Identifier	pht		582309	0					
ANR	582390	Identifier	screens		582309	1					
ANR	582391	Identifier	colored		582309	1					
ANR	582392	Identifier	green		582309	1					
ANR	582393	MemberAccess	pht -> screens . colored . gray		582309	1					
ANR	582394	MemberAccess	pht -> screens . colored		582309	0					
ANR	582395	PtrMemberAccess	pht -> screens		582309	0					
ANR	582396	Identifier	pht		582309	0					
ANR	582397	Identifier	screens		582309	1					
ANR	582398	Identifier	colored		582309	1					
ANR	582399	Identifier	gray		582309	1					
ANR	582400	ExpressionStatement	pht -> screens . colored . blue = pht -> screens . colored . gray	134:12:4434:4487	582309	8	True				
ANR	582401	AssignmentExpression	pht -> screens . colored . blue = pht -> screens . colored . gray		582309	0		=			
ANR	582402	MemberAccess	pht -> screens . colored . blue		582309	0					
ANR	582403	MemberAccess	pht -> screens . colored		582309	0					
ANR	582404	PtrMemberAccess	pht -> screens		582309	0					
ANR	582405	Identifier	pht		582309	0					
ANR	582406	Identifier	screens		582309	1					
ANR	582407	Identifier	colored		582309	1					
ANR	582408	Identifier	blue		582309	1					
ANR	582409	MemberAccess	pht -> screens . colored . gray		582309	1					
ANR	582410	MemberAccess	pht -> screens . colored		582309	0					
ANR	582411	PtrMemberAccess	pht -> screens		582309	0					
ANR	582412	Identifier	pht		582309	0					
ANR	582413	Identifier	screens		582309	1					
ANR	582414	Identifier	colored		582309	1					
ANR	582415	Identifier	gray		582309	1					
ANR	582416	ReturnStatement	return 0 ;	135:12:4501:4509	582309	9	True				
ANR	582417	PrimaryExpression	0		582309	0					
ANR	582418	ReturnType	int		582309	1					
ANR	582419	Identifier	gs_currentcolorscreen		582309	2					
ANR	582420	ParameterList	"gs_gstate * pgs , gs_colorscreen_halftone * pht"		582309	3					
ANR	582421	Parameter	gs_gstate * pgs	120:22:3936:3950	582309	0	True				
ANR	582422	ParameterType	gs_gstate *		582309	0					
ANR	582423	Identifier	pgs		582309	1					
ANR	582424	Parameter	gs_colorscreen_halftone * pht	120:39:3953:3981	582309	1	True				
ANR	582425	ParameterType	gs_colorscreen_halftone *		582309	0					
ANR	582426	Identifier	pht		582309	1					
ANR	582427	CFGEntryNode	ENTRY		582309		True				
ANR	582428	CFGExitNode	EXIT		582309		True				
ANR	582429	Symbol	pgs -> halftone -> type		582309						
ANR	582430	Symbol	gs_currentscreen		582309						
ANR	582431	Symbol	code		582309						
ANR	582432	Symbol	* pgs		582309						
ANR	582433	Symbol	* pht		582309						
ANR	582434	Symbol	pht -> screens . colored . gray		582309						
ANR	582435	Symbol	pht -> screens . colored		582309						
ANR	582436	Symbol	pgs -> halftone -> params		582309						
ANR	582437	Symbol	pht -> screens . colored . blue		582309						
ANR	582438	Symbol	* * pgs		582309						
ANR	582439	Symbol	& pht -> screens . colored . gray		582309						
ANR	582440	Symbol	pht -> screens . colored . red		582309						
ANR	582441	Symbol	& pht -> screens . colored		582309						
ANR	582442	Symbol	& pht -> screens		582309						
ANR	582443	Symbol	pht -> screens		582309						
ANR	582444	Symbol	pgs -> halftone -> params . colorscreen		582309						
ANR	582445	Symbol	pgs -> halftone		582309						
ANR	582446	Symbol	pht -> screens . colored . green		582309						
ANR	582447	Symbol	pgs		582309						
ANR	582448	Symbol	pht		582309						
ANR	582449	Symbol	* pgs -> halftone		582309						
ANR	582450	Function	gs_sethalftone	140:0:4566:4738							
ANR	582451	FunctionDef	"gs_sethalftone (gs_gstate * pgs , gs_halftone * pht)"		582450	0					
ANR	582452	CompoundStatement		142:0:4621:4738	582450	0					
ANR	582453	IdentifierDeclStatement	gs_halftone ht ;	143:4:4627:4641	582450	0	True				
ANR	582454	IdentifierDecl	ht		582450	0					
ANR	582455	IdentifierDeclType	gs_halftone		582450	0					
ANR	582456	Identifier	ht		582450	1					
ANR	582457	ExpressionStatement	ht = * pht	145:4:4648:4657	582450	1	True				
ANR	582458	AssignmentExpression	ht = * pht		582450	0		=			
ANR	582459	Identifier	ht		582450	0					
ANR	582460	UnaryOperationExpression	* pht		582450	1					
ANR	582461	UnaryOperator	*		582450	0					
ANR	582462	Identifier	pht		582450	1					
ANR	582463	ExpressionStatement	ht . rc . memory = pgs -> memory	146:4:4663:4689	582450	2	True				
ANR	582464	AssignmentExpression	ht . rc . memory = pgs -> memory		582450	0		=			
ANR	582465	MemberAccess	ht . rc . memory		582450	0					
ANR	582466	MemberAccess	ht . rc		582450	0					
ANR	582467	Identifier	ht		582450	0					
ANR	582468	Identifier	rc		582450	1					
ANR	582469	Identifier	memory		582450	1					
ANR	582470	PtrMemberAccess	pgs -> memory		582450	1					
ANR	582471	Identifier	pgs		582450	0					
ANR	582472	Identifier	memory		582450	1					
ANR	582473	ReturnStatement	"return gs_sethalftone_allocated ( pgs , & ht ) ;"	147:4:4695:4736	582450	3	True				
ANR	582474	CallExpression	"gs_sethalftone_allocated ( pgs , & ht )"		582450	0					
ANR	582475	Callee	gs_sethalftone_allocated		582450	0					
ANR	582476	Identifier	gs_sethalftone_allocated		582450	0					
ANR	582477	ArgumentList	pgs		582450	1					
ANR	582478	Argument	pgs		582450	0					
ANR	582479	Identifier	pgs		582450	0					
ANR	582480	Argument	& ht		582450	1					
ANR	582481	UnaryOperationExpression	& ht		582450	0					
ANR	582482	UnaryOperator	&		582450	0					
ANR	582483	Identifier	ht		582450	1					
ANR	582484	ReturnType	int		582450	1					
ANR	582485	Identifier	gs_sethalftone		582450	2					
ANR	582486	ParameterList	"gs_gstate * pgs , gs_halftone * pht"		582450	3					
ANR	582487	Parameter	gs_gstate * pgs	141:15:4585:4599	582450	0	True				
ANR	582488	ParameterType	gs_gstate *		582450	0					
ANR	582489	Identifier	pgs		582450	1					
ANR	582490	Parameter	gs_halftone * pht	141:32:4602:4618	582450	1	True				
ANR	582491	ParameterType	gs_halftone *		582450	0					
ANR	582492	Identifier	pht		582450	1					
ANR	582493	CFGEntryNode	ENTRY		582450		True				
ANR	582494	CFGExitNode	EXIT		582450		True				
ANR	582495	Symbol	gs_sethalftone_allocated		582450						
ANR	582496	Symbol	ht . rc		582450						
ANR	582497	Symbol	* pht		582450						
ANR	582498	Symbol	* pgs		582450						
ANR	582499	Symbol	& ht		582450						
ANR	582500	Symbol	ht		582450						
ANR	582501	Symbol	pgs		582450						
ANR	582502	Symbol	pht		582450						
ANR	582503	Symbol	pgs -> memory		582450						
ANR	582504	Symbol	ht . rc . memory		582450						
ANR	582505	Function	gs_sethalftone_allocated	149:0:4740:5108							
ANR	582506	FunctionDef	"gs_sethalftone_allocated (gs_gstate * pgs , gs_halftone * pht)"		582505	0					
ANR	582507	CompoundStatement		151:0:4805:5108	582505	0					
ANR	582508	IdentifierDeclStatement	gx_device_halftone dev_ht ;	152:4:4811:4836	582505	0	True				
ANR	582509	IdentifierDecl	dev_ht		582505	0					
ANR	582510	IdentifierDeclType	gx_device_halftone		582505	0					
ANR	582511	Identifier	dev_ht		582505	1					
ANR	582512	IdentifierDeclStatement	"int code = gs_sethalftone_prepare ( pgs , pht , & dev_ht ) ;"	153:4:4842:4894	582505	1	True				
ANR	582513	IdentifierDecl	"code = gs_sethalftone_prepare ( pgs , pht , & dev_ht )"		582505	0					
ANR	582514	IdentifierDeclType	int		582505	0					
ANR	582515	Identifier	code		582505	1					
ANR	582516	AssignmentExpression	"code = gs_sethalftone_prepare ( pgs , pht , & dev_ht )"		582505	2		=			
ANR	582517	Identifier	code		582505	0					
ANR	582518	CallExpression	"gs_sethalftone_prepare ( pgs , pht , & dev_ht )"		582505	1					
ANR	582519	Callee	gs_sethalftone_prepare		582505	0					
ANR	582520	Identifier	gs_sethalftone_prepare		582505	0					
ANR	582521	ArgumentList	pgs		582505	1					
ANR	582522	Argument	pgs		582505	0					
ANR	582523	Identifier	pgs		582505	0					
ANR	582524	Argument	pht		582505	1					
ANR	582525	Identifier	pht		582505	0					
ANR	582526	Argument	& dev_ht		582505	2					
ANR	582527	UnaryOperationExpression	& dev_ht		582505	0					
ANR	582528	UnaryOperator	&		582505	0					
ANR	582529	Identifier	dev_ht		582505	1					
ANR	582530	IfStatement	if ( code < 0 )		582505	2					
ANR	582531	Condition	code < 0	155:8:4905:4912	582505	0	True				
ANR	582532	RelationalExpression	code < 0		582505	0		<			
ANR	582533	Identifier	code		582505	0					
ANR	582534	PrimaryExpression	0		582505	1					
ANR	582535	ReturnStatement	return code ;	156:8:4923:4934	582505	1	True				
ANR	582536	Identifier	code		582505	0					
ANR	582537	ExpressionStatement	dev_ht . rc . memory = pht -> rc . memory	157:4:4940:4973	582505	3	True				
ANR	582538	AssignmentExpression	dev_ht . rc . memory = pht -> rc . memory		582505	0		=			
ANR	582539	MemberAccess	dev_ht . rc . memory		582505	0					
ANR	582540	MemberAccess	dev_ht . rc		582505	0					
ANR	582541	Identifier	dev_ht		582505	0					
ANR	582542	Identifier	rc		582505	1					
ANR	582543	Identifier	memory		582505	1					
ANR	582544	MemberAccess	pht -> rc . memory		582505	1					
ANR	582545	PtrMemberAccess	pht -> rc		582505	0					
ANR	582546	Identifier	pht		582505	0					
ANR	582547	Identifier	rc		582505	1					
ANR	582548	Identifier	memory		582505	1					
ANR	582549	IfStatement	"if ( ( code = gx_ht_install ( pgs , pht , & dev_ht ) ) < 0 )"		582505	4					
ANR	582550	Condition	"( code = gx_ht_install ( pgs , pht , & dev_ht ) ) < 0"	158:8:4983:5027	582505	0	True				
ANR	582551	RelationalExpression	"( code = gx_ht_install ( pgs , pht , & dev_ht ) ) < 0"		582505	0		<			
ANR	582552	AssignmentExpression	"code = gx_ht_install ( pgs , pht , & dev_ht )"		582505	0		=			
ANR	582553	Identifier	code		582505	0					
ANR	582554	CallExpression	"gx_ht_install ( pgs , pht , & dev_ht )"		582505	1					
ANR	582555	Callee	gx_ht_install		582505	0					
ANR	582556	Identifier	gx_ht_install		582505	0					
ANR	582557	ArgumentList	pgs		582505	1					
ANR	582558	Argument	pgs		582505	0					
ANR	582559	Identifier	pgs		582505	0					
ANR	582560	Argument	pht		582505	1					
ANR	582561	Identifier	pht		582505	0					
ANR	582562	Argument	& dev_ht		582505	2					
ANR	582563	UnaryOperationExpression	& dev_ht		582505	0					
ANR	582564	UnaryOperator	&		582505	0					
ANR	582565	Identifier	dev_ht		582505	1					
ANR	582566	PrimaryExpression	0		582505	1					
ANR	582567	ExpressionStatement	"gx_device_halftone_release ( & dev_ht , pht -> rc . memory )"	159:8:5038:5089	582505	1	True				
ANR	582568	CallExpression	"gx_device_halftone_release ( & dev_ht , pht -> rc . memory )"		582505	0					
ANR	582569	Callee	gx_device_halftone_release		582505	0					
ANR	582570	Identifier	gx_device_halftone_release		582505	0					
ANR	582571	ArgumentList	& dev_ht		582505	1					
ANR	582572	Argument	& dev_ht		582505	0					
ANR	582573	UnaryOperationExpression	& dev_ht		582505	0					
ANR	582574	UnaryOperator	&		582505	0					
ANR	582575	Identifier	dev_ht		582505	1					
ANR	582576	Argument	pht -> rc . memory		582505	1					
ANR	582577	MemberAccess	pht -> rc . memory		582505	0					
ANR	582578	PtrMemberAccess	pht -> rc		582505	0					
ANR	582579	Identifier	pht		582505	0					
ANR	582580	Identifier	rc		582505	1					
ANR	582581	Identifier	memory		582505	1					
ANR	582582	ReturnStatement	return code ;	160:4:5095:5106	582505	5	True				
ANR	582583	Identifier	code		582505	0					
ANR	582584	ReturnType	int		582505	1					
ANR	582585	Identifier	gs_sethalftone_allocated		582505	2					
ANR	582586	ParameterList	"gs_gstate * pgs , gs_halftone * pht"		582505	3					
ANR	582587	Parameter	gs_gstate * pgs	150:25:4769:4783	582505	0	True				
ANR	582588	ParameterType	gs_gstate *		582505	0					
ANR	582589	Identifier	pgs		582505	1					
ANR	582590	Parameter	gs_halftone * pht	150:42:4786:4802	582505	1	True				
ANR	582591	ParameterType	gs_halftone *		582505	0					
ANR	582592	Identifier	pht		582505	1					
ANR	582593	CFGEntryNode	ENTRY		582505		True				
ANR	582594	CFGExitNode	EXIT		582505		True				
ANR	582595	Symbol	dev_ht . rc		582505						
ANR	582596	Symbol	code		582505						
ANR	582597	Symbol	pht -> rc		582505						
ANR	582598	Symbol	pht -> rc . memory		582505						
ANR	582599	Symbol	* pht		582505						
ANR	582600	Symbol	gs_sethalftone_prepare		582505						
ANR	582601	Symbol	gx_ht_install		582505						
ANR	582602	Symbol	dev_ht		582505						
ANR	582603	Symbol	pgs		582505						
ANR	582604	Symbol	pht		582505						
ANR	582605	Symbol	dev_ht . rc . memory		582505						
ANR	582606	Symbol	& dev_ht		582505						
ANR	582607	Function	gs_sethalftone_prepare	164:0:5161:11626							
ANR	582608	FunctionDef	"gs_sethalftone_prepare (gs_gstate * pgs , gs_halftone * pht , gx_device_halftone * pdht)"		582607	0					
ANR	582609	CompoundStatement		167:0:5274:11626	582607	0					
ANR	582610	IdentifierDeclStatement	gs_memory_t * mem = pht -> rc . memory ;	168:4:5280:5313	582607	0	True				
ANR	582611	IdentifierDecl	* mem = pht -> rc . memory		582607	0					
ANR	582612	IdentifierDeclType	gs_memory_t *		582607	0					
ANR	582613	Identifier	mem		582607	1					
ANR	582614	AssignmentExpression	* mem = pht -> rc . memory		582607	2		=			
ANR	582615	Identifier	mem		582607	0					
ANR	582616	MemberAccess	pht -> rc . memory		582607	1					
ANR	582617	PtrMemberAccess	pht -> rc		582607	0					
ANR	582618	Identifier	pht		582607	0					
ANR	582619	Identifier	rc		582607	1					
ANR	582620	Identifier	memory		582607	1					
ANR	582621	IdentifierDeclStatement	gx_ht_order_component * pocs = 0 ;	169:4:5319:5350	582607	1	True				
ANR	582622	IdentifierDecl	* pocs = 0		582607	0					
ANR	582623	IdentifierDeclType	gx_ht_order_component *		582607	0					
ANR	582624	Identifier	pocs		582607	1					
ANR	582625	AssignmentExpression	* pocs = 0		582607	2		=			
ANR	582626	Identifier	pocs		582607	0					
ANR	582627	PrimaryExpression	0		582607	1					
ANR	582628	IdentifierDeclStatement	int code = 0 ;	170:4:5356:5368	582607	2	True				
ANR	582629	IdentifierDecl	code = 0		582607	0					
ANR	582630	IdentifierDeclType	int		582607	0					
ANR	582631	Identifier	code		582607	1					
ANR	582632	AssignmentExpression	code = 0		582607	2		=			
ANR	582633	Identifier	code		582607	0					
ANR	582634	PrimaryExpression	0		582607	1					
ANR	582635	SwitchStatement	switch ( pht -> type )		582607	3					
ANR	582636	Condition	pht -> type	172:12:5383:5391	582607	0	True				
ANR	582637	PtrMemberAccess	pht -> type		582607	0					
ANR	582638	Identifier	pht		582607	0					
ANR	582639	Identifier	type		582607	1					
ANR	582640	CompoundStatement		6:23:119:119	582607	1					
ANR	582641	Label	case ht_type_colorscreen :	173:8:5404:5428	582607	0	True				
ANR	582642	Identifier	ht_type_colorscreen		582607	0					
ANR	582643	CompoundStatement		13:16:434:439	582607	1					
ANR	582644	IdentifierDeclStatement	gs_screen_halftone * phc = pht -> params . colorscreen . screens . indexed ;	175:16:5460:5545	582607	0	True				
ANR	582645	IdentifierDecl	* phc = pht -> params . colorscreen . screens . indexed		582607	0					
ANR	582646	IdentifierDeclType	gs_screen_halftone *		582607	0					
ANR	582647	Identifier	phc		582607	1					
ANR	582648	AssignmentExpression	* phc = pht -> params . colorscreen . screens . indexed		582607	2		=			
ANR	582649	Identifier	phc		582607	0					
ANR	582650	MemberAccess	pht -> params . colorscreen . screens . indexed		582607	1					
ANR	582651	MemberAccess	pht -> params . colorscreen . screens		582607	0					
ANR	582652	MemberAccess	pht -> params . colorscreen		582607	0					
ANR	582653	PtrMemberAccess	pht -> params		582607	0					
ANR	582654	Identifier	pht		582607	0					
ANR	582655	Identifier	params		582607	1					
ANR	582656	Identifier	colorscreen		582607	1					
ANR	582657	Identifier	screens		582607	1					
ANR	582658	Identifier	indexed		582607	1					
ANR	582659	Statement	static	177:16:5563:5568	582607	1	True				
ANR	582660	IdentifierDeclStatement	"const int cindex [ 4 ] = { 3 , 0 , 1 , 2 } ;"	177:23:5570:5604	582607	2	True				
ANR	582661	IdentifierDecl	"cindex [ 4 ] = { 3 , 0 , 1 , 2 }"		582607	0					
ANR	582662	IdentifierDeclType	const int [ 4 ]		582607	0					
ANR	582663	Identifier	cindex		582607	1					
ANR	582664	PrimaryExpression	4		582607	2					
ANR	582665	AssignmentExpression	"cindex [ 4 ] = { 3 , 0 , 1 , 2 }"		582607	3		=			
ANR	582666	Identifier	cindex		582607	0					
ANR	582667	InitializerList	3		582607	1					
ANR	582668	PrimaryExpression	3		582607	0					
ANR	582669	PrimaryExpression	0		582607	1					
ANR	582670	PrimaryExpression	1		582607	2					
ANR	582671	PrimaryExpression	2		582607	3					
ANR	582672	Statement	static	178:16:5622:5627	582607	3	True				
ANR	582673	IdentifierDeclStatement	"const char * color_names [ 4 ] = { ""Gray"" , ""Red"" , ""Green"" , ""Blue"" } ;"	178:23:5629:5691	582607	4	True				
ANR	582674	IdentifierDecl	"* color_names [ 4 ] = { ""Gray"" , ""Red"" , ""Green"" , ""Blue"" }"		582607	0					
ANR	582675	IdentifierDeclType	const char * [ 4 ]		582607	0					
ANR	582676	Identifier	color_names		582607	1					
ANR	582677	PrimaryExpression	4		582607	2					
ANR	582678	AssignmentExpression	"* color_names [ 4 ] = { ""Gray"" , ""Red"" , ""Green"" , ""Blue"" }"		582607	3		=			
ANR	582679	Identifier	color_names		582607	0					
ANR	582680	InitializerList	"""Gray"""		582607	1					
ANR	582681	PrimaryExpression	"""Gray"""		582607	0					
ANR	582682	PrimaryExpression	"""Red"""		582607	1					
ANR	582683	PrimaryExpression	"""Green"""		582607	2					
ANR	582684	PrimaryExpression	"""Blue"""		582607	3					
ANR	582685	IdentifierDeclStatement	int i ;	179:16:5709:5714	582607	5	True				
ANR	582686	IdentifierDecl	i		582607	0					
ANR	582687	IdentifierDeclType	int		582607	0					
ANR	582688	Identifier	i		582607	1					
ANR	582689	ExpressionStatement	"pocs = gs_alloc_struct_array ( mem , 4 , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"	181:16:5733:5977	582607	6	True				
ANR	582690	AssignmentExpression	"pocs = gs_alloc_struct_array ( mem , 4 , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		582607	0		=			
ANR	582691	Identifier	pocs		582607	0					
ANR	582692	CallExpression	"gs_alloc_struct_array ( mem , 4 , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		582607	1					
ANR	582693	Callee	gs_alloc_struct_array		582607	0					
ANR	582694	Identifier	gs_alloc_struct_array		582607	0					
ANR	582695	ArgumentList	mem		582607	1					
ANR	582696	Argument	mem		582607	0					
ANR	582697	Identifier	mem		582607	0					
ANR	582698	Argument	4		582607	1					
ANR	582699	PrimaryExpression	4		582607	0					
ANR	582700	Argument	gx_ht_order_component		582607	2					
ANR	582701	Identifier	gx_ht_order_component		582607	0					
ANR	582702	Argument	& st_ht_order_component_element		582607	3					
ANR	582703	UnaryOperationExpression	& st_ht_order_component_element		582607	0					
ANR	582704	UnaryOperator	&		582607	0					
ANR	582705	Identifier	st_ht_order_component_element		582607	1					
ANR	582706	Argument	"""gs_sethalftone"""		582607	4					
ANR	582707	PrimaryExpression	"""gs_sethalftone"""		582607	0					
ANR	582708	IfStatement	if ( pocs == 0 )		582607	7					
ANR	582709	Condition	pocs == 0	185:20:5999:6007	582607	0	True				
ANR	582710	EqualityExpression	pocs == 0		582607	0		==			
ANR	582711	Identifier	pocs		582607	0					
ANR	582712	PrimaryExpression	0		582607	1					
ANR	582713	ExpressionStatement	return_error ( gs_error_VMerror )	186:20:6030:6060	582607	1	True				
ANR	582714	CallExpression	return_error ( gs_error_VMerror )		582607	0					
ANR	582715	Callee	return_error		582607	0					
ANR	582716	Identifier	return_error		582607	0					
ANR	582717	ArgumentList	gs_error_VMerror		582607	1					
ANR	582718	Argument	gs_error_VMerror		582607	0					
ANR	582719	Identifier	gs_error_VMerror		582607	0					
ANR	582720	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		582607	8					
ANR	582721	ForInit	i = 0 ;	187:21:6083:6088	582607	0	True				
ANR	582722	AssignmentExpression	i = 0		582607	0		=			
ANR	582723	Identifier	i		582607	0					
ANR	582724	PrimaryExpression	0		582607	1					
ANR	582725	Condition	i < 4	187:28:6090:6094	582607	1	True				
ANR	582726	RelationalExpression	i < 4		582607	0		<			
ANR	582727	Identifier	i		582607	0					
ANR	582728	PrimaryExpression	4		582607	1					
ANR	582729	PostIncDecOperationExpression	i ++	187:35:6097:6099	582607	2	True				
ANR	582730	Identifier	i		582607	0					
ANR	582731	IncDec	++		582607	1					
ANR	582732	CompoundStatement		24:20:931:968	582607	3					
ANR	582733	IdentifierDeclStatement	gs_screen_enum senum ;	188:20:6124:6144	582607	0	True				
ANR	582734	IdentifierDecl	senum		582607	0					
ANR	582735	IdentifierDeclType	gs_screen_enum		582607	0					
ANR	582736	Identifier	senum		582607	1					
ANR	582737	IdentifierDeclStatement	int ci = cindex [ i ] ;	189:20:6166:6184	582607	1	True				
ANR	582738	IdentifierDecl	ci = cindex [ i ]		582607	0					
ANR	582739	IdentifierDeclType	int		582607	0					
ANR	582740	Identifier	ci		582607	1					
ANR	582741	AssignmentExpression	ci = cindex [ i ]		582607	2		=			
ANR	582742	Identifier	ci		582607	0					
ANR	582743	ArrayIndexing	cindex [ i ]		582607	1					
ANR	582744	Identifier	cindex		582607	0					
ANR	582745	Identifier	i		582607	1					
ANR	582746	IdentifierDeclStatement	gx_ht_order_component * poc = & pocs [ i ] ;	190:20:6206:6243	582607	2	True				
ANR	582747	IdentifierDecl	* poc = & pocs [ i ]		582607	0					
ANR	582748	IdentifierDeclType	gx_ht_order_component *		582607	0					
ANR	582749	Identifier	poc		582607	1					
ANR	582750	AssignmentExpression	* poc = & pocs [ i ]		582607	2		=			
ANR	582751	Identifier	poc		582607	0					
ANR	582752	UnaryOperationExpression	& pocs [ i ]		582607	1					
ANR	582753	UnaryOperator	&		582607	0					
ANR	582754	ArrayIndexing	pocs [ i ]		582607	1					
ANR	582755	Identifier	pocs		582607	0					
ANR	582756	Identifier	i		582607	1					
ANR	582757	ExpressionStatement	"code = gx_ht_process_screen_memory ( & senum , pgs , & phc [ ci ] , gs_currentaccuratescreens ( mem ) , mem )"	192:20:6266:6400	582607	3	True				
ANR	582758	AssignmentExpression	"code = gx_ht_process_screen_memory ( & senum , pgs , & phc [ ci ] , gs_currentaccuratescreens ( mem ) , mem )"		582607	0		=			
ANR	582759	Identifier	code		582607	0					
ANR	582760	CallExpression	"gx_ht_process_screen_memory ( & senum , pgs , & phc [ ci ] , gs_currentaccuratescreens ( mem ) , mem )"		582607	1					
ANR	582761	Callee	gx_ht_process_screen_memory		582607	0					
ANR	582762	Identifier	gx_ht_process_screen_memory		582607	0					
ANR	582763	ArgumentList	& senum		582607	1					
ANR	582764	Argument	& senum		582607	0					
ANR	582765	UnaryOperationExpression	& senum		582607	0					
ANR	582766	UnaryOperator	&		582607	0					
ANR	582767	Identifier	senum		582607	1					
ANR	582768	Argument	pgs		582607	1					
ANR	582769	Identifier	pgs		582607	0					
ANR	582770	Argument	& phc [ ci ]		582607	2					
ANR	582771	UnaryOperationExpression	& phc [ ci ]		582607	0					
ANR	582772	UnaryOperator	&		582607	0					
ANR	582773	ArrayIndexing	phc [ ci ]		582607	1					
ANR	582774	Identifier	phc		582607	0					
ANR	582775	Identifier	ci		582607	1					
ANR	582776	Argument	gs_currentaccuratescreens ( mem )		582607	3					
ANR	582777	CallExpression	gs_currentaccuratescreens ( mem )		582607	0					
ANR	582778	Callee	gs_currentaccuratescreens		582607	0					
ANR	582779	Identifier	gs_currentaccuratescreens		582607	0					
ANR	582780	ArgumentList	mem		582607	1					
ANR	582781	Argument	mem		582607	0					
ANR	582782	Identifier	mem		582607	0					
ANR	582783	Argument	mem		582607	4					
ANR	582784	Identifier	mem		582607	0					
ANR	582785	IfStatement	if ( code < 0 )		582607	4					
ANR	582786	Condition	code < 0	194:24:6426:6433	582607	0	True				
ANR	582787	RelationalExpression	code < 0		582607	0		<			
ANR	582788	Identifier	code		582607	0					
ANR	582789	PrimaryExpression	0		582607	1					
ANR	582790	BreakStatement	break ;	195:24:6460:6465	582607	1	True				
ANR	582791	ExpressionStatement	poc -> corder = senum . order	196:20:6487:6512	582607	5	True				
ANR	582792	AssignmentExpression	poc -> corder = senum . order		582607	0		=			
ANR	582793	PtrMemberAccess	poc -> corder		582607	0					
ANR	582794	Identifier	poc		582607	0					
ANR	582795	Identifier	corder		582607	1					
ANR	582796	MemberAccess	senum . order		582607	1					
ANR	582797	Identifier	senum		582607	0					
ANR	582798	Identifier	order		582607	1					
ANR	582799	ExpressionStatement	"poc -> comp_number = gs_color_name_component_number ( pgs -> device , color_names [ i ] , strlen ( color_names [ i ] ) , pht -> type )"	197:20:6534:6679	582607	6	True				
ANR	582800	AssignmentExpression	"poc -> comp_number = gs_color_name_component_number ( pgs -> device , color_names [ i ] , strlen ( color_names [ i ] ) , pht -> type )"		582607	0		=			
ANR	582801	PtrMemberAccess	poc -> comp_number		582607	0					
ANR	582802	Identifier	poc		582607	0					
ANR	582803	Identifier	comp_number		582607	1					
ANR	582804	CallExpression	"gs_color_name_component_number ( pgs -> device , color_names [ i ] , strlen ( color_names [ i ] ) , pht -> type )"		582607	1					
ANR	582805	Callee	gs_color_name_component_number		582607	0					
ANR	582806	Identifier	gs_color_name_component_number		582607	0					
ANR	582807	ArgumentList	pgs -> device		582607	1					
ANR	582808	Argument	pgs -> device		582607	0					
ANR	582809	PtrMemberAccess	pgs -> device		582607	0					
ANR	582810	Identifier	pgs		582607	0					
ANR	582811	Identifier	device		582607	1					
ANR	582812	Argument	color_names [ i ]		582607	1					
ANR	582813	ArrayIndexing	color_names [ i ]		582607	0					
ANR	582814	Identifier	color_names		582607	0					
ANR	582815	Identifier	i		582607	1					
ANR	582816	Argument	strlen ( color_names [ i ] )		582607	2					
ANR	582817	CallExpression	strlen ( color_names [ i ] )		582607	0					
ANR	582818	Callee	strlen		582607	0					
ANR	582819	Identifier	strlen		582607	0					
ANR	582820	ArgumentList	color_names [ i ]		582607	1					
ANR	582821	Argument	color_names [ i ]		582607	0					
ANR	582822	ArrayIndexing	color_names [ i ]		582607	0					
ANR	582823	Identifier	color_names		582607	0					
ANR	582824	Identifier	i		582607	1					
ANR	582825	Argument	pht -> type		582607	3					
ANR	582826	PtrMemberAccess	pht -> type		582607	0					
ANR	582827	Identifier	pht		582607	0					
ANR	582828	Identifier	type		582607	1					
ANR	582829	ExpressionStatement	poc -> cname = 0	199:20:6701:6715	582607	7	True				
ANR	582830	AssignmentExpression	poc -> cname = 0		582607	0		=			
ANR	582831	PtrMemberAccess	poc -> cname		582607	0					
ANR	582832	Identifier	poc		582607	0					
ANR	582833	Identifier	cname		582607	1					
ANR	582834	PrimaryExpression	0		582607	1					
ANR	582835	IfStatement	if ( i == 0 )		582607	8					
ANR	582836	Condition	i == 0	200:24:6792:6797	582607	0	True				
ANR	582837	EqualityExpression	i == 0		582607	0		==			
ANR	582838	Identifier	i		582607	0					
ANR	582839	PrimaryExpression	0		582607	1					
ANR	582840	ExpressionStatement	pdht -> order = poc -> corder	201:24:6845:6870	582607	1	True				
ANR	582841	AssignmentExpression	pdht -> order = poc -> corder		582607	0		=			
ANR	582842	PtrMemberAccess	pdht -> order		582607	0					
ANR	582843	Identifier	pdht		582607	0					
ANR	582844	Identifier	order		582607	1					
ANR	582845	PtrMemberAccess	poc -> corder		582607	1					
ANR	582846	Identifier	poc		582607	0					
ANR	582847	Identifier	corder		582607	1					
ANR	582848	IfStatement	if ( code < 0 )		582607	9					
ANR	582849	Condition	code < 0	203:20:6935:6942	582607	0	True				
ANR	582850	RelationalExpression	code < 0		582607	0		<			
ANR	582851	Identifier	code		582607	0					
ANR	582852	PrimaryExpression	0		582607	1					
ANR	582853	BreakStatement	break ;	204:20:6965:6970	582607	1	True				
ANR	582854	ExpressionStatement	pdht -> components = pocs	205:16:6988:7011	582607	10	True				
ANR	582855	AssignmentExpression	pdht -> components = pocs		582607	0		=			
ANR	582856	PtrMemberAccess	pdht -> components		582607	0					
ANR	582857	Identifier	pdht		582607	0					
ANR	582858	Identifier	components		582607	1					
ANR	582859	Identifier	pocs		582607	1					
ANR	582860	ExpressionStatement	pdht -> num_comp = 4	206:16:7029:7047	582607	11	True				
ANR	582861	AssignmentExpression	pdht -> num_comp = 4		582607	0		=			
ANR	582862	PtrMemberAccess	pdht -> num_comp		582607	0					
ANR	582863	Identifier	pdht		582607	0					
ANR	582864	Identifier	num_comp		582607	1					
ANR	582865	PrimaryExpression	4		582607	1					
ANR	582866	BreakStatement	break ;	208:12:7075:7080	582607	2	True				
ANR	582867	Label	case ht_type_spot :	209:8:7090:7107	582607	3	True				
ANR	582868	Identifier	ht_type_spot		582607	0					
ANR	582869	ExpressionStatement	"code = process_spot ( & pdht -> order , pgs , & pht -> params . spot , mem )"	210:12:7121:7183	582607	4	True				
ANR	582870	AssignmentExpression	"code = process_spot ( & pdht -> order , pgs , & pht -> params . spot , mem )"		582607	0		=			
ANR	582871	Identifier	code		582607	0					
ANR	582872	CallExpression	"process_spot ( & pdht -> order , pgs , & pht -> params . spot , mem )"		582607	1					
ANR	582873	Callee	process_spot		582607	0					
ANR	582874	Identifier	process_spot		582607	0					
ANR	582875	ArgumentList	& pdht -> order		582607	1					
ANR	582876	Argument	& pdht -> order		582607	0					
ANR	582877	UnaryOperationExpression	& pdht -> order		582607	0					
ANR	582878	UnaryOperator	&		582607	0					
ANR	582879	PtrMemberAccess	pdht -> order		582607	1					
ANR	582880	Identifier	pdht		582607	0					
ANR	582881	Identifier	order		582607	1					
ANR	582882	Argument	pgs		582607	1					
ANR	582883	Identifier	pgs		582607	0					
ANR	582884	Argument	& pht -> params . spot		582607	2					
ANR	582885	UnaryOperationExpression	& pht -> params . spot		582607	0					
ANR	582886	UnaryOperator	&		582607	0					
ANR	582887	MemberAccess	pht -> params . spot		582607	1					
ANR	582888	PtrMemberAccess	pht -> params		582607	0					
ANR	582889	Identifier	pht		582607	0					
ANR	582890	Identifier	params		582607	1					
ANR	582891	Identifier	spot		582607	1					
ANR	582892	Argument	mem		582607	3					
ANR	582893	Identifier	mem		582607	0					
ANR	582894	IfStatement	if ( code < 0 )		582607	5					
ANR	582895	Condition	code < 0	211:16:7201:7208	582607	0	True				
ANR	582896	RelationalExpression	code < 0		582607	0		<			
ANR	582897	Identifier	code		582607	0					
ANR	582898	PrimaryExpression	0		582607	1					
ANR	582899	ReturnStatement	return code ;	212:16:7227:7238	582607	1	True				
ANR	582900	Identifier	code		582607	0					
ANR	582901	ExpressionStatement	pdht -> components = 0	213:12:7252:7272	582607	6	True				
ANR	582902	AssignmentExpression	pdht -> components = 0		582607	0		=			
ANR	582903	PtrMemberAccess	pdht -> components		582607	0					
ANR	582904	Identifier	pdht		582607	0					
ANR	582905	Identifier	components		582607	1					
ANR	582906	PrimaryExpression	0		582607	1					
ANR	582907	BreakStatement	break ;	214:12:7286:7291	582607	7	True				
ANR	582908	Label	case ht_type_threshold :	215:8:7301:7323	582607	8	True				
ANR	582909	Identifier	ht_type_threshold		582607	0					
ANR	582910	ExpressionStatement	"code = process_threshold ( & pdht -> order , pgs , & pht -> params . threshold , mem )"	216:12:7337:7446	582607	9	True				
ANR	582911	AssignmentExpression	"code = process_threshold ( & pdht -> order , pgs , & pht -> params . threshold , mem )"		582607	0		=			
ANR	582912	Identifier	code		582607	0					
ANR	582913	CallExpression	"process_threshold ( & pdht -> order , pgs , & pht -> params . threshold , mem )"		582607	1					
ANR	582914	Callee	process_threshold		582607	0					
ANR	582915	Identifier	process_threshold		582607	0					
ANR	582916	ArgumentList	& pdht -> order		582607	1					
ANR	582917	Argument	& pdht -> order		582607	0					
ANR	582918	UnaryOperationExpression	& pdht -> order		582607	0					
ANR	582919	UnaryOperator	&		582607	0					
ANR	582920	PtrMemberAccess	pdht -> order		582607	1					
ANR	582921	Identifier	pdht		582607	0					
ANR	582922	Identifier	order		582607	1					
ANR	582923	Argument	pgs		582607	1					
ANR	582924	Identifier	pgs		582607	0					
ANR	582925	Argument	& pht -> params . threshold		582607	2					
ANR	582926	UnaryOperationExpression	& pht -> params . threshold		582607	0					
ANR	582927	UnaryOperator	&		582607	0					
ANR	582928	MemberAccess	pht -> params . threshold		582607	1					
ANR	582929	PtrMemberAccess	pht -> params		582607	0					
ANR	582930	Identifier	pht		582607	0					
ANR	582931	Identifier	params		582607	1					
ANR	582932	Identifier	threshold		582607	1					
ANR	582933	Argument	mem		582607	3					
ANR	582934	Identifier	mem		582607	0					
ANR	582935	IfStatement	if ( code < 0 )		582607	10					
ANR	582936	Condition	code < 0	218:16:7464:7471	582607	0	True				
ANR	582937	RelationalExpression	code < 0		582607	0		<			
ANR	582938	Identifier	code		582607	0					
ANR	582939	PrimaryExpression	0		582607	1					
ANR	582940	ReturnStatement	return code ;	219:16:7490:7501	582607	1	True				
ANR	582941	Identifier	code		582607	0					
ANR	582942	ExpressionStatement	pdht -> components = 0	220:12:7515:7535	582607	11	True				
ANR	582943	AssignmentExpression	pdht -> components = 0		582607	0		=			
ANR	582944	PtrMemberAccess	pdht -> components		582607	0					
ANR	582945	Identifier	pdht		582607	0					
ANR	582946	Identifier	components		582607	1					
ANR	582947	PrimaryExpression	0		582607	1					
ANR	582948	BreakStatement	break ;	221:12:7549:7554	582607	12	True				
ANR	582949	Label	case ht_type_threshold2 :	222:8:7564:7587	582607	13	True				
ANR	582950	Identifier	ht_type_threshold2		582607	0					
ANR	582951	ExpressionStatement	"code = process_threshold2 ( & pdht -> order , pgs , & pht -> params . threshold2 , mem )"	223:12:7601:7713	582607	14	True				
ANR	582952	AssignmentExpression	"code = process_threshold2 ( & pdht -> order , pgs , & pht -> params . threshold2 , mem )"		582607	0		=			
ANR	582953	Identifier	code		582607	0					
ANR	582954	CallExpression	"process_threshold2 ( & pdht -> order , pgs , & pht -> params . threshold2 , mem )"		582607	1					
ANR	582955	Callee	process_threshold2		582607	0					
ANR	582956	Identifier	process_threshold2		582607	0					
ANR	582957	ArgumentList	& pdht -> order		582607	1					
ANR	582958	Argument	& pdht -> order		582607	0					
ANR	582959	UnaryOperationExpression	& pdht -> order		582607	0					
ANR	582960	UnaryOperator	&		582607	0					
ANR	582961	PtrMemberAccess	pdht -> order		582607	1					
ANR	582962	Identifier	pdht		582607	0					
ANR	582963	Identifier	order		582607	1					
ANR	582964	Argument	pgs		582607	1					
ANR	582965	Identifier	pgs		582607	0					
ANR	582966	Argument	& pht -> params . threshold2		582607	2					
ANR	582967	UnaryOperationExpression	& pht -> params . threshold2		582607	0					
ANR	582968	UnaryOperator	&		582607	0					
ANR	582969	MemberAccess	pht -> params . threshold2		582607	1					
ANR	582970	PtrMemberAccess	pht -> params		582607	0					
ANR	582971	Identifier	pht		582607	0					
ANR	582972	Identifier	params		582607	1					
ANR	582973	Identifier	threshold2		582607	1					
ANR	582974	Argument	mem		582607	3					
ANR	582975	Identifier	mem		582607	0					
ANR	582976	IfStatement	if ( code < 0 )		582607	15					
ANR	582977	Condition	code < 0	225:16:7731:7738	582607	0	True				
ANR	582978	RelationalExpression	code < 0		582607	0		<			
ANR	582979	Identifier	code		582607	0					
ANR	582980	PrimaryExpression	0		582607	1					
ANR	582981	ReturnStatement	return code ;	226:16:7757:7768	582607	1	True				
ANR	582982	Identifier	code		582607	0					
ANR	582983	ExpressionStatement	pdht -> components = 0	227:12:7782:7802	582607	16	True				
ANR	582984	AssignmentExpression	pdht -> components = 0		582607	0		=			
ANR	582985	PtrMemberAccess	pdht -> components		582607	0					
ANR	582986	Identifier	pdht		582607	0					
ANR	582987	Identifier	components		582607	1					
ANR	582988	PrimaryExpression	0		582607	1					
ANR	582989	BreakStatement	break ;	228:12:7816:7821	582607	17	True				
ANR	582990	Label	case ht_type_client_order :	229:8:7831:7856	582607	18	True				
ANR	582991	Identifier	ht_type_client_order		582607	0					
ANR	582992	ExpressionStatement	"code = process_client_order ( & pdht -> order , pgs , & pht -> params . client_order , mem )"	230:12:7870:7988	582607	19	True				
ANR	582993	AssignmentExpression	"code = process_client_order ( & pdht -> order , pgs , & pht -> params . client_order , mem )"		582607	0		=			
ANR	582994	Identifier	code		582607	0					
ANR	582995	CallExpression	"process_client_order ( & pdht -> order , pgs , & pht -> params . client_order , mem )"		582607	1					
ANR	582996	Callee	process_client_order		582607	0					
ANR	582997	Identifier	process_client_order		582607	0					
ANR	582998	ArgumentList	& pdht -> order		582607	1					
ANR	582999	Argument	& pdht -> order		582607	0					
ANR	583000	UnaryOperationExpression	& pdht -> order		582607	0					
ANR	583001	UnaryOperator	&		582607	0					
ANR	583002	PtrMemberAccess	pdht -> order		582607	1					
ANR	583003	Identifier	pdht		582607	0					
ANR	583004	Identifier	order		582607	1					
ANR	583005	Argument	pgs		582607	1					
ANR	583006	Identifier	pgs		582607	0					
ANR	583007	Argument	& pht -> params . client_order		582607	2					
ANR	583008	UnaryOperationExpression	& pht -> params . client_order		582607	0					
ANR	583009	UnaryOperator	&		582607	0					
ANR	583010	MemberAccess	pht -> params . client_order		582607	1					
ANR	583011	PtrMemberAccess	pht -> params		582607	0					
ANR	583012	Identifier	pht		582607	0					
ANR	583013	Identifier	params		582607	1					
ANR	583014	Identifier	client_order		582607	1					
ANR	583015	Argument	mem		582607	3					
ANR	583016	Identifier	mem		582607	0					
ANR	583017	IfStatement	if ( code < 0 )		582607	20					
ANR	583018	Condition	code < 0	232:16:8006:8013	582607	0	True				
ANR	583019	RelationalExpression	code < 0		582607	0		<			
ANR	583020	Identifier	code		582607	0					
ANR	583021	PrimaryExpression	0		582607	1					
ANR	583022	ReturnStatement	return code ;	233:16:8032:8043	582607	1	True				
ANR	583023	Identifier	code		582607	0					
ANR	583024	ExpressionStatement	pdht -> components = 0	234:12:8057:8077	582607	21	True				
ANR	583025	AssignmentExpression	pdht -> components = 0		582607	0		=			
ANR	583026	PtrMemberAccess	pdht -> components		582607	0					
ANR	583027	Identifier	pdht		582607	0					
ANR	583028	Identifier	components		582607	1					
ANR	583029	PrimaryExpression	0		582607	1					
ANR	583030	BreakStatement	break ;	235:12:8091:8096	582607	22	True				
ANR	583031	Label	case ht_type_multiple :	236:8:8106:8127	582607	23	True				
ANR	583032	Identifier	ht_type_multiple		582607	0					
ANR	583033	Label	case ht_type_multiple_colorscreen :	237:8:8137:8170	582607	24	True				
ANR	583034	Identifier	ht_type_multiple_colorscreen		582607	0					
ANR	583035	CompoundStatement		77:16:3132:3163	582607	25					
ANR	583036	IdentifierDeclStatement	uint count = pht -> params . multiple . num_comp ;	239:16:8202:8244	582607	0	True				
ANR	583037	IdentifierDecl	count = pht -> params . multiple . num_comp		582607	0					
ANR	583038	IdentifierDeclType	uint		582607	0					
ANR	583039	Identifier	count		582607	1					
ANR	583040	AssignmentExpression	count = pht -> params . multiple . num_comp		582607	2		=			
ANR	583041	Identifier	count		582607	0					
ANR	583042	MemberAccess	pht -> params . multiple . num_comp		582607	1					
ANR	583043	MemberAccess	pht -> params . multiple		582607	0					
ANR	583044	PtrMemberAccess	pht -> params		582607	0					
ANR	583045	Identifier	pht		582607	0					
ANR	583046	Identifier	params		582607	1					
ANR	583047	Identifier	multiple		582607	1					
ANR	583048	Identifier	num_comp		582607	1					
ANR	583049	IdentifierDeclStatement	bool have_Default = false ;	240:16:8262:8287	582607	1	True				
ANR	583050	IdentifierDecl	have_Default = false		582607	0					
ANR	583051	IdentifierDeclType	bool		582607	0					
ANR	583052	Identifier	have_Default		582607	1					
ANR	583053	AssignmentExpression	have_Default = false		582607	2		=			
ANR	583054	Identifier	false		582607	0					
ANR	583055	Identifier	false		582607	1					
ANR	583056	IdentifierDeclStatement	uint i ;	241:16:8305:8311	582607	2	True				
ANR	583057	IdentifierDecl	i		582607	0					
ANR	583058	IdentifierDeclType	uint		582607	0					
ANR	583059	Identifier	i		582607	1					
ANR	583060	IdentifierDeclStatement	gs_halftone_component * phc = pht -> params . multiple . components ;	242:16:8329:8389	582607	3	True				
ANR	583061	IdentifierDecl	* phc = pht -> params . multiple . components		582607	0					
ANR	583062	IdentifierDeclType	gs_halftone_component *		582607	0					
ANR	583063	Identifier	phc		582607	1					
ANR	583064	AssignmentExpression	* phc = pht -> params . multiple . components		582607	2		=			
ANR	583065	Identifier	phc		582607	0					
ANR	583066	MemberAccess	pht -> params . multiple . components		582607	1					
ANR	583067	MemberAccess	pht -> params . multiple		582607	0					
ANR	583068	PtrMemberAccess	pht -> params		582607	0					
ANR	583069	Identifier	pht		582607	0					
ANR	583070	Identifier	params		582607	1					
ANR	583071	Identifier	multiple		582607	1					
ANR	583072	Identifier	components		582607	1					
ANR	583073	IdentifierDeclStatement	gx_ht_order_component * poc_next ;	243:16:8407:8438	582607	4	True				
ANR	583074	IdentifierDecl	* poc_next		582607	0					
ANR	583075	IdentifierDeclType	gx_ht_order_component *		582607	0					
ANR	583076	Identifier	poc_next		582607	1					
ANR	583077	ExpressionStatement	"pocs = gs_alloc_struct_array ( mem , count , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"	245:16:8457:8705	582607	5	True				
ANR	583078	AssignmentExpression	"pocs = gs_alloc_struct_array ( mem , count , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		582607	0		=			
ANR	583079	Identifier	pocs		582607	0					
ANR	583080	CallExpression	"gs_alloc_struct_array ( mem , count , gx_ht_order_component , & st_ht_order_component_element , ""gs_sethalftone"" )"		582607	1					
ANR	583081	Callee	gs_alloc_struct_array		582607	0					
ANR	583082	Identifier	gs_alloc_struct_array		582607	0					
ANR	583083	ArgumentList	mem		582607	1					
ANR	583084	Argument	mem		582607	0					
ANR	583085	Identifier	mem		582607	0					
ANR	583086	Argument	count		582607	1					
ANR	583087	Identifier	count		582607	0					
ANR	583088	Argument	gx_ht_order_component		582607	2					
ANR	583089	Identifier	gx_ht_order_component		582607	0					
ANR	583090	Argument	& st_ht_order_component_element		582607	3					
ANR	583091	UnaryOperationExpression	& st_ht_order_component_element		582607	0					
ANR	583092	UnaryOperator	&		582607	0					
ANR	583093	Identifier	st_ht_order_component_element		582607	1					
ANR	583094	Argument	"""gs_sethalftone"""		582607	4					
ANR	583095	PrimaryExpression	"""gs_sethalftone"""		582607	0					
ANR	583096	IfStatement	if ( pocs == 0 )		582607	6					
ANR	583097	Condition	pocs == 0	249:20:8727:8735	582607	0	True				
ANR	583098	EqualityExpression	pocs == 0		582607	0		==			
ANR	583099	Identifier	pocs		582607	0					
ANR	583100	PrimaryExpression	0		582607	1					
ANR	583101	ExpressionStatement	return_error ( gs_error_VMerror )	250:20:8758:8788	582607	1	True				
ANR	583102	CallExpression	return_error ( gs_error_VMerror )		582607	0					
ANR	583103	Callee	return_error		582607	0					
ANR	583104	Identifier	return_error		582607	0					
ANR	583105	ArgumentList	gs_error_VMerror		582607	1					
ANR	583106	Argument	gs_error_VMerror		582607	0					
ANR	583107	Identifier	gs_error_VMerror		582607	0					
ANR	583108	ExpressionStatement	poc_next = pocs + 1	251:16:8806:8825	582607	7	True				
ANR	583109	AssignmentExpression	poc_next = pocs + 1		582607	0		=			
ANR	583110	Identifier	poc_next		582607	0					
ANR	583111	AdditiveExpression	pocs + 1		582607	1		+			
ANR	583112	Identifier	pocs		582607	0					
ANR	583113	PrimaryExpression	1		582607	1					
ANR	583114	ForStatement	"for ( i = 0 ; i < count ; i ++ , phc ++ )"		582607	8					
ANR	583115	ForInit	i = 0 ;	252:21:8848:8853	582607	0	True				
ANR	583116	AssignmentExpression	i = 0		582607	0		=			
ANR	583117	Identifier	i		582607	0					
ANR	583118	PrimaryExpression	0		582607	1					
ANR	583119	Condition	i < count	252:28:8855:8863	582607	1	True				
ANR	583120	RelationalExpression	i < count		582607	0		<			
ANR	583121	Identifier	i		582607	0					
ANR	583122	Identifier	count		582607	1					
ANR	583123	Expression	"i ++ , phc ++"	252:39:8866:8875	582607	2	True				
ANR	583124	PostIncDecOperationExpression	i ++		582607	0					
ANR	583125	Identifier	i		582607	0					
ANR	583126	IncDec	++		582607	1					
ANR	583127	PostIncDecOperationExpression	phc ++		582607	1					
ANR	583128	Identifier	phc		582607	0					
ANR	583129	IncDec	++		582607	1					
ANR	583130	CompoundStatement		87:20:3625:3651	582607	3					
ANR	583131	IdentifierDeclStatement	gx_ht_order_component * poc ;	253:20:8900:8926	582607	0	True				
ANR	583132	IdentifierDecl	* poc		582607	0					
ANR	583133	IdentifierDeclType	gx_ht_order_component *		582607	0					
ANR	583134	Identifier	poc		582607	1					
ANR	583135	IfStatement	if ( phc -> comp_number == GX_DEVICE_COLOR_MAX_COMPONENTS )		582607	1					
ANR	583136	Condition	phc -> comp_number == GX_DEVICE_COLOR_MAX_COMPONENTS	255:24:8953:9002	582607	0	True				
ANR	583137	EqualityExpression	phc -> comp_number == GX_DEVICE_COLOR_MAX_COMPONENTS		582607	0		==			
ANR	583138	PtrMemberAccess	phc -> comp_number		582607	0					
ANR	583139	Identifier	phc		582607	0					
ANR	583140	Identifier	comp_number		582607	1					
ANR	583141	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		582607	1					
ANR	583142	CompoundStatement		89:76:3730:3730	582607	1					
ANR	583143	IfStatement	if ( have_Default )		582607	0					
ANR	583144	Condition	have_Default	256:28:9035:9046	582607	0	True				
ANR	583145	Identifier	have_Default		582607	0					
ANR	583146	CompoundStatement		90:42:3774:3774	582607	1					
ANR	583147	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	258:28:9131:9172	582607	0	True				
ANR	583148	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		582607	0		=			
ANR	583149	Identifier	code		582607	0					
ANR	583150	CallExpression	gs_note_error ( gs_error_rangecheck )		582607	1					
ANR	583151	Callee	gs_note_error		582607	0					
ANR	583152	Identifier	gs_note_error		582607	0					
ANR	583153	ArgumentList	gs_error_rangecheck		582607	1					
ANR	583154	Argument	gs_error_rangecheck		582607	0					
ANR	583155	Identifier	gs_error_rangecheck		582607	0					
ANR	583156	BreakStatement	break ;	259:28:9202:9207	582607	1	True				
ANR	583157	ExpressionStatement	poc = pocs	261:24:9259:9269	582607	1	True				
ANR	583158	AssignmentExpression	poc = pocs		582607	0		=			
ANR	583159	Identifier	poc		582607	0					
ANR	583160	Identifier	pocs		582607	1					
ANR	583161	ExpressionStatement	have_Default = true	262:24:9295:9314	582607	2	True				
ANR	583162	AssignmentExpression	have_Default = true		582607	0		=			
ANR	583163	Identifier	have_Default		582607	0					
ANR	583164	Identifier	true		582607	1					
ANR	583165	ElseStatement	else		582607	0					
ANR	583166	IfStatement	if ( i == count - 1 && ! have_Default )		582607	0					
ANR	583167	Condition	i == count - 1 && ! have_Default	263:31:9347:9377	582607	0	True				
ANR	583168	AndExpression	i == count - 1 && ! have_Default		582607	0		&&			
ANR	583169	EqualityExpression	i == count - 1		582607	0		==			
ANR	583170	Identifier	i		582607	0					
ANR	583171	AdditiveExpression	count - 1		582607	1		-			
ANR	583172	Identifier	count		582607	0					
ANR	583173	PrimaryExpression	1		582607	1					
ANR	583174	UnaryOperationExpression	! have_Default		582607	1					
ANR	583175	UnaryOperator	!		582607	0					
ANR	583176	Identifier	have_Default		582607	1					
ANR	583177	CompoundStatement		97:64:4105:4105	582607	1					
ANR	583178	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	265:24:9447:9488	582607	0	True				
ANR	583179	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		582607	0		=			
ANR	583180	Identifier	code		582607	0					
ANR	583181	CallExpression	gs_note_error ( gs_error_rangecheck )		582607	1					
ANR	583182	Callee	gs_note_error		582607	0					
ANR	583183	Identifier	gs_note_error		582607	0					
ANR	583184	ArgumentList	gs_error_rangecheck		582607	1					
ANR	583185	Argument	gs_error_rangecheck		582607	0					
ANR	583186	Identifier	gs_error_rangecheck		582607	0					
ANR	583187	BreakStatement	break ;	266:24:9514:9519	582607	1	True				
ANR	583188	ElseStatement	else		582607	0					
ANR	583189	ExpressionStatement	poc = poc_next ++	268:24:9572:9588	582607	0	True				
ANR	583190	AssignmentExpression	poc = poc_next ++		582607	0		=			
ANR	583191	Identifier	poc		582607	0					
ANR	583192	PostIncDecOperationExpression	poc_next ++		582607	1					
ANR	583193	Identifier	poc_next		582607	0					
ANR	583194	IncDec	++		582607	1					
ANR	583195	ExpressionStatement	poc -> comp_number = phc -> comp_number	270:20:9611:9646	582607	2	True				
ANR	583196	AssignmentExpression	poc -> comp_number = phc -> comp_number		582607	0		=			
ANR	583197	PtrMemberAccess	poc -> comp_number		582607	0					
ANR	583198	Identifier	poc		582607	0					
ANR	583199	Identifier	comp_number		582607	1					
ANR	583200	PtrMemberAccess	phc -> comp_number		582607	1					
ANR	583201	Identifier	phc		582607	0					
ANR	583202	Identifier	comp_number		582607	1					
ANR	583203	ExpressionStatement	poc -> cname = phc -> cname	271:20:9668:9691	582607	3	True				
ANR	583204	AssignmentExpression	poc -> cname = phc -> cname		582607	0		=			
ANR	583205	PtrMemberAccess	poc -> cname		582607	0					
ANR	583206	Identifier	poc		582607	0					
ANR	583207	Identifier	cname		582607	1					
ANR	583208	PtrMemberAccess	phc -> cname		582607	1					
ANR	583209	Identifier	phc		582607	0					
ANR	583210	Identifier	cname		582607	1					
ANR	583211	SwitchStatement	switch ( phc -> type )		582607	4					
ANR	583212	Condition	phc -> type	272:28:9721:9729	582607	0	True				
ANR	583213	PtrMemberAccess	phc -> type		582607	0					
ANR	583214	Identifier	phc		582607	0					
ANR	583215	Identifier	type		582607	1					
ANR	583216	CompoundStatement		106:39:4457:4457	582607	1					
ANR	583217	Label	case ht_type_spot :	273:24:9758:9775	582607	0	True				
ANR	583218	Identifier	ht_type_spot		582607	0					
ANR	583219	ExpressionStatement	"code = process_spot ( & poc -> corder , pgs , & phc -> params . spot , mem )"	274:28:9805:9915	582607	1	True				
ANR	583220	AssignmentExpression	"code = process_spot ( & poc -> corder , pgs , & phc -> params . spot , mem )"		582607	0		=			
ANR	583221	Identifier	code		582607	0					
ANR	583222	CallExpression	"process_spot ( & poc -> corder , pgs , & phc -> params . spot , mem )"		582607	1					
ANR	583223	Callee	process_spot		582607	0					
ANR	583224	Identifier	process_spot		582607	0					
ANR	583225	ArgumentList	& poc -> corder		582607	1					
ANR	583226	Argument	& poc -> corder		582607	0					
ANR	583227	UnaryOperationExpression	& poc -> corder		582607	0					
ANR	583228	UnaryOperator	&		582607	0					
ANR	583229	PtrMemberAccess	poc -> corder		582607	1					
ANR	583230	Identifier	poc		582607	0					
ANR	583231	Identifier	corder		582607	1					
ANR	583232	Argument	pgs		582607	1					
ANR	583233	Identifier	pgs		582607	0					
ANR	583234	Argument	& phc -> params . spot		582607	2					
ANR	583235	UnaryOperationExpression	& phc -> params . spot		582607	0					
ANR	583236	UnaryOperator	&		582607	0					
ANR	583237	MemberAccess	phc -> params . spot		582607	1					
ANR	583238	PtrMemberAccess	phc -> params		582607	0					
ANR	583239	Identifier	phc		582607	0					
ANR	583240	Identifier	params		582607	1					
ANR	583241	Identifier	spot		582607	1					
ANR	583242	Argument	mem		582607	3					
ANR	583243	Identifier	mem		582607	0					
ANR	583244	BreakStatement	break ;	276:28:9945:9950	582607	2	True				
ANR	583245	Label	case ht_type_threshold :	277:24:9976:9998	582607	3	True				
ANR	583246	Identifier	ht_type_threshold		582607	0					
ANR	583247	ExpressionStatement	"code = process_threshold ( & poc -> corder , pgs , & phc -> params . threshold , mem )"	278:28:10028:10148	582607	4	True				
ANR	583248	AssignmentExpression	"code = process_threshold ( & poc -> corder , pgs , & phc -> params . threshold , mem )"		582607	0		=			
ANR	583249	Identifier	code		582607	0					
ANR	583250	CallExpression	"process_threshold ( & poc -> corder , pgs , & phc -> params . threshold , mem )"		582607	1					
ANR	583251	Callee	process_threshold		582607	0					
ANR	583252	Identifier	process_threshold		582607	0					
ANR	583253	ArgumentList	& poc -> corder		582607	1					
ANR	583254	Argument	& poc -> corder		582607	0					
ANR	583255	UnaryOperationExpression	& poc -> corder		582607	0					
ANR	583256	UnaryOperator	&		582607	0					
ANR	583257	PtrMemberAccess	poc -> corder		582607	1					
ANR	583258	Identifier	poc		582607	0					
ANR	583259	Identifier	corder		582607	1					
ANR	583260	Argument	pgs		582607	1					
ANR	583261	Identifier	pgs		582607	0					
ANR	583262	Argument	& phc -> params . threshold		582607	2					
ANR	583263	UnaryOperationExpression	& phc -> params . threshold		582607	0					
ANR	583264	UnaryOperator	&		582607	0					
ANR	583265	MemberAccess	phc -> params . threshold		582607	1					
ANR	583266	PtrMemberAccess	phc -> params		582607	0					
ANR	583267	Identifier	phc		582607	0					
ANR	583268	Identifier	params		582607	1					
ANR	583269	Identifier	threshold		582607	1					
ANR	583270	Argument	mem		582607	3					
ANR	583271	Identifier	mem		582607	0					
ANR	583272	BreakStatement	break ;	280:28:10178:10183	582607	5	True				
ANR	583273	Label	case ht_type_threshold2 :	281:24:10209:10232	582607	6	True				
ANR	583274	Identifier	ht_type_threshold2		582607	0					
ANR	583275	ExpressionStatement	"code = process_threshold2 ( & poc -> corder , pgs , & phc -> params . threshold2 , mem )"	282:28:10262:10384	582607	7	True				
ANR	583276	AssignmentExpression	"code = process_threshold2 ( & poc -> corder , pgs , & phc -> params . threshold2 , mem )"		582607	0		=			
ANR	583277	Identifier	code		582607	0					
ANR	583278	CallExpression	"process_threshold2 ( & poc -> corder , pgs , & phc -> params . threshold2 , mem )"		582607	1					
ANR	583279	Callee	process_threshold2		582607	0					
ANR	583280	Identifier	process_threshold2		582607	0					
ANR	583281	ArgumentList	& poc -> corder		582607	1					
ANR	583282	Argument	& poc -> corder		582607	0					
ANR	583283	UnaryOperationExpression	& poc -> corder		582607	0					
ANR	583284	UnaryOperator	&		582607	0					
ANR	583285	PtrMemberAccess	poc -> corder		582607	1					
ANR	583286	Identifier	poc		582607	0					
ANR	583287	Identifier	corder		582607	1					
ANR	583288	Argument	pgs		582607	1					
ANR	583289	Identifier	pgs		582607	0					
ANR	583290	Argument	& phc -> params . threshold2		582607	2					
ANR	583291	UnaryOperationExpression	& phc -> params . threshold2		582607	0					
ANR	583292	UnaryOperator	&		582607	0					
ANR	583293	MemberAccess	phc -> params . threshold2		582607	1					
ANR	583294	PtrMemberAccess	phc -> params		582607	0					
ANR	583295	Identifier	phc		582607	0					
ANR	583296	Identifier	params		582607	1					
ANR	583297	Identifier	threshold2		582607	1					
ANR	583298	Argument	mem		582607	3					
ANR	583299	Identifier	mem		582607	0					
ANR	583300	BreakStatement	break ;	284:28:10414:10419	582607	8	True				
ANR	583301	Label	case ht_type_client_order :	285:24:10445:10470	582607	9	True				
ANR	583302	Identifier	ht_type_client_order		582607	0					
ANR	583303	ExpressionStatement	"code = process_client_order ( & poc -> corder , pgs , & phc -> params . client_order , mem )"	286:28:10500:10622	582607	10	True				
ANR	583304	AssignmentExpression	"code = process_client_order ( & poc -> corder , pgs , & phc -> params . client_order , mem )"		582607	0		=			
ANR	583305	Identifier	code		582607	0					
ANR	583306	CallExpression	"process_client_order ( & poc -> corder , pgs , & phc -> params . client_order , mem )"		582607	1					
ANR	583307	Callee	process_client_order		582607	0					
ANR	583308	Identifier	process_client_order		582607	0					
ANR	583309	ArgumentList	& poc -> corder		582607	1					
ANR	583310	Argument	& poc -> corder		582607	0					
ANR	583311	UnaryOperationExpression	& poc -> corder		582607	0					
ANR	583312	UnaryOperator	&		582607	0					
ANR	583313	PtrMemberAccess	poc -> corder		582607	1					
ANR	583314	Identifier	poc		582607	0					
ANR	583315	Identifier	corder		582607	1					
ANR	583316	Argument	pgs		582607	1					
ANR	583317	Identifier	pgs		582607	0					
ANR	583318	Argument	& phc -> params . client_order		582607	2					
ANR	583319	UnaryOperationExpression	& phc -> params . client_order		582607	0					
ANR	583320	UnaryOperator	&		582607	0					
ANR	583321	MemberAccess	phc -> params . client_order		582607	1					
ANR	583322	PtrMemberAccess	phc -> params		582607	0					
ANR	583323	Identifier	phc		582607	0					
ANR	583324	Identifier	params		582607	1					
ANR	583325	Identifier	client_order		582607	1					
ANR	583326	Argument	mem		582607	3					
ANR	583327	Identifier	mem		582607	0					
ANR	583328	BreakStatement	break ;	288:28:10652:10657	582607	11	True				
ANR	583329	Label	default :	289:24:10683:10690	582607	12	True				
ANR	583330	Identifier	default		582607	0					
ANR	583331	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	290:28:10720:10761	582607	13	True				
ANR	583332	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		582607	0		=			
ANR	583333	Identifier	code		582607	0					
ANR	583334	CallExpression	gs_note_error ( gs_error_rangecheck )		582607	1					
ANR	583335	Callee	gs_note_error		582607	0					
ANR	583336	Identifier	gs_note_error		582607	0					
ANR	583337	ArgumentList	gs_error_rangecheck		582607	1					
ANR	583338	Argument	gs_error_rangecheck		582607	0					
ANR	583339	Identifier	gs_error_rangecheck		582607	0					
ANR	583340	BreakStatement	break ;	291:28:10791:10796	582607	14	True				
ANR	583341	IfStatement	if ( code < 0 )		582607	5					
ANR	583342	Condition	code < 0	293:24:10844:10851	582607	0	True				
ANR	583343	RelationalExpression	code < 0		582607	0		<			
ANR	583344	Identifier	code		582607	0					
ANR	583345	PrimaryExpression	0		582607	1					
ANR	583346	BreakStatement	break ;	294:24:10878:10883	582607	1	True				
ANR	583347	IfStatement	if ( code < 0 )		582607	9					
ANR	583348	Condition	code < 0	296:20:10923:10930	582607	0	True				
ANR	583349	RelationalExpression	code < 0		582607	0		<			
ANR	583350	Identifier	code		582607	0					
ANR	583351	PrimaryExpression	0		582607	1					
ANR	583352	BreakStatement	break ;	297:20:10953:10958	582607	1	True				
ANR	583353	ExpressionStatement	pdht -> order = pocs [ 0 ] . corder	298:16:10976:11004	582607	10	True				
ANR	583354	AssignmentExpression	pdht -> order = pocs [ 0 ] . corder		582607	0		=			
ANR	583355	PtrMemberAccess	pdht -> order		582607	0					
ANR	583356	Identifier	pdht		582607	0					
ANR	583357	Identifier	order		582607	1					
ANR	583358	MemberAccess	pocs [ 0 ] . corder		582607	1					
ANR	583359	ArrayIndexing	pocs [ 0 ]		582607	0					
ANR	583360	Identifier	pocs		582607	0					
ANR	583361	PrimaryExpression	0		582607	1					
ANR	583362	Identifier	corder		582607	1					
ANR	583363	IfStatement	if ( count == 1 )		582607	11					
ANR	583364	Condition	count == 1	299:20:11040:11049	582607	0	True				
ANR	583365	EqualityExpression	count == 1		582607	0		==			
ANR	583366	Identifier	count		582607	0					
ANR	583367	PrimaryExpression	1		582607	1					
ANR	583368	CompoundStatement		133:32:5777:5777	582607	1					
ANR	583369	ExpressionStatement	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"	302:20:11176:11219	582607	0	True				
ANR	583370	CallExpression	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"		582607	0					
ANR	583371	Callee	gs_free_object		582607	0					
ANR	583372	Identifier	gs_free_object		582607	0					
ANR	583373	ArgumentList	mem		582607	1					
ANR	583374	Argument	mem		582607	0					
ANR	583375	Identifier	mem		582607	0					
ANR	583376	Argument	pocs		582607	1					
ANR	583377	Identifier	pocs		582607	0					
ANR	583378	Argument	"""gs_sethalftone"""		582607	2					
ANR	583379	PrimaryExpression	"""gs_sethalftone"""		582607	0					
ANR	583380	ExpressionStatement	pdht -> components = 0	303:20:11241:11261	582607	1	True				
ANR	583381	AssignmentExpression	pdht -> components = 0		582607	0		=			
ANR	583382	PtrMemberAccess	pdht -> components		582607	0					
ANR	583383	Identifier	pdht		582607	0					
ANR	583384	Identifier	components		582607	1					
ANR	583385	PrimaryExpression	0		582607	1					
ANR	583386	ExpressionStatement	pdht -> num_comp = 0	304:20:11283:11301	582607	2	True				
ANR	583387	AssignmentExpression	pdht -> num_comp = 0		582607	0		=			
ANR	583388	PtrMemberAccess	pdht -> num_comp		582607	0					
ANR	583389	Identifier	pdht		582607	0					
ANR	583390	Identifier	num_comp		582607	1					
ANR	583391	PrimaryExpression	0		582607	1					
ANR	583392	ElseStatement	else		582607	0					
ANR	583393	CompoundStatement		139:23:6051:6051	582607	0					
ANR	583394	ExpressionStatement	pdht -> components = pocs	306:20:11348:11371	582607	0	True				
ANR	583395	AssignmentExpression	pdht -> components = pocs		582607	0		=			
ANR	583396	PtrMemberAccess	pdht -> components		582607	0					
ANR	583397	Identifier	pdht		582607	0					
ANR	583398	Identifier	components		582607	1					
ANR	583399	Identifier	pocs		582607	1					
ANR	583400	ExpressionStatement	pdht -> num_comp = count	307:20:11393:11415	582607	1	True				
ANR	583401	AssignmentExpression	pdht -> num_comp = count		582607	0		=			
ANR	583402	PtrMemberAccess	pdht -> num_comp		582607	0					
ANR	583403	Identifier	pdht		582607	0					
ANR	583404	Identifier	num_comp		582607	1					
ANR	583405	Identifier	count		582607	1					
ANR	583406	BreakStatement	break ;	310:12:11461:11466	582607	26	True				
ANR	583407	Label	default :	311:8:11476:11483	582607	27	True				
ANR	583408	Identifier	default		582607	0					
ANR	583409	ExpressionStatement	return_error ( gs_error_rangecheck )	312:12:11497:11530	582607	28	True				
ANR	583410	CallExpression	return_error ( gs_error_rangecheck )		582607	0					
ANR	583411	Callee	return_error		582607	0					
ANR	583412	Identifier	return_error		582607	0					
ANR	583413	ArgumentList	gs_error_rangecheck		582607	1					
ANR	583414	Argument	gs_error_rangecheck		582607	0					
ANR	583415	Identifier	gs_error_rangecheck		582607	0					
ANR	583416	IfStatement	if ( code < 0 )		582607	4					
ANR	583417	Condition	code < 0	314:8:11546:11553	582607	0	True				
ANR	583418	RelationalExpression	code < 0		582607	0		<			
ANR	583419	Identifier	code		582607	0					
ANR	583420	PrimaryExpression	0		582607	1					
ANR	583421	ExpressionStatement	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"	315:8:11564:11607	582607	1	True				
ANR	583422	CallExpression	"gs_free_object ( mem , pocs , ""gs_sethalftone"" )"		582607	0					
ANR	583423	Callee	gs_free_object		582607	0					
ANR	583424	Identifier	gs_free_object		582607	0					
ANR	583425	ArgumentList	mem		582607	1					
ANR	583426	Argument	mem		582607	0					
ANR	583427	Identifier	mem		582607	0					
ANR	583428	Argument	pocs		582607	1					
ANR	583429	Identifier	pocs		582607	0					
ANR	583430	Argument	"""gs_sethalftone"""		582607	2					
ANR	583431	PrimaryExpression	"""gs_sethalftone"""		582607	0					
ANR	583432	ReturnStatement	return code ;	316:4:11613:11624	582607	5	True				
ANR	583433	Identifier	code		582607	0					
ANR	583434	ReturnType	int		582607	1					
ANR	583435	Identifier	gs_sethalftone_prepare		582607	2					
ANR	583436	ParameterList	"gs_gstate * pgs , gs_halftone * pht , gx_device_halftone * pdht"		582607	3					
ANR	583437	Parameter	gs_gstate * pgs	165:23:5188:5202	582607	0	True				
ANR	583438	ParameterType	gs_gstate *		582607	0					
ANR	583439	Identifier	pgs		582607	1					
ANR	583440	Parameter	gs_halftone * pht	165:40:5205:5221	582607	1	True				
ANR	583441	ParameterType	gs_halftone *		582607	0					
ANR	583442	Identifier	pht		582607	1					
ANR	583443	Parameter	gx_device_halftone * pdht	166:23:5247:5271	582607	2	True				
ANR	583444	ParameterType	gx_device_halftone *		582607	0					
ANR	583445	Identifier	pdht		582607	1					
ANR	583446	CFGEntryNode	ENTRY		582607		True				
ANR	583447	CFGExitNode	EXIT		582607		True				
ANR	583448	Symbol	process_spot		582607						
ANR	583449	Symbol	pht -> params . colorscreen . screens		582607						
ANR	583450	Symbol	process_threshold2		582607						
ANR	583451	Symbol	gs_error_rangecheck		582607						
ANR	583452	Symbol	* pgs		582607						
ANR	583453	Symbol	pdht -> order		582607						
ANR	583454	Symbol	& phc -> params		582607						
ANR	583455	Symbol	phc -> comp_number		582607						
ANR	583456	Symbol	process_threshold		582607						
ANR	583457	Symbol	gs_color_name_component_number		582607						
ANR	583458	Symbol	strlen		582607						
ANR	583459	Symbol	& pht -> params . spot		582607						
ANR	583460	Symbol	& phc -> params . threshold		582607						
ANR	583461	Symbol	poc -> comp_number		582607						
ANR	583462	Symbol	* pdht		582607						
ANR	583463	Symbol	* phc		582607						
ANR	583464	Symbol	pgs -> device		582607						
ANR	583465	Symbol	& poc -> corder		582607						
ANR	583466	Symbol	pocs		582607						
ANR	583467	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		582607						
ANR	583468	Symbol	gs_alloc_struct_array		582607						
ANR	583469	Symbol	cindex		582607						
ANR	583470	Symbol	* cindex		582607						
ANR	583471	Symbol	count		582607						
ANR	583472	Symbol	pht -> params . multiple		582607						
ANR	583473	Symbol	* color_names		582607						
ANR	583474	Symbol	& phc -> params . threshold2		582607						
ANR	583475	Symbol	phc -> type		582607						
ANR	583476	Symbol	& pht -> params . client_order		582607						
ANR	583477	Symbol	& pht -> params		582607						
ANR	583478	Symbol	* poc		582607						
ANR	583479	Symbol	poc -> corder		582607						
ANR	583480	Symbol	& pht -> params . threshold2		582607						
ANR	583481	Symbol	pht -> rc		582607						
ANR	583482	Symbol	pdht		582607						
ANR	583483	Symbol	pdht -> num_comp		582607						
ANR	583484	Symbol	& senum		582607						
ANR	583485	Symbol	true		582607						
ANR	583486	Symbol	poc_next		582607						
ANR	583487	Symbol	pht -> params . multiple . num_comp		582607						
ANR	583488	Symbol	phc -> params		582607						
ANR	583489	Symbol	& pdht -> order		582607						
ANR	583490	Symbol	have_Default		582607						
ANR	583491	Symbol	code		582607						
ANR	583492	Symbol	color_names		582607						
ANR	583493	Symbol	poc		582607						
ANR	583494	Symbol	* pocs		582607						
ANR	583495	Symbol	pdht -> components		582607						
ANR	583496	Symbol	& phc -> params . client_order		582607						
ANR	583497	Symbol	pocs [ 0 ] . corder		582607						
ANR	583498	Symbol	& phc -> params . spot		582607						
ANR	583499	Symbol	mem		582607						
ANR	583500	Symbol	gx_ht_process_screen_memory		582607						
ANR	583501	Symbol	pgs		582607						
ANR	583502	Symbol	pht -> rc . memory		582607						
ANR	583503	Symbol	* pht		582607						
ANR	583504	Symbol	ci		582607						
ANR	583505	Symbol	process_client_order		582607						
ANR	583506	Symbol	& pht -> params . threshold		582607						
ANR	583507	Symbol	false		582607						
ANR	583508	Symbol	i		582607						
ANR	583509	Symbol	phc		582607						
ANR	583510	Symbol	senum . order		582607						
ANR	583511	Symbol	pht -> params . colorscreen . screens . indexed		582607						
ANR	583512	Symbol	pht -> type		582607						
ANR	583513	Symbol	senum		582607						
ANR	583514	Symbol	gs_error_VMerror		582607						
ANR	583515	Symbol	pht -> params . colorscreen		582607						
ANR	583516	Symbol	gs_note_error		582607						
ANR	583517	Symbol	* i		582607						
ANR	583518	Symbol	gs_currentaccuratescreens		582607						
ANR	583519	Symbol	poc -> cname		582607						
ANR	583520	Symbol	pht -> params . multiple . components		582607						
ANR	583521	Symbol	gx_ht_order_component		582607						
ANR	583522	Symbol	phc -> cname		582607						
ANR	583523	Symbol	& st_ht_order_component_element		582607						
ANR	583524	Symbol	pht		582607						
ANR	583525	Symbol	pht -> params		582607						
ANR	583526	Function	process_transfer	322:0:11720:12548							
ANR	583527	FunctionDef	"process_transfer (gx_ht_order * porder , gs_gstate * pgs , gs_mapping_proc proc , gs_mapping_closure_t * pmc , gs_memory_t * mem)"		583526	0					
ANR	583528	CompoundStatement		326:0:11890:12548	583526	0					
ANR	583529	IdentifierDeclStatement	gx_transfer_map * pmap ;	327:4:11896:11917	583526	0	True				
ANR	583530	IdentifierDecl	* pmap		583526	0					
ANR	583531	IdentifierDeclType	gx_transfer_map *		583526	0					
ANR	583532	Identifier	pmap		583526	1					
ANR	583533	IfStatement	if ( proc == 0 && pmc -> proc == 0 )		583526	1					
ANR	583534	Condition	proc == 0 && pmc -> proc == 0	329:8:11928:11954	583526	0	True				
ANR	583535	AndExpression	proc == 0 && pmc -> proc == 0		583526	0		&&			
ANR	583536	EqualityExpression	proc == 0		583526	0		==			
ANR	583537	Identifier	proc		583526	0					
ANR	583538	PrimaryExpression	0		583526	1					
ANR	583539	EqualityExpression	pmc -> proc == 0		583526	1		==			
ANR	583540	PtrMemberAccess	pmc -> proc		583526	0					
ANR	583541	Identifier	pmc		583526	0					
ANR	583542	Identifier	proc		583526	1					
ANR	583543	PrimaryExpression	0		583526	1					
ANR	583544	ReturnStatement	return 0 ;	330:8:11965:11973	583526	1	True				
ANR	583545	PrimaryExpression	0		583526	0					
ANR	583546	ExpressionStatement	"rc_alloc_struct_1 ( pmap , gx_transfer_map , & st_transfer_map , mem , return_error ( gs_error_VMerror ) , ""process_transfer"" )"	335:4:12092:12251	583526	2	True				
ANR	583547	CallExpression	"rc_alloc_struct_1 ( pmap , gx_transfer_map , & st_transfer_map , mem , return_error ( gs_error_VMerror ) , ""process_transfer"" )"		583526	0					
ANR	583548	Callee	rc_alloc_struct_1		583526	0					
ANR	583549	Identifier	rc_alloc_struct_1		583526	0					
ANR	583550	ArgumentList	pmap		583526	1					
ANR	583551	Argument	pmap		583526	0					
ANR	583552	Identifier	pmap		583526	0					
ANR	583553	Argument	gx_transfer_map		583526	1					
ANR	583554	Identifier	gx_transfer_map		583526	0					
ANR	583555	Argument	& st_transfer_map		583526	2					
ANR	583556	UnaryOperationExpression	& st_transfer_map		583526	0					
ANR	583557	UnaryOperator	&		583526	0					
ANR	583558	Identifier	st_transfer_map		583526	1					
ANR	583559	Argument	mem		583526	3					
ANR	583560	Identifier	mem		583526	0					
ANR	583561	Argument	return_error ( gs_error_VMerror )		583526	4					
ANR	583562	CallExpression	return_error ( gs_error_VMerror )		583526	0					
ANR	583563	Callee	return_error		583526	0					
ANR	583564	Identifier	return_error		583526	0					
ANR	583565	ArgumentList	gs_error_VMerror		583526	1					
ANR	583566	Argument	gs_error_VMerror		583526	0					
ANR	583567	Identifier	gs_error_VMerror		583526	0					
ANR	583568	Argument	"""process_transfer"""		583526	5					
ANR	583569	PrimaryExpression	"""process_transfer"""		583526	0					
ANR	583570	ExpressionStatement	pmap -> proc = proc	338:4:12257:12274	583526	3	True				
ANR	583571	AssignmentExpression	pmap -> proc = proc		583526	0		=			
ANR	583572	PtrMemberAccess	pmap -> proc		583526	0					
ANR	583573	Identifier	pmap		583526	0					
ANR	583574	Identifier	proc		583526	1					
ANR	583575	Identifier	proc		583526	1					
ANR	583576	ExpressionStatement	pmap -> closure = * pmc	339:4:12304:12324	583526	4	True				
ANR	583577	AssignmentExpression	pmap -> closure = * pmc		583526	0		=			
ANR	583578	PtrMemberAccess	pmap -> closure		583526	0					
ANR	583579	Identifier	pmap		583526	0					
ANR	583580	Identifier	closure		583526	1					
ANR	583581	UnaryOperationExpression	* pmc		583526	1					
ANR	583582	UnaryOperator	*		583526	0					
ANR	583583	Identifier	pmc		583526	1					
ANR	583584	ExpressionStatement	"pmap -> id = gs_next_ids ( mem , 1 )"	340:4:12330:12360	583526	5	True				
ANR	583585	AssignmentExpression	"pmap -> id = gs_next_ids ( mem , 1 )"		583526	0		=			
ANR	583586	PtrMemberAccess	pmap -> id		583526	0					
ANR	583587	Identifier	pmap		583526	0					
ANR	583588	Identifier	id		583526	1					
ANR	583589	CallExpression	"gs_next_ids ( mem , 1 )"		583526	1					
ANR	583590	Callee	gs_next_ids		583526	0					
ANR	583591	Identifier	gs_next_ids		583526	0					
ANR	583592	ArgumentList	mem		583526	1					
ANR	583593	Argument	mem		583526	0					
ANR	583594	Identifier	mem		583526	0					
ANR	583595	Argument	1		583526	1					
ANR	583596	PrimaryExpression	1		583526	0					
ANR	583597	ExpressionStatement	porder -> transfer = pmap	341:4:12366:12389	583526	6	True				
ANR	583598	AssignmentExpression	porder -> transfer = pmap		583526	0		=			
ANR	583599	PtrMemberAccess	porder -> transfer		583526	0					
ANR	583600	Identifier	porder		583526	0					
ANR	583601	Identifier	transfer		583526	1					
ANR	583602	Identifier	pmap		583526	1					
ANR	583603	IfStatement	if ( proc == gs_mapped_transfer )		583526	7					
ANR	583604	Condition	proc == gs_mapped_transfer	342:8:12399:12424	583526	0	True				
ANR	583605	EqualityExpression	proc == gs_mapped_transfer		583526	0		==			
ANR	583606	Identifier	proc		583526	0					
ANR	583607	Identifier	gs_mapped_transfer		583526	1					
ANR	583608	ReturnStatement	return 0 ;	343:8:12435:12443	583526	1	True				
ANR	583609	PrimaryExpression	0		583526	0					
ANR	583610	ExpressionStatement	"load_transfer_map ( pgs , pmap , 0.0 )"	344:4:12499:12532	583526	8	True				
ANR	583611	CallExpression	"load_transfer_map ( pgs , pmap , 0.0 )"		583526	0					
ANR	583612	Callee	load_transfer_map		583526	0					
ANR	583613	Identifier	load_transfer_map		583526	0					
ANR	583614	ArgumentList	pgs		583526	1					
ANR	583615	Argument	pgs		583526	0					
ANR	583616	Identifier	pgs		583526	0					
ANR	583617	Argument	pmap		583526	1					
ANR	583618	Identifier	pmap		583526	0					
ANR	583619	Argument	0.0		583526	2					
ANR	583620	PrimaryExpression	0.0		583526	0					
ANR	583621	ReturnStatement	return 0 ;	345:4:12538:12546	583526	9	True				
ANR	583622	PrimaryExpression	0		583526	0					
ANR	583623	ReturnType	static int		583526	1					
ANR	583624	Identifier	process_transfer		583526	2					
ANR	583625	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_mapping_proc proc , gs_mapping_closure_t * pmc , gs_memory_t * mem"		583526	3					
ANR	583626	Parameter	gx_ht_order * porder	323:17:11748:11767	583526	0	True				
ANR	583627	ParameterType	gx_ht_order *		583526	0					
ANR	583628	Identifier	porder		583526	1					
ANR	583629	Parameter	gs_gstate * pgs	323:39:11770:11784	583526	1	True				
ANR	583630	ParameterType	gs_gstate *		583526	0					
ANR	583631	Identifier	pgs		583526	1					
ANR	583632	Parameter	gs_mapping_proc proc	324:17:11804:11823	583526	2	True				
ANR	583633	ParameterType	gs_mapping_proc		583526	0					
ANR	583634	Identifier	proc		583526	1					
ANR	583635	Parameter	gs_mapping_closure_t * pmc	324:39:11826:11851	583526	3	True				
ANR	583636	ParameterType	gs_mapping_closure_t *		583526	0					
ANR	583637	Identifier	pmc		583526	1					
ANR	583638	Parameter	gs_memory_t * mem	325:17:11871:11887	583526	4	True				
ANR	583639	ParameterType	gs_memory_t *		583526	0					
ANR	583640	Identifier	mem		583526	1					
ANR	583641	CFGEntryNode	ENTRY		583526		True				
ANR	583642	CFGExitNode	EXIT		583526		True				
ANR	583643	Symbol	return_error		583526						
ANR	583644	Symbol	* pmap		583526						
ANR	583645	Symbol	proc		583526						
ANR	583646	Symbol	pmc		583526						
ANR	583647	Symbol	pmc -> proc		583526						
ANR	583648	Symbol	gx_transfer_map		583526						
ANR	583649	Symbol	pmap -> closure		583526						
ANR	583650	Symbol	gs_next_ids		583526						
ANR	583651	Symbol	porder		583526						
ANR	583652	Symbol	porder -> transfer		583526						
ANR	583653	Symbol	& st_transfer_map		583526						
ANR	583654	Symbol	pmap -> proc		583526						
ANR	583655	Symbol	gs_mapped_transfer		583526						
ANR	583656	Symbol	* pmc		583526						
ANR	583657	Symbol	gs_error_VMerror		583526						
ANR	583658	Symbol	mem		583526						
ANR	583659	Symbol	pmap -> id		583526						
ANR	583660	Symbol	pmap		583526						
ANR	583661	Symbol	pgs		583526						
ANR	583662	Symbol	* porder		583526						
ANR	583663	Function	process_spot	349:0:12579:13055							
ANR	583664	FunctionDef	"process_spot (gx_ht_order * porder , gs_gstate * pgs , gs_spot_halftone * phsp , gs_memory_t * mem)"		583663	0					
ANR	583665	CompoundStatement		352:0:12699:13055	583663	0					
ANR	583666	IdentifierDeclStatement	gs_screen_enum senum ;	353:4:12705:12725	583663	0	True				
ANR	583667	IdentifierDecl	senum		583663	0					
ANR	583668	IdentifierDeclType	gs_screen_enum		583663	0					
ANR	583669	Identifier	senum		583663	1					
ANR	583670	IdentifierDeclStatement	"int code = gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem ) ;"	355:4:12732:12870	583663	1	True				
ANR	583671	IdentifierDecl	"code = gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem )"		583663	0					
ANR	583672	IdentifierDeclType	int		583663	0					
ANR	583673	Identifier	code		583663	1					
ANR	583674	AssignmentExpression	"code = gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem )"		583663	2		=			
ANR	583675	Identifier	code		583663	0					
ANR	583676	CallExpression	"gx_ht_process_screen_memory ( & senum , pgs , & phsp -> screen , phsp -> accurate_screens , mem )"		583663	1					
ANR	583677	Callee	gx_ht_process_screen_memory		583663	0					
ANR	583678	Identifier	gx_ht_process_screen_memory		583663	0					
ANR	583679	ArgumentList	& senum		583663	1					
ANR	583680	Argument	& senum		583663	0					
ANR	583681	UnaryOperationExpression	& senum		583663	0					
ANR	583682	UnaryOperator	&		583663	0					
ANR	583683	Identifier	senum		583663	1					
ANR	583684	Argument	pgs		583663	1					
ANR	583685	Identifier	pgs		583663	0					
ANR	583686	Argument	& phsp -> screen		583663	2					
ANR	583687	UnaryOperationExpression	& phsp -> screen		583663	0					
ANR	583688	UnaryOperator	&		583663	0					
ANR	583689	PtrMemberAccess	phsp -> screen		583663	1					
ANR	583690	Identifier	phsp		583663	0					
ANR	583691	Identifier	screen		583663	1					
ANR	583692	Argument	phsp -> accurate_screens		583663	3					
ANR	583693	PtrMemberAccess	phsp -> accurate_screens		583663	0					
ANR	583694	Identifier	phsp		583663	0					
ANR	583695	Identifier	accurate_screens		583663	1					
ANR	583696	Argument	mem		583663	4					
ANR	583697	Identifier	mem		583663	0					
ANR	583698	IfStatement	if ( code < 0 )		583663	2					
ANR	583699	Condition	code < 0	358:8:12881:12888	583663	0	True				
ANR	583700	RelationalExpression	code < 0		583663	0		<			
ANR	583701	Identifier	code		583663	0					
ANR	583702	PrimaryExpression	0		583663	1					
ANR	583703	ReturnStatement	return code ;	359:8:12899:12910	583663	1	True				
ANR	583704	Identifier	code		583663	0					
ANR	583705	ExpressionStatement	* porder = senum . order	360:4:12916:12937	583663	3	True				
ANR	583706	AssignmentExpression	* porder = senum . order		583663	0		=			
ANR	583707	UnaryOperationExpression	* porder		583663	0					
ANR	583708	UnaryOperator	*		583663	0					
ANR	583709	Identifier	porder		583663	1					
ANR	583710	MemberAccess	senum . order		583663	1					
ANR	583711	Identifier	senum		583663	0					
ANR	583712	Identifier	order		583663	1					
ANR	583713	ReturnStatement	"return process_transfer ( porder , pgs , phsp -> transfer , & phsp -> transfer_closure , mem ) ;"	361:4:12943:13053	583663	4	True				
ANR	583714	CallExpression	"process_transfer ( porder , pgs , phsp -> transfer , & phsp -> transfer_closure , mem )"		583663	0					
ANR	583715	Callee	process_transfer		583663	0					
ANR	583716	Identifier	process_transfer		583663	0					
ANR	583717	ArgumentList	porder		583663	1					
ANR	583718	Argument	porder		583663	0					
ANR	583719	Identifier	porder		583663	0					
ANR	583720	Argument	pgs		583663	1					
ANR	583721	Identifier	pgs		583663	0					
ANR	583722	Argument	phsp -> transfer		583663	2					
ANR	583723	PtrMemberAccess	phsp -> transfer		583663	0					
ANR	583724	Identifier	phsp		583663	0					
ANR	583725	Identifier	transfer		583663	1					
ANR	583726	Argument	& phsp -> transfer_closure		583663	3					
ANR	583727	UnaryOperationExpression	& phsp -> transfer_closure		583663	0					
ANR	583728	UnaryOperator	&		583663	0					
ANR	583729	PtrMemberAccess	phsp -> transfer_closure		583663	1					
ANR	583730	Identifier	phsp		583663	0					
ANR	583731	Identifier	transfer_closure		583663	1					
ANR	583732	Argument	mem		583663	4					
ANR	583733	Identifier	mem		583663	0					
ANR	583734	ReturnType	static int		583663	1					
ANR	583735	Identifier	process_spot		583663	2					
ANR	583736	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_spot_halftone * phsp , gs_memory_t * mem"		583663	3					
ANR	583737	Parameter	gx_ht_order * porder	350:13:12603:12622	583663	0	True				
ANR	583738	ParameterType	gx_ht_order *		583663	0					
ANR	583739	Identifier	porder		583663	1					
ANR	583740	Parameter	gs_gstate * pgs	350:35:12625:12639	583663	1	True				
ANR	583741	ParameterType	gs_gstate *		583663	0					
ANR	583742	Identifier	pgs		583663	1					
ANR	583743	Parameter	gs_spot_halftone * phsp	351:13:12655:12677	583663	2	True				
ANR	583744	ParameterType	gs_spot_halftone *		583663	0					
ANR	583745	Identifier	phsp		583663	1					
ANR	583746	Parameter	gs_memory_t * mem	351:38:12680:12696	583663	3	True				
ANR	583747	ParameterType	gs_memory_t *		583663	0					
ANR	583748	Identifier	mem		583663	1					
ANR	583749	CFGEntryNode	ENTRY		583663		True				
ANR	583750	CFGExitNode	EXIT		583663		True				
ANR	583751	Symbol	phsp		583663						
ANR	583752	Symbol	code		583663						
ANR	583753	Symbol	phsp -> accurate_screens		583663						
ANR	583754	Symbol	* phsp		583663						
ANR	583755	Symbol	senum . order		583663						
ANR	583756	Symbol	porder		583663						
ANR	583757	Symbol	phsp -> transfer		583663						
ANR	583758	Symbol	senum		583663						
ANR	583759	Symbol	process_transfer		583663						
ANR	583760	Symbol	& phsp -> transfer_closure		583663						
ANR	583761	Symbol	mem		583663						
ANR	583762	Symbol	& phsp -> screen		583663						
ANR	583763	Symbol	gx_ht_process_screen_memory		583663						
ANR	583764	Symbol	& senum		583663						
ANR	583765	Symbol	pgs		583663						
ANR	583766	Symbol	* porder		583663						
ANR	583767	Function	gx_ht_complete_threshold_order	366:0:13117:13890							
ANR	583768	FunctionDef	gx_ht_complete_threshold_order (gx_ht_order * porder)		583767	0					
ANR	583769	CompoundStatement		368:0:13175:13890	583767	0					
ANR	583770	IdentifierDeclStatement	int num_levels = porder -> num_levels ;	369:4:13181:13216	583767	0	True				
ANR	583771	IdentifierDecl	num_levels = porder -> num_levels		583767	0					
ANR	583772	IdentifierDeclType	int		583767	0					
ANR	583773	Identifier	num_levels		583767	1					
ANR	583774	AssignmentExpression	num_levels = porder -> num_levels		583767	2		=			
ANR	583775	Identifier	num_levels		583767	0					
ANR	583776	PtrMemberAccess	porder -> num_levels		583767	1					
ANR	583777	Identifier	porder		583767	0					
ANR	583778	Identifier	num_levels		583767	1					
ANR	583779	IdentifierDeclStatement	uint * levels = porder -> levels ;	370:4:13222:13251	583767	1	True				
ANR	583780	IdentifierDecl	* levels = porder -> levels		583767	0					
ANR	583781	IdentifierDeclType	uint *		583767	0					
ANR	583782	Identifier	levels		583767	1					
ANR	583783	AssignmentExpression	* levels = porder -> levels		583767	2		=			
ANR	583784	Identifier	levels		583767	0					
ANR	583785	PtrMemberAccess	porder -> levels		583767	1					
ANR	583786	Identifier	porder		583767	0					
ANR	583787	Identifier	levels		583767	1					
ANR	583788	IdentifierDeclStatement	uint size = porder -> num_bits ;	371:4:13257:13285	583767	2	True				
ANR	583789	IdentifierDecl	size = porder -> num_bits		583767	0					
ANR	583790	IdentifierDeclType	uint		583767	0					
ANR	583791	Identifier	size		583767	1					
ANR	583792	AssignmentExpression	size = porder -> num_bits		583767	2		=			
ANR	583793	Identifier	size		583767	0					
ANR	583794	PtrMemberAccess	porder -> num_bits		583767	1					
ANR	583795	Identifier	porder		583767	0					
ANR	583796	Identifier	num_bits		583767	1					
ANR	583797	IdentifierDeclStatement	gx_ht_bit * bits = porder -> bit_data ;	372:4:13291:13325	583767	3	True				
ANR	583798	IdentifierDecl	* bits = porder -> bit_data		583767	0					
ANR	583799	IdentifierDeclType	gx_ht_bit *		583767	0					
ANR	583800	Identifier	bits		583767	1					
ANR	583801	AssignmentExpression	* bits = porder -> bit_data		583767	2		=			
ANR	583802	Identifier	bits		583767	0					
ANR	583803	PtrMemberAccess	porder -> bit_data		583767	1					
ANR	583804	Identifier	porder		583767	0					
ANR	583805	Identifier	bit_data		583767	1					
ANR	583806	IdentifierDeclStatement	"uint i , j ;"	373:4:13331:13340	583767	4	True				
ANR	583807	IdentifierDecl	i		583767	0					
ANR	583808	IdentifierDeclType	uint		583767	0					
ANR	583809	Identifier	i		583767	1					
ANR	583810	IdentifierDecl	j		583767	1					
ANR	583811	IdentifierDeclType	uint		583767	0					
ANR	583812	Identifier	j		583767	1					
ANR	583813	ExpressionStatement	"gx_sort_ht_order ( bits , size )"	376:4:13409:13437	583767	5	True				
ANR	583814	CallExpression	"gx_sort_ht_order ( bits , size )"		583767	0					
ANR	583815	Callee	gx_sort_ht_order		583767	0					
ANR	583816	Identifier	gx_sort_ht_order		583767	0					
ANR	583817	ArgumentList	bits		583767	1					
ANR	583818	Argument	bits		583767	0					
ANR	583819	Identifier	bits		583767	0					
ANR	583820	Argument	size		583767	1					
ANR	583821	Identifier	size		583767	0					
ANR	583822	ForStatement	"for ( i = 0 , j = 0 ; i < size ; i ++ )"		583767	6					
ANR	583823	ForInit	"i = 0 , j = 0 ;"	379:9:13546:13558	583767	0	True				
ANR	583824	Expression	"i = 0 , j = 0"		583767	0					
ANR	583825	AssignmentExpression	i = 0		583767	0		=			
ANR	583826	Identifier	i		583767	0					
ANR	583827	PrimaryExpression	0		583767	1					
ANR	583828	AssignmentExpression	j = 0		583767	1		=			
ANR	583829	Identifier	j		583767	0					
ANR	583830	PrimaryExpression	0		583767	1					
ANR	583831	Condition	i < size	379:23:13560:13567	583767	1	True				
ANR	583832	RelationalExpression	i < size		583767	0		<			
ANR	583833	Identifier	i		583767	0					
ANR	583834	Identifier	size		583767	1					
ANR	583835	PostIncDecOperationExpression	i ++	379:33:13570:13572	583767	2	True				
ANR	583836	Identifier	i		583767	0					
ANR	583837	IncDec	++		583767	1					
ANR	583838	CompoundStatement		12:38:399:399	583767	3					
ANR	583839	IfStatement	if ( bits [ i ] . mask != j )		583767	0					
ANR	583840	Condition	bits [ i ] . mask != j	380:12:13589:13605	583767	0	True				
ANR	583841	EqualityExpression	bits [ i ] . mask != j		583767	0		!=			
ANR	583842	MemberAccess	bits [ i ] . mask		583767	0					
ANR	583843	ArrayIndexing	bits [ i ]		583767	0					
ANR	583844	Identifier	bits		583767	0					
ANR	583845	Identifier	i		583767	1					
ANR	583846	Identifier	mask		583767	1					
ANR	583847	Identifier	j		583767	1					
ANR	583848	CompoundStatement		13:31:432:432	583767	1					
ANR	583849	ExpressionStatement	"if_debug3 ( 'h' , ""[h]levels[%u..%u] = %u\\n"" , j , ( uint ) bits [ i ] . mask , i )"	381:12:13622:13713	583767	0	True				
ANR	583850	CallExpression	"if_debug3 ( 'h' , ""[h]levels[%u..%u] = %u\\n"" , j , ( uint ) bits [ i ] . mask , i )"		583767	0					
ANR	583851	Callee	if_debug3		583767	0					
ANR	583852	Identifier	if_debug3		583767	0					
ANR	583853	ArgumentList	'h'		583767	1					
ANR	583854	Argument	'h'		583767	0					
ANR	583855	PrimaryExpression	'h'		583767	0					
ANR	583856	Argument	"""[h]levels[%u..%u] = %u\\n"""		583767	1					
ANR	583857	PrimaryExpression	"""[h]levels[%u..%u] = %u\\n"""		583767	0					
ANR	583858	Argument	j		583767	2					
ANR	583859	Identifier	j		583767	0					
ANR	583860	Argument	( uint ) bits [ i ] . mask		583767	3					
ANR	583861	CastExpression	( uint ) bits [ i ] . mask		583767	0					
ANR	583862	CastTarget	uint		583767	0					
ANR	583863	MemberAccess	bits [ i ] . mask		583767	1					
ANR	583864	ArrayIndexing	bits [ i ]		583767	0					
ANR	583865	Identifier	bits		583767	0					
ANR	583866	Identifier	i		583767	1					
ANR	583867	Identifier	mask		583767	1					
ANR	583868	Argument	i		583767	4					
ANR	583869	Identifier	i		583767	0					
ANR	583870	WhileStatement	while ( j < bits [ i ] . mask )		583767	1					
ANR	583871	Condition	j < bits [ i ] . mask	383:19:13734:13749	583767	0	True				
ANR	583872	RelationalExpression	j < bits [ i ] . mask		583767	0		<			
ANR	583873	Identifier	j		583767	0					
ANR	583874	MemberAccess	bits [ i ] . mask		583767	1					
ANR	583875	ArrayIndexing	bits [ i ]		583767	0					
ANR	583876	Identifier	bits		583767	0					
ANR	583877	Identifier	i		583767	1					
ANR	583878	Identifier	mask		583767	1					
ANR	583879	ExpressionStatement	levels [ j ++ ] = i	384:16:13768:13783	583767	1	True				
ANR	583880	AssignmentExpression	levels [ j ++ ] = i		583767	0		=			
ANR	583881	ArrayIndexing	levels [ j ++ ]		583767	0					
ANR	583882	Identifier	levels		583767	0					
ANR	583883	PostIncDecOperationExpression	j ++		583767	1					
ANR	583884	Identifier	j		583767	0					
ANR	583885	IncDec	++		583767	1					
ANR	583886	Identifier	i		583767	1					
ANR	583887	WhileStatement	while ( j < num_levels )		583767	7					
ANR	583888	Condition	j < num_levels	387:11:13812:13825	583767	0	True				
ANR	583889	RelationalExpression	j < num_levels		583767	0		<			
ANR	583890	Identifier	j		583767	0					
ANR	583891	Identifier	num_levels		583767	1					
ANR	583892	ExpressionStatement	levels [ j ++ ] = size	388:8:13836:13854	583767	1	True				
ANR	583893	AssignmentExpression	levels [ j ++ ] = size		583767	0		=			
ANR	583894	ArrayIndexing	levels [ j ++ ]		583767	0					
ANR	583895	Identifier	levels		583767	0					
ANR	583896	PostIncDecOperationExpression	j ++		583767	1					
ANR	583897	Identifier	j		583767	0					
ANR	583898	IncDec	++		583767	1					
ANR	583899	Identifier	size		583767	1					
ANR	583900	ExpressionStatement	gx_ht_construct_bits ( porder )	389:4:13860:13888	583767	8	True				
ANR	583901	CallExpression	gx_ht_construct_bits ( porder )		583767	0					
ANR	583902	Callee	gx_ht_construct_bits		583767	0					
ANR	583903	Identifier	gx_ht_construct_bits		583767	0					
ANR	583904	ArgumentList	porder		583767	1					
ANR	583905	Argument	porder		583767	0					
ANR	583906	Identifier	porder		583767	0					
ANR	583907	ReturnType	void		583767	1					
ANR	583908	Identifier	gx_ht_complete_threshold_order		583767	2					
ANR	583909	ParameterList	gx_ht_order * porder		583767	3					
ANR	583910	Parameter	gx_ht_order * porder	367:31:13153:13172	583767	0	True				
ANR	583911	ParameterType	gx_ht_order *		583767	0					
ANR	583912	Identifier	porder		583767	1					
ANR	583913	CFGEntryNode	ENTRY		583767		True				
ANR	583914	CFGExitNode	EXIT		583767		True				
ANR	583915	Symbol	* bits		583767						
ANR	583916	Symbol	porder -> num_levels		583767						
ANR	583917	Symbol	bits		583767						
ANR	583918	Symbol	i		583767						
ANR	583919	Symbol	j		583767						
ANR	583920	Symbol	bits [ i ] . mask		583767						
ANR	583921	Symbol	porder -> num_bits		583767						
ANR	583922	Symbol	porder		583767						
ANR	583923	Symbol	* levels		583767						
ANR	583924	Symbol	porder -> levels		583767						
ANR	583925	Symbol	porder -> bit_data		583767						
ANR	583926	Symbol	* i		583767						
ANR	583927	Symbol	size		583767						
ANR	583928	Symbol	* porder		583767						
ANR	583929	Symbol	levels		583767						
ANR	583930	Symbol	num_levels		583767						
ANR	583931	Function	gx_ht_construct_threshold_order	391:0:13892:14040							
ANR	583932	FunctionDef	"gx_ht_construct_threshold_order (gx_ht_order * porder , const byte * thresholds)"		583931	0					
ANR	583933	CompoundStatement		393:0:13975:14040	583931	0					
ANR	583934	ReturnStatement	"return porder -> procs -> construct_order ( porder , thresholds ) ;"	394:4:13981:14038	583931	0	True				
ANR	583935	CallExpression	"porder -> procs -> construct_order ( porder , thresholds )"		583931	0					
ANR	583936	Callee	porder -> procs -> construct_order		583931	0					
ANR	583937	PtrMemberAccess	porder -> procs -> construct_order		583931	0					
ANR	583938	PtrMemberAccess	porder -> procs		583931	0					
ANR	583939	Identifier	porder		583931	0					
ANR	583940	Identifier	procs		583931	1					
ANR	583941	Identifier	construct_order		583931	1					
ANR	583942	ArgumentList	porder		583931	1					
ANR	583943	Argument	porder		583931	0					
ANR	583944	Identifier	porder		583931	0					
ANR	583945	Argument	thresholds		583931	1					
ANR	583946	Identifier	thresholds		583931	0					
ANR	583947	ReturnType	int		583931	1					
ANR	583948	Identifier	gx_ht_construct_threshold_order		583931	2					
ANR	583949	ParameterList	"gx_ht_order * porder , const byte * thresholds"		583931	3					
ANR	583950	Parameter	gx_ht_order * porder	392:32:13928:13947	583931	0	True				
ANR	583951	ParameterType	gx_ht_order *		583931	0					
ANR	583952	Identifier	porder		583931	1					
ANR	583953	Parameter	const byte * thresholds	392:54:13950:13972	583931	1	True				
ANR	583954	ParameterType	const byte *		583931	0					
ANR	583955	Identifier	thresholds		583931	1					
ANR	583956	CFGEntryNode	ENTRY		583931		True				
ANR	583957	CFGExitNode	EXIT		583931		True				
ANR	583958	Symbol	porder -> procs -> construct_order		583931						
ANR	583959	Symbol	thresholds		583931						
ANR	583960	Symbol	porder -> procs		583931						
ANR	583961	Symbol	* porder -> procs		583931						
ANR	583962	Symbol	* * porder		583931						
ANR	583963	Symbol	* porder		583931						
ANR	583964	Symbol	porder		583931						
ANR	583965	Function	process_threshold	398:0:14076:14747							
ANR	583966	FunctionDef	"process_threshold (gx_ht_order * porder , gs_gstate * pgs , gs_threshold_halftone * phtp , gs_memory_t * mem)"		583965	0					
ANR	583967	CompoundStatement		401:0:14211:14747	583965	0					
ANR	583968	IdentifierDeclStatement	int code ;	402:4:14217:14225	583965	0	True				
ANR	583969	IdentifierDecl	code		583965	0					
ANR	583970	IdentifierDeclType	int		583965	0					
ANR	583971	Identifier	code		583965	1					
ANR	583972	ExpressionStatement	"porder -> params . M = phtp -> width , porder -> params . N = 0"	404:4:14232:14284	583965	1	True				
ANR	583973	Expression	"porder -> params . M = phtp -> width , porder -> params . N = 0"		583965	0					
ANR	583974	AssignmentExpression	porder -> params . M = phtp -> width		583965	0		=			
ANR	583975	MemberAccess	porder -> params . M		583965	0					
ANR	583976	PtrMemberAccess	porder -> params		583965	0					
ANR	583977	Identifier	porder		583965	0					
ANR	583978	Identifier	params		583965	1					
ANR	583979	Identifier	M		583965	1					
ANR	583980	PtrMemberAccess	phtp -> width		583965	1					
ANR	583981	Identifier	phtp		583965	0					
ANR	583982	Identifier	width		583965	1					
ANR	583983	AssignmentExpression	porder -> params . N = 0		583965	1		=			
ANR	583984	MemberAccess	porder -> params . N		583965	0					
ANR	583985	PtrMemberAccess	porder -> params		583965	0					
ANR	583986	Identifier	porder		583965	0					
ANR	583987	Identifier	params		583965	1					
ANR	583988	Identifier	N		583965	1					
ANR	583989	PrimaryExpression	0		583965	1					
ANR	583990	ExpressionStatement	porder -> params . R = 1	405:4:14290:14310	583965	2	True				
ANR	583991	AssignmentExpression	porder -> params . R = 1		583965	0		=			
ANR	583992	MemberAccess	porder -> params . R		583965	0					
ANR	583993	PtrMemberAccess	porder -> params		583965	0					
ANR	583994	Identifier	porder		583965	0					
ANR	583995	Identifier	params		583965	1					
ANR	583996	Identifier	R		583965	1					
ANR	583997	PrimaryExpression	1		583965	1					
ANR	583998	ExpressionStatement	"porder -> params . M1 = phtp -> height , porder -> params . N1 = 0"	406:4:14316:14371	583965	3	True				
ANR	583999	Expression	"porder -> params . M1 = phtp -> height , porder -> params . N1 = 0"		583965	0					
ANR	584000	AssignmentExpression	porder -> params . M1 = phtp -> height		583965	0		=			
ANR	584001	MemberAccess	porder -> params . M1		583965	0					
ANR	584002	PtrMemberAccess	porder -> params		583965	0					
ANR	584003	Identifier	porder		583965	0					
ANR	584004	Identifier	params		583965	1					
ANR	584005	Identifier	M1		583965	1					
ANR	584006	PtrMemberAccess	phtp -> height		583965	1					
ANR	584007	Identifier	phtp		583965	0					
ANR	584008	Identifier	height		583965	1					
ANR	584009	AssignmentExpression	porder -> params . N1 = 0		583965	1		=			
ANR	584010	MemberAccess	porder -> params . N1		583965	0					
ANR	584011	PtrMemberAccess	porder -> params		583965	0					
ANR	584012	Identifier	porder		583965	0					
ANR	584013	Identifier	params		583965	1					
ANR	584014	Identifier	N1		583965	1					
ANR	584015	PrimaryExpression	0		583965	1					
ANR	584016	ExpressionStatement	porder -> params . R1 = 1	407:4:14377:14398	583965	4	True				
ANR	584017	AssignmentExpression	porder -> params . R1 = 1		583965	0		=			
ANR	584018	MemberAccess	porder -> params . R1		583965	0					
ANR	584019	PtrMemberAccess	porder -> params		583965	0					
ANR	584020	Identifier	porder		583965	0					
ANR	584021	Identifier	params		583965	1					
ANR	584022	Identifier	R1		583965	1					
ANR	584023	PrimaryExpression	1		583965	1					
ANR	584024	ExpressionStatement	"code = gx_ht_alloc_threshold_order ( porder , phtp -> width , phtp -> height , 256 , mem )"	408:4:14404:14522	583965	5	True				
ANR	584025	AssignmentExpression	"code = gx_ht_alloc_threshold_order ( porder , phtp -> width , phtp -> height , 256 , mem )"		583965	0		=			
ANR	584026	Identifier	code		583965	0					
ANR	584027	CallExpression	"gx_ht_alloc_threshold_order ( porder , phtp -> width , phtp -> height , 256 , mem )"		583965	1					
ANR	584028	Callee	gx_ht_alloc_threshold_order		583965	0					
ANR	584029	Identifier	gx_ht_alloc_threshold_order		583965	0					
ANR	584030	ArgumentList	porder		583965	1					
ANR	584031	Argument	porder		583965	0					
ANR	584032	Identifier	porder		583965	0					
ANR	584033	Argument	phtp -> width		583965	1					
ANR	584034	PtrMemberAccess	phtp -> width		583965	0					
ANR	584035	Identifier	phtp		583965	0					
ANR	584036	Identifier	width		583965	1					
ANR	584037	Argument	phtp -> height		583965	2					
ANR	584038	PtrMemberAccess	phtp -> height		583965	0					
ANR	584039	Identifier	phtp		583965	0					
ANR	584040	Identifier	height		583965	1					
ANR	584041	Argument	256		583965	3					
ANR	584042	PrimaryExpression	256		583965	0					
ANR	584043	Argument	mem		583965	4					
ANR	584044	Identifier	mem		583965	0					
ANR	584045	IfStatement	if ( code < 0 )		583965	6					
ANR	584046	Condition	code < 0	410:8:14532:14539	583965	0	True				
ANR	584047	RelationalExpression	code < 0		583965	0		<			
ANR	584048	Identifier	code		583965	0					
ANR	584049	PrimaryExpression	0		583965	1					
ANR	584050	ReturnStatement	return code ;	411:8:14550:14561	583965	1	True				
ANR	584051	Identifier	code		583965	0					
ANR	584052	ExpressionStatement	"gx_ht_construct_threshold_order ( porder , phtp -> thresholds . data )"	412:4:14567:14629	583965	7	True				
ANR	584053	CallExpression	"gx_ht_construct_threshold_order ( porder , phtp -> thresholds . data )"		583965	0					
ANR	584054	Callee	gx_ht_construct_threshold_order		583965	0					
ANR	584055	Identifier	gx_ht_construct_threshold_order		583965	0					
ANR	584056	ArgumentList	porder		583965	1					
ANR	584057	Argument	porder		583965	0					
ANR	584058	Identifier	porder		583965	0					
ANR	584059	Argument	phtp -> thresholds . data		583965	1					
ANR	584060	MemberAccess	phtp -> thresholds . data		583965	0					
ANR	584061	PtrMemberAccess	phtp -> thresholds		583965	0					
ANR	584062	Identifier	phtp		583965	0					
ANR	584063	Identifier	thresholds		583965	1					
ANR	584064	Identifier	data		583965	1					
ANR	584065	ReturnStatement	"return process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem ) ;"	413:4:14635:14745	583965	8	True				
ANR	584066	CallExpression	"process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem )"		583965	0					
ANR	584067	Callee	process_transfer		583965	0					
ANR	584068	Identifier	process_transfer		583965	0					
ANR	584069	ArgumentList	porder		583965	1					
ANR	584070	Argument	porder		583965	0					
ANR	584071	Identifier	porder		583965	0					
ANR	584072	Argument	pgs		583965	1					
ANR	584073	Identifier	pgs		583965	0					
ANR	584074	Argument	phtp -> transfer		583965	2					
ANR	584075	PtrMemberAccess	phtp -> transfer		583965	0					
ANR	584076	Identifier	phtp		583965	0					
ANR	584077	Identifier	transfer		583965	1					
ANR	584078	Argument	& phtp -> transfer_closure		583965	3					
ANR	584079	UnaryOperationExpression	& phtp -> transfer_closure		583965	0					
ANR	584080	UnaryOperator	&		583965	0					
ANR	584081	PtrMemberAccess	phtp -> transfer_closure		583965	1					
ANR	584082	Identifier	phtp		583965	0					
ANR	584083	Identifier	transfer_closure		583965	1					
ANR	584084	Argument	mem		583965	4					
ANR	584085	Identifier	mem		583965	0					
ANR	584086	ReturnType	static int		583965	1					
ANR	584087	Identifier	process_threshold		583965	2					
ANR	584088	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_threshold_halftone * phtp , gs_memory_t * mem"		583965	3					
ANR	584089	Parameter	gx_ht_order * porder	399:18:14105:14124	583965	0	True				
ANR	584090	ParameterType	gx_ht_order *		583965	0					
ANR	584091	Identifier	porder		583965	1					
ANR	584092	Parameter	gs_gstate * pgs	399:40:14127:14141	583965	1	True				
ANR	584093	ParameterType	gs_gstate *		583965	0					
ANR	584094	Identifier	pgs		583965	1					
ANR	584095	Parameter	gs_threshold_halftone * phtp	400:18:14162:14189	583965	2	True				
ANR	584096	ParameterType	gs_threshold_halftone *		583965	0					
ANR	584097	Identifier	phtp		583965	1					
ANR	584098	Parameter	gs_memory_t * mem	400:48:14192:14208	583965	3	True				
ANR	584099	ParameterType	gs_memory_t *		583965	0					
ANR	584100	Identifier	mem		583965	1					
ANR	584101	CFGEntryNode	ENTRY		583965		True				
ANR	584102	CFGExitNode	EXIT		583965		True				
ANR	584103	Symbol	phtp		583965						
ANR	584104	Symbol	code		583965						
ANR	584105	Symbol	phtp -> height		583965						
ANR	584106	Symbol	porder -> params . R		583965						
ANR	584107	Symbol	* phtp		583965						
ANR	584108	Symbol	porder		583965						
ANR	584109	Symbol	porder -> params . R1		583965						
ANR	584110	Symbol	gx_ht_alloc_threshold_order		583965						
ANR	584111	Symbol	phtp -> thresholds		583965						
ANR	584112	Symbol	phtp -> transfer		583965						
ANR	584113	Symbol	process_transfer		583965						
ANR	584114	Symbol	porder -> params . N1		583965						
ANR	584115	Symbol	porder -> params . M1		583965						
ANR	584116	Symbol	mem		583965						
ANR	584117	Symbol	porder -> params		583965						
ANR	584118	Symbol	phtp -> thresholds . data		583965						
ANR	584119	Symbol	& phtp -> transfer_closure		583965						
ANR	584120	Symbol	porder -> params . N		583965						
ANR	584121	Symbol	porder -> params . M		583965						
ANR	584122	Symbol	pgs		583965						
ANR	584123	Symbol	* porder		583965						
ANR	584124	Symbol	phtp -> width		583965						
ANR	584125	Function	process_threshold2	418:0:14793:18587							
ANR	584126	FunctionDef	"process_threshold2 (gx_ht_order * porder , gs_gstate * pgs , gs_threshold2_halftone * phtp , gs_memory_t * mem)"		584125	0					
ANR	584127	CompoundStatement		421:0:14931:18587	584125	0					
ANR	584128	IdentifierDeclStatement	int code ;	422:4:14937:14945	584125	0	True				
ANR	584129	IdentifierDecl	code		584125	0					
ANR	584130	IdentifierDeclType	int		584125	0					
ANR	584131	Identifier	code		584125	1					
ANR	584132	Statement	define	429:1:15257:15262	584125	1	True				
ANR	584133	Statement	LOG2_MAX_HT_LEVELS	429:8:15264:15281	584125	2	True				
ANR	584134	Statement	14	429:27:15283:15284	584125	3	True				
ANR	584135	Statement	define	430:1:15287:15292	584125	4	True				
ANR	584136	Statement	MAX_HT_LEVELS	430:8:15294:15306	584125	5	True				
ANR	584137	Statement	(	430:22:15308:15308	584125	6	True				
ANR	584138	Statement	1	430:23:15309:15309	584125	7	True				
ANR	584139	Statement	<<	430:25:15311:15312	584125	8	True				
ANR	584140	Statement	LOG2_MAX_HT_LEVELS	430:28:15314:15331	584125	9	True				
ANR	584141	Statement	)	430:46:15332:15332	584125	10	True				
ANR	584142	IdentifierDeclStatement	int bps = phtp -> bytes_per_sample ;	431:4:15338:15370	584125	11	True				
ANR	584143	IdentifierDecl	bps = phtp -> bytes_per_sample		584125	0					
ANR	584144	IdentifierDeclType	int		584125	0					
ANR	584145	Identifier	bps		584125	1					
ANR	584146	AssignmentExpression	bps = phtp -> bytes_per_sample		584125	2		=			
ANR	584147	Identifier	bps		584125	0					
ANR	584148	PtrMemberAccess	phtp -> bytes_per_sample		584125	1					
ANR	584149	Identifier	phtp		584125	0					
ANR	584150	Identifier	bytes_per_sample		584125	1					
ANR	584151	IdentifierDeclStatement	const byte * data = phtp -> thresholds . data ;	432:4:15376:15416	584125	12	True				
ANR	584152	IdentifierDecl	* data = phtp -> thresholds . data		584125	0					
ANR	584153	IdentifierDeclType	const byte *		584125	0					
ANR	584154	Identifier	data		584125	1					
ANR	584155	AssignmentExpression	* data = phtp -> thresholds . data		584125	2		=			
ANR	584156	Identifier	data		584125	0					
ANR	584157	MemberAccess	phtp -> thresholds . data		584125	1					
ANR	584158	PtrMemberAccess	phtp -> thresholds		584125	0					
ANR	584159	Identifier	phtp		584125	0					
ANR	584160	Identifier	thresholds		584125	1					
ANR	584161	Identifier	data		584125	1					
ANR	584162	IdentifierDeclStatement	"const int w1 = phtp -> width , h1 = phtp -> height , size1 = w1 * h1 ;"	433:4:15422:15484	584125	13	True				
ANR	584163	IdentifierDecl	w1 = phtp -> width		584125	0					
ANR	584164	IdentifierDeclType	const int		584125	0					
ANR	584165	Identifier	w1		584125	1					
ANR	584166	AssignmentExpression	w1 = phtp -> width		584125	2		=			
ANR	584167	Identifier	w1		584125	0					
ANR	584168	PtrMemberAccess	phtp -> width		584125	1					
ANR	584169	Identifier	phtp		584125	0					
ANR	584170	Identifier	width		584125	1					
ANR	584171	IdentifierDecl	h1 = phtp -> height		584125	1					
ANR	584172	IdentifierDeclType	const int		584125	0					
ANR	584173	Identifier	h1		584125	1					
ANR	584174	AssignmentExpression	h1 = phtp -> height		584125	2		=			
ANR	584175	Identifier	h1		584125	0					
ANR	584176	PtrMemberAccess	phtp -> height		584125	1					
ANR	584177	Identifier	phtp		584125	0					
ANR	584178	Identifier	height		584125	1					
ANR	584179	IdentifierDecl	size1 = w1 * h1		584125	2					
ANR	584180	IdentifierDeclType	const int		584125	0					
ANR	584181	Identifier	size1		584125	1					
ANR	584182	AssignmentExpression	size1 = w1 * h1		584125	2		=			
ANR	584183	Identifier	size1		584125	0					
ANR	584184	MultiplicativeExpression	w1 * h1		584125	1		*			
ANR	584185	Identifier	w1		584125	0					
ANR	584186	Identifier	h1		584125	1					
ANR	584187	IdentifierDeclStatement	"const int w2 = phtp -> width2 , h2 = phtp -> height2 , size2 = w2 * h2 ;"	434:4:15490:15554	584125	14	True				
ANR	584188	IdentifierDecl	w2 = phtp -> width2		584125	0					
ANR	584189	IdentifierDeclType	const int		584125	0					
ANR	584190	Identifier	w2		584125	1					
ANR	584191	AssignmentExpression	w2 = phtp -> width2		584125	2		=			
ANR	584192	Identifier	w2		584125	0					
ANR	584193	PtrMemberAccess	phtp -> width2		584125	1					
ANR	584194	Identifier	phtp		584125	0					
ANR	584195	Identifier	width2		584125	1					
ANR	584196	IdentifierDecl	h2 = phtp -> height2		584125	1					
ANR	584197	IdentifierDeclType	const int		584125	0					
ANR	584198	Identifier	h2		584125	1					
ANR	584199	AssignmentExpression	h2 = phtp -> height2		584125	2		=			
ANR	584200	Identifier	h2		584125	0					
ANR	584201	PtrMemberAccess	phtp -> height2		584125	1					
ANR	584202	Identifier	phtp		584125	0					
ANR	584203	Identifier	height2		584125	1					
ANR	584204	IdentifierDecl	size2 = w2 * h2		584125	2					
ANR	584205	IdentifierDeclType	const int		584125	0					
ANR	584206	Identifier	size2		584125	1					
ANR	584207	AssignmentExpression	size2 = w2 * h2		584125	2		=			
ANR	584208	Identifier	size2		584125	0					
ANR	584209	MultiplicativeExpression	w2 * h2		584125	1		*			
ANR	584210	Identifier	w2		584125	0					
ANR	584211	Identifier	h2		584125	1					
ANR	584212	IdentifierDeclStatement	const uint size = size1 + size2 ;	435:4:15560:15591	584125	15	True				
ANR	584213	IdentifierDecl	size = size1 + size2		584125	0					
ANR	584214	IdentifierDeclType	const uint		584125	0					
ANR	584215	Identifier	size		584125	1					
ANR	584216	AssignmentExpression	size = size1 + size2		584125	2		=			
ANR	584217	Identifier	size		584125	0					
ANR	584218	AdditiveExpression	size1 + size2		584125	1		+			
ANR	584219	Identifier	size1		584125	0					
ANR	584220	Identifier	size2		584125	1					
ANR	584221	IdentifierDeclStatement	"const int d = ( h2 == 0 ? h1 : igcd ( h1 , h2 ) ) ;"	436:4:15597:15640	584125	16	True				
ANR	584222	IdentifierDecl	"d = ( h2 == 0 ? h1 : igcd ( h1 , h2 ) )"		584125	0					
ANR	584223	IdentifierDeclType	const int		584125	0					
ANR	584224	Identifier	d		584125	1					
ANR	584225	AssignmentExpression	"d = ( h2 == 0 ? h1 : igcd ( h1 , h2 ) )"		584125	2		=			
ANR	584226	Identifier	d		584125	0					
ANR	584227	ConditionalExpression	"h2 == 0 ? h1 : igcd ( h1 , h2 )"		584125	1					
ANR	584228	Condition	h2 == 0		584125	0					
ANR	584229	EqualityExpression	h2 == 0		584125	0		==			
ANR	584230	Identifier	h2		584125	0					
ANR	584231	PrimaryExpression	0		584125	1					
ANR	584232	Identifier	h1		584125	1					
ANR	584233	CallExpression	"igcd ( h1 , h2 )"		584125	2					
ANR	584234	Callee	igcd		584125	0					
ANR	584235	Identifier	igcd		584125	0					
ANR	584236	ArgumentList	h1		584125	1					
ANR	584237	Argument	h1		584125	0					
ANR	584238	Identifier	h1		584125	0					
ANR	584239	Argument	h2		584125	1					
ANR	584240	Identifier	h2		584125	0					
ANR	584241	IdentifierDeclStatement	const int sod = size / d ;	437:4:15646:15670	584125	17	True				
ANR	584242	IdentifierDecl	sod = size / d		584125	0					
ANR	584243	IdentifierDeclType	const int		584125	0					
ANR	584244	Identifier	sod		584125	1					
ANR	584245	AssignmentExpression	sod = size / d		584125	2		=			
ANR	584246	Identifier	sod		584125	0					
ANR	584247	MultiplicativeExpression	size / d		584125	1		/			
ANR	584248	Identifier	size		584125	0					
ANR	584249	Identifier	d		584125	1					
ANR	584250	IdentifierDeclStatement	uint num_levels ;	438:4:15676:15691	584125	18	True				
ANR	584251	IdentifierDecl	num_levels		584125	0					
ANR	584252	IdentifierDeclType	uint		584125	0					
ANR	584253	Identifier	num_levels		584125	1					
ANR	584254	IdentifierDeclStatement	uint i ;	439:4:15697:15703	584125	19	True				
ANR	584255	IdentifierDecl	i		584125	0					
ANR	584256	IdentifierDeclType	uint		584125	0					
ANR	584257	Identifier	i		584125	1					
ANR	584258	IdentifierDeclStatement	int rshift = 0 ;	440:4:15709:15723	584125	20	True				
ANR	584259	IdentifierDecl	rshift = 0		584125	0					
ANR	584260	IdentifierDeclType	int		584125	0					
ANR	584261	Identifier	rshift		584125	1					
ANR	584262	AssignmentExpression	rshift = 0		584125	2		=			
ANR	584263	Identifier	rshift		584125	0					
ANR	584264	PrimaryExpression	0		584125	1					
ANR	584265	IdentifierDeclStatement	int shift ;	441:4:15729:15738	584125	21	True				
ANR	584266	IdentifierDecl	shift		584125	0					
ANR	584267	IdentifierDeclType	int		584125	0					
ANR	584268	Identifier	shift		584125	1					
ANR	584269	CompoundStatement		24:8:823:849	584125	22					
ANR	584270	IdentifierDeclStatement	"uint mask = 0 , max_thr = 0 ;"	444:8:15755:15781	584125	0	True				
ANR	584271	IdentifierDecl	mask = 0		584125	0					
ANR	584272	IdentifierDeclType	uint		584125	0					
ANR	584273	Identifier	mask		584125	1					
ANR	584274	AssignmentExpression	mask = 0		584125	2		=			
ANR	584275	Identifier	mask		584125	0					
ANR	584276	PrimaryExpression	0		584125	1					
ANR	584277	IdentifierDecl	max_thr = 0		584125	1					
ANR	584278	IdentifierDeclType	uint		584125	0					
ANR	584279	Identifier	max_thr		584125	1					
ANR	584280	AssignmentExpression	max_thr = 0		584125	2		=			
ANR	584281	Identifier	max_thr		584125	0					
ANR	584282	PrimaryExpression	0		584125	1					
ANR	584283	ForStatement	for ( i = 0 ; i < size ; ++ i )		584125	1					
ANR	584284	ForInit	i = 0 ;	446:13:15797:15802	584125	0	True				
ANR	584285	AssignmentExpression	i = 0		584125	0		=			
ANR	584286	Identifier	i		584125	0					
ANR	584287	PrimaryExpression	0		584125	1					
ANR	584288	Condition	i < size	446:20:15804:15811	584125	1	True				
ANR	584289	RelationalExpression	i < size		584125	0		<			
ANR	584290	Identifier	i		584125	0					
ANR	584291	Identifier	size		584125	1					
ANR	584292	UnaryExpression	++ i	446:30:15814:15816	584125	2	True				
ANR	584293	IncDec	++		584125	0					
ANR	584294	Identifier	i		584125	1					
ANR	584295	CompoundStatement		27:12:901:987	584125	3					
ANR	584296	IdentifierDeclStatement	uint thr = ( bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ] ) ;	447:12:15833:15919	584125	0	True				
ANR	584297	IdentifierDecl	thr = ( bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ] )		584125	0					
ANR	584298	IdentifierDeclType	uint		584125	0					
ANR	584299	Identifier	thr		584125	1					
ANR	584300	AssignmentExpression	thr = ( bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ] )		584125	2		=			
ANR	584301	Identifier	thr		584125	0					
ANR	584302	ConditionalExpression	bps == 1 ? data [ i ] : ( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ]		584125	1					
ANR	584303	Condition	bps == 1		584125	0					
ANR	584304	EqualityExpression	bps == 1		584125	0		==			
ANR	584305	Identifier	bps		584125	0					
ANR	584306	PrimaryExpression	1		584125	1					
ANR	584307	ArrayIndexing	data [ i ]		584125	1					
ANR	584308	Identifier	data		584125	0					
ANR	584309	Identifier	i		584125	1					
ANR	584310	AdditiveExpression	( data [ i * 2 ] << 8 ) + data [ i * 2 + 1 ]		584125	2		+			
ANR	584311	ShiftExpression	data [ i * 2 ] << 8		584125	0		<<			
ANR	584312	ArrayIndexing	data [ i * 2 ]		584125	0					
ANR	584313	Identifier	data		584125	0					
ANR	584314	MultiplicativeExpression	i * 2		584125	1		*			
ANR	584315	Identifier	i		584125	0					
ANR	584316	PrimaryExpression	2		584125	1					
ANR	584317	PrimaryExpression	8		584125	1					
ANR	584318	ArrayIndexing	data [ i * 2 + 1 ]		584125	1					
ANR	584319	Identifier	data		584125	0					
ANR	584320	AdditiveExpression	i * 2 + 1		584125	1		+			
ANR	584321	MultiplicativeExpression	i * 2		584125	0		*			
ANR	584322	Identifier	i		584125	0					
ANR	584323	PrimaryExpression	2		584125	1					
ANR	584324	PrimaryExpression	1		584125	1					
ANR	584325	ExpressionStatement	mask |= thr	450:12:15934:15945	584125	1	True				
ANR	584326	AssignmentExpression	mask |= thr		584125	0		|=			
ANR	584327	Identifier	mask		584125	0					
ANR	584328	Identifier	thr		584125	1					
ANR	584329	ExpressionStatement	"max_thr = max ( max_thr , thr )"	451:12:15959:15986	584125	2	True				
ANR	584330	AssignmentExpression	"max_thr = max ( max_thr , thr )"		584125	0		=			
ANR	584331	Identifier	max_thr		584125	0					
ANR	584332	CallExpression	"max ( max_thr , thr )"		584125	1					
ANR	584333	Callee	max		584125	0					
ANR	584334	Identifier	max		584125	0					
ANR	584335	ArgumentList	max_thr		584125	1					
ANR	584336	Argument	max_thr		584125	0					
ANR	584337	Identifier	max_thr		584125	0					
ANR	584338	Argument	thr		584125	1					
ANR	584339	Identifier	thr		584125	0					
ANR	584340	IfStatement	if ( mask == 0 )		584125	2					
ANR	584341	Condition	mask == 0	453:12:16010:16018	584125	0	True				
ANR	584342	EqualityExpression	mask == 0		584125	0		==			
ANR	584343	Identifier	mask		584125	0					
ANR	584344	PrimaryExpression	0		584125	1					
ANR	584345	ExpressionStatement	"mask = 1 , max_thr = 1"	454:12:16033:16054	584125	1	True				
ANR	584346	Expression	"mask = 1 , max_thr = 1"		584125	0					
ANR	584347	AssignmentExpression	mask = 1		584125	0		=			
ANR	584348	Identifier	mask		584125	0					
ANR	584349	PrimaryExpression	1		584125	1					
ANR	584350	AssignmentExpression	max_thr = 1		584125	1		=			
ANR	584351	Identifier	max_thr		584125	0					
ANR	584352	PrimaryExpression	1		584125	1					
ANR	584353	WhileStatement	while ( ! ( mask & 1 ) || max_thr > MAX_HT_LEVELS )		584125	3					
ANR	584354	Condition	! ( mask & 1 ) || max_thr > MAX_HT_LEVELS	455:15:16071:16108	584125	0	True				
ANR	584355	OrExpression	! ( mask & 1 ) || max_thr > MAX_HT_LEVELS		584125	0		||			
ANR	584356	UnaryOperationExpression	! ( mask & 1 )		584125	0					
ANR	584357	UnaryOperator	!		584125	0					
ANR	584358	BitAndExpression	mask & 1		584125	1		&			
ANR	584359	Identifier	mask		584125	0					
ANR	584360	PrimaryExpression	1		584125	1					
ANR	584361	RelationalExpression	max_thr > MAX_HT_LEVELS		584125	1		>			
ANR	584362	Identifier	max_thr		584125	0					
ANR	584363	Identifier	MAX_HT_LEVELS		584125	1					
ANR	584364	ExpressionStatement	"mask >>= 1 , max_thr >>= 1 , rshift ++"	456:12:16123:16158	584125	1	True				
ANR	584365	Expression	"mask >>= 1 , max_thr >>= 1 , rshift ++"		584125	0					
ANR	584366	AssignmentExpression	mask >>= 1		584125	0		>>=			
ANR	584367	Identifier	mask		584125	0					
ANR	584368	PrimaryExpression	1		584125	1					
ANR	584369	Expression	"max_thr >>= 1 , rshift ++"		584125	1					
ANR	584370	AssignmentExpression	max_thr >>= 1		584125	0		>>=			
ANR	584371	Identifier	max_thr		584125	0					
ANR	584372	PrimaryExpression	1		584125	1					
ANR	584373	PostIncDecOperationExpression	rshift ++		584125	1					
ANR	584374	Identifier	rshift		584125	0					
ANR	584375	IncDec	++		584125	1					
ANR	584376	ExpressionStatement	num_levels = max_thr + 1	457:8:16168:16192	584125	4	True				
ANR	584377	AssignmentExpression	num_levels = max_thr + 1		584125	0		=			
ANR	584378	Identifier	num_levels		584125	0					
ANR	584379	AdditiveExpression	max_thr + 1		584125	1		+			
ANR	584380	Identifier	max_thr		584125	0					
ANR	584381	PrimaryExpression	1		584125	1					
ANR	584382	ExpressionStatement	"porder -> params . M = sod , porder -> params . N = d"	464:4:16373:16417	584125	23	True				
ANR	584383	Expression	"porder -> params . M = sod , porder -> params . N = d"		584125	0					
ANR	584384	AssignmentExpression	porder -> params . M = sod		584125	0		=			
ANR	584385	MemberAccess	porder -> params . M		584125	0					
ANR	584386	PtrMemberAccess	porder -> params		584125	0					
ANR	584387	Identifier	porder		584125	0					
ANR	584388	Identifier	params		584125	1					
ANR	584389	Identifier	M		584125	1					
ANR	584390	Identifier	sod		584125	1					
ANR	584391	AssignmentExpression	porder -> params . N = d		584125	1		=			
ANR	584392	MemberAccess	porder -> params . N		584125	0					
ANR	584393	PtrMemberAccess	porder -> params		584125	0					
ANR	584394	Identifier	porder		584125	0					
ANR	584395	Identifier	params		584125	1					
ANR	584396	Identifier	N		584125	1					
ANR	584397	Identifier	d		584125	1					
ANR	584398	ExpressionStatement	porder -> params . R = 1	465:4:16423:16443	584125	24	True				
ANR	584399	AssignmentExpression	porder -> params . R = 1		584125	0		=			
ANR	584400	MemberAccess	porder -> params . R		584125	0					
ANR	584401	PtrMemberAccess	porder -> params		584125	0					
ANR	584402	Identifier	porder		584125	0					
ANR	584403	Identifier	params		584125	1					
ANR	584404	Identifier	R		584125	1					
ANR	584405	PrimaryExpression	1		584125	1					
ANR	584406	ExpressionStatement	"porder -> params . M1 = d , porder -> params . N1 = sod"	466:4:16449:16495	584125	25	True				
ANR	584407	Expression	"porder -> params . M1 = d , porder -> params . N1 = sod"		584125	0					
ANR	584408	AssignmentExpression	porder -> params . M1 = d		584125	0		=			
ANR	584409	MemberAccess	porder -> params . M1		584125	0					
ANR	584410	PtrMemberAccess	porder -> params		584125	0					
ANR	584411	Identifier	porder		584125	0					
ANR	584412	Identifier	params		584125	1					
ANR	584413	Identifier	M1		584125	1					
ANR	584414	Identifier	d		584125	1					
ANR	584415	AssignmentExpression	porder -> params . N1 = sod		584125	1		=			
ANR	584416	MemberAccess	porder -> params . N1		584125	0					
ANR	584417	PtrMemberAccess	porder -> params		584125	0					
ANR	584418	Identifier	porder		584125	0					
ANR	584419	Identifier	params		584125	1					
ANR	584420	Identifier	N1		584125	1					
ANR	584421	Identifier	sod		584125	1					
ANR	584422	ExpressionStatement	porder -> params . R1 = 1	467:4:16501:16522	584125	26	True				
ANR	584423	AssignmentExpression	porder -> params . R1 = 1		584125	0		=			
ANR	584424	MemberAccess	porder -> params . R1		584125	0					
ANR	584425	PtrMemberAccess	porder -> params		584125	0					
ANR	584426	Identifier	porder		584125	0					
ANR	584427	Identifier	params		584125	1					
ANR	584428	Identifier	R1		584125	1					
ANR	584429	PrimaryExpression	1		584125	1					
ANR	584430	ExpressionStatement	shift = 0	472:4:16663:16672	584125	27	True				
ANR	584431	AssignmentExpression	shift = 0		584125	0		=			
ANR	584432	Identifier	shift		584125	0					
ANR	584433	PrimaryExpression	0		584125	1					
ANR	584434	CompoundStatement		54:8:1756:1772	584125	28					
ANR	584435	IdentifierDeclStatement	"int x = 0 , y = 0 ;"	474:8:16688:16704	584125	0	True				
ANR	584436	IdentifierDecl	x = 0		584125	0					
ANR	584437	IdentifierDeclType	int		584125	0					
ANR	584438	Identifier	x		584125	1					
ANR	584439	AssignmentExpression	x = 0		584125	2		=			
ANR	584440	Identifier	x		584125	0					
ANR	584441	PrimaryExpression	0		584125	1					
ANR	584442	IdentifierDecl	y = 0		584125	1					
ANR	584443	IdentifierDeclType	int		584125	0					
ANR	584444	Identifier	y		584125	1					
ANR	584445	AssignmentExpression	y = 0		584125	2		=			
ANR	584446	Identifier	y		584125	0					
ANR	584447	PrimaryExpression	0		584125	1					
ANR	584448	DoStatement	do		584125	1					
ANR	584449	CompoundStatement		56:11:1786:1786	584125	0					
ANR	584450	IfStatement	if ( y < h1 )		584125	0					
ANR	584451	Condition	y < h1	477:16:16736:16741	584125	0	True				
ANR	584452	RelationalExpression	y < h1		584125	0		<			
ANR	584453	Identifier	y		584125	0					
ANR	584454	Identifier	h1		584125	1					
ANR	584455	ExpressionStatement	"x += w1 , y += h2"	478:16:16760:16776	584125	1	True				
ANR	584456	Expression	"x += w1 , y += h2"		584125	0					
ANR	584457	AssignmentExpression	x += w1		584125	0		+=			
ANR	584458	Identifier	x		584125	0					
ANR	584459	Identifier	w1		584125	1					
ANR	584460	AssignmentExpression	y += h2		584125	1		+=			
ANR	584461	Identifier	y		584125	0					
ANR	584462	Identifier	h2		584125	1					
ANR	584463	ElseStatement	else		584125	0					
ANR	584464	ExpressionStatement	"x += w2 , y -= h1"	480:16:16811:16827	584125	0	True				
ANR	584465	Expression	"x += w2 , y -= h1"		584125	0					
ANR	584466	AssignmentExpression	x += w2		584125	0		+=			
ANR	584467	Identifier	x		584125	0					
ANR	584468	Identifier	w2		584125	1					
ANR	584469	AssignmentExpression	y -= h1		584125	1		-=			
ANR	584470	Identifier	y		584125	0					
ANR	584471	Identifier	h1		584125	1					
ANR	584472	Condition	y > d	481:17:16846:16850	584125	1	True				
ANR	584473	RelationalExpression	y > d		584125	0		>			
ANR	584474	Identifier	y		584125	0					
ANR	584475	Identifier	d		584125	1					
ANR	584476	IfStatement	if ( y )		584125	2					
ANR	584477	Condition	y	482:12:16866:16866	584125	0	True				
ANR	584478	Identifier	y		584125	0					
ANR	584479	ExpressionStatement	shift = x	483:12:16881:16890	584125	1	True				
ANR	584480	AssignmentExpression	shift = x		584125	0		=			
ANR	584481	Identifier	shift		584125	0					
ANR	584482	Identifier	x		584125	1					
ANR	584483	ExpressionStatement	"code = gx_ht_alloc_ht_order ( porder , sod , d , num_levels , size , shift , & ht_order_procs_default , mem )"	485:4:16902:17032	584125	29	True				
ANR	584484	AssignmentExpression	"code = gx_ht_alloc_ht_order ( porder , sod , d , num_levels , size , shift , & ht_order_procs_default , mem )"		584125	0		=			
ANR	584485	Identifier	code		584125	0					
ANR	584486	CallExpression	"gx_ht_alloc_ht_order ( porder , sod , d , num_levels , size , shift , & ht_order_procs_default , mem )"		584125	1					
ANR	584487	Callee	gx_ht_alloc_ht_order		584125	0					
ANR	584488	Identifier	gx_ht_alloc_ht_order		584125	0					
ANR	584489	ArgumentList	porder		584125	1					
ANR	584490	Argument	porder		584125	0					
ANR	584491	Identifier	porder		584125	0					
ANR	584492	Argument	sod		584125	1					
ANR	584493	Identifier	sod		584125	0					
ANR	584494	Argument	d		584125	2					
ANR	584495	Identifier	d		584125	0					
ANR	584496	Argument	num_levels		584125	3					
ANR	584497	Identifier	num_levels		584125	0					
ANR	584498	Argument	size		584125	4					
ANR	584499	Identifier	size		584125	0					
ANR	584500	Argument	shift		584125	5					
ANR	584501	Identifier	shift		584125	0					
ANR	584502	Argument	& ht_order_procs_default		584125	6					
ANR	584503	UnaryOperationExpression	& ht_order_procs_default		584125	0					
ANR	584504	UnaryOperator	&		584125	0					
ANR	584505	Identifier	ht_order_procs_default		584125	1					
ANR	584506	Argument	mem		584125	7					
ANR	584507	Identifier	mem		584125	0					
ANR	584508	IfStatement	if ( code < 0 )		584125	30					
ANR	584509	Condition	code < 0	487:8:17042:17049	584125	0	True				
ANR	584510	RelationalExpression	code < 0		584125	0		<			
ANR	584511	Identifier	code		584125	0					
ANR	584512	PrimaryExpression	0		584125	1					
ANR	584513	ReturnStatement	return code ;	488:8:17060:17071	584125	1	True				
ANR	584514	Identifier	code		584125	0					
ANR	584515	CompoundStatement		71:8:2212:2223	584125	31					
ANR	584516	IdentifierDeclStatement	gx_ht_bit * bits = ( gx_ht_bit * ) porder -> bit_data ;	490:8:17087:17134	584125	0	True				
ANR	584517	IdentifierDecl	* bits = ( gx_ht_bit * ) porder -> bit_data		584125	0					
ANR	584518	IdentifierDeclType	gx_ht_bit *		584125	0					
ANR	584519	Identifier	bits		584125	1					
ANR	584520	AssignmentExpression	* bits = ( gx_ht_bit * ) porder -> bit_data		584125	2		=			
ANR	584521	Identifier	bits		584125	0					
ANR	584522	CastExpression	( gx_ht_bit * ) porder -> bit_data		584125	1					
ANR	584523	CastTarget	gx_ht_bit *		584125	0					
ANR	584524	PtrMemberAccess	porder -> bit_data		584125	1					
ANR	584525	Identifier	porder		584125	0					
ANR	584526	Identifier	bit_data		584125	1					
ANR	584527	IdentifierDeclStatement	"int row , di ;"	491:8:17144:17155	584125	1	True				
ANR	584528	IdentifierDecl	row		584125	0					
ANR	584529	IdentifierDeclType	int		584125	0					
ANR	584530	Identifier	row		584125	1					
ANR	584531	IdentifierDecl	di		584125	1					
ANR	584532	IdentifierDeclType	int		584125	0					
ANR	584533	Identifier	di		584125	1					
ANR	584534	ExpressionStatement	"if_debug7m ( 'h' , mem , ""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"" , w1 , h1 , w2 , h2 , sod , d , shift )"	493:8:17166:17298	584125	2	True				
ANR	584535	CallExpression	"if_debug7m ( 'h' , mem , ""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"" , w1 , h1 , w2 , h2 , sod , d , shift )"		584125	0					
ANR	584536	Callee	if_debug7m		584125	0					
ANR	584537	Identifier	if_debug7m		584125	0					
ANR	584538	ArgumentList	'h'		584125	1					
ANR	584539	Argument	'h'		584125	0					
ANR	584540	PrimaryExpression	'h'		584125	0					
ANR	584541	Argument	mem		584125	1					
ANR	584542	Identifier	mem		584125	0					
ANR	584543	Argument	"""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"""		584125	2					
ANR	584544	PrimaryExpression	"""[h]rect1=(%d,%d), rect2=(%d,%d), strip=(%d,%d), shift=%d\\n"""		584125	0					
ANR	584545	Argument	w1		584125	3					
ANR	584546	Identifier	w1		584125	0					
ANR	584547	Argument	h1		584125	4					
ANR	584548	Identifier	h1		584125	0					
ANR	584549	Argument	w2		584125	5					
ANR	584550	Identifier	w2		584125	0					
ANR	584551	Argument	h2		584125	6					
ANR	584552	Identifier	h2		584125	0					
ANR	584553	Argument	sod		584125	7					
ANR	584554	Identifier	sod		584125	0					
ANR	584555	Argument	d		584125	8					
ANR	584556	Identifier	d		584125	0					
ANR	584557	Argument	shift		584125	9					
ANR	584558	Identifier	shift		584125	0					
ANR	584559	ForStatement	"for ( row = 0 , di = 0 ; row < d ; ++ row )"		584125	3					
ANR	584560	ForInit	"row = 0 , di = 0 ;"	495:13:17313:17328	584125	0	True				
ANR	584561	Expression	"row = 0 , di = 0"		584125	0					
ANR	584562	AssignmentExpression	row = 0		584125	0		=			
ANR	584563	Identifier	row		584125	0					
ANR	584564	PrimaryExpression	0		584125	1					
ANR	584565	AssignmentExpression	di = 0		584125	1		=			
ANR	584566	Identifier	di		584125	0					
ANR	584567	PrimaryExpression	0		584125	1					
ANR	584568	Condition	row < d	495:30:17330:17336	584125	1	True				
ANR	584569	RelationalExpression	row < d		584125	0		<			
ANR	584570	Identifier	row		584125	0					
ANR	584571	Identifier	d		584125	1					
ANR	584572	UnaryExpression	++ row	495:39:17339:17343	584125	2	True				
ANR	584573	IncDec	++		584125	0					
ANR	584574	Identifier	row		584125	1					
ANR	584575	CompoundStatement		78:12:2528:2533	584125	3					
ANR	584576	IdentifierDeclStatement	"int dx , sy = row ;"	497:12:17409:17425	584125	0	True				
ANR	584577	IdentifierDecl	dx		584125	0					
ANR	584578	IdentifierDeclType	int		584125	0					
ANR	584579	Identifier	dx		584125	1					
ANR	584580	IdentifierDecl	sy = row		584125	1					
ANR	584581	IdentifierDeclType	int		584125	0					
ANR	584582	Identifier	sy		584125	1					
ANR	584583	AssignmentExpression	sy = row		584125	2		=			
ANR	584584	Identifier	row		584125	0					
ANR	584585	Identifier	row		584125	1					
ANR	584586	IdentifierDeclStatement	int w ;	498:12:17460:17465	584125	1	True				
ANR	584587	IdentifierDecl	w		584125	0					
ANR	584588	IdentifierDeclType	int		584125	0					
ANR	584589	Identifier	w		584125	1					
ANR	584590	ForStatement	for ( dx = 0 ; dx < sod ; dx += w )		584125	2					
ANR	584591	ForInit	dx = 0 ;	500:17:17485:17491	584125	0	True				
ANR	584592	AssignmentExpression	dx = 0		584125	0		=			
ANR	584593	Identifier	dx		584125	0					
ANR	584594	PrimaryExpression	0		584125	1					
ANR	584595	Condition	dx < sod	500:25:17493:17500	584125	1	True				
ANR	584596	RelationalExpression	dx < sod		584125	0		<			
ANR	584597	Identifier	dx		584125	0					
ANR	584598	Identifier	sod		584125	1					
ANR	584599	AssignmentExpression	dx += w	500:35:17503:17509	584125	2	True	+=			
ANR	584600	Identifier	dx		584125	0					
ANR	584601	Identifier	w		584125	1					
ANR	584602	CompoundStatement		82:16:2672:2681	584125	3					
ANR	584603	IdentifierDeclStatement	"int si , j ;"	502:16:17604:17613	584125	0	True				
ANR	584604	IdentifierDecl	si		584125	0					
ANR	584605	IdentifierDeclType	int		584125	0					
ANR	584606	Identifier	si		584125	1					
ANR	584607	IdentifierDecl	j		584125	1					
ANR	584608	IdentifierDeclType	int		584125	0					
ANR	584609	Identifier	j		584125	1					
ANR	584610	IfStatement	if ( sy < h1 )		584125	1					
ANR	584611	Condition	sy < h1	504:20:17636:17642	584125	0	True				
ANR	584612	RelationalExpression	sy < h1		584125	0		<			
ANR	584613	Identifier	sy		584125	0					
ANR	584614	Identifier	h1		584125	1					
ANR	584615	CompoundStatement		84:29:2713:2713	584125	1					
ANR	584616	ExpressionStatement	si = sy * w1	506:20:17716:17728	584125	0	True				
ANR	584617	AssignmentExpression	si = sy * w1		584125	0		=			
ANR	584618	Identifier	si		584125	0					
ANR	584619	MultiplicativeExpression	sy * w1		584125	1		*			
ANR	584620	Identifier	sy		584125	0					
ANR	584621	Identifier	w1		584125	1					
ANR	584622	ExpressionStatement	w = w1	507:20:17750:17756	584125	1	True				
ANR	584623	AssignmentExpression	w = w1		584125	0		=			
ANR	584624	Identifier	w		584125	0					
ANR	584625	Identifier	w1		584125	1					
ANR	584626	ExpressionStatement	sy += h2	508:20:17778:17786	584125	2	True				
ANR	584627	AssignmentExpression	sy += h2		584125	0		+=			
ANR	584628	Identifier	sy		584125	0					
ANR	584629	Identifier	h2		584125	1					
ANR	584630	ElseStatement	else		584125	0					
ANR	584631	CompoundStatement		89:23:2879:2879	584125	0					
ANR	584632	ExpressionStatement	si = size1 + ( sy - h1 ) * w2	511:20:17882:17909	584125	0	True				
ANR	584633	AssignmentExpression	si = size1 + ( sy - h1 ) * w2		584125	0		=			
ANR	584634	Identifier	si		584125	0					
ANR	584635	AdditiveExpression	size1 + ( sy - h1 ) * w2		584125	1		+			
ANR	584636	Identifier	size1		584125	0					
ANR	584637	MultiplicativeExpression	( sy - h1 ) * w2		584125	1		*			
ANR	584638	AdditiveExpression	sy - h1		584125	0		-			
ANR	584639	Identifier	sy		584125	0					
ANR	584640	Identifier	h1		584125	1					
ANR	584641	Identifier	w2		584125	1					
ANR	584642	ExpressionStatement	w = w2	512:20:17931:17937	584125	1	True				
ANR	584643	AssignmentExpression	w = w2		584125	0		=			
ANR	584644	Identifier	w		584125	0					
ANR	584645	Identifier	w2		584125	1					
ANR	584646	ExpressionStatement	sy -= h1	513:20:17959:17967	584125	2	True				
ANR	584647	AssignmentExpression	sy -= h1		584125	0		-=			
ANR	584648	Identifier	sy		584125	0					
ANR	584649	Identifier	h1		584125	1					
ANR	584650	ForStatement	"for ( j = 0 ; j < w ; ++ j , ++ si , ++ di )"		584125	2					
ANR	584651	ForInit	j = 0 ;	515:21:18008:18013	584125	0	True				
ANR	584652	AssignmentExpression	j = 0		584125	0		=			
ANR	584653	Identifier	j		584125	0					
ANR	584654	PrimaryExpression	0		584125	1					
ANR	584655	Condition	j < w	515:28:18015:18019	584125	1	True				
ANR	584656	RelationalExpression	j < w		584125	0		<			
ANR	584657	Identifier	j		584125	0					
ANR	584658	Identifier	w		584125	1					
ANR	584659	Expression	"++ j , ++ si , ++ di"	515:35:18022:18036	584125	2	True				
ANR	584660	UnaryExpression	++ j		584125	0					
ANR	584661	IncDec	++		584125	0					
ANR	584662	Identifier	j		584125	1					
ANR	584663	Expression	"++ si , ++ di"		584125	1					
ANR	584664	UnaryExpression	++ si		584125	0					
ANR	584665	IncDec	++		584125	0					
ANR	584666	Identifier	si		584125	1					
ANR	584667	UnaryExpression	++ di		584125	1					
ANR	584668	IncDec	++		584125	0					
ANR	584669	Identifier	di		584125	1					
ANR	584670	CompoundStatement		96:20:3129:3300	584125	3					
ANR	584671	IdentifierDeclStatement	uint thr = ( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift ;	516:20:18061:18232	584125	0	True				
ANR	584672	IdentifierDecl	thr = ( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift		584125	0					
ANR	584673	IdentifierDeclType	uint		584125	0					
ANR	584674	Identifier	thr		584125	1					
ANR	584675	AssignmentExpression	thr = ( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift		584125	2		=			
ANR	584676	Identifier	thr		584125	0					
ANR	584677	ShiftExpression	( bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ] ) >> rshift		584125	1		>>			
ANR	584678	ConditionalExpression	bps == 1 ? data [ si ] : ( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ]		584125	0					
ANR	584679	Condition	bps == 1		584125	0					
ANR	584680	EqualityExpression	bps == 1		584125	0		==			
ANR	584681	Identifier	bps		584125	0					
ANR	584682	PrimaryExpression	1		584125	1					
ANR	584683	ArrayIndexing	data [ si ]		584125	1					
ANR	584684	Identifier	data		584125	0					
ANR	584685	Identifier	si		584125	1					
ANR	584686	AdditiveExpression	( data [ si * 2 ] << 8 ) + data [ si * 2 + 1 ]		584125	2		+			
ANR	584687	ShiftExpression	data [ si * 2 ] << 8		584125	0		<<			
ANR	584688	ArrayIndexing	data [ si * 2 ]		584125	0					
ANR	584689	Identifier	data		584125	0					
ANR	584690	MultiplicativeExpression	si * 2		584125	1		*			
ANR	584691	Identifier	si		584125	0					
ANR	584692	PrimaryExpression	2		584125	1					
ANR	584693	PrimaryExpression	8		584125	1					
ANR	584694	ArrayIndexing	data [ si * 2 + 1 ]		584125	1					
ANR	584695	Identifier	data		584125	0					
ANR	584696	AdditiveExpression	si * 2 + 1		584125	1		+			
ANR	584697	MultiplicativeExpression	si * 2		584125	0		*			
ANR	584698	Identifier	si		584125	0					
ANR	584699	PrimaryExpression	2		584125	1					
ANR	584700	PrimaryExpression	1		584125	1					
ANR	584701	Identifier	rshift		584125	1					
ANR	584702	ExpressionStatement	"if_debug3 ( 'H' , ""[H]sy=%d, si=%d, di=%d\\n"" , sy , si , di )"	521:20:18255:18309	584125	1	True				
ANR	584703	CallExpression	"if_debug3 ( 'H' , ""[H]sy=%d, si=%d, di=%d\\n"" , sy , si , di )"		584125	0					
ANR	584704	Callee	if_debug3		584125	0					
ANR	584705	Identifier	if_debug3		584125	0					
ANR	584706	ArgumentList	'H'		584125	1					
ANR	584707	Argument	'H'		584125	0					
ANR	584708	PrimaryExpression	'H'		584125	0					
ANR	584709	Argument	"""[H]sy=%d, si=%d, di=%d\\n"""		584125	1					
ANR	584710	PrimaryExpression	"""[H]sy=%d, si=%d, di=%d\\n"""		584125	0					
ANR	584711	Argument	sy		584125	2					
ANR	584712	Identifier	sy		584125	0					
ANR	584713	Argument	si		584125	3					
ANR	584714	Identifier	si		584125	0					
ANR	584715	Argument	di		584125	4					
ANR	584716	Identifier	di		584125	0					
ANR	584717	ExpressionStatement	"bits [ di ] . mask = max ( thr , 1 )"	522:20:18331:18358	584125	2	True				
ANR	584718	AssignmentExpression	"bits [ di ] . mask = max ( thr , 1 )"		584125	0		=			
ANR	584719	MemberAccess	bits [ di ] . mask		584125	0					
ANR	584720	ArrayIndexing	bits [ di ]		584125	0					
ANR	584721	Identifier	bits		584125	0					
ANR	584722	Identifier	di		584125	1					
ANR	584723	Identifier	mask		584125	1					
ANR	584724	CallExpression	"max ( thr , 1 )"		584125	1					
ANR	584725	Callee	max		584125	0					
ANR	584726	Identifier	max		584125	0					
ANR	584727	ArgumentList	thr		584125	1					
ANR	584728	Argument	thr		584125	0					
ANR	584729	Identifier	thr		584125	0					
ANR	584730	Argument	1		584125	1					
ANR	584731	PrimaryExpression	1		584125	0					
ANR	584732	ExpressionStatement	gx_ht_complete_threshold_order ( porder )	527:4:18412:18450	584125	32	True				
ANR	584733	CallExpression	gx_ht_complete_threshold_order ( porder )		584125	0					
ANR	584734	Callee	gx_ht_complete_threshold_order		584125	0					
ANR	584735	Identifier	gx_ht_complete_threshold_order		584125	0					
ANR	584736	ArgumentList	porder		584125	1					
ANR	584737	Argument	porder		584125	0					
ANR	584738	Identifier	porder		584125	0					
ANR	584739	ReturnStatement	"return process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem ) ;"	528:4:18456:18538	584125	33	True				
ANR	584740	CallExpression	"process_transfer ( porder , pgs , phtp -> transfer , & phtp -> transfer_closure , mem )"		584125	0					
ANR	584741	Callee	process_transfer		584125	0					
ANR	584742	Identifier	process_transfer		584125	0					
ANR	584743	ArgumentList	porder		584125	1					
ANR	584744	Argument	porder		584125	0					
ANR	584745	Identifier	porder		584125	0					
ANR	584746	Argument	pgs		584125	1					
ANR	584747	Identifier	pgs		584125	0					
ANR	584748	Argument	phtp -> transfer		584125	2					
ANR	584749	PtrMemberAccess	phtp -> transfer		584125	0					
ANR	584750	Identifier	phtp		584125	0					
ANR	584751	Identifier	transfer		584125	1					
ANR	584752	Argument	& phtp -> transfer_closure		584125	3					
ANR	584753	UnaryOperationExpression	& phtp -> transfer_closure		584125	0					
ANR	584754	UnaryOperator	&		584125	0					
ANR	584755	PtrMemberAccess	phtp -> transfer_closure		584125	1					
ANR	584756	Identifier	phtp		584125	0					
ANR	584757	Identifier	transfer_closure		584125	1					
ANR	584758	Argument	mem		584125	4					
ANR	584759	Identifier	mem		584125	0					
ANR	584760	Statement	undef	529:1:18541:18545	584125	34	True				
ANR	584761	Statement	LOG2_MAX_HT_LEVELS	529:7:18547:18564	584125	35	True				
ANR	584762	Statement	undef	530:1:18567:18571	584125	36	True				
ANR	584763	Statement	MAX_HT_LEVELS	530:7:18573:18585	584125	37	True				
ANR	584764	ReturnType	static int		584125	1					
ANR	584765	Identifier	process_threshold2		584125	2					
ANR	584766	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_threshold2_halftone * phtp , gs_memory_t * mem"		584125	3					
ANR	584767	Parameter	gx_ht_order * porder	419:19:14823:14842	584125	0	True				
ANR	584768	ParameterType	gx_ht_order *		584125	0					
ANR	584769	Identifier	porder		584125	1					
ANR	584770	Parameter	gs_gstate * pgs	419:41:14845:14859	584125	1	True				
ANR	584771	ParameterType	gs_gstate *		584125	0					
ANR	584772	Identifier	pgs		584125	1					
ANR	584773	Parameter	gs_threshold2_halftone * phtp	420:19:14881:14909	584125	2	True				
ANR	584774	ParameterType	gs_threshold2_halftone *		584125	0					
ANR	584775	Identifier	phtp		584125	1					
ANR	584776	Parameter	gs_memory_t * mem	420:50:14912:14928	584125	3	True				
ANR	584777	ParameterType	gs_memory_t *		584125	0					
ANR	584778	Identifier	mem		584125	1					
ANR	584779	CFGEntryNode	ENTRY		584125		True				
ANR	584780	CFGExitNode	EXIT		584125		True				
ANR	584781	Symbol	data		584125						
ANR	584782	Symbol	di		584125						
ANR	584783	Symbol	shift		584125						
ANR	584784	Symbol	* phtp		584125						
ANR	584785	Symbol	sod		584125						
ANR	584786	Symbol	phtp -> transfer		584125						
ANR	584787	Symbol	phtp -> width2		584125						
ANR	584788	Symbol	dx		584125						
ANR	584789	Symbol	phtp -> thresholds . data		584125						
ANR	584790	Symbol	porder -> params		584125						
ANR	584791	Symbol	& phtp -> transfer_closure		584125						
ANR	584792	Symbol	w1		584125						
ANR	584793	Symbol	w2		584125						
ANR	584794	Symbol	* si		584125						
ANR	584795	Symbol	* bits		584125						
ANR	584796	Symbol	bits [ di ] . mask		584125						
ANR	584797	Symbol	bits		584125						
ANR	584798	Symbol	* di		584125						
ANR	584799	Symbol	porder		584125						
ANR	584800	Symbol	porder -> params . R1		584125						
ANR	584801	Symbol	phtp -> thresholds		584125						
ANR	584802	Symbol	porder -> params . M1		584125						
ANR	584803	Symbol	size		584125						
ANR	584804	Symbol	phtp -> width		584125						
ANR	584805	Symbol	* porder		584125						
ANR	584806	Symbol	phtp		584125						
ANR	584807	Symbol	code		584125						
ANR	584808	Symbol	phtp -> height		584125						
ANR	584809	Symbol	porder -> params . R		584125						
ANR	584810	Symbol	h1		584125						
ANR	584811	Symbol	h2		584125						
ANR	584812	Symbol	igcd		584125						
ANR	584813	Symbol	process_transfer		584125						
ANR	584814	Symbol	porder -> params . N1		584125						
ANR	584815	Symbol	porder -> bit_data		584125						
ANR	584816	Symbol	mem		584125						
ANR	584817	Symbol	size1		584125						
ANR	584818	Symbol	si		584125						
ANR	584819	Symbol	size2		584125						
ANR	584820	Symbol	porder -> params . N		584125						
ANR	584821	Symbol	porder -> params . M		584125						
ANR	584822	Symbol	row		584125						
ANR	584823	Symbol	pgs		584125						
ANR	584824	Symbol	phtp -> bytes_per_sample		584125						
ANR	584825	Symbol	rshift		584125						
ANR	584826	Symbol	MAX_HT_LEVELS		584125						
ANR	584827	Symbol	mask		584125						
ANR	584828	Symbol	bps		584125						
ANR	584829	Symbol	d		584125						
ANR	584830	Symbol	max		584125						
ANR	584831	Symbol	sy		584125						
ANR	584832	Symbol	phtp -> height2		584125						
ANR	584833	Symbol	i		584125						
ANR	584834	Symbol	j		584125						
ANR	584835	Symbol	* i		584125						
ANR	584836	Symbol	& ht_order_procs_default		584125						
ANR	584837	Symbol	max_thr		584125						
ANR	584838	Symbol	w		584125						
ANR	584839	Symbol	x		584125						
ANR	584840	Symbol	y		584125						
ANR	584841	Symbol	* data		584125						
ANR	584842	Symbol	gx_ht_alloc_ht_order		584125						
ANR	584843	Symbol	num_levels		584125						
ANR	584844	Symbol	thr		584125						
ANR	584845	Function	process_client_order	534:0:18626:18992							
ANR	584846	FunctionDef	"process_client_order (gx_ht_order * porder , gs_gstate * pgs , gs_client_order_halftone * phcop , gs_memory_t * mem)"		584845	0					
ANR	584847	CompoundStatement		537:0:18771:18992	584845	0					
ANR	584848	IdentifierDeclStatement	"int code = ( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem ) ;"	538:4:18777:18843	584845	0	True				
ANR	584849	IdentifierDecl	"code = ( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem )"		584845	0					
ANR	584850	IdentifierDeclType	int		584845	0					
ANR	584851	Identifier	code		584845	1					
ANR	584852	AssignmentExpression	"code = ( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem )"		584845	2		=			
ANR	584853	Identifier	code		584845	0					
ANR	584854	CallExpression	"( * phcop -> procs -> create_order ) ( porder , pgs , phcop , mem )"		584845	1					
ANR	584855	Callee	* phcop -> procs -> create_order		584845	0					
ANR	584856	UnaryOperationExpression	* phcop -> procs -> create_order		584845	0					
ANR	584857	UnaryOperator	*		584845	0					
ANR	584858	PtrMemberAccess	phcop -> procs -> create_order		584845	1					
ANR	584859	PtrMemberAccess	phcop -> procs		584845	0					
ANR	584860	Identifier	phcop		584845	0					
ANR	584861	Identifier	procs		584845	1					
ANR	584862	Identifier	create_order		584845	1					
ANR	584863	ArgumentList	porder		584845	1					
ANR	584864	Argument	porder		584845	0					
ANR	584865	Identifier	porder		584845	0					
ANR	584866	Argument	pgs		584845	1					
ANR	584867	Identifier	pgs		584845	0					
ANR	584868	Argument	phcop		584845	2					
ANR	584869	Identifier	phcop		584845	0					
ANR	584870	Argument	mem		584845	3					
ANR	584871	Identifier	mem		584845	0					
ANR	584872	IfStatement	if ( code < 0 )		584845	1					
ANR	584873	Condition	code < 0	540:8:18854:18861	584845	0	True				
ANR	584874	RelationalExpression	code < 0		584845	0		<			
ANR	584875	Identifier	code		584845	0					
ANR	584876	PrimaryExpression	0		584845	1					
ANR	584877	ReturnStatement	return code ;	541:8:18872:18883	584845	1	True				
ANR	584878	Identifier	code		584845	0					
ANR	584879	ReturnStatement	"return process_transfer ( porder , pgs , NULL , & phcop -> transfer_closure , mem ) ;"	542:4:18889:18990	584845	2	True				
ANR	584880	CallExpression	"process_transfer ( porder , pgs , NULL , & phcop -> transfer_closure , mem )"		584845	0					
ANR	584881	Callee	process_transfer		584845	0					
ANR	584882	Identifier	process_transfer		584845	0					
ANR	584883	ArgumentList	porder		584845	1					
ANR	584884	Argument	porder		584845	0					
ANR	584885	Identifier	porder		584845	0					
ANR	584886	Argument	pgs		584845	1					
ANR	584887	Identifier	pgs		584845	0					
ANR	584888	Argument	NULL		584845	2					
ANR	584889	Identifier	NULL		584845	0					
ANR	584890	Argument	& phcop -> transfer_closure		584845	3					
ANR	584891	UnaryOperationExpression	& phcop -> transfer_closure		584845	0					
ANR	584892	UnaryOperator	&		584845	0					
ANR	584893	PtrMemberAccess	phcop -> transfer_closure		584845	1					
ANR	584894	Identifier	phcop		584845	0					
ANR	584895	Identifier	transfer_closure		584845	1					
ANR	584896	Argument	mem		584845	4					
ANR	584897	Identifier	mem		584845	0					
ANR	584898	ReturnType	static int		584845	1					
ANR	584899	Identifier	process_client_order		584845	2					
ANR	584900	ParameterList	"gx_ht_order * porder , gs_gstate * pgs , gs_client_order_halftone * phcop , gs_memory_t * mem"		584845	3					
ANR	584901	Parameter	gx_ht_order * porder	535:21:18658:18677	584845	0	True				
ANR	584902	ParameterType	gx_ht_order *		584845	0					
ANR	584903	Identifier	porder		584845	1					
ANR	584904	Parameter	gs_gstate * pgs	535:43:18680:18694	584845	1	True				
ANR	584905	ParameterType	gs_gstate *		584845	0					
ANR	584906	Identifier	pgs		584845	1					
ANR	584907	Parameter	gs_client_order_halftone * phcop	536:21:18718:18749	584845	2	True				
ANR	584908	ParameterType	gs_client_order_halftone *		584845	0					
ANR	584909	Identifier	phcop		584845	1					
ANR	584910	Parameter	gs_memory_t * mem	536:55:18752:18768	584845	3	True				
ANR	584911	ParameterType	gs_memory_t *		584845	0					
ANR	584912	Identifier	mem		584845	1					
ANR	584913	CFGEntryNode	ENTRY		584845		True				
ANR	584914	CFGExitNode	EXIT		584845		True				
ANR	584915	Symbol	phcop -> procs		584845						
ANR	584916	Symbol	code		584845						
ANR	584917	Symbol	NULL		584845						
ANR	584918	Symbol	* phcop -> procs		584845						
ANR	584919	Symbol	* * * phcop		584845						
ANR	584920	Symbol	* phcop -> procs -> create_order		584845						
ANR	584921	Symbol	* * phcop -> procs		584845						
ANR	584922	Symbol	& phcop -> transfer_closure		584845						
ANR	584923	Symbol	* phcop		584845						
ANR	584924	Symbol	porder		584845						
ANR	584925	Symbol	phcop -> procs -> create_order		584845						
ANR	584926	Symbol	process_transfer		584845						
ANR	584927	Symbol	mem		584845						
ANR	584928	Symbol	phcop		584845						
ANR	584929	Symbol	* * phcop		584845						
ANR	584930	Symbol	pgs		584845						
