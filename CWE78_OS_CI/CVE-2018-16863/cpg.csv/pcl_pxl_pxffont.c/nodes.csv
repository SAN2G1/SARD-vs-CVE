command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8240292	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pxl_pxffont.c								
ANR	8240293	Function	px_widen_font_name	44:0:1335:2720							
ANR	8240294	FunctionDef	"px_widen_font_name (px_value_t * pfnv , px_state_t * pxs)"		8240293	0					
ANR	8240295	CompoundStatement		46:0:1402:2720	8240293	0					
ANR	8240296	IdentifierDeclStatement	uint type = pfnv -> type ;	47:4:1408:1430	8240293	0	True				
ANR	8240297	IdentifierDecl	type = pfnv -> type		8240293	0					
ANR	8240298	IdentifierDeclType	uint		8240293	0					
ANR	8240299	Identifier	type		8240293	1					
ANR	8240300	AssignmentExpression	type = pfnv -> type		8240293	2		=			
ANR	8240301	Identifier	type		8240293	0					
ANR	8240302	PtrMemberAccess	pfnv -> type		8240293	1					
ANR	8240303	Identifier	pfnv		8240293	0					
ANR	8240304	Identifier	type		8240293	1					
ANR	8240305	IfStatement	if ( ( type & ( pxd_uint16 | pxd_big_endian ) ) == ( pxd_uint16 | pxd_native_byte_order ) )		8240293	1					
ANR	8240306	Condition	( type & ( pxd_uint16 | pxd_big_endian ) ) == ( pxd_uint16 | pxd_native_byte_order )	49:8:1441:1526	8240293	0	True				
ANR	8240307	EqualityExpression	( type & ( pxd_uint16 | pxd_big_endian ) ) == ( pxd_uint16 | pxd_native_byte_order )		8240293	0		==			
ANR	8240308	BitAndExpression	type & ( pxd_uint16 | pxd_big_endian )		8240293	0		&			
ANR	8240309	Identifier	type		8240293	0					
ANR	8240310	InclusiveOrExpression	pxd_uint16 | pxd_big_endian		8240293	1		|			
ANR	8240311	Identifier	pxd_uint16		8240293	0					
ANR	8240312	Identifier	pxd_big_endian		8240293	1					
ANR	8240313	InclusiveOrExpression	pxd_uint16 | pxd_native_byte_order		8240293	1		|			
ANR	8240314	Identifier	pxd_uint16		8240293	0					
ANR	8240315	Identifier	pxd_native_byte_order		8240293	1					
ANR	8240316	ReturnStatement	return 0 ;	52:8:1546:1554	8240293	1	True				
ANR	8240317	PrimaryExpression	0		8240293	0					
ANR	8240318	CompoundStatement		12:8:365:371	8240293	2					
ANR	8240319	IdentifierDeclStatement	byte * old_data = ( byte * ) pfnv -> value . array . data ;	54:8:1616:1664	8240293	0	True				
ANR	8240320	IdentifierDecl	* old_data = ( byte * ) pfnv -> value . array . data		8240293	0					
ANR	8240321	IdentifierDeclType	byte *		8240293	0					
ANR	8240322	Identifier	old_data		8240293	1					
ANR	8240323	AssignmentExpression	* old_data = ( byte * ) pfnv -> value . array . data		8240293	2		=			
ANR	8240324	Identifier	old_data		8240293	0					
ANR	8240325	CastExpression	( byte * ) pfnv -> value . array . data		8240293	1					
ANR	8240326	CastTarget	byte *		8240293	0					
ANR	8240327	MemberAccess	pfnv -> value . array . data		8240293	1					
ANR	8240328	MemberAccess	pfnv -> value . array		8240293	0					
ANR	8240329	PtrMemberAccess	pfnv -> value		8240293	0					
ANR	8240330	Identifier	pfnv		8240293	0					
ANR	8240331	Identifier	value		8240293	1					
ANR	8240332	Identifier	array		8240293	1					
ANR	8240333	Identifier	data		8240293	1					
ANR	8240334	IdentifierDeclStatement	uint size = pfnv -> value . array . size ;	55:8:1698:1732	8240293	1	True				
ANR	8240335	IdentifierDecl	size = pfnv -> value . array . size		8240293	0					
ANR	8240336	IdentifierDeclType	uint		8240293	0					
ANR	8240337	Identifier	size		8240293	1					
ANR	8240338	AssignmentExpression	size = pfnv -> value . array . size		8240293	2		=			
ANR	8240339	Identifier	size		8240293	0					
ANR	8240340	MemberAccess	pfnv -> value . array . size		8240293	1					
ANR	8240341	MemberAccess	pfnv -> value . array		8240293	0					
ANR	8240342	PtrMemberAccess	pfnv -> value		8240293	0					
ANR	8240343	Identifier	pfnv		8240293	0					
ANR	8240344	Identifier	value		8240293	1					
ANR	8240345	Identifier	array		8240293	1					
ANR	8240346	Identifier	size		8240293	1					
ANR	8240347	IdentifierDeclStatement	char16 * new_data ;	56:8:1742:1758	8240293	2	True				
ANR	8240348	IdentifierDecl	* new_data		8240293	0					
ANR	8240349	IdentifierDeclType	char16 *		8240293	0					
ANR	8240350	Identifier	new_data		8240293	1					
ANR	8240351	IdentifierDeclStatement	uint i ;	57:8:1768:1774	8240293	3	True				
ANR	8240352	IdentifierDecl	i		8240293	0					
ANR	8240353	IdentifierDeclType	uint		8240293	0					
ANR	8240354	Identifier	i		8240293	1					
ANR	8240355	IfStatement	if ( type & pxd_on_heap )		8240293	4					
ANR	8240356	Condition	type & pxd_on_heap	59:12:1789:1806	8240293	0	True				
ANR	8240357	BitAndExpression	type & pxd_on_heap		8240293	0		&			
ANR	8240358	Identifier	type		8240293	0					
ANR	8240359	Identifier	pxd_on_heap		8240293	1					
ANR	8240360	ExpressionStatement	"old_data = ( byte * ) ( new_data = ( char16 * ) gs_resize_object ( pxs -> memory , old_data , size * 2 , ""px_widen_font_name"" ) )"	60:12:1821:2014	8240293	1	True				
ANR	8240361	AssignmentExpression	"old_data = ( byte * ) ( new_data = ( char16 * ) gs_resize_object ( pxs -> memory , old_data , size * 2 , ""px_widen_font_name"" ) )"		8240293	0		=			
ANR	8240362	Identifier	old_data		8240293	0					
ANR	8240363	CastExpression	"( byte * ) ( new_data = ( char16 * ) gs_resize_object ( pxs -> memory , old_data , size * 2 , ""px_widen_font_name"" ) )"		8240293	1					
ANR	8240364	CastTarget	byte *		8240293	0					
ANR	8240365	AssignmentExpression	"new_data = ( char16 * ) gs_resize_object ( pxs -> memory , old_data , size * 2 , ""px_widen_font_name"" )"		8240293	1		=			
ANR	8240366	Identifier	new_data		8240293	0					
ANR	8240367	CastExpression	"( char16 * ) gs_resize_object ( pxs -> memory , old_data , size * 2 , ""px_widen_font_name"" )"		8240293	1					
ANR	8240368	CastTarget	char16 *		8240293	0					
ANR	8240369	CallExpression	"gs_resize_object ( pxs -> memory , old_data , size * 2 , ""px_widen_font_name"" )"		8240293	1					
ANR	8240370	Callee	gs_resize_object		8240293	0					
ANR	8240371	Identifier	gs_resize_object		8240293	0					
ANR	8240372	ArgumentList	pxs -> memory		8240293	1					
ANR	8240373	Argument	pxs -> memory		8240293	0					
ANR	8240374	PtrMemberAccess	pxs -> memory		8240293	0					
ANR	8240375	Identifier	pxs		8240293	0					
ANR	8240376	Identifier	memory		8240293	1					
ANR	8240377	Argument	old_data		8240293	1					
ANR	8240378	Identifier	old_data		8240293	0					
ANR	8240379	Argument	size * 2		8240293	2					
ANR	8240380	MultiplicativeExpression	size * 2		8240293	0		*			
ANR	8240381	Identifier	size		8240293	0					
ANR	8240382	PrimaryExpression	2		8240293	1					
ANR	8240383	Argument	"""px_widen_font_name"""		8240293	3					
ANR	8240384	PrimaryExpression	"""px_widen_font_name"""		8240293	0					
ANR	8240385	ElseStatement	else		8240293	0					
ANR	8240386	ExpressionStatement	"new_data = ( char16 * ) gs_alloc_byte_array ( pxs -> memory , size , sizeof ( char16 ) , ""px_widen_font_name"" )"	65:12:2041:2249	8240293	0	True				
ANR	8240387	AssignmentExpression	"new_data = ( char16 * ) gs_alloc_byte_array ( pxs -> memory , size , sizeof ( char16 ) , ""px_widen_font_name"" )"		8240293	0		=			
ANR	8240388	Identifier	new_data		8240293	0					
ANR	8240389	CastExpression	"( char16 * ) gs_alloc_byte_array ( pxs -> memory , size , sizeof ( char16 ) , ""px_widen_font_name"" )"		8240293	1					
ANR	8240390	CastTarget	char16 *		8240293	0					
ANR	8240391	CallExpression	"gs_alloc_byte_array ( pxs -> memory , size , sizeof ( char16 ) , ""px_widen_font_name"" )"		8240293	1					
ANR	8240392	Callee	gs_alloc_byte_array		8240293	0					
ANR	8240393	Identifier	gs_alloc_byte_array		8240293	0					
ANR	8240394	ArgumentList	pxs -> memory		8240293	1					
ANR	8240395	Argument	pxs -> memory		8240293	0					
ANR	8240396	PtrMemberAccess	pxs -> memory		8240293	0					
ANR	8240397	Identifier	pxs		8240293	0					
ANR	8240398	Identifier	memory		8240293	1					
ANR	8240399	Argument	size		8240293	1					
ANR	8240400	Identifier	size		8240293	0					
ANR	8240401	Argument	sizeof ( char16 )		8240293	2					
ANR	8240402	SizeofExpression	sizeof ( char16 )		8240293	0					
ANR	8240403	Sizeof	sizeof		8240293	0					
ANR	8240404	SizeofOperand	char16		8240293	1					
ANR	8240405	Argument	"""px_widen_font_name"""		8240293	3					
ANR	8240406	PrimaryExpression	"""px_widen_font_name"""		8240293	0					
ANR	8240407	IfStatement	if ( new_data == 0 )		8240293	5					
ANR	8240408	Condition	new_data == 0	69:12:2263:2275	8240293	0	True				
ANR	8240409	EqualityExpression	new_data == 0		8240293	0		==			
ANR	8240410	Identifier	new_data		8240293	0					
ANR	8240411	PrimaryExpression	0		8240293	1					
ANR	8240412	ExpressionStatement	return_error ( errorInsufficientMemory )	70:12:2290:2327	8240293	1	True				
ANR	8240413	CallExpression	return_error ( errorInsufficientMemory )		8240293	0					
ANR	8240414	Callee	return_error		8240293	0					
ANR	8240415	Identifier	return_error		8240293	0					
ANR	8240416	ArgumentList	errorInsufficientMemory		8240293	1					
ANR	8240417	Argument	errorInsufficientMemory		8240293	0					
ANR	8240418	Identifier	errorInsufficientMemory		8240293	0					
ANR	8240419	ForStatement	for ( i = size ; i ; )		8240293	6					
ANR	8240420	ForInit	i = size ;	71:13:2342:2350	8240293	0	True				
ANR	8240421	AssignmentExpression	i = size		8240293	0		=			
ANR	8240422	Identifier	i		8240293	0					
ANR	8240423	Identifier	size		8240293	1					
ANR	8240424	Condition	i	71:23:2352:2352	8240293	1	True				
ANR	8240425	Identifier	i		8240293	0					
ANR	8240426	CompoundStatement		26:27:953:953	8240293	2					
ANR	8240427	ExpressionStatement	-- i	72:12:2370:2373	8240293	0	True				
ANR	8240428	UnaryExpression	-- i		8240293	0					
ANR	8240429	IncDec	--		8240293	0					
ANR	8240430	Identifier	i		8240293	1					
ANR	8240431	ExpressionStatement	"new_data [ i ] = ( type & pxd_ubyte ? old_data [ i ] : uint16at ( old_data + i * 2 , type & pxd_big_endian ) )"	73:12:2387:2518	8240293	1	True				
ANR	8240432	AssignmentExpression	"new_data [ i ] = ( type & pxd_ubyte ? old_data [ i ] : uint16at ( old_data + i * 2 , type & pxd_big_endian ) )"		8240293	0		=			
ANR	8240433	ArrayIndexing	new_data [ i ]		8240293	0					
ANR	8240434	Identifier	new_data		8240293	0					
ANR	8240435	Identifier	i		8240293	1					
ANR	8240436	ConditionalExpression	"type & pxd_ubyte ? old_data [ i ] : uint16at ( old_data + i * 2 , type & pxd_big_endian )"		8240293	1					
ANR	8240437	Condition	type & pxd_ubyte		8240293	0					
ANR	8240438	BitAndExpression	type & pxd_ubyte		8240293	0		&			
ANR	8240439	Identifier	type		8240293	0					
ANR	8240440	Identifier	pxd_ubyte		8240293	1					
ANR	8240441	ArrayIndexing	old_data [ i ]		8240293	1					
ANR	8240442	Identifier	old_data		8240293	0					
ANR	8240443	Identifier	i		8240293	1					
ANR	8240444	CallExpression	"uint16at ( old_data + i * 2 , type & pxd_big_endian )"		8240293	2					
ANR	8240445	Callee	uint16at		8240293	0					
ANR	8240446	Identifier	uint16at		8240293	0					
ANR	8240447	ArgumentList	old_data + i * 2		8240293	1					
ANR	8240448	Argument	old_data + i * 2		8240293	0					
ANR	8240449	AdditiveExpression	old_data + i * 2		8240293	0		+			
ANR	8240450	Identifier	old_data		8240293	0					
ANR	8240451	MultiplicativeExpression	i * 2		8240293	1		*			
ANR	8240452	Identifier	i		8240293	0					
ANR	8240453	PrimaryExpression	2		8240293	1					
ANR	8240454	Argument	type & pxd_big_endian		8240293	1					
ANR	8240455	BitAndExpression	type & pxd_big_endian		8240293	0		&			
ANR	8240456	Identifier	type		8240293	0					
ANR	8240457	Identifier	pxd_big_endian		8240293	1					
ANR	8240458	ExpressionStatement	pfnv -> value . array . data = ( byte * ) new_data	77:8:2538:2580	8240293	7	True				
ANR	8240459	AssignmentExpression	pfnv -> value . array . data = ( byte * ) new_data		8240293	0		=			
ANR	8240460	MemberAccess	pfnv -> value . array . data		8240293	0					
ANR	8240461	MemberAccess	pfnv -> value . array		8240293	0					
ANR	8240462	PtrMemberAccess	pfnv -> value		8240293	0					
ANR	8240463	Identifier	pfnv		8240293	0					
ANR	8240464	Identifier	value		8240293	1					
ANR	8240465	Identifier	array		8240293	1					
ANR	8240466	Identifier	data		8240293	1					
ANR	8240467	CastExpression	( byte * ) new_data		8240293	1					
ANR	8240468	CastTarget	byte *		8240293	0					
ANR	8240469	Identifier	new_data		8240293	1					
ANR	8240470	ExpressionStatement	pfnv -> type = ( type & ~ ( pxd_ubyte | pxd_big_endian ) ) | ( pxd_uint16 | pxd_native_byte_order | pxd_on_heap )	79:4:2592:2704	8240293	3	True				
ANR	8240471	AssignmentExpression	pfnv -> type = ( type & ~ ( pxd_ubyte | pxd_big_endian ) ) | ( pxd_uint16 | pxd_native_byte_order | pxd_on_heap )		8240293	0		=			
ANR	8240472	PtrMemberAccess	pfnv -> type		8240293	0					
ANR	8240473	Identifier	pfnv		8240293	0					
ANR	8240474	Identifier	type		8240293	1					
ANR	8240475	InclusiveOrExpression	( type & ~ ( pxd_ubyte | pxd_big_endian ) ) | ( pxd_uint16 | pxd_native_byte_order | pxd_on_heap )		8240293	1		|			
ANR	8240476	BitAndExpression	type & ~ ( pxd_ubyte | pxd_big_endian )		8240293	0		&			
ANR	8240477	Identifier	type		8240293	0					
ANR	8240478	UnaryOperationExpression	~ ( pxd_ubyte | pxd_big_endian )		8240293	1					
ANR	8240479	UnaryOperator	~		8240293	0					
ANR	8240480	InclusiveOrExpression	pxd_ubyte | pxd_big_endian		8240293	1		|			
ANR	8240481	Identifier	pxd_ubyte		8240293	0					
ANR	8240482	Identifier	pxd_big_endian		8240293	1					
ANR	8240483	InclusiveOrExpression	pxd_uint16 | pxd_native_byte_order | pxd_on_heap		8240293	1		|			
ANR	8240484	Identifier	pxd_uint16		8240293	0					
ANR	8240485	InclusiveOrExpression	pxd_native_byte_order | pxd_on_heap		8240293	1		|			
ANR	8240486	Identifier	pxd_native_byte_order		8240293	0					
ANR	8240487	Identifier	pxd_on_heap		8240293	1					
ANR	8240488	ReturnStatement	return 0 ;	81:4:2710:2718	8240293	4	True				
ANR	8240489	PrimaryExpression	0		8240293	0					
ANR	8240490	ReturnType	static int		8240293	1					
ANR	8240491	Identifier	px_widen_font_name		8240293	2					
ANR	8240492	ParameterList	"px_value_t * pfnv , px_state_t * pxs"		8240293	3					
ANR	8240493	Parameter	px_value_t * pfnv	45:19:1365:1381	8240293	0	True				
ANR	8240494	ParameterType	px_value_t *		8240293	0					
ANR	8240495	Identifier	pfnv		8240293	1					
ANR	8240496	Parameter	px_state_t * pxs	45:38:1384:1399	8240293	1	True				
ANR	8240497	ParameterType	px_state_t *		8240293	0					
ANR	8240498	Identifier	pxs		8240293	1					
ANR	8240499	CFGEntryNode	ENTRY		8240293		True				
ANR	8240500	CFGExitNode	EXIT		8240293		True				
ANR	8240501	Symbol	pfnv -> value		8240293						
ANR	8240502	Symbol	pxs -> memory		8240293						
ANR	8240503	Symbol	pfnv		8240293						
ANR	8240504	Symbol	type		8240293						
ANR	8240505	Symbol	old_data		8240293						
ANR	8240506	Symbol	pxd_on_heap		8240293						
ANR	8240507	Symbol	* old_data		8240293						
ANR	8240508	Symbol	* pxs		8240293						
ANR	8240509	Symbol	* pfnv		8240293						
ANR	8240510	Symbol	pfnv -> value . array . size		8240293						
ANR	8240511	Symbol	errorInsufficientMemory		8240293						
ANR	8240512	Symbol	pxd_native_byte_order		8240293						
ANR	8240513	Symbol	i		8240293						
ANR	8240514	Symbol	pxs		8240293						
ANR	8240515	Symbol	gs_resize_object		8240293						
ANR	8240516	Symbol	pfnv -> value . array		8240293						
ANR	8240517	Symbol	pfnv -> type		8240293						
ANR	8240518	Symbol	pxd_ubyte		8240293						
ANR	8240519	Symbol	* i		8240293						
ANR	8240520	Symbol	size		8240293						
ANR	8240521	Symbol	uint16at		8240293						
ANR	8240522	Symbol	* new_data		8240293						
ANR	8240523	Symbol	new_data		8240293						
ANR	8240524	Symbol	pxd_big_endian		8240293						
ANR	8240525	Symbol	pfnv -> value . array . data		8240293						
ANR	8240526	Symbol	gs_alloc_byte_array		8240293						
ANR	8240527	Symbol	pxd_uint16		8240293						
ANR	8240528	Function	px_find_existing_font	90:0:3057:4063							
ANR	8240529	FunctionDef	"px_find_existing_font (px_value_t * pfnv , px_font_t * * ppxfont , px_state_t * pxs)"		8240528	0					
ANR	8240530	CompoundStatement		93:0:3164:4063	8240528	0					
ANR	8240531	IdentifierDeclStatement	int code ;	94:4:3170:3178	8240528	0	True				
ANR	8240532	IdentifierDecl	code		8240528	0					
ANR	8240533	IdentifierDeclType	int		8240528	0					
ANR	8240534	Identifier	code		8240528	1					
ANR	8240535	IdentifierDeclStatement	void * pxfont ;	95:4:3184:3196	8240528	1	True				
ANR	8240536	IdentifierDecl	* pxfont		8240528	0					
ANR	8240537	IdentifierDeclType	void *		8240528	0					
ANR	8240538	Identifier	pxfont		8240528	1					
ANR	8240539	ExpressionStatement	* ppxfont = NULL	97:4:3203:3218	8240528	2	True				
ANR	8240540	AssignmentExpression	* ppxfont = NULL		8240528	0		=			
ANR	8240541	UnaryOperationExpression	* ppxfont		8240528	0					
ANR	8240542	UnaryOperator	*		8240528	0					
ANR	8240543	Identifier	ppxfont		8240528	1					
ANR	8240544	Identifier	NULL		8240528	1					
ANR	8240545	ExpressionStatement	"code = px_widen_font_name ( pfnv , pxs )"	100:4:3275:3311	8240528	3	True				
ANR	8240546	AssignmentExpression	"code = px_widen_font_name ( pfnv , pxs )"		8240528	0		=			
ANR	8240547	Identifier	code		8240528	0					
ANR	8240548	CallExpression	"px_widen_font_name ( pfnv , pxs )"		8240528	1					
ANR	8240549	Callee	px_widen_font_name		8240528	0					
ANR	8240550	Identifier	px_widen_font_name		8240528	0					
ANR	8240551	ArgumentList	pfnv		8240528	1					
ANR	8240552	Argument	pfnv		8240528	0					
ANR	8240553	Identifier	pfnv		8240528	0					
ANR	8240554	Argument	pxs		8240528	1					
ANR	8240555	Identifier	pxs		8240528	0					
ANR	8240556	IfStatement	if ( code < 0 )		8240528	4					
ANR	8240557	Condition	code < 0	101:8:3321:3328	8240528	0	True				
ANR	8240558	RelationalExpression	code < 0		8240528	0		<			
ANR	8240559	Identifier	code		8240528	0					
ANR	8240560	PrimaryExpression	0		8240528	1					
ANR	8240561	ReturnStatement	return code ;	102:8:3339:3350	8240528	1	True				
ANR	8240562	Identifier	code		8240528	0					
ANR	8240563	IfStatement	"if ( px_dict_find ( & pxs -> font_dict , pfnv , & pxfont ) )"		8240528	5					
ANR	8240564	Condition	"px_dict_find ( & pxs -> font_dict , pfnv , & pxfont )"	104:8:3361:3404	8240528	0	True				
ANR	8240565	CallExpression	"px_dict_find ( & pxs -> font_dict , pfnv , & pxfont )"		8240528	0					
ANR	8240566	Callee	px_dict_find		8240528	0					
ANR	8240567	Identifier	px_dict_find		8240528	0					
ANR	8240568	ArgumentList	& pxs -> font_dict		8240528	1					
ANR	8240569	Argument	& pxs -> font_dict		8240528	0					
ANR	8240570	UnaryOperationExpression	& pxs -> font_dict		8240528	0					
ANR	8240571	UnaryOperator	&		8240528	0					
ANR	8240572	PtrMemberAccess	pxs -> font_dict		8240528	1					
ANR	8240573	Identifier	pxs		8240528	0					
ANR	8240574	Identifier	font_dict		8240528	1					
ANR	8240575	Argument	pfnv		8240528	1					
ANR	8240576	Identifier	pfnv		8240528	0					
ANR	8240577	Argument	& pxfont		8240528	2					
ANR	8240578	UnaryOperationExpression	& pxfont		8240528	0					
ANR	8240579	UnaryOperator	&		8240528	0					
ANR	8240580	Identifier	pxfont		8240528	1					
ANR	8240581	CompoundStatement		12:54:242:242	8240528	1					
ANR	8240582	IfStatement	if ( ( ( px_font_t * ) pxfont ) -> pfont )		8240528	0					
ANR	8240583	Condition	( ( px_font_t * ) pxfont ) -> pfont	106:12:3481:3509	8240528	0	True				
ANR	8240584	PtrMemberAccess	( ( px_font_t * ) pxfont ) -> pfont		8240528	0					
ANR	8240585	CastExpression	( px_font_t * ) pxfont		8240528	0					
ANR	8240586	CastTarget	px_font_t *		8240528	0					
ANR	8240587	Identifier	pxfont		8240528	1					
ANR	8240588	Identifier	pfont		8240528	1					
ANR	8240589	ExpressionStatement	* ppxfont = pxfont	107:12:3524:3541	8240528	1	True				
ANR	8240590	AssignmentExpression	* ppxfont = pxfont		8240528	0		=			
ANR	8240591	UnaryOperationExpression	* ppxfont		8240528	0					
ANR	8240592	UnaryOperator	*		8240528	0					
ANR	8240593	Identifier	ppxfont		8240528	1					
ANR	8240594	Identifier	pxfont		8240528	1					
ANR	8240595	ElseStatement	else		8240528	0					
ANR	8240596	CompoundStatement		16:13:391:391	8240528	0					
ANR	8240597	ExpressionStatement	"dmprintf ( pxs -> memory , ""font is being downloaded???\\n"" )"	110:12:3624:3678	8240528	0	True				
ANR	8240598	CallExpression	"dmprintf ( pxs -> memory , ""font is being downloaded???\\n"" )"		8240528	0					
ANR	8240599	Callee	dmprintf		8240528	0					
ANR	8240600	Identifier	dmprintf		8240528	0					
ANR	8240601	ArgumentList	pxs -> memory		8240528	1					
ANR	8240602	Argument	pxs -> memory		8240528	0					
ANR	8240603	PtrMemberAccess	pxs -> memory		8240528	0					
ANR	8240604	Identifier	pxs		8240528	0					
ANR	8240605	Identifier	memory		8240528	1					
ANR	8240606	Argument	"""font is being downloaded???\\n"""		8240528	1					
ANR	8240607	PrimaryExpression	"""font is being downloaded???\\n"""		8240528	0					
ANR	8240608	ReturnStatement	return - 1 ;	111:12:3692:3701	8240528	1	True				
ANR	8240609	UnaryOperationExpression	- 1		8240528	0					
ANR	8240610	UnaryOperator	-		8240528	0					
ANR	8240611	PrimaryExpression	1		8240528	1					
ANR	8240612	ElseStatement	else		8240528	0					
ANR	8240613	ReturnStatement	return - 1 ;	120:8:3978:3987	8240528	0	True				
ANR	8240614	UnaryOperationExpression	- 1		8240528	0					
ANR	8240615	UnaryOperator	-		8240528	0					
ANR	8240616	PrimaryExpression	1		8240528	1					
ANR	8240617	ReturnStatement	return 0 ;	122:4:4053:4061	8240528	6	True				
ANR	8240618	PrimaryExpression	0		8240528	0					
ANR	8240619	ReturnType	int		8240528	1					
ANR	8240620	Identifier	px_find_existing_font		8240528	2					
ANR	8240621	ParameterList	"px_value_t * pfnv , px_font_t * * ppxfont , px_state_t * pxs"		8240528	3					
ANR	8240622	Parameter	px_value_t * pfnv	91:22:3083:3099	8240528	0	True				
ANR	8240623	ParameterType	px_value_t *		8240528	0					
ANR	8240624	Identifier	pfnv		8240528	1					
ANR	8240625	Parameter	px_font_t * * ppxfont	91:41:3102:3121	8240528	1	True				
ANR	8240626	ParameterType	px_font_t * *		8240528	0					
ANR	8240627	Identifier	ppxfont		8240528	1					
ANR	8240628	Parameter	px_state_t * pxs	92:22:3146:3161	8240528	2	True				
ANR	8240629	ParameterType	px_state_t *		8240528	0					
ANR	8240630	Identifier	pxs		8240528	1					
ANR	8240631	CFGEntryNode	ENTRY		8240528		True				
ANR	8240632	CFGExitNode	EXIT		8240528		True				
ANR	8240633	Symbol	px_dict_find		8240528						
ANR	8240634	Symbol	code		8240528						
ANR	8240635	Symbol	NULL		8240528						
ANR	8240636	Symbol	ppxfont		8240528						
ANR	8240637	Symbol	pxs -> memory		8240528						
ANR	8240638	Symbol	px_widen_font_name		8240528						
ANR	8240639	Symbol	pfnv		8240528						
ANR	8240640	Symbol	pxs		8240528						
ANR	8240641	Symbol	& pxs -> font_dict		8240528						
ANR	8240642	Symbol	& pxfont		8240528						
ANR	8240643	Symbol	* pxfont		8240528						
ANR	8240644	Symbol	* ppxfont		8240528						
ANR	8240645	Symbol	( ( px_font_t * ) pxfont ) -> pfont		8240528						
ANR	8240646	Symbol	* pxs		8240528						
ANR	8240647	Symbol	pxfont		8240528						
ANR	8240648	Function	px_find_font	128:0:4264:5612							
ANR	8240649	FunctionDef	"px_find_font (px_value_t * pfnv , uint symbol_set , px_font_t * * ppxfont , px_state_t * pxs)"		8240648	0					
ANR	8240650	CompoundStatement		131:0:4370:5612	8240648	0					
ANR	8240651	IdentifierDeclStatement	int code ;	133:4:4377:4385	8240648	0	True				
ANR	8240652	IdentifierDecl	code		8240648	0					
ANR	8240653	IdentifierDeclType	int		8240648	0					
ANR	8240654	Identifier	code		8240648	1					
ANR	8240655	ExpressionStatement	"code = px_find_existing_font ( pfnv , ppxfont , pxs )"	137:4:4505:4553	8240648	1	True				
ANR	8240656	AssignmentExpression	"code = px_find_existing_font ( pfnv , ppxfont , pxs )"		8240648	0		=			
ANR	8240657	Identifier	code		8240648	0					
ANR	8240658	CallExpression	"px_find_existing_font ( pfnv , ppxfont , pxs )"		8240648	1					
ANR	8240659	Callee	px_find_existing_font		8240648	0					
ANR	8240660	Identifier	px_find_existing_font		8240648	0					
ANR	8240661	ArgumentList	pfnv		8240648	1					
ANR	8240662	Argument	pfnv		8240648	0					
ANR	8240663	Identifier	pfnv		8240648	0					
ANR	8240664	Argument	ppxfont		8240648	1					
ANR	8240665	Identifier	ppxfont		8240648	0					
ANR	8240666	Argument	pxs		8240648	2					
ANR	8240667	Identifier	pxs		8240648	0					
ANR	8240668	IfStatement	if ( code < 0 )		8240648	2					
ANR	8240669	Condition	code < 0	140:8:4610:4617	8240648	0	True				
ANR	8240670	RelationalExpression	code < 0		8240648	0		<			
ANR	8240671	Identifier	code		8240648	0					
ANR	8240672	PrimaryExpression	0		8240648	1					
ANR	8240673	CompoundStatement		16:8:453:488	8240648	1					
ANR	8240674	IdentifierDeclStatement	px_value_t default_font_value ;	141:8:4630:4659	8240648	0	True				
ANR	8240675	IdentifierDecl	default_font_value		8240648	0					
ANR	8240676	IdentifierDeclType	px_value_t		8240648	0					
ANR	8240677	Identifier	default_font_value		8240648	1					
ANR	8240678	IdentifierDeclStatement	"const char * default_font = ""Courier         "" ;"	145:8:4769:4814	8240648	1	True				
ANR	8240679	IdentifierDecl	"* default_font = ""Courier         """		8240648	0					
ANR	8240680	IdentifierDeclType	const char *		8240648	0					
ANR	8240681	Identifier	default_font		8240648	1					
ANR	8240682	AssignmentExpression	"* default_font = ""Courier         """		8240648	2		=			
ANR	8240683	Identifier	default_font		8240648	0					
ANR	8240684	PrimaryExpression	"""Courier         """		8240648	1					
ANR	8240685	IdentifierDeclStatement	char message [ px_max_error_line + 1 ] ;	146:8:4824:4859	8240648	2	True				
ANR	8240686	IdentifierDecl	message [ px_max_error_line + 1 ]		8240648	0					
ANR	8240687	IdentifierDeclType	char [ px_max_error_line + 1 ]		8240648	0					
ANR	8240688	Identifier	message		8240648	1					
ANR	8240689	AdditiveExpression	px_max_error_line + 1		8240648	2		+			
ANR	8240690	Identifier	px_max_error_line		8240648	0					
ANR	8240691	PrimaryExpression	1		8240648	1					
ANR	8240692	ExpressionStatement	default_font_value . type = pxd_ubyte | pxd_array	148:8:4870:4917	8240648	3	True				
ANR	8240693	AssignmentExpression	default_font_value . type = pxd_ubyte | pxd_array		8240648	0		=			
ANR	8240694	MemberAccess	default_font_value . type		8240648	0					
ANR	8240695	Identifier	default_font_value		8240648	0					
ANR	8240696	Identifier	type		8240648	1					
ANR	8240697	InclusiveOrExpression	pxd_ubyte | pxd_array		8240648	1		|			
ANR	8240698	Identifier	pxd_ubyte		8240648	0					
ANR	8240699	Identifier	pxd_array		8240648	1					
ANR	8240700	ExpressionStatement	default_font_value . value . array . data = ( const byte * ) default_font	149:8:4927:4991	8240648	4	True				
ANR	8240701	AssignmentExpression	default_font_value . value . array . data = ( const byte * ) default_font		8240648	0		=			
ANR	8240702	MemberAccess	default_font_value . value . array . data		8240648	0					
ANR	8240703	MemberAccess	default_font_value . value . array		8240648	0					
ANR	8240704	MemberAccess	default_font_value . value		8240648	0					
ANR	8240705	Identifier	default_font_value		8240648	0					
ANR	8240706	Identifier	value		8240648	1					
ANR	8240707	Identifier	array		8240648	1					
ANR	8240708	Identifier	data		8240648	1					
ANR	8240709	CastExpression	( const byte * ) default_font		8240648	1					
ANR	8240710	CastTarget	const byte *		8240648	0					
ANR	8240711	Identifier	default_font		8240648	1					
ANR	8240712	ExpressionStatement	default_font_value . value . array . size = strlen ( default_font )	150:8:5001:5059	8240648	5	True				
ANR	8240713	AssignmentExpression	default_font_value . value . array . size = strlen ( default_font )		8240648	0		=			
ANR	8240714	MemberAccess	default_font_value . value . array . size		8240648	0					
ANR	8240715	MemberAccess	default_font_value . value . array		8240648	0					
ANR	8240716	MemberAccess	default_font_value . value		8240648	0					
ANR	8240717	Identifier	default_font_value		8240648	0					
ANR	8240718	Identifier	value		8240648	1					
ANR	8240719	Identifier	array		8240648	1					
ANR	8240720	Identifier	size		8240648	1					
ANR	8240721	CallExpression	strlen ( default_font )		8240648	1					
ANR	8240722	Callee	strlen		8240648	0					
ANR	8240723	Identifier	strlen		8240648	0					
ANR	8240724	ArgumentList	default_font		8240648	1					
ANR	8240725	Argument	default_font		8240648	0					
ANR	8240726	Identifier	default_font		8240648	0					
ANR	8240727	ExpressionStatement	"code = px_find_existing_font ( & default_font_value , ppxfont , pxs )"	151:8:5069:5132	8240648	6	True				
ANR	8240728	AssignmentExpression	"code = px_find_existing_font ( & default_font_value , ppxfont , pxs )"		8240648	0		=			
ANR	8240729	Identifier	code		8240648	0					
ANR	8240730	CallExpression	"px_find_existing_font ( & default_font_value , ppxfont , pxs )"		8240648	1					
ANR	8240731	Callee	px_find_existing_font		8240648	0					
ANR	8240732	Identifier	px_find_existing_font		8240648	0					
ANR	8240733	ArgumentList	& default_font_value		8240648	1					
ANR	8240734	Argument	& default_font_value		8240648	0					
ANR	8240735	UnaryOperationExpression	& default_font_value		8240648	0					
ANR	8240736	UnaryOperator	&		8240648	0					
ANR	8240737	Identifier	default_font_value		8240648	1					
ANR	8240738	Argument	ppxfont		8240648	1					
ANR	8240739	Identifier	ppxfont		8240648	0					
ANR	8240740	Argument	pxs		8240648	2					
ANR	8240741	Identifier	pxs		8240648	0					
ANR	8240742	IfStatement	if ( code < 0 )		8240648	7					
ANR	8240743	Condition	code < 0	153:12:5175:5182	8240648	0	True				
ANR	8240744	RelationalExpression	code < 0		8240648	0		<			
ANR	8240745	Identifier	code		8240648	0					
ANR	8240746	PrimaryExpression	0		8240648	1					
ANR	8240747	ReturnStatement	return code ;	154:12:5197:5208	8240648	1	True				
ANR	8240748	Identifier	code		8240648	0					
ANR	8240749	ExpressionStatement	message [ 0 ] = ( char ) 0	155:8:5218:5238	8240648	8	True				
ANR	8240750	AssignmentExpression	message [ 0 ] = ( char ) 0		8240648	0		=			
ANR	8240751	ArrayIndexing	message [ 0 ]		8240648	0					
ANR	8240752	Identifier	message		8240648	0					
ANR	8240753	PrimaryExpression	0		8240648	1					
ANR	8240754	CastExpression	( char ) 0		8240648	1					
ANR	8240755	CastTarget	char		8240648	0					
ANR	8240756	PrimaryExpression	0		8240648	1					
ANR	8240757	ExpressionStatement	"px_concat_font_name ( message , px_max_error_line , & default_font_value )"	156:8:5248:5316	8240648	9	True				
ANR	8240758	CallExpression	"px_concat_font_name ( message , px_max_error_line , & default_font_value )"		8240648	0					
ANR	8240759	Callee	px_concat_font_name		8240648	0					
ANR	8240760	Identifier	px_concat_font_name		8240648	0					
ANR	8240761	ArgumentList	message		8240648	1					
ANR	8240762	Argument	message		8240648	0					
ANR	8240763	Identifier	message		8240648	0					
ANR	8240764	Argument	px_max_error_line		8240648	1					
ANR	8240765	Identifier	px_max_error_line		8240648	0					
ANR	8240766	Argument	& default_font_value		8240648	2					
ANR	8240767	UnaryOperationExpression	& default_font_value		8240648	0					
ANR	8240768	UnaryOperator	&		8240648	0					
ANR	8240769	Identifier	default_font_value		8240648	1					
ANR	8240770	ExpressionStatement	"strcat ( message , ""substituted for "" )"	157:8:5326:5361	8240648	10	True				
ANR	8240771	CallExpression	"strcat ( message , ""substituted for "" )"		8240648	0					
ANR	8240772	Callee	strcat		8240648	0					
ANR	8240773	Identifier	strcat		8240648	0					
ANR	8240774	ArgumentList	message		8240648	1					
ANR	8240775	Argument	message		8240648	0					
ANR	8240776	Identifier	message		8240648	0					
ANR	8240777	Argument	"""substituted for """		8240648	1					
ANR	8240778	PrimaryExpression	"""substituted for """		8240648	0					
ANR	8240779	ExpressionStatement	"px_concat_font_name ( message , px_max_error_line , pfnv )"	158:8:5371:5424	8240648	11	True				
ANR	8240780	CallExpression	"px_concat_font_name ( message , px_max_error_line , pfnv )"		8240648	0					
ANR	8240781	Callee	px_concat_font_name		8240648	0					
ANR	8240782	Identifier	px_concat_font_name		8240648	0					
ANR	8240783	ArgumentList	message		8240648	1					
ANR	8240784	Argument	message		8240648	0					
ANR	8240785	Identifier	message		8240648	0					
ANR	8240786	Argument	px_max_error_line		8240648	1					
ANR	8240787	Identifier	px_max_error_line		8240648	0					
ANR	8240788	Argument	pfnv		8240648	2					
ANR	8240789	Identifier	pfnv		8240648	0					
ANR	8240790	ExpressionStatement	"code = px_record_warning ( message , false , pxs )"	159:8:5434:5479	8240648	12	True				
ANR	8240791	AssignmentExpression	"code = px_record_warning ( message , false , pxs )"		8240648	0		=			
ANR	8240792	Identifier	code		8240648	0					
ANR	8240793	CallExpression	"px_record_warning ( message , false , pxs )"		8240648	1					
ANR	8240794	Callee	px_record_warning		8240648	0					
ANR	8240795	Identifier	px_record_warning		8240648	0					
ANR	8240796	ArgumentList	message		8240648	1					
ANR	8240797	Argument	message		8240648	0					
ANR	8240798	Identifier	message		8240648	0					
ANR	8240799	Argument	false		8240648	1					
ANR	8240800	Identifier	false		8240648	0					
ANR	8240801	Argument	pxs		8240648	2					
ANR	8240802	Identifier	pxs		8240648	0					
ANR	8240803	IfStatement	if ( code >= 0 )		8240648	3					
ANR	8240804	Condition	code >= 0	161:8:5495:5503	8240648	0	True				
ANR	8240805	RelationalExpression	code >= 0		8240648	0		>=			
ANR	8240806	Identifier	code		8240648	0					
ANR	8240807	PrimaryExpression	0		8240648	1					
ANR	8240808	ReturnStatement	"return pl_load_resident_font_data_from_file ( pxs -> memory , * ppxfont ) ;"	162:8:5514:5580	8240648	1	True				
ANR	8240809	CallExpression	"pl_load_resident_font_data_from_file ( pxs -> memory , * ppxfont )"		8240648	0					
ANR	8240810	Callee	pl_load_resident_font_data_from_file		8240648	0					
ANR	8240811	Identifier	pl_load_resident_font_data_from_file		8240648	0					
ANR	8240812	ArgumentList	pxs -> memory		8240648	1					
ANR	8240813	Argument	pxs -> memory		8240648	0					
ANR	8240814	PtrMemberAccess	pxs -> memory		8240648	0					
ANR	8240815	Identifier	pxs		8240648	0					
ANR	8240816	Identifier	memory		8240648	1					
ANR	8240817	Argument	* ppxfont		8240648	1					
ANR	8240818	UnaryOperationExpression	* ppxfont		8240648	0					
ANR	8240819	UnaryOperator	*		8240648	0					
ANR	8240820	Identifier	ppxfont		8240648	1					
ANR	8240821	ElseStatement	else		8240648	0					
ANR	8240822	ReturnStatement	return code ;	164:8:5599:5610	8240648	0	True				
ANR	8240823	Identifier	code		8240648	0					
ANR	8240824	ReturnType	int		8240648	1					
ANR	8240825	Identifier	px_find_font		8240648	2					
ANR	8240826	ParameterList	"px_value_t * pfnv , uint symbol_set , px_font_t * * ppxfont , px_state_t * pxs"		8240648	3					
ANR	8240827	Parameter	px_value_t * pfnv	129:13:4281:4297	8240648	0	True				
ANR	8240828	ParameterType	px_value_t *		8240648	0					
ANR	8240829	Identifier	pfnv		8240648	1					
ANR	8240830	Parameter	uint symbol_set	129:32:4300:4314	8240648	1	True				
ANR	8240831	ParameterType	uint		8240648	0					
ANR	8240832	Identifier	symbol_set		8240648	1					
ANR	8240833	Parameter	px_font_t * * ppxfont	129:49:4317:4336	8240648	2	True				
ANR	8240834	ParameterType	px_font_t * *		8240648	0					
ANR	8240835	Identifier	ppxfont		8240648	1					
ANR	8240836	Parameter	px_state_t * pxs	130:13:4352:4367	8240648	3	True				
ANR	8240837	ParameterType	px_state_t *		8240648	0					
ANR	8240838	Identifier	pxs		8240648	1					
ANR	8240839	CFGEntryNode	ENTRY		8240648		True				
ANR	8240840	CFGExitNode	EXIT		8240648		True				
ANR	8240841	Symbol	code		8240648						
ANR	8240842	Symbol	default_font_value . value . array		8240648						
ANR	8240843	Symbol	px_max_error_line		8240648						
ANR	8240844	Symbol	pxs -> memory		8240648						
ANR	8240845	Symbol	default_font_value . value . array . data		8240648						
ANR	8240846	Symbol	default_font_value . value . array . size		8240648						
ANR	8240847	Symbol	pfnv		8240648						
ANR	8240848	Symbol	default_font_value . type		8240648						
ANR	8240849	Symbol	strlen		8240648						
ANR	8240850	Symbol	* ppxfont		8240648						
ANR	8240851	Symbol	default_font_value . value		8240648						
ANR	8240852	Symbol	pl_load_resident_font_data_from_file		8240648						
ANR	8240853	Symbol	* pxs		8240648						
ANR	8240854	Symbol	symbol_set		8240648						
ANR	8240855	Symbol	& default_font_value		8240648						
ANR	8240856	Symbol	* message		8240648						
ANR	8240857	Symbol	pxd_array		8240648						
ANR	8240858	Symbol	ppxfont		8240648						
ANR	8240859	Symbol	false		8240648						
ANR	8240860	Symbol	pxs		8240648						
ANR	8240861	Symbol	message		8240648						
ANR	8240862	Symbol	px_find_existing_font		8240648						
ANR	8240863	Symbol	default_font_value		8240648						
ANR	8240864	Symbol	px_record_warning		8240648						
ANR	8240865	Symbol	pxd_ubyte		8240648						
ANR	8240866	Symbol	default_font		8240648						
